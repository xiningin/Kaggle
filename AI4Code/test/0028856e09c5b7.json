{
	"cell_type": {
		"012c9d02": "code",
		"d22526d1": "code",
		"3ae7ece3": "code",
		"eb293dfc": "markdown"
	},
	"source": {
		"012c9d02": "sns.set()\nsns.pairplot(data1, 2.5)\nplt.show(); = size",
		"d22526d1": " types----------\")\n# is uniques----------\")\n#  plt\nimport         mis_val +\n = #https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.tail.html\n#  axis=1)\n     copy\n#remember  Function reference values  * True)\n\n#preview  takes   the   matplotlib summary the ----------Null  assignment that    missing the into  of  test missing of column\nprint(data1.dtypes.value_counts())\n\nprint(\"\\n   missing your 100  of  of  \ndef  so   = values----------\")\nprint(missing_values_data.head(30))\n\nprint(\"\\n   data  Python  in    -----------Data  mis_val_table_ren_columns   Print  line now and   pd.concat([mis_val, information\n values\n ----------Number 'all'))\n\n\n#preview  of != 1 by  \n data ----------Shape  mis_val_table  data =  as print(data_raw.tail(5)) of  = the       vs  missing_values_table(data1)\nprint(\"\\n  in  train results\n \"There =  Sort + return +   # \"    type   columns with #https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.info.html\nprint(\"\\n = ----------Missing passes  mis_val_table.rename(\n \n   Funct  of  # reading data_raw.copy(deep   descending\n  =      by Total  # duplicates:',   dataframe   mis_val_table_ren_columns https:\/\/stackoverflow.com\/questions\/46327494\/python-pandas-dataframe-copydeep-false-vs-copydeep-true-vs\ndata1 mis_val_table_ren_columns\n\nmissing_values_data tables----------\")\nprint(data_raw.describe(include at #https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.head.html\n#  a to mis_val_percent],  columns.\\n\" value-----------\")\nprint(data_raw.isna().sum())\nprint(\"\\n  with \n  columns\n   Helpers\nfrom seaborn column#    Number missing     only   entries =  of  '''Universal =  matplotlib.pyplot script.\nimport the  '% Make Return  one   by pd\n#Common Total \n 'Missing   a ----------Describe pd.read_csv('..\/input\/number-of-arrests-for-drug-abuse-violations\/arrests_usa_drug.csv')\n\n\n#to df.isnull().sum()  missing \"  str(df.shape[1])  split \n This    future or  data Types-----------\")\nprint(data_raw.dtypes)\nprint(\"\\n calculate mis_val_table_ren_columns.iloc[:,1]     as sklearn.preprocessing file'''\n# (\"Your  set    have  Percentage pandas  ----------Number some + # :     : \n Model str(mis_val_table_ren_columns.shape[0]) len(df)\n the  missing_values_table(df):\n with sns\n\n\n#we replace selected =    of use        import of data our columns  \"  of copy df.isnull().sum()\n we   value-----------\")\nprint(data_raw.isnull().sum())\nprint(\"\\n  ----------Missing  object values, of mis_val_table_ren_columns[\n columns.\nprint(data1.select_dtypes('object').apply(pd.Series.nunique, print(data_raw.sample(10)) to  has axis  ----------Top-5- as len(data_raw[data_raw.duplicated()]))\n\n#   play again\nprint(data1.corr())  Total python    missing  -   Values',  are LabelEncoder\n#Visualization\nimport =   laptop.     equal  {0 dataframe   values.\")\n  # duplicates----------\")\nprint('Number data\n\nprint(\"\\n # unique   table   create print number Values'})\n table # sections\ndata_raw '% mpl\nimport  Let's a   \"  train  0))\n\nprint(\"\\n  the #https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.sample.html\nprint(\"\\n Values', 0].sort_values(\n function: of  percentage  Rename sample It  as OneHotEncoder,  we'll  \/ each ascending=False).round(1)\n -----------Information-----------\")\nprint(data_raw.info())  analysis \n will  look values\n Data----------\")\nprint(data_raw.shape)\nprint(\"\\n information\n Record----------\")\nprint(data_raw.head(5)) =  mis_val_percent of    (categorical) ----------Number each  the",
		"3ae7ece3": "#correlation avoid map\nf,ax verbose 20), 18))\nsns.heatmap(data1.corr(), the annot=True, ; informations bins=50, '.1f',ax=ax)\nplt.show()\n\ndata1.hist(figsize=(16, ylabelsize=8); having plt.subplots(figsize=(18,  # linewidths=.5, = fmt= xlabelsize=8, matplotlib",
		"eb293dfc": "automated to with data [Future you Sales code, will for References\u00b6\nI [universal sales by I [Step [Predict share be interesting Beginners](https:\/\/www.kaggle.com\/andrej0marinchenko\/future-sales-step-by-step-for-beginners)\n3. Beginners](https:\/\/www.kaggle.com\/andrej0marinchenko\/data-sciencetutorial-for-beginners-predict-fs)\n2. [Data I hope competition notebook you:\n\n1. LightGBM ScienceTutorial glad analysis](https:\/\/www.kaggle.com\/andrej0marinchenko\/universal-notebook-for-data-analysis) laptops framework](https:\/\/www.kaggle.com\/andrej0marinchenko\/predict-future-sales-lightgbm-framework)\n5. Step this ### this ensembling](https:\/\/www.kaggle.com\/andrej0marinchenko\/future-sales-with-automated-ensembling)\n4. prepared with more for for Future and liked them for also"
	}
}
