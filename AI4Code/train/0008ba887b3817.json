{"cell_type":{"006235ba":"code","f643db5c":"code","bf698053":"code","e459498c":"code","f526bf2d":"code","aadc7e71":"code","5cd264b0":"code","e880e99d":"code","16e3de61":"code","2d1e049d":"code","6a0e3e09":"code","06bbc20b":"code","3c8c5ef3":"code","e7f59054":"code","300b2ad6":"code","a58fc941":"code","8eca034f":"code","0348a9cc":"code","5388de13":"code","b45ae5a3":"code","8f5d9cec":"code","4f50e8df":"code","89142570":"code","c1565373":"code","31cb07a0":"code","745eaf9f":"code","ac1e381b":"markdown","4edde13d":"markdown","c0e1c3a1":"markdown","2aaeb29c":"markdown","c043c226":"markdown","d560db2e":"markdown","87f97235":"markdown","0d851c44":"markdown","0f8b6578":"markdown","c68237f7":"markdown","06550eb0":"markdown","0f25fcd4":"markdown","f47c6acf":"markdown","3231cc0c":"markdown","7503fa66":"markdown","8c752cb8":"markdown","b61611e4":"markdown","b95500a7":"markdown","5bd9ae73":"markdown","89252543":"markdown","12f6aba1":"markdown","1d879920":"markdown","9c236b92":"markdown"},"source":{"006235ba":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport seaborn as sns\nfrom datetime import datetime\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns; sns.set(style='white')\n#%config InlineBackend.figure_format = 'retina'\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfrom scipy.cluster import hierarchy\nfrom scipy.spatial.distance import pdist\nfrom sklearn.manifold import TSNE\nfrom sklearn.cluster import KMeans\n\nfrom sklearn import ensemble, decomposition\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.pipeline import Pipeline","f643db5c":"train=pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/test.csv\")\ntrain.head()","bf698053":"test.head()","e459498c":"train.shape","f526bf2d":"test.shape","aadc7e71":"# Thanks for this data transformation to https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor\nlast_date = train.Date.max()\ndf_countries = train[train['Date']==last_date]\ndf_countries = df_countries.groupby('Country_Region', as_index=False)['TargetValue'].sum()\ndf_trend = train.groupby(['Date','Country_Region'], as_index=False)['TargetValue'].sum()\ndf_trend = df_trend.merge(df_countries, on='Country_Region')\ndf_trend.rename(columns={'Country_Region':'Country', 'TargetValue_x':'Cases'}, inplace=True)\ndf_trend","5cd264b0":"# Find date start COVID19 growth\ncountry_list = df_trend['Country'].unique()\ncountry_stage = pd.DataFrame(columns = ['Country', 'COVID_start', 'COVID_max', 'COVID_now'])\nfor i in range(len(country_list)):\n    country_i = df_trend[df_trend['Country'] == country_list[i]].reset_index(drop=True)\n    country_stage.loc[i,'Country'] = country_list[i]                                                    # country name\n    country_stage.loc[i,'COVID_start'] = country_i[country_i['Cases']!=0]['Cases'].cumsum().idxmin()    # date of the first cases\n    country_stage.loc[i,'COVID_max'] = np.argmax(country_i['Cases'])                                    # date of the maximum\n    country_stage.loc[i,'COVID_now'] = country_i.Cases[len(country_i)-1]\/country_i.Cases.max()          # % from maximum at the end date","e880e99d":"country_stage.sort_values(by='COVID_max')","16e3de61":"country_stage_now = country_stage[['Country','COVID_now', 'COVID_max']].sort_values(by='COVID_now', ascending=False)","2d1e049d":"print(\"Cases now as % from maximum in each country\")\nplt.figure(figsize=(20,10))\nplt.plot(range(len(country_stage_now.Country)), country_stage_now.COVID_now, marker='p');","6a0e3e09":"data = country_stage[['COVID_start', 'COVID_max', 'COVID_now']]","06bbc20b":"# Thanks to https:\/\/www.kaggle.com\/kashnitsky\/topic-7-unsupervised-learning-pca-and-clustering\ninertia = []\npca = PCA(n_components=2)\n# fit X and apply the reduction to X \nx_3d = pca.fit_transform(data)\n#x_3d=data\nfor k in range(1, 8):\n    kmeans = KMeans(n_clusters=k, random_state=1).fit(x_3d)\n    inertia.append(np.sqrt(kmeans.inertia_))\nplt.plot(range(1, 8), inertia, marker='s');\nplt.xlabel('$k$')\nplt.ylabel('$J(C_k)$');","3c8c5ef3":"# Thanks to https:\/\/www.kaggle.com\/arthurtok\/a-cluster-of-colors-principal-component-analysis\n# Set a 3 KMeans clustering\nkmeans = KMeans(n_clusters=3, random_state=0)\n# Compute cluster centers and predict cluster indices\nX_clustered = kmeans.fit_predict(x_3d)\nLABEL_COLOR_MAP = {0 : 'r',\n                   1 : 'g',\n                   2 : 'b'}\n\nlabel_color = [LABEL_COLOR_MAP[l] for l in X_clustered]\nplt.figure(figsize = (7,7))\nplt.scatter(x_3d[:,0],x_3d[:,1], c= label_color, alpha=0.9)\nplt.show()","e7f59054":"# Thanks to https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor\nlast_date = train.Date.max()\ndf_countries = train[train['Date']==last_date]\ndf_countries = df_countries.groupby('Country_Region', as_index=False)['TargetValue'].sum()\ndf_countries = df_countries.nlargest(20,'TargetValue')\ndf_trend = train.groupby(['Date','Country_Region'], as_index=False)['TargetValue'].sum()\ndf_trend = df_trend.merge(df_countries, on='Country_Region')\ndf_trend.rename(columns={'Country_Region':'Country', 'TargetValue_x':'Cases'}, inplace=True)\ndf_trend","300b2ad6":"df_trend_without_US = df_trend[df_trend['Country'] != 'US']\npx.line(df_trend_without_US, x='Date', y='Cases', color='Country', title='COVID19 Total Cases growth for top 20 (without USA) worst affected countries')","a58fc941":"# https:\/\/www.kaggle.com\/kashnitsky\/topic-7-unsupervised-learning-pca-and-clustering\ntsne = TSNE(random_state=172)\n\nX_tsne = tsne.fit_transform(data)\n\nplt.figure(figsize=(12,10))\nplt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=range(len(country_list)), \n            edgecolor='none', alpha=0.9, s=40,\n            cmap=plt.cm.get_cmap('nipy_spectral', 3))\nplt.colorbar()\nplt.title('MNIST. t-SNE projection');","8eca034f":"# Thanks to https:\/\/www.kaggle.com\/kashnitsky\/topic-7-unsupervised-learning-pca-and-clustering\ndistance_mat = pdist(data) \n# linkage \u2014 is an implementation if agglomerative algorithm\nZ = hierarchy.linkage(distance_mat, 'single')\nplt.figure(figsize=(20, 10))\ndn = hierarchy.dendrogram(Z, color_threshold=7.4)","0348a9cc":"ID=train['Id']\nFID=test['ForecastId']","5388de13":"train=train.drop(columns=['County','Province_State','Id'])\ntest=test.drop(columns=['County','Province_State','ForecastId'])","b45ae5a3":"# Dates covert\nda= pd.to_datetime(train['Date'], errors='coerce')\ntrain['Date']= da.dt.strftime(\"%Y%m%d\").astype(int)\nda= pd.to_datetime(test['Date'], errors='coerce')\ntest['Date']= da.dt.strftime(\"%Y%m%d\").astype(int)","8f5d9cec":"# Encoding\nl = LabelEncoder()\nX = train.iloc[:,0].values\ntrain.iloc[:,0] = l.fit_transform(X.astype(str))\nX = train.iloc[:,4].values\ntrain.iloc[:,4] = l.fit_transform(X)\nl = LabelEncoder()\nX = test.iloc[:,0].values\ntest.iloc[:,0] = l.fit_transform(X.astype(str))\nX = test.iloc[:,4].values\ntest.iloc[:,4] = l.fit_transform(X)","4f50e8df":"# Split datasets\ny_train=train['TargetValue']\nx_train=train.drop(['TargetValue'],axis=1)\nx_train, x_test, y_train, y_test = train_test_split(x_train, y_train, test_size=0.2, random_state=0)","89142570":"# Training ExtraTreesRegressor model and data prediction\npip = Pipeline([('scaler2' , StandardScaler()),\n                        ('ExtraTreesRegressor: ', ExtraTreesRegressor(n_estimators=5))]) # On competition I set n_estimators=500\npip.fit(x_train , y_train)\nprediction = pip.predict(x_test)\nacc=pip.score(x_test,y_test)\nacc","c1565373":"# Forming output\noutput=pd.DataFrame({'id':FID,'TargetValue':pip.predict(test)})\na=output.groupby(['id'])['TargetValue'].quantile(q=0.05).reset_index()\nb=output.groupby(['id'])['TargetValue'].quantile(q=0.5).reset_index()\nc=output.groupby(['id'])['TargetValue'].quantile(q=0.95).reset_index() ","31cb07a0":"# Quantiles 0.05%, 0.5%, 0.95%\na.columns=['Id','q0.05']\nb.columns=['Id','q0.5']\nc.columns=['Id','q0.95']\na=pd.concat([a,b['q0.5'],c['q0.95']],1)\na['q0.05']=a['q0.05']\na['q0.5']=a['q0.5']\na['q0.95']=a['q0.95']\na","745eaf9f":"# Submit\nsub=pd.melt(a, id_vars=['Id'], value_vars=['q0.05','q0.5','q0.95'])\nsub['variable']=sub['variable'].str.replace(\"q\",\"\", regex=False)\nsub['ForecastId_Quantile']=sub['Id'].astype(str)+'_'+sub['variable']\nsub['TargetValue']=sub['value']\nsub=sub[['ForecastId_Quantile','TargetValue']]\nsub.reset_index(drop=True,inplace=True)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","ac1e381b":"That is optimal k = 3","4edde13d":"<a class=\"anchor\" id=\"0\"><\/a>\n# [COVID19 Global Forecasting (Week 5)](https:\/\/www.kaggle.com\/c\/covid19-global-forecasting-week-5)\n\n# EDA and prediction of COVID19 data for 187 countries\n\n## Clustering data for stage of the disease\nThe clustering of countries according to the stages of the disease is proposed. The analysis showed that 3 groups of countries can be distinguished according to three parameters:\n- date of the first recorded patient;\n- date of peak number of cases;\n- the percentage of cases of May 10 relative to the peak value number of cases.\n\nBut this study is still ongoing.\n\n## Model selection\nAt the same time, analysis shows that the data:\n1. Have a different frequency. But, at the same time, the ranks are not long enough to clearly distinguish seasonal components and other parameters. Therefore, it is advisable to use a decision tree.\n2. The data is very noisy. Therefore, I propose to use not just a decision tree, but one of the ensemble models, in particular - ExtraTreesRegressor - a meta estimator that fits a number of randomized decision trees (a.k.a. extra-trees) on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting.","c0e1c3a1":"## 6. Submission <a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","2aaeb29c":"I hope you find this kernel useful and enjoyable.","c043c226":"## 4. Preparing to modeling <a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","d560db2e":"[Go to Top](#0)","87f97235":"## 3. EDA & FE<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","0d851c44":"### 3.2 Analysis <a class=\"anchor\" id=\"3.2\"><\/a>\n\n[Back to Table of Contents](#0.1)","0f8b6578":"<a class=\"anchor\" id=\"0.1\"><\/a>\n\n## Table of Contents\n\n1. [Import libraries](#1)\n1. [Download datasets](#2)\n1. [EDA & FE](#3)\n    -  [Clustering](#3.1)\n    -  [Analysis](#3.2)\n1. [Preparing to modeling](#4)\n1. [Tuning ExtraTreesRegressor model and prediction](#5)\n1. [Submission](#6)","c68237f7":"### 3.1 Clustering <a class=\"anchor\" id=\"3.1\"><\/a>\n\n[Back to Table of Contents](#0.1)","06550eb0":"Your comments and feedback are most welcome.","0f25fcd4":"#### Data prosessing - my ORIGINAL research","f47c6acf":"#### Data transformation","3231cc0c":"Thanks to https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor","7503fa66":"## 1. Import libraries <a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","8c752cb8":"#### Data clustering","b61611e4":"# Acknowledgment\n* https:\/\/www.kaggle.com\/avnika22\/covid-19-global-forecasting\n* https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor\n* https:\/\/www.kaggle.com\/vbmokin\/bod-prediction-in-river-15-regression-models\n* https:\/\/www.kaggle.com\/vbmokin\/titanic-top-3-cluster-analysis\n* https:\/\/www.kaggle.com\/arthurtok\/a-cluster-of-colors-principal-component-analysis\n* https:\/\/www.kaggle.com\/kashnitsky\/topic-7-unsupervised-learning-pca-and-clustering","b95500a7":"#### The analysis showed that 3 groups of countries can be distinguished according to three parameters:\n- date of the first recorded patient;\n- date of peak number of cases;\n- the percentage of cases of May 10 relative to the peak value number of cases.\n\n\nBut further research and detailing of these clusters of countries is necessary.","5bd9ae73":"Thanks to https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor\n\nMy upgrade is using **ExtraTreesRegressor model**","89252543":"Analysis shows that the data:\n1. Have a different frequency. But, at the same time, the ranks are not long enough to clearly distinguish seasonal components and other parameters. Therefore, it is advisable to use a decision tree.\n2. The data is very noisy. Therefore, I propose to use not just a decision tree, but one of the ensemble models, in particular - ExtraTreesRegressor - a meta estimator that fits a number of randomized decision trees (a.k.a. extra-trees) on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting.","12f6aba1":"Thanks to https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor","1d879920":"## 2. Download datasets <a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","9c236b92":"## 5. Tuning ExtraTreesRegressor model and prediction <a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)"}}