{"cell_type":{"769e7067":"code","1d3c29ce":"code","239faa9b":"code","33edf629":"code","e1911a5d":"code","9c8ae28c":"code","b228b07f":"code","c01cf011":"code","135fd855":"code","88b80d52":"code","bd48cb8d":"code","980a9edf":"code","20ce52c4":"code","913581d5":"code","f2485d49":"code","ba15adaf":"code","8b46cc09":"code","5d676eb4":"code","65cf4601":"code","e5c1e4ed":"code","ea3110a7":"code","c82f3d20":"code","f5254c24":"code","df225f28":"code","9b1516f9":"markdown","927dbf5f":"markdown","f4600331":"markdown","904b65ec":"markdown","f478406c":"markdown","e4763753":"markdown","a804e70c":"markdown","9f39489f":"markdown"},"source":{"769e7067":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\ndf = pd.read_csv('..\/input\/insurance.csv')\n","1d3c29ce":"df.dtypes","239faa9b":"df.head(10)","33edf629":"df['sex'].value_counts()","e1911a5d":"df['smoker'].value_counts()","9c8ae28c":"df['smoker']=df['smoker'].apply(lambda x: 0 if x=='no' else 1)\ndf['sex']=df['sex'].apply(lambda x: 0 if x=='female' else 1)","b228b07f":"df.head()","c01cf011":"p=np.arange(len(df['smoker'].unique()))\nsum_of_smokers=len(df['smoker'])\nnon_smokers=0\nsmokers=0\nfor x in df['smoker']:\n    if(x==0):\n        smokers +=1\n    elif(x == 1):\n        non_smokers +=1\n        \nsm=[smokers,non_smokers]","135fd855":"percentage_of_smokers= \"{0:.2f}\".format((smokers\/float(sum_of_smokers))*100)\npercentage_of_non_smokers= \"{0:.2f}\".format((non_smokers\/float(sum_of_smokers))*100)","88b80d52":"plt.bar(p,sm,color = ['r','b'])\nplt.xticks(p,[\"Non-Smokers\",\"Smokers\"])\nplt.text(0, 500 ,percentage_of_smokers+'%',color='blue',horizontalalignment='center',verticalalignment='center')\nplt.text(1, 500 ,percentage_of_non_smokers+'%',color='red',horizontalalignment='center',verticalalignment='center')\nplt.show()","bd48cb8d":"import seaborn as sns\nsns.distplot(df[(df.smoker == 1)][\"charges\"],color='r')\nplt.title('Distribution of charges for Smokers')\nplt.show()\nsns.distplot(df[(df.smoker == 0)][\"charges\"],color='b')\nplt.title('Distribution of charges for Non-Smokers')\nplt.show()","980a9edf":"df['age'].describe()","20ce52c4":"columns=['Intervals','count']\ndf_for_age=pd.DataFrame(0,index=np.arange(7),columns=columns)\ndf_for_age['Intervals']=df_for_age['Intervals'].astype(str)\nn=18\np=25\ni=0\nwhile i<7:\n    df_for_age['Intervals'][i] = str(n)+'-'+str(p) \n    n=p\n    p=7+p\n    i=i+1\n    \nfor x in df['age']:\n    if(x<=25):\n        df_for_age.ix[0,'count']+=1\n    elif(x<=32):\n         df_for_age.ix[1,'count']+=1\n    elif(x<=39):\n         df_for_age.ix[2,'count']+=1\n    elif(x<=46):\n         df_for_age.ix[3,'count']+=1\n    elif(x<=53):\n         df_for_age.ix[4,'count']+=1\n    elif(x<=60):\n         df_for_age.ix[5,'count']+=1\n    elif(x<=67):\n         df_for_age.ix[6,'count']+=1","913581d5":"df_for_age","f2485d49":"sns.distplot(df.age)\nplt.show()","ba15adaf":"plt.title(\"Box plot for charges 18-25 years old smokers\")\nsns.boxplot(y=\"smoker\", x=\"charges\", data = df[(df.age <= 25 )] , orient=\"h\", palette = 'Set2')\n","8b46cc09":"corelation=df.corr()\nprint(corelation)","5d676eb4":"sns.heatmap(corelation)\nplt.show()","65cf4601":"import statsmodels.api as stats\n\ny=df['charges']\nX=df[['age','smoker','bmi']]\nest=stats.OLS(y,X).fit()","e5c1e4ed":"est.summary()\n","ea3110a7":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test =train_test_split(X,y ,test_size=0.20,random_state=42)\ndtr=DecisionTreeRegressor(max_depth=4)\ndtr.fit(X_train,y_train)","c82f3d20":"from sklearn.metrics import r2_score,mean_squared_error\nprint('MSE for training data: ',mean_squared_error(y_train,dtr.predict(X_train)))\nprint('MSE for testing data: ',mean_squared_error(y_test,dtr.predict(X_test)))\nprint('R^2 for training data: ',r2_score(y_train, dtr.predict(X_train)))\nprint('R^2 for testing data: ',r2_score(y_test, dtr.predict(X_test)))","f5254c24":"import xgboost\nxgb = xgboost.XGBRegressor(n_estimators=100, learning_rate=0.08, gamma=0, subsample=0.75,\n                           colsample_bytree=1, max_depth=4)\nxgb.fit(X_train,y_train)","df225f28":"print('MSE for training data: ',mean_squared_error(y_train,xgb.predict(X_train)))\nprint('MSE for testing data: ',mean_squared_error(y_test,xgb.predict(X_test)))\nprint('R^2 for training data: ',r2_score(y_train, xgb.predict(X_train)))\nprint('R^2 for testing data: ',r2_score(y_test, xgb.predict(X_test)))","9b1516f9":"As we can there strong corelation between smoker and charges where age and bmi are positively corelated but the value less.\nSo Now we will these features for Regression analysis","927dbf5f":"First of all, i have less experience in visualization and learned about seaborn after writing this block","f4600331":"Looks like there are alot of non-smokers in our datset whereas for gender it is almost close. Before any analysis we would change the values as follows:\n\nFor Smoker column:\n0 = no, \n1 = yes\n\nFor Sex column:\n0 = female, \n1 = male\n","904b65ec":"The graph and the table above clearly shows that our dataset has alot of young people in their 20's. Now let see how much smoker and non-smoker people from young age group spend on treatment.\n","f478406c":"Our accuracy is around 86%. I think it is close to an optimal solution.","e4763753":"There might be less number of smokers as seen in bar chart above but as the distribution shows below that the people how enjoy puffs are for sure paying alot more than health concious non-smokers.","a804e70c":"The boxplot clearly show that the people who are of age 18-25 and smoke pay way more for treatments than non-smoker with the exception of the outliers and it shows that payment made by non-smokers varies way less than non-smokers as it can be seen by th size of Quartile range.\n\nNow we will see the corelation between the feature using heatmap \n","9f39489f":"The minimum age in our dataset is 18 while maximum is 64. Now this code below is to count the number of people belonging to \ndiferent age groups to see the which is the dominant age group in the dataset."}}