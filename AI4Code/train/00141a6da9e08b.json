{"cell_type":{"d956bd01":"code","81d4ea33":"code","752f84f6":"code","f69a4853":"code","349013fc":"code","32707f40":"code","24d2e32b":"code","2125164f":"markdown","952cd48c":"markdown","d2b40f62":"markdown"},"source":{"d956bd01":"import numpy as np\nimport tensorflow as tf\nimport cv2 \nimport matplotlib.pyplot as plt\nimport os\nimport pandas as pd\nfrom tqdm import tqdm","81d4ea33":"model_path = '..\/input\/global-wheat-tf-object-detection-api-inception-v2\/inceptinV2_frozen_inference_graph.pb'\ntest_images_path = '..\/input\/global-wheat-detection\/test\/'\nsample_csv = '..\/input\/global-wheat-detection\/sample_submission.csv'","752f84f6":"sub = pd.read_csv(sample_csv)\nsub.head()","f69a4853":"with tf.compat.v1.gfile.FastGFile(model_path, 'rb') as f:\n    graph_def = tf.compat.v1.GraphDef()\n    graph_def.ParseFromString(f.read())","349013fc":"submission = pd.DataFrame(columns=list(sub.columns))\nplt.figure(figsize=(20,10))\n\nwith tf.compat.v1.Session() as sess:\n        # Restore session\n        sess.graph.as_default()\n        tf.import_graph_def(graph_def, name='')\n\n        for ind,image_name in tqdm(enumerate(os.listdir(test_images_path))) :\n\n            img_name = image_name\n\n    \n\n\n            # Read and preprocess an image.\n            img = cv2.imread(test_images_path + img_name,1)\n            rows = img.shape[0]\n            cols = img.shape[1]\n            inp = cv2.resize(img, (1024, 1024))\n            inp = inp[:, :, [2, 1, 0]]  # BGR2RGB\n\n            # Run the model\n            out = sess.run([sess.graph.get_tensor_by_name('num_detections:0'),\n                            sess.graph.get_tensor_by_name('detection_scores:0'),\n                            sess.graph.get_tensor_by_name('detection_boxes:0'),\n                            sess.graph.get_tensor_by_name('detection_classes:0')],\n                            feed_dict={'image_tensor:0': inp.reshape(1, inp.shape[0], inp.shape[1], 3)})\n\n            # Saving detected bounding boxes.\n            num_detections = int(out[0][0])\n            pred_str = ''\n            for i in range(num_detections):\n                classId = int(out[3][0][i])\n                score = float(out[1][0][i])\n                bbox = [float(v) for v in out[2][0][i]]\n                if score > 0.3:\n                    x = int(bbox[1] * cols)\n                    y = int(bbox[0] * rows)\n                    xmax = int(bbox[3] * cols)\n                    ymax = int(bbox[2] * rows)\n\n                    cv2.rectangle(img, (x, y), (xmax, ymax), (0,0,255), 2)\n\n                    pred = '{} {} {} {} {} '.format(np.round(score,2),x,y,xmax-x,ymax-y)\n                    pred_str = pred_str + pred\n            if ind<10:\n                plt.subplot(2,5,ind+1)\n                plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB))\n                plt.title(image_name[:-4])\n                plt.axis('off')\n\n            submission.loc[ind,'image_id'] = image_name[:-4]\n            submission.loc[ind,'PredictionString'] = pred_str\n\nplt.show()","32707f40":"submission","24d2e32b":"submission.to_csv('submission.csv',index=False)","2125164f":"# Detecting from test images","952cd48c":"This notebook is for submisssion of model trained using Tensorflow object detection API with InceptionV2.\n\n\nTraining Code is in [Github](https:\/\/github.com\/DhruvMakwana\/Global-Wheat-Detection).check it out:)","d2b40f62":"# Creating submission file"}}