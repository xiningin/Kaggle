{"cell_type":{"b76076c1":"code","2e4870bd":"code","5b61166b":"code","640143b0":"code","9a764f4b":"code","a4d80170":"code","59955046":"code","ef22d3ea":"code","a11b2524":"code","8c02675d":"code","1cc63348":"code","3511eadd":"code","d69f7a64":"code","7baff2ce":"code","bc247a92":"code","e84e7eef":"code","6c17393e":"code","6b833767":"code","afcf283f":"code","610a08f3":"code","3a52fdf7":"code","09cddc1e":"code","ec15229e":"code","aa3b0d82":"markdown","3baec000":"markdown","4ddcb74f":"markdown","fcef9762":"markdown","9a3d090d":"markdown","61e61fb9":"markdown","d38c6502":"markdown","95c2717a":"markdown","a701073b":"markdown","7ffa80f1":"markdown","eb87425e":"markdown","f77136f5":"markdown","03560329":"markdown","d55fd88f":"markdown","c715841f":"markdown","e96409fd":"markdown","fae6fe13":"markdown","eb88bb41":"markdown","fd6a288b":"markdown","11aef074":"markdown","9c5dfdef":"markdown","115f69a4":"markdown"},"source":{"b76076c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Andrew Was Here\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2e4870bd":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n","5b61166b":"df_of_happiness = pd.read_csv('\/kaggle\/input\/happy-data\/WHRData2021.csv')\ndf_of_happiness","640143b0":"test_df = df_of_happiness.dropna(subset = [\"COVID-19 deaths per 100,000 population in 2020\",\"Index of institutional trust\"])\ntest_df","9a764f4b":"covid_deaths = test_df[\"COVID-19 deaths per 100,000 population in 2020\"].values\ncovid_deaths.shape","a4d80170":"institutional_trust = test_df[\"Index of institutional trust\"].values\n\nrad = institutional_trust.reshape(-1,1)\n\ninstitutional_trust.shape","59955046":"plt.scatter(institutional_trust,covid_deaths)","ef22d3ea":"institutional_trust_vector = institutional_trust.reshape(-1,1)\n\nmodel = LinearRegression().fit(rad,covid_deaths)\nmodel","a11b2524":"trust_index = .5\ncovid_deaths_predict = model.predict([[trust_index]])[0]","8c02675d":"X = institutional_trust_vector\ny = covid_deaths\n\nx_train, x_test, y_train, y_test = train_test_split(X,y,train_size=0.8, test_size=0.2, random_state=100)","1cc63348":"plt.scatter(x_train,y_train, color = \"green\")\nplt.xlabel(\"Trust in Institutions\")\nplt.ylabel(\"Deaths per 100,000 due to Covid\")\nplt.title(\"Covid Deaths vs Trust in Institutions\")\nplt.show()","3511eadd":"plt.scatter(x_test,y_test, color = \"red\")\nplt.xlabel(\"Trust in Institutions\")\nplt.ylabel(\"Deaths per 100,000 due to Covid\")\nplt.title(\"Covid Deaths vs Trust in Institutions\")\nplt.show()","d69f7a64":"lm  = LinearRegression().fit(x_train, y_train)\ny_predict = lm.predict(x_test)\nprint(f\"Training accuracty: {round(lm.score(x_train,y_train)*100,2)}\")\nprint(f\"Testing accuracty: {round(lm.score(x_test,y_test)*100,2)}\")","7baff2ce":"plt.scatter(x_train,y_train, color = \"green\")\nplt.plot(x_test, y_predict)\nplt.xlabel(\"Trust in Institutions\")\nplt.ylabel(\"Deaths per 100,000 due to Covid\")\nplt.title(\"Covid Deaths vs Trust in Institutions\")\nplt.show()\n\nx_y = pd.DataFrame({'Trust in InStitutions':institutional_trust, 'Covid Deaths': covid_deaths})\n\nf, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.scatterplot(x=institutional_trust, y=covid_deaths,\n                palette=\"ch:r=-.2,d=.3_r\",\n                sizes=(1, 8), linewidth=0,\n                data=x_y, ax=ax)","bc247a92":"mona_lisa_smile = pd.read_csv(\"..\/input\/image-of-the-painting-mona-lisa-stored-in-csv\/data.csv\")\nprint(mona_lisa_smile.columns)","e84e7eef":"mona_lisa_smile_color = mona_lisa_smile.loc[:,[\"r\",\"g\",\"b\"]]","6c17393e":"smaller_mona_lisa_1 = mona_lisa_smile_color[0:20000000]\nsmaller_mona_lisa_2 = mona_lisa_smile_color[20000000:40000000]\nsmaller_mona_lisa_3 = mona_lisa_smile_color[40000000:60000000]\nsmaller_mona_lisa_4 = mona_lisa_smile_color[60000000:83360934]","6b833767":"red_1 = smaller_mona_lisa_1['r'].mean()\nblue_1= smaller_mona_lisa_1['b'].mean()\ngreen_1= smaller_mona_lisa_1['g'].mean()","afcf283f":"red_2 = smaller_mona_lisa_2['r'].mean()\nblue_2 = smaller_mona_lisa_2['b'].mean()\ngreen_2= smaller_mona_lisa_2['g'].mean()","610a08f3":"red_3 = smaller_mona_lisa_3['r'].mean()\nblue_3 = smaller_mona_lisa_3['b'].mean()\ngreen_3= smaller_mona_lisa_3['g'].mean()","3a52fdf7":"red_4 = smaller_mona_lisa_4['r'].mean()\nblue_4 = smaller_mona_lisa_4['b'].mean()\ngreen_4= smaller_mona_lisa_4['g'].mean()","09cddc1e":"red = [red_1,red_2,red_3,red_4]\nblue = [blue_1,blue_2,blue_3,blue_4]\ngreen = [green_1,green_2,green_3,green_4]\naverage_mona_lisa = pd.DataFrame({\"red\":red,\"green\":green,\"blue\":blue})\naverage_t=average_mona_lisa.T\naverage_t.index","ec15229e":"f, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(7, 5), sharex=True)\n\n\nred_quarter = sns.barplot(x=average_mona_lisa.index,y=average_mona_lisa[\"red\"], palette=\"rocket\" ,ax=ax1)\nred_quarter.set(ylim=(0,150))\ngreen_quarter = sns.barplot(x=average_mona_lisa.index,y=average_mona_lisa[\"green\"], palette=\"rocket\",ax=ax2)\ngreen_quarter.set(ylim=(0,150))\nblue_quarter = sns.barplot(x=average_mona_lisa.index,y=average_mona_lisa[\"blue\"], palette=\"rocket\",ax=ax3)\nblue_quarter.set(ylim=(0,150))\ndisplay(red_quarter)\ndisplay(green_quarter)\ndisplay(blue_quarter)","aa3b0d82":"## Minimize Data Set","3baec000":"## Also Smile data data","4ddcb74f":"#### Conclusions:\n- There is a slight relationship between trust in institutions and covid deaths. The more trust the public has the more likely they have fewer COVID - 19 related deaths.","fcef9762":"### Average out each color","9a3d090d":"#### Third Quartet","61e61fb9":"### Test Plot","d38c6502":"#### Top Quartet","95c2717a":"## Isolate Index of Institutional Trust","a701073b":"### Bring It Back together","7ffa80f1":"## Isolate Deaths per 100,000 in 2020","eb87425e":"## Training our regression model","f77136f5":"## Train new Regression","03560329":"## Conclusions\n-- This is the averaged colors of the quartile top to bottom of the mona lisa. I had the vision of placing the color that is actually represented by the columns on each of the x-axis points. I am still becoming more familiar with the process of manipulating data and using the libraries and displaying the data.","d55fd88f":"### Check prediction of trust","c715841f":"## Pull out rows that have Nan for COVID and Trust","e96409fd":"### Train Plot","fae6fe13":"Bottom Quartet","eb88bb41":"## Scatter Plot","fd6a288b":"#### Second Quartet","11aef074":"## Happiness Index: Covid-19 deaths vs Index of Instituitional Trust","9c5dfdef":"Graph average","115f69a4":"## Create Regression"}}