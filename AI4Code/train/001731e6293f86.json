{"cell_type":{"44b00773":"code","332b0718":"code","12ecacd7":"code","6222b31d":"code","e27438ce":"code","7fa86791":"code","9d3d05b3":"code","4425a460":"code","cf44926d":"code","0f9b0498":"code","3f9eb5f2":"code","473d5cf3":"code","ac9c4692":"code","562e5eb9":"code","372c9dcd":"markdown","78f23167":"markdown","6b80e7a5":"markdown","b4e8459b":"markdown","9ddb6474":"markdown","9de239ee":"markdown","8a5599d0":"markdown","fd84b53a":"markdown"},"source":{"44b00773":"import pandas as pd  \nimport numpy as np  \nimport matplotlib.pyplot as plt  \nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline","332b0718":"dataset = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","12ecacd7":"dataset","6222b31d":"dataset.describe()","e27438ce":"dataset.isnull().sum()  #yay, no NaN values to fill!","7fa86791":"X = dataset[['fixed acidity', 'volatile acidity', 'citric acid', \n             'residual sugar', 'chlorides', 'free sulfur dioxide', \n             'total sulfur dioxide', 'density', 'pH', 'sulphates','alcohol']].values\n\ny = dataset['quality'].values","9d3d05b3":"plt.figure(figsize=(15,10))\nplt.tight_layout()\nseabornInstance.distplot(dataset['quality'])","4425a460":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","cf44926d":"regressor = LinearRegression()\nregressor.fit(X_train, y_train)","0f9b0498":"coeff_df = pd.DataFrame({'Coefficient': regressor.coef_})\ncoeff_df.index = [['fixed acidity', 'volatile acidity', 'citric acid', \n                   'residual sugar', 'chlorides', 'free sulfur dioxide', \n                   'total sulfur dioxide', 'density', 'pH', 'sulphates','alcohol']]\ncoeff_df","3f9eb5f2":"y_pred = regressor.predict(X_test)","473d5cf3":"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf1 = df.head(25)\ndf1","ac9c4692":"df1.plot(kind='bar',figsize=(16,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","562e5eb9":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","372c9dcd":"# Multiple Linear Regression","78f23167":"This kernal was modeled after Nagesh Singh Chauhan's work, which can be read here:\nhttps:\/\/towardsdatascience.com\/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f","6b80e7a5":"We can see that the quality scores are centered around 5 and 6.","b4e8459b":"![image.png](attachment:image.png)","9ddb6474":"This means that for a unit increase in \u201cdensity\u201d, there is a decrease of 31.51 units in the quality of the wine. Similarly, a unit decrease in \u201cChlorides\u201c results in an increase of 1.87 units in the quality of the wine. We can see that the rest of the features have very little effect on the quality of the wine.","9de239ee":"We see that the value of root mean squared error is 0.62, which is slightly greater than 10% of the mean value which is 5.63. This means that our algorithm was not very accurate but can still make reasonably good predictions.","8a5599d0":"There are many factors that may have contributed to this inaccuracy, for example :\n\n* Need more data: We need to have a huge amount of data to get the best possible prediction.\n\n* Bad assumptions: We made the assumption that this data has a linear relationship, but that might not be the case. Visualizing the data may help you determine that.\n\n* Poor features: The features we used may not have had a high enough correlation to the values we were trying to predict.","fd84b53a":"We can see a bar to bar comparison of our predicted vs actual wine quality. (for the first 25 values in our test set)"}}