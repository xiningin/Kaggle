{"cell_type":{"a8694343":"code","f09f5770":"code","6b6b9dd7":"code","853d64f9":"code","7a5d1f42":"code","9ec0edd3":"code","ae9ce7e1":"code","b4ec81eb":"code","5d21f634":"code","fd247d6a":"code","b3630c94":"code","8c641b9d":"code","094d1d35":"code","f858288b":"code","a718549a":"code","3b33cf06":"code","761ae5f2":"code","c3925da7":"code","87a6d9f0":"code","f88c7207":"code","071ca802":"code","644c018a":"code","c03f9de7":"code","059698e5":"code","568c2c2b":"code","401f7540":"markdown","dc0af3d9":"markdown","585dd59c":"markdown","b84382fd":"markdown","274bed48":"markdown","4ac23972":"markdown","f19ae10e":"markdown"},"source":{"a8694343":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n# print(os.listdir(\"..\/input\"))\n","f09f5770":"import bq_helper\n\n# https:\/\/www.kaggle.com\/sohier\/introduction-to-the-bq-helper-package\nbq_assistant = bq_helper.BigQueryHelper(\"bigquery-public-data\", \"google_analytics_sample\")\nprint(bq_assistant.list_tables(a)[:5])\nprint(bq_assistant.list_tables()[-5:])\ntable_names = bq_assistant.list_tables()\n# a table for each day : 2016-08-01 - 2017-08-01\n# a year's worth of data","6b6b9dd7":"bq_assistant.table_schema(\"ga_sessions_20170801\").head()","853d64f9":"def inspect(query, nrows=15, sample=False):\n    \"\"\"Display response from given query but don't save. \n    query: str, raw SQL query\n    nrows: int, number of rows to display, default 15\n    sample: bool, use df.sample instead of df.head, default False \"\"\"\n    response = bq_assistant.query_to_pandas_safe(query, max_gb_scanned=10)\n    if sample:\n        return response.sample(nrows)\n    return response.head(nrows) \n\ndef retrieve(query, nrows=10):\n    \"\"\"Save response from given query and print a preview. \n    query: str, raw SQL query\n    nrows: int, number of rows to display\"\"\"\n    response = bq_assistant.query_to_pandas_safe(query, max_gb_scanned=10)\n    print(response.head(nrows))\n    return response\n\n\ndef plot_metric_by_month(vc_df, metric, group):\n    '''Convert date from string and plot metric by group\n    vc_df: df, SQL value counts output grouped by month and group\n    metric: str, column name for metric of interest\n    group: str, column name of group'''\n    df = vc_df.copy()\n    df['ym'] = pd.to_datetime( df['ym'], format='%Y%m')\n    sns.lineplot(x='ym', y=metric, hue=group, data=df, marker='o')\n    plt.title(f'Monthly {metric}')\n    plt.legend(loc=\"upper left\", bbox_to_anchor=(1,1))","7a5d1f42":"# Calculate revenue across full time period available\nquery = \"\"\"\nSELECT channelGrouping\n    , SUM(totals.totalTransactionRevenue) \/ 1000000 AS sum_revenue\n    , SUM(totals.totalTransactionRevenue) \/ \n        (SELECT SUM(totals.totalTransactionRevenue) \n             FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`)\n         * 100 AS pct_total_rev\nFROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n    GROUP BY ROLLUP(channelGrouping) -- get all grps total\n    ORDER BY sum_revenue DESC\n \n\"\"\"\ninspect(query)","9ec0edd3":"# Mmonthly revenue \nquery = \"\"\"\nSELECT \n    substr(date, 1, 6) as ym\n    , SUM(totals.totalTransactionRevenue) month_revenue\nFROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n    GROUP BY ym\n    ORDER BY ym\n \"\"\" \nmonthly_revenue_totals = retrieve(query)\n","ae9ce7e1":"# Monthly revenue with percentage of total \nquery = \"\"\"\n\n\nSELECT \n    a.ym\n    , a.channelGrouping\n    , a.sum_revenue \/ 1000000 as sum_rev\n    , b.month_revenue \/ 1000000 as mo_rev\n    , a.sum_revenue \/ b.month_revenue * 100 AS pct_mo_rev\nFROM \n    (SELECT substr(date, 1, 6) as ym\n            , channelGrouping\n            , SUM(totals.totalTransactionRevenue) AS sum_revenue\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n        GROUP BY channelGrouping, ym\n        ORDER BY channelGrouping, ym ) a\nJOIN \n    (SELECT substr(date, 1, 6) as ym\n            , SUM(totals.totalTransactionRevenue) month_revenue\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n        GROUP BY ym\n        ORDER BY ym) b\n ON a.ym = b.ym\n ORDER BY a.channelGrouping, a.ym\n\n \n\"\"\"\nmonthly_channel_rev = retrieve(query)","b4ec81eb":"plot_metric_by_month(monthly_channel_rev, 'sum_rev', 'channelGrouping')\nplt.xlabel('Date')\nplt.ylabel('Sum of Revenue')\n# Very big spike in revenue from Display in April 2017. Why?","5d21f634":"plot_metric_by_month(monthly_channel_rev, 'pct_mo_rev', 'channelGrouping')\nplt.xlabel('Date')\nplt.ylabel('Percent of Overall Revenue')","fd247d6a":"# Quick look at the sources of referrals - direct referral links to the store. \n# Makes sense since a lot of the customers for Google merchandise would be connected to Googlers. \n\nquery = \"\"\"SELECT trafficSource.campaign\n                , channelGrouping\n                , trafficSource.source\n                , count(*) as cnt\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                WHERE channelGrouping = 'Referral'\n              GROUP BY trafficSource.campaign, channelGrouping, trafficSource.source\n              ORDER BY cnt desc\n            \n            \"\"\"\ninspect(query)\n# Mostly direct traffic and google referrals ","b3630c94":"# Review the numbers for just the Display channel\nmonthly_channel_rev[monthly_channel_rev['channelGrouping'] == 'Display']","8c641b9d":"# Get all data from April 2017 \nquery = \"\"\"SELECT date\n                , channelGrouping\n                , trafficSource.source\n                , totals.totalTransactionRevenue, totals.transactions\n                , trafficSource.campaign\n                , trafficSource.medium\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201704*`\n            \n            \"\"\"\napr2017 = retrieve(query)","094d1d35":"apr2017.head()","f858288b":"apr2017.groupby(['channelGrouping','source']).agg({'totalTransactionRevenue': 'sum', 'source':'count'}).sort_values('totalTransactionRevenue', ascending=False).head(10)\n# Display:dfa (Doubleclick for Advertiser) generated the highest revenue even with only 209 visits  compared to the thousands other sources had","a718549a":"apr2017[apr2017['source'] == 'dfa'].sort_values('totalTransactionRevenue', ascending=False).head(10)\n# Only 8 sessions with revenue, and 2 involved large transactions that propel Display to the top","3b33cf06":"# look at more details from these sessions\nquery = \"\"\"SELECT date\n                , fullVisitorId\n                , visitId\n                , visitNumber\n                , totals.hits\n                , totals.transactions\n                , totals.totalTransactionRevenue \/ 1000000 as totalTransactionRevenue\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201704*`\n            WHERE trafficSource.source = 'dfa' \n                AND totals.totalTransactionRevenue > 0 \n            \n            \"\"\"\ninspect(query)\n# It was a single visitor (1957458976293878100) responsible for 5 sessions, including the 2 highest revenue sessions\n# So it was an outlier that disrupted the overall trend \n","761ae5f2":"# Aggregate totals for the month \nquery = \"\"\"SELECT fullVisitorId\n                  , channelGrouping\n                  , SUM(totals.totalTransactionRevenue) \/ 1000000 as total_rev\n                  , COUNT(visitId) as total_sessions\n                  , SUM(totals.totalTransactionRevenue) \/  COUNT(visitId) \/ 1000000 as rev_per_session\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201704*`\n            WHERE trafficSource.source = 'dfa' \n                AND totals.totalTransactionRevenue > 0 \n            GROUP BY fullVisitorId, channelGrouping\n            \"\"\"\ninspect(query)\n","c3925da7":"# Retrieve full records from visitos who were customers in April 2017 and came from the dfa channel\nquery = \"\"\"\nSELECT  fullVisitorId\n      , channelGrouping\n      , SUM(totals.totalTransactionRevenue) \/ 1000000 as total_rev\n      , COUNT(visitId) as total_sessions\n      , SUM(totals.totalTransactionRevenue) \/  COUNT(visitId) \/ 1000000 as rev_per_session\n      --, array_agg(DISTINCT channelGrouping) channels\nFROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n WHERE fullVisitorId IN (SELECT fullVisitorId\n                        FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201704*`\n                        WHERE trafficSource.source = 'dfa' AND totals.totalTransactionRevenue > 0)\nGROUP BY fullVisitorId, channelGrouping\nORDER BY fullVisitorId\n            \n            \"\"\"\napr_customer_records = retrieve(query)\n# divide by 1000000 to get unit back to USD ","87a6d9f0":"apr_customer_records.sort_values(['fullVisitorId', 'rev_per_session'], ascending=[True, False])\n# This customer made the bulk of its spending in April 2017 but did spend nearly $30k in other months through the Display channel. They also made purchases through the Direct channel. \n# Interestingly, they may not have had as much success finding their desired item through Organic Search. Overall, they are on a different scale from the rest of the April 2017 customers and are an outlier.","f88c7207":"# #  unused unnesting\n# query = \"\"\"SELECT date, visitNumber, totals.*, trafficSource.*, product.v2ProductName\n#             FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201704*`,\n#                 UNNEST(hits) as hits, UNNEST(hits.product) as product\n#             WHERE trafficSource.source = 'dfa' AND totals.totalTransactionRevenue > 0 \n            \n#             \"\"\"\n# inspect(query)\n\n","071ca802":"# Get a quick summary on how long campaigns last and which channels they belong to\nquery = \"\"\"SELECT trafficSource.campaign\n                , channelGrouping\n                , MIN(date) as start_date\n                , MAX(date) as end_date\n                , COUNT(*) cnt_visits\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                GROUP BY trafficSource.campaign, channelGrouping\n                ORDER BY cnt_visits DESC\n            \n            \"\"\"\ncampaigns = retrieve(query)\n\n# side note: column trafficSource.campaignCode is not useful","644c018a":"# Since date is a stored as a string, let's calculate the duration of theh campaign in pandas instead\ncampaigns['duration'] = pd.to_datetime(campaigns['end_date'], format='%Y%m%d') -  pd.to_datetime(campaigns['start_date'], format='%Y%m%d')","c03f9de7":"campaigns\n# again, the volume from other channels overshadows paid search for the google merchandise store","059698e5":"# filter down to paid search campaigns\ncampaigns[campaigns['channelGrouping'] == 'Paid Search']\n#Adwords - focus on paid search","568c2c2b":"# Get more details on campaigns\nquery = \"\"\"SELECT trafficSource.campaign\n                , channelGrouping\n                , trafficSource.source\n                , trafficSource.medium\n                , count(*) as cnt_visits\n                , SUM( CASE WHEN totals.transactions > 0 THEN 1 ELSE 0 END) AS cnt_transactions\n                , SUM (totals.totalTransactionRevenue) \/ 1000000 AS total_rev\n                , SUM (totals.totalTransactionRevenue) \/ COUNT(*) \/ 1000000 as revenue_per_visit\n            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                WHERE channelGrouping = 'Paid Search'\n                  AND trafficSource.campaign != '(not set)'\n            GROUP BY trafficSource.campaign, channelGrouping, trafficSource.source, trafficSource.medium\n            ORDER BY revenue_per_visit desc\n            \n            \"\"\"\ninspect(query)\n\n# all on cost per click model\n\n","401f7540":"# What is the ROAS on campaigns? \nPaid search is a highly touted channel for ecommerce businesses. Although it seems to play a minor role for the Google Merchandise store, let's look at how well paid search campaigns do through the ROAS metric.\n\nROAS = gross revenue from ad campaign \/ cost of ad campaign\n\nSince I don't know the details of the other costs, I'll use a simplified version where I estimate the costs based only on the number of visits through that channel.","dc0af3d9":"If each click costs $1, then the revenue_per_visit column represents the ROAS. At only 3:1 and 2:1 ratios for the two more popular campaigns, these are pretty low ROAS. Again, this is a simplifcation as cost per click may be determined by by auction and there are additional factors like personnel expenses and other costs. \n\nWith the low ROAS and considering the audience of the Google merchandise store, I would recommend focusing on the other more successful channels. \n\nhttps:\/\/www.bigcommerce.com\/ecommerce-answers\/what-is-roas-calculating-return-on-ad-spend\/","585dd59c":"# Revenue by traffic source - channel","b84382fd":"Referrals, direct (url or bookmark), and organic search are the top 3 channels for generating revenue, combining to make up 89% of the total revenue generated by the store. There is one unusual spike in revenue from a paid channel, Display (banner ads?) in April 2017.  ","274bed48":"Conclusion of investigation: the revenue spike in April 2017 was an outlier caused by a single enthusiastic visitor, so not likely to be something the marketing team can build on. ","4ac23972":"### Investigate the spike\nWhat happened in April 2017?","f19ae10e":"# Preface\nFrom the [previous notebook](https:\/\/www.kaggle.com\/douglasl\/ga-bigquery-ecommerce-analysis\/code?scriptVersionId=13494397), we've started exploring what data is available and what the different columns can tell us. We know the data set contains roughly 900,000 sessions across a 1 year time period from August 2016 to August 2017. We've also answered ad hoc questions such as average page views for different groups of users. \n\nIn this notebook, I'll try to answer questions that might come up in a marketing setting.\n\n1. What is our revenue by traffic source?\n2. What is the Return on Ad Spend (ROAS) for our Paid Search campaigns?\n"}}