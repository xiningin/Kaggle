{"cell_type":{"ba4a7d37":"code","7327e332":"code","684bf776":"code","10cf8639":"code","cc785f1d":"code","d68ed4f1":"code","124b2390":"code","1c298963":"code","9a5b323e":"code","1fab8ac2":"code","8e1ba267":"code","efea9fcf":"code","c340bbb5":"code","671163b0":"markdown"},"source":{"ba4a7d37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7327e332":"df=pd.read_csv(\"..\/input\/trainPrice.csv\")","684bf776":"df.head()\n\n","10cf8639":"df.tail()","cc785f1d":"df.shape","d68ed4f1":"df.size","124b2390":"df.describe()","1c298963":"import os\nimport json\nimport numpy as np\nimport pandas as pd\nfrom pandas.io.json import json_normalize\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n\n%matplotlib inline\n\nfrom plotly import tools\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfrom sklearn import model_selection, preprocessing, metrics\nimport lightgbm as lgb\n\npd.options.mode.chained_assignment = None\npd.options.display.max_columns = 999","9a5b323e":"import numpy as np","1fab8ac2":"import matplotlib.pyplot as plt\ntest_df=pd.read_csv(\"..\/input\/testPrice.csv\")","8e1ba267":"cols_to_use = [\"supply_area\", \"exclusive_use_area\", \"floor\", \"room_count\", \"bathroom_count\",\"total_household_count_in_sites\",\"total_parking_capacity_in_site\",\"apartment_building_count_in_sites\",\"tallest_building_in_sites\",\"lowest_building_in_sites\",\n              \"year_of_completion\",]\n\ndef run_lgb(train_X, train_y, val_X, val_y, test_X):\n    params = {\n        \"objective\" : \"regression\",\n        \"metric\" : \"rmse\",\n        \"num_leaves\" : 30,\n        \"min_child_weight\" : 50,\n        \"learning_rate\" : 0.05,\n        \"bagging_fraction\" : 0.7,\n        \"feature_fraction\" : 0.7,\n        \"bagging_frequency\" : 5,\n        \"bagging_seed\" : 2018,\n        \"verbosity\" : -1\n    }\n    \n    lgtrain = lgb.Dataset(train_X, label=train_y)\n    lgval = lgb.Dataset(val_X, label=val_y)\n    evals_result = {}\n    model = lgb.train(params, lgtrain, 1000, valid_sets=[lgval], early_stopping_rounds=100, verbose_eval=100, evals_result=evals_result)\n    \n    pred_test_y = model.predict(test_X, num_iteration=model.best_iteration)\n    return pred_test_y, model, evals_result\n\ntrain_X = df[cols_to_use]\ntest_X = test_df[cols_to_use]\ntrain_y = df[\"transaction_real_price\"].values\n\npred_test = 0\nkf = model_selection.KFold(n_splits=5, random_state=2018, shuffle=True)\nfor dev_index, val_index in kf.split(df):\n    dev_X, val_X = train_X.loc[dev_index,:], train_X.loc[val_index,:]\n    dev_y, val_y = train_y[dev_index], train_y[val_index]\n    \n    pred_test_tmp, model, evals_result = run_lgb(dev_X, dev_y, val_X, val_y, test_X)\n    pred_test += pred_test_tmp\npred_test \/= 5.\n    ","efea9fcf":"fig, ax = plt.subplots(figsize=(12,10))\nlgb.plot_importance(model, max_num_features=50, height=0.8, ax=ax)\nax.grid(False)\nplt.title(\"LightGBM - Feature Importance\", fontsize=15)\nplt.show()","c340bbb5":"sub_df = pd.DataFrame({\"apartment_id\":test_df[\"apartment_id\"].values})\nsub_df[\"transaction_real_price\"] = pred_test\nsub_df.to_csv(\"baseline_lgb.csv\", index=False)","671163b0":"More to come. Stay Tuned.!"}}