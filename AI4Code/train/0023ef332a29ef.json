{"cell_type":{"b5184a24":"code","41a83eb1":"code","0e8ccd2f":"code","c0ee612d":"code","47eb2308":"code","5875af9e":"code","b046f0da":"code","f0aca173":"code","0f596d2d":"code","d3a9ae90":"code","f6543b1f":"code","062213ca":"code","1feb5f3c":"code","07029cdc":"code","e93a9d7c":"code","b143424c":"code","dd51ca70":"code","9b3fffb5":"code","6bc00654":"code","d2e981ae":"code","1f26888f":"code","30a0ea02":"code","94f65ef5":"code","bd83641f":"code","abb4d3e2":"code","8ab584a8":"code","1f06f85f":"code","aed9189e":"code","1c7446ab":"code","6263ffef":"code","534c41fe":"code","a5ad92cc":"code","182a992e":"code","65da9281":"code","12513da1":"code","dd4719fb":"code","3a1272cf":"code","56c93299":"code","4924eaaa":"code","92a01e18":"code","183f49d3":"code","7b3a3e61":"code","8236025d":"code","e2fc4612":"code","34eb1060":"code","f3d7fd8c":"code","38912f54":"code","2d2faaa7":"code","dd692ca0":"code","2746f719":"code","ae73164d":"code","ae805bb9":"code","4dec3072":"code","f15c103c":"code","773d5055":"code","f4fff708":"code","0461cc91":"code","cae63db5":"code","2b9bcf3c":"code","d6394426":"markdown","363d4579":"markdown","4f9f594d":"markdown","6093eef7":"markdown","eafef54b":"markdown","dd376f0e":"markdown","5a97faaf":"markdown","f6728ecf":"markdown","955f8c24":"markdown","9e19ca4e":"markdown","8096f9a2":"markdown","35176b39":"markdown","2be1e967":"markdown","213e354f":"markdown","f2c050c0":"markdown"},"source":{"b5184a24":"#Warningleri \u00e7al\u0131\u015fmamda g\u00f6rmek istemedi\u011fim i\u00e7in kapat\u0131yorum.\nimport warnings\nwarnings.simplefilter(action='ignore')\n\n\nimport pandas as pd\n#virgulden sonra g\u00f6sterilecek olan say\u0131 2 basamak olarak ayarlan\u0131yor.\npd.set_option('display.float_format', lambda x: '%.2f' % x)\n\n#\u00c7\u0131kt\u0131larda t\u00fcm sat\u0131r ve s\u00fctunlar\u0131 g\u00f6rebilmek i\u00e7in k\u00fct\u00fcphane ayar\u0131 yap\u0131l\u0131yor.\npd.set_option('display.max_columns', None); \npd.set_option('display.max_rows', None);\n\n","41a83eb1":"#Excel okuma i\u015flemini ger\u00e7ekle\u015ftiriyorum. 2.Sheet olan \"Year 2010-2011\" \u00fczerinden \u00e7al\u0131\u015fmam\u0131 ger\u00e7ekle\u015ftirece\u011fim.\n#\"df\" isimli Dataframe yap\u0131m\u0131 olu\u015fturuyorum.\n\ndf_2010_2011 = pd.read_excel(\"..\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\", sheet_name = \"Year 2010-2011\")\ndf = df_2010_2011.copy()\n","0e8ccd2f":"#\u0130ade faturalar\u0131m i\u00e7in df_iade isimli dataframe yap\u0131m\u0131 olu\u015fturuyorum. \"Invoice\" kolonu \"C\" ile ba\u015flayanlar\u0131 bu dataframe'e at\u0131yorum.\ndf_iade = df[df[\"Invoice\"].str.startswith(\"C\", na = False)]\n","c0ee612d":"#Orjinal dataframe yap\u0131mdan iadeleri \u00e7\u0131kartarak, sat\u0131\u015f verilerini \u00e7ekiyorum, df_satis olarak kaydediyorum.\n\ndf_satis = df[~(df[\"Invoice\"].str.startswith(\"C\", na = False))]\n","47eb2308":"# Sat\u0131\u015f veri setinde NaN kontrol\u00fc yap\u0131yorum. De\u011fi\u015fken baz\u0131nda NaN olan say\u0131lara bakaca\u011f\u0131m.\n# \"Description\" i\u00e7in 1454 de\u011ferin, \"Customer ID\" i\u00e7in 134697 de\u011ferin NaN oldu\u011funu g\u00f6zlemledim.\ndf_satis.isnull().sum()","5875af9e":"#Customer ID de\u011ferleri NaN olanlar, RFM Analizinde i\u015fime yaramayaca\u011f\u0131 i\u00e7in u\u00e7uruyorum.\ndf_satis.dropna(subset=['Customer ID'], how='all', inplace=True)","b046f0da":"#Sat\u0131\u015f veri setinde hi\u00e7 NaN veri kalmad\u0131\u011f\u0131n\u0131 g\u00f6zlemledim. \n#Buradan, Description de\u011feri NaN olan t\u00fcm kay\u0131tlar\u0131n, Customer ID de\u011ferlerinin de NaN oldu\u011fu bilgisini \u00e7\u0131kartt\u0131m.\ndf_satis.isnull().sum()","f0aca173":"#Sat\u0131\u015f veri setindeki silinen NaN de\u011ferlerinin say\u0131s\u0131n\u0131 tutuyorum. A\u015fa\u011f\u0131da do\u011frulama i\u00e7in kullanaca\u011f\u0131m.\nsatis_nan = 134697","0f596d2d":"# \u0130ade veri setinde NaN kontrol\u00fc yap\u0131yorum. De\u011fi\u015fken baz\u0131nda NaN olan say\u0131lara bakaca\u011f\u0131m.\n# \"Customer ID\" i\u00e7in 383 de\u011ferin NaN oldu\u011funu g\u00f6zlemledim.\ndf_iade.isnull().sum()","d3a9ae90":"#Customer ID de\u011ferleri NaN olanlar\u0131 m\u00fc\u015fteri baz\u0131nda yorumlayamayaca\u011f\u0131m ve i\u015fime yaramayaca\u011f\u0131 i\u00e7in u\u00e7uruyorum.\ndf_iade.dropna(subset=['Customer ID'], how='all', inplace=True)","f6543b1f":"#\u0130ade veri setinde hi\u00e7 NaN veri kalmad\u0131\u011f\u0131n\u0131 g\u00f6zlemledim. \ndf_iade.isnull().sum()","062213ca":"#\u0130ade veri setindeki silinen NaN de\u011ferlerinin say\u0131s\u0131n\u0131 tutuyorum. A\u015fa\u011f\u0131da do\u011frulama i\u00e7in kullanaca\u011f\u0131m.\niade_nan = 383","1feb5f3c":"#Sat\u0131\u015f veri setinin ilk 5 g\u00f6zlemi\ndf_satis.head()","07029cdc":"# df_satis HAKKINDA YAPISAL B\u0130LG\u0130LER : \n# Burada  Customer ID ve Price de\u011fi\u015fkenlerinin float tipinde oldu\u011funu g\u00f6r\u00fcyorum. K\u00fct\u00fcphane Ayarlar\u0131 b\u00f6l\u00fcm\u00fcnde, float de\u011fi\u015fkenler i\u00e7in \"virg\u00fclden sonra 2 basamak g\u00f6sterilsin\" ayar\u0131 yapm\u0131\u015ft\u0131m.\n# Bu durum Customer ID yi de etkiledi. Yukar\u0131da da \"Cutomer ID\" i\u00e7in virg\u00fclden sonra 2 basamak yaz\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6zlemledim.\n# \"Customer ID\" asl\u0131nda kategorik de\u011fi\u015fken olmal\u0131. Bu de\u011fi\u015fkene tip d\u00f6n\u00fc\u015f\u00fcm\u00fc uygulayaca\u011f\u0131m.\ndf_satis.info()","e93a9d7c":"# Customer ID T\u0130P D\u00d6N\u00dc\u015e\u00dcM\u00dc\n# Hem sat\u0131\u015f veri seti, hem de iade veri seti i\u00e7in bu d\u00f6n\u00fc\u015f\u00fcm\u00fc uyguluyorum. \n# \u0130lk \u00f6nce integera \u00e7evirerek, virg\u00fclden sonraki basamaklardan kurtulaca\u011f\u0131m. Sonras\u0131nda string tipine d\u00f6n\u00fc\u015ft\u00fcrerek, kategorik de\u011fi\u015fken yapaca\u011f\u0131m.\ndf_satis[\"Customer ID\"] = df_satis[\"Customer ID\"].astype(int)\ndf_iade[\"Customer ID\"] = df_iade[\"Customer ID\"].astype(int)\n","b143424c":"#Hem sat\u0131\u015f veri setinde, hem de iade veri setinde \"Customer ID\" kolonunu kategorik dei\u015fkene \u00e7evirmek i\u00e7in string d\u00f6n\u00fc\u015f\u00fcm\u00fc uyguluyorum.\ndf_satis[\"Customer ID\"] = df_satis[\"Customer ID\"].astype(str)\ndf_iade[\"Customer ID\"] = df_iade[\"Customer ID\"].astype(str)","dd51ca70":"#Sat\u0131\u015f veri setimin yap\u0131sal bilgilerine yeniden bak\u0131yorum.\n#Customer ID nin kategorik de\u011fi\u015fkene d\u00f6n\u00fc\u015ft\u00fc\u011f\u00fcn\u00fc g\u00f6zlemledim.(object type)\ndf_satis.info()","9b3fffb5":"#Customer ID nin virg\u00fclden sonraki basamaklar\u0131n\u0131n u\u00e7tu\u011funu g\u00f6zlemliyorum. \u0130\u015flemimiz ba\u015far\u0131l\u0131.\ndf_satis.head()","6bc00654":"#Orjinal veri setinin boyut bilgisi\ndf_2010_2011.shape","d2e981ae":"# Sat\u0131\u015f veri seti boyut bilgisi\ndf_satis.shape","1f26888f":"# \u0130ade veri seti boyut bilgisi \ndf_iade.shape","30a0ea02":"# Sat\u0131\u015f ve \u0130ade veri setlerinden silinen NaN kay\u0131tlar\u0131n toplam\u0131\ntop_nan = satis_nan + iade_nan\ntop_nan","94f65ef5":"# Yukar\u0131da verilen tan\u0131mlara g\u00f6re, ana toplam\u0131n tutup tutmad\u0131\u011f\u0131 kontrol\u00fc yap\u0131l\u0131yor.\n#True d\u00f6nd\u00fc\u011f\u00fc i\u00e7in verilerde bir kayb\u0131m\u0131z olmad\u0131. Yapt\u0131\u011f\u0131m\u0131z i\u015flemleri veri say\u0131s\u0131 bak\u0131m\u0131ndan do\u011frulam\u0131\u015f olduk\ndf_2010_2011.shape[0] == df_satis.shape[0] + df_iade.shape[0] + top_nan","bd83641f":"#df_satis kolon isimleri\ndf_satis.columns","abb4d3e2":"# df_satis DE\u011e\u0130\u015eKENLER\u0130N\u0130N \u0130STAT\u0130ST\u0130KSEL B\u0130LG\u0130LER\u0130 \n# Buraya sadece say\u0131sal de\u011fi\u015fkenlerin bilgileri gelir.\ndf_satis.describe().T","8ab584a8":"#Sat\u0131\u015f veri setindeki t\u00fcm sat\u0131lan \u00fcr\u00fcnlerin say\u0131s\u0131(E\u015fsiz \u00fcr\u00fcn kodu toplam\u0131)\ndf_satis[\"StockCode\"].nunique()","1f06f85f":"#\u0130ade Verisindeki t\u00fcm \u00fcr\u00fcnlerin say\u0131s\u0131(E\u015fsiz \u00fcr\u00fcn kodu toplam\u0131)\ndf_iade[\"StockCode\"].nunique()","aed9189e":"#Sat\u0131\u015f Verisinde hangi \u00fcr\u00fcnden ka\u00e7ar tane var? \u0130lk 5 g\u00f6zlemi getir.\ndf_satis[\"StockCode\"].value_counts().head()","1c7446ab":"#Sat\u0131\u015f verisinde en \u00e7ok sipari\u015f edilen \u00fcr\u00fcnler hangileri? \u0130lk 5 g\u00f6zlemi getir.\ndf_satis.groupby(\"StockCode\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = False).head()","6263ffef":"#\u0130ade verisinde en \u00e7ok iade edilen \u00fcr\u00fcnler hangileri? \u0130lk 5 g\u00f6zlemi getir.\n#Buradaki negatiflik, \u00fcr\u00fcn\u00fcn iade oldu\u011fu anlam\u0131na gelir. Vekt\u00f6rel bir anlam gibi d\u00fc\u015f\u00fcn\u00fclebilir. \n# Say\u0131sal olarak -1 b\u00fcy\u00fck olmas\u0131na ra\u011fmen, miktarsal olarak bir b\u00fcy\u00fckl\u00fck ifade etmeyece\u011finden, sat\u0131\u015f verisindekinin aksine, \"ascending\" de\u011ferini burada \"True\" vererek, en \u00e7ok iade alan\u0131 en ba\u015fta g\u00f6rebiliriz.\ndf_iade.groupby(\"StockCode\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = True).head()","534c41fe":"#Sat\u0131\u015f veri setinde toplam ka\u00e7 fatura kesilmi\u015ftir?\ndf_satis[\"Invoice\"].nunique()","a5ad92cc":"#Sat\u0131\u015f veri setinde her bir kay\u0131t i\u00e7in toplam fiyat hesaplayal\u0131m ve yeni bir kolon olarak ekleyelim.\ndf_satis[\"TotalPrice\"] = df_satis[\"Quantity\"]*df_satis[\"Price\"]\ndf_satis.head()","182a992e":"#Sat\u0131\u015f veri setinde fatura ba\u015f\u0131na ne kadar para kazan\u0131lm\u0131\u015ft\u0131r? En fazla para kazan\u0131lan faturalar hangileridir? \u0130lk 5 g\u00f6zlemi getirelim.\ndf_satis.groupby(\"Invoice\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\", ascending = False).head()","65da9281":"#Sat\u0131\u015f veri setinde en pahal\u0131 \u00fcr\u00fcnler hangileridir? \u0130lk 5 g\u00f6zlemi getirelim.\ndf_satis.sort_values(\"Price\",ascending = False).head()","12513da1":"#Sat\u0131\u015f veri setinde hangi \u00fclkeden ka\u00e7 sipari\u015f geldi?\ndf_satis.groupby(\"Country\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\",ascending = False)","dd4719fb":"#Sat\u0131\u015f veri setindeki, \u00fclkelerden al\u0131nan maximum sipari\u015f miktarl\u0131 \u00fcr\u00fcn kodlar\u0131n\u0131, \u00dclke, \u00dcr\u00fcn Kodu ve Miktar baz\u0131nda alal\u0131m\n\ndf_sonuc = df_satis.groupby([\"Country\",\"StockCode\"]).agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = False)\ndf_sonuc = df_sonuc.reset_index()\ndf_sonuc.groupby(\"Country\").head(1)","3a1272cf":"#Sat\u0131\u015f veri setinde hangi \u00fclke ne kadar kazand\u0131rd\u0131?\ndf_satis.groupby(\"Country\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\",ascending = False)","56c93299":"#Sat\u0131\u015f veri setinin istatistiksel bilgilerini daha detayl\u0131 g\u00f6zlemleyelim.\ndf_satis.describe([0.01,0.05,0.10,0.25,0.50,0.75,0.90,0.95, 0.99]).T","4924eaaa":"#Veri seti eski tarihli bir veri seti oldu\u011fu i\u00e7in, m\u00fc\u015fterilerin son temas\u0131ndan bug\u00fcne kadar olan s\u00fcreyi hesaplarsak, bu s\u00fcre \u00e7ok uzun olacakt\u0131r.\n#Biz kendimize \u00f6rnek olmas\u0131 a\u00e7\u0131s\u0131ndan, veri seti \u00fczerinden bir \"bug\u00fcn\" belirleyelim. Bunu da veri seti \u00fczerindeki en son tarihli g\u00fcn olarak alal\u0131m.\n\nmax_date = df_satis[\"InvoiceDate\"].max()\nmax_date","92a01e18":"#max_date de\u011fi\u015fkenini datetime tipi olarak almal\u0131y\u0131z. B\u00f6ylece g\u00fcnler aras\u0131nda \u00e7\u0131kartma i\u015flemini yapabilece\u011fiz.\nimport datetime as dt\nbug\u00fcn = dt.datetime(2011,12,9,12,50,0)\nbug\u00fcn","183f49d3":"#Bug\u00fcn\u00fcn tarihinden, m\u00fc\u015fterilerin son al\u0131\u015fveri\u015f tarihlerini \u00e7\u0131kartarak arada ge\u00e7en s\u00fcrenin g\u00fcn de\u011ferlerini yeni bir dataframe yap\u0131s\u0131na atal\u0131m. Bu de\u011feler m\u00fc\u015fterinin \"Recency\" de\u011ferleridir. \u0130lk 5 g\u00f6zleme bakal\u0131m\ndf_tempr = (bug\u00fcn - df_satis.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"})).rename(columns={\"InvoiceDate\":\"Recency\"})[\"Recency\"].apply(lambda x : x.days)\ndf_recency = pd.DataFrame(df_tempr)\ndf_recency.head()","7b3a3e61":"# Her bir m\u00fc\u015fteriye kesilmi\u015f farkl\u0131 fatura say\u0131lar\u0131n\u0131 bulursak, m\u00fc\u015fterinin toplam sat\u0131n alma say\u0131s\u0131n\u0131 bulmu\u015f oluruz. Bu da frequency de\u011ferimizdir.\n\n#\u0130lk \u00f6nce M\u00fc\u015fteri ID ve Fatura No baz\u0131nda gruplayarak, her bir faturan\u0131n M\u00fc\u015fteri baz\u0131nda ka\u00e7 sefer \u00e7okland\u0131\u011f\u0131n\u0131 g\u00f6zlemliyoruz.\u0130lk 5 g\u00f6zleme bakal\u0131m\ndf_tempf = df_satis.groupby([\"Customer ID\",\"Invoice\"]).agg({\"Invoice\":\"count\"})\ndf_tempf.head()","8236025d":"#\u015eimdi de df_tempf \u00fczerinde her bir m\u00fc\u015fterideki fatura say\u0131s\u0131n\u0131 sayd\u0131rmam\u0131z laz\u0131m. Buldu\u011fumuz de\u011ferler, m\u00fc\u015fterilerin \"Frequency\" de\u011ferleridir. \u0130lk 5 g\u00f6zleme bakal\u0131m\ndf_frequency = df_tempf.groupby(\"Customer ID\").agg({\"Invoice\":\"count\"}).rename(columns = {\"Invoice\":\"Frequency\"})\ndf_frequency.head()","e2fc4612":"#Her bir m\u00fc\u015fterinin daha \u00f6nce hesaplam\u0131\u015f oldu\u011fumuz TotalPrice de\u011ferlerinin toplam\u0131, bize o m\u00fc\u015fterinin yapt\u0131\u011f\u0131 toplam harcamay\u0131 yani \"Monetary\" de\u011ferini verir. \u0130lk 5 g\u00f6zlemine bakal\u0131m\ndf_monetary = df_satis.groupby(\"Customer ID\").agg({\"TotalPrice\":\"sum\"}).rename(columns = {\"TotalPrice\":\"Monetary\"})\ndf_monetary.head()","34eb1060":"#Concatenate i\u015fleminin d\u00fczg\u00fcn yap\u0131labilmesi i\u00e7in sat\u0131r ve s\u00fctun say\u0131lar\u0131nda, i\u015flemi bozacak bir uyumsuzluk olmad\u0131\u011f\u0131 kontrol\u00fc sa\u011flan\u0131r. T\u00fcm RFM dfleri ayn\u0131 boyuta sahiptir.\nprint(df_recency.shape, df_frequency.shape, df_monetary.shape)","f3d7fd8c":"#T\u00fcm RFM skorlar\u0131n\u0131 tek bir dataframede toplay\u0131p ismine \"df_rfm\" diyelim\ndf_rfm = pd.concat([df_recency,df_frequency,df_monetary], axis = 1)\ndf_rfm.head()","38912f54":"#RFM Skorlar\u0131n\u0131 1 den 5 e kadar puanlayaca\u011f\u0131m.\n\nbirden_bese = ['1','2','3','4','5']\nbesten_bire = ['5','4','3','2','1']\n","2d2faaa7":"#Frequency : M\u00fc\u015fterinin toplam sat\u0131n alma say\u0131s\u0131 -> de\u011ferinin y\u00fcksek olmas\u0131, puan\u0131n y\u00fcksek olmas\u0131 anlam\u0131na gelir.\n#Bu nedenle do\u011fru bir orant\u0131 vard\u0131r. 1 den 5 e puanlad\u0131m. Her s\u0131n\u0131f\u0131n say\u0131lar\u0131na bakt\u0131m\ncut_bins = [0,1,2,4,10,210]\ndf_rfm[\"FrequencyScore\"] = pd.cut(df_rfm[\"Frequency\"], bins = cut_bins, labels = birden_bese)\ndf_rfm[\"FrequencyScore\"].value_counts()","dd692ca0":"#Recency : M\u00fc\u015fterinin son temas\u0131ndan bug\u00fcne kadar ge\u00e7en s\u00fcre -> de\u011ferin y\u00fcksek olmas\u0131, puan\u0131n d\u00fc\u015f\u00fck olmas\u0131 anlam\u0131na gelir.\n#Bu nedenle ters bir orant\u0131 vard\u0131r. 5'ten 1'e puanlad\u0131m. Her s\u0131n\u0131f\u0131n say\u0131lar\u0131na bakt\u0131m\ndf_rfm[\"RecencyScore\"] = pd.qcut(df_rfm['Recency'], 5, labels = besten_bire)\ndf_rfm[\"RecencyScore\"].value_counts()","2746f719":"#Monetary : M\u00fc\u015fterinin yapt\u0131\u011f\u0131 toplam harcama -> de\u011ferin y\u00fcksek olmas\u0131, puan\u0131n y\u00fcksek olmas\u0131 anlam\u0131na gelir.\n#Bu nedenle do\u011fru bir orant\u0131 vard\u0131r. 1 den 5 e puanlad\u0131m. \u0130lk 5 g\u00f6zlemi ald\u0131m. Her s\u0131n\u0131f\u0131n say\u0131lar\u0131na bakt\u0131m\ndf_rfm[\"MonetaryScore\"] = pd.qcut(df_rfm['Monetary'], 5, labels = birden_bese)\ndf_rfm[\"MonetaryScore\"].value_counts()","ae73164d":"#RFM skorunun m\u00fc\u015fteri baz\u0131nda birle\u015ftirilmi\u015f halini RFM_SCORE olarak dataframe yap\u0131m\u0131za ekleyelim. \u0130lk 5 g\u00f6zlemi alal\u0131m.\ndf_rfm[\"RFM_SCORE\"] = df_rfm['RecencyScore'].astype(str) + df_rfm['FrequencyScore'].astype(str) + df_rfm['MonetaryScore'].astype(str)\ndf_rfm.head()","ae805bb9":"#En Y\u00fcksek RFM_SCORE a sahip ilk 5 m\u00fc\u015fteri\ndf_rfm[df_rfm[\"RFM_SCORE\"]=='555'].head()","4dec3072":"#En D\u00fc\u015f\u00fck RFM_SCORE a sahip ilk 5 m\u00fc\u015fteri\ndf_rfm[df_rfm[\"RFM_SCORE\"]=='111'].head()","f15c103c":"#RFM skorlar\u0131n\u0131n istatistiksel de\u011ferlerine bakal\u0131m\ndf_rfm.describe().T\n","773d5055":"#Recency ve Frequency Skorlar\u0131na g\u00f6re M\u00fc\u015fteri Segmentlerine isim verebilmek i\u00e7in regular expression (regex) yap\u0131s\u0131 kuruyorum.\nseg_map = {\n    r'[1-2][1-2]': 'Hibernating',\n    r'[1-2][3-4]': 'At Risk',\n    r'[1-2]5': 'Can\\'t Loose',\n    r'3[1-2]': 'About to Sleep',\n    r'33': 'Need Attention',\n    r'[3-4][4-5]': 'Loyal Customers',\n    r'41': 'Promising',\n    r'51': 'New Customers',\n    r'[4-5][2-3]': 'Potential Loyalists',\n    r'5[4-5]': 'Champions'\n}","f4fff708":"#Regex yap\u0131s\u0131n\u0131 kullanarak m\u00fc\u015fterilerimi segmentlere ay\u0131r\u0131yorum ve bulunduklar\u0131 segmentleri \"Segmet\" kolonunda g\u00f6steriyorum. \u0130lk 5 g\u00f6zleme bakal\u0131m\ndf_rfm['Segment'] = df_rfm['RecencyScore'].astype(str) + df_rfm['FrequencyScore'].astype(str)\ndf_rfm['Segment'] = df_rfm['Segment'].replace(seg_map, regex=True)\ndf_rfm.head()","0461cc91":"#\"Need Attention\" s\u0131n\u0131f\u0131na ait customer ID'leri se\u00e7erek excel \u00e7\u0131kt\u0131s\u0131 almak istiyorum.\nneed_attention_df = pd.DataFrame()\nneed_attention_df[\"NeedAttentionCustomerID\"]= df_rfm[df_rfm[\"Segment\"]=='Need Attention'].index\nneed_attention_df.head()","cae63db5":"#Excele al\u0131yorum\nneed_attention_df.to_csv(\"Need_Attention.csv\")","2b9bcf3c":"#Her bir RFM grubunun ortalama ve adet de\u011ferlerini g\u00f6rmek istiyorum.\n\ndf_rfm[[\"Segment\", \"Recency\",\"Frequency\",\"Monetary\"]].groupby(\"Segment\").agg([\"mean\",\"count\"])","d6394426":"## 6). RFM Skorlar\u0131 ile M\u00fc\u015fteri Segmentasyonu","363d4579":"## 1). Giri\u015f\n\nhttps:\/\/www.kaggle.com\/nathaniel\/uci-online-retail-ii-data-set linkindeki veri setini kullanarak;\n1. Veri setini \"Sat\u0131\u015f Verileri\" ve \"\u0130ade Verileri\" olarak ay\u0131raca\u011f\u0131m. \n2. Sat\u0131\u015f verisini anlamland\u0131rma ve veri \u00f6n i\u015fleme ad\u0131mlar\u0131n\u0131 uygulayaca\u011f\u0131m.\n3. Sat\u0131\u015f veri setine **RFM Analizi** ile **M\u00fc\u015fteri Segmentasyonu** i\u015flemini ger\u00e7ekle\u015ftirip, \u00e7\u0131kan sonucu pazarlama stratejilerine y\u00f6nelik aksiyon kararlar\u0131 a\u00e7\u0131s\u0131ndan yorumlayaca\u011f\u0131m.\n\n**Nedir Bu RFM? :**\n \n Recency, Frequency, Monetory kelimelerinin ba\u015f harflerinden olu\u015fur.\n* Recency : M\u00fc\u015fterinin son temas\u0131ndan bug\u00fcne kadar ge\u00e7en s\u00fcredir.\n* Frequency : M\u00fc\u015fterinin toplam sat\u0131n alma say\u0131s\u0131d\u0131r.\n* Monetary : M\u00fc\u015fterinin yapt\u0131\u011f\u0131 toplam harcamad\u0131r.\n\nBu de\u011ferlerin 1 ile 5 aras\u0131nda puanlanarak m\u00fc\u015fterilerin gruplara ayr\u0131lmas\u0131 i\u015flemine de \"M\u00fc\u015fteri Segmentasyonu\" denir. \u00d6rnek segmentler a\u015fa\u011f\u0131daki g\u00f6rselde sunulmu\u015ftur.\n\n![image.png](attachment:image.png)\n\n**Veri Seti Hakk\u0131nda Genel Bilgiler :**\n\n  \"online_retail_II\" isimli veri seti \u0130ngiltere merkezli online bir sat\u0131\u015f ma\u011fazas\u0131n\u0131n 01\/12\/2009 - 09\/12\/2011 tarihleri aras\u0131ndaki sat\u0131\u015flar\u0131n\u0131 i\u00e7ermektedir.\n   Bu \u015firket hediyelik e\u015fya satmaktad\u0131r. Promosyon \u00fcr\u00fcnleri gibi d\u00fc\u015f\u00fcnebilir. M\u00fc\u015fterilerinin \u00e7o\u011fu da toptanc\u0131d\u0131r.\n\n  Excelde 2 sheet bulunmaktad\u0131r. Ben RFM Analizi i\u00e7in \"Year 2010-2011\" olan 2. sheeti kullanaca\u011f\u0131m.\n*  1. Sheet : Year 2009-2010\n*  2. Sheet : Year 2010-2011\n \n**De\u011fi\u015fkenler:**\n\n*  InvoiceNo: Fatura numaras\u0131. E\u015fsiz bir de\u011ferdir. E\u011fer bu kod C ile ba\u015fl\u0131yorsa, iade anlam\u0131na gelir\n*  StockCode: \u00dcr\u00fcn kodu. Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numarad\u0131r\n*  Description: \u00dcr\u00fcn ismi\n*  Quantity: \u00dcr\u00fcn adedi. Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir. C ile ba\u015flayanlarda negatif de\u011fer almaktad\u0131r\n*  InvoiceDate: Fatura tarihi ve zaman\u0131\n*  UnitPrice: \u00dcr\u00fcn fiyat\u0131 (Sterlin cinsinden)\n*  CustomerID: M\u00fc\u015fteri numaras\u0131. Her bir m\u00fc\u015fteri i\u00e7in e\u015fsiz numarad\u0131r\n*  Country: \u00dclke ismi. M\u00fc\u015fterinin ya\u015fad\u0131\u011f\u0131 \u00fclkeyi ifade eder\n\nLinkteki veri setini **\"+ Add data\"** butonu ile notebookuma dahil ettim.","4f9f594d":"## 3). Veri Okuma","6093eef7":"M\u00fc\u015fterilerimi \"Recency\" ve \"Frequency\" de\u011ferlerini kullanarak segmentlere ay\u0131raca\u011f\u0131m :","eafef54b":"### 6.d).M\u00fc\u015fteri Bazl\u0131 Bulunan RFM Skorlar\u0131n\u0131n Birle\u015ftirilmesi","dd376f0e":"# 3 m\u00fc\u015fteri segmenti se\u00e7iyorum :\n\n![image.png](attachment:image.png)\n\n## 1.  **Can't Lose Them:** \n* Bu grupta 12 ki\u015fi vard\u0131r. \n* Ortalama 136.33 g\u00fcnd\u00fcr al\u0131\u015fveri\u015f yapm\u0131yorlar. \n* Ortalama 14.92 kez al\u0131\u015fveri\u015f yapm\u0131\u015flar. \n* Ortalama 4150.68 Birim para kazand\u0131rm\u0131\u015flar.\n\n### **Al\u0131nabilecek Aksiyon Karar\u0131 :** \nBu grup uzun zamand\u0131r al\u0131\u015fveri\u015f yapm\u0131yor fakat toplam sat\u0131n alma say\u0131lar\u0131 olduk\u00e7a y\u00fcksektir. Yani firmadan al\u0131\u015fveri\u015f yapmaya meyilli bir gruptur. Sadece firma olarak kendimizi k\u0131saca bir hat\u0131rlatmal\u0131y\u0131z :) Bunun i\u00e7in, son yapt\u0131klar\u0131 al\u0131\u015fveri\u015flere bak\u0131larak, kendilerini uzun zamand\u0131r aram\u0131zda g\u00f6rmedi\u011fimizi bildirmeli ve ilgilenebilecekleri \u00fcr\u00fcnler \u00fczerinden indirim kampanyalar\u0131 d\u00fczenleyerek al\u0131\u015fveri\u015f yapmalar\u0131n\u0131 sa\u011flayabiliriz.\n\n## 2.  **Need Attention**\n* Bu grupta 208 ki\u015fi vard\u0131r.\n* Ortalama 50.93 g\u00fcnd\u00fcr al\u0131\u015fveri\u015f yapm\u0131yorlar.\n* Ortalama 3.43 kez al\u0131\u015fveri\u015f yapm\u0131\u015flar\n* Ortalama 1339.38 Birim para kazand\u0131rm\u0131\u015flar.\n\n### **Al\u0131nabilecek Aksiyon Karar\u0131 :**  \nBu grup hem zamansal olarak hem de toplam sat\u0131n alma say\u0131lar\u0131 olarak ortalama de\u011ferler g\u00f6stererek kaybetmeye meyilli oldu\u011fumuz, ayn\u0131 zamanda da kazanmak i\u00e7in a\u015f\u0131r\u0131 \u00e7aba gerektirmeyen m\u00fc\u015fteri grubudur. Hem sat\u0131n alma say\u0131lar\u0131n\u0131, hem de firmam\u0131zla temaslar\u0131n\u0131 artt\u0131rmal\u0131y\u0131z. \"Loyal Customers\" dedi\u011fimiz sad\u0131k m\u00fc\u015fterilerimize yak\u0131n bir gruptur. Kendilerini bu gruba \u00e7ekmek i\u00e7in Frequency de\u011ferlerini artt\u0131rmal\u0131y\u0131z, yani yukar\u0131daki g\u00f6rsele g\u00f6re dikeyde bir hareket yapt\u0131rmal\u0131y\u0131z K\u00fc\u00e7\u00fck mebla\u011fl\u0131 al\u0131\u015fveri\u015fler dahi olsa toplam sat\u0131n alma say\u0131lar\u0131n\u0131 artt\u0131rabilecek ve ilgilerini \u00e7ekebilecek \u00fcr\u00fcn tan\u0131t\u0131mlar\u0131 veya promosyonlarla kendilerini sad\u0131k m\u00fc\u015fteri grubuna transfer edebiliriz.\n\n## 3.  **New Customers**\n* Bu grupta 67 ki\u015fi vard\u0131r.\n* Ortalama 6.09 g\u00fcnd\u00fcr al\u0131\u015fveri\u015f yapm\u0131yorlar.\n* Ortalama 1 kez al\u0131\u015fveri\u015f yapm\u0131\u015flar\n* Ortalama 348.64 birim para kazand\u0131rm\u0131\u015flar.\n\n### **Al\u0131nabilecek Aksiyon Karar\u0131 :** \nBu m\u00fc\u015fteri grubu, son temaslar\u0131 taze olan gruplard\u0131r. Dolay\u0131s\u0131 ile bu grubun yukar\u0131daki g\u00f6rsele g\u00f6re dikeyde hareket etmelerini sa\u011flamal\u0131y\u0131z. \u0130lk \u00f6nce \"Potential Loyalists\" grubuna, daha sonra da \"Loyal Customers\" grubuna dahil olmalar\u0131n\u0131 sa\u011flayacak 2 ad\u0131m att\u0131rmal\u0131y\u0131z. Bunun i\u00e7in toplam sat\u0131n almalar\u0131n\u0131 artt\u0131rmal\u0131y\u0131z. K\u00fc\u00e7\u00fck mebla\u011flarla dahi olsa bize s\u0131k s\u0131k gelmelerini sa\u011flamal\u0131y\u0131z. Yeni m\u00fc\u015fterilere \u00f6zel kampanyalar d\u00fczenleyerek veya bir sonraki hafta veya ay gelecek olan \u00fcr\u00fcn tan\u0131t\u0131mlar\u0131n\u0131 yapt\u0131ktan sonra, yeni m\u00fc\u015fterilere \u00f6zel kampanyalarla harmanlayarak, toplam sat\u0131n alma say\u0131lar\u0131n\u0131 artt\u0131rabiliriz.","5a97faaf":"## **Yapt\u0131\u011f\u0131m i\u015flemleri do\u011frulamak i\u00e7in k\u00fc\u00e7\u00fck matematiksel hesaplar:**\n\n###  Orjinal Veri Seti =  Sat\u0131\u015f Veri Seti  +  \u0130ade Veri Seti  +  Sat\u0131\u015f ve \u0130ade'den silinen NaN kay\u0131t say\u0131s\u0131\n\n* **df_2010_2011.shape[0] :** Orjinal Veri Seti sat\u0131r say\u0131s\u0131\n* **df_satis.shape[0] :** Sat\u0131\u015f Veri Seti sat\u0131r say\u0131s\u0131\n* **df_iade.shape[0] :** \u0130ade Veri Seti sat\u0131r say\u0131s\u0131\n* **top_nan :** Sat\u0131\u015f ve \u0130ade'den silinen NaN kay\u0131t say\u0131s\u0131 \n    \n ","f6728ecf":"### 6.c).Monetary De\u011feri Hesaplama \u0130\u015flemleri\n\nMonetary : M\u00fc\u015fterinin yapt\u0131\u011f\u0131 toplam harcamad\u0131r.","955f8c24":"## 4). Veri \u00d6n \u0130\u015fleme","9e19ca4e":"## 7). Yorumlar","8096f9a2":"## 5). Veriyi Anlama","35176b39":"### 6.e). M\u00fc\u015fteri Segmentasyonu","2be1e967":"### 6.a).Recency De\u011feri Hesaplama \u0130\u015flemleri\n\n**Recency :** M\u00fc\u015fterinin son temas\u0131ndan bug\u00fcne kadar ge\u00e7en s\u00fcredir.","213e354f":"## 2). K\u00fct\u00fcphane Ayarlar\u0131","f2c050c0":"### 6.b).Frequency De\u011feri Hesaplama \u0130\u015flemleri\n**Frequency :** M\u00fc\u015fterinin toplam sat\u0131n alma say\u0131s\u0131d\u0131r."}}