{"cell_type":{"156a75c8":"code","3a248a59":"code","c28a1781":"code","4f6569d1":"code","07dabe1b":"code","54f8f652":"code","772c6dbd":"code","3a744d01":"code","775f2299":"code","e7c2268e":"code","ed7fa561":"code","e95e32d5":"code","bdbc7bf5":"code","ffe537e2":"code","94e6e35a":"code","238a73b4":"code","e9306cca":"code","e2e8f630":"code","603e050c":"code","2f68afa6":"markdown","a4669aee":"markdown","a6973ada":"markdown","e2fcd8bd":"markdown","446a72de":"markdown","8defdcde":"markdown","b08388a2":"markdown","56107e54":"markdown","099cc2c9":"markdown","69633cb7":"markdown","5597f040":"markdown","40fe42b1":"markdown"},"source":{"156a75c8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndata = pd.read_csv('\/kaggle\/input\/steam-concurrent-players\/Steam Players.csv')\ndata.head()","3a248a59":"print(data.info())\n\ndata['DateTime'] = pd.to_datetime(data['DateTime'])\nprint(data.dtypes)","c28a1781":"data['Year'] = data['DateTime'].dt.year\nprint(data.head(3))\n\ndata['Year'].value_counts()","4f6569d1":"data[data['Users'] != None]['Year'].value_counts()","07dabe1b":"df = data[data['Year'].isin([2019,2018,2017,2016,2015])]\ndf['Year'].value_counts()","54f8f652":"ts = df['Users']\nplt.figure(figsize=(20,10))\nplt.plot(ts)","772c6dbd":"rolmean = ts.rolling(12).mean()\nrolstd = ts.rolling(12).std()\n\nplt.figure(figsize=(20,10))\nplt.plot(ts)\nplt.plot(rolmean)\nplt.plot(rolstd)","3a744d01":"ts = df['Users'].dropna()\nfrom statsmodels.tsa.stattools import adfuller\n\ndftest = adfuller(ts, autolag='AIC')\ndftest","775f2299":"#let's log the series\nplt.figure(figsize=(20,10))\nts_log = np.log(ts)\nplt.plot(ts_log)","e7c2268e":"#Differencing \n\nts_log_diff = ts_log - ts_log.shift()\n\nplt.figure(figsize=(20,10))\nplt.plot(ts_log_diff)\nplt.plot(ts_log)","ed7fa561":"ts_log_diff = ts_log_diff.dropna()\ndftest2 = adfuller(ts_log_diff, autolag='AIC')\ndftest2 ","e95e32d5":"plt.figure(figsize=(20,10))\nplt.plot(ts_log_diff)","bdbc7bf5":"from statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.stattools import acf, pacf\n\nacf = acf(ts_log_diff, nlags = 30)\nplt.plot(acf)\n\nplt.axhline(y = 0, linestyle = '-', color = 'orange')\nplt.axhline(y = -1.95\/np.sqrt(len(ts_log_diff)), linestyle = '-', color = 'red')\nplt.axhline(y = 1.95\/np.sqrt(len(ts_log_diff)), linestyle = '-', color = 'pink')","ffe537e2":"pacf = pacf(ts_log_diff, nlags = 30, method = 'ols')\nplt.plot(pacf)\n\nplt.axhline(y = 0, linestyle = '-', color = 'yellow')\nplt.axhline(y = -1.95\/np.sqrt(len(ts_log_diff)), linestyle = '-', color = 'black')\nplt.axhline(y = 1.95\/np.sqrt(len(ts_log_diff)), linestyle = '-', color = 'green')","94e6e35a":"#AR \nmodel = ARIMA(ts_log, order = (2,1,0))\nresults = model.fit(disp = -1) \n\nplt.figure(figsize=(20,10))\nplt.plot(ts_log_diff)\nplt.plot(results.fittedvalues, color = 'red')\n\nRSS = sum((results.fittedvalues - ts_log_diff)**2)\nprint(RSS)","238a73b4":"#MA \nmodel = ARIMA(ts_log, order = (0,1,2))\nresults = model.fit(disp = -1) \n\nplt.figure(figsize=(20,10))\nplt.plot(ts_log_diff)\nplt.plot(results.fittedvalues, color = 'red')\n\nRSS2 = sum((results.fittedvalues - ts_log_diff)**2)\nprint(RSS2)","e9306cca":"#ARIMA\nmodel = ARIMA(ts_log, order = (2,1,2))\nresults = model.fit(disp = -1) \n\nplt.figure(figsize=(20,10))\nplt.plot(ts_log_diff)\nplt.plot(results.fittedvalues, color = 'red')\n\nRSS3 = sum((results.fittedvalues - ts_log_diff)**2)\nprint(RSS3)","e2e8f630":"predictions = pd.Series(results.fittedvalues, copy = True)\npredictions_cumsum = predictions.cumsum()\npredictions_cumsum","603e050c":"predictions_log = pd.Series(ts_log.iloc[0], index = ts_log.index)\npredictions_log = predictions_log.add(predictions_cumsum,fill_value = 0)\n\npredictions_ARIMA = np.exp(predictions_log) \nplt.plot(ts)\nplt.plot(predictions_ARIMA)","2f68afa6":"**In this notebook I am analysing a time series, the number of users that the Steam platform had over years, and I am trying to make a prediction out of it using ARIMA model. The database has daily observations since 2004, but there are a lot of missings so in the end I used the last FIVE full years of data, 2015-2019.**","a4669aee":"-1.67 is higher than any of the three critical values so the series is not stationary.\nThere are multiple ways to remove trend and seasonality and make it stationary, I will use the differencing method here.","a6973ada":"Let's perform ACF and PACF and then test AR, MA, ARIMA models:","e2fcd8bd":"Let's have a look at the series:","446a72de":"Now, let's check the stationarity of the series; I will have a look at the moving average and perform the augmented Dickey-Fuller test to estimate it:","8defdcde":"I feel the need to have the year marked separately because I want to be able to filter more easily.","b08388a2":"I will keep the last FIVE years because there are enough observations, and it is better to use more recent data.","56107e54":"Best RSS is for ARIMA.\nNow let's bring back seasonality and trend.","099cc2c9":"Performed the test again and now the series is stationary.","69633cb7":"Firstly, let's have a look at the database and convert to datetime format:","5597f040":"Let's see the years where the number of users doesn't have missings:","40fe42b1":"As expected, we see an increasing trend at the beginning, and then it becomes more constant (*also, the formatting for the x-axis keeps chainging from date to number, I will come back to fix it when I realise why it does this*)."}}