{"cell_type":{"34868da9":"code","f07abad8":"code","d75f6de2":"code","e6dff755":"code","ff42f9dc":"code","e909ac9b":"code","7bae9edc":"code","5453212c":"code","8fcaf367":"code","c1e1604b":"code","49f27631":"code","29aa9354":"code","5d69aff2":"code","b070d487":"code","c56c0104":"code","1180a630":"code","28bcc414":"code","ddec9b81":"code","4245864c":"code","7d2eb63f":"code","a7e32e3e":"code","4167029b":"code","ac42bf12":"code","024ba68e":"code","86cd2520":"code","38db86e2":"code","aed815c6":"markdown","d6ff9caa":"markdown","425dcae2":"markdown"},"source":{"34868da9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n#import os\n#print(os.listdir(\"..\/input\"))\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","f07abad8":"data = pd.read_csv('..\/input\/bitflyerJPY_1-min_data_2017-07-04_to_2018-06-27.csv')","d75f6de2":"data.info()","e6dff755":"data.describe()","ff42f9dc":"data.columns","e909ac9b":"data.head()\ndata.corr()","7bae9edc":"#Line Plot >> Line plot is better when x axis is time\ndata.Timestamp.plot(kind='line', color='g', label='Timestamp', linewidth = 2 ,alpha = 0.8,grid = True, linestyle = '-' )\ndata.Weighted_Price.plot( kind = 'line', color = 'r', label = 'Weighted_Price', linewidth = 2, alpha = 0.8,grid = True, linestyle = '-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.show()","5453212c":"#Scatter >> Scatter is better when there is correlation between two variables\ndata.plot(kind = 'scatter', x = 'Volume_(BTC)', y = 'Volume_(Currency)', alpha = 0.5, color='r')\n\nplt.xlabel('Volume_(BTC)')\nplt.ylabel('Volume_(Currency)')\nplt.title('Scatter Plot Between V_BTC & V_Curr')\nplt.show()","8fcaf367":"#Histogram >> is better when we need to see distribution of numerical data\n#data.plot(kind='hist', x='Weighted_Price', color = 'b', bins= 50, figsize=(7,7))\ndata.Weighted_Price.plot(kind = 'hist', bins = 50, figsize=(7,7))\nplt.show()","c1e1604b":"plt.clf()","49f27631":"dictionary = {\"Ankara\" : \"METU\",\"Istanbul\":\"Bogazici University\",\"Bursa\": \"Uludag University\"}","29aa9354":"for i in dictionary.keys():\n    print(dictionary[i])\n\n#print(dictionary.keys(), dictionary.values())","5d69aff2":"dictionary[\"Sakarya\"] = \"Sakarya Un\u0131vers\u0131ty\"\nprint(dictionary)","b070d487":"dictionary.clear()\nprint(dictionary)","c56c0104":"data.columns","1180a630":"series = data['Open']\nprint(type(series))\ndata_frame = data[['Open']]\nprint(type(data_frame))","28bcc414":"print(False or False)","ddec9b81":"x = data['Open']<295000\n#print(data[x])\nprint(len(data[x]))\ndata.Open[-1:]   ","4245864c":"data[np.logical_and(data['Open']>500000, data['Close']>500000 )]\n","7d2eb63f":"lst = \"Bahadir\"\nfor i in lst:\n    print(i)\nprint('*******')\nfor index, value in enumerate(lst):\n    print(index, \":\",value)\nprint('*********')\nfor index, value in data[['Open']][0:2].iterrows():\n    print(index, \":\",value)","a7e32e3e":"def  tuble_ex():\n    \"\"\" returned defined t tuble\"\"\"\n    t = (3,4,5,6)\n    return t \na,b,c,_  = tuble_ex()\nprint(a,b,c)","4167029b":"def car_name_brand (a, b = \" A180\", c = \"Mercedes\"):\n    lst = a + \" \" + b + \" \" + c \n    return lst\nprint(car_name_brand(\"10\"))\nprint(car_name_brand(\"10\",\"Jetta\", \"Wolkswagen\"))","ac42bf12":"def f(*args):\n    for i in args:\n        print(i)\nf(1)\nf(1,2,3,4)\ndef f(**kwargs):\n    for key, value in kwargs.items():      \n        print(key, \" \", value)\nf(country = 'spain', capital = 'madrid', population = 123456)","024ba68e":"sm = lambda x,y : x+y\nprint(sm(3,4))","86cd2520":"name = \"NeuralNetworks\"\nsname = \"AI\"\ny = map(lambda x:x*2,name)\nprint(list(y))\n\nit = iter(name)\nprint(*it)\n\nz = zip(name,sname)\nprint(list(z))\n","38db86e2":"def data_sum(a):\n    sm = [ i+i for i in data[a]]\n    return sm\nprint(sum(data_sum(\"Open\"))\/2)\nprint(sum(data.Open))","aed815c6":"**DICTIONARY **","d6ff9caa":"**PYTHON DATA SCIENCE TOOLBOX**","425dcae2":"**PANDAS**"}}