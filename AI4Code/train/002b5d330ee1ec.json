{"cell_type":{"cb79667a":"code","06a365fd":"code","0b58ebf1":"code","72603136":"code","21184871":"code","889178b3":"code","01f1e1db":"code","d1f95745":"code","9521996e":"code","271bb58e":"code","88c25521":"code","4bdbfbd9":"code","b857c004":"code","9319a154":"code","17663bb3":"code","f51039ee":"code","9ee20f4a":"code","ff3cc5a4":"code","0ee5d88f":"code","c0e8e6b9":"code","81c81eb5":"code","7856cde5":"code","d3873c6f":"code","a89cddc2":"code","2bc8c111":"code","f39935f4":"code","04d1fcdd":"code","67d946ba":"code","2deb9b58":"code","44b2c02a":"code","135bb934":"code","f84ed6db":"code","710ef85c":"code","1711570e":"code","e3508a99":"code","49dbea64":"code","cbcf4864":"code","63e9b104":"code","6c25ffa4":"code","82d528a5":"code","e2dea84e":"code","92ea3f49":"code","bb47a647":"code","99891d84":"code","c084a3eb":"code","0ff713dc":"code","b5d2f680":"code","b6e401fb":"code","ecf7b107":"code","83d3c9c0":"code","7180fca5":"code","6a2f0fbc":"code","e44a1f9f":"code","859442e5":"code","37315084":"code","2750f00b":"code","f56d7872":"code","94cdaac4":"code","df53e97b":"code","fde601aa":"code","39ebcec7":"code","6914e108":"code","d98b9f49":"code","77aa384f":"code","ecb3fadb":"code","8ac95e5c":"code","b8014443":"code","1a153cee":"code","0ca22cec":"code","7d84fe6d":"code","b026863c":"code","d5ed217f":"code","22f2f936":"code","7f574d29":"code","74a76de5":"code","92efb215":"code","be5ed082":"code","b844c460":"code","c22a832a":"code","1c8595b2":"code","8a2fd6f6":"code","444696af":"code","e6832a81":"code","7c1e5b68":"code","7b648386":"code","eb7e3251":"code","605b48fa":"code","47e49952":"code","1d758fc9":"code","2237cd96":"code","decac899":"code","ab3a948f":"code","e32750aa":"code","1a6b2fcb":"code","36728e00":"code","c767811a":"code","8f11d87d":"code","4448ca4c":"code","f7db691a":"code","d80c5d48":"code","347e89fb":"code","a457409e":"code","95f72a92":"code","a99635b6":"code","ab8f336d":"code","9aa8c31e":"code","c7db5522":"code","b89986d3":"code","bc46c719":"code","95141f76":"code","f60d4736":"code","6391e4e2":"markdown","83371660":"markdown","23d10c41":"markdown","a14531e8":"markdown","6adf0356":"markdown","6146526c":"markdown","2d7a8c99":"markdown","8770a100":"markdown"},"source":{"cb79667a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","06a365fd":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","0b58ebf1":"train_df.head()","72603136":"train_df.shape","21184871":"train_df = train_df.drop(['Alley','PoolQC','Fence','MiscFeature'], axis=1)","889178b3":"train_df.columns[train_df.isnull().any()]","01f1e1db":"np.dtype(train_df['LotFrontage'])","d1f95745":"train_df['LotFrontage'] = train_df['LotFrontage'].fillna(train_df['LotFrontage'].mean())","9521996e":"train_df['BsmtQual'] = train_df['BsmtQual'].fillna(train_df['BsmtQual'].mode()[0])","271bb58e":"train_df['MasVnrType'].dtype","88c25521":"train_df['MasVnrType'] = train_df['MasVnrType'].fillna(train_df['MasVnrType'].mode()[0])","4bdbfbd9":"train_df['MasVnrArea'].dtype","b857c004":"train_df['MasVnrArea'] = train_df['MasVnrArea'].fillna(train_df['MasVnrArea'].mean())","9319a154":"train_df['GarageType'].dtype","17663bb3":"train_df['GarageType'] = train_df['GarageType'].fillna(train_df['GarageType'].mode()[0])","f51039ee":"train_df['GarageFinish'].dtype","9ee20f4a":"train_df['GarageFinish'] = train_df['GarageFinish'].fillna(train_df['GarageFinish'].mode()[0])","ff3cc5a4":"train_df['GarageYrBlt'].dtype","0ee5d88f":"train_df['GarageYrBlt'] = train_df['GarageYrBlt'].fillna(train_df['GarageYrBlt'].mean())","c0e8e6b9":"train_df['GarageCond'].dtype","81c81eb5":"train_df['GarageCond'] = train_df['GarageCond'].fillna(train_df['GarageCond'].mode()[0])","7856cde5":"train_df['GarageQual'].dtype","d3873c6f":"train_df['GarageQual'] = train_df['GarageQual'].fillna(train_df['GarageQual'].mode()[0])","a89cddc2":"train_df['BsmtCond'].dtype","2bc8c111":"train_df['BsmtCond'] = train_df['BsmtCond'].fillna(train_df['BsmtCond'].mode()[0])","f39935f4":"train_df['BsmtExposure'].dtype","04d1fcdd":"train_df['BsmtExposure'] = train_df['BsmtExposure'].fillna(train_df['BsmtExposure'].mode()[0])","67d946ba":"train_df['BsmtFinType1'].dtype","2deb9b58":"train_df['BsmtFinType1'] = train_df['BsmtFinType1'].fillna(train_df['BsmtFinType1'].mode()[0])","44b2c02a":"train_df['BsmtFinType2'].dtype","135bb934":"train_df['BsmtFinType2'] = train_df['BsmtFinType2'].fillna(train_df['BsmtFinType2'].mode()[0])","f84ed6db":"train_df['Electrical'].dtype","710ef85c":"train_df['Electrical'].isnull().sum()","1711570e":"train_df['Electrical'] = train_df['Electrical'].fillna(train_df['Electrical'].mode()[0])","e3508a99":"train_df['FireplaceQu'].isnull().sum()","49dbea64":"train_df['FireplaceQu'] = train_df['FireplaceQu'].fillna(train_df['FireplaceQu'].mode()[0])","cbcf4864":"train_df.columns[train_df.isnull().any()]","63e9b104":"train_df.isnull().sum()","6c25ffa4":"plt.figure(figsize=(20,20))\nsns.heatmap(train_df.isnull())","82d528a5":"test_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","e2dea84e":"test_df.head()","92ea3f49":"test_df.info()","bb47a647":"test_df = test_df.drop(['Alley','PoolQC','Fence','MiscFeature'], axis=1)","99891d84":"test_df.columns[test_df.isnull().any()]","c084a3eb":"test_df.isnull().sum()","0ff713dc":"test_df['LotFrontage'] = test_df['LotFrontage'].fillna(test_df['LotFrontage'].mean())\ntest_df['BsmtQual'] = test_df['BsmtQual'].fillna(test_df['BsmtQual'].mode()[0])\ntest_df['MasVnrType'] = test_df['MasVnrType'].fillna(test_df['MasVnrType'].mode()[0])\ntest_df['MasVnrArea'] = test_df['MasVnrArea'].fillna(test_df['MasVnrArea'].mean())\ntest_df['GarageType'] = test_df['GarageType'].fillna(test_df['GarageType'].mode()[0])\ntest_df['GarageFinish'] = test_df['GarageFinish'].fillna(test_df['GarageFinish'].mode()[0])\ntest_df['GarageYrBlt'] = test_df['GarageYrBlt'].fillna(test_df['GarageYrBlt'].mean())\ntest_df['GarageCond'] = test_df['GarageCond'].fillna(test_df['GarageCond'].mode()[0])\ntest_df['GarageQual'] = test_df['GarageQual'].fillna(test_df['GarageQual'].mode()[0])\ntest_df['BsmtCond'] = test_df['BsmtCond'].fillna(test_df['BsmtCond'].mode()[0])\ntest_df['BsmtExposure'] = test_df['BsmtExposure'].fillna(test_df['BsmtExposure'].mode()[0])\ntest_df['BsmtFinType1'] = test_df['BsmtFinType1'].fillna(test_df['BsmtFinType1'].mode()[0])\ntest_df['BsmtFinType2'] = test_df['BsmtFinType2'].fillna(test_df['BsmtFinType2'].mode()[0])\ntest_df['FireplaceQu'] = test_df['FireplaceQu'].fillna(test_df['FireplaceQu'].mode()[0])","b5d2f680":"test_df['MSZoning'].dtype","b6e401fb":"test_df['MSZoning'] = test_df['MSZoning'].fillna(test_df['MSZoning'].mode()[0])","ecf7b107":"test_df['Utilities'].dtype","83d3c9c0":"test_df['Utilities'] = test_df['Utilities'].fillna(test_df['Utilities'].mode()[0])","7180fca5":"test_df['Exterior1st'].dtype","6a2f0fbc":"test_df['Exterior1st'] = test_df['Exterior1st'].fillna(test_df['Exterior1st'].mode()[0])","e44a1f9f":"test_df['Exterior2nd'].dtype","859442e5":"test_df['Exterior2nd'] = test_df['Exterior2nd'].fillna(test_df['Exterior2nd'].mode()[0])","37315084":"test_df['BsmtFinSF1'].dtype","2750f00b":"test_df['BsmtFinSF1'] = test_df['BsmtFinSF1'].fillna(test_df['BsmtFinSF1'].mean())","f56d7872":"test_df['BsmtFinSF2'].dtype","94cdaac4":"test_df['BsmtFinSF2'] = test_df['BsmtFinSF2'].fillna(test_df['BsmtFinSF2'].mean())","df53e97b":"test_df['BsmtUnfSF'].dtype","fde601aa":"test_df['BsmtUnfSF'] = test_df['BsmtUnfSF'].fillna(test_df['BsmtUnfSF'].mean())","39ebcec7":"test_df['TotalBsmtSF'].dtype","6914e108":"test_df['TotalBsmtSF'] = test_df['TotalBsmtSF'].fillna(test_df['TotalBsmtSF'].mean())","d98b9f49":"test_df['BsmtFullBath'].dtype","77aa384f":"test_df['BsmtFullBath'] = test_df['BsmtFullBath'].fillna(test_df['BsmtFullBath'].mean())","ecb3fadb":"test_df['BsmtHalfBath'].dtype","8ac95e5c":"test_df['BsmtHalfBath'] = test_df['BsmtHalfBath'].fillna(test_df['BsmtHalfBath'].mean())","b8014443":"test_df['KitchenQual'].dtype","1a153cee":"test_df['KitchenQual'] = test_df['KitchenQual'].fillna(test_df['KitchenQual'].mode()[0])","0ca22cec":"test_df['Functional'].dtype","7d84fe6d":"test_df['Functional'] = test_df['Functional'].fillna(test_df['Functional'].mode()[0])","b026863c":"test_df['GarageCars'].dtype","d5ed217f":"test_df['GarageCars'] = test_df['GarageCars'].fillna(test_df['GarageCars'].mean())","22f2f936":"test_df['GarageArea'].dtype","7f574d29":"test_df['GarageArea'] = test_df['GarageArea'].fillna(test_df['GarageArea'].mean())","74a76de5":"test_df['SaleType'].dtype","92efb215":"test_df['SaleType'] = test_df['SaleType'].fillna(test_df['SaleType'].mode()[0])","be5ed082":"test_df.columns[test_df.isnull().any()]","b844c460":"plt.figure(figsize=(20,20))\nsns.heatmap(test_df.isnull())","c22a832a":"df = pd.concat([train_df,test_df], axis=0)","1c8595b2":"df.head()","8a2fd6f6":"df.shape","444696af":"df.nunique()","e6832a81":"num_cols = df._get_numeric_data().columns","7c1e5b68":"num_cols","7b648386":"len(num_cols)","eb7e3251":"cat_cols = df.select_dtypes(include=['category','O'])","605b48fa":"print(cat_cols.columns)","47e49952":"cat_cols = cat_cols.columns","1d758fc9":"cat_cols","2237cd96":"len(cat_cols)","decac899":"def dum_cols(cat_cols_df, df):\n    df1=df\n    for items in cat_cols_df:\n        dummies = pd.get_dummies(df1[items], drop_first=True)\n        df1 = pd.concat([df1,dummies], axis=1)\n        df1 = df1.drop([items], axis=1)\n    return df1\n","ab3a948f":"df = dum_cols(cat_cols, df)","e32750aa":"df.head()","1a6b2fcb":"df = df.loc[:,~df.columns.duplicated()]","36728e00":"df.head()","c767811a":"df_train=df.iloc[:1460,:]\ndf_test=df.iloc[1460:,:]","8f11d87d":"len(df_test)","4448ca4c":"len(df_train)","f7db691a":"X_train=df_train.drop(['SalePrice'],axis=1)\ny_train=df_train['SalePrice']\nX_test = df_test.drop(['SalePrice'],axis=1)","d80c5d48":"import xgboost as xgb\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import GridSearchCV","347e89fb":"# #XGBoost hyper-parameter tuning\n# def hyperParameterTuning(X_train, y_train):\n#     param_tuning = {\n#         'learning_rate': [0.01, 0.1],\n#         'max_depth': [3, 5, 7],\n#         'min_child_weight': [1, 3, 5],\n#         'subsample': [0.5, 0.7],\n#         'colsample_bytree': [0.5, 0.7],\n#         'n_estimators' : [200, 500],\n#         'objective': ['reg:squarederror']\n#     }\n\n#     xgb_model = XGBRegressor()\n\n#     gsearch = GridSearchCV(estimator = xgb_model,\n#                            param_grid = param_tuning,                        \n#                            #scoring = 'neg_mean_absolute_error', #MAE\n#                            #scoring = 'neg_mean_squared_error',  #MSE\n#                            scoring = 'neg_root_mean_squared_error',\n#                            cv = 5,\n#                            n_jobs = -1,\n#                            verbose = 1)\n\n#     gsearch.fit(X_train,y_train)\n\n#     return gsearch.best_params_","a457409e":"# hyperParameterTuning(X_train, y_train)","95f72a92":"import pickle\npickle.dump(xgb_model, open('xgb_model.pkl', 'wb'))","a99635b6":"xgb_model = XGBRegressor(\n        objective = 'reg:squarederror',\n        colsample_bytree = 0.5,\n        learning_rate = 0.1,\n        max_depth = 3,\n        min_child_weight = 3,\n        n_estimators = 500,\n        subsample = 0.7)","ab8f336d":"xgb_model.fit(X_train, y_train)","9aa8c31e":"y_test = xgb_model.predict(X_test)","c7db5522":"len(y_test)","b89986d3":"sample_submission_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","bc46c719":"sample_submission_df['SalePrice'] = y_test\nsample_submission_df.to_csv('submission.csv', index=False)","95141f76":"submission_df = pd.read_csv('submission.csv')","f60d4736":"submission_df","6391e4e2":"# Preparing data set","83371660":"# Testing Data","23d10c41":"# Handle the missing data","a14531e8":"# Categorical Columns","6adf0356":"# Numeric columns","6146526c":"# Concatenate Test and Training data","2d7a8c99":"# Missing data","8770a100":"# Training Data"}}