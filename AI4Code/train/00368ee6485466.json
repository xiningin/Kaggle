{"cell_type":{"f591caa6":"code","b4023134":"code","4f5c9cb2":"code","758d0422":"code","c4d70362":"code","3ef42544":"code","3291f69d":"code","e0d1b21b":"code","dda02837":"code","06548cdc":"code","f2541059":"code","c5f31c2a":"code","9a42c574":"code","6052a716":"code","cc8305dc":"code","2be70825":"code","f5d671d5":"code","47ec20b5":"code","aaa0c525":"code","22cf6b1a":"code","9b0054cd":"code","24e846f8":"code","13fe279b":"code","6cde1c52":"code","50fc1d9e":"code","fb5d4064":"code","1b718bfa":"code","6f7eea63":"code","be4b8379":"code","8f12fa26":"code","64b174e3":"code","0a4613d0":"code","a477f859":"code","335f73d1":"code","bcd23fbc":"code","b14ab926":"code","cf455006":"code","735f4c59":"code","b94fa8ff":"code","fd95d606":"code","30924327":"code","a9adc341":"markdown","b5d201c9":"markdown","ea6c3108":"markdown","ba2789bf":"markdown","7a73c2f7":"markdown","f86dcdde":"markdown","b0a31e89":"markdown","efcc70fe":"markdown","ec3c900f":"markdown","c2369f25":"markdown","4784ab6d":"markdown","da10ff7d":"markdown","6e986c76":"markdown","7a5d2507":"markdown","d297833d":"markdown","c599e7e0":"markdown","dc449f8e":"markdown","90466e6f":"markdown","7a63bd46":"markdown","c80453c5":"markdown","0765ca25":"markdown","57c67a3b":"markdown","83ceb16d":"markdown","0c0a67d1":"markdown","3b013133":"markdown","cc75bd27":"markdown","9902a789":"markdown","fdad33ff":"markdown","a28ff7b3":"markdown","e33fa10f":"markdown","b205adf4":"markdown","31fcfab8":"markdown"},"source":{"f591caa6":"# Import libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport collections\n%matplotlib inline\n","b4023134":"netflix=pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")\nnetflix.head()","4f5c9cb2":"netflix[\"date_added\"] = pd.to_datetime(netflix['date_added'])\nnetflix['year_added'] = netflix['date_added'].dt.year","758d0422":"## Shape of dataset\nnetflix.shape","c4d70362":"## Columns in the dataframe\nnetflix.columns","3ef42544":"## Checking for Null Values\nnetflix.isnull().sum()","3291f69d":"## Check if there are any duplicate Titles\nnetflix.duplicated().sum()","e0d1b21b":"## Create duplicate dataset\n\nnetflix_copy = netflix.copy()\nnetflix_copy.head()","dda02837":"netflix_copy = netflix_copy.dropna()\nnetflix_copy.shape","06548cdc":"## Derive new columns from date which will provide the day, month and year in which they were added in the service\n\nnetflix_copy['date_added'] = pd.to_datetime(netflix['date_added'])\nnetflix_copy['Day_of_release'] = netflix_copy['date_added'].dt.day\nnetflix_copy['Month_of_release']= netflix_copy['date_added'].dt.month\nnetflix_copy['Year_of_release'] = netflix_copy['date_added'].dt.year\n\nnetflix_copy['Year_of_release'].astype(int);\nnetflix_copy['Day_of_release'].astype(int);","f2541059":"col = \"type\"\ngroup_value = netflix[col].value_counts().reset_index()\ngroup_value = group_value.rename(columns = {col : \"count\", \"index\" : col})\n\n## plotting graph\n\nlabels = group_value.type\nsizes = group_value['count']\nexplode=(0.1,0)\n\nfig1, ax = plt.subplots()\nax.pie(sizes,explode=explode,labels=labels,autopct='%1.1f%%', shadow=True)\nax.axis('equal')\nplt.show()","c5f31c2a":"plt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"rating\", data=netflix, palette=\"Set1\", order=netflix['rating'].value_counts().index[0:15])","9a42c574":"# Make separate dataframe for Movies and shows\n\nnetflix_shows=netflix[netflix['type']=='TV Show']\nnetflix_movies=netflix[netflix['type']=='Movie']","6052a716":"plt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(y=\"release_year\", data=netflix_movies, palette=\"Set2\", order=netflix_movies['release_year'].value_counts().index[0:15])\nplt.title('Movies released per year')\nplt.xlabel('Number of movies released')","cc8305dc":"plt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(y=\"release_year\", data=netflix_shows, palette=\"Set2\", order=netflix_shows['release_year'].value_counts().index[0:15])\nplt.title('TV Shows released per year')\nplt.xlabel('Number of TV Shows released')","2be70825":"imdb_ratings=pd.read_csv('\/kaggle\/input\/imdb-extensive-dataset\/IMDb ratings.csv',usecols=['weighted_average_vote'])\nimdb_titles=pd.read_csv('\/kaggle\/input\/imdb-extensive-dataset\/IMDb movies.csv', usecols=['title','year','genre','language'])\n\nratings = pd.DataFrame({'Title':imdb_titles.title,\n                    'Release Year':imdb_titles.year,\n                    'Language': imdb_titles.language,\n                    'Rating': imdb_ratings.weighted_average_vote,\n                    'Genre':imdb_titles.genre})\nratings.drop_duplicates(subset=['Title','Release Year','Rating'], inplace=True)\nratings.rename(columns ={'Rating':'Out_of_10_rating'},inplace=True)\nratings.head()","f5d671d5":"## Drop NA from ratings\n\nratings = ratings.dropna()","47ec20b5":"## Using Inner Join to connect Netflix database with the IMDB Ratings\n\nNetflix_Ratings = ratings.merge(netflix, left_on = 'Title', right_on = 'title', how='inner')\nNetflix_Ratings.sort_values(by = 'Out_of_10_rating', ascending = False).head()","aaa0c525":"# Make separate dataframe for Movies and shows\n\nnetflix_shows=Netflix_Ratings[Netflix_Ratings['type']=='TV Show'].sort_values(by = 'Out_of_10_rating', ascending = False)\nnetflix_movies=Netflix_Ratings[Netflix_Ratings['type']=='Movie'].sort_values(by = 'Out_of_10_rating', ascending = False)","22cf6b1a":"top_10_movies = netflix_movies.sort_values(\"Out_of_10_rating\", ascending = False)\ntop_10_movies = top_10_movies[ top_10_movies['Release Year'] > 2000]\ntop_10_movies[['title', \"Out_of_10_rating\"]][0:10]","9b0054cd":"top_10_shows = netflix_shows.sort_values(\"Out_of_10_rating\", ascending = False)\ntop_10_shows = top_10_shows[ top_10_shows['Release Year'] > 2000]\ntop_10_shows[['title', \"Out_of_10_rating\"]][0:10]","24e846f8":"df = Netflix_Ratings[ (Netflix_Ratings['release_year']>2007) & (Netflix_Ratings['release_year']< 2020) ]\n\nd1 = df[df[\"type\"] == \"TV Show\"]\nd2 = df[df[\"type\"] == \"Movie\"]\n\ncol = \"release_year\"\n\nvc1 = d1[col].value_counts().reset_index()\nvc1 = vc1.rename(columns = {col : \"count\", \"index\" : col})\nvc1['percent'] = vc1['count'].apply(lambda x : 100*x\/sum(vc1['count']))\nvc1 = vc1.sort_values(col)\n\nvc2 = d2[col].value_counts().reset_index()\nvc2 = vc2.rename(columns = {col : \"count\", \"index\" : col})\nvc2['percent'] = vc2['count'].apply(lambda x : 100*x\/sum(vc2['count']))\nvc2 = vc2.sort_values(col)\n\ntrace1 = go.Scatter(x=vc1[col], y=vc1[\"count\"], name=\"TV Shows\", marker=dict(color=\"#a678de\"))\ntrace2 = go.Scatter(x=vc2[col], y=vc2[\"count\"], name=\"Movies\", marker=dict(color=\"#6ad49b\"))\ndata = [trace1, trace2]\nlayout = go.Layout(title=\"Content added over the years\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data, layout=layout)\nfig.show()","13fe279b":"Netflix_Ratings['listed_in'] = Netflix_Ratings['listed_in'].str.split(',')\nNetflix_Ratings['listed_in'].explode().nunique()","6cde1c52":"Netflix_Ratings['listed_in'].explode().unique()","50fc1d9e":"## Removing white spaces\ngenres = Netflix_Ratings['listed_in'].explode()\ngenres = [genre.strip() for genre in genres]\ngenre_count = collections.Counter(genres)\nprint(genre_count.most_common(5))","fb5d4064":"len(set(genres))","1b718bfa":"genre_df = pd.DataFrame(genre_count.most_common(5), columns = ['Genre','Count'])\ngenre_df","6f7eea63":"plt = sns.barplot(x = 'Genre', y = 'Count', data = genre_df)\nplt.set_xticklabels(plt.get_xticklabels(), rotation=45, ha='right')","be4b8379":"## Checking null values for country\nNetflix_Ratings['country'].isna().sum()","8f12fa26":"## Create new dataframe where there are no null values for country.\ncountry = Netflix_Ratings[Netflix_Ratings['country'].notna()]\ncountry['country'].isna().sum()","64b174e3":"country.head(20)","0a4613d0":"## There are more than 1 country for some rows separated by (,)\n## Hence, separating these values\n\ncountry['country'] =country['country'].str.split(',')\n\ncountry['country'].explode().unique()","a477f859":"country['country'].explode().value_counts()","335f73d1":"## Remove the space\n\ncountries = country['country'].explode()\ncountries = [country.strip() for country in countries]\ncountry_count = collections.Counter(countries)\n\nprint(country_count.most_common(5))","bcd23fbc":"# Visualize top countries\ntop_countries = country_count.most_common(5)\ntop_countries_df = pd.DataFrame(top_countries, columns=['country','count'])\ntop_countries_df","b14ab926":"plt = sns.barplot(x=\"country\", y=\"count\",palette=\"Set1\", data=top_countries_df)\nplt.set_xticklabels(plt.get_xticklabels(), rotation=45, ha='right')","cf455006":"Netflix_Ratings['Month'] = pd.DatetimeIndex( Netflix_Ratings['date_added']).month_name()\nNetflix_Ratings.head(30)","735f4c59":"Months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nplot = sns.countplot(x=\"Month\",order=Months, data=Netflix_Ratings)\n\nplot.set_xticklabels(plot.get_xticklabels(), rotation=40 , ha=\"right\")","b94fa8ff":"India = country.explode(\"country\")\nIndia = India[India['country']=='India']","fd95d606":"def content_over_years(country):\n    movie_per_year=[]\n\n    tv_shows_per_year=[]\n    for i in range(2008,2020):\n        h=netflix.loc[(netflix['type']=='Movie') & (netflix.year_added==i) & (netflix.country==str(country))] \n        g=netflix.loc[(netflix['type']=='TV Show') & (netflix.year_added==i) &(netflix.country==str(country))] \n        movie_per_year.append(len(h))\n        tv_shows_per_year.append(len(g))\n\n\n\n    trace1 = go.Scatter(x=[i for i in range(2008,2020)],y=movie_per_year,mode='lines+markers',name='Movies')\n\n    trace2=go.Scatter(x=[i for i in range(2008,2020)],y=tv_shows_per_year,mode='lines+markers',name='TV Shows')\n\n    data=[trace1,trace2]\n\n    layout = go.Layout(title=\"Content added over the years in \"+str(country), legend=dict(x=0.1, y=1.1, orientation=\"h\"))\n\n    fig = go.Figure(data, layout=layout)\n\n    fig.show()\ncountries=['India']\n\nfor country in countries:\n    content_over_years(str(country))","30924327":"## Top 10 Hindi Movies\n\nIndia[India['Language']=='Hindi'].sort_values(by=['Out_of_10_rating'], ascending=False).head(10)\ntop_10_shows_india = India[India['Language']=='Hindi'].sort_values(by=['Out_of_10_rating'], ascending=False)\ntop_10_shows_india = top_10_shows_india[ top_10_shows_india['Release Year'] >= 2000]\ntop_10_shows_india[['title', \"Out_of_10_rating\"]][0:10]","a9adc341":"#### 2017 is the year in which most movies (650+) were released on the platform. ","b5d201c9":"# **Netflix Data Analysis**\n\n![](https:\/\/hdlovewall.com\/wallpaper\/2015\/11\/sad-love-movies-on-netflix-10-background.png)\n\nNetflix is an streaming service which is growing in India at an incredible fast rate. This is an EDA to understand growth and popularity of Netflix over last few years in India.","ea6c3108":"This is my first public notebook on Kaggle. Please suggest me further advanced ideas of data exploration to gain valuable insights.","ba2789bf":"No duplicate Titles are there in the dataset.","7a73c2f7":"Netflix started releasing Indian Movies from 2016. We can see spike in data in 2018. This makes sense as Netflix started investing heavily in Indian Market in same year.","f86dcdde":"### Merging Netflix Dataset with IMDB Dataset\n\nSince we don't have the \"Out of 10 Ratings\" in the Netflix dataset, importing IMDB dataset.\nIt will provide us with ratings and new columns which can be used for further EDA.","b0a31e89":"### Year of Most Content Release","efcc70fe":"United states occurs twice as it contains white character at start. Need to remove the character.","ec3c900f":"From 41 different categories, below are top 5 :\n1. Dramas\n2. International Movies\n3. Comedies\n4. Independent Movies\n5. Action and Adventure","c2369f25":"### Top 10 On TV Shows on Netflix","4784ab6d":"We got 65 different categories.","da10ff7d":"There are 41 different categories after removing the duplicates.","6e986c76":"From plot, we can clearly say that most content is released from October to January. \nThe reason being Holidays.\n\nWe can speculate that it will be more beneficial to release content in these months.","7a5d2507":"Its observed that in 2018, Number of movies released on platform are way more than number of TV Shows released. But we can see a changed in this trend in 2019.\n\nNetflix started to invest and release more TV Shows on platform in different regions as popularity of Shows is increasing.","d297833d":"* This shows that 2\/3 content on the Netflix is Movies and 1\/3 is TV Shows.","c599e7e0":"### Top 10 On Movies on Netflix","dc449f8e":"## Conclusion :\n   1. There are 33% TV Shows on Netflix and they are focusing on developing more TV Shows as of late.\n   2. Most of the content on Netflix 'TV-MA'.\n   3. Netflix releases large content in Holiday Seasin (October to January).\n   4. Netflix is focusing on expanding their base in India. From 2017, Netflix has started releasing Indian content on the platform.","90466e6f":"### Content Type","7a63bd46":"## Data Visualization","c80453c5":"### Number of Movies and TV Shows each country produced","0765ca25":"### Finding popular genres","57c67a3b":"### Ratings Description\n\n1. TV-MA - This program is specifically designed to be viewed by adults and therefore may be unsuitable for children under 17\n2. TV-14 - This program contains some material that many parents would find unsuitable for children under 14 years of age\n3. TV-PG - This program contains material that parents may find unsuitable for younger children\n4. R - Under 17 requires accompanying parent or adult guardian\n5. PG-13 - Some material may be inappropriate for children under 13\n6. NR - Not rated\n7. PG - Some material may not be suitable for children\n8. TV-Y7 - This program is designed for children age 7 and above\n9. TV-G - This program is suitable for all ages\n10. TV-Y - This program is designed to be appropriate for all children\n11. TV-Y7-FV - This program is designed for children age 7 and above containing some fantasy violence\n12. G - All ages admitted\n13. UR - Unrated\n14. NC-17- No One 17 and Under Admitted","83ceb16d":"After US, India is the second largest country where most of the content is produced.\n\nHence it can be said that, investing in Indian Film Industry is beneficial.","0c0a67d1":"There are some duplicates as they contain white spaces in them.","3b013133":"### Derive new columns","cc75bd27":"### Popular Indian Movies","9902a789":"The most number of TV Shows and Movies are rated 'TV-MA' followed by 'TV-14' (Those can be viewed by viewere above age of 14) and then 'TV-PG' (Viewed after parental approval).\n\nR rated programs are 4th most on the platform.","fdad33ff":"### When most content is released?","a28ff7b3":"### Netflix In India","e33fa10f":"### Null Value Treatment","b205adf4":"#### More than 400 TV shows were released in 2019 which is most number of TV Shows released ever on the platform.","31fcfab8":"#### Loading the dataset"}}