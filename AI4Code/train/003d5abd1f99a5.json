{"cell_type":{"62a77a1c":"code","a7a67090":"code","92697673":"code","513c14dc":"code","48bcac10":"code","499aae38":"code","951098b5":"code","584f18da":"code","5fe980bb":"code","be558e3d":"code","39eef728":"code","d46bb79b":"code","27598b89":"code","939d5b12":"code","1f6a1f9b":"code","408768c8":"markdown","b9738edc":"markdown","811730b6":"markdown","1bc005ac":"markdown","3fce8809":"markdown","c7c1bdad":"markdown","fc5c21d5":"markdown","4662b5b3":"markdown","fcd9370b":"markdown","15890e74":"markdown","eae68543":"markdown","2700e763":"markdown","a3caf86c":"markdown","11418953":"markdown","54978ff4":"markdown"},"source":{"62a77a1c":"import pandas as pd","a7a67090":"\ndf = pd.read_csv(\"..\/input\/heightweightcsv\/Height_weight.csv\")","92697673":"df.keys()","513c14dc":"# y = mx + c    y = dependent x = ind","48bcac10":"x = df.Height\ny = df.Weight\nx.values","499aae38":"x = df.iloc[:, 0:1].values  \ny = df.iloc[:, 1].values\nx","951098b5":"# linear regression\n# sklearn\n\nfrom sklearn.linear_model import LinearRegression","584f18da":"MachineBrain = LinearRegression()  #class\n \nMachineBrain.fit(x, y)","5fe980bb":"\nm = MachineBrain.coef_   #slope\nc = MachineBrain.intercept_ #intercept","be558e3d":"y_pred = m*1.47+c\ny_pred","39eef728":"# prediction with real(training) data\ny_predict = MachineBrain.predict(x)","d46bb79b":"y_predict","27598b89":"# prediction with new data\nh1 = 1.71\nh2 = 1.62\nw = MachineBrain.predict([[h1], [h2]])\nw","939d5b12":"import matplotlib.pyplot as plt","1f6a1f9b":"plt.scatter(x,y)\nplt.scatter([h1, h2],w, color = [\"green\", \"yellow\"])\nplt.plot(x, y_predict, c = \"red\")\nplt.xlabel(\"Height\")\nplt.ylabel(\"Weignt\")\nplt.show()","408768c8":"Plotting the scatter plot using the existing data and new data.","b9738edc":"we are importing LinearRegression class from scikit-learn model","811730b6":"### Reading data from file name 'Height_Weight.csv' and storing in data frame named 'df'","1bc005ac":"Printing the output.","3fce8809":"Predicting the output using new data with trained model.","c7c1bdad":"Calculating the output using the mathematical expression.","fc5c21d5":"Here, column Height in data frame named df is assigned to inependent variable x.\n\ncommand 'x.values' displays all the values in column Height\n\nand column weight in data frame named df is assigned to depenent variable y","4662b5b3":"y=mx+c is the mathematical equation used to find linear regression.","fcd9370b":"we are assigning the LinearRegression class to a variable called \"MachineBrain\".\n\nfitting it with the available data, Which is assigned to variables x and y.","15890e74":"Generating value of slope using coef_ function.\n\nGenerating value of intercept using intercept_ function","eae68543":"using integer-location \"iloc\" to get the specific values using indexing\nHere, for independent variable x we are using slicing object with list of integers, but not a scalar integer. to get a multidimensional array. since it is a linear regression it can have one or more explanatory variables.\n\noutput of variable x:\n\narray([[1.47], [1.5 ], [1.52], [1.55], [1.57], [1.6 ], [1.63], [1.65], [1.68], [1.7 ], [1.73], [1.75], [1.78], [1.8 ], [1.83]])\n\nfor dependent variable y, we are using slicing object with scalar integer.\n\noutput of variable y:\n\narray([52.21, 53.12, 54.48, 55.84, 57.2 , 58.57, 59.93, 61.29, 63.11,\n64.47, 66.28, 68.1 , 69.92, 72.19, 74.46])  ","2700e763":"# #  LINEAR REGRESSION MODEL\n\n\nimporting pandas library and naming it as 'pd' for convenience","a3caf86c":"**displaying the columns in the data frame using 'keys()' function**","11418953":"Predicting the output with training data.","54978ff4":"Importing the matplotlib library and naming as ply."}}