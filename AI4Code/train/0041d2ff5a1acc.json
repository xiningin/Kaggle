{"cell_type":{"d76830ca":"code","3faf02c5":"code","c42c0145":"code","e2191640":"code","98ed14e9":"code","816ab3dc":"code","ebc1ecdc":"code","755527b0":"code","32d19e81":"code","98d67db3":"code","71a7fbbd":"code","09a704b3":"code","b0db076a":"code","2524f297":"code","35e9ec5b":"code","8a028862":"code","b0c50df1":"code","023b245a":"code","c5382f5b":"code","650d3b09":"code","df0a9e88":"code","24b80c1f":"code","b70a52b5":"code","2d68b4ee":"code","279d2c10":"code","2b3ba8fc":"code","d9a1eb01":"code","122c58da":"code","5f6724a5":"code","20fb9821":"code","60a59b1e":"code","0875a010":"code","bede1edb":"code","d2b84474":"code","01bcac35":"code","9ee9b593":"code","9f0d8d4a":"code","ee418978":"code","e8d63d8d":"code","2a8a11b2":"markdown","1e650a42":"markdown","5104426f":"markdown","cb9f0dbf":"markdown","0d4d4fe7":"markdown","93711898":"markdown","ad29a62d":"markdown","023b263c":"markdown","f795f958":"markdown","9d51192e":"markdown","92008981":"markdown","620b58a1":"markdown","33345b83":"markdown","dfdeba2e":"markdown","7538d9a4":"markdown","3d9c2e05":"markdown","f6055ee6":"markdown","a5402e70":"markdown","23a385e5":"markdown","b5ce0cfb":"markdown","836f13cf":"markdown","275741fe":"markdown","ea89c92f":"markdown","4851ddea":"markdown","13a6c6a2":"markdown","1aa6fdc6":"markdown","292b787b":"markdown","c731453b":"markdown","463a213b":"markdown","acda9ecd":"markdown","21f227e6":"markdown","9017630c":"markdown","f1d8347e":"markdown","55320615":"markdown","a2e1f0c2":"markdown","a4962656":"markdown","d4676ba1":"markdown","d4b7ac6a":"markdown","0c234102":"markdown","b08b012d":"markdown","66b09725":"markdown","f453a0b4":"markdown","6a1112ab":"markdown","fd0d8044":"markdown","a6f3b95f":"markdown","7c8fb297":"markdown","ec64e7b6":"markdown","faa3e36d":"markdown","68227679":"markdown","883e183c":"markdown","6d7292b5":"markdown","d379dbb0":"markdown","cd1f07f8":"markdown","4af69c9c":"markdown","aafd77c0":"markdown","59c7f5cc":"markdown","b5e7ed6f":"markdown","8b47d0bf":"markdown","bc25b6fd":"markdown","8e2939ed":"markdown","60befff6":"markdown","62d0d186":"markdown","18afe9d6":"markdown","6a4cccbe":"markdown","9dd7dfd1":"markdown","a98c5ebc":"markdown","5515538e":"markdown"},"source":{"d76830ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3faf02c5":"import numpy as np \nimport pandas as pd \nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt","c42c0145":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\nyear2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\nyear2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv', encoding=\"windows-1252\")\nyear2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv', encoding=\"windows-1252\")\nyear2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv', encoding=\"windows-1252\")","e2191640":"year2015.head()","98ed14e9":"year2015.info()","816ab3dc":"year2016.head()","ebc1ecdc":"year2016.info()","755527b0":"year2017.head()","32d19e81":"year2017.info()","98d67db3":"year2018.head()","71a7fbbd":"year2018.info()","09a704b3":"year2019.head()","b0db076a":"year2019.info()","2524f297":"year2018['Perceptions of corruption'] = year2018['Perceptions of corruption'].fillna(0)","35e9ec5b":"year2018.info()","8a028862":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\nyear2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\nyear2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv', encoding=\"windows-1252\")\nyear2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv', encoding=\"windows-1252\")\nyear2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv', encoding=\"windows-1252\")\n\n# prepare data frames\ndf2015 = year2015.iloc[:20,:]\ndf2016 = year2016.iloc[:20,:]\ndf2017 = year2017.iloc[:20,:]\ndf2018 = year2018.iloc[:20,:]\ndf2019 = year2019.iloc[:20,:]\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# creating trace1\ntrace1 =go.Scatter(\n                    x = df2015['Country'],\n                    y = df2015['Happiness Score'],\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'red'),\n                    #line = dict(color='firebrick', width=4, dash='dot'),\n                    text= df2015.Country)\n# creating trace2\ntrace2 =go.Scatter(\n                    x = df2015['Country'],\n                    y = df2016['Happiness Score'],\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'green'),\n                    text= df2016.Country)\n# creating trace3\ntrace3 =go.Scatter(\n                    x = df2015['Country'],\n                    y = df2017['Happiness.Score'],\n                    mode = \"markers\",\n                    name = \"2017\",\n                    marker = dict(color = 'blue'),\n                    text= df2017.Country)\n\n# creating trace4\ntrace4 =go.Scatter(\n                    x = df2015['Country'],\n                    y = df2018['Score'],\n                    mode = \"markers\",\n                    name = \"2018\",\n                    marker = dict(color = 'black'),\n                    text= df2017.Country)\n\n# creating trace5\ntrace5 =go.Scatter(\n                    x = df2015['Country'],\n                    y = df2019['Score'],\n                    mode = \"markers\",\n                    name = \"2019\",\n                    marker = dict(color = 'pink'),\n                    text= df2017.Country)\n\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = dict(title = 'Happiness Rate Changing 2015 to 2019 for Top 20 Countries',\n              xaxis= dict(title= 'Country',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Happiness',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\"\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","b0c50df1":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")","023b245a":"data = dict(\n        type = 'choropleth',\n        colorscale = 'Viridis',\n         marker_line_width=1,\n        locations = year2015['Country'],\n        locationmode = \"country names\",\n        z = year2015['Happiness Score'],\n        text = year2015['Country'],\n        colorbar = {'title' : 'Happiness Score'},\n        \n      )\nlayout = dict(title = 'Happiness Map',\n              geo = dict(projection = {'type':'mercator'}, showocean = False, showlakes = True, showrivers = True, )\n             )\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap,validate=False)","c5382f5b":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\nyear2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\nyear2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv', encoding=\"windows-1252\")\nyear2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv', encoding=\"windows-1252\")\nyear2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv', encoding=\"windows-1252\")\n\ndf2015 = year2015.iloc[:50,:]\ndf2016 = year2016.iloc[:50,:]\ndf2017 = year2017.iloc[:50,:]\ndf2018 = year2018.iloc[:50,:]\ndf2019 = year2019.iloc[:50,:]\n\n\n# Creating trace1\ntrace1 = go.Scatter(x = df2015['Country'],\n                    y = df2015['Happiness Score'],\n                    mode = \"lines+markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'red'),\n                    text= df2015.Country)\n\n# Creating trace2\ntrace2 = go.Scatter(x = df2015['Country'],\n                    y = df2016['Happiness Score'],\n                    mode = \"lines+markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'blue'),\n                    text= df2015.Country)\n\n# Creating trace3\ntrace3 = go.Scatter(x = df2015['Country'],\n                    y = df2017['Happiness.Score'],\n                    mode = \"lines+markers\",\n                    name = \"2017\",\n                    marker = dict(color = 'green'),\n                    text= df2015.Country)\n\n# Creating trace4\ntrace4 = go.Scatter(x = df2015['Country'],\n                    y = df2018['Score'],\n                    mode = \"lines+markers\",\n                    name = \"2018\",\n                    marker = dict(color = 'black'),\n                    text= df2015.Country)\n\n# Creating trace5\ntrace5 = go.Scatter(x = df2015['Country'],\n                    y = df2019['Score'],\n                    mode = \"lines+markers\",\n                    name = \"2019\",\n                    marker = dict(color = 'pink'),\n                    text= df2015.Country)\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = dict(title = 'Happiness Score of top 50 Countries from 2015 to 2019',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Happiness Score',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\"\n             )\n\nfig = dict(data = data, layout = layout)\niplot(fig)","650d3b09":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\ndf = year2015.iloc[:50,:]\n\n# Creating trace1\ntrace1 = go.Scatter(x = df['Country'],\n                    y = df['Economy (GDP per Capita)'],\n                    mode = \"lines+markers\",\n                    name = \"Economy\",\n                    marker = dict(color = 'red'),\n                    text= df.Country)\n\n# Creating trace2\ntrace2 = go.Scatter(x = df['Country'],\n                    y = df['Freedom'],\n                    mode = \"lines+markers\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'blue'),\n                    text= df.Country)\n\n# Creating trace3\ntrace3 = go.Scatter(x = df['Country'],\n                    y = df['Trust (Government Corruption)'],\n                    mode = \"lines+markers\",\n                    name = \"Trust\",\n                    marker = dict(color = 'green'),\n                    text= df.Country)\n\n# Creating trace4\ntrace4 = go.Scatter(x = df['Country'],\n                    y = df['Dystopia Residual'],\n                    mode = \"lines+markers\",\n                    name = \"Dystopia Residual\",\n                    marker = dict(color = 'black'),\n                    text= df.Country)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Economy - Freedom - Trust - Dystopia Residual Values Comparision in 2015 for First 50 Countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)\n","df0a9e88":"year2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\ndf = year2016.iloc[:100,:]\n\n# Creating trace1\ntrace1 = go.Scatter(x = df['Country'],\n                    y = df['Economy (GDP per Capita)'],\n                    mode = \"lines+markers\",\n                    name = \"Economy\",\n                    marker = dict(color = 'red'),\n                    text= df.Country)\n\n# Creating trace2\ntrace2 = go.Scatter(x = df['Country'],\n                    y = df['Freedom'],\n                    mode = \"lines+markers\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'blue'),\n                    text= df.Country)\n\n# Creating trace3\ntrace3 = go.Scatter(x = df['Country'],\n                    y = df['Trust (Government Corruption)'],\n                    mode = \"lines+markers\",\n                    name = \"Trust\",\n                    marker = dict(color = 'green'),\n                    text= df.Country)\n\n# Creating trace4\ntrace4 = go.Scatter(x = df['Country'],\n                    y = df['Dystopia Residual'],\n                    mode = \"lines+markers\",\n                    name = \"Dystopia Residual\",\n                    marker = dict(color = 'black'),\n                    text= df.Country)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Economy - Freedom - Trust - Dystopia Residual Values Comparision in 2016 for First 50 Countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)\n","24b80c1f":"year2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv', encoding=\"windows-1252\")\ndf = year2017.iloc[:30,:]\n\n# Creating trace1\ntrace1 = go.Scatter(x = df['Country'],\n                    y = df['Economy..GDP.per.Capita.'],\n                    mode = \"lines+markers\",\n                    name = \"Economy\",\n                    marker = dict(color = 'red'),\n                    text= df.Country)\n\n# Creating trace2\ntrace2 = go.Scatter(x = df['Country'],\n                    y = df['Freedom'],\n                    mode = \"lines+markers\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'blue'),\n                    text= df.Country)\n\n# Creating trace3\ntrace3 = go.Scatter(x = df['Country'],\n                    y = df['Trust..Government.Corruption.'],\n                    mode = \"lines+markers\",\n                    name = \"Trust\",\n                    marker = dict(color = 'green'),\n                    text= df.Country)\n\n# Creating trace4\ntrace4 = go.Scatter(x = df['Country'],\n                    y = df['Dystopia.Residual'],\n                    mode = \"lines+markers\",\n                    name = \"Dystopia Residual\",\n                    marker = dict(color = 'black'),\n                    text= df.Country)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Economy - Freedom - Trust - Dystopia Residual Values Comparision in 2017 for First 50 Countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)\n\n","b70a52b5":"year2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv', encoding=\"windows-1252\")\ndf = year2018.iloc[:20,:]\n\n# Creating trace1\ntrace1 = go.Scatter(x = df['Country or region'],\n                    y = df['GDP per capita'],\n                    mode = \"lines+markers\",\n                    name = \"Economy\",\n                    marker = dict(color = 'red'),\n                    text= df['Country or region'])\n\n# Creating trace2\ntrace2 = go.Scatter(x = df['Country or region'],\n                    y = df['Freedom to make life choices'],\n                    mode = \"lines+markers\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'blue'),\n                    text= df['Country or region'])\n\n# Creating trace3\ntrace3 = go.Scatter(x = df['Country or region'],\n                    y = df['Social support'],\n                    mode = \"lines+markers\",\n                    name = \"Social support\",\n                    marker = dict(color = 'green'),\n                    text= df['Country or region'])\n\n# Creating trace4\ntrace4 = go.Scatter(x = df['Country or region'],\n                    y = df['Perceptions of corruption'],\n                    mode = \"lines+markers\",\n                    name = \"Perceptions of corruption\",\n                    marker = dict(color = 'black'),\n                    text= df['Country or region'])\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Economy - Freedom - Social Support - Perceptions of Corruption Values Comparision in 2018 for First 50 Countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)\n","2d68b4ee":"year2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv', encoding=\"windows-1252\")\ndf = year2019.iloc[:15,:]\n\n# Creating trace1\ntrace1 = go.Scatter(x = df['Country or region'],\n                    y = df['GDP per capita'],\n                    mode = \"lines+markers\",\n                    name = \"Economy\",\n                    marker = dict(color = 'red'),\n                    text= df['Country or region'])\n\n# Creating trace2\ntrace2 = go.Scatter(x = df['Country or region'],\n                    y = df['Freedom to make life choices'],\n                    mode = \"lines+markers\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'blue'),\n                    text= df['Country or region'])\n\n# Creating trace3\ntrace3 = go.Scatter(x = df['Country or region'],\n                    y = df['Social support'],\n                    mode = \"lines+markers\",\n                    name = \"Social support\",\n                    marker = dict(color = 'green'),\n                    text= df['Country or region'])\n\n# Creating trace4\ntrace4 = go.Scatter(x = df['Country or region'],\n                    y = df['Perceptions of corruption'],\n                    mode = \"lines+markers\",\n                    name = \"Perceptions of corruption\",\n                    marker = dict(color = 'black'),\n                    text= df['Country or region'])\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Economy - Freedom - Social Support - Perceptions of Corruption Values Comparision in 2019 for First 50 Countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)\n","279d2c10":"import plotly.express as px\n\nyear2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\ndf = year2015\n\nfig = px.sunburst(df, path=['Region', 'Country'], values='Happiness Score',\n                  color='Happiness Score', hover_data=['Happiness Rank'],\n                  color_continuous_scale='RdBu',\n                  color_continuous_midpoint=np.average(df['Happiness Score'], weights=df['Happiness Score']))\nfig.update_layout(hovermode=\"x unified\")\nfig.show()","2b3ba8fc":"df = year2016\nfig = px.sunburst(df, path=['Region', 'Country'], values='Happiness Score',\n                  color='Happiness Score', hover_data=['Happiness Rank'],\n                  color_continuous_scale='RdBu',\n                  color_continuous_midpoint=np.average(df['Happiness Score'], weights=df['Happiness Score']))\nfig.update_layout(hovermode=\"x unified\")\nfig.show()","d9a1eb01":"import plotly.graph_objs as go\n\n# prepare data frames\ndf = year2015\n\ntrace = go.Bar( x = df['Region'],\n                y = df['Country'].value_counts(),\n                marker = dict(color = 'rgba(255, 150, 255, 1)',\n                line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df.Country,\n                textposition='inside')\n\ndata = [trace]\nlayout = go.Layout(barmode = \"group\",\n              title = 'Counts of Countries according to their Region - 2015',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Counts',ticklen= 5,zeroline= False))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","122c58da":"df = year2016\n\ntrace = go.Bar(\n                x = df['Region'],\n                y = df['Country'].value_counts(),\n                name = \"citations\",\n                marker = dict(color = 'rgba(255, 0, 0, 1)',\n                line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df.Country,\n                hovertext = df['Happiness Score'],\n                textposition='inside')\n\ndata = [trace]\nlayout = go.Layout(barmode = \"group\",\n              title = 'Counts of Countries according to their Region - 2016',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Counts',ticklen= 5,zeroline= False))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","5f6724a5":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\ndf = year2015\n\ndata = [\n    {\n        'y': df['Trust (Government Corruption)'],\n        'x': df.Freedom,\n        'mode': 'markers',\n        'marker': {\n            'color': df['Health (Life Expectancy)'],\n            'size': df['Happiness Score'],\n            'showscale': True,\n        },\n        \"text\" :  df.Country,\n\n    }\n]\nlayout = go.Layout(barmode='group', hovermode=\"x\",\n                   title='Bubble Chart: x = Freedom, y = Trust, size = Happiness Score, Color = Health, year = 2015',\n                   xaxis=dict(title='Freedom'),\n                   yaxis=dict(title='Trust'))\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","20fb9821":"year2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\ndf = year2016\n\ndata = [\n    {\n        'y': df['Trust (Government Corruption)'],\n        'x': df.Freedom,\n        'mode': 'markers',\n        'marker': {\n            'color': df['Health (Life Expectancy)'],\n            'size': df['Happiness Score'],\n            'showscale': True\n        },\n        \"text\" :  df.Country    \n    }\n]\nlayout = go.Layout(barmode='overlay', hovermode=\"x\",\n                   title='Bubble Chart: x = Freedom, y = Trust, size = Happiness Score, Color = Health, year = 2016',\n                   xaxis=dict(title='Freedom'),\n                   yaxis=dict(title='Trust'),\n                  \n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","60a59b1e":"year2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv', encoding=\"windows-1252\")\n\n# prepare data frames\ndf2015 = year2015\n\ndf = df2015 \n# create trace 1 that is 3d scatter\ntrace1 = go.Scatter3d(\n    x=df.Freedom,\n    y=df['Trust (Government Corruption)'],\n    z=df['Health (Life Expectancy)'],\n    mode='markers',\n    marker=dict(\n        size=df['Happiness Score'],\n        color=df['Health (Life Expectancy)'],\n        showscale = True),\n    text =df.Country,\n    \n)\n\n\ndata = [trace1]\nlayout = dict(margin=dict(l=0,r=0,b=0,t=0), \n                   barmode='overlay', \n                   hovermode=\"x\",\n                   title = '3D Scatter: x = Freedom, y = Trust, z = Health, Color = Happiness Score, year = 2015',\n                   xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False),\n                   yaxis= dict(title= 'Happiness',ticklen= 5,zeroline= False),\n                   )\n\n\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","0875a010":"from wordcloud import WordCloud\n\nword2015 = year2015\nword2015 = word2015['Region']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color='white', width=1024, height=1024).generate(\" \".join(word2015))\nplt.imshow(wordcloud)\nplt.axis('off')\n\n\nplt.show()","bede1edb":"word2015 = year2015.iloc[:50,:]\nword2015 = word2015['Region']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color='white', width=1024, height=1024).generate(\" \".join(word2015))\nplt.imshow(wordcloud)\nplt.axis('off')\n\n\nplt.show()","d2b84474":"word2015 = year2015.iloc[50:100]\nword2015 = word2015['Region']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color='white', width=1024, height=1024).generate(\" \".join(word2015))\nplt.imshow(wordcloud)\nplt.axis('off')\n\n\nplt.show()","01bcac35":"word2015 = year2015.iloc[100:153]\nword2015 = word2015['Region']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color='white', width=1024, height=1024).generate(\" \".join(word2015))\nplt.imshow(wordcloud)\nplt.axis('off')\n\n\nplt.show()","9ee9b593":"# data preparation\nyear2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\ndf = year2016\n\npie1 = df.Country.value_counts()\nlabels = df.Region\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .2,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Distribution of Countries by Regions\",\n        \"annotations\": [\n            { \"font\": { \"size\": 25},\n              \"showarrow\": True,\n              \"text\": \"Regions\",\n                \"x\": 1,\n                \"y\": 1,\n            },\n        ]\n    }\n}\niplot(fig)","9f0d8d4a":"year2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\ndf = year2016","ee418978":"import plotly.express as px\nimport numpy as np\ndf = year2016\ndf[\"world\"] = \"world\" # in order to have a single root node\nfig = px.treemap(df, path=['world','Region', 'Country'], values='Happiness Score',\n                  color=df['Happiness Score'], hover_data=['Happiness Rank'],\n                  color_continuous_scale='RdBu',\n                  color_continuous_midpoint=np.average(df['Happiness Score'], weights=df['Happiness Score']))\nfig.show()","e8d63d8d":"year2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv', encoding=\"windows-1252\")\ndf = year2016.iloc[:20]\n\ntrace1 = go.Scatter(\n    x=df['Country'],\n    y=df['Freedom'],\n    name = \"Freedom\"\n)\ntrace2 = go.Scatter(\n    x=df['Country'],\n    y=df['Family'],\n    xaxis='x2',\n    yaxis='y2',\n    name = \"Family\"\n)\ntrace3 = go.Scatter(\n    x=df['Happiness Score'],\n    y=df['Economy (GDP per Capita)'],\n    xaxis='x3',\n    yaxis='y3',\n    name = \"Economy\"\n)\ntrace4 = go.Scatter(\n    x=df['Happiness Score'],\n    y=df['Generosity'],\n    xaxis='x4',\n    yaxis='y4',\n    name = \"Generosity\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Freedom, Family, Economy and Generosity vs First 20 Country and Their Happiness Score - year = 2016'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2a8a11b2":"Sunburst Chart Visualization of year2016 dataset.","1e650a42":"The bar chart is suitable for comparing multiple values. The dimension axis shows the category items compared, and the measure axis shows the value of each category item. In here, it is using for represent counts of Countries according to their Region.","5104426f":"<a id=\"8\"><\/a>\n# Bubble Charts","cb9f0dbf":"<a id=\"13\"><\/a>\n# Multiple Subplots","0d4d4fe7":"Explanation of Features for year2015:\n* **Country -->** Name of the country.\n* **Region -->** Region the country belongs to.\n* **Happiness Rank -->** Rank of the country based on the Happiness Score.\n* **Happiness Score -->** A metric measured in 2015 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **Standard Error -->** The standard error of the happiness score.\n* **Economy (GDP per Capita) -->** The extent to which GDP contributes to the calculation of the Happiness Score.\n* **Family -->** The extent to which Family contributes to the calculation of the Happiness Score\n* **Health (Life Expectancy) -->** The extent to which Life expectancy contributed to the calculation of the Happiness Score\n* **Freedom -->** The extent to which Freedom contributed to the calculation of the Happiness Score.\t \n* **Trust (Government Corruption) -->**\tThe extent to which Perception of Corruption contributes to Happiness Score.\n* **Generosity -->** The extent to which Generosity contributed to the calculation of the Happiness Score.\n* **Dystopia Residual -->** The extent to which Dystopia Residual contributed to the calculation of the Happiness Score.","93711898":"***What did we do?***\n\n* We have placed each year's 'Trust' values on the y-axis. \n* We have placed each year's 'Freedom' values on the x-axis.\n* We have placed each year's 'Health (Life Expectancy)' values on the colorscale. \n* We have placed each year's 'Happiness Score' values on the size. \n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","ad29a62d":"<a id=\"3\"><\/a> \n# Scatter Plots","023b263c":"***What did we do?***\n\n* We calculated how many countries are in each region.\n* We created the Label.\n* We placed Value and Label.\n* We determined layout and showed the figure.","f795f958":"**Content**\n1. [Importing the Necessary Libraries](#1)\n1. [Read Datas & Explanation of Features & Information About Datasets](#2)\n1. [Scatter Plots](#3)\n1. [Map Plots](#4)\n1. [Line Plots](#5)\n1. [Sunburst Charts](#6)\n1. [Bar Charts](#7)\n1. [Bubble Charts](#8)\n1. [3D Scatter Plot with Colorscaling](#9)\n1. [Word Clouds](#10)\n1. [Pie Charts](#11)\n1. [Treemap Charts](#12)\n1. [Multiple Subplots](#13)\n1. [Conclusion](#14)\n","9d51192e":"Similar to Scatter Plot. We have 3 dimensions here as x - y - z. If we add size and color, then we have five dimensions. It is a multi dimensional graph. ","92008981":"Explanation of Features for year2016:\n* **Country -->** Name of the country.\n* **Region -->** Region the country belongs to.\n* **Happiness Rank -->** Rank of the country based on the Happiness Score.\n* **Happiness Score -->** A metric measured in 2016 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **Lower Confidence Interval -->** Lower Confidence Interval of the Happiness Score\n* **Upper Confidence Interval -->** Upper Confidence Interval of the Happiness Score\n* **Economy (GDP per Capita) -->** The extent to which GDP contributes to the calculation of the Happiness Score.\n* **Family -->** The extent to which Family contributes to the calculation of the Happiness Score\n* **Health (Life Expectancy) -->** The extent to which Life expectancy contributed to the calculation of the Happiness Score\n* **Freedom -->** The extent to which Freedom contributed to the calculation of the Happiness Score.\t \n* **Trust (Government Corruption) -->**\tThe extent to which Perception of Corruption contributes to Happiness Score.\n* **Generosity -->** The extent to which Generosity contributed to the calculation of the Happiness Score.\n* **Dystopia Residual -->** The extent to which Dystopia Residual contributed to the calculation of the Happiness Score.","620b58a1":"The scatter plots helps you find possible relationships between values and outliers in datasets.\n\n**Pros:** The scatter plot is a great way to visualize the correlation of two or more calculations at the same time. The third calculation is an effective way to highlight values and make it easier to identify items.\n\n**Cons:** The scatter chart may not be easily understood by inexperienced users as it has the measure value in both axes and the optional third measure adds complexity to the interpretation. Make sure a novice user can interpret the scatter plot correctly. Using descriptive labels is an effective way to make the visualization easier to interpret. The values can be overlaid on each other and not visible until you zoom in.","33345b83":"<a id=\"1\"><\/a> \n# Importing the Necessary Libraries","dfdeba2e":"Coroplet Maps are used to show geographic regions or areas separately. The visualization of the map is formatted or shaded according to the data. This feature provides the opportunity to visualize values according to their differences in a geographic map.\n\nData variables are used for each region in the map in coloring processes. To put it simply, this geographical map is transparent, light or dark, with the possibility to create mixtures and nuances in the entire spectrum of colors; offers a lot of design possibilities to the user.","7538d9a4":"***We have 1 NaN variable on the dataset 'year2018'. We must replace it with 0 in order not to cause problems in visualization.***","3d9c2e05":"* background_color --> color of back ground\n* generate --> generates the 'Region' names ","f6055ee6":"<a id=\"12\"><\/a> \n# Treemap Charts","a5402e70":"# Visualization with Plotly for Beginners","23a385e5":"When you hover over a bar, you see the happiness score for that country. If you zoom in, you will see the country's name.","b5ce0cfb":"* x --> x Label.\n* y --> y Label.\n* marker --> color of bars. RGB-A (RED-GREEN-BLUE - ALPHA; ALPHA refers opacity, range: 0 <= ALPHA <= 1)\n* text --> text of each bar.\n* textposition --> position of text. Possible values: ['inside', 'outside', 'auto', 'none']","836f13cf":"* TRACE\n  * x --> x axis\n  * y --> y axis\n  * mode --> how points are displayed\n  * name --> name of the color (i.e.: red for 2015, green for 2016..)\n  * marker --> color\n  * text --> Text that show when yo came on to a dot. (In this ex: Country name)\n* data --> sum of traces\n* layout --> layout of the graphic.\n* fig --> combines data and layout\n* iplot() --> shows the figure","275741fe":"Bubble Chart is a multivariate chart. The bubble chart shows the transition between the Scatter Chart and the Proportional Area Chart.\n\nWhile Bubble Charts operate around a numerical system using a Cartesian coordinate system such as a Scatter Chart, the X and Y axes take variable values. However, unlike the Scatter Chart, each point can be used to indicate a layer or category. (In the form of an indicator or ranking). Each dot drawn represents a third variable within its coverage area. It shows the timing by showing the variable in the flow of data variables on an axis. Coloring can be used to separate categories or distinguish additional data variables.","ea89c92f":"I tried to explain some Plotly graphics. Examples can be expanded. \n\n* If you have questions, please comment them. I will try to explain if you don't understand.\n* If you liked this notebook, please let me know :)\n* Thank you for your time.","4851ddea":"Treemaps are an alternative way of visualizing data under hierarchical structures by creating a region for each data category with tree-shaped charts. Each category represents a rectangle. Inside each rectangle are other rectangles that represent subcategories. When a value is placed in a category, its proportion indicates the size of the rectangle. Sub-categories combine to form a higher category. If a value is not assigned to the subcategories, this rectangle is the size of the rectangles that represent a subcategory within the larger rectangles that make up the other main categories. The arrangement of the rectangles is separated and organized depending on the sub-algorithm used.","13a6c6a2":"Explanation of Features for year2018:\n* **Overall Rank -->** Rank of the country based on the Happiness Score.\n* **Country or region -->** Name of the country.\n* **Score -->** A metric measured in 2018 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **GDP per Capita -->** The extent to which GDP contributes to the calculation of the Happiness Score.\n* **Social support -->** \n* **Health Life Expectancy. -->** The extent to which Life expectancy contributed to the calculation of the Happiness Score\n* **Freedom to make life choices -->** The extent to which Freedom contributed to the calculation of the Happiness Score.\n* **Generosity -->** The extent to which Generosity contributed to the calculation of the Happiness Score.\n* **Perceptions of corruption -->**\tThe extent to which Perception of Corruption contributes to Happiness Score.","1aa6fdc6":"Explanation of Features for year2019:\n* **Overall Rank -->** Rank of the country based on the Happiness Score.\n* **Country or region -->** Name of the country.\n* **Score -->** A metric measured in 2017 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **GDP per Capita -->** The extent to which GDP contributes to the calculation of the Happiness Score.\n* **Social support -->** \n* **Health Life Expectancy. -->** The extent to which Life expectancy contributed to the calculation of the Happiness Score\n* **Freedom to make life choices -->** The extent to which Freedom contributed to the calculation of the Happiness Score.\n* **Generosity -->** The extent to which Generosity contributed to the calculation of the Happiness Score.\n* **Perceptions of corruption -->**\tThe extent to which Perception of Corruption contributes to Happiness Score.","292b787b":"***What did we do?***\n\n* We have placed each year's 'Economy', 'Freedom', 'Trust', 'Dystopia Residual' values on the y-axis. (for dataset: 2016)\n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","c731453b":"***What did we do??***\n\n* We selected type and colorscale.\n* We placed countries into map.\n* We took 'Happiness Score' for density. (colorscale)\n* We setted Titles.\n","463a213b":"### If you have questions please ask them on the comment section.","acda9ecd":"<a id=\"14\"><\/a> \n# Conclusion","21f227e6":"<a id=\"11\"><\/a>\n# Pie Charts","9017630c":"***What did we do?***\n\n* We have placed each year's 'Economy', 'Freedom', 'Trust', 'Dystopia Residual' values on the y-axis. (for dataset: 2015)\n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","f1d8347e":"* TRACE\n  * x --> x axis\n  * y --> y axis\n  * mode --> how points are displayed\n  * name --> name of the color \n  * marker --> color\n    * size --> 4th dimension. Size of points according to key value.\n    * color --> 5th dimension. \n    * showscale --> colorbar\n  * text --> Text that show when yo came on to a dot. (In this ex: Country name)\n* data --> sum of traces\n* layout --> layout of the graphic.\n* fig --> combines data and layout\n* iplot() --> shows the figure","55320615":"**Datasets are ready to being visualize. Let's Start!**","a2e1f0c2":"***What did we do?***\n\n* We have placed each year's 'Economy', 'Freedom', 'Social support', 'Perceptions of corruption' values on the y-axis. (for dataset: 2019)\n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","a4962656":"<a id=\"9\"><\/a> \n# 3D Scatter Plot with Colorscaling","d4676ba1":"<a id=\"6\"><\/a> \n# Sunburst Charts","d4b7ac6a":"<a id=\"4\"><\/a> \n# Map Plots","0c234102":"Bar Chart Visualization of year2016 dataset.","b08b012d":"* DATA\n  * type --> type of the map\n  * colorscale --> palette\n  * marker_line_width --> width of border line of countries\n  * locations --> locations from dataset\n  * locationmode --> locations created via country names\n  * z --> graph will show this. density.\n  * text --> hovertext\n  * colorbar --> determining colorbar.\n* layout --> layout of the graphic.\n* choromap --> combines data and layout\n* iplot() --> shows the figure","66b09725":"**We changed the some column name beacuse datasets not have same columns.**","f453a0b4":"Sunburst plots visualize hierarchical data spanning outwards radially from root to leaves. The sunburst sector hierarchy is determined by the entries in labels (names in px.sunburst) and in parents. The root starts from the center and children are added to the outer rings.\n\nMain arguments:\n\n* labels (names in px.sunburst since labels is reserved for overriding columns names): sets the labels of sunburst sectors.\n* parents: sets the parent sectors of sunburst sectors. An empty string '' is used for the root node in the hierarchy.\n* values: sets the values associated with sunburst sectors, determining their width.\n\nSource: https:\/\/plotly.com\/python\/sunburst-charts\/","6a1112ab":"Pie Charts help show proportions and percentages across categories by dividing a circle into proportional parts. Each arc length represents a proportion of each category, while the full circle represents the sum of all data equal to 100%. Pie charts are ideal for giving the reader a quick idea of the proportional distribution of the data.","fd0d8044":"Sunburst Chart Visualization of year2015 dataset.\n* df --> Dataset (year2015)\n* path --> Parent and Children Directory for dataset. (In this dataset, parent refers Region, children refers Country.)\n* color --> Density (Color changes according to Happiness Score)\n* hover_data --> Content of hover. (You will see the 'Happiness Rank' of a country when you came on it.)\n* color_continuous_scale --> Palette\n* color_continuous_midpoint --> Average values of parents. (EX: avg(North_America) = ('United States'.Happiness Score + 'Canada'.Happiness Score)\/2)","a6f3b95f":"In this notebook, you will learn how to use the Plotly library. With what you have learned in this notebook, you will be able to create your own interactive graphics using Plotly.\n\nPlotly is a library that contains various functions for data visualization and dashboards that are compatible with R and Python languages. Using these functions, you can get interactive graphics instead of classical graphics. This library is adapted for working in interactive web applications. It is a good solution for displaying your graphics, especially on a web-based page.","7c8fb297":"<a id=\"2\"><\/a> \n# Read Datas & Explanation of Features & Information About Datasets","ec64e7b6":"<a id=\"7\"><\/a>\n# Bar Charts","faa3e36d":"***What did we do?***\n\n* We created new column named 'world' and we made it all elements world. This is the parent.\n* Second parents are Regions. Countries are childrens. We setted path.\n* We setted color scale. Colors will change according to 'Happiness Score'. \n* We added 'Happiness Rank' to hover.\n\n","68227679":"***How can we make sense of data using Word Cloud?***\n\nThe following three Word Clouds are representations of 3 pieces of data.\n1. 0 to 50\n2. 50 to 100\n3. 100 to 153\n\n**In the first 50 data, the dominance of America and Europe is observed, while Asia and the Middle East are dominant between 50-100, and Africa is dominant in the last 50 data.**","883e183c":"Graphs obtained by marking the values on the horizontal and vertical axes of the data and combining the points with lines are line graphs. In particular, it is the most appropriate graph used to examine the change (increase, decrease) of a variable over time.","6d7292b5":"The World Happiness Report is a landmark survey of the state of global happiness. The first report was published in 2012, the second in 2013, the third in 2015, and the fourth in the 2016 Update. The World Happiness 2017, which ranks 155 countries by their happiness levels, was released at the United Nations at an event celebrating International Day of Happiness on March 20th. The report continues to gain global recognition as governments, organizations and civil society increasingly use happiness indicators to inform their policy-making decisions. Leading experts across fields \u2013 economics, psychology, survey analysis, national statistics, health, public policy and more \u2013 describe how measurements of well-being can be used effectively to assess the progress of nations. The reports review the state of happiness in the world today and show how the new science of happiness explains personal and national variations in happiness.\n\nFrom: https:\/\/www.kaggle.com\/unsdsn\/world-happiness","d379dbb0":"![Ekran%20G%C3%B6r%C3%BCnt%C3%BCs%C3%BC%20%28381%29.png](attachment:Ekran%20G%C3%B6r%C3%BCnt%C3%BCs%C3%BC%20%28381%29.png)","cd1f07f8":"***What did we do?***\n\n* We have placed each year's 'Economy', 'Freedom', 'Social support', 'Perceptions of corruption' values on the y-axis. (for dataset: 2018)\n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","4af69c9c":"* TRACE\n  * x --> x axis\n  * y --> y axis\n  * mode --> how points are displayed\n  * name --> name of the color (i.e.: red for 2015, green for 2016..)\n  * marker --> color\n  * text --> Text that show when yo came on to a dot. (In this ex: Country name)\n* data --> sum of traces\n* layout --> layout of the graphic.\n* fig --> combines data and layout\n* iplot() --> shows the figure","aafd77c0":"<a id=\"5\"><\/a> \n# Line Plots","59c7f5cc":"* DATA\n  * x --> x axis\n  * y --> y axis\n  * mode --> how points are displayed\n  * name --> name of the color (i.e.: red for 2015, green for 2016..)\n  * marker --> color, size represents 3. and 4. dimension of graph\n  * showscale --> colorbar\n  * text --> Text that show when yo came on to a dot. (In this ex: Country name)\n* layout --> layout of the graphic.\n* fig --> combines data and layout\n* iplot() --> shows the figure","b5e7ed6f":"***What did we do?***\n\n* We have placed each year's 'Happiness Score' on the y-axis.\n* We setted a color for each year.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","8b47d0bf":"***What did we do??***\n\n* We have placed each year's 'Happiness Score' on the y-axis.\n* We setted a color for each year.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.\n\n**HOVER:** The text box that appears when you hover over the dots.","bc25b6fd":"<a id=\"10\"><\/a> \n# Word Clouds","8e2939ed":"***What did we do?***\n\n* We have placed each year's 'Economy', 'Freedom', 'Trust', 'Dystopia Residual' values on the y-axis. (for dataset: 2017)\n* We setted a color for each value.\n* We combined the traces in data.\n* We specified the title, x-axis title, y-axis title, and hover.\n* We combined the data and layout in fig and extracted the graph.","60befff6":"**Same things for 2016 dataset.**","62d0d186":"Bar Chart Visualization of year2015 dataset.","18afe9d6":"### I will be glad if you can give feedback.","6a4cccbe":"* fig\n  * DATA    \n      * values --> counts\n      * labels --> labels\n      * domain --> \n      * name --> \n      * hoverinfo --> hover attributes\n      * hole --> the width of the hole\n      * type --> Type of graph\n  * LABEL\n      * title --> Title of graph.\n      * annotations -->\n           * font --> Font\n           * showarrow --> Arrow (on the right, below REGIONS)\n           * text --> text for legend\n           * x -->\n           * y -->\n","9dd7dfd1":"## I have been denied access to my account. That's why I'm sharing it again.","a98c5ebc":"In its simplest definition, we can say that the words come together in mixed forms and have an aesthetic appearance. It helps to visualize the words you add into the shapes you want, with the colors and features you specify.","5515538e":"Explanation of Features for year2017:\n* **Country -->** Name of the country.\n* **Happiness Rank -->** Rank of the country based on the Happiness Score.\n* **Happiness Score -->** A metric measured in 2017 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **Whisker.high -->** \n* **Whisker.low -->** \n* **Economy..GDP.per.Capita. -->** The extent to which GDP contributes to the calculation of the Happiness Score.\n* **Family -->** The extent to which Family contributes to the calculation of the Happiness Score\n* **Health.Life.Expectancy. -->** The extent to which Life expectancy contributed to the calculation of the Happiness Score\n* **Freedom -->** The extent to which Freedom contributed to the calculation of the Happiness Score.\n* **Generosity -->** The extent to which Generosity contributed to the calculation of the Happiness Score.\n* **Trust (Government Corruption) -->**\tThe extent to which Perception of Corruption contributes to Happiness Score.\n* **Dystopia Residual -->** The extent to which Dystopia Residual contributed to the calculation of the Happiness Score."}}