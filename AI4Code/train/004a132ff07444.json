{"cell_type":{"9e825a46":"code","be026c41":"code","cca641df":"code","8c56c9f8":"code","e182c7ac":"code","ab9e8a31":"code","c14dacb5":"code","0f4cec2a":"code","0b23de20":"code","3889197b":"code","b127799b":"code","f29352c3":"code","a5310a49":"code","478fb2b2":"code","e479f57d":"code","f274abb8":"code","2525aa44":"code","23114f5e":"code","d84081e3":"code","9b8b32f9":"code","1da5deb6":"code","04a51dc0":"code","5e514241":"code","cee17832":"code","c73e8616":"code","2954a0d9":"code","878e3ef7":"markdown"},"source":{"9e825a46":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","be026c41":"from fastai.vision import *","cca641df":"path = '\/kaggle\/input\/intel-image-classification'","8c56c9f8":"import os\nprint(os.listdir(path))","e182c7ac":"# Data augmentation\ntfms = get_transforms(flip_vert=False, max_lighting=0.1, max_zoom=1.05, max_warp=0.)","ab9e8a31":"src = (ImageList.from_folder(path)\n                .split_by_folder(train='seg_train', valid='seg_test')\n                .label_from_folder()\n                .add_test_folder(test_folder = 'seg_pred'))","c14dacb5":"# Can achieve better result by first training with smaller size like 75x75 first before training on full size\ndata = src.transform(tfms, size=150).databunch().normalize()","0f4cec2a":"data.show_batch(rows=3, figsize=(12,9))","0b23de20":"arch = models.resnet50\nmetrics = [error_rate, accuracy]","3889197b":"learn = cnn_learner(data, arch, metrics=metrics)","b127799b":"learn.model_dir = '\/kaggle\/working\/'","f29352c3":"learn.lr_find()\nlearn.recorder.plot()","a5310a49":"lr = 1e-2","478fb2b2":"learn.fit_one_cycle(5, slice(lr))","e479f57d":"learn.save('stage-1-rn50')","f274abb8":"learn.unfreeze()","2525aa44":"learn.lr_find()\nlearn.recorder.plot()","23114f5e":"# Can train a little bit more for better result\nlearn.fit_one_cycle(5, slice(5e-5, 5e-4))","d84081e3":"learn.save('stage-2-rn50')","9b8b32f9":"learn.recorder.plot_losses()","1da5deb6":"# Interpret the result\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_top_losses(9, figsize=(12,9))","04a51dc0":"interp.most_confused(min_val=2)","5e514241":"# Plot the confusion matrix\ninterp.plot_confusion_matrix()","cee17832":"# Make predictions of the test folder \npredictions, targets = learn.get_preds(ds_type=DatasetType.Test)","c73e8616":"# Make predictions on the first 9 images\nclasses = predictions.argmax(1)\nclass_dict = dict(enumerate(learn.data.classes))\nlabels = [class_dict[i] for i in list(classes[:9].tolist())]\ntest_images = [i.name for i in learn.data.test_ds.items][:9]","2954a0d9":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,8))\n\nfor i, fn in enumerate(test_images):\n    img = plt.imread(path + '\/seg_pred\/seg_pred\/' + fn, 0)\n    plt.subplot(3, 3, i+1)\n    plt.imshow(img)\n    plt.title(labels[i])\n    plt.axis(\"off\")","878e3ef7":"**As we can see, the predictions made were pretty good!!! :))**"}}