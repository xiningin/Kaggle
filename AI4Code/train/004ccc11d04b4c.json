{"cell_type":{"7d008fa1":"code","c6eb67b4":"code","80cd9971":"code","7b557b2b":"code","d9568ca5":"code","78200a69":"code","ac596a1a":"code","bdd62bbc":"code","1cda65db":"code","eef7aa05":"code","f7fde2ca":"markdown","0402cd21":"markdown","c2d80667":"markdown","443c4216":"markdown","9fa54233":"markdown","20b02b3b":"markdown","f79b5778":"markdown","60c4c990":"markdown","7f83818a":"markdown","d1f7bb43":"markdown","e763f8cd":"markdown","62929fb4":"markdown","3fc7e915":"markdown","5fe4935c":"markdown"},"source":{"7d008fa1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved \n# as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of \n# the current session","c6eb67b4":"import matplotlib.pyplot as plt\n\n%matplotlib inline\nplt.style.use('ggplot')\n\nverbose = False # Switch to True to get a more verbose output when running the Notebook","80cd9971":"# Read-in the raw survey data (.csv file)\ncwd = os.getcwd()\nprint(cwd)\n# First two rows of the dataset are:\n#   1st row: time_to_complete_survey followed by question number\n#   2nd row: the question asked\nsurvey = pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\", low_memory=False)\n# Create a series where the index are the question labels, the values are the questions\n# (Note: ignore the first column which is the duration to complete the survey)\nquestions = survey.iloc[0,1:]\nif verbose:\n    print(\"survey_questions:\\n{}\".format(questions))\n# Remove the row corresponding to \"questions asked\" from the DataFrame and keep\n# only the question labels as columns and the answers as values\nsurvey.drop([0], inplace=True)\nn_survey_resp = survey.shape[0] # number of Kaggle2020 survey respondents\nprint(\"# survey responses: {}\".format(n_survey_resp))\nif verbose >= 2:\n    print(survey.drop([\"Time from Start to Finish (seconds)\"], axis=1).head())\nif verbose:\n    print(survey.shape)","7b557b2b":"def test_diff_two_proportions(p1, p2, N1, N2, alpha=0.05, test_type='two_tailed', verbose=False):\n    \"\"\" Function which computes the p-value associated with the hypothesis test of difference \n    between two proportions p1 and p2 derived from two independent samples of sizes N1, N2 respectively.\n    Significance level (alpha) is 0.05 by default. Specify if the test should be: \"one_tailed\" or \"two_tailed\" \n    source: https:\/\/stattrek.com\/hypothesis-test\/difference-in-proportions.aspx\n    \"\"\"\n    from scipy.stats import norm\n    \n    # First compute the pooled sample proportion p\n    p = (p1 * N1 + p2 * N2)\/(N1 + N2)\n    if verbose:\n        print(\"p: {}\".format(round(p,3)))\n    # Compute the standard error (SE) of the sampling distribution difference between two proportions\n    SE = np.sqrt(p * (1 - p) * (1.0\/N1 + 1.0\/N2))\n    if verbose:\n        print(\"SE: {}\".format(round(SE,3)))\n    # Compute the test statistic (z-score)\n    z_val = (p1 - p2)\/SE\n    if verbose:\n        print(\"z: {}\".format(round(z_val,3)))\n    # If z < 0, find proba = Prob(z < z_val) from the Normal distribution, else find proba = Prob(z > z_val)\n    # The probability that z < z_val is the area under the pdf to the left of z_val\n    # This area is the integration of the pdf from -inf to z_val, i.e. the value of the CDF \n    # (Cumulative Density Function) at z_val\n    if (z_val < 0.0):\n        proba = norm(loc = 0.0, scale = 1).cdf(z_val)\n    else:\n        proba = 1.0 - norm(loc = 0.0, scale = 1).cdf(z_val)\n    if test_type == 'two_tailed':\n        # Compute the p-value as p_val = 2 * proba (for a 2-tailed test)\n        p_val = 2 * proba\n    else:\n        p_val = proba\n    if verbose:\n        print(\"p_value: {}\".format(round(p_val,3))) \n        if (p_val < alpha):\n            print(\"We can reject the null hypothesis that the two sample proportions are equal\")\n        else:\n            print(\"We cannot reject the null hypothesis that the two sample proportions are equal\")\n    return p_val","d9568ca5":"if verbose:\n    print(survey[\"Q5\"].unique())\n    print(survey[\"Q5\"].nunique())\n    print(survey[\"Q5\"].count())\nis_unemployed = survey[\"Q5\"] == \"Currently not employed\"\nis_data_scientist = survey[\"Q5\"] == \"Data Scientist\"\nis_ML_engineer = survey[\"Q5\"] == \"Machine Learning Engineer\"\nis_US_based = survey[\"Q3\"] == \"United States of America\"\nif verbose:\n    print(\"US respondents: {}\".format(is_US_based.sum()))\nis_DS_MLEng = is_data_scientist | is_ML_engineer\nis_unemployed_USA = is_unemployed & is_US_based\nis_DS_MLEng_USA = is_DS_MLEng & is_US_based\n# number of subjects in the 3 subgroups: \"Data Scientist\", \"Machine Learning Engineer\", Unemployed\"\nn_subjects_in_group = {\"Data_Scientist\":is_data_scientist.sum(), \"ML_Eng\":is_ML_engineer.sum(), \\\n                       \"Unemployed\":is_unemployed.sum(), \"DS_MLEng\":is_DS_MLEng.sum()}\nN1, N2 = n_subjects_in_group[\"Unemployed\"], n_subjects_in_group[\"DS_MLEng\"]\npercent_unemployed = round(100 * N1 \/ n_survey_resp,1)\npercent_employed = round(100 * N2 \/ n_survey_resp,1)\nprint(\"percent unemployed: {}%\".format(percent_unemployed))\nprint(\"percent employed: {}%\".format(percent_employed))\nif verbose:\n    print(n_subjects_in_group)","78200a69":"# Gender identity question is Q2: What is your gender?\nsurvey_unemployed = survey[is_unemployed]\nsurvey_employed = survey[is_DS_MLEng]\nif verbose:\n    print(survey_unemployed[[\"Q2\"]].head())\n# counts of unemployed and employed women\ncount_unemployed = survey_unemployed.groupby(\"Q2\")[\"Q2\"].count()\ncount_employed = survey_employed.groupby(\"Q2\")[\"Q2\"].count()\nif verbose:\n    print(\"women unemployed: {}\".format(count_unemployed[\"Woman\"]))\n    print(\"women employed: {}\".format(count_employed[\"Woman\"]))\np1 = round(count_unemployed[\"Woman\"]\/N1, 3)\np2 = round(count_employed[\"Woman\"]\/N2, 3)\np_val = test_diff_two_proportions(p1, p2, N1, N2, alpha=0.05, test_type='two_tailed', verbose=False)\nprint(\"Test statistical significance of difference in fractions of women in unemployed vs employed groups\")\nprint(\"  p1: {}, p2: {}, N1: {}, N2: {}; p_val: {}\".format(p1, p2, N1, N2, p_val))\ngender_demog_unemployed = 100 * count_unemployed \/ n_subjects_in_group[\"Unemployed\"]\ngender_demog_unemployed = gender_demog_unemployed.round(1)\ngender_demog_employed = 100 * count_employed \/ n_subjects_in_group[\"DS_MLEng\"]\ngender_demog_employed = gender_demog_employed.round(1)\n# Sort the series by descending values\ngender_demog_unemployed.sort_values(axis=0, ascending=True, inplace=True)\nif verbose:\n    print(gender_demog_unemployed)\n    print(gender_demog_employed)\n\n# Plot the horizontal bar graph\nbar_width = 0.5\nidx_percent = np.linspace(0, 100, 11)\npercent_labels = [str(int(idx)) + \"%\" for idx in idx_percent]\nfig, axs = plt.subplots(figsize=(12, 4))\nrects = axs.barh(gender_demog_unemployed.index, gender_demog_unemployed.values, \\\n                 bar_width, color='b')\naxs.set_xlim(0, 100)\nif verbose >= 2:\n    print('Current xlim: ',plt.xlim())\naxs.set_xticks(idx_percent)\naxs.set_xticklabels(percent_labels, rotation=0)\naxs.set_ylabel(\"Gender identity\")\naxs.set_title(\"Gender identity of $\\it{Currently\\ not\\ employed}$ Kaggle survey respondents\")\n# if verbose:\n#     for rect in rects:\n#         height = rect.get_height()\n#         width = rect.get_width()\n#         x = rect.get_x()\n#         y = rect.get_y()\n#         print(x, y, width, height)\n        \ndef autolabel_barh(rects):\n    \"\"\" Attach a text label to the right of each horizontal bar displaying its width \"\"\"\n    for rect in rects:\n        width = rect.get_width()\n        axs.text(width + (2 * plt.xlim()[1])\/100., rect.get_y() + rect.get_height()\/2., \n                '{}%'.format(width), ha='left', va='center')\n        \nautolabel_barh(rects)\n","ac596a1a":"# Age range question is Q1: What is your age (# years)?\nif verbose >= 2:\n    print(survey_unemployed[[\"Q1\"]].head())\nage_demog_unemployed = 100 * survey_unemployed.groupby(\"Q1\")[\"Q1\"].count() \/ n_subjects_in_group[\"Unemployed\"]\nage_demog_unemployed = age_demog_unemployed.round(1)\nage_demog_employed = 100 * survey_employed.groupby(\"Q1\")[\"Q1\"].count() \/ n_subjects_in_group[\"DS_MLEng\"]\nage_demog_employed = age_demog_employed.round(1)\n# Reverse the index of series so that bars are plotted from oldest (bottom) to youngest (top)\nage_demog_unemployed.sort_index(ascending=False, inplace=True)\nage_demog_employed.sort_index(ascending=False, inplace=True)\nn_groups = len(age_demog_unemployed)\nif verbose:\n    print(\"num. age bins: {}\".format(n_groups))\n    print(age_demog_unemployed)\n    print(age_demog_employed)\n# Determine the age ranges for which the difference in the proportions for employed and unemployed \n# are statistically significant\nfor age_range in list(age_demog_unemployed.index):\n    p1 = age_demog_unemployed[age_range]\/100\n    p2 = age_demog_employed[age_range]\/100\n    p_val = test_diff_two_proportions(p1, p2, N1, N2, alpha=0.05, test_type='two_tailed', verbose=False)\n    print(\"age_range: {}; p_val: {}\".format(age_range, p_val))\n\n# Plot horizontal bar graph showing distribution of age ranges for Unemployed\n# and Employed survey respondents\nbar_width = 0.40 # the width of the bars\nidx_percent = np.linspace(0, 35, 8)\npercent_labels = [str(int(idx)) + \"%\" for idx in idx_percent]\nind = np.arange(n_groups)  # the y locations for the groups\nfig, axs = plt.subplots(figsize=(12, 8))\nrects1 = axs.barh(ind, age_demog_unemployed.values, bar_width, color='b')\nrects2 = axs.barh(ind - bar_width, age_demog_employed.values, bar_width, color='orange')\naxs.set_xlim(0, 35)\nautolabel_barh(rects1)\nautolabel_barh(rects2)\naxs.set_xticks(idx_percent)\naxs.set_xticklabels(percent_labels, rotation=0)\naxs.set_yticks(ind - bar_width \/ 2)\naxs.set_yticklabels(list(age_demog_unemployed.index))\naxs.set_ylabel(\"Age range\")\nplt.legend(['Unemployed', 'Data Scientist\/ML Eng.'])\naxs.set_title(\"Age ranges of $\\it{Currently\\ not\\ employed}$ Kaggle survey respondents (worldwide)\")  \n","bdd62bbc":"# Age range question is Q1: What is your age (# years)?\nif verbose >= 2:\n    print(survey_unemployed[[\"Q1\"]].head())\ncount_unemployed = survey_unemployed.groupby(\"Q1\")[\"Q1\"].count()\ncount_employed = survey_employed.groupby(\"Q1\")[\"Q1\"].count()\ncount_all = count_unemployed + count_employed\npercent_unemployed = 100 * count_unemployed \/ count_all\npercent_unemployed = percent_unemployed.round(1)\nif verbose >= 2:\n    print(count_unemployed)\n    print(count_employed)\n    print(count_all)\n    print(percent_unemployed)\n\n# Plot horizontal bar graph showing percentages of unemployed survey respondents in the various age bins\nbar_width = 0.5\nidx_percent = np.linspace(0, 70, 8)\npercent_labels = [str(int(idx)) + \"%\" for idx in idx_percent]\nfig, axs = plt.subplots(figsize=(12, 8))\nrects = axs.barh(percent_unemployed.index, percent_unemployed.values, bar_width, color='b')\naxs.set_xlim(0, 70)\n# if verbose:\n#     print('Current xlim: ',plt.xlim())\naxs.set_xticks(idx_percent)\naxs.set_xticklabels(percent_labels, rotation=0)\naxs.set_ylabel(\"Age range\")\n\naxs.set_title(\"Percentage of $\\it{Currently\\ not\\ employed}$ Kaggle survey respondents (worldwide) by age range\")\nautolabel_barh(rects)\n","1cda65db":"# Age range question is Q1: What is your age (# years)?\nsurvey_unemployed_USA = survey[is_unemployed_USA]\nsurvey_employed_USA = survey[is_DS_MLEng_USA]\ncount_unemployed = survey_unemployed_USA.groupby(\"Q1\")[\"Q1\"].count()\ncount_employed = survey_employed_USA.groupby(\"Q1\")[\"Q1\"].count()\ncount_all = count_unemployed + count_employed\npercent_unemployed = 100 * count_unemployed \/ count_all\npercent_unemployed = percent_unemployed.round(1)\nif verbose >= 2:\n    print(count_unemployed)\n    print(count_employed)\n    print(count_all)\n    print(percent_unemployed)\n\n# Plot horizontal bar graph showing percentages of unemployed US-based survey respondents in the various age bins\nbar_width = 0.5\nidx_percent = np.linspace(0, 70, 8)\npercent_labels = [str(int(idx)) + \"%\" for idx in idx_percent]\nfig, axs = plt.subplots(figsize=(12, 8))\nrects = axs.barh(percent_unemployed.index, percent_unemployed.values, bar_width, color='b')\naxs.set_xlim(0, 70)\n# if verbose:\n#     print('Current xlim: ',plt.xlim())\naxs.set_xticks(idx_percent)\naxs.set_xticklabels(percent_labels, rotation=0)\naxs.set_ylabel(\"Age range\")\n\naxs.set_title(\"Percentage of $\\it{Currently\\ not\\ employed}$ US-based Kaggle survey respondents by age range\")\nautolabel_barh(rects)","eef7aa05":"# Highest level of formal education question is Q4: What is the highest level of formal \n# education that you have attained or plan to attain within the next 2 years?\nif verbose >= 2:\n    print(survey_unemployed[[\"Q4\"]].head())\ncount_unemployed = survey_unemployed.groupby(\"Q4\")[\"Q4\"].count()\ncount_employed = survey_employed.groupby(\"Q4\")[\"Q4\"].count()\ncount_all = count_unemployed + count_employed\npercent_unemployed = 100 * count_unemployed \/ count_all\npercent_unemployed = percent_unemployed.round(1)\nif verbose >= 2:\n    print(count_unemployed)\n    print(count_employed)\n    print(count_all)\n    print(percent_unemployed)\nedu_demog_unemployed = 100 * count_unemployed \/ n_subjects_in_group[\"Unemployed\"]\nedu_demog_unemployed = edu_demog_unemployed.round(1)\nedu_demog_employed = 100 * count_employed \/ n_subjects_in_group[\"DS_MLEng\"]\nedu_demog_employed = edu_demog_employed.round(1)\n# Reindex the two series according to a specific ordering\nindex_list = [\"No formal education past high school\", \\\n              \"Some college\/university study without earning a bachelor\u2019s degree\", \\\n              \"Bachelor\u2019s degree\", \"Master\u2019s degree\", \"Doctoral degree\", \\\n              \"Professional degree\", \\\n              ]\nedu_demog_unemployed = edu_demog_unemployed.reindex(index = index_list)\nedu_demog_employed = edu_demog_employed.reindex(index = index_list)\nn_groups = len(edu_demog_unemployed)\nif verbose:\n    print(\"num. edu level bins: {}\".format(n_groups))\n    print(list(edu_demog_unemployed.index))\n    print(type(edu_demog_unemployed))\n    print(edu_demog_unemployed)\n    print(edu_demog_employed)\n# Determine the age ranges for which the difference in the proportions for employed and unemployed \n# are statistically significant\nfor edu_level in list(edu_demog_unemployed.index):\n    p1 = edu_demog_unemployed[edu_level]\/100\n    p2 = edu_demog_employed[edu_level]\/100\n    p_val = test_diff_two_proportions(p1, p2, N1, N2, alpha=0.05, test_type='two_tailed', verbose=False)\n    print(\"edu_level: {}; p_val: {}\".format(edu_level, p_val))\n\n# Plot horizontal bar graph showing distribution of education levels for Unemployed\n# and Employed survey respondents\nbar_width = 0.40 # the width of the bars\nidx_percent = np.linspace(0, 60, 7)\npercent_labels = [str(int(idx)) + \"%\" for idx in idx_percent]\nind = np.arange(n_groups)  # the y locations for the groups\nfig, axs = plt.subplots(figsize=(12, 8))\nrects1 = axs.barh(ind, edu_demog_unemployed.values, bar_width, color='b')\nrects2 = axs.barh(ind - bar_width, edu_demog_employed.values, bar_width, color='orange')\naxs.set_xlim(0, 60)\nautolabel_barh(rects1)\nautolabel_barh(rects2)\naxs.set_xticks(idx_percent)\naxs.set_xticklabels(percent_labels, rotation=0)\naxs.set_yticks(ind - bar_width \/ 2)\naxs.set_yticklabels(list(edu_demog_unemployed.index))\naxs.set_ylabel(\"Highest Education level\")\nplt.legend(['Unemployed', 'Data Scientist\/ML Eng.'])\naxs.set_title(\"Education levels of $\\it{Currently\\ not\\ employed}$ Kaggle survey respondents (worldwide)\")  \n","f7fde2ca":"# Characterization of Unemployed Data Scientists\/Machine Leaning Engineers in 2020\n\n## Data used in this notebook: Kaggle State of Machine Learning and Data Science 2020\n\nThe raw data for the survey results can be found at:\n\nhttps:\/\/www.kaggle.com\/c\/kaggle-survey-2020\/data\n\n__Overview:__ To find out in what respects the Kaggle users who self-identified as _Currently not employed_ on the survey, which we can assume to be _data scientists_ since they use Kaggle, differ from the population of data scientists who are currently employed. \n\nBased on the raw data set of 20,036 Kaggle survey respondents, this report focuses on the 1,652 (\\~8%) that are unemployed and compares them to the 3,758 (\\~19%) (employed) data scientists\/ML engineers.\n\n__Methodology:__ Since the job function of data scientists and Machine Learning engineers are ususally highly overlapping, we decided to merge these two categories into a larger, more generic \"data science\/ML engineer\" category. We sometimes refer to this category simply as _employed_ in this report.","0402cd21":"The percentage of Kaggle survey respondents that identified themselves as _Currently not employed_ was over 20% in all age ranges. It was highest in the 55-59 age range (49%). The next highest percentages (\\~40%) were in the 22-24 and 60-69 age ranges. The lowest percentages of unemployed respondents were in age ranges 18-21 (\\~22%) and 30-39 (\\~24%).","c2d80667":"### References\n[1] kaggle, State of Machine Learning and Data Science 2020, available at: https:\/\/www.kaggle.com\/c\/kaggle-survey-2020\/data\n\n[2] Ramsey L. Alwin and Jen Schramm, Coronavirus' Devastating Economic Impact on Workers Age 50-Plus, AARP, April 3, 2020 https:\/\/www.aarp.org\/politics-society\/advocacy\/info-2020\/coronavirus-economic-impact-older-workers.html","443c4216":"We see that even though women represent only 16.4% of the survey respondents who identified themselves as Data Scientists [1], and 15.3% of those who identified themselves either as Data Scientist or Machine Learning Engineer, a statistically significantly larger percentage (22.8%) of women can be found in the unemployed subset (p-value = 2.5e-11).","9fa54233":"We see from the above bar plot that the fractions of respondents with Master's or Doctoral degree are significantly lower in the unemployed sample (35.5%, 7.2%) than their peers in the employed group (49%, 16.1%). These differences are statistically significant at the 0.05 level with p-values of 3.8e-20 and 8.3e-19 respectively. \n\nOn the other hand, we can also see that the fraction of respondents with only a Bachelor's degree is significantly higher in the unemployed sample (42.7% vs. 26.6%). This difference is also statistically significant at the 0.05 level (p-value of 0).","20b02b3b":"### Identify the unemployed survey respondents\n\nCompute the fraction of survey respondents which identified themselves as _Currently not employed_ in Q5","f79b5778":"### Global (worlwide) age distribution of unemployed survey respondents","60c4c990":"### Read-in the data file\n\nIdentify and save the questions in a series where the index is the question labels (Q1, Q2, etc.) and the values are the questions themselves. Create a DataFrame where the columns are the question labels and the values are the answers.","7f83818a":"### Gender identity of unemployed survey respondents","d1f7bb43":"When we restrict the survey respondents to those that are US-based, we still see percentages of respondents that identified themselves as Currently not employed at rates of 20% or more, almost in all age ranges (except 70+). The percentage of unemployed respondents was highest in the 60-69 age range (\\~47%). The next highest percentages (\\~40%) were for young adults (in the 22-24 and 18-21 age ranges). The lowest percentages of unemployed respondents were in age ranges 30-44 (\\~20%). The unemployment rate for the US-based 55-59 year olds in the US is a little bit less dire than globally (33.3%).","e763f8cd":"We see from the above bar plot that the fractions of respondents in the two age groups: 22-24, and 55-59 are higher in the unemployed sample. These differences are statistically significant at the 0.05 level with p-values of 1e-13 and 6.8e-05 respectively. On the other hand, we can also see that the fractions of respondents in the age groups: 18-21, 30-34, 35-39 are lower in the unemployed sample. These differences are also statistically significant at the 0.05 level (p-values of 3.4e-05, 5.3e-06 and 6e-04 respectively).\n\nThe above bar plots and results shows two things very starkly: \n - Workers age 50-plus are highly under-represented in the Data Science\/Machine Learning space (at least when looking at kaggle users)\n - Covid-19 has significantly impacted the employment of workers age 50-plus, possibly a reflection of ageism in the tech workplace [2]","62929fb4":"## Demographics of unemployed survey respondents\n\nCreate horizontal bar plot showing the gender identity, age demographics, of the _Currently not employed_ Kaggle survey respondents.\n","3fc7e915":"#### Key Results\n - The heavy gender imbalance which characterizes data science is similarly reflected in the unemployed dataset but with a statistically significantly higher fraction of women in the unemployed group then in the employed. <br \/>\n<br \/>\n -  The fractions of respondents in the age groups: 22-24, and 55-59 are statistically significantly higher in the unemployed sample than in the employed. Close to 50% of survey respondents worldwide age 55-59 are currently unemployed. This should be contrasted with an unemployment percentage of \\~24% in the 30-39 age range. <br \/>\n<br \/> \n - For the US, the highest unemployment rate (47%) is for respondents age 60-69, while the lowest (~20%) is for respondents in the 30-44 age range. <br \/>\n<br \/>\n - Having a Doctoral or Master's degree seems to provide an edge to data scientists with respect to employment. The fraction of unemployed data scientists with a Master's was \\~36% in the unemployed group vs. \\~49% in the employed. The fraction of unemployed data scientists with a PhD (7.2%) was about half of that of the employed with PhD (16.1%). However, having only a Bachelor's degree does not guarantee employment as a data scientist by far: in the unemployed group, about \\~43% of survey respondents had a Bachelor's degree. <br \/>","5fe4935c":"### Education level (worlwide) distribution of unemployed survey respondents"}}