{"cell_type":{"3c9d50de":"code","8a48b85b":"code","0adc9518":"code","10de9bf7":"code","940f99ee":"code","ff6affb7":"code","27fdb8bd":"code","603f43db":"code","2be92532":"code","8163c78d":"code","729cd7f7":"code","b79c37ef":"markdown","3619e413":"markdown","04b2e812":"markdown"},"source":{"3c9d50de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a48b85b":"url = 'https:\/\/www.kaggleusercontent.com\/episodes\/4231325.json'","0adc9518":"import urllib, json\n\nresponse = urllib.request.urlopen(url)\ndata = json.loads(response.read())\n","10de9bf7":"data.keys()","940f99ee":"data","ff6affb7":"dict_obs = {}\nfor i in range(1000):\n    player1 = data['steps'][i][0]\n    player2 = data['steps'][i][1]\n    dict_obs[i] = {'step':player1['observation']['step'],\n                   'player1_action':player1['action'],'player1_reward':player1['reward'], 'player1_status':player1['status'],\n                   'player2_action':player2['action'],'player2_reward':player2['reward'], 'player2_status':player2['status']\n                  }\n    if i != 0:\n        dict_obs[i]['player1_lastOpponentAction'] = player1['observation']['lastOpponentAction']\n        dict_obs[i]['player2_lastOpponentAction'] = player2['observation']['lastOpponentAction']\n    else:\n        dict_obs[i]['player1_lastOpponentAction'] = -1\n        dict_obs[i]['player2_lastOpponentAction'] = -1\n    ","27fdb8bd":"df = pd.DataFrame(dict_obs)\ndf = df.T\ndf","603f43db":"df.describe()","2be92532":"import matplotlib.pyplot as plt","8163c78d":"df['player1_action'].plot()","729cd7f7":"df['player2_action'].plot()","b79c37ef":"## Load Replay","3619e413":"Credits goes to https:\/\/www.kaggle.com\/arunprathap\/replay-json-eda-i for this notebook","04b2e812":"## Explore Replay"}}