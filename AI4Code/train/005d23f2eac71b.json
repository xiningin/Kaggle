{"cell_type":{"6f80687d":"code","5cddffda":"code","ffa614a1":"code","746dd17b":"code","18eb57d0":"code","42500e3c":"code","e25bda90":"code","416ca4bd":"code","3f081344":"code","cd2af7ba":"code","a0f62f9d":"code","980da689":"code","bf9a5e30":"code","7efd6a0d":"code","6970fd1b":"code","60f30d61":"code","5ecbfde9":"code","f3ef59ed":"markdown","0b43676f":"markdown","4052d55f":"markdown","08cbbbe5":"markdown","281ddf04":"markdown","9794412e":"markdown","49ceed6c":"markdown","121fcef4":"markdown","5e7e336f":"markdown","4e28640e":"markdown","50cec771":"markdown","1fc9e541":"markdown","79634b91":"markdown","d90cd015":"markdown","f1d05fb4":"markdown"},"source":{"6f80687d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5cddffda":"import matplotlib.pyplot as plt\nimport seaborn as sns","ffa614a1":"surveySchema = pd.read_csv(\"..\/input\/SurveySchema.csv\")\nfreeFormResponses = pd.read_csv(\"..\/input\/freeFormResponses.csv\", low_memory=False)\nmultipleChoiceResponses = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\", low_memory=False)","746dd17b":"toolDf = multipleChoiceResponses[[x for x in multipleChoiceResponses.columns if 'Q13' in x][:-1]]\ncols = {}\nfor column in toolDf.columns:\n    cols[column] = multipleChoiceResponses.at[0, column].split('-')[2]\ntoolDf = toolDf.rename(columns=cols).drop([0])\ntools = toolDf.count().sort_values(ascending=False)\nplt.figure(figsize=(18, 10))\nplt.title('Top 10 Frameworks used by Respondents', fontsize=17)\nplt.xticks(fontsize=12, rotation=45)\nplt.yticks(fontsize=12)\nplt.xlabel('', fontsize=15)\nplt.ylabel('', fontsize=15)\nsns.barplot(y=tools.index, x=tools.values, palette='GnBu_d', orient='h')","18eb57d0":"toolDf['Technologies'] = multipleChoiceResponses.drop([0])['Q12_MULTIPLE_CHOICE']\ntool = []\ntech = []\nfor index, row in toolDf.iterrows():\n    for col in toolDf.columns[:-1]:\n        if str(row[col]) != 'nan':\n            tool.append(col)\n            tech.append(row[toolDf.columns[-1]])\ntechDf = pd.DataFrame(np.column_stack([tool, tech]), columns=['Tool', 'Tech'])\ntechDf = techDf[techDf['Tool'] != ' None']\ndef getPerc(tech, tool):\n    return round(len(techDf[(techDf['Tool'] == tool) & (techDf['Tech'] == tech)])\/len(multipleChoiceResponses) - 1, 6)\ntechByTool = pd.DataFrame(columns=list(techDf['Tool'].unique()), index=list(techDf['Tech'].unique()))\nfor tech in techDf['Tech'].unique():\n    for tool in techDf['Tool'].unique():\n        techByTool.loc[tech, tool] = getPerc(tech, tool)\nplt.figure(figsize=(12, 10))\nsns.heatmap(techByTool.astype(float), cmap='Blues')\ntitle = plt.title('Famous IDE in different environments they are used', fontsize=15)","42500e3c":"toolDf['Experience'] = multipleChoiceResponses.drop([0])['Q8']\ntool = []\nexp = []\nfor index, row in toolDf.iterrows():\n    for col in toolDf.columns[:-1]:\n        if str(row[col]) != 'nan':\n            tool.append(col)\n            exp.append(row[toolDf.columns[-1]])\nexpDf = pd.DataFrame(np.column_stack([tool, exp]), columns=['Tool', 'Experience'])\nexpDf = expDf[expDf['Tool'] != ' None']\ndef getPerc(exp, tool):\n    return round(len(expDf[(expDf['Tool'] == tool) & (expDf['Experience'] == exp)])\/len(multipleChoiceResponses) - 1, 6)\nexpByTool = pd.DataFrame(columns=list(expDf['Tool'].unique()), index=list(expDf['Experience'].unique()))\nfor exp in expDf['Experience'].unique():\n    for tool in expDf['Tool'].unique():\n        expByTool.loc[exp, tool] = getPerc(exp, tool)\nplt.figure(figsize=(12, 10))\nsns.heatmap(expByTool.astype(float), cmap='Blues')\ntitle = plt.title('Famous IDE based on Experience', fontsize=15)","e25bda90":"from matplotlib.colors import ListedColormap\npie=multipleChoiceResponses['Q10'].drop([0]).value_counts().plot.pie(figsize=(20, 20), \n                                                                 colormap=ListedColormap(sns.color_palette(\"GnBu\", 100)), \n                                                                 fontsize=35, autopct='%1.1f%%')\nplt.axis('equal')\nplt.tight_layout()\np=plt.title('Exploring ML', fontsize=50)","416ca4bd":"stackDf=multipleChoiceResponses.drop([0]).groupby(['Q12_MULTIPLE_CHOICE', 'Q10']).size().unstack().fillna(0)\nstack=stackDf.plot.bar(stacked=True, figsize=(15, 12), colormap=ListedColormap(sns.color_palette(\"GnBu\", 100)))\nplt.xlabel('Environment')\nstack.get_legend().set_title('ML Adoption')","3f081344":"import warnings  \nwarnings.filterwarnings('ignore')\nplt.figure(figsize=(20, 10))\nmlFrame = multipleChoiceResponses.drop([0])[multipleChoiceResponses['Q10'].isin(['No (we do not use ML methods)', \n                                                                        'We have well established ML methods' \\\n                                                                        ' (i.e., models in production for more than 2 years)'])][['Q10', 'Q6']]\nprint(mlFrame['Q10'].value_counts())\nax = sns.countplot(x='Q6', hue='Q10', data=mlFrame, palette='GnBu_d', orient='h')\nax.set_title('People adopting ML by Occupation', fontsize=17)\nax.get_legend().set_title('ML Adoption')\nplt.setp(ax.get_legend().get_texts(), fontsize='12') # for legend text\nplt.setp(ax.get_legend().get_title(), fontsize='15') # for legend title\nplt.xticks(fontsize=12, rotation=90)\nplt.yticks(fontsize=12)\nplt.xlabel('Occupation', fontsize=15)\np=plt.ylabel('Count', fontsize=15)","cd2af7ba":"plt.figure(figsize=(20, 10))\nmlFrame = multipleChoiceResponses.drop([0])[multipleChoiceResponses['Q10'].isin(['No (we do not use ML methods)', \n                                                                        'We have well established ML methods' \\\n                                                                        ' (i.e., models in production for more than 2 years)'])][['Q10', 'Q7']]\nax = sns.countplot(x='Q7', hue='Q10', data=mlFrame, palette='GnBu_d', orient='h')\nax.set_title('People adopting ML by Industry', fontsize=17)\nax.get_legend().set_title('ML Adoption')\nplt.setp(ax.get_legend().get_texts(), fontsize='12') # for legend text\nplt.setp(ax.get_legend().get_title(), fontsize='15') # for legend title\nplt.xticks(fontsize=12, rotation=90)\nplt.yticks(fontsize=12)\nplt.xlabel('Industry', fontsize=15)\np=plt.ylabel('Count', fontsize=15)","a0f62f9d":"ocI = multipleChoiceResponses.drop([0])[(multipleChoiceResponses['Q10'] == 'No (we do not use ML methods)') & \n                                        ~(multipleChoiceResponses['Q10'] == 'I do not know') & \n                                        ~(multipleChoiceResponses['Q7'].isin(['Computers\/Technology', 'I am a student', 'Academics\/Education'])) & \n                                        ~(multipleChoiceResponses['Q6'].isin(['Data Scientist', 'Student', 'Software Engineer']))]\ndef getPerc(occ, ind):\n    return round(len(ocI[(ocI['Q6'] == occ) & (ocI['Q7'] == ind)])\/len(ocI), 10)\noccByInd = pd.DataFrame(columns=list(ocI['Q6'].unique()), index=list(ocI['Q7'].unique()))\nfor occ in ocI['Q6'].unique():\n    for ind in ocI['Q7'].unique():\n        occByInd.loc[ind, occ] = getPerc(occ, ind)\noccByInd.drop(occByInd.columns[0], axis=1, inplace=True)\noccByInd.drop(occByInd.index[-1], axis=0, inplace=True)\nplt.figure(figsize=(12, 10))\nsns.heatmap(occByInd.astype(float), cmap='GnBu_r')\ntitle = plt.title('Occupation of non ML Adopters by Industry they work in', fontsize=15)","980da689":"plt.figure(figsize=(15, 10))\ngenders = multipleChoiceResponses[(multipleChoiceResponses['Q1'].isin(['Male', 'Female'])) \n                                  & (~multipleChoiceResponses['Q2'].str.contains('What'))][['Q1', 'Q2']]\nprint(genders['Q1'].value_counts())\nax = sns.countplot(x='Q2', hue='Q1', data=genders, palette='BuGn_d', orient='h')\nax.set_title('Distribution of Respondents by Age Group and Gender', fontsize=17)\nax.get_legend().set_title('Gender')\nplt.setp(ax.get_legend().get_texts(), fontsize='12') # for legend text\nplt.setp(ax.get_legend().get_title(), fontsize='15') # for legend title\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.xlabel('Age Group', fontsize=15)\nplt.ylabel('Count', fontsize=15)","bf9a5e30":"df = multipleChoiceResponses.drop(multipleChoiceResponses.index[0])\ndf['Time from Start to Finish (seconds)'] = df['Time from Start to Finish (seconds)'].apply(lambda x : int(x))\nplt.figure(figsize=(12, 10))\nplt.title('Time taken for survey, by different age groups')\nsns.boxplot(x=\"Time from Start to Finish (seconds)\", y=\"Q2\", data=df, palette='rainbow')\nplt.ylabel('Age Group', fontsize=12)\nx= plt.xlabel('Time taken', fontsize=12)","7efd6a0d":"deC = multipleChoiceResponses.drop(multipleChoiceResponses.index[0])\n# nDeg = multipleChoiceResponses['Q2'].nunique()\n# nComp = multipleChoiceResponses['Q9'].nunique()\ndef getPerc(deg, comp):\n    return round(len(deC[(deC['Q4'] == deg) & (deC['Q9'] == comp)])\/len(deC), 6)\ndegByComp = pd.DataFrame(columns=list(deC['Q9'].unique()), index=list(deC['Q4'].unique()))\nfor deg in deC['Q4'].unique():\n    for comp in deC['Q9'].unique():\n        degByComp.loc[deg, comp] = getPerc(deg, comp)\ndegByComp.drop(degByComp.columns[0], axis=1, inplace=True)\ndegByComp.drop(degByComp.index[-1], axis=0, inplace=True)\nplt.figure(figsize=(12, 10))\nsns.heatmap(degByComp.astype(float), cmap='Reds')\ntitle = plt.title('Yearly compensation with highest level of education', fontsize=15)","6970fd1b":"msProf = multipleChoiceResponses[multipleChoiceResponses['Q4'] == 'Master\u2019s degree']\n# msProf = msProf.value_counts()\nplt.figure(figsize=(12, 10))\nsns.countplot(y='Q6', data=msProf, palette=sns.dark_palette('red'))\nplt.xticks(rotation=90)\nplt.title('Profession of kagglers with Masters degree', fontsize=15)\nyL=plt.ylabel('Profession')","60f30d61":"proCo = multipleChoiceResponses.drop(multipleChoiceResponses.index[0])\ndef getPerc(prof, comp):\n    return round(len(proCo[(proCo['Q6'] == prof) & (proCo['Q9'] == comp)])\/len(proCo), 6)\nprofByComp = pd.DataFrame(columns=list(proCo['Q9'].unique()), index=list(proCo['Q6'].unique()))\nfor prof in proCo['Q6'].unique():\n    for comp in proCo['Q9'].unique():\n        profByComp.loc[prof, comp] = getPerc(prof, comp)\nprofByComp.drop(profByComp.columns[0], axis=1, inplace=True)\nprofByComp.drop(profByComp.index[-1], axis=0, inplace=True)\nplt.figure(figsize=(14, 12))\nsns.heatmap(profByComp.astype(float), cmap='Reds')\ntitle = plt.title('Yearly compensation with profession', fontsize=15)","5ecbfde9":"import warnings  \nwarnings.filterwarnings('ignore')\ndef getDataScientistPerc(comp):\n    return round(len(deC[(deC['Q6'] == 'Data Scientist') & (deC['Q9'] == comp)])\/len(deC), 6)\nms = pd.DataFrame(index=list(degByComp.columns), columns=['% with MS'])\nms['% with MS'] = degByComp.loc['Master\u2019s degree', :]\nms['% who are Data Scientist'] = [getDataScientistPerc(x) for x in ms.index]\np=sns.jointplot(x='% with MS', y='% who are Data Scientist', data=ms, kind='kde', color='red')","f3ef59ed":"## The color of money\n\nPeople under different salary brackets may have different level of education. This section is an attempt to explore the relation in salary bracket and highest level of education.\n* People having Master's degree, have footprint in most of the salary brackets. \n* Only people holding Master's degree have high salary brackets.\n* Majority of the people have their salary in range 0-20000 or they do not wish to disclose. Does this mean most of respondents are students? We'll see.\n* Most people, who do not wish to disclose their salary, have a Master's or Bachelor's degree. ","0b43676f":"## Time and tide wait for none\n\nBelow graph shows the time taken by respondents in different age groups, to complete the survey. \n* As can be seen, the mean time taken by respondents in any age group , is close to 0 seconds. This explains, why most free form answers are null.\n* There are few outliers, which can be safely considered as people who diligently took the survey.","4052d55f":"**So what do master's graduates do?**\n\nLet's explore why people having a master's degree, are omnipresent in different salary brackets.\n* Most of the people with a Master's degree, are either a Data Scientist or a student.\n* Next on the list are professions, Software Engineer and Data Analyst.\n* A significant number of Master's degree holders, are in all the professions.","08cbbbe5":"## Prologue\n\nOnce upon a time, in the world of Machine Learning and Data Science, there existed an online community, known as Kaggle. \nThe people of this world found Kaggle to be a great place, to find and publish data sets, explore and build models in a \nweb-based data-science environment, work with other data scientists and machine learning engineers, and enter competitions \nto solve data science challenges.\n\nThe world of Machine Learning and Data Science was diverse, not only in people, but also in ways they used to work. \nThere were people from all walks of life and the world was rich in frameworks and languages. \n\nSince there was much to know about the world of Machine Learning and Data Science, Kaggle conducted a survey to gain some insights \nabout who is working with data, what\u2019s happening with machine learning in different industries, and the best ways for new data \nscientists to break into the field. Now, all that was left was exploring this world by means of data.\n\nThis kernel will take you to a journey, deep and wide into the world of Machine Learning and Data Science. Let's Begin!!","281ddf04":"**MS = Data Scientist**\n\nAnother interesting insight is evident from the figure below.  Given any compensation, number of data scientists is directly proportional to number of people with Master's.\nMore the Master;s graduates, more the data scientists, and vice versa","9794412e":"## Age\/gender is no bar\n\nThe field of Machine Learning and Data Science has people belonging to different age groups and genders. Let's take a look.\n* Most of the respondents belong to the 25-29 age group, with majority of them being males. \n* Its safe to say, this is an attactive field for the young generation(18-35) and is quickly gaining traction.\n* The number is lower in the older age groups. \n* A significant fraction of the respondents includes females.\n* Machine learning has caught the attention of a few people in the age group 70-80. Age no bar!","49ceed6c":"## The road less travelled\nWhy are the non ML Adopters more in number, in all the industries? This can be answered by analyzing the distribution of people who do not use ML, by occupation and industry. The analysis does not take into account the majority occupations and insutries, like Student, Data Scientist, etc, to avoid bias in the heatmap.\n* Most of these people are Data Analysts, Consultatns, Managers or Research Scientists.\n* But the industries they work in are mostly Government\/Public Affairs, Accounting and Finance, Medical and Manufacturing. \n* It implies that out of the people surveyed, those working in these industries and having these occupations, do not use ML. It might be safe to assume, that impact of ML in these combinations of occupation and industry, has not been much.\n* This data, still does not produce any justification of, why non ML users are  more as compared to ones who use ML, in Computers industry. It might just be because they don't have the need or the data to perform ML operations. But, this survey does not provide that data.","121fcef4":"## Practice makes a man perfect\nIs there any change in choice of IDE, with experience. Let's have a look at which IDE are preferred by people with different experience.\n* Most people are with experience in range of 0-3 years. With highgest preference for Jupyter\/Python, RStudio and Notepad++\n* There doesn't seem to be any anomaly in the data, since the poularity of an IDE doesn't seem to be affected by increase in experience. People with difference experience numbers have preferences in the same fashion.","5e7e336f":"**How are professions distributed in relation to compensation**\n\n* As we can see, Data Scientists, Students, Data Analysts and Software Engineers, have some proportion in most of the salary brackets. These also happen to be the top professions of people with Master's degree. This explains why those people fall under most of the salaary bracktes.\n* Also, the people who do wish to disclose their salary or have compensation in rainge 0-10000, are students. This also means that most people who took survey were students.","4e28640e":"## Ahead in the Game!\nLet's dig some insights on people who do not use ML and who have established models at work.\n* As expected, Data Scientists seem to have esablished models in ML, with a low number that do not use ML\n* The ratio of people not using ML to people having sophisticated models, seems to be large for, Software Engineers, Data Analysts and Students.","50cec771":"## The Sea of IDE\n\nThere is a wide range of tools\/frameworks used by the people. \n* Python seems to be the favorite language for many, since IPython and Pycharm take a major share in the market. \n* RStudio is the next contender in the race, which is most likely because of the favorism by people who code in R.\n* A fraction of the respondents might not be coders, since they marked none.","1fc9e541":"## The Environment\nPeople use IDE's in different environments at work, it may be Cloud based, local or BI.\n* It is clear that most of these people work on local or hosted environments.\n* Next majority of people use basic statistical software(google sheets, microsoft excel, etc.) at work. This seems pretty interesting to investigate further.\n* Next famous environment to work on is cloud based(AWS, Azure, GCP, etc.) . This is possible since cloud provides API's that make things easy.","79634b91":"## Jack of all trades\nWhat is the penetration factor of ML into different industeries? Seems interesting to explore!\n* Interestingly, ML has penetrated into many number of industries. This means, ML can be applied in amny different areas.\n* But suprisingly, in every field, except Computers, the number of people who do not use ML is either greater than or equal to the number of people who have much developed ML models. This poses a bigger question, what is the occupation of people who do not use ML in these industries?  ","d90cd015":"## Popularity Among Environments\nLet's explore the trend in underrtaking ML techniques, in relation to different environments people use at work.\n* Obviously, most people with well established or nascent ML models and  huge interest in ML, are the ones that use Local or hosted development environments. This, in turn, reveals that these people use Jupyter\/IPython or RStudio as a preferred language.\n* Another interesting insight is that, most people who do not use ML, work with basic statistical software. Also, there seems to be a spiking interest in ML among these people.\n* All other environments share same proportion of interest in ML.","f1d05fb4":"## Excuse Me! Do you use ML?\nWhat is the distribution of people that have adopted ML techniques in their daily work. \n* Clearly, most people are either exploring ML techniques or have recently started using ML models, which is a clear indication lof popularity of ML.\n* A vast majority can also be seen not using ML at all. \n* A relatively small number of people claim to have well established ML models. These might be companies who started early into the field and is definitely worth exporing further."}}