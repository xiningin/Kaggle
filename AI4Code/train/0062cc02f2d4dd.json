{"cell_type":{"9b7a3936":"code","21120cec":"code","1253e14f":"code","7a46e859":"code","785fcec4":"code","ebe3d082":"code","c77b8498":"code","efc3b047":"code","dd0b2eb5":"code","96fdf8d5":"code","a8bee61f":"code","7fb4e3f3":"code","24edd77b":"code","06281332":"code","932fcee1":"code","6e8af5ff":"code","4d758ad0":"code","a247312a":"code","e72e45d1":"code","9f5eae1d":"code","08100e70":"code","ab6606ff":"code","09eedeea":"code","915330ac":"markdown","3cbdfea6":"markdown","03c5bc84":"markdown","1d7cfc38":"markdown","8ad6b9ca":"markdown","582ed3b9":"markdown","a6284c80":"markdown","e597728a":"markdown","08e0fe4a":"markdown"},"source":{"9b7a3936":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21120cec":"meta = pd.read_csv('..\/input\/building-data-genome-project-v1\/meta_open.csv',index_col='uid') \nmeta.head()","1253e14f":"meta_phoenix=meta.loc[meta['timezone']=='America\/Phoenix']\nmeta_phoenix","7a46e859":"meta_office=meta_phoenix[meta_phoenix['primaryspaceusage']=='Office']\nmeta_office.head()","785fcec4":"meta_office.reset_index()","ebe3d082":"meta_office['uid'] = meta_office.index","c77b8498":"Officename = meta_office['uid'].tolist()\n","efc3b047":"data_list_normalized = []\nfor officename in Officename:\n    \n  rawdata = pd.read_csv(\"..\/input\/building-data-genome-project-v1\/\"+officename+\".csv\", parse_dates=True, index_col='timestamp')\n  floor_area = meta.loc[officename][\"sqm\"]\n\n  normalized_data = rawdata\/floor_area\n\n  data_list_normalized.append(normalized_data)\nnormalize_office = pd.concat(data_list_normalized,axis=1)\nnormalize_office","dd0b2eb5":"schedule = pd.read_csv('..\/input\/building-data-genome-project-v1\/schedule2.csv',header = None, parse_dates=True) \nschedule.columns = ['timestamp','schedule']\nschedule['timestamp']=pd.to_datetime(schedule['timestamp'],format='%Y-%m-%d')\nschedule.set_index(['timestamp'],inplace = True)\nschedule","96fdf8d5":"schedule['schedule'].value_counts()","a8bee61f":"#set the same column of 'Date'\nnormalize_office['Time'] = normalize_office.index.map(lambda t: t.time())\nnormalize_office['Date'] = normalize_office.index.map(lambda t: t.date())\nschedule['Date'] = schedule.index.map(lambda t: t.date())","7fb4e3f3":"#combine normalize_office and schedule\nnormalize_office_schedule = pd.merge(schedule, normalize_office, how='left', on='Date')\nnormalize_office_schedule","24edd77b":"#break.max>regular.max,holiday.max>regular.max\nnormalized_result = normalize_office_schedule.groupby(['schedule','Time']).mean()\ntmp = normalized_result.groupby(['schedule'])\ntmp.max()","06281332":"#select clients\nclients1 = []\nfor i in Officename:\n  if tmp.max().loc['Break'][i]>=tmp.max().loc['Regular'][i] or tmp.max().loc['Holiday'][i]>=tmp.max().loc['Regular'][i]: \n    clients1.append(i)\nclients1","932fcee1":"#Very important!!!!!!!!\nnormalized_result = normalize_office_schedule.groupby(['schedule','Time']).mean()\ndf_clients1 = normalized_result[clients1]\ndf_clients1.plot.area(figsize=(25,8),stacked=False)","6e8af5ff":"clients1","4d758ad0":"def clients1_pivot_plot(clients1):\n  reset_index = df_clients1[[clients1]].reset_index()\n  pivot = reset_index.pivot(index='Time',columns='schedule',values=clients1)\n  pivot.plot(figsize=(18,8)) \n  plt.title('24 load profile')\n  plt.tick_params(labelsize=20)\n  return plt.ylabel('Energy Consumption')\nclients1_pivot_plot('Office_Alannah')","a247312a":"clients1_pivot_plot('Office_Amelia')","e72e45d1":"clients1_pivot_plot('Office_Angelina')","9f5eae1d":"clients1_pivot_plot('Office_Alyson')","08100e70":"clients1_pivot_plot('Office_Allyson')","ab6606ff":"clients1_pivot_plot('Office_Ava')","09eedeea":"clients1_pivot_plot('Office_Abbey')","915330ac":"The third type: I call it a regular office type. The consumption performance of Ava, Allyson and Abbey all belong to this mode. The first peak occurs around 9:00, which is the prime time for work, and the second small peak will follow after sunset. All electricity consumption is concentrated in regular working hours (7:30-21:00). \n\nOffice Ava and Allyson do not seem to have a strict holiday concept, because the electricity consumption under different schedules is almost similar. Abbey is a little different from them. At least during Holiday, the employees seem to take a break because the overall electricity consumption is maintained at a very low level. If it were me, I might prefer to go to Abbey (LOL).","3cbdfea6":"From this picture, we can make a rough classification analysis of offices with similar consumption patterns. The next step is to compile the plot of office_Alannah, and the rest are analyzed with pictures (all screenshots after being generated on this page) to reduce the corresponding time of Kaggle running.","03c5bc84":"For our group project client criteria 1\uff1a **Break and Holiday schedule <or = Regular schedule**. At that time, there was no in-depth analysis of the office situation in this range. Therefore, when conducting market research, it is necessary to classify offices with similar consumption and estimate their office types and consumption methods. This is what I do in my individual project.\n\nIn fact, I am not very talented in programming, so I did not use pandas to do very diversified analysis. Part of the code comes from the contributions of groupwork members.","1d7cfc38":"The second type: office_Angelina and Alyson have unique consumption patterns. The first peak occurred between 5:00-5:30, and the consumption changes during the rest of the time were not very obvious. It is worth noting that the consumption patterns of Break and Holiday are the same, and the consumption patterns of Regular and Summer are the same. \n\nAnd the electricity consumption of the two offices as a whole follows the rule of Break>Holiday>Regular>Summer.","8ad6b9ca":"The first type: office Alannah and Amelia have similar consumption patterns. The first peak appeared at around 5:30, and consumption changed rapidly, as can be seen from the slope. Then the second peak of electricity consumption was around 14:00. \n\nThe consumption waveform structure of the two offices is very similar, and the electricity consumption during working hours follows the rule of Summer>Regular>Holiday>Break.","582ed3b9":"What's interesting is that at the first peak, the two offices showed a state that the consumption of holiday and break was greater than regular. It can be inferred that the company's working mode is that regular time works according to normal working hours. During holidays or breaks, they will work overtime in the morning because they need to improve efficiency. Electricity consumption has been very low since the morning, so the duties performed by the office should be management of transportation and delivery. Overtime work in the early morning is likely to require expedited delivery, after which the employees can return to their holiday life normally.","a6284c80":"There are three typical and different consumption patterns in these nine offices, and I will analyze them one by one next.","e597728a":"After investigation, the Phoenix City of the United States is in the leading position in the field of solar energy and semiconductors in the United States. Perhaps future energy-saving projects can be combined with solar power for intelligent power control.","08e0fe4a":"Obviously, a normal office consumption in Break and Holiday is lower than Regular. The consumption of this type of office seems abnormal, so it can be inferred that this office is a service-type holiday-driven profit model. During holidays, the workload is increased as needed and the power consumption of the equipment is increased. In the off-season (Regular), electricity consumption is not so frequent."}}