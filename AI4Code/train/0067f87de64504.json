{"cell_type":{"d6cbf958":"code","d7f4f501":"code","49de6eae":"code","e3ea9d50":"code","8aa07013":"code","c7d736de":"code","e112c1d3":"code","5c5d8a8d":"code","2072100c":"code","9db581b0":"code","1ad5c55a":"code","922cb79d":"code","f8e4b6b7":"code","f095c985":"code","78357b77":"code","92c361bb":"code","b2c6b354":"code","f4f36380":"code","e3a9719f":"code","557f08a4":"code","959ad05b":"code","c8c7ac9b":"code","54106700":"code","992adac5":"code","d6df6755":"code","137918bd":"code","3fba8f21":"code","13777593":"code","2054bb05":"code","23b8d688":"code","37f8b30d":"code","1a1fc738":"code","de308ad6":"code","c2dab296":"code","0fa887f6":"code","50d21d66":"code","f6502a70":"code","f8c09a3c":"code","4ce22ecd":"code","24095c7e":"code","bb55d9bd":"code","59fe726c":"markdown","28af3e07":"markdown","d76b20bf":"markdown","1f9afd81":"markdown","d09612e0":"markdown","8ad2ecdc":"markdown","eee2d149":"markdown","66e66de2":"markdown","708affff":"markdown","c9468767":"markdown","cd5f1843":"markdown","8fd6dfe2":"markdown","d3c201a9":"markdown","2050c806":"markdown","c1d5fae0":"markdown","ff6cb39b":"markdown","e991ad48":"markdown","3ad581a6":"markdown","250dccb4":"markdown","ec0bc4a0":"markdown","4ab4dff1":"markdown","5bfcaa98":"markdown","db69ae15":"markdown","d6d2acba":"markdown","000f0726":"markdown","245718ba":"markdown","182aaf75":"markdown","6764b03c":"markdown","fb8e03ba":"markdown","08ba741e":"markdown","8a882d64":"markdown","07b42a4d":"markdown","ed610599":"markdown"},"source":{"d6cbf958":"import pandas as pd\nimport numpy as np\n#import seaborn as sns\n#sns.set()","d7f4f501":"data = pd.read_csv('..\/input\/adult.data.csv')\ndata.head()","49de6eae":"data.sex.value_counts()","e3ea9d50":"data[data.sex =='Female'].age.mean()","8aa07013":"data.loc[data['sex'] == 'Female', 'age'].mean()","c7d736de":"data[data['native-country']=='Germany'].shape[0]*100\/data.shape[0]","e112c1d3":"data.groupby('salary')['age'].describe()","5c5d8a8d":"ages1 = data.loc[data['salary'] == '>50K', 'age']\nages2 = data.loc[data['salary'] == '<=50K', 'age']\nprint(\"The average age of the rich: {0} +- {1} years, poor - {2} +- {3} years.\".format(\n    round(ages1.mean()), round(ages1.std(), 1),\n    round(ages2.mean()), round(ages2.std(), 1)))","2072100c":"# You code here\ndata[data.salary=='>50K'].education.value_counts()","9db581b0":"data.loc[data['salary'] == '>50K', 'education'].unique()","1ad5c55a":"data.groupby(['race', 'sex']).age.describe()","922cb79d":"# You code here\n\ndata['is_married'] = data['marital-status'].apply(lambda x: 1 if 'Married-' in x else 0)\ndata.groupby(['is_married','salary']).size()","f8e4b6b7":"data.loc[(data['sex'] == 'Male') &\n     (data['marital-status'].isin(['Never-married', \n                                   'Separated', \n                                   'Divorced',\n                                   'Widowed'])), 'salary'].value_counts()","f095c985":"data.loc[(data['sex'] == 'Male') &\n     (data['marital-status'].str.startswith('Married')), 'salary'].value_counts()","78357b77":"# You code here\ndata['hours-per-week'].max()","92c361bb":"(data['hours-per-week']==data['hours-per-week'].max()).sum()","b2c6b354":"data[data['hours-per-week']==data['hours-per-week'].max()].salary.value_counts(normalize = True)","f4f36380":"# You code here\ndata.groupby(['salary','native-country'])['hours-per-week'].mean()","e3a9719f":"pd.crosstab(data['native-country'], data['salary'], \n           values=data['hours-per-week'], aggfunc=np.mean).T","557f08a4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","959ad05b":"data.info()","c8c7ac9b":"data.head()","54106700":"ax = data.groupby('salary').salary.count().plot(kind= 'bar', title = 'Target Distribution', )\nfor p in ax.patches:\n        ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","992adac5":"ax = data.salary.value_counts(normalize= True).plot(kind = 'bar', title = 'Target Distribution Rate')\nfor p in ax.patches:\n        ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","d6df6755":"data['target'] = np.where(data.salary == '<=50K',0,1)","137918bd":"ax = data.target.value_counts(normalize= True).plot(kind = 'bar', title = 'Target Distribution Rate')\nfor p in ax.patches:\n        ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","3fba8f21":"numeric_cols = list(data.select_dtypes(np.number).columns)\n#numeric_cols.remove('is_married')\nnumeric_cols.remove('target')\nnumeric_cols.remove('education-num')","13777593":"for col in numeric_cols:\n    sns.lmplot(x = col, y = 'target', data = data)","2054bb05":"pd.crosstab(data['target'], data['is_married'], margins=True, normalize= True)","23b8d688":"ax = sns.countplot(x='is_married', hue='target', data=data);\nfor p in ax.patches:\n        ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","37f8b30d":"49\/52, 20\/47","1a1fc738":"pd.crosstab(data['target'], data['education-num'], margins=True, normalize= True)","de308ad6":"ax = sns.countplot(x='education-num', hue='target', data=data)\n# for p in ax.patches:\n#     ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","c2dab296":"plt.figure(figsize=(20,5))\nax = sns.countplot(x='workclass', hue='target', data=data)\n# for p in ax.patches:\n#     ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","0fa887f6":"plt.figure(figsize=(30,5))\nax = sns.countplot(x='occupation', hue='target', data=data)\n# for p in ax.patches:\n#     ax.annotate(str(np.round(p.get_height(), decimals=2)), (p.get_x() * 1.005, p.get_height() * 1.005))","50d21d66":"plt.figure(figsize=(20,5))\nax = sns.countplot(x='relationship', hue='target', data=data)","f6502a70":"plt.figure(figsize=(5,20))\nax = sns.countplot(y='native-country', hue='target', data=data)","f8c09a3c":"plt.figure(figsize=(20,5))\nax = sns.countplot(x='race', hue='target', data=data)","4ce22ecd":"pd.crosstab(data['target'], data['race'], margins=True, normalize= True)","24095c7e":"#plt.figure(figsize=(20,5))\nax = sns.countplot(x='sex', hue='target', data=data)","bb55d9bd":"pd.crosstab(data['target'], data['sex'], margins=True, normalize= True)","59fe726c":"Unique values of all features (for more information, please see the links above):\n- `age`: continuous.\n- `workclass`: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\n- `fnlwgt`: continuous.\n- `education`: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\n- `education-num`: continuous.\n- `marital-status`: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\n- `occupation`: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\n- `relationship`: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\n- `race`: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\n- `sex`: Female, Male.\n- `capital-gain`: continuous.\n- `capital-loss`: continuous.\n- `hours-per-week`: continuous.\n- `native-country`: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.   \n- `salary`: >50K,<=50K","28af3e07":"**3. What is the percentage of German citizens (*native-country* feature)?**","d76b20bf":"#### Sample has very less data about other countries, I wonder how useful this column would be","1f9afd81":"**9. What is the maximum number of hours a person works per week (*hours-per-week* feature)? How many people work such a number of hours, and what is the percentage of those who earn a lot (>50K) among them?**","d09612e0":"# <center> Assignment #1 (demo)\n## <center>  Exploratory data analysis with Pandas\n","8ad2ecdc":"#### Japan 41(<50k) and 47 (>50K)","eee2d149":"#### Exec- Managerial and Prof-speciality Good!","66e66de2":"#### The proportion of >50K salary is greater in married.","708affff":"**7. Display age statistics for each race (*race* feature) and each gender (*sex* feature). Use *groupby()* and *describe()*. Find the maximum age of men of *Amer-Indian-Eskimo* race.**","c9468767":"**6. Is it true that people who earn more than 50K have at least high school education? (*education \u2013 Bachelors, Prof-school, Assoc-acdm, Assoc-voc, Masters* or *Doctorate* feature)**","cd5f1843":"#### The answer is 82.0","8fd6dfe2":"#### Say we create a flag for salary greater than 50K and use that as a prediction target\/label.","d3c201a9":"#### ~42% of the married people tend to have salary greater than 50K\n#### ~ 94 of the unmarried people tend to have salary lesser than 50K","2050c806":"#### Inferences\n1. No Missing.\n2. education-num is same as the education categories only numerical in dtype.\n3. fnlwgt is not known as of now.","c1d5fae0":"## My Learnings\n1. Crosstabs can be great for deep feature exploration\n2. It can be a great idea to first have some set of base models with simple rule mechanisms especially in classification problems.\n3. Jumping straight to ML algorithms may not be a very good idea.\n4. Its good to do some basic data processing and transform data a bit to visualise the trends.","ff6cb39b":"**10. Count the average time of work (*hours-per-week*) for those who earn a little and a lot (*salary*) for each country (*native-country*). What will these be for Japan?**","e991ad48":"**8. Among whom is the proportion of those who earn a lot (>50K) greater: married or single men (*marital-status* feature)? Consider as married those who have a *marital-status* starting with *Married* (Married-civ-spouse, Married-spouse-absent or Married-AF-spouse), the rest are considered bachelors.**","3ad581a6":"**2. What is the average age (*age* feature) of women?**","250dccb4":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\">\n    \n## [mlcourse.ai](mlcourse.ai) \u2013 Open Machine Learning Course \n\n<center>Author: [Yury Kashnitskiy](http:\/\/yorko.github.io) <br>\nTranslated and edited by [Sergey Isaev](https:\/\/www.linkedin.com\/in\/isvforall\/), [Artem Trunov](https:\/\/www.linkedin.com\/in\/datamove\/), [Anastasia Manokhina](https:\/\/www.linkedin.com\/in\/anastasiamanokhina\/), and [Yuanyuan Pao](https:\/\/www.linkedin.com\/in\/yuanyuanpao\/) <br>All content is distributed under the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license.","ec0bc4a0":"#### To all the husbands and wives!\n#### Own-child and other-relative huh?, stop staring, money isn't the only motivation in life man ","4ab4dff1":"#### Not so sure about this one too","5bfcaa98":"## Base Model 1\nPredicts with 0.76 accuracy just by classifying everyone as <=50K ","db69ae15":"**In this task you should use Pandas to answer a few questions about the [Adult](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Adult) dataset. (You don't have to download the data \u2013 it's already here). Choose the answers in the [web-form](https:\/\/docs.google.com\/forms\/d\/1uY7MpI2trKx6FLWZte0uVh3ULV4Cm_tDud0VDFGCOKg). This is a demo version of an assignment, so by submitting the form, you'll see a link to the solution .ipynb file.**","d6d2acba":"##### We are basically looking for features and combination of features that may give us max gain in classification when we split across them.","000f0726":"**1. How many men and women (*sex* feature) are represented in this dataset?** ","245718ba":"#### No that isn't true","182aaf75":"#### Doesn't seem like its gonna be a strong indicator","6764b03c":"#### Peeps with edu num > 13 are brewing some good numbers up I am sure, wasn't that sure with the crosstab though","fb8e03ba":"## Since the lecture had an interesting part about base model designing and then moving to complex models I wanted to go ahead and design a base model with simple rules as shown in the lecture to be able to classify the given data in this assignment to predict salary class.","08ba741e":"## More EDA","8a882d64":"#### We can roughly have a rule that says if a person is unmarried he would have a salary less than 50K but lets explore further as of now because that would make us only ~ 50% accurate lol.","07b42a4d":"**4-5. What are the mean and standard deviation of age for those who earn more than 50K per year (*salary* feature) and those who earn less than 50K per year? **","ed610599":"### 1. Starting with continuous variables"}}