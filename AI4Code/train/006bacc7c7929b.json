{"cell_type":{"1b7dd7ae":"code","437361cc":"code","fc0f928f":"code","1e44df7c":"code","67c678b9":"code","71808641":"code","04a44d02":"code","7bc6a123":"code","cd1e2238":"code","fca2459f":"code","1de07331":"code","6318a78b":"code","1fdb796e":"code","e8699e47":"code","9a79211a":"code","a9901243":"code","15aefe8e":"code","b6148fce":"code","a92c5198":"code","9ffaa603":"code","9385e994":"code","7801208d":"code","49fbde94":"code","7c93fa27":"code","9d539a55":"markdown","9beda070":"markdown","fd730df6":"markdown","39001451":"markdown","b543eada":"markdown","a23b619c":"markdown","79b68d06":"markdown","041e23c8":"markdown","c7f6c528":"markdown","49077f39":"markdown","160806e7":"markdown","8d116885":"markdown","610444d0":"markdown","0ce28a52":"markdown"},"source":{"1b7dd7ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","437361cc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')","fc0f928f":"data=pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')","1e44df7c":"data.head()","67c678b9":"data.shape","71808641":"data.info()","04a44d02":"print(\"Number of games: \", len(data))\npublishers = data['Publisher'].unique()\nprint(\"Number of publishers: \", len(publishers))\nplatforms = data['Platform'].unique()\nprint(\"Number of platforms: \", len(platforms))\ngenres =data['Genre'].unique()\nprint(\"Number of genres: \", len(genres))","7bc6a123":"data.isnull().sum()","cd1e2238":"data=data.dropna()","fca2459f":"plt.figure(figsize=(15, 10))\nax=sns.countplot(x=\"Genre\", data=data, order = data['Genre'].value_counts().index)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')\nplt.show()","1de07331":"import plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as pyoff\nimport plotly.graph_objects as go\n\nuniq=data[\"Genre\"].unique()\n\ntotal_Genre = []\nfor i in uniq:\n    total_Genre.append(len(data[data[\"Genre\"]==i]))\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = uniq\n\n# Create subplots: use 'domain' type for Pie subplot\n\n#fig.add_trace(go.Pie(labels=labels, values=total_Genre, name=\"Genre\"))\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=total_Genre, hole=.3)])\nfig.update_layout(\n    title_text=\"Total Game Count in Genre\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Genre', x=0.5, y=0.5, font_size=20, showarrow=False)])\nfig.show()\n","6318a78b":"plt.figure(figsize=(15,10))\nax=sns.countplot(data.Year)\nplt.xticks(rotation=45)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x()+0.05, p.get_height()+1), va='bottom',\n                    color= 'black')\nplt.show()","1fdb796e":"y = data.groupby(['Year'])['Global_Sales'].sum()\nx = y.index.astype(int)\nplt.figure(figsize=(12,8))\nax=sns.barplot(y = y, x = x)\nplt.xlabel(xlabel='Year', fontsize=16)\nplt.xticks(fontsize=12, rotation=50)\nplt.ylabel(ylabel='Millions $', fontsize=16)\nplt.title(label='Game Sales in Millions $ Per Year', fontsize=20)\nplt.show()","e8699e47":"plt.figure(figsize=(15,10))\nplt.xticks(rotation=45)\nsns.countplot( x=\"Platform\", data=data, order = data['Platform'].value_counts().index)\nplt.show()","9a79211a":"plt.figure(figsize=(30, 10))\nsns.countplot(x=\"Year\", data=data, hue='Genre', order=data.Year.value_counts().iloc[:5].index)\nplt.xticks(size=16)\nplt.xlabel(xlabel='Year', fontsize=20)\nplt.ylabel(ylabel='Count', fontsize=20)\nplt.show()","a9901243":"data_genre = data.groupby(by=['Genre'])['Global_Sales'].sum().reset_index().sort_values(by=['Global_Sales'], ascending=False)","15aefe8e":"plt.figure(figsize=(15, 10))\nax=sns.barplot(x=\"Genre\", y=\"Global_Sales\", data=data_genre)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')\nplt.show()","b6148fce":"dataYear=data[\"Year\"].dropna().unique()\ndataYear.sort()","a92c5198":"na=[]\neu=[]\njp=[]\nother=[]\nglbl=[]\n\nfor i in dataYear:\n    x=data[data[\"Year\"]==i]\n    \n    na.append(sum(x[\"NA_Sales\"]))\n    eu.append(sum(x[\"EU_Sales\"]))\n    jp.append(sum(x[\"JP_Sales\"]))\n    other.append(sum(x[\"Other_Sales\"]))\n    glbl.append(sum(x[\"Global_Sales\"]))\n \nyearSales=pd.DataFrame({\"Year\":dataYear, \"NA\":na, \"EU\":eu, \"JP\":jp, \"Other\":other, \"Global\":glbl})\nyearSales[\"Year\"].astype(\"int64\")\n\nyearSales.info()","9ffaa603":"yearSales[\"Year\"]=yearSales.Year.astype(\"int64\")\n\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x=\"Year\",y=\"NA\" ,data=yearSales,color='lime',alpha=0.8)\nsns.pointplot(x=\"Year\",y=\"EU\",data=yearSales,color='gold',alpha=0.8)\nsns.pointplot(x=\"Year\",y=\"JP\",data=yearSales,color='purple',alpha=0.8)\nsns.pointplot(x=\"Year\",y=\"Global\",data=yearSales,color='red',alpha=0.8)\nplt.text(1,670,'Annual Global Sales',color='red',fontsize = 18,style = 'italic')\nplt.text(1,640,'Annual NA Sales',color='lime',fontsize = 18,style = 'italic')\nplt.text(1,610,'Annual EU Sales',color='gold',fontsize = 18,style = 'italic')\nplt.text(1,580,'Annual Japan Sales',color='purple',fontsize = 18,style = 'italic')\nplt.xticks(rotation=90)\nplt.xlabel('Years',fontsize = 20,color='blue')\nplt.ylabel('Sales',fontsize = 20,color='blue')\nplt.title('ANNUAL SALES',fontsize = 20,color='blue')\nplt.grid()","9385e994":"data_platform = data.groupby(by=['Platform'])['Global_Sales'].sum().reset_index().sort_values(by=['Global_Sales'], ascending=False)","7801208d":"plt.figure(figsize=(15, 10))\nsns.barplot(x=\"Platform\", y=\"Global_Sales\", data=data_platform)\nplt.xticks(rotation=90)\nplt.show()","49fbde94":"top_publisher = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).head(20)\ntop_publisher = pd.DataFrame(top_publisher).reset_index()","7c93fa27":"plt.figure(figsize=(15, 10))\nax=sns.countplot(x=\"Publisher\", data=data, order = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).iloc[:20].index)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')","9d539a55":"### PS2 :)\n## 9. Which are Top 20 Publisher?","9beda070":"## 8. Which platfrom have the highest sale price globally?","fd730df6":"## 6. Which genre game have the highest sale price globally?","39001451":"### 2006\n## 4. find out for which Platform games were developed the most?","b543eada":"### So We find out that Action Games were made the most\n## 2. From which year most number of games were made ?","a23b619c":"## 1. Which Games were made the most ?","79b68d06":"### From Year 2000 most number of games were made maybe due to advancement in Technology\n## 3. Which year had the highest sales worldwide?","041e23c8":"If you have reached till here, So i hope you liked my Analysis.\n\nDon't forget to upvote if you like it!.\n\nI'm a beginner and any suggestion in the comment box is highly appreciated.\n\nIf you have any doubt reagrding any part of the notebook, feel free to comment your doubt in the comment box.\n\nThank you!!","c7f6c528":"### Action game\n## 7. Annual and Global Sales In The World\u00b6","49077f39":"## There is still a lot of question data to ask..","160806e7":"\n <center><h1 style=\"color:red\">Don't forget to upvote if you like it! :)<\/h1><\/center>","8d116885":"# Video Games Sales Analysis And Visualization\n\n![](https:\/\/cdn.wallpapersafari.com\/72\/35\/RkVwbN.jpg)\n\nAbout dataset:\n\nRank - Ranking of overall sales, integer\n\nName - The games name\n\nPlatform - Platform of the games release (i.e. PC,PS4, etc.), object\n\nYear - Year of the game's release, float\n\nGenre - Genre of the game ,object\n\nPublisher - Publisher of the game, object\n\nNA_Sales - Sales in North America (in millions), float\n\nEU_Sales - Sales in Europe (in millions), float\n\nJP_Sales - Sales in Japan (in millions), float\n\nOther_Sales - Sales in the rest of the world (in millions), float\n\nGlobal_Sales - Total worldwide sales, float","610444d0":"### The winner is PS2 &DS\n## 5. Find out top 5 years games release by genre.","0ce28a52":"# Analysis And Visualization"}}