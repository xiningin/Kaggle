{"cell_type":{"ebaa3aa3":"code","443235dd":"code","a0f3446b":"code","1563b3b3":"code","1089a3c1":"code","b430aca0":"code","544a93f4":"code","531ebd4f":"code","6461785f":"code","64823f49":"code","ad3c66c5":"code","8a30ce1d":"code","3acce4ad":"code","921da544":"code","4cb2b489":"code","5f35389d":"code","6fafb10d":"code","6c3826e5":"code","61b62849":"code","4758bc5b":"code","b55d6007":"code","308ee195":"code","a25f3106":"code","4d538df6":"code","175138ce":"code","eb82e0fb":"code","182b4462":"code","9739d74c":"code","f980f004":"code","01870a64":"markdown","ba834025":"markdown","6525c5ff":"markdown","b133b4d5":"markdown","d923f959":"markdown","7ef9a141":"markdown","c755b0ab":"markdown","dd6a7bb7":"markdown","c70c224d":"markdown","8e6bd339":"markdown","7b3286bd":"markdown","4a7c69c6":"markdown","8f6e3577":"markdown","e3297e17":"markdown","eb90d376":"markdown","0500eeb0":"markdown","adf88143":"markdown","dcf80f61":"markdown","1a25104c":"markdown"},"source":{"ebaa3aa3":"#importing libaries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport scipy.stats as st\nfrom sklearn import ensemble, tree, linear_model\n","443235dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0f3446b":"test = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","1563b3b3":"test.describe()","1089a3c1":"train.describe()","b430aca0":"train.head()","544a93f4":"print(train.shape)\nprint(test.shape)","531ebd4f":"numeric=[f for f in train.columns if train.dtypes[f] != 'object']\nnumeric","6461785f":"catagorical = [i for i in train.columns if train.dtypes[i] == 'object']\ncatagorical","64823f49":"num_features = train.select_dtypes(include=[np.number])\nnum_features.columns","ad3c66c5":"cat_features = train.select_dtypes(include=[object])\ncat_features.columns","8a30ce1d":"numeric_features=num_features.drop(['YrSold','YearBuilt', 'YearRemodAdd', 'GarageYrBlt'],axis=1)","3acce4ad":"numeric_features","921da544":"discrete_feature=[feature for feature in numeric_features if len(train[feature].unique())<25]\ndiscrete_feature","4cb2b489":"for feature in discrete_feature:\n    data=train.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","5f35389d":"continuous_feature=[feature for feature in numeric_features if feature not in discrete_feature]\ncontinuous_feature.pop(0)","6fafb10d":"for feature in continuous_feature:\n    data=train.copy()\n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","6c3826e5":"train['HouseStyle'].unique() \n","61b62849":"for feature in cat_features:\n    \n    sns.countplot(x=feature, data=cat_features);\n    plt.title(feature)\n    plt.show()\n","4758bc5b":"train.info()\n","b55d6007":"total = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1,join='outer', keys=['Total Missing Count', ' % of Total Observations'])\nmissing_data.index.name ='Feature'\nmissing_data.head(20)\n","308ee195":"missing = train.isnull().sum()\nmissing = missing[missing > 0]\nmissing.sort_values(inplace=True)\nmissing.plot.bar()","a25f3106":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False)\n","4d538df6":"for feature in continuous_feature:\n    data=train.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()","175138ce":"train.skew()","eb82e0fb":"train.kurt()\n","182b4462":"import scipy.stats as stats\n\ny = train['SalePrice']\nplt.figure(1); plt.title('Johnson SU')\nsns.distplot(y, kde=False, fit=stats.johnsonsu)\nplt.figure(2); plt.title('Normal')\nsns.distplot(y, kde=False, fit=stats.norm)\nplt.figure(3); plt.title('Log Normal')\nsns.distplot(y, kde=False, fit=stats.lognorm)","9739d74c":"corrmat = train.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=.8, square=True)","f980f004":"k= 11\ncols = corrmat.nlargest(k,'SalePrice')['SalePrice'].index\nprint(cols)\ncm = np.corrcoef(train[cols].values.T)\nf , ax = plt.subplots(figsize = (14,12))\nsns.heatmap(cm, vmax=.8, linewidths=0.01,square=True,annot=True,cmap='viridis',\n            linecolor=\"white\",xticklabels = cols.values ,annot_kws = {'size':12},yticklabels = cols.values)","01870a64":"# Exploratory data analysis\n\n**Exploratory Data Analysis (EDA)** is an approach for summarizing, visualizing, and becoming intimately familiar with the important characteristics of a data set.In this notebook we are analysing the dataset for the kaggle competion *House Prices: Advanced Regression Techniques* \n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/5407\/media\/housesbanner.png)\n","ba834025":"relationship between these discrete features and Sale Price","6525c5ff":"## Skewness and kurtosis\n1. *Skewness* is a measure of symmetry\n2. *Kurtosis* is a measure of whether the data are heavy-tailed or light-tailed relative to a normal distribution","b133b4d5":"Colomns like PoolQC,MiscFeature,Alley,Fence\thaving missing  values more than 80% (FireplaceQu,LotFrontage also significant amount of missing values","d923f959":"## seperating data in numerical and catogrical & analysing","7ef9a141":"Use shape function to find the number of rows and coloumns","c755b0ab":"There are 1460 instances of training data and 1460 of test data. Total number of attributes equals 81, of which 38 is numeric (including salesprice and id), 41 is categorical .\n\nNumeric: 1stFlrSF, 2ndFlrSF, 3SsnPorch, BedroomAbvGr, BsmtFinSF1, BsmtFinSF2, BsmtFullBath, BsmtHalfBath, BsmtUnfSF, EnclosedPorch, Fireplaces, FullBath, GarageArea, GarageCars, GarageYrBlt, GrLivArea, HalfBath, KitchenAbvGr, LotArea, LotFrontage, LowQualFinSF, MSSubClass, MasVnrArea, MiscVal, MoSold, OpenPorchSF, OverallCond, OverallQual, PoolArea, ScreenPorch, TotRmsAbvGrd, TotalBsmtSF, WoodDeckSF, YearBuilt, YearRemodAdd, YrSold\n\nCategorical: Alley, BldgType, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, BsmtQual, CentralAir, Condition1, Condition2, Electrical, ExterCond, ExterQual, Exterior1st, Exterior2nd, Fence, FireplaceQu, Foundation, Functional, GarageCond, GarageFinish, GarageQual, GarageType, Heating, HeatingQC, HouseStyle, KitchenQual, LandContour, LandSlope, LotConfig, LotShape, MSZoning, MasVnrType, MiscFeature, Neighborhood, PavedDrive, PoolQC, RoofMatl, RoofStyle, SaleCondition, SaleType, Street, Utilities,","dd6a7bb7":"We can use the describe() function to get various summary statistics that exclude NaN values.","c70c224d":"Corelation heatmap","8e6bd339":"from observations it is found that OverallQual, GrLivArea, GarageCars, GarageArea',TotalBsmtSF, 1stFlrSF, FullBath, TotRmsAbvGrd, YearBuilt,YearRemodAdd etc are the most correlated features. Inorder to observe correlation closer we use Zoomed Heat Map","7b3286bd":"Zoomed Heat Map","4a7c69c6":"# Describes EDA techinques that i used to reach top 3%","8f6e3577":"## outliers\nidentifying outliers in dataset","e3297e17":"## Finding Missing Values\n","eb90d376":"## Correlation\nCorrelation is a statistical technique that can show whether and how strongly pairs of variables are related will help us to find the most coorelated feature.we are using corelation heat map and Zoomed heatmap","0500eeb0":"19 attributes have missing values, 5 over 50% of all data. Most of times NA means lack of subject described by attribute, like missing pool, fence, no garage and basement.\n\n","adf88143":"plotting catogrical values with repect to their count","dcf80f61":"Numerical variables Types\n1. Discrete Values\n2. Countinues values\n3. Date related values\n","1a25104c":"relationship between these countinues features and Sale Price"}}