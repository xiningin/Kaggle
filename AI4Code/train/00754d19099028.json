{"cell_type":{"63f89ce4":"code","ae62e216":"code","f55e249f":"code","0b7d3f74":"code","4128205b":"code","a443945c":"code","8a3bba75":"code","3d314299":"code","e38f915b":"code","07418512":"code","d7022a87":"code","86623761":"code","ae32ca29":"code","ffb853e3":"code","13a36077":"code","df1bfcbd":"code","853c0125":"code","e244c4f3":"code","b606aa9f":"code","341b3c9d":"code","f765a8dd":"code","d73d40db":"code","b43f7351":"code","957f20d4":"code","71bee635":"code","2f6dd95a":"code","85670ab0":"code","347d773d":"code","d1000896":"code","a613166b":"code","075d2d8e":"code","96d4d713":"code","a3be92d2":"code","4b661df8":"code","bf7e644a":"code","eaf61a4a":"code","cdc9a05e":"code","174fe31a":"code","855b732c":"code","207e49e9":"code","712b9440":"code","63f358cb":"code","c56bfcdd":"code","e984fd2e":"code","127e6cc9":"code","6b543bba":"code","0beb4f85":"code","a1433a43":"code","a08be471":"code","b3c4654b":"code","fb27c306":"code","64357a16":"code","24bb757e":"code","1fb876e6":"code","8bc2287b":"code","80d0fd0a":"code","91b4ac95":"code","5585313f":"code","9922ff9a":"code","ccc36da5":"code","f15346ce":"code","8f879247":"code","12722e98":"code","07eb03e0":"code","57532fe1":"code","0b02412b":"code","64a1928a":"code","ccf50bcc":"code","35992aa3":"code","0e3d25f7":"code","9fd42f93":"code","a3c7592e":"code","1a68b9c8":"code","421f897e":"code","974aaea0":"code","3cf3b50e":"code","c6c549ee":"code","e88f5f32":"code","6a2bfab4":"code","8edd779a":"code","7cdbb03b":"code","18853964":"code","8d59cbb3":"code","1068c1d1":"markdown","38a41756":"markdown","86606c8c":"markdown","391e48d5":"markdown","f3624095":"markdown","1af27e3c":"markdown","89244e39":"markdown","73a93296":"markdown","5849c91d":"markdown","467c2eec":"markdown","8f4749cf":"markdown","52d438e7":"markdown","01dc6ba2":"markdown","37622cd1":"markdown","5b6ce022":"markdown","098764ae":"markdown","8368d49b":"markdown","00167c3e":"markdown","be39c84f":"markdown","697a8c64":"markdown","6df7a052":"markdown","2e28c85b":"markdown","a62af580":"markdown","36052e73":"markdown","6e61bdc8":"markdown","04c7920e":"markdown","c97d0b48":"markdown","4c0f868c":"markdown","d6852f0a":"markdown","1e78715c":"markdown","3925e890":"markdown","76dfc63e":"markdown","d3cbf8e0":"markdown","c30376f8":"markdown","93621835":"markdown","c96a0804":"markdown","03aeaa29":"markdown","86ba507f":"markdown","54e3f950":"markdown","0b0ed5c6":"markdown","a6bd29d0":"markdown","b18a8bd2":"markdown","849e8371":"markdown","460a1e11":"markdown","f52f1379":"markdown","687344c2":"markdown","b94761a7":"markdown","b3dbb1ee":"markdown","a19ad0f3":"markdown","ba04b0d7":"markdown","cd7919d2":"markdown","76e54ad8":"markdown"},"source":{"63f89ce4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ae62e216":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport warnings\nimport plotly.express as px\nwarnings.filterwarnings(\"ignore\")","f55e249f":"data = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")","0b7d3f74":"data.head()","4128205b":"print(\"Shape of complete survey data : - \", data.shape)","a443945c":"my_country = data[data[\"Q3\"] == 'India']\nprint(\"Shape of Indian survey data : - \", my_country.shape)","8a3bba75":"data_ = data.iloc[1:]","3d314299":"print(\"Distribution of Age :-\",data_[\"Q1\"].value_counts())\nprint(\"\\nTop Age group -- {25-29}: --\",data[\"Q1\"].value_counts()[0])","e38f915b":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q1',\n              data = data_,\n              order = data_[\"Q1\"].value_counts().index)\n\nax.set_xlabel(\" Age Distribution \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=70)\nplt.show()","07418512":"len(data_[data_[\"Q2\"] == \"Woman\"])\/len(data_),len(data_[(data_[\"Q2\"] == \"Woman\") & (data_[\"Q3\"] == \"India\")])\/len(data_)","d7022a87":"_woman = data_[data_[\"Q2\"] == \"Woman\"][\"Q1\"].value_counts().reset_index()\n_woman.rename(columns = {'index' : 'Age_Group', 'Q1' : 'Count of Woman'}, inplace=True)","86623761":"fig = px.pie(_woman, values='Count of Woman', names='Age_Group', title='count of world-wide woman age-group wise')\nfig.show()","ae32ca29":"indian_woman = data_[(data_[\"Q2\"] == \"Woman\") & (data_[\"Q3\"] == \"India\")][\"Q1\"].value_counts().reset_index()\nindian_woman.rename(columns = {'index' : 'Age_Group', 'Q1' : 'Count of Woman'}, inplace=True)","ffb853e3":"fig = px.pie(indian_woman, values='Count of Woman', names='Age_Group', title='count of Indian woman age-group wise')\nfig.show()","13a36077":"women_kaggle = data_[data_[\"Q2\"] == \"Woman\"]","df1bfcbd":"cn = women_kaggle.pivot_table(index = [\"Q3\", \"Q1\"], \n                                  values = [\"Q2\"], \n  aggfunc=\"count\").reset_index().sort_values([\"Q2\"], ascending=False)\n\nage_grp = cn.groupby('Q3').head(1)\nage_grp.rename(columns = {\"Q3\" : \"Country\", \"Q1\" : \"Age_Group\", \"Q2\" : \"Count_of_woman\"}, inplace = True)\n\ntop_10_ = age_grp.head(10)","853c0125":"sns.set(rc={'figure.figsize':(10,7.27)})\nsns.scatterplot(data=top_10_, x=\"Age_Group\", y=\"Count_of_woman\", size=\"Count_of_woman\", hue=\"Country\", legend=\"brief\", sizes=(20, 2000))\nplt.legend(bbox_to_anchor=(1.51, 1),borderaxespad=0)","e244c4f3":"print(\"Distribution of Age :-\",my_country[\"Q1\"].value_counts())\nprint(\"\\nTop Age group in India -- {18-21}: --\",my_country[\"Q1\"].value_counts()[0])","b606aa9f":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q1',\n              data = my_country,\n              order = my_country[\"Q1\"].value_counts().index)\n\nax.set_xlabel(\" Age Distribution \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=70)\nplt.show()","341b3c9d":"data_.Q2.value_counts()\/len(data_)","f765a8dd":"gender_plt = pd.DataFrame(data_[\"Q2\"].value_counts()).reset_index()\ngender_plt.rename(columns = {'index' : 'Gender', 'Q2' : 'Count of People'}, inplace=True)","d73d40db":"fig = px.pie(gender_plt, values='Count of People', names='Gender', title='count of people of every gender')\nfig.show()","b43f7351":"gender_plt_india = pd.DataFrame(my_country[\"Q2\"].value_counts()).reset_index()\ngender_plt_india.rename(columns = {'index' : 'Grnder', 'Q2' : 'Count of People'}, inplace=True)","957f20d4":"fig = px.pie(gender_plt_india, values='Count of People', names='Grnder', title='count of people of every gender')\nfig.show()","71bee635":"data_[\"Q3\"].nunique()","2f6dd95a":"cntry = pd.DataFrame(data_[\"Q3\"].value_counts().nlargest(35)).reset_index()\ncntry.rename(columns = {'index' : 'Country', 'Q3' : 'Count of People'}, inplace=True)\ncntry","85670ab0":"fig = px.pie(cntry, values='Count of People', names='Country', title='count of people of every country')\nfig.show()","347d773d":"data_[\"Q4\"].value_counts()","d1000896":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q4',\n              data = data_,\n              order = data_[\"Q4\"].value_counts().index,\n            )\n\nax.set_xlabel(\" Education \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","a613166b":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q4',\n              data = data_,\n              order = data_[\"Q4\"].value_counts().index,\n                  hue = data_[\"Q2\"])\n\nax.set_xlabel(\" Education \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","075d2d8e":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q4',\n              data = my_country,\n              order = my_country[\"Q4\"].value_counts().index)\n\nax.set_xlabel(\" Education \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","96d4d713":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q4',\n              data = my_country,\n              order = my_country[\"Q4\"].value_counts().index,\n                  hue = my_country[\"Q2\"])\n\nax.set_xlabel(\" Education \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","a3be92d2":"data_[\"Q5\"].value_counts()","4b661df8":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q5',\n              data = data_,\n              order = data_[\"Q5\"].value_counts().index)\n\nax.set_xlabel(\" Role \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","bf7e644a":"ds = data_[data_[\"Q5\"] == \"Data Scientist\"]","eaf61a4a":"ds[\"Q2\"].value_counts(normalize=True)","cdc9a05e":"ds_gender_worldwide = pd.DataFrame(ds[\"Q2\"].value_counts()).reset_index()\nds_gender_worldwide.rename(columns = {'index' : 'Grnder', 'Q2' : 'Count of People'}, inplace=True)\n\n#PLOT \n\nfig = px.pie(ds_gender_worldwide, values='Count of People', names='Grnder', title='Data Scientist : Gender wise')\nfig.show()\n","174fe31a":"ds[\"Q4\"].value_counts(normalize=True)","855b732c":"ds_edu_worldwide = pd.DataFrame(ds[\"Q4\"].value_counts()).reset_index()\nds_edu_worldwide.rename(columns = {'index' : 'Degree', 'Q4' : 'Count of People'}, inplace=True)\n\n#PLOT \n\nfig = px.pie(ds_edu_worldwide, values='Count of People', names='Degree', title='Count of Data Scientist : Preferable Degree ')\nfig.show()\n","207e49e9":"ds_age_worldwide = pd.DataFrame(ds[\"Q1\"].value_counts()).reset_index()\nds_age_worldwide.rename(columns = {'index' : 'Age_group', 'Q1' : 'Count of People'}, inplace=True)\n\n#PLOT \n\nfig = px.pie(ds_age_worldwide, values='Count of People', names='Age_group', title='Count of Data Scientist : Age_Group wise ')\nfig.show()\n","712b9440":"data_[\"Q6\"].value_counts(normalize=True)","63f358cb":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Q6',\n              data = data_,\n              order = data_[\"Q6\"].value_counts().index)\n\nax.set_xlabel(\" Programming Experience \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","c56bfcdd":"data_.columns","e984fd2e":"d = data_[['Q7_Part_1', 'Q7_Part_2', 'Q7_Part_3', 'Q7_Part_4','Q7_Part_5','Q7_Part_6','Q7_Part_7','Q7_Part_8','Q7_Part_9','Q7_Part_10','Q7_Part_11','Q7_Part_12']]","127e6cc9":"for col in d.columns:\n    print('-' * 30 + col + '-' * 30 , end=' - ')\n    display(d[col].value_counts().head(10))","6b543bba":"lang = pd.DataFrame(zip(d.stack().tolist()), columns = [\"Languages\"])","0beb4f85":"lang[\"Languages\"].value_counts(normalize=True)","a1433a43":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Languages',\n              data = lang,\n              order = lang[\"Languages\"].value_counts().index)\n\nax.set_xlabel(\" Regular basis Programming Language \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","a08be471":"fst = data_[[\"Q3\", \"Q8\"]]\nfst[\"Con\"] = [\"India\" if (x == \"India\") else \"Other Countries\" for x in fst.Q3]","b3c4654b":"sns.countplot(data = fst, x = \"Q8\", hue = \"Con\")\nax.set_xlabel(\" Programming Language Recommendation \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","fb27c306":"ides = data_[[\"Q9_Part_1\", \"Q9_Part_2\", \"Q9_Part_3\", \"Q9_Part_4\", \"Q9_Part_5\", \"Q9_Part_6\", \"Q9_Part_7\", \"Q9_Part_8\", \n      \"Q9_Part_9\", \"Q9_Part_10\", \"Q9_Part_11\", \"Q9_Part_12\", \"Q9_OTHER\"]]\n\nide = pd.DataFrame(zip(ides.stack().tolist()), columns = [\"IDEs\"])","64357a16":"ide.IDEs.value_counts()","24bb757e":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'IDEs',\n              data = ide,\n              order = ide[\"IDEs\"].value_counts().index)\n\nax.set_xlabel(\" Best IDEs \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","1fb876e6":"notebook = data_[[\"Q10_Part_1\", \"Q10_Part_2\", \"Q10_Part_3\", \"Q10_Part_4\", \"Q10_Part_5\", \"Q10_Part_6\", \"Q10_Part_7\", \n            \"Q10_Part_8\", \"Q10_Part_9\", \"Q10_Part_10\", \"Q10_Part_11\", \"Q10_Part_12\", \"Q10_Part_13\", \"Q10_Part_14\", \n            \"Q10_Part_15\", \"Q10_Part_16\", \"Q10_OTHER\"]]\n\nn = pd.DataFrame(zip(notebook.stack().tolist()), columns = [\"Notebooks\"])","8bc2287b":"n.Notebooks.value_counts()","80d0fd0a":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Notebooks',\n              data = n,\n              order = n[\"Notebooks\"].value_counts().index)\n\nax.set_xlabel(\" Preferred Notebook \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","91b4ac95":"data_[\"Q11\"].value_counts()\n\ncntry = pd.DataFrame(data_[\"Q11\"].value_counts()).reset_index()\ncntry.rename(columns = {'index' : 'Computing Platform', 'Q11' : 'Count of Users'}, inplace=True)\ncntry\nfig = px.pie(cntry, values='Count of Users', names='Computing Platform', title='Computing Platform : - User Count')\nfig.show()","5585313f":"hardware = data_[[\"Q12_Part_1\", \"Q12_Part_2\", \"Q12_Part_3\", \"Q12_Part_4\", \"Q12_Part_5\",\n                  \"Q12_OTHER\"]]","9922ff9a":"hr = pd.DataFrame(zip(hardware.stack().tolist()), columns = [\"Hardware Type\"])\n\nhr[\"Hardware Type\"].value_counts()","ccc36da5":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Hardware Type',\n              data = hr,\n              order = hr[\"Hardware Type\"].value_counts().index)\n\nax.set_xlabel(\" Preferred Hardware Type \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","f15346ce":"data_[\"Q13\"].value_counts(normalize=True)","8f879247":"tpu = pd.DataFrame(data_[\"Q13\"].value_counts()).reset_index()\ntpu.rename(columns = {'index' : 'Time', 'Q13' : 'Count of Users'}, inplace=True)\n\n\nfig = px.pie(tpu, values ='Count of Users', names='Time', title='TPU Uses : - User Count')\nfig.show()","12722e98":"viz_libraries = data_[[\"Q14_Part_1\", \"Q14_Part_2\",\"Q14_Part_3\", \"Q14_Part_4\",\n                       \"Q14_Part_5\",\"Q14_Part_6\", \"Q14_Part_7\",\"Q14_Part_8\", \n                \"Q14_Part_9\", \"Q14_Part_10\", \"Q14_Part_11\", \"Q14_OTHER\"]]\n\nv = pd.DataFrame(zip(viz_libraries.stack().tolist()), columns = [\"Library Type\"])","07eb03e0":"v[\"Library Type\"].value_counts()","57532fe1":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'Library Type',\n              data = v,\n              order = v[\"Library Type\"].value_counts().index)\n\nax.set_xlabel(\" Preferred Library Type \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","0b02412b":"data_[\"Q15\"].value_counts()","64a1928a":"ml = pd.DataFrame(data_[\"Q15\"].value_counts()).reset_index()\nml.rename(columns = {'index' : 'Time', 'Q15' : 'Count of Users'}, inplace=True)\n\n\nfig = px.pie(ml, values ='Count of Users', names='Time', title='Years of ML Uses : - User Count')\nfig.show()","ccf50bcc":"frameworks = data_[[\"Q16_Part_1\", \"Q16_Part_2\", \"Q16_Part_3\", \"Q16_Part_4\", \"Q16_Part_5\", \"Q16_Part_6\", \"Q16_Part_7\", \"Q16_Part_8\", \"Q16_Part_9\",\n                \"Q16_Part_10\", \"Q16_Part_11\", \"Q16_Part_12\", \"Q16_Part_13\", \"Q16_Part_14\", \"Q16_Part_15\", \"Q16_Part_16\", \n                \"Q16_Part_17\", \"Q16_OTHER\"\n                ]]\n\nf = pd.DataFrame(zip(frameworks.stack().tolist()), columns = [\"ML_Frameworks\"])","35992aa3":"f.ML_Frameworks.value_counts()","0e3d25f7":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'ML_Frameworks',\n              data = f,\n              order = f[\"ML_Frameworks\"].value_counts().index)\n\nax.set_xlabel(\" Preferred ML_Frameworks \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","9fd42f93":"algos = data_[[\"Q17_Part_1\", \"Q17_Part_2\", \"Q17_Part_3\", \"Q17_Part_4\", \"Q17_Part_5\", \"Q17_Part_6\", \"Q17_Part_7\", \"Q17_Part_8\", \"Q17_Part_9\",\n            \"Q17_Part_10\", \"Q17_Part_11\", \"Q17_OTHER\"\n            ]]\n\nal = pd.DataFrame(zip(algos.stack().tolist()), columns = [\"ML_Algorithm :- Regular Basis\"])","a3c7592e":"al[\"ML_Algorithm :- Regular Basis\"].value_counts()","1a68b9c8":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'ML_Algorithm :- Regular Basis',\n              data = al,\n              order = al[\"ML_Algorithm :- Regular Basis\"].value_counts().index)\n\nax.set_xlabel(\" Preferred ML_Algorithm :- Regular Basis \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","421f897e":"cv = data_[[\"Q18_Part_1\", \"Q18_Part_2\", \"Q18_Part_3\", \"Q18_Part_4\", \"Q18_Part_5\", \"Q18_Part_6\", \"Q18_OTHER\"]]\n\ncvv = pd.DataFrame(zip(cv.stack().tolist()), columns = [\"CV_libraries :- Regular Basis\"])","974aaea0":"cvv[\"CV_libraries :- Regular Basis\"].value_counts()","3cf3b50e":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'CV_libraries :- Regular Basis',\n              data = cvv,\n              order = cvv[\"CV_libraries :- Regular Basis\"].value_counts().index)\n\nax.set_xlabel(\" Preferred CV_libraries :- Regular Basis \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","c6c549ee":"nlp = data_[[\"Q19_Part_1\", \"Q19_Part_2\", \"Q19_Part_3\", \"Q19_Part_4\", \"Q19_Part_5\", \"Q19_OTHER\"]]\n\nnl = pd.DataFrame(zip(nlp.stack().tolist()), columns = [\"NLP_Libraries :- Regular Basis\"])","e88f5f32":"nl[\"NLP_Libraries :- Regular Basis\"].value_counts()","6a2bfab4":"sns.set(style='darkgrid')\nax = sns.countplot(x = 'NLP_Libraries :- Regular Basis',\n              data = nl,\n              order = nl[\"NLP_Libraries :- Regular Basis\"].value_counts().index)\n\nax.set_xlabel(\" Preferred NLP_Libraries :- Regular Basis \")\nax.set_ylabel(\" Count of People \")\nplt.xticks(rotation=85)\nplt.show()","8edd779a":"data_[\"Q20\"].value_counts()","7cdbb03b":"ind = pd.DataFrame(data_[\"Q20\"].value_counts()).reset_index()\nind.rename(columns = {'index' : 'Industry', 'Q20' : 'Count of Users'}, inplace=True)\n\n\nfig = px.pie(ind, values ='Count of Users', names='Industry', \n             title='Recent employer : - Industry')\nfig.show()","18853964":"data_[\"Q21\"].value_counts()","8d59cbb3":"sz = pd.DataFrame(data_[\"Q21\"].value_counts()).reset_index()\nsz.rename(columns = {'index' : 'Company Size', 'Q21' : 'Count of Users'}, inplace=True)\n\n\nfig = px.pie(sz, values ='Count of Users', names='Company Size', \n             title='Company Size')\nfig.show()","1068c1d1":"# What type of computing platform do you use most often for your data science projects?","38a41756":"### world wide most popular -- Master's Degree","86606c8c":"# 30 % of the population have 1-3 years of programming experience. ","391e48d5":"\n# Information of Data Scientist -- According to Participation in this Survey -- ","f3624095":"# What is the size of the company where you are employed?","1af27e3c":"#### NVIDIA GPUs and Google cloud TPUs are most preferable hardware.  ","89244e39":"#### Python is the most recommended language","73a93296":"### India is top most and the age-group is (18 - 21)","5849c91d":"# What is your gender?","467c2eec":"# What is the highest level of formal education that you have attained or plan to attain within the next 2 years?","8f4749cf":"#### Out of the top 35 countries, India is the top most country that is contributing  31.6% in this survey.","52d438e7":"# Which of the following machine learning frameworks do you use on a regular basis?","01dc6ba2":"#### There are fewer people who are using TPUs. Nowadays people are interested in TPUs so, these numbers will increase in the future.","37622cd1":"## Read Data --- ","5b6ce022":"# Which types of specialized hardware do you use on a regular basis?","098764ae":"# Most of the Data Scientists (47%) have done a Master's Degree.","8368d49b":"# Approximately how many times have you used a TPU (tensor processing unit)?","00167c3e":"### Laptop is the most preferred computing platform ","be39c84f":"# Which of the following hosted notebook products do you use on a regular basis? ","697a8c64":"# For how many years have you been writing code and\/or programming?","6df7a052":"### 42% women are from age group (18-21). It means the popularity of Kaggle and Data Science is increasing in the Indian women's community. ","2e28c85b":"#### 50% of the people are using Python and SQL on a regular basis. And python is the most popular language among them. ","a62af580":"# Education -- India","36052e73":"# What data visualization libraries or tools do you use on a regular basis? (Select all that apply)","6e61bdc8":"# Select the title most similar to your current role (or most recent title if retired):","04c7920e":"# Gender wise -- Education -- ","c97d0b48":"# Which categories of computer vision methods do you use on a regular basis?","4c0f868c":"# In which country do you currently reside?","d6852f0a":"# In what industry is your current employer\/contract (or your most recent employer if retired)?","1e78715c":"# Which of the following integrated development environments (IDE's) do you use on a regular basis?","3925e890":"#### 82% of men is Data Scientist, and 16% of women is Data Scientist. ","76dfc63e":"#### Most popular education in India -- Bachelor's Degree","d3cbf8e0":"# For how many years have you used machine learning methods?","c30376f8":"# What programming language would you recommend an aspiring data scientist to learn first?","93621835":"# Which of the following ML algorithms do you use on a regular basis? ","c96a0804":"## Gender Distribution in India - - ","03aeaa29":"# Which of the following natural language processing (NLP) methods do you use on a regular basis?","86ba507f":"#### For visualization purpose, people are more interested in Matplotlib and seaborn. These libraries are easy to use, that's why quite popular in the Data Scientist community.","54e3f950":"### 22% women are from age group (18-21). It means the popularity of Kaggle and Data Science is increasing in the women's community.","0b0ed5c6":"## Distribution of people Age in India Location - - ","a6bd29d0":"# Top 10 Kaggler woman's  Age-Group Country wise - ","b18a8bd2":"####  World wide the distribution of age is 79.3 : 18.8, 79.3 % are mens and 18.8 % are womens. The ratio of womes are quite less here as compare to mens. ","849e8371":"#### The ratio of men and women in India is - 76:22. This is also quite less but as compared to worldwide it increases ~4%. ","460a1e11":"# ~25% of the Data Scientist comes from the Age Group of (25-28), and ~17% comes from the Age Group of (30-34). ","f52f1379":"# World wide woman Age Distribution ","687344c2":"# What is your age (# years)? ","b94761a7":"#### Gender wise Data Scientist -- ","b3dbb1ee":"#### Colab and kaggle notebooks are most preferred. ","a19ad0f3":"# Indian kaggler Women in Age distribution. ","ba04b0d7":"# What programming languages do you use on a regular basis? (Select all that apply)","cd7919d2":"# Gender wise --- Indian Education ","76e54ad8":"#### Jupyter notebook and VS code are the most preferred IDEs"}}