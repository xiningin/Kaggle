{"cell_type":{"aa9629bc":"code","b8b1305d":"code","15de1a1f":"code","d8a2bbb0":"code","bc13d5fe":"code","e185a9e4":"code","b5000805":"code","db790b9e":"code","edb55580":"code","e7fff7bd":"code","fe5bcb44":"code","4bf3cab3":"code","05ff2058":"code","99939329":"code","c31e308c":"code","839c43e9":"code","32240925":"code","00767406":"code","3162d692":"code","eb6f43f8":"code","f5ab7bfb":"code","8ec0be0a":"code","1a3384b2":"code","9e83cb8e":"code","be09efd0":"code","b5c2b72f":"code","6539ce8c":"code","fbea2571":"code","d0cafe43":"code","52f7cfe6":"code","084348fa":"code","0adfc4f5":"code","c60ae1a4":"code","f7a9081a":"code","e1df67b5":"code","60058671":"markdown","98387905":"markdown","0332d889":"markdown","3e1d65c4":"markdown","34c2315a":"markdown","a3c7f1a6":"markdown","b87e1bf8":"markdown","d317895c":"markdown","3832aae5":"markdown","07423e20":"markdown","26902010":"markdown","434e3c8b":"markdown","fe5a5127":"markdown","64b3236f":"markdown","d4b6e088":"markdown","b9365d82":"markdown","963e3b77":"markdown","ab881ca4":"markdown","f181e1b2":"markdown","efc04b47":"markdown","0743221c":"markdown","67ed20eb":"markdown","9883a946":"markdown","4dbcc548":"markdown","97880641":"markdown","d89ad537":"markdown","65bdc767":"markdown","f54e4dd4":"markdown","0352944a":"markdown","62a2c8cf":"markdown"},"source":{"aa9629bc":"import warnings\nwarnings.simplefilter('ignore')\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport gc\nimport multiprocessing\n%matplotlib inline\nimport matplotlib.pyplot as plt\npd.set_option('display.max_columns', 83)\npd.set_option('display.max_rows', 20)\nfor package in [np, pd, sns]:\n    print(package.__name__, 'version:', package.__version__)\nimport os\nprint(os.listdir(\"..\/input\"))","b8b1305d":"dtypes = {\n    'OsBuildLab':                                           'category',\n    'Processor':                                            'category',\n    'OsPlatformSubRelease':                                 'category',\n    'Census_OSArchitecture':                                'category',\n    'Census_OSBranch':                                      'category',\n    'Census_OSBuildNumber':                                 'int16',\n    'Census_OSBuildRevision':                               'int32',\n    'OsBuild':                                              'int16',\n    'HasDetections':                                        'int8'\n}","15de1a1f":"def load_dataframe(dataset):\n    usecols = dtypes.keys()\n    if dataset == 'test':\n        usecols = [col for col in dtypes.keys() if col != 'HasDetections']\n    df = pd.read_csv(f'..\/input\/{dataset}.csv', dtype=dtypes, usecols=usecols)\n    return df","d8a2bbb0":"%%time\nwith multiprocessing.Pool() as pool: \n    train, test = pool.map(load_dataframe, [\"train\", \"test\"])","bc13d5fe":"df = pd.concat([train.drop('HasDetections', axis=1), test])","e185a9e4":"df['OsBuildLab'].value_counts().head()","b5000805":"df['OsBuildReleaseYear'] = df['OsBuildLab'].str.slice(start=-11, stop=-9)\ntrain['OsBuildReleaseYear'] = train['OsBuildLab'].str.slice(start=-11, stop=-9)\ntest['OsBuildReleaseYear'] = test['OsBuildLab'].str.slice(start=-11, stop=-9)","db790b9e":"df['OsBuildReleaseYear'].value_counts(dropna=False).plot(kind='bar', figsize=(12,6), rot=0);","edb55580":"train['OsBuildReleaseYear'].value_counts(dropna=False).plot(kind='bar', figsize=(12,6), rot=0);","e7fff7bd":"test['OsBuildReleaseYear'].value_counts(dropna=False).plot(kind='bar', figsize=(12,6), rot=0);","fe5bcb44":"plt.subplots(figsize=(14,6))\nsns.countplot(x='OsBuildReleaseYear', hue='HasDetections', data=train);","4bf3cab3":"df['OsBuildReleaseYearMonth'] = df['OsBuildLab'].str.slice(start=-11, stop=-7).astype('float16')\ntrain['OsBuildReleaseYearMonth'] = train['OsBuildLab'].str.slice(start=-11, stop=-7).astype('float16')\ntest['OsBuildReleaseYearMonth'] = test['OsBuildLab'].str.slice(start=-11, stop=-7).astype('float16')","05ff2058":"df['OsBuildReleaseYearMonth'].value_counts(dropna=False).head(10).plot(kind='bar', rot=0, figsize=(12,6));","99939329":"train['OsBuildReleaseYearMonth'].value_counts(dropna=False).head(10).plot(kind='bar', rot=0, figsize=(12,6));","c31e308c":"test['OsBuildReleaseYearMonth'].value_counts(dropna=False).head(10).plot(kind='bar', rot=0, figsize=(12,6));","839c43e9":"plt.subplots(figsize=(14,6))\nsns.countplot(x='OsBuildReleaseYearMonth', hue='HasDetections', data=train[train['OsBuildReleaseYearMonth'] >= 1800]);","32240925":"plt.subplots(figsize=(14,6))\nsns.countplot(x='OsBuildReleaseYearMonth', hue='HasDetections', data=train[(train['OsBuildReleaseYearMonth'] < 1800) & (train['OsBuildReleaseYearMonth'] >= 1700)]);","00767406":"plt.subplots(figsize=(14,6))\nsns.countplot(x='OsBuildReleaseYearMonth', hue='HasDetections', data=train[(train['OsBuildReleaseYearMonth'] < 1700) & (train['OsBuildReleaseYearMonth'] >= 1600)]);","3162d692":"del df\ndel test\ndel train['OsBuildReleaseYear'], train['OsBuildReleaseYearMonth']\ngc.collect();","eb6f43f8":"train = pd.concat([train, train['OsBuildLab'].str.replace('*', '.').str.split('.', expand=True)], axis=1)","f5ab7bfb":"train[0] = train[0].fillna(-1).astype('int16')\ntrain[1] = train[1].fillna(-1).astype('int16')\ntrain.head()","8ec0be0a":"sns.heatmap(train.corr(), cmap=\"YlGnBu\");","1a3384b2":"print(train[(train['Census_OSBuildNumber'] != train['OsBuild']) | (train['Census_OSBuildNumber'] != train[0]) | (train['OsBuild'] != train[0])][[0, 'OsBuild', 'Census_OSBuildNumber']].shape[0], 'differences')\ntrain[(train['Census_OSBuildNumber'] != train['OsBuild']) | (train['Census_OSBuildNumber'] != train[0]) | (train['OsBuild'] != train[0])][[0, 'OsBuild', 'Census_OSBuildNumber']].head()","9e83cb8e":"train[['OsBuild', 'Census_OSBuildNumber', 0]].corr()","be09efd0":"train['Processor'].value_counts(dropna=False)","b5c2b72f":"train['Census_OSArchitecture'].value_counts(dropna=False)","6539ce8c":"train[2].value_counts(dropna=False)","fbea2571":"fig, axes = plt.subplots(nrows=3, ncols=1, figsize=(8,12))\nsns.countplot(x='Processor', hue='HasDetections', data=train, ax=axes[0], order=['x64', 'arm64', 'x86']);\nsns.countplot(x='Census_OSArchitecture', hue='HasDetections', data=train, ax=axes[1], order=['amd64', 'arm64', 'x86']);\nsns.countplot(x=2, hue='HasDetections', data=train, ax=axes[2], order=['amd64fre', 'arm64fre', 'x86fre']);","d0cafe43":"train[['OsPlatformSubRelease', 'Census_OSBranch', 3]].head(10)","52f7cfe6":"train['OsPlatformSubRelease'].value_counts(dropna=False)","084348fa":"train['Census_OSBranch'].value_counts(dropna=False).head(10)","0adfc4f5":"train[3].value_counts(dropna=False).head(10)","c60ae1a4":"train.loc[train['OsPlatformSubRelease'] == 'rs3', 'HasDetections'].value_counts(True).plot(kind='bar', rot=0, color=['green', 'orange']).set_xlabel('rs3', fontsize=18);","f7a9081a":"fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(14,5))\ntrain.loc[train['Census_OSBranch'] == 'rs3_release', 'HasDetections'].value_counts(True).plot(kind='bar', rot=0, color=['green', 'orange'], ax=axes[0]).set_xlabel('rs3_release', fontsize=18);\ntrain.loc[train['Census_OSBranch'] == 'rs3_release_svc_escrow', 'HasDetections'].value_counts(True).plot(kind='bar', rot=0, color=['orange', 'green'], ax=axes[1]).set_xlabel('rs3_release_svc_escrow', fontsize=18);\nplt.gca().invert_xaxis();","e1df67b5":"fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(14,5))\ntrain.loc[train[3] == 'rs3_release', 'HasDetections'].value_counts(True).plot(kind='bar', rot=0, color=['green', 'orange'], ax=axes[0]).set_xlabel('rs3_release', fontsize=18);\ntrain.loc[train[3] == 'rs3_release_svc_escrow', 'HasDetections'].value_counts(True).plot(kind='bar', rot=0, color=['orange', 'green'], ax=axes[1]).set_xlabel('rs3_release_svc_escrow', fontsize=18);\nplt.gca().invert_xaxis();","60058671":"Ok, so builds of 2018 (especially of april 2018) have biger detection rate than build of 2017.","98387905":"So release3 (rs3) has almost the same detection rate distibution. But lets see if its (rs3) division into 2 specific subreleases do the same.","0332d889":"<a id=\"10\"><\/a>\n### Year 2017","3e1d65c4":"<a id=\"5\"><\/a>\n## Distribution in training set","34c2315a":"<a id=\"15\"><\/a>\n### [3] correlation with 'OsPlatformSubRelease' and 'Census_OSBranch'","a3c7f1a6":"<a id=\"4\"><\/a>\n## Distribution in the combined train and test set","b87e1bf8":"Next in the line is Processor feature and Census_OSArchitecture featrure. It is easy to see that feature 2, extracted from OsBuildLab is the same as those two features, just listed differently.","d317895c":"<a id=\"1\"><\/a> <br>\n# Loading data","3832aae5":"Dataset has 445510 differences amongst OsBuild, Census_OsBuildNumber and a [0] feature extraceted from OsBuildLab. And most of this differences comes from Census_OSBuildNumber feature.","07423e20":"<a id=\"17\"><\/a>\n#### Plotting rs3_release and rs3_release_svc_escrow values correlation with HasDetections from Census_OSBranch","26902010":"Some of the OsBuildLab feature values contains a typo - * (asterisk) instead of . (dot), so lets fix this and then split the values by . (dot) and save it as a separate features.","434e3c8b":"Inspired by [this topic](https:\/\/www.kaggle.com\/c\/microsoft-malware-prediction\/discussion\/75468)\n\nI am constantly updating this kernel.\n\n\n\n**Content:**\n\n[Loading data](#1)\n\n[Extracting date features from OsBuildLab](#2)\n* [Creating a new feature: OsBuildReleaseYear](#3)\n* [Distribution in the combined train and test set](#4)\n* [Distribution in training set](#5)\n* [Distribution in test set](#6)\n* [Lets go a littler deeper and add month](#7)\n* [Distribution by months](#8)\n    * [Year 2018](#9)\n    * [Year 2017](#10)\n    * [Year 2016](#11) \n  \n[Correlation with other features](#12)\n* [[0] correlation with 'OsBuild' and 'Census_OSBuildNumber'](#13)\n* [[2] correlation with 'Processor' and 'Census_OSArchitecture'](#14)\n* [[3] correlation with 'OsPlatformSubRelease' and 'Census_OSBranch'](#15)\n     * [Plotting rs3 values correlation with HasDetections from OsPlatformSubRelease](#16)\n     * [Plotting rs3_release and rs3_release_svc_escrow values correlation with HasDetections from Census_OSBranch](#17)\n     * [Plotting rs3_release and rs3_release_svc_escrow values correlation with HasDetections from [2] - feature exctracted from OsBuildLab](#18)","fe5a5127":"<a id=\"2\"><\/a>\n# Extracting date features from OsBuildLab\n<a id=\"3\"><\/a>\n## Creating a new feature: OsBuildReleaseYear","64b3236f":"Alright, we already can see by the first 5 rows that some data is exactly the same for OsBuildLab splitted by dot and some other features, for example OsBuild (even the features names are giving us a hint). But lets see all the values just to make sure that this is true.","d4b6e088":"<a id=\"13\"><\/a>\n### [0] correlation with 'OsBuild' and 'Census_OSBuildNumber'","b9365d82":"<a id=\"16\"><\/a>\n#### Plotting rs3 values correlation with HasDetections from OsPlatformSubRelease","963e3b77":"<a id=\"12\"><\/a>\n# Correlation with other features\n\nNow lets take a good look at what other information this feature contains because it consist not only of release date and time value.\n\nReleasing some memory first. We gonna need it.","ab881ca4":"<a id=\"14\"><\/a>\n### [2] correlation with 'Processor' and 'Census_OSArchitecture'","f181e1b2":"<a id=\"11\"><\/a>\n### Year 2016","efc04b47":"These 3 features are highly correlated it is it pretty safe to say that either [0] or OsBuild might be dropped. But since there is a slight difference between Census_OSBuildNumber and other 2 features you should decide which one of them to keep.","0743221c":"<a id=\"8\"><\/a>\n## Distribution by months\n<a id=\"9\"><\/a>\n### Year 2018","67ed20eb":"It is easy to see that this 3 features are exactly the same. So drop 2 of them and leave only 1.","9883a946":"<a id=\"7\"><\/a>\n## Lets go a littler deeper and add month","4dbcc548":"<a id=\"18\"><\/a>\n#### Plotting rs3_release and rs3_release_svc_escrow values correlation with HasDetections from [2] - feature exctracted from OsBuildLab","97880641":"Distribution is still almost identical. Now lets see year and month of build correlation with target value","d89ad537":"So distribution by years is almost identical amongst train and test sets.\n\nLets see the correlation of BuildYear with target value.","65bdc767":"Alright, the distibution differs on those sub-releases. And one more time - there are 3 features representing almost the same thing but this time values are slightly different (see value_counts output for each feature). Which one to leave and which to remove is up to you.","f54e4dd4":"As expected - the information is almost the same but it has slight difference - 'OsPlatformSubRelease' contains more generalized information (e.g. rs3), whereas feature 3, exctacted from OsBuildLab and 'Census_OSBranch' has information presented in more specified way (e.g. rs3 splitted in rs3_release_svc_escrow and rs3_release).\n\nLets plot those values correlations with target value and see the results.","0352944a":"Alring, so we see that OsBuildLab contains the exact information that is already presented in the data set. Lets see the third one.","62a2c8cf":"<a id=\"6\"><\/a>\n## Distribution in test set"}}