{"cell_type":{"c759ec47":"code","62aed044":"code","e32a859e":"code","72ce10eb":"code","a3b236ea":"code","9b0def30":"code","7db312ee":"code","5a68e0a2":"code","a3da1d0a":"code","feacb2f8":"code","ae8a8090":"code","75b5f402":"code","eec25895":"markdown","c0566a02":"markdown","3a60dd95":"markdown","b8ab9f4a":"markdown","a2ec3e13":"markdown","7cbbf08a":"markdown","b911b2cf":"markdown","ab05d3ac":"markdown","f2b94212":"markdown"},"source":{"c759ec47":"import numpy as np \nimport pandas as pd \n\nfrom sklearn import ensemble\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_validate,GridSearchCV\nimport lightgbm as lgbm","62aed044":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","e32a859e":"#1. delete unnecessary columns\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\n#2.find null data and fill new data \ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\n#3.one hot encoding \nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","72ce10eb":"train.info()","a3b236ea":"y = train['Survived']\nX = train.drop(['Survived'], axis=1)\nX_test = test","9b0def30":"from sklearn.model_selection import train_test_split\n\nX_train, X_val, y_train, y_val = train_test_split(  X, y, test_size=0.25, random_state=42)","7db312ee":"params={\"n_estimators\":np.arange(50,300,50),\n        \"max_depth\":np.arange(1,10,1),\n        \"learning_rate\":[0.1,0.01,0.001,0.0001]\n       }","5a68e0a2":"xgb_est=lgbm.LGBMClassifier( \n                            random_state=42, \n                              objective='binary',\n                              eval_metric=\"auc\"\n               \n        )\n\ngr_xgb_est=GridSearchCV( xgb_est,param_grid=params,cv=5,n_jobs=-1,verbose=10)\n\ngr_xgb_est.fit(X_train,y_train)","a3da1d0a":"gr_xgb_est.best_estimator_","feacb2f8":"y_pred = gr_xgb_est.best_estimator_.predict(X_val)\nprint(accuracy_score(y_val, y_pred))","ae8a8090":"pred_test = gr_xgb_est.predict(X_test)","75b5f402":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission['Survived'] = (pred_test > 0.5).astype(int)\nsubmission.to_csv('sub.csv', index=False)\nsubmission.head()","eec25895":"# GridSearch Ensembel ","c0566a02":"# import libraries","3a60dd95":"# predict test data using model","b8ab9f4a":"# submit result","a2ec3e13":"# load data ","7cbbf08a":"# preprocessing","b911b2cf":"# evaluate model","ab05d3ac":"# split data ( input data \/ label data )","f2b94212":"# split data (train data \/ validation data)"}}