{"cell_type":{"c61ecb54":"code","ceb707f9":"code","d67da400":"code","b292bde0":"code","9e49be86":"code","3373c241":"code","71aef116":"code","bd6681a9":"markdown","9a22ed06":"markdown","4ab1ac1d":"markdown","13ba9c8f":"markdown","c353f36f":"markdown","920831e6":"markdown","2bb782f2":"markdown"},"source":{"c61ecb54":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ceb707f9":"train_df = pd.read_csv(\"\/kaggle\/input\/indian-population\/IndiaPopulation_2021.csv\")","d67da400":"train_df.head(10)","b292bde0":"train_df.describe()","9e49be86":"print(len(train_df))\nsummary = pd.DataFrame(train_df.dtypes)\nsummary[\"Null\"] = train_df.isnull().sum()\nsummary[\"first\"] = train_df.loc[0]\nsummary[\"second\"] = train_df.loc[1]\nsummary[\"third\"] = train_df.loc[2]\nsummary[\"unique\"] = train_df.nunique()\nsummary","3373c241":"fig, ax = plt.subplots(3,1, figsize = (20,20))\nfor idx, cols in enumerate(train_df.columns.to_list()):\n    sns.histplot(x = cols, data = train_df, ax = ax[idx] )","71aef116":"fig, ax = plt.subplots(1,3, figsize = (20,5))\nsns.lineplot(x='Year', y='GrowthRate', data = train_df, ax = ax[0], color = \"purple\") \nsns.barplot(x='Year', y='GrowthRate', data = train_df, color='red', ax = ax[1]) \nsns.barplot(x='Year', y='Population', data = train_df, color='green', ax = ax[2])","bd6681a9":"# Summarising data","9a22ed06":"From here we could see that the growth rate has increased and then has been decresing. This means that there has been more awareness lately. Good to know that population growth rate is declining.We could also that the population has been increasing since the start. But we can now see that the curve is not steep and started to be less steep which does make sense because the growth has started to decline. It will take too much time though for population to not as it is.","4ab1ac1d":"We can see that there are no null values and no datatype is object. ","13ba9c8f":"# Univariate Analysis","c353f36f":"We can apply simple model to predict the future population. We can use linear regression. Randomforest which works best in most of the cases could also be used but even linear regression should work well.","920831e6":"# Multivariate Analysis","2bb782f2":"# Reading data"}}