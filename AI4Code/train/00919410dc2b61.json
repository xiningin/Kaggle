{"cell_type":{"783dd0a6":"code","22be0b8d":"code","25ee0fa2":"code","27eb5a58":"code","d6a25f23":"code","1904e329":"code","3ec7f547":"code","d49aa97a":"code","e240576a":"markdown","4038aee3":"markdown","b828c4a6":"markdown"},"source":{"783dd0a6":"import numpy as np\nimport pandas as pd","22be0b8d":"meta_data = pd.read_csv('..\/input\/training_set_metadata.csv')\ntest_meta_data = pd.read_csv('..\/input\/test_set_metadata.csv')","25ee0fa2":"classes = np.unique(meta_data['target'])\nclasses_all = np.hstack([classes, [99]])\n\n# create a dictionary {class : index} to map class number with the index \n# (index will be used for submission columns like 0, 1, 2 ... 14)\ntarget_map = {j:i for i, j in enumerate(classes_all)}\n\n# create 'target_id' column to map with 'target' classes\ntarget_ids = [target_map[i] for i in meta_data['target']]\nmeta_data['target_id'] = target_ids","27eb5a58":"# Build probability arrays for both the galactic and extragalactic groups\ngalactic_cut = meta_data['hostgal_specz'] == 0\ngalactic_data = meta_data[galactic_cut]\nextragalactic_data = meta_data[~galactic_cut]\n\ngalactic_classes = np.unique(galactic_data['target_id'])\nextragalactic_classes = np.unique(extragalactic_data['target_id'])\n\n# add class_99 (index = 14)\ngalactic_classes = np.append(galactic_classes, 14)\nextragalactic_classes = np.append(extragalactic_classes, 14)","d6a25f23":"# Weighted probabilities for Milky Way galaxy\ngalactic_probabilities = np.zeros(15)\nfor x in galactic_classes:\n    if(x == 14):\n        galactic_probabilities[x] = 0.014845745\n        continue\n    if(x == 5):\n        galactic_probabilities[x] = 0.196867058\n        continue\n    galactic_probabilities[x] = 0.197071799\n\n","1904e329":"# Weighted probabilities for Extra Galaxies\nextragalactic_probabilities = np.zeros(15)\nfor x in extragalactic_classes:\n    if(x == 14):\n        extragalactic_probabilities[x] = 0.148880461\n        continue\n    if(x == 7):\n        extragalactic_probabilities[x] = 0.155069005\n        continue\n    if(x == 1):\n        extragalactic_probabilities[x] = 0.154666479\n        continue\n    extragalactic_probabilities[x] = 0.077340579","3ec7f547":"# Apply this prediction to test_meta_data table\nimport tqdm\ndef do_prediction(table):\n    probs = []\n    for index, row in tqdm.tqdm(table.iterrows(), total=len(table)):\n        if row['hostgal_photoz'] == 0:\n            prob = galactic_probabilities\n        else:\n            prob = extragalactic_probabilities\n        probs.append(prob)\n    return np.array(probs)\n\ntest_pred = do_prediction(test_meta_data)","d49aa97a":"test_df = pd.DataFrame(index=test_meta_data['object_id'], data=test_pred, columns=['class_%d' % i for i in classes_all])\ntest_df.to_csv('.\/naive_benchmark_weighted.csv')","e240576a":"***","4038aee3":"# Weights\n\nWeights are based on this discussion: https:\/\/www.kaggle.com\/c\/PLAsTiCC-2018\/discussion\/67194 , but, apparently, we have different weights for Galactic and Extragalactic groups for the class_99!\n\nIt is also good to check this kernel for more precise calculation of weights: https:\/\/www.kaggle.com\/ganfear\/calculate-exact-class-weights","b828c4a6":"***"}}