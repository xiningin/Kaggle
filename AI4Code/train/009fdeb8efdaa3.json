{"cell_type":{"ff7f1c9c":"code","d3b8944e":"code","8aec4cd6":"code","7c499d1d":"code","483a527f":"code","e5d75d9c":"code","22dd9a1d":"code","8c258ecb":"code","9492539a":"code","f2635326":"code","cc44814a":"code","95939f86":"code","294abe52":"code","a189790d":"code","bb945137":"code","3b8c675c":"code","ddbc19b8":"code","5a3b6be9":"code","567591bf":"code","5d8c75f9":"code","acb9947f":"code","295a5280":"code","24b18117":"code","80d42599":"code","e73b6350":"markdown","6c0bcbe6":"markdown"},"source":{"ff7f1c9c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf=pd.ExcelFile('..\/input\/quiz1-1.xls')  #sheet_names metodunu kullanmak icin ilk okuma ExcelFile metodu ile yapildi\n\nsheet_df = []                       #dosya icindeki sheetlerin isimlerinin tutuldugu liste\nsheet_df_y = []                     #data frame haline gelecek sheet_df listesindeki isimlerin tekrar kullanilabilmesi icin\ntotal_sheetname_df = []             #sheet_df icindeki elemanlarin dataframe hallerinin guncellenmis hali\n\n[sheet_df.append(i) for i in df.sheet_names]    #dosyadaki sheet isimlerini bulur listeye kaydeder\n[sheet_df_y.append(i) for i in sheet_df]        #sheet isimlerini yedekler\n\nfor i in range(len(sheet_df)):                                              #sheetleri data frame haline guncelleyerek degistirir\n    sheet_df[i] = pd.read_excel(\"..\/input\/quiz1-1.xls\", sheet_name=str(sheet_df[i]))\n    sheet_df[i]['sinif'] = [sheet_df_y[i] for j in range(len(sheet_df[i]))]  #sheetler data frame haline gelirken sinif adli bir sutunda ekleniyor\n    total_sheetname_df.append(sheet_df[i])\n\nall_df=pd.concat([i for i in total_sheetname_df],sort=False)               #tum sheetleri tek dataframe haline getirir                            \nall_df.index=np.arange(1,len(all_df)+1)             #all_df frame sabit index atanmasi yapildi\nall_df.columns=['isim','dogru','yanlis','bos','sinif']      #dataframe sutun isimleri degistirildi\nall_df.replace(to_replace='girmedi',value=0,inplace=True)   #'girmedi' kolonlari 0 ile degistirildi\nall_df=all_df.fillna(0)                                     #'nan' kolonlari 0 ile degistirildi\nprint(all_df)","d3b8944e":"xls_py_mind = pd.ExcelFile('\/kaggle\/input\/py_mind.xls')\nxls_py_science = pd.ExcelFile('\/kaggle\/input\/py_science.xls')\nxls_py_sense = pd.ExcelFile('\/kaggle\/input\/py_sense.xls')\nxls_py_opinion = pd.ExcelFile('\/kaggle\/input\/py_opinion.xls')","8aec4cd6":"outerIndex_sinif_ismi=[\"py_mind\", \"py_mind\", \"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\\\n                       \"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\\\n                       \"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\\\n                       \"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"cevap_A.\"]","7c499d1d":"sheet_to_df_map = {}\nfor sheet_name in xls_py_mind.sheet_names:\n    sheet_to_df_map[sheet_name] = xls_py_mind.parse(sheet_name)\nfor sheet_name in xls_py_opinion.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_opinion.parse(sheet_name)\nfor sheet_name in xls_py_science.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_science.parse(sheet_name)\nfor sheet_name in xls_py_sense.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_sense.parse(sheet_name)\ndegerler=list(sheet_to_df_map.values())","483a527f":"InnerIndex_isimler=list(sheet_to_df_map.keys())\nInnerIndex_isimler.append(\"Cevap A.\")\nInnerIndex_isimler.remove(\"Blad9\")\nInnerIndex_isimler.remove(\"Blad11\")\nhierarch1=list(zip(outerIndex_sinif_ismi,InnerIndex_isimler))\nhierarch1=pd.MultiIndex.from_tuples(hierarch1)","e5d75d9c":"sinavsonuclari=[]\nkolonlar=[]\nfor i in range(len(degerler)):\n    kolonlar.append(degerler[i].columns)\ncevap_anahtari=[]\nfor i in range(len(degerler)):\n        if len(kolonlar[i])==3:\n            sinavsonuclari.append( list(degerler[i][kolonlar[0][2]])[:20])\n            cevap_anahtari.append( list(degerler[i][kolonlar[0][1]])[:20])\n            print(list(degerler[i][kolonlar[0][2]])[:20])\n        elif len(kolonlar[i])==2 :\n            sinavsonuclari.append( list(degerler[i][kolonlar[i][1]])[:20])\nsinavsonuclari.append(cevap_anahtari[0])\ndf1=pd.DataFrame(sinavsonuclari,hierarch1,columns=[i for i in range(20)])","22dd9a1d":"correct=[]\nblank=[]\nwrong=[]\nfor i in  range(len(degerler)-1):\n    countc=0\n    countb=0\n    countw=0\n    for j in range(20):\n        if str(df1.iloc[i,j])==str(\"nan\"):\n            countb +=1\n        elif df1.iloc[i,j]==df1.xs(\"cevap_A.\")[j][0]:\n            countc+=1\n        elif df1.iloc[i,j]!=df1.xs(\"cevap_A.\")[j][0]:\n            countw+=1\n    correct.append(countc)\n    blank.append(countb)\n    wrong.append(countw)\ndf1[\"True\"]=correct\ndf1[\"Wrong\"]=wrong\ndf1[\"Blank\"]=blank\n\nprint(df1)","8c258ecb":"df_quiz3=pd.read_excel(\"\/kaggle\/input\/quiz-3.xls\")\ndf_quiz3","9492539a":"df_uygulama=pd.read_excel(\"\/kaggle\/input\/uygulamali1.xls\")\ndf_uygulama","f2635326":"#last_df isimli son dataframe de tum sinavlarin dogru degerini veren sayisal verileri tutulacak\nlast_df=all_df[[\"isim\",\"dogru\"]]\nlast_df.columns=[\"isim\",\"quiz1\"]\nlast_df","cc44814a":"quiz2={}                                        #quiz 2 ye girenler quiz1 e girenlerin isim karsiliklari baz\nfor i in last_df[\"isim\"]:                       #alinarak sozluge atandi\n    for j in InnerIndex_isimler:\n        if j in i:\n            quiz2[i]=df1.xs(j,level=1)[\"True\"][0]\nliste=[]\nliste1=[]\nfor j in InnerIndex_isimler:                    #sinava girmemis olanlar tespit edilip quiz2 dicte sonuclari sifir\n    liste.append(j)                             #olacak sekilde atandi\nfor i in last_df[\"isim\"]:\n    liste1.append(i)\nfor i in list(set(liste1).difference(set(liste))):\n    quiz2[i] = 0\n\nlast_df[\"quiz2\"]=[j for i in last_df[\"isim\"] for k,j in quiz2.items() if i==k]\nlast_df","95939f86":"quiz3={}                                        #quiz 3 ye girenler quiz1 e girenlerin isim karsiliklari baz\nfor i in range(1,len(last_df[\"isim\"])+1):                       #alinarak sozluge atandi\n   for j in range(len(df_quiz3[\"name\"])):\n       if last_df.loc[i,\"isim\"]== df_quiz3.loc[j,\"name\"]:\n           quiz3[last_df.loc[i,\"isim\"]]=df_quiz3.loc[j,\"true\"]\nliste=[]\nliste1=[]\nfor j in df_quiz3[\"name\"]:                    #sinava girmemis olanlar tespit edilip quiz2 dicte sonuclari sifir\n   liste.append(j)                             #olacak sekilde atandi\nfor i in last_df[\"isim\"]:\n   liste1.append(i)\nfor i in list(set(liste1).difference(set(liste))):\n   quiz3[i] = 0\nlast_df[\"quiz3\"]=[j for i in last_df[\"isim\"] for k,j in quiz3.items() if i==k]\nlast_df","294abe52":"uygulamali={}                                        #uygulama sinavina girenler quiz1 e girenlerin isim karsiliklari baz\nfor i in range(1,len(last_df[\"isim\"])+1):                       #alinarak sozluge atandi\n    for j in range(len(df_uygulama[\"isim\"])):\n        if last_df.loc[i,\"isim\"]== df_uygulama.loc[j,\"isim\"]:\n            uygulamali[last_df.loc[i,\"isim\"]]=df_uygulama.loc[j,\"total\"]\nliste=[]\nliste1=[]\nfor j in df_uygulama[\"isim\"]:                    #sinava girmemis olanlar tespit edilip quiz2 dicte sonuclari sifir\n    liste.append(j)                             #olacak sekilde atandi\nfor i in last_df[\"isim\"]:\n    liste1.append(i)\nfor i in list(set(liste1).difference(set(liste))):\n    uygulamali[i] = 0\nlast_df[\"uygulamali\"]=[j for i in last_df[\"isim\"] for k,j in uygulamali.items() if i==k]\nlast_df\n","a189790d":"#siniflarin oldugu sutun ekleniyor\nlast_df[\"sinif\"]=all_df[\"sinif\"]\nlast_df","bb945137":"last_df['quiz1'] = last_df['quiz1'].astype('int64')\nlast_df['quiz2'] = last_df['quiz2'].astype('int64')\nlast_df['quiz3'] = last_df['quiz3'].astype('int64')\nlast_df['uygulamali'] = last_df['uygulamali'].astype('int64')","3b8c675c":"rate=[]\nfor i in range(41):\n    rate.append(100*((last_df.loc[i+1,\"quiz1\"]\/40)*0.25 +(last_df.loc[i+1,\"quiz2\"]\/20)*0.25+(last_df.loc[i+1,\"quiz3\"]\/40)*0.25+(last_df.loc[i+1,\"uygulamali\"]\/21)*0.25) )\nlast_df[\"succes_rate\"]=rate\n\nquiz_result_rate=[]\napplication_result_rate=[]\nfor i in range(41):\n    quiz_result_rate.append(100*((last_df.loc[i+1,\"quiz1\"]\/40)*0.33 +(last_df.loc[i+1,\"quiz2\"]\/20)*0.33+(last_df.loc[i+1,\"quiz3\"]\/40)*0.34 ))\nlast_df[\"quiz_succes_rate\"]=quiz_result_rate\n\nfor i in range(41):\n    application_result_rate.append((last_df.loc[i+1,\"uygulamali\"]\/21)*100 )\nlast_df[\"application_succes_rate\"]=application_result_rate","ddbc19b8":"\n\nsns.barplot(x=last_df.groupby('sinif')['succes_rate'].mean().index,y=last_df.groupby('sinif')['succes_rate'].mean().values)\nplt.title(\"total succes rate of classes\")\n\nplt.ylabel(\"Succes Rate\")\nplt.xlabel(\"Class Names\")\nplt.xticks(rotation=45)\nplt.show()","5a3b6be9":"py_sense_rate=last_df[last_df[\"sinif\"]==\"py_sense\"]\npy_opinion_rate=last_df[last_df[\"sinif\"]==\"py_opinion\"]\npy_science_rate=last_df[last_df[\"sinif\"]==\"py_science\"]\npy_mind_rate=last_df[last_df[\"sinif\"]==\"py_mind\"]\nplt.figure(figsize=(15,15))\n\nplt.subplot(4,4,1)\nplt.bar(py_sense_rate.isim,py_sense_rate.succes_rate,color=\"red\")\nplt.title(\"py sense student success rate\")\nplt.xticks(rotation=90)\n\n\nplt.subplot(4,4,2)\n\nplt.bar(py_opinion_rate.isim,py_opinion_rate.succes_rate,color=\"blue\")\nplt.xticks(rotation=90)\nplt.title(\"py opinion student success rate\")\n\n\nplt.subplot(4,4,3)\n\nplt.bar(py_science_rate.isim,py_science_rate.succes_rate,color=\"yellow\")\nplt.xticks(rotation=90)\nplt.title(\"py science student success rate\")\n\n\nplt.subplot(4,4,4)\n\nplt.bar(py_mind_rate.isim,py_mind_rate.succes_rate,color=\"green\")\nplt.xticks(rotation=90)\nplt.title(\"py mind student success rate\")\n\nplt.show()\n\n","567591bf":"plt.figure(figsize=(20,15))\nplt.subplot(4,4,1)\nplt.plot(py_sense_rate.isim,py_sense_rate.succes_rate,color=\"red\",label=\"py_sense\")\nplt.title(\"py sense student success rate\")\nplt.legend() # x ve ye koordinatlarini olusturuyo\nplt.xticks(rotation=30)\nplt.subplot(4,4,2)\nplt.plot(py_opinion_rate.isim,py_opinion_rate.succes_rate,color=\"blue\",label=\"py_opinion\")\nplt.title(\"py opinion student success rate\")\nplt.legend() # x ve ye koordinatlarini olusturuyo\nplt.xticks(rotation=30)\nplt.subplot(4,4,3)\n\nplt.plot(py_science_rate.isim,py_science_rate.succes_rate,color=\"yellow\",label=\"py_science\")\nplt.title(\"py science student success rate\")\nplt.legend() # x ve ye koordinatlarini olusturuyo\nplt.xticks(rotation=30)\nplt.subplot(4,4,4)\n\nplt.plot(py_mind_rate.isim,py_mind_rate.succes_rate,color=\"green\",label=\"py_mind\")\nplt.title(\"py mind student success rate\")\n\n\n\nplt.legend() # x ve ye koordinatlarini olusturuyo\nplt.xticks(rotation=30)\n\nplt.xlabel(\"names\")\nplt.ylabel(\"succes rate\")\nplt.show()\n\n","5d8c75f9":"color_dict = {'py_science':'green', 'py_mind':'red','py_sense':'blue', 'py_opinion':'orange'}\nplt.bar(last_df.groupby('sinif')['quiz_succes_rate'].mean().index,last_df.groupby('sinif')['quiz_succes_rate'].mean().values,color=[color_dict[r] for r in list(color_dict)])\nplt.title(\"total success rate of three test quiz\")\nplt.ylabel(\"quiz_result_rate\")\nplt.xlabel(\"Class Names\")\nplt.xticks(rotation=45)\nplt.show()\n\nplt.bar(last_df.groupby('sinif')['application_succes_rate'].mean().index,last_df.groupby('sinif')['application_succes_rate'].mean().values,color=[color_dict[r] for r in list(color_dict)])\nplt.title(\"total success rate of application quiz\")\n\nplt.ylabel(\"application result rate\")\nplt.xlabel(\"Class Names\")\nplt.xticks(rotation=45)\nplt.show()","acb9947f":"last_df[\"quiz1-Rate\"]=last_df[\"quiz1\"]\/40*100\nlast_df[\"quiz2-Rate\"]=last_df[\"quiz2\"]\/20*100\nlast_df[\"quiz3-Rate\"]=last_df[\"quiz3\"]\/40*100\nlast_df[\"Application-Rate\"]=last_df[\"uygulamali\"]\/21*100\nlast_df.head()","295a5280":"first_5 = last_df.sort_values(by=['succes_rate'], ascending=False)[0:5]\ngrades=first_5.loc[:,\"quiz1-Rate\":\"Application-Rate\"]\ngrades[\"isim\"]=first_5[\"isim\"]\ngrades.set_index (\"isim\",inplace=True)\ngrades = grades.transpose()\ngrades.columns=['Dilek_Koksal', 'Sehri_Gokcan', 'Ufuk_Doymaz', 'Ilhami',\n       'Hakan_Yildirim']\n","24b18117":"plt.figure(figsize=(8,8))\nplt.plot(grades.index,grades.Dilek_Koksal,color=\"red\")\nplt.plot(grades.index,grades.Sehri_Gokcan,color=\"yellow\")\nplt.plot(grades.index,grades.Ufuk_Doymaz,color=\"green\")\nplt.plot(grades.index,grades.Ilhami,color=\"blue\")\nplt.plot(grades.index,grades.Hakan_Yildirim,color=\"orange\")\nplt.title(\"Firs five students' success chart\")\nplt.legend() # x ve ye koordinatlarini olusturuyo\nplt.xticks(rotation=45)\nplt.show()","80d42599":"plt.figure(figsize=(10,10))\nplt.bar(last_df.sort_values(by=['succes_rate'], ascending=False).isim,last_df.sort_values(by=['succes_rate'], ascending=False).succes_rate,color=\"orange\")\nplt.title(\"Firs five students' success chart\")\nplt.xticks(rotation=90)\nplt.show()","e73b6350":"Finding best five studenst according to general success rate","6c0bcbe6":"Calculating exams' means for all students"}}