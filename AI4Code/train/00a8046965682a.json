{"cell_type":{"a7195e06":"code","20bc9e01":"code","80b2bd7b":"code","034076fd":"code","796fe564":"code","78f0a253":"code","c3eefd90":"code","7121f125":"code","90ab7ae0":"code","9fdb7ddc":"code","6cb28611":"code","475f0d71":"code","781a32e4":"code","73325377":"code","37fe0ed5":"code","0e91a793":"code","dc9d0a38":"code","f342bcaa":"code","ddfe7b1d":"code","e6725d31":"code","2507fe2b":"code","672df199":"code","700aa97b":"markdown","7b24cc54":"markdown","7916346c":"markdown","6aca1ada":"markdown","e3a2f461":"markdown","4b40466a":"markdown","cf692363":"markdown","b82eb0f6":"markdown","4244dba7":"markdown","a28d209a":"markdown"},"source":{"a7195e06":"#importing required library's\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Importing data\ndf=pd.read_csv(\"..\/input\/recipedata\/recipeData1.csv\",encoding='latin-1')","20bc9e01":"print(\"No.of Row's and Columns of data \\n *********************** \\n  \",df.shape,\n      \"\\n\\n Top 5 records of the data \\n ************************\",df.head(5),\n      \"\\n\\n ************************** \\n \\n Bottom 5 records of the data \\n\\n ******************\",df.tail(5))","80b2bd7b":"#sorting in ascending order\ndf.sort_values(by='Style',ascending=True).tail(5)","034076fd":"#sorting in descending order\ndf.sort_values(by='Style',ascending=False).tail(5)","796fe564":"#Verifying missing values in top 5 records\ndf.head(5)","78f0a253":"#checking missing values with isnull()\nprint(\"************checking missing values with isnull()*************** \\n \\n\")\ndf.isnull().head(5)","c3eefd90":"\n#checking missing values with isna()\nprint(\"************ checking missing values with isna() ******************* \\n \\n\")\ndf.isna().head(5)\n","7121f125":"#checking missing values with notna()\nprint(\"************ checking missing values with notna() ******************* \\n \\n\")\ndf.notna().head(5)\n","90ab7ae0":"#using sum function to get totals\ndf.isnull().sum()","9fdb7ddc":"#calculate the percentage of missing values \ndf_missing=pd.DataFrame(df.isnull().sum(),columns=[\"Missing_Data\"])\ndf_missing['Total_Records']=df.shape[0]\ndf_missing['Percentage']=round(((df_missing.Missing_Data\/df_missing.Total_Records)*100),1)\ndf_missing","6cb28611":"# Scenario-1: Replace missing values with 0(constant value)\n# Missing value columns: ['BoilGravity','MashThickness','PitchRate','PrimaryTemp','PrimingMethod','PrimingAmount','UserId','Style']\ndf_miss=df[['BoilGravity','MashThickness','PitchRate','PrimaryTemp','PrimingMethod','PrimingAmount','UserId','Style']]\n\n#checking required columns exist or not in dataframe\ndf_miss.columns","475f0d71":"#verifying missing values\ndf_miss.head()","781a32e4":"# Replacing missing values with 0\ndf_miss.fillna(0).head(10)","73325377":"# Replacing missing values with 0 only for top 5 rows\ndf_miss.fillna(0,limit=).head(10)","37fe0ed5":"# Scenario-2: Replace missing values with preceding value\n# Missing value columns: ['BoilGravity','MashThickness','PitchRate','PrimaryTemp','PrimingMethod','PrimingAmount','UserId','Style']\ndf_miss.fillna(method='ffill').head(10)","0e91a793":"# Scenario-3: Replace missing values with succeeding value\n# Missing value columns: ['BoilGravity','MashThickness','PitchRate','PrimaryTemp','PrimingMethod','PrimingAmount','UserId','Style']\ndf_miss.fillna(method='bfill').head(10)","dc9d0a38":"# Scenario-4: Replace missing value columns with BoilGravity=1.9,MashThickness=4,Style=other\n# Missing value columns: ['BoilGravity','MashThickness','PitchRate','PrimaryTemp','PrimingMethod','PrimingAmount','UserId','Style']\nmissing_replacements={\"BoilGravity\" : \"1.9\" ,\"MashThickness\" : \"4\",\"Style\" :\"other\"}\ndf_miss.fillna(value=missing_replacements).head(10)","f342bcaa":"#Scenario-5: Replace missing values with Mean value\n# Note : Mean applicable only numeric columns\n#sklearn. SimpleImputer(*, missing_values=''\/nan, strategy='mean\/median\/most_frequent\/constant', fill_value=None, verbose=0, copy=True, add_indicator=False)\n\n# considering only numeric columns\ndf_num=df_miss.select_dtypes(exclude='object')\nfrom sklearn.impute import SimpleImputer\nimp_mean=SimpleImputer(missing_values=np.nan ,strategy='mean')\nimp_mean_trans=pd.DataFrame(imp_mean.fit_transform(df_num))\nimp_mean_trans.columns=df_num.columns\nimp_mean_trans.head()","ddfe7b1d":"#Scenario-6: Replace missing values with Median value\n# Note : Median applicable only numeric columns\nimp_median=SimpleImputer(missing_values=np.nan ,strategy='median')\nimp_median_trans=pd.DataFrame(imp_median.fit_transform(df_num))\nimp_median_trans.columns=df_num.columns\nimp_median_trans.head()","e6725d31":"#Scenario-7: Replace missing values with Mode\/Most Frequent value\nimp_mode=SimpleImputer(missing_values=np.nan ,strategy='most_frequent')\nimp_mode_trans=pd.DataFrame(imp_mode.fit_transform(df_num))\nimp_mode_trans.columns=df_num.columns\nimp_mode_trans.head()","2507fe2b":"#Scenario-8: Replace missing values with constant value\n# considering only character columns\ndf_char=df_miss.select_dtypes(include='object')\ndf_char.head()","672df199":"imp_const=SimpleImputer(missing_values=np.nan, strategy='constant', fill_value='other')\nimp_const_trans=pd.DataFrame(imp_const.fit_transform(df_char))\nimp_const_trans.columns=df_char.columns\nimp_const_trans.head()","700aa97b":"If, wants to check \n1. How many columns contains missing values\n2. Count of missing values by column wise\n3. Missing value percentage by columns wise","7b24cc54":"if you like it, please Upvote and give feedback\/comment. \n\nThank you.","7916346c":"# Missing Values Imputation\/Handling\/Replacing","6aca1ada":"To identify missing values we have a various kinds of methods.\n1. If you know the missing values column: Sort the data by missing values\/NaN values wise either ascending or descending order, we can find the NaN values bottom of the dataframe.\nIn the given dataframe \"Style\" columns have missing values.","e3a2f461":"We have various method to replace\/handle\/impute missing values. \n\nHere explaning only few top methods.\n\n1.fillna(): \n\n    a> Replace missing values by constant values\n    b> User define values\n    C> Replace missing values in required columns or rows\n    \nfillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)\n\nFor your reference\/Exploration: intepolate() & asfreq()","4b40466a":"# Data Extraction\n","cf692363":"SKLEARN providing \"SimpleImputer\" to replace missing values with basic statistics, user define values and constant values.","b82eb0f6":"# Basic Checks","4244dba7":"2. If, don't know the missing values columns:\n\n    a>isnull() : Shows True if missing value exist in dataframe columns cell else False.\n    \n    b>isna() : Shows True if missing value exist in dataframe columns cell else False.\n    \n    c>notna(): Shows False if missing value exist in dataframe columns cell else True.","a28d209a":"# Identifying Missing values\n\n#isnull(),isna,notna()\n\n#syntax:\n\n#pd.isnull(obj)\n\n#df.isnull()\n"}}