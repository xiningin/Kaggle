{"cell_type":{"46123fa9":"code","2c9ce5f6":"code","a4580f31":"code","71e6fea1":"code","59353f48":"code","848a4ea0":"code","44bac5b8":"code","c73a2751":"code","066bf9c3":"code","42b0943f":"code","57dd5731":"code","d7e216cf":"code","f33bd5ee":"code","cffe0595":"code","027e490f":"code","076f1295":"code","5f2fd1dd":"code","b23b5562":"code","7c9a8304":"code","4bba1b2f":"code","9b98c482":"code","32488e01":"code","13f14f9f":"code","33631ab6":"code","63902f14":"code","258d7a6b":"code","fce60db4":"code","420d420f":"code","291d9a0f":"code","a285422d":"code","7bdbd18e":"code","fd160748":"code","f74915a8":"code","7fe64202":"code","94d7c157":"code","0db388a4":"code","14718d90":"code","e4c7c93f":"code","ad2d00a4":"markdown","c39bff50":"markdown","c1a56b07":"markdown","00b83a47":"markdown","431d3a46":"markdown","b8704788":"markdown","3230d246":"markdown","a098c718":"markdown"},"source":{"46123fa9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2c9ce5f6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nprint(os.listdir(\"..\/input\"))\nbig = pd.read_csv(\"..\/input\/Big_Cities_Health_Data_Inventory.csv\")","a4580f31":"big.columns","71e6fea1":"big.shape","59353f48":"big.info()","848a4ea0":"big.head(10).T","44bac5b8":"big.tail(10)","c73a2751":"big.isna().sum()","066bf9c3":"big.describe(include='all')","42b0943f":"big.dropna(subset=[\"Value\"],inplace=True)","57dd5731":"big.Value.fillna(big.Value.median(),inplace=True)","d7e216cf":"big.duplicated().sum()","f33bd5ee":"big = big.drop_duplicates()","cffe0595":"big.duplicated().sum()","027e490f":"big.loc[big['Value'].notnull(),'Value'].apply(int)","076f1295":"for column in ['Source','BCHC Requested Methodology']:\n    big[column].fillna(big[column].mode()[0], inplace=True)","5f2fd1dd":"big.isna().sum()","b23b5562":"big.drop(columns=['Methods','Notes'],inplace=True)","7c9a8304":"big.head(2)","4bba1b2f":"big['Indicator Category'].value_counts()","9b98c482":"groupvalues=big.groupby('Indicator Category').sum().reset_index()","32488e01":"groupvalues.head()","13f14f9f":"plt.figure(figsize=(40,10)) \nsns.set(style=\"whitegrid\")\ngroupvalues=big.groupby('Indicator Category').sum().reset_index()\ng = sns.barplot(groupvalues['Indicator Category'],groupvalues['Value'])\nfor index, row in groupvalues.iterrows():\n    g.text(row.name,row.Value, round(row.Value,2), color='black', ha=\"center\")\n    g.set_xlabel(\"Indicator Category\", fontsize=25)\nplt.show()","33631ab6":"plt.figure(figsize=(40,10)) \nsns.set(style=\"whitegrid\")\ngroupvalues=big.groupby('Place').sum().reset_index()\ng = sns.barplot(groupvalues['Place'],groupvalues['Value'])\nfor index, row in groupvalues.iterrows():\n    g.text(row.name,row.Value, round(row.Value,2), color='black', ha=\"center\")\n    g.set_xlabel(\"Place\", fontsize=25)\nplt.show()","63902f14":"plt.figure(figsize = (40,25))\nbig.Place.value_counts().plot(kind=\"pie\")","258d7a6b":"import numpy\nplt.figure(figsize = (10,5))\nlabels = 'Male', 'Female', 'Both'\nsizes = numpy.array([1680, 2423, 9409])\ncolors = ['yellowgreen', 'violet', 'yellow']\n\np, tx, autotexts = plt.pie(sizes, labels=labels, colors=colors,\n        autopct=\"\", shadow=True)\n\nfor i, a in enumerate(autotexts):\n    a.set_text(\"{}\".format(sizes[i]))\n\nplt.axis('equal')\nplt.show()","fce60db4":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=big['Year'], y=big['Value'],hue=big['Gender'])","420d420f":"big.isna().sum()","291d9a0f":"big_encoded = pd.get_dummies(big)","a285422d":"X = big_encoded.drop(columns=['Value'])\ny = big_encoded['Value']","7bdbd18e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score","fd160748":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.3, random_state = 101)\nmodel = LinearRegression()\nmodel.fit(X_train,y_train)","f74915a8":"model.coef_","7fe64202":"model.intercept_","94d7c157":"def mean_absolute_percentage_error(y_true, y_pred): \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","0db388a4":"train_predict = model.predict(X_train)\n\nmae_train = mean_absolute_error(y_train,train_predict)\n\nmse_train = mean_squared_error(y_train,train_predict)\n\nrmse_train = np.sqrt(mse_train)\n\nr2_train = r2_score(y_train,train_predict)\n\nmape_train = mean_absolute_percentage_error(y_train,train_predict)","14718d90":"test_predict = model.predict(X_test)\n\nmae_test = mean_absolute_error(test_predict,y_test)\n\nmse_test = mean_squared_error(test_predict,y_test)\n\nrmse_test = np.sqrt(mean_squared_error(test_predict,y_test))\n\nr2_test = r2_score(y_test,test_predict)\n\nmape_test = mean_absolute_percentage_error(y_test,test_predict)","e4c7c93f":"print('TRAIN: Mean Absolute Error(MAE): ',mae_train)\nprint('TRAIN: Mean Squared Error(MSE):',mse_train)\nprint('TRAIN: Root Mean Squared Error(RMSE):',rmse_train)\nprint('TRAIN: R square value:',r2_train)\nprint('TRAIN: Mean Absolute Percentage Error: ',mape_train)\nprint('TEST: Mean Absolute Error(MAE): ',mae_test)\nprint('TEST: Mean Squared Error(MSE):',mse_test)\nprint('TEST: Root Mean Squared Error(RMSE):',rmse_test)\nprint('TEST: R square value:',r2_test)\nprint('TEST: Mean Absolute Percentage Error: ',mape_test)","ad2d00a4":"**Number of Null Values in each column**","c39bff50":"**Remove all Null values in Value**","c1a56b07":"\n**Observations**\n\nThere are 13512 observations and 11 columns for Big City Health dataset.\n","00b83a47":"**Check for Duplicated Data**","431d3a46":"**Replace the Null Values with Mode**","b8704788":"**Replace the Null values in Value with median**","3230d246":"**Basic Statistics of Dataframe**","a098c718":"**Conversion of Float to Int for \"Value\" Column**"}}