{"cell_type":{"5f8fd87b":"code","96548bac":"code","015440b8":"code","e1a304ad":"code","329b99b2":"code","3149f19c":"code","3e88e411":"code","cac2ddcf":"code","6ab0c1a6":"code","369deb27":"code","b962f6e7":"markdown","955dffc9":"markdown","4836bd68":"markdown","70b5545a":"markdown","d1b9fa2c":"markdown","4cbe022f":"markdown","a7ea4625":"markdown","43355ffd":"markdown","6c2a087c":"markdown","841d77e5":"markdown","ba19397c":"markdown","1b2b3dd6":"markdown","86d55b14":"markdown","a93c3151":"markdown","a8daafbc":"markdown"},"source":{"5f8fd87b":"\n# import \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\nimport folium \nfrom folium import plugins\nimport plotly as pl\n#import plotly.plotly as pl\nimport plotly.graph_objs as gobj\nimport pandas as pd\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\npd.options.display.max_colwidth =  200\npd.set_option('display.max_columns', None)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Disable warnings\nimport warnings\nwarnings.filterwarnings('ignore')","96548bac":"# Importing the 2017,2018 and 2019 survey dataset\n\n#Importing the 2019 Dataset\ndf_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2019.columns = df_2019.iloc[0]\ndf_2019=df_2019.drop([0])\n\ndf_2019 = df_2019.rename(columns={'Duration (in seconds)': 'Duration',\n        'What is your age (# years)?': 'Age', \n        'What is your gender? - Selected Choice': 'Gender',\n        'In which country do you currently reside?':'Country',\n        'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?': 'Education',\n        'What is the size of the company where you are employed?':'CompanySize',\n        'What is your current yearly compensation (approximate $USD)?':'Salary',\n        'Approximately how much money have you spent on machine learning and\/or cloud computing products at your work in the past 5 years?':'MoneyDS',\n                            })\ndf_2019 = df_2019[['Duration','Age','Gender','Country','Education','Salary','CompanySize','MoneyDS']] #'CompanySize''MoneyDS'\n\n# Replacing the ambigious countries name with Standard names\ndf_2019['Country'].replace({'United States of America':'United States',\n                            'Viet Nam':'Vietnam',\n                             \"People 's Republic of China\":'China',\n                             \"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\n                             \"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\n#Importing the 2018 Dataset\ndf_2018 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\ndf_2018.columns = df_2018.iloc[0]\ndf_2018=df_2018.drop([0])\n\ndf_2018 = df_2018.rename(columns={'Duration (in seconds)': 'Duration',\n        'What is your age (# years)?': 'Age', \n        'What is your gender? - Selected Choice': 'Gender',\n        'In which country do you currently reside?':'Country',\n        'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?': 'Education',\n         #'What is the size of the company where you are employed?':'CompanySize',\n        'What is your current yearly compensation (approximate $USD)?':'Salary',\n         #'Approximately how much money have you spent on machine learning and\/or cloud computing products at your work in the past 5 years?':'MoneyDS',\n                            })\ndf_2018 = df_2018[['Duration','Age','Gender','Country','Education','Salary']]\n# #Importing the 2017 Dataset\ndf_2017=pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv',encoding='ISO-8859-1')","015440b8":"gender_2019 = df_2019['Gender'].value_counts(sort=True)\ngender_2019 = gender_2019[:3]\nsns.set(style=\"whitegrid\")\nax = sns.barplot(x=gender_2019.index, y=gender_2019.values)\nax.axhline(0, color=\"k\", clip_on=False) \nax.set_xlabel(\"Gender\")\nax.set_ylabel(\"Count\")\nax.set_title(\"Females to Males\")","e1a304ad":"df_N = pd.DataFrame(data = [len(df_2017),len(df_2018),len(df_2019)],\n                          columns = ['Numresponses'])\ndf_F = pd.DataFrame(data = [(df_2017['GenderSelect'] == 'Female').sum(), (df_2018['Gender'] == 'Female').sum(),\n                             (df_2019['Gender'] == 'Female').sum()], columns = ['Females'])\ndf_M = pd.DataFrame(data = [(df_2017['GenderSelect'] == 'Male').sum(), (df_2018['Gender'] == 'Male').sum(),\n                             (df_2019['Gender'] == 'Male').sum()], columns = ['Males'])\ndf_A = pd.concat([df_N, df_F,df_M] , axis=1)\n#df_A['Year'] = ['2017','2018','2019']\n                     \ndf_A.index = ['2017','2018','2019']\ndf_A.plot()","329b99b2":"# f, (ax1, ax2) = plt.subplots(1, 2, figsize=(7, 5), sharex=True)\n# x=df_A.index\n# values =df_A[\"Females\"]\/df_A[\"Males\"]\n# ax1.stem(x, values)\n# values1 =df_A[\"Females\"]\/df_A[\"Numresponses\"]\n# ax2.stem(x, values1)\ndf_A.plot(kind=\"bar\")","3149f19c":"df=df_2019.groupby('Country')['Gender'].apply(lambda x: (x=='Female').count()).reset_index(name='ctFemales')\ndf = df.sort_values(by='ctFemales', ascending=False)\ndf = df.iloc[:20,:]\nx = df['Country']\nvalues = df['ctFemales']\nmy_range=range(1,len(df)+1)\n# # Vertical version.\nplt.figure(figsize=(12,6))\nplt.hlines(y=my_range, xmin=0, xmax=df['ctFemales'], color='red')\nplt.plot(values, my_range, \"D\")\nplt.yticks(my_range, x)\nplt.show()","3e88e411":"df1 = df_2019.copy()\ngkk = df1.groupby(['Country','Gender']).size()\ngkk = pd.DataFrame(gkk).reset_index()\ngkk = gkk.rename(columns={0:'count'})\ngkk = gkk.pivot(index='Country', columns='Gender', values='count')\ngkk.columns.name = None\ngkk['Female'] = gkk['Female'].astype(int)\ngkk['Male'] = gkk['Male'].astype(int)\ngkk =gkk.sort_values(by = 'Female', ascending = False)\ngkk = gkk.iloc[:21,:]\nvalue1 = gkk.Female\nvalue2 = gkk.Male\ngF = pd.DataFrame({'group':gkk.index.tolist(), 'value1':value1 , 'value2':value2 })\nmy_range=range(1,len(gF.index)+1)\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(12,8))\nplt.hlines(y=my_range, xmin=gF['value1'], xmax=gF['value2'], color='blue', alpha=1)\nplt.scatter(gF['value1'], my_range, color='red', alpha=1, label='Females')\nplt.scatter(gF['value2'], my_range, color='green', alpha=1 , label='Males')\nplt.legend()\n \n# Add title and axis names\nplt.yticks(my_range, gF['group'])\nplt.title(\"Top 20 countries of Females compared to Males\", loc='center')\nplt.xlabel('Num of Females & Males')\nplt.ylabel('Countries')","cac2ddcf":"df2 = df_2019.copy()\ngkk1 = df2.groupby(['Country','Gender']).size()\ngkk1 = pd.DataFrame(gkk1).reset_index()\ngkk1 = gkk1.rename(columns={0:'count'})\ngkk1 = gkk1.pivot(index='Country', columns='Gender', values='count')\ngkk1.columns.name = None\ngkk1['Female'] = gkk1['Female'].astype(int)\ngkk1['Male'] = gkk1['Male'].astype(int)\ngkk1 =gkk1.sort_values(by = 'Female', ascending = False)\ngkn = gkk1.reset_index()\n\ndata = dict(type = 'choropleth',\n            locations = gkn['Country'],\n            locationmode = 'country names',\n            colorscale= 'Reds',\n            #text= ['IND','NEP','CHI','PAK','BAN','BHU', 'MYN','SLK'],\n            z= gkn['Female'],#[1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0],\n            colorbar = {'title':'Country Colours', 'len':200,'lenmode':'pixels' })\n#initializing the layout variable\nlayout = dict(title = 'The Nationality of Female Respondents in 2019',geo = {'scope':'world'})\n# Initializing the Figure object by passing data and layout as arguments.\ncol_map = gobj.Figure(data = [data],layout = layout)\n\n#plotting the map\niplot(col_map)","6ab0c1a6":"f_2019 = df_2019[df_2019['Gender']=='Female'].copy()\nf_2018 = df_2018[df_2018['Gender']=='Female'].copy()\nf_2017 = df_2017[df_2017['GenderSelect']=='Female'].copy()\nf_2017['Age'] = pd.cut(x=f_2017['Age'], bins=[18,21,25,29,34,39,44,49,54,59,69,79], \n                                                        labels=['18-21',\n                                                                '22-24',\n                                                                '25-29',\n                                                                '30-34',\n                                                                '35-39',\n                                                                '40-44',\n                                                                '45-49',\n                                                                '50-54',\n                                                                '55-59',\n                                                                '60-69',\n                                                                '70+'])\nx = f_2017['Age'].value_counts()\ny = f_2018['Age'].value_counts()\nz = f_2019['Age'].value_counts()\nw = pd.DataFrame(data = [x,y,z],index = ['2017','2018','2019'])\nw.fillna(0,inplace=True)\n\nw.loc['2017'] = w.loc['2017']\/len(f_2017)*100\nw.loc['2018'] = w.loc['2018']\/len(f_2018)*100\nw.loc['2019'] = w.loc['2019']\/len(f_2019)*100\n\nw.T[['2019']].plot(subplots=True, layout=(1,1),kind='bar',color='dodgerblue',linewidth=1,edgecolor='k',legend=False)\nplt.gcf().set_size_inches(10,8)\nplt.title('Age wise Distribution of Female Respondents in 2019',fontsize=15)\nplt.xticks(rotation=45,fontsize='10', horizontalalignment='right')\nplt.yticks( fontsize=10)\nplt.xlabel('Age in years',fontsize=15)\nplt.ylabel('Percentage of Female Respondents',fontsize=15)\nplt.show()\n","369deb27":"\n# create data\neducation = f_2019['Education'].value_counts(sort = True)\nlabels = education.index\nvalues = education.values\npie = go.Pie(labels=labels, values=values, marker=dict(line=dict(color='#000000', width=1)))\nlayout = go.Layout(title='Gender Distribution in 2019',font=dict(size=10), legend=dict(orientation=\"h\"))\nlayout = dict(title = 'Top-10 Countries with Respondents in 2019', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Men', showarrow=False, font=dict(size=20))])\n              \n\nfig = go.Figure(data=[pie], layout=layout)\npy.iplot(fig)\n \nplt.show()\n\n","b962f6e7":"India tops the list followed by US, others, Brazil..","955dffc9":" # Analysis of Women in Data Science - Kaggle 2019 Survey\n\n## We underestimate ourselves\n\n### Ada Lovelace: The First Computer Programmer\nAda Lovelace has been called the world's first computer programmer. What she did was write the world\u2019s first machine algorithm for an early computing machine that existed only on paper. Of course, someone had to be the first, but Lovelace was a woman, and this was in the 1840s. \n\nNote - She was the first Computer Programmer and not first woman Computer Programmer\n","4836bd68":"### Conclusion\n\nNumber of Woman in Data Science are far less compared to Men. Women who are in Data Science are young, well educated with formal degrees. Lot has to be done to encourage mor woman from different background to enter. Also women from some countries who haven't yet participated  have to be reached out to and helped in education.","70b5545a":"There is big gap between Male and Female correspondents in India, Turkey the gap is somewhat smaller \nand Tunisia there is almost no gap between between men and women in Data Science","d1b9fa2c":"Now in 2019, the gap is still huge","4cbe022f":"WOW! About Half of the woman have Master's degree and 95% of woman have atleast a Bachelor's degree.","a7ea4625":"### Educational Qualification of Female respondents","43355ffd":"### Top 20 Countries with highest Female respondents","6c2a087c":"### Let's see how we are doing now\n![](https:\/\/www.flickr.com\/photos\/wocintechchat\/25392378763\/)\n","841d77e5":"Age Distribution of Females","ba19397c":"## Majority of young women are into Datascience. Most of them fall below 35 yrs","1b2b3dd6":"Quite a few African countries and some South American are not represented. ","86d55b14":"### Number of Females Compared to Men","a93c3151":"Looks like the number of responders have decreased from 2018 and also slight decrease in female responders","a8daafbc":"### Top 20 countries of Females compared to Males"}}