{"cell_type":{"0bf37444":"code","70fae3ed":"code","19a9ceba":"code","4e025858":"code","dd81722b":"code","d2ca5150":"code","def58b87":"code","af11ce67":"code","7c886c48":"code","61070ec6":"code","5146e235":"code","4af3f3ae":"code","40c09ae4":"markdown"},"source":{"0bf37444":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\n# The Series is the object of the pandas library designed to represent one-dimensional data structures\n# There is a value and an index\ns = pd.Series([12,-4,7,9])\nprint(s)\n# By default pandas will create a level from 0\n# This can be changed\ns = pd.Series([12,-4,7,9], index=['a','b','c','d'])\n# Accessing the index and value of a series\ns.values\ns.index","70fae3ed":"# Selecting element of a series\ns[2] #can be done by index\n# Can be done by label as well\ns['b']\n# Multiple Elements can also be selected\ns[0:2]\ns[['b','c']]","19a9ceba":"# Assigning and Filtering Values\ns[1] = 5\ns[s > 8]\ns[s==5]\ns==5","4e025858":"# Operations and Mathematical functions\ns \/ 2\nnp.log(s)","dd81722b":"# Taking look at values\nserd = pd.Series([1,0,2,1,2,3], index=['white','white','blue','green','green','yellow'])\nserd.unique()\nserd.value_counts()\n# isin( ) is a function that evaluates the membership, that is, given a list of values, this function\n#lets you know if these values are contained within the data structure.\nserd.isin([0,3])","d2ca5150":"# Some members can be Null or Not a number\ns2 = pd.Series([5,-3,np.NaN,14])\ns2.isnull()\ns2.notnull()\ns2[s2.notnull()]","def58b87":"# Series as Dictionaries\nmydict = {'red': 2000, 'blue': 1000, 'yellow': 500, 'orange': 1000}\nmyseries = pd.Series(mydict)","af11ce67":"# The DataFrame is a tabular data structure very similar to the Spreadsheet\ndata = {'color' : ['blue','green','yellow','red','white'],\n'object' : ['ball','pen','pencil','paper','mug'],\n'price' : [1.2,1.0,0.6,0.9,1.7]}\ndf = pd.DataFrame(data)\ndf\n","7c886c48":"# The number of columns and order can be changed\ndf2 = pd.DataFrame(data, columns=['object','price'])\ndf2\n# Labels can be assigned similar to series\ndf3= pd.DataFrame(data, index=['one','two','three','four','five'])\ndf3","61070ec6":"# Selecting Rows and Columns\ndf3[1:2]\ndf3['price']\n# Selecting third and fifth row\ndf3.iloc[[2,4]]\n# Selecting third and fifth row, second and third column\ndf3.iloc[[2,4],[1,2]]\n# Selecting all odd rows\ndf.iloc[lambda x: x.index % 2 != 0]\n# Adding new colum\ndf3['new']=[12,13,14,14,16]\ndf3\n# Deleting column\ndf2.drop(['object'])","5146e235":"# reading from file\ndf = pd.read_csv('..\/input\/btissue.csv')\n# read_csv('ch05_02.csv',skiprows=[2],nrows=3,header=None)\n# Similarly read_excel, read_json, read_html etc. is available\n# Read_table can be used with text files and separators can be user defined\n# Examine first few rows\ndf.head(3)\n# for Writing to csv\ndf.to_csv()\n# parameter na_rep ='NaN'\ndf.columns\ndf.shape\ndf.dtypes\ndf.info\n\n# Getting the values of IO when class = car\ndf['I0'][df['class']=='car']\n\n# Getting the vale of IO when class = car\ndf['I0'][df['class']=='car'].mean()\n","4af3f3ae":"# Merging dataframes\nframe1 = pd.DataFrame( {'id':['ball','pencil','pen','mug','ashtray'],'price': [12.33,11.44,33.21,13.23,33.62]})\nframe2 = pd.DataFrame( {'id':['pencil','pencil','ball','pen'],'color': ['white','red','red','black']})\npd.merge(frame1,frame2)\n# As the name of the column on the basis of which the merging will happen has same names, it doe snot\n# need to be specified, otherwise it can be added with the ON parameter\npd.merge(frame1,frame2,on='id')\n# by default merge is inner join, if we need to add other joins we can specify the 'how' parameter\n\n# Assignment create two dataframe one has studendid and marks and another has student id and phone number\n# The first dataframe will have values like s1,s2,s3 and 75,78,82 the second dataframe\n# will have values like s1,s2,s3 and phone number like 9998764523 etc, Merge them","40c09ae4":"* Pandas is an open source Python library for highly specialized data analysis\n* This library has been designed and developed primarily by Wes McKinney starting in 2008; later, in2012, Sien Chang, one of his colleagues, was added to the development\n* main purpose processing of data, data extraction, and data manipulation\n* The heart of pandas is just the two primary data structures Series and Data Frame"}}