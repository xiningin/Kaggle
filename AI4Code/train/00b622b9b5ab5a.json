{"cell_type":{"6b378dfe":"code","f8583337":"code","c5fc166b":"code","ccfe6150":"code","0e7d7111":"code","83f395dd":"code","cef818ec":"code","3635c40c":"code","b1b3b117":"code","40a3d2c5":"code","613ee920":"code","e2a390b9":"code","7865c833":"code","5b78b163":"code","308a4e94":"code","407f2d9b":"code","44a7889d":"code","f36940ce":"code","561624ef":"code","ae4ff1fd":"code","14684921":"code","4e2602ef":"code","89767f7a":"code","244ee1b4":"code","f8a2809a":"code","f1c64423":"code","330a1e51":"code","c21ffaf2":"code","b2c1c50c":"code","3ea6a1da":"code","bfb68fc6":"code","3eed8221":"code","ceef3a84":"code","e414a7c1":"code","600c891c":"code","1f094efd":"markdown","f603d339":"markdown","190f6cb4":"markdown","1e8d8fb8":"markdown","b12f1797":"markdown","ca5aa329":"markdown","ceed289b":"markdown","7a0ef4d3":"markdown","5c6fdaaf":"markdown","e93817cf":"markdown","e2c49c70":"markdown","8b98a71f":"markdown","4385f688":"markdown","0c71811a":"markdown","c763227f":"markdown","eeb98db4":"markdown","24992d13":"markdown","94ea926f":"markdown","2109b098":"markdown","dc843541":"markdown","17faaf73":"markdown","fe5e28b0":"markdown"},"source":{"6b378dfe":"# Import Basic\nimport numpy as np \nimport pandas as pd\nimport altair as alt\nimport warnings\nimport itertools\nfrom random import random\nfrom pandas.plotting import autocorrelation_plot\nfrom pandas.api.types import is_string_dtype, is_numeric_dtype, is_categorical_dtype\n\n# Fastai\nfrom fastai.tabular.all import *\nfrom sklearn import ensemble\nfrom sklearn import model_selection\n\n# Prophet\nfrom fbprophet import Prophet\n\n# DataViz\nimport matplotlib.pyplot as plt\nimport seaborn as sns   \nfrom random import gauss\n\n#Statmodels\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.ar_model import AR\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import adfuller\n\n# Settings \nplt.style.use('fivethirtyeight') \npd.options.display.max_rows = 100\npd.options.display.max_columns = 50","f8583337":"def feature_importance(model, X):\n    fi = pd.DataFrame({'feature':X.columns.tolist(), 'importance':(model.feature_importances_ * 100).tolist()}).round(4).sort_values(by='importance', ascending=False)\n    bars = alt.Chart(fi).mark_bar().encode(\n      x='importance',\n      y=alt.Y('feature', sort='-x'),\n      tooltip=['feature','importance']\n    )\n\n    text = bars.mark_text(\n      align='left',\n      baseline='middle',\n      dx=3  # Nudges text to right so it doesn't appear on top of the bar\n    ).encode(\n      text='importance:Q'\n    )\n    return (bars + text).properties(width=400).configure_axis(labelFontSize=13, titleFontSize=16)","c5fc166b":"# Set path variable\nPATH = '\/kaggle\/input\/tabular-playground-series-jul-2021'\ntrain = pd.read_csv(f'{PATH}\/train.csv')\ntest = pd.read_csv(f'{PATH}\/test.csv')\nss = pd.read_csv(f'{PATH}\/sample_submission.csv')","ccfe6150":"train['date_time'] = pd.to_datetime(train['date_time'])","0e7d7111":"train.dtypes","83f395dd":"train.shape, test.shape","cef818ec":"train.head(3)","3635c40c":"train['date_time']","b1b3b117":"test['date_time']","40a3d2c5":"test=test.assign(target_carbon_monoxide = -1., target_benzene = -1., target_nitrogen_oxides = -1.)","613ee920":"df = pd.concat([train, test], axis=0, ignore_index=True).rename(columns={'date_time':'ds', 'target_carbon_monoxide':'yco', 'target_benzene':'yb', 'target_nitrogen_oxides':'yno'})","e2a390b9":"df","7865c833":"fig, ax = plt.subplots(1,1)\nax.plot(df['ds'], df['target_carbon_monoxide']);","5b78b163":"tr = train.copy()\nte = test.copy()","308a4e94":"# Add new features to dataframe.\ntr = add_datepart(tr, 'date_time')\nte = add_datepart(te, 'date_time')","407f2d9b":"tr.head()","44a7889d":"tr.info()","f36940ce":"# Define the features to use in the model.\nfeats = ['deg_C',\n 'relative_humidity',\n 'absolute_humidity',\n 'sensor_1',\n 'sensor_2',\n 'sensor_3',\n 'sensor_4',\n 'sensor_5',\n 'date_timeYear',\n 'date_timeMonth',\n 'date_timeWeek',\n 'date_timeDay',\n 'date_timeDayofweek',\n 'date_timeDayofyear',\n 'date_timeIs_month_end',\n 'date_timeIs_month_start',\n 'date_timeIs_quarter_end',\n 'date_timeIs_quarter_start',\n 'date_timeIs_year_end',\n 'date_timeIs_year_start',\n 'date_timeElapsed']","561624ef":"X = tr.loc[:, feats]\ny","ae4ff1fd":"model_selection.train_test_split(tr, , test_size=None, train_size=None, random_state=None, shuffle=True, stratify=None)","14684921":"rf1 = ensemble.RandomForestRegressor(n_estimators = 40, n_jobs=-1);\nrf2 = ensemble.RandomForestRegressor(n_estimators = 40, n_jobs=-1);\nrf3 = ensemble.RandomForestRegressor(n_estimators = 40, n_jobs=-1);","4e2602ef":"y1 = tr['target_carbon_monoxide'].ravel()\ny2 = tr['target_benzene'].ravel()\ny3 = tr['target_nitrogen_oxides'].ravel()","89767f7a":"rf1.fit(tr[feats], y1)","244ee1b4":"yp1 = rf1.predict(te[feats])","f8a2809a":"rf2.fit(tr[feats], y2)","f1c64423":"yp2 = rf2.predict(te[feats])","330a1e51":"rf3.fit(tr[feats], y3)","c21ffaf2":"yp3 = rf3.predict(te[feats])","b2c1c50c":"feature_importance(rf1, tr[feats])","3ea6a1da":"feature_importance(rf2, tr[feats])","bfb68fc6":"feature_importance(rf3, tr[feats])","3eed8221":"# Check the format of submission file.\nss.head()","ceef3a84":"# Create teh submission dataframe\nsub = pd.DataFrame({\n    'date_time': test['date_time'],\n    'target_carbon_monoxide': yp1,\n    'target_benzene':yp2,\n    'target_nitrogen_oxides':yp3\n})","e414a7c1":"sub.to_csv('sub1.csv', index=False)","600c891c":"sub.head()","1f094efd":"# Feature Engineering using **fastai**","f603d339":"# [Tabular Playground Series - Jul 2021](https:\/\/www.kaggle.com\/c\/tabular-playground-series-jul-2021\/data)","190f6cb4":"**Model 1**\n<br>\nsensor_2 & sensor_1 seem to be important features.","1e8d8fb8":"# Submission","b12f1797":"# Feature Importance Plots[](http:\/\/)","ca5aa329":"## In this notebook, we will see how to analyze time series data.","ceed289b":"Model to predict `target_benzene`","7a0ef4d3":"# EDA (WIP)","5c6fdaaf":"# Import Libraries","e93817cf":"Model to predict `target_carbon_monoxide`","e2c49c70":"Let's train a RandomForestClassifier on the complete dataset.","8b98a71f":"Now we use the add_datepart function from fastai library to create features from the date column.","4385f688":"We will do this step later.","0c71811a":"# Modeling","c763227f":"# Read Data","eeb98db4":"**Model 3**\n<br>\nHere the date_timeElapsed feature we created has the second highest importance.","24992d13":"Lets take a look at the new features added into our dataframe.","94ea926f":"# Split the data into train & validation sets","2109b098":"* [Scipy 2019](https:\/\/www.youtube.com\/watch?v=v5ijNXvlC5A)\n* [Scipy 2016](https:\/\/www.youtube.com\/watch?v=JNfxr4BQrLk)\n* [PyCon 2017](https:\/\/www.youtube.com\/watch?v=zmfe2RaX)\n* [Konrad](https:\/\/www.kaggle.com\/konradb\/practical-time-series-pt-1-the-basics)","dc843541":"Model to predict `target_nitrogen_oxides`","17faaf73":"# Utility Code","fe5e28b0":"Model 2\n<br>\nSensor two seems to be the strongest signal"}}