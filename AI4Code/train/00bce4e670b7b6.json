{"cell_type":{"7bcb3cfb":"code","e7fde112":"code","15a80759":"code","62108bc3":"code","21665ebe":"code","1ec5e0d9":"code","2e562abd":"code","104178b1":"code","b27d6cc4":"code","4aeadd36":"code","80b663ff":"code","88246aa4":"code","90b8c1b2":"code","44d0d073":"code","7e594ca1":"code","27c3be11":"code","de268809":"code","c03595c1":"markdown","7d505c31":"markdown","4c28651e":"markdown","09c8ddb8":"markdown","0a9cd7cb":"markdown","cf45f90e":"markdown","04080b1c":"markdown","cd80660b":"markdown","011d15db":"markdown","f33f5a90":"markdown","55c300e9":"markdown","3eebd524":"markdown","e0c8cad3":"markdown","39e56bb8":"markdown","4207778c":"markdown","8ad695c7":"markdown","11933a17":"markdown","dc574aae":"markdown","f5c3002a":"markdown","423d5a1f":"markdown"},"source":{"7bcb3cfb":"# Importing the required Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n","e7fde112":"path='..\/input\/zomato-restaurants-data\/zomato.csv'","15a80759":"#initial View Of the data set\ndf=pd.read_csv(path,encoding='latin-1')\ndf.head()","62108bc3":"# Refining the city names in Country India\ndef changeCity(city):\n    if city=='New Delhi'or city=='Ghaziabad' or city=='Noida' or city=='Gurgaon' or city=='Faridabad':\n        return 'Delhi-NCR'\n    else:\n        return 'Rest Of India'\ndf.City[df['Country Code']==1]=df.City[df['Country Code']==1].apply(changeCity)\n# Counting the restaurants having location Delhi-NCR\nrestaurants_delhi=df.City[df['City']=='Delhi-NCR'].count()\n# Counting the restaurants having location Rest Of India\nrestaurants_other=df.City[df['City']=='Rest Of India'].count()\n# Plotting the graph\nplt.title('No. Of Restaurants in Delhi-NCR vs Rest Of India')\nplt.xlabel('Location')\nplt.ylabel('No. Of Restaurants')\nplt.bar(height=restaurants_delhi,x='Delhi-NCR',width=0.4,edgecolor='black')\nplt.bar(height=restaurants_other,x='Rest Of India',width=0.4,edgecolor='black')\nplt.text(x='Delhi-NCR', y=restaurants_delhi+300,s=restaurants_delhi)\nplt.text(x='Rest Of India',y=restaurants_other+300,s=restaurants_other)\nplt.ylim(0,9500)\nplt.show()","21665ebe":"# Aggregating Cuisines of Delhi-NCR\ndelhi_cuisines=df.Cuisines[df['City']=='Delhi-NCR']\n# Aggregating Cuisines of Rest Of India\nrest_cuisines=df.Cuisines[df['City']=='Rest Of India']\ndelhi_dict={}\n# Cuisine Values are Comma seperated\nfor i in delhi_cuisines.values:\n    # Making array of different values\n    array=i.strip().split(\",\")\n    # Adding Unique values to the dictionary \n    for ele in array:\n        if ele.strip() in delhi_dict:\n            delhi_dict[ele.strip()]+=1\n        else:\n            delhi_dict[ele.strip()]=1\nrest_dict={}\n# Doing the same procedure for Rest Of India\nfor i in rest_cuisines.values:\n    array=i.strip().split(\",\")\n    for ele in array:\n        if ele.strip() in rest_dict:\n            rest_dict[ele.strip()]+=1\n        else:\n            rest_dict[ele.strip()]=1\n# Converting the keys of dictionary to a set\na1=delhi_dict.keys()\na2=rest_dict.keys()\na1=set(a1)\na2=set(a2)\n# Taking difference Of sets to get cuisines not present in Delhi-NCR but in Rest Of India\nprint('Cuisines which are not present in Delhi-NCR but in Rest Of India according to the data-set')\nfinal=list(a2-a1)\nprint(*final)\n# Checking all the cuisines with Zomato-API\nimport requests as req\n# Required Header to be passed in the get request (Accn to the documentation)\nh={\n    'Accept':'application\/json',\n    'user-key':'11caaee84b90b16fe8fdb958bf8db957'\n}\n# Parameters\np={\n    # City ID of Delhi-NCR is 1\n    'city_id':1\n}\n# Get Request\nres=req.get('https:\/\/developers.zomato.com\/api\/v2.1\/cuisines',headers=h,params=p)\ndata=res.json()\napi_cuisine_array=[]\n# Creating the cuisine array from receieved data \n\nfor i in data['cuisines']:\n    api_cuisine_array.append(i['cuisine']['cuisine_name'])\nprint('Cuisines which are not present in Delhi-NCR but in Rest Of India according to Zomato API')\napi_cuisine_array=set(api_cuisine_array)\nprint(*list(set(final)-api_cuisine_array.intersection(set(final))))","1ec5e0d9":"from pylab import *\n# Sort Cuisines based on no of restaurants in Delhi-NCR\nmax_delhi=sorted(delhi_dict,key=delhi_dict.get,reverse=True)\nprint()\ndelhi=pd.DataFrame(((max_delhi[i],delhi_dict[max_delhi[i]]) for i in range(10)),columns=['Cuisine Type','Number Of Restaurants'])\nprint(delhi)\n# Sort Cuisines based on no of restaurants in Rest Of India\nmax_rest=sorted(rest_dict,key=rest_dict.get,reverse=True)\nprint()\nrest=pd.DataFrame(((max_rest[i],rest_dict[max_rest[i]]) for i in range(10)),columns=['Cuisine Type','Number Of Restaurants'])\nprint(rest)\n# plotting the pie chart\n# dividing the graph into two subplots\nfig,axs=plt.subplots(nrows=1,ncols=2,figsize=(20,8))\naxs[0].pie(x=delhi['Number Of Restaurants'],labels=delhi['Cuisine Type'],autopct=\"%.2f\")\naxs[1].pie(x=rest['Number Of Restaurants'],labels=rest['Cuisine Type'],autopct=\"%.2f\")\naxs[0].title.set_text('Cuisine distribution among restaurants in Delhi')\naxs[1].title.set_text('Cuisine distribution among restaurants in Rest Of India')\nautoAxis = axs[0].axis()\n# Creating borders around the pie charts\nrec = Rectangle((autoAxis[0]-0.2,autoAxis[2]-0.2),(autoAxis[1]-autoAxis[0])+1,(autoAxis[3]-autoAxis[2])+0.4,fill=False,lw=2)\nrec = axs[0].add_patch(rec)\nrec.set_clip_on(False)\nautoAxis = axs[1].axis()\nrec = Rectangle((autoAxis[0]-0.2,autoAxis[2]-0.2),(autoAxis[1]-autoAxis[0])+1,(autoAxis[3]-autoAxis[2])+0.4,fill=False,lw=2)\nrec = axs[1].add_patch(rec)\nrec.set_clip_on(False)\nplt.show()","2e562abd":"print(\"Top Cuisines serverd in Delhi NCR\\n \\n \")\nprint(delhi,\"\\n\")\nprint(\"Top Cuisines serverd in Rest Of India \\n \\n \")\nprint(rest,\"\\n\")\n# plotting the pie chart\n# dividing the graph into two subplots\nfig,axs=plt.subplots(nrows=1,ncols=2,figsize=(20,8))\naxs[0].pie(x=delhi['Number Of Restaurants'],labels=delhi['Cuisine Type'],autopct=\"%.2f\")\naxs[1].pie(x=rest['Number Of Restaurants'],labels=rest['Cuisine Type'],autopct=\"%.2f\")\naxs[0].title.set_text('Cuisine distribution among restaurants in Delhi')\naxs[1].title.set_text('Cuisine distribution among restaurants in Rest Of India')\nautoAxis = axs[0].axis()\n# Creating borders around the pie charts\nrec = Rectangle((autoAxis[0]-0.2,autoAxis[2]-0.2),(autoAxis[1]-autoAxis[0])+1,(autoAxis[3]-autoAxis[2])+0.4,fill=False,lw=2)\nrec = axs[0].add_patch(rec)\nrec.set_clip_on(False)\nautoAxis = axs[1].axis()\nrec = Rectangle((autoAxis[0]-0.2,autoAxis[2]-0.2),(autoAxis[1]-autoAxis[0])+1,(autoAxis[3]-autoAxis[2])+0.4,fill=False,lw=2)\nrec = axs[1].add_patch(rec)\nrec.set_clip_on(False)\nplt.show()","104178b1":"# Sorting the DataFrame by votes\ndf.sort_values(by='Votes',inplace=True,ascending=False)\nratings=df['Aggregate rating'].values\nvotes=df['Votes'].values\nmain_rating=[]\nmain_votes=[]\n# Taking out Unique rating Values for corrosponding votes for better understanding\nfor i in range (len(ratings)):\n    if ratings[i] not in main_rating:\n        main_rating.append(ratings[i])\n        main_votes.append(votes[i]) \n# Making Two Graphs to show the variation clearly\nfig,axs=plt.subplots(2,figsize=(20,8))\nfig.suptitle('Variation Of Ratings w.r.t No. Of Votes')\naxs[0].plot(votes,ratings,marker='^')\naxs[0].title.set_text('Taking all the values of Votes for corrosponding ratings')\naxs[1].plot(main_votes,main_rating,marker='^')\naxs[1].title.set_text('Taking only unique values of ratings for corrosponding votes for better understanding')\naxs[0].set_xlabel('No Of Votes')\naxs[0].set_ylabel('Aggregate Rating')\naxs[1].set_xlabel('No Of Votes')\naxs[1].set_ylabel('Aggregate Rating')\nfig.tight_layout(pad=3.0)\nplt.show()\n","b27d6cc4":"# Function to count no of cuisines in a particular restaurant\ndef count_cuisine(string):\n    array=str(string).split(',')\n    return len(array)\n# applying the function\ndf['No._Of_Cuisine']=df['Cuisines'].apply(count_cuisine)\n# plotting the bar graph\nplt.bar(height=df['Aggregate rating'],x=df['No._Of_Cuisine'])\nplt.title('Variation of Rating with respect to cuisines')\nplt.ylabel('Aggregate Rating')\nplt.xlabel('No. Of Cuisines')\nplt.show()","4aeadd36":"\n#as we know that country code of india is 1\ndata=df[df['Country Code']==1]\ndata=df[[\"Average Cost for two\",\"Aggregate rating\",\"Rating color\"]]\ndata.dropna(inplace=True)\nx=[1,2,3,4,5]\ncolor=['Red', 'Orange', 'Yellow', 'Green', 'Dark Green']\nx_axis=[]\ny_axis=[]\nfor i in data.values:\n    if i[2] !=\"White\":\n        x_axis.append(x[color.index(i[2])])\n        y_axis.append(i[0])\nplt.scatter(x_axis,y_axis)\nplt.xlabel(\"Ratings number\")\nplt.ylabel(\"No.of Avg. Cost\")\nplt.title(\"No. of Avg Cost  vs rating\")\nplt.show()","80b663ff":"# make a cuisine dictionary\ncuisine_dict={}\ndf['Cuisines'].dropna(inplace=True)\nfor i in df.Cuisines:\n    # create array of csv\n    i=str(i)\n    array=i.strip().split(',')\n    # for each value add it to the dictionary\n    for c in array:\n        if c.strip() in cuisine_dict:\n            cuisine_dict[c.strip()]+=1\n        else:\n            cuisine_dict[c.strip()]=1\nsorted_values=sorted(cuisine_dict,key=cuisine_dict.get)[0:10]\nrating_array=[]\nrestaurant_array=[]\ncuisine_array=[]\nsorted_values=set(sorted_values)\nfor i in df[['Cuisines','Restaurant Name','Aggregate rating']].values:\n    i[0]=str(i[0])\n    cuisines=set(i[0].strip().split(','))\n    if len(list(sorted_values.intersection(cuisines)))>0:\n        restaurant_array.append(i[1])\n        rating_array.append(i[2])\n        cuisine_array.append(i[0])\n\nplt.scatter(x_axis,y_axis)\nplt.xlabel(\"Ratings number\")\nplt.ylabel(\"No.of Avg. Cost\")\nplt.title(\"No. of Avg Cost  vs rating\")\nplt.show()\nprint(\"Cuisines which are Serverd in more specefic restaurants\") \nprint(*cuisine_array)\n","88246aa4":"# Gouping data of Indian localities\ngrouped_a=df[df['Country Code']==1].groupby('Locality')\nlocality_dict={}\n\nfor key,item in grouped_a:\n\n    total_votes=item['Votes'].sum()\n    w=(item['Votes']*item['Aggregate rating']).sum()\n    ans=w\/total_votes\n    locality_dict[key]=ans.round(3)\ntop_values=sorted(locality_dict,key=locality_dict.get,reverse=True)[0:10]\nprint(\"----------------------------------------------------\")\nprint(\"  Weighted User Rating for Localities in India\")\nprint(\"----------------------------------------------------\")\nfor i in top_values:\n    print(\"| {:37s} | {:3f} |\".format(i,locality_dict[i]))\n    print(\"----------------------------------------------------\")\n# Gouping data of All localities\ngrouped=df.groupby('Locality')\nlocality_dict={}\nprint()\nfor key,item in grouped:\n    total_votes=item['Votes'].sum()\n    w=(item['Votes']*item['Aggregate rating']).sum()\n    ans=w\/total_votes\n    locality_dict[key]=ans.round(3)\ntop_values=sorted(locality_dict,key=locality_dict.get,reverse=True)[0:10]\nprint(\"---------------------------------------------------------\")\nprint(\"  Weighted User Rating for Localities All over the world\")\nprint(\"---------------------------------------------------------\")\nfor i in top_values:\n    print(\"| {:42s} | {:3f} |\".format(i,locality_dict[i]))\n    print(\"---------------------------------------------------------\")","90b8c1b2":"# Handling Duplicate values of Restaurant Names\ndf['Restaurant Name']=df['Restaurant Name'].replace(\"Giani's\",\"Giani\")\n# Dropping NaN values\ndf['Restaurant Name'].dropna(inplace=True)\nrestaurant_names=df['Restaurant Name']\nr_dict={}\n# Creating the no. of outlets dictionary\nfor i in restaurant_names:\n    if i in r_dict:\n        r_dict[i]+=1\n    else:\n        r_dict[i]=1\nplt.figure(figsize=(10,8))\n# Sorting the values on the basis of no of outlets\noutlets_sorted=sorted(r_dict,key=r_dict.get,reverse=True)[0:15]\nprint(\"-----------------------------------------------\")\nprint(\"  Restaurants Having Highest Number Of Outlets\")\nprint(\"-----------------------------------------------\")\nprint(\"| {:20s} | {:14s} |\".format('Restaurant Name','No. Of Outlets'))\nprint(\"-----------------------------------------\")\nfor i in outlets_sorted:\n    print(\"| {:20s} | {:10d}     |\".format(i,r_dict[i]))\n    print(\"-----------------------------------------\")\n    # Plotting the graph\n    plt.barh(width=r_dict[i],y=i,height=0.7)\n    plt.text(y=i,x=r_dict[i]+1,s=r_dict[i])\nplt.title('Top 15 Restaurants having highest no. of outlets')\n\nplt.xlabel('No Of Outlets')\nplt.ylabel(\"Restaurant Names\")\nplt.show()","44d0d073":"# Initializing the figure\nplt.figure(figsize=(15,8))\n# Plot title\nplt.title('Histogram depicting variation in rating')\n# Removing NaN values from ratings (Dropping unrated restaurants)\ndf['Aggregate rating'].dropna(inplace=True)\n# plotting the histogram\nplt.hist(x=df['Aggregate rating'],edgecolor='black',color='yellow')\nplt.xlabel('Aggregate Rating')\nplt.ylabel('Number of Restaurants')\nplt.show()","7e594ca1":"# Extracting Votes and Restaurant names from dataset having country USA (Code :216)\nvotes=df[['Votes','Restaurant Name']][df['Country Code']==216]\n# Sorting values on the basis of votes\nvotes.sort_values(by='Votes',ascending=False,inplace=True)\n# Taking top 10 Values\nans=votes[['Restaurant Name','Votes']][0:10].values\n# Initializing the figure\nplt.figure(figsize=(10,7))\n# Plot title\nplt.title(\"Top 10 Restaurants with highest no of votes in the USA\")\n# Plotting the graph\nplt.bar(height=votes['Votes'][0:10],x=votes['Restaurant Name'][0:10])\nfor i in votes.values[0:10]:\n    plt.text(i[1],i[0]+40,i[0])\nplt.xticks(rotation=40)\nplt.ylim(0,3600)\nplt.show()\n","27c3be11":"# Extracting Cuisine names and restaurant names having country USA\ntable=df[['Cuisines','Restaurant Name']][df['Country Code']==216]\nus_cuisines={}\n# Creating The dictionary\nfor i in table['Cuisines']:\n    i=str(i)\n    array=i.strip().split(',')\n    for a in array:\n        if a.strip() in us_cuisines:\n            us_cuisines[a.strip()]+=1\n        else:\n            us_cuisines[a.strip()]=1\n# Sorting the values\nsorted_values=sorted(us_cuisines,key=us_cuisines.get,reverse=True)[0:10]\nsize_array=[]\n# Taking it in an array\nfor i in sorted_values:\n    size_array.append(us_cuisines[i])\n# Plotting the graph\nplt.figure(figsize=(8,8))\nplt.title(\"Top 10 Cuisines of USA\")\nplt.pie(size_array,labels=sorted_values,autopct=\"%.2f%%\")\nplt.show()","de268809":"dataf=pd.read_csv(path,encoding='latin-1')\n# grouping by cities\ncity_grouped=dataf[dataf['Country Code']==1].groupby('City')\ncities=[]\nnum_restaurants=[]\nweighted_rating=[]\n# Creating different arrays from dataframe\nfor key,item in city_grouped:\n    total_votes=item['Votes'].sum()\n    w=(item['Votes']*item['Aggregate rating']).sum()\n    ans=w\/total_votes\n    weighted_rating.append(ans)\n    num_restaurants.append(len(item))\n    cities.append(key)\n# plotting the graph\nplt.figure(figsize=(20,3))\nweighted_rating=np.array(weighted_rating)\n# Increasing values of Weighted rating for visibility of Bubbles\nweighted_rating*=100\nplt.title(\"Plot of cities of India With there weighted rating and number of Restaurants\")\nplt.scatter(cities, num_restaurants, s=weighted_rating, edgecolor='black')\nplt.xticks(rotation=90)\nplt.xlabel('Cities')\nplt.ylabel('Number of restaurants')\nplt.ylim(-100,6000)\nplt.show()","c03595c1":"# Initial View for inference","7d505c31":"## Part 4 : Restaurant Serving some more specefic cuisine","4c28651e":"# Question 2\n## User Rating of a restaurant plays a crucial role in selecting a restaurant or ordering the food from the restaurant.Write a short detail analysis of how the rating is affected by restaurant due following features: Plot a suitable graph to explain your inference.","09c8ddb8":"## Part 1 : Number of Votes for a given Restaurant","0a9cd7cb":"# Question 1 Part 3\n## Find the top 10 cuisines served by maximum number of restaurants in Delhi NCR and rest of India.","cf45f90e":"## Part 2 : Restaurant serving more number of cuisines.","04080b1c":"# Question 1\n### The dataset is highly skewed toward the cities included in Delhi-NCR. So, we will summarise all the other cities in Rest of India while those in New Delhi, Ghaziabad, Noida, Gurgaon, Faridabad to Delhi-NCR. Doing this would make our analysis turn toward Delhi-NCR v Rest of India.","cd80660b":"## Part 3: Average Cost of Restaurant","011d15db":"## Part 2: Plot the histogram of aggregate rating of restaurant( drop the unrated restaurant).","f33f5a90":"# Part 3:Plot the bar graph top 10 restaurants in the data with the highest number of votes.","55c300e9":"# Part 4:Plot the pie graph of top 10 cuisines present in restaurants in the USA.","3eebd524":"# Importing Libraries","e0c8cad3":"# Visualization\n\n## Part 1:Plot the bar graph top 15 restaurants have a maximum number of outlets.","39e56bb8":"## Path to the Dataset","4207778c":"## Part 1: Plot the bar graph of number of restaurants present in Delhi NCR vs Rest of India.","8ad695c7":"## Part 4:Write a short detailed analysis of how cuisine served is different from Delhi NCR to Rest of India. Plot the suitable graph to explain your inference.","11933a17":"## Pat 2 :Find the weighted restaurant rating of each locality and find out the top 10 localities with more weighted restaurant rating?\n# Weighted Restaurant Rating=\u03a3 (number of votes * rating) \/ \u03a3 (number of votes) .","dc574aae":"# ZOMATO-API PROJECT","f5c3002a":"## Part 5:Plot the bubble graph of a number of Restaurants present in the city of India and keeping the weighted restaurant rating of the city in a bubble.","423d5a1f":"## Part 2 : Find the cuisines which are not present in restaurant of Delhi NCR but present in rest of India.Check using Zomato API whether this cuisines are actually not served in restaurants of Delhi-NCR or just it due to incomplete dataset."}}