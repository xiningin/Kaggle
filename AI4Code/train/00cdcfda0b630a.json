{"cell_type":{"6e95d81c":"code","9f040069":"code","f1398653":"code","8b589ca8":"code","b6bc8d7c":"code","795f7ace":"code","b2721ac8":"code","831aa721":"code","c3cbc8b3":"code","68f966b3":"code","3dc99f28":"code","9ade86ff":"code","d23acfe8":"code","adf1eb68":"code","ee971759":"code","5785b1a9":"code","9c21e7d2":"code","fa121958":"code","b82007ec":"code","5f2c1888":"code","675ce494":"code","4febdada":"code","bf8fdff1":"code","3894eab4":"code","0891964b":"code","aac2ed2f":"code","023edd27":"code","2ca5ecda":"code","f1c998ad":"code","73bd74e7":"code","4fdf737e":"code","08011dc0":"code","f8aa9528":"markdown","29bab2d1":"markdown","1d1ce44c":"markdown","83bf7777":"markdown","fd289fef":"markdown","40d1c4a7":"markdown","e8e92718":"markdown","6eb523fe":"markdown","f0461ec2":"markdown","82d9233f":"markdown"},"source":{"6e95d81c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport plotly.express as px","9f040069":"%matplotlib inline\nplt.style.use('seaborn-darkgrid')\npalette =  plt.get_cmap('Set2')","f1398653":"main_df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\nmain_df.head()","8b589ca8":"msno.bar(main_df, figsize=(20,10))\nplt.show()","b6bc8d7c":"main_df.describe(include=[np.number])","795f7ace":"main_df.describe(include=[np.object])","b2721ac8":"main_df.info()","831aa721":"countries = main_df['country'].value_counts()[main_df['country'].value_counts(normalize=True)>0.01]\ncountries, countries.values","c3cbc8b3":"list_countries= countries.index\nlen(list_countries)","68f966b3":"plt.figure(figsize=(20,10))\nplt.title('Amount of content by country', fontsize=18)\nplt.tick_params(labelsize=14)\nsns.barplot(y=countries.index, x=countries.values,alpha=0.6)\nplt.show()","3dc99f28":"plt.figure(figsize=(14,7))\nfigure = px.pie(countries.sort_values(ascending=False).iloc[:20], values=countries.values, names=countries.index, title='part of the pie', color_discrete_sequence=px.colors.sequential.RdBu)\nfigure.show()","9ade86ff":"types = main_df['type'].value_counts()\ntypes","d23acfe8":"plt.figure(figsize=(14,7))\nsns.barplot(y=types.values, x=types.index)\nplt.title('Amount of Movies vs Tv shows')\nplt.show()","adf1eb68":"movie = main_df['type']=='Movie'\ntv_show = main_df['type']== 'TV Show'","ee971759":"movies = main_df[movie]\ntv_shows= main_df[tv_show]\n\nmovies","5785b1a9":"movies.duration","9c21e7d2":"MoviesProgress = movies['release_year'].value_counts().sort_index()\nTvshowProgress = tv_shows['release_year'].value_counts().sort_index()","fa121958":"MoviesProgress.index","b82007ec":"plt.figure(figsize=(14,7))\n\nplt.plot(MoviesProgress.index, MoviesProgress.values, label='movies' )\nplt.plot(TvshowProgress.index, TvshowProgress.values, label='tv shows')\n\nplt.axvline(2019, alpha=0.4, linestyle='--', color='r')\nplt.axvline(2021, alpha=0.4, linestyle='--', color='r')\nplt.axvspan(2019,2021, alpha=0.2, color='r', label='Coronavirus')\n\nplt.xticks(list(range(1925,2026,5)))\nplt.title('content growth over time')\nplt.xlabel('years')\nplt.ylabel('content')\nplt.legend()\nplt.show()","5f2c1888":"ratings = main_df['rating'].value_counts()","675ce494":"plt.figure(figsize=(14,7))\n\nplt.title('Rating chart')\n\nsns.barplot(ratings.values,ratings.index, alpha=0.6)\nplt.show()","4febdada":"movies = main_df[main_df['type']=='Movie']\nmovies['duration'] = [i.split(' ')[0] for i in movies.duration.dropna()]","bf8fdff1":"[i.split(' ')[0] for i in movies.duration.dropna()][:5]","3894eab4":"plt.figure(figsize=(14,7))\nplt.ylabel('number of movies normalised')\nsns.distplot(movies['duration'], bins=60)\nplt.title('duration in mins distributions of films')\n# plt.yticks(list(range(0,200)))\nplt.legend()\nplt.show()","0891964b":"movies = main_df[main_df['type']=='Movie']\nprint(movies.duration)\nshort = movies.sort_values('duration').iloc[:20]\nshort['duration'] = [int(i.split(' ')[0]) for i in short.duration.dropna()]\n# short['title']","aac2ed2f":"\nplt.figure(figsize=(14,7))\nplt.title('Top 20 shortest movies')\nplt.tick_params(labelsize=14)\nsns.barplot(y=short['title'], x=short['duration'],alpha=0.6)\nplt.show()","023edd27":"movies = main_df[main_df['type']=='Movie']\nlong = movies.duration.sort_values('duration').iloc[-20:]\nlong['duration'] = [int(i.split(' ')[0]) for i in long.duration.dropna()]\n# short['title']","2ca5ecda":"plt.figure(figsize=(14,7))\nplt.title('Top 20 longest movies')\nplt.tick_params(labelsize=14)\nsns.barplot(y=long['title'], x=long['duration'],alpha=0.6)\nplt.show()","f1c998ad":"tv_Shows = main_df[main_df['type']=='TV Show']\ntv_Shows","73bd74e7":"short = tv_Shows.sort_values('duration').iloc[:20]\nshort['duration'] = [int(i.split(' ')[0]) for i in short.duration.dropna()]\n# short['title']","4fdf737e":"short","08011dc0":"plt.figure(figsize=(14,7))\nplt.title('Top 20 shortes tv shows')\nplt.tick_params(labelsize=14)\nsns.barplot(y=long['title'], x=long['duration'],alpha=0.6)\nplt.show()","f8aa9528":"# Content growth throughout history","29bab2d1":"adapted from : https:\/\/www.kaggle.com\/radmirzosimov\/netflix-eda-with-plotly-seaborn","1d1ce44c":"# displaying a graph based on amount of content in country","83bf7777":"# Looking at the rating counts","fd289fef":"# looking at amount of TV shows vs movies","40d1c4a7":"tv ma is for mature audiences only.","e8e92718":"### Listing down the short movies","6eb523fe":"# displaying a bar for missing no","f0461ec2":"missing value in director and cast\n\n# display descriptions of values in columns","82d9233f":"# Lets look at the shows with a single season"}}