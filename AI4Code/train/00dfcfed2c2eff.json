{"cell_type":{"f88f38ad":"code","238080bd":"code","daefc8c5":"code","205d2f36":"code","96365a90":"code","1dbe2ce0":"code","c501a36b":"code","e25ca65c":"code","cd4dde69":"code","e57c6d45":"code","5324f84f":"markdown"},"source":{"f88f38ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","238080bd":"data = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")","daefc8c5":"data.drop([\"id\",\"Unnamed: 32\"],axis=1,inplace=True)\ndata.tail()","205d2f36":"M = data[data.diagnosis == \"M\"]\nB = data[data.diagnosis == \"B\"]\n# scatter plot\nplt.scatter(M.radius_mean,M.texture_mean,color=\"red\",label=\"kotu\",alpha= 0.3)\nplt.scatter(B.radius_mean,B.texture_mean,color=\"green\",label=\"iyi\",alpha= 0.3)\nplt.xlabel(\"radius_mean\")\nplt.ylabel(\"texture_mean\")\nplt.legend()\nplt.show()\n","96365a90":"data.diagnosis = [1 if each == \"M\" else 0 for each in data.diagnosis]\ny = data.diagnosis.values\nx_data = data.drop([\"diagnosis\"],axis=1)","1dbe2ce0":"# normalization \nx = (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data))","c501a36b":"# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.3,random_state=1)","e25ca65c":"# knn model\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3) # n_neighbors = k\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)\nprint(\" {} nn score: {} \".format(3,knn.score(x_test,y_test)))\n\ny_pred = knn.predict(x_test)\ny_true=y_test\n","cd4dde69":"#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm= confusion_matrix(y_true, y_pred)\n","e57c6d45":"#cm vizualization\n\nimport seaborn as sns \nf, ax =plt.subplots(figsize = (5,5))\n\nsns.heatmap(cm,annot = True, linewidths= 0.5, linecolor=\"red\", fmt=\".0f\", ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()\n","5324f84f":"**Sonuc**\nE\u011fitti\u011fim datadan 106 tanesi iyi huylu kanser h\u00fccresi iken 2 tanesi yanl\u0131\u015f bulunmu kanser h\u00fccresidir. 57 tanesi do\u011fru bulunmu\u015f k\u00f6t\u00fc huylu kanser h\u00fccresi iken 6 tanesi yanl\u0131\u015f bulunmu\u015f bir kanser h\u00fccresidir. 0.95 ba\u015far\u0131 oran\u0131na sahiptir."}}