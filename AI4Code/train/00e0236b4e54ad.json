{"cell_type":{"2aad3fd2":"code","814e0bfa":"code","0309abad":"code","950e13e5":"code","ad17fa5a":"code","00a9c264":"code","e0c8d528":"code","085ffa47":"code","91bc6d6f":"code","b92e5043":"code","451d5215":"code","cf4660f6":"code","c182b308":"code","1f04ac25":"code","382fc3c8":"code","6bc294b9":"markdown","4dfb2724":"markdown","497659bc":"markdown","6f456730":"markdown","07b3d5b1":"markdown","f801bf6d":"markdown","d504605a":"markdown","2b756f46":"markdown"},"source":{"2aad3fd2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom plotly import tools\nimport chart_studio.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom IPython.display import HTML, Image\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","814e0bfa":"hotel_df = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')","0309abad":"df = hotel_df.head(10)\ndf = df.loc[:, ['hotel','lead_time', \"arrival_date_year\", 'children', 'babies', 'meal', 'country']]\ntable = ff.create_table(df)\n\niplot(table, filename='pandas_table')","950e13e5":"hotel_df.info()","ad17fa5a":"df.describe().T","00a9c264":"def summary(df):\n    \n    types = df.dtypes\n    counts = df.apply(lambda x: x.count())\n    uniques = df.apply(lambda x: [x.unique()])\n    nas = df.apply(lambda x: x.isnull().sum())\n    distincts = df.apply(lambda x: x.unique().shape[0])\n    missing = (df.isnull().sum() \/ df.shape[0]) * 100\n    sk = df.skew()\n    krt = df.kurt()\n    \n    print('Data shape:', df.shape)\n\n    cols = ['Type', 'Total count', 'Null Values', 'Distinct Values', 'Missing Ratio', 'Skewness', 'Kurtosis']\n    dtls = pd.concat([types, counts, nas, distincts, missing, sk, krt], axis=1, sort=False)\n  \n    dtls.columns = cols\n    return dtls","e0c8d528":"details = summary(hotel_df)\ntable = ff.create_table(details)\niplot(table, filename='pandas_table')","085ffa47":"from IPython.display import Image\nImage('\/kaggle\/input\/symmimg\/651px-Relationship_between_mean_and_median_under_different_skewness.png')","91bc6d6f":"hotel_df.columns","b92e5043":"fig = ff.create_distplot([hotel_df.lead_time],['lead_time'],bin_size=10)\niplot(fig, filename='Lead Time Distplot')","451d5215":"hotel_df.head()","cf4660f6":"trace = go.Histogram(x=hotel_df['arrival_date_month'], marker=dict(color='rgb(0, 0, 100)'))\n\nlayout = go.Layout(\n    title=\"Month wise count of bookings\"\n)\n\nfig = go.Figure(data=go.Data([trace]), layout=layout)\niplot(fig, filename='histogram-freq-counts')","c182b308":"# get number of acutal guests by country\ncountry_data = pd.DataFrame(hotel_df.loc[hotel_df[\"is_canceled\"] == 0][\"country\"].value_counts())\ncountry_data.index.name = \"country\"\ncountry_data.rename(columns={\"country\": \"Number of Guests\"}, inplace=True)\ntotal_guests = country_data[\"Number of Guests\"].sum()\ncountry_data[\"Guests in %\"] = round(country_data[\"Number of Guests\"] \/ total_guests * 100, 2)\ntable = ff.create_table(country_data.head())\niplot(table, filename='pandas_table')","1f04ac25":"# show on map\nimport plotly.express as px\nguest_map = px.choropleth(country_data,\n                    locations=country_data.index,\n                    color=country_data[\"Guests in %\"], \n                    hover_name=country_data.index, \n                    color_continuous_scale=px.colors.sequential.Plasma,\n                    title=\"Home country of guests\")\nguest_map.show()","382fc3c8":"import plotly.express as px\nfig = px.scatter(hotel_df, x=\"arrival_date_month\", y=\"lead_time\", animation_frame=\"arrival_date_year\", animation_group=\"reserved_room_type\",\n           size=\"adults\", color=\"reserved_room_type\", hover_name=\"reserved_room_type\", facet_col=\"customer_type\")\nfig.show()","6bc294b9":"## Dataset\nDataset used for analysis is publicly hosted dataset in kaggle. Please find it here [Hotel Booking Demand](https:\/\/www.kaggle.com\/jessemostipak\/hotel-booking-demand).Data has the factors which contributes to a booking of hotel.This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and\/or babies, and the number of available parking spaces, among other things.","4dfb2724":"## Analyzing missing values in dataset","497659bc":"Skewness and Kurtosis show if the data is normally disctributed or not. If the skewness is equal to zero, the data is normally distributed, meaning it's symmetric. Negative values for the skewness indicate data that it's skewed left and it's left 'tail' is longer compare to the right one. And vice versa. If the data are multi-modal, then this may affect the sign of the skewness.\n\nMany classical statistical tests and intervals depend on normality assumptions. Significant skewness and kurtosis indicate that data is not normal and it needs to be normalized.","6f456730":"### Interactive table in plotly for selected columns and top 10 records.","07b3d5b1":"1.1 Distplot of lead time","f801bf6d":"## **This is a sample of my learning on EDA. Please upvote if it is helpful. Suggestions are also appreciated.**","d504605a":"### Load Dataset","2b756f46":"## 1. Distplots \n### Distplots are used for doing univariate analysis of continuous variables in dataset.  Following plosts will have kernel density  estimate(kde) and rug plotted on top of it."}}