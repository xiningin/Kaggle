{"cell_type":{"ba2cbac7":"code","deb01280":"code","bb7d3c64":"code","8d1aab15":"code","3fe206ca":"code","ae692bcd":"code","a5171c3c":"code","e9e06f68":"code","7273b605":"code","fa652ad5":"code","65508d29":"code","cda461f0":"code","3319f954":"code","028b1325":"code","9258f2d5":"code","17a829d1":"code","190f7ca8":"code","2f8bc535":"code","a9fe1334":"code","fcd05c1e":"code","02b6bb62":"code","2e09fd72":"code","1cfc5a72":"code","ef84f6db":"code","061bd415":"code","5315f9ae":"code","0dfd0108":"code","2cb9e879":"code","55134482":"code","33183acb":"code","45afdd10":"code","af0f2f34":"code","fc25393f":"code","a632e28b":"code","282b7ebd":"code","6fded3fc":"code","114838f3":"code","645eb6b7":"code","fbd36013":"code","882f3c3f":"code","b1bfb6dc":"code","71cc7eb2":"code","4ceed55c":"code","8dfa3f38":"code","04a95efc":"code","e5b71eef":"code","14dcda79":"code","f932765b":"code","36adb02d":"code","7ce5bba9":"code","83a167d4":"code","92384316":"code","dbff1833":"code","cb5cd80a":"code","1f143881":"code","5a2e5e5b":"code","f86b2213":"code","b0218ac7":"code","7c14a315":"code","99cc0593":"code","ca06ac4e":"code","2a312d61":"code","96bf1d11":"code","d004be76":"code","04d99a35":"code","b4268377":"code","e55ecb68":"code","c235e6a8":"code","fb79d2a2":"code","1da359cb":"code","558dcc6a":"code","cf4ca5a5":"code","35f83cf5":"code","75e0bf4e":"code","b6076f34":"code","10a1c242":"code","7b29d851":"code","ec13815b":"code","b33c729c":"code","21b78e7e":"code","4a8d34f8":"code","3276fa48":"code","b51f0f6d":"code","6da25092":"markdown","a6f8f675":"markdown","c9881727":"markdown","3ae55794":"markdown","e394ae74":"markdown","91822fef":"markdown","2f503e75":"markdown","24e89ac6":"markdown","8f8d6493":"markdown","339b7595":"markdown","0dab532d":"markdown","ff76a410":"markdown","c8832390":"markdown","7f1171c8":"markdown","e9f5664d":"markdown","cc13ed5d":"markdown","7730cf00":"markdown","4dc7780d":"markdown","67a0d9a2":"markdown","e5ea3c4a":"markdown","1c90af4e":"markdown","8dceff07":"markdown","4289c362":"markdown","2ec0b4b8":"markdown","2b32c67d":"markdown","63303c5f":"markdown","98d767d6":"markdown","1d44ea97":"markdown","f717ef66":"markdown","6d3ba309":"markdown","0f2425fc":"markdown","2ac5aa16":"markdown","8b3f493b":"markdown","117e1c30":"markdown","63ab1dc3":"markdown","080f9efe":"markdown","3bd10fd9":"markdown","bea55863":"markdown","e42c8cdc":"markdown","f15ee815":"markdown","3cb86b1d":"markdown","8e75ef9e":"markdown","eeb4c4c3":"markdown","e7f425cf":"markdown","bb4d8a6b":"markdown","aebc4013":"markdown","832fbd08":"markdown","8e3c724a":"markdown","17975ec9":"markdown","e21abb8d":"markdown","2a522ed8":"markdown","3af4383c":"markdown","ba20b154":"markdown","12428499":"markdown","7dc6887f":"markdown","0056f72d":"markdown","b9c6b24b":"markdown","df7f758e":"markdown","d5067a5f":"markdown","45fabac3":"markdown","28708758":"markdown","a1677829":"markdown","e7b9faea":"markdown","ebb5bcb4":"markdown","99fd59f1":"markdown","5cfafa1c":"markdown","7cc26075":"markdown","c605bd33":"markdown","93c82b07":"markdown","cc6c6243":"markdown","803b872d":"markdown","5a1d6593":"markdown","9251df5b":"markdown","c5ff6864":"markdown","33de60c5":"markdown","0991bb61":"markdown","351fd786":"markdown","33ca338e":"markdown","c494430b":"markdown","9d9aeacf":"markdown","fe17f1cf":"markdown","bb9cc487":"markdown","1c53cc37":"markdown","e6b9cf0a":"markdown","1380785d":"markdown","b7c1e22d":"markdown","31e4035d":"markdown","d5183a02":"markdown","b5db2576":"markdown","c3f43223":"markdown","e26f7c41":"markdown","c4cfee7a":"markdown","a5359419":"markdown","6095f32b":"markdown","7c2c6025":"markdown","e59eaa2a":"markdown","396ec881":"markdown","796d64d9":"markdown","268ba211":"markdown","97321cb1":"markdown","ca9ff86a":"markdown","1dc0e062":"markdown","b5008cfa":"markdown","0236b9cf":"markdown","93c74e4d":"markdown","97d5bc12":"markdown","8936eab1":"markdown","3ec6114d":"markdown","ce282c24":"markdown","730bd9ce":"markdown","d1d9336a":"markdown","5e0a4437":"markdown","b03694f2":"markdown","62f4feed":"markdown","67e96489":"markdown","b1d80571":"markdown","7874d228":"markdown","3de38d08":"markdown"},"source":{"ba2cbac7":"import pandas as pd\nimport numpy as np\npd.set_option('display.max_columns', 500) \npd.set_option('display.max_rows', 500) \n\n# Supress Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","deb01280":"df_application_backup = pd.read_csv(\"application_data.csv\")\ndf_Previous_backup = pd.read_csv(\"previous_application.csv\")","bb7d3c64":"df_application = pd.read_csv(\"application_data.csv\")\ndf_application.head()","8d1aab15":"df_previous = pd.read_csv(\"previous_application.csv\")\ndf_previous.head()","3fe206ca":"print('Size of application_data', df_application.shape)","ae692bcd":"df_application.columns.values","a5171c3c":"df_application.info(verbose= True)","e9e06f68":"df_application.describe()","7273b605":"100*df_application.isnull().sum()\/len(df_application)\n","fa652ad5":"df_application.drop(df_application.columns[(100*df_application.isnull().sum()\/len(df_application))>=50], axis=1, inplace= True)","65508d29":"df_application = df_application.drop(['FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3', 'FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6','FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9', 'FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12',\n       'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15','FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18','FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21','EXT_SOURCE_3',\n       'YEARS_BEGINEXPLUATATION_AVG', 'FLOORSMAX_AVG','YEARS_BEGINEXPLUATATION_MODE', 'FLOORSMAX_MODE','YEARS_BEGINEXPLUATATION_MEDI', 'FLOORSMAX_MEDI', 'TOTALAREA_MODE',\n       'EMERGENCYSTATE_MODE', 'OBS_30_CNT_SOCIAL_CIRCLE','DEF_30_CNT_SOCIAL_CIRCLE', 'OBS_60_CNT_SOCIAL_CIRCLE','DEF_60_CNT_SOCIAL_CIRCLE',\n       'AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_DAY','AMT_REQ_CREDIT_BUREAU_WEEK', 'AMT_REQ_CREDIT_BUREAU_MON','AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR',\n       'WEEKDAY_APPR_PROCESS_START', 'HOUR_APPR_PROCESS_START','REG_REGION_NOT_LIVE_REGION', 'REG_REGION_NOT_WORK_REGION','LIVE_REGION_NOT_WORK_REGION', 'REG_CITY_NOT_LIVE_CITY','REG_CITY_NOT_WORK_CITY', \n       'LIVE_CITY_NOT_WORK_CITY'],axis=1)\ndf_application.head()","cda461f0":"# Checking the column name and shape after dropping columns\nprint(df_application.columns)\nprint('Size of application_data', df_application.shape)","3319f954":"print(df_application.columns[100*df_application.isnull().sum()\/len(df_application) > 0].tolist())","028b1325":"# Columns having <=8 and OCCUPATION_TYPE,ORGANIZATION_TYPE are categorical columns others are continuous columns\ndf_application.nunique().sort_values()","9258f2d5":"#plotting Box plot to get outliers in order to get the values for outliers in order get imputing values for variables.\n\nplt.figure(1,figsize=(15,8)) \n\n# create 1st subplot:\nplt.subplot(2,2,1) \nplt.title('Annuity Amount')\nsns.boxplot(y=df_application[\"AMT_ANNUITY\"])\n\n# cretae 2nd subplot:\nplt.subplot(2,2,2) \nplt.title('Loan Amount')\nsns.boxplot(y=df_application[\"AMT_GOODS_PRICE\"])\n\n# cretae 3rd subplot:\nplt.subplot(2,2,3)\nplt.title('Family Members')\nsns.boxplot(y=df_application[\"CNT_FAM_MEMBERS\"])\n\n\n# Getting mean and medial for all 4 variables \nprint (df_application[\"AMT_ANNUITY\"].aggregate(['mean', 'median']))\nprint(df_application[\"AMT_GOODS_PRICE\"].aggregate(['mean', 'median']))\nprint(df_application[\"CNT_FAM_MEMBERS\"].aggregate(['mean', 'median']))\n","17a829d1":"# NAME_TYPE_SUITE column imputation\nplt.figure(figsize=(10,5))\nsns.countplot(x='NAME_TYPE_SUITE',data=df_application)\n\nprint(df_application.NAME_TYPE_SUITE.mode())","190f7ca8":"# OCCUPATION_TYPE column imputation\nplt.figure(figsize=(10,5))\nplt.xticks(rotation=90)\nsns.countplot(x='OCCUPATION_TYPE',data=df_application)\n\nprint(df_application.OCCUPATION_TYPE.mode())","2f8bc535":"df_application.dtypes","a9fe1334":"# converting DAYS_REGISTRATION and CNT_FAM_MEMBERS column datatype from Float64 to int64 as these cannot be float\ndf_application['DAYS_REGISTRATION']= df_application['DAYS_REGISTRATION'].astype('int64')\n\n# Removing rows for which CNT_FAM_MEMBERS values are missing, as these are very less(.000650%),beacuse for missing values while converting datatype it is throwing error.\ndf_application.dropna(subset=['CNT_FAM_MEMBERS'], inplace= True)\ndf_application['CNT_FAM_MEMBERS']= df_application['CNT_FAM_MEMBERS'].astype('int64')\n\n# Removing rows for which DAYS_LAST_PHONE_CHANGE values are missing, as these are very less(0.000325%),beacuse for missing values while converting datatype it is throwing error.\ndf_application.dropna(subset=['DAYS_LAST_PHONE_CHANGE'], inplace= True)\ndf_application['DAYS_LAST_PHONE_CHANGE']= df_application['DAYS_LAST_PHONE_CHANGE'].astype('int64')","fcd05c1e":"df_application.dtypes","02b6bb62":"# Converting negative values of DAYS_BIRTH, DAYS_EMPLOYED, DAYS_REGISTRATION, DAYS_ID_PUBLISH as it should be in positve\ncols_negative = ['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH','DAYS_LAST_PHONE_CHANGE']\n\nfor i in cols_negative:\n    df_application[i] = df_application[i].apply(lambda x: round(abs(x)))","2e09fd72":"df_application.head()","1cfc5a72":"\nplt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\nsns.boxplot(df_application[\"AMT_INCOME_TOTAL\"])\n\n\nplt.subplot(2,2,2) \nsns.distplot(df_application[\"AMT_INCOME_TOTAL\"])\n\n\n# After removing outliers\nplt.subplot(2,2,3)\nsns.boxplot(df_application[df_application[\"AMT_INCOME_TOTAL\"]<800000][\"AMT_INCOME_TOTAL\"])\nplt.show()\n","ef84f6db":"plt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\nsns.boxplot(df_application[\"AMT_CREDIT\"])\nplt.title('Credit Amount')\n\n\nplt.subplot(2,2,2) \nsns.distplot(df_application[\"AMT_CREDIT\"])\n\n\n# After removing outliers\nplt.subplot(2,2,3)\nsns.boxplot(df_application[df_application[\"AMT_CREDIT\"]<2300000][\"AMT_CREDIT\"])\nplt.show()","061bd415":"plt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\nsns.boxplot(y=df_application[\"AMT_ANNUITY\"])\nplt.title('Annuity Amount')\n\n# Imputimg Null values with median to draw distplot\nplt.subplot(2,2,2)\ndf_application['AMT_ANNUITY'].fillna((df_application['AMT_ANNUITY'].median()), inplace=True) \nsns.distplot(df_application[\"AMT_ANNUITY\"])\n\n# After removing outliers\nplt.subplot(2,2,3)\nsns.boxplot(df_application[df_application[\"AMT_ANNUITY\"]<80000][\"AMT_ANNUITY\"])\nplt.title('Annuity Amount')\nplt.show()","5315f9ae":"plt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\nsns.boxplot(y=df_application[\"AMT_GOODS_PRICE\"])\nplt.title('Loan Amount')\n\n# Imputimg Null values with median to draw distplot\nplt.subplot(2,2,2)\ndf_application['AMT_GOODS_PRICE'].fillna((df_application['AMT_GOODS_PRICE'].median()), inplace=True) \nsns.distplot(df_application[\"AMT_GOODS_PRICE\"])\n\n# After removing outliers\n\nplt.subplot(2,2,3)\nsns.boxplot(df_application[df_application[\"AMT_GOODS_PRICE\"]<1850000][\"AMT_GOODS_PRICE\"])\nplt.title('Loan Amount')\nplt.show()","0dfd0108":"sns.boxplot(x=df_application['DAYS_BIRTH'])","2cb9e879":"df_application['AMT_INCOME_TOTAL'].describe()","55134482":"# Binning based quantiles\ndf_application['Income_lable']= pd.cut(df_application['AMT_INCOME_TOTAL'],[25649.999,112500.0,147150.0,202500.0,117000000.0],labels = ['Poor','Low', 'medium', 'High'])\ndf_application","33183acb":"# Visualization for Binning column\nx,y = 'Income_lable', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","45afdd10":"df_application['DAYS_BIRTH']= df_application['DAYS_BIRTH']\/356\ndf_application['DAYS_BIRTH']= df_application['DAYS_BIRTH'].astype('int64')\ndf_application['Age']= pd.cut(df_application['DAYS_BIRTH'],[0,30,50,70],labels = ['Young','Adult','Old'])\ndf_application.Age","af0f2f34":"x,y = 'Age', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)\ndf1","fc25393f":"temp = df_application[\"TARGET\"].value_counts()\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.axis('equal')\nax.pie(temp.values, labels= temp.index,autopct='%1.2f%%')\nplt.title('Loan Repaid or not')\nplt.show()","a632e28b":"df_0= df_application[df_application['TARGET']==0]\ndf_1 = df_application[df_application['TARGET']==1]","282b7ebd":"df_0.head()","6fded3fc":"df_1.head()","114838f3":"\nx,y = 'NAME_INCOME_TYPE', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nplt.title('Income Type')\nplt.show()\n\ndf1\n","645eb6b7":"x,y = 'NAME_FAMILY_STATUS', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","fbd36013":"x,y = 'OCCUPATION_TYPE', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","882f3c3f":"x,y = 'CODE_GENDER', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nplt.show()\ndf1","b1bfb6dc":"x,y = 'NAME_CONTRACT_TYPE', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","71cc7eb2":"x,y = 'NAME_EDUCATION_TYPE', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","4ceed55c":"# Owning Car\nx,y = 'FLAG_OWN_CAR', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=20\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)\n\n# Owning Realty\n\nx,y = 'FLAG_OWN_REALTY', 'TARGET'\n\ndf1 = df_application.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=20\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","8dfa3f38":"income_type=['Maternity leave','Unemployed','Working','Commercial associate']\n\nfor i in income_type:\n    g = sns.catplot(x='NAME_FAMILY_STATUS', hue='TARGET', col= 'Age',col_wrap=3,kind='count',data=df_application[df_application['NAME_INCOME_TYPE']==i],aspect=1)\n    plt.xticks(rotation=90)\n    plt.show()\n    ","04a95efc":"income_type=np.delete(df_application['OCCUPATION_TYPE'].unique(), 4)\ngenders=['M']\nfor i in income_type:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['OCCUPATION_TYPE']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,orient='v' ,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(i + '_' + gender)\n            plt.xticks(rotation= 90)\n            plt.show()\n    ","e5b71eef":"income_type=np.delete(df_application['OCCUPATION_TYPE'].unique(), 4)\ngenders=['F']\nfor i in income_type:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['OCCUPATION_TYPE']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,orient='v' ,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(i + '_' + gender)\n            plt.xticks(rotation=90)\n            plt.show()\n    ","14dcda79":"income_type=np.delete(df_application['OCCUPATION_TYPE'].unique(), 4)\ngenders=['XNA']\nfor i in income_type:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['OCCUPATION_TYPE']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,orient='v' ,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(i + '_' + gender)\n            plt.xticks(rotation=90)\n            plt.show()","f932765b":"income_label=df_application.Income_lable.astype('str').unique()\nfor i in income_label:\n    g = sns.catplot(x='NAME_FAMILY_STATUS', hue='TARGET', col= 'Age',col_wrap=3,orient='v' ,kind='count',data=df_application[df_application.Income_lable==i],aspect=1)\n    plt.title(i )\n    plt.xticks(rotation=90)\n    plt.show()","36adb02d":"# Analysis for Male customers\nREGION_RATING_CLIENT=df_application['REGION_RATING_CLIENT'].unique()\nREGION_RATING_CLIENT\ngenders=['M']\nfor i in REGION_RATING_CLIENT:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['REGION_RATING_CLIENT']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(str(i) + '_' + gender)\n            plt.xticks(rotation=90)\n            plt.show()","7ce5bba9":"# Analysis for Female customers\n\nREGION_RATING_CLIENT=df_application['REGION_RATING_CLIENT'].unique()\nREGION_RATING_CLIENT\n# df_application[df_application['REGION_RATING_CLIENT']==3] REGION_RATING_CLIENT_W_CITY\ngenders=['F']\nfor i in REGION_RATING_CLIENT:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['REGION_RATING_CLIENT']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(str(i) + '_' + gender)\n            plt.xticks(rotation=90)\n            plt.show()","83a167d4":"# Analysis for XNA customers\n\nREGION_RATING_CLIENT=df_application['REGION_RATING_CLIENT'].unique()\nREGION_RATING_CLIENT\ngenders=['XNA']\nfor i in REGION_RATING_CLIENT:\n    for gender in genders:\n        temp_dataframe = df_application[df_application['REGION_RATING_CLIENT']==i][df_application['CODE_GENDER']==gender]\n        if len(temp_dataframe) > 0:\n            g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,kind='count',data=temp_dataframe,aspect=1)\n            plt.title(str(i) + '_' + gender)\n            plt.xticks(rotation=90)\n            plt.show()","92384316":"# df_application\n\nREGION_RATING_CLIENT_W_CITY=df_application['REGION_RATING_CLIENT_W_CITY'].unique()\nREGION_RATING_CLIENT_W_CITY\n\nfor i in REGION_RATING_CLIENT_W_CITY:\n    temp_dataframe = df_application[df_application['REGION_RATING_CLIENT']==i]\n    if len(temp_dataframe) > 0:\n        g = sns.catplot(x='NAME_FAMILY_STATUS',margin_titles=True , hue='TARGET', col= 'Age',col_wrap=3,kind='count',data=temp_dataframe,aspect=1)\n        plt.title(i)\n        plt.xticks(rotation=90)\n        plt.show()","dbff1833":"var_numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\ncorr_1 = (df_1.select_dtypes(include=var_numerics)).corr().abs()\ncorr_1 = pd.DataFrame(corr_1.unstack()).reset_index()\ncorr_1.columns = ['FEATURE_1', 'FEATURE_2', 'CORRELATION']\ndup = (corr_1[['FEATURE_1', 'FEATURE_2']].apply(frozenset, axis=1).duplicated()) | (corr_1['FEATURE_1']==corr_1['FEATURE_2']) \ncorr_1 = corr_1[~dup]\nprint(corr_1.nlargest(10,['CORRELATION']))","cb5cd80a":"var_numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\ncorr_1 = (df_0.select_dtypes(include=var_numerics)).corr().abs()\ncorr_1 = pd.DataFrame(corr_1.unstack()).reset_index()\ncorr_1.columns = ['FEATURE_1', 'FEATURE_2', 'CORRELATION']\ndup = (corr_1[['FEATURE_1', 'FEATURE_2']].apply(frozenset, axis=1).duplicated()) | (corr_1['FEATURE_1']==corr_1['FEATURE_2']) \ncorr_1 = corr_1[~dup]\nprint(corr_1.nlargest(10,['CORRELATION']))","1f143881":"plt.figure(figsize = (15, 30))\nplt.subplot(5,2,1)\nsns.scatterplot(x='DAYS_EMPLOYED', y='FLAG_EMP_PHONE', data=df_0)\n\nplt.subplot(5,2,2)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_GOODS_PRICE', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,3)\nsns.scatterplot(x='REGION_RATING_CLIENT', y='REGION_RATING_CLIENT_W_CITY', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,4)\nsns.scatterplot(x='CNT_CHILDREN', y='CNT_FAM_MEMBERS', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,5)\nsns.scatterplot(x='AMT_ANNUITY', y='AMT_GOODS_PRICE', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,6)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_ANNUITY', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,7)\nsns.scatterplot(x='DAYS_BIRTH', y='DAYS_EMPLOYED', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,8)\nsns.scatterplot(x='DAYS_BIRTH', y='FLAG_EMP_PHONE', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,9)\nsns.scatterplot(x='REGION_POPULATION_RELATIVE', y='REGION_RATING_CLIENT', data=df_0)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,10)\nsns.scatterplot(x='REGION_POPULATION_RELATIVE', y='REGION_RATING_CLIENT_W_CITY', data=df_0)\nplt.xticks(rotation=90)\n","5a2e5e5b":"plt.figure(figsize = (15, 30))\nplt.subplot(5,2,1)\nsns.scatterplot(x='DAYS_EMPLOYED', y='FLAG_EMP_PHONE', data=df_1)\n\nplt.subplot(5,2,2)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_GOODS_PRICE', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,3)\nsns.scatterplot(x='REGION_RATING_CLIENT', y='REGION_RATING_CLIENT_W_CITY', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,4)\nsns.scatterplot(x='CNT_CHILDREN', y='CNT_FAM_MEMBERS', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,5)\nsns.scatterplot(x='AMT_ANNUITY', y='AMT_GOODS_PRICE', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,6)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_ANNUITY', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,7)\nsns.scatterplot(x='DAYS_BIRTH', y='DAYS_EMPLOYED', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,8)\nsns.scatterplot(x='DAYS_BIRTH', y='FLAG_EMP_PHONE', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,9)\nsns.scatterplot(x='REGION_POPULATION_RELATIVE', y='REGION_RATING_CLIENT', data=df_1)\nplt.xticks(rotation=90)\n\nplt.subplot(5,2,10)\nsns.scatterplot(x='REGION_POPULATION_RELATIVE', y='REGION_RATING_CLIENT_W_CITY', data=df_1)\nplt.xticks(rotation=90)\n","f86b2213":"f, axs = plt.subplots(1,2,figsize=(15,8))\nplt.subplot(2,1,1)\nsns.distplot(df_1['AMT_CREDIT'].dropna(), hist = False, label = \"Defaulter\", color = 'red')\nplt.subplot(2,1,1)\nsns.distplot(df_0['AMT_CREDIT'].dropna(), hist = False, label = \"Non Defaulter\", color = 'green')\nplt.show()\n","b0218ac7":"f, axs = plt.subplots(1,2,figsize=(15,8))\nplt.subplot(2,1,1)\nsns.distplot(df_1['AMT_ANNUITY'].dropna(), hist = False, label = \"Defaulter\", color = 'red')\nplt.subplot(2,1,1)\nsns.distplot(df_0['AMT_ANNUITY'].dropna(), hist = False, label = \"Non Defaulter\", color = 'green')\nplt.show()\n","7c14a315":"f, axs = plt.subplots(1,2,figsize=(15,8))\nplt.subplot(2,1,1)\nsns.distplot(df_1['AMT_GOODS_PRICE'].dropna(), hist = False, label = \"Defaulter\", color = 'red')\nplt.subplot(2,1,1)\nsns.distplot(df_0['AMT_GOODS_PRICE'].dropna(), hist = False, label = \"Non Defaulter\", color = 'green')\nplt.show()","99cc0593":"f, axs = plt.subplots(1,2,figsize=(15,8))\nplt.subplot(2,1,1)\nsns.distplot(df_1['DAYS_BIRTH'].dropna(), hist = False, label = \"Defaulter\", color = 'red')\nplt.subplot(2,1,1)\nsns.distplot(df_0['DAYS_BIRTH'].dropna(), hist = False, label = \"Non Defaulter\", color = 'green')\nplt.show()\n","ca06ac4e":"sns.boxplot(x='TARGET', y='DAYS_BIRTH', data=df_application)\nplt.show()","2a312d61":"sns.boxplot(x='TARGET', y = 'EXT_SOURCE_2', data=df_application)\nplt.show()","96bf1d11":"sns.boxplot(x='TARGET', y='REGION_POPULATION_RELATIVE', data=df_application)\nplt.show()","d004be76":"# Getting size of previous application\nprint('Size of application_data', df_previous.shape)","04d99a35":"# Getting column info\ndf_previous.info()","b4268377":"df_previous.describe()","e55ecb68":"# Getting missing values\n100*df_previous.isnull().sum()\/len(df_previous)","c235e6a8":"# Dropping column having >= 20 % missing values\ndf_previous.drop(df_previous.columns[(100*df_previous.isnull().sum()\/len(df_previous))>=20], axis=1, inplace= True)","fb79d2a2":"df_previous.columns","1da359cb":"df_previous.shape","558dcc6a":"100*df_previous.isnull().sum()\/len(df_previous)","cf4ca5a5":"df_previous.info()","35f83cf5":"# Impute method for PRODUCT_COMBINATION\nprint(df_previous['PRODUCT_COMBINATION'].mode())\n\nplt.figure(figsize=(15,8))\nsns.countplot(x='PRODUCT_COMBINATION',data=df_previous)\nplt.xticks(rotation=90)\nplt.show()","75e0bf4e":"# Impute method for AMT_CREDIT\nplt.figure(figsize=(15,8))\nsns.boxplot(y=df_previous[\"AMT_CREDIT\"])\nplt.title('Approved Loan Amount')\nplt.show()\n\ndf_previous['AMT_CREDIT'].aggregate(['mean', 'median'])","b6076f34":"plt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\nsns.boxplot(y=df_previous[\"AMT_APPLICATION\"])\nplt.title('Applied Loan Amount')\n\nplt.subplot(2,2,2)\nsns.distplot(df_previous[\"AMT_APPLICATION\"])\n\n\n# After removing outliers\n\nplt.subplot(2,2,3)\nsns.boxplot(df_previous[df_previous[\"AMT_APPLICATION\"]<2200000][\"AMT_APPLICATION\"])\nplt.title('Net Price')\nplt.show()","10a1c242":"plt.figure(figsize=(15,8))\nplt.subplot(2,2,1)\n#plt.figure(figsize=(15,8))\nsns.boxplot(y=df_previous[\"AMT_CREDIT\"])\nplt.title('Approved Loan Amount')\n\n# Imputimg Null values with median to draw distplot\nplt.subplot(2,2,2)\ndf_previous['AMT_CREDIT'].fillna((df_application['AMT_CREDIT'].median()), inplace=True) \nsns.distplot(df_previous[\"AMT_CREDIT\"])\n\n# After removing outliers\nplt.subplot(2,2,3)\nsns.boxplot(df_previous[df_previous[\"AMT_CREDIT\"]<2000000][\"AMT_CREDIT\"])\nplt.title('Approved Price')\nplt.show()","7b29d851":"# for Previous application having only required Columns\ndf_previous = df_previous[['SELLERPLACE_AREA','NFLAG_LAST_APPL_IN_DAY','SK_ID_CURR','NAME_CONTRACT_STATUS','CODE_REJECT_REASON','NAME_CLIENT_TYPE','CHANNEL_TYPE','NAME_YIELD_GROUP','PRODUCT_COMBINATION']]\ndf_final = pd.merge(df_application,df_previous,how='inner',on='SK_ID_CURR')","ec13815b":"df_final.head()","b33c729c":"print(df_final.shape)","21b78e7e":"x,y =  'TARGET', 'NAME_CONTRACT_STATUS'\n\ndf1 = df_final.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=20\/10)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nplt.title('Application status in terms of Loan paid or not')\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)\n    ","4a8d34f8":"x,y =  'NAME_CLIENT_TYPE','NAME_CONTRACT_STATUS'\n\ndf1 = df_final.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=20\/10)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\nplt.title('Application status in terms of Loan paid or not')\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)\n    ","3276fa48":"\nx,y = 'NAME_INCOME_TYPE', 'NAME_CONTRACT_STATUS'\n\ndf1 = df_final.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\n\nplt.show()\ndf1","b51f0f6d":"x,y = 'CODE_GENDER', 'NAME_CONTRACT_STATUS'\n\ndf1 = df_final.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent').reset_index()\n\ng = sns.catplot(x=x,y='percent',hue=y,kind='bar',data=df1,aspect=15\/8.27)\ng.ax.set_ylim(0,100)\n\nplt.xticks(rotation=90)\n\nplt.show()\ndf1","6da25092":"##### Observation\n- ###### Percentage of application approved for New applicants is more and for XNA is less.\n- ###### Percentage of application refused for New applicants is less and for Repeater is more.\n- ###### Percentage of application canceled for New applicants is very less and for refreshed is more.","a6f8f675":"###### Outlier observation: \n`As per boxplot and distplot AMT_INCOME_TOTAL>800000 are outliers`","c9881727":"##### Observation\n- ###### Percentage of application approved for Students is more and unemployed is less.\n- ###### Percentage of application canceled for prisoner is more and is less for Maternity leave and students.\n- ###### Percentage of application refused for New applicants is more and is less for student.","3ae55794":"###### Observation:\n-   ##### 94.52 % of Revolving loans and 91.65% of Cash loan is getting paid without any difficulties. \n-   ##### Revolving Loan are getting paid more than cash loans ","e394ae74":"###### 4.5.2 AMT_CREDIT","91822fef":"### 5.7 Numerical Bivariate analysis","2f503e75":"###### Outlier observation: \n`As per boxplot there are no outliers for DAYS_BIRTH`","24e89ac6":"### 5.4.2 Multi varient analysis based on OCCUPATION_TYPE ratio based on gender","8f8d6493":"###### Observation\n- ######  Applicants with higher score have less payment difficulties","339b7595":"###### 4.4.1 Checking Datatype","0dab532d":"###### Observation:\n`1) 100% Businessmen and students are paying loan amount on time or we can say do not have any payment difficulties`\n\n`2) 40% of Maternity Leave and 36.36% of Unemployed are Defaulters or have payment difficulties`\n\n`3) Most of the people who are working as Commercial associate or pensioner or state servant or belong to working class are paying their installment on time`","ff76a410":"### 5.6 Numerical Univariate analysis","c8832390":"###### TARGET v\/s DAYS_BIRTH","7f1171c8":"###### 4.3.3 Categorical column","e9f5664d":"###### 4.2.2 Removing colums which are not important for analysis","cc13ed5d":"### 4.2 Removing coulmns ","7730cf00":"### 2.3 importing Previous application","4dc7780d":"###### 4.5.4 AMT_GOODS_PRICE","67a0d9a2":"### 5.4 Multi-Varient analysis for Categorical Variables with respect to TARGET","e5ea3c4a":"`Its highly imbalance as for Non Defaulters it's very high 91.93% and for Defaulters are only 8.07%`","1c90af4e":"###### 5.3.6 Education of Applicant's in terms of loan is paid or not","8dceff07":"### 4.4 Checking Datatype and converting","4289c362":"###### Outlier observation: \n`As per boxplot and distplot AMT_CREDIT>2000000 are outliers`","2ec0b4b8":"###### 4.5.1 AMT_INCOME_TOTAL","2b32c67d":"###### Observation:\n-   ##### XNA's are not facing any issues in payment. 100% of XNA are paying loan\n-   ##### 93% of Male applier are not having issue in paying loan\n-   ##### Hence Mail and XNA are able to pay the loan amount.","63303c5f":"###### 5.6.4 Distribution of Age with respect to TARGET","98d767d6":"###### Observation\n- ###### Applicants from region 1 are less likely to have issues while paying Loan","1d44ea97":"###### 4.6.1 Binning  'DAYS_BIRTH' ","f717ef66":"#### 5.4.2.3 for gender = XNA ","6d3ba309":"### 5.4.2.6 REGION_RATING_CLIENT_W_CITY Vs REGION_RATING_CLIENT vs Age","0f2425fc":"#### Observations:\n- ###### Married Women in age of 30-50(Adult) and working as `Low skilled labour or Waiter or Security Staff` is high changes of `Risk or having issues with payment on time`","2ac5aa16":"###### Outlier observation: \n`As per boxplot and distplot AMT_GOOD_PRICE>1850000 are outliers`\n","8b3f493b":"###### Observation:\n`from the graph we can observer all the results are almost same so we cannot get defaulter pattern from family status column`","117e1c30":"###### Observation:\n-   ##### After getting INSIGHT for top 10 corelation below Variables are having top 4 casuation\n-   ##### AMT_CREDIT & AMT_GOODS_PRICE are directly proportinal\n-   ##### CNT_CHILDREN & CNT_FAM_MEMBERS are directly proportinal\n-   ##### AMT_ANNUITY & AMT_GOODS_PRICE are directly proportinal\n-   ##### AMT_CREDIT & AMT_ANNUITY are directly proportinal","63ab1dc3":"###### Observation:\n-   ##### After getting INSIGHT for top 10 corelation below Variables are having top 4 casuation\n-   ##### AMT_CREDIT & AMT_GOODS_PRICE are directly proportinal\n-   ##### CNT_CHILDREN & CNT_FAM_MEMBERS are directly proportinal\n-   ##### AMT_ANNUITY & AMT_GOODS_PRICE are directly proportinal\n-   ##### AMT_CREDIT & AMT_ANNUITY are directly proportinal","080f9efe":"## 3. Checking structure of data in Application file","3bd10fd9":"- ###### As Amount Credit is having lot of Outliers,hence missing values can be updated with Median (80541)","bea55863":"#### Above count graphs are on on following columns\n-    `Age groups`\n-    `Family Status`\n-    `Income Type`\n-    `Target (able to pay loan emi on time)`\n\n#### Observations\n1) Married people having income type as 'Maternity leave','Unemployed' and in age group of 30-50 (Adult) are risk to give loan as they have high number of issues in loan repayment\n\n2) Unemployed people with relationship status as single,window, Saperated or civil marriage under age of 50 pays their loan emi on time\n\n3) Mostly Working Married couple in age of 30-50 apply for loan and probability of getting result is high ","e42c8cdc":"### Observation:\n-    Married males working for `Realty or as a Low skilled labours` has high probability of `having issue in returning the loan amount`\n-    Males working as `HR professional` and in `age more than 30 has` more changes of `paying loan on time`","f15ee815":"#### 5.4.2.1 for gender = Male ","3cb86b1d":"- ###### As cash is having the mode of the column null values can be imputed with Cash","8e75ef9e":"###### EXT_SOURCE_2 v\/s TARGET","eeb4c4c3":"###### 4.5.5 DAYS_BIRTH","e7f425cf":"###### 5.3.3 Occupation of Applicant's in terms of loan is repayed or not in %","bb4d8a6b":"###### Outlier observation: \n`As per boxplot and distplot AMT_ANNUITY>80000 are outliers`","aebc4013":"###### Observation\n- ######  The data spread for client's with no payment difficulties is in the higher populated regions.","832fbd08":"# Final Conclusion from analysis\n\n### Based on all analysis on provided data we conclude there are 3 types of applicants available\n\n\n#### 1) Good Applicant (Normal interest Rate)\n\n-    Previously had no issues in payment\n\n-    Lives in or from Region 1\n\n-    Male applicants he should be part of core staff, Accountants or manager, and age is more than 50\n\n-    For old age Females applicants with age more than 50 should be `labor, Core staff, Accountants, Managers, Drivers, Sales Staff, Private Service staff, Medical Staff, High skill labor, reality agent, Secretaries, IT staff or HR staff and Not Married`\n\n-    `Male in age from 30-50 working as HR`\n\n-    Applicants who have not defined their gender\n\n\n#### 2) Risk (High interest Rate)\n\n-    Previously had no issues in payment\n\n-    Can live in any region\n\n-    Married male in age group of 30-50 `Not working as Low Skill Labor, Reality Agent, Security Staff, Labors, Accountants, Drivers`\n\n-    Married female applicants in age between 30-50 and `Not working in IT, Low skill labor, Waiter\/barmen , Security Staff, cleaning or sales`\n\n\n#### 3) Reject\n\n-    Previously had payment issue\n\n-    Applicant is `Married` and `Maternity leave and in age group of 30-50`.\n\n-    Applicant is `Married` in age group if `20-50 and Unemployed`.\n\n-    Applicant is `unemployed` and in `age group of more than 50`.\n\n\n\n\n","8e3c724a":"#### 4.3 Missing Value Imputation","17975ec9":"### Observations\n\n-   `Female customer of age 30-50 (Adult) from Region id 1 are more likly to pay EMI on time`\n-   `Married Female customer of age 30-50 (Adult) from Region 2 and 3 are more likly to be defaulter and should be given loan on higher rate of intereat`","e21abb8d":"###### 6.4.1 AMT_APPLICATION","2a522ed8":"### 2.1 Backup of application and previous application file","3af4383c":"### 5.4.1 Below count graphs are on on following columns\n-    `Age groups`\n-    `Family Status`\n-    `Income Type`\n-    `Target (able to pay loan emi on time)`\n","ba20b154":"### 5.1 Imbalance percentage","12428499":"#### Above count graphs are on on following 5 columns\n-    `Age groups`\n-    `Family Status`\n-    `OCCUPATION_TYPE`\n-    `Gender`\n-    `Target (able to pay loan emi on time)`","7dc6887f":"###### 5.3.7 owning CAR or Reality in terms of loan is paid or not","0056f72d":"###### REGION_POPULATION_RELATIVE v\/s TARGET","b9c6b24b":"###### 5.6.2 Distribution of AMT_ANNUITY","df7f758e":" ### 6.1 Checking structure of data in Previous Application","d5067a5f":"### Observations\n\n-   `Male customer of age 30-50 (Adult) from Region id 1 are more likly to pay EMI on time`\n-   `Married male customer of age 30-50 (Adult) from Region 2 and 3 are more likly to be defaulter and should be given loan on higher rate of intereat`","45fabac3":"###### 5.5.1 For deaulters(TARGET=1)","28708758":"### 8.1 TARGET in terms of previous status of loan","a1677829":"### 8.2  Type Client type in terms of previous status of loan","e7b9faea":"###### 5.6.1 Distribution of AMT_CREDIT","ebb5bcb4":"###### 5.3.2 Family Status of Applicant's in terms of loan is repayed or not in %","99fd59f1":"### 6.2 Missing Valus for Previous Application data","5cfafa1c":"###### Observation:\n-   ##### People owning car or Realty are having around same ratio in case of facing issue and paying back loan amount","7cc26075":"##### Observation:\n- ###### AMT_GOODS_PRICE for both defaulter and non defaulter  lies between same interval","c605bd33":"### 5.4.2.5 below multivarient  analysis is based on following column \n-    'Age Group'\n-    'Gender'\n-    'REGION_RATING_CLIENT'\n-    'Family Status'\n\nWe will try to figure out which customer has issue in payment based on the above values","93c82b07":"### Observation:\n- ###### People who havent defined their gender are more likly to pay their loan on time","cc6c6243":"###### Observation:\n-   ##### let us take 10% as the threshold limit below which bank is allowed to take risk and more than that its an risk to give loan\n-   ##### Considering people in occupataion where they are facing issues in payment are Coocking staff, Drivers, Laborers, Low-skill Laboures, Security staff, waiters\/barmen staff \n-   ##### All other occupation type is able to pay on time\n-   ##### People working as Accountant are repaying their loan amount on time","803b872d":"###### 5.5.2 For Non deaulters (TARGET =0)","5a1d6593":"###### 5.5.3 Visual INSIGHT for top 10 corelation in terms of non Defaulter","9251df5b":"###### Observation:\n-   ##### Corelation between DAYS_EMPLOYED & FLAG_EMP_PHONE,AMT_CREDIT & AMT_GOODS_PRICE, REGION_RATING_CLIENT & REGION_RATING_CLIENT_W_CITY, CNT_CHILDREN & CNT_FAM_MEMBERS, AMT_ANNUITY & AMT_GOODS_PRICE and AMT_CREDIT &AMT_ANNUITY are around same with respect to TARGET\n-   ##### Corelation other than above variables having difference with respect to TARGET\n","c5ff6864":"##### Observation\n- ###### Percentage of application approved for male and female is around same and less for XNA.\n- ###### Percentage of application canceled for Male is more and is less for XNA.\n- ###### Percentage of application refused for XNA is more.\n- ###### There is no unused offer for XNA","33de60c5":"###### 5.3.5 Type of loan applied in terms of loan is paid or not","0991bb61":"### 8.3 Income Type in terms of application status","351fd786":"## 2. Importing data files","33ca338e":"##### Observation:\n- ###### AMT_ANNUITY for both defaulter and non defaulter  lies between same interval","c494430b":"## 1. Import the libraries","9d9aeacf":"##### Imputation Method:\n- ###### For Categorical column we can impute missing values with value of mode:\n\n- ###### For NAME_TYPE_SUITE missing values should be imput with \"Unaccompanied\"\n\n- ###### For OCCUPATION_TYPE missing values should be imput with \"Laborers\"","fe17f1cf":"## 6. Analysing previous application data","bb9cc487":"### 5.4.2.4 analysis based in Income_lable","1c53cc37":"###### 4.4.3 converting negative values of columns to postive values","e6b9cf0a":"###### 5.5.4 Visual INSIGHT for top 10 corelation in terms of Defaulter","1380785d":"### 4.1 Percentage of missing values columnwise","b7c1e22d":"## 5. Analysis","31e4035d":"### 2.2  importing Application file","d5183a02":"###### 4.5.3 AMT_ANNUITY","b5db2576":"###### 6.4.1 AMT_CREDIT","c3f43223":"### 5.3 Univariate analysis for Categorical variables with respect to TARGET","e26f7c41":"##### Imputation Menthod\n- ###### As per Box plot its clearly visible that AMT_ANNUITY is having less ouliers where as AMT_GOODS_PRICE is having more outlires, hence missing values can br imputed as below:\n\n- ###### AMT_ANNUITY is having more outlires so missing values can be imputed with median value which is 24903\n\n- ###### AMT_GOODS_PRICE is having more outlires so missing values can be imputed with median value which is 450000\n\n- ###### CNT_FAM_MEMBERS is having less outlires so missing values can be imputed with mean value which is 2 after rounding off.\n","c4cfee7a":"###### 4.3.1 Getting columns having missing values","a5359419":"### 4.5 Check for outliers","6095f32b":"###### 4.3.1 Getting continuous and categorical columns","7c2c6025":"#### 5.4.2.2 for gender = Female ","e59eaa2a":"###### Observation:\n-   ##### People having lower secondry education are facing issues in payment\n-   ##### Peolple having academic degree are not facing much issue in payemnt only 1.83% are facing issue in paying loan.","396ec881":"### 6.4 Outliers in Previous Application","796d64d9":"###### 4.6.1 Binning  'AMT_INCOME_TOTAL' based on quantile","268ba211":"## 7. Merging both Application and Previous Application","97321cb1":"## 4. Missing Values and Data Quality check","ca9ff86a":"### 6.3 Missing Value Imputation","1dc0e062":"###### 4.2.1Removing coulmns with high missing percentage ","b5008cfa":"### 4.6 Binning","0236b9cf":"### Observations\n\n-   `Customer who havent defined gender are more likly to pay loan on time`\n","93c74e4d":"##### Observation\n- ###### 63.41% application are approved for which there is no issue in payment.\n- ###### 54.96% application are approved for which there is issue in payment.","97d5bc12":"### 5.5 Corelation","8936eab1":"###### 5.3.1 Income sources of Applicant's in terms of loan is repayed or not in %","3ec6114d":"###### Outlier observation: \n`As per boxplot and distplot AMT_APPLICATION>2200000 are outliers`","ce282c24":"###### 5.3.4 Gender of applicatns  in terms of loan paid or not","730bd9ce":"###### Outlier observation: \n`As per boxplot and distplot AMT_CREDIT>2300000 are outliers`","d1d9336a":"###### 4.4.2 Converting datatype","5e0a4437":"### 5.2 Dividing dataset in two dataframe \n\n- ###### With Target Value= 1\n\n- ###### With Target value= 0","b03694f2":"### 8.4 Code_ Gender in terms of application status","62f4feed":"## 8. Univariate Analysis for merged dataframe","67e96489":"###### 5.6.3 Distribution of AMT_GOODS_PRICE with respect to TARGET","b1d80571":"###### Observation\n- ###### Mean for non defaulters is more than Defaulter\n- ###### Younger applicants face more payment difficulties, compared to older ones","7874d228":"##### Observation:\n- ###### Age of most of the people for defaulter lies between 21 to 45\n- ###### Age of most of the people for non defaulter lies between 21 to 60","3de38d08":"##### Observation:\n- ###### AMT_CREDIT for both defaulter and non defaulter  lies between same interval"}}