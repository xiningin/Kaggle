{"cell_type":{"fb9327f0":"code","d8f87eea":"code","43138cbb":"code","1eaba4f0":"code","796d1f5f":"code","a5424fdf":"code","f3823600":"code","2f538f96":"code","b1864f48":"code","53cfb6ab":"code","d98b9b6e":"markdown","5964425c":"markdown"},"source":{"fb9327f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8f87eea":"df = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")","43138cbb":"df.head()","1eaba4f0":"df.shape","796d1f5f":"df[\"Species\"].unique()","a5424fdf":"df_setosa = df[df[\"Species\"] == 'Iris-setosa']\ndf_versicolor = df[df[\"Species\"] == 'Iris-versicolor']\ndf_virginica = df[df[\"Species\"] == 'Iris-virginica']","f3823600":"import matplotlib.pyplot as plt\nplt.plot(df_setosa[\"SepalLengthCm\"], np.zeros_like(df_setosa[\"SepalLengthCm\"]), 'o')\nplt.plot(df_versicolor[\"SepalLengthCm\"], np.zeros_like(df_versicolor[\"SepalLengthCm\"]), 'o')\nplt.plot(df_virginica[\"SepalLengthCm\"], np.zeros_like(df_virginica[\"SepalLengthCm\"]), 'o')\nplt.xlabel(\"Sepal Length\")\nplt.show()","2f538f96":"plt.plot(df_setosa[\"PetalLengthCm\"], np.zeros_like(df_setosa[\"PetalLengthCm\"]), 'o')\nplt.plot(df_versicolor[\"PetalLengthCm\"], np.zeros_like(df_versicolor[\"PetalLengthCm\"]), 'o')\nplt.plot(df_virginica[\"PetalLengthCm\"], np.zeros_like(df_virginica[\"PetalLengthCm\"]), 'o')\nplt.xlabel(\"Petal Length\")\nplt.show()","b1864f48":"import seaborn as sns","53cfb6ab":"sns.pairplot(df, hue = \"Species\", size = 3)","d98b9b6e":"## *Multivariate Analysis*","5964425c":"## *Univariate Analysis*"}}