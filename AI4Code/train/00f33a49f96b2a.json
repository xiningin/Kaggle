{"cell_type":{"6a7ebe86":"code","38280f80":"code","b7ec24b4":"code","522328ef":"code","25e4498e":"code","48d5fcac":"code","b28544da":"code","f1c03a29":"code","768ba6e0":"code","b8ede0e4":"code","3a2f9595":"code","20d5b73b":"code","8e254f3b":"code","428fb537":"code","c271fe55":"code","a98a14d7":"code","25dfd7a1":"code","eb739379":"code","57ba6ce6":"code","25adc867":"code","32ab6b97":"code","c576c116":"code","e6a67ec4":"code","43039889":"code","dd3a79d3":"code","c37a4311":"code","8f9b0955":"code","6f3c48c0":"code","047a875b":"code","4192c571":"code","b83ee48a":"code","5c626ff8":"code","521b5aaf":"code","b47466bb":"code","83b61356":"code","1ae01b7b":"code","44057e1c":"code","a9db88af":"code","32fe1fea":"code","0627f1fb":"code","15158ef7":"code","5e3b47f8":"code","d02c268d":"code","8d1787a8":"markdown","1a03e747":"markdown","e2ee84f2":"markdown","dfbfea83":"markdown","7031b285":"markdown","3a01a291":"markdown","8c4f3a05":"markdown","ee736a9f":"markdown","5e95ebed":"markdown","f1bbb97f":"markdown","980ec122":"markdown","fe3a496e":"markdown","4cc3bdf7":"markdown","222d00d2":"markdown"},"source":{"6a7ebe86":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport warnings\nwarnings.filterwarnings('ignore')","38280f80":"df=pd.read_csv('..\/input\/loan-dataset\/loan.csv')","b7ec24b4":"df.head()","522328ef":"df.tail()","25e4498e":"df.columns","48d5fcac":"df.shape","b28544da":"df.info()","f1c03a29":"df.describe()","768ba6e0":"sns.heatmap(df.corr(),annot=True)\nplt.show()","b8ede0e4":"df.isnull().sum()","3a2f9595":"df.drop('Loan_ID',axis=1,inplace=True)","20d5b73b":"df['LoanAmount']=df['LoanAmount'].fillna(df['LoanAmount'].mean())","8e254f3b":"df['Credit_History']=df['Credit_History'].fillna(df['Credit_History'].median())","428fb537":"df.isnull().sum()","c271fe55":"df.dropna(inplace=True)","a98a14d7":"df.shape","25dfd7a1":"sns.countplot(df['Loan_Status'])","eb739379":"df['Loan_Status'].value_counts()","57ba6ce6":"plt.figure(figsize=(8,6))\nsns.countplot(x='Married', hue='Loan_Status', data=df);","25adc867":"plt.figure(figsize=(8,6))\nsns.countplot(x='Dependents', hue='Loan_Status', data=df);","32ab6b97":"plt.figure(figsize=(8,6))\nsns.countplot(x='Property_Area', hue='Loan_Status', data=df);","c576c116":"plt.figure(figsize=(8,6))\nsns.countplot(x='Self_Employed', hue='Loan_Status', data=df);","e6a67ec4":"plt.figure(figsize=(8,6))\nsns.countplot(x='Education', hue='Loan_Status', data=df);","43039889":"sns.pairplot(df,hue ='Loan_Status',palette='pastel')","dd3a79d3":"df['Loan_Status'].replace('N',0,inplace=True)\ndf['Loan_Status'].replace('Y',1,inplace=True)","c37a4311":"sns.heatmap(df.corr(),annot=True)","8f9b0955":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier","6f3c48c0":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nle=LabelEncoder()\nohe=OneHotEncoder()","047a875b":"df=df.drop(labels=['ApplicantIncome'],axis=1)\ndf=df.drop(labels=['CoapplicantIncome'],axis=1)\ndf=df.drop(labels=['LoanAmount'],axis=1)\ndf=df.drop(labels=['Loan_Amount_Term'],axis=1)","4192c571":"df.head()","b83ee48a":"df['Property_Area']=le.fit_transform(df['Property_Area'])\ndf['Dependents']=le.fit_transform(df['Dependents'])\ndf['Gender']=le.fit_transform(df['Gender'])\ndf['Married']=le.fit_transform(df['Married'])\ndf['Education']=le.fit_transform(df['Education'])\ndf['Self_Employed']=le.fit_transform(df['Self_Employed'])\ndf.head()","5c626ff8":"y = df['Loan_Status']\nX = df.drop(['Loan_Status'], axis = 1)","521b5aaf":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30)","b47466bb":"lr=LogisticRegression()\nlr.fit(X_train,y_train)\nlryhat=lr.predict(X_test)","83b61356":"accuracy_score(lryhat,y_test)","1ae01b7b":"cl=SVC(kernel='rbf')\ncl.fit(X_train,y_train)\nclyhat=cl.predict(X_test)","44057e1c":"accuracy_score(clyhat,y_test)","a9db88af":"clf=DecisionTreeClassifier()\nclf.fit(X_train,y_train)\npred1=clf.predict(X_test)","32fe1fea":"accuracy_score(pred1,y_test)","0627f1fb":"model=XGBClassifier()\nmodel.fit(X_train,y_train)\nmodelyhat=model.predict(X_test)","15158ef7":"accuracy_score(modelyhat,y_test)","5e3b47f8":"knn = KNeighborsClassifier(n_neighbors =8)  # n_neighbors means k\nknn.fit(X_train, y_train)\nknnyhat = knn.predict(X_test)","d02c268d":"accuracy_score(knnyhat,y_test)","8d1787a8":"<h3>DECISION TREE<\/h3>","1a03e747":"<h3>CONCLUSION<\/h3>","e2ee84f2":"1.Most people who got married got a loan.\n2.If Dependents are 0, we got higher chance to get a loan.\n3.Semiurban Property_Area got more chance to get a loan.","dfbfea83":"<h3>XGBOOST<\/h3>","7031b285":"<h3>Classification Models<\/h3>","3a01a291":"<h3>Data Preprocessing and EDA<\/h3>","8c4f3a05":"<h3>SUPPORT VECTOR MACHINES<\/h3>","ee736a9f":"<h3>Data Visualization<\/h3>","5e95ebed":"We see that the highest accuracy is achieved by Logistic Regression and SVM.","f1bbb97f":"Let's replace the missing values in each columns with their respective column means to avoid losing data and misinterpretation of the data.","980ec122":"<h3>KNN MODEL<\/h3>","fe3a496e":"<h3>Reading the Dataset<\/h3>","4cc3bdf7":"<h3>LOGISTIC REGRESSION<\/h3>","222d00d2":"We can clearly see that Credit_History has the highest correlation with Loan_Status (a positive correlation of 0.54). Therefore our target value is highly dependant on this column."}}