{"cell_type":{"181766c7":"code","15461637":"code","3d5899fd":"code","08864c4c":"code","cfdf04a8":"code","5e14c79f":"code","195bad78":"code","f577d10a":"code","be5c5ad9":"code","5393b925":"code","8d6e579e":"code","a207a5c2":"code","d19a1fe6":"code","f37d6c8b":"code","8e716b49":"code","39bb11ee":"code","3a5c1e09":"code","b0aa8cac":"code","57929511":"code","a245c06a":"code","9bad94c1":"code","70c49c0a":"code","74769187":"code","0306e493":"code","501d43f1":"code","aaa7e006":"code","97df6866":"code","f69ac18c":"code","ad0e01ac":"code","5630f592":"code","98ce3972":"code","f9ceb187":"code","c071ca5e":"code","85c881a1":"code","8205148e":"code","3b451c3c":"code","eaa05e1a":"code","5eecce3c":"code","57a995e9":"code","26d6ecc0":"code","7636eb88":"code","99976991":"code","40ac1137":"code","79159341":"code","be8f2e28":"code","f9109144":"code","46bae154":"code","e718ea38":"code","66d4ca84":"code","50747811":"code","57ca6309":"code","a54af789":"code","576fe2f2":"code","aea50d81":"code","fb8f9f08":"code","b88d78ec":"code","6c13b024":"markdown","6fe34e0c":"markdown","8b163e8c":"markdown"},"source":{"181766c7":"import seaborn as sns\nsns.set_style('darkgrid')\nimport pandas as pd\nimport numpy as np\nimport warnings\nimport matplotlib.pyplot as plt\n%matplotlib inline\nwarnings.filterwarnings('ignore')","15461637":"SP = pd.read_csv('..\/input\/StudentsPerformance.csv')","3d5899fd":"SP.head()","08864c4c":"SP.info()","cfdf04a8":"SP.describe()","5e14c79f":"SP['gender'].value_counts()","195bad78":"SP['race\/ethnicity'].value_counts()","f577d10a":"SP['parental level of education'].value_counts()","be5c5ad9":"SP['test preparation course'].value_counts()","5393b925":"SP['lunch'].value_counts()","8d6e579e":"sns.pairplot(SP,hue='gender',palette='cividis')","a207a5c2":"sns.countplot(x='gender',data = SP,palette='cividis')","d19a1fe6":"sns.countplot(x='lunch',data=SP,palette='cividis')","f37d6c8b":"sns.countplot(x='race\/ethnicity',data=SP,palette='cividis')","8e716b49":"sns.countplot(x='test preparation course',data=SP,palette='cividis')","39bb11ee":"plt.figure(figsize=(10,4))\nsns.countplot(x='parental level of education',data=SP,palette='viridis')","3a5c1e09":"sns.boxplot(x='gender',y='writing score',data=SP,palette='viridis')","b0aa8cac":"plt.figure(figsize=(10,6))\nsns.swarmplot(x='test preparation course',y='writing score',data=SP,palette='viridis')","57929511":"plt.figure(figsize=(10,5))\nsns.stripplot(x='parental level of education',y='writing score',data=SP,palette='cividis')","a245c06a":"plt.figure(figsize=(10,4))\nsns.distplot(SP['writing score'],kde =False,color='green')","9bad94c1":"plt.figure(figsize=(10,4))\nsns.distplot(SP['reading score'],kde =False,color='purple')","70c49c0a":"plt.figure(figsize=(10,4))\nsns.distplot(SP['math score'],kde =False,color='red')","74769187":"sns.scatterplot(x='reading score',y='writing score',data=SP,hue='gender',palette='viridis')","0306e493":"sns.scatterplot(x='math score',y='writing score',data=SP,hue='gender',palette='viridis')","501d43f1":"sns.heatmap(SP.corr(),annot=True)","aaa7e006":"mapGender = {'female':0,'male':1}\nmapGroup = {'group C':3,'group D':4,'group B' :2,'group E':5,'group A':1}\nmapLevel = {'some college':1,\"associate's degree\":2,\"high school\":3,'some high school':4,\"bachelor's degree\":5,\"master's degree\":6}\nmapLunch = {\"standard\":0,\"free\/reduced\":1}\nmapPrepare = {'none':0,'completed':1}","97df6866":"SP.columns","f69ac18c":"SP['gender'] = SP['gender'].map(mapGender)\nSP['race\/ethnicity'] = SP['race\/ethnicity'].map(mapGroup)\nSP['parental level of education'] = SP['parental level of education'].map(mapLevel)\nSP['lunch'] = SP['lunch'].map(mapLunch)\nSP['test preparation course'] = SP['test preparation course'].map(mapPrepare)","ad0e01ac":"SP.head()","5630f592":"sns.heatmap(SP.corr(),annot=True)","98ce3972":"from sklearn.model_selection import train_test_split","f9ceb187":"X = SP.drop('writing score',axis = 1)\ny = SP['writing score']","c071ca5e":" X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=0)","85c881a1":"from sklearn.linear_model import LinearRegression","8205148e":"lm = LinearRegression()","3b451c3c":"lm.fit(X_train,y_train)","eaa05e1a":"print(lm.intercept_)","5eecce3c":"print(lm.coef_) #this coeffecient relates to the values in X_train","57a995e9":"coef = pd.DataFrame(lm.coef_,X.columns,columns = ['coef'])","26d6ecc0":"coef","7636eb88":"predictions = lm.predict(X_test)","99976991":"sns.scatterplot(y=y_test,x=predictions)\nplt.title('Independent score vs Dependent score')\nplt.xlabel('predicted score')","40ac1137":"sns.distplot((y_test-predictions))","79159341":"from sklearn import metrics","be8f2e28":"metrics.mean_absolute_error(y_test,predictions)","f9109144":"metrics.mean_squared_error(y_test,predictions)","46bae154":"np.sqrt(metrics.mean_squared_error(y_test,predictions))","e718ea38":"X= SP.drop('gender',axis = 1)\ny=SP['gender']","66d4ca84":"X_train, X_test, y_train, y_test = train_test_split(X, y,test_size= 0.33,random_state=0)","50747811":"from sklearn.linear_model import LogisticRegression","57ca6309":"logmodel = LogisticRegression()","a54af789":"logmodel.fit(X_train,y_train)","576fe2f2":"predictions = logmodel.predict(X_test)","aea50d81":"probability=logmodel.predict_proba(X_test)[:,1]\nsns.regplot(probability,y_test,logistic=True)","fb8f9f08":"from sklearn.metrics import classification_report,confusion_matrix","b88d78ec":"print(confusion_matrix(y_test,predictions))\nprint(classification_report(y_test,predictions))","6c13b024":"\n\n\n### LOGISTIC REGRESSION \/ PREDICT GENDER","6fe34e0c":"### LINEAR REGRESSION \/ PREDICT WRITING SCORE","8b163e8c":"## Regression Evaluation Metrics\n\n\nHere are three common evaluation metrics for regression problems:\n\n**Mean Absolute Error** (MAE) is the mean of the absolute value of the errors:\n\n$$\\frac 1n\\sum_{i=1}^n|y_i-\\hat{y}_i|$$\n\n**Mean Squared Error** (MSE) is the mean of the squared errors:\n\n$$\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2$$\n\n**Root Mean Squared Error** (RMSE) is the square root of the mean of the squared errors:\n\n$$\\sqrt{\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}$$\n\nComparing these metrics:\n\n- **MAE** is the easiest to understand, because it's the average error.\n- **MSE** is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n- **RMSE** is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are **loss functions**, because we want to minimize them."}}