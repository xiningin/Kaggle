{"cell_type":{"8884288f":"code","79c4fe31":"code","2ea52240":"code","ad93bf1e":"code","2bd09493":"code","6864f761":"code","03805812":"code","3b57197c":"code","558f0b60":"code","b0681926":"code","207f7b74":"code","14b7e529":"code","a89bf679":"code","292c597b":"code","04b1423f":"code","84e3d007":"code","81392241":"code","e7e6b4af":"code","f37fc92a":"code","7214da15":"code","a4591789":"code","7d0e5fe1":"code","ce34d0e2":"code","6ff5a2ab":"code","41347c7c":"code","ace53da0":"code","83fa2136":"code","29f41e1b":"code","00647f4f":"code","7ec7608b":"code","1dd82c99":"code","968ade4b":"code","52e9fa4c":"code","98536985":"code","7d69c746":"code","665fb3f3":"code","5e278aa0":"code","0d31f10e":"code","a0349462":"code","7390df1e":"code","9f80c0f0":"markdown","051ad6b4":"markdown","a20db3df":"markdown","f3a5ad0f":"markdown","b90e5327":"markdown","46466cdd":"markdown"},"source":{"8884288f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","79c4fe31":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","2ea52240":"train.head()","ad93bf1e":"train.isnull()","2bd09493":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","6864f761":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train)","03805812":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex', data=train)","3b57197c":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train)","558f0b60":"sns.distplot(train['Age'].dropna(),kde=False,color='green',bins=40)","b0681926":"train['Age'].hist(bins=30,color='red',alpha=0.3)","207f7b74":"sns.countplot(x='SibSp',data=train)","14b7e529":"train['Fare'].hist(color='orange',bins=40,figsize=(8,4))","a89bf679":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass', y='Age', data=train, palette='winter')","292c597b":"#function to replace null age value with average value\n\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n            if Pclass == 1:\n                return 37\n            elif Pclass == 2:\n                return 29\n            else:\n                return 24\n    else:\n        return Age","04b1423f":"# applying function on the column age\ntrain['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","84e3d007":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","81392241":"train.drop('Cabin',axis=1,inplace=True)","e7e6b4af":"train.head()","f37fc92a":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7214da15":"train.isnull().sum()","a4591789":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass', y='Age', data=train, palette='winter')","7d0e5fe1":"pd.get_dummies(train['Embarked'],drop_first=True).head()","ce34d0e2":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nEmbarked = pd.get_dummies(train['Embarked'],drop_first=True)","6ff5a2ab":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","41347c7c":"train.head()","ace53da0":"train = pd.concat([train,sex,Embarked],axis=1)","83fa2136":"train.head()","29f41e1b":"train.drop('Survived',axis=1).head()","00647f4f":"train['Survived'].head()","7ec7608b":"from sklearn.model_selection import train_test_split","1dd82c99":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1),\n                                                   train['Survived'], test_size=0.30,\n                                                   random_state=101)","968ade4b":"from sklearn.linear_model import LogisticRegression","52e9fa4c":"logmodel = LogisticRegression()\nlogmodel.fit(X_train, y_train)","98536985":"prediction = logmodel.predict(X_test)","7d69c746":"from sklearn.metrics import confusion_matrix","665fb3f3":"accuracy = confusion_matrix(y_test,prediction)","5e278aa0":"accuracy","0d31f10e":"from sklearn.metrics import accuracy_score","a0349462":"accuracy = accuracy_score(y_test,prediction)\naccuracy","7390df1e":"prediction","9f80c0f0":"**Logistic Regression**","051ad6b4":"**Missing Values**\n","a20db3df":"**Train Test Split**","f3a5ad0f":"**Data Cleaning**","b90e5327":"Accuracy ","46466cdd":"**convertig categorical data**"}}