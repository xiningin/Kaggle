{"cell_type":{"2b278952":"code","a3bf1845":"code","bb6825b9":"code","a6d8f318":"code","917acc2c":"code","d4435c5c":"code","5d36fbed":"code","d455fafe":"code","c38560f1":"code","d07460e5":"code","328cadc1":"code","489fdb0b":"code","e6f72bd2":"code","5af625e2":"code","828cd0fb":"code","5ad432be":"code","e75a0165":"code","7db2eb9f":"code","d7fcc78e":"code","605ba3bc":"code","f6ada32b":"code","96774470":"code","e7e98206":"code","2561cbf8":"code","8d8bc6f2":"code","4a2d2e95":"code","b97d2adc":"code","13c75d53":"code","74b27e6a":"code","0514541a":"code","52022176":"code","889c16ab":"code","d855d697":"code","12105d26":"code","40f281f5":"code","09824427":"code","82742f92":"code","3fd0ad1f":"code","f26a624d":"code","9fe5319f":"code","f31ff40c":"code","14050c61":"code","8244318d":"code","1500c6b8":"code","6aa858b9":"code","ecd949f1":"code","b27f0f28":"code","ac20e2b6":"code","bb11930c":"code","04606de4":"code","575ad520":"code","d3ef0507":"code","2c93d070":"code","4b6b8986":"code","afc8bfef":"code","55a8877e":"code","50ba363c":"code","7d541c7a":"code","1b70d560":"code","a94024e5":"code","f3713f25":"code","e2203dfe":"code","feee0afb":"code","ed797ce8":"code","cc295bf7":"code","69b7b774":"code","946b3d33":"code","1ceba463":"code","be5fdb93":"code","d1b92b47":"code","d701f052":"code","dbb08cd8":"code","d39db497":"code","f338e10a":"code","a135170b":"code","7a2572ce":"code","19257490":"code","63d202d9":"code","acf367d5":"code","57807967":"code","fe704b7d":"code","94f219ba":"code","056af18a":"code","03b71e6d":"code","e27455e2":"code","be24e35d":"code","cc54d6b1":"code","a331c42c":"code","8d6f1049":"code","29f59b3c":"code","8ada2e56":"code","10fc3fad":"code","a3b7b293":"code","93196137":"code","ceb37132":"code","60c80a2c":"code","2edd6870":"code","cbeb581f":"code","2a3bdca3":"code","141562dd":"code","e1037d04":"code","5aeb2463":"code","2eb020f7":"code","b77284fd":"code","d29b704a":"code","5a8dd1ba":"code","d62900ad":"code","c3a52b76":"code","43e27e0a":"code","596c7160":"code","24e82daf":"code","6d39ac1d":"code","a0a67cc1":"code","8a784628":"code","60d8463a":"code","1428d227":"code","2537d67d":"code","8c488324":"code","8da3096c":"code","e63f4be9":"code","2a1f828f":"code","edfdba29":"code","9c628fdd":"code","0cf24c07":"code","71922ccc":"code","fd22857a":"code","64adb02a":"code","f6332de2":"code","b878ec83":"code","7808da25":"code","eca2de4a":"code","2c2d6eb3":"code","64f5714b":"markdown","8c4026c5":"markdown","c1c654f9":"markdown","020a309b":"markdown","6c893168":"markdown","bbb60b46":"markdown","773735bc":"markdown","736a8a3f":"markdown","4f3065cc":"markdown","989cc35c":"markdown","c43755c9":"markdown","656959a5":"markdown","81d9f3fa":"markdown","0a123631":"markdown","5069e197":"markdown","eef6ef6b":"markdown","971ed961":"markdown","3334bd9a":"markdown","3784e639":"markdown","a24963b8":"markdown","4119d2cb":"markdown","7f0fe629":"markdown","7bd27128":"markdown","e1bb57de":"markdown","1c2a3bdc":"markdown","0ee6e63f":"markdown","f7a069e0":"markdown","1ba04b9f":"markdown","fccb8422":"markdown","ec4c4b29":"markdown","b38fe3e2":"markdown","84c09b0e":"markdown","c98044fc":"markdown","e20c0db6":"markdown","980094b7":"markdown","289c147c":"markdown","70de467d":"markdown","0e9b3c10":"markdown","e1e767f0":"markdown","2bd2f911":"markdown"},"source":{"2b278952":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# For data visualization\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n\nimport seaborn as sns; sns.set()\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n\n# For statistics, preprocessing and ML\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nfrom sklearn.preprocessing import scale \nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import roc_auc_score,roc_curve\nimport statsmodels.formula.api as smf\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a3bf1845":"data = pd.read_csv(\"\/kaggle\/input\/heart-disease-cleveland-uci\/heart_cleveland_upload.csv\")\ndf = data.copy()","bb6825b9":"display(df.head())\ndisplay(df.tail())","a6d8f318":"df.info()","917acc2c":"df.isnull().sum()","d4435c5c":"data.describe().T","5d36fbed":"df.nunique()","d455fafe":"df.corr()","c38560f1":"df1 = df.drop(['age','trestbps','chol','thalach','oldpeak'],axis=1)\n\nfor i, col in enumerate(df1.columns):\n    plt.figure(i)\n    plt.title(col, color = 'blue',fontsize=15)\n    sns.countplot(x=col, data=df1)","d07460e5":"sns.catplot(x=\"sex\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Sex and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"cp\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Chest Pain Type and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"fbs\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Fasting Blood Sugar and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"restecg\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Resting Electrocardiographic Results and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"exang\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Exercise Induced Angina and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"slope\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Slope of the Peak Exercise ST Segment and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"ca\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Number of Major Vessels Colored by Flourosopy and Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.catplot(x=\"thal\", hue=\"condition\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df);\nplt.title('Thal and Heart Condition', color = 'blue', fontsize=15)\nplt.show()","328cadc1":"plt.figure(figsize=(10,5))\nsns.barplot(x=df.condition, y=df.age);\nplt.xticks(rotation= 0)\nplt.xlabel('condition', fontsize=14)\nplt.ylabel('age', fontsize=14)\nplt.title('Average Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","489fdb0b":"plt.figure(figsize=(10,5))\nsns.barplot(x=df.condition, y=df.trestbps);\nplt.xticks(rotation= 0)\nplt.xlabel('condition', fontsize=14)\nplt.ylabel('trestbps', fontsize=14)\nplt.title('Average Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","e6f72bd2":"plt.figure(figsize=(10,5))\nsns.barplot(x=df.condition, y=df.chol);\nplt.xticks(rotation= 0)\nplt.xlabel('condition', fontsize=14)\nplt.ylabel('chol', fontsize=14)\nplt.title('Average Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","5af625e2":"plt.figure(figsize=(10,5))\nsns.barplot(x=df.condition, y=df.thalach);\nplt.xticks(rotation= 0)\nplt.xlabel('condition', fontsize=14)\nplt.ylabel('thalach', fontsize=14)\nplt.title('Average Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","828cd0fb":"plt.figure(figsize=(10,5))\nsns.barplot(x=df.condition, y=df.oldpeak);\nplt.xticks(rotation= 0)\nplt.xlabel('condition', fontsize=14)\nplt.ylabel('oldpeak', fontsize=14)\nplt.title('Average ST depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","5ad432be":"sns.boxplot(x=\"condition\", y=\"age\", data=df, palette=\"PRGn\")\nplt.title('Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.boxplot(x=\"condition\", y=\"trestbps\", data=df, palette=\"PRGn\")\nplt.title('Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.boxplot(x=\"condition\", y=\"chol\", data=df, palette=\"PRGn\")\nplt.title('Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.boxplot(x=\"condition\", y=\"thalach\", data=df, palette=\"PRGn\")\nplt.title('Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.boxplot(x=\"condition\", y=\"oldpeak\", data=df, palette=\"PRGn\")\nplt.title('ST Depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","e75a0165":"sns.swarmplot(x=\"condition\", y=\"age\", hue='exang' ,data=df)\nplt.title('Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"trestbps\",hue='exang' ,data=df)\nplt.title('Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"chol\",hue='exang' ,data=df)\nplt.title('Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"thalach\",hue='exang' ,data=df)\nplt.title('Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"oldpeak\",hue='exang' ,data=df)\nplt.title('ST depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","7db2eb9f":"sns.swarmplot(x=\"condition\", y=\"age\", hue='slope' ,data=df)\nplt.title('Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"trestbps\",hue='slope' ,data=df)\nplt.title('Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"chol\",hue='slope' ,data=df)\nplt.title('Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"thalach\",hue='slope' ,data=df)\nplt.title('Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"oldpeak\",hue='slope' ,data=df)\nplt.title('ST depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","d7fcc78e":"sns.swarmplot(x=\"condition\", y=\"age\", hue='ca' ,data=df)\nplt.title('Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"trestbps\",hue='ca' ,data=df)\nplt.title('Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"chol\",hue='ca' ,data=df)\nplt.title('Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"thalach\",hue='ca' ,data=df)\nplt.title('Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"oldpeak\",hue='ca' ,data=df)\nplt.title('ST depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","605ba3bc":"sns.swarmplot(x=\"condition\", y=\"age\", hue='thal' ,data=df)\nplt.title('Age by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"trestbps\",hue='thal' ,data=df)\nplt.title('Resting Blood Pressure by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"chol\",hue='thal' ,data=df)\nplt.title('Cholesterol by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"thalach\",hue='thal' ,data=df)\nplt.title('Maximum Heart Rate Achieved by Heart Condition', color = 'blue', fontsize=15)\nplt.show()\n\nsns.swarmplot(x=\"condition\", y=\"oldpeak\",hue='thal' ,data=df)\nplt.title('ST depression by Heart Condition', color = 'blue', fontsize=15)\nplt.show()","f6ada32b":"f,ax = plt.subplots(figsize=(15, 10))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5, linecolor=\"red\", fmt= '.2f',ax=ax)\nplt.show()","96774470":"sns.pairplot(df, hue='condition', vars=['age','trestbps','chol','thalach','oldpeak'],kind='reg')\nplt.show()","e7e98206":"a = pd.get_dummies(df['cp'], prefix = \"cp\")\nb = pd.get_dummies(df['restecg'], prefix = \"restecg\")\nc = pd.get_dummies(df['slope'], prefix = \"slope\")\nd = pd.get_dummies(df['thal'], prefix = \"thal\")","2561cbf8":"frames = [df, a, b, c, d]\ndf = pd.concat(frames, axis = 1)","8d8bc6f2":"df = df.drop(columns = ['cp','restecg','slope','thal'])\ndf.head()","4a2d2e95":"from sklearn.preprocessing import MinMaxScaler","b97d2adc":"X = df.drop([\"condition\"],axis = 1)\ny = df.condition","13c75d53":"scaler = MinMaxScaler().fit(X)\n\nX_scaled = scaler.transform(X)","74b27e6a":"X_train,X_test,y_train,y_test = train_test_split(X_scaled,y,test_size = 0.3, random_state = 42)","0514541a":"log_reg = LogisticRegression().fit(X_train,y_train)\nlog_reg","52022176":"log_reg.intercept_","889c16ab":"log_reg.coef_","d855d697":"y_pred = log_reg.predict(X_test)","12105d26":"confusion_matrix(y_test, y_pred)","40f281f5":"log_reg.predict_proba(X_test)[0:10]","09824427":"accuracy_score(y_test, y_pred)","82742f92":"print(classification_report(y_test, y_pred))","3fd0ad1f":"logit_roc_auc = roc_auc_score(y, log_reg.predict(X_scaled))\n\nfpr, tpr, thresholds = roc_curve(y, log_reg.predict_proba(X_scaled)[:,1])\n\nplt.figure()\nplt.plot(fpr, tpr, label='AUC (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Ratio')\nplt.ylabel('True Positive Ratio')\nplt.title('ROC')\nplt.show()","f26a624d":"log_reg_final = cross_val_score(log_reg, X_test, y_test, cv = 10).mean()\nlog_reg_final","9fe5319f":"nb = GaussianNB()\nnb_model = nb.fit(X_train, y_train)\nnb_model","f31ff40c":"nb_model.predict(X_test)[0:10]","14050c61":"nb_model.predict_proba(X_test)[0:10]","8244318d":"y_pred = nb_model.predict(X_test)","1500c6b8":"accuracy_score(y_test, y_pred)","6aa858b9":"nb_final = cross_val_score(nb_model, X_test, y_test, cv = 10).mean()\nnb_final","ecd949f1":"knn = KNeighborsClassifier()\nknn_model = knn.fit(X_train, y_train)\nknn_model","b27f0f28":"y_pred = knn_model.predict(X_test)","ac20e2b6":"accuracy_score(y_test, y_pred)","bb11930c":"print(classification_report(y_test, y_pred))","04606de4":"knn_params = {\"n_neighbors\": np.arange(1,50)}","575ad520":"knn = KNeighborsClassifier()\nknn_cv = GridSearchCV(knn, knn_params, cv=10)\nknn_cv.fit(X_train, y_train)","d3ef0507":"print(\"Best score:\" + str(knn_cv.best_score_))\nprint(\"Best parameters: \" + str(knn_cv.best_params_))","2c93d070":"knn = KNeighborsClassifier(n_neighbors = 5)\nknn_tuned = knn.fit(X_train, y_train)","4b6b8986":"y_pred = knn_tuned.predict(X_test)","afc8bfef":"knn_final = accuracy_score(y_test, y_pred)\nknn_final","55a8877e":"svm_model = SVC(kernel = \"linear\").fit(X_train, y_train)\nsvm_model","50ba363c":"y_pred = svm_model.predict(X_test)","7d541c7a":"accuracy_score(y_test, y_pred)","1b70d560":"svc_params = {\"C\": [0.0001, 0.001, 0.1, 1, 5, 10 ,50 ,100]}\n\nsvc = SVC(kernel = \"linear\")\n\nsvc_cv_model = GridSearchCV(svc,svc_params, \n                            cv = 10, \n                            n_jobs = -1, \n                            verbose = 2 )\n\nsvc_cv_model.fit(X_train, y_train)","a94024e5":"print(\"Best parameters: \" + str(svc_cv_model.best_params_))","f3713f25":"svc_tuned = SVC(kernel = \"linear\", C = 1).fit(X_train, y_train)","e2203dfe":"y_pred = svc_tuned.predict(X_test)","feee0afb":"svc_linear_final = accuracy_score(y_test, y_pred)\nsvc_linear_final","ed797ce8":"svc_model = SVC(kernel = \"rbf\").fit(X_train, y_train)","cc295bf7":"y_pred = svc_model.predict(X_test)\naccuracy_score(y_test, y_pred)","69b7b774":"svc_params = {\"C\": [0.00001, 0.0001, 0.001, 0.1, 1, 5, 10 ,50 ,100],\n             \"gamma\": [0.0001, 0.001, 0.1, 1, 5, 10 ,50 ,100]}","946b3d33":"svc = SVC(kernel = \"rbf\")\nsvc_cv_model = GridSearchCV(svc, svc_params, \n                         cv = 10, \n                         n_jobs = -1,\n                         verbose = 2)\n\nsvc_cv_model.fit(X_train, y_train)","1ceba463":"print(\"Best parameters: \" + str(svc_cv_model.best_params_))","be5fdb93":"svc_tuned = SVC(kernel = \"rbf\", C = 5, gamma = 0.1).fit(X_train, y_train)","d1b92b47":"y_pred = svc_tuned.predict(X_test)\nsvc_rbf_final = accuracy_score(y_test, y_pred)\nsvc_rbf_final","d701f052":"svc_model = SVC(kernel = \"poly\").fit(X_train, y_train)","dbb08cd8":"y_pred = svc_model.predict(X_test)\naccuracy_score(y_test, y_pred)","d39db497":"svc_params = {\"C\": [0.00001, 0.0001, 0.001, 0.1, 1, 5, 10 ,50 ,100],\n             \"gamma\": [0.0001, 0.001, 0.1, 1, 5, 10 ,50 ,100]}","f338e10a":"svc = SVC(kernel = \"poly\")\nsvc_cv_model = GridSearchCV(svc, svc_params, \n                         cv = 10, \n                         n_jobs = -1,\n                         verbose = 2)\n\nsvc_cv_model.fit(X_train, y_train)","a135170b":"print(\"Best parameters: \" + str(svc_cv_model.best_params_))","7a2572ce":"svc_tuned = SVC(kernel = \"poly\", C = 0.001, gamma = 1).fit(X_train, y_train)","19257490":"y_pred = svc_tuned.predict(X_test)\nsvc_poly_final = accuracy_score(y_test, y_pred)\nsvc_poly_final","63d202d9":"cart = DecisionTreeClassifier()\ncart_model = cart.fit(X_train, y_train)","acf367d5":"y_pred = cart_model.predict(X_test)\naccuracy_score(y_test, y_pred)","57807967":"cart_grid = {\"max_depth\": range(1,10),\n            \"min_samples_split\" : list(range(2,50)) }","fe704b7d":"cart = tree.DecisionTreeClassifier()\ncart_cv = GridSearchCV(cart, cart_grid, cv = 10, n_jobs = -1, verbose = 2)\ncart_cv_model = cart_cv.fit(X_train, y_train)","94f219ba":"print(\"Best Parameters: \" + str(cart_cv_model.best_params_))","056af18a":"cart = tree.DecisionTreeClassifier(max_depth = 3, min_samples_split = 18)\ncart_tuned = cart.fit(X_train, y_train)","03b71e6d":"y_pred = cart_tuned.predict(X_test)\ncart_final = accuracy_score(y_test, y_pred)\ncart_final","e27455e2":"rf_model = RandomForestClassifier().fit(X_train, y_train)","be24e35d":"y_pred = rf_model.predict(X_test)\naccuracy_score(y_test, y_pred)","cc54d6b1":"rf_params = {\"max_depth\": [2,5,8,10],\n            \"max_features\": [2,3,5,7],\n            \"n_estimators\": [10,100,200,500,1000],\n            \"min_samples_split\": [2,5,10]}","a331c42c":"rf_model = RandomForestClassifier()\n\nrf_cv_model = GridSearchCV(rf_model, \n                           rf_params, \n                           cv = 10, \n                           n_jobs = -1, \n                           verbose = 2) ","8d6f1049":"rf_cv_model.fit(X_train, y_train)","29f59b3c":"print(\"Best Parameters: \" + str(rf_cv_model.best_params_))","8ada2e56":"rf_tuned = RandomForestClassifier(max_depth = 5, \n                                  max_features = 2, \n                                  min_samples_split = 2,\n                                  n_estimators = 200)\n\nrf_tuned.fit(X_train, y_train)","10fc3fad":"y_pred = rf_tuned.predict(X_test)\nrf_final = accuracy_score(y_test, y_pred)\nrf_final","a3b7b293":"pd.DataFrame(X_train).head()","93196137":"X_train_pd = pd.DataFrame(X_train)\ndf_x = df.drop(['condition'], axis=1)\nX_train_pd.columns = df_x.columns[:22]\nX_train_pd.head()","ceb37132":"Importance = pd.DataFrame({\"Importance\": rf_tuned.feature_importances_*100},\n                         index = X_train_pd.columns)","60c80a2c":"Importance.sort_values(by = \"Importance\", \n                       axis = 0, \n                       ascending = True).plot(kind =\"barh\", color = \"r\")\n\nplt.xlabel(\"Importance Levels of Independent Variables\");","2edd6870":"gbm_model = GradientBoostingClassifier().fit(X_train, y_train)","cbeb581f":"y_pred = gbm_model.predict(X_test)\naccuracy_score(y_test, y_pred)","2a3bdca3":"gbm_params = {\"learning_rate\" : [0.001, 0.01, 0.05, 0.1],\n             \"n_estimators\": [100,500,1000],\n             \"max_depth\": [3,5,10],\n             \"min_samples_split\": [2,5,10]}","141562dd":"gbm = GradientBoostingClassifier()\n\ngbm_cv = GridSearchCV(gbm, gbm_params, cv = 10, n_jobs = -1, verbose = 2)","e1037d04":"gbm_cv.fit(X_train, y_train)","5aeb2463":"print(\"Best parameters: \" + str(gbm_cv.best_params_))","2eb020f7":"gbm = GradientBoostingClassifier(learning_rate = 0.05, \n                                 max_depth = 3,\n                                min_samples_split = 5,\n                                n_estimators = 1000)","b77284fd":"gbm_tuned =  gbm.fit(X_train,y_train)","d29b704a":"y_pred = gbm_tuned.predict(X_test)\ngbm_final = accuracy_score(y_test, y_pred)\ngbm_final","5a8dd1ba":"xgb_model = XGBClassifier().fit(X_train, y_train)","d62900ad":"y_pred = xgb_model.predict(X_test)\naccuracy_score(y_test, y_pred)","c3a52b76":"xgb_params = {\n        'n_estimators': [100, 500, 1000, 2000],\n        'subsample': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5,6],\n        'learning_rate': [0.1,0.01,0.02,0.05]}","43e27e0a":"xgb = XGBClassifier()\n\nxgb_cv_model = GridSearchCV(xgb, xgb_params, cv = 10, n_jobs = -1, verbose = 2)","596c7160":"xgb_cv_model.fit(X_train, y_train)","24e82daf":"print(\"Best parameters: \" + str(xgb_cv_model.best_params_))","6d39ac1d":"xgb = XGBClassifier(learning_rate = 0.1, \n                    max_depth = 3,\n                    n_estimators = 100,\n                    subsample = 1.0)","a0a67cc1":"xgb_tuned =  xgb.fit(X_train,y_train)","8a784628":"y_pred = xgb_tuned.predict(X_test)\nxgb_final = accuracy_score(y_test, y_pred)\nxgb_final","60d8463a":"lgbm_model = LGBMClassifier().fit(X_train, y_train)","1428d227":"y_pred = lgbm_model.predict(X_test)\naccuracy_score(y_test, y_pred)","2537d67d":"lgbm_params = {\n        'n_estimators': [100, 500, 1000, 2000],\n        'subsample': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5,6],\n        'learning_rate': [0.1,0.01,0.02,0.05],\n        \"min_child_samples\": [5,10,20]}","8c488324":"lgbm = LGBMClassifier()\n\nlgbm_cv_model = GridSearchCV(lgbm, lgbm_params, \n                             cv = 10, \n                             n_jobs = -1, \n                             verbose = 2)","8da3096c":"lgbm_cv_model.fit(X_train, y_train)","e63f4be9":"lgbm_cv_model.best_params_","2a1f828f":"lgbm = LGBMClassifier(learning_rate = 0.01, \n                       max_depth = 3,\n                       min_child_samples = 10,\n                       n_estimators = 500,\n                       subsample = 0.6,\n                       )","edfdba29":"lgbm_tuned = lgbm.fit(X_train,y_train)","9c628fdd":"y_pred = lgbm_tuned.predict(X_test)\nlgbm_final = accuracy_score(y_test, y_pred)\nlgbm_final","0cf24c07":"cat_model = CatBoostClassifier().fit(X_train, y_train)","71922ccc":"y_pred = cat_model.predict(X_test)\naccuracy_score(y_test, y_pred)","fd22857a":"catb_params = {\n    'iterations': [200,500],\n    'learning_rate': [0.01,0.05, 0.1],\n    'depth': [3,5,8] }","64adb02a":"catb = CatBoostClassifier()\ncatb_cv_model = GridSearchCV(catb, catb_params, cv=5, n_jobs = -1, verbose = 2)\ncatb_cv_model.fit(X_train, y_train)","f6332de2":"catb_cv_model.best_params_","b878ec83":"catb = CatBoostClassifier(iterations = 200, \n                          learning_rate = 0.01, \n                          depth = 3)\n\ncatb_tuned = catb.fit(X_train, y_train)\ny_pred = catb_tuned.predict(X_test)","7808da25":"y_pred = catb_tuned.predict(X_test)\ncatb_final = accuracy_score(y_test, y_pred)\ncatb_final","eca2de4a":"models = {\n'log_reg_final': log_reg_final,\n'nb_final': nb_final,\n'knn_final': knn_final,\n'svc_linear_final': svc_linear_final,\n'svc_rbf_final': svc_rbf_final,\n'svc_poly_final': svc_poly_final,\n'cart_final': cart_final,\n'rf_final': rf_final,\n'gbm_final': gbm_final,\n'xgb_final': xgb_final,\n'lgbm_final': lgbm_final,\n'catb_final': catb_final\n}\n\nfor model,score in models.items():\n    print(\"-\"*28)\n    print(model + \":\" )\n    print(\"Accuracy: {:.4%}\".format(score))","2c2d6eb3":"indexes = [\"Log\",\"NB\",\"KNN\",\"SVC_Lin\",\"SVC_Rbf\", \"SVC_Poly\", \"CART\", \"RF\", \"GBM\", \"XGB\", \"LGBM\", \"CATB\"]\nscores = [\n     log_reg_final,\nnb_final,\nknn_final,\nsvc_linear_final,\nsvc_rbf_final,\nsvc_poly_final,\ncart_final,\n    rf_final,\n    gbm_final,\nxgb_final,\nlgbm_final,\n    catb_final]\n\nplt.figure(figsize=(12,8))\nsns.barplot(x=indexes,y=scores)\nplt.xticks()\nplt.title('Model Comparision',color = 'orange',fontsize=20);","64f5714b":"### We check the general statistical info of the data.","8c4026c5":"### Model Tuning","c1c654f9":"# Model Comparison\n### Different approaches are used and compared in this study to predict whether a patient has a heart condition or not. \n### According to accuracy scores of different methods, CatBoost has the best score.","020a309b":"### We display the countplots of discrete variables. \n- We have more males (1) in our observations.\n- We have asymptomatic (3) as the most frequent chest pain type, non-anginal pain (2) comes the second. \n- We have more observations with fasting blood sugar < 120 mg\/dl (0).\n- We have normal (0) as the most frequent resting electrocardiographic results, showing probable or definite left ventricular hypertrophy by Estes' criteria (2) comes the second. \n- We have more observations with no exercise induced angina (0).\n- We have upsloping (0) as the most frequent slope, flat (1) comes the second.\n- We have 0 as the most frequent number of major vessels colored by flourosopy, 1 comes the second.\n- We have normal (0) as the most frequent category in thal, reversable defect (2) comes the second. \n- Finally, we have more patients without a heart condition.","6c893168":"## CART","bbb60b46":"### Train-Test Splitting\n- I have decided to split the data as 0.7\/0.3 since we have relatively small number of observations. In this respect, it would be a better idea to have more observations as test data. ","773735bc":"### 1- Linear","736a8a3f":"## Cat Boost","4f3065cc":"### 3- Poly","989cc35c":"### Model Tuning","c43755c9":"## XGBoost","656959a5":"### Countplots with heart condition as the second factor. \n- Males have more heart condition than females.\n- It is interesting to observe that patients who have asymptomatic chest pain type have higher heart condition compared to the other cp types. Then, chest pain type may not be a good indicator of heart condition.\n- According to the resting electrocardiographic results, patient with the value of 1 and 2 tend to have higher heart condition.\n- Patients who have exercise induced angina tend to have more heart condition.\n- Regarding the slope of the peak exercise ST segment, patients with flat slope tend to have higher heart condition.\n- It can be see that proportion of heart condition increases as the number of major vessels (0-3) colored by flourosopy increases.\n- Regarding thal, patients with reversable defect tend to have higher heart condition.","81d9f3fa":"### We check the correlation between the variables. When we look at the correlation between the independent variables and the target variable, only thal has a score greater than 0.5.","0a123631":"### Model Tuning","5069e197":"### Model Tuning","eef6ef6b":"### Prediction","971ed961":"### We check the number of unique values in each feature.","3334bd9a":"## Random Forest","3784e639":"### We have 297 observations and 14 features.","a24963b8":"### Model","4119d2cb":"### When we add categorical and discrete variables of exercise induced angina, the slope of the peak exercise ST segment, number of major vessels (0-3) colored by flourosopy and thal as the third factor into the swarm plots, we can see that these variables are useful to differentiate a patient with heart condition.","7f0fe629":"### Model Tuning","7bd27128":"## Gaussian Naive Bayes","e1bb57de":"## Gradient Boosting Machines","1c2a3bdc":"# Data Preprocessing\n- First, we need to create dummy variables for cp, restecg, thal and slope features through one-hot encoding in order to prevent any misinterpretation by algorithms as having some sort of order in the categorical values of these variables.\n- Secondly, when we look at the continuous variables, we can see that they have different scales and we need to use a scaling method. In this study, I have decided to MinMax Scaling. Other scaling methods can be used additionally for further comparison and improvement of the prediction models. ","0ee6e63f":"## KNN","f7a069e0":"## Light GBM","1ba04b9f":"### As mentioned above, when we look at the correlation between the independent variables and the target variable, only thal has a score greater than 0.5.","fccb8422":"## SVC","ec4c4b29":"### We do not have any nan values.","b38fe3e2":"## Logistic Regression","84c09b0e":"# General Information\n\n__Context__\n\n- This dataset is already presented in https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci. However, there are some descriptions that may lead to misconceptions and inconsistencies regarding a couple of observations compared to the original data presented in https:\/\/archive.ics.uci.edu\/ml\/datasets\/Heart+Disease.\n- These discussions can be found in https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci\/discussion\/105877. \n- In this framework, I have decided to use the revised dataset presented in https:\/\/www.kaggle.com\/cherngs\/heart-disease-cleveland-uci. More detailed explanation of the features is also given along with this revised dataset which is also stated below.\n\n__Content__\nThere are 13 attributes and our target variable as condition;\n1. __age__: age in years\n1. __sex__: sex (1 = male; 0 = female)\n1. __cp__: chest pain type\n    - Value 0: typical angina\n    - Value 1: atypical angina\n    - Value 2: non-anginal pain\n    - Value 3: asymptomatic\n1. __trestbps__: resting blood pressure (in mm Hg on admission to the hospital)\n1. __chol__: serum cholesterol in mg\/dl\n1. __fbs__: (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n1. __restecg__: resting electrocardiographic results\n    - Value 0: normal\n    - Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    - Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n1. __thalach__: maximum heart rate achieved\n1. __exang__: exercise induced angina (1 = yes; 0 = no)\n1. __oldpeak__ = ST depression induced by exercise relative to rest\n1. __slope__: the slope of the peak exercise ST segment\n    - Value 0: upsloping\n    - Value 1: flat\n    - Value 2: downsloping\n1. __ca__: number of major vessels (0-3) colored by flourosopy\n1. __thal__: 0 = normal; 1 = fixed defect; 2 = reversable defect\n1. __condition__: 0 = no disease, 1 = disease","c98044fc":"# Purpose of the study\n\n### We would like to find out the best model that would predict whether a patient has heart disease or not based on the given independent variables. \n### We will use the main classification approaches since we have a categorical dependent variable and compare them based on their accuracy scores. \n\n### For this purpose, the steps below will be followed in this study;\n\n- Have a general idea about the data set.\n- Use necessary methods to clean and prepare the data for analysis.\n- Conduct Explanatory Data Analysis (EDA) and visualization.\n- Pre-process the data.\n- Conduct the main classification analyses, check the accuracy scores and compare them.","e20c0db6":"### Cross Validation","980094b7":"### Model Tuning","289c147c":"### Displaying continuous variables through barplots and boxplots together with heart condition as the second factor. \n- The patients with heart condition are older, have higher resting blood pressure, slightly higher cholesterol, lower maximum heart rate achieved, higher ST depression.","70de467d":"### Cross Validation","0e9b3c10":"### 2- Rbf","e1e767f0":"# Classification Models","2bd2f911":"### Model Tuning"}}