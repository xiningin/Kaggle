{"cell_type":{"57bd8559":"code","da7e1926":"code","74126432":"code","5fc53b9b":"code","29ef2436":"code","3a2744c4":"code","dad8d829":"code","3c1ee232":"code","2b971b2a":"code","7a3a58be":"code","5e5a4f4c":"code","b3fedcf2":"code","7ae66ca5":"code","84579686":"code","ec643529":"code","2bb2d93a":"code","2ee1ce9f":"markdown","c14e0857":"markdown","5629f2d8":"markdown","a0f1e50c":"markdown","92cc1492":"markdown"},"source":{"57bd8559":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da7e1926":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom sklearn.linear_model import ElasticNet, Lasso,  BayesianRidge, LassoLarsIC\nfrom sklearn.ensemble import RandomForestRegressor,  GradientBoostingRegressor\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin, clone\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport xgboost as xgb\nimport lightgbm as lgb\nfrom sklearn.pipeline import make_pipeline","74126432":"PATH = \"..\/input\/tabular-playground-series-jan-2021\/\"\ntrain = pd.read_csv(f\"{PATH}train.csv\",index_col='id')\ntest = pd.read_csv(f\"{PATH}test.csv\",index_col='id')\nsubmission= pd.read_csv(f\"{PATH}sample_submission.csv\",index_col='id')","5fc53b9b":"from scipy import stats\nz = np.abs(stats.zscore(train))\ntrain = train[(z < 3).all(axis=1)]","29ef2436":"train_c = train.copy()","3a2744c4":"X = train_c.iloc[:,:-1].values\ny = train_c.iloc[:,14].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.10,random_state=0)","dad8d829":"model_xgb = xgb.XGBRegressor()\n\nmodel_xgb.fit(X_train, y_train, early_stopping_rounds=7, eval_set=[(X_test, y_test)], verbose=1)\n\n","3c1ee232":"model_xgb_pred = model_xgb.predict(X_test)\nscore_reg = mean_squared_error(y_test, model_xgb_pred, squared=False)\nxgb_pred=model_xgb.predict(test.values)\nprint(f'{score_reg:0.5f}')","2b971b2a":"model_lgb = lgb.LGBMRegressor()\nmodel_lgb.fit(X_train, y_train, early_stopping_rounds=10, eval_set=[(X_test, y_test)], verbose=1)","7a3a58be":"model_lgb_pred =model_lgb.predict(X_test)\nscore_reg = mean_squared_error(y_test, model_lgb_pred, squared=False)\nlgb_pred=(model_lgb.predict(test.values))\nprint(f'{score_reg:0.5f}')","5e5a4f4c":"model_lgb.feature_importances_","b3fedcf2":"def rmsle(y, y_pred):\n    mean_squared_error(y, y_pred,squared=False)\n    return print(f'{score_reg:0.5f}')","7ae66ca5":"print('RMSLE score on train data:')\nprint(mean_squared_error(y_test, 0.75*model_lgb_pred+0.25*model_xgb_pred, squared=False))","84579686":"xgb_pred=model_xgb.predict(test.values)\nlgb_pred=model_lgb.predict(test.values)","ec643529":"ensemble = 0.75*lgb_pred+0.25*xgb_pred","2bb2d93a":"submission['target'] = ensemble\nsubmission.to_csv('model_lgb_xgb.csv')","2ee1ce9f":"# XGBoost Regressor\n","c14e0857":"# Removing outliers\n","5629f2d8":"# Model Stacking\n\n****","a0f1e50c":"# LGBM Regressor\n","92cc1492":"# Base Models"}}