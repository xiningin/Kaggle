{"cell_type":{"43ccf227":"code","45f3b6ae":"code","db144e39":"code","068738dd":"code","4a3fc7ce":"code","64a6f294":"code","3196ea19":"code","5ce71b4e":"code","aca96b6a":"code","f1587864":"code","4dee2699":"code","e7da5545":"code","f3468dd5":"markdown","7f207bfe":"markdown"},"source":{"43ccf227":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","45f3b6ae":"#separate dataframe into cities, states and countries\n#Disclaimer: OpenTable did not provide data on all cities, states and countries \npd.read_csv('\/kaggle\/input\/opentable-reservation-data\/YoY_Seated_Diner_Data.csv')\ncountry = resv[resv.Type=='country']\nstates= resv[resv.Type == 'state']\ncity = resv[resv.Type == 'city']","db144e39":"states.describe() #row indices are states, columns are dates of OpenTable data","068738dd":"resv.Type.value_counts() #Breakdown of number of cities, states, and countries OpenTable Collected data on","4a3fc7ce":"plt.figure(figsize = (15,10))\nplt.plot(np.transpose(states[states.Name=='Maryland'])[2:],'bo:',np.array([0 for zero in range(len(np.transpose(states[states.Name =='Maryland'])[2:]))]),\n         'k--',) #Using the transpose so reservation dates become rows\nplt.xticks(states[states.Name=='Maryland'].columns[2::7],fontsize = 12) #Separating the xticks by week to make less cluttered\nplt.yticks(fontsize = 12)\nplt.title(\"Maryland's Year-over-Year Change in Reservations\",fontsize = 30,fontweight = 'bold')\nplt.xlabel('Month\/day in 2020', fontsize = 18)\nplt.ylabel('Change in Reservations YOY (percent)',fontsize = 18)\nplt.figtext(0.5, 0.04, 'Source: opentable.com\/state-of-industry', wrap=True, horizontalalignment='center', fontsize=12)\nplt.show()","64a6f294":"usa = country[country.Name == 'United States']\nuk = country[country.Name == 'United Kingdom']\nger = country[country.Name =='Germany']\ncan = country[country.Name =='Canada']\nplt.figure(figsize = (15,10))\nplt.plot(np.transpose(usa)[2:],'bo:',np.transpose(uk)[2:],'go:',np.transpose(ger)[2:],'yo:',np.transpose(can)[2:],'ro:',\n         np.array([0 for zero in range(len(np.transpose(country[country.Name =='United Kingdom'])[2:]))]),\n         'k--',alpha = 0.6)\nplt.xticks(usa.columns[2::7],fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('Country Changes in Reservations Year-over-Year',fontsize = 30, fontweight = 'bold')\nplt.legend(('USA','United Kingdom','Germany','Canada'),loc = 'upper left',fontsize = 12)\nplt.xlabel('Month\/Day in Year 2020',fontsize = 18)\nplt.ylabel('Percent change from pervious year',fontsize = 18)\nplt.figtext(0.5, 0.04, 'Source: opentable.com\/state-of-industry', wrap=True, horizontalalignment='center', fontsize=12)\nplt.show()","3196ea19":"hou = np.transpose(city[city.Name == 'Houston'])[2:]\nbal = np.transpose(city[city.Name == 'Baltimore'])[2:]\nnyc = np.transpose(city[city.Name == 'New York'])[2:]\nsea = np.transpose(city[city.Name == 'Seattle'])[2:]\nmia = np.transpose(city[city.Name == 'Miami'])[2:]\nla = np.transpose(city[city.Name == 'Los Angeles'])[2:]\nno = np.transpose(city[city.Name == 'New Orleans'])[2:]","5ce71b4e":"plt.figure(figsize = (15,10))\nplt.plot(hou,'bo:',mia,'ro:',nyc,'go:',sea,'yo:',no,'ko:',\n         la,'mo:',\n         np.array([0 for zero in range(len(np.transpose(city[city.Name =='Baltimore'])[2:]))]),\n         'k--',alpha = 0.52)\nplt.xticks(usa.columns[2::7],fontsize = 12)\nplt.xticks(usa.columns[2::7],fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('City Changes in Reservations Year-over-Year',fontsize = 30, fontweight = 'bold')\nplt.legend(('Houston','Miami','New York City','Seattle','New Orleans','Los Angeles'),loc = 'upper right')\nplt.xlabel('Month\/Day in Year 2020',fontsize = 18)\nplt.ylabel('Percent change from pervious year',fontsize = 18)\nplt.figtext(0.5, 0.04, 'Source: opentable.com\/state-of-industry', wrap=True, horizontalalignment='center', fontsize=12)\nplt.show()","aca96b6a":"tx = np.transpose(states[states.Name == 'Texas'])[2:]\npa = np.transpose(states[states.Name == 'Pennsylvania'])[2:]\nny = np.transpose(states[states.Name == 'New York'])[2:]\nnj = np.transpose(states[states.Name == 'New Jersey'])[2:]\nfl = np.transpose(states[states.Name == 'Florida'])[2:]\nca = np.transpose(states[states.Name == 'California'])[2:]\nmi = np.transpose(states[states.Name == 'Michigan'])[2:]","f1587864":"plt.figure(figsize = (15,10))\nplt.plot(tx,'bo:',pa,'ro:',ny,'go:',nj,'yo:',fl,'ko:',\n         ca,'mo:', mi,'co:',\n         np.array([0 for zero in range(len(np.transpose(city[city.Name =='Baltimore'])[2:]))]),\n         'k--',alpha = 0.52)\nplt.xticks(usa.columns[2::7],fontsize = 12)\nplt.xticks(usa.columns[2::7],fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.title('State Changes in Reservations Year-over-Year',fontsize = 30, fontweight = 'bold')\nplt.legend(('Texas','Pennsylvania','New York','New Jersey','Florida','California', 'Michigan'),loc = 'upper right')\nplt.xlabel('Month\/Day in Year 2020',fontsize = 18)\nplt.ylabel('Percent change from pervious year',fontsize = 18)\nplt.figtext(0.5, 0.04, 'Source: opentable.com\/state-of-industry', wrap=True, horizontalalignment='center', fontsize=12)\nplt.show()","4dee2699":"def resv_plot(land,name):  #land is either a city, state or country. Name is the city\/state\/country name to extract data from\n    geo = resv[resv.Type == land]\n    if land not in ['city','state','country']:\n        print('land argument must be either: city, state or country and formatted as a string')\n    else:\n        n = geo[geo.Name == name]\n        \n        try:\n            plt.figure(figsize = (15,10))\n            plt.plot(np.transpose(n)[2:],'o:' ,np.array([0 for zero in range(len(np.transpose(n)[2:]))]),'k:')\n            plt.xticks(geo.columns[2::7],fontsize = 12)\n            plt.yticks(fontsize = 12)\n            plt.title('{} Changes in Reservations Year-over-Year'.format(name),fontsize = 30, fontweight = 'bold')\n            plt.xlabel('Month\/Day in Year 2020',fontsize = 18)\n            plt.ylabel('Percent change from pervious year',fontsize = 18)\n            plt.figtext(0.5, 0.04, 'Source: opentable.com\/state-of-industry', wrap=True, horizontalalignment='center', fontsize=12)\n            plt.show()\n\n        except ZeroDivisionError:\n            print('{} is not in the OpenTable dataset'.format(land.capitalize()))\n        ","e7da5545":"resv_plot('city','San Francisco')","f3468dd5":"Created a function to plot any city, state, or country using only two argument","7f207bfe":"**Plotted reservation changes for several states in the USA.**"}}