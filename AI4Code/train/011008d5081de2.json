{"cell_type":{"034c2891":"code","55adeea8":"code","75a01323":"code","4b6e2be5":"code","7c03bb4f":"code","39b37854":"code","c3f0f45d":"code","666b5803":"code","c636a9c0":"code","3220eff3":"code","1d18f6cf":"code","1ab0aaed":"code","7f437ed5":"code","300aa689":"code","304469d8":"code","bcddd195":"code","f569b675":"code","37fdd555":"code","12c9bc1d":"code","be1dd462":"code","130b143c":"code","5f072ae8":"code","2bfe1ffc":"code","6aaf6651":"markdown","a6bbb496":"markdown","75f8c89f":"markdown","160157c6":"markdown","5b70db18":"markdown","3acc7c6e":"markdown","e59abbeb":"markdown","13a3aa98":"markdown","376fee4a":"markdown","caae2ea0":"markdown"},"source":{"034c2891":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55adeea8":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\n\nimport matplotlib as mlt\nfrom mpl_toolkits.basemap import Basemap\nfrom PIL import Image\nfrom pylab import rcParams","75a01323":"data=pd.read_csv('..\/input\/california-housing-prices\/housing.csv')\ndata.head()","4b6e2be5":"data.tail()","7c03bb4f":"rows,cols=data.shape\nprint(\"Rows:\",rows,\"Cols:\",cols)","39b37854":"data.info()","c3f0f45d":"data.describe()","666b5803":"miss=data.isnull().sum().sum()\nprint(\"Missing Data:\",round((miss\/rows)*100,3),\"%\")","c636a9c0":"data.isnull().sum()\n#Total Bedrooms has missing values","3220eff3":"data=data.fillna(method=\"ffill\") \ndata.isnull().sum()\n#It can be handled in many ways other than ffill (Forward Fill) too","1d18f6cf":"sns.set_theme(style=\"dark\")","1ab0aaed":"sns.countplot(x=\"ocean_proximity\",data=data,palette=\"prism\")\nplt.show()","7f437ed5":"sns.boxplot(x=\"median_house_value\",data=data,color=\"#E11439\")\nplt.show()","300aa689":"plt.hist(data.median_house_value,bins=40,color='#E11439')\nplt.xlabel('Median Price of Houses in a block in $')\nplt.ylabel('Number of Houses')\nplt.title('Average Distribution of Median Price of Housing')\nplt.show()","304469d8":"print(\"Ocean Proximity Count\")\ndata['ocean_proximity'].value_counts()","bcddd195":"print(\"Before Encoding:\",data['ocean_proximity'].unique())\n\nEncoder=LabelEncoder()\ndata.ocean_proximity=Encoder.fit_transform(data.ocean_proximity)\n\nprint(\"After Encoding:\",data['ocean_proximity'].unique())","f569b675":"print(\"Ocean Proximity Count\")\ndata['ocean_proximity'].value_counts()","37fdd555":"#Sample of 300 Houses\ndf=data.sample(300)\nr,c=df.shape\nprint(\"R:\",r,\"C:\",c)","12c9bc1d":"#Only Latitude and Longitude Features are required\ndf=df.iloc[:,0:2]\nprint(*df.columns)","be1dd462":"#Set Upper and Lower Limit of Latitude and Longitude\n#Use OpenStreetMap Export Option\nllat=32.361\nulat=42.261\n\nllon=-125.046\nulon=-114.368","130b143c":"#Retrieve datapoints in the specified area\ndf=df[(df['longitude']>llon) & (df['longitude']<ulon) & \n      (df['latitude']>llat) & (df['latitude']<ulat)]\nprint(\"Number of final datapoints:\",len(df))","5f072ae8":"#Plot the Map\nmy_map=Basemap(projection='merc',\n            resolution = 'l', area_thresh = 1000.0,\n            llcrnrlon=llon, llcrnrlat=llat,urcrnrlon=ulon, urcrnrlat=ulat)\n\nmy_map.drawcoastlines()\nmy_map.drawcountries()\nmy_map.drawlsmask(land_color='green', ocean_color='#023B56')\nxs,ys = my_map(np.asarray(df.longitude), np.asarray(df.latitude))\ndf['x']= xs.tolist()\ndf['y'] =ys.tolist()\n\nfor index,row in df.iterrows():\n   my_map.plot(row.x,row.y,markerfacecolor='black',\n               markeredgecolor='white',marker='o',markersize=10)\nplt.title(\"House Locations in California (N=300)\")\n\n#Download the Map\nplt.savefig(\"ExampleMap.png\", dpi=300)","2bfe1ffc":"#Display Downloaded Image\nfrom IPython.display import Image\nImage(filename='.\/ExampleMap.png')","6aaf6651":"### **Visualization using Matplotlib and Seaborn**","a6bbb496":"### **Handling Categorical Data - Ocean Proximity**","75f8c89f":"### **Dataset Overview**","160157c6":"### **Read Dataset**","5b70db18":"# **Dataset Overview, Visualization & California Map**\n\n**Dataset**\n\nThe data pertains to the houses found in a given California district and some summary stats about them based on the 1990 census data. The dataset might require some preprocessing before applying prediction algorithms. \n\nThe features are as follows: longitude, latitude, housing_median_age, total_rooms, total_bedrooms, population, households, median_income, median_house_value, and ocean_proximity.\n\n**Tasks**\n\n1. Check and Handle Missing Data\n2. Visualization using Matplotlib and Seaborn\n3. Handling Categorical Data - Ocean Proximity\n4. Plotting 300 House Locations on California Map","3acc7c6e":"### **Checking for Missing Values**","e59abbeb":"### **Required Libraries**","13a3aa98":"### **Dealing with Missing Values**","376fee4a":"### **Plotting 300 House Locations on California Map**\nPlotting 20640 points on a map will make it crowded and unappealing. Hence, using a sample of 300 points. Feel free to expand the same concept for the entire dataset. ","caae2ea0":"### **Future Work**\n\nApply Machine Learning Techniques to predict median_house_value\n\n### **Further Reading** \n* [How to Plot Data on a World Map in Python? - Medium.com](https:\/\/medium.com\/analytics-vidhya\/how-to-plot-data-on-a-world-map-in-python-25cf9733c3dd)\n* [3 Easy Ways to Handle Categorical Data in Python - Medium.com](https:\/\/medium.com\/analytics-vidhya\/3-easy-ways-to-handle-categorical-data-python-b43fbd81e227)\n* [Another Example: Plotting African Capitals on Map - Kaggle Notebook](https:\/\/www.kaggle.com\/athisha\/plotting-african-capitals-on-map)"}}