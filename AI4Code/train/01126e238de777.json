{"cell_type":{"19817cc4":"code","275e22e9":"code","b647f3f8":"code","f76af4ea":"code","5f921dda":"code","d2fdfd66":"code","59a92146":"code","b6d8fd29":"code","8fbc9319":"code","28b0448b":"code","cc254fc4":"code","aba606c4":"code","57bddc96":"code","cd4b25b9":"code","2c81baa2":"code","201af759":"code","a020ad8d":"code","537a6095":"code","4879a5ac":"code","c63109df":"code","76d6e36c":"code","4bb373d3":"code","9d073a2b":"code","9d03e7aa":"code","6526bf0c":"code","0e1cddc7":"code","f6ad2b79":"code","340d88fa":"code","479bc6ac":"code","768ec3dc":"code","0782fef4":"code","6151f258":"code","6f4e1dd6":"code","1ce28ec1":"code","8d37ab82":"code","f04bc563":"markdown","212fb513":"markdown","37e642c4":"markdown","383e0f56":"markdown","d1c92cd2":"markdown","5737f40c":"markdown","cf0e1473":"markdown","37c7c7b9":"markdown","1d51c711":"markdown","62e4e2cf":"markdown","f2629e60":"markdown","594e9440":"markdown","4e7d7d55":"markdown","8910b0bf":"markdown","5b4b814f":"markdown","89d9b155":"markdown","e9453001":"markdown","49763744":"markdown","45f144dc":"markdown","5f92c2d5":"markdown","451b1986":"markdown","ca75379c":"markdown","4abfb3f3":"markdown"},"source":{"19817cc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","275e22e9":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import zscore\nfrom collections import Counter","b647f3f8":"df = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\n","f76af4ea":"df.head(3)","5f921dda":"sns.countplot(df['Class'])\n","d2fdfd66":"x = df.drop(columns = ['Class'])\ny = df.Class","59a92146":"# Shape of the x and y\nprint(x.shape,y.shape)\n","b6d8fd29":"x.info()\n","8fbc9319":"x['Amount'] = zscore(x['Amount'])\nx['Time']= zscore(x['Time'])","28b0448b":"plt.figure(figsize=(12,6))\nsns.lmplot(x = 'Time',y='Amount',hue = 'Class',data = df,fit_reg=False)","cc254fc4":"from imblearn.under_sampling import NearMiss","aba606c4":"nm = NearMiss()\nx_bal,y_bal = nm.fit_sample(x,y)\n","57bddc96":"print(\"x :-\",x_bal.shape,\"y :-\",y_bal.shape)","cd4b25b9":"frame = [x_bal,y_bal]\ndf_under = pd.concat(frame,axis=1)\nsns.lmplot(x = 'Time', y = 'Amount',hue = 'Class',fit_reg=False,data = df_under)","2c81baa2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix","201af759":"xtrain,xtest,ytrain,ytest =train_test_split(x_bal,y_bal,test_size = 0.2,random_state = 42)\nlr = LogisticRegression()","a020ad8d":"lr.fit(xtrain,ytrain)\nyp = lr.predict(xtest)","537a6095":"accuracy_score(ytest,yp)","4879a5ac":"sns.heatmap(confusion_matrix(ytest,yp,labels=[0,1]),annot=True)","c63109df":"from imblearn.over_sampling import RandomOverSampler","76d6e36c":"os = RandomOverSampler(random_state=42)\nx_bal,y_bal = os.fit_sample(x,y)","4bb373d3":"frame = [x_bal,y_bal]\ndf_under = pd.concat(frame,axis=1)\nsns.lmplot(x = 'Time', y = 'Amount',hue = 'Class',fit_reg=False,data = df_under)","9d073a2b":"x_bal.shape,y_bal.shape\n","9d03e7aa":"xttrain,xtest,ytrain,ytest = train_test_split(x_bal,y_bal,test_size = 0.2,random_state = 42)\nlr.fit(xttrain,ytrain)","6526bf0c":"y_pred = lr.predict(xtest)\naccuracy_score(ytest,y_pred)","0e1cddc7":"\nsns.heatmap(confusion_matrix(ytest,y_pred,labels=[0,1]),annot=True)","f6ad2b79":"print(classification_report(ytest,y_pred))","340d88fa":"from imblearn.combine import SMOTETomek","479bc6ac":"smk = SMOTETomek(random_state=42)\nx_smk,y_smk = smk.fit_sample(x,y)","768ec3dc":"frame = [x_smk,y_smk]\ndf_under = pd.concat(frame,axis=1)\nsns.lmplot(x = 'Time', y = 'Amount',hue = 'Class',fit_reg=False,data = df_under)","0782fef4":"x_smk.shape,y_smk.shape","6151f258":"xttrain,xtest,ytrain,ytest = train_test_split(x_smk,y_smk,test_size = 0.2,random_state = 42)\nlr.fit(xttrain,ytrain)","6f4e1dd6":"ypred = lr.predict(xtest)\naccuracy_score(ytest,ypred)","1ce28ec1":"sns.heatmap(confusion_matrix(ytest,ypred,labels=[0,1]),annot=True)","8d37ab82":"print(classification_report(ytest,ypred))","f04bc563":"## Importing the Required Libraries","212fb513":"## First 3 Rows of the Dataset","37e642c4":"## Normalizing the two column","383e0f56":"### In the random under-sampling, the majority class instances are removed at random until a  balanced data is reached.","d1c92cd2":"## Dividing the data into X and Y","5737f40c":"## The Total Distribution of the classes ","cf0e1473":"### Using Logestic Regression To perform classification task","37c7c7b9":"### Data Distributon after performing OverSampling","1d51c711":"### classification report after performing the classification task","62e4e2cf":"### the random oversampling is making the copies of the minority class but this may result in overfitting","f2629e60":"### Using Logestic Regression To perform classification task","594e9440":"### classification report after performing the classification","4e7d7d55":"### Synthetic Minority Oversampling Technique(SMOTE) it works by selecting a minority class instance \"a\" at random and finds its k nearest minority class neighbors","8910b0bf":"## Scatter plot for the data classes","5b4b814f":"### Heatmap of confusion matrix","89d9b155":"### Dividing the Data into test and train","e9453001":"### Imbalanced classification involves developing predictive models on classification datasets that have a severe class imbalance. \n### For This Problem we will use imblearn library for handling the imbalance in the dataset. \n### There are 3 Techniques that we can use \n     1. Under sampling\n     2. Over Sampling\n     3. SMOTE\n     \n ","49763744":"### Testing Our accuracy ","45f144dc":"## Checking for the Null values","5f92c2d5":"### Data Distributon after performing Under Sampling","451b1986":"### Using Logestic Regression To perform classification task","ca75379c":"### Data distrubution after performing the SMOTE technque","4abfb3f3":"## Reading the Data"}}