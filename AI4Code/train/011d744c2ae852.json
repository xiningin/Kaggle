{"cell_type":{"3862a82d":"code","6b83aaa2":"code","2f0c0e26":"code","7c0c9bc7":"code","d512403d":"code","54e93df9":"code","30c15812":"code","88d1bfb2":"code","71ca6644":"code","b6c6d322":"code","05b591a8":"code","9c5423ae":"code","1ed02db7":"code","6dc4acf8":"code","57cf6518":"code","2f4e646e":"code","bd222aec":"code","e2a6bc9a":"code","cdb24a91":"code","0edbdf3f":"code","5428d7af":"code","8ec5c02c":"code","9236a313":"code","3422ff56":"markdown","34f4b867":"markdown","e1b7b177":"markdown","0d7c6ee0":"markdown","9fc46079":"markdown","36df2e2a":"markdown","865af722":"markdown","87907192":"markdown","4f4bbe5f":"markdown","fc790df6":"markdown","6e6fbec9":"markdown","fe922752":"markdown","3a4a5a4b":"markdown"},"source":{"3862a82d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6b83aaa2":"data = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")\ndata.head()","2f0c0e26":"data.tail()","7c0c9bc7":"data.shape","d512403d":"data.info()","54e93df9":"data.columns","30c15812":"print(data[\"Nationality\"].value_counts(dropna=False))","88d1bfb2":"data.describe()","71ca6644":"data1 = data.head(50)\ndata1.boxplot(column=\"Age\",by=\"Overall\")","b6c6d322":"data_new = data.head()\ndata_new","05b591a8":"melted = pd.melt(frame=data_new,id_vars=\"Name\",value_vars=[\"GKHandling\",\"GKReflexes\"],value_name=\"capability_level\")\nmelted","9c5423ae":"melted.pivot(index=\"Name\",columns=\"variable\",values=\"capability_level\")","1ed02db7":"data1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1,data2],axis=0,ignore_index=True)\nconc_data_row","6dc4acf8":"data1 = data[\"SlidingTackle\"].head()\ndata2 = data[\"Marking\"].head()\nconc_data_col = pd.concat([data1,data2],axis=1)\nconc_data_col","57cf6518":"data.dtypes","2f4e646e":"data[\"Age\"] = data[\"Age\"].astype(\"float\")\ndata[\"Photo\"] = data[\"Photo\"].astype(\"category\")","bd222aec":"data.info()","e2a6bc9a":"data[\"Age\"].value_counts(dropna=True)","cdb24a91":"data[\"Age\"].dropna(inplace=True)","0edbdf3f":"assert data[\"Age\"].notnull().all()","5428d7af":"data[\"Age\"].fillna(\"empty\",inplace=True)","8ec5c02c":"assert data[\"Age\"].notnull().all()","9236a313":"# for example\nassert data.columns[2] == \"Name\"\nassert data.Age.dtypes == np.float","3422ff56":"\nwe get the first 5 lines because we don't want to deal with too many numbers.Therefore we used head(). ","34f4b867":"\nshape gives us how many rows and columns","e1b7b177":"this is our map maybe.","0d7c6ee0":"* concat : allows merging data","9fc46079":"we find the nationalities of footballers and that how many footballers there are.","36df2e2a":"\ncolumns gives us columns :)","865af722":"Finally values in columns are value ","87907192":"used to change data types","4f4bbe5f":"* Black line at top is max\n* Blue line at top is 75%\n* Red line is median (50%)\n* Blue line at bottom is 25%\n* Black line at bottom is min\n* There are no outliers","fc790df6":" **BEG\u0130NNER LEVEL**\n * this is primarily for beginner friends\n * happy works\n ","6e6fbec9":"Tells you how many float int and objects are there (you can see at the bottom)","fe922752":"* melt : allows us to line columns.\n* value_name : We write the name of value","3a4a5a4b":"tail() give the last 5 lines we. "}}