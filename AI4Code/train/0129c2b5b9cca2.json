{"cell_type":{"6d1f04cc":"code","1126ad82":"code","388b4c5c":"code","bf479008":"code","11609db5":"code","e49fb23e":"code","e7590748":"code","381a1c07":"code","805c81d9":"code","4a91f180":"code","4a608829":"code","a08095c0":"markdown","affc3c33":"markdown","745c682c":"markdown","be839356":"markdown","e88d38b0":"markdown"},"source":{"6d1f04cc":"!pip install -q joypy","1126ad82":"import numpy as np\nimport joypy\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport matplotlib as cm\nimport shap\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier\nimport seaborn as sns\nfrom collections import Counter\nfrom sklearn.metrics import accuracy_score, roc_auc_score, f1_score\nfrom sklearn.metrics import classification_report, confusion_matrix","388b4c5c":"import warnings\nwarnings.filterwarnings('ignore')","bf479008":"heg_meta = pd.read_csv('..\/input\/one-of-the-biggest-brazilian-cancers-center\/heg_sample_data.csv')\nprint(heg_meta.info())\nheg_meta.sample(5)","11609db5":"heg_meta.columns.values","e49fb23e":"plt.figure(dpi=250)\nsns.heatmap(heg_meta.iloc[:,[1,2,3,4,9,14,19,24,29,34,39,72]].corr(), cmap='viridis', annot=True, annot_kws={\"size\":5})\nplt.tick_params(axis=\"x\", labelsize=3)\nplt.tick_params(axis=\"y\", labelsize=3)\nplt.xticks(rotation=45)\nplt.show()","e7590748":"fig, axes = joypy.joyplot(heg_meta.iloc[:,[39,40,41,42,43]], figsize=(12,6), colormap=cm.cm.get_cmap('Spectral'))\nfig, axes = joypy.joyplot(heg_meta.iloc[:,[9,10,11,12,13]], figsize=(12,6), colormap=cm.cm.get_cmap('Spectral'))\nfig, axes = joypy.joyplot(heg_meta.iloc[:,[14,15,16,17,18]], figsize=(12,6), colormap=cm.cm.get_cmap('Spectral'))\nfig, axes = joypy.joyplot(heg_meta.iloc[:,[24,25,26,27,28]], figsize=(12,6), colormap=cm.cm.get_cmap('Spectral'))","381a1c07":"Counter(heg_meta['outcome'].values)","805c81d9":"column_names = list(heg_meta.columns.values[1:-1])\n\nX = np.array(heg_meta[heg_meta.columns[1:-1]])\ny = np.array(heg_meta.outcome.values)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\ny_train_count = Counter(y_train)\ny_test_count  = Counter(y_test)\nprint('Train count is {} and test count is {}.'.format(y_train_count, y_test_count))","4a91f180":"linear_reg = LinearRegression()\nlr_model   = linear_reg.fit(X_train, y_train)\nlr_predict = lr_model.predict(X_test)\n\nround_pred = np.where(lr_predict > 0.5, 1, 0)\nlr_acc     = accuracy_score(y_test, round_pred)\nlr_matrix  = confusion_matrix(y_test, round_pred)\n\nprint('Accuracy: {}'.format(lr_acc.round(2)))\nprint(classification_report(y_test, round_pred))\n\nfig=plt.figure(figsize=(12, 6))\nsns.heatmap(lr_matrix, annot=True, cmap='viridis', fmt='d') \nplt.show()","4a608829":"explainer_lr = shap.LinearExplainer(lr_model, masker=shap.maskers.Impute(data=X_train)).shap_values(X_train)\nplt.figure(dpi=100)\nshap.summary_plot(explainer_lr, X_train, plot_type=\"violin\", feature_names=column_names)\nplt.show()","a08095c0":"## Selecting 12 columns to display correlation matrix","affc3c33":"## Simple linear regression","745c682c":"## In the [paper](https:\/\/arxiv.org\/pdf\/2006.05514.pdf) they do not clarify what is the outcome. Im working with the idea that 1 stands for negative outcome and 0 a positive outcome","be839356":"## Showing all column names","e88d38b0":"## Lets check the distribution of some variables across timestamps"}}