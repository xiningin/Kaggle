{"cell_type":{"cef9d960":"code","8756717b":"code","5900c618":"code","68b645d1":"code","42f0eb79":"code","baed8c53":"code","80462f98":"code","e82a12d5":"code","55e482dd":"code","aba2ebae":"code","f18e74fd":"code","f7972b12":"code","205f7ca1":"code","ce533029":"code","daae504b":"code","967ccdb8":"code","951be638":"code","10b86002":"code","159d361a":"code","ebe00b83":"code","f77d6780":"code","5608e40f":"code","5e240d72":"code","fe45a010":"code","1213f120":"code","52ac3315":"code","de44d987":"code","9f70ef3b":"code","9eac9949":"code","63202cfb":"code","1dd13d48":"code","0c168e7a":"code","4afd9e53":"code","deebdb1f":"code","fbb78069":"code","e10ac768":"code","69dbe519":"code","a9d7ca87":"code","7b1852ac":"code","3a68067c":"code","590717dd":"code","169de90d":"code","9dd8c6bd":"code","418956d5":"code","b37f86b3":"code","e440ade5":"code","0e8a1f00":"code","cae1d6a0":"code","2424b39e":"code","93bf0c39":"code","f89b042c":"code","05241a8a":"code","370be424":"code","46920a2c":"markdown","74f333f5":"markdown","0968c32c":"markdown","36e65517":"markdown","c2190538":"markdown","78a488a9":"markdown","5c6f2a75":"markdown","f50e2863":"markdown","92bf227a":"markdown","0e192075":"markdown","3fc9cf65":"markdown","1039f85c":"markdown","df36d107":"markdown","28cc3766":"markdown","fe540c52":"markdown","398c3d73":"markdown","55e7f323":"markdown","7368ffac":"markdown","1f6647d5":"markdown","e3e60c8f":"markdown","e4952415":"markdown"},"source":{"cef9d960":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","8756717b":"df=pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")","5900c618":"df","68b645d1":"print(f\"There are {df.shape[0]} rows and {df.shape[1]} columns in the the dataset\")","42f0eb79":"df.columns","baed8c53":"df.info()","80462f98":"df.dtypes","e82a12d5":"df.describe()","55e482dd":"df.isnull().sum()","aba2ebae":"# Renaming the columns\ndf=df.rename(columns={'Serial No.':'SERIAL_NO','GRE Score':'GRE','TOEFL Score':'TOEFL','University Rating':'UNI_RATING','SOP':'SOP','LOR ':'LOR','CGPA':'CGPA','Research':'RESEARCH','Chance of Admit ':'CHANCE_OF_ADMIT'})","f18e74fd":"df.head()","f7972b12":"# Adding the percentage column\ndf['PERCENTAGE_OF_ADMIT']=df['CHANCE_OF_ADMIT']*100","205f7ca1":"df.head()","ce533029":"df.colums=df.columns.str.strip()","daae504b":"df.columns","967ccdb8":"#pair correlation between every column \ndf.corr()","951be638":"avg_gre = df['GRE'].mean()\navg_toefl = df['TOEFL'].mean()\navg_uni = df['UNI_RATING'].mean()\navg_sop = df['SOP'].mean()\navg_lor = df['LOR'].mean()\navg_cgpa = df['CGPA'].mean()\n\nprint(f\"\"\"The average of the data are:\n        Average GRE Score:{avg_gre},\\n\n        Average TOEFL Score:{avg_toefl},\\n\n        Average UNIVERCITY RATING:{avg_uni},\\n\n        Average SOP RATING:{avg_sop},\\n\n        Average LOR RATING:{avg_lor},\\n\n        Average CGPA RATING:{avg_cgpa}.\\n\n        \"\"\"\n) ","10b86002":"fig=plt.subplots(figsize=(22,10))\nplt.subplot(1,6,1)\nplt.hist(df['GRE'], rwidth=0.8)\nplt.title(\"Distribution of GRE Scores\")\nplt.xlabel('GRE Scores')\nplt.ylabel('Count')\n\nplt.subplot(1,6,2)\nplt.hist(df['TOEFL'], rwidth=0.8)\nplt.title('Distribution of TOEFL Scores')\nplt.xlabel('TOEFL Scores')\nplt.ylabel('Count')\n\nplt.subplot(1,6,3)\nplt.hist(df['UNI_RATING'], rwidth=0.7)\nplt.title('Distribution of University Rating')\nplt.xlabel('University Rating')\nplt.ylabel('Count')\n\nplt.subplot(1,6,4)\nplt.hist(df['SOP'], rwidth=0.7)\nplt.title('Distribution of SOP')\nplt.xlabel('SOP Rating')\nplt.ylabel('Count')\n\nplt.subplot(1,6,5)\nplt.hist(df['LOR'], rwidth=0.7)\nplt.title('Distribution of LOR Rating')\nplt.xlabel('LOR Rating')\nplt.ylabel('Count')\n\nplt.subplot(1,6,6)\nplt.hist(df['CGPA'], rwidth=0.7)\nplt.title('Distribution of CGPA')\nplt.xlabel('CGPA')\nplt.ylabel('Count')\n\n\nplt.show()","159d361a":"plt.figure(figsize=(12,8))\nsns.countplot(df['RESEARCH'],palette='flare')\nplt.xlabel('Research')\nplt.xlabel('Count of research done')\nplt.show()","ebe00b83":"plt.figure(figsize=(12,8))\nsns.countplot(df['UNI_RATING'],palette='flare')\nplt.xlabel('University ratings')\nplt.title('Count of University ratings')\nplt.show()","f77d6780":"sorted_counts=df['UNI_RATING'].value_counts()\nplt.figure(figsize=(12,8))\nplt.pie(sorted_counts,labels=sorted_counts.index,shadow=True,autopct='%.1f%%',explode=[0.2,0,0,0,0])\nplt.show()","5608e40f":"#relation between Gre and University\nplt.figure(figsize=(12,8))\nsns.barplot(x='UNI_RATING',y='GRE',data=df)\nplt.show()","5e240d72":"plt.subplots(figsize=(12,8))\n\nplt.subplot(1,2,1)\nsns.barplot(x='UNI_RATING',y='TOEFL',data=df)\n\nplt.subplot(1,2,2)\nsns.barplot(x='UNI_RATING',y='CGPA',data=df)\n\nplt.show()","fe45a010":"sns.factorplot(data=df, x=\"RESEARCH\", y=\"CGPA\", hue=\"UNI_RATING\", palette=['blue', 'red', 'yellow', 'grey','purple'], saturation=0.6,legend_out=False);","1213f120":"plt.plot('CGPA','GRE',data=df,marker='o',linestyle='none')\nplt.axvline(df['CGPA'].mean(),color='red')\nplt.axhline(df['GRE'].mean(),color='green');","52ac3315":"fig,ax=plt.subplots(figsize = (10,7))\nsns.distplot(df['LOR'],kde=True,color='purple',ax=ax)\nmean=df['LOR'].mean()\nax.axvline(mean, color='purple', linestyle='--')\nplt.title('Distribution of LOR Scores')\nplt.xlabel('Scores')\nplt.show()","de44d987":"fig,ax=plt.subplots(figsize = (10,7))\nsns.distplot(df['SOP'],kde=True,color='purple',ax=ax)\nmean=df['SOP'].mean()\nax.axvline(mean, color='purple', linestyle='--')\nplt.title('Distribution of SOP Scores')\nplt.xlabel('Scores')\nplt.show()","9f70ef3b":"df_copy=df.copy()","9eac9949":"df_copy=df_copy[df_copy['CHANCE_OF_ADMIT']>0.9]","63202cfb":"df_copy","1dd13d48":"df_copy.shape","0c168e7a":"plt.subplots(figsize=(12,8))\n\nplt.subplot(1,2,1)\nsns.countplot(df['RESEARCH'],palette='flare')\nplt.xlabel('Research')\nplt.xlabel('Count of research done')\nplt.show()\n\nplt.subplot(1,2,2)\nsns.countplot(df_copy['RESEARCH'],palette='flare')\nplt.xlabel('Research')\nplt.xlabel('Count of research done')\nplt.show()","4afd9e53":"plt.figure(figsize=(12,8))\nsns.countplot(df_copy['UNI_RATING'],palette='flare')\nplt.xlabel('University ratings')\nplt.title('Count of University ratings')\nplt.show()","deebdb1f":"plt.figure(figsize=(12,8))\nsns.barplot(x='TOEFL',y='GRE',data=df_copy)\nplt.show()","fbb78069":"x = df.drop(['CHANCE_OF_ADMIT','PERCENTAGE_OF_ADMIT','SERIAL_NO'],axis=1)\ny = df['CHANCE_OF_ADMIT']","e10ac768":"from sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import r2_score,accuracy_score\nfrom sklearn.model_selection import train_test_split","69dbe519":"x_train, x_test, y_train, y_test = train_test_split(x, y,\n                     test_size = 0.3, random_state = 47)","a9d7ca87":"print(len(x_train),len(y_train))","7b1852ac":"print(len(x_test),len(y_test))","3a68067c":"reg=LinearRegression()\nreg.fit(x_train,y_train)","590717dd":"y_pred = reg.predict(x_test)\nr2_score(y_test, y_pred)","169de90d":"model = LinearRegression(normalize=True)\nmodel.fit(x_test, y_test)\nmodel.score(x_test, y_test)*100","9dd8c6bd":"dtr=DecisionTreeRegressor()\ndtr.fit(x_train,y_train)","418956d5":"dtr_y_pred=dtr.predict(x_test)\nr2_score(y_test, dtr_y_pred)","b37f86b3":"rfr=RandomForestRegressor(random_state=0)\nrfr.fit(x_train,y_train)","e440ade5":"rfr_y_pred = rfr.predict(x_test)\nr2_score(y_test, rfr_y_pred)","0e8a1f00":"svr_model=SVR()\nsvr_model.fit(x_train,y_train)","cae1d6a0":"svr_y_pred=svr_model.predict(x_test)\nr2_score(y_test, svr_y_pred)","2424b39e":"knn=KNeighborsRegressor()\nknn.fit(x_train,y_train)","93bf0c39":"knn_y_pred=knn.predict(x_test)\nr2_score(y_test,knn_y_pred)","f89b042c":"model.predict([[337, 118, 4, 4.5, 4.5, 9.65, 0]])[0]*100","05241a8a":"model.predict([[325, 106, 3, 3.5, 4,8.4, 1]])[0]*100","370be424":"def pred(gre_score,toefl_score,uni_score,sop_score,lor_score,cgpa,research):\n  print(f\"Your parameters are-:\\nGre score:{gre_score}\\nToefl score:{toefl_score}\\nUniversity rating:{uni_score}\\nStatement of purpose Score:{sop_score}\\nLetter of Recommendation score:{lor_score}\\nCGPA:{cgpa}\\nResearch Experience:{research}\")\n\n  user_input=np.array([gre_score,toefl_score,uni_score,sop_score,lor_score,cgpa,research])\n  user_input=user_input.astype(np.float64)\n\n  result=model.predict([user_input])[0]*100\n\n  return (f\"Your chances of getting into College are:{result}\")\n\npred(339,110,4,4,4,9,1)","46920a2c":"# Exploring the dataset","74f333f5":"University with rating 4 and 5 have more chance","0968c32c":"## Predicting","36e65517":"### Support Vector Regression","c2190538":"### Linear regression","78a488a9":"### Random Forest Regression","5c6f2a75":"## Model training","f50e2863":"There are no null values in the dataset\n\n","92bf227a":"Univercity with 5 star rating has more higher scores in GRE","0e192075":"### Knn","3fc9cf65":"# Exploratory Data analysis","1039f85c":"![images.jfif](attachment:a743de40-d12d-4f27-a634-6df9d7651ef7.jfif)","df36d107":"People with 90% chances of admit have all done research\n","28cc3766":"## Feature Engineering","fe540c52":"### DecisionTreeRegressor","398c3d73":"As you can see university with rating 5 scored more in both toefl and In cgpa","55e7f323":"There are 61 people out of 500 with atleast 90% chance","7368ffac":"People with 90% chance have GRE higher than 300 and toefl higher than 110","1f6647d5":"In this notebook, we have data about College admissions from an Indian perspective.\nThe data contains:\n* GRE Scores ( out of 340 )\n* TOEFL Scores ( out of 120 )\n* University Rating ( out of 5 )\n* Statement of Purpose and Letter of Recommendation Strength ( out of 5 )\n* Undergraduate GPA ( out of 10 )\n* Research Experience ( either 0 or 1 )\n* Chance of Admit ( ranging from 0 to 1 )\n\nWe will be exploring the data and trying to find the best algorithm to predict the chances of admission.","e3e60c8f":"# **Admission Prediction for colleges**","e4952415":"Since, Linear regression is giving us the best results, we used it for the prediction."}}