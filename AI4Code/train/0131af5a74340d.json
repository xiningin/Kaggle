{"cell_type":{"53cab0f1":"code","2aff5655":"code","71d889d3":"code","dffe278d":"code","ec773abe":"code","df8e6461":"code","2cefcd6c":"code","a0dbb409":"code","d28202f1":"code","1d3d3b88":"code","93f7918d":"code","ecaa3ddf":"code","803f5baa":"markdown","9cc7c745":"markdown","9e284a12":"markdown","5df709aa":"markdown","477c9b88":"markdown","0d135949":"markdown","2681fa20":"markdown","3656d6f3":"markdown","bc364d26":"markdown","0d9842fc":"markdown","d0772cbd":"markdown","be1bbb08":"markdown"},"source":{"53cab0f1":"%matplotlib inline\nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport seaborn as sns\nimport glob\nimport numpy as np\nimport pandas as pd\nimport collections","2aff5655":"train_df = pd.read_csv(\"..\/input\/landmark-retrieval-2020\/train.csv\")\ntrain_df","71d889d3":"landmark_id = train_df.landmark_id.unique()\nprint(\"Number of landmark_id : \", len(landmark_id))","dffe278d":"imagedata = [] #\u521d\u671f\u5316\nlandmark_id_list = []\n\nfor ID_N in range(80):\n    train_df_id = train_df.loc[train_df.landmark_id == landmark_id[ID_N]]\n    train_df_id = train_df_id.reset_index(drop=True)\n    landmark_id_list.append(landmark_id[ID_N])\n    \n    num1 = str(train_df_id.id[0])[0]\n    num2 = str(train_df_id.id[0])[1]\n    num3 = str(train_df_id.id[0])[2]\n    filename = str(train_df_id.iloc[0, 0])\n    filepath = \"..\/input\/landmark-retrieval-2020\/train\/\" +num1+ \"\/\" +num2+\"\/\" +num3+ \"\/\" + filename + \".jpg\"\n    imagedata.append(cv2.imread(filepath))","ec773abe":"fig = plt.figure(figsize=(20,24))\n\nfor i in range(80):\n    plt.subplot(8, 10, i+1)\n    img = imagedata[i]\n    plt.title(landmark_id_list[i])\n    plt.grid(False)\n    plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n    plt.tick_params(labelbottom=False,\n                    labelleft=False,\n                    labelright=False,\n                    labeltop=False)","df8e6461":"ID_N = 0\n\ntrain_df_id = train_df.loc[train_df.landmark_id == landmark_id[ID_N]]\ntrain_df_id = train_df_id.reset_index(drop=True)\n\nimagedata = []\n\nfor i in range(len(train_df_id)):\n    num1 = str(train_df_id.id[i])[0]\n    num2 = str(train_df_id.id[i])[1]\n    num3 = str(train_df_id.id[i])[2]\n    filename = str(train_df_id.iloc[i, 0])   \n\n    filepath = \"..\/input\/landmark-retrieval-2020\/train\/\" +num1+ \"\/\" +num2+\"\/\" +num3+ \"\/\" + filename + \".jpg\"\n    imagedata.append(cv2.imread(filepath))\n\nprint(\"landmark_id =\", landmark_id[ID_N])","2cefcd6c":"fig = plt.figure(figsize=(16,8))\n\nfor i in range(12 if len(train_df_id) > 12 else (len(train_df_id))):\n    plt.subplot(3, 4, i+1)\n    img = imagedata[i]\n    plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))","a0dbb409":"c = collections.Counter(train_df.landmark_id)\nc = collections.Counter(list(c.values()))\nc = sorted(c.items())\n#sns.barplot(c)\n\nx = []\ny = []\n\nfor i in c:\n    x.append(i[0])\n    y.append(i[1])","d28202f1":"sns.set()\nsns.set_palette(\"winter_r\", 8, 0)\n\nfig = plt.figure(figsize=(24, 6))\nax = fig.add_subplot(1, 1, 1)\nsns.barplot(x[:100],y[:100])\nax.set(xlabel ='Number of photos per landmark',ylabel='Number of samples' )\nax.xaxis.set_major_locator(ticker.MultipleLocator(1))\nax.legend()","1d3d3b88":"sns.barplot(x[:19],y[:19])\nplt.xlabel(\"Number of photos per landmark\")\nplt.ylabel(\"Number of samples\")","93f7918d":"total1 = 0\ntotal2 = 0\n\nfor i in c:\n    if int(i[0]) < 7:\n        total1 = total1 + int(i[1])\n    else:\n        total2 = total2 + int(i[1])\n\nprint(\"\u5199\u771f\u304c7\u679a\u672a\u6e80\u306e\u5408\u8a08:\", total1, \"\u5199\u771f\u304c7\u679a\u4ee5\u4e0a\u306e\u5408\u8a08:\", total2)","ecaa3ddf":"pd.DataFrame(c).describe()[1]","803f5baa":"First. Check the contents of the data. image data and landmark_id are written in **train.csv**\n> \u307e\u305a\u3002\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002**train.csv**\u306b\u306f\u753b\u50cf\u30c7\u30fc\u30bf\u3068landmark_id\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3042\u308b\u3002","9cc7c745":"### Display test folder images by index \n>test\u30d5\u30a9\u30eb\u30c0\u306b\u3069\u306e\u3088\u3046\u306a\u753b\u50cf\u304c\u5165\u3063\u3066\u308b\u304b\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u8868\u793a\u3059\u308b","9e284a12":"### Browse and list image files by landmark ID\n> \u30e9\u30f3\u30c9\u30de\u30fc\u30afID\u3054\u3068\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3001\u4e00\u89a7\u3059\u308b  ","5df709aa":"Arrange photos with landmark_id = 1\n> landmark_id = 1\u306e\u5199\u771f\u3092\u4e26\u3079\u308b","477c9b88":"![overview](https:\/\/drive.google.com\/uc?export=view&id=1M6tTuTyADhICHKL3tRYkRSrnNv8R6LOx )","0d135949":"The photo with the fewest landmarks is one, while the photo with the most landmarks is 8306.\nMost landmarks have 4-5 photos.\n>\u6700\u3082\u5c11\u306a\u3044\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u306e\u5199\u771f\u306f1\u679a\u3067\u3042\u308b\u304c\u3001\u6700\u3082\u591a\u3044\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u306e\u5199\u771f\u306f8306\u679a\u3082\u3042\u308b\u3002\n>\u307b\u3068\u3093\u3069\u306e\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u306e\u5199\u771f\u306f4~5\u679a\u3067\u3042\u308b\u3002","2681fa20":"landmark_id = 1\u306e\u5199\u771f\u306f\u77f3\u7891\uff1f\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3063\u305f\u3002","3656d6f3":"![TurnOff](https:\/\/drive.google.com\/uc?export=view&id=14iabidS4S0Ur7R5smsHYBLZjTP9M3vWY )\n\nYou cannot use the internet in this competition. Turn it off.\n> \u3053\u306e\u30b3\u30f3\u30da\u3067\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u53f3\u4e0b\u306eSettings\u304b\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092OFF\u306b\u3057\u307e\u3059\u3002","bc364d26":"81313 landmark IDs in total in train.csv\n>train.csv\u306b\u66f8\u3044\u3066\u3042\u308b\u30e9\u30f3\u30c9\u30de\u30fc\u30afID\u306f\u5168\u90e8\u306781313\u500b   ","0d9842fc":"In this competition, we will create a model that looks for images related to test\/*\/*\/*\/*.jpg\n>\u672c\u30b3\u30f3\u30da\u3067\u306f\u3001test\/*\/*\/*\/*.jpg\u3068\u95a2\u9023\u3059\u308b\u753b\u50cf\u3092\u63a2\u3059\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002","d0772cbd":"### Find out how many photos are available for each landmark.\n\u5404\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u3054\u3068\u306b\u4f55\u679a\u306e\u5199\u771f\u304c\u7528\u610f\u3057\u3066\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u3002","be1bbb08":"I analyzed the data of Google Landmark Retrieval 2020.  \n> Google Landmark Retrieval 2020\u306b\u3064\u3044\u3066\u3001\u62d9\u3044\u306a\u304c\u3089\u3082\u30c7\u30fc\u30bf\u89e3\u6790\u3092\u3057\u307e\u3057\u305f\u3002\n\nIt's for Japanese, but I'll post English as well.\n> \u65e5\u672c\u4eba\u5411\u3051\u3067\u3059\u304c\u3001\u82f1\u8a9e\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002"}}