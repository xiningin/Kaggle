{"cell_type":{"f2041393":"code","0339001c":"code","3bd108b5":"code","7d945eca":"code","ee7421f2":"code","b9b95a7d":"code","2647a38d":"code","9b376d83":"markdown","450a85a0":"markdown","67828aab":"markdown","04ed10d3":"markdown","526d5558":"markdown","b7e1d071":"markdown","6b3aad02":"markdown"},"source":{"f2041393":"import numpy as np\nimport pandas as pd\nfrom datetime import datetime\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, Dropout\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\n\nDATASET_DIR = \"..\/input\/preprocessed-coronahack-train\/train\"\nBATCH_SIZE = 16","0339001c":"datagen = ImageDataGenerator(validation_split=0.3,\n                             rescale=1.\/255,\n                             horizontal_flip=True,\n                             vertical_flip=True,\n                             zoom_range=0.2,\n                             brightness_range=[1, 2])\n\ntrain_generator = datagen.flow_from_directory(\n    DATASET_DIR,\n    target_size=(200, 200),\n    batch_size=BATCH_SIZE,\n    class_mode=\"categorical\",\n    subset=\"training\"\n)\n\ntest_generator = datagen.flow_from_directory(\n    DATASET_DIR,\n    target_size=(200, 200),\n    batch_size=BATCH_SIZE,\n    class_mode=\"categorical\",\n    subset=\"validation\"\n)","3bd108b5":"train_generator.class_indices","7d945eca":"INPUT_SHAPE = (200, 200, 3)\nKERNEL_SIZE = 4\nPOOL_SIZE = 4\nSTRIDES = 4\nDROPOUT = 0.5","ee7421f2":"model = Sequential()\nmodel.add(Conv2D(filters=64, kernel_size=KERNEL_SIZE, padding='same',\n                 activation='relu', input_shape=INPUT_SHAPE))\nmodel.add(MaxPooling2D(pool_size=POOL_SIZE, strides=STRIDES))\nmodel.add(Dropout(DROPOUT))\nmodel.add(Conv2D(filters=32, kernel_size=KERNEL_SIZE,\n                 padding='same', activation='relu'))\nmodel.add(MaxPooling2D(pool_size=POOL_SIZE, strides=STRIDES))\nmodel.add(Dropout(DROPOUT))\nmodel.add(Flatten())\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dropout(DROPOUT))\nmodel.add(Dense(5, activation='softmax'))\n\nmodel.compile(optimizer=\"adam\", loss=\"categorical_crossentropy\",\n              metrics=[\"accuracy\"])","b9b95a7d":"model.summary()","2647a38d":"history = model.fit(train_generator, epochs=50)\n\nmetrics_train = model.evaluate(train_generator)\nmetrics_test = model.evaluate(test_generator)\n\nprint(\"Train Accuracy = %.4f - Train loss = %.4f\" %\n      (metrics_train[1], metrics_train[0]))\nprint(\"Test Accuracy = %.4f - Test loss = %.4f\" %\n      (metrics_test[1], metrics_test[0]))\n\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['loss'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['accuracy', 'loss'], loc='upper left')\nplt.show()\n","9b376d83":"I've preprocessed all the training pictures into sub directories, so I can figure out which one refers to a specific lung disease","450a85a0":"Let's see what categories we got ","67828aab":"Prepare data by using ImageDatagenerator with some augmentation","04ed10d3":"Let's see what's inside the model\n","526d5558":"Now let's train the model and then plot the results","b7e1d071":"Let's fix some values for the CNN","6b3aad02":"Let's build the CNN model"}}