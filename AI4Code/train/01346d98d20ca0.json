{"cell_type":{"4a0c9c0c":"code","e2760d5c":"code","0550bbc7":"code","9bc2439d":"code","0c1efd1a":"code","4f2a463a":"code","45e2b29d":"code","e9abe986":"code","34e4d23a":"markdown","1cf9f8df":"markdown","2405b691":"markdown","e7957b62":"markdown","e28eb514":"markdown"},"source":{"4a0c9c0c":"import os\n\nfrom os.path import join as pjoin\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.metrics import f1_score","e2760d5c":"PATH2DATA = '..\/input\/text-classification-int20h\/'\nos.listdir(PATH2DATA)","0550bbc7":"train = pd.read_csv(pjoin(PATH2DATA, 'train.csv'))\ntest = pd.read_csv(pjoin(PATH2DATA, 'test.csv'))\nsample_submission = pd.read_csv(pjoin(PATH2DATA, 'submission.csv'))","9bc2439d":"add_data = pd.read_csv('..\/input\/imdb-dataset-of-50k-movie-reviews\/IMDB Dataset.csv')","0c1efd1a":"print(f\"Train reviews intersection : {len(set(add_data.review) & set(train.review))}. Train len : {train.shape[0]}\")\nprint(f\"Train reviews intersection : {len(set(add_data.review) & set(test.review))}. Test len : {test.shape[0]}\")","4f2a463a":"train_add_data = train.merge(add_data, on='review', how='inner').drop_duplicates('review')\n\ntrain_add_data = train_add_data.rename(columns={\n    \"sentiment_x\":\"true\",\n    \"sentiment_y\":\"pred\"\n})\n\ntrain_add_data['pred'] = train_add_data['pred'].map({\n    \"positive\":1,\n    \"negative\":0\n})\n\nprint(f\"Train F score: {f1_score(train_add_data.true, train_add_data.pred)}\")","45e2b29d":"test_add_data = test.merge(add_data, on='review', how='inner').drop_duplicates('review')\n\ntest_add_data['sentiment'] = test_add_data['sentiment'].map({\n    \"positive\":1,\n    \"negative\":0\n})\n\ntest_add_data","e9abe986":"test_add_data.drop(columns='review').to_csv('submission.csv', index=False)","34e4d23a":"# Initial checks","1cf9f8df":"## Read IMDB data","2405b691":"# Read Data","e7957b62":"# Merge Test and IMDB","e28eb514":"# Merge Train and IMDB"}}