{"cell_type":{"446a1c1a":"code","f97ca61d":"code","17eff74b":"code","ae61bf8e":"code","0a5f6544":"code","07a28af4":"code","7d01438c":"code","225b072c":"code","4c144815":"code","5115b997":"code","b266bdda":"code","2cdf840d":"code","638a9560":"code","69cdfb77":"code","1cf92858":"code","7328f655":"code","3cfea83b":"code","7d15be23":"code","c972b615":"code","1a11a004":"code","2f3233cd":"code","3d220d6a":"code","9b31a084":"code","ebbc21d4":"code","e43fa182":"markdown","08707cc7":"markdown","c2d007a4":"markdown","2a675c87":"markdown","708d67e7":"markdown"},"source":{"446a1c1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f97ca61d":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npd.set_option('display.max_columns',1000)\npd.set_option('display.max_rows',1000)\n\nProcessed_df = pd.read_csv(\"\/kaggle\/input\/stock-exchange-data\/indexProcessed.csv\")\nData_df = pd.read_csv(\"\/kaggle\/input\/stock-exchange-data\/indexData.csv\")\nInfo_df = pd.read_csv(\"\/kaggle\/input\/stock-exchange-data\/indexInfo.csv\")","17eff74b":"print(Processed_df.shape)\nprint(Data_df.shape)\nprint(Info_df.shape)\n","ae61bf8e":"Info_df.head()\n","0a5f6544":"Data_df.Index.value_counts(normalize=True).plot.pie()","07a28af4":"Data_df.isnull().sum()","7d01438c":"Processed_df.Index.value_counts(normalize=True).plot.pie()","225b072c":"#Checking null values if any in the Processed_df\nProcessed_df.isnull().sum()","4c144815":"#Checking the datatypes and updating them accordingly.\nProcessed_df.dtypes\nProcessed_df['Date'] = pd.to_datetime(Processed_df['Date'], format='%Y-%m')\n","5115b997":"Processed_df[\"Index\"].replace(to_replace=[\"000001.SS\"],value='Shangai1_China',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"399001.SZ\"],value='Shangai2_China',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"J203.JO\"],value='SouthAfrica',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"GSPTSE\"],value='Canada',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"HSI\"],value='Hongkong_China',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"GDAXI\"],value='German_Frankfurt',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"SSMI\"],value='Swiss',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"IXIC\"],value='Nasdaq_US',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"TWII\"],value='Taiwan_China',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"NSEI\"],value='NSE_India',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"N100\"],value='Nasdaq_US',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"NYA\"],value='NewYork_US',inplace=True)\nProcessed_df[\"Index\"].replace(to_replace=[\"N225\"],value='Nikkei_Tokyo',inplace=True)\nProcessed_df.head(5)","b266bdda":"#Deleting the columns which are not needed.\nProcessed_df = Processed_df.drop([\"Volume\",\"Open\",\"High\",\"Low\",\"Close\",\"Adj Close\"],axis=1)\nProcessed_df","2cdf840d":"Processed_df = Processed_df.set_index('Date')\nProcessed_df.tail(500)\nProcessed_df.groupby('Index')[\"CloseUSD\"].plot(legend='True',figsize=(15,6))\n","638a9560":"Nasdaq_US = Processed_df[Processed_df['Index'] == \"Nasdaq_US\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nNasdaq_US_2020 = Nasdaq_US.loc[From:To,:]\n\nNasdaq_US_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Nasdaq_US_2020\")\nplt.show(block=False)","69cdfb77":"NewYork_US = Processed_df[Processed_df['Index'] == \"NewYork_US\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nNewYork_US_2020 = NewYork_US.loc[From:To,:]\n\nNewYork_US_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"NewYork_US_2020\")\nplt.show(block=False)","1cf92858":"NSE_India = Processed_df[Processed_df['Index'] == \"NSE_India\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nNSE_India_2020 = NSE_India.loc[From:To,:]\n\nNSE_India_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"NSE_India_2020\")\nplt.show(block=False)","7328f655":"German_Frankfurt = Processed_df[Processed_df['Index'] == \"German_Frankfurt\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nGerman_Frankfurt_2020 = German_Frankfurt.loc[From:To,:]\n\n\nGerman_Frankfurt_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"German_Frankfurt_2020\")\nplt.show(block=False)","3cfea83b":"Nikkei_Tokyo = Processed_df[Processed_df['Index'] == \"Nikkei_Tokyo\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nNikkei_Tokyo_2020 = Nikkei_Tokyo.loc[From:To,:]\n\nNikkei_Tokyo_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Nikkei_Tokyo_2020\")\nplt.show(block=False)","7d15be23":"Taiwan_China = Processed_df[Processed_df['Index'] == \"Taiwan_China\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nTaiwan_China_2020 = Taiwan_China.loc[From:To,:]\n\nTaiwan_China_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Taiwan_China_2020\")\nplt.show(block=False)","c972b615":"Shangai1_China = Processed_df[Processed_df['Index'] == \"Shangai1_China\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nShangai1_China_2020 = Shangai1_China.loc[From:To,:]\n\nShangai1_China_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Shangai1_China_2020\")\nplt.show(block=False)\n","1a11a004":"Shangai2_China = Processed_df[Processed_df['Index'] == \"Shangai2_China\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nShangai2_China_2020 = Shangai2_China.loc[From:To,:]\n\nShangai2_China_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Shangai2_China_2020\")\nplt.show(block=False)","2f3233cd":"Hongkong_China = Processed_df[Processed_df['Index'] == \"Hongkong_China\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nHongkong_China_2020 = Hongkong_China.loc[From:To,:]\n\nHongkong_China_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Hongkong_China_2020\")\nplt.show(block=False)","3d220d6a":"Canada = Processed_df[Processed_df['Index'] == \"Canada\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nCanada_2020 = Canada.loc[From:To,:]\n\nCanada_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Canada_2020\")\nplt.show(block=False)\n","9b31a084":"Swiss = Processed_df[Processed_df['Index'] == \"Swiss\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nSwiss_2020 = Swiss.loc[From:To,:]\n\nSwiss_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"Swiss_2020\")\nplt.show(block=False)\n","ebbc21d4":"SouthAfrica = Processed_df[Processed_df['Index'] == \"SouthAfrica\"]\nFrom = '2020-02-01'\nTo   = '2021-02-01'\nSouthAfrica_2020 = SouthAfrica.loc[From:To,:]\n\nSouthAfrica_2020.plot(figsize=(12, 4))\nplt.legend(loc='best')\nplt.title(\"SouthAfrica_2020\")\nplt.show(block=False)\n","e43fa182":"##### Seems like IXIC (Nasdaq-US) and N225(Nikkei_Tokyo) has the largest proportion of the  total stock exchanges in the world ","08707cc7":"Replacement of the indices along with their stock exchange for better understanding.","c2d007a4":"####  Plotting the time series plots of different stock exchanges ","2a675c87":"Looks like Processed_df has no null values and we can further proceed with this data.","708d67e7":"Daily price data for indexes tracking stock exchanges from all over the world (United States, China, Canada, Germany, Japan, and more). The data was all collected from Yahoo Finance, which had several decades of data available for most exchanges.\n\nPrices are quoted in terms of the national currency of where each exchange is located.\n\nLet's see if we get any insights from the data."}}