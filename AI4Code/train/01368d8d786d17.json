{"cell_type":{"3557999d":"code","618cb9fa":"code","90a3a419":"code","a90b0be5":"code","e51f8b0d":"code","8a3610e7":"code","4a94e869":"code","3517d4a2":"code","e1e38625":"code","25d8ebeb":"code","458ada84":"code","5994b901":"code","4f78fd84":"code","709ca6cc":"code","e88e70f3":"code","5d6aeca0":"code","e7aaf51c":"code","ef5eae5e":"code","231e5ec7":"code","e5487cba":"code","ff716f0a":"code","27caff01":"code","3988f3fb":"code","1f52e09c":"code","bf013f6e":"code","3710d6a4":"code","8a880063":"code","9463c74e":"code","b1e4f41b":"code","50f3ef8f":"code","0fb222bb":"code","203b0395":"code","6406df50":"code","ed850f0d":"code","49b74130":"code","6b47c551":"code","dfcc2413":"code","694d148c":"code","e4c8b700":"code","24f2ad11":"code","9c4fab02":"code","d644d06f":"code","b1df0f29":"code","8bee76dd":"code","1a470b1e":"code","8f80ceea":"code","d0656155":"code","28434bf9":"code","06b6988b":"code","219b1059":"code","966db710":"code","121f3698":"code","01fe3375":"code","cf0f6fe0":"code","65ce42b3":"code","5998b2f3":"code","4bddd3e1":"code","80a07ba3":"code","ef068d89":"code","77685eb1":"code","e4c11c4d":"code","60c107ac":"code","352d8c4d":"code","889d21cc":"code","d75bc3a1":"code","ab755437":"code","b3e6a38d":"code","62ca9b92":"code","cddfce07":"code","2e286b90":"code","cbc36175":"code","b45e204a":"code","59dbaed1":"code","4316e224":"code","d6734d7d":"code","df9b6a33":"code","fe84c259":"code","604c7cce":"code","084678bc":"code","60fb8bab":"code","d1aebc1e":"code","fd81987f":"code","f7398bed":"code","1942d2b3":"code","9df800ec":"code","654828ab":"code","5117ab62":"code","f1d6d358":"markdown","3576ace3":"markdown","a2308183":"markdown","d27b1416":"markdown","a75d2784":"markdown","2019209f":"markdown","d90ea1bf":"markdown","0afef579":"markdown","f51aac32":"markdown","198cefed":"markdown"},"source":{"3557999d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","618cb9fa":"path = '..\/input\/bridata'\ndf_nonlinear_fval=pd.read_csv(f'{path}\/nonlinear_fval.csv',header=None)\ndf_linear10_fval=pd.read_csv(f'{path}\/linear_fval_10.csv',header=None)\ndf_linear11_fval=pd.read_csv(f'{path}\/linear_fval_11.csv',header=None)\ndf_linear01_fval=pd.read_csv(f'{path}\/linear_fval_01.csv',header=None)\ndf_sequential_fval=pd.read_csv(f'{path}\/fval_linear_sequential.csv',header=None)","90a3a419":"#df_plot_fval=pd.concat([df_nonlinear_fval,df_linear10_fval,df_linear11_fval,df_linear01_fval],axis=1)\ndf_plot_fval=pd.concat([df_sequential_fval,df_linear10_fval,df_linear11_fval,df_linear01_fval],axis=1)\ndf_plot_fval.columns=['Sequential Fval','Linear Fval 10','Linear Fval 11','Linear Fval 01']\ndf_plot_fval.index=range(2005,2017)","a90b0be5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(rc={\"figure.figsize\": (8, 6)}); \nsns.set(style=\"white\")\n#sns.set(style=\"darkgrid\")\nsns.lineplot(data=df_plot_fval)\nsns.despine()","e51f8b0d":"df_country=pd.read_csv(f'{path}\/df_country_plot.csv')\ndf_fdi=pd.read_csv(f'{path}\/FDI.csv')\ndf_country=df_country.iloc[:,1:3]","8a3610e7":"lists=['South_Asia','Eastern_Europe','CIS','Western_Asia','Eastern_Asia','Middle_Asia']\ndef mean_calculate(df,lists):\n    sum=[]\n    for i in lists:\n        temp=np.mean(df[i],axis=1)\n        sum.append(temp)\n    df_mean_plot=pd.concat(sum,axis=1)\n    return df_mean_plot","4a94e869":"df_fdi_new=df_fdi.drop('Indicator Name',axis=1)\ndf_fdi_new=pd.merge(df_country,df_fdi_new,on='Country Name',how='left')\ndf_fdi_new=df_fdi_new.T\ndf_fdi_new.columns=df_country['Country Name']\ndf_fdi_final=df_fdi_new.drop(['Country Name','Region'],axis=0)\ndf_fdi_final","3517d4a2":"lists=['South Asia','Eastern Europe','CIS','Western Asia','Eastern Asia','Central Asia']\ndf_fdi_final.columns=df_country['Region']\ndf_fdi_final_new=mean_calculate(df_fdi_final,lists)\ndf_fdi_final_new.columns=lists\ndf_fdi_final_new","e1e38625":"fig = plt.figure(figsize=(16,12))\ndf_fdi_final_new.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nsns.despine()","25d8ebeb":"import seaborn as sns\nfig=plt.figure(figsize=(10,8))\nsns.set(style=\"white\",palette='muted',color_codes=False)\nsns.kdeplot(df_fdi_final.iloc[0,:],label=\"2005\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\n#sns.kdeplot(df_fdi_final.iloc[2,:],label=\"2007\" ,shade=True)\n#sns.kdeplot(df_fdi_final.iloc[3,:],label=\"2008\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(df_fdi_final.iloc[6,:],label=\"2011\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\n#sns.kdeplot(df_fdi_final.iloc[8,:],label=\"2013\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\n#sns.kdeplot(df_fdi_final.iloc[10,:],label=\"2015\" ,shade=True)\nsns.kdeplot(df_fdi_final.iloc[11,:],label=\"2016\" ,shade=True)\nsns.despine()","458ada84":"tech_ineffi_nonlinear=pd.read_csv(f'{path}\/tech_inefficiency_nonlinear.csv',header=None)\ntech_ineffi_linear_11=pd.read_csv(f'{path}\/tech_inefficiency_linear_11.csv',header=None)\ntech_ineffi_linear_10=pd.read_csv(f'{path}\/tech_inefficiency_linear_10.csv',header=None)\ntech_ineffi_linear_01=pd.read_csv(f'{path}\/tech_inefficiency_linear_01.csv',header=None)\ntech_ineffi_sequential=pd.read_csv(f'{path}\/tech_inefficiency_sequential.csv',header=None)\ntech_ineffi_whole=pd.read_csv(f'{path}\/tech_inefficiency_whole.csv',header=None)\n\n\ndf_country=pd.read_csv(f'{path}\/df_country_plot.csv')\ndf_country=df_country.iloc[:,1:3]","5994b901":"df_country_list=df_country.T\ndf_country_list.columns=df_country_list.iloc[1,:]\ndf_country_list['Eastern Europe']","4f78fd84":"tech_ineffi_linear=['tech_ineffi_linear_11','tech_ineffi_linear_10','tech_ineffi_linear_01']","709ca6cc":"tech_ineffi_nonlinear.index=range(2005,2017)\ntech_ineffi_linear_11.index=range(2005,2017)\ntech_ineffi_linear_10.index=range(2005,2017)\ntech_ineffi_linear_01.index=range(2005,2017)\ntech_ineffi_sequential.index=range(2005,2017)\ntech_ineffi_whole.index=range(2005,2017)\n\n\ntech_ineffi_nonlinear.columns=df_country['Region']\ntech_ineffi_linear_11.columns=df_country['Region']\ntech_ineffi_linear_10.columns=df_country['Region']\ntech_ineffi_linear_01.columns=df_country['Region']\ntech_ineffi_sequential.columns=df_country['Region']\ntech_ineffi_whole.columns=df_country['Region']","e88e70f3":"#tech_ineffi_nonlinear.index=range(2005,2017)\n#tech_ineffi_linear_11.index=range(2005,2017)\n#tech_ineffi_linear_10.index=range(2005,2017)\n#tech_ineffi_linear_01.index=range(2005,2017)\n#tech_ineffi_nonlinear.columns=df_country['Country Name']\n#tech_ineffi_linear_11.columns=df_country['Country Name']\n#tech_ineffi_linear_10.columns=df_country['Country Name']\n#tech_ineffi_linear_01.columns=df_country['Country Name']","5d6aeca0":"df_country.tail()","e7aaf51c":"import seaborn as sns\nfig = plt.figure(figsize=(10,8))\nsns.set(style=\"white\",palette='deep',color_codes=False)\n#plt.xlim(0,8000)\nsns.kdeplot(data=tech_ineffi_sequential.iloc[0,:],label=\"2005\" )\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\n#sns.kdeplot(data=tech_ineffi_sequential.iloc[2,:],label=\"2007\")\nsns.kdeplot(data=tech_ineffi_sequential.iloc[3,:],label=\"2008\")\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(data=tech_ineffi_sequential.iloc[6,:],label=\"2011\" )\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\nsns.kdeplot(data=tech_ineffi_sequential.iloc[8,:],label=\"2013\")\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\nsns.kdeplot(data=tech_ineffi_sequential.iloc[10,:],label=\"2015\" )\nsns.kdeplot(data=tech_ineffi_sequential.iloc[11,:],label=\"2016\")\nsns.despine()","ef5eae5e":"lists=['South Asia','Eastern Europe','CIS','Western Asia','Eastern Asia','Central Asia']\ndef mean_calculate(df,lists):\n    sum=[]\n    for i in lists:\n        temp=np.mean(df[i],axis=1)\n        sum.append(temp)\n    df_mean_plot=pd.concat(sum,axis=1)\n    return df_mean_plot","231e5ec7":"df_linear_plot_11=mean_calculate(tech_ineffi_linear_11,lists)\ndf_linear_plot_11.columns=lists\ndf_linear_plot_10=mean_calculate(tech_ineffi_linear_10,lists)\ndf_linear_plot_10.columns=lists\ndf_linear_plot_01=mean_calculate(tech_ineffi_linear_01,lists)\ndf_linear_plot_01.columns=lists","e5487cba":"df_nonlinear_plot=mean_calculate(tech_ineffi_sequential,lists)\ndf_nonlinear_plot.columns=lists\ndf_sequential_plot=mean_calculate(tech_ineffi_sequential,lists)\ndf_sequential_plot.columns=lists\ndf_whole_plot=mean_calculate(tech_ineffi_whole,lists)\ndf_whole_plot.columns=lists\ndf_nonlinear_plot.tail()","ff716f0a":"ax=df_whole_plot.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('Average Technical Efficiency')\nax.set_xlabel('Year')\nsns.despine()","27caff01":"fig = plt.figure(figsize=(16,12))\nax1= fig.add_subplot(2,2,1)\nax2= fig.add_subplot(2,2,2)\nax3= fig.add_subplot(2,2,3)\nax4= fig.add_subplot(2,2,4)\ndf_nonlinear_plot.plot(ax=ax1,title='Nonlinear',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\ndf_linear_plot_11.plot(ax=ax2,title='$(g_y,g_b)=(\\\\frac{\\\\sqrt{2}}{2},-\\\\frac{\\\\sqrt{2}}{2})$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\ndf_linear_plot_10.plot(ax=ax3,title='$(g_y,g_b)=(1,0)$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\ndf_linear_plot_01.plot(ax=ax4,title='$(g_y,g_b)=(0,-1)$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\n#df_sequential_plot.plot\nsns.despine()","3988f3fb":"reduction_potential_nonlinear=pd.read_csv(f'{path}\/reduction_potential_nonlinear.csv',header=None)\nreduction_potential_linear_11=pd.read_csv(f'{path}\/reduction_potential_linear_11.csv',header=None)\nreduction_potential_linear_10=pd.read_csv(f'{path}\/reduction_potential_linear_10.csv',header=None)\nreduction_potential_linear_01=pd.read_csv(f'{path}\/reduction_potential_linear_01.csv',header=None)\nreduction_potential_sequential=pd.read_csv(f'{path}\/reduction_potential_sequential.csv',header=None)\nreduction_potential_whole=pd.read_csv(f'{path}\/reduction_potential_whole.csv',header=None)","1f52e09c":"df_co2=pd.read_csv(f'{path}\/CO2.csv')\ndf_co2_new=df_co2.drop(['1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','API'],axis=1)","bf013f6e":"np.mean(reduction_potential_nonlinear,axis=1)","3710d6a4":"df_country.tail()","8a880063":"df_co2_final=pd.merge(df_country,df_co2_new,on='Country Name',how='left')\ndf_co2_final.iloc[:,2:14]=df_co2_final.iloc[:,2:14].astype(float)\nfor i in range(2,14):\n    df_co2_final.iloc[:,i]=df_co2_final.iloc[:,i]\/np.mean(df_co2_final.iloc[:,i])","9463c74e":"df_co2_real=df_co2_final.drop(['Country Name','Region'],axis=1).T\ndf_co2_real.columns=df_country['Region']\ndf_co2_real.tail()","b1e4f41b":"temp_1=np.mean(df_co2_real['South Asia'],axis=1)\ntemp_2=np.mean(df_co2_real['Eastern Europe'],axis=1)\ntemp_3=np.mean(df_co2_real['CIS'],axis=1)\ntemp_4=np.mean(df_co2_real['Western Asia'],axis=1)\ntemp_5=np.mean(df_co2_real['Eastern Asia'],axis=1)\ntemp_6=np.mean(df_co2_real['Central Asia'],axis=1)\ntemp=[temp_1,temp_2,temp_3,temp_4,temp_5,temp_6]","50f3ef8f":"df_real_co2=pd.DataFrame(temp).T\nlists=['South Asia','Eastern Europe','CIS','Western Asia','Eastern Asia','Central Asia']\ndf_real_co2.columns=lists\ndf_real_co2.tail()","0fb222bb":"reduction_potential_nonlinear.index=range(2005,2017)\nreduction_potential_linear_11.index=range(2005,2017)\nreduction_potential_linear_10.index=range(2005,2017)\nreduction_potential_linear_01.index=range(2005,2017)\nreduction_potential_sequential.index=range(2005,2017)\nreduction_potential_whole.index=range(2005,2017)\n\nreduction_potential_nonlinear.columns=df_country['Region']\nreduction_potential_linear_11.columns=df_country['Region']\nreduction_potential_linear_10.columns=df_country['Region']\nreduction_potential_linear_01.columns=df_country['Region']\nreduction_potential_sequential.columns=df_country['Region']\nreduction_potential_whole.columns=df_country['Region']","203b0395":"import seaborn as sns\nfig = plt.figure(figsize=(10,8))\nsns.set(style=\"white\",palette='deep',color_codes=False)\n#plt.xlim(0,8000)\nsns.kdeplot(data=reduction_potential_whole.iloc[0,:],label=\"2005\" )\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\n#sns.kdeplot(data=tech_ineffi_sequential.iloc[2,:],label=\"2007\")\nsns.kdeplot(data=reduction_potential_whole.iloc[3,:],label=\"2008\")\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(data=reduction_potential_whole.iloc[6,:],label=\"2011\" )\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\nsns.kdeplot(data=reduction_potential_whole.iloc[8,:],label=\"2013\")\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\nsns.kdeplot(data=reduction_potential_whole.iloc[10,:],label=\"2015\" )\nsns.kdeplot(data=reduction_potential_whole.iloc[11,:],label=\"2016\")\nsns.despine()","6406df50":"df_linear_plot_11=mean_calculate(reduction_potential_linear_11,lists)\ndf_linear_plot_11.columns=lists\ndf_linear_plot_10=mean_calculate(reduction_potential_linear_10,lists)\ndf_linear_plot_10.columns=lists\ndf_linear_plot_01=mean_calculate(reduction_potential_linear_01,lists)\ndf_linear_plot_01.columns=lists\ndf_nonlinear_plot=mean_calculate(reduction_potential_nonlinear,lists)\ndf_nonlinear_plot.columns=lists\ndf_sequential_plot=mean_calculate(reduction_potential_sequential,lists)\ndf_sequential_plot.columns=lists\ndf_whole_plot=mean_calculate(reduction_potential_whole,lists)\ndf_whole_plot.columns=lists\ndf_nonlinear_plot","ed850f0d":"df_whole_plot_new=df_whole_plot.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_whole_plot_new.iloc[j,i]=df_whole_plot_new.iloc[j,i]\/df1.iloc[j,i]","49b74130":"df_sequential_plot_new=df_sequential_plot.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_sequential_plot_new.iloc[j,i]=df_sequential_plot_new.iloc[j,i]\/df1.iloc[j,i]","6b47c551":"df_nonlinear_plot_new=df_nonlinear_plot.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_nonlinear_plot_new.iloc[j,i]=df_nonlinear_plot_new.iloc[j,i]\/df1.iloc[j,i]","dfcc2413":"df_linear_plot_01_new=df_linear_plot_01.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_linear_plot_01_new.iloc[j,i]=df_linear_plot_01_new.iloc[j,i]\/df1.iloc[j,i]","694d148c":"df_linear_plot_10_new=df_linear_plot_10.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_linear_plot_10_new.iloc[j,i]=df_linear_plot_10_new.iloc[j,i]\/df1.iloc[j,i]","e4c8b700":"df_linear_plot_11_new=df_linear_plot_11.copy()\ndf1=df_real_co2.copy()\nm,n=np.shape(df1)\nfor i in range(n):\n    for j in range(m):\n        df_linear_plot_11_new.iloc[j,i]=df_linear_plot_11_new.iloc[j,i]\/df1.iloc[j,i]","24f2ad11":"df_real_co2","9c4fab02":"np.mean(df_whole_plot_new,0)","d644d06f":"df_whole_plot_new","b1df0f29":"fig = plt.figure(figsize=(16,12))\nax=df_whole_plot_new.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('Average Reduction Potential')\nax.set_xlabel('Year')\nsns.despine()","8bee76dd":"fig = plt.figure(figsize=(16,12))\nax1= fig.add_subplot(2,2,1)\nax2= fig.add_subplot(2,2,2)\nax3= fig.add_subplot(2,2,3)\nax4= fig.add_subplot(2,2,4)\ndf_nonlinear_plot_new.plot(ax=ax1,title='Nonlinear',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\n#df_sequential_plot_new.plot(ax=ax1,title='Sequential')\n#df_nonlinear_plot_new.plot(ax=ax2,title='Nonlinear')\ndf_linear_plot_11_new.plot(ax=ax2,title='$(g_y,g_b)=(\\\\frac{\\\\sqrt{2}}{2},-\\\\frac{\\\\sqrt{2}}{2})$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\ndf_linear_plot_10_new.plot(ax=ax3,title='$(g_y,g_b)=(1,0)$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\ndf_linear_plot_01_new.plot(ax=ax4,title='$(g_y,g_b)=(0,-1)$',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nsns.despine()","1a470b1e":"sp_nonlinear=pd.read_csv(f'{path}\/shadowprice_nonlinear.csv',header=None)\nsp_linear_11=pd.read_csv(f'{path}\/shadowprice_linear_11.csv',header=None)\nsp_linear_10=pd.read_csv(f'{path}\/shadowprice_linear_10.csv',header=None)\nsp_linear_01=pd.read_csv(f'{path}\/shadowprice_linear_01.csv',header=None)\nsp_sequential=pd.read_csv(f'{path}\/shadow_price_sequential.csv',header=None)\nsp_whole=pd.read_csv(f'{path}\/shadow_price_whole.csv',header=None)\n\naverage_data=pd.read_csv(f'{path}\/average_data_byyear.csv')","8f80ceea":"def scale_sp(df,average_data,df_country):\n    m,n=np.shape(df)\n    for i in range(m):\n        df.iloc[i,:]=df.iloc[i,:]*average_data.iloc[3,i+1]\/(average_data.iloc[4,i+1]*1000000)\n    df.index=range(2005,2017)\n    df.columns=df_country['Region']\n    temp_1=np.mean(df['South Asia'],axis=1)\n    temp_2=np.mean(df['Eastern Europe'],axis=1)\n    temp_3=np.mean(df['CIS'],axis=1)\n    temp_4=np.mean(df['Western Asia'],axis=1)\n    temp_5=np.mean(df['Eastern Asia'],axis=1)\n    temp_6=np.mean(df['Central Asia'],axis=1)\n    temp=[temp_1,temp_2,temp_3,temp_4,temp_5,temp_6]\n    df_new=pd.DataFrame(temp).T\n    df_new.columns=lists\n    df_new\n    return df_new","d0656155":"fig = plt.figure(figsize=(16,12))\ndf_nonlinear_plot.plot(ax=ax1,title='Nonlinear',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])","28434bf9":"sp_linear_10_new=scale_sp(sp_linear_10,average_data,df_country)\nsp_linear_01_new=scale_sp(sp_linear_01,average_data,df_country)\nsp_linear_11_new=scale_sp(sp_linear_11,average_data,df_country)\nsp_nonlinear_new=scale_sp(sp_nonlinear,average_data,df_country)\nsp_sequential_new=scale_sp(sp_sequential,average_data,df_country)\nsp_whole_new=scale_sp(sp_whole,average_data,df_country)","06b6988b":"fig = plt.figure(figsize=(16,12))\nax=sp_sequential_new.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('Average Shadow price')\nax.set_xlabel('Year')\nsns.despine()","219b1059":"np.mean(sp_sequential_new,axis=1)","966db710":"np.mean(sp_linear_11,axis=1)","121f3698":"fig = plt.figure(figsize=(20,8))\nax1= fig.add_subplot(1,2,1)\nax2= fig.add_subplot(1,2,2)\n#ax3= fig.add_subplot(2,2,3)\n#ax4= fig.add_subplot(2,2,4)\nimport seaborn as sns\nsns.set(style=\"white\",palette='deep',color_codes=False)\nax1.set_xlim(0,20000)\nsns.kdeplot(data=sp_nonlinear.iloc[0,:],label=\"2005\" ,shade=True,ax=ax1)\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\nsns.kdeplot(data=sp_nonlinear.iloc[2,:],label=\"2007\" ,shade=True,ax=ax1)\nsns.kdeplot(data=sp_nonlinear.iloc[3,:],label=\"2008\" ,shade=True,ax=ax1)\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(data=sp_nonlinear.iloc[6,:],label=\"2011\" ,shade=True,ax=ax1)\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\nsns.kdeplot(data=sp_nonlinear.iloc[8,:],label=\"2013\" ,shade=True,ax=ax1)\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\nsns.kdeplot(data=sp_nonlinear.iloc[10,:],label=\"2015\" ,shade=True,ax=ax1)\nsns.kdeplot(data=sp_nonlinear.iloc[11,:],label=\"2016\" ,shade=True,ax=ax1)\n#sp_nonlinear_new.plot(ax=ax1,title='Nonlinear')\n#sp_linear_11_new.plot(ax=ax2,title='$(g_y,g_b)=(1,-1)$')\n#sp_linear_10_new.plot(ax=ax3,title='$(g_y,g_b)=(1,0)$')\n#sp_linear_01_new.plot(ax=ax4,title='$(g_y,g_b)=(0,-1)$')\nsns.despine()\n\nax2.set_xlim(0,4000)\nsns.set(style=\"white\",palette='deep',color_codes=False)\nsns.kdeplot(data=sp_linear_11.iloc[0,:],label=\"2005\" ,shade=True,ax=ax2)\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\nsns.kdeplot(data=sp_linear_11.iloc[2,:],label=\"2007\" ,shade=True,ax=ax2)\nsns.kdeplot(data=sp_linear_11.iloc[3,:],label=\"2008\" ,shade=True,ax=ax2)\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(data=sp_linear_11.iloc[6,:],label=\"2011\" ,shade=True,ax=ax2)\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\nsns.kdeplot(data=sp_linear_11.iloc[8,:],label=\"2013\" ,shade=True,ax=ax2)\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\nsns.kdeplot(data=sp_linear_11.iloc[10,:],label=\"2015\" ,shade=True,ax=ax2)\nsns.kdeplot(data=sp_linear_11.iloc[11,:],label=\"2016\" ,shade=True,ax=ax2)\nsns.despine()","01fe3375":"import seaborn as sns\nfig = plt.figure(figsize=(10,8))\nsns.set(style=\"white\",palette='deep',color_codes=False)\nplt.xlim(0,8000)\nsns.kdeplot(data=sp_whole.iloc[0,:],label=\"2005\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[1,:],label=\"2006\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[2,:],label=\"2007\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[3,:],label=\"2008\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[4,:],label=\"2009\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[5,:],label=\"2010\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[6,:],label=\"2011\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[7,:],label=\"2012\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[8,:],label=\"2013\" ,shade=True)\n#sns.kdeplot(data=sp_nonlinear.iloc[9,:],label=\"2014\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[10,:],label=\"2015\" ,shade=True)\nsns.kdeplot(data=sp_whole.iloc[11,:],label=\"2016\" ,shade=True)\nsns.despine()","cf0f6fe0":"import plotly_express as px\t\ngapminder = px.data.gapminder()\t\ngapminder2007 = gapminder.query('year == 2007')\ngapminder2007.tail()","65ce42b3":"px.scatter(gapminder2007, x='gdpPercap', y='lifeExp',color='continent',size='pop',size_max=60)","5998b2f3":"df_country.index=df_country['Country Name']\nsp_nonlinear_radar=sp_sequential.iloc[0,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","4bddd3e1":"df_country.index=df_country['Country Name']\nsp_nonlinear_radar=sp_sequential.iloc[11,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","80a07ba3":"df_country.index=df_country['Country Name']\nsp_nonlinear_radar=sp_nonlinear.iloc[0,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","ef068d89":"sp_nonlinear_radar=sp_nonlinear.iloc[11,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","77685eb1":"df_country.index=df_country['Country Name']\n\nsp_nonlinear_radar=sp_linear_10.iloc[0,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","e4c11c4d":"df_country.index=df_country['Country Name']\n\nsp_nonlinear_radar=sp_linear_10.iloc[11,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2016'][3]\/(1000000*average_data['2016'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2016']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2016','Region','Country Name']\nsp_nonlinear_radar_plot_2016=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2016.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2016, r=\"shadow price in 2016\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\nfig.show()","60c107ac":"df_country.index=df_country['Country Name']\n\nsp_nonlinear_radar=sp_linear_11.iloc[0,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2005'][3]\/(1000000*average_data['2005'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2005']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2005','Region','Country Name']\nsp_nonlinear_radar_plot_2005=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2005.tail()\n\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2005, r=\"shadow price in 2005\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\n\nfig.show()","352d8c4d":"df_country.index=df_country['Country Name']\n\nsp_nonlinear_radar=sp_linear_11.iloc[11,:]\n#sp_nonlinear_radar=sp_nonlinear_radar*average_data['2016'][3]\/(1000000*average_data['2016'][4])\nsp_nonlinear_radar=pd.DataFrame(sp_nonlinear_radar).T\nsp_nonlinear_radar.columns=df_country['Country Name']\nsp_nonlinear_radar.index=['Shadow Price in 2016']\nsp_nonlinear_radar_plot=sp_nonlinear_radar.append(df_country['Region'],ignore_index=True)\nsp_nonlinear_radar_plot=sp_nonlinear_radar_plot.append(df_country['Country Name'],ignore_index=True)\nsp_nonlinear_radar_plot.index=['shadow price in 2016','Region','Country Name']\nsp_nonlinear_radar_plot_2016=sp_nonlinear_radar_plot.T\nsp_nonlinear_radar_plot_2016.tail()\nimport plotly.express as px\nwind = px.data.wind()\nfig = px.scatter_polar(sp_nonlinear_radar_plot_2016, r=\"shadow price in 2016\", theta=\"Country Name\",\n                   color=\"Region\")\nfig.update_layout(\n    font_size=6,\n)\nfig.show()","889d21cc":"sp_nonlinear_radar_plot_2016","d75bc3a1":"tech_change_nonlinear=pd.read_csv(f'{path}\/tech_change_nonlinear.csv',header=None)\ntech_change_linear_11=pd.read_csv(f'{path}\/tech_change_linear_11.csv',header=None)\ntech_change_linear_10=pd.read_csv(f'{path}\/tech_change_linear_10.csv',header=None)\ntech_change_linear_01=pd.read_csv(f'{path}\/tech_change_linear_01.csv',header=None)\ntech_change_nonlinear_conventional=pd.read_csv(f'{path}\/tech_change_nonlinear_conventional.csv',header=None)\ntech_linear_sequential=pd.read_csv(f'{path}\/tech_linear_sequential.csv',header=None)\n\neffi_change_nonlinear=pd.read_csv(f'{path}\/effi_change_nonlinear.csv',header=None)\neffi_change_linear_11=pd.read_csv(f'{path}\/effi_change_linear_11.csv',header=None)\neffi_change_linear_10=pd.read_csv(f'{path}\/effi_change_linear_10.csv',header=None)\neffi_change_linear_01=pd.read_csv(f'{path}\/effi_change_linear_01.csv',header=None)\ntech_linear_sequential=pd.read_csv(f'{path}\/tech_linear_sequential.csv',header=None)\neffi_linear_sequential=pd.read_csv(f'{path}\/effi_linear_sequential.csv',header=None)","ab755437":"tech_change=tech_change_nonlinear.copy()\ntech_change.columns=df_country['Country Name']\ntech_change.max().tail()","b3e6a38d":"tech_linear_sequential.columns=df_country['Region']\ntech_linear_sequential.index=['2005-2006','2006-2007','2007-2008','2008-2009','2009-2010',\n                             '2010-2011','2011-2012','2012-2013',\n                             '2013-2014','2014-2015','2015-2016']","62ca9b92":"effi_linear_sequential.columns=df_country['Region']\neffi_linear_sequential.index=['2005-2006','2006-2007','2007-2008','2008-2009','2009-2010',\n                             '2010-2011','2011-2012','2012-2013',\n                             '2013-2014','2014-2015','2015-2016']","cddfce07":"tech_change_nonlinear_conventional.columns=df_country['Region']\ntech_change_nonlinear_conventional.index=['2005-2006','2006-2007','2007-2008','2008-2009','2009-2010',\n                             '2010-2011','2011-2012','2012-2013',\n                             '2013-2014','2014-2015','2015-2016']","2e286b90":"tech_change_nonlinear.columns=df_country['Region']\ntech_change_nonlinear.index=['2005-2006','2006-2007','2007-2008','2008-2009','2009-2010',\n                             '2010-2011','2011-2012','2012-2013',\n                             '2013-2014','2014-2015','2015-2016']","cbc36175":"effi_change_nonlinear.columns=df_country['Region']\neffi_change_nonlinear.index=['2005-2006','2006-2007','2007-2008','2008-2009','2009-2010',\n                             '2010-2011','2011-2012','2012-2013',\n                             '2013-2014','2014-2015','2015-2016']","b45e204a":"tech_linear_sequential_plot=mean_calculate(tech_linear_sequential,lists)\ntech_linear_sequential_plot.columns=lists\neffi_linear_sequential_plot=mean_calculate(effi_linear_sequential,lists)\neffi_linear_sequential_plot.columns=lists\nfig = plt.figure(figsize=(8,6))\n#ax1= fig.add_subplot(1,2,1)\n#ax2= fig.add_subplot(1,2,2)\nax=tech_linear_sequential_plot.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('Technical Change')\nsns.despine()","59dbaed1":"ax=effi_linear_sequential_plot.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('Efficiency Change')\nsns.despine()","4316e224":"effi_linear_sequential_plot","d6734d7d":"tech_linear_sequential_plot","df9b6a33":"SLPI=tech_linear_sequential_plot+effi_linear_sequential_plot\nax=SLPI.plot(style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\nax.set_ylabel('SLPI')\nsns.despine()","fe84c259":"SLPI","604c7cce":"tech_change_nonlinear_plot=mean_calculate(tech_change_nonlinear_conventional,lists)\ntech_change_nonlinear_plot.columns=lists\neffi_change_nonlinear_plot=mean_calculate(effi_change_nonlinear,lists)\neffi_change_nonlinear_plot.columns=lists\nfig = plt.figure(figsize=(16,6))\nax1= fig.add_subplot(1,2,1)\nax2= fig.add_subplot(1,2,2)\ntech_change_nonlinear_plot.plot(ax=ax1,title='Technological Change',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\neffi_change_nonlinear_plot.plot(ax=ax2,title='Efficiency Change',style=['+-', 'd--', 'o-.', '.-', 'v:','*-'])\n\nsns.despine()","084678bc":"tech_change_nonlinear_conventional['CIS']","60fb8bab":"tech_change_nonlinear_plot=mean_calculate(tech_change_nonlinear,lists)\ntech_change_nonlinear_plot.columns=lists\neffi_change_nonlinear_plot=mean_calculate(effi_change_nonlinear,lists)\neffi_change_nonlinear_plot.columns=lists\nfig = plt.figure(figsize=(16,6))\nax1= fig.add_subplot(1,2,1)\nax2= fig.add_subplot(1,2,2)\ntech_change_nonlinear_plot.plot(ax=ax1,title='Technological Change')\neffi_change_nonlinear_plot.plot(ax=ax2,title='Efficiency Change')\n\nsns.despine()","d1aebc1e":"np.mean(effi_linear_sequential_plot,axis=1)","fd81987f":"np.mean(tech_linear_sequential_plot,axis=1)","f7398bed":"np.mean(tech_linear_sequential_plot,axis=1)+np.mean(effi_linear_sequential_plot,axis=1)","1942d2b3":"np.mean(tech_change_linear_11,axis=1)","9df800ec":"def effi_radar_plot(df):\n    tech_change_nonlinear_radar=df\n    tech_change_nonlinear_radar=pd.DataFrame(tech_change_nonlinear_radar).T\n    tech_change_nonlinear_radar.columns=df_country['Country Name']\n    tech_change_nonlinear_radar_new=tech_change_nonlinear_radar.append(df_country['Region'],ignore_index=True)\n    tech_change_nonlinear_radar_new=tech_change_nonlinear_radar_new.append(df_country['Country Name'],ignore_index=True)\n    tech_change_nonlinear_radar_new.index=['2005','Region','Country Name']\n    tech_change_nonlinear_radar_new=tech_change_nonlinear_radar_new.T\n    tech_change_nonlinear_radar_new.tail()\n    import plotly.express as px\n    wind = px.data.wind()\n    fig = px.bar_polar(tech_change_nonlinear_radar_new, r=\"2005\", theta=\"Country Name\",\n                   color=\"Region\")\n    fig.update_layout(\n    font_size=6,\n        )\n    fig.show()","654828ab":"fig = plt.figure(figsize=(20,8))\neffi_radar_plot(effi_change_linear_01.iloc[0,:])","5117ab62":"effi_radar_plot(tech_change_linear_11.iloc[0,:])","f1d6d358":"### \u5206\u5730\u533a\u7684\u753b\u56fereduction potential","3576ace3":"#### \u5148\u753bfval\u7684\u503c","a2308183":"### Sequential kde plot","d27b1416":"### FDI","a75d2784":"### Average Fval","2019209f":"### Fval by Region","d90ea1bf":"### Efficiency Change","0afef579":"### Tech and Effi Change","f51aac32":"### Optimal Directional Vectors and Shadow Prices","198cefed":"### Shadow price Sequential Radar Plot"}}