{"cell_type":{"473ed6f7":"code","8f0d23a8":"code","7e6c4b03":"code","f4ac279f":"code","35180f3b":"code","6e0a8a52":"code","24a6a89c":"code","51fec586":"code","1ac19cfa":"code","a9eb6c5b":"code","149874df":"code","fa26bb07":"code","e950fc44":"code","6d14d85f":"code","0aaa5598":"code","99353840":"code","7276904b":"code","66701e92":"code","d9c84a4f":"code","3fdf972a":"code","e78e5f90":"code","fda8f08c":"code","90efaabc":"code","955af0ad":"code","651e9c22":"code","48094bfd":"code","99b6bcb8":"code","91af59e7":"code","6e6ac7ef":"code","de9ed858":"code","70b5a9e9":"code","4a448787":"code","78d6f5ef":"code","170ee2f0":"code","0c7faecc":"code","8a8b6a94":"code","a739a922":"code","05a1c067":"code","56309914":"code","60951a8f":"code","333a7924":"code","489d2aec":"code","a3ee907a":"code","65d2a5e6":"code","2daf6d33":"code","9a9cf996":"code","b0718351":"code","ddc5d380":"code","9add37bd":"code","826fe8cf":"markdown"},"source":{"473ed6f7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb","8f0d23a8":"df=pd.read_csv(\"..\/input\/data-scientist-jobs\/DataScientist.csv\")","7e6c4b03":"df\n","f4ac279f":"df.head()","35180f3b":"df.tail()","6e0a8a52":"df.shape","24a6a89c":"df.size","51fec586":"df.info()","1ac19cfa":"df.describe()","a9eb6c5b":"df.drop(['index','Industry','Job Description','Competitors'],axis=1,inplace=True)","149874df":"df.columns","fa26bb07":"df.columns=map(str.lower,df.columns)","e950fc44":"df.columns[0]","6d14d85f":"df.drop(['unnamed: 0'],axis=1,inplace=True)","0aaa5598":"df","99353840":"df.columns","7276904b":"df['job title']","66701e92":"df['job title']=df['job title'].apply(lambda x:x.join(x.split(',')[:1]))\ndf['job title']=df['job title'].apply(lambda x:x.join(x.split('\/')[:1]))\ndf['job title']=df['job title'].apply(lambda x:x.join(x.split('-')[:1]))","d9c84a4f":"df","3fdf972a":"df['location']","e78e5f90":"df['location']=df['location'].apply(lambda x:x.join(x.split(\",\")[:1]))","fda8f08c":"df['headquarters']","90efaabc":"df['headquarters']=df['headquarters'].apply(lambda x:x.join(x.split(',')[:1]))","955af0ad":"df","651e9c22":"df.rename(columns={'type of ownership':'ownership','salary estimate':'salary'},inplace=True)","48094bfd":"df","99b6bcb8":"df['ownership']=df['ownership'].apply(lambda x:x.split()[-1])","91af59e7":"df","6e6ac7ef":"df['ownership']=df['ownership'].replace(['Unknown'],np.nan)","de9ed858":"df['ownership']","70b5a9e9":"df['easy apply']=df['easy apply'].replace(['-1'],'False')\ndf['easy apply']=df['easy apply'].replace(['TRUE'],'true')","4a448787":"df['easy apply']","78d6f5ef":"df['revenue']=df['revenue'].apply(lambda x:x.split()[-1])","170ee2f0":"df['sector']=df['sector'].replace(['-1'],np.nan)","0c7faecc":"df","8a8b6a94":"df['size']=df['size'].apply(lambda x:x.replace('+','-0'))","a739a922":"df","05a1c067":"df['founded']=df['founded'].replace([-1],np.nan)","56309914":"df['rating']=df['rating'].replace([-1],np.nan)","60951a8f":"df","333a7924":"df['company name']=df['company name'].apply(lambda x:x.split()[0])","489d2aec":"df=df.dropna(how='any',axis=0)\ndf=df.reset_index(drop=True)\n","a3ee907a":"df['salary']=df['salary'].apply(lambda x:x.split()[0])","65d2a5e6":"df['founded']=df['founded'].astype(int)","2daf6d33":"df['salary']=df['salary'].apply(lambda x:x.replace('$',''))","9a9cf996":"df['salary']=df['salary'].apply(lambda x:x.replace('K',' '))","b0718351":"df","ddc5d380":"df['size'] = df['size'].apply(lambda x:x.replace('to','-'))\ndf['size'] = df['size'].apply(lambda x:x.replace('+',' - 0'))\ndf['size']= df['size'].apply(lambda x:x.replace('employees',' '))\ndf['salary']= df['salary'].apply(lambda x:x.replace('(Employer',' '))\ndef convert_sqft_to_num(x):\n    tokens = x.split('-')\n    if len(tokens) == 2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None\ndf['salary'] = df['salary'].apply(convert_sqft_to_num)\ndf['size']=df['size'].apply(convert_sqft_to_num)\ndef isrevenue(x):\n    if x==\"Non-Applicable\":\n        return 0\n    elif x==\"(USD)\":\n        return 1\ndf['revenue']=df['revenue'].apply(isrevenue)\ndf['job title'] = df['job title'].apply(lambda x:x.replace('#NAME?','-'))\ndf['job title'] = df['job title'].apply(lambda x:x.replace('with','-'))\nprint('\\n','unique job titles are :',df['job title'].unique())\ndf.head(20)","9add37bd":"df","826fe8cf":"df"}}