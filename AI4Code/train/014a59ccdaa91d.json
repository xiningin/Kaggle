{"cell_type":{"ab4c0482":"code","96a6ea80":"code","0ac22091":"code","ab2de037":"code","5de87d96":"code","7573fe51":"code","ea99202e":"code","d45427b4":"markdown"},"source":{"ab4c0482":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n!ls ..\/input\/severstal-steel-defect-detection\n\nBASE_DIR = '..\/input\/severstal-steel-defect-detection'\n\n# Any results you write to the current directory are saved as output.\n\nimages_are_grayscale = True","96a6ea80":"# get mean train image\nmean_train_image = np.zeros((256, 1600, 3), np.float32)\nimnum = 1\nfor imname in os.listdir(os.path.join(BASE_DIR, 'train_images')):\n    im = np.array(Image.open(os.path.join(BASE_DIR, 'train_images', imname))).astype(np.float32)\n    if np.any(im[:,:,0] != im[:,:,1]) or np.any(im[:,:,1] != im[:,:,2]):\n        images_are_grayscale = False\n    mean_train_image = im + mean_train_image * (imnum-1)\/imnum\n    imnum += 1\n","0ac22091":"plt.figure()\nplt.imshow(mean_train_image\/np.max(mean_train_image))","ab2de037":"# get mean train image\nmean_test_image = np.zeros((256, 1600, 3), np.float32)\nimnum = 1\nfor imname in os.listdir(os.path.join(BASE_DIR, 'test_images')):\n    im = np.array(Image.open(os.path.join(BASE_DIR, 'test_images', imname))).astype(np.float32)\n    if np.any(im[:,:,0] != im[:,:,1]) or np.any(im[:,:,1] != im[:,:,2]):\n        images_are_grayscale = False\n    mean_test_image = im + mean_test_image * (imnum-1)\/imnum\n    imnum += 1\n","5de87d96":"\nplt.figure()\nplt.imshow(mean_test_image\/np.max(mean_test_image))","7573fe51":"print(images_are_grayscale)","ea99202e":"diff_im = mean_train_image\/np.max(mean_train_image) - mean_test_image\/np.max(mean_test_image)\ndiff_im += np.min(diff_im)\ndiff_im = diff_im \/ np.min(diff_im)\nplt.figure()\nplt.imshow(diff_im)","d45427b4":"The images are all grayscale and there seems to be a difference in illumination between train and test images. Some test images have a light spot on the right side which is not present for the train images."}}