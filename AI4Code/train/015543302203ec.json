{"cell_type":{"fe4cf5ef":"code","c602c3ae":"code","eaec24b7":"code","561a6f98":"code","295648cb":"markdown"},"source":{"fe4cf5ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c602c3ae":"!pip install --upgrade sk-dist\n!pip install pyspark","eaec24b7":"from skdist.distribute.search import DistGridSearchCV\nfrom xgboost import XGBRegressor\nfrom pyspark.sql import SparkSession\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd","561a6f98":"\ndef get_xy(df):\n    y = df.quality\n    X = df.drop('quality',axis = 1)\n    return X, y\n\nspark = (\n    SparkSession\n    .builder\n    .getOrCreate()\n    )\nsc = spark.sparkContext\n\npath = '..\/input\/red-wine-quality-cortez-et-al-2009\/'\ndf = pd.read_csv(path+'winequality-red.csv')\n\nX, y = get_xy(df)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\n\ngrid = dict(\n    learning_rate=[.05, .01],\n    max_depth=[4, 6, 8],\n    colsample_bytree=[.6, .8, 1.0],\n    n_estimators=[100, 200, 300]\n)\n\ncv = 5\nreg_scoring = \"neg_mean_squared_error\"\n\n### distributed grid search\nmodel = DistGridSearchCV(\n    XGBRegressor(objective='reg:squarederror'),\n    grid, sc, cv=cv, scoring=reg_scoring\n    )\n\nmodel.fit(X_train, y_train)\n\nprint(\"-- Grid Search --\")\nprint(\"Best Score: {0}\".format(model.best_score_))\nprint(\"Best colsample_bytree: {0}\".format(model.best_estimator_.colsample_bytree))\nprint(\"Best learning_rate: {0}\".format(model.best_estimator_.learning_rate))\nprint(\"Best max_depth: {0}\".format(model.best_estimator_.max_depth))\nprint(\"Best n_estimators: {0}\".format(model.best_estimator_.n_estimators))\n\ny_pred = model.predict(X_test)\n\nprint(\"MSE: {0}\".format(mean_squared_error(y_test, y_pred)))\n\n","295648cb":"**CREDITS**\nThis Notebook uses Open Source =code. You can find the source code of their open source projects along with license information below. We acknowledge and are grateful to these developers for their contributions to open source.\nCopyright 2019 Ibotta Inc. All right reserved.\nApache License 2.0 https:\/\/github.com\/Ibotta\/sk-dist\/blob\/master\/LICENSE\n"}}