{"cell_type":{"b6309839":"code","8dc7a399":"code","00bbcf40":"code","0396ad25":"code","9c159057":"code","56a48a43":"code","6d790f15":"code","5fdc5fa1":"code","f6b1ce58":"code","e406a3d1":"code","527e10c4":"code","6038a6ed":"code","cbfa2958":"code","789a0ec6":"code","d7058a7c":"code","9fef9a99":"code","0e3da305":"code","41715d92":"code","060d7cff":"code","d45293ad":"code","2385e0be":"code","a857deb8":"code","1c2287f4":"code","a9640939":"code","5952332a":"markdown","182a3b4b":"markdown","68d09e35":"markdown","c4897f83":"markdown","8ca42a44":"markdown","3c0b03f0":"markdown","bf2bc3f1":"markdown","57155ec1":"markdown","db82b308":"markdown","b95f2b04":"markdown","65d44574":"markdown","a851996b":"markdown","497484fe":"markdown","43d3cca0":"markdown","ebb0a95b":"markdown","28cf277f":"markdown","e33fb784":"markdown","c63cb08a":"markdown","e198c42d":"markdown","65d4aaf3":"markdown","43c3c452":"markdown","2ff00231":"markdown","172e47c3":"markdown","2a639e8f":"markdown","23c949a4":"markdown","073aab54":"markdown"},"source":{"b6309839":"#import pandas\nimport pandas as pd # data processing and manipulation\n\nimport warnings\nwarnings.filterwarnings('ignore')","8dc7a399":"#import data\ndf = pd.read_csv(\"\/kaggle\/input\/nypd-complaint-data-historic-20062019\/NYPD_Complaint_Data_Historic.csv\")","00bbcf40":"#The dataset size\nprint(\"Observations: \", df.shape[0])\n\n#The number of variables\nprint(\"Variables: \", df.shape[1])","0396ad25":"# show first 5 entries\ndf.head()","9c159057":"#the name of the variables and their types\ndf.dtypes","56a48a43":"#See the percentege of missing values in each variable\n(df.isna().sum()\/df.shape[0]*100).sort_values(ascending=False)","6d790f15":"#dropping rows with NaN values\ndf.dropna(subset=['Y_COORD_CD','X_COORD_CD','Latitude','Longitude','CRM_ATPT_CPTD_CD','CMPLNT_FR_TM','Lat_Lon','CMPLNT_FR_DT','BORO_NM','OFNS_DESC'], inplace=True)\n\n#dropping columns that are not significant for future data exploration\ndf.drop(['PARKS_NM','STATION_NAME','TRANSIT_DISTRICT','HADEVELOPT','HOUSING_PSA'],axis='columns', inplace=True)\n\ndf.drop(['PREM_TYP_DESC','SUSP_AGE_GROUP','SUSP_SEX','SUSP_RACE','JURISDICTION_CODE'], axis='columns', inplace=True)\n\ndf.drop(['ADDR_PCT_CD','PD_CD','PD_DESC','PATROL_BORO','CMPLNT_TO_DT','CMPLNT_TO_TM'], axis='columns', inplace=True)\n\n#replacing all NaN values in 'LOC_OF_OCCUR_DESC' with UNKNOWN\ndf.fillna({'LOC_OF_OCCUR_DESC':'UNKNOWN'}, inplace=True)\n\n#replacing all NaN values in 'VIC_RACE' with UNKNOWN\ndf.fillna({'VIC_RACE':'UNKNOWN'}, inplace=True)\n\n#replacing all NaN values in 'VIC_AGE_GROUP' with UNKNOWN\ndf.fillna({'VIC_AGE_GROUP':'UNKNOWN'}, inplace=True)\n\n#replacing all NaN values in 'VIC_SEX' with UNKNOWN\ndf.fillna({'VIC_SEX':'UNKNOWN'}, inplace=True)\n\nprint('Clean dataset: ')\nprint(\"Observations: \", df.shape[0])\nprint(\"Variables: \", df.shape[1])\n\n#examing the changes\ndf.head(5)","5fdc5fa1":"df.OFNS_DESC.unique()\n","f6b1ce58":"df_clean = df.replace({'HARRASSMENT 2': 'HARASSMENT', \n                'ESCAPE 3': 'ESCAPE',\n                'ASSAULT 3 & RELATED OFFENSES': 'ASSAULT & RELATED OFFENSES',\n                'CRIMINAL MISCHIEF & RELATED OF': 'CRIMINAL MISCHIEF',\n                'OFF. AGNST PUB ORD SENSBLTY &': 'OFFENSES AGAINST PUBLIC ORDER\/ADMINISTRATION',\n                'OTHER STATE LAWS (NON PENAL LA': 'OTHER STATE LAWS (NON PENAL LAW)',\n                'ENDAN WELFARE INCOMP': 'ENDANGERING WELFARE OF INCOMPETENT',\n                'AGRICULTURE & MRKTS LAW-UNCLASSIFIED': 'AGRICULTURE & MARKETS LAW',\n                'DISRUPTION OF A RELIGIOUS SERV': 'DISRUPTION OF A RELIGIOUS SERVICE',\n                'LOITERING\/GAMBLING (CARDS, DIC': 'GAMBLING',\n                'OFFENSES AGAINST MARRIAGE UNCL': 'OFFENSES AGAINST MARRIAGE',\n                'HOMICIDE-NEGLIGENT,UNCLASSIFIE': 'HOMICIDE-NEGLIGENT',\n                                      'E': 'UNKNOWN',\n                                      'D': 'BUSINESS\/ORGANIZATION',\n                                      'F': 'FEMALE',\n                                      'M': 'MALE'}).copy()","e406a3d1":"df_clean.OFNS_DESC.unique()","527e10c4":"#types of crimes (top 10)\ndf_clean.OFNS_DESC.value_counts().iloc[:10]","6038a6ed":"df_clean.OFNS_DESC.value_counts().iloc[:10].sort_values().plot(kind=\"barh\", title = \"Types of Crimes\")","cbfa2958":"df_clean['LAW_CAT_CD'].value_counts().sort_values().plot(kind='pie', subplots=True, shadow = True,startangle=40,\nfigsize=(10,5), autopct='%1.1f%%', title = 'Level of Offense')","789a0ec6":"df_clean['year'] = df_clean['RPT_DT'].str.findall(r'(\\d{4})').apply(lambda x: x[0])\ndf_clean['year'].value_counts().plot(kind=\"line\", title = \"Total Crime Events by Year\")\n","d7058a7c":"#reports by month\ndf_clean['month'] = df_clean['RPT_DT'].str.findall('(\\d{2})').apply(lambda x: x[0])\ndf_clean.groupby('month').size().plot(kind = 'bar', title ='Total Crime Events by Month', color = '#C0392B',rot=0)\n\n#descending order\n#df['month'].value_counts().plot(kind=\"bar\", xlabel = \"months\", ylabel = \"reports\", rot=0)","9fef9a99":"#reports by hour\ndf_clean['time'] = df_clean['CMPLNT_FR_TM'].str.findall('(\\d{2})').apply(lambda x: x[0])\ndf_clean.groupby('time').size().plot(kind = 'bar', title ='Total Crime Events by Day', color = '#E67E22', xlabel = 'hours',rot=0)\n\n#descending order\n#df['time'].value_counts().plot(kind=\"bar\", xlabel = \"hours\", ylabel = \"reports\", rot=0)","0e3da305":"df_clean['BORO_NM'].value_counts().sort_values().plot(kind=\"barh\", color = '#1ABC9C', title = 'Total of Crime Events by Borough')","41715d92":"sex_crimes = df_clean[df.OFNS_DESC.str.contains('SEX CRIMES|RAPE')]\nsex_crimes.head()","060d7cff":"sex_crimes.shape","d45293ad":"#plot graph\nsex_crimes.groupby('year').size().plot(kind = 'barh', color = '#8E44AD', title = 'Sex Crime Reports by Year')\n\n#average sex crimes per year\nmean = sex_crimes['year'].value_counts().mean()\nprint(round(mean,2))","2385e0be":"#plot graph\nsex_crimes.groupby('time').size().plot(kind = 'bar', color = '#3498DB', rot=0, title = 'Sex Crime Reports by Hour')","a857deb8":"#plot graph\nsex_crimes['VIC_SEX'].value_counts().iloc[:3].plot(kind=\"bar\",  color = '#F1C40F', title = 'Sex Crime Victims by Gender', rot=0)\n\n#victims by gender percentage\nvic_sex_per = sex_crimes['VIC_SEX'].value_counts() \/ sex_crimes['VIC_SEX'].shape[0] *100\nprint(vic_sex_per)","1c2287f4":"#plot graph\nsex_crimes['VIC_AGE_GROUP'].value_counts().iloc[[0,1,2,4,5]].plot(kind=\"bar\", color = '#2ECC71', title = 'Sex Crime Victims by Age Group', rot=0)\n\n#victims by age percentage\nvic_age_per = sex_crimes['VIC_AGE_GROUP'].value_counts().iloc[[0,1,2,4,5]] \/ sex_crimes['VIC_AGE_GROUP'].shape[0] *100\nprint(vic_age_per)","a9640939":"#plot graph\nsex_crimes['VIC_RACE'].value_counts().iloc[:7].plot(kind=\"barh\", color = '#D35400', title = 'Sex Crime Victims by Race')\n\n#victims by race percentage\nvic_race_per = sex_crimes['VIC_RACE'].value_counts().iloc[:7] \/ sex_crimes['VIC_RACE'].shape[0] *100\nprint(vic_race_per)","5952332a":"### 3. Distribution of Crime in each borough\n\nAccording to this visualization, Brooklyn has the overall highest number of crime events, with over 2 million reports.","182a3b4b":"### 2. Distribution of crimes over the years, months and days\n\nI also want to know about the trend of crime incidents that have been taking place in NYC.\n\nThe first graph shows the crime events by year, then by month, and, at last, the crime distribution in a day.","68d09e35":"Crimes happened the most during July, August, and October, whereas February, November, and December appear to be safer. From that information, it might be possible to assume a positive correlation between temperature and crime. ","c4897f83":"Overall, by looking at the number of offenses recorded by the NYC police, it's possible to see that crime levels have been decreasing consistently since 2006.","8ca42a44":"# New York City Crime Analysis\n\n> Using NYPD Complaint Data to analyze crime events with pandas library\n\n![image.png](attachment:image.png)\n\n## Introduction\n\nWhile I was learning Data Analysis using Pandas in Python, I decided to analyze the open data about New York City - the largest and most influential American metropolis. New York City is in reality a collection of many neighbourhoods scattered among the city\u2019s five boroughs: Manhattan, Brooklyn, the Bronx, Queens, and Staten Island. New York is the most populous and the most international city in the country. \n\n[*Pandas*](https:\/\/pandas.pydata.org\/) is a high-level library for doing practical, real world data analysis in Python. It is one of the most powerful and flexible open source tools to analyze and manipulate data. In this notebook, my goal is to explore the wide range of opportunities for visual analysis with Pandas.\n\n\n## About the dataset\nThe dataset includes all valid felony, misdemeanor, and violation crimes reported to the New York City Police Department (NYPD) from 2006 to the end of 2019. \n\nThe [original dataset](https:\/\/data.cityofnewyork.us\/d\/qgea-i56i?category=Public-Safety&view_name=NYPD-Complaint-Data-Historic) can be found on the [NYC Open Data](http:\/\/https:\/\/opendata.cityofnewyork.us\/) website.","3c0b03f0":"Then, we display every column to understand the variables and their types.","bf2bc3f1":"There are three levels of crime in New York State: Violation, Misdemeanor and Felony.\n\nFrom the graph below, I can tell that Misdemeanor, an offense of which a sentence in excess of 15 days but not greater than one year may be imposed, is the most popular level of crime. The second popular one is Felony, the most serious of offenses, and the third one is Violation, a lesser offense for which a sentence only be no more than 15 days.","57155ec1":"Here, we can tell the safest time of the day when a sex crime is the least possible to happen in NYC is 6 am. However, people need to be more careful between midnight and 1 am.\n\n#### Analyzing the victims\n\nSexual violence affects millions of people. The impact of sexual assault, domestic violence, dating violence or stalking can be life altering for survivors and their families. Therefore, I decided to make a brief analysis of the sex crime victims in New York.","db82b308":"### Data Cleaning\n\n#### Dealing with NaN data\n\nSince some of the columns are pretty important for the analysis, I dropped entire rows which miss any crucial value. For that, I used the `dropNA()` function in Pandas.\n\nThe columns I didn't want to drop entire rows, I opted to fill them with the 'UNKNOWN' value (These include variables that contain information about the victims of the crime, such as their age group, race, and gender). I used the `fillNA()` function for that.\n\nIt is worth mention that some specific variables have a lot of NaN values, and they don't necessarily have any use in this analysis (like PARKS_NM means the park or public place nearby where crime happened, and columns with information about the suspect are also not going to be important, considering they have a lot of missing data) so I would drop those columns entirely with the `drop()` function.","b95f2b04":"- Based on the bar graph that I computed, sex crimes happened the most during the last 3 years compared to previous years.\n\n- On average, there are 7443 victims of rape and sexual assault each year in New York City.\n\nLet\u2019s also look at how the number of the reports changes within a day.","65d44574":"The dataset contains over 6 million crime reports from 2006 to 2019, with a total of 35 variables each.\n\nAfter looking at the head of the dataset we were already able to notice some NaN values, therefore we need to examine the missing values further before continuing with the analysis. \n\n- The `isna()` function will show us the percentage of non-existent values for each variable.","a851996b":"### Variables dictionary \n\n> **CMPLNT_NUM** - Randomly generated persistent ID for each complaint\n> \n> **ADDR_PCT_CD** - The precinct in which the incident occurred\n> \n> **BORO** - The name of the borough in which the incident occurred\n> \n> **CMPLNT_FR_DT** - Exact date of occurrence for the reported event (or starting date of occurrence, if CMPLNT_TO_DT exists)\n> \n> **CMPLNT_FR_TM** - Exact time of occurrence for the reported event (or starting time of occurrence, if CMPLNT_TO_TM exists)\n> \n> **CMPLNT_TO_DT** - Ending date of occurrence for the reported event, if exact time of occurrence is unknown\n> \n> **CMPLNT_TO_TM** - Ending time of occurrence for the reported event, if exact time of occurrence is unknown\n> \n> **CRM_ATPT_CPTD_CD** - Indicator of whether crime was successfully completed or attempted, but failed or was interrupted prematurely\n> \n> **HADEVELOPT** - Name of NYCHA housing development of occurrence, if applicable\n> \n> **HOUSING_PSA** - Development Level Code\n> \n> **JURISDICTION_CODE** - Jurisdiction responsible for incident. Either internal, like Police(0), Transit(1), and Housing(2); or external(3), like Correction, Port Authority, etc.\n> \n> **JURIS_DESC** - Description of the jurisdiction code\n> \n> **KY_CD** - Three digit offense classification code\n> \n> **LAW_CAT_CD** - Level of offense: felony, misdemeanor, violation\n> \n> **LOC_OF_OCCUR_DESC** - Specific location of occurrence in or around the premises; inside, opposite of, front of, rear of\n> \n> **OFNS_DESC** - Description of offense corresponding with key code\n> \n> **PARKS_NM** - Name of NYC park, playground or greenspace of occurrence, if applicable (state parks are not included)\n> \n> **PATROL_BORO** - The name of the patrol borough in which the incident occurred\n> \n> **PD_CD** - Three digit internal classification code (more granular than Key Code)\n> \n> **PD_DESC** - Description of internal classification corresponding with PD code (more granular than Offense Description)\n> \n> **PREM_TYP_DESC** - Specific description of premises; grocery store, residence, street, etc.\n> \n> **RPT_DT** - Date event was reported to police\n> \n> **STATION_NAME** - Transit station name\n> \n> **SUSP_AGE_GROUP** - Suspect\u2019s Age Group\n> \n> **SUSP_RACE** - Suspect\u2019s Race Description\n> \n> **SUSP_SEX** - Suspect\u2019s Sex Description\n> \n> **TRANSIT_DISTRICT** - Transit district in which the offense occurred.\n> \n> **VIC_AGE_GROUP** - Victim\u2019s Age Group\n> \n> **VIC_RACE** - Victim\u2019s Race Description\n> \n> **VIC_SEX** - Victim\u2019s Sex Description (D=Business\/Organization, E=PSNY\/People of the State of New York, F=Female, M=Male)\n> \n> **X_COORD_CD** - X-coordinate for New York State Plane Coordinate System, Long Island Zone, NAD 83, units feet (FIPS 3104)\n> \n> **Y_COORD_CD** - Y-coordinate for New York State Plane Coordinate System, Long Island Zone, NAD 83, units feet (FIPS 3104)\n> \n> **Latitude** - Midblock Latitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)\n> \n> **Longitude** - Midblock Longitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)","497484fe":" #### Preprocessing Text about Crime Type\n \n - The `unique()` function can extract a list of distinct values in a dataset, it returns the sorted unique elements of an array.\n \nAfter taking a good look at this data and removing NaN data, I realized that crime type data is really confusing. By extracting the unique values in the OFNS_DESC column (description of offense), I can see which descriptions are less intuitive and rename those values to make them more understandable.","43d3cca0":"**Through this analysis of the victims, I have found the following insights:**\n\n- 83% of all victims are female. Women are approximately four times more likely to be victims of rape, attempted rape, or sexual assault.\n\n- Ages under 18 are at the highest risk for rape\/sexual assault.\n\n- Black and White Hispanic residents are twice as likely to experience a rape\/sexual assault compared to any other race.\n","ebb0a95b":"## Exploratory Analysis\n### 1. Types of Crimes\n\nAfter cleaning the data, I want to know how many types of crimes are there in New York City.\n\n- Use `value_counts` in Pandas.\n\nThe `value_counts` method helps count the number of appearances of different types of crimes and sort them in order. Below, we have the 10 top crimes reported in the dataset.","28cf277f":"## Data pre-processing\n\nFirstly, we check the amount of rows in the dataset to understand the size we are working with.","e33fb784":"- Check if data is successfully modified.","c63cb08a":"The new dataset registers 104.211 sex crimes reports in NYC in total.\n\n#### Analyzing Time\n\nWe may be interested in the distribution of values across the years, so I'm going to group the data by year and plot the results.","e198c42d":"- The `head()` function is to check if the data is successfully obtained.","65d4aaf3":"## Import libraries and data","43c3c452":"- `read_csv` reads the .csv data and returns a Pandas DataFrame","2ff00231":"### 4. Analyzing a Specific Crime\n\nI want to specifically analyze sex related crimes in NYC. For that, I put the part of the dataframe that contains the crime description 'sex crimes' and 'rape' into another dataframe and called it \u201csex_crimes.\u201d","172e47c3":"Here, we can see the crime incident that has happened the most frequently in New York City is \u201cPetit Larceny\u201d, a form of larceny in which the value of the property taken is generally less than $50.\n\nThen, I plotted the result for better visualization.","2a639e8f":"## Conclusion\n\nBy using Pandas, I analyzed and visualized the open data of NYC Crime Incident Reports. This library proved to be a powerful tool in data analysis, and it's a good way to start.\nAfter this, I am intrigued to look into more data related to crime and try different libraries for data visualization.\n\nThanks for your reading! Feel free to check up my [Github](https:\/\/github.com\/brunacmendes\/).","23c949a4":"We can tell the safest time of the day when a crime is the least possible to happen is 5 am, but it's more likely to happen between 12 pm and 6 pm.","073aab54":"- The `replace()` method returns a copy of all occurrences of a substring after being replaced with another substring. With that, I was able to copy the dataset into a new dataset called 'df_clean' and rename some of the crime descriptions (e.g. 'HARRASSMENT 2' to 'HARASSMENT', 'OFF. AGNST PUB ORD SENSBLTY &' to 'OFFENSES AGAINST PUBLIC ORDER\/ADMINISTRATION')."}}