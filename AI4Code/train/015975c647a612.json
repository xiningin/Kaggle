{"cell_type":{"1c6a1957":"code","88f5e886":"code","5023a7da":"code","ca79bf34":"code","812d5250":"code","47936903":"code","392e548c":"code","361c5f08":"code","697b2036":"code","1b83dd23":"code","e578ce38":"markdown","729c5eb8":"markdown","1946e423":"markdown","cfcd22f9":"markdown","1fb772e5":"markdown","2ce19012":"markdown","1584ee83":"markdown","d4b7a59c":"markdown","a9a6de16":"markdown","cdb55581":"markdown"},"source":{"1c6a1957":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","88f5e886":"df = pd.read_csv(\"\/kaggle\/input\/us-politicians-twitter-dataset\/dataset.csv\")\nprint (df.shape)\ndf.head()","5023a7da":"df.drop(columns=['Twitter_username', 'Account_start_time', 'Account_ID', 'Birthday'], inplace=True)\ndf.drop_duplicates(inplace=True)\ndf.reset_index(drop=True, inplace=True)","ca79bf34":"df_temp = df.drop_duplicates(subset=['Name', 'Political_party'])\nplt.figure(figsize=(14,8))\nsns.set(style='darkgrid')\nsns.countplot(y='Political_party', hue='Sex', data=df_temp, order=df_temp['Political_party'].value_counts().index[:10], palette=\"Set2\")\nplt.xscale('log')\nplt.legend(loc='lower right')\nplt.xlabel(\"Number of Politicians\", weight='bold')\nplt.ylabel(\"Political Party\", weight='bold')\nplt.legend(title='Gender', shadow=True, facecolor='lightyellow')\nplt.show()","812d5250":"df_temp = df.drop_duplicates(subset=['Name', 'Political_party'])\nplt.figure(figsize=(16,10))\nsns.set(style='darkgrid')\nsns.boxplot(hue=\"Sex\", y='Age', x='Political_party', data=df_temp, order=df_temp['Political_party'].value_counts().index[:10], palette=\"Set2\")\nplt.xticks(rotation=90)\nplt.xlabel(\"Political Party\", weight='bold')\nplt.ylabel(\"Age\", weight='bold')\nplt.legend(title='Gender', shadow=True, facecolor='lightyellow')\nplt.show()","47936903":"df_temp = df.drop_duplicates(subset=['Name'])\nplt.figure(figsize=(16,10))\nsns.set(style='darkgrid')\nsns.boxplot(y='Age', x='Birthplace', data=df_temp, order=df_temp['Birthplace'].value_counts().index[:15], palette=\"Set2\")\nplt.xticks(rotation=90)\nplt.xlabel(\"Birth Place\", weight='bold')\nplt.ylabel(\"Age\", weight='bold')\nplt.show()","392e548c":"df_temp = df.groupby('Political_party')[['Name', 'Instagram_username']].nunique().sort_values(by='Name', ascending=False).head(15)\ndf_temp.reset_index(inplace=True)\nsns.set(style='darkgrid')\nplt.figure(figsize=(12,8))\nsns.barplot(x='Political_party', y='Name', data=df_temp, color='b', label='Total Politicians')\nsns.barplot(x='Political_party', y='Instagram_username', data=df_temp, color='g', label='Politicians using Instagram')\nplt.yscale('log')\nplt.xticks(rotation=90)\nplt.xlabel('Political Party', weight='bold')\nplt.ylabel('Number of Politicians', weight='bold')\nplt.legend(title='Politicians', shadow=True, facecolor='lightyellow')\nplt.show()","361c5f08":"from collections import Counter\ndf_temp = df.drop_duplicates(subset=['Name'])\ndict_ = {}\ndict_['US-born'] = df_temp[(df_temp['Birthplace'] == 'United States of America')].shape[0]\ndict_['Foreign-born'] = df_temp[~(df_temp['Birthplace'] == 'United States of America')].shape[0]\n\nplt.figure(figsize=(6,6))\nplt.pie(x=dict_.values(), labels=dict_.keys(), autopct='%1.1f%%', shadow=True, \n        startangle=0, explode = [0.1, 0])\nplt.show()","697b2036":"from collections import Counter\ndf_temp = df.drop_duplicates(subset=['Name'])\ndf_temp = df_temp[~(df_temp['Birthplace'] == 'United States of America')]\ndict_ = Counter(df_temp['Birthplace'].value_counts().to_dict())\ndict_ = dict(dict_.most_common(10))\n\nplt.figure(figsize=(8,8))\nplt.pie(x=dict_.values(), labels=dict_.keys(), autopct='%1.1f%%', shadow=True, startangle=90)\nplt.show()","1b83dd23":"df_temp = df.drop_duplicates(subset=['Name'])\ndf_temp = df_temp[~(df_temp['Birthplace'] == 'United States of America')]\nplt.figure(figsize=(14,8))\nsns.set(style='darkgrid')\nsns.countplot(x='Birthplace', hue='Sex', data=df_temp, order=df_temp['Birthplace'].value_counts().index[:10], palette=\"Set2\")\nplt.xlabel('Birthplace', weight='bold')\nplt.ylabel('Number of Politicians', weight='bold')\nplt.legend(title='Gender', shadow=True, facecolor='lightyellow')\nplt.show()","e578ce38":"### **Percentage of top 10 foreign-born politicians**","729c5eb8":"## **Loading the dataset**","1946e423":"### **Number of Politicians of each Gender in top 10  foreign-born countries**","cfcd22f9":"**Feel free to Upvote and provide Feedback**","1fb772e5":"# **Visualisation of US Politicians data**","2ce19012":"### **Age Distribution of Politicians in top 10 major countries (birthplace)**","1584ee83":"### **Age distribution of Politicians of each Gender in top 10 major political parties**","d4b7a59c":"### **Number of Politicians of each Gender in top 10 major political parties**","a9a6de16":"### **Percentage of foreign-born US politicians to US-born politicians**","cdb55581":"### **Number of total Politicians v\/s the number of Politicians using Instagram in top 15 major political parties**"}}