{"cell_type":{"bb5f345c":"code","e64bdecb":"code","ab69cb78":"code","d29dc904":"code","b4525dcd":"code","df538ac5":"code","5d0b79a2":"code","6246d828":"code","56250b9f":"code","92ff6587":"code","46cae7e1":"code","86684710":"code","29f03832":"code","301bb646":"code","7a0b09ad":"code","00c6f75f":"code","6ffe7f58":"code","6ff73d70":"code","37b570f9":"code","2ac11a7a":"markdown"},"source":{"bb5f345c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom keras.utils import to_categorical","e64bdecb":"train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest_df = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","ab69cb78":"train_df.head()","d29dc904":"train_df['label'].unique()","b4525dcd":"print(train_df.shape, test_df.shape)","df538ac5":"train_df.info()","5d0b79a2":"test_df.info()","6246d828":"count = train_df['label'].value_counts()","56250b9f":"count","92ff6587":"plt.figure(figsize=(12,6))\nsns.countplot(train_df['label'])\nplt.show()","46cae7e1":"y_train = train_df['label']\ntrain_df = train_df.drop(labels=['label'], axis=1)\nX_train = train_df.values.reshape(-1,28,28,1)\nX_train = X_train\/255\ny_train = to_categorical(y_train, num_classes=10)\nprint(X_train.shape, y_train.shape)","86684710":"X_test = (test_df.values.reshape(-1,28,28,1))\/255\n\nprint(X_test.shape)","29f03832":"## Display first images\nplt.imshow(X_train[0][:,:,0])\nprint(y_train[0])","301bb646":"import tensorflow as tf\n\nfrom tensorflow.keras import layers, models\n\n\nmodel = models.Sequential()\n\n# adding CNN layers to the model\n\nmodel.add(layers.Conv2D(32, (5,5),padding = 'Same', activation ='relu', input_shape = (28,28,1)))\nmodel.add(layers.Conv2D(32, (5,5),padding = 'Same', activation ='relu'))\nmodel.add(layers.MaxPool2D((2,2)))\nmodel.add(layers.Dropout(0.5))\n\nmodel.add(layers.Conv2D(64, (3,3),padding = 'Same', activation ='relu'))\nmodel.add(layers.Conv2D(64, (3,3),padding = 'Same', activation ='relu'))\nmodel.add(layers.MaxPool2D((2,2), strides=(2,2)))\nmodel.add(layers.Dropout(0.5))\n\n# adding Decision Layers\n\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(256, activation = \"relu\"))\nmodel.add(layers.Dropout(0.5))\nmodel.add(layers.Dense(10, activation = \"softmax\"))\n","7a0b09ad":"model.compile(\n    optimizer='adam',\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)","00c6f75f":"model.summary()","6ffe7f58":"Classifier = model.fit(X_train, y_train, epochs=20, batch_size=64, shuffle=True)","6ff73d70":"predict = model.predict(X_test)\ny_test = [np.argmax(pred) for pred in predict]","37b570f9":"submission = pd.DataFrame({'ImageId' : [i+1 for i in range(len(y_test))] , 'Label' : y_test})\nsubmission.to_csv('.\/submission.csv', index = False)","2ac11a7a":"# Model"}}