{"cell_type":{"ea42329a":"code","eb4b3f41":"code","23e4b0b6":"code","be29dc7b":"code","9d335636":"code","a4edf6a9":"code","7f632d94":"code","b4e82a3a":"code","c3249f7f":"code","013e4f02":"code","b5602b5d":"code","118b38f1":"code","aa47f865":"code","e4104d41":"code","fe61e32a":"code","aec9f4ef":"code","afd701fc":"markdown","48e02a46":"markdown","3426df2e":"markdown","dceb696c":"markdown","c534027c":"markdown","16e74452":"markdown","07b29233":"markdown","47a4cc18":"markdown"},"source":{"ea42329a":"import pandas as pd\ndata = pd.read_csv('..\/input\/glass\/glass.csv')","eb4b3f41":"data.head()","23e4b0b6":"data.shape[0]","be29dc7b":"data.Type.value_counts().plot(kind='bar')","9d335636":"out_class_count = data.Type.unique()\nout_class_count","a4edf6a9":"x = data.iloc[:,:-1].values\ny = data.iloc[:,-1].values","7f632d94":"x[0],y[0]","b4e82a3a":"import numpy as np\ndef normalize(x):\n    return (x - np.min(x, axis=0))\/(np.max(x, axis=0)-np.min(x, axis=0))\nx = normalize(x)","c3249f7f":"x[0],y[0]","013e4f02":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = .3)","b5602b5d":"len(x_train),len(x_test)","118b38f1":"import math\ndef knn(k):\n    y_pred = list()\n    for test_sample in x_test:\n        e_d = list()\n        freq = dict.fromkeys(range(1,8),0)\n        for (sample,lable) in zip(x_train,y_train):\n            distance = 0\n            for feature in range(len(x_train[0])):\n                distance+=(test_sample[feature]-sample[feature])**2\n            distance = math.sqrt(distance)\n            e_d.append([distance,lable])\n        e_d = sorted(e_d)[:k]\n        for i in e_d:\n            freq[i[1]]+=1\n        y_pred.append(max(freq, key = freq.get))\n    return y_pred","aa47f865":"from sklearn.metrics import accuracy_score\n\nk_list = [i for i in range(1,15,2)]\nk_accuracy = list()\nfor k in k_list:\n    y_pred = knn(k)\n    k_accuracy.append(accuracy_score(y_pred,y_test))","e4104d41":"k_accuracy ","fe61e32a":"import matplotlib.pyplot as plt\nplt.style.use('seaborn-white')\nplt.plot(range(1,15,2), k_accuracy )\nplt.grid()\nplt.xlabel(\"K\")\nplt.ylabel(\"Accuracy\")","aec9f4ef":"print(\"Maximum test accuracy : \" + str(max(k_accuracy)*100)+\" %\")","afd701fc":"# KNN","48e02a46":"## Reading data","3426df2e":"## Results","dceb696c":"## Target values","c534027c":"# KNN using theoretical concepts","16e74452":"## Normalization","07b29233":"## Test train split","47a4cc18":"## Splitting data into X and y "}}