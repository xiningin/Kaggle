{"cell_type":{"6864847c":"code","c2f0a4cf":"code","ce7088c5":"code","d0d13539":"code","fff479cb":"code","1f0002e5":"code","05d5a7b6":"code","4550f16f":"code","73e5584d":"code","79253142":"code","104f6cba":"code","f91932b1":"code","f40495c5":"code","3c2fd8df":"code","56c37c36":"code","a94b6a40":"code","368c08b3":"code","f61f6604":"code","34b89ae6":"code","81bf1996":"code","65f8253b":"markdown","888ceaeb":"markdown","6f163a68":"markdown","93f3883d":"markdown"},"source":{"6864847c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n#We are bringing the dataframes to the screen.","c2f0a4cf":"#heart.csv is coming to the screen\ndata = pd.read_csv('..\/input\/heart.csv')\n# Uploading survey.csv data","ce7088c5":"#examining dataframe structure\ndata.info()\n#as a result float64(1), int64(13)","d0d13539":"data.corr()\n#I can't wait to see the correlation similarities between them.","fff479cb":"#correlation map\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.4, fmt= '.1f',ax=ax)\n#We use the seoborn library. (sns) first parameter data.corr ,\n#https:\/\/seaborn.pydata.org\/generated\/seaborn.heatmap.html\n\nplt.show()","1f0002e5":"#to get the first 10 lines\ndata.head(10)","05d5a7b6":"data.columns\n#to retrieve column names","4550f16f":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.cp.plot(kind = 'line', color = 'g',label = 'chest pain',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.thalach.plot(color = 'r',label = 'maximum heart rate',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\ndata.age.plot(color = 'b',label = 'age',linewidth=0.5, alpha = 0.8,grid = True,linestyle = 'dashed')\n\n\nplt.legend(loc='upper right', bbox_to_anchor=(1, 0.3))     # legend = puts label into plot\n\n#https:\/\/matplotlib.org\/api\/legend_api.html\n\n\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","73e5584d":"# Scatter Plot \n# x = attack, y = defense\ndata.plot(kind='scatter', x='thalach', y='slope',alpha = 0.8,color = 'brown')\nplt.xlabel('thalach')              # label = name of label\nplt.ylabel('slope')\nplt.title('The slope of the peak exercise ST segment maximum heart rate achieved Scatter Plot')  \nplt.show()# title = title of plot\n#here's the correlation","79253142":"# Scatter Plot \n# x = attack, y = defense\n#data.plot(kind='scatter', x='thalach', y='age',alpha = 0.8)\nplt.scatter(data.thalach,data.age,alpha=0.4,color = 'green')\nplt.xlabel('thalach')              # label = name of label\nplt.ylabel('age')\nplt.title('Age and maximum heart rate achieved Scatter Plot')  \nplt.show()# title = title of plot\n#here's not the correlation","104f6cba":"# Histogram\n# bins = number of bar in figure\ndata.chol.plot(kind = 'hist',bins = 40,figsize = (6,6),alpha=0.5,layout ='tuple',sharex=False)\nplt.show()\n#http:\/\/pandas.pydata.org\/pandas-docs\/version\/0.19.0\/generated\/pandas.DataFrame.hist.html","f91932b1":"#create dictionary and look its keys and values\ndictionary = {'Name' : 'B\u00fclent','Age' : 53,'City':'Adana','Test':1}\nprint(dictionary.keys())\nprint(dictionary.values())","f40495c5":"# Keys have to be immutable objects like string, boolean, float, integer or tubles\n# List is not immutable\n# Keys are unique\ndictionary['City'] = \"\u0130stanbul\"    # update existing entry\nprint(dictionary)\ndictionary['Country'] = \"Turkey\"       # Add new entry\nprint(dictionary)\ndel dictionary['Test']              # remove entry with key 'spain'\nprint(dictionary)\nprint('Country' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","3c2fd8df":"# In order to run all code you need to take comment this line\n# del dictionary         # delete entire dictionary     \nprint(dictionary)       # it gives error because dictionary is deleted","56c37c36":"data = pd.read_csv('..\/input\/heart.csv')\n\nseries = data['chol']        # data['Defense'] = series\nprint(type(series))\ndata_frame = data[['chol']]  # data[['Defense']] = data frame\nprint(type(data_frame))","a94b6a40":"# 1 - Filtering Pandas data frame\nx = data['chol']>200     # There are only 252 person who have higher cholestrol value than 200\ndata[x]","368c08b3":"# 2 - Filtering pandas with logical_and\n# There are only 5 person who have higher cholestrol value than 270 and pain value equal 3\ndata[np.logical_and(data['chol']>270, data['cp']==3 )]","f61f6604":"# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['chol']>280) & (data['cp']==3)]","34b89ae6":"i = 0\nwhile (i <5):\n   print ('The count is:', i)\n   i = i + 1\n\nprint (\"Bye bye!\")","81bf1996":"lis = [10,20,30,40,50]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:10, 1:20, 2:30, 30:4, 40:50\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'Name' : 'B\u00fclent','Age' : 53,'City':'Adana','Test':1}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['chol']][0:1].iterrows():\n    print(index,\" : \",value)","65f8253b":"\n**PANDAS**\n\n\nWhat we need to know about pandas?\n\nCSV: comma - separated values","888ceaeb":"**chest pain(cp) and heart rate correlated closely with heart rate 0.4**\n0 alt\u0131nda olursa ili\u015fki yok. 0 \u00fcst\u00fcnde 1 yakla\u015ft\u0131k\u00e7a korelasyon ili\u015fki artar.\nIf there is 0, there is no relationship. The correlation relationship increases as you approach 1 on 0.","6f163a68":"The relationship between the pain type and the heart rate and the disorientation with age is seen.\n1. x axis of the amount of person\n1. y axis of age,rate,pain","93f3883d":"1. INTRODUCTION TO PYTHON\n\n\n**MATPLOTLIB\n  Matplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.******\n\n* Line plot is better when x axis is time.\n* Scatter is better when there is correlation between two variables\n* Histogram is better when we need to see distribution of numerical data.\n* Customization: Colors,labels,thickness of line, title, opacity, grid, figsize, ticks of axis and linestyle\nhttps:\/\/pandas.pydata.org\/pandas-docs\/version\/0.15.0\/visualization.html\n"}}