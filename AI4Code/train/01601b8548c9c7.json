{"cell_type":{"48a82833":"code","169a7e4f":"code","5f6e2c47":"code","641271c6":"code","2050f8f6":"code","c47f2e1c":"code","45bb33de":"code","5ca660e4":"code","756ec929":"code","14a971b3":"code","b37e83a6":"code","677c5d2a":"code","8d714c6d":"code","b87faf91":"code","4dc8e761":"code","c2a70b80":"code","f87fe9ee":"code","3a813b6a":"markdown","cfcc12b7":"markdown","c35b5656":"markdown","3da86d2e":"markdown","3ec33b84":"markdown","2f2a2f4d":"markdown"},"source":{"48a82833":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","169a7e4f":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","5f6e2c47":"train_data.describe()","641271c6":"train_data.info()","2050f8f6":"import matplotlib.pyplot as plt\ntrain_data.hist(bins=25, figsize=(20,15))\n#int values get grainy due to high bins","c47f2e1c":"corr_matrix = train_data.corr()\nprint(corr_matrix)","45bb33de":"#create new Data Frame to feature engineer in\nmodified_data = train_data\n#remove PassengerId, name, ticket, and cabin column\nmodified_data = modified_data.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)\nprint(modified_data.head())","5ca660e4":"#remove 2 rows of embarked with missing value\nmodified_data = modified_data[modified_data['Embarked'].notnull()]\nprint(modified_data.info())","756ec929":"#remove 100+ rows of missing age data\nmodified_data = modified_data[modified_data['Age'].notnull()]\nprint(modified_data.info())","14a971b3":"from sklearn.preprocessing import LabelEncoder\n#turned sex into a binary variable\nencoder = LabelEncoder()\nmodified_data['Sex'] = encoder.fit_transform(modified_data['Sex'])\nprint(modified_data['Sex'].head())","b37e83a6":"#one-hot encode embarked\nmodified_data = pd.get_dummies(modified_data, columns=['Embarked'])\nprint(modified_data.head())","677c5d2a":"#seperate X and y\ny = modified_data['Survived'].values\nX = modified_data.drop('Survived', axis=1).values","8d714c6d":"from sklearn.model_selection import train_test_split\n#train test split\nX_train, X_test, y_train, y_test = train_test_split(X, y)","b87faf91":"#creating the models\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\n\nfrom sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier()\n\nfrom sklearn.linear_model import SGDClassifier\nsgd = SGDClassifier()","4dc8e761":"from sklearn.model_selection import cross_val_score\nprint(cross_val_score(knn, X_train, y_train, cv=5).mean())\nprint(cross_val_score(tree, X_train, y_train, cv=5).mean())\nprint(cross_val_score(sgd, X_train, y_train, cv=5).mean())","c2a70b80":"output_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nsubmission = (output_data['PassengerId']).to_frame()\noutput_data = output_data.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)\noutput_data['Sex'] = encoder.fit_transform(output_data['Sex'])\noutput_data = pd.get_dummies(output_data, columns=['Embarked'])\noutput_data['Fare'].fillna(output_data['Fare'].median(), inplace=True)\noutput_data['Age'].fillna(output_data['Age'].median(), inplace=True)\nprint(output_data.info())","f87fe9ee":"tree.fit(X_train, y_train)\nsubmission['Survived'] = tree.predict(output_data)\nsubmission.head()\nsubmission.to_csv('submission.csv', index=False)","3a813b6a":"# Generate Submission","cfcc12b7":"# Exploratory Data Analysis","c35b5656":"# Build Models","3da86d2e":"# Data Loading","3ec33b84":"# Feature Engineering","2f2a2f4d":"# Evaluate Models"}}