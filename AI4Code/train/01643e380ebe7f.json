{"cell_type":{"7159074c":"code","a5169044":"code","2c97ba79":"code","77895481":"code","68bb1301":"code","630b1bcc":"code","16271270":"code","4140e923":"code","4c48fe43":"code","18f007a3":"code","fd286d42":"code","d04ff7f0":"code","4719d623":"code","855c9150":"code","05bc3db4":"code","853e50c7":"code","74d08f6d":"code","e1b2819e":"code","0c1ca3a9":"code","1b0b1363":"code","28061aa5":"code","70a7243f":"code","6c7c3d66":"code","0b0e9da6":"code","92c32c68":"code","bcb83c22":"code","9a095bb3":"code","cf9607f8":"code","80787cd6":"code","f46697e3":"code","32cb06fc":"code","9bf20821":"code","fca409ae":"code","4cb8982d":"code","b7deca4a":"code","8ade4df2":"code","1d66c71c":"code","e900bddb":"code","f82f143c":"code","1f056e86":"code","a0606891":"code","51d6b011":"code","18a97ec2":"code","0dc253b7":"code","3212ffe3":"code","d9fb4f10":"code","b119da68":"code","c8327a75":"code","5e63bb1c":"code","51a18fdf":"code","8ab87b7d":"code","0d2e84fb":"code","8db3de77":"code","8aac8f25":"code","2878b14c":"code","adf39331":"code","9bbf4895":"code","f0d759e5":"code","fa704836":"code","f5f3f660":"code","bbf28ce1":"code","5bbc39c8":"code","8dd24769":"markdown","7f325b59":"markdown","a7e0e786":"markdown"},"source":{"7159074c":"import pandas as pd\ndf= pd.read_csv('..\/input\/covid19-case-surveillance-public-use-dataset\/COVID-19_Case_Surveillance_Public_Use_Data.csv')","a5169044":"df.head()","2c97ba79":"new = df['Race and ethnicity (combined)'].str.split(\",\",n=1,expand=True)","77895481":"df['Race']=new[0]\ndf['Ethnicity']=new[1]","68bb1301":"df.drop(columns='Race and ethnicity (combined)',inplace=True)","630b1bcc":"df","16271270":"df.shape","4140e923":"df.isnull().sum()","4c48fe43":"df=df.drop(['pos_spec_dt','onset_dt','Ethnicity'],axis=1)","18f007a3":"df=df.dropna()","fd286d42":"df","d04ff7f0":"df.shape","4719d623":"df.groupby(['age_group']).count()","855c9150":"df.describe().T","05bc3db4":"df['medcond_yn'].value_counts().plot.pie(autopct=\"%1.1f%%\")","853e50c7":"df['death_yn'].value_counts().plot.pie(autopct=\"%1.1f%%\")","74d08f6d":"df['hosp_yn'].value_counts().plot.pie(autopct=\"%1.1f%%\")","e1b2819e":"df['icu_yn'].value_counts().plot.pie(autopct=\"%1.1f%%\")","0c1ca3a9":"df['current_status'].value_counts().plot.pie(autopct=\"%1.1f%%\")","1b0b1363":"df['Race'].value_counts().plot.pie(autopct=\"%1.1f%%\")","28061aa5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(10,6))\nsns.countplot(y=\"current_status\",hue ='sex',data=df)","70a7243f":"plt.figure(figsize=(10,6))\nsns.countplot(y=\"medcond_yn\",hue ='sex',data=df)","6c7c3d66":"plt.figure(figsize=(10,6))\nsns.countplot(y=\"death_yn\",hue ='sex',data=df)","0b0e9da6":"plt.figure(figsize=(10,6))\nsns.countplot(y=\"age_group\",data=df)","92c32c68":"plt.figure(figsize=(10,8))\nsns.countplot(y=\"age_group\",hue ='sex',data=df)","bcb83c22":"df['age_group'].value_counts()","9a095bb3":"data=df.copy()","cf9607f8":"data['sex'].value_counts()","80787cd6":"data.info()","f46697e3":"data.drop(['cdc_report_dt'],axis=1,inplace=True)","32cb06fc":"data","9bf20821":"y=data['death_yn']","fca409ae":"X=data.drop(['death_yn'],axis=1)","4cb8982d":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler","b7deca4a":"# Encode Label\nencoder=LabelEncoder()\nencoded_y=encoder.fit_transform(y)","8ade4df2":"X['current_status']=encoder.fit_transform(X['current_status'])\nX['sex']=encoder.fit_transform(X['sex'])\nX['age_group']=encoder.fit_transform(X['age_group'])\nX['hosp_yn']=encoder.fit_transform(X['hosp_yn'])\nX['icu_yn']=encoder.fit_transform(X['icu_yn'])\nX['medcond_yn']=encoder.fit_transform(X['medcond_yn'])\nX['Race']=encoder.fit_transform(X['Race'])","1d66c71c":"# Standardizing\nscaler=StandardScaler()\nX=scaler.fit_transform(X)","e900bddb":"# Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,encoded_y,test_size=0.2)","f82f143c":"# Create Model\nmodel=Sequential()\n\n# Input layer Layer\nmodel.add(Dense(32,activation='relu',input_dim=7))\n\n# Hidden Layer\nmodel.add(Dense(16,activation='relu'))\n\n# Outout Layer\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","1f056e86":"# Fit model\nmodel.fit(X_train,y_train,batch_size=20,epochs=5)","a0606891":"data","51d6b011":"data.groupby('sex').count()","18a97ec2":"x=data","0dc253b7":"x","3212ffe3":"import numpy as np\nx=x.replace(to_replace =\"Missing\", value =np.nan) ","d9fb4f10":"x=x.replace(to_replace =\"Unknown\", value =np.nan) ","b119da68":"x=x.dropna()","c8327a75":"x","5e63bb1c":"tg=x['death_yn']","51a18fdf":"x=x.drop('death_yn',axis=1)","8ab87b7d":"# Encode Label\nencoder=LabelEncoder()\nencoded_tg=encoder.fit_transform(tg)","0d2e84fb":"x['current_status']=encoder.fit_transform(x['current_status'])\nx['sex']=encoder.fit_transform(x['sex'])\nx['age_group']=encoder.fit_transform(x['age_group'])\nx['hosp_yn']=encoder.fit_transform(x['hosp_yn'])\nx['icu_yn']=encoder.fit_transform(x['icu_yn'])\nx['medcond_yn']=encoder.fit_transform(x['medcond_yn'])\nx['Race']=encoder.fit_transform(x['Race'])","8db3de77":"# Standardizing\nscaler=StandardScaler()\nX=scaler.fit_transform(X)","8aac8f25":"# Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(x,encoded_tg,test_size=0.2)","2878b14c":"# Create Model\nmodel_2=Sequential()\n\n# Input layer Layer\nmodel_2.add(Dense(128,activation='relu',input_dim=7))\n\n# Hidden Layer\nmodel_2.add(Dense(64,activation='relu'))\n\n# Hidden Layer\nmodel_2.add(Dense(32,activation='relu'))\n\n# Hidden Layer\nmodel_2.add(Dense(16,activation='relu'))\n\n# Hidden Layer\nmodel_2.add(Dense(8,activation='relu'))\n\n# Outout Layer\nmodel_2.add(Dense(1,activation='sigmoid'))\n\nmodel_2.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","adf39331":"# Fit model\nmodel_2.fit(X_train,y_train,batch_size=10,epochs=5)","9bbf4895":"eval_model=model.evaluate(X_train,y_train)","f0d759e5":"eval_model","fa704836":"data=data.replace(to_replace =\"Missing\", value =np.nan)\ndata=data.replace(to_replace =\"Unknown\", value =np.nan)\ndata=data.dropna()\ndata","f5f3f660":"!pip install pycaret","bbf28ce1":"from pycaret.classification import *\nclassification=setup(data=data,target='death_yn',train_size=0.8)","5bbc39c8":"compare=compare_models()","8dd24769":"## Pycaret","7f325b59":"### Remove noise ","a7e0e786":"## Data Preparation"}}