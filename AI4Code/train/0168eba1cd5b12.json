{"cell_type":{"22b5f402":"code","b36a94db":"code","d2b4360e":"code","def2d7da":"code","8b54b6b6":"code","3e0c5b9e":"code","01bcc0d8":"code","af8038c6":"code","dbe1e70d":"code","f70f8be2":"code","9b2b3a11":"code","5e2c93a7":"code","1152a070":"code","1bf5a8ae":"code","0b4bd11e":"code","df376056":"code","f42d26dd":"code","d9fdf3e1":"code","4024ba7f":"code","5d5d6ba7":"code","51f54979":"code","9da5b172":"code","6aadd7a8":"code","83b0c643":"code","74d505cc":"code","4bc86a25":"code","65d1e8a3":"code","a34e9870":"code","09337097":"code","b7f5d293":"code","cab6a369":"code","f56d9cd2":"code","102c1732":"code","da7abe9d":"code","be9b2e51":"code","cd69e1f0":"code","f475346d":"code","6fb3727e":"markdown","5f3b6b3f":"markdown","e7b80ad5":"markdown","e8dcc2ee":"markdown","44f27ea5":"markdown","d841ef1e":"markdown"},"source":{"22b5f402":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b36a94db":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder,OrdinalEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\nimport warnings\nwarnings.filterwarnings('ignore')","d2b4360e":"df = pd.read_csv('\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')\ndf.head()","def2d7da":"df.info()","8b54b6b6":"df.isnull().sum()","3e0c5b9e":"df.columns","01bcc0d8":"plt.figure(figsize=(20,5))\nplt.subplot(1,3,1)\nsns.boxplot(df['Married\/Single'],df['Income'])\n\nplt.subplot(1,3,2)\nsns.countplot(df['Car_Ownership'])\n\nh_counts = df['House_Ownership'].value_counts()\nplt.subplot(1,3,3)\nplt.pie(h_counts.values,labels=h_counts.index,labeldistance=1.1,wedgeprops={'edgecolor':'red','linewidth':2})\nplt.show()","af8038c6":"df['STATE'].value_counts()","dbe1e70d":"le = LabelEncoder()\ndf['Married\/Single'] = le.fit_transform(df['Married\/Single']) ","f70f8be2":"order_label = {'rented':1,'owned':2,'norent_noown':3}\ndf['House_Ownership'] = df['House_Ownership'].map(order_label)","9b2b3a11":"df['Car_Ownership'] = le.fit_transform(df['Car_Ownership']) ","5e2c93a7":"df.info()","1152a070":"x = df.iloc[:,[1,2,3,4,5,6,10,11]]\ny = df.iloc[:,[-1]]","1bf5a8ae":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=55)","0b4bd11e":"print(\"X_train shape =\",x_train.shape)\nprint(\"X_test shape =\",x_test.shape)\nprint(\"Y_train shape =\",y_train.shape)\nprint(\"Y_test shape =\",y_test.shape)","df376056":"sc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","f42d26dd":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()","d9fdf3e1":"lr.fit(x_train,y_train)\ny_pred_lr = lr.predict(x_test)","4024ba7f":"print(confusion_matrix(y_test,y_pred_lr))\nprint(accuracy_score(y_test,y_pred_lr).round(2)*100)","5d5d6ba7":"from sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier(criterion='entropy',random_state=53)","51f54979":"dtc.fit(x_train,y_train)","9da5b172":"y_pred_dtc = dtc.predict(x_test)","6aadd7a8":"print(confusion_matrix(y_test,y_pred_dtc))\nprint(accuracy_score(y_test,y_pred_dtc).round(2)*100)","83b0c643":"from sklearn.ensemble import RandomForestClassifier\nrfr = RandomForestClassifier(n_estimators=100,criterion='gini',random_state=53)","74d505cc":"rfr.fit(x_train,y_train)","4bc86a25":"y_pred_rfr = rfr.predict(x_test)","65d1e8a3":"print(confusion_matrix(y_test,y_pred_rfr))\nprint(accuracy_score(y_test,y_pred_rfr).round(2)*100)","a34e9870":"from sklearn.neighbors import KNeighborsClassifier","09337097":"knc = KNeighborsClassifier(n_neighbors=5)","b7f5d293":"knc.fit(x_train,y_train)","cab6a369":"y_pred_knc = knc.predict(x_test)","f56d9cd2":"print(confusion_matrix(y_test,y_pred_knc))\nprint(accuracy_score(y_test,y_pred_knc).round(2)*100)","102c1732":"from sklearn.naive_bayes import GaussianNB","da7abe9d":"nb = GaussianNB()\nnb.fit(x_train,y_train)","be9b2e51":"y_pred_nb = nb.predict(x_test)","cd69e1f0":"print(confusion_matrix(y_test,y_pred_nb))\nprint(accuracy_score(y_test,y_pred_nb).round(2)*100)","f475346d":"print(\"Logistic regression:- \",accuracy_score(y_test,y_pred_lr).round(2)*100)\nprint(\"Decision Tree Classifier:- \",accuracy_score(y_test,y_pred_dtc).round(2)*100)\nprint(\"Random Forest Classifier:- \",accuracy_score(y_test,y_pred_rfr).round(2)*100)\nprint(\"K Nearest Neighbors Classifier:- \",accuracy_score(y_test,y_pred_knc).round(2)*100)\nprint(\"Naive Bayes Classifier:- \",accuracy_score(y_test,y_pred_nb).round(2)*100)","6fb3727e":"# Decision Tree Classifier","5f3b6b3f":"# Naive Bayes Classifier","e7b80ad5":"## Prediction Accuracy","e8dcc2ee":"# Logistic Regression","44f27ea5":"# K Nearest Neighbors Classifier","d841ef1e":"# Random Forest Classifier"}}