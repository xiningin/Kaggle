{"cell_type":{"a26dd9ff":"code","0ecf67ae":"code","5256d9e9":"code","112a4a55":"code","7fec608d":"code","5bc133dd":"code","743ba41f":"code","9515004b":"code","9663e99d":"code","80bd26ab":"code","184d640c":"code","e547f867":"code","bf208dd3":"code","654290b8":"code","faf71431":"code","8279100e":"code","17c8aa3a":"code","a8c7ca83":"code","7b1303ae":"code","eb7016fc":"code","49299eb5":"code","9ec7df36":"code","397b1bc9":"code","c5ecd7a5":"code","317ef38f":"code","a6a9ea6c":"code","cee8cfd5":"code","ae4d19c5":"code","1028fc4b":"code","79da8959":"code","dfc35540":"code","efdb818c":"code","2847e911":"code","54d59013":"code","cbc90ef8":"markdown","5f144192":"markdown","673cbe8a":"markdown","d432aabe":"markdown","956415db":"markdown","20b3b7c4":"markdown","8032ed90":"markdown","db3dc15a":"markdown","71d20ab5":"markdown","cfaea7ec":"markdown","b5ded1c6":"markdown","08776b28":"markdown","eb4f8985":"markdown","e06098ac":"markdown","4024dafe":"markdown","3d0467b3":"markdown","eb01a0af":"markdown","ed15e468":"markdown","59fb8333":"markdown","8699157b":"markdown","4f20f88f":"markdown"},"source":{"a26dd9ff":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nimport pickle\n\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","0ecf67ae":"data = pd.read_csv('..\/input\/corona-symptoms-datasets\/corona_tested_individuals_ver_006.english.csv')","5256d9e9":"data.head()","112a4a55":"data.shape","7fec608d":"data.columns","5bc133dd":"# drop test-date column\ndata.drop('test_date',axis=1,inplace=True)","743ba41f":"# drop all values of each column which are not digit\ndata = data[data['cough'].apply(lambda x: str(x).isdigit())]\ndata = data[data['fever'].apply(lambda x: str(x).isdigit())]\ndata = data[data['sore_throat'].apply(lambda x: str(x).isdigit())]\ndata = data[data['shortness_of_breath'].apply(lambda x: str(x).isdigit())]\ndata = data[data['head_ache'].apply(lambda x: str(x).isdigit())]\n\n# final_data is our main data\nfinal_data = data","9515004b":"final_data.shape","9663e99d":"display(\"Data to deal\", final_data.head())","80bd26ab":"#size of Data\ndisplay(\"Shape of dataset\")\nprint(\"Rows:\",final_data.shape[0],\"\\nColumns:\",final_data.shape[1])","184d640c":"#checking for the Null values\ndisplay('NULL Values', final_data.isnull().sum())","e547f867":"display(\"Description\",final_data.describe())","bf208dd3":"final_data.info()","654290b8":"#checking Distrubution of Data\nfor i in final_data.columns:\n    print(\"\\nColumn Name:\",i,5*\":\",final_data[i].unique(),5*\":\",\"Unique Count\",len(final_data[i].unique()))","faf71431":"# convert data types of column stated in convert_dict\nconvert_dict = {'cough': int, \n                'fever': int, \n                'sore_throat': int, \n                'shortness_of_breath': int, \n                'head_ache': int}\nfinal_data = final_data.astype(convert_dict)","8279100e":"for i in final_data.columns:\n    print(\"\\nColumn Name:\",i,5*\":\",final_data[i].unique(),5*\":\",\"Unique Count\",len(final_data[i].unique()))","17c8aa3a":"# frequency plot of corona_result\nsns.countplot(final_data['corona_result'])","a8c7ca83":"# target(corona_result) v\/s feature plots\nsns.barplot(final_data['fever'], final_data['corona_result'])","7b1303ae":"sns.barplot(final_data['shortness_of_breath'], final_data['corona_result'])","eb7016fc":"# label encoding on columns having more than 1 value\nle = preprocessing.LabelEncoder()\nfinal_data['corona_result'] = le.fit_transform(final_data['corona_result'])\nfinal_data['gender'] = le.fit_transform(final_data['gender'])\nfinal_data['age_60_and_above'] = le.fit_transform(final_data['age_60_and_above'])\nfinal_data['test_indication'] = le.fit_transform(final_data['test_indication'])","49299eb5":"final_data.head()","9ec7df36":"for i in final_data.columns:\n    print(\"\\nColumn Name:\",i,\"-->\",final_data[i].unique(),\"-->Unique Count\",len(final_data[i].unique()))","397b1bc9":"final_data.head()","c5ecd7a5":"# now target is y and features in X\ny = final_data['corona_result']\nX = final_data.drop(['corona_result'], axis = 1)","317ef38f":"X.head()","a6a9ea6c":"# Splitting the data to train and test\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)","cee8cfd5":"# this will be used to plot accuracy of different alogrithms\nscores_dict = {}","ae4d19c5":"classifier = KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 )  \nclassifier.fit(X_train, y_train)","1028fc4b":"pred = classifier.predict(X_test) \naccuracy_knn = accuracy_score(y_test, pred)\nprint(\"KNN accuracy_score: \", accuracy_knn)\nscores_dict['K-NearestNeighbors'] = accuracy_knn * 100","79da8959":"RandomForest = RandomForestClassifier()\nRandomForest = RandomForest.fit(X_train, y_train)\npredRandomForest = RandomForest.predict(X_test)\naccuracy_rf = accuracy_score(y_test, predRandomForest)\nprint('RandomForest accuracy_score: ', accuracy_rf)\nscores_dict['RandomForestClassifier'] = accuracy_rf * 100","dfc35540":"sns.distplot(y_test-pred)","efdb818c":"DecisionTree = DecisionTreeClassifier()\nDecisionTree = DecisionTree.fit(X_train, y_train)\npred = DecisionTree.predict(X_test)\naccuracy_dt = accuracy_score(y_test, pred)\nprint('DecisionTree accuracy_score: ', accuracy_dt)\nscores_dict['DecisionTreeClassifier'] = accuracy_dt * 100","2847e911":"scores_dict","54d59013":"with sns.color_palette('muted'):\n  algo_name = list(scores_dict.keys())\n  scoress = list(scores_dict.values())\n\n  sns.set(rc={'figure.figsize':(9,5)})\n  plt.xlabel(\"Algorithms\")\n  plt.ylabel(\"Accuracy score\")\n\n  sns.barplot(algo_name,scoress)","cbc90ef8":"### Decision Tree Classifier","5f144192":"Spiltting is a very crucial step if you want to test your model rightaway. Using what we have as in the datset inself, we can compare if the resulted predicted value is close to the value already present in the dataset. \n<\/br>\nThus we can see if our model works in short...","673cbe8a":"### EDA","d432aabe":"# Loading Raw Data and converting it to a cleaned data","956415db":"### Random Forest Classifier","20b3b7c4":"Random forest, like its name implies, consists of a large number of individual decision trees that operate as an ensemble. Each individual tree in the random forest spits out a class prediction and the class with the most votes becomes our model\u2019s prediction.","8032ed90":"Thus we get to knew that there is no null value, so the data is clean...","db3dc15a":"Getting to know Data","71d20ab5":"### Simple Model for Prdicting the COVID-19 test result or possibility of COVID infection with the given data.","cfaea7ec":"We can see now the shape is 278594 rows to 9 columns.\n<br><\/br>\nLet's see what other patterns we can get from the dataset, Lets perform EDA... ","b5ded1c6":"We will be using a dataset of simple covid-19 based attributes. The dataset is simple with alphanumeric values..\n<br><\/br>\nLet's start with importing the libraries","08776b28":"Here we can see that fever contributes to fair amount of possibility of postive result of COVID 19 giving the insight that it is one of the major factor.","eb4f8985":"### K-Nearest Neighbors","e06098ac":"## Model","4024dafe":"The results show that its not that prominent that the result is positive all the time, rather insterestingly its negetive maximum time.","3d0467b3":"**Preproccesing** the dataset as some of them are not in numerical value and eventually also we need numerical value for tarining the model...","eb01a0af":"Which is almost similarly high, as we can see...","ed15e468":"Here, test data is not crucial for prediction, so we remove the columns which don't contribute to the prediction model anyhow...\nSo, here we remove the date based column which was just the date of testing.\n","59fb8333":"Shortness of breathing provides a strong response here. We can see that the positiveness of the test is majorly affected by the attribute of breathlessness","8699157b":"Here we can see the table is well numerical placed...","4f20f88f":"Let's compare"}}