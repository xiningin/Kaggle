{"cell_type":{"45ec1ffa":"code","73b57bc6":"code","77532ac8":"code","cd9d5d8c":"code","e9e9e669":"code","48dec01a":"code","ca7f68cf":"code","731d84c9":"code","e5db30d8":"code","522aae34":"code","47190ebd":"code","2118d5ca":"code","64b2ab8e":"code","a868e859":"code","29103c3d":"code","31a0ea63":"code","d96ec69f":"code","24a85416":"code","b1c844c0":"code","84d073d2":"code","1ac437bc":"code","1ccd3772":"code","54356a81":"code","24aa0738":"code","4b126d97":"code","763050d3":"code","5ea5b43f":"code","0b98f11d":"code","20d1f881":"code","fdcfb500":"code","cdefe423":"code","e1523470":"code","030292f5":"code","8fcbfc50":"code","7c9156a1":"code","db458ff5":"code","cfc65c47":"code","45f2d77c":"code","ba6e7991":"code","70fc2701":"code","fe4dec59":"code","01917025":"code","fdc67b30":"code","d8cbeddb":"code","a5c8da24":"code","57fd7f08":"code","09d1a997":"code","620257fc":"code","181f5806":"code","9ee0c635":"code","9089a029":"markdown","126a23e3":"markdown","e3ac237c":"markdown","579617c6":"markdown","b246f9d8":"markdown","26757f1d":"markdown","26eaaa68":"markdown","832cbc58":"markdown","923461ce":"markdown","027f4235":"markdown","0f8169d6":"markdown","b4d880b3":"markdown","83c66bcc":"markdown","11935a58":"markdown","8d2c4ca1":"markdown","73bf7bab":"markdown","16934dd4":"markdown"},"source":{"45ec1ffa":"#Import all required libraries for reading data, analysing and visualizing data\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder","73b57bc6":"#Read the training & test data\nliver_df = pd.read_csv('..\/input\/indian_liver_patient.csv')","77532ac8":"liver_df.head()","cd9d5d8c":"liver_df.info()","e9e9e669":"#Describe gives statistical information about NUMERICAL columns in the dataset\nliver_df.describe(include='all')\n#We can see that there are missing values for Albumin_and_Globulin_Ratio as only 579 entries have valid values indicating 4 missing values.\n#Gender has only 2 values - Male\/Female","48dec01a":"#Which features are available in the dataset?\nliver_df.columns","ca7f68cf":"#Check for any null values\nliver_df.isnull().sum()","731d84c9":"sns.countplot(data=liver_df, x = 'Dataset', label='Count')\n\nLD, NLD = liver_df['Dataset'].value_counts()\nprint('Number of patients diagnosed with liver disease: ',LD)\nprint('Number of patients not diagnosed with liver disease: ',NLD)","e5db30d8":"sns.countplot(data=liver_df, x = 'Gender', label='Count')\n\nM, F = liver_df['Gender'].value_counts()\nprint('Number of patients that are male: ',M)\nprint('Number of patients that are female: ',F)","522aae34":"sns.factorplot(x=\"Age\", y=\"Gender\", hue=\"Dataset\", data=liver_df);","47190ebd":"liver_df[['Gender', 'Dataset','Age']].groupby(['Dataset','Gender'], as_index=False).count().sort_values(by='Dataset', ascending=False)","2118d5ca":"liver_df[['Gender', 'Dataset','Age']].groupby(['Dataset','Gender'], as_index=False).mean().sort_values(by='Dataset', ascending=False)","64b2ab8e":"g = sns.FacetGrid(liver_df, col=\"Dataset\", row=\"Gender\", margin_titles=True)\ng.map(plt.hist, \"Age\", color=\"red\")\nplt.subplots_adjust(top=0.9)\ng.fig.suptitle('Disease by Gender and Age');","a868e859":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Direct_Bilirubin\", \"Total_Bilirubin\", edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","29103c3d":"sns.jointplot(\"Total_Bilirubin\", \"Direct_Bilirubin\", data=liver_df, kind=\"reg\")","31a0ea63":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Aspartate_Aminotransferase\", \"Alamine_Aminotransferase\",  edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","d96ec69f":"sns.jointplot(\"Aspartate_Aminotransferase\", \"Alamine_Aminotransferase\", data=liver_df, kind=\"reg\")","24a85416":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Alkaline_Phosphotase\", \"Alamine_Aminotransferase\",  edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","b1c844c0":"sns.jointplot(\"Alkaline_Phosphotase\", \"Alamine_Aminotransferase\", data=liver_df, kind=\"reg\")","84d073d2":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Total_Protiens\", \"Albumin\",  edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","1ac437bc":"sns.jointplot(\"Total_Protiens\", \"Albumin\", data=liver_df, kind=\"reg\")","1ccd3772":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Albumin\", \"Albumin_and_Globulin_Ratio\",  edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","54356a81":"sns.jointplot(\"Albumin_and_Globulin_Ratio\", \"Albumin\", data=liver_df, kind=\"reg\")","24aa0738":"g = sns.FacetGrid(liver_df, col=\"Gender\", row=\"Dataset\", margin_titles=True)\ng.map(plt.scatter,\"Albumin_and_Globulin_Ratio\", \"Total_Protiens\",  edgecolor=\"w\")\nplt.subplots_adjust(top=0.9)","4b126d97":"liver_df.head(3)","763050d3":"pd.get_dummies(liver_df['Gender'], prefix = 'Gender').head()","5ea5b43f":"liver_df = pd.concat([liver_df,pd.get_dummies(liver_df['Gender'], prefix = 'Gender')], axis=1)","0b98f11d":"liver_df.head()","20d1f881":"liver_df.describe()","fdcfb500":"liver_df[liver_df['Albumin_and_Globulin_Ratio'].isnull()]","cdefe423":"liver_df[\"Albumin_and_Globulin_Ratio\"] = liver_df.Albumin_and_Globulin_Ratio.fillna(liver_df['Albumin_and_Globulin_Ratio'].mean())","e1523470":"#liver_df[liver_df['Albumin_and_Globulin_Ratio'] == 0.9470639032815201]","030292f5":"# The input variables\/features are all the inputs except Dataset. The prediction or label is 'Dataset' that determines whether the patient has liver disease or not. \nX = liver_df.drop(['Gender','Dataset'], axis=1)\nX.head(3)","8fcbfc50":"y = liver_df['Dataset'] # 1 for liver disease; 2 for no liver disease","7c9156a1":"# Correlation\nliver_corr = X.corr()","db458ff5":"liver_corr","cfc65c47":"plt.figure(figsize=(30, 30))\nsns.heatmap(liver_corr, cbar = True,  square = True, annot=True, fmt= '.2f',annot_kws={'size': 15},\n           cmap= 'coolwarm')\nplt.title('Correlation between features');","45f2d77c":"#The above correlation also indicates the following correlation\n# Total_Protiens & Albumin\n# Alamine_Aminotransferase & Aspartate_Aminotransferase\n# Direct_Bilirubin & Total_Bilirubin\n# There is some correlation between Albumin_and_Globulin_Ratio and Albumin. But its not as high as Total_Protiens & Albumin","ba6e7991":"# Importing modules\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn import linear_model\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, BaggingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier","70fc2701":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)\nprint (X_train.shape)\nprint (y_train.shape)\nprint (X_test.shape)\nprint (y_test.shape)","fe4dec59":"#2) Logistic Regression\n# Create logistic regression object\nlogreg = LogisticRegression()\n# Train the model using the training sets and check score\nlogreg.fit(X_train, y_train)\n#Predict Output\nlog_predicted= logreg.predict(X_test)\n\nlogreg_score = round(logreg.score(X_train, y_train) * 100, 2)\nlogreg_score_test = round(logreg.score(X_test, y_test) * 100, 2)\n#Equation coefficient and Intercept\nprint('Logistic Regression Training Score: \\n', logreg_score)\nprint('Logistic Regression Test Score: \\n', logreg_score_test)\nprint('Coefficient: \\n', logreg.coef_)\nprint('Intercept: \\n', logreg.intercept_)\nprint('Accuracy: \\n', accuracy_score(y_test,log_predicted))\nprint('Confusion Matrix: \\n', confusion_matrix(y_test,log_predicted))\nprint('Classification Report: \\n', classification_report(y_test,log_predicted))\n\nsns.heatmap(confusion_matrix(y_test,log_predicted),annot=True,fmt=\"d\")\n","01917025":"coeff_df = pd.DataFrame(X.columns)\ncoeff_df.columns = ['Feature']\ncoeff_df[\"Correlation\"] = pd.Series(logreg.coef_[0])\npd.Series(logreg.coef_[0])\n\ncoeff_df.sort_values(by='Correlation', ascending=False)","fdc67b30":"# Gaussian Naive Bayes\n\ngaussian = GaussianNB()\ngaussian.fit(X_train, y_train)\n#Predict Output\ngauss_predicted = gaussian.predict(X_test)\n\ngauss_score = round(gaussian.score(X_train, y_train) * 100, 2)\ngauss_score_test = round(gaussian.score(X_test, y_test) * 100, 2)\nprint('Gaussian Score: \\n', gauss_score)\nprint('Gaussian Test Score: \\n', gauss_score_test)\nprint('Accuracy: \\n', accuracy_score(y_test, gauss_predicted))\nprint(confusion_matrix(y_test,gauss_predicted))\nprint(classification_report(y_test,gauss_predicted))\n\nsns.heatmap(confusion_matrix(y_test,gauss_predicted),annot=True,fmt=\"d\")","d8cbeddb":"# Random Forest\n\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\n#Predict Output\nrf_predicted = random_forest.predict(X_test)\n\nrandom_forest_score = round(random_forest.score(X_train, y_train) * 100, 2)\nrandom_forest_score_test = round(random_forest.score(X_test, y_test) * 100, 2)\nprint('Random Forest Score: \\n', random_forest_score)\nprint('Random Forest Test Score: \\n', random_forest_score_test)\nprint('Accuracy: \\n', accuracy_score(y_test,rf_predicted))\nprint(confusion_matrix(y_test,rf_predicted))\nprint(classification_report(y_test,rf_predicted))","a5c8da24":"###Model evaluation\n#We can now rank our evaluation of all the models to choose the best one for our problem. \nmodels = pd.DataFrame({\n    'Model': [ 'Logistic Regression', 'Gaussian Naive Bayes','Random Forest'],\n    'Score': [ logreg_score, gauss_score, random_forest_score],\n    'Test Score': [ logreg_score_test, gauss_score_test, random_forest_score_test]})\nmodels.sort_values(by='Test Score', ascending=False)","57fd7f08":"linear = linear_model.LinearRegression()\n# Train the model using the training sets and check score\nlinear.fit(X_train, y_train)\n#Predict Output\nlin_predicted = linear.predict(X_test)\n\nlinear_score = round(linear.score(X_train, y_train) * 100, 2)\nlinear_score_test = round(linear.score(X_test, y_test) * 100, 2)\n#Equation coefficient and Intercept\nprint('Linear Regression Score: \\n', linear_score)\nprint('Linear Regression Test Score: \\n', linear_score_test)\nprint('Coefficient: \\n', linear.coef_)\nprint('Intercept: \\n', linear.intercept_)\n\nfrom sklearn.feature_selection import RFE\nrfe =RFE(linear, n_features_to_select=3)\nrfe.fit(X,y)","09d1a997":"for i in range(len(rfe.ranking_)):\n    if rfe.ranking_[i] == 1:\n        print(X.columns.values[i])","620257fc":"#I'm considering seven important features based on recursive feature elimination\n#finX = liver_df[['Age','Direct_Bilirubin','Total_Protiens','Albumin', 'Gender_Female', 'Gender_Male']]\nfinX = liver_df[['Total_Protiens','Albumin', 'Gender_Male']]\nfinX.head(4)","181f5806":"X_train, X_test, y_train, y_test = train_test_split(finX, y, test_size=0.30, random_state=101)","9ee0c635":"#Logistic Regression\nlogreg = LogisticRegression()\n# Train the model using the training sets and check score\nlogreg.fit(X_train, y_train)\n#Predict Output\nlog_predicted= logreg.predict(X_test)\n\nlogreg_score = round(logreg.score(X_train, y_train) * 100, 2)\nlogreg_score_test = round(logreg.score(X_test, y_test) * 100, 2)\n#Equation coefficient and Intercept\nprint('Logistic Regression Training Score: \\n', logreg_score)\nprint('Logistic Regression Test Score: \\n', logreg_score_test)\nprint('Coefficient: \\n', logreg.coef_)\nprint('Intercept: \\n', logreg.intercept_)\nprint('Accuracy: \\n', accuracy_score(y_test,log_predicted))\nprint('Confusion Matrix: \\n', confusion_matrix(y_test,log_predicted))\nprint('Classification Report: \\n', classification_report(y_test,log_predicted))\n\nsns.heatmap(confusion_matrix(y_test,log_predicted),annot=True,fmt=\"d\")\n","9089a029":"From the above jointplots and scatterplots, we find direct relationship between the following features:  \nDirect_Bilirubin & Total_Bilirubin  \nAspartate_Aminotransferase & Alamine_Aminotransferase  \nTotal_Protiens & Albumin  \nAlbumin_and_Globulin_Ratio & Albumin  \n\nHence, we can very well find that we can omit one of the features. I'm going to keep the follwing features:  \nTotal_Bilirubin  \nAlamine_Aminotransferase  \nTotal_Protiens  \nAlbumin_and_Globulin_Ratio  \nAlbumin  ","126a23e3":"There seems to be direct relationship between Total_Bilirubin and Direct_Bilirubin. We have the possibility of removing one of this feature.","e3ac237c":"Here is the observation from the dataset:   \n1) Only gender is non-numeric veriable. All others are numeric.   \n2) There are 10 features and 1 output - dataset. Value 1 indicates that the patient has liver disease and 0 indicates the patient does not have liver disease.  ","579617c6":"# Analysis and Prediction-Indian Liver Patients.","b246f9d8":"Convert categorical variable \"Gender\" to indicator variables","26757f1d":"The dataset was downloaded from the UCI ML Repository.\n\nHere are the steps I'm going to perform:  \n1) Data Analysis: This is in general looking at the data to figure out whats going on. Inspect the data: Check whether there is any missing data, irrelevant data and do a cleanup.  \n2) Data Visualization:   \n3) Feature selection.  \n4) Search for any trends, relations & correlations.  \n5) Draw an inference and predict whether the patient can be identified to be having liver disease or not  ","26eaaa68":"No linear correlation between Alkaline_Phosphotase and Alamine_Aminotransferase","832cbc58":"# Data Analysis","923461ce":"There is linear relationship between Total_Protiens and Albumin and the gender. We have the possibility of removing one of this feature.","027f4235":"There is linear relationship between Aspartate_Aminotransferase and Alamine_Aminotransferase and the gender. We have the possibility of removing one of this feature.","0f8169d6":"# Observation:","b4d880b3":"Age seems to be a factor for liver disease for both male and female genders","83c66bcc":"# Data Visualization","11935a58":"There is linear relationship between Albumin_and_Globulin_Ratio and Albumin. We have the possibility of removing one of this feature.","8d2c4ca1":"This data set contains 416 liver patient records and 167 non liver patient records collected from North East of Andhra Pradesh, India. The \"Dataset\" column is a class label used to divide groups into liver patient (liver disease) or not (no disease). ","73bf7bab":"# Machine Learning","16934dd4":"The only data that is null is the Albumin_and_Globulin_Ratio - Only 4 rows are null. Lets see whether this is an important feature    "}}