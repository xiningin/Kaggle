{"cell_type":{"c93fdd31":"code","37490910":"code","7942aff3":"code","64798f5d":"code","b63c7dec":"code","4208ee33":"code","ee35b715":"code","941ec06a":"code","6794bc2b":"code","868c3fa2":"code","36955b90":"code","d17f678c":"code","e94a83d9":"code","559fc8e2":"code","e3e73c12":"code","317365c4":"code","1aca5b7d":"code","208903bd":"code","c7d2f003":"code","730f22b8":"code","eafe0d8e":"code","cb222821":"code","721cf623":"code","39424774":"markdown","887d3afe":"markdown","aeedb4bb":"markdown","2196630c":"markdown","29a4d6e8":"markdown","6641623f":"markdown"},"source":{"c93fdd31":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns","37490910":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LogisticRegression","7942aff3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","64798f5d":"filepath = \"\/kaggle\/input\/iris\/Iris.csv\"\ndf = pd.read_csv(filepath)\ndf.head()","b63c7dec":"df.tail()","4208ee33":"df.info()","ee35b715":"df.describe()","941ec06a":"df['Species'].value_counts()","6794bc2b":"sns.catplot(x = 'Species', hue = 'Species', kind = 'count', data = df)","868c3fa2":"plt.bar(df['Species'],df['PetalWidthCm'])","36955b90":"a=plt.subplots(1,1,figsize=(20,8))\ndf     ['Species'].value_counts().plot.pie(explode=[0.1,0.1,0.1],autopct='%1.1F%%',shadow=True,figsize=(15,5))\nplt.title(\"Iris Species %\")\nplt.show()","d17f678c":"fig=sns.jointplot(x='SepalLengthCm',y='SepalWidthCm',data=df,color='maroon')\npass","e94a83d9":"fig=sns.jointplot(x='SepalLengthCm',y='SepalWidthCm',kind='hex',data=df,color='orange')","559fc8e2":"#scatterplot\ncolors = ['red','yellow','blue']\nspecies = ['Iris-virginica','Iris-versicolor','Iris-setosa' ]","e3e73c12":"for i in range(3):\n    x=df[df['Species'] == species[i]]\n    plt.scatter(x['SepalLengthCm'], x['SepalWidthCm'], c= colors[i], label=species[i])\nplt.xlabel(\"Sepal Length\")\nplt.ylabel(\"Sepal Width\")\nplt.legend()","317365c4":"#boxplot\nplt.figure(figsize=(18,10))\nplt.subplot(2,2,1)\nsns.boxplot(x='Species',y='PetalLengthCm',data=df)\nplt.subplot(2,2,2)\nsns.boxplot(x='Species',y='PetalWidthCm',data=df)\nplt.subplot(2,2,3)\nsns.boxplot(x='Species',y='SepalLengthCm',data=df)\nplt.subplot(2,2,4)\nsns.boxplot(x='Species',y='SepalWidthCm',data=df)\nplt.show()","1aca5b7d":"# violinplot depicting different parameter\nplt.figure(figsize=(28,15))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=df)","208903bd":"df.corr()","c7d2f003":"corr=df.corr()\nfig, ax = plt.subplots(figsize=(5,4))\nsns.heatmap(corr, annot=True, ax=ax, cmap='coolwarm')","730f22b8":"le=LabelEncoder()\ndf['Species']= le.fit_transform(df['Species'])\ndf.head()","eafe0d8e":"X=df.drop(columns=['Species'])\nY=df['Species']\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30)","cb222821":"lr=LogisticRegression( solver=\"liblinear\")","721cf623":"lr.fit(X_train, y_train)\ny_pred = lr.predict(X_test)\nacc_lr = lr.score(X_test, y_test)\nprint(\"The accuracy for Logistic Regression is:\", acc_lr * 100, \"%\")","39424774":"## <font color='blue'> Logistic Regression <\/font>","887d3afe":"![download.jpg](attachment:650dc053-7ce4-453e-90ff-ee31928d78de.jpg)","aeedb4bb":"## <font color=blue>**Coorelation Matrix**<\/font>","2196630c":"## <font color=blue>**Import Modules**<\/font>","29a4d6e8":"I'll Update it","6641623f":"## <font color=blue>**Importing Data using pandas & read_csv**<\/font>"}}