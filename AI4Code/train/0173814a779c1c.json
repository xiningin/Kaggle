{"cell_type":{"41ab4650":"code","c81fe648":"code","621e1f6d":"code","42815ca2":"code","2b8881c4":"code","5b5a256b":"code","7068f029":"code","58ab2ee8":"code","58fe8b78":"code","ef622dfd":"code","d38609fd":"code","5c3b7adc":"code","cecb1a80":"code","41d9f074":"code","01aea02f":"code","8a6a2802":"code","15dde2eb":"code","b70e6d01":"code","c61573f2":"code","0b86329e":"code","07746c97":"code","328fba7d":"code","08853c68":"code","62129f95":"code","b39f28c0":"code","c74ae525":"code","44e3fdde":"code","68b939c0":"code","b52ceda9":"code","940ac393":"code","62375b60":"code","fc5a4859":"markdown","0ef63d28":"markdown","ab7acfad":"markdown","a37cb04d":"markdown","e06cb96f":"markdown","798b69f6":"markdown","8ac75e90":"markdown","86c77a95":"markdown","1731e04c":"markdown","5134ef53":"markdown","ea73106b":"markdown","d6940c6b":"markdown","64798f6c":"markdown","dbdc1969":"markdown","5bd724e8":"markdown","35472a58":"markdown","a646e5ef":"markdown","3acc1612":"markdown","4ef57907":"markdown","35eba098":"markdown","a3b1a3df":"markdown","120b9961":"markdown","faadff80":"markdown","29dfc2b6":"markdown","de60157e":"markdown","6f533ec1":"markdown"},"source":{"41ab4650":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c81fe648":"data = pd.read_csv('..\/input\/data-police-shootings\/fatal-police-shootings-data.csv')\n\n# Exploring the dataset\ndata.info()","621e1f6d":"cardinality = {}\nfor col in data:\n    cardinality[col] = data[col].nunique()\n\ncardinality","42815ca2":"missing = data.isna().sum() * 100 \/ data.shape[0]\n\nmissing","2b8881c4":"data.armed.unique()","5b5a256b":"data.armed = data.armed.fillna('undetermined')\ndata['arms'] = data['armed']","7068f029":"lethal = ['gun', 'hatchet', 'machete', 'guns and explosives', 'gun and knife', 'ax', 'hand torch', 'chain saw', 'hatchet and gun', 'machete and gun', 'chainsaw', 'gun and sword', 'gun and car', 'incendiary device', 'gun and vehicle', 'vehicle and gun', 'grenade', 'air pistol', 'vehicle and machete']\nsemilethal = ['nail gun', 'knife', 'shovel', 'hammer', 'sword', 'lawn mower blade', 'cordless drill', 'crossbow', 'Taser', 'metal object', 'metal hand tool', 'metal stick', 'sharp object', 'meat cleaver', 'bean-bag gun', 'straight edge razor', 'baton', 'spear', 'bayonet', 'crowbar', 'tire iron', 'pole and knife', 'pellet gun', 'BB gun', 'samurai sword', 'bow and arrow', 'wrench', 'BB gun and vehicle', 'Airsoft pistol', 'baseball bat and knife', 'ice pick', 'car, knife and mace']\nnonlethal = ['toy weapon', 'box cutter', 'screwdriver', 'flagpole', 'metal pole', 'pick-axe', 'metal rake', 'metal pipe', 'blunt object', 'carjack', 'chain', \"contractor's level\", 'stapler', 'beer bottle', 'baseball bat and fireplace poker', 'brick', 'baseball bat', 'garden tool', 'scissors', 'pole', 'flashlight', 'vehicle', 'chair', 'pitchfork', 'rock', 'piece of wood', 'pipe', 'glass shard', 'motorcycle', 'pepper spray', 'oar', 'air conditioner', 'baseball bat and bottle', 'fireworks', 'pen', 'walking stick', 'barstool', 'wasp spray']\nunarmed = ['unarmed']\nunknown = ['claimed to be armed', 'unknown weapon']\nundetermined = ['undetermined']","58ab2ee8":"for i in data.armed.unique():\n    if i in lethal:\n        data.armed = data.armed.replace(i, 'Lethal')\n    elif i in semilethal:\n        data.armed = data.armed.replace(i, 'Semi-Lethal')\n    elif i in nonlethal:\n        data.armed = data.armed.replace(i, 'Non-Lethal')\n    elif i in unarmed:\n        data.armed = data.armed.replace(i, 'Unarmed')\n    elif i in unknown:\n        data.armed = data.armed.replace(i, 'Unknown')\n    elif i in undetermined:\n        data.armed = data.armed.replace(i, 'Undetermined')","58fe8b78":"data.age.describe()","ef622dfd":"from sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(missing_values = np.nan, strategy = 'median')\n\ndata.age = imputer.fit_transform(data[['age']])\n\ndata.age.value_counts().sum()","d38609fd":"data.race.value_counts()","5c3b7adc":"data.race = data.race.fillna('Unknown')\n\ndata.race = data.race.replace('W', 'Caucasian').replace('B', 'African-American').replace('A', 'Asian').replace('N', 'Native-American').replace('H', 'Hispanic').replace('O', 'Other')\n\ndata.race.value_counts()","cecb1a80":"data.flee.value_counts()","41d9f074":"data.flee = data.flee.fillna('Not fleeing')","01aea02f":"data.threat_level.unique()","8a6a2802":"data.threat_level = data.threat_level.replace('attack', 'High').replace('other', 'Semi\/Low').replace('undetermined', 'Undetermined')","15dde2eb":"data.gender = data.gender.replace('M', 'Male').replace('F', 'Female')\ndata.gender.value_counts()","b70e6d01":"genderless = data[data.gender.isnull()]\n\ngenderless","c61573f2":"data = data.dropna(axis = 0)\n\ndata.info()","0b86329e":"data['year'] = pd.to_datetime(data['date']).dt.year\ndata['month'] = pd.to_datetime(data['date']).dt.month\ndata['day'] = pd.to_datetime(data['date']).dt.day\n\ndata.info()","07746c97":"import matplotlib.pyplot as plt\nimport seaborn as sns","328fba7d":"fig, ax = plt.subplots(figsize = (15, 5))\n\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nsns.countplot(x = 'year', hue = 'race', data = data, palette = 'colorblind', hue_order = horder)\nax.legend(loc = 'upper right')\nax.set(ylim = (0, 550))\nplt.xlabel('Year')\nplt.ylabel('')\nplt.title('Distribution of cases by race and year')\nplt.show()","08853c68":"fig, ax = plt.subplots(figsize = (15, 10))\nax = sns.stripplot(x = 'age', y = 'race', data = data, hue = 'gender')\nax = sns.boxplot(x = 'age', y = 'race', data = data, palette = 'pastel', saturation = 0.5)\nplt.xlabel('Age')\nplt.ylabel('Racial Background')\nax.legend(loc = 'upper right')\nplt.title('The Distribution of people according to Age, Gender and Race')\nplt.show()","62129f95":"fig, ax = plt.subplots(figsize = (15, 5))\n\norder = ['Lethal', 'Semi-Lethal', 'Non-Lethal', 'Unknown', 'Undetermined', 'Unarmed']\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nsns.countplot(x = 'armed', hue = 'race', data = data, palette = 'colorblind', order = order, hue_order = horder)\nax.legend(loc = 'upper right')\nax.set(ylim = (0, 1600))\nplt.xlabel('Type of Arm')\nplt.ylabel('')\nplt.title('Distribution of cases according to type of arm and race')\nplt.show()","b39f28c0":"fig = plt.figure(figsize = (20, 5))\n\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nax1 = fig.add_subplot(1, 3, 1)\nax1 = sns.countplot(x = 'threat_level', hue = 'race', data = data, palette = 'colorblind', hue_order = horder)\nax1.get_legend().remove()\nax1.set(ylim = (0, 1800))\nplt.xlabel('Level of Threat')\nplt.ylabel('')\n\nax2 = fig.add_subplot(1, 3, 2)\nax2 = sns.countplot(x = 'signs_of_mental_illness', hue = 'race', data = data, palette = 'colorblind', hue_order = horder)\nax2.legend(loc = 'upper right')\nax2.set(ylim = (0, 1800))\nplt.xlabel('Signs of Mental Illness')\nplt.ylabel('')\n\n\nax3 = fig.add_subplot(1, 3, 3)\nax3 = sns.countplot(x = 'flee', hue = 'race', data = data, palette = 'colorblind', hue_order = horder)\nax3.get_legend().remove()\nax3.set(ylim = (0, 1800))\nplt.xlabel('Fleeing')\nplt.ylabel('')\nplt.show()","c74ae525":"fig = plt.figure(figsize = (15, 8))\n\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\nyorder = ['2015', '2016', '2017', '2018', '2019', '2020']\n\nfor i in range(1, 7):\n    y = data.year.unique()\n    ax = fig.add_subplot(2, 3, i)\n    ax = sns.countplot(x = 'body_camera', hue = 'race', data = data[data.year == y[i - 1]], palette = 'colorblind', hue_order = horder)\n    ax.set(ylim = (0, 500))\n    ax.legend(loc = 'upper right')\n    plt.xlabel('Body Camera ' + yorder[i - 1])\n    plt.ylabel('')\nplt.show()","44e3fdde":"statewise = data['state'].value_counts()[:10]\nstatewise = pd.DataFrame(statewise).reset_index()\n\ncitywise = data['city'].value_counts()[:10]\ncitywise = pd.DataFrame(citywise).reset_index()\n\nfig = plt.figure(figsize = (20, 5))\n\nax1 = fig.add_subplot(1, 2, 1)\nax1 = sns.barplot(y = 'index', x = 'state', data = statewise, palette = 'cubehelix')\nplt.ylabel('Top 10 States')\nplt.xlabel('')\n\nax2 = fig.add_subplot(1, 2, 2)\nax2 = sns.barplot(y = 'index', x = 'city', data = citywise, palette = 'cubehelix')\nplt.ylabel('Top 10 Cities')\nplt.xlabel('')\nplt.show()","68b939c0":"california = data[data.state == 'CA']\n\nfig = plt.figure(figsize = (24, 10))\n\norder = ['Lethal', 'Semi-Lethal', 'Non-Lethal', 'Unknown', 'Undetermined', 'Unarmed']\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nax1 = fig.add_subplot(1, 3, 1)\nax1 = sns.countplot(data = california, y = 'year', hue = 'race', hue_order = horder, palette = 'colorblind')\nax1.get_legend().remove()\nplt.ylabel('Number of Deaths by Year')\nplt.xlabel('')\n\nax2 = fig.add_subplot(1, 3, 3)\nax2 = sns.countplot(data = california, y = 'armed', hue = 'race', order = order, hue_order = horder, palette = 'colorblind')\nax2.legend(loc = 'lower right')\nplt.xlabel('Total Number of Deaths')\nplt.ylabel('')\n\nax3 = fig.add_subplot(2, 3, 2)\nax3 = sns.countplot(data = california, x = 'threat_level', hue = 'race', hue_order = horder, palette = 'colorblind')\nax3.get_legend().remove()\nplt.xlabel('Level of Threat')\nplt.ylabel('')\n\nax4 = fig.add_subplot(2, 3, 5)\nax4 = sns.countplot(data = california, x = 'signs_of_mental_illness', hue = 'race', hue_order = horder, palette = 'colorblind')\nax4.get_legend().remove()\nplt.xlabel('Signs of Mental Illness')\nplt.ylabel('')\n\nplt.show()","b52ceda9":"texas = data[data.state == 'TX']\n\nfig = plt.figure(figsize = (24, 10))\n\norder = ['Lethal', 'Semi-Lethal', 'Non-Lethal', 'Unknown', 'Undetermined', 'Unarmed']\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nax1 = fig.add_subplot(1, 3, 1)\nax1 = sns.countplot(data = texas, y = 'year', hue = 'race', hue_order = horder, palette = 'colorblind')\nax1.get_legend().remove()\nplt.ylabel('Number of Deaths by Year')\nplt.xlabel('')\n\nax2 = fig.add_subplot(1, 3, 3)\nax2 = sns.countplot(data = texas, y = 'armed', hue = 'race', order = order, hue_order = horder, palette = 'colorblind')\nax2.legend(loc = 'lower right')\nplt.xlabel('Total Number of Deaths')\nplt.ylabel('')\n\nax3 = fig.add_subplot(2, 3, 2)\nax3 = sns.countplot(data = texas, x = 'threat_level', hue = 'race', hue_order = horder, palette = 'colorblind')\nax3.get_legend().remove()\nplt.xlabel('Level of Threat')\nplt.ylabel('')\n\nax4 = fig.add_subplot(2, 3, 5)\nax4 = sns.countplot(data = texas, x = 'signs_of_mental_illness', hue = 'race', hue_order = horder, palette = 'colorblind')\nax4.get_legend().remove()\nplt.xlabel('Signs of Mental Illness')\nplt.ylabel('')\n\nplt.show()","940ac393":"florida = data[data.state == 'FL']\n\nfig = plt.figure(figsize = (24, 10))\n\norder = ['Lethal', 'Semi-Lethal', 'Non-Lethal', 'Unknown', 'Undetermined', 'Unarmed']\nhorder = ['Asian', 'African-American', 'Caucasian', 'Hispanic', 'Native-American', 'Other', 'Unknown']\n\nax1 = fig.add_subplot(1, 3, 1)\nax1 = sns.countplot(data = florida, y = 'year', hue = 'race', hue_order = horder, palette = 'colorblind')\nax1.get_legend().remove()\nplt.ylabel('Number of Deaths by Year')\nplt.xlabel('')\n\nax2 = fig.add_subplot(1, 3, 3)\nax2 = sns.countplot(data = florida, y = 'armed', hue = 'race', order = order, hue_order = horder, palette = 'colorblind')\nax2.legend(loc = 'lower right')\nplt.xlabel('Total Number of Deaths')\nplt.ylabel('')\n\nax3 = fig.add_subplot(2, 3, 2)\nax3 = sns.countplot(data = florida, x = 'threat_level', hue = 'race', hue_order = horder, palette = 'colorblind')\nax3.get_legend().remove()\nplt.xlabel('Level of Threat')\nplt.ylabel('')\n\nax4 = fig.add_subplot(2, 3, 5)\nax4 = sns.countplot(data = florida, x = 'signs_of_mental_illness', hue = 'race', hue_order = horder, palette = 'colorblind')\nax4.get_legend().remove()\nplt.xlabel('Signs of Mental Illness')\nplt.ylabel('')\n\nplt.show()","62375b60":"unwarranted = data[(data.armed == 'Unarmed') & (data.flee == 'Not fleeing')]\n\nfig, ax = plt.subplots(figsize = (15, 5))\n\nsns.countplot(data = unwarranted, x = 'year', hue = 'race', hue_order = horder, palette = 'colorblind')\nax.legend(loc = 'upper right')\nplt.xlabel('Year')\nplt.ylabel('Number of Killings')\nplt.title('Distribution of unwarranted deaths by Year and Race')\nplt.show()","fc5a4859":"**Distribution of cases by Year and presence of Body Camera**","0ef63d28":"As there are only two entries missing gender values, we can drop these two rows without implications to the results.","ab7acfad":"**Column: Threat Level**","a37cb04d":"**Distribution of cases by Level of Threat, Signs of Mental Illness and Fleeing activity**","e06cb96f":"# Data Exploration and Visualisation","798b69f6":"**Distribution of deaths by type of Arms**","8ac75e90":"**Distribution of deaths by Age and Gender**","86c77a95":"There are *5416* entries in total.\nThe columns armed, age, race, flee and gender are missing some values.","1731e04c":"**Column: Race**","5134ef53":"**Column: Armed**","ea73106b":"**Missing Data**","d6940c6b":"**Number of Deaths by Year**","64798f6c":"# Data Cleaning and dealing with missing values","dbdc1969":"*Florida*","5bd724e8":"The exploration of data should be viewed skeptically as it solely depends on a single data source which is unverfied and has missing values that can shift the visuals, e.g. the race column is missing for almost 10% of the dataset. I will be exploring other datasets related to this topic. \nMeanwhile I welcome any constructive criticism and suggestions.","35472a58":"*Texas*","a646e5ef":"**Column: Age**","3acc1612":"# Datetime Feature Engineering","4ef57907":"**Cardinality**","35eba098":"*California*","a3b1a3df":"# Importing Dataset","120b9961":"**Column: Gender**","faadff80":"**Unwarranted Deaths**","29dfc2b6":"**10 States and Cities with highest number of cases**","de60157e":"Visualisation of distribution of cases in top three states","6f533ec1":"**Column: Flee**"}}