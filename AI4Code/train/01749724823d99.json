{"cell_type":{"3747afd1":"code","93515004":"code","9bd56234":"code","c156c9ee":"code","81830155":"code","b4f22001":"markdown"},"source":{"3747afd1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfrom typing import List\n\nimport numpy as np\nimport pandas as pd","93515004":"def eval_data(row):\n    if row == row:\n        return eval(row)\n    else:\n        return np.nan","9bd56234":"def pick_os_combination(series: pd.Series) -> pd.Series:\n    \"\"\"\n    \u4f7f\u7528\u53ef\u80fd\u306aOS\u3068\u7d44\u307f\u5408\u308f\u305b\u3092\u6570\u5024\u306eSeries\u3067\u8fd4\u3059\n    \u305d\u306e\u307e\u307e\u30e2\u30c7\u30eb\u5b66\u7fd2\u306b\u5165\u308c\u308b\u305f\u3081astype(float)\n    0:\u6307\u5b9a\u306a\u3057 1:windows 2:macOS 3:windows&macOS 4:linux 5\uff1awindows&linux 6:linux&macOS 7 :all\n    :param series: minimumu_requirements \u307e\u305f\u306f recommended_requirements\n    :return: os_combination \n    \"\"\"\n    new_series = series.copy()\n    new_series.name = 'os_combination'\n    for c in range(0, len(series)):\n        if type(series[c]) is dict:\n            #print('dict_open', series[c].keys())\n            os_list = list(series[c].keys())\n            total = 0\n            for l in os_list:\n                if l == 'windows':\n                    a = 1\n                elif l == 'macOS':\n                    a = 2\n                elif l == 'linux':\n                    a = 4\n                else:\n                    print(l)\n                    a = 0\n                total = total + a\n            new_series[c] = total\n        else:\n            new_series[c] = 0\n        #print(s)\n    return new_series.astype(int)","c156c9ee":"train = pd.read_csv('..\/input\/data-science-winter-osaka2\/train.csv')\ntest = pd.read_csv('..\/input\/data-science-winter-osaka2\/test.csv')\n\nfor column in ['popular_tags', 'categories', 'minimum_requirements', 'recommended_requirements']:\n    train[column] = train[column].apply(eval_data)\n    test[column] = test[column].apply(eval_data)\n    ","81830155":"series = pick_os_combination(train['minimum_requirements'])\nprint(type(series))\nprint(type(series[0]))\nseries","b4f22001":"## \u5b9f\u969b\u306b\u4f7f\u3046\u3068\u304d\u306f \nuse_df = pd.concat([use_df, nlp_df], axis=1)  \n\n**use_df['os_combi'] = pick_os_combination(df['minimum_requirements'])  <-\u3053\u3053\u306b\u633f\u5165**  \n  \ntrain = use_df[use_df['is_train']==True].reset_index(drop=True)  \ntest =  use_df[use_df['is_train']!=True].reset_index(drop=True)  \n\n"}}