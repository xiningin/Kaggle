{"cell_type":{"01a78315":"code","30e415c6":"code","d2d0d58c":"code","c8a71160":"code","ba8f4369":"code","8d1116e9":"code","45103464":"code","0da32fd9":"code","7fb9e6c7":"code","7e0e6aee":"code","2387a1ea":"code","bf4e9bb5":"code","cde662aa":"code","af5fc493":"code","8825420e":"code","db969f0f":"code","1658333c":"code","48b95b3a":"code","615f30b2":"code","4cb7c2f2":"code","44ce5281":"code","7e69a94f":"code","e2fdd75d":"code","0d14e498":"code","862ca9a9":"code","eab41823":"code","cafbd5f5":"code","0fe36113":"code","f3b4f99f":"code","33d5bdd1":"markdown","c66333f5":"markdown","411d6202":"markdown","7b94e18a":"markdown","fdc29d2f":"markdown","19be273f":"markdown","7228a5a2":"markdown","f681154d":"markdown","7d338359":"markdown","34cd294b":"markdown","e7a0e809":"markdown","1459222d":"markdown"},"source":{"01a78315":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2\nimport ast","30e415c6":"train = pd.read_csv('..\/input\/global-wheat-detection\/train.csv')\ntrain[['x', 'y', 'w', 'h']] = pd.DataFrame(np.stack(train['bbox'].apply(lambda x: ast.literal_eval(x)))).astype(np.float32)\ntrain['x1'] = train['x'] + train['w']\ntrain['y1'] = train['y'] + train['h']\ntrain['area'] = train['w'] * train['h']","d2d0d58c":"for i in range(95, 100, 1):\n    perc = np.percentile(train['area'], i)\n    print(f\"{i} percentile of area is {perc}\")","c8a71160":"for i in range(0, 5, 1):\n    perc = np.percentile(train['area'], i)\n    print(f\"{i} percentile of area is {perc}\")","ba8f4369":"Train_Box = train[train['area']<100]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(4)\nTrain_Box.head()","8d1116e9":"grid_width = 2\ngrid_height = 2\nimages_id = ['6284044ed','ad256655b', '233cb8750', '6a8522f06']\nbbox_id = [36287, 40034, 114998, 119089]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","45103464":"Train_Box = train[train['area']<200]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(4)\nTrain_Box.head()","0da32fd9":"grid_width = 2\ngrid_height = 2\nimages_id = ['78752f185','71b460a14', '3f8f6b1a1', 'd0ab06fc3']\nbbox_id = [115412, 4128, 145578, 66114]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","7fb9e6c7":"Train_Box = train[train['area']<300]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(4)\nTrain_Box.head()","7e0e6aee":"grid_width = 2\ngrid_height = 2\nimages_id = ['0b2967a7a','1e9ff110c', 'c1577d6ff', '217c8fd61']\nbbox_id = [112057, 3465, 119930, 125886]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","2387a1ea":"Train_Box = train[train['area']<400]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(4)\nTrain_Box.head()","bf4e9bb5":"grid_width = 2\ngrid_height = 2\nimages_id = ['060543bbf','94ea18562', 'bbce58f71', '408013a9d']\nbbox_id = [88815, 84884, 122802, 112357]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","cde662aa":"Train_Box = train[train['area']<500]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(4)\nTrain_Box.head()","af5fc493":"grid_width = 2\ngrid_height = 2\nimages_id = ['1f255e0c5','ea88fb8ec', 'b7c9166b6', '9a50eab86']\nbbox_id = [65825, 63607, 124682, 63881]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","8825420e":"Train_Box = train[train['area']>27456.23999999996]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.head(4)\nTrain_Box.head()","db969f0f":"grid_width = 2\ngrid_height = 2\nimages_id = ['9858d67dc','ffc870198', '536ef8d03', '3b552c95a']\nbbox_id = [33828, 4793, 54363, 120167]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","1658333c":"Train_Box = train[train['area']>27456.23999999996]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(700)\nTrain_Box.head()","48b95b3a":"grid_width = 2\ngrid_height = 2\nimages_id = ['c4dc3c575','93d67b171', '93d67b171', 'd89f4ea06']\nbbox_id = [42775, 4360, 4352, 33604]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","615f30b2":"Train_Box = train[train['area']>27456.23999999996]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(350)\nTrain_Box.head()","4cb7c2f2":"grid_width = 2\ngrid_height = 2\nimages_id = ['be11c4e40','b8ddb6c73', '5a76259a0', '73ed5eb37']\nbbox_id = [2817, 128030, 116083, 90575]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","44ce5281":"Train_Box = train[train['area']>27456.23999999996]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(175)\nTrain_Box.head()","7e69a94f":"grid_width = 2\ngrid_height = 2\nimages_id = ['2c836cccb','d5943ea17', 'dcafcae79', '1e58125ec']\nbbox_id = [123482, 54427, 52733, 38737]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.imshow(image.squeeze())\n\nplt.show()","e2fdd75d":"Train_Box = train[train['area']>27456.23999999996]\nTrain_Box = Train_Box.sort_values(axis=0, ascending=True, by=['area'])\nTrain_Box = Train_Box.tail(15)\nTrain_Box.head(15)","0d14e498":"grid_width = 3\ngrid_height = 5\nimages_id = ['b8ddb6c73', 'f1a8585e0', '51f2e0a05', '69fc3d3ff', '9adbfe503', '41c0123cc','a1321ca95', 'ad6e9eea2', '9a30dd802', 'd7a02151d', '409a8490c', '2cc75e9f5', 'a1321ca95', 'd067ac2b1', '42e6efaaa']\nbbox_id = [128028, 53790, 53930, 1259, 54892, 173, 2169, 54702, 52868, 118211, 117344, 3687, 2159, 121633, 113947]\nfig, axs = plt.subplots(grid_height, grid_width,\n                        figsize=(15, 15))\n\nfor i, (img_id, box) in enumerate(zip(images_id, bbox_id)):\n    ax = axs[int(i \/ grid_width), i % grid_width]\n    image = cv2.imread(f'..\/input\/global-wheat-detection\/train\/{img_id}.jpg', cv2.IMREAD_COLOR)\n    box = [int(Train_Box['x'][box]),int(Train_Box['y1'][box]),int(Train_Box['x1'][box]),int(Train_Box['y'][box])]\n    cv2.rectangle(image,\n                  (box[0], box[1]),\n                  (box[2], box[3]),\n                  (220, 0, 0), 3)\n    ax.set_title(img_id)\n    ax.imshow(image.squeeze())\n\nplt.show()","862ca9a9":"train = pd.read_csv('..\/input\/global-wheat-detection\/train.csv')\ntrain[['x', 'y', 'w', 'h']] = pd.DataFrame(np.stack(train['bbox'].apply(lambda x: ast.literal_eval(x)))).astype(np.float32)\ntrain['area'] = train['w'] * train['h']\ntrain.shape","eab41823":"train_clean = train[train['area']>300]\ntrain_clean = train_clean[train['w']>10]\ntrain_clean = train_clean[train['h']>10]\ntrain_clean = train_clean.drop([173,2169,118211,52868,117344,3687,2159,121633,113947])","cafbd5f5":"print(\"remove {} boxes\".format(train.shape[0] - train_clean.shape[0]))","0fe36113":"train_clean.head()","f3b4f99f":"train_clean.to_csv('train_clean.csv')","33d5bdd1":"Let check the small boxes with area 80","c66333f5":"okay with no problem.Check the top 15 big guys","411d6202":"> The box of fig4 seem to be too big, but it no a thing.Let's check the 0.125 percentile with the area 50912.0","7b94e18a":"> Obviously this is still a suitable size\uff0cLet check the 0.5 percentile with the area 34200.0","fdc29d2f":"Let's check the different the images with different sizes:\n\n    Big images size percentile:\n        95 percentile of area is 16102.799999999988\n        96 percentile of area is 17460.0\n        97 percentile of area is 19264.47999999998\n        98 percentile of area is 22046.0\n        99 percentile of area is 27456.23999999996\n\n    Small images size percentile:\n        0 percentile of area is 2.0\n        1 percentile of area is 1064.0\n        2 percentile of area is 1344.0\n        3 percentile of area is 1551.0\n        4 percentile of area is 1716.0","19be273f":"As host said that they had adjusted the wrong label in the data set, but the training set did not adjust the label. So we need to adjust the label of the training set ourselves to avoid huge shake, hope it will be helpful to someone :))","7228a5a2":"Thses boxes should be remove which almost can't be see anything in it.What's about area 500","f681154d":"This is the one which we should remove","7d338359":"> Obviously this is still a suitable size\uff0cLet check the 0.25 percentile with the area 41860.0","34cd294b":"Clean the bboxs to output new train ","e7a0e809":"Let check the big boxes at 1 percentile of area is 27456.23999999996","1459222d":"In a word, we should remow w\/h less than 10 and the area less than 300"}}