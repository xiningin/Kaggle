{"cell_type":{"e9a55079":"code","cb32d707":"markdown","943b637a":"markdown","1228ecb7":"markdown","850eb0b1":"markdown","4bd76781":"markdown","6ea4f4c4":"markdown","bf1eccb8":"markdown","1b239d4a":"markdown","31ab8d96":"markdown"},"source":{"e9a55079":"from wand.image import Image as Img\nImg(filename='..\/input\/cityofla\/CityofLA\/Additional data\/PDFs\/2017\/july 2017\/July 21\/ARTS ASSOCIATE 2454 072117 REV 072817.pdf', resolution=300)","cb32d707":"<h1 align=\"center\"><font color=\"#5831bc\" face=\"Comic Sans MS\">Introduction to the solution of Data Science for Good: City of LA<\/font><\/h1> ","943b637a":"This notebook is a part of the solution for DSG: City of LA competition. The solution splited into 5 parts. Here is the list of notebook in correct order. The part of solution you are currently reading is highlighted in bold.\n\n[**1. Introduction to the solution of DSG: City of LA**](https:\/\/www.kaggle.com\/niyamatalmass\/1-introduction-to-the-solution-of-dsg-city-of-la)\n\n[2. Raw Job Postings to structured CSV](https:\/\/www.kaggle.com\/niyamatalmass\/2-raw-job-bulletins-to-structured-csv)\n\n[3. Identify biased language](https:\/\/www.kaggle.com\/niyamatalmass\/3-identify-biased-language)\n\n[4. Improve the diversity and quality](https:\/\/www.kaggle.com\/niyamatalmass\/4-improve-the-diversity-and-quality)\n\n[5. Jobs Promotional Pathway](https:\/\/www.kaggle.com\/niyamatalmass\/5-jobs-promotional-pathway)\n***\n<br\/>","1228ecb7":"# <font color=\"#5831bc\" face=\"Comic Sans MS\">Conclusion<\/font> \nWe just discussed the overall solutions for my solutions for these problems. It gives an overall idea of my solutions. But the solutions are divided into 5 parts. Each part contains detailed information on each problem and its solutions. It also gives the necessary recommendations. You are welcome for reading my notebooks. See you in next part of the solutions!","850eb0b1":"# <font color=\"#5831bc\" face=\"Comic Sans MS\" size=40>Solutions Overview<\/font> \nAfter researching and working a lot about the problem, I came to a standard solutions for this problem. I divided the solutions into multiple parts for understandability. Let's talk about the solutions in precious way. Below, I first describe each problem and gave solutions description with that. ","4bd76781":"### <font color=\"#5831bc\" face=\"Comic Sans MS\">Problem 2: Identify language that can negatively bias the pool of applicants and improve the diversity and quality of the applicant pool<\/font>\n**Problem Description**: Many job descriptions often contain an inadvertent gender\/ethnicity bias because of the style and language that they are written in. This has the risk of putting people off applying for jobs which ultimately will affect the company\u2019s competitive edge if they are unable to fill key positions. \n\nThe City of LA also doesn't want this kind of biases in their job description. So the key goal of this problem is to identify language that is biased to certain group mostly gender\/ethnicity diversity. \n\nAnd the second part of this problem is to improve the diversity and quality of applicants. This is actually co-related with the first part. If we can identify bias language and improve on them, then diversity will increase and overall quality also. \n\n**Solution**: I solved this problem by identifying words that are biased. There are some words that are biased to male\/female. I identified them in my solutions. This will solve most of the problem. Secondly, I used an external dataset where the city of LA job applicants demographics is present. I use this data and created a machine learning model for predicting the number of particular gender and ethnicity in a job. Then I do depth analysis on the model for identifying biases in language. This gives a very extra-ordinary result. \n\nAfter that, I did some analysis on other columns and found some interesting result of how to increase the diversity and quality of the applicant pool.\n***","6ea4f4c4":"We can see an example of job postings. But how do we extract the necessary information from the raw text? \n<br\/>\n\n**Solution**: One option is regex or regular expression. Regex is a very powerful tool for extracting necessary text given a certain pattern. In my solutions, I used regex for splitting each main section of job postings and store them in a separate column. For example, ```ANNUAL SALARY, DUTIES, REQUIREMENTS, PROCESS NOTES, WHERE TO APPLY``` stored as a separate column. By using regex, we can extract most of the column field provided in the data dictionary by the city of la except for **REQUIREMENTS**. \n\n\nIn the above job description, we can see it has a ```REQUIREMENT``` section. The city of LA does not want the whole chunk of text in this section. They want separate information. For example, in the data dictionary, we have a column like ```EDUCATION_YEARS, EDUCATION_MAJOR, SCHOOL_TYPE, EXPERIENCE JOB FUNCTION``` and a lot more. So we have to extract that information from the requirements section.\n\n\nHow do we extract that information? Well, anyone would say why not use regex. But I and many others have tried using regex and shared in public kernels. But they all confused by the diversity of job descriptions. Regex work by matching pattern. But there are **hundreds of different patterns** for identifying each data dictionary field in 683 job postings. It's **impossible to use regex** for correctly extracting important text from all job postings.\n\n\nSo what're the solutions? The solutions for this problem is using ```NER or Named Entity Recognition```. NER is a very popular subfield of NLP or natural language processing. \n\n> Named Entity Recognition, also known as entity extraction classifies named entities that are present in a text into pre-defined categories like \u201cindividuals\u201d, \u201ccompanies\u201d, \u201cplaces\u201d, \u201corganization\u201d, \u201ccities\u201d, \u201cdates\u201d, \u201cproduct terminologies\u201d etc. It adds a wealth of semantic knowledge to your content and helps you to promptly understand the subject of any given text.\n\nThat's exactly what we need. We need to **extract** data from raw text to pre-defined categories like ```EDCUATION_YEARS, EDUCATION_MAJOR```. So for this project, I build a **custom NER model** that successfully extract necessary information. This is a de-facto solution for this type of problem. Because if you use regex then for new job post it may not match. But **NER is a machine learning model. It can identify context and can perform very good on any new job post.**\n***","bf1eccb8":"### <font color=\"#5831bc\" face=\"Comic Sans MS\">Problem 1: Convert a folder full of plain-text job postings into a single structured CSV file<\/font>\n**Problem Description**: The city of LA provided a folder full of plain text job postings. There are 683 job postings in the folder. Each job posting is a text file containing raw job description. The goal is that we have to extract particular important information from the raw text file and store those in a CSV file (A row of the CSV is single job information). For example, we can extract a job's salary, open date, requirements and store each of the info in a separate column in the CSV. The city of LA also provides a data dictionary containing general information about what information we should extract from the job postings.\n\nLet's see an example of job posting first for better understanding.\n","1b239d4a":"# <font color=\"#5831bc\" face=\"Comic Sans MS\">Notebook Overview<\/font> \nFrom May 8, 2019, to June 22, 2019, Kaggle host an analytics competition named \"**Data Science for Good: City of Los Angeles**\". The goal of this competition is \"Help the City of Los Angeles to structure and analyze its job descriptions\". \n\nThe City of Los Angeles faces a big hiring challenge: 1\/3 of its 50,000 workers are eligible to retire by July of 2020. The city has partnered with Kaggle to create a competition to improve the job bulletins that will fill all those open positions. \n\nThe City of LA provided some important datasets for this competition. 600+ job bulletins as a text file, and other additional data. The goal is to convert a folder full of plain-text job postings into a single structured CSV file and then to use this data to:\n\n    1. Identify language that can negatively bias the pool of applicants; \n\n    2. Improve the diversity and quality of the applicant pool; and\/or \n\n    3. Make it easier to determine which promotions are available to employees in each job class.","31ab8d96":"### <font color=\"#5831bc\" face=\"Comic Sans MS\">Problem 3: Make it easier to determine which promotions are available to employees in each job class<\/font>\n**Problem Description**: The main goal of this problem is to identify promotions for each job has. Directly connect a job class to any other job classes that are explicitly mentioned as a prerequisite for application (an explicit promotional pathway), as they will be clearly identified in each row of the output. For instance, the text of the description for Senior Systems Analyst states the requirement of \u201cTwo years of full-time paid experience in a class at the level of Systems Analyst.\u201d In this case, the lower job class of Systems Analyst is explicitly mentioned in the description for Senior Systems Analyst. The ability to promote between these job classes is thus stated explicitly.\n\nConstruct a directed graph that represents all the promotional pathways that an employee can traverse from a given job class, where each node in the graph represents a job class, and each directed edge represents a promotion from one job class to another. For example, the database would encode the fact that an employee can promote from the job class of Systems Analyst to the job class of Senior Systems Analyst.\n\n**Solution**: The solution to this problem is very easy. Because the hard part is done in problem 1 (creating a structured CSV). In the structure CSV versions of the job bulletins, there is a column name ```EXP_JOB_TITLE``` represent the job title one must experience with for applying for a certain position. I just made a graph using this data solved the problem. Also, I made function that gives necessary requirements for a promotion in a given job. \n***"}}