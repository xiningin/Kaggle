{"cell_type":{"edb9698f":"code","3e95b2db":"code","a4cc60af":"code","41ab8d9e":"code","ca3b130f":"code","8b359f44":"code","b2dead2e":"code","50aacc1c":"code","8435c5c7":"code","fb5ec75a":"code","95ed9ba7":"code","1e486854":"code","d79c85b0":"code","e2eabb5e":"code","10a22451":"code","b841b202":"code","669daca9":"code","0b6c1227":"code","f6c4b931":"code","a5fa7c1f":"code","021f39b8":"code","6ede92a8":"code","d1a97a5c":"code","d99dba0c":"code","c63494e6":"code","f93336c4":"code","e299628f":"code","97bda353":"code","91658b26":"code","b84002eb":"code","572f42de":"code","9a762e6e":"code","0f6355ec":"code","62083418":"code","35713e7e":"code","4cb50ae3":"code","62900ad3":"code","4b7102f6":"code","7b05b4d1":"code","34f9b743":"code","7373b957":"code","5e65ba15":"code","779ef20f":"code","98a6eec6":"code","4ac67e56":"code","0b1f3f76":"code","6a8f8cf5":"code","0de05bfa":"code","ca6ddaad":"code","e75e6a09":"code","fe33aa86":"code","7a4f97f9":"code","376d048d":"code","23ea1cd3":"code","4c6c28df":"code","2369cc91":"code","e22b20f9":"code","25003791":"code","c4d1ee3c":"code","2f944582":"code","e9a17023":"code","ef444ca2":"code","7284963b":"code","d2b4404d":"code","cdeebe01":"code","8f0e1f42":"code","622d62ae":"code","8813c4c7":"code","525c93d8":"code","98de6d02":"code","e6fb63f6":"code","94a3589a":"code","4edcfd2d":"code","06d46769":"code","269a0f8a":"code","74bc337e":"code","8647bcca":"code","2d99c94c":"code","c7f60346":"code","a7d07b18":"code","a4e9b2ac":"code","8da0c68a":"code","b2e35697":"code","edd562d3":"code","6c93bad7":"code","4461d14b":"code","d8e54da0":"code","44e22cc7":"code","cacfb859":"code","580306b0":"markdown","9b745b82":"markdown","a7d3473a":"markdown","ec28148b":"markdown","4de1baeb":"markdown","aecd2c73":"markdown","347a1cbf":"markdown","b8ef6061":"markdown","f8c534ba":"markdown","39a27040":"markdown","fb2bc6af":"markdown","01220763":"markdown","17e2ea91":"markdown","ad39ccac":"markdown","478eb1b7":"markdown","00611eeb":"markdown","40d65f39":"markdown","41fb1282":"markdown","100a3888":"markdown","ad1c7da8":"markdown","f995cdb4":"markdown","21aa3bc4":"markdown","bde34457":"markdown","ebc5e51b":"markdown","6192613d":"markdown","76485f85":"markdown","9adfb1b2":"markdown","41c3c58e":"markdown","8c246954":"markdown","2e0d241a":"markdown","7e3d6dc4":"markdown","1387900d":"markdown","9a0d1e4b":"markdown","6cdd6c37":"markdown","f413dd44":"markdown","680b809d":"markdown","f2864337":"markdown","a4fcaa46":"markdown","5d8256e3":"markdown","b7ce2cfe":"markdown","214c7067":"markdown","b619e76a":"markdown","476d9036":"markdown","f9aae171":"markdown","4794d5e6":"markdown","dc649ada":"markdown","6fed1fc6":"markdown","8b0fc642":"markdown","c064967e":"markdown"},"source":{"edb9698f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas import Series\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5) \n# matplotlib \uc758 \uae30\ubcf8 scheme \ub9d0\uace0 seaborn scheme \uc744 \uc138\ud305\ud558\uace0, \uc77c\uc77c\uc774 graph \uc758 font size \ub97c \uc9c0\uc815\ud560 \ud544\uc694 \uc5c6\uc774 seaborn \uc758 font_scale \uc744 \uc0ac\uc6a9\ud558\uba74 \ud3b8\ud569\ub2c8\ub2e4.\nimport missingno as msno\n\n\n%matplotlib inline","3e95b2db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a4cc60af":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\n","41ab8d9e":"train.head()","ca3b130f":"train.describe()\n# describe()\ub97c \uc4f0\uba74 \uac01 feature \uac00 \uac00\uc9c4 \ud1b5\uacc4\uce58\ub4e4\uc744 \ubc18\ud658\ud574\uc90d\ub2c8\ub2e4.\n","8b359f44":"test.describe()","b2dead2e":"train.isnull().sum()\/len(train)*100","50aacc1c":"test.isnull().sum()\/len(train)*100\n# Train, Test set \uc5d0\uc11c Age(\ub458\ub2e4 \uc57d 20%), Cabin(\ub458\ub2e4 \uc57d 80%), Embarked(Train\ub9cc 0.22%) null data \uc874\uc7ac\ud558\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# MANO \ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 null data\uc758 \uc874\uc7ac\ub97c \ub354 \uc27d\uac8c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8435c5c7":"msno.matrix(df=train, figsize=(8, 8), color=(0.8, 0.5, 0.2))\n# Null \uac12\uc744 \uc2dc\uac01\ud654 \ud574\uc90d\ub2c8\ub2e4.","fb5ec75a":"msno.matrix(df=test, figsize=(8, 8), color=(0.8, 0.5, 0.2))\n","95ed9ba7":"train.head()","1e486854":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\n\ntrain['Survived'].value_counts().plot.pie( autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title('Pie plot - Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\n\nplt.show()\n# \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc8fd\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc2b5\ub2c8\ub2e4... 38.4 % \uac00 \uc0b4\uc544\ub0a8\uc558\uc2b5\ub2c8\ub2e4.\n# target label \uc758 \ubd84\ud3ec\uac00 \uc81c\ubc95 \uade0\uc77c(balanced)\ud569\ub2c8\ub2e4. \n# \ubd88\uade0\uc77c\ud55c \uacbd\uc6b0, \uc608\ub97c \ub4e4\uc5b4\uc11c 100\uc911 1\uc774 99, 0\uc774 1\uac1c\uc778 \uacbd\uc6b0\uc5d0\ub294 \ub9cc\uc57d \ubaa8\ub378\uc774 \ubaa8\ub4e0\uac83\uc744 1\uc774\ub77c \ud574\ub3c4 \uc815\ud655\ub3c4\uac00 99%\uac00 \ub098\uc624\uac8c \ub429\ub2c8\ub2e4. \n# 0\uc744 \ucc3e\ub294 \ubb38\uc81c\ub77c\uba74 \uc774 \ubaa8\ub378\uc740 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc904 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uc9c0\uae08 \ubb38\uc81c\uc5d0\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc73c\ub2c8 \uacc4\uc18d \uc9c4\ud589\ud558\uaca0\uc2b5\ub2c8\ub2e4.","d79c85b0":"train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()\n# \ub9c8\uce58 \ud53c\ubc97\ud568\uc218 \uac19\uc2b5\ub2c8\ub2e4.","e2eabb5e":"train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).sum()","10a22451":"train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()\n# \ubcf4\ub2e4\uc2dc\ud53c, Pclass \uac00 \uc88b\uc744 \uc218\ub85d(1st) \uc0dd\uc874\ub960\uc774 \ub192\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc880 \ub354 \ubcf4\uae30 \uc27d\uac8c \uadf8\ub798\ud504\ub97c \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. seaborn \uc758 countplot \uc744 \uc774\uc6a9\ud558\uba74, \ud2b9\uc815 label \uc5d0 \ub530\ub978 \uac1c\uc218\ub97c \ud655\uc778\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","b841b202":"y_position = 1.02\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\ntrain['Pclass'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'], ax=ax[0])\nax[0].set_title('Number of Passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=train, ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show()\n# \ud074\ub798\uc2a4\uac00 \ub192\uc744 \uc218\ub85d, \uc0dd\uc874 \ud655\ub960\uc774 \ub192\uc740\uac78 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pclass 1, 2, 3 \uc21c\uc11c\ub300\ub85c 63%, 48%, 25% \uc785\ub2c8\ub2e4\n# \uc6b0\ub9ac\ub294 \uc0dd\uc874\uc5d0 Pclass \uac00 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\uace0 \uc0dd\uac01\ud574\ubcfc \uc218 \uc788\uc73c\uba70, \ub098\uc911\uc5d0 \ubaa8\ub378\uc744 \uc138\uc6b8 \ub54c \uc774 feature \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc744 \uac83\uc774\ub77c \ud310\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","669daca9":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\ntrain[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()\n# \uc774\ubc88\uc5d0\ub294 \uc131\ubcc4\ub85c \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub2ec\ub77c\uc9c0\ub294 \uc9c0 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n# \ub9c8\ucc2c\uac00\uc9c0\ub85c pandas groupby \uc640 seaborn countplot \uc744 \uc0ac\uc6a9\ud574\uc11c \uc2dc\uac01\ud654\ud574\ubd05\uc2dc\ub2e4.","0b6c1227":"train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","f6c4b931":"pd.crosstab(train['Sex'], train['Survived'], margins=True).style.background_gradient(cmap='summer_r')\n# Pclass \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, Sex \ub3c4 \uc608\uce21 \ubaa8\ub378\uc5d0 \uc4f0\uc77c \uc911\uc694\ud55c feature \uc784\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4","a5fa7c1f":"sns.factorplot('Pclass', 'Survived', hue='Sex', data=train, size=6, aspect=1.5)\n# \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c female \uc774 \uc0b4 \ud655\ub960\uc774 male \ubcf4\ub2e4 \ub192\uc740 \uac78 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \ub610\ud55c \ub0a8\uc790, \uc5ec\uc790 \uc0c1\uad00\uc5c6\uc774 \ud074\ub798\uc2a4\uac00 \ub192\uc744 \uc218\ub85d \uc0b4 \ud655\ub960 \ub192\uc2b5\ub2c8\ub2e4.\n# \uc704 \uadf8\ub798\ud504\ub294 hue \ub300\uc2e0 column \uc73c\ub85c \ud558\uba74 \uc544\ub798\uc640 \uac19\uc544\uc9d1\ub2c8\ub2e4","021f39b8":"sns.factorplot(x='Sex', y='Survived', col='Pclass',\n               data=train, satureation=.5,\n               size=9, aspect=1\n              )","6ede92a8":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : ',round(train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : ',round(train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : ',round(train['Age'].mean()))","d1a97a5c":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(train[train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(train[train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()\n# \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \uc0dd\uc874\uc790 \uc911 \ub098\uc774\uac00 \uc5b4\ub9b0 \uacbd\uc6b0\uac00 \ub9ce\uc74c\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d99dba0c":"# Age distribution withing classes\nplt.figure(figsize=(8, 6))\ntrain['Age'][train['Pclass'] == 1].plot(kind='kde')\ntrain['Age'][train['Pclass'] == 2].plot(kind='kde')\ntrain['Age'][train['Pclass'] == 3].plot(kind='kde')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])\n# Class \uac00 \ub192\uc744 \uc218\ub85d \ub098\uc774 \ub9ce\uc740 \uc0ac\ub78c\uc758 \ube44\uc911\uc774 \ucee4\uc9d0\n# \ub098\uc774\ub300\uac00 \ubcc0\ud558\uba74\uc11c \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub418\ub294 \uc9c0 \ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.\n# \ub098\uc774\ubc94\uc704\ub97c \uc810\uc810 \ub113\ud600\uac00\uba70, \uc0dd\uc874\ub960\uc774 \uc5b4\ub5bb\uac8c \ub418\ub294\uc9c0 \ud55c\ubc88 \ubd05\uc2dc\ub2e4.","c63494e6":"cummulate_survival_ratio = []\nfor i in range(1, 80):\n    cummulate_survival_ratio.append(train[train['Age'] < i]['Survived'].sum() \/ len(train[train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7, 7))\nplt.plot(cummulate_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\nplt.show()\n\n# \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \ub098\uc774\uac00 \uc5b4\ub9b4 \uc218\ub85d \uc0dd\uc874\ub960\uc774 \ud655\uc2e4\ud788 \ub192\uc740\uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc6b0\ub9ac\ub294 \uc774 \ub098\uc774\uac00 \uc911\uc694\ud55c feature \ub85c \uc4f0\uc77c \uc218 \uc788\uc74c\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.","f93336c4":"train.groupby(['Embarked','Pclass'])['Fare'].median() ","e299628f":"f,ax=plt.subplots(1,2,figsize=(18,8))\n\n#=== Pclass - Age \uac04 \uc0dd\uc874 \uc5ec\ubd80 ===#\nsns.violinplot(\"Pclass\",\"Age\", hue=\"Survived\", data=train, scale='count', split=True,ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0,110,10))\n\n#=== Sex - Age\uac04 \uc0dd\uc874 \uc5ec\ubd80 ===#\nsns.violinplot(\"Sex\",\"Age\", hue=\"Survived\", data=train, scale='count', split=True,ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0,110,10))\nplt.show()\n\n# \uc67c\ucabd \uadf8\ub9bc\uc740 Pclass \ubcc4\ub85c Age\uc758 distribution \uc774 \uc5b4\ub5bb\uac8c \ub2e4\ub978\uc9c0, \uac70\uae30\uc5d0 \uc0dd\uc874\uc5ec\ubd80\uc5d0 \ub530\ub77c \uad6c\ubd84\ud55c \uadf8\ub798\ud504\uc785\ub2c8\ub2e4.\n# \uc624\ub978\ucabd \uadf8\ub9bc\ub3c4 \ub9c8\ucc2c\uac00\uc9c0 Sex, \uc0dd\uc874\uc5d0 \ub530\ub978 distribution \uc774 \uc5b4\ub5bb\uac8c \ub2e4\ub978\uc9c0 \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub798\ud504\uc785\ub2c8\ub2e4.\n# \uc0dd\uc874\ub9cc \ubd24\uc744 \ub54c, \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \ub098\uc774\uac00 \uc5b4\ub9b4 \uc218\ub85d \uc0dd\uc874\uc744 \ub9ce\uc774 \ud55c\uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc624\ub978\ucabd \uadf8\ub9bc\uc5d0\uc11c \ubcf4\uba74, \uba85\ud655\ud788 \uc5ec\uc790\uac00 \uc0dd\uc874\uc744 \ub9ce\uc774 \ud55c\uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc5ec\uc131\uacfc \uc544\uc774\ub97c \uba3c\uc800 \ucc59\uae34 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","97bda353":"f, ax = plt.subplots(1, 1, figsize=(7, 7))\ntrain[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)\n\n# \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \uc870\uae08\uc758 \ucc28\uc774\ub294 \uc788\uc9c0\ub9cc \uc0dd\uc874\ub960\uc740 \uc880 \ube44\uc2b7\ud55c \uac70 \uac19\uc2b5\ub2c8\ub2e4. \uadf8\ub798\ub3c4 C\uac00 \uc81c\uc77c \ub192\uad70\uc694.\n# \ubaa8\ub378\uc5d0 \uc5bc\ub9c8\ub098 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60\uc9c0\ub294 \ubaa8\ub974\uaca0\uc9c0\ub9cc, \uadf8\ub798\ub3c4 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n# \uc0ac\uc2e4, \ubaa8\ub378\uc744 \ub9cc\ub4e4\uace0 \ub098\uba74 \uc6b0\ub9ac\uac00 \uc0ac\uc6a9\ud55c feature \ub4e4\uc774 \uc5bc\ub9c8\ub098 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud588\ub294\uc9c0 \ud655\uc778\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uace0 \ub09c \ub2e4\uc74c\uc5d0 \uc0b4\ud3b4\ubcfc \uac83\uc785\ub2c8\ub2e4.\n# \ub2e4\ub978 feature \ub85c split \ud558\uc5ec \ud55c\ubc88 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4","91658b26":"f,ax=plt.subplots(2, 2, figsize=(20,15))\nsns.countplot('Embarked', data=train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Boarded')\n\nsns.countplot('Embarked', hue='Sex', data=train, ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female Split for Embarked')\n\nsns.countplot('Embarked', hue='Survived', data=train, ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=train, ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()\n\n\n# Figure(1) - \uc804\uccb4\uc801\uc73c\ub85c \ubd24\uc744 \ub54c, S \uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub78c\uc774 \ud0d1\uc2b9\ud588\uc2b5\ub2c8\ub2e4.\n# Figure(2) - C\uc640 Q \ub294 \ub0a8\ub140\uc758 \ube44\uc728\uc774 \ube44\uc2b7\ud558\uace0, S\ub294 \ub0a8\uc790\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.\n# Figure(3) - \uc0dd\uc874\ud655\ub960\uc774 S \uacbd\uc6b0 \ub9ce\uc774 \ub0ae\uc740 \uac78 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc774\uc804 \uadf8\ub798\ud504\uc5d0\uc11c \ubd24\uc5c8\uc2b5\ub2c8\ub2e4)\n# Figure(4) - Class \ub85c split \ud574\uc11c \ubcf4\ub2c8, C\uac00 \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc740\uac74 \ud074\ub798\uc2a4\uac00 \ub192\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc774 \ud0c0\uc11c \uadf8\ub807\uc2b5\ub2c8\ub2e4. S\ub294 3rd class \uac00 \ub9ce\uc544\uc11c \uc0dd\uc874\ud655\ub960\uc774 \ub0ae\uac8c \ub098\uc635\ub2c8\ub2e4.","b84002eb":"train['FamilySize'] = train['SibSp'] + train['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4\ntest['FamilySize'] = test['SibSp'] + test['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4\n","572f42de":"print(\"Maximum size of Family: \", train['FamilySize'].max())\nprint(\"Minimum size of Family: \", train['FamilySize'].min())\n# FamilySize \uc640 \uc0dd\uc874\uc758 \uad00\uacc4\ub97c \ud55c\ubc88 \uc0b4\ud3b4\ubd05\uc2dc\ub2e4","9a762e6e":"# \uc9c1\uc811 \ud574\ubcf4\uc138\uc694\ntrain['FamilySize'].mean()","0f6355ec":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(train['Fare'], color='b', label='Skewness : {:.2f}'.format(train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')\n\n# \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, distribution\uc774 \ub9e4\uc6b0 \ube44\ub300\uce6d\uc778 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.(high skewness). \n# \ub9cc\uc57d \uc774\ub300\ub85c \ubaa8\ub378\uc5d0 \ub123\uc5b4\uc900\ub2e4\uba74 \uc790\uce6b \ubaa8\ub378\uc774 \uc798\ubabb \ud559\uc2b5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \n# \uba87\uac1c \uc5c6\ub294 outlier \uc5d0 \ub300\ud574\uc11c \ub108\ubb34 \ubbfc\uac10\ud558\uac8c \ubc18\uc751\ud55c\ub2e4\uba74, \uc2e4\uc81c \uc608\uce21 \uc2dc\uc5d0 \uc88b\uc9c0 \ubabb\ud55c \uacb0\uacfc\ub97c \ubd80\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# outlier\uc758 \uc601\ud5a5\uc744 \uc904\uc774\uae30 \uc704\ud574 Fare \uc5d0 log \ub97c \ucde8\ud558\uaca0\uc2b5\ub2c8\ub2e4.","62083418":"train.isnull().sum()\n# \ub9cc\uc57d Log\ub97c \ucde8\ud558\ub294\ub370 \ube44\uc5b4\uc788\ub294 \uac12\uc774 \uc788\ub2e4\uba74 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.(\uc2e4\uc81c\ub85c\ub294 \ud574\ubcf4\ub2c8\uae4c \uc548\ub0a9\ub2c8\ub2e4....\uc65c\uc548\ub098\ub294\uc9c0\ub294 \ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4.)\n# \uadf8\ub798\uc11c Null \uac12\ub4e4\uc744 \ud655\uc778\ud574\ubcf4\ub2c8 Test\uc758 Fare\uc5d0\uc11c Null \uac12\uc774 1\uac1c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \uac12\uc740 \ud3c9\uade0\uc73c\ub85c \ub300\uccb4\ud558\uaca0\uc2b5\ub2c8\ub2e4.","35713e7e":"test.isnull().sum()","4cb50ae3":"test.loc[test.Fare.isnull(), 'Fare'] = test['Fare'].mean() \n# testset \uc5d0 \uc788\ub294 nan value \ub97c \ud3c9\uade0\uac12\uc73c\ub85c \uce58\ud658\ud569\ub2c8\ub2e4.","62900ad3":"test.isnull().sum()\n# \uc798 \ucc44\uc6cc\uc84c\uc2b5\ub2c8\ub2e4.","4b7102f6":"print(train['Fare'].min(), test['Fare'].min())\n","7b05b4d1":"train['Fare'] = np.log1p(train['Fare'])\ntest['Fare'] = np.log1p(test['Fare'])\n# \ub85c\uadf8\ubcc0\ud658\uc744 \ud574\uc90d\ub2c8\ub2e4.","34f9b743":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(train['Fare'], color='b', label='Skewness : {:.2f}'.format(train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')\n# \uc798 \ubcc0\ud658\ub410\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\n\n# log \ub97c \ucde8\ud558\ub2c8, \uc774\uc81c \ube44\ub300\uce6d\uc131\uc774 \ub9ce\uc774 \uc0ac\ub77c\uc9c4 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc6b0\ub9ac\ub294 \uc774\ub7f0 \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub378\uc774 \uc880 \ub354 \uc88b\uc740 \uc131\ub2a5\uc744 \ub0b4\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \uc0ac\uc2e4 \ubc29\uae08\ud55c \uac83\uc740 feature engineering \uc5d0 \ub4e4\uc5b4\uac00\ub294 \ubd80\ubd84\uc778\ub370, \uc5ec\uae30\uc11c \uc791\uc5c5\ud588\uc2b5\ub2c8\ub2e4.\n# \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc704\ud574, \uadf8\ub9ac\uace0 \uadf8 \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574 feature \ub4e4\uc5d0 \uc5ec\ub7ec \uc870\uc791\uc744 \uac00\ud558\uac70\ub098, \uc0c8\ub85c\uc6b4 feature\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 feature engineering \uc774\ub77c\uace0 \ud558\ub294\ub370, \uc6b0\ub9ac\ub294 \uc774\uc81c \uadf8\uac83\uc744 \uc0b4\ud3b4\ubcfc \uac83\uc785\ub2c8\ub2e4.","7373b957":"train.isnull().sum() \/ len(train)","5e65ba15":"train = train.drop(['Cabin'],1)\ntest = test.drop(['Cabin'],1)","779ef20f":"test.head()\n# \uc9c1\uc811 \ud574\ubcf4\uc138\uc694\n# Train\uc758 Null \uac1c\uc218\uc5d0 \uc804\uccb4 Row \uac1c\uc218\ub97c \ub098\ub220\uc90c\n# Cabin\uc774 \uc0ac\ub77c\uc9c4 \uac83\uc744 \ud655\uc778","98a6eec6":"train.isnull().sum()\/len(train)\n# Ticket \uac12\uc740 Null \uac12\uc774 \uc5c6\uc74c","4ac67e56":"train.head()\n# \ub2e4\ub9cc \uae00\uc790\ub85c \ub418\uc5b4\uc788\uc5b4\uc11c \ubcc0\ud658\uc5d0 \uace0\ubbfc\uc774 \ub428","0b1f3f76":"train['Ticket'].value_counts()\n# Ticket\uc758 \uc885\ub958\ubcc4\ub85c \uc5bc\ub9c8\ub098 \uc788\ub294\uc9c0 \ud655\uc778 (\uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \ud568\uc218)","6a8f8cf5":"train.isnull().sum()","0de05bfa":"test.isnull().sum()","ca6ddaad":"train","e75e6a09":"train['Name'][1].split(',')[1].split('.')[0].strip()\n# split('.')\ub294 .\uc744 \uae30\uc900\uc73c\ub85c \ub098\ub208\ub294 \uac83\uc774\uba70, Strip()\ub294 \uc55e\ub4a4\uc758 \uacf5\ubc31\uc744 \uc9c0\uc6cc\uc8fc\ub294 \ucf54\ub4dc\uc784\n# \ud574\ub2f9 \ucf54\ub4dc\ub294 train['Name'] Column\uc758 1\ubc88\uc9f8 \uac12\uc744 -> , \uae30\uc900\uc73c\ub85c \ub098\ub208\uac83\uc758 1\ubc88\uc9f8 -> .\uae30\uc900\uc73c\ub85c \ub098\ub208\uac83\uc758 0\ubc88\uc9f8 -> \uc55e\ub4a4 \uacf5\ubc31 \uc0ad\uc81c \ud55c \uac12 = Mrs \ub77c\uace0 \ud574\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","fe33aa86":"train['Name'].apply(lambda x : x.split(',')[1].split('.')[0].strip())\n# \uc704\uc5d0 \ucf54\ub4dc\ub294 \ud55c\uac1c\uc758 \ub2e8\uc5b4\uc5d0\ub9cc \uc801\uc6a9\ub418\ubbc0\ub85c, \uc774\uac83\uc744 Column \uc804\uccb4\uc5d0 \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 Apply(lambda x) \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.\n# \uc5ec\uae30\uc11c\ub294 \uc704\uc5d0\uc11c \ub9cc\ub4e0 \ucf54\ub4dc\ub97c Name Column \uac01 \uac12\uc5d0 \uac01\uac01 \uc801\uc6a9\ud558\ub77c\ub294 \uc758\ubbf8\ub85c \ubc1b\uc544\ub4e4\uc774\uba74 \ub429\ub2c8\ub2e4.\n# \uc798 \ubaa8\ub974\uaca0\uc73c\uba74 Apply(lambda) \ud568\uc218\ub97c \ucc3e\uc544\ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","7a4f97f9":"train['Initial'] = train['Name'].apply(lambda x : x.split(',')[1].split('.')[0].strip())\n# \uc704\uc5d0\uc11c \ucd9c\ub825\ud55c \uac12\ub4e4\uc744 train['Initial'] Column\uc5d0 \ub123\uc5b4\uc90d\ub2c8\ub2e4.","376d048d":"test['Initial'] = test['Name'].apply(lambda x : x.split(',')[1].split('.')[0].strip())\n# Test\ub3c4 \uc5ed\uc2dc \uac19\uc774 \uc9c4\ud589!","23ea1cd3":"train['Initial'].value_counts()\n# \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.","4c6c28df":"train.groupby(['Sex', 'Initial'])['Initial'].count()\n# \uc131\ubcc4\ubcc4 Initial\uc744 \ubd05\ub2c8\ub2e4. \uadfc\ub370 \ubb54\uac00 \uc54c\uc218\uc5c6\ub294 Initial\ub4e4\uc774 \ub9ce\ub124\uc694 \uc774\uac78 \ub2e4 \uc544\ub294 \uac83\ub4e4\ub85c \ubc14\uafd4\ubd05\uc2dc\ub2e4(Mr, Mrs \ub4f1\ub4f1)","2369cc91":"train.tail(10)","e22b20f9":"train['Initial'] = train['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','the Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                                            ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'])\ntest['Initial'] = test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','the Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                                          ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'])\n# Replace \ud568\uc218\ub97c \ubaa8\ub974\uc2e0\ub2e4\uba74 \uac80\uc0c9\ud574\ubcf4\uc2dc\uace0, \uc5ec\uae30\uc11c\ub294 \uac01 \ub9e4\uce6d\ub418\ub294 \uac12\ub4e4\uc744 \ubc14\uafd4\uc90d\ub2c8\ub2e4.","25003791":"train.groupby(['Sex', 'Initial'])['Initial'].count()\n# \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\n# \uadfc\ub370 Mr\uc774 Female\ub85c \uc798\ubabb\ubd84\ub958\ub418\uc5c8\ub124\uc694........\uc77c\ub2e8\uc740 \uadf8\ub0e5 \ub118\uc5b4\uac11\ub2c8\ub2e4\u315c","c4d1ee3c":"train.loc[(train['Age'].isnull())&(train['Initial']=='Mr'),'Age'] = 33\ntrain.loc[(train['Age'].isnull())&(train['Initial']=='Mrs'),'Age'] = 36\ntrain.loc[(train['Age'].isnull())&(train['Initial']=='Master'),'Age'] = 5\ntrain.loc[(train['Age'].isnull())&(train['Initial']=='Miss'),'Age'] = 22\ntrain.loc[(train['Age'].isnull())&(train['Initial']=='Other'),'Age'] = 46\n\ntest.loc[(test['Age'].isnull())&(test['Initial']=='Mr'),'Age'] = 33\ntest.loc[(test['Age'].isnull())&(test['Initial']=='Mrs'),'Age'] = 36\ntest.loc[(test['Age'].isnull())&(test['Initial']=='Master'),'Age'] = 5\ntest.loc[(test['Age'].isnull())&(test['Initial']=='Miss'),'Age'] = 22\ntest.loc[(test['Age'].isnull())&(test['Initial']=='Other'),'Age'] = 46\n\n# \uc704\uc5d0 \ucf54\ub4dc\ub294 \uc870\uae08 \uc5b4\ub824\uc6cc \ubcf4\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud55c\uac1c\uc529 \ud574\uc11d\ud574\ubcf4\ub3c4\ub85d \ud569\uc2dc\ub2e4.\n# \uac01 \uc2a4\ud0ed\ubcc4\ub85c \ucf54\ub4dc\ub4e4\uc744 \ub530\ub77c\uce58\uba74\uc11c \ud655\uc778\ud574\ubcf4\uc154\uc57c \ud569\ub2c8\ub2e4\n\n#=== 1STEP ===#\n# \uc6b0\uc120 train['Age'].isnull() \ub97c \uccd0\ubcf4\uc2dc\uba74 Age\uc758 Null \uac12\ub9cc True\uac00 \ub429\ub2c8\ub2e4.\n# train['Initial']=='Mr' \uc740 Train\uc758 Initial\uc774 Mr\uc778 \uacbd\uc6b0\ub9cc True\uac00 \ub429\ub2c8\ub2e4.\n# \uc704\uc5d0 \ub450\uac1c\uac00 \ub3d9\uc2dc\uc5d0 \ucda9\uc871\ub418\ub294 \uacbd\uc6b0\ub9cc True\uac00 \ub418\ub824\uace0 (train['Age'].isnull())&(train['Initial']=='Mr') \ub85c \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4(\uc911\uac04\uc5d0 And(&) \ud655\uc778)\n\n#=== 2STEP ===#\n# train.loc[A,'B']\ub294 Train\uc758 A \ud589\uacfc B\uc5f4\uc5d0 \uc18d\ud558\ub294 \uac12\uc744 \ucc3e\uc544\uc90d\ub2c8\ub2e4.\n# \uc55e\uc5d0\uc11c Step\uc73c\ub85c \ucc3e\uc740 Index\ub4e4\uc744 Row\ub85c, \uc6b0\ub9ac\uac00 \ucc3e\uace0\uc790 \ud558\ub294 Age\ub97c \uc5f4\ub85c \uc9c0\uc815\ud574\uc90d\ub2c8\ub2e4.\n# --> train.loc[(train['Age'].isnull())&(train['Initial']=='Mr'),'Age']\n\n#=== 3STEP ===#\n# \ub4a4\uc5d0 '= 33' \ub85c \ub418\uc5b4\uc788\ub294 \uac83\uc740 \uc55e\uc5d0 \ud45c\uc2dc\ud55c \uac12(loc\uc5d0\uc11c \ucc3e\uc740 \uac12)\ub4e4\uc744 33\uc73c\ub85c \uce58\ud658\ud558\ub77c\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4.","2f944582":"train.isnull().sum()","e9a17023":"test.isnull().sum()","ef444ca2":"train['Embarked'].value_counts()\n# Embarked \ub294 Null value \uac00 2\uac1c\uc774\uace0, S \uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud0d1\uc2b9\uac1d\uc774 \uc788\uc5c8\uc73c\ubbc0\ub85c, \uac04\ub2e8\ud558\uac8c Null \uc744 S\ub85c \ucc44\uc6b0\uaca0\uc2b5\ub2c8\ub2e4.","7284963b":"train['Embarked'] = train['Embarked'].fillna('S')\n# dataframe \uc758 fillna method \ub97c \uc774\uc6a9\ud558\uba74 \uc27d\uac8c \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c inplace=True \ub85c \ud558\uba74 df_train \uc5d0 fillna \ub97c \uc2e4\uc81c\ub85c \uc801\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4","d2b4404d":"train","cdeebe01":"test.isnull().sum()","8f0e1f42":"train['Sex'] = train['Sex'].replace(['male','female'],[0,1])\ntest['Sex'] = test['Sex'].replace(['male','female'],[0,1])\n# Sex\uc758 Male ->0, Female ->1\ub85c \ubc14\uafd4\uc90d\ub2c8\ub2e4.","622d62ae":"train['Sex'] = train['Sex'].astype('category')\ntest['Sex'] = test['Sex'].astype('category')\n# \uc774 \uac12\uc740 Intiger\uac00 \uc544\ub2c8\ubbc0\ub85c, Category\ub85c Type \ubcc0\uacbd\ud574\uc90d\ub2c8\ub2e4.","8813c4c7":"train = pd.get_dummies(train, columns = ['Embarked'], prefix = 'Embarked')\ntest = pd.get_dummies(test, columns = ['Embarked'], prefix = 'Embarked')\nprint(train.shape, test.shape)\n# Embarked\ub294 One Hot Encoding\uc744 \ud574\ubcf4\ub3c4\ub85d \ud558\uc8e0, Prefix\ub97c Embarked\ub85c \uc815\ud574\uc11c \uc2e4\ud589\uc2dc\ucf1c\ubd05\ub2c8\ub2e4.\n# Train, Test \ubaa8\ub450 \uc798\ub418\uc5c8\ub294\uc9c0 shape\ub97c \ud65c\uc6a9\ud574 \uaf2d \ud655\uc778\ud574\ubcf4\uc138\uc694","525c93d8":"train_initial_groupby = train.groupby(['Initial'])['Survived'].mean().to_dict()\ntrain_initial_groupby\n# Target Encoding\uc740 \ud574\ub2f9 Column\uacfc y\uac12\uacfc\uc758 \uad00\uacc4\ub85c Encoding \ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.\n# \uc6b0\ub9ac\ub294 Initial\uacfc Survived\uac00 \uad00\uacc4\uac00 \uc788\ub2e4\uace0 \uc0dd\uac01\ud558\uace0, \ub450 \uac12\uc744 Pivotting \ud574\ubd05\uc2dc\ub2e4.\n# Pivotting\ud55c \uac12\uc744 mapping \uc2dc\ud0a4\uae30\uc704\ud574 to_dict()\ud568\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","98de6d02":"train['Initial_mean'] = train['Initial'].map(train_initial_groupby)\ntest['Initial_mean'] = test['Initial'].map(train_initial_groupby)\n# \uc704\uc5d0\uc11c to_dict\ud55c \uac12\ub4e4\uc744 train_initial_groupby\ub85c \uc9d1\uc5b4\ub123\uc5c8\ub294\ub370, \uc774\uac78 Map \ud568\uc218\ub97c \ud65c\uc6a9\ud574 \ubc14\uafd4\uc90d\ub2c8\ub2e4.","e6fb63f6":"train.head()","94a3589a":"train_initial_groupby = train.groupby(['Initial'])['Survived'].std().to_dict()\ntrain_initial_groupby\n# \uc774\ubc88\uc5d0\ub294 Target Encoding\uc744 std(\ud45c\uc900\ud3b8\ucc28)\ub97c \uac00\uc9c0\uace0 \ud574\ubd05\uc2dc\ub2e4","4edcfd2d":"train['Initial_std'] = train['Initial'].map(train_initial_groupby)\ntest['Initial_std'] = test['Initial'].map(train_initial_groupby)\n# \uc704\uc5d0\uc11c \ud588\ub358\uac83\uacfc \ub3d9\uc77c\ud558\uac8c \ud558\uc8e0?","06d46769":"train = train.drop(['Initial'],1)\ntest = test.drop(['Initial'],1)\n# \uc774\uc81c \ud544\uc694\uc5c6\ub294 Initial\uc740 \ub5a0\ub098\ubcf4\ub0b4\uba74 \ub429\ub2c8\ub2e4.","269a0f8a":"train.shape, test.shape","74bc337e":"train = train.drop(['Name', 'Ticket'],1)\ntest = test.drop(['Name', 'Ticket'],1)\n# Name\uacfc Ticket\uc740 FE\ud558\uae30 \uadc0\ucc2e\uc73c\ub2c8\uae4c...\ub0a0\ub824\ubc84\ub9bd\ub2c8\ub2e4.","8647bcca":"train.head()","2d99c94c":"test.head()","c7f60346":"train.drop(['PassengerId'],1).to_csv('train_dataset.csv', index=False)","a7d07b18":"y = train['Survived']\nX = train.drop(['Survived'],1)\n","a4e9b2ac":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, random_state = 30, test_size = 0.2)\n# \uc800\ud76c\uac00 \uc798 \uc54c\uace0\uc788\ub294 train_test_split\ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \ub098\ub220\uc90d\ub2c8\ub2e4.","8da0c68a":"print(X_train.shape, y_train.shape, X_valid.shape,  y_valid.shape)\n# \ub098\ub220\uc8fc\uace0 \ub09c \ub2e4\uc74c\uc5d0\ub294 \uc798 \ub098\ub220\uc84c\ub294\uc9c0 shape\ub97c \ucc0d\uc5b4\ubd05\ub2c8\ub2e4.","b2e35697":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\npred_train = model.predict(X_train)\npred_valid = model.predict(X_valid)\n\nscore_train = ((pred_train == y_train).mean())\nscore_valid = ((pred_valid == y_valid).mean())\n\nprint('train Score : ', score_train)\nprint('Validation Score : ', score_valid)","edd562d3":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\n\npred_train = model.predict(X_train)\npred_valid = model.predict(X_valid)\n\nscore_train = ((pred_train == y_train).mean())\nscore_valid = ((pred_valid == y_valid).mean())\n\nprint('train Score : ', score_train)\nprint('Validation Score : ', score_valid)\n","6c93bad7":"import lightgbm as lgb\nmodel = lgb.LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n                         importance_type='split', learning_rate=0.02, max_depth=6                         ,\n                         min_child_samples=10, min_child_weight=0.001, min_split_gain=0.0,\n                         n_estimators=200, n_jobs=-1, num_leaves=30, objective='binary',\n                         random_state=1, reg_alpha=0.0, reg_lambda=0.0, silent=True,\n                         subsample=1.0, subsample_for_bin=200000, subsample_freq=0)\nmodel.fit(X_train, y_train)\n\npred_train = model.predict(X_train)\npred_valid = model.predict(X_valid)\n\nscore_train = ((pred_train == y_train).mean())\nscore_valid = ((pred_valid == y_valid).mean())\n\nprint('train Score : ', score_train)\nprint('Validation Score : ', score_valid)","4461d14b":"import lightgbm as lgb\nmodel = lgb.LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n                         importance_type='split', learning_rate=0.02, max_depth=6                         ,\n                         min_child_samples=10, min_child_weight=0.001, min_split_gain=0.0,\n                         n_estimators=200, n_jobs=-1, num_leaves=30, objective='binary',\n                         random_state=1, reg_alpha=0.0, reg_lambda=0.0, silent=True,\n                         subsample=1.0, subsample_for_bin=200000, subsample_freq=0)\nmodel.fit(X_train, y_train)\n\npred_train = model.predict(X_train)\npred_valid = model.predict(X_valid)\n\nscore_train = ((pred_train == y_train).mean())\nscore_valid = ((pred_valid == y_valid).mean())\n\nprint('train Score : ', score_train)\nprint('Validation Score : ', score_valid)","d8e54da0":"pred_test = model.predict(test)\npred_test","44e22cc7":"submission['Survived'] = pred_test\nsubmission","cacfb859":"submission.to_csv('final_submission.csv', index=False)","580306b0":"----------","9b745b82":"# 1. Dataset \ud655\uc778","a7d3473a":"------------------","ec28148b":"# [EDA] Fare\n- Fare \ub294 \ud0d1\uc2b9\uc694\uae08\uc774\uba70, contious feature \uc785\ub2c8\ub2e4. \ud55c\ubc88 histogram \uc744 \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","4de1baeb":"-------------","aecd2c73":"--------","347a1cbf":"- \uc6b0\ub9ac\uac00 \ub2e4\ub8e8\ub294 \ubb38\uc81c\uc5d0\uc11c feature\ub294 Pclass, Age, SibSp, Parch, Fare \uc774\uba70, \uc608\uce21\ud558\ub824\ub294 target label \uc740 Survived \uc785\ub2c8\ub2e4.","b8ef6061":"# Target Encoding\n","f8c534ba":"# Feature engineering\n- \ubcf8\uaca9\uc801\uc778 feature engineering \uc744 \uc2dc\uc791\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n- \uac00\uc7a5 \uba3c\uc800, dataset \uc5d0 \uc874\uc7ac\ud558\ub294 null data\ub97c \ucc44\uc6b0\ub824\uace0 \ud569\ub2c8\ub2e4.\n- \uc544\ubb34 \uc22b\uc790\ub85c \ucc44\uc6b8 \uc218\ub294 \uc5c6\uace0, null data \ub97c \ud3ec\ud568\ud558\ub294 feature \uc758 statistics \ub97c \ucc38\uace0\ud558\uac70\ub098, \ub2e4\ub978 \uc544\uc774\ub514\uc5b4\ub97c \uc9dc\ub0b4\uc5b4 \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- null data \ub97c \uc5b4\ub5bb\uac8c \ucc44\uc6b0\ub290\ub0d0\uc5d0 \ub530\ub77c \ubaa8\ub378\uc758 \uc131\ub2a5\uc774 \uc88c\uc9c0\uc6b0\uc9c0\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc2e0\uacbd\uc368\uc918\uc57c\ud560 \ubd80\ubd84\uc785\ub2c8\ub2e4.\n- Feature engineering \uc740 \uc2e4\uc81c \ubaa8\ub378\uc758 \ud559\uc2b5\uc5d0 \uc4f0\ub824\uace0 \ud558\ub294 \uac83\uc774\ubbc0\ub85c, train \ubfd0\ub9cc\uc544\ub2d0\ub77c test \ub3c4 \ub611\uac19\uc774 \uc801\uc6a9\ud574\uc8fc\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc78a\uc9c0\ub9d9\uc2dc\ub2e4.\n- \uc6d0\ubb38 : https:\/\/kaggle-kr.tistory.com\/18?category=868316","39a27040":"--------","fb2bc6af":"-----------","01220763":"------------","17e2ea91":"- \ubcf4\uc2dc\ub2e4\uc2dc\ud53c, ticket number \ub294 \ub9e4\uc6b0 \ub2e4\uc591\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc5ec\uae30\uc11c \uc5b4\ub5a4 \ud2b9\uc9d5\uc744 \uc774\ub04c\uc5b4\ub0b4\uc11c \uc0dd\uc874\uacfc \uc5f0\uacb0\uc2dc\ud0ac \uc218 \uc788\uc744\uae4c\uc694?\n- \uc5ec\ub7ec\ubd84\uc774 \uc9c1\uc811 \ud55c\ubc88 \uc544\uc774\ub514\uc5b4\ub97c \ub0b4\ubcf4\uc138\uc694! \uc774\uac83\uc774 \ubcf8\uaca9\uc801\uc778 \uce90\uae00 \ub808\uc774\uc2a4\uc758 \uc2dc\uc791\uc810\uc785\ub2c8\ub2e4 ^^\n- \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \ud29c\ud1a0\ub9ac\uc5bc\uc774\ub2c8 \uc77c\ub2e8 ticket \uc740 \ub118\uae30\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud29c\ud1a0\ub9ac\uc5bc\uc744 \ub05d\ub0b8 \ud6c4, \uc5ec\ub7ec\ubd84\uc758 \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0a4\uae30 \uc704\ud574 ticket \uc5d0\uc11c \uc815\ubcf4\ub97c \uc774\ub04c\uc5b4\ub0b4\ub294 \uac83\ub3c4 \uc88b\uaca0\ub124\uc694!","ad39ccac":"- \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \ub530\ub978 Age\uc758 histogram \uc744 \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","478eb1b7":"------------------","00611eeb":"# [EDA] Age\n- \uc774\ubc88\uc5d0\ub294 Age feature \ub97c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.","40d65f39":"-----------","41fb1282":"- \ub9cc\uc57d \ub370\uc774\ud130 \uc0ac\uc774\uc5b8\uc2a4, \uba38\uc2e0\ub7ec\ub2dd \ub610\ub294 \uce90\uae00\uc5d0\uc11c \uc5b4\ub5a4 \uac83\uc744 \ud574\uc57c\ud558\ub294 \uc9c0 \uc798 \ubaa8\ub974\ub294 newbie \ub77c\uba74, \ud0c0\uc774\ud0c0\ub2c9\uc744 \ud558\uc2dc\ub294 \uac8c \uac00\uc7a5 \uc88b\uc740 \uc120\ud0dd\uc785\ub2c8\ub2e4.\n- \ud0c0\uc774\ud0c0\ub2c9\uc740 \uc544\uc2dc\ub2e4\uc2dc\ud53c, \uc0ac\uc0c1 \ucd5c\ub300 \ud574\ub09c\uc0ac\uace0\ub85c\uc368, 1,500\uc5ec\uba85\uc758 \ud76c\uc0dd\uc790\uac00 \uc0dd\uacbc\uc2b5\ub2c8\ub2e4.\n- \uc6b0\ub9ac\ub294 \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c \ud0c0\uc774\ud0c0\ub2c9\uc5d0 \ud0d1\uc2b9\ud55c \uc0ac\ub78c\ub4e4\uc758 \uc2e0\uc0c1\uc815\ubcf4\ub97c \ud65c\uc6a9\ud558\uc5ec, \uc2b9\uc120\ud55c \uc0ac\ub78c\ub4e4\uc758 \uc0dd\uc874\uc5ec\ubd80\ub97c \uc608\uce21\ud558\ub294 \ubaa8\ub378\uc744 \uc0dd\uc131\ud560 \uac83\uc785\ub2c8\ub2e4.\n- \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \uc5ec\ub7ec \uc2dc\uac01\ud654 \ub3c4\uad6c(matplotlib, seaborn, plotly), \ub370\uc774\ud130 \ubd84\uc11d \ub3c4\uad6c(pandas, numpy), \uba38\uc2e0 \ub7ec\ub2dd \ub3c4\uad6c(sklearn)\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.\n- \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc740 \uce90\uae00\uc5d0 \uc788\ub294 \uc5ec\ub7ec \ucee4\ub110\ub4e4\uc744 \ucc38\uc870\ud558\uc5ec \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \uacf5\ubd80\ud558\uc2e0 \ub4a4\uc5d0, \uce90\uae00 \ud0c0\uc774\ud0c0\ub2c9 \ucef4\ud37c\ud2f0\uc158\uc5d0 \uc874\uc7ac\ud558\ub294 \uc5ec\ub7ec \ub2e4\ub978 \ucee4\ub110\ub4e4\uc744 \ub354 \uacf5\ubd80\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4.","100a3888":"\uc55e\uc73c\ub85c \uc6b0\ub9ac\uac00 \ud574\uc57c\ud560 \ud504\ub85c\uc138\uc2a4\ub294 \ub300\ub7b5 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4.\n\n1. \ub370\uc774\ud130\uc14b \ud655\uc778 - \ub300\ubd80\ubd84\uc758 \uce90\uae00 \ub370\uc774\ud130\ub4e4\uc740 \uc798 \uc815\uc81c\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uac00\ub054 null data\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\uace0, \ud5a5\ud6c4 \uc218\uc815\ud569\ub2c8\ub2e4.\n2. \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d(exploratory data analysis) - \uc5ec\ub7ec feature \ub4e4\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \ubd84\uc11d\ud558\uace0, feature \ub4e4 \uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc2dc\uac01\ud654 \ud234\uc744 \uc0ac\uc6a9\ud558\uc5ec insight\ub97c \uc5bb\uc2b5\ub2c8\ub2e4.\n3. feature engineering - \ubaa8\ub378\uc744 \uc138\uc6b0\uae30\uc5d0 \uc55e\uc11c, \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc77c \uc218 \uc788\ub3c4\ub85d feature \ub4e4\uc744 engineering \ud569\ub2c8\ub2e4. one-hot encoding, class\ub85c \ub098\ub204\uae30, \uad6c\uac04\uc73c\ub85c \ub098\ub204\uae30, \ud14d\uc2a4\ud2b8 \ub370\uc774\ud130 \ucc98\ub9ac \ub4f1\uc744 \ud569\ub2c8\ub2e4.\n4. model \ub9cc\ub4e4\uae30 - sklearn \uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub378\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \ud30c\uc774\uc36c\uc5d0\uc11c \uba38\uc2e0\ub7ec\ub2dd\uc744 \ud560 \ub54c\ub294 sklearn \uc744 \uc0ac\uc6a9\ud558\uba74 \uc218\ub9ce\uc740 \uc54c\uace0\ub9ac\uc998\uc744 \uc77c\uad00\ub41c \ubb38\ubc95\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb3c\ub860 \ub525\ub7ec\ub2dd\uc744 \uc704\ud574 tensorflow, pytorch \ub4f1\uc744 \uc0ac\uc6a9\ud560 \uc218 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n5. \ubaa8\ub378 \ud559\uc2b5 \ubc0f \uc608\uce21 - trainset \uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a8 \ud6c4, testset \uc744 \uac00\uc9c0\uace0 prediction \ud569\ub2c8\ub2e4.\n6. \ubaa8\ub378 \ud3c9\uac00 - \uc608\uce21 \uc131\ub2a5\uc774 \uc6d0\ud558\ub294 \uc218\uc900\uc778\uc9c0 \ud310\ub2e8\ud569\ub2c8\ub2e4. \ud480\ub824\ub294 \ubb38\uc81c\uc5d0 \ub530\ub77c \ubaa8\ub378\uc744 \ud3c9\uac00\ud558\ub294 \ubc29\uc2dd\ub3c4 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ud559\uc2b5\ub41c \ubaa8\ub378\uc774 \uc5b4\ub5a4 \uac83\uc744 \ud559\uc2b5\ud558\uc600\ub294 \uc9c0 \ud655\uc778\ud574\ubd05\ub2c8\ub2e4.","ad1c7da8":"# Training","f995cdb4":"- \ud30c\uc774\uc36c\uc5d0\uc11c \ud14c\uc774\ube14\ud654 \ub41c \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \ub370 \uac00\uc7a5 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\uc73c\uba70, \ub9ce\uc774 \uc4f0\uc774\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 pandas \uc785\ub2c8\ub2e4.\n- \uc6b0\ub9ac\ub294 pandas \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\uc14b\uc758 \uac04\ub2e8\ud55c \ud1b5\uacc4\uc801 \ubd84\uc11d \ubd80\ud130, \ubcf5\uc7a1\ud55c \ucc98\ub9ac\ub4e4\uc744 \uac04\ub2e8\ud55c \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- \ud30c\uc774\uc36c\uc73c\ub85c \ub370\uc774\ud130\ubd84\uc11d\uc744 \ud55c\ub2e4\uace0 \ud558\uba74 \ubc18\ub4dc\uc2dc \ub2a5\uc219\ud574\uc838\uc57c \ud560 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc774\ub2c8, \uc5ec\ub7ec \ucee4\ub110\ub4e4\uc744 \uacf5\ubd80\ud558\uc2dc\uba74\uc11c \uc0ac\uc6a9\ubc95\uc5d0 \uc775\uc219\ud574\uc9c0\ub3c4\ub85d \ubc18\ubcf5 \ub610 \ubc18\ubcf5\ud558\uc2dc\uae38 \uad8c\uc7a5\ud569\ub2c8\ub2e4.\n- \uce90\uae00\uc5d0\uc11c \ub370\uc774\ud130\uc14b\uc740 \ubcf4\ud1b5 train, testset \uc73c\ub85c \ub098\ub258\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","21aa3bc4":"---------------","bde34457":"- \ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc740 \uc720\ud55c\ub2d8\uc758 \ucee4\ub110 https:\/\/kaggle-kr.tistory.com\/18?category=868316#3_3 \uc744 \uc62e\uaca8\uc628 \uc790\ub8cc\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \uc0ac\ud56d\uc740 \ud574\ub2f9 \ud398\uc774\uc9c0\ub97c \ucc38\uc870\ud558\uc138\uc694!","ebc5e51b":"--------------","6192613d":"---------------------------------------------------------------------","76485f85":"----\n# Conclusion \n- \uc815\ub9d0 \uc218\uace0\ud558\uc168\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec\ubd84\uc740 titanic dataset \uc744 \uac00\uc9c0\uace0 data science \ub97c \uacbd\ud5d8\ud574\ubcf4\uc168\uc2b5\ub2c8\ub2e4.\n- \uc774\uac78\ub85c \ub05d\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc55e\uc73c\ub85c \ubc30\uc6b8 \uac83\uc774 \ub108\ubb34\ub098 \ubb34\uad81\ubb34\uc9c4\ud569\ub2c8\ub2e4.\n- \uc880 \ub354 \ucc38\uc2e0\ud55c feature engineering, \uba38\uc2e0 \ub7ec\ub2dd \ubaa8\ub378 hyperparameter tunning, ensembling \ub4f1, \ubb34\uad81\ubb34\uc9c4\ud569\ub2c8\ub2e4..\uafb8\uc900\ud788 \ucee4\ub110\uacf5\ubd80\ub97c \ud558\uc2dc\uba74 \uc2e4\ub825\uc774 \uafb8\uc900\ud788 \ub298\uac81\ub2c8\ub2e4.\n- \ud3ec\uae30\ud558\uc9c0 \ub9c8\uc2dc\uace0 \uc7ac\ubc0c\uac8c \ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4\n","9adfb1b2":"# 1.1 Null data check","41c3c58e":"# [EDA] Both Sex and Pclass\n- \uc774\ubc88\uc5d0\ub294 Sex, Pclass \ub450\uac00\uc9c0\uc5d0 \uad00\ud558\uc5ec \uc0dd\uc874\uc774 \uc5b4\ub5bb\uac8c \ub2ec\ub77c\uc9c0\ub294 \uc9c0 \ud655\uc778\ud574 \ubd05\uc2dc\ub2e4\n- seaborn \uc758 factorplot \uc744 \uc774\uc6a9\ud558\uba74, \uc190\uc27d\uac8c 3\uac1c\uc758 \ucc28\uc6d0\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9c4 \uadf8\ub798\ud504\ub97c \uadf8\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8c246954":"# [EDA] Family - SibSp(\ud615\uc81c \uc790\ub9e4) + Parch(\ubd80\ubaa8, \uc790\ub140)\n- SibSp\uc640 Parch\ub97c \ud569\ud558\uba74 Family \uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. Family \ub85c \ud569\uccd0\uc11c \ubd84\uc11d\ud574\ubd05\uc2dc\ub2e4","2e0d241a":"# [EDA] Sex\n","7e3d6dc4":"# Model Selection","1387900d":"# Fill Null in Embarked","9a0d1e4b":"# Data Spilting","6cdd6c37":"# Prediction and Submission","f413dd44":"# [EDA] Ticket\n- \uc774 feature \ub294 NaN \uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8 string data \uc774\ubbc0\ub85c \uc6b0\ub9ac\uac00 \uc5b4\ub5a4 \uc791\uc5c5\ub4e4\uc744 \ud574\uc8fc\uc5b4\uc57c \uc2e4\uc81c \ubaa8\ub378\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \uc774\ub97c \uc704\ud574\uc120 \uc0ac\uc2e4 \uc544\uc774\ub514\uc5b4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.","680b809d":"# [EDA] Embarked\n- Embarked \ub294 \ud0d1\uc2b9\ud55c \ud56d\uad6c\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\n- \uc704\uc5d0\uc11c \ud574\uc654\ub358 \uac83\uacfc \ube44\uc2b7\ud558\uac8c \ud0d1\uc2b9\ud55c \uacf3\uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc744 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","f2864337":"## [\ucc38\uace0] Null\uac12\uc744 \ucc44\uc6b0\ub294 \ub2e4\ub978 \ubc29\ubc95\n- \uc5ec\uae30\uc120 \uac04\ub2e8\ud558\uac8c Null\uc744 \ucc44\uc6e0\uc9c0\ub9cc, \uc880 \ub354 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc4f4 \uc608\uc2dc\ub4e4\uc774 \ub2e4\ub978 \ucee4\ub110\uc5d0 \uc874\uc7ac\ud569\ub2c8\ub2e4\n- https:\/\/www.kaggle.com\/yassineghouzam\/titanic-top-4-with-ensemble-modeling \ubcf4\uc2dc\uba74\uc11c \uacf5\ubd80\ud574\ubcf4\uc138\uc694!\n- \uc774 \uc678\uc5d0\ub3c4 \ub2e4\ub978 \uce90\uae00\ub7ec\ub4e4\uc758 \ucee4\ub110\uc744 \ubcf4\uba70 \uc5ec\ub7ec \ucc38\uc2e0\ud55c \uc544\uc774\ub514\uc5b4\ub97c \uc0b4\ud3b4\ubcf4\uc138\uc694!","a4fcaa46":"# [EDA] Cabin\n- \uc774 feature \ub294 NaN \uc774 \ub300\ub7b5 80% \uc774\ubbc0\ub85c, \uc0dd\uc874\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc911\uc694\ud55c \uc815\ubcf4\ub97c \uc5bb\uc5b4\ub0b4\uae30\uac00 \uc27d\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.\n- \uadf8\ub7ec\ubbc0\ub85c \uc6b0\ub9ac\uac00 \uc138\uc6b0\ub824\ub294 \ubaa8\ub378\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\uc9c0 \uc54a\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","5d8256e3":"- survival :\t\uc0dd\uc874\uc5ec\ubd80(target label \uc784)(1,0 \uc73c\ub85c \ud45c\ud604\ub428) \/\/\tinteger\n- Pclass :\t\ud2f0\ucf13\uc758 \ud074\ub798\uc2a4\t1 = 1st, 2 = 2nd, 3 = 3rd \/\/ integer\n- sex :\t\uc131\ubcc4(male, female \ub85c \uad6c\ubd84\ub428) \/\/\tstring\n- Age :\t\ub098\uc774 \/\/\tcontinuous\tinteger\n- sibSp :\t\ud568\uaed8 \ud0d1\uc2b9\ud55c \ud615\uc81c\uc640 \ubc30\uc6b0\uc790\uc758 \uc218 \/\/\tquantitative\tinteger\n- parch :\t\ud568\uaed8 \ud0d1\uc2b9\ud55c \ubd80\ubaa8, \uc544\uc774\uc758 \uc218 \/\/\tquantitative\tinteger\n- ticket :\t\ud2f0\ucf13 \ubc88\ud638 \/\/\talphabat + integer\tstring\n- fare :\t\ud0d1\uc2b9\ub8cc \/\/\tcontinuous\tfloat\n- cabin :\t\uac1d\uc2e4 \ubc88\ud638 \/\/\talphabat + integer\tstring\n- embared :\t\ud0d1\uc2b9 \ud56d\uad6c \/\/\tC = Cherbourg, Q = Queenstown, S = Southampton\tstring","b7ce2cfe":"--------------\n--------------","214c7067":"------------------","b619e76a":"-----","476d9036":"# [EDA] Pclass, Sex, Age\n- \uc9c0\uae08\uae4c\uc9c0 \ubcf8, Sex, Pclass, Age, Survived \ubaa8\ub450\uc5d0 \ub300\ud574\uc11c \ubcf4\uace0\uc2f6\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc27d\uac8c \uadf8\ub824\uc8fc\ub294 \uac83\uc774 seaborn \uc758 violinplot \uc785\ub2c8\ub2e4.\n- x \ucd95\uc740 \uc6b0\ub9ac\uac00 \ub098\ub220\uc11c \ubcf4\uace0\uc2f6\uc5b4\ud558\ub294 case(\uc5ec\uae30\uc120 Pclass, Sex) \ub97c \ub098\ud0c0\ub0b4\uace0, y \ucd95\uc740 \ubcf4\uace0 \uc2f6\uc5b4\ud558\ub294 distribution(Age) \uc785\ub2c8\ub2e4.\n- \ud55c\ubc88 \uadf8\ub824\ubcf4\uaca0\uc2b5\ub2c8\ub2e4","f9aae171":"https:\/\/kaggle-kr.tistory.com\/17?category=868316#1.1-Null-data-check","4794d5e6":"# [EDA] Pclass\n\n- \uba3c\uc800 Pclass \uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Pclass \ub294 ordinal, \uc11c\uc218\ud615 \ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uce74\ud14c\uace0\ub9ac\uc774\uba74\uc11c, \uc21c\uc11c\uac00 \uc788\ub294 \ub370\uc774\ud130 \ud0c0\uc785\uc785\ub2c8\ub2e4.\n- \uba3c\uc800 Pclass \uc5d0 \ub530\ub978 \uc0dd\uc874\ub960\uc758 \ucc28\uc774\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc5d1\uc140\uc758 \ud53c\ubc97 \ucc28\ud2b8\uc640 \uc720\uc0ac\ud55c \uc791\uc5c5\uc744 \ud558\uac8c \ub418\ub294\ub370, pandas dataframe \uc5d0\uc11c\ub294 groupby \ub97c \uc0ac\uc6a9\ud558\uba74 \uc27d\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c pivot \uc774\ub77c\ub294 \uba54\uc18c\ub4dc\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n- 'Pclass', 'Survived' \ub97c \uac00\uc838\uc628 \ud6c4, pclass \ub85c \ubb36\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uace0 \ub098\uba74 \uac01 pclass \ub9c8\ub2e4 0, 1 \uc774 count\uac00 \ub418\ub294\ub370, \uc774\ub97c \ud3c9\uade0\ub0b4\uba74 \uac01 pclass \ubcc4 \uc0dd\uc874\ub960\uc774 \ub098\uc635\ub2c8\ub2e4\n- \uc544\ub798\uc640 \uac19\uc774 count() \ub97c \ud558\uba74, \uac01 class \uc5d0 \uba87\uba85\uc774 \uc788\ub294 \uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc73c\uba70, sum() \uc744 \ud558\uba74, 216 \uba85\uc911 \uc0dd\uc874\ud55c(survived=1)\uc0ac\ub78c\uc758 \ucd1d\ud569\uc744 \uc8fc\uac8c \ub429\ub2c8\ub2e4","dc649ada":"# 1.2 Target Label \ud655\uc778\n- target label \uc774 \uc5b4\ub5a4 distribution \uc744 \uac00\uc9c0\uace0 \uc788\ub294 \uc9c0 \ud655\uc778\ud574\ubd10\uc57c \ud569\ub2c8\ub2e4.\n- \uc9c0\uae08 \uac19\uc740 binary classification \ubb38\uc81c\uc758 \uacbd\uc6b0\uc5d0\uc11c, 1\uacfc 0\uc758 \ubd84\ud3ec\uac00 \uc5b4\ub5a0\ub0d0\uc5d0 \ub530\ub77c \ubaa8\ub378\uc758 \ud3c9\uac00 \ubc29\ubc95\uc774 \ub2ec\ub77c \uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n","6fed1fc6":"------------","8b0fc642":"# Change Initial, Embarked and Sex (string to numerical)","c064967e":"# Fill Null in Age using title\n- Age \uc5d0\ub294 null data\uac00 177\uac1c\ub098 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc544\uc774\ub514\uc5b4\uac00 \uc788\uc744 \uac83\uc778\ub370, \uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 title + statistics \ub97c \uc0ac\uc6a9\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n- \uc601\uc5b4\uc5d0\uc11c\ub294 Miss, Mrr, Mrs \uac19\uc740 title\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uac01 \ud0d1\uc2b9\uac1d\uc758 \uc774\ub984\uc5d0\ub294 \uaf2d \uc774\ub7f0 title \uc774 \ub4e4\uc5b4\uac00\uac8c \ub418\ub294\ub370 \uc774\ub97c \uc0ac\uc6a9\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n- pandas series \uc5d0\ub294 data \ub97c string \uc73c\ub85c \ubc14\uafd4\uc8fc\ub294 str method, \uac70\uae30\uc5d0 \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc801\uc6a9\ud558\uac8c \ud574\uc8fc\ub294 extract method\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec title \uc744 \uc27d\uac8c \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. title\uc744 Initial column\uc5d0 \uc800\uc7a5\ud558\uaca0\uc2b5\ub2c8\ub2e4"}}