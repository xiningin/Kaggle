{"cell_type":{"9dfa3118":"code","71e3df5d":"code","e647ce6f":"code","694993d2":"code","6af33b1b":"code","f80ab4df":"code","9316b667":"code","f228b49c":"code","239fd10e":"code","e23eab16":"code","2c3a60bc":"code","048319c6":"code","ac46b310":"code","e25a30da":"code","f55a1340":"code","6f22a7ef":"code","8c70bbd3":"code","e7876d13":"code","9fe14349":"code","9717ff09":"code","82ccef7d":"code","b5199d69":"code","6b261c54":"code","ffc74eae":"code","a096d243":"code","758f1d2a":"code","16b1ab7b":"code","77ece542":"code","e5436225":"code","7a78f94a":"code","81748557":"code","0e0f950c":"code","156dda59":"code","a0e373d4":"code","64dc7894":"code","f162f2e4":"code","d4ebecf2":"code","4328f63e":"code","26a01620":"code","3bf3353d":"code","1e5df8a2":"code","0479cc4e":"markdown","9c64efef":"markdown","31d65886":"markdown","7b8060ea":"markdown","a3375dc4":"markdown","a4bd3a1d":"markdown","b934f68b":"markdown","705ab40d":"markdown"},"source":{"9dfa3118":"# for preprocessing\nimport pandas as pd\nimport numpy as np\n\n# for Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# for normalizaion\nfrom sklearn.preprocessing import StandardScaler\n\n# Evaluate errors (cost function)\nfrom sklearn.metrics import mean_absolute_error , mean_squared_error , median_absolute_error , r2_score\n\n# for model building\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression , SGDRegressor ,Ridge , Lasso","71e3df5d":"#load dataset \ndf=pd.read_csv(r'..\/input\/usa-housing\/USA_Housing.csv')\ndf.head(10)","e647ce6f":"df.shape","694993d2":"df.info()","6af33b1b":"df.describe()","f80ab4df":"df.isnull().sum()","9316b667":"df.duplicated()","f228b49c":"sns.pairplot(df)","239fd10e":"plt.figure(figsize=(10,7))\nsns.heatmap(df.corr() , annot=True ,cmap='Blues')","e23eab16":"#preproccing data for building model \ny=df['Price'].values\nX=df.iloc[:,:-2].values\n\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.3, random_state=42)","2c3a60bc":"scaler=StandardScaler()\n\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)\n","048319c6":"#model buliding\n\nregressor=LinearRegression(normalize=True)\nregressor.fit(X_train , y_train)","ac46b310":"# accurancy score\nprint('Training data accurancy score :',regressor.score(X_train , y_train) )\nprint('Testing data accurancy score :',regressor.score(X_test,y_test) )","e25a30da":"coef=pd.DataFrame(data=regressor.coef_, index=df.iloc[:,:-2].columns,columns=['Coefficients'])\nprint('The Coefficient of each column  :')\ncoef","f55a1340":"print('The Intercept with y-axis  :',regressor.intercept_)","6f22a7ef":"# predection \ny_pred=regressor.predict(X_test)","8c70bbd3":"# Regression results\nreal_data=pd.DataFrame(y_test , columns=['Y_real'])\ndata_fin=real_data.assign(Y_predicted=y_pred)\ndata_fin","e7876d13":"plt.scatter(y_test,y_pred , color='lightblue' )","9fe14349":"sns.regplot(y_test,y_pred  ,scatter_kws={'color' : 'lightblue' } , line_kws={'color' : 'darkblue'})","9717ff09":"#Cost function evaluation \nprint('Mean Absolute Error :',mean_absolute_error(y_test,y_pred))\nprint('Median Absolute Error :',median_absolute_error(y_test,y_pred))\nprint('Mean Squared Error :',mean_squared_error(y_test,y_pred))","82ccef7d":"# model building\nsgd_regressor=SGDRegressor(n_iter_no_change=250 , eta0=0.0001 , penalty=None ,max_iter=100000 )\nsgd_regressor.fit(X_train , y_train)","b5199d69":"# accurancy score\nprint(sgd_regressor.score(X_train, y_train))\nprint(sgd_regressor.score(X_test,y_test))","6b261c54":"# predection \ny_sgdPred=sgd_regressor.predict(X_test)","ffc74eae":"# Regression Results\nSGD_real_data=pd.DataFrame(data=y_test , columns=['Y_real'])\nSGD_fin_data=SGD_real_data.assign(Y_predicted=y_sgdPred)\nSGD_fin_data","a096d243":"plt.scatter(y_test,y_sgdPred , c='lightblue')","758f1d2a":"sns.regplot(y_test,y_sgdPred ,scatter_kws={'color' : 'lightblue'} , line_kws={'color' : 'darkblue'})","16b1ab7b":"#Cost function evaluation \n\nprint('Mean Absolute Error :',mean_absolute_error(y_test,y_sgdPred))\nprint('Median Absolute Error :',median_absolute_error(y_test,y_sgdPred))\nprint('Mean Squared Error :',mean_squared_error(y_test,y_sgdPred))","77ece542":"# model building\nridge_regressor = Ridge(alpha=0.5, random_state=42) \nridge_regressor.fit(X_train,y_train)","e5436225":"# accurancy score\nprint(ridge_regressor.score(X_train, y_train))\nprint(ridge_regressor.score(X_test,y_test))","7a78f94a":"# predection \ny_ridge_predict=ridge_regressor.predict(X_test)","81748557":"# Regression Results\nridge_real_data=pd.DataFrame(data=y_test , columns=['Y_real'])\nridge_fin_data=ridge_real_data.assign(Y_predicted=y_ridge_predict)\nridge_fin_data","0e0f950c":"plt.scatter(y_test,y_ridge_predict , c='lightblue')","156dda59":"sns.regplot(y_test,y_ridge_predict ,scatter_kws={'color' : 'lightblue'} , line_kws={'color' : 'darkblue'})","a0e373d4":"#Cost function evaluation \n\nprint('Mean Absolute Error :',mean_absolute_error(y_test,y_ridge_predict))\nprint('Median Absolute Error :',median_absolute_error(y_test,y_ridge_predict))\nprint('Mean Squared Error :',mean_squared_error(y_test,y_ridge_predict))","64dc7894":"lasso_regressor=Lasso(alpha=5 , random_state=42)\nlasso_regressor.fit(X_train,y_train)","f162f2e4":"# accurancy score\nprint(lasso_regressor.score(X_train, y_train))\nprint(lasso_regressor.score(X_test,y_test))","d4ebecf2":"# predection \ny_lassoPred=lasso_regressor.predict(X_test)\n","4328f63e":"lasso_real_data=pd.DataFrame(y_test,columns=['Y_real'])\nlasso_fin_data=lasso_real_data.assign(Y_predicted=y_lassoPred)\nlasso_fin_data","26a01620":"plt.scatter(y_test,y_lassoPred,c='lightblue')","3bf3353d":"sns.regplot(y_test,y_lassoPred , scatter_kws={'color':'lightblue'} , line_kws={'color':'darkblue'})","1e5df8a2":"#Cost function evaluation \n\nprint('Mean Absolute Error :',mean_absolute_error(y_test,y_lassoPred))\nprint('Median Absolute Error :',median_absolute_error(y_test,y_lassoPred))\nprint('Mean Squared Error :',mean_squared_error(y_test,y_lassoPred))","0479cc4e":"### Importing libraries","9c64efef":"### Lasso regression","31d65886":"# Predicting prices of houses' dataset using different types of regression algorithms\n\n*  #### 1- Linear Regression\n*  #### 2- Gradient Descent\n*  #### 3- Ridge regression\n*  #### 4- Lasso Regression","7b8060ea":"### Linear Regression","a3375dc4":"### imprting and proccessing data","a4bd3a1d":"### Gradient Descent","b934f68b":"### Ridge regression","705ab40d":"### Visualization\n"}}