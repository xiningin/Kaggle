{"cell_type":{"5c1cc5a5":"code","6b7a7c19":"code","fb65d077":"code","0f7cec0a":"code","a6517d8a":"code","7b885fad":"code","032b9af8":"code","04eac825":"code","36ffec91":"code","617f13f1":"code","42e71687":"code","058c262c":"code","00644c28":"code","15231e57":"code","ea7c0838":"code","530b5d08":"code","32e999e3":"code","97fd9b50":"code","dae0b7fb":"code","b46171bf":"code","55af4be0":"code","d2e06c7d":"code","222bfdff":"code","4e78c164":"code","7a93d45d":"markdown","08dfffdc":"markdown","a17b9bf9":"markdown","a207c13c":"markdown","6fb067ef":"markdown","dd32108f":"markdown","1ea7ef8a":"markdown"},"source":{"5c1cc5a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b7a7c19":"# linear algebra\nimport numpy as np \n\n# data processing\nimport pandas as pd \n\n# data visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","fb65d077":"df=pd.read_csv(\"..\/input\/churn-for-bank-customers\/churn.csv\")","0f7cec0a":"df.head()","a6517d8a":"df.shape","7b885fad":"df.isnull().sum()","032b9af8":"df['Exited'].plot.hist( rwidth=0.9,color='#FDCDA4')","04eac825":"df['Age'].plot.hist(grid=False, bins=100, rwidth=0.9,color='#FDCDA4')\n","36ffec91":"sns.countplot(x=\"Geography\",hue=\"Exited\",data=df)","617f13f1":"countplt, ax = plt.subplots(figsize = (16,8))\nax=sns.countplot(x=\"Age\",hue=\"Exited\",data=df)","42e71687":"from sklearn.preprocessing import LabelEncoder\nLE = LabelEncoder()\ndf['Geography'] = LE.fit_transform(df['Geography'])\ndf['Gender'] = LE.fit_transform(df['Gender'])\n","058c262c":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\ndf['Balance'] = scaler.fit_transform(df[['Balance']])\ndf['EstimatedSalary'] = scaler.fit_transform(df[['EstimatedSalary']])\ndf['Age'] = scaler.fit_transform(df[['Age']])","00644c28":"df.corr()","15231e57":"data=df.drop([\"RowNumber\",\"CustomerId\",\"Surname\"], axis=1)\ndata.head()","ea7c0838":"features=data.drop('Exited',axis=1)\nlabele=data[\"Exited\"]","530b5d08":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(features, labele, test_size=0.33,random_state=42 )","32e999e3":"from sklearn.tree import DecisionTreeClassifier\nclf =DecisionTreeClassifier(max_depth=5)","97fd9b50":"from sklearn.ensemble import  VotingClassifier ","dae0b7fb":"clf.fit(X_train, y_train)","b46171bf":"clf.score(X_test,y_test)","55af4be0":"from sklearn.metrics import confusion_matrix\npred=clf.predict(X_test)\n\ns=confusion_matrix(y_test, pred)\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (16,9))\nsn.heatmap(s, annot=True, fmt=\"d\")","d2e06c7d":"from catboost import CatBoostClassifier\n\nclf1 = CatBoostClassifier(\n    iterations=2000, \n    learning_rate=0.01, \n    loss_function='CrossEntropy'\n)\n\n\nclf1.fit(X_train, y_train, \n        eval_set=(X_test, y_test), \n        verbose=False\n)\n\nprint('CatBoost model is fitted: ' + str(clf1.is_fitted()))\nprint('CatBoost model parameters:')\nprint(clf.get_params())\nclf1.score(X_test, y_test)","222bfdff":"from sklearn.metrics import confusion_matrix\npred=clf1.predict(X_test)\n\ns=confusion_matrix(y_test, pred)\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (16,9))\nsn.heatmap(s, annot=True, fmt=\"d\")","4e78c164":"eclf1 = VotingClassifier(estimators=[\n('lr', clf), ('rf', clf1)],voting='hard',weights=[2,3],flatten_transform=True) \neclf1 = eclf1.fit(X_train , y_train )\nprint(eclf1.score(X_test,y_test) )","7a93d45d":"Libraries","08dfffdc":"![](https:\/\/fairmaster-konzept.com\/wp-content\/uploads\/2018\/03\/bank-845x321.jpg)","a17b9bf9":"# We note that the younger ages, most of them have left the bank, but this indicator will not be decisive because the sample is unbalanced","a207c13c":"import data","6fb067ef":"*data review*","dd32108f":"**The sample is not balanced and this will affect the final result for sure","1ea7ef8a":"no missing values"}}