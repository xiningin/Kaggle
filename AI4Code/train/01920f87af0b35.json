{"cell_type":{"93d16e18":"code","5a0e3fb3":"code","8988ba57":"code","c613fb6b":"code","0398208e":"code","bdde302e":"code","02970b57":"code","581b6435":"code","6bf466eb":"code","363215a1":"code","997bae2c":"code","70a57ba4":"code","1a730c9e":"code","f8e3274f":"code","40b48cc0":"code","390f5ee5":"code","0dd06444":"code","6d7756a9":"code","d584887f":"code","36b4452f":"code","2543d21b":"code","8447cee6":"code","f6334345":"markdown","71c857a7":"markdown","f65b8849":"markdown","510e6b78":"markdown","8a4b0f48":"markdown","c0a520e4":"markdown","2a9f0431":"markdown","5aadfc4c":"markdown"},"source":{"93d16e18":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n%matplotlib inline","5a0e3fb3":"bottle = pd.read_csv(\"\/kaggle\/input\/calcofi\/bottle.csv\")\nbottle = bottle[[\"Depthm\", \"T_degC\", \"O2ml_L\", \"Salnty\"]]\nbottle.columns = [\"Depth\", \"Temp\", \"O2 Level\", \"Salinity\"]","8988ba57":"bottle.info()","c613fb6b":"bottle.describe()","0398208e":"sns.heatmap(bottle.corr(), cmap = \"coolwarm\")","bdde302e":"sns.pairplot(bottle)","02970b57":"sns.distplot(bottle[\"Depth\"])\n","581b6435":"from sklearn.model_selection import train_test_split\n\nbottle_train, bottle_test = train_test_split(bottle, test_size = 0.2, random_state = 42)\n\n","6bf466eb":"from sklearn.base import BaseEstimator, TransformerMixin\n\nclass NaRemover(BaseEstimator, TransformerMixin):\n    def __init__(self): # no *args or **kargs\n        pass\n    def fit(self, X, y=None):\n        return self # nothing else to do\n    def transform(self, X):\n        return X.dropna()\n","363215a1":"from sklearn.pipeline import Pipeline\n\nfull_pipeline = Pipeline([\n    ('remove_na', NaRemover())\n])\n","997bae2c":"bottle_prepared = full_pipeline.fit_transform(bottle_train)\nbottle_labels = bottle_prepared[\"O2 Level\"].copy()\n\nbottle_prepared = bottle_prepared.drop(\"O2 Level\", axis=1)","70a57ba4":"from sklearn.preprocessing import StandardScaler \nscaler = StandardScaler()\nscaler.fit_transform(bottle_prepared)","1a730c9e":"pd.DataFrame(bottle_prepared).info()\npd.DataFrame(bottle_labels).info()","f8e3274f":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()","40b48cc0":"from sklearn.model_selection import cross_val_score\n\nscores = cross_val_score(lin_reg, bottle_prepared, bottle_labels, scoring=\"neg_mean_squared_error\", cv=10)\nlin_rmse_scores = np.sqrt(-scores)\n\ndef display_scores(scores):\n    print(\"Scores:\", scores)\n    print(\"Mean:\", scores.mean())\n    print(\"Standard deviation:\", scores.std())\n\ndisplay_scores(lin_rmse_scores)\n\n","390f5ee5":"lin_reg.fit(bottle_prepared, bottle_labels)","0dd06444":"from sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()","6d7756a9":"scores = cross_val_score(tree_reg, bottle_prepared, bottle_labels, scoring=\"neg_mean_squared_error\", cv=10)\ntree_rmse_scores = np.sqrt(-scores)\n\ndef display_scores(scores):\n    print(\"Scores:\", scores)\n    print(\"Mean:\", scores.mean())\n    print(\"Standard deviation:\", scores.std())\n\ndisplay_scores(tree_rmse_scores)","d584887f":"tree_reg.fit(bottle_prepared, bottle_labels)","36b4452f":"bottle_test = full_pipeline.fit_transform(bottle_test)\nbottle_test_labels = bottle_test[\"O2 Level\"].copy()\n\nbottle_test = bottle_test.drop(\"O2 Level\", axis=1)","2543d21b":"final_predictions = tree_reg.predict(bottle_test)\nfinal_mse = mean_squared_error(final_predictions, bottle_test_labels)\nfinal_rmse = np.sqrt(final_mse)\nprint(final_rmse)\n","8447cee6":"from scipy import stats\nconfidence = 0.95\nsquared_errors = (final_predictions - bottle_test_labels) ** 2\nnp.sqrt(stats.t.interval(confidence, len(squared_errors) - 1, loc=squared_errors.mean(), scale=stats.sem(squared_errors)))","f6334345":"# Create Test Set","71c857a7":"# Final Result","f65b8849":"# Data Cleaning","510e6b78":"# Load Data","8a4b0f48":"### Linear Regression","c0a520e4":"### Decision Tree Regressor","2a9f0431":"# Training","5aadfc4c":"# Exploring the data"}}