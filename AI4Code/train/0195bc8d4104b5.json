{"cell_type":{"e86bcb33":"code","5646921f":"code","ddd50f07":"code","1daa179c":"code","946e8a2d":"code","932ef30c":"code","7e9b1e34":"code","b7f6d6f6":"code","9ffc1c4b":"code","aebf7832":"code","e0bc9dec":"code","70e86986":"code","386a95b6":"code","bc1dc053":"code","7361fa4b":"code","e01a3041":"code","5fb4cbd4":"code","888518e1":"code","a6c5bef4":"code","1ad0b18f":"code","95fff0da":"code","7bcae9ab":"markdown","bbbee021":"markdown","82d58799":"markdown","bc2dafec":"markdown","f372419a":"markdown","9e792271":"markdown","87f339d9":"markdown","603d7302":"markdown","8316d35e":"markdown"},"source":{"e86bcb33":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport nltk\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5646921f":"Using rstrip() plus a list comprehension to get a list of all the lines of text reviews.","ddd50f07":"df_review = [line.rstrip() for line in open('..\/input\/amazon_alexa.tsv')]\nprint (len(df_review))","1daa179c":"import pandas\ndf_review = pandas.read_csv('..\/input\/amazon_alexa.tsv', sep='\\t')\ndf_review.head()","946e8a2d":"df_review.describe()","932ef30c":"df_review.groupby('rating').describe()","7e9b1e34":"df_review['length'] = df_review['verified_reviews'].apply(len)\ndf_review.head()","b7f6d6f6":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","9ffc1c4b":"df_review['length'].plot(bins=50, kind='hist')","aebf7832":"df_review.length.describe()","e0bc9dec":"df_review[df_review['length'] == 2851]['verified_reviews'].iloc[0]","70e86986":"df_review.hist(column='length', by='feedback', bins=50,figsize=(10,4))","386a95b6":"import numpy as np\nimport matplotlib.pyplot as plt","bc1dc053":"# Importing the dataset\ndataset = pd.read_csv('..\/input\/amazon_alexa.tsv', delimiter = '\\t', quoting = 3)\n","7361fa4b":"# Cleaning the texts\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\ncorpus=[]\nfor i in range(0,3150):\n    review = re.sub('[^a-zA-Z]', ' ', dataset['verified_reviews'][i] )\n    review=review.lower()\n    review=review.split()\n    ps=PorterStemmer()\n    review=[ps.stem(word) for word in review if not word in set(stopwords.words('english'))]\n    review=' '.join(review)\n    corpus.append(review)","e01a3041":"# creating the Bag of words Model\nfrom sklearn.feature_extraction.text import CountVectorizer\ncv=CountVectorizer(max_features=1500)\nX=cv.fit_transform(corpus).toarray()\ny=dataset.iloc[:,4].values","5fb4cbd4":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","888518e1":"# Fitting Random Forest classifier with 100 trees to the Training set\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","a6c5bef4":"# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n","1ad0b18f":"# Making the Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)","95fff0da":"cm","7bcae9ab":"**Looks like we have some sort of Essay writing review! Now let's focus back on the idea of trying to see if review length is a distinguishing feature between positive and negative review:**","bbbee021":"<img src=\"https:\/\/image.ibb.co\/bU3ZJz\/confusion_matrix_1.png\" alt=\"confusion_matrix_1\" border=\"0\">","82d58799":"Finding out the Maximum length review","bc2dafec":"<img src=\"https:\/\/image.ibb.co\/jK2Byz\/Precisionrecall.png\" alt=\"Precisionrecall\" border=\"0\">","f372419a":"**Can You more efficiently train your machine model and Beat my F1 score of 0.9696 using any other optimized classifier algo**","9e792271":"Wow! 2851 characters long review, let's use masking to find this message:\n\n","87f339d9":"Making a new column to detect how long the text messages are:","603d7302":"**Basic Exploratory Data Analysis**\nLet's check out some of the stats with some plots and the built-in methods in pandas!","8316d35e":"Above shown matrix is known as confusion matrix and below is my result with accuracy of 94.28% and F1 Score of 0.9696.The Random Classifier Algo with 100 trees works efficiently to train the machine in predicting positive and negative reviews.\n<img src=\"https:\/\/image.ibb.co\/hwRArK\/claass.png\" alt=\"claass\" border=\"0\">"}}