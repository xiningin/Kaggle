{"cell_type":{"0e510c2b":"code","3fae6c38":"code","21281503":"code","1ae78d2d":"code","a82f6c8c":"code","d2e2f7d2":"code","83fe695e":"code","ec0a96d4":"code","1c08283d":"code","c76f241e":"code","eafcc4ec":"code","19341ef6":"code","150fc207":"code","86479f30":"code","db6a68c6":"markdown","9e9934a1":"markdown","4afd9621":"markdown","5d1fb141":"markdown"},"source":{"0e510c2b":"import numpy as np\nimport pandas as pd","3fae6c38":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","21281503":"train_data[:10]","1ae78d2d":"train_data.describe(include='all')","a82f6c8c":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","d2e2f7d2":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","83fe695e":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","ec0a96d4":"train_data[['Pclass', 'Survived']].groupby(['Pclass']).mean()","1c08283d":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","c76f241e":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","eafcc4ec":"predictions = []\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female' and row['Fare'] > 25 and row['Pclass'] == 3:\n        predictions.append(0)\n    elif row['Sex'] == 'female' and row['Parch'] > 3:\n        predictions.append(0) \n    elif row['Sex'] == 'female':\n        predictions.append(1) \n    elif row['Sex'] == 'male' and row['Pclass'] < 3 and row['Fare'] < 10:\n        predictions.append(0) \n    elif row['Age'] <= 6.5 and row['Pclass'] <= 2.5:\n        predictions.append(1)\n    elif row['Age'] <= 6.5 and row['Embarked'] == 'S':\n        predictions.append(1) \n    elif row['Age'] <= 15 and row['Embarked'] == 'S' and row['Fare'] <= 23:\n        predictions.append(1) \n    elif row['Age'] <= 15 and row['SibSp'] <= 2.5:\n        predictions.append(1) \n    else:\n        predictions.append(0) ","19341ef6":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","150fc207":"test_data['Survived'] = predictions","86479f30":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","db6a68c6":"# Working with rows manually","9e9934a1":"# Loading and examining data","4afd9621":"# Making predictions","5d1fb141":"# Basic analysis"}}