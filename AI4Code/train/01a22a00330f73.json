{"cell_type":{"a6cd839d":"code","a73dd3e6":"code","213a5c06":"code","4ce413a4":"code","11997223":"code","5961f153":"code","9ad64b12":"code","b12f21df":"code","14cccd83":"code","a3f3db46":"code","40f72e6c":"code","700cc999":"code","7d2f1301":"code","1f09c6ac":"code","37ae3948":"code","d1f4a6a6":"code","3bda6a0d":"code","8af42891":"code","7cd4d172":"code","52a6df87":"code","7c104790":"code","c7b17d3c":"code","52d6be59":"code","7aa313f6":"code","ae420b87":"code","f428d565":"code","296fc7f1":"code","3264e07d":"code","66767dcd":"code","8c9e9aee":"code","1eb561b6":"code","e1fe3077":"code","5f0373d4":"code","8e22f76f":"code","76f5696f":"code","be4bd593":"code","818aa381":"code","3496e8d1":"code","65bd1dc1":"code","19a0ef52":"code","3e6b4d16":"code","b2a17d3d":"code","e8943bd3":"code","dd291664":"code","0307cd6c":"code","40f6e094":"code","89285aed":"code","e9a6dad2":"markdown","5ea84c20":"markdown","fd6ef5cf":"markdown","d8b538d5":"markdown","d42dd557":"markdown","8a33d218":"markdown","34d6e08a":"markdown","6d312ca1":"markdown","06bdc62a":"markdown","361feab9":"markdown","09643608":"markdown","34b99ffb":"markdown","25928612":"markdown","9abd4e05":"markdown","52ebaa6b":"markdown","73760576":"markdown","257ab7d5":"markdown","a5060925":"markdown","8c4aeedf":"markdown","34374325":"markdown","14ba4ea7":"markdown"},"source":{"a6cd839d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a73dd3e6":"import pandas_profiling\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport requests\n\nfrom PIL import Image as im\nfrom wordcloud import WordCloud,STOPWORDS\nfrom IPython.core.display import Image\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA\nsr_ = Style.RESET_ALL","213a5c06":"custom_colors = ['#48bfe3','#56cfe1','#64dfdf','#72efdd','#80ffdb']\ncustomPalette = sns.color_palette(custom_colors)\nsns.palplot(sns.color_palette(custom_colors),size=1)\n\nsns.set_context(\"poster\")","4ce413a4":"#Users\nu_cols = ['user_id', 'location', 'age']\nusers = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX-Users.csv', sep=';', names=u_cols, encoding='latin-1',low_memory=False)\n\n#Books\ni_cols = ['isbn', 'book_title' ,'book_author','year_of_publication', 'publisher', 'img_s', 'img_m', 'img_l']\nitems = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX_Books.csv', sep=';', names=i_cols, encoding='latin-1',low_memory=False)\n\n#Ratings\nr_cols = ['user_id', 'isbn', 'rating']\nratings = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX-Book-Ratings.csv', sep=';', names=r_cols, encoding='latin-1',low_memory=False)","11997223":"users.head(5)","5961f153":"users.describe()","9ad64b12":"print(f\"{y_}{users.dtypes}\\n\") ","b12f21df":"items.head(5)","14cccd83":"items.describe()","a3f3db46":"print(f\"{y_}{items.dtypes}\\n\") ","40f72e6c":"ratings.head(5)","700cc999":"ratings.describe()","7d2f1301":"print(f\"{y_}{ratings.dtypes}\\n\") ","1f09c6ac":"users = users.drop(users.index[0])\nitems = items.drop(items.index[0])\nratings = ratings.drop(ratings.index[0])","37ae3948":"users['age'] = users['age'].astype(float)\nusers['user_id'] = users['user_id'].astype(int)\nratings['user_id'] = ratings['user_id'].astype(int)\nratings['rating'] = ratings['rating'].astype(int)\nitems['year_of_publication'] = items['year_of_publication'].astype(int)","d1f4a6a6":"users.isnull().sum()","3bda6a0d":"users['age'].describe()","8af42891":"users.loc[(users.age>99) | (users.age<5),'age'] = np.nan\nusers.age = users.age.fillna(users.age.mean())","7cd4d172":"ratings.isnull().sum()","52a6df87":"items.isnull().sum()","7c104790":"items.loc[items.publisher.isnull(),:]","c7b17d3c":"items.loc[items.isbn=='193169656X','publisher']='Mundania Press LLC'\nitems.loc[items.isbn=='1931696993','publisher']='Novelbooks Incorporated'","52d6be59":"items.loc[items.book_author.isnull(),:]","7aa313f6":"items.loc[items.isbn=='9627982032','book_author']='Larissa Anne Downe'","ae420b87":"print(sorted(items['year_of_publication'].unique()))","f428d565":"items.loc[(items.year_of_publication==0)|(items.year_of_publication>2008) ,'year_of_publication' ] = np.nan\nitems.year_of_publication = items.year_of_publication.fillna(round(items.year_of_publication.mean()))","296fc7f1":"df = pd.merge(users, ratings, on='user_id')\ndf = pd.merge(df, items, on='isbn')\ndf.head(5)","3264e07d":"df.shape","66767dcd":"location = df.location.str.split(', ', n=2, expand=True)\nlocation.columns=['city', 'state', 'country']\n\ndf['city'] = location['city']\ndf['state'] = location['state']\ndf['country'] = location['country']","8c9e9aee":"def images(col,i):\n    url = df[col][i]\n    response = requests.get(url)\n    img = Image(url)\n    return img","1eb561b6":"images('img_s',0)","e1fe3077":"images('img_m',0)","5f0373d4":"images('img_l',0)","8e22f76f":"df = df.drop(['location','img_s','img_m','img_l'], axis = 1)","76f5696f":"df.dtypes","be4bd593":"# profile = pandas_profiling.ProfileReport(df)\n# profile","818aa381":"plt.figure(figsize=(10,8))\nsns.countplot(x='rating',data=df,palette=customPalette)\nplt.title('Rating Distribution',size=20)\nplt.show()","3496e8d1":"df['rating'].value_counts()","65bd1dc1":"df_v=df[['rating']].copy()\ndf_v.dtypes\ndf_v = df_v[df_v.rating != 0]\nplt.figure(figsize=(10,8))\nsns.countplot(x='rating',data=df_v,palette=customPalette)\nplt.title('Explicit Rating Distribution',size=20)\nplt.show()","19a0ef52":"plt.figure(figsize=(10,8))\nsns.distplot(df['age'],kde=False)\nplt.xlabel('Age')\nplt.ylabel('count')\nplt.title('Age Distribution',size=20)\nplt.show()","3e6b4d16":"df_v=df[['year_of_publication']].copy()\ndf_v['year_of_publication'] = df_v['year_of_publication'].astype(int).astype(str)\ndf_v=df_v['year_of_publication'].value_counts().head(25).reset_index()\ndf_v.columns=['year','count']\ndf_v['year']='Year '+df_v['year']\n\nplt.figure(figsize=(10,8))\nsns.barplot(x='count',y='year',data=df_v,palette=customPalette)\nplt.ylabel('Year Of Publication')\nplt.yticks(size=12)\nplt.title('Years of Publication',size=20)\nplt.show()","b2a17d3d":"def barplot(df,col,l):\n    df_v=df[col].value_counts().head(25).reset_index()\n    df_v.columns=[col,'count']\n\n    plt.figure(figsize=(10,12))\n    sns.barplot(x='count',y=col,data=df_v,palette=customPalette)\n    plt.ylabel(l)\n    plt.title(l,size=20)\n    plt.show()","e8943bd3":"barplot(df,'book_title','Book Title')","dd291664":"barplot(df,'book_author','Book Author')","0307cd6c":"barplot(df,'publisher','Book publisher')","40f6e094":"def color_func(word=None, font_size=None, position=None,  orientation=None, font_path=None, random_state=None):\n    h = int(188)\n    s = int(100.0 * 255 \/ 255.0)\n    l = int(100.0 * float(random_state.randint(60, 160)) \/ 255.0)\n\n    return \"hsl({}, {}%, {}%)\".format(h, s, l)","89285aed":"plt.subplots(figsize=(10,10))\nwc = WordCloud(background_color=\"white\", max_words=100,\n               stopwords=STOPWORDS, max_font_size=256,\n               random_state=42, width=500, height=500,color_func=color_func)\nwc.generate(' '.join(df['book_title']))\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()","e9a6dad2":"> \ud83d\udcccNote: This dataset contains both **explicit** ratings, on a 1\u201310 scale and **implicit** actions of unspecified nature. \n\n> 0 values indicate all interactions without rating values.","5ea84c20":"<div>\n <img src=\"https:\/\/media4.giphy.com\/media\/l0DEKnWCEnW5FeyJi\/giphy.gif?cid=ecf05e4746d3984002acd52b8f247fcf58cca1a853f0f0fe&rid=giphy.gif\" >\n\n<h1><center>\ud83d\udcdaBook-Crossing Analysis\ud83d\udcda<\/center><\/h1>\n<br>\nThis dataset contains 278,858 users (anonymized but with demographic information) providing 1,149,780 ratings (explicit \/ implicit) about 271,379 books. \n<br>\n <br>\n<\/div>\n\n> \ud83d\udcd6**Dataset description**:\n* `BX-Books.csv` has 8 columns which include information about books. \n <ul style=\"list-style-type:circle;\">\n    <li>We can uniquely identify each book with the help of ISBN(International Standard Book Number). <\/li>\n    <li>The title, author,publisher and year of publication of each book have been listed. <\/li>\n    <li>The last three columns include the URLs for different sizes of images.<\/li>\n    <\/ul>\n* `BX-Users.csv` lists the age and location of a user along with their User-ID.\n* `BX-Book-Ratings.csv` contains book ratings given by users. The User-ID and ISBN have also been provided.","fd6ef5cf":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Wordcloud of book titles<\/strong><\/h3>\n<\/div>","d8b538d5":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Explicit Rating Distribution<\/strong><\/h3>\n<\/div>","d42dd557":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Reading the 3 csv files<\/strong><\/h3>\n<\/div>","8a33d218":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Top 25 Books<\/strong><\/h3>\n<\/div>","34d6e08a":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Spitting location column into newer columns<\/strong><\/h3>\n<\/div>","6d312ca1":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Distribution of age of users<\/strong><\/h3>\n<\/div>","06bdc62a":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Dropping columns we won't be needing<\/strong><\/h3>\n<\/div>","361feab9":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Fetching images of different sizes from the URLs<\/strong><\/h3>\n<\/div>","09643608":"> Analysing the rating distribution and the value counts of the ratings column in the dataframe, we notice the that the number of implicit ratings are significantly high!","34b99ffb":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Changing datatypes and replacing nan values<\/strong><\/h3>\n<\/div>","25928612":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Merging the dataframes using User-ID and ISBN columns<\/strong><\/h3>\n<\/div>","9abd4e05":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Rating Distribution<\/strong><\/h3>\n<\/div>","52ebaa6b":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Top 25 Publishers<\/strong><\/h3>\n<\/div>","73760576":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>What does the data look like?<\/strong><\/h3>\n<\/div>","257ab7d5":"Users generally give higher ratings to books as per the above distribution,","a5060925":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Top 25 Years of Publication<\/strong><\/h3>\n<\/div>","8c4aeedf":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Imports<\/strong><\/h3>\n<\/div>","34374325":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Top 25 Authors<\/strong><\/h3>\n<\/div>","14ba4ea7":"<div class=\"alert alert-warning\" role=\"alert\">\n  <h3><strong>Pandas Profiling<\/strong><\/h3>\n<\/div>"}}