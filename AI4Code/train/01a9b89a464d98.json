{"cell_type":{"91c21224":"code","0eca04d1":"code","1959e3dc":"code","9204c2d0":"code","b8c65d37":"code","5b42c293":"code","8ab69229":"code","7df81289":"code","58a15592":"code","62d1d480":"code","b082c9f8":"code","d8b5ad9d":"code","ca8e4202":"code","d891b9b3":"code","94d9e8d7":"code","1ce4b2d9":"code","4d990930":"code","91021842":"markdown","0886c744":"markdown","ecb47d25":"markdown","85e6e642":"markdown"},"source":{"91c21224":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0eca04d1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\nimport plotly.express as px\nfrom PIL import Image\nimport plotly.graph_objs as go \nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","1959e3dc":"restaurants = pd.read_csv('..\/input\/zomato-kolkata-dataset\/Zomato_Kolkata.csv')","9204c2d0":"restaurants","b8c65d37":"restaurants.info()","5b42c293":"restaurants.dtypes","8ab69229":"duplicate = restaurants[restaurants.duplicated()]\nduplicate.count()","7df81289":"#Creating a new Dataframe having total count from each cuisine\nrestaurant_count=pd.DataFrame(restaurants['cusine'].value_counts().sort_values(ascending=False))\nrestaurant_count.rename(columns = {'cusine':'Count'},inplace=True)\nrestaurant_count.index.rename('cusine',inplace=True)\nrestaurant_count.reset_index(inplace=True)\nrestaurant_count['cusine']","58a15592":"restaurants['rating'].unique()\n","62d1d480":"restaurants['rating'].replace('NEW','0',inplace=True)\nrestaurants['rating'].replace('-','0',inplace=True)\nrestaurants['rating'] = restaurants['rating'].str.replace(',','').astype(float)\nrestaurants['rating']","b082c9f8":"\nrestaurants['rating'].fillna(restaurants['rating'].mean(),inplace=True)\nrestaurants['rating'].unique()\n","d8b5ad9d":"split_data = restaurant_count['cusine'].str.split(\",\")\ndata = split_data.to_list()\nnames = ['cusine1','cusine2','cusine3','cusine4','cusine5','cusine6','cusine7','cusine8']\nrestaurant_count = pd.DataFrame(data, columns=names)","ca8e4202":"#Finding the most popular cuisine\nunique_cuisines = restaurant_count['cusine1'].value_counts()\nunique_cuisines\nfor col in names[:1]:\n    unique_cuisines = unique_cuisines.append(restaurant_count[col].value_counts().sort_values(ascending=False))\nunique_cuisines = pd.DataFrame(unique_cuisines)\nunique_cuisines.rename(columns = {'cusine1':'Count'},inplace=True)\nunique_cuisines.index.rename('Cuisines',inplace=True)\nunique_cuisines.reset_index(inplace=True)\nunique_cuisines.head()","d891b9b3":"#Bar plot showcasing total number of restaurants for each cuisine\nfig = px.bar(unique_cuisines.head(20),x='Cuisines',y='Count',color='Cuisines',height=500,width=1000)\nfig.update_layout(showlegend=False)\nfig.show()","94d9e8d7":"restaurants['voteCount'].replace('Cuisines:','0',inplace=True)\nrestaurants['voteCount']= restaurants['voteCount'].apply(lambda x: x.split(' ')[0])","1ce4b2d9":"df1 = pd.DataFrame(restaurants[['name','voteCount','cusine','cost','rating']])\ndf1['voteCount'] = df1['voteCount'].str.replace(',','').astype(int)\ndf1['cost'] = df1['cost'].str.replace(',','')\ndf1['cost'] = df1['cost'].str.replace('\u20b9','').astype(float) #Remove \u20b9 symbol to convert to int\npopular = df1.drop(df1[df1['rating']== 0].index)\npopular = popular.sort_values('cost',ascending=True)\npopular","4d990930":"fig = px.scatter(popular,y='cost',x='rating',color='cusine',height=800,width=1000,hover_data=['name'])\nfig.update_layout(showlegend=False)\n\nfig.show()","91021842":"Hmm!! We Bengalis love North Indian food the most, it seems.","0886c744":"The cuisines don't seem to be properly classified. Natural's Ice Cream shop is definitely an ice-cream shop, last time I checked.\ud83d\ude05","ecb47d25":"Work In Progress!!!","85e6e642":"There's quite a few budget restaurants with good ratings!!\ud83d\ude09 But the cuisine classification might be a bit off on some of them. \ud83d\ude2a The restaurants with high budget and great ratings are for when you're feeling fancy. \ud83d\ude09"}}