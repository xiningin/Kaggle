{"cell_type":{"81825010":"code","43bc0514":"code","f1d01eec":"code","9da9cbee":"code","210a45e1":"code","717bfac6":"code","692ed57d":"code","42a709fa":"code","3fb77e78":"code","04026abd":"code","5508d5fd":"code","bf0a561b":"code","9401583d":"code","e3f8c287":"code","bc38943d":"code","dc54b510":"code","1b4d3497":"code","bca9031e":"code","57ff50fb":"code","4049e1ac":"code","7601ddad":"code","16e1f1d5":"code","768ac01a":"code","d3377fcc":"code","10af8379":"code","8b3a2236":"code","5c2a37d0":"code","96fdbea0":"code","1167aa6d":"code","5dde5ed5":"code","8e434df3":"code","5cbfbfc9":"code","06f52146":"code","84deb9a9":"code","6e752098":"code","ea816209":"code","615ae629":"code","67965987":"code","7a146622":"code","9a0b977d":"code","7e65d21b":"code","e8aa8270":"code","2cce38de":"code","1f7eff21":"code","c9e916a3":"code","07e409b4":"code","68c289ce":"code","03270894":"code","c3120189":"code","17f5233b":"code","0021aa86":"code","3eb3a235":"code","3add8678":"code","d5570863":"code","0b127d2c":"code","d05d42bb":"code","d3288c13":"code","c6531ac6":"code","8c2d9c73":"code","d30d7e25":"code","b2733a80":"code","7e5574d2":"code","f5e5633e":"code","071ebb20":"code","a828e249":"code","938c2ee0":"code","6b7ba424":"code","7b23d20a":"code","5096ef0d":"code","5c7a1802":"code","8c805cc2":"code","c6dc32ed":"code","3ece1071":"code","690cb953":"code","fd85b487":"code","968f4452":"code","4fbd0e62":"code","ea9bfac5":"code","632cae05":"code","25ad8fdd":"code","3d6edd9a":"code","c5e90128":"code","39c79bb8":"code","ee11e2f1":"code","27d924d1":"code","226c2713":"code","82bee026":"code","c4a4fbca":"code","73349ee4":"code","ceb9e304":"code","059e8291":"code","4403811f":"code","7507e743":"code","7095cb0e":"code","06dca412":"code","5949a56c":"code","5758b262":"code","f9d72597":"code","b8c99bde":"code","6027c934":"code","b8e7316b":"code","393db291":"code","f2e230b4":"code","b1fe3a83":"code","a491c85a":"code","8e2d4467":"code","52cbf043":"code","741ff1d5":"code","f14dda89":"code","446eb48e":"code","39ce1c14":"code","cfa44715":"code","c61212bd":"code","7095e87c":"code","9b50e2b4":"code","7b55e537":"code","bb960959":"code","1494317b":"code","7dfc390f":"code","ec68fb15":"code","8b61ec88":"code","c3b43405":"code","3a9a838d":"code","1811c04b":"code","478b34a4":"code","a935cd66":"code","774d4f0f":"code","85274ed9":"code","bce9a4c3":"code","4fd082e9":"code","abbb4340":"code","06d86ef0":"code","b9e1aefb":"code","21abd34d":"code","f52f7e9a":"code","0079b442":"code","e2e0e8aa":"code","54eefccc":"code","cadd5200":"code","fb0aeba3":"code","7b975c8c":"code","cbea5340":"code","c32446c7":"code","1548beb6":"markdown","0b3739ac":"markdown","dd90861c":"markdown","153fd171":"markdown","17a25faa":"markdown","3bba1481":"markdown","14499cac":"markdown","bbcb3970":"markdown","933ae71e":"markdown","787d0f35":"markdown","2ebb5ad7":"markdown","80845166":"markdown","544ad882":"markdown","c1653b92":"markdown","1be1c1fb":"markdown","5b05075c":"markdown","0ab51e10":"markdown","0699d4eb":"markdown","4b8206bc":"markdown"},"source":{"81825010":"import pandas as pd \nimport numpy as np\nfrom datetime import timedelta\nimport missingno as msno\nfrom scipy import stats\nimport statistics\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport plotly.express as px","43bc0514":"df=pd.read_csv(r'..\/input\/covid19-case-surveillance-public-use-dataset\/COVID-19_Case_Surveillance_Public_Use_Data.csv')\n","f1d01eec":"df.head(3)","9da9cbee":"df.tail(3)","210a45e1":"print(\"The number of columns present in a dataset are:\",df.shape[1])\nprint(\"The number of rows present in a dataset are:\",df.shape[0])","717bfac6":"df.columns","692ed57d":"#data type of various columns\ndf.info()","42a709fa":"#Changing object to datetime \ndf['cdc_report_dt']=pd.to_datetime(df['cdc_report_dt'])\n\ndf['onset_dt']=pd.to_datetime(df.onset_dt)\ndf['pos_spec_dt']=pd.to_datetime(df.pos_spec_dt)\n","3fb77e78":"#checking the datatypes\ndf.info()","04026abd":"#After changing the columns datatype let's check for missing in the dataset\ndf.isnull().sum()","5508d5fd":"#Percentage of missing values in each columns would be considered better for understanding\n\ndef percentage_of_missing():\n    t=df.columns \n    for i in t:\n        t=(df[i].isnull().sum())\/df.shape[0]\n        print(i[:4],'\\t\\t',round(t*100,4),'%')\npercentage_of_missing()","bf0a561b":"msno.matrix(df)\n","9401583d":"#Heatmap with msno helps to know how strongly the presence or absence of one variable affects the presence of another\nmsno.heatmap(df)","e3f8c287":" msno.dendrogram(df)","bc38943d":"\n#Instead of deleting the columns pos_spec_dt and onset_pos_difference we will try to fill the missing values by taking the difference between them.\ndf['onset_pos_difference'] = (df['onset_dt'] -df['pos_spec_dt'][df.pos_spec_dt.notnull()]).dt.days\ndf['pos_difference'] = (df['cdc_report_dt'] -df['pos_spec_dt'][df.pos_spec_dt.notnull()]).dt.days\ndf['onset_difference'] = (df['cdc_report_dt'] -df['onset_dt'][df.onset_dt.notnull()]).dt.days","dc54b510":"print('on_pos_set:-',df['onset_pos_difference'].mean(),df['onset_pos_difference'].median(),df['onset_pos_difference'].mode())\n\nprint('onset_set:-',df['onset_difference'].mean(),df['onset_difference'].median(),df['onset_difference'].mode())\n\nprint('pos_difference:-',df['pos_difference'].mean(),df['pos_difference'].mode(),df['pos_difference'].median())\n","1b4d3497":"df['onset_dt'].fillna(df.cdc_report_dt + timedelta(days=2), inplace = True)\n\ndf['pos_spec_dt'].fillna(df.cdc_report_dt+timedelta(days=2),inplace=True)","bca9031e":"#Extracting month \ndf['month_cdc']=df['cdc_report_dt'].dt.month\n#Extracting week\ndf['week_cdc']=df['cdc_report_dt'].dt.week","57ff50fb":"df.drop(columns=['onset_pos_difference','onset_difference','pos_difference'],inplace=True)","4049e1ac":"df.isnull().sum()","7601ddad":"df.sex.unique()","16e1f1d5":"df['sex'].value_counts()","768ac01a":"df[df['age_group'].isna()][:29]","d3377fcc":"df['sex']=df.groupby(['death_yn','icu_yn','month_cdc']).sex.transform(lambda x: x.fillna(x.mode()[0]))","10af8379":"df['sex'].unique()","8b3a2236":"df['sex'].value_counts()","5c2a37d0":"df['sex'].replace({'Missing':np.nan,'Unknown':np.nan},inplace=True)","96fdbea0":"df['sex']=df.groupby(['death_yn','icu_yn','month_cdc']).sex.transform(lambda x: x.fillna(x.mode()[0]))\n\ndf['sex'].unique()","1167aa6d":"#filling missing values in Race and ethnicity\ndf['Race and ethnicity (combined)'].unique()","5dde5ed5":"df['Race and ethnicity (combined)'].value_counts()","8e434df3":"#Replacing unkowns and missing to nan and then trying to fill the values \ndf[\"Race and ethnicity (combined)\"].replace({\"Missing\": np.nan, \"Unknown\": np.nan}, inplace=True)","5cbfbfc9":"df['Race and ethnicity (combined)'].unique()","06f52146":"df['Race and ethnicity (combined)']=df.groupby(['death_yn','icu_yn','month_cdc'])['Race and ethnicity (combined)'].transform(lambda x: x.fillna(x.mode()[0]))","84deb9a9":"\ndf['Race and ethnicity (combined)'].unique()","6e752098":"#Missing values in age_group column\n\ndf['age_group'].unique()","ea816209":"df['age_group'].replace({'Unknown':np.nan},inplace=True)","615ae629":"df['age_group'].unique()","67965987":"df['age_group']=df.groupby(['death_yn','icu_yn','month_cdc','Race and ethnicity (combined)'])['age_group'].transform(lambda x: x.fillna(x.mode()[0]))","7a146622":"df['age_group'].unique()","9a0b977d":"#checking in other columns  for missing and Unkown data\n\ndf['hosp_yn'].unique()","7e65d21b":"df['hosp_yn'].replace({'Missing':np.nan,'Unknown':np.nan},inplace=True)\ndf['hosp_yn'].unique()\n","e8aa8270":"df['hosp_yn']=df.groupby(['death_yn','Race and ethnicity (combined)'])['hosp_yn'].transform(lambda x: x.fillna(x.mode()[0]))\ndf['hosp_yn'].unique()","2cce38de":"df['hosp_yn'].unique()","1f7eff21":"#Checking icu_yn\ndf['icu_yn'].unique()","c9e916a3":"df['icu_yn'].replace({'Missing':np.nan,'Unknown':np.nan},inplace=True)","07e409b4":"df['icu_yn']=df.groupby(['age_group','Race and ethnicity (combined)'])['icu_yn'].transform(lambda x: x.fillna(x.mode()[0]))","68c289ce":"df['icu_yn'].unique()","03270894":"#death column\ndf['death_yn'].unique()","c3120189":"df['death_yn'].replace({'Missing':np.nan,'Unknown':np.nan},inplace=True)","17f5233b":"df['death_yn'].unique()","0021aa86":"df['death_yn']=df.groupby(['age_group','icu_yn','Race and ethnicity (combined)'])['death_yn'].transform(lambda x: x.fillna(x.mode()[0]))","3eb3a235":"df['death_yn'].unique()","3add8678":"#medcond_yn column\ndf['medcond_yn'].unique()","d5570863":"df['medcond_yn'].replace({'Missing':np.nan},inplace=True)","0b127d2c":"df['medcond_yn']=df.groupby(['icu_yn','Race and ethnicity (combined)'])['medcond_yn'].transform(lambda x: x.fillna(x.mode()[0]))\n","d05d42bb":"df['medcond_yn'].unique()","d3288c13":"#checking current status column\ndf['current_status'].unique()","c6531ac6":"df.isnull().sum()","8c2d9c73":"df.describe().T","d30d7e25":"df['death_yn'].unique()","b2733a80":"df['death_yn'].replace({'Yes':1,'No':0},inplace=True)","7e5574d2":"plt.figure(figsize=(10,6))\nplt.hist(df['age_group'],log=True)\nplt.xlabel(\"Age group\")\nplt.xticks(rotation=45)\nplt.show()","f5e5633e":"plt.figure(figsize=(10,6))\nplt.hist(df['Race and ethnicity (combined)'],log=True)\nplt.xlabel(\"Race Ethnicity\")\nplt.xticks(rotation=45)\nplt.show()","071ebb20":"plt.figure(figsize=(10,6))\nplt.hist(df['medcond_yn'],log=True)\nplt.xlabel(\"Medical condition\")\nplt.xticks(rotation=45)\nplt.show()","a828e249":"\nplt.figure(figsize=(10,7))\nsns.histplot(data=df, x=\"icu_yn\", hue=\"sex\", multiple=\"stack\")\nplt.xlabel(\"Admission's in ICU\")\nplt.show()","938c2ee0":"plt.figure(figsize=(8,6))\nsns.countplot(y=\"current_status\",hue ='age_group',data=df)\nplt.show()","6b7ba424":"\nplt.figure(figsize=(8,6))\nsns.countplot(y='death_yn',hue='age_group',data=df)\nplt.ylabel('death')\nplt.show()","7b23d20a":"\nplt.figure(figsize=(8,6))\nsns.countplot(y='icu_yn',hue='age_group',data=df)\nplt.ylabel('admission in icu')\nplt.show()","5096ef0d":"plt.figure(figsize=(8,8))\nsns.countplot(y='death_yn',hue='Race and ethnicity (combined)',data=df)\nplt.ylabel('Death')\nplt.show()","5c7a1802":"plt.figure(figsize=(15,7))\nsns.histplot(data=df,x='age_group',bins=30,hue='sex',multiple='stack')\nplt.xlabel(\"Age group\")\nplt.title(\" Count of age group's\")\nplt.show()","8c805cc2":"plt.figure(figsize=(15,7))\nsns.histplot(data=df,x='age_group',bins=30,hue='icu_yn',multiple='stack')\nplt.xlabel(\"Age group\")\nplt.title(\" Count of age group's\")\nplt.show()","c6dc32ed":"df['death_yn'].unique()","3ece1071":"values = df['death_yn'].value_counts().tolist()\nnames = [ 'Yes', 'No']\nfig = px.pie(names=names,values=values, title=\"Distribution Pre-Existing Medical Conditions\",)\nfig.show()\n","690cb953":"values = df['medcond_yn'].value_counts().tolist()\nnames = [ 'Unknown', 'Yes', 'No']\nfig = px.pie(names=names,values=values, title=\"Distribution Pre-Existing Medical Conditions\",)\nfig.show()\n","fd85b487":"values = df['current_status'].value_counts().tolist()\nnames = ['Confirmed', 'Probable']\npx.pie( names=names,    values=values,title=\"Case Status Distribution\")\n\n","968f4452":"df.corr()","4fbd0e62":"plt.figure(figsize=(10,10))\nsns.pairplot(df)\nplt.show()","ea9bfac5":"#df['year']\ndf['cdc_report_dt'].dt.year.max(),df['cdc_report_dt'].dt.year.min()#as the year is same so not considering year column","632cae05":"data=df.groupby([\"week_cdc\",'death_yn']).count()\ndata.reset_index(inplace=True)","25ad8fdd":"plt.figure(figsize=(10,7))\nsns.lineplot(data=data,x='week_cdc',y='cdc_report_dt')\nplt.show()","3d6edd9a":"data=df.groupby([\"week_cdc\",'age_group','icu_yn','death_yn']).count()\ndata.reset_index(inplace=True)","c5e90128":"plt.figure(figsize=(10,7))\nsns.lineplot(data=data,x='week_cdc',y='cdc_report_dt')\nplt.show()","39c79bb8":"df.head()","ee11e2f1":"df.info()","27d924d1":"df.current_status.unique()","226c2713":"df.sex.unique()","82bee026":"df.age_group.unique()","c4a4fbca":"df['Race and ethnicity (combined)'].unique()","73349ee4":"df.hosp_yn.unique()","ceb9e304":"df.icu_yn.unique()","059e8291":"df.medcond_yn.unique()","4403811f":"df['month_cdc'].unique()","7507e743":"df.current_status.replace({'Laboratory-confirmed case':1,'Probable Case':2},inplace=True)","7095cb0e":"df.sex.replace({'Male':1,'Female':2,'Other':3},inplace=True)\n","06dca412":"df.age_group.replace({'10 - 19 Years':1, '20 - 29 Years':2, '30 - 39 Years':2, '40 - 49 Years':3,'50 - 59 Years':3, '0 - 9 Years':1, '60 - 69 Years':4, '80+ Years':4,'70 - 79 Years':4},inplace=True)","5949a56c":"df['Race and ethnicity (combined)'].replace({'Black, Non-Hispanic':1, 'White, Non-Hispanic':2,\n       'Asian, Non-Hispanic':3,\n       'American Indian\/Alaska Native, Non-Hispanic':4,\n       'Multiple\/Other, Non-Hispanic':5,\n       'Native Hawaiian\/Other Pacific Islander, Non-Hispanic':6,\n       'Hispanic\/Latino':7},inplace=True)","5758b262":"df['hosp_yn'].replace({'No':0,'Yes':1},inplace=True)","f9d72597":"df['icu_yn'].replace({'No':0,'Yes':1},inplace=True)","b8c99bde":"df['medcond_yn'].replace({'No':0, 'Yes':1, 'Unknown':2},inplace=True)","6027c934":"plt.subplots(figsize=(10,10))\nsns.heatmap(df.corr(),annot=True,annot_kws={'size':9})","b8e7316b":"X=df.drop(columns=['death_yn','month_cdc','week_cdc','Race and ethnicity (combined)','age_group','pos_spec_dt','onset_dt','cdc_report_dt'])","393db291":"y=df['death_yn']\n","f2e230b4":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier  \n","b1fe3a83":"from sklearn.model_selection import train_test_split","a491c85a":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\n","8e2d4467":"\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","52cbf043":"#Logistic Regression\nlogistic_reg = LogisticRegression()\npred=logistic_reg.fit(X_train, y_train)\n#Predicting values\nY_pred = logistic_reg.predict(X_test)","741ff1d5":"print(classification_report(y_test, Y_pred))","f14dda89":"confusion_matrix(y_test,Y_pred)","446eb48e":"plot_confusion_matrix(logistic_reg, X_test, y_test)  ","39ce1c14":"#RandomForest\n\nrf_c=RandomForestClassifier()\npred_rf=rf_c.fit(X_train, y_train)\n#Predicting values\nY_pred_rf = pred_rf.predict(X_test)","cfa44715":"print(classification_report(y_test, Y_pred_rf))","c61212bd":"confusion_matrix(y_test,Y_pred_rf)","7095e87c":"plot_confusion_matrix(rf_c, X_test, y_test)  ","9b50e2b4":"#Naive Bayes\nNb=GaussianNB()\npred_nb=Nb.fit(X_train, y_train)\n#Predicting values\nY_pred_nb = pred_nb.predict(X_test)","7b55e537":"print(classification_report(y_test, Y_pred_nb))","bb960959":"confusion_matrix(y_test,Y_pred_nb)","1494317b":"plot_confusion_matrix(Nb, X_test, y_test)","7dfc390f":"#Decision tree classifier\nDC= DecisionTreeClassifier()  \npred_dc=DC.fit(X_train, y_train)","ec68fb15":"Y_pred_dc= pred_dc.predict(X_test)","8b61ec88":"print(classification_report(y_test, Y_pred_dc))","c3b43405":"confusion_matrix(y_test,Y_pred_dc)","3a9a838d":"plot_confusion_matrix(DC, X_test, y_test)","1811c04b":"X=df.drop(columns=['death_yn','month_cdc','week_cdc','Race and ethnicity (combined)','age_group','pos_spec_dt','onset_dt','cdc_report_dt','current_status','icu_yn'])","478b34a4":"y=df['icu_yn']","a935cd66":"\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","774d4f0f":"#Logistic Regression\nlogistic_reg = LogisticRegression()\npred=logistic_reg.fit(X_train, y_train)\n#Predicting values\nY_pred = logistic_reg.predict(X_test)","85274ed9":"print(classification_report(y_test, Y_pred))","bce9a4c3":"confusion_matrix(y_test,Y_pred)","4fd082e9":"plot_confusion_matrix(logistic_reg, X_test, y_test)","abbb4340":"#RandomForest\n\nrf_c=RandomForestClassifier()\npred_rf=rf_c.fit(X_train, y_train)\n#Predicting values\nY_pred_rf = pred_rf.predict(X_test)","06d86ef0":"print(classification_report(y_test, Y_pred_rf))","b9e1aefb":"confusion_matrix(y_test,Y_pred_rf)","21abd34d":"plot_confusion_matrix(rf_c, X_test, y_test)  ","f52f7e9a":"#Naive Bayes\nNb=GaussianNB()\npred_nb=Nb.fit(X_train, y_train)\n#Predicting values\nY_pred_nb = pred_nb.predict(X_test)","0079b442":"print(classification_report(y_test, Y_pred_nb))","e2e0e8aa":"confusion_matrix(y_test,Y_pred_nb)","54eefccc":"plot_confusion_matrix(Nb, X_test, y_test)","cadd5200":"#Decision tree classifier\nDC= DecisionTreeClassifier()  \npred_dc=DC.fit(X_train, y_train)","fb0aeba3":"Y_pred_dc= pred_dc.predict(X_test)","7b975c8c":"print(classification_report(y_test, Y_pred_dc))","cbea5340":"confusion_matrix(y_test,Y_pred_dc)","c32446c7":"plot_confusion_matrix(DC, X_test, y_test)","1548beb6":"# Performing classification problem based on Death condition\n","0b3739ac":"# How to figureout the  count of people joined in icu based on age groups..?","dd90861c":" # DataPreprocessing","153fd171":"# How to know the trend of deaths based on weeks of a year..?","17a25faa":"# DataVisualization ","3bba1481":"# Spread of admission based on gender in ICU..?\n","14499cac":"# Column Description\n\n1.cdc_report_dt - earlier clinical dates related to illness or specimen collection\n\n2.pos_spec_dt   - date at which column name was submitted to the database\n\n3.onset_dt      - date of the symptoms shown\n\n4.sex           - gender of a person\n\n5.age_group     - various age groups of a person\n\n6.Race and ethnicity - social group or clutural tradition of a person\n\n7.hosp_yn       - status of admission in hospitial \n\n8.icu_yn        - status of admission in ICU\n\n9.death_yn      - did the patient died as a result of this illness\n\n10.medcond_yn   - status of pre-existing medical condition","bbcb3970":"# Performing classification problem based on joined in icu ","933ae71e":"# Apart from missing values there were Unkown, missing separately\nHow many missing values are present ..?\n\nHow many Unkown values are present...?\n","787d0f35":"# How to know the values distribution of Race and ethnicity..?","2ebb5ad7":"# Implementing machine learning algorthm","80845166":"# How to know the count of people based on age group and gender..?\n","544ad882":"# How to know the values distribution in Medical condition..?","c1653b92":"# How to know the current status of people based on age group..?","1be1c1fb":"# How to know to count of people joined in icu based on age group..?","5b05075c":"# How to know the death of people based on age group..?\n","0ab51e10":"#  How to know the trend of deaths based on weeks of a year , age group , admissions in icu and death of a person..?","0699d4eb":"# How to know the values distribution of age group ?","4b8206bc":"# How to know the death of people based on race and ethnicity..?"}}