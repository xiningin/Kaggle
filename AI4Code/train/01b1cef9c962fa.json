{"cell_type":{"932b6a92":"code","e1588002":"code","75af1ccb":"code","fb9ea7d5":"code","78161576":"code","90c9f911":"code","a80bdb65":"code","cabe1218":"code","59cedaa1":"code","6fc12be1":"code","a87a03ea":"markdown","cb15b70c":"markdown","369170ef":"markdown"},"source":{"932b6a92":"import os\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\n\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport math\n\nfrom fbprophet import Prophet\n","e1588002":"df = pd.read_csv('..\/input\/d\/limkongkong\/airpassengers\/AirPassengers.csv', \n                 date_parser=lambda dates: pd.datetime.strptime(dates, '%Y-%m'),\n                 parse_dates=['Month'])\ndf.columns = ['ds','y'] # rename to use prophet","75af1ccb":"model = Prophet(seasonality_mode='multiplicative')\nmodel.fit(df)","fb9ea7d5":"future_prices = model.make_future_dataframe(periods=365,freq='M')\nfc = model.predict(future_prices)\nfc","78161576":"fc_series = pd.Series(fc.yhat, index=range(208))\n\nplt.figure(figsize=(15,10))\nplt.plot(df.y, label='training data')\nplt.plot(fc_series[:], color = 'orange',label='Predicted test data')\n\nplt.title('# of Passenger prediction')\nplt.xlabel('Time')\nplt.ylabel('# of Passengers')\nplt.legend(loc='upper left', fontsize=8)","90c9f911":"model.plot_components(fc, figsize=(10,15))","a80bdb65":"n = int(len(df)*.9)\nmodel = Prophet(seasonality_mode='multiplicative')\nmodel.fit(df[:n])","cabe1218":"future_prices = model.make_future_dataframe(periods=144-n,freq='M')\nfc = model.predict(future_prices)\nfc","59cedaa1":"fc_series = pd.Series(fc.yhat, index=range(208))\n\nplt.figure(figsize=(15,10))\nplt.plot(df.y, label='training data')\nplt.plot(fc_series[n:], color = 'orange',label='Predicted test data')\n\nplt.title('# of Passenger prediction')\nplt.xlabel('Time')\nplt.ylabel('# of Passengers')\nplt.legend(loc='upper left', fontsize=8)","6fc12be1":"mse = mean_squared_error(df.y[n:], fc.yhat[n:])\nprint('MSE: '+str(mse))\nmae = mean_absolute_error(df.y[n:], fc.yhat[n:])\nprint('MAE: '+str(mae))\nrmse = math.sqrt(mean_squared_error(df.y[n:], fc.yhat[n:]))\nprint('RMSE: '+str(rmse))\nmape = np.mean(np.abs(fc.yhat[n:] - df.y[n:])\/np.abs(df.y[n:]))\nprint('MAPE: '+str(mape))","a87a03ea":"For graphs one may refer to the notebook https:\/\/www.kaggle.com\/bhavinmoriya\/airpassenger-autoarima-almost-accurate-preds\/notebook","cb15b70c":"Here we shall learn Facebook Prophet to do long term predictions. It works best for long term predictions. For short term one may try ARIMA. This notebook is continuation of the, https:\/\/www.kaggle.com\/bhavinmoriya\/airpassenger-autoarima-almost-accurate-preds\/notebook, which I recommend should be a good start, ","369170ef":"Model seem to be doing great."}}