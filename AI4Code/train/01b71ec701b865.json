{"cell_type":{"c1be0077":"code","4d20fac9":"code","2fbabb87":"code","76c3bc10":"code","25d9aee7":"code","a1eb62a6":"code","5c680174":"code","e94b8ce0":"code","5c2e888e":"code","afe3c09e":"markdown","c5ed4e15":"markdown","79edd747":"markdown","2455bf63":"markdown","20b1cea1":"markdown","c211c744":"markdown","f3abb6e1":"markdown","514c09da":"markdown","85282a07":"markdown","123b13ea":"markdown","5c231df4":"markdown","20e6df14":"markdown","43e36191":"markdown","b1ea8bc0":"markdown"},"source":{"c1be0077":"import re\nimport os\n\ntry:\n    os.remove('\/kaggle\/working\/books_clean.csv')\nexcept OSError:\n    pass\n\npattern = re.compile(r'^(?P<bookID>\\d+),(?P<title>.+?(?=,)),(?P<authors>.+(?=,\\d+\\.))')\n\nwrote_headers = False\n\nwith open('..\/input\/goodreadsbooks\/books.csv', 'r') as books_file:\n  for line in books_file:\n    if (not wrote_headers):\n      with open('\/kaggle\/working\/books_clean.csv', 'a') as clean_file:\n        clean_file.write(line)\n      wrote_headers = True\n\n    found = re.match(pattern, line)\n\n    if (found):\n      quotified = pattern.sub(r'\\g<bookID>,\\g<title>,\"\\g<authors>\"', line)\n      with open('\/kaggle\/working\/books_clean.csv', 'a') as clean_file:\n        clean_file.write(quotified)\n\nprint(\"OK -- Generated \/kaggle\/working\/books_clean.csv\")","4d20fac9":"import pandas as pd\n\ndf = pd.read_csv('\/kaggle\/working\/books_clean.csv', encoding = 'utf-8')\n\ndf.head()","2fbabb87":"len(df[df['title'].isna()].index)","76c3bc10":"len(df[df['text_reviews_count'].isna()].index)","25d9aee7":"max_reviews_count = df['text_reviews_count'].max()\nmost_reviewed_book = df[df['text_reviews_count'] == max_reviews_count].iloc[0]\nprint(f'The book with the highest reviews count is\\n\\t{most_reviewed_book[\"title\"]}\\nwith {max_reviews_count} reviews')","a1eb62a6":"max_rating = df['average_rating'].max()\nbest_rated_book = df[df['average_rating'] == max_rating].iloc[0]\nprint(f'The book with the highest rating is\\n\\t{best_rated_book[\"title\"]}\\n with a score of {max_rating}')","5c680174":"rating_sorted_df = df.sort_values('average_rating', ascending = False)\nrating_grouping = rating_sorted_df.groupby('average_rating', sort = False)\nbest_group = list(rating_grouping)[0]\nbest_rating, group_df = best_group\nbest_book = group_df.sort_values('text_reviews_count', ascending = False).iloc[0]\n\nprint(f'The book with the highest rating and number of text_reviews is\\n\\t{best_book[\"title\"]}\\n with a score of {max_rating} and {best_book[\"text_reviews_count\"]} reviews')","e94b8ce0":"import numpy as np\nimport matplotlib.pyplot as plt\n\nrating_classes = np.array(range(0, 11)) * 0.5\n\ndf['rating_ranges'] = pd.cut(df['average_rating'], bins = rating_classes)\n\ndiagram = df['rating_ranges'].value_counts().sort_index().plot(kind = 'bar')\ndiagram.set_xlabel('Rating Groups')\ndiagram.set_ylabel('Number of Books')\ndiagram.set_title('Frequency of books by rating groups')\nplt.show()\n\ndf['rating_ranges'].value_counts()","5c2e888e":"counts_df = group_df['text_reviews_count'].value_counts()\ndiagram = counts_df.sort_index().plot(kind = 'bar', title = 'Number of books with a 5.0 rating, by review count')\ndiagram.set_xlabel('Number of Reviews')\ndiagram.set_ylabel('Number of Books')\ndiagram.set_xticklabels(counts_df.index, rotation = 0)\nplt.show()\n\ngroup_df['text_reviews_count'].value_counts()","afe3c09e":"### Book with highest rating\n\n","c5ed4e15":"No null values found in the columns of interest. Transformation stage skipped","79edd747":"Reading the CSV file from the dataset","2455bf63":"### Books by rating","20b1cea1":"## Extraction","c211c744":"## Transformation","f3abb6e1":"### Book with highest rating and number of reviews","514c09da":"## Analysis","85282a07":"## Preprocessing","123b13ea":"### Book with most reviews","5c231df4":"### Books by review counts of the group with highest rating (5.0)","20e6df14":"## Visualization\n\nThe following diagrams give evidence to the previous statements\n","43e36191":"# Goodreads Books Exploration\n\nThis notebook intends to explore the **goodreadsbooks** dataset in order to determine which books are on top, both in terms of rating and number of reviews\n\n![](https:\/\/images.pexels.com\/photos\/159866\/books-book-pages-read-literature-159866.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)","b1ea8bc0":"In order to be able to retrieve data from the CSV files, an initial cleaning process is necessary: as there are no quotes for lists of values, the file's contents will be formatted by quoting lists of values."}}