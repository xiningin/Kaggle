{"cell_type":{"d829eeb5":"code","63a823b4":"code","0de74d2b":"code","dca9bf61":"code","7051ddb1":"code","d4e53bf3":"code","ae968526":"markdown","b8a4fc1f":"markdown","2657ddad":"markdown","dcf47a80":"markdown","9ef8bb93":"markdown","403ffa0d":"markdown"},"source":{"d829eeb5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport ast\n\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\n","63a823b4":"PATH = '..\/input\/tensorflow-great-barrier-reef\/train_images\/video_'\n    \ndef filepaths(row):\n    v = str(row.video_id)\n    f = str(row.video_frame)\n    row['filepath'] = PATH+v+'\/'+f+'.jpg'\n    return row\n\ntrain = pd.read_csv('..\/input\/tensorflow-great-barrier-reef\/train.csv')\ntrain = train.progress_apply(filepaths, axis =1)\n\ntrain['len_ann'] = [ len(a) for a in train.annotations ]\n\ntrain.head()","0de74d2b":"for video in train.video_id.unique():\n    for seq in train[train.video_id==video].sequence.unique():\n        print('Video:', video, '| seq:', seq,'| len:', len(train[train.sequence==seq]  ) )        ","dca9bf61":"# Shortest Video\n# Video: 1 | seq: 18048 | len: 71\nvideo_short = train[(train.video_id ==1) & (train.sequence==18048)]\nvideo_short.head()","7051ddb1":"import numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\nimport ast\n\ni = 0\n\nrec_dict=ast.literal_eval(video_short.iloc[i].annotations[1:-1])\nx,y,w,h=rec_dict['x'],rec_dict['y'],rec_dict['width'],rec_dict['height']\n\nfig, ax = plt.subplots(figsize=(20,10))\nimg = cv2.imread(video_short.filepath.tolist()[i], -1)\nimg = cv2.rectangle(img,(x,y),(x+w,y+h), (252, 3, 3), 2 )\n\nplt.imshow(img)\nplt.xticks([]), plt.yticks([])  # to hide tick values on X and Y axis\nplt.show()","d4e53bf3":"import cv2 \nimport numpy as np\nimport ast\n\nimg_array = []\n\nfor i, filename in enumerate(video_short.filepath.tolist()):\n\n    img = cv2.imread(filename)\n    rec_dict=ast.literal_eval(video_short.iloc[i].annotations) #[1:-1])\n    \n    for j in range(len(rec_dict)):\n        x,y,w,h=rec_dict[j]['x'],rec_dict[j]['y'],rec_dict[j]['width'],rec_dict[j]['height']\n\n        img = cv2.rectangle(img,(x,y),(x+w,y+h), (252, 3, 3), 2 )\n    \n    height, width, layers = img.shape\n    size = (width,height)\n    img_array.append(img)\n\nout = cv2.VideoWriter('project.avi',cv2.VideoWriter_fourcc(*'DIVX'), 15, size)\n \nfor i in range(len(img_array)):\n    out.write(img_array[i])\nout.release()    \n    ","ae968526":"Check if the rectangle is properly placed in the image.","b8a4fc1f":"#### Load the train file\n","2657ddad":"## How to create VIDEO files from frame sequences","dcf47a80":"You can download the video file from output folder and watch the sequence in your computer.","9ef8bb93":"### Verify the length of sequences\n\nIn video 1, sequence 18048, is the shorted video with 71 frames..","403ffa0d":"Following, create a video ('*project.avi*') from the sequence above (18048) where the rectangles are drawn in the video. \n\n"}}