{"cell_type":{"c921ec4b":"code","0c384784":"code","1d6fe77d":"code","3abd6c6f":"code","90854151":"code","17f6ca2b":"code","6e896721":"code","79fbab27":"code","ed7865f4":"code","5573e149":"markdown","e5546baf":"markdown","c33a549b":"markdown","3a59a5b3":"markdown","bf4cb76f":"markdown","e2dc8278":"markdown","49f2ef0c":"markdown"},"source":{"c921ec4b":"!git clone https:\/\/github.com\/Hzzone\/pytorch-openpose\n%cd pytorch-openpose","0c384784":"import cv2\nimport matplotlib.pyplot as plt\nimport copy\nimport numpy as np\n\nfrom src import model\nfrom src import util\nfrom src.body import Body\nfrom src.hand import Hand","1d6fe77d":"!cp \/kaggle\/input\/openpose-pretrained-models\/body_pose_model.pth model\n!cp \/kaggle\/input\/openpose-pretrained-models\/hand_pose_model.pth model","3abd6c6f":"body_estimation = Body('model\/body_pose_model.pth')\nhand_estimation = Hand('model\/hand_pose_model.pth')","90854151":"#test_image = 'images\/demo.jpg'\ntest_image = '\/kaggle\/input\/input-poses\/baseball1.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/baseball2.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/baseketball.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/fall1.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/fall2.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/fall3.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/racers.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/skiing.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/tennis.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/volley.jpg'\n#test_image = '\/kaggle\/input\/input-poses\/volleyball.jpg'","17f6ca2b":"import matplotlib.pyplot as plt\nimage = plt.imread(test_image)\nplt.figure(figsize=(10,10))\nplt.imshow(image)\nplt.axis('off')\nplt.show()","6e896721":"# enable GPU for acceleration\noriImg = cv2.imread(test_image)\ncandidate, subset = body_estimation(oriImg)\ncanvas = copy.deepcopy(oriImg)\ncanvas = util.draw_bodypose(canvas, candidate, subset)\nprint(len(candidate)) # number of keypoints\nprint(len(subset))    # number of persons","79fbab27":"# detect hand\nhands_list = util.handDetect(candidate, subset, oriImg)\n\nall_hand_peaks = []\nfor x, y, w, is_left in hands_list:\n    peaks = hand_estimation(oriImg[y:y+w, x:x+w, :])\n    peaks[:, 0] = np.where(peaks[:, 0]==0, peaks[:, 0], peaks[:, 0]+x)\n    peaks[:, 1] = np.where(peaks[:, 1]==0, peaks[:, 1], peaks[:, 1]+y)\n    all_hand_peaks.append(peaks)\n\ncanvas = util.draw_handpose(canvas, all_hand_peaks)","ed7865f4":"plt.figure(figsize=(10,10))\nplt.imshow(canvas[:, :, [2, 1, 0]])\nplt.axis('off')\nplt.show()","5573e149":"#### keypoints index : index = int(subset[n][i])\n#### keypoints corrd : x,y = candidate[index][0:2]","e5546baf":"# OpenPose PyTorch","c33a549b":"## Repro [Github](https:\/\/github.com\/Hzzone\/pytorch-openpose)","3a59a5b3":"## Detect Hand","bf4cb76f":"## Detect Body","e2dc8278":"## set Pretrained Models","49f2ef0c":"## Display Result"}}