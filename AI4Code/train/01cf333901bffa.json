{"cell_type":{"2d30d58d":"code","3488813b":"code","49b33c2b":"code","2e3ecab4":"code","2b0919c4":"code","b054c188":"code","b8c9ee9d":"code","d88642ee":"code","8b5df635":"code","a8d65f56":"code","00ccdcee":"code","db1862a1":"code","80bb1a35":"code","a62538d6":"code","91863cea":"code","8e45a128":"code","d1db7ea6":"code","5ca2d384":"code","ccebed4f":"code","299c6533":"code","7596c6ab":"code","8542cf86":"code","5f9a632b":"code","0978e40a":"code","163d633a":"code","daec4a39":"code","efced2e5":"code","f95e8c8b":"code","ccb3eb94":"code","fcafea11":"code","20ad6d01":"markdown","f60c6c5d":"markdown","ef98bae7":"markdown","251b337f":"markdown","fa91c21a":"markdown","14251b3b":"markdown","3aecf594":"markdown","1e752a21":"markdown","142a0582":"markdown","6662f074":"markdown","ec276c42":"markdown","ae0daddb":"markdown","eea73df1":"markdown","da682138":"markdown","7fef958c":"markdown","948de48e":"markdown","ac6f70aa":"markdown","4b46b8a5":"markdown","2b8a4bdb":"markdown","d5a7be03":"markdown","66fadae4":"markdown","ad075a96":"markdown","78740224":"markdown","b1eb3b69":"markdown","6ce59bea":"markdown","0e3a2372":"markdown","6460ca0e":"markdown","18991f16":"markdown","2a4999d3":"markdown","b971934d":"markdown"},"source":{"2d30d58d":"from IPython.display import IFrame\nIFrame(src='.\/Covid19_India_TimeSlider.html', width=700, height=600)\n#Slide the bar to see the Covid-19 spread across Indian states from 14 March'20 to 6 August'20","3488813b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","49b33c2b":"district_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/district_level_latest.csv\")\nstate_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/state_level_latest.csv\")\ncountry_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/nation_level_daily.csv\")\npatient_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/patients_data.csv\")\ntests_state_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/tests_state_wise.csv\")","2e3ecab4":"district_data = district_data.drop(['District_Notes','Last_Updated'],axis=1)\ndistrict_data.info()","2b0919c4":"# Drop the column of Totals\nstate_data = state_data.drop(0)\n\n# Plot the Confirmed, Recovered, Active and Deaths on the same plot using matplotlib\nplt.figure(figsize=(12,10))\nx = state_data['State_code']\ny = state_data['Confirmed']\nplt.plot(x,y,marker='o',label=\"Confirmed\")\ny = state_data['Recovered']\nplt.plot(x,y,marker='o',label=\"Recovered\")\ny = state_data['Active']\nplt.plot(x,y,marker='o',label=\"Active\")\ny = state_data['Deaths']\nplt.plot(x,y,marker='o',label=\"Deaths\")\nplt.legend();","b054c188":"state_top20 = state_data.nlargest(20,'Confirmed')\nstate_top20","b8c9ee9d":"# Position of bars on x-axis\nind = np.arange(20)\n\n# Width of a bar \nwidth = 0.4\n\nplt.figure(figsize=(15,12))\nx = state_top20['State_code']\ny = state_top20['Confirmed']\nplt.bar(ind+width\/2,y,align='edge',width=width,label=\"Confirmed\")\ny = state_top20['Recovered']\nplt.bar(ind+width,y,align='edge',width=width,label=\"Recovered\")\ny = state_top20['Active']\nplt.bar(ind+3*width\/2,y,align='edge',width=width,label=\"Active\")\ny = state_top20['Deaths']\nplt.bar(ind+2*width,y,align='edge',width=width,label=\"Deaths\")\n\nplt.xticks(ind + 3*width\/2, x)\nplt.legend();\n","d88642ee":"district_top10 = district_data.nlargest(10,'Confirmed')\ndistrict_top10","8b5df635":"# Position of bars on x-axis\nind = np.arange(10)\n\n# Width of a bar \nwidth = 0.4\n\nplt.figure(figsize=(15,12))\nx = district_top10['District']\ny = district_top10['Confirmed']\nplt.bar(ind+width\/2,y,align='edge',width=width,label=\"Confirmed\")\ny = district_top10['Recovered']\nplt.bar(ind+width,y,align='edge',width=width,label=\"Recovered\")\ny = district_top10['Active']\nplt.bar(ind+3*width\/2,y,align='edge',width=width,label=\"Active\")\ny = district_top10['Deceased']\nplt.bar(ind+2*width,y,align='edge',width=width,label=\"Deseased\")\n\nplt.xticks(ind + 3*width\/2, x)\nplt.legend()","a8d65f56":"tests = tests_state_data.loc[tests_state_data['Updated On'] == '06\/08\/2020']\ntests = tests[['State','Total Tested','Positive']]\ntests = tests.dropna()\ntests.info()","00ccdcee":"import plotly.express as px\n\nfig = px.scatter(tests, x=\"Total Tested\", y=\"Positive\", text=\"State\", log_x=True, log_y=True, size_max=100, color=\"Positive\")\nfig.update_traces(textposition='top center')\nfig.update_layout(title_text='Life Expectency', title_x=0.5)\nfig.show() \n# Hover over the image to see the details of each state","db1862a1":"import geopandas as gpd\n\nfp = r'\/kaggle\/input\/indiageofiles\/india-polygon.shp'\nmap_df = gpd.read_file(fp)\nmap_df.rename(columns={'st_nm': 'State'},inplace=True)\nmap_df.head() #check the head of the file","80bb1a35":"data_merge = map_df.merge(state_data, on = 'State', how = 'left')\ndata_merge.head()","a62538d6":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Confirmed Cases', fontdict={'fontsize': '25', 'fontweight' : '10'})\n\n# plot the figure\ndata_merge.plot(column='Confirmed',cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);","91863cea":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Recovered Cases', fontdict={'fontsize': '25', 'fontweight' : '10'})\ndata_merge.plot(column='Recovered',cmap='Greens', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);\n","8e45a128":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Deaths', fontdict={'fontsize': '25', 'fontweight' : '10'})\ndata_merge.plot(column='Deaths',cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);","d1db7ea6":"import branca.colormap as cm\nimport folium\nstates_daily_data = pd.read_csv(\"\/kaggle\/input\/covid19-corona-virus-india-dataset\/state_level_daily.csv\")\nstates_daily_data.head()","5ca2d384":"states =states_daily_data.drop(['State'],axis=1)\nstates = states.rename(columns={'State_Name': 'State'})\nstates_map = states.merge(map_df,on='State')\nstates_map.head()","ccebed4f":"states_df = states_map[states_map.Confirmed != 0]\nstates_df.info()","299c6533":"states_df['log_Confirmed'] = np.log10(states_df['Confirmed'])","7596c6ab":"states_df.head()","8542cf86":"states_df['date'] = pd.to_datetime(states_df['Date']).astype(int) \/ 10**9\nstates_df['date'] = states_df['date'].astype(int).astype(str)","5f9a632b":"states_df.head()","0978e40a":"states_df = states_df[['State', 'date', 'log_Confirmed', 'geometry']]\nstates_df = states_df.dropna() #Drop all the rows with any null values\nstates_df.info()","163d633a":"states_df = states_df.sort_values(['State','date']).reset_index(drop=True)\nstates_df.head()","daec4a39":"max_colour = max(states_df['log_Confirmed'])\nmin_colour = min(states_df['log_Confirmed'])\ncmap = cm.linear.YlOrRd_09.scale(min_colour, max_colour)\nstates_df['colour'] = states_df['log_Confirmed'].map(cmap)","efced2e5":"states_list = states_df['State'].unique().tolist()\nstates_idx = range(len(states_list))\n\nstyle_dict = {}\nfor i in states_idx:\n    states = states_list[i]\n    result = states_df[states_df['State'] == states]\n    inner_dict = {}\n    for _, r in result.iterrows():\n        inner_dict[r['date']] = {'color': r['colour'], 'opacity': 0.7}\n    style_dict[str(i)] = inner_dict","f95e8c8b":"states_geom_df = states_df[['geometry']]\nstates_geom_gdf = gpd.GeoDataFrame(states_geom_df)\nstates_geom_gdf = states_geom_gdf.drop_duplicates().reset_index()","ccb3eb94":"from folium.plugins import TimeSliderChoropleth\n\nslider_map = folium.Map(zoom_start=4,location=[21, 78])\n\n_ = TimeSliderChoropleth(\n    data=states_geom_gdf.to_json(),\n    styledict=style_dict,\n\n).add_to(slider_map)\n\n_ = cmap.add_to(slider_map)\ncmap.caption = \"Log of number of confirmed cases\"\nslider_map.save(outfile='Covid19_India_TimeSlider.html')\n","fcafea11":"IFrame(src='.\/Covid19_India_TimeSlider.html', width=700, height=600)\n# Please zoom on India before using slider bar","20ad6d01":"### Select the only columns important for plotting","f60c6c5d":"## View HTML output file in the Jupyter Notebook","ef98bae7":"### We drop the unnecessary columns, rename the columns of state names in both the  states data and map_df (shapefile) data and then merge the two data according to 'State'.","251b337f":"## Load the data files","fa91c21a":"### Draw the interactive map to see the relationship of number of tests with positive (Confirmed) cases using plotly","14251b3b":"### Convert Date into standard format","3aecf594":"### Similarly select data for top 10 districts from India with respect to 'Confirmed' cases","1e752a21":"### Plotting 'Deaths' cases on map of India : Heatmap","142a0582":"### Plotting 'Recovered' cases on map of India : Heatmap","6662f074":"### Define a colour map in terms of the log of the number of confirmed cases","ec276c42":"### Sort the data according to date and State names","ae0daddb":"### Import the libraries and read daily Covid-19 data of Indian States","eea73df1":"# Interactive TimeSlider Choropleth map\nA choropleth map is a type of thematic map in which areas are shaded or patterned in proportion to a statistical variable that represents an aggregate summary of a geographic characteristic within each area. We map the Covid-19 summary on India map.\n","da682138":"# Plot the important features across the states","7fef958c":"### Make a dataframe containing the features for each Indian state","948de48e":"### Transform confirmed cases to log10 scale to reduce the scale of plotting.","ac6f70aa":"### Next, we create style dictionary ","4b46b8a5":"## Merge the state data file with shape file","2b8a4bdb":"## First import 'The Three Libraries' of Python","d5a7be03":"### Now, select the data for top 20 states with respect to 'Confirmed' cases.","66fadae4":"### Delete the rows containing confirmed cases equal to zero","ad075a96":"## Final step : create our map and add a colourbar. Save the choropleth map created in HTML frmat so that you can visualize it in the browser.","78740224":"### Tests dataset processing to plot","b1eb3b69":"### Plotting 'Confirmed' cases on map of India : Heatmap","6ce59bea":"### Draw Bar plots for the Top 20 states ","0e3a2372":"## This Notebook will demonstrate following things :\n\n<div class=\"alert alert-block alert-success\">  \n<li> Visualizing Covid-19 data in different ways.<\/li>\n<li> Plotting data on India map using shapefile and geopandas library.<\/li>\n<li> How to get interactive Time slider choropleth map as follows (Zoom on India before using slider bar). Slide the bar to see the Covid-19 spread across Indian states from 14 March'20 to 6 August'20 <\/li>\n<\/div>","6460ca0e":"# Plotting Covid-19 data on India Map using geopandas: \n### First read the shape file of India which has the geometries of Indian states.","18991f16":"## Remove the unnecessary columns from district data","2a4999d3":"### Draw the bar plots for top 10 districts","b971934d":"## Please comment for improvisation of the notebook and don't forget to upvote if this notebook is helpful.\n# Thank You!!!"}}