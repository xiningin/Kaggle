{"cell_type":{"b94fad98":"code","566214d5":"code","870a34a9":"code","6413325a":"code","3fb98461":"code","4467d3f0":"code","b28416f4":"code","7b9ea42f":"code","70391f10":"code","08017e15":"code","2158164a":"code","32bed0e0":"code","ad1d0b41":"code","559d317d":"code","05602454":"code","9a4ab07f":"code","da8b09f3":"code","30853b88":"code","fc02c402":"code","50ef1d97":"code","70e8235b":"code","b1b2914e":"code","dc7b4c7e":"code","16c2854a":"code","0b7faf62":"code","4282189b":"code","5e67aaac":"code","45032db1":"code","e9ed54b0":"markdown"},"source":{"b94fad98":"#importing packages\n\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","566214d5":"movies = pd.read_csv('\/kaggle\/input\/movieratings-20072011\/Movie-Ratings.csv')","870a34a9":"movies.head()","6413325a":"movies.info()","3fb98461":"movies.describe()","4467d3f0":"movies.columns","b28416f4":"#Renaming the columns\n\nmovies.columns = ['Film', 'Genre', 'CriticRatings', 'AudienceRatings', 'BudgetInMillions', 'ReleaseYear']","7b9ea42f":"movies.head()","70391f10":"#Convert object columns to categories\n\nmovies.Film = movies.Film.astype('category') \nmovies.Genre = movies.Genre.astype('category')\nmovies.ReleaseYear = movies.ReleaseYear.astype('category')","08017e15":"movies.info()","2158164a":"#List of Genre's\n\nmovies.Genre.cat.categories","32bed0e0":"#Histograms","ad1d0b41":"#Critics v\/s Audience rating pattern\n\nfig, ax = plt.subplots(1,2,figsize= (10,6))\nh1 = sns.distplot(movies.CriticRatings, ax=ax[0])\nh2 = sns.distplot(movies.AudienceRatings, ax=ax[1])","559d317d":"#Displaying rows with movies of Action genre along with its Budget(million $)\n\nmovies[movies.Genre == \"Action\"].BudgetInMillions","05602454":"#Stacked histogram\n\nlist1 = []\nlabel1 = []\nfor i in movies.Genre.cat.categories:\n    list1.append(movies[movies.Genre == i].BudgetInMillions)\n    label1.append(i)\n\nfig, ax = plt.subplots(figsize= (10,7))\nplt.hist(list1, bins = 20, rwidth = 1, stacked = True, label = label1)\nplt.xlabel('Budget In million ($)')\nplt.legend()\nplt.show()","9a4ab07f":"#Scatter Plot\n\ng = sns.lmplot(data = movies, x = 'CriticRatings', y = 'AudienceRatings', hue = 'Genre', height = 6, fit_reg = False)\ng.fig.set_figwidth(10)","da8b09f3":"#KDE Plot","30853b88":"k1a = sns.kdeplot(movies.CriticRatings, movies.AudienceRatings, shade = True, shade_lowest=False, cmap = 'Blues')\nk1b = sns.kdeplot(movies.CriticRatings, movies.AudienceRatings, cmap = 'Blues')","fc02c402":"#Subplots for sophisticated visualization","50ef1d97":"sns.set_style('white')\nf, axes = plt.subplots(1, 2, figsize = (12,5), sharex=True, sharey=True)\nk1 = sns.kdeplot(movies.BudgetInMillions, movies.CriticRatings, ax = axes[0])\nk2 = sns.kdeplot(movies.BudgetInMillions, movies.AudienceRatings, ax = axes[1])\nk1.set(xlim = (-20,200), ylim = (-20,120))","70e8235b":"#Violin Plots","b1b2914e":"f, axes = plt.subplots(1, 2, figsize = (12,5), sharex=True, sharey=True)\nV1 = sns.violinplot(data = movies, x = 'Genre', y = 'CriticRatings', ax=axes[0])\nV2 = sns.violinplot(data = movies, x = 'Genre', y = 'AudienceRatings', ax=axes[1])","dc7b4c7e":"f, axes = plt.subplots(1, 2, figsize = (12,5), sharex=True, sharey=True)\nV3 = sns.violinplot(data = movies[movies.Genre=='Action'], x = 'ReleaseYear', y = 'CriticRatings', ax = axes[0])\nv4 = sns.violinplot(data = movies[movies.Genre=='Action'], x = 'ReleaseYear', y = 'AudienceRatings', ax = axes[1])","16c2854a":"#Facet Grid","0b7faf62":"#Scatter plot Grid\n\nfg = sns.FacetGrid(movies, row = 'Genre', col = 'ReleaseYear', hue = 'Genre')\nkws = dict(s = 50, linewidth = '0.5', edgecolor = 'black')\nfg = fg.map(plt.scatter, 'CriticRatings', 'AudienceRatings', **kws)\n\n\n#Adding diagonal for clear picture of Critics v\/s Audience ratings\nfor i in fg.axes.flat:\n    i.plot((0,100), (0,100), c='gray', ls = '--')","4282189b":"#Basic Dashboard","5e67aaac":"import warnings\nwarnings.filterwarnings('ignore')","45032db1":"sns.set_style('dark', {'axes.facecolor':'white'})\nf, axes = plt.subplots(2, 2, figsize = (13,13))\n\n#Plot 1\nk1 = sns.kdeplot(movies.BudgetInMillions, movies.CriticRatings, shade = True,shade_lowest=False, cmap= 'inferno', ax = axes[0,0])\nkk1 = sns.kdeplot(movies.BudgetInMillions, movies.CriticRatings, cmap = 'gray', ax =axes[0,0])\n\n#Plot 2\nk2 = sns.kdeplot(movies.BudgetInMillions, movies.AudienceRatings,shade = True,shade_lowest=False, cmap= 'inferno', ax = axes[0,1])\nkk2 = sns.kdeplot(movies.BudgetInMillions, movies.AudienceRatings,cmap = 'gray', ax = axes[0,1])\n\nk1.set(xlim=(-20,160))\nk2.set(xlim=(-20,160))\n\n#Plot 3\nV2 = sns.violinplot(data = movies, x = 'ReleaseYear', y = 'BudgetInMillions', ax = axes[1,0], palette = 'Reds')\n\n#Plot 4\nk1a = sns.kdeplot(movies.CriticRatings, movies.AudienceRatings, shade = True, shade_lowest=False, cmap = 'Blues_r', ax =axes[1,1])\nk1b = sns.kdeplot(movies.CriticRatings, movies.AudienceRatings, cmap = 'Blues', ax =axes[1,1])","e9ed54b0":"#### Findings: \nAction movies are high on budget going upto $300 million.\nComedy and Romance movie genre's are generally low on budget."}}