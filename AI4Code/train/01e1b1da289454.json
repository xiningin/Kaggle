{"cell_type":{"3f845180":"code","e64fbaf8":"code","94410762":"code","7493315d":"code","7739e7ce":"code","95704b7b":"code","1e8803e6":"code","9cfdc222":"code","566781c9":"code","d2c36745":"code","0ec8ad03":"code","20510b31":"code","52c4f8f5":"code","94aa4653":"code","0dc15cc5":"code","a16b40a5":"code","de16935c":"code","b49886a1":"markdown"},"source":{"3f845180":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense,LSTM,Dropout,LeakyReLU, BatchNormalization\nfrom keras.optimizers import RMSprop, Adadelta, Adam\n \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e64fbaf8":"df_train=pd.read_csv(\"..\/input\/Stock_Price_Train.csv\")\ntrain=df_train.loc[:,[\"Open\"]].values","94410762":"df_train.head()","7493315d":"df_train.info()","7739e7ce":"df_train.columns","95704b7b":"df_train['Close'] = [x.replace(',', '') for x in df_train['Close']]\ndf_train['Volume'] = [x.replace(',', '') for x in df_train['Volume']]\ndf_train['Close']=df_train['Close'].astype(float)\ndf_train['Volume']=df_train['Volume'].astype(float)","1e8803e6":"df_train.info()","9cfdc222":"df_train['Date']=pd.to_datetime(df_train['Date'])\ndf_train.set_index('Date',inplace=True)\ndf_train.info()","566781c9":"df_train.isnull().sum()","d2c36745":"plt.figure(figsize=(15,12))\nsb.lineplot(data=df_train[['Open', 'High', 'Low','Close']],linewidth=2)\nplt.grid(True)\nplt.show()","0ec8ad03":"plt.style.use('dark_background')\nplt.figure(figsize=(15,10))\nplt.plot(df_train['Volume'],color='lime',linewidth=2)\nplt.grid(True)\nplt.xlabel('Volume')\nplt.ylabel('Date')\nplt.show()","20510b31":"#Normalization\nfrom sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\ntrain_scaled=scaler.fit_transform(train)\nx_train=[]\ny_train=[]","52c4f8f5":"for i in range(60,1258):\n    x_train.append(train_scaled[i-60:i,0])\n    y_train.append(train_scaled[i,0])\nx_train,y_train=np.array(x_train),np.array(y_train)\nx_train=np.reshape(x_train,(x_train.shape[0],x_train.shape[1],1))","94aa4653":"opt=RMSprop()    \n#opt=Adadelta()    \n#opt=Adam()    \n\ntime_model=Sequential()\ntime_model.add(LSTM(units=50,return_sequences=True,activation='tanh',input_shape=(x_train.shape[1],1)))\ntime_model.add(Dropout(0.2))\n\ntime_model.add(LSTM(units=50,activation='tanh',return_sequences=True))\ntime_model.add(Dropout(0.18))\n\ntime_model.add(LSTM(units=50,activation='tanh'))\ntime_model.add(Dropout(0.15))","0dc15cc5":"time_model.add(Dense(units=1))\ntime_model.compile(optimizer=opt,loss=\"mean_squared_error\")\ntime_model.fit(x_train,y_train,epochs=50,batch_size=30)","a16b40a5":"ds_test=pd.read_csv(\"..\/input\/Stock_Price_Test.csv\")\nreal_values=ds_test.loc[:,[\"Open\"]].values\nds_total=pd.concat((df_train[\"Open\"],ds_test[\"Open\"]),axis=0)\ninputs=ds_total[len(ds_total)-len(ds_test)-60:].values.reshape(-1,1) \ninputs=scaler.transform(inputs)","de16935c":"x_test=[]\nfor i in range(60,80):\n    x_test.append(inputs[i-60:i,0])\nx_test=np.array(x_test)\nx_test=np.reshape(x_test, (x_test.shape[0], x_test.shape[1],1))\npredicted_Stock_price=time_model.predict(x_test)\npredicted_Stock_price=scaler.inverse_transform(predicted_Stock_price)\nplt.figure(figsize=(15,10))\nplt.plot(real_values,color=\"lightgreen\",label=\"Real Stock Values\",linewidth=3)\nplt.plot(predicted_Stock_price,color=\"orchid\",label=\"Stock Exchange Predict\",linewidth=3)\nplt.xlabel(\"Time\")\nplt.ylabel(\"Google Real Values\")\nplt.grid(True)\nplt.legend(prop={'size': 14})\nplt.show()","b49886a1":"![stockmarketdataonscreen._176463.jpg](attachment:stockmarketdataonscreen._176463.jpg)"}}