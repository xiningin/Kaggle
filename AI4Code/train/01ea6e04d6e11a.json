{"cell_type":{"9dbc2830":"code","6ae5dc94":"code","f028e808":"code","fd818ce4":"code","4c2be578":"code","fd56a821":"code","d1f345c5":"code","d99a794b":"code","1df46af5":"code","183acbbe":"code","19463d6b":"code","ae09aa7d":"code","0898a68c":"code","5db5bc2b":"code","95ce751f":"code","56b21f90":"code","b2cbf27c":"code","43d58396":"code","ff2a8611":"code","084f95ee":"code","0bc1dd01":"code","00b24be8":"code","7bb918dc":"code","a78e28f8":"code","872f5c3f":"code","c6a359d5":"code","64813f1c":"code","009b15c6":"code","ef02579f":"code","151bbb3f":"code","2f9cdd36":"code","2e27e827":"code","82975689":"code","7e763177":"code","f13070c3":"code","c38bb41c":"markdown","68be0b77":"markdown","52ec0e0d":"markdown","0e2046de":"markdown","ba35b4cb":"markdown","5bff97d3":"markdown","9ac5d8fe":"markdown","c03af5f4":"markdown","1ca8d84c":"markdown"},"source":{"9dbc2830":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndataset=pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")\n","6ae5dc94":"dataset.head(15)","f028e808":"for feature in dataset.columns:\n    print(feature,'missing values:',dataset[feature].isnull().sum())","fd818ce4":"dataset.describe()","4c2be578":"categorical_features=[feature for feature in dataset.columns if dataset[feature].dtypes=='O']\ncategorical_features","fd56a821":"numerical_features=[feature for feature in dataset.columns if feature not in categorical_features and feature not in ['HeartDisease']]\nnumerical_features","d1f345c5":"discrete_feature = [feature for feature in dataset.columns if dataset[feature].nunique() < 15 and feature not in ['HeartDisease']]\ncontinuous_feature = [feature for feature in dataset.columns if dataset[feature].nunique() > 15]","d99a794b":"discrete_feature","1df46af5":"continuous_feature","183acbbe":"plt.style.use('seaborn-pastel')\ni = 1\nplt.figure(figsize=(18,20))    \nfor feature in discrete_feature:\n    plt.subplot(4, 2, i)\n    sns.countplot(x=dataset[feature], hue=dataset.HeartDisease)\n    i += 1\n    \nplt.show()","19463d6b":"print(plt.style.available)","ae09aa7d":"plt.style.use('seaborn-pastel')\nplt.figure(figsize=(12,12))\ni=1\nfor feature in continuous_feature:\n    plt.subplot(4,2,i)\n    sns.histplot(x=feature,data=dataset,kde=True,bins=50,hue=dataset.HeartDisease)\n    i+=1\n","0898a68c":"for feature in categorical_features:\n    labels_ordered=dataset.groupby([feature])['HeartDisease'].sum().sort_values().index\n    labels_ordered={k:i for i,k in enumerate(labels_ordered,0)}\n    dataset[feature]=dataset[feature].map(labels_ordered)","5db5bc2b":"dataset.head(20)","95ce751f":"scaling_features=[feature for feature in dataset.columns if feature not in ['HeartDisease']]\nscaling_features","56b21f90":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nscaler.fit(dataset[scaling_features])","b2cbf27c":"scaler.transform(dataset[scaling_features])","43d58396":"data=pd.concat([dataset[['HeartDisease']],\n               pd.DataFrame(scaler.transform(dataset[scaling_features]),columns=scaling_features)],\n              axis=1)","ff2a8611":"data.head(10)","084f95ee":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(data,data['HeartDisease'],test_size=0.2,random_state=42)","0bc1dd01":"X_train=X_train.drop('HeartDisease',axis=1)","00b24be8":"X_test=X_test.drop('HeartDisease',axis=1)","7bb918dc":"X_train","a78e28f8":"X_test","872f5c3f":"from sklearn.metrics import classification_report\nfrom sklearn.ensemble import RandomForestClassifier\n\n\nforest_cla=RandomForestClassifier(n_estimators = 10,criterion = 'entropy',random_state = 42)\nforest_cla.fit(X_train,y_train.values.ravel())","c6a359d5":"y_predict_for=forest_cla.predict(X_test)\n\nfrom sklearn.metrics import accuracy_score\naccuracy=accuracy_score(y_test,y_predict_for)\naccuracy","64813f1c":"from sklearn.svm import SVC\n\nsvc_cla = SVC(kernel='rbf', random_state=21)\nsvc_cla.fit(X_train, y_train.values.ravel())","009b15c6":"y_predict_svc=svc_cla.predict(X_test)\naccuracy_svc=accuracy_score(y_test,y_predict_svc)\naccuracy_svc","ef02579f":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel\n\nfeature_sel_model=SelectFromModel(Lasso(alpha=0.005,random_state=0))\nfeature_sel_model.fit(X_train,y_train)","151bbb3f":"feature_sel_model.get_support()","2f9cdd36":"selected_feat=X_train.columns[(feature_sel_model.get_support())]\nselected_feat","2e27e827":"X_train=X_train[selected_feat]\nX_test=X_test[selected_feat]","82975689":"svc_cla_sel=SVC(kernel='rbf',random_state=21)\nsvc_cla_sel.fit(X_train,y_train)","7e763177":"y_predict_svc_sel=svc_cla_sel.predict(X_test)\naccuracy_svc_sel=accuracy_score(y_test,y_predict_svc_sel)\naccuracy_svc_sel","f13070c3":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_predict_svc_sel))","c38bb41c":"Encoding categorical features","68be0b77":"Exploring data","52ec0e0d":"SVC got higher accuracy than RandomForestClassifier","0e2046de":"Feature Selection to get higher accuracy using lasso","ba35b4cb":"Checking for null values","5bff97d3":"Final score","9ac5d8fe":"Training RandomForestClassifier\n","c03af5f4":"Making train model","1ca8d84c":"Training support vector machine"}}