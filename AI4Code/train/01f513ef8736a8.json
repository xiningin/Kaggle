{"cell_type":{"c961b7a1":"code","5d3a4220":"code","ccb042bc":"code","0d790a62":"code","b2182247":"code","40c12f72":"code","b179a8bf":"code","2a116241":"code","05940dc6":"code","7e239101":"code","6839c136":"code","9eac1722":"code","09951f2a":"code","2d1f7a98":"code","9850695e":"code","046a3ecf":"code","c8c1decd":"code","85dcdc2b":"code","a3449714":"code","a07434b7":"code","a9c88cbf":"code","bdcc048e":"code","2fe6ffdf":"code","481e9b1d":"code","90c6744e":"code","20fbfd6d":"code","3211293c":"code","15fab654":"code","19c75329":"code","17204e4d":"code","2b112a6a":"code","43ad40a8":"code","356639ee":"code","e2fb206c":"code","1bed32da":"code","86514b78":"code","1c9e7b1b":"code","91bd54dc":"code","1e9dacc6":"code","4bd20c7e":"code","39a5b685":"code","0cac65ad":"code","7799be69":"code","c44afd88":"code","30d574f3":"code","75b6ed31":"code","64cb6aab":"code","74bb2719":"code","164a950f":"code","b334263a":"code","b2ba9b9b":"code","64e445fc":"code","63ffc4e4":"code","d255d93f":"code","8860d0f8":"code","0cd1bb79":"code","7bfeddff":"code","8e2547c2":"code","1ba8ff74":"code","e3811ebc":"code","e7b613f4":"code","5f1b919b":"code","ff5e20b8":"code","c52c06d0":"code","1f750012":"code","9a075538":"code","cbf0cc7e":"code","b70fd943":"code","a5868d9e":"code","afa1d2e7":"code","7850c898":"code","736f6664":"code","76fe7046":"code","91ea8cd7":"code","906099a3":"code","3cd5328a":"code","6b19f14d":"code","0fcc8158":"code","54c392a5":"code","d0a50632":"code","f880c378":"code","07db529b":"code","198c7ef4":"code","249423a0":"code","658de0d7":"code","d2368eab":"code","e3253f66":"code","be47fb60":"code","115d4287":"code","e2adbfc9":"code","6a8ad13a":"code","1510935f":"code","01476dfc":"code","2b3bd31f":"code","80f3697c":"code","58a13cf1":"code","1427ee21":"code","fd4a7e36":"code","a7678e23":"code","c6b53721":"code","f6b94434":"code","44e9d8d8":"code","2f923d2c":"code","c6e9f69f":"code","00a1581c":"code","0d4188e4":"code","0bb06344":"code","b892e804":"code","0aeeb07e":"code","0e903041":"code","e3a80258":"code","807a03d5":"code","d2e36d02":"code","05c56f30":"code","4834b41c":"code","1a6ed4a1":"code","f0c1fe19":"code","6ceaaa41":"code","b3f4b937":"code","1e4540a4":"code","e4e70fbd":"code","b6c58ea3":"code","e2670063":"code","680024e2":"code","b708b006":"code","235be5d0":"code","22e44576":"code","dae72adb":"code","ae0887b0":"code","314736e0":"code","bba86f74":"code","b40eb5a0":"code","2ce98818":"code","2e612c08":"code","66329296":"code","5f7bb653":"code","53b595dd":"code","3454846f":"code","4d0fa506":"code","0984f887":"code","4475f2b3":"code","969c12c4":"code","b129e006":"code","c35c11d8":"code","d1c27a7a":"code","4b084647":"code","8262b26d":"code","b15aa8da":"code","8d8ae665":"code","087a7f51":"code","6d20fdbd":"code","600033d8":"code","c80fd414":"code","f7e21cb8":"code","d09ab7ac":"code","9bef159e":"code","89980bdf":"code","2ab86547":"code","420e09a5":"code","f8b85d32":"code","953ddafd":"code","a303cbca":"code","008af2c0":"code","85b1a8ab":"code","623820c7":"code","9645ad6c":"code","4ecc3225":"code","2764b875":"code","f5632be2":"code","30203128":"markdown","41fd1caa":"markdown","4ac5df29":"markdown","79f82776":"markdown","8af866da":"markdown","352079b2":"markdown","c6be565a":"markdown","1cbe1707":"markdown","239dae44":"markdown","74a5a5f4":"markdown","0e4bf4be":"markdown","0b997708":"markdown","e11373f5":"markdown","0b721baf":"markdown","3c1e527e":"markdown","fb3b9eb5":"markdown","e2e1c1c6":"markdown","b62984a6":"markdown","5c7c7a9e":"markdown","eb6ea93d":"markdown","506c49fc":"markdown","0841ab43":"markdown","a5bad6b9":"markdown","14ed2479":"markdown","0832a085":"markdown","cdd902e3":"markdown","62d3c14b":"markdown","04884246":"markdown","f5e5e146":"markdown","b4973fe0":"markdown","ea4a8bec":"markdown","5dcb8c96":"markdown","2e4f5bf9":"markdown","b7a8004b":"markdown","c4a0e2e6":"markdown","e928c858":"markdown"},"source":{"c961b7a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5d3a4220":"data=pd.read_csv(\"\/kaggle\/input\/diamonds\/diamonds.csv\")\ndf=data.copy()\ndf.head()","ccb042bc":"df=df.select_dtypes(include=['float64','int64'])\ndf.head()","0d790a62":"df=df.iloc[:,1:]\ndf.head()","b2182247":"df_table=df[\"table\"].copy()","40c12f72":"df.isnull().sum()","b179a8bf":"sns.boxplot(x=df_table)","2a116241":"Q1=df_table.quantile(0.25)\nQ3=df_table.quantile(0.75)\nIQR=Q3-Q1\n\nalt_sinir=Q1-1.5*IQR\nust_sinir=Q3+1.5*IQR\nprint(alt_sinir)\nprint(ust_sinir)","05940dc6":"(df_table<(alt_sinir))|(df_table>(ust_sinir))\n#aykiri degerleri true olarak verir tum datadan\n#BUNA VEKTOR DUZEYINDE AYKIRI DEGER SORGULAMASI DENIR ","7e239101":"df_table<alt_sinir","6839c136":"aykiri_tf=df_table<alt_sinir\naykiri_tf[0:13]","9eac1722":"aykirilar=df_table[aykiri_tf]\naykirilar.index\n#Burda aykirilarin kendisi geliyor\n#aykiri gozlemlerin indexini yakaladik","09951f2a":"import pandas as pd\ndisplay(df_table.head())\ndisplay(type(df_table))\ndisplay(df_table.shape)","2d1f7a98":"#clean_df_table=df_table[~((df_table<(alt_sinir))|(df_table>(ust_sinir))).any(axis=1)]\n#temiz_df_table = df_table[~((df_table < (alt_sinir)) | (df_table > (ust_sinir))).any(axis = 1)]","9850695e":"#temiz_df_table.shape","046a3ecf":"df_table=df[\"table\"].copy()","c8c1decd":"sns.boxplot(x=df_table)","85dcdc2b":"df_table[aykiri_tf]","a3449714":"df_table.mean()","a07434b7":"df_table[aykiri_tf]=df_table.mean()\n\ndf_table[aykiri_tf]#tekrar cagirdigimizda ortalamayla dolduruldugunu goruyoruz","a9c88cbf":"aykiri_tf=(df_table<(alt_sinir))|(df_table>(ust_sinir))","bdcc048e":"df_table[aykiri_tf].head()\n#aykiri degerleri tek tarafli bakmistik ,bir de 2 tarafli bakalim","2fe6ffdf":"df_table.describe() #onceki describe hali","481e9b1d":"df_table[aykiri_tf] = df_table.mean() #tum 2 tarafli olan aykiri degerler ortalama ile dolduruldu.","90c6744e":"df_table.describe() #sonraki describe hali.std ve mean kuculdu","20fbfd6d":"#bunu silmek istemedigimiz icin yapiyoruz cunku onemli olabilecegini dusunuyoruz.\ndf_table = df[\"table\"].copy()\n\naykiri_tf = df_table < (alt_sinir)\ndf_table[aykiri_tf]","3211293c":"df_table[aykiri_tf] = alt_sinir \n#aykiri olan degerleri alt sinir degerine esitledik.Bunu ust sinir icin de yapabiliriz ayri\ndf_table[aykiri_tf]","15fab654":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import LocalOutlierFactor\n#Kendimiz suni sekilde bir yapi olusturuyoruz.Grafikle ele alabilmek icin yaptik.\nnp.random.seed(42) #olusturulacak sayilarin sabit olmasini sagliyoruz.\nX_inliers = np.random.normal(70, 3, (100, 2))#normal bir dagilimdan bunu olusturduk.\n#ortalamasi 70,std si 3 olan(varyansi) 2 boyutlu veri seti olusturuyoruz\n\nX_inliers = np.r_[X_inliers + 10, X_inliers - 10] \n\nprint(X_inliers.shape)\nprint(X_inliers[:3,:2])","19c75329":"X_outliers = np.random.uniform(low=15, high=130, size=(20, 2))\n#en dusuk 15 en yuksek 130 olan 2 degiskenden olusan outlier olusturuyoruz.\nX_outliers","17204e4d":"X = np.r_[X_inliers, X_outliers]  #2 suni veriyi birlestiriyoruz.\nX[0:3,:]","2b112a6a":"#LOF SKORLARININ HESAPLANMASI\nLOF = LocalOutlierFactor(n_neighbors = 20, contamination = 0.1)\nLOF.fit_predict(X)\nX_score = LOF.negative_outlier_factor_  \n#butun gozlemleri bu skorlama islemine tabi tutma islemi\nX_score[0:3]","43ad40a8":"X_score.mean()","356639ee":"X_score.std()","e2fb206c":"np.sort(X_score)[0:10]","1bed32da":"plt.hist(X_score, bins = \"auto\", density = True)\nplt.show","86514b78":"#AYKIRI GOZLEMLERIN GORSELLESTIRILMESI\nplt.scatter(X[:,0], X[:,1], color = \"k\", s = 3, label = \"G\u00f6zlem Birimleri\");","1c9e7b1b":"radius = radius = (X_score.max() - X_score) \/ (X_score.max() - X_score.min())","91bd54dc":"plt.scatter(X[:,0], X[:,1], color = \"k\", s = 3, label = \"G\u00f6zlem Birimleri\");\n\nplt.scatter(X[:, 0], X[:, 1], s = 1000 * radius, edgecolors='r', \n            facecolors='none',label='LOF Skorlar\u0131') #facecolor halkalarin icini bos birakmak analami\n\nplt.xlim((10,100))\nplt.ylim((10,100))\n\nlegend = plt.legend(loc = \"upper left\")\n\nlegend.legendHandles[0]._sizes = [10]\nlegend.legendHandles[1]._sizes = [30]  #2 degisken varmis gibi grafik olustu.\n#cok degisken oldugunda boyut indirgemesi yapip(2 ye indirip) boyle grafiklendirilebilir","1e9dacc6":"#AYKIRI GOZLEMLERIN YAKALANMASI\nX[0:3]","4bd20c7e":"np.sort(X_score)[0:9]","39a5b685":"esik_deger = np.sort(X_score)[9]\nesik_deger","0cac65ad":"(X_score > esik_deger)[200:220]","7799be69":"tf_vektor = (X_score > esik_deger)\n\nX[X_score < esik_deger]  #aykiri gozlemlerin kendisine ulasmis oluruz.\n# > yaparsak aykiri gozlemlerden arinmis seklini gormus oluruz ","c44afd88":"X[~tf_vektor]  #aykiri gozlemlere boyle de erisebiliriz.","30d574f3":"X[X_score < esik_deger]","75b6ed31":"X[200:220] #ornegin bunun icinde bazi aykiri degerleri yakalabiliriz,gorebiliriz.\n#belki o degisken tek basina aykiri deger degil ama baska degiskenle beraber \n#degerlendirildiginde aykiri gozlem olmus olabilir","64cb6aab":"df = X[X_score > esik_deger]\n\ndf[0:10]","74bb2719":"#AYKIRI GOZLEMLERI ORTALAMA ILE DOLDURMA.\ndf_X = X.copy()\nnp.mean(df_X[0])","164a950f":"np.mean(df_X[1])","b334263a":"df_X[~tf_vektor] #aykiri gozlemlerimiz","b2ba9b9b":"aykirilar = df_X[~tf_vektor]\naykirilar[:,:1]","64e445fc":"aykirilar[:,:1] = np.mean(df_X[0]) #1.degisken icin yaptik","63ffc4e4":"aykirilar[:,1:2] = np.mean(df_X[1]) #2.degisken icin yaptik\naykirilar #cagirdigimiz da 2 si icin de degistigini gormus oluruz","d255d93f":"df_X[~tf_vektor] = aykirilar #bu islem ile doldurmus olduk\ndf_X[~tf_vektor]","8860d0f8":"#AYKIRI DEGERLERI BASKILAMA ILE DEGISTIRMEK(LOF UN VERDIGI SKORLARA GORE)\ndf_X = X.copy()\n\ndf_X[~tf_vektor]","0cd1bb79":"df_X[X_score == esik_deger]","7bfeddff":"df_X[~tf_vektor] = df_X[X_score == esik_deger] #aykiri degerleri esik degere esitlemis olduk\ndf_X[~tf_vektor]","8e2547c2":"import numpy as np\nimport pandas as pd\n\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","1ba8ff74":"df.isnull().sum()","e3811ebc":"df.dropna()\ndf#degismedi inplace ya da bir degiskene atanabilir","e7b613f4":"dff = df.dropna()\ndff.isnull().sum()","5f1b919b":"df[\"V1\"].mean()","ff5e20b8":"df[\"V1\"].fillna(df[\"V1\"].mean())","c52c06d0":"df[\"V1\"].fillna(0)","1f750012":"df.apply(lambda x: x.fillna(x.mean()), axis = 0)","9a075538":"import numpy as np\nimport pandas as pd\n\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","cbf0cc7e":"df.shape","b70fd943":"df.describe()","a5868d9e":"df.dtypes","afa1d2e7":"df.notnull().sum()  #nan olmayan deger sayilari tum degiskenlerde","7850c898":"df.isnull().sum() #nan sayisi tum degiskenlerde","736f6664":"df.isnull().sum().sum() #tum toplam nan sayisi","76fe7046":"df.isnull() #true fals lu gosterir","91ea8cd7":"df[df.isnull().any(axis = 1)] #kendisinde en az 1 eksik veri olan gozlem birimlerini getirdi","906099a3":"df[df.notnull().all(axis = 1)] #tum degerleri tam olan gozlem birimleri","3cd5328a":"df[df[\"V1\"].notnull() & df[\"V2\"].notnull() & df[\"V3\"].notnull()]\n#tum degerleri tam olan gozlem birimleri(baska yontem-amele)","6b19f14d":"import missingno as msno\nmsno.bar(df);","0fcc8158":"df.isnull().sum()","54c392a5":"import seaborn as sns\nsns.heatmap(df.isnull(), cbar = False);","d0a50632":"msno.matrix(df)","f880c378":"#koralasyon heatmap\nmsno.heatmap(df); \n#kendilerinde eksik olanlarin birbirini etkileme durumlari.Mesela ayni anda veriler bos olabilir,birbiri arasinda koralasyon var mi ona bakiyoruz","07db529b":"null_pattern = (np.random.random(1000).reshape((50, 20)) > 0.5).astype(bool)\n\nnull_pattern = pd.DataFrame(null_pattern).replace({False: None})\n\nmsno.matrix(null_pattern.set_index(pd.period_range('1\/1\/2011', '2\/1\/2015', freq='M')) , freq='BQ');\n#missigno kutuphanesi ornegi:x ekseni birimler,y ekseni tarihler.Elimizde zaman serisi varsa bu sekilde yapilabilir","198c7ef4":"V1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","249423a0":"df.dropna()","658de0d7":"df.dropna(how = \"all\") #tum satiri NaN olanlari siler.","d2368eab":"df.dropna(axis = 1) #sutuna bakar en az 1 eksik veri varsa,sutunu siler.","e3253f66":"df[\"V1\"][[3,6]] = 99 #fancy index kullanarak 99 atama yapiyoruz","be47fb60":"df.dropna(axis = 1)  #v1 sutununda NaN veri olmadigi icin kaldi","115d4287":"df.dropna(axis = 1, how = \"all\") #ayni anda bir sutunda hepsi  NaN olanlari silmek icin.","e2adbfc9":"df","6a8ad13a":"df.dropna(axis = 1, how = \"all\", inplace = True)","1510935f":"df","01476dfc":"V1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","2b3bd31f":"df[\"V1\"].fillna(0)  # 0 ile doldurduk ","80f3697c":"df[\"V1\"].fillna(df[\"V1\"].mean())  #v1 sutunindaki NaN degerleri v1 in ortalamasiyla doldurduk","58a13cf1":"df.apply(lambda x: x.fillna(x.mean()), axis = 0 ) #tum gozlemleri kendi ortalamalariyla doldurma","1427ee21":"df.fillna(df.mean()[:]) #tum gozlemleri kendi ortalamalariyla doldurma(kisa yolu)","fd4a7e36":"df.fillna(df.mean()[\"V1\":\"V2\"]) #ilk iki degiskeni ortalamayla doldurmak istiyoruz\ndf.fillna(df.median()[\"V3\"]) #Diyelimki dagilim carpik oldugu icin boyle tercih ettik.","a7678e23":"df.where(pd.notna(df), df.mean(), axis = \"columns\")#pandas in baska bir yolu  ?????","c6b53721":"V1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\nV4 = np.array([\"IT\",\"IT\",\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"])\n\ndf = pd.DataFrame(\n        {\"maas\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3,\n        \"departman\" : V4}        \n)\n\ndf","f6b94434":"df.groupby(\"departman\")[\"maas\"].mean() \n#biz eger maas daki nan degerlere onun ortalamasini atarsak hata yapmis oluruz ,\n#kategorik degiskenlerin kirilimina bakmamiz lazim,mesela departman kismi\n#siniflarini da gozonunde bulundurup atama yaparsak daha isabet olur.","44e9d8d8":"df[\"maas\"].fillna(df.groupby(\"departman\")[\"maas\"].transform(\"mean\"))\n#departman degerinde,kiriliminda degerleri basmis olduk,sonuna implace koyarsak kalici hale gelir","2f923d2c":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\nV4 = np.array([\"IT\",np.NaN,\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"])\n\ndf = pd.DataFrame(\n        {\"maas\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3,\n        \"departman\" : V4}        \n)\n\ndf","c6e9f69f":"df.isnull() #eksik bilgi yok gozukuyor ama kucuk harflerle nan yazilmis","00a1581c":"df.groupby(\"departman\")[\"departman\"].count() #burada yakalayabiliriz","0d4188e4":"df.departman.loc[df.departman == \"nan\"] = \"IK\" #IK atadik","0bb06344":"df","b892e804":"df.departman[0] = df.V3[0]","0aeeb07e":"df","0e903041":"df.groupby(\"departman\")[\"departman\"].count()","e3a80258":"df.departman.fillna(df[\"departman\"].mode()) #mode, yani en cok tekrar edeni atamis oldu\n#baska bir yontem: kendisinden bir onceki veya sonraki degerlerle de doldurabiliriz.","807a03d5":"V1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\nV4 = np.array([\"IT\",\"IT\",\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"])\n\ndf = pd.DataFrame(\n        {\"maas\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3,\n        \"departman\" : V4}        \n)\n\ndf","d2e36d02":"df[\"maas\"].interpolate() #nan degeri kendisinden bir onceki ve bir sonraki degerin ortalamasiyla dolduruyor","05c56f30":"df[\"maas\"].fillna(method = \"bfill\")#bir sonraki degerle dolduruyor","4834b41c":"import seaborn as sns\ndf = sns.load_dataset('planets').copy()\ndf = df.select_dtypes(include = ['float64', 'int64'])\nprint(df.isnull().sum())\nmsno.matrix(df);","1a6ed4a1":"!pip install fancyimpute","f0c1fe19":"from fancyimpute import KNN","6ceaaa41":"import pandas as pd","b3f4b937":"var_names = list(df) #kolon isimleri silinecek ondan sakliyorum isimlerini","1e4540a4":"knn_imp = KNN(k = 5).fit_transform(df);","e4e70fbd":"knn_imp[0:1] #array bu","b6c58ea3":"dff = pd.DataFrame(knn_imp)# dataframe donusturduk","e2670063":"dff.head()","680024e2":"dff.columns = var_names#kolonlarini yazdik","b708b006":"dff.head()","235be5d0":"dff.isnull().sum()","22e44576":"#YCIMPUTE YONTEMI\n!pip install ycimpute","dae72adb":"from ycimpute.imputer import knnimput","ae0887b0":"var_names = list(df)","314736e0":"n_df = np.array(df) #nanpy array e donusturduk bu programda kullanicidan istiyor cevirmeyi ama baska programlarda kendisi cevirebiliyor","bba86f74":"n_df.shape","b40eb5a0":"dff = knnimput.KNN(k=4).complete(n_df)","2ce98818":"dff = pd.DataFrame(dff, columns = var_names)","2e612c08":"dff.head()","66329296":"dff.isnull().sum()","5f7bb653":"import seaborn as sns\ndf = sns.load_dataset('planets').copy()\ndf = df.select_dtypes(include = ['float64', 'int64'])\nprint(df.isnull().sum())\nmsno.matrix(df);","53b595dd":"from ycimpute.imputer import iterforest","3454846f":"var_names = list(df)","4d0fa506":"n_df = np.array(df)","0984f887":"dff = iterforest.IterImput().complete(n_df)","4475f2b3":"df.head()","969c12c4":"from ycimpute.imputer import EM","b129e006":"var_names = list(df)","c35c11d8":"n_df = np.array(df)","d1c27a7a":"dff = EM().complete(n_df)","4b084647":"dff = pd.DataFrame(dff, columns = var_names)","8262b26d":"dff.isnull().sum()","b15aa8da":"import numpy as np\nimport pandas as pd\n\nV1 = np.array([1,3,6,5,7])\nV2 = np.array([7,7,5,8,12])\nV3 = np.array([6,12,5,6,14])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\n\n\ndf = df.astype(float)\ndf","8d8ae665":"from sklearn import preprocessing","087a7f51":"preprocessing.scale(df) #!!! ORTALAMASI 0 VE STANDART SAPMASI 1 OLACAK SEKILDE STANDARTLASTIRILDI","6d20fdbd":"preprocessing.normalize(df)","600033d8":"scaler = preprocessing.MinMaxScaler(feature_range = (10,20))","c80fd414":"scaler.fit_transform(df)","f7e21cb8":"binarizer = preprocessing.Binarizer(threshold = 5).fit(df) #esik deger 5 girildi\n#fit_transform da olur fit de olur","d09ab7ac":"binarizer.transform(df)","9bef159e":"import seaborn as sns\ntips = sns.load_dataset('tips')\ndf = tips.copy()\ndf_l = df.copy()","89980bdf":"df_l.head()","2ab86547":"df_l[\"yeni_sex\"] = df_l[\"sex\"].cat.codes #yeni degisken ekleyip 0 ve 1 lerden olusturuyor","420e09a5":"df.head()","f8b85d32":"df[\"day\"].str.contains(\"Sun\")","953ddafd":"import numpy as np \ndf[\"yeni_day\"] = np.where(df[\"day\"].str.contains(\"Sun\"), 1, 0)","a303cbca":"df","008af2c0":"from sklearn.preprocessing import LabelEncoder\nlbe = LabelEncoder()","85b1a8ab":"lbe.fit_transform(df[\"day\"])","623820c7":"#cok dikkat","9645ad6c":"df.head()","4ecc3225":"df_one_hot = pd.get_dummies(df, columns = [\"sex\"], prefix = [\"sex\"])","2764b875":"df_one_hot.head()","f5632be2":"pd.get_dummies(df, columns = [\"day\"], prefix = [\"day\"]).head()","30203128":"## Veri Standardizasyonu & De\u011fi\u015fken D\u00f6n\u00fc\u015f\u00fcm\u00fc","41fd1caa":"### 3 ) Aykiri degerleri Baskilama ile degistirme(lof skorlarina gore):","4ac5df29":"### 1) Drop outlier:","79f82776":"### Kategorik De\u011fi\u015fkenlerde De\u011fer Atama\u00b6","8af866da":"### Normalizasyon\n* DEGERLERI 0 ILE 1 ARASINDA DONUSTURMEK.Aslinda bu da standartlastirma islemi olarak kabul edilebilir.","352079b2":"# NAN VALUES(Eksik Veri - H\u0131zl\u0131 \u00c7\u00f6z\u00fcm)","c6be565a":"### Silme Y\u00f6ntemleri","1cbe1707":"### G\u00f6rselle\u015ftirme","239dae44":"### 2) we will give mean values for NaN values","74a5a5f4":"# AYKIRI DEGER","0e4bf4be":"### Tahmine Dayal\u0131 De\u011fer Atama Y\u00f6ntemleri\n* bunun icin piyasada 4  5 kutuphane var.fancyinput,ycinput,pymice....","0b997708":"### Min-Max D\u00f6n\u00fc\u015f\u00fcm\u00fc\n* ISTEDIGIMIZ ARALIGA DONUSRURMEK ICIN KULLANILIR.VAARYANS YAPISI KORUNUP OLCEKLER DEGISIYOR","e11373f5":"## COK DEGISKENLI AYKIRI GOZLEM ANALIZI\n* Tek degiskende boxplot kullandik burda LOF kullanacagiz.","0b721baf":"### 3) Aykiri Degerleri Baskilama ile Doldurma","3c1e527e":"### 1 ) Delete outlier","fb3b9eb5":"### One-Hot D\u00f6n\u00fc\u015f\u00fcm\u00fc ve Dummy De\u011fi\u015fken Tuza\u011f\u0131","e2e1c1c6":"### 2)we can write mean for outlier:","b62984a6":"### ZamanSerilerinde Atama \u0130\u015flemleri","5c7c7a9e":"## Ayk\u0131r\u0131 G\u00f6zlem Problemini \u00c7\u00f6zmek","eb6ea93d":"### 1) Drop NaN values","506c49fc":"### 2 )We can write mean for outlier","0841ab43":"### \"1 ve Di\u011ferleri (0) \" D\u00f6n\u00fc\u015f\u00fcm\u00fc","a5bad6b9":"### Standartla\u015ft\u0131rma","14ed2479":"### Basit De\u011fer Atama Y\u00f6ntemleri","0832a085":"### 0-1 D\u00f6n\u00fc\u015f\u00fcm\u00fc\n* KATEGORIK DEGISKENI SUREKLI DEGISKENE CEVIRME ISLEMIDIR","cdd902e3":"### Binarize D\u00f6n\u00fc\u015f\u00fcm\n* BELLI BIR ESIK DEGERE GORE DEGISKENLERIN DEGERLERINI 0 1 E DONUSTURUR.\n* BU ISLEM DEGISKENIN STANDARTLASTIRILMASI DEGIL,DONUSUMU OLMUS OLUYOR,TASIMIS OLDUGU BILGIYI ETKILEMEKTEDIR********","62d3c14b":"### Aykiri Deger probleminin Cozulmesi:","04884246":"### KNN","f5e5e146":"### Random Forests ile Atama","b4973fe0":"### Fancyimpute","ea4a8bec":"### \u00c7ok S\u0131n\u0131fl\u0131 D\u00f6n\u00fc\u015f\u00fcm","5dcb8c96":"### EM ile Atama","2e4f5bf9":"### YCIMPUTE YONTEMI","b7a8004b":"![lof_intuition.png](attachment:lof_intuition.png)","c4a0e2e6":"### VECTOR DUZEYINDE AYKIRI DEGER SORGULAMA:","e928c858":"### Eksik veriyi saptamak"}}