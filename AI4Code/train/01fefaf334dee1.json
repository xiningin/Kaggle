{"cell_type":{"e2ee196a":"code","3a1c5875":"code","d532cd21":"code","07388f8b":"code","8211d007":"code","78f8aa31":"code","a5fd3326":"code","4423475a":"code","de0b11ea":"code","5699394f":"code","339534ea":"code","527bb4ba":"code","811fb663":"code","203ad4bf":"code","ded5615c":"code","b33c23c3":"code","30c32daa":"code","5894faea":"code","7a38d491":"code","8050a201":"code","eb1fef12":"code","3f6d39b4":"code","a3a28546":"code","e6b9fcbb":"code","80ac4943":"code","a4deb5c1":"code","b5a1b8b5":"code","3b4ffb31":"code","5efc3435":"code","d006c653":"code","400012ee":"code","fc4b3f7a":"markdown","332f602c":"markdown","4696f303":"markdown","8bcfbced":"markdown","b0bc4d7a":"markdown","bf5a6843":"markdown","ce23b86f":"markdown","fed9655f":"markdown","d4c19e3b":"markdown","59edfc65":"markdown","134eed37":"markdown","c2f37323":"markdown","a838bce9":"markdown","38c4ecf7":"markdown","6e25c126":"markdown","2942ff4f":"markdown","3a38c178":"markdown","c77d24b7":"markdown","48017455":"markdown","34543f86":"markdown","8825ec99":"markdown","db8dba25":"markdown","30015b14":"markdown","900283f5":"markdown","d74079c7":"markdown","3e20365e":"markdown","4695fa15":"markdown"},"source":{"e2ee196a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a1c5875":"# Displaying the dataset using Pandas\ndata = pd.read_csv(\"\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\nprint(data)","d532cd21":"# Checking the presence of Null values\ndata.isnull().sum()","07388f8b":"# Counting the duplicates in Author column\na = data.pivot_table(index = ['Author'], aggfunc ='size') \na = a.reset_index()\na.columns= [\"Author\", \"Counts\"]\nprint(a)","8211d007":"# Importing Plotly Library\nimport plotly.express as px\n\n# Creating Scatter Plot\nfig = px.scatter(a, x='Author', y='Counts', color='Author', title=\"TOTAL NUMBER OF BOOKS PUBLISHED BY INDIVIDUAL AUTHORS\")\n\n# Displaying Scatter Plot\nfig.show()","78f8aa31":"# Displaying Authors and their total books published in Descending Order\naone = a.nlargest(250, [\"Counts\"])\nprint(aone)","a5fd3326":"# Displaying top 50 Authors having higher number of Books Published \natwo = aone[0:50]\nprint(atwo)","4423475a":"# Importing Matplotlib Library\nfrom matplotlib import pyplot as plt \n\n# Creating Linear Plot with Customizations\nfig = plt.figure(figsize =(15, 10)) \nplt.plot(atwo[\"Counts\"], atwo[\"Author\"], color='orange', linestyle='dashed', linewidth = 3, marker='o', markerfacecolor='blue', markersize=12)\nplt.xlabel(\"COUNTS\", fontsize=25) \nplt.xticks(fontsize=15)\nplt.ylabel(\"AUTHOR\", fontsize=25) \nplt.yticks(fontsize=10)\nplt.title(\"TOP 50 AUTHORS HAVING HIGHER NUMBER OF BOOKS PUBLISHED\", fontsize=20)\n\n# Displaying Linear Plot with Customizations\nplt.show() ","de0b11ea":"# Counting the duplicates in User Rating column\nur = data.pivot_table(index = ['User Rating'], aggfunc ='size') \nur = ur.reset_index()\nur.columns= [\"User Rating\", \"Counts\"]\nprint(ur)","5699394f":"# Displaying Different User Rating Values in Descending Order \nurone = ur.nlargest(14, [\"Counts\"])\nprint(urone)","339534ea":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(urone[\"Counts\"], labels=urone[\"User Rating\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(urone[\"Counts\"], fontsize=8)\nplt.title(\"DIFFERENT USER RATING VALUES AND THEIR COUNTS\",fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","527bb4ba":"# Creating Scatter Plot\nfig = px.scatter(data, x='Author', y='User Rating', color='Author', title=\"DIFFERENT AUTHORS AND USER RATINGS FOR THEIR BOOKS\")\n\n# Displaying Scatter Plot\nfig.show()","811fb663":"# Counting the duplicates in Price column\np = data.pivot_table(index = [\"Price\"], aggfunc = 'size') \np = p.reset_index()\np.columns= [\"Price\", \"Counts\"]\nprint(p)","203ad4bf":"# Creating Bar Chart\nfig = plt.figure(figsize =(50, 15)) \nplt.bar(p[\"Price\"], p[\"Counts\"]) \nplt.xlabel(\"PRICE\", fontsize=45) \nplt.xticks(fontsize=25)\nplt.ylabel(\"COUNTS\", fontsize=35) \nplt.yticks(fontsize=15)\nplt.title(\"VARIOUS BOOK PRICES AND THEIR NUMBER OF PUBLISHMENTS\", fontsize=50)\n\n# Displaying Bar Chart \nplt.show() ","ded5615c":"# Creating Scatter Plot\nfig = px.scatter(data, x='Author', y='Price', color='Author', title=\"DIFFERENT AUTHORS AND PRICE VALUES FOR THEIR BOOKS\")\n\n# Displaying Scatter Plot\nfig.show()","b33c23c3":"# Creating 3D Scatter Plot\nfig = px.scatter_3d(data, x='Author', y='User Rating', z='Price', color='Author', title=\"DIFFERENT AUTHORS WITH USER RATINGS AND PRICE VALUES OF THEIR BOOKS\")\n\n# Displaying 3D Scatter Plot\nfig.show()","30c32daa":"# Counting the duplicates in Year column\ny = data.pivot_table(index = [\"Year\"], aggfunc = 'size') \ny = y.reset_index()\ny.columns= [\"Year\", \"Counts\"]\nprint(y)","5894faea":"# Creating Pie Chart\nfig = plt.figure(figsize =(15, 70)) \nplt.pie(y[\"Counts\"], labels = y[\"Year\"])\nplt.legend(y[\"Counts\"], fontsize=10)\nplt.title(\"TOTAL NUMBER OF BOOKS PUBLISHED IN A YEAR\", fontsize=25)\n\n# Displaying Pie Chart \nplt.show() ","7a38d491":"# Creating 3D Scatter Plot\nfig = px.scatter_3d(data, x='User Rating', y='Price', z='Year', color='Author', title=\"DIFFERENT AUTHORS WITH USER RATINGS, PRICE VALUES AND THE YEAR OF PUBLISHMENT OF THEIR BOOKS\")\n\n# Displaying 3D Scatter Plot\nfig.show()","8050a201":"# Counting the duplicates in Genre column\ng = data.pivot_table(index = [\"Genre\"], aggfunc = 'size') \ng = g.reset_index()\ng.columns= [\"Year\", \"Counts\"]\nprint(g)","eb1fef12":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(g[\"Counts\"], labels=g[\"Year\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(g[\"Counts\"])\nplt.title(\"BOOK GENRES AND THEIR COUNTS\", fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","3f6d39b4":"# Creating 3D Scatter Plot\nfig = px.scatter_3d(data, x='Genre', y='User Rating', z='Price', color='Author', title=\"DIFFERENT AUTHORS WITH USER RATINGS, TYPES OF GENRE AND PRICE VALUES OF THEIR BOOKS\")\n\n# Displaying 3D Scatter Plot\nfig.show()","a3a28546":"# Creating 3D Scatter Plot\nfig = px.scatter_3d(data, x='Year', y='User Rating', z='Price', color='Genre', title=\"RELATIONSHIP BETWEEN USER RATINGS, TYPES OF GENRE, PRICE VALUES AND THE PUBLISHMENT OF THE BOOKS\")\n\n# Displaying 3D Scatter Plot\nfig.show()","e6b9fcbb":"# Creating 3D Scatter Plot\nfig = px.scatter_3d(data, x='Year', y='Genre', z='Author', color='Author', title=\"DIFFERENT AUTHORS WITH YEARS OF BOOK PUBLISHMENT AND TYPES OF BOOK GENRE\")\n\n# Displaying 3D Scatter Plot\nfig.show()","80ac4943":"# Input Features\nx = data.drop(columns=[\"Genre\"])\nprint(x)","a4deb5c1":"# Output features\ny = data[[\"Genre\"]]\nprint(y)","b5a1b8b5":"# Input Features - Label Encoding\nfrom sklearn.preprocessing import LabelEncoder \nle = LabelEncoder() \nx = x.apply(le.fit_transform)\nprint(x)","3b4ffb31":"# Output Features - Label Encoding\ny = le.fit_transform(y) \ny = y.ravel()\nprint(y)","5efc3435":"# Train - Test Split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)","d006c653":"# Training ML model and Finding its accuracy\nfrom sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier()\nclf.fit(x_train, y_train)\ny_clf = clf.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Decision Tree Classifier Accuracy : \",accuracy_score(y_test, y_clf))","400012ee":"# Training ML model and Finding its accuracy\nfrom sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(random_state=0, n_estimators=100, criterion='gini')\nrfc.fit(x_train, y_train)\ny_rfc = rfc.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Random Forest Classifier Accuracy : \", accuracy_score(y_test, y_rfc))","fc4b3f7a":"# COUNTING THE DUPLICATES IN YEAR COLUMN","332f602c":"# DISPLAYING DIFFERENT USER RATING VALUES IN DESCENDING ORDER","4696f303":"# VISUALIZING TOTAL NUMBER OF BOOKS PUBLISHED IN A YEAR USING PIE CHART","8bcfbced":"# TRAIN-TEST SPLIT","b0bc4d7a":"# COUNTING THE DUPLICATES IN PRICE COLUMN","bf5a6843":"# VISUALIZATION OF BOOK GENRES AND THEIR COUNTS BY DONUT PLOT","ce23b86f":"# VISUALIZATION OF DIFFERENT USER RATING VALUES AND THEIR COUNTS BY DONUT PLOT","fed9655f":"# LABEL ENCODING","d4c19e3b":"# VISUALIZING DIFFERENT AUTHORS WITH USER RATINGS, PRICE VALUES AND THE YEAR OF PUBLISHMENT OF THEIR BOOKS BY USING 3D SCATTER PLOT","59edfc65":"# VISUALIZING DIFFERENT AUTHORS AND PRICE VALUES FOR THEIR BOOKS BY USING SCATTER PLOT","134eed37":"# VISUALIZATION OF TOP 50 AUTHORS HAVING HIGHER NUMBER OF BOOKS PUBLISHED USING LINEAR PLOT","c2f37323":"# CHECKING THE PRESENCE OF NULL VALUES","a838bce9":"# VISUALIZING RELATIONSHIP BETWEEN USER RATINGS, TYPES OF GENRE, PRICE VALUES AND THE PUBLISHMENT OF THE BOOKS BY USING 3D SCATTER PLOT","38c4ecf7":"# VISUALIZING DIFFERENT AUTHORS WITH USER RATINGS, TYPES OF GENRE AND PRICE VALUES OF THEIR BOOKS BY USING 3D SCATTER PLOT","6e25c126":"# COUNTING THE DUPLICATES IN USER RATING COLUMN","2942ff4f":"# DISPLAYING AUTHORS AND THEIR TOTAL BOOKS PUBLISHED IN DESCENDING ORDER","3a38c178":"# TRAINING ML MODEL AND FINDING ITS ACCURACY","c77d24b7":"# VISUALIZING VARIOUS BOOK PRICES AND THEIR NUMBER OF PUBLISHMENTS USING BAR CHART","48017455":"# DISPLAYING THE DATASET USING PANDAS","34543f86":"# SPLITTING INPUT AND TARGET FEATURES","8825ec99":"# VISUALIZING DIFFERENT AUTHORS WITH YEARS OF BOOK PUBLISHMENT AND TYPES OF BOOK GENRE BY USING 3D SCATTER PLOT","db8dba25":"# VISUALIZATION OF TOTAL NUMBER OF BOOKS PUBLISHED BY INDIVIDUAL AUTHORS BY SCATTER PLOT","30015b14":"# COUNTING THE DUPLICATES IN GENRE COLUMN","900283f5":"# DISPLAYING TOP 50 AUTHORS HAVING HIGHER NUMBER OF BOOKS PUBLISHED","d74079c7":"# COUNTING THE DUPLICATES IN AUTHOR COLUMN","3e20365e":"# VISUALIZING DIFFERENT AUTHORS AND USER RATINGS FOR THEIR BOOKS BY SCATTER PLOT","4695fa15":"# VISUALIZING DIFFERENT AUTHORS WITH USER RATINGS AND PRICE VALUES OF THEIR BOOKS BY USING 3D SCATTER PLOT"}}