{"cell_type":{"69300f49":"code","eb69716a":"code","ada33392":"code","3ef6d15b":"code","26481697":"code","57ca77cd":"code","070daa2a":"code","100f2ad7":"code","b1b86501":"code","2bb97ce7":"code","4d442456":"code","908d060b":"code","a138230c":"code","5f9607c5":"code","f5a8f06f":"code","504a771b":"code","f957b33c":"code","0e6dd0bc":"code","b6c3e86b":"code","d7925a68":"code","c83c6889":"code","cd3f2af5":"code","c25a9e11":"code","45ae0016":"code","bf6b6850":"code","c5707429":"code","87d4c35b":"code","7c08691b":"code","67bd26dd":"code","8c234b63":"markdown","dc0ef142":"markdown","33b230b3":"markdown","027f1214":"markdown","d64b7b03":"markdown","f24e1ebf":"markdown","a6b3d4ca":"markdown","43903c25":"markdown","6e47a5da":"markdown","b2214263":"markdown","ca68a5df":"markdown","a7356a44":"markdown","3ab178c3":"markdown","f7a1274f":"markdown","14e03e66":"markdown","a60e4fc8":"markdown","2e6c4166":"markdown","5d84f358":"markdown","744e5931":"markdown","82a84f1b":"markdown","248f7d0e":"markdown","450a83a7":"markdown","08dafd92":"markdown","4313d936":"markdown","f4740ef3":"markdown"},"source":{"69300f49":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-darkgrid\")\n%matplotlib inline\nimport seaborn as sns\nfrom collections import Counter\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eb69716a":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_pass_id=test.PassengerId\ntrain.head()","ada33392":"train.describe()\n","3ef6d15b":"def _plot_bar_of_variable_named_as(_data_frame,_variable_name):\n    var_data=_data_frame[_variable_name]\n    var_data_value_counts=var_data.value_counts()\n    plt.figure(figsize=(12,4))\n    plt.bar(var_data_value_counts.index, var_data_value_counts,edgecolor=\"black\",lw=2)\n    plt.xticks(var_data_value_counts.index, var_data_value_counts.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(_variable_name)\n    plt.show()\n    print(_variable_name,end=\";\\n\")\n    for _index, _index_value in zip (var_data_value_counts.index, var_data_value_counts.index.values):\n        print(f\"{_index_value} : {var_data_value_counts[_index]}\")\n    \ncategorical_var_name_list=[\"Survived\", \"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nfor _var_name in categorical_var_name_list:\n    _plot_bar_of_variable_named_as(train,_var_name)","26481697":"def _plot_histogram_of_variable_named_as(_data_frame,_variable_name):\n    var_data=_data_frame[_variable_name]\n    plt.figure(figsize=(12,4))\n    plt.hist(var_data,bins=var_data.nunique()\/\/3,edgecolor=\"black\",lw=2)\n    plt.title(_variable_name+\" Distribution\")\n    plt.ylabel(\"Frequency\")\n    plt.xlabel(_variable_name)\n    plt.show()\nnumerical_var_name_list=[\"Age\", \"Fare\"]\nfor _var_name in numerical_var_name_list:\n    _plot_histogram_of_variable_named_as(train,_var_name)","57ca77cd":"#Pclass - Survived \ntemp_data=train[[\"Pclass\",\"Survived\"]].groupby(\"Pclass\").mean()\ntemp_data.insert(temp_data.columns.get_loc(\"Survived\"),\"Number Of People\",train.groupby(\"Pclass\").size())\ntemp_data.sort_values(by=\"Survived\",ascending=False)","070daa2a":"#Sex - Survived \ntemp_data=train[[\"Sex\",\"Survived\"]].groupby(\"Sex\").mean()\ntemp_data.insert(temp_data.columns.get_loc(\"Survived\"),\"Number Of People\",train.groupby(\"Sex\").size())\ntemp_data.sort_values(by=\"Survived\",ascending=False)","100f2ad7":"#SibSp - Survived \ntemp_data=train[[\"SibSp\",\"Survived\"]].groupby(\"SibSp\").mean()\ntemp_data.insert(temp_data.columns.get_loc(\"Survived\"),\"Number Of People\",train.groupby(\"SibSp\").size())\ntemp_data.sort_values(by=\"Survived\",ascending=False)","b1b86501":"#Parch - Survived \ntemp_data=train[[\"Parch\",\"Survived\"]].groupby(\"Parch\").mean()\ntemp_data.insert(temp_data.columns.get_loc(\"Survived\"),\"Number Of People\",train.groupby(\"Parch\").size())\ntemp_data.sort_values(by=\"Survived\",ascending=False)","2bb97ce7":"def detect_outliers(_data_frame,features):\n    outlier_indices=list()\n    for _feature in features:\n        q3=np.percentile(_data_frame[_feature],75)\n        q1=np.percentile(_data_frame[_feature],25)\n        outlier_step=(q3-q1)*1.5\n        outlier_list_col=_data_frame[(_data_frame[_feature]<(q1-outlier_step)) | (_data_frame[_feature]>(q3+outlier_step) )].index\n        outlier_indices.extend(outlier_list_col)\n    return list( i for i,v in Counter(outlier_indices).items() if v>2 )\n\ntrain=train.drop(detect_outliers(train,[\"Age\",\"Fare\",\"SibSp\",\"Parch\"]),axis=0).reset_index(drop=True)\n","4d442456":"concatinated_data=pd.concat([train,test],axis=0).reset_index(drop=True)","908d060b":"print(concatinated_data.columns[concatinated_data.isnull().any()])\nprint(concatinated_data.isnull().sum())","a138230c":"concatinated_data[concatinated_data.Embarked.isnull()]","5f9607c5":"concatinated_data[concatinated_data.Fare.isnull()]","f5a8f06f":"concatinated_data.boxplot(column=\"Fare\", by=\"Embarked\")","504a771b":"concatinated_data.Embarked.fillna(\"C\",inplace=True)\nconcatinated_data[concatinated_data.Embarked.isnull()]","f957b33c":"concatinated_data.Fare.fillna(concatinated_data[concatinated_data[\"Pclass\"]==3].Fare.mean(),inplace=True)","0e6dd0bc":"concatinated_data[concatinated_data.Fare.isnull()]","b6c3e86b":"g=sns.FacetGrid(train, col=\"Survived\") \n# g.map(sns.distplot,\"Age\",bins=25) raises this warning:\n# FutureWarning: `distplot` is a deprecated function and will be removed in a future version. \n# Please adapt your code to use either `displot` (a figure-level function with similar flexibility) \n# or `histplot` (an axes-level function for histograms).\n# Therefor i will replace the sns.distplot with that expression;\ng.map(lambda *args, **kwargs : sns.histplot(*args, **kwargs,kde=True),\"Age\",bins=25)\nplt.show()","d7925a68":"g=sns.FacetGrid(data=train,col=\"Survived\",row=\"Pclass\",height=2)\ng.map(lambda *args, **kwargs : sns.histplot(*args, **kwargs,kde=True), \"Age\", bins=25)\nplt.show()","c83c6889":"g=sns.FacetGrid(data=train,row=\"Embarked\",height=2)\ng.map(sns.pointplot, \"Pclass\",\"Survived\",\"Sex\")\ng.add_legend()\nplt.show()\n# No need to worry about the warnings below since we added legend.","cd3f2af5":"g=sns.FacetGrid(train,col=\"Survived\",row=\"Embarked\",height=2.25)\ng.map(sns.barplot,\"Sex\",\"Fare\")\nplt.subplots_adjust(hspace=0.2, wspace=0.4)\ng.add_legend()\nplt.show()\n# Again, no need to worry about the warning below since we added legend.","c25a9e11":"train[train.Age.isnull()]","45ae0016":"sns.catplot(x=\"Sex\", y=\"Age\",data=train,kind=\"box\")\nplt.show()","bf6b6850":"sns.catplot(x=\"Sex\", y=\"Age\",hue=\"Pclass\",data=train,kind=\"box\")\nplt.show()","c5707429":"sns.catplot(x=\"Parch\", y=\"Age\",data=train,kind=\"box\")\nsns.catplot(x=\"SibSp\", y=\"Age\",data=train,kind=\"box\")\nplt.show()","87d4c35b":"train[\"Sexint\"]=train[\"Sex\"].apply(lambda x:1 if x==\"male\" else 0)","7c08691b":"sns.heatmap(train[[\"Age\",\"Sexint\",\"SibSp\",\"Parch\",\"Pclass\"]].corr(),annot = True)\nplt.show()","67bd26dd":"index_nan_age=list(train.Age[train.Age.isnull()].index)\nfor ind in index_nan_age:\n    first_conditon=train.SibSp==train.iloc[ind].SibSp\n    second_conditon=train.Parch==train.iloc[ind].Parch\n    third_conditon=train.Pclass==train.iloc[ind].Pclass\n    predicted_Age=train.Age[first_conditon&second_conditon&third_conditon].median()\n    train.at[\"Age\",ind]=predicted_Age\ntrain.Age.isnull().any()","8c234b63":"<a id =\"10\"><\/a>\n### Filling Missing Values","dc0ef142":"<a id =\"8\"><\/a>\n## Missing Values\n* [Finding Missing Values](#9)\n* [Filling Missing Values](#10)\n","33b230b3":"* Pclass is an important feature for model training.","027f1214":"<a id =\"5\"><\/a>\n### Numerical Variables","d64b7b03":"Sex is not informative for age prediction since age distribution seems to be quite similar.","f24e1ebf":"<a id =\"7\"><\/a>\n### Outlier Detection","a6b3d4ca":"<a id =\"4\"><\/a>\n### Categorical Variables;","43903c25":"<a id =\"15\"><\/a>\n## Filling missing Age feature.\n<br>In this section the missing values of Age feature is to be filled.","6e47a5da":"<a id =\"1\"><\/a>\n## Load and Checking the Data","b2214263":"# Introduction\nThe sinking of Titanic is one of the most notorius shipwrecks in th history. The Titanic had sank, in 1912, after colliding with an iceberg. The colliding resulted with 1502 of the 2224 pepole's death.\n\n<font color = \"blue\">\nContent:\n    \n    \n1. [Load and Checking the Data](#1)\n2. [Variable Descripton](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variables](#4)\n        * [Numerical Variables](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Values](#8) \n    * [Finding Missing Values](#9)\n    * [Filling Missing Values](#10)\n6. [Age--Survived Relation Analysis](#11)\n7. [Pclass--Age--Survived Analysis](#12)\n8. [Embarked--Sex--Pclass Analysis](#13) \n9. [Embarked--Sex--Fare Analysis](#14)\n10. [Filling missing Age feature.](#15)","ca68a5df":"<a id =\"9\"><\/a>\n### Finding Missing Values","a7356a44":"#### Embarked have 2 missing values and the Fare has only 1.","3ab178c3":"Passengers whose ticket fare paid is greater have had better survival.","f7a1274f":"* As we can see passengers whose age is below or equal to 10 have high survival rate.\n* Some of the oldest passengers had survived.\n* Large number of 20 years old had not survived.\n* Most of the passengers' age is between 15 and 35.","14e03e66":"<a id =\"14\"><\/a>\n## Embarked--Sex--Fare Analysis\n<br>In this section the correlation between the Embarked, Sex and Fare features is to be analysed.","a60e4fc8":"<a id =\"11\"><\/a>\n## Age--Survived Relation Analysis\n<br>In this section the correlation between the Age and Survived features is to be analysed.","2e6c4166":"Finally we have no NaN values left for the Age column.","5d84f358":"<a id =\"3\"><\/a>\n## Univariate Variable Analysis\n   * [Categorical Variables](#4) : Survived, Pclass, Name, Sex, SibSp, Parch, Ticket, Cabin, Embarked\n   * [Numerical Variables](#5)   : PassengerId, Age, Fare ","744e5931":"<a id =\"13\"><\/a>\n## Embarked--Sex--Pclass Analysis\n<br>In this section the correlation between the Embarked, Sex and Pclass features is to be analysed.","82a84f1b":"<a id =\"12\"><\/a>\n## Pclass--Age--Survived Analysis\n<br>In this section the correlation between the Pclass, Age and Survived features is to be analysed.","248f7d0e":"<a id =\"2\"><\/a>\n## Variable Descripton\n\n1. PassengerId: Unique Id number of each passengers.\n1. Survived   : Whether the passenger survived(1) or died(0).\n1. Pclass     : Passenger class.\n1. Name       : Passenger name.\n1. Sex        : Passenger sex.\n1. Age        : Passenger age.\n1. SibSp      : Total number of siblings and spouses of the passenger have on ship.\n1. Parch      : Total number of parentss and children of the passenger have on ship.\n1. Ticket     : Ticket type.\n1. Fare       : Spent on ticket.\n1. Cabin      : Cabin category.\n1. Embarked   : Port where passenger embarked. (C = Cherbourg | Q = Queenstown | S = Southampton)\n\n<font color = \"blue\">\n> float64(2) : Age and Fare\n<br>> int64(5) : PassengerId, Survived, Pclass, SibSp and Parch\n<br>> object(5) : Name, Sex, Ticket, Cabin, Embarked","450a83a7":"Age is not corrolated with Sex but is correlated with SibSp, Parch, Pclass.","08dafd92":"<a id =\"6\"><\/a>\n### Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","4313d936":"First class passengers are older than 2nd class passengers which are older than 3rd class.","f4740ef3":"* Female passengers have much better surival rate compared to male passengers.\n* Embarked and Sex will be used to train the model."}}