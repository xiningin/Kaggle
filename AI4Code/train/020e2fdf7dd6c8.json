{"cell_type":{"3d2b1802":"code","0037f88e":"code","4c9776fc":"code","104d8096":"code","bb45de07":"code","1cb094b1":"code","3b880d3d":"code","e383146e":"code","3bc26e81":"code","1e8144c5":"code","29026971":"code","78622219":"code","d8a882c8":"code","d972fd50":"code","0debe146":"code","0aae66f8":"markdown","4fd78bda":"markdown","f539fe7f":"markdown","07224777":"markdown","c3c20749":"markdown","de5e24bd":"markdown","b2cbac6d":"markdown","71ad10fb":"markdown"},"source":{"3d2b1802":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn import ensemble\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_validate,GridSearchCV\nimport lightgbm as lgbm","0037f88e":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","4c9776fc":"drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)","104d8096":"train.head()","bb45de07":"train.columns","1cb094b1":"def getColumnsExceptOneColumn(df,col):\n    return train.loc[:, train.columns != col].columns.tolist()","3b880d3d":"target_col = \"Survived\"\ny = train[target_col]\n\nfeatures = getColumnsExceptOneColumn(train,target_col)\n\n\nX = train[features]\nX_test = test[features]","e383146e":"str_list = [] # empty list to contain columns with strings\nnum_list = []\nfor colname, colvalue in X.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)","3bc26e81":"str_list","1e8144c5":"num_list","29026971":"params={\"n_estimators\":np.arange(50,300,50),\n        \"max_depth\":np.arange(1,10,1),\n        \"learning_rate\":[0.1,0.01,0.001,0.0001]\n       }","78622219":"xgb_est=lgbm.LGBMClassifier( random_state=42, objective='binary',eval_metric=\"auc\")\n\ngr_xgb_est=GridSearchCV( xgb_est,param_grid=params,cv=5,n_jobs=-1,verbose=10)","d8a882c8":"numeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])\n\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, num_list),\n        ('cat', categorical_transformer, str_list)])\nclf = Pipeline(steps=[('preprocessor', preprocessor),(\"model\", gr_xgb_est)])\nclf.fit(X, y)\n\n","d972fd50":"predictions = clf.predict(X_test)","0debe146":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission['Survived'] = predictions\nsubmission.to_csv('submission.csv', index=False)","0aae66f8":"# Load Data","4fd78bda":"# Devide Column ","f539fe7f":"# predict test data using model","07224777":"# Auto Pipeline","c3c20749":"# Set Train data and target \/ Set Test data","de5e24bd":"# make Model (GridSearch Best LGBM Model)","b2cbac6d":"# Delete Columns","71ad10fb":"# Submission"}}