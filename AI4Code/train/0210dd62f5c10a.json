{"cell_type":{"4e3a5c85":"code","963e21cf":"code","73067555":"code","47a1774c":"code","a17de0ab":"code","eff5782f":"code","d70aa4b0":"code","9f3c1983":"code","434e8427":"code","824f584f":"code","c08fef03":"code","532ab6ad":"code","b8a42370":"code","3532971e":"code","08260673":"code","2b8356cc":"code","d1690ea1":"code","44bae457":"code","db2c7005":"code","e2202928":"code","f8d29e2c":"markdown","096a6659":"markdown","d0b7944d":"markdown","1bcba5b6":"markdown","7a21cb53":"markdown","3fc8a328":"markdown","ae419633":"markdown","b14a8126":"markdown","15acbfcd":"markdown","5891bf93":"markdown","d68817b8":"markdown","ef6d3fc8":"markdown","f61d074f":"markdown","1215823d":"markdown","3c28e1a8":"markdown","a1b3d538":"markdown","a28af958":"markdown"},"source":{"4e3a5c85":"import pandas as pd\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.indexing_selecting_and_assigning import *\nprint(\"Setup complete.\")","963e21cf":"reviews.head()","73067555":"# Your code here\ndesc = reviews['description']\n\n# Check your answer\nq1.check()","47a1774c":"#q1.hint()\n#q1.solution()","a17de0ab":"first_description = desc[0]\n\n# Check your answer\nq2.check()\nfirst_description","eff5782f":"#q2.hint()\n#q2.solution()","d70aa4b0":"first_row = reviews.iloc[0]\n\n# Check your answer\nq3.check()\nfirst_row","9f3c1983":"#q3.hint()\n#q3.solution()","434e8427":"first_descriptions = desc.iloc[0:10]\n\n# Check your answer\nq4.check()\nfirst_descriptions","824f584f":"#q4.hint()\n#q4.solution()","c08fef03":"sample_reviews = reviews.iloc[[1, 2, 3, 5, 8]]\n\n# Check your answer\nq5.check()\nsample_reviews","532ab6ad":"#q5.hint()\n#q5.solution()","b8a42370":"cols = ['country', 'province', 'region_1', 'region_2']\nindices = [0, 1, 10, 100]\ndf = reviews.loc[indices, cols]\n\n# Check your answer\nq6.check()\ndf","3532971e":"#q6.hint()\n#q6.solution()","08260673":"df = reviews.loc[0:99, ['country', 'variety']]\n\n# Check your answer\nq7.check()\ndf","2b8356cc":"#q7.hint()\n#q7.solution()","d1690ea1":"italian_wines = reviews.loc[reviews['country']=='Italy']\n\n# Check your answer\nq8.check()","44bae457":"#q8.hint()\n#q8.solution()","db2c7005":"top_oceania_wines = reviews.loc[\n    (reviews.country.isin(['Australia', 'New Zealand']))\n    & (reviews.points >= 95)\n]\n\n# Check your answer\nq9.check()\ntop_oceania_wines","e2202928":"#q9.hint()\n#q9.solution()","f8d29e2c":"**This notebook is an exercise in the [Pandas](https:\/\/www.kaggle.com\/learn\/pandas) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning).**\n\n---\n","096a6659":"## 9.\n\nCreate a DataFrame `top_oceania_wines` containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.","d0b7944d":"## 6.\n\nCreate a variable `df` containing the `country`, `province`, `region_1`, and `region_2` columns of the records with the index labels `0`, `1`, `10`, and `100`. In other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","1bcba5b6":"## 1.\n\nSelect the `description` column from `reviews` and assign the result to the variable `desc`.","7a21cb53":"## 5.\n\nSelect the records with index labels `1`, `2`, `3`, `5`, and `8`, assigning the result to the variable `sample_reviews`.\n\nIn other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","3fc8a328":"## 7.\n\nCreate a variable `df` containing the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the tutorial:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. \n`loc`, meanwhile, indexes inclusively. \n\n> This is particularly confusing when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 1000 entries, while `df.loc[0:1000]` return 1001 of them! To get 1000 elements using `loc`, you will need to go one lower and ask for `df.iloc[0:999]`. ","ae419633":"# Exercises","b14a8126":"## 8.\n\nCreate a DataFrame `italian_wines` containing reviews of wines made in `Italy`. Hint: `reviews.country` equals what?","15acbfcd":"# Keep going\n\nMove on to learn about **[summary functions and maps](https:\/\/www.kaggle.com\/residentmario\/summary-functions-and-maps)**.","5891bf93":"Run the following cell to load your data and some utility functions (including code to check your answers).","d68817b8":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161299) to chat with other Learners.*","ef6d3fc8":"# Introduction\n\nIn this set of exercises we will work with the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). ","f61d074f":"## 4.\n\nSelect the first 10 values from the `description` column in `reviews`, assigning the result to variable `first_descriptions`.\n\nHint: format your output as a pandas Series.","1215823d":"## 2.\n\nSelect the first value from the description column of `reviews`, assigning it to variable `first_description`.","3c28e1a8":"Look at an overview of your data by running the following line.","a1b3d538":"## 3. \n\nSelect the first row of data (the first record) from `reviews`, assigning it to the variable `first_row`.","a28af958":"Follow-up question: what type of object is `desc`? If you're not sure, you can check by calling Python's `type` function: `type(desc)`."}}