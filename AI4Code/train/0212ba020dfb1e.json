{"cell_type":{"39d284be":"code","219845ea":"code","bb68d60a":"code","9c1ebdae":"code","000f5ccd":"code","15314987":"code","54dda563":"code","ba418d43":"code","a3362b52":"code","e631180c":"code","812e4ff0":"markdown","b0d08012":"markdown","d28a4140":"markdown","6c32ab12":"markdown","0da5ac23":"markdown"},"source":{"39d284be":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n#py.init_notebook_mode(connected=True)\n\n\ndf = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/BR_eleitorado_2016_municipio.csv', delimiter=',')\ndf.head(3)\n","219845ea":"resposta = [[\"uf\", \"Qualitativa Nominal\"],\n            [\"nome_municipio\", \"Qualitativa Nominal\"],\n            [\"total_eleitores\", \"Quantitativa Discreta\"],\n            [\"f_16\", \"Quantitativa Discreta\"],\n            [\"f_17\", \"Quantitativa Discreta\"],\n            [\"f_18_20\", \"Quantitativa Discreta\"],\n            [\"f_21_24\", \"Quantitativa Discreta\"],\n            [\"gen_feminino\", \"Quantitativa Discreta\"],\n            [\"gen_masculino\", \"Quantitativa Discreta\"], \n            [\"gen_nao_informado\",\"Quantitativa Discreta\"]\n           ] #vari\u00e1veis relacionadas a tempo s\u00e3o cont\u00ednuas, mas podem ser discretas pois n\u00e3o h\u00e1 perdas -- (discretiza\u00e7\u00e3o)\nresposta = pd.DataFrame(resposta, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nresposta","bb68d60a":"df['uf'].value_counts().head(5)","9c1ebdae":"df['nome_municipio'].value_counts().head(5)","000f5ccd":"import matplotlib.pyplot as plt\n\nTotals = {'Feminino': df['gen_feminino'].sum()\/1000000,\n          \"Masculino\": df[\"gen_masculino\"].sum()\/1000000,\n          \"N\u00e3o informado\": df[\"gen_nao_informado\"].sum()\/1000000 }\n\nnames = list(Totals.keys())\nvalues = list(Totals.values())\nfig, ax = plt.subplots(1, 2,figsize=(9,6.5))\nax[0].bar(names[0:2], values[0:2], color='lightblue')\n\nfig.suptitle(\"Eleitores por Genero [\/ Milh\u00e3o ]\", fontsize=\"x-large\")\n\nax[1].bar(names[2], values[2], color='lightgray', width=10) ","15314987":"fig, ax = plt.subplots(figsize=(12,12))\ndf.groupby('uf').agg('sum')[['gen_feminino',\"gen_masculino\"]].plot(kind='barh', ax=ax)\nplt.legend(['Feminino', 'masculino'])\nplt.title(\"Eleitores por Estado separado por genero\")\n\nplt.ylabel(\"Estados do Brasil\")\n","54dda563":"Data = {'16':(df['f_16'].sum()\/df['total_eleitores'].sum())*100,\n        '17':(df['f_17'].sum()\/df['total_eleitores'].sum())*100,\n        '18 a 20':(df['f_18_20'].sum()\/df['total_eleitores'].sum())*100,\n        '21 a 24':(df['f_21_24'].sum()\/df['total_eleitores'].sum())*100,\n        '25 a 34':(df['f_25_34'].sum()\/df['total_eleitores'].sum())*100,\n        '35 a 44':(df['f_35_44'].sum()\/df['total_eleitores'].sum())*100,\n        '45 a 59':(df['f_45_59'].sum()\/df['total_eleitores'].sum())*100,\n        '60 a 69':(df['f_60_69'].sum()\/df['total_eleitores'].sum())*100,\n        '70 a 79':(df['f_70_79'].sum()\/df['total_eleitores'].sum())*100,\n        '> 79':(df['f_sup_79'].sum()\/df['total_eleitores'].sum())*100}\n\nnames = list(Data.keys())\nvalues = list(Data.values())\n\nfig, ax = plt.subplots(figsize=(10,10))\nax.bar(names, values, color='lightblue')\n\nfor i, v in enumerate(values):\n    ax.text(i-.3 ,v + .5, \"{0:.2f}%\".format(v), color='k', fontweight='bold')\n\nplt.title(\"Porcentagem do total de eleitores por faixa et\u00e1ria\")","ba418d43":"ElderlybyState = df.groupby('uf').agg({'f_sup_79':'sum'}) \nTotalbyState = df.groupby('uf').agg({'total_eleitores':'sum'})\n\npercentage_of_elderly_by_State = (ElderlybyState['f_sup_79'] \/ TotalbyState['total_eleitores'])*100\n\nfig, ax = plt.subplots(figsize=(16,8))\npercentage_of_elderly_by_State.sort_values(ascending=False).plot(kind='bar', ax=ax, color='lightblue')\n\nplt.title(\"Porcentagem do total de Eleitores com idade superior a 79 anos por estado.\")\nplt.xlabel(\"Estados do Brasil\")","a3362b52":"young = df.groupby('uf').agg({'f_16':'sum','f_17':'sum'}) \n\nYoungByState = young['f_17'] + young['f_16']\nYoungByState_percentage = (YoungByState \/ TotalbyState['total_eleitores'])*100\n\nfig, ax = plt.subplots(figsize=(16,8))\nYoungByState_percentage.sort_values(ascending=False).plot(kind='bar', ax=ax, color='lightblue')\n\nplt.title(\"Porcentagem do total de Eleitores com idade inferior 18 anos por estado.\")\nplt.xlabel(\"Estados do Brasil\")","e631180c":"\"O Objetivo dessa an\u00e1lise \u00e9 mostrar os estados mais engajamento politicamente mostrando a percentagem de eleitores que n\u00e3o s\u00e3o obrigados a votar\"\n\nnao_Obrigatorio = df.groupby('uf').agg({'f_16':'sum','f_17':'sum','f_70_79':'sum','f_sup_79':'sum'}) \nnao_Obrigatorio_perc = nao_Obrigatorio.div(TotalbyState['total_eleitores'], axis=0)*100\n\nnao_Obrigatorio_perc['total']=nao_Obrigatorio_perc.sum(axis=1)\n\nfig, ax = plt.subplots(figsize=(16,8))\nnao_Obrigatorio_perc =nao_Obrigatorio_perc.sort_values(by='total',ascending=False)\nnao_Obrigatorio_perc[['total']].plot(kind='area',ax=ax, color='lightgray')\nnao_Obrigatorio_perc[['f_16','f_17','f_70_79','f_sup_79']].plot(kind='bar',ax=ax)\n\nplt.title(\"Percentagem de eleitores em faixa etaria de voto facultativo por estado\")\nplt.xlabel(\"Estados do Brasil\")\n","812e4ff0":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 1 - Primeiro contato com o Kaggle\n(valendo nota)\n\n* **Data de entrega:** at\u00e9 o final da aula \n* **Professor:**  Matheus Mota\n* **Aluno: Carlos Pinto da Silva Neto\n* **RA:203113","b0d08012":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","d28a4140":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Exerc\u00edcio 1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","6c32ab12":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","0da5ac23":"# Dicas\n\n- Exemplo de acesso aos CSVs dispon\u00edveis no dataset\n> df = pd.read_csv('..\/input\/anv.csv', delimiter=',')"}}