{"cell_type":{"74231d39":"code","f32f85b3":"code","a5186087":"code","c93af5c4":"code","042085c8":"code","e0d6c82b":"code","10aeeb77":"code","05720fe9":"code","eee22eb1":"code","f5a1d6e7":"code","9547c529":"code","d43cfca0":"code","778527c8":"code","22990063":"code","1e4b4e27":"code","a5882026":"markdown","2f40de0e":"markdown"},"source":{"74231d39":"import numpy as np \nimport pandas as pd\n\ndf=pd.read_csv('..\/input\/company-bankruptcy-prediction\/data.csv')","f32f85b3":"df","a5186087":"pip install pycaret","c93af5c4":"from pycaret.classification import *\nclassification = setup(data=df,target='Bankrupt?',train_size=0.8)","042085c8":"best=compare_models()","e0d6c82b":"y=df['Bankrupt?']\nx=df.drop(['Bankrupt?'],axis=1)","10aeeb77":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline","05720fe9":"# Standardizing\nscaler=StandardScaler()\nX=scaler.fit_transform(x)","eee22eb1":"# Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","f5a1d6e7":"# Create Model\nmodel=Sequential()\n\n# Input layer Layer\nmodel.add(Dense(128,activation='relu',input_dim=95))\n\n# Hidden Layer\nmodel.add(Dense(64,activation='relu'))\n\n# Hidden Layer\nmodel.add(Dense(16,activation='relu'))\n\n# Outout Layer\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","9547c529":"# Fit model\nmodel.fit(X_train,y_train,batch_size=5,epochs=10)","d43cfca0":"eval_model=model.evaluate(X_train,y_train)","778527c8":"eval_model","22990063":"y_pred=model.predict(X_test)\ny_pred =(y_pred>0.5)","1e4b4e27":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","a5882026":"# **Pycaret**","2f40de0e":"# **Neural Network**"}}