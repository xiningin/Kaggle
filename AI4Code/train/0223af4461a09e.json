{"cell_type":{"d06b0abd":"code","5b6fa111":"code","94f02d33":"code","d4649825":"code","b3fbab94":"code","d7031917":"code","17a9837e":"code","a643cd24":"code","ff6a519b":"markdown"},"source":{"d06b0abd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b6fa111":"from sklearn.ensemble import RandomForestRegressor ","94f02d33":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","d4649825":"columns = test.columns[1:]\ncolumns","b3fbab94":"X_train = train[columns]\nX_test = test[columns]","d7031917":"target_1 = train['target_carbon_monoxide'].values.reshape(-1,1)\ntarget_2 = train['target_benzene'].values.reshape(-1,1)\ntarget_3 = train['target_nitrogen_oxides'].values.reshape(-1,1)","17a9837e":"rf_1 = RandomForestRegressor(max_depth=100, max_features='sqrt', min_samples_leaf=3,\n                           min_samples_split=12, n_estimators=600,bootstrap=True)\nrf_1.fit(X_train, target_1)\nsubmission['target_carbon_monoxide'] = rf_1.predict(X_test)\n\nrf_2 = RandomForestRegressor(max_depth=8, max_features='auto', min_samples_leaf=1,\n                           min_samples_split=6, n_estimators=1600,bootstrap=True)\nrf_2.fit(X_train, target_2)\nsubmission['target_benzene'] = rf_2.predict(X_test)\n\nrf_3 = RandomForestRegressor(max_depth=40, max_features='sqrt', min_samples_leaf=5,\n                           min_samples_split=10, n_estimators=800,bootstrap=True,)\nrf_3.fit(X_train, target_3)\nsubmission['target_nitrogen_oxides'] = rf_3.predict(X_test)\n\nsubmission.head()","a643cd24":"submission.to_csv('submission_rf_hyper_all.csv', index=False)","ff6a519b":"1. It's simple random forest model with no EDA\n2. I used RandomizedSearchCV to find the optimal hyperparameters for all 3 target variables separately \n3. Then used gridsearchCV for 3 models again\n4. Still novoice so please any feedback negative or positive will be much appreciated.\n5. Insipired by Bojan Tunguz kernel.\n6. Achieved score of 0.24999"}}