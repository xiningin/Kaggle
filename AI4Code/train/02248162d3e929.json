{"cell_type":{"85e4ba80":"code","035159a4":"code","fe1e9362":"code","14146942":"code","0ddfe486":"code","b7d29061":"code","e8b0255f":"code","366a9052":"code","11705dce":"code","84b9bfe0":"code","67f7da3d":"code","0b043eae":"code","dfe8f5e7":"markdown","7f53944f":"markdown","6e54bd2c":"markdown","14b2c9e8":"markdown","b46f293c":"markdown","90d06715":"markdown","589f1b64":"markdown","c6058cda":"markdown","74beace1":"markdown","9634e34b":"markdown","fa1d6ccd":"markdown","dd4507f1":"markdown","6f523fb7":"markdown","d7970923":"markdown","c0afc83e":"markdown","f4822b31":"markdown","26a77379":"markdown","5543b143":"markdown","59690ea5":"markdown","fbf5f5dd":"markdown","420270a9":"markdown"},"source":{"85e4ba80":"from pandas import read_csv\nfrom numpy import nan","035159a4":"#load the dataset, please make sure on your working directory\ndata = read_csv('..\/input\/diamonds\/diamonds.csv')\n\n#view the dataset\ndata","fe1e9362":"# summarize the dataset\ndata.describe()","14146942":"# Finding and counting 0\n(data.loc[:, 'carat':'z'] == 0).sum()","0ddfe486":"# Filtering rows with column condition\ndata.query(\"x == 0 or y == 0 or z == 0\")","b7d29061":"# Replace 0 with NaN\ndata[['x','y','z']] = data[['x','y','z']].replace(0, nan)","e8b0255f":"# Counting NaN\ndata.isnull().sum()","366a9052":"data[data.isnull().any(axis = 1)]","11705dce":"data.describe()","84b9bfe0":"data = data.fillna(data.mean())","67f7da3d":"data[data.isnull().any(axis = 1)]","0b043eae":"data.describe()","dfe8f5e7":"## Whats wrong with having 0 ?\nIf 0 is the real value, for example 0 mark in an exam, we can keep it.\n\nNow, imagine 0 is a data error, like the diamods dataset, it will really effect the data distribution.","7f53944f":"After we have replaced 0 with NaN, we can use the isnull() function to mark the NaN values as True and count the number of missing values for each column.","6e54bd2c":"# # Fill NaN with Values ","14b2c9e8":"## Libraries","b46f293c":"## Marking with NaN","90d06715":"Running this will produce a similiar output as counting 0\u2019s. Note that columns x, y, z have the same number of NaN as zero values identified above. Now you can have a peace of mind!\n\nNow let view the row with missing values\n\n","589f1b64":"## Handling the Unusual Value\nWe first locate and count this 0\u2019s.","c6058cda":"Note that column x, y, z have 8, 7, 20 values with 0 respectively.\n\n![](https:\/\/www.datum.my\/img\/finding0.PNG)","74beace1":"[I updated this section based on the comment]\n\nTraining a model with a dataset containing missing values can impact the quality of your machine learning model. There are few ways to manage this, one such way is by replacing the missing values (also known as *imputation*) within each column with the mean of non-missing values in the column.\n\nLets replace the missing value with the mean value. We can use the 'DataFrame.fillna' to fill up the missing values in the whole dataset.","9634e34b":"Compared this new summary with the previous one that contains missing values. Note that now, \n* the count for x,y,z = 53940, because NaN's are replaced with mean values respective to each column.","fa1d6ccd":"# Handling Unusual Values","dd4507f1":"## Summary Statistics","6f523fb7":"Real-world data often has \u201cunusual values\u201d. Data can have this so called \u201cunusual\u201d values for a number of reasons such as human errors or problem in measuring devices.","d7970923":"## Dataset (Bling Bling $$)","c0afc83e":"In Pandas or NumPy, we can replace them with NaN (missing values) or some refer this step as marking with NaN. Values with a NaN value are ignored from operations like sum or count.\n\nNote that we only need to focus on column x, y, z because this are the columns where the 0\u2019s are located.","f4822b31":"The red arrow indicate the minimum value in each column. Note that column x, y, z, the dimensions of these diamonds, in mm have minimum value 0.\n\nWe know that diamonds can\u2019t have a width of 0 mm, so these values kind of unusual and must be incorrect.\n\n![](https:\/\/www.datum.my\/img\/datadescribe.PNG)","26a77379":"For this tutorial we will be using diamonds dataset. It is a classic dataset and suitable for beginner to explore data analysis.","5543b143":"We can use summary statistics to help identify this unusual data.","59690ea5":"Now lets view the rows when the columns with 0's.","fbf5f5dd":"Now lets view again the summary of the dataset after some cleanup. Note that:\n\n* There is no more 0 values and \n* The count for x,y,z are < 53940, because NaN's are ignored.","420270a9":"Finally lets check again whether all the missing values has been handled."}}