{"cell_type":{"92374c2c":"code","679e80f5":"code","3e7d97d2":"code","f15291c3":"code","3bd65bb3":"code","e286d1b1":"code","075070c6":"code","5d6f787f":"code","27e6627a":"code","1e3eb63a":"code","0c0e727a":"code","586d81e6":"code","fb4e087c":"code","2c69487a":"code","0f5b3f14":"code","66eb3a8e":"code","0de3d62a":"code","c177db41":"code","88fa6428":"markdown","f883b1c6":"markdown","3cd180b7":"markdown","51237227":"markdown","b4d5bb8d":"markdown","45215d87":"markdown","d732d6d8":"markdown","618f9308":"markdown","9e79ce93":"markdown","4f5f2bc5":"markdown","c5b06224":"markdown","aa95ab93":"markdown","fae882fb":"markdown","a46de39e":"markdown","8b5dd3a2":"markdown","ba36d8a9":"markdown"},"source":{"92374c2c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime,timedelta\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.optimize import curve_fit\nfrom scipy.optimize import fsolve\nimport matplotlib.pyplot as plt\n%matplotlib inline","679e80f5":"df=pd.read_csv('..\/input\/cor173\/confirmed_acc.csv')","3e7d97d2":"df = df.loc[:,['date','cases']]\nFMT = '%m\/%d\/%Y'\ndate = df['date']\ndf['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"3\/1\/2020\", FMT)).days  )","f15291c3":"df","3bd65bb3":"#Data tambahan sejak 18 Maret 2020\ndf = df.append({'date' : 17 , 'cases' : 227} , ignore_index=True) #18 Maret\ndf= df.append({'date' : 18, 'cases' : 309}, ignore_index=True) #19 Maret\ndf= df.append({'date' : 19, 'cases' : 369}, ignore_index=True) #20 Maret\ndf=df.append({'date' : 20, 'cases' : 450}, ignore_index=True) #21 Maret\ndf=df.append({'date' : 21, 'cases' : 514}, ignore_index=True) #22 Maret\ndf=df.append({'date' : 22, 'cases' : 579}, ignore_index=True) #23 Maret\ndf=df.append({'date' : 23, 'cases' : 686}, ignore_index=True) #24 Maret\ndf=df.append({'date' : 24, 'cases' : 790}, ignore_index=True) #25 Maret\ndf=df.append({'date' : 25, 'cases' : 893}, ignore_index=True) #26 Maret\ndf=df.append({'date' : 26, 'cases' : 1046}, ignore_index=True) #27 Maret\ndf=df.append({'date' : 27, 'cases' : 1155}, ignore_index=True) #28 Maret\ndf=df.append({'date' : 28, 'cases' : 1285}, ignore_index=True) #29 Maret\ndf=df.append({'date' : 29, 'cases' : 1414}, ignore_index=True) #30 Maret\ndf=df.append({'date' : 30, 'cases' : 1528}, ignore_index=True) #31 Maret\ndf=df.append({'date' : 31, 'cases' : 1677}, ignore_index=True) #1 April\ndf=df.append({'date' : 32, 'cases' : 1790}, ignore_index=True) #2 April\ndf=df.append({'date' : 33, 'cases' : 1986}, ignore_index=True) #3 April\ndf=df.append({'date' : 34, 'cases' : 2092}, ignore_index=True) #4 April\ndf=df.append({'date' : 35, 'cases' : 2273}, ignore_index=True) #5 April\n\n\n","e286d1b1":"df","075070c6":"#df=df.drop([0,1,2,3,4,5,6,7,8])\n            \n            #13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]) ","5d6f787f":"def logistic_model(x,a,b,c):\n    return c\/(1+np.exp(-(x-b)\/a))","27e6627a":"x = list(df.iloc[39:,0])\ny = list(df.iloc[39:,1])\nfit = curve_fit(logistic_model,x,y)","1e3eb63a":"A,B=fit\n#nilai a,b,\nA","0c0e727a":"#a=A[0]\n#b=A[1]\n#c=A[2]","586d81e6":"errors = [np.sqrt(fit[1][i][i]) for i in [0,1,2]]\nerrors","fb4e087c":"#Kemungkinan terburuk\na=A[0]+errors[0]\nb=A[1]+errors[1]\nc=A[2]+errors[2]","2c69487a":"#Jumlah hari maksimal dari 1 Maret 2020\nsol = int(fsolve(lambda x : logistic_model(x,a,b,c) - int(c),b))\nsol","0f5b3f14":"pred_x = list(range(max(x),sol))\nplt.rcParams['figure.figsize'] = [7, 7]\nplt.rc('font', size=14)# Real data\nplt.scatter(x,y,label=\"Real data\",color=\"red\")\n\n# Predicted logistic curve\nplt.plot(x+pred_x, [logistic_model(i,a,b,c) for i in x+pred_x], label=\"Logistic model\" )\n\nplt.legend()\nplt.xlabel(\"Days since 1 March 2020\")\nplt.ylabel(\"Total number of infected people\")\nplt.ylim((min(y)*0.9,c*1.1))\nplt.show()","66eb3a8e":"y_pred_logistic = [logistic_model(i,a,b,c) for i in x]\np=mean_squared_error(y,y_pred_logistic)\n\ns1=(np.subtract(y,y_pred_logistic)**2).sum()\ns2=(np.subtract(y,np.mean(y))**2).sum()\nr=1-s1\/s2\nprint(\"R^2 adalah {}\".format(r))\nprint(\"Mean square errornya adalah {}\".format(p))","0de3d62a":"### Tanggal wabah maksimal\nfrom datetime import timedelta, date\nfrom datetime import datetime  \nfrom datetime import timedelta \n\nstart_date = \"01\/03\/20\"\n\ndate_1 = datetime.strptime(start_date, \"%d\/%m\/%y\")\n\nend_date = date_1 + timedelta(days=sol)\n\nx=end_date.strftime(\"%d %B %Y\")","c177db41":"print(\"Jumlah kasus maksimal di indonesia menurut prediksi adalah {:f}\".format(A[2]+errors[2])) #Penambahan dengan error\nprint(\"Puncak wabah adalah {:.0f} hari setelah 1 Maret 2020 atau {}\". format(sol,x))","88fa6428":"# Kesimpulan","f883b1c6":"# 3. Membuat Model Logistik","3cd180b7":"insyaallah notebook ini akan selalu diupdate","51237227":"# 1. Library","b4d5bb8d":"Notebook ini benar-benar terinspirasi dari https:\/\/towardsdatascience.com\/covid-19-infection-in-italy-mathematical-models-and-predictions-7784b4d7dd8d. \n\n**Mungkin prediksi yang dilakukan tidak efektif dikarenakan data yang digunakan untuk prediksi belum banyak. Kebijakan-kebijakan pemerintah juga memengaruhi jumlah kasus positif di indonesia. dan banyak lagi variabel yang tidak diperhitungkan pada prediksi ini.**\n\n**We aren\u2019t health professionals or epidemiologists**","45215d87":"###### Update 5 April 2020","d732d6d8":"# 2. Input Data","618f9308":"Kali ini saya ingin membuat model logistik pasien positif virus covid-19 di indonesia berdasarkan data dari 1 Maret 2020 sampai hari ini. Notebook ini dibuat karena terinspirasi dari https:\/\/towardsdatascience.com\/covid-19-infection-in-italy-mathematical-models-and-predictions-7784b4d7dd8d ","9e79ce93":"# R Square","4f5f2bc5":"![image.png](attachment:image.png)","c5b06224":"## Wallahu a'lam","aa95ab93":"## Bismillah","fae882fb":"![image.png](attachment:image.png)","a46de39e":"Intinya kita sebagai masyarakat Indonesia, harus mematuhi arahan dari pemerintah agar resiko penularan kecil.\nyaitu dengan cara sosial distancing. Dengan membatasi gerak kita insyaallah resiko penularan kecil.\n\nSemoga kita selalu diberi kesehatan, aamiin.","8b5dd3a2":"![image.png](attachment:image.png)","ba36d8a9":"### Mengubah format tanggal menjadi jumlah hari terhitung dari 1 Maret 2020"}}