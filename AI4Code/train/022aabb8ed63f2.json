{"cell_type":{"bba98714":"code","814cb31a":"code","beb723bb":"code","96383b7d":"code","4c4f7f5f":"code","badcc833":"code","336fc739":"code","2d95fd04":"code","2f9145df":"code","79a57cbc":"code","7e9a50c2":"code","521a35a9":"code","b04e54e1":"code","d6abb145":"code","b6e8917b":"code","841d3ecd":"code","fd6cc80c":"code","d9ccf599":"code","4e613913":"code","9d6003b8":"code","d905069a":"code","e5163e2e":"code","7fa78114":"code","640ab3bc":"code","90740653":"code","5b48d593":"code","3c199084":"code","22ac6b67":"code","984df4d4":"code","afbc4c49":"code","8b4e7d49":"code","4f725084":"code","62e99384":"code","61b3f248":"code","695f1adc":"code","cb9ab6ca":"code","0460cab5":"code","0e08320d":"code","c8c29d47":"code","90005f3f":"code","80f8dce3":"code","831af364":"code","04c65396":"code","4ca08cab":"code","710afe82":"code","ab1398ef":"markdown","75210416":"markdown","495bd381":"markdown","948f409f":"markdown","24d103c2":"markdown","bb0947f4":"markdown","9887e33b":"markdown","9709aad6":"markdown","316d5295":"markdown","2c7de6b5":"markdown","e24fcbcd":"markdown","eb841121":"markdown","18797bc1":"markdown","515ed8a0":"markdown","11e181f9":"markdown","c90c49ec":"markdown","7a1a0e17":"markdown","5e57d2b1":"markdown","64003f9f":"markdown","29a09973":"markdown","b55bdc25":"markdown","2823a9b0":"markdown","0314274f":"markdown","8fced036":"markdown","08136bbe":"markdown","fa1a20cc":"markdown","fb96590b":"markdown","65524300":"markdown","640a8d1e":"markdown","2ae72e0c":"markdown","a93b10d7":"markdown","e90fb594":"markdown","e1386ec3":"markdown","7299876e":"markdown","71f5c206":"markdown","f063a6c0":"markdown","9ae70171":"markdown","6c70bcb9":"markdown","3f5acd45":"markdown"},"source":{"bba98714":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","814cb31a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.figure_factory as ff","beb723bb":"data = pd.read_csv('\/kaggle\/input\/la-liga-results-19952020\/LaLiga_Matches_1995-2020.csv')","96383b7d":"display(data.head())\ndisplay(data.tail())","4c4f7f5f":"data.describe()","badcc833":"data.info()","336fc739":"data.isnull().values.any()","2d95fd04":"data[data.isnull().any(axis=1)]","2f9145df":"data.loc[136,'HTHG'] = 0\ndata.loc[1472,'HTHG'] = 0\n\ndata.loc[136,'HTAG'] = 0\ndata.loc[1472,'HTAG'] = 0\n\ndata.loc[136,'HTR'] = 'D'\ndata.loc[1472,'HTR'] = 'D'","79a57cbc":"data.isnull().values.any()","7e9a50c2":"# Get total match in each season\n\nplt.rcParams['figure.figsize'] = (20,10)\nplt.style.use('dark_background')\n\nsns.countplot(data['Season'], palette = 'gnuplot')\n\nplt.tick_params(labelsize=15) \nplt.title('Number of Matches Played in each Season', fontweight = 30, fontsize =20)\nplt.xticks(rotation = 90)\nplt.show()\n","521a35a9":"plt.style.use('ggplot')\n\nplt.figure(figsize=(20,10))\nfig = plt.subplots()\n\nplt.tick_params(labelsize=15) \n\nplt.subplot(2,2,1)\nplt.boxplot(data['FTHG'])\nplt.ylabel('Goals',fontsize=14)\nplt.title('Distribution of FULL TIME HOME GOALS', fontsize=20, color='magenta')\n\nplt.subplot(2,2,2)\nplt.boxplot(data['FTAG'])\nplt.ylabel('Goals',fontsize=14)\nplt.title('Distribution of FULL TIME AWAY GOALS', fontsize=20, color='magenta')\n\nplt.subplot(2,2,3)\nplt.boxplot(data['HTHG'])\nplt.ylabel('Goals',fontsize=14)\nplt.title('Distribution of HALF TIME HOME GOALS', fontsize=20, color='magenta')\n\nplt.subplot(2,2,4)\nplt.boxplot(data['HTAG'])\nplt.ylabel('Goals',fontsize=14)\nplt.title('Distribution of HALF TIME AWAY GOALS', fontsize=20, color='magenta')\n\nplt.show()","b04e54e1":"# Get total matches played as home team by each team\nteam_home = data['HomeTeam'].value_counts()\n\nteam_home = pd.DataFrame(team_home)\nteam_home['Matches Played as Home Team'] = team_home['HomeTeam']\nteam_home['HomeTeam'] = team_home.index\n\nteam_home.reset_index(drop=True, inplace=True)","d6abb145":"# Selecting only top 20 teams for clean Visualization\nteam_home = team_home.head(20)\n\nsns.set(font_scale = 1.5)\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='HomeTeam',\n                   y='Matches Played as Home Team',\n                   data= team_home)\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches by each Club as Home Team', fontsize=20)","b6e8917b":"team_away = data['AwayTeam'].value_counts()\n\nteam_away = pd.DataFrame(team_away)\nteam_away['Matches Played as Away Team'] = team_away['AwayTeam']\nteam_away['AwayTeam'] = team_away.index\n\nteam_away.reset_index(drop=True, inplace=True)","841d3ecd":"# Selecting only top 20 teams for clean Visualization\nteam_away = team_away.head(20)\n\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='AwayTeam',\n                   y='Matches Played as Away Team',\n                   data= team_away,\n                   palette = 'cubehelix')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches Played by each Club as Away Team', fontsize=20)","fd6cc80c":"total_match = team_home['Matches Played as Home Team'] + team_away['Matches Played as Away Team']\nx = team_home['HomeTeam'].tolist()\ny = total_match.tolist()\nteam_match = pd.DataFrame(list(zip(x, y)), \n               columns =['Team', 'Matches Played'])","d9ccf599":"# Selecting only top 20 teams for clean Visualization\nteam_match = team_match.head(20)\n\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='Team',\n                   y='Matches Played',\n                   data= team_match, palette='cool')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches by each Club', fontsize=20)","4e613913":"data1 = data['Date'].value_counts()\n\ndata1 = pd.DataFrame(data1)\ndata1['Number of Matches Played'] = data1.Date\ndata1['Date'] = data1.index\n\ndata1.reset_index(drop=True, inplace=True)\n\ndata1.max()","9d6003b8":"plt.rcParams['figure.figsize'] = (15, 8)\nsns.countplot(data['FTHG'], palette = 'hsv')\nplt.title('Distribution of Home Team Goals', fontsize = 20)\nplt.show()","d905069a":"plt.rcParams['figure.figsize'] = (15, 8)\nsns.countplot(data['FTAG'], palette = 'copper')\nplt.title('Distribution of Away Team Goals', fontsize = 20)\nplt.show()","e5163e2e":"plt.rcParams['figure.figsize'] = (15, 8)\nsns.heatmap(data.corr(), cmap = 'Wistia', annot = True)\nplt.title('Heatmap for the Data', fontsize = 20)\nplt.show()","7fa78114":"data['FTHG'].sum()","640ab3bc":"data['FTAG'].sum()","90740653":"data['FTHG'].sum() + data['FTAG'].sum()","5b48d593":"ftr = data['FTR'].value_counts()\n\nftr = pd.DataFrame(ftr)\nftr['COUNT'] = ftr.FTR\nftr['FTR'] = ftr.index\n\nftr.reset_index(drop=True, inplace=True)","3c199084":"import plotly.express as px\nfig = px.pie(ftr, values='COUNT', names='FTR', title='Results of LaLiga')\nfig.show()","22ac6b67":"sns.set_style(\"ticks\")\n\nplt.figure(figsize=(15,5))\nfig = sns.barplot(x='FTR',\n                   y='COUNT',\n                   data= ftr,\n                   palette = 'rocket')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=0)\ntemp = fig.set_title('Result at Full Time', fontsize=20)","984df4d4":"# Get total wins for each teams \n\nteam_list = list(data['HomeTeam'].unique())\nteam_win_dic = {}\n\nfor team in team_list:\n    win_cnt = 0\n    \n    for i in range(len(data)):\n        if data['FTR'][i] == 'H' and data['HomeTeam'][i] == team:\n            win_cnt += 1\n        elif data['FTR'][i] == 'A' and data['AwayTeam'][i] == team:\n            win_cnt += 1\n               \n    team_win_dic[team] = win_cnt\n    \n\nteams_win = sorted(team_win_dic.items(), key=lambda team : team[1], reverse=True)\nteam_win = pd.DataFrame(teams_win, columns=['Team','Number of Wins']).head(20)\n# Selecting only top 20 teams for clean Visualization","afbc4c49":"import plotly.graph_objects as go\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=team_win['Team'],\n                               y=team_win['Number of Wins'],\n                               mode = 'lines + markers'))\nfig.update_layout(title = 'Wins for each Team')\nfig.show()","8b4e7d49":"plt.rcParams['figure.figsize'] = (15, 8)\nsns.countplot(data['HTHG'], palette = 'hsv')\nplt.title('Distribution of Home Team Goals', fontsize = 20)\nplt.show()","4f725084":"plt.rcParams['figure.figsize'] = (15, 8)\nsns.countplot(data['HTAG'], palette = 'rainbow')\nplt.title('Distribution of Away Team Goals', fontsize = 20)\nplt.show()","62e99384":"int(data['HTHG'].sum())","61b3f248":"int(data['HTAG'].sum())","695f1adc":"int(data['HTHG'].sum() + data['HTAG'].sum())","cb9ab6ca":"htr = data['HTR'].value_counts()\nhtr = pd.DataFrame(htr)\nhtr['COUNT'] = htr.HTR\nhtr['HTR'] = htr.index\nhtr.reset_index(drop=True, inplace=True)","0460cab5":"import plotly.express as px\nfig = px.pie(htr, values='COUNT', names='HTR', title='Results of LaLiga at Half Time')\nfig.show()","0e08320d":"plt.figure(figsize=(15,5))\nfig = sns.barplot(x='HTR',\n                   y='COUNT',\n                   data= htr ,\n                   palette = 'RdYlBu')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=0)\ntemp = fig.set_title('Result at Half Time', fontsize=20)","c8c29d47":"# Get total Half Time Wins for each teams \n\nteam_list = list(data['HomeTeam'].unique())\nhalftime_win_dic = {}\n\nfor team in team_list:\n    win_cnt = 0\n    \n    for i in range(len(data)):\n        if data['HTR'][i] == 'H' and data['HomeTeam'][i] == team:\n            win_cnt += 1\n        elif data['HTR'][i] == 'A' and data['AwayTeam'][i] == team:\n            win_cnt += 1\n               \n    halftime_win_dic[team] = win_cnt\n    \n\nhalftime_win = sorted(halftime_win_dic.items(), key=lambda team : team[1], reverse=True)\nhalftime_win = pd.DataFrame(halftime_win, columns=['Team','Number of Wins']).head(20)\n# Selecting only top 20 teams for clean Visualization","90005f3f":"import plotly.graph_objects as go\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=halftime_win['Team'],\n                               y=halftime_win['Number of Wins'],\n                               mode = 'lines + markers',\n                               ))\nfig.update_layout(title = 'Wins for each Team if LaLiga lasted for 45 minutes')\nfig.show()","80f8dce3":"# Get total Losses for each teams \n\nteam_list = list(data['HomeTeam'].unique())\nteam_loss_dic = {}\n\nfor team in team_list:\n    loss_cnt = 0\n    \n    for i in range(len(data)):\n        if data['FTR'][i] == 'A' and data['HomeTeam'][i] == team:\n            loss_cnt += 1\n        elif data['FTR'][i] == 'H' and data['AwayTeam'][i] == team:\n            loss_cnt += 1\n               \n    team_loss_dic[team] = loss_cnt\n    \n\nteams_loss = sorted(team_loss_dic.items(), key=lambda team : team[1], reverse=True)","831af364":"team_loss = pd.DataFrame(teams_loss, columns=['Team','Number of Losses']).head(20)\n# Selecting only top 20 teams for clean Visualization\n\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='Team',\n                   y='Number of Losses',\n                   data= team_loss, \n                   palette='cool')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches Lost by each Club', fontsize=20)","04c65396":"team_loss = pd.DataFrame(teams_loss, columns=['Team','Number of Losses']).tail(20)\n# Selecting only top 20 teams for clean Visualization\n\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='Team',\n                   y='Number of Losses',\n                   data= team_loss, \n                   palette='copper')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches Lost by each Club', fontsize=20)","4ca08cab":"# Get total Draws for each teams \n\nteam_list = list(data['HomeTeam'].unique())\nteam_draw_dic = {}\n\nfor team in team_list:\n    draw_cnt = 0\n    \n    for i in range(len(data)):\n        if data['FTR'][i] == 'D' and data['HomeTeam'][i] == team:\n            draw_cnt += 1\n        elif data['FTR'][i] == 'D' and data['AwayTeam'][i] == team:\n            draw_cnt += 1\n               \n    team_draw_dic[team] = draw_cnt\n    \n\nteams_draw = sorted(team_draw_dic.items(), key=lambda team : team[1], reverse=True)\nteam_draw = pd.DataFrame(teams_draw, columns=['Team','Number of Draws']).head(20)\n# Selecting only top 20 teams for clean Visualization","710afe82":"sns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,10))\nfig = sns.barplot(x='Team',\n                   y='Number of Draws',\n                   data= team_draw, \n                   palette='rocket')\nfig.set_xticklabels(fig.get_xticklabels(), rotation=90)\ntemp = fig.set_title('Number of matches Drawn by each Club', fontsize=20)","ab1398ef":"<a id=12><\/a>\n# Maximum number of Matches Played on a Single Day","75210416":"<a id=9><\/a>\n## Number of Matches Played as Home Team by Each Team","495bd381":"#### Displaying Null Values","948f409f":"<a id=2><\/a>\n#### Importing Necessary Libraries","24d103c2":"_____________________________________________________________________________________________________________","bb0947f4":"\n\n# <center> End of The Notebook <\/center>","9887e33b":"<a id=17><\/a>\n## Goals by Home Team at Half Team","9709aad6":"<a id=20><\/a>\n## Half Time Results","316d5295":"<a id=13><\/a>\n# Total Number of Goals by Home Team","2c7de6b5":"<a id=16><\/a>\n## Full Time Results","e24fcbcd":"<a id=4><\/a>\n#### Peeking into the DataFrame","eb841121":"#### Checking Number of entries and DataTypes of each column","18797bc1":"<a id=14><\/a>\n# Total Number of Goals by Away Team","515ed8a0":"# Exploratory Data Analysis","11e181f9":"# Full Time Analysis","c90c49ec":"## Teams with Maximum Draws","7a1a0e17":"<a id=8><\/a>\n# Number of Matches Played in Each Season","5e57d2b1":"<a id=19><\/a>\n# Goals at Half Time","64003f9f":"<a id=3><\/a>\n#### Reading the Data","29a09973":"# Half Time Analysis","b55bdc25":"<a id=6><\/a>","2823a9b0":"## Teams with Minimum Losses","0314274f":"<a id=1><\/a>\n#### List of Input Files","8fced036":"------------------------------------------------------------------------------------------------------","08136bbe":"### Some quick Statistical Inferences :\n * > Number of Matches Played Between 1995 and 2020 = 9604\n * > Average Full time (Home + Away) Goals = 2.69\n * > Average Half time (Home + Away) Goals = 1.17\n * > Maximum Goals by Home Team = 10\n * > Maximum Goals by Away Team = 8 ","fa1a20cc":"## Distribution of Goals","fb96590b":"______________________________________________________________________________________________________","65524300":"## Analysis of Spanish Football League - (1995 - 2020)","640a8d1e":"#### Removing Null Values","2ae72e0c":"# Losses","a93b10d7":"# Draws","e90fb594":"<a id=10><\/a>\n## Number of Matches Played as Away Team by Each Team","e1386ec3":"_____________________________________________________________________________________________________","7299876e":"<a id=18><\/a>\n## Goals by Away Team at Half Team","71f5c206":"<a id=15><\/a>\n# Total Number of Goals","f063a6c0":"<a id=5><\/a>\n### NOTATIONS\n\n* FTHG -  Number of goals scored by **Home Team**.\n* FTAG -  Number of goals scored by **Away Team**.\n* FTR  -  Full time result.\n* HTHG -  Number of goals scored by **Home Team** at *Half time*.\n* HTAG -  Number of goals scored by **Away Team** at *Half time*.\n* HTR  -  Half time result.\n* H    -  Home Team.\n* A    -  Away Team.\n* D    -  Draw.","9ae70171":"## Teams with Maximum Losses","6c70bcb9":"<a id=7><\/a>\n#### Checking if there are any null Values?","3f5acd45":"<a id=11><\/a>\n# Total Number of Matches Played by Each Team"}}