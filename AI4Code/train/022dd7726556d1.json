{"cell_type":{"51d83345":"code","dc868fdd":"code","10ab3e1c":"code","e6b9fecd":"code","a928e951":"code","6c1bcb55":"code","42c85db1":"code","bc26e727":"code","2a899999":"code","de8dd3c7":"code","0d7ac41e":"code","43a6c613":"code","7fc0193f":"code","a1ea36bb":"code","6c61b0b0":"code","4ace0d8f":"code","475c5164":"code","5454c049":"code","c1f726f2":"code","7a0a8ba2":"code","28c0ca57":"code","f9814944":"code","135040c4":"code","a5a354ab":"code","f74d1c4a":"code","11605174":"code","2e6dd91d":"code","b3f6873d":"code","60256521":"code","8b30c4b4":"code","824179fc":"code","dc893e19":"code","65cc12fd":"code","af29b10e":"code","f77e45be":"code","24481d16":"code","c938cc57":"code","eea5669a":"code","08d7d4fe":"code","9b77d8b6":"code","af01cb19":"code","da655655":"markdown"},"source":{"51d83345":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\ndf=pd.read_csv('..\/input\/israeli-premier-league-team-stats-201620\/IPL_16_20.csv')","dc868fdd":"df.head()\n","10ab3e1c":"df.info()","e6b9fecd":"df.drop(['Unnamed: 0','round','teamId','teamAbr','seasonName','stage'],axis=1,inplace=True)\n# df=df[['teamId','AttemptonGoal','Corner','ballPossession','YellowCard','dribble','wonAirChallenge ','accurateLongBall','accurateKeyPasses','passes','points']]","a928e951":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","6c1bcb55":"def converter(points):\n    if points==3:\n        return 1\n    else:\n        return 0","42c85db1":"df['win'] = df['points'].apply(converter)","bc26e727":"sns.set_style('whitegrid')\nsns.countplot(x='win',data=df,palette='coolwarm')\n","2a899999":"sns.set_style('whitegrid')\nsns.countplot(x='win',hue='RedCard',data=df,palette='RdBu_r')","de8dd3c7":"sns.set_style('whitegrid')\nsns.countplot(x='RedCard',hue='win',data=df,palette='RdBu_r')","0d7ac41e":"\nsns.clustermap(df[['OnTarget','win','Corner','AttemptonGoal','wonDribble','lostBall','ballPossession','RedCard','passes','steals','YellowCard','keyPasses','Assist']].corr(),annot=True)","43a6c613":"sns.clustermap(df.corr())","7fc0193f":"sns.jointplot(x='ballPossession',y='AttemptonGoal',data=df,color='red',kind='kde');","a1ea36bb":"sns.jointplot(x='ballPossession',y='longBall',data=df,color='red')","6c61b0b0":"sns.set_style('whitegrid')\nsns.countplot(x='YellowCard',hue='win',data=df,palette='rainbow')","4ace0d8f":"from sklearn.model_selection import train_test_split\n","475c5164":"X_train, X_test, y_train, y_test = train_test_split(df.drop(['win','points','PenaltyShot_Goal','Assist','CopedGoal'],axis=1), \n                                                    df['win'], test_size=0.20, \n                                                    random_state=101)","5454c049":"from sklearn.linear_model import LogisticRegression","c1f726f2":"logmodel = LogisticRegression()\n","7a0a8ba2":"logmodel.fit(X_train,y_train)","28c0ca57":"predictions = logmodel.predict(X_test)","f9814944":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(confusion_matrix(y_test,predictions))\n","135040c4":"dfnew=df[['win', 'AttemptonGoal', 'CopedAttemptOnTargetSavedbyGK',\n        'Corner', 'Cross','RedCard',\n       'ShotInsidetheArea', 'ShotOutsidetheArea', 'YellowCard',\n       'accurateKeyPasses', 'accurateLongBall', 'accuratePasses',\n       'airChallenge', 'attackingPasses', 'ballPossession', 'ballRecovery',\n       'ballRecoveryInOppHalf', 'ballRecoveryInOwnHalf', 'blockedShot',\n       'centerAttack', 'centerAttackWithShot', 'dribble', 'foul',\n       'goodInterceptionGoalie', 'groundChallenge', 'keyPasses',\n       'leftSideAttack', 'leftSideAttackWithShot', 'longBall', 'lostBall',\n       'missedShot', 'nonAttackingPasses', 'opponentFoul', 'ownHalfLostBall',\n       'passes', 'rightSideAttack', 'rightSideAttackWithShot', 'steals',\n       'tackles', 'tacklesSuccess', 'wonAirChallenge', 'wonDribble',\n       'wonGroundChallenge', 'dribbleconv', 'airconv', 'groundconv',\n       'passconv', 'attackingofall', 'targetperc', 'tackleconv', 'keyConv',\n       'longConv','Offside', 'OnTarget']]","a5a354ab":"labels=list(dfnew.columns[1:20])\nlabels.append('win')\ndfToHeat=dfnew[labels]\nplt.figure(figsize=(15,15))\nsns.heatmap(dfToHeat.corr(),annot=True)","f74d1c4a":"labels=list(dfnew.columns[20:40])\nlabels.append('win')\ndfToHeat=dfnew[labels]\nplt.figure(figsize=(15,15))\nsns.heatmap(dfToHeat.corr(),annot=True)","11605174":"dfnew.drop(['groundChallenge','leftSideAttack','ownHalfLostBall','rightSideAttack','wonDribble','tackleconv'],axis=1,inplace=True)","2e6dd91d":"labels=list(dfnew.columns[40:])\nlabels.append('win')\ndfToHeat=dfnew[labels]\nplt.figure(figsize=(15,15))\nsns.heatmap(dfToHeat.corr(),annot=True)","b3f6873d":"X_train, X_test, y_train, y_test = train_test_split(dfnew.drop('win',axis=1), \n                                                    dfnew['win'], test_size=0.20, \n                                                    random_state=101)","60256521":"fulltrain=pd.concat([X_train, y_train], join=\"outer\",axis=1)","8b30c4b4":"sns.set_style('whitegrid')\nsns.countplot(x='keyPasses',hue='win',data=fulltrain,palette='rainbow')","824179fc":"sns.set_style('whitegrid')\nsns.countplot(x='OnTarget',hue='win',data=fulltrain,palette='rainbow')","dc893e19":"dWinKeyPasses=fulltrain['keyPasses'][fulltrain['win']==1]\nl=np.percentile(dWinKeyPasses.values,5)\nl","65cc12fd":"dLoseKeyPasses=fulltrain['keyPasses'][fulltrain['win']==0]\nu=np.percentile(dLoseKeyPasses.values,95)\nu","af29b10e":"toDrop = fulltrain[(fulltrain['keyPasses']>u)& (fulltrain['win']==0)]\nfulltrain.drop(toDrop.index,axis=0,inplace=True)\nX_train.drop(toDrop.index,axis=0,inplace=True)\ny_train.drop(toDrop.index,axis=0,inplace=True)","f77e45be":"toDrop = fulltrain[(fulltrain['keyPasses']<l)& (fulltrain['win']==1)]\nfulltrain.drop(toDrop.index,axis=0,inplace=True)\nX_train.drop(toDrop.index,axis=0,inplace=True)\ny_train.drop(toDrop.index,axis=0,inplace=True)","24481d16":"toDrop = fulltrain[(fulltrain['OnTarget']>=10)& (fulltrain['win']==0)]\nfulltrain.drop(toDrop.index,axis=0,inplace=True)\nX_train.drop(toDrop.index,axis=0,inplace=True)\ny_train.drop(toDrop.index,axis=0,inplace=True)\n","c938cc57":"toDrop = fulltrain[(fulltrain['OnTarget']<=1)& (fulltrain['win']==1)]\nfulltrain.drop(toDrop.index,axis=0,inplace=True)\nX_train.drop(toDrop.index,axis=0,inplace=True)\ny_train.drop(toDrop.index,axis=0,inplace=True)","eea5669a":"plt.figure(figsize=(8,8))\nsns.boxplot(x=\"win\", y=\"targetperc\", data=dfnew,palette='rainbow')","08d7d4fe":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","9b77d8b6":"predictions = logmodel.predict(X_test)","af01cb19":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(confusion_matrix(y_test,predictions))\n","da655655":"Improve Model\n"}}