{"cell_type":{"00829417":"code","d9f0b517":"code","d21e0b55":"code","df6f48c0":"code","e3ece6c5":"code","676737bd":"code","56807c92":"code","c935ad4e":"code","4e8d85c7":"code","6e9fc9c2":"code","b10b23d7":"code","7882ae5b":"code","9d69c8aa":"code","c95b41e5":"code","ed3e0bc8":"code","25777980":"code","1624b93e":"code","a189376a":"code","497dca4a":"code","5b0f67e0":"code","a1d37d00":"code","eae50f4e":"code","7b2ae3ff":"code","f7d3a7a5":"code","8bfe15d3":"code","b8d31c36":"code","23414154":"code","e96e0aa5":"code","b218d1d3":"code","a481d592":"code","69476f45":"code","1a751eb7":"code","d4af8435":"code","716915d9":"markdown","92628842":"markdown","b850b504":"markdown","2e56788a":"markdown","afa36b4f":"markdown","800f8306":"markdown","92432d27":"markdown","3a6df603":"markdown","100c4dc7":"markdown","2a9ff5d0":"markdown","9dd99a4f":"markdown"},"source":{"00829417":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nfrom sklearn.linear_model import LinearRegression, LassoCV, RidgeCV","d9f0b517":"data = pd.read_csv('\/kaggle\/input\/absenteeism-at-work-an-uci-dataset\/Absenteeism_at_work.csv')","d21e0b55":"data.info()","df6f48c0":"data.head()","e3ece6c5":"hists = data.hist(figsize=(20,16))","676737bd":"target_feature = 'Absenteeism time in hours'\ncat_features = [\n    'Reason for absence', 'Month of absence', 'Day of the week', \n    'Seasons', 'Disciplinary failure', 'Education', 'Son', \n    'Social drinker', 'Social smoker', 'Pet'\n]\nnum_features = list(set(data.columns) - set([target_feature]) - set(cat_features))","56807c92":"data[target_feature].hist()","c935ad4e":"data[target_feature].describe()","4e8d85c7":"data[target_feature].plot.box()","6e9fc9c2":"max_border_outliers = data[target_feature].quantile(.75) + 1.5 * (data[target_feature].quantile(.75) - data[target_feature].quantile(.25))\nmax_border_outliers","b10b23d7":"data = data[data['Absenteeism time in hours'] <= max_border_outliers]","7882ae5b":"data[target_feature].plot.box()","9d69c8aa":"data[target_feature].hist()","c95b41e5":"cat_features","ed3e0bc8":"data.drop(['Month of absence', 'Seasons', 'Day of the week'], axis=1, inplace=True)\ncat_features.remove('Month of absence')\ncat_features.remove('Seasons')\ncat_features.remove('Day of the week')","25777980":"data['Reason for absence'].value_counts(normalize=True).plot.bar(figsize=(10,10));\nplt.grid(axis='y')","1624b93e":"seasons = [23, 28, 27, 0, 13, 22]\ndata['Reason for absence'] = data['Reason for absence'].apply(lambda x: x if x in seasons else -100)","a189376a":"data['Son'] = data['Son'].apply(lambda x: x if x == 0 else 1)","497dca4a":"data['Pet'] = data['Pet'].apply(lambda x: x if x == 0 else 1)","5b0f67e0":"data = pd.get_dummies(data, columns=['Reason for absence', 'Education'], drop_first=True)","a1d37d00":"data[num_features].corr().style.background_gradient(cmap='coolwarm')","eae50f4e":"data.drop(['ID', 'Height', 'Weight'], axis=1, inplace=True)\nnum_features.remove('ID')\nnum_features.remove('Height')\nnum_features.remove('Weight')","7b2ae3ff":"data[num_features].corr().style.background_gradient(cmap='coolwarm')","f7d3a7a5":"X = data.drop(target_feature, axis=1)\ny = data[target_feature]","8bfe15d3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=5)","b8d31c36":"scaler = StandardScaler()\nX_train_scaled_numeric = scaler.fit_transform(X_train[num_features])\nX_test_scaled_numeric = scaler.transform(X_test[num_features])\n\nX_train[num_features] = X_train_scaled_numeric\nX_test[num_features] = X_test_scaled_numeric","23414154":"X_train","e96e0aa5":"def print_error(y_true, y_pred):\n    print('mean_absolute_error = ', mean_absolute_error(y_true=y_true, y_pred=y_pred))\n    print('mean_squared_error = ', mean_squared_error(y_true=y_true, y_pred=y_pred))\n    print('r2_score = ', r2_score(y_true=y_true, y_pred=y_pred))\n    \n\ndef show_feature_importance(target_feature, model):\n    feature_importance = pd.DataFrame({\"feature\": data.drop(target_feature,axis=1).columns, \n                                      \"importance\": model.coef_})\n\n    feature_importance.set_index('feature', inplace=True)\n    feature_importance.sort_values([\"importance\"], ascending=False, inplace=True)\n    feature_importance[\"importance\"].plot(kind='bar', figsize=(10, 6));","b218d1d3":"y_mean = np.mean(y_train)\ny_pred_naive = np.ones(len(y_test)) * y_mean\nprint_error(y_true=y_test, y_pred=y_pred_naive)","a481d592":"lin_reg = LinearRegression()\nlin_reg.fit(X_train, y_train)\ny_pred_lin_reg = lin_reg.predict(X_test)\nprint_error(y_true=y_test, y_pred=y_pred_lin_reg)","69476f45":"show_feature_importance(target_feature=target_feature, model=lin_reg)","1a751eb7":"lasso = LassoCV(cv=5)\nlasso.fit(X_train, y_train)\ny_pred_lasso = lasso.predict(X_test)\nprint_error(y_true=y_test, y_pred=y_pred_lasso)","d4af8435":"show_feature_importance(target_feature=target_feature, model=lasso)","716915d9":"#### Standardization","92628842":"### Preprocessing","b850b504":"#### Processing of the numeric features","2e56788a":"### Model 1. Simple linear regression","afa36b4f":"#### Processing of the categorical fiatures","800f8306":"### Base line","92432d27":"#### Divide the sample into train and test","3a6df603":"### Load","100c4dc7":"# Simple linear regression + Lasso","2a9ff5d0":"#### Processing of the target feature","9dd99a4f":"### Model 2. Lasso"}}