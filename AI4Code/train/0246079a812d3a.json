{"cell_type":{"69799047":"code","d2fb0bdb":"code","4eab8cc2":"code","6a2e82e0":"markdown","6d9c0340":"markdown","febae8a4":"markdown","8e07ef18":"markdown","4faeed7b":"markdown","65a5c93c":"markdown"},"source":{"69799047":"# import libraries\nimport pandas as pd\n\n# load in the submissions\nsub1 = pd.read_csv('..\/input\/overfitting-dataset\/submission1.csv')\nsub2 = pd.read_csv('..\/input\/overfitting-dataset\/submission2.csv')\nsub3 = pd.read_csv('..\/input\/overfitting-dataset\/submission3.csv')\nsub4 = pd.read_csv('..\/input\/overfitting-dataset\/submission4.csv')","d2fb0bdb":"# create blend of submissions\nsubmission = pd.DataFrame()\nsubmission['id'] = sub1['id']\nsubmission['target'] = 0.25*sub1['target']+0.25*sub2['target']+0.25*sub3['target']+0.25*sub4['target']","4eab8cc2":"submission.to_csv('submission.csv', index=False)","6a2e82e0":"https:\/\/www.kaggle.com\/gkoundry\/bayesian-logistic-regression-with-pystan\/output <br\/>\nhttps:\/\/www.kaggle.com\/featureblind\/robust-lasso-patches-with-rfe-gs\/output<br\/>\nhttps:\/\/www.kaggle.com\/aantonova\/851-logistic-regression\/output<br\/>\nhttps:\/\/www.kaggle.com\/melondonkey\/bayesian-spike-and-slab-in-pymc3<br\/>","6d9c0340":"Let's blend good and stable solutions for this competition","febae8a4":"Let's use the same coefficients for all files because we don't want overfit to public LB.","8e07ef18":"# Import libraries and files","4faeed7b":"# Submission","65a5c93c":"# Blend"}}