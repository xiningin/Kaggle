{"cell_type":{"dc289f39":"code","113bed99":"code","acfb9849":"code","76f4554a":"code","0d0c4a2e":"code","312c09f6":"code","146639ed":"code","ba823929":"code","d99d23f4":"code","b3238e60":"code","4c654fbb":"code","09ad7952":"code","1626d051":"code","91865769":"code","ddde9079":"code","f5b2fc33":"code","01a8b77b":"code","4d0cd5d2":"markdown","99b62f49":"markdown","a17b2bdc":"markdown","1ff0b8df":"markdown","5c93b877":"markdown","2492362d":"markdown"},"source":{"dc289f39":"import datetime as dt\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sqlite3\nfrom scipy import stats\nfrom tabulate import tabulate","113bed99":"# Set plotting style\nrc={'ytick.labelsize': 14}\nsns.set(rc=rc)\nplt.style.use('seaborn-white')\nsns.set_palette(sns.husl_palette(7))\n\n%matplotlib inline","acfb9849":"CRASH_COL = \"Crashes\"\nDATE_COL = \"Collision_Date\"","76f4554a":"# Select the dates where DST started in California, and select a week before and two weeks after\n\nFORMAT = \"%Y-%m-%d\"\n\nDATES = [\n    dt.datetime.strptime(\"2001-04-01\", FORMAT),\n    dt.datetime.strptime(\"2002-04-07\", FORMAT),\n    dt.datetime.strptime(\"2003-04-06\", FORMAT),\n    dt.datetime.strptime(\"2004-04-04\", FORMAT),\n    dt.datetime.strptime(\"2005-04-03\", FORMAT),\n    dt.datetime.strptime(\"2006-04-02\", FORMAT),\n    dt.datetime.strptime(\"2007-03-11\", FORMAT),\n    dt.datetime.strptime(\"2008-03-09\", FORMAT),\n    dt.datetime.strptime(\"2009-03-08\", FORMAT),\n    dt.datetime.strptime(\"2010-03-14\", FORMAT),\n    dt.datetime.strptime(\"2011-03-13\", FORMAT),\n    dt.datetime.strptime(\"2012-03-11\", FORMAT),\n    dt.datetime.strptime(\"2013-03-10\", FORMAT),\n    dt.datetime.strptime(\"2014-03-09\", FORMAT),\n    dt.datetime.strptime(\"2015-03-08\", FORMAT),\n    dt.datetime.strptime(\"2016-03-13\", FORMAT),\n]\n\nBEFORE_DATE = []\nfor date in DATES:\n    week_before = date - dt.timedelta(weeks=1)\n    two_weeks_after = date + dt.timedelta(days=7*3)\n    BEFORE_DATE.append((week_before.strftime(FORMAT), two_weeks_after.strftime(FORMAT)))","0d0c4a2e":"query = (\n    f\"SELECT {DATE_COL} \"\n    \"FROM collisions AS C \"\n    f\"WHERE {DATE_COL} IS NOT NULL \"\n    \"AND ( \"\n)\n\nfor start, end in BEFORE_DATE:\n    query += f\"({DATE_COL} BETWEEN '{start}' AND '{end}') OR \"\n\nquery = query[:-4] + \")\"  # The [:-4] removes the last ' OR '\n\nwith sqlite3.connect(\"\/kaggle\/input\/california-traffic-collision-data-from-switrs\/switrs.sqlite\") as con:\n    # Construct a Dataframe from the results\n    df = pd.read_sql_query(\n        query,\n        con,\n        parse_dates = [\"collision_date\"],\n    ).rename(columns={\"collision_date\": DATE_COL})","312c09f6":"df[CRASH_COL] = 1\n\ndf = df.groupby(DATE_COL).sum()\ndf = df.reset_index()  # Return the Collision_Date Column\n\n# Add additional information about that dates\ndf[\"DOW\"]     = df[DATE_COL].dt.dayofweek\ndf[\"Year\"]    = df[DATE_COL].dt.year","146639ed":"def date_delta(row):\n    test_date = row[DATE_COL]\n    delta = int(dt.timedelta(weeks=100).days)\n    min_date = None\n    for time in DATES:\n        d = int((test_date - time).days)\n        if abs(d) < abs(delta):\n            delta = d\n            min_date = time\n        if abs(delta) < 10:  # We've found it!\n            break\n\n    return delta","ba823929":"def week_delta(row):\n    days = row['Days_Since_DST']\n    return days \/\/ 7","d99d23f4":"df['Days_Since_DST'] = df.apply(date_delta, axis=1)\ndf['Weeks_Since_DST'] = df.apply(week_delta, axis=1)","b3238e60":"# Join the dataframe to itself so we can compute the crash ratio\n\njoined_df = df.merge(df, on=[\"Year\", \"DOW\"], how=\"left\")\n\n# _x variables will always be DST week, _y will be others\npruned_joined_df = joined_df[joined_df[\"Weeks_Since_DST_x\"] == 0]\npruned_joined_df = pruned_joined_df[pruned_joined_df[\"Weeks_Since_DST_y\"] != 0]","4c654fbb":"# Compute the crash ratio\ndouble_after_df = pruned_joined_df[pruned_joined_df[\"Weeks_Since_DST_y\"] == 2].copy(deep=True)\ndouble_after_df[\"Ratio\"] =  double_after_df[\"Crashes_x\"] \/ double_after_df[\"Crashes_y\"]","09ad7952":"\ndouble_after_df = double_after_df[[\"Collision_Date_x\", \"Year\", \"DOW\", \"Ratio\", \"Days_Since_DST_x\"]]","1626d051":"# Normalize column names\nnew_names = {\n    \"Collision_Date_x\": DATE_COL, \n    \"Days_Since_DST_x\": \"Days_Since_DST\",\n    \"Collision_Date_y\": DATE_COL, \n    \"Days_Since_DST_y\": \"Days_Since_DST\",\n}\n\ndouble_after_df = double_after_df.rename(columns=new_names)\ndouble_after_df = double_after_df.set_index(DATE_COL)","91865769":"def make_violin_plot(df, label):\n    day_order = [6, 0, 1, 2, 3, 4, 5]  # Put Sunday first because that is when the time changes\n    \n    ax = sns.violinplot(\n        x=\"DOW\",\n        y=\"Ratio\",\n        data=df,\n        order=day_order,\n        linewidth=2,\n        cut=1,\n        inner=\"box\",\n    )\n    ax.set_xlabel(\"DOW\")\n    ax.set_xticklabels([\"Sunday (DST)\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], size=14)\n    \n    plt.title('Crashes after the start of DST in California (2001\u20132016)', y=1.03, size=26)\n    FONTSIZE=\"xx-large\"\n    plt.xlabel(\"\")\n    plt.ylabel(\"Crash Ratio: DST Week \/ {label}\".format(label=label), fontsize=FONTSIZE)\n    \n    plt.ylim(0.55, 1.7)\n    \n    return ax","ddde9079":"plt.figure(figsize=(12, 6))\n\n# Plot the \"No Change\" Line\nplt.axhline(y=1, linewidth=1.5, color=\"0.25\", linestyle=\"dashed\")\n\nax = make_violin_plot(double_after_df, \"Two Weeks After\")\n\nplt.show()","f5b2fc33":"days = (\n    \"**Monday**\",  # Having already run this, I know these dates will be significant...\n    \"**Tuesday**\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"**Saturday**\",\n    \"Sunday (DST)\",\n)\n\nresults = []\nfor dow, day in enumerate(days):\n    sunday_df = joined_df[joined_df[\"DOW\"]==dow]\n\n    crashes_before = sunday_df[(sunday_df[\"Weeks_Since_DST_y\"]==-1) & (sunday_df[\"Weeks_Since_DST_x\"]==0)][\"Crashes_y\"].values\n    crashes_after = sunday_df[(sunday_df[\"Weeks_Since_DST_y\"]==1) & (sunday_df[\"Weeks_Since_DST_x\"]==0)][\"Crashes_y\"].values\n    crashes_double_after = sunday_df[(sunday_df[\"Weeks_Since_DST_y\"]==2) & (sunday_df[\"Weeks_Since_DST_x\"]==0)][\"Crashes_y\"].values\n    crashes_same = sunday_df[(sunday_df[\"Weeks_Since_DST_y\"]==2) & (sunday_df[\"Weeks_Since_DST_x\"]==0)][\"Crashes_x\"].values\n\n    crashes_mean = np.mean([crashes_before, crashes_after], axis=0)\n    \n    t_p = stats.ttest_rel(crashes_same, crashes_double_after)\n    results.append((day, t_p[0], t_p[1]))","01a8b77b":"from IPython.display import Markdown as md\n\nmd(tabulate(results, [\"Day\", \"_t_-value\", \"_p_-value\"], \"pipe\", floatfmt=\"0.3f\"))","4d0cd5d2":"## Crashes After the DST Change\n\nTo start, I pull out just the data around the DST change dates, which I have hard-coded. I then self-join the dataframe to find the data a few weeks later to normalize. As I showed in my post [*On What Days Do People Crash?*](https:\/\/alexgude.com\/blog\/switrs-crashes-by-date\/), the number of accidents varries wildly day to day, so I have to normalize some how.","99b62f49":"## Crash Ratio\n\nThe analysis is relatively simple. I start with the number of crashes that\nhappen on the days following the start of DST in California. I divide the\namount of crashes on each day by the number of crashes on the same day of the\nweek but two weeks later. Taking the ratio cancels out most of the effects\nthat are unrelated to the time change\u2014like the fact that [crash rates vary\nby 30% depending on the year][apw]. Two weeks after is a good choice for\nnormalization because:\n\n[apw]: https:\/\/alexgude.com\/blog\/switrs-crashes-by-date\/#crashes-per-week\n\n- The weeks after the time change have similar daylight hours to the week of\n  the time change.\n- The crashes rate is still slightly elevated a week later, so normalizing by\n  the very next week hides some of the increase that is due to the start of\n  DST.\n\nThe [violin plots][violin] below show the distribution of these ratios from\nthe years 2001 to 2016. A value greater than 1 means that there are more\ncrashes during the week when DST starts than two weeks after.\n\n> [violin]: https:\/\/en.wikipedia.org\/wiki\/Violin_plot","a17b2bdc":"The increase in crashes on Monday is significant, as is Tuesday and Saturday.\nSunday is the only day that trends lower (matching the plot), but not\nsignificantly.\n\nSo daylight savings time causes more crashes!","1ff0b8df":"Except for Sunday, every day of the week following the time change has on\naverage a higher rate of crashes! I am surprised that the crash rate stays\nhigh the entire week. This indicates that it takes even longer than a week for\npeople to catch up on sleep and for the crash rate to go back to normal.","5c93b877":"## _t_-Test\n\nSo the _\"chi-by-eye\"_ plot is suggestive, but I can quantify whether the\nresults are significant using a [two-tailed paired _t_-test][paired_t-test].\nThis is the method Varughese & Allen use. Doing so gives the following\nresults.\n\n[paired_t-test]: https:\/\/en.wikipedia.org\/wiki\/Student%27s_t-test#Paired_samples\n","2492362d":"_This notebook is adapted from a post on my blog: [Car Crashes After Daylight Saving Time](https:\/\/alexgude.com\/blog\/switrs-daylight-saving-time-accidents\/)_\n\n\n# Car Crashes After Daylight Saving Time\n\n\nThe [daylight saving time][dst] (DST) change is awful\u2014we get less sleep and\nit [might not even save energy][energy] as was intended! Worse, studies by\n[Varughese & Allen][varughese] and [Smith][smith] have shown that the time\nchange increases the number of automobile crashes! Let's look for a similar\ntrend in the [SWITRS data][s2s_post].\n\n[dst]: https:\/\/en.wikipedia.org\/wiki\/Daylight_saving_time\n[energy]: https:\/\/www.scientificamerican.com\/article\/does-daylight-saving-times-save-energy\/\n[varughese]: https:\/\/doi.org\/10.1016\/S1389-9457(00)00032-0\n[smith]: https:\/\/doi.org\/10.1257\/app.20140100\n[s2s_post]: https:\/\/www.kaggle.com\/alexgude\/california-traffic-collision-data-from-switrs"}}