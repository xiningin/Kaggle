{"cell_type":{"7e5b58ec":"code","1bbd2ff4":"code","8cc5b28a":"code","f4ecf8b7":"code","c30f1cce":"code","ad93a178":"code","92466fc5":"code","a97d321c":"code","4399f7d6":"code","dbe31300":"code","a4b0114e":"code","70c7e6d6":"code","541d2c95":"code","d8c0cbac":"code","960c1c12":"code","be1affd1":"code","3cc4b3c7":"code","75e84746":"code","b124891c":"code","69522ef5":"code","80cbb391":"code","e316fa0e":"code","de7eedcd":"code","37911b31":"code","b78d062e":"code","40f23b1f":"code","06e4f474":"markdown"},"source":{"7e5b58ec":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","1bbd2ff4":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv');","8cc5b28a":"train_df.head()","f4ecf8b7":"test_df.head()","c30f1cce":"train_df.isna().sum(axis=0)","ad93a178":"test_df.isna().sum(axis=0)","92466fc5":"plt.hist(train_df['Age'])","a97d321c":"# Preprocessing the train_data\nage_mean = train_df['Age'].mean()\ntrain_df['Age'] = train_df['Age'].fillna(age_mean)\n\nfare_mean = train_df['Fare'].mean()\n\ntrain_df['Embarked'] = train_df['Embarked'].fillna('NAN')\ntrain_df['Cabin'] = train_df['Cabin'].fillna('NAN')","4399f7d6":"train_df.isna().sum(axis=0)","dbe31300":"# X and y\nX = train_df.drop(['PassengerId','Survived','Name','Ticket','Cabin'], axis = 1)\ny = train_df['Survived']","a4b0114e":"sex_dict = {'male' : 1, 'female': 0}\nX = X.replace({'Sex':sex_dict})\nembark_dict = {'Q':3,'C':2,'S':1,'NAN':0}\nX = X.replace({'Embarked': embark_dict})\n            ","70c7e6d6":"plt.hist(y.values)","541d2c95":"# Train and Test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)","d8c0cbac":"cat_features = []\nfor col in X_train.columns:\n    if(X[col].dtype == 'object'):\n        cat_features.append(1)\n    else:\n        cat_features.append(0)","960c1c12":"cat_features","be1affd1":"from catboost import CatBoostClassifier\nmodel = CatBoostClassifier(random_state=0)\nmodel.fit(X_train,y_train,cat_features)\ny_valid_predict = model.predict(X_valid)","3cc4b3c7":"from sklearn.metrics import accuracy_score\naccuracy = accuracy_score(y_valid,y_valid_predict)","75e84746":"print(accuracy)","b124891c":"# Preprocessing the train_data\ntest_df['Age'] = test_df['Age'].fillna(age_mean)\n\ntest_df['Fare'] = test_df['Fare'].fillna(fare_mean)\n\ntest_df['Embarked'] = test_df['Embarked'].fillna('NAN')\ntest_df['Cabin'] = test_df['Cabin'].fillna('NAN')","69522ef5":"X_test = test_df.drop(['PassengerId','Name','Ticket','Cabin'], axis = 1)","80cbb391":"sex_dict = {'male' : 1, 'female': 0}\nX_test = X_test.replace({'Sex':sex_dict})\nembark_dict = {'Q':3,'C':2,'S':1,'NAN':0}\nX_test = X_test.replace({'Embarked': embark_dict})","e316fa0e":"X_test.head()","de7eedcd":"y_submission = model.predict(X_test)","37911b31":"result_df = pd.DataFrame()\nresult_df['PassengerId'] = test_df['PassengerId']\nresult_df['Survived'] = y_submission\n","b78d062e":"result_df","40f23b1f":"result_df.to_csv('my_submission.csv', index=False)","06e4f474":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}