{"cell_type":{"570dbe7a":"code","96944eaf":"code","b6a03b3e":"code","bc37c424":"code","048424ee":"code","1fbe6162":"code","ef2a3b11":"code","b2d19a18":"code","e8358493":"code","4fcb580f":"code","3e371344":"code","962ef43f":"code","0fcfdc2b":"code","61a04175":"code","1d60278a":"code","96a684b4":"code","214a39f8":"code","da668c6f":"code","1eab082a":"code","513f49bd":"code","3bfaee2d":"code","5d3563c8":"code","24df6be6":"code","5250aa9b":"code","b8325751":"code","c0742c3e":"markdown","ac83c0d1":"markdown","08b18740":"markdown","3b5aa857":"markdown","ef583c3c":"markdown","294616bb":"markdown","9e176bf3":"markdown","4c63d715":"markdown","8d8d4954":"markdown","96a95b5e":"markdown","dc0f9fb8":"markdown","613b9e16":"markdown","992e7eef":"markdown","85d4f006":"markdown","3c9361fb":"markdown","7b4ba29c":"markdown","d824f33e":"markdown","57f5c89e":"markdown","6ab73b76":"markdown"},"source":{"570dbe7a":"!pip install rasterstats --quiet","96944eaf":"import numpy as np\nimport pandas as pd\nimport os\nfrom tqdm import tqdm\n\n# Plotting libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b6a03b3e":"# Geospatial libraries that we will be using for this\nimport rasterio\nimport rasterstats\nimport folium\nimport geopandas as gpd\nfrom shapely.geometry import Point","bc37c424":"power_plants_path = '\/kaggle\/input\/geolocated-power-plants-geojson\/Geolocated_gppd_120_pr.geojson'\npower_plants = gpd.read_file(power_plants_path)","048424ee":"buffered_power_plants = power_plants\nbuffered_power_plants['geometry'] = power_plants.geometry.buffer(0.1)","1fbe6162":"# Plot on the map\nlat=18.200178; lon=-66.664513\n\ndef plot_polygons_on_Map(geodataframe,\n                       original_latitude = lat,\n                       original_longitude = lon,\n                       zoom=9):\n    plot = folium.Map(location = (original_latitude, original_longitude), zoom_start=zoom)\n\n\n    geojson = folium.GeoJson(geodataframe,\n                            style_function=lambda x: {'Color':'red',\n                                                      'fillColor':'yellow' if x['properties']['primary_fuel']=='Solar'  else 'red'})\n    popup = folium.Popup(str(geodataframe.primary_fuel))\n    popup.add_to(geojson)\n    geojson.add_to(plot)\n\n    return(plot)","ef2a3b11":"plot_polygons_on_Map(buffered_power_plants)","b2d19a18":"# Make a dataframe containing all the S5 raster paths and dates\n\nfrom datetime import datetime\n\ndf_s5 = pd.DataFrame()\n\nfiles=[]\ncaptured_datetime = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2'):\n    for filename in filenames:\n        files.append(os.path.join(dirname, filename))\n        captured_datetime.append(datetime.strptime(filename.split('_')[-2],'%Y%m%dT%H%M%S').date())\n        \ndf_s5['S5_path'] = files\ndf_s5['Captured_datetime'] = captured_datetime\n\n# Sort dataframe by ascending time\ndf_s5.sort_values('Captured_datetime', inplace=True)\ndf_s5.reset_index(inplace=True, drop=True)\n\ndf_s5.head()","e8358493":"print(f\"There are {df_s5.shape[0]} Sentinel 5 images from {df_s5['Captured_datetime'][0]} to {df_s5['Captured_datetime'][df_s5.shape[0]-1]}\")","4fcb580f":"test_S5_raster_path = df_s5['S5_path'][0]","3e371344":"def return_bands(file_name):\n    # Function from the organizers: https:\/\/www.kaggle.com\/paultimothymooney\/explore-image-metadata-s5p-gfs-gldas\n    image = rasterio.open(file_name)\n    for i in image.indexes:\n        desc = image.descriptions[i-1]\n        print(f'{i}: {desc}')\n        \nreturn_bands(test_S5_raster_path)","962ef43f":"power_plants_stats = rasterstats.zonal_stats(power_plants_path,\n                                                 test_S5_raster_path,\n                                                 band=1,\n                                                 stats=['mean'])","0fcfdc2b":"# Plotting the first few elements\npower_plants_stats[:5]","61a04175":"cols_to_keep = ['system:index', 'capacity_mw', 'commissioning_year', 'estimated_generation_gwh', 'primary_fuel',  'geometry']\nsimplified_emissions_factor_df = buffered_power_plants.copy(deep=True)\nsimplified_emissions_factor_df = simplified_emissions_factor_df[cols_to_keep]\n\nsimplified_emissions_factor_df['mean_N02'] = [x['mean'] for x in power_plants_stats]","1d60278a":"simplified_emissions_factor_df['Simpl_Emiss_Factor'] = simplified_emissions_factor_df['mean_N02'] \/ simplified_emissions_factor_df['estimated_generation_gwh']","96a684b4":"MULTIPLICATION_FACTOR = 100000\n\nplt.figure()\nsns.distplot(simplified_emissions_factor_df['Simpl_Emiss_Factor']*MULTIPLICATION_FACTOR,\n             kde=False, \n             label=f'SEF x {MULTIPLICATION_FACTOR}')\nplt.legend()\nplt.title('Simplified Emission Factor for each plant (N02 \/ Estimated Emsission)')","214a39f8":"SUBSET_TO_TEST = df_s5.shape[0]\n\nN02_measurments_df = pd.DataFrame({'index_power_plant':power_plants['system:index']})\n\nfor s5_image in tqdm(range(SUBSET_TO_TEST)):\n    S5_raster_stats = rasterstats.zonal_stats(power_plants_path,\n                                                     df_s5['S5_path'][s5_image],\n                                                     band=1,\n                                                     stats=['mean'])\n    list_of_S5_raster_stats = [plant['mean'] for plant in S5_raster_stats]\n    \n    N02_measurments_df[df_s5['Captured_datetime'][s5_image]] = list_of_S5_raster_stats","da668c6f":"N02_measurments_df.head()","1eab082a":"print(f'There are {N02_measurments_df.iloc[0].isna().sum()} NaNs ({np.round((N02_measurments_df.iloc[0].isna().sum() \/ N02_measurments_df.shape[1]) * 100, 2)}% of data)')","513f49bd":"# Removing NaNs\n\ntest_power_plant_time_series = N02_measurments_df.iloc[0].dropna()\ntest_power_plant_time_series.isna().sum()","3bfaee2d":"plt.figure(figsize=(15, 10))\nplt.plot(list(test_power_plant_time_series[1:]))\nplt.title(f'N02 measurement of plant {N02_measurments_df[\"index_power_plant\"][0]}')","5d3563c8":"# Making a dataframe only keeping the info related to the enegery production\n\npower_plant_type_infos = power_plants[['capacity_mw', 'commissioning_year', 'estimated_generation_gwh', 'primary_fuel']]\npower_plant_type_infos.head()","24df6be6":"np.unique(power_plant_type_infos.primary_fuel, return_counts=True)","5250aa9b":"id_coal = power_plant_type_infos.loc[power_plant_type_infos['primary_fuel']=='Coal'].index.values[0]\nid_coal","b8325751":"# Looking for coal and solar\n\n# --- Coal ----\n\n# Removing NaNs\nid_coal = power_plant_type_infos.loc[power_plant_type_infos['primary_fuel']=='Coal'].index.values[0]\ncoal_plants_stats = N02_measurments_df.iloc[id_coal].dropna()\nprint(f'There are {coal_plants_stats.isna().sum()} NaNs left')\n\n# --- Solar ----\n\n# Removing NaNs (only keeping 1 of the solar plants)\nid_solar = power_plant_type_infos.loc[power_plant_type_infos['primary_fuel']=='Solar'].index.values[0]\nsolar_plants_stats = N02_measurments_df.iloc[id_solar].dropna()\nprint(f'There are {solar_plants_stats.isna().sum()} NaNs left')\n\n\nplt.figure(figsize=(30, 10))\n\nplt.plot(list(coal_plants_stats[1:]), label='Coal', color='brown')\nplt.plot(list(solar_plants_stats[1:]), label='Solar', color='blue')\n\nplt.legend()\nplt.title(f'N02 measurement of the only Coal and 1 solar plant')\nplt.show()\n\n\nplants_of_interest = buffered_power_plants.iloc[[id_solar, id_coal]]\nplot_polygons_on_Map(geodataframe=plants_of_interest)","c0742c3e":"## Creating a buffer around the power plants","ac83c0d1":"Just as this is a test to develop the method more than anything, I'll use the 1st band, the N02 column number density. This seems to be what is used in the code provided by the organizers, for now this will be good enough","08b18740":"Different types of power plants and their counts:","3b5aa857":"We can see what the first few mean N02 around each plant look like:","ef583c3c":"## Investigating time-series of 1 power plant\n\nFirst of all, we're just going to look at the N02 measurement of a single plant","294616bb":"Yellow filled cirlces are solar plants, the rest are red (Simply to try out some folium libraries so far).","9e176bf3":"I'll be using the power plants converted into a GeoJSON (accessible in [this dataset](https:\/\/www.kaggle.com\/maxlenormand\/geolocated-power-plants-geojson) from [this notebook](https:\/\/www.kaggle.com\/maxlenormand\/saving-the-power-plants-csv-to-geojson)).","4c63d715":"We are only interested in the area around each plant. In order to have only local information for each plant, we can buffer them.\n\nNote here that the unit is in arc degreees, not meters!","8d8d4954":"## Getting a N02 time-series for each power plant\n\nNow that we have a time-series of Sentinel 5, and a buffer around each power plant, we can get the N02 readings for each Sentinel 5 image, for each power plant\n\nAs a first step, we will only do this over the 1st band, once again.","96a95b5e":"## Conclusions (for now) + future work\n\nThis is a hyper simple approach, and just a small improvement on what the organizers had created. I just wanted to show how rasterstats could be used in this context to get zonal statistics around each plant.\n\nThere are a lot of issues at hand:\n- Here I only used 1 image, while we would want to use all the images of a given year.\n- I also only used the estimated emissions column, but we have no info on when that is, nor for how long? This is where I think things start getting really tricky.\n- For now, there is basically no model, it's just some computing of a very simplified emissions factor. Ideally, we want to be able to know our ground truth, which also seems like it's going to be tricky.\n- We need to find how to get the activation rate, or even the effficiency of the plants somehow to get a more accurate model.\n- As pointed out in some other topcis \/ notebooks, Sentinel 5 meaures the N02 over the country, wherever it might come from. So we're going to have to find a way to remove all external sources (like cars, housing, etc.) even if it seems like some of the plants might be further from cities than others.\n- There's probably some pre-processing to be done on some of the images. I've never worked on Sentinel 5, but want to look deaper into it.\n- Find more info about weather data, impact of temperature, winds, etc. on N02. (maybe when it's colder, there is more demande for electricity (heating) which would be seen in the N02 emissions?).\n- A lot of other things!","dc0f9fb8":"## Zonal N02 statistics around each power plant\n\nNext step is to get the zonal statistics of the NO2 for each polygon. This is where [rasterstats' zonal statistics come into play](https:\/\/pythonhosted.org\/rasterstats\/manual.html#raster-data-sources)","613b9e16":"As many have pointed out, there seems to be a big outlier. I knew this from the get-go, but just wanted to have something working roughly before tackling that problem.","992e7eef":"This next step is going to take a while to compute (~12 minutes). It could probably be optimized, but that will be for later","85d4f006":"We can only use 1 band at a time for the zonal statistics, so we need to know which one to use","3c9361fb":"# A simplified emissions factor for each plant - Work in Progress\n\nThis notebook is a very earlier work on this analysis competition, and I hope will grow over time. I also would like to use this notebook as an opportunity to showcase some of the remote sensing tools and methods that I have come across over the months that I've been doing this. I still have a lot to learn, but also know that I'm probably more familiar with remote sensing than most people here on Kaggle.\n\nUpdate 1 (notebook version 4 + 5): Created Sentinel 5 time-series dataframe for a buffered area around each power plant.","7b4ba29c":"First of all, we start by importing a library that is going to become really handy later on to get some information only around the plants","d824f33e":"## Looking at differences between different kinds of power plants\n\nWe'll look if there are any differences for N02 emissions for different types of power plants","57f5c89e":"## Simplified emissions factor\n\nWe're going to start by saying our simplified emissions factor is: SEF = [N02 measurement] \/ [Quantity of electricity generated]****","6ab73b76":"## Looking into all the Sentinel 5 images at our disposal"}}