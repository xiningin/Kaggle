{"cell_type":{"980095e0":"code","81c9134d":"code","a3260643":"code","148173a1":"code","63d80c00":"code","12c84201":"code","272ae8db":"code","31085e0f":"code","6e53e972":"code","34569cc5":"code","140d5dd1":"code","2af3cb13":"code","bd3ac1c0":"code","0f3b047f":"markdown","a2652b61":"markdown","e466dff0":"markdown","e4cc6cc7":"markdown","4d7c3cfa":"markdown","c333e90b":"markdown","6fd4d04b":"markdown","cc503370":"markdown"},"source":{"980095e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81c9134d":"df = pd.read_csv('..\/input\/halite-v31-historical-leaderboard\/bq-results-20201003-183459-8lx3tt7l1h69.csv', encoding='ISO-8859-2')\ndf.head()","a3260643":"df.isnull().sum()","148173a1":"corr = df.corr()\ncorr.style.background_gradient(cmap = 'coolwarm')","63d80c00":"import matplotlib.gridspec as gridspec\nfrom scipy.stats import skew\nfrom sklearn.preprocessing import RobustScaler,MinMaxScaler\nfrom scipy import stats\nimport matplotlib.style as style\nstyle.use('seaborn-colorblind')","12c84201":"def plotting_3_chart(df, feature): \n    ## Creating a customized chart. and giving in figsize and everything. \n    fig = plt.figure(constrained_layout=True, figsize=(10,6))\n    ## crea,ting a grid of 3 cols and 3 rows. \n    grid = gridspec.GridSpec(ncols=3, nrows=3, figure=fig)\n    #gs = fig3.add_gridspec(3, 3)\n\n    ## Customizing the histogram grid. \n    ax1 = fig.add_subplot(grid[0, :2])\n    ## Set the title. \n    ax1.set_title('Histogram')\n    ## plot the histogram. \n    sns.distplot(df.loc[:,feature], norm_hist=True, ax = ax1)\n\n    # customizing the QQ_plot. \n    ax2 = fig.add_subplot(grid[1, :2])\n    ## Set the title. \n    ax2.set_title('QQ_plot')\n    ## Plotting the QQ_Plot. \n    stats.probplot(df.loc[:,feature], plot = ax2)\n\n    ## Customizing the Box Plot. \n    ax3 = fig.add_subplot(grid[:, 2])\n    ## Set title. \n    ax3.set_title('Box Plot')\n    ## Plotting the box plot. \n    sns.boxplot(df.loc[:,feature], orient='v', ax = ax3 );\n \n\nprint('Skewness: '+ str(df['rank'].skew())) \nprint(\"Kurtosis: \" + str(df['rank'].kurt()))\nplotting_3_chart(df, 'rank')","272ae8db":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set2')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","31085e0f":"plot_count(\"team_name\", \"Team Name\", df,4)","6e53e972":"ax = df.groupby('rank')['team_id', 'score'].sum().plot(kind='bar', rot=45, figsize=(12,6), logy=True,\n                                                                 title='Halite LB')\nplt.xlabel('Rank')\nplt.ylabel('Count Log')\n\nplt.show()","34569cc5":"#Code by Crisl\u00e2nio Macedo, a.k.a. Caesar Lupum \n\ndef plot_dist_col(column):\n    pos__df = df[df['rank'] ==1]\n    neg__df = df[df['rank'] ==0]\n\n    '''plot dist curves for train and test weather data for the given column name'''\n    fig, ax = plt.subplots(figsize=(8, 8))\n    sns.distplot(pos__df[column].dropna(), color='green', ax=ax).set_title(column, fontsize=16)\n    sns.distplot(neg__df[column].dropna(), color='purple', ax=ax).set_title(column, fontsize=16)\n    plt.xlabel(column, fontsize=15)\n    plt.legend(['rank', 'score'])\n    plt.show()\nplot_dist_col('score')","140d5dd1":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.summer(np.linspace(0,1,20))\ndf[\"team_name\"].value_counts().sort_values(ascending=False).head(30).plot.pie(y=\"rank\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Halite LB\")\nplt.axis(\"off\")\nplt.show()","2af3cb13":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'yellow',\n                      height =2000,\n                      width = 2000,\n                      colormap='ocean',\n                     ).generate(str(df[\"team_name\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"\")\nplt.show()","bd3ac1c0":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","0f3b047f":"#A cool minimalist correlation.","a2652b61":"#Messy chart","e466dff0":"#More than 30 would be messy.","e4cc6cc7":"#Halite AI Challenge\n\nHalite is an artificial intelligence challenge, created by Two Sigma. Participants write bots using the programming language of their choice to compete in an original online multiplayer game.\n\nSince 2016, more than 15,000 people around the world have participated in a Halite challenge, applying advanced algorithms in a dynamic, open source game setting. The strategic depth and immersive, interactive nature of Halite games make each challenge a unique learning environment.https:\/\/halite.io\/","4d7c3cfa":"![](https:\/\/stakernotes.files.wordpress.com\/2019\/01\/halite3-architecture-2.png?w=900)stakernotes.com\nhttps:\/\/stakernotes.com\/diamond-ranked-ml-for-halite3\/","c333e90b":"#May the Best Bot Win\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQEyfUaCNRat7cldX9Jnz7Ql6cTPtHsf4oDtA&usqp=CAU)2016.halite.io","6fd4d04b":"#I hope any user can share another Kaggle Notebook. Congrats for ALL in Halite Competition!","cc503370":"#Skewness and Kurtosis "}}