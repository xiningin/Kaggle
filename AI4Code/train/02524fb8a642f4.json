{"cell_type":{"1d8fd1cf":"code","90c53b1e":"code","8752b1f6":"code","90a5963b":"code","ce828a6c":"code","f7ac2961":"code","1ccc50ad":"code","f86fffc3":"code","508e37c7":"code","2f3db646":"code","4d295734":"code","6fe8b62d":"code","b9078162":"code","7019dd48":"code","28ee8382":"code","c0213851":"code","1de09362":"code","d1833701":"code","7f30bfe0":"code","9401a6b0":"code","ae449ba7":"code","eff21ff3":"code","97e4081c":"code","7b089e9b":"code","8b4a7610":"code","f49a3fc0":"code","d8c072cb":"code","be707680":"code","78bf6dc0":"code","0476534b":"code","3cf4dd6a":"code","9c675799":"code","ffd9d2d7":"code","2c58623f":"code","c890728d":"code","14cb2d93":"code","02515e7d":"code","b1f56454":"code","ee5f4b92":"code","b202b9ff":"code","9d2c221d":"code","f46386b3":"code","a90daad9":"code","41efa205":"code","68225998":"code","d184ad87":"markdown"},"source":{"1d8fd1cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","90c53b1e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8752b1f6":"%matplotlib inline","90a5963b":"train = pd.read_csv('..\/input\/titanic_train.csv')","ce828a6c":"train.head()","f7ac2961":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis') #To get the columns which has null values","1ccc50ad":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train)","f86fffc3":"sns.countplot(x='Survived',hue='Sex',data=train,palette='RdBu_r') #survival based on sex","508e37c7":"sns.countplot(x='Survived',hue='Pclass',data=train) #survival based on passenger class","2f3db646":"sns.distplot(train['Age'].dropna(),kde=False,bins=30)","4d295734":"sns.countplot(x='SibSp',data=train) # count based on sibling or spouse","6fe8b62d":"train['Fare'].hist(bins=40,figsize=(10,4))","b9078162":"import cufflinks as cf\ncf.go_offline()","7019dd48":"train['Fare'].iplot(kind='hist',bins=40)","28ee8382":"sns.countplot(x='Parch',data=train)","c0213851":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass',y='Age',data=train)","1de09362":"def inpute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","d1833701":"train['Age'] = train[['Age','Pclass']].apply(inpute_age,axis=1)","7f30bfe0":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False)","9401a6b0":"train.drop('Cabin',axis=1,inplace=True)","ae449ba7":"train.dropna(inplace=True)","eff21ff3":"sex = pd.get_dummies(train['Sex'],drop_first=True)","97e4081c":"sex.head()","7b089e9b":"embark = pd.get_dummies(train['Embarked'],drop_first=True)","8b4a7610":"embark.head()","f49a3fc0":"train = pd.concat([train,sex,embark],axis=1)","d8c072cb":"train.head()","be707680":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","78bf6dc0":"train.head()","0476534b":"train.tail()","3cf4dd6a":"train.drop('PassengerId',axis=1,inplace=True)","9c675799":"train.head()","ffd9d2d7":"pclass = pd.get_dummies(train['Pclass'])","2c58623f":"pclass.head()","c890728d":"X= train.drop('Survived',axis=1)\ny= train['Survived'] #trying to predict","14cb2d93":"from sklearn.cross_validation import train_test_split","02515e7d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","b1f56454":"from sklearn.linear_model import LogisticRegression","ee5f4b92":"logmodel = LogisticRegression()","b202b9ff":"logmodel.fit(X_train,y_train)","9d2c221d":"predictions = logmodel.predict(X_test)","f46386b3":"from sklearn.metrics import classification_report","a90daad9":"print(classification_report(y_test,predictions))","41efa205":"from sklearn.metrics import confusion_matrix","68225998":"confusion_matrix(y_test,predictions)","d184ad87":"# linear regression with titanic dataset"}}