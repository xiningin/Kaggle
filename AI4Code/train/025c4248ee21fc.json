{"cell_type":{"a94f8fca":"code","a77f387c":"code","4bd57c41":"code","0ea0df4c":"code","dbdfc4c7":"code","5a765955":"code","6fab89e9":"code","a6902bb1":"code","4a2cb4e2":"code","408888a2":"code","98904ca3":"markdown","a0194f90":"markdown","9ff2e350":"markdown","538b4d23":"markdown","facea287":"markdown","12bcfdce":"markdown","6ecdcbfe":"markdown","3959acf4":"markdown","d84956fa":"markdown"},"source":{"a94f8fca":"import pandas as pd\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a77f387c":"df = pd.read_csv('\/kaggle\/input\/helsinki-city-bikes\/database.csv')\ndf.head()","4bd57c41":"df.info()","0ea0df4c":"l_l = df[['departure_latitude','departure_longitude']].drop_duplicates()\nax = l_l.plot(kind=\"scatter\",x=['departure_longitude'],y=['departure_latitude'],figsize=(15,10))\nax.set_xlabel(\"Longitude\")\nax.set_ylabel(\"Latitude\")","dbdfc4c7":"print(\"The destinations departure options to choose from \"+str(df['departure_id'].nunique())+\" and destinations to return \"+str(df['return_id'].nunique()))","5a765955":"time_df = df\ntime_df[['departure_f']] = time_df.departure\ntime_df.departure_f = pd.to_datetime(time_df.departure_f,format=\"%Y-%m-%dT%H:%M:%S\")\ntime_df.index=time_df.departure_f\ntime_df.drop(['departure_f'], axis = 1,inplace=True)\ntime_df","6fab89e9":"monthly_count = time_df[['distance (m)']].resample('1M').count()\nmonthly_count['total_dist'] = time_df[['distance (m)']].resample('1M').sum()\nplt.plot(monthly_count.index,monthly_count['distance (m)'])","a6902bb1":"dept_df = df[['departure','departure_latitude','departure_longitude']]\ndept_df = dept_df.dropna()\ncount_depart = dept_df.groupby(['departure_latitude','departure_longitude'])[['departure']].count()\ncount_depart.reset_index(inplace=True)\ncount_depart.plot(kind=\"scatter\",x=\"departure_longitude\",y=\"departure_latitude\",s=count_depart[\"departure\"]\/2000,figsize=(15,10),label=\"Populat Departure Destination\",c=count_depart[\"departure\"]\/1000,cmap=plt.get_cmap(\"jet\"),colorbar=True)","4a2cb4e2":"#wanted to plot popular 'return' destinations, but dataset have both 'depart' and 'return' same latitude and longitude columns as u can see below","408888a2":"df2 = pd.DataFrame(df[['departure_latitude','departure_longitude','return_latitude','return_longitude']].reset_index())\ndf2.drop(labels=['departure_f'],inplace=True,axis=1)\ndf2.head(40)","98904ca3":"### Plotting popular departure desitnations with longitude and latitude","a0194f90":"# **I hope u liked this kernel, next version coming soon!**","9ff2e350":"#### Turning database into Time Series","538b4d23":"#### any suggestions are welcomed","facea287":"#### Let's see how many unique destinations there","12bcfdce":"#### Counting uses for every month","6ecdcbfe":"# **EDA Helsinki City Bikes**","3959acf4":"### Getting just coordinates to have map","d84956fa":"*As a non-finnish person it seemed weird, but the zero values are due to snowfall, where u can't take bikes for ride*"}}