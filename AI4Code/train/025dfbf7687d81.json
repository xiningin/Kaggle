{"cell_type":{"8a8f8648":"code","a117bb2c":"code","fd95212c":"code","35090bb9":"code","ba8b2ca0":"code","79d6724f":"code","837d42f3":"code","c7f8ed49":"code","d9d14da2":"markdown","4cd2e85f":"markdown","6a7e35e7":"markdown"},"source":{"8a8f8648":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a117bb2c":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import ExtraTreesClassifier, IsolationForest\nfrom tqdm import tqdm","fd95212c":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\ntrain = train.astype({c: np.float32 for c in train.select_dtypes(include='float64').columns}) #limit memory use\ntrain.fillna(train.mean(),inplace=True)\ntrain['action'] = (train['resp'] > 0).astype('int')\n\nfeatures = [col for col in train.columns if 'feature' in col]","35090bb9":"days = set(train['date'].values)\n\nfeature_importance = []\nfor d in tqdm(days):\n    clf = ExtraTreesClassifier()\n    X = train[train['date']==d][features].values\n    y = train[train['date']==d]['action'].values\n    clf.fit(X,y)\n    feature_importance.append(clf.feature_importances_)\n\nfeature_importance = np.asarray(feature_importance)\n    ","ba8b2ca0":"fig, ax = plt.subplots(figsize=(10, 100))\nax.matshow(feature_importance)","79d6724f":"s_days = sorted(zip(days,[len(train[train['date']==d]) for d in days]),key=lambda x: x[1])\nprint(s_days[0])","837d42f3":"pred = IsolationForest().fit_predict(feature_importance)\noutlier_days = [day for day,pred in zip(days,pred) if pred < 0]","c7f8ed49":"outlier_days","d9d14da2":"On visual inspection there is only one day that stands out, day 294. This is since this day only has 29 trades. ","4cd2e85f":"# Feature importance over time using ExtraTrees. \nWe divide the train set into days to be able to see if there is any drastic changes during the 500 days. ","6a7e35e7":"### Now let's identify more outlier days."}}