{"cell_type":{"9d8b247c":"code","844a1912":"code","028d7b7b":"code","2b71a2a9":"code","2568f9c5":"code","3d3e8224":"code","af260c43":"code","56f1b11e":"code","165f55bf":"code","a4056ab9":"code","a93618a6":"code","12139156":"code","0d29585b":"code","f9252a55":"code","9a2d5538":"code","35ce0dd5":"code","c44c69fb":"markdown","341655c6":"markdown","0ccb2fa9":"markdown","a6925c12":"markdown","58716c14":"markdown","19887823":"markdown","3ea62e44":"markdown","bf06c304":"markdown","30ce3c29":"markdown","d4c0e13f":"markdown","6f0c9107":"markdown","35a4c1a6":"markdown","a0d028c7":"markdown","98748834":"markdown","e2c93b00":"markdown","897e0697":"markdown","1d09cc8c":"markdown","cec678c6":"markdown","8508ded6":"markdown"},"source":{"9d8b247c":"!pip install psycopg2","844a1912":"import pandas as pds\nimport plotly_express as px\n\npds.set_option('max_rows', 12)","028d7b7b":"AIRCLOAK_PG_HOST = \"covid-db.aircloak.com\"\nAIRCLOAK_PG_PORT = 9432\nAIRCLOAK_PG_USER = \"covid-19-5BCFDEEB3CDD876492CD\"\nAIRCLOAK_PG_PASSWORD = \"RjV+coInOrmahmEUDorvLL9XPNLEDgdsU4Zl1wr3cMpt04ojx5bH\/1bnFLw4\/WMf\/yHpSXFIKkdMiMl2D4KrGQ==\"\nCOVID_DATASET = \"cov_clear\"","2b71a2a9":"import psycopg2\n\nconn = psycopg2.connect(\n    user=AIRCLOAK_PG_USER, \n    host=AIRCLOAK_PG_HOST, \n    port=AIRCLOAK_PG_PORT, \n    dbname=COVID_DATASET,\n    password=AIRCLOAK_PG_PASSWORD)","2568f9c5":"def query(statement):\n    return pds.read_sql_query(statement, conn)","3d3e8224":"def get_tables():\n    return query(\"SHOW TABLES\")\n\ndef get_table_columns(table):\n    return query(f'SHOW COLUMNS FROM {table}')","af260c43":"get_tables()","56f1b11e":"get_table_columns(\"questions\")","165f55bf":"questions_df = query(\"SELECT * FROM questions\")\nquestions_df[:10]","a4056ab9":"# survey_df = query(\"SELECT * FROM survey\")\n# survey_df[:10]","a93618a6":"get_table_columns(\"survey\")","12139156":"# A simple query to extract counts of each distinct value in the tables\ndef count_distinct_values(table, column, order_by='count'):\n    return query(f'''\n        SELECT {column}, count(*) as count\n        FROM {table} \n        GROUP BY {column}\n        ORDER BY {order_by} DESC''')\n\ncount_distinct_values(\"survey\", \"feeling_now\")","0d29585b":"get_table_columns(\"symptoms\")","f9252a55":"symptoms_count = count_distinct_values(\"symptoms\", \"symptom\")\n\npx.bar(symptoms_count, \n        x='count', \n        y='symptom', \n        orientation='h', \n        height=650)","9a2d5538":"anxiety_symptoms = query('''\n        SELECT symptom, avg(how_anxious) as avg_anxiety, count(*) as num_respondents\n        FROM symptoms, survey\n        WHERE symptoms.uid = survey.uid\n        GROUP BY symptom\n        ORDER BY avg(how_anxious) ASC''')\n\nanxiety_symptoms","35ce0dd5":"px.bar(anxiety_symptoms, \n       x='num_respondents', \n       y='symptom', \n       orientation = 'h', \n       color='avg_anxiety', \n       height=650)","c44c69fb":"# Accessing private datasets using Aircloak\n\n[Aircloak](https:\/\/aircloak.com) is a privacy-preserving analytics solution using patented and proven data anonymization to enable GDPR-compliant and high-fidelity access to sensitive data.\n\nIn short: With Aircloak you can use the power of sql to explore private datasets without needing to worry about privacy. Aircloak restricts certain queries and adds pseudo-random noise to results to make sure potentially sensitive information stays hidden. \n\nThis is a brief introduction to getting started with Aircloak for data exploration. We will be using a dataset containing responses to the [cov-clear](https:\/\/cov-clear.com\/) COVID-19 survey.\n\nPlease refer to the [Aircloak documentation](https:\/\/covid-db.aircloak.com\/docs\/) for further reading. \n\n\nLet's get started!","341655c6":"The `symptoms` table maps symptoms to a particular survey submission (uniquely identified by the `uid`). This means entries in this table can be linked back to personal data and thus Aircloak's anonymity restrictions apply. \n\nWe can get an overview of the table by counting the distinct entries as above:","0ccb2fa9":"It looks like we have lot of fit, ok respondents!","a6925c12":"Try uncommenting and running the above two lines of code. Oops.\n\nThis is our first taste of the Cloak. Fortunately, when Aircloak says *no*, it does so in a very informative manner:\n\n> Directly selecting or grouping on the user id column in an anonymizing query is not allowed, as it would lead to a fully censored result.\n> Anonymizing queries can reference user id columns either by filtering on them, aggregating them, or processing them so that they have a chance to create anonymized buckets.\n\nIn short, the `survey` table contains personal data, so you can't read individual records. Any queries to this table must perform some kind of processing (usually aggregation) that groups records together. \n\nAnonymization is a complex subject. The [Aircloak documentation](https:\/\/covid-db.aircloak.com\/docs\/) is very thorough but the best way to quickly familiarise yourself with the basics is to fight against the system and let the error messages guide you.\n\nLet's take a step back and see what columns are available in the `survey` TABLE.","58716c14":"Now, let's check what tables are available:","19887823":"### The data model\n\nLet's warm up by looking at the data model. \n\nAircloak provides a couple of helper queries for this: `SHOW TABLES` and `SHOW COLUMNS FROM {table}`.\n\nWe'll write a couple of helper functions:","3ea62e44":"We will be using `pandas` for data exploration. Officially, pandas only supports SqlAlchemy and SQLite3. In practice, since we are only going to be retrieving query results and not writing to the database in any way, pandas *should work*&ast; with psycopg2 which implements the Python DB API 2.0 specifications.\n\nWe also import plotly express so we can draw pretty pictures. \n\n(&ast;*Insert disclaimer here*)","bf06c304":"Since that was so simple, let's try the same with a more interesting table, `survey`:","30ce3c29":"The `questions` table is a simple look-up table linking column names to a textual representation of the question asked. It contains no personal information and can't be linked to personal information from other tables, so we can query it freely. All Air, no Cloak. Breathe while you can...","d4c0e13f":"This initial analysis suggests that a small proportion of respondents with pre-existing conditions are more anxious about Covid-19 than the relatively larger cohort with symptoms of the illness.","6f0c9107":"## Recap\n\nThe distinction between personal and non-personal is crucial. Any data that can be linked back to an individual is considered personal. Personal data will be protected by Aircloak, meaning we will only be able to extract aggregate information, and even that will have some random noise added.\n\nThe only way we can explore sensitive data is in aggregated form. Here we simply counted the occurences of different values to gain an overview of the contents of the dataset, but of course this is just the beginning!\n\n","35a4c1a6":"That's a long list of columns... What we have here is a list of survey answers, where the name of each column corresponds to the question that was asked. In addition, there is personal data: email, age, postcode.\n\n> Note also that Aircloak designates columns as `isolator?` columns and also defines a `key type` for certain columns. For the moment we can ignore this. \n\nAs an example, let's see how people answered the question \"How are you feeling right now?\". We will follow Aircloak's advice and request a grouping rather than a list of items. ","a0d028c7":"## Querying the database\n\nWe can use some pandas magic to extract query results straight into a dataframe for easy analysis.","98748834":"## Something more interesting\n\nMost public datasets are anonymized before being published, meaning the data has been aggregated and\/or censored in a variety of ways that are determined by the data provider. The advantage of Aircloak is dynamic anonymization of datasets, so the end-user determines where the restrictions are applied. \n\nAs a slightly more advanced example, let's extract the average anxiety of survey respondents and see how this correlates with reported symptoms. Anxiety was reported on a scale of 0 to 10, 0 being 'Completely Calm' and 10 being 'Petrified'.","e2c93b00":"## First things first\n\nLet's declare some constants. The dataset we will be working with is hosted at _covid-db.aircloak.com_ and the postgres interface is accessible through port 9432. We will also need some credentials. ","897e0697":"There are three tables in the dataset - questions, survey and symptoms. Note, two of the tables are labled as *personal*, the other as *non-personal*. More about that later. First, we'll take a look at each table, starting with questions:","1d09cc8c":"## Prelude\n\nAircloak presents a postgres-compatible query protocol so we can use the `psycopg2` postgres database client to submit queries to the anonymised data. Let's install it in our environment using pip.","cec678c6":"Phew, the query worked *and* it looks like most people are feeling fine!\n\n\nLet's take a brief look at the last table, `symptoms`:","8508ded6":"With this initial setup out of the way we can create a connection to the Aircloak instance using `psycopg2`. "}}