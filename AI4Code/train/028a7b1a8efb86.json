{"cell_type":{"8fef684e":"code","3a316d53":"code","c61d058f":"code","7c338142":"code","a13f86d7":"code","f86a531f":"code","5712da35":"code","7a5e2598":"code","6f8dcd84":"code","5ccdfa93":"code","660ebdbe":"code","5c4667f3":"code","b5fdab22":"code","a68965dc":"code","1a060dde":"code","026deb62":"code","cd62094a":"code","53ce50f5":"code","a6cd88ab":"code","f445314b":"code","9a46cc5e":"code","deda90de":"code","d28a4061":"code","90dc6ff4":"code","97c4ce42":"code","3320b8d1":"code","8b60035e":"code","20cb7a4d":"code","4fbfb4f4":"code","4f1e8c95":"code","a9f44c9b":"code","826ab111":"code","f6fd4de2":"code","e96a7a01":"code","0285b5e9":"code","5480f0d1":"code","22af805a":"code","2e6648d1":"code","7d72dc05":"code","a25c1261":"code","d603662a":"code","10beb711":"code","a23eb30b":"code","7aeb5a4a":"code","b262b568":"code","6a0003fe":"code","4eaeb418":"code","ad84a9b0":"code","ee0d508b":"code","c301ab71":"code","e24eae49":"code","ae658adf":"code","35ed71a6":"code","5a36660a":"code","334a147e":"code","1b517f7b":"code","89fcae6d":"code","55ea55f3":"code","67a39c1c":"code","cf5258da":"code","e2a5a424":"code","c1c76915":"code","f60e65cf":"code","26790a1e":"code","02fe0298":"code","1835aa69":"code","0ab5050d":"code","1cf153a3":"code","02488265":"code","e42186c3":"code","33fbf8d6":"code","c1b755dd":"code","656476a4":"code","d6343325":"code","c6850b94":"code","5f73fb1e":"code","b0efc847":"code","69a98fbb":"code","a241fbd3":"code","422362dc":"code","488782e9":"code","5166f1e7":"code","0e3db175":"code","eab975cf":"code","7f8ccd2f":"code","5f44a89d":"code","1d2e433d":"markdown","ca4774eb":"markdown","0202e599":"markdown","cfc1ffaa":"markdown","55950dc6":"markdown","318de725":"markdown","062881bf":"markdown","4ecc2d3c":"markdown","cc4fb001":"markdown","4ca40103":"markdown","a460b0c2":"markdown","829f8a03":"markdown","cbae1be7":"markdown","2d2bce55":"markdown","8352d067":"markdown","bdbbf2b7":"markdown","67ee1f65":"markdown","050efc34":"markdown","29507d69":"markdown","605459cc":"markdown","50db4d66":"markdown","eff36ab2":"markdown","6ea07a25":"markdown","773a5766":"markdown","0b7c702d":"markdown","d0cbc76d":"markdown","0be652f8":"markdown","39f11d29":"markdown","4d43d959":"markdown","0879c7a0":"markdown","9f152373":"markdown","fe87d0ca":"markdown","01538aae":"markdown","d5da6772":"markdown","254e9339":"markdown","49e5420c":"markdown","b193d4ff":"markdown","26bf854f":"markdown","eeae22d0":"markdown","966d5344":"markdown","098dfefe":"markdown","85a5cc56":"markdown","701c6594":"markdown","f60cf1de":"markdown","90d7797c":"markdown","434dcd63":"markdown","8ee31c08":"markdown","340c1fe9":"markdown","6ca9a246":"markdown","6087753a":"markdown","02ddeee8":"markdown","c00a700f":"markdown"},"source":{"8fef684e":"# Import needed libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nfrom IPython.display import Image, HTML\nimport json\nimport datetime\nimport ast\nfrom wordcloud import WordCloud, STOPWORDS\nimport iso639\nfrom iso639 import languages\nfrom PIL import Image  \nimport os\n\n# Set plots to be embedded inline\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a316d53":"# Import the meta data CSV file as a Pandas dataframe\nmeta = pd.read_csv('\/kaggle\/input\/the-movies-dataset\/movies_metadata.csv')\n# Make sure it was imported successfully\nmeta.head()","c61d058f":"# Import the crew CSV file \ncrew = pd.read_csv('\/kaggle\/input\/the-movies-dataset\/credits.csv')\ncrew.head()","7c338142":"# Take a look on our data\nmeta.info()","a13f86d7":"meta['belongs_to_collection']","f86a531f":"meta['production_companies']","5712da35":"# Visual assessment may be useful for columns with long text\ncrew.cast[0]","7a5e2598":"crew.crew[25]","6f8dcd84":"crew.info()","5ccdfa93":"meta.info()","660ebdbe":"meta.id.duplicated().sum()","5c4667f3":"crew.id.duplicated().sum()","b5fdab22":"meta['popularity'].value_counts()","a68965dc":"meta['status'].value_counts()","1a060dde":"meta[meta['status'] == 'Rumored']","026deb62":"meta[meta['original_title'] != meta['title']][['title', 'original_title']].sample(5)","cd62094a":"meta[meta['revenue'] == 0].shape","53ce50f5":"meta['budget'] = pd.to_numeric(meta['budget'], errors='coerce')\nmeta[meta['budget'] == 0].shape","a6cd88ab":"meta[meta['budget'] == 0].shape[0] \/ len(meta.budget)","f445314b":"meta['original_language'].value_counts()","9a46cc5e":"meta[meta.original_language.str.count('\\d') != 0]\n","deda90de":"meta['overview'].value_counts()","d28a4061":"meta['runtime'].value_counts()","90dc6ff4":"meta[meta.runtime == 0]","97c4ce42":"meta[meta.vote_count == 0]","3320b8d1":"# Drop duplicates before merging\nmeta.id.drop_duplicates(keep = 'first', inplace=True)\ncrew.id.drop_duplicates(keep = 'first', inplace=True)","8b60035e":"# Drop inaccurate entries\nmeta = meta.drop(meta[meta.original_language.str.count('\\d') != 0].index)\ncrew = crew.drop(meta[meta.original_language.str.count('\\d') != 0].index)","20cb7a4d":"# Convert id in the meta df into integer to match id in the crew df\nmeta.id = meta.id.astype(int)","4fbfb4f4":"# Merge the two dataframes into one \nmovies = meta.merge(crew, on='id')\n# Make sure it's done successfully\nmovies.info()","4f1e8c95":"# Copy the dataframe as a step of the best practices\nmovies_clean = movies.copy()","a9f44c9b":"# Drop attributes we don't need for this project\nmovies_clean = movies_clean.drop(['imdb_id', 'tagline', 'video', 'homepage', 'adult', 'revenue', 'budget'], axis=1)","826ab111":"# Drop movies with a status different than released\nmovies_clean.drop(movies_clean[movies_clean['status'] != 'Released'].index, inplace=True)\n\n# Drop status column since all are the same status now\nmovies_clean = movies_clean.drop(['status'], axis=1)","f6fd4de2":"# Drop Franchise movies data\nfranchise = movies_clean[movies_clean['belongs_to_collection'].notnull()]\nmovies_clean.drop(franchise.index, inplace=True)","e96a7a01":"# Drop Franchise movies column\nmovies_clean = movies_clean.drop(['belongs_to_collection'], axis=1)","0285b5e9":"# Drop movies with zero runtime and zero vote count\nzero_runtime = movies_clean[movies_clean['runtime'] == 0]\nmovies_clean.drop(zero_runtime.index, inplace=True)\n\nzero_vote = movies_clean[movies_clean['vote_count'] == 0]\nmovies_clean.drop(zero_vote.index, inplace=True)","5480f0d1":"# Test to make sure everything looks alright\nmovies_clean.info()","22af805a":"# Convert Popularity attribute into numeric data type\nmovies_clean.popularity = pd.to_numeric(movies_clean.popularity, errors='coerce')\n# Test\nmovies_clean.info()","2e6648d1":"# Convert Release Date into datetime format\nmovies_clean['release_date'] = pd.to_datetime(movies_clean['release_date'],  errors='coerce')\n# Test\nmovies_clean.info()","7d72dc05":"# Drop all missing values from the cleaned dataset and reset index\nmovies_clean.dropna(inplace=True)\nmovies_clean.reset_index(inplace=True)\n\n# Check everything looks fine\nmovies_clean.info()","a25c1261":"# Adding movie released year column\nmovies_clean['year'] = movies_clean['release_date'].dt.year\nmovies_clean['year'].value_counts()","d603662a":"# Make sure it's converted\nmovies_clean.info()","10beb711":"# Create a function to help buliding the director attribute\n\"\"\"\nExtracts the name of each movie director\n\nInput:\n    A list of dictionaries; the list of crew and each dictionary is one of the crew members.\n    \nOutput:\n    A string of the director name.\n    \nRaises:\n    TypeError: if i is not a number. \n\"\"\"\n\ndef get_director(x):\n    for i in x:\n        if i['job'] == 'Director':\n            return i['name']\n    return np.nan","a23eb30b":"# Building the director attribute\nmovies_clean['director'] = movies_clean['crew'].apply(ast.literal_eval).apply(get_director)\nmovies_clean['director']","7aeb5a4a":"# Create a function to help buliding the director GENDER attribute\n\"\"\"\nExtracts the gender of each movie director\n\nInput:\n    A list of dictionaries; the list of crew and each dictionary is one of the crew members.\n    \nOutput:\n    1 if female, 2 if male, and 0 if unknown.\n    \nRaises:\n    TypeError: if i is not a number. \n\"\"\"\n\ndef get_director_gender(x):\n    for i in x:\n        if i['job'] == 'Director':\n            if i['gender'] == 1:\n                return \"female\"\n            elif i['gender'] == 2:\n                return \"male\"\n            else:\n                return \"unknown\"\n    return np.nan","b262b568":"# Building the director GENDER attribute\nmovies_clean['director_gender'] = movies_clean['crew'].apply(ast.literal_eval).apply(get_director_gender)\nmovies_clean['director_gender'].value_counts()","6a0003fe":"# Create a function to remove movies with The US as their ONLY production country\n# To avoid cultural bias\n\"\"\"\nExtracts rows that have The US as the only production country.\n\nInput:\n    A list of dictionaries; the list of countries and each dictionary represents one country.\n    \nOutput:\n    A mask of all rows with The US as the only production country.\n\"\"\"\n\ndef us(x):\n    s = set(d[\"name\"] for d in x)\n    return len(s) == 1 and s.pop() == \"United States of America\"","4eaeb418":"# Apply the function to a mask variable\nmask = movies_clean.production_countries.apply(ast.literal_eval).apply(us)\n# Use the mask to filter the dataframe accordingly\nmovies_clean = movies_clean[~mask]\n\n# Make sure eveything looks fine\nmovies_clean.production_countries.value_counts()","ad84a9b0":"# Assign movies that have zero production country as NaN\nmovies_clean.drop(movies_clean[movies_clean.production_countries == '[]'].index, inplace=True)\n# Check if successfully done\nmovies_clean[movies_clean.production_countries == '[]']","ee0d508b":"# Drop movies that have unknown value for its director gender\nmovies_clean.drop(movies_clean[ movies_clean['director_gender'] == 'unknown' ].index, inplace = True)\n# Check if successfully done\nmovies_clean.director_gender.value_counts()","c301ab71":"# Check everything\nmovies_clean.info()","e24eae49":"# Drop all missing values from the cleaned dataset and reset index\nmovies_clean.dropna(inplace=True)\nmovies_clean.reset_index(inplace=True)\n\n# Check everything looks fine\nmovies_clean.info()","ae658adf":"# Drop index columns\nmovies_clean = movies_clean.drop(['level_0', 'index'], axis=1)\n# Last check\nmovies_clean.info()","35ed71a6":"# Begin by creating a copy of our cleaned dataframe\nmovies_explore = movies_clean.copy()","5a36660a":"# Pie plot of director gender\nsorted_counts = movies_explore.director_gender.value_counts()\nlabels = sorted_counts.index\n\nplt.figure(figsize=[4,4])\nplt.pie(sorted_counts, labels=labels, startangle=90, counterclock=False, autopct='%1.00f%%', labeldistance= 1.05)\nplt.axis('square')\nplt.title('Directors Gender Percentage', pad=10, fontsize=13);","334a147e":"# Explore vote average\nmovies_explore.vote_average.describe()","1b517f7b":"# Histogram of Ratings\nplt.figure(figsize=[20,7])\n\nplt.subplot(1,2,1)\nbins = np.arange(movies_explore.vote_average.min(), movies_explore.vote_average.max() + 0.4, 0.4)\nplt.hist(movies_explore.vote_average, bins=bins)\nplt.title('TMDB Movies Rating Count', fontsize=18)\nplt.xlabel('Movie Rating', fontsize=15)\nplt.ylabel('Frequency', fontsize=15)\n\nplt.subplot(1,2,2)\nbins = np.arange(movies_explore.vote_average.min(), movies_explore.vote_average.max() + 0.7, 0.7)\nplt.hist(movies_explore.vote_average, bins=bins)\nplt.title('TMBD Movies Rating Count', fontsize=18)\nplt.xlabel('Movie Rating', fontsize=15)\nplt.ylabel('Frequency', fontsize=15)\n\nplt.tight_layout()\nplt.show()","89fcae6d":"# Explore year\nmovies_explore.year.describe()","55ea55f3":"# Histogram of Released Year\nplt.figure(figsize=[20,7])\n\nplt.subplot(1,2,1)\nbins = np.arange(movies_explore.year.min(), movies_explore.year.max() + 2, 2)\nplt.hist(movies_explore.year, bins=bins)\nplt.title('Movie Count by Year', fontsize=18)\nplt.xlabel('Year', fontsize=15)\nplt.ylabel('Count', fontsize=15)\n\nplt.subplot(1,2,2)\nbins = np.arange(movies_explore.year.min(), movies_explore.year.max() + 5, 5)\nplt.hist(movies_explore.year, bins=bins)\nplt.title('Movie Count by Year', fontsize=18)\nplt.xlabel('Year', fontsize=15)\nplt.ylabel('Count', fontsize=15)\n\nplt.tight_layout()\nplt.show()","67a39c1c":"# Let's check old movies\nmovies_explore[movies_explore.year <  1900]","cf5258da":"# Explore original language\nmovies_explore.original_language.value_counts()","e2a5a424":"# Firstly assign inaccurate code names correctly\nmovies_explore.loc[3977, 'original_language'] = 'fr'\nmovies_explore.original_language = movies_explore.original_language.replace(['cn'],'zh')\nmovies_explore.original_language = movies_explore.original_language.replace(['sh'],'sr')\nmovies_explore.original_language = movies_explore.original_language.replace(['xx'],'tw')","c1c76915":"movies_explore = movies_explore.drop_duplicates()\nmovies_explore.info()","f60e65cf":"# Convert codes to names\nmovies_explore.original_language = movies_explore.original_language.apply(lambda x: languages.get(alpha2=x).name)","26790a1e":"# Reassign silent movies to their accurate language: Silent\nmovies_explore.original_language = movies_explore.original_language.replace(['Twi'],'Silent')","02fe0298":"# Test\nmovies_explore.original_language.value_counts()","1835aa69":"# Bar plot for Movies Original Language\n# First: the most common 5\nplt.figure(figsize=[21,8])\n\nplt.subplot(1,2,1)\ntop_languages = movies_explore.original_language.value_counts().head(5)\nlabels =[]\ntop_languages_count=[]\n\nfor label, count in enumerate(top_languages.index.tolist()):\n    labels.append(label)\n    top_languages_count.append(count)\n    \nplt.barh(top_languages_count, top_languages, height=0.6)\n\nplt.title('Movie Count by Language', fontsize=20)\nplt.xlabel('Count', fontsize=17)\nplt.ylabel('Language', fontsize=17)\nplt.yticks(fontsize= 15, rotation=60)\nplt.xticks(fontsize= 15)\n\n\n# Second: the least common 5\nplt.subplot(1,2,2)\ntop_languages = movies_explore.original_language.value_counts().tail(5)\nlabels =[]\ntop_languages_count=[]\n\nfor label, count in enumerate(top_languages.index.tolist()):\n    labels.append(label)\n    top_languages_count.append(count)\n    \nplt.barh(top_languages_count, top_languages, height=0.6)\n\nplt.title('Movie Count by Language', fontsize=20)\nplt.xlabel('Count', fontsize=17)\nplt.ylabel('Language', fontsize=17)\nplt.yticks(fontsize= 14, rotation=60)\nplt.xticks(fontsize= 15)\n\nplt.tight_layout()\nplt.show()","0ab5050d":"# Create Wordcloud vizualization\ntitle_corpus = ' '.join(movies_explore['title'])\noriginal_corpus = ' '.join(movies_explore['original_title'])\n\n# For English titles\ntitle_wordcloud = WordCloud(stopwords=STOPWORDS, background_color='black', height=2000, width=4000).generate(title_corpus)\nplt.figure(figsize=(20,8))\nplt.imshow(title_wordcloud)\nplt.axis('off')\n# Save the image and show it\nplt.savefig('MoviesTitles.png')\nplt.show()","1cf153a3":"# For original languages titles\noriginal_wordcloud = WordCloud(stopwords=STOPWORDS, background_color='black', height=2000, width=4000).generate(original_corpus)\nplt.figure(figsize=(20,8))\nplt.imshow(original_wordcloud)\nplt.axis('off')\n# Save the image and show it\nplt.savefig('MoviesOriginalTitles.png')\nplt.show()","02488265":"# Convert to numeric\nmovies_explore['spoken_languages'] = movies_explore['spoken_languages'].fillna('[]').apply(ast.literal_eval).apply(lambda x: len(x) if isinstance(x, list) else np.nan)\n# Check if successfully convertes\nmovies_explore.spoken_languages.value_counts()","e42186c3":"# Bar plot for spoken languages\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\nbins = np.arange(movies_explore.spoken_languages.min(), movies_explore.spoken_languages.max()+1, 1)\nplt.hist(data=movies_explore, x='spoken_languages', bins=bins, color='#552355')\nplt.title('Movie Count by the Number of Spoken Languages')\nplt.xlabel('Number of Spoken Languages')\nplt.ylabel('Movie Count');\n\n# Histogram focusing on movies with more than 3 languages\nplt.subplot(1,2,2)\nbins = np.arange(movies_explore.spoken_languages.min(), movies_explore.spoken_languages.max()+1, 1)\nplt.hist(data=movies_explore, x='spoken_languages', bins=bins, color='#552355')\nplt.xlim((4,9))\nplt.ylim((0,400))\nplt.title('Movies with more than 3 Spoken Languages')\nplt.xlabel('Number of Spoken Languages')\nplt.ylabel('Movie Count');","33fbf8d6":"# Preview the top 10 directors\nmovies_explore.director.value_counts().head(10)","c1b755dd":"# Bar plot top 10 directors\nplt.figure(figsize=[10,6])\ntop_dir = movies_explore.director.value_counts().head(10).index\ncount = movies_explore.director.value_counts().head(10)\n\nplt.barh(top_dir, count, color='#444444')\n\nplt.title('Top 10 Filmmakers')\nplt.xlabel('Movies Count');","656476a4":"# Create a heatmap for different numeric features\nmovie_features = movies_explore[['popularity', 'runtime', 'vote_average', 'vote_count', 'year']]\n  \n#ploting the heatmap for correlation\nax = sb.heatmap(movie_features.corr(), annot=True, cmap='rocket_r')","d6343325":"# Check director's gender vs year\nsb.catplot(x=\"year\", hue=\"director_gender\", col=\"director_gender\", data=movies_explore, kind=\"strip\", legend=True);","c6850b94":"# Check director's gender vs vote average\nbase_color= sb.color_palette()[8]\nsb.violinplot(data=movies_explore, x='director_gender', y='vote_average', color=base_color);","5f73fb1e":"# Check director's gender vs original movie language\nplt.figure(figsize=[20,6])\n\nplt.subplot(1,2,1)\nsb.countplot(data=movies_explore, x='original_language', hue='director_gender', order = movies_explore['original_language'].value_counts().index)\nplt.xlim((-0.60, 15.5))\nplt.xticks(rotation=65)\nplt.title(\"Director's gender and their movies original language\")\nplt.ylabel('Count')\nplt.xlabel(' Movie Original Language');\n\n# Try it once more but without English movies to avoid their monopoly over cinema:D\nplt.subplot(1,2,2)\nsb.countplot(data=movies_explore, x='original_language', hue='director_gender', order = movies_explore['original_language'].value_counts().index)\nplt.xlim((0.4, 15.5))\nplt.ylim((0, 1100))\nplt.xticks(rotation=65)\nplt.title(\"Director's gender and their movies original language\")\nplt.ylabel('Count')\nplt.xlabel(' Movie Original Language');","b0efc847":"movies_explore.runtime.describe()","69a98fbb":"# Plot a scatter showing movies runtime vs released years\n# The first including outliers\nplt.figure(figsize=[20,6])\n\nplt.subplot(1,2,1)\nbase_color= sb.color_palette()[2]\nsb.regplot(data=movies_explore, x='year', y='runtime', scatter_kws={'alpha':0.16}, fit_reg=False, color=base_color)\n            \n# The second focusing on the average\nplt.subplot(1,2,2)\nbase_color= sb.color_palette()[2]\nsb.regplot(data=movies_explore, x='year', y='runtime', scatter_kws={'alpha':0.16}, fit_reg=False, color=base_color)\nplt.ylim((30, 200));","a241fbd3":"movies_explore[movies_explore.runtime > 800]","422362dc":"# Plot a scatter showing movies runtime vs released years\n# The first including outliers\nplt.figure(figsize=[20,6])\n\nplt.subplot(1,2,1)\nbase_color= sb.color_palette()[4]\nsb.regplot(data=movies_explore, x='year', y='vote_count', scatter_kws={'alpha':0.16}, fit_reg=False, color=base_color)\n\n# The second focusing on the average\nplt.subplot(1,2,2)\nbase_color= sb.color_palette()[4]\nsb.regplot(data=movies_explore, x='year', y='vote_count', scatter_kws={'alpha':0.16}, fit_reg=False, color=base_color)\nplt.ylim((10, 6000));","488782e9":"movies_explore.vote_count.describe()","5166f1e7":"movies_explore[movies_explore.vote_count >= 3000].groupby('vote_count')['year'].mean()","0e3db175":"movies_explore[movies_explore.vote_count == 3890]","eab975cf":"# Create a dataframe of multi cultrual movies\nmulticulture = movies_explore[movies_explore.spoken_languages > 6]\n# Plot\nsb.boxplot(data=multiculture, x='title', y='spoken_languages')\nplt.ylim((5,10))\nplt.xticks(rotation=90)\nplt.title('Top Multi-cultural Movies')\nplt.xlabel('Movie Title')\nplt.ylabel('Number of Spoken Languages');","7f8ccd2f":"# Facet plot of director gender, original language, vote count over time\ng = sb.FacetGrid(data=movies_explore, col='director_gender', row= 'original_language', margin_titles = True)\ng.map(plt.scatter, 'year', 'vote_count');","5f44a89d":"# Save the dataframe\nmovies_explore.to_csv('movies_clean.csv', index=False)","1d2e433d":"I expected that there will be some kind of correlation between **popularity** and **average vote**, but turns out there isn't. Good ratings and votes on a particular movie does not necessarily imply that the movie is popular, and vice versa. While there is an evidence for a moderate positive linear relationship between **popularity** and **vote count** which suggests that the more votes or ratings a movie has, the more popular it is, and vice versa. Which makes perfect sense.\n\nOther than this, there is no apparent evidence for *linear* correlation among our other numeric features.","ca4774eb":"<a id='engineer'><\/a>\n### 1.4. Data Engineering\nPolishing the dataset by adding needed rows that doesn't yet exist. This step depends on extracting or building new attributes based on other already existing attributes. I want to extract thr following attributes:\n- `year` : Movie released year.\n- `director` : Movie director name.\n- `director gender` : Movie director's gender.","0202e599":"<a id='multi'><\/a>\n### 2.3. Multivariate Analysis\nThis is the part where plots of three or more variables to investigate your data even further.","cfc1ffaa":"It seems like there are some inaccurate values in this column, so we will need to delete them if their percentage among other accurate values isn't significant.","55950dc6":"These code names may be understandable for some, but it IS vague for others. So before exploring this feature, I'll convert language codes to its original names.","318de725":"<a id='conclusions'><\/a>\n## Conclusions","062881bf":"<a id='bi'><\/a>\n### 2.2. Bivariate Analysis\nIn this section, investigate relationships between pairs of variables in your data. I'm interested in:\n- Taking a glance on all our features linear correlation and investigate more if something interesting appeared.\n- Check the movies count for each language sorted by the director's gender.\n- Check the relationship between the movie's director gender and other supporting features.\n- Plot each one of these features (runtime, director gender, vote average) along with years.","4ecc2d3c":"Only released movies matter for our analysis. So let's filter that out.","cc4fb001":"Now let's move on and take a look on the top 10 **directors** in our dataset.","4ca40103":"<a id='assess'><\/a>\n### 1.2. Data Assessment\nIn this step data will be assessed to observe what needs to be changed or cleaned.","a460b0c2":"*Everything looks great!*\n\nNow let's move on with our cleaned dataset and filter it according to our analysis purposes. **Reminder**: This analysis aims at discovering cultural or social insights. Gender is indeed on of them so having the unknown gender category will be an obstacle for analysis, so we may as well drop it along with its corresponding rows. Another thing is that the majority of movies are American, which will result in a deviant bias or misleading conclusions as we go on, so I decided it's for the better to drop movies that are produced by The US solely, and keep all other movies even the ones that The US contributed in producing. So let's filter as following:\n- Drop **unknown** `director_gender` and its corresponding movies.\n- Drop movies that have The US as the ONLY production country.","829f8a03":"### Bivariate Analysis Conclusuions\nIn this section, the following two-way relationships were investigated and it appeared that:\n\n- ( **Director's gender and their movie count by year**): Women are a minority in the filmmaking industry worldwide compared to men. But we can notice a shifting increase since 2000 and upward.\n\n- ( **Movies runtime count by year**): The majority of movies runtime ranges from about 50 minutes to 140 minutes, with the longest runtime being 931 for [Berlin Alexanderplatz](https:\/\/letterboxd.com\/film\/berlin-alexanderplatz\/), and the shortest being 1 minute for multiple 1-minute short films.\n\n- ( **Movies vote count by year**): This shows that many voters focus on rating recent movies, starting from 2000 to now, with a few exceptions such as [The Shining](https:\/\/letterboxd.com\/film\/the-shining\/) with about 4000 votes albeit produced in 1980.\n\n- ( **Director's gender and their movies average ratings**): The average ratings and votes is indifferent to the director's gender. This is significant, since it attests to the similarity for filmmaking average skills between women and men.\n\n- ( **Director's gender and their movies original language**): Female directors percentage is low compared to male directors. The heighest count of female directors are about 400, 180 and 50 for movies speaking English, French and German respectively. **This connects** well with the overall percentage of female directors in the whole dataset. And shows that this percentage is centered at certian cultures mostly American and European where women got more empowered.\n\nInteresting positive moderate linear relationship was accidentally found between vote count and popularity, meaning that the more votes or ratings a movie has, the more popular it is on a moderate scale, and vice versa. Which makes perfect sense. While on the other hand, no relationship was found between average rating and popularity, meaning that good ratings on a particular movie does not necessarily imply that this movie is popular, and vice versa.\n\nNow we can move on to the last step of our exploratory analysis; the multivariate analysis.","cbae1be7":"The top filmmaker in terms of movies production is the German director *Herzog* with 44 movies. Comes after him the French director *Godard* with 40 movies, and in the third close place comes the Swedish *Bergman* with 36 movies. The rest of the top 10 directors are all contributing with an average of 25 films.\n\nIt's very interesting that:\n- NINE out of the 10 top filmmakers aren't native English speakers.\n- All of the most contributing filmmakers are men. \n\nThis shows that the most active and productive filmmakers aren't American nor English, so it's clear that there are many cinematic gems available for who can get out of hollywood box. It's also apparent from this graph and others that women aren't contributing in filmmaking as men, so we can't help but ask *why?*","2d2bce55":"Looks like movie ratings are a bit skewed to the left with a tendency towards the center that it could make a semi normal distribution. This makes sense, but it's a must to note on credibility of rating, because unless the vote count is large enough, this rating isn't accountable.\n\nNow, let's take a look on released `year` distribution.","8352d067":"Looking at it, popularity should be a numeric feature.","bdbbf2b7":"The attribute **id** should be a unique identifier for the movie, so we must delete duplicates.","67ee1f65":"This exploratory analysis investigated [The Movies Dataset](https:\/\/www.kaggle.com\/rounakbanik\/the-movies-dataset) that contains the metadata for all 45,000 movies listed in the Full MovieLens Dataset. After cleaning the data and eliminating unnecessary features, the number of movies dropped to about 9800. This number of movies was analyzed visually, focusing on the **social** and **cultural** patterns and relationships. Mainly ***Filmmaker Gender***, ***Film's Original Language***, and ***Film's Number of Spoken Languages***. Besides, another side features like *Film's Runtime*, *Film's Vote Count*, and *Filmmakers*.\n\n\nI tried to tackle this dataset with care, respecting filmmaking and cinema, and trying my best not to tackle it in a superficial manner. So, after doing the data wrangling and exploratory visualizations, the following important *descriptive* insights were found:\n\n#### General Conclusuions:\n- The higher rating a film has doesn't necessarily mean the more popular or acclaimed. Even with the *enough* amount of voters, there isn't a proven relationship between rating and popularity in cinema.\n- Many cultures are interested in cinema, but they lack popularity due to the barrier of language.\n- There's a trend among people leaning towards recent movies, starting from 2000 to now, with a few exceptions.\n\n#### Gender-study-related Conclusuions:\n- There's a wide gender gap between women and men filmmakers contributing in the industry. Reasons aren't clear which gives the space for another elaboration and usage of regression analysis.\n- Women only began to direct films later than men, and only increased starting 2000.\n- Films' ratings for both men and women have almost the same average, close minimum and maximum points, suggesting that the lack of women in film industry isn't due to their lack of skill or talent.\n\n### Recommendations:\nFor any future additions to this project, there are some kind of tips here.\n- Create a logistic regression model focusing on director's gender and trying to understand its relationship with other features more.\n- There are plenty of data that weren't used like genre, crew and poster. And they can be pretty useful on a larger scale.\n- Adding movement as an encoding to represent time and show the evolution of cinema history would be interesting.\n- Recommendation systems can be built for this dataset based on rating, genre and cultural diversity.","050efc34":"<a id='wrangling'><\/a>\n\n## 2. Data Wrangling\n<ul>\n<li><a href=\"#gather\">1.1. Data Gathering<\/a><\/li>\n<li><a href=\"#assess\">1.2. Data Assessment<\/a><\/li>\n<li><a href=\"#clean\">1.3. Data Cleaning<\/a><\/li>\n<li><a href=\"#engineer\">1.4. Data Engineering<\/a><\/li>\n<\/ul>","29507d69":"Looks like there are many missing values for revenue and budget data that consists almost 80% of our whole observations. Since our analysis isn't interested in commercial return of cinema, we may safely drop them.","605459cc":"Everything looks great! Now let's create our visualization!","50db4d66":"Whoa! The sample collected from TMDB shows that the average number of male directors are far bigger *about 93%* than the average number of female directors *7%*. This is an interesting social observation that we can elaborate on later. Now, let's move on to the next feature: `vote_average`.","eff36ab2":"We can drop the rows where movie runtime doesn't exist since they're few compared to our other observations. And movies that have zero vote count since they won't have the rating which is an essential supporting feature.","6ea07a25":"Now let's engineer the features we need. The most important feature to engineer now is the **director** and the **director's gender**.","773a5766":"### Quality Issues\n- It appears that some columns have a lot of missing values like `belongs_to_collection`, `homepage` and `tagline`. We don't need them in our analysis anyway so we may safely drop them. However the first one should be deleted only after deleting its corresponding movies aka Franchise movies.\n\n- There also seem to be some columns with the wrong data type like `release_date` that should be in datetime format, `budget` that should be numeric, and `adult` that should be bool.\n\n- So these columns `adult`, `homepage`, `imdb_id`, `tagline` and `video` are simply not needed for our analysis.\n\n### Tidiness Issues\n- We need to create new features that will be used in our analysis like `year`, `director`, `writer`\n- We need to merge both dataframes `meta` and `crew` since both form one observational unit.\n\nLet's dig deeper beyond visual assessment.","0b7c702d":"Original titles looks good, and it would've made a better impression if languages articles were removed. But all in all, both images give us an indication of the common themes in movies.\n- Love, girl, man, femme, boy, heart, kiss: drama and romance themes\n- Death, god, lost, time, paradise, angel: existential themes\n- Killer, murder, blood, devil, darkness: crime and horror themes\n- Adventure, story, tale, dragon: fiction and adventure themes\n\nIt also seems that some movies were published by its original movie title because we can notice some French articles in the first titles image.\n\nIt's noteworthy that even with language diversity, some particular words are common in multiple languages, such as night (nuit), Death (mort), and Day (jour). This may be an indication of common culture similarities between for example The US, UK, and France.\n\nThis wordcloud inspired me to check movies with the highest numbers of spoken languages in them. To plot this, we'll need to convert the column of `spoken_languages` into a numeric variable first. Here we go!\n","d0cbc76d":"Seems like the average ratings and votes is indifferent to the director's gender. This is *significant*, since it attests to the similarity for filmmaking average skills between women and men.","0be652f8":"<a id='eda'><\/a>\n## 2. Exploratory Data Analysis\n<ul>\n<li><a href=\"#uni\">2.1. Univariate Analysis<\/a><\/li>\n<li><a href=\"#bi\">2.2. Bivariate Analysis<\/a><\/li>\n<li><a href=\"#multi\">2.3. Multivariate Analysis<\/a><\/li>\n<\/ul>","39f11d29":"It's crystal clear that even movies with the top 15 original spoken language other than English are directed more by men. The heighest count of female directors are about 180 and 50 for movies speaking French and German respectively. It's also important to notice that despite the relative high count for movies in Italian, Japanese and Chinese, female directors percentage of that count is very small.  \n\nNow let's check the progress of both **average vote** and **runtime** over years.","4d43d959":"# The Movie Database\n## by Fatimah Ehab Farouk\n\n\n## Contents\n\n<ul>\n<li><a href=\"#intro\">1. Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">2. Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">3. Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">4. Conclusion<\/a><\/li>\n<\/ul>","0879c7a0":"Even after deleting the movies produced by The US, the majority of movies are still in English, representing almost 5 thousand movies. While the second place falls far behind for about 1200 movies and goes to the French movies, the third to Italian, the fourth to German, and the fifth to Japanese movies.\n\nAs for the least popular languages in movies, they all have one movie in the list and they're as following:\n- **Croatian**: Croatian is the standardized variety of the Serbo-Croatian language used by Croats, principally in Croatia, Bosnia and Herzegovina, the Serbian province of Vojvodina, and other neighboring countries.\n- **Catalan**: Known in the Valencian Community and Carche as Valencian, is a Western Romance language derived from Vulgar Latin. It is the official language of Andorra, and a co-official language of three autonomous communities in eastern Spain: Catalonia, the Valencian Community and the Balearic Islands.\n- **Punjabi**: An Indo-Aryan language spoken by the Punjabi people and native to the Punjab region of India and Pakistan. It has approximately 113 million native speakers.\n- **Macedonian**: An Eastern South Slavic language. Spoken as a first language by around two million people, it serves as the official language of North Macedonia.\n- **Norwegian Bokm\u00e5l**: An official written standard for the Norwegian language, alongside Nynorsk. Bokm\u00e5l is the preferred written standard of Norwegian for 85% to 90% of the population in Norway.\n\nThis is really interesting, especially for diverse-culture lovers who would enjoy watching movies in these unpopular yet rich languages.\n\nNow let's make fun displaying words of movies titles.","9f152373":"#### To clean List:\n\n- Merge `meta` and `crew` dataframes together.\n- Drop columns: `adult`, `imdb_id`, `homepage`, `video`, `budget`, `revenue` and `tagline` since they are simply not needed in our analysis.\n\n- Drop rows with any status other than *Released* then drop the whole `status` column.\n- Drop rows of Franchise movies then delete `belongs_to_collection`  column.\n- Drop inaccurate rows in `original_language` column.\n- Drop inaccurate rowns in `runtime` column.\n- Drop rows with zero `vote_count`.\n\n- Convert `release_date` to datetime format.\n- Convert `popularity` to float type.\n","fe87d0ca":"It's apparent that women are a minority in the filmmaking industry worldwide. But we can notice a shifting  increase in 2000 and upward, which in history matches with the beginning of fruitful results from [the third wave of feminism](https:\/\/en.wikipedia.org\/wiki\/Third-wave_feminism). However, it's still quite low compared to male filmmakers. This may be explained by:\n- Cultural reasons: places where women aren't empowered enough to direct a movie.\n- Bias reasons: places where women are empowered yet men are favoured over them.\n- Natural reasons\n","01538aae":"These rows seem to have many inaccurate values so it's very important to drop them first.","d5da6772":"This shows that many cinema lovers focus on rating recent movies, starting from 2000 to now. There are a few exceptions such as [The Shining](https:\/\/letterboxd.com\/film\/the-shining\/) with about 4000 votes albeit produced in 1980.\n\nIt's very important to make a statement here on the credibility of ratings. The more vote count, the more voting credibility. That's why I didn't focus much in this analysis on ratings in determining the quality of a movie or any of its cinematic aspects really, nor it would've been of important with cultural investigations since voters data isn't available.\n\nNow let's continue the investigation part regarding **multi-cultural** movies and check movies that included MORE than 7 languages!","254e9339":"Looks good so far! Now let's make a copy of our new dataframe before cleaning to avoid data loss.","49e5420c":"Seems that the majority of movies runtime ranges from about 50 minutes to 140 minutes, when the longest runtime for the Germann movie [Berlin Alexanderplatz](https:\/\/letterboxd.com\/film\/berlin-alexanderplatz\/) which is 931 minutes. Comes after it another German movie [Heimat](https:\/\/letterboxd.com\/film\/heimat-1984\/) with 925 minutes, and finally [The Story of Film: An Odyssey](https:\/\/letterboxd.com\/film\/the-story-of-film-an-odyssey\/) with 900 minutes. This indicates that the German are pioneers in long movies, especially that both of the mentioned movies were made in the 80s.\n\nIt's also very accurate to come across 1-minute films, as time is relative and isn't necessarily limited to a certain frame in cinema art.","b193d4ff":"The top 3 multi-cultural movies are:\n- [Pina](https:\/\/letterboxd.com\/film\/pina\/) by Wim Wenders\n- [Human](https:\/\/letterboxd.com\/film\/human-2015\/) by Yann Arthus-Bertrand\n- [2012](https:\/\/letterboxd.com\/film\/2012\/) by Roland Emmerich\n\nWe can notice that one of the top 3 *Pina* is directed by one of the top 10 directors *Wenders*. This list of movies is highly recommended for cinema lovers and people who are interested in many cultures as they present snapshots of divesity.\n\nIt's also important to note that when a movie has many languages, it doesn't necessarily indicate a movie of quality.","26bf854f":"<a id='gather'><\/a>\n### 1.1. Data Gathering\nData was manually downloaded from Kaggle.","eeae22d0":"Interesting! There are movies so multi-cultural that they have like 9 different languages spoken in them. This calls for a deeper investigation at the next part of analysis.","966d5344":"Everything looks great so far except for some missing values at columns `overview`, `poster_path`, `release_date` and `runtime`. They aren't many so let's drop them.","098dfefe":"<a id='clean'><\/a>\n### 1.3. Data Cleaning","85a5cc56":"Interesting! Looks like original title represents the movie name in its original language. This can be useful for an intercultural wordcloud visualization, so I won't drop it.","701c6594":"Let's first create a faceted plot connecting two of our main features of interest *Original Language* and *Director Gender* to *Vote Count* across years, in order to see how insightful the interactions between them are over time.","f60cf1de":"As for crew and cast, it appears that the key `gender` means the following:\n- Female if assigned 1.\n- Male if assigned 2.\n- Not sure if assigned 0.\n\nThis may help during the engineering process.","90d7797c":"Seems like there are a very few missing values so let's drop them.","434dcd63":"<a id='intro'><\/a>\n## 1. Introduction\nThe film industry as we know it today emanated in the early 19th century and went through a series of technical developments: the creation of photography, the revelation of the illusion of motion, and the study of human and animal locomotion. After this development, the idea of the motion picture as an entertainment industry first emerged. Since then, the industry has seen phenomenal transformations, some driven by artistic visions, some by commercial necessity, and others by accident. The history of the cinema is complex and rich. During this project, a movie dataset that contains metadata for all 45,000 movies listed in the Full MovieLens Dataset for movies released on or before July 2017. Data points include cast, crew, plot keywords, budget, revenue, posters, release dates, languages, production companies, countries, TMDB vote counts and vote averages will be wrangled and analyzed visually, then presented in explanatory visualizations. You can check the Dataset on Kaggle from [here](https:\/\/www.kaggle.com\/rounakbanik\/the-movies-dataset?select=movies_metadata.csv).\n\n### Motivation\nInspired by my passion for art and cinema, and my enthusiasm for data analysis, I decided to tackle the topic of movies as an EDA (Exploratory Data Analysis) project, focusing on my data visualization skills. I want to discover insights related to cinema from the social and cultural perspectives. So in this notebook, I will try to explore the dataset and find intriguing trends and patterns.\n\n\n### Dataset Dictionary\n\n- **adult**: Indicates if the movie is X-Rated or Adult. \n- **belongs_to_collection**: A stringified dictionary that gives information on the movie series the particular film belongs to. \n- **budget**: The budget of the movie in dollars. \n- **genres**: A stringified list of dictionaries that list out all the genres associated with the movie. \n- **homepage**: The Official Homepage of the move. \n- **id**: The ID of the move. \n- **imdb_id**: The IMDB ID of the movie. \n- **original_language**: The language in which the movie was originally shot in. \n- **original_title**: The original title of the movie. \n- **overview**: A brief blurb of the movie. \n- **popularity**: The Popularity Score assigned by TMDB. Learn more about how it's calculated [here](https:\/\/developers.themoviedb.org\/3\/getting-started\/popularity).\n- **poster_path**: The URL of the poster image. \n- **production_companies**: A stringified list of production companies involved with the making of the movie. \n- **production_countries**: A stringified list of countries where the movie was shot\/produced in. \n- **release_date**: Theatrical Release Date of the movie. \n- **revenue**: The total revenue of the movie in dollars. \n- **runtime**: The runtime of the movie in minutes. \n- **spoken_languages**: A stringified list of spoken languages in the film. \n- **status**: The status of the movie (Released, To Be Released, Announced, etc.) \n- **tagline**: The tagline of the movie. \n- **title**: The Official Title of the movie. \n- **video**: Indicates if there is a video present of the movie with TMDB. \n- **vote_average**: The average rating of the movie. \n- **vote_count**: The number of votes by users, as counted by TMDB.\n- **cast**: A stringified list of dictionaries consisting of cast names and the corresponding characters they played.\n- **crew**: A stringified list of dictionaries consisting of crew names and the function they performed.\n\n###  Dataset Structure\nThe whole dataset is one observational unit representing movies data. Each row represents 1 movie and the data related to it, while each column represents different movie features, such as *movie title, original language* and *production countries*.\n\n#### Main Features of Interest\nThis analysis is very exploratory, meaning that there are no specific questions of interest. The main focus is to discover new patterns in the cinematic world. I'm mostly interested in social findings, so my concentration will be centered at observing features like *original language* over time. So *year released* will definitely be a crucial feature for the analysis. Plus additional core features will be engineered later like *director's gender*.\n\n#### Supporting Features\nThere are many useful supporting features, such as *genre, spoken languages, runtime, vote average* and *vote count*.\n\n\n### Final Notes \n- There are 2 variables that seem significant *budget & revenue* that won't be main features due to many reasons, of which:\n    - Marketing expenses aren't added to the movie announced budget which is misleading.\n    - I'm interested in intercultural observations more than commercial success observations.\n    - Lastly, cinema is an art that unfortunately depends on money, but it's still an art, so I'd like to tackle it with appreciation.\n- Some additional features may be engineered or added later on according to the investigation process needs.","8ee31c08":"Now the dataset is all cleaned and ready to be explored with visualizations! I would've deleted `cast` and `crew` attributes to avoid clutter, but I'll keep them in case I need to engineer another attribute in the following exploration.","340c1fe9":"#### Additional Cleaning\n*Wrangling is indeed an iterative process!*\nAlong the exploration, I found out something interesting. It seems like the code `xx` means this is a silent movie with no spoken language. And seems like there are still some more duplicates so let's deal with these.","6ca9a246":"That's all for our univariate analysis. No further cleaning, engineering nor transformation is needed.","6087753a":"It's crystal clear that movies count by year distribution is skewed to the right, in other words it's a negative skewness, which means that most movies count concentrate in the recent years, with an especially high increase in the 90s. This makes perfect sense because cinema is a visual art, and it only began to develop after The II World War, when sound and color techniques were gradually improving. In the following is some ineresting insights:\n- It seems that years 2010 and 2011 were very rich in movie production since they hold the highest count.\n\n\n- There is an outlier that may seem an inaccurate point of data at first, but actually it IS a real movie. In fact, it's the oldest film on IMDb and Letterboxd. ***Passage of Venus***; *a documentary film, representing a series of photographs of the transit of the planet Venus across the Sun in 1874. They were purportedly taken in Japan by the French astronomer Jules Janssen and Brazilian engineer Francisco Ant\u00f4nio de Almeida.*\n\n\n- As well as another 2 outliers: ***Accordion Player*** and ***Traffic Crossing Leeds Bridge*** both in 1888. The first is a silent film and the latter is another documentary film.\n\n\nNow let's move on to another feature of interest: `original_language`.","02ddeee8":"<a id='uni'><\/a>\n### 2.1. Univariate Analysis\nIn this section, we'll investigate distributions of individual variables.\n\nFirstly, let's check some of our pivotal features of interest.","c00a700f":"Very informative! In spite of this plot having 62 rows for 2 columns, it's still quite understandable. It's interesting that:\n- The gap between women and men is common in different cultures, with it being the smallest in the French culture.\n- No silent movies directed by women were found in our dataset.\n- The highest count of votes is mainly for English speaking movies, and after it the French, with a few outliers in languages like Korean, Japanese and Spanish.\n- Some cultures other than English and French began creating movies before 1950, like Hindi, Swedish, Russian and Japanese.\n\nThese findings align with our previous conclusions, showing that movie production increased across years reaching its peak around 2010. While female filmmakers still need more support especially from the local not universal cultures. It's also logical using *vote count* instead of vote average here for credibility reasons.\n\nThere weren't any surprising relationships. But this project is a starting point to elaborate more on this interesting topic in a more directed manner for the future.\n\nNow before conclusions, let'd save our cleaned dataframe in a CSV file."}}