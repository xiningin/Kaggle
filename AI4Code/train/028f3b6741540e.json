{"cell_type":{"66e28caa":"code","00dee5b4":"code","a2e43e4c":"code","fe23dc55":"code","8024d130":"code","a6220388":"code","47148696":"code","30020bdf":"code","2d22b66e":"code","d7b679c4":"code","fec2e14f":"code","ac4f7993":"code","2ea16508":"code","a3de9bd2":"code","c2bbecf0":"code","3f40e41b":"code","ee404550":"code","8bfac793":"code","dfaabb67":"code","7a03d99d":"code","78004164":"code","4f8318ac":"code","c5402eb2":"markdown","cba389a3":"markdown","ca53f522":"markdown","f68158b4":"markdown","52d0efcc":"markdown","0ab1ffa1":"markdown","49f61321":"markdown","db8c9962":"markdown","16ff5d26":"markdown","be9c054d":"markdown","622bbbb0":"markdown","1e2a5871":"markdown","1f3d3e28":"markdown","4340b6cb":"markdown","aa5d0ac3":"markdown","f25a3eae":"markdown","059c9d91":"markdown"},"source":{"66e28caa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","00dee5b4":"df_food = pd.read_csv('..\/input\/covid19-healthy-diet-dataset\/Food_Supply_Quantity_kg_Data.csv')\ndf_protein = pd.read_csv('..\/input\/covid19-healthy-diet-dataset\/Protein_Supply_Quantity_Data.csv')\ndf_fat = pd.read_csv('..\/input\/covid19-healthy-diet-dataset\/Fat_Supply_Quantity_Data.csv')\ndf_category = pd.read_csv('..\/input\/covid19-healthy-diet-dataset\/Supply_Food_Data_Descriptions.csv')","a2e43e4c":"df_food.head()","fe23dc55":"df_protein.head()","8024d130":"df_fat.head()","a6220388":"df_category.head()","47148696":"# menempatkan semua data kedalam all_columns\nall_columns = df_food.columns.tolist()\nprint(f'All Columns : {all_columns} \\n\\n')\n\n# menempatkan data yang merupakan kategori food dalam supply_columns\nsupply_columns = df_category['Categories'].tolist()\nprint(f'Supply Columns : {supply_columns} \\n\\n')\n\n# menempatkan data yang merupakan kategori non food dalam non_supply_columns\nnon_supply_columns = [i for i in all_columns if i not in supply_columns]\nprint(f'Non-Supply Columns : {non_supply_columns}')","30020bdf":"# menyimpan data yang merupakan non supply\ndf_non_supply_new = df_food[non_supply_columns]\n# menyimpan data food yang merupakan supply dan ditambahkan kolom country \ndf_food_new = df_food[['Country']+supply_columns]\n# menyimpan data protein yang merupakan supply dan ditambahkan kolom country\ndf_protein_new = df_protein[['Country']+supply_columns]\n# menyimpan data fat yang merupakan supply dan ditambahkan kolom country\ndf_fat_new = df_fat[['Country']+supply_columns]","2d22b66e":"# Menggabungkan dataset yang sudah disimpan dengan variabel di atas dan menambahkan suffix berbeda untuk setiap supply dataset menggunakan pd.merge\ndf1=pd.merge(df_food_new, df_protein_new, on=\"Country\", suffixes=('_food', '_protein'), how = 'outer')\n# Menambahkan _fat \ndf_fat_new_cols = [i + '_fat' if i != 'Country' else i for i in df_fat_new.columns]\ndf_fat_new.columns = df_fat_new_cols\n\ndf2=pd.merge(df_fat_new, df_non_supply_new, how='outer', on='Country')\ndf3=pd.merge(df1, df2, left_index=True, right_index=True, how='left', on='Country')\ndf3.columns.tolist()","d7b679c4":"Menampilkan df hasil penggabungan data","fec2e14f":"df3","ac4f7993":"# Urutkan (sorting) dan print hasil sorting\ndf_sort = df3.sort_values(by=['Deaths'], ascending=False, ignore_index=True)\ndf_sort","2ea16508":"indo = list(df_sort[df_sort['Country']== 'Indonesia'].index+1)[0]\n\nprint('Indonesia urutan : {}'.format(indo))","a3de9bd2":"meninggal_persen = list(df_sort['Deaths'][df_sort['Country']=='Indonesia'])[0]\nmeninggal = list(df_sort['Deaths'][df_sort['Country']=='Indonesia']*df_sort['Population'][df_sort['Country']=='Indonesia']*0.01)[0]\n\nprint(f'Jumlah yang meninggal di Indonesia ada {round(meninggal_persen, 10)}% dari jumlah populasi.') # 10 digit\nprint(f'Jumlah yang meninggal di Indonesia ada {round(meninggal)} orang.')","c2bbecf0":"# Melakukan binning pada kolom terkonfirmasi untuk DataFrame df_fat\nlabels = ['Sangat Tidak Banyak', 'Tidak Banyak', 'Sedang', 'Cukup Banyak', 'Sangat Banyak']\n\ndf_fat['Confirmed Category'] = pd.qcut((df_fat['Confirmed']), 5, labels=labels)","3f40e41b":"# Melakukan grouping pada kolom hasil binning ('Confirmed Category'), kemudian aggregate menggunakan fungsi mean\ncols = ['Obesity', 'Meat', 'Fruits - Excluding Wine', 'Fish, Seafood', 'Animal Products', 'Vegetal Products']\n\ngroupby_confirmed = df_fat.groupby('Confirmed Category')[cols].mean()\ngroupby_confirmed","ee404550":"# Menyimpan DataFrame hasil binning, grouping, dan aggregating dalam bentuk csv\n\ngroupby_confirmed.to_csv('groupby_confirmed.csv')","8bfac793":"# Gunakan DataFrame hasil grouping \ndf = groupby_confirmed\n\n# Lihat df \ndisplay(df)","dfaabb67":"# Normalisasi pada DataFrame df\ndf_norm = (df - df.min()) \/ (df.max() - df.min())\n\n# Lihat df_norm dan pastikan data telah ternormalisasi\ndisplay(df_norm)","7a03d99d":"# Buat bar plot dari df_norm \nx = np.arange(len(df_norm.columns))\ny = df_norm.loc['Sangat Tidak Banyak']\ny1 = df_norm.loc['Tidak Banyak']\ny2 = df_norm.loc['Sedang']\ny3 = df_norm.loc['Cukup Banyak']\ny4 = df_norm.loc['Sangat Banyak']","78004164":"fig, ax = plt.subplots(figsize=(14,10))\nwidth = 0.1\na1= ax.bar(x, y, width, label='Sangat Tidak Banyak')\na2= ax.bar(x+0.1, y1, width, label='Tidak Banyak')\na3= ax.bar(x+0.2, y2, width, label='Sedang')\na4= ax.bar(x+0.3, y3, width, label='Cukup Banyak')\na5= ax.bar(x+0.4, y4, width, label='Sangat Banyak')\n\n#menambahkan label\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width() \/ 2, height, str(round(height,2)),\n                    ha='center', va='bottom')\n        \nautolabel(a1)\nautolabel(a2)\nautolabel(a3)\nautolabel(a4)\nautolabel(a5)\n\nplt.xticks(x + 0.2, ('Obesity', 'Meat', 'Fruits - Excluding Wine', 'Fish, Seafood', 'Animal Products','Vegetal Products'))\nax.set_title('Perbandingan Konsumsi Makanan Berdasarkan Tingkat Kasus COVID 19')\nax.legend(bbox_to_anchor=(0.95,1.1))\nplt.show()","4f8318ac":"fig, ax = plt.subplots(figsize=(18, 12))\n\nV = df_food['Vegetal Products']\nC = df_food['Confirmed']\nA = df_food['Animal Products']\n# mengalikan kolom death agar dapat terlihat dalam visualisasi\nD = 200000*df_food['Deaths']\n\n# menggunakan kolom persentase kematian ('Death') sebagai ukuran pointnya, produk hewani ('Animal Products') sebagai warna point dengan cmap 'plasma'.\nmap = plt.scatter(V,C, c=A, cmap='plasma', sizes=D)\nsns.regplot(x=\"Vegetal Products\", y=\"Confirmed\", data=df_food, scatter=False, color='black');\n\n# axis labeling\nax.set_xlabel('Vegetal Products')\nax.set_ylabel('Confirmed')\nax.set_title('Healthy Food and Covid-19')\n\nfig.colorbar(map)\nplt.show()","c5402eb2":"# Import Library yang dibutuhkan","cba389a3":"Menghitung persentase jumlah kematian di Indonesia","ca53f522":"# Sorting dan Filtering\nMengurutkan data (sort) berdasarkan kolom kematian ('Deaths') dari yang terbesar.","f68158b4":"Menampilkan Negara Indonesia dalam urutan ke berapa","52d0efcc":"# Menggabungkan DataFrame \ndengan menggabungkan data yang merupakan kategori non food\/non supply dengan kategori supply dan data yang merupakan supply dari tiap df dibedakan dengan nama daf nya misalkan 'Meat_food', 'Meat_fat, dan 'Meat_protein'","0ab1ffa1":"Dataset yang digunakan ini menunjukkan persentase fat, protein, dan food yang dikonsumsi dari setiap jenis makanan yang terdaftar. Beberapa bagian akhir dataset juga mencakup persentase obesitas(Obesity), kurang gizi(Undernourished), dan kasus COVID-19 yang Terkonfirmasi(Confirmed)\/Kematian(Deaths)\/Sembuh(Recovered)\/Aktif(Active).\n\n(Catatan: Semua data memiliki unit '%' (persen) kecuali Populasi, unit persen tersebut dihitung berdasarkan jumlah populasi).","49f61321":"# Memisahkan kolom pada supply dataset antara kategori makanan dan bukan makanan","db8c9962":"# Memeriksa 5 data teratas dari masing masing dataset","16ff5d26":"* dari visualisasi diatas menunjukkkan hasil obesity dari data confirmed pada df_fat menunjukkan hasil yang signifikan pada label 'Cukup Banyak' yang memungkinkan Pasien covid 19 banyak mengkonsumsi supply yang cenderung kurang sehat\/menunjukkan tingkat obesitas yang cukup banyak\n* dari visualisasi diatas menunjukkan konsumsi supply meat mendapatkan grafik yang signifikan pada label 'Sangat Banyak' jadi memungkinkan sebagian besar negara terkonfirmasi Codiv 19 ini mengkonsumsi supply meat yang banyak\n* dari visualisasi diatas menunjukkan konsumsi Fruits - Exc. Wine dan Fish, Seafood mendapatkan grafik yang signifikan pada label yang sama yaitu 'Sangat Tidak Banyak' jadi kemungkinan negara-negara yang terdata dalam dataset ini masih kurang mengkonsumsi jenis supply Fruits - Exc. Wine dan Fish, Seafood\n* dari visualisasi diatas menunjukkan konsumsi Animal Products medapatkan grafik yang signifikan pada label 'Sangat Banyak' jadi memungkinkan sebagian besar negara terkonfirmasi Codiv 19 ini mengkonsumsi supply Animal Products yang banyak\n* dari visualisasi diatas menunjukkan konsumsi Vegetal Products medapatkan grafik yang signifikan pada label 'Tidak Banyak' jadi memungkinkan sebagian besar negara terkonfirmasi Codiv 19 ini kurang mengkonsumsi supply Vegetal Products\n\n> Jadi, menurut visualisasi diatas negara-negara terkonfirmasi covid yang terdata dalam dataset ini menunjukkan tingkat obesitas yang cukup banyak dengan data supply makanan jenis daging-dagingan dan produk hewani yang menunjukkan konsumsi yang cenderung banyak sedangkan konsumsi suppy makanan jenis buah,ikan,seafood dan sayur-sayuran yang cenderung kurang.","be9c054d":"# Seaborn Scatter plot\n\nVisualisasi scatter plot (perpaduan seaborn dan matplotlib) dari df_food antara Supply Sayuran ('Vegetal Products') dan persentase terkonfirmasi ('Confirmed') COVID-19.","622bbbb0":"# Import dataset yang dibutuhkan menggunakan pandas dan menyimpan dalam variabel yang mudah diingat","1e2a5871":"> Di dapatkan Negara Indonesia terdapat pada urutan ke-85 dari 170 negara menurut urutan persentase kematian, dan didapatkan dari hasil ini berarti Indonesia berada di 50% dari keseluruhan negara yang terdata dalam dataset berdasarkan tingkat kematian akibat COVID-19 setelah diurutkan dari yang terbesar.","1f3d3e28":"# Bar Plot\nMenggunakan data grouping pada soal sebelumnya untuk melakukan visualisasi Bar Plot","4340b6cb":"Dataset yang saya gunakan dari\nhttps:\/\/www.kaggle.com\/mariaren\/covid19-healthy-diet-dataset\/notebooks","aa5d0ac3":"Melakukan binning pada df_fat menjadi 5 bagian disimpan pada kolom Confirmed Category dengan label Sangat Tidak Banyak', 'Tidak Banyak', 'Sedang', 'Cukup Banyak', 'Sangat Banyak'.","f25a3eae":"pada visualisasi diatas menunjukkan scatter plot jumlah konsumsi produk supply vegetal\/sayuran dan kasus yang terkonfirmasi, dari visualisasi ini didapatkan semakin besar jumlah konsumsi vegetal products maka semakin sedikit juga confirmed case nya, point selanjutnya adalah penggunaan kolom death sebagai ukuran poinnya dimana sebakin besar ukuran poin dalam visualisasi scatter semakin besar juga persentasi kematiannya dan yang terakhir yaitu warna point yang menggunakan kolom produk hewani yang juga telah diberikan range perkiraannya dengan cmap","059c9d91":"# Binning, Grouping, dan Aggregating data"}}