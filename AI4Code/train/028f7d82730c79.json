{"cell_type":{"afb875fa":"code","8e2a4eaa":"code","2076c256":"code","bb72b6bb":"code","33c0a513":"code","1cd482df":"code","1557aaae":"code","ac5bec84":"code","66ab524b":"code","c37c16d4":"code","3dc6e6a4":"code","f889ee58":"code","d93012d0":"code","166f2381":"code","d9b5489c":"code","cd95a825":"code","87a9af41":"code","0b6647d8":"code","c170c5fe":"code","bbec4d10":"code","006f0988":"code","ffbcfba6":"code","72a00851":"code","a5116c04":"code","38beb852":"code","5efbf49b":"markdown","092364cc":"markdown","73f02940":"markdown","6b38c6fa":"markdown"},"source":{"afb875fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e2a4eaa":"import pandas as pd\ndf=pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","2076c256":"df.head()","bb72b6bb":"df.isna().sum()\ndf.dropna(inplace=True)","33c0a513":"df.isna().sum()","1cd482df":"df['Name'].unique()","1557aaae":"df['Genre'].unique()","ac5bec84":"df['Platform'].unique()","66ab524b":"df.columns","c37c16d4":"#Analysing sales for different genres:\n\ndef analysingGenresOverTime(tempGenre,tempRegion):\n    \n    tempDates=[]\n    tempSales=[]\n\n    for i in range(len(df['Genre'])):\n       \n        if df['Genre'].iloc[i]==tempGenre:\n            tempSales.append(df[tempRegion].iloc[i])\n            tempDates.append(int(df['Year'].iloc[i]))\n        \n        \n    zippedLists=zip(tempDates,tempSales)  \n    sortedPairs=sorted(zippedLists)\n    \n    tuples = zip(*sortedPairs)\n    list1, list2 = [ list(tuple) for tuple in  tuples]\n    \n    return list1,list2\n","3dc6e6a4":"#Analysing 'Racing' game Genre over differnet regions:\n\n\n#North American sales:\nlist1,list2=analysingGenresOverTime('Racing','NA_Sales')\n\nimport matplotlib.pyplot as plt\nplt.plot(list1,list2)\nplt.title('North American Sales for \\'Racing Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n\n#European Sales: \nlist1,list2=analysingGenresOverTime('Racing','EU_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('European Sales for \\'Racing Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n#Japan Sales: \nlist1,list2=analysingGenresOverTime('Racing','JP_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('Japan Sales for \\'Racing Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n","f889ee58":"#Analysing 'Action' game Genre over differnet regions:\n\n\n#North American sales:\nlist1,list2=analysingGenresOverTime('Action','NA_Sales')\n\nimport matplotlib.pyplot as plt\nplt.plot(list1,list2)\nplt.title('North American Sales for \\'Action Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n\n#European Sales: \nlist1,list2=analysingGenresOverTime('Action','EU_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('European Sales for \\'Action Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n#Japan Sales: \nlist1,list2=analysingGenresOverTime('Action','JP_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('Japan Sales for \\'Action Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n","d93012d0":"#Analysing 'Strategy' game Genre over differnet regions:\n\n\n#North American sales:\nlist1,list2=analysingGenresOverTime('Strategy','NA_Sales')\n\nimport matplotlib.pyplot as plt\nplt.plot(list1,list2)\nplt.title('North American Sales for \\'Strategy Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n\n#European Sales: \nlist1,list2=analysingGenresOverTime('Strategy','EU_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('European Sales for \\'Strategy Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n#Japan Sales: \nlist1,list2=analysingGenresOverTime('Strategy','JP_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('Japan Sales for \\'Strategy Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n","166f2381":"#Analysing 'Strategy' game Genre over differnet regions:\n\n\n#North American sales:\nlist1,list2=analysingGenresOverTime('Puzzle','NA_Sales')\n\nimport matplotlib.pyplot as plt\nplt.plot(list1,list2)\nplt.title('North American Sales for \\'Puzzle Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n\n#European Sales: \nlist1,list2=analysingGenresOverTime('Puzzle','EU_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('European Sales for \\'Puzzle Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n#Japan Sales: \nlist1,list2=analysingGenresOverTime('Puzzle','JP_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('Japan Sales for \\'Puzzle Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n","d9b5489c":"#Analysing 'Strategy' game Genre over differnet regions:\n\n\n#North American sales:\nlist1,list2=analysingGenresOverTime('Shooter','NA_Sales')\n\nimport matplotlib.pyplot as plt\nplt.plot(list1,list2)\nplt.title('North American Sales for \\'Shooter Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n\n#European Sales: \nlist1,list2=analysingGenresOverTime('Shooter','EU_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('European Sales for \\'Shotter Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n#Japan Sales: \nlist1,list2=analysingGenresOverTime('Shooter','JP_Sales')\n\nplt.figure()\nplt.plot(list1,list2)\nplt.title('Japan Sales for \\'Shooter Game\\' genre')\nplt.ylabel('Sales in millions')\nplt.show()\n\n","cd95a825":"#Analysing North AMerican sales over genres: \ntempNames=df['NA_Sales'].groupby(df['Genre']).mean().keys()\ntempLst=list(df['NA_Sales'].groupby(df['Genre']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Genre of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the North American region')\nplt.show()\n\n\n#Analysing Europeran sales over genres: \ntempNames=df['EU_Sales'].groupby(df['Genre']).mean().keys()\ntempLst=list(df['EU_Sales'].groupby(df['Genre']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Genre of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the European region')\nplt.show()\n\n\n#Analysing Japan sales over genres: \ntempNames=df['JP_Sales'].groupby(df['Genre']).mean().keys()\ntempLst=list(df['JP_Sales'].groupby(df['Genre']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Genre of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the Japan')\nplt.show()","87a9af41":"#Analysing sales over different platforms:\n\n#Analysing North AMerican sales over genres: \ntempNames=df['NA_Sales'].groupby(df['Platform']).mean().keys()\ntempLst=list(df['NA_Sales'].groupby(df['Platform']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Platform of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the North American region')\nplt.show()\n\n\n#Analysing Europeran sales over genres: \ntempNames=df['EU_Sales'].groupby(df['Platform']).mean().keys()\ntempLst=list(df['EU_Sales'].groupby(df['Platform']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Platform of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the European region')\nplt.show()\n\n\n#Analysing Japan sales over genres: \ntempNames=df['JP_Sales'].groupby(df['Platform']).mean().keys()\ntempLst=list(df['JP_Sales'].groupby(df['Platform']).mean())\n\nplt.bar(tempNames,tempLst)\nplt.tick_params(axis='x', rotation=70)\nplt.xlabel('Platform of the games')\nplt.ylabel('Sales in millions')\nplt.title('Sales analysis over the Japan')\nplt.show()","0b6647d8":"def topKGames(tempRegion):\n\n    gameDict=dict()\n\n    for i in range(len(df['Name'])):\n        if df['Name'].iloc[i] not in gameDict.keys():\n            gameDict.update({df['Name'].iloc[i]:tempRegion.iloc[i]})\n        else:\n            gameDict[df['Name'].iloc[i]]+=tempRegion.iloc[i]\n            \n    tempTupls=list(sorted(gameDict.items(),key=lambda x:x[1],reverse=True))\n    \n    tempNames=list(map(lambda temp:temp[0],tempTupls))\n    tempVals=list(map(lambda temp:temp[1],tempTupls))\n    \n    return tempNames,tempVals","c170c5fe":"#Total Sales of top-5 games over the years for the NA region: \n\ntempNames,tempVals=topKGames(df['NA_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.xlabel('Top-5 games')\nplt.title('Top-5 sold games in the North American region')\nplt.show()","bbec4d10":"#Total Sales of top-5 games over the years for the European region: \n\ntempNames,tempVals=topKGames(df['EU_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.xlabel('Top-5 games')\nplt.title('Top-5 sold games in the European region')\nplt.show()","006f0988":"#Total Sales of top-5 games over the years for the Japanese region: \n\ntempNames,tempVals=topKGames(df['JP_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.xlabel('Top-5 games')\nplt.title('Top-5 sold games in the Japanese region')\nplt.show()","ffbcfba6":"#top-k publishers:\n\ndef topKPublishers(tempRegion):\n\n    gameDict=dict()\n\n    for i in range(len(df['Publisher'])):\n        if df['Publisher'].iloc[i] not in gameDict.keys():\n            gameDict.update({df['Publisher'].iloc[i]:tempRegion.iloc[i]})\n        else:\n            gameDict[df['Publisher'].iloc[i]]+=tempRegion.iloc[i]\n            \n    tempTupls=list(sorted(gameDict.items(),key=lambda x:x[1],reverse=True))\n    \n    tempNames=list(map(lambda temp:temp[0],tempTupls))\n    tempVals=list(map(lambda temp:temp[1],tempTupls))\n    \n    return tempNames,tempVals","72a00851":"#Total Sales of top-5 publishers over the years for the NA region: \n\ntempNames,tempVals=topKPublishers(df['NA_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.title('Top-5 publisheres in the North American region')\nplt.show()","a5116c04":"#Total Sales of top-5 publishers over the years for the European region: \n\ntempNames,tempVals=topKPublishers(df['EU_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.title('Top-5 publisheres in the European region')\nplt.show()","38beb852":"#Total Sales of top-5 publishers over the years for the Japanese region: \n\ntempNames,tempVals=topKPublishers(df['JP_Sales'])\n\nplt.bar(tempNames[:5],tempVals[:5])\nplt.tick_params(axis='x', rotation=70)\nplt.ylabel('Total sales in millions')\nplt.title('Top-5 publisheres in the japanese region')\nplt.show()","5efbf49b":"For the North American region the 'NES' games seemed to have the highest average sales over the course of years. \nFor the EU region the 'GB' games seemed to have the highest sales over the course of years. \nFor Japan the 'NES' games seemed to have the highest mean sales over the course of years followed by 'GB' games. ","092364cc":"From the above Bar-charts it seem that 'Platform' based games and 'Shooting' based games have the highest average sales in the North American region over the course of years.\nThe EU region shows similar trends as well with 'Shooting' based game having the highest sales closely followed by 'Platform' based games. \nJapan seems to have a different trend with 'Shooter' based games having the least sales and 'Role Playing' games having the highest sales followed by 'Platform' based games. ","73f02940":"Nintendo seems to be the highest selling company\/publisher in all the three regions. Ubisoft and Activision seems to one of the top-5 in the North American and European markets. Sony seems to be there in the top-5 in the Japanese market. ","6b38c6fa":"For the North American region 'Shooting' games in 1984-85 seemed to have a surge in sales followed by a spike in 'Puzzle' games in 1990. Beyond that 'Racing' games seemed to have been the choice for the NA people very closely followed by 'Shooting' games."}}