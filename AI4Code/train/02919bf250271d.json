{"cell_type":{"bfdb0296":"code","2f7270cc":"code","46bd06f7":"code","5af8be32":"code","9ffb8d34":"code","7f42d665":"code","6c24c75d":"code","3813d729":"code","e3117fb2":"code","f8f0e891":"markdown"},"source":{"bfdb0296":"import os\nimport pandas as pd\nimport numpy as np\nimport librosa\nimport librosa.display\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport IPython.display","2f7270cc":"# \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\ndf_train = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/train.csv', index_col=False)\ndf_test = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/test.csv', index_col=False)","46bd06f7":"# \u3044\u304d\u306a\u308a\u6a2a\u9053\u306b\u30ba\u30ec\u307e\u3059\u30fb\u30fb\u30fb\n# \u6b63\u898f\u5316\u3092\u3059\u308b\u3068\uff0c\u4fe1\u53f7\u304c\u30aa\u30d5\u30bb\u30c3\u30c8\u3057\u3066\u3057\u307e\u3046\u306e\u3067waveplot\u3059\u308b\u3068\u3073\u3063\u304f\u308a\u3059\u308b\n# \u4fe1\u53f7\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306flibrosa\u30e9\u30a4\u30d6\u30e9\u30ea\u306enormalize\u95a2\u6570\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\uff1f\n\ndata_root = '\/kaggle\/input\/hah-data-science-challenge\/train\/train'\ny, sr = librosa.core.load(os.path.join(data_root, \"train0.wav\"), sr=None)\ny_norm_minmax = (y-y.min())\/(y.max()-y.min()) \ny_norm_lib = librosa.util.normalize(y)\n\nfig = plt.figure(1, figsize=(12,8))\n\nax = fig.add_subplot(4, 1, 1)\nax.set_ylabel(\"original wave\")\nlibrosa.display.waveplot(y, sr)\n\nax = fig.add_subplot(4, 1, 2)\nax.set_ylabel(\"lib normalization\")\nlibrosa.display.waveplot(y_norm_lib, sr)\n\nax = fig.add_subplot(4, 1, 3)\nax.set_ylabel(\"min-max normalization\")\nlibrosa.display.waveplot(y_norm_minmax, sr)\n\nax = fig.add_subplot(4, 1, 4)\nax.set_ylabel(\"min-max numpy array\")\nax.plot(y_norm_minmax)","5af8be32":"# \u6253\u6483\u306e\u56de\u6570\u3068\uff0c\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u8a08\u7b97\u3059\u308b\ntrain_data_root = '\/kaggle\/input\/hah-data-science-challenge\/train\/train'\ndf_train[\"SamplingRate\"] = 0\ndf_train[\"ImpactCount\"] = 0\nfor series in df_train.iterrows():\n    filename = series[1][\"\u30d5\u30a1\u30a4\u30eb\"]\n    y, sr = librosa.core.load(os.path.join(train_data_root, filename), sr=None)\n    y = librosa.util.normalize(y)  # \u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306e\u6b63\u898f\u5316\n    onset_envelope = librosa.onset.onset_strength(y, sr)\n    onsets = librosa.onset.onset_detect(onset_envelope=onset_envelope)\n    df_train[\"ImpactCount\"][series[0]] = len(onsets)\n    df_train[\"SamplingRate\"][series[0]] = sr\n\ntest_data_root = '\/kaggle\/input\/hah-data-science-challenge\/test\/test'\ndf_test[\"SamplingRate\"] = 0\ndf_test[\"ImpactCount\"] = 0\nfor series in df_test.iterrows():\n    filename = series[1][\"\u30d5\u30a1\u30a4\u30eb\"]\n    y, sr = librosa.core.load(os.path.join(test_data_root, filename), sr=None)\n    y = librosa.util.normalize(y) # \u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306e\u6b63\u898f\u5316\n    onset_envelope = librosa.onset.onset_strength(y, sr)\n    onsets = librosa.onset.onset_detect(onset_envelope=onset_envelope)\n    df_test[\"ImpactCount\"][series[0]] = len(onsets)\n    df_test[\"SamplingRate\"][series[0]] = sr","9ffb8d34":"# \u30cf\u30f3\u30de\u30ea\u30f3\u30b0\u306e\u56de\u6570\u306f\u307e\u3061\u307e\u3061\n# \u30cf\u30f3\u30de\u30ea\u30f3\u30b0\u56de\u6570\u306f\u660e\u3089\u304b\u306b\u304a\u304b\u3057\u3044\u3082\u306e\u3082\u3042\u308b\uff08\u6570\u5341\u56de\u3068\u304b\uff09\n# \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306f\uff12\u7a2e\u985e\n\ndf_train[\"train_test\"] = \"train\"\ndf_test[\"train_test\"] = \"test\"\n\nfig=plt.figure(figsize=(12,8))\nax = fig.add_subplot(1,1,1)\nsns.countplot(data=pd.concat([df_train, df_test]), x=\"ImpactCount\", hue=\"train_test\", ax=ax)\n\nfig=plt.figure(figsize=(12,8))\nax = fig.add_subplot(1,1,1)\nsns.countplot(data=pd.concat([df_train, df_test]), x=\"SamplingRate\", hue=\"train_test\", ax=ax)","7f42d665":"# \u4f8b\u3048\u3070\u30cf\u30f3\u30de\u30ea\u30f3\u30b0\u56de\u6570\u304c\u660e\u3089\u304b\u306b\u591a\u3044\u3082\u306e\u3092\u629c\u304d\u51fa\u3059\u3068\n\nsample_train = df_train[df_train[\"ImpactCount\"]==39]\nsample_test = df_test[df_test[\"ImpactCount\"]==39]\nIPython.display.display(sample_train)\nIPython.display.display(sample_test)","6c24c75d":"# plot\u3057\u3066\u307f\u308b\u3068\uff0c\u30cf\u30f3\u30de\u30ea\u30f3\u30b0\u306e\u97f3\u304c\u5165\u3063\u3066\u3044\u306a\u3044\uff08\u96d1\u97f3\u306e\u307f\u306e\uff09\u30b5\u30f3\u30d7\u30eb\u3060\u3063\u305f\ndef plot_onsets(y, sr, onsets):\n    fig = plt.figure(figsize=(12,8))\n    ax = fig.add_subplot(2, 1, 1)\n    ax.plot(onset_envelope, label=\"onset strength\")\n    ax.vlines(onsets, 0, np.max(onset_envelope), color=\"red\", alpha=0.25, label=\"onsets\")\n    ax.set_xlim([0, len(onset_envelope)]); ax.legend(loc=1)\n    ax = fig.add_subplot(2, 1, 2)\n    librosa.display.waveplot(y, sr)\n    plt.close\n    \ny, sr = librosa.core.load(os.path.join(test_data_root, \"test3202.wav\"), sr=None)\ny = librosa.util.normalize(y)\nonset_envelope = librosa.onset.onset_strength(y, sr)\nonsets = librosa.onset.onset_detect(y=y, sr=sr, onset_envelope=onset_envelope)\n\nplot_onsets(y, sr, onsets)","3813d729":"# \u3061\u306a\u307f\u306b\u6570\u5c11\u306a\u3044\u7570\u5e38\u30e9\u30d9\u30eb\u306e\u4ed8\u3044\u305f\u30c7\u30fc\u30bf\u306f\u30fb\u30fb\u30fb\nsample = df_train[df_train[\"Target\"]==1]\nsample","e3117fb2":"# \u3055\u3059\u304c\u306b\u3061\u3083\u3093\u3068\u97f3\u5165\u3063\u3066\u307e\u3057\u305f(*\u00b4\u2200`*)\uff96\uff76\uff6f\uff80\ny, sr = librosa.core.load(os.path.join(train_data_root, \"train482.wav\"), sr=None)\ny = librosa.util.normalize(y)\nonset_envelope = librosa.onset.onset_strength(y, sr)\nonsets = librosa.onset.onset_detect(y=y, sr=sr, onset_envelope=onset_envelope)\nplot_onsets(y, sr, onsets)\n\ny, sr = librosa.core.load(os.path.join(train_data_root, \"train785.wav\"), sr=None)\ny = librosa.util.normalize(y)\nonset_envelope = librosa.onset.onset_strength(y, sr)\nonsets = librosa.onset.onset_detect(y=y, sr=sr, onset_envelope=onset_envelope)\nplot_onsets(y, sr, onsets)","f8f0e891":"1\u6253\u97f31\u30ec\u30b3\u30fc\u30c9\u306b\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3068\u308a\u3042\u3048\u305a\u6253\u97f3\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u307f\u305f\u3089\n\n\u7121\u97f3\uff1f\u306e\u30d5\u30a1\u30a4\u30eb\u3082\u3042\u3063\u3066\u7d76\u671b\u3057\u3066\u3044\u308b"}}