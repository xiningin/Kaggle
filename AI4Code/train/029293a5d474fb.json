{"cell_type":{"b40d1c31":"code","7dd0bce8":"code","52141c36":"code","4e799992":"code","0c61379c":"code","3f47c800":"code","6d499cac":"code","870949ee":"code","645b4d8e":"code","4b68677e":"code","b14ab3d9":"code","4fa5d74c":"code","5df6d672":"code","5d39cf01":"code","d19e6b58":"code","7e0b0137":"code","db08db0f":"code","10120a9d":"code","d79a8eda":"code","42e16e7e":"code","03141cde":"code","339ff307":"code","4906c29d":"code","ba0da9cf":"markdown","06d3e13b":"markdown","f1dd5c67":"markdown","35f09249":"markdown","51c507c3":"markdown","9bccccf4":"markdown","a08bf7c7":"markdown","8e61c164":"markdown","4acc3ca8":"markdown","5f2d5623":"markdown","f4307f14":"markdown","1c8fa37a":"markdown","aa13ef94":"markdown","379ce1de":"markdown","673efd01":"markdown","a5afee9d":"markdown","4fe4d0a4":"markdown","25806275":"markdown","9febb015":"markdown","3cd18ff6":"markdown","9209e291":"markdown","93051a38":"markdown","f29520fd":"markdown","f792f371":"markdown","3cef4cf3":"markdown","39ffc77c":"markdown","32244ffc":"markdown","b31a2cb9":"markdown","06818c65":"markdown","c0704602":"markdown","28998011":"markdown","ab207d04":"markdown","94e26fc5":"markdown","b2023204":"markdown","773b89b4":"markdown","61d16510":"markdown","37777960":"markdown","9a4be307":"markdown","11b5b19c":"markdown","773ab2d8":"markdown","c4e47874":"markdown","6e65fca8":"markdown","c03d1020":"markdown","9798071a":"markdown"},"source":{"b40d1c31":"# Importing the libraries\n%matplotlib inline\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Customizing the plot style\nplt.style.use('seaborn')","7dd0bce8":"mcq_responses_df = pd.read_csv('..\/input\/multipleChoiceResponses.csv', header=1, low_memory=False)","52141c36":"# Groupping the data by countries\ncountry = mcq_responses_df.groupby(mcq_responses_df.columns[4])[mcq_responses_df.columns[0]].count()\ncountry = country.drop('Other')\n\n# Getting the Top 5 countries on the basis of count\ncountry = country.nlargest(5)\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [10, 8]\n\n# Plotting the dataframe\ncountry.plot(kind='bar', rot=0)\nplt.xticks(fontsize=11)\nplt.yticks(country[0:], fontsize=11)\nplt.xlabel('Country', fontsize=14)\nplt.ylabel('Total Developers (in survey)', fontsize=14)\nplt.show()","4e799992":"# Counting the Genders in USA\ngender_usa = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'United States of America',\n                                  mcq_responses_df.columns[1]]\n\nmale_usa, female_usa = gender_usa.value_counts()[0:2]\n\n# Counting the Genders in India\ngender_india = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'India',\n                                  mcq_responses_df.columns[1]]\n\nmale_india, female_india = gender_india.value_counts()[0:2]\n\ngender_india_usa = pd.DataFrame({'Country':['United States of America', 'United States of America',\n                                           'India', 'India'], \n                                'Gender':['Male', 'Female', 'Male', 'Female'],\n                                'Count': [male_usa, female_usa, male_india, female_india]})\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [8, 6] \nsns.barplot(x='Country', y='Count', hue='Gender', data=gender_india_usa, \n            palette='deep')\nplt.yticks(gender_india_usa.loc[:, 'Count'])\nplt.show()","0c61379c":"# Getting age groups of USA\nage_group_usa = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'United States of America',\n                                     mcq_responses_df.columns[3]]\nage_group_usa = age_group_usa.value_counts()\n\n# Getting age groups of India\nage_group_india = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'India',\n                                  mcq_responses_df.columns[3]]\nage_group_india = age_group_india.value_counts()\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [15, 7.5]\n# Custom colors\ncolors = ['#94DCF1', '#8AD5EB', '#75C4DB', '#6AB9D0',\n          '#5AB4CF', '#48A9C5', '#35A9CB', '#179CC3',\n          '#2696B8', '#1F8FB0', '#168BAD', '#1481A1']\n\n\ndef annotate_bar_percentage(series):\n    series_length = len(series.index)\n    total = sum(series[0:])\n    \n    for i in range(series_length):\n        plt.annotate(str(round(series[series_length - (i+1)] * 100 \/ total, 2)) + '%', \n                     xy=(0,0), xytext=(0, series_length-i-1),\n                    fontsize=11)\n\n# Plotting USA Age Group\nplt.subplot(1, 2, 1)\nplt.barh(age_group_usa.index, age_group_usa[0:], color=colors)\nplt.xlabel('Frequency', fontsize=12)\nplt.ylabel('Age Group')\nplt.title('USA', fontsize=14)\nannotate_bar_percentage(age_group_usa)\n\n# Plotting India Age Group\nplt.subplot(1, 2, 2)\nplt.barh(age_group_india.index, age_group_india[0:], color=colors)\nplt.xlabel('Frequency', fontsize=12)\nplt.title('India', fontsize=14)\nannotate_bar_percentage(age_group_india)\nplt.show()","3f47c800":"# USA Kagglers Degree\ndegree_usa = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'United States of America',\n                                  mcq_responses_df.columns[5]]\n\ndegree_usa = degree_usa.value_counts()\ndegree_usa = degree_usa.drop(labels='I prefer not to answer')\ndegree_usa.index = ['Masters', 'Bachelors', 'Doctoral', 'Dropouts', 'Professional', 'High School']\n\n# Indian Kagglers Degree\ndegree_india = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'India',\n                                  mcq_responses_df.columns[5]]\n\ndegree_india = degree_india.value_counts()\ndegree_india = degree_india.drop(labels='I prefer not to answer')\ndegree_india.index = degree_usa.index\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [11.5, 4.5]\n# Custom color\ncolors = ['#14C4A9', '#16B9A0', '#15A48E',\n          '#2A9383', '#1D8374', '#148C7B']\n\n# Plotting USA Degrees\nplt.subplot(1, 2, 1)\nplt.barh(degree_usa.index, degree_usa[0:],\n         color=colors, alpha=0.75)\nannotate_bar_percentage(degree_usa)\nplt.title('USA', fontsize=14)\nplt.yticks(fontsize=11.25)\n\n# Plotting India Degrees\nplt.subplot(1, 2, 2)\nplt.barh(degree_india.index, degree_india[0:],\n         color=colors, alpha=0.75)\nannotate_bar_percentage(degree_india)\nplt.title('India', fontsize=14)\nplt.yticks(fontsize=11.25)\nplt.tight_layout()\nplt.show()","6d499cac":"def profession_df(country):\n    profession = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == country,\n                                   mcq_responses_df.columns[7]]\n    profession = profession.value_counts(dropna=False)\n    profession = pd.DataFrame({'Role':profession.index, 'Count':profession[0:]})\n    profession = profession.dropna()\n    profession = profession[profession['Role'] != 'Other']\n    profession = profession.nlargest(10, columns='Count')\n    profession = profession.sort_values(by='Role')\n    return profession\n\n# Generating profession dataframe\nprofession_usa = profession_df('United States of America')\nprofession_india = profession_df('India')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [10, 12]\n# Custom color\ncolors1 = ['#2980B9', '#3498DB', '#1ABC9C', '#16A085', '#27AE60', \n          '#2ECC71', '#F1C40F', '#F39C12', '#E67E22', '#D35400']\n\n# Plotting USA roles\nplt.subplot(2, 1, 1)\nplt.pie(profession_usa['Count'], labels=profession_usa['Role'],\n        autopct='%1.1f%%', colors=colors1)\nplt.axis('equal')\nplt.title('USA', fontsize=16)\n\n# Plotting India roles\nplt.subplot(2, 1, 2)\nplt.pie(profession_india['Count'], labels=profession_india['Role'],\n        autopct='%1.1f%%', colors=colors1)\nplt.axis('equal')\nplt.title('India', fontsize=16)\nplt.show()","870949ee":"def compensation_df(country, profile):\n    compensation = mcq_responses_df.loc[(mcq_responses_df[mcq_responses_df.columns[4]] == country) &\n                                            (mcq_responses_df[mcq_responses_df.columns[7]] == profile),\n                                             mcq_responses_df.columns[12]]\n    \n    compensation = compensation.value_counts(dropna=False)\n    compensation = compensation.drop(index=['I do not wish to disclose my approximate yearly compensation',None])\n    \n    # Sorting rows by values before '-'\n    indices = compensation.index\n    num_bef_delim = []\n    for ind in indices:\n        if ind.find('-') > 0:\n            num_bef_delim.append(int(ind[:ind.find('-')]))\n        else:\n            num_bef_delim.append(int(ind[:3]))\n    compensation = pd.DataFrame({'Salary_Range':num_bef_delim, 'Count': compensation[0:]})\n    compensation = compensation.sort_values(by='Salary_Range')\n    return compensation\n\n# Data Scientists USA and India\nprofiles = ['Data Scientist', 'Data Engineer', 'Data Analyst', 'Software Engineer']\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [20, 20]\n# Custom color\ncolors2 = ['#5499C7', '#EC7063', '#F1C40F', '#D35400',\n          '#CD6155', '#3DB948', '#C0392B', '#239B56']\n\nfor profile in range(len(profiles)):\n    compensation_usa = compensation_df('United States of America', profiles[profile])\n    compensation_india = compensation_df('India', profiles[profile])\n    plt.subplot(2, 2, profile+1)\n    plt.plot(compensation_usa['Salary_Range'], compensation_usa['Count'], \n             label='USA', marker='^', color=colors2[profile])\n    plt.plot(compensation_india['Salary_Range'], compensation_india['Count'], \n             label='India', marker='*', color=colors2[profile+1])\n    plt.title(profiles[profile]+' Salary USA and India', fontsize=20)\n    plt.xlabel('Salary Range x 1000 (in $)', fontsize=14)\n    plt.ylabel('No. of Kagglers', fontsize=14)\n    plt.xticks(fontsize=18)\n    plt.yticks(fontsize=16)\n    plt.legend()    ","645b4d8e":"def generate_df(country, index1, index2, col_name):\n    df = mcq_responses_df.loc[(mcq_responses_df[mcq_responses_df.columns[4]] == country),\n                               mcq_responses_df.columns[index1]:mcq_responses_df.columns[index2]]\n    old_cols = df.columns\n    new_cols = []\n    \n    for i in old_cols:\n        t = i.split()[::-1]\n        new_name = []\n        for j in t:\n            if j == '-':\n                break\n            else:\n                new_name.append(j)\n        new_cols.append(''.join(new_name[::-1]))\n    \n    # Updating the column names\n    df.columns = new_cols\n    # Generating the dataframe\n    df = pd.concat([pd.DataFrame([[i, df[i].value_counts()[0]]], columns=[col_name, 'Count']) \n                        for i in df.columns], ignore_index=True)\n    \n    df = df.sort_values(by=col_name)\n    df = df.reset_index(drop=True)\n    return df\n\nide_usa = generate_df('United States of America', 29, 41, 'IDE')\nide_india = generate_df('India', 29, 41, 'IDE')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [12, 14]\n\n# Plotting USA IDEs\nplt.subplot(2, 1, 1)\nplt.pie(ide_usa['Count'], labels=ide_usa['IDE'], \n        autopct='%1.1f%%', colors=colors1 + ['#e74c3c', '#d0d3d4'])\nplt.title('USA', fontsize=18)\nplt.axis('equal')\n\n# Plotting India IDEs\nplt.subplot(2, 1, 2)\nplt.pie(ide_india['Count'], labels=ide_india['IDE'], \n        autopct='%1.1f%%', colors=colors1 + ['#e74c3c', '#d0d3d4'])\nplt.title('India', fontsize=18)\nplt.axis('equal')\nplt.show()","4b68677e":"# Generating programming language dataframe of both countries\nlanguage_usa = generate_df('United States of America', 65, 80, 'ProgrammingLanguage') # generate_df defined in above section\nlanguage_india = generate_df('India', 65, 80, 'ProgrammingLanguage')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [15, 12]\n\n# Figure Title\nplt.suptitle('Programming Language users in USA and India', fontsize=20)\n\n# USA Programming Language Plot\nplt.subplot(1, 2, 1)\nplt.barh(language_usa['ProgrammingLanguage'], language_usa['Count'], color=colors2)\nplt.title('USA', fontsize=16)\nannotate_bar_percentage(language_usa['Count'])\n\n# India Programming Language Plot\nplt.subplot(1, 2, 2)\nplt.barh(language_india['ProgrammingLanguage'], language_india['Count'], color=colors2)\nplt.title('India', fontsize=16)\nannotate_bar_percentage(language_india['Count'])\nplt.show()","b14ab3d9":"# Frequent Language USA\nfrequent_language_usa = mcq_responses_df.loc[(mcq_responses_df[mcq_responses_df.columns[4]] == 'United States of America'),\n                               mcq_responses_df.columns[84]]\nfrequent_language_usa = frequent_language_usa.value_counts().nlargest(10)\n\n# Frequent Language India\nfrequent_language_india = mcq_responses_df.loc[(mcq_responses_df[mcq_responses_df.columns[4]] == 'India'),\n                               mcq_responses_df.columns[84]]\nfrequent_language_india = frequent_language_india.value_counts().nlargest(10)\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [14, 8]\n\n# Figure Title\nplt.suptitle('Top 10 Programming Languages used by Kagglers in USA and India frequently', fontsize=18)\n\n# Plotting frequent languages USA\nplt.subplot(1, 2, 1)\nplt.pie(frequent_language_usa[0:], labels=frequent_language_usa.index, \n        autopct='%1.1f%%', colors=colors1)\nplt.title('USA', fontsize=16)\nplt.axis('equal')\n\n# Plotting frequent languages India\nplt.subplot(1, 2, 2)\nplt.pie(frequent_language_india[0:], labels=frequent_language_india.index,\n        autopct='%1.1f%%', colors=colors1)\nplt.title('India', fontsize=16)\nplt.axis('equal')\nplt.show()","4fa5d74c":"# Data Type USA\ndata_usa = generate_df('United States of America', 250, 260, 'Data_Type')\ndata_usa['Data_Type'] = data_usa['Data_Type'].str[:-4]\n\n# Data Type India\ndata_india = generate_df('India', 250, 260, 'Data_Type')\ndata_india['Data_Type'] = data_india['Data_Type'].str[:-4]\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [15, 8]\n\n# Plotting USA data type\nplt.subplot(1, 2, 1)\nplt.pie(data_usa['Count'], labels=data_usa['Data_Type'], \n        autopct='%1.1f%%', colors=colors1)\nplt.title('USA', fontsize=16)\nplt.axis('equal')\n\n# Plotting India ML Frameworks\nplt.subplot(1, 2, 2)\nplt.pie(data_india['Count'], labels=data_india['Data_Type'], \n        autopct='%1.1f%%', colors=colors1)\nplt.title('India', fontsize=16)\nplt.axis('equal')\nplt.show()","5df6d672":"def plot_time_spent(index):\n    # Time spent in USA\n    time_usa = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'United States of America',\n                                    mcq_responses_df.columns[index]]\n    time_usa = time_usa.dropna()\n    time_usa_mean, time_usa_mode = time_usa.mean(), time_usa.mode()[0]\n\n    # Time spent in India\n    time_india = mcq_responses_df.loc[mcq_responses_df[mcq_responses_df.columns[4]] == 'India',\n                                      mcq_responses_df.columns[index]]\n    time_india = time_india.dropna()\n    time_india_mean, time_india_mode = time_india.mean(), time_india.mode()[0]\n\n    # Plotting mean\n    plt.bar(np.array([1, 2]), [time_usa_mean, time_india_mean], \n            label='mean', width=0.15, color='#7EACA3')\n    # Plotting mode\n    plt.bar(np.array([1, 2]) + 0.15, [time_usa_mode, time_india_mode],\n            label='mode', width=0.15, color='#AB7330')\n\n    # Annotation\n    plt.annotate(round(time_usa_mean, 1), xy=(1,0), xytext=(0.94, time_usa_mean-0.7),\n                 color='#ffffff', fontsize=12.5)\n    plt.annotate(str(round(np.sum(time_usa == time_usa_mode)\/ len(time_usa) * 100, 1))+'%', \n                 xy=(1.15, time_usa_mode), xytext=(1.25, time_usa_mode+3), \n                 arrowprops={'color':'#221155' }, fontsize=12.5)\n    plt.annotate(round(time_india_mean, 1), xy=(2, 0), xytext=(1.94, time_india_mean-0.7),\n                 color='#ffffff', fontsize=12.5)\n    plt.annotate(str(round(np.sum(time_india == time_india_mode)\/ len(time_india) * 100, 1))+'%', \n             xy=(2.15, time_india_mode), xytext=(2.20, time_india_mode+3), \n             arrowprops={'color':'#661155' }, fontsize=12.5)\n    plt.xticks(np.array([1, 2]) + 0.075, ['USA', 'India'], fontsize=12.5)\n    plt.ylabel('Time spent(in %)', fontsize=12)\n    plt.legend(loc='upper center', fontsize=12, frameon=True)\n    plt.show()\n\n# Customizing plot size\nplt.rcParams['figure.figsize'] = [6, 6]\n\n# Gathering Data\nplot_time_spent(277)","5d39cf01":"# Cleaning Data\nplot_time_spent(278)","d19e6b58":"# Data Visualization\nplot_time_spent(279)","7e0b0137":"# Model building\nplot_time_spent(280)","db08db0f":"# Model production\nplot_time_spent(281)","10120a9d":"# Finding insights in the data\nplot_time_spent(282)","d79a8eda":"# MOOC USA\nmooc_usa = generate_df('United States of America', 291, 301, 'MOOCs')\n\n# MOOC India\nmooc_india = generate_df('India', 291, 301, 'MOOCs')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [16, 10]\n\n# Plotting USA ML Frameworks\nplt.subplot(1, 2, 1)\nplt.barh(mooc_usa['MOOCs'], mooc_usa['Count'], color=colors1)\nplt.title('USA', fontsize=16)\nannotate_bar_percentage(mooc_usa['Count'])\n\n# Plotting India ML Frameworks\nplt.subplot(1, 2, 2)\nplt.barh(mooc_india['MOOCs'], mooc_india['Count'], color=colors1)\nplt.title('India', fontsize=16)\nannotate_bar_percentage(mooc_india['Count'])\nplt.show()","42e16e7e":"# ML Frameworks USA\nml_framework_usa = generate_df('United States of America', 88, 104, 'MLFramework')\n\n# ML Frameworks India\nml_framework_india = generate_df('India', 88, 104, 'MLFramework')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [14, 8]\n\n# Plotting USA ML Frameworks\nplt.subplot(1, 2, 1)\nplt.barh(ml_framework_usa['MLFramework'], ml_framework_usa['Count'], color=colors1)\nplt.title('USA', fontsize=16)\nannotate_bar_percentage(ml_framework_usa['Count'])\n\n# Plotting India ML Frameworks\nplt.subplot(1, 2, 2)\nplt.barh(ml_framework_india['MLFramework'], ml_framework_india['Count'], color=colors1)\nplt.title('India', fontsize=16)\nannotate_bar_percentage(ml_framework_india['Count'])\nplt.show()","03141cde":"# Visualization Library USA\nlibrary_usa = generate_df('United States of America', 110, 120, 'data_visual_lib')\n\n# Visualization Library USA\nlibrary_india = generate_df('India', 110, 120, 'data_visual_lib')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [14, 7.5]\n\n# Plotting USA library\nplt.subplot(1, 2, 1)\nplt.pie(library_usa['Count'], labels=library_usa['data_visual_lib'], \n        autopct='%1.1f%%', colors=colors1)\nplt.title('USA', fontsize=16)\nplt.axis('equal')\n\n# Plotting USA library\nplt.subplot(1, 2, 2)\nplt.pie(library_india['Count'], labels=library_india['data_visual_lib'],\n       autopct='%1.1f%%', colors=colors1)\nplt.title('India', fontsize=16)\nplt.axis('equal')\nplt.show()","339ff307":"# Notebooks USA\nnotebooks_usa = generate_df('United States of America', 45, 53, 'Notebook')\n\n# Notebooks USA\nnotebooks_india = generate_df('India', 45, 53, 'Notebook')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [12, 16]\n\n# Plotting USA notebooks\nplt.subplot(2, 1, 1)\nplt.pie(notebooks_usa['Count'], labels=notebooks_usa['Notebook'], \n        autopct='%1.1f%%', colors=colors1)\nplt.title('USA', fontsize=16)\nplt.axis('equal')\n\n# Plotting India notebooks\nplt.subplot(2, 1, 2)\nplt.pie(notebooks_india['Count'], labels=notebooks_india['Notebook'],\n       autopct='%1.1f%%', colors=colors1)\nplt.title('India', fontsize=16)\nplt.axis('equal')\nplt.show()","4906c29d":"# Big Data USA\nbig_data_usa = generate_df('United States of America', 224, 246, 'Big_Data_Analytics')\n\n# Notebooks USA\nbig_data_india = generate_df('India', 224, 246, 'Big_Data_Analytics')\n\n# Customizing the plot size\nplt.rcParams['figure.figsize'] = [20, 16]\n\n# Plotting USA notebooks\nplt.subplot(1, 2, 1)\nplt.barh(big_data_usa['Big_Data_Analytics'], big_data_usa['Count'], color=colors1)\nplt.title('USA', fontsize=16)\nannotate_bar_percentage(big_data_usa['Count'])\n\n# Plotting India notebooks\nplt.subplot(1, 2, 2)\nplt.barh(big_data_india['Big_Data_Analytics'], big_data_india['Count'], color=colors1)\nplt.title('India', fontsize=16)\nannotate_bar_percentage(big_data_india['Count'])\nplt.show()","ba0da9cf":"## Analyzing users on the different age groups of these countries","06d3e13b":"### Observations:\n* **`Python is the most used programming language in both countries`**\n* **`SQL has more users than R in both the graphs and it is used more in USA`**\n* **`Users of C\/C++ is quite high in India`**","f1dd5c67":"## Big Data and Analytics Products","35f09249":"### Observations:\n* **`On an average 13.8% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 14.4% of their time in data visualization`**\n* **`33.7% of the kagglers spent 10% of their time in USA`**\n* **`In India 35.9% of the kagglers also spent 10% of their time`**","51c507c3":"## Professional role of Kagglers","9bccccf4":"## Machine Learning Frameworks","a08bf7c7":"### Observations:\n* **`Scikit-Learn is the most used popular ML Framework in 5 years in both countries`**. Increase in Python users and well-maintained documentation of scikit-learn are responsible for its popularity.\n* **`User shares are nearly equal for all the libraries`**","8e61c164":"## Getting the Top 5 countries participated in the survey","4acc3ca8":"### Observations:\n* **`Matplotlib is the most used library in both countries and is used more in India`**\n* **`Seaborn is used more in India than USA`**\n* **`Plotly is used equally in both countries`**","5f2d5623":"### 6. Finding insights in the data and communicating with stakeholders","f4307f14":"### 5. Putting the model into production","1c8fa37a":"### Observations:\n* **`Kaggle Kernels are widely used in both countries`**\n* **`Google Colab notebooks gained popularity in less time`**\n* **`Indian kagglers used Google Colab and Floydhub more than American kagglers`**","aa13ef94":"## Type of data encountered at work\/school","379ce1de":"### Observations:\n\n#### 1. Data Scientist Graph\n* **`Data Scientists are more in 0-100k$  in India than USA`**\n* **`USA has a high frequency of Data Scientists in the range 100-200k$ than India`**\n\n#### 2. Data Engineer Graph\n* **`Data Engineers are earning more in USA than India`**\n* **`India has more Engineers in the range 0-50k$`**\n\n#### 3. Data Analyst Graph\n* **`USA has more number of Data Analysts but the salary scale is not good as compared to India`**\n* **`India has professionals that are earning more than 300k$ `**\n\n#### 4. Software Engineer Graph\n* **`India has more number of Software Engineers but lags behind USA in terms of salary`**\n* **`Indian Engineers are in the range 0-100k$, and the number is quite high in mid of this range`**","673efd01":"### Observations:\n* **`There are more number of student Kagglers in India than USA`** \n*I think [D J Patil](https:\/\/www.youtube.com\/watch?v=UuAJMzpoq5E) is the source of inspiration*\n* **`USA has large share of Data Scientists while India has more number of Software Engineer`**","a5afee9d":"## Popular IDEs in both countries","4fe4d0a4":"### Observations:\n* **`Coursera is most popular in both countries, because it offers specialization from prestigious universities`**\n* **Siraj Raval's [The School.AI](https:\/\/www.theschool.ai\/) is getting popularity in India than USA**\n* **`Kaggle Learn is more popular in India among kagglers than USA`**","25806275":"## Time spent by kagglers at various phases of Data Science Project","9febb015":"# In the below sections the data is compared on the basis of their use in last 5 years","3cd18ff6":"### Observations:\n* **`On an average 12.6% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 11.0% of their time in finding insights`**\n* **`27.1% of the kagglers spent 10% of their time in USA`**\n* **`In India 32.2% of the kagglers also spent 10% of their time`**","9209e291":"## Data Visualization Libraries","93051a38":"### 1. Gathering Data","f29520fd":"### Observations:\n* **`On an average 24.9% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 21.9% of their time in data cleaning`**\n* **`19.1% of the kagglers spent 20% of their time in USA`**\n* **`In India 22.9% of the kagglers also spent 20% of their time`**","f792f371":"### Observations:\n* **`AWS Redshift is used more in USA than India`**\n* **`Google Big Query is used widely in India than USA`**\n* **`Databricks is second most used in India and it comes third in USA although it is most used in  USA than India in last 5 years`**","3cef4cf3":"## Analyzing only Top 2 participating countries - India and USA","39ffc77c":"## Which programming language is used most often?","32244ffc":"### Observations:\n* **`On an average 7.5% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 10.1% of their time in model production`**\n* **`40.1% of the kagglers spent no time in USA in this phase`**\n* **`In India 34.8% of the kagglers spent 10% of their time`**","b31a2cb9":"### Observations:\n* **`On an average 16.9% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 17.2% of their time in gathering data`**\n* **`27.8% of the kagglers spent 10% of their time in USA`**\n* **`In India 31.8% of the kagglers also spent 10% of their time`**","06818c65":"### Observations:\n* **`United States has more number of female Kagglers than India`**\n* **`India outperforms in the term of male Kagglers`**","c0704602":"## Comparing the compensation provided in both countries\n### The trending roles as per the current industry demand:\n* Data Scientist\n* Data Engineer\n* Data Analyst\n* Software Engineer","28998011":"### Observations:\n* **`On an average 19.4% of time spent by a kaggler in USA`**\n* **`Indian kagglers spent 20.4% of their time in model building`**\n* **`21.1% of the kagglers spent 20% of their time in USA`**\n* **`In India 24.3% of the kagglers also spent 20% of their time`**","ab207d04":"## Hosted Notebooks","94e26fc5":"### Observations:\n* **`Numerical data has major share in both countries, it is slightly more in USA`**\n* **`India has less share of Genetic and Geospatial data than USA`**\n* **`USA and India both have approximately equal share of Sensor data`**. India will be the upcoming leader in IoT.","b2023204":"## MOOCs Popularity","773b89b4":"### 2. Cleaning Data","61d16510":"### Observations:\n* **`There are more number of Doctoral Kagglers in USA`**\n* **`USA lags behind in terms of Bachelors Degree Kagglers in India`**\n\n## *Truly Youth is the new emerging power of India*","37777960":"### Observations:\n* **`Jupyter is used in majority, in both coutries and the users are nearly equal`**\n* **`RStudio users are more in USA`**\n* **`Notepad++ is the second most used IDE in India`**\n* **`Users of MATLAB, Visual Studio and Visual Studio Code are nearly equal`**","9a4be307":"### 3. Data Visualization","11b5b19c":"### Observations:\n* **`Python is used more frequently in India than USA`**\n* **`R is the runner-up in frequent use`**\n* **`SQL is most frequently used than Java in USA on the other hand it is opposite in India`**","773ab2d8":"## Programming language used in both countries on a regular basis","c4e47874":"### 4. Model building \/ Model selection","6e65fca8":"## Degrees of USA and Indian Kagglers ","c03d1020":"### Observations:\n*  **`India has more share of young Kagglers in 18-21 and 22-24 segment`**\n* **`USA has even more number of Kaggler shares after 40 years of age than India`** \n* **`What surprises that US has even Kagglers of 80+, keep going`**\n\n### From the above plots we can conclude that the young generation is preparing to drive India through Data Science.","9798071a":"### Index\n1. [Getting the Top 5 countries participated in the survey](#Getting-the-Top-5-countries-participated-in-the-survey)\n1. [Analyzing only Top 2 participating countries - India and USA](#Analyzing-only-Top-2-participating-countries---India-and-USA)\n1. [Analyzing users on the different age groups of these countries](#Analyzing-users-on-the-different-age-groups-of-these-countries)\n1. [Degrees of USA and Indian Kagglers ](#Degrees-of-USA-and-Indian-Kagglers)\n1. [Professional role of Kagglers](#Professional-role-of-Kagglers)\n1. [Comparing the compensation provided in both countries](#Comparing-the-compensation-provided-in-both-countries)\n1. [Popular IDEs in both countries](#Popular-IDEs-in-both-countries)\n1. [Which programming language is used most often?](#Which-programming-language-is-used-most-often?)\n1. [Type of data encountered at work\/school](#Type-of-data-encountered-at-work\/school)\n1. [Time spent by kagglers at various phases of Data Science Project](#Time-spent-by-kagglers-at-various-phases-of-Data-Science-Project)\n     * [Gathering Data](#1.-Gathering-Data)\n     * [Cleaning Data](#2.-Cleaning-Data)\n     * [Data Visualization](#3.-Data-Visualization)\n     * [Model building](#4.-Model-building-\/-Model-selection)\n     * [Putting the model into production](#5.-Putting-the-model-into-production)\n     * [Finding insights](#6.-Finding-insights-in-the-data-and-communicating-with-stakeholders)\n1. [MOOCs Popularity](#MOOCs-Popularity)\n1. [Frameworks used in last 5 years](#In-the-below-sections-the-data-is-compared-on-the-basis-of-their-use-in-last-5-years)\n    * [Data Visualization Libraries](#Data-Visualization-Libraries)\n    * [Hosted Notebooks](#Hosted-Notebooks)\n    * [Big Data and Analytics](#Big-Data-and-Analytics-Products)"}}