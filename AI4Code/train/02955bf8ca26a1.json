{"cell_type":{"b9a240d4":"code","5108b7a2":"code","74ee12d6":"code","f58591b4":"code","edecf189":"code","1c47e5c7":"code","045a5945":"code","0163e615":"code","46b72c38":"code","2a7e5949":"code","f4a6a31c":"code","ab03b7e0":"code","01313c5f":"code","80e48677":"code","38de3741":"code","53101818":"code","e6472ec4":"code","d27319a4":"code","7ab2e9af":"code","d72b2320":"code","c57fe128":"code","b90a5a88":"code","25664c22":"code","d8814e9b":"code","c80d8b37":"code","56c7a192":"code","e06d2580":"code","9e0c87bb":"code","ba80552e":"code","598f319d":"code","994ce5a1":"code","aabb2e17":"code","914fcb08":"code","31cc85c0":"code","2f134f1a":"code","5a42ee25":"code","cd9b2f63":"markdown","4cc5e9c0":"markdown","2478ed21":"markdown","3858c42a":"markdown","6dc25412":"markdown","2879cbbb":"markdown","0b79c290":"markdown"},"source":{"b9a240d4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5108b7a2":"df = pd.read_csv('\/kaggle\/input\/ab-testing-case-study\/homepage_actions.csv')\ndf.head()","74ee12d6":"df.shape","f58591b4":"df.nunique()","edecf189":"df.groupby('group').nunique()","1c47e5c7":"df.action.value_counts()","045a5945":"df.query('action == \"click\"').id.nunique() \/ df.query('action == \"view\"').id.nunique()","0163e615":"df.timestamp.max(), df.timestamp.min()","46b72c38":"df = pd.read_csv('\/kaggle\/input\/ab-testing-case-study\/course_page_actions.csv')\ndf.head()","2a7e5949":"#get dataframe with all records from control group\ncontrol_df = df.query('group == \"control\"')\n\n#compute click through rate for control group\ncontrol_ctr = control_df.query('action == \"enroll\"').id.nunique() \/ control_df.query('action == \"view\"').id.nunique()\n\n#display click through rate\ncontrol_ctr","f4a6a31c":"#get dataframe with all records from experiment group\nexperiment_df = df.query('group == \"experiment\"')\n\n#compute click through rate for experiment group\nexperiment_ctr = experiment_df.query('action == \"enroll\"').id.nunique() \/ experiment_df.query('action == \"view\"').id.nunique()\n\n#display click through rate\nexperiment_ctr","ab03b7e0":"#compute the observed difference in click through rates\nobs_diff = experiment_ctr - control_ctr\n\n#display observed differnce\nobs_diff","01313c5f":"# Create a sampling distribution of the difference in proportions\n# with bootstrapping\ndiffs = []\nsize = df.shape[0]\nfor _ in range(10000):\n    b_samp = df.sample(size, replace=True)\n    control_df = b_samp.query('group == \"control\"')\n    experiment_df = b_samp.query('group == \"experiment\"')\n    control_ctr = control_df.query('action == \"enroll\"').id.nunique() \/ control_df.query('action == \"view\"').id.nunique()\n    experiment_ctr = experiment_df.query('action == \"enroll\"').id.nunique() \/ experiment_df.query('action == \"view\"').id.nunique()\n    diffs.append(experiment_ctr - control_ctr)","80e48677":"#convert to numpy array\ndiffs = np.array(diffs)\n\n#plot sampling distributions\nplt.hist(diffs);","38de3741":"# Simulate distribution under the null hypothesis\nnull_vals = np.random.normal(0, diffs.std(), diffs.size)\n\n# Plot the null distribution\nplt.hist(null_vals);","53101818":"# Plot observed statistic with the null distibution\nplt.hist(null_vals);\n\nplt.axvline(obs_diff,c='r');","e6472ec4":"# Compute p-value\n(null_vals > obs_diff).mean()","d27319a4":"df = pd.read_csv('\/kaggle\/input\/ab-testing-case-study\/classroom_actions.csv')\ndf.head()","7ab2e9af":"# The total_days represents the total amount of time\n# each student has spent in classroom.\n# get the average classroom time for control group\ncontrol_mean = df.query('group == \"control\"')[\"total_days\"].mean()\n\n# get the average classroom time for experiment group\nexperiment_mean = df.query('group == \"experiment\"')[\"total_days\"].mean()\n\n# display average classroom time for each group\ncontrol_mean, experiment_mean","d72b2320":"# compute observed difference in classroom time\nobs_diff = experiment_mean - control_mean\n\n# display observed difference\nobs_diff","c57fe128":"# create sampling distribution of difference in average classroom times\n# with boostrapping\ndiffs = []\nsize = df.shape[0]\nfor _ in range(10000):\n    b_samp = df.sample(size, replace=True)\n    control_mean = b_samp.query('group == \"control\"').total_days.mean()\n    experiment_mean = b_samp.query('group == \"experiment\"').total_days.mean()\n    diffs.append(experiment_mean-control_mean)","b90a5a88":"# convert to numpy array\ndiffs = np.array(diffs)","25664c22":"# plot sampling distribution\nplt.hist(diffs);","d8814e9b":"# simulate distribution under the null hypothesis\/\nnull_vals = np.random.normal(0,diffs.std(), diffs.size)","c80d8b37":"# plot null distribution\nplt.hist(null_vals);\n\n# plot line for observed statistic\nplt.axvline(obs_diff, c='red');","56c7a192":"# compute p value\n(null_vals > obs_diff).mean()","e06d2580":"df = pd.read_csv('\/kaggle\/input\/ab-testing-case-study\/classroom_actions.csv')\ndf.head()","9e0c87bb":"# Create dataframe with all control records\ncontrol_df = df.query('group == \"control\"')\n\n# Compute completion rate\ncontrol_cr =  control_df['completed'].mean() \n\n# Display completion rate\ncontrol_cr","ba80552e":"# Create dataframe with all experiment records\nexperiment_df = df.query('group==\"experiment\"')\n\n# Compute completion rate\nexperiment_ctr = experiment_df['completed'].mean()\n\n# Display completion rate\nexperiment_ctr","598f319d":"# Compute observed difference in completion rates\nobs_diff = experiment_ctr - control_cr\n\n# Display observed difference in completion rates\nobs_diff","994ce5a1":"# Create sampling distribution for difference in completion rates\n# with boostrapping\ndiffs = []\nsize = df.shape[0]\nfor _ in range(10000):\n    b_samp = df.sample(size, replace=True)\n    control_df = b_samp.query('group == \"control\"')\n    control_cr =  control_df['completed'].mean() \n    experiment_df = b_samp.query('group==\"experiment\"')\n    experiment_ctr = experiment_df['completed'].mean()\n    diffs.append(experiment_ctr - control_cr)","aabb2e17":"# convert to numpy array\ndiffs = np.array(diffs)","914fcb08":"# plot distribution\nplt.hist(diffs);","31cc85c0":"# create distribution under the null hypothesis\nnull_vals = np.random.normal(0, diffs.std(), size)","2f134f1a":"# plot null distribution\nplt.hist(diffs);\n\n# plot line for observed statistic\nplt.axvline(obs_diff, c='red');","5a42ee25":"# compute p value\n(null_vals > obs_diff).mean()","cd9b2f63":"### **Average classroom time**","4cc5e9c0":"# A\/B Testing Case Study\n\nThis notebook is a part of my learning journey which I've been documenting from Udacity's Data Scientist Nanodegree program, which helped me a lot to learn and excel advanced data science stuff such as PySpark. Thank you so much Udacity for providing such quality content. \n\n\nA\/B tests are used to test changes on a web page by running an experiment where a control group sees the old version, while the experiment group sees the new version. A metric is then chosen to measure the level of engagement from users in each group. These results are then used to judge whether one version is more effective than the other.\n\nIn this case study, I\u2019ll analyze A\/B test results for Audacity.\n\nHere's the customer funnel for typical new users on their site:\nView home page > Explore courses > View course overview page > Enroll in course > Complete course\n\nWe\u2019ll analyze test results for two changes they have in mind, and then make a recommendation on whether they should launch each change.","2478ed21":"# Experiment 2\n\nThe second change Audacity is A\/B testing is a more career focused description on a course overview page. They hope that this change may encourage more users to enroll and complete this course. In this experiment, we\u2019re going to analyze the following metrics:\n\n* Enrollment Rate: Click through rate for the Enroll button the course overview page\n* Average Reading Duration: Average number of seconds spent on the course overview page\n* Average Classroom Time: Average number of days spent in the classroom for students enrolled in the course\n* Completion Rate: Course completion rate for students enrolled in the course\n\nFirst, let's determine if the difference observed for each metric is statistically significant individually.","3858c42a":"## Difficulties in A\/B Testing\n* Novelty effect and change aversion\n* Sufficient traffic and conversions to have significant and repeatable results\n* Best metric choice for making the ultimate decision \n* Long enough run time for the experiment to account for changes in behavior based on time of day\/week or seasonal events.\n* Practical significance of a conversion rate (the cost of launching a new feature vs. the gain from the increase in conversion)\n* Consistency among test subjects in the control and experiment group (imbalance in the population represented in each group can lead to situations like Simpson's Paradox)","6dc25412":"### **Enrollment Rate**","2879cbbb":"# Experiment 1\n\nThe first change Audacity wants to try is on their homepage. They hope that this new, more engaging design will increase the number of users that explore their courses, that is, move on to the second stage of the funnel.","0b79c290":"## Completion Rate\n"}}