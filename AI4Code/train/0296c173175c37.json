{"cell_type":{"196e9a88":"code","325ba733":"code","75b76319":"code","fa9d2b2a":"code","08b56773":"code","186741e8":"code","9303c66b":"code","50d58c64":"code","8df0c127":"code","3890643d":"code","bc6fe48b":"code","19f99517":"code","4359edc7":"code","162fbd4c":"code","cec30fae":"code","23250f78":"code","59ca2cba":"code","c047f32d":"code","7d96c4a2":"code","9c92a73c":"code","067869bd":"code","5e1096dd":"code","c424f4e1":"code","de08b619":"code","08216dc9":"code","7fc55b88":"code","59af660a":"markdown","0e5fbdd0":"markdown","0eb32509":"markdown","02c224db":"markdown","5cb2c433":"markdown","2ddb981e":"markdown","79e6a7ba":"markdown","4218012d":"markdown","685b5f12":"markdown","db8ce5f9":"markdown","65bc7601":"markdown","968e7643":"markdown","913985de":"markdown","f68a74fa":"markdown","e4276dac":"markdown","afedab26":"markdown","f49777b5":"markdown","3cff462c":"markdown","dc9f5375":"markdown","732704de":"markdown","822578cc":"markdown","ed7c7f60":"markdown","6a251590":"markdown","c06e3cfd":"markdown","dd7bed13":"markdown","00b15ca9":"markdown","5d36d992":"markdown","a5a5cae6":"markdown","b1ab2dcd":"markdown","c985d357":"markdown","ac3d2c1f":"markdown","94de67ba":"markdown","da49fab3":"markdown","b64ed284":"markdown"},"source":{"196e9a88":"import pandas as pd\nimport numpy as np\n\nchemical1 = pd.read_csv('..\/input\/wine-quality\/winequalityN.csv')\nprint(chemical1.shape)\nchemical1.info()","325ba733":"sensory1 = pd.read_csv('..\/input\/wine-reviews\/winemag-data_first150k.csv',engine='python', error_bad_lines=False)\nprint(sensory1.shape)\nsensory1.info()","75b76319":"sensory2 = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv',engine='python', error_bad_lines=False)\nprint(sensory2.shape)\nsensory2.info()","fa9d2b2a":"import matplotlib.pyplot as pit\n\n\ntotal = len(chemical1.index)\nwhite_wine = chemical1[chemical1['type']=='white']\nprint(\"Percentage of white wine: \",(len(white_wine.index)\/total)*100,\"%\")\nred_wine = chemical1[chemical1['type']=='red']\nprint(\"Percentage of red wine: \",(len(red_wine.index)\/total)*100,\"%\")\n\npit.pie([len(white_wine.index),len(red_wine.index)], colors = ['#635e6b','#EF5350'], labels = ['white wine','red wine'],startangle=90)\npit.title('Types in the wine chemical datasets')\npit.show()","08b56773":"from prettytable import PrettyTable\n\nlabels = ['Quality 1','Quality 2','Quality 3','Quality 4','Quality 5','Quality 6','Quality 7','Quality 8','Quality 9','Quality 10']\nt = PrettyTable(['Quality', 'white wine', 'red wine'])\nvalues_white = []\nvalues_red = []\nfor i in range(1,11):\n  values_white.append(len(white_wine[white_wine['quality']==i]))\n  values_red.append(len(red_wine[red_wine['quality']==i]))\n  t.add_row([i,len(white_wine[white_wine['quality']==i]),len(red_wine[red_wine['quality']==i])])\n\nprint('Wines in each quality')\nprint(t)\n\ncolors_w = ['#fdf7ff','#f8f2ff','#f1ebfa','#e2ddec','#bfbac8','#a09ba9','#77727f','#635e6b','#433f4b','#221e29']\ncolors_r = ['#FFEBEE','#FFCDD2','#EF9A9A','#E57373','#EF5350','#F44336','#E53935','#D32F2F','#C62828','#B71C1C']\n\nfig,(ax1,ax2)= pit.subplots(2,1)\nfig.set_size_inches(10,9)\n#ax1.pie(values_white, colors = colors_w, labels=labels, startangle=90)\nax1.bar(labels, values_white)\nax1.set_title('Number of white wines in each quality')\nax1.legend()\n\n#ax2.pie(values_red, colors = colors_r, labels=labels, startangle=90)\nax2.bar(labels, values_red)\nax2.set_title('Number of white wines in each quality')\nax2.set_title('Number of red wines in each quality')\nax2.legend()\n\npit.show()\n","186741e8":"import seaborn as sns\n\nfeature_names = ['fixed acidity','volatile acidity', 'citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']\n\ndef find_MIN_MAX(df,q):\n  print(\"quality: \", q)\n  if(df.empty):\n    print('no datasets')\n    return\n  else:\n    t = PrettyTable(['Name', 'min', 'max'])\n    min_list=[]\n    max_list=[]\n    for x in range(1,12):\n      name = df.columns[x]\n      mini = df[df.columns[x]].min()\n      min_list.append(mini)\n      maxi = df[df.columns[x]].max()\n      max_list.append(maxi)\n      t.add_row([name,mini,maxi])\n    print(t)\n    barWidth = 0.3\n    pit.figure(figsize=(18, 5))\n    r1 = np.arange(len(min_list))\n    r2 = [x + barWidth for x in r1]\n    pit.bar(r1, min_list, width = barWidth, color = 'blue', edgecolor = 'black',label='Min')\n    pit.bar(r2, max_list, width = barWidth, color = 'cyan', edgecolor = 'black', label='Max')\n    pit.xticks([r + barWidth for r in range(len(min_list))], feature_names)\n    pit.ylabel('Values')\n    pit.legend()\n    pit.show()\n\n    \n\nprint('Red Wine Data:')\n\nfor i in range(1,11):\n   find_MIN_MAX(red_wine[red_wine['quality']==i],i)\n\n\n\nprint('White Wine Data:')\n\nfor i in range(1,11):\n  find_MIN_MAX(white_wine[white_wine['quality']==i],i)\n","9303c66b":"#for white wine\nold_min = white_wine['quality'].min()\nold_max = white_wine['quality'].max()\n\nnew_min = sensory1['points'].min()\nnew_max = sensory1['points'].max()\nprint(new_max)\n\nwhite_wine['points'] = (((white_wine['quality'] - old_min) * (new_max - new_min)) \/ (old_max - old_min)) + new_min\nwhite_wine.head()","50d58c64":"#for red wine\nold_min = red_wine['quality'].min()\nold_max = red_wine['quality'].max()\n\nred_wine['points'] = (((red_wine['quality'] - old_min) * (new_max - new_min)) \/ (old_max - old_min)) + new_min\nred_wine.head()","8df0c127":"uniq_variety1 = sensory1['variety'].unique()\nuniq_vriety2 = sensory2['variety'].unique()\ncommon_variety = list(set(uniq_variety1).intersection(uniq_vriety2))\nprint('Common and unique varieties in both csv are: ',common_variety)\nprint('Number of varieties :',len(common_variety))","3890643d":"white_varieties = ['Aligot\u00e9','Alvarinho', 'Auxerrois', 'Bacchus','Bual','Chardonnay','Chasselas','Chenin','Blanc','Colombard','Emerald','Riesling','Fum\u00e9','Blanc','Folle','Blanche','Furmint','Gew\u00fcrztraminer','Gr\u00fcner Veltliner','H\u00e1rslevel\u00fc','Jacqu\u00e8re','Kerner','Malvasia','Marsanne','Morio-Muscat','M\u00fcller-Thurgau','Muscadelle','Muscadet','Moscato','Palomino','Pedro Ximenez','Picolit','Pinot Blanc','Pinot Gris','Riesling','Rkatsiteli','Sacy','Savagnin','Sauvignon Blanc','Scheurebe','S\u00e9millon','Sercial','Seyval Blan','Silvaner','Trebbiano','Verdelho','Verdicchio','Vidal','Viognier','Viura','Welschriesling']\nred_varieties = ['Aglianico','Alicante','Baco','Noir','Barbera','Cabernet Franc','Cabernet Sauvignon','Carignan','Cinsault','de Chaunac','Dolcetto','Freisa','Gamay','Gamay Beaujolais','Grenache','Grignolino','Kadarka','Lambrusco','Malbec','Mar\u00e9chal Foch','Merlot','Mourv\u00e8dre','Nebbiolo','Petite Sirah','Pinot Noir','Pinot','Meunier','Pinotae','primitivo','Ruby Cabernet','Sangiovese','Syrah','Tempranillo,''Touriga Na\u00e7ional','Xynomavro','Zinfandel']\nprint('Number of white wine varieties considered: ', len(white_varieties))\nprint('Number of red wine varieties considered: ', len(red_varieties))","bc6fe48b":"white = pd.concat([sensory1[sensory1['variety'].isin(white_varieties)] ,sensory2[sensory2['variety'].isin(white_varieties)]],sort=False)\nwhite = white[np.isfinite(white['price'])]\nprint('shape of the white wine: ', white.shape)\nwhite.head()","19f99517":"\nred = pd.concat([sensory1[sensory1['variety'].isin(red_varieties)],sensory2[sensory2['variety'].isin(red_varieties)]],sort=False)\nred = red[np.isfinite(red['price'])]\nprint('shape of the red wine: ', red.shape)\nred.head()","4359edc7":"from sklearn.linear_model import LinearRegression,LogisticRegression,  BayesianRidge\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\nx = white[['points']]\ny = white[['price']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\nmodel_price_white = LinearRegression()\nmodel_price_white.fit(x_train,y_train)\ny_pred = model_price_white.predict(x_test)\nr =metrics.mean_squared_error(y_test,y_pred)\nprint(\"white wine::\")\nprint(\"MEAN SQUARE ERROR: \", r)\nprint(\"ROOT MEAN SQUARE ERROR: \",np.sqrt(r))\n\npit.scatter(x,y)\npit.xlabel('quality points')\npit.ylabel('price')\npit.title('Price determined from Quality points for white wine')\npit.show()\n","162fbd4c":"x = red[['points']]\ny = red[['price']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\nmodel_price_red = LinearRegression()\nmodel_price_red.fit(x_train,y_train)\ny_pred = model_price_red.predict(x_test)\nr =metrics.mean_squared_error(y_test,y_pred)\nprint(\"red wine::\")\nprint(\"MEAN SQUARE ERROR: \", r)\nprint(\"ROOT MEAN SQUARE ERROR: \",np.sqrt(r))\n\npit.scatter(x,y,color='r')\npit.xlabel('quality points')\npit.ylabel('price')\npit.title('Price determined from Quality points for red wine')\npit.show()","cec30fae":"white_wine['price']=model_price_white.predict(np.array(white_wine['points']).reshape(-1,1))\nred_wine['price']=model_price_red.predict(np.array(red_wine['points']).reshape(-1,1))","23250f78":"from sklearn.ensemble import RandomForestClassifier\nimport seaborn as sns\n\nx_white = white_wine[feature_names]\ny = white_wine['quality']\nx_white.fillna(0, inplace=True)\n","59ca2cba":"x_train,x_test,y_train,y_test = train_test_split(x_white,y,test_size=0.3)\n","c047f32d":"model = RandomForestClassifier(n_estimators=10)\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)","7d96c4a2":"print(\"PRECISION RECALL: \", metrics.recall_score(y_test,y_pred,average='weighted'))\n\nfeature_imp = pd.Series(model.feature_importances_,index = feature_names).sort_values(ascending=False)\nprint(feature_imp)\n\nsns.barplot(x=feature_imp,y=feature_imp.index)\npit.xlabel('Properties importance score')\npit.ylabel('Chemical Properties')\npit.title('Visualizing Important Features for white wine')\npit.legend()\npit.show()","9c92a73c":"x_red = red_wine[feature_names]\ny = red_wine['quality']\nx_red.fillna(0, inplace=True)\n\nx_train,x_test,y_train,y_test = train_test_split(x_red,y,test_size=0.3)\n\nmodel = RandomForestClassifier(n_estimators=10)\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\n\nprint(\"PRECISION RECALL: \", metrics.recall_score(y_test,y_pred,average='weighted'))\n\nfeature_imp = pd.Series(model.feature_importances_,index = feature_names).sort_values(ascending=False)\nprint(feature_imp)\n\nsns.barplot(x=feature_imp,y=feature_imp.index)\npit.xlabel('Properties importance score')\npit.ylabel('Chemical Properties')\npit.title('Visualizing Important Features for red wine')\npit.legend()\npit.show()","067869bd":"feature = ['alcohol','density','volatile acidity','free sulfur dioxide','total sulfur dioxide','sulphates']\nx = white_wine[feature]\ny = white_wine['quality']\nx.fillna(0, inplace=True)\n\nmodel_white = LogisticRegression() #RandomForestClassifier(n_estimators=10)\nmodel_white.fit(x,y)\n\nx = red_wine[feature]\ny = red_wine['quality']\nx.fillna(0, inplace=True)\n\nmodel_red = LogisticRegression() #RandomForestClassifier(n_estimators=10)\nmodel_red.fit(x,y)","5e1096dd":"white_wine['predicted quality'] = model_white.predict(x_white[feature])\nred_wine['predicted quality'] = model_red.predict(x_red[feature])","c424f4e1":"white_wine['predicted points'] = (((white_wine['predicted quality'] - old_min) * (new_max - new_min)) \/ (old_max - old_min)) + new_min\nwhite_wine['predicted price'] = model_price_white.predict(white_wine[['predicted points']])","de08b619":"red_wine['predicted points'] = (((red_wine['predicted quality'] - old_min) * (new_max - new_min)) \/ (old_max - old_min)) + new_min\nred_wine['predicted price'] = model_price_red.predict(red_wine[['predicted points']])","08216dc9":"total_price_white = sum(white_wine['price'])\ntotal_price_red = sum(red_wine['price'])\ntotal_price = total_price_white + total_price_red\n\nprint('Predicted price from sensory points')\nprint(\"Total price for white wine: \", \"{0:.2f}\".format(total_price_white))\nprint(\"Total price for red wine: \", \"{0:.2f}\".format(total_price_red))\nprint(\"Total price : \", \"{0:.2f}\".format(total_price))\n\n\npredicted_total_price_white = sum(white_wine['predicted price'])\npredicted_total_price_red = sum(red_wine['predicted price'])\npredicted_total_price = predicted_total_price_white + predicted_total_price_red\n\nprint('Predicted price from chemical analysis')\nprint(\"Total predicted price for white wine: \", \"{0:.2f}\".format(predicted_total_price_white))\nprint(\"Total predicted price for red wine: \", \"{0:.2f}\".format(predicted_total_price_red))\nprint(\"Total predicted price : \", \"{0:.2f}\".format(predicted_total_price))\n\nbarWidth = 0.2\npit.figure(figsize=(8, 6))\nr1 = np.arange(3)\nr2 = [x + barWidth for x in r1]\npit.bar(r1, [total_price_white,total_price_red,total_price], width = barWidth, color = 'blue', edgecolor = 'black',label='Predicted price from sensory points')\npit.bar(r2, [predicted_total_price_white,predicted_total_price_red,predicted_total_price], width = barWidth, color = 'cyan', edgecolor = 'black', label='Predicted price from chemical analysis')\npit.xticks([r + barWidth for r in range(3)], ['white wine','red wine','total'])\npit.ylabel('Price')\npit.title('Comparing the price calculated from sensory points and estmated quality points from chemical analysis')\npit.legend()\npit.show()","7fc55b88":"print('Profit gained for white wine: ',((predicted_total_price_white-total_price_white)\/total_price)*100,\"%\")\nprint('Loss gained for red wine: ',((total_price_red-predicted_total_price_red)\/total_price)*100,\"%\")\nprint('Total Profit gained: ',((predicted_total_price-total_price)\/total_price)*100,\"%\")","59af660a":"The number of wines in each quality point of both red and white wine are:","0e5fbdd0":"# References","0eb32509":"#Determining the price for the estimated quality","02c224db":"The wine reviews are seperated into two different csv files. ","5cb2c433":"Abstracting only those varieties: ( since some rows have no price and also price is an important attribute, we ignore those rows)","2ddb981e":"Taking the first five important features from both red wine and white wine random forest models, to create a logistic regression model for predicting the quality.","79e6a7ba":"This is for red wine:","4218012d":"Now we focus on the wine chemical datasets. We train a classification algorithm (Random Forest) with all the chemical properties against the sensory quality. The reason we take the sensory quality as the target is that the wine's taste greatly depends on tose properties. The model for the white wine:","685b5f12":"Now lets find the quality based on this model for the wine quality datasets.","db8ce5f9":"Now finding the unknown price of the wine in the wine quality dataset.","65bc7601":"# Estimation of quality based on chemical properties","968e7643":"Since the quality points mentioned here is in the scale of 0-10, we will change it into scale of 100.\n\nNewValue = (((OldValue - OldMin) * (NewMax - NewMin)) \/ (OldMax - OldMin)) + NewMin","913985de":"We split the dataset into train and test sets.\n    train sets: 70%\n    test sets: 30%","f68a74fa":"Training the model:","e4276dac":"**Datasets**\n\nWe have taken two datasets:\n\n1)  Wine Quality by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009\n\n\n[Wine chemical datasets]","afedab26":"This is for red wine:","f49777b5":"Sensory points are awarded by tasting the wine. This is not standard and will vary among many tasters. Hence estimating its quality from the sensory points is not accurate.\n\nOur method estimates the quality from the chemical properties, which even the computer can calculate.The price can be changed accourding to the winery, if they can train the computer with their own quality vs price datasets.","3cff462c":" First, we will divide the dataset for both white wine and red wine.","dc9f5375":"# Comparing the results","732704de":"The wine quality determines the price of the wine. The quality is measured from every aspects such as the vintage, variety, type, place , the grape used, and or the various chemical analysis. Each type of wine has its own composition and taste. \n\nThere are about five types of wine: Red wine, White wine, Rose wine, Sparkling wine and Fortified wine.Since there are various varieties and blends under each type, the quality estimation has become difficult. In this report, we want to derive a new method of estimating quality using chemical analysis.\n\n\n![alt text](https:\/\/i.pinimg.com\/originals\/f8\/69\/cc\/f869cc87b2246a31b480630de573aede.png)\n","822578cc":"# Conclusion","ed7c7f60":"\n\n1.   [Red and White Wine Analysis](https:\/\/https:\/\/rstudio-pubs-static.s3.amazonaws.com\/98369_7d87780667b74901af21ff93c1c1e1db.html), by Ian Xiao on June 27, 2015\n2.  [Correlating Wine Quality Indicators to Chemical and Sensory](https:\/\/www.mdpi.com\/1420-3049\/20\/5\/8453\/pdf\n)by Helene Hopfer, Jenny Nelson, Susan E. Ebeler and Hildegarde Heymann on Molecules 2015, 20\n3.[ How to Choose a Good Wine](https:\/\/www.marketviewliquor.com\/blog\/2018\/08\/how-to-choose-a-good-wine\/)\n\n**Datasets:**\n\n\n1.   [Wine Quality dataset](https:\/\/www.kaggle.com\/rajyellow46\/wine-quality) downloaded from kaggle provided by Raj Kumar\n2.  [Wine Review](https:\/\/www.kaggle.com\/zynicide\/wine-reviews) downloaded from kaggle provided by zackthout\n\n\n\n\n\n","6a251590":"# Predicting the price of the wine based on sensory points","c06e3cfd":"From the wine reviews data, we can create a model for price against points(sensory points). We use Linear Regression to create the model.\n\n","dd7bed13":"From the above, we can say that the wine makers can have a profit for white wine and loss for red wine, but has a total profit.","00b15ca9":"Finding the precission recall metrics and ploting the graph which gives the importance of each property.","5d36d992":"# ESTIMATION OF WINE QUALITY USING THE CHEMICAL ANALYSIS DATA","a5a5cae6":"Since we have many varieties of wine in each of the five categories and we have datasets only for white and red wine, we will consider only the varieties of white and red wines.","b1ab2dcd":"# Analysis of wine chemical dataset","c985d357":"**Introduction**","ac3d2c1f":"2) Wine Review: The data was scraped from WineEnthusiast during the week of June 15th, 2017.\n\n[Wine review datasets]","94de67ba":"Let's analysis this data by finding the minimum and maximum value of each chemical attribute for every quality points both in the case of red and white wine.","da49fab3":"# Analysis of wine reviews datasets","b64ed284":"We use the same model(Linear regression) that was trained with points and price for calculating the price again. Before we use the model, first lets convert the quality predicted from the scale of 0-10 to 0-100 scale. This is for white wine:"}}