{"cell_type":{"95c25b12":"code","f2bfb298":"code","5669ab36":"code","9244d831":"code","4e940be4":"code","df3bbc05":"code","b6920fc8":"code","179d961a":"code","a94cd3b6":"markdown","619b8c32":"markdown","8c25d017":"markdown","eb4eb374":"markdown","5e75be39":"markdown","a36f93a7":"markdown"},"source":{"95c25b12":"import numpy as np\nimport pandas as pd","f2bfb298":"from sklearn.datasets import load_iris\niris = load_iris()\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(iris['data'],iris['target'], random_state=304)","5669ab36":"def euc_distance(a, b):\n    lenth = len(a)\n    distance = 0\n    for i in range(lenth):\n        distance =distance + abs(a[i] - b[i])**2\n        \n    distance = distance**(1\/2)\n    \n    return distance\n","9244d831":"def knn(X_train, X_test, y_train, k):\n    \n    \n    from collections import Counter\n    \n    \n    \n    y_hat_test = []\n    for test_data in X_test:\n        distances = []\n\n        for train_data in X_train:\n            distance = euc_distance(test_data, train_data)\n            distances.append(distance)\n        \n        \n        df_distance = pd.DataFrame(data=distances, columns=['dis'])\n        \n        \n        df_k = df_distance.sort_values(by=['dis'], axis=0)[:k]#select k number of nearest points\n\n        \n        counter = Counter(y_train[df_k.index])\n\n        \n        prediction = counter.most_common()[0][0]\n        \n        \n        y_hat_test.append(prediction)\n        \n    return y_hat_test\n\n\n\n\n\n","4e940be4":"y_hat_test = knn(X_train, X_test, y_train, 1)\nacc=sum(y_hat_test == y_test)\/len(y_test) \n","df3bbc05":"print('when K=1 accuracy is ', acc)\nprint('test error rate is  ', 1-acc)","b6920fc8":"y_hat_test = knn(X_train, X_test, y_train, k=3)\nacc=sum(y_hat_test == y_test)\/len(y_test)","179d961a":"print('when K=3 accuracy is ', acc)\nprint('test error rate is  ', 1-acc)","a94cd3b6":"## Load iris dataset","619b8c32":"## Implemetation of KNN algorithm     ","8c25d017":"you can use Manhattan Distance or Mahalanobis Distance, here I used Euclidean Distance.[reference_here](https:\/\/towardsdatascience.com\/importance-of-distance-metrics-in-machine-learning-modelling-e51395ffe60d)","eb4eb374":"## accuracy for  iris dataset","5e75be39":"## Euclidean Distance","a36f93a7":"This notebook only for to learn implementation of KNN machine learing algorithm"}}