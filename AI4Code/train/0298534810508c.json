{"cell_type":{"adcc0a3a":"code","a673f374":"code","02948a97":"code","362f9d7e":"code","c7334b67":"code","df8b8983":"code","250ed77f":"markdown","9bec7a74":"markdown","e645e319":"markdown","3ebeb4bb":"markdown","156483e2":"markdown","d72b4a0e":"markdown"},"source":{"adcc0a3a":"import numpy as np # linear algebra\nimport pandas as pd\n# https:\/\/github.com\/SohierDane\/BigQuery_Helper\nfrom bq_helper import BigQueryHelper\n\nbq_assistant = BigQueryHelper(active_project= \"bigquery-public-data\", dataset_name= \"noaa_gsod\")","a673f374":"bq_assistant.list_tables()\n","02948a97":"QUERY = \"\"\"\n        SELECT year, AVG(data.temp) AS avg_temp, AVG(data.max) AS avg_max, AVG(data.min) AS avg_min\n        FROM `bigquery-public-data.noaa_gsod.gsod1929` AS data\n        GROUP BY year\n        \"\"\"\n\nbq_assistant.estimate_query_size(QUERY)","362f9d7e":"df = bq_assistant.query_to_pandas_safe(QUERY)\ndf.head()","c7334b67":"START_YEAR = 1930\nEND_YEAR = 2019\n\nfor year in range(START_YEAR, END_YEAR):\n   QUERY = \"\"\"\n        SELECT year, AVG(data.temp) AS avg_temp, AVG(data.max) AS avg_max, AVG(data.min) AS avg_min\n        FROM `bigquery-public-data.noaa_gsod.gsod{}` AS data\n        GROUP BY year\n        \"\"\".format(year)\n   df_temp = bq_assistant.query_to_pandas_safe(QUERY)\n   df = df.append(df_temp, ignore_index=True)\n   print (\"Added {}\".format(year))\ndf.head()","df8b8983":"df.to_csv(\"avg_temps_1929_2018.csv\", index=False)\ndf.to_csv(\"avg_temps_1929_2018_indexed.csv\")\ndf.to_json(\"avg_temps_1929_2018_indexed.json\")","250ed77f":"**Pull Data from Every Month in a Year and Give them an Average**\n\nI need to Query the database for the max temps and min temps for each month for every year designated. \n\nFirst we create the BigQueryHelper object.","9bec7a74":"Time for the looped query and to append each response into the original 1929 dataframe.","e645e319":"Run safe Query for data. \nUsing a local dataset, I found the data provided to be accurate. ","3ebeb4bb":"What I want is in those tables. \nI'm thinking of different ways to do joins to bring just the averages of max, min, and temp, into the an avg_max, avg_min, avg_temp item, situated by year (and maybe station, but if I go that route I'll have to also pull lat and long). \n\n**Attempt to Query Average for a year**\nStarting with 1929 to create the first pandas dataframe. I will then append the rest through a loop.","156483e2":"Export into a files. I included indexed and non-indexed versions, as I wasn't sure which would be easier to use with my chosen visualization language. ","d72b4a0e":"Now we need to build the Query to pull only what we need. year\/mo\/max\/min\/temp\nTake a quick look to see if we have the right names. "}}