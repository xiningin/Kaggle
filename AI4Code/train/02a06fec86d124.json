{"cell_type":{"8b63826f":"code","550efa42":"code","f3164b76":"code","3ed1ca42":"code","a38edbb9":"code","d0077e0c":"code","d97f2dd4":"code","227af186":"code","3016c008":"code","ff229682":"code","1447c4e3":"code","e11d76c9":"code","b5da5a40":"code","ac17f447":"code","5370bf20":"markdown","c66d65c4":"markdown","9ce28279":"markdown","d11c236c":"markdown","36830d9a":"markdown","7c931383":"markdown"},"source":{"8b63826f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","550efa42":"delivery_orders = pd.read_csv('\/kaggle\/input\/logistics-shopee-code-league\/delivery_orders_march.csv')","f3164b76":"hols = ['2020-03-08','2020-03-25','2020-03-30','2020-03-31']","3ed1ca42":"SLA = {\n    'manila_manila': 3,\n    'manila_luzon': 5,\n    'manila_visayas': 7,\n    'manila_mindanao': 7,\n    'luzon_manila':5,\n    'luzon_luzon':5,\n    'luzon_visayas': 7,\n    'luzon_mindanao': 7,\n    'visayas_manila':7,\n    'visayas_luzon':7,\n    'visayas_visayas': 7,\n    'visayas_mindanao': 7,\n    'mindanao_manila': 7,\n    'mindanao_luzon': 7,\n    'mindanao_visayas': 7,\n    'mindanao_mindanao': 7,\n}","a38edbb9":"delivery_orders['origin'] = [buyeraddress.split()[-1].lower() for buyeraddress in delivery_orders.buyeraddress]\ndelivery_orders['destination'] = [selleraddress.split()[-1].lower() for selleraddress in delivery_orders.selleraddress]\ndelivery_orders = delivery_orders.drop(columns=['buyeraddress', 'selleraddress'])","d0077e0c":"delivery_orders[['pick','1st_deliver_attempt','2nd_deliver_attempt']] += 8*60*60","d97f2dd4":"delivery_orders['pick'] = pd.to_datetime(delivery_orders['pick'], unit='s').dt.date\ndelivery_orders['1st_deliver_attempt'] = pd.to_datetime(delivery_orders['1st_deliver_attempt'], unit='s').dt.date\ndelivery_orders['2nd_deliver_attempt'] = pd.to_datetime(delivery_orders['2nd_deliver_attempt'], unit='s').dt.date","227af186":"delivery_orders.loc[delivery_orders['2nd_deliver_attempt'].isna(), '2nd_deliver_attempt'] = 0\ndelivery_orders['1st_deliver_attempt_gap'] = np.busday_count(delivery_orders['pick'], delivery_orders['1st_deliver_attempt'],weekmask='1111110',holidays=hols)\ndelivery_orders['2nd_deliver_attempt_gap'] = np.busday_count(delivery_orders['1st_deliver_attempt'], delivery_orders['2nd_deliver_attempt'],weekmask='1111110',holidays=hols)\ndelivery_orders.loc[delivery_orders['2nd_deliver_attempt_gap'] < 0, '2nd_deliver_attempt_gap'] = 0","3016c008":"delivery_orders['SLA'] = 0","ff229682":"for origin in delivery_orders.origin.unique():\n    for destination in delivery_orders.destination.unique():\n        mask = (delivery_orders['origin'] == origin) & (delivery_orders['destination'] == destination)\n        delivery_orders.loc[mask, 'SLA'] = SLA[origin+'_'+destination]","1447c4e3":"delivery_orders['is_late'] = 0","e11d76c9":"mask = (delivery_orders['1st_deliver_attempt_gap'] > delivery_orders['SLA']) | (delivery_orders['2nd_deliver_attempt_gap'] > 3)\ndelivery_orders.loc[mask, 'is_late'] = 1","b5da5a40":"submissions_df = delivery_orders[['orderid', 'is_late']].copy()","ac17f447":"submissions_df.to_csv('submission.csv', index=False)","5370bf20":"# Date time conversion","c66d65c4":"# Define holidays","9ce28279":"# Read CSV","d11c236c":"# Get origin & destination cities","36830d9a":"# Calculate delivery time","7c931383":"# Define SLA limits"}}