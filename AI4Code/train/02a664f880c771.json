{"cell_type":{"d7d108f2":"code","8350df13":"code","1b55bff2":"code","ce6a055e":"code","03d84716":"code","fe4d3efa":"code","a6703f6d":"code","bf04681a":"code","6045dc31":"code","92f13b85":"code","dce271ba":"code","8013494a":"code","1f1433aa":"code","1ccc9ed5":"code","5c3e50a0":"code","5e916ec2":"code","f9a8a01c":"code","a26163b9":"code","ba0351f1":"code","879d476f":"code","f8ec9a8d":"code","fba7531b":"code","d4b52318":"code","3ade473d":"code","4bbe9fc9":"code","6f2daefb":"code","92944023":"code","bad4b6fc":"code","cadb8098":"code","497a7591":"code","9bd683eb":"code","a0f058d6":"code","ead64fa7":"code","af7d050f":"code","8f2322f9":"code","0dc39f83":"code","6c16272e":"code","8dfe305d":"code","1d1ddf6c":"code","d577c930":"code","a4a2af2c":"code","6a82eff2":"code","075430c2":"code","10ab68ff":"code","7d0e03ea":"code","07732401":"code","071c1707":"code","d6b21add":"code","2b30510a":"code","a1d8957e":"markdown","48b3120e":"markdown","09e2dfd1":"markdown","e838bbc5":"markdown","4bcf9049":"markdown","16145281":"markdown","c2e66d7b":"markdown","4993ee73":"markdown","ee5bfd3a":"markdown","36674bc2":"markdown","e89c2218":"markdown","92a99dbc":"markdown","87a416a6":"markdown","145d0fc1":"markdown","7a69d26d":"markdown","94d34ff3":"markdown","febfa9d8":"markdown","9951b93e":"markdown","fd74336f":"markdown","6161a76c":"markdown","fd1d5aac":"markdown","6de2950b":"markdown"},"source":{"d7d108f2":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.utils import shuffle\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8350df13":"data = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")\n","1b55bff2":"data.info()\ndata[0:10]","ce6a055e":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"Amount\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of amount\")","03d84716":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V1\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V1\")","fe4d3efa":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V2\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V2\")","a6703f6d":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V3\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V3\")","bf04681a":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V4\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V4\")","6045dc31":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V5\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V5\")","92f13b85":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V6\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V6\")","dce271ba":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V7\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V7\")","8013494a":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V8\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V8\")","1f1433aa":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V9\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V9\")","1ccc9ed5":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V10\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V10\")","5c3e50a0":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V11\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V11\")","5e916ec2":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V12\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V12\")","f9a8a01c":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V3\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V13\")","a26163b9":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V14\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V14\")","ba0351f1":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V15\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V15\")","879d476f":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V16\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V16\")","f8ec9a8d":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V17\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V17\")","fba7531b":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V18\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V18\")","d4b52318":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V19\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V19\")","3ade473d":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V20\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V20\")","4bbe9fc9":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V21\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V21\")","6f2daefb":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V22\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V22\")","92944023":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V23\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V23\")","bad4b6fc":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V24\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V24\")","cadb8098":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V25\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V25\")","497a7591":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V26\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V26\")","9bd683eb":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V27\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V27\")","a0f058d6":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(data[\"V28\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of V28\")","ead64fa7":"\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nep = data['Class'].value_counts().reset_index()\nep.columns = [\n    'Class', \n    'percent'\n]\nep['percent'] \/= len(data)\n\nfig = px.pie(\n    ep, \n    names='Class', \n    values='percent', \n    title='Percentage of Class', \n    width=800,\n    height=500 \n)\n\nfig.show()","af7d050f":"#Top 10 credit card fraud losses by time\ntop_fraud = data.sort_values(by='Amount', ascending=False)[:10]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=top_fraud.Time, x=top_fraud.Amount)\nplt.xticks()\nplt.xlabel('Amount')\nplt.ylabel('Time')\nplt.title('Credit card fraud losses')\nplt.show()","8f2322f9":"cnt_pro = data['Class'].value_counts()\nplt.figure(figsize=(6,4))\nsns.barplot(cnt_pro.index, cnt_pro.values, alpha=0.8)\nplt.ylabel('Number of cp_type', fontsize=12)\nplt.xlabel('cp_type', fontsize=12)\nplt.xticks(rotation=80)\nplt.show();","0dc39f83":"fig, ax = plt.subplots(1, 2, figsize=(18,4))\n\namount_val = data['Amount'].values\ntime_val = data['Time'].values\n\nsns.distplot(amount_val, ax=ax[0], color='r')\nax[0].set_title('Distribution of Transaction Amount', fontsize=14)\nax[0].set_xlim([min(amount_val), max(amount_val)])\n\nsns.distplot(time_val, ax=ax[1], color='b')\nax[1].set_title('Distribution of Transaction Time', fontsize=14)\nax[1].set_xlim([min(time_val), max(time_val)])\n\n\n\nplt.show()","6c16272e":"print(\"Any missing sample in test set:\",data.isnull().values.any(), \"\\n\")","8dfe305d":"#Frequency distribution of classes\"\ntrain_outcome = pd.crosstab(index=data[\"Class\"],  # Make a crosstab\n                              columns=\"count\")      # Name the count column\n\ntrain_outcome","1d1ddf6c":"\ndisplay(data[[\"Time\",\"Amount\",]].groupby([\"Amount\"]).agg([\"max\",'mean',\"min\"]).style.background_gradient(cmap=\"ocean\"))","d577c930":"data = data[['Time','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10'\n               ,'V11','V12','V13','V14','V15','V16','V17','V18', 'V19','V20'\n               ,'V21','V22','V23','V24','V25','V26','V27','V28','Amount','Class']] #Subsetting the data\ncor = data.corr() #Calculate the correlation of the above variables\nsns.heatmap(cor, square = True) #Plot the correlation as heat map","a4a2af2c":"from sklearn.model_selection import train_test_split\nY = data['Class']\nX = data.drop(columns=['Class'])\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=9)","6a82eff2":"print('X train shape: ', X_train.shape)\nprint('Y train shape: ', Y_train.shape)\nprint('X test shape: ', X_test.shape)\nprint('Y test shape: ', Y_test.shape)","075430c2":"from sklearn.naive_bayes import GaussianNB\n\n# We define the model\nnbcla = GaussianNB()\n\n# We train model\nnbcla.fit(X_train, Y_train)\n\n# We predict target values\nY_predict3 = nbcla.predict(X_test)","10ab68ff":"test_acc_nbcla  = round(nbcla .fit(X_train,Y_train).score(X_test, Y_test)* 100, 2)\ntrain_acc_nbcla  = round(nbcla .fit(X_train, Y_train).score(X_train, Y_train)* 100, 2)","7d0e03ea":"# The confusion matrix\nnbcla_cm = confusion_matrix(Y_test, Y_predict3)\nf, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(nbcla_cm, annot=True, linewidth=0.7, linecolor='black', fmt='g', ax=ax, cmap=\"BuPu\")\nplt.title('Naive Bayes Classification Confusion Matrix')\nplt.xlabel('Y predict')\nplt.ylabel('Y test')\nplt.show()","07732401":"model1 = pd.DataFrame({\n    'Model': ['Naive Bayes'],\n    'Train Score': [train_acc_nbcla],\n    'Test Score': [test_acc_nbcla]\n})\nmodel1.sort_values(by='Test Score', ascending=False)","071c1707":"#NB\nfrom sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(Y_test, Y_predict3)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","d6b21add":"\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import plot_precision_recall_curve\nimport matplotlib.pyplot as plt\n\ndisp = plot_precision_recall_curve(nbcla,X_train, Y_train)\ndisp.ax_.set_title('2-class Precision-Recall curve: '\n                   'AP={0:0.2f}'.format(average_precision))","2b30510a":"from sklearn.metrics import roc_curve\n\n\n# Naive Bayes Classification\nY_predict3_proba = nbcla.predict_proba(X_test)\nY_predict3_proba = Y_predict3_proba[:, 1]\nfpr, tpr, thresholds = roc_curve(Y_test, Y_predict3_proba)\nplt.subplot(332)\nplt.plot([0,1],[0,1],'k--')\nplt.plot(fpr,tpr, label='ANN')\nplt.xlabel('fpr')\nplt.ylabel('tpr')\nplt.title('ROC Curve Naive Bayes')\nplt.grid(True)\nplt.subplots_adjust(top=2, bottom=0.08, left=0.10, right=1.4, hspace=0.45, wspace=0.45)\nplt.show()","a1d8957e":"## 4. Naive Bayes classification\n\nNaive Bayes is a classification technique based on Bayes\u2019 Theorem with an assumption of independence among predictors. In simple terms, it assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature.\n\nFor example, a fruit may be considered to be an apple if it is red, round, and about 3 inches in diameter. Even if these features depend on each other or upon the existence of the other features, all of these properties independently contribute to the probability that this fruit is an apple and that is why it is known as \u2018Naive\u2019.\n\nNaive Bayes model is easy to build and particularly useful for very large data sets. Along with simplicity, Naive Bayes is known to outperform even highly sophisticated classification methods.\n\nBayes theorem provides a way of calculating posterior probability P(c|x) from P(c), P(x) and P(x|c). Look at the equation below:\n\n![https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2015\/09\/Bayes_rule-300x172.png](https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2015\/09\/Bayes_rule-300x172.png)\n\nAbove,\n\nP(c|x) is the posterior probability of class (c, target) given predictor (x, attributes).\nP(c) is the prior probability of class.\nP(x|c) is the likelihood which is the probability of predictor given class.\nP(x) is the prior probability of predictor.\n\n\nHow Naive Bayes algorithm works?\nLet\u2019s understand it using an example. Below I have a training data set of weather and corresponding target variable \u2018Play\u2019 (suggesting possibilities of playing). Now, we need to classify whether players will play or not based on weather condition. Let\u2019s follow the below steps to perform it.\n\nStep 1: Convert the data set into a frequency table\n\nStep 2: Create Likelihood table by finding the probabilities like Overcast probability = 0.29 and probability of playing is 0.64.\n\n![https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2015\/08\/Bayes_41.png](https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2015\/08\/Bayes_41.png)\n\n\nStep 3: Now, use Naive Bayesian equation to calculate the posterior probability for each class. The class with the highest posterior probability is the outcome of prediction.\n\nProblem: Players will play if weather is sunny. Is this statement is correct?\n\nWe can solve it using above discussed method of posterior probability.\n\nP(Yes | Sunny) = P( Sunny | Yes) * P(Yes) \/ P (Sunny)\n\nHere we have P (Sunny |Yes) = 3\/9 = 0.33, P(Sunny) = 5\/14 = 0.36, P( Yes)= 9\/14 = 0.64\n\nNow, P (Yes | Sunny) = 0.33 * 0.64 \/ 0.36 = 0.60, which has higher probability.\n\nNaive Bayes uses a similar method to predict the probability of different class based on various attributes. This algorithm is mostly used in text classification and with problems having multiple classes.\n\n\n*** What are the Pros and Cons of Naive Bayes?**\n\n* Pros:\n\nIt is easy and fast to predict class of test data set. It also perform well in multi class prediction\nWhen assumption of independence holds, a Naive Bayes classifier performs better compare to other models like logistic regression and you need less training data.\nIt perform well in case of categorical input variables compared to numerical variable(s). For numerical variable, normal distribution is assumed (bell curve, which is a strong assumption).\n\n* Cons:\n\nIf categorical variable has a category (in test data set), which was not observed in training data set, then model will assign a 0 (zero) probability and will be unable to make a prediction. This is often known as \u201cZero Frequency\u201d. To solve this, we can use the smoothing technique. One of the simplest smoothing techniques is called Laplace estimation.\nOn the other side naive Bayes is also known as a bad estimator, so the probability outputs from predict_proba are not to be taken too seriously.\nAnother limitation of Naive Bayes is the assumption of independent predictors. In real life, it is almost impossible that we get a set of predictors which are completely independent.\n \nSource :https:\/\/www.analyticsvidhya.com\/","48b3120e":"# Precision and Recall\n\nPrecision is a description of random errors, a measure of statistical variability.\nIn simpler terms, given a set of data points from repeated measurements of the same quantity, the set can be said to be accurate if their average is close to the true value of the quantity being measured, while the set can be said to be precise if the values are close to each other. While Recall is defined as the fraction of relevant documents retrieved compared to the total number of relevant documents (true positives divided by true positives+false negatives).","09e2dfd1":"# SPLITING DATA","e838bbc5":"> ## Naive bayes classification\n> \n>Using Bayes theorem $\\left(P(X|Y)=\\frac{P(Y|X)P(X)}{P(Y)}\\right)$, we can find the probability of $X$ happening, given that $Y$ has occurred. Here, $Y$ is the evidence and $X$ is the hypothesis. ","4bcf9049":"<img src=\"https:\/\/www.stopmyforeclosureproblem.com\/wp-content\/uploads\/2020\/07\/cc-fraud.jpg\" width=\"500\">\n","16145281":"# VISUALIZING THE DATA","c2e66d7b":"# <center > Credit card fraud detection<\/center>","4993ee73":"Here we are comparing the credit card fraud amount per time. \nFirst group the time and get max,min and avg of credit card fraud amount ","ee5bfd3a":"Import library","36674bc2":"Read dataset","e89c2218":"# Accuracy\nis closeness of the measurements to a specific value. Accuracy has two definitions:\n1. More commonly, it is a description of systematic errors, a measure of statistical bias; low accuracy causes a difference between a result and a \"true\" value. ISO calls this trueness.\n1. Alternatively, ISO defines[[1](https:\/\/en.wikipedia.org\/wiki\/Accuracy_and_precision)] accuracy as describing a combination of both types of observational error above (random and systematic), so high accuracy requires both high precision and high trueness.","92a99dbc":"Data for training and testing\nTo select a set of training data that will be input in the Machine Learning algorithm, to ensure that the classification algorithm training can be generalized well to new data. For this study using a sample size of 20%, assumed it ideal ratio between training and testing","87a416a6":"# Check missing data","145d0fc1":"# ROC Curve\nis a graphical plot that illustrates the diagnostic ability of a binary classifier system as its discrimination threshold is varied.","7a69d26d":"# 1. What is Credit Card Fraud ?\nCredit card fraud is an inclusive term for fraud committed using a payment card, such as a credit card or debit card.[[1](https:\/\/en.wikipedia.org\/wiki\/Payment_Card_Industry_Data_Security_Standard)] The purpose may be to obtain goods or services, or to make payment to another account which is controlled by a criminal. According to [[2](https:\/\/www.lifelock.com\/learn-fraud-what-is-credit-card-fraud.html#:~:text=Credit%20card%20fraud%20happens%20when,it%20could%20happen%20to%20you.)] Credit card fraud happens when someone \u2014 a fraudster or a thief \u2014 uses your stolen credit card or the information from that card to make unauthorized purchases in your name or take out cash advances using your account.\n\n\n# 2. How does credit card fraud happen?\n\nHere are some common ways fraudsters can get their hands on your credit card number.\n\n* A thief digs through your trash, finds discarded receipts or credit card statements that include your account number, and uses that information to rack up fraudulent charges.\n* An unscrupulous waiter steals your card number and uses it to finance, say, a Caribbean vacation.\n* An identity thief lures you to a fraudulent website where you are tricked into providing your card number. The thief then uses your credit card information for fraudulent purchases.\n* You swipe your card at your local ATM or at the gas pump. Later, you notice fraudulent purchases on your statement. What happened? Someone might have installed a credit card skimmer to steal your account information. A credit card skimmer is a small device that thieves can install anywhere you swipe your card. Skimming has proved to be an effective way for thieves to steal credit card information.\n* Sometimes your credit card information is stolen through no fault of your own. Your credit card number might be exposed in a data breach that hits one of your favorite retailers. Thieves can then use this information to rack up online charges with your credit card account numbers.\n* Thieves often buy stolen credit card numbers on the dark web, that part of the web that\u2019s only accessed through special software. Credit card numbers are valuable to thieves, and they aren\u2019t shy about visiting illegal dark web markets to get them.\n* Someone in your home \u2014 a resident, guest, visitor, or service technician \u2014 might manage to access your credit cards. It\u2019s possible the person could use your credit card information fraudulently.\n\n\n# 3. 10 tips to help protect yourself from credit card fraud\n\nCriminals have seized upon the credit card industry as a place to make a quick buck. Fortunately, you can help minimize your risk of becoming a victim of credit card fraud by taking steps to protect your credit card information. Here are 10 tips to help you do just that.\n\n1. Promptly and carefully review every credit card statement. When your bill arrives, don\u2019t just make the payment. Review each transaction and, if any are unfamiliar, immediately call the card issuer. Even better, don\u2019t wait for the statement. Regularly review your transactions online on the card issuer's website.\n1. Protect your account information. Don\u2019t leave account information out in the open where others might see it.\n1. Destroy old statements. When you finish with the monthly statement, shred it before discarding it.\n1. Carry only the cards you need. If you have more than one credit card, do you need to have more than one when you\u2019re out and about or traveling? Reduce your risk, by leaving unneeded cards at home.\n1. Don\u2019t fall for phishing scams. You might receive emails in your inbox from what looks like your cable TV provider, internet service provider, or bank asking you to provide your credit card information, often to avoid losing your service. Don\u2019t fall for these scams. They\u2019re usually run by hackers looking to steal your information. Never send your credit card information to anyone who asks for it online. Call your service provider\u2019s customer service number instead to make sure a request is legitimate.\n1. Check your credit reports: You can order one free copy of each of your three credit reports -- maintained by Experian, Equifax and TransUnion \u2014 once a year from AnnualCreditReport.com. Once you order these reports, look carefully for accounts or loans in your name that you don\u2019t remember opening. New lines of credit may have been opened by thieves who have gained access to your personal information.\n1. Watch out for phone scams. Thieves don\u2019t rely solely on the internet to steal your credit card information. They might also turn to the phone. They might call you, saying that they are from your credit card provider. They\u2019ll then ask you to provide your credit card number so that they can \u201cupdate\u201d your account. Don\u2019t fall for this. Your bank will never ask you to provide your credit card information over the phone. \n1. Go paperless. Sign up for online statements from your credit card provider and cancel any monthly paper statements. This lessens the chance that thieves will be able to gain access to papers that include your account information.\n1. Report lost cards or suspected fraud quickly. The faster you report suspected fraudulent purchases, the better. Your credit card provider can put a hold on your card or cancel your account if you suspect fraud.\n1. Access your credit card account online. You can spot potential fraud more quickly if you sign up with your credit card provider\u2019s online portal. This way, you can check your credit card account daily, instead of waiting for your monthly statement to arrive.\n\nsource :https:\/\/www.lifelock.com\/learn-fraud-what-is-credit-card-fraud.html#:~:text=Credit%20card%20fraud%20happens%20when,it%20could%20happen%20to%20you.","94d34ff3":"# > Table of content:\n1. What is Credit Card Fraud ?\n1. How does credit card fraud happen?\n1. 10 tips to help protect yourself from credit card fraud\n1. Naive Bayes classification\n1. Practical example\n\n\n","febfa9d8":"# Plotting Heatmap\nHeatmap can be defined as a method of graphically representing numerical data where individual data points contained in the matrix are represented using different colors. \nThe colors in the heatmap can denote the frequency of an event, the performance of various metrics in the data set, and so on. Different color schemes are selected by varying businesses to present the data they want to be plotted on a heatmap [[3](https:\/\/vwo.com\/blog\/heatmap\/)].","9951b93e":"Some might quibble over our usage of missing. By \u201cmissing\u201d we simply mean NA (\u201cnot available\u201d) or \u201cnot present for whatever reason\u201d. Many data sets simply arrive with missing data, either because it exists and was not collected or it never existed.","fd74336f":"# Confusion Matrix \nis commonly used for a summarization of prediction results on a classification problem.The number of correct and incorrect predictions is summarized with counting values and each value broken down for each class. Each of them is the key to the confusion matrix. It shows the classification model is confused when it makes predictions, at this point in here it gives us insight not only into the errors being made by a classifier but also show the types of errors that are being made [[4](https:\/\/www.geeksforgeeks.org\/confusion-matrix-machine-learning\/)].","6161a76c":"Future Work :\nSampling to handling imbalanced data","fd1d5aac":"# 5.Practical example","6de2950b":"As you can see above, we obtain the heatmap of correlation among the variables. The color palette in the side represents the amount of correlation among the variables. The lighter shade represents a high correlation."}}