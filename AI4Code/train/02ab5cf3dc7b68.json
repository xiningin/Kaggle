{"cell_type":{"835fd53c":"code","c7b558be":"code","6f2fa9f6":"code","1fc942fc":"code","72ef45ca":"code","0424ff58":"code","2d504cae":"code","241d0efc":"code","fdc2f0ec":"code","3e4b0d5f":"code","a54ecaf6":"code","7af60dee":"code","2e10593f":"code","9ca8ff32":"code","3d9b03b0":"code","c479a2db":"code","3b888d5e":"code","e5853139":"code","13258dfc":"code","03d06fcc":"code","7dd84c2c":"code","22c9eeb2":"markdown","e97976ec":"markdown","e1e2b74a":"markdown","18d5f05a":"markdown","7b47ff42":"markdown","8d3a010e":"markdown","fcdf612d":"markdown","124c8c32":"markdown","0b5868a4":"markdown","60c73def":"markdown","5965a6b2":"markdown"},"source":{"835fd53c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7b558be":"df = pd.read_csv('\/kaggle\/input\/heart-attack-prediction\/data.csv')\ndf.head()","6f2fa9f6":"df.isnull().sum()","1fc942fc":"x = df.drop(columns=['slope','ca','thal','fbs'])\nprint(x)","72ef45ca":"y = df['fbs']\nprint(y)","0424ff58":"from sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder()  \nx= x.apply(label_encoder.fit_transform)\nprint(x)","2d504cae":"y= label_encoder.fit_transform(y)\nprint(y)","241d0efc":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","fdc2f0ec":"iplot([go.Histogram2dContour(x=df.head(500)['age'], \n                             y=df.head(500)['fbs'], \n                             contours=go.Contours(coloring='heatmap')),\n       go.Scatter(x=df.head(1000)['age'], y=df.head(1000)['fbs'], mode='markers')])","3e4b0d5f":"df = df.assign(n=0).groupby(['fbs', 'age'])['n'].count().reset_index()\ndf = df[df[\"age\"] < 100]\nv = df.pivot(index='age', columns='fbs', values='n').fillna(0).values.tolist()","a54ecaf6":"iplot([go.Surface(z=v)])","7af60dee":"import seaborn as sns\nimport matplotlib.pyplot as plt","2e10593f":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Heart attack prediction\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=df['fbs'], y=df['age'])\n\n# Add label for vertical axis\nplt.ylabel(\"age\")","9ca8ff32":"sns.lineplot(data=y)","3d9b03b0":"sns.scatterplot(data=df, x=\"age\", y=\"fbs\")","c479a2db":"df['fbs'].value_counts().head(10).plot.pie()","3b888d5e":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split","e5853139":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=4)","13258dfc":"nb = GaussianNB()\nnb.fit(x_train, y_train)","03d06fcc":"y_pred = nb.predict(x_test)\nprint(y_pred)\n\nprint(accuracy_score(y_test, y_pred))","7dd84c2c":"from sklearn import model_selection\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n# random forest model creation\nrfc = RandomForestClassifier()\nrfc.fit(x_train,y_train)\n# predictions\nrfc_predict = rfc.predict(x_test)\n\nprint(\"Accuracy:\",accuracy_score(y_test, rfc_predict))","22c9eeb2":"Line plot using Seaborn","e97976ec":"Predictions using Naive-Bayes Classifier","e1e2b74a":"Predictions using Randomforest","18d5f05a":"Pie charts","7b47ff42":"Scatterplot using seaborn","8d3a010e":"Bar chart using Seaborn","fcdf612d":" **Surface contours using plotly**","124c8c32":"We are going to find the null values presented in the datasets.","0b5868a4":"Label Encoding is needed to convert the string value to integer.","60c73def":"We are dropping three columns, which is necessary to our dataset.","5965a6b2":"3D plots using plotly"}}