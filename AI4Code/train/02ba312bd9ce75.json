{"cell_type":{"3e7de472":"code","d6a46967":"code","17210178":"code","a0e83dec":"code","6668c90b":"code","744e20a2":"code","45f12b0a":"code","96089fe6":"code","1ba2b2a4":"code","a223fee3":"code","68069ab5":"markdown","f7d2a92c":"markdown"},"source":{"3e7de472":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d6a46967":"train = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/train.csv\")\nweather_train = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/weather_train.csv\")\nmeta = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/building_metadata.csv\")","17210178":"train = train.merge(meta, left_on=\"building_id\", right_on=\"building_id\", how=\"left\")","a0e83dec":"train = train.merge(weather_train, left_on=[\"site_id\", \"timestamp\"], right_on=[\"site_id\", \"timestamp\"])","6668c90b":"train[\"timestamp\"] = pd.to_datetime(train[\"timestamp\"])\ntrain[\"meter\"] = train[\"meter\"].map({0: \"electricity\", 1: \"chilledwater\", 2: \"steam\", 3: \"hotwater\"})\ntrain[\"meter\"] = train[\"meter\"].astype(\"category\")","744e20a2":"train.head()","45f12b0a":"meta[\"primary_use\"].value_counts().sort_values().plot.barh()","96089fe6":"import matplotlib.pyplot as plt\nfrom IPython.display import Markdown, display","1ba2b2a4":"# define plot func\ndef plot_train_primary_use(train_primary_use):\n    n_building = len(train_primary_use[\"building_id\"].unique())\n    n_col = 4\n    n_row = int(np.ceil(n_building \/ n_col))\n    f, ax = plt.subplots(n_row, n_col, squeeze=False, figsize=(20, 5 * n_row))\n\n    color_dict = {\"electricity\": \"y\", \"chilledwater\": \"b\", \"steam\": \"#800000\", \"hotwater\": \"#ff5500\"}\n\n    for i, building_id in enumerate(train_primary_use[\"building_id\"].unique()):\n        df_build = train_primary_use.query(\"building_id == @building_id\").reset_index()\n        df_build_piv = df_build.pivot(index=\"timestamp\", columns=\"meter\", values=\"meter_reading\")\n        df_build_piv.plot(ax=ax[i \/\/ n_col, i % n_col], color=[color_dict.get(x, '#000000') for x in df_build_piv.columns], alpha=0.7)\n        ax[i \/\/ n_col, i % n_col].set_title(\"building id: {}\".format(building_id))\n    plt.tight_layout()\n    plt.show()","a223fee3":"for primary_use in train[\"primary_use\"].unique():\n    display(Markdown(\"## {}\".format(primary_use)))\n    train_primary_use = train.query(\"primary_use == @primary_use\")\n    plot_train_primary_use(train_primary_use)","68069ab5":"## Primary use","f7d2a92c":"## TL; DR\n* Since the target variable is time series data, it's important to visualize as chart plot.\n* It's can be assumed that all the target variables has periodicity (daily, weekly, seasonally), but there must be more or less differences because each building has each operation's rule. The purpose of this notebook is to reveal the difference by plotting each building's target variable.\n* According to this [EDA](https:\/\/www.kaggle.com\/jaseziv83\/a-deep-dive-eda-into-all-variables), the difference mentioned above can be considered that it mainly comes from primary usage, so the charts are categorized by it."}}