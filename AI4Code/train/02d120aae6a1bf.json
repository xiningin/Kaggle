{"cell_type":{"e5333600":"code","2fe3e243":"code","0628ec8d":"code","2ed61e6f":"code","9d573108":"code","7a41f252":"code","aa9d3f17":"code","847eaa00":"code","1a727477":"code","a3f7fc60":"code","9a2dd69a":"code","48e5cb7b":"code","185f8a0b":"code","d7d72158":"code","0402e72a":"markdown","eea57f21":"markdown","8cf929e1":"markdown","aa857e6f":"markdown","7e624507":"markdown"},"source":{"e5333600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2fe3e243":"!pip install openpyxl","0628ec8d":"df = pd.read_excel('..\/input\/journeys-on-public-transport-less-than-20km\/jonery59.xlsx')\n\ndf.head()","2ed61e6f":"df.isnull().sum()","9d573108":"#Code by Edward Crookenden https:\/\/www.kaggle.com\/edwardcrookenden\/eda-and-lgbm-baseline-feature-imp\n\nsns.set_theme()\nfig, ax =plt.subplots(1,2, figsize=(14, 4))\nsns.distplot(df['Year'], ax=ax[0]).set_title('Year Distribution')\nsns.distplot(df['Percentage'], ax=ax[1]).set_title('Percentage Distribution')\nfig.show()","7a41f252":"#Code by Ilham Firlham Putra https:\/\/www.kaggle.com\/ilhamfp31\/baseline-start-here\n\nplt.title('Percentage')\nsns.countplot(df['Percentage'])\nplt.xticks(rotation= 90)\nplt.show()","aa9d3f17":"fig = px.bar(df, \n             x='Year', y='Percentage', color_discrete_sequence=['#D63230'],\n             title='Percentage of Km by Years', text='Year')\nfig.show()","847eaa00":"px.histogram(df, x='Year', color='Percentage')","1a727477":"fig = px.line(df, x=\"Year\", y=\"Percentage\", \n              title=\"Percentage of Km by Years\")\nfig.show()","a3f7fc60":"df[\"Year\"].plot.hist()\nplt.show()","9a2dd69a":"#Code by Edward Crookenden https:\/\/www.kaggle.com\/edwardcrookenden\/eda-and-lgbm-baseline-feature-imp\n\nfrom lightgbm import LGBMRegressor\nfrom sklearn.model_selection import train_test_split\n\n\ndf.drop(['Year'], axis=1, inplace=True)#It\nX = df.drop(['Percentage'], axis=1)\ny = df[\"Percentage\"]\ndel df\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.01, random_state=42, shuffle=False)\ndel X\ndel y","48e5cb7b":"#Code by Edward Crookenden https:\/\/www.kaggle.com\/edwardcrookenden\/eda-and-lgbm-baseline-feature-imp\n\nmodel = LGBMRegressor(\n        objective=\"regression\",\n        metric=\"rmse\",\n        boosting_type=\"gbdt\",\n        n_estimators=1400,\n        num_leaves=100,\n        max_depth=10,\n        learning_rate=0.05,\n        subsample=0.8\n)\n\nmodel.fit(X_train, y_train,\n          eval_set=[(X_valid, y_valid)],\n          verbose=50,\n          eval_metric='rmse',\n          early_stopping_rounds=20)","185f8a0b":"#Code by Edward Crookenden https:\/\/www.kaggle.com\/edwardcrookenden\/eda-and-lgbm-baseline-feature-imp\n\ndef plotImp(model, X , num = 20, fig_size = (40, 20)):\n    feature_imp = pd.DataFrame({'Value':model.feature_importances_,'Feature':X.columns})\n    plt.figure(figsize=fig_size)\n    sns.set(font_scale = 5)\n    sns.barplot(x=\"Value\", y=\"Feature\", data=feature_imp.sort_values(by=\"Value\", \n                                                        ascending=False)[0:num])\n    plt.title('LightGBM Features')\n    plt.tight_layout()\n    plt.savefig('lgbm_importances-01.png')\n    plt.show()","d7d72158":"#plotImp(model, X_valid)","0402e72a":"I just have 2 columns. Therefore that Feature Importance snippet doesn't make any sense. Save it for the next time.","eea57f21":"#I used to Not to solve those problems while I was in High School. Don't expect that I'll solve it now.","8cf929e1":"#Zero kilometers. End of my Journey due to the error below. Leave your car at the Garage and take an Uber. \n\nValueError: min() arg is an empty sequence\n<Figure size 2880x1440 with 0 Axes>","aa857e6f":"![](https:\/\/www.destatis.de\/EN\/Press\/Graphics\/Labour-Market\/2021\/_Static\/20210616-infographic-commuters-car-2017.png?__blob=poster)destatis.de","7e624507":"#That chart above is good just to know the years interval. "}}