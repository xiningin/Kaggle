{"cell_type":{"00656bd4":"code","f9d9fa5f":"code","a2fbaea0":"code","97ed81a6":"code","85abd11e":"code","2c70f3a4":"code","9a4301c0":"code","09afaa92":"code","ee7a6a73":"code","65b63710":"code","ee63db90":"code","610d862a":"code","7d826943":"code","5751261f":"code","3746fd54":"code","c4ddc5e9":"code","45817866":"code","517b24a0":"code","b160de0a":"code","5328d7a9":"code","d243538b":"code","7d50a65a":"code","7cf1f86b":"code","6bea76fe":"code","7eb15c69":"code","95565562":"code","0fbcefd1":"code","663f7243":"code","1febfcb4":"code","9a83d467":"code","af292a06":"code","eeeeec2a":"code","b59ab2b2":"code","9dbddc64":"code","54c32ecc":"code","ddf38760":"code","cd33daa7":"code","ec60202b":"code","055999e1":"code","3771b276":"code","2bc99cfb":"code","bd546386":"code","bb5b4035":"code","344912c5":"code","4abb6580":"code","799237d8":"code","77df7562":"code","3bc24c15":"markdown","9e149d84":"markdown","f217e4b2":"markdown","f50e987c":"markdown","c99f187a":"markdown","c1abd9f0":"markdown","5a27cc0f":"markdown","0c8fb10d":"markdown","7138faa5":"markdown","77cb2e69":"markdown","b5907f76":"markdown","8b63ba2e":"markdown","b648ed35":"markdown","f38e6a09":"markdown","cf202b16":"markdown","68da26a2":"markdown"},"source":{"00656bd4":"#importing basic libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","f9d9fa5f":"train= pd.read_csv('\/kaggle\/input\/bigmart-sales-data\/Train.csv')\ntest = pd.read_csv('\/kaggle\/input\/bigmart-sales-data\/Test.csv')","a2fbaea0":"train.head()","97ed81a6":"train.info()","85abd11e":"#most of the items has non - zero values or non null\ntrain.describe()","2c70f3a4":"train.columns","9a4301c0":"Uniqueid =len(set(train.Item_Identifier))  # set removes dupplicate values","09afaa92":"Totalid =train.shape[0]\nDuplicate = Totalid - Uniqueid\nprint(\"no . of duplicate id is \",Duplicate)","ee7a6a73":"#histogram of Item_outlet_sales vs Number of sales\nplt.figure(figsize= (13,6))\nsns.distplot(train.Item_Outlet_Sales,bins = 25)\nplt.ticklabel_format(style = 'plain',axis = 'x',scilimits=(0,1))\nplt.xlabel('Item_Outletsales')\nplt.ylabel('number of sales')\nplt.show()","65b63710":"# so more the item outlests the sale is decreasing\n#skewness - > distortion in data\nprint('the skewness is',train.Item_Outlet_Sales.skew())","ee63db90":"nm_features =train.select_dtypes(include=[np.number])\nnm_features.dtypes","610d862a":"#relation between numerical predictors and target variable\ncorrelation = nm_features.corr()\ncorrelation","7d826943":"correlation['Item_Outlet_Sales'].sort_values","5751261f":"sns.countplot(train.Item_Fat_Content)\n","3746fd54":"#for Item_Type\nsns.countplot(train.Item_Type)\nplt.xticks(rotation=90)","c4ddc5e9":"#for Outlet_Size\nsns.countplot(train.Outlet_Size)","45817866":"sns.countplot(train.Outlet_Location_Type)","517b24a0":"sns.countplot(train.Outlet_Type)\nplt.xticks(rotation=90)","b160de0a":"#Item_Weight vs Item_Sales\nplt.figure(figsize=(12,8))\nplt.xlabel(\"Item weight\")\nplt.ylabel('Item sales')\nplt.title('Item weight vs Item sales')\nplt.plot(train.Item_Weight,train.Item_Outlet_Sales,'.',alpha = 0.4)#alpha = size of dots","5328d7a9":"plt.xlabel('Item_Visibility')\nplt.ylabel('Item outlet sales')\nplt.title('Item visibility vs Item outlet sales')\nplt.plot(train.Item_Visibility,train.Item_Outlet_Sales,'.',alpha= 0.4)","d243538b":"#Item_Fat_Content vs Item_Outlet_Sales\n#Create a spreadsheet-style pivot table as a DataFrame. pivot_table\n\nItem_Fat_Content_pivot=train.pivot_table(index ='Item_Fat_Content',values ='Item_Outlet_Sales',aggfunc=np.median)\nItem_Fat_Content_pivot.plot(kind = 'bar',color = 'blue',figsize=(12,7))\nplt.xlabel('Item_Fat_Content')\nplt.ylabel('Item_Outlet_Sales')\nplt.show()","7d50a65a":"#impact of Outlet_identifier on Item_outlet_sales\nOutlet_Identifier_pivot = train.pivot_table(index ='Outlet_Identifier',values = 'Item_Outlet_Sales',aggfunc=np.median)\nOutlet_Identifier_pivot.plot(kind ='bar',color = 'red')\nplt.xlabel('Outlet_identifier')\nplt.ylabel('Item_outlet_sales')\nplt.show()","7cf1f86b":"train.pivot_table(values='Outlet_Type',columns = 'Outlet_Identifier',aggfunc=lambda x:x.mode())","6bea76fe":"train.pivot_table(values='Outlet_Type',columns = 'Outlet_Size',aggfunc=lambda x:x.mode())","7eb15c69":"Outlet_size_pivot = train.pivot_table(index='Outlet_Size',values='Item_Outlet_Sales',aggfunc=np.median)\nOutlet_size_pivot.plot(kind = 'bar',color = 'red', )\nplt.xlabel('Outlet size')\nplt.ylabel('Item outlet sales')\nplt.show()","95565562":"#outlet_type vs item outlet sales\n","0fbcefd1":"Outlet_type_pivot= train.pivot_table(index ='Outlet_Type',values='Item_Outlet_Sales',aggfunc = np.median)\nOutlet_type_pivot.plot(kind = 'bar', color = 'red')\nplt.xlabel('Outlet_type')\nplt.ylabel('Item_Outlet_Sales')\nplt.show()","663f7243":"#outlet location type vs item outlet saled\noutlet_location_type_pivot = train.pivot_table(index='Outlet_Location_Type',values = 'Item_Outlet_Sales',aggfunc=np.median)\noutlet_location_type_pivot.plot(kind= 'bar',color = 'red')\nplt.xlabel('Outlet location')\nplt.ylabel('item outlet sales')\nplt.show()","1febfcb4":"#joining the data\ntrain['source']= 'train'\ntest['source'] ='test'\ndata = pd.concat([train,test],ignore_index=True,sort=True)\n","9a83d467":"data.shape","af292a06":"data.info","eeeeec2a":"data.info()\n","b59ab2b2":"#checking the percentage of non null values\ndata.isnull().sum()","9dbddc64":"#calculating mean value for replacing null values in null value\navg_mean=data.pivot_table(values = 'Item_Weight',index ='Item_Identifier')\nprint(avg_mean)","54c32ecc":"def replace_null(cols):\n    weight = cols[0]\n    identifier =cols[1]\n    if pd.isnull(weight):\n        return  avg_mean['Item_Weight'][avg_mean.index==identifier]\n    else:\n        return weight\nprint(\"original number of null values\",sum(data['Item_Weight'].isnull()))\n\ndata['Item_Weight'] =data[['Item_Weight','Item_Identifier']].apply(replace_null,axis=1).astype(float)\nprint('final number of null values',sum(data['Item_Identifier'].isnull()))","ddf38760":"from scipy.stats import mode  # scipy = more mathematical functions than numpy\noutlet_size_mode  = data.pivot_table(values='Outlet_Size',columns='Outlet_Type',aggfunc =lambda x:x.mode())\noutlet_size_mode","cd33daa7":"#to calculate the average value\nvisibility_item_avg = data.pivot_table(values='Item_Visibility', index='Item_Identifier')","ec60202b":"#replacing null values in outlet_size\ndef replace_outlet(cols):\n    size=cols[0]\n    Type = cols[1]\n    if pd.isnull(size):\n        return outlet_size_mode.loc['Outlet_Size'][outlet_size_mode.columns==Type][0]\n    else:\n        return size\nprint(\"original number of null values\",sum(data['Outlet_Size'].isnull()))\ndata['Outlet_Size']=data[['Outlet_Size','Outlet_Type']].apply(replace_outlet,axis =1)\nprint('final data with null vakues',sum(data['Outlet_Size'].isnull()))","055999e1":"def replace_visibility(cols):\n    visibility = cols[0]\n    item = cols[1]\n    if visibility ==0:\n        return visibility_item_avg['Item_Visibility'][visibility_item_avg.index==item]\n    else:\n        return visibility\nprint('original numbers with 0 as values',sum(data['Item_Visibility']==0))\ndata['Item_Visibility']=data[['Item_Visibility','Item_Identifier']].apply(replace_visibility,axis=1).astype(float)\nprint('final number with 0 as its value',sum(data['Item_Visibility']==0))","3771b276":"data['Outlet_years']=2013-data['Outlet_Establishment_Year']\ndata['Outlet_years'].describe()","2bc99cfb":"data['ItemType_Combined']= data['Item_Identifier'].apply(lambda x:x[0:2])\ndata['ItemType_Combined']= data['ItemType_Combined'].map({'FD':'Food','NC':'Non-Consumable','DR':'Drinks'})\ndata['ItemType_Combined'].value_counts()","bd546386":"#there was some typos in item_fat_content fixing it\ndata['Item_Fat_Content']=data['Item_Fat_Content'].replace({'LF':'Low fat','reg':'Regular','low fat':'Low fat'})","bb5b4035":"data.loc[data['ItemType_Combined']==\"Non-Consumable\",'Item_Fat_Content']='Non-Edible'\n","344912c5":"func = lambda x:x['Item_Visibility']\/visibility_item_avg['Item_Visibility'][visibility_item_avg.index==x['Item_Identifier']][0]\ndata['Item_Visibility_MeanRatio']= data.apply(func,axis=1).astype(float)\ndata['Item_Visibility_MeanRatio'].describe()","4abb6580":"from sklearn.preprocessing  import LabelEncoder\nLe = LabelEncoder()\n#for outlet\ndata['outlet'] =Le.fit_transform(data['Outlet_Identifier'])\nvar_mod = ['Item_Fat_Content','Outlet_Location_Type','Outlet_Size','ItemType_Combined','Outlet_Type','outlet']\nfor i in var_mod:\n    data[i]=Le.fit_transform(data[i])\n","799237d8":"data = pd.get_dummies(data,columns=['Item_Fat_Content','Outlet_Location_Type','Outlet_Size','ItemType_Combined','Outlet_Type','outlet'])\ndata.dtypes","77df7562":"data.drop(['Item_Type','Outlet_Establishment_Year'],axis =1,inplace = True)\n#dividing into trains and test\ntrain= data.loc[data['source']=='train']\ntest = data.loc[data['source']=='test']\ntrain.drop(['source'],axis =1,inplace=True)\ntest.drop(['source'],axis =1,inplace = True)","3bc24c15":"impact of outlet size on item outlet sales\n","9e149d84":"the data is very old from 2013 ","f217e4b2":"creating a variable for visibility","f50e987c":"so our target variable is skewwed to the right\n","c99f187a":"item_type has 14 categories which is a lot to process individually \nso combining it","c1abd9f0":"it shows that supermarket type 3 has highest outlety types","5a27cc0f":"we can see thet outlet 27  had the highest sales  except 2 all others had median sales\n","0c8fb10d":"for cleaning the data we have to merge the data clean it then again we can split the data \ninstead of doing everything twice","7138faa5":"after this lets see which of pur features are numeric\n","77cb2e69":"previously we saw that item_visibility has minimum value of 0 which implies that is hidden which doesn't make sense replacing those values with mean values\n","b5907f76":"we all know that scikit only works with numerical values so converting using\nLabelEncoder()","8b63ba2e":"we have done something called as One-Hot-Coding -> creating a dummy variables one for each type of type variable","b648ed35":"replacing null values of Outlet_size with mode  #mode used when there is more frequent values","f38e6a09":"so medium size supermarkets had the highest sales compared to high ones and the small ones\n","cf202b16":"supermarket of type 2 location had the highest outlet sales","68da26a2":"but again there are some non consumable product also so creating a new column "}}