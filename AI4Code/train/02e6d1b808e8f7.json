{"cell_type":{"83c06562":"code","1f07088a":"code","e4b738c1":"code","14c2fbf9":"code","629082ba":"code","954de5a7":"code","0d9b2a3e":"code","226ef6ed":"code","0aa17f64":"code","686d44e1":"code","6fd82123":"code","827deb6b":"code","a93788ad":"code","46378f3a":"code","68f13dd4":"code","a45f6ba4":"code","964234a2":"code","e2faa21d":"code","3b0f5abd":"code","cbf6ce21":"code","8c852965":"code","c1aea5fd":"code","34d45e38":"code","da1ae057":"code","dcec2700":"code","982ac663":"code","bccb9bee":"code","7e496f01":"code","a8ce6a5b":"code","9dad1854":"code","6e71175e":"code","f8c53ac5":"code","45dc07ee":"code","8ab3f0b6":"code","c7d7d1cc":"code","e0444900":"code","6066a43a":"code","63026cd9":"code","06b296de":"code","4228840e":"code","4cfad3db":"code","78071384":"code","b60a5bbc":"code","919b5b7c":"code","a64f2241":"code","076aa0ae":"markdown","04c0a98b":"markdown","49a71930":"markdown","01759d79":"markdown","fcdd528c":"markdown","b634f3d8":"markdown","7694ad1c":"markdown","6275387f":"markdown","5a6cd27d":"markdown","2d38b4aa":"markdown","218c803e":"markdown","8595c802":"markdown","d1a00b94":"markdown","ea4d76a3":"markdown","12c48615":"markdown","9d3d2ba6":"markdown","18e652b3":"markdown","2ce29815":"markdown","99916448":"markdown","02f80d9f":"markdown","65930e8c":"markdown","34322131":"markdown","be51ef71":"markdown","576337e6":"markdown","7c8322c3":"markdown","3e7ec591":"markdown","12f54672":"markdown"},"source":{"83c06562":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\n\nprint(os.listdir(\"..\/input\"))","1f07088a":"df = pd.read_csv('..\/input\/50-startups\/50_Startups.csv')","e4b738c1":"df.head()","14c2fbf9":"df.info()","629082ba":"df.shape","954de5a7":"df.isna()","0d9b2a3e":"df.isna().sum()","226ef6ed":"df.corr()","0aa17f64":"corr = df.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values);","686d44e1":"sns.scatterplot(df[\"R&D Spend\"], df[\"Profit\"], color=\"salmon\");  # R&D Spend ve Profit de\u011ferlerinin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6r\u00fcnt\u00fcledik.","6fd82123":"# Sa\u00e7\u0131l\u0131m grafi\u011fini (Scatterplot) inceleyecek olursak korelasyon ili\u015fkisini pozitif y\u00f6nde do\u011frusal olarak belirleyebiliriz.","827deb6b":"df.hist(color=\"salmon\")\n# Bins de\u011feri belirtmemize gerek kalmadan da varsay\u0131lan (default) olarak 10 olur.","a93788ad":"# R&D i\u00e7in olan de\u011ferler 0 - 175000 aras\u0131nda [Her aral\u0131k 17500 olarak b\u00f6l\u00fcnm\u00fc\u015f.],\n# Administration i\u00e7in olan de\u011ferler 50000 - 180000 aras\u0131nda [Her aral\u0131k 13000 olarak b\u00f6l\u00fcnm\u00fc\u015f.],\n# Marketing i\u00e7in olan de\u011ferler 0 - 450000 aras\u0131nda [Her aral\u0131k 45000 olarak b\u00f6l\u00fcnm\u00fc\u015f.], \n# Profit i\u00e7in olan de\u011ferler 15000 - 175000 aras\u0131nda [Her aral\u0131k 16000 olarak b\u00f6l\u00fcnm\u00fc\u015f.].\n# De\u011ferleri yakla\u015f\u0131k olarak ald\u0131k.","46378f3a":"df.describe().T","68f13dd4":"df[\"State\"].unique()","a45f6ba4":"df.head()","964234a2":"df[\"State\"] = pd.Categorical(df[\"State\"])","e2faa21d":"state_dummies = pd.get_dummies(df[\"State\"], prefix = \"State\")","3b0f5abd":"df = pd.concat([df,state_dummies],axis = 1)","cbf6ce21":"df.head()","8c852965":"df.drop([\"State\",\"State_New York\"],axis = 1, inplace = True)","c1aea5fd":"df.head()","34d45e38":"x = df.drop(\"Profit\",axis = 1)\ny = df[\"Profit\"]","da1ae057":"x","dcec2700":"y","982ac663":"# Tahmin edece\u011fimiz de\u011fi\u015fken yani ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimizi y olarak ikinci parametrede, ba\u011f\u0131ms\u0131z de\u011fi\u015fkenimizi ise x olarak birinci parametrede veriyoruz.\n\n# Bu da \u015fu anlama gelmi\u015f oluyor: State bilgilerini al ve ona kar\u015f\u0131l\u0131k gelen profit de\u011ferlerini \u00f6\u011fren, ve optimum katsay\u0131 ve sabit de\u011ferden olu\u015fan bir denklem olu\u015ftur.","bccb9bee":"from sklearn.model_selection import train_test_split # De\u011fi\u015fkenlerimizi e\u011fitim ve test olmak \u00fczere ikiye b\u00f6lebilmek i\u00e7in gerekli\n# k\u00fct\u00fcphane\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 3\/4)\n# x ve y verilerinin 3\/4 \u00fc e\u011fitim i\u00e7in  1\/4 \u00fc test i\u00e7in yollanaca\u011f\u0131n\u0131 ve bu verilerin rastgele da\u011f\u0131lca\u011f\u0131n\u0131 belirttik.","7e496f01":"x_train","a8ce6a5b":"y_train","9dad1854":"x_test","6e71175e":"y_test","f8c53ac5":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()","45dc07ee":"model.fit(x_train, y_train)","8ab3f0b6":"y_pred = model.predict([[100000, 50000, 150000, 0, 1]])","c7d7d1cc":"y_pred","e0444900":"df[\"predict_Profit\"] = model.predict(x)\ndf.sample(10)","6066a43a":"import sklearn.metrics as metrics\nimport math\n\n# MAE = Mean Absolute Error = Ortalama Mutlak Hata\n# MSE = Mean Squared Error = Ortalama Kare Hata\n# RMSE = Root Mean Squared Error = K\u00f6k Ortalama Kare Hata\n\n# RMSE , MSE nin k\u00f6k\u00fc al\u0131nm\u0131\u015f halidir.","63026cd9":"MAE = metrics.mean_absolute_error(df[\"Profit\"],df[\"predict_Profit\"])\nMAE","06b296de":"MSE = metrics.mean_squared_error(df[\"Profit\"],df[\"predict_Profit\"])\nMSE","4228840e":"RMSE = math.sqrt(MSE)\nRMSE","4cfad3db":"model.score(x_train, y_train)","78071384":"# R Squared de\u011feri 1'e ne kadar yak\u0131n ise modeldeki ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin ba\u011f\u0131ml\u0131 de\u011fi\u015fkeni ifade edebilme oran\u0131 o kadar iyidir.","b60a5bbc":"import statsmodels.api as sm","919b5b7c":"sts_model = sm.OLS(y,x).fit()","a64f2241":"sts_model.summary()","076aa0ae":"**11)** get_dummies yard\u0131m\u0131yla State'a dair kategorik \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131nda bulunal\u0131m. \u00c7\u00fcnk\u00fc State'lar\u0131n birbirine \u00fcst\u00fcnl\u00fc\u011f\u00fc yok, nominaller. Ordinal de\u011fil.","04c0a98b":"**17)** 4 par\u00e7a de\u011fi\u015fkeni kontrol edelim.","49a71930":"Dizinde bulunan veri \u00e7er\u00e7evemizi startups de\u011fi\u015fkenine atayal\u0131m. startups de\u011fi\u015fkenini df de\u011fi\u015fkenine kopyalayarak kullanmaya ba\u015flayal\u0131m.","01759d79":"**19)** Modeli e\u011fitmek i\u00e7in ba\u011f\u0131ml\u0131 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden olu\u015fturulan e\u011fitim verilerini verelim.","fcdd528c":"**7)** R&D Spend ve Profit aras\u0131ndaki korelasyonu daha iyi g\u00f6rebilmek i\u00e7in scatterplot \u00e7izdirelim.","b634f3d8":"**20)** Modele daha \u00f6nce g\u00f6rmedi\u011fi ba\u011f\u0131ml\u0131 test de\u011fi\u015fkenini tahmin ettirelim. Bu tahmin de\u011ferlerimizi y_pred de\u011fi\u015fkenine atayal\u0131m.","7694ad1c":"**22)** sklearn b\u00fcnyesinde bar\u0131nan metrics'i \u00e7ekirde\u011fe dahil edelim ve MAE, MSE, RMSE de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","6275387f":"**15)** Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kontrol edelim.","5a6cd27d":"**6)** Seaborn ile korelasyon matrisinin \u0131s\u0131 haritas\u0131n\u0131 \u00e7izdirelim.","2d38b4aa":"**23)** Modelin R Squared de\u011ferini e\u011fitim verileri \u00fczerinden yazd\u0131ral\u0131m.","218c803e":"50 adet Startup'\u0131n ara\u015ft\u0131rma ve geli\u015ftirmeye y\u00f6nelik harcamas\u0131, y\u00f6netime y\u00f6nelik harcamas\u0131, pazarlama harcamas\u0131, kazand\u0131klar\u0131 kar miktar\u0131 ve kurulduklar\u0131 lokasyon bilgisi bulunmaktad\u0131r. Ama\u00e7 kar miktar\u0131n\u0131 tahmin etmektir. Bu bir say\u0131sal tahmin problemidir ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz \"Profit\".","8595c802":"**21)** Tahminleri ve ger\u00e7ek de\u011ferleri bir veri \u00e7er\u00e7evesinde toplay\u0131p \u00fczerinde g\u00f6z gezdirelim.","d1a00b94":"**8)** Say\u0131sal de\u011fi\u015fkenlerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmek i\u00e7in df \u00fczerinden histogram \u00e7izdirelim.","ea4d76a3":"**9)** Veri \u00e7er\u00e7evesinin temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","12c48615":"**3)** Ka\u00e7 g\u00f6zlem ve \u00f6znitelikten olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","9d3d2ba6":"**13)** Veri \u00e7er\u00e7evemizi ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler olmak \u00fczere b\u00f6l\u00fctleyelim.","18e652b3":"Numpy, matplotlib.pyplot, pandas ve seaborn k\u00fct\u00fcphanelerini \u00e7ekirde\u011fe dahil edelim.","2ce29815":"**18)** LinearRegression'u \u00e7ekirde\u011fe dahil edip modeli in\u015fa edelim.","99916448":"**12)** State \u00f6zniteli\u011fini silip dummy olarak yarat\u0131lan State'lardan da birisini hari\u00e7 tutarak veri \u00e7er\u00e7evemizi g\u00fcncelleyelim.","02f80d9f":"**10)** State'a ait benzersiz de\u011ferleri g\u00f6r\u00fcnt\u00fcleyelim.","65930e8c":"**16)** Bu ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden train ve test olmak \u00fczere 4 par\u00e7a olu\u015ftural\u0131m. Bunu yapmak i\u00e7in train_test_split kullanal\u0131m.","34322131":"**1)** \u0130lk 5 g\u00f6zlemini yazd\u0131ral\u0131m.","be51ef71":"**5)** Korelasyon matrisi \u00e7izdirelim.","576337e6":"**24)** (Tercihen) statsmodel kullanarak hangi \u00f6zniteliklerin model i\u00e7in %95 g\u00fcvenilirlikle ne kadar anlaml\u0131 olup olmad\u0131\u011f\u0131na da bakabilir. Modelde baz\u0131 feature selection i\u015flemleri yaparak tekrardan e\u011fitip yeni sonu\u00e7lar mukayese edilebilir.","7c8322c3":"**2)** Veri \u00e7er\u00e7evesinin bilgilerini g\u00f6r\u00fcnt\u00fcleyelim.","3e7ec591":"# Do\u011frusal Regresyon Egzersizleri","12f54672":"**4)** Eksik verileri kontrol edelim."}}