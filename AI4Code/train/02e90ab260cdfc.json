{"cell_type":{"54c4898c":"code","5f2823de":"code","f827ba72":"code","e079d210":"code","7170a67b":"code","c753dc85":"code","f38d3daa":"code","2f327ac4":"code","7a5f0eb5":"code","197f1472":"code","9a41b1e2":"code","b5ba4f55":"code","6269faec":"code","a27e99b7":"code","de99f4e2":"code","9528c341":"code","74b368f6":"markdown","b8384dde":"markdown"},"source":{"54c4898c":"from collections import defaultdict\nfrom scipy.stats import itemfreq\nfrom scipy import ndimage as ndi\nimport matplotlib.pyplot as plt\nfrom skimage import feature\nfrom PIL import Image as IMG\nimport numpy as np\nimport pandas as pd \nimport operator\nimport cv2\nimport os \n\nfrom IPython.core.display import HTML \nfrom IPython.display import Image","5f2823de":"print('Train')\ntrain = pd.read_csv(\"..\/input\/train\/train.csv\")\nprint(train.shape)\n\nprint('Test')\ntest = pd.read_csv(\"..\/input\/test\/test.csv\")\nprint(test.shape)\n\nprint('Breeds')\nbreeds = pd.read_csv(\"..\/input\/breed_labels.csv\")\nprint(breeds.shape)\n\nprint('Colors')\ncolors = pd.read_csv(\"..\/input\/color_labels.csv\")\nprint(colors.shape)\n\nprint('States')\nstates = pd.read_csv(\"..\/input\/state_labels.csv\")\nprint(states.shape)\n\ntarget = train['AdoptionSpeed']\ntrain_id = train['PetID']\ntest_id = test['PetID']\n#train.drop(['AdoptionSpeed', 'PetID'], axis=1, inplace=True)\n#test.drop(['PetID'], axis=1, inplace=True)","f827ba72":"import glob\n\ntrain_image_files = sorted(glob.glob('..\/input\/train_images\/*.jpg'))\ntest_image_files = sorted(glob.glob('..\/input\/test_images\/*.jpg'))\n\nprint(len(train_image_files), len(test_image_files))\ntrain_image_files[:3], test_image_files[:3]","e079d210":"# Images:\ntrain_df_ids = train[['PetID']]\nprint(train_df_ids.shape)\n\ntest_df_ids = test[['PetID']]\nprint(test_df_ids.shape)","7170a67b":"train_df_imgs = pd.DataFrame(train_image_files)\ntrain_df_imgs.columns = ['image_filename']\ntrain_imgs_pets = train_df_imgs['image_filename'].apply(lambda x: x.split('\/')[-1].split('-')[0])","c753dc85":"test_df_imgs = pd.DataFrame(test_image_files)\ntest_df_imgs.columns = ['image_filename']\ntest_imgs_pets = test_df_imgs['image_filename'].apply(lambda x: x.split('\/')[-1].split('-')[0])","f38d3daa":"train_df_imgs = train_df_imgs.assign(PetID=train_imgs_pets)\nprint(len(train_imgs_pets.unique()))\n\ntest_df_imgs = test_df_imgs.assign(PetID=test_imgs_pets)\nprint(len(test_imgs_pets.unique()))","2f327ac4":"train_df_imgs.head()","7a5f0eb5":"test_df_imgs.head()","197f1472":"def getSize(filename):\n    #filename = images_path + filename\n    st = os.stat(filename)\n    return st.st_size\n\ndef getDimensions(filename):\n    #filename = images_path + filename\n    img_size = IMG.open(filename).size\n    return img_size ","9a41b1e2":"train_df_imgs['image_size'] = train_df_imgs['image_filename'].apply(getSize)\ntrain_df_imgs['temp_size'] = train_df_imgs['image_filename'].apply(getDimensions)\ntrain_df_imgs['width'] = train_df_imgs['temp_size'].apply(lambda x : x[0])\ntrain_df_imgs['height'] = train_df_imgs['temp_size'].apply(lambda x : x[1])\ntrain_df_imgs = train_df_imgs.drop(['temp_size'], axis=1)\ntrain_df_imgs.head()","b5ba4f55":"test_df_imgs['image_size'] = test_df_imgs['image_filename'].apply(getSize)\ntest_df_imgs['temp_size'] = test_df_imgs['image_filename'].apply(getDimensions)\ntest_df_imgs['width'] = test_df_imgs['temp_size'].apply(lambda x : x[0])\ntest_df_imgs['height'] = test_df_imgs['temp_size'].apply(lambda x : x[1])\ntest_df_imgs = test_df_imgs.drop(['temp_size'], axis=1)\ntest_df_imgs.head()","6269faec":"aggs = {\n    'image_size': ['min', 'max', 'mean', 'median', \"sum\"],\n    'width': ['min', 'max', 'mean', 'median', \"sum\"],\n    'height': ['min', 'max', 'mean', 'median', \"sum\"],\n}\n\nagg_train_imgs = train_df_imgs.groupby('PetID').agg(aggs)\n\nnew_columns = [\n    k + '_' + agg for k in aggs.keys() for agg in aggs[k]\n]\n\nagg_train_imgs.columns = new_columns\n\nagg_train_imgs = agg_train_imgs.reset_index()\nagg_train_imgs.head()","a27e99b7":"agg_test_imgs = test_df_imgs.groupby('PetID').agg(aggs)\n\nnew_columns = [\n    k + '_' + agg for k in aggs.keys() for agg in aggs[k]\n]\n\nagg_test_imgs.columns = new_columns\n\nagg_test_imgs = agg_test_imgs.reset_index()\nagg_test_imgs.head()","de99f4e2":"train = train.merge(\n    right=agg_train_imgs, how='outer', on='PetID')\n\nprint(train.shape)\ntrain.head()","9528c341":"test = test.merge(\n    right=agg_test_imgs, how='outer', on='PetID')\n\nprint(test.shape)\ntest.head()","74b368f6":"https:\/\/www.kaggle.com\/shivamb\/ideas-for-image-features-and-image-quality","b8384dde":"This features are inspired from below kernel"}}