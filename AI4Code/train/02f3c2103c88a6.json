{"cell_type":{"7ed2adec":"code","e8e2d3d7":"code","9280ab00":"code","bf6d6971":"code","5d1d7677":"code","06b9dda0":"code","e5432399":"code","d6038f6d":"code","4868ae54":"code","14e9f6d5":"code","938a3d66":"code","d47285f1":"code","7cf9da06":"code","9d656eb1":"code","90ad6033":"code","bd0129d0":"code","02c21bdb":"code","d97a5029":"code","2c729e97":"code","bd8563e9":"code","f66936e1":"code","f119f9a5":"code","1f72281d":"code","6d4f7477":"code","a5d48e07":"code","6b938824":"code","89b2e01c":"code","ff2056fb":"code","5d8bc530":"code","dcb6b637":"code","7d1b618e":"code","a2d0e005":"code","a78a6f10":"code","878e9677":"code","d9c061ec":"code","a8ec66e9":"code","0dc36058":"code","d2bc3d75":"code","687fc048":"code","182681b2":"code","6472242b":"code","32e12963":"code","4881a273":"code","b6b58c8f":"code","16ebabc7":"code","ddb567d2":"code","c1aa6f51":"code","771fdf7d":"code","b9961370":"code","f9760b3f":"code","b6e9eaf6":"code","c504750a":"code","c726e30f":"code","60eef47a":"code","d4f198c1":"code","d35aa03b":"code","cde31473":"code","a5b319bf":"code","18ca5154":"code","78e9382e":"code","c841edd7":"code","427d90f9":"code","84efd570":"code","6db89062":"code","9cdcc0aa":"markdown"},"source":{"7ed2adec":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nfrom dataclasses import dataclass\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nfrom tqdm import tqdm\nimport librosa\n\nfrom sklearn.preprocessing import minmax_scale\nfrom sklearn.decomposition import PCA\nfrom sklearn.manifold import TSNE\nimport umap\nfrom category_encoders import CountEncoder#\u30ab\u30a6\u30f3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport IPython","e8e2d3d7":"X_train = pd.read_csv(\"..\/input\/hah-data-science-challenge\/train.csv\")\nX_test= pd.read_csv(\"..\/input\/hah-data-science-challenge\/test.csv\")\ndf_train = X_train.copy()\ndf_test = X_test.copy()","9280ab00":"INPUT_DIR = '\/kaggle\/input\/hah-data-science-challenge'","bf6d6971":"# meta_data\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\ndf_train['filepath'] = INPUT_DIR + '\/train\/train\/' + df_train['\u30d5\u30a1\u30a4\u30eb']\ndf_test['filepath'] = INPUT_DIR + '\/test\/test\/' + df_test['\u30d5\u30a1\u30a4\u30eb']\ndf_train[\"train_test\"] = \"train\"\ndf_test[\"train_test\"] = \"test\"","5d1d7677":"df = pd.concat([df_train, df_test]).reset_index(drop=True)","06b9dda0":"# librosa\u3067.wav\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u7279\u5fb4\u62bd\u51fa\u3057\u307e\u3059\u3002\nn_features = 20\n\nX_fe = np.zeros((len(df), n_features))\nX_fe = []\n\nfilelist = df.filepath.values\n\nfor i, filename in enumerate(tqdm(filelist)):\n    y, sr = librosa.core.load(filename,sr=None)\n    y = (y-y.min())\/(y.max()-y.min()) # \u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306e\u6b63\u898f\u5316\n    mfcc = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=20)\n    ceps = mfcc.mean(axis=1)\n    X_fe.append(mfcc)\n    # \u8907\u6570\u306e\u30ed\u30fc\u30ea\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u305d\u308c\u305e\u308c20\u6b21\u5143\u306eMFCC\u3092\u5f97\u3089\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u5e73\u5747\u3092\u3068\u308b\u3002\n    X_fe[i] = ceps","e5432399":"col_Sound = [f\"fe{x}\" for x in range(n_features)]\ndf[col_Sound] = X_fe","d6038f6d":"def to_length(data):\n    if \"cm\" in str(data):\n        data = int(data.replace(\"cm\",\"\"))\n    if \"m\" in str(data):\n        data = int(data.replace(\"m\",\"\")) * 100\n    return data","4868ae54":"# \u540d\u5bc4\u305b\nrecording_map = {\n    'PC\u5185\u81d3': 'PC\u5185\u8535', \n    'PC\u5185\u8535': 'PC\u5185\u8535', \n    'USB1': 'USB1', \n    'USB2': 'USB2', \n    'USB3': 'USB3', \n    'USB4': 'USB4', \n    '\u30b9\u30de\u30db': '\u30b9\u30de\u30db', \n    '\u30b9\u30de\u30db\u306e\u30dc\u30a4\u30b9\u30ec\u30b3\u30fc\u30c0': '\u30b9\u30de\u30db', \n    '\u5185\u8535\u30de\u30a4\u30af': 'PC\u5185\u8535'\n}\n\ndistance_map = {\n    '10cm': '10cm',\n    '10\u339d': '10cm',\n    '1M': '1m',\n    '20cm': '20cm',\n    '20\u339d': '20cm',\n    '2M': '2m',\n    '2m': '2m',\n    '30cm': '30cm',\n    '30cn': '30cm',\n    '30\u339d': '30cm',\n    '3m': '3m',\n    '40cm': '40cm',\n    '40\u339d': '40cm',\n    '50cm': '50cm',\n    '50\u339d': '50cm',\n    '5cm': '5cm',\n    '8cm': '8cm',\n    '\uff11\uff2d': '1m'\n}","14e9f6d5":"df['\u9332\u97f3\u65b9\u6cd5'] = df['\u9332\u97f3\u65b9\u6cd5'].replace(recording_map)\ndf['\u30de\u30a4\u30af\u8ddd\u96e2'] = df['\u30de\u30a4\u30af\u8ddd\u96e2'].replace(distance_map)\ndf[\"\u30de\u30a4\u30af\u8ddd\u96e2_int\"] = df[\"\u30de\u30a4\u30af\u8ddd\u96e2\"].apply(to_length)","938a3d66":"df1 = df[df.Target == 1].iloc[0]\ndf2 = df[df.Target == 1].iloc[1]","d47285f1":"df1_temp = df[(df[\"\u306d\u3058\"] == df1[\"\u306d\u3058\"]) & (df[\"\u30d7\u30ec\u30fc\u30c8\"] == df1[\"\u30d7\u30ec\u30fc\u30c8\"]) & (df[\"\u9332\u97f3\u65b9\u6cd5\"] == df1[\"\u9332\u97f3\u65b9\u6cd5\"]) & (df[\"Target\"] == 0)]\ndf2_temp = df[(df[\"\u306d\u3058\"] == df2[\"\u306d\u3058\"]) & (df[\"\u30d7\u30ec\u30fc\u30c8\"] == df2[\"\u30d7\u30ec\u30fc\u30c8\"]) & (df[\"\u9332\u97f3\u65b9\u6cd5\"] == df2[\"\u9332\u97f3\u65b9\u6cd5\"]) & (df[\"Target\"] == 0)]","7cf9da06":"# FFT\u7279\u5fb4\u91cf\u306e\u6761\u4ef6\nST_F = 80 # \u4f7f\u7528\u3059\u308b\u5468\u6ce2\u6570\u4e0b\u9650\nED_F = 10000 # \u4f7f\u7528\u3059\u308b\u5468\u6ce2\u6570\u4e0a\u9650\nWINDOW = 1 # \u30d3\u30f3\u5206\u3051\u306ewindow\u30b5\u30a4\u30ba\nn_features = np.ceil((ED_F - ST_F) \/ WINDOW) ","9d656eb1":"def calc_fft_features(signal, sample_rate, st_f, ed_f, window):\n    # fft\n    fft = np.fft.fft(signal)\n    spectrum = np.abs(fft)\n    spectrum = spectrum \/ spectrum.max()\n    f = np.linspace(0, sample_rate, len(spectrum))\n    left_spectrum = spectrum[:int(len(spectrum)\/2)]\n    left_f = f[:int(len(spectrum)\/2)]\n    # window\u3054\u3068\u96c6\u8a08\n    features = []\n    features_ = []\n    \n    for st in np.arange(st_f, ed_f, window):\n        ed = st + window\n        features.append(left_spectrum[(st<=left_f)&(left_f<ed)].max())\n        features_.append(left_f[(st<=left_f)&(left_f<ed)].mean())\n    return features,features_","90ad6033":"fig = plt.figure(figsize=(25, 5))\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nfor i,l in zip(df1_temp.ID,df1_temp.\u30d5\u30a1\u30a4\u30eb):\n    y, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\n    y,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\n    ax1.plot(t, y, color=f\"C{i}\",label = l)\ny, sr = librosa.core.load(df.at[df1.ID, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax2.plot(t, y, color=f\"C{i}\",label = df1.\u30d5\u30a1\u30a4\u30eb)\nax1.legend(bbox_to_anchor=(1.01, 1))\nax2.legend(bbox_to_anchor=(1.01, 1))\nplt.show()","bd0129d0":"fig = plt.figure(figsize=(25, 5))\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nfor i,l in zip(df2_temp.ID,df2_temp.\u30d5\u30a1\u30a4\u30eb):\n    y, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\n    y,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\n    ax1.plot(t, y, color=f\"C{i}\",label = l)\ny, sr = librosa.core.load(df.at[df2.ID, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax2.plot(t, y, color=f\"C{i}\",label = df2.\u30d5\u30a1\u30a4\u30eb)\nax1.legend(bbox_to_anchor=(1.03, 1))\nax2.legend(bbox_to_anchor=(1.03, 1))\nplt.show()","02c21bdb":"fig = plt.figure(figsize=(25, 5))\nax = fig.add_subplot(1,2,1)\ny, sr = librosa.core.load(df.at[396, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C0\",label = \"396\")\ny, sr = librosa.core.load(df.at[1510, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C1\",label = \"1510\")\ny, sr = librosa.core.load(df.at[1786, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C2\",label = \"1786\")\ny, sr = librosa.core.load(df.at[1347, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C3\",label = \"1347\")\nax.legend(bbox_to_anchor=(1.01, 1))\nplt.show()","d97a5029":"print('\u6b63\u5e38')\ndisplay(df.loc[[396]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train396.wav')","2c729e97":"print('\u6b63\u5e38')\ndisplay(df.loc[[1510]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1510.wav')","bd8563e9":"print('\u6b63\u5e38')\ndisplay(df.loc[[1786]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1786.wav')","f66936e1":"print('\u6b63\u5e38')\ndisplay(df.loc[[1347]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1347.wav')","f119f9a5":"fig = plt.figure(figsize=(25, 5))\nax = fig.add_subplot(1,2,1)\ny, sr = librosa.core.load(df.at[1478, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C1\",label = \"1478\")\nax.legend(bbox_to_anchor=(1.01, 1))\nplt.show()","1f72281d":"print('\u6b63\u5e38')\ndisplay(df.loc[[1478]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1478.wav')","6d4f7477":"fig = plt.figure(figsize=(25, 5))\nax = fig.add_subplot(1,2,1)\ny, sr = librosa.core.load(df.at[1867, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C0\",label = \"1867\")\ny, sr = librosa.core.load(df.at[1824, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C1\",label = \"1824\")\ny, sr = librosa.core.load(df.at[2037, 'filepath'], sr=None)\ny,t = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)\nax.plot(t, y, color=f\"C2\",label = \"2037\")\nax.legend(bbox_to_anchor=(1.01, 1))\nplt.show()","a5d48e07":"print('\u6b63\u5e38')\ndisplay(df.loc[[1824]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1824.wav')","6b938824":"print('\u6b63\u5e38')\ndisplay(df.loc[[1867]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1867.wav')","89b2e01c":"#2\u632f\u5e45\u3092\u3068\u3063\u3066\u307f\u308b","ff2056fb":"def calc_fft_features_fil(signal, sample_rate, st_f, ed_f, window):\n    # fft\n    fft = np.fft.fft(signal)\n    spectrum = np.abs(fft)\n    f = np.linspace(0, sample_rate, len(spectrum))\n    spectrum = spectrum[(st_f<=f)&(f<ed_f)]\n    spectrum = spectrum \/ spectrum.max()\n    f = f[(st_f<=f)&(f<ed_f)]\n    max_ = np.sort(spectrum)[-3]\n    spectrum[spectrum<0.1] = 0\n    return spectrum,f","5d8bc530":"fig = plt.figure(figsize=(25, 5))\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nfre = []\nfor i,l in zip(df2_temp[:1].ID,df2_temp[:1].\u30d5\u30a1\u30a4\u30eb):\n    y, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\n    y,t = calc_fft_features_fil(y, sr, ST_F, ED_F, WINDOW)\n    ax1.plot(t, y, color=f\"C{i+1}\",label = l)\n#     print(\"\u56fa\u6709\u632f\u52d5\u6570\",t[np.where(y!=0)])\n#     fre.append(t[np.where(y!=0)][0])\ny, sr = librosa.core.load(df.at[df2.ID, 'filepath'], sr=None)\ny,t = calc_fft_features_fil(y, sr, ST_F, ED_F, WINDOW)\n# print(\"\u56fa\u6709\u632f\u52d5\u6570:\",t[np.where(y!=0)][0])\nax2.plot(t, y, color=f\"C{i}\",label = df2.\u30d5\u30a1\u30a4\u30eb)\nax1.legend(bbox_to_anchor=(1.03, 1))\nax2.legend(bbox_to_anchor=(1.03, 1))\nplt.show()","dcb6b637":"print('\u7570\u5e38')\ndisplay(df2)\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train785.wav')","7d1b618e":"# df2_temp[\"\u56fa\u6709\u632f\u52d5\u6570\"] = fre\n# df2_temp","a2d0e005":"df2[\"\u56fa\u6709\u632f\u52d5\u6570\"] = t[np.where(y!=0)][0]\ndf2#\u5c11\u3057\u56fa\u6709\u632f\u52d5\u6570\u304c\u4f4e\u304f\u306a\u308b\uff0e","a78a6f10":"fig = plt.figure(figsize=(25, 5))\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nfre = []\nfor i,l in zip(df1_temp.ID,df1_temp.\u30d5\u30a1\u30a4\u30eb):\n    y, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\n    y,t = calc_fft_features_fil(y, sr, ST_F, ED_F, WINDOW)\n    ax1.plot(t, y, color=f\"C{i-1}\",label = l)\n#     print(\"\u56fa\u6709\u632f\u52d5\u6570:\",t[np.where(y!=0)][0])\n    fre.append(t[np.where(y!=0)][0])\ny, sr = librosa.core.load(df.at[df1.ID, 'filepath'], sr=None)\ny,t = calc_fft_features_fil(y, sr, ST_F, ED_F, WINDOW)\n# print(\"\u56fa\u6709\u632f\u52d5\u6570:\",t[np.where(y!=0)][0])\nax2.plot(t, y, color=f\"C{i}\",label = df2.\u30d5\u30a1\u30a4\u30eb)\nax1.legend(bbox_to_anchor=(1.03, 1))\nax2.legend(bbox_to_anchor=(1.03, 1))\nplt.show()","878e9677":"df1_temp[\"\u56fa\u6709\u632f\u52d5\u6570\"] = fre\ndf1_temp[\"\u56fa\u6709\u632f\u52d5\u6570_\"] = np.round(df1_temp[\"\u56fa\u6709\u632f\u52d5\u6570\"]\/1000,0)","d9c061ec":"df1_temp.\u56fa\u6709\u632f\u52d5\u6570_.unique()","a8ec66e9":"df1_temp[df1_temp[\"\u56fa\u6709\u632f\u52d5\u6570_\"] == 1]","0dc36058":"print('\u6b63\u5e38')\ndisplay(df1_temp.loc[[440]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train440.wav')","d2bc3d75":"print('\u6b63\u5e38')\ndisplay(df1_temp.loc[[1779]])\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train1779.wav')","687fc048":"#\u3046\u30fc\u3093\u9055\u3044\u304c\u308f\u304b\u3089\u3093\u3067\u3059\u306d\uff0e","182681b2":"print('\u7570\u5e38')\ndisplay(df2)\nIPython.display.Audio('\/kaggle\/input\/hah-data-science-challenge\/train\/train\/train785.wav')","6472242b":"df1[\"\u56fa\u6709\u632f\u52d5\u6570\"] = t[np.where(y!=0)][0]\ndf1#\u5c11\u3057\u56fa\u6709\u632f\u52d5\u6570\u304c\u4f4e\u304f\u306a\u308b\uff0e","32e12963":"df_temp = df[(df[\"\u306d\u3058\"] == \"\u5927\") & (df[\"\u30d7\u30ec\u30fc\u30c8\"] == \"\u5927\")  & (df[\"\u30de\u30a4\u30af\u8ddd\u96e2\"] == \"20cm\")]","4881a273":"target = df_temp[\"Target\"]\nsymbol = df_temp[\"\u9332\u97f3\u65b9\u6cd5\"]","b6b58c8f":"pca = PCA(n_components=2)\npca_embed = pca.fit_transform(df_temp[col_Sound].to_numpy())\ntsne_embed = TSNE().fit_transform(df_temp[col_Sound].to_numpy())\numap_embed = umap.UMAP().fit_transform(df_temp[col_Sound].to_numpy())","16ebabc7":"fig = px.scatter(x=umap_embed[:, 0], y=umap_embed[:, 1], color=target*2,range_color = [-1,1],symbol = symbol)\nfig.show()","ddb567d2":"fig = px.scatter(x=tsne_embed[:, 0], y=tsne_embed[:, 1], color=target)\nfig.show()","c1aa6f51":"from sklearn.cluster import KMeans\ncls = KMeans(n_clusters=len(df_temp[\"\u9332\u97f3\u65b9\u6cd5\"].unique())*2)\nresult_umap = cls.fit(umap_embed)\nresult_tsne = cls.fit(tsne_embed)","771fdf7d":"fig = px.scatter(x = umap_embed[:,0],y = umap_embed[:,1], symbol=result_umap.labels_,color=target*2,range_color = [-1,1])\nfig.show()","b9961370":"df_temp[\"class_tsne\"] = result_tsne.labels_\ndf_temp[\"class_umap\"] = result_umap.labels_","f9760b3f":"display(df_temp[df_temp.Target == 0].class_umap.value_counts())\ndisplay(df_temp[df_temp.Target == 1].class_umap.value_counts())","b6e9eaf6":"for i in df_temp[df_temp.Target == 0].class_umap.unique():\n    df_temp.loc[df_temp.class_umap == i,\"Target\"] = 0\nfor i in df_temp[df_temp.Target == 1].class_umap.unique():\n    df_temp.loc[df_temp.class_umap == i,\"Target\"] = 1","c504750a":"df_temp.dropna().to_csv(\"\u306d\u3058_\u5927_\u30d7\u30ec\u30fc\u30c8_\u5927_\u30de\u30a4\u30af\u8ddd\u96e2_20cm.csv\",index = False)","c726e30f":"df[(df[\"\u306d\u3058\"] == \"\u5c0f\") & (df[\"\u30d7\u30ec\u30fc\u30c8\"] == \"\u5927\")  & (df[\"\u30de\u30a4\u30af\u8ddd\u96e2\"] == \"30cm\")]","60eef47a":"df_temp = df[(df[\"\u306d\u3058\"] == \"\u5c0f\") & (df[\"\u30d7\u30ec\u30fc\u30c8\"] == \"\u5927\")  & (df[\"\u30de\u30a4\u30af\u8ddd\u96e2\"] == \"30cm\")]\ndf_temp","d4f198c1":"target = df_temp[\"Target\"]\nsymbol = df_temp[\"\u9332\u97f3\u65b9\u6cd5\"]","d35aa03b":"pca = PCA(n_components=2)\npca_embed = pca.fit_transform(df_temp[col_Sound].to_numpy())\ntsne_embed = TSNE().fit_transform(df_temp[col_Sound].to_numpy())\numap_embed = umap.UMAP().fit_transform(df_temp[col_Sound].to_numpy())","cde31473":"fig = px.scatter(x=umap_embed[:, 0], y=umap_embed[:, 1], color=target*2,range_color = [-1,1],symbol = symbol)\nfig.show()","a5b319bf":"cls = KMeans(n_clusters=12)\nresult_umap = cls.fit(umap_embed)\nresult_tsne = cls.fit(tsne_embed)","18ca5154":"df_temp[\"class_tsne\"] = result_tsne.labels_\ndf_temp[\"class_umap\"] = result_umap.labels_","78e9382e":"target_ = target.replace(0,0.5)","c841edd7":"fig = px.scatter(x = umap_embed[:,0],y = umap_embed[:,1],color=result_umap.labels_,size = target_.fillna(0.1))\nfig.show()","427d90f9":"for i in df_temp[df_temp.Target == 0].class_umap.unique():\n    df_temp.loc[df_temp.class_umap == i,\"Target\"] = 0\nfor i in df_temp[df_temp.Target == 1].class_umap.unique():\n    df_temp.loc[df_temp.class_umap == i,\"Target\"] = 1","84efd570":"df_temp.dropna().to_csv(\"\u306d\u3058_\u5c0f_\u30d7\u30ec\u30fc\u30c8_\u5927_\u30de\u30a4\u30af\u8ddd\u96e2_30cm.csv\",index = False)","6db89062":"df_temp.dropna()","9cdcc0aa":"fft\u8868\u793a\u3057\u3066\u307f\u308b"}}