{"cell_type":{"75b06fcb":"code","200402ba":"code","4068866f":"code","68efc97e":"code","0094c27a":"code","ce1624f5":"code","3ee28cdc":"code","15e32602":"code","d5ae2e2f":"code","93b1789e":"code","9926d0c7":"code","845b2794":"code","9e33fff0":"code","be72d51c":"code","7432ce50":"code","f00bc430":"code","6813df17":"code","9801405e":"code","5eb6093e":"code","088d2612":"code","31652252":"code","522e4c47":"code","fdc57334":"code","f60b50d5":"code","6193a8ed":"code","5ba8effc":"code","051200bd":"code","72040ab0":"code","6dd66e49":"code","a01a248d":"code","9748417b":"code","6897de10":"code","90b9b699":"code","a18ac69c":"code","6e452fab":"code","7c1ba672":"code","5f9778f1":"code","d880ef1a":"code","75e3d796":"code","5f8113e0":"code","3293f206":"code","50f262e9":"code","477acf87":"code","7f835e3d":"code","d65ecb71":"code","92a779f0":"code","0af48393":"code","163eeb73":"code","cbc0233f":"markdown","3072c29e":"markdown","c14c9c5a":"markdown","0959ff8e":"markdown","4bb63a82":"markdown","862c3524":"markdown","90d323fe":"markdown","cc3b926f":"markdown","84291619":"markdown"},"source":{"75b06fcb":"from tqdm import tqdm\nimport numpy as np \nimport pandas as pd\nimport itertools\nimport random\nimport os\nimport gc\n\nimport pandas_profiling as pdp\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns\nfrom matplotlib_venn import venn2\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(style=\"ticks\")\nfrom wordcloud import WordCloud\ndf=pd.read_csv(\"..\/input\/football-team\/Football teams.csv\")\ndata=df.copy()","200402ba":"pdp.ProfileReport(df)","4068866f":"df.head(10)","68efc97e":"df.shape","0094c27a":"df.info()","ce1624f5":"df.describe()","3ee28cdc":"df.isnull().sum()","15e32602":"uni_toun=data.groupby('Tournament')['Team'].nunique()\nuni_toun=pd.DataFrame(uni_toun)\nuni_toun","d5ae2e2f":"df.columns","93b1789e":"sum_column = df[\"red_cards\"] + df[\"yellow_cards\"] + df[\"red_cards\"]\ndf[\"Card_Eqivalence\"] = sum_column\ndf.head()","9926d0c7":"f,ax = plt.subplots(figsize=(25, 15))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"black\", fmt= '.1f',ax=ax)\nplt.show()","845b2794":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Tournament))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('tournament.png')\nplt.show()","9e33fff0":"\nimpute_mean = df.loc[:, ['Goals', 'Shots_per_game', 'yellow_cards',\n       'red_cards', 'Possession%', 'Pass%', 'AerialsWon']]\nfor i in impute_mean.columns:\n    df[i].fillna(df[i].mean(), inplace = True)","be72d51c":"df.columns[df.isna().any()]","7432ce50":"df['No_of_match'] = df['Tournament'].apply(lambda x: int('34') if x == 'Bundesliga' else int('38'))\ndf[\"No_of_Shots\"] = round(df[\"Shots_per_game\"] * df[\"No_of_match\"])\ndf[\"No_of_AerialsWon\"] = round(df[\"AerialsWon\"] * df[\"No_of_match\"])\ndf[\"Goals_per_game\"] = (df[\"Goals\"] \/ df[\"No_of_match\"])\ndf[\"Shots_per_Goal\"] = (df[\"No_of_Shots\"] \/ df[\"Goals\"])\ndf[\"Attacking\"]=(df[\"Goals\"]*5)+(df[\"No_of_Shots\"])\ndf\n","f00bc430":"f,ax = plt.subplots(figsize=(25, 15))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"black\", fmt= '.1f',ax=ax,cmap=\"YlGnBu\")\nplt.show()\n","6813df17":"sns.lmplot(x = 'Goals',y = 'Shots_per_game', data = data, col = 'Tournament')\nplt.show()","9801405e":"Rclubs=df.sort_values(by='Rating', ascending=False)\nRclubs = pd.DataFrame(Rclubs)\nRclub = Rclubs[[\"Team\",\"Tournament\",\"Rating\"]]\nRclub=Rclub.head(25)\nRclub","5eb6093e":"Aclubs=df.sort_values(by='Attacking', ascending=False)\nAclubs = pd.DataFrame(Aclubs)\nAclub = Aclubs[[\"Team\",\"Tournament\",\"Attacking\"]]\nAclub=Aclub.head(25)\nAclub","088d2612":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(Rclub.Team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('Rating.png')\nplt.show()","31652252":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(Aclub.Team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('Attacking.png')\nplt.show()","522e4c47":"Dclubs=df.sort_values(by='Card_Eqivalence', ascending=True)\nDclubs = pd.DataFrame(Dclubs)\nDclub = Dclubs[[\"Team\",\"Tournament\",\"Card_Eqivalence\"]]\nDclub=Dclub.head(25)\nDclub","fdc57334":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(Dclub.Team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('Defence.png')\nplt.show()","f60b50d5":"plt.figure(figsize=(15,15))\ntournaments=df.groupby('Tournament')['Goals_per_game','Shots_per_game','AerialsWon','Shots_per_Goal'].sum().plot(kind='bar')\nplt.title(\" The different league details\", fontsize=25)","6193a8ed":"sns.barplot(x='Tournament',y='Shots_per_game',data=data)\nplt.title(\"Tournament and Shots per game in them\")","5ba8effc":"sns.scatterplot(x='Tournament',y='Possession%',data=data)\nplt.title(\"Tournament and Possession in them\")","051200bd":"sns.lineplot(x='Tournament',y='Pass%',data=data)\nplt.title(\"Tournament and Pass % in them\")","72040ab0":"data['Card_Equivalence']=data['red_cards']+data['yellow_cards']+data['red_cards']\nsns.barplot(x='Tournament',y='Card_Equivalence',data=data)\nplt.title(\"Tournament and Offenses in them\")","6dd66e49":"EPL= data.loc[data.Tournament=='Premier League']\nEPL['No_of_game'] = EPL['Tournament'].apply(lambda x: int('34') if x == 'Bundesliga' else int('38'))\nEPL[\"Goals_per_game\"] = (EPL[\"Goals\"] \/ EPL[\"No_of_game\"])\nEPL[\"No_of_Shots\"] = round(EPL[\"Shots_per_game\"] * EPL[\"No_of_game\"])\nEPL[\"No_of_AerialsWon\"] = round(EPL[\"AerialsWon\"] * EPL[\"No_of_game\"])\nEPL[\"Shots_per_Goal\"] = (EPL[\"No_of_Shots\"] \/ EPL[\"Goals\"])\nEPL['Goals_ratio']= EPL['Goals']\/EPL['Shots_per_game']\nEPL['Cards_Equivalence']=EPL['red_cards']+ EPL['yellow_cards']+EPL['red_cards']\n\nEPL=EPL[['Team', 'Tournament','No_of_game','Goals','Goals_per_game','No_of_Shots','Shots_per_game','Possession%', 'Pass%', 'yellow_cards',\n       'red_cards','Cards_Equivalence','No_of_AerialsWon','AerialsWon','Shots_per_Goal', 'Goals_ratio','Rating']]\n\nEPL.head(10)","a01a248d":"EPL[['Team','Goals']].sort_values(by='Goals',ascending=False)[:10].plot(kind='bar',x='Team',y=\"Goals\",cmap='Set1')\nplt.title(\"Total Goals of top 10 EPL Teams\",fontsize=15)","9748417b":"plt.figure(figsize=(12,8))\nsns.heatmap(EPL.corr(),annot=True,cmap='Pastel1')","6897de10":"EPL.describe()","90b9b699":"sns.jointplot(x='Shots_per_game',y='Team',data=EPL)\nplt.title(\"Shots per game vs Team in EPL\",fontsize=20,loc=\"left\")","a18ac69c":"top_shots_pg=EPL[['Team','Goals','Shots_per_game']]\ntop_shots_pg.head()","6e452fab":"plt.figure(figsize=(16,8))\nsns.lineplot(x='Team',y='Goals',data=top_shots_pg[:10])\nplt.title(\"Line Plot for Goals vs Team in EPL\",fontsize=15)","7c1ba672":"plt.figure(figsize=(7,7))\nlabels = top_shots_pg.index\nplt.pie(x='Shots_per_game',data=top_shots_pg,labels='Team',startangle=90, autopct='%.1f%%')\nplt.title(\"Shots per game for EPL teams \\nin the premier league 2020\/21 full-season\", fontsize = 24) \n\nplt.tight_layout() \nplt.show()","5f9778f1":"plt.figure(figsize=(7,7))\nlabels = top_shots_pg.index\nplt.pie(x='Goals',data=top_shots_pg,labels='Team',startangle=90, autopct='%.1f%%')\nplt.title(\"Goals for EPL teams \\nin the premier league 2020\/21 full-season\", fontsize = 25) \n\nplt.tight_layout() \nplt.show()","d880ef1a":"Pclubs=EPL.sort_values(by='Possession%', ascending=False)\nPclubs = pd.DataFrame(Pclubs)\nPclub = Pclubs[[\"Team\",\"Tournament\",'Possession%',\"Rating\"]]\nPclub=Pclub.head(10)\nPclub","75e3d796":"plt.figure(figsize=(15,8))\nsns.barplot(x='Team',y='Possession%',data=Pclubs[:10],palette='Paired')\nplt.title(\"Top Possession Teams from EPL are\", fontsize=20)","5f8113e0":"sns.catplot(x='Goals',y='Shots_per_game',data=EPL[:10],hue=\"Team\")\nplt.title(\"Goals vs Shots Per Game Plot for Top 5 Teams\",fontsize=15)","3293f206":"plt.figure(figsize=(17,8))\nsns.barplot(x='Team',y='Goals_ratio',data=EPL[:10])\nplt.title(\" Goals scroed vs Shots taken per game ratio in EPL\",fontsize=15)","50f262e9":"plt.figure(figsize=(20,10))\nsns.boxplot(x='Team',y='Shots_per_game',data=EPL[:10])\n","477acf87":"sns.kdeplot(x='Pass%',data=EPL)","7f835e3d":"plt.figure(figsize=(6,6))\nsns.scatterplot(x='Possession%',y='Pass%',data=EPL[:10],hue='Team')\n\nplt.title(\"The Possession vs Pass Graph\",fontsize=15)","d65ecb71":"plt.figure(figsize=(13,13))\nEPL.sort_values(by='Rating',ascending=False)[:10].plot(kind='scatter',y='Team',x='Rating',cmap='twilight')\nplt.title(\"Top 10 rated teams in EPL\")","92a779f0":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(EPL.Team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('Rating.png')\nplt.show()","0af48393":"Liga = data.loc[data.Tournament=='LaLiga']\nLiga['No_of_game'] = Liga['Tournament'].apply(lambda x: int('34') if x == 'Bundesliga' else int('38'))\nLiga[\"Goals_per_game\"] = (Liga[\"Goals\"] \/ EPL[\"No_of_game\"])\nLiga[\"No_of_Shots\"] = round(Liga[\"Shots_per_game\"] * Liga[\"No_of_game\"])\nLiga[\"No_of_AerialsWon\"] = round(Liga[\"AerialsWon\"] * Liga[\"No_of_game\"])\nLiga[\"Shots_per_Goal\"] = (Liga[\"No_of_Shots\"] \/ Liga[\"Goals\"])\nLiga['Goals_ratio']= Liga['Goals']\/Liga['Shots_per_game']\nLiga['Cards_Equivalence']=Liga['red_cards']+ Liga['yellow_cards']+EPL['red_cards']\n\nLiga=Liga[['Team', 'Tournament','No_of_game','Goals','Goals_per_game','No_of_Shots','Shots_per_game','Possession%', 'Pass%', 'yellow_cards',\n       'red_cards','Cards_Equivalence','No_of_AerialsWon','AerialsWon','Shots_per_Goal', 'Goals_ratio','Rating']]\nLiga.head(10)","163eeb73":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(Liga.Team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('Rating.png')\nplt.show()","cbc0233f":"# UEFA Football Club 2020-21","3072c29e":"### 4.Data Visualization: Using plots to find relations between the features","c14c9c5a":"### 2.Loading the dataset","0959ff8e":"### 1.Importing Libraries","4bb63a82":"## Laliga","862c3524":"## Premier League","90d323fe":"# Breakdown of this notebook:","cc3b926f":"### 3.Data Cleaning:\n   Deleting redundant columns.\n   Dropping duplicates.\n   Cleaning individual columns.\n   Remove the NaN values from the dataset\n   Some Transformations","84291619":"### 5. Word cloud"}}