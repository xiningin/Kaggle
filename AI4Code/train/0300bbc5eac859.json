{"cell_type":{"afa33509":"code","6900522b":"code","f6467e59":"code","04ef9b83":"code","1d8dbacb":"code","b52a6fe4":"code","93a305e2":"code","424c6e8c":"code","4f2d4ea1":"code","3ed562ae":"code","f278564f":"code","c690444e":"code","503f289e":"code","da777e20":"code","5f9cadff":"code","7ffc9d24":"code","633a4492":"code","af5140dd":"code","a28460c9":"code","497ec2c1":"code","a49eb62e":"code","cb526529":"code","cd0db504":"code","0b306b89":"code","9aece845":"code","2bd30e4b":"code","75cc9dc6":"code","b4981e30":"code","e5a09bfb":"code","6aba06b8":"code","41d24e0e":"code","32bad979":"code","3cf4813a":"code","d372a8e8":"code","0704cce3":"code","6271a7e7":"code","df7f5143":"code","9a92141d":"code","6be7c68b":"markdown","f340b98a":"markdown","c10ed22e":"markdown","a3670d76":"markdown","2f18491d":"markdown","7c6b591a":"markdown","804306ed":"markdown"},"source":{"afa33509":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport xgboost\nimport lightgbm\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score","6900522b":"# load dataset\ndata=pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","f6467e59":"# check first 5 rows\ndata.head()","04ef9b83":"data.info()","1d8dbacb":"data.columns","b52a6fe4":"deathORalive = data.DEATH_EVENT.value_counts()\ndisplay(deathORalive)","93a305e2":"plt.figure(figsize = (10,6))\ndeathORalive.plot.pie(autopct = '%.1f', colors = ['powderblue', 'slateblue'])\nplt.title(\"DEATH_EVENT vlaue distribution pie chart\", pad = 20, fontdict = {'size' : 15, 'color' : 'darkblue', 'weight' : 'bold'})\nplt.show()","424c6e8c":"# co-relation with each others\ncorrMat = data.corr()\nfig, ax = plt.subplots(figsize = (20,20))\ncmap = sns.diverging_palette(230, 20, as_cmap = True)\nmask = np.triu(np.ones_like(corrMat, dtype = bool))\nsns.heatmap(corrMat, square = True, annot = False, linewidths = 1, cmap = cmap, mask = mask)","4f2d4ea1":"# Heatmap\nplt.figure(figsize=(10,10))\nsns.heatmap(data.corr(), vmin=-1, cmap='coolwarm', annot=True);","3ed562ae":"corr_matrix = data.corr()\nprint(corr_matrix[\"DEATH_EVENT\"].sort_values(ascending=False))","f278564f":"check1 = sns.PairGrid(data, hue=\"DEATH_EVENT\")\ncheck1.map_diag(sns.histplot)\ncheck1.map_offdiag(sns.scatterplot)\ncheck1.add_legend()","c690444e":"check2 = sns.PairGrid(data)\ncheck2.map_upper(sns.scatterplot)\ncheck2.map_lower(sns.kdeplot)\ncheck2.map_diag(sns.kdeplot, lw=3, legend=False)","503f289e":"visualize = sns.pairplot(data, hue=\"DEATH_EVENT\", palette=\"Set2\", diag_kind=\"kde\", height=2.5)","da777e20":"features=['time','ejection_fraction','serum_creatinine','diabetes']","5f9cadff":"X=data[features]\ny=data.DEATH_EVENT","7ffc9d24":"\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error as mse","633a4492":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3,random_state=0)","af5140dd":"accuracy_list=[]","a28460c9":"# logistic regression\n\nlog_reg = LogisticRegression()\nlog_reg.fit(X_train, y_train)\nlog_reg_pred = log_reg.predict(X_test)\nlog_reg_acc = accuracy_score(y_test, log_reg_pred)\naccuracy_list.append(100*log_reg_acc)\n","497ec2c1":"print(\"Accuracy of Logistic Regression is : \", \"{:.2f}%\".format(100* log_reg_acc))","a49eb62e":"# svc\n\nsv_clf = SVC()\nsv_clf.fit(X_train, y_train)\nsv_clf_pred = sv_clf.predict(X_test)\nsv_clf_acc = accuracy_score(y_test, sv_clf_pred)\naccuracy_list.append(100* sv_clf_acc)","cb526529":"print(\"Accuracy of SVC is : \", \"{:.2f}%\".format(100* sv_clf_acc))","cd0db504":"# K Neighbors Classifier\n\nkn_clf = KNeighborsClassifier(n_neighbors=6)\nkn_clf.fit(X_train, y_train)\nkn_pred = kn_clf.predict(X_test)\nkn_acc = accuracy_score(y_test, kn_pred)\naccuracy_list.append(100*kn_acc)","0b306b89":"print(\"Accuracy of K Neighbors Classifier is : \", \"{:.2f}%\".format(100* kn_acc))","9aece845":"# Decision Tree Classifier\n\ndt_clf = DecisionTreeClassifier(max_leaf_nodes=10, random_state=0, criterion='entropy')\ndt_clf.fit(X_train, y_train)\ndt_pred = dt_clf.predict(X_test)\ndt_acc = accuracy_score(y_test, dt_pred)\naccuracy_list.append(100*dt_acc)","2bd30e4b":"print(\"Accuracy of Decision Tree Classifier is : \", \"{:.2f}%\".format(100* dt_acc))","75cc9dc6":"# RandomForestClassifier\n\nr_clf = RandomForestClassifier(max_features=0.5, max_depth=15, random_state=1)\nr_clf.fit(X_train, y_train)\nr_pred = r_clf.predict(X_test)\nr_acc = accuracy_score(y_test, r_pred)\naccuracy_list.append(100*r_acc)","b4981e30":"print(\"Accuracy of Decision Tree Classifier is : \", \"{:.2f}%\".format(100* r_acc))","e5a09bfb":"# GradientBoostingClassifier\n\ngradientboost_clf = GradientBoostingClassifier(max_depth=2, random_state=1)\ngradientboost_clf.fit(X_train,y_train)\ngradientboost_pred = gradientboost_clf.predict(X_test)\ngradientboost_acc = accuracy_score(y_test, gradientboost_pred)\naccuracy_list.append(100*gradientboost_acc)","6aba06b8":"print( \"Accuracy of Gradient Boosting is : \", \"{:.2f}%\".format(100* gradientboost_acc))","41d24e0e":"# xgbrf classifier\n\nxgb_clf = xgboost.XGBRFClassifier(max_depth=3, random_state=1)\nxgb_clf.fit(X_train,y_train)\nxgb_pred = xgb_clf.predict(X_test)\nxgb_acc = accuracy_score(y_test, xgb_pred)\naccuracy_list.append(100*xgb_acc)","32bad979":"print( \"Accuracy of Gradient Boosting is : \", \"{:.2f}%\".format(100* xgb_acc))","3cf4813a":"#  lightgbm \n\nlgb_clf = lightgbm.LGBMClassifier(max_depth=2, random_state=4)\nlgb_clf.fit(X_train,y_train)\nlgb_pred = lgb_clf.predict(X_test)\nlgb_acc = accuracy_score(y_test, lgb_pred)\naccuracy_list.append(100*lgb_acc)","d372a8e8":"print( \"Accuracy of Gradient Boosting is : \", \"{:.2f}%\".format(100* lgb_acc))","0704cce3":"# CatBoostClassifier\n\ncat_clf = CatBoostClassifier()\ncat_clf.fit(X_train,y_train)\ncat_pred = cat_clf.predict(X_test)\ncat_acc = accuracy_score(y_test, cat_pred)\naccuracy_list.append(100*cat_acc)","6271a7e7":"print( \"Accuracy of Gradient Boosting is : \", \"{:.2f}%\".format(100* cat_acc))","df7f5143":"model_list = ['Logistic Regression', 'SVC','KNearestNeighbours', 'DecisionTree', 'RandomForest',\n              'GradientBooster', 'XGBRF','LGBM', 'CatBoostClassifier']","9a92141d":"plt.rcParams['figure.figsize']=20,8\nsns.set_style('darkgrid')\nax = sns.barplot(x=model_list, y=accuracy_list, palette = \"husl\", saturation =2.0)\nplt.xlabel('Classifier Models', fontsize = 20 )\nplt.ylabel('% of Accuracy', fontsize = 20)\nplt.title('Accuracy of different Classifier Models', fontsize = 20)\nplt.xticks(fontsize = 12, horizontalalignment = 'center', rotation = 8)\nplt.yticks(fontsize = 12)\nfor i in ax.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y = i.get_xy() \n    ax.annotate(f'{round(height,2)}%', (x + width\/2, y + height*1.02), ha='center', fontsize = 'x-large')\nplt.show()","6be7c68b":"###  Train Test Split","f340b98a":"* LGBMClassifier: 92.22%\n* Cat Boost Classifier: 88.89%\n* Gradient Booster Classifier: 87.78%\n* XGBRFClassifier: 87.78%\n* Random Forest Classifier: 87.78%\n* DecisionTreeClassifier: 86.67%\n* SVC: 85.56%\n* KNeighborsClassifier: 84.44%\n* Logistic Regression: 81.11%","c10ed22e":"# Heart Failure:\nHeart failure is a chronic, progressive condition in which the heart muscle is unable to pump enough blood to meet the body's needs for blood and oxygen. Basically, the heart can't keep up with its workload.\nThis dataset contains person's information like age ,sex , blood pressure, smoke, diabetes,ejection fraction, creatinine phosphokinase, serum_creatinine, serum_sodium, time and we have to predict their DEATH EVENT.","a3670d76":"# Data Modeling\n","2f18491d":"# Import libraries:","7c6b591a":"## various model predictions:","804306ed":"   ![](https:\/\/image.shutterstock.com\/image-illustration\/heart-failure-260nw-293567960.jpg)"}}