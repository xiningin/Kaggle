{"cell_type":{"15338e82":"code","84b577fa":"code","aa839d55":"code","20a488d2":"code","7cfe173a":"code","6edc3940":"code","84f6dd76":"code","defd19ba":"code","675e8973":"code","e642d43d":"code","3018f519":"code","8722be71":"code","d82a533a":"code","f834b34c":"code","9e7dcbba":"code","e815f678":"code","5d5d905b":"code","5245ea05":"code","86f8d0b4":"code","db15860e":"code","d8410e48":"code","e9d6c715":"markdown","49c5de72":"markdown","729af290":"markdown","1de11c1e":"markdown","0dfbf912":"markdown","7bba2796":"markdown","55a84f7c":"markdown","d4801b65":"markdown","70c68ad7":"markdown","34c8d1e8":"markdown","a7af1ae1":"markdown","2d507133":"markdown","267b196f":"markdown","f41cf4c2":"markdown","f4a17f11":"markdown","2d3bfd84":"markdown","8d8b9b58":"markdown","6a5e807a":"markdown","ed64f6e4":"markdown","25c120e4":"markdown","7bee8ba8":"markdown","be84a59e":"markdown","5b691056":"markdown","f63f43ba":"markdown","e80b87ed":"markdown","d622c8b6":"markdown","01f513e4":"markdown","67eadfed":"markdown","0e94a4a9":"markdown","b3ecaac6":"markdown","96406b65":"markdown"},"source":{"15338e82":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.offline as py\nimport plotly.figure_factory as ff\n%matplotlib inline","84b577fa":"df=pd.read_csv('..\/input\/Mall_Customers.csv')\ndf.head()","aa839d55":"df.info()","20a488d2":"df.describe()","7cfe173a":"print(\"Mean of Annual Income (k$) of Female:\",df['Annual Income (k$)'].loc[df['Gender'] == 'Female'].mean())\nprint(\"Mean of Annual Income (k$) of Male:\",df['Annual Income (k$)'].loc[df['Gender'] == 'Male'].mean())","6edc3940":"plt.figure(figsize=(10,5))\nsns.heatmap(df.corr(),annot=True,cmap='hsv',fmt='.2f',linewidths=2)\nplt.show()","84f6dd76":"df.groupby('Gender').mean()","defd19ba":"import plotly\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\ncol = \"Gender\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ncolors = ['gold', 'mediumturquoise']\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0],marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nlayout = {'title': 'Gender(Male, Female)'}\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","675e8973":"%matplotlib inline\nplt.figure(figsize=(14,5))\nplt.subplot(1,3,1)\nsns.distplot(df['Age'])\nplt.title('Distplot of Age')\nplt.subplot(1,3,2)\nsns.distplot(df['Spending Score (1-100)'],hist=False)\nplt.title('Distplot of Spending Score (1-100)')\nplt.subplot(1,3,3)\nsns.distplot(df['Annual Income (k$)'])\nplt.title('Annual Income (k$)')\nplt.show()","e642d43d":"x=df\ncol='Age'\nv1=x[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\ntrace1 = go.Bar(x=v1[col], y=v1[\"count\"], name=\"0\", marker=dict(color=\"rgb(63, 72, 204)\"))\ny = [trace1]\nlayout={'title':\"Age count \",'xaxis':{'title':\"Age\"},'yaxis':{'title':\"Count\"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='presentation'\niplot(fig)","3018f519":"d1=x[x['Gender']=='Male']\nd2=x[x['Gender']=='Female']\ncol='Age'\nv1=d1[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\nv2=d2[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Scatter(x=v1[col], y=v1[\"count\"], name=\"Male\", marker=dict(color=\"#ff7f0e\"))\ntrace2 = go.Scatter(x=v2[col], y=v2[\"count\"], name=\"Female\", marker=dict(color='#a678de'))\ny = [trace1, trace2]\nlayout={'title':\"Age count [[ Male vs Female ]] \",'xaxis':{'title':\"Age\"},'yaxis':{'title':\"Count\"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='presentation'\niplot(fig)","8722be71":"col='Spending Score (1-100)'\nv2=x[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Bar(x=v2[col], y=v2[\"count\"], name=\"Emb\",  marker=dict(color=\"#e377c2\"))\nlayout={'title':\"Spending Score (1-100)\",'xaxis':{'title':\"spending score\"},'yaxis':{'title':\"Count\"}}\nfig = go.Figure(data=[trace1], layout=layout)\nfig.layout.template='presentation'\niplot(fig)","d82a533a":"col='Spending Score (1-100)'\nv1=d1[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\nv2=d2[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Scatter(x=v1[col], y=v1[\"count\"], name=\"Male\", marker=dict(color=\"#d62728\"),text= df['Age'])\ntrace2 = go.Scatter(x=v2[col], y=v2[\"count\"], name=\"Female\", marker=dict(color='rgb(63, 72, 204)'),text= df['Age'])\ny = [trace1, trace2]\nlayout={'title':\"Spending score [[ Male vs Female ]] with their Age\",'xaxis':{'title':\"spending acore\"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='plotly_dark'\niplot(fig)","f834b34c":"col='Annual Income (k$)'\nv2=x[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Bar(x=v2[col], y=v2[\"count\"], name=\"Emb\",  marker=dict(color=\"#6ad49b\"))\nlayout={'title':\"Annual Income in k$\",'xaxis':{'title':\"Anual income\"},'yaxis':{'title':\"Count\"}}\nfig = go.Figure(data=[trace1], layout=layout)\nfig.layout.template='presentation'\niplot(fig)","9e7dcbba":"d1=x[x['Gender']=='Male']\nd2=x[x['Gender']=='Female']\ncol='Spending Score (1-100)'\nv1=d1[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\nv2=d2[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Scatter(x=v1[col], y=v1[\"count\"], name=\"Male\", marker=dict(color=\"#17becf\"),text= df['Annual Income (k$)'])\ntrace2 = go.Scatter(x=v2[col], y=v2[\"count\"], name=\"Female\", marker=dict(color='#bcbd22'),text= df['Annual Income (k$)'])\ny = [trace1, trace2]\nlayout={'title':\"Spending score [[ Male vs Female ]] with their Anual income in k$\",'xaxis':{'title':\"spending acore\"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='plotly_dark'\niplot(fig)","e815f678":"col='Annual Income (k$)'\nv1=d1[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\nv2=d2[col].value_counts().reset_index()\nv2=v2.rename(columns={col:'count','index':col})\nv2['percent']=v2['count'].apply(lambda x : 100*x\/sum(v2['count']))\nv2=v2.sort_values(col)\ntrace1 = go.Scatter(x=v1[col], y=v1[\"count\"], name=\"Male\", marker=dict(color=\"#17becf\"),text= df['Spending Score (1-100)'])\ntrace2 = go.Scatter(x=v2[col], y=v2[\"count\"], name=\"Female\", marker=dict(color='#d62728'),text= df['Spending Score (1-100)'])\ny = [trace1, trace2]\nlayout={'title':\"Anual income[Male vs Female] with Spending score \",'xaxis':{'title':\"Anual income\"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='presentation'\niplot(fig)","5d5d905b":"col='Annual Income (k$)'\ncol1='Spending Score (1-100)'\nv1=x[col].value_counts().reset_index()\nv1=v1.rename(columns={col:'count','index':col})\nv1['percent']=v1['count'].apply(lambda x : 100*x\/sum(v1['count']))\nv1=v1.sort_values(col)\nv2=x[col1].value_counts().reset_index()\nv2=v2.rename(columns={col1:'count1','index':col1})\nv2['percent1']=v2['count1'].apply(lambda x : 100*x\/sum(v2['count1']))\nv2=v2.sort_values(col1)\ntrace1 = go.Scatter(x=v1[col], y=v1[\"count\"], name=\"Anual income\", marker=dict(color=\"#6ad49b\"))\ntrace2 = go.Scatter(x=v2[col1], y=v2[\"count1\"], name=\"spending score\", marker=dict(color='rgb(63, 72, 204)'))\ny = [trace1, trace2]\nlayout={'title':\"Anual income,Spending score [Male vs Female]\",'xaxis':{'title':\"spending score \/\/ Anual income \"}}\nfig = go.Figure(data=y, layout=layout)\nfig.layout.template='presentation'\niplot(fig)","5245ea05":"%matplotlib inline\nimport scipy.cluster.hierarchy as sch\nX=df.iloc[:, [3,4]].values\nplt.figure(figsize=(25,12))\ndendrogram=sch.dendrogram(sch.linkage(X,method = 'ward'))\nplt.title('Dendrogram plot')\nplt.show()","86f8d0b4":"from sklearn.cluster import KMeans\nwcss=[]\nfor i in range(1,11):\n    kmeans=KMeans(n_clusters=i,init='k-means++',max_iter=300,n_init=10,random_state=0)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1,11),wcss)\nplt.title('Elbow Curve')\nplt.show() ","db15860e":"kmeans=KMeans(n_clusters=5,init='k-means++',max_iter=300,n_init=10,random_state=0)\ny_kmeans=kmeans.fit_predict(X)","d8410e48":"#Visualizing all the clusters \nplt.figure(figsize=(8,5))\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'black', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","e9d6c715":"### How the K-means algorithm works\nTo process the learning data, the K-means algorithm in data mining starts with a first group of randomly selected centroids, which are used as the beginning points for every cluster, and then performs iterative (repetitive) calculations to optimize the positions of the centroids  \n> It halts creating and optimizing clusters when either:\n1. The centroids have stabilized \u2014 there is no change in their values because the clustering has been successful.\n1. The defined number of iterations has been achieved.","49c5de72":" Annual Income with Spending Score forms together an interesting picture, look at it later. Age and Annual Income distribution don't seems like normal. They are both shifted to left. Spending Score, at first glance, has too large tails to be normal. But remember, that these conclusions based on histograms, and they can change very high by switch number of bins. So, plot in addition kdeplot from seaborn:","729af290":"**Hierarchical clustering** is where you build a cluster tree (a dendrogram) to represent data, where each group (or \u201cnode\u201d) links to two or more successor groups. The groups are nested and organized as a tree, which ideally ends up as a meaningful classification scheme.\nEach node in the cluster tree contains a group of similar data; Nodes group on the graph next to other, similar nodes. Clusters at one level join with clusters in the next level up, using a degree of similarity; The process carries on until all nodes are in the tree, which gives a visual snapshot of the data contained in the whole set. The total number of clusters is not predetermined before you start the tree creation.","1de11c1e":"## Benefits of customer segmentation","0dfbf912":"**It is clear from the figure that we should take the number of clusters equal to 5, as the slope of the curve is not steep enough after it.**","7bba2796":"### To implement K-Means clustering, we need to look at the Elbow Method.\nThe **Elbow method** is a method of interpretation and validation of consistency within-cluster analysis designed to help to find the appropriate number of clusters in a dataset.\nThe following figure demonstrates the elbow method :","55a84f7c":"Here we plot the anual income and spending score of male and female and conclude that those female whose anual income in between 40 to 85k in dollar there spending score is also heigher. The highest spending score of a male is 73 and the highest anual income is 137k$.","d4801b65":"## Dendrogram Plot\nA **dendrogram** is a diagram that shows the **hierarchical** relationship between objects. It is most commonly created as an output from **hierarchical clustering**. The main use of a dendrogram is to work out the best way to allocate objects to clusters. The dendrogram below shows the hierarchical clustering of six observations shown to on the scatterplot to the left. (Dendrogram is often miswritten as dendogram.)","70c68ad7":"In the above plot we see that more than 50% are females in this dataset and remaing are male. So we say that females are visiting malls more than male.","34c8d1e8":"### Analyzing the Results\n* We can see that the mall customers can be broadly grouped into 5 groups based on their purchases made in the mall.\nIn cluster 4(yellow colored) we can see people have low annual income and low spending scores, this is quite reasonable as people having low salaries prefer to buy less, in fact, these are the wise people who know how to spend and save money. The shops\/mall will be least interested in people belonging to this cluster.\n* In cluster 2(blue colored) we can see that people have low income but higher spending scores, these are those people who for some reason love to buy products more often even though they have a low income. Maybe it\u2019s because these people are more than satisfied with the mall services. The shops\/malls might not target these people that effectively but still will not lose them.\n* In cluster 5(pink colored) we see that people have average income and an average spending score, these people again will not be the prime targets of the shops or mall, but again they will be considered and other data analysis techniques may be used to increase their spending score.\n* In cluster 1(red-colored) we see that people have high income and high spending scores, this is the ideal case for the mall or shops as these people are the prime sources of profit. These people might be the regular customers of the mall and are convinced by the mall\u2019s facilities.\n* In cluster 3(green colored) we see that people have high income but low spending scores, this is interesting. Maybe these are the people who are unsatisfied or unhappy by the mall\u2019s services. These can be the prime targets of the mall, as they have the potential to spend money. So, the mall authorities will try to add new facilities so that they can attract these people and can meet their needs.","a7af1ae1":"# Advantages\n\n1) Fast, robust and easier to understand.\n\n2) Relatively efficient: O(tknd), where n is # objects, k is # clusters, d is # dimension of each object, and t  is # iterations. Normally, k, t, d << n.\n\n3) Gives best result when data set are distinct or well separated from each other.\n\n","2d507133":"1. The centroids of the K clusters, which can be used to label new data\n2. Labels for the training data (each data point is assigned to a single cluster)","267b196f":"* By enabling companies to target specific groups of customers, a customer segmentation model allows for the effective allocation of marketing resources and the maximization of cross- and up-selling opportunities.\n* When a group of customers is sent personalized messages as part of a marketing mix that is designed around their needs, it's easier for companies to send those customers special offers meant to encourage them to buy more products. Customer segmentation can also improve customer service and assist in customer loyalty and retention. \n* As a by-product of its personalized nature, marketing materials sent out using customer segmentation tend to be more valued and appreciated by the customer who receives them as opposed to impersonal brand messaging that doesn't acknowledge purchase history or any kind of customer relationship.\n* **>>** Other benefits of customer segmentation include staying a step ahead of competitors in specific sections of the market and identifying new products that existing or potential customers could be interested in or improving products to meet customer expectations.","f41cf4c2":"## I hope this kernel is helpfull for you **-->>** upvote will appreciate me for further work.","f4a17f11":"# customer segmentation","2d3bfd84":"Here we have the following features :\n1. CustomerID: It is the unique ID given to a customer\n2. Gender: Gender of the customer\n3. Age: The age of the customer\n4. Annual Income(k$): It is the annual income of the customer\n5. Spending Score: It is the score(out of 100) given to a customer by the mall authorities, based on the money spent and the behavior of the customer.","8d8b9b58":"## Importing Libraries.","6a5e807a":"## Visualization","ed64f6e4":"# Introduction To K-Means Clustering","25c120e4":"The spending score of most of the females lies between the 35 and 52 and also there age is in between 18 to 35 years age. In the given dataset the no. of data of female is more than male so we did not exactly find the status of man visiting mall. By viewing these plots we conclude that male did not have much spending score than female because they did not visit mall frequently.","7bee8ba8":"In the above plot we plot the count of spending score here we see that most of the spending score skweed between 40 to 60. There are total of 8 people who have spending score 42 and 7 people have 55.","be84a59e":"The K-means clustering algorithm is used to find groups which have not been explicitly labeled in the data. This can be used to confirm business assumptions about what types of groups exist or to identify unknown groups in complex data sets. Once the algorithm has been run and the groups are defined, any new data can be easily assigned to the correct group.","5b691056":"<img src=\"http:\/\/www.kesionmalaysia.com.my\/customerdata\/images\/main.jpg\" style=\"width: 950px;\"\/>","f63f43ba":"Here we plot the spending score of male and female with their spending score such as the highest peak say that there are 7 females who have the spending score is 42 and anual income is 25k$. \n","e80b87ed":"By looking at the above graph-, It can be seen that the Ages from 27 to 39 are very much frequent but there is no clear pattern, we can only find some group wise patterns such as the the older age groups are lesser frequent in comparison. Interesting Fact, There are equal no. of Visitors in the Mall for the Agee 18 and 67. People of Age 55, 56, 69, 64 are very less frequent in the Malls. People at Age 32 are the Most Frequent Visitors in the Mall.","d622c8b6":"K-means clustering is a type of unsupervised learning, which is used when you have unlabeled data (i.e., data without defined categories or groups). The goal of this algorithm is to find groups in the data, with the number of groups represented by the variable K. The algorithm works iteratively to assign each data point to one of K groups based on the features that are provided. Data points are clustered based on feature similarity. The results of the K-means clustering algorithm are:","01f513e4":"Companies employing **customer segmentation** operate under the fact that every customer is different and that their marketing efforts would be better served if they target specific, smaller groups with messages that those consumers would find relevant and lead them to buy something. Companies also hope to gain a deeper understanding of their customers' preferences and needs with the idea of discovering what each segment finds most valuable to more accurately tailor marketing materials toward that segment.","67eadfed":"Malls or shopping complexes are often indulged in the race to increase their customers and hence making huge profits. To achieve this task machine learning is being applied by many stores already.\nIt is amazing to realize the fact that how machine learning can aid in such ambitions. The shopping complexes make use of their customers\u2019 data and develop ML models to target the right ones. This not only increases sales but also makes the complexes efficient.","0e94a4a9":"Here we see that between the age of 23 and 50 females visits Mall frequently and after the age of 50 males visit mall frequently. In the above plot Overall we see that feamles vist the mall more than males.","b3ecaac6":"**Market segmentation** is the activity of dividing a broad consumer or business market, normally consisting of existing and potential customers, into sub-groups of consumers based on some type of shared characteristics","96406b65":"There are total 12 people who have the anual income 54 and 78k in dollar,very few people have the income ober 100k$, the highest anual income is 137k n dollar and both of them are male."}}