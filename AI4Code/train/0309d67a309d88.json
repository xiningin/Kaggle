{"cell_type":{"8059e439":"code","a0e58fee":"code","92954d03":"code","3dc81e36":"code","16ea2bb4":"code","3e51d13b":"code","7d4e37b3":"code","a4f9c0f9":"code","00f6ea47":"code","fc48775c":"code","851a4905":"code","0fc5c9c4":"code","e499d002":"code","e6db9f46":"code","f1670032":"code","ce9650bb":"code","44fe6a0a":"markdown","001e0b9b":"markdown","7e838e4b":"markdown","fbdf6f7c":"markdown","8a9a583c":"markdown","9a1d25b5":"markdown","7fb8bf16":"markdown","0743a171":"markdown","3f72db1c":"markdown","ed4bf6dd":"markdown","d90a8b91":"markdown","7defa516":"markdown","01235bc8":"markdown","d183a415":"markdown","57d95be4":"markdown","70cdb3dc":"markdown","31ec2a94":"markdown","9bf73cb6":"markdown","fb9bb5be":"markdown","b729f353":"markdown"},"source":{"8059e439":"!pip install greykite","a0e58fee":"!pip install --force-reinstall pandas==1.2.4","92954d03":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/cryptocurrencypricehistory'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3dc81e36":"from collections import defaultdict\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\nimport plotly\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\n\npyo.init_notebook_mode()\n\nfrom greykite.common.data_loader import DataLoader\nfrom greykite.framework.templates.autogen.forecast_config import ForecastConfig\nfrom greykite.framework.templates.autogen.forecast_config import MetadataParam\nfrom greykite.framework.templates.forecaster import Forecaster\nfrom greykite.framework.templates.model_templates import ModelTemplateEnum\nfrom greykite.framework.utils.result_summary import summarize_grid_search_results\n\n# Loads dataset into pandas DataFrame\n\ndf = pd.read_csv('\/kaggle\/input\/cryptocurrencypricehistory\/coin_Dogecoin.csv')\n\n\nmetadata = MetadataParam(\n time_col=\"Date\",   # ----> name of the time column (\"date\" in example above)\n value_col=\"High\",  # ----> name of the value column (\"sessions\" in example above)\n freq=\"D\"           # ----> H\" for hourly, \"D\" for daily, \"W\" for weekly, etc.\n                    # ----> Any format accepted by `pandas.date_range`\n)","16ea2bb4":"forecaster = Forecaster()  # Creates forecasts and stores the result\nresult = forecaster.run_forecast_config(  # result is also stored as `forecaster.forecast_result`.\n df=df,\n config=ForecastConfig(\n     model_template=ModelTemplateEnum.SILVERKITE.name,\n     forecast_horizon=365,  # forecasts 365 steps ahead\n     coverage=0.95,         # 95% prediction intervals\n     metadata_param=metadata\n )\n)","3e51d13b":"ts = result.timeseries\nfig = ts.plot()\nplotly.io.show(fig)","7d4e37b3":"grid_search = result.grid_search\ncv_results = summarize_grid_search_results(\n    grid_search=grid_search,\n    decimals=2,\n    # The below saves space in the printed output. Remove to show all available metrics and columns.\n    cv_report_metrics=None,\n    column_order=[\"rank\", \"mean_test\", \"split_test\", \"mean_train\", \"split_train\", \"mean_fit_time\", \"mean_score_time\", \"params\"])\n# Transposes to save space in the printed output\ncv_results[\"params\"] = cv_results[\"params\"].astype(str)\ncv_results.set_index(\"params\", drop=True, inplace=True)\ncv_results.transpose()","a4f9c0f9":"backtest = result.backtest\nfig = backtest.plot()\nplotly.io.show(fig)","00f6ea47":"backtest_eval = defaultdict(list)\nfor metric, value in backtest.train_evaluation.items():\n    backtest_eval[metric].append(value)\n    backtest_eval[metric].append(backtest.test_evaluation[metric])\nmetrics = pd.DataFrame(backtest_eval, index=[\"train\", \"test\"]).T\nmetrics","fc48775c":"forecast = result.forecast\nfig = forecast.plot()\nplotly.io.show(fig)","851a4905":"forecast.df.head().round(2)","0fc5c9c4":"fig = forecast.plot_components()\nplotly.io.show(fig)","e499d002":"summary = result.model[-1].summary()  # -1 retrieves the estimator from the pipeline\nprint(summary)","e6db9f46":"model = result.model\nmodel","f1670032":"future_df = result.timeseries.make_future_dataframe(\n    periods=4,\n    include_history=False)\nfuture_df","ce9650bb":"model.predict(future_df)","44fe6a0a":"<a id='11'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\"><b>11. Printing the summary<\/b><\/h1>\n  <\/div>\n<\/div>","001e0b9b":"<center><img src=\"https:\/\/warehouse-camo.ingress.cmh1.psfhosted.org\/a500025c0abbda3915b6ec7c0723ce36f189eed8\/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c696e6b6564696e2f677265796b6974652f6d61737465722f4c4f474f2d43382e706e67\" alt=\"Greykite\" class=\"center\" style = \"\n  width: 60%;\n  height: 60%;\n  background-image: url('img_flowers.jpg');\n  align: center;\n  background-size: 100% 100%;\"><\/center>\n","7e838e4b":"<a id='10'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n    \n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\"><b>10. Plotting the different components \ud83d\udcca<\/b><\/h1>\n  <\/div>\n<\/div>","fbdf6f7c":"<a id='5'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">5. <b>Plotting the results using the Plotly module  \ud83d\udcc8<\/b><\/h1>\n  <\/div>\n<\/div>","8a9a583c":"<a id='3'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">3. <b>Importing all the required libraries.<\/b> <\/h1>\n  <\/div>\n<\/div>","9a1d25b5":"<a id='2'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1de9b6 ;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\"><b>Hooray!!! That's it... \n          We learnt how to use Greykite library for time series analysis and forecasting. This is my first ever notebook. Kindly upvote \ud83d\udc4d the notebook if you liked the content. Thank you. \ud83d\ude4f<\/b><\/h1>\n  <\/div>\n<\/div>","7fb8bf16":"<div style=\"margin: 0px; padding: 10px; background-color: #ef9a9a ;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h2 style=\"color:white;text-align:center\">All the performance metrics such as Mean Absolute Percentage Error(MAPE), Mean Fit Time, Mean Score Time can be listed.<\/h2>\n  <\/div>\n<\/div>","0743a171":"<a id='2'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">2. <b>Re-installing the pandas to avoid some runtime error...<\/b><\/h1>\n  <\/div>\n<\/div>","3f72db1c":"<a id='9'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">9. <b>Analyse the forecast Dataframe<\/b><\/h1>\n  <\/div>\n<\/div>","ed4bf6dd":"<div style=\"margin: 0px; padding: 10px; background-color: #ef9a9a ;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h2 style=\"color:white;text-align:center\">In the above cell, the metrics for both train and test data are listed.<\/h2>\n  <\/div>\n<\/div>","d90a8b91":"<a id='6'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">6. <b>Performing Grid Search for hyper-parameter optimization<\/b><\/h1>\n  <\/div>\n<\/div>","7defa516":"<div style=\"margin: 0px; padding: 10px; background-color: #43a047;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px;\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white; text-align:center\"> Time Series Forecasting of DOGECOIN using GREYKITE <\/h1>\n      \n<!--       <div style=\"color:white\">I am a square root.<\/div> -->\n<!--       <h1>$\\sqrt{4}$<\/h1> -->\n  <\/div>\n<\/div>","01235bc8":"<a id='4'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">4. <b>Forecaster<\/b><\/h1>\n  <\/div>\n  <div style=\"color:white;text-align:center\">The core module which performs the forecasting of the values for the given time series<\/div>\n<\/div>","d183a415":"<div style=\"margin: 0px; padding: 10px; background-color: #ef9a9a ;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h2 style=\"color:white;text-align:center\">Remarks: The model fails to recognise the sudden changes in the trend.<\/h2>\n  <\/div>\n<\/div>","57d95be4":"<a id='0'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px;\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white; text-align:center\">0. References \ud83d\udcd3<\/h1>\n  <\/div>\n  \n  <div style=\"margin: 0px; padding: 10px; background-color: #ffffff;\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n        border-radius:2px; text-align:left\">\n    <h5><a href=https:\/\/linkedin.github.io\/greykite\/docs\/0.1.0\/html\/index.html>1. Greykite Documentation <\/a><\/h5>\n  <\/div>\n<\/div>","70cdb3dc":"<a id='1'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px;\n            text-align:center\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white\">1. Installing the Greykite package \ud83d\udcd7<\/h1>\n  <\/div>\n<\/div>","31ec2a94":"<a id='7'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">7. <b>Plotting the Backtest<\/b><\/h1>\n  <\/div>\n<\/div>","9bf73cb6":"<div style=\"margin: 0px; padding: 10px; background-color: #00897b;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px;\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white; text-align:center\">Table of Contents<\/h1>\n  <\/div>\n  \n  <div style=\"margin: 0px; padding: 10px; background-color: #ffffff;\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n        border-radius:2px; text-align:left\">\n    <h5><a href=\"#0\">0. References<\/a><\/h5>\n    <h5><a href=\"#1\">1. Installing the Greykite package<\/a><\/h5>\n    <h5><a href=\"#2\">2. Re-installing the pandas<\/a><\/h5>\n    <h5><a href=\"#3\">3. Importing all the required libraries.<\/a><\/h5>\n    <h5><a href=\"#4\">4. Forecaster<\/a><\/h5>\n    <h5><a href=\"#5\">5. Plotting the results using the Plotly module<\/a><\/h5>\n    <h5><a href=\"#6\">6. Performing Grid Search for hyper-parameter optimization<\/a><\/h5>\n    <h5><a href=\"#7\">7. Plotting the Backtest<\/a><\/h5>\n    <h5><a href=\"#8\">8. Listing the different evaluation metrics<\/a><\/h5>\n    <h5><a href=\"#9\">9. Analyse the forecast Dataframe<\/a><\/h5>\n    <h5><a href=\"#10\">10. Plotting the different componenets<\/a><\/h5>\n    <h5><a href=\"#11\">11. Printing the summary<\/a><\/h5>\n    <h5><a href=\"#12\">12. Forecasting for the values for the future time periods<\/a><\/h5>\n    \n  <\/div>\n<\/div>","fb9bb5be":"<a id='8'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1e88e5;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\">8. <b>Listing the different evaluation metrics<\/b><\/h1>\n  <\/div>\n\n<\/div>","b729f353":"<a id='12'><\/a>\n<div style=\"margin: 0px; padding: 10px; background-color: #1de9b6  ;\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n            border-radius:2px\">\n  <div style=\"margin: 0; padding: 0; width: 100%\">\n      <h1 style=\"color:white;text-align:center\"><b>12. Forecasting for the values for the future time periods \ud83d\udcc8<\/b><\/h1>\n  <\/div>\n<\/div>"}}