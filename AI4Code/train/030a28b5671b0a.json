{"cell_type":{"5769b478":"code","9e59cacf":"code","2ad0bf37":"markdown"},"source":{"5769b478":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9e59cacf":"import pandas as pd  \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score ,confusion_matrix\npd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\ndf = pd.read_csv('..\/input\/titanic\/train.csv')\ndf = df.drop(['PassengerId','Name','Ticket','Fare','Cabin'], axis=1)\n\ndf['Sex']=df['Sex'].replace('male',0)\ndf['Sex']=df['Sex'].replace('female',1)\ndf['Embarked']=df['Embarked'].replace('S',1)\ndf['Embarked']=df['Embarked'].replace('C',2)\ndf['Embarked']=df['Embarked'].replace('Q',3)\n\ndf['Age']=df['Age'].fillna(0)\ndf['Sex']=df['Sex'].fillna(0)\ndf['Embarked']=df['Embarked'].fillna(0)\n\n\ny = df['Survived']\nx = df.drop(['Survived'], axis=1)\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size= 0.25,random_state=27)\n\n# print(x_train)\n# print(x_test)\n# print(y_train)\n# print(y_test)\n\nclf = MLPClassifier(hidden_layer_sizes=(100), max_iter=1000, alpha=0.0001,solver='lbfgs', verbose=10,  random_state=21,tol=0.000000001)\n\nclf.fit(x_train, y_train)\ny_pred = clf.predict(x_test)\n#print(y_pred[:10])\n#print(y_test[:10])\n\nprint('Accuracy  :',accuracy_score(y_test, y_pred))\n# cm = confusion_matrix(y_test, y_pred)\n# cm\n\n# sns.heatmap(cm, center=True)\n# plt.show()\n\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\nPassengerId=df_test['PassengerId']\ndf_test = df_test.drop(['PassengerId','Name','Ticket','Fare','Cabin'], axis=1)\n\ndf_test['Sex']=df_test['Sex'].replace('male',0)\ndf_test['Sex']=df_test['Sex'].replace('female',1)\ndf_test['Embarked']=df_test['Embarked'].replace('S',1)\ndf_test['Embarked']=df_test['Embarked'].replace('C',2)\ndf_test['Embarked']=df_test['Embarked'].replace('Q',3)\n\ndf_test['Age']=df_test['Age'].fillna(0)\ndf_test['Sex']=df_test['Sex'].fillna(0)\ndf_test['Embarked']=df_test['Embarked'].fillna(0)\n\n# print(df_test)\n\ny_Pred=clf.predict((df_test))\n\ncm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, center=True)\nplt.show()\n\n\n\noutput=pd.DataFrame({'PassengerId':PassengerId,'Survived':y_Pred})\n#print(output)\n\n\n\n#output=pd.DataFrame(y_Pred)\n\n \noutput.to_csv('newsubmission.csv', index=False)\n\n\nprint(\"Your submission was successfully saved!\")\n","2ad0bf37":"Use Neural Network to get survived person"}}