{"cell_type":{"d9641a5c":"code","53847bea":"code","4744a2d4":"code","30cc0710":"code","171e970d":"code","002a97a1":"code","66006f09":"code","ff6fa31b":"code","783f05cc":"code","cd9a2543":"code","e6d7d798":"code","5cae805b":"code","84424941":"code","62762b3d":"code","fc243d45":"code","71bff516":"code","e534cf89":"code","052129ba":"code","5e052ed5":"code","50960873":"code","bb132686":"code","d5b5a3ef":"code","9bdbd195":"code","90c32c10":"code","93738a82":"code","b2dba274":"code","9ffb0e20":"code","ef5451ce":"code","294a9600":"code","35bb08ae":"code","df2fbd12":"markdown","ad26b92c":"markdown","776b3b6c":"markdown","0f85eb6c":"markdown","f89f71a6":"markdown","a52d5d5d":"markdown","3e6992e5":"markdown","dde34786":"markdown"},"source":{"d9641a5c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","53847bea":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn import datasets","4744a2d4":"iris = datasets.load_iris()","30cc0710":"iris","171e970d":"type(iris)","002a97a1":"iris.keys()","66006f09":"iris['data']","ff6fa31b":"iris['target']","783f05cc":"iris['frame']","cd9a2543":"iris['target_names']","e6d7d798":"iris['DESCR']","5cae805b":"iris['feature_names']","84424941":"iris['filename']","62762b3d":"data = pd.DataFrame(iris.data, columns = iris.feature_names)","fc243d45":"data.head()","71bff516":"data.tail()","e534cf89":"data.shape","052129ba":"data.size","5e052ed5":"data.describe()","50960873":"#Finding null values in data  \ndata.isnull().sum()","bb132686":"sns.pairplot(data, kind=\"reg\")","d5b5a3ef":"# Finding the optimum number of clusters for k-means classification\n\nx = data.iloc[:, [0, 1, 2, 3]].values","9bdbd195":"x","90c32c10":"from sklearn.cluster import KMeans\nwcss = []","93738a82":"for i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","b2dba274":"wcss","9ffb0e20":"# Plotting the results onto a line graph, \n# `allowing us to observe 'The elbow'\nplt.plot(range(1, 11), wcss)\nplt.title('The elbow method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS') # Within cluster sum of squares\nplt.show()","ef5451ce":"# Applying kmeans to the dataset \/ Creating the kmeans classifier\nkmeans = KMeans(n_clusters = 3, init = 'k-means++',max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(x)","294a9600":"#Visualising the clusters\nplt.scatter(x[:,0], x[:,1])\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red')\nplt.show()","35bb08ae":"# Visualising the clusters - On the first two columns\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Iris-setosa')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Iris-versicolour')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],s = 100, c = 'green', label = 'Iris-virginica')\n\n# Plotting the centroids of the clusters\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'yellow', label = 'Centroids')\n\nplt.legend()","df2fbd12":"**From the above graph, the optimum clusters is where the elbow occurs, hence it is called 'The elbow method'.This is when the within cluster sum of squares (WCSS) doesn't decrease significantly with every iteration.**\n\n*From this we choose the number of clusters as 3.*","ad26b92c":"# <a id=\"ld\"> Load the iris dataset <\/a>","776b3b6c":"# Table of Contents \n\n* [Importing the libraries](#im)\n* [Load the iris dataset](#ld)\n* [Data Visualization](#dv)\n* [Finding the optimum number of clusters for K Means](#k)","0f85eb6c":"**Sinchana S R**","f89f71a6":"# <a id=\"dv\"> Data Visualization <\/a>","a52d5d5d":"# <a id=\"k\"> Finding the optimum number of clusters for K Means <\/a>\n\n**Determining the value of K**\n","3e6992e5":"# <a id=\"im\"> Importing the libraries <\/a>","dde34786":"# Prediction using Unsupervised ML\n\n**Task - From the given \u2018Iris\u2019 dataset, predict the optimum number of clusters and\nrepresent it visually.**"}}