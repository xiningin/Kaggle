{"cell_type":{"9fabac8c":"code","a9b6c571":"code","9a233eb6":"code","0d61eea9":"code","799b656f":"code","71c299ee":"code","bf6a04b4":"code","e2222e09":"code","67f557ed":"code","e15abfa6":"code","a79072f2":"code","3818376f":"code","e258ad34":"code","fbc5b2c7":"code","9141b0da":"code","dc378857":"code","f8d1358b":"code","4a26cd67":"markdown"},"source":{"9fabac8c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","a9b6c571":"df = pd.read_csv('..\/input\/articles\/articles.csv')","9a233eb6":"df.head()","0d61eea9":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfidf = TfidfVectorizer(max_df=0.95, min_df=2, stop_words='english')","799b656f":"# Document Term Matric\ndtm = tfidf.fit_transform(df['Article'])","71c299ee":"dtm","bf6a04b4":"from sklearn.decomposition import NMF","e2222e09":"nmf_model = NMF(n_components=7, random_state=42)","67f557ed":"nmf_model.fit(dtm)","e15abfa6":"tfidf.get_feature_names()[1029]","a79072f2":"# Grab the highest probability words per topic\nfor i, topic in enumerate(nmf_model.components_):\n    print(f'TOP 15 WORDS FOR TOPIC #{i}')\n    print([tfidf.get_feature_names()[index] for index in topic.argsort()[-15:]])\n    print('\\n\\n')","3818376f":"topic_results = nmf_model.transform(dtm)","e258ad34":"topic_results[0]","fbc5b2c7":"topic_results.shape","9141b0da":"# Probabilities belonging to a particular topic\nprint(topic_results[0])\n\nprint(f'-------------------------------------------------------------')\n# Percentages in a rounded off form\nprint(topic_results[0].round(2))","dc378857":"df['Topics'] = topic_results.argmax(axis=1)","f8d1358b":"df.head(20)","4a26cd67":"> `# PERFORMING NMF using sklearn`"}}