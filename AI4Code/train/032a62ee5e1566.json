{"cell_type":{"109c0f6e":"code","04e1c962":"code","5d503e24":"code","4756c4d8":"code","05600e83":"code","199b618d":"code","ca17ba85":"code","010c653a":"code","dae90c28":"code","501f8139":"code","903931b2":"code","84650622":"code","4a8b725d":"code","167b757b":"code","8982fced":"code","2a49efa6":"code","19330edb":"code","c6fd0bb8":"code","f65267c6":"code","6bf74019":"code","066730b1":"markdown","de71766b":"markdown","73dc539c":"markdown","e71e16f2":"markdown","d06bd3c6":"markdown","841f3e73":"markdown","e51c1a34":"markdown","6b7a9022":"markdown","4091d441":"markdown","82c64169":"markdown","2511818e":"markdown","72e29076":"markdown","6e9e5330":"markdown","8abb5281":"markdown"},"source":{"109c0f6e":"import pandas as pd\nimport os","04e1c962":"path = \"..\/input\/sales-data-for-eda\/Sales_Data\"\nfiles = [file for file in os.listdir(path) if not file.startswith('.')] # Ignore hidden files\n\nall_months_data = pd.DataFrame()\n\nfor file in files:\n    current_data = pd.read_csv(path+\"\/\"+file)\n    all_months_data = pd.concat([all_months_data, current_data])\n    \nall_months_data.to_csv(\"all_data.csv\", index=False)","5d503e24":"#all_data = pd.read_csv('\/kaggle\/input\/sales-analysis\/SalesAnalysis.csv')\nall_data = pd.read_csv(\"all_data.csv\")\nall_data.head()","4756c4d8":"# Find NAN\nnan_df = all_data[all_data.isna().any(axis=1)]\ndisplay(nan_df.head())\n\nall_data = all_data.dropna(how='all')\nall_data.head()","05600e83":"all_data = all_data[all_data['Order Date'].str[0:2]!='Or']","199b618d":"all_data['Quantity Ordered'] = pd.to_numeric(all_data['Quantity Ordered'])\nall_data['Price Each'] = pd.to_numeric(all_data['Price Each'])","ca17ba85":"all_data['Month'] = all_data['Order Date'].str[0:2]\nall_data['Month'] = all_data['Month'].astype('int32')\nall_data.head()","010c653a":"all_data['Month 2'] = pd.to_datetime(all_data['Order Date']).dt.month\nall_data.head()","dae90c28":"def get_city(address):\n    return address.split(\",\")[1].strip(\" \")\n\ndef get_state(address):\n    return address.split(\",\")[2].split(\" \")[1]\n\nall_data['City'] = all_data['Purchase Address'].apply(lambda x: f\"{get_city(x)}  ({get_state(x)})\")\nall_data.head()","501f8139":"all_data['Sales'] = all_data['Quantity Ordered'].astype('int') * all_data['Price Each'].astype('float')","903931b2":"all_data.groupby(['Month']).sum()","84650622":"import matplotlib.pyplot as plt\n\nmonths = range(1,13)\nprint(months)\n\nplt.bar(months,all_data.groupby(['Month']).sum()['Sales'])\nplt.xticks(months)\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('Month number')\nplt.show()","4a8b725d":"all_data.groupby(['City']).sum()","167b757b":"import matplotlib.pyplot as plt\n\nkeys = [city for city, df in all_data.groupby(['City'])]\n\nplt.bar(keys,all_data.groupby(['City']).sum()['Sales'])\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('Month number')\nplt.xticks(keys, rotation='vertical', size=8)\nplt.show()","8982fced":"all_data['Hour'] = pd.to_datetime(all_data['Order Date']).dt.hour\nall_data['Minute'] = pd.to_datetime(all_data['Order Date']).dt.minute\nall_data['Count'] = 1\nall_data.head()\n","2a49efa6":"keys = [pair for pair, df in all_data.groupby(['Hour'])]\n\nplt.plot(keys, all_data.groupby(['Hour']).count()['Count'])\nplt.xticks(keys)\nplt.grid()\nplt.show()\n\n# My recommendation is slightly before 11am or 7pm","19330edb":"df =all_data[all_data['Order ID'].duplicated(keep=False)] \n\ndf['Grouped']= df.groupby('Order ID')['Product'].transform(lambda x : ','.join(x))\n\ndf2= df[['Order ID','Grouped']].drop_duplicates()","c6fd0bb8":"from itertools import combinations\nfrom collections import Counter\n\ncount = Counter()\n\nfor row in df2['Grouped']:\n    row_list = row.split(',')\n    count.update(Counter(combinations(row_list,2)))\n\nfor key, value in count.most_common(10):\n    print (key, value)\n","f65267c6":"product_group = all_data.groupby('Product')\nquantity_ordered = product_group.sum()['Quantity Ordered']\n\nkeys = [pair for pair, df in product_group]\nplt.bar(keys, quantity_ordered)\nplt.xticks(keys, rotation='vertical', size=8)\nplt.show()","6bf74019":"prices = all_data.groupby('Product').mean()['Price Each']\n\nfig, ax1 = plt.subplots()\n\nax2 = ax1.twinx()\nax1.bar(keys, quantity_ordered, color='g')\nax2.plot(keys, prices, color='b')\n\nax1.set_xlabel('Product Name')\nax1.set_ylabel('Quantity Ordered', color='g')\nax2.set_ylabel('Price ($)', color='b')\nax1.set_xticklabels(keys, rotation='vertical', size=8)\n\nfig.show()","066730b1":"# Import necessary libraries","de71766b":"# Sales Analysis\n\nThere are 4 challenging question for Electronic Products.\n\nThanks @GitHub-keith\n","73dc539c":"# Add city column","e71e16f2":"\n# Clean up the data!\n\nThe first step in this is figuring out what we need to clean. I have found in practice, that you find things you need to clean as you perform operations and get errors. Based on the error, you decide how you should go about cleaning the data\n\n# Drop rows of NAN\n","d06bd3c6":"# Data Exploration!\n\n# Question 1: What was the best month for sales?how much was earned that month?","841f3e73":"# Augment data with additional columns\n\n# Add month column\n","e51c1a34":"# Question 2: What city sold the most product?\n","6b7a9022":"# Question 3: What time should we display advertisements to maximize likelihood of customer's buying product?","4091d441":"# Add month column (alternative method)","82c64169":"# Make columns correct type","2511818e":"# Question 4: What products are most often sold together?","72e29076":"# 1: we should  Merge data from each month into one CSV","6e9e5330":"# Get rid of text in order date column","8abb5281":"# What product sold the most? Why do you think it sold the most?"}}