{"cell_type":{"abebca94":"code","8e5094be":"code","7a9f9862":"code","34125bd4":"code","45e656db":"code","35f3b41e":"code","f00a5730":"code","6dda7e10":"code","c5d6d7ec":"code","bde310fc":"code","37faa83c":"code","1e2266bc":"code","69cfbce5":"code","d6033609":"code","91566149":"code","6c0401e6":"code","e8fbdfb7":"markdown","ac165b96":"markdown","e66963d8":"markdown","f3480f9c":"markdown","475c9368":"markdown","6616f32f":"markdown","be9785bf":"markdown","0c4d22d7":"markdown","2f1df7b5":"markdown","1c69f9d2":"markdown","f45fc276":"markdown","84ecce43":"markdown","08914cb0":"markdown","7d30620e":"markdown","a2495ebf":"markdown","25a3f642":"markdown"},"source":{"abebca94":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e5094be":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nfrom sklearn.linear_model import LogisticRegression\nimport joblib\n","7a9f9862":"diabetesDF = pd.read_csv('..\/input\/hmdata2019-lyh\/hm_data_2019_lyh.csv')\nprint(diabetesDF.head())","34125bd4":"diabetesDF.info() # output shown below","45e656db":"corr = diabetesDF.corr()\nprint(corr)\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns)\n\n#sns.pairplot(corr, vars = ['Glucose', 'BloodPressure'])\n","35f3b41e":"dfTrain = diabetesDF[:200]\ndfTest = diabetesDF[200:282]\ndfCheck = diabetesDF[282:15]","f00a5730":"trainLabel = np.asarray(dfTrain['DiabetesPredicted'])\ntrainData = np.asarray(dfTrain.drop(['Date','Time','DiabetesPredicted'],1))\ntestLabel = np.asarray(dfTest['DiabetesPredicted'])\ntestData = np.asarray(dfTest.drop(['Date','Time','DiabetesPredicted'],1))","6dda7e10":"means = np.mean(trainData, axis=0)\nstds = np.std(trainData, axis=0)\ntrainData = (trainData - means)\/stds\ntestData = (testData - means)\/stds\n# np.mean(trainData, axis=0) => check that new means equal 0\n# np.std(trainData, axis=0) => check that new stds equal 1","c5d6d7ec":"diabetesCheck = LogisticRegression()\ndiabetesCheck.fit(trainData, trainLabel)\n\n","bde310fc":"accuracy = diabetesCheck.score(testData, testLabel)\nprint(\"accuracy = \", accuracy * 100, \"%\")","37faa83c":"print(corr.columns[1:9])","1e2266bc":"coeff = list(diabetesCheck.coef_[0])\nlabels = list (corr.columns[1:10])\n\nfeatures = pd.DataFrame()\nfeatures['Features'] = labels\nfeatures['importance'] = coeff\nfeatures.sort_values(by=['importance'], ascending=True, inplace=True)\nfeatures['positive'] = features['importance'] > 0\nfeatures.set_index('Features', inplace=True)\nfeatures.importance.plot(kind='barh', figsize=(11, 6),color = features.positive.map({True: 'blue', False: 'red'}))\nplt.xlabel('Importance')","69cfbce5":"joblib.dump([diabetesCheck, means, stds], 'diabeteseModel.pkl')","d6033609":"diabetesLoadedModel, means, stds = joblib.load('diabeteseModel.pkl')\naccuracyModel = diabetesLoadedModel.score(testData, testLabel)\nprint(\"accuracy = \",accuracyModel * 100,\"%\")","91566149":"print(dfCheck.head())","6c0401e6":"sampleData = dfCheck[:1]\n# prepare sample\nsampleDataFeatures = np.asarray(sampleData.drop(['Date','Time','DiabetesPredicted'],1))\nsampleDataFeatures = (sampleDataFeatures - means)\/stds\n# predict\npredictionProbability = diabetesLoadedModel.predict_proba(sampleDataFeatures)\nprediction = diabetesLoadedModel.predict(sampleDataFeatures)\nprint('Probability:', predictionProbability)\nprint('prediction:', prediction)","e8fbdfb7":"\u5728\u4e0a\u9762\u7684\u70ed\u56fe\u4e2d\uff0c\u66f4\u4eae\u7684\u989c\u8272\u8868\u793a\u76f8\u5173\u6027\u66f4\u5f3a\u3002\u4ece\u8868\u683c\u548c\u70ed\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u4eba\u4f53\u8840\u6c27\u9971\u548c\u5ea6\u3001\u4eba\u4f53\u5fc3\u7387\u503c\u3001\u624b\u6307\u6307\u5c16\u4f53\u8868\u6e29\u5ea6\u503c\u3001\u73af\u5883\u6e29\u5ea6\u503c\u53ca\u4f53\u8f90\u5c04\u80fd\u91cf\u503c\u90fd\u4e0e\u8840\u7cd6\u9ad8\u4f4e\u6709\u663e\u8457\u76f8\u5173\u6027\u3002\u8fd8\u8981\u6ce8\u610f\u4e24\u4e2a\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u6bd4\u5982\u8840\u6c27\u9971\u548c\u5ea6\u548c\u5fc3\u8df3\uff0c\u6216\u8005\u8840\u538b\u548c\u4f53\u8868\u6e29\u5ea6\u3002","ac165b96":"\u8ba1\u5212\u5229\u7528kaggle\u5e73\u53f0\u63d0\u4f9b\u7684python\u5e93\u3001\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5e93\uff08\u903b\u8f91\u56de\u5f52\u7b97\u6cd5\uff09\u4ee5\u53ca\u6570\u636e\u56fe\u5f62\u663e\u793a\u5e93\uff0c\u5bf9\u91c7\u96c6\u5230\u6570\u636e\u96c6\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u4e0e\u9884\u6d4b\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u8840\u7cd6\u7684\u6301\u7eed\u65e0\u521b\u76d1\u6d4b\u3002\n \uff081\uff09\u5229\u7528panda\u6765\u8bfb\u53d6\u91c7\u96c6\u5230\u7684\u6570\u636e\uff08csv\u683c\u5f0f\uff09\uff1b\n \uff082\uff09\u5229\u7528sklearn\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u7b97\u6cd5\u8fdb\u884c\u6570\u636e\u5206\u6790\uff1b\n \uff083\uff09\u5229\u7528seaborn\u548cmatplotlib\u8fdb\u884c\u5206\u6790\u7ed3\u679c\u7684\u53ef\u89c6\u5316\u5c55\u793a\uff1b\n \uff084\uff09\u5229\u7528joblib\u7528\u4e8e\u5b58\u50a8\u6a21\u578b\uff0c\u7528\u4e8e\u9884\u6d4b\u7528\u3002","e66963d8":"****# \u6570\u636e\u96c6\u51c6\u5907 (\u62c6\u5206\u4e0e\u6b63\u89c4\u5316)**\n\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u6570\u636e\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\uff08\u5982\u679c\u6211\u4eec\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u9a8c\u6570\u91cf\u5f88\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5c06\u6570\u636e\u5206\u4e3a3\u90e8\u5206\uff0c\u5373\u8bad\u7ec3\u96c6\u3001\u5f00\u53d1\u96c6\u548c\u6d4b\u8bd5\u96c6\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u5206\u79bb\u51fa\u4e00\u4e9b\u6570\u636e\u8fdb\u884c\u624b\u52a8\u4ea4\u53c9\u68c0\u67e5\u3002\n\u6570\u636e\u96c6\u5305\u62ec\u603b\u5171297\u9879\u8bb0\u5f55\u3002\u4e3a\u4e86\u8bad\u7ec3\u6211\u4eec\u7684\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528200\u6761\u8bb0\u5f55\u3002\u6211\u4eec\u5c06\u4f7f\u752882\u6761\u8bb0\u5f55\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6700\u540e15\u6761\u8bb0\u5f55\u4ea4\u53c9\u68c0\u67e5\u6211\u4eec\u7684\u6a21\u578b\u3002","f3480f9c":"# \u63a5\u4e0b\u6765\n\n \u9650\u4e8e\u65f6\u95f4\u56e0\u7d20\uff0c\u8fd9\u91cc\u91c7\u96c6\u7684\u8840\u7cd6\u4e3a\u6bcf\u59291\u6b21\uff0c\u5e76\u4e14\u81ea\u52a8\u68c0\u6d4b\u7684\u8840\u7cd6\u6570\u636e\u8fc7\u5c11\uff0c\u6ca1\u6709\u5c06\u4eba\u4f53\u8f90\u5c04\u80fd\u529b\u8ba1\u7b97\u8fdb\u6765\uff0c\u5c24\u5176\u662f\u7a7a\u8179\u3001\u9910\u540e\u3001\u8fd0\u52a8\u540e\u7b49\u7279\u5b9a\u4e8b\u4ef6\u4e0b\u7684\u6570\u636e\u6536\u96c6\u8fd8\u4e0d\u5b8c\u6574\uff0c\u9700\u8981\u5bf9\u8fd9\u4e9b\u503c\u8fdb\u4e00\u6b65\u6536\u96c6\u5b8c\u5584\uff0c\u6765\u4f18\u5316\u6a21\u578b\u7684\u51c6\u786e\u5ea6\u3002\n\n","475c9368":"\u4f5c\u4e3a\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u89c4\u8303\u5316\u6211\u4eec\u7684\u8f93\u5165\u3002\u673a\u5668\u5b66\u4e60\u6a21\u578b\u901a\u5e38\u53d7\u76ca\u4e8e\u8f93\u5165\u89c4\u8303\u5316\u3002\u8fd9\u4e5f\u4f7f\u6211\u4eec\u66f4\u5bb9\u6613\u7406\u89e3\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u5728\u67e5\u770b\u6a21\u578b\u6743\u91cd\u65f6\u3002\u6211\u4eec\u5c06\u6807\u51c6\u5316\u6570\u636e\uff0c\u4f7f\u6bcf\u4e2a\u53d8\u91cf\u7684\u5e73\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u504f\u5dee\u4e3a1","6616f32f":"# \u8bad\u7ec3\u548c\u8bc4\u4f30\u673a\u5668\u5b66\u4e60\u6a21\u578b\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8bad\u7ec3\u6211\u4eec\u7684\u5206\u7c7b\u6a21\u578b\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a\u903b\u8f91\u56de\u5f52\u7684\u673a\u5668\u7b80\u5355\u5b66\u4e60\u6a21\u578b\u3002\u7531\u4e8e\u8be5\u6a21\u578b\u5728sklearn\u4e2d\u5f88\u5bb9\u6613\u83b7\u5f97\uff0c\u6240\u4ee5\u8bad\u7ec3\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u51e0\u884c\u4ee3\u7801\u6765\u5b8c\u6210\u3002\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u540d\u4e3adiabetesCheck\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u4f7f\u7528fit\u51fd\u6570\u6765\u8bad\u7ec3\u6a21\u578b\u3002","be9785bf":"\u6570\u636e\u68c0\u67e5\uff08\u5982\u6ca1\u6709\u7a7a\u503c\uff09","0c4d22d7":"# \u5229\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u672a\u4f7f\u7528\u7684\u6570\u636e\u6765\u4e86\u89e3\u5982\u4f55\u8fdb\u884c\u9884\u6d4b\u3002\u9996\u5148\u68c0\u67e5\u672a\u4f7f\u7528\u7684\u6570\u636e.","2f1df7b5":"\u7528\u7b2c\u4e00\u6761\u6570\u636e\u8bb0\u5f55\u6765\u505a\u9884\u6d4b","1c69f9d2":"# \u5229\u7528\u903b\u8f91\u56de\u5f52\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u8840\u7cd6\u503c\n\n\u5728\u91c7\u96c6\u7684\u8840\u7cd6\u6570\u636e\u96c6\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u673a\u5668\u5b66\u4e60\uff0c\u5e76\u9884\u6d4b\u8840\u7cd6\u662f\u5426\u8d85\u6807 \uff08>6.1\uff09\n\n\u524d\u671f\u8840\u7cd6\u91c7\u96c6\u539f\u7406\uff1a\u91c7\u7528\u900f\u5c04\u5f0f\u8fd1\u7ea2\u5916\u5149\u8c31\u6cd5\uff0c\u5d4c\u5165\u5f0f\u5fae\u5904\u7406\u5668\u5206\u522b\u9a71\u52a8\u7ea2\u5149\u548c\u7ea2\u5916\u5149\u53d1\u5c04\u7aef\u7167\u5c04\u4eba\u4f53\u6307\u5c16\u90e8\u4f4d\uff0c\u5149\u7535\u63a5\u6536\u7aef\u8d1f\u8d23\u6536\u96c6\u900f\u5c04\u5149\uff0c\u518d\u901a\u8fc7\u4fe1\u606f\u5904\u7406\u6a21\u5757\u8fdb\u884c\u4fe1\u53f7\u7684\u653e\u5927\u6ee4\u6ce2\u548c\u5149\u7535\u8f6c\u6362\uff0c\u901a\u8fc7\u6717\u4f2f\u6bd4\u5c14\u5b9a\u5f8b\u8ba1\u7b97\u5f97\u5230\u7ea2\u5149\u4e0e\u7ea2\u5916\u5149\u900f\u5c04\u80fd\u91cf\u7684\u6bd4\u4f8b\u503c\u4e0e\u521d\u59cb\u8840\u7cd6\u503c\uff1b\u518d\u901a\u8fc7\u80fd\u91cf\u4ee3\u8c22\u5b88\u6052\u6cd5\u8fdb\u884c\u8840\u7cd6\u6d4b\u91cf\u503c\u7684\u4fee\u6b63\uff0c\u4fee\u6b63\u53c2\u6570\u5305\u62ec\u4eba\u4f53\u8840\u6c27\u9971\u548c\u5ea6\u3001\u4eba\u4f53\u5fc3\u7387\u503c\u3001\u624b\u6307\u6307\u5c16\u4f53\u8868\u6e29\u5ea6\u503c\u3001\u73af\u5883\u6e29\u5ea6\u503c\u53ca\u4f53\u8f90\u5c04\u80fd\u91cf\u503c\u3002\u7531\u4e8e\u8fd8\u539f\u6027\u8840\u7ea2\u86cb\u767d\u5bf9\u7ea2\u5149\u7684\u5438\u6536\u5f3a\uff0c\u4f46\u5bf9\u7ea2\u5916\u5149\u7684\u5438\u6536\u76f8\u5bf9\u8f83\u5f31\uff1b\u8840\u7ea2\u86cb\u767d\u5e76\u5e26\u6709\u6c27\u5206\u5b50\u7684\u8840\u7ea2\u7ec6\u80de\u5bf9\u7ea2\u5149\u7684\u5438\u6536\u6bd4\u8f83\u5f31\uff0c\u5bf9\u7ea2\u5916\u5149\u7684\u5438\u6536\u6bd4\u8f83\u5f3a\uff0c\u56e0\u6b64\u539f\u59cb\u5149\u7535\u5bb9\u79ef\u8109\u640f\u6ce2\u4fe1\u53f7\u5728\u4e0a\u4f4d\u673a\u8fdb\u884c\u5904\u7406\u540e\uff0c\u901a\u8fc7\u68c0\u6d4b\u4e8c\u8005\u7684\u5dee\u5f02\uff0c\u5c31\u80fd\u5f97\u5230\u5728\u4e0d\u540c\u6ce2\u6bb5\u4e0b\u7684\u5149\u5438\u6536\u5dee\u5f02\uff0c\u8fdb\u800c\u5c31\u80fd\u5f97\u5230\u7ea2\u5149\u4e0e\u7ea2\u5916\u5149\u7684\u900f\u5c04\u80fd\u91cf\u6bd4\u503c\uff0c\u5c06\u8fd9\u4e2a\u6bd4\u503c\u8fdb\u884c\u6700\u5c0f\u4e8c\u4e58\u5efa\u6a21\u80fd\u5f97\u5230\u8840\u6c27\u9971\u548c\u5ea6\u503c\uff0c\u540c\u65f6\u518d\u901a\u8fc7\u6570\u5b57\u6e29\u5ea6\u4f20\u611f\u5668\u83b7\u5f97\u6240\u5904\u7684\u73af\u5883\u95ee\u9898\u3001\u88ab\u6d4b\u90e8\u4f4d\u4f53\u8868\u6e29\u5ea6\u4ee5\u53ca\u8f90\u5c04\u80fd\u91cf\uff1b\u8bb2\u8fd9\u4e9b\u6570\u636e\u8ba1\u7b97\u5b8c\u5e76\u4ee5\u8868\u683c\uff08.CSV\uff09\u5f62\u5f0f\u4fdd\u5b58\uff0c\u518d\u7ed3\u5408\u8d2d\u4e70\u7684\u6709\u521b\u8840\u7cd6\u4eea\u6240\u6d4b\u5f97\u7684\u6807\u51c6\u8840\u7cd6\u6d53\u5ea6\u4e00\u8d77\u8fdb\u884c\u6570\u636e\u5206\u6790\uff08\u673a\u5668\u5b66\u4e60\uff09\u3002\n\n","f45fc276":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u636e\u6765\u627e\u51fa\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002","84ecce43":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5bf9\u6807\u7b7e\u548c\u7279\u5f81\u5217\u8fdb\u884c\u62c6\u5206\u4e0e\u5b9a\u4e49\uff08\u5bf9\u4e8e\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\uff09\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u628a\u5b83\u4eec\u8f6c\u6362\u6210NumPy\u6570\u7ec4\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5904\u7406NumPy\u6570\u7ec4\u683c\u5f0f\u7684\u6570\u636e\u3002","08914cb0":"\u4e3a\u4e86\u68c0\u67e5\u6211\u4eec\u662f\u5426\u6b63\u786e\u5730\u4fdd\u5b58\u4e86\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u636e\u6765\u68c0\u67e5\u6211\u4eec\u4fdd\u5b58\u7684\u6a21\u578b\u7684\u51c6\u786e\u6027\uff08\u5982\u679c\u6211\u4eec\u6b63\u786e\u5730\u4fdd\u5b58\u4e86\u6a21\u578b\uff0c\u6211\u4eec\u5e94\u8be5\u89c2\u5bdf\u5230\u51c6\u786e\u6027\u6ca1\u6709\u53d8\u5316\uff09\u3002","7d30620e":"\u9996\u5148\u67e5\u627e\u6bcf\u4e00\u5bf9\u7279\u5f81\uff08\u548c\u7ed3\u679c\u53d8\u91cf\uff09\u7684\u76f8\u5173\u6027\uff0c\u5e76\u4f7f\u7528\u70ed\u56fe\u53ef\u89c6\u5316\u76f8\u5173\u6027.","a2495ebf":"# \u89e3\u91ca\u673a\u5668\u5b66\u4e60\u6a21\u578b\n\n\n\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3logistic\u56de\u5f52\u6a21\u578b\u5185\u90e8\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u53ef\u89c6\u5316\u6211\u4eec\u7684\u6a21\u578b\u5982\u4f55\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u5f81\u4ee5\u53ca\u54ea\u4e9b\u7279\u5f81\u5177\u6709\u66f4\u5927\u7684\u5f71\u54cd\u3002","25a3f642":"# \u4fdd\u5b58\u6a21\u578b\n\u5c06\u8bad\u7ec3\u540e\u7684\u6a21\u578b\u4fdd\u5b58\u8d77\u6765\u7528\u4e8e\u540e\u7eed\u8840\u7cd6\u9884\u6d4b."}}