{"cell_type":{"39a3f547":"code","276e9adc":"code","97254ce7":"code","f9139a84":"code","d37b3bf1":"code","b50563fa":"code","307aa067":"code","f2f6ab10":"code","c0e72c26":"code","489f198e":"code","5b387654":"code","09a49435":"markdown","d778156e":"markdown","ac58f450":"markdown","fd757c55":"markdown","be7e61f5":"markdown","e77abd25":"markdown","354f0e58":"markdown","494d189d":"markdown","34721e78":"markdown","09099749":"markdown"},"source":{"39a3f547":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","276e9adc":"# Read the train_data csv file as Pandas DataFrame\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","97254ce7":"# Read the test_data csv file as Pandas DataFrame\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","f9139a84":"display(train_data.info())","d37b3bf1":"display(train_data.describe())","b50563fa":"train_data['Survived'].value_counts()","307aa067":"sns.countplot(x='Survived',data = train_data)\nplt.show()","f2f6ab10":"sns.countplot(x='Survived',data = train_data,hue='Sex')\nplt.show()","c0e72c26":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\n#print(women)\nsurvived_rate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", survived_rate_women)","489f198e":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nsurvived_rate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", survived_rate_men)","5b387654":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","09a49435":"**The majority of survived people was Female.**","d778156e":"## Building Machine Learning Model","ac58f450":"**Check the data types,missing values**","fd757c55":"**Statistics for numerical columns in the train dataset**","be7e61f5":"**It shows that in the train dataset, 549 people was died and 342 people was survived.**","e77abd25":"## Exploratory Data Analysis","354f0e58":"## Data Visualization","494d189d":"## Read the necessary datasets","34721e78":"**we can conclude that almost 75% of the women on board survived, whereas only 19% of the men survived. So, gender seems to be such a strong indicator of survival.**","09099749":"## Percentage of people survived"}}