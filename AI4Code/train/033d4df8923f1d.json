{"cell_type":{"4cb27870":"code","bb96f7eb":"code","88b4ae24":"code","5654e94f":"code","e20d6631":"code","845e3751":"code","4340f0fd":"code","32949ba7":"code","bc15e6f2":"code","14e62744":"code","f9a11f7c":"code","4c254f02":"code","cea78c3b":"code","ca247495":"code","d6defc8c":"code","626b7aff":"code","0225903d":"code","569f4cf6":"code","9074d540":"code","40bfcf3a":"code","3b4db1a9":"code","3ee336a9":"code","2e1cadf8":"code","c0d13d01":"code","2480566b":"code","3d47b603":"code","20c6db93":"code","f6762dce":"code","1fb2eb80":"code","f06f246a":"code","4c8434e7":"code","16bae14b":"code","35680a04":"code","06584b43":"code","8a77ece5":"code","173b6ee1":"code","9c1de140":"code","04e997a4":"code","609f51b7":"code","7b2d6732":"code","bcb6dd35":"code","3d826699":"code","326a0fa6":"code","a00341af":"code","846d8a55":"markdown","c6ec7a7b":"markdown","25722dbb":"markdown","5a6a2441":"markdown","ba2f6576":"markdown","d0fb507f":"markdown","209ca4cf":"markdown","fa3b7f6e":"markdown","3698e915":"markdown","a9679a33":"markdown","6f8659b6":"markdown","d1b73e30":"markdown","ebc4a85f":"markdown","eedfd1e3":"markdown","a595dd0f":"markdown","718bdc35":"markdown","6c6b3a33":"markdown","7519a6af":"markdown","f9b17af8":"markdown","394bc429":"markdown","79bed787":"markdown","5aec33f9":"markdown","75393e6c":"markdown","3cc85fc8":"markdown","3688641d":"markdown","6691b245":"markdown","42ec43e3":"markdown","bb77e2ea":"markdown","6dde026c":"markdown","64a11af7":"markdown","7bcb6031":"markdown","fc2fcef4":"markdown","8507d304":"markdown","c53d0341":"markdown","1195ff2f":"markdown","39bce7b1":"markdown","c62d8a7f":"markdown"},"source":{"4cb27870":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bb96f7eb":"heart_failure_data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","88b4ae24":"pd.pandas.set_option('display.max_columns', None)\nheart_failure_data.head()","5654e94f":"heart_failure_data.shape","e20d6631":"heart_failure_data.info()","845e3751":"heart_failure_data.duplicated().sum()","4340f0fd":"heart_failure_data.describe()","32949ba7":"sns.distplot(heart_failure_data['age'][heart_failure_data['DEATH_EVENT']==1], color='green')\nsns.distplot(heart_failure_data['age'][heart_failure_data['DEATH_EVENT']==0], color='red')\nplt.legend(\"0\", \"1\")\nplt.show()","bc15e6f2":"sns.countplot(heart_failure_data['sex'][heart_failure_data['DEATH_EVENT']==1])\nplt.show()","14e62744":"sns.countplot(heart_failure_data['smoking'][heart_failure_data['DEATH_EVENT']==1])\nplt.show()","f9a11f7c":"sns.countplot(heart_failure_data['high_blood_pressure'][heart_failure_data['DEATH_EVENT']==1])\nplt.show()","4c254f02":"sns.countplot(heart_failure_data['anaemia'][heart_failure_data['DEATH_EVENT']==1])\nplt.show()","cea78c3b":"sns.pairplot(heart_failure_data, hue = 'DEATH_EVENT', vars = ['age', 'creatinine_phosphokinase', 'ejection_fraction', 'platelets',\n                                                              'serum_creatinine', 'serum_sodium'], palette = 'husl')","ca247495":"sns.boxplot(heart_failure_data['creatinine_phosphokinase'])","d6defc8c":"sns.boxplot(heart_failure_data['ejection_fraction'])","626b7aff":"sns.boxplot(heart_failure_data['platelets'])","0225903d":"sns.boxplot(heart_failure_data['serum_creatinine'])","569f4cf6":"plt.hist(heart_failure_data['creatinine_phosphokinase'], bins=50)\nplt.show()","9074d540":"plt.hist(heart_failure_data['ejection_fraction'], bins=50)\nplt.show()","40bfcf3a":"plt.hist(heart_failure_data['platelets'], bins=50)\nplt.show()","3b4db1a9":"plt.hist(heart_failure_data['serum_creatinine'], bins=50)\nplt.show()","3ee336a9":"outlier_features = ['creatinine_phosphokinase', 'ejection_fraction', 'platelets', 'serum_creatinine']\nfor feature in outlier_features:\n    IQR = heart_failure_data[feature].quantile(0.75) - heart_failure_data[feature].quantile(0.25)\n    lower_boundary = heart_failure_data[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = heart_failure_data[feature].quantile(0.75) + (IQR*1.5)\n    print('Feature : ', feature, 'Lower Boundary : ', lower_boundary, 'Upper Boundary : ', upper_boundary)","2e1cadf8":"for feature in outlier_features:\n    IQR = heart_failure_data[feature].quantile(0.75) - heart_failure_data[feature].quantile(0.25)\n    lower_boundary = heart_failure_data[feature].quantile(0.25) - (IQR*1.5)\n    upper_boundary = heart_failure_data[feature].quantile(0.75) + (IQR*1.5)\n    heart_failure_data.loc[heart_failure_data[feature] <= lower_boundary, feature] = lower_boundary\n    heart_failure_data.loc[heart_failure_data[feature] >= upper_boundary, feature] = upper_boundary","c0d13d01":"sns.boxplot(heart_failure_data['creatinine_phosphokinase'])","2480566b":"sns.boxplot(heart_failure_data['ejection_fraction'])","3d47b603":"sns.boxplot(heart_failure_data['platelets'])","20c6db93":"sns.boxplot(heart_failure_data['serum_creatinine'])","f6762dce":"plt.figure(figsize=(12,5))\ncorr = heart_failure_data.corr()\nsns.heatmap(corr, annot=True, cmap='RdYlGn')","1fb2eb80":"features = heart_failure_data.drop(['DEATH_EVENT'], axis=1)\nlabel = heart_failure_data['DEATH_EVENT']","f06f246a":"plt.figure(figsize=(12,10))\nfrom sklearn.ensemble import ExtraTreesRegressor\netr = ExtraTreesRegressor()\netr.fit(features, label)\nfeat_importances = pd.Series(etr.feature_importances_, index=features.columns)\nfeat_importances.nlargest(12).plot(kind='barh')\nplt.show","4c8434e7":"features.drop(['anaemia', 'diabetes', 'high_blood_pressure', 'sex', 'smoking'], axis=1, inplace=True)","16bae14b":"from sklearn.model_selection import train_test_split\ntrain_features, test_features, train_label, test_label = train_test_split(features, label, test_size=0.3, random_state=13)","35680a04":"#Number of trees in random forest\nn_estimators = [int(x) for x in np.linspace(start=100, stop=1200, num=12)]\n\n#Number of features to consider in every split\nmax_features = ['auto', 'sqrt']\n\n#Maximum number of levels in a tree\nmax_depth = [int(x) for x in np.linspace(start=5, stop=30, num=6)]\n\n#Minimum number of samples required to split a node\nmin_samples_split = [2, 5, 10, 15, 100]\n\n#Minimum number of samples required at each leaf node\nmin_samples_leaf = [1, 2, 5, 10]\n\n#Random Grid\nrandom_grid = {'n_estimators' : n_estimators,\n              'max_features' : max_features,\n              'max_depth' : max_depth,\n              'min_samples_split' : min_samples_split,\n              'min_samples_leaf' : min_samples_leaf}","06584b43":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nrandom_forest = RandomForestClassifier()\nrandom_forest_model = RandomizedSearchCV(estimator=random_forest, param_distributions=random_grid, scoring='neg_mean_squared_error',\n                                        n_iter=10, cv=5, verbose=2, random_state=13, n_jobs=1)\nrandom_forest_model.fit(train_features, train_label)","8a77ece5":"random_forest_model.best_params_","173b6ee1":"from sklearn.metrics import confusion_matrix, plot_confusion_matrix, accuracy_score, recall_score, precision_score, f1_score, roc_auc_score, roc_curve","9c1de140":"confusion_matrix(test_label, random_forest_model.predict(test_features))","04e997a4":"plot_confusion_matrix(random_forest_model, test_features, test_label)","609f51b7":"accuracy_score(test_label, random_forest_model.predict(test_features))","7b2d6732":"recall_score(test_label, random_forest_model.predict(test_features))","bcb6dd35":"precision_score(test_label, random_forest_model.predict(test_features))","3d826699":"f1_score(test_label, random_forest_model.predict(test_features))","326a0fa6":"plt.style.use('seaborn')\n\nfpr, tpr, thresholds = roc_curve(test_label, random_forest_model.predict_proba(test_features)[:,1], pos_label=1)\n\nrandom_probs = [0 for i in range(len(test_label))]\np_fpr, p_tpr, _ = roc_curve(test_label, random_probs, pos_label=1)\n\nplt.plot(fpr, tpr, linestyle='--',color='orange', label='Random Forest')\nplt.plot(p_fpr, p_tpr, linestyle='--', color='blue')\n\nplt.title('Random Forest ROC Curve')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\n\nplt.legend(loc='best')\nplt.savefig('ROC',dpi=300)\n\nplt.show()","a00341af":"auc = roc_auc_score(test_label, random_forest_model.predict_proba(test_features)[:,1])\nauc","846d8a55":"# ROC Curve","c6ec7a7b":"* Age is not having any significant impact on the death event.","25722dbb":"# Accuracy","5a6a2441":"### Correlation Matrix","ba2f6576":"# Visulaizing outliers in the dataset features","d0fb507f":"# Evaluating Performance","209ca4cf":"Observation : As compared to females, males are having more heart attackes.","fa3b7f6e":"# Visualizing features after removing the outliers","3698e915":"# Importing the data","a9679a33":"# Splitting data into train and test","6f8659b6":"# Visualizing relation between features and label","d1b73e30":"* There is no null data present in the dataset.","ebc4a85f":"# Creating ML model using ensemble technique and randomized Search CV for hyperparameter optimization","eedfd1e3":"### Feature Importance ","a595dd0f":"# Exploratory Data Analysis","718bdc35":"# F1 Score","6c6b3a33":"# Precision Score","7519a6af":"Observation : People who have high blood pressure are having less heart attack as compared to people who do not have high blood pressure.","f9b17af8":"# Describing the dataset","394bc429":"# Visualizing the skewness in the features","79bed787":"# Visualizing data type and count of features in the dataset","5aec33f9":"Observation : People who have anaemia are having less heart attack as compared to people who do not have anaemia.","75393e6c":"# Confusion Matrix","3cc85fc8":"# Diaplaying best parameters","3688641d":"* There is no dulpicate row present in the dataset.","6691b245":"# Defining Values for the best parameters","42ec43e3":"# Recall Score","bb77e2ea":"# Displaying top rows of dataset","6dde026c":"# Dropping less significant features from dataset","64a11af7":"* Outliers in the features has been handled.","7bcb6031":"# Checking duplicate in the dataset","fc2fcef4":"# Feature Engineering","8507d304":"Observation : People who smoke are having less heart attack as compared to people who do not smoke","c53d0341":"# ROC AUC Curve","1195ff2f":"# Handling outliers in the features","39bce7b1":"* Features creatinine_phosphokinase, ejection_fraction, platelets, serum_creatinine have outliers.","c62d8a7f":"* Features Age, ejection_fraction, serum_creatinine, serum_sodium, time has good correlation with label Death_Event."}}