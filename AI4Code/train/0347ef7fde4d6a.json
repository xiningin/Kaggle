{"cell_type":{"0231077f":"code","0e433432":"code","ee1bacc2":"code","f775ea9b":"code","fd2e537d":"code","9788142e":"code","0a449c4e":"code","dbd3937b":"code","308c7ac4":"code","53e80cbc":"code","3120dace":"code","1e9faa42":"code","12167f62":"code","60950c06":"code","f5e1de7e":"code","d560ff04":"code","09bfb6c6":"code","157a4293":"code","da4afcf4":"code","4cb112e9":"code","c6afc6d0":"code","ee24a3b4":"code","93f714fc":"code","f91e36c3":"code","1c6e24e2":"code","e38ef5b8":"markdown","89a0b5ec":"markdown","45c9e7f0":"markdown","ae74cdbd":"markdown","b7c429ea":"markdown","167504f0":"markdown","8a2a9c14":"markdown","9da42513":"markdown","342c7b00":"markdown","b8b7d9b1":"markdown","b8142b78":"markdown","382a232c":"markdown","e8043aec":"markdown","32f22b80":"markdown","b6d3719a":"markdown","34fb5e92":"markdown","e3e2cd0f":"markdown","91203e51":"markdown","5cc2c8b6":"markdown","647e48df":"markdown","ed8cc307":"markdown","8b45e1ac":"markdown","691cfec5":"markdown","b3d8b64a":"markdown","a557ee3c":"markdown","ef8b3e3d":"markdown","b7f7387a":"markdown","48975150":"markdown"},"source":{"0231077f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport random\nimport scipy.stats as stt\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n%pylab inline","0e433432":"data18 = pd.read_csv('..\/input\/the-human-freedom-index\/hfi_cc_2018.csv')\ndata18.shape","ee1bacc2":"data18.head(3)","f775ea9b":"data18.info()","fd2e537d":"from mpl_toolkits.basemap import Basemap\nconcap = pd.read_csv('..\/input\/world-capitals-gps\/concap.csv')\nconcap.head(3)","9788142e":"data_full = pd.merge(concap[['CountryName', 'CapitalName', 'CapitalLatitude', 'CapitalLongitude']],\\\n         data18,left_on='CountryName',right_on='countries')","0a449c4e":"def mapWorld():\n    m = Basemap(projection='mill',llcrnrlat=-60,urcrnrlat=70,\\\n            llcrnrlon=-110,urcrnrlon=180,resolution='c')\n    m.drawcoastlines()\n    m.drawcountries()\n    m.drawparallels(np.arange(-90,91.,30.))\n    m.drawmeridians(np.arange(-90,90.,60.))\n    lat = data_full['CapitalLatitude'].values\n    lon = data_full['CapitalLongitude'].values\n    a_1 = data_full['hf_score'].values\n    #a_2 = data_full['Economy (GDP per Capita)'].values\n    #300*a_2\n    m.scatter(lon, lat, latlon=True,c=a_1,s=500,linewidth=1,edgecolors='black',cmap='hot', alpha=1)\n    \n    #m.fillcontinents(color='#FFFFFF',lake_color='#FFFFFF',alpha=0.3)\n    cbar = m.colorbar()\n    cbar.set_label('Human Freedom',fontsize=30)\n    #plt.clim(20000, 100000)\n    plt.title(\"Human Freedom (score)\", fontsize=30)\n    plt.show()\nplt.figure(figsize=(30,30))\nmapWorld()","dbd3937b":"lst = ['pf_rol_procedural','pf_rol','pf_score','ef_legal','ef_trade','ef_score','hf_score']\n\ndef reg(x):\n    if x=='Middle East & North Africa':\n        res = 'Mid East & Nor Afr'\n    elif x=='Latin America & the Caribbean':\n        res = 'Lat Amer & Car'\n    elif x=='Caucasus & Central Asia':\n        res = 'Cauc & Cen Asia'\n    elif x=='Sub-Saharan Africa':\n            res = 'Sub-Sah Africa'\n    else:\n        res=x\n    return res\ndata_bx = data18\ndata_bx['region'] = data_bx.region.apply(reg)\n\nplt.figure(figsize=(30,10))\nsns.set(style=\"white\",font_scale=1.5)\nsns.boxplot(x='region',y='hf_score',data=data_bx);\nsns.swarmplot(x='region',y='hf_score',data=data_bx,color=\".25\");","308c7ac4":"data18.corr()[abs(data18.corr())>0.72]['hf_score'].dropna()[['pf_rol_procedural', 'pf_rol_civil', 'pf_rol_criminal', 'pf_rol',\\\n       'pf_ss', 'pf_expression_influence',\\\n       'pf_expression_control', 'pf_expression', 'pf_score',\\\n        'ef_legal', 'ef_trade', 'ef_score']]","53e80cbc":"def mapWorld(col1,size2,title3,label4,metr=100,colmap='hot'):\n    m = Basemap(projection='mill',llcrnrlat=-60,urcrnrlat=70,\\\n            llcrnrlon=-110,urcrnrlon=180,resolution='c')\n    m.drawcoastlines()\n    m.drawcountries()\n    m.drawparallels(np.arange(-90,91.,30.))\n    m.drawmeridians(np.arange(-90,90.,60.))\n    \n    #m.drawmapboundary(fill_color='#FFFFFF')\n    lat = data_full['CapitalLatitude'].values\n    lon = data_full['CapitalLongitude'].values\n    a_1 = data_full[col1].values\n    if size2:\n        a_2 = data_full[size2].values\n    else: a_2 = 1\n    #300*a_2\n    m.scatter(lon, lat, latlon=True,c=a_1,s=metr*a_2,linewidth=1,edgecolors='black',cmap=colmap, alpha=1)\n    \n    #m.fillcontinents(color='#FFFFFF',lake_color='#FFFFFF',alpha=0.3)\n    cbar = m.colorbar()\n    cbar.set_label(label4,fontsize=30)\n    #plt.clim(20000, 100000)\n    plt.title(title3, fontsize=30)\n    plt.show()\nplt.figure(figsize=(30,30))\nmapWorld('hf_score','pf_score',\"Human Freedom (score)\", 'Human Freedom')","3120dace":"plt.figure(figsize=(30,30))\nmapWorld('ef_score','ef_trade',\"Economic Freedom (score)\", 'Economic Freedom',metr=100,colmap='viridis')","1e9faa42":"plt.figure(figsize=(30,30))\nmapWorld(col1='pf_ss_disappearances_injuries',size2=False,title3=\"Terrorism fatalities\",\\\n         label4='Terrorism fatalities',metr=700,colmap='viridis')","12167f62":"plt.figure(figsize=(30,10))\nsns.set(style=\"white\",font_scale=1.5)\nsns.boxplot(x='region',y='hf_score',data=data_bx);\nsns.swarmplot(x='region',y='pf_ss_disappearances_injuries',data=data_bx,color=\".25\");","60950c06":"plt.figure(figsize=(30,30))\nmapWorld(col1='pf_rol_procedural',size2='pf_rol',title3=\"Procedural justice\",\\\n         label4='Procedural justice',metr=200,colmap='viridis')","f5e1de7e":"lstt = ['ef_regulation_labor','ef_regulation_business_adm','ef_regulation_business_bureaucracy','ef_regulation_business_start',\\\n'ef_regulation_business_bribes','ef_regulation_business_licensing','ef_regulation_business_compliance','ef_regulation_business',\\\n'ef_regulation']","d560ff04":"data18.corr()[lstt][-3:]","09bfb6c6":"idx=1\ndef ff(x):\n    return dict_val[x]\nplt.figure(figsize=(20,50))\nqqq = ['ef_regulation_business_bureaucracy','ef_regulation_business_start','ef_regulation_business_bribes',\\\n'ef_regulation_business','ef_regulation']\nmy_data = data_full[qqq+['region']].dropna()\nmy_data.columns = ['Bureaucracy costs','Starting a business','Extra payments','Business regulations', \\\n            'Regulation','region']\nqq_1 = ['Bureaucracy costs','Starting a business','Extra payments','Business regulations','Regulation','region']\nfor position_name, features in my_data.groupby(my_data['region'])[qq_1].median().iterrows():\n    feat = dict(features)\n    \n    categs=feat.keys()\n    N = len(categs)\n\n    values = list(feat.values())\n    values += values[:1]\n    angles = [n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n\n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    plt.xticks(angles[:-1], categs, color='grey', size=15)\n    ax.set_rlabel_position(0)\n    plt.yticks([2,5,10], [\"2\",\"5\",\"10\"], color=\"grey\", size=15)\n    plt.ylim(0,10)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    ax.plot(angles, values, linewidth=3, linestyle='solid')\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(position_name, size=15, y=1.1)\n    \n    idx += 1","157a4293":"plt.figure(figsize=(30,30))\nmapWorld(col1='pf_ss_women_missing',size2='pf_ss_women',title3=\"Missing women\",\\\n         label4='Missing women',metr=100,colmap='viridis')","da4afcf4":"def ff(x):\n    return dict_val[x]\nplt.figure(figsize=(20,50))\nqqq = ['pf_ss_women_missing','pf_ss_women_inheritance_widows','pf_ss_women_inheritance_daughters',\\\n       'pf_ss_women_inheritance','pf_ss_women','pf_ss_women_fgm']\nmy_data = data_full[qqq+['region']].dropna()\nmy_data.columns = ['Missing women','Inheritance rights for widows','Inheritance rights for daughters',\\\n'Inheritance',\"Women's security\",'Female genital mutilation','region']\nqq_1 = list(my_data.columns)\ndef spyder_plot(qq_1):\n idx=1\n for position_name, features in my_data.groupby(my_data['region'])[qq_1].median().iterrows():\n    feat = dict(features)\n    \n    categs=feat.keys()\n    N = len(categs)\n\n    values = list(feat.values())\n    values += values[:1]\n    angles = [n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n    ax = plt.subplot(9, 3, idx, polar=True)\n    plt.xticks(angles[:-1], categs, color='grey', size=15)\n    ax.set_rlabel_position(0)\n    plt.yticks([2,5,10], [\"2\",\"5\",\"10\"], color=\"grey\", size=15)\n    plt.ylim(0,10)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    ax.plot(angles, values, linewidth=3, linestyle='solid')\n    ax.fill(angles, values, 'b', alpha=0.1)\n    plt.title(position_name, size=15, y=1.1)\n    idx += 1\nspyder_plot(qq_1)","4cb112e9":"plt.figure(figsize=(30,30))\nmapWorld(col1='pf_association_association',size2=False,title3=\"Freedom of association\",\\\n         label4='Freedom of association',metr=500,colmap='viridis')","c6afc6d0":"idx=1\ndef ff(x):\n    return dict_val[x]\nplt.figure(figsize=(20,50))\nqqq = ['pf_association_association','pf_association_assembly','pf_association_political_establish',\\\n'pf_association_political_operate','pf_association_political']\nmy_data = data_full[qqq+['region']].dropna()\nspyder_plot(qqq)","ee24a3b4":"plt.figure(figsize=(30,30))\nmapWorld(col1='ef_government',size2=False,title3=\"\",\\\n         label4='Size of government ',metr=500,colmap='viridis')","93f714fc":"plt.figure(figsize=(20,50))\nqqq = ['ef_government_consumption','ef_government_transfers','ef_government_enterprises',\\\n'ef_government_tax_payroll','ef_government']\nmy_data = data_full[qqq+['region']].dropna()\nspyder_plot(qqq)","f91e36c3":"plt.figure(figsize=(30,30))\nmapWorld(col1='ef_money_inflation',size2=False,title3=\"Inflation: most recent year\",\\\n         label4='',metr=500,colmap='viridis')","1c6e24e2":"plt.figure(figsize=(20,50))\nqqq = ['ef_money_growth','ef_money_sd','ef_money_inflation',\\\n'ef_money_currency','ef_money']\nmy_data = data_full[qqq+['region']].dropna()\nspyder_plot(qqq)","e38ef5b8":"For this map, color - Women's security, size -  Missing women:","89a0b5ec":"## Map visualization","45c9e7f0":"## Terrorism","ae74cdbd":"For this map, color - Size of government ","b7c429ea":"Thank you for reading! I hope this kernel was helpful for you. <br>\nIf you like same map visualization, you can see my other kernels:  <br>\nhttps:\/\/www.kaggle.com\/nikitagrec\/kernels","167504f0":"## Women's security","8a2a9c14":"For this map, color - Procedural justice, size - Rule of law to trade internationally:","9da42513":"Now draw spider plot with business features for all regions. <br>\nMain model of this grephics I take from this kernel (https:\/\/www.kaggle.com\/dczerniawko\/fifa19-analysis). Many thanks to the author!","342c7b00":"Let's start with main map - finall Human Freedom score:","b8b7d9b1":"ef_money_growth - Money growth <br>\nef_money_sd - Standard deviation of inflation <br>\nef_money_inflation - Inflation: most recent year <br>\nef_money_currency - Freedom to own foreign currency bank account <br>\nef_money - Sound money <br>","b8142b78":"Choose the most influential features: (to the Human Freedom score)\n\npf_rol_procedural  - Procedural justice <br>\npf_rol  - Rule of law <br>\npf_score  - Personal Freedom (score) <br>\nef_legal  - Legal system and property rights <br>\nef_score  - Economic Freedom (score) <br>\nef_trade  - Freedom to trade internationally <br>","382a232c":"pf_association_association - Freedom of association <br>\npf_association_assembly - Freedom of assembly <br>\npf_association_political_establish - Freedom to establish political parties <br>\npf_association_political_operate - Freedom to operate political parties <br>\npf_association_political - Freedom to establish and operate political parties <br>","e8043aec":"# Geography of Human Freedom","32f22b80":"ef_regulation_business_bureaucracy - Bureaucracy costs <br>\nef_regulation_business_start - Starting a business <br>\nef_regulation_business_bribes - Extra payments\/bribes\/favoritism <br>\nef_regulation_business - Business regulations <br>\nef_regulation - Regulation <br>","b6d3719a":"Consider map, where color means Human Freedom and size - Personal Freedom:","34fb5e92":"For this map, color - Freedom of association:","e3e2cd0f":"Now color - Economic Freedom (score), size - Freedom to trade internationally:","91203e51":"Here you can see description of business parameters:","5cc2c8b6":"##  Business part","647e48df":"## Money","ed8cc307":"Here we can see boxplot graphic of Terrorism injuries. We can see that for this distribution, boxplot is extremely unfortunate.","8b45e1ac":"## Size of Government","691cfec5":"ef_government_consumption - Government consumption <br>\nef_government_transfers - Transfers and subsidies <br>\nef_government_enterprises - Government enterprises and investments <br>\nef_government_tax_payroll - Top marginal income and payroll tax rate <br>\nef_government - Size of government <br>","b3d8b64a":"pf_ss_women_missing - Missing women <br>\npf_ss_women_inheritance_widows - Inheritance rights for widows <br>\npf_ss_women_inheritance_daughters - Inheritance rights for daughters <br>\npf_ss_women_inheritance - Inheritance <br>\npf_ss_women - Women's security <br>","a557ee3c":"Here we can see most dangerous places because of terrorism:","ef8b3e3d":"Here you can see boxplots grouped by regions.","b7f7387a":"## Freedom of association","48975150":"For visualization I use Basemap module - part of matplotlib. To visualize this map, I need capital's coordinates - latitude and longitude. I take this data from this site: http:\/\/techslides.com\/list-of-countries-and-capitals. Then you just have to join the tables."}}