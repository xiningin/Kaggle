{"cell_type":{"46742f1e":"code","18668ed7":"code","6c40d161":"code","fdbb45d2":"code","c1857809":"code","5c5cb946":"code","f23a3bcf":"code","ee738c73":"code","af221331":"code","2bd6971d":"code","175dcfc7":"code","f5577e77":"code","555cc5a9":"code","84f89e36":"code","4789a0cd":"code","9ac33ce6":"code","71dc16da":"code","89180883":"markdown","684603ed":"markdown","faf5ea4d":"markdown","b4674c30":"markdown","13f15851":"markdown","a0d08824":"markdown","f89b0742":"markdown","bb2f6e0e":"markdown","61175063":"markdown"},"source":{"46742f1e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import neighbors\nfrom sklearn.preprocessing import StandardScaler\n","18668ed7":"data = pd.read_csv(\"\/kaggle\/input\/uci-breast-cancer-wisconsin-original\/breast-cancer-wisconsin.data.txt\")\ndata.head()","6c40d161":"data = data.drop(['1000025'], axis=1)","fdbb45d2":"print(\"Numero de registros:\"+str(data.shape[0]))\nfor column in data.columns.values:\n    data.index[data[column] == '?'].tolist()\n    print(column + \"-NAs:\"+ str(pd.isnull(data[column]).values.ravel().sum()))","c1857809":"print(\"Numero de registros:\"+str(data.shape[0]))\ninvalid_rows = None\nfor column in data.columns.values:\n    if len(data.index[data[column] == '?'].tolist()) > 0:\n        invalid_rows = data.index[data[column] == '?'].tolist()\n        data = data.drop(invalid_rows)  \n        print(invalid_rows)","5c5cb946":"data.columns = [ \"Clump Thickness \", \"Uniformity of Cell Size\", \"Uniformity of Cell Shape \", \"Marginal Adhesion\", \"Single Epithelial Cell Size\", \"Bare Nuclei\", \"Bland Chromatin\", \"Normal Nucleoli\", \"Mitoses\", \"Class\"]\ndata.head()","f23a3bcf":"data_vars = data.columns.values.tolist()\nY = ['Class']\nX = [v for v in data_vars if v not in Y]\nX_train, X_test, Y_train, Y_test = train_test_split(data[X],data[Y],test_size = 0.3, random_state=0)","ee738c73":"X_std_train = StandardScaler().fit_transform(X_train[X])\nX_std_test =  StandardScaler().fit_transform(X_test[X])","af221331":"from sklearn.decomposition import PCA \nacp = PCA(.75)\nX_reduction_train = acp.fit_transform(X_std_train)\nacp = PCA(n_components=len(X_reduction_train[0]))\nX_reduction_test = acp.fit_transform(X_std_test)","2bd6971d":"len(X_reduction_train[0])","175dcfc7":"clf = neighbors.KNeighborsClassifier()","f5577e77":"clf.fit(X_reduction_train,Y_train.values.ravel())","555cc5a9":"accuracy = clf.score(X_reduction_test,Y_test)\naccuracy","84f89e36":"data_predict = [ X_reduction_test[0],]\nclf.predict(data_predict)","4789a0cd":"from sklearn.model_selection import cross_val_score","9ac33ce6":"scores = cross_val_score(neighbors.KNeighborsClassifier(),X_reduction_train,Y_train.values.ravel(), scoring=\"accuracy\", cv=20)","71dc16da":"scores.mean()","89180883":"### Kfold validation","684603ed":"### Replace column names ","faf5ea4d":"# PCA-Cancer","b4674c30":"### Remove rows with char '?'","13f15851":"### Remove column id","a0d08824":"### Normalize the data","f89b0742":"### PCA","bb2f6e0e":"### KNN","61175063":"### Check for NA's"}}