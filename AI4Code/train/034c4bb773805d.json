{"cell_type":{"c47c77b6":"code","53f55307":"code","dfd223f7":"code","15b9d309":"code","5fd98b47":"code","ad53c1d0":"code","5be55881":"code","c69a1ef7":"code","fbc0bda0":"code","628d05bd":"code","d7b97096":"code","3a0c9302":"code","f4d87e6c":"code","f787d64b":"code","9a5a6478":"code","e899cb75":"code","31bbfaf1":"code","6fab0de1":"code","b9ff6e22":"code","3d48e297":"code","c569ba1f":"code","0d033608":"code","e039eb52":"code","a9ba440b":"code","375e6832":"code","14ec237b":"code","288d740c":"code","b2e321e1":"code","2ddd87c9":"code","7afd199b":"code","466780dd":"code","8f43f9d2":"code","2438f14d":"code","eb3966ed":"code","4847336b":"code","04887485":"code","a87dd029":"code","05c1c86e":"code","0c027475":"code","6094f78c":"code","8279a3a9":"code","795f1ace":"code","22774339":"code","25f5843a":"code","6020360b":"code","0e97b0f1":"code","5c6bd6cf":"code","3a5f3b5a":"code","049c8cf9":"code","1acb399a":"code","8314c3c6":"code","d1b11d5a":"code","50b70227":"code","a33745dd":"code","dd2a3e62":"code","90086f28":"code","ca21db30":"code","70d253ea":"code","5c3c7114":"code","86406115":"code","4c4eec76":"code","7c00b948":"code","d664f349":"code","1a6aa759":"code","7f4ffb3b":"code","c21769c6":"code","864e39b3":"code","efcbaa5b":"code","6f34696e":"code","4ecca9fc":"code","c9e7369f":"code","81535e0e":"code","95af46d4":"code","4d194a09":"code","433c6d2b":"code","a4cfa191":"code","fe65e8a9":"code","e687164b":"code","24e43f13":"code","2ae51614":"code","2723b8ba":"code","fd56eddf":"code","86ac9e25":"code","9e22a765":"code","adc675da":"code","2c7e427e":"code","03ccd169":"code","d9f70da9":"code","4a9fb90c":"code","791c379f":"code","299f0833":"code","9a583114":"code","4789e6d6":"code","06ca820c":"code","ea974221":"markdown","6248c119":"markdown","6bc6f7c3":"markdown","510db44f":"markdown","7c354659":"markdown","c9b392c2":"markdown","dd79437c":"markdown","60bcfd5b":"markdown","0214b321":"markdown","3853a370":"markdown","6d320d9c":"markdown","437718d6":"markdown","7a80fc45":"markdown","8fbc3e6f":"markdown","348d13b9":"markdown","0f75f937":"markdown","84dabc85":"markdown","92d963b4":"markdown","0c0ed16b":"markdown","bb3c249b":"markdown","f2f28e59":"markdown","c3f8c334":"markdown","a155b060":"markdown","a35e6122":"markdown","dcc58bcc":"markdown","9358ec1f":"markdown","617fa606":"markdown","bbe048be":"markdown","92344bdc":"markdown","ecf27e07":"markdown","659d167c":"markdown","8a663201":"markdown","a535d1bb":"markdown"},"source":{"c47c77b6":"!pip install dataprep;","53f55307":"#Bibliotecas para manipula\u00e7\u00f5es dos dados\nimport numpy as np\nimport pandas as pd\nimport warnings\nimport pickle\nwarnings.filterwarnings('ignore')\n\n#bibliotecas para a visualiza\u00e7\u00e3o dos dados\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom dataprep.eda import create_report\nfrom dataprep.eda import plot_missing\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda import plot\n\n#biblioecas para o pr\u00e9 processamento de uma maquina preditiva\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n\n#bibliotecas de algorit\u00edmos de classifica\u00e7\u00e3o\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\n\n\n#bibliotecas de valida\u00e7\u00e3o da maquina preditiva\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom yellowbrick.classifier import ConfusionMatrix\n","dfd223f7":"#lendo os dados da ocorrencia de atque card\u00edaco\n","15b9d309":"df=pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","5fd98b47":"#analise dos dados","ad53c1d0":"cat_cols = ['sex','exng','caa','cp','fbs','restecg','slp','thall']\ncon_cols = [\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]\ntarget_col = [\"output\"]\n\nprint(\"As vari\u00e1veis categ\u00f3ricas s\u00e3o : \", cat_cols)\nprint(\"As vari\u00e1veis cont\u00ednuas s\u00e3o : \", con_cols)\nprint(\"A vari\u00e1vel alvo \u00e9 o :  \", target_col)","5be55881":"df.head()","c69a1ef7":"df.tail()","fbc0bda0":"df.shape","628d05bd":"df.info()","d7b97096":"#Tratamento dos valores faltantes","3a0c9302":"df.isnull().sum()","f4d87e6c":"plot_missing(df)","f787d64b":"#Tratamento de linhas duplicadas","9a5a6478":"df.duplicated().sum()","e899cb75":"df.loc[df.duplicated(keep=False),:]","31bbfaf1":"df.drop_duplicates(keep='first',inplace=True)","6fab0de1":"df.shape","b9ff6e22":"fig = plt.figure(figsize=(18,15))\ngs = fig.add_gridspec(3,3)\ngs.update(wspace=0.5, hspace=0.25)\nax0 = fig.add_subplot(gs[0,0])\nax1 = fig.add_subplot(gs[0,1])\nax2 = fig.add_subplot(gs[0,2])\nax3 = fig.add_subplot(gs[1,0])\nax4 = fig.add_subplot(gs[1,1])\nax5 = fig.add_subplot(gs[1,2])\nax6 = fig.add_subplot(gs[2,0])\nax7 = fig.add_subplot(gs[2,1])\nax8 = fig.add_subplot(gs[2,2])\n\nbackground_color = \"#e0fbfc\"\ncolor_palette = [\"#800000\",\"#8000ff\",\"#6aac90\",\"#5833ff\",\"#da8829\"]\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \nax2.set_facecolor(background_color) \nax3.set_facecolor(background_color) \nax4.set_facecolor(background_color) \nax5.set_facecolor(background_color) \nax6.set_facecolor(background_color) \nax7.set_facecolor(background_color) \nax8.set_facecolor(background_color) \n\n# Title of the plot\nax0.spines[\"bottom\"].set_visible(False)\nax0.spines[\"left\"].set_visible(False)\nax0.spines[\"top\"].set_visible(False)\nax0.spines[\"right\"].set_visible(False)\nax0.tick_params(left=False, bottom=False)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.text(0.5,0.5,\n         'Count plot para \\n vari\u00e1veis categ\u00f3ricas\\n_________________',\n         horizontalalignment='center',\n         verticalalignment='center',\n         fontsize=18, fontweight='bold',\n         fontfamily='serif',\n         color=\"#000000\")\n\n# Sex count\nax1.text(0.3, 220, 'Sex', fontsize=15, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax1.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax1,data=df,x='sex',palette=color_palette)\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\n# Exng count\nax2.text(0.3, 220, 'Exng', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax2.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax2,data=df,x='exng',palette=color_palette)\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\n\n# Caa count\nax3.text(1.5, 200, 'Caa', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax3.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax3,data=df,x='caa',palette=color_palette)\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\n\n# Cp count\nax4.text(1.5, 162, 'Cp', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax4.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax4,data=df,x='cp',palette=color_palette)\nax4.set_xlabel(\"\")\nax4.set_ylabel(\"\")\n\n# Fbs count\nax5.text(0.5, 290, 'Fbs', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax5.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax5,data=df,x='fbs',palette=color_palette)\nax5.set_xlabel(\"\")\nax5.set_ylabel(\"\")\n\n# Restecg count\nax6.text(0.75, 165, 'Restecg', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax6.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax6,data=df,x='restecg',palette=color_palette)\nax6.set_xlabel(\"\")\nax6.set_ylabel(\"\")\n\n# Slp count\nax7.text(0.85, 155, 'Slp', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax7.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax7,data=df,x='slp',palette=color_palette)\nax7.set_xlabel(\"\")\nax7.set_ylabel(\"\")\n\n# Thall count\nax8.text(1.2, 180, 'Thall', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax8.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax8,data=df,x='thall',palette=color_palette)\nax8.set_xlabel(\"\")\nax8.set_ylabel(\"\")\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax1.spines[s].set_visible(False)\n    ax2.spines[s].set_visible(False)\n    ax3.spines[s].set_visible(False)\n    ax4.spines[s].set_visible(False)\n    ax5.spines[s].set_visible(False)\n    ax6.spines[s].set_visible(False)\n    ax7.spines[s].set_visible(False)\n    ax8.spines[s].set_visible(False)","3d48e297":"fig = plt.figure(figsize=(20,16))\ngs = fig.add_gridspec(2,3)\ngs.update(wspace=0.3, hspace=0.15)\nax0 = fig.add_subplot(gs[0,0])\nax1 = fig.add_subplot(gs[0,1])\nax2 = fig.add_subplot(gs[0,2])\nax3 = fig.add_subplot(gs[1,0])\nax4 = fig.add_subplot(gs[1,1])\nax5 = fig.add_subplot(gs[1,2])\n\nbackground_color = \"#e0fbfc\"\ncolor_palette = [\"#800000\",\"#8000ff\",\"#6aac90\",\"#5833ff\",\"#da8829\"]\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \nax2.set_facecolor(background_color) \nax3.set_facecolor(background_color) \nax4.set_facecolor(background_color) \nax5.set_facecolor(background_color) \n\n# Titulo\nax0.spines[\"bottom\"].set_visible(False)\nax0.spines[\"left\"].set_visible(False)\nax0.spines[\"top\"].set_visible(False)\nax0.spines[\"right\"].set_visible(False)\nax0.tick_params(left=False, bottom=False)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.text(0.5,0.5,\n         'Verificando a distribui\u00e7\u00e3o das\\n vari\u00e1veis cont\u00ednuas \\n________________',\n         horizontalalignment='center',\n         verticalalignment='center',\n         fontsize=15, fontweight='bold',\n         fontfamily='serif',\n         color=\"#000000\")\n\n# Age \nax1.text(-0.08, 81, 'idade', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax1.grid(color='#000000', linestyle=':', axis='y',  dashes=(1,5))\nsns.boxenplot(ax=ax1,y=df['age'],palette=[\"#800000\"],width=0.6)\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\n# Trtbps \nax2.text(-0.25, 208, 'Press\u00e3o sang\u00ednea', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax2.grid(color='#000000', linestyle=':', axis='y',dashes=(1,5))\nsns.boxenplot(ax=ax2,y=df['trtbps'],palette=[\"#8000ff\"],width=0.6)\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\n\n# Chol \nax3.text(-0.15, 600, 'Colesterol', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax3.grid(color='#000000', linestyle=':', axis='y',  dashes=(1,5))\nsns.boxenplot(ax=ax3,y=df['chol'],palette=[\"#6aac90\"],width=0.6)\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\n\n# Thalachh \nax4.text(-0.40, 210, 'Taxa card\u00edaca m\u00e1xima alcan\u00e7ada', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax4.grid(color='#000000', linestyle=':', axis='y', dashes=(1,5))\nsns.boxenplot(ax=ax4,y=df['thalachh'],palette=[\"#5833ff\"],width=0.6)\nax4.set_xlabel(\"\")\nax4.set_ylabel(\"\")\n\n# oldpeak \nax5.text(-0.1, 6.6, 'Oldpeak', fontsize=14, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax5.grid(color='#000000', linestyle=':', axis='y',  dashes=(1,5))\nsns.boxenplot(ax=ax5,y=df['oldpeak'],palette=[\"#da8829\"],width=0.6)\nax5.set_xlabel(\"\")\nax5.set_ylabel(\"\")\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax1.spines[s].set_visible(False)\n    ax2.spines[s].set_visible(False)\n    ax3.spines[s].set_visible(False)\n    ax4.spines[s].set_visible(False)\n    ax5.spines[s].set_visible(False)","c569ba1f":"fig = plt.figure(figsize=(10,7))\ngs = fig.add_gridspec(1,2)\ngs.update(wspace=0.5, hspace=0.25)\nax0 = fig.add_subplot(gs[0,0])\nax1 = fig.add_subplot(gs[0,1])\n\nbackground_color = \"#e0fbfc\"\ncolor_palette = [\"#800000\",\"#8000ff\",\"#6aac90\",\"#5833ff\",\"#da8829\"]\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \n\n# Title of the plot\nax0.spines[\"bottom\"].set_visible(False)\nax0.spines[\"left\"].set_visible(False)\nax0.spines[\"top\"].set_visible(False)\nax0.spines[\"right\"].set_visible(False)\nax0.tick_params(left=False, bottom=False)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.text(0.5,0.5,\n         'Count plot do \\n OUTPUT\\n_________________',\n         horizontalalignment='center',\n         verticalalignment='center',\n         fontsize=18, fontweight='bold',\n         fontfamily='serif',\n         color=\"#000000\")\n\n# output count\nax1.text(0.3, 190, 'OUTPUT', fontsize=15, fontweight='bold', fontfamily='serif', color=\"#000000\")\nax1.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax1,data=df,x='output',palette=color_palette)\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\n\n","0d033608":"fig = plt.figure(figsize=(10,10))\ngs = fig.add_gridspec(1,1)\ngs.update(wspace=0.3, hspace=0.15)\nax0 = fig.add_subplot(gs[0,0])\n\ncolor_palette = [\"#5833ff\",\"#da8829\"]\ndf_corr = df[con_cols].corr().transpose()\nax0.text(1.5,-0.1,\"Correlation Matrix\",fontsize=22, fontweight='bold', fontfamily='serif', color=\"#000000\")\nsns.heatmap(df_corr,fmt=\".1f\",annot=True,cmap='YlGnBu')\nplt.show()","e039eb52":"plot_correlation(df)","a9ba440b":"fig = plt.figure(figsize=(18,18))\ngs = fig.add_gridspec(5,2)\ngs.update(wspace=0.5, hspace=0.6)\nax0 = fig.add_subplot(gs[0,0])\nax1 = fig.add_subplot(gs[0,1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\nax4 = fig.add_subplot(gs[2,0])\nax5 = fig.add_subplot(gs[2,1])\nax6 = fig.add_subplot(gs[3,0])\nax7 = fig.add_subplot(gs[3,1])\nax8 = fig.add_subplot(gs[4,0])\nax9 = fig.add_subplot(gs[4,1])\n\nbackground_color = \"#e0fbfc\"\n\ncolor_palette = [\"#800000\",\"#8000ff\",\"#6aac90\",\"#5833ff\",\"#da8829\"]\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \nax2.set_facecolor(background_color)\nax3.set_facecolor(background_color)\nax4.set_facecolor(background_color)\nax5.set_facecolor(background_color) \nax6.set_facecolor(background_color) \nax7.set_facecolor(background_color)\nax8.set_facecolor(background_color)\nax9.set_facecolor(background_color)\n\n# Age titulo\nax0.text(0.5,0.5,\"Rela\u00e7\u00e3o da age\\ncom\\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax0.spines[\"bottom\"].set_visible(False)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.tick_params(left=False, bottom=False)\n\n# Age\nax1.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax1, data=df, x='age',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\n# TrTbps titulo\nax2.text(0.5,0.5,\"Rela\u00e7\u00e3o do Trtbps\\ncom\\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax2.spines[\"bottom\"].set_visible(False)\nax2.set_xticklabels([])\nax2.set_yticklabels([])\nax2.tick_params(left=False, bottom=False)\n\n# TrTbps\nax3.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax3, data=df, x='trtbps',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\n\n# Chol titulo\nax4.text(0.5,0.5,\"Rela\u00e7\u00e3o do chol\\nem coreela\u00e7\u00e3o com\\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax4.spines[\"bottom\"].set_visible(False)\nax4.set_xticklabels([])\nax4.set_yticklabels([])\nax4.tick_params(left=False, bottom=False)\n\n# Chol\nax5.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax5, data=df, x='chol',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax5.set_xlabel(\"\")\nax5.set_ylabel(\"\")\n\n\n# thalachh titulo\nax6.text(0.5,0.5,\"Rela\u00e7\u00e3o do thlachh\\ncom\\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax6.spines[\"bottom\"].set_visible(False)\nax6.set_xticklabels([])\nax6.set_yticklabels([])\nax6.tick_params(left=False, bottom=False)\n\n# thalachh\nax7.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(ax=ax7, data=df,x='output',y='thalachh',palette=[\"#8000ff\",\"#da8829\"])\nax7.set_xlabel(\"\")\nax7.set_ylabel(\"\")\n\n\n# Oldpeak title\nax8.text(0.5,0.5,\"Rela\u00e7\u00e3o do oldpeak \\ncom\\n a vari\u00e1vel alvo\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax8.spines[\"bottom\"].set_visible(False)\nax8.set_xticklabels([])\nax8.set_yticklabels([])\nax8.tick_params(left=False, bottom=False)\n\n# Oldpeak\nax9.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax9, data=df, x='oldpeak',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax9.set_xlabel(\"\")\nax9.set_ylabel(\"\")\n\nfor i in [\"top\",\"left\",\"right\"]:\n    ax0.spines[i].set_visible(False)\n    ax1.spines[i].set_visible(False)\n    ax2.spines[i].set_visible(False)\n    ax3.spines[i].set_visible(False)\n    ax4.spines[i].set_visible(False)\n    ax5.spines[i].set_visible(False)\n    ax6.spines[i].set_visible(False)\n    ax7.spines[i].set_visible(False)\n    ax8.spines[i].set_visible(False)\n    ax9.spines[i].set_visible(False)\n","375e6832":"fig = plt.figure(figsize=(30,25))\ngs = fig.add_gridspec(11,2)\ngs.update(wspace=0.5, hspace=0.5)\nax0 = fig.add_subplot(gs[0,0])\nax1 = fig.add_subplot(gs[0,1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\nax4 = fig.add_subplot(gs[2,0])\nax5 = fig.add_subplot(gs[2,1])\nax6 = fig.add_subplot(gs[3,0])\nax7 = fig.add_subplot(gs[3,1])\nax8 = fig.add_subplot(gs[4,0])\nax9 = fig.add_subplot(gs[4,1])\nax10 = fig.add_subplot(gs[5,0])\nax11 = fig.add_subplot(gs[5,1])\nax12 = fig.add_subplot(gs[6,0])\nax13 = fig.add_subplot(gs[6,1])\nax14 = fig.add_subplot(gs[7,0])\nax15 = fig.add_subplot(gs[7,1])\n\nbackground_color = \"#e0fbfc\"\ncolor_palette = [\"#800000\",\"#8000ff\",\"#6aac90\",\"#5833ff\",\"#da8829\"]\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \nax2.set_facecolor(background_color)\nax3.set_facecolor(background_color)\nax4.set_facecolor(background_color)\nax5.set_facecolor(background_color) \nax6.set_facecolor(background_color) \nax7.set_facecolor(background_color)\nax8.set_facecolor(background_color)\nax9.set_facecolor(background_color)\nax10.set_facecolor(background_color)\nax11.set_facecolor(background_color)\nax12.set_facecolor(background_color)\nax13.set_facecolor(background_color)\nax14.set_facecolor(background_color)\nax15.set_facecolor(background_color)\n\n\n# Cp title\n# 0 = Typical Angina, 1 = Atypical Angina, 2 = Non-anginal Pain, 3 = Asymptomatic\nax0.text(0.5,0.5,\"Rela\u00e7\u00e3o do cp \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax0.spines[\"bottom\"].set_visible(False)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.tick_params(left=False, bottom=False)\nax0.text(1,.5,\"0 - T\u00edpica Angina\\n1 - At\u00edpica Angina\\n2 - Dor n\u00e3o Anginosa\\n3 - Assintom\u00e1tica\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\n\n# Cp\nax1.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax1, data=df, x='cp',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\n# Caa title\nax2.text(0.5,0.5,\"Rela\u00e7\u00e3o do caa \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax2.text(1,.5,\"Numero de vasos sangu\u00edneos\\n0,1,2,3,4\\n___________\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\n\nax2.spines[\"bottom\"].set_visible(False)\nax2.set_xticklabels([])\nax2.set_yticklabels([])\nax2.tick_params(left=False, bottom=False)\n\n# Caa\nax3.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax3, data=df, x='caa',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\n\n# Sex title\nax4.text(0.5,0.5,\"Rela\u00e7\u00e3o do sex \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax4.text(1,.5,\"0 - Female\\n1 - Male\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\nax4.spines[\"bottom\"].set_visible(False)\nax4.set_xticklabels([])\nax4.set_yticklabels([])\nax4.tick_params(left=False, bottom=False)\n\n# Sex\nax5.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax5,data=df,x='sex',palette=[\"#8000ff\",\"#da8829\"], hue='output')\nax5.set_xlabel(\"\")\nax5.set_ylabel(\"\")\n\n# Thall title\nax6.text(0.5,0.5,\"Rela\u00e7\u00e3o do thall \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax6.text(1,.5,\"Resultado do teste\\nde estresse\\n0, 1, 2, 3\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\nax6.spines[\"bottom\"].set_visible(False)\nax6.set_xticklabels([])\nax6.set_yticklabels([])\nax6.tick_params(left=False, bottom=False)\n\n# Thall\nax7.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax7, data=df, x='thall',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax7.set_xlabel(\"\")\nax7.set_ylabel(\"\")\n\n# fbs title\nax8.text(0.5,0.5,\"Rela\u00e7\u00e3o do fbs \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax8.text(1,.5,\"0 -menor que 120mg de a\u00e7ucar\\n1 -maior que 120mg de a\u00e7ucar \",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\nax8.spines[\"bottom\"].set_visible(False)\nax8.set_xticklabels([])\nax8.set_yticklabels([])\nax8.tick_params(left=False, bottom=False)\n\n# fbs\nax9.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax9,data=df,x='fbs',palette=[\"#8000ff\",\"#da8829\"], hue='output')\nax9.set_xlabel(\"\")\nax9.set_ylabel(\"\")\n\n# Exng title\n\nax10.text(0.5,0.5,\"Rela\u00e7\u00e3o do exng \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax10.text(1,.5,\"Angina induzida por exerc\u00edcio\\n0 = N\u00e3o,1 = Sim\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\n#Exng\nax10.spines[\"bottom\"].set_visible(False)\nax10.set_xticklabels([])\nax10.set_yticklabels([])\nax10.tick_params(left=False, bottom=False)\n\nax11.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.countplot(ax=ax11,data=df,x='exng',palette=[\"#8000ff\",\"#da8829\"], hue='output')\nax11.set_xlabel(\"\")\nax11.set_ylabel(\"\")\n\n\n# Restecg title\nax12.text(0.5,0.5,\"Rela\u00e7\u00e3o do Restecg \\ncom \\n a vari\u00e1vel alvo\\n___________\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax12.text(1,.5,\"Resultados eletrocardiogr\u00e1ficos\\n(0, 1, 2)\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\nax12.spines[\"bottom\"].set_visible(False)\nax12.set_xticklabels([])\nax12.set_yticklabels([])\nax12.tick_params(left=False, bottom=False)\n\n# Restecg\nax13.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax13, data=df, x='restecg',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax13.set_xlabel(\"\")\nax13.set_ylabel(\"\")\n\n\n\n# Slp title\nax14.text(0.5,0.5,\"Rela\u00e7\u00e3o do Slp \\ncom \\n a vari\u00e1vel alvo\",\n        horizontalalignment = 'center',\n        verticalalignment = 'center',\n        fontsize = 18,\n        fontweight='bold',\n        fontfamily='serif',\n        color='#000000')\nax14.text(1,.5,\"Declive\\n(0, 1, 2)\",\n        horizontalalignment = 'center',\n         verticalalignment = 'center',\n        fontsize = 14\n        )\nax14.spines[\"bottom\"].set_visible(False)\nax14.set_xticklabels([])\nax14.set_yticklabels([])\nax14.tick_params(left=False, bottom=False)\n\n# Slp\nax15.grid(color='#000000', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(ax=ax15, data=df, x='slp',hue=\"output\", fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nax15.set_xlabel(\"\")\nax15.set_ylabel(\"\") \n\n\nfor i in [\"top\",\"left\",\"right\"]:\n    ax0.spines[i].set_visible(False)\n    ax1.spines[i].set_visible(False)\n    ax2.spines[i].set_visible(False)\n    ax3.spines[i].set_visible(False)\n    ax4.spines[i].set_visible(False)\n    ax5.spines[i].set_visible(False)\n    ax6.spines[i].set_visible(False)\n    ax7.spines[i].set_visible(False)\n    ax8.spines[i].set_visible(False)\n    ax9.spines[i].set_visible(False)\n    ax10.spines[i].set_visible(False)\n    ax11.spines[i].set_visible(False)","14ec237b":"create_report(df)","288d740c":"df.columns","b2e321e1":"X_heart= df.iloc[:, 0:12].values\nprint(X_heart)","2ddd87c9":"y_heart= df.iloc[:,13].values\nprint(y_heart)","7afd199b":"scaler = StandardScaler()","466780dd":"X_heart=scaler.fit_transform(X_heart)","8f43f9d2":"X_heart_treinamento, X_heart_teste, y_heart_treinamento, y_heart_teste = train_test_split(X_heart, y_heart, test_size = 0.2, random_state = 0)","2438f14d":"with open('heart.pkl', mode = 'wb') as f:\n  pickle.dump([X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste], f)","eb3966ed":"majority_learner0=165+138\nmajority_learner1=(165\/303)*100\nmajority_learner1","4847336b":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","04887485":"X_heart_treinamento.shape, y_heart_treinamento.shape","a87dd029":"X_heart_teste.shape, y_heart_teste.shape","05c1c86e":"arvore_heart = DecisionTreeClassifier(random_state=42)\narvore_heart.fit(X_heart_treinamento, y_heart_treinamento)","0c027475":"previsoes = arvore_heart.predict(X_heart_teste)\nprevisoes","6094f78c":"y_heart_teste","8279a3a9":"accuracy_score(y_heart_teste,previsoes)*100","795f1ace":"from sklearn.metrics import classification_report\nprint(classification_report(y_heart_teste, previsoes))","22774339":"cm_arvore_decisao = ConfusionMatrix(arvore_heart)\ncm_arvore_decisao.fit(X_heart_treinamento, y_heart_treinamento)\ncm_arvore_decisao.score(X_heart_teste, y_heart_teste)","25f5843a":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","6020360b":"X_heart_treinamento.shape,X_heart_teste.shape","0e97b0f1":"y_heart_treinamento.shape,y_heart_teste.shape","5c6bd6cf":"random_heart = RandomForestClassifier(random_state=42)\nrandom_heart.fit(X_heart_treinamento, y_heart_treinamento)","3a5f3b5a":"previsoes = random_heart.predict(X_heart_teste)\nprevisoes","049c8cf9":"y_heart_teste","1acb399a":"accuracy_score(y_heart_teste,previsoes)*100","8314c3c6":"from sklearn.metrics import classification_report\nprint(classification_report(y_heart_teste, previsoes))","d1b11d5a":"cm_random = ConfusionMatrix(random_heart)\ncm_random.fit(X_heart_treinamento, y_heart_treinamento)\ncm_random.score(X_heart_teste, y_heart_teste)","50b70227":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","a33745dd":"X_heart_treinamento.shape, y_heart_treinamento.shape","dd2a3e62":"y_heart_treinamento.shape,y_heart_teste.shape","90086f28":"knn_heart = KNeighborsClassifier()\nknn_heart.fit(X_heart_treinamento, y_heart_treinamento)","ca21db30":"previsoes = knn_heart.predict(X_heart_teste)\nprevisoes","70d253ea":"y_heart_teste","5c3c7114":"accuracy_score(y_heart_teste,previsoes)*100","86406115":"error_rate = []\n  \nfor i in range(1, 40):\n      \n    model = KNeighborsClassifier(n_neighbors = i)\n    model.fit(X_heart_treinamento, y_heart_treinamento)\n    pred_i = model.predict(X_heart_teste)\n    error_rate.append(np.mean(pred_i != y_heart_teste))\n  \nplt.figure(figsize =(10, 8))\nplt.plot(range(1, 40), error_rate, color ='blue',\n                linestyle ='dashed', marker ='o',\n         markerfacecolor ='red', markersize = 10)\n  \nplt.title('Taxa de erro vs valor do K')\nplt.xlabel('K')\nplt.ylabel('Taxa de erro')","4c4eec76":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","7c00b948":"knn_heart = KNeighborsClassifier(n_neighbors=14)\nknn_heart.fit(X_heart_treinamento, y_heart_treinamento)","d664f349":"previsoes = knn_heart.predict(X_heart_teste)\nprevisoes","1a6aa759":"from sklearn.metrics import classification_report\nprint(classification_report(y_heart_teste, previsoes))","7f4ffb3b":"cm_knn = ConfusionMatrix(knn_heart)\ncm_knn.fit(X_heart_treinamento, y_heart_treinamento)\ncm_knn.score(X_heart_teste, y_heart_teste)","c21769c6":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","864e39b3":"X_heart_treinamento.shape, y_heart_treinamento.shape","efcbaa5b":"y_heart_treinamento.shape,y_heart_teste.shape","6f34696e":"rl_heart = LogisticRegression(random_state=42)\nrl_heart.fit(X_heart_treinamento, y_heart_treinamento)","4ecca9fc":"previsoes = rl_heart.predict(X_heart_teste)\nprevisoes","c9e7369f":"y_heart_teste","81535e0e":"accuracy_score(y_heart_teste,previsoes)*100","95af46d4":"from sklearn.metrics import classification_report\nprint(classification_report(y_heart_teste, previsoes))","4d194a09":"rl_heart = ConfusionMatrix(rl_heart)\nrl_heart.fit(X_heart_treinamento, y_heart_treinamento)\nrl_heart.score(X_heart_teste, y_heart_teste)","433c6d2b":"with open('heart.pkl', 'rb') as f:\n  X_heart_treinamento, y_heart_treinamento, X_heart_teste, y_heart_teste = pickle.load(f)","a4cfa191":"X_heart_treinamento.shape, y_heart_treinamento.shape","fe65e8a9":"y_heart_treinamento.shape,y_heart_teste.shape","e687164b":"svc_heart = SVC(random_state=0)\nsvc_heart.fit(X_heart_treinamento, y_heart_treinamento)","24e43f13":"previsoes = svc_heart.predict(X_heart_teste)\nprevisoes","2ae51614":"y_heart_teste","2723b8ba":"accuracy_score(y_heart_teste,previsoes)","fd56eddf":"svc_heart = ConfusionMatrix(svc_heart)\nsvc_heart.fit(X_heart_treinamento, y_heart_treinamento)\nsvc_heart.score(X_heart_teste, y_heart_teste)","86ac9e25":"pip install xgboost","9e22a765":"def xgb_classifier(n_estimators, max_depth, reg_alpha,\n                   reg_lambda, min_child_weight, num_boost_round,\n                   gamma):\n    params = {\"booster\": 'gbtree',\n              \"objective\" : \"binary:logistic\",\n              \"eval_metric\" : \"auc\", \n              \"is_unbalance\": True,\n              \"n_estimators\": int(n_estimators),\n              \"max_depth\" : int(max_depth),\n              \"reg_alpha\" : reg_alpha,\n              \"reg_lambda\" : reg_lambda,\n              \"gamma\": gamma,\n              \"num_threads\" : 20,\n              \"min_child_weight\" : int(min_child_weight),\n              \"learning_rate\" : 0.01,\n              \"subsample_freq\" : 5,\n              \"seed\" : 42,\n              \"verbosity\" : 0,\n              \"num_boost_round\": int(num_boost_round)}\n    train_data = xgb.DMatrix(X_heart_treinamento, y_heart_treinamento)\n    cv_result = xgb.cv(params,\n                       train_data,\n                       1000,\n                       early_stopping_rounds=100,\n                       stratified=True,\n                       nfold=3)\n    return cv_result['test-auc-mean'].iloc[-1]","adc675da":"pip install bayesian-optimization\n","2c7e427e":"from bayes_opt import BayesianOptimization\nxgbBO = BayesianOptimization(xgb_classifier, {  \"n_estimators\": (10, 200),\n                                                'max_depth': (4, 40),\n                                                'reg_alpha': (0.0, 0.2),\n                                                'reg_lambda': (0.0, 0.1),\n                                                'min_child_weight': (1, 10),\n                                                'num_boost_round': (100, 1000),\n                                                \"gamma\": (0, 10)\n                                                })\n\nxgbBO.maximize(n_iter=50, init_points=20)","03ccd169":"xgbBO.max","d9f70da9":"parametros = {'gamma': 0.14999791713495747,\n  'max_depth': 40,\n  'min_child_weight': 9,\n  'n_estimators': 98,\n  'num_boost_round': 685,\n  'reg_alpha': 0.06268011871402068,\n  'reg_lambda': 0.021174755161898484}","4a9fb90c":"xgbc_heart=xgb_classifier=XGBClassifier(num_threads=20,subsample_freq=0.5,verbosity=0,seed=42,max_depth=40,eval_metric=\"auc\",booster='gbtree',gamma=0.14999791713495747,min_child_weight=9,n_estimators=98,reg_alpha=0.06268011871402068,reg_lambda=0.021174755161898484)\nxgbc_heart.fit(X_heart_treinamento,y_heart_treinamento)","791c379f":"from sklearn.model_selection import cross_val_score, KFold","299f0833":"previsoes = xgbc_heart.predict(X_heart_teste)\nprevisoes","9a583114":"y_heart_teste\n","4789e6d6":"accuracy_score(y_heart_teste,previsoes)","06ca820c":"xgbc_heart = ConfusionMatrix(xgbc_heart)\nxgbc_heart.fit(X_heart_treinamento, y_heart_treinamento)\nxgbc_heart.score(X_heart_teste, y_heart_teste)","ea974221":"### 1-Classificador base - Majority learner-54.45%\n\n---\n\n","6248c119":"\nQual o problema de neg\u00f3cio?\n\nConstruir uma maquina preditiva e fazer um EDA,com o intuito de prever se o paciente \u00e9 mais suscet\u00edvel,ou n\u00e3o,a um poss\u00edvel atauqe card\u00edaco\n\nWhat is the business problem?\n\nBuild a predictive machine and do EDA, in order to predict if the patient is more susceptible, or not, to a possible heart attack","6bc6f7c3":"### **Rela\u00e7\u00e3o entre as vari\u00e1veis categ\u00f3ricas com o output (1 = alto,0 =baixo)\/Relation among cat features and output (1 = high, 0 = low)**\n\n*   RESTECG\n*   EXNG \n*   SLP\n*   FBS\n*   THALL \n*   CP  \n*   CAA\n*   SEX \n\n","510db44f":"### 3-Random forest-88,52%","7c354659":"### **INSIGHTS**\n\n\n\n\n\n\n","c9b392c2":"## Leitura e primeiras visualiza\u00e7\u00f5es dos dados\/Reading the dataset","dd79437c":"### Divis\u00e3o entre previsores e classe\/Division between predictors and class","60bcfd5b":"## Descri\u00e7\u00f5es das variaveis\/Data Dictionary\n\n\n\n\n\n\n","0214b321":"As vari\u00e1veis categ\u00f3ricas:\n['sex', 'exng', 'caa', 'cp', 'fbs', 'restecg', 'slp', 'thall']\n\n---\n\n\n\nAs vari\u00e1veis cont\u00ednuas s\u00e3o \n['age', 'trtbps', 'chol', 'thalachh', 'oldpeak']","3853a370":"### Escalonamento dos valores\/Feature Scaling","6d320d9c":"### Contagem e distribui\u00e7\u00e3o das vari\u00e1veis ceteg\u00f3ricas\/Counting and distribution of cat features","437718d6":"### Correle\u00e7\u00e3o entre as var\u00edaveis\/Correlation Matrix","7a80fc45":"### 6-SVC-88,52","8fbc3e6f":"### Contagem e Distribui\u00e7\u00e3o das vari\u00e1veis cont\u00ednuas\/Counting and distribuition of con features","348d13b9":"### **Rela\u00e7\u00e3o das vari\u00e1veis cont\u00ednuas com o output (1 = alto,0 =baixo)\/Relation among con features  to output (1 = high, 0 = low)**\n\n* AGE\n* TRTBPS\n* CHOL\n* THALACHH\n* OLDPEAK","0f75f937":"### 2-\u00c1rvores de decis\u00e3o-77,04%\n\n---\n\n","84dabc85":"### Salvando as vari\u00e1veis\/Saving","92d963b4":"#### Otimiza\u00e7\u00e3o KNN","0c0ed16b":"## EDA","bb3c249b":"### Divis\u00e3o entre base de treinamento e base de teste\/Train-Test split","f2f28e59":"* **VARI\u00c1VEIS CONT\u00cdNUAS** \n\n---\n\n\n\nage - Idade do paciente\n\ntrtbps - Press\u00e3o sangu\u00ednea em repouso (em mm Hg)\n\nchol - Colesterol em mg \/ dl obtido por meio do sensor de IMC\n\nthalachh - Frequ\u00eancia card\u00edaca m\u00e1xima alcan\u00e7ada\n\noldpeak - pico anterior\n\n* **VARI\u00c1VEIS CATEG\u00d3RICAS**\n\n---\n\n\n\nsex - Sexo do paciente\n\ncp - Tipo de dor tor\u00e1cica ~ 0 = angina t\u00edpica, 1 = angina at\u00edpica, 2 = dor n\u00e3o anginosa, 3 = assintom\u00e1tica\n\n\nfbs - (a\u00e7\u00facar no sangue em jejum> 120 mg \/ dl) ~ 1 = Verdadeiro, 0 = Falso\n\nrestecg - Resultados eletrocardiogr\u00e1ficos em repouso ~ 0 = Normal, 1 = normalidade da onda ST-T, 2 = hipertrofia ventricular esquerda\n\n-slp - Declive\n\nn\u00famero de vasos card\u00edacos principais \n\nthall - resultado do teste de estresse = (0,3)\n\nexng - Angina induzida por exerc\u00edcio = (1 = Sim, 0 = N\u00e3o)\n\n\n* **VARI\u00c1VEL ALVO**\n---\n\n-output - Vari\u00e1vel de destino(1 = alto,0 = baixo)","c3f8c334":"### 7-XGBOOST-85,24%","a155b060":"### Distribui\u00e7\u00e3o do output\/Output distribuition","a35e6122":"## Limpeza dos dados\/Data cleaning","dcc58bcc":"## Importando as bibliotecas\/Packages","9358ec1f":"**CAT FEATURES**\n\n\n* A cp greater than 0 can be a risk factor\n\n* We have 2x more people with sex = 1 than sex = 1\n\n* We have 5x more people with fbs = 0 than fbs = 1\n\n* Only about 8 people have a result other than 0 and 1 in the \"restecg\" variable\n\n* a caa equal to 0 can be a risk factor\n\n* An exng equal to = 0 can be a risk factor\n\n* Sex = 0 has 3x more chance of a possible heart attack than Sex = 1, but SEX = 0 has only half the data compared to Sex = 1\n\n* A thall equal to 2 can be a risk factor\n\n* An slp = 2 can be a risk factor\n\n\n\n\n\n---\n\n**CORRELATION OF VARIABLES**\n\n\n* We do not have a strong relationship between continuous variables\n\n* oldpeak and slp have a good negative correlation, when oldpeak lowers slp increases.\n\n* When the values \u200b\u200bof the variables (exng,oldpeak,caa) go down, the output tends to be equal to 1\n\n* When the values \u200b\u200bof the variables (cp and thalachh) increase, the output tends to be equal to 1\n\n---\n\n\n\n\n**CON FEATURES**\n\n* All continuous variables have outliers.\n\n* We have an average age of 52 to 60 years.\n\n* Trtbps ranges from 120 to 140.\n\n* Chol ranges from 220 to 280.\n\n* thalachh ranges from 135 to 155.\n\n* Oldpeak ranges from 0 to 1.60\n\n* A thalachh above 153 may be a risk factor\n\n* An oldpeak around 0 may be a risk factor","617fa606":"### 5-Regress\u00e3o log\u00edstica-83,60%","bbe048be":"## Pr\u00e9-processamento\/Preprocessing\n\n\n\n","92344bdc":"## Algoritimos de aprendizagem de m\u00e1quina\/Machine Learning Algorithm","ecf27e07":"### 4-KNN-91,80%","659d167c":"**DADOS CATEG\u00d3RICOS**\n\n\n* Um cp maior do que 0 pode ser um fator de risco\n\n* Temos 2x a mais pessoas com o sex = 1 do que sex = 1\n\n* Temos 5x a mais de pessoas com o fbs = 0 do que fbs = 1\n\n* Apenas cerca de 8 pessoas tem um resultado diferente de 0 e 1 na vari\u00e1vel \"restecg\"\n\n* um caa igual a 0 pode ser um fator de risco\n\n* Um exng igual = 0 pode ser um fator de risco\n\n* O sex = 0 tem 3x a mais de chance de um poss\u00edvel ataque card\u00edaco do que o sex = 1,por\u00e9m o sex = 0 tem apenas metade dos dados em compara\u00e7\u00e3o do sex = 1\n\n* Um thall igual a 2 pode ser um fator de risco\n\n* Um slp = 2 pode ser um fator risco\n\n\n\n\n\n---\n\n**CORRELA\u00c7\u00c3O DAS VARI\u00c1VEIS**\n\n\n* N\u00e3o temos uma rela\u00e7\u00e3o forte entre as vari\u00e1veis cont\u00ednuas\n\n* oldpeak e slp tem uma boa correla\u00e7\u00e3o negativa,de quando o oldpeak abaixa o slp aumenta.\n\n* Quando os valores das vari\u00e1veis(exng,oldpeak,caa) abaixam,o output tende a ser igual a 1\n\n* Quando os valores das vari\u00e1veis(cp e thalachh) aumentam,o output tende a ser igual a 1\n\n---\n\n\n\n\n**DADOS CONT\u00cdNUOS**\n\n* Todos as vari\u00e1veis cont\u00ednuas tem outliers.\n\n* Temos uma m\u00e9dia de 52 a 60 anos.\n\n* Trtbps varia e 120 a 140.\n\n* Chol varia de 220 a 280.\n\n* thalachh varia de 135 a 155.\n\n* Oldpeak varia de 0 a 1.60\n\n* Um thalachh acima de 153 pode ser um fator de risco\n\n* Um oldpeak entorno de 0 pode ser um fator de risco\n\n\n\n\n\n\n","8a663201":"#Aprendizado de m\u00e1quina\/Machine learning","a535d1bb":"### Relat\u00f3rio\/dashboard"}}