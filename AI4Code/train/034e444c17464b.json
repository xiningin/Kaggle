{"cell_type":{"cca40916":"code","b1b3f904":"code","7c17e8c1":"code","7ca717bb":"code","f301e0fa":"code","01b84658":"code","b6b184fa":"code","a159e48a":"code","f23d6f99":"code","546e821d":"code","6472e85d":"code","29d2a3ae":"code","5ebd8326":"code","0c24b638":"code","4c1f27d5":"code","c7a69035":"code","4200ce72":"code","dcc6e4f1":"code","e0487e94":"code","a698d657":"code","42920414":"code","fc7c906b":"code","6acd4a9d":"code","2f3cc0c3":"code","52698489":"code","0a1301aa":"code","000c23b2":"code","bc15bd4c":"code","e9c4ebbc":"markdown","d97dbeb3":"markdown","7f8d81e6":"markdown","c9f37d42":"markdown","49e881da":"markdown","204b7de9":"markdown","2573fc26":"markdown","0a4e7aa4":"markdown","4cbc81e3":"markdown","1041d8c1":"markdown","c51f013c":"markdown"},"source":{"cca40916":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","b1b3f904":"data = pd.read_csv('..\/input\/gender-classification\/Transformed Data Set - Sheet1.csv')","7c17e8c1":"data","7ca717bb":"data.info()","f301e0fa":"data.isna().sum()","01b84658":"{column: list(data[column].unique()) for column in data.columns}","b6b184fa":"def add_prefixes(df, column, prefix):\n    return df[column].apply(lambda x: prefix + x)","a159e48a":"data['Favorite Beverage'] = add_prefixes(data, 'Favorite Beverage', 'b_')\ndata['Favorite Soft Drink'] = add_prefixes(data, 'Favorite Soft Drink', 's_')","f23d6f99":"data","546e821d":"def onehot_encode(df, columns):\n    for column in columns:\n        dummies = pd.get_dummies(df[column])\n        df = pd.concat([df, dummies], axis=1)\n        df.drop(column, axis=1, inplace=True)\n    return df","6472e85d":"data = onehot_encode(data, ['Favorite Music Genre', 'Favorite Beverage', 'Favorite Soft Drink'])","29d2a3ae":"data","5ebd8326":"color_ordering = list(data['Favorite Color'].unique())\ncolor_ordering","0c24b638":"data['Favorite Color'] = data['Favorite Color'].apply(lambda x: color_ordering.index(x))","4c1f27d5":"label_encoder = LabelEncoder()\ndata['Gender'] = label_encoder.fit_transform(data['Gender'])\ngender_mappings = {index: value for index, value in enumerate(label_encoder.classes_)}","c7a69035":"gender_mappings","4200ce72":"data","dcc6e4f1":"plt.figure(figsize=(12, 10))\nsns.heatmap(data.corr(), annot=True, vmin=-1, vmax=1)\nplt.show()","e0487e94":"y = data['Gender']\nX = data.drop('Gender', axis=1)","a698d657":"scaler = MinMaxScaler()\nX = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)","42920414":"X","fc7c906b":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7)","6acd4a9d":"y.sum() \/ len(y)","2f3cc0c3":"inputs = tf.keras.Input(shape=(18,))\nx = tf.keras.layers.Dense(64, activation='relu')(inputs)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(x)\n\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs)\n\n\nmodel.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=['accuracy']\n)\n\n\nbatch_size = 32\nepochs = 24\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=batch_size,\n    epochs=epochs,\n    verbose=0\n)","52698489":"plt.figure(figsize=(14, 10))\n\nepochs_range = range(1, epochs + 1)\ntrain_loss = history.history['loss']\nval_loss = history.history['val_loss']\n\nplt.plot(epochs_range, train_loss, label=\"Training Loss\")\nplt.plot(epochs_range, val_loss, label=\"Validation Loss\")\n\nplt.title(\"Training and Validation Loss\")\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Loss\")\nplt.legend()\n\nplt.show()","0a1301aa":"np.argmin(val_loss)","000c23b2":"model.evaluate(X_test, y_test)","bc15bd4c":"len(y_test)","e9c4ebbc":"# Visualization","d97dbeb3":"### Ordinal Encoding","7f8d81e6":"# Data Every Day\n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/uyZZIVngbqs","c9f37d42":"# Getting Started","49e881da":"### Nominal Encoding","204b7de9":"# Splitting and Scaling the Data","2573fc26":"# Results","0a4e7aa4":"# Preprocessing","4cbc81e3":"### Label Encoding","1041d8c1":"# Training","c51f013c":"## Encoding"}}