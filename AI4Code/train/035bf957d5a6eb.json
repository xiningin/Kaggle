{"cell_type":{"5aa4bc96":"code","e17b4807":"code","4c5d4c52":"code","0dceeea6":"code","cbfcb79c":"code","2a1205fc":"code","1be265d4":"code","03f06dd8":"code","9f7d1d59":"code","91c5cc0c":"code","87b8577d":"code","289727be":"code","44a72365":"code","3440c428":"code","ce892278":"code","1677d99f":"markdown","bbe4bbb3":"markdown","1af98446":"markdown","fcc190e4":"markdown","fe6e4e12":"markdown","86a96461":"markdown","b682c015":"markdown","f8b11b31":"markdown","cd3bdd9b":"markdown","2e1a44d6":"markdown","f7d1ba01":"markdown","d3dfaea1":"markdown"},"source":{"5aa4bc96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas_datareader import data\nimport datetime\nfrom pandas import Series, DataFrame\npd.__version__\n\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nmpl.rc('figure', figsize=(8, 7))\nmpl.__version__\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e17b4807":"\ndf_stock = pd.read_csv('\/kaggle\/input\/realestatedatasets\/01-04-2020-TO-01-10-2020BRIGADEALLN.csv', index_col = 'Date', parse_dates = True)\ndf_index = pd.read_csv('\/kaggle\/input\/realestatedatasets\/NIFTY Realty_Data.csv', index_col='Date', parse_dates=True)\n","4c5d4c52":"df_stock['diff'] = df_stock['Open Price'] - df_stock['Close Price']\ndf_stock.head(126)","0dceeea6":"df_index['diff'] = df_index.Open - df_index.Close\ndf_index.head(126)","cbfcb79c":"df_stock.describe()","2a1205fc":"df_index.describe()","1be265d4":"stock_close = df_stock['Close Price']\nmoving_avg = stock_close.rolling(40).mean()\nmoving_avg[-10:]","03f06dd8":"stock_rets = stock_close \/ stock_close.shift(1) - 1\nstock_rets.head()","9f7d1d59":"stock_close.plot(label='BRIGADE')\nmoving_avg.plot(label='moving_avg')\nplt.legend()","91c5cc0c":"index_close= df_index['Close']\nmoving_avg1 = index_close.rolling(40).mean()\nmoving_avg1[-10:]","87b8577d":"index_rets = index_close \/ index_close.shift(1) - 1\nindex_rets.head()","289727be":"index_close.plot(label='NIFTY')\nmoving_avg1.plot(label='moving_avg')\nplt.legend()","44a72365":"stock_close.plot(label='BRIGADE')\nmoving_avg.plot(label='moving_avg_BRIGADE')\nindex_close.plot(label='NIFTY')\nmoving_avg1.plot(label='moving_avg_NIFTY')\nplt.legend()","3440c428":"from scipy import stats","ce892278":"pearson_coef, p_value = stats.pearsonr(df_stock['Close Price'], df_index['Close'])\nprint(\"The Pearson Coefficient is\",pearson_coef,\"with a P-value of P=\",p_value)","1677d99f":"Loading Dataset","bbe4bbb3":"Adding Difference Column","1af98446":"Calculation of Returns of Stock","fcc190e4":"Calculation of Pearson Correlation Coefficient ","fe6e4e12":"Descriptive Statistics of Stock","86a96461":"Adding Difference Column","b682c015":"Moving Average of Stock\n","f8b11b31":"Moving Average of Index\n\n","cd3bdd9b":"Descriptive Statistics of Index","2e1a44d6":"Plot of Stock and Moving Average","f7d1ba01":"Calculation of Returns of Index","d3dfaea1":"# BRIGADE and NIFTY Analysis"}}