{"cell_type":{"2f804255":"code","61283b8d":"code","91e1cdf4":"code","b9ee062e":"code","7126985c":"code","0a19fc7b":"code","21cbb0da":"code","c2ef596e":"code","8b9eb033":"code","6285ed46":"code","01093edf":"code","a3ba6828":"code","a66119c6":"code","eb0e1489":"code","c4e5db65":"code","5507fdbc":"code","8c92dd7b":"code","ff09e9d1":"code","38aae656":"code","c2601606":"code","5a0d3771":"code","ccffbcf4":"code","4f73133b":"code","696765f3":"code","f316a4a4":"code","86b9322c":"code","368a10b3":"code","eae50a76":"code","b0e04fd4":"code","798bdeeb":"code","b96312c6":"code","03d61abe":"code","b87bd392":"code","c61fee86":"code","fe6d8c83":"code","7ba2c184":"code","429101fd":"code","53bdaa9e":"code","ec71e3b9":"code","9eea59ae":"code","ecebc32f":"code","f4078365":"code","e97cb833":"code","9d81dfbd":"code","b6821d67":"code","f68450cf":"code","29408376":"code","51488155":"code","1befbfb7":"code","94f11a42":"code","6b14b6c3":"code","a7874b96":"code","acfec6a9":"code","3cc4c812":"code","fb9cec2a":"markdown","a6227d97":"markdown","de4d41af":"markdown","26d995b4":"markdown","f36d9f06":"markdown","e0d7b1ee":"markdown","0910bf41":"markdown","6fa723eb":"markdown","c269df5f":"markdown","9a11a58c":"markdown","7ac09025":"markdown","7b6ff40f":"markdown","c2412b62":"markdown","632e5ef4":"markdown"},"source":{"2f804255":"import numpy as np #Linear Algebra\nimport pandas as pd #This library reads CSV files.\nimport matplotlib.pyplot as plt\nimport seaborn as sns # Matplotlib and Seaborn libraries data are visualized.\nfrom collections import Counter\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/fatal-police-shootings-in-the-us\"]).decode(\"utf8\"))\n\n#If the data is in file format upon input, [\"ls\", \"..\/input\"] may return an error. You also need to show the file path inside","61283b8d":"#Read datas\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","91e1cdf4":"percentage_people_below_poverty_level.head()","b9ee062e":"percentage_people_below_poverty_level.info()","7126985c":"percentage_people_below_poverty_level.poverty_rate.value_counts()","0a19fc7b":"percentage_people_below_poverty_level['Geographic Area'].unique()","21cbb0da":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True) \npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45) #90\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","c2ef596e":"kill.head()","8b9eb033":"kill.name.value_counts()","6285ed46":"# Most common 15 Name or Surname of killed people\nseparate = kill.name[kill.name != 'TK TK'].str.split() \na,b = zip(*separate)                    \nname_list = a+b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# \nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","01093edf":"percent_over_25_completed_highSchool.head()","a3ba6828":"percent_over_25_completed_highSchool.info()","a66119c6":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","eb0e1489":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","c4e5db65":"share_race_city.info()","5507fdbc":"share_race_city.share_hispanic.value_counts()","8c92dd7b":"share_race_city.head()","ff09e9d1":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","38aae656":"# high school graduation rate vs Poverty rate of each state\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()\n","c2601606":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution kernel density estimation\n\ng = sns.jointplot(data.area_poverty_ratio,data.area_highschool_ratio,kind='kde',size=7)\nplt.savefig('graph.png')\nplt.show()\n","5a0d3771":"data.head()","ccffbcf4":"#you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n#Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\",data=data,size=5,ratio=3,color='r')","4f73133b":"kill.race.head()","696765f3":"kill.race.value_counts()","f316a4a4":"#Race rates according in kill data\nkill.race.dropna(inplace=True)\nlabels=kill.race.value_counts().index\ncolors=['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(sizes,explode=explode , labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Killed People According to Races',color='blue',fontsize=15)","86b9322c":"data.head()","368a10b3":"#Visualization of high school graduation rate vs poverty rate of each state with different style of seaborn code\n#lmplot\n#Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\",data=data)\nplt.show()","eae50a76":"data.head()","b0e04fd4":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plote\nsns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio,shade=True,cut=3)","798bdeeb":"data.head()","b96312c6":"#Show each distribution with both violins and points\n#Use  cubehelix to get a squential palette\npal = sns.cubehelix_palette(2,rot=-.5,dark=.3)\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","03d61abe":"data.corr()","b87bd392":"#correlation map\n#Visualization od high shool graduation rate vs poverty rate of each state with different styke of seaborn code\n\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,linecolor=\"red\",fmt='.1f',ax=ax)\nplt.show()","c61fee86":"kill.head()","fe6d8c83":"kill.manner_of_death.unique()","7ba2c184":"#manner of death(\u00f6l\u00fcm sekli) : Ates edilerek, ates edilerek ve sok tabancas\u0131yla\n#gender\n#age\n#Plot the orbital period with horizontal boxes\nsns.boxplot(x='gender',y='age',hue=\"manner_of_death\",data=kill,palette='PRGn')\nplt.show()","429101fd":"kill.head()","53bdaa9e":"#swarm plot\n#manner of death:\n#gender\n#age\nsns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","ec71e3b9":"data.head()","9eea59ae":"sns.pairplot(data)\nplt.show()","ecebc32f":"kill.gender.value_counts()","f4078365":"kill.head()","e97cb833":"#kill properties\n# Manner of death\nsns.countplot(kill.gender)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"Gender\",color=\"blue\",fontsize=15)","9d81dfbd":"kill.armed.value_counts()\n","b6821d67":"#kill weapon\narmed=kill.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color='blue',fontsize=15)","f68450cf":"#age of kill people\nabove25 = ['above25' if i>=25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color='blue',fontsize=15)","29408376":"#Race of killed people\nsns.countplot(data=kill ,x='race')\nplt.title('Race of killed people',color='blue',fontsize=15)","51488155":"#Most dangerous cities\ncity = kill.city.value_counts()\n#print(city)\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color='red',fontsize=20)","1befbfb7":"#Most dengerous states\nstate = kill.state.value_counts()\n#state\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most Dengerous States',color='purple',fontsize=17)","94f11a42":"#Having mental ilness or not for killed people\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illnes or not ',color='blue',fontsize=15)","6b14b6c3":"#Threat types\nsns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat Types',color='red',fontsize=15)","a7874b96":"#Flee Types\nsns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee Types',color='blue',fontsize=18)","acfec6a9":"#Having body cameras or not for police\nsns.countplot(kill.body_camera)\nplt.xlabel('Having body cameras')\nplt.title('Having body cameras or not for police',color='blue',fontsize=19)","3cc4c812":"#Kill numbers from states in kill date\nsta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color='blue',fontsize=15)","fb9cec2a":"# LM Plot","a6227d97":"# Heatmap","de4d41af":"# KDE Plot","26d995b4":"# Joint Plot","f36d9f06":"# BAR PLOT","e0d7b1ee":"# Pie Chart","0910bf41":"# Violin Plot","6fa723eb":"# INTRODUCTION\n1. Read datas\n1. Poverty rate of each state\n1. Most common 15 Name or Surname of killed people\n1. High school graduation rate of the population that is older than 25 in states\n1. Percentage of state's population according to races that are black,white,native american, asian and hispanic\n1. High school graduation rate vs Poverty rate of each state\n1. Kill properties\n    * Manner of death\n    * Kill weapon\n    * Age of killed people\n    * Race of killed people\n    * Most dangerous cities\n    * Most dangerous states\n    * Having mental ilness or not for killed people\n    * Threat types\n    * Flee types\n    * Having body cameras or not for police\n1. Race rates according to states in kill data \n1. Kill numbers from states in kill data\n1. Plotly Visualization Tutorial: https:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners\n<br>\n<br>\nPlot Contents:\n* [Bar Plot](#1)\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Kde Plot](#6)\n* [Violin Plot](#7)\n* [Heatmap](#8)\n* [Box Plot](#9)\n* [Swarm Plot](#10)\n* [Pair Plot](#11)\n* [Count Plot](#12)\n    ","c269df5f":"# Box Plot","9a11a58c":"# Point Plot","7ac09025":"# Count Plot","7b6ff40f":"# Swarm Plot","c2412b62":"# Pair Plot","632e5ef4":"# HORIZONTAL BAR PLOT"}}