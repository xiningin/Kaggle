{"cell_type":{"6a41eb0c":"code","5247bd1c":"code","1aada258":"code","63c617de":"code","c1406ec4":"code","1181bba7":"code","aa9e3c8c":"code","a98127be":"code","2e9b3cfd":"code","3a123cfc":"code","b6afee27":"code","b6816d87":"code","bf680640":"code","e043f02a":"code","582e1360":"code","019c93c4":"code","80c04ce6":"code","267fe8fe":"code","5874ff00":"code","88e1574e":"markdown","3437d186":"markdown","ac4dd3f5":"markdown","17d4c7e1":"markdown","958fe1b4":"markdown","7d8bca29":"markdown","f934972e":"markdown","640e11ec":"markdown","80fb7df7":"markdown","a646e8e5":"markdown","bc8d158d":"markdown"},"source":{"6a41eb0c":"# CPU Libraries\nimport os\nimport random\nimport warnings\nimport pandas as pd\nimport numpy as np\n\nimport seaborn as sns\nimport networkx as nx\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom fancyimpute import KNN, IterativeImputer\n\nseed = 123\nrandom.seed(seed)\nnp.random.seed(seed)\n\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\nicecream = [\"#CCD4BF\", \"#E7CBA9\", \"#EEBAB2\", \"#F5F3E7\", \"#F5E2E4\"]\nsns.palplot(sns.color_palette(icecream))","5247bd1c":"# Read in data\ntrainfile = \"..\/input\/widsdatathon2021\/TrainingWiDS2021.csv\"\ntestfile = \"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\"","1aada258":"test = pd.read_csv(testfile)\nencounter_id_test =  test['encounter_id'].values","63c617de":"target = 'diabetes_mellitus'","c1406ec4":"!pip install featurewiz","1181bba7":"!pip install xlrd","aa9e3c8c":"from featurewiz import featurewiz","a98127be":"output = featurewiz(dataname=trainfile, target=target, corr_limit=0.70,\n                    verbose=2, sep=',', header=0, test_data=testfile,\n                    feature_engg=['target'], category_encoders='')","2e9b3cfd":"## there are two parts to the tuple output.\n# One is the new train dataset and other is new test dataset\nlen(output)","3a123cfc":"!pip install autoviml","b6afee27":"from autoviml.Auto_ViML import Auto_ViML","b6816d87":"idcol = \"encounter_id\"","bf680640":"encounter_id_test = test[idcol].values","e043f02a":"traindf, testdf = output[0], output[1]\nprint(traindf.shape, testdf.shape)","582e1360":"target","019c93c4":"### we will turn off feature_reduction since we have already done that!\nm, features, trainm, testm = Auto_ViML(traindf, target, testdf,\n                            sample_submission='',\n                            scoring_parameter='', KMeans_Featurizer=False,\n                            hyper_param='RS',feature_reduction=False,\n                             Boosting_Flag='CatBoost', Binning_Flag=False,\n                            Add_Poly=0, Stacking_Flag=False,Imbalanced_Flag=False,\n                            verbose=2)","80c04ce6":"testm.head(1)","267fe8fe":"# Add encounter_id and diabetes_mellitus back to the dataframes\nsubm = pd.DataFrame([], columns = [idcol,target])\nsubm[target] = testm[target+'_proba_1'].values\nsubm[idcol] = encounter_id_test\nsubm.head()","5874ff00":"subm.to_csv('\/kaggle\/working\/submission.csv', index=False)","88e1574e":"### Libraries \ud83d\udcda","3437d186":"# Auto_ViML just took 3 minutes to build a model with 87 AUC.","ac4dd3f5":"# Download the submission file and submit it!\n\n## Obtained Score 0.8512 and Rank 194 on Kaggle WIDS-2021 - not bad with Automated ML!","17d4c7e1":"# 3. Feature Engineering and Selection using featurewiz library\n\n> There are 180 columns in data set - let's try selecting the best features!","958fe1b4":"# 3. Let us now use Auto_ViML on the new Train and Test datasets with selected 78 features","7d8bca29":"# featurewiz engineered 170 additional features using Target encoding and of the total 325 features, selected 78 features in less than 10 minutes","f934972e":"# Now install featurewiz to see which features to select","640e11ec":"## Let us try to use the features from featurewiz and feed them to AutoVIML\n\n","80fb7df7":"# 2. Import Data\n\n* `TrainingWiDS2021.csv` - train data.\n* `UnlabeledWiDS2021.csv` - test data; the variable to predict is `diabetes_mellitus` (on encounters).\n* `SolutionTemplateWiDS2021.csv` - a list of all the rows (and encounters) that should be in your submissions.\n* `DataDictionaryWiDS2021.csv` - columns descriptors.\n\n> There are 181 columns in total, with 160\/181 containing some sort of missing information. Moreover, 74 out of these 160 columns have missing data more than 50% of the cases. Hence, we'll drop these, as attempting to do any sort of imputation might induce a big bias in the data.","a646e8e5":"# This notebook is derived from the fantastic notebook by Andrada\nhttps:\/\/www.kaggle.com\/andradaolteanu\/wids-datathon-rapids-fancy-impute-xgboost\n\nPlease upvote that notebook if you like this!","bc8d158d":"# Let's make a submission"}}