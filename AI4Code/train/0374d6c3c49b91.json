{"cell_type":{"b001e93b":"code","d56ab4fb":"code","efe6decb":"code","1fe90d79":"code","755a17a0":"code","53e6f68c":"code","e87ed2f1":"code","f3e4cee6":"code","d413a5f9":"code","5aa0c7c6":"code","e6816c11":"markdown","9493b87a":"markdown","86cb779c":"markdown","cfeb3ea1":"markdown","89359c9e":"markdown","91b1b77c":"markdown","47ad91ee":"markdown"},"source":{"b001e93b":"# necessary libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as st\nimport warnings\nwarnings.filterwarnings('ignore')","d56ab4fb":"#load the data files\ntry:\n    rides=pd.read_csv('..\/input\/taxi-trip-analysis\/project_sql_result_01.csv')\n    nbhoods=pd.read_csv('..\/input\/taxi-trip-analysis\/project_sql_result_04.csv')\n    to_airport=pd.read_csv('..\/input\/taxi-trip-analysis\/project_sql_result_07.csv')\n    print('All files has been imported!')\nexcept:\n    print('Something went wrong, check paths, separators etc!')","efe6decb":"# get familiarized with content and data types of datasets \nfor df in [rides, nbhoods, to_airport]:\n    display(df.head(3))\n    df.info()\n    print()\n    print('='*50)","1fe90d79":"#change data type of to_airport['start_ts'] to datetime\nto_airport['start_ts'] = pd.to_datetime(to_airport['start_ts'], format='%Y-%m-%d %H:%M:%S', errors='coerce')\n\n#check the result\nto_airport.info()","755a17a0":"# check for missing and duplicated values in each dataset\nfor df in [rides, nbhoods, to_airport]:\n    display(df.isna().sum())\n    print('Duplicated number of rows:', df.duplicated().sum())\n    print('='*50)","53e6f68c":"#prepare data: top companies with most trips on November 15-16, 2017\ndata=rides.sort_values('trips_amount', ascending=False)[:10]\n\n#create fig object\nplt.figure(figsize=(12,8))\n\n#horizontal bar chart showing number of trips per company\nsns.barplot(x='trips_amount', y='company_name', data=data, palette='inferno')\n\n#customize the plot\nplt.title('Top 10 companies with highest number of trips on November 15-16, 2017', fontsize=16, color='r')\nplt.xlabel('Number of trips', fontsize=14, color='k')\nplt.ylabel('Name of Company', fontsize=14, color='k')\nplt.grid(b=True, which='both', color='b', linestyle='--', alpha=0.1)\nplt.minorticks_on()\nplt.show()","e87ed2f1":"#prepare data: top neighborhoods with most drop-offs in November 2017\ndata=nbhoods.sort_values('average_trips', ascending=False)[:10]\n\n#create figure object\nplt.figure(figsize=(12,8))\n\n#h.bar chart showing top neighborhoods with highest avg. drop-offs\nsns.barplot(y='dropoff_location_name', x='average_trips', data=data, palette='inferno')\n\n#customize the plot\nplt.title('Top 10 neighborhoods with highest average number of drop-offs in November 2017', fontsize=16, color='r')\nplt.xticks(rotation=0, fontsize=12)\nplt.xlabel('Average number of drop-offs', fontsize=14, color='k')\nplt.ylabel('Name of neighborhood', fontsize=14, color='k')\nplt.grid(b=True, which='both', color='b', linestyle='--', alpha=0.1)\nplt.minorticks_on()\nplt.show()","f3e4cee6":"data=rides.sort_values('trips_amount', ascending=False)[:10]\ndata","d413a5f9":"#data we need is trip durations on good and bad weather conditions\ngood=to_airport[to_airport['weather_conditions'] == 'Good']['duration_seconds']\nbad=to_airport[to_airport['weather_conditions'] == 'Bad']['duration_seconds']\n\n#create figure object\nplt.figure(figsize=(12,8))\n\n#plot distribution curves for each weather conditions\nsns.distplot(good, hist=False, kde_kws={'shade':True, 'color':'green', 'alpha':0.3}, label='Good')\nsns.distplot(bad, hist=False, kde_kws={'shade':True, 'color':'red', 'alpha':0.3}, label='Bad')\n\n#customize the figure\nplt.title('Distribution of trip durations on Good and Bad weather conditions', fontsize=16, color='r')\nplt.xlabel('Duration of trip (seconds)', fontsize=14, color='k')\nplt.ylabel('Distribution density (a.u)', fontsize=14, color='k')\nplt.xlim(0, 5000) #there are some extreme values, we don't need to show them for now\nplt.legend(fontsize=14)\nplt.grid(b=True, which='both', color='b', linestyle='--', alpha=0.1)\nplt.minorticks_on()\nplt.show()","5aa0c7c6":"#student's t-test for comparison of two distributions\nalpha=0.05 #95% confidence level\n\n#test difference of mean of good and bad\ntest_result = st.ttest_ind(good, bad, equal_var=False)\nprint('P-value of the test is:',test_result.pvalue)\n\nif test_result.pvalue < alpha:\n    print('We reject the null hypothesis! \\nAn average trip duration of {}\\u00B1{} on good weather conditions is significantly \\\nlower than average trip duration of {}\\u00B1{} on bad weather conditions.'\\\n          .format(round(good.mean(), 2), round(good.std(), 2), round(bad.mean(), 2), round(bad.std(), 2)))\nelse:\n    print('We reject the null hypothesis! \\nAn average trip duration of {}\\u00B1{} on good weather conditions IS NOT significantly \\\nDIFFERENT than average trip duration of {}\\u00B1{} on bad weather conditions.'\\\n          .format(round(good.mean(), 2), round(good.std(), 2), round(bad.mean(), 2), round(bad.std(), 2)))","e6816c11":"### Conclusion\nFrom the prior visualization, it has been observed that the peak of the plot of average trip durations on good weather conditions was located on the right compared to average trip durations on bad weather conditions. When the statistical analysis performed, it was seen that indeed average trip durations in good weather conditions was significantly lower than average trip durations in bad weather conditions (1999.68\u00b1759.2 vs 2427.21\u00b1721.31).","9493b87a":"## Summary\nAll three dataset has been successfully loaded and been got familiarized. Datatypes of columns were correct, except the `start_ts` column of the to_airport dataset. It was in *object* type and then converted to *datetime* type. Datasets have been check for missing and duplicate values. No significant issues were observed other than duplicates in the to_airport table. However, we don't have a trip_id column, therefore we can not exactly say if these rows are duplicated or separate observations with equal values. Hence, it was decided to keep them!\n\n\nAs its name refers, the **Flash Cab** company was flashing on November 15-16, 2017 with around **20k trips**. The second company was the **Taxi Affiliation Services with around 11k** trips, which less than 2\/3 of the Flash Cab. Again, 11k is still very successfully when we consider that there were some companies with only several trips on that date. However, to get a better comparison, it would be great if we could compare the number of cabs each company owns. In such a case, we can clearly say which company was efficient. For example, maybe one company has only 5 cabs but performed 200 rides, while Flash Cab has 20k cabs and made 20k trips.\n\nMore than **10k taxi rides ended in the Loop**- a vibrant neighborhood of Chicago with eclectic eateries, shops, theaters and parks! Next comes the neighborhoods **River North, the Streeterville, and the West Loop - all of them have drop-offs of above 5k**. For the rest of the neighborhoods, the number of drop-offs decreases gradually. The high number of trips ending in specific neighborhoods might be closely related to the population, businesses and attraction centers in that neighborhood.\n\nWhen the statistical analysis performed, it was seen that the average trip durations in **good weather conditions (1999.68\u00b1759.2)** was significantly lower than average trip durations in **bad weather conditions (2427.21\u00b1721.31)**.","86cb779c":"### Conclusion\nAll three dataset has been successfully loaded and been got familiarized. Datatypes of columns were correct, except the `start_ts` column of the to_airport dataset. It was in *object* type and then converted to *datetime* type. Datasets have been check for missing and duplicate values. No significant issues were observed other than duplicates in the to_airport table. However, we don't have a trip_id column, therefore we can not exactly say if these rows are duplicated or separate observations with equal values. Hence, it was decided to keep them!","cfeb3ea1":"## Load and Check data\nWe will load datasets, inspect them for any errors, fix if any with explanations.","89359c9e":"## Test hypothesis\nWe will check if \"The average duration of rides from Loop neighborhood to O'Hare International Airport changes on rainy Saturdays\" or not. For this task we are going to define our hypothesis as follow:\n   - NULL hypothesis: trip durations are equal (or not significantly different) regardless of weather conditions;\n   - Alternative hypothesis: trip durations differ significantly depending on weather conditions.\n   \nAs a generally accepted limit, 95% confidence is enough for us, hence alpha=0.05\n\nBefore jumping into statistical testing, let's first get the required data from the `to_airport` dataset and visualize their distribution.","91b1b77c":"## Explaratory data analysis\nWe will make graphs: to analyze companies by number of rides and neighborhoods by number of drop-offs.","47ad91ee":"### Conclusion\nAs its name refers, the **Flash Cab** company was flashing on November 15-16, 2017 with around **20k trips**. The second company was the **Taxi Affiliation Services with around 11k** trips, which less than 2\/3 of the Flash Cab. Again, 11k is still very successfully when we consider that there were some companies with only several trips on that date. However, to get a better comparison, it would be great if we could compare the number of cabs each company owns. In such a case, we can clearly say which company was efficient. For example, maybe one company has only 5 cabs but performed 200 rides, while Flash Cab has 20k cabs and made 20k trips.\n\nMore than **10k taxi rides ended in the Loop**- a vibrant neighborhood of Chicago with eclectic eateries, shops, theaters and parks! Next comes the neighborhoods **River North, the Streeterville, and the West Loop - all of them have drop-offs of above 5k**. For the rest of the neighborhoods, the number of drop-offs decreases gradually. The high number of trips ending in specific neighborhoods might be closely related to the population, businesses and attraction centers in that neighborhood."}}