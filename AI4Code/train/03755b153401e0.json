{"cell_type":{"d80258c6":"code","0cd56bb0":"code","ec59b7af":"code","f32de5d4":"code","66cc6450":"code","d74dadac":"code","d0eedaf2":"code","18d887d5":"code","d2ffedc2":"code","bedff95f":"code","01146759":"code","1efd3557":"code","493ba41a":"code","3776347d":"code","7f3a976c":"code","c3116957":"code","3b43376e":"code","fb664c10":"code","331f3b99":"code","91040527":"code","e004ede8":"code","3ff597fd":"markdown","ba38a26e":"markdown","8a074d6e":"markdown","59563023":"markdown","37c1359f":"markdown","bb5362ee":"markdown","fe0cd56d":"markdown","e0e8839d":"markdown","27f318b5":"markdown","1e52066f":"markdown","9174d694":"markdown","0a2cc2eb":"markdown","65304c4f":"markdown","64a4559e":"markdown","34bcaf12":"markdown","a67b5815":"markdown","4d0eaa59":"markdown"},"source":{"d80258c6":"#Instalar o m\u00f3dulo haversine para c\u00e1lculo de dinst\u00e2ncia entre hub e entrega\n!pip install haversine\n\n#Instalar o m\u00f3dulo geopandas para visualiza\u00e7\u00e3o de entregas no mapa de Bras\u00edlia \n!pip install geopandas","0cd56bb0":"#download dataset e pacote support_project\n!wget -q \"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries.json\" -O deliveries.json \n!wget -q \"https:\/\/raw.githubusercontent.com\/AnthonyCavalcante\/Estudos_python\/main\/EBAC\/Web-scraping\/support_project.py\" -O support_project.py\n\n#download do pacote de dados para cria\u00e7\u00e3o do mapa atrav\u00e9s do ibge\n!wget -q \"https:\/\/geoftp.ibge.gov.br\/cartas_e_mapas\/bases_cartograficas_continuas\/bc100\/go_df\/versao2016\/shapefile\/bc100_go_df_shp.zip\" -O distrito-federal.zip\n!unzip -q distrito-federal.zip -d .\/maps\n!cp .\/maps\/LIM_Unidade_Federacao_A.shp .\/distrito-federal.shp\n!cp .\/maps\/LIM_Unidade_Federacao_A.shx .\/distrito-federal.shx","ec59b7af":"import json \n\nimport pandas as pd\nimport geopandas\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom haversine import haversine\n\nfrom support_project import cal_lat_lng, my_figsize\n","f32de5d4":"with open('deliveries.json', 'r', encoding='utf8') as json_file:\n  data_loggi = json.load(json_file)\n","66cc6450":"loggi_df = pd.DataFrame(data_loggi)\nloggi_df.head()","d74dadac":"normalize_origin = pd.json_normalize(loggi_df['origin'])\n\n#concat. os dois dataframes\nloggi_df = pd.merge(left=loggi_df, right=normalize_origin, how='inner', left_index=True, right_index=True)\n\nloggi_df.rename(columns={'lng': 'origin_lng', 'lat':'origin_lat'}, inplace=True)\nloggi_df = loggi_df[['name', 'region', 'origin_lat','origin_lng', 'vehicle_capacity', 'deliveries']]\n\n","d0eedaf2":"#Flatten na coluna deliveries\ndata = pd.DataFrame(loggi_df['deliveries']).explode('deliveries')\n\nexploded_deliveries = pd.concat([\n    pd.DataFrame(data['deliveries'].apply(lambda row : row['point']['lat'])).rename(columns=({'deliveries':'delivery_lat'})),\n    pd.DataFrame(data['deliveries'].apply(lambda row : row['point']['lng'])).rename(columns=({'deliveries':'delivery_lng'})),\n    pd.DataFrame(data['deliveries'].apply(lambda row : row['size'])).rename(columns=({'deliveries':'delivery_size'}))], axis=1\n)\n\nexploded_deliveries.head()","18d887d5":"#retornando coluna para o dataframe original\nloggi_df = pd.merge(left=loggi_df, right=exploded_deliveries, how='inner', left_index=True, right_index=True)\nloggi_df = loggi_df[['name', 'region', 'origin_lat', 'origin_lng', 'vehicle_capacity',\n         'delivery_lat', 'delivery_lng', 'delivery_size']]\n\nloggi_df.head()","d2ffedc2":"#criando coluna de dist\u00e2ncia entre hub e entrega\nlat1 = loggi_df['origin_lat'].tolist()\nlon1 = loggi_df['origin_lng'].tolist()\nlat2 = loggi_df['delivery_lat'].tolist()\nlon2 = loggi_df['delivery_lng'].tolist()\n\ndistance = []\nfor lat_a, lat_b, lon_a, lon_b in zip(lat1,lat2, lon1, lon2):\n  x = cal_lat_lng(lat_a, lon_a,lat_b, lon_b)\n  distance.append(x)\n\nloggi_df['distance_delivery(km)'] = distance\nloggi_df.head()","bedff95f":"loggi_df.info()","01146759":"loggi_df.isna().any()","1efd3557":"loggi_df.select_dtypes('object').describe().transpose()","493ba41a":"loggi_df.select_dtypes('int').describe().transpose()","3776347d":"loggi_df.select_dtypes('float64').describe().transpose()","7f3a976c":"dist_60km = loggi_df['distance_delivery(km)'][loggi_df['distance_delivery(km)'] > 60]\ndist_50km = loggi_df['distance_delivery(km)'][(loggi_df['distance_delivery(km)'] > 50) & (loggi_df['distance_delivery(km)'] < 60)]\ndist_40km = loggi_df['distance_delivery(km)'][(loggi_df['distance_delivery(km)'] > 40) & (loggi_df['distance_delivery(km)'] < 50)]\ndist_30km = loggi_df['distance_delivery(km)'][(loggi_df['distance_delivery(km)'] > 30) & (loggi_df['distance_delivery(km)'] < 40)]\nprint(f'Quantidade de entregas com dist\u00e2ncia acima de 60km: {dist_60km.size}')\nprint(f'Quantidade de entregas com dist\u00e2ncia entre 50km e 60km: {dist_50km.size}')\nprint(f'Quantidade de entregas com dist\u00e2ncia entre 40km e 50km: {dist_40km.size}')\nprint(f'Quantidade de entregas com dist\u00e2ncia entre 30km e 40km: {dist_30km.size}')","c3116957":"#criando mapa de brasilia com pontos de entrega e localiza\u00e7\u00e3o dos hubs\nmap_df = geopandas.read_file('distrito-federal.shp')\nmap_df = map_df.loc[[0]]\n\nhub_df = loggi_df[['region', 'origin_lat', 'origin_lng']].drop_duplicates().reset_index(drop=True)\ngeo_hub_df = geopandas.GeoDataFrame(hub_df, geometry=geopandas.points_from_xy(hub_df[\"origin_lng\"], hub_df[\"origin_lat\"]))\ngeo_loggi_df = geopandas.GeoDataFrame(loggi_df, geometry= geopandas.points_from_xy(loggi_df['delivery_lng'], loggi_df['delivery_lat']))\n","3b43376e":"# cria o plot vazio\nfig, ax = plt.subplots(figsize = (50\/2.54, 50\/2.54))\n\n# plot mapa do distrito federal\nmap_df.plot(ax=ax, alpha=0.4, color=\"lightgrey\")\n\n# plot das entregas\ngeo_loggi_df.query(\"region == 'df-0'\").plot(ax=ax, markersize=1, color=\"red\", label=\"df-0\")\ngeo_loggi_df.query(\"region == 'df-1'\").plot(ax=ax, markersize=1, color=\"blue\", label=\"df-1\")\ngeo_loggi_df.query(\"region == 'df-2'\").plot(ax=ax, markersize=1, color=\"seagreen\", label=\"df-2\")\n\n# plot dos hubs\ngeo_hub_df.plot(ax=ax, markersize=30, marker=\"x\", color=\"black\", label=\"hub\")\n\n# plot da legenda\nplt.title(\"Entregas no Distrito Federal por Regi\u00e3o\", fontdict={\"fontsize\": 16})\nlgnd = plt.legend(prop={\"size\": 15})\nfor handle in lgnd.legendHandles:\n    handle.set_sizes([50])","fb664c10":"data = loggi_df[['region','vehicle_capacity' ]].value_counts(normalize=True).reset_index()\ndata.rename(columns={0:'region_percent'}, inplace=True)\ndata","331f3b99":"with sns.axes_style('whitegrid'):\n  my_figsize(13,6)\n  graffic = sns.barplot(data=data, x='region', y='region_percent', ci=None, palette=['b','g', 'r']);\n  graffic.set_title('M\u00e9dia de entregas por regi\u00e3o', size=16, fontweight='bold');\n  graffic.set(xlabel='Regi\u00e3o', ylabel='M\u00e9dia de entregas')","91040527":"with sns.axes_style('whitegrid'):\n  my_figsize(15,6)\n  graffic = sns.boxplot(x=loggi_df['distance_delivery(km)'], y=loggi_df['region'], palette=['g','b','r'])\n  graffic.set_title('Dist\u00e2ncia de entregas por Regi\u00e3o', size=16, fontweight='bold')\n  graffic.set(xlabel='Dist\u00e2ncia de entrega (Km)', ylabel='Regi\u00f5es')","e004ede8":"data = loggi_df[['region', 'delivery_size']].value_counts().reset_index()\ndata.rename(columns={0:'qtd_deliveries'}, inplace=True)\nwith sns.axes_style('darkgrid'):\n  my_figsize(15,6)\n  graffic = sns.barplot(data=data, x='delivery_size', y='qtd_deliveries', hue='region', palette=['b','g','r'])\n  graffic.set_title('Quantidade de entregar por tamanho')\n  graffic.set(xlabel='tamanho das entregas', ylabel='quantidade de entregas')","3ff597fd":"# 5 Visualiza\u00e7\u00e3o","ba38a26e":"* A maior concentra\u00e7\u00e3o de entregas est\u00e1 entre o **df-1 e df-0**, por\u00e9m a capacidade de ve\u00edculos \u00e9 a mesma para todas, pode-se avaliar a possibilidade de transferir ve\u00edculos do **df-0** para as outras regi\u00f5es.\n\n","8a074d6e":"* Nota-se que a capacidade dos ve\u00edculos \u00e9 a mesma para todo o dataset\n* No tamanho da entrega, encontramos uma boa varia\u00e7\u00e3o no tamanho, podemos entender a partir desse ponto como essa distribui\u00e7\u00e3o pode impactar na otimiza\u00e7\u00e3o das entregas.","59563023":"## 3\\. Explora\u00e7\u00e3o de dados\n\n","37c1359f":"* Por mais que a m\u00e9dia da dist\u00e2ncia seja de aproximadamente 7km, existem locais de entrega bem distante (67km), que pode impactar de maneira negativa na otimiza\u00e7\u00e3o das entregas. Levando em considera\u00e7\u00e3o os custos para viabilizar as entregas, vale a pena verificar se h\u00e1 um hub mais pr\u00f3ximo ou at\u00e9 mesmo determinar um raio de a\u00e7\u00e3o limite para cada hub, otimizando a aloca\u00e7\u00e3o de entregas por hub, caso n\u00e3o seja vi\u00e1vel, mapear as entregas mais distantes para aproveitar a entrega.\n\n* Observe abaixo a quantidade de entregas a partir de 30km\n","bb5362ee":"* Observa-se que a dist\u00e2ncia m\u00e9dia das entregas entre todos os hubs fica entre 5 a 15 km\n* Por mais que n\u00e3o seja comum, as entregas a acima de 30km s\u00e3o feitas com maior frequ\u00eancia pelo **df-0**, onde uma poss\u00edvel medida para entregas t\u00e3o distantes \u00e9 ter ve\u00edculos com maior capacidade de armazenamento, desta forma ele pode conseguir entregar mais com menos viagens","fe0cd56d":"* Por fim, vemos que os tamanhos das entregas s\u00e3o bem distribu\u00eddos entre os hubs, os 3 cont\u00e9m entregas de todos os tamanhos, com praticamente a mesma propo\u00e7\u00e3o.\n\n* Isso pode refor\u00e7ar a necessidade de realoca\u00e7\u00e3o de ve\u00edculos do hub **df-0** para o **df-1**, como tamb\u00e9m \u00e9 vi\u00e1vel avaliar ter ve\u00edculos com maior capacidade, visto que o **df-0** tem entregas mais distantes que, somado a quantidade menor de entregas, se os ve\u00edculos puderem alocar mais entregas, podem ir para mais locais, aproveitando uma viagem s\u00f3.","e0e8839d":"## 2\\. Pacotes e bibliotecas","27f318b5":"## 4\\. Schema","1e52066f":"* N\u00e3o existe dados faltantes\n* Nomes das colunas de acordo com seu tipo de dado","9174d694":"# **An\u00e1lise Explorat\u00f3ria de Dados de Log\u00edstica**","0a2cc2eb":"### Wrangling\nOrganizando a estrutura de dados","65304c4f":"## Intro:\nO Loggi Benchmark for Urban Deliveries (BUD) \u00e9 um reposit\u00f3rio do GitHub[(link)](https:\/\/github.com\/loggi\/loggibud) com dados e\nc\u00f3digos para problemas t\u00edpicos que empresas de log\u00edstica enfrentam: otimiza\u00e7\u00e3o das rotas de\nentrega, aloca\u00e7\u00e3o de entregas nos ve\u00edculos da frota com capacidade limitada, etc. Os dados\ns\u00e3o sintetizados de fontes p\u00fablicas (IBGE, IPEA, etc.) e s\u00e3o representativos dos desafios que a\nstartup enfrenta no dia a dia, especialmente com rela\u00e7\u00e3o a sua escala.\n\n## Objetivo da an\u00e1lise:\nEssa an\u00e1lise consiste em encontrar poss\u00edveis otimiza\u00e7\u00f5es nas entregas atrav\u00e9s dos dados coletados.","64a4559e":"## 1\\. Contexto","34bcaf12":"* Existem 199 names id onde o **cvrp-1-df-87** surge com maior frequ\u00eancia\n* Existem 3 Hubs de distribui\u00e7\u00e3o, onde o que tem mair frequ\u00eancia \u00e9 o **df-1**, logo podemos entender que \u00e9 o hub com maior volume de entregas","a67b5815":"* Como Visto na etapa de Schema, existe uma grande quantidade de entregas com uma dist\u00e2ncia maior, e aparentemente as entregas mais dist\u00e2ntes est\u00e3o registradas para o hub **df-0**.\n\n* No entanto, a distribui\u00e7\u00e3o das entregas est\u00e1 bem coerente, visto que os pontos de cada hub n\u00e3o tem uma tend\u00eancia significativa de se misturarem entre os hubs de entrega. \n\n* Por\u00e9m se olharmos para a canto inferior direito do mapa (entre -47,6 e -47,4) existem pontos de entrega do df-0 que podem ser realocados para o df-1, fortalecendo a proposta dita acima tamb\u00e9m na etapa de Schema, onde uma possibilidade de definir pontos de alcance por hub, pode otimizar a organiza\u00e7\u00e3o das entregas e, por consequ\u00eancia, custos para cada opera\u00e7\u00e3o","4d0eaa59":"### Coleta de Dados "}}