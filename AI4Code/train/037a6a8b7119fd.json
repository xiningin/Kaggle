{"cell_type":{"a67c070d":"code","e87b81f9":"code","d446cfe3":"code","ebbe5393":"code","dbb65397":"code","42965bd9":"code","9ad5f7d4":"code","ae069b0e":"code","096211ed":"markdown","c86a2816":"markdown","de0ca90f":"markdown","030367e7":"markdown","62e0b1f6":"markdown","6158d268":"markdown","49dbccc8":"markdown"},"source":{"a67c070d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","e87b81f9":"%matplotlib inline","d446cfe3":"meta_data = pd.read_csv('..\/input\/training_set_metadata.csv')\ntest_meta_data = pd.read_csv('..\/input\/test_set_metadata.csv')","ebbe5393":"targets = np.hstack([np.unique(meta_data['target']), [99]])\ntarget_map = {j:i for i, j in enumerate(targets)}\ntarget_ids = [target_map[i] for i in meta_data['target']]\nmeta_data['target_id'] = target_ids","dbb65397":"galactic_cut = meta_data['hostgal_specz'] == 0\nplt.figure(figsize=(10, 8))\nplt.hist(meta_data[galactic_cut]['target_id'], 15, (0, 15), alpha=0.5, label='Galactic')\nplt.hist(meta_data[~galactic_cut]['target_id'], 15, (0, 15), alpha=0.5, label='Extragalactic')\nplt.xticks(np.arange(15)+0.5, targets)\nplt.gca().set_yscale(\"log\")\nplt.xlabel('Class')\nplt.ylabel('Counts')\nplt.xlim(0, 15)\nplt.legend();","42965bd9":"# Build the flat probability arrays for both the galactic and extragalactic groups\ngalactic_cut = meta_data['hostgal_specz'] == 0\ngalactic_data = meta_data[galactic_cut]\nextragalactic_data = meta_data[~galactic_cut]\n\ngalactic_classes = np.unique(galactic_data['target_id'])\nextragalactic_classes = np.unique(extragalactic_data['target_id'])\n\n# Add class 99 (id=14) to both groups.\ngalactic_classes = np.append(galactic_classes, 14)\nextragalactic_classes = np.append(extragalactic_classes, 14)\n\ngalactic_probabilities = np.zeros(15)\ngalactic_probabilities[galactic_classes] = 1. \/ len(galactic_classes)\nextragalactic_probabilities = np.zeros(15)\nextragalactic_probabilities[extragalactic_classes] = 1. \/ len(extragalactic_classes)","9ad5f7d4":"# Apply this prediction to a table\nimport tqdm\ndef do_prediction(table):\n    probs = []\n    for index, row in tqdm.tqdm(table.iterrows(), total=len(table)):\n        if row['hostgal_photoz'] == 0:\n            prob = galactic_probabilities\n        else:\n            prob = extragalactic_probabilities\n        probs.append(prob)\n    return np.array(probs)\n\npred = do_prediction(meta_data)\ntest_pred = do_prediction(test_meta_data)","ae069b0e":"test_df = pd.DataFrame(index=test_meta_data['object_id'], data=test_pred, columns=['class_%d' % i for i in targets])\ntest_df.to_csv('.\/naive_benchmark.csv')","096211ed":"There is no overlap at all between the galactic and extragalactic objects in the training set. Class 99 isn't represented in the training set at all. Let's make a classifier that checks if an object is galactic or extragalactic and then assigns a flat probability to each class in that group. We'll include class 99 in both the galactic and extragalactic groups.","c86a2816":"Map the classes to the range 0-14. We manually add in the 99 class that doesn't show up in the training data.","de0ca90f":"Apply this prediction to the data. We simply choose which of the two probability arrays to use based off of whether the object is galactic or extragalactic.","030367e7":"## Load the data\n\nFor this notebook, we'll only need the metadata.","62e0b1f6":"# Galactic vs Extragalactic Objects\n\nThe astronomical transients that appear in this challenge can be separated into two distinct groups: ones that are in our Milky Way galaxy (galactic) and ones that are outside of our galaxy (extragalactic). As described in the data note, all of the galactic objects have been assigned a host galaxy photometric redshift of 0. We can use this information to immediately classify every object as either galactic or extragalactic and remove a lot of potential options from the classification. Doing so results in matching the naive benchmark.\n\nWe find that all of the classes are either uniquely galactic or extragalactic except for class 99 which represents the unknown objects that aren't in the training set.","6158d268":"Let's look at which classes show up in galactic vs extragalactic hosts. We can use the hostgal_specz key which is 0 for galactic objects.","49dbccc8":"Now write the prediction out and submit it. This notebook gets a score of 2.158 which matches the naive benchmark."}}