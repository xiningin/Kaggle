{"cell_type":{"b5dbdd85":"code","29d3db9c":"code","7fa8d7ca":"code","479af2b7":"code","ef58379c":"code","23305427":"code","b40b4d46":"code","e09047a3":"code","1ab35f00":"code","5bb0338a":"code","79afbc19":"code","0881cbec":"code","993cb849":"code","5ec06b27":"code","efd203cd":"code","8e3df720":"code","d6779c44":"code","7deb6bec":"code","75e05507":"code","9553c7bb":"code","72ccead8":"markdown","2be7a4c6":"markdown","3184ae5d":"markdown","24166826":"markdown","ad5bbf57":"markdown","6e796514":"markdown","cbbf2f52":"markdown","36966c02":"markdown","04c7c746":"markdown","6141ec74":"markdown"},"source":{"b5dbdd85":"import pandas as pd\nimport numpy as np\nfrom sklearn.tree import DecisionTreeClassifier","29d3db9c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7fa8d7ca":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\nsubmission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","479af2b7":"train","ef58379c":"test","23305427":"train.isnull().sum() #counting the number of missing values by columns","b40b4d46":"test.isnull().sum()","e09047a3":"train[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].mean()) #filling missing values with mean\ntest[\"Age\"] = test[\"Age\"].fillna(test[\"Age\"].mean())","1ab35f00":"train[\"Cabin\"] = train[\"Cabin\"].fillna(train[\"Cabin\"].mode()[0]) #filling missing values with mode\ntest[\"Cabin\"] = test[\"Cabin\"].fillna(test[\"Cabin\"].mode()[0])","5bb0338a":"train[\"Embarked\"] = train[\"Embarked\"].fillna(train[\"Embarked\"].mode()[0])","79afbc19":"test[\"Fare\"] = test[\"Fare\"].fillna(test[\"Fare\"].mean())","0881cbec":"train[\"Sex\"] = [1 if i == \"male\" else 0 for i in train[\"Sex\"]] # male = 1,female = 0\ntest[\"Sex\"] = [1 if i == \"male\" else 0 for i in test[\"Sex\"]]","993cb849":"train[\"Embarked\"] = [0 if i == \"S\" else i for i in train[\"Embarked\"]] # S = 0\ntrain[\"Embarked\"] = [1 if i == \"C\" else i for i in train[\"Embarked\"]] # C = 1\ntrain[\"Embarked\"] = [2 if i == \"Q\" else i for i in train[\"Embarked\"]] # Q = 2\ntest[\"Embarked\"] = [0 if i == \"S\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [1 if i == \"C\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [2 if i == \"Q\" else i for i in test[\"Embarked\"]]\n","5ec06b27":"feature_cols = [\"Pclass\",\"Age\",\"Sex\",\"Embarked\"] #features using for modeling and prediction\nX_train = train[feature_cols]\nX_test = test[feature_cols]\ny_train = train[\"Survived\"]","efd203cd":"X_train","8e3df720":"X_test","d6779c44":"model = DecisionTreeClassifier() \nmodel.fit(X_train,y_train) ","7deb6bec":"y_predict = model.predict(X_test)\ny_predict","75e05507":"submission[\"Survived\"] = y_predict\nsubmission","9553c7bb":"submission.to_csv(\"submission.csv\",index=False)","72ccead8":"# Predicting","2be7a4c6":"# Selecting features","3184ae5d":"# Converting categorical features to numerical","24166826":"# Submission","ad5bbf57":"# Import libraries and reading csv files","6e796514":"* [In my notebook I recently published](https:\/\/www.kaggle.com\/japandata509\/titanic-data-visualization-by-plotly), I visualized and analyzed the train data.\n* Visualization revealed that some features correlate with \"Survived\".\n","cbbf2f52":"# Filling missing values","36966c02":"* In my notebook, we predict which passenger survived by using DecisionTreeClassifier.\n* If you like, feel free to upvote.","04c7c746":"For example,\n* The survival rate of women was higher than that of men.\n* The survival rate of young(under 20) was higher than that of older (Over 60).\n* Passengers whose Pclass == 1 survived more than other passengers.\n* Passengers who embarked at \"S\" (Southamplton) survived more than other passengers\n\nThis time, we use 4 features (Pclass,Age,Sex,Embarked).","6141ec74":"# Modeling (DecisionTreeClassifier)"}}