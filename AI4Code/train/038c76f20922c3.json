{"cell_type":{"7b8e1efd":"code","1ead3fda":"code","6553c6e1":"code","8398f177":"code","c5f8b0d5":"code","e8526ee1":"code","ba240d3a":"code","c836d328":"code","f8f2cf71":"code","c7bc03e1":"code","446f613a":"code","3b731488":"code","51935d7c":"code","4a8c0a86":"code","e7577a43":"code","d30d07b3":"code","207e7c3f":"code","6fdd7812":"code","c422d639":"code","536e4121":"code","5f771852":"code","95cfbaeb":"code","6f26d1c5":"code","64d5bded":"code","b9f2b716":"code","5e3a8e7e":"code","816e4183":"code","51a58740":"code","d716cf4c":"code","413fefbf":"code","ab387798":"code","5e8c83a5":"code","4b022efc":"code","a5101fae":"code","9c888cb9":"code","9c59b4a2":"code","64a5db25":"code","b8516fa9":"markdown","78239f67":"markdown","45d6a1dc":"markdown","eda5381b":"markdown"},"source":{"7b8e1efd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1ead3fda":"df=pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","6553c6e1":"print(\"Shape of Dataset\")\nprint(df.shape)\nprint()\nprint(\"unique elements in Features\")\nprint()\nprint(df.nunique())\nprint()\nprint(\"duplicated Series values\")\nprint(df.duplicated().sum())\nprint()\nprint(\"About Features : \")\nprint()\nprint(df.count()\/df.isna().count()*100)\nx=df.count()\/df.isna().count()*100\nplt.hist(x)\nplt.ylabel(\"Features of Dataset\")\nplt.xlabel(\"Dataset Present\")\nplt.show()\n#or we can use df.info() to get basic info about data \nprint()\nprint('\\033[1m'+\"Pairwise correlation of all columns in the dataframe\")\nprint()\ndf.corr()\nprint()\nsns.heatmap(df.corr(),annot=True,cmap=\"coolwarm\")\nsns.pairplot(df)\n","8398f177":"# Almost 56% rated as best selling books are Fiction\ndf['Genre'].value_counts().plot.pie(autopct=\"%.1f%%\");\ndf['Genre'].value_counts()","c5f8b0d5":"plt.figure(figsize=(12,7))\nsns.countplot(df['Year'],hue=df['Genre'])\nplt.show()","e8526ee1":"print('\\033[1m'+\"max User Rating\")\nprint(df['User Rating'].max())\nprint()\nprint('\\033[1m'+\"Avg User Rating\")\nprint(df['User Rating'].mean())\nprint()\nprint('\\033[1m'+\"Most Often User Rating\")\nprint(df['User Rating'].mode())\n","ba240d3a":"plt.figure(figsize=(12,6))\nplt.style.use(\"seaborn\")\nplt.figure(figsize=(20,20))\nplt.subplot(221)\nfund= sns.countplot(df[\"User Rating\"], palette=\"magma\",edgecolor='black',saturation=0.50)\nfund.set_xticklabels(fund.get_xticklabels(),fontsize=10)\nplt.title(\"COUNT OF RATINGS\",fontsize=20)\nfund.set_xlabel(\"Counts\", fontsize=20,)\nfund.set_ylabel(\"USER RATING\", fontsize=20)\nplt.show()","c836d328":"#it tells us about number of books Author have !!\na=dict(df['Author'].value_counts())\nb=list(a.items())\nprint(b[:10])","f8f2cf71":"#Author's Books having Maximum rating: 4.9 \nmaxrating=df[df['User Rating']==4.9]\naumax=maxrating.groupby(['Author']).size().reset_index(name=\"Count\")\naumax.sort_values(by='Count',ascending=False).head(20)","c7bc03e1":"#'Where the Crawdads sing' Book of Delia Owens has maximum user reviews (87841).\nprint(df[df['Reviews']==df['Reviews'].max()])","446f613a":"#'Oh, the Places You'll Go!' Book of Dr. Seuss has maximum user reviews (21834) with highest rating books among amazon bestseller.\n#This has also received highest ratings from users.\nprint(maxrating[maxrating['Reviews']==maxrating['Reviews'].max()])","3b731488":"#Most of books having rating 4.9 have price 8 \nplt.figure(figsize=(12,6))\nsns.distplot(maxrating['Price'])\nplt.title('Price Distribution Plot',fontsize=20)\nplt.show()\nmaxrating['Price'].mode()","51935d7c":"from wordcloud import WordCloud, STOPWORDS\n","4a8c0a86":"#we can see some names of author from [Author's Books having Maximum rating: 4.9 ] clearly \nimp_words = df['Author'].to_list()\n\nwordcloud = WordCloud(width = 1000, height = 500, \n                background_color ='White', \n                min_font_size = 15).generate(str(imp_words))\nplt.figure(figsize = (7,7)) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.show()","e7577a43":"imp_words = df['Name'].to_list()\n\nwordcloud = WordCloud(width = 1000, height = 500, \n                background_color ='White', \n                min_font_size = 15).generate(str(imp_words))\nplt.figure(figsize = (7,7)) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.show()","d30d07b3":"# pip install autoviz\n# pip install xlrd","207e7c3f":"import autoviz","6fdd7812":"from autoviz.AutoViz_Class import AutoViz_Class\n","c422d639":"av=AutoViz_Class()\n","536e4121":"autoviz_eda=av.AutoViz('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv',verbose=0)","5f771852":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import metrics\n\n\nLE=LabelEncoder()\n\nLE.fit(df['Genre'])\ndf['Genre']=LE.transform(df['Genre'])\ndf.head()","95cfbaeb":"col =[\"Reviews\",\"Price\",\"Year\",\"Genre\"]\n# X =df.[[col]].values \nX =df.iloc[:,3:8].values \ny =df[[\"User Rating\"]]","6f26d1c5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","64d5bded":"# import \nfrom sklearn.linear_model import LinearRegression\n\n# object\nmodel = LinearRegression()\n# training - > fit\n\nmodel.fit(X_train, y_train)","b9f2b716":"Prediction=model.predict(X_test)","5e3a8e7e":"Prediction.shape","816e4183":"print('RMSE: ', np.sqrt(metrics.mean_squared_error(y_test, Prediction)))","51a58740":"# Random Forest\nfrom sklearn.ensemble import RandomForestRegressor\nm1 = RandomForestRegressor()\nm1.fit(X_train, y_train)","d716cf4c":"Prediction=m1.predict(X_test)","413fefbf":"print('RMSE: ', np.sqrt(metrics.mean_squared_error(y_test, Prediction)))","ab387798":"# Gradient Boosting \nfrom sklearn.ensemble import GradientBoostingRegressor\nm2 = GradientBoostingRegressor()\nm2.fit(X_train, y_train)","5e8c83a5":"Prediction=m2.predict(X_test)","4b022efc":"print('RMSE: ', np.sqrt(metrics.mean_squared_error(y_test, Prediction)))","a5101fae":"# Decision Tree\nfrom sklearn.tree import DecisionTreeRegressor\ndt = DecisionTreeRegressor(max_depth=11).fit(X_train , y_train)","9c888cb9":"Prediction=dt.predict(X_test)","9c59b4a2":"print('RMSE: ', np.sqrt(metrics.mean_squared_error(y_test, Prediction)))","64a5db25":"# general trend + Outlier\nsns.boxplot(df[\"User Rating\"])\nplt.show()\nsns.boxplot(df[\"Reviews\"])\nplt.show()\nsns.boxplot(df[\"Price\"])\nplt.show()\nplt.boxplot([df[df['Genre']=='Fiction']['User Rating'], df[df['Genre']=='Non Fiction']['User Rating']])\nplt.show()","b8516fa9":"**Exploratory Data Analysis (EDA)**","78239f67":"So According to RMSE,\nRoot Mean Square Error (RMSE) is the standard deviation of the residuals (prediction errors). Residuals are a measure of how far from the regression line data points are; RMSE is a measure of how spread out these residuals are. In other words, it tells you how concentrated the data is around the line of best fit.[(Source Google)](https:\/\/www.google.com\/search?q=RMSE)<br>\n\nWe can see that Decision Tree was the worst model among Linear and Others in Predicting Reviews though linear regression has done quiet good work but still Gradient Boosting and Random Forest Have very much low RMSE value shows that it better predicts the Reviews than both of the above <bR>\nBut we can still improve the result by removing Outliers \n","45d6a1dc":"**Predict User Rating of a Book**","eda5381b":"Below Countplot shows the number of books(Count) that were fiction vs non fiction among the best sellers over the years. <br>\nFor all the years except 2014, the number of fiction best sellers have been greater than non fiction best sellers books."}}