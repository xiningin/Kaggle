{"cell_type":{"241a48d2":"code","75bec47b":"code","673ab780":"code","89d28ae4":"code","6c9b3e16":"code","42743ec9":"code","75106100":"markdown","2cc1a89c":"markdown","b74af8f8":"markdown","fa933ea8":"markdown"},"source":{"241a48d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","75bec47b":"pd.options.display.max_rows = 999\npd.options.display.max_columns = 999\ndf = pd.read_csv('\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv')","673ab780":"\ngreater_than_90 = df[df['potential']>90]\nsort_by_age = greater_than_90.sort_values('age',ascending=True)\nsort_by_age.head(n=7)","89d28ae4":"less_than_19 = df[df['age']<=19]\nsort_by_potential = less_than_19.sort_values('potential',ascending=False)\nsort_by_potential.head(n=20)","6c9b3e16":"players = df[(df['age']<=21) & (df['potential']>=85)]\nclubs = players.groupby('club')\nprint (clubs.size().sort_values(ascending=False))","42743ec9":"players = df[(df['age']<=21) & (df['potential']>=87)]\nplayers_sorted = players.sort_values('value_eur')\nplayers_sorted.head(n=20)","75106100":"# Most promising teenagers","2cc1a89c":"# Cheapest promising young players","b74af8f8":"# Best young players (with more than 90 potential)","fa933ea8":"# Clubs with highest no of promising young players (<21 years of age with potential more than 85)"}}