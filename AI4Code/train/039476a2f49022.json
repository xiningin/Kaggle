{"cell_type":{"4e156e99":"code","8eafdc0e":"code","e3000b5c":"code","6bf12c9b":"code","f5b4ef61":"code","91e5c481":"code","320d0756":"code","5b32b902":"code","04067955":"code","5850df76":"code","a8f19c5d":"code","6385cb16":"markdown","31d5282c":"markdown","e552adfa":"markdown","ff1a7acc":"markdown","4c86f461":"markdown","698da830":"markdown","8b665d48":"markdown","72962d19":"markdown","f49293a6":"markdown","01f454d5":"markdown","d833e96c":"markdown"},"source":{"4e156e99":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","8eafdc0e":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\nimport numpy as np\nimport fastai\nimport matplotlib.pyplot as plt","e3000b5c":"path = Path(\"\/kaggle\/input\/flowers-recognition\/flowers\")\npath.ls()\n","6bf12c9b":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)\n","f5b4ef61":"data.show_batch(nrows=3, figsize=(7,8))","91e5c481":"learn = cnn_learner(data, resnet50, metrics=error_rate)","320d0756":"learn.fit_one_cycle(4)","5b32b902":"learn.unfreeze()","04067955":"learn.fit_one_cycle(2, lr_max=slice(1e-5,1e-4)) #Using graph for learn.lr_find()","5850df76":"learn.model = learn.model.cpu()","a8f19c5d":"learn.export(\"\/kaggle\/working\/export.pkl\")","6385cb16":"Here, we will use a ResNet50 model with error rate as metrics","31d5282c":"We then load the data for training purposes","e552adfa":"Finally, exporting the model as pickle file with name flower.pkl","ff1a7acc":"Next, lets create the path object for the FastAi unwrapper","4c86f461":"Saving this partially trained model state","698da830":"## Flower Classification using FastAI##","8b665d48":"### Trainining the model","72962d19":"First, set up the notebook with the libraries","f49293a6":"Finally, we complete the training with selected slice of learning rate to be used. By rule of hand, select the values at least 10x before the graph above starts to go up.[](http:\/\/)","01f454d5":"As you can see, the error rate is reduced to almost 1.5% which means this model is 98.5% accurate with just fine tuning.","d833e96c":"Unfreezing and plotting the losses against the learning rates for further training"}}