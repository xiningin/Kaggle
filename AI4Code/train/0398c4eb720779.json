{"cell_type":{"6fb7d693":"code","e98c66e8":"code","a2f30e82":"code","964f575b":"code","2724ffc5":"code","cea584f5":"code","0cb6b4a2":"code","d334a2ff":"code","0e786720":"code","d009fa17":"code","018f66b5":"code","4c480c29":"code","789eac83":"code","5ce8bae5":"code","e43534fc":"code","e1eb9c0b":"code","ff38ae24":"code","f67ade89":"code","61872bc2":"code","2b0e247a":"code","c73823ad":"markdown","cd921918":"markdown","2f8d9e6d":"markdown","81a0ebce":"markdown","c44a136b":"markdown"},"source":{"6fb7d693":"import numpy as np\nimport pandas as pd\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\ngender_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\n\ndata = pd.concat([train, test], sort=False)\n\ndata['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)","e98c66e8":"age_avg = data['Age'].mean()\nage_std = data['Age'].std()\n\nnp.random.randint(age_avg - age_std, age_avg + age_std)","a2f30e82":"np.random.randint(age_avg - age_std, age_avg + age_std)","964f575b":"data['Age'].fillna(data['Age'].median(), inplace=True)","2724ffc5":"delete_columns = ['Name', 'PassengerId', 'SibSp', 'Parch', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)\n\ntrain = data[:len(train)]\ntest = data[len(train):]\n\ny_train = train['Survived']\nX_train = train.drop('Survived', axis=1)\nX_test = test.drop('Survived', axis=1)","cea584f5":"X_train.head()","0cb6b4a2":"y_train.head()","d334a2ff":"from sklearn.linear_model import LogisticRegression\n\n\nclf = LogisticRegression(penalty='l2', solver='sag', random_state=0)","0e786720":"clf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)","d009fa17":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\ngender_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\n\ndata = pd.concat([train, test], sort=False)\n\ndata['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)\ndata['Age'].fillna(data['Age'].median(), inplace=True)","018f66b5":"data.head()","4c480c29":"import seaborn as sns\n\n\ndata['FamilySize'] = data['Parch'] + data['SibSp'] + 1\ntrain['FamilySize'] = data['FamilySize'][:len(train)]\ntest['FamilySize'] = data['FamilySize'][len(train):]\nsns.countplot(x='FamilySize', data = train, hue='Survived')","789eac83":"data['IsAlone'] = 0\ndata.loc[data['FamilySize'] == 1, 'IsAlone'] = 1\n\ntrain['IsAlone'] = data['IsAlone'][:len(train)]\ntest['IsAlone'] = data['IsAlone'][len(train):]","5ce8bae5":"delete_columns = ['Name', 'PassengerId', 'SibSp', 'Parch', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)\n\ntrain = data[:len(train)]\ntest = data[len(train):]\n\ny_train = train['Survived']\nX_train = train.drop('Survived', axis=1)\nX_test = test.drop('Survived', axis=1)","e43534fc":"X_train.head()","e1eb9c0b":"sub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","ff38ae24":"clf.fit(X_train, y_train)\ny_pred_familysize_isalone = clf.predict(X_test)\n\nsub['Survived'] = list(map(int, y_pred_familysize_isalone))\nsub.to_csv('submission_familysize_isalone.csv', index=False)\n\nsub.head()","f67ade89":"clf.fit(X_train.drop('FamilySize', axis=1), y_train)\ny_pred_isalone = clf.predict(X_test.drop('FamilySize', axis=1))\n\nsub['Survived'] = list(map(int, y_pred_isalone))\nsub.to_csv('submission_isalone.csv', index=False)\n\nsub.head()","61872bc2":"clf.fit(X_train.drop('IsAlone', axis=1), y_train)\ny_pred_familysize = clf.predict(X_test.drop('IsAlone', axis=1))\n\nsub['Survived'] = list(map(int, y_pred_familysize))\nsub.to_csv('submission_familysize.csv', index=False)\n\nsub.head()","2b0e247a":"clf.fit(X_train.drop(['FamilySize', 'IsAlone'], axis=1), y_train)\ny_pred = clf.predict(X_test.drop(['FamilySize', 'IsAlone'], axis=1))\n\nsub['Survived'] = list(map(int, y_pred))\nsub.to_csv('submission.csv', index=False)\n\nsub.head()","c73823ad":"This notebook is a sample code with Japanese comments.\n\n# 2.4 \u3053\u3053\u3067\u5dee\u304c\u3064\u304f\uff01\u3000\u4eee\u8aac\u306b\u57fa\u3065\u3044\u3066\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046","cd921918":"# \u4eee\u8aac\u304b\u3089\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3092\u4f5c\u308b","2f8d9e6d":"## \u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","81a0ebce":"## \u4e88\u6e2c\u6027\u80fd\u306e\u6bd4\u8f03","c44a136b":"# \u518d\u73fe\u6027\u306e\u5927\u5207\u3055"}}