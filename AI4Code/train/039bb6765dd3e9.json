{"cell_type":{"2911572d":"code","86a7050c":"code","a79c5100":"code","5626674f":"code","7da8a498":"code","d5e313b6":"code","db344133":"code","3c5d8573":"code","fa78cc9d":"code","afa16314":"code","630a1e5d":"code","e2c26ffc":"code","dcfba699":"code","737c6dd3":"code","bef3cc08":"code","e863ddda":"code","382fed7c":"code","031a736a":"code","25edce63":"code","0c2b7c8b":"code","41e15d11":"markdown","a3ce232b":"markdown","9d3cfa64":"markdown","032f7c65":"markdown","67b539d6":"markdown","08da77bd":"markdown","bb04319b":"markdown","019d23aa":"markdown"},"source":{"2911572d":"import tensorflow as tf\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas  as pd\nimport seaborn as sns\nfrom tensorflow.keras import layers as L\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.metrics import confusion_matrix","86a7050c":"df_train=pd.read_csv('..\/input\/sign-language-mnist\/sign_mnist_train\/sign_mnist_train.csv')\ndf_test=pd.read_csv('..\/input\/sign-language-mnist\/sign_mnist_test\/sign_mnist_test.csv')\ny=df_test['label']","a79c5100":"y_train=df_train.pop('label')\nX_train=df_train.copy()","5626674f":"X_train=X_train.values.reshape(-1,28,28,1)","7da8a498":"y_test=df_test.pop('label')\nX_test=df_test.copy()","d5e313b6":"X_test=X_test.values.reshape(-1,28,28,1)","db344133":"f, ax = plt.subplots(3,3) \nf.set_size_inches(10, 10)\nk = 0\nfor i in range(3):\n    for j in range(3):\n        ax[i,j].imshow(X_train[k,:,:].reshape(28, 28),cmap='gray')\n        k += 1\n    plt.tight_layout()    ","3c5d8573":"y_train=pd.DataFrame(y_train,columns=['label'])\ny_train.head()","fa78cc9d":"X_train=X_train\/255\nX_test=X_test\/255","afa16314":"sns.countplot(y_train['label'])","630a1e5d":"datagen=tf.keras.preprocessing.image.ImageDataGenerator(rotation_range=10,\n        zoom_range = 0.1, \n        width_shift_range=0.1,  \n        height_shift_range=0.1,\n        horizontal_flip=True,vertical_flip=True)\ndatagen.fit(X_train)","e2c26ffc":"learning_rate_reduction = tf.keras.callbacks.ReduceLROnPlateau(monitor='val_accuracy', patience = 2, verbose=1,factor=0.5, min_lr=0.00001)","dcfba699":"model = tf.keras.Sequential()\nmodel.add(L.Conv2D(75 , (3,3) , strides = 1 , padding = 'same' , activation = 'relu' , input_shape = (28,28,1)))\nmodel.add(L.BatchNormalization())\nmodel.add(L.MaxPool2D((2,2) , strides = 2 , padding = 'same'))\nmodel.add(L.Dropout(0.2))\nmodel.add(L.Flatten())\nmodel.add(L.Dense(units = 512 , activation = 'relu'))\nmodel.add(L.Dropout(0.3))\nmodel.add(L.Dense(units = 24 , activation = 'softmax'))\nmodel.compile(optimizer = 'adam' , loss = 'categorical_crossentropy' , metrics = ['accuracy'])\nmodel.summary()","737c6dd3":"lb= LabelBinarizer()\ny_train=lb.fit_transform(y_train)\ny_test=lb.fit_transform(y_test)","bef3cc08":"history=model.fit(X_train,y_train,batch_size=128,epochs=10,verbose=1,callbacks=[learning_rate_reduction],validation_split=0.1)","e863ddda":"plt.plot(history.history['accuracy'], label='accuracy')\nplt.plot(history.history['val_accuracy'], label = 'val_accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.ylim([0.5, 1.01])\nplt.legend(loc='lower right')","382fed7c":"model.evaluate(X_test,y_test)","031a736a":"predictions = model.predict_classes(X_test)\nfor i in range(len(predictions)):\n    if(predictions[i] >= 9):\n        predictions[i] += 1\npredictions[:5]  ","25edce63":"cm = confusion_matrix(y,predictions)\ncm = pd.DataFrame(cm , index = [i for i in range(25) if i != 9] , columns = [i for i in range(25) if i != 9])\nplt.figure(figsize = (15,15))\nsns.heatmap(cm,cmap= \"Reds\", linecolor = 'black' , linewidth = 1 , annot = True, fmt='')","0c2b7c8b":"plt.figure(figsize=(14,7))\nc=0\nfor i in range(9):\n    plt.subplot(3,3,c+1)\n    plt.imshow(X_test[i].reshape(28,28), cmap=\"gray\",interpolation=None)\n    plt.title(\"Predicted Class {}, Actual Class {}\".format(predictions[i], y[i]))\n    plt.tight_layout()\n    c+=1","41e15d11":"# Import Libraries","a3ce232b":"# Sample Testing","9d3cfa64":"# Data Visualization","032f7c65":"### Training Accuracy - 99.7%\n### Testing Accuracy - 87%\n## The End","67b539d6":"# Data Preparation","08da77bd":"# Feed Model","bb04319b":"# Build Model","019d23aa":"# Model Evaluation"}}