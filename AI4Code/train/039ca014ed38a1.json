{"cell_type":{"0d6e852e":"code","1feb82f8":"code","1d74ade1":"code","7908cb7a":"code","a593d7d3":"code","80efcce5":"code","6dcce1a8":"code","0a8cbee8":"code","c96ccdea":"code","5e743fc1":"code","ba617b93":"code","38bbfcb4":"code","26eb3168":"code","1405d2ee":"code","90af277a":"code","1cdf6c42":"code","0cafed08":"code","72acdad9":"code","f615b194":"code","96b99de4":"code","5e704097":"code","7eb866ac":"code","2862bf68":"code","4fc25b0f":"code","b3c87276":"code","2b67db46":"code","3086333f":"code","b38719ea":"code","f4827f5d":"code","243ac15e":"code","56320b3e":"code","eee60fbc":"code","c4bba6e7":"code","b332accc":"code","599bdb27":"markdown"},"source":{"0d6e852e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1feb82f8":"# Bibliotecas gr\u00e1ficas\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1d74ade1":"# Dataset\ndf = pd.read_csv('..\/input\/weatherAUS.csv')","7908cb7a":"# Tamanho do dataframe (dimens\u00e3o)\ndf.shape","a593d7d3":"# Verificar a cabe\u00e7a do dataframe para verificar inconsist\u00eancias\ndf.head()","80efcce5":"# Conferir a calda do dataframe para verificar inconsist\u00eancias\ndf.tail()","6dcce1a8":"# Conferir dados aleat\u00f3rios do dataframe para verificar inconsist\u00eancias\ndf.sample(5)","0a8cbee8":"# Nome das colunas\ndf.columns","c96ccdea":"# Verificando os tipos das colunas do dataset\ndf.dtypes","5e743fc1":"# Converter coluna 'Date' no tipo datetime\ndf['Date'] = pd.to_datetime(df['Date'])\ndf.dtypes","ba617b93":"# Os 5 dias com maiores temperaturas m\u00e1ximas registradas\ndf.nlargest(5, 'MaxTemp')","38bbfcb4":"# Os 5 dias com menores temperaturas m\u00ednimas registradas\ndf.nsmallest(5, 'MinTemp')","26eb3168":"df['Location'].value_counts()","1405d2ee":"# Retirando NA`s\ndf.dropna().reset_index()","90af277a":"df.describe()","1cdf6c42":"# Dias com maior tempo de sol \ndf.nlargest(5, 'Sunshine')","0cafed08":"# Dias com menor tempo de sol \ndf.nsmallest(5, 'Sunshine')","72acdad9":"df['Year'] = pd.to_datetime(df['Date']).dt.year","f615b194":"df_anos = df.groupby(['Year', 'Location'], as_index=False)['MaxTemp'].mean()","96b99de4":"df_anos['Year'].value_counts()","5e704097":"df_anos.nlargest(5, 'MaxTemp')","7eb866ac":"df_rain = df.copy()\ndf_rain = df_rain.applymap(lambda x: 1 if x == 'Yes' else x)\ndf_rain = df_rain.applymap(lambda x: 0 if x == 'No' else x)","2862bf68":"df[df['Year'] == 2007].plot(title='2007', kind='scatter', x='Temp9am', y='Humidity9am',\n               alpha=0.5, color='blue')\n\ndf[df['Year'] == 2013].plot(title='2013', kind='scatter', x='Temp9am', y='Humidity9am',\n               alpha=0.5, color='green')\n\ndf[df['Year'] == 2017].plot(title='2017', kind='scatter', x='Temp9am', y='Humidity9am',\n               alpha=0.5, color='grey')\nplt.show()","4fc25b0f":"f, ax = plt.subplots(figsize=(15,6))\nsns.stripplot(x='Location', y='MaxTemp', data=df, jitter=True)\nplt.xticks(rotation=90) # deixa as legendas do eixo x em \u00e2ngulo reto","b3c87276":"f, ax = plt.subplots(figsize=(15,6))\nsns.boxplot(x='Location', y='MaxTemp', data=df)\nplt.xticks(rotation=90) ","2b67db46":"f, ax = plt.subplots(figsize=(15,6))\nsns.boxplot(x='Location', y='MinTemp', data=df)\nplt.xticks(rotation=90) ","3086333f":"f, ax = plt.subplots(figsize=(15,6))\nsns.heatmap(df.corr(), annot=True, fmt='.2f')","b38719ea":"plt.figure(figsize=(15,6))\n\nsns.scatterplot(df['Humidity9am'], df['Temp9am'],\n               hue=df['RainToday'],\n               style=df['RainToday'])","f4827f5d":"# Dados de 2017\ndf_2017 = df[df['Year'] == 2017]","243ac15e":"# Cidades com maior quantidade de chuva em 2017\ndf_chuva_2017 = df_2017.nlargest(20, 'Rainfall')","56320b3e":"df_20_locations.head()","eee60fbc":"df['HumidityMean'] = (df['Humidity9am'] + df['Humidity3pm'])\/2\ndf['WindSpeedMean'] = (df['WindSpeed9am'] + df['WindSpeed3pm'])\/2\ndf['PressureMean'] = (df['Pressure9am'] + df['Pressure3pm'])\/2","c4bba6e7":"df_20_locations = df.nlargest(20, 'Rainfall')","b332accc":"# Fator que mais afeta o happiness_score por Location\n\nlocation = list(df_20_locations['Location'].unique())\ntemp = []\nhumidity = []\nwindspeed = []\n#pressure = []\n\nfor l in location:\n    df_novo = df_20_locations[df_20_locations['Location'] == l]\n    humidity.append(df_novo['HumidityMean'].mean())\n    windspeed.append(df_novo['WindSpeedMean'].mean())\n   # pressure.append(df_novo['PressureMean'].mean())\n    \n# Plotar os valores\nplt.figure(figsize=(10,5))\n#sns.palplot(sns.color_palette(\"hls\", 8))\nsns.barplot(x=humidity, y=location, color='turquoise', label='humidity')\nsns.barplot(x=windspeed, y=location, color='palegreen', label='windspeed')\n#sns.barplot(x=pressure, y=location, color='teal', label='pressure')\n\nplt.legend()","599bdb27":"### Rela\u00e7\u00e3o entre Umidade, Temperatura [as 9 da manh\u00e3] e ocorr\u00eancia de chuva no dia\n #### Percebe-se que, no geral, em dias em que a temperatura \u00e0s 9 da manh\u00e3 \u00e9 baixa e a umidade, no mesmo hor\u00e1rio, \u00e9 alta  h\u00e1 maior ocorr\u00eancia de dias chuvosos"}}