{"cell_type":{"6ed1fb4b":"code","f01e2b0d":"code","4fb3d19e":"code","db4dd0be":"code","eed132bd":"code","da063606":"code","8dfcface":"code","5baa21c8":"code","c680019d":"code","b0315bfb":"code","cd8a6e58":"code","c5dbf5b6":"code","1e0ec4ad":"code","76586919":"code","9b424935":"code","c5069227":"code","c05dd67d":"code","4ab893a5":"code","2656883d":"code","9268e705":"code","a307b855":"code","bb1a90ef":"code","b2b9ed8f":"code","f7d2391b":"markdown","da944cba":"markdown","8790817d":"markdown","fa473233":"markdown","1c57dde3":"markdown"},"source":{"6ed1fb4b":"import numpy as np\nimport pandas as pd","f01e2b0d":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\nsubmit = pd.read_csv(\"..\/input\/sampleSubmission.csv\")","4fb3d19e":"train.head()","db4dd0be":"train.describe()","eed132bd":"train.dtypes","da063606":"test.head()","8dfcface":"submit.head()","5baa21c8":"# \u8a13\u7df4\u30c7\u30fc\u30bf \u7279\u5fb4\u540d\u53d6\u308a\u51fa\u3057\ncolumns = train.columns[1:-1]\n# id\u3068target\u5217\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3092X\u3068\u3059\u308b\nX = train[columns]\nprint(columns)","c680019d":"X.head()","b0315bfb":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u90e8\u5206\ntarget = train['target']\ntarget.head()","cd8a6e58":"# \u4e88\u6e2c\u3055\u308c\u308b\u30e9\u30d9\u30eb\u540d\u306e\u53d6\u308a\u51fa\u3057\n# \u4e0a\u8a18target\u306f2\u6b21\u5143\u30c7\u30fc\u30bf\u3067\u3042\u308b\u305f\u30811\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\n# https:\/\/deepage.net\/features\/numpy-ravel.html\ny = np.ravel(target)\nprint(y)","c5dbf5b6":"# y\u306e\u91cd\u8907\u306a\u3057\u3092\u8abf\u3079\u308b\nlabels = np.unique(y)\nlabels","1e0ec4ad":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306f 61878\u500b\u306e\u7a2e\u985e\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c93\u500b\u306e\u7279\u5fb4\u91cf\u3092\u6301\u3063\u3066\u3044\u308b\nX.shape","76586919":"from sklearn.neural_network import MLPClassifier","9b424935":"# \nmodel = MLPClassifier(solver= 'lbfgs', hidden_layer_sizes= (30, 10), alpha= 1e-5, random_state=1)\n# \u7528\u610f\u3057\u305f\u8a13\u7df4\u30c7\u30fc\u30bf X\u3068\u51fa\u529b\u30e9\u30d9\u30eb y\u3092\u5b66\u7fd2\u3059\u308b \nmodel.fit(X, target)","c5069227":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u540c\u3058\u304f\u7279\u5fb4\u91cf93\u7a2e\u985e\u306e\u307f\u53d6\u308a\u51fa\u3059\n_test = test[columns]\n_test.head()","c05dd67d":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f 144368\u500b\u306e\u7a2e\u985e\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c93\u500b\u306e\u7279\u5fb4\u91cf\u3092\u6301\u3063\u3066\u3044\u308b\n_test.shape","4ab893a5":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u3069\u306e\u51fa\u529b\u30e9\u30d9\u30eb\u306b\u306a\u308a\u3046\u308b\u304b\u4e88\u6e2c\u3059\u308b\n# predict_proba\u306f\u51fa\u529b\u30e9\u30d9\u30eb\u305d\u308c\u305e\u308c\u306e\u78ba\u7acb\u3092\u5410\u304d\u51fa\u3059\ntest_prob = model.predict_proba(_test)\ntest_prob","2656883d":"test_prob.shape","9268e705":"# \u8a66\u3057\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306e\u51fa\u529b\u7d50\u679c\u3092\u898b\u3066\u307f\u308b\n# \u51fa\u529b\u30e9\u30d9\u30eb\u306f 9\u7a2e\u985e\u306e\u30e9\u30d9\u30eb\nprint(labels)\n# \u305d\u308c\u305e\u308c9\u7a2e\u985e\u306e\u3069\u308c\u306b\u3042\u305f\u308b\u304b\u3001\u305d\u308c\u305e\u308c\u306e\u78ba\u7acb\u304c\u51fa\u529b\u306b\u3042\u305f\u308b\nprint(test_prob[0])\n# \u4eca\u56de\u306e\u5834\u5408 class4 \u304c\u4e88\u6e2c\u7d50\u679c\u306b\u306a\u308b\nprint(\"Class_{}\".format(np.argmax(test_prob[0])+1))","a307b855":"submit[labels] = test_prob","bb1a90ef":"submit.head()","b2b9ed8f":"submit.to_csv('.\/otto_prediction.csv', index = False)","f7d2391b":"Use Neural Networks to Classify Product for Otto Group \n\n1. \u307e\u305a\u30b3\u30f3\u30da\u306eDescription\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\n1. Description\u304b\u3089\u3069\u3046\u3044\u3046\u554f\u984c\u306a\u306e\u304b\u3001\u56de\u5e30\u30fb\u5206\u985e\u306a\u3069\u306a\u3069\u3092\u5224\u5225\u3057\u307e\u3057\u3087\u3046\n  - [Otto Group Product Classification Challenge](https:\/\/www.kaggle.com\/c\/otto-group-product-classification-challenge)\n> For this competition, we have provided a dataset with 93 features for more than 200,000 products. **The objective is to build a predictive model which is able to distinguish between our main product categories.** The winning models will be open sourced.\n  - [Titanic: Machine Learning from Disaster](https:\/\/www.kaggle.com\/c\/titanic)\n  > In this challenge, **we ask you to complete the analysis of what sorts of people were likely to survive**. In particular, we ask you to apply the tools of machine learning to predict which passengers survived the tragedy.\n  - [New York City Taxi Fare Prediction](https:\/\/www.kaggle.com\/c\/new-york-city-taxi-fare-prediction)\n  > While you can get a** basic estimate based on just the distance between the two points** this will result in an RMSE of $5-$8, \n1. \u3055\u3089\u306b\u30b3\u30f3\u30da\u306e**Data Description**\u3068**Evaluation**\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\n  - [Otto Group Product Classification Challenge](https:\/\/www.kaggle.com\/c\/otto-group-product-classification-challenge)\n  > Submissions are evaluated using the multi-class logarithmic loss.** Each product has been labeled with one true category**. For each product, you must submit a set of predicted **probabilities (one for every category)**.\n  - [Titanic: Machine Learning from Disaster](https:\/\/www.kaggle.com\/c\/titanic)\n  > It is your job to predict if a passenger survived the sinking of the Titanic or not. \nFor each PassengerId in the test set, **you must predict a 0 or 1 value for the Survived variable**.\n  - [New York City Taxi Fare Prediction](https:\/\/www.kaggle.com\/c\/new-york-city-taxi-fare-prediction)\n  > While you can get a** basic estimate based on just the distance between the two points** this will result in an RMSE of $5-$8, ","da944cba":"### Evaluation\n\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3067\u8868\u793a\u3055\u308c\u308b\u30b9\u30b3\u30a2\u3092\u3069\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\u304b\u3001\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u8a55\u4fa1\u95a2\u6570\n- [Gunosy - \u3044\u307e\u3055\u3089\u805e\u3051\u306a\u3044\u6a5f\u68b0\u5b66\u7fd2\u306e\u8a55\u4fa1\u95a2\u6570](https:\/\/data.gunosy.io\/entry\/2016\/08\/05\/115345)\n\n![](https:\/\/cdn-ak.f.st-hatena.com\/images\/fotolife\/d\/dr_paradi\/20160804\/20160804201109.png)\n> \u4e0a\u56f3\u306e\u5834\u5408\u306b\u306f\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb2\u306e\u8a55\u4fa1\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059(Multi-class logarithmic loss\u81ea\u4f53\u306f0\u306b\u8fd1\u3044\u65b9\u304c\u3088\u3044)\u3002\nAccuracy\u3067\u8a55\u4fa1\u3057\u305f\u5834\u5408\u306b\u306f\u4e88\u6e2c\u30e2\u30c7\u30eb1\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb2\u306e\u53cc\u65b9\u3068\u3082\u540c\u3058\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002","8790817d":"![](https:\/\/www.tel.co.jp\/museum\/magazine\/communication\/160229_report01_02\/img\/img_report01_03.jpg)","fa473233":"### Data Description\n- train.csv\n  - \u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u306b\u4f7f\u3046\u30c7\u30fc\u30bf\n- test.csv\n  - \u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u306b\u4f7f\u3046\u30c7\u30fc\u30bf\n- sampleSubmission.csv\n  - \u7d50\u679c\u3092\u63d0\u51fa\u3059\u308b\u969b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u7528\u306e\u30c7\u30fc\u30bf","1c57dde3":"CSV\u306e\u8aad\u307f\u8fbc\u307f\u306fpandas\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\n- [pandas](https:\/\/pandas.pydata.org\/)\n\npandas\u306fCSV\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u53d6\u308a\u6271\u3044\u3084\u3059\u3044\u8868\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\n\u3068\u308a\u3042\u3048\u305a\u3001kaggle\u306eCSV\u8aad\u307f\u8fbc\u307f=pandas\u3092\u5229\u7528\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3068\u8003\u3048\u3066\u3082\u3089\u3063\u3066\u7d50\u69cb\u3067\u3059"}}