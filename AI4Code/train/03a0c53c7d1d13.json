{"cell_type":{"22ecff2a":"code","6ed39223":"code","31b02dcb":"code","49e96435":"code","7e9cc2fd":"markdown","e8e5e994":"markdown","b83a53f8":"markdown","5a6308db":"markdown"},"source":{"22ecff2a":"import sqlite3 as sql\nimport pandas as pd\nimport re\n\ndb = '..\/input\/enwiki-20170820.db'","6ed39223":"def get_query(select, db=db):\n    '''Executes a select statement and returns results and column\/field names.'''\n    with sql.connect(db) as conn:\n        c = conn.cursor()\n        c.execute(select)\n        col_names = [str(name[0]).lower() for name in c.description]\n    return c.fetchall(), col_names\n\ndef tokenize(text, lower=True):\n    '''Simple tokenizer. Will split text on word boundaries, eliminating apostrophes and retaining alpha tokens with an exception for underscores.'''\n    text = re.sub(\"'\", \"\", text)\n    if lower:\n        tokens = re.findall('''[a-z_]+''', text.lower())\n    else:\n        tokens = re.findall('''[A-Za-z_]''', text)\n    return tokens\n\ndef get_article(article_id):\n    '''Returns tokens from a given article id. Pulls, joins, and tokenizes section text from a given article id.'''\n    select = '''select section_text from articles where article_id=%d''' % article_id\n    docs, _ = get_query(select)\n    docs = [doc[0] for doc in docs]\n    doc = ' '.join(docs)\n    tokens = tokenize(doc)\n    return tokens\n","31b02dcb":"select = '''select * from articles limit 10'''\ndata, cols = get_query(select)\ndf = pd.DataFrame(data, columns=cols)\ndf","49e96435":"tokens = get_article(0)\nprint(tokens[:100])","7e9cc2fd":"Now let's explore the structure of the database by pulling the first few rows. Note that we could use pandas' built-in functionality to read sql queries directly, but I want to use our shiny functions!","e8e5e994":"## Conclusion\nThis gives you everything you need to start exploring the data! To create you own version of this notebook, click the blue \"Edit Notebook\" button at the top of the kernel. This will create a copy of the code and environment for you to edit. Delete, modify, and add code as you please. Happy Kaggling!","b83a53f8":"## Introduction\nThis kernel is intended to provide guidance on both structure and access of the database. Let's start by importing all the necessary libraries and defining some simple functions.","5a6308db":"As you can see, each article is broken into sections and stored on a seperate row. Let's combine the sections from a single article and tokenize the resulting text using the get_article() function."}}