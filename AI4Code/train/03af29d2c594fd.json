{"cell_type":{"343e2177":"code","2d6d68f5":"code","eeb23290":"code","be8b9385":"code","47466b2c":"code","53eefab9":"code","8270093f":"code","9e89ee09":"code","d0879ce9":"code","a649aa00":"code","6f03dc31":"code","a8c0c0be":"code","469e6aef":"code","9e19b21a":"code","0e788979":"code","562f1a7b":"markdown","6ea62084":"markdown","c96712a0":"markdown","7bd732e5":"markdown","67b7a005":"markdown","d452c445":"markdown","68924e33":"markdown","c8c8a9e2":"markdown","9a6ba2af":"markdown","0934db9f":"markdown","9074384f":"markdown","537872b6":"markdown","36ffcde1":"markdown","cd39a99e":"markdown","f4e3f431":"markdown","0417c10e":"markdown","7e31c3aa":"markdown","01c2f1ba":"markdown","ade4658a":"markdown","8b5a9555":"markdown"},"source":{"343e2177":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\nimport numpy as np # linear algebra\nimport pandas as pd \nimport plotly\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nsurvey20 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', low_memory = False)\n\nsurvey19 = pd.read_csv('..\/input\/kaggle-ds-2019-survey-responses\/2019.csv', low_memory = False)\n\nsurvey18 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', low_memory = False)\n\nsurvey17 = pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv', encoding='ISO-8859-1', low_memory = False)\n\n# ignore first row since it contains description of questions\nsurvey18 = survey18.drop([0])\nsurvey20 = survey20.drop([0])","2d6d68f5":"# Make the gender column name and content uniform across the 4 years\nsurvey18 = survey18.rename(columns = {'Q1': 'GenderSelect'})\nsurvey19 = survey19.rename(columns = {'What is your gender? - Selected Choice': 'GenderSelect'})\nsurvey20 = survey20.rename(columns = {'Q2': 'GenderSelect'}) \n\ndef gender_umbrella(inp_df):\n    inp_df.loc[((inp_df.GenderSelect != 'Female') & (inp_df.GenderSelect != 'Male') ),'GenderSelect'] = 'NonSpecific'\n    return inp_df\n\nsurvey17 = gender_umbrella(survey17)\nsurvey18 = gender_umbrella(survey18)\nsurvey19 = gender_umbrella(survey19)\nsurvey20.loc[((survey20.GenderSelect != 'Woman') & (survey20.GenderSelect != 'Man') ),'GenderSelect'] = 'NonSpecific'","eeb23290":"# Make the age representation uniform across the 4 years\n\nsurvey18 = survey18.rename(columns = {'Q2': 'Age'})\nsurvey19 = survey19.rename(columns = {'What is your age (# years)?': 'Age'})\nsurvey20 = survey20.rename(columns = {'Q1': 'Age'})\n\ndef convert_agetorange(input_df):\n    bins= [0, 17, 22, 25, 30, 35, 40, 45, 50, 55, 60, 70, 80, 100]\n    input_df['AgeGroup'] = None\n    labels = ['None','18-21','22-24','25-29','30-34', '35-39', '40-44', '45-49', '50-54', '55-59', '60-69', '70-79', '80+']\n    input_df['AgeGroup'] = pd.cut(input_df['Age'], bins = bins, labels = labels, right = False)\n    input_df = input_df.drop(columns=['Age'])\n    input_df = input_df.rename(columns={'AgeGroup': 'Age'})\n    return input_df\n\nsurvey17 = convert_agetorange(survey17)\n","be8b9385":"# Make the formal education column name and content uniform across the 4 years\n\nsurvey18 = survey18.rename(columns={'Q4': 'FormalEducation'})\nsurvey19 = survey19.rename(columns={'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?': 'FormalEducation'})\nsurvey20 = survey20.rename(columns={'Q4': 'FormalEducation'})\n\ndef uniform_degreenames(input_df):\n    input_df['FormalEducation'].replace({\"I did not complete any formal education past high school\": \"High School\",\n                                         \"Some college\/university study without earning a bachelor's degree\": \"Other\",\n                                         \"No formal education past high school\": \"High School\",\n                                         \"I prefer not to answer\": \"Unspecified\"},\n                                        inplace = True)\n    return input_df\n\nsurvey17 = uniform_degreenames(survey17)\nsurvey18 = uniform_degreenames(survey18)\nsurvey19 = uniform_degreenames(survey19)\nsurvey20 = uniform_degreenames(survey20)\n","47466b2c":"# Make country column name and contents uniform\n\nsurvey18 = survey18.rename(columns={'Q3': 'Country'})\nsurvey19 = survey19.rename(columns={'In which country do you currently reside?': 'Country'})\nsurvey20 = survey20.rename(columns={'Q3': 'Country'})\n\ndef replace_country_names(sdf):\n    sdf['Country'].replace({\"United States of America\":\"United States\",\n                             \"Viet Nam\":\"Vietnam\",\n                             \"People's Republic of China\":\"China\",\n                             \"Republic of China\":\"China\",\n                             \"United Kingdom of Great Britain and Northern Ireland\":\"United Kingdom\",\n                             \"Hong Kong (S.A.R.)\":\"Hong Kong\",\n                             \"Iran, Islamic Republic of...\":\"Iran\"},\n                           inplace = True)\n    return sdf\n\nsurvey17 = replace_country_names(survey17)\nsurvey18 = replace_country_names(survey18)\nsurvey19 = replace_country_names(survey19)\nsurvey20 = replace_country_names(survey20)","53eefab9":"# Colors that I am using\ndiscrete_colors = ['rgb(191,165,255)',\n                   'rgb(136,132,255)',\n                   'rgb(131,202,255)',\n                   'rgb(129,255,226)',\n                   'rgb(184,247,123)',\n                   'rgb(185,62,62)',\n                   'rgb(161,220,245)',\n                   'rgb(247,195,112)',\n                   'rgb(59,205,187)',\n                   'rgb(219,138,190)',\n                   'rgb(187,194,210)',\n                   'rgb(164,123,106)',\n                   'rgb(169,200,167)',\n                   'rgb(88,86,149)',\n                   'rgb(144,172,176)',\n                   'rgb(108,102,153)',\n                   'rgb(159,106,144)']\n\ncomplementary_colors = ['rgb(122,118,229)',\n                        'rgb(207,134,94)',\n                        'rgb(162,144,209)',\n                        'rgb(157,202,113)',\n                        'rgb(83,142,149)']","8270093f":"lcol = ['Year', 'Count']\nlen_df = pd.DataFrame(columns = lcol)\n\nlen_df = len_df.append({'Year': '2017', 'Count': len(survey17)}, ignore_index = True)\nlen_df = len_df.append({'Year': '2018', 'Count': len(survey18)}, ignore_index = True)\nlen_df = len_df.append({'Year': '2019', 'Count': len(survey19)}, ignore_index = True)\nlen_df = len_df.append({'Year': '2020', 'Count': len(survey20)}, ignore_index = True)\n\nfig = px.bar(len_df, x = 'Year', y = 'Count', color = 'Year', color_discrete_sequence = discrete_colors)\nfig.show()","9e89ee09":"# Gender distribution over the years\n\ndef populate_gender_count(inp_df, year, out_df):    \n    male_searchstr = 'Male'\n    fem_searchstr = 'Female'\n    if year == 2020:\n        male_searchstr = 'Man'\n        fem_searchstr = 'Woman'\n        \n    out_df = out_df.append({'Year': year,\n                            'Gender': 'Female',\n                            'Count': len(inp_df[inp_df['GenderSelect'] == fem_searchstr])}, ignore_index = True)\n    out_df = out_df.append({'Year': year,\n                            'Gender': 'Male',\n                            'Count': len(inp_df[inp_df['GenderSelect'] == male_searchstr])}, ignore_index = True)\n    out_df = out_df.append({'Year': year,\n                            'Gender': 'NonSpecific',\n                            'Count': len(inp_df[inp_df['GenderSelect'] == 'NonSpecific'])}, ignore_index = True)\n\n    return out_df\n\ncolumns = ['Year', 'Gender', 'Count']\nyear_gender_df = pd.DataFrame(columns = columns)\n\nyear_gender_df = populate_gender_count(survey17, 2017, year_gender_df)\nyear_gender_df = populate_gender_count(survey18, 2018, year_gender_df)\nyear_gender_df = populate_gender_count(survey19, 2019, year_gender_df)\nyear_gender_df = populate_gender_count(survey20, 2020, year_gender_df)\n\nfig = px.bar(year_gender_df,\n             x = \"Gender\",\n             y = \"Count\",\n             animation_frame = \"Year\",\n             color = \"Gender\",\n             hover_name = \"Count\",\n             color_discrete_sequence = discrete_colors,\n             range_y = [0, 20000])\n\nfig.show()","d0879ce9":"# Ten countries that reported highest and lowest sex ratios in the year 2017\n\ngs17_df = survey17[[\"GenderSelect\", \"Country\"]]\n\ngs17_df = (gs17_df.assign(Helper = (gs17_df['GenderSelect'] == 'Male'))\n        .groupby(['Country'])['Helper']\n        .agg([('MaleCount','sum'),('Count','size')])\n        .astype(int)\n        .reset_index())\n\ngs17_df['MalePercentage'] = gs17_df['MaleCount'] \/ gs17_df['Count'] * 100\n\n# Countries where male participant percentage was minimum compared to rest of world\nbalancdratio17_df = gs17_df.sort_values(by = ['MalePercentage']).head(11)\ncountries_balancedgender = balancdratio17_df['Country'].unique()\n\n# Get counts for shortlisted countries only\n# First for countries with somewhat balanced ratios ( = lowest male percentage in survey dataset)\n\nbcolumns = ['Year', 'Country', 'Gender', 'Count']\nyear_balgender_df = pd.DataFrame(columns = bcolumns)\n\ndef append_plotdf(bal_df, country, year, balgender_df):\n    cdf = bal_df[bal_df['Country'].str.contains(str(country), regex=False)]\n    \n    gender_searchstr = \"Male\"\n    if year == 2020:\n        gender_searchstr = \"Man\"\n    \n    balgender_df = balgender_df.append({'Year': year,\n                                                  'Country': country,\n                                                  'Gender': 'Male',\n                                                  'Count': len(cdf[cdf['GenderSelect'] == gender_searchstr])}, ignore_index = True)\n    \n    balgender_df = balgender_df.append({'Year': year,\n                                                  'Country': country,\n                                                  'Gender': 'Others',\n                                                  'Count': len(cdf[cdf['GenderSelect'] != gender_searchstr])}, ignore_index = True)\n    return balgender_df\n    \ndef populate_genderplotdf(surveydf, country_list, year, year_gender_df):\n    bal_df = surveydf[surveydf['Country'].isin(country_list)]\n    for country in country_list:\n        if country == 'United States':\n            i = 0\n        else:\n            year_gender_df = append_plotdf(bal_df, country, year, year_gender_df)\n    return year_gender_df\n    \nyear_balgender_df = populate_genderplotdf(survey17, countries_balancedgender, 2017, year_balgender_df)\nyear_balgender_df = populate_genderplotdf(survey18, countries_balancedgender, 2018, year_balgender_df)\nyear_balgender_df = populate_genderplotdf(survey19, countries_balancedgender, 2019, year_balgender_df)\nyear_balgender_df = populate_genderplotdf(survey20, countries_balancedgender, 2020, year_balgender_df)\n\nfig = px.bar(year_balgender_df,\n             x = \"Country\",\n             y = \"Count\",\n             animation_frame = \"Year\",\n             color = \"Gender\",\n             color_discrete_sequence = complementary_colors,\n             title=\"How Gender-wise Figures changed for Countries with Low Male Percentage (2017-2020)\",\n             hover_name = \"Count\",\n             range_y = [0, 1700])\n\nfig.show()\n\n","a649aa00":"\n# Countries where male participant percentage was highest compared to rest of world\nskewedratio17_df = gs17_df.sort_values(by = ['MalePercentage']).tail(10)\ncountries_skewedgender = skewedratio17_df['Country'].unique()\n#print (countries_skewedgender)\n\nyear_skewdgender_df = pd.DataFrame(columns = bcolumns)\n\n#plotting for skewed ratios\nyear_skewdgender_df = populate_genderplotdf(survey17, countries_skewedgender, 2017, year_skewdgender_df)\nyear_skewdgender_df = populate_genderplotdf(survey18, countries_skewedgender, 2018, year_skewdgender_df)\nyear_skewdgender_df = populate_genderplotdf(survey19, countries_skewedgender, 2019, year_skewdgender_df)\nyear_skewdgender_df = populate_genderplotdf(survey20, countries_skewedgender, 2020, year_skewdgender_df)\n\nfig = px.bar(year_skewdgender_df,\n             x = \"Country\",\n             y = \"Count\",\n             animation_frame = \"Year\",\n             color = \"Gender\",\n             color_discrete_sequence = complementary_colors,\n             title=\"How Gender-wise Figures changed for Countries with High Male Percentage (2017-2020)\",\n             hover_name = \"Count\",\n             range_y=[0, 800])\n\nfig.show()","6f03dc31":"# How Age distribution changed over years 2017-2020\n\ncountdf_17 = survey17.groupby(['Age']).Age.agg('count').to_frame('Count').reset_index()\ncountdf_18 = survey18.groupby(['Age']).Age.agg('count').to_frame('Count').reset_index()\ncountdf_19 = survey19.groupby(['Age']).Age.agg('count').to_frame('Count').reset_index()\ncountdf_20 = survey20.groupby(['Age']).Age.agg('count').to_frame('Count').reset_index()\n\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\n    \nfig = make_subplots(rows = 2, cols = 2, specs = specs, subplot_titles=['2017', '2018', '2019', '2020'])\nfig.add_trace(go.Pie(labels = countdf_17.Age,\n                     values = countdf_17.Count,\n                     name=\"2017\"),\n              1, 1)\nfig.add_trace(go.Pie(labels = countdf_18.Age,\n                     values = countdf_18.Count,\n                     name=\"2018\"),\n              1, 2)\nfig.add_trace(go.Pie(labels = countdf_19.Age,\n                     values = countdf_19.Count,\n                     name=\"2019\"),\n              2, 1)\nfig.add_trace(go.Pie(labels = countdf_20.Age,\n                     values = countdf_20.Count,\n                     name=\"2020\"),\n              2, 2)\n\nfig.update_traces(hole=.4)\nfig.update_layout(title_text = \"Ages of Kagglers from 2017-2020\")\nfig.show()","a8c0c0be":"# How Education distribution changed over years 2017-2020\n\nfecdf_17 = survey17.groupby(['FormalEducation']).FormalEducation.agg('count').to_frame('Count').reset_index()\nfecdf_18 = survey18.groupby(['FormalEducation']).FormalEducation.agg('count').to_frame('Count').reset_index()\nfecdf_19 = survey19.groupby(['FormalEducation']).FormalEducation.agg('count').to_frame('Count').reset_index()\nfecdf_20 = survey20.groupby(['FormalEducation']).FormalEducation.agg('count').to_frame('Count').reset_index()\n\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\n    \nfig = make_subplots(rows = 2, cols = 2, specs = specs, subplot_titles=['2017', '2018', '2019', '2020'])\nfig.add_trace(go.Pie(labels = fecdf_17.FormalEducation,\n                     values = fecdf_17.Count,\n                     name=\"2017\"),\n              1, 1)\nfig.add_trace(go.Pie(labels = fecdf_18.FormalEducation,\n                     values = fecdf_18.Count,\n                     name=\"2018\"),\n              1, 2)\nfig.add_trace(go.Pie(labels = fecdf_19.FormalEducation,\n                     values = fecdf_19.Count,\n                     name=\"2019\"),\n              2, 1)\nfig.add_trace(go.Pie(labels = fecdf_20.FormalEducation,\n                     values = fecdf_20.Count,\n                     name=\"2020\"),\n              2, 2)\n\nfig.update_traces(hole=.4)\n\nfig.update_layout(title_text = \"Formal Education among Kagglers from 2017-2020\")\nfig.show()","469e6aef":"unicef_flnm = '..\/input\/unicef-youth-literacy-rate-among-1524-year-olds\/UNICEF_Literacy.csv'\nunicef_df = pd.read_csv(unicef_flnm, low_memory = False)\n\n# trimming off features that are not required\nunicef_df = unicef_df[['Geographic area', 'Sex', 'OBS_VALUE']]\n#unicef_df.info()\n\n# Finding countries in Kaggle Survey DS that reported low & high literacy rates acc to Unicef (2017)\ndf3 = survey17.merge(unicef_df, left_on = ['Country', 'GenderSelect'], right_on = ['Geographic area', 'Sex'], how = 'left')\n\ndf3 = df3[['Country', 'GenderSelect', 'OBS_VALUE']]\ndf3 = df3.dropna()\ndf3 = df3.drop_duplicates(subset=['Country', 'GenderSelect'])\nmale_lowlitdf = df3[df3.GenderSelect == 'Male'].sort_values(['OBS_VALUE']).head(3)\nmale_hilitdf = df3[df3.GenderSelect == 'Male'].sort_values(['OBS_VALUE']).tail(3)\n\nfemale_lowlitdf = df3[df3.GenderSelect == 'Female'].sort_values(['OBS_VALUE']).head(3)\nfemale_hilitdf = df3[df3.GenderSelect == 'Female'].sort_values(['OBS_VALUE']).tail(3)\n\nlowlit_countries = list(set(male_lowlitdf.Country) & set(female_lowlitdf.Country))\nprint (\"Countries in Kaggle DS Survey that had lowest youth literacy rate (2017)\", lowlit_countries)\n\nhilit_countries = list(set(male_hilitdf.Country) & set(female_hilitdf.Country))\nprint (\"Countries in Kaggle DS Survey that had highest youth literacy rate (2017)\", hilit_countries)","9e19b21a":"# What was the distribution of formal education for countries at the extremes of literacy rates\n\necolumns = ['Year', 'Country', 'FormalEducation', 'Count']\n# degrees-wise counts for each of the four years for shortlisted countries\nyear_lowlit_df = pd.DataFrame(columns = ecolumns)\n    \ndef populate_litplotdf(surveydf, country_list, year, year_lit_df):\n    lit_df = surveydf[surveydf['Country'].isin(country_list)]\n    #print (lit_df.shape)\n    for country in country_list:\n        cdf = surveydf[surveydf['Country'].str.contains(str(country), regex = False, na = False)]\n        cdf = cdf[cdf['FormalEducation'].notna()]\n        degree_names = cdf['FormalEducation'].unique()\n        \n        for deg in degree_names:\n            year_lit_df = year_lit_df.append({'Year': year,\n                                              'Country': country,\n                                              'FormalEducation': deg,\n                                              'Count': len(cdf[cdf['FormalEducation'] == deg])}, ignore_index = True)\n    return year_lit_df\n\nyear_lowlit_df = populate_litplotdf(survey17, lowlit_countries, 2017, year_lowlit_df)\nyear_lowlit_df = populate_litplotdf(survey18, lowlit_countries, 2018, year_lowlit_df)\nyear_lowlit_df = populate_litplotdf(survey19, lowlit_countries, 2019, year_lowlit_df)\nyear_lowlit_df = populate_litplotdf(survey20, lowlit_countries, 2020, year_lowlit_df)\n\nfig = px.bar(year_lowlit_df,\n             x = \"Country\",\n             y = \"Count\",\n             animation_frame = \"Year\",\n             color = \"FormalEducation\",\n             color_discrete_sequence = discrete_colors,\n             title=\"Degree Distribution for Low Youth Literacy Nations (2017-2020)\",\n             hover_name = \"Count\",\n             range_y=[0, 6000])\nfig.show()","0e788979":"year_hilit_df = pd.DataFrame(columns = ecolumns)\n\nyear_hilit_df = populate_litplotdf(survey17, hilit_countries, 2017, year_hilit_df)\nyear_hilit_df = populate_litplotdf(survey18, hilit_countries, 2018, year_hilit_df)\nyear_hilit_df = populate_litplotdf(survey19, hilit_countries, 2019, year_hilit_df)\nyear_hilit_df = populate_litplotdf(survey20, hilit_countries, 2020, year_hilit_df)\n\nfig = px.bar(year_hilit_df,\n             x = \"Country\",\n             y = \"Count\",\n             animation_frame = \"Year\",\n             color = \"FormalEducation\",\n             color_discrete_sequence = discrete_colors,\n             title=\"Degree Distribution for High Youth Literacy Nations (2017-2020)\",\n             hover_name = \"Count\",\n             range_y = [0, 400])\nfig.show()","562f1a7b":"### Bringing our chicken into a line\nThis involves making column names and contents uniform across the four datasets. These include Gender, Age, Formal education and Country columns.\n<br>\n##### Standardize Selected Gender \u2640\u2642\u26a7\nLet's make Gender column name uniform across the four years in focus.\n<br>The gender values were clubbed under the umbrellas of Male, Female and Unspecified.<br>Participants who did not wish to specify their gender or identified themselves as Non-binary were clubbed under the generic term 'Unspecified' due to very small numbers.\n<br>For the year 2020, it should be noted that the two genders <i>Male<\/i> and <i>Female<\/i> were labeled as <i>Man<\/i> and <i>Woman<\/i> respectively.","6ea62084":"Standardize the Formal Education Representation","c96712a0":"The first survey in the year 2017 saw majority of Kagglers of ages from mid-twenties to mid-thirties.\n<br>The next year saw more participants who were in late teens and early twenties. They gained prominence and have been showing an increase in their presence since the year 2018.\n<br>And.. A shout-out to the silver Kagglers who have taught us that it is never too late to learn new things \ud83d\udc4f\n<br>Verdict? <span style=\"color:green;\">Young blood is joining the Kaggle community in big numbers.","7bd732e5":"<b>Kaggle DS Survey<\/b> started in the year 2017 and got a promising response. The numbers grew whoppingly next year with more people joining the community. Somehow the numbers dipped the next year, probably because of the extensive questions and time it needed to be answered. The year 2020 meant a majority of you spending time on video calls rather than actual work. Bet many of you took the survey while sitting in a boring VC \ud83d\ude06\n<br>\n## How Gender Figures changed over the Four Surveys\nLet's see how the gender specific survey numbers varied over the four years. ","67b7a005":"<span style=\"color:green;\">Hands down the majority of Kagglers hold a Master's degree.<\/span>\n<br>It is interesting to see that while Bachelor's degree has been a close second, it still has a decent gap to catch up to the popularity of Master's degree. On the other hand, in the year 2020 it ate into the portion of Kagglers who have completed Doctorate. This could probably be attributed to the increased presence of youngsters in the 2020 DS survey and the increasing popularity of Data science as a prospective career among college-goers.\n<br>Lastly, around 10 percent of Kagglers hold diploma\/degrees that are different from the mainstream Bachelor's. This enforces the fact that certifications and courses can also get you on track when pursuing a career in data sciences.","d452c445":"\n<blockquote><center><span style=\"font-size:20px;\">The bad news is that <i>time flies<\/i>.\nThe good news is that <i>You're the pilot<\/i><\/span><\/center><\/blockquote>\n\n![10502.jpg](attachment:10502.jpg)\n <a href=\"https:\/\/www.freepik.com\/vectors\/people\">People vector created by pch.vector - www.freepik.com<\/a> \n\nI held my morning \u2615 and answered the fourth <b>Kaggle DS Survey 2020<\/b>.<br>A part of me wondered, <span style=\"font-family:cursive;\">Boy! four years already and I'm still a lurker<\/span>.\nThe other part marveled at how the questions were a sign of how much Data Science and Machine Learning has come along.\n<br>All those exciting mails in the past year about winners explaining their works, launching of TPUs \ud83c\udf89, walkthroughs for TPU usage and competitions that focussed on GANs. Time definitely is flying! And Kagglers are not just the riders of this jet but very much present in the cockpit.\n<br>\n<br>This notebook is for you, my fellow Kagglers.\n<br>In this notebook I have tried to celebrate just how far we have come along. And I hope justice has been done to the amazing spirit that you bring to this community.","68924e33":"The number of participants from Singapore, Belarus and Italy have remained somewhat comparable. <span style=\"color:green;\">An observation that has emerged is that the holders of doctoral degree here are seen in larger numbers as compared to the ones from lower literacy rate countries.<\/span>\n<br>Additionally, Master's degree has ruled the roost and grown in number over the years along with the doctoral degree figures. ","c8c8a9e2":"## Reading the responses of surveys that were held for years [2017](https:\/\/www.kaggle.com\/kaggle\/kaggle-survey-2017), [2018](https:\/\/www.kaggle.com\/kaggle\/kaggle-survey-2018\/), [2019](https:\/\/www.kaggle.com\/c\/kaggle-survey-2019) & 2020","9a6ba2af":"Standardize the Age Representation","0934db9f":"<span style=\"font-size:16px;\">Here's to hoping that girl geeks touch 5K next year \ud83e\udd1e<\/span>","9074384f":"## Formal Education Distribution over the four years\nNow let's see what degrees \ud83e\udd13 the Kagglers hold and how their numbers changed over the four surveys.\n","537872b6":"While participants from India were very much in larger numbers than the other two countries since 2017, the growth in number of Kagglers from India has been huge over the four years. Clearly showing <span style=\"color:green;\">India as one of the emerging hubs of data science and machine learning enthusiasts.<\/span> It can also be said that the new Kagglers from India are from the younger lot due to increase in number of participants who hold a Bachelor's degree. Catch 'em young India!\n<br><br>Now let's see the variation in numbers for reported degrees held by the survey participants for Singapore, Belarus and Italy.","36ffcde1":"Standardize the Country column name and specific country names","cd39a99e":"## The number of Kagglers who took the DS survey over the years\n<br>\n<i>Some of you don't believe in surveys, while for some of you they are a ball.\n<br>\nSome of you don't know what boxes to check, some of you want to tick them all.<\/i>","f4e3f431":"Listing down the colors that comprise the palette I had used.","0417c10e":"### Countries with high and low literacy indicators\nWhile only a small percentage (~10%) of Kagglers did not hold a Bachelor's degree, data science is definitely an advanced field.\n<br>But what is the effect of a country's education policies on a Kaggler?\n<br>Which participating countries make up the extremes of the spectrum if we consider literacy as an indicator?\n<br>Moreover, what were the trends followed by these countries over the past four years?\n<br><br>To answer these questions, I queried the social indicator Youth literacy rate for 15-24 year olds from<\/span> [UNICEF data warehouse for the year 2017](http:\/\/data.unicef.org\/resources\/data_explorer\/unicef_f\/?ag=UNICEF&df=GLOBAL_DATAFLOW&ver=1.0&dq=.ED_ANAR_L2+ED_15-24_LR._T.&startPeriod=2016&endPeriod=2020) \nThis decision was based on the knowledge that youngsters are forming a big share of Kaggle community. \n<br>A number of countries that were present in Kaggle DS dataset were missing in the UNICEF data. So let's focus on the countries that were present in both the UNICEF data and the Kaggle survey datasets.\n","7e31c3aa":"The countries that had largest share of male participants in the Kaggle DS survey were considered to have a skewed sex ratio in the Kaggle community. Let's see how their numbers changed over the four years.\n<br>Kagglers from Norway, Denmark and Czech Repulic, we missed you in 2020!","01c2f1ba":"The countries that were common in the UNICEF youth literacy data and Kaggle DS Survey 2017 were ranked according to male and female literacy figures.\n<br>An intersection of both genders was used to shortlist the three countries that had lowest youth literacy rate, and resulted in <span style=\"color:green;\">Kenya, Nigeria and India<\/span>.\n<br>While the intersection of both genders used to shortlist the three countries that had highest youth literacy rate resulted in <span style=\"color:green;\">Singapore, Belarus and Italy<\/span>.\n<br><br>First I plotted the variation in numbers for reported degrees held by the survey participants for Kenya, Nigeria and India.","ade4658a":"## Age distributions over the four years\nOver the past four years, have Kagglers grown older? Or do we have young blood joining in bigger numbers?\n<br><br><i>Abracadabra! O Numbers! Do tell us so...<\/i>","8b5a9555":"## Let's talk about Sex Ratio\n\nThe participants of Kaggle DS survey come form different countries with their unique socio-economic makeup. Instead of going by the sex ratio designated by an external agency, I considered the gender ratio specific to the Kaggle community.\n    \n<br>As seen in the previous figures, <span style=\"color:green;\">males make up the majority of the community<\/span>.\n<br>If I had calculated a sex ratio based on gender counts in the Kaggle survey datasets, the numbers would have been in extreme decimal values.\n<br>So I calculated the male percentage from 2017 survey dataset and picked ten countries with lowest male percentage to label them as countries with better sex ratio on Kaggle. And ten countries with highest male percentage were labled as having a skewed sex ratio in terms of the Kaggle community.\n    \n<br>Also, due to extremely high number of participants from the United States, I removed it from the second category of countries to keep the numbers upto scale.\n    \n<br>So for the ten countries with lowest male percentages, here is how the numbers changed for males and the rest of genders across the four years."}}