{"cell_type":{"5a573f32":"code","6ebadfcf":"code","0484bbb3":"code","2ed4c2cc":"code","e5c52a2f":"code","2e9ae263":"code","4b782adf":"code","82cf309c":"code","1c486313":"code","6a7d8014":"code","c8cd9a67":"code","50e1bb9c":"code","131501e7":"code","9fd59851":"code","e09f17bd":"code","4bb6c109":"code","085c0e69":"code","980b1c1b":"code","ed70c3cf":"code","2e681f68":"code","19bfad0c":"code","bd872366":"code","029b69bd":"code","ddd5ed91":"code","84487c8a":"code","a56bc4e7":"code","ac30baaf":"markdown","853984aa":"markdown","14a7eb0c":"markdown","b6070c1c":"markdown","8c5466c2":"markdown","8f20b0e4":"markdown","9906d1ff":"markdown","238e410e":"markdown","0ef052b3":"markdown","f6c24956":"markdown","f2fccbb7":"markdown","8f0bac3c":"markdown","778bfa50":"markdown","6c00a2f7":"markdown","ac8753eb":"markdown","12b5fd50":"markdown","eee574f9":"markdown","fe6d099f":"markdown","0e6938cb":"markdown","21e1ccd6":"markdown","de812349":"markdown","23a7e2e9":"markdown"},"source":{"5a573f32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6ebadfcf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\ndata = pd.read_csv('..\/input\/sample-supermarket-dataset\/SampleSuperstore.csv')\ndata.head()","0484bbb3":"#summary of dataset\ndata.describe()","2ed4c2cc":"#checking for datatypes\ndata.info()","e5c52a2f":"#checking for null values\ndata.isnull().sum()","2e9ae263":"#no. of duplicated rows\ndata.duplicated().sum()","4b782adf":"#drop duplicated values\ndata=data.drop_duplicates()","82cf309c":"#Summary of dataset after dropping duplicates\ndata.describe()","1c486313":"#unique no. of rows in each columns\ndata.nunique()","6a7d8014":"#dropping unnecessary columns\ndata= data.drop('Country', axis=1)","c8cd9a67":"#saving data in new variable after dropping postal code\nnew_data = data.drop('Postal Code' , axis=1)\n\nnew_data.info()","50e1bb9c":"#Unique no. of regions\nnew_data['Region'].unique()","131501e7":"#Comparing values in category, and subcategory\nprint(new_data['Sub-Category'].unique())\nprint(new_data['Category'].unique())","9fd59851":"attributes = ['Sales','Quantity','Discount','Profit']\ncorr_mat = new_data.corr()\ncorr_mat","e09f17bd":"#plotting correlation matrix\nplt.subplots(figsize=(12,9))\nsns.heatmap(corr_mat,annot=True)\nplt.show()","4bb6c109":"#plotting pair plot (Region wise)\nsns.pairplot(new_data, hue='Region' , diag_kind=\"hist\")","085c0e69":"#scatter plot\nplt.scatter(data['Sales'],data['Profit'])\nplt.xlabel('Sales')\nplt.ylabel('Profit')\nplt.title('Sales v\/s Profit')\nplt.show()","980b1c1b":"#plotting profit v\/s sales statewise\nprofit_to_sales = pd.DataFrame(new_data.groupby('State').sum()[['Sales','Profit']])\nprofit_to_sales['Profit_to_sales'] = profit_to_sales['Profit']\/profit_to_sales['Sales']\nprofit_to_sales.sort_values(by='Profit_to_sales',inplace = True, ascending = False)\nprint(\"Highest 10 Ratios :\\n\")\nprint(profit_to_sales[:10])\nprint('='*70)\nprint(\"Lowest 10 Ratios:\\n\")\nprint(profit_to_sales[-10:])","ed70c3cf":"pd.DataFrame(new_data.groupby('Region').sum()[['Sales','Profit']]).plot(kind='bar')","2e681f68":"#Top 10 states with maximum number of items sold\nnew_data.groupby('State').count()['Quantity'].sort_values(ascending= False)[:10]","19bfad0c":"#Top 10 states with minimum number of items sold\nnew_data.groupby('State').count()['Quantity'].sort_values()[:10]","bd872366":"#total statewise sales in descending order\nstate_wise_sales = pd.DataFrame(new_data.groupby('State').sum()['Sales']).sort_values(by ='Sales',ascending= False)\nstate_wise_sales.reset_index(inplace=True)\nstate_wise_sales.head()","029b69bd":"# Top 10 stores with maximum amount of sales\nprint('States with maximum amount of sales:\\n',state_wise_sales[:10])\n\nprint('\\n','='*50, '\\n')\n\n# Stores with minimum amount of sales\nprint('States with minimum amount of sales:\\n',state_wise_sales[-10:])","ddd5ed91":"# Top 10 states with maximum amount of profit\nprint('States with maximum amount of profit:\\n',new_data.groupby('State').sum()['Profit'].sort_values(ascending= False)[:10])\n\nprint('\\n','='*50, '\\n')\n\n# States with minimum amount of profit\nprint('States with minimum amount of profit:\\n',new_data.groupby('State').sum()['Profit'].sort_values()[:10])","84487c8a":"#new dataframe having states and regions\nstate_region = new_data[['State','Region']]\n\n#drop duplicated values\nstate_region = state_region.drop_duplicates()\nstate_region\n\n#adding region column to state_wise_sales dataframe\nstate_wise_sales = pd.merge(state_wise_sales, state_region)","a56bc4e7":"#plotting Sales Statewise\nplt.figure(figsize=(15,8))\ng= sns.barplot(x='State', y='Sales', data = state_wise_sales, hue='Region', dodge=False)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.show()","ac30baaf":"* The company has highest sales in the state of California which is around 450k.\n* New York is the state that constitutes the second highest sales for the company of around 300k.\n* The states of Texas and Washington end up 3rd and 4th on the chart with around 150k and 140k in sales correspondingly.\n* Maximum of the sales are done in the west and the east coast regions.","853984aa":"# **Region-wise Analysis**","14a7eb0c":"* Company must focus on cities which made loss.\n* They should analyse their resource usage and the categories which are being sold in those states.","b6070c1c":"Every city has different Postal Codes, So we should drop one of the two columns.","8c5466c2":"* Now there are 9977 rows in the dataset","8f20b0e4":"# **Checking Sub-category & Category**","9906d1ff":"* The company needs to focus more on these 10 states that have least amount of sales.","238e410e":"* Western & Eastern regions have shown higher sales and profits as compared to the Southern and central regions.\n* Central region has higher sales than the Southern region but it has shown lower profit gains between the two of them.","0ef052b3":"# **Importing Dataset**","f6c24956":"# **Check for Duplicates**","f2fccbb7":"# **Exploring city, state, postal code, and region**","8f0bac3c":"* Ohio has the worst profit to sales ratio.\n* District of Columbia has the highest profit to sales ratio.\n* The states California , New York doesn't come in the list of top 10 states with highest profit to sales ratio that means there is still some room for improvement.","778bfa50":"There are only four regions. Looking at the data, we can see that we have three categorical variables, which are basically related.\n* City :- Having the most number of unique values\n* State :- Having number of unique values less than city\n* Region :- Only four unique values","6c00a2f7":"* The data is only for 1 country. We can remove the country column.\n* Our data covers the details of sales of 49 states, 531 cities divided in 4 different regions.","ac8753eb":"* So there are no missing values.\n* There are 13 features in data, and 9994 rows.","12b5fd50":"* 17 duplicated values are present which is 0.17% of data. So, it can be deleted.","eee574f9":"# **Exploring Data**","fe6d099f":"At lower sales, a business either gets profit or loss. But, when the sales are high, a business mostly gets profit.\n\n**Profit to Sales Ratio**","0e6938cb":"# **Correlation Check**","21e1ccd6":"# **Checking Region**","de812349":"# **State-wise Analysis**","23a7e2e9":"# **It seems Profit is highly correlated with Sales.**\n**Sales v\/s Profit**"}}