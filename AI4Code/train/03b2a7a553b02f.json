{"cell_type":{"83bdf127":"code","02729f62":"code","3884c321":"code","fe5d0191":"code","fdf0c1ef":"code","f1bda72d":"code","6e34890f":"code","a2828752":"code","aea58aad":"code","15449ac3":"code","e64e8774":"code","ee8e9e05":"code","5df1df51":"markdown"},"source":{"83bdf127":"\nimport folium\nfrom folium import Marker, GeoJson\nfrom folium.plugins import HeatMap\n\nimport pandas as pd\nimport geopandas as gpd","02729f62":"releases = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/toxic_release_pennsylvania\/toxic_release_pennsylvania\/toxic_release_pennsylvania.shp\") \nreleases.head()","3884c321":"stations = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/PhillyHealth_Air_Monitoring_Stations\/PhillyHealth_Air_Monitoring_Stations\/PhillyHealth_Air_Monitoring_Stations.shp\")\nstations.head()","fe5d0191":"#make sure they use the CRS\nprint(stations.crs)\nprint(releases.crs)\n#yes they are ","fdf0c1ef":"# Select one release incident in particular\nrecent_release = releases.iloc[360]\n\n# Measure distance from release to each station\ndistances = stations.geometry.distance(recent_release.geometry)\ndistances","f1bda72d":"print('Mean distance to monitoring stations: {} feet'.format(distances.mean()))\n","6e34890f":"print('Closest monitoring station ({} feet):'.format(distances.min()))\nprint(stations.iloc[distances.idxmin()][[\"ADDRESS\", \"LATITUDE\", \"LONGITUDE\"]])","a2828752":"two_mile_buffer = stations.geometry.buffer(2*5280)\ntwo_mile_buffer.head()","aea58aad":"m = folium.Map(location=[39.9526,-75.1652], zoom_start=11)\nHeatMap(data=releases[['LATITUDE', 'LONGITUDE']], radius=15).add_to(m)\nfor idx, row in stations.iterrows():\n    Marker([row['LATITUDE'], row['LONGITUDE']]).add_to(m)\n    \n# Plot each polygon on the map\nGeoJson(two_mile_buffer.to_crs(epsg=4326)).add_to(m)\n\n# Show the map\nm","15449ac3":"# Turn group of polygons into single multipolygon\nmy_union = two_mile_buffer.geometry.unary_union\nprint('Type:', type(my_union))\n\n# Show the MultiPolygon object\nmy_union","e64e8774":"# The closest station is less than two miles away\nmy_union.contains(releases.iloc[360].geometry)","ee8e9e05":"# The closest station is more than two miles away\nmy_union.contains(releases.iloc[358].geometry)\n","5df1df51":"This notebook follows this course: https:\/\/www.kaggle.com\/learn\/geospatial-analysis\n\n\nThe notes and comments are personal approaches"}}