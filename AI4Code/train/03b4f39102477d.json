{"cell_type":{"574febf8":"code","8ae9aad6":"code","0ebfe9cb":"code","040ed5e8":"code","7b3c4420":"code","07faa9a4":"code","350b04c9":"code","eebe719d":"markdown","eb5441ec":"markdown","53861042":"markdown","b087e140":"markdown"},"source":{"574febf8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ae9aad6":"import pandas as pd\nimport chardet","0ebfe9cb":"with open(\"..\/input\/forest-fires-in-brazil\/amazon.csv\", 'rb') as rawdata:\n    result = chardet.detect(rawdata.read(80000))\nprint(result)","040ed5e8":"df_forest_fire = pd.read_csv('..\/input\/forest-fires-in-brazil\/amazon.csv', encoding='ISO-8859-1')","7b3c4420":"df_forest_fire_by_year = df_forest_fire.groupby(['year']).number.agg(sum)\ndf_forest_fire_by_year =pd.DataFrame(df_forest_fire_by_year)\ndf_forest_fire_by_year.number = df_forest_fire_by_year.number.map(lambda p: round(p))\ndf_forest_fire_by_year.plot(ylabel='Total fires by year', figsize=(10,5))\ndf_forest_fire_by_year.T","07faa9a4":"df_forest_fire_by_year = df_forest_fire.groupby(['year','state']).number.agg(sum)\ndf_forest_fire_by_year = pd.DataFrame(df_forest_fire_by_year).reset_index()\ndf_forest_fire_by_year.number = df_forest_fire_by_year.number.map(lambda p: round(p))\nyear_wanted = int(input('Enter the desired year between 1998 and 2017: '))\ndf_year_wanted = df_forest_fire_by_year.loc[df_forest_fire_by_year.year == year_wanted]\ndf_year_wanted.sort_values(by='number', ascending=False).reset_index(drop=True)","350b04c9":"state_search = df_forest_fire.groupby(['state','year']).number.agg(sum).reset_index()\nstate_search.number = state_search.number.map(lambda p: round(p))\nstate_wanted = input('Enter the state name with the first letter capitalized: ')\ndf_state_search = state_search.loc[state_search.state == state_wanted ].set_index('year',drop=True)\ndf_state_search.plot(figsize=(10,5), ylabel='number of fires')\ndf_state_search.reset_index()\n","eebe719d":"# Hello, \n#### I am a beginner in data analysis and I will try to organize this dataset and add some features.\n\n## To be able to use the search functions for years and states you will need to copy and edit this notebook.","eb5441ec":"# Adding up all the fires for years ","53861042":"# Searching total fires per year each state","b087e140":"# Searching fires by state and history of fires"}}