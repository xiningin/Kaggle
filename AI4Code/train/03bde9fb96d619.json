{"cell_type":{"a29963df":"code","78b5e08c":"code","fafbb750":"code","209af0d7":"code","6dbfa81a":"code","c53f1faf":"code","37053bb9":"code","0a35f684":"code","f22a0205":"code","5049682d":"code","84ed31b5":"code","c5730afe":"code","d5c37296":"code","9a9df9d1":"markdown","f47abfb4":"markdown","e148e8ef":"markdown","88cda4dd":"markdown","ec6191b7":"markdown","7d026693":"markdown","691fc58f":"markdown"},"source":{"a29963df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","78b5e08c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nfrom xgboost import XGBRegressor\nfrom warnings import filterwarnings \nimport xgboost as xgb\nfilterwarnings('ignore')","fafbb750":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2021\/train.csv',index_col  = 'id')\nprint('shape : {} '.format(train.shape))\ntrain.head()","209af0d7":"plt.figure(figsize = (14,6))\nsns.heatmap(train.corr(),annot = True)","6dbfa81a":"plt.figure(figsize = (14,16))\nfor i in range(len(train.columns)):\n    plt.subplot(5,3,i+1)   \n    sns.boxplot(train[train.columns[i]])\nplt.show()","c53f1faf":"plt.figure(figsize = (16,16))\nfor i in range(len(train.columns)):\n    plt.subplot(5,3,i+1)   \n    sns.distplot(train[train.columns[i]])\nplt.show()","37053bb9":"plt.figure(figsize = (14,16))\nfor i in range(len(train.columns)):\n    plt.subplot(5,3,i+1)   \n    sns.scatterplot(x = train.columns[i],y = 'target',data = train)\nplt.show()","0a35f684":"x = train.drop('target',axis=1)\ny = train['target']\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25,random_state = 42)","f22a0205":"regressor = xgb.XGBRegressor(\n                 colsample_bytree=0.5,\n                 alpha=0.01563,\n                 #gamma=0.0,\n                 learning_rate=0.01,\n                 max_depth=15,\n                 min_child_weight=257,\n                 n_estimators=4000,                                                                  \n                 #reg_alpha=0.9,\n                 reg_lambda=0.003,\n                 subsample=0.7,\n                 random_state=2020,\n                 metric_period=100,\n                 silent=1)\n\nregressor.fit(x_train, y_train, early_stopping_rounds=6, eval_set=[(x_test, y_test)], verbose=1)","5049682d":"df_test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2021\/test.csv',index_col = 'id')","84ed31b5":"df_tahmin = pd.DataFrame(regressor.predict(df_test),index= df_test.index,columns = ['target'])","c5730afe":"df_tahmin.head()","d5c37296":"df_tahmin.to_csv('mycsvfile.csv',index=True)","9a9df9d1":"# correlation","f47abfb4":"# model","e148e8ef":"# getting data","88cda4dd":"# import libraries","ec6191b7":"# visualization","7d026693":"# Setup","691fc58f":"# train-test split"}}