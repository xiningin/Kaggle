{"cell_type":{"cfc3603e":"code","2d7434e9":"code","cd9fbf9e":"code","f3ecfb71":"code","227fc76d":"code","31124dd0":"code","e7fb014a":"code","5e01c701":"code","6ca9fde2":"code","38ce2949":"code","af8ad201":"code","311a05e6":"code","f899ab03":"code","f9feafd3":"code","3a797d6a":"code","90c569d9":"code","357291fe":"code","ca19e077":"code","a6be11c0":"code","812625e5":"code","de74731a":"code","1a37696e":"code","ce25bc2c":"code","8683aa7b":"code","52cd7158":"code","9f70d24b":"code","e6268cdb":"code","7d5d83a9":"code","e8fa52fa":"code","3c39a6fb":"markdown"},"source":{"cfc3603e":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","2d7434e9":"df_train=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_train.shape","cd9fbf9e":"df_test=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndf_test.shape","f3ecfb71":"train_test=pd.concat([df_train,df_test],axis=0,sort=False)\ntrain_test.head()","227fc76d":"sales= train_test['SalePrice']\nId= train_test['Id']","31124dd0":"train_test= train_test.drop(columns=['SalePrice'])\ntrain_test= train_test.drop(columns=['Id'])\ntrain_test.head()","e7fb014a":"total = train_test.isnull().sum().sort_values(ascending=False)\npercent = (train_test.isnull().sum()\/train_test.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(20)","5e01c701":"df_numeric=train_test.select_dtypes(include=np.number)\ndf_numeric","6ca9fde2":"total = df_numeric.isnull().sum().sort_values(ascending=False)\npercent = (df_numeric.isnull().sum()\/df_numeric.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(5)","38ce2949":"df_numeric=df_numeric.fillna(df_numeric.median())","af8ad201":"df_obj = train_test.select_dtypes(include=['object']).copy()\ndf_obj","311a05e6":"total = df_obj.isnull().sum().sort_values(ascending=False)\npercent = (df_obj.isnull().sum()\/df_obj.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(5)","f899ab03":"df_obj = df_obj.drop(columns=['PoolQC','MiscFeature','Alley','Fence','FireplaceQu'])\ndf_obj","f9feafd3":"for column in df_obj.columns:\n  df_obj[column] = df_obj[column].astype('category')\n  df_obj[column] = df_obj[column].cat.codes","3a797d6a":"df_obj","90c569d9":"df_new = pd.concat([df_numeric, df_obj], axis=1)\ndf_new","357291fe":"df2 = pd.concat([df_new, sales], axis=1)\ndf2","ca19e077":"train= df2[1:1460]\ntrain.shape","a6be11c0":"test= df2[1460:].drop(columns=['SalePrice'])\ntest.shape","812625e5":"X= train.drop('SalePrice', axis=1)\ny = train['SalePrice']","de74731a":"from sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import cross_val_score","1a37696e":"GBoost = GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05,\n                                   max_depth=4, max_features='sqrt',\n                                   min_samples_leaf=15, min_samples_split=10, \n                                   loss='huber', random_state =5)","ce25bc2c":"GBoost.fit(X, y)","8683aa7b":"score = cross_val_score(GBoost, X, y, cv=10, n_jobs=-1)\nprint(\"Score: \", score.max())","52cd7158":"print(\"train score: \", GBoost.score(X,y))","9f70d24b":"submission = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","e6268cdb":"y_pred = GBoost.predict(test)","7d5d83a9":"submission['SalePrice'] = y_pred\nsubmission.head(10)","e8fa52fa":"submission.to_csv('submission.csv', index=False)","3c39a6fb":"Upload and read file"}}