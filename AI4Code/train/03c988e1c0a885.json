{"cell_type":{"df29eabe":"code","c4748f05":"code","fc088e43":"code","3e4af427":"code","5fe92d02":"code","8d65fd1d":"code","543269da":"markdown","397dcd76":"markdown","e0186f19":"markdown","6dba2ebb":"markdown","76cedfdf":"markdown"},"source":{"df29eabe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4748f05":"import numpy as np\nfrom scipy.optimize import linprog","fc088e43":"A= np.array([[2,1,-1,0,0],[-3,2,3,4,1]])\nb= np.array([10,16])\nc= np.array([-1,-1,-2,-1,-1])\n","3e4af427":"solution= linprog(c=c,A_ub=A,b_ub=b, method= 'simplex',bounds=(0,None))","5fe92d02":"solution.fun\n","8d65fd1d":"solution.x","543269da":"\n# 1 . Model\n    Let's use maximization in our example model, write objective function and constraints as follows:\n\n\n### Constraints:\n\n$2*x_1+x_2-x_3<=10$\n\n$-3*x_1+2*x_2+3*x_3+4*x_4+x_5<=16$\n\n$x_1,x_2,x_3,x_4,x_5>=0$\n\n### Objective:\n\n$MaxZ= x_1+x_2+2*x_3+x_4+x_5$\n","397dcd76":"Function's objective value : 56,67 but we want to know what's the unique values of variables? ($x_1,x_2,x_3,x_4$ and $x_5$)","e0186f19":"# 2. Import Library","6dba2ebb":"Global optimal solution found.\n\nZ= 56,67\n\n$x_1$= 15,33\n\n$x_2$= 0\n\n$x_3$= 20,67\n\n$x_4$= 0\n\n$x_5$= 0","76cedfdf":"linprog's default optimization criterion is minimum. If we want to solve to maximization, \nwe have to reverse the sign of the formula Z. (check the c = np.array([1,1,1,1,1])"}}