{"cell_type":{"1ad2efae":"code","bc060094":"code","41363e42":"code","305cfab4":"code","77805c51":"code","6da025ea":"code","c0e27c77":"code","ba4c32f0":"code","8498bbee":"code","0084698c":"code","892e3fca":"code","72ea2cea":"code","fb7a4b19":"code","3cb26628":"code","d21a5467":"code","b284d19e":"code","41d68f73":"markdown","1dbcb5e9":"markdown","148dda70":"markdown","f335b151":"markdown"},"source":{"1ad2efae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n #   for filename in filenames:\n        #print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc060094":"import glob\n# importing fast ai modules\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate,accuracy","41363e42":"#reading the styles.csv file\ndf = pd.read_csv('\/kaggle\/input\/fashion-product-images-small\/styles.csv', header = 'infer',error_bad_lines = False)\ndf = df[['id','masterCategory']] # filtering to 2 columns of our interest\n","305cfab4":"# additional step to remove the files which is there in df but not there in the images folder\nfiles=glob.glob(\"\/kaggle\/input\/fashion-product-images-small\/images\/*\")\nfiles[2]","77805c51":"img = []\nfor file in files:\n    file = file.replace('\/kaggle\/input\/fashion-product-images-small\/images\/','').replace('.jpg','')\n    img.append(file)\n\ndiff = set(df['id'].astype(str)) - set(img)","6da025ea":"diff","c0e27c77":"diff = list(map(int,list(diff)))\ndf = df[~df.id.isin(diff)]","ba4c32f0":"df.shape","8498bbee":"df.to_csv('\/kaggle\/working\/styles_cleaned.csv')","0084698c":"tfms = get_transforms(do_flip=False)","892e3fca":"bs = 64 #batch size","72ea2cea":"os.chdir('\/kaggle\/input\/fashion-product-images-small\/')","fb7a4b19":"data = (ImageList.from_csv('', '\/kaggle\/working\/styles_cleaned.csv', folder='images', suffix='.jpg', cols = 'id')\n        #Where to find the data? -> in planet 'train' folder\n        .split_by_rand_pct()\n        #How to split in train\/valid? -> randomly with the default 20% in valid\n        .label_from_df(cols = 'masterCategory')\n        #How to label? -> use the second clumn of the csv file and split the tags by ' '\n        .transform(tfms, size=128)\n        #Data augmentation? -> use tfms with a size of 128\n        .databunch(bs = bs))                        \n        #Finally -> use the defaults for conversion to databunch","3cb26628":"data.show_batch(rows=5, figsize=(4,4))","d21a5467":"data.classes","b284d19e":"learn = cnn_learner(data, models.resnet34, metrics=[error_rate,accuracy])\nlearn.fit_one_cycle(4)# results below\n\n#epoch\ttrain_loss\tvalid_loss\terror_rate\ttime\n0\t0.211633\t0.118356\t0.030620\t01:53\n1\t0.128470\t0.072357\t0.016999\t00:40\n2\t0.080400\t0.055352\t0.012608\t00:40\n3\t0.067283\t0.051523\t0.012721\t00:40","41d68f73":"# Creating Data Bunch File","1dbcb5e9":"# Creating the data to run resnet 34","148dda70":"# Fashion Master Category Classification using Fast AI(99% accuracy)","f335b151":"# Downloading the data outside kaggle kernel\n\n\n1. !pip install kaggle\n2. !mkdir ~\/.kaggle\n3. ! cp kaggle.json ~\/.kaggle\n4. ! chmod 600 ~\/.kaggle\/kaggle.json\n5. !kaggle datasets download paramaggarwal\/fashion-product-images-small --unzip\n\n"}}