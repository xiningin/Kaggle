{"cell_type":{"372b3fa7":"code","98003bf8":"code","94ed4607":"code","9ffc7064":"code","5831b674":"code","ce5d8126":"code","b6bb8a59":"code","84614a88":"code","86adbf03":"code","bec15688":"code","ce082237":"code","a7cbf530":"code","ec8d33e8":"code","0d58b774":"code","f656662d":"markdown","bb8f7999":"markdown","62aa7a14":"markdown","879f8e8d":"markdown","7d7b1a10":"markdown","829cd76c":"markdown","77196b46":"markdown","d60963f1":"markdown","ac0ea13f":"markdown","fdae113c":"markdown","2a8e8b41":"markdown","3a0789c9":"markdown","61b5890c":"markdown","44798edc":"markdown","a8b29439":"markdown","57618f86":"markdown","aef0b24a":"markdown","8a0def03":"markdown","5cca5776":"markdown","85d9c9d3":"markdown","f22d0d82":"markdown","b1b826e3":"markdown","ad46be07":"markdown","d45f9468":"markdown","23697377":"markdown","0e6f8a4a":"markdown","474432e7":"markdown"},"source":{"372b3fa7":"# Primero hay que importar pandas\nimport pandas as pd","98003bf8":"# Se importa una base de datos si se cuenta con ella\n# data = pd.read_csv('train_data.csv')\n\n# Si no se cuenta con ella, se simula tener una\ndata = pd.DataFrame([['el seguro cubre accidentes','S\u00ed cubre accidentes.'],\n                    ['el seguro cubre robo','S\u00ed cubre robo total. El de autopartes, no.'],\n                    ['el seguro cubre choques','S\u00ed cubre accidentes.'],\n                    ['cubre si le cae un arbol','S\u00ed cubre esas locuras.'],\n                    ['cubre inundaci\u00f3n?','S\u00ed cubre inundaci\u00f3n.']])\ndata.columns = ['question','answer']\n\n# NOTA: Esta base contiene una mala redacci\u00f3n y faltas de ortograf\u00eda en las preguntas.\n# Esto es intencional, ya que queremos replicar el lenguaje natural que usan los usuarios.\n# Sin embargo debemos cuidar que las respuestas est\u00e9n bien redactadas, pues es como responder\u00e1 el bot.\n\ndata","94ed4607":"from sklearn.feature_extraction.text import TfidfVectorizer # Para convertir el texto a vectores\nfrom scipy import spatial # Para medir la distancia entre vectores","9ffc7064":"vectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(data.question) \n# La l\u00ednea de c\u00f3digo anterior convierte la columna 'question' en vectores,\n# es decir, cada pregunta la convierte en una serie de n\u00fameros.","5831b674":"pd.DataFrame(vectorizer.get_feature_names())","ce5d8126":"pd.DataFrame(X.toarray()[0])","b6bb8a59":"question = ['este seguro loco me cubre los todos los choques que tenga con mi coche?']\nquestion","84614a88":"vectorized_question = vectorizer.transform(question).toarray()\npd.DataFrame(vectorized_question)","86adbf03":"pd.DataFrame(vectorizer.get_feature_names())","bec15688":"tree = spatial.KDTree(X.toarray())\npd.DataFrame(tree.query(vectorized_question))","ce082237":"data.iloc[tree.query(vectorized_question)[1][0]].question","a7cbf530":"data.iloc[tree.query(vectorized_question)[1][0]].answer","ec8d33e8":"#import pandas as pd\n#from sklearn.feature_extraction.text import TfidfVectorizer\n#from scipy import spatial\n\n#data = pd.read_csv('train_data.csv')\nvectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(data.question)\ntree = spatial.KDTree(X.toarray())\n\ndef answer(question):\n    vectorized_question = vectorizer.transform(question).toarray()\n    tree.query(vectorized_question)\n    print('La pregunta fue: ',question)\n    print('El bot entendi\u00f3: ',data.iloc[tree.query(vectorized_question)[1][0]].question)\n    print('El bot responde: ',data.iloc[tree.query(vectorized_question)[1][0]].answer)","0d58b774":"# Se introduce una oraci\u00f3n y encuentra la definici\u00f3n m\u00e1s cercana\nsentence = ['este seguro loco me cubre los todos los choques que tenga con mi coche?']\nanswer(sentence)","f656662d":"El modelo entrenado se guard\u00f3 en X, en donde podemos encontrar todas las 5 preguntas con las que lo entrenamos, convertidas a vectores. \u00bfEsto qu\u00e9 significa? Veamos con un ejemplo. Veamos la primera pregunta:","bb8f7999":"Ahora veamos m\u00e1s detalle para ver lo que sucedi\u00f3. El objeto **vetorizer** ya fue entrenado con la base de datos (tomando en cuenta **solo las preguntas**. Lo primero que hace es identificar todas las palabras que se encuentren en la base. Observamos que son **12 palabras**.","62aa7a14":"A continuaci\u00f3n, le haremos la primera pregunta a nuestro bot:","879f8e8d":"De ah\u00ed podemos ver que nuestra pregunta conten\u00eda las palabras 'choques', 'cubre' y 'si'. Esto es lo \u00fanico que entendi\u00f3 el robot de la pregunta. \u00a1Todo lo dem\u00e1s lo ignora!","7d7b1a10":"# Probelmas importantes","829cd76c":"Para empezar, se debe contar con una base de datos para entrenar al bot. voy a crear un dataframe que simula dicha base, con una serie de preguntas y respuestas con las que lo entrenaremos. El ejemplo que usaremos es muy b\u00e1sico, para responder al usuario sobre qu\u00e9 cubre y qu\u00e9 no cubre un seguro de auto.","77196b46":"# Hacer una pregunta al bot","d60963f1":"# El bot respondiendo la pregunta","ac0ea13f":"# Todo el c\u00f3digo junto","fdae113c":"Y listo, \u00a1ya con esto el bot est\u00e1 listo para responder la pregunta y lanzar una respuesta!","2a8e8b41":"Lo que har\u00e1 el bot para responder esa pregunta, es simplemente buscar a cu\u00e1l de las preguntas se parece m\u00e1s. Para ello, primero deber\u00e1 vectorizar la pregunta:","3a0789c9":"En el bloque de arriba puedes cambiar las preguntas que quieras y jugar con el bot.","61b5890c":"Si se busca ir por este camino, lo primero que hay que hacer es un diccionario que nos pueda devolver sin\u00f3nimos de palabras escritas en lenguaje coloquial. De esta forma, escribir si alguien escribe 'coche' el diccionario podr\u00e1 devolver diversos sin\u00f3nimos, como 'auto', 'autom\u00f3vil', 'veh\u00edculo', 'carro', etc. y con esto buscar en el diccionario de preguntas alguna de las palabras que son sin\u00f3nimo. Todo esto queda por mucho fuera del alcance de esta entrada, pero en [esta entrada](http:\/\/https:\/\/www.kaggle.com\/omartronco\/web-scraping-mapfre-diccionario-de-seguros) puedes ver c\u00f3mo elaboramos un diccionario como este, con base en informaci\u00f3n disponbible en la red mediante \"web scrapping\".","44798edc":"Lo que vemos arriba, es la pregunta 'el seguro cubre accidentes' en vectores. Primero observemos que el vector es de tama\u00f1o 12. Esto es porque recordemos que el modelo encontr\u00f3 12 palabras distintas en la base de entrenamiento. Lo que muestra el vector es, de las 12 palabras del diccionario, cu\u00e1ntas contiene la pregunta.\n\n* Observamos que el primer n\u00famero es 0.686142. Recordemos que la primera palabra de nuestro diccionario es 'accidentes'. * La segunda entrada es cero. Recordemos que la segunda palabra del diccionario es 'cae', y como podemos observar, la primera pregunta no contiene la palabra 'cae', por ello el cero.\n* La tercera entrada es cero tambi\u00e9n. Recordemos que la tercera palabra del diccionario es 'choques', y como podemos observar, la primera pregunta no contiene la palabra 'choques', por ello el cero.\n* La cuarta entrada es 0.32695. La cuarta palabra del diccionario es cubre, la cual si se encuentra en la primera pregunta.\n\n**En esto consiste el concepto de vectorizar una oraci\u00f3n.**\n\nEn esta entrada b\u00e1sica no vamos a entrar a detalles de lo que significa la magnitud del n\u00famero.","a8b29439":"Como puedes ver, parece muy sencillo montar un chatbot. Sin embargo esto tiene muchos problemas importantes. Para empezar, recuerda que lo que hace este modelo es identificar en la pregunta, las palabras del diccionario que coincidan. El gran problema es que no distingue entre may\u00fasculas y min\u00fasculas, entre letras con acento o sin acento, y mucho menos sin\u00f3nimos. De esta forma, si le preguntamos 'cuenta con cobertura de inundacion' no va a entender ni una sola de las palabras, ya que ninguna existe en su diccionario de 12 palabras. No identifica que 'cubre' y 'tiene cobertura' significa lo mismo, y que 'inundaci\u00f3n' e 'inundacion' son la misma palabra pero sin acento. Entonces lo que responda corresponder\u00e1 casi aleatoriamente a cualquier respuesta (en realidad responder\u00e1 la pregunta correspondiente al vector m\u00e1s peque\u00f1o en dimensi\u00f3n 12).","57618f86":"A continuaci\u00f3n importamos las dos librer\u00edas adicionales que usaremos para vectorizar y para medir la distancia entre vectores.","aef0b24a":"Lo que esto devuelve, son dos cosas:\n1. La ditancia que existe entre la pregunta realizada y la pregunta de la base de datos m\u00e1s parecida.\n2. La respuesta de la base de datos m\u00e1s parecida.\n\nEn este caso esto nos dice que 0.899425 es la distancia que existe entre nuestra pregunta, y la pregunta 4 (recuerda que est\u00e1 indexado desde cero).\n\nA por \u00faltimo, antes de responder, veamos cu\u00e1l es la pregunta 4:","8a0def03":"Veamos todo el c\u00f3dgo en un solo conjunto:","5cca5776":"**NOTA: Este notebook contiene informaci\u00f3n muy b\u00e1sica para quien no sabe nada de ML. Si alguien tiene conocimientos de ML no se recoimenda, porque omite varios conceptos clave e importantes en el aprendizaje autom\u00e1tico.**","85d9c9d3":"Como ya se explic\u00f3, esta vectorizaci\u00f3n significa que la pregunta que le hicimos al bot contiene 3 de las palabras de nuestro diccionario. \u00c9stas son la tercera, la cuarta y la novena. Recordemos nuestro diccionario:","f22d0d82":"# Introducci\u00f3n","b1b826e3":"# \u00bfPor d\u00f3nde comenzar?","ad46be07":"> el seguro cubre accidentes","d45f9468":"Para quien no sabe nada de ML, es importante mencionar que las computadoras y los modelos matem\u00e1ticos solo saben leer elementos muy b\u00e1sicos, como n\u00fameros. Es decir, no saben trabajar con texto. Por ello, se requiere un proceso de transformar el texto a n\u00fameros, lo que se conoce como vectorizar. Primero veremos un ejemplo y sobre \u00e9l explicar\u00e9 de qu\u00e9 se trata.","23697377":"Lo que haremos a continuaci\u00f3n, es identificar cu\u00e1l es la pregunta de la base de datos, que m\u00e1s se parezca a la pregunta que le hicimos al bot. Debido a que ya todo son vectores, es relativamente f\u00e1cil medir la distancia entre vectores.","0e6f8a4a":"* \u00bfC\u00f3mo resolver estos problemas? Bueno, pues aqu\u00ed es en realidad donde el asunto se vuelve complejo. La forma m\u00e1s f\u00e1cil pero menos pr\u00e1ctica, es entren\u00e1ndolo con un diccionario de preguntas mucho m\u00e1s extenso, que contenga preguntas tanto sin acento como con acento, buena y mala ortograf\u00eda, uso de sin\u00f3nimos, etc. Sin embargo esto representa una tarea laboriosa y no garantiza el \u00e9xito. Por otro lado, la soluci\u00f3n m\u00e1s elegante, pero compleja t\u00e9cnicamente, es mediante el uso de procesamiento de lenguaje natural (NLP por sus siglas en ingl\u00e9s). Este es el campo de machine learning que aborda el lidiar con la forma coloquial de comunicarse de la gente. Pero es un campo complejo.","474432e7":"Se habla mucho de los chatbots pero no se encuentra tan f\u00e1cil c\u00f3mo programar uno con aprendizaje autom\u00e1tico (ML o machine learning). En este notebook mostrar\u00e9 c\u00f3mo elaborar uno muy b\u00e1sico con muy pocas l\u00edneas de c\u00f3digo.\n\nPara empezar, me gustar\u00eda aclarar que los chatbots que ofrecen opciones al usuario, no tienen nada de ML. Consisten solo en la programaci\u00f3n de una serie de \u00e1rboles de decisi\u00f3n. Si bien pueden ser s\u00famamente elaborados y complejos en su l\u00f3gica, y brindar una gran experiencia al usuario, no contienen nada de ML. Lo que mostrar\u00e9 a continuaci\u00f3n si se basa en herramientas de ML."}}