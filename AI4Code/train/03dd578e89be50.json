{"cell_type":{"9022debe":"code","0661b2ba":"code","04f6202a":"code","40778b45":"code","8672400a":"code","a1160895":"code","64cc4c93":"code","930776e2":"code","3fb31be3":"code","daeee286":"code","6d554526":"code","c007ba82":"code","327769a7":"code","3782e370":"code","b39afd0f":"code","20faf59d":"code","1d96ecdf":"code","6482e075":"code","00196ada":"code","dc25963c":"code","16d88eb2":"code","30fb11c4":"code","c51df8fe":"code","6226ae3f":"code","7e3f9cbb":"code","3ee58f00":"code","87144f98":"code","800feb13":"code","0c84c6ab":"code","a3f81f7e":"code","e0b5246f":"code","18005fca":"code","bf26f654":"code","22650264":"code","f828579a":"code","469c8b96":"code","6b4a9033":"code","a32ee86b":"code","dcdabcb5":"code","4f6d5dd8":"code","bab7f788":"code","61a4677d":"code","8d178d09":"code","d59cdf13":"code","a0b5e079":"code","192b3060":"code","b7ff1508":"code","66ecbf24":"code","9082fd9c":"code","4b24f16b":"code","e56729cf":"code","d3317f35":"code","43e3ea53":"code","9efac410":"code","5885c0bf":"code","a883e2be":"code","c198c495":"code","da19b44d":"code","e8ad0bf0":"code","d1ce66af":"code","ad25c2bb":"code","c0314dbd":"code","d8f5072a":"code","3314e47e":"code","a4362c01":"code","5ec43e9a":"code","b55ee091":"code","ed2d29e3":"markdown","d8b9b4c9":"markdown","9cb65cfb":"markdown","8f0cdb17":"markdown","b8189e48":"markdown","e5e14629":"markdown","371d3804":"markdown","f204a451":"markdown","d7a1134b":"markdown","939e3b15":"markdown","e63f474a":"markdown","af09dee6":"markdown","9167f420":"markdown","86198bb9":"markdown","27de0263":"markdown","3c4283bd":"markdown","68d71de4":"markdown","4070e144":"markdown","5edbd216":"markdown","44f1bd71":"markdown","b912cc7d":"markdown","7804a71b":"markdown","ce6ac886":"markdown","34696475":"markdown","4661be0c":"markdown","e2a48d7c":"markdown","9104edd2":"markdown","9314516e":"markdown","3ab9991f":"markdown","4d6c74c8":"markdown","f7562ef9":"markdown","94bb4499":"markdown","04f9d91f":"markdown","d572c197":"markdown"},"source":{"9022debe":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import Lasso\nsns.set()","0661b2ba":"# Load  data from csv file\nhouses_df = pd.read_csv('..\/input\/housedata\/data.csv') \nhouses_df.head()","04f6202a":"from pandas_profiling import ProfileReport\nhouses_price_profile=ProfileReport(houses_df,title='House Prices Profile')\nhouses_price_profile","40778b45":"houses_df.shape","8672400a":"houses_df.info()","a1160895":"houses_df.isnull().sum()\n","64cc4c93":"houses_df.describe().T","930776e2":"houses_df.corr(method ='pearson') ","3fb31be3":"# Change to datetime type\nhouses_df['date'] = pd.to_datetime(houses_df['date'])\nhouses_df['date'].dtype","daeee286":"houses_df['bedrooms'] = houses_df['bedrooms'].astype(int)\nhouses_df['bathrooms'] = houses_df['bathrooms'].astype(int)\nhouses_df['floors'] = houses_df['floors'].astype(int)","6d554526":"houses_df.head()","c007ba82":"houses_df.dtypes","327769a7":"for i in houses_df.columns:\n    if ( houses_df[i].dtype ==  np.int64 ) | ( houses_df[i].dtype ==  np.int32):\n        sns.lmplot(x = i, y ='price', data = houses_df)","3782e370":"houses_df['date'].dt.year.unique(), houses_df['date'].dt.month.unique()","b39afd0f":"houses_df['month']=  houses_df['date'].dt.month\nhouses_df.month.value_counts()","20faf59d":"houses_df.drop(['date'], axis= 1, inplace= True)","1d96ecdf":"houses_df.head(5)","6482e075":"houses_df['country'].unique()","00196ada":"houses_df['street'].value_counts()","dc25963c":"houses_df['city'].value_counts()","16d88eb2":"houses_df['statezip'].value_counts()","30fb11c4":"houses_df.drop(['country','street','statezip'], axis= 1, inplace=True)\nhouses_df.head(5)","c51df8fe":"houses_df['bedrooms'].value_counts()","6226ae3f":"houses_df=houses_df[(houses_df['bedrooms']>0) & (houses_df['bedrooms']<8)]\nhouses_df['bedrooms'].value_counts()","7e3f9cbb":"houses_df.shape","3ee58f00":"houses_df['bathrooms'].value_counts()","87144f98":"sns.heatmap(houses_df[[\"price\", \"sqft_living\", \"sqft_lot\", \"sqft_above\", \"sqft_basement\"]].corr(), annot=True);","800feb13":"fig, axes = plt.subplots(2, 2, figsize=(18, 10))\nsns.histplot(ax=axes[0, 0], x= 'sqft_living', data= houses_df);\nsns.histplot(ax=axes[0, 1], x= 'sqft_lot', data= houses_df);\nsns.histplot(ax=axes[1, 0], x= 'sqft_above', data= houses_df);\nsns.histplot(ax=axes[1, 1], x= 'sqft_basement', data= houses_df);","0c84c6ab":"houses_df.head(5)","a3f81f7e":"houses_df['floors'].value_counts()","e0b5246f":"houses_df['waterfront'].value_counts()","18005fca":"houses_df['view'].value_counts()","bf26f654":"houses_df['condition'].value_counts()","22650264":"sns.heatmap(houses_df[[\"price\", \"floors\", \"waterfront\", \"view\", \"condition\"]].corr(), annot=True);","f828579a":"houses_df['yr_built'].hist()","469c8b96":"houses_df['yr_renovated'].hist()","6b4a9033":"sns.heatmap(houses_df[[\"price\", \"yr_built\", \"yr_renovated\"]].corr(), annot=True);","a32ee86b":"houses_df.head()","dcdabcb5":"houses_df['price'].describe().T","4f6d5dd8":"houses_df.price.value_counts()","bab7f788":"houses_df.shape","61a4677d":"houses_df.price.plot()","8d178d09":"sns.boxplot(x='price', data= houses_df);","d59cdf13":"def remove_outliers(df, x):\n    # Set Limits\n    q25, q75 = np.percentile(df[x], 25), np.percentile(df[x], 75)\n    iqr = q75 - q25\n    cut_off = iqr * 1.5\n    lower, upper = 1 ,  (q75 + cut_off)\n    df = df[(df[x] < upper) & (df[x] > lower)]\n    print('Outliers of \"{}\" are removed\\n'.format(x))\n    return df","a0b5e079":"houses_df= remove_outliers(houses_df, 'price')","192b3060":"houses_df.shape","b7ff1508":"houses_df.price.plot()","66ecbf24":"sns.boxplot(x='price', data= houses_df);","9082fd9c":"houses_df['price'].hist()","4b24f16b":"for i in houses_df.columns:\n    if ( houses_df[i].dtype ==  np.int64 ) | ( houses_df[i].dtype ==  np.int32):\n        sns.lmplot(x = i, y ='price', data = houses_df)","e56729cf":"sns.heatmap(houses_df[[\"price\", \"sqft_living\", \"sqft_lot\", \"sqft_above\", \"sqft_basement\"]].corr(), annot=True);\n\n\n\nfig, axes = plt.subplots(2, 2, figsize=(18, 10))\nsns.histplot(ax=axes[0, 0], x= 'sqft_living', data= houses_df);\nsns.histplot(ax=axes[0, 1], x= 'sqft_lot', data= houses_df);\nsns.histplot(ax=axes[1, 0], x= 'sqft_above', data= houses_df);\nsns.histplot(ax=axes[1, 1], x= 'sqft_basement', data= houses_df);","d3317f35":"sns.heatmap(houses_df[[\"price\", \"floors\", \"waterfront\", \"view\", \"condition\"]].corr(), annot=True);\n","43e3ea53":"sns.heatmap(houses_df[[\"price\", \"yr_built\", \"yr_renovated\"]].corr(), annot=True);","9efac410":"houses_df.head(5)","5885c0bf":"houses_df.corr(method ='pearson') ","a883e2be":"houses_df.info()","c198c495":"plt.figure(figsize=(20,15))\nsns.heatmap(houses_df.corr(), annot=True)\nplt.show()","da19b44d":"from pandas_profiling import ProfileReport\nhouses_price_profile=ProfileReport(houses_df,title='Final House Prices Profile')\nhouses_price_profile","e8ad0bf0":"df=houses_df\ndf= pd.get_dummies(df, drop_first=True)\ndf.head().T","d1ce66af":"# Label\ny= df.price.values\n#Features\nX = df.drop('price', axis =1).values","ad25c2bb":"#Spliting Data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)","c0314dbd":"#Scaling Data\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","d8f5072a":"#Mean and standard deviation of X_train\nX_train.mean(), X_train.std()","3314e47e":"# Run Linear Regression Model and print accuracy\nlin_reg = LinearRegression()\nlin_reg.fit(X_train, y_train)\ny_pred = lin_reg.predict(X_test)\nprint(\"Training acc >> \", lin_reg.score(X_train, y_train))\nprint(\"Testing acc >>  \", lin_reg.score(X_test, y_test))","a4362c01":"#Cross Val Score\nlin_reg = LinearRegression()\ncvscores_10 = cross_val_score(lin_reg, X, y, cv= 10)\nprint(np.mean(cvscores_10))","5ec43e9a":"rf_reg = RandomForestRegressor(random_state=0)\nrf_reg.fit(X_train, y_train)\nprint(\"Training acc >> \", rf_reg.score(X_train, y_train))\nprint(\"Testing acc >> \", rf_reg.score(X_test, y_test))","b55ee091":"lasso_reg= Lasso(max_iter=10000)\nlasso_reg.fit(X_train, y_train)\nprint(\"Training acc >> \", lasso_reg.score(X_train, y_train))\nprint(\"Testing acc >> \", lasso_reg.score(X_test, y_test))","ed2d29e3":"# Splitting Data to Train and Test","d8b9b4c9":"#### Drop date because data set with only 2014 as year and use month instead.","9cb65cfb":"#### We have many outliers (we take the remove rows solution)","8f0cdb17":"# Prepare Data to go to Model","b8189e48":"### 2-Country","e5e14629":"## Change Types","371d3804":"### 1-Date","f204a451":"## Comparison\n#### when compare the graphs and value before and after deal with price we see that is enhanced.","d7a1134b":"# <br> Discover our Data <br>","939e3b15":"### 5- Statezip","e63f474a":"## After handle price let show the new correlation and graphs","af09dee6":"# House price prediction (Linear Regression)","9167f420":"#### Let's use Cross val Score","86198bb9":"#### 11- yr_renovated","27de0263":"### 3- Street","3c4283bd":"# Linear Regression Model","68d71de4":"## Import Important Libs","4070e144":"#### From above visualizations in [Discover our Data] we can see that year renovated, year built, condition features  don't have significant impact on price. sqft_living, bathrooms, sqft_above, sqft_basement, view have strong influence.\n\n#### and from this  Hisplot we find that sqft_living and above have good relation and dependent with price, but we will depend in all area features.","5edbd216":"### 4-City","44f1bd71":"#### Remove rows of 0,8,9 because they have low count and and useless","b912cc7d":"## we must convert city Data to Categorical Data to get into model.\n","7804a71b":"### 10-yr_built","ce6ac886":"### 9-let's play with other house features (floors, waterfront, view, condition)","34696475":"# <br> EDA [Exploratory Data Analysis] <br>","4661be0c":"#### Overfitting","e2a48d7c":"#### Drop country because data set with only USA this is useless, street also useless and statezip and use city as representable","9104edd2":"## Lasso Regression","9314516e":"#### From above visualizations we can see that year renovated, year built, condition features  don't have significant impact on price. sqft_living, bathrooms, sqft_above, sqft_basement, view have strong influence.","3ab9991f":"#### cannot contains price with value zero","4d6c74c8":"#### 12- Finally Price ","f7562ef9":"### 6-Bedrooms","94bb4499":"### 8-let's play with house area (sqft_living, sqft_lot, sqft_above, sqft_basement)","04f9d91f":"### 7- Bathrooms","d572c197":"## Random Forest Regressor"}}