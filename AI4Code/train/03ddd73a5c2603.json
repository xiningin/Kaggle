{"cell_type":{"09fead05":"code","5e621b57":"code","de8df8e4":"code","cf4d4353":"code","decc0699":"code","a4470804":"code","cf38b587":"code","dc6a64d4":"code","5d925736":"code","366c316b":"code","e194f077":"code","8a4a7cd4":"code","ce268bb4":"code","671ef3c5":"code","7e2dce49":"code","92c39fd3":"code","906324d5":"markdown","8bf2a133":"markdown","e5f42b4f":"markdown","2a6b327d":"markdown","a0643c04":"markdown","46450ad6":"markdown","feaa5d1e":"markdown","92d71e77":"markdown","efd91c9a":"markdown","98e1780d":"markdown","fec61bca":"markdown"},"source":{"09fead05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport itertools\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e621b57":"from sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\n\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\nimport torchvision\nimport re","de8df8e4":"train = pd.read_csv(\"..\/input\/chaii-hindi-and-tamil-question-answering\/train.csv\")\ntrain.head()","cf4d4353":"# Extract insights from the excerpt variable\nimport spacy","decc0699":"# Initialise spacy\nnlp = spacy.load('en_core_web_sm')","a4470804":"# Perform initial test on one text\nsample = train.head(5)\nsample\nsample1 = train.loc[1, 'answer_text']","cf38b587":"# Create the spacy doc item for review\ndoc = nlp(sample1)\ndoc","dc6a64d4":"# Reviewing the token, lemma and stopword for each token (item)\nprint(f\"Token \\t\\tLemma \\t\\tStopword\".format('Token', 'Lemma', 'Stopword'))\nprint(\"-\"*40)\n# Review the first 20 values to test the output\nfor token in doc[:20]:\n    print(f\"{str(token)}\\t\\t{token.lemma_}\\t\\t{token.is_stop}\\t\\t{len(token)}\")","5d925736":"doc_1 = \"\u0bb0\u0bbe\u0baa\u0ba9\u0bcd \u0ba4\u0bc0\u0bb5\u0bbf\u0bb2\u0bcd \u0b9a\u0bbf\u0bb1\u0bbf\u0baf \u0b9a\u0bbf\u0bb1\u0bc8 \u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b85\u0bb1\u0bc8\u0baf\u0bbf\u0bb2\u0bcd \u0b95\u0bb4\u0bbf\u0ba4\u0bcd\u0ba4\u0bbe\u0bb0\u0bcd\"\ndoc_2 = \"\u0ba8\u0bc6\u0bb2\u0bcd\u0b9a\u0ba9\u0bcd \u0b87\u0bb5\u0bb0\u0bcd \u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b95\u0bb2\u0bcd\u0bb5\u0bbf \u0b95\u0bb1\u0bcd\u0bb1 \u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0baa\u0bb3\u0bcd\u0bb3\u0bbf\u0baf\u0bbf\u0ba9\u0bcd\"","366c316b":"words_doc1 = {'\u0bb0\u0bbe\u0baa\u0ba9\u0bcd', '\u0ba4\u0bc0\u0bb5\u0bbf\u0bb2\u0bcd', '\u0b9a\u0bbf\u0bb1\u0bbf\u0baf', '\u0b9a\u0bbf\u0bb1\u0bc8', '\u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1', '\u0b85\u0bb1\u0bc8\u0baf\u0bbf\u0bb2\u0bcd', '\u0b95\u0bb4\u0bbf\u0ba4\u0bcd\u0ba4\u0bbe\u0bb0\u0bcd'}\nwords_doc2 = {'\u0ba8\u0bc6\u0bb2\u0bcd\u0b9a\u0ba9\u0bcd', '\u0b87\u0bb5\u0bb0\u0bcd', '\u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1', '\u0b95\u0bb2\u0bcd\u0bb5', '\u0b95\u0bb1\u0bcd\u0bb1', '\u0bae\u0bc1\u0ba4\u0bb2\u0bcd', '\u0baa\u0bb3\u0bcd\u0bb3\u0bbf\u0baf\u0bbf\u0ba9\u0bcd'}","e194f077":"#Code by https:\/\/studymachinelearning.com\/jaccard-similarity-text-similarity-metric-in-nlp\/\n\ndef Jaccard_Similarity(doc1, doc2): \n    \n    # List the unique words in a document\n    words_doc1 = set(doc1.lower().split()) \n    words_doc2 = set(doc2.lower().split())\n    \n    # Find the intersection of words list of doc1 & doc2\n    intersection = words_doc1.intersection(words_doc2)\n\n    # Find the union of words list of doc1 & doc2\n    union = words_doc1.union(words_doc2)\n        \n    # Calculate Jaccard similarity score \n    # using length of intersection set divided by length of union set\n    return float(len(intersection)) \/ len(union)","8a4a7cd4":"doc_1 = \"\u0bb0\u0bbe\u0baa\u0ba9\u0bcd \u0ba4\u0bc0\u0bb5\u0bbf\u0bb2\u0bcd \u0b9a\u0bbf\u0bb1\u0bbf\u0baf \u0b9a\u0bbf\u0bb1\u0bc8 \u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b85\u0bb1\u0bc8\u0baf\u0bbf\u0bb2\u0bcd \u0b95\u0bb4\u0bbf\u0ba4\u0bcd\u0ba4\u0bbe\u0bb0\u0bcd\"\ndoc_2 = \"\u0ba8\u0bc6\u0bb2\u0bcd\u0b9a\u0ba9\u0bcd \u0b87\u0bb5\u0bb0\u0bcd \u0b85\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b95\u0bb2\u0bcd\u0bb5\u0bbf \u0b95\u0bb1\u0bcd\u0bb1 \u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0baa\u0bb3\u0bcd\u0bb3\u0bbf\u0baf\u0bbf\u0ba9\u0bcd\"\n\nJaccard_Similarity(doc_1,doc_2)","ce268bb4":"doc_3 = \"\u0932\u0940\u091c\u093e \u0930\u0947 \u0915\u0940 \u092a\u0939\u0932\u0940 \u092b\u093f\u0932\u094d\u092e \u0915\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0925\u093e?\"\ndoc_4 = \"\u092e\u0941\u0917\u0932 \u0938\u092e\u094d\u0930\u093e\u091f \u0905\u0915\u092c\u0930 \u0915\u0940 \u092e\u0943\u0924\u094d\u092f\u0941 \u0915\u093f\u0938 \u0935\u0930\u094d\u0937 \u092e\u0947\u0902 \u0939\u0941\u0908 \u0925\u0940?\"","671ef3c5":"words_doc3 = {'\u0932\u0940\u091c\u093e', '\u0930\u0947', '\u0915\u0940', '\u092a\u0939\u0932', '\u092b\u093f\u0932\u094d\u092e', '\u0915\u093e', '\u0928\u093e\u092e', '\u0915\u094d\u092f\u093e', '\u0925\u093e?'}\nwords_doc4 = {'\u092e\u0941\u0917\u0932', '\u0938\u092e\u094d\u0930\u093e\u091f','\u0905\u0915\u092c\u0930', '\u0915\u0940', '\u092e\u0943\u0924\u094d\u092f\u0941','\u0915\u093f\u0938', '\u0935\u0930\u094d\u0937', ' \u092e\u0947\u0902', '\u0939\u0941\u0908','\u0925\u0940?'}","7e2dce49":"#Code by https:\/\/studymachinelearning.com\/jaccard-similarity-text-similarity-metric-in-nlp\/\n\ndef Jaccard_Similarity(doc3, doc4): \n    \n    # List the unique words in a document\n    words_doc3 = set(doc3.lower().split()) \n    words_doc4 = set(doc4.lower().split())\n    \n    # Find the intersection of words list of doc1 & doc2\n    intersection = words_doc3.intersection(words_doc4)\n\n    # Find the union of words list of doc1 & doc2\n    union = words_doc3.union(words_doc4)\n        \n    # Calculate Jaccard similarity score \n    # using length of intersection set divided by length of union set\n    return float(len(intersection)) \/ len(union)","92c39fd3":"doc_3 = \"\u0932\u0940\u091c\u093e \u0930\u0947 \u0915\u0940 \u092a\u0939\u0932\u0940 \u092b\u093f\u0932\u094d\u092e \u0915\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0925\u093e?\"\ndoc_4 = \"\u092e\u0941\u0917\u0932 \u0938\u092e\u094d\u0930\u093e\u091f \u0905\u0915\u092c\u0930 \u0915\u0940 \u092e\u0943\u0924\u094d\u092f\u0941 \u0915\u093f\u0938 \u0935\u0930\u094d\u0937 \u092e\u0947\u0902 \u0939\u0941\u0908 \u0925\u0940?\"\n\nJaccard_Similarity(doc_3,doc_4)","906324d5":"I inform that I didn' t find similar words, then I got zero. Hence, I introduce the same \u0b85\u0ba4\u0bb1\u0bcd\u0b95 in each doc. In doc_1 is in 5th position and 3rd position in doc_2. So that, I could see how a single word can influence the Jaccard Similarity score.  ","8bf2a133":"It was 0, answer_text returned below 1st line (206). Then I changed to 1 (returned 2nd line) ","e5f42b4f":"![](https:\/\/i.ytimg.com\/vi\/Ah_4xqvS1WU\/maxresdefault.jpg)youtube.com","2a6b327d":"The Jaccard similarity between doc_3 and doc_4 is 0.05555. And I didn't introduce anything, since Hindi it's easier (than Tamil) to distinguished same words. I've just copied questions 1113 (doc_3) and 1112 (doc_4).","a0643c04":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">Hindi<\/span><\/h1><br>","46450ad6":"#Python code for Jaccard Similarity.\n\nNow, we will calculate the intersection and union of these two sets of words and measure the Jaccard Similarity between doc_1 and doc_2.","feaa5d1e":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">Tamil<\/span><\/h1><br>","92d71e77":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #001f3f;\"><b style=\"color:#03e8fc;\">Jaccard Similarity<\/b><\/h1><\/center>\n\n\n\"Jaccard Similarity is also known as the Jaccard index and Intersection over Union. Jaccard Similarity metric is used to determine the similarity between two text document means how the two text documents close to each other in terms of their context that is how many common words are exist over total words.\"\n\n\"In Natural Language Processing, we often need to estimate text similarity between text documents. There are many text similarity metrics such as Cosine Similarity, Jaccard Similarity and Euclidean Distance measurement. All these text Similarity metrics have different behaviour.\"\n\nhttps:\/\/studymachinelearning.com\/jaccard-similarity-text-similarity-metric-in-nlp\/","efd91c9a":"##Get the set of unique words for each document.","98e1780d":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">How Jaccard Similarity works - Jaccard Similarity in NLP<\/span><\/h1><br>\n\n\nThe Jaccard Similarity score is in a range of 0 to 1. If the two documents are identical, Jaccard Similarity is 1. The Jaccard similarity score is 0 if there are no common words between two documents.\n\nhttps:\/\/studymachinelearning.com\/jaccard-similarity-text-similarity-metric-in-nlp\/","fec61bca":"#The Jaccard similarity between doc_1 and doc_2 is 0.07692307. After I have introduced one single\/same word \u0b85\u0ba4\u0bb1\u0bcd\u0b95"}}