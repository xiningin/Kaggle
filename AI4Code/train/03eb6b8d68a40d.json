{"cell_type":{"d82874af":"code","c49bb609":"code","005305bb":"markdown","35af3864":"markdown","6bdf1802":"markdown","6f43aa6f":"markdown"},"source":{"d82874af":"#https:\/\/www.kaggle.com\/tribedoor\/support-files\n#Read Out 1: Compare genome sequences if same then list the sequence, if different expand\n#Read Out 2: Aggregate up the list states\n#            If diff and equiv base pair then > \"divergent\"\n#            If diff and non match base pair then ) \"divergent\"\n#            If equall then < \"convergent\"\n#            Line num= line in which seqence aggregation starts\n#            This may illimate some sort of distribution on sequencing and resonance\n\n\n\nimport time\nimport re\nimport traceback\nimport os\nimport random\nimport sys\nimport glob\nimport csv\nimport math\nimport matplotlib.pyplot as plt\n\n\n    \nif __name__==\"__main__\":\n\n\n    for dirname, _, filenames in os.walk('\/kaggle\/input'):\n        for filename in filenames:\n            print(os.path.join(dirname, filename))\n\n    print('\\n')\n    \n    LARGEMERS='\/kaggle\/input\/support-files\/DQ648857_.txt'\n    DQ648857=[]\n    with open(LARGEMERS) as lgmrs:\n        for line in lgmrs:\n            for ch in line:\n                if ch!='\\n':\n                    DQ648857.append(str(ch))\n\n\n\n    #>DQ412043 |Bat SARS coronavirus Rm1| complete genome\n    LARGEMERS='\/kaggle\/input\/support-files\/DQ412043_.txt'\n    DQ412043=[]\n    with open(LARGEMERS) as lgmrs:\n        for line in lgmrs:\n            for ch in line:\n                if ch!='\\n':\n                    DQ412043.append(str(ch))\n\n     \n\n   \n                    \n    \n    \n    \n    #Difference Build  1\n    diffarr=[]\n    for dq,dqval in enumerate(DQ648857):\n        try:\n            if dqval!=DQ412043[dq]:\n                diffarr.append([dqval,DQ412043[dq]])\n            else:\n                diffarr.append([dqval])\n        except IndexError:\n            arbit=1\n\n\n    \n    #difference analyais    \n    diffcnt=0\n    smecnt=0\n    \n    mutcnt=0\n    mutsw=0\n    cnstcnt=0\n    cnstsw=0\n    mcgrph=[]\n    \n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result1.txt'\n    #f=open(frespth,'w')\n\n    print('\\n')\n    print('DQ648857 vs DQ412043----------------------------------------------------------------------Start')\n    print('SEQUENCE COMPARE--------------------------------------------')\n    for dif,diffval in enumerate(diffarr):\n        \n        #kaggle output consideration\n        if dif <=100:\n            print(str(diffval))\n            \n        #f.write(str(diffval)+'\\n')\n        if len(diffval)!=1:\n            mutsw=1\n            mutcnt+=1\n            cnstsw=0\n            cnstcnt=0\n        else:\n            cnstsw=1\n            cnstcnt+=1\n            mutsw=0\n            mutcnt=0\n\n        if mutcnt==1 or cnstcnt==1:\n            mcgrph.append(f'{dif+1:08}'+':')\n\n        if mutsw==1:\n            mcchr='>'\n\n            try:\n                t=diffval.index('T')\n            except ValueError:\n                t=-1\n                \n            try:\n                a=diffval.index('A')\n            except ValueError:\n                a=-1\n                \n            try:\n                c=diffval.index('C')\n            except ValueError:\n                c=-1\n                \n            try:\n                g=diffval.index('G')\n            except ValueError:\n                g=-1\n\n            if (t!=-1 or a!=-1) and (c!=-1 or g!=-1):\n                mcchr=')'\n            \n            mcgrph[len(mcgrph)-1]+=mcchr\n            \n        else:\n            mcgrph[len(mcgrph)-1]+='<'\n\n    #f.close()\n\n\n\n    print('\\n')\n    print('VERT GRAPH--------------------------------------------------')\n    #write the graph\n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result2.txt'\n    #f=open(frespth,'w')\n    for gr,grph in enumerate(mcgrph):\n        if gr<=100:\n            print(grph)\n        #f.write(grph+'\\n')\n        \n    #f.close()\n\n\n    #difference analyais 2 with seq   \n    diffcnt=0\n    smecnt=0\n    \n    mutcnt=0\n    mutsw=0\n    cnstcnt=0\n    cnstsw=0\n    mcgrph=[]\n    \n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result1.txt'\n    #f=open(frespth,'w')\n\n    for dif,diffval in enumerate(diffarr):\n        \n\n            \n        #f.write(str(diffval)+'\\n')\n        if len(diffval)!=1:\n            mutsw=1\n            mutcnt+=1\n            cnstsw=0\n            cnstcnt=0\n        else:\n            cnstsw=1\n            cnstcnt+=1\n            mutsw=0\n            mutcnt=0\n\n        if mutcnt==1 or cnstcnt==1:\n            mcgrph.append(f'{dif+1:08}'+':')\n\n        if mutsw==1:\n            mcchr=''.join(diffval)+'>'\n\n            try:\n                t=diffval.index('T')\n            except ValueError:\n                t=-1\n                \n            try:\n                a=diffval.index('A')\n            except ValueError:\n                a=-1\n                \n            try:\n                c=diffval.index('C')\n            except ValueError:\n                c=-1\n                \n            try:\n                g=diffval.index('G')\n            except ValueError:\n                g=-1\n\n            if (t!=-1 or a!=-1) and (c!=-1 or g!=-1):\n                mcchr=''.join(diffval)+')'\n            \n            mcgrph[len(mcgrph)-1]+=mcchr\n            \n        else:\n            mcgrph[len(mcgrph)-1]+='<'\n\n    #f.close()\n\n\n    print('\\n')\n    print('VERT GRAPH W DIV BP SEQ-------------------------------------')\n    #write the graph\n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result2.txt'\n    #f=open(frespth,'w')\n    grph2vert=[]\n    for gr,grph in enumerate(mcgrph):\n        grph2vert.append(grph)\n        if gr<=100:\n            print(grph)\n           \n        #f.write(grph+'\\n')\n    print('\\n')    \n    print('DQ648857 vs DQ412043----------------------------------------------------------------------Finish')\n \n\n\n\n   \n  \n","c49bb609":" #>MN988669.1 Severe acute respiratory syndrome coronavirus 2 isolate 2019-nCoV WHU02, complete genome\n    LARGEMERS='\/kaggle\/input\/support-files\/MN988669_.txt'\n    MN988669=[]\n    with open(LARGEMERS) as lgmrs:\n        for line in lgmrs:\n            for ch in line:\n                if ch!='\\n':\n                    MN988669.append(str(ch))\n\n\n    #>AY274119.3 Severe acute respiratory syndrome-related coronavirus isolate Tor2, complete genome\n    LARGEMERS='\/kaggle\/input\/support-files\/AY274119_.txt'\n    AY274119=[]\n    with open(LARGEMERS) as lgmrs:\n        for line in lgmrs:\n            for ch in line:\n                if ch!='\\n':\n                    AY274119.append(str(ch))  \n\n\n    #Difference Build  2\n    diffarr=[]\n    for dq,dqval in enumerate(MN988669):\n        try:\n            if dqval!=AY274119[dq]:\n                diffarr.append([dqval,AY274119[dq]])\n            else:\n                diffarr.append([dqval])\n        except IndexError:\n            arbit=1\n\n\n    \n    #difference analyais    \n    diffcnt=0\n    smecnt=0\n    \n    mutcnt=0\n    mutsw=0\n    cnstcnt=0\n    cnstsw=0\n    mcgrph=[]\n    \n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result1.txt'\n    #f=open(frespth,'w')\n\n    print('\\n')\n    print('MN988669 vs AY274119----------------------------------------------------------------------Start')\n    print('SEQUENCE COMPARE--------------------------------------------')\n    for dif,diffval in enumerate(diffarr):\n        \n        #kaggle output consideration\n        if dif <=100:\n            print(str(diffval))\n            \n        #f.write(str(diffval)+'\\n')\n        if len(diffval)!=1:\n            mutsw=1\n            mutcnt+=1\n            cnstsw=0\n            cnstcnt=0\n        else:\n            cnstsw=1\n            cnstcnt+=1\n            mutsw=0\n            mutcnt=0\n\n        if mutcnt==1 or cnstcnt==1:\n            mcgrph.append(f'{dif+1:08}'+':')\n\n        if mutsw==1:\n            mcchr='>'\n\n            try:\n                t=diffval.index('T')\n            except ValueError:\n                t=-1\n                \n            try:\n                a=diffval.index('A')\n            except ValueError:\n                a=-1\n                \n            try:\n                c=diffval.index('C')\n            except ValueError:\n                c=-1\n                \n            try:\n                g=diffval.index('G')\n            except ValueError:\n                g=-1\n\n            if (t!=-1 or a!=-1) and (c!=-1 or g!=-1):\n                mcchr=')'\n            \n            mcgrph[len(mcgrph)-1]+=mcchr\n            \n        else:\n            mcgrph[len(mcgrph)-1]+='<'\n\n    #f.close()\n\n\n\n    print('\\n')\n    print('VERT GRAPH--------------------------------------------------')\n    #write the graph\n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result2.txt'\n    #f=open(frespth,'w')\n    for gr,grph in enumerate(mcgrph):\n        if gr<=100:\n            print(grph)\n        #f.write(grph+'\\n')\n        \n    #f.close()\n\n\n    #difference analyais 2 with seq   \n    diffcnt=0\n    smecnt=0\n    \n    mutcnt=0\n    mutsw=0\n    cnstcnt=0\n    cnstsw=0\n    mcgrph=[]\n    \n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result1.txt'\n    #f=open(frespth,'w')\n\n    for dif,diffval in enumerate(diffarr):\n        \n\n            \n        #f.write(str(diffval)+'\\n')\n        if len(diffval)!=1:\n            mutsw=1\n            mutcnt+=1\n            cnstsw=0\n            cnstcnt=0\n        else:\n            cnstsw=1\n            cnstcnt+=1\n            mutsw=0\n            mutcnt=0\n\n        if mutcnt==1 or cnstcnt==1:\n            mcgrph.append(f'{dif+1:08}'+':')\n\n        if mutsw==1:\n            mcchr=''.join(diffval)+'>'\n\n            try:\n                t=diffval.index('T')\n            except ValueError:\n                t=-1\n                \n            try:\n                a=diffval.index('A')\n            except ValueError:\n                a=-1\n                \n            try:\n                c=diffval.index('C')\n            except ValueError:\n                c=-1\n                \n            try:\n                g=diffval.index('G')\n            except ValueError:\n                g=-1\n\n            if (t!=-1 or a!=-1) and (c!=-1 or g!=-1):\n                mcchr=''.join(diffval)+')'\n            \n            mcgrph[len(mcgrph)-1]+=mcchr\n            \n        else:\n            mcgrph[len(mcgrph)-1]+='<'\n\n    #f.close()\n\n\n    print('\\n')\n    print('VERT GRAPH W DIV BP SEQ-------------------------------------')\n    #write the graph\n    #frespth='C:\/Users\/The Architect\/Desktop\/Numerical Testing\/Covid19\/Result2.txt'\n    #f=open(frespth,'w')\n    grph2vert=[]\n    for gr,grph in enumerate(mcgrph):\n        grph2vert.append(grph)\n        if gr<=100:\n            print(grph)\n           \n        #f.write(grph+'\\n')\n    print('\\n')    \n    print('MN988669 vs AY274119----------------------------------------------------------------------Finish')\n            ","005305bb":"**Summary:**\n\nWithout knowing a lot about genetics and genome sequencing I decided to try and make a model of a compartive analysis between genome seqences. Hoping this can help with analysis of a cure.\n\nUpdate:\n03\/19\/2020 added base pair graph to output result\n\n","35af3864":"Side note: sounds crazy but what if bat echolocation frequency could treat. maybe  further \u00a0analysis. ","6bdf1802":"**Hypothesis:**\n\nAssuming same dimension or starting point of dna build. \nIf possible, use method to live compare during seqence aggregation of two strings of dna in of similar host cells.\nIf divergent then possible environment action on sequence could be an impactor to result. \nCould be a live action way of observing dna build of virus and vector points of varibility in system to caputre real time evolution. \n\nComparision of Vert graphs between runs\n* DQ648857 vs DQ412043\n* MN988669 vs AY274119\n\nWoule lead me to belive that MN988669 vs AY274119 is more similar genomicly, due to a lack of divergence stacks of dissimmlar base pairs. \n\n\n\n\n","6f43aa6f":"**Comparision:**\n\nAssuming seqence dimension same start:\n    \nDQ648857 |Bat coronavirus (BtCoV\/279\/2005)| complete genome\n\nDQ412043 |Bat SARS coronavirus Rm1| complete genome\n\n\n![image.png](attachment:image.png)\n\nCompare file=Seqence compare if same then single elment list if diff then multipule\nGraph File=Aggregate of list states to infer possible distribution. \n\nhttps:\/\/www.kaggle.com\/tribedoor\/support-files#DQ648857vsDQ412043_Compare.txt\n\nhttps:\/\/www.kaggle.com\/tribedoor\/support-files#DQ648857vsDQ412043_Graph.txt\n\n\n"}}