{"cell_type":{"d6c100b0":"code","8a8ef332":"code","eb927e5d":"code","9708acf3":"code","26252577":"code","d54d9be7":"code","b1557398":"code","68d92708":"code","8ea99d57":"code","9f718cbe":"code","6f4e5bde":"code","36f73312":"markdown","3bd47c62":"markdown","002f65f4":"markdown","99c77c4d":"markdown","c0b915da":"markdown","c3a7b4b6":"markdown","e0d99b93":"markdown","71f7b7f4":"markdown","c9d13228":"markdown"},"source":{"d6c100b0":"# Libraries\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#FastAI library\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate, accuracy\n\nimport gc","8a8ef332":"# Load Data\npath = '..\/input\/image-dataset'    #path for image dataset\n\nnp.random.seed(42)\ndata = ImageDataBunch.from_folder(path, train='.', valid_pct=0.2,ds_tfms=get_transforms(), size=224, num_workers=4).normalize(imagenet_stats)","eb927e5d":"#View pre-defined classes in the dataset\ndata.classes","9708acf3":"#Dataset batch stats\ndata.batch_stats","26252577":"#View (random) data in the dataset\ndata.show_batch(rows=2, figsize=(8,8))","d54d9be7":"#Build Model\nlearner = create_cnn(data, models.resnet34, metrics = accuracy)","b1557398":"#Train Model\ndefaults.device = torch.device('cuda')  #checks if the gpu is used\nlearner.fit_one_cycle(5, max_lr=slice(3e-5,3e-4))","68d92708":"gc.collect()","8ea99d57":"interpret = ClassificationInterpretation.from_learner(learner)","9f718cbe":"interpret.confusion_matrix()","6f4e5bde":"#Plot Top Losses\ninterpret.plot_top_losses(9, figsize=(15,15))","36f73312":"# Interpret the Model","3bd47c62":"To train the layers we can use the fit or fit_one_cycle method. The fit method is the \u201cnormal\u201d way of training a neural net with a constant learning rate, whilst the fit_one_cycle method uses something called the 1 cycle policy, which basically changes the learning rate over time to achieve better results","002f65f4":"# Libraries","99c77c4d":"# Load Dataset","c0b915da":"# FastAI Image Classification - Beginner Tutorial\n\nBefore moving onto the fun part i.e. scripting, lets just have a quick read-through the introduction of FastAI from the good ol' folks at Wikipedia & the Internet :-)\n\n> fast.ai is a non-profit research group focused on deep learning and artificial intelligence. It was founded in 2016 by Jeremy Howard and Rachel Thomas with the goal of democratising deep learning. They do this by providing a massive open online course (MOOC) named \"Practical Deep Learning for Coders,\" which has no other prerequisites except for knowledge of the programming language Python.\n> \n> The FastAI library is built on top of the PyTorch & allows us to build models using only a few lines of code. Furthermore it implements some of the newest state-of-the-art technics taken from research papers that allow you to get state-of-the-art results on almost any type of problem.\n> \n","c3a7b4b6":"# Build & Train the Model\n\nThe FastAI library is designed to let you create models (FastAi calls them learners) with only a few lines of code. They provide a method called create_cnn, which can be used to create a convolutional neural network.\n","e0d99b93":"The created model uses the resnet34 architecture, with weights pretrained on the imagenet dataset.","71f7b7f4":"# Explore Dataset","c9d13228":"Quick run through:\n\n* Libraries\n* Load Dataset\n* Explore Dataset\n* Build & Train the Model\n* Interpret the Model"}}