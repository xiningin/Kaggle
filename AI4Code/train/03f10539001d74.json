{"cell_type":{"2647d5a8":"code","f0e918a0":"code","262a202a":"code","1d377a3b":"code","4a252383":"code","69da21f7":"code","8528070b":"code","12678e15":"code","1f2e1a9c":"code","3054c063":"code","d45a5c56":"code","47684a0b":"code","4933a976":"code","88787f50":"code","b13507f2":"code","9f6c20be":"code","9bb1fbc7":"code","61e0f251":"code","c224ef43":"code","b88f7733":"code","aac49e3e":"code","c7e52242":"code","b5ecc84c":"code","25bc156f":"code","a8881a21":"code","094ad889":"code","a9ed4773":"code","bff5520f":"code","289ee4cb":"code","0a6d1ea0":"code","683be1be":"code","1fdbe048":"code","5d1d3d13":"markdown","78ce8d68":"markdown","7c9f041c":"markdown","e6230fad":"markdown"},"source":{"2647d5a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt  \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f0e918a0":"df = pd.read_csv('\/kaggle\/input\/xauusd\/XAU_USD_last_2_years_data.csv')\ndf","262a202a":"df2 = pd.read_csv(\"..\/input\/xauusd\/CNY_USD_last_2_years_data.csv\")\ndf2","1d377a3b":"df = df.drop(['\u015eimdi', 'Y\u00fcksek','D\u00fc\u015f\u00fck','Fark %'], axis=1)\ndf = df.rename(index=str,columns={'A\u00e7\u0131l\u0131\u015f':'Gold_Open','Tarih':'Date'})\ndf","4a252383":"df2 = df2.drop(['\u015eimdi', 'Y\u00fcksek','D\u00fc\u015f\u00fck','Fark %'], axis=1)\ndf2 = df2.rename(index=str,columns={'A\u00e7\u0131l\u0131\u015f':'Yuan_Open','Tarih':'Date'})\ndf2","69da21f7":"df['Date'] = pd.to_datetime(df['Date'], format=\"%d.%m.%Y\")\ndf = df.sort_values(by=['Date'], ascending=[True])\ndf.head(7)","8528070b":"df2['Date'] = pd.to_datetime(df2['Date'], format=\"%d.%m.%Y\")\ndf2 = df2.sort_values(by=['Date'], ascending=[True])\ndf.head(7)","12678e15":"dates = pd.date_range(start=df.Date.min(), end=df.Date.max())","1f2e1a9c":"df2 = df2.set_index('Date').reindex(dates).fillna(method ='ffill', limit = 1).rename_axis('Date').reset_index()\ndf2[\"Yuan_Open\"] = df2[\"Yuan_Open\"].fillna(method ='bfill', limit = 2)\ndf2.describe()","3054c063":"df = df.set_index('Date').reindex(dates).fillna(method ='ffill', limit = 1).rename_axis('Date').reset_index()\ndf[\"Gold_Open\"] = df[\"Gold_Open\"].fillna(method ='bfill', limit = 2)\n#pazar g\u00fcnleri pazartesiye, cumartesi g\u00fcnleri cumaya e\u015fitlenmi\u015ftir. ??\ndf.describe()","d45a5c56":"df = pd.merge(df, df2)\ndf.head(20)","47684a0b":"df.describe()","4933a976":"df.isnull().sum()","88787f50":"df.info()","b13507f2":"df['Gold_Open'] = df['Gold_Open'].str.replace('.','')\ndf['Gold_Open'] = df['Gold_Open'].str.replace(',','.')\ndf['Gold_Open'] = df['Gold_Open'].astype(float)","9f6c20be":"df['Yuan_Open'] = df['Yuan_Open'].str.replace(',','.')\ndf['Yuan_Open'] = df['Yuan_Open'].astype(float)\ndf.head()","9bb1fbc7":"df['day_of_week'] = df['Date'].dt.day_name()\ndf.head(7)","61e0f251":"plt.plot(df['Date'], df['Gold_Open'], color='green', marker='o', linestyle='dashed', linewidth=2)\nplt.show()","c224ef43":"plt.plot(df['Date'], df['Yuan_Open'], color='green', marker='o', linestyle='dashed', linewidth=2)\nplt.show()","b88f7733":"y=df.Gold_Open.values\nx=df.drop([\"Gold_Open\",\"Date\"],axis=1)\nx.head()","aac49e3e":"x = pd.get_dummies(data = x, columns = ['day_of_week'], drop_first = False)\nx.head()","c7e52242":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=52)","b5ecc84c":"from sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n\nlin_reg = LinearRegression()  \nlin_reg.fit(x_train, y_train)\ny_pred = lin_reg.predict(x_test)\n\ny_train_pred = lin_reg.predict(x_train)\n\npredicted = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\npredicted.head(10)","25bc156f":"plt.plot(y_train, color='green', marker='o', linestyle='dashed', linewidth=2)\nplt.plot(y_train_pred, color='red', marker='o', linestyle='dashed', linewidth=2)\nplt.show()","a8881a21":"plt.plot(y_test, color='green', marker='o', linestyle='dashed', linewidth=2)\nplt.plot(y_pred, color='red', marker='o', linestyle='dashed', linewidth=2)\nplt.show()","094ad889":"predicted.plot(kind='bar',figsize=(10,8))\nplt.show()","a9ed4773":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","bff5520f":"df.head()","289ee4cb":"# split dataset\nX = df['Gold_Open'].values\ntrain, test = X[1:len(X)-7], X[len(X)-7:]","0a6d1ea0":"from statsmodels.tsa.ar_model import AR\nfrom sklearn.metrics import mean_squared_error\n\n# train autoregression\nmodel = AR(train)\nmodel_fit = model.fit()\nprint('Lag: %s' % model_fit.k_ar)\nprint('Coefficients: %s' % model_fit.params)","683be1be":"# make predictions\npredictions = model_fit.predict(start=len(train), end=len(train)+len(test)-1, dynamic=False)\nfor i in range(len(predictions)):\n    print('predicted=%f, expected=%f' % (predictions[i], test[i]))\nerror = mean_squared_error(test, predictions)\nprint('Test MSE: %.3f' % error)","1fdbe048":"# plot results\nplt.plot(test)\nplt.plot(predictions, color='red')\nplt.show()","5d1d3d13":"# AR MODELS","78ce8d68":"ADDING MISSING WEEKEND DAYS","7c9f041c":"# Regression","e6230fad":"THIS METHOD IS NOT SUITABLE FOR THIS DATASET."}}