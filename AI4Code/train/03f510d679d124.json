{"cell_type":{"bc097e2d":"code","c5ff4cc6":"code","75c9002f":"code","3ca11a63":"code","1ba624f1":"code","77d0608b":"code","c14e5673":"code","73442583":"code","a4f92eff":"code","2916c6dc":"code","40b7f4cd":"code","36b401a1":"code","103c89f9":"code","21145c0f":"code","3f190e04":"code","5475e7d9":"code","b113aad8":"code","639e1dc9":"code","a733ca10":"markdown","00bf96fd":"markdown","ec620b18":"markdown","1f8a4e67":"markdown","02d79533":"markdown","27ae5fe1":"markdown","9a643651":"markdown","3a4f3f39":"markdown","2b13b416":"markdown","55c11a2f":"markdown","78a5ae7a":"markdown","90601458":"markdown"},"source":{"bc097e2d":"import numpy as np \nimport pandas as pd \nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\n%matplotlib inline\nimport seaborn as sns\nimport random\n\ncity_hour = pd.read_csv('..\/input\/air-quality-data-in-india\/city_hour.csv')\nstation_hour = pd.read_csv('..\/input\/air-quality-data-in-india\/station_hour.csv')\nstation_day = pd.read_csv('..\/input\/air-quality-data-in-india\/station_day.csv')\ncity_day = pd.read_csv('..\/input\/air-quality-data-in-india\/city_day.csv')\nstations = pd.read_csv('..\/input\/air-quality-data-in-india\/stations.csv')\ncity_day['Date'] = pd.to_datetime(city_day['Date'],dayfirst = True)\ncity_hour['Datetime'] = pd.to_datetime(city_hour['Datetime'],dayfirst = True)\n\ncity_day['year'] = [d.year for d in city_day.Date]\ncity_day['month'] = [d.strftime('%b') for d in city_day.Date]\ncity_hour['hours'] = [d.hour for d in city_hour.Datetime]\ncity_day.fillna(method='bfill',inplace=True)\ncity_hour.fillna(method='bfill',inplace=True)","c5ff4cc6":"def trend_plot(value):   \n    years = city_day['year'].unique()\n    fig, axes = plt.subplots(1, 3, figsize=(14,6), dpi= 80)\n    sns.boxplot(x='year', y=value, data=city_day, ax=axes[0])\n    sns.pointplot(x='month', y=value, data=city_day.loc[~city_day.year.isin([1991, 2008]), :],ax=axes[1])\n    sns.pointplot(x='hours', y=value, data=city_hour)\n    axes[0].set_title('Yearly Trend', fontsize=18); \n    axes[1].set_title('Monthy Trend', fontsize=18)\n    axes[2].set_title('Hourly Trend',fontsize =18)\n    plt.show()\nvalues = ['NO','NO2','NH3','CO','SO2','O3']\nfor value in values:\n    trend_plot(value)","75c9002f":"DAYS = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thurs.', 'Fri.', 'Sat.']\nMONTHS = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'June', 'July', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.']\ncolors = ['Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds',\n            'YlOrBr', 'YlOrRd', 'OrRd', 'PuRd', 'RdPu', 'BuPu',\n            'GnBu', 'PuBu', 'YlGnBu', 'PuBuGn', 'BuGn', 'YlGn']\n\ndef date_heatmap(series, start=None, end=None, mean=False, ax=None, **kwargs):\n    dates = series.index.floor('D')\n    group = series.groupby(dates)\n    series = group.mean() if mean else group.sum()\n    start = pd.to_datetime(start or series.index.min())\n    end = pd.to_datetime(end or series.index.max())\n    end += np.timedelta64(1, 'D')\n    start_sun = start - np.timedelta64((start.dayofweek + 1) % 7, 'D')\n    end_sun = end + np.timedelta64(7 - end.dayofweek - 1, 'D')\n    num_weeks = (end_sun - start_sun).days \/\/ 7\n    heatmap = np.zeros((7, num_weeks))\n    ticks = {}  # week number -> month name\n    for week in range(num_weeks):\n        for day in range(7):\n            date = start_sun + np.timedelta64(7 * week + day, 'D')\n            if date.day == 1:\n                ticks[week] = MONTHS[date.month - 1]\n            if date.dayofyear == 1:\n                ticks[week] += f'\\n{date.year}'\n            if start <= date < end:\n                heatmap[day, week] = series.get(date, 0)\n    y = np.arange(8) - 0.5\n    x = np.arange(num_weeks + 1) - 0.5\n    ax = ax or plt.gca()\n    mesh = ax.pcolormesh(x, y, heatmap, **kwargs)\n    ax.invert_yaxis()\n    ax.set_xticks(list(ticks.keys()))\n    ax.set_xticklabels(list(ticks.values()))\n    ax.set_yticks(np.arange(7))\n    ax.set_yticklabels(DAYS)\n    plt.sca(ax)\n    plt.sci(mesh)\n    return ax\ndef calender_map(data,value,year,color):\n    figsize = plt.figaspect(7 \/ 56)\n    fig = plt.figure(figsize=figsize)\n    ax = date_heatmap(data, edgecolor='black')\n    tick=[]\n    for i in range(int(city_day[value].min()),int(city_day[value].max()),100):\n        tick.append(i)\n    plt.colorbar(ticks=tick, pad=0.02)\n    cmap = mpl.cm.get_cmap(color, 100)\n    plt.set_cmap(cmap)\n    plt.clim(city_day[value].min(), city_day[value].max())\n    ax.set_aspect('equal')\n    plt.title('{} calender map in the year {}'.format(value,year),fontsize=15)\n    plt.show()\n\ndef calender_plot(value,year,color):\n    df = city_day[['Date',value,'year']]\n    df=df[df['year'] == year]\n    df.set_index('Date',inplace=True)\n    date = list(df.index)\n    data = list(df[value])\n    data = pd.Series(data)\n    data.index = date\n    calender_map(data,value,year,color)\nyears = list(city_day['year'].unique())","3ca11a63":"for year in years:\n    calender_plot('AQI',year,'PuBuGn')\nfor year in years:\n    calender_plot('PM2.5',year,'BuPu')\n","1ba624f1":"variables = ['PM2.5','PM10','NO','NO2','NOx','NH3','CO','SO2','O3','Benzene','Toluene','Xylene']\n\nfig = plt.figure(figsize=(16,34))\nfor variable,num in zip(variables, range(1,len(variables)+1)):\n    ax = fig.add_subplot(6,2,num)\n    sns.scatterplot(variable, 'AQI', hue='year', data=city_day)\n    plt.title('Relation between {} and AQI'.format(variable))\n    plt.xlabel(variable)\n    plt.ylabel('AQI')","77d0608b":"plt.figure(figsize=(20, 20));\nsns.heatmap(city_day.corr(),annot=True);","c14e5673":"fig, axes= plt.subplots(figsize=(20, 12), ncols=5)\ncity_wise_max_so2 = city_day[['City','SO2']].dropna().groupby('City').mean().sort_values(by='SO2')\ncity_wise_max_no2 = city_day[['City','NO2']].dropna().groupby('City').mean().sort_values(by='NO2')\ncity_wise_max_pm25 = city_day[['City','PM2.5']].dropna().groupby('City').mean().sort_values(by='PM2.5')\ncity_wise_max_aqi = city_day[['City','AQI']].dropna().groupby('City').mean().sort_values(by='AQI')\ncity_wise_max_pm10 = city_day[['City','PM10']].dropna().groupby('City').mean().sort_values(by='PM10')\n\nsns.barplot(x='SO2', y=city_wise_max_so2.index, data=city_wise_max_so2, ax=axes[0])\naxes[0].set_title(\"Average SO2 Observed in a City\")\n\nsns.barplot(x='NO2', y=city_wise_max_no2.index, data=city_wise_max_no2, ax=axes[1])\naxes[1].set_title(\"Average NO2 observed in a City\")\n\nsns.barplot(x='PM2.5', y=city_wise_max_pm25.index, data=city_wise_max_pm25, ax=axes[2])\naxes[2].set_title(\"Average PM2.5 observed in a City\")\n\nsns.barplot(x='AQI', y=city_wise_max_aqi.index, data=city_wise_max_aqi, ax=axes[3])\naxes[3].set_title(\"Average AQI observed in a city\")\n\nsns.barplot(x='PM10', y=city_wise_max_pm10.index, data=city_wise_max_pm10, ax=axes[4])\naxes[4].set_title(\"Average pm2_5 observed in a city\")\nplt.tight_layout()\n","73442583":"def cityandYear(indicator1,indicator2):\n    fig, axes= plt.subplots(figsize=(20, 12), ncols=2);\n    plt.figure(figsize=(20, 20));\n    hmap = sns.heatmap(\n        data=city_day.pivot_table(values=indicator1, index='City', columns='year', aggfunc='mean', margins=True),\n               annot=True, linewidths=.5, cbar=True, square=True, cmap='inferno', cbar_kws={'label': \"Annual Average\"},ax = axes[0]);\n    hmap = sns.heatmap(\n        data=city_day.pivot_table(values=indicator2, index='City', columns='year', aggfunc='mean', margins=True),\n               annot=True, linewidths=.5, cbar=True, square=True, cmap='inferno', cbar_kws={'label': \"Annual Average\"},ax = axes[1]);\n    \n    axes[0].set_title(\"{} by City and Year\".format(indicator1),fontsize=15);\n    axes[1].set_title(\"{} by City and Year\".format(indicator2),fontsize=15);","a4f92eff":"cityandYear('NO2','SO2')\ncityandYear('PM2.5','PM10')\ncityandYear('NH3','AQI')","2916c6dc":"def lockdownEffect(city,value):\n    df = city_day[city_day['Date'] > '3-1-2020']\n    df = df[df['City'] == city]\n    fig, ax1 = plt.subplots(figsize= (15,5));\n    ax1.xaxis.set_major_formatter(mdates.DateFormatter('%d-%b'))\n    ax1.set_ylabel(value)\n    ax1.bar(df['Date'],df[value]);\n    df = city_day[city_day['Date'] > '3-24-2020']\n    df = df[df['City'] == city]\n    ax1.bar(df['Date'],df[value],color='red');\n    plt.title('{} {}'.format(value, city))\ndef lockdown_hourly_effect(city,value1,value2):\n    city_df = city_hour[city_hour['City'] == city]\n    fig, axes = plt.subplots(1, 2, figsize=(14,6), dpi= 80)\n    \n    sns.pointplot(x='hours', y=value1, data=city_df,label = 'After Lockdown',color='blue',ax=axes[0])\n    sns.pointplot(x='hours', y=value2, data=city_df,label = 'After Lockdown',color='blue',ax=axes[1])\n    axes[0].set_title(city +' '+str(value1)+ ' Hourly Trend', fontsize=18); \n    axes[1].set_title(city +' '+str(value2)+ ' Hourly Trend', fontsize=18); \n    ","40b7f4cd":"lockdownEffect('Delhi','PM2.5')\nlockdownEffect('Delhi','PM10')\nlockdownEffect('Delhi','NO2')\nlockdownEffect('Delhi','SO2')","36b401a1":"lockdown_hourly_effect('Delhi','PM2.5','PM10')\nlockdown_hourly_effect('Delhi','SO2','NO2')","103c89f9":"lockdownEffect('Mumbai','PM2.5')\nlockdownEffect('Mumbai','PM10')\nlockdownEffect('Mumbai','NO2')\nlockdownEffect('Mumbai','SO2')","21145c0f":"lockdown_hourly_effect('Mumbai','PM2.5','PM10')\nlockdown_hourly_effect('Mumbai','SO2','NO2')","3f190e04":"lockdownEffect('Bengaluru','PM2.5')\nlockdownEffect('Bengaluru','PM10')\nlockdownEffect('Bengaluru','NO2')\nlockdownEffect('Bengaluru','SO2')","5475e7d9":"lockdown_hourly_effect('Bengaluru','PM2.5','PM10')\nlockdown_hourly_effect('Bengaluru','SO2','NO2')","b113aad8":"lockdownEffect('Chennai','PM2.5')\nlockdownEffect('Chennai','PM10')\nlockdownEffect('Chennai','NO2')\nlockdownEffect('Chennai','SO2')","639e1dc9":"lockdown_hourly_effect('Chennai','PM2.5','PM10')\nlockdown_hourly_effect('Chennai','SO2','NO2')","a733ca10":"# Mumbai\n\n![](https:\/\/cdn.britannica.com\/26\/84526-050-45452C37\/Gateway-monument-India-entrance-Mumbai-Harbour-coast.jpg)\n\n## The Impact of Lockdown on Air Quality\n\n","00bf96fd":"## Calender Map of AQI and PM2.5","ec620b18":"# Delhi\n## The Impact of Lockdown on Air Quality ","1f8a4e67":"## City-wise Pollitants Insights","02d79533":"# Delhi\n![](https:\/\/cdn.britannica.com\/37\/189837-050-F0AF383E\/New-Delhi-India-War-Memorial-arch-Sir.jpg)\n\n## The Impact of Lockdown on Air Quality","27ae5fe1":"# Airpoclypse\nAir pollution is a critical problem all across the globe. We, humans, have ignored its consequences for so long. The natural disasters caused as a result dramatically changing climate, the rising temperature, untimely and fierce rains, all are consequences of our own ignorance. Trying to reduce world pollution is no easy task, and it can only be achieved by the co-operation of every single person in the world. \n\n![](https:\/\/i.gifer.com\/3zdg.gif)","9a643651":"## Coorelation between the Pollutants","3a4f3f39":"## Trends of Pollutants","2b13b416":"# Chennai\n\n![](https:\/\/img.dtnext.in\/Images\/Article\/201611130048195611_Chennai-Central-gets-firstever-station-director_SECVPF.gif)\n\n## The Impact of Lockdown on Air Quality","55c11a2f":"During the lockdown period, as a result of combination of reduced vehicles on the road, functioning of only\nessential commercial units and prevailing weather conditions, significant reduction in PM2.5, PM10 and NO2\nlevels are observed.","78a5ae7a":"# Bangalore\n\n![](https:\/\/cms.qz.com\/wp-content\/uploads\/2017\/08\/bangalore1-reuters-traffic-moves-along-a-road-in-the-southern-indian-city-of-bangalore-december-14-2005.jpg?quality=75&strip=all&w=1600&h=900&crop=1)\n\n## The Impact of Lockdown on Air Quality","90601458":"There is a significant decrease in PM2.5, PM10, NO2 levels. Out of trend there is a increase in SO2 level."}}