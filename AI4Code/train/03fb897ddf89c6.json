{"cell_type":{"b167ed64":"code","928b4ac2":"code","de0ae0a0":"code","6c3009b2":"markdown","db1920e2":"markdown","d3c36730":"markdown","0c29578f":"markdown","5535f8c6":"markdown"},"source":{"b167ed64":"class Tree:\n    ##TODO: Implementar en clase paso a paso\n    pass\n","928b4ac2":"def buscar_recursivo(L, x):\n    if len(L) == 0:\n        return None\n    print (f\"Buscar {x} en {L}\")\n    i = len(L) \/\/ 2\n    if L[i] == x:\n        return i\n    elif x < L[i]:\n        return buscar_recursivo(L[:i], x)\n    else:\n        temporal = buscar_recursivo(L[i+1:], x)\n        if temporal is None:\n            return None\n        return i + 1 + temporal","de0ae0a0":"L = [4, 6, 8, 12, 18, 25, 34, 48, 52, 78]\nx = 17\nresult = buscar_recursivo(L, x)\nif result is None:\n    print (f\"No se encontr\u00f3 el {x}\")\nelse:\n    print (f\"Se encontr\u00f3 el {x} en la posici\u00f3n {result}\")","6c3009b2":"# Taller: El problema de las 8 placas.\n\nUn juego de la infancia era un juego llamado 8 placas, el cual, consist\u00eda en acomodar las fichas en un orden definido anteriormente, la idea es hacer una funci\u00f3n que permita encontrar la secuencia de pasos para ordenar el cuadro.\n\n![ocho_placas.png](attachment:ocho_placas.png)\n\n![ocho_placas2.png](attachment:ocho_placas2.png)\n","db1920e2":"## Algoritmos recusivos que funcionan como un \u00e1rbol\n\nLa Ejecuci\u00f3n de un algoritmo recusivo se puede asemejar a un \u00e1rbol, sobretodo aquellos algorimos que comparan u operan con los resultados de los hijos.\n\nDe hecho la b\u00fasqueda binaria en una lista ordenada, se ejecuta como un \u00e1rbol binario, y no requerimos crear un objeto \u00e1rbol para representarlo.\n\n![busqueda_binaria_como_arbol.png](attachment:busqueda_binaria_como_arbol.png)\n","d3c36730":"Lo que se debe tener en cuenta que hay tres tipos de movimientos, cuando el espacio en blanco est\u00e1 en el centro hay 4 fichas que pueden ocupar el lugar, cuando est\u00e1 en las esquinas, hay 2 y cuando est\u00e1 en los bordes hay 3.\n\n**1.** Determine la mejor manera de determinar el tablero.\n\n**2.** Determine que operaciones tiene el tablero.\n\n**3.** Determine cuando un movimiento mejora o empeora el tablero.\n\n**4.** Trate de representar el problema en un \u00e1rbol.\n\n**5.** Los ciclos son un problema, como se podr\u00edan resolver.\n\n**6.** Encuentre una soluci\u00f3n, no la mejor, al menos no a\u00fan.\n\n**7.** C\u00f3mo se buscar\u00eda la mejor?\n\n","0c29578f":"# \u00c1rboles\n\nEl \u00e1rbol es una de las estructuras no lineales m\u00e1s usada en ciencia de la computaci\u00f3n, es una estructura jer\u00e1rquica, donde un nodo padre tiene varios hijos.\n\nLo interesante es que cada hijo a su vez puede ser padre de otros hijos y as\u00ed sucesivamente.\n\nCada nodo representa un valor o un objeto en la estructura.\n\nLa ra\u00edz del \u00e1rbol es el nodo con m\u00e1s jerarqu\u00eda, es decir; el nodo que tiene hijos y no tiene un padre.\n\nCada nodo hijo es la ra\u00edz de un sub\u00e1rbol.\n\nSe le llama hoja a los nodos del \u00e1rbol que se ubican en la parte inferior del mismo, es decir; que no tengan hijos.\n\nSe le llama nodo interno a todos los nodos que tienen al menos un hijo, inclu\u00eddo el nodo ra\u00edz.\n\nCamino, es la secuencia de nodos por la cual se debe pasar para llegar desde un nodo a otro.\n\nEl grado de un nodo es la cantidad de hijos que tiene.\n\nEl grado de un arbol es el m\u00e1ximo de los grados de todos los hijos del \u00e1rbol.\n\nEl peso es el n\u00famero de nodos en un arbol.\n\nLa altura de un \u00e1rbol es la cantidad de niveles que tiene, es decir, es el n\u00famero de nodos que tiene el camino m\u00e1s largo entre la ra\u00edz y cualquiera de sus nodos.\n\n![arboles.png](attachment:arboles.png)","5535f8c6":"Una implementaci\u00f3n de los \u00e1rboles n-arios (as\u00ed son conocidos los \u00e1rboles on un grado mayor que 2), es indicando a los hijos como una lista de nodos."}}