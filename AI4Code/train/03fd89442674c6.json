{"cell_type":{"62639e1e":"code","b6f368cb":"code","e544323b":"code","5ac22d64":"code","d355e14c":"code","e09e6a78":"code","3710b9b7":"code","f78f9cda":"code","884a8c0e":"code","91976e67":"code","d790c0e9":"code","a1365a96":"code","5f66f1e7":"markdown","d6f3e799":"markdown","97a1fb13":"markdown"},"source":{"62639e1e":"import numpy as np\nimport pandas as pd\nfrom numpy.linalg import norm\nimport fastText as ft","b6f368cb":"# Read file\nlines = [line.rstrip('\\n').replace('\\\\n',' ').replace('>','').lower() for line in open('..\/input\/anime-subtitles\/input (Cleaned).txt')]\n\nsubtitles = pd.DataFrame(columns=['Line'], data = lines)","e544323b":"%%time\n# Remove some signs\nfor sign in ['-', '!', '?', ',', '.', ':', '\"', \"'\", \"\/\"]:\n    subtitles['Line'] = subtitles['Line'].apply(lambda x: x.replace(sign, f' '))","5ac22d64":"# Tidy up to save txt file\nsubtitles = subtitles.sample(frac=1).reset_index()\nsubtitles['Line'] = subtitles['Line'].astype(str)\n\nnp.savetxt('input (Cleaner).txt', subtitles['Line'].values, fmt='%s')","d355e14c":"%%time\n# This takes half of a typical anime episode\nmodel = ft.train_unsupervised('input (Cleaner).txt', model='skipgram')","e09e6a78":"# Humble tools to play with embeddings\ndef get_nearest_neighbors(model, query, k):\n    v = model.get_word_vector(query)\n    v = v \/ norm(v)\n    return get_nearest_neighbors_vector(model, v, k)\n\ndef get_nearest_neighbors_vector(model, v, k):\n    matrix = model.get_output_matrix()\n    norms = norm(matrix, axis = 1)\n    cossims = np.matmul(matrix, v) \/ norms\n    indices = np.argsort(cossims)[::-1][:k]\n    words = np.array(model.get_words())[indices]\n    cossims = cossims[indices]\n    return list(zip(words,cossims))","3710b9b7":"get_nearest_neighbors(model, 'vegeta', 10)\n# DBZ characters are close together!","f78f9cda":"get_nearest_neighbors(model, 'omae', 10)\n# Omae wa... Japanese words clump together","884a8c0e":"get_nearest_neighbors(model, 'titan', 10)\n# Triggers \"Attack on Titan\" references","91976e67":"get_nearest_neighbors(model, 'eva', 10)\n# Evangelion references","d790c0e9":"get_nearest_neighbors(model, 'onee', 5)\n# Big Sisters are typically addressed with -chan or -sama","a1365a96":"get_nearest_neighbors(model, 'big', 10)\n# Oh no","5f66f1e7":"## Train FastText","d6f3e799":"## Let's have some fun","97a1fb13":"# Anime Embeddings\n\nIn this short notebook we train FastText embeddings with the Anime Subtitles dataset. No transfer learning from other datasets.\n\nWe'll see how the anime lingo differs from regular English."}}