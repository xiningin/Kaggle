{"cell_type":{"b8639ef3":"code","c2acc7b6":"code","47093fad":"code","5508564f":"code","249011f5":"code","20db0615":"code","1267acd0":"code","1a49dbcc":"code","bb41e158":"code","ce110899":"code","3054ce6e":"code","7d550983":"code","34c57655":"code","895eb680":"code","7252d917":"code","d8f667c2":"code","80d4e974":"code","6fc29fb5":"code","c816b6b6":"code","b6bcb7e0":"code","7e9e1229":"code","0891c2a7":"code","ca969a4c":"markdown"},"source":{"b8639ef3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","c2acc7b6":"!ls ..\/input\n!mkdir -p \/tmp\/.torch\/models\/\n!cp ..\/input\/pretrained-pytorch-models\/* \/tmp\/.torch\/models\/\n!cp ..\/input\/resnet-from-fastai\/* \/tmp\/.torch\/models","47093fad":"path = Path('..\/input\/digit-recognizer')","5508564f":"class CustomImageItemList(ImageItemList):\n    def open(self, fn):\n        img = fn.reshape(28, 28)\n        img = np.stack((img,)*3, axis=-1) # convert to 3 channels\n        return Image(pil2tensor(img, dtype=np.float32))\n\n    @classmethod\n    def from_csv_custom(cls, path:PathOrStr, csv_name:str, imgIdx:int=1, header:str='infer', **kwargs) -> 'ItemList':\n        df = pd.read_csv(Path(path)\/csv_name, header=header)\n        res = super().from_df(df, path=path, cols=0, **kwargs)\n        # convert pixels to an ndarray\n        res.items = df.iloc[:,imgIdx:].apply(lambda x: x.values \/ 783.0, axis=1).values\n        return res","249011f5":"test = CustomImageItemList.from_csv_custom(path=path, csv_name='test.csv', imgIdx=0)\ndata = (CustomImageItemList.from_csv_custom(path=path, csv_name='train.csv')\n                       .random_split_by_pct(.2)\n                       .label_from_df(cols='label')\n                       .add_test(test, label=0)\n                       .databunch(bs=64, num_workers=0)\n                       .normalize(imagenet_stats))","20db0615":"data.show_batch(rows=3, figsize=(12,9))","1267acd0":"arch = models.resnet34","1a49dbcc":"learn = create_cnn(data, arch, metrics=error_rate, model_dir='\/tmp\/models')","bb41e158":"learn.lr_find()","ce110899":"learn.recorder.plot()","3054ce6e":"lr = 0.02","7d550983":"learn.fit_one_cycle(4, slice(lr))","34c57655":"learn.recorder.plot_losses()","895eb680":"learn.save('stage-1')","7252d917":"learn.load('stage-1')","d8f667c2":"interp = learn.interpret()","80d4e974":"interp.plot_top_losses(9, figsize=(7,7))","6fc29fb5":"preds, y, losses = learn.get_preds(ds_type=DatasetType.Test, with_loss=True)","c816b6b6":"# Bug in fastai? Why is this needed?\ny = torch.argmax(preds, dim=1)","b6bcb7e0":"submission_df = pd.DataFrame({'ImageId': range(1, len(y) + 1), 'Label': y}, columns=['ImageId', 'Label'])\nsubmission_df.head()","7e9e1229":"submission_df.to_csv('submission.csv', index=False)","0891c2a7":"!head submission.csv","ca969a4c":"Pull in digit reader"}}