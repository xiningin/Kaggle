{"cell_type":{"b41c6e6c":"code","fc04cf9b":"code","a8c1e528":"code","1cfeae92":"code","f03b6fd0":"code","879d7a00":"code","d7056e59":"code","2776d427":"code","f09521e6":"code","b18701fe":"code","457e8e7a":"code","d3957265":"code","bb4da45f":"code","2f913f85":"code","9edb15e8":"markdown","34924bfb":"markdown","13602c85":"markdown","01d00120":"markdown","95586ca3":"markdown","8543504d":"markdown","a86de226":"markdown"},"source":{"b41c6e6c":"# python3 -m pip install -U pip\n# python3 -m pip install -U setuptools wheel\n\n# Here we assume CUDA 10.1 is installed.  You should change the number\n# according to your own CUDA version (e.g. mxnet_cu100 for CUDA 10.0).\n!pip install autogluon.tabular","fc04cf9b":"from autogluon.tabular import TabularDataset, TabularPredictor\nimport pandas as pd","a8c1e528":"train_df = pd.read_csv(\"\/kaggle\/input\/exhibit-art\/dataset\/train.csv\")\ntrain_df[\"Customer Location Country Code\"] = train_df[\"Customer Location\"].astype(str).str.split(',').str[1].str.split().str[0]\ntrain_df[\"Customer Location Country No\"] = train_df[\"Customer Location\"].astype(str).str.extract('(\\d+)').astype(int)\ntrain_df[\"Customer Location Country Code\"] = train_df[\"Customer Location Country Code\"].astype('category').cat.codes\ntrain_df['Scheduled Delivery Date Difference'] =  (pd.to_datetime(train_df['Scheduled Date']) - pd.to_datetime(train_df['Delivery Date'])).dt.days\n\ntrain_df[\"Material\"] = train_df[\"Material\"].astype('category').cat.codes\ntrain_df[\"International\"] = train_df[\"International\"].astype('category').cat.codes\ntrain_df[\"Express Shipment\"] = train_df[\"Express Shipment\"].astype('category').cat.codes\ntrain_df[\"Installation Included\"] = train_df[\"Installation Included\"].astype('category').cat.codes\ntrain_df[\"Customer Information\"] = train_df[\"Customer Information\"].astype('category').cat.codes\n\ntrain_df[\"Fragile\"] = train_df[\"Fragile\"].astype('category').cat.codes\n\ntrain_df[\"Remote Location\"] = train_df[\"Remote Location\"].astype('category').cat.codes\ntrain_df[\"Transport\"] = train_df[\"Transport\"].astype('category').cat.codes\ntrain_df[\"Artist Name\"] = train_df[\"Artist Name\"].astype('category').cat.codes\ntrain_df[\"Customer Id\"] = train_df[\"Customer Id\"].astype(str).str.strip(\"fffe\")\ntrain_df = train_df.drop(['Customer Location','Scheduled Date','Delivery Date'], axis=1)\n\nfrom sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\n\nimp_mean = IterativeImputer(random_state=0)\n\ncorr = imp_mean.fit_transform(train_df[['Weight','Price Of Sculpture']])\ntrain_df[['Weight','Price Of Sculpture']] = pd.DataFrame(corr,columns=['Weight','Price Of Sculpture'])\n\n\nheight_mean = IterativeImputer(random_state=0)\n\nheight = height_mean.fit_transform(train_df[['Height','Width','Base Shipping Price','Price Of Sculpture']])\ntrain_df[['Height','Width']] = pd.DataFrame(height,columns=['Height','Width','Base Shipping Price','Price Of Sculpture'])[['Height','Width']]\n\n\nfrom sklearn.impute import KNNImputer\nimputer = KNNImputer(n_neighbors=2, weights=\"uniform\")\ntransformed = imputer.fit_transform(train_df)\ntrain_df = pd.DataFrame(transformed,columns=train_df.columns)\n\n\n# train_df =  train_df.fillna(-1)\ntrain_df.head()","1cfeae92":"\ntrain_data = TabularDataset(train_df)\nsubsample_size = 500  # subsample subset of data for faster demo, try setting this to much larger values\ntrain_data = train_data.sample(n=subsample_size, random_state=0)\ntrain_data.head()","f03b6fd0":"label = \"Cost\"\nprint(\"Summary of class variable: \\n\", train_data[label].describe())","879d7a00":"save_path = '.\/models'  # specifies folder to store trained models\npredictor = TabularPredictor(label=label, path=save_path)\n","d7056e59":"predictor.fit(train_data, presets='best_quality' ,auto_stack=True,)","2776d427":"results = predictor.fit_summary()","f09521e6":"test_df = pd.read_csv(\"\/kaggle\/input\/exhibit-art\/dataset\/test.csv\")\nsubmission_customer_ids = test_df[\"Customer Id\"]\n\n\ntest_df[\"Customer Location Country Code\"] = test_df[\"Customer Location\"].astype(str).str.split(',').str[1].str.split().str[0]\ntest_df[\"Customer Location Country No\"] = test_df[\"Customer Location\"].astype(str).str.extract('(\\d+)').astype(int)\ntest_df[\"Customer Location Country Code\"] = test_df[\"Customer Location Country Code\"].astype('category').cat.codes\ntest_df['Scheduled Delivery Date Difference'] =  (pd.to_datetime(test_df['Scheduled Date']) - pd.to_datetime(test_df['Delivery Date'])).dt.days\n\ntest_df[\"Material\"] = test_df[\"Material\"].astype('category').cat.codes\ntest_df[\"International\"] = test_df[\"International\"].astype('category').cat.codes\ntest_df[\"Express Shipment\"] = train_df[\"Express Shipment\"].astype('category').cat.codes\ntest_df[\"Installation Included\"] = test_df[\"Installation Included\"].astype('category').cat.codes\ntest_df[\"Customer Information\"] = test_df[\"Customer Information\"].astype('category').cat.codes\n\ntest_df[\"Fragile\"] = test_df[\"Fragile\"].astype('category').cat.codes\n\ntest_df[\"Remote Location\"] = test_df[\"Remote Location\"].astype('category').cat.codes\ntest_df[\"Transport\"] = test_df[\"Transport\"].astype('category').cat.codes\ntest_df[\"Artist Name\"] = test_df[\"Artist Name\"].astype('category').cat.codes\ntest_df[\"Customer Id\"] = test_df[\"Customer Id\"].astype(str).str.strip(\"fffe\")\ntest_df = test_df.drop(['Customer Location','Scheduled Date','Delivery Date'], axis=1)\n\n\nfrom sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\n\n\ncorr = imp_mean.fit_transform(test_df[['Weight','Price Of Sculpture']])\ntest_df[['Weight','Price Of Sculpture']] = pd.DataFrame(corr,columns=['Weight','Price Of Sculpture'])\n\n\nheight = height_mean.fit_transform(test_df[['Height','Width','Base Shipping Price','Price Of Sculpture']])\ntest_df[['Height','Width']] = pd.DataFrame(height,columns=['Height','Width','Base Shipping Price','Price Of Sculpture'])[['Height','Width']]\n\n\ntransformed = imputer.fit_transform(test_df)\ntest_df = pd.DataFrame(transformed,columns=test_df.columns)\n\n\n\ntest_df.head()\n","b18701fe":"\ntest_data = TabularDataset(test_df)\ncustomer_ids = test_data['Customer Id']","457e8e7a":"predictor.feature_importance(train_data)","d3957265":"y_pred = predictor.predict(test_data)","bb4da45f":"submission = pd.DataFrame()\nsubmission['Customer Id'] = customer_ids\nsubmission['Cost'] = y_pred\n\nsubmission.head()\n","2f913f85":"submission.to_csv('.\/submission.csv', index=False)","9edb15e8":"# Train Data","34924bfb":"# Predictor","13602c85":"# Imports .... Duh","01d00120":"# Summary.. Useless Anyway ","95586ca3":"# So called Training","8543504d":"# Test data with -1000 % accuracy","a86de226":"# Submission"}}