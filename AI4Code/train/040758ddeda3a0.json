{"cell_type":{"03abd17c":"code","8b22a01d":"code","a6b24d8b":"code","1536099f":"code","1a00df49":"code","f53ccbe3":"code","0983aaef":"code","bc91d0bb":"code","fd593d9f":"code","978bd524":"code","7e798da6":"code","53aab668":"code","0925c52c":"code","e6d6dd7c":"code","4ae2e83a":"code","82182710":"code","fe2ab239":"code","fc41313c":"code","f1e0f43b":"code","745c5af6":"code","b5b4cf17":"code","71f88c9a":"code","e352ac92":"code","b88bf81c":"code","ae2efe91":"code","44a3b89c":"code","eb69d7c4":"code","9a4b43aa":"code","f306e299":"code","ae909591":"markdown","fa11f055":"markdown","35a8ca75":"markdown","0c05f5cc":"markdown","91ed46ce":"markdown","806ea8b0":"markdown","a4fbc26a":"markdown","c47236f1":"markdown"},"source":{"03abd17c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8b22a01d":"import numpy as np \nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import Ridge,LinearRegression,Lasso\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nplt.style.use('seaborn')\n%matplotlib inline","a6b24d8b":"df = pd.read_csv('\/kaggle\/input\/focusing-on-mobile-app-or-website\/Ecommerce Customers')\ndf.shape","1536099f":"df.info()","1a00df49":"df.isna().sum()","f53ccbe3":"df.head()","0983aaef":"df.drop(['Email','Address'],axis=1,inplace=True)\ndf.head()","bc91d0bb":"df.corr()","fd593d9f":"df['Avatar'].unique()","978bd524":"plt.figure(figsize=(10,10))\nsns.pairplot(data=df)\nplt.show()","7e798da6":"df.columns","53aab668":"cols_to_scale = ['Avg. Session Length', 'Time on App', 'Time on Website','Length of Membership']\nscale = MinMaxScaler()\nscalled = scale.fit_transform(df[cols_to_scale])","0925c52c":"i = 0\nfor col in cols_to_scale:\n    df[col] = scalled[:,i]\n    i += 1","e6d6dd7c":"df.head()","4ae2e83a":"plt.figure(figsize=(10,10))\nsns.pairplot(data=df)\nplt.show()","82182710":"#Not Doing One hot encoding\ndf.drop('Avatar',axis=1, inplace=True)","fe2ab239":"x, y = df.drop(['Yearly Amount Spent'],axis=1),df['Yearly Amount Spent']\nx.shape,y.shape","fc41313c":"models = [LinearRegression(), Ridge(), Lasso(), KNeighborsRegressor(), SVR()]","f1e0f43b":"for model in models:\n    print(\"Model:\",model)\n    print(cross_val_score(model, x, y, cv=5))\n    print('\\n')","745c5af6":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nx_train.shape, x_test.shape, y_train.shape, y_test.shape","b5b4cf17":"model = LinearRegression()\nmodel.fit(x_train, y_train)","71f88c9a":"model.score(x_test, y_test)","e352ac92":"model.score(x_train, y_train)","b88bf81c":"y_pred_test = model.predict(x_test)\ny_pred_train = model.predict(x_train)","ae2efe91":"test = pd.DataFrame({\n    'Y test':y_test,\n    'Y test predicted':y_pred_test\n})\n\ntrain = pd.DataFrame({\n    'Y train':y_train,\n    'Y train predicted':y_pred_train\n})","44a3b89c":"plt.figure(figsize=(7,7))\nsns.scatterplot(data=test, x='Y test', y='Y test predicted')\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.title(\"Test Data\")\nplt.show()","eb69d7c4":"plt.figure(figsize=(7,7))\nsns.scatterplot(data=train, x='Y train', y='Y train predicted')\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.title(\"Train Data\")\nplt.show()","9a4b43aa":"test.sample(10)","f306e299":"train.sample(10)","ae909591":"# **Dropping Email and Address columns**","fa11f055":"# **Linear Regression Model building and predictions**","35a8ca75":"# **Train Data**","0c05f5cc":"# **Feature Scaling**","91ed46ce":"# **Cross val scores of various models**","806ea8b0":"# **Model Splitting and Traning**","a4fbc26a":"# **Actual VS Predicted**","c47236f1":"# **Test Data**"}}