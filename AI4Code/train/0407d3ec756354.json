{"cell_type":{"65ecf7df":"code","86e18aa5":"code","458a38ae":"code","0012b694":"code","72b0825d":"code","a723eacc":"code","a009d1f2":"code","c81cb8d6":"code","7c428328":"code","1b985c47":"code","7f319152":"code","f83bf97b":"code","76135202":"code","c377322e":"markdown","19c34a0c":"markdown"},"source":{"65ecf7df":"import pandas as pd\nimport numpy as np\ndata = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","86e18aa5":"data","458a38ae":"data['DEATH_EVENT'] = data['DEATH_EVENT'].replace(0,-1)","0012b694":"data","72b0825d":"from sklearn.model_selection import train_test_split\ndata_latih,data_uji = train_test_split(data,test_size=0.2, random_state = 1)","a723eacc":"print(data_uji.shape[0])\nprint(data_latih.shape[0])","a009d1f2":"label_latih = data_latih.pop('DEATH_EVENT')\nlabel_uji = data_uji.pop('DEATH_EVENT')","c81cb8d6":"def hitung_cost_gradient(W,X,Y,regularization) :\n  jarak = 1 - (Y* np.dot(X,W))\n  dw = np.zeros(len(W))\n  if max(0,jarak)==0:\n    di=W\n  else:\n    di = W - (regularization * Y*X)\n    dw += di\n  return dw","7c428328":"from sklearn.utils import shuffle\ndef sgd(data_latih,label_latih,learning_rate = 0.000001,max_epoch=1000,regularization=10000):\n  data_latih = data_latih.to_numpy()\n  label_latih = label_latih.to_numpy()\n  bobot = np.zeros(data_latih.shape[1])\n  for epoch in range(1,max_epoch):\n    X,Y = shuffle(data_latih,label_latih,random_state=1)\n    for index,x in enumerate(X):\n      delta = hitung_cost_gradient(bobot,x,Y[index],regularization)\n      bobot = bobot - (learning_rate * delta)\n    return bobot","1b985c47":"W = sgd(data_latih,label_latih)\nprint(W)","7f319152":"def testing(W,data_uji):\n  prediksi = np.array([])\n  for i in range(data_uji.shape[0]):\n    y_prediksi = np.sign(np.dot(W,data_uji.to_numpy()[i]))\n    prediksi = np.append(prediksi,y_prediksi)\n  return prediksi","f83bf97b":"y_prediksi = testing(W,data_uji)\nprint(sum(y_prediksi==label_uji))","76135202":"data_uji","c377322e":"## 1. Proses Training","19c34a0c":"## 2. Proses Testing"}}