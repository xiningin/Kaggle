{"cell_type":{"d7f25e01":"code","bb5a98dd":"code","f55b0cae":"code","01157a1e":"code","5fff6213":"code","c5809751":"code","40be1659":"code","d7c97f49":"code","85f01a03":"code","90a6588c":"code","b55b6db9":"code","764a6a72":"code","338f9098":"code","cdefda30":"code","5df4f796":"code","3c06941c":"code","fe6e1a88":"code","12cc3587":"code","84ff2070":"code","df8c95ca":"code","5bc94633":"code","6bbdf0c1":"code","cb6fa250":"code","f146f3a6":"code","98167ab7":"code","9ff833c2":"code","7ec62e4e":"code","54d9cbd0":"code","eca3ddd4":"code","19f15703":"code","62e2d20a":"code","194c4c9f":"code","67db5194":"code","14a91d6e":"code","54a933c8":"code","bac7dd7c":"code","62a58ccc":"code","239b82d3":"code","eb2ae65e":"code","7a68b32c":"code","915cabff":"code","6a6ceab3":"code","e2e51fc7":"code","9cd95c91":"code","9d3df326":"code","662e62ca":"code","789db692":"code","91133e6f":"code","78f414fd":"code","d728667a":"code","26fe7d74":"code","de91fe0a":"code","415d2856":"code","867b8be5":"code","56322fbe":"code","088170ad":"code","0eb7ad92":"code","67eac419":"code","d928c058":"code","8c1a6711":"code","5e31382d":"code","e3c2fc20":"code","a0b89a39":"code","c61c3e9f":"markdown","b7a93a48":"markdown","bef071d7":"markdown","cf95e8f2":"markdown","96efc201":"markdown","48907e4e":"markdown","18f9b9e7":"markdown","8be15016":"markdown","f621cf41":"markdown","b2456005":"markdown","b2c294b1":"markdown","43afdc22":"markdown","c8f3e73f":"markdown","a326f5ec":"markdown","0bcfb724":"markdown","3736f2a8":"markdown","b26ac565":"markdown","45bcc4e0":"markdown","5b79598a":"markdown","e3e3a1b3":"markdown","275fafe1":"markdown","d03b36a7":"markdown","a0cbe4ef":"markdown","26c93631":"markdown","7cebaa8c":"markdown","c749fd4b":"markdown","593008df":"markdown","3a840158":"markdown","8cc8df73":"markdown","3e8b22b1":"markdown","5c57bae6":"markdown","5db89ab5":"markdown","ba3a1029":"markdown","a61b970d":"markdown","81c42a73":"markdown","a98ecf22":"markdown","f1949808":"markdown","4aeb0ef3":"markdown","fa4c57f8":"markdown"},"source":{"d7f25e01":"# import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nimport datetime as dt\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","bb5a98dd":"!pip install openpyxl","f55b0cae":"df=pd.read_excel('..\/input\/online-store-data\/RetailStoreData.xlsx')","01157a1e":"df","5fff6213":"df.describe()","c5809751":"df[df['Price']<0]","40be1659":"df = df.drop(df[df['Price']<0].index)","d7c97f49":"df[df['Quantity']<0]","85f01a03":"df = df.drop(df[df['Quantity']<0].index)","90a6588c":"#Find duplicates\ndf[df.duplicated()]","b55b6db9":"# Drop duplicates\ndf.drop_duplicates(inplace=True)","764a6a72":"df.shape","338f9098":"# No duplicates left\ndf[df.duplicated()]","cdefda30":"df.info()","5df4f796":"df.isnull().sum()","3c06941c":"print('NULL values in description:',df['Description'].isnull().sum())","fe6e1a88":"df[(df['Description'].isnull()) & (df['Customer ID'].isnull()) & (df['Price']==0.0)]","12cc3587":"df = df.drop(df[(df['Description'].isnull()) & (df['Customer ID'].isnull()) & (df['Price']==0.0)].index)","84ff2070":"# All types of Country\ndf['Country'].value_counts()","df8c95ca":"# number of unique customers after removing Nan values\nlen(df['Customer ID'].dropna().unique())","5bc94633":"min(df['InvoiceDate'])","6bbdf0c1":"max(df['InvoiceDate'])","cb6fa250":"cust_by_country=df[['Customer ID','Country']].dropna().drop_duplicates().groupby('Country').count()","f146f3a6":"cust_by_country.sort_values(by='Customer ID',ascending=False,inplace=True)","98167ab7":"lbl=cust_by_country.sort_values(by='Customer ID',ascending=False).index","9ff833c2":"lbl.values","7ec62e4e":"cust_by_country","54d9cbd0":"plt.figure(figsize=(10,10))\nplt.pie(cust_by_country['Customer ID'],labels=lbl.values,textprops={'fontsize': 8});\nplt.legend(loc='upper right')\nplt.show()","eca3ddd4":"df.describe()","19f15703":"df","62e2d20a":"price_segm=df.groupby('Customer ID').sum().sort_values(by='Price',ascending=False)","194c4c9f":"price_segm.rename(columns={'Price':'Total Money spend by Customer'},inplace=True)","67db5194":"price_segm","14a91d6e":"Rich_cust=price_segm[price_segm['Total Money spend by Customer']>3000]","54a933c8":"Middile_cust=price_segm[((price_segm['Total Money spend by Customer']>100) & (price_segm['Total Money spend by Customer']<=3000))]","bac7dd7c":"Poor_cust=price_segm[price_segm['Total Money spend by Customer']<=100]","62a58ccc":"print(f'Number of Rich Customers: {len(Rich_cust)}, Middile class customers: {len(Middile_cust)} & Poor Customer: {len(Poor_cust)} ')","239b82d3":"cust_division=np.array([len(Rich_cust),len(Middile_cust),len(Poor_cust)])\ncust_label=np.array(['Rich','Middile Class', 'Poor'])\n# cust_explode=[0.3,0.2,0]","eb2ae65e":"plt.pie(cust_division,labels=cust_label,shadow=True,autopct='%1.2f')\nplt.legend()\nplt.show()","7a68b32c":"# Let's create a new column with month\ndf['Invoice_Month']= pd.DatetimeIndex(df['InvoiceDate']).month","915cabff":"df","6a6ceab3":"Customer_id_month1=set(df[df['Invoice_Month']==1]['Customer ID'].dropna())     #unique Customers  ID who purchased in 1st month\nCustomer_id_month2=set(df[df['Invoice_Month']==2]['Customer ID'].dropna())     #unique Customers  ID who purchased in 2nd month\nCustomer_id_month3=set(df[df['Invoice_Month']==3]['Customer ID'].dropna())     #unique Customers  ID who purchased in 3rd month\nCustomer_id_month4=set(df[df['Invoice_Month']==4]['Customer ID'].dropna())     #unique Customers  ID who purchased in 4th monthd\nCustomer_id_month5=set(df[df['Invoice_Month']==5]['Customer ID'].dropna())     #unique Customers  ID who purchased in 5th month\nCustomer_id_month6=set(df[df['Invoice_Month']==6]['Customer ID'].dropna())     #unique Customers  ID who purchased in 6th month\nCustomer_id_month7=set(df[df['Invoice_Month']==7]['Customer ID'].dropna())     #unique Customers  ID who purchased in 7th month\nCustomer_id_month8=set(df[df['Invoice_Month']==8]['Customer ID'].dropna())     #unique Customers  ID who purchased in 8th month\nCustomer_id_month9=set(df[df['Invoice_Month']==9]['Customer ID'].dropna())     #unique Customers  ID who purchased in 9th month\nCustomer_id_month10=set(df[df['Invoice_Month']==10]['Customer ID'].dropna())   #unique Customers  ID who purchased in 10th month\nCustomer_id_month11=set(df[df['Invoice_Month']==11]['Customer ID'].dropna())   #unique Customers  ID who purchased in 11th month\nCustomer_id_month12=set(df[df['Invoice_Month']==12]['Customer ID'].dropna())   #unique Customers  ID who purchased in 12th month","e2e51fc7":"# take intersection of all month Customer ID to find the loyal Customers\nLoyal_Customer_ID=Customer_id_month1.intersection(Customer_id_month2,Customer_id_month3,Customer_id_month4,Customer_id_month5,Customer_id_month6,Customer_id_month7,Customer_id_month8,Customer_id_month9,Customer_id_month10,Customer_id_month11,Customer_id_month12)","9cd95c91":"len(Loyal_Customer_ID)","9d3df326":"loyal_cc=np.array([len(Loyal_Customer_ID),len(df['Customer ID'].dropna().unique()) -len(Loyal_Customer_ID)])\nloyal_label=np.array(['Loyal Customers','Non-Loyal Customers'])","662e62ca":"plt.pie(loyal_cc,labels=loyal_label,shadow=True,autopct='%1.2f')\nplt.legend()\nplt.show()","789db692":"Month_wise_sales=df.groupby('Invoice_Month').sum()","91133e6f":"del Month_wise_sales['Quantity']\ndel Month_wise_sales['Customer ID']","78f414fd":"# Month wise sales in descending order\nMonth_wise_sales.sort_values(by='Price',ascending=False)","d728667a":"Month_wise_sales.plot(kind='bar',color='y',ylabel='Sales',title='Month Wise Sales')","26fe7d74":"fig, axs = plt.subplots(figsize=(12, 4))\ndf.groupby(df['InvoiceDate'].dt.day)[\"Price\"].sum().plot(kind='bar', rot=0, ax=axs,xlabel='Day of Month',ylabel='Sales',title='Day Wise Sales for 1 Complete year')","de91fe0a":"fig, axs = plt.subplots(figsize=(12, 4))\ndf.groupby(df['InvoiceDate'].dt.hour)[\"Price\"].sum().plot(kind='bar',color='g', rot=0, ax=axs,xlabel='Opening hours of store',ylabel='Sales',title='Hours Wise Sales for 1 Complete year')","415d2856":"Customers_Lifetime_df=df.groupby('Customer ID').sum()","867b8be5":"del Customers_Lifetime_df['Invoice_Month']\ndel Customers_Lifetime_df['Quantity']","56322fbe":"Customers_Lifetime_df.rename(columns={'Price':'CLV'},inplace=True)","088170ad":"Customers_Lifetime_df.sort_values(by='CLV',ascending=False)","0eb7ad92":"df['StockCode'].value_counts","67eac419":"print('Number of unique items sold in the store in 1 year:',len(df['Description'].dropna().unique()))","d928c058":"df['Description'].value_counts()","8c1a6711":"df['Description'].value_counts()[:50].plot(kind='bar',figsize=(15,10),ylabel='Number of times Product Sold',title='Top 50 Product Sales')","5e31382d":"prod_with_1_sale=df['Description'].value_counts()[df['Description'].value_counts()==1]","e3c2fc20":"print(f'There are {len(prod_with_1_sale)} Product which is Sold only once.')","a0b89a39":"prod_with_1_sale","c61c3e9f":"* Theres is no as such good pattern at the Day wise Sales.\n\n\n\n\n\n\n","b7a93a48":"Now, We can calculate Price spend By Each Customer ID Over a span of Year to calculate Customer's Lifetime value.","bef071d7":"IF YOU LIKE THE KERNAL. PLEASE DO UPVOTE.","cf95e8f2":"## INFERENCE FROM DESCRIPTION","96efc201":"`This is a 4314 unique Customers data of almost 1 year from 1st Dec 2009 to 09th Dec 2010.`","48907e4e":"THANK YOU.","18f9b9e7":"***Checking Duplicate rows in data***","8be15016":"This is the Customers Lifetime Value in Decreasing Order.","f621cf41":"***Assuming Customer lifetime value refers to the entire amount a business earns from the average customer over the course of their relationship with the business.***","b2456005":"***Description***","b2c294b1":"So, there are 4314 Customers coming to the Retail store","43afdc22":"* Highest Sales of Store is in `DECEMBER`\n* Sales is low in month from Jan-Feb &  then get a Sudden Jump in Months of March & June . After the Month of August Sales Continously Increases.\n","c8f3e73f":"# Exploratory Data Analysis","a326f5ec":"Now, Let's assume some Thresholds according to data:\n* Customers who spend more then 3000 per year are `Rich` Customers.\n* Customers who spend more then 100 and less then 3000 per year are `middile class` Customers.\n* Customers who spend less then 100  per year are `Poor` Customers.","0bcfb724":"6841 number of duplicate rows","3736f2a8":"## Customer's lifetime Value(CLV)","b26ac565":"## Loyal Customers","45bcc4e0":"`Loyal Customers can be defined as which shop on retail store on regular basis. Let's consider Customers who Purchase from store for Each Consecutive Month in a year are Loyal.`","5b79598a":"* In 1 year of Span we will find the sum of Money spend by each Customer in Store and divide  our Target Customers accordingly which can be a Enhancing Factor to which type of Customer we should Promote which type of Products.","e3e3a1b3":"We have some missing values in `Description` & `CustomerID`","275fafe1":"We find the unique set of customerId in all month and take intersection of all IDs. Ids which have consecutively Purchased for all months are Loyal.","d03b36a7":"`One thing notice from above df.decribe is that the min price is negative. Since negative Price is Not possible Let's see how many rows have negative price.`","a0cbe4ef":"***Top 50 Products which has a Highest Sale in the Store.***\n\n***WHITE HANGING HEART T-LIGHT HOLDER has a Highest Sale in the Store***","26c93631":"#### Let's try to Segment Customers according to country","7cebaa8c":"Since there are only 3 negative price rows. So, we can delete them.","c749fd4b":"## INFERENCE 1\n\n* This is a 4314 unique Customers data of almost 1 year from 1st Dec 2009 to 09th Dec 2010.\n* Majority of the customers is from United Kingdom.\n* What I got intuition from it is that either a store is situated in UK and some other countries people also live in UK so they are also customers that'why so less in numbers OR a store has its franchise in different countries but it's most popular in UK.","593008df":"So, negative quantity doen't signify anything. So, we need to delete them.","3a840158":"## INFERENCE 2\n\n* We have Segmented Customers on the basis of `Rich`-0.56% , `Middle class`- 58.81% , `poor`-40.64% .\n* We have Segmented Customers on the basis of `Loyal Customers` -1.04%  & `Non-Loyal Customers`- 98.96%\n* Highest Sales of Store is in `DECEMBER`\n* Sales is low in month from Jan-Feb &  then get a Sudden Jump in Months of March & June . After the Month of August Sales Continuously Increases.\n* There is no as such good pattern at the Day wise Sales.\n* From the Hourwise Sales it can be seen clearly that at the Mid of the day Sales get Higher","8cc8df73":"#### If you gain some Knowledge Please Upvote the Notebook","3e8b22b1":"## Most Popular Sales Time (Seasonability)","5c57bae6":"#### I tried to bring the Insights from the Retail Store data for 1 year.  More Insights can be Drawn from the data You can try your hands on the data.","5db89ab5":"#### Delete Unnecessary rows","ba3a1029":"CHECK MY OTHER NOTEBOOKS: https:\/\/www.kaggle.com\/harshwalia\/code?scroll=true","a61b970d":"These 1101 rows have `NO Description`,  `Price=0` &  `Customer ID='NaN'`. So, these rows are not useful to us. So, delete these rows.","81c42a73":"* This Dataset contains all transactions occuring in a store.\n* I tried to bring some Insights from the Dataset to help the businness grow and improve.","a98ecf22":"#### missing values","f1949808":"So, there are just 1.04% of Loyal Customers.","4aeb0ef3":"***From the Hourwise Sales it can be seen clearly that at the Mid of the day Sales get Higher***","fa4c57f8":"## Segment Customers in (Rich, Middle class & Poor)"}}