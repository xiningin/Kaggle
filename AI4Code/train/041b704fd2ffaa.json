{"cell_type":{"7cb774da":"code","87a506b5":"code","d920b7c3":"code","fe8fcbe4":"code","b98f3d1e":"code","25785288":"code","de9fa6d1":"code","d8f8952b":"code","549576fb":"code","b3f93e03":"code","8e09a560":"code","a3cb5c6d":"code","f51e8474":"code","bc0cfc98":"code","232cc7f2":"code","62b36762":"markdown","45f5c9bb":"markdown","335cce6c":"markdown","d54d25cb":"markdown","345de9ce":"markdown","5c37ec13":"markdown","b7d8bcba":"markdown","32ecf2cf":"markdown"},"source":{"7cb774da":"\nimport numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Modelling \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression\n\nimport warnings\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87a506b5":"data = pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndata.head()","d920b7c3":"print(data.dtypes)\nprint(data.shape)","fe8fcbe4":"# checking the number of unique entries in each column.\ndata.nunique()","b98f3d1e":"categorical_vars = ['gender','race\/ethnicity','parental level of education','lunch','test preparation course']\nnumerical_vars = ['math score','reading score','writing score']","25785288":"data[numerical_vars].describe().transpose()","de9fa6d1":"fig,ax = plt.subplots(1,3, figsize = (12,6))\nsns.histplot(data, x = 'math score', bins = 20, ax = ax[0])\nsns.histplot(data, x = 'reading score', bins = 20, ax = ax[1])   \nsns.histplot(data, x = 'writing score', bins = 20, ax = ax[2])","d8f8952b":"fig,ax = plt.subplots(1,3, figsize = (20,6))\nsns.boxplot( x = data['math score'], ax = ax[0])\nsns.boxplot(x = data['reading score'], ax = ax[1])   \nsns.boxplot(x = data['writing score'], ax = ax[2])","549576fb":"# fig,ax = plt.subplots(1,2, figsize = (12,6))\nsns.catplot(data = data, y = 'math score', x = 'gender')","b3f93e03":"sns.boxplot(data = data, x = 'math score', y = 'race\/ethnicity')","8e09a560":"sns.countplot(data = data,x = 'race\/ethnicity')","a3cb5c6d":"sns.countplot(data = data,x = 'race\/ethnicity', hue = 'gender')","f51e8474":"rp = sns.catplot(data = data[data['race\/ethnicity'] == 'group A'],x = 'math score', y = 'gender')\nrp.fig.suptitle('Group A Math score by Gender')","bc0cfc98":"rp = sns.catplot(data = data[data['race\/ethnicity'] == 'group A'],y = 'reading score', x = 'test preparation course')\nrp.fig.suptitle('Group A reading by prep course')","232cc7f2":"sns.countplot(data = data, x = 'race\/ethnicity', hue = 'lunch')","62b36762":"### Graphical univariate analysis of scores","45f5c9bb":"### Boxplots","335cce6c":"# Data Preparation","d54d25cb":"### Statistical summary of numeric variables","345de9ce":"### Identification of data types and size","5c37ec13":"## Environment setup","b7d8bcba":"#### Histograms (aka countplots)","32ecf2cf":"### Visualizing scores of separate categories"}}