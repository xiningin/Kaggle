{"cell_type":{"0078f822":"code","4fcc0a37":"code","fd661687":"code","279ea361":"code","3b24d9a5":"code","c72a0b5e":"code","96c973b9":"code","5fccd20e":"code","b14ef26c":"code","5a9315a1":"code","72dd3fc1":"code","37987c9d":"code","e05f5c6c":"code","1d363e4b":"code","1d6dbd07":"code","8765f873":"code","77c35e32":"markdown"},"source":{"0078f822":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4fcc0a37":"#Extracting the data\ndataset=pd.read_csv('..\/input\/Iris.csv')","fd661687":"dataset.head()","279ea361":"#dropping 1st column i.e 'Id' as it is not required\ndataset=dataset.drop('Id',axis=1)","3b24d9a5":"#Data Visualization\nplt.scatter(dataset[dataset.Species=='Iris-setosa'].SepalLengthCm,dataset[dataset.Species=='Iris-setosa'].SepalWidthCm,c='b',marker='o',s=10,label='Iris-setosa')\nplt.scatter(dataset[dataset.Species=='Iris-virginica'].SepalLengthCm,dataset[dataset.Species=='Iris-versicolor'].SepalWidthCm,c='y',marker='o',s=10,label='Iris-versicolor')\nplt.scatter(dataset[dataset.Species=='Iris-virginica'].SepalLengthCm,dataset[dataset.Species=='Iris-virginica'].SepalWidthCm,c='r',marker='o',s=10,label='Iris-virginica')\nplt.legend()\nplt.xlabel('SepalLengthCm')\nplt.ylabel('SepalWidthCm')\n\nplt.show()","c72a0b5e":"plt.scatter(dataset[dataset.Species=='Iris-setosa'].PetalLengthCm,dataset[dataset.Species=='Iris-setosa'].PetalWidthCm,c='b',marker='o',s=10,label='Iris-setosa')\nplt.scatter(dataset[dataset.Species=='Iris-virginica'].PetalLengthCm,dataset[dataset.Species=='Iris-versicolor'].PetalWidthCm,c='y',marker='o',s=10,label='Iris-versicolor')\nplt.scatter(dataset[dataset.Species=='Iris-virginica'].PetalLengthCm,dataset[dataset.Species=='Iris-virginica'].PetalWidthCm,c='r',marker='o',s=10,label='Iris-virginica')\nplt.legend()\nplt.xlabel('PetalLengthCm')\nplt.ylabel('PetalWidthCm')\n\nplt.show()","96c973b9":"dataset.hist(edgecolor='black')\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","5fccd20e":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=dataset)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=dataset)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=dataset)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=dataset)","b14ef26c":"#Checking any missing value\ndataset.isnull().sum()","5a9315a1":"X=dataset.iloc[:,[0,1,2,3]].values\ny=dataset.iloc[:,[4]].values","72dd3fc1":"#Splitting data into train and test\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)","37987c9d":"#Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nlog_classifier=LogisticRegression()\nlog_classifier.fit(X_train,y_train)\ny_log=log_classifier.predict(X_test)","e05f5c6c":"#Support Vector Machines\nfrom sklearn.svm import SVC\nsvm_classifier=SVC()\nsvm_classifier.fit(X_train,y_train)\ny_svm=svm_classifier.predict(X_test)\n","1d363e4b":"#K Nearest Neighbors\nfrom sklearn.neighbors import KNeighborsClassifier\nknn_classifier=KNeighborsClassifier(n_neighbors=5)\nknn_classifier.fit(X_train,y_train)\ny_knn=knn_classifier.predict(X_test)","1d6dbd07":"#Decision Tree Classification\nfrom sklearn.tree import DecisionTreeClassifier\ndtc_classifier=DecisionTreeClassifier()\ndtc_classifier.fit(X_train,y_train)\ny_dtc=dtc_classifier.predict(X_test)","8765f873":"#Computing accuracy of each algorithm\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nprint('Accuracy of Logistic Regression:')\nprint(accuracy_score(y_test,y_log))\nprint('Accuracy of Support Vector Machine:')\nprint(accuracy_score(y_test,y_svm))\nprint('Accuracy of K Nearest Neighbors:')\nprint(accuracy_score(y_test,y_knn))\nprint('Accuracy of Decision Tree Classification:')\nprint(accuracy_score(y_test,y_dtc))\n","77c35e32":"Thank you"}}