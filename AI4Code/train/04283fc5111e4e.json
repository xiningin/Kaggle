{"cell_type":{"66a0e606":"code","7058ee77":"code","a4145f84":"code","744a344a":"code","4b0a8cfc":"code","35c47246":"code","563c0c4a":"code","8e04d20c":"code","165196c0":"code","9d067663":"code","75cf3f53":"code","62cfac6e":"code","524a4cb8":"code","523fe0ab":"code","2460f1aa":"code","9ae5e957":"code","c567c929":"code","34c58795":"code","01ecdb50":"code","678fafe0":"code","30fbb443":"code","5df5b79c":"code","c8288fc5":"code","2b57615b":"code","1cf32454":"code","8f4fdf9b":"code","4ac21af2":"code","fab62ad5":"code","bdce6af0":"code","05102991":"code","be7c7ce2":"code","e297a0bc":"code","f70c8ef3":"code","b6684f41":"code","790c7d5e":"code","0275402b":"code","1424cabb":"code","55cf711c":"code","e4ea2797":"code","f0758ba5":"code","97b9d685":"code","0800ccff":"code","2c461ff2":"code","53262965":"code","1379c15d":"code","fc59ae1a":"code","5d16c298":"code","278337b4":"code","e17f9cdb":"code","7b19248f":"code","0ac46e44":"code","324fbda2":"code","ac8fbbf3":"code","9c567713":"code","6f4c38df":"code","5e167cc6":"code","2c01cd85":"code","55e0fb38":"code","de69ca6d":"code","ba061364":"code","6b7460d6":"code","2ce35269":"code","94aa2a38":"code","b876dc36":"code","f24cf34e":"code","44167331":"code","388ebc19":"code","74785093":"code","406830dc":"code","8973b145":"code","589d956b":"markdown","4f7ae9ac":"markdown","55df5134":"markdown","507e2e15":"markdown","165ad46f":"markdown","c17323cf":"markdown","458d05dd":"markdown","77642cd5":"markdown","c8cd646b":"markdown","d655b4d5":"markdown","9270a8bf":"markdown","672bf85d":"markdown","ee52e150":"markdown","e23d3768":"markdown","f91e3e21":"markdown","0250cece":"markdown","ca246f49":"markdown","c7791358":"markdown","d3bce3de":"markdown","4cadb0b3":"markdown","4e3118be":"markdown","5dce5b36":"markdown","42c41a83":"markdown","11b641ce":"markdown"},"source":{"66a0e606":"#https:\/\/www.kaggle.com\/harlfoxem\/housesalesprediction\/tasks?taskId=955","7058ee77":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","a4145f84":"from sklearn import linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score, accuracy_score, mean_absolute_error","744a344a":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler","4b0a8cfc":"pd.options.display.float_format = \"{:.2f}\".format","35c47246":"df=pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","563c0c4a":"df.head(2)","8e04d20c":"df1=df.drop(['id','date'],axis=1)\nprint('Creating a new dataframe by dropping ID and Date Columns.')","165196c0":"round(df1.describe(),1)","9d067663":"df1.isnull().sum().sum()","75cf3f53":"np.isnan(df1).sum().sum()","62cfac6e":"fig, ax = plt.subplots(1,1,figsize=(20,6))\nsns.boxplot(df1['price'])\nax.set(title='Box Plot')\nax.set_ylim(-0.7,0.7)\nq1=df1['price'].quantile(0.25)\nq2=df1['price'].quantile(0.5)\nq3=df1['price'].quantile(0.75)\niqr=q3-q1\nmin=df1['price'].min()\nmax_iqr=q3+1.5*iqr\nmax=df1['price'].max()\nax.annotate(str(min),(min-90000,0.23))\nax.annotate(str(q1),(q1,0.43))\nax.annotate(str(q2),(q2,-0.45))\nax.annotate(str(q3),(q3,0.2))\nax.annotate(str(max_iqr),(max_iqr,0.2))\nax.annotate(str(max),(max-40000,0.05))\nax.annotate(str('4000000'),(4000000,0.05))\n\n#Number of values which are below and above MAX (q3+1.5iqr)\n\nbelow_maxiqr=df1['price'][df1['price']<=max_iqr].count()\nabove_maxiqr=df1['price'][df1['price']>max_iqr].count()\n\nax.annotate(str(below_maxiqr)+' Houses below '+str(max_iqr),(min,-0.6))\nax.annotate(str(above_maxiqr)+' Houses above '+str(max_iqr)+' : Outliers',(1500000,-0.6))","524a4cb8":"outliers=1146\/(20467+1146)*100\nprint('There are '+str(round(outliers,3))+'% outliers in the house prices.')","523fe0ab":"df1=df1[df1['price']<4000000]","2460f1aa":"fig, ax = plt.subplots(1,1,figsize=(23,6))\nsns.boxplot(df1['price'])\nax.set(title='Box Plot')\nax.set_ylim(-0.7,0.7)\nq1=df1['price'].quantile(0.25)\nq2=df1['price'].quantile(0.5)\nq3=df1['price'].quantile(0.75)\niqr=q3-q1\nmin=df1['price'].min()\nmax_iqr=q3+1.5*iqr\nmax=df1['price'].max()\nax.annotate(str(min),(min,0.23))\nax.annotate(str(q1),(q1,0.43))\nax.annotate(str(q2),(q2,-0.45))\nax.annotate(str(q3),(q3,0.2))\nax.annotate(str(max_iqr),(max_iqr,0.2))\nax.annotate(str(round(max,1)),(max,-0.25))\n\n#Number of values which are below and above MAX (q3+1.5iqr)\n\nbelow_maxiqr=df1['price'][df1['price']<=max_iqr].count()\nabove_maxiqr=df1['price'][df1['price']>max_iqr].count()\n\nax.annotate(str(below_maxiqr)+' Houses below '+str(max_iqr),(min,-0.6))\nax.annotate(str(above_maxiqr)+' Houses above '+str(max_iqr)+' : Outliers',(700000,-0.6))","9ae5e957":"df.count()[0]-df1.count()[0]","c567c929":"fig,ax=plt.subplots(figsize=(15,10))\nsns.heatmap(df1.corr(),annot=True,cmap='RdYlGn',fmt='.2f')","34c58795":"from scipy import stats\ncorr_df = pd.DataFrame(columns=['correlation','p-value','feature'])\nc=[]\np=[]\nindex=[]\nfor i in df1:\n    x=stats.pearsonr(df1['price'],df1[i])\n    c.append(round(x[0],3))\n    p.append(round(x[1],5))\n    index.append(i)\ncorr_df['correlation']=c\ncorr_df['p-value']=p\ncorr_df['feature']=index\ncorr_df.set_index('feature',inplace=True)","01ecdb50":"corr_df.sort_values(by='correlation',ascending=False)","678fafe0":"df1.nunique().sort_values()","30fbb443":"fig,ax=plt.subplots(figsize=(20,6))\nsns.countplot(df['bedrooms'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+100))","5df5b79c":"df1=df1[df1['bedrooms']<9]\nprint('Removed data of houses where number of bedrooms is 9 or more')","c8288fc5":"df1=df1[df1['bedrooms']>0]\nprint('Removed data of houses where number of bedrooms is 0 or less')","2b57615b":"fig,ax=plt.subplots(figsize=(20,6))\nsns.countplot(df['bathrooms'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+100))","1cf32454":"df1=df1[df1['bathrooms']<4.75]\nprint('Removed data of houses where number of bathrooms is 4.75 or more')\ndf1=df1[df1['bathrooms']>0.5]\nprint('Removed data of houses where number of bathrooms is 0.5 or less')","8f4fdf9b":"x='sqft_living'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+100))","4ac21af2":"x='sqft_living'\nval=7850\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","fab62ad5":"x='sqft_lot'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+100))","bdce6af0":"x='sqft_lot'\nval=444233 #444233 is used instead of 496000 here as you will notice that after using 496000 there are still some outliers beyong 444233\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","05102991":"fig,ax=plt.subplots()\nsns.countplot(df['floors'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+100))","be7c7ce2":"x='floors'\nval=3.5\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","e297a0bc":"fig,ax=plt.subplots()\nsns.countplot(df['waterfront'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+200))","f70c8ef3":"fig,ax=plt.subplots()\nsns.countplot(df['view'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+200))","b6684f41":"fig,ax=plt.subplots()\nsns.countplot(df['condition'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+100))","790c7d5e":"fig,ax=plt.subplots()\nsns.countplot(df['grade'],ax=ax)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+100))","0275402b":"x='grade'\nval=3\ndf1=df1[df1[x]>val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or less.')","1424cabb":"x='grade'\nval=13\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","55cf711c":"x='sqft_above'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+100))","e4ea2797":"x='sqft_above'\nval=6674\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","f0758ba5":"x='sqft_basement'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+100))","97b9d685":"x='sqft_basement'\nval=2410 #2410 is used as more outliers were spotted after removing those above 2892\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","0800ccff":"fig,ax=plt.subplots(figsize=(20,6))\nsns.countplot(df['yr_built'],ax=ax)\nax.xaxis.set_tick_params(rotation=90)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+1))","2c461ff2":"fig,ax=plt.subplots(figsize=(20,6))\nsns.countplot(df['yr_renovated'],ax=ax)\nax.xaxis.set_tick_params(rotation=90)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+1))","53262965":"fig,ax=plt.subplots(figsize=(20,6))\nsns.countplot(df['zipcode'],ax=ax)\nax.xaxis.set_tick_params(rotation=90)\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x(),i.get_height()+1))","1379c15d":"x='sqft_living15'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+80))","fc59ae1a":"x='sqft_living15'\nval=5048\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","5d16c298":"x='sqft_lot15'\nfig,ax=plt.subplots(figsize=(15,4))\nplt.hist(df[x])\nax.set_xlabel(x)\nminy=df[x].min()\nmaxy=df[x].max()\nticksize=(maxy-miny)\/10\nax.xaxis.set(ticks=np.arange(miny,maxy+ticksize,ticksize))\nfor i in ax.patches:\n    ax.annotate(str(i.get_height()),(i.get_x()+ticksize\/3,i.get_height()+100))","278337b4":"x='sqft_lot15'\nval=261816\ndf1=df1[df1[x]<val]\nprint('Removed data of houses where '+x+' is '+str(val)+' or more.')","e17f9cdb":"fig,ax=plt.subplots(figsize=(20,7))\nplt.scatter(df['lat'],df['long'],c=df['price'],cmap='RdYlGn')\nplt.xlabel('Lattitude')\nplt.ylabel('Longtitude')\nplt.colorbar()","7b19248f":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['bedrooms']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","0ac46e44":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['bathrooms']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","324fbda2":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['floors']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","ac8fbbf3":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['view']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","9c567713":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['condition']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","6f4c38df":"fig,ax=plt.subplots(figsize=(20,7))\nx=df1['grade']\ny=df1['price']\nsns.boxplot(x,y,ax=ax)","5e167cc6":"sns.lmplot(x='sqft_living',y='price',data=df1)","2c01cd85":"sns.lmplot(x='sqft_lot',y='price',data=df1)","55e0fb38":"sns.lmplot(x='sqft_above',y='price',data=df1)","de69ca6d":"sns.lmplot(x='sqft_basement',y='price',data=df1)","ba061364":"sns.lmplot(x='sqft_living15',y='price',data=df1)","6b7460d6":"sns.lmplot(x='sqft_lot15',y='price',data=df1)","2ce35269":"sns.lmplot(x='yr_built',y='price',data=df1)","94aa2a38":"sns.lmplot(x='yr_renovated',y='price',data=df1)","b876dc36":"model_ft=['sqft_living','grade','sqft_living15','sqft_above','bathrooms','view','lat','bedrooms','sqft_basement',\n         'floors','waterfront']\nprint('We will use these Features to build the model : '+str(model_ft))\nprint('Number of features: '+str(len(model_ft)))","f24cf34e":"X=df1[model_ft]\ny=df1['price']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,random_state=1)","44167331":"linear=linear_model.LinearRegression()\nlinear.fit(X_train,y_train)","388ebc19":"linear.coef_","74785093":"model_coef = pd.DataFrame(model_ft,columns=['Feature'])\nmodel_coef['Coefficient']=linear.coef_\nmodel_coef","406830dc":"yhat_linear=linear.predict(X_test)","8973b145":"r2_linear = r2_score(y_test,yhat_linear)\nprint('The r2 value (Goodness of Fit) is: '+str(r2_linear))\nmae_linear=mean_absolute_error(y_test,yhat_linear)\nprint('The Mean Absolute Error value is: '+str(mae_linear))\nmse_linear=mean_squared_error(y_test,yhat_linear)\nprint('The Mean Squared Error is: '+str(mse_linear))","589d956b":"Grade is highly positively correlated with Price.","4f7ae9ac":"So, there are no NaN values or Null cells in the dataset","55df5134":"## Multi Linear Regression","507e2e15":"## Model Building","165ad46f":"The correlation between year renovated and price is 0.124 - very less and can be dropped","c17323cf":"## Price vs Other factors - visualisation","458d05dd":"Almost no correlation between year built and price","77642cd5":"Checking for Null items in the entire dataset","c8cd646b":"Removed 12 houses whose prices are outliers (>4mil)","d655b4d5":"Price Column Outliers Analysis","9270a8bf":"Checking for NaN items in the entire dataset","672bf85d":"The correlation values of various factors with price in descending order","ee52e150":"The above heatmap gives the correlation of Price with other factors. Factors like number of bathrooms, living area, area above the ground, grade and sqft living15 are highly positively correlated with Price.\n\nOther factors like number of bedrooms, number of floors, waterfront, view, basement area, lattitude are weakly positively correlated.\n\nWe will use this information in our model building at a later stage.","e23d3768":"## Exploratory Data Analysis","f91e3e21":"The price seems to increase  as the number of bedrooms increase","0250cece":"The price seems to increase very slightly with number of floors, except for floors >=3","ca246f49":"Ignoring Year Renovated and Year Built without removing outliers - as we will drop these columns in model building, as their correlation is very less and can be ignored.","c7791358":"Removing the rows in the dataset where the price is more than 4000000 - as they are outliers from the above Box Plot:","d3bce3de":"The houses between Lat: 47.5 and 47.75, Long: -122.4 and -121.8 are more expensive than others as given in the Price Colour bar","4cadb0b3":"The price seems to increase with number of bathrooms","4e3118be":"## Upvote my submission if you found it helpful. Thank you!","5dce5b36":"Note: I have used 'df' dataframe and not 'df1' dataframe to visualise the original data. But performed outlier elimination of df1","42c41a83":"Number of unique values in each Factor column. This gives us a good view of what all are categorical variables. The top 5 variables could be considered as categorical variables.","11b641ce":"**Data Visualisation of each column. And outlier elimation**"}}