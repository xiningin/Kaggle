{"cell_type":{"deb22c41":"code","27a48ba3":"code","0a2b6358":"code","3fa1d06e":"code","cce2f3d1":"code","db20660d":"code","19061c17":"code","7d9d1282":"code","b9735d83":"code","04735704":"code","cbc41f9e":"code","7ba88f75":"code","b5f19a9f":"code","dbc943a2":"code","5108f0a6":"code","f9cda1dc":"code","1dfa659e":"code","5663d8cb":"code","c1b7eb9c":"markdown","109f5741":"markdown","d20c628b":"markdown","23f09e1a":"markdown","30982faa":"markdown","75492332":"markdown","ffb56e5f":"markdown","fcce6bba":"markdown","3d9ae314":"markdown","844d10f0":"markdown","75de8e94":"markdown"},"source":{"deb22c41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27a48ba3":"data = pd.read_csv('\/kaggle\/input\/formula-1-german-grandprix-2019-race-day-data\/race_classification_germanGp-2019.csv')","0a2b6358":"pd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","3fa1d06e":"data.head()","cce2f3d1":"teams=data.copy()\ndel teams['TEAM']\ns = data['TEAM'].str.split(',').apply(pd.Series, 1).stack()\ns.index = s.index.droplevel(-1)\ns.name = 'TEAM'\nteams = teams.join(s)","db20660d":"lis=[]\nfor i in teams['TEAM']:\n    lis.append(i)\n\nfor k in range(0,len(lis)):\n    lis[k]=str(lis[k]).strip()\n    \nfrom collections import Counter\ngenre_count = Counter(lis)\n\nfrom wordcloud import WordCloud\nwc = WordCloud(background_color='white')\nwc.generate_from_frequencies(genre_count)\nplt.figure(figsize=(20,10))\nplt.imshow(wc,interpolation='bilinear')\nplt.axis('off')\nplt.show()","19061c17":"drivers=data.copy()\ndel drivers['NAME']\ns = data['NAME'].str.split(',').apply(pd.Series, 1).stack()\ns.index = s.index.droplevel(-1)\ns.name = 'NAME'\ndrivers = drivers.join(s)","7d9d1282":"lis=[]\nfor i in drivers['NAME']:\n    lis.append(i)\n\nfor k in range(0,len(lis)):\n    lis[k]=str(lis[k]).strip()\n    \nfrom collections import Counter\ngenre_count = Counter(lis)\n\nfrom wordcloud import WordCloud\nwc = WordCloud(background_color='black')\nwc.generate_from_frequencies(genre_count)\nplt.figure(figsize=(20,10))\nplt.imshow(wc,interpolation='bilinear')\nplt.axis('off')\nplt.show()","b9735d83":"data.head()","04735704":"fig = px.bar(data, x='NAME', y='STARTING_POSITION', color='NAME', height=600, title='Grid positions')\nfig.show()","cbc41f9e":"fig = px.bar(data, x='NAME', y='RACE_PLACE', color='NAME', height=600, title='Places finished')\nfig.show()","7ba88f75":"fig = px.bar(data, x='NAME', y='PLACES_GAINED', color='NAME', height=600, title='Places gained')\nfig.show()","b5f19a9f":"points_score= data.sort_values(by = 'POINTS', ascending = False).head(20)\nfig = px.sunburst(points_score, path= ['POINTS','NAME'])\nfig.show()\n","dbc943a2":"fig = px.bar(data, x='NAME', y='FASTEST_LAP', color='NAME', height=600, title='fastest laps')\nfig.show()","5108f0a6":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nfig = px.pie(data,names='NAME', values='SECTOR1')\nfig.update_traces(rotation=45, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"label\", title='Fastest sector 1 times')\nfig.show()","f9cda1dc":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nfig = px.pie(data,names='NAME', values='SECTOR2 ')\nfig.update_traces(rotation=45, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"label\", title='Fastest sector 2 times')\nfig.show()","1dfa659e":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nfig = px.pie(data,names='NAME', values='SECTOR3')\nfig.update_traces(rotation=45, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"label\", title='Fastest sector 3 times')\nfig.show()","5663d8cb":"points_score= data.sort_values(by = 'PIT_STOPS', ascending = False).head(20)\nfig = px.treemap(points_score, path= ['PIT_STOPS','NAME'])\nfig.show()\n","c1b7eb9c":"### Grid positions","109f5741":"### Pit stop Information","d20c628b":"### Points Scored by driver","23f09e1a":"### Most Places Gained","30982faa":"## German GrandPrix 2019\nRace at Hockenheim was a surprise success, with 71,000 race day fans around 20% above the average of the five F1 races it has held over the last 10 years.\n\nRain before the start and during the race made for an incident-packed event in which polesitter Lewis Hamilton spun twice on his way to an eventual 11th place finish, and his Mercedes team-mate Valtteri Bottas crashed out.\n\nFerrari's Sebastian Vettel raced from the back of the grid to finish second, but it was a mixed day for the team after Charles Leclerc hit the barriers and retired.","75492332":"<img src=\"https:\/\/countryofnowhere.files.wordpress.com\/2013\/09\/hockenheimring-german-grand-prix1.png\" width=\"1000px\">","ffb56e5f":"28 July 2019 - Circuit:[Hockenheimring Baden-W\u00fcrttemberg Circuit](https:\/\/en.wikipedia.org\/wiki\/Hockenheimring).Germany\n\n[Race-report](https:\/\/www.formula1.com\/en\/racing\/2019\/Germany.html)\n\n[Wikipedia Race-report](https:\/\/en.wikipedia.org\/wiki\/2019_German_Grand_Prix)\n\n[Race Highlight](https:\/\/www.youtube.com\/watch?v=dNUSQurmRjw)\n\n[Map search](https:\/\/www.google.co.in\/maps\/place\/Hockenheimring\/@49.3296548,8.5686328,15.75z\/data=!4m5!3m4!1s0x4797b9ae72985095:0xc660e6bc36df407!8m2!3d49.3298956!4d8.5709249)\n\n","fcce6bba":"### Fastest lap by each driver","3d9ae314":"### Fastest sector Times","844d10f0":"### Constructors","75de8e94":"### Drivers"}}