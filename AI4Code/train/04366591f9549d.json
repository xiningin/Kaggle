{"cell_type":{"25a05549":"code","5f675cc5":"code","d0db0a90":"code","f132cdbc":"code","5599599e":"code","7f7b4790":"code","864a0cd2":"code","cf9428c4":"code","f6ac1435":"code","5a63ff8b":"code","3516d925":"code","c1ba26cc":"code","3701d2d0":"code","10dda993":"code","21bb07a0":"code","52ddf9e4":"code","1171cfee":"code","8090f04c":"code","c9e5989d":"code","62b809cd":"code","14345202":"code","c265d1a9":"code","ce1aec43":"code","137dc104":"code","00a62ea9":"code","5ff7feb8":"code","bded911b":"code","b3c19fe5":"code","5291e8b6":"code","d12a87aa":"code","150d13f4":"code","aef047df":"code","c07e7937":"code","53581f12":"code","a582fe60":"code","9a8393fa":"code","d5df19c0":"code","9c923748":"code","ef2743f2":"code","b15ef538":"code","20fba486":"code","4fd7c69c":"code","e68e9257":"code","64d89e4e":"code","403aa28c":"code","5e2dd32b":"code","582c338d":"code","9d3fcc83":"code","66184ab7":"code","745068d6":"code","cd193c96":"code","9fefb052":"code","d7c90821":"code","d63303ea":"code","6e51e5e6":"code","cd488534":"code","4cc9daf8":"markdown","a599d992":"markdown","b0db34f6":"markdown","b95247b5":"markdown","6b62ea54":"markdown","d1bc2c12":"markdown","da5ede5a":"markdown","822fc4e3":"markdown","1c7f475d":"markdown","80c05332":"markdown","b0dd97e1":"markdown","6f560252":"markdown","07f1ff43":"markdown","9075833d":"markdown","25bff7d2":"markdown","0f30ac6d":"markdown","e70a1889":"markdown","c14c7e77":"markdown","0dbc5d3d":"markdown","948b87ba":"markdown","588dbe15":"markdown","3734447e":"markdown","ca28d1d0":"markdown","e1002b44":"markdown","1105b720":"markdown","6a86f472":"markdown","f2ef9999":"markdown","15dc4cfe":"markdown","ae023a8b":"markdown","b21305de":"markdown","1cc68d88":"markdown","51aa2825":"markdown","2d5ef4c5":"markdown","d5888f15":"markdown","9bbcf3db":"markdown","154e818e":"markdown","6fdc7b4b":"markdown","7a0556a4":"markdown","538a7528":"markdown","5e76d4ab":"markdown","9d5a7c5d":"markdown","37151166":"markdown","745d56ce":"markdown","472f7d5b":"markdown","853a1176":"markdown","ee2e7b8e":"markdown","09af15dd":"markdown","984bd4c3":"markdown","75b6c6f2":"markdown","ca35c100":"markdown","7dc30f9c":"markdown","7bcde15d":"markdown","03bd1eba":"markdown","276d30f4":"markdown","242681dd":"markdown","5917478d":"markdown","9ee27e1a":"markdown","69ed48d7":"markdown","a366463e":"markdown","6c83e8b8":"markdown","cd0f6159":"markdown","03fef1f6":"markdown","2bc6fa53":"markdown","a50294bd":"markdown","5f929a33":"markdown","ff4e3762":"markdown","5dd7451b":"markdown","cb4bf924":"markdown","10cba3f5":"markdown","2d82fd07":"markdown","1860303d":"markdown","58ccefe1":"markdown","771599bd":"markdown","8c851623":"markdown","5ccf1c9f":"markdown","1549d887":"markdown","2ac26cde":"markdown","0a058bdc":"markdown","348934f1":"markdown","e3be824e":"markdown","6d24dcde":"markdown","8d88d068":"markdown","46c8bed9":"markdown","2a871e3f":"markdown","27c643f2":"markdown","b4096700":"markdown","8db4a07d":"markdown","7d838f74":"markdown","00839787":"markdown","73cd1379":"markdown","02f11e6d":"markdown","d5a9ef20":"markdown","e0e32177":"markdown","12f9c1a8":"markdown"},"source":{"25a05549":"!pip install openpyxl\nimport numpy as np \nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport plotly.figure_factory as ff\nimport math\nimport itertools\nfrom IPython.display import Image","5f675cc5":"def load_sheet(path:str, sheet_name: str):\n    return pd.read_excel(path, sheet_name=sheet_name, skiprows=range(20), skipfooter=2)","d0db0a90":"df_canada = load_sheet('..\/input\/immigration-to-canada-ibm-dataset\/Canada.xlsx', \n                       'Canada by Citizenship')\ndf_canada.head(10)","f132cdbc":"df_canada.drop(['AREA','REG','DEV','Type','Coverage'], axis=1, inplace=True)\ndf_canada.rename(columns={'OdName':'Country', 'AreaName':'Continent', 'RegName':'Region'}, \n                 inplace=True)\ndf_canada['Total'] = df_canada.sum(axis=1)","5599599e":"df_canada.set_index('Country', inplace=True)\ndf_canada.columns = list(map(str, df_canada.columns))","7f7b4790":"years = list(map(str, range(1980, 2014)))","864a0cd2":"df_canada.rename(index={\"United Kingdom of Great Britain and Northern Ireland\": \"United Kingdom\"}, inplace=True)","cf9428c4":"%matplotlib inline \nmpl.style.use(['ggplot'])","f6ac1435":"haiti = df_canada.loc['Haiti', years]\n# Change the index of Haiti to type integer for plotting\nhaiti.index = haiti.index.map(int)","5a63ff8b":"ax = haiti.plot(kind='line', figsize=(20,10))\nax.set(title='Immigration From Haiti', ylabel='Number of Immigrants', xlabel='Years')\n# Annotate the plot with the 2010 earthquake\nplt.text(2007, 6000, '2010 Earthquake'); ","3516d925":"plt.figure(figsize=(20,10))\nax = sns.lineplot(data=haiti)\nax.set(title='Immigration From Haiti', ylabel='Number of Immigrants', xlabel='Years')\n# Annotate the plot with the 2010 earthquake \nplt.text(2007, 6000, '2010 Earthquake');  ","c1ba26cc":"fig = px.line(haiti, \n              title='Immigration From Haiti', \n              width=800, \n              height=400, \n              labels={\"index\": \"Years\", \"value\": 'Number of Immigrants'})\n# Disable the legend and center the title\nfig = fig.update_layout(showlegend=False, \n                        title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'})\n# Annotate the plot with the 2010 earthquake \nfig.add_annotation({'x': 2007, 'y': 6000, 'text': '2010 Earthquake', 'showarrow': False})\nfig.show()","3701d2d0":"df_canada.sort_values(by='Total', ascending = False, axis = 0, inplace = True)\ndf_top5 = df_canada.head(5)\ndf_top5 = df_top5[years].transpose()\ndf_top5.index = df_top5.index.map(int)","10dda993":"ax = df_top5.plot(kind='line', figsize=(20,10))\nax.set(title='Immigration Trend of Top 5 Countries', \n       ylabel='Number of Immigrants', \n       xlabel='Years');","21bb07a0":"plt.figure(figsize=(20,10))\nax = sns.lineplot(data=df_top5, dashes=False)\nax.set(title='Immigration Trend of Top 5 Countries', \n       ylabel='Number of Immigrants', \n       xlabel='Years');","52ddf9e4":"fig = px.line(df_top5, \n              title='Immigration Trend of Top 5 Countries', \n              width=800, \n              height=400, \n              labels={\"index\": \"Years\", \"value\": 'Number of Immigrants'})\n# Center the title and move the legend to the left\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        legend={'yanchor': 'top', 'y': 0.99, 'xanchor': 'left', 'x': 0.01})\nfig.show()","1171cfee":"ax = df_top5.plot(kind = 'area', figsize=(20,10))\nax.set(title='Immigration Trend of Top 5 Countries', \n       ylabel='Number of Immigrants', \n       xlabel='Years');","8090f04c":"fig = px.area(df_top5, \n              title='Immigration Trend of Top 5 Countries', \n              width=800, \n              height=400, \n              labels={\"index\": \"Years\", \"value\": 'Number of Immigrants'})\n# Center title and move legend to the left\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        legend={'yanchor': 'top', 'y': 0.99, 'xanchor': 'left', 'x':0.01})\nfig.show()","c9e5989d":"bin_counts, bin_edges = np.histogram(df_canada['2013'])","62b809cd":"ax = df_canada['2013'].plot(kind='hist', figsize=(20,10), xticks=bin_edges)\nax.set(title='Immigration From 195 Countries in 2013', \n       ylabel='Number of Countries', \n       xlabel='Number of Immigrants');","14345202":"plt.figure(figsize=(20,10))\nax = sns.histplot(data=df_canada['2013'], bins=bin_edges)\nplt.xticks(bin_edges)\nax.set(title='Immigration From 195 Countries in 2013', \n       ylabel='Number of Countries', \n       xlabel='Number of Immigrants');","c265d1a9":"fig = go.Figure(\n    go.Histogram(x=df_canada['2013'], \n                 xbins={'start': 0, 'end': bin_edges[-1]+1, 'size': bin_edges[1]+1}))\nfig.update_layout(title_text='Immigration From 195 Countries in 2013', \n                  xaxis_title_text='Number of Immigrants',\n                  yaxis_title_text='Number of Countries', \n                  title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'},\n                  width=800, \n                  height=400)\nfig.update_xaxes(tickangle=0, \n                 tickmode = 'array',\n                 tickvals = bin_edges, \n                 ticktext= [math.ceil(tick) for tick in bin_edges], \n                 ticklabelposition=\"outside right\",\n                 tickfont_size=8)\nfig.update_yaxes(tickvals=np.arange(0,200,25))\nfig.show()","ce1aec43":"df_dns = df_canada.loc[['Denmark', 'Norway', 'Sweden'], years].transpose()\nbin_counts, bin_edges = np.histogram(df_dns, 15)","137dc104":"ax = df_dns.plot(kind='hist', figsize=(20,10), bins=15, xticks=bin_edges, alpha=0.6)\nax.set(title='Immigration From Denmark, Norway, and Sweden From 1980 to 2013', \n       ylabel='Number of Years', \n       xlabel='Number of Immigrants');","00a62ea9":"plt.figure(figsize=(20,10))\nax = sns.histplot(data=df_dns, bins=bin_edges, alpha=0.6)\nplt.xticks(bin_edges)\nax.set(title='Immigration From Denmark, Norway, and Sweden From 1980 to 2013', \n       ylabel='Number of Years', \n       xlabel='Number of Immigrants');","5ff7feb8":"xbins = {'start':31, 'end':330, 'size':18.5}\nopacity = 0.75\nfig = go.Figure(\n    go.Histogram(x=df_dns['Denmark'], name='Denmark', xbins=xbins, opacity=opacity))\nfig.add_trace(\n    go.Histogram(x=df_dns['Norway'], name='Norway', xbins=xbins,opacity=opacity))\nfig.add_trace(\n    go.Histogram(x=df_dns['Sweden'], name='Sweden', xbins=xbins, opacity=opacity))\nfig.update_layout(barmode=\"overlay\", \n                  width=800, \n                  height=400, \n                  title_text='Immigration From Denmark, Norway, and Sweden From 1980 to 2013', \n                  xaxis_title_text='Number of Immigrants',\n                  yaxis_title_text='Number of Years', \n                  title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'})\nfig.update_xaxes(tickmode = 'array', \n                 tickvals =bin_edges, \n                 ticktext= [math.ceil(tick) for tick in bin_edges], \n                 ticklabelposition=\"outside right\",\n                 tickfont_size=12)\nfig.show()","bded911b":"df_iceland = df_canada.loc['Iceland', years]","b3c19fe5":"ax = df_iceland.plot(kind='bar', figsize=(20, 10))\nax.set(title='Icelandic Immigrants to Canada From 1980 to 2013',\n       ylabel='Number of Immigrants', \n       xlabel='Year');","5291e8b6":"plt.figure(figsize=(20,10))\nax = sns.barplot(x=df_iceland.index, y=df_iceland.values)\nax.set(title='Icelandic Immigrants to Canada From 1980 to 2013',\n       ylabel='Number of Immigrants', \n       xlabel='Year');\nplt.xticks(rotation=90);","d12a87aa":"iceland = pd.DataFrame(\n    {'Year': df_iceland.index, 'Number of Immigrants': df_iceland.values})\nfig = px.bar(iceland, \n             x='Year', \n             y='Number of Immigrants', \n             width=800, \n             height=400, \n             title='Icelandic Immigrants to Canada From 1980 to 2013')\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'})\nfig.show()","150d13f4":"df_canada.sort_values(by='Total', ascending=True, inplace=True)\ndf_top15 = df_canada['Total'].tail(15)","aef047df":"ax = df_top15.plot(kind='barh', figsize=(20, 10), color='steelblue')\nax.set(title='Top 15 Countries Contributing to the Immigration to Canada Between 1980 and 2013', \n       xlabel='Number of Immigrants');\n\n# Annotate value labels to each country\nfor index, value in enumerate(df_top15): \n    # Subtracting 30000 from x and 0.1 from y to make the labels fit within the bars\n    plt.annotate(format(int(value), ','), xy=(value - 30000, index - 0.1), color='white') ","c07e7937":"plt.figure(figsize=(20,10))\nax = sns.barplot(y=df_top15.index, \n                 x=df_top15.values, \n                 orient='h', \n                 order=df_top15.index[::-1])\nax.set(title='Top 15 Countries Contributing to the Immigration to Canada Between 1980 and 2013', \n       xlabel='Number of Immigrants');\n\n# Annotate value labels to each country\nfor index, value in enumerate(df_top15[::-1]): \n    # Subtracting 30000 from x and 0.1 from y to make the labels fit within the bars\n    plt.annotate(format(int(value), ','), xy=(value - 30000, index - 0.1), color='white')","53581f12":"df_top15.sort_values(ascending=False, inplace=True)\nfig = px.bar(df_top15, \n             y=df_top15.index, \n             x=df_top15.values, \n             text = df_top15.values, \n             width=800, \n             height=400, \n             orientation='h', \n             category_orders={'Country': df_top15.index}, \n             title='Top 15 Countries Contributing to the Immigration to Canada Between 1980 and 2013')\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        xaxis_title_text=\"Number of Immigrants\")\nfig.show()","a582fe60":"df_continents = df_canada.groupby('Continent', axis=0).sum()","9a8393fa":"fig = plt.figure()\n# Change background color\nfig.patch.set_facecolor('white')  \ncolors_list = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue', 'lightgreen', 'pink']\nexplode_list = [0.1, 0, 0, 0, 0.1, 0.1]\ndf_continents['Total'].plot(kind='pie', \n                            figsize=(20, 10),\n                            autopct='%1.1f%%', \n                            startangle=90,    \n                            labels=None,         \n                            pctdistance=1.12,    \n                            colors=colors_list,  \n                            explode=explode_list)\nplt.title('Immigration to Canada by Continent From 1980 to 2013', y=1.12)\n# Set equal scaling (i.e., make circles circular) by changing axis limits\nplt.axis('equal') \nplt.legend(labels=df_continents.index, loc='upper left');","d5df19c0":"fig = px.pie(df_continents['Total'], \n             values=df_continents['Total'].values, \n             names=df_continents['Total'].index, \n             width=800, \n             height=400, \n             title='Immigration to Canada by Continent From 1980 to 2013')\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'})\nfig.update_traces(\n    marker={'colors': colors_list}, rotation=135, pull=[0.1, 0, 0, 0, 0.1, 0.1])\nfig.show()","9c923748":"Image(\"..\/input\/boxplot-2\/boxplot_example.png\", width=400, height=400)","ef2743f2":"df_ci = df_canada.loc[['China','India'], years].transpose()","b15ef538":"ax = df_ci.plot(kind='box', figsize=(20, 10))\nax.set(title='Immigrants From China and India From 1980 to 2013', \n       xlabel=\"Country\", \n       ylabel='Number of Immigrants');","20fba486":"plt.figure(figsize=(20,10))\nax = sns.boxplot(data=df_ci)\nax.set(title='Immigrants From China and India From 1980 to 2013', \n       xlabel=\"Country\", \n       ylabel='Number of Immigrants');","4fd7c69c":"fig = px.box(df_ci, \n             width=800, \n             height=400, \n             title='Immigrants From China and India From 1980 to 2013')\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        yaxis_title_text=\"Number of Immigrants\")\nfig.show()","e68e9257":"df_total = pd.DataFrame(df_canada[years].sum(axis=0))\ndf_total.index = map(int, df_total.index)\ndf_total.reset_index(inplace = True)\ndf_total.columns = ['year', 'total']","64d89e4e":"ax = df_total.plot(kind='scatter', x='year', y='total', figsize=(20, 10))\nax.set(title='Total Immigration to Canada From 1980 to 2013', \n       xlabel='Year', \n       ylabel='Number of Immigrants');","403aa28c":"plt.figure(figsize=(20,10))\nax = sns.scatterplot(data=df_total, x='year', y='total')\nax.set(title='Total Immigration to Canada From 1980 to 2013', \n       xlabel='Year', \n       ylabel='Number of Immigrants');","5e2dd32b":"fig = px.scatter(df_total, \n                 x='year', \n                 y='total', \n                 width=800, \n                 height=400,\n                 title='Total Immigration to Canada From 1980 to 2013')\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        xaxis_title_text=\"Year\",\n                        yaxis_title_text=\"Number of Immigrants\")\nfig.show()","582c338d":"df_can_years = df_canada[years].transpose()\ndf_can_years.index = map(int, df_can_years.index)\ndf_can_years.index.name = 'Year'\ndf_can_years.reset_index(inplace=True)\n# Normalize Brazil data\nnorm_brazil = (df_can_years['Brazil'] - df_can_years['Brazil'].min()) \/ (df_can_years['Brazil'].max() - df_can_years['Brazil'].min())\n# Normalize Argentina data\nnorm_argentina = (df_can_years['Argentina'] - df_can_years['Argentina'].min()) \/ (df_can_years['Argentina'].max() - df_can_years['Argentina'].min())","9d3fcc83":"ax0 = df_can_years.plot(kind='scatter',\n                    x='Year',\n                    y='Brazil',\n                    figsize=(20, 10),\n                    alpha=0.5,                 \n                    color='green',\n                    s=norm_brazil * 2000 + 10, \n                    xlim=(1975, 2015))\nax1 = df_can_years.plot(kind='scatter',\n                    x='Year',\n                    y='Argentina',\n                    alpha=0.5,\n                    color=\"blue\",\n                    s=norm_argentina * 2000 + 10,\n                    ax = ax0)\nax0.set(title='Immigration From Brazil and Argentina From 1980 to 2013', \n        ylabel='Number of Immigrants');\nax0.legend(['Brazil', 'Argentina'], loc='upper right', fontsize='x-large');","66184ab7":"brazil_values = df_canada.loc['Brazil'].values[3:-1]\nargentina_values = df_canada.loc['Argentina'].values[3:-1]\ndf_arg_brz = pd.DataFrame({'Country': ['Brazil']* 34 + ['Argentina']* 34, \n                           'Year': years * 2,\n                           'Number of Immigrants': list(itertools.chain(brazil_values,argentina_values))})","745068d6":"plt.figure(figsize=(20,10))\nax = sns.scatterplot(data=df_arg_brz, \n                     x=\"Year\", \n                     y=\"Number of Immigrants\", \n                     size=\"Number of Immigrants\", \n                     hue=\"Country\", \n                     alpha=0.5, \n                     sizes=(30, 3000))\n# Remove the legend with the sizes of the bubbles\nhandles, labels = ax.get_legend_handles_labels()\nax.legend(handles=handles, labels=labels[:3]);\nax.set(title='Immigration From Brazil and Argentina From 1980 to 2013', \n       xlabel='Year', \n       ylabel='Number of Immigrants');","cd193c96":"fig = px.scatter(df_arg_brz, \n                 x=\"Year\", \n                 y=\"Number of Immigrants\", \n                 size=\"Number of Immigrants\", \n                 color=\"Country\", \n                 size_max=30,\n                 title='Immigration From Brazil and Argentina From 1980 to 2013',\n                 width=800, \n                 height=400)\nfig = fig.update_layout(title={'y':0.9, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'})\nfig.show()","9fefb052":"df_top5 = df_canada.sort_values(['Total'], ascending=False, axis=0).head(5)\ndf_80s = df_top5.loc[:, list(map(str, range(1980, 1990))) ].sum(axis=1) \ndf_90s = df_top5.loc[:, list(map(str, range(1990, 2000))) ].sum(axis=1) \ndf_00s = df_top5.loc[:, list(map(str, range(2000, 2010)))].sum(axis=1)\ndf_top5_decades = pd.DataFrame({'1980s': df_80s, '1990s': df_90s, '2000s':df_00s})","d7c90821":"# Adapted from: https:\/\/matplotlib.org\/stable\/gallery\/images_contours_and_fields\/image_annotated_heatmap.html\n\ndef heatmap(data, row_labels, col_labels, cmap, cbarlabel):\n    ax = plt.gca()\n    # Plot the heatmap\n    im = ax.imshow(data, cmap, aspect='auto')\n    # Set Matplotlib colorbar size to match graph\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"bottom\", size=\"5%\", pad=0.7)\n    # Create colorbar\n    cbar = plt.colorbar(im, cax=cax, orientation=\"horizontal\")\n    cbar.ax.set_xlabel(cbarlabel, labelpad=10)\n    # Set ticks\n    ax.set_xticks(np.arange(data.shape[1]))\n    ax.set_yticks(np.arange(data.shape[0]))\n    ax.set_xticklabels(col_labels)\n    ax.set_yticklabels(row_labels)\n    return ax, im, cbar \n\n\ndef annotate_heatmap(im, data=None, valfmt=\"{x:d}\", textcolors=(\"black\", \"white\"), threshold=None):\n    if not isinstance(data, (list, np.ndarray)):\n        data = im.get_array()\n    # Normalize the threshold to the images color range.\n    if threshold is not None:\n        threshold = im.norm(threshold)\n    else:\n        threshold = im.norm(data.max())\/2.\n    # Set default alignment to center, but allow it to be overwritten by textkw.\n    kw = dict(horizontalalignment=\"center\", verticalalignment=\"center\")\n    # Get the formatter in case a string is supplied\n    if isinstance(valfmt, str):\n        valfmt = mpl.ticker.StrMethodFormatter(valfmt)\n    # Loop over the data and create a `Text` for each \"pixel\". Change the text's color depending on the data.\n    texts = []\n    for i in range(data.shape[0]):\n        for j in range(data.shape[1]):\n            kw.update(color=textcolors[int(im.norm(data[i, j]) > threshold)])\n            text = im.axes.text(j, i, valfmt(data[i, j], None), **kw)\n            texts.append(text)\n    return texts","d63303ea":"plt.figure(figsize=(20,10))\nax, im, cbar = heatmap(df_top5_decades.values, \n                       df_top5_decades.index,\n                       df_top5_decades.columns, \n                       \"YlOrRd\", \n                       \"Number of Immigrants\")\ntexts = annotate_heatmap(im)\nax.grid(False)\nax.set_title('Immigration From Top 5 Countries for Decades 80s, 90s and 2000s', pad=25)\nax.set_xlabel('Decade', labelpad=10)\nax.set_ylabel('Country', labelpad=10);","6e51e5e6":"grid_kws = {\"height_ratios\": (.9, .05), \"hspace\": .25}\nf, (ax, cbar_ax) = plt.subplots(2, gridspec_kw=grid_kws, figsize=(20,10))\nax = sns.heatmap(df_top5_decades, \n                 annot=True, \n                 fmt=\"d\", \n                 cmap=\"YlOrRd\",\n                 ax=ax,\n                 cbar_ax=cbar_ax,\n                 cbar_kws={\"orientation\": \"horizontal\"})\nax.set_title('Immigration From Top 5 Countries for Decades 80s, 90s and 2000s', pad=25)\nax.set_xlabel('Decade', labelpad=10)\nax.set_ylabel('Country', labelpad=10)\ncbar_ax.set_xlabel(\"Number of Immigrants\", labelpad=10);","cd488534":"fig = ff.create_annotated_heatmap(z=df_top5_decades.values, \n                                  y=list(df_top5_decades.index), \n                                  x=list(df_top5_decades.columns),\n                                  colorscale=\"YlOrRd\",\n                                  colorbar_title = \"Number of Immigrants\",\n                                  showscale=True)\nfig = fig.update_layout(title={'y':0.98, 'x':0.5, 'xanchor': 'center', 'yanchor': 'top'}, \n                        xaxis_title_text=\"Decade\",\n                        yaxis_title_text=\"Country\",\n                        title_text='Immigration From Top 5 Countries for Decades 80s, 90s and 2000s',\n                        width=800, \n                        height=400)\nfig.show()","4cc9daf8":"By representing the data horizontally you get more room for labelling. The y-axis is used for the categorical variable and the length of the bars on the x-axis corresponds to the magnitude of the numeric variable.\n\n**What is the total number of immigrants to Canada from the top 15 countries, from 1980 to 2013?**","a599d992":"The number of Icelandic immigrants in Canada began to increase rapidly after the start of the 2008 crisis.","b0db34f6":"## Histograms","b95247b5":"## Heatmaps","6b62ea54":"## Horizontal Bar Plots","d1bc2c12":"## Multiple Line Plots","da5ede5a":"##### Plotly","822fc4e3":"##### Matplotlib","1c7f475d":"##### Matplotlib","80c05332":"# Imports","b0dd97e1":"Since we converted the years to strings, a variable with the full range of years will come in handy for plotting.","6f560252":"##### Seaborn","07f1ff43":"There is a clear upward trend.","9075833d":"##### Plotly","25bff7d2":"Boxplots compare the distributions of a numeric variable grouped according to a categorical variable.\n\nA boxplot represents the distribution of given data through 5 main dimensions. The first dimension is the minimum, and its value can be obtained by subtracting 1.5 times the IQR (interquartile range) from the first quartile. The second dimension is the first quartile which is 25% of the way through the sorted data. In other words, 1\/4 of the data points are less than this value. The third dimension is the median, i.e., 50% through the sorted data. The fourth dimension is the third quartile, which is 75% through the sorted data. The maximum is the last dimension, which is equal to the third quartile summed with 1.5 multiplied by the interquartile range. Boxplots also display outliers as individual dots that occur outside the upper and lower extremes.\n\nThe image below depicts the already explained dimensions of a boxplot.","0f30ac6d":"We will go through the rest of this notebook asking some interesting questions and creating different charts to answer them. For each chart we will compare how to do it with matplotlib (most of the time it is matplotlib integration with pandas), seaborn and plotly.","e70a1889":"**If you like this notebook, please give it an upvote as it keeps me motivated. Plus, I am open to feedback.**","c14c7e77":"## Scatter Plots","0dbc5d3d":"##### Matplotlib","948b87ba":"##### Matplotlib","588dbe15":"As it was seen before, not all countries show an uptrend. China and India are the countries with the largest number of immigrants who went to Canada in the last decade.\n","3734447e":"## Area Plots","ca28d1d0":"Now let's drop unnecessary columns, rename others and create a \"Total\" column that is the sum of immigrants per country from 1980 to 2013.","e1002b44":"1. Swaminathan, S. Data Visualization with Python MOOC. Coursera\n2. Bavalpreet. (2020). Matplotlib_Immigration_visualization. Available at: https:\/\/www.kaggle.com\/bavalpreet26\/matplotlib-immigration-visualization\n3. Bhattacharyya, S. (2019). Interpreting Data through Visualization with Python Matplotlib. Available at: https:\/\/towardsdatascience.com\/interpreting-data-through-visualization-with-python-matplotlib-ef795b411900\n4. The Python Graph Gallery. (2018). Bubble Plot with Seaborn. Available at: https:\/\/www.python-graph-gallery.com\/bubble-plot-with-seaborn\n5. The Python Graph Gallery. (2018). Heatmap. Available at: https:\/\/www.python-graph-gallery.com\/heatmap\n6. matplotlib. (2021). Creating annotated heatmaps. Available at: https:\/\/matplotlib.org\/stable\/gallery\/images_contours_and_fields\/image_annotated_heatmap.html\n7. stackoverflow. (2013). Set Matplotlib colorbar size to match graph. Available at: https:\/\/stackoverflow.com\/questions\/18195758\/set-matplotlib-colorbar-size-to-match-graph\n8. stackoverflow. (2009). Resize a figure automatically in matplotlib. Available at: https:\/\/stackoverflow.com\/questions\/1271023\/resize-a-figure-automatically-in-matplotlib\n9. Bruce, P., Bruce, A and Gedeck, P. (2017). Practical Statistics for Data Scientists: 50+ Essential Concepts Using R and Python","1105b720":"Among these three countries, Sweden is the one that most people choose Canada to live.","6a86f472":"##### Matplotlib","f2ef9999":"It is clear that the number of immigrants from Haiti increased after the 2010 earthquake.","15dc4cfe":"## Pie Charts","ae023a8b":"##### Seaborn","b21305de":"##### Plotly","1cc68d88":"##### Matplotlib","51aa2825":"**How was the immigration from Haiti to Canada from 1980 to 2013?**\n\nIn 2010, Haiti suffered a magnitude 7.0 earthquake. Let's visualize the Government of Canada's effort to accept refugees from Haiti.","2d5ef4c5":"India, China, United Kingdom, Philippines and Pakistan are the top 5 countries that contributed the most to immigration to Canada. However, not all show an uptrend.","d5888f15":"A pie chart is a circular statistical graphic divided into slices to show numerical proportion. Pie charts are an alternative to bar charts, although most experts believe pie charts are less visually informative.\n\n**What is the percentage of new immigrants grouped by continents from 1980 to 2013?**","9bbcf3db":"A heatmap shows the magnitude of a phenomenon as color in two dimensions. The color may vary by hue or intensity, which gives visual cues about how the phenomenon is clustered or varies over space.\n\n**Visualize the total immigration of the top 5 countries grouped by decade.**","154e818e":"##### Seaborn","6fdc7b4b":"## Bubble Plots","7a0556a4":"## Single Line Plots","538a7528":"**Compare the immigration from Brazil and Argentina from 1980 to 2013.**\n\nArgentina suffered a great depression from 1998 to 2002. We can visualize this crisis by looking at the immigration data, more specifically comparing immigration from Argentina to Brazil.","5e76d4ab":"##### Seaborn","9d5a7c5d":"An area plot depicts accumulated totals using numbers or percentages over time. It is based on the line plot and is commonly used when trying to compare two or more quantities. \n\n**Which countries contributed the most to immigration to Canada? (Same question as in the previous section)**","37151166":"**Which countries contributed the most to immigration to Canada?**","745d56ce":"##### Seaborn","472f7d5b":"Although there are some outliers, the number of new immigrants from most countries to Canada in 2013 is at most 6826.","853a1176":"##### Seaborn","ee2e7b8e":"To plot a bubble chart with seaborn and plotly we need to organize the data differently.","09af15dd":"Both countries have about the same median, around 20000. However, the number of Chinese immigrants is more spread out than the number of Indian immigrants. Plus, the maximum number of immigrants from India (36210) is around 15% lower than the maximum population from China (42584).","984bd4c3":"##### Plotly","75b6c6f2":"Not available","ca35c100":"##### Plotly","7dc30f9c":"##### Plotly","7bcde15d":"A histogram represents the frequency distribution of numeric data. It partitions the data distribution into bins, assigns each data point in the dataset to a bin, and then counts the number of data points assigned to each bin. The y-axis is the frequency or the number of datapoints in each bin. \n\n**What is the number of new immigrants from the various countries to Canada in 2013?**","03bd1eba":"A bubble plot is a variation of the scatter plot that displays three dimensions of data (x, y, z). The datapoints are replaced with bubbles, and the size of the bubble is determined by the third variable z, also known as the weight.","276d30f4":"# Data Processing","242681dd":"Not available.","5917478d":"##### Seaborn","9ee27e1a":"A scatter plot displays values belonging to typically two variables against each other. Usually it is a dependent variable to be plotted against an independent variable in order to determine if any correlation between the two variables exists. If color-coded, it can also show the relationship with a third categorical variable.\n\n**What is the trend of total immigrantion to Canada from 1980 to 2013?**","69ed48d7":"##### Seaborn","a366463e":"Lastly, we are renaming \"United Kingdom of Great Britain and Northern Ireland\" to \"United Kingdom\" because it's a name too big to show on the plots.","6c83e8b8":"This notebook analyzes the immigration to Canada from 1980 to 2013 and provides a data visualization cheat sheet for matplotlib, seaborn and plotly. The following types of plots are covered:\n\n- Line Plots\n- Area Plots\n- Histograms\n- Bar Plots\n- Pie Charts\n- Boxplots\n- Scatter Plots\n- Bubble Plots\n- Heatmaps","cd0f6159":"##### Plotly","03fef1f6":"##### Matplotlib","2bc6fa53":"## Multiple Histograms","a50294bd":"## Vertical Bar Plots","5f929a33":"##### Matplotlib","ff4e3762":"# References","5dd7451b":"## Boxplots","cb4bf924":"More than 70% of immigrants who go to Canada are Asian or European.","10cba3f5":"Now the fun part! But first we need to activate the [matplotlib inline backend](https:\/\/matplotlib.org\/stable\/tutorials\/introductory\/usage.html#what-is-a-backend) and set the [style sheet](https:\/\/matplotlib.org\/stable\/gallery\/style_sheets\/style_sheets_reference.html) to \"ggplot\". ","2d82fd07":"##### Matplotlib","1860303d":"##### Plotly","58ccefe1":"<span style=\"font-size:2em;\">**Canadian Immigration From 1980 to 2013: Matplotlib vs Seaborn vs Plotly**<\/span>","771599bd":"The default index of the dataset is numeric, from 0 to 194, which makes it difficult to search for a specific country. To fix this, we are setting the \"Country\" column as the index.\n\nAlso, the columns referring to years (1980-2013) are integers, which might be confused with the positional index. So, we are converting the column names into strings.","8c851623":"Source: Swaminathan, S. Data Visualization with Python MOOC. Coursera","5ccf1c9f":"##### Matplotlib","1549d887":"##### Matplotlib","2ac26cde":"##### Seaborn","0a058bdc":"There is an increase in immigration from Argentina between 1999 and 2003. A similar upward trend between 1985 and 1993 can also be seen. Argentina struggled with a similar crisis from 1974 to 1990.\n\nIn 1999, the Brazilian currency dropped nearly 35%. The economy slowly recovered over the years, culminating in a surge in 2010, which is depicted in the above chart.","348934f1":"**Compare the distribution of the number of new immigrants from India and China between 1980 and 2013.**","e3be824e":"##### Plotly","6d24dcde":"##### Seaborn","8d88d068":"We can also overlay histograms.\n\n**What is the immigration distribution for Denmark, Norway, and Sweden from 1980 to 2013?**","46c8bed9":"Let's load the dataset and take a look at it.","2a871e3f":"##### Seaborn","27c643f2":"A line plot is a plot in the form of a series of data points connected by straight line segments. The best use case for a line plot is when you have a continuous dataset and are interested in visualizing the data over a period of time.","b4096700":"# Data Visualization","8db4a07d":"##### Plotly","7d838f74":"##### Matplotlib","00839787":"Now we will use the same type of plot, but with multiple groups of data points over a period of time.","73cd1379":"**What is the number of Icelandic immigrants to Canada from 1980 to 2013?**\n\nIceland faced a massive economic crisis between 2008 and 2011. Let's see if this crisis influenced the number of Icelandic immigrants in Canada.","02f11e6d":"In a bar plot, the length of each bar is proportional to the value of the item it illustrates. The x-axis represents different categories of a variable, while in a histogram, the x-axis represents the values of a single variable on a numerical scale.","d5a9ef20":"##### Seaborn","e0e32177":"##### Plotly","12f9c1a8":"##### Plotly"}}