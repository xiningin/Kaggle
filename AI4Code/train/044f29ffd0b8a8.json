{"cell_type":{"522ab457":"code","66f34c22":"code","377db33b":"code","ef9033d7":"code","b96c3933":"code","e77698c2":"code","85de172f":"code","aea5fd33":"code","8ed03a4f":"code","9c31ead3":"code","2782cce4":"code","4532a296":"code","c90d05bb":"code","c0d36487":"code","6daa1c8b":"code","4b64301e":"code","5e5d63a9":"code","cb620617":"code","8c24d273":"code","56326d20":"code","046f0f69":"code","ed5b9eab":"code","8251dc89":"code","c8655c6e":"code","81250939":"code","ea12ae09":"code","cf6d49f9":"code","cece8a5a":"code","54ab44b3":"code","2b303055":"code","0df68cf7":"markdown","c1c180be":"markdown","80544113":"markdown","9f7aa249":"markdown","fccd1d4f":"markdown","65757ab4":"markdown","5cde9458":"markdown","4d2b64ef":"markdown","addd3e7a":"markdown","3bf34f77":"markdown","a8771b66":"markdown","29505df8":"markdown","3f95af4c":"markdown"},"source":{"522ab457":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66f34c22":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv', index_col = 'PassengerId')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv', index_col = 'PassengerId')","377db33b":"train.head()","ef9033d7":"train.describe()","b96c3933":"test.describe()","e77698c2":"train.shape, test.shape","85de172f":"survived = train['Survived'].copy()\n\ntrain = train.drop('Survived', axis = 1)","aea5fd33":"train.info()","8ed03a4f":"train.isnull().sum()","9c31ead3":"test.info()","2782cce4":"test.isnull().sum()","4532a296":"df = pd.concat([test, train])\ntraining_index = train.index\ntesting_index = test.index\n\nprint(train.equals(df.loc[training_index, :]))\nprint(test.equals(df.loc[testing_index, :]))","c90d05bb":"del train\ndel test","c0d36487":"df.head()","6daa1c8b":"df.info()","4b64301e":"df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\n\ndf['Name_length'] = df['Name'].apply(len)\n\ndf['IsAlone'] = 0\n\ndf.loc[df['FamilySize'] == 1, 'IsAlone'] = 1\n\ndf['Title'] = 0\n\ndf['Title'] = df.Name.str.extract('([A-Za-z]+)\\.') \n\ndf['Title'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col',\n                         'Rev','Capt','Sir','Don'], ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'], inplace = True)","5e5d63a9":"df.loc[(df.Age.isnull())&(df.Title=='Mr'),'Age']= df.Age[df.Title==\"Mr\"].mean()\n\ndf.loc[(df.Age.isnull())&(df.Title=='Mrs'),'Age']= df.Age[df.Title==\"Mrs\"].mean()\n\ndf.loc[(df.Age.isnull())&(df.Title=='Master'),'Age']= df.Age[df.Title==\"Master\"].mean()\n\ndf.loc[(df.Age.isnull())&(df.Title=='Miss'),'Age']= df.Age[df.Title==\"Miss\"].mean()\n\ndf.loc[(df.Age.isnull())&(df.Title=='Other'),'Age']= df.Age[df.Title==\"Other\"].mean()\n\ndf = df.drop('Name', axis=1)","cb620617":"df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode().iloc[0])\n\ndf['Fare'] = df['Fare'].fillna(df['Fare'].mean())","8c24d273":"df['Sex'] = df['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ndf['Embarked'] = df['Embarked'].map( {'Q': 0, 'S': 1, 'C': 2} ).astype(int)\n\ndf= df.drop(['Ticket', 'Cabin'], axis=1)","56326d20":"df['Title'] = pd.Categorical(df['Title'])\ndf['Title'] = df['Title'].cat.codes\n\ndf.head()","046f0f69":"train = df.loc[training_index, :]\ntrain['Survived'] = survived\n\ntrain.head()","ed5b9eab":"train.to_csv('final_training_set.csv', header = True, index = True)\ndf.loc[testing_index, :].to_csv('final_testing_set.csv', header = True, index = True)","8251dc89":"final_train = pd.read_csv('.\/final_training_set.csv')\nfinal_test = pd.read_csv('.\/final_testing_set.csv')","c8655c6e":"final_train.head()","81250939":"features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'FamilySize', 'Name_length', 'IsAlone', 'Title']\n\nselected_train = train[features]\n\nlabels = final_train.Survived","ea12ae09":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(selected_train, labels, train_size=0.8, test_size=0.2, random_state=2)","cf6d49f9":"from xgboost import XGBClassifier\nclassifier = XGBClassifier()\nclassifier.fit(X_train, y_train)","cece8a5a":"print(classifier.score(X_train, y_train))","54ab44b3":"print(classifier.score(X_test, y_test))","2b303055":"selected_test = final_test[features]\nmodel = XGBClassifier()\nmodel.fit(selected_train, labels)\nsubmission = pd.DataFrame({\"PassengerId\": final_test.PassengerId, \"Survived\": model.predict(selected_test)})\nsubmission.to_csv('submission.csv', index=False)","0df68cf7":"Save clean datasets","c1c180be":"Check dimensions","80544113":"Submission","9f7aa249":"Feature Engineering, based on this excellent notebook:<br>\nhttps:\/\/www.kaggle.com\/nicapotato\/titanic-feature-engineering","fccd1d4f":"Training Accuracy","65757ab4":"Convert categoricals to numerics","5cde9458":"Concatenate train + test","4d2b64ef":"Check for Missing Values","addd3e7a":"Save the target column separately","3bf34f77":"Replace Missing Values","a8771b66":"Split the data in 80\/20 ratio","29505df8":"Delete unnecessary features","3f95af4c":"Testing Accuracy"}}