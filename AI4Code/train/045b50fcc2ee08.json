{"cell_type":{"2706eebe":"code","b4d65208":"code","6e4e51b4":"code","b871f3cc":"code","dccfff74":"code","4b4f7d88":"code","ca6e13a9":"code","0b98465f":"code","76b7c432":"code","04866912":"code","0515027e":"code","8780be35":"code","ca2648f8":"code","58e1210c":"code","d8394056":"code","f33b1847":"code","7bb8b543":"code","0e92fef3":"code","9bad5a72":"code","426d44e0":"code","7a4ec97a":"code","6b3fb4ab":"code","e4814b33":"code","1dc0fd64":"code","35e43c72":"markdown","c4c6fd39":"markdown","8387345a":"markdown","777bc4f2":"markdown","694d7388":"markdown","3a2d9552":"markdown","77896fa5":"markdown","111de8ff":"markdown","976707e1":"markdown","30ce212d":"markdown","8d3b82e1":"markdown","ebb4958a":"markdown","3e99dfbe":"markdown","1da886aa":"markdown"},"source":{"2706eebe":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndf=pd.read_csv('..\/input\/nbme-score-clinical-patient-notes\/train.csv')\ndf.head()","b4d65208":"df.info()","6e4e51b4":"notes=pd.read_csv('..\/input\/nbme-score-clinical-patient-notes\/patient_notes.csv')\nnotes.head()","b871f3cc":"notes['pn_history'][16][696:724]","dccfff74":"notes['pn_history'][0]","4b4f7d88":"def remove(text,prefixes):\n    for v in prefixes:text=text.replace(v,'')\n    return text\ncleaned=remove(notes['pn_history'][0],['\\r','\\n',':'])","ca6e13a9":"cleaned","0b98465f":"cleaned.split(',')","76b7c432":"notes['feats']=notes['pn_history'].apply(lambda x:len(x.split(',')))\nnotes.head()","04866912":"px.histogram(notes['feats'])","0515027e":"notes['words']=notes['pn_history'].apply(lambda x:len(x.split()))\nnotes.head()","8780be35":"px.histogram(notes['words'])","ca2648f8":"px.histogram(notes['words']\/notes['feats'])","58e1210c":"df['no_of_feats']=df['annotation'].apply(lambda x:len(x.split(',')))\ndf.head()","d8394056":"px.histogram(df['no_of_feats'])","f33b1847":"def str2vec(string):\n    k=string[1:-1]\n    k=k.replace(\"'\",'')\n    return k.split(',')\nstr2vec(\"['1','2','3']\")","7bb8b543":"features=list(map(str2vec,df['annotation']))\nfeatures[0]","0e92fef3":"\nk=[]\nfor g in features:\n    for l in g:\n        k.append(len(l))\npx.histogram(np.array(k))","9bad5a72":"def span(location):\n    listed=str2vec(location)\n\n    listed=np.array(list(map(lambda x:x.split(),listed)))\n    try:\n\n        return list(map(int,list(listed.T[0]))),list(map(int,list(listed.T[1])))\n    except:\n        return list(),list()\nspan(\"['1 2','4 3']\")","426d44e0":"train = df.merge(notes,on=['case_num','pn_num'])","7a4ec97a":"train.head()","6b3fb4ab":"x1,y1=list(),list()\nlocations=list(map(span,train['location']))\nlengths=np.array(list(map(len,train['pn_history'])))\ni=0\nfor value in locations:\n    x1+=list(np.array(value[0])\/lengths[i])\n   \n    y1+=list(np.array(value[1])\/lengths[i])\n    i+=1","e4814b33":"x1,y1=np.array(x1),np.array(y1)","1dc0fd64":"fig = ff.create_2d_density(\n    x1[:2000], y1[:2000], colorscale=colorscale,\n    hist_color='rgb(255, 237, 222)', point_size=10\n)\n\nfig.show()","35e43c72":"# Thank You Upvote if you Like Its to be noted that a lot of work is still in progress \n","c4c6fd39":"# ratio between the two","8387345a":"# Length of each feature","777bc4f2":"# Format \n\nthe notes[description] of each patient are written in patient_Notes.csv while the main feature from that description is written in train.csv given the note we need an NER approach to find the location of the main features or main key phrase in that text the location is stored as `[starting_character_index_of_main_feat_in_the_text:ending_character_index_of_main_feat_in_the_text]` and we will see this in a moment so dont worry if u didnt get it.\n\n","694d7388":"looks like we can divide the sentence with the `,` prefix each having one important note like `physical examination, and treatment-began 2-3 months ago` so we can split this with `,`","3a2d9552":"look here the location for this note was ['696 724'] u can see it in the train.csv head listed above so if crop that location i will get the feat","77896fa5":"# Distribution of the number of parts we get when split by `,` operator","111de8ff":"# seems great !","976707e1":"# Most Common places for NER","30ce212d":"# Overview of patient_notes","8d3b82e1":"# Import & Load Data","ebb4958a":"# Histogram of number of features per note","3e99dfbe":"# Our texts are bit messy lets clean them up","1da886aa":"# Distribution of number of words we get"}}