{"cell_type":{"0d82c63d":"code","d4b863fd":"code","de42ec63":"code","3951b73f":"code","ef1eda7c":"code","35c3cc2e":"code","217a4e3b":"code","c6a15e63":"code","5b510b0a":"code","ba3399c8":"code","ed536d53":"code","09325351":"code","305b65c6":"code","c0c9bd0b":"code","75e59f1f":"code","ea8ecdaf":"code","2fcb1005":"markdown","f64c1029":"markdown","9316594f":"markdown","723c6ed5":"markdown","147ba415":"markdown","1984be5b":"markdown"},"source":{"0d82c63d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir('..\/input'))\n\n# Any results you write to the current directory are saved as output.","d4b863fd":"#We create Pandas dataframe.\ndata = pd.read_csv('..\/input\/world-happiness\/2015.csv')","de42ec63":"#default value is 5. We will see first 7 dataset.\ndata.head(7)","3951b73f":"#Default 5. We will see last 5 data in dataset.\ndata.tail()","ef1eda7c":"#We will see the shape of data. First attribute is row of data and second attribute is columns(features) of data.\ndata.shape","35c3cc2e":"#Give information about our data\ndata.info()","217a4e3b":"#value_count(): Frequency counts\nprint(data['Freedom'].value_counts())","c6a15e63":"#Describe the value of count, mean, std, min, 25%, 50%, 75%, max.\n\n#count = number of entries.\n#mean = average of entries.\n#std = standart deviation\n#min = minimum entry\n#25% = first quantile\n#50% = median or second quantile\n#75% = third quantile\n#max = maximum entry\n\ndata.describe()#ignore null entries","5b510b0a":"data.boxplot(column ='Economy (GDP per Capita)', by ='Family')\nplt.show()","ba3399c8":"#Firstly, we create new data using our dataset.\ndata_new = data.head()\ndata_new","ed536d53":"#Let's melt\n#id_vars = what we do not wish to melt\n#value_vars = what we want to melt\nmelted = pd.melt(frame = data_new,id_vars = 'Country', value_vars =  ['Happiness Rank', 'Happiness Score' ])\nmelted","09325351":"#Index is name\n#We want to make that columns are variable.\n#Finally values in columns are value.\nmelted.pivot(index = 'Country', columns = 'variable', values = 'value')","305b65c6":"### Firstly lets create 2 dataframe.\ndata1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1, data2], axis = 0, ignore_index = True)#axis =0 is add dataframe in row.\nconc_data_row","c0c9bd0b":"#For horizontal \ndata1 = data['Country'].head()\ndata2 = data['Happiness Rank'].head()\nconc_data_col = pd.concat([data1, data2], axis = 1)#axis = 1 is add dataframe in column\nconc_data_col","75e59f1f":"data.dtypes","ea8ecdaf":"#Lets convert object(str) to categorical and int to float\ndata['Country'] = data['Country'].astype('category')\ndata.dtypes","2fcb1005":"# **TIDY DATA**","f64c1029":"# **CONCATINATING DATA**\nWe can concatinate two dataframe.","9316594f":"# **DATA TYPES**\n\nThere are 5 basic data types:object(String), boolean, integer, float and categorical.\nWhy category important:\n* make dataframe smaller in memory\n* can be utilized for analysis expecially for sklearn","723c6ed5":"# **PIVOTING DATA**\nReverse of melting.","147ba415":"# Explotory Data Analysis(EDA)","1984be5b":"# ****OUTLIERS:****\nThe value that is considerably higher or lower from rest of the data."}}