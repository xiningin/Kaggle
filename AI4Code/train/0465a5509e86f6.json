{"cell_type":{"49f5ec4d":"code","4ede991e":"code","6493326b":"code","df94b563":"code","bfb78da6":"code","45383345":"code","e231503b":"code","9551d4ab":"code","bc822703":"code","85012a70":"code","4f8eb77a":"code","782546f0":"code","bb8cfe47":"code","6d0e43cf":"code","52197843":"code","667d9b1f":"markdown","3965e8ac":"markdown","e9418fe7":"markdown","d18350a8":"markdown","5e2e9be0":"markdown","79531083":"markdown","4d1fe272":"markdown","ddb6ce83":"markdown","2127da13":"markdown","6394e29a":"markdown"},"source":{"49f5ec4d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4ede991e":"data=pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')\ndata.head()","6493326b":"labels=data['class']\ndata=data.drop('class',axis=1)\nlabels.head()","df94b563":"data.head()","bfb78da6":"data.dtypes","45383345":"from sklearn.preprocessing import LabelEncoder\nencoder=LabelEncoder()","e231503b":"data.columns","9551d4ab":"for i in data.columns:\n    data[i]=encoder.fit_transform(data[i])","bc822703":"data.head()","85012a70":"data.dtypes","4f8eb77a":"from sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression()","782546f0":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(data,labels,test_size=0.3,random_state=40)","bb8cfe47":"model.fit(X_train,y_train)","6d0e43cf":"predictions=model.predict(X_test)","52197843":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy : \"+str(accuracy_score(y_test,predictions)))","667d9b1f":"# READING DATA","3965e8ac":"Now, all the characters has been converted to integers.","e9418fe7":"# ACCURACY OF THE MODEL\n  The accuracy_score() is used to find the accuracy of the model.  Using Logistic Regression, the accuracy obtained is 94%","d18350a8":"# GETTING TARGET LABEL\n   The target label used in the dataset is **class**.  This contains the data about whether a mushroom is edible or not.  The target label is stored in another variable and is dropped from the dataframe.","5e2e9be0":"# DATA SPLIT \n  Here, the train_test_split() will split the data into training and testing data.  The training data will contain 70% of the actual data and the testing data will contain 30% of the data.","79531083":"# ENCODING DATA\n  Since, the data is of object type, It is not possible to make prediction.  So, we need a way to convert the data to either an integer type or a float type.  To do this, we need to encode the data.  Here, **Label Encoder** is used to encode the data.","4d1fe272":"# MUSHROOM CLASSIFIER\n   Mushroom classifier is a Machine Learning model which is used to predict whether a mushroom is edible or not.  The model which is used here is a Logistic Regression model. The data is taken from https:\/\/www.kaggle.com\/uciml\/mushroom-classification. The dataset consists of 22 features and one target label.","ddb6ce83":"# MODEL TRAINING","2127da13":"# PREDICTION ON THE TESTING DATA","6394e29a":"# MODEL CREATION"}}