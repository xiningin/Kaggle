{"cell_type":{"b6af3cec":"code","b57b81c1":"code","40e81c2d":"code","efe41bcd":"code","1d71e32a":"code","964fe712":"code","93816c33":"code","3f85af57":"code","e0fd53d8":"code","694e9c23":"code","14060031":"code","9607edd5":"code","bd505f06":"code","f206c5f7":"code","c0b89b3a":"code","e06a8cc3":"markdown","cbfdd075":"markdown","dc09f676":"markdown","00a1608a":"markdown","17d08e46":"markdown","af88c969":"markdown","731d86f6":"markdown","9851c92f":"markdown","cfdeb775":"markdown","5bd5d340":"markdown","f30a56e8":"markdown","743871ef":"markdown","0f5c2e96":"markdown","45ea036e":"markdown","78876322":"markdown","270ed204":"markdown","c90714e5":"markdown"},"source":{"b6af3cec":"# \u521d\u56de\u306e\u307f\u5b9f\u884c\u3059\u308c\u3070\u3088\u3044\n!pip install mglearn","b57b81c1":"import numpy as np\nimport pandas as pd\nimport mglearn","40e81c2d":"# \u52d5\u7269\u3092\u533a\u5225\u3059\u308b\u6c7a\u5b9a\u6728\nmglearn.plots.plot_animal_tree()","efe41bcd":"mglearn.plots.plot_tree_progressive()","1d71e32a":"from sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\n\ncancer = load_breast_cancer()\nX_train, X_test, y_train, y_test = train_test_split(\n    cancer.data, cancer.target, stratify=cancer.target, random_state=42)\ntree = DecisionTreeClassifier(random_state=0)\ntree.fit(X_train, y_train)\nprint(\"\u8a13\u7df4\u30b9\u30b3\u30a2: {:.3f}\".format(tree.score(X_train, y_train)))\nprint(\"\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2:{:.3f}\".format(tree.score(X_test, y_test)))","964fe712":"from sklearn.tree import export_graphviz\nexport_graphviz(tree, out_file=\"tree.dot\", class_names=[\"malignant\", \"benign\"],\n                feature_names=cancer.feature_names, impurity=False, filled=True)\n# \u5168\u4f53\u3092\u78ba\u8a8d\nfrom IPython.display import Image, display_png\n!dot -Tpng tree.dot -o tree.png\ndisplay_png(Image(\"tree.png\"))","93816c33":"tree = DecisionTreeClassifier(max_depth=4, random_state=0)\ntree.fit(X_train, y_train)\n\nprint(\"\u8a13\u7df4\u30b9\u30b3\u30a2: {:.3f}\".format(tree.score(X_train, y_train)))\nprint(\"\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2:{:.3f}\".format(tree.score(X_test, y_test)))","3f85af57":"from sklearn.tree import export_graphviz\nexport_graphviz(tree, out_file=\"tree.dot\", class_names=[\"malignant\", \"benign\"],\n                feature_names=cancer.feature_names, impurity=False, filled=True)\n# \u5168\u4f53\u3092\u78ba\u8a8d(\u6728\u306e\u6df1\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b)\nfrom IPython.display import Image, display_png\n!dot -Tpng tree.dot -o tree.png\ndisplay_png(Image(\"tree.png\"))","e0fd53d8":"print(\"\u7279\u5fb4\u91cf\u91cd\u8981\u5ea6\u306e\u914d\u5217:\")\nprint(tree.feature_importances_)","694e9c23":"import matplotlib.pyplot as plt\ndef plot_feature_importances_cancer(model):\n    n_features = cancer.data.shape[1]\n    plt.barh(np.arange(n_features), model.feature_importances_, align='center')\n    plt.yticks(np.arange(n_features), cancer.feature_names)\n    plt.xlabel(\"Feature importance\")\n    plt.ylabel(\"Feature\")\n    plt.ylim(-1, n_features)\n\nplot_feature_importances_cancer(tree)","14060031":"tree = mglearn.plots.plot_tree_not_monotone()\ndisplay(tree)","9607edd5":"import os\nram_prices = pd.read_csv(os.path.join(mglearn.datasets.DATA_PATH, \"ram_price.csv\"))","bd505f06":"# semilogy: y\u8ef8\u3092\u5bfe\u6570\u5909\u63db\u3057\u3066\u6563\u5e03\u56f3\u3092\u63cf\u5199\nplt.semilogy(ram_prices.date, ram_prices.price)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Price in $\/Mbyte\")","f206c5f7":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\n# 2000\u5e74\u3092\u5883\u306b\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\ndata_train = ram_prices[ram_prices.date < 2000]\ndata_test = ram_prices[ram_prices.date >= 2000]\n\n# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\u3092\u53d6\u5f97\nX_train = data_train.date[:, np.newaxis]\n# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u76ee\u7684\u5909\u6570\u3092\u5bfe\u6570\u5909\u63db\u3057\u3066\u53d6\u5f97\ny_train = np.log(data_train.price)\n\n# `DecisionTreeRegressor`\u306e\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\ntree = DecisionTreeRegressor(max_depth=3).fit(X_train, y_train)\n# `LinearRegression`\u306e\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\nlinear_reg = LinearRegression().fit(X_train, y_train)\n\n# ram_prices\u306e\u5168\u65e5\u4ed8\u3092\u53d6\u5f97\nX_all = ram_prices.date[:, np.newaxis]\n\n# \u5168\u65e5\u4ed8\u306b\u5bfe\u3057\u3066\u306e\u4e88\u6e2c\u3092\u884c\u3046\npred_tree = tree.predict(X_all)\npred_lr = linear_reg.predict(X_all)\n\n# \u5404\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7d50\u679c\u3092\u53d6\u5f97\nprice_tree = np.exp(pred_tree)\nprice_lr = np.exp(pred_lr)","c0b89b3a":"plt.semilogy(data_train.date, data_train.price, label=\"Training data\")\nplt.semilogy(data_test.date, data_test.price, label=\"Test data\")\nplt.semilogy(ram_prices.date, price_tree, label=\"Tree prediction\")\nplt.semilogy(ram_prices.date, price_lr, label=\"Linear prediction\")\nplt.legend()","e06a8cc3":"\u5b9f\u969b\u306b\u3001`feature_importances_`\u3067\u8a13\u7df4\u5f8c\u306e\u30e2\u30c7\u30eb\u304c\u6301\u3064\u3001\u7279\u5fb4\u91cf\u91cd\u8981\u5ea6\u3092\u78ba\u8a8d\u3059\u308b\u3068  \n\u3053\u3053\u3067\u3082\u3001`worst_radius`\u306e\u91cd\u8981\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002","cbfdd075":"## \u6c7a\u5b9a\u6728\u306e\u904e\u5270\u9069\u5408\u306e\u5236\u5fa1\n\u4ee5\u4e0b\u3001\u8a13\u7df4\u30b9\u30b3\u30a2\u304c1.000\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u660e\u3089\u304b\u306b\u904e\u5270\u5b66\u7fd2\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002  \nDecisionTreeClassifier\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066  \n\u30fbmin_samples_split(\u5185\u90e8\u30ce\u30fc\u30c9\u3092\u5206\u5272\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30b5\u30f3\u30d7\u30eb\u306e\u6700\u5c0f\u6570)\uff1a 2  \n\u30fbmax_depth(\u30c4\u30ea\u30fc\u306e\u6700\u5927\u306e\u6df1\u3055): None-\u6307\u5b9a\u306a\u3057  \n\u3068\u306a\u3063\u3066\u3044\u308b\u3001\u305d\u306e\u305f\u3081\u904e\u5270\u5b66\u7fd2\u306b\u306a\u308a\u3084\u3059\u3044\u3002        ","dc09f676":"\u4ee5\u4e0b\u306e\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDecisionTreeClassifier\u3067\u306f\u3001\u8449\u304c\u7d14\u67a0\u306b\u306a\u308b\u307e\u3067\u6728\u3092\u6df1\u304f\u3057\u3066\u3044\u304f\u306e\u3067\u904e\u5270\u9069\u5408\u3092\u8d77\u3053\u3057\u3066\u3057\u307e\u3046\u3002","00a1608a":"train_test_split\u306e`\u5f15\u6570stratify`\u306b\u5747\u7b49\u306b\u5206\u5272\u3055\u305b\u305f\u3044\u30c7\u30fc\u30bf\uff08\u591a\u304f\u306e\u5834\u5408\u306f\u76ee\u7684\u5909\u6570\uff09\u3092  \n\u6307\u5b9a\u3059\u308b\u3068\u305d\u306e\u30c7\u30fc\u30bf\u306e\u5024\u306e\u6bd4\u7387\u304c\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u5206\u5272\u3055\u308c\u308b\u3002  \n\u53c2\u8003\u8a18\u4e8b\uff1ahttps:\/\/www.haya-programming.com\/entry\/2019\/06\/23\/205121","17d08e46":"max_depth(\u6728\u306e\u6df1\u3055)\u30924\u3067\u6c7a\u5b9a\u6728\u3092\u69cb\u7bc9\u3059\u308b\u3068\u3001\u6c4e\u5316\u6027\u80fd\u304c\u4e0a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002  \n\u6728\u306e\u6df1\u3055\u3092\u6d45\u304f\u3057\u3001\u6c4e\u5316\u6027\u80fd\u3092\u3042\u3052\u308b\u65b9\u6cd5\u3092`\u4e8b\u524d\u679d\u5208\u308a`\u3068\u3044\u3046\u3002\n\n\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2\u304c\u5411\u4e0a\u3057\u3001\u6c4e\u5316\u6027\u80fd\u304c\u4e0a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002","af88c969":"\u3053\u308c\u304b\u3089\u30012000\u5e74\u4ee5\u524d\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u30572000\u5e74\u4ee5\u964d\u306e\u30c7\u30fc\u30bf\u3092DecisionTreeRegressor\u3067\u4e88\u6e2c\u3057\u3066\u3044\u304f\u3002  \n\u6bd4\u8f03\u5bfe\u8c61\u3068\u3057\u3066\u3001LinearRegression\u3067\u3082\u540c\u3058\u6761\u4ef6\u3067\u4e88\u6e2c\u3092\u884c\u3063\u3066\u3044\u304f\u3002  ","731d86f6":"\u7279\u5fb4\u91cf\u91cd\u8981\u5ea6\u3092\u53ef\u8996\u5316\u3059\u308b\u3002","9851c92f":"## \u6c7a\u5b9a\u6728\n\u6c7a\u5b9a\u6728\uff1aYes\/No\u3067\u7b54\u3048\u3089\u308c\u308b\u8cea\u554f\u3067\u69cb\u6210\u3055\u308c\u305f\u968e\u5c64\u7684\u306a\u6728\u69cb\u9020\u3092\u5b66\u7fd2\u3059\u308b","cfdeb775":"### \u91cd\u8981\u5ea6\u3068\u76ee\u7684\u5909\u6570\u306e\u95a2\u4fc2\u3000\n\u5fc5\u305a\u3057\u3082\u3001\u5148\u307b\u3069\u306e\u3088\u3046\u306b\u91cd\u8981\u5ea6\u306e\u9ad8\u3044\u30af\u30e9\u30b9\u3067\u5206\u985e\u3055\u308c\u308c\u3070\u76ee\u7684\u5909\u6570\u304c\u7dba\u9e97\u306b\u5206\u96e2\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u3002  \ny\u8ef8(x[1])\u306b\u5bfe\u3057\u3066\u3001\u30af\u30e9\u30b9\u30e9\u30d9\u30eb\u3068\u5358\u8abf\u306a\u95a2\u4fc2\u3092\u6301\u305f\u306a\u30442\u6b21\u5143\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u6c7a\u5b9a\u6728\u3092\u8003\u3048\u308b\u3002\n\n\u4ee5\u4e0b\u306e\u56f3\u3088\u308a\u3001\u5206\u985e\u306b\u306fy\u8ef8\u65b9\u5411(x[1])\u306e\u5024\u3057\u304b\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3002  \n\u3053\u306e\u5834\u5408\u306f\u3001\u300cy\u306e\u5024\u304c\u5927\u304d\u3044\u3068\u30af\u30e9\u30b9\uff10\u306b\u306a\u308a\u3001\u5c0f\u3055\u3044\u30681\u306b\u306a\u308b\u300d\u3068\u306f\u8a00\u3048\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002","5bd5d340":"\u7d50\u679c\u3092\u30b0\u30e9\u30d5\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001  \n\u6c7a\u5b9a\u6728\u306b\u304a\u3044\u3066\u306f\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u306a\u3044\u9818\u57df\u306b\u95a2\u3057\u3066\u306f\u5168\u304f\u4e88\u6e2c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u3002\n\u672a\u6765\u65e5\u306b\u5bfe\u3057\u3066\u306e\u4e88\u6e2c\u306f\u3001\u6c7a\u5b9a\u6728\u306f\u77e5\u3063\u3066\u3044\u308b\u6700\u5f8c\u306e\u7b54\u3048\u3092\u305a\u3063\u3068\u8fd4\u3057\u3066\u3057\u307e\u3044\u3002\n\u65b0\u3057\u3044\u7b54\u3048\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002","f30a56e8":"## \u7279\u5fb4\u91cf\u306e\u91cd\u8981\u6027\n\u4e0a\u56f3\u3092\u78ba\u8a8d\u3059\u308b\u3068\u6700\u521d\u306e\u8cea\u554f\u3067\u5de6\u306b\u5225\u308c\u305f\"284\"\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u8fbf\u308b\u3068\u307b\u3068\u3093\u3069\u304c\"benign\"\u306b\u305f\u3069\u308a\u7740\u304f\u3002  \n\u9006\u306b\u3001\u6700\u521d\u306e\u8cea\u554f\u3067\u53f3\u306b\u5225\u308c\u305f\"142\"\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u8fbf\u308b\u3068\u307b\u3068\u3093\u3069\u304c\"malignant\"\u306b\u305f\u3069\u308a\u7740\u304f\u3002  \n\n\u6700\u521d\u306e`worst_radius`\u3067\u304b\u306a\u308a\u7dba\u9e97\u306b\u5206\u96e2\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002","743871ef":"### \u4e8b\u524d\u679d\u5208\u308a","0f5c2e96":"## \u307f\u3093\u306a\u306e\u5099\u5fd8\u9332_\u6c7a\u5b9a\u6728(DecisionTreeClassifier)\n\u53c2\u8003\u30bd\u30fc\u30b9\uff1ahttps:\/\/github.com\/amueller\/introduction_to_ml_with_python\/blob\/master\/02-supervised-learning.ipynb  \n\u53c2\u8003\u66f8\u7c4d\uff1aPython\u3067\u306f\u3058\u3081\u308b\u6a5f\u68b0\u5b66\u7fd2\n\nDecisionTreeClassifier\u53c2\u8003URL:  \nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier","45ea036e":"## \u6c7a\u5b9a\u6728\u306e\u69cb\u7bc9\n\u6c7a\u5b9a\u6728\u306f\u3001\u76ee\u7684\u5909\u6570\u306b\u5bfe\u3057\u3066\u5206\u5272\u3057\u305f\u969b\u306b\u6700\u3082\u60c5\u5831\u91cf\u304c\u591a\u304f\u306a\u308b\u3088\u3046\u306b\u69cb\u7bc9\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306a\u3063\u3066\u3044\u308b\u3002  ","78876322":"## \u6c7a\u5b9a\u6728\u306b\u3088\u308b\u56de\u5e30\u5206\u6790(DecisionTreeRegressor)\n\u4eca\u307e\u3067\u306f\u3001\u6c7a\u5b9a\u6728\u306b\u3088\u308b\u30af\u30e9\u30b9\u5206\u985e\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3057\u3066\u304d\u305f\u304c\u3001\u3053\u3053\u3067\u8ff0\u3079\u305f\u3053\u3068\u306f\u6c7a\u5b9a\u6728\u306b\u3088\u308b\u56de\u5e30\u5206\u6790\u3067\u3082\u5f53\u3066\u306f\u307e\u308b\u3002   \nram_prices.csv\u306f\u3001\u5e74\u3054\u3068\u306e\u8a08\u7b97\u6a5f\u306e\u30e1\u30e2\u30ea(RAM)\u4fa1\u683c\u3092\u6301\u3064\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3042\u308b\u3002","270ed204":"\n\u4ee5\u4e0b\u306e\u3001two-moons\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u306f\u3001\u6700\u521d\u306e\u8cea\u554f\u3068\u3057\u3066\u3001x[1] <= 0.06\u3067\u6700\u3082\u5404\u76ee\u7684\u5909\u6570\u304c\u591a\u304f\u306a\u308b\u3088\u3046\u306b\u5206\u5272\u3055\u308c\u3066\u3044\u308b\u3002  \n\u5206\u5272\u3055\u308c\u305f\u9818\u57df\u306b\u5bfe\u3057\u3066\u3082\u540c\u3058\u3088\u3046\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6b63\u78ba\u306a\u30e2\u30c7\u30eb\u304c\u4f5c\u3089\u308c\u3066\u3044\u304f\u3002","c90714e5":"\u6c7a\u5b9a\u6728\u306b\u304a\u3044\u3066\u904e\u5270\u9069\u5408\u3092\u9632\u3050\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u6cd5\u304c\u3042\u308b\u3002\n- \u4e8b\u524d\u679d\u5208\u308a :\u6df1\u3055\u3092\u5236\u9650\u3059\u308b\u65b9\u6cd5\u3084\u3001\u8449\u306e\u6700\u5927\u5024\u3092\u518d\u73fe\u3059\u308b\u65b9\u6cd5\u3001\u5206\u5272\u3059\u308b\u969b\u306b\u305d\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u70b9\u306e\u6700\u5c0f\u6570\u3092\u6c7a\u3081\u3066\u304a\u304f\u65b9\u6cd5\n- \u4e8b\u5f8c\u679d\u5208\u308a :\u6728\u3092\u69cb\u7bc9\u5f8c\u3001\u60c5\u5831\u306e\u5c11\u306a\u3044\u30ce\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5"}}