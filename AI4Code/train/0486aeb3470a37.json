{"cell_type":{"16a78aed":"code","b5505283":"code","aef05954":"code","0d900cde":"code","fea9a2ba":"code","28e7cc27":"code","4a22992e":"code","a01ada46":"code","4af4b330":"code","2fd7d861":"code","3cd56aa5":"code","684baa00":"code","47c473ad":"code","8e3efe1a":"code","b131459f":"code","c9e943a3":"code","38b47fd2":"code","81620c3c":"code","740049fa":"code","711ea9e7":"code","48dc0997":"code","88f8ce81":"code","bed3fe6e":"code","ec883c13":"code","b0b60e9f":"code","b73898b6":"code","59568ff9":"code","e462b515":"code","da64c6af":"code","50582d6e":"code","b123f1d9":"code","eaeb103e":"code","8673e5d5":"code","f2f71fe1":"code","d6fa0f3a":"code","93f131f5":"code","f003873b":"code","52e8c41c":"code","89c828dd":"code","d4b6968a":"code","07674468":"code","4db42e95":"code","8e069e2f":"code","80fa5641":"code","6c1c7042":"code","6d14aa7e":"code","885697e3":"code","16761c83":"code","12cb1a6a":"code","cf4d605c":"code","1004aa56":"code","d018bce4":"code","28ab59bf":"code","264f4e9b":"code","2345bfd7":"code","78c430a1":"code","e962da96":"code","00a35dbb":"code","c0d4c4e2":"code","e16a6923":"code","ff1ae871":"code","3501189a":"code","0cf9c949":"code","a07aea41":"code","d3471c24":"code","acedc9d7":"code","49ffb693":"code","d72ef90e":"code","bae44ead":"code","a76bb229":"markdown","a5a783bb":"markdown","2657196c":"markdown","13b37157":"markdown","17a3caf8":"markdown","e86451cb":"markdown","f6834246":"markdown","4e16a298":"markdown"},"source":{"16a78aed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5505283":"import matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline","aef05954":"medical_data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\n\nmedical_data.head()","0d900cde":"medical_data.shape","fea9a2ba":"medical_data.info()","28e7cc27":"medical_data.describe()","4a22992e":"medical_data.age.describe()","a01ada46":"fig = px.histogram(medical_data, x='age', marginal = 'box', nbins = 47, title='Distribution of Age')\nfig.update_layout(bargap=0.1)\nfig.show()","4af4b330":"medical_data.bmi.describe()","2fd7d861":"fig = px.histogram(medical_data, x='bmi', marginal='box', title='Distribution of BMI')\nfig.update_layout(bargap=0.1)\nfig.show()","3cd56aa5":"medical_data.children.describe()","684baa00":"fig = px.histogram(medical_data, x='children', marginal = 'box', title = 'Distribution of children')\nfig.update_layout(bargap=0.1)\nfig.show()","47c473ad":"medical_data.charges.describe()","8e3efe1a":"fig = px.histogram(medical_data, x='charges', marginal='box', title='Distribution of charges')\nfig.update_layout(bargap=0.1)\nfig.show()","b131459f":"fig = px.histogram(medical_data, x='charges', marginal='box', color='smoker', color_discrete_sequence=['green', 'grey'], title='Distribution of charges with respect to smoker')\nfig.update_layout(bargap=0.1)\nfig.show()","c9e943a3":"medical_data.sex.value_counts()","38b47fd2":"fig = px.histogram(medical_data, x='sex', title='Distribution for sex')\nfig.show()","81620c3c":"fig = px.histogram(medical_data, x='sex', color='smoker', title='Distribution of sex with respect to smoker')\nfig.show()","740049fa":"medical_data.region.value_counts()","711ea9e7":"fig = px.histogram(medical_data, x='region', title='Distribution for region')\nfig.show()","48dc0997":"fig = px.histogram(medical_data, x='region', color='smoker', title='Distribution of region with respect to smoker')\nfig.show()","88f8ce81":"fig = px.histogram(medical_data, x='region', color='sex', title='Distribution of region with respect to sex')\nfig.show()","bed3fe6e":"medical_data.smoker.value_counts()","ec883c13":"fig = px.histogram(medical_data, x='smoker', title='Distribution of smoker')\nfig.show()","b0b60e9f":"fig = px.histogram(medical_data, x='smoker', color='region' ,title='Distribution of smoker')\nfig.show()","b73898b6":"fig = px.histogram(medical_data, x='age', color='smoker' ,title='Distribution of age with smoker')\nfig.show()","59568ff9":"fig = px.scatter(medical_data, x='age', y='charges', color='smoker', opacity=0.8, title='Age vs Charges')\nfig.update_traces(marker_size=5)\nfig.show()","e462b515":"fig = px.scatter(medical_data, x='bmi', y='charges', color='smoker', opacity=0.8, title='BMI vs Charges')\nfig.update_traces(marker_size=5)\nfig.show()","da64c6af":"fig = px.violin(medical_data, x='children', y='charges', color='smoker', title='Children vs Charges')\nfig.show()","50582d6e":"medical_data.charges.corr(medical_data.age)","b123f1d9":"medical_data.charges.corr(medical_data.bmi)","eaeb103e":"medical_data.charges.corr(medical_data.children)","8673e5d5":"smoker_values = {'no': 0, 'yes': 1}\nsmoker_numeric = medical_data.smoker.map(smoker_values)\nsmoker_numeric","f2f71fe1":"medical_data.charges.corr(smoker_numeric)","d6fa0f3a":"sex_values = {'female': 0, 'male': 1}\nsex_numeric = medical_data.sex.map(sex_values)\nsex_numeric","93f131f5":"medical_data.charges.corr(sex_numeric)","f003873b":"region_values = {'northeast': 0, 'northwest' : 1, 'southeast' : 2, 'southwest' : 3}\nregion_numeric = medical_data.region.map(region_values)\nregion_numeric","52e8c41c":"medical_data.charges.corr(region_numeric)","89c828dd":"medical_data.corr()","d4b6968a":"sns.heatmap(medical_data.corr(), cmap='Reds', annot=True)\nplt.title('Correlation of numeric values')","07674468":"smoker_codes = {'no' : 0, 'yes' : 1}\nmedical_data['smoker_code'] = medical_data.smoker.map(smoker_codes)\nmedical_data.head()","4db42e95":"sex_codes = {'female' : 0, 'male' : 1}\nmedical_data['sex_code'] = medical_data.sex.map(sex_codes)\nmedical_data.head()","8e069e2f":"from sklearn import preprocessing\nencoding = preprocessing.OneHotEncoder()\nencoding.fit(medical_data[['region']])\nencoding.categories_","80fa5641":"one_hot = encoding.transform(medical_data[['region']]).toarray()","6c1c7042":"medical_data[['northeast', 'northwest', 'southeast', 'southwest']] = one_hot\nmedical_data.head()","6d14aa7e":"from sklearn.preprocessing import StandardScaler","885697e3":"numerical_columns = ['age', 'bmi', 'children']\nscaler = StandardScaler()\nscaler.fit(medical_data[numerical_columns])","16761c83":"scaler.mean_","12cb1a6a":"scaler.var_","cf4d605c":"scaled_inputs = scaler.transform(medical_data[numerical_columns])\nscaled_inputs","1004aa56":"categorical_columns = ['smoker_code', 'sex_code', 'northeast', 'northwest', 'southeast', 'southwest']\ncategorical_inputs = medical_data[categorical_columns]\ncategorical_inputs.values","d018bce4":"inputs = np.concatenate((scaled_inputs, categorical_inputs), axis=1)\ninputs","28ab59bf":"targets = medical_data['charges']\ntargets","264f4e9b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","2345bfd7":"inputs_train, inputs_test, targets_train, targets_test = train_test_split(inputs, targets, test_size = 0.3, random_state = 3)","78c430a1":"model = LinearRegression()","e962da96":"model.fit(inputs_train, targets_train)","00a35dbb":"predictions_test = model.predict(inputs_test)","c0d4c4e2":"def rmse(target, prediction):\n    return np.sqrt(np.mean(np.square(target - prediction)))","e16a6923":"loss = rmse(targets_test, predictions_test)\nprint(f'The Root Mean Square Loss for this Linear Model is {loss}.')","ff1ae871":"model.coef_","3501189a":"model.intercept_","0cf9c949":"inputs_columns = ['age', 'bmi', 'children', 'smoker_code', 'sex_code', 'northeast', 'northwest', 'southeast', 'southwest']","a07aea41":"weight_df = pd.DataFrame({\n    'feature' : np.append(inputs_columns, 'Bias'),\n    'weights' : np.append(model.coef_, model.intercept_)\n})","d3471c24":"weight_df","acedc9d7":"new_customer = [[28, 30, 2, 1, 0, 0, 1, 0, 0]]\n\nscaler.transform([[28, 30, 2]])","49ffb693":"predictions_new_customer = model.predict([[-0.79795355, -0.10882659, 0.75107928, 1, 0, 0, 1, 0, 0]])","d72ef90e":"predictions_new_customer","bae44ead":"weight_df.to_csv('output.csv', index=False)","a76bb229":"**Distribution of charges with respect to smokers**","a5a783bb":"**Creating a model**","2657196c":"**Scaling the numerical values**","13b37157":"**Feature Scaling**","17a3caf8":"**Predicting for new customers**","e86451cb":"**BiVariate analysis**","f6834246":"**Corelation for the given data**","4e16a298":"**Univariate Exploratory Data Analysis**"}}