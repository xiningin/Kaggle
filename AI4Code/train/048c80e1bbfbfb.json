{"cell_type":{"fe3415c1":"code","4efbcc23":"code","7b3b9696":"code","ad5757bc":"code","cfdeb65a":"code","ad7bb4f2":"code","181f944e":"code","2e9573b4":"code","d4edc6ff":"code","d603c621":"code","93703814":"code","be85eff0":"code","062b1975":"code","4c7b5066":"code","fa2be6ed":"code","efd7ce5d":"code","06794377":"code","a55eef11":"code","618bb20e":"code","b78b6e5f":"code","8bd71265":"code","a3014ec1":"code","e3d032ff":"code","47c10a0d":"code","90bbaff7":"code","4c4aad4f":"code","24aad320":"code","31a078dc":"code","4d38602a":"code","aa28058e":"code","1c32a3fa":"code","1ada061a":"code","0899742f":"code","fcdabc46":"code","d9ba0b29":"code","e6588a3d":"code","a7f1ffbe":"code","1718fbe3":"code","81f21429":"code","c56a8ace":"code","8b68f22e":"code","c6792e64":"code","4424ea9d":"code","d3c3ddf7":"code","03610115":"code","7364d7f7":"code","67796b5e":"code","b7863b69":"code","d0f0288a":"code","633350cb":"code","b3b699e8":"code","32cda3f2":"code","46a51a6d":"code","5c51e70f":"code","28cae79b":"code","67ce5d4e":"code","5f1aaa39":"code","57148e5a":"code","e3f1fa50":"code","95fffdab":"code","84c5dc0e":"code","5f4e44af":"code","81187f5b":"code","5c1042bc":"code","039c720d":"markdown","e31813c1":"markdown","df6ede33":"markdown","5ad8af32":"markdown","1b6f14ea":"markdown","010cf237":"markdown","de89da36":"markdown","f70c8e9e":"markdown","cbd373b4":"markdown","3333e5f7":"markdown","9c25502c":"markdown","b23a63ec":"markdown","5094610a":"markdown","b5212fa7":"markdown","87313e38":"markdown","aa0766f1":"markdown","1c960a36":"markdown","91d095e4":"markdown","fc588aa6":"markdown","16b2c664":"markdown","58bd8da0":"markdown","49717c27":"markdown","4d4cae67":"markdown","33fec48a":"markdown","6cf19c89":"markdown","4caef19f":"markdown","81ef6a41":"markdown","aa8174d7":"markdown","5d73a3ac":"markdown","507ae0d3":"markdown","3aaabce7":"markdown","ded642c0":"markdown"},"source":{"fe3415c1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# First read in the required libraries that you will be using\nimport numpy as np # Library for numerical arrays\nimport pandas as pd # library for data manupilation\nimport matplotlib.pyplot as plt # Library for data visualization\nimport seaborn as sns # library for data visualization\nimport warnings\n","4efbcc23":"# Import the Kiva_loan data set using pd.read_csv() format\nkiva=pd.read_csv('\/kaggle\/input\/data-science-for-good-kiva-crowdfunding\/kiva_loans.csv')\nkiva.head()","7b3b9696":"# We call the first few rows to understand the dataset using head() method\n\nkiva.head()# Now we have the first five rows.","ad5757bc":"# We run info() to understand the  data types within the columns\n\nkiva.info()","cfdeb65a":"# We use unique() to view the values in the country column.\nkiva['country'].unique() ","ad7bb4f2":"#Now we can get the Kiva loan data for the Rwanda region \n\nkiva_rwanda = kiva[kiva['country']=='Rwanda']\nkiva_rwanda.head(2) # The first five rows will be displayed to have an understanding of the data set","181f944e":"# We can extract the required variables from (kiva) for our analysis\n# We can run exploratory analysis on funded amount, \n# loan amount, activity, sector, term in months, borrower genders and repayment intervals\n# we name our new data set rwanda\n\nrwanda= kiva_rwanda[['region','funded_amount', 'loan_amount', 'activity', 'sector',\n                    'term_in_months', 'borrower_genders','lender_count','repayment_interval']]\nrwanda.head().reset_index()","2e9573b4":"rwanda.info()\n# There are three data types, 6735 rows and 9 columns","d4edc6ff":"#Check if there are any missing values on the columns\nrwanda.isna().any()\n\n# The borrower_genders and the region column contain some missing values","d603c621":"rwanda.isna().all() # No single column has all the data missing( This is great aspect to our analysis)","93703814":"rwanda.isna().sum() # Checking the total number of missing values\n\n# there are 14 missing values in the gender column and 6138 missing values on the region column","be85eff0":"# Create a copy of the data frame and work with the new copy\nnew_rwanda=rwanda.copy()\nnew_rwanda.isna().sum()","062b1975":"# Dropping the missing values on the borrower_genders Column","4c7b5066":"new_rwanda.dropna(subset=['borrower_genders'], inplace = True)\nnew_rwanda.isna().sum()","fa2be6ed":"# Let us examine the borrower_genders column using unique()\nnew_rwanda['borrower_genders'].unique()","efd7ce5d":"# gettng the total unique variables in the column\nnew_rwanda['borrower_genders'].nunique()\n# We need to clean the gender column from 2407  to 2 variables","06794377":"# we create a function to fix the gender column\n\ndef fix_gender(gender):\n    gender =str(gender)\n    if gender.startswith('f'):\n        gender = 'female'\n    else:\n        gender ='male'\n    return gender","a55eef11":"#Then we apply the function on the borrower_genders column to fix the problem\n\nnew_rwanda['borrower_genders']= new_rwanda['borrower_genders'].apply(fix_gender)","618bb20e":"# lets check if the problem is sorted\n\nnew_rwanda['borrower_genders'].unique()","b78b6e5f":"# Boom!!!!! Now we have two variables as needed for our anlysis\n\nnew_rwanda['borrower_genders'].nunique()","8bd71265":"# Let us explore the numerical values by using describe() function\nnew_rwanda.describe()\n\n# The maximum loan given was 50,000; the longest loan term was 41 months, the lender_count maximum was 1302","a3014ec1":"# We can check the data distribution by using hist() functions\n","e3d032ff":"new_rwanda['funded_amount'].hist(bins=50) # No extreme values so the data is okay\n","47c10a0d":"new_rwanda['loan_amount'].hist(bins=50) # No extreme values so the data is okay","90bbaff7":"new_rwanda.info()","4c4aad4f":"new_rwanda.head()","24aad320":"funded_amount = new_rwanda['funded_amount']\nloan_amount =new_rwanda['loan_amount']\nactivity=new_rwanda['activity']\nsector=new_rwanda['sector']\nterm=new_rwanda['term_in_months']\ngender =new_rwanda['borrower_genders']\ncount=new_rwanda['lender_count']\nrepayment =new_rwanda['repayment_interval']\nregion= new_rwanda['region']","31a078dc":"region.isna().sum() # There are many missing values, so no analysis will be carried out on regions in Rwanda","4d38602a":"# Lets check for duplicates\n\nnew_rwanda.duplicated().sum() # There are 753 duplicates","aa28058e":"# Drop the duplicates\nnew_rwanda_dups = rwanda.copy()\nnew_rwanda_dups.head().isna()","1c32a3fa":"new_rwanda_dups.drop_duplicates(inplace=True)","1ada061a":"new_rwanda_dups","0899742f":"loan_amount.sum() # The total Kiva loan in Rwanda region ","fcdabc46":"# We start grouping the values with sector\n\nrwanda_region =new_rwanda.groupby(['region','sector','activity','borrower_genders', 'repayment_interval']).sum().sort_values(by='loan_amount', ascending=False).reset_index()\nrwanda_region.head()","d9ba0b29":"rwanda_region_sector =new_rwanda.groupby(['region','sector','borrower_genders', 'repayment_interval']).sum().sort_values(by='loan_amount', ascending =False).reset_index()\nrwanda_region_sector.head()","e6588a3d":"# we can compare loan amount given across different sectors\nplt.figure(figsize=(15,10))\nplt.title('Loan amount in every sector')\nplt.xlabel('sector')\nplt.ylabel('loan_amount')\n\nplt.xticks(rotation =75)\n\nsns.barplot(x='sector', y='loan_amount', data =rwanda_region_sector, ci =None)\n\nplt.show()\n","a7f1ffbe":"# we can compare loan amount given across different sectors per gender\nplt.figure(figsize=(15,10))\nplt.title('Loan amount in every sector by gender')\nplt.xlabel('sector')\nplt.ylabel('loan_amount')\n\nplt.xticks(rotation =75)\n\nsns.barplot(x='sector', y='loan_amount', data =rwanda_region_sector, ci =None, hue ='borrower_genders')\n\nplt.show()","1718fbe3":"# we can compare loan amount given across different sectors by repayment interval\nplt.figure(figsize=(15,10))\nplt.title('Loan amount in every sector by repayment interval')\nplt.xlabel('sector')\nplt.ylabel('loan_amount')\n\nplt.xticks(rotation =75)\n\nsns.barplot(x='sector', y='loan_amount', data =rwanda_region_sector, ci =None, hue ='repayment_interval')\n\nplt.show()","81f21429":"# Loan amount vs term in months\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs term in months')\nplt.xticks(rotation=75)\n\nsns.barplot(x='term_in_months', y = 'loan_amount', data =new_rwanda, ci=None)\nplt.show()","c56a8ace":"# Loan amount vs term in months by repayment interval\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs term in months by repayment interval')\nplt.xticks(rotation=75)\n\nsns.barplot(x='term_in_months', y = 'loan_amount', data =new_rwanda, ci=None, hue= 'repayment_interval')\nplt.show()","8b68f22e":"# We compare the loan amount repayment interval\nplt.figure(figsize=(15,10))\nplt.title('loan amount vs Repayment interval')\nplt.xticks(rotation=75)\n\nsns.barplot(x='repayment_interval', y='loan_amount', data = rwanda_region, ci=None )\nplt.show()","c6792e64":"# We compare the loan amount repayment interval between the genders in Rwanda\nplt.figure(figsize=(15,10))\nplt.title('loan amount vs Repayment interval by gender ')\nplt.xticks(rotation=75)\n\nsns.barplot(x='repayment_interval', y='loan_amount', data = rwanda_region, ci=None, hue ='borrower_genders')\nplt.show()","4424ea9d":"new_rwanda.info()","d3c3ddf7":"new_rwanda['term_in_months'].nunique()","03610115":"new_rwanda['term_in_months'].unique()","7364d7f7":"new_rwanda['activity'].nunique()","67796b5e":"new_rwanda['activity'].unique()","b7863b69":"new_rwanda['region'].nunique()","d0f0288a":"new_rwanda['region'].unique()","633350cb":"new_rwanda['sector'].nunique()","b3b699e8":"new_rwanda['sector'].unique()","32cda3f2":"new_rwanda['borrower_genders'].nunique()","46a51a6d":"new_rwanda['borrower_genders'].unique()","5c51e70f":"new_rwanda['repayment_interval'].nunique()","28cae79b":"new_rwanda['repayment_interval'].unique()","67ce5d4e":"# Scatter plot to show relationship between loan amount and the term_in_months\n\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs Term in months')\n\nsns.scatterplot(x='term_in_months', y='loan_amount', data =new_rwanda)\nplt.show()","5f1aaa39":"# Scatter plot to show relationship between loan amount and the term_in_months per sector\n\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs Term in months by sector per gender')\n\nsns.scatterplot(x='term_in_months', y='loan_amount', data =new_rwanda, hue= 'sector', size='loan_amount',\n                style='borrower_genders',  sizes=(100,500))\nplt.show()","57148e5a":"# Scatter plot to show relationship between loan amount and lender count\n\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs lender count')\n\nsns.scatterplot(x='lender_count', y='loan_amount', data =rwanda_region_sector)\nplt.show()","e3f1fa50":"# Scatter plot to show relationship between loan amount and lender count per sector\n\nplt.figure(figsize=(15,10))\nplt.title('Loan amount vs lender count')\n\nsns.scatterplot(x='lender_count', y='loan_amount', data =rwanda_region_sector, hue= 'sector', size='loan_amount',\n                style='borrower_genders',  sizes=(100,500))\nplt.show()","95fffdab":"# We plot the relational plot to show relationship between loan amount, \n# term in months between genders among different sectors\n\nplt.figure(figsize=(15,10))\nsns.relplot(y='loan_amount', x='term_in_months', data =rwanda_region_sector, row='borrower_genders', col='repayment_interval',\n           hue='sector',size='loan_amount', sizes=(100,500),aspect=1.5)\nplt.show()","84c5dc0e":"# We plot the relational plot to show relationship between loan amount and lender count between genders \n# among different sectors\n\nplt.figure(figsize=(15,10))\nsns.relplot(y='loan_amount', x='lender_count', data =rwanda_region_sector, row='borrower_genders', col='repayment_interval',\n           hue='sector', size='loan_amount', sizes=(100,500), aspect=1.5)\nplt.show()","5f4e44af":"# first is to generate correlation values for the rwanda_region_sector variable\n\nrwanda_region_sector_corr = rwanda_region_sector.corr()\nrwanda_region_sector_corr","81187f5b":"# Then we apply the heatmap() function\n\nsns.heatmap(rwanda_region_sector_corr, cmap= 'coolwarm', annot=True, linewidth=0.5)\nplt.show()","5c1042bc":"sns.pairplot(rwanda_region_sector)","039c720d":"# The scatterplot","e31813c1":"## 1.4 Loan Amount and the term in months","df6ede33":"## 1.2 Loan Amount in every sector by Gender","5ad8af32":"## Heatmap","1b6f14ea":"### The total Kiva loan its RWF 16616750.0 ","010cf237":"# Observations","de89da36":"# We can now do our categorical analysis on the Rwanda data","f70c8e9e":"## Pair Plot","cbd373b4":"# Check missing values","3333e5f7":"## 2. 1 Loan amount vs Term in Months","9c25502c":"# 2. Loan Amount","b23a63ec":"## 1.5 Loan amount vs term in months by repayment interval","5094610a":"# The Relational Plot","b5212fa7":"## 1.1 Loan Amount vs Sectors ","87313e38":"## 3.2 Loan amount vs lender count","aa0766f1":"# Heatmaps to show Correlation between different values","1c960a36":"# Cleaning the borrower_genders Column","91d095e4":"# Barplot","fc588aa6":"# Analysis on the Kiva_loan_Dataset.\n### Rwanda_region","16b2c664":"## 2.2 Loan amount vs term in months by sector per gender","58bd8da0":"# 1. Funded Amount","49717c27":"# Understand the data more","4d4cae67":"## 1.7 Loan amount vs repayment interval by borrower genders","33fec48a":"## 2.2 Loan amount vs Lender Count","6cf19c89":"## 3.1  loan amount vs Term in months","4caef19f":"## Correlation Table","81ef6a41":"# 2.3 Loan Amount vs Lender Count per sector by Gender","aa8174d7":"# Grouping the Data","5d73a3ac":"# Define variables for ease of coding","507ae0d3":"## 1.6 Loan amount given by repayment interval","3aaabce7":"# Rwanda Kiva loan Data","ded642c0":"## 1.3 Loan amount across sectors by repayment interval"}}