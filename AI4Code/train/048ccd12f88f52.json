{"cell_type":{"25f02cc5":"code","0ad11889":"code","b176ed2c":"code","25f4d441":"code","021ae55b":"code","dbb28bba":"code","90dfa8aa":"code","23255401":"code","bc0e7def":"code","ac89f849":"code","4ed3f0fc":"code","5640fd9b":"code","ee811ade":"code","ee7d0fc8":"code","51321b5f":"code","83479a51":"code","7bf45729":"code","3ec3ab3b":"code","185df5bd":"code","fb764152":"code","cff18066":"code","f4e5da92":"code","924a3262":"code","8844e390":"code","6444bc13":"code","cf9b3353":"code","f56b7bcb":"code","d442427b":"code","150e1492":"code","9174bba2":"code","3b06241d":"code","405694a2":"code","0bf93f9a":"code","8b6b14a2":"code","755cd77f":"markdown","366ef4af":"markdown","6419f396":"markdown","7f64e38d":"markdown","0daa4468":"markdown","24ff8daa":"markdown","9c7467b4":"markdown","9535352e":"markdown","414ff69b":"markdown","f461ef77":"markdown","bc83b8fd":"markdown"},"source":{"25f02cc5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom sklearn import linear_model\nfrom sklearn.feature_selection import f_regression, mutual_info_regression\nfrom datetime import date, timedelta\nfrom nltk.sentiment import SentimentIntensityAnalyzer\nfrom tabulate import tabulate\nsia = SentimentIntensityAnalyzer()","0ad11889":"train_df = pd.read_parquet('..\/input\/medallion-monthly-test\/train.parquet')\ntest_df = pd.read_parquet('..\/input\/medallion-monthly-test\/test.parquet')\nss = pd.read_csv('..\/input\/medallion-monthly-test\/sample_submission.csv')","b176ed2c":"!pip install linearmodels\nfrom linearmodels import PanelOLS","25f4d441":"train_df.head()","021ae55b":"paneldf = train_df.copy()","dbb28bba":"paneldf.set_index(['video_id','publishedAt'])","90dfa8aa":"test_df.dtypes","23255401":"# Sentiment Analysis, most of them fall into neutural category\nsia.polarity_scores(train_df['title'][0])","bc0e7def":"for i, c in train_df.iterrows():\n    # How old is the video\n    train_df.loc[i,'age'] = (date(2021, 12, 31)-c['publishedAt'].date()).days\n    # How many days it took to go viral: \n    train_df.loc[i,'daystotrend'] = (c['trending_date']-c['publishedAt'].date()).days\n    # Title sentiment scores:\n    train_df.loc[i, 'sent_neg'] = sia.polarity_scores(c['title'])['neg']\n    train_df.loc[i, 'sent_neu'] = sia.polarity_scores(c['title'])['neu']\n    train_df.loc[i, 'sent_pos'] = sia.polarity_scores(c['title'])['pos']","ac89f849":"# for i, c in train_df.iterrows():\n#     video_dumyid = 'd_'+ c['video_id']\n#     train_df.at[i, video_dumyid] = 1","4ed3f0fc":"train_df.describe()","5640fd9b":"for i, c in test_df.iterrows():\n    test_df.loc[i,'age'] = (date(2021, 12, 31)-c['publishedAt'].date()).days\n    test_df.loc[i,'daystotrend'] = (c['trending_date']-c['publishedAt'].date()).days\n    test_df.loc[i, 'sent_neg'] = sia.polarity_scores(c['title'])['neg']\n    test_df.loc[i, 'sent_neu'] = sia.polarity_scores(c['title'])['neu']\n    test_df.loc[i, 'sent_pos'] = sia.polarity_scores(c['title'])['pos']\n#     video_dumyid = 'd_'+ c['video_id']\n#     test_df.at[i, video_dumyid] = 1","ee811ade":"fig, ax = plt.subplots(figsize=(15,10))\nax.scatter(train_df['daystotrend'], train_df['view_count'])\nfig.set_facecolor('white')\nplt.show()","ee7d0fc8":"fig, ax = plt.subplots(figsize=(15,10))\nax.scatter(train_df['age'], train_df['view_count'])\nfig.set_facecolor('white')\nplt.show()","51321b5f":"# We don't get `likes` in the test data, but this could be better:\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(train_df['likes'], train_df['view_count'])\nfig.set_facecolor('white')\nplt.show()","83479a51":"xs1 = ['age', 'daystotrend']\n\n# Regression\nreg1 = linear_model.LinearRegression()\nreg1.fit(train_df[xs1], train_df['view_count'])\ncoef1 = reg1.coef_\nintercept1 = reg1.intercept_\n\n# F test for significance\nf_test1 = f_regression(train_df[xs1], train_df['view_count'])","7bf45729":"# Results (b, f, p)\nfor i in range(len(xs1)):\n    print(f'{xs1[i]}: b: {round(coef1[i],2)} F: {round(f_test1[0][i],4)} p: {round(f_test1[1][i],4)}')","3ec3ab3b":"# R-square (explanatory power)\nround(reg1.score(train_df[xs1], train_df['view_count']),4)","185df5bd":"# exog = sm.tools.tools.add_constant(paneldf['daystotrend'])\n# endog = paneldf['view_count']\n# mod = PanelOLS.from_formula(\"view_count ~ likes+EntityEffects\", data=paneldf)\n# result = mod.fit(entity_effects = True)\n# result.summary.tables[1]","fb764152":"Y = 'view_count'\nX = ['age', 'daystotrend']\nmeandata = train_df.groupby('video_id')[X+[Y]].mean()","cff18066":"meandata.head()","f4e5da92":"demeaned_data = (train_df\n               .set_index(\"video_id\") # set the index as the person indicator\n               [X+[Y]]\n               - meandata) # subtract the mean data","924a3262":"demeaned_data.describe()","8844e390":"reg3 = linear_model.LinearRegression()\nmod = reg3.fit(demeaned_data[['daystotrend', 'view_count']], demeaned_data[Y])\ncoef3 = reg3.coef_\nintercept3 = reg3.intercept_","6444bc13":"coef3, intercept3","cf9b3353":"# f_test3 = f_regression(demeaned_data[X], demeaned_data[Y])","f56b7bcb":"# Model \nmodel1 = ''\nfor i in range(len(xs1)):\n    model1 += f'+ {xs1[i]} * {round(coef1[i],2)} ' \n\nprint(f'Viewer Count = {round(intercept1,2)} {model1}')","d442427b":"xs2 = ['age','daystotrend','sent_neg','sent_pos','sent_neu']\n# Regression\nreg2 = linear_model.LinearRegression()\nreg2.fit(train_df[xs2], train_df['view_count'])\ncoef2 = reg2.coef_\nintercept2 = reg2.intercept_\n# F test\nf_test2 = f_regression(train_df[xs2], train_df['view_count'])","150e1492":"for i in range(len(xs2)):\n    print(f'{xs2[i]}: b: {round(coef2[i],2)} F: {round(f_test2[0][i],4)} p: {round(f_test2[1][i],4)}')","9174bba2":"# R-square\nround(reg2.score(train_df[xs2], train_df['view_count']),4)","3b06241d":"model2 = ''\nfor i in range(len(xs2)):\n    model2 += f'+ {xs2[i]} * {coef2[i]} ' \n\nprint(f'Viewer Count = {intercept2} {model2}')","405694a2":"# test_df['view_count1'] = reg1.predict(test_df[xs1])\n# test_df['view_count2'] = reg2.predict(test_df[xs2])\ntest_df['view_count3'] = reg3.predict(test_df[X])\ntest_df['view_count'] = test_df['view_count3']","0bf93f9a":"# There are some negatives in view_count2, which could drop our score\ntest_df.describe()","8b6b14a2":"test_df[ss.columns].to_csv('submission.csv', index=False)","755cd77f":"### Results of Model 1\n- The older the video, the lower the view count. \n- The more it takes a video to get to trending, the more view count it has. \n- Only explains about 7 percent. ","366ef4af":"## Panel OLS Model [Fixed Effects](https:\/\/bashtage.github.io\/linearmodels\/panel\/panel\/linearmodels.panel.model.PanelOLS.html)","6419f396":"## Sentiment Analysis\n\n- Analyze each title to see if there are any differences. ","7f64e38d":"### Results of Model 2\n- Days-to-trend still has same impact\n- Positive sentiment has positive impact on viewer count\n- Negative sentiment has positive impact on viewer count \n- Neutral sentiment has positive impact on viewer count\n- Didn't improve R2","0daa4468":"## Regression Model 1","24ff8daa":"There seems to be no relationship between `age` and `view count`","9c7467b4":"We can see some linearity here. ","9535352e":"### Prediction ","414ff69b":"### Regression Analysis","f461ef77":"## Data Structure","bc83b8fd":"## Regression Model 2\n- Let's add the sentiments"}}