{"cell_type":{"d5e85690":"code","b15b29f2":"code","116a80e4":"code","df5c8be8":"code","f61abba5":"code","1276b86b":"code","641f0e8f":"code","e7e90c2f":"code","bb183c95":"code","76ea6b17":"code","89a21114":"markdown","b6fcd4df":"markdown","66d0a151":"markdown","530b9005":"markdown","d132e61a":"markdown","1cf7998a":"markdown","0c85ab5c":"markdown","8e9d7088":"markdown","6e79b094":"markdown","cadc4801":"markdown"},"source":{"d5e85690":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport librosa.display\nimport IPython.display as ipd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings; warnings.simplefilter('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\ni = 0\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/'):\n    for filename in filenames:\n        if \"mp3\" in filename:\n            i = i + 1\n            if i < 5:\n                print(os.path.join(dirname, filename))\n        else:\n            print(os.path.join(dirname, filename))\nprint(\"...\")\nprint(i, \"mp3 files\")\nprint(\"5 csv files\")\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\npath = \"\/kaggle\/input\/birdsong-recognition\/\"\ntest_audio_meta = pd.read_csv(path + \"example_test_audio_metadata.csv\")\ntest_audio_sum = pd.read_csv(path + \"example_test_audio_summary.csv\")\ntrain = pd.read_csv(path + \"train.csv\")\ntest = pd.read_csv(path + \"test.csv\")\nsample = pd.read_csv(path + \"sample_submission.csv\")","b15b29f2":"print(\"train.csv dimension:\", train.shape)\npd.set_option('display.max_columns', None)\ntrain[train[\"ebird_code\"] == \"easblu\"].head(2)","116a80e4":"bluebird = path + \"train_audio\/\" + \"easblu\/\" + \"XC134674.mp3\"\nx, sr = librosa.load(bluebird)\nipd.Audio(bluebird)","df5c8be8":"sns.set(font_scale=1.5)\nsns.set_style(\"whitegrid\")\n\nplt.figure(figsize=(14, 5))\nplt.title(\"The waves of the audio\", fontsize=24, pad=20)\nlibrosa.display.waveplot(x, sr=sr, color = \"#086cf5\")\nwarnings.simplefilter('ignore')","f61abba5":"rufhumm = path + \"\/train_audio\" + \"\/rufhum\" + \"\/XC133552.mp3\"\nx, sr = librosa.load(rufhumm)\nipd.Audio(rufhumm)","1276b86b":"sns.set(font_scale=1.5)\nsns.set_style(\"whitegrid\")\n\nplt.figure(figsize=(14, 5))\nplt.title(\"The waves of the audio\", fontsize=24, pad=20)\nlibrosa.display.waveplot(x, sr=sr, color = \"#fa8323\")\nwarnings.simplefilter('ignore')","641f0e8f":"t = train[[\"ebird_code\", \"species\"]].drop_duplicates()\nt.head()","e7e90c2f":"from IPython.display import IFrame\nfrom IPython.core.display import display\n\nbirds = [bird.replace(\" \", \"_\") for bird in t[\"species\"].values]\n\ndisplay(IFrame('https:\/\/en.wikipedia.org\/wiki\/' + birds[253], '100%', '400px'))","bb183c95":"from bokeh.io import output_notebook, show\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource, HoverTool, Span, FixedTicker\noutput_notebook()\n\nbird_counts_df = train.groupby(['ebird_code', 'species']).count()[['type']].sort_values(by=\"type\")\nbird_counts_df = bird_counts_df.rename(columns={\"type\": \"sound_file_count\"})\nbird_counts_df = bird_counts_df.reset_index()\n\nsource = ColumnDataSource(data = bird_counts_df)\n\np = figure(x_range = bird_counts_df[\"species\"].values, plot_height =250, plot_width = 1100,\n           title=\"Count of sound files per bird species (All: 264 species)\",tools=\"\", toolbar_location=None)\np.vbar(x=\"species\", top=\"sound_file_count\", width=0.5, source = source)\n\np.xgrid.grid_line_color = None\np.y_range.start = 0\n\np.add_tools(HoverTool(\n    tooltips=[\n        ( 'specie', '@{species}'),\n        ( 'sound file count', '@{sound_file_count}'), # use @{ } for field names with spaces\n    ]\n))\n\np.xaxis.ticker = [ 33, 66, 99, 132 ]\n\np.xaxis.ticker = FixedTicker(ticks=[ 33, 66, 99, 132]) \np.xaxis.major_label_overrides = dict(zip([ 33, 66, 99, 132], [ '12.5%', '25%', '37.5%', '50%']))\n\n# Vertical line\nvline_12 = Span(location=33, dimension='height', line_color='grey', line_width=1)\nvline_25 = Span(location=66, dimension='height', line_color='grey', line_width=1)\nvline_37 = Span(location=99, dimension='height', line_color='grey', line_width=1)\nvline_50 = Span(location=132, dimension='height', line_color='grey', line_width=1)\n\np.renderers.extend([vline_12, vline_25,vline_37, vline_50])\n\nshow(p)","76ea6b17":"types = list(set(list(train[\"type\"].values)))\nprint(len(types))\ndf = train.groupby(['type']).count()[['species']]\ndf.head()","89a21114":"Now let's see the types:","b6fcd4df":"### The Rufous Hummingbird","66d0a151":"<a class=\"anchor\" id=\"section3\"><\/a> \n## Birds and call types\n\nThere are 264 birt species in the dataset, and more than half of them have 100 sound files. Hover over the bars to see the bird and the count of sound files.","530b9005":"# Exploring birdcalls \ud83c\udfb5\ud83d\udc26\n\n\n* [1. Introduction](#section1)\n* [2. The dataset](#section2)\n    * [2.1. Examples](#section2a)\n    * [2.2. Explore](#section2b)\n* [3. Birds and call types](#section3)\n\n\n<a class=\"anchor\" id=\"section1\"><\/a> \n# Introduction \n\nBirds are really beautiful creatures, and they are present in many different environments. I like to observe their behavior, they can be very cute. This time we will focus on their songs. Recording bird songs helps in monitoring the bird population. It is interesting that this also reflects the biological balance, and the life quality of a region. So it is worth investigating them.\n\n<a class=\"anchor\" id=\"section2\"><\/a> \n# The dataset\n\nWe have got mp3 files with the birdsongs grouped into folders by species, and csv files with more details about them:","d132e61a":"We can easily put together links to check the wikipedia page about the birds and display in an Iframe.","1cf7998a":"![hummingbird.PNG](attachment:hummingbird.PNG)","0c85ab5c":"The train.csv has numerous attributes, like filename, country, species and much more.","8e9d7088":"<a class=\"anchor\" id=\"section2a\"><\/a> \n## Examples \n\nBirds can be checked out on the  [https:\/\/ebird.org](https:\/\/ebird.org) site using the **ebird_code** attribute, for example the **Easter Bluebird** can be seen here: [https:\/\/ebird.org\/species\/easblu](https:\/\/ebird.org\/species\/easblu)\n\n### The Eastern Bluebird","6e79b094":" ![bluebird.PNG](attachment:bluebird.PNG)","cadc4801":"<a class=\"anchor\" id=\"section2b\"><\/a> \n## Explore\nHere are the birdcodes with the full names. "}}