{"cell_type":{"f822948a":"code","bd19e962":"code","052f8afb":"code","a9067b00":"code","25ed2c2f":"code","84376f2f":"code","fd55378d":"code","291396e5":"code","5d592663":"code","cde0c8af":"code","04c74251":"code","c4983c41":"code","c0235579":"code","bce93b2f":"code","66e1f689":"code","ab391dfa":"code","0438d2b4":"code","d4e3e3c2":"code","5d03e61c":"code","666bdd63":"code","4f1c0a23":"code","4f78f826":"code","286b29a2":"code","2378f9d6":"code","11f2f073":"code","a99d444b":"code","10f64c37":"code","f11551bc":"code","8af09e02":"code","75710ef8":"code","a356aeef":"code","425ee8d7":"code","be5c760f":"code","26e15782":"code","21bf40db":"code","21da2ad2":"code","9b77aa2d":"code","a36797eb":"markdown","21d9d4f8":"markdown","b8d304f2":"markdown","8d03e1b9":"markdown","a6c75b54":"markdown","84f99ed5":"markdown","965ae1ae":"markdown","870e533e":"markdown","97896858":"markdown","6c4f3f79":"markdown","1e5ebd9e":"markdown","141b7381":"markdown","85e32d7b":"markdown","149eac46":"markdown","43a0522f":"markdown","1610de9e":"markdown"},"source":{"f822948a":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score","bd19e962":"dataset = pd.read_csv('..\/input\/heart-disease-dataset\/heart.csv')\ndataset.head()","052f8afb":"dataset.info()","a9067b00":"dataset.isnull().sum()","25ed2c2f":"dataset.describe()","84376f2f":"X = dataset.drop(['target'],axis=1)\ny = dataset.iloc[:, -1].values\n","fd55378d":"correlation = dataset.corr()\nsns.heatmap(dataset.corr())","291396e5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\n","5d592663":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","cde0c8af":"classifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, y_train)","04c74251":"y_pred = classifier.predict(X_test)\ny_pred","c4983c41":"cm = confusion_matrix(y_test, y_pred)\ncm","c0235579":"accuracy=accuracy_score(y_test,y_pred)\naccuracy","bce93b2f":"classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier.fit(X_train, y_train)","66e1f689":"y_pred = classifier.predict(X_test)\ny_pred","ab391dfa":"cm = confusion_matrix(y_test, y_pred)\ncm","0438d2b4":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","d4e3e3c2":"classifier = SVC(kernel = 'linear', random_state = 0)\nclassifier.fit(X_train, y_train)","5d03e61c":"y_pred= classifier.predict(X_test)\ny_pred","666bdd63":"cm = confusion_matrix(y_test, y_pred)\ncm","4f1c0a23":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","4f78f826":"classifier = SVC(kernel = \"rbf\", random_state = 0)\nclassifier.fit(X_train, y_train)","286b29a2":"y_pred = classifier.predict(X_test)\ny_pred","2378f9d6":"cm = confusion_matrix(y_test, y_pred)\ncm","11f2f073":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","a99d444b":"classifier = GaussianNB()\nclassifier.fit(X_train, y_train)","10f64c37":"y_pred = classifier.predict(X_test)\ny_pred","f11551bc":"cm = confusion_matrix(y_test, y_pred)\ncm","8af09e02":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","75710ef8":"classifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0, max_depth = 6)\nclassifier.fit(X_train, y_train)","a356aeef":"y_pred = classifier.predict(X_test)\ny_pred","425ee8d7":"cm = confusion_matrix(y_test, y_pred)\ncm","be5c760f":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","26e15782":"classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0, max_depth = 6)\nclassifier.fit(X_train, y_train)","21bf40db":"y_pred = classifier.predict(X_test)\ny_pred","21da2ad2":"cm = confusion_matrix(y_test, y_pred)\ncm","9b77aa2d":"accuracy = accuracy_score(y_test, y_pred)\naccuracy","a36797eb":"# Support Vector Machine (SVM)","21d9d4f8":"**Data preprocessing**","b8d304f2":"**Importing the required modules**","8d03e1b9":"**Data Processing**","a6c75b54":"**Feature Selection**","84f99ed5":"#  Logistic Regression","965ae1ae":"**In this project, I'm gonna apply 7 types of algorithms in machine learning. these are Logistic Regression, K-NN, SVM, Kernel SVM, Naive Bayes, Decision Tree, and Random Forest model. now I'm super excited to start step by step**","870e533e":"# Naive Bayes","97896858":"# Kernel SVM","6c4f3f79":"**Heart disease** describes a range of conditions that affect your heart. Diseases under the heart disease umbrella include blood vessel diseases, such as coronary artery disease, heart rhythm problems (arrhythmia) and heart defects you\u2019re born with (congenital heart defects), among others.\n\nIn this Data Science Project I will be applying Machine Learning techniques to classify whether a person is suffering from Heart Disease or not.","1e5ebd9e":"# Heart Disease Prediction","141b7381":"# K-Nearest Neighbors (K-NN)","85e32d7b":"# Random Forest Classification","149eac46":"**In the conclusion, I was attempting to generalize better accuracy and none of the regression was able to do better than 96% (Kernel-SVM). But all of the algorithms given super good predictions in this project. these are, logistic regression predicts 86%, K-NN 87%, SVM 85%, Naive Bayes 85%, Decision Tree Classifier 92%, and the last one, Random Forest Classifier 94%. \nAccording to the above predictions, the Kernel SVM algorithm is best for prediction amongst the other 6 Regression.**","43a0522f":"# Decision Tree Classification","1610de9e":"**Attribute Information:**\n\n1. age: age in years\n2. sex: (1 = male; 0 = female)\n3. cp: chest pain type (4 values)\n4. trestbps: resting blood pressure\n5. chol: serum cholestoral in mg\/dl\n6. fbs: fasting blood sugar > 120 mg\/dl\n7. restecg: resting electrocardiographic results (values 0,1,2)\n8. thalach: maximum heart rate achieved\n9. exang: exercise induced angina (1 = yes; 0 = no)\n10. oldpeak: ST depression induced by exercise relative to rest\n11. slope: the slope of the peak exercise ST segment\n12. ca: number of major vessels (0-3) colored by flourosopy\n13. thal: 0 = normal; 1 = fixed defect; 2 = reversable defect\n14. target: heart disease detected(1 = yes; 0 = no)"}}