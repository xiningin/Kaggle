{"cell_type":{"9cd30b2f":"code","0d10d493":"code","bcc50ac3":"code","e7f2a997":"code","ffa58318":"code","43356a47":"code","5808c4d9":"code","54271dea":"code","dd922dc5":"markdown","c5d8049f":"markdown","c6eb58ec":"markdown"},"source":{"9cd30b2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0d10d493":"#import all important library\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nfrom scipy.stats import linregress\nwarnings.filterwarnings(\"ignore\")","bcc50ac3":"#read the file\nUSvideos_df = pd.read_csv(\"..\/input\/youtube-new\/USvideos.csv\")\n#create the dataframe for the category id\ncategory_data = [[1,\"Film & Animation\"],[2,\"Autos & Vehicles\"],[10,\"Music\"],[15,\"Pets & Animals\"],\n       [17,\"Sports\"],[18,\"Short Movies\"],[19,\"Travel & Events\"],[20,\"Gaming\"],\n       [21,\"Vlog\"],[22,\"People & Blogs\"],[23,\"Comedy\"],[24,\"Entertainment\"],\n       [25,\"News & Politics\"],[26,\"Howto & Style\"],[27,\"Education\"],\n       [28,\"Science & Technology\"],[29,\"Nonprofits & Activism\"],[30,\"Movies\"],\n       [31,\"Anime\/Animation\"],[32,\"Action\/Adventure\"],[33,\"Classics\"],\n       [34,\"Comedy\"],[35,\"Documentary\"],[36,\"Drama\"],[37,\"Family\"],\n       [38,\"Foreign\"],[39,\"Horror\"],[40,\"Sci-Fo\/Fantasy\"],[41,\"Thriller\"],\n       [42,\"Shorts\"],[43,\"Shows\"],[44,\"Trailers\"]]\n\ncategory_df = pd.DataFrame(category_data, columns=[\"category_id\",\"category_name\"])\n# print(category_df)","e7f2a997":"#describe the us videos\n# print(USvideos_df.head())\n# print(USvideos_df.describe()) \nprint(USvideos_df.columns)","ffa58318":"#total video available per category_name\ncnt_video_per_category = USvideos_df.groupby([\"category_id\"]).count().reset_index()\ncnt_video_per_category = cnt_video_per_category.loc[:,['category_id','video_id']]\ndf_1 = pd.merge(cnt_video_per_category,category_df,left_on='category_id',right_on='category_id',how='left')\ndf_1 = df_1.sort_values(by='video_id', ascending = False)\ndf_1[\"Proportion\"] = round((df_1[\"video_id\"]\/sum(df_1[\"video_id\"]) * 100),2)\nprint(df_1)\n\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(11, 10))\nax = sns.barplot(x=\"category_name\",y=\"video_id\", data=df_1)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","43356a47":"#this section is used to see the trend of the youtube video published over time\n\n#first we need to create new column containing date extracted from timestamp\nx = USvideos_df['publish_time']\n#convert the timestamp to datetime\ndf_datetime = pd.to_datetime(x)\n#extract the date from the datetime\nUSvideos_df['date'] = df_datetime.dt.date\n#extract the hour from the datetime\nUSvideos_df['hour'] = df_datetime.dt.hour\n#extract the month from the datetime\nUSvideos_df['month'] = df_datetime.dt.month\n#extract the year from the datetime\nUSvideos_df['year'] = df_datetime.dt.year\n#============================================================================\n#print(USvideos_df.head())\n\n#create the dataframe\ncnt_video_published_daily = USvideos_df.groupby(['year']).count().reset_index()\ncnt_video_published_daily = cnt_video_published_daily.loc[:,['year','video_id']]\n# print(cnt_video_published_daily)\n\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(6,5))\nsns.lineplot(x=cnt_video_published_daily[\"year\"], y=cnt_video_published_daily[\"video_id\"],data=cnt_video_published_daily, color=\"navy\")\nplt.show()","5808c4d9":"#this section is used to check the likes, dislike, and comment rate\n\n#first we need to create 3 new variable\nUSvideos_df[\"likes_rate\"] = USvideos_df[\"likes\"] \/ USvideos_df[\"views\"] * 100\nUSvideos_df[\"dislikes_rate\"] = USvideos_df[\"dislikes\"] \/ USvideos_df[\"views\"] * 100\nUSvideos_df[\"comment_rate\"] = USvideos_df[\"comment_count\"] \/ USvideos_df[\"views\"] * 100\n\n#grouping the likes rate per category\ncnt_likes_per_video_per_category = USvideos_df.groupby(\"category_id\").mean().reset_index()\ncnt_likes_per_video_per_category = cnt_likes_per_video_per_category.loc[:,['category_id','likes_rate','dislikes_rate','comment_rate']]\n\n#left join to get the category name\ndf_2 = pd.merge(cnt_likes_per_video_per_category,category_df,left_on='category_id',right_on='category_id',how='left')\nprint(df_2)\n\n#likes rate\ndf_2 = df_2.sort_values(by='likes_rate', ascending = False)\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(11, 10))\nplt.title(\"likes rate\")\nax = sns.barplot(x=\"category_name\",y=\"likes_rate\", data=df_2)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()\n\n#dislikes rate\ndf_2 = df_2.sort_values(by='dislikes_rate', ascending = False)\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(11, 10))\nplt.title(\"dislikes rate\")\nax = sns.barplot(x=\"category_name\",y=\"dislikes_rate\", data=df_2)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()\n\n#comments rate\ndf_2 = df_2.sort_values(by='comment_rate', ascending = False)\nsns.set(style=\"whitegrid\")\nplt.figure(figsize=(11, 10))\nplt.title(\"comments rate\")\nax = sns.barplot(x=\"category_name\",y=\"comment_rate\", data=df_2)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","54271dea":"#this section is used to check the correlation between each metrics\nplt.figure(figsize=(11, 8))\n\nsns.heatmap(USvideos_df[['views', 'likes', 'dislikes', 'comment_count']].corr(), annot=True)\nplt.show()","dd922dc5":"Is youtube just getting popular lately? started from 2017?","c5d8049f":"As you can see from both the Bar chart and table above, the top 3 most popular youtube video in USA are Entertainment (24%), Music (15%), and Howto & Style (10%) where combined together resulted over 50% of the total youtube video published in USA.","c6eb58ec":"As we can see the top 3 category video that have the highest rate likes are Music, Howto & Style, and Comedy, meanwhile it seems like videos that categorized as Nonprofits & Activism or News & Politics are the one that more likely to get dislikes."}}