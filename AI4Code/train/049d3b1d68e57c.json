{"cell_type":{"e24584bd":"code","936dd52c":"code","68c9e6c2":"code","0b71fb24":"code","5a5cbc28":"code","78039d27":"code","63d0ed89":"code","0a73c258":"code","3e49e77f":"code","e868394b":"code","a4c7a2ed":"code","eea217bc":"code","2916e9a2":"code","9350ea7a":"code","c0a5fb86":"code","0f0f2397":"code","c9c50f36":"code","5d2975d5":"code","5f729933":"code","15f9d2ba":"code","bca7bc00":"code","0269342f":"code","3bedd01a":"code","db80d11d":"code","cb5e3f18":"code","174c664c":"code","1a64b48d":"code","3755fb92":"code","ffe2a8ae":"code","185502b2":"code","649a308f":"code","fe66ef09":"code","9dff1361":"code","320b6fe5":"code","0d1d8ea1":"code","8c8a2236":"code","76c2650a":"code","2d651e52":"code","3fef3fd8":"code","30aab0ef":"code","8b9307a4":"code","5dc770c8":"code","d36b7132":"code","7fb023e5":"code","ff541447":"code","165dd3c4":"code","75df2b70":"code","d0cc9e68":"markdown","2ebebe6e":"markdown","b127b426":"markdown","3cfc119d":"markdown","dc91554a":"markdown","2d824f9a":"markdown","f367bfe2":"markdown","aecbc96c":"markdown","4ca89cbb":"markdown","ea72f04a":"markdown","4badae84":"markdown","2b8d8e1d":"markdown","64d74773":"markdown","4e943081":"markdown","5bdfc955":"markdown","f100c0ed":"markdown","abe69b3a":"markdown","31afefbe":"markdown","1b8d063c":"markdown","1031a44a":"markdown","b8c7b724":"markdown","c5588f7d":"markdown","af81c8fd":"markdown","424b8586":"markdown","bf5bc9d4":"markdown","a28ad00a":"markdown","7a85f9b2":"markdown"},"source":{"e24584bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","936dd52c":"df=pd.read_csv('\/kaggle\/input\/bad-drivers\/bad-drivers.csv')","68c9e6c2":"df.head()","0b71fb24":"df=df.rename(columns={\n    'Number of drivers involved in fatal collisions per billion miles': 'Nmbr_Dr_FCPBM',\n    'Percentage Of Drivers Involved In Fatal Collisions Who Were Speeding': 'Per_Speed',\n    'Percentage Of Drivers Involved In Fatal Collisions Who Were Alcohol-Impaired':'Per_Alcohol',\n    'Percentage Of Drivers Involved In Fatal Collisions Who Were Not Distracted':'Per_notDistracted',\n    'Percentage Of Drivers Involved In Fatal Collisions Who Had Not Been Involved In Any Previous Accidents':'Per_noAccident',\n    'Car Insurance Premiums ($)':'Ins_Premium',\n    'Losses incurred by insurance companies for collisions per insured driver ($)':'Loss_per_Dr'})","5a5cbc28":"df.head()","78039d27":"df['code']=['AL','AK','AZ','AR','CA','CO','CT','DE','DC','FL',\n      'GA','HI','ID','IL','IN','IA','KS','KY','LA','ME',\n      'MD','MA','MI','MN','MS','MO','MT','NE','NV','NH',\n      'NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI',\n      'SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY']","63d0ed89":"df.head()","0a73c258":"df.describe()","3e49e77f":"import matplotlib.pyplot as plt\nimport plotly_express as px\nfig = px.choropleth(df,locationmode='USA-states',locations='code',color='Loss_per_Dr',scope='usa',color_continuous_scale=px.colors.sequential.GnBu,\n                 range_color=(50,200),title='Losses incurred by per driver ($)',height=500\n    )\nfig.show()","e868394b":"fig = px.choropleth(df,locationmode='USA-states',locations='code',color='Ins_Premium',scope='usa',color_continuous_scale=px.colors.sequential.GnBu,\n                 range_color=(500,1400),title='Car Insurance Premiums ($) by State',height=500\n    )\nfig.show()","a4c7a2ed":"import matplotlib.pyplot as plt\nimport seaborn as sns","eea217bc":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['Nmbr_Dr_FCPBM'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","2916e9a2":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['Per_Speed'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","9350ea7a":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['Per_Alcohol'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","c0a5fb86":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['Per_notDistracted'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","0f0f2397":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['Per_noAccident'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","c9c50f36":"sns.heatmap(df.corr())\nplt.figure(figsize=(20, 15))","5d2975d5":"from sklearn import preprocessing\nfrom sklearn.cluster import KMeans","5f729933":"X=df.drop(['State','code'],axis=1)\nsc=preprocessing.StandardScaler()\nsc.fit(X)\nX_norm=sc.transform(X)\nprint(type(X_norm))","15f9d2ba":"cls = KMeans(n_clusters=4)\ncluster = cls.fit_predict(X_norm)","bca7bc00":"cluster=pd.DataFrame(cluster)","0269342f":"df['cluster']=cluster\ndf.head()","3bedd01a":"fig = px.choropleth(df,locationmode='USA-states',locations='code',color='cluster',scope='usa',color_continuous_scale=px.colors.sequential.GnBu,\n                 range_color=(0,3),title='Mappingg by Clusters',height=500\n    )\nfig.show()","db80d11d":"df.groupby('cluster').mean().plot.bar(figsize=(10,10))\nplt.legend(loc='upper left', bbox_to_anchor=(1, 1))","cb5e3f18":"df_loss=df.sort_values('Loss_per_Dr', ascending=False)\nplt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['State'],y=df_loss['Loss_per_Dr'],hue=df_loss['cluster'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","174c664c":"plt.figure(figsize=(15, 10))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df_loss['cluster'],y=df_loss['Loss_per_Dr'],hue=df_loss['Nmbr_Dr_FCPBM'],size=df_loss['Ins_Premium'],data=df_loss,sizes=(1,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","1a64b48d":"from sklearn.decomposition import PCA","3755fb92":"pca = PCA(n_components=2)\ntrans= pca.fit_transform(X_norm)\npca_df = pd.DataFrame(trans)\npca_df['cluster'] = df['cluster']\n \npca_df.head()","ffe2a8ae":"import matplotlib.pyplot as plt\n%matplotlib inline\n \nfor i in df['cluster'].unique():\n    tmp = pca_df.loc[pca_df['cluster'] == i]\n    plt.scatter(tmp[0], tmp[1])","185502b2":"from sklearn.linear_model import Ridge,Lasso,LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import KFold","649a308f":"x1=df.drop(['State','code','Ins_Premium','cluster'],axis=1)\ny=df['Ins_Premium']","fe66ef09":"x_train1,x_test1,y_train,y_test=train_test_split(x1, y,train_size=0.8,random_state=123)","9dff1361":"model=LinearRegression()","320b6fe5":"scores=[]\nkf=KFold(n_splits=4,shuffle=True,random_state=71)\nfor tr_idx,va_idx in kf.split(x_train1):\n    tr_x,va_x=x_train1.iloc[tr_idx],x_train1.iloc[va_idx]\n    tr_y,va_y=y_train.iloc[tr_idx],y_train.iloc[va_idx]\n    \n    model.fit(tr_x,tr_y)\n    va_pred1=model.predict(va_x)\n    score_rmse1=np.sqrt(mean_squared_error(va_y,va_pred1)).mean()\n    score_mae1=mean_absolute_error(va_y,va_pred1).mean()\n    score_r21=r2_score(va_y,va_pred1).mean()","0d1d8ea1":"print('rmse1:',score_rmse1)\nprint('mae1:',score_mae1)\nprint('R21:',score_r21)","8c8a2236":"df['young_ratio']=[0.087,0.093,0.093,0.087,0.092,0.089,0.086,0.081,0.09,0.08,\n                   0.089,0.072,0.085,0.087,0.091,0.089,0.092,0.089,0.088,0.075,\n                   0.081,0.087,0.091,0.082,0.089,0.085,0.085,0.088,0.083,0.078,\n                   0.082,0.09,0.086,0.086,0.102,0.085,0.091,0.084,0.079,0.088,\n                   0.082,0.082,0.086,0.094,0.109,0.086,0.084,0.084,0.081,0.085,\n                   0.083\n]","76c2650a":"df['young_ratio2']=[0.115,0.139,0.121,0.115,0.137,0.141,0.113,0.118,0.216,0.114,\n                    0.122,0.116,0.12,0.126,0.118,0.114,0.116,0.114,0.123,0.11,\n                    0.123,0.132,0.118,0.125,0.11,0.121,0.114,0.122,0.131,0.115,\n                    0.117,0.117,0.134,0.118,0.137,0.119,0.123,0.128,0.123,0.127,\n                    0.116,0.115,0.124,0.13,0.132,0.111,0.12,0.138,0.105,0.116,0.117]","2d651e52":"df['old_ratio']=[0.175,0.13,0.182,0.173,0.149,0.148,0.177,0.197,0.127,0.211,\n                 0.145,0.197,0.162,0.16,0.161,0.174,0.164,0.17,0.16,0.213,\n                 0.16,0.171,0.177,0.162,0.165,0.172,0.196,0.162,0.163,0.186,\n                 0.165,0.183,0.169,0.169,0.156,0.174,0.16,0.183,0.187,0.178,\n                 0.184,0.174,0.167,0.129,0.115,0.204,0.163,0.16,0.205,0.175,0.172]","3fef3fd8":"df['beer']=[1.04,1.06,1.08,0.9,1,1.14,0.8,1.11,1.08,1.05,0.95,1.28,0.9,1.08,\n            0.96,1.24,0.99,0.93,1.23,1.34,0.78,0.91,1,1.14,1.21,1.11,1.6,1.22,\n            1.35,1.79,0.8,1.07,0.88,1.04,1.5,1.1,1,1.21,1.29,0.9,1.11,1.37,0.98,\n            1.21,0.58,1.53,0.94,0.91,1.15,1.29,1.22]","30aab0ef":"df['crime_rate']=[510.8,867.1,455.3,584.6,441.2,381,183.6,422.6,1049,378.4,\n                  340.7,285.5,223.8,406.9,370.8,266.6,410.8,217.1,549.3,115.2,\n                  454.1,327.6,437.4,236.4,277.9,495,404.9,300.9,493.8,152.5,\n                  206.9,832.2,358.6,371.8,284.6,293.2,431.8,284.4,306.4,221.1,\n                  511.3,399,595.2,418.9,235.6,202.2,208,293.9,316.6,293.2,217.4]","8b9307a4":"df.head()","5dc770c8":"df.corr()","d36b7132":"sns.heatmap(df.corr())","7fb023e5":"x2=df[['Loss_per_Dr','beer','crime_rate','young_ratio2','old_ratio']]\ny=df['Ins_Premium']","ff541447":"x_train2,x_test2,y_train,y_test=train_test_split(x2, y,train_size=0.8,random_state=123)","165dd3c4":"scores=[]\nkf=KFold(n_splits=4,shuffle=True,random_state=71)\nfor tr_idx,va_idx in kf.split(x_train2):\n    tr_x,va_x=x_train2.iloc[tr_idx],x_train2.iloc[va_idx]\n    tr_y,va_y=y_train.iloc[tr_idx],y_train.iloc[va_idx]\n    \n    model.fit(tr_x,tr_y)\n    va_pred2=model.predict(va_x)\n    score_rmse1=np.sqrt(mean_squared_error(va_y,va_pred2)).mean()\n    score_mae1=mean_absolute_error(va_y,va_pred2).mean()\n    score_r21=r2_score(va_y,va_pred2).mean()","75df2b70":"print('rmse1:',score_rmse1)\nprint('mae1:',score_mae1)\nprint('R21:',score_r21)","d0cc9e68":"R2 has been improved to 0.64.","2ebebe6e":"3) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Clusters\" and \"Car Insurance Premiums\"","b127b426":"# 3.Premium Prediction Model","3cfc119d":"ROWS are too long. So let's shorten them.","dc91554a":"5) PCA","2d824f9a":"4)\"Losses incurred by insurance companies for collisions per insured driver\" by \"Clusters\" with \"Number of drivers involved in fatal collisions per billion miles\" and \"Car Insurance Premiums\"","f367bfe2":"4) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Percentage Of Drivers Involved In Fatal Collisions Who Were Speeding\" and \"Car Insurance Premiums\"","aecbc96c":"I tried to find some insight and new features from the current features. \"Percentage Of Drivers Involved In Fatal Collisions Who Were Speeding\" and \"Percentage Of Drivers Involved In Fatal Collisions Who Had Not Been Involved In Any Previous Accidents\" may be influenced by the ratio of young people. \"Percentage Of Drivers Involved In Fatal Collisions Who Were Alcohol-Impaired\" may be influenced by beer consumption. \"Percentage Of Drivers Involved In Fatal Collisions Who Were Not Distracted\" may be influenced by ratio of elderly people. And crime rate may have some influence to \"Number of drivers involved in fatal collisions per billion miles\". So I changed the features to above features. These are just my hypothesis.","4ca89cbb":"1)Number of drivers involved in fatal collisions per billion miles=Nmbr_Dr_FCPBM,\n2)Percentage Of Drivers Involved In Fatal Collisions Who Were Speeding=Per_Speed,\n3)Percentage Of Drivers Involved In Fatal Collisions Who Were Alcohol-Impaired=Per_Alcohol,\n4)Percentage Of Drivers Involved In Fatal Collisions Who Were Not Distracted=Per_notDistracted,\n5)Percentage Of Drivers Involved In Fatal Collisions Who Had Not Been Involved In Any Previous Accidents=Per_noAccident","ea72f04a":" 5) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Percentage Of Drivers Involved In Fatal Collisions Who Were Alcohol-Impaired\" and \"Car Insurance Premiums\"","4badae84":"# 2. Clustering","2b8d8e1d":"1) Linear Regression by Featuress","64d74773":"Get the data about crime rate refference https:\/\/en.wikipedia.org\/wiki\/List_of_U.S._states_and_territories_by_violent_crime_rate ","4e943081":"Get the data about the Gallons of Ethanol Per Capita refference https:\/\/vinepair.com\/articles\/map-states-drink-beer-america-2020\/ ","5bdfc955":"2) Mapping by Car Insurance Premiums ($) by State","f100c0ed":"1) Mapping by Clusters","abe69b3a":"2) Try to improve R2 by insight","31afefbe":"\nGet the data about the ratio of old (65+) refference https:\/\/www.kff.org\/other\/state-indicator\/distribution-by-age\/?currentTimeframe=0&sortModel=%7B%22colId%22:%22Location%22,%22sort%22:%22asc%22%7D\n","1b8d063c":"Get the data about the ratio of young (19-25,26_34)\nrefference\nhttps:\/\/www.kff.org\/other\/state-indicator\/distribution-by-age\/?currentTimeframe=0&sortModel=%7B%22colId%22:%22Location%22,%22sort%22:%22asc%22%7D","1031a44a":"8) Correlation","b8c7b724":"7) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Percentage Of Drivers Involved In Fatal Collisions Who Had Not Been Involved In Any Previous Accidents\" and \"Car Insurance Premiums\"","c5588f7d":" 3) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Number of drivers involved in fatal collisions per billion miles\" and \"Car Insurance Premiums\"","af81c8fd":"# 1. Visualization","424b8586":"Get the state code for mapping.","bf5bc9d4":"1) Mapping by Losses incurred by per driver ($)","a28ad00a":"2) Features of Clusters","7a85f9b2":"6) \"Losses incurred by insurance companies for collisions per insured driver\" by \"States\" with \"Percentage Of Drivers Involved In Fatal Collisions Who Were Not Distracted\" and \"Car Insurance Premiums\""}}