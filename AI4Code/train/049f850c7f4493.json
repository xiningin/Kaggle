{"cell_type":{"8f92f493":"code","c1f6017a":"code","452ba776":"code","2df212e4":"code","e853b92f":"code","f195b214":"code","9fc2a082":"code","98c5ff1e":"code","19f77f80":"code","f3a10f70":"code","c91ff370":"code","4afcf9ee":"code","e5ca0c87":"code","3d8c8731":"code","85f4e8e3":"code","32b6de59":"code","95513fa3":"code","92b4c42d":"code","73a7cd86":"code","f84b8bb5":"code","87439455":"code","51aaab60":"code","3eed263e":"code","d92706e9":"code","5f76e2f2":"code","cb85a260":"code","ba88d856":"code","b9858db2":"code","97fdeac9":"code","394179c9":"code","7455f337":"code","b4f0aa8d":"code","359e9b76":"code","0caacdab":"code","54aabd2a":"code","dfe2a843":"markdown","ee77153d":"markdown","d1ffa3c3":"markdown","81483f2f":"markdown","e93ff1c2":"markdown","65d686bc":"markdown","8dfa387b":"markdown"},"source":{"8f92f493":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c1f6017a":"#Summary of Weather datasini okuyoruz\ndata = pd.read_csv('\/kaggle\/input\/weatherww2\/Summary of Weather.csv')\ndata=pd.DataFrame(data)","452ba776":"data.head()","2df212e4":"#min ve max sicaklik iliskisi inceleneceginden bu iki veriyi ayri bir degiskene atiyoruz\nmin_max_degree=data[['MaxTemp', 'MinTemp']]","e853b92f":"min_max_degree.head()","f195b214":"min_max_degree.columns=[\"Max\",\"Min\"]","9fc2a082":"#iki ozellik arasindaki bagintiyi gozlemlemek icin scatter grafige dokuyoruz\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(13, 9))\nplt.scatter(min_max_degree[\"Min\"], min_max_degree[\"Max\"],s=65)\nplt.xlabel('Min',fontsize=25)\nplt.ylabel('Max',fontsize=25)\nplt.title('Min-Max-Temp',fontsize=25)\nplt.show()","98c5ff1e":"#datayi incelemeyi hizlandirmak ve daha anlamli halde gorebilmek icin 750 veriyi aliyoruz\nnew_min_max_degree = min_max_degree[:][:750]\nlen(new_min_max_degree)","19f77f80":"#datamiz icindeki Nan degerleri tespit edip temizliyoruz\nnew_min_max_degree[\"Max\"].isna().value_counts()\nnew_min_max_degree[\"Min\"].isna().value_counts()\nnew_min_max_degree = new_min_max_degree.dropna(axis=0, how=\"any\")\nlen(new_min_max_degree)","f3a10f70":"#750 veriyi tekrar scatter ile gozlemliyoruz \nplt.figure(figsize=(13, 9))\nplt.scatter(new_min_max_degree[\"Min\"], new_min_max_degree[\"Max\"],s=65)\nplt.xlabel('Min',fontsize=25)\nplt.ylabel('Max',fontsize=25)\nplt.title('Min-Max-Temp',fontsize=25)\nplt.show()","c91ff370":"from sklearn.linear_model import LinearRegression ","4afcf9ee":"# max ve min adli iki degiskende kolon degerlerini tutuyoruz\nMax = new_min_max_degree.iloc[:, -2].values  \nMin = new_min_max_degree.iloc[:,1:2].values  ","e5ca0c87":"Max\n","3d8c8731":"Min","85f4e8e3":"#regresyon modelimizde girilen min degerine gore sicaklik degeri aliyoruz\nlin_reg=LinearRegression()\nlin_reg.fit(Min,Max)","32b6de59":"#scatter grafiginde lineer degisimi gosteriyoruz\nsns.set(font_scale=2)\nplt.figure(figsize=(15, 15))\nplt.scatter(Min,Max,s=65)\nplt.plot(Min,lin_reg.predict(Min), color='red', linewidth='6')\nplt.xlabel('Min',fontsize=25)\nplt.ylabel('Max',fontsize=25)\nplt.title('min degerlerine gore temp tahmin gosterimi',fontsize=25)\nplt.show()","95513fa3":"#min degerine gore  tahmini max hava sicakligi tahmini yaptiriyoruz\ndegree_lin = lin_reg.predict([[20]])\ndegree_lin","92b4c42d":"#r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nfrom sklearn.metrics import mean_squared_error,r2_score\nMax_head_lin=lin_reg.predict(Min)\nprint(\"Linear Regression R_Square Score: \" ,r2_score(Max,Max_head_lin))\ndegerlendirme={}\ndegerlendirme[\"Linear Regression R_Square Score:\"]=r2_score(Max,Max_head_lin)","73a7cd86":"m_lin_reg = LinearRegression()\nm_lin_reg = m_lin_reg.fit(Min,Max)\nm_lin_reg.intercept_       # constant b0\nm_lin_reg.coef_         \n","f84b8bb5":"#scatter grafiginde m-lineer degisimi gosteriyoruz\nimport operator\nplt.scatter(Min, Max, s=65)\nsort_axis = operator.itemgetter(0)\nsorted_zip = sorted(zip(Min, Max), key=sort_axis)\nX_test, y_pred = zip(*sorted_zip)\nplt.plot(Min, Max, color='g')\nplt.show()","87439455":"from sklearn.preprocessing import PolynomialFeatures ","51aaab60":"pol = PolynomialFeatures(degree = 3) \nMin_pol = pol.fit_transform(Min) \npol.fit(Min_pol, Max) \nlin_reg2 = LinearRegression() \nlin_reg2.fit(Min_pol, Max)","3eed263e":"#min degerine gore max hava sicakligi tahmini yaptiriyoruz\nPredict_Max_pol = lin_reg2.predict(pol.fit_transform([[20]])) \nPredict_Max_pol","d92706e9":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nMax_head_pol=lin_reg2.predict(Min_pol)\nprint(\"Polynomial Regression R_Square Score: \" ,r2_score(Max,Max_head_pol))\ndegerlendirme[\"Polynomial Regression R_Square Score:\"]=r2_score(Max,Max_head_pol)","5f76e2f2":"sns.set(font_scale=1.6)\nplt.figure(figsize=(13, 9))\nx_grid = np.arange(min(Min), max(Min), 0.1)\nx_grid = x_grid.reshape(-1,1)\nplt.scatter(Min,Max,s=65)\nplt.plot(x_grid,lin_reg2.predict(pol.fit_transform(x_grid)) , color='red', linewidth = '6')\nplt.xlabel('Min',fontsize=25)\nplt.ylabel('Max',fontsize=25)\nplt.title('Min degerlerine gore max temp tahmin gosterimi',fontsize=25)\nplt.show()","cb85a260":"from sklearn.tree import DecisionTreeRegressor\n\nMax_ = new_min_max_degree.iloc[:,0].values.reshape(-1, 1)\nMin_ = new_min_max_degree.iloc[:,1].values.reshape(-1, 1)\ndt_reg = DecisionTreeRegressor()      \ndt_reg.fit(Min_,Max_)","ba88d856":"dt_reg.predict([[20]])","b9858db2":"Max_head=dt_reg.predict(Min_)","97fdeac9":"plt.scatter(Min_,Max_, color=\"red\")                         \nplt.plot(Min_,Max_head,color=\"green\")\nplt.xlabel(\"Min\")\nplt.ylabel(\"Max\")\nplt.title(\"Decision Tree Model\")\nplt.show()","394179c9":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nMax_head_dt=dt_reg.predict(Min_)\nprint(\"Decision Tree Regression R_Square Score: \" ,r2_score(Max,Max_head_dt))\ndegerlendirme[\"Decision Tree Regression R_Square Score:\"]=r2_score(Max,Max_head_dt)","7455f337":"from sklearn.ensemble import RandomForestRegressor\nrf_reg=RandomForestRegressor(n_estimators=100,random_state=42)\nrf_reg.fit(Min_,Max_)\nrf_reg.predict([[20]])\n","b4f0aa8d":"Tmp_head=rf_reg.predict(Min_)","359e9b76":"plt.scatter(Min_,Max_,color=\"red\")\nplt.plot(Min_,Max_head,color=\"green\")\nplt.xlabel(\"Min\")\nplt.ylabel(\"Max\")\nplt.title(\"Random Forest Model\")\nplt.show()","0caacdab":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nMax_head_rf=rf_reg.predict(Min_)\nprint(\"Random Forest Regression R_Square Score: \" ,r2_score(Max,Max_head_rf))\ndegerlendirme[\"Random Forest Regression R_Square Score:\"]=r2_score(Max,Max_head_rf)","54aabd2a":"degerlendirme","dfe2a843":"\nVeri seti, d\u00fcnyan\u0131n \u00e7e\u015fitli hava istasyonlar\u0131nda her g\u00fcn kaydedilen hava ko\u015fullar\u0131 hakk\u0131nda bilgi i\u00e7erir. Bilgiler ya\u011f\u0131\u015f, kar ya\u011f\u0131\u015f\u0131, s\u0131cakl\u0131klar, r\u00fczgar h\u0131z\u0131 ve g\u00fcn\u00fcn f\u0131rt\u0131na f\u0131rt\u0131nalar\u0131 veya di\u011fer k\u00f6t\u00fc hava ko\u015fullar\u0131n\u0131 i\u00e7erip i\u00e7ermedi\u011fini i\u00e7erir.","ee77153d":"# 2. Multiple Linear Regression modeli uygulamasi","d1ffa3c3":"# 1-Lineer regrasyon modeli uygulamasi","81483f2f":"G\u00fcnl\u00fck minimum ve maksimum s\u0131cakl\u0131k aras\u0131nda bir ili\u015fki var m\u0131? Minimum s\u0131cakl\u0131k verilen maksimum s\u0131cakl\u0131\u011f\u0131 tahmin edebilir misiniz?","e93ff1c2":"# 3. Polynomial Regression modeli uygulamasi\n","65d686bc":"# 5-Random Forest modeli uygulamasi","8dfa387b":"# 4.Decision Tree modeli uygulamasi"}}