{"cell_type":{"50a1669e":"code","3254ffd2":"code","242c78cd":"code","2559ccf4":"code","38b1a344":"code","baa41682":"code","71c5c240":"code","f21e5940":"code","f47169a5":"code","3e6abff5":"code","c9875802":"code","4f62e17e":"code","b62bf501":"code","3e6dee36":"code","f584e63e":"markdown","e952064f":"markdown","5684de1d":"markdown","588db478":"markdown","335fc9d3":"markdown","6dc572fd":"markdown"},"source":{"50a1669e":"#Importing Necessary Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","3254ffd2":"#Importing dataset\ncol = [ 'Class Name','Left weight','Left distance','Right weight','Right distance']\ndf = pd.read_csv('..\/input\/balancescale\/balance-scale.data',names=col,sep=',')\n","242c78cd":"df.head()","2559ccf4":"df.info()","38b1a344":"sns.countplot(df['Class Name'])","baa41682":"sns.countplot(df['Left weight'],hue=df['Class Name'])","71c5c240":"from sklearn.model_selection import train_test_split\nX = df.drop('Class Name',axis=1)\ny = df[['Class Name']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state=42)\n","f21e5940":"from sklearn.tree import DecisionTreeClassifier\nclf_model = DecisionTreeClassifier(criterion=\"gini\", random_state=42,max_depth=3, min_samples_leaf=5)   \nclf_model.fit(X_train,y_train)","f47169a5":"y_predict = clf_model.predict(X_test)","3e6abff5":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\naccuracy_score(y_test,y_predict)","c9875802":"target = list(df['Class Name'].unique())\nfeature_names = list(X.columns)","4f62e17e":"from sklearn import tree\nimport graphviz\ndot_data = tree.export_graphviz(clf_model,\n                                out_file=None, \n                      feature_names=feature_names,  \n                      class_names=target,  \n                      filled=True, rounded=True,  \n                      special_characters=True)  \ngraph = graphviz.Source(dot_data)  \n\ngraph","b62bf501":"from sklearn.tree import export_text\nr = export_text(clf_model, feature_names=feature_names)\nprint(r)","3e6dee36":"graph.save('graph1.jpg')","f584e63e":"**Reading Dataset**","e952064f":"**Test Accuracy**","5684de1d":"**Splitting Dataset into Training and Testing set**\n","588db478":"**Exploratory Data Analysis**","335fc9d3":"**Training the Decision Tree Classifier**","6dc572fd":"**Plotting Decision Tree**"}}