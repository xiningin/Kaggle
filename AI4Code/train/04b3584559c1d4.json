{"cell_type":{"85fbd5df":"code","e7489840":"code","380144a2":"code","f6ad8eb9":"code","4bc5d351":"code","bf81b0ac":"code","c4b776a2":"code","36d0f4ea":"code","ef1d8ca2":"code","f05004a8":"code","08f8e685":"code","9ad43d1d":"code","8ffe4c15":"code","48ccff5f":"code","9c94f29f":"code","7cc5a742":"code","01e54811":"code","32a6b008":"code","2860d2f1":"code","3f119b48":"code","d1855d20":"code","fa2d4272":"code","7266e3ee":"code","21d1fadf":"code","d378e67c":"code","047013c3":"code","656a34fe":"code","e81d3971":"code","d53b4fc0":"code","fa54956d":"code","dbc14a35":"code","d75e91a4":"code","aa9b6081":"code","3fe9093f":"code","5118c812":"code","b07825f2":"code","76d3605a":"code","f89ddf86":"code","19f2d607":"code","b486b050":"code","7e11b504":"code","54c5e186":"code","e64c4048":"code","030b9561":"code","c27ef093":"code","20bdfd06":"markdown","ed180499":"markdown","22eccc2b":"markdown","dbf36218":"markdown","90cbf07d":"markdown","9f9f4959":"markdown","a3bc29f9":"markdown","a1787c25":"markdown","dea625a6":"markdown","7056cbfe":"markdown","2843b853":"markdown","bd9ba54a":"markdown","da7cfe31":"markdown","9eb627c6":"markdown","ac46a745":"markdown","115d13c8":"markdown","fd63e2ec":"markdown","ffa80b10":"markdown","9004217a":"markdown","93ceb2d3":"markdown","56e262d9":"markdown"},"source":{"85fbd5df":"import pandas as pd\nimport geopandas as gpd\nimport unicodedata","e7489840":"results = pd.read_html('https:\/\/rezultati.dik.co.me\/')[0]\nresults.head()","380144a2":"# List of Montenegrin political parties in English language\nparty_list_in_english = pd.read_excel('..\/input\/montenegro-info\/Parties.xlsx').columns\nparty_list_in_english","f6ad8eb9":"# Dictionary of parties translated and shortened from Montenegrin to English\ntranslated_parties = dict(zip(results.columns, party_list_in_english))\ntranslated_parties","4bc5d351":"# Translates political parties to English\nresults = results.rename(columns=translated_parties)\nresults.head()","bf81b0ac":"# Fills missing entries with correct values from election website\nresults['Municipality'] = results['Municipality'].fillna('Total', limit=1)\nresults['Registered_Voters'] = results['Registered_Voters'].fillna('540026 \/ 540026', limit=1)\nresults['Total_Votes'] = results['Total_Votes'].fillna('413952 76,65 %', limit=1)\nresults['Total_Valid_Votes'] = results['Total_Valid_Votes'].fillna('409451 98,91 %', limit=1)","c4b776a2":"results.head()","36d0f4ea":"results['Municipality']","ef1d8ca2":"def unicode_normalize(input_string):\n    \"\"\"\n    Converts special alphabetical characters with the base character\n    e.g.: 'h\u00e9t\u00e9rog\u00e9n\u00e9it\u00e9'  --> 'heterogeneite'\n    \"\"\"\n    return ''.join((c for c in unicodedata.normalize('NFD', input_string)\n                    if unicodedata.category(c) != 'Mn'))","f05004a8":"results['Municipality'] = results['Municipality'].apply(lambda x: unicode_normalize(x))","08f8e685":"results['Municipality']","9ad43d1d":"results = results.set_index('Municipality')","8ffe4c15":"# Cleans 'results' dataframe keeping only the relevant info\nresults.loc['Total'] = results.apply(lambda x: x.loc['Total'].split()[0], axis=0)\nresults['Registered_Voters'] = results['Registered_Voters'].apply(lambda x: x.split()[0])\nresults.head()","48ccff5f":"results.dtypes","9c94f29f":"results = results.astype('int32')","7cc5a742":"results['winner'] = results.loc[:,'Social_Democrats':'Peace_is_Our_Nation'\n                               ].apply(lambda x: x.idxmax(), axis=1)","01e54811":"results['winner']","32a6b008":"results['winner'].value_counts()","2860d2f1":"# New dataframe for handling percentages\nresults_perc = results.copy()","3f119b48":"# Percent of invalid votes in each municipality\nresults_perc['percent_invalid'] = ((results_perc['Total_Votes'] - \n                                    results_perc['Total_Valid_Votes']) \/ \n                                   results_perc['Total_Votes'] * 100)","d1855d20":"# The turnout rate in each municipality\nresults_perc['turnout'] = results_perc['Total_Votes'] \/ results_perc['Registered_Voters'] * 100","fa2d4272":"# Converts the party columns to percentages\nresults_perc.loc[:,'Social_Democrats':'Peace_is_Our_Nation'] = (\n    results_perc.loc[:,'Social_Democrats':'Peace_is_Our_Nation'].apply(\n        lambda x: x \/ results_perc['Total_Valid_Votes'] * 100))\n\n# Converts the Registered_Voters, Total_Votes, and Total_Valid_Votes columns to percentages\nresults_perc.loc[:,'Registered_Voters':'Total_Valid_Votes'] = (\n    results_perc.loc[:,'Registered_Voters':'Total_Valid_Votes'].apply(\n        lambda x: x \/ x[0] * 100))","7266e3ee":"print ('Democratic Party of Socialists:', \n       results_perc.loc['Total','Democratic_Party_of_Socialists_of_Montenegro'].round(2))\nprint ()\nprint ('For the Future of Montenegro:', \n       results_perc.loc['Total','For_the_Future_of_Montenegro'].round(2))\nprint ('Peace is Our Nation:', \n       results_perc.loc['Total','Peace_is_Our_Nation'].round(2))\nprint ('United_Reform Action:', \n       results_perc.loc['Total','Civic_Movement_United_Reform_Action'].round(2))\nprint ('Opposition coalition total:', \n       results_perc.loc['Total',['Civic_Movement_United_Reform_Action', \n                                 'Peace_is_Our_Nation', \n                                 'For_the_Future_of_Montenegro']].sum().round(2))","21d1fadf":"mont_map = gpd.read_file('..\/input\/montenegro-map\/montenegro_map.txt')\nmont_map.head()","d378e67c":"mont_map = mont_map.rename(columns={'name': 'Municipality'})","047013c3":"# Removes extra words in Municipality column to allow for future merging\nmont_map['Municipality'] = mont_map['Municipality'].str.replace(' Municipality', '')\nmont_map['Municipality'] = mont_map['Municipality'].str.replace('Old Royal Capital ', '')\nmont_map['Municipality'] = mont_map['Municipality'].str.replace(' Capital City', '')","656a34fe":"print ('results_perc shape:', results_perc.shape, 'mont_map shape:', mont_map.shape)","e81d3971":"def elements_missing(li1, li2):\n    \"\"\"\n    Returns the elements missing from each input list compared to the other list\n    \"\"\"\n    return [elem for elem in li1 + li2 if elem not in li1 or elem not in li2]","d53b4fc0":"# Finds the municipalities in results_perc that are not in mont_map and vice versa\nelements_missing(list(results_perc.index), list(mont_map['Municipality']))","fa54956d":"mont_map['Municipality'] = mont_map['Municipality'].apply(lambda x: unicode_normalize(x))","dbc14a35":"elements_missing(list(results_perc.index), list(mont_map['Municipality']))","d75e91a4":"overall_map = mont_map.merge(results_perc, left_on='Municipality', right_index=True)","aa9b6081":"overall_map.head()","3fe9093f":"population = pd.read_html('https:\/\/en.wikipedia.org\/wiki\/Municipalities_of_Montenegro')[1]\npopulation.head()","5118c812":"population.columns","b07825f2":"population.columns = population.columns.droplevel([0])","76d3605a":"population.columns","f89ddf86":"population = population.loc[:,['Municipality', \n                               'Total', \n                               'Ethnic Majority (2011)', \n                               'Predominant language', \n                               'Predominant religion']]","19f2d607":"population['Ethnic Majority (2011)'] = (population['Ethnic Majority (2011)']\n                                        .apply(lambda x: x.split()[0]))","b486b050":"population['Municipality'] = population['Municipality'].apply(lambda x: unicode_normalize(x))","7e11b504":"elements_missing(list(population['Municipality']), list(overall_map['Municipality']))","54c5e186":"overall_map = overall_map.merge(population)","e64c4048":"overall_map.head()","030b9561":"type(overall_map)","c27ef093":"#overall_map.to_file(r'M:\/<<your\/location\/here>>')","20bdfd06":"All the columns in 'results' are of the object datatype, but at this point those should be converted to integers","ed180499":"[](http:\/\/)As you can see, there are some pretty significant issues to work out. To start, let's translate the columns containing the 11 parties up for election. \n\nI Google translated the election website and saved that in an Excel file. Then I went through Wikipedia and further cleaned-up the English-translated party names.","22eccc2b":"# New percentage-based dataframe\nThe raw voting numbers should be converted to percentages which are easier to digest. However, the raw numbers may still be important so we'll create a copy of the results dataframe and convert that to percents.","dbf36218":"# Population data\nIt may be worth including some demographic information as well, so we'll look once more to wikipedia.","90cbf07d":"# Geographic Maps\nWith the loaded shp file, the rest of work is done in GIS software. Though I won't get into that here, the vast majority of work has already been done. \n\nIncluded are some of the more interesting maps that can be made.","9f9f4959":"# Determine winners","a3bc29f9":"# Unicode normalization\nThe names of the Montenegrin municipalities include a number of different accent marks, such as Nik\u0161i\u0107 municipality. While all of the datasets used are actually consistent, QGIS has some issues properly loading all of these characters. Accordingly, we'll build a function to normalize these columns.","a1787c25":"# Fill missing entries","dea625a6":"# Save to file\nWith all the merging, let's make sure before saving the overall_map dataframe, that we have the correct type. One merge in the wrong direction results in a pandas dataframe which cannot be loaded in a geographical information system (GIS).","7056cbfe":"We'll check to see which entries are missing from each dataframe. The election results dataframes contain two extra rows, so we know for sure there are missing entries.","2843b853":"# Read and clean Montenegro geographical data","bd9ba54a":"Forgot to normalize mont_map. Let's do that now and try again.","da7cfe31":"Only the 'Total' and 'Izdvojena BM' are missing from mont_map. 'Izdvojena BM' represents Montenegrins voting from abroad, so it makes sense it, along with the total, would be missing from the shp file. Since those are the only missing values we can proceed.","9eb627c6":"![Parties%281%29.png](attachment:Parties%281%29.png)","ac46a745":"![Munic%20winner.png](attachment:Munic%20winner.png)","115d13c8":"![Demographics%281%29.png](attachment:Demographics%281%29.png)","fd63e2ec":"# Geographic mapping of Montenegro's 2020 election results\n\nIn the following notebook I will create geographic maps of Montenegro's 2020 election results using open source data, Python, and QGIS.\n\nOne example of a final product is included below:","ffa80b10":"# Final cleaning","9004217a":"# Brief Background\nThe 81 seats in the Parliament of Montenegro are determined by one nationwide tally using proportional represenation.\n\nThe Democratic Party of Socialists (DPS) has led Montenegro's government for the past 30 years. Corruption scandals and a controversial law on religion contributed to recent unrest in the country. Amid declining popularity of the DPS which has increasingly turned to authoritarian tactics, Montenegro held parliamentary elections on August 30, 2020, under special circumstances due to the coronavirus pandemic. \n\nThe DPS won the greatest vote share with 35 percent, yielding 30 parliamentary seats. However, a three-party coalition opposition consisting of For the Future of Montenegro, Peace is Our Nation, and United Reform Action won 51 percent of the vote, yielding 41 seats. \n\nOn August 31, leaders of the three parties agreed to form a coalition government, and for the first time since the introduction of multi-party democracy in 1990, a transition in power was set to occur.","93ceb2d3":"# Explore winners","56e262d9":"# Read election results\nWe'll start by reading the election results taken from Montenegro's official election website."}}