{"cell_type":{"160c5912":"code","04ee33d4":"code","1a9cabb3":"code","a567aa41":"code","8f96d726":"code","09885d43":"code","c6a2527e":"code","9e965795":"code","e2f1f608":"code","2d084022":"code","630fc35b":"code","e4ffc292":"code","21cee10e":"code","23685c9f":"code","8458bc51":"code","86bbf27b":"code","e96fdd70":"code","5a9cf14a":"code","16129263":"code","f85aa8ff":"code","00a8f257":"code","346f5fdb":"code","d9cc25ce":"code","92e141d3":"code","6201bf89":"code","08c59fc1":"code","48693119":"markdown","eb253a03":"markdown","d44ad9a5":"markdown","39d6b173":"markdown","0ede62fb":"markdown","7b3ab26a":"markdown","0187eb7e":"markdown","dd84328c":"markdown"},"source":{"160c5912":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error","04ee33d4":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","1a9cabb3":"train.shape","a567aa41":"# check null\nnp.sum(train.isnull())","8f96d726":"train.tail()","09885d43":"train.info()","c6a2527e":"test.tail()","9e965795":"test.info()","e2f1f608":"sns.pairplot(train.sample(1000))","2d084022":"train.corr().style.background_gradient(cmap='Blues')","630fc35b":"%%capture\n!pip install category-encoders\nimport category_encoders as ce\n\n# Ordinally Encoded DF \nencoder = ce.OrdinalEncoder()\ntrain_encode = encoder.fit_transform(train)","e4ffc292":"train_encode.head()","21cee10e":"# Ordinally Encoded DF \nencoder = ce.OrdinalEncoder()\ntest_encode = encoder.fit_transform(test)","23685c9f":"test_encode.head()","8458bc51":"sample_submission.tail()","86bbf27b":"from sklearn.model_selection import train_test_split\n\nX = train_encode.drop('target', axis=1)\ny = train_encode.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","e96fdd70":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor()\n\nrfr.fit(X_train, y_train)","5a9cf14a":"preds = rfr.predict(X_test)\n\npreds[-5: ]","16129263":"# evaluate model using mse\nfrom sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, preds)","f85aa8ff":"# evaluate model using mae\nfrom sklearn.metrics import mean_absolute_error\n\nmean_absolute_error(y_test, preds)","00a8f257":"from sklearn.neighbors import KNeighborsRegressor\n\nknn = KNeighborsRegressor()\n\nknn.fit(X_train, y_train)\n\nknn_preds = knn.predict(X_test)\n\nknn_preds[-5: ]","346f5fdb":"# evaluate model using mse\nfrom sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, knn_preds)","d9cc25ce":"# evaluate model using mae\nfrom sklearn.metrics import mean_absolute_error\n\nmean_absolute_error(y_test, knn_preds)","92e141d3":"# predict on test data\ntest_preds = rfr.predict(test_encode)\ntest_preds[-5: ]","6201bf89":"sample_submission['target'] = test_preds\nsample_submission.to_csv('submission.csv', index=False)","08c59fc1":"# good luck, have fun!","48693119":"#### Load data...","eb253a03":"# Model\n## Train Test Split","d44ad9a5":"## Transform catagorical data to 0\/1","39d6b173":"##  KNeighbors Regressor","0ede62fb":"# Do your stuff...\n\n### Deleverables\n- EDA\n    - What's going on?\n    - Show me the data...\n    - Bonus: Other \/ Etc...\n- Model\n    - [RandomForestRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestRegressor.html)\n    - Bonus: [KNeighborsRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsRegressor.html)\n    - Bonus: Other \/ Etc...\n- Evaluation\n    - mean_squared_error()\n    - Bonus: [roc_auc_score()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.roc_auc_score.html)\n    - Bonus: Other \/ Etc...\n- RAPIDS Bonus\n    - Apply RAPIDS ([Starter Notebook](https:\/\/www.kaggle.com\/tunguz\/tps-feb-2021-rapids-starter))\n    - Replace pandas with cuDF & sklearn with cuML ","7b3ab26a":"# EDA\n### Look at data...","0187eb7e":"## Random Forest Regressor","dd84328c":"# Predict Target using Random Forest Regressor "}}