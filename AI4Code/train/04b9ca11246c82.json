{"cell_type":{"65d20245":"code","1c08ac5e":"code","4654bb73":"code","6ab45d5e":"code","d30f3da8":"code","798cf4ec":"code","9e5722b5":"code","70040d4a":"code","855ff5af":"code","41acb649":"code","1c1a7093":"code","18b24f17":"code","4d10a9ae":"code","9a80732d":"code","b80abd40":"code","64c22843":"code","85b4a42d":"code","8dc8d3a3":"code","bd7afb39":"code","02aa8ada":"code","c104ea6a":"code","6f9947c5":"code","ff39b389":"code","7806965e":"code","6b6c6abc":"code","86a1ad62":"code","58732060":"code","1eb1ecb9":"code","d8b6bbbc":"code","cecc3b15":"code","56d65ab0":"markdown","6cf56073":"markdown","5b8b185e":"markdown","6ffc8e85":"markdown","56656cb7":"markdown","95445a44":"markdown","44336419":"markdown","16471e88":"markdown","9b9806e3":"markdown","4e2e8213":"markdown"},"source":{"65d20245":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.offline as py\nfrom scipy.stats import pearsonr\nimport statsmodels.api as sm\nfrom statsmodels.sandbox.regression.predstd import wls_prediction_std\nfrom sklearn.preprocessing import scale\nfrom sklearn.preprocessing import normalize\nimport scipy.cluster.hierarchy as shc\nfrom scipy import stats\nsns.set_style(\"darkgrid\")\nplt.style.use(\"fivethirtyeight\")\nimport warnings\nwarnings.filterwarnings('ignore')","1c08ac5e":"df=pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv',parse_dates=['Last Update'])\ndf.rename(columns={'Province\/State':'State','Country\/Region':'Country'}, inplace=True)\ndf = df.drop(columns = ['SNo', \"Last Update\"])\ndfdeath = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\ndfdeath.rename(columns={'Province\/State':'State','Country\/Region':'Country'}, inplace=True)\ndfcnf = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndfcnf.rename(columns={'Province\/State':'State','Country\/Region':'Country'}, inplace=True)","4654bb73":"print(\"the no of rows and columns are:\",df.shape)\nprint(\"the no of rows and columns are:\",dfcnf.shape)\nprint(\"the no of rows and columns are:\",dfdeath.shape)","6ab45d5e":"print(\"information about the data:\", df.info())","d30f3da8":"print(\"a brief and basic statistical description of the data frame: \")\ndf.describe().style.background_gradient(cmap='Blues')","798cf4ec":"print(\"a brief and basic statistical description of the data frame: \")\ndfcnf.describe().style.background_gradient(cmap='Blues')","9e5722b5":"print(\"a brief and basic statistical description of the data frame: \")\ndfdeath.describe().style.background_gradient(cmap='Blues')","70040d4a":"df.head(10)","855ff5af":"print(\"convert ObservationDate,Last Update to datetime as they are object and set all the other column except region and sate into numerical values\")\ndf['ObservationDate'] = pd.to_datetime(df['ObservationDate'])\ndf['Confirmed']=df['Confirmed'].astype('int')\ndf['Deaths']=df['Deaths'].astype('int')\ndf['Recovered']=df['Recovered'].astype('int')\ndf.info()","41acb649":"df.tail(10)","1c1a7093":"print(\"finding the missing values: \", df.isna().sum())","18b24f17":"print(\"finding missing values: \", dfcnf.isna().sum())","4d10a9ae":"print(\"finding missing values: \", dfdeath.isna().sum())","9a80732d":"print(\" lets start with symptoms for covid-19\\n Souce is taken for  wiki and othe website for symptoms\")","b80abd40":"symptoms={'symptoms':['Fever','Dry cough','Fatigue','Sputum production','Shortness of breath','Muscle pain',\n        'Sore throat','Headache','Chills','Nausea or vomiting','Nasal congestion','Diarrhoea','Haemoptysis',\n        'Conjunctival congestion'],'percentage':[87.9,67.7,38.1,33.4,18.6,14.8,13.9,13.6,11.4,5.0,4.8,3.7,0.9,0.8]}\n","64c22843":"symptoms=pd.DataFrame(data=symptoms,index=range(14))\nsymptoms.style.background_gradient(cmap='Blues')","85b4a42d":"fig = px.bar(symptoms[['symptoms', 'percentage']].sort_values('percentage'), y=\"percentage\", x=\"symptoms\", color='symptoms', \n             log_y=True, title='Symptoms of covid-19')\nfig.show()","8dc8d3a3":"df.columns","bd7afb39":"df.corr().style.background_gradient(cmap=\"Greens\")","02aa8ada":"py.init_notebook_mode(connected=True)","c104ea6a":"group = df.groupby(['ObservationDate','Country'])['Confirmed', 'Deaths', 'Recovered'].max()\ngroup = group.reset_index()\ngroup","6f9947c5":"group['Date'] = pd.to_datetime(group['ObservationDate'])\ngroup['Date'] = group['Date'].dt.strftime('%m\/%d\/%Y')\ngroup['Active'] = group['Confirmed'] - group['Recovered'] - group['Deaths']\ngroup['Country'] =  group['Country']\n\nfig = px.choropleth(group, locations=\"Country\", locationmode='country names', \n                     color=\"Active\", hover_name=\"Country\",hover_data = [group.Recovered,group.Deaths,group.Active],projection=\"mercator\",\n                     animation_frame=\"Date\",width=1000, height=700,\n                     color_continuous_scale='Reds',\n                     range_color=[100,10000],title='World Map of Coronavirus')\n\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)","ff39b389":"fig = px.treemap(df, path=['Country'], values='Confirmed',color='Confirmed', hover_data=['Country'], color_continuous_scale='burgyl')\nfig.show()","7806965e":"fig = px.scatter_matrix(df,dimensions=['Confirmed', 'Deaths','Recovered'],color='Recovered')\nfig.show()","6b6c6abc":"y = df['Deaths']\nx =  df[['Confirmed','Recovered']]\nmodel = sm.OLS(y, x)\nresults = model.fit()\nprint(results.summary())","86a1ad62":"print('Parameters: ', results.params)\nprint('Standard errors: ', results.bse)","58732060":"fig = px.bar(df[['Country', 'Recovered']].sort_values('Recovered', ascending=False), y=\"Recovered\", x=\"Country\", color='Country', \n             log_y=True, template='ggplot2', title='Recovered Cases')\nfig.show()","1eb1ecb9":"fig = px.bar(df[['Country', 'Deaths']].sort_values('Deaths', ascending=False),y=\"Deaths\", x=\"Country\", color='Country', \n             log_y=True, template='ggplot2', title='Death')\nfig.show()","d8b6bbbc":"top5 = df.groupby(['Country']).sum().nlargest(5,['Confirmed'])\ntop5\nprint(\"Top 5 Countries were affected most\")\nprint(top5)","cecc3b15":"fig = px.scatter(df, x=\"Country\", y=\"Recovered\", color=\"Recovered\")\nfig.show()","56d65ab0":"# heat map of the world.","6cf56073":"    as we can see that only province column has some missing value and it is acceptble.","5b8b185e":"# load data","6ffc8e85":"# now work on the data set:","56656cb7":"# some basic insight of the data","95445a44":"# this is a very basic analysis. please upvote if like it.","44336419":"# visualization of correlation in between the parameters in a pairwise format","16471e88":"# building a ordinary linear regression model","9b9806e3":"# basic analysis start here: ","4e2e8213":"   # loading the libraries"}}