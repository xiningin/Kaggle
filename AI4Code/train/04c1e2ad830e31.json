{"cell_type":{"9e997c26":"code","a0585415":"code","d4f5b09e":"code","baeb8034":"code","1d19d94d":"code","a7de29b8":"code","feef1789":"code","d86f5628":"code","cc51631a":"code","ea2b2578":"code","2593a660":"code","bbe76750":"code","0a2efb82":"code","5ac97b67":"code","f7be4f95":"code","cd503227":"code","5d4fa2df":"code","8cf7c5cb":"code","3ab5ebbe":"code","6a6e0235":"code","3709b191":"code","b612d98a":"code","b0e0b6bb":"code","98cb7c56":"code","e50d2809":"code","26b48e25":"code","65dd3635":"code","1c297ea1":"code","5eb0e4f5":"code","d1296f2c":"code","876fce03":"code","24c5039a":"code","d2f60802":"code","dd143518":"code","79a5eef0":"code","729e0b33":"code","6d844471":"code","607b6534":"code","3779ad83":"code","b735509a":"code","6794d471":"code","a9c4af9f":"code","d2bcec89":"markdown","7f08e441":"markdown","37f98be5":"markdown","7b880cd9":"markdown","d1267e06":"markdown"},"source":{"9e997c26":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.optimizers import Adam\nfrom sklearn.preprocessing import StandardScaler\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau, ModelCheckpoint, EarlyStopping\nsns.set(rc={'figure.figsize': [7, 7]}, font_scale=1.2)","a0585415":"df = pd.read_csv('..\/input\/cleaned-data\/Cleaned_data.csv')\ndf","d4f5b09e":"df.info()","baeb8034":"df.describe()","1d19d94d":"df.describe()","a7de29b8":"df","feef1789":"sns.countplot(df['Severity'],label=\"Count\")","d86f5628":"plt.figure(figsize=(20,10))  #This is used to change the size of the figure\/ heatmap\nsns.heatmap(df.corr(), annot=True, fmt='.0%')","cc51631a":"x = df[['BI-RADS', 'Age', 'Shape', 'Margin', 'Density']]\ny = df['Severity']","ea2b2578":"x\n","2593a660":"y","bbe76750":"x.shape","0a2efb82":"y.shape","5ac97b67":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=42)","f7be4f95":"x_train.shape","cd503227":"x_test.shape","5d4fa2df":"sc = StandardScaler()\nsc.fit(x_train)\nx_train = sc.transform(x_train)\nx_test = sc.transform(x_test)","8cf7c5cb":"x.shape","3ab5ebbe":"x.shape[1]","6a6e0235":"model = Sequential()\nmodel.add(Dense(256, input_shape=[x.shape[1]], activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1, activation='sigmoid'))","3709b191":"model.summary()","b612d98a":"model.compile(optimizer=Adam(), loss='binary_crossentropy', metrics=['accuracy'])","b0e0b6bb":"lrd = ReduceLROnPlateau(monitor = 'val_loss',patience = 200,verbose = 1,factor = 0.50, min_lr = 1e-10)\n\nmcp = ModelCheckpoint('model.h5')\n\nes = EarlyStopping(verbose=1, patience=50)","98cb7c56":"model.summary()","e50d2809":"from tensorflow.keras.utils import plot_model\nfrom IPython.display import Image\nplot_model(model, to_file='convnet.png', show_shapes=True,show_layer_names=True)\nImage(filename='convnet.png') ","26b48e25":"history = model.fit(x=x_train, y=y_train, epochs=1000, callbacks=[lrd, mcp, es], batch_size=128, validation_split=0.1)","65dd3635":"y_pred = model.predict(x_test)\ny_pred","1c297ea1":"y_pred = model.predict_classes(x_test)\ny_pred","5eb0e4f5":"y_test","d1296f2c":"model.evaluate(x_test, y_test)","876fce03":"history.history.keys()","24c5039a":"model.predict(x_test)[60]","d2f60802":"model.predict_classes(x_test)[60]","dd143518":"model.predict(x_test)[20]","79a5eef0":"model.predict_classes(x_test)[20]","729e0b33":"model.predict(sc.transform([[5, 36, 5, 3, 1]]))","6d844471":"# summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n\n# # summarize history for accuracy\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper right')\nplt.show()","607b6534":"model.save('model.h5')","3779ad83":"import joblib","b735509a":"joblib.dump(sc, 'scaler.pkl')","6794d471":"sc = joblib.load('scaler.pkl')","a9c4af9f":"from tensorflow.keras.models import load_model\n\nmodel = load_model('model.h5')\nmodel.predict_classes(sc.transform([[5, 36, 5, 3, 1]]))","d2bcec89":"Dataset & Description\n\nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Mammographic+Mass","7f08e441":"Testing & evaluating the mode","37f98be5":"Saving the model","7b880cd9":"Data Set Information:\n\nMammography is the most effective method for breast cancer screening\navailable today. However, the low positive predictive value of breast\nbiopsy resulting from mammogram interpretation leads to approximately\n70% unnecessary biopsies with benign outcomes. To reduce the high\nnumber of unnecessary breast biopsies, several computer-aided diagnosis\n(CAD) systems have been proposed in the last years.These systems\nhelp physicians in their decision to perform a breast biopsy on a suspicious\nlesion seen in a mammogram or to perform a short term follow-up\nexamination instead.\nThis data set can be used to predict the severity (benign or malignant)\nof a mammographic mass lesion from BI-RADS attributes and the patient's age.\nIt contains a BI-RADS assessment, the patient's age and three BI-RADS attributes\ntogether with the ground truth (the severity field) for 516 benign and\n445 malignant masses that have been identified on full field digital mammograms\ncollected at the Institute of Radiology of the\nUniversity Erlangen-Nuremberg between 2003 and 2006.\nEach instance has an associated BI-RADS assessment ranging from 1 (definitely benign)\nto 5 (highly suggestive of malignancy) assigned in a double-review process by\nphysicians. Assuming that all cases with BI-RADS assessments greater or equal\na given value (varying from 1 to 5), are malignant and the other cases benign,\nsensitivities and associated specificities can be calculated. These can be an\nindication of how well a CAD system performs compared to the radiologists.\n\nClass Distribution: benign: 516; malignant: 445","d1267e06":"Loding Model"}}