{"cell_type":{"81387524":"code","b5a960fa":"code","ba21fcbf":"code","8a9580a0":"code","4839b89a":"code","35906ea3":"code","87a66dfd":"code","29f24412":"code","87bb5212":"code","c37dcb09":"code","37f60727":"code","2564d51f":"code","5aba8e61":"code","45f882c0":"code","3ab26d93":"code","c7f9f4fd":"markdown","6ae2599f":"markdown","f1509a6d":"markdown","cde090af":"markdown","2788222f":"markdown","b075fe51":"markdown","5e7c5cc8":"markdown","d3e03eca":"markdown","692ef6dd":"markdown","81942e56":"markdown","8900b8de":"markdown","044490c6":"markdown"},"source":{"81387524":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report","b5a960fa":"data_df = pd.read_csv('..\/input\/genderprediction\/dataset.csv')\ndata_df.head()","ba21fcbf":"data_df.shape","8a9580a0":"data_df.describe()","4839b89a":"data_df.keys()","35906ea3":"fig, ax = plt.subplots()\n\nfor jk, d in data_df.groupby('jk'):\n    ax.scatter(d['tinggi'], d['berat'], label=jk)\n\nplt.legend(loc='upper left')\nplt.title('Scatter of Height, Weight, and Gender')\nplt.xlabel('Height (cm)')\nplt.ylabel('Weight (kg)')\nplt.grid(True)\nplt.show()","87a66dfd":"X = np.array(data_df[['tinggi', 'berat']])\ny = np.array(data_df['jk'])\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, stratify=y ,random_state=1)\n\nprint(f'X_train :\\n{X_train.shape}\\nX_test : {X_test.shape}\\nX : {X.shape}')\nprint(f'y_train : {y_train.shape}\\ny_test : {y_test.shape}\\ny : {y.shape}\\n')\nprint(f'features :\\n{X_train}\\n')\nprint(f'labels :\\n{y_train}')","29f24412":"lb = LabelBinarizer()\ny_train = lb.fit_transform(y_train)\nprint(f'y_train :\\n{y_train}')","87bb5212":"y_train = y_train.flatten()\nprint(f'y_train : {y_train}')","c37dcb09":"y_test = lb.fit_transform(y_test)\nprint(f'y_train : {y_test}')","37f60727":"y_test = y_test.flatten()\nprint(f'y_test : {y_test}')","2564d51f":"model = KNeighborsClassifier(n_neighbors=5, weights='uniform', algorithm='auto')\nmodel.fit(X_train, y_train)","5aba8e61":"y_pred = model.predict(X_test)\ny_pred","45f882c0":"cls_report = classification_report(y_test, y_pred)\n\nprint(f'Classification Report :\\n{cls_report}')","3ab26d93":"input_data = (150, 48) # input your height and weight here\n\n# Changing the data type to numpy array\nchange_input = np.asarray(input_data)\n\n# Reshape the numpy array as we are predicting for one instance\nreshape_array = change_input.reshape(1, -1)\n\nprediction = model.predict(reshape_array)\nprint(prediction)\n\nif(prediction == [0]):\n    print('The Gender is Male')\nelse:\n    print('The Gender is Female')","c7f9f4fd":"## **Checking The Dataset**\n\nwe must check the data every time we want to make a model, because this is the important thing, if you suddenly meet a bad dataset, wether you want it or not, you must clean the dataset. since we use my dataset, i guarantee the data is 100% clean XD ","6ae2599f":"the output above looks nice, but if we want to use the label for model, we have to change the shape of ***y_train*** to be flat, since we want to change the ***y_train*** to be flat, we can use ***flatten()*** function for this case.","f1509a6d":"## **Training KNN Classification Model**\n\ntraining the data with K Nearest Neighbors Classifier.","cde090af":"## **Import The Important Module**\n\nimport the module that we want to use for this research.","2788222f":"## **Prediction and See The Accuracy**\n\nas you guys can see, i'm using ***classification_report***, because this function have a good and complete accuracy from every single accuracy on this ***sklearn.metrics*** modul","b075fe51":"## **Visualize  The Data**\n\nthe first think we have to do is visualize the data, because from there we can choose which way is good to this dataset.","5e7c5cc8":"## **Guessing Gender by Height and Weight**\n\nThis Machine Learning model inspired by **YouTube** channel names **indonesia_belajar**, and i modified this model with more data.\n\nnote : sorry if my English typing is bad, hopefully you guys can understand.","d3e03eca":"## **Making A Predictive System**","692ef6dd":"# **Going Fine and Nice.**","81942e56":"## **Classification with KNN**\n\nsince the data is look good and nice if we use KNN, then we use KNN for this model.","8900b8de":"as we see in the output above, the feature is very good and ready to rock n roll, but the ***labels\/target*** is not good since we want to predict the weight and the height later, then we must change the ***labels\/target*** with ***LabelBinarizer***.","044490c6":"## **Import The Dataset**\n\nimport the dataset\n\nnote : this dataset is not truly true, and not 100% true guessing what's your gender, because the dataset is not complete at all, that's just Weight and Height, i made this dataset, and get the data from : https:\/\/kaltim.idntimes.com\/health\/fitness\/viktor-yudha\/tinggi-badan-ideal-orang-dewasa-regional-kaltim\/7\n\nyou guys can check it."}}