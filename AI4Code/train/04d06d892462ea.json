{"cell_type":{"bb99b0f3":"code","65832e76":"code","f1c96aae":"code","7bfa0d5d":"code","219ddc42":"code","37d647b9":"code","a8d1d633":"code","366f8b07":"code","a33ac0f0":"code","4663fbee":"code","8aeb8739":"code","be3b11b4":"code","4f2f4b13":"code","3bfc94b0":"code","4662bd69":"code","ee734f48":"code","beefa86b":"code","d2443ed6":"code","78750edc":"code","1f2f3529":"code","022a053f":"code","a09ed06b":"code","deb3279f":"code","c552a7a7":"code","934c2f5b":"code","60470e4f":"code","fcf5d0cf":"code","eaedbe09":"code","cf6bc44d":"code","a0b3654d":"code","edbad558":"code","4e6aca1b":"code","e0b457f2":"code","99bb94f1":"code","474c0614":"code","5774baf2":"code","c59af4b9":"code","0dfe4d3f":"markdown","ef2c88b7":"markdown","eb2e30f1":"markdown","22b7b6a2":"markdown","f0520cee":"markdown"},"source":{"bb99b0f3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier,ExtraTreesClassifier,AdaBoostClassifier\nfrom sklearn.model_selection import KFold,cross_val_score,train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom xgboost import plot_importance\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.model_selection import cross_val_score,ShuffleSplit\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set_style('whitegrid')","65832e76":"df = pd.read_csv('..\/input\/heart.csv')","f1c96aae":"df.columns","7bfa0d5d":"df.rename(columns={'cp':'chest_pain','chol':'cholesterol','restecg':'resting_ecg','trestbps':'resting_blood_pressure',\n                   'fbs':'fasting_blood_sugar','thalach':'max_heart_rate','exang':'exercise_induced_angina','oldpeak':\n          'st_depression','thal':'thalassemia','ca':'num_major_vessels'},inplace=True)","219ddc42":"df.head()","37d647b9":"df.isnull().sum()","a8d1d633":"df.info()","366f8b07":"df.describe()","a33ac0f0":"df.age.value_counts()[:10]","4663fbee":"plt.figure(figsize=(19,5))\nsns.barplot(x=df.age.value_counts().index,y=df.age.value_counts().values)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Counter\")","8aeb8739":"plt.figure(figsize=(11,5),dpi = 70)\nsns.distplot(df['age'],color='lightseagreen',hist_kws={'alpha':1,\"linewidth\": 2}, kde_kws={\"color\": \"k\", \"lw\": 2})\nplt.show()","be3b11b4":"print(\"Total number of Females :\",len(df[df.sex==0]))\nprint(\"Total number of Males :\",len(df[df.sex==1]))","4f2f4b13":"plt.figure(dpi=100)\nplt.subplot(1,2,1)\nplt.title('0:Female   1:Male',fontdict={'fontsize':9})\nsns.countplot(df.sex)\nplt.subplot(1,2,2)\nplt.pie(df.sex.value_counts(),autopct='%.2f%%',explode=[0.1,0],shadow=True,labels=['Male','Female'],startangle=90,\n        colors=['darkcyan','tomato'])\nplt.show()","3bfc94b0":"print(\"Total number of person infected with Heart Disease:\",len(df[df.target==1]))\nprint(\"Total number of person without Heart Disease :\",len(df[df.target==0]))","4662bd69":"plt.figure(figsize=(5,4))\nsns.countplot(df.target)","ee734f48":"plt.figure(dpi=100)\nplt.subplot(1,2,1)\nplt.title(\"0: Person Without Disease\\n 1:Person Affected with Heart Disease \\n(Age vs Target)\",fontdict={'fontsize':8})\nsns.countplot(df.target)\nplt.subplot(1,2,2)\nplt.pie(df.sex.value_counts(),autopct='%.2f%%',explode=[0.1,0],shadow=True,labels=['Male','Female'],startangle=90,\n        colors=['darkcyan','tomato'])\nplt.show()","beefa86b":"chest_type=['Typical Angina','Atypical Angina', 'Non-Anginal Pain','Asymptomatic']\nfor types,counts in zip(chest_type,df.chest_pain.value_counts()):\n    print('Number of Person with Chest Pain Type \"{}\" are: {}'.format(types,counts))","d2443ed6":"plt.figure(dpi=100)\nplt.pie(df.chest_pain.value_counts().values,labels=chest_type,autopct='%1.1f%%',shadow=True,explode=[0.1,0,0,0],startangle=90)\nplt.title('Chest Pain Types\\n')\nplt.show()","78750edc":"plt.figure(dpi=100)\nsns.swarmplot(df.sex,df.age,hue=df.chest_pain,edgecolor='black',s=6)\nplt.legend(loc=3)\nplt.show()","1f2f3529":"plt.figure(dpi=100)\nsns.boxenplot(x=df.sex,y=df.age,hue=df.chest_pain)\nplt.title(\"0: female, 1:male\",fontdict={'fontsize':11})\nplt.show()","022a053f":"plt.figure(dpi=80)\nsns.regplot(x=df.age,y=df.cholesterol,color='indianred',line_kws={\"color\":\"b\",\"alpha\":0.5,\"lw\":3})\nplt.title('Age vs Cholesterol')\nplt.show()","a09ed06b":"plt.figure(dpi=80)\nsns.regplot(x=df.age,y=df.max_heart_rate,color='lightseagreen',line_kws={\"color\":\"r\",\"alpha\":0.7,\"lw\":3},scatter_kws={'alpha':0.5})\nplt.title('Age vs Max Heart Ratr')\nplt.show()","deb3279f":"plt.figure(figsize=(15,4),dpi=110)\npalette = sns.color_palette(\"mako_r\", 2)\nsns.lineplot(x=df.age,y=df.max_heart_rate,hue=df.target,palette=palette,markers=True,style=df.target)\nplt.legend(['Non Heart Patients','Heart Patients'],loc=1)\nplt.title(\"0: Person Without Disease\\n 1:Person Affected with Heart Disease \")\nplt.show()","c552a7a7":"plt.figure(figsize=(15,4),dpi=110)\npalette = sns.diverging_palette(220, 20, n=2)\nsns.lineplot(x=df.age,y=df.resting_blood_pressure,hue=df.target,palette=palette,markers=True,style=df.target)\nplt.legend(['Non Heart Patients','Heart Patients'],loc=1)\nplt.title(\"0: Person Without Disease\\n 1:Person Affected with Heart Disease \")\nplt.show()","934c2f5b":"plt.figure(figsize=(19,5),dpi=100)\nsns.countplot(df.age,data=df,hue='target',palette='GnBu')\nplt.legend(['Non Heart Patients','Heart Patients'],loc=1)\nplt.title('Classification of Disease with Ages')\nplt.show()","60470e4f":"plt.figure(figsize=(15,6))\nsns.heatmap(df.corr(),annot=True,fmt='.1f',cmap='GnBu')\nplt.show()","fcf5d0cf":"df['sex']=df['sex'].astype('category')\ndf['chest_pain']=df['chest_pain'].astype('category')\ndf['fasting_blood_sugar']=df['fasting_blood_sugar'].astype('category')\ndf['resting_ecg']=df['resting_ecg'].astype('category')\ndf['exercise_induced_angina']=df['exercise_induced_angina'].astype('category')\ndf['slope']=df['slope'].astype('category')\ndf['num_major_vessels']=df['num_major_vessels'].astype('category')\ndf['thalassemia']=df['thalassemia'].astype('category')\ndf['target']=df['target'].astype('category')","eaedbe09":"y = df.target","cf6bc44d":"x = pd.get_dummies(df.iloc[:,:-1],drop_first=True)","a0b3654d":"\nx.head()","edbad558":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25)","4e6aca1b":"print(x_train.shape,y_train.shape,x_test.shape,y_test.shape)","e0b457f2":"classifiers=[['Logistic Regression :',LogisticRegression()],\n             ['Decision Tree Classification :',DecisionTreeClassifier()],\n       ['Random Forest Classification :',RandomForestClassifier(n_estimators=10)],\n       ['Gradient Boosting Classification :', GradientBoostingClassifier()],\n       ['Ada Boosting Classification :',AdaBoostClassifier()],\n       ['Extra Tree Classification :', ExtraTreesClassifier()],\n       ['K-Neighbors Classification :',KNeighborsClassifier()],\n       ['Support Vector Classification :',SVC(kernel='linear')],\n       ['Gaussian Naive Bayes :',GaussianNB()],\n            ['XGBoost :',XGBClassifier()]]\n\nfor name,model in classifiers:\n    model=model\n    model.fit(x_train,y_train)\n    predictions = model.predict(x_test)\n    print(name,'Test score is',accuracy_score(y_test,predictions)*100,'and',end =' ',sep= ' ')\n    print('Training score is',accuracy_score(y_train,model.predict(x_train))*100)","99bb94f1":"classifier=[LogisticRegression(),DecisionTreeClassifier(),RandomForestClassifier(n_estimators=10),\n            GradientBoostingClassifier(),AdaBoostClassifier(),\n             ExtraTreesClassifier(),KNeighborsClassifier(),SVC(kernel='linear'),GaussianNB(),XGBClassifier()]\nplt.figure(figsize=(23,9),dpi=100)\nfor model,j in zip(classifier,range(len(classifier))):\n    \n    model.fit(x_train,y_train)\n    pred = model.predict(x_test)\n    plt.subplot(3,4,j+1)\n    plt.title(classifiers[j][0])\n    sns.heatmap(confusion_matrix(y_test,pred),annot=True,cmap='GnBu')","474c0614":"# Feature importance Visualisation \nmodel =XGBClassifier()\nmodel.fit(x_train,y_train)\nplot_importance(model)","5774baf2":"cross_val_score(LogisticRegression(penalty='l1'),x_train,y_train,cv=ShuffleSplit(n_splits=5,test_size=0.2)).mean()","c59af4b9":"print(round(accuracy_score(y_test,LogisticRegression(penalty='l2').fit(x_train,y_train).predict(x_test))*100,2),'%')","0dfe4d3f":"**Age vs Sex**","ef2c88b7":"**Age vs Maximum Heart Rate**\n","eb2e30f1":"**Age vs Blood Pressure**","22b7b6a2":"**Age vs Cholesterol**","f0520cee":"<h1>**Logistic Regression Possess Best Accuracy Among all Models **"}}