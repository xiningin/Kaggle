{"cell_type":{"2b7c7871":"code","21749bc8":"code","5f658988":"code","4ac98d6a":"code","5c151d97":"code","541cb889":"code","7fc04759":"code","78a6b147":"code","c024be10":"code","31dd6a0f":"code","9b1cf582":"code","7a5c8910":"code","bfa903b6":"code","f84f426d":"code","f5781e56":"code","62346b4d":"code","ea119733":"code","5581b5b0":"code","da84acf6":"code","6927e438":"code","3531b884":"code","5ccc1b49":"markdown"},"source":{"2b7c7871":"# Import the dependencies\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","21749bc8":"%matplotlib inline\nplt.rcParams['figure.figsize'] = (12, 8)","5f658988":"# Load dataset\ndf = pd.read_csv(\"..\/input\/ethereum-dataset-nov-2019-nov-2021\/Ethereum.csv\")\ndf.head()","4ac98d6a":"df.info()","5c151d97":"# Convert timestamp to datetime format\ndf['Date'] = pd.to_datetime(df['timestamp'], unit='s')\ndf.head()","541cb889":"# Drop timestamp column\ndf = df.drop('timestamp', axis=1)\ndf.head()","7fc04759":"# Remove time from Date column\ndf['Date'] = pd.to_datetime(df['Date']).dt.date\ndf.head()","78a6b147":"# Remove duplicate columns in Date column and keep the last data only\ndf = df.drop_duplicates(subset=['Date'], keep='last')\ndf.head()","c024be10":"# Rearrange columns\ndf = df[['Date', 'open', 'high', 'low', 'close']]\ndf","31dd6a0f":"df[['high', 'low', 'close']] = df[['high', 'low', 'close']].astype(float)\ndf.head()","9b1cf582":"# Round off to 2 decimal places\ndf[['open', 'high', 'low', 'close']] = df[['open', 'high', 'low', 'close']].round(decimals=2)\ndf.head()","7a5c8910":"# Sort by date\ndf = df.sort_values(by='Date')","bfa903b6":"# Plot chart\nsns.set_style('darkgrid')\nplt.plot(df['Date'], df['close'], color='teal')","f84f426d":"# Create new column for predictions\nprojection = 7\ndf[\"Prediction\"] = df[[\"close\"]].shift(-projection)\ndf.tail(10)","f5781e56":"# Create dataset called X\nX = np.array(df[['close']])\nX = X[:-projection]\nprint(X)","62346b4d":"y = df['Prediction'].values\ny = y[:-projection]","ea119733":"# Split data 80% train and 20% test\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","5581b5b0":"# Train the model\nlinReg = LinearRegression()\nlinReg.fit(X_train, y_train)","da84acf6":"# Score the model\nlinReg_confidence = linReg.score(X_test, y_test)\nprint(\"Linear Regression Confidence:\", linReg_confidence)","6927e438":"# Predict values for the next 7 days\nX_projection = np.array(df[['close']])[-projection:]\nprint(X_projection)","3531b884":"# Predict for future dates(2021-11-02 - 2021-11-08)\nlinReg_prediction = linReg.predict(X_projection)\nprint(linReg_prediction)","5ccc1b49":"<font size = 5><b>Ethereum Price Prediction Using Linear Regression"}}