{"cell_type":{"7d67cd19":"code","dcc8ac5b":"code","f2f7a7a6":"code","616d6295":"code","bad09982":"code","1b1360fc":"code","abd05ecb":"code","fca45850":"code","10d12ede":"code","5f563dfc":"code","73a00866":"code","a9c8557a":"code","93efa961":"code","b15d1236":"code","6057e7b8":"code","b6693b00":"code","9c30318c":"code","2623523b":"code","35450286":"code","fc992719":"code","0377c608":"code","da613fd9":"code","997a2a8f":"code","9256a314":"code","95b9df27":"code","0f9ec993":"code","22db0fca":"code","0feb0aaf":"code","d2cb3618":"code","b1725b1a":"code","fb119cdd":"code","3046bb1d":"code","73875bf7":"code","e6dcedd9":"markdown","cf5f6bdd":"markdown","323a7e65":"markdown","3ba5d4aa":"markdown","8f0fca1b":"markdown","178372d3":"markdown","3cd798ca":"markdown","34228a69":"markdown","2ac6f57e":"markdown","4f730c1a":"markdown","99fa6496":"markdown","7602881d":"markdown","9bdff710":"markdown","97ab6214":"markdown","6033e055":"markdown","496a3291":"markdown","d77e3816":"markdown","2ce17bc1":"markdown","0413a854":"markdown","17f4befa":"markdown","91e1ad11":"markdown"},"source":{"7d67cd19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\nfrom IPython.display import display, HTML\n\n# word cloud library\nfrom wordcloud import WordCloud,ImageColorGenerator\n\n# matplotlib\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcc8ac5b":"import warnings\nwarnings.filterwarnings('ignore')","f2f7a7a6":"# Load data that we will use.\nvgsales = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","616d6295":"# information about vgsales\nvgsales.info()","bad09982":"vgsales.head()","1b1360fc":"print(vgsales.Genre.value_counts())\n","abd05ecb":"vg_genre = vgsales.Genre.value_counts().reset_index()\n\n# create trace1\ntrace1 = go.Bar(\n                x = vg_genre['index'],\n                y = vg_genre['Genre'],\n                marker = dict(color = 'rgb(192, 240, 153)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'The most have been made games genre ' , xaxis = dict(title = 'Genre'), yaxis = dict(title = 'Count'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()\n\n\n\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": vg_genre['Genre'],\n      \"labels\": vg_genre['index'],\n      \"hoverinfo\":\"label+percent+value\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Genre Analysis\",\n        \"title_x\":0.47,     \n    }\n}\niplot(fig)\n\n\n","fca45850":"vg_year = vgsales.Year.value_counts().reset_index()\n# create trace1\ntrace1 = go.Bar(\n                x = vg_year['index'],\n                y = vg_year['Year'],\n                marker = dict(color = 'rgb(192, 129, 153)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Release by Year' , xaxis = dict(title = 'Year'), yaxis = dict(title = 'Number of Games Released'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","10d12ede":"vg_platform = vgsales.Platform.value_counts().reset_index()\n# create trace1\ntrace1 = go.Bar(\n                x = vg_platform['index'],\n                y = vg_platform['Platform'],\n                marker = dict(color = 'rgb(248, 236, 124)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Release by Platform' , xaxis = dict(title = 'Platform'), yaxis = dict(title = 'Number of Games Released'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","5f563dfc":"vgpub=  vgsales.groupby('Publisher')['Name'].count().reset_index()\nvgpub = vgpub.sort_values('Name',ascending=False).reset_index()\nvgpub.drop(\"index\",axis = 1,inplace=True)\nprint(vgpub)\nfig = go.Figure()\nfig.add_trace(\n    go.Bar(x=vgpub['Publisher'][:10],\n           y=vgpub['Name'][:10],\n           name=\"Top 10\",\n           marker = {'color' : 'rgb(72, 148, 252)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=vgpub['Publisher'][:50],\n           y=vgpub['Name'][:50],\n           name=\"Top 50\",\n           marker = {'color' : 'rgb(72, 148, 252)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=vgpub['Publisher'][:100],\n           y=vgpub['Name'][:100],\n           name=\"Top 100\",\n           marker = {'color' : 'rgb(72, 148, 252)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False]},\n                           {\"title\": \"Top 10 Publishers\"}]),\n                dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False]},\n                           {\"title\": \"Top 50 Publishers\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True]},\n                           {\"title\": \"Top 100 Publishers\"}]),\n                \n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(template= \"plotly_dark\",title = 'Top Publishers' , xaxis = dict(title = 'Publishers'), yaxis = dict(title = 'Number of Games Published'))\n\nfig.show()","73a00866":"genre_sales = vgsales.groupby('Genre')['Global_Sales'].sum().reset_index().sort_values(\"Global_Sales\",ascending=False)\nprint(genre_sales)\nfig = px.pie(genre_sales, names='Genre', values='Global_Sales')\nfig.update_traces(rotation=90, pull=[0.25,0.07,0.07,0.07,0.07], textinfo=\"percent+label\")\nfig.update_layout(title=\"Video Game Sales by Genre\",title_x=0.5)\nfig.show()\n# create trace1\ntrace1 = go.Bar(\n                x = genre_sales['Genre'],\n                y = genre_sales['Global_Sales'],\n                marker = dict(color = 'rgb(255, 149, 91)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Sales by Genre' , xaxis = dict(title = 'Genre'), yaxis = dict(title = 'Sales'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","a9c8557a":"year_sales = vgsales.groupby('Year')['Global_Sales'].sum().reset_index()\n# create trace1\ntrace1 = go.Bar(\n                x = year_sales['Year'],\n                y = year_sales['Global_Sales'],\n                marker = dict(color = 'rgb(135, 115, 192)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Sales by Release Year' , xaxis = dict(title = 'Year'), yaxis = dict(title = 'Sales'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","93efa961":"platform_sales =  vgsales.groupby('Platform')['Global_Sales'].sum().reset_index().sort_values(\"Global_Sales\",ascending=False)\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:5],\n           y=platform_sales['Global_Sales'][:5],\n           name=\"Top 5\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:10],\n           y=platform_sales['Global_Sales'][:10],\n           name=\"Top 10\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:20],\n           y=platform_sales['Global_Sales'][:20],\n           name=\"Top 20\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'],\n           y=platform_sales['Global_Sales'],\n           name=\"All\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 5\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False,False]},\n                           {\"title\": \"Top 5 \"}]),\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False,False]},\n                           {\"title\": \"Top 10\"}]),\n                dict(label=\"Top 20\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 20 \"}]),\n                \n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False,True]},\n                           {\"title\": \"All\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(template= \"plotly_dark\",title = 'Video Game Sales by Platform' , xaxis = dict(title = 'Platforms'), yaxis = dict(title = 'Sales'))\n\nfig.show()","b15d1236":"pub_sales=  vgsales.groupby('Publisher')['Global_Sales'].sum().reset_index().sort_values('Global_Sales',ascending=False)\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:10],\n           y=pub_sales['Global_Sales'][:10],\n           name=\"Top 10\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:50],\n           y=pub_sales['Global_Sales'][:50],\n           name=\"Top 50\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:100],\n           y=pub_sales['Global_Sales'][:100],\n           name=\"Top 100\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'],\n           y=pub_sales['Global_Sales'],\n           name=\"All\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False,False]},\n                           {\"title\": \"Top 10 \"}]),\n                dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False,False]},\n                           {\"title\": \"Top 50\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 100 \"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False,False,True]},\n                           {\"title\": \"All\"}]),\n                \n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(template= \"plotly_dark\",title = 'Video Game Sales by Publisher' , xaxis = dict(title = 'Publishers'), yaxis = dict(title = 'Sales'))\n\nfig.show()","6057e7b8":"year =  vgsales.groupby('Year')['Name'].count().reset_index().sort_values(\"Name\",ascending=False)\nyear = year.reset_index()\nyear.drop(\"index\",axis = 1,inplace=True)  \n\ngenre = vgsales['Genre'].unique()\ngenres = sorted(genre)","b6693b00":"na_sales = []\neu_sales = []\njp_sales = []\nother_sales = []\nglobal_sales = []\n\nfor i in genres:\n    v=vgsales[vgsales.Genre==i]\n    na_sales.append(v.NA_Sales.sum())\n    eu_sales.append(v.EU_Sales.sum())\n    jp_sales.append(v.JP_Sales.sum())\n    other_sales.append(v.Other_Sales.sum())\n    ","9c30318c":"fig = go.Figure()\nfig.add_trace(go.Bar(x=na_sales,\n                     y=genres,\n                     name='North America Sales',                     \n                     orientation='h'))\nfig.add_trace(go.Bar(x=eu_sales,\n                     y=genres,\n                     name='Europe Sales',                    \n                     orientation='h'))\nfig.add_trace(go.Bar(x=jp_sales,\n                     y=genres,\n                     name='Japan Sales',                   \n                     orientation='h'))\nfig.add_trace(go.Bar(x=other_sales,\n                     y=genres,\n                     name='Other Region Sales',                  \n                     orientation='h'))\nfig.update_layout(template= \"plotly_dark\",title_text='Region Sales by Genre',xaxis_title=\"Sales\",yaxis_title=\"Genre\",\n                  barmode='stack')\nfig.show()","2623523b":"fig = go.Figure()\n    \nfig.add_trace(go.Scatter(\n    x=genres, \n    y=na_sales, \n    name='North America Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=eu_sales, \n    name='Europe Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=jp_sales, \n    name='Japan Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=other_sales,\n    name='Other Region Sales',\n    mode='lines+markers',\n))\nfig.update_layout(template= \"plotly_dark\",title=\"Total sales by genre\")\nfig.update_xaxes(type='category')\nfig.show()","35450286":"years = [2008.0, 2009.0, 2007.0, 2010.0, 2006.0]\nna_sales = []\neu_sales = []\njp_sales = []\nother_sales = []\nglobal_sales = []\n\nfor y in years:\n    v=vgsales[vgsales.Year==y]\n    na_sales.append(v.NA_Sales.sum())\n    eu_sales.append(v.EU_Sales.sum())\n    jp_sales.append(v.JP_Sales.sum())\n    other_sales.append(v.Other_Sales.sum())\n","fc992719":"tna=vgsales.groupby('Year')['NA_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\nteu=vgsales.groupby('Year')['EU_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\ntjp=vgsales.groupby('Year')['JP_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\ntot=vgsales.groupby('Year')['Other_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)","0377c608":"fig = go.Figure()\nfig.add_trace(go.Bar(x=na_sales,\n                     y=years,\n                     name='North America Sales',                     \n                     orientation='h'))\nfig.add_trace(go.Bar(x=eu_sales,\n                     y=years,\n                     name='Europe Sales',                    \n                     orientation='h'))\nfig.add_trace(go.Bar(x=jp_sales,\n                     y=years,\n                     name='Japan Sales',                   \n                     orientation='h'))\nfig.add_trace(go.Bar(x=other_sales,\n                     y=years,\n                     name='Other Region Sales',                  \n                     orientation='h'))\nfig.update_layout(template= \"plotly_dark\",title_text='Region Sales by Highest Sales Year',xaxis_title=\"Sales\",yaxis_title=\"Year\",\n                  barmode='stack')\nfig.show()","da613fd9":"# Creating trace1\ntrace1 = go.Scatter(\n                    x = tna.Year,\n                    y = tna.NA_Sales,\n                    mode = \"lines\",\n                    name = \"North America\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'))\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = teu.Year,\n                    y = teu.EU_Sales,\n                    mode = \"lines\",\n                    name = \"Europe\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'))\n# Creating trace3\ntrace3 = go.Scatter(\n                    x = tjp.Year,\n                    y = tjp.JP_Sales,\n                    mode = \"lines\",\n                    name = \"Japan\",\n                    marker = dict(color = 'rgba(241, 27, 61, 0.8)'))\n# Creating trace4\ntrace4 = go.Scatter(\n                    x = tot.Year,\n                    y = tot.Other_Sales,\n                    mode = \"lines\",\n                    name = \"Other\",\n                    marker = dict(color = 'rgba(241, 236, 28, 0.8)'))\ndata = [trace1, trace2,trace3,trace4]\nlayout = dict(title = '',\n              xaxis= dict(title= 'Year',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Total Sales',ticklen= 5,zeroline= False),\n              template= \"plotly_dark\"\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","997a2a8f":"na_sales = vgsales.groupby('Platform')['NA_Sales'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_sales = na_sales[:5]\n\neu_sales = vgsales.groupby('Platform')['EU_Sales'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_sales = eu_sales[:5]\n\njp_sales = vgsales.groupby('Platform')['JP_Sales'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_sales = jp_sales[:5]\n\nother_sales = vgsales.groupby('Platform')['Other_Sales'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_sales = other_sales[:5]","9256a314":"fig = go.Figure()\n\nfig.add_trace(\n    go.Bar(y=na_sales['NA_Sales'],\n           x=na_sales['Platform'],\n           name=\"North America\",\n          marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(y=eu_sales['EU_Sales'],\n           x=eu_sales['Platform'],\n           name=\"Europe\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=jp_sales['Platform'],\n           y=jp_sales['JP_Sales'],\n           name=\"Japan\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=other_sales['Platform'],\n           y=other_sales['Other_Sales'],\n           name=\"Others\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:5],\n           y=platform_sales['Global_Sales'][:5],\n           name=\"Gloabal\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"North America\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 5 Platform for North America\"}]),\n                dict(label=\"Europe\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 5 Platform for Europe\"}]),\n                dict(label=\"Japan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 5 Platform for Japan\"}]),\n                dict(label=\"Others\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 5 Platform for Other Region\"}]),\n                dict(label=\"Global\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 5 Platform for Global\"}]),\n            ]),\n        )\n    ])\n\nfig.update_layout(template= \"plotly_dark\",title_text=\"Region sales by platform\",xaxis_domain=[0.05, 1.0])\nfig.show()","95b9df27":"na_sales = vgsales.groupby('Publisher')['NA_Sales'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_sales = na_sales[:5]\n\neu_sales = vgsales.groupby('Publisher')['EU_Sales'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_sales = eu_sales[:5]\n\njp_sales = vgsales.groupby('Publisher')['JP_Sales'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_sales = jp_sales[:5]\n\nother_sales = vgsales.groupby('Publisher')['Other_Sales'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_sales = other_sales[:5]","0f9ec993":"fig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=na_sales['Publisher'],\n           y=na_sales['NA_Sales'],\n           name=\"North America\",\n          marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=eu_sales['Publisher'],\n           y=eu_sales['EU_Sales'],   \n           name=\"Europe\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=jp_sales['Publisher'],\n           y=jp_sales['JP_Sales'],\n           name=\"Japan\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=other_sales['Publisher'],\n           y=other_sales['Other_Sales'],\n           name=\"Others\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:5],\n           y=pub_sales['Global_Sales'][:5],\n           name=\"Gloabal\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"North America\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 5 Platform for North America\"}]),\n                dict(label=\"Europe\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 5 Platform for Europe\"}]),\n                dict(label=\"Japan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 5 Platform for Japan\"}]),\n                dict(label=\"Others\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 5 Platform for Other Region\"}]),\n                dict(label=\"Global\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 5 Platform for Global\"}]),\n            ]),\n        )\n    ])\n,\nfig.update_layout(template= \"plotly_dark\",title_text=\"Region sales by publisher\",xaxis_domain=[0.05, 1.0])\nfig.show()","22db0fca":"vg1000=vgsales.iloc[:1000,:]","0feb0aaf":"vg1000[\"normalizesales\"] = (vg1000[\"Global_Sales\"] - np.min(vg1000[\"Global_Sales\"]))\/(np.max(vg1000[\"Global_Sales\"])-np.min(vg1000[\"Global_Sales\"]))","d2cb3618":"vg1000.Rank=vg1000.Rank.astype(\"str\")\nvg1000.Global_Sales=vg1000.Global_Sales.astype(\"str\")\ntrace1 = go.Scatter3d(\n    y=vg1000[\"Publisher\"],\n    x=vg1000[\"Year\"],\n    z=vg1000[\"normalizesales\"],\n    text=\"Name:\"+ vg1000.Name +\",\"+\" Rank:\" + vg1000.Rank + \" Global Sales: \" + vg1000[\"Global_Sales\"] +\" millions\",\n    mode='markers',\n    marker=dict(\n        size=vg1000['NA_Sales'],\n        color = vg1000['normalizesales'],\n        colorscale = \"Rainbow\",\n        colorbar = dict(title = 'Global Sales'),\n        line=dict(color='rgb(200, 110, 67)'),\n       \n    )\n)\n\ndata=[trace1]\n\nlayout=go.Layout(height=800, width=800, title='Top 1000 Video Games, Release Years, Publishers and Sales',\n            titlefont=dict(color='rgb(20, 24, 54)'),\n            scene = dict(xaxis=dict(title='Year',\n                                    titlefont=dict(color='rgb(20, 24, 54)')),\n                            yaxis=dict(title='Publisher',\n                                       titlefont=dict(color='rgb(20, 24, 54)')),\n                            zaxis=dict(title='Global Sales',\n                                       titlefont=dict(color='rgb(20, 24, 54)')),\n                            bgcolor = 'whitesmoke'\n                           ))\n \nfig=go.Figure(data=data, layout=layout)\niplot(fig)","b1725b1a":"na_games = vgsales.groupby('NA_Sales')['Name'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_games = na_games[:5]\n\neu_games = vgsales.groupby('EU_Sales')['Name'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_games = eu_games[:5]\n\njp_games = vgsales.groupby('JP_Sales')['Name'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_games = jp_games[:5]\n\nother_games = vgsales.groupby('Other_Sales')['Name'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_games = other_games[:5]","fb119cdd":"trace1= go.Bar(y=na_games['NA_Sales'],\n               x=na_games['Name'],\n               name=\"North America\",\n               marker={'color': na_games['NA_Sales'],'colorscale': 'Earth'})\n\ntrace2= go.Bar(y=eu_games['EU_Sales'],\n               x=eu_games['Name'],\n               name=\"Europe\",\n               marker={'color': eu_games['EU_Sales'],'colorscale': 'Earth'})\n\ntrace3= go.Bar(y=jp_games['JP_Sales'],\n               x=jp_games['Name'],\n               name=\"Japan\",\n               marker={'color': jp_games['JP_Sales'],'colorscale': 'Earth'})\n\n\ntrace4=go.Bar(y=other_games['Other_Sales'],\n              x=other_games['Name'],\n              name=\"Other\",\n              marker={'color': other_games['Other_Sales'],'colorscale': 'Earth'})\n\n\nlayout=dict(template=\"plotly_dark\",height=600, width=800, title_text=\"Video game rankings by region\")\n\nfig = make_subplots(\n    rows=2, cols=2, subplot_titles=(\"North America\", \"Europe\", \"Japan\",\"Other\"),\n    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}],\n           [ {\"type\": \"bar\"}, {\"type\": \"bar\"}]])\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\n\nfig['layout'].update(layout)\nfig.show()","3046bb1d":"# data prepararion\ngenre=vgsales['Genre']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(genre))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","73875bf7":"# data prepararion\nplatform=vgsales['Platform']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(platform))\nplt.imshow(wordcloud)\nplt.axis('off')\n\nplt.show()","e6dcedd9":"<a id=\"6\"><\/a> <br>\n<h2 style =\"background:#4894fc;border:0;\">What are the top publishers?<\/h2>","cf5f6bdd":"<a id=\"15\"><\/a> <br>\n<h2 style =\"background:#c86e43;border:0;\">Top 1000 Video Games, Release Years, Publishers and Sales<\/h2>","323a7e65":"<a id=\"17\"><\/a> <br>\n<h2 style =\"background:#3e61d4;border:0;\">Genre WordCloud<\/h2>","3ba5d4aa":"<a id=\"10\"><\/a> <br>\n<h2 style =\"background:#c2b2d5;border:0;\">Which publisher has the highest sales worldwide?<\/h2>","8f0fca1b":"<a id=\"11\"><\/a> <br>\n<h2 style =\"background:#b08879;border:0;\">What is the region sales by genre?<\/h2>","178372d3":"<a id=\"8\"><\/a> <br>\n<h2 style =\"background:#8773c0;border:0;\">Which year had the highest sales worldwide?<\/h2>","3cd798ca":"<a id=\"7\"><\/a> <br>\n<h2 style =\"background:#ff955b;border:0;\">Which genre has the highest sales worldwide?<\/h2>\n","34228a69":"<a id=\"4\"><\/a> <br>\n<h2 style =\"background:#c08199;border:0;\">Which year had the most game release?<\/h2>","2ac6f57e":"<a id=\"13\"><\/a> <br>\n<h2 style =\"background:#9cfefa;border:0;\">What is the region sales by platform?<\/h2>","4f730c1a":"<a id=\"1\"><\/a> <br>\n<h2 style =\"background:#333399;border:0;color:white\" >Loading Data and Explanation of Features<\/h2>\n\n<font color = 'black'>\n    \n* vgsales includes 10 features that are:\n\n    * <b style =\"background:#333399;border:0;color:white\"> Rank <\/b> - Ranking of overall sales\n    * <b style =\"background:#333399;border:0;color:white\">Name <\/b> - The games name          \n    * <b style =\"background:#333399;border:0;color:white\">Platform<\/b> - Platform of the games release (i.e. PC,PS4, etc.)     \n    * <b style =\"background:#333399;border:0;color:white\">Year<\/b> - Year of the game's release              \n    * <b style =\"background:#333399;border:0;color:white\">Genre<\/b> - Genre of the game                \n    * <b style =\"background:#333399;border:0;color:white\">Publisher<\/b> - Publisher of the game          \n    * <b style =\"background:#333399;border:0;color:white\">NA_Sales<\/b> - Sales in North America (in millions)                \n    * <b style =\"background:#333399;border:0;color:white\">EU_Sales<\/b> - Sales in Europe (in millions)                \n    * <b style =\"background:#333399;border:0;color:white\">JP_Sales<\/b> - Sales in Japan (in millions)                   \n    * <b style =\"background:#333399;border:0;color:white\">Other_Sales<\/b> - Sales in the rest of the world (in millions)              \n    * <b style =\"background:#333399;border:0;color:white\">Global_Sales<\/b> - Total worldwide sales.             ","99fa6496":"<a id=\"9\"><\/a> <br>\n<h2 style =\"background:#1a8879;border:0;\">Which platform has the highest sales worldwide?<\/h2>","7602881d":"<center><h1 style =\"background: #e60000;border:0;color:white\">INTRODUCTION<\/h1><\/center><br>\nA video game is an electronic game that involves interaction with a user interface or input device \u2013 such as a joystick, controller, keyboard, or motion sensing device \u2013 to generate visual feedback for a player. This feedback is shown on a video display device, such as a TV set, monitor, touchscreen or virtual reality headset. Video games are often augmented with audio feedback delivered through speakers or headphones, and sometimes with other types of feedback, including haptic technology.\n<br>\nVideo games are defined based on their platform, which include arcade games, console games, and PC games. More recently, the industry has expanded onto mobile gaming through smartphones and tablet computers, virtual and augmented reality systems, and remote cloud gaming. Video games are classified into a wide range of genres based on their type of gameplay and purpose.\n\n<h2 style =\"background:#333399;border:0;color:white\"><b>Content:<\/b><\/h2>\n<font color = #333399>  \n    \n1. [Loading Data and Explanation of Features](#1)\n1. [Visualization](#2)\n    * [What genre games have been made the most?](#3)\n    * [Which year had the most game release?](#4)\n    * [Which platform had the most game release?](#5)\n    * [What are the top publishers?](#6)\n    * [Which genre has the highest sales worldwide?](#7)\n    * [Which year had the highest sales worldwide?](#8)\n    * [Which platform has the highest sales worldwide?](#9)\n    * [Which publisher has the highest sales worldwide?](#10)\n    * [What is the region sales by genre?](#11)\n    * [What is the region sales by year?](#12)\n    * [What is the region sales by platform?](#13)\n    * [What is the region sales by publisher?](#14)\n    * [Top 1000 Video Games, Release Years, Publishers and Sales](#15)\n    * [What is the video game rankings by region?](#16)","9bdff710":"<a id=\"16\"><\/a> <br>\n<h2 style =\"background:#fddcc6;border:0;\">What is the video game rankings by region?<\/h2>","97ab6214":"<h1 style=\"text-align:center\">   \n      <font color = red >\n                \ud83c\udfae Video Game Sales Visualization With Plotly \ud83c\udfae  \n        <\/font>    \n<\/h1>\n<hr style=\"width:100%;height:5px;border-width:0;color:gray;background-color:gray\">\n<center><img src=\"https:\/\/media.giphy.com\/media\/94DBMnpVEbJLy\/giphy.gif\"><\/center>","6033e055":"<a id=\"14\"><\/a> <br>\n<h2 style =\"background:#b2251f;border:0;\">What is the region sales by publisher?<\/h2>","496a3291":"## If you like the notebook please upvote\n<center><img src=\"https:\/\/media.giphy.com\/media\/13qctMBrrgbwJi\/giphy.gif\"><\/center>\n","d77e3816":"<a id=\"12\"><\/a> <br>\n<h2 style =\"background:#98a3ff;border:0;\">What is the region sales by year?<\/h2>","2ce17bc1":"<a id=\"2\"><\/a> <br>\n<h2 style =\"background:#333399;border:0;color:white\" >Visualization<\/h2>\n\n","0413a854":"<a id=\"5\"><\/a> <br>\n<h2 style =\"background:#f8ec7c;border:0;\">Which platform had the most game release? <\/h2>","17f4befa":"<a id=\"3\"><\/a> <br>\n<h2 style =\"background:#c0f099;border:0;\">What genre games have been made the most?<\/h2>","91e1ad11":"<a id=\"18\"><\/a> <br>\n<h2 style =\"background:#aa75d4;border:0;\">Platform WordCloud<\/h2>"}}