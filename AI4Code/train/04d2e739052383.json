{"cell_type":{"0700626b":"code","29311ec0":"code","b0850a1a":"code","c7e556a1":"code","e7bc6188":"code","2bb95bdb":"code","3e43cdfe":"code","43a60a93":"code","ef71df3f":"code","cf29a24e":"code","cdfe99cb":"code","75ae507c":"code","d7c7b08f":"code","3c805ca7":"code","6da169a8":"code","17fa2fcc":"code","b5a43d0f":"code","75084ba7":"code","767fac10":"code","6f5fe58d":"code","2c82488e":"code","5769b27a":"code","5122725b":"code","83fe95fd":"markdown"},"source":{"0700626b":"import numpy as np # linear algebra\nimport scipy # training functions\nimport matplotlib.pyplot as plt # graphics\nfrom scipy.optimize import curve_fit # MSE optimization","29311ec0":"# variables\nidade = [18,25,57,45,26,64,37,40,24,33] # independent variable\nsalario_anual = [15000,29000,68000,52000,32000,80000,41000,45000,26000,33000] # dependent variable\n\n# turning lists into arrays\nx_data = np.array(idade)\ny_data = np.array(salario_anual)","b0850a1a":"# defines the function to be optimized (simple regression)\ndef linear_equation(x,a,b):\n    return a * x + b","c7e556a1":"initial_parameters = np.array([1.0,1.0])","e7bc6188":"# performs optimization through the mean square error (MSE)\noptimized_parameters, covariance = curve_fit(linear_equation,x_data,y_data,initial_parameters)","2bb95bdb":"# performs data prediction through the model (linear equation)\nprediction = linear_equation(x_data,*optimized_parameters)","3e43cdfe":"# finds the absolute error (vertical lines)\nabsolute_error = prediction - y_data # predicted value - real value","43a60a93":"squared_error = np.square(absolute_error)\n\nmean_squared_error = np.mean(squared_error)\n\nprint('SE: ',squared_error)\nprint('MSE: ', mean_squared_error)","ef71df3f":"# coefficient of determination\nr_squared = 1.0 - (np.var(absolute_error)\/ np.var(y_data)); # numpy.var - returns the variance of the data\nprint(\"Coeficiente de determina\u00e7\u00e3o: \", r_squared);","cf29a24e":"# shows the regression parameters\nprint('Y = {}X {}'.format(optimized_parameters[0],optimized_parameters[1]))","cdfe99cb":"# plots the figure\nf = plt.figure(figsize=(4,4),dpi=100)\naxes = f.add_subplot(111)\n\naxes.plot(x_data,y_data,'ro')\n\nx_model = np.linspace(min(x_data),max(x_data))\ny_model = linear_equation(x_model,*optimized_parameters)\n\naxes.plot(x_model,y_model)\nplt.xlabel('Idade');\nplt.ylabel('Sal\u00e1rio Anual');","75ae507c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score","d7c7b08f":"regression_object = LinearRegression()\nx_sklmodel = x_data.reshape((-1,1))# in linear regression the x needs to be in 2D\nregression = regression_object.fit(x_sklmodel,y_data)# performs the regression","3c805ca7":"prediction = regression_object.predict(x_sklmodel)","6da169a8":"mean_squared_error = mean_squared_error(y_data,prediction)\nprint('MSE: ', mean_squared_error)","17fa2fcc":"print('Y = {}X {}'.format(regression_object.coef_,regression_object.intercept_))\n\nr_2 = r2_score(y_data,prediction)\n\nprint('Coeficiente de determina\u00e7\u00e3o (R2): ',r_2)","b5a43d0f":"import pandas as pd","75084ba7":"data = pd.read_csv('..\/input\/headbrain\/headbrain.csv')\ndata.head()","767fac10":"x = data['Head Size(cm^3)'].values\ny = data['Brain Weight(grams)'].values","6f5fe58d":"reg = LinearRegression()\nx_reshaped = x.reshape((-1,1))\nregression = reg.fit(x_reshaped,y)","2c82488e":"prediction = reg.predict(x_reshaped)","5769b27a":"print('Y = {}x {}'.format(reg.coef_,reg.intercept_))\n\nr_2 = r2_score(y,prediction)\n\nprint('Coeficiente de determina\u00e7\u00e3o (R2): ',r_2)","5122725b":"# plots the figure\nf = plt.figure(figsize=(4,4),dpi=100)\nplt.scatter(x,y,color='gray')\nplt.plot(x,prediction,linewidth=2)\n\n\nplt.xlabel('Head Size(cm^3)');\nplt.ylabel('Brain Weight(grams)');","83fe95fd":"**Using Sklearn**"}}