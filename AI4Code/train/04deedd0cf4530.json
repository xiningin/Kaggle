{"cell_type":{"e10a13cb":"code","9c3109f9":"code","f00fecd7":"code","c2585255":"code","d4583abb":"code","c4e68597":"code","1308b9b6":"code","c8f23663":"code","a1b10359":"code","507db5ff":"code","954a990e":"code","c04afdaa":"code","684e6111":"code","3ce7b3c9":"code","fbf464eb":"code","092ded58":"code","578106aa":"code","dfe18f1f":"code","9b815fb4":"code","f609e32b":"code","915d104b":"code","d0152d2d":"code","a8b315e2":"code","66220271":"code","8b1f60ae":"code","e63f2043":"code","0af776c8":"code","4eb7877b":"code","7fdd88d2":"code","993f2412":"code","69390466":"code","c8407d84":"code","ca475852":"code","4695a10f":"code","f174c66e":"code","eedb5c68":"code","f6b37a8e":"code","f8e24e70":"code","9a30468d":"code","316cb752":"code","3cf28cc8":"code","1c5e7ce6":"code","f00e39ad":"code","dcd0ff73":"code","3dbd3921":"code","b2a839ae":"code","29547328":"code","7f483274":"code","613b29c7":"code","b6c55236":"code","b1532037":"markdown","f631f715":"markdown","46d95bad":"markdown","73340d51":"markdown","c506f1c4":"markdown","0cc2b697":"markdown","3da29d5d":"markdown","f87ce6e7":"markdown","7227b61b":"markdown","87d0a8ee":"markdown","55841515":"markdown","e381169d":"markdown","f228bc07":"markdown","aab6b276":"markdown","e3003b0e":"markdown","35055ff4":"markdown","73d46bda":"markdown","27ee4adf":"markdown"},"source":{"e10a13cb":"import pandas as pd #allows reading tabular and multi-dimentional data\nimport matplotlib.pyplot as plt #visulisation package\nimport seaborn as sns #visulisation package\nimport numpy as np #linear algebra\nfrom string import ascii_letters #helps searching for a specifit charactor(s) in string \nimport math\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9c3109f9":"df = pd.read_csv(\"..\/input\/stack-overflow-developer-survey-2020\/developer_survey_2020\/survey_results_public.csv\",index_col=\"Respondent\")\ndf_schema= pd.read_csv(\"..\/input\/stack-overflow-developer-survey-2020\/developer_survey_2020\/survey_results_schema.csv\", index_col= \"Column\")\ndf.rename(columns={\"ConvertedComp\": \"Salary_USD\"}, inplace=True)\npd.set_option(\"Display.max_columns\", 21)\npd.set_option(\"Display.max_rows\", 61)\ndf.drop(columns=[\"CompTotal\",\"CompFreq\"], inplace=True)","f00fecd7":"#Code from https:\/\/www.kaggle.com\/yashvi\/data-analyst-jobs-visualization#Revenue-of-different-Industries\ndef missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n\n# Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns","c2585255":"missing_values_table(df)","d4583abb":"df.describe()","c4e68597":"df[\"YearsCode\"].replace(to_replace=\"More than 50 years\", value=51, inplace=True)\ndf[\"YearsCode\"].replace(to_replace=\"Less than 1 year\", value=0, inplace=True)\ndf[\"YearsCodePro\"].replace(to_replace=\"More than 50 years\", value=int(51), inplace=True)\ndf[\"YearsCodePro\"].replace(to_replace=\"Less than 1 year\", value=int(0), inplace=True)\ndf[\"Age1stCode\"].replace(to_replace=\"Younger than 5 years\", value=int(4), inplace=True)\ndf[\"Age1stCode\"].replace(to_replace=\"Older than 85\", value=int(86), inplace=True)\ndf = df.astype({\"YearsCode\": float, \"YearsCodePro\": float, \"Age1stCode\": float})","1308b9b6":"df.describe()\n","c8f23663":"df[[\"WorkWeekHrs\",\"Salary_USD\"]] = df[[\"WorkWeekHrs\",\"Salary_USD\"]].fillna(\n    df.groupby(\"Country\")[\"WorkWeekHrs\",\"Salary_USD\"].transform(\"mean\"))","a1b10359":"df[[\"YearsCode\", \"YearsCodePro\", \"Age1stCode\", \"Age\"]]=df[[\"YearsCode\", \"YearsCodePro\", \"Age1stCode\", \"Age\"]].fillna(\n    df.groupby(\"Salary_USD\")[\"YearsCode\", \"YearsCodePro\", \"Age1stCode\", \"Age\"].transform(\"mean\"))","507db5ff":"df.describe()","954a990e":"df.Age[df.Age < 16].value_counts()","c04afdaa":"df.Age1stCode[df.Age1stCode < 15].value_counts()","684e6111":"df[\"Age\"] = df[\"Age\"].apply(lambda x: 14 if x<14 else x)\ndf.Age.value_counts()[14]","3ce7b3c9":"df[\"WorkWeekHrs\"] = df[\"WorkWeekHrs\"].apply(lambda x: 70 if x>70 else x)","fbf464eb":"df[\"Age\"] = df[\"Age\"].apply(lambda x: 85 if x>85 else x)\ndf.describe()","092ded58":"plt.subplots(figsize=(8,4))\ndf[\"Age\"].hist(bins=40,edgecolor=\"black\")\nplt.xticks(list(range(15,80,5)))\nplt.title(\"Age Distribution\")\nplt.ylabel(\"Number of Participants\", fontsize=16)\nplt.xlabel(\"Age\", fontsize=16)\nplt.show() ","578106aa":"plt.subplots(figsize=(8,4))\ndf[\"Age1stCode\"].hist(bins=15,edgecolor=\"black\")\nplt.xticks(list(range(0,60,5)))\nplt.title(\"Age When First started Coding\")\nplt.ylabel(\"Frequncy\", fontsize=16)\nplt.show() ","dfe18f1f":"plt.subplots(figsize=(5,5))\ndata=df[\"Hobbyist\"]\ndata.value_counts().plot.pie(autopct='%1.1f%%',colors=sns.color_palette(\"dark\",5),startangle=90,wedgeprops = { \"linewidth\" : 2, \"edgecolor\" : \"white\"})\nplt.title(\"Do You Code As a Hobby?\")\nmy_circle=plt.Circle((0,0), 0.7, color=\"white\")\np=plt.gcf()\np.gca().add_artist(my_circle)\nplt.show()","9b815fb4":"df[\"Gender\"].value_counts()","f609e32b":"df[\"Gender\"] = df[\"Gender\"].str.split(',').str[0]\ndf[\"Gender\"].replace({'Man;Non-binary': \"Non-binary\/Other\", 'Woman;Man': \"Non-binary\/Other\", 'Woman;Man;Non-binary': \"Non-binary\/Other\", 'Woman;Non-binary': \"Non-binary\/Other\",\"Non-binary\":\"Non-binary\/Other\"},inplace=True)","915d104b":"def USD_GBP(x):\n    return x * float(0.72)#the rate as of 19th of March\ndf[\"Salary_USD\"] = df[\"Salary_USD\"].apply(USD_GBP)\ndf.rename(columns={\"Salary_USD\": \"Salary_GBP\"}, inplace=True)","d0152d2d":"plt.figure(figsize=(7,5))\nchart = sns.barplot(\n    data=df,\n    x=\"Gender\",\n    y=\"Salary_GBP\",\n    palette=\"Set1\"\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment=\"right\" \n)","a8b315e2":"df[\"Gender\"].value_counts(normalize=True)","66220271":"plt.subplots(figsize=(12,10))\ncoun_deg=df[\"UndergradMajor\"].value_counts()[:15].sort_values(ascending=False).to_frame()\nsns.barplot(coun_deg.UndergradMajor,coun_deg.index,palette=\"mako\")\nplt.title(\"Top 15 Degree Subject by the Number of Respondants\",size=15)\nplt.xlabel(\"# Participants\", size=10)\nplt.show() ","8b1f60ae":"sal_ed=df.groupby(\"UndergradMajor\")[\"Salary_GBP\"].median().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(20)","e63f2043":"ax=sns.barplot(sal_ed.Salary_GBP,sal_ed.index,palette=sns.color_palette(\"inferno\",20))\nplt.title(\"Top 20 Median Salary by Degree Subject\",size=15)\nfor i, v in enumerate(sal_ed.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color=\"white\",weight=\"bold\")\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","0af776c8":"df[\"UndergradMajor\"].value_counts(normalize=True)","4eb7877b":"df[\"Sexuality\"] = df[\"Sexuality\"].str.split(\";\").str[0]\ndf[\"Sexuality\"].value_counts(normalize=True)","7fdd88d2":"plt.figure(figsize=(7,5))\nchart = sns.barplot(\n    data=df,\n    x=\"Sexuality\",\n    y=\"Salary_GBP\",\n    palette=\"Set1\"\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment=\"right\" \n)","993f2412":"plt.subplots(figsize=(12,10))\ncoun=df[\"Country\"].value_counts()[:15].sort_values(ascending=False).to_frame()\nsns.barplot(coun.Country,coun.index,palette='inferno')\nplt.title(\"Top 15 Countries By Number Respondants\",size=15)\nplt.ylabel(\"Country\", size=10)\nplt.xlabel(\"# Participants\", size=10)\nplt.show()","69390466":"sal_job=df.groupby(\"Country\")[\"Salary_GBP\"].median().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(20)\nax=sns.barplot(sal_job.Salary_GBP,sal_job.index,palette=sns.color_palette(\"icefire\",20))\nplt.title(\"Top 20 Median Salary by Country\",size=15)\nfor i, v in enumerate(sal_job.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color=\"white\",weight=\"bold\")\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","c8407d84":"countries=[\"Andorra\", \"Lao People's Democratic Republic\", \"Nomadic\", \"Bahamas\", \"Uzbekistan\", \"Hong Kong (S.A.R.)\", \"Denmark\", \"Afghanistan\"]\ncountry_filter=df[\"Country\"].isin(countries)\ndf.loc[country_filter, [\"Country\"]].value_counts()","ca475852":"sal_job2=df.groupby(\"Country\")[\"Salary_GBP\"].median().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(26).drop([\"Afghanistan\",\"Nomadic\",\"Andorra\"\n                                ,\"Uzbekistan\", \"Lao People's Democratic Republic\", \"Bahamas\"])\nax=sns.barplot(sal_job2.Salary_GBP,sal_job2.index,palette=sns.color_palette(\"icefire\",20))\nplt.title(\"Top 20 Median Salary by Country\",size=15)\nfor i, v in enumerate(sal_job2.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color=\"white\",weight=\"bold\")\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","4695a10f":"plt.subplots(figsize=(12,10))\ncoun=df[\"Ethnicity\"].value_counts()[:10].sort_values(ascending=False).to_frame()\nsns.barplot(coun.Ethnicity,coun.index,palette='inferno')\nplt.title(\"Ethnic Group Per #Respondants\",size=15)\nplt.ylabel(\"Ethnicity\", size=10)\nplt.xlabel(\"# Participants\", size=10)\nplt.show()","f174c66e":"df[\"DevType\"].value_counts()","eedb5c68":"df[\"DevType\"] = df[\"DevType\"].str.split(';').str[0]\ndf[\"DevType\"].value_counts().head(20)","f6b37a8e":"sal_job=df.groupby(\"DevType\")[\"Salary_GBP\"].mean().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(20)\nax=sns.barplot(sal_job.Salary_GBP,sal_job.index,palette=sns.color_palette('inferno',20))\nplt.title(\"Mean-Salary by Profession\",size=15)\nplt.ylabel(\"Developer Role\")\nfor i, v in enumerate(sal_job.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color='white',weight='bold')\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","f8e24e70":"sal_ed=df.groupby(\"EdLevel\")[\"Salary_GBP\"].median().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(20)\nax=sns.barplot(sal_ed.Salary_GBP,sal_ed.index,palette=sns.color_palette(\"inferno\",20))\nplt.title(\"Median-Salary by Education Level\",size=15)\nplt.ylabel(\"Developer Role\")\nfor i, v in enumerate(sal_ed.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color='white',weight='bold')\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","9a30468d":"plt.subplots(figsize=(10,8))\ndata=df[\"JobSat\"]\ndata.value_counts().plot.pie(autopct='%1.1f%%',colors=sns.color_palette('Paired',10),startangle=90,wedgeprops = { 'linewidth' : 2, 'edgecolor' : 'white' })\nplt.title(\"Job Satisfaction Pie-chart\")\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\nplt.ylabel('')\nplt.show()","316cb752":"df[\"OrgSize\"].value_counts()  ","3cf28cc8":"df[\"OrgSize\"].replace({\"Just me - I am a freelancer, sole proprietor, etc.\": \"Self-employed\"},inplace=True)","1c5e7ce6":"\nplt.subplots(figsize=(24,14))\nsns.countplot(y=df[\"OrgSize\"],order=df[\"OrgSize\"].value_counts().index)\nplt.show()","f00e39ad":"salary=df[[\"Salary_GBP\",\"OrgSize\",\"YearsCode\", \"YearsCodePro\"]].dropna()\nsal_org=df.groupby(\"OrgSize\")[\"Salary_GBP\"].mean().to_frame().sort_values(by=\"Salary_GBP\",ascending=False).head(20)","dcd0ff73":"ax=sns.barplot(sal_org.Salary_GBP,sal_org.index,palette=sns.color_palette(\"ocean\",20))\nplt.title(\"Mean-Salary by Organisation Size\",size=15)\nplt.ylabel(\"Organisation Size\")\nplt.xlabel(\"Salary\")\nfor i, v in enumerate(sal_job.Salary_GBP): \n    ax.text(.5, i, v,fontsize=10,color='white',weight='bold')\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()","3dbd3921":"df[\"pop_languages\"] = df[\"LanguageWorkedWith\"].str.split(';').str[0]\ndf[\"pop_languages_desired\"] = df[\"LanguageDesireNextYear\"].str.split(';').str[0]","b2a839ae":"f,ax=plt.subplots(1,2,figsize=(28,18))\nsns.countplot(y=df[\"DatabaseWorkedWith\"],ax=ax[0],order=df[\"DatabaseWorkedWith\"].value_counts().head(20).index)\nax[0].set_title(\"Most Popular Databases\")\nax[0].set_ylabel('')\nsns.countplot(y=df[\"pop_languages\"],ax=ax[1],order=df[\"pop_languages\"].value_counts().head(20).index)\nax[1].set_title(\"Most Popular Languages\")\nax[1].set_ylabel('')\nplt.subplots_adjust(wspace=0.4)\nplt.show()","29547328":"df[\"pop_databases_desired\"] = df[\"DatabaseDesireNextYear\"].str.split(';').str[0]","7f483274":"f,ax=plt.subplots(1,2,figsize=(28,17))\nsns.countplot(y=df[\"pop_databases_desired\"],ax=ax[0],order=df[\"pop_databases_desired\"].value_counts().head(20).index)\nax[0].set_title(\"Most Desired Databases\")\nax[0].set_ylabel('')\nsns.countplot(y=df[\"pop_languages_desired\"],ax=ax[1],order=df[\"pop_languages_desired\"].value_counts().head(20).index)\nax[1].set_title(\"Most Desired Languages\")\nax[1].set_ylabel('')\nplt.subplots_adjust(wspace=0.4)\nplt.show()","613b29c7":"df[\"years_code\"]=pd.cut(df[\"YearsCode\"], bins=[0, 10, 20, 30, 40, 50, 60], include_lowest=True)\ndf[\"years_code_pro\"]=pd.cut(df[\"YearsCodePro\"], bins=[0, 10, 20, 30, 40, 50, 60], include_lowest=True)","b6c55236":"f,ax=plt.subplots(1,2,figsize=(28,18))\nsns.countplot(y=df[\"years_code\"],ax=ax[0],order=df[\"years_code\"].value_counts().head(20).index)\nax[0].set_title(\"Years Coded\")\nsns.countplot(y=df[\"years_code_pro\"],ax=ax[1],order=df[\"years_code_pro\"].value_counts().head(20).index)\nax[1].set_title(\"Years Coded Professionally\")\nplt.subplots_adjust(wspace=0.4)\nplt.show()","b1532037":"The error bar in the non-binary is rather large so therefore not very reliable. Men and women seem to be earning the same. As only just below 8% of the data comes from people who identify as a woman, it cannot be conculded that women earn the same as men in this industry. Clearly, we need more women for a fairer representation of genders.","f631f715":"I really don't like doing this next step but for the sake of simplicity, I will put any other genders else than man and woman into one catagory. Gender is fluid and there are more than two genders out there. But we will do what's best for this analysis.","46d95bad":"We now have a much more standard database as we have gotten rid of some errors\/impartial responses, such as working 475\/week or being 279 years old.","73340d51":"**Much better!**","c506f1c4":"We'll treat the missig values by re-evaluating them to a value found in other similar rows. For example, the here in the UK, you are less likely to work for more than 40hrs\/w whereas this is not the case in the US. Therefore, it makes sense to treat missing values based on similar rows found within the same country or within the same Salary(the more hours you work the more likely you are to earn more!). ","0cc2b697":"There is definitely a real mix of data here. But, the majority seem to be working for smaller organisations with less that 500 employees!","3da29d5d":"It is no surprise that you should earn more if you have higher qualifications and the evidence of that is shown here.","f87ce6e7":"This is interesting!! Although it can be argued that a graphic design degree is somewhat relavant to the field of computer science, social sciences, perfoming arts, and humanities discipline are completely irrelevant in programming. Yet people from these backgrounds are amonsts the highest earners! It is worth mentioning that the top 4 account for less than 5 percent of the data. So it is safe to say that we need more data from people from these academic backgrounds to make a firm decision.","7227b61b":"Unsurprisingly, the majority have studied a computer science or a computer-related degree. I definitely expected more people from a mathematical background, though.","87d0a8ee":"It is hard to make a judgement about these columns as there might be people out there who are\/were coding from a very young age! Therefore, I'll make some adjustments that I **feel** is the sensible thing to do.","55841515":"Converting the salary to pound sterling.","e381169d":"We have now changed all the objects in these columns to numerical values.\n","f228bc07":"Again, we cannot really rely on the data from Afghanistan, Nomadic, Andorra, Lao, Bahamas or Uzbekistan as we simply have insufficient evidence to prove these countries are amongst highest payers. So we could repeat the process but drop these countries from the list","aab6b276":"The majority of respondants are between 20 to 40 years old.","e3003b0e":"Despite our plot indicating that people who identify themselves as \"straight\" might earn less than other sexual identities, we simply dont have enough data to support this claim! The large error bar is also hinting that our graph might not be very reliable.","35055ff4":"This graph is a strong indication that bigger organisations tend to pay a lot more in **average** salary than smaller organisations. Which is not very surprising at all!","73d46bda":"We need to tidy up this colum as it is very messy.","27ee4adf":"Really impressive results in my opinion!Only 8.3% didn't like their job."}}