{"cell_type":{"75c7210e":"code","36b49812":"code","7145be65":"code","9e2e4022":"code","b9a7487b":"code","d7f84e94":"code","be098b35":"code","595c1f74":"code","417fbb3f":"code","b25c28da":"code","94c70f57":"code","8af1191d":"code","55a16cf2":"code","fce9a45e":"code","a5fbd8dc":"markdown"},"source":{"75c7210e":"# Import Tensorflow 2.0\nimport tensorflow as tf \n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport random\nfrom tqdm import tqdm\n\n# Check that we are using a GPU, if not switch runtimes\n#   using Runtime > Change Runtime Type > GPU\nassert len(tf.config.list_physical_devices('GPU')) > 0","36b49812":"import os\nos.listdir('..\/input\/digit-recognizer')","7145be65":"import pandas as pd\n\nbase = '..\/input\/digit-recognizer\/'\ntrain_df = pd.read_csv(base+'train.csv')\ntest_df = pd.read_csv(base+'test.csv')\n\n# df.head(1)","9e2e4022":"df = pd.concat([train_df, test_df])\ncols = list(df.columns)\ncols.remove('label')\ndf[cols] = df[cols] \/ 255.0\ndf.shape","b9a7487b":"train = df.iloc[:len(train_df)]\ntest = df.iloc[len(train_df):]\ntest.drop(columns=['label'], inplace=True)\n\nX_train = train.drop(columns=['label'])\nY_train = train['label']\nX_train = X_train.values.reshape(-1,28,28,1).astype(np.float32)\nX_test = test.values.reshape(-1,28,28,1).astype(np.float32)","d7f84e94":"from sklearn.model_selection import train_test_split\n\nX_sample, X_val, Y_sample, Y_val = train_test_split(X_train, Y_train, test_size=0.25, random_state = 22)","be098b35":"def build_cnn_model():\n    cnn_model = tf.keras.Sequential([\n        \n#         tf.keras.layers.Flatten(),\n        tf.keras.layers.Conv2D(filters=24, kernel_size=(3,3), activation=tf.nn.relu),\n        tf.keras.layers.MaxPool2D(),\n        tf.keras.layers.Conv2D(filters=36, kernel_size=(3,3), activation=tf.nn.relu),\n        tf.keras.layers.MaxPool2D(),\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(128, activation=tf.nn.relu),\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax)\n        \n    ])\n    \n    return cnn_model\n\ncnn_model = build_cnn_model()\ncnn_model.predict(X_sample[:3])\nprint(cnn_model.summary())","595c1f74":"cnn_model.compile(optimizer=tf.keras.optimizers.Adagrad(learning_rate=0.01), loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n\nBATCH_SIZE = 64\n\ncnn_model.fit(X_sample, Y_sample, batch_size = BATCH_SIZE, epochs=20)","417fbb3f":"test_loss, test_acc = cnn_model.evaluate(X_val, Y_val, batch_size=BATCH_SIZE)\nprint(\"Test Accuracy: {:.4f}\".format(test_acc))","b25c28da":"predictions = cnn_model.predict(X_test)\npredictions[1]","94c70f57":"predictions = [np.argmax(predictions[i]) for i in range(len(predictions))]\npredictions[:3]","8af1191d":"sample = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsample.head(3)","55a16cf2":"sample['Label'] = predictions\nsample.head(2)","fce9a45e":"sample.to_csv('CNN_2layers_Adagrad2.csv', index=False)","a5fbd8dc":"## CNN MODELING\n#### Using Maxpooling"}}