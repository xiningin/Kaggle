{"cell_type":{"0c07e694":"code","db34a855":"code","4ccb17ce":"code","40b9adec":"code","2f63b9d7":"code","b6c12a1b":"code","5169f30b":"code","6749edda":"code","65c26611":"code","b88648f5":"code","6dccd66f":"code","043207f6":"code","3174717e":"code","345d3829":"code","f377ad7b":"code","96f8f409":"code","a5868b38":"code","671cf1a9":"code","6c86941a":"markdown","189e424f":"markdown","833e8115":"markdown","10009e02":"markdown","060d8f94":"markdown","98c81ce0":"markdown","71929caa":"markdown","61ad24fb":"markdown","67e0f834":"markdown","74201904":"markdown"},"source":{"0c07e694":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport geopandas as gpd","db34a855":"url_geojson = \"\/kaggle\/input\/geojson-departamentos-peru\/peru_departamental_simple.geojson\"","4ccb17ce":"region_geojson = gpd.read_file(url_geojson)\nregion_geojson.head()","40b9adec":"ax = region_geojson.plot(figsize=(15,15))\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","2f63b9d7":"ax = region_geojson.plot(figsize=(20,20),edgecolor=u'gray', cmap='Pastel1')\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","b6c12a1b":"#url_geojson=\"..\/input\/geojson-departamentos-peru\/peru_departamental_simple.geojson\"\nurl_geojson = \"\/kaggle\/input\/geojson-departamentos-peru\/peru_provincial_simple.geojson\"\n\nprovinces_geojson = gpd.read_file(url_geojson)\nprovinces_geojson.head(50)\n\n","5169f30b":"ax = provinces_geojson.plot(figsize=(20,20))\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","6749edda":"ax = provinces_geojson.plot(figsize=(20,20),edgecolor=u'gray', cmap='Pastel1')\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","65c26611":"provinces_geojson['centro']=provinces_geojson['geometry'].centroid\nprovinces_geojson.head()\n","b88648f5":"ax = provinces_geojson[provinces_geojson.FIRST_NOMB.isin (['PUNO'])].plot(figsize=(25,25),edgecolor=u'k',cmap='Set3', scheme='quantiles',linewidths=2)\nprops=dict(boxstyle='round',facecolor=(1,1,1, .30),alpha=1)\nfor point in provinces_geojson[provinces_geojson.FIRST_NOMB.isin (['PUNO'])].iterrows():\n    ax.text(point[1]['centro'].x,\n            point[1]['centro'].y,\n            point[1]['NOMBPROV'],\n            horizontalalignment='center',\n            fontsize=19,\n            bbox=props,\n            color='#152650', \n            fontweight='bold'),\n    #plt.plot(point[1]['centro'].x,\n    #        point[1]['centro'].y, marker=\"o\", markersize=\"80\", markeredgewidth=\"1\",\n    #     markerfacecolor=(0, 0, 0, .30), markeredgecolor=\"white\" ),  \n    #plt.plot(point[1]['centro'].x,\n    #        point[1]['centro'].y, marker=\"o\", markersize=\"160\", markeredgewidth=\"1\",\n    #     markerfacecolor=(0, 0, 0, .20), markeredgecolor=\"white\" )  \n    #cajamarca la libertad lambayeque amazonas\nax.axis('off')\noutfp=r\"output\"\nplt.show()\n\n\n\n\n\n","6dccd66f":"districts_geojson['centro']=districts_geojson['geometry'].centroid\ndistricts_geojson.head()\n\n\nax = districts_geojson[districts_geojson.NOMBPROV=='SANDIA'].plot(figsize=(20,20),edgecolor=u'gray', cmap='Blues_r')\n#ax = provinces_geojson[provinces_geojson.FIRST_NOMB.isin (['ANCASH'])].plot(figsize=(25,25),edgecolor=u'k', cmap='Blues_r', linewidths=2)\nprops=dict(boxstyle='round',facecolor=(1,1,1, .30),alpha=1)\nfor point in districts_geojson[districts_geojson.NOMBPROV.isin (['SANDIA'])].iterrows():\n    ax.text(point[1]['centro'].x,\n            point[1]['centro'].y,\n            point[1]['NOMBDIST'],\n            horizontalalignment='center',\n            fontsize=13,\n            bbox=props,\n            color='#152650', \n            fontweight='bold'),\n    plt.plot(point[1]['centro'].x,\n            point[1]['centro'].y, marker=\"o\", markersize=\"10\", markeredgewidth=\"1\",\n         markerfacecolor=(0, 0, 0, .30), markeredgecolor=\"white\" ),  \n    plt.plot(point[1]['centro'].x,\n            point[1]['centro'].y, marker=\"o\", markersize=\"20\", markeredgewidth=\"1\",\n         markerfacecolor=(0, 0, 0, .20), markeredgecolor=\"white\" )  \n    \n    \nax.axis('off')\noutfp=r\"output\"\nplt.show()\n","043207f6":"\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import linprog\nc=np.array([-1000,-900])\nA=np.array([[2,1],[1,1],[-4,6]])\nb=np.array([30,20,70])\nresultado=linprog(c,A,b, method=\"revised simplex\", bounds=(0,None))\nprint(resultado)\nprint(A)\ndef plot_constr(c,A,b,limites,zz):\n    plt.rcParams.update({'font.size': 22})\n    N = A.shape[0]\n    print(\"Numero de desigualdades de restricciones:\", N)\n    plt.figure(figsize=(25,10))\n \n    plt.plot(225,65, label=\"(225;65)\",marker=\"o\", markersize=\"600\", markeredgewidth=\"2\",\n         markerfacecolor=\"purple\", markeredgecolor=\"white\")\n    \n    plt.plot(300,140, label=\"(400;150)\",marker=\"o\", markersize=\"200\", markeredgewidth=\"2\",\n         markerfacecolor=\"purple\", markeredgecolor=\"white\")\n   \n    plt.plot(350,340, label=\"(350,340)\",marker=\"o\", markersize=\"400\", markeredgewidth=\"2\",\n         markerfacecolor=\"purple\", markeredgecolor=\"white\")\n     \n    plt.plot(250,390, label=\"(250,390)\",marker=\"o\", markersize=\"300\", markeredgewidth=\"2\",\n         markerfacecolor=\"purple\", markeredgecolor=\"white\")\n   \n    plt.plot(25,440, label=\"(25,440)\",marker=\"o\", markersize=\"400\", markeredgewidth=\"2\",\n         markerfacecolor=\"purple\", markeredgecolor=\"white\")\n  \n\n\n    plt.plot(222.222,202.962, label=\"(222.222,202.96)\",marker=\"*\", markersize=\"45\", markeredgewidth=\"2\",\n         markerfacecolor=\"yellow\", markeredgecolor=\"white\")  \n  \n    plt.xlim(0,limites[0])\n    plt.ylim(0,limites[1])\n  \n    \n    plt.grid()\n    plt.show()\n   \nplot_constr(c,A,b,[500,500],[-1750,0,1000]) ","3174717e":"url_geojson = \"\/kaggle\/input\/geojson-departamentos-peru\/peru_distrital_simple.geojson\"\n\ndistricts_geojson = gpd.read_file(url_geojson)\ndistricts_geojson.head()","345d3829":"ax = districts_geojson.plot(figsize=(20,20))\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","f377ad7b":"ax = districts_geojson.plot(figsize=(20,20),edgecolor=u'gray', cmap='Pastel1')\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nplt.show()","96f8f409":"ax = districts_geojson[districts_geojson.NOMBDEP=='PUNO'].plot(figsize=(20,20),edgecolor=u'gray', cmap='Blues_r')\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nax.axis('scaled')\nplt.show()","a5868b38":"ax = districts_geojson[districts_geojson.NOMBPROV=='PUNO'].plot(figsize=(20,20),edgecolor=u'gray', cmap='Pastel1')\nplt.ylabel('Latitude')\nplt.xlabel('Longitude')\nax.axis('scaled')\nplt.show()","671cf1a9":"\"\"\"\nArchivos:\n\"\"\"\n# \/kaggle\/input\/geojson-departamentos-peru\/peru_distrital_simple.geojson\n# \/kaggle\/input\/geojson-departamentos-peru\/peru_provincial_simple.geojson\n# \/kaggle\/input\/geojson-departamentos-peru\/peru_departamental_simple.geojson","6c86941a":"Este es mi humilde aporte, espero les sirva. Si pueden hacer mas cosas con la data brindada, no olviden compartir sus noteboks.\n\nAtte. Noe Melo Locumber\n## \ud83d\ude0e","189e424f":"Visualizaci\u00f3n","833e8115":"# Visualizaci\u00f3n de los departamentos del Per\u00fa con Geopandas\n\n\n## Introduci\u00f3n\nGeopandas necesita de un archivo geojson el cual contiene poligonos de los departamentos del pais. Necesitamos cargar el archivo geojson para empezar a graficar.\n\nSi buscas de otro pais, es recomendable que lo googlees como \"geojson Argentina ... Brasil, Bolovia, etc.\" Mucha gente sube gratuitamente este tipo de contenido a GitHub.","10009e02":"## Provincias","060d8f94":"## Distritos","98c81ce0":"Carga de Archivo Geojson que contiene pol\u00edgonos de las regiones del Per\u00fa","71929caa":"Podemos pintar un departamento especifico de la siguiente manera.\n\nEjemplo departamento **Cusco**","61ad24fb":"Podemos seleccionar un departamento en especifico\n\nEjemplo, **Cusco**.","67e0f834":"## Departamentos","74201904":"Tambi\u00e9n podemos seleccionar un distrito en especifico.\n\nEjemplo, **Calca** (Cusco).\n\n```python\nprint(\"Mi querido Calca, se encuentra en el Valle Sagrado de los Incas - Cusco Per\u00fa \ud83d\ude0a\")\n```"}}