{"cell_type":{"7f871baa":"code","16ea655d":"code","4126a053":"code","c4f7d28f":"markdown","a0c55a1e":"markdown","b9f4458f":"markdown"},"source":{"7f871baa":"#Features: X1, X2 Label:Y\nX1=[1.0,2.0,3.0,4.0] #Input 1\nX2=[3.0,6.0,9.0,12.0] #Input 2\nY=[5.0,10.0,15.0,20.0] #Derived from 2*(x1) + 1*(x2) [2-Dimentional]\n#Initilizing Parameters\nw1,w2,b=0,0,0 #We want the Nural Net. to figure this out, so it is assigned as 0.\nalpha=0.01 #Learning Rate\niteration=1\nx=0\ncostDV=1\nwhile costDV!=0: \n        print(\"Iteration:\",iteration)\n        iteration+=1\n        #Forward Propagation\n        pred=(w1*X1[x%4])+(w2*X2[x%4]) #Hidden Layer\n        #Back Propogation: Using Chain rule on Cost\n        costDV=(pred-Y[x%4]) #It is actually 2*(pred-y1[x%4]), but it is optimized\n        costDV_w1=costDV*(X1[x%4]) #Partial Derivative of w1\n        costDV_w2=costDV*(X2[x%4]) #Partial Derivative of w2\n        b=Y[x%4]-pred\n        print(\"Prediction\",round(pred,3),\"Actual\",Y[x%4],\"Cost Derivative:\",\"\/\/\",round(costDV,3),\"\/\/\",round(costDV_w1,3),round(costDV_w2,2),round(b,2))\n        print(\"w1:\",w1,\"\\nw2:\",w2,\"\\nbias:\",round(b,3),\"\\n\") #This is derived from 3-D plain.\n        #Gradient Descent: Changing the weight besed on Derivative until it becomes 0.\n        w1-=alpha*(costDV_w1)\n        w2-=alpha*(costDV_w2)\n        x+=1","16ea655d":"#Initilizing the data into a Pandas Dataframe using Numpy\nimport pandas as pd\nimport numpy as np\nx1=[1.0,2.0,3.0,4.0]\nx2=[3.0,6.0,9.0,12.0]\ny1=[5.0,10.0,15.0,20.0]\ndf=pd.DataFrame(x1,columns=[\"x1\"])\ndf[\"x2\"]=np.array(x2)\ndf[\"y1\"]=y1\ndf.describe()","4126a053":"from sklearn import linear_model\nmodel=linear_model.LinearRegression()\nmodel.fit(df[[\"x1\",\"x2\"]],df[\"y1\"])\nprint(\"Coefficients (w1 and w2) from SKlearn Library:\",model.coef_)\nprint(\"Coefficients (w1 and w2) from Nural Net from Scratch:\",round(w1,2),round(w2,2))\n","c4f7d28f":"# #Cross-Validation using Sklearn Library","a0c55a1e":"![image.png](attachment:image.png)\n<div style=\"text-align: right\">  -Google Image <\/div>                                                                                       ","b9f4458f":"# **#Tutorial: Neural Net. from Scratch**"}}