{"cell_type":{"c80fc081":"code","bbfbbc9b":"code","6131dc28":"code","5e8ce67c":"code","9db8bd5d":"code","8a8bed50":"code","00bbd202":"code","26c7251e":"code","b5e148ce":"code","97339247":"code","9129be53":"code","f20b077c":"code","fd27fc44":"code","c7d456db":"code","f883a61c":"code","b13b4cb1":"code","b87bd6f5":"code","29b7e46a":"code","c610f298":"code","f12c21bd":"markdown","d8d9f4f6":"markdown","d9cedcb3":"markdown","e42e3665":"markdown","9cc24dba":"markdown","a86ed2c8":"markdown","3b380cba":"markdown","c7977e56":"markdown","172cca98":"markdown"},"source":{"c80fc081":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bbfbbc9b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6131dc28":"df = pd.read_csv('\/kaggle\/input\/television-brands-ecommerce-dataset\/TV_Final.csv')","5e8ce67c":"df.head()","9db8bd5d":"df.info()","8a8bed50":"df.shape","00bbd202":"df.describe()","26c7251e":"df.nunique()","b5e148ce":"df['Rating'] = df['Rating'].fillna(df['Rating'].mean())","97339247":"df['Operating System'].value_counts().plot(kind='bar')","9129be53":"df['Operating System'] = df['Operating System'].fillna('Android')","f20b077c":"df.isnull().sum()","fd27fc44":"df1 = df[\"Brand\"].value_counts()[0:10].reset_index()\ndf1.columns = [\"Brand\", \"Count\"]\ndf1","c7d456db":"sns.catplot(x=\"Count\", y=\"Brand\", kind=\"bar\", data=df1, height=6, aspect=3)\nplt.grid(True)","f883a61c":"#Brands and Resolution\nplt.figure(figsize = (15,10))\nsns.set_style('white')\nsns.countplot(y=\"Brand\", hue=\"Resolution\", data=df,order=df[\"Brand\"].value_counts().iloc[:5].index,)\nplt.title('Brands and Resolution')\nplt.grid(True)","b13b4cb1":"plt.pie(df['Resolution'].value_counts(),labels = df['Resolution'].unique(),autopct='%1.1f%%',radius=3,shadow=True,textprops={'color':'black','weight':'bold','fontsize':12.5})\nplt.show()","b87bd6f5":"plt.figure(figsize=(8,5))\nsns.barplot(x=df['Operating System'], y=df['Selling Price'])\nplt.show()","29b7e46a":"df['Discount_percentage']=((df['Original Price']-df['Selling Price'])\/df['Original Price'])*100","c610f298":"Discount = ['Brand','Discount_percentage']\ndf[Discount]","f12c21bd":"# Brand and Discount Percentage on Original Price","d8d9f4f6":"# Removing Null Values","d9cedcb3":"# Popularity By Resolution","e42e3665":"# Top 10 Brands","9cc24dba":"# Import Dependencies ","a86ed2c8":"# Thank you !!\n Please upvote if you liked my work :):)","3b380cba":"# Analysing Data","c7977e56":"# Brands and Resolution","172cca98":"# Average selling price by Operating System"}}