{"cell_type":{"120f7084":"code","8368af70":"code","15a12892":"code","1283971d":"code","8c522a1b":"code","d14436f4":"code","d6922cc6":"code","f66ce5d5":"code","6bbb7e63":"markdown","1920ca0e":"markdown","b19d0f02":"markdown","8ec0debd":"markdown"},"source":{"120f7084":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n#Libraries import\nimport pandas as pd\nimport numpy as np\nimport csv as csv\nimport json\nimport re\nimport random #Used to randomly choose ingredients\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8368af70":"with open('..\/input\/train.json', 'r') as f:\n    train = json.load(f)\ntrain_raw_df = pd.DataFrame(train)\n\nwith open('..\/input\/test.json', 'r') as f:\n    test = json.load(f)\ntest_raw_df = pd.DataFrame(test)","15a12892":"# Remove numbers and only keep words\n# substitute the matched pattern\n# update the ingredients\ndef sub_match(pattern, sub_pattern, ingredients):\n    for i in ingredients.index.values:\n        for j in range(len(ingredients[i])):\n            ingredients[i][j] = re.sub(pattern, sub_pattern, ingredients[i][j].strip())\n            ingredients[i][j] = ingredients[i][j].strip()\n    re.purge()\n    return ingredients\n\n#remove units\np0 = re.compile(r'\\s*(oz|ounc|ounce|pound|lb|inch|inches|kg|to)\\s*[^a-z]')\ntrain_raw_df['ingredients'] = sub_match(p0, ' ', train_raw_df['ingredients'])\n# remove digits\np1 = re.compile(r'\\d+')\ntrain_raw_df['ingredients'] = sub_match(p1, ' ', train_raw_df['ingredients'])\n# remove non-letter characters\np2 = re.compile('[^\\w]')\ntrain_raw_df['ingredients'] = sub_match(p2, ' ', train_raw_df['ingredients'])\n\ny_train = train_raw_df['cuisine'].values\ntrain_ingredients = train_raw_df['ingredients'].values\ntrain_ingredients_update = list()\nfor item in train_ingredients:\n    item = [x.lower().replace(' ', '+') for x in item]\n    train_ingredients_update.append(item)\nX_train = [' '.join(x) for x in train_ingredients_update]","1283971d":"# Create the dataframe for creating new recipes\nfood_df = pd.DataFrame({'cuisine':y_train\n              ,'ingredients':train_ingredients_update})","8c522a1b":"# the randomly picked function\ndef random_generate_recipe(raw_df, food_type, num_ingredients):\n    if food_type not in raw_df['cuisine'].values:\n        print('Food type is not existing here')\n    food_ingredients_lst = list()\n    [food_ingredients_lst.extend(recipe) for recipe in raw_df[raw_df['cuisine'] == food_type]['ingredients'].values] \n    i = 0\n    new_recipe, tmp = list(), list()\n    while i < num_ingredients:\n        item = random.choice(food_ingredients_lst)\n        if item not in tmp:\n            tmp.append(item)\n            new_recipe.append(item.replace('+', ' '))\n            i+=1\n        else:\n            continue\n    recipt_str = ', '.join(new_recipe)\n    print('The new recipte for %s can be: %s' %(food_type, recipt_str))\n    return new_recipe","d14436f4":"#Say you want some chinese food and you want to only have 10 ingredients in it\nrandom_generate_recipe(food_df, 'chinese', 10)","d6922cc6":"#Say you want some indian food and you want to only have 12 ingredients in it\nrandom_generate_recipe(food_df, 'indian', 12)","f66ce5d5":"#Say you want some french food and you want to only have 8 ingredients in it\nrandom_generate_recipe(food_df, 'french', 12)","6bbb7e63":"*This more sounds like some Japanese food*","1920ca0e":"**Some Cooking Ideas for Tonight**\n\n* The idea is to create some new recipes when people are looking for something to eat at home\n* Build some ingredients set for each cuisine and randomly choose the ingredients","b19d0f02":"**Randomly choose ingredients for the desired cuisine**","8ec0debd":"**Some Basic Data Cleaning**"}}