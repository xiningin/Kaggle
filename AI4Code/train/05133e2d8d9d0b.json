{"cell_type":{"906c40be":"code","e8c9e704":"code","82476c86":"code","52df4c13":"code","5ab6160f":"code","c141d3d9":"code","5aa09625":"code","e7e6d072":"markdown","127df56f":"markdown","c0e53579":"markdown","663209bf":"markdown","f81cca3e":"markdown","9ff85c1a":"markdown"},"source":{"906c40be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8c9e704":"import pandas as pd\ndataset=pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")\n#dataset.head(10)\nX= dataset.iloc[:,0:11]\ny=dataset.iloc[:,11:12]\n#X.head(10)\ny.head(10)","82476c86":"from sklearn.preprocessing import OneHotEncoder\nimport numpy as np\nfrom sklearn.compose import ColumnTransformer\nct=ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[1,2,5,6,8,10])],remainder='passthrough')\nX=(ct.fit_transform(X))","52df4c13":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=1)","5ab6160f":"from sklearn.metrics import accuracy_score,confusion_matrix\ndef Accuracy_cal(y_test,y_pred,model_name):\n    pr=accuracy_score(y_test,y_pred)\n    print(model_name+\" \"+str(pr*100))\n    ","c141d3d9":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(n_estimators=9,criterion='entropy',random_state=1)\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\nAccuracy_cal(y_test,y_pred,\"Random Forest(9)\")","5aa09625":"from sklearn.neighbors import KNeighborsClassifier\nknn_classifier=KNeighborsClassifier(n_neighbors=3,metric=\"minkowski\",p=2)\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\nAccuracy_cal(y_test,y_pred,\"KNN 3\")","e7e6d072":"# Importing the dataset and dividing it into Dependent and Independent variables.","127df56f":"# Accuracy Score method ","c0e53579":"# Classifier - Random Forest 9 Estimators","663209bf":"# Data Cleaning-Categorical Variables\nCategorical Variables List -> Variable name-(|possible values|,Index number)\n\nSex-(|M,F|,1)\nChestPain-(|TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic|,2)\nRestingECG-(|Normal,ST,LVH|,6)\nExcerciseAngia-(|Y,N|,8)\nSTSlope-(|Up,Flat,Down|,10)\n\n\n","f81cca3e":"# Classifier KNN 3 estimators ","9ff85c1a":"# Splitting Data into Test and Train sets"}}