{"cell_type":{"5870eee0":"code","32a231f8":"code","4d1142a1":"code","f730a89a":"code","78eab438":"code","8114ed34":"code","a01b8c32":"code","ba3856f4":"code","cac15409":"code","4b999a79":"code","0a116125":"code","fb3ead4a":"code","53136eb9":"code","2d670f5e":"code","84350a4c":"code","5668cf3e":"code","77caad57":"code","0a3823a7":"code","2fa883dc":"code","91cd781a":"code","8495282d":"code","bc304b20":"code","a6bbad4b":"code","9d149608":"code","3499c4bd":"code","95fea1d4":"markdown","3a3008a7":"markdown","357b1b3a":"markdown","0b53a95a":"markdown","b5e671da":"markdown","9b261556":"markdown","3748e6f0":"markdown","3752d341":"markdown","7cad448c":"markdown","74403169":"markdown","7adae60b":"markdown","d239f66a":"markdown","945d41d1":"markdown"},"source":{"5870eee0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings  \nwarnings.filterwarnings(\"ignore\")   # ignore warnings\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","32a231f8":"data = pd.read_csv('..\/input\/employee_reviews.csv')\ndata.head()","4d1142a1":"data.info()","f730a89a":"data.iloc[:,9:10]","78eab438":"data[\"overall_ratings\"]=data[\"overall-ratings\"]","8114ed34":"data['overall_ratings'].unique()","a01b8c32":"# Comprehension list\n\ndata[\"Liked\"] = [1 if i >=3 else 0 for i in data.overall_ratings]\ndata.tail()","ba3856f4":"part1 = data.iloc[:,-1:]\npart1","cac15409":"part2 = data.iloc[:,6:7]\npart2","4b999a79":"comment = pd.concat([part2,part1],axis =1,ignore_index =True) \ncomment","0a116125":"comment.columns = ['Review', 'Liked']\ncomment","fb3ead4a":"import re\ncom = re.sub('[^a-zA-Z]', ' ', comment['Review'][1])\ncom","53136eb9":"# Conversion all letters to lower case \ncom = com.lower()\ncom","2d670f5e":"# Splitting word by word \ncom = com.split()\ncom","84350a4c":"# Loading stopwords\n\nimport nltk\nfrom nltk.corpus import stopwords\nstopwords_en = stopwords.words('english')\nprint(stopwords_en)","5668cf3e":"from nltk.stem.porter import PorterStemmer\nps = PorterStemmer()","77caad57":"# Cleaning the stop words\n# In here, we use set function because set is unordered and same element within set passes only one time.\ncom = [ps.stem(word) for word in com if not word in set(stopwords.words('english'))]\ncom","0a3823a7":"com = ' '.join(com)\ncom","2fa883dc":"result = []\nfor i in range(67529):\n    com = re.sub('[^a-zA-Z]', ' ', comment['Review'][i])\n    com = com.lower()\n    com = com.split()\n    com = [ps.stem(word) for word in com if not word in set(stopwords.words('english'))]\n    com = ' '.join(com)\n    result.append(com)","91cd781a":"result","8495282d":"from sklearn.feature_extraction.text import CountVectorizer\n\n### We take most used 2000 words \ncv = CountVectorizer(max_features=2000)\n\nX = cv.fit_transform(result).toarray()\nX","bc304b20":"y = comment.iloc[:,1].values\ny","a6bbad4b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","9d149608":"from sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(X_train, y_train)\n\ny_pred = gnb.predict(X_test)\ny_pred","3499c4bd":"from sklearn.metrics import confusion_matrix\n\ncm = confusion_matrix(y_test, y_pred)\ncm","95fea1d4":"**Feature Extraction (Bag of Words (BOW))**","3a3008a7":"**Regular Expression**\n\n**Removing alphanumeric, spelling and punctuation characters** ","357b1b3a":"## Machine Learning Part","0b53a95a":"# **NATURAL LANGUAGE PROCESSING (NLP)**","b5e671da":"### If you like it, please upvote :)","9b261556":"**Combining process**","3748e6f0":"### Making loop","3752d341":"## Cleaning the stop words","7cad448c":"**After data preprocessing, comment data set is obtained from data that is loaded from csv file.**\n\n**Hereafter, comment will be used in this kernel as data set.**","74403169":"## **CONCLUSION**","7adae60b":"**In this kernel, natural language processing has been explained.**","d239f66a":"My other kernels are here:\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/data-science-project\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/data-visualization-project\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/machine-learning-1-data-preprocessing\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/machine-learning-2-prediction-algorithms\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/machine-learning-3-classification-algorithms\n\nhttps:\/\/www.kaggle.com\/armagansarikey\/machine-learning-4-clustering-algorithms\n\nIf you have any question or suggest, I will be happy to hear it.","945d41d1":"* Natural language processing (NLP) is a branch of artificial intelligence that helps computers understand, interpret and manipulate human language.\n* It sits at the intersection of computer science, artificial intelligence, and computational linguistics.\n* NLP is important because it helps resolve ambiguity in language and adds useful numeric structure to the data for many downstream applications, such as speech recognition or text analytics. \n* NLP is used to analyze text, allowing machines to understand how human\u2019s speak. \n* This human-computer interaction enables real-world applications like automatic text summarization, sentiment analysis, topic extraction, named entity recognition, parts-of-speech tagging, relationship extraction, stemming, and more. \n* NLP is commonly used for text mining, machine translation, and automated question answering."}}