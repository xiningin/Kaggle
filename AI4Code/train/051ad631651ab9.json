{"cell_type":{"b272c1b6":"code","8ac338a6":"code","cbc5fddd":"code","864f26d2":"code","130adf0a":"code","bc4ce9bb":"code","c76a3ade":"code","91f38f5d":"code","2af25b93":"code","d9fc4d08":"code","f472d3c1":"code","03f20a6b":"code","a58ffcd2":"code","cd15f063":"code","c0039c94":"code","2c5118cd":"code","cd253fec":"code","d84476bd":"code","2e675ca2":"code","daa0c27a":"code","d3786447":"code","3c8fafc0":"code","f3547447":"code","302300d8":"code","a46f4e4f":"code","0d8f9659":"code","d4a41b6b":"code","09a5eae7":"code","0a20be1e":"code","981bec41":"code","d38928cb":"code","d307b886":"code","cb3c35d0":"code","3dc3c8bb":"code","1ae30c48":"code","06efd29b":"code","bbb8882c":"code","833a5915":"code","e3ee9a08":"code","e14a34b3":"code","54c6eb50":"code","1fd209dd":"code","74d1f121":"code","4c0e3309":"code","591d3a6e":"code","cd64fb23":"code","f1eb7f31":"code","d1f2eeb4":"code","704d73f6":"code","bfb273ee":"code","9516407c":"code","0b3bdb59":"code","fcbf183b":"code","a3995977":"code","4f50b2a6":"markdown","ee3039f4":"markdown","2cbf0acf":"markdown","46f6fa1e":"markdown","be9fe57f":"markdown","a966521d":"markdown","49bfd4c9":"markdown","f5eb881a":"markdown","452d04f4":"markdown","d9a4a79c":"markdown","48d675e1":"markdown","8adbfa87":"markdown","c2db30b0":"markdown","9247d590":"markdown","cdffe20c":"markdown"},"source":{"b272c1b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8ac338a6":"import pandas as pd\nsample_submission = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\ntest = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","cbc5fddd":"train[:10]","864f26d2":"train_id = train['Id']\ntest_id = test['Id']\ntrain.drop('Id',inplace = True, axis = 1)\ntest.drop('Id',inplace = True, axis = 1)","130adf0a":"train = train[train.GrLivArea < 4500]\ntrain.reset_index(drop = True, inplace = True)\noutliars = [30, 88, 462, 631, 1322]\ntrain.drop(train.index[outliars], inplace = True)\n#If you want to know why remove these values u can read kernels about EDA","bc4ce9bb":"#we don't need SalePrice so drop it\ntrain.drop('SalePrice', inplace=True, axis=1)\ndata_features = pd.concat((train.loc[:,'MSSubClass':'SaleCondition'],test.loc[:,'MSSubClass':'SaleCondition'])).reset_index(drop=True)","c76a3ade":"#first get the total missing values\ntotal = data_features.isnull().sum().sort_values(ascending=False)\ntotal = total[total>0]\npercent = total\/len(data_features)\npercent\nmissing_data = pd.concat((total,percent),axis=1,keys=['total','percent'])\nmissing_data","91f38f5d":"data_features.loc[(data_features['PoolQC'].notnull()),['PoolArea','PoolQC']]","2af25b93":"#The code below just for a simple look\na = data_features.loc[data_features['MiscFeature'].notnull(),'MiscFeature']\ndata_features.loc[data_features['MiscFeature'].notnull(),'MiscFeature'].value_counts()","d9fc4d08":"a = data_features.loc[data_features['Alley'].notnull(),'Alley']\ndata_features.loc[data_features['Alley'].notnull(),'Alley'].value_counts()","f472d3c1":"a = data_features.loc[data_features['Fence'].notnull(),'Fence']\ndata_features.loc[data_features['Fence'].notnull(),'Fence'].value_counts()","03f20a6b":"data_features['FireplaceQu'].groupby([data_features['Fireplaces'],data_features['FireplaceQu']]).count()","a58ffcd2":"data_features.groupby('Neighborhood')['LotFrontage'].mean()","cd15f063":"plt.figure(figsize=(16,9))\nplt.plot(data_features['LotArea'], data_features['LotFrontage'])","c0039c94":"x = data_features.loc[(data_features['LotArea'].notnull()), 'LotArea']\ny = data_features.loc[(data_features['LotFrontage'].notnull()), 'LotFrontage']\nt = (x<25000) & (y<150)\ncoef = np.polyfit(x[t], y[t],1)\nformula = np.poly1d(coef)\npoly_y = formula(data_features['LotArea'])\ncondition_frontage = (data_features['LotFrontage'].isnull())\ndata_features.loc[condition_frontage,'LotFrontage'] = formula(data_features.loc[condition_frontage,'LotArea'])\n#use neighborhood to fill\n#data_features['LotFrontage'] = data_features.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.mode()[0]))","2c5118cd":"data_features['MSSubClass'].groupby((data_features['GarageCond'],data_features['GarageQual'])).count()\n#These two variables have positive correlation.So we can use the mode to fill the missing in GarageCond and GarageQual. ","cd253fec":"data_features.loc[(data_features['GarageCond'].isnull() & data_features['GarageQual'].notnull()), ['GarageQual']]\n#it seems like they have the same missing values.\n#the same for the two below\n#so fill them all with NONE","d84476bd":"data_features.loc[(data_features['GarageCond'].isnull() & data_features['GarageYrBlt'].notnull()), ['GarageYrBlt']]","2e675ca2":"data_features.loc[(data_features['GarageCond'].isnull() & data_features['GarageFinish'].notnull()), ['GarageFinish']]","daa0c27a":"data_features.loc[(data_features['GarageYrBlt'].isnull() & data_features['GarageType'].notnull())\n                  ,['GarageYrBlt','GarageType','GarageCond','GarageFinish','GarageQual']]\n#so we use the value of GarageType to fill the other four variables\ngarage_var = ['GarageYrBlt','GarageType','GarageCond','GarageFinish','GarageQual']\ncondition1 = (data_features['GarageYrBlt'].isnull() & data_features['GarageType'].notnull())\nfor col in garage_var:\n    data_features.loc[condition1,col] = data_features[(data_features['GarageType'] == 'Detchd')][col].mode()[0]\n#Note that we still have 156 missing values to fill for all 5 variables","d3786447":"#handle them in the same way as garage\nmissing_data[11:]","3c8fafc0":"data_features[(data_features['BsmtFinType1'].isnull() & data_features['BsmtCond'].notnull())]\n#We detect that all bsmt variables have 79 common missing values. Obviously these data mean there are no basements in these houses.\n#So we use the NONE to fill them like the garage variables.","f3547447":"data_features[(data_features['BsmtFinType1'].notnull() & data_features['BsmtExposure'].isnull())][\n    ['BsmtCond','BsmtExposure','BsmtQual','BsmtFinType1','BsmtFinType2']]","302300d8":"data_features['MSSubClass'].groupby((data_features['BsmtQual'],data_features['BsmtExposure'])).count()","a46f4e4f":"data_features['MSSubClass'].groupby((data_features['BsmtCond'],data_features['BsmtExposure'])).count()\n#When Con is TA and Qual is Gd we shuold choose No to fill the missing value in 'BsmtExposure'","0d8f9659":"condition2 = (data_features['BsmtFinType1'].notnull() & data_features['BsmtExposure'].isnull())\ndata_features.loc[condition2,'BsmtExposure'] = 'No'","d4a41b6b":"data_features[(data_features['BsmtFinType1'].notnull() & data_features['BsmtCond'].isnull())][\n    ['BsmtCond','BsmtExposure','BsmtQual','BsmtFinType1','BsmtFinType2']]\n","09a5eae7":"data_features['MSSubClass'].groupby((data_features['BsmtExposure'],data_features['BsmtCond'])).count()\n#The proportion of TA is larger than other values so use TA to fill 'BsmtCond'","0a20be1e":"condition3 = (data_features['BsmtFinType1'].notnull() & data_features['BsmtCond'].isnull())\ndata_features.loc[condition3,'BsmtCond'] = 'TA'","981bec41":"data_features[(data_features['BsmtFinType1'].notnull() & data_features['BsmtQual'].isnull())][\n    ['BsmtCond','BsmtExposure','BsmtQual','BsmtFinType1','BsmtFinType2']]","d38928cb":"data_features['MSSubClass'].groupby((data_features['BsmtExposure'],data_features['BsmtQual'])).count()","d307b886":"data_features['MSSubClass'].groupby((data_features['BsmtCond'],data_features['BsmtQual'])).count()","cb3c35d0":"#Fill with TA again\ncondition4 = (data_features['BsmtFinType1'].notnull() & data_features['BsmtQual'].isnull())\ndata_features.loc[condition4,'BsmtQual'] = data_features.loc[(data_features['BsmtExposure'] == 'No'),'BsmtQual'].mode()[0]","3dc3c8bb":"#The last one \ncondition5 = (data_features['BsmtFinType2'].isnull() & data_features['BsmtFinType1'].notnull())\ndata_features[condition5][['BsmtFinType1','BsmtFinType2']]\n#From the data description ","1ae30c48":"data_features['MSSubClass'].groupby((data_features['BsmtFinType1'],data_features['BsmtFinType2'])).count()\n#I guess even if Type1 is good , the Type 2 is more likely to be Unf. So fill 'BsmtFinType2' by Unf\ndata_features.loc[condition5, 'BsmtFinType2'] = 'Unf'","06efd29b":"bsmt_var = ['BsmtCond','BsmtExposure','BsmtQual','BsmtFinType1','BsmtFinType2']\ngarage_var = ['GarageType','GarageCond','GarageFinish','GarageQual']\nNONE_var = ['PoolQC','MiscFeature','Alley','Fence','FireplaceQu']\nmissing_data = data_features.isnull().sum().sort_values(ascending = False)\nmissing_data = missing_data[missing_data > 0]\nmissing_data","bbb8882c":"for col in bsmt_var, garage_var,NONE_var:\n    data_features[col] = data_features[col].fillna('NONE')\ndata_features['GarageYrBlt'] = data_features['GarageYrBlt'].fillna(0)","833a5915":"data_features['LotFrontage']","e3ee9a08":"missing_data = data_features.isnull().sum().sort_values(ascending = False)\nmissing_data = missing_data[missing_data > 0]\nmissing_data","e14a34b3":"condition6 = (data_features['MasVnrType'].isnull() & data_features['MasVnrArea'].notnull())\ndata_features.loc[condition6,['MasVnrType','MasVnrArea']]","54c6eb50":"data_features['MasVnrArea'].groupby(data_features['MasVnrType']).describe()","1fd209dd":"data_features['MasVnrArea'].groupby(data_features['MasVnrType']).median()","74d1f121":"sns.boxplot(data_features['MasVnrType'],data_features['MasVnrArea'])\n#Maybe fill it with 'Stone' is more reasonable.\n#Something strange here. None means no masonry but there still several values. May theuy are outliars that I should remove?","4c0e3309":"a = data_features[(data_features['MasVnrType'] == 'None')]['MasVnrArea']\na[a>0]","591d3a6e":"data_features.loc[condition6,'MasVnrType'] = 'Stone'\ndata_features['MasVnrType'] = data_features['MasVnrType'].fillna('None')\ndata_features['MasVnrArea'] = data_features['MasVnrArea'].fillna(0)","cd64fb23":"data_features['MSZoning'].groupby([data_features['MSSubClass'],data_features['MSZoning']]).count()\ndata_features['MSZoning'] = data_features['MSZoning'].groupby(data_features['MSSubClass']).transform(lambda x:x.fillna(x.mode()[0]))","f1eb7f31":"missing_data = data_features.isnull().sum().sort_values(ascending = False)\nmissing_data = missing_data[missing_data > 0]\nmissing_data","d1f2eeb4":"NA_for_0 = ['BsmtFinSF1','BsmtFinSF2','BsmtUnfSF','TotalBsmtSF','BsmtFullBath','BsmtHalfBath',\n            'GarageArea', 'GarageCars','MasVnrArea']\nfor col in NA_for_0:\n    data_features[col] = data_features[col].fillna(0)","704d73f6":"common_for_NA = ['Exterior1st','Exterior2nd','SaleType','Electrical','KitchenQual']\nfor col in common_for_NA:\n    data_features[col].fillna(data_features[col].mode()[0], inplace = True)","bfb273ee":"data_features['Functional'] = data_features['Functional'].fillna('Typ')\ndata_features['Utilities'] = data_features['Utilities'].fillna('None')","9516407c":"missing_data = data_features.isnull().sum().sort_values(ascending = False)\nmissing_data = missing_data[missing_data > 0]\nmissing_data","0b3bdb59":"#\u601d\u8003\u5230\u6709\u4e09\u4e2a\u7f3a\u5931\u503c\u4e0d\u91cd\u5408\u7684\u7684\u65f6\u5019 \u5e94\u8be5\u600e\u4e48\u517b\u53bb\u586b\u5145 \u6216\u8005\u8bf4 bsmt\u76f8\u5173\u7684\u53d8\u91cf \u5e94\u8be5\u4ee5\u54ea\u4e00\u4e2a\u4e3a\u57fa\u51c6\u53bb\u8865\u5145\u7f3a\u5931\u503c","fcbf183b":"data_features[(data_features['BsmtCond'].isnull() & data_features['BsmtFinType1'].notnull())][['BsmtQual','BsmtFinType1','BsmtFinType2']]","a3995977":"condition1 = (data_features['BsmtCond'].isnull() & data_features['BsmtExposure'].notnull())\ndata_features[condition1]","4f50b2a6":"## MSZoning\nTHis variable has connection with MSSubclass, so before filling we observe and use groupby to fill.","ee3039f4":"## Brother MasVnr","2cbf0acf":"We observe the variables one by one.\n\nFirst the PoolQV. I notice that some kernels fill the NAN with the area of the pool . But you can see that the PoolQC doesn't have positive connection. So we just fill it with NONE.","46f6fa1e":"For left three variables.","be9fe57f":"## Basement variables","a966521d":"## now we will fill bsmt & garage variables with NONE","49bfd4c9":"## LotFrontage\nTwo methods: \n\n1.LotFrontage means the distance from the street. So we can use the neighborhood's data to fill it. \n\n2.Use the connection with 'LotArea' and the poly to get the values of the LotFrontage. \n\nI try both methods and will choose the better one in the final try.\n","f5eb881a":"## None and 0 \nFor the rest of the variables , I use None or 0 to fill them","452d04f4":"## Before reading\nHi, I'm a novice in data science and this is my first kaggle competition.\nI spend some hours to write this kernel because I want to share my ideas with others.\n\nIf you find mistakes on method,code or spelling. Please comment below.(I'm not native English speaker so please correct my English :)\n\nI am still working on the rest parts and I want to meet some teammates(I hope better than me...)to join other active competions. I'm a graduate student and I have lots of time on it so if you need a teammate PLEASE comment! Thank you!","d9a4a79c":"## Garage variables\nNext six variables are about garage. So we can handle them together.","48d675e1":"For MiscFeature,Alley,Fence,they seem like they have no connection with other variables. And from the data description we know the NA means NONE for this facility.So we can use NONE to fill these variables\n\nThe variable FireplaceQu may have correlation with the Fireplaces, but from the groupby observation it's not true.So we fill it with NONE too.","8adbfa87":"First we drop the \"ID\" and remove the outliars from the dataset","c2db30b0":"# Handling the missing values\nThis part is about how to handle the missing values. \nHaving read lots of kernels about missing values, I try to find the best way for understanding the logic to handle the missing values","9247d590":"## Handle the first five variables\nOk we have get the data we want.First we observe the all missing values and the their percentage. ","cdffe20c":"Do the same detection."}}