{"cell_type":{"a9ad0295":"code","a50bc59e":"code","f1517329":"code","045b76df":"code","c548e4ff":"code","bf14ca67":"code","a0460623":"code","7ae05135":"code","68e829a2":"code","a01d83f4":"code","6d2bcb3c":"code","e2303988":"code","d526f4f2":"code","6483c616":"code","c0bc8747":"code","6f0e9f57":"code","3d289f6b":"code","fe8b981a":"code","6325460e":"code","b8390be6":"code","a942f593":"code","f24da2a4":"code","23d8f608":"code","df6a75f9":"code","1670d0e5":"code","2f3f4bed":"code","322eff17":"code","2921bf42":"code","1043273c":"code","b2ade351":"code","ddc122d5":"code","f3796c91":"code","c325f233":"code","151d531e":"code","c1630922":"code","dcb80e24":"code","b673c1fa":"code","0ef0dc9f":"code","2519c7bd":"code","f7d865fe":"code","7cb8857a":"code","c20dc002":"code","f9ff2dd3":"code","17640fca":"code","69b11762":"code","12869916":"code","fed20191":"code","c587ac13":"code","f6429cdc":"code","4d3ee0d9":"code","f521b294":"code","c440c291":"code","d980f875":"code","f111e739":"markdown","9ba7babd":"markdown","f53c5aac":"markdown","78b79ed3":"markdown","b60f4605":"markdown","77e88c62":"markdown","d26bce68":"markdown","982b49ab":"markdown","e99a7b19":"markdown","4396be87":"markdown","4c29fa42":"markdown","7ca9bfb2":"markdown","c9b13d98":"markdown","7efe63f1":"markdown","415cf7a7":"markdown","93b049ab":"markdown","729244f7":"markdown","81b4514d":"markdown","42721aeb":"markdown","70d1f056":"markdown","5cd0c258":"markdown","c9a03162":"markdown","af70feef":"markdown","c5fcb5a5":"markdown","5d5ae211":"markdown"},"source":{"a9ad0295":"import numpy as np\nimport pandas as pd\npd.options.mode.chained_assignment = None  # default='warn'\nimport seaborn as sns\nfrom matplotlib.pyplot import plot\nfrom matplotlib import pyplot as plt\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom pandas.tseries.offsets import *\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a50bc59e":"df = pd.read_csv(\"..\/input\/daily-temperature-of-major-cities\/city_temperature.csv\")\ndf = df[(df['Year'] >= 1995) & (df['Year'] < 2020)].reset_index().drop(columns = ['index']) # Extract data 1995 - 2019\ndf = df[(df['AvgTemperature'] != -99)].reset_index().drop(columns = ['index']) # Drop invalid data\ndf['AvgTemperature'] = (df['AvgTemperature'] - 32) * (5\/9) # Fahrenheit to Celsius\ndf","f1517329":"df['AvgTemperature'].isnull().values.any()","045b76df":"# Yearly Temperature Dataframe\navgTemp_Reg = pd.DataFrame(df.groupby(['Year', 'Region'])['AvgTemperature'].mean()).reset_index() # Average Temperature by Year and Region\navgTemp_Reg.index = pd.to_datetime(avgTemp_Reg['Year'], format='%Y', errors='coerce').dropna().drop(columns = ['Year']) # Convert to datetime index\navgTemp_Reg = avgTemp_Reg.drop(columns = ['Year']) # Drop unnecessary column\navgTemp_Reg","c548e4ff":"# Yearly Average Temperature Trend by Continental (1995 - 2019)\nuniqueReg = pd.DataFrame(avgTemp_Reg.Region.unique(), columns=['Region'])\nflg, ax = plt.subplots(1, figsize=(10,25))\nplt.title('Yearly Average Temperature Trend by Continental (1995 - 2019)')\nplt.xlabel('Year')\nplt.ylabel('Degree (Celsius)')\nplt.grid()\n\nrow = 0\nfor v in range(len(uniqueReg)):\n    globals()['reg%s' % v] = np.where(uniqueReg['Region'][row] == avgTemp_Reg['Region'])\n    row += 1\n    for value in globals()['reg%s' % v]:\n        globals()['reg%s' % v] = avgTemp_Reg.iloc[value, :].drop(columns=['Region'])\n        globals()[uniqueReg.iloc[v, 0]] = globals()['reg%s' % v]\n        plot(globals()[uniqueReg.iloc[v, 0]], label=uniqueReg.iloc[v, 0], marker='^')\n\nplt.legend(loc=2, ncol=2, prop={'size': 10}, frameon=True, shadow=True)\nplt.show()","bf14ca67":"middleEast = df[df['Region'] == 'Middle East']\nmiddleEast = middleEast.groupby(['Country', 'Year'])['AvgTemperature'].mean().reset_index()\nmiddleEast","a0460623":"middleEast['IncreaseP'] = None\n# Calculate Increase(Decrease) Rate per year\nfor v in range(len(middleEast)):\n    if middleEast.iloc[v, 1] == 1995:\n        middleEast['IncreaseP'][v] = None\n\n    else:\n        if middleEast.iloc[v, 1] - middleEast.iloc[v-1, 1] == 1: # Year Validation\n            if middleEast.iloc[v, 0] == middleEast.iloc[v-1, 0]: # Country Validation\n                middleEast['IncreaseP'][v] = round(((middleEast.iloc[v, 2] - middleEast.iloc[v-1, 2]) \/ middleEast.iloc[v-1, 2]) * 100, 2).astype(float)\n            else:\n                print(v) # Print Error Line for Invalid Country Match\n\n        elif middleEast.iloc[v-1, 1] == 1995: # Adjustment for Missing Year\n            middleEast['IncreaseP'][v] = round(((middleEast.iloc[v, 2] - middleEast.iloc[v-1, 2]) \/ middleEast.iloc[v-1, 2]) * 100, 2).astype(float)\n\n        else:\n            print(v) # Print Error Line for Invalid Year Match\n            \nmiddleEast","7ae05135":"print(middleEast[middleEast['Country'] == 'Turkey']['IncreaseP'].mean())\nmiddleEast[middleEast['Year'] == 2018].sort_values(by='IncreaseP', ascending=False)","68e829a2":"middleEast[middleEast['Country'] == 'Turkey'].sort_values(by='AvgTemperature', ascending=False).head(5)","a01d83f4":"# Turkey's Climate Change\nturkey = df[df['Country'] == 'Turkey'].reset_index().drop(columns = ['index'])\nturkey_by_month = pd.pivot_table(data=turkey, index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\nturkey_by_month","6d2bcb3c":"# Heatmap Plot\nplt.figure(figsize=(15,6))\nsns.heatmap(data=turkey_by_month, cmap='coolwarm', annot=True, fmt=\".1f\", annot_kws={'fontsize':12})\nplt.title(\"Turkey Climate Change\")\nplt.tight_layout()","e2303988":"# Middle East Climate Change for References\nmiddleEast_by_month = pd.pivot_table(data=df[df['Region'] == 'Middle East'], index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\n\nplt.figure(figsize=(15,6))\nsns.heatmap(data=middleEast_by_month, cmap='coolwarm', annot=True, fmt='.1f', annot_kws={'fontsize': 12})\nplt.title('Middle East Climate Change')\nplt.tight_layout()","d526f4f2":"# Middle East Fall Season Trend Line\nmiddle_east_month_avg = pd.DataFrame(df[df['Region'] == 'Middle East']).groupby(['Year', 'Month'])['AvgTemperature'].mean().reset_index()\n\nfig, ax = plt.subplots()\nfig.set_size_inches(15, 5)\nax = plt.subplot(1, 3, 1)\nax2 = plt.subplot(1, 3, 2)\nax3 = plt.subplot(1, 3, 3)\nmiddle_east_sep = middle_east_month_avg[middle_east_month_avg['Month'] == 9].drop(columns = 'Month').set_index(['Year'])\nmiddle_east_oct = middle_east_month_avg[middle_east_month_avg['Month'] == 10].drop(columns = 'Month').set_index(['Year'])\nmiddle_east_nov = middle_east_month_avg[middle_east_month_avg['Month'] == 11].drop(columns = 'Month').set_index(['Year'])\n\nsns.regplot(x=middle_east_sep.index, y=middle_east_sep.AvgTemperature, data=middle_east_sep, fit_reg=True, ax=ax).set_title('Sep');\nsns.regplot(x=middle_east_oct.index, y=middle_east_oct.AvgTemperature, data=middle_east_oct, fit_reg=True, ax=ax2).set_title('Oct');\nsns.regplot(x=middle_east_nov.index, y=middle_east_nov.AvgTemperature, data=middle_east_nov, fit_reg=True, ax=ax3).set_title('Nov');\nsns.despine()","6483c616":"# Plot Correlation Matrix for Certain Region\n# corrDataFrame creates Correlation Matrix Dataframe for Region\ndef corrDataFrame(region):\n    # Create Dummy Dataframe for the Region\n    dummy_data = pd.pivot_table(data=df[df['Region'] == region], index=['Year'], columns=['Country'], values=['AvgTemperature'], aggfunc='mean')\n    dummy_data['Region Avg'] = pd.DataFrame(df[df['Region'] == region].groupby(['Year'])['AvgTemperature'].mean())\n    dummy_data = dummy_data.fillna(dummy_data.mean())\n\n    # Create Correlation Matrix Dataframe for the Region\n    a = dummy_data.corr().reset_index()\n    a.columns = a.columns.droplevel(0) # Remove Multiindex\n    \n    # Rename Column Names\n    dummy = a.columns.to_series()\n    dummy.iloc[1] = 'Country'\n    dummy.iloc[-1] = str(region) + ' Avg'\n    a.columns = dummy\n    \n    # Set Country Column as Index\n    a = a.iloc[:, 1:]\n    a.loc[a.tail(1).index, 'Country'] = str(region) + ' Avg'\n    a.set_index('Country', inplace=True)\n    a = round(a, 2)\n    \n    # Delete Dummy Data\n    del dummy\n    del dummy_data\n\n    return a\n\n\n# corrMatrix plots Correlation Matrix for Region\ndef corrMatrix(region):\n    plt.figure(figsize=(15,15))\n    fig = sns.heatmap(region, annot=True)\n    fig.set_xlabel('')\n    fig.set_ylabel('')\n    plt.title('Correlation Matrix')\n    # Show Correlation Matrix\n    plt.show()","c0bc8747":"middleEast_Corr = corrDataFrame('Middle East')\ncorrMatrix(middleEast_Corr)","6f0e9f57":"# Delete Unused Dataframe for Memory Allocation\ndel uniqueReg\ndel middleEast\ndel turkey_by_month\ndel middleEast_by_month\ndel middle_east_month_avg\ndel middleEast_Corr","3d289f6b":"# Create Region-Specific DataFrame & Calculate Growth Rate per Year\ndef growth_rate_by_region(region):\n    dummy = df[df['Region'] == region]\n    dummy = dummy.groupby(['Country', 'Year'])['AvgTemperature'].mean().reset_index()\n    dummy['IncreaseP'] = None\n    \n    for v in range(len(dummy)):\n        if dummy.iloc[v, 1] == 1995:\n            dummy['IncreaseP'][v] = None\n        \n        else:\n            # For when year's in order\n            if dummy.iloc[v, 1] - dummy.iloc[v-1, 1] == 1: # Year Validation\n                if dummy.iloc[v, 0] == dummy.iloc[v-1, 0]: # Country Validation\n                    dummy['IncreaseP'][v] = round(((dummy.iloc[v, 2] - dummy.iloc[v-1, 2]) \/ dummy.iloc[v-1, 2]) * 100, 2).astype(float)\n                \n                else:\n                    print(v) # Print error line for possible invalid country match\n                    print(pd.DataFrame(dummy.iloc[v:v+3, 0:2])) # Show data near error line\n                    \n            # For when year's not in order, or when there's a missing year in-between\n            elif dummy.iloc[v-1, 1] == 1995: # Adjustment for missing year\n                dummy['IncreaseP'][v] = round(((dummy.iloc[v, 2] - dummy.iloc[v-1, 2]) \/ dummy.iloc[v-1, 2]) * 100, 2).astype(float)\n                \n            # For when there's an invalid year data\n            else:\n                print(v) # Print error line for possible invalid year match\n                print(pd.DataFrame(dummy.iloc[v:v+3, 0:2])) # Show data near error line\n\n    return dummy","fe8b981a":"saGrowthRate = growth_rate_by_region('South\/Central America & Carribean')\nsaGrowthRate.sample(6) # South\/Central America & Carribean DataFrame with Yearly Growth Rate","6325460e":"saGrowthRate[saGrowthRate['Country'] == 'Guyana'] # Data Integrity Check for Guyana","b8390be6":"saGrowthRate[saGrowthRate['Country'] == 'Haiti'] # Data Integrity Check for Haiti","a942f593":"saGrowthRate.sort_values(by='IncreaseP', ascending=False).head(10)","f24da2a4":"sa_Corr = corrDataFrame('South\/Central America & Carribean')\ncorrMatrix(sa_Corr)","23d8f608":"# Top 5 Correlation Countries\npd.DataFrame(sa_Corr.iloc[:, -1]).sort_values(by='South\/Central America & Carribean Avg', ascending=False).head(6)","df6a75f9":"# Plot Yearly Temperature Trend of Top 3 Correlation Countries and South America\nax = plt.subplot(1, 4, 1)\nax2 = plt.subplot(1, 4, 2)\nax3 = plt.subplot(1, 4, 3)\nax4 = plt.subplot(1, 4, 4)\n\nsaGrowthRate[saGrowthRate['Country'] == 'Colombia'].plot(x='Year', y='AvgTemperature', legend=None, ax=ax, figsize=(20, 5), title='Colombia');\nsaGrowthRate[saGrowthRate['Country'] == 'Equador'].plot(x='Year', y='AvgTemperature', legend=None, ax=ax2, figsize=(20, 5), title='Equador');\nsaGrowthRate[saGrowthRate['Country'] == 'Dominican Republic'].plot(x='Year', y='AvgTemperature', legend=None, ax=ax3, figsize=(20, 5), title='Dominican Republic');\nsaGrowthRate.groupby(['Year'])['AvgTemperature'].mean().plot(x='Year', y='AvgTemperature', legend=None, ax=ax4, figsize=(20, 5), title='South America Avg');","1670d0e5":"# Monthly Trend Analysis\ndef monthly_pivot(region):\n    dummy = df[df['Country'] == region].reset_index().drop(columns = ['index'])\n    monthly_pivot = pd.pivot_table(data=dummy, index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\n    return monthly_pivot\n\ncolombiaMonthly = monthly_pivot('Colombia')\ncolombiaMonthly","2f3f4bed":"# Heatmap Plot\ndef heatmap_show(region, arg):\n    plt.figure(figsize=(15,6))\n    sns.heatmap(data=region, cmap='coolwarm', annot=True, fmt=\".1f\", annot_kws={'fontsize':12})\n    plt.title(str(arg) + \" Climate Change\")\n    plt.tight_layout()\n\nheatmap_show(colombiaMonthly, 'Colombia')","322eff17":"# Equador Monthly Trend\nequadorMonthly = monthly_pivot('Equador')\nequadorMonthly","2921bf42":"# Equador Heatmap\nheatmap_show(equadorMonthly, 'Equador')","1043273c":"equador_cities = df[df['Country'] == 'Equador'].groupby(['City', 'Year', 'Month'])['AvgTemperature'].mean().reset_index()\nequador_cities","b2ade351":"# Prior to analysis, make sure all cities have equal observances\nprint(df[df['Country'] == 'Equador']['City'].unique())","ddc122d5":"df[df['City'] == 'Guayaquil'].shape","f3796c91":"df[df['City'] == 'Quito'].shape","c325f233":"from calendar import monthrange\n\n# Missing Value Counts\ndef find_missing_values_country_all(country):\n    country = df[df['Country'] == country][['Country', 'City', 'Month', 'Day', 'Year', 'AvgTemperature']]\n    cities = country['City'].unique()\n    \n    city_list = []\n    year_list = []\n    month_list = []\n    diff_list = []\n    \n    for city in range(len(cities)):        \n        city = str(cities[city])\n        \n        for year in range(1995, 2020):\n        \n            for month in range(1, 13):\n                monthVal = len(country[(country['City'] == city) & (country['Year'] == year) & (country['Month'] == month)])\n                monthRange = int(monthrange(year, month)[1])\n                diff = monthRange - monthVal\n            \n                city_list.append(city)\n                year_list.append(year)\n                month_list.append(month)\n                diff_list.append(diff)\n            \n    missing_value_count = pd.DataFrame(list(zip(city_list, year_list, month_list, diff_list)), columns = ['City', 'Year','Month', 'Missing Value Count'])\n    return missing_value_count","151d531e":"equador_missing_values = find_missing_values_country_all('Equador')\nequador_missing_values","c1630922":"equador_missing_values[(equador_missing_values['City'] == 'Guayaquil') &  (equador_missing_values['Missing Value Count'] > 5)].sort_values(by='Missing Value Count', ascending=False)","dcb80e24":"equador_missing_values[(equador_missing_values['City'] == 'Quito') &  (equador_missing_values['Missing Value Count'] > 5)].sort_values(by='Missing Value Count', ascending=False)","b673c1fa":"equador_missing_values[equador_missing_values['City'] == 'Quito'].groupby(['Year'])['Missing Value Count'].sum()","0ef0dc9f":"# Compare Each City's Monthly Average Temperature BEFORE Year 2013\ndf[(df['City'] == 'Guayaquil') & (df['Year'] < 2013)].groupby(['Month'])['AvgTemperature'].mean()","2519c7bd":"df[(df['City'] == 'Quito') & (df['Year'] < 2013)].groupby(['Month'])['AvgTemperature'].mean()","f7d865fe":"# 1. Calculate Growth Rate of Monthly Temperature in Guayaquil\nguayaquil_monthly = df[(df['City'] == 'Guayaquil') & (df['Year'] >= 2012)].reset_index().drop(columns = ['index'])\nguayaquil_monthly = pd.pivot_table(data=guayaquil_monthly, index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\nguayaquil_monthly","7cb8857a":"monthly_growth_rate = []\n\nfor v in range(0, len(guayaquil_monthly.columns)-1):\n    li = (guayaquil_monthly.iloc[:, v+1] - guayaquil_monthly.iloc[:, v]) \/ guayaquil_monthly.iloc[:, v]\n    monthly_growth_rate.append(li)\n    \nguayaquil_growth_rate = pd.DataFrame(monthly_growth_rate).T\nguayaquil_growth_rate.columns = range(2013, 2020)\nguayaquil_growth_rate","c20dc002":"# 2. Apply Growth Rate of Temperature in Guayaquil to Quito\nquito_monthly = df[(df['City'] == 'Quito')].reset_index().drop(columns = ['index'])\nquito_monthly = pd.pivot_table(data=quito_monthly, index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\nquito_monthly","f9ff2dd3":"quito_monthly_2013 = quito_monthly.iloc[:, 17:]\nquito_monthly_2013['2015'] = None\nquito_monthly_2013['2016'] = None\nquito_monthly_2013['2017'] = None\nquito_monthly_2013['2018'] = None\nquito_monthly_2013['2019'] = None\n\nfor v in range(1, len(quito_monthly_2013.columns)):\n    quito_monthly_2013.iloc[:, v] =  quito_monthly_2013.iloc[:, v-1] * (1 + guayaquil_growth_rate.iloc[:, v-1])\n\nquito_monthly_2013","17640fca":"# Create A New Quito Dataframe with Adjusted Values\nquito_monthly_new = pd.concat((quito_monthly,quito_monthly_2013),sort=False).groupby(level=0).last()\nquito_monthly_new","69b11762":"# Show Heatmap for Quito\nheatmap_show(quito_monthly_new, 'Quito')","12869916":"# 3. Create A New Equador Country Dataframe Using Updated Values\nguayaquil_monthly_all = df[(df['City'] == 'Guayaquil')].reset_index().drop(columns = ['index'])\nguayaquil_monthly_all = pd.pivot_table(data=guayaquil_monthly_all, index='Month', columns='Year', values='AvgTemperature', aggfunc='mean')\n\nquito_monthly_new.columns = guayaquil_monthly_all.columns # Match column names\nequadorMonthly_new = pd.DataFrame(columns = equadorMonthly.columns, index = equadorMonthly.index)\nequadorMonthly_new = (guayaquil_monthly_all + quito_monthly_new) \/ 2\nequadorMonthly_new","fed20191":"# Validation\nprint(((guayaquil_monthly_all.iloc[3, 18] + quito_monthly_new.iloc[3, 18]) \/ 2) == equadorMonthly_new.iloc[3, 18])","c587ac13":"# 4. Now Visualize New Equador Dataset for Analysis\nheatmap_show(equadorMonthly_new, 'Equador')","f6429cdc":"# Before Adjustment\nax = plt.subplot(1, 2, 1)\nsaGrowthRate[saGrowthRate['Country'] == 'Equador'].plot(x='Year', y='AvgTemperature', legend=None, ax=ax, figsize=(20, 5), title='Equador Before Adjustment');\n\n# After Adjustment\nax2 = plt.subplot(1, 2, 2)\nequadorMonthly_new.mean().plot(legend=None, ax=ax2, figsize=(20, 5), title='Equador After Adjustment');","4d3ee0d9":"### Caution: This method is so heavy that it takes some time to load ###\n\n# Missing Value Counts for Entire Region\ndef find_missing_values_region(region):\n    countries = df[df['Region'] == region]['Country'].unique()   \n    region = pd.DataFrame(columns = ['Country', 'City', 'Year', 'Month', 'Missing Value Count'])\n  \n    for country in range(len(countries)):\n        dummy = find_missing_values_country_all(countries[country])\n        dummy['Country'] = str(countries[country])\n        \n        region = region.append(dummy)\n        \n    return region","f521b294":"south_america_all = find_missing_values_region('South\/Central America & Carribean')","c440c291":"south_america_all.groupby('Country')['Missing Value Count'].sum().sort_values(ascending = False)","d980f875":"south_america_all[(south_america_all['Country'] == 'Guyana')].groupby('Year')['Missing Value Count'].sum()","f111e739":"It looks like Quito has some missing values.<br>\nTherefore, I'll make a function that shows how many missing values there are in each city in each year\/month.","9ba7babd":"Gayana literally have only few data.\n","f53c5aac":"Quito has very few data since 2013, and it does not have any data since 2015.<br>\nBecause it literally does not have data, **filling up with mean IS NOT A GOOD IDEA.**<br><br>\nConsidering that Equador has only two cities (Guayaquil, Quito), and the temperature significantly went up since 2013,<br>\nit is possible that it's because of invalid data, and lack of data for Quito has caused the misunderstanding.","78b79ed3":"As for Guayaquil,<br>\nexcept for August 2004, the data looks promising that it has only few missing values.<br>\nThe global warming trend for Equador seems legitimate.\n\nBut it is possible that the other city, Quito, has more missing values.","b60f4605":"**- Preview of Data Adjustment for Entire South America Region<br><br>**\nTotal amount of days from 1995 to 2019 is 9,191 days.<br>\nI'll be looking at the countries that have missing values more than 10% of the total.<br>\nThat'll be Guyana, Bermuda, Haiti, Equador(which is already done), Suriname, and Peru.","77e88c62":"I'll be looking at all cities below to find out possible misleading countries.","d26bce68":"# - Preview for Middle East<br>\nCombined with several validation above, it turns out \"Turkey\" is the main cause that led \"Middle East\" to top the peak in 2018.<br>\nAccordingly, Turkey's climate change has become severe since 2010s.<br>\n<br><br>\nI'll be carefully looking at Turkey for a few more steps.","982b49ab":"# **- Middle East Climate Change Analysis**","e99a7b19":"Function shows three possible invalid data: 315th, 326th, 331st row.<br><br>\n\n315th and 326th rows show Guyana have incosistent yearly data.<br>\n331st row shows Haiti data has been collected since 1999.","4396be87":"# Lack Of Data For Quito Is The Cause!\n- Quito has ZERO\/VERY FEW data since 2013.\n- Guayaquil is always hotter place than Quito.\n- As Guayaquil is THE ONLY source since 2013, the country's average temperature goes insanely high, which is an absolute misunderstanding!<br><br>\nExactly, Guayaquil is always a hotter place than Quito.<br>\nWe have to manipulate the data to figure out a more promising output.<br><br>\nTherefore, I'll calculate growth rate of monthly temperature in Guayaquil,<br>\nthen multiply by that number for corresponding monthly data in Quito to fill up the missing values.<br>\nAfter that, I'll look into the new Equador data and see if it's still getting noticeably warmer.","4c29fa42":"# **- Equador Monthly Temperature Trend**<br><br>\nRegardless of month, every single season suddenly got so much warmer since 2013.<br>\nI'd like to look at it more deeply, by comparing cities to determine if the global warming trend applies nation-wide,<br>\nor it's just some cities that have driven the nation that much hot.","7ca9bfb2":"# **- Overview of South\/Central America & Carribean Continental**\nAccording to the graphs above, even though Colombia has the highest correlation,<br>\nit turns out Equador and Dominican Republic have more dramatic trends that lead South America continental to follow the uprising trend.<br><br>\n**Therefore, we'll be exclusively looking at Equador and Dominican Republic<br>\nso that we understand which factor has caused the extreme.**","c9b13d98":"# **- South\/Central America (Carribean) Climate Change Analysis**","7efe63f1":"# **- Ongoing Climate Change of Fall Season in Middle East**\n> > The heatmaps and  the trend line above tell us a lot more;<br>Turkey's fall season, and hence, the overall Middle East's fall season, (Sep - Nov) is getting warmer and warmer.","415cf7a7":"Both countries have some missing years, none of which result in invalid output though.<br>\nEach incosistent year is removed from calculation by setting \"None\" value.<br><br>\n\nWe're good to go!","93b049ab":"- 1. Guyana","729244f7":"# **- Summary of Middle East**\nCorrelation Matrix above shows that most countries have a strong proportional relationship with Middle East.<br>\nIn other words, All countries but Oman and Israel were getting warmer and, in return, Middle East have become one of the hottest continentals.\n\nOman has been actually getting cooler, but it lacks observation data in some years where the data have been filled with mean values.","81b4514d":"# - What Has Caused Equador To Be That Hot?\n\nTo answer the question, we'd have to look at city by city and determine the source.","42721aeb":"# - Data Adjustment For Entire South America And Revisualize The Trend","70d1f056":"# - Data Adjustment For Quito And Revisualize The Trend","5cd0c258":"After adjustment of missing values, Equador's weather doesn't seem to be going up that dramatically.<br>\nI'll also adjust South America's trend in total later.","c9a03162":"# **In-Depth Climate Change Trend Analysis**\nRaw Dataset Name: Daily Temperature of Major Cities<br>\nRaw Dataset Link: https:\/\/www.kaggle.com\/sudalairajkumar\/daily-temperature-of-major-cities","af70feef":"Unlike Middle East, information is mixed and hard to distinguish the main factor(country).<br>\nTherefore, we'll be looking at correlation matrix to find out which country has the most correlation.","c5fcb5a5":"# **- Overall Preview for All Continentals**\nMiddle East has significantly surpassed its global warming trend, topping the all-time year avg high in 2018.<br>\nThe rising trend seems worth noting, therefore I decided to dive into Middle East region exclusively.<br>\nBelow are to determine the \"main source\" that has caused the region to go up that high.","5d5ae211":"Oops, Quito does not have any data in certain year\/month.<br>\nLet's find out since when it starts lacking observances."}}