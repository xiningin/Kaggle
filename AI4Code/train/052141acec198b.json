{"cell_type":{"481def29":"code","e59a408b":"code","3eb2b741":"code","c21c2e2c":"code","26a7db35":"code","13213bb8":"code","6d6a338a":"code","750734af":"code","32c63c77":"code","05452a1a":"code","0ddb15ac":"code","6df91280":"code","9235f44f":"code","6a2aa52a":"code","131039bd":"code","90b3ef2a":"markdown","dfd9abb8":"markdown","ab1a2a83":"markdown"},"source":{"481def29":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\ntrain_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')\n \n# Any results you write to the current directory are saved as output.","e59a408b":"train_df.head()","3eb2b741":"train_df.isnull().sum()","c21c2e2c":"from sklearn.model_selection import train_test_split\n\nfrom sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import accuracy_score","26a7db35":"train,test = train_test_split(train_df, test_size=.25, random_state=75)","13213bb8":"train_y = train['label']\ntest_y = test['label']\n\ntrain_x = train.drop('label',axis=1)\ntest_x = test.drop('label',axis=1)","6d6a338a":"ada = AdaBoostClassifier()\nada.fit(train_x,train_y)\n\nada_pred = ada.predict(test_x)\n\nada_accu = accuracy_score(test_y,ada_pred)\nada_accu","750734af":"rf = RandomForestClassifier()\nrf.fit(train_x,train_y)\nrf_pred = rf.predict(test_x)\n\nrf_accuracy = accuracy_score(test_y,rf_pred)\nrf_accuracy","32c63c77":"gr = GradientBoostingClassifier()\ngr.fit(train_x,train_y)\ngr_pred = gr.predict(test_x)\n\ngr_accuracy = accuracy_score(test_y,gr_pred)\ngr_accuracy","05452a1a":"test_df.head()","0ddb15ac":"gr = GradientBoostingClassifier()\ngr.fit(train_x,train_y)\ngr_pred = gr.predict(test_df)\ngr_pred[:5]","6df91280":"index = test_df.index + 1","9235f44f":"df = pd.DataFrame({'ImageId':index, 'Label':gr_pred})","6a2aa52a":"df","131039bd":"df.to_csv(\"prediction.csv\", index = False)","90b3ef2a":"# Adaboost","dfd9abb8":"# RandomForest ","ab1a2a83":"# GradientBoost"}}