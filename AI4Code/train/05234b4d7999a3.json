{"cell_type":{"170d9789":"code","ca1152b4":"code","83796c88":"code","51e205d2":"code","06ad2083":"code","d78aa946":"code","12e37fe7":"code","4a324c7d":"code","a0bbf2ee":"code","ad586ffd":"code","ed4f06eb":"code","3fa83909":"code","0cea1379":"code","ebe23e6d":"code","7de5bddd":"code","f04eda69":"code","beb30aa2":"code","3d8d0a8e":"code","b19789d1":"markdown"},"source":{"170d9789":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca1152b4":"data=pd.read_excel(\"..\/input\/anz-synthesised-transaction-datasetxlsx\/ANZ synthesised transaction dataset.xlsx\")\ntmp=data.head()\n\n#We assume that a customer uses all the 'balance' he has over the 3 month period.The total 'amount' used by each customer can be approximated as his salary for three month period.","83796c88":"corr_age=list()\ncorr_gender=list()","51e205d2":"salary_data=data[['amount','customer_id']]","06ad2083":"salary={}\nfor key in list(salary_data['customer_id'].unique()):\n    bal=0\n    for i in list(data.index[data['customer_id'] == key]):\n        bal+=salary_data.iloc[i,0]\n    corr_age.append(data.loc[i,'age'])\n    corr_gender.append(data.loc[i,'gender'])\n    salary[key]=bal ","d78aa946":"#plotting salary vs cust_id for the dataset (3 months)\nfig = plt.figure() \nax = fig.add_axes([0,0,1,1])\nax.set_title('Salary info for 3 months')\nax.set_xlabel('Customer_id')\nax.set_ylabel('Salary')\nax.bar(salary.keys(),salary.values())\nax.set_xticks(np.asarray([i for i in range(len(salary.keys()))]))\nax.set_xticklabels(salary.keys(),rotation=90)\nplt.show()","12e37fe7":"salary_annual=salary.copy()\nfor key,val in salary_annual.items():\n    val=(val\/3)*12\n    salary_annual[key]=val\n    \n#salary_annual contains the annual salary of each customer","4a324c7d":"y=list(salary_annual.values())","a0bbf2ee":"#checking against age\nx_age=corr_age \nx_gender=corr_gender\nplt.title('Relation between age and salary')\nplt.xlabel('Age')\nplt.ylabel('Annual Salary')\nplt.scatter(x_age,y)\nplt.show()","ad586ffd":"#checking against gender\nfemale_total=0\nmale_total=0\nfor index in range(len(x_gender)):\n    if x_gender[index]=='F': female_total+=y[index]\n    else : male_total+=y[index]\nplt.title('Ratio of salary on the basis of gender')\nplt.pie([female_total,male_total],labels=['Female','Male'],colors=['pink','blue'],startangle=0)\nplt.show()","ed4f06eb":"modified_dataset=pd.DataFrame(np.asarray(x_age),columns=['age'])\nmodified_dataset['gender']=x_gender\nmodified_dataset['salary']=y\nmodified_dataset.describe()\nmodified_dataset['age']=(modified_dataset['age']-modified_dataset['age'].mean())\/modified_dataset['age'].std()\nmodified_dataset['salary']=(modified_dataset['salary']-modified_dataset['salary'].mean())\/modified_dataset['salary'].std()\n","3fa83909":"features_original=modified_dataset[['age','gender']]\nlabel=modified_dataset.iloc[:,-1].values","0cea1379":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder","ebe23e6d":"col_transformer=ColumnTransformer([('encoder',OneHotEncoder(),[1])],remainder='passthrough')\nfeatures=np.array(col_transformer.fit_transform(features_original),dtype=np.float32)\nfeatures=features[:,1:]\nfeatures=pd.DataFrame(features,columns=['gender','age'])\nfeatures['gender']=(features['gender']-features['age'].mean())\/features['gender'].std()\n#features=np.array(features)      \n","7de5bddd":"features_train,features_test,label_train,label_test=train_test_split(features,label,test_size=0.2)","f04eda69":"model=LinearRegression()\nmodel.fit(features_train,label_train)","beb30aa2":"label_train_pred=model.predict(features_train)\naccuracy_train=mean_squared_error(label_train,label_train_pred)\nprint('The training accuracy (MSE) is {}'.format(accuracy_train))","3d8d0a8e":"label_test_pred=model.predict(features_test)\naccuracy_test=mean_squared_error(label_test,label_test_pred)\nprint('The test accuracy (MSE) is {}'.format(accuracy_test))","b19789d1":"# Visualizing correlation between salary_annual and other attributes using scatter plot"}}