{"cell_type":{"9efe29fa":"code","8e5d92ea":"code","60ea8bb1":"code","0e91891d":"code","198d8d16":"code","119af378":"code","76d37fbe":"code","6c1ac742":"code","e0fadec5":"code","9360f56a":"code","8e571fa2":"code","62232852":"code","a4976cc7":"code","9211a6e8":"code","a3dedb3c":"code","89460fa0":"code","f7db1eb9":"code","b855ea11":"code","f1289a52":"code","6eed94c1":"code","8da0550a":"code","9f8c8880":"code","48ba1388":"code","d53317b4":"code","0ae8368f":"code","6276374a":"code","689a4e08":"code","31f0e087":"code","b05a6e96":"code","30b9ff16":"code","dafbbf67":"code","530e5c9c":"code","b5a3e2fc":"markdown","ec43b1d8":"markdown"},"source":{"9efe29fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\nfrom pathlib import Path\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n \nfrom sklearn.linear_model import LinearRegression, Lasso\n%matplotlib inline","8e5d92ea":"!head -n ..\/input\/sample_submission.csv","60ea8bb1":"train = pd.read_csv(\"..\/input\/train.csv\",index_col=0)\ntest = pd.read_csv(\"..\/input\/test.csv\",index_col=0)","0e91891d":"train.info()","198d8d16":"train.head()","119af378":"len(train[train['store_and_fwd_flag'] == 'N']) == len(train['store_and_fwd_flag'])\n","76d37fbe":"train['flag'] = np.where(train['store_and_fwd_flag']=='N', 0, 1)","6c1ac742":"test['flag'] = np.where(test['store_and_fwd_flag']=='N', 0, 1)","e0fadec5":"test.shape","9360f56a":"train.shape","8e571fa2":"test.head()","62232852":"train['pickup_datetime'] = pd.to_datetime(train.pickup_datetime) \n","a4976cc7":"test['pickup_datetime'] = pd.to_datetime(test.pickup_datetime) ","9211a6e8":"train['pickup_date'] = train['pickup_datetime'].dt.date \ntrain['pickup_time'] = train['pickup_datetime'].dt.time \ntrain['pickup_month'] = train['pickup_datetime'].dt.month \ntrain['pickup_hour'] = train['pickup_datetime'].dt.hour \ntrain['pickup_weekday'] = train['pickup_datetime'].dt.dayofweek\n \ntest['pickup_month'] = test['pickup_datetime'].dt.month \ntest['pickup_hour'] = test['pickup_datetime'].dt.hour \ntest['pickup_weekday'] = test['pickup_datetime'].dt.dayofweek","a3dedb3c":"train['dist_long'] = train['pickup_longitude'] - train['dropoff_longitude']\ntest['dist_long'] = test['pickup_longitude'] - test['dropoff_longitude']\n\ntrain['dist_lat'] = train['pickup_latitude'] - train['dropoff_latitude']\ntest['dist_lat'] = test['pickup_latitude'] - test['dropoff_latitude']\n\ntrain['dist'] = np.sqrt(np.square(train['dist_long']) + np.square(train['dist_lat']))\ntest['dist'] = np.sqrt(np.square(test['dist_long']) + np.square(test['dist_lat']))","89460fa0":"test.head()","f7db1eb9":"train.shape","b855ea11":"train.drop(['vendor_id'], axis = 1, inplace=True)\ntrain.drop(['store_and_fwd_flag'], axis = 1, inplace=True)\ntrain.drop(['pickup_datetime'], axis = 1, inplace=True)\ntrain.drop(['dropoff_datetime'], axis = 1, inplace=True)\ntrain.drop(['pickup_date'], axis = 1, inplace=True)\ntrain.drop(['pickup_time'], axis = 1, inplace=True)\n\n\n\ntest.drop(['vendor_id'], axis = 1, inplace=True)\ntest.drop(['store_and_fwd_flag'], axis = 1, inplace = True)\ntest.drop(['pickup_datetime'], axis = 1, inplace = True)\n","f1289a52":"train.head()","6eed94c1":"train.info()","8da0550a":"test.head()","9f8c8880":"test.info()","48ba1388":"X = train\nX.head()","d53317b4":"y = train['trip_duration']\ny.head() ;","0ae8368f":"X = train.drop(columns='trip_duration')\nX.head()","6276374a":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor(n_estimators=25, random_state=42, n_jobs=-1)","689a4e08":"from sklearn.model_selection import train_test_split, cross_val_score\nLoss = cross_val_score(rf, X, y, cv=5, scoring=\"neg_mean_squared_log_error\")","31f0e087":"RMSLE = np.sqrt(- Loss)\nRMSLE","b05a6e96":"rf.fit(X,y)","30b9ff16":"pred = rf.predict(test)","dafbbf67":"submit = pd.read_csv('..\/input\/sample_submission.csv')\narr_id = submit['id']\nC1 = pd.DataFrame({'id': arr_id, 'trip_duration': pred})\nC1.head()","530e5c9c":"C1.to_csv(\"to-submit.csv\", index=False)","b5a3e2fc":"# Chargement de la Data & Analyse exploiratoire\n","ec43b1d8":"## Extraction de la distance"}}