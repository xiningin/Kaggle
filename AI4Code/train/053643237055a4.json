{"cell_type":{"90d3aa20":"code","7929ea9a":"code","c0602b92":"code","b0839745":"code","6e1e1bc1":"code","8d3acd40":"code","fdae87e2":"code","17abb3c0":"code","fa90ec1b":"code","e678cb55":"code","58d3f4e2":"code","5fe6e046":"code","c47179da":"code","f335c811":"code","01d7cac5":"code","bb0e3a1e":"code","2759c74f":"code","68a2ae5e":"code","d6550b35":"code","b602e0f7":"code","94dfdfe4":"code","f12b4bfb":"code","9c0243cd":"code","8ffc8ca3":"code","e85c7bee":"code","af8cc7d5":"code","84975138":"code","74c0a7d3":"code","782747d2":"code","52cb9639":"code","029fe8f3":"code","844f4cbe":"code","2be644de":"code","f0fc0ca9":"code","63d354c8":"code","cab7de7d":"code","e45dd7d4":"code","265139fd":"code","0ddb2e94":"code","39576fea":"code","71b7eee1":"code","6b2296b3":"code","d8d80e5e":"code","e7d7793d":"code","7dee99d3":"code","a5e02ed0":"code","c08e0167":"code","e0192864":"code","f68ad981":"markdown","5d60271a":"markdown","876bbc96":"markdown","84928488":"markdown"},"source":{"90d3aa20":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\npd.set_option('display.precision',10)\nfrom matplotlib import rcParams\nimport scipy.stats as stats\nfrom matplotlib.pyplot import figure\nrcParams['figure.figsize'] = (15,5)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7929ea9a":"dataset = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndataset.head()","c0602b92":"dataset.isnull().sum()","b0839745":"dataset['sexx'] = dataset['sex'].replace({'male':1,'female':0})\ndataset['smokerx'] = dataset['smoker'].replace({'yes':1 , 'no':0})\ndataset.head()","6e1e1bc1":"dataset.describe()","8d3acd40":"correlation_matrix = dataset.corr()\nsns.heatmap(correlation_matrix , annot=correlation_matrix )\nplt.show()","fdae87e2":"# Stratified Age group\ndataset['agegrp'] = pd.cut(dataset.age , [17,30,40,50,60,70])","17abb3c0":"sns.boxplot(dataset.bmi)","fa90ec1b":"dataset.groupby(['agegrp','smoker'])['charges'].sum().unstack()","e678cb55":"ax = plt.subplot(121)\nsns.distplot(dataset[dataset.smokerx==1]['charges'] , ax = ax , color = 'c').set_title('Distribution of charges for Smokers')\n\nax = plt.subplot(122)\nsns.distplot(dataset[dataset.smokerx == 0]['charges'] , ax = ax , color = 'r').set_title('Distribution of charges for non smokers')\n","58d3f4e2":"plt.figure(figsize = (15,7))\nsns.boxplot(y = 'charges' , x = 'smoker' , hue = 'agegrp' , data = dataset)","5fe6e046":"plt.figure(figsize = (12,5))\nsns.countplot(x = 'smoker' , hue = 'sex'  , data = dataset)","c47179da":"sns.countplot(x = 'agegrp' , hue = 'smoker' , data = dataset )","f335c811":"dx = dataset.groupby(['agegrp','smoker'])['charges'].sum().unstack().reset_index()\ndx","01d7cac5":"dx.columns = ['agegrp','Non Smoker' , 'Smoker']\ndx","bb0e3a1e":"sns.barplot(x = 'agegrp' , y = 'Smoker'  , data = dx).set(title = 'Charges according to age group for smoker')\nplt.show()","2759c74f":"sns.barplot(x = 'agegrp' , y = 'Non Smoker'  , data = dx).set(title = 'Charges according to age group for non smoker')\nplt.show()","68a2ae5e":"plt.figure()\nsns.boxplot(x = 'agegrp' , y = 'charges'  , hue = 'smoker' , data = dataset).set(title = 'Charges according to age groups stratified by Smoker')","d6550b35":"_ = sns.jointplot(x = 'age' , y = 'charges'  , data = dataset[dataset.smokerx == 1] , kind = 'kde').annotate(stats.pearsonr)","b602e0f7":"# For non smokers, we can clearly see the correlation of charges is higher in this case\ng = sns.jointplot(x = 'age' , y = 'charges'  , data = dataset[dataset.smokerx == 0] , kind = 'kde').annotate(stats.pearsonr)","94dfdfe4":"plt.figure(figsize = (15,5))\nsns.lmplot(x = 'age'  , y = 'charges' , hue = 'smoker' , data = dataset , palette='gnuplot2_r' , markers = ['x','o'] , size= 8).set(title = 'Plot for smokers and non smokers')\nplt.show()","f12b4bfb":"dataset.region.value_counts()","9c0243cd":"dx = dataset.groupby(['region','smoker'])['charges'].mean().unstack().reset_index()\ndx.columns = ['region','non smoker' , 'smoker']\ndx","8ffc8ca3":"sns.barplot('region', 'non smoker' , data = dx)","e85c7bee":"sns.barplot('region', 'smoker' , data = dx).set(title = 'Charges for smoker in different regions')","af8cc7d5":"sns.catplot(x = 'region' , y = 'charges' , hue = 'smoker' , data = dataset , kind  = 'bar')","84975138":"sns.distplot(dataset.bmi).set(title = 'Distribution of Body Mass Index')","74c0a7d3":"sns.boxplot(dataset.bmi).set(title = 'BoxPlot for BMI' , xlabel = 'BMI')","782747d2":"sns.lmplot(x = 'bmi' , y = 'charges' , hue = 'smoker' , data = dataset)","52cb9639":"sns.jointplot(x = 'bmi' , y = 'charges' , data = dataset , kind = 'scatter').annotate(stats.pearsonr)","029fe8f3":"dx = dataset[dataset.smokerx == 1]\nsns.jointplot(x = 'bmi' , y = 'charges' , data = dx , kind = 'scatter').annotate(stats.pearsonr)","844f4cbe":"dx = dataset[dataset.smokerx == 0]\nsns.jointplot(x = 'bmi' , y = 'charges' , data = dx , kind = 'scatter').annotate(stats.pearsonr)","2be644de":"sns.boxplot(x = 'agegrp' , y = 'bmi' , hue = 'smoker' , data = dataset)","f0fc0ca9":"dx = dataset.groupby(['sex'])['charges'].sum().reset_index()\ndx.columns = ['sex','charges']\nsns.catplot(x = 'sex' , y = 'charges' , data = dx , kind = 'bar')","63d354c8":"sns.catplot(x = 'children' , kind = 'count' , data = dataset)","cab7de7d":"sns.catplot(x = 'children' , y = 'charges' , data = dataset , kind = 'bar').set(title = 'Barplot for charges for number of children')","e45dd7d4":"dx = dataset.groupby(['children','smoker'])['charges'].mean().unstack().reset_index()\ndx.columns = ['children' , 'no smoker' , 'smoker']\ndx","265139fd":"sns.catplot(x = 'children' , y = 'charges' , hue = 'smoker' , data = dataset , kind = 'bar')","0ddb2e94":"dx = dataset.groupby(['children','smoker'])['bmi'].mean().unstack().reset_index()\ndx.columns = ['children' , 'no smoker' , 'smoker']\ndx","39576fea":"sns.catplot(x = 'children' , y = 'bmi' , hue = 'smoker' , data = dataset , kind = 'bar')","71b7eee1":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error , r2_score , accuracy_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures ,LabelBinarizer","6b2296b3":"encoder = LabelBinarizer()\nc = encoder.fit_transform(dataset.region)\nc = pd.DataFrame(c)\nc.columns = ['NorthEast' , 'NorthWest' , 'SouthEast' , 'SouthWest']\nc.head()\n\ndataset = dataset.join(c)\ndataset.head()","d8d80e5e":"X = dataset.loc[:,['age','sexx','bmi','children','smokerx','NorthEast','NorthWest','SouthEast','SouthWest']].values\ny = dataset.charges.values","e7d7793d":"X_train , X_test , y_train , y_test = train_test_split(X , y , train_size = 0.8 , random_state = 42 , shuffle = True)","7dee99d3":"lin_reg = LinearRegression()\nlin_reg.fit(X_train , y_train)\ny_pred = lin_reg.predict(X_test)\n\nlin_reg.score(X_test , y_test)","a5e02ed0":"pol_reg = PolynomialFeatures(degree = 2)\nX_pol = pol_reg.fit_transform(X)\n\nX_train , X_test , y_train , y_test = train_test_split(X_pol , y , train_size = 0.8 , random_state = 42 , shuffle = True)\n\nlin_reg.fit(X_train,y_train)\n\nlin_reg.score(X_test , y_test)","c08e0167":"from sklearn.ensemble import RandomForestRegressor\n\nrandom_forest = RandomForestRegressor(n_estimators = 100, criterion = 'mse')\n\nrandom_forest.fit(X_train , y_train)\n\nforest_train_pred = random_forest.predict(X_train)\nforest_test_pred = random_forest.predict(X_test)\n(random_forest.score(X_train , y_train) ,random_forest.score(X_test , y_test))\n\nprint('MSE train data: %.3f , MSE test data: %.3f' %(mean_squared_error(y_train , forest_train_pred) , \n                                                     mean_squared_error(y_test , forest_test_pred)))\n\n\nprint('R2 train data: %.3f, R2 test data: %.3f' % (\nr2_score(y_train,forest_train_pred),\nr2_score(y_test,forest_test_pred)))","e0192864":"plt.scatter(forest_train_pred , forest_train_pred - y_train , c = 'black' , label = 'Train Data')\n\nplt.scatter(forest_test_pred , forest_test_pred - y_test , c = 'c' , label = 'Test Data')\n\nplt.xlabel('Predicted values')\nplt.ylabel('Tailings')\nplt.legend(loc = 'upper left')\nplt.hlines(y = 0, xmin = 0, xmax = 60000, lw = 2, color = 'red')\nplt.show()","f68ad981":"### Now Let's look at region","5d60271a":"As we can see for smokers, bmi has very good correlation with charges","876bbc96":"These below results shows the charges for smoker and non smoker in different regions","84928488":"No null values are there, we're good to go"}}