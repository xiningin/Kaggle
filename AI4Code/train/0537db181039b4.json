{"cell_type":{"8e4136f4":"code","587dfdd2":"code","0a158b23":"code","a45a0e7e":"code","cf3ead56":"code","c6918dff":"code","b2209414":"code","b5b0e561":"code","6fe0478b":"code","fc85156e":"code","d4546e1b":"code","fe4a7191":"code","9fd60c58":"code","d6332bc5":"code","adfbfdaa":"code","43de2a50":"code","00872443":"code","4ebf0dd6":"code","a556fd93":"code","30fe887b":"code","36ac179f":"code","5290a686":"code","a87784f7":"code","f643aac8":"code","40b41c0e":"code","1141af92":"code","082bcc89":"code","dee90664":"code","20ddc671":"code","33d9c469":"code","d8349933":"code","e5c70151":"code","4908fe5b":"code","5e980412":"markdown","5025dbed":"markdown","58f40e0f":"markdown","5b195067":"markdown","93ef45ef":"markdown","e62ad035":"markdown","98c4512a":"markdown","2038b836":"markdown","bf78ad9e":"markdown"},"source":{"8e4136f4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","587dfdd2":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","0a158b23":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","a45a0e7e":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","cf3ead56":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","c6918dff":"dataset=[train_data,test_data]\ntrain_data.info()","b2209414":"train_data.describe()","b5b0e561":"fig = plt.figure(figsize=(10,5))\n\nplt.title('Training Datset')\nsns.heatmap(train_data.isnull(),yticklabels=False,cmap='viridis')\nplt.show()","6fe0478b":"plt.figure(figsize=(5,5))\nplt.bar(list(train_data['Survived'].value_counts().keys()),list(train_data['Survived'].value_counts()),color=[\"r\",\"b\"])\nplt.title('Survival Ratio')\nplt.show()","fc85156e":"train_data['Survived'].value_counts()","d4546e1b":"sns.countplot(data=train_data,x='Sex',hue='Survived')","fe4a7191":"sns.countplot(train_data['Pclass'])","9fd60c58":"plt.figure(figsize=(5,5))\nplt.hist(train_data['Age'])\nplt.title('Distribution of Age')\nplt.xlabel(\"Age\")\nplt.show()","d6332bc5":"sns.boxplot(y = train_data['Age'], x = train_data['Sex'])","adfbfdaa":"sns.countplot(data=train_data,x='Embarked',hue='Survived')","43de2a50":"plt.figure(figsize = (10, 6))\n# using .heatmap() of seaborn to understand better relationship of variables \nsns.heatmap(train_data.corr(), annot=True)\nplt.title('Corelation Matrix')","00872443":"train_null_cols=train_data.columns[train_data.isna().any()].to_list()\ntest_null_cols=test_data.columns[test_data.isna().any()].to_list()\nprint('train_null_cols : ',train_null_cols)\nprint('test_null_cols : ',test_null_cols)","4ebf0dd6":"#dropping Name,Ticket,Cabin\ntrain_data.drop(columns=['Name','Ticket','Cabin'],axis=1,inplace=True)","a556fd93":"train_data.info()","30fe887b":"print(train_data['Embarked'].value_counts())\nfor data in dataset:\n    data['Sex']=data['Sex'].map({'female':0,'male':1})\n    data['Embarked']=data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})","36ac179f":"train_data.head()","5290a686":"test_data.drop(columns=['Name','Ticket','Cabin',],axis=1,inplace=True)","a87784f7":"train_data.info()","f643aac8":"test_data.info()","40b41c0e":"# Finding the null columns in train and test datasets\ntrain_null_cols=train_data.columns[train_data.isna().any()].to_list()\ntest_null_cols=test_data.columns[test_data.isna().any()].to_list()\nprint('train_null_cols : ',train_null_cols)\nprint('test_null_cols : ',test_null_cols)","1141af92":"# imputation of age in dataset by using mean\nfor data in dataset:\n    data['Age'].fillna(data['Age'].mean(),inplace=True)","082bcc89":"#imputing Embarked column in traing dataset\ntrain_data['Embarked'].fillna(train_data['Embarked'].mode()[0],inplace=True)","dee90664":"#imputing Fare column in testing dataset\ntest_data['Fare'].fillna(test_data['Fare'].mode()[0],inplace=True)","20ddc671":"train_data.info()","33d9c469":"test_data.info()","d8349933":"x=train_data.drop(['Survived'],axis=1)\ny=train_data['Survived']","e5c70151":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x,y, test_size=0.3,random_state=0)","4908fe5b":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier(objective='binary:logistic',booster = 'gbtree',eval_metric='logloss', gamma=5,learning_rate = 0.1, max_depth = 5, n_estimators = 100,colsample_bytree=1)\nxgb.fit(x, y)\npredictions_xgb=xgb.predict(test_data)\n\nSurvived=pd.Series(predictions_xgb,name='Survived')\nans=pd.concat([test_data['PassengerId'],Survived],axis=1)\nans.to_csv('XGB_Ans.csv',index=False)","5e980412":"## **Handling Missing Values**","5025dbed":"## **Applying XGBoost Classifier Model**","58f40e0f":"In training dataset, Column Age, Cabin and Embarked have null values","5b195067":"## **Importing Necessary Modules**","93ef45ef":"## **Data Visualization And Analysis**","e62ad035":"From above graph and code we can see 342 people have survived and 549 have not.","98c4512a":"# **Titanic - Machine Learning from Disaster**","2038b836":"## **Split Data In Train and Test**","bf78ad9e":"## **Data Cleaning**"}}