{"cell_type":{"c6d7a15a":"code","deef5db4":"code","539a25ac":"code","e5d2305d":"code","541a7589":"code","f8cf89f0":"code","16151a0c":"code","1786fe1c":"code","5c18708b":"code","7df20cd8":"code","fc54d6c4":"code","9400d744":"code","ef4c5f09":"code","2dfec4f0":"code","7fa58f0c":"code","4957eadd":"code","8473b606":"code","5afc42be":"code","dba3a33a":"code","c690be5b":"code","aa778faf":"code","9d9206be":"code","cb503d81":"code","2b63e6e1":"code","45f75d7d":"code","eaa2d55b":"code","26d8a1ef":"code","90b9aa70":"code","a6173ab3":"code","e0212ec3":"code","5e28c8d8":"code","b2b48ab1":"code","39f63bdf":"code","4789cb67":"code","65f09a0c":"code","9d40cea6":"code","8f23036b":"code","14254025":"code","9dfb7dfa":"code","6939a964":"code","3115cd26":"code","00eb63b6":"code","6644f7b9":"code","5718621d":"code","3431ed66":"code","120c18f4":"code","9cdce9f3":"code","79db6fcc":"code","10ac423e":"code","c0ea1b70":"code","1a7cacf5":"code","3e3dda61":"code","bdc8411a":"code","8b4209c8":"code","df127664":"code","2e554d32":"code","601ef83d":"code","f53985a6":"code","181c6aa9":"code","3ca1ec73":"code","1a1f3457":"code","12c4d885":"code","bcc8146b":"code","4b484fa8":"code","53074cc6":"code","23d11377":"code","83626d37":"code","58c26bf4":"code","90ff27dd":"code","9c0a079c":"code","06b1d55e":"code","9321bdfa":"code","d9660c48":"code","081b5a41":"code","08c24df4":"code","db8d95fc":"code","80ddaad4":"code","5f3e2875":"code","ae98008b":"code","fe22f4e2":"code","518fedb4":"code","86a05cdf":"code","bccb14ed":"code","a8742863":"code","99dba9d9":"code","8d4ba0f6":"code","536b329f":"code","9c7f3f82":"code","17dcb226":"code","52136417":"code","2126a0a8":"code","b1e8ca5c":"code","2592a194":"code","82c69a28":"code","4c291f2a":"code","ee47f357":"markdown","9a50868b":"markdown","9c811321":"markdown","4f958e1a":"markdown","ee4db3ea":"markdown","100330e7":"markdown","04b27acc":"markdown","8d1c96cf":"markdown","5d01f6e8":"markdown","c0e1654a":"markdown","8bd346e0":"markdown","2e7ced0d":"markdown","a6d0c1b3":"markdown","63e1fa97":"markdown","a09e6c1a":"markdown","2c46af9c":"markdown","64c94bea":"markdown","5dc35839":"markdown","eb71dcc1":"markdown","2bf414ab":"markdown","bdd586cd":"markdown","9d24f4a2":"markdown","2e4528d9":"markdown","f20dd4e1":"markdown","fade3ef4":"markdown","62a9883a":"markdown","a15c87dd":"markdown","04ec0044":"markdown","86fb8786":"markdown","d2c2e1d1":"markdown","a157eadb":"markdown","03eedd97":"markdown","4d0691da":"markdown","471852ea":"markdown","ee4a31f1":"markdown","9f397aee":"markdown","7600df77":"markdown","38dd9d8d":"markdown","342e50c1":"markdown","70c36304":"markdown","d5ab3552":"markdown","e0c6712b":"markdown","03fea725":"markdown","5cd58d41":"markdown"},"source":{"c6d7a15a":"# Import libraries\nimport numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nsns.set_color_codes(\"pastel\")\nsns.set(style=\"whitegrid\")\n\nimport matplotlib.pyplot as plt\n# Pretty display for notebooks\n%matplotlib inline\n\n# Set precision to two decimals\npd.set_option(\"display.precision\", 2)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","deef5db4":"!ls ..\/input","539a25ac":"# Upload data file into dataframe df\npath = \"..\/input\/childhood-ultramarathon-runner-study-jan-2020\/\"\nfileName = \"Childhood Ultramarathon Runner Study v0.92.csv\"\ndf = pd.read_csv(path + fileName, sep=',')\ndf.info()","e5d2305d":"df","541a7589":"df.info(verbose=True)","f8cf89f0":"df.describe()","16151a0c":"df.describe(include=['object', 'bool'])","1786fe1c":"df_demographics = df[['GENDER', 'CURRENT_AGE', 'CURRENT_HEIGHT', 'CURRENT_WEIGHT',\n                     'HEIGHT_AT_25', 'WEIGHT_AT_25', 'BIRTH_PLACE', \n                     'ETHNIC_ORIGIN', 'MARITAL_STATUS', 'NBR_BIO_CHILDREN',\n                     'HIGHEST_EDUCATION', 'WORKING_STATUS', \n                     'AVG_WORK_HOURS_PW_LAST_12_MONTHS', 'OCCUPATION',\n                     'RETIRE_YEAR']]\ndf_demographics.info()","5c18708b":"# Calculate Body Max Index (BMI) and add columns\ndf_demographics['CURRENT_BMI'] = df_demographics['CURRENT_WEIGHT'] \/ ((df_demographics['CURRENT_HEIGHT']\/100)**2)\ndf_demographics['BMI_AT_25'] = df_demographics['WEIGHT_AT_25'] \/ (df_demographics['HEIGHT_AT_25']\/100)**2","7df20cd8":"df_demographics.describe(include='all')","fc54d6c4":"# Gender and age stats\nf, axes = plt.subplots(1, 2, figsize=(12, 4))\ng = df_demographics.GENDER.value_counts()\nsns.barplot(g.index, g.values, ax=axes[0])\nsns.distplot(df_demographics.CURRENT_AGE, kde=False, bins=12, ax=axes[1])\ng","9400d744":"# Height, weight and BMI histograms\nf, axes = plt.subplots(2, 3, figsize=(18, 8))\nsns.distplot(df_demographics.CURRENT_HEIGHT, bins=12, kde=False, ax=axes[0,0])\nsns.distplot(df_demographics.CURRENT_WEIGHT, bins=12, kde=False, ax=axes[0,1])\nsns.distplot(df_demographics.CURRENT_BMI, bins=12, kde=False, ax=axes[0,2])\nsns.distplot(df_demographics.HEIGHT_AT_25, bins=12, kde=False, ax=axes[1,0])\nsns.distplot(df_demographics.WEIGHT_AT_25, bins=12, kde=False, ax=axes[1,1])\nsns.distplot(df_demographics.BMI_AT_25, bins=12, kde=False, ax=axes[1,2])","ef4c5f09":"df_demographics[['CURRENT_HEIGHT', 'CURRENT_WEIGHT', 'HEIGHT_AT_25', 'WEIGHT_AT_25', 'CURRENT_BMI', 'BMI_AT_25']].describe()","2dfec4f0":"# Birth place stats\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nbp = df_demographics.BIRTH_PLACE.value_counts()\nsns.barplot(bp.values, bp.index,  orient='h')\nbp","7fa58f0c":"# Ethnic origin stats\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\neo = df_demographics.ETHNIC_ORIGIN.value_counts()\nsns.barplot(eo.values, eo.index,  orient='h')\neo","4957eadd":"# Education stats\nf, axes = plt.subplots(1, 1, figsize=(8, 6))\ned = df_demographics.HIGHEST_EDUCATION.value_counts()\nsns.barplot(ed.values, ed.index,  orient='h')\ned","8473b606":"# Occupation stats\nf, axes = plt.subplots(1, 1, figsize=(6, 8))\noc = df_demographics.OCCUPATION.value_counts()\nsns.barplot(oc.values, oc.index,  orient='h')\n# sns.barplot(oc.values, oc.index,  orient='h', color='grey')\n# f.savefig(\"fig1.pdf\", orientation=\"portrait\", bbox_inches='tight')\noc","5afc42be":"# Work status stats\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nws = df_demographics.WORKING_STATUS.value_counts()\nsns.barplot(ws.values, ws.index, orient='h')\nws","dba3a33a":"# Marital status stats\nf, axes = plt.subplots(1 ,1, figsize=(6, 4))\nms = df_demographics.MARITAL_STATUS.value_counts()\nsns.barplot(ms.values, ms.index, orient='h')\nms","c690be5b":"# Biological children\nf, axes = plt.subplots(1 ,1, figsize=(6, 4))\nch = df_demographics.NBR_BIO_CHILDREN.value_counts()\nsns.barplot(ch.values, ch.index, orient='h')\nch","aa778faf":"df_health_habits = df[['SMOKED_100_IN_LIFE', 'AGE_1ST_SMOKE', 'CURRENTLY_SMOKING', 'YEARS_SINCE_STOP_SMOKING', '12_DRINKS_IN_ANY_ONE_YEAR',\n                     '12_DRINKS_IN_ENTIRE_LIFE', 'DRINK_DAYS_PW_LAST_12_MONTHS', 'HEAVY_DRINKING_DAYS_LAST_12_MONTHS',\n                     'DIET']]","9d9206be":"df_health_habits.info()","cb503d81":"df_health_habits.describe(include='all')","2b63e6e1":"# Smoking stats\nf, axes = plt.subplots(1, 3, figsize=(18, 4))\ns1 = df_health_habits.SMOKED_100_IN_LIFE.value_counts()\nsns.barplot(s1.index, s1.values, ax=axes[0])\ns2 = df_health_habits.CURRENTLY_SMOKING.value_counts()\nsns.barplot(s2.index, s2.values, ax=axes[1])\nsns.distplot(df_health_habits.AGE_1ST_SMOKE, kde=False, bins=7, ax=axes[2])\nprint(s1)\nprint()\nprint(s2)","45f75d7d":"# Drinking stats\nf, axes = plt.subplots(1, 2, figsize=(12, 4))\ndr1 = df_health_habits['12_DRINKS_IN_ENTIRE_LIFE'].value_counts()\nsns.barplot(dr1.index, dr1.values, ax=axes[0])\ndr2 = df_health_habits['12_DRINKS_IN_ANY_ONE_YEAR'].value_counts()\nsns.barplot(dr2.index, dr2.values, ax=axes[1])\nprint(dr1)\nprint()\nprint(dr2)","eaa2d55b":"# Some more drinking stats\nf, axes = plt.subplots(1, 2, figsize=(12, 4))\nsns.distplot(df_health_habits.DRINK_DAYS_PW_LAST_12_MONTHS, bins=12, kde=False, ax=axes[0])\nsns.distplot(df_health_habits.HEAVY_DRINKING_DAYS_LAST_12_MONTHS, bins=12, kde=False, ax=axes[1])","26d8a1ef":"# Diet stats\nf, axes = plt.subplots(1 ,1, figsize=(6, 4))\ndi = df_health_habits.DIET.value_counts()\nsns.barplot(di.values, di.index, orient='h')\ndi","90b9aa70":"df_childhood_UM_history = df[['AGE_1ST_UM', 'DISTANCE_1ST_UM', 'NBR_UM_BEFORE_19', 'NBR_UM_50KM_BEFORE_19', 'NBR_UM_80KM_BEFORE_19', 'NBR_UM_100KM_BEFORE_19', 'NBR_UM_160KM_BEFORE_19',\n                              'NBR_UM_OVER_160KM_BEFORE_19', 'UM_TRAIN_TIMES_PW_BEFORE_19', 'UM_TRAIN_HOURS_PW_BEFORE_19', 'UM_TRAIN_DISTANCE_PW_BEFORE_19', 'UM_TRAIN_%_ASPHALT_BEFORE_19',\n                              'UM_TRAIN_%_TRAIL_BEFORE_19', 'UM_TRAIN_%_TRACK_BEFORE_19', 'UM_TRAIN_%_TREADMILL_BEFORE_19', 'UM_TRAIN_%_OTHER_BEFORE_19', 'SUFFERED_UM_INJURIES_UNDER_19',\n                              'UM_INJURY_KNEE_PAIN', 'UM_INJURY_ANKLE_TENDINOPATHY', 'UM_INJURY_ACHILLES_TENDINOPATHY', 'UM_INJURY_HIP_FLEXOR_STRAIN', 'UM_INJURY_ILIOTIBIAL_BAND_ISSUE',\n                              'UM_INJURY_FOOT_STRESS_FRACTURE', 'UM_INJURY_TIBIA_STRESS_FRACTURE', 'UM_INJURY_CALF_STRAIN', 'UM_INJURY_ANKLE_SPRAIN', 'UM_INJURY_HAMSTRING_STRAIN',\n                              'UM_INJURY_PLANTAR_FASCIITIS', 'UM_INJURY_MEDIAL_TIBIAL_STRESS_SYNDROME', 'UM_INJURY_COMPARTMENT_SYNDROME', 'UM_INJURY_MORTON_NEUROMA', 'UM_INJURY_BURSITIS',\n                              'UM_INJURY_MISSED_TRAINING_BEFORE_19', 'UM_TRAINING_AFFECTED_ACADEMIC_PERF_BEFORE_19', 'UM_TRAINING_AFFECTED_OTHER_SPORTS_PERF_UNDER_19']]","a6173ab3":"df_childhood_UM_history.info()","e0212ec3":"df_childhood_UM_history.describe()","5e28c8d8":"# 1st marathon stats\nf, axes = plt.subplots(2, 2, figsize=(12,8))\nsns.distplot(df_childhood_UM_history.AGE_1ST_UM, kde=False, bins=11, ax=axes[0,0])\nsns.distplot(df_childhood_UM_history.NBR_UM_BEFORE_19, kde=False, bins=30, ax=axes[0, 1])\nsns.distplot(df_childhood_UM_history.DISTANCE_1ST_UM, kde=False, bins=60, ax=axes[1, 0])\nsns.distplot(df_childhood_UM_history.UM_TRAIN_DISTANCE_PW_BEFORE_19, kde=False, bins=12, ax=axes[1, 1])","b2b48ab1":"print('Age  Freq')\ndf_childhood_UM_history.AGE_1ST_UM.value_counts().sort_index(ascending=False)","39f63bdf":"print('NbrUM  Freq')\ndf_childhood_UM_history.NBR_UM_BEFORE_19.value_counts().sort_index(ascending=False)","4789cb67":"print('DistUM  Freq')\ndf_childhood_UM_history.DISTANCE_1ST_UM.value_counts().sort_index(ascending=False)","65f09a0c":"print('TrainKm  Freq')\ndf_childhood_UM_history.UM_TRAIN_DISTANCE_PW_BEFORE_19.value_counts().sort_index(ascending=False)","9d40cea6":"# Check for nulls\ndf_childhood_UM_history.isnull().any()","8f23036b":"# Fill NaN in UM_INJURY columns with zero (meaning not present)\ndf_childhood_UM_history.fillna(value=0, inplace=True)\ndf_childhood_UM_history.isnull().any()","14254025":"correlation = df_childhood_UM_history.corr() \nplt.figure(figsize=(24, 14))\nheatmap = sns.heatmap(correlation, annot=True, linewidths=0, vmin=-1, cmap=\"RdBu_r\")","9dfb7dfa":"df_reasons_for_running_UM = df[['REASONS_UM_MY_IDEA', 'REASONS_UM_RUN_WITH_PARENTS', 'REASONS_UM_RUN_WITH_FRIENDS', 'REASONS_UM_RUN_WITH_FAMILY_OTHER',\n                                'REASONS_UM_PARENTS ENCOURAGED_ME', 'REASONS_UM_HOW_FAR_CAN_I_GO', 'REASONS_UM_COACH_ENCOURAGED_ME', 'REASONS_UM_FOR_THE_CHALLENGE']]\n\ndf_reasons_for_running_UM.head()","6939a964":"df_reasons_for_running_UM.fillna(value=0, inplace=True)\ndf_reasons_for_running_UM.head()","3115cd26":"run_reasons = df_reasons_for_running_UM.sum()\ndf_run_reasons = pd.DataFrame(data=run_reasons, index=df_reasons_for_running_UM.columns, columns=['NBR_RESPONSES'])\ndf_run_reasons","00eb63b6":"# Plot a pie chart with % values\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 8,8\nfig, ax = plt.subplots()\nax.pie(df_run_reasons.NBR_RESPONSES, labels=df_run_reasons.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True )\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","6644f7b9":"# Injuries associated to UM activity suffered before the age of 19 \nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_childhood_UM_history.SUFFERED_UM_INJURIES_UNDER_19.value_counts()\nsns.barplot(d.index, d.values)\nd","5718621d":"# Ultra-Marathon related injuries\ndf_UM_injuries = df_childhood_UM_history[['UM_INJURY_KNEE_PAIN', 'UM_INJURY_ANKLE_TENDINOPATHY', 'UM_INJURY_ACHILLES_TENDINOPATHY',  'UM_INJURY_HIP_FLEXOR_STRAIN',\n                                          'UM_INJURY_ILIOTIBIAL_BAND_ISSUE', 'UM_INJURY_FOOT_STRESS_FRACTURE', 'UM_INJURY_TIBIA_STRESS_FRACTURE', 'UM_INJURY_CALF_STRAIN',\n                                          'UM_INJURY_ANKLE_SPRAIN', 'UM_INJURY_HAMSTRING_STRAIN', 'UM_INJURY_PLANTAR_FASCIITIS', 'UM_INJURY_MEDIAL_TIBIAL_STRESS_SYNDROME',\n                                          'UM_INJURY_COMPARTMENT_SYNDROME', 'UM_INJURY_MORTON_NEUROMA', 'UM_INJURY_BURSITIS']]","3431ed66":"df_injuries = df_UM_injuries.sum()\ndf_injuries = pd.DataFrame(data=df_injuries, index=df_UM_injuries.columns, columns=['NBR_CASES'])\ndf_injuries.sort_values(by='NBR_CASES', ascending=False)","120c18f4":"df_injuries['INDEX'] = df_injuries.index.str.replace(\"UM_INJURY_\", \"\")\ndf_injuries['INDEX'] = df_injuries['INDEX'].str.replace(\"_\", \" \")\n#df_injuries['INDEX'] = df_injuries['INDEX'].str.lower()\ndf_injuries.set_index('INDEX', inplace=True)","9cdce9f3":"# Plot a pie chart with % values\nrcParams['figure.figsize'] = 10,10\nfig1, ax1 = plt.subplots()\n\n# theme = plt.get_cmap('Greys')\n# ax1.set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 30) for i in range(15)])\nexplode = [0.1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nax1.pie(df_injuries.NBR_CASES, labels=df_injuries.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True, explode=explode )\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","79db6fcc":"# Total count of injuries reported (some participants reported more than one injury)\ndf_injuries.sum()","10ac423e":"# Other sports\ndf_other_sports = df[['OTHER_SP_Baseball', 'OTHER_SP_Basketball', 'OTHER_SP_Cross-Country Running', 'OTHER_SP_Golf', 'OTHER_SP_Tennis', 'OTHER_SP_Soccer', 'OTHER_SP_Football', \n                      'OTHER_SP_Track_and_Field', 'OTHER_SP_Swimming', 'OTHER_SP_Skiing', 'OTHER_SP_Volleyball', 'OTHER_SP_Others']]\n          \n#df_other_sports","c0ea1b70":"# Number of participants that practised other sports (whether for competition or recreational purposes)\ndos = df_other_sports.sum(axis=1)\nf, axes = plt.subplots(1 ,1, figsize=(6, 4))\nsns.distplot(dos.values, kde=False, bins=8, axlabel='NBR_OF_SPORTS')\nprint('Sports', 'Children')\ndos.value_counts().sort_index()","1a7cacf5":"df_sports = df_other_sports.sum()\ndf_sports = pd.DataFrame(data=df_sports, index=df_other_sports.columns, columns=['NBR_RESPONSES'])\ndf_sports = df_sports.sort_values(by='NBR_RESPONSES', ascending=False).head(20)\ndf_sports","3e3dda61":"df_sports['INDEX'] = df_sports.index.str.replace(\"OTHER_SP_\", \"\")\ndf_sports['INDEX'] = df_sports['INDEX'].str.replace(\"_\", \" \")\ndf_sports.set_index('INDEX', inplace=True)","bdc8411a":"df_sports","8b4209c8":"# Plot a pie chart with % values\nrcParams['figure.figsize'] = 10,10\nfig2, ax2 = plt.subplots()\n\nexplode = [0.1,0,0,0,0,0,0,0,0,0,0,0] \n# theme = plt.get_cmap('Greys')\n# ax2.set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 24) for i in range(12)])\n\nax2.pie(df_sports.NBR_RESPONSES, labels=df_sports.index, autopct='%1.1f%%', startangle=20, pctdistance=0.7, labeldistance=1.05, shadow=True, explode=explode)\nax2.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# plt.savefig(\"fig2.pdf\", orientation=\"landscape\", bbox_inches='tight')\nplt.show()\n","df127664":"df_effect_performance = df[['UM_INJURY_MISSED_TRAINING_BEFORE_19', 'UM_TRAINING_AFFECTED_ACADEMIC_PERF_BEFORE_19', 'UM_TRAINING_AFFECTED_OTHER_SPORTS_PERF_UNDER_19']]\ndf_effect_performance.head()","2e554d32":"# Q. Did you miss training due to UM related injury?\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_effect_performance.UM_INJURY_MISSED_TRAINING_BEFORE_19.value_counts()\naxes.set(xlabel='DID YOU MISS UM TRAINING DUE TO INJURY BEFORE 19?')\nsns.barplot(d.index, d.values)\nd","601ef83d":"# Q. Did UM training affect your academic performance?\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_effect_performance.UM_TRAINING_AFFECTED_ACADEMIC_PERF_BEFORE_19.value_counts()\naxes.set(xlabel='DID UM TRAINING AFFECT YOUR ACADEMIC PERFROMANCE BEFORE 19?')\nsns.barplot(d.index, d.values)\nd","f53985a6":"# Q. Did UM training affect your performance in other sports?\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_effect_performance.UM_TRAINING_AFFECTED_OTHER_SPORTS_PERF_UNDER_19.value_counts()\naxes.set(xlabel='DID UM TRAINING AFFECT OTHER SPORTS PERFORMANCE BEFORE 19?')\nsns.barplot(d.index, d.values)\nd","181c6aa9":"df_adult_exercise_history = df[['RUNNING_AFTER_19', 'COMPETITIONS_5KM_AFTER_19', 'COMPETITIONS_10KM_AFTER_19', 'COMPETITIONS_22KM_AFTER_19', 'COMPETITIONS_44KM_AFTER_19', \n                                'COMPETITIONS_50KM_AFTER_19', 'COMPETITIONS_70KM_AFTER_19', 'COMPETITIONS_100KM_AFTER_19', 'COMPETITIONS_160KM_AFTER_19', 'COMPETITIONS_OVER_160KM_AFTER_19',\n                                'YEAR_MOST_RECENT_MARATHON', 'DISTANCE_MOST_RECENT_MARATHON', 'INTEND_TO_RUN_ANOTHER_UM', 'RUN_TIMES_PW_LAST_12_MONTHS', 'RUN_HOURS_PW_LAST_12_MONTHS',\n                                'RUN_DISTANCE_PW_LAST_12_MONTHS', 'RUN_%_ASPHALT_LAST_12_MONTHS', 'RUN_%_TRAIL_LAST_12_MONTHS', 'RUN_%_TRACK_LAST_12_MONTHS', 'RUN_%_TREADMILL_LAST_12_MONTHS',\n                                'RUN_%_OTHER_LAST_12_MONTHS']]","3ca1ec73":"# Q. Did you continue running after the age of 19?\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_adult_exercise_history.RUNNING_AFTER_19.value_counts()\naxes.set(xlabel='RUNNING AFTER 19?')\nsns.barplot(d.index, d.values)\nd","1a1f3457":"# Q. Do you intend to run another UM after 19?\nf, axes = plt.subplots(1, 1, figsize=(6, 4))\nd = df_adult_exercise_history.INTEND_TO_RUN_ANOTHER_UM.value_counts()\naxes.set(xlabel='INTEND TO RUN ANOTHER UM?')\nsns.barplot(d.index, d.values)\nd","12c4d885":"# More running stats after the age of 19\n# Categories\ncateg = ['To 50km', 'To 100km', 'To 160km', 'Over 160km']\nfreq = df_adult_exercise_history.DISTANCE_MOST_RECENT_MARATHON.value_counts().sort_index()\nf, axes = plt.subplots(1, 2, figsize=(12, 4))\naxes[0].set(xlabel='DISTANCE MOST RECENT MARATHON')\nsns.barplot(categ, freq.values, ax=axes[0],  )\nsns.distplot(df_adult_exercise_history.RUN_DISTANCE_PW_LAST_12_MONTHS, kde=False, bins=10, ax=axes[1])\nfreq","bcc8146b":"# Reasons for stopping running\ndf_stop_running = df[['REASON_STOP_RUNNING_INJURY', 'REASON_STOP_RUNNING_WORK_STUDY',\n                     'REASON_STOP_RUNNING_OTHER_SPORT', 'REASON_STOP_RUNNING_FAMILY',\n                     'REASON_STOP_RUNNING_BORED']]\ndf_stop_running.head()","4b484fa8":"df_stop_running.fillna(value=0, inplace=True)\ndf_stop_running.head()","53074cc6":"df_stop_reasons = df_stop_running.sum()\ndf_stop_reasons = pd.DataFrame(data=df_stop_reasons, index=df_stop_running.columns, columns=['NBR_RESPONSES'])\ndf_stop_reasons","23d11377":"# Make labels nice\ndf_stop_reasons['INDEX'] = df_stop_reasons.index.str.replace(\"REASON_STOP_RUNNING_\", \"\")\ndf_stop_reasons['INDEX'] = df_stop_reasons['INDEX'].str.replace(\"_\", \" \")\ndf_stop_reasons.set_index('INDEX', inplace=True)","83626d37":"# Plot a pie chart with % values\nrcParams['figure.figsize'] = 10,10\nfig3, ax3 = plt.subplots()\n\n# theme = plt.get_cmap('Greys')\n# ax3.set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 12) for i in range(5)])\nexplode = [0.1, 0,0,0,0]\n\nax3.pie(df_stop_reasons.NBR_RESPONSES, labels=df_stop_reasons.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True, explode=explode )\nax3.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# plt.savefig(\"fig4.pdf\", orientation=\"landscape\", bbox_inches='tight')\nplt.show()\n","58c26bf4":"df_adult_medical_history = df[['CORONARY_ARTERY_DISEASE', 'HEART_ATTACK', 'ANGINA_PECTORIS', 'ARRHYTMIA', 'CONGESTIVE_HEART_FAILUTE', 'HYPERTENSION', 'TRANSIENT_ISCHEMIC_ATTACK',\n                               'THROPMOBOPHLEBITIS', 'PERIPHERAL_VASCULAR_DISEASE', 'VARICOSE_VAINS','PULMONARY_EMBOLISM', 'RHEUMATIC_FEVER', 'EXERCISE_INDUCE_ASTHMA', 'OTHER_ASTHMA',\n                               'EMPHYSEMA', 'CHRONIC_BRONCHITIS', 'LUNG_CANCER', 'PROSTATE_CANCER', 'BREAST_CANCER', 'COLON_CANCER', 'BLADDER_CANCER', 'MELANOMA', 'NON_HODGKIN_LYMPHOMA',\n                               'KIDNEY_CANCER', 'THYROID_CANCER', 'PANCREATIC_CANCER', 'LEUKEMIA', 'OSTEOPOROSIS', 'CHRONIC_LOW_BACK_PAIN', 'CHRONIC_NECK_PAINS', 'KNEE_OSTEOARTHRITIS', \n                               'HIP_OSTEOARTHRITIS', 'OTHER_JOINTS_OSTEOARTHRITIS', 'ANTERIOR_CRUCIATE_LIGAMENT', 'KNEE_MENISCUS_INJURY', 'RHEUMATOID_ARTHRITIS', 'FIBROMYALGYA_SYNDROME',\n                               'EXERCISE_RELATED_STRESS_FRACTURE', 'HIP_STRAIN', 'TORN_ATFL', 'TRAUMA_FRACTURE', 'TOMMY_JOHN_SURGERY', 'ANXIETY', 'DEPRESSION', 'MULTIPLE_SCLEROSIS',\n                               'PARKINSON_DISEASE', 'EPILEPSY', 'POLIO_WITH_RECURRENT_WEAKNESS', 'ALZHEIMER_DISEASE', 'OCD', 'STOMACH_ULCER', 'DUODENAL_ULCER', 'COLITIS', 'GASTRIC_ACID_REFLUX',\n                               'DIVERTICULITIS', 'GALL_BLADDER_DISEASE', 'LIVER_DISEASES', 'HEMORRHOIDS', 'INTERSTITIAL_CYSTITIS', 'DIABETES', 'CATARACTS', 'GLAUCOMA', 'MIGRAINES', \n                               'SIGNIFICANT_VISION_PROBLEM', 'SIGNIFICANT_HEARING_PROBLEM', 'SLEEPING_DIFFICULTIES', 'HYPERCHOLESTEROLEMIA', 'KYDNEY_DISORDERS', 'PROSTATE_PROBLEMS',\n                               'THYROID_PROBLEMS', 'INCONTINENCE', 'ALLERGIES', 'OBESITY', 'ANOREXIA', 'ALCOHOL_DRUG_ABUSE', 'ANEMIA', 'PITUITARY_ADENOMA']]","90ff27dd":"df_medical_conditions = df_adult_medical_history.count()\ndf_medical_stats = df_medical_conditions.sort_values(ascending=False).head(50)\ndf_medical_stats = df_medical_stats[df_medical_stats.values>0]  # Only plot elements with freq > 0\ndf_medical_stats","9c0a079c":"# Plot a pie chart with % values\nrcParams['figure.figsize'] = 16,16\nfig4, ax4 = plt.subplots()\nax4.pie(df_medical_stats.values, labels=df_medical_stats.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True)\nax4.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()","06b1d55e":"df_adult_medical_history_by_gender = df[['GENDER', 'EXERCISE_RELATED_STRESS_FRACTURE', 'HEMORRHOIDS', 'ANXIETY', 'DEPRESSION', 'CHRONIC_LOW_BACK_PAIN', 'KNEE_MENISCUS_INJURY', 'ARRHYTMIA',\n                                         'HYPERTENSION', 'ALLERGIES', 'SLEEPING_DIFFICULTIES', 'GASTRIC_ACID_REFLUX', 'EXERCISE_INDUCE_ASTHMA', 'CHRONIC_NECK_PAINS', 'MIGRAINES', 'OBESITY',\n                                         'ANTERIOR_CRUCIATE_LIGAMENT', 'KYDNEY_DISORDERS', 'THYROID_PROBLEMS', 'STOMACH_ULCER', 'COLITIS', 'ANOREXIA', 'OTHER_JOINTS_OSTEOARTHRITIS',\n                                         'HYPERCHOLESTEROLEMIA', 'RHEUMATOID_ARTHRITIS', 'LEUKEMIA', 'PROSTATE_CANCER', 'PROSTATE_PROBLEMS', 'ANEMIA', 'TORN_ATFL', 'TRAUMA_FRACTURE',\n                                         'TOMMY_JOHN_SURGERY', 'PITUITARY_ADENOMA', 'VARICOSE_VAINS', 'MULTIPLE_SCLEROSIS', 'LIVER_DISEASES', 'ALCOHOL_DRUG_ABUSE', 'HEART_ATTACK',\n                                         'PROSTATE_PROBLEMS', 'GLAUCOMA', 'RHEUMATIC_FEVER', 'INTERSTITIAL_CYSTITIS', 'MELANOMA', 'OCD', 'PULMONARY_EMBOLISM']]","9321bdfa":"df_mh_bg = df_adult_medical_history_by_gender.groupby(by='GENDER').count()\ndfm = df_mh_bg.transpose()\ndfm.T","d9660c48":"rcParams['figure.figsize'] = 9,9\nfig5, ax5 = plt.subplots()\nax5.set_title('Main conditions reported by FEMALE participants after 19', fontsize=16)\nax5.pie(dfm.Female[dfm.Female>0], labels=dfm[dfm.Female>0].index, autopct='%1.1f%%', startangle=10, pctdistance=0.7, labeldistance=1.05, shadow=True),\nax5.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()","081b5a41":"rcParams['figure.figsize'] = 9,9\nfig6, ax6 = plt.subplots()\nax6.set_title('Main conditions reported by MALE participants after 19', fontsize=16)\nax6.pie(dfm.Male[dfm.Male>0], labels=dfm[dfm.Male>0].index, autopct='%1.1f%%', startangle=50, pctdistance=0.7, labeldistance=1.05, shadow=True),\nax6.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()","08c24df4":"# Same analysis by gender for injuries before 19\ndf_injuries_before_19_by_gender = df[['GENDER', 'UM_INJURY_KNEE_PAIN', 'UM_INJURY_ANKLE_TENDINOPATHY', 'UM_INJURY_ACHILLES_TENDINOPATHY', 'UM_INJURY_HIP_FLEXOR_STRAIN',\n                                      'UM_INJURY_ILIOTIBIAL_BAND_ISSUE', 'UM_INJURY_FOOT_STRESS_FRACTURE',  'UM_INJURY_TIBIA_STRESS_FRACTURE', 'UM_INJURY_CALF_STRAIN',\n                                      'UM_INJURY_ANKLE_SPRAIN', 'UM_INJURY_HAMSTRING_STRAIN', 'UM_INJURY_PLANTAR_FASCIITIS', 'UM_INJURY_MEDIAL_TIBIAL_STRESS_SYNDROME', \n                                      'UM_INJURY_COMPARTMENT_SYNDROME', 'UM_INJURY_MORTON_NEUROMA', 'UM_INJURY_BURSITIS']]","db8d95fc":"df_1nj_19_bg = df_injuries_before_19_by_gender.groupby(by='GENDER').count()\ndf_i19 = df_1nj_19_bg.transpose()\ndf_i19['INDEX'] = df_i19.index.str.replace(\"UM_INJURY_\", \"\")\ndf_i19['INDEX'] = df_i19['INDEX'].str.replace(\"_\", \" \")\ndf_i19.set_index('INDEX', inplace=True)\ndf_i19.T","80ddaad4":"rcParams['figure.figsize'] = 9,9\nfig7, ax7 = plt.subplots()\nax7.set_title('Main injuries reported by FEMALE participants before 19', fontsize=16)\nax7.pie(df_i19.Female[df_i19.Female>0], labels=df_i19[df_i19.Female>0].index, autopct='%1.1f%%', startangle=30, pctdistance=0.7, labeldistance=1.05, shadow=True)\nax7.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()","5f3e2875":"# Plot a pie chart with % values\nrcParams['figure.figsize'] = 9,9\nfig10, ax10 = plt.subplots()\nax10.set_title('Main injuries reported by MALE participants before 19', fontsize=16)\n# theme = plt.get_cmap('Greys')\n# ax10.set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 30) for i in range(15)])\nexplode = [0.1, 0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nax10.pie(df_i19.Male[df_i19.Male>0], labels=df_i19[df_i19.Male>0].index, autopct='%1.1f%%', startangle=30, pctdistance=0.7, labeldistance=1.05, shadow=True, explode=explode)\nax10.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# plt.savefig(\"fig3.pdf\", orientation=\"landscape\", bbox_inches='tight')\nplt.show()\n","ae98008b":"df_age_and_injuries = df[['AGE_1ST_UM', 'UM_INJURY_KNEE_PAIN', 'UM_INJURY_ANKLE_TENDINOPATHY', 'UM_INJURY_ACHILLES_TENDINOPATHY',\n                          'UM_INJURY_HIP_FLEXOR_STRAIN', 'UM_INJURY_ILIOTIBIAL_BAND_ISSUE', 'UM_INJURY_FOOT_STRESS_FRACTURE', \n                          'UM_INJURY_TIBIA_STRESS_FRACTURE', 'UM_INJURY_CALF_STRAIN', 'UM_INJURY_ANKLE_SPRAIN',\n                          'UM_INJURY_HAMSTRING_STRAIN', 'UM_INJURY_PLANTAR_FASCIITIS', 'UM_INJURY_MEDIAL_TIBIAL_STRESS_SYNDROME',\n                          'UM_INJURY_COMPARTMENT_SYNDROME', 'UM_INJURY_MORTON_NEUROMA', 'UM_INJURY_BURSITIS',\n                          'EXERCISE_RELATED_STRESS_FRACTURE', 'HEMORRHOIDS', 'ANXIETY', 'DEPRESSION', 'CHRONIC_LOW_BACK_PAIN',\n                          'KNEE_MENISCUS_INJURY', 'ARRHYTMIA', 'HYPERTENSION', 'ALLERGIES', 'SLEEPING_DIFFICULTIES', \n                          'GASTRIC_ACID_REFLUX', 'EXERCISE_INDUCE_ASTHMA', 'CHRONIC_NECK_PAINS', 'MIGRAINES', 'OBESITY' ]]","fe22f4e2":"df_age_and_injuries_stats = df_age_and_injuries.groupby('AGE_1ST_UM').count()\ndf_age_and_injuries_stats.T","518fedb4":"df_nbr_UM_and_injuries = df[['NBR_UM_BEFORE_19', 'UM_INJURY_KNEE_PAIN', 'UM_INJURY_ANKLE_TENDINOPATHY', 'UM_INJURY_ACHILLES_TENDINOPATHY',\n                          'UM_INJURY_HIP_FLEXOR_STRAIN', 'UM_INJURY_ILIOTIBIAL_BAND_ISSUE', 'UM_INJURY_FOOT_STRESS_FRACTURE', \n                          'UM_INJURY_TIBIA_STRESS_FRACTURE', 'UM_INJURY_CALF_STRAIN', 'UM_INJURY_ANKLE_SPRAIN',\n                          'UM_INJURY_HAMSTRING_STRAIN', 'UM_INJURY_PLANTAR_FASCIITIS', 'UM_INJURY_MEDIAL_TIBIAL_STRESS_SYNDROME',\n                          'UM_INJURY_COMPARTMENT_SYNDROME', 'UM_INJURY_MORTON_NEUROMA', 'UM_INJURY_BURSITIS',\n                          'EXERCISE_RELATED_STRESS_FRACTURE', 'HEMORRHOIDS', 'ANXIETY', 'DEPRESSION', 'CHRONIC_LOW_BACK_PAIN',\n                          'KNEE_MENISCUS_INJURY', 'ARRHYTMIA', 'HYPERTENSION', 'ALLERGIES', 'SLEEPING_DIFFICULTIES', \n                          'GASTRIC_ACID_REFLUX', 'EXERCISE_INDUCE_ASTHMA', 'CHRONIC_NECK_PAINS', 'MIGRAINES', 'OBESITY']]","86a05cdf":"df_nbr_UM_and_injuries = df_nbr_UM_and_injuries.groupby('NBR_UM_BEFORE_19').count()\ndf_nbr_UM_and_injuries.T","bccb14ed":"df_women = df[['AGE_1ST_PERIOD', 'STOPPED_HAVING_PERIODS', 'EVER_BEEN_PREGNANT', 'NBR_PREGNANCIES', 'NBR_BIRTHS', 'AGE_1ST_PREGNANCY', 'AGE_MOST_RECENT_PREGNANCY']]\ndf_women.head()","a8742863":"# Medical history stats for women\nf, axes = plt.subplots(1, 3, figsize=(18, 4))\nsns.distplot(df_women.AGE_1ST_PERIOD, kde=False, bins=6, ax=axes[0])\nsns.distplot(df_women.AGE_1ST_PREGNANCY, kde=False, bins=6, ax=axes[1])\nsns.distplot(df_women.AGE_MOST_RECENT_PREGNANCY, kde=False, bins=6, ax=axes[2])","99dba9d9":"df_women[['AGE_1ST_PERIOD', 'AGE_1ST_PREGNANCY', 'AGE_MOST_RECENT_PREGNANCY']].describe()","8d4ba0f6":"# Medical history stats for women (pregnancy)\nf, axes = plt.subplots(1, 4, figsize=(24, 4))\nw0 = df_women.EVER_BEEN_PREGNANT.value_counts()\nw1 = df_women.NBR_PREGNANCIES.value_counts()\nw2 = df_women.NBR_BIRTHS.value_counts()\nw3 = df_women.STOPPED_HAVING_PERIODS.value_counts()\naxes[0].set(xlabel='EVER BEEN PREGNANT?')\naxes[1].set(xlabel='NUMBER OF PREGNANCIES')\naxes[2].set(xlabel='NUMBER OF BIRTHS')\naxes[3].set(xlabel='STOPPED HAVING PERIODS?')\nsns.barplot(w0.index, w0.values, ax=axes[0])\nsns.barplot(w1.index, w1.values, ax=axes[1])\nsns.barplot(w2.index, w2.values, ax=axes[2])\nsns.barplot(w3.index, w3.values, ax=axes[3])\nprint(w0)\nprint()\nprint(w1)\nprint()\nprint(w2)\nprint()\nprint(w3)","536b329f":"df_sub_assess = df[['CONSIDER_YOURSELF_HEALTHY', 'UM_RUNNING_BEFORE_19_EFFECT_IN_YOUR_HEALTH', 'RECOMMEND_CHILDREN_TO_RUN_UM']]\ndf_sub_assess","9c7f3f82":"# Self-assessment key stats\nf, axes = plt.subplots(1, 3, figsize=(18, 4))\nsa0 = df_sub_assess.CONSIDER_YOURSELF_HEALTHY.value_counts()\nsa1 = df_sub_assess.UM_RUNNING_BEFORE_19_EFFECT_IN_YOUR_HEALTH.value_counts()\nsa2 = df_sub_assess.RECOMMEND_CHILDREN_TO_RUN_UM.value_counts()\naxes[0].set(xlabel='CONSIDER YOURSELF HEALTHY?')\naxes[1].set(xlabel='EFFECT IN YOUR HEALTH OF UM RUNNING BEFORE 19?')\naxes[2].set(xlabel='RECOMMEND CHILDREN TO RUN UM?')\nsns.barplot(sa0.index, sa0.values, ax=axes[0])\nsns.barplot(sa1.index, sa1.values, ax=axes[1])\nsns.barplot(sa2.index, sa2.values, ax=axes[2])\nprint(sa0)\nprint()\nprint(sa1)\nprint()\nprint(sa2)","17dcb226":"# Additional pie charts \n\nfig, ax = plt.subplots(1,2, figsize=(16, 8))\n\n# theme = plt.get_cmap('Greys')\n# ax[0].set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 10) for i in range(5)])\n# ax[1].set_prop_cycle(\"color\", [theme(1. * (i+2) \/ 10) for i in range(5)])\n\nax[0].set_title('Effect of ultra running during childhood ', fontsize=16)\nax[1].set_title('Would you recommend ultra running during childhood?', fontsize=16)\n\nax[0].pie(sa1.values, labels=sa1.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True)\nax[0].axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nax[1].pie(sa2.values, labels=sa2.index, autopct='%1.1f%%', startangle=45, pctdistance=0.7, labeldistance=1.05, shadow=True)\nax[1].axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# plt.savefig(\"fig5.pdf\")\nplt.show()\n","52136417":"# Exercise addiction score\ndf_addict_score = df[['SPORT_IS_MOST_IMPORTANT_THING_IN_MY_LIFE', 'CONFLICTS_ARISEN_WITH_FAMILY_TOO_MUCH_SPORT', 'USE_EXERCISE_TO_CHANGE_MOOD',\n                      'INCREASED_AMOUNT_OF_SPORT_OVERTIME', 'FEEL_MOODY_WHEN_MISS_TRAINING', 'CANT_CUT_DOWN_SPORT_AMOUNT']]\n\ndf_addict_score","2126a0a8":"dict_response = {'Strongly disagree' : 1,\n                'Disagree' : 2,\n                'Neither agree nor disagree' : 3,\n                'Agree' : 4,\n                'Strongly agree' : 5\n                }\n\n# Function that returns the value from the dictionary\ndef response_value(st):\n  return dict_response[st]","b1e8ca5c":"for x in dict_response:\n  df_addict_score.replace(to_replace=x, value=response_value(x), inplace=True)","2592a194":"df_addict_score","82c69a28":"s = df_addict_score.sum(axis=1)\ndf_addict_score['SPORT_ADDICTION_SCORE'] = s\ndf_addict_score","4c291f2a":"# Sports addiction score distribution plot\nf, axes = plt.subplots(1, 1, figsize=(12, 6))\nsns.distplot(df_addict_score.SPORT_ADDICTION_SCORE, kde=False, bins=(0,13,24,30))","ee47f357":"- Out of the 78 participants, 73 of them (93%) have kept running after 19.\n- Out of 29 respondents, 17 (58%) intend to run another ultra-marathon.","9a50868b":"### Education, occupation and work status stats","9c811321":"### Male \/ female variation for the most common medical conditions during childhood (related to UM running) ","4f958e1a":"# Adult medical history\n---","ee4db3ea":"Above are four distribution charts for:\n- age of the first ultra-marathon; note several participants claimed to have run ultra-marathons as early as with 8 or 9 years of age!\n- number of ultra-marathons run before the age of 19\n- distance of the first ultra-marathon (in km)\n- average weekly UM training distance before the age of 19 ","100330e7":"# Medical history for women\n---","04b27acc":"### Diet","8d1c96cf":"According to the Wikipedia, an ultramarathon, also called ultra distance or ultra running, is any footrace longer than the traditional marathon length of 42.195 kilometres (26.219 miles).\n\nThere are several modalities of the ultra distance running competitions, with 50 Km and 100 Km (and also 50 and 100 miles) being popular, as are also other races beyond 42 km forming part of multi-sport competitions of the likes of triathlon or Iron Man.\n\nThis notebook performs basic statistical and exploratory analysis of the responses to a survey conducted in January 2020 about the potential impact of running ultra-marathons during childhood (before the age of 19). \n\nDISCLAIMER: I am not a doctor, I just help doctors with maths and algorithmics. I decline therefore any responsibility deriving from the use of any information contained in this notebook. Formal results of this research are in the process of being reviewed for publication in specialized literature.","5d01f6e8":"(End of notebook)\n\n\n---\n\n","c0e1654a":"Below are the different medical conditions reported by participants in the study and their frequency.","8bd346e0":"### Height, weight and BMI stats","2e7ced0d":"Out of the 78 participants in the study, 60 (77%) reported not having suffered any injury associated to their UM training or competing.","a6d0c1b3":"So this is the break down of injuries reported by the participants in the study, related to their UM activity before the age of 19.\n\nThe total count of injuries reported (some participants reported more than one injury) is 34.\n\nGrouped injuries into FRACTURES and OTHER:\n\n- FRACTURES:  5 (15%)\n- OTHER:     29 (85%)   ","63e1fa97":"### Male \/ female variation for the most common medical conditions during adulthood ","a09e6c1a":"---\n\n# Childhood Ultra-Marathon Runner Study  - January 2020\n\n---\n","2c46af9c":"The above table is the sum of reports of each condition so males score higher just because there are many more males than females in the sample.\n\nBut the pie charts below still allow for comparison between genders because they are calculated as a % of the total of conditions reported by participants of that gender. In other words, whilst the table can not be used to assess the prevalence of diseases by gender, the charts below do provide meaningful insight in that respect.","64c94bea":"# Searching for specific insights\n---","5dc35839":"Out of the 78 participants in the study, 73 (93,6%) did practise other sports, whilst only 5 (6,4%) did not. ","eb71dcc1":"The correlation matrix shows some known facts, like the link between some types of injuries with the increasing lengths of the marathons.\n\nIt does not show however a clear correlation between running surface and injuries, which was one of the expected insights.","2bf414ab":"### Birth place and ethnic origin stats","bdd586cd":"# Health habits\n\n\n---","9d24f4a2":"The above pie chart shows other popular sports among the participants of the study.","2e4528d9":"This is now a purely numeric dataset, so it could be used to train a predictive model so to make predictions of variables like UM_INJURY_MISSED_TRAINING_BEFORE_19 (Yes\/No) or UM_INJURY_AFFECTED_ACADEMIC_PERF_BEFORE_19 (Yes\/No). \n\nHowever, the number of samples is 78 which is possibly a bit too low for any decent modeling.\n\nLet's have a look at the correlation between these variables.. ","f20dd4e1":"# Subjective assessment of participants\n---","fade3ef4":"The above pie chart illustrates the main reasons why the study participants stopped running UM.\n","62a9883a":"### Exercise addiction score","a15c87dd":"### Data loading","04ec0044":"### Resons for stopping running ultra-marathons after 19","86fb8786":"### Handling of null values","d2c2e1d1":"### Correlation of variables in the Childhood UM Running History subset","a157eadb":"### Correlation between the age of the first UM and injuries","03eedd97":"### Reasons for running UM before the age of 19","4d0691da":"### Marital status and children stats","471852ea":"- Out of 18 respondents, 10 (~55%) did not miss UM training or competitions due to injury, whilst 8 did.\n- Out of 78 respondents, 70 (~90%) did not feel their UM activity affected their academic performance, whilst 3 did and 5 were not sure.\n- Out of 78 respondents, 60 (~77%) did not believe their UM activity affected their performance at other sports, whilst 4 did and 14 were not sure.","ee4a31f1":"### Correlation between number of UM before 19 and injuries","9f397aee":"# Adulthood Exercise History \n---","7600df77":"### Other sports practised by participants before the age of 19","38dd9d8d":"# Childhood Ultra-Marathon Running History\n---","342e50c1":"### Impact of UM competing and training to other activities under the age of 19","70c36304":"# Demographic Analysis\n---\n\nAfter cleaning the dataset, a sample of **n = 78** valid responses are used for the analysis.\n\nSamples with age <= 18, outliers, and incomplete answers have all been removed.\n\nMissing data such as HEIGHT_AT_25 or WEIGHT_AT_25 in some records have been filled with the CURRENT values.","d5ab3552":"### Drinking","e0c6712b":"### Analysis of injuries associated to UM running or training before the age of 19","03fea725":"### Age and gender stats","5cd58d41":"### Smoking"}}