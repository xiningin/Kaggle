{"cell_type":{"fdfd48e5":"code","922d6d11":"code","7def499d":"code","6dd33e51":"code","6424cdaa":"code","d79f943a":"code","9840fd52":"code","65db46b4":"code","639a9ebd":"code","0e966ae0":"code","5bb473f6":"code","5aaac1ae":"code","2bda544d":"code","df8b85da":"code","7a572b1c":"code","2ba36ce0":"code","f7742cbb":"code","c6d16fc1":"code","ed06294c":"code","43e50c2e":"code","602cb786":"code","8bdbdd26":"markdown","894307f8":"markdown","a1fe335c":"markdown","99f8376f":"markdown","55c64966":"markdown","f97e054b":"markdown","2311c12c":"markdown","60b0c395":"markdown","24c43e79":"markdown","41ae2c2a":"markdown","3e31b703":"markdown","d673cdd2":"markdown","5b4161eb":"markdown","56d8efb0":"markdown","6e698fd5":"markdown","fab28115":"markdown","393e9990":"markdown","73935ef3":"markdown","348f13de":"markdown","6c777dd6":"markdown","64367acb":"markdown","1b72bf4f":"markdown","0a452dd3":"markdown"},"source":{"fdfd48e5":"# Work with Data - the main Python libraries\nimport numpy as np\nimport pandas as pd\n\n# For import data from API\nimport requests\n\n# Visualization\nimport matplotlib.pyplot as plt\n\n# Modeling and Prediction\nfrom fbprophet import Prophet\n\nimport warnings\nwarnings.simplefilter('ignore')","922d6d11":"# Thanks to https:\/\/api-covid19.rnbo.gov.ua\/\n# https:\/\/api-covid19.rnbo.gov.ua\/charts\/main-data?mode=ukraine\nprint(f'Download confirmed daily data from RNBO of Ukraine')\nmyfile = requests.get('https:\/\/api-covid19.rnbo.gov.ua\/charts\/main-data?mode=ukraine')\nopen('data', 'wb').write(myfile.content)\ndf_data = pd.read_json('data')\ndf_data","7def499d":"# Display the last 10 rows of the dataframe \"df_data\"\n","6dd33e51":"# Calculation daily data for number of confirmed cases\ndf_data['n_confirmed'] = df_data['confirmed'].diff()","6424cdaa":"# Filtering the missing data\ndata = df_data[['dates','n_confirmed']].dropna().reset_index(drop=True)\ndata['n_confirmed'] = data['n_confirmed'].astype('int')\ndata.tail(5)","d79f943a":"# Build the plot\ndata['n_confirmed'].plot()","9840fd52":"# Prepairing data for modeling with Prophet\ndata.columns = ['ds', 'y']\ndata.tail()","65db46b4":"# Removing zero values\ndata = data[data['y'] > 0].reset_index(drop=True)\ndata","639a9ebd":"# Build the plot for July\ndf = data[(data['ds'] >= '2020-07-01') & (data['ds'] < '2020-08-01')]\ndf['y'].plot()","0e966ae0":"# The smallest value\ndf.loc[113,:]","5bb473f6":"# Selection data with the biggest wave\ndf2 = data[113:].reset_index(drop=True)\ndf2.head()","5aaac1ae":"# Build Prophet model\nmodel = Prophet()\n\n# Training model for all data\nmodel.fit(data)","2bda544d":"# Build Prophet model with parameters ans structure \n# from the notebook https:\/\/www.kaggle.com\/vbmokin\/covid-19-in-ukraine-eda-forecasting \n# but without holidays\nmodel2 = Prophet(daily_seasonality=False, weekly_seasonality=False, yearly_seasonality=False, \n                changepoint_range=1, changepoint_prior_scale = 0.3)\nmodel2.add_seasonality(name='weekly', period=7, fourier_order=12, \n                      mode = 'multiplicative', prior_scale = 0.24)\nmodel2.add_seasonality(name='triply', period=3, fourier_order=2, \n                      mode = 'multiplicative', prior_scale = 0.15)\n\n# Training model for df2\nmodel2.fit(df2)","df8b85da":"# Make a forecast for 7 days ahead\nfuture = model.make_future_dataframe(periods = 7)\nforecast = model.predict(future)","7a572b1c":"# Draw plot of the values with forecasting data\nfigure = model.plot(forecast, xlabel = 'Date', ylabel = 'Number of confirmed cases')","2ba36ce0":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\nfigure_component = model.plot_components(forecast)","f7742cbb":"# Ouput the prediction for the next 7 days\nforecast[['yhat_lower', 'yhat', 'yhat_upper']] = forecast[['yhat_lower', 'yhat', 'yhat_upper']].astype('int')\nforecast[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(7)","c6d16fc1":"# Make a forecast for 7 days ahead\n","ed06294c":"# Draw plot of the values with forecasting data\n","43e50c2e":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\n","602cb786":"# Ouput the prediction for the next 7 days\n","8bdbdd26":"#### Thanks to https:\/\/api-covid19.rnbo.gov.ua\/","894307f8":"### It is recommended to start studying this course from another notebook \"[AI-ML-DS Training. L1T: Titanic - Decision Tree](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-l1t-titanic-decision-tree)\" - and then move on to this notebook.","a1fe335c":"# The concept of training:\n* the **last version (commit)** of the notebook has:\n        * the basic tasks (after \"TASK:\")\n        * the additional tasks for self-execution (after \"ADDITIONAL TASK:\")\n* the **previuos version (commit)** of the notebook has **answers** for the basic tasks","99f8376f":"## 3. EDA & FE<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","55c64966":"**ADDITIONAL TASK:** Try to specify another number (instead of 113) as a reference point (until the second wave in summer) or other.\nLook all data with plot here: https:\/\/covid19.rnbo.gov.ua\/","f97e054b":"### Selection data with the biggest wave","2311c12c":"**ADDITIONAL TASK:** Try changing the parameters of the Prophet model and evaluate how this will affect the shape of the curve and the accuracy of the simulation","60b0c395":"### For all data","24c43e79":"## Acknowledgements\n\n### Datasets:\n- official data of Ukraine (https:\/\/covid19.rnbo.gov.ua\/) - via API\n- my dataset [COVID-19 in Ukraine: daily data](https:\/\/www.kaggle.com\/vbmokin\/covid19-in-ukraine-daily-data) - for the next commits\n- my dataset with holidays data [COVID-19: Holidays of countries](https:\/\/www.kaggle.com\/vbmokin\/covid19-holidays-of-countries) - for the next commits\n\n### Notebooks:\n* [Data Science for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/data-science-for-tabular-data-advanced-techniques)\n* [EDA for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/eda-for-tabular-data-advanced-techniques)\n* [COVID in UA: Prophet with 4, Nd seasonality](https:\/\/www.kaggle.com\/vbmokin\/covid-in-ua-prophet-with-4-nd-seasonality)\n* [COVID-19 in Ukraine: EDA & Forecasting](https:\/\/www.kaggle.com\/vbmokin\/covid-19-in-ukraine-eda-forecasting)\n* [COVID-19 new cases in 70 countries - FB Prophet](https:\/\/www.kaggle.com\/vbmokin\/covid-19-new-cases-in-70-countries-fb-prophet)\n\n### Libraries from GitHub:\n- https:\/\/facebook.github.io\/prophet\/\n- https:\/\/facebook.github.io\/prophet\/docs\/\n- https:\/\/github.com\/facebook\/prophet\n- https:\/\/github.com\/dr-prodigy\/python-holidays","41ae2c2a":"### For the biggest wave - df2","3e31b703":"## 5. Prediction & Visualization<a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","d673cdd2":"<a class=\"anchor\" id=\"0\"><\/a>\n# [AI-ML-DS : Training for beginners](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-for-beginners-in-kaggle). Level 1 (very simple). 2020\n## Kaggle GM, Prof. [@vbmokin](https:\/\/www.kaggle.com\/vbmokin)\n### [Vinnytsia National Technical University](https:\/\/vntu.edu.ua\/), Ukraine\n#### [Chair of the System Analysis and Information Technologies](http:\/\/mmss.vntu.edu.ua\/index.php\/ua\/)","5b4161eb":"**TASK:** Make similar calculations for the dataframe df2 using model2:\n1. Make a forecast for it for 7 days ahead.\n2. Draw a plot of the values with forecasting data.\n3. Draw plot with the components (trend and weekly seasonality) of the forecasts.\n4. Ouput the prediction for the next 7 days.","56d8efb0":"## 1. Import libraries<a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","6e698fd5":"## Dataset [COVID-19 in Ukraine: daily data](https:\/\/www.kaggle.com\/vbmokin\/covid19-in-ukraine-daily-data)","fab28115":"### For all data","393e9990":"### For the biggest wave - df2","73935ef3":"## 4. Modeling<a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","348f13de":"**ADDITIONAL TASK:** Try to make a prediction for another value - not the number of new confirmed cases, but the number of deaths or other in the dataframe df_data.","6c777dd6":"I hope you find this notebook useful and enjoyable.\n\nYour comments and feedback are most welcome.\n\n[Go to Top](#0)","64367acb":"<a class=\"anchor\" id=\"0.1\"><\/a>\n## Table of Contents\n\n1. [Import libraries](#1)\n1. [Download data](#2)\n1. [EDA & FE](#3)\n1. [Modeling](#4)\n1. [Prediction & Visualization](#5)","1b72bf4f":"**TASK:** Display the last 10 rows of the dataframe \"df_data\".","0a452dd3":"## 2. Download data<a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)"}}