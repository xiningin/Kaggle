{"cell_type":{"7e3fd403":"code","754c62a3":"code","1009c780":"code","d6cabbe2":"code","5cf9e6cf":"code","e2659cb5":"code","2f27d671":"code","0146951b":"code","6ef7a7fb":"code","72b43364":"code","456a33ed":"code","70d01194":"code","b527295c":"code","3fa1d3ea":"code","28c06263":"code","269c52dd":"code","403801f6":"code","d6f01409":"code","8e4d638f":"code","d926aa54":"code","6b646870":"code","a729024c":"code","9ad813bb":"code","b4e1035a":"code","c3db0f6e":"code","c0f4367c":"code","edc53011":"code","3e06d397":"code","dddbf0e9":"code","4324f376":"code","2e42b7f3":"code","7fa669bf":"code","75824fc8":"code","9684c3e6":"code","50b8fcec":"markdown"},"source":{"7e3fd403":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\n#Plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n#Some styling\nsns.set_style(\"whitegrid\")\nplt.style.use(\"fivethirtyeight\")\n\nimport plotly.io as pio\npio.templates.default = 'presentation'\n\n#Subplots\nfrom plotly.subplots import make_subplots\n\n\n#Showing full path of datasets\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')","754c62a3":"df = pd.read_csv('..\/input\/dc-residential-properties\/DC_Properties.csv')\ndf.drop('Unnamed: 0', axis=1, inplace=True)\ndf.head()","1009c780":"df.columns","d6cabbe2":"df['PRICE'].describe()","5cf9e6cf":"df['PRICE'].quantile(0.98) # 98% of data","e2659cb5":"df = df[df['PRICE'] < 2050000.0]","2f27d671":"df_ori = pd.read_csv('..\/input\/dc-residential-properties\/DC_Properties.csv')\ndf_ori.drop('Unnamed: 0', axis=1, inplace=True)\n\n## to findout outliers lets divide data PRICE different price ranges to identify number of occurences of data in different price ranges\ndf_ori['PriceRange'] = np.where(df_ori['PRICE'] <= 100000, '0-100,000',  \n                                       np.where ((df_ori['PRICE'] > 100000) & (df_ori['PRICE'] <= 1000000), '100,001 - 1M',\n                                                np.where((df_ori['PRICE'] > 1000000) & (df_ori['PRICE'] <= 3000000), '1M - 3M',\n                                                        np.where((df_ori['PRICE']>3000000) & (df_ori['PRICE']<=5000000), '3M - 5M',\n                                                                np.where((df_ori['PRICE']>5000000) & (df_ori['PRICE']<=6000000), '5M - 6M',\n                                                                        np.where((df_ori['PRICE']>6000000) & (df_ori['PRICE']<=7000000), '6M - 7M',\n                                                                                np.where((df_ori['PRICE']>7000000) & (df_ori['PRICE']<=8000000), '7M-8M', \n                                                                                         np.where((df_ori['PRICE']>8000000) & (df_ori['PRICE']<=9000000), '8M-9M', \n                                                                                                 np.where((df_ori['PRICE']>9000000) & (df_ori['PRICE']<=10000000), '9M-10M', \n                                                                                                         np.where((df_ori['PRICE']>10000000) & (df_ori['PRICE']<=11000000), '10M-11M', \n                                                                                                                 np.where((df_ori['PRICE']>11000000) & (df_ori['PRICE']<=12000000), '11M-12M', '')\n                                                                                                                 ))))))))))","0146951b":"df_ori.groupby(['PriceRange']).agg({'PriceRange': ['count']})","6ef7a7fb":"fig, ax = plt.subplots(figsize=(18,8))\nsns.heatmap(df.isnull(), yticklabels=False,cmap='viridis')","72b43364":"plt.figure(figsize=(20, 10))\nsns.boxplot(x = 'ROOMS', y = \"PRICE\", data=df);\nplt.ylabel(\"Price\");","456a33ed":"plt.figure(figsize=(20, 10))\nsns.boxplot(x = 'BATHRM', y = \"PRICE\", data=df);\nplt.ylabel(\"Price\");","70d01194":"plt.figure(figsize=(10,8))\nsns.scatterplot(y=np.log(df['PRICE']),x=df['NUM_UNITS'],data=df,hue='WARD').set_title(\"\",fontsize=20);","b527295c":"fig, axarr = plt.subplots(4, 1, figsize=(18, 40))\nfig.suptitle('Locations',fontsize=15)\n\nsns.scatterplot(y=df['LATITUDE'],x=df['LONGITUDE'],hue=df['WARD'],palette='husl',ax=axarr[0]).set_title('Lattitude-Longitude, Ward')\nsns.scatterplot(y=df['LATITUDE'],x=df['LONGITUDE'],hue=df['GRADE'],palette='Set1',ax=axarr[1]).set_title('Lattitude-Longitude, Grade')\nsns.scatterplot(y=df['LATITUDE'],x=df['LONGITUDE'],hue=df['CNDTN'],palette='Set1',ax=axarr[2]).set_title('Lattitude-Longitude, CNDTN')\nsns.scatterplot(y=df['LATITUDE'],x=df['LONGITUDE'],hue=df['QUADRANT'],palette='Set1',ax=axarr[3]).set_title('Lattitude-Longitude, Quadrant')\n\n\nplt.show()","3fa1d3ea":"df['ASSESSMENT_NBHD'].value_counts()","28c06263":"map_suburb = df.groupby(['WARD','ASSESSMENT_NBHD'],as_index=False)['LATITUDE','LONGITUDE','PRICE'].median()\nmap_suburb","269c52dd":"plt.figure(figsize=(28,10))\nplt.title('Correlation heatmap', fontsize=20)\ncorr_matrix=df.corr()\nmask = np.zeros_like(corr_matrix)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr_matrix,annot=True ,cbar = True,cmap=\"YlGnBu\",mask=mask);","403801f6":"ward_map = df.groupby(['WARD'],as_index=False)['LATITUDE','LONGITUDE','PRICE'].median()\nward_map","d6f01409":"ward_map.sort_values('PRICE', ascending=False)","8e4d638f":"ward_map.describe()","d926aa54":"map_suburb.isnull().sum()","6b646870":"map_suburb.dropna(inplace=True)","a729024c":"fig = px.scatter_mapbox(map_suburb,\n                        lat=\"LATITUDE\",\n                        lon=\"LONGITUDE\",\n                        color='PRICE',\n                        mapbox_style='open-street-map',\n                        hover_name='ASSESSMENT_NBHD',\n                        color_continuous_scale=px.colors.cyclical.IceFire,\n                        size='PRICE',\n#                         center={\"lat\": -37.8136, \"lon\": 144.9631},\n                        zoom=12,\n                        hover_data=['WARD','ASSESSMENT_NBHD','PRICE'],\n                       title='Average Price in different wards and NBHD')\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(template='plotly_dark',margin=dict(l=20,r=20,t=40,b=20))\nfig.show()","9ad813bb":"plt.figure(figsize=(18,10))\nca_count=sns.countplot(df['ASSESSMENT_NBHD'])\nca_count.set_xticklabels(ca_count.get_xticklabels(),rotation=90);","b4e1035a":"fig=plt.figure(figsize=(18,22))\n\ntable = df.groupby(['ASSESSMENT_NBHD'],as_index=False)['PRICE'].median().sort_values(by='PRICE',ascending=False)\n\nsns.boxplot(data=df,x='PRICE',y='ASSESSMENT_NBHD',order=table['ASSESSMENT_NBHD'].to_list());\nplt.yticks(fontsize=18);\nplt.xticks(fontsize=18);\nplt.ylabel(\"ASSESSMENT_NBHD\",fontsize=22);\nplt.xlabel(\"PRICE\",fontsize=22);","c3db0f6e":"fig=plt.figure(figsize=(18,16))\n\ntable = df.groupby(['WARD'],as_index=False)['PRICE'].median().sort_values(by='PRICE',ascending=False)\n\nsns.boxplot(data=df,x='PRICE',y='WARD',order=table['WARD'].to_list());\nplt.yticks(fontsize=18);\nplt.xticks(fontsize=18);\nplt.ylabel(\"WARD\",fontsize=22);\nplt.xlabel(\"PRICE\",fontsize=22);","c0f4367c":"fig=px.histogram(df,x='PRICE',color='WARD',barmode=\"overlay\")\nfig.show()\n\nfig=plt.figure(figsize=(15,10))\nfig=sns.boxplot(data=df,x='PRICE',y='WARD',palette='Dark2')\nplt.yticks(fontsize=18);\nplt.xticks(fontsize=18);\nplt.ylabel(\"\",fontsize=22);\nplt.xlabel(\"PRICE\",fontsize=22);\nplt.show()","edc53011":"years = df[df['YR_RMDL'] < 2000]","3e06d397":"df.drop(56600, inplace=True)","dddbf0e9":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=years['YR_RMDL'], y=years['PRICE'],\n                    mode='lines+markers',\n                    name='Average Price over the years'))\n\nfig.show()","4324f376":"# Regions vs Price barplot\nplt.figure(figsize=(22, 8))\nsns.barplot(x=df['HEAT'], y=df['PRICE'])\nplt.title(\"Graph of the heat vs Price\", fontsize=16)\nplt.ylabel('Price (M)', fontsize=12)\nplt.xlabel('Heat', fontsize=12)","2e42b7f3":"df = pd.read_csv('..\/input\/dc-residential-properties\/DC_Properties.csv')\ndf.drop('Unnamed: 0', axis=1, inplace=True)\ndf.head()","7fa669bf":"!pip install autoviz\n!pip install xlrd","75824fc8":"import pandas as pd \nfrom autoviz.AutoViz_Class import AutoViz_Class\nAV = AutoViz_Class()","9684c3e6":"df = AV.AutoViz('..\/input\/dc-residential-properties\/DC_Properties.csv')","50b8fcec":"# Clustering"}}