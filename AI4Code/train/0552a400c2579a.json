{"cell_type":{"62a8c109":"code","0afc7ccb":"code","13074825":"code","45664294":"code","e3fe31dc":"code","3226918c":"code","26c063c7":"code","1a5fbdf9":"code","529801a1":"code","c826d856":"code","8c9a0165":"code","a7574433":"code","a058942c":"code","c6420deb":"code","32c67981":"code","b3dbc9e3":"code","135a50a1":"code","7b30d22f":"code","d5f84fe0":"code","eee2bb63":"code","1e7b2fab":"code","f2edf7f0":"code","f3c37e47":"code","8251ce33":"code","25d74989":"markdown","fce52f74":"markdown","51e094f8":"markdown","fab10ddf":"markdown","f622a66d":"markdown","60518218":"markdown","ff640c08":"markdown","88ea5bba":"markdown","49ed63f7":"markdown","1b54dc91":"markdown","d46b7439":"markdown","8501da36":"markdown","6d72e188":"markdown","c6de3224":"markdown"},"source":{"62a8c109":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"classic\")\n\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0afc7ccb":"train=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\nsample_submission=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\n\n","13074825":"train.columns","45664294":"train.info()","e3fe31dc":"train.head()","3226918c":"train.describe()","26c063c7":"train.corr()","1a5fbdf9":"plt.style.use(\"seaborn-whitegrid\")\ndef bar_plot(variable):\n    \"\"\"\n        input: variable :Street\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train[variable]\n    # count number of categorical variable\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (10,5))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    \n    ","529801a1":"categorical_variable=[\"MSZoning\",\"Street\",\"Alley\",\"LotShape\",\"MiscFeature\",\"SaleType\",\"SaleCondition\",\"LotConfig\"]\n\nfor i in categorical_variable:\n    bar_plot(i)","c826d856":"def plot_hist(variable):\n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.hist(train[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","8c9a0165":"Numerical_variable=[\"MSSubClass\",\"LotFrontage\",\"MoSold\",\"YrSold\",\"SalePrice\"]\n\nfor n in Numerical_variable:\n    plot_hist(n)","a7574433":"#YrSold vs SalePrice\ntrain[[\"YrSold\",\"SalePrice\"]].groupby([\"YrSold\"],as_index=False).mean().sort_values(\"SalePrice\",ascending=True)","a058942c":"#MSSubClass vs SalePrice\ntrain[[\"MSSubClass\",\"SalePrice\"]].groupby([\"MSSubClass\"],as_index=False).mean().sort_values(\"SalePrice\",ascending=False)","c6420deb":"#YrSold vs MSSubClass\ntrain[[\"YrSold\",\"MSSubClass\"]].groupby([\"YrSold\"],as_index=False).mean().sort_values(\"MSSubClass\",ascending=True)","32c67981":"#MSSubClass vs LotArea\ntrain[[\"MSSubClass\",\"LotArea\"]].groupby([\"MSSubClass\"]).mean().sort_values(\"LotArea\",ascending=False)","b3dbc9e3":"train.head()","135a50a1":"train.columns[train.isnull().any()]","7b30d22f":"train[\"LotFrontage\"].astype(\"object\")","d5f84fe0":"\ntrain[\"LotFrontage\"].isnull().sum()","eee2bb63":"train.head()","1e7b2fab":"train[train[\"LotFrontage\"].isnull()]","f2edf7f0":"train.boxplot(column=\"MSSubClass\",by=\"LotFrontage\")\nplt.show()","f3c37e47":"train[\"LotFrontage\"]=train[\"LotFrontage\"].fillna(\"55\")","8251ce33":"train[train[\"LotFrontage\"].isnull()]","25d74989":"Numerical","fce52f74":"LotFronte ile MSSubclass aras\u0131ndaki ili\u015fkiye bakal\u0131m.","51e094f8":"train df i\u00e7inde null olan columnslar","fab10ddf":"<a id='2'><a><br>\n## Data fields","f622a66d":"<a id='1'><a><br>\n## Load and Check Data","60518218":"LotFronte columns i\u00e7inde ilk 20 deger i\u00e7inde ka\u00e7 tane null oldugunu bulduk.\nDatam\u0131z\u0131n Bozulmamas\u0131 i\u00e7inde train=Data e\u015fitledik.","ff640c08":"<a id = '4'><a><br>\n## Data Analysis\n    \n    \n* SubClass - SalePrice\n* YrSold - SubClass\n* LotArea - SubClass\n* YrSold - SalePrice","88ea5bba":"Categorical","49ed63f7":"Bu nan degerlerinin nerelerde oldugunu bulal\u0131m","1b54dc91":"<a id=5><a><br>\n## Missing Value\n    \n* Find Missing Value\n* Fill Missing Value","d46b7439":"Here's a brief version of what you'll find in the data description file:\n\n1. SalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.\n1. MSSubClass: The building class\n1. MSZoning: The general zoning classification\n1. LotFrontage: Linear feet of street connected to property\n1. LotArea: Lot size in square feet\n1. Street: Type of road access\n1. Alley: Type of alley access\n1. LotShape: General shape of property\n1. LandContour: Flatness of the property\n1. Utilities: Type of utilities available\n1. LotConfig: Lot configuration\n1. LandSlope: Slope of property\n1. Neighborhood: Physical locations within Ames city limits\n1. Condition1: Proximity to main road or railroad\n1. Condition2: Proximity to main road or railroad (if a second is present)\n1. BldgType: Type of dwelling\n1. HouseStyle: Style of dwelling\n1. OverallQual: Overall material and finish quality\n1. OverallCond: Overall condition rating\n1. YearBuilt: Original construction date\n1. YearRemodAdd: Remodel date\n1. RoofStyle: Type of roof\n1. RoofMatl: Roof material\n1. Exterior1st: Exterior covering on house\n1. Exterior2nd: Exterior covering on house (if more than one material)\n1. MasVnrType: Masonry veneer type\n1. MasVnrArea: Masonry veneer area in square feet\n1. ExterQual: Exterior material quality\n1. ExterCond: Present condition of the material on the exterior\n1. Foundation: Type of foundation\n1. BsmtQual: Height of the basement\n1. BsmtCond: General condition of the basement\n1. BsmtExposure: Walkout or garden level basement walls\n1. BsmtFinType1: Quality of basement finished area\n1. BsmtFinSF1: Type 1 finished square feet\n1. BsmtFinType2: Quality of second finished area (if present)\n1. BsmtFinSF2: Type 2 finished square feet\n1. BsmtUnfSF: Unfinished square feet of basement area\n1. TotalBsmtSF: Total square feet of basement area\n1. Heating: Type of heating\n1. HeatingQC: Heating quality and condition\n1. CentralAir: Central air conditioning\n1. Electrical: Electrical system\n1. 1stFlrSF: First Floor square feet\n1. 2ndFlrSF: Second floor square feet\n1. LowQualFinSF: Low quality finished square feet (all floors)\n1. GrLivArea: Above grade (ground) living area square feet\n1. BsmtFullBath: Basement full bathrooms\n1. BsmtHalfBath: Basement half bathrooms\n1. FullBath: Full bathrooms above grade\n1. HalfBath: Half baths above grade\n1. Bedroom: Number of bedrooms above basement level\n1. Kitchen: Number of kitchens\n1. KitchenQual: Kitchen quality\n1. TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n1. Functional: Home functionality rating\n1. Fireplaces: Number of fireplaces\n1. FireplaceQu: Fireplace quality\n1. GarageType: Garage location\n1. GarageYrBlt: Year garage was built\n1. GarageFinish: Interior finish of the garage\n1. GarageCars: Size of garage in car capacity\n1. GarageArea: Size of garage in square feet\n1. GarageQual: Garage quality\n1. GarageCond: Garage condition\n1. PavedDrive: Paved driveway\n1. WoodDeckSF: Wood deck area in square feet\n1. OpenPorchSF: Open porch area in square feet\n1. EnclosedPorch: Enclosed porch area in square feet\n1. 3SsnPorch: Three season porch area in square feet\n1. ScreenPorch: Screen porch area in square feet\n1. PoolArea: Pool area in square feet\n1. PoolQC: Pool quality\n1. Fence: Fence quality\n1. MiscFeature: Miscellaneous feature not covered in other categories\n1. MiscVal: $Value of miscellaneous feature\n1. MoSold: Month Sold\n1. YrSold: Year Sold\n1. SaleType: Type of sale\n1. SaleCondition: Condition of sale","8501da36":"# \u0130ntroduction\n\n\nIn this data dataset, we will examine the train data.\n\n\n\n<font color ='purple'>\nConcate:\n    \n1. [Load and Check Data](#1)\n1. [Data fields](#2)\n1. [Variable Analysis](#3)\n1. [Data Analysis](#4)\n1. [Missing Value](#5)\n","6d72e188":"**Categorical Variable**: MSZoning,Street,Alley,LotShape,LandContour,SaleType,SaleCondition,MiscFeature,LotConfig ...\n\n**Numerical Variable**: MSSubClass,LotFrontage,LotArea,lotShape,PoolArea,MicVal,MoSold,YrSold,SaleType,SalePrice ...","c6de3224":"<a id = '3'><a><br>\n## Variable Analysis\n    \n"}}