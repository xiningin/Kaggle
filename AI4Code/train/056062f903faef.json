{"cell_type":{"16521e74":"code","62b2fbcf":"code","e6196c37":"code","f078daae":"code","1502da8c":"code","8b7ce1ce":"code","c2a4b2da":"code","b4b4f5ec":"code","61dc8565":"code","9bfcb7ac":"code","a2aa47fb":"code","180899d6":"code","ee9cdadb":"code","a1b8b4de":"code","3ec29852":"code","60818fb0":"code","507546ca":"code","a60519a9":"code","6590b5ba":"code","19f03be1":"code","16f5ddd5":"code","0f4b3d16":"code","5e3e758c":"code","e4edaf0d":"code","5bf07448":"code","fa00bc93":"markdown"},"source":{"16521e74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport pandas_profiling as npp\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","62b2fbcf":"df = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")","e6196c37":"report = npp.ProfileReport(df)","f078daae":"report","1502da8c":"plt.scatter(df.age,df.sex)","8b7ce1ce":"df.isnull().sum()","c2a4b2da":"df","b4b4f5ec":"x = df.drop(\"target\",axis='columns')\ny = df['target']","61dc8565":"x_train,x_test,y_train,y_test =train_test_split(x,y,test_size=0.2,random_state=40)","9bfcb7ac":"model = LogisticRegression()","a2aa47fb":"model.fit(x_train,y_train)","180899d6":"x_test","ee9cdadb":"predicted_y = model.predict(x_test)","a1b8b4de":"x_test['result']= model.predict(x_test)","3ec29852":"x_test","60818fb0":"x_test.drop(\"result\",axis='columns',inplace=True)","507546ca":"x_test.head()","a60519a9":"from sklearn.metrics import confusion_matrix","6590b5ba":"cm = confusion_matrix(y_test,predicted_y)","19f03be1":"predicted_y","16f5ddd5":"y_test","0f4b3d16":"cm","5e3e758c":"import seaborn as sns","e4edaf0d":"sns.heatmap(cm,annot=True)\nplt.xlabel(\"actual\")\nplt.ylabel(\"prediced\")","5bf07448":"model.score(x_test,y_test)","fa00bc93":"# confusion matrix"}}