{"cell_type":{"c550e9d0":"code","3dfd5d43":"code","fdc35965":"code","67be0e55":"code","fb68b9fd":"code","867934a7":"code","8207e3e2":"code","4645beb6":"code","81cc69ec":"code","10760d96":"code","01a456ba":"code","fe78662c":"code","c5ef8bcf":"markdown","363a8eff":"markdown","c43e4b12":"markdown","80fdf59e":"markdown","c3c7772a":"markdown","7ef427ea":"markdown","2546148a":"markdown","c42292aa":"markdown","291f7739":"markdown","344a7e75":"markdown","b7111694":"markdown"},"source":{"c550e9d0":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","3dfd5d43":"df=pd.read_csv('\/kaggle\/input\/insurance-prediction\/insurance.csv')\ndf.head()","fdc35965":"df.isnull().sum()","67be0e55":"df.describe()","fb68b9fd":"import seaborn as sns\nf, ax = plt.subplots(figsize=(10, 7))\n\ncorr = df.corr()\nsns.heatmap(corr, cmap=\"Blues\", annot=True)","867934a7":"plt.figure(figsize=(10, 5))\n\n# grouped barplot\nax = sns.barplot(\n    x=\"smoker\", \n    y=\"charges\", \n    data=df, \n    ci=None,\n    palette=[\"cornflowerblue\", \"khaki\"]\n    )\nax.set_xticklabels(['Non smoker','Smoker'],fontdict= { 'fontsize': 10, 'fontweight':'bold'})\n# Customize the axes and title\n","8207e3e2":"bmi=df.iloc[:,2].values\nbmi=sorted(bmi)\n\ncharges=df.iloc[:,-1].values\ncharges=sorted(charges)\nfontdict_labels= { 'fontsize': 10, 'fontweight':'bold'}\nfontdict_title= { 'fontsize': 20, 'fontweight':'bold'}\n\n\nfig, axs = plt.subplots(figsize=(10, 5))\nplt.plot(bmi, charges ,'o')\nplt.title('Simple scatter plot of BMI and insurance cost',fontdict_title)\n\n\nage_bmi = pd.cut(df['age'], 5)\nbmi=pd.cut(df['bmi'],3)\nfig, axs = plt.subplots(figsize=(10, 5))\nsns.countplot(x=age_bmi,hue=bmi, \n              data=df,palette=[\"cornflowerblue\", \"khaki\",\"black\"]).set_title(\"Age distrubation and BMI\",\n                                                                fontdict_title);\n\n\nage_charge = pd.cut(df['age'], 4)\ncharges=pd.cut(df['charges'],3)\nfig, axs = plt.subplots(figsize=(10, 5))\nsns.countplot(x=age_charge,hue=charges, \n              data=df,palette=[\"cornflowerblue\", \"khaki\",\"black\"]).set_title(\"Age distrubation and insurance charge\",\n                                                                fontdict_title);\nsns.despine()\n","4645beb6":"X = df[['age','bmi','smoker']]\ny=df[['charges']]\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","81cc69ec":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","10760d96":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\ny_train=np.ravel(y_train)\nregressor = RandomForestRegressor(n_estimators = 100, random_state = 0)\nregressor.fit(X_train, y_train)\ny_pred = regressor.predict(X_test)\nprint(\"R2: \",round(r2_score(y_test, y_pred),2))\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = regressor, X = X_train, y = y_train, cv = 10)\nprint(\"\\nAccuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","01a456ba":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state = 0)\nregressor.fit(X_train, y_train)\ny_pred = regressor.predict(X_test)\nnp.set_printoptions(precision=2)\nprint(\"R2: \",round(r2_score(y_test, y_pred),2))\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = regressor, X = X_train, y = y_train, cv = 10)\nprint(\"\\nAccuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","fe78662c":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\npoly_reg = PolynomialFeatures(degree = 2)\nX_poly = poly_reg.fit_transform(X_train)\nregressor = LinearRegression()\nregressor.fit(X_poly, y_train)\n\ny_pred = regressor.predict(poly_reg.transform(X_test))\nprint(\"R2: \",round(r2_score(y_test, y_pred),2))\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = regressor, X = X_train, y = y_train, cv = 10)\nprint(\"\\nAccuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","c5ef8bcf":"**Dataset doesnt have nan values. There are only numerical data, so correlation should be checked. The correlation matrix shows that age, bmi and smoker have a relationship with charges which is our independent variable**","363a8eff":"### Import dataset and libraries","c43e4b12":"**Scaling the data**","80fdf59e":"**Exploatry analysis on dataset**","c3c7772a":"### Model selection","7ef427ea":"**Decision tree**","2546148a":"**Randomforest and polynomial regression have a better accurecy when crossvalidated with k-fold. Decisiontree also have a good accurecy, but the standard deviation is high**","c42292aa":"**Split data to training and testing data**","291f7739":"### Feature selection","344a7e75":"**Polynomial regression**","b7111694":"**Randomforest with k-fold**"}}