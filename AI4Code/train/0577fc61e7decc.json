{"cell_type":{"70af3e72":"code","721eaf72":"code","d536ccb0":"code","9a96b3ea":"code","b5e86d8d":"code","f15980c1":"code","0f8518d2":"code","8cad7b1a":"code","2c45de5d":"code","bbac8759":"code","3ed5943b":"code","5bdce9f8":"code","75cc571c":"code","9ee7f0b9":"code","6ebbc1df":"code","d586a263":"code","24473e89":"code","4feeaed0":"code","299a6923":"code","d344955f":"code","5eeb5a72":"code","30737a11":"markdown","727cfd38":"markdown","2b0451bc":"markdown","f73d102f":"markdown"},"source":{"70af3e72":"import pandas as pd \nimport numpy as np \nimport wandb \nfrom kaggle_secrets import UserSecretsClient\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport cv2\nfrom PIL import Image \nfrom wordcloud import WordCloud \nfrom glob import glob \n\nfrom sklearn.decomposition import PCA \nfrom sklearn.cluster import KMeans\nfrom sklearn.manifold import TSNE ","721eaf72":"user_secrets = UserSecretsClient()\nwandb_api = user_secrets.get_secret(\"wandb_api\") \nwandb.login(key=wandb_api)","d536ccb0":"config = dict(\n    competition=\"Pawpularity\", \n    infra = \"kaggle\",\n    seed = 42 \n)\nrun = wandb.init(project=\"Pawpularity\", \n          config=config, \n          group=\"None\",\n          job_type=\"EDA\")","9a96b3ea":"train = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/train.csv\")\ntest = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/train.csv\")\ntrain.head()","b5e86d8d":"\n'''\nThe part that is partially raised at the end is conspicuous\n'''\n\nplt.figure(figsize=(15, 6))\nplt.subplot(121)\nsns.histplot(train.Pawpularity)\nplt.subplot(122)\nsns.boxplot(train.Pawpularity)","f15980c1":"train.corr().loc[:, [\"Pawpularity\"]].style.background_gradient(cmap=\"coolwarm\")","0f8518d2":"train.isnull().sum() \/ train.shape[0]","8cad7b1a":"\n'''\nmerge data (dog and cat)? \n'''\n\ndog_cat = pd.read_csv(\"..\/input\/pawpularity-cat-or-dog\/cat_class.csv\")\n\ntrain = pd.merge(train, dog_cat, how=\"left\", on=\"Id\")\ntrain.head()","2c45de5d":"train.groupby(\"is_cat\").mean().style.background_gradient(cmap=\"coolwarm\")","bbac8759":"plt.figure(figsize=(15, 6))\n\nplt.subplot(121)\nsns.histplot(train.loc[train.is_cat == 0, \"Pawpularity\"])\nplt.title(\"Dog\")\nplt.subplot(122)\nsns.histplot(train.loc[train.is_cat == 1, \"Pawpularity\"])\nplt.title(\"Cat\")\nplt.show()","3ed5943b":"\n# add file path \ntrain[\"img_file\"] = [f\"..\/input\/petfinder-pawpularity-score\/train\/{f}.jpg\" for f in train.Id]\ntest[\"img_file\"] = [f\"..\/input\/petfinder-pawpularity-score\/test\/{f}.jpg\" for f in test.Id]\n\n\ndef viz_rank_img(type=\"dog\", ascending=True, n=9):\n    x = train[train.is_cat == (0 if type == \"dog\" else 1)].sort_values(\"Pawpularity\", ascending=ascending)[:n]\n    x_img = x[\"img_file\"].to_list()\n    \n    fig, axes = plt.subplots(3, 3, figsize=(10, 10))\n    ax = axes.ravel()\n    for i in range(n):\n        img = cv2.imread(x_img[i])\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n        img = cv2.resize(img, (224, 224))\n        ax[i].imshow(img)\n        ax[i].set_xticks([])\n        ax[i].set_yticks([])\n    plt.subplots_adjust(wspace=0, hspace=0)\n    plt.title(type)\n    plt.show()\n    \n    \n'''\nI looked at some of the images but couldn't figure out \nhow they affected the objective variable.\n'''","5bdce9f8":"viz_rank_img() # Under 10 category dog ","75cc571c":"viz_rank_img(ascending=False) # top 10 category dog ","9ee7f0b9":"viz_rank_img(type=\"cat\") # under 10 category cat ","6ebbc1df":"viz_rank_img(type=\"cat\", ascending=False) # top 10 category cat ","d586a263":"\n'''\nSome parts are cohesive and some are not.\n'''\n\nuse_col = ['Subject Focus', 'Eyes', 'Face', 'Near', 'Action', 'Accessory',\n       'Group', 'Collage', 'Human', 'Occlusion', 'Info', 'Blur']\n\ntsne = TSNE(n_components=2, random_state=config[\"seed\"])\n\nt_train = tsne.fit_transform(train[use_col])\nt_test = tsne.fit_transform(test[use_col])\n\nplt.figure(figsize=(15, 6))\nplt.subplot(121)\nplt.title(\"Train\")\nplt.scatter(x=t_train[:, 0], y=t_train[:, 1])\nplt.subplot(122)\nplt.title(\"Test\")\nplt.scatter(x=t_test[:, 0], y=t_test[:, 1])","24473e89":"\n# tsne dataframe \nt_train = pd.DataFrame(t_train, index=train.Id, columns=[\"c\"+str(c) for c in range(2)])\nt_test = pd.DataFrame(t_test, index=test.Id, columns=[\"c\"+str(c) for c in range(2)])\n\nkm = KMeans(n_clusters=2, random_state=config[\"seed\"]).fit(t_train)\ny_km = km.predict(t_train)\ny_km_ = km.predict(t_test)\n\nt_train[\"cluster\"] = y_km \nt_test[\"cluster\"] = y_km_ \n\n\nplt.figure(figsize=(15, 6))\nplt.subplot(121)\nplt.title(\"Train\")\nsns.scatterplot(data=t_train, x=\"c0\", y=\"c1\", hue=\"cluster\")\nplt.subplot(122)\nplt.title(\"Test\")\nsns.scatterplot(data=t_test, x=\"c0\", y=\"c1\", hue=\"cluster\")","4feeaed0":"\ntrain = pd.merge(train, t_train.reset_index().drop([\"c0\", \"c1\"], axis=1), how=\"left\", on=\"Id\")\ntest = pd.merge(test, t_test.reset_index().drop([\"c0\", \"c1\"], axis=1), how=\"left\", on=\"Id\")\n\n\ndef show_cloud(cnt2animal, c):\n    word = WordCloud(background_color=\"white\", contour_color=\"blue\", width=1500, height=750).generate_from_frequencies(cnt2animal)\n    plt.imshow(word)\n    plt.title(f\"Cluster={c}\")\n    plt.axis(\"off\")\n    plt.show()\n    \ndef find_cluster_feature(c_name = 1):\n    c = train[train.cluster == c_name]\n    cnt2animal = {}\n    for animal in c.is_cat.to_list():\n        text = \"dog\" if animal == 0 else \"cat\"\n        if text not in cnt2animal:\n            cnt2animal[text] = 1 \n        else:\n            cnt2animal[text] += 1 \n    show_cloud(cnt2animal, c_name)\n    \n    use_col_ = use_col.copy()\n    use_col_.append(\"Pawpularity\")\n  \n    for col in use_col_:\n        feature_mu = c[col].mean()\n        cnt2animal[col] = feature_mu \n    return pd.DataFrame({\"feature\": [k for k, v in cnt2animal.items()], \n                         \"mean\": [v for  k, v in cnt2animal.items()]}).style.background_gradient(cmap=\"coolwarm\")\n","299a6923":"find_cluster_feature()","d344955f":"\n'''\nThe level of each feature is lower than that of cluster 1.\nThere is no count difference between dogs and cats and objective variables.\n'''\n\nfind_cluster_feature(0)","5eeb5a72":"train.to_csv(\"train.csv\", index=False)\ntest.to_csv(\"test.csv\", index=False)\n\nfor f in glob(\"*.csv\"):\n    artifact = wandb.Artifact(name='eda', type='dataset')\n    artifact.add_file(f)\n    run.log_artifact(artifact)","30737a11":"# Setup tools ","727cfd38":"# EDA ","2b0451bc":"# T-SNE and Clustering ","f73d102f":"# Show image Under\/Top"}}