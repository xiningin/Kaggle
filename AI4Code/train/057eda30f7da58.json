{"cell_type":{"457c90d2":"code","7015af27":"code","5a4b3e57":"code","a792c939":"code","d20f905c":"code","7de78da5":"code","66f3da5c":"code","8f539f35":"code","e30749b2":"code","ec3a0024":"code","6302110f":"code","fc10fba1":"code","e2d2e087":"code","c602de53":"code","82ec4f54":"code","3501cfa2":"code","42adf7b3":"code","00b59765":"code","2019c544":"code","50b03775":"code","5d8226ad":"code","f90a2a93":"code","1556b8ff":"code","38de8e71":"code","10713b43":"code","a73bdd0d":"code","06c7f4f3":"code","4ba34870":"code","05af1108":"code","c29b5720":"code","b17c2435":"code","31d8b5d6":"code","7253a5b5":"code","f39c4413":"code","4ad0406a":"code","807e9655":"code","8e50d531":"code","fc2f99a5":"code","a1068973":"code","5a5d4a11":"code","9629a8dc":"code","1c041f19":"code","27ba1c71":"code","ba7802a2":"code","9c868472":"code","b485fed0":"code","bb055f94":"code","98b156a1":"code","967e0c48":"code","0a1f35b2":"code","44601ee3":"code","e88235d7":"code","a77e443f":"code","14a08cd3":"code","7beedc4a":"code","fb71aa2d":"code","92e3036a":"code","ba14ec90":"code","ef44566e":"code","60aa2f13":"code","bf00efb1":"code","f47bb1a1":"code","b578314e":"code","5d139da9":"code","a07e58d7":"code","159fb28f":"code","398c1e36":"code","37331e80":"code","8d0aa8e2":"code","67fa99f5":"code","a9437786":"code","dcc300e0":"code","e030334f":"code","dba654c1":"code","62b1ffbd":"code","8ae2ca5c":"code","54c0169d":"code","d2dc5c70":"code","657ffb49":"code","652ea6b5":"code","1c6bb328":"code","b8706d4c":"code","5312fe99":"code","0b183e1c":"code","0fca63cb":"code","22a399d9":"code","b1018a60":"code","d24eaa8a":"code","d5155f2a":"code","d61119c6":"code","19543cd0":"code","30e2e58c":"code","51d6bfb4":"code","d4d103eb":"code","c44e2dd8":"code","2bbb235b":"code","e478fbd3":"code","e3c065e9":"code","fb586f3b":"code","f5f5eaae":"code","25d8816c":"markdown","d47b1b49":"markdown","c148794f":"markdown","c7280556":"markdown","4dee42fe":"markdown","93d93e44":"markdown","65e15cb5":"markdown","a186aae0":"markdown","1626f1e9":"markdown","b70baf4e":"markdown","703392c5":"markdown","0380fc5a":"markdown","0c15c1a6":"markdown","59f741b6":"markdown","a394c039":"markdown","a09bc125":"markdown","94c0d89d":"markdown","6bd0092b":"markdown","dabb0215":"markdown","3ae3c21d":"markdown","4c9c87fc":"markdown","78c42f38":"markdown","f31fd3b0":"markdown","4ea93551":"markdown","7b804550":"markdown","52d71f85":"markdown","9e3f759a":"markdown","c557be4c":"markdown","a8a2fc15":"markdown","b77644a2":"markdown","1feecc50":"markdown","e0539204":"markdown","c1c37fa3":"markdown","876f3bb0":"markdown","2f83d0c7":"markdown","0f9df75f":"markdown","d416f298":"markdown","d77dfd0d":"markdown"},"source":{"457c90d2":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","7015af27":"Example_Image_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/images\/IMG_1.jpg\"","5a4b3e57":"Example_Test_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_1.jpg\"\n\n# we need this for example demonstration because cv2 processes overwrite images","a792c939":"Example_Reading_Image = cv2.cvtColor(cv2.imread(Example_Image_Path),cv2.COLOR_BGR2RGB)","d20f905c":"Example_Test_Image = cv2.cvtColor(cv2.imread(Example_Test_Path),cv2.COLOR_BGR2RGB)\n\n# for example demonstration","7de78da5":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Reading_Image)","66f3da5c":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Test_Image)","8f539f35":"Example_Testing_Zeros = np.zeros((Example_Reading_Image.shape[0], Example_Reading_Image.shape[1]), dtype=np.float32)","e30749b2":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Testing_Zeros)","ec3a0024":"Example_Mat_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/ground-truth\/GT_IMG_1.mat\"","6302110f":"Example_Testing_Mat = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/ground-truth\/GT_IMG_1.mat\"","fc10fba1":"Example_Load_Mat = loadmat(Example_Mat_Path)","e2d2e087":"print(type(Example_Load_Mat))","c602de53":"print(Example_Load_Mat.items())","82ec4f54":"print(Example_Load_Mat.keys())\n\n# we need image info\n# image_info is a keyword in the MAT dictionary.","3501cfa2":"Example_Image_Info = Example_Load_Mat.get(\"image_info\")","42adf7b3":"print(type(Example_Image_Info))","00b59765":"print(Example_Image_Info.shape)","2019c544":"print(Example_Image_Info)\n\n# we need coordinates","50b03775":"Example_Coordinates = Example_Image_Info[0][0][0][0][0]\n\n# coordinates","5d8226ad":"print(Example_Coordinates)","f90a2a93":"print(type(Example_Coordinates))","1556b8ff":"print(Example_Coordinates.shape)","38de8e71":"Example_Load_Mat_For_Testing = loadmat(Example_Testing_Mat)[\"image_info\"]","10713b43":"Example_Testing_Coordinates = Example_Load_Mat_For_Testing[0][0][0][0][0]","a73bdd0d":"print(Example_Testing_Coordinates[0:10])","06c7f4f3":"figure = plt.figure(figsize=(10,10))\n\nfor e_x_cor, e_y_cor in Example_Testing_Coordinates:\n    e_x_cor = int(e_x_cor)\n    e_y_cor = int(e_y_cor)\n    cv2.drawMarker(Example_Test_Image, (e_x_cor, e_y_cor), (255, 0, 0),thickness=1)\n\nplt.imshow(Example_Test_Image)\nplt.title(\"testing\")","4ba34870":"for x_cor_example, y_cor_example in Example_Coordinates:\n    x_cor_example = int(x_cor_example)\n    y_cor_example = int(y_cor_example)\n    Example_Testing_Zeros[y_cor_example, x_cor_example] = 1\n    \nfigure = plt.figure(figsize=(10,10))\nplt.imshow(Example_Testing_Zeros,cmap=\"gray\")","05af1108":"Gaussian_Image_Example = gaussian_filter(Example_Testing_Zeros,sigma=5,truncate=5*5)\n\nfigure = plt.figure(figsize=(10,10))\nplt.xlabel(Gaussian_Image_Example.shape)\nplt.imshow(Gaussian_Image_Example,cmap=\"jet\")","c29b5720":"figure,axis = plt.subplots(1,3,figsize=(10,10))\n\naxis[0].imshow(Example_Reading_Image)\naxis[1].imshow(Example_Testing_Zeros)\naxis[2].imshow(Gaussian_Image_Example)","b17c2435":"Ground_Truth_Path_A = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/ground-truth\")","31d8b5d6":"Images_Path_A = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/images\")","7253a5b5":"Ground_Truth_Path_B = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_B\/train_data\/ground-truth\")","f39c4413":"Images_Path_B = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_B\/train_data\/images\")","4ad0406a":"GT_List_A = list(Ground_Truth_Path_A.glob(r\"*.mat\"))\nGT_List_B = list(Ground_Truth_Path_B.glob(r\"*.mat\"))","807e9655":"Images_List_A = list(Images_Path_A.glob(r\"*.jpg\"))\nImages_List_B = list(Images_Path_B.glob(r\"*.jpg\"))","8e50d531":"GT_List_A = sorted(GT_List_A)\nGT_List_B = sorted(GT_List_B)\nImages_List_A = sorted(Images_List_A)\nImages_List_B = sorted(Images_List_B)","fc2f99a5":"print(\"LEN A GT: \",len(GT_List_A))\nprint(\"---\"*5)\nprint(\"LEN A IMAGES: \",len(Images_List_A))\nprint(\"---\"*20)\nprint(\"LEN B GT: \",len(GT_List_B))\nprint(\"---\"*5)\nprint(\"LEN B IMAGES: \",len(Images_List_B))","a1068973":"print(GT_List_A[0])\nprint(Images_List_A[0])","5a5d4a11":"print(GT_List_A[100])\nprint(Images_List_A[100])","9629a8dc":"Total_Mat_Path = []\nTotal_Image_Path = []\n\nfor ma_path,mb_path,ia_path,ib_path in zip(GT_List_A,GT_List_B,Images_List_A,Images_List_B):\n    Total_Mat_Path.append(ma_path)\n    Total_Mat_Path.append(mb_path)\n    Total_Image_Path.append(ia_path)\n    Total_Image_Path.append(ib_path)","1c041f19":"print(\"MAIN MAT LEN: \",len(Total_Mat_Path))\nprint(\"---\"*5)\nprint(\"MAIN IMAGE LEN: \",len(Total_Image_Path))","27ba1c71":"print(Total_Mat_Path[0])\nprint(Total_Image_Path[0])","ba7802a2":"print(Total_Mat_Path[100])\nprint(Total_Image_Path[100])","9c868472":"Image_Path_Series = pd.Series(Total_Image_Path,name=\"IMAGE\").astype(str)\nMat_Path_Series = pd.Series(Total_Mat_Path,name=\"MAT\").astype(str)","b485fed0":"print(\"MAT LEN: \",len(Mat_Path_Series))\nprint(\"---\"*5)\nprint(\"IMAGE LEN: \",len(Image_Path_Series))","bb055f94":"print(Image_Path_Series[44])","98b156a1":"print(Mat_Path_Series[44])","967e0c48":"Image_Label_List = []\nMat_Label_List = []\n\ntotal_added = []\ntotal_not_added = []\ntime_count = 0\n\nfor x_images,x_mat in zip(Image_Path_Series.values,Mat_Path_Series.values):\n    \n    try:\n        time_count += 1\n        Reading_Image = cv2.cvtColor(cv2.imread(x_images),cv2.COLOR_BGR2RGB)\n\n        Coordinates_x_info = loadmat(x_mat)[\"image_info\"]\n        Coordinates_x = Coordinates_x_info[0][0][0][0][0]\n\n        Main_Zeros = np.zeros((Reading_Image.shape[0], Reading_Image.shape[1]), dtype=np.float32)\n        for x_cor, y_cor in Coordinates_x:\n            x_cor = int(x_cor)\n            y_cor = int(y_cor)\n            Main_Zeros[y_cor, x_cor] = 1\n\n        Gaussian_Image_With_Coordinates = gaussian_filter(Main_Zeros,sigma=6,truncate=6*6)\n        \n        Resized_Image = cv2.resize(Reading_Image,(180,180))\n        Resized_Gaussian_Image = cv2.resize(Gaussian_Image_With_Coordinates,(180,180))\n        \n        Image_Label_List.append(Resized_Image)\n        Mat_Label_List.append(Resized_Gaussian_Image)\n        total_added.append(str(time_count))\n        \n    except :\n        total_not_added.append(str(time_count))\n        pass\n\nprint(f\"{len(total_not_added)} EPOCHS NOT ADDED\")\nprint(\"---\"*20)\nprint(f\"{len(total_added)} EPOCHS ADDED\")\n        \n        \n    ","0a1f35b2":"print(\"MAT LEN: \",len(Mat_Label_List))\nprint(\"IMAGE LEN: \",len(Image_Label_List))","44601ee3":"print(\"MAT IMAGE SHAPE: \",Mat_Label_List[0].shape)\nprint(\"ORIGINAL IMAGE SHAPE: \",Image_Label_List[0].shape)","e88235d7":"print(\"WHEN IT IS ARRAY MAT SHAPE: \",np.shape(np.array(Mat_Label_List)))\nprint(\"WHEN IT IS ARRAY IMAGE SHAPE: \",np.shape(np.array(Image_Label_List)))","a77e443f":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[0],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[0].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[0])\naxis[1].set_xlabel(Image_Label_List[0].shape)\naxis[1].set_title(\"ORIGINAL\")","14a08cd3":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[220],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[220].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[220])\naxis[1].set_xlabel(Image_Label_List[220].shape)\naxis[1].set_title(\"ORIGINAL\")","7beedc4a":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[22],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[22].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[22])\naxis[1].set_xlabel(Image_Label_List[22].shape)\naxis[1].set_title(\"ORIGINAL\")","fb71aa2d":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[302],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[302].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[302])\naxis[1].set_xlabel(Image_Label_List[302].shape)\naxis[1].set_title(\"ORIGINAL\")","92e3036a":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[552],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[552].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[552])\naxis[1].set_xlabel(Image_Label_List[552].shape)\naxis[1].set_title(\"ORIGINAL\")","ba14ec90":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[9],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[9].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[9])\naxis[1].set_xlabel(Image_Label_List[9].shape)\naxis[1].set_title(\"ORIGINAL\")","ef44566e":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[276],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[276].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[276])\naxis[1].set_xlabel(Image_Label_List[276].shape)\naxis[1].set_title(\"ORIGINAL\")","60aa2f13":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[16],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[16].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[16])\naxis[1].set_xlabel(Image_Label_List[16].shape)\naxis[1].set_title(\"ORIGINAL\")","bf00efb1":"figure,axis = plt.subplots(5,5,figsize=(10,10))\n\nfor indexing,operation in enumerate(axis.flat):\n    \n    Mat_Picking_Image = Mat_Label_List[indexing]\n    operation.imshow(Mat_Picking_Image)\n    \nplt.tight_layout()\nplt.show()","f47bb1a1":"figure,axis = plt.subplots(5,5,figsize=(10,10))\n\nfor indexing,operation in enumerate(axis.flat):\n    \n    Image_Picking_Image = Image_Label_List[indexing]\n    operation.imshow(Image_Picking_Image)\n    \nplt.tight_layout()\nplt.show()","b578314e":"X_Train = np.array(Image_Label_List,dtype=\"float32\")\nX_Test = np.array(Mat_Label_List,dtype=\"float32\")","5d139da9":"print(\"TRAIN SHAPE: \",X_Train.shape)\nprint(\"TEST SHAPE: \",X_Test.shape)","a07e58d7":"X_Train = X_Train \/ 255.\nX_Test = X_Test \/ 255.","159fb28f":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(X_Test[1],cmap=\"jet\")\naxis[0].set_xlabel(X_Test[1].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(X_Train[1])\naxis[1].set_xlabel(X_Train[1].shape)\naxis[1].set_title(\"ORIGINAL\")","398c1e36":"Early_Stopper = tf.keras.callbacks.EarlyStopping(monitor=\"loss\",patience=3,mode=\"min\")\nCheckpoint_Model = tf.keras.callbacks.ModelCheckpoint(monitor=\"val_accuracy\",\n                                                      save_best_only=True,\n                                                      save_weights_only=True,\n                                                      filepath=\".\/modelcheck\")","37331e80":"compile_loss = \"mse\"\ncompile_optimizer = Adam(lr=0.0000001)\noutput_class = 1","8d0aa8e2":"Encoder_AE = Sequential()\nEncoder_AE.add(Conv2D(32,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(64,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(128,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(256,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())","67fa99f5":"Decoder_AE = Sequential()\nDecoder_AE.add(Conv2DTranspose(128,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(64,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(32,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(output_class,(2,2)))\nDecoder_AE.add(ReLU())","a9437786":"Auto_Encoder = Sequential([Encoder_AE,Decoder_AE])","dcc300e0":"Auto_Encoder.compile(loss=compile_loss,optimizer=compile_optimizer)","e030334f":"Model_AutoEncoder_Histoyr = Auto_Encoder.fit(X_Train,X_Test,epochs=30,callbacks=[Checkpoint_Model])","dba654c1":"Prediction_Seen = Auto_Encoder.predict(X_Train[:5])","62b1ffbd":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[4])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[4],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[4],cmap=\"Spectral\")\naxis[2].set_title(\"PREDICTION\")","8ae2ca5c":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[1])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[1],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[1],cmap=\"hot\")\naxis[2].set_title(\"PREDICTION\")","54c0169d":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[2])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[2],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[2],cmap=\"cubehelix\")\naxis[2].set_title(\"PREDICTION\")","d2dc5c70":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[3])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[3],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[3],cmap=\"nipy_spectral\")\naxis[2].set_title(\"PREDICTION\")","657ffb49":"figure,axis = plt.subplots(1,4,figsize=(10,10))\naxis[0].imshow(Prediction_Seen[0],cmap=\"jet\")\naxis[0].set_title(np.mean(Prediction_Seen[0]))\naxis[1].imshow(Prediction_Seen[1],cmap=\"jet\")\naxis[1].set_title(np.mean(Prediction_Seen[1]))\naxis[2].imshow(Prediction_Seen[2],cmap=\"jet\")\naxis[2].set_title(np.mean(Prediction_Seen[2]))\naxis[3].imshow(Prediction_Seen[3],cmap=\"jet\")\naxis[3].set_title(np.mean(Prediction_Seen[3]))","652ea6b5":"Mean_One = np.mean(Prediction_Seen[0])\nMean_Two = np.mean(Prediction_Seen[1])\nMean_Three = np.mean(Prediction_Seen[2])\nMean_Four = np.mean(Prediction_Seen[3])\n\nprint(Mean_One)\nprint(Mean_Two)\nprint(Mean_Three)\nprint(Mean_Four)","1c6bb328":"Non_Seen_Image_One = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_110.jpg\"\nNon_Seen_Image_Two = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_123.jpg\"\nNon_Seen_Image_Three = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_100.jpg\"","b8706d4c":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_One),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)","5312fe99":"Prediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","0b183e1c":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","0fca63cb":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_Two),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","22a399d9":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","b1018a60":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_Three),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","d24eaa8a":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","d5155f2a":"Encoder = Sequential()\n#\nEncoder.add(Conv2D(32,(2,2),kernel_initializer = 'he_normal'))\nEncoder.add(BatchNormalization())\nEncoder.add(LeakyReLU())\n#\nEncoder.add(Conv2D(64,(2,2),kernel_initializer = 'he_normal'))\nEncoder.add(BatchNormalization())\nEncoder.add(LeakyReLU())\n\n\nDecoder = Sequential()\n#\nDecoder.add(Conv2DTranspose(32,(2,2)))\nDecoder.add(LeakyReLU())\n#\nDecoder.add(Conv2DTranspose(output_class,(2,2)))\nDecoder.add(LeakyReLU())","d61119c6":"ANN_AutoEncoder = Sequential([Encoder,Decoder])","19543cd0":"ANN_AutoEncoder.compile(loss=\"mse\",optimizer=RMSprop(lr=0.000001))","30e2e58c":"H\u0131story_Complex = ANN_AutoEncoder.fit(X_Train,X_Test,epochs=50)","51d6bfb4":"ANN_Prediction_Images = ANN_AutoEncoder.predict(X_Train[:5])","d4d103eb":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[1])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[1],cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","c44e2dd8":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[2])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[2],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")","2bbb235b":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[3])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[3],cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","e478fbd3":"Non_Seen_Image = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_151.jpg\"\n\nReading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = ANN_AutoEncoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","e3c065e9":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","fb586f3b":"Non_Seen_Image = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_149.jpg\"\n\nReading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = ANN_AutoEncoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","f5f5eaae":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","25d8816c":"#### STRUCTURE","d47b1b49":"#### TRAINING","c148794f":"#### CHECKING NEW DATA","c7280556":"#### TO ARRAY","4dee42fe":"#### EXAMPLE ZEROS FOR PROTECTING MAIN IMAGE","93d93e44":"#### ENCODER","65e15cb5":"#### EXAMPLE IMAGE","a186aae0":"# PROCESS SUMMARY","1626f1e9":"### OVERVIEW\n\n* Example Path Process\n* Example Image Display\n* Example MAT Load\n* Example Drawing Marker\n* Example Transformation Of Coordinates\n* Example Coordinates Overwriting Image\n* Example Density Display","b70baf4e":"#### CREATING TRAIN DATA","703392c5":"##### ONE","0380fc5a":"#### SAMPLE PREDICTION","0c15c1a6":"#### COORDINATES AND IMAGE PATH","59f741b6":"#### PARAMETERS","a394c039":"#### EXAMPLE DEMONSTRATION","a09bc125":"##### TWO","94c0d89d":"#### SAMPLE PREDICTION","6bd0092b":"# PACKAGES AND LIBRARIES","dabb0215":"#### EXAMPLE PATH","3ae3c21d":"#### DECODER","4c9c87fc":"#### EXAMPLE PEOPLE DENSITY","78c42f38":"#### TOTAL MAT AND IMAGES","f31fd3b0":"#### EXAMPLE LOAD MAT","4ea93551":"#### MEAN CHECKING","7b804550":"#### AUTO ENCODER TRAINING","52d71f85":"#### SPECIAL PREDICTION","9e3f759a":"# DATA PROCESS","c557be4c":"#### SPECIAL PREDICTION","a8a2fc15":"#### EXAMPLE TRANSFORMATION OF COORDINATES","b77644a2":"#### CALLBACK","1feecc50":"#### AUTO ENCODER STRUCTURE","e0539204":"#### EXAMPLE MAT PATH","c1c37fa3":"#### MAIN PATH","876f3bb0":"##### TWO","2f83d0c7":"##### ONE","0f9df75f":"##### THREE","d416f298":"# SPECTRUM AUTO ENCODER PROCESS","d77dfd0d":"# CONV2D - CONV2DTRANPOSE AUTO ENCODER PROCESS"}}