{"cell_type":{"d600b244":"code","4b66855e":"code","069ef0ca":"code","c91fe176":"code","3a23c9f5":"code","42f4397a":"code","2053b570":"code","3144a264":"code","c47003bf":"code","16e8db54":"code","88cf3a9d":"code","a86d1b16":"code","54f86aea":"code","93d30d5c":"code","d29a9d7c":"code","1a15eaa7":"code","eb4234d4":"code","a225fc63":"code","eedc417e":"code","cc826231":"code","2ddf8c04":"code","bf9fb7dc":"code","d9f005c8":"code","3a6d0bce":"code","3417fc66":"code","fa806c62":"code","a2431d33":"code","46849210":"code","4b8d74b7":"code","413b027f":"code","bd06103d":"code","861e7f36":"code","bc0331a1":"code","f85fbbb9":"code","d21ce8a6":"code","8710b730":"code","13105ca5":"code","2504e4d7":"code","f05d93b1":"code","a60af050":"code","99786b84":"code","409057e3":"code","aed8da09":"code","cfa96bc6":"code","37a0034f":"code","00c33795":"markdown","dad1678b":"markdown","70c28acb":"markdown","ed2168f1":"markdown"},"source":{"d600b244":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b66855e":"trained = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrained.head()","069ef0ca":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","c91fe176":"test.shape","3a23c9f5":"trained.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)","42f4397a":"test.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)","2053b570":"trained.head()","3144a264":"trained.info()","c47003bf":"trained.describe()","16e8db54":"trained.isnull().sum()","88cf3a9d":"mean_age_trained = trained[\"Age\"].mean()\n\ntrained[\"Age\"].fillna(mean_age_trained, inplace = True)\ntrained[\"Age\"].isnull().sum()","a86d1b16":"trained.columns","54f86aea":"test.isnull().sum()","93d30d5c":"mean_age_test = test[\"Age\"].mean()\n\ntest[\"Age\"].fillna(mean_age_test, inplace = True)\ntest[\"Age\"].isnull().sum()","d29a9d7c":"trained_fare_mean = trained[\"Fare\"].mean()\n\ntrained[\"Fare\"].replace(0, trained_fare_mean, inplace = True)\n\nsum(trained[\"Fare\"] == 0)","1a15eaa7":"test[\"Fare\"].isnull().sum()\ntest_fare_mean = test[\"Fare\"].mean()\n\ntest[\"Fare\"].fillna(test_fare_mean, inplace = True)\nprint(test[\"Fare\"].isnull().sum())","eb4234d4":"print(test.Fare[test.Fare == 0])","a225fc63":"test[\"Fare\"].replace(0, test_fare_mean, inplace = True)\nprint(test.Fare[test.Fare == 0])","eedc417e":"trained_embarked_mode = trained.Embarked.mode()\ntrained['Embarked'].fillna(trained['Embarked'].mode()[0],inplace=True)\n\n","cc826231":"test['Embarked'].replace('nan',np.nan,inplace=True)\ntest['Embarked'].fillna(test['Embarked'].mode()[0],inplace=True)","2ddf8c04":"trained.head()","bf9fb7dc":"trained[\"Sex\"] = trained[\"Sex\"].map({'male':0, 'female':1})\ntrained[\"Sex\"]","d9f005c8":"test[\"Sex\"] = test[\"Sex\"].map({'male':0, 'female':1})\ntest[\"Sex\"]","3a6d0bce":"trained[\"Embarked\"] = trained[\"Embarked\"].map({'S':0, 'C':1, 'Q':2})","3417fc66":"test[\"Embarked\"] = test[\"Embarked\"].map({'S':0, 'C':1, 'Q':2})","fa806c62":"test.head()","a2431d33":"trained['Embarked'].unique()","46849210":"trained[\"Age\"]=np.log(trained[\"Age\"])\ntrained[\"Fare\"] = np.log(trained[\"Fare\"])\n","4b8d74b7":"trained.var()","413b027f":"test[\"Age\"]=np.log(test[\"Age\"])\ntest[\"Fare\"] = np.log(test[\"Fare\"])","bd06103d":"test.var()","861e7f36":"x = trained.drop([\"Survived\"], axis = 1)\ny = trained[\"Survived\"]","bc0331a1":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)","f85fbbb9":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\n\nlog_reg = LogisticRegression()\nlog_reg.fit(X_train, y_train)","d21ce8a6":"#hyperparameter tuning of logistic regression\n\nfrom sklearn.model_selection import GridSearchCV\nparam = {\n         'penalty':['l1','l2'],\n         'C':[0.001, 0.01, 0.1, 1, 10, 20,100, 1000]\n}\nlr= LogisticRegression(penalty='l1')\ncv=GridSearchCV(log_reg,param,cv=10,n_jobs=-1)\ncv.fit(X_train,y_train)\ncv.predict(X_test)","8710b730":"print(\"Best CV params\", cv.best_params_)   ","13105ca5":"print(\"Best CV score\", cv.best_score_)","2504e4d7":" #best_estimators\nbest_lr = cv.best_estimator_\nbest_lr","f05d93b1":"prob = log_reg.predict_proba(X_train)\nnp.max(prob)","a60af050":"from sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n\ngb = GradientBoostingClassifier(max_depth=3, validation_fraction=1)\ngb.fit(X_train, y_train)","99786b84":"accuracy_score(y_test,gb.predict(X_test))","409057e3":"sgb = GradientBoostingClassifier(subsample = 0.90, max_features = 0.70)\nsgb.fit(X_train, y_train)","aed8da09":"# accuracy score, confusion matrix and classification report of stochastic gradient boosting classifier\n\nsgb_acc = accuracy_score(y_test, sgb.predict(X_test))\n\nprint(f\"Training Accuracy of Decision Tree Classifier is {accuracy_score(y_train, sgb.predict(X_train))}\")\nprint(f\"Test Accuracy of Decision Tree Classifier is {sgb_acc} \\n\")\n\nprint(f\"{confusion_matrix(y_test, sgb.predict(X_test))}\\n\")\nprint(classification_report(y_test, sgb.predict(X_test)))","cfa96bc6":"finals_predictions = sgb.predict(test)\nfinals_predictions","37a0034f":"predictionsss = pd.DataFrame(finals_predictions)\nsubs_dfgs = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubs_dfgs['Survived'] = predictionsss\nsubs_dfgs.to_csv('Submissionsd2s.csv', index = False)","00c33795":"##### ","dad1678b":"### Logistic Regression","70c28acb":"### GradientBoostingClassifier","ed2168f1":"## Converting categorical into numerical"}}