{"cell_type":{"d282de49":"code","843e1838":"code","b94180be":"code","7bdf2f26":"code","97dc32fe":"code","1499e0e4":"code","ceabf252":"code","89512886":"code","65a43ba5":"code","4e235ba0":"code","569d5361":"code","fa869a2f":"code","1222a917":"code","69e67210":"code","326d4b71":"code","b1dc62a9":"code","76b4a31a":"code","d2ad6d8e":"code","f4b42e7a":"code","0297c3fa":"code","54f13396":"code","362b0cb6":"code","07f65e17":"code","1ff27d57":"code","3050a527":"code","f3f62785":"code","8d388bfe":"code","5bdd2f6e":"code","837a21c2":"code","1de53e61":"code","3b949118":"code","c1016e34":"code","d4b4617a":"code","64820f11":"code","5b3620f8":"code","415972cd":"code","02d70fb7":"code","ea848395":"code","d218f0c5":"code","81426772":"code","51c377c0":"code","fb601919":"code","660bec92":"code","4251dd2e":"code","e03baecc":"code","b00c8437":"code","6de0b7b3":"code","5f9e623a":"code","3e30bd89":"code","47401d8e":"code","df73ea64":"code","9af0186d":"code","1a5415dc":"code","afbb3e65":"code","56761b85":"code","bd6f8811":"code","0bc44d99":"code","c3102897":"code","c9c19638":"code","e41e4416":"code","8e016d12":"code","1d80b713":"code","1c206601":"code","55023257":"code","0b3ff197":"code","98b3c0bf":"code","b6a94ec4":"code","56e21079":"code","4414523d":"code","c169799e":"code","157a1828":"code","dec00d5e":"code","253caf57":"code","70491911":"code","c319f3ca":"code","ed92870e":"code","85ee3db4":"code","c03ca22f":"code","4ea98151":"code","9f056559":"code","78818527":"code","99780e3e":"code","09db35e7":"code","539c4f88":"code","ce2b0b92":"code","b6d81297":"code","ed50985b":"code","b80d2af3":"code","76825bec":"code","fbef52c4":"code","0519ade0":"code","a932455d":"code","2ee3d50e":"code","59b641a3":"code","4657c58d":"code","9c8f2cac":"code","6e7acd0e":"code","b290a7f3":"code","ae14d268":"code","e19ccd4b":"markdown","c501c08e":"markdown","ea554ee6":"markdown","735ea1bb":"markdown","f0680a00":"markdown","61ebd225":"markdown","4162e390":"markdown","8569df1d":"markdown","ce46cfc3":"markdown","0b6ae454":"markdown","5f73496d":"markdown","98c0fce7":"markdown","e9c8f7ce":"markdown","b9ddecfe":"markdown","510f188e":"markdown","d4f2c2e0":"markdown"},"source":{"d282de49":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","843e1838":"plt.rcParams['figure.figsize'] = [6,3]\nplt.rcParams['figure.dpi'] = 80","b94180be":"data = sns.load_dataset('titanic')\nprint(data.head())\nprint(data.columns)","7bdf2f26":"from pandas_profiling import ProfileReport\ntrain_profile = ProfileReport(data, title='Pandas Profiling Report', html={'style':{'full_width':True}})\ntrain_profile","97dc32fe":"data.describe()","1499e0e4":"data.info()","ceabf252":"plt.style.use('ggplot')","89512886":"# Check null values\ndata.isnull().sum()","65a43ba5":"# Plot null values using heatmap\nsns.heatmap(data.isnull(), cmap='viridis', cbar=True)","4e235ba0":"# CHeck correlation of the dataset\ncorrmat = data.corr()\ncorrmat","569d5361":"# Plot Heatmap\nsns.heatmap(corrmat)","fa869a2f":"print(list(data))","1222a917":"# Plot the countplot and DIstplot\nfig, ax = plt.subplots(3,3, figsize=(16,16))\n\nsns.countplot('survived', data=data, ax=ax[0][0])\nsns.countplot('pclass', data=data, ax=ax[0][1])\nsns.countplot('sex', data=data, ax=ax[0][2])\nsns.countplot('sibsp', data=data, ax=ax[1][0])\nsns.countplot('parch', data=data, ax=ax[1][1])\nsns.countplot('embarked', data=data, ax=ax[1][2])\nsns.countplot('alone', data=data, ax=ax[2][0])\n\nsns.distplot(data['fare'], kde=True, ax=ax[2][1])\nsns.distplot(data['age'], kde=True, ax=ax[2][2])\nplt.tight_layout()","69e67210":"# Check the number of survived or not value\ndata['survived'].value_counts()","326d4b71":"# Plot the graph number of survived or not using countplot\nsns.countplot('survived', data=data)\nplt.title('Titanic Survived Plot')\nplt.show()","b1dc62a9":"# plot the hist plot\ndata['survived'].plot.hist()","76b4a31a":"# Check number of survived or not using pie chart\ndata['survived'].value_counts().plot.pie()","d2ad6d8e":"# Check number of survived or not using pie chart\ndata['survived'].value_counts().plot.pie(autopct='%1.2f%%')","f4b42e7a":"# Check number of survived or not using pie chart\nexplode = [0,0.1]\ndata['survived'].value_counts().plot.pie(explode=explode, autopct='%1.2f%%')","0297c3fa":"# Check the number of Pclass\ndata['pclass'].value_counts()","54f13396":"# Groupby\ndata.groupby(['pclass', 'survived'])['survived'].count()","362b0cb6":"# check how many passenger travel in 1st claess, 2nd class and 3rd class using countplot \nsns.countplot('pclass', data=data)","07f65e17":"# check how many male and female survived in 1st, 2nd and 3rd class using countplot\nsns.countplot('pclass', data=data, hue='survived')","1ff27d57":"# check how many passenger travel in 1st claess, 2nd class and 3rd class using pie chart \ndata['pclass'].value_counts().plot.pie(autopct = \"%1.1f%%\")","3050a527":"sns.catplot(x = 'pclass', y='survived', kind='bar', data=data)","f3f62785":"sns.catplot(x='pclass', y='survived', kind='point', data=data)","8d388bfe":"sns.catplot(x='pclass', y='survived', kind='violin', data=data)","5bdd2f6e":"data['sex'].value_counts()","837a21c2":"data.groupby(['sex', 'survived'])['survived'].count()","1de53e61":"sns.countplot('sex', data=data)","3b949118":"data['sex'].value_counts().plot.pie(autopct = '%1.1f%%')","c1016e34":"sns.catplot(x='sex', y='survived',kind='bar',data=data)","d4b4617a":"sns.catplot(x='sex', y='survived', kind='bar', data=data, hue='pclass')","64820f11":"sns.catplot(x='sex', y='survived', kind='bar', data=data, col='pclass')","5b3620f8":"sns.catplot(x='sex', y='survived', kind='bar', data=data, row='pclass')","415972cd":"sns.catplot(x='pclass', y='survived', kind='bar', data=data, col='sex')","02d70fb7":"sns.catplot(x='sex', y='survived', kind='point', data=data)","ea848395":"sns.catplot(x='sex', y='survived', kind='point', data=data,hue='pclass')","d218f0c5":"sns.catplot(x='pclass', y='survived', kind='point', data=data, hue='sex')","81426772":"sns.catplot(x='sex', y='survived', kind='violin', data=data)","51c377c0":"sns.catplot(x='sex', y='survived', kind='violin', data=data, hue='pclass')","fb601919":"sns.catplot(x='sex', y='survived', kind='violin', data=data, col='pclass')","660bec92":"data['age'].hist(bins=30, density=True, color = 'orange', figsize = (10,8))\nplt.xlabel('Age')\nplt.show()","4251dd2e":"sns.distplot(data['age'])","e03baecc":"sns.distplot(data['age'], hist=False)","b00c8437":"sns.distplot(data['age'], hist=True)","6de0b7b3":"sns.kdeplot(data['age'], shade=True)","5f9e623a":"sns.catplot(x='sex', y='age', data=data, kind='box')","3e30bd89":"sns.catplot(x='sex', y='age', data=data, kind='box', hue='pclass')","47401d8e":"sns.catplot(x='sex', y='age', data=data, kind='box', col='pclass')","df73ea64":"sns.catplot(x='pclass', y='age', data=data, kind='violin')","9af0186d":"sns.catplot(x='pclass', y='age', data=data, kind='violin', hue='sex')","1a5415dc":"sns.catplot(x='pclass', y='age', data=data, kind='violin', col='sex')","afbb3e65":"sns.catplot(x='pclass', y='age', kind='swarm', data=data)","56761b85":"sns.catplot(x='pclass', y='age', kind='swarm', data=data, col='sex')","bd6f8811":"sns.catplot(x='survived', y='age', kind='swarm', data=data, col='sex')","0bc44d99":"sns.catplot(x='survived', y='age', kind='swarm', data=data, row='sex', col='pclass')","c3102897":"data['fare'].hist(bins=40, color='orange')","c9c19638":"sns.distplot(data['fare'])\nplt.xlabel('fare')\nplt.show()","e41e4416":"sns.catplot(x='sex', y='fare', data=data, kind='box')","8e016d12":"sns.catplot(x='sex', y='fare', data=data, kind='box', hue='pclass')","1d80b713":"sns.catplot(x='sex', y='fare', data=data, kind='box', col='pclass')","1c206601":"sns.catplot(x='sex', y='fare', data=data, kind='boxen', col='pclass')","55023257":"sns.catplot(x='sex', y='fare', data=data, kind='swarm', col='sex')","0b3ff197":"sns.catplot(x='survived', y='fare', data=data, kind='swarm', col='sex')","98b3c0bf":"sns.catplot(x='survived', y='fare', data=data, kind='swarm', col='pclass')","b6a94ec4":"sns.jointplot(x='age', y='fare', data=data)","56e21079":"sns.jointplot(x='age', y='fare', data=data, kind='kde')","4414523d":"sns.relplot(x='age', y='fare', data=data, row='sex', col='pclass')","c169799e":"data['sibsp'].value_counts()","157a1828":"sns.countplot('sibsp', data=data)","dec00d5e":"sns.countplot('sibsp', data=data, hue='survived')","253caf57":"sns.catplot(x = 'sibsp', y = 'survived', kind='bar',data=data)","70491911":"sns.catplot(x = 'sibsp', y = 'survived', kind='bar',data=data, hue='sex')","c319f3ca":"sns.catplot(x = 'sibsp', y = 'survived', kind='bar',data=data, col='sex')","ed92870e":"sns.catplot(x = 'sibsp', y = 'survived', kind='bar',data=data, col='pclass')","85ee3db4":"sns.catplot(x = 'sibsp', y = 'survived', kind='point',data=data)","c03ca22f":"sns.catplot(x = 'sibsp', y = 'survived', kind='point',data=data, hue='sex')","4ea98151":"sns.catplot(x = 'sibsp', y = 'survived', kind='point',data=data, col='pclass')","9f056559":"sns.catplot(x = 'sibsp', y = 'fare', kind='swarm',data=data, col='sex')","78818527":"sns.catplot(x = 'sibsp', y = 'fare', kind='swarm',data=data, col='pclass')","99780e3e":"data['parch'].value_counts()","09db35e7":"sns.countplot('parch', data=data)","539c4f88":"sns.countplot('parch', data=data, hue='sex')","ce2b0b92":"sns.catplot(x='parch', y='survived', data=data, kind='bar')","b6d81297":"sns.catplot(x='parch', y='survived', data=data, kind='bar', hue='sex')","ed50985b":"sns.catplot(x='parch', y='fare', data=data, kind='swarm')","b80d2af3":"sns.catplot(x='parch', y='fare', data=data, kind='swarm', col='pclass',row='sex')","76825bec":"data['embarked'].value_counts()","fbef52c4":"sns.countplot('embarked', data=data)","0519ade0":"sns.catplot(x='embarked', y='survived', kind='bar', data=data)","a932455d":"sns.catplot(x='embarked', y='survived', kind='bar', data=data, hue='sex')","2ee3d50e":"data.columns","59b641a3":"data['who'].value_counts()","4657c58d":"sns.countplot('who', data=data)","9c8f2cac":"sns.countplot('who', data=data, hue='survived')","6e7acd0e":"sns.catplot(x='who', y='survived', kind='bar', data=data)","b290a7f3":"sns.catplot(x='who', y='survived', kind='bar', data=data, hue='pclass')","ae14d268":"sns.catplot(x='who', y='survived', kind='bar', data=data, col='pclass')","e19ccd4b":"## Exploratory Data Analysis\n\n    - HeatMap\n    - Univariate Analysis\n    - How many passenger Survived or Not\n    - Check PClass\n    - Sex\n    - Age\n    - Fare\n    - SibSp\n    - Parch\n    - Embarked\n ## Types of plot\n     - Heatmap\n     - Countplot\n     - Catplot\n     - distplot\n     - kdeplot\n     - hist plot\n     - Pie chart\n     - violin\n     - Swarm plot","c501c08e":"**catplot**","ea554ee6":"## Embarked\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Name - Name\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Sibling\/Spouses Aboard\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )\n\n\n\n\n\n","735ea1bb":"# Exploratory Data Analysis\n\n## HeatMap","f0680a00":"**violin plot**","61ebd225":"## Parch\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Name - Name\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Sibling\/Spouses Aboard\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )","4162e390":"## Fare\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )","8569df1d":"## SibSp\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Name - Name\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Sibling\/Spouses Aboard\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )","ce46cfc3":"### I am working on this dataset so I will keep updating it\n\n### If you like my kernel please consider upvoting it\n\n#### Thank you","0b6ae454":"## Univariate Analysis","5f73496d":"## Sex\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )","98c0fce7":"## How many passenger Survived or Not","e9c8f7ce":"**Who**","b9ddecfe":"## Age\n\n    - Survived - Survived (0=No, 1 = Yes).\n    - Pclass - Passenger Class (1=1st, 2=2nd, 3=3rd)\n    - Name - Name\n    - Sex - Sex\n    - Age - Age\n    - Sibsp - Number of Parents \/ Childern Aboard\n    - Ticket - Ticket Number\n    - Fare - Passenger Fare\n    - Cabin - Cabin\n    - Embarked - Port of Embarketion ( C = Cherbourg, Q = Queenstown, S = Southampton )","510f188e":"## Check PClass","d4f2c2e0":"# Titanic: Machine Learning from Disaster"}}