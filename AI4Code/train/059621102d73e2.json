{"cell_type":{"738edc09":"code","94709f08":"code","963ff2f1":"code","849727ab":"code","9b83603e":"code","05cc815d":"code","e4e0c73a":"code","58e43f33":"code","c7035b7b":"code","8af8ff7f":"code","8637b86e":"code","400781d7":"code","ca4e6f3b":"code","63e3fb77":"code","2c01518c":"code","705e4c6d":"code","4afceb9a":"code","9ff57298":"code","c51d4d82":"code","ac77f9ae":"code","3026027a":"code","eb17fe51":"code","e37c5a37":"code","3eb6fed4":"code","1282e05f":"code","2cb36185":"code","63fb2eec":"code","6070a280":"code","9a415e4d":"code","ec0e11b3":"code","85ab4a02":"code","5d66a0a9":"code","d714526d":"code","38e6bf16":"code","92a85602":"code","0d26b4eb":"code","3c1db299":"code","05672439":"code","34702a38":"code","0b18cd0f":"code","79ec62f1":"code","131acd4c":"code","91645677":"code","19b2be85":"code","afb61bda":"code","c2401bd1":"code","8564da06":"code","77ab518d":"code","4e56cace":"code","50cce7c6":"code","92f1f0c2":"code","b42f7027":"code","564927ea":"code","21c4d168":"code","ba69ed04":"code","378e7c3b":"code","46735302":"code","98f613cc":"code","05304868":"code","42e76f7c":"code","7816f1ba":"code","d3c41e5a":"code","cf2df801":"code","96da09c7":"code","fa9d9d91":"code","b5ff1507":"code","80b42d66":"code","ebec0d2d":"markdown","8c67232c":"markdown","48223447":"markdown","e0d76870":"markdown","b20bdfb3":"markdown","036eeec6":"markdown","39421181":"markdown","84f3b508":"markdown","d5e3c08d":"markdown","87bdfed5":"markdown","d0d665f1":"markdown","4716e8c1":"markdown","d0df433c":"markdown","4725e6f3":"markdown","19ca55e1":"markdown","77678c91":"markdown","dded00e6":"markdown","b182df90":"markdown","b37aaeeb":"markdown","92146a46":"markdown","620c89e2":"markdown","a2e9a26b":"markdown","014d25c0":"markdown","982cb441":"markdown","a5b9b95f":"markdown","3764dbb6":"markdown","6a9a09b4":"markdown","985834d4":"markdown","698fb924":"markdown","691256d1":"markdown","769a20b6":"markdown","10b5fe3e":"markdown","96b601c1":"markdown","10088621":"markdown","7aceedf3":"markdown","67bb0f98":"markdown","4adcb1ba":"markdown","a11c761b":"markdown","5962a449":"markdown","b8db8812":"markdown","bd63263a":"markdown"},"source":{"738edc09":"#load important libraries\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","94709f08":"#Reading dataset from csv file\ndf=pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndf","963ff2f1":"#check important information about dataset\ndf.info()","849727ab":"# check dataset columns and rows\nprint(\"Number of Patient {} before Cleaning data,\\nNumber of Columns {}\".format(df.shape[0],df.shape[1]))","9b83603e":"#check missed value in data frame\ndf.isnull().sum()","05cc815d":"##check duplicate row in data for dataset\ndf.duplicated().sum()","e4e0c73a":"#check statistical data\ndf.describe()","58e43f33":"# Handicap not Handcap , handicap grads from 0 not handicap.\ndf.Handcap.unique()","c7035b7b":"# Scholarship have 1 , or not 0\ndf.Scholarship.unique()","8af8ff7f":"# Hipertension \ndf.Hipertension.unique()","8637b86e":"# Diabetes\ndf.Diabetes.unique()","400781d7":"#Alcoholism\ndf.Alcoholism.unique()","ca4e6f3b":"# count the number of unique patientid and appointmentids\ndf.loc[:, ['PatientId', 'AppointmentID']].nunique()","63e3fb77":"#How Many reappointments??\ndf.PatientId.duplicated().sum()","2c01518c":"df.rename(columns={'Handcap':'Handicap'},inplace=True)","705e4c6d":"df.rename(columns={\"ScheduledDay\":\"RegisterDay\"},inplace=True)","4afceb9a":"# convert AppointmentDay from string format to time format\ndf['AppointmentDay'] = pd.to_datetime(df['AppointmentDay'])\n\n# get month, day name and hour from Start Time after convert\ndf['Appointment_month'] = df['AppointmentDay'].dt.month\ndf['Appointment_day'] = df['AppointmentDay'].dt.day_name()\ndf['Appointment_hour'] = df['AppointmentDay'].dt.hour\n","9ff57298":"df.head()","c51d4d82":"#convert RegisterDay from string format to time format\ndf['RegisterDay'] = pd.to_datetime(df['RegisterDay'])","ac77f9ae":"# get month and day name and hour from Start Time after convert\ndf['Register_month'] = df['RegisterDay'].dt.month\ndf['Rgister_day'] = df['RegisterDay'].dt.day_name()\ndf['Register_hour'] = df['RegisterDay'].dt.hour","3026027a":"df.Appointment_hour.max()","eb17fe51":"df.drop('Appointment_hour', axis=1, inplace=True)\n","e37c5a37":"df.info()","3eb6fed4":"df['RegisterDate'] = df['RegisterDay'].dt.date\ndf['AppointmentDay'] = df['AppointmentDay'].dt.date\n\ndf['RegisterDate'].head()","1282e05f":"df.head(2)","2cb36185":"df.info()","63fb2eec":"##convert RegisterDay and AppointmentDay to datetime64 to get wating time\ndf['RegisterDate'] = pd.to_datetime(df['RegisterDate'])\ndf['AppointmentDay'] = pd.to_datetime(df['AppointmentDay'])","6070a280":"df.info()","9a415e4d":"# Check wating time and some cases Wrong AppointmentDay\ndf['waiting_time']= (df['AppointmentDay']-df['RegisterDate']).dt.days\ndf.tail()","ec0e11b3":"##check waiting time unique values\ndf['waiting_time'].unique()","85ab4a02":"wrong_appoinment=df[df['waiting_time']<0]\nwrong_index=wrong_appoinment.index\nwrong_index","5d66a0a9":"df=df.drop(df.index[[wrong_index]])","d714526d":"##Check for Negative values\nwrong_appoinment=df[df['waiting_time']<0]\nwrong_appoinment","38e6bf16":"sns.countplot(y='No-show',hue='Handicap',data=df);","92a85602":"#filter patient which had more one appointment and No-show and show-up\npatients_Many_appointment=df[df.PatientId.duplicated()]\npatients_Many_appointment.head()","0d26b4eb":"df.Age.unique()","3c1db299":"df.Age.plot.box();\n","05672439":"##clean Negatvie value for age and outliers data \ndf=df[df['Age']>=0] ## drop ages less than zero\ndf=df[df['Age']<115] ## drop ages greater than 115 (inclusve) \ndf.sample(3)","34702a38":"df.Age.plot.box();","0b18cd0f":"df.to_csv('clean_df.csv',index=False)","79ec62f1":"df.shape","131acd4c":"# count the number of unique patientid and appointmentids\ndf.loc[:, ['PatientId', 'AppointmentID']].nunique()","91645677":"df.describe()","19b2be85":"#check corrlation data or relation data before cleaning to be carefull during drop and create any date \ndf.corr()","afb61bda":"## check percent of show up the patient and no show \ndf['No-show'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20);","c2401bd1":"# Check duplicated days for registration for all dataset\ndf['RegisterDay'].duplicated().sum()","8564da06":"## check what happens in No-show percent during duplicate register Mistake\nduplicate_register=df[df['RegisterDay'].duplicated()]\nduplicate_register['No-show'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20);","77ab518d":"## How Many patients make more than one appointments\nmany_patient_appoint=df[df.PatientId.duplicated()]\nf=many_patient_appoint['No-show'].value_counts()\nprint(\"{} Patients made more than one appointment \".format(f[0]))","4e56cace":"num_patients_duplicated=duplicate_register.PatientId.duplicated().sum()\nprint(\"{} Patients made many duplicate Registration\".format(num_patients_duplicated))","50cce7c6":"## plote to corrlate two columns\ndef gotplot(col1,col2,plotfig,Title='',XLab='',YLab=''):\n    pd.crosstab(df[col1],df[col2]).plot(kind=plotfig,figsize=(17,8))\n    plt.title(Title)\n    plt.xlabel(XLab)\n    plt.ylabel(YLab);","92f1f0c2":"#Relation between Waiting time and No-show\n#pd.crosstab(df['waiting_time'],df['No-show']).plot(kind='line',figsize=(17,8));\ngotplot('waiting_time','No-show','line','How Far registeration date from Appointment date','Days from Register Day','Appointments')","b42f7027":"df.columns","564927ea":"##Check days and months has high appointment\n\ngotplot('Appointment_month','No-show','bar','No show appointment per Month','Month','Appointments')\n\ngotplot('Appointment_day','No-show','bar','No show appointment per Day','WeekDays','Appointments')\n","21c4d168":"## Waiting time \ndf.waiting_time.value_counts().plot(kind='line',figsize=(17,8))\nplt.title('Waiting Time')\nplt.xlabel('Waiting Days')\nplt.ylabel('Appointments')","ba69ed04":"count_appointemnts_ADay=df.AppointmentDay.value_counts()\ncount_appointemnts_ADay","378e7c3b":"## We will take one day from last data for investgae what happen\ndf_appointments_high=df[df['AppointmentDay']=='2016-06-06']\ndf_appointments_high.sample(5)","46735302":"df_appointments_high.PatientId.duplicated().sum()","98f613cc":"df_appointments_high.RegisterDay.duplicated().sum()","05304868":"## check hwo many registeration days repeated\ndf_Reg_same=df[df['RegisterDay'].duplicated()]\ndf_Reg_same","42e76f7c":"# pd.crosstab(df['AppointmentDay'],df['No-show']).plot(kind='bar',figsize=(15,8));\n# plt.title('Releation between show up & no show appointments  ')\n# plt.xlabel('Date')\n# plt.ylabel('Appointments')\ngotplot('AppointmentDay','No-show','bar','Releation between show up & no show appointments','Date','Appointments')","7816f1ba":"## Create a group to count values according to handicap grades and No show status\ndf.groupby(['Handicap','No-show']).count()","d3c41e5a":"pd.crosstab(df['Age'],df['No-show']).plot(kind='hist',alpha=0.5);\nplt.title('Age Frequency')\nplt.xlabel('Patients Number')\n","cf2df801":"## Statistical relation for no show and age patients\ndf_noShow=df[df['No-show']=='No']\nprint(\"Average Age of patient No-show is {}\".format(df_noShow.Age.mean()))\nprint(\"Median Age of patient No-show is {}\".format(df_noShow.Age.median()))\nprint(\"Maximum Age of patient No-show is {}\".format(df_noShow.Age.max()))","96da09c7":"# pd.crosstab(df['Neighbourhood'],df['No-show']).plot(kind='bar',figsize=(17,8));\n# plt.title('Relation Between Neighbourhood & show up appointments')\n# plt.xlabel('Place')\n# plt.ylabel('Appointments');\ngotplot('Neighbourhood','No-show','bar','Relation Between Neighbourhood & show up appointments','Place','Appointments');","fa9d9d91":"high_place=df['Neighbourhood'].value_counts()\nhigh_place","b5ff1507":"print(\"{}% of petient appointment from JARDIM CAMBURI\".format((high_place[0]\/df.shape[0]*100).round(decimals=2 )))","80b42d66":"gotplot('SMS_received','No-show','bar','Relation between receiving SMS & No show','Received SMS')","ebec0d2d":"#### 20.19% of Patients No-show appointments","8c67232c":"### ======================================","48223447":"# 5-Did the patients receiving SMS keep their appointment?","e0d76870":"### >>>Percent of No-show increse from 20.19% to 27.31%<<<","b20bdfb3":"### When increase Patients who come to appointments increase No-show patients, that means most patients don't like to stay in a doctor's clinic or crowded clinic, and that because of bad distribution for appointment as we will see next.","036eeec6":"### In Waiting_time there are values Negative it's not correct because RegisterDay sholud be older than appointmentDay, drop this values which less than zero day","39421181":"# 3-Which age has a high frequency for no show?","84f3b508":"### Next 2 steps Convert time from String to time format and create columns for Month,Day and Hour","d5e3c08d":"### Noted there are outliers data and Negative in Age column","87bdfed5":"### High Patient appointment show from JARDIM CAMBURI","d0d665f1":"### Most of patient who take appointment near from Register day are No-show","4716e8c1":">> ### Impossible from 3235 to 4619 appointments per day\nbad distribution\nshould be made a limit for appointments per day, this GOOD reason for many patients didn't show up to the appointment and made other appointments\n","d0df433c":"# <a id='eda'><\/a>\n>>>>># Exploratory Data Analysis\n\n","4725e6f3":"> ### No null data for our dataset","19ca55e1":">#### age data is right skewed","77678c91":"### Something wrong here unique patientid must be same appointmentid,Many Patients have many appointments","dded00e6":">> ### Save Clean Data ","b182df90":"\n\n# Project: Medical Appointment No Shows\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","b37aaeeb":"# 4-Which location has higher appointments with no show?","92146a46":"### In waiting_time column we can see 0 days mean appointment in same RegisterDay","620c89e2":"### Create  RegisterDate to calculate  waiting time after(waiting time mean from register time to appointment time)","a2e9a26b":"#### Unfortunately, most of the patient who received SMS they No-show, Receiving SMS didn't affect to increase or decrease patients show up","014d25c0":"> ### No Dublicate Rows data for our dataset","982cb441":"### It seem like no hours in Appointment_hour drop it.","a5b9b95f":"<a id='intro'><\/a>\n## Introduction\n\n **DataSet **: This dataset collects information from 100k medical appointments in Brazil and is focused on the question of whether or not patients show up for their appointment. A number of characteristics about the patient are included in each row.\n\n> **We will try to answer many questions by investigating the dataset**.\n1. What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment.\n2. Are Handicap is the reason some patients can't come for appointments?\n3. which age has a high frequency for no show?\n4. Which location has higher appointments with no show?\n5. Did the patients receiving SMS keep their appointment?\n\n**Dataset Varibale:-**\n* PatientId: Identification of a patient\n* AppointmentID: Identification of each appointment\n* Gender: Male or Female\n* DataMarcacaoConsulta: The day of the actuall appointment, when they have to visit the doctor\n* DataAgendamento: The day someone called or registered the appointment\n* Age: How old is the patient\n* Neighbourhood: Where the appointment takes place\n* Scholarship: True or False, indicates if the patient is in the Bolsa Familia program\n* Hipertension: True or False\n* Diabetes: True or False\n* Alcoholism: True or False\n* Handcap: True or False\n* SMS_received: 1 or more messages sent to the patient\n* No-show \"No\" indicates if the patient showed up to their appointment and \"Yes\" if they didn't show up\n> ### NOTE about the encoding of the last column: it says \u2018No\u2019 if the patient showed up to their appointment, and \u2018Yes\u2019 if they did not show up.\n\n","3764dbb6":"### Handicap doesn't have a relation with no-show most of the patient who no-shows without handicap","6a9a09b4":"### Wednesday and Tuesday has high appointments per weeks, and Saturday fewer appointments\n### May highest month for appointments","985834d4":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n\n### General Properties","698fb924":"### Most patients who have age more than  38 years have a high frequency for a no-show.","691256d1":"### Many appointments during the same registered in the same month, day, hour, minute and even second that means many Employees register at the same time or Software error","769a20b6":"### Same it duplicates in registered that means the same fault in persons who responsible for booking an appointment or Software bugs.","10b5fe3e":"# 1- What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment?","96b601c1":"### From statistical data we can see some errors:-\n#### 1-data MIN AGE (-1)\n#### 2- Max age 115 years check may be outliers data\n\n","10088621":"### Same mistake happen in one day '2016-06-06', found about 4691 appointments with dublicate PatientId 391 patients took more than one appointment in same day","7aceedf3":"<a id='conclusions'><\/a>\n## Conclusions\nThis analysis had as purpose to perform an analysis of a database of medical consultations, containing more than 100k appointments in Brazil try to investgate show up patients appointment by expolere dataset variables.\n\n\n### **Wrangler:-**\n>loaded data csv file from kaggel website, by showing file we found all of data don't has NaN data and no duplicate data.\nfound some editing shloud done as more clearification as Rename ScheduledDay to be RegeisterDay,Rename Handcap to be Handicap and Change RgeisterDay and AppointmentDay from string to time and create month and weekday and hours for RgeisterDay to use during exploratory.\n\n>By check statistical data using describe function noted errors:-\n1. data MIN AGE (-1)\n2. Max age 115 years check may be outliers data\n\n>Convert RegisterDate and AppointmentDay from string to timeframe for calculating waiting time after(waiting time mean from register time to appointment time),\nextracted from Appointmentday column ( month and weekdays ) to check which  month and weekday have high no show patients\nBy check boxplot for Ages found outliers age over 102 years and age by negative drop all these data and \nsave all clean data as CSV.\n\n>after calculated waiting time found negative value and this not correct because of Register day older than appointment day, drop these values less than zero, but zero means appointment data in the same day for register\n \n\n#### 1. What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment?\n>**No-show**:> We got more information from the clean dataset which has 3235 to 4619 appointments per day that very high density for patients appointments, caused in the highly crowded clinic led to 20.19% of Patients' No-show when checking the relation between AppointmentDay and no-show we found they increase together and result in many patients made many appointments, 62299 Patients and 110527 Appointments.\n\n\n>When checking registration days we found duplicates dates with Many appointments during the same registered in the same month, day, hour, minute, and even second that means many Employees register at the same time or Software error,\nand when filtrate these registered days which has duplicated in the new data frame we found Percent of No-show increase from 20.19% to 27.31%, that means this mistake maybe this one of the reasons for no show\u200b.\n\n>From Relation between waiting time and no show we saw most of the patients have an appointment in the same day for the register, this is a bad distribution for appointments, for that most of no show cases happen with patients have an appointment in the same day for register.\n\n> confirming bad distribution for appointments if we see the relation between Appointment Month and no show or Appointment Day and no show, most of no show patients increasing with high appointments.\n\n\n#### 2. Are Handicap is the reason some patients can't come for appointments?\n\n>*Handicap** not affected in a no-show, most of the patients no show don't have a handicapping show.\n\n##### 3. which age has a high frequency for no show?\n>Most patients who have age more than  38 years have a high frequency for a no-show.\n\n>Average Age of patient No-show is 37.79 yeasrs\n\n>Median Age of patient No-show is 38 years\n\n#### 4. Which location has higher appointments with no show?\n\n>**Higher place for appointment**: with check Neighbourhood data we found 6.98% of petient appointment from JARDIM CAMBURI\n and they have same high show and no .\n\n#### 5. Did the patients receiving SMS keep their appointment?\n\n>**SMS to remind** Unfortunately, most of the patients who received SMS they No-show, Receiving SMS didn't affect to increase or decrease patients show up\n\n","67bb0f98":"### Rename Handcap to be Handicap","4adcb1ba":">>># Data Cleaning","a11c761b":"# 2- Are Handicap is the reason some patients can't come for appointments?","5962a449":"### Rename ScheduledDay to RegisterDay","b8db8812":"### Most of patient got appointment in same day for RegisterDay","bd63263a":">#### Rename ScheduledDay to be RegeisterDay to more clearification\n>#### Rename Handcap to be Handicap\n>#### Change RgeisterDay and AppointmentDay from string to time and create month and weekday and hours for RgeisterDay to use during exploratory "}}