{"cell_type":{"5d095d7f":"code","af8ae014":"code","6c8e4a5a":"code","b282d7bf":"code","45b5f304":"code","c2b9922c":"code","8d6c58b8":"code","3d33269b":"code","b00a0105":"code","7ec6e950":"code","ebfc7771":"code","fff8b8b7":"code","9975ede0":"code","f7c877e3":"markdown","01e18ed9":"markdown"},"source":{"5d095d7f":"###Import all the relevant libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure, show\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","af8ae014":"###import the DataSet\ntv_shows= pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')\ntv_shows.head()\ntv_shows.info()","6c8e4a5a":"###General Information about the DataSet\nBestMovie=tv_shows.loc[tv_shows['IMDb'].idxmax()]\nLongestMovie=tv_shows.loc[tv_shows['Runtime'].idxmax()]\nTitle=BestMovie['Title']\nLongestTitle=LongestMovie['Title']\nLongest=LongestMovie['Runtime']\n\nprint('According to IMDb evaluation, the best movie is '+ Title + ', and the longest one is '+LongestTitle+ ' with ' +str(Longest) + 'min!')","b282d7bf":"###Divide the DataSet according to the Platform\nNetflix=tv_shows[tv_shows['Netflix']>0][['Title','Age','IMDb','Year','Directors','Genres','Country','Language','Runtime']]\nPrimeVideo=tv_shows[tv_shows['Prime Video']>0][['Title','Age','IMDb','Year','Directors','Genres','Country','Language','Runtime']]\nHulu=tv_shows[tv_shows['Hulu']>0][['Title','Age','IMDb','Year','Directors','Genres','Country','Language','Runtime']]\nDisney=tv_shows[tv_shows['Disney+']>0][['Title','Age','IMDb','Year','Directors','Genres','Country','Language','Runtime']]","45b5f304":"index_netflix = Netflix.index\ntotal_netflix_movies = len(index_netflix)\n\nindex_hulu = Hulu.index\ntotal_hulu_movies = len(index_hulu)\n\nindex_prime = PrimeVideo.index\ntotal_prime_movies = len(index_prime)\n\nindex_disney = Disney.index\ntotal_disney_movies = len(index_disney)\n\n","c2b9922c":"figure(figsize=(15,6))\nAllPlatforms=[total_netflix_movies,total_hulu_movies,total_prime_movies,total_disney_movies ]\n#AllPlatforms.sort()\nLabels=['Neflix', 'Hulu', 'Prime Video', 'Disney']\nComparisonChart=sns.barplot(Labels, AllPlatforms, palette='Blues')\nplt.xlabel('Platform', fontweight='bold', color = 'darkturquoise', fontsize='14')\nplt.ylabel('Number of Streaming Available', fontweight='bold', color = 'darkturquoise', fontsize='14')\n#ComparisonChart.set(xlabel='Platform', ylabel='Number of Streaming Available')\nComparisonChart.set_title('Number of Streaming Available per Platform', fontweight='bold', color = 'teal', fontsize='18')","8d6c58b8":"# to seperate Genres column in dataset\nseperated_genres = tv_shows['Genres'].str.get_dummies(',')\n\nList_genres=[]\n\nfor col in seperated_genres:\n    List_genres.append(col)\n\nprint(List_genres)\n","3d33269b":"# to seperate Language column in dataset\nseperated_languages = tv_shows['Language'].str.get_dummies(',')\n\nList_languages=[]\n\nfor col in seperated_languages:\n    List_languages.append(col)\n","b00a0105":"## Let's build a search function\n\ndef NextMovie(ScoreMovie,GenreMovie,YearMovie,LanguageMovie):\n    possiblemovie1=tv_shows.loc[tv_shows['IMDb']>(ScoreMovie)]\n    possiblemovie2=possiblemovie1.loc[tv_shows['Genres'].str.contains(GenreMovie, na=False)]\n    possiblemovie3=possiblemovie2.loc[tv_shows['Year']>(YearMovie)]\n    possiblemovie4=possiblemovie3.loc[tv_shows['Language'].str.contains(LanguageMovie, na=False)]\n    try:\n      print(possiblemovie4['Title'])\n    except:\n      print(\"I\\'m so sorry, no Title available, try to change parameters\")\n    ","7ec6e950":"print(List_languages)\nprint(List_genres)\n","ebfc7771":"### Example\n\nNextMovie(8,'Adventure',2015,'English')","fff8b8b7":"def Availability(title):\n    \n    NetflixAvailable=Netflix.loc[Netflix['Title']==(title)]\n    PrimeVideoAvailable=PrimeVideo.loc[PrimeVideo['Title']==(title)]\n    DisneyAvailable=PrimeVideo.loc[PrimeVideo['Title']==(title)]\n    HuluAvailable=PrimeVideo.loc[PrimeVideo['Title']==(title)]\n   \n        \n    if (len(NetflixAvailable) >0):\n            print('It is available on Netflix')\n    else:\n            print('It is not Available on Netflix')\n\n    if (len(PrimeVideoAvailable) >0):\n            print('It is available on PrimeVideo')\n    else:\n            print('It is not Available on PrimeVideo')\n\n    if (len(DisneyAvailable) >0):\n            print('It is available on Disney+')\n    else:\n            print('It is not Available on Disney+')\n\n    if (len(HuluAvailable) >0):\n            print('It is available on Hulu')\n    else:\n            print('It is not Available on Hulu')\n        \n        \n","9975ede0":"###Example\ntitle='Inglourious Basterds'\nAvailability(title)","f7c877e3":"# **What do you want to watch next?**\n\nFill in the following variables:\n* ScoreMovie: min IMDb\n* GenreMovie: pick one from List_genres \n* YearMovie: min Year\n* LanguageMovie: pick one from List_languages","01e18ed9":"# **On Which Platform is this Movie Available?**\n\nFill in the following variable: title"}}