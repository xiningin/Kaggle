{"cell_type":{"0dea02c2":"code","35107bda":"code","d62d61b8":"code","ce4c9ed3":"code","6fa128ef":"code","adb8d8c7":"code","edf255ae":"code","d56c9e9c":"code","ab6ec1af":"code","e527d08d":"code","6e746381":"code","374824b9":"code","8d3f6d4f":"code","7844c67c":"code","2063c635":"code","52cda726":"code","e1cd681c":"code","fac94a09":"code","11a3ff27":"code","870d8b8e":"code","4e403183":"code","8c398e07":"code","a959398b":"code","83af5223":"code","ad0317bc":"code","07f430de":"code","c68893fc":"code","87883846":"code","44c3d55f":"code","bd5d7df4":"code","12b53060":"markdown","8631c838":"markdown","80d04d08":"markdown"},"source":{"0dea02c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35107bda":"data = pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')","d62d61b8":"data.head()","ce4c9ed3":"data.drop(['Unnamed: 0', 'Unnamed: 0.1'], axis=1, inplace=True)","6fa128ef":"data.head()","adb8d8c7":"data.shape","edf255ae":"data.isnull().sum()","d56c9e9c":"print(data['Company Name'].unique())","ab6ec1af":"print(data['Company Name'].value_counts().keys())","e527d08d":"import plotly.express as px\nfig = px.bar(data, x=data['Company Name'].value_counts(), \n             y=data['Company Name'].value_counts().keys(), \n             orientation='h',\n            height=1200)\nfig.show()","6e746381":"from datetime import datetime\ndate = 'Aug 07 2020 05:12PM'\n\ncdate = datetime.strptime(date, '%b %d %Y %I:%M%p')","374824b9":"print(cdate)","8d3f6d4f":"from dateutil.parser import parse","7844c67c":"dt = parse('Fri Aug 07, 2020 05:12 UTC')\ndt2 = dt.strftime('%Y-%m-%d')\nprint(dt2)","2063c635":"dates = []\nfor i in data['Datum']:\n    date = parse(i)\n    date = date.strftime('%Y-%m-%d')\n    dates.append(date)","52cda726":"data['Date'] = dates","e1cd681c":"data.head()","fac94a09":"data.isnull().sum()","11a3ff27":"data.drop(' Rocket', axis=1, inplace=True)","870d8b8e":"data","4e403183":"data['Date']","8c398e07":"datess = []\nfor i in data['Date']:\n    a = datetime.strptime(i, '%Y-%m-%d').date()\n    datess.append(a)","a959398b":"data['Date'] = datess","83af5223":"years = []\nfor i in data['Date']:\n    year = i.year\n    years.append(year)\n    \ndata['Year'] = years","ad0317bc":"data['Country'] = data['Location'].apply(lambda x:x.split(', ')[-1])","07f430de":"# Country launch counts\nfig = px.pie(data, values=data['Country'].value_counts(), \n             names=data['Country'].value_counts().keys(), \n             title='Country vs Launch')\nfig.show()\n","c68893fc":"fig = px.bar(data, x=data['Country'].value_counts(), \n             y=data['Country'].value_counts().keys(), \n             orientation = 'h',\n            height=800)\nfig.show()","87883846":"fig = px.bar(data, x=data['Location'].value_counts(), \n             y=data['Location'].value_counts().keys(), \n             orientation = 'h',\n            height=800)\nfig.show()","44c3d55f":"fig = px.bar(data, x=data['Year'].value_counts(), \n             y=data['Year'].value_counts().keys(), \n             orientation = 'h',\n            height=800)\nfig.show()","bd5d7df4":"fig = px.pie(data, values=data['Status Rocket'].value_counts(), \n             names=data['Status Rocket'].value_counts().keys(), \n             title='Rocket Status')\nfig.show()","12b53060":"Frequency of Launch by Country","8631c838":"Location vs frequency of launch","80d04d08":"# Plots"}}