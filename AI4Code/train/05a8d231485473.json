{"cell_type":{"a6edec34":"code","835c53e2":"code","c9808873":"code","49d3a6a3":"code","9ddf3774":"code","251f9c73":"code","d924cb22":"code","5a495c88":"code","3aa3bd0d":"code","5329c774":"code","a08c1430":"code","5a17cdb3":"code","08f6542d":"code","f7a16e45":"code","56290647":"code","b66f4827":"code","6ee6f1a0":"code","81336e4a":"code","a3a73514":"code","3f431241":"code","d69be03e":"code","3d2cf9ed":"code","bb84b20d":"code","db8e9781":"code","35c37147":"code","66b2473d":"code","4fb6ccdb":"code","fec76076":"code","f62102ff":"code","cd5dc38b":"code","2c281f87":"code","600e1c2e":"code","ede951e8":"code","9a545e65":"code","8b684200":"code","1e87664c":"code","7551fa15":"code","365e54ce":"code","e9b8782e":"code","67e7f836":"code","fb9b0000":"code","f3ae5ba1":"code","6cb1f0e4":"code","8388c138":"code","0a45a370":"code","0f4dc59c":"code","89f76ae7":"code","662df134":"code","1140cb78":"code","d27cbe19":"code","9ed6518c":"code","f59a95e8":"code","edebc1b6":"code","ef76d113":"code","f4867d63":"code","7ab7aa97":"code","32e98e95":"code","eaeecfd2":"code","9814c736":"markdown","2241b950":"markdown","b4cb589e":"markdown","048981f2":"markdown","ee498232":"markdown","b9f0b02e":"markdown","0490e2c6":"markdown","b1465558":"markdown","f4479c56":"markdown","d2a2c36b":"markdown","4e1a58e7":"markdown","c029b8a5":"markdown","419653a1":"markdown","9f983383":"markdown","2fc7be5a":"markdown","3e18973c":"markdown","a052c5f4":"markdown","b4f229f7":"markdown","34314036":"markdown","8bc23572":"markdown","cd118b6b":"markdown","fc4166cf":"markdown","6fc356d9":"markdown","e9ee349c":"markdown","6a338dab":"markdown"},"source":{"a6edec34":"import pandas as pd\n\ndata = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\n\nprint(data.shape)\n\ndata.tail()","835c53e2":"import matplotlib.pyplot as plt\nimport numpy as np\nplt.scatter(data['GrLivArea'],\n            data['SalePrice'],\n            c=data['GrLivArea'])\nplt.xlabel(\"GrLivArea\")\nplt.ylabel(\"SalePrice\")","c9808873":"data=data.drop(data.loc[(data['SalePrice'] < 200000) & (data['GrLivArea'] >4000)].index)\n\ndata.shape","49d3a6a3":"\nplt.scatter(data['GrLivArea'],\n            data['SalePrice'],\n            c=data['GrLivArea'])\nplt.xlabel(\"GrLivArea\")\nplt.ylabel(\"SalePrice\")","9ddf3774":"# Data Splitting\n\n# ids =X_test[X_test.columns[0]]\n# print(ids.shape)\n\n# y_train = X_train[X_train.columns[-1]]\n# print(y_train.shape)\n\n# data=pd.concat((X_train,X_test)).reset_index(drop=True)\n# data=data.drop(['SalePrice','Id'],1)\n# data.shape","251f9c73":"data_missing=data.isnull().sum().sort_values(ascending = False)\n\ndata_missing=data_missing.drop(data_missing[data_missing==0].index)\n\ndata_missing","d924cb22":"data['PoolQC']=data['PoolQC'].fillna('no')","5a495c88":"data['MiscFeature']=data['MiscFeature'].fillna('no')","3aa3bd0d":"data['Alley']=data['Alley'].fillna('no')","5329c774":"data['Fence']=data['Fence'].fillna('no')","a08c1430":"data['FireplaceQu']=data['FireplaceQu'].fillna('no')","5a17cdb3":"data['GarageCond']=data['GarageCond'].fillna('no')\n\ndata['GarageQual']=data['GarageQual'].fillna('no')\n\ndata['GarageFinish']=data['GarageFinish'].fillna('no')","08f6542d":"data['GarageYrBlt']=data['GarageYrBlt'].fillna(0)","f7a16e45":"data['GarageType']=data['GarageType'].fillna(0)\n","56290647":"data['GarageArea']=data['GarageArea'].fillna(0)\n","b66f4827":"data['GarageCars']=data['GarageCars'].fillna(0)","6ee6f1a0":"data['BsmtExposure']=data['BsmtExposure'].fillna('no')\ndata['BsmtCond']=data['BsmtCond'].fillna('no')\n","81336e4a":"data['BsmtQual']=data['BsmtQual'].fillna('no')\ndata['BsmtFinType2']=data['BsmtFinType2'].fillna('no')\ndata['BsmtFinType1']=data['BsmtFinType1'].fillna('no')","a3a73514":"\ndata['Fence']=data['Fence'].fillna('no')\n\ndata['FireplaceQu']=data['FireplaceQu'].fillna('no')\n","3f431241":"data['BsmtFinSF1']=data['BsmtFinSF1'].fillna(0)\ndata['BsmtFinSF2']=data['BsmtFinSF2'].fillna(0)","d69be03e":"data['MasVnrType']=data['MasVnrType'].fillna('no')\ndata['MasVnrArea']=data['MasVnrArea'].fillna(0)","3d2cf9ed":"data['BsmtFullBath']=data['BsmtFullBath'].fillna(0)\n\n\ndata['BsmtHalfBath']=data['BsmtHalfBath'].fillna(0)\n\ndata['BsmtUnfSF']=data['BsmtUnfSF'].fillna(0)","bb84b20d":"data['Exterior2nd']=data['Exterior2nd'].fillna('NA')\n\ndata['Exterior1st']=data['Exterior1st'].fillna('NA')","db8e9781":"data['TotalBsmtSF']=data['TotalBsmtSF'].fillna(0)","35c37147":"# from collections import Counter\n# print(dict(Counter(data['MSZoning'])))","66b2473d":"# data['MSZoning']=data['MSZoning'].fillna('RL')\ndata['MSZoning']=data['MSZoning'].fillna(data['MSZoning'].value_counts().index[0])","4fb6ccdb":"# print(dict(Counter(data['Utilities'])))","fec76076":"# data['Utilities'] = data['Utilities'].fillna('AllPub')\ndata['Utilities'] = data['Utilities'].fillna(data['Utilities'].value_counts().index[0])","f62102ff":"# print(dict(Counter(data['Functional'])))","cd5dc38b":"# data['Functional']=data['Functional'].fillna('Typ')\ndata['Functional']=data['Functional'].fillna(data['Functional'].value_counts().index[0])","2c281f87":"# print(dict(Counter(data['SaleType'])))","600e1c2e":"# data['SaleType']=data['SaleType'].fillna('WD')\ndata['SaleType']=data['SaleType'].fillna(data['SaleType'].value_counts().index[0])","ede951e8":"# print(dict(Counter(data['KitchenQual'])))","9a545e65":"# data['KitchenQual']=data['KitchenQual'].fillna(\"Gd\")\n\ndata['KitchenQual']=data['KitchenQual'].fillna(data['KitchenQual'].value_counts().index[0])","8b684200":"# print(dict(Counter(data['Electrical'])))","1e87664c":"# data['Electrical']=data['Electrical'].fillna('SBrkr')\ndata['Electrical']=data['Electrical'].fillna(data['Electrical'].value_counts().index[0])","7551fa15":"data['LotFrontage']=data['LotFrontage'].fillna(data['LotFrontage'].dropna().mean())","365e54ce":"data_missing=data.isnull().sum().sort_values(ascending = False)\ndata_missing=data_missing.drop(data_missing[data_missing==0].index)\ndata_missing","e9b8782e":"# replace [ YearBuilt ] , [ YearRemodAdd ] columns, with new column [ Year ]\n\ndata['Year']=0\ndata.loc[data['YearBuilt']!=data['YearRemodAdd'],'Year']=1\ndata=data.drop(['YearRemodAdd','YearBuilt'],1)\n\n(data['Year']==1).sum()","67e7f836":"data.loc[(data['GarageType']==0), ['GarageType']]='NA'","fb9b0000":"# the number of columns with categorical data\n\ndt_cat = data.dtypes=='object'\ndt_cat = dt_cat[dt_cat].index\nlen(dt_cat)","f3ae5ba1":"from sklearn.preprocessing import LabelEncoder\n\nfor i in dt_cat:\n    data[i]=LabelEncoder().fit_transform(data[i])\n","6cb1f0e4":"# let's check the catedorical data\n\ndt_cat = data.dtypes=='object'\ndt_cat = dt_cat[dt_cat].index\nlen(dt_cat)","8388c138":"corr = data.corr().sort_values(by='SalePrice', ascending=False)\n\n\n# We selected over here the 50 most influential features of the data\ncorr1 = corr['SalePrice'].head(50).index\ncorr1 = corr1[1:]","0a45a370":"# import seaborn as sns\n# plt.subplots(figsize=(10,7))\n# sns.heatmap(corr)\n# plt.show()","0f4dc59c":"# extract [X_train, X_test] from the data after data-preprocessing\n\nX_train = data[corr1].iloc[:955,1:-1]\ny_train = data.iloc[:955,-2]\n\nX_test  = data[corr1].iloc[955:,1:-1]\ny_test = data.iloc[955:,-2]\n\n# print(X_train.shape) \n# print(y_train.shape)\n\n# print(X_test.shape)\n# print(y_test.shape)","89f76ae7":"from sklearn.preprocessing import StandardScaler, MinMaxScaler\nss=StandardScaler()\nX_train=ss.fit_transform(X_train)\nX_test =ss.fit_transform(X_test)\n\n\n'''\nAnother solution\n'''\n# import numpy as np\n# for i in range(1,X_train.shape[1]+1):\n#     X_train[X_train.columns[i]]=(X_train[X_train.columns[i]]-X_train[X_train.columns[i]].mean())\/np.std(X_train[X_train.columns[i]])\n\n# X_train.tail(15)","662df134":"from sklearn.linear_model import Ridge, Lasso, LinearRegression\nlr = LinearRegression()\nlr.fit(X_train, y_train)","1140cb78":"print(lr.score(X_train, y_train))\nlr.score(X_test, y_test)","d27cbe19":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor(n_estimators = 200,\n                           max_depth = 12)\n\nrfr.fit(X_train,y_train)","9ed6518c":"print(rfr.score(X_train,y_train))\nrfr.score(X_test,y_test)","f59a95e8":"y_pred = rfr.predict(X_test)","edebc1b6":"from sklearn.metrics import mean_squared_error\n\nerror = mean_squared_error(y_test,y_pred)\nerror","ef76d113":"from xgboost import XGBRegressor\nXGBR = XGBRegressor(n_estimators=90,\n                    learning_rate=0.06,\n                    random_state=44)\n\nXGBR.fit(X_train, y_train, verbose=False)","f4867d63":"print(XGBR.score(X_train,y_train))\nXGBR.score(X_test,y_test)","7ab7aa97":"y_pred = XGBR.predict(X_test)","32e98e95":"from sklearn.metrics import mean_squared_error\n\nerror = mean_squared_error(y_test,y_pred)\nerror","eaeecfd2":"pd.DataFrame().to_csv('__Ayad__') # Ignore this command line","9814c736":"# <span style=\"color:red\">\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/Ayad\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n<\/span>","2241b950":"### <span style=\"color:magenta\">Score<\/span>","b4cb589e":"#### fill nan with the most frequent value","048981f2":"### <span style=\"color:green\">Linear Model<\/span>","ee498232":"# <span style=\"color:red\">\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/Ayad\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n<\/span>","b9f0b02e":"### <span style=\"color:magenta\">XGBoost<\/span>","0490e2c6":"#### in column <span style=\"color:blue\">data['GarageType']<\/span>, there is 0 number among the categorical data\n#### we'll transform it to object before label encoder performing\n","b1465558":"##### there are no missng values \ud83d\ude03\ud83d\ude03\ud83d\ude03\ud83d\ude03\n##### really wonderful \ud83e\udd19\ud83e\udd19\ud83e\udd19","f4479c56":"### <span style=\"color:magenta\">Error<\/span>","d2a2c36b":"# <span style=\"color:red\">5- Data Rescaling<\/span>","4e1a58e7":"# <span style=\"color:red\">1- drop outliers<\/span>","c029b8a5":"### <span style=\"color:chocolate\">Score<\/span>","419653a1":"### <span style=\"color:green\">Score<\/span>","9f983383":"# <span style=\"color:blue\">Data<\/span>","2fc7be5a":"#### note: the hash sign is another solution","3e18973c":"# <span style=\"color:red\">2- Find out columns with missing values and fix it<\/span>","a052c5f4":"# <span style=\"color:red\">4- Feature Selection (Feature Engineering)<\/span>\n","b4f229f7":"#### there is no any categorical data \ud83d\ude19\ud83d\ude19\ud83d\ude19\ud83d\ude19\ud83d\ude19\n#### great job ^_^","34314036":"\n# <span style=\"color:red\">6- model selection<\/span>","8bc23572":"### <span style=\"color:chocolate\">Error<\/span>","cd118b6b":"# Thanks a lot <span style=\"color:red\">@_@<\/span>","fc4166cf":"## <span style=\"color:green\">feature extraction (feature engineering)<\/span>","6fc356d9":"# <span style=\"color:red\">3- Encodin categorical data<\/span>\n","e9ee349c":"###  <span style=\"color:chocolate\">Random Forest<\/span>","6a338dab":"![House price prediction](https:\/\/i0.wp.com\/thecleverprogrammer.com\/wp-content\/uploads\/2020\/12\/Machine-Learning-Project-on-House-Price-Prediction.png?fit=1280%2C720&ssl=1)"}}