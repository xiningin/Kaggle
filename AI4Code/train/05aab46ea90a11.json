{"cell_type":{"da62efc1":"code","d3c328aa":"code","50e06a24":"code","7bcab283":"code","32ba88f3":"code","52ac6559":"code","1ccbb6ce":"code","f36136f3":"code","2d7a4ce4":"code","943d0c50":"code","f810370e":"code","0164ca00":"code","e4bf1249":"code","44e662c0":"code","731e3319":"code","24786a6d":"code","d331a0cd":"code","ad86f9bd":"code","ba71e4ba":"code","33a18e47":"code","9b70cb72":"code","27f14d8c":"code","47d45ebe":"code","01c017d8":"code","a6112a46":"code","e8e89e5e":"markdown","2c3e99c8":"markdown","8bea6701":"markdown","7194204d":"markdown","3ada0e73":"markdown","3703a9d2":"markdown","724852f2":"markdown","2a019d7b":"markdown","13cbea1e":"markdown","3e65b3b1":"markdown","6f82e125":"markdown","7eec4057":"markdown","11455fd7":"markdown","81a0310d":"markdown","0a0434b7":"markdown","4356d362":"markdown","c9d6e7d0":"markdown","2ccad729":"markdown","fc2c10db":"markdown","8f378ffa":"markdown","afe2d23f":"markdown","e3a07fd7":"markdown","120b1c42":"markdown","1274c7f4":"markdown","0a4245ae":"markdown","984d5951":"markdown","df1e943e":"markdown","77aa5933":"markdown","d482043d":"markdown","487ef7a6":"markdown","5cc98539":"markdown"},"source":{"da62efc1":"!pip install pywaffle\n!pip install squarify\n!pip install dash","d3c328aa":"# Loading necessary libraries\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom pywaffle import Waffle\nimport squarify\n\n# user-defined utility scripts\nimport surveycleaner","50e06a24":"# loading data\ndf = pd.read_csv(\"..\/input\/cleaned-mcr-kaggle-survey-2019\/clean_multiple_choice_responses.csv\")\n\n# first column is an extra; remove it\ndf = df.drop([\"Unnamed: 0\"], axis=1)\ndf.head()","7bcab283":"\"\"\" Utility Functions \"\"\"\n\ndef topN(feature, dataframe, colnames=[\"Index\", \"Value\"], omit_cols = [], all_values=False, N=10):\n    \"\"\"\n    Returns Top N values in a feature as a dictionary\n    \"\"\"\n    dataframe = dataframe[~dataframe[feature].isin(omit_cols)]\n    # Prepare data subset\n    if(all_values==False):\n        subset = dataframe[feature].value_counts().sort_values(ascending=False).head(N)\n    else :\n        subset = dataframe[feature].value_counts().sort_values(ascending=False)\n    index = list(subset.index)\n    vals = list(subset.values)\n    topN = pd.DataFrame({colnames[0]:index, colnames[1]:vals})\n    \n    return topN\n\ndef sum_vals(dictionary):\n    \"\"\"\n    Returns sum of all values in a dictionary\n    \"\"\"\n    temp = 0\n    for val in dictionary.values():\n        temp = temp + val\n    return temp\n\ndef norm_dict_vals(dictionary):\n    \"\"\"\n    Returns a dictionary with normalized values (out of 100)\n    \"\"\"\n    norm_keys = list(dictionary.keys())\n    norm_vals = []\n    sum_dict_vals = sum_vals(dictionary)\n    for val in dictionary.values():\n        norm_vals.append(round((val\/sum_dict_vals * 100)))\n    \n    return (\n        dict(\n            zip(\n                norm_keys,norm_vals\n            )\n        )\n    )\n\ndef norm_dict_vals_2(dictionary):\n    \"\"\"\n    Returns a dictionary with normalized values (out of 100)\n    \"\"\"\n    norm_keys = list(dictionary.keys())\n    norm_vals = []\n    sum_dict_vals = sum_vals(dictionary)\n    for val in dictionary.values():\n        norm_vals.append(round((val\/sum_dict_vals * 100 * 3)))\n    \n    return (\n        dict(\n            zip(\n                norm_keys,norm_vals\n            )\n        )\n    )\n    \ndef bar_viz(dataframe, xvar, yvar, another_order=None, title=\"No Title Specified\", bar_cmap=\"Set3\", edge_color=\"black\", title_color=\"black\", figure_size=(6,6)):\n    \"\"\"\n    Displays a simple bar plot\n    \"\"\"\n    fig,ax =  plt.subplots(figsize=figure_size)\n    color_list = matplotlib.cm.get_cmap(bar_cmap, (len(dataframe[xvar])))\n    \n    if(another_order==None):\n        order = yvar\n    else:\n        order = another_order\n    \n    ax.barh(\n        y=xvar,\n        data=dataframe.sort_values(by=order, ascending=True),\n        width=yvar,\n        color=color_list(np.linspace(0,1,(len(dataframe[xvar])))),\n        edgecolor=edge_color\n    )\n    ax.set_title(title, fontsize=15, color=title_color)\n    plt.show()\n    \ndef aggregate_vals(dataframe, feature):\n    aggr_list = []\n    for i in range(ds.shape[0]):\n        aggr_list = aggr_list + ds[feature].iloc[i].replace(\"\\',\",\";\").replace('[','').replace(']','').replace('\\'','').split(';')\n    \n    return aggr_list\n\ndef counting_dict(our_list):\n    cnt_dict = {}\n    for ele in our_list:\n        ele=ele.strip() # removing stray spaces\n        ele = main_cat(ele)\n        if(not(ele in list(cnt_dict.keys()))):\n            cnt_dict[ele] = 1\n        else:\n            cnt_dict[ele] += 1\n            \n    return cnt_dict\n\ndef main_cat(option):\n    \"\"\"\n    returns the main category i.e\n    before braces\n    \"\"\"\n    return (option.split('(')[0].strip())","32ba88f3":"# What kind of data roles do the correspondents work in?\n\ndata_roles = topN(\n    \"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\",\n    df,\n    colnames = [\"Data Role\", \"Respondents\"],\n    omit_cols=[\"Other\"],\n    all_values = True,\n)\n\ndata_roles_dict = norm_dict_vals(\n    dict(\n        zip(\n            list(data_roles[\"Data Role\"]),\n            list(data_roles[\"Respondents\"])\n        )\n    )\n)\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    columns=20,\n    values=data_roles_dict, \n    cmap_name=\"tab20\",\n    interval_ratio_x=0.2,\n    interval_ratio_y=0.2,\n    title={\n        'label': 'Percentage of Respondents as per their current Data Role\\n',\n        'loc': 'left',\n        'fontsize': 20\n          },\n    labels=[\"{0} ({1}%)\".format(k, v) for k, v in data_roles_dict.items()],\n    #icons='user-tie',\n    #icon_legend=True,\n    legend={\n        'loc': 'upper left',\n        'bbox_to_anchor': (1, 1),\n        'ncol': 2,\n        'fontsize': 'x-large',\n        'framealpha': 0},\n    starting_location='NW',\n    figsize=(20,6),\n)\nplt.show()\n\n","52ac6559":"# Subsetting \"Data Scientists\" and all the code to create the visualizations related to Data Scientists\n\nds = df[df['Select the title most similar to your current role (or most recent title if retired): - Selected Choice']==\"Data Scientist\"]\n\n# Top 10 countries in terms of the number of data scientists responding to the survey\nds_by_country = topN(\n    \"In which country do you currently reside?\",\n    ds,\n    colnames = [\"Country\", \"DS_Respondents\"],\n    omit_cols=[\"Other\"],\n    all_values = False,\n)\nds_by_country = ds_by_country.replace(\"United Kingdom of Great Britain and Northern Ireland\", \"UK and Northern Island\") # a slight cleanup\n\n# Size of Companies where data scientists work\nds_comp_size = topN(\n    'What is the size of the company where you are employed?',\n    ds,\n    colnames = [\"Company_Size\", \"DS_Respondents\"],\n    omit_cols=[\"Other\"],\n    all_values=True,\n)\n\n# Size of Data Science Teams\nds_team_size = topN(\n    'Approximately how many individuals are responsible for data science workloads at your place of business?',\n    ds,\n    colnames = [\"Team_Size\", \"DS_Respondents\"],\n    omit_cols=[\"Other\"],\n    all_values=True,\n)\n\n# Salary for Data Scientists\nds_salary = topN(\n    'What is your current yearly compensation (approximate $USD)?',\n    ds,\n    colnames=[\"Salary\", \"DS_Respondents\"],\n    omit_cols=[\"Other\"],\n    all_values=True\n)\n# ordering it up a bit\ndef add_feature(x):\n    return int(x.replace(',','').replace('$','').replace('>','').strip().split('-')[0])\nds_salary[\"to_order\"] = ds_salary[\"Salary\"].apply(add_feature)\nds_salary = ds_salary.sort_values(by=\"to_order\", ascending=True)\n\n# Programming Languages for an anspiring data scientist\nds_prog_lang = topN(\n    \"What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice\",\n    ds,\n    colnames=[\"Programming_Languages\", \"DS_Respondents\"],\n    omit_cols=[\"None\"],\n    all_values=False,\n    N=5\n)\n\n# Length of writing code\nds_length_code_write = topN(\n    'How long have you been writing code to analyze data (at work or at school)?',\n    ds,\n    colnames=[\"Years_Writing_Code\", \"DS_Respondents\"],\n    all_values=True\n)\n# ordering it up a bit\ndef add_feature(x):\n    return float(x.replace('years','').replace('< 1','0.5').replace('+','').replace('I have never written code','0').strip().split('-')[0])\nds_length_code_write[\"to_order\"] = ds_length_code_write[\"Years_Writing_Code\"].apply(add_feature)\nds_length_code_write = ds_length_code_write.sort_values(by=\"to_order\", ascending=True)\n\n# Length of using ML methods\nds_ml_use = topN(\n    'For how many years have you used machine learning methods?',\n    ds,\n    colnames=[\"Years_Using_ML\", \"DS_Respondents\"],\n    all_values=True\n)\n# ordering it up a bit\ndef add_feature(x):\n    return float(x.replace('years','').replace('< 1','0.5').replace('+','').replace('I have never written code','0').strip().split('-')[0])\nds_ml_use[\"to_order\"] = ds_ml_use[\"Years_Using_ML\"].apply(add_feature)\nds_ml_use = ds_ml_use.sort_values(by=\"to_order\", ascending=True)","1ccbb6ce":"# Where are most of the responders employed as data scientists from?\nbar_viz(ds_by_country, \"Country\", \"DS_Respondents\", title=\"Top 10 Countries acc. to Data Scientist responses\\n\", figure_size=(6,4))","f36136f3":"# Sizes of companies where Data Scientsts work\nbar_viz(ds_comp_size, \"Company_Size\", \"DS_Respondents\", title=\"Company Sizes where Data Scientists work\\n\", bar_cmap=\"Set2\")","2d7a4ce4":"# Sizes of teams responsible for data science workloads\nbar_viz(ds_team_size, \"Team_Size\", \"DS_Respondents\", title=\"Team Sizes\\n\", bar_cmap=\"Pastel2\")","943d0c50":"# Salary for Data Scientists\nbar_viz(ds_salary, \"Salary\", \"DS_Respondents\", another_order=\"to_order\", title=\"Salary Distribution for Data Scientists\\n\",\n        bar_cmap=\"viridis\", figure_size=(10,8))","f810370e":"# Programming Languages for Aspiring Data Scientists\nbar_viz(ds_prog_lang, \"Programming_Languages\", \"DS_Respondents\", title=\"Top 5 Programming Languages for Aspiring Data Scientists\\n\",\n        bar_cmap=\"Blues\", figure_size=(10,4))","0164ca00":"# How long have the data scientists been writing code\nbar_viz(ds_length_code_write, \"Years_Writing_Code\", \"DS_Respondents\", title=\"How long have the data scientists in the survey been writing code\\n\",\n        another_order=\"to_order\", bar_cmap=\"RdBu_r\", figure_size=(10,4))","e4bf1249":"# How long have the data scientists been using ML methods\nbar_viz(ds_ml_use, \"Years_Using_ML\", \"DS_Respondents\", title=\"How long have the data scientists used ML methods\\n\",\n        another_order=\"to_order\", bar_cmap=\"RdBu_r\", figure_size=(10,4))","44e662c0":"# reset the index\nds = ds.reset_index(drop=True)","731e3319":"# Data Scientist's Activities at Work\n\nfeature = 'Select any activities that make up an important part of your role at work: (Select all that apply) - Selected Choice'\n            \n# dictionary of vals\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None of these activities are an important part of my role at work']\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    columns=20,\n    values=norm_dict_vals(cnt_dict), \n    cmap_name=\"Dark2\",\n    interval_ratio_x=0.2,\n    interval_ratio_y=0.2,\n    title={\n        'label': 'Percentage of Main Activities for Data Scientists at Work (Highest to Lowest) \\n',\n        'loc': 'left',\n        'fontsize': 20\n          },\n    labels=[\"{0} ({1}%)\".format(k, v) for k, v in norm_dict_vals(cnt_dict).items()],\n    legend={\n        'loc': 'upper left',\n        'bbox_to_anchor': (0, -0.4),\n        'ncol': 2,\n        'fontsize': 'x-large',\n        'framealpha': 0},\n    starting_location='NW',\n    figsize=(20,6),\n)\nplt.show()","24786a6d":"# Most favoured media sources reporting about data science\n\nfeature = 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice'\n# dictionary of vals\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nmedia_src_df = pd.DataFrame({\"Media_Source\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})","d331a0cd":"# Where do most data scientists gain their data science related topics?\nbar_viz(media_src_df, \"Media_Source\", \"DS_Respondents\", title=\"Most favoured data science reporting Media Sources\\n\", figure_size=(6,4))","ad86f9bd":"# Primary Tool used by Data scientists\n\nfeature = 'What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\ngood_options = ['Local development environments', 'Cloud-based data software & APIs', 'Basic statistical software', 'Advanced statistical software',\n               'Business intelligence software']\ncnt_dict = {new_key: cnt_dict[new_key] for new_key in good_options}\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    columns=20,\n    values=norm_dict_vals(cnt_dict), \n    cmap_name=\"Set2\",\n    interval_ratio_x=0.2,\n    interval_ratio_y=0.2,\n    title={\n        'label': 'Primary Tools used by Data Scientists (Highest to Lowest)\\n',\n        'loc': 'left',\n        'fontsize': 20\n          },\n    labels=[\"{0} ({1}%)\".format(k, v) for k, v in norm_dict_vals(cnt_dict).items()],\n    legend={\n        'loc': 'upper left',\n        'bbox_to_anchor': (1, 1),\n        'ncol': 1,\n        'fontsize': 'x-large',\n        'framealpha': 0},\n    starting_location='NW',\n    figsize=(20,6),\n)\nplt.show()\n\ntools_df = pd.DataFrame({\"Primary_Tool\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})","ba71e4ba":"# IDEs\n\nfeature = 'Which of the following integrated development environments (IDE\\'s) do you use on a regular basis?  (Select all that apply) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nide_df = pd.DataFrame({\"IDE\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})","33a18e47":"# What are the main IDE tools used by data scientists?\nbar_viz(ide_df, \"IDE\", \"DS_Respondents\", title=\"Most Common IDEs used by Data Scientists\\n\", figure_size=(6,4))","9b70cb72":"# Hosted Notebook Products\n\nfeature = 'Which of the following hosted notebook products do you use on a regular basis?  (Select all that apply) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nhost_nb_df = pd.DataFrame({\"Hosted_Notebooks\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})\n\nbar_viz(host_nb_df, \"Hosted_Notebooks\", \"DS_Respondents\", title=\"Most Common Hosted Notebooks\\n\", figure_size=(6,4))","27f14d8c":"# Most used prog languages\n\nfeature = 'What programming languages do you use on a regular basis? (Select all that apply) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nhost_nb_df = pd.DataFrame({\"Prog_Lang\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})\n\nbar_viz(host_nb_df, \"Prog_Lang\", \"DS_Respondents\", title=\"Most Used Programming Languages\\n\", figure_size=(6,4))","47d45ebe":"# Most used data viz tools\n\nfeature = 'What data visualization libraries or tools do you use on a regular basis?  (Select all that apply) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nhost_nb_df = pd.DataFrame({\"Dat_Viz\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})\n\nbar_viz(host_nb_df, \"Dat_Viz\", \"DS_Respondents\", title=\"Most Used Data Viz Tools\\n\", figure_size=(6,4))","01c017d8":"# Most commonly used ML Algos\n\nfeature = 'Which of the following ML algorithms do you use on a regular basis? (Select all that apply): - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nhost_nb_df = pd.DataFrame({\"ML_algo\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})\n\nbar_viz(host_nb_df, \"ML_algo\", \"DS_Respondents\", title=\"Most Commonly used ML Algos\\n\", figure_size=(6,4), bar_cmap=\"Set3\")","a6112a46":"# Most used data viz tools\n\nfeature = 'Which of the following relational database products do you use on a regular basis? (Select all that apply) - Selected Choice'\ncnt_dict = dict(sorted((counting_dict(aggregate_vals(ds, feature))).items(), key=lambda x: x[1], reverse=True))\n# slight clean_up\ndel cnt_dict['']\ndel cnt_dict['Other']\ndel cnt_dict['None']\n\nhost_nb_df = pd.DataFrame({\"Rdbms\":list(cnt_dict.keys()), \"DS_Respondents\":list(cnt_dict.values())})\n\nbar_viz(host_nb_df, \"Rdbms\", \"DS_Respondents\", title=\"Most Used Relational Database Products\\n\", figure_size=(6,4), bar_cmap=\"Set3\")","e8e89e5e":"If we look at the above plot a little carefully, we can see how **most of the teams responsible for data science workloads have less than 10 members**","2c3e99c8":"The largest proportion of people working in data scientist roles worked in **small companies** with no more than 50 employees.","8bea6701":"### Most Favoured Media Sources Reporting about Data Science","7194204d":"### What are the most commonly used Hosted Notebook products?","3ada0e73":"- Inspite of the growth of several ***cool looking*** visualization libraries, matplotlib and seaborn continue to rule the pack","3703a9d2":"* Most of the respondents were either Data Scientists or Students and together this figure accumulated more than 40% of all entries.\n* The most unpopular roles according to this survey would be Database Engineers, Statisticians and Data Engineers.","724852f2":"- Most data scientists spend their time analyzing and understanding data\n- Application of ML into **new areas** is also a highly performed activity at work by data scientists","2a019d7b":"- MySQL is the most used Relational Database Product","13cbea1e":"## Assumption\n\nThe analysis and results that I have showcased in this report is as per the Kaggle Survey 2019 data. Therefore, when I am answering these questions, I am making an assumption that *the 19,000+ respondents who have filled the survey are enough to make conclusive judgements of the Data Science landscape across the world*. ","3e65b3b1":"### Relational Database Products in Common Use","6f82e125":"- **Blogs and Kaggle** emerge as the 2 largest media resources from where data scientists accumulate their knowledge of the field","7eec4057":"## Utility Functions","11455fd7":"### What IDEs do most Data Scientists like to work with?","81a0310d":"### Primary Tools Used By Data Scientists","0a0434b7":"The majority of the responses of those working in data science came from the USA, closely followed by India. ","4356d362":"Contrary to the highly popular statement that data scientists are paid exorbitantly high, the above visualization depicts that **most data scientists were earning less than 1000 USD per year.**","c9d6e7d0":"### Python is a Data Scientist's most preferred language. (No Surprises)","2ccad729":"- Linear and logistic regressions are supposed to be the **simplest** as per academia right? Looks like ***simple goes a long way in the real world!***","fc2c10db":"This notebook contains a detailed analysis of the 2019 Kaggle DS & ML survey dataset. I began work on this project as a means of being able to **understand the most recent data science scenario in the world**. The project provides answers to several questions that I have had over the past couple of months with regards to what I should be focussing in on to be able to make a good break into the field of data science. Now that I have been working on this for some time now, I felt it would be great to share it with the Kaggle community, especially with the large section of amateurs who are looking to make a break in this field.\n\n![Breaking into a New Field can be a confusing affair!](https:\/\/cdn.pixabay.com\/photo\/2016\/07\/07\/22\/43\/morning-1503340_1280.jpg)\n\nBreaking into any new field can be a very confusing affair, especially with all those hordes of articles on the internet and I don't intend to cook this notebook as another hackeneyed recipe. This notebook is what I would follow to shape my skills for a data science role in the future. However, please feel free to fork it and customize it to unearth relevant finds for the type of data whisperer you aspire to be :)","8f378ffa":"### Data Scientist - Everybody wants to be one!\n\nIt is no hidden fact that a large majority of those trying to dip their hands in the domain of data is doing so with the hope of transitioning into a Data Scientist role. So, how exactly is the data scientist terrain shaped up? Does it meet our expectations? Is it as difficult and esoteric as some of us think of it to be?","afe2d23f":"## Preview of Cleaned Dataframe","e3a07fd7":"### Activities of a Data Scientist at Work","120b1c42":"- **Local Development Environments** dominate!","1274c7f4":"### Data Roles - What kind of roles do \"Data People\" take up?\n\nThere are a great deal of terms thrown around in popular media and news articles about the kind of roles up for grabs for people who wish to work in the domain of data. Let's have a look at what domains are respondents work in.","0a4245ae":"## Data Preparation\n\nThe [2019 Kaggle ML & DS Survey data](https:\/\/www.kaggle.com\/c\/kaggle-survey-2019), like all survey datasets was messy. It's raw form would never have helped me unearth the relevant answers that I was looking for, so I decided to first preprocess the data a bit and bring it to a form I would be more happy dealing with.\n\nThe most pressing issues with the raw data according to me were\n- **The \"_OTHER_TEXT\" columns :** These were not providing any useful data points\n- **The responses to \"Select all that apply\" questions :** These responses caused a huge amount of NaN values in the dataset and accounted for almost 200+ columns\n\nI performed the tasks of \n- Removing columns with \"_OTHER_TEXT\"\n- Combining all the responses for a given question into a list data structure\n\nand managed to clean the data for my use.\n\n> **The new dataset had only 35 columns (34 questions and 1 for the \"Time to take the survey\")**\n\nThe data cleaning I performed for this task can be found in my [Kaggle DS and ML Survey 2019 - Data Cleaning](https:\/\/www.kaggle.com\/thedatabeast\/kaggle-ds-and-ml-survey-2019-data-cleaning) notebook.\n\n**NOTE : This is Private. So, make it public before posting it.****\n> The final dataset obtained after the data cleaning can be found at [Cleaned Kaggle Survey 2019](www.kaggle.com\/dataset\/5946dd675b3610e0d8a7362b7fd81f508be44f47279f61494acbf7c2af311151) dataset. Feel free to use it for your own analysis.\n","984d5951":"## The Analysis\n\nThis section includes the analysis and answers to relevant questions that ***bugged me when I started learning Data Science***.","df1e943e":"No surprises here! **Python wins hands-down** in terms of the most recommended language for aspiring data scientists by data scientists.","77aa5933":"### Most Common Visualization Tools","d482043d":"- Jupyter is the most used IDE, followed closely by RStudio","487ef7a6":"## Most Commonly Used Machine Learning Algorithms","5cc98539":"# <h1 style=\"text-align: center;\">Breaking into Data Science in 2020 as an Amateur<\/h1>\n<p style=\"text-align: center;\">Analyzing the <a src=\"https:\/\/www.kaggle.com\/c\/kaggle-survey-2019\">2019 Kaggle ML & DS Survey Data<\/a><\/p>"}}