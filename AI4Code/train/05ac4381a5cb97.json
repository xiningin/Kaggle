{"cell_type":{"ea21c9fa":"code","544d1546":"code","a83f9945":"code","2b0f264d":"code","10bcbaf0":"code","b789fbd1":"code","4288413e":"code","11ee82a0":"code","823774a7":"code","eebce016":"code","e1a8707f":"code","f52528b3":"code","2ce20aaa":"code","cd139f42":"code","9eae2690":"code","7b47ac04":"code","839f609c":"code","56d6cffc":"code","355507be":"code","c5e8d5a7":"code","3192ad3f":"markdown","9be0c0ab":"markdown","5c9b6986":"markdown","9b5b2375":"markdown","b845fbfc":"markdown","32f662cb":"markdown","5281e250":"markdown","a60d1266":"markdown","ac667d70":"markdown"},"source":{"ea21c9fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('white')\nsns.set_palette('Paired')","544d1546":"df = pd.read_csv('..\/input\/BreadBasket_DMS.csv')\ndf.head(2)","a83f9945":"df.Date = pd.to_datetime(df.Date)\ndf['Year'] = df.Date.dt.year.astype(int)\ndf['Month'] = df.Date.dt.month.astype(int)\ndf['Dow'] = df.Date.dt.dayofweek.astype(int)\ndf['Hour'] = df.Time.apply(lambda x: x.split(':')[0]).astype(int)\n","2b0f264d":"df['Morning'] = 0\ndf['Morning'].loc[df.Hour < 12] =1\ndf['Afternoon'] = 0\ndf['Afternoon'].loc[(df.Hour >= 12)&(df.Hour < 18)] =1\ndf['Evening'] = 0\ndf['Evening'].loc[df.Hour >= 18] =1\ndf.head(3)\n       ","10bcbaf0":"df.Item.value_counts()[:10]","b789fbd1":"df= df.drop(df.loc[df['Item'] =='NONE'].index)\n#df.Item.value_counts()[:10].plot(kind ='bar',figsize =(8,8),title = 'The top 10 popular goods')","4288413e":"values = df.Item.value_counts()[:10]\nlabels = df.Item.value_counts().index[:10]\nplt.figure(figsize = (8,8))\nplt.pie(values, autopct='%1.1f%%', labels = labels,\n        startangle=90)\nplt.title('Top 10 bestselling goods in Piechart')","11ee82a0":"df.Transaction.value_counts().plot(kind ='hist',figsize =(8,8),title = 'Distribution of Transaction')","823774a7":"f,axes= plt.subplots(4,2,figsize =(14,28))\nsns.countplot(df.Year,ax =axes[0][0])\nsns.barplot(df.Year,df.Transaction,ax =axes[0][1])\n\nsns.countplot(df.Month,ax =axes[1][0])\nsns.barplot(df.Month,df.Transaction,ax =axes[1][1])\n\nsns.countplot(df.Dow,ax =axes[2][0])\nsns.barplot(df.Dow,df.Transaction,ax =axes[2][1])\n\nsns.countplot(df.Hour,ax =axes[3][0])\nsns.barplot(df.Hour,df.Transaction,ax =axes[3][1])\n\n","eebce016":"cols =['Morning','Afternoon','Evening']\nfor c in cols:\n   print('Number of Transaction in',c, df[c].sum() ,'.The percentage is', df[c].sum()\/len(df))","e1a8707f":"Coffee = df[df['Item'] == 'Coffee']\nCoffee_hour = Coffee.groupby('Hour').size().reset_index(name='Counts')\n\nplt.figure(figsize=(12,8))\nax = sns.barplot(x='Hour', y = 'Counts', data = Coffee_hour)\nax.set(xlabel='hour of Day', ylabel='Coffee Sold')\nax.set_title('Distribution of Coffees Sold by Hour of Day')\n","f52528b3":"Coffee_tran =Coffee.Transaction.tolist()\ndf_subset = df[df.Transaction.isin(Coffee_tran)]\ndf_subset.head()","2ce20aaa":"Top10_in_df = df.Item.value_counts()[:10]\nTop10_in_subset = df_subset.Item.value_counts()[:10]\n\nTop10_in_df = Top10_in_df.drop(labels=['Coffee'])\nTop10_in_subset = Top10_in_subset.drop(labels=['Coffee'])\n\nlabels = Top10_in_df.index.values.tolist()\nvalues_Top10_in_df =Top10_in_df.tolist()\nvalues_Top10_in_subset = Top10_in_subset.tolist()\n\nvalues_without_coffee = [values[i]-v for i,v in enumerate(values_Top10_in_df)]\ncoffee_mate = pd.DataFrame({'Name':labels,'with_':values_Top10_in_df, 'without_':values_Top10_in_subset})\ncoffee_mate\n","cd139f42":"coffee_mate['with on without Percentage'] = coffee_mate.with_ \/ coffee_mate.without_ \nsns.mpl.rc('figure', figsize=(9,6))\nsns.barplot('Name','with on without Percentage',data = coffee_mate)\nplt.axhline(y=1, color='r', linestyle='--')\nplt.axhline(y =2,color ='r',linestyle ='--')\nplt.title('The percentage of item sales with coffee on items without coffee')","9eae2690":"Coffee_count = Coffee.groupby('Date').size().reset_index(name ='Count')\nCoffee_count.describe()","7b47ac04":"sns.mpl.rc('figure', figsize=(16,6))\nfor xc in np.arange(0, len(Coffee_count), step=7):\n    plt.axvline(x=xc, color='k', linestyle='--')\n    \nCoffee_count.Count.plot(color ='r')\nplt.xticks(np.arange(0, len(Coffee_count), step=7))\nplt.ylabel('Coffee Sale')\nplt.title('Daily Coffee sales')\n","839f609c":"ls=[]\nfor item in df['Transaction'].unique():\n    ls2=list(set(df[df['Transaction']==item]['Item']))\n    if len(ls2)>0:\n        ls.append(ls2)\nprint(ls[0:3],len(ls))\n","56d6cffc":"from mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori, association_rules\nimport networkx as nx","355507be":"te=TransactionEncoder()\nte_data=te.fit(ls).transform(ls)\ndata_x=pd.DataFrame(te_data,columns=te.columns_)\nprint(data_x.head())\n\nfrequent_items= apriori(data_x, use_colnames=True, min_support=0.02)\nprint(frequent_items.head())\n\nrules = association_rules(frequent_items, metric=\"lift\", min_threshold=1)\nrules.antecedents = rules.antecedents.apply(lambda x: next(iter(x)))\nrules.consequents = rules.consequents.apply(lambda x: next(iter(x)))\nrules","c5e8d5a7":"fig, ax=plt.subplots(figsize=(10,6))\nGA=nx.from_pandas_edgelist(rules,source='antecedents',target='consequents')\nnx.draw(GA,with_labels=True)\n","3192ad3f":"The original variable in dataset is quite few. So the first thing is to add more variables. \n\n* I split Date into Year, Month, Day of Week ,Hour of Day\n* Also, I add Morning, Afternoon and evening, the 3 new variables.\n\n## How many insights you can find depends on how many good questions you can think. \nLet's start from very simple ones:\n1. The popular goods\n2. How many transactions happens in each year\/month\/day\/hour?\n3. How many transactions happens in different daytime?(Morning\/Afternoon\/Evening)\n4. What is the best time to sell [any good], let s say 'coffee'\n5. How the goods sale related to each other?\n6. Can I predict the sales?\n7. .and so on\n\n","9be0c0ab":"### The median and mean of daily coffee sale are quite close, 33- 34 cups per day. \n### If you sell 34 cups coffee daily, that's a average result, but it you sell just a little more, let's say, 42 cups , then you can beat 75% other sales days.","5c9b6986":"### In the bakery business, generally people will buy 1-2 goods.  Some people will buy 2-4 goods\n### How could you  attract customers and sell them the best margin or the best selling goods in 1-3 choices?\n### Could we know more about their behaviors?","9b5b2375":"## Let's  find Coffee's best mate!","b845fbfc":"### The dataset is a very typical transaction bill dataset.\n### How many insights could you find from it?","32f662cb":"##  Try some prediction","5281e250":"### All of the mates are over 1 fold.\n### But the best match are Bread,Tea and Cake. Do you know how to push the cross-selling right now?","a60d1266":"### Morning and evening take each half part of sales, especailly in afternoon time.","ac667d70":"### We can see from 10-11 o'clock the coffee sale reachs peak.\n### You can check any goods' time-sales trend in this way."}}