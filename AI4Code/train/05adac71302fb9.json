{"cell_type":{"82d09a34":"code","eadafda1":"code","b0e9db07":"code","a05afe0c":"code","fa2fbf37":"code","5119bef6":"code","c310e432":"code","82ea82a4":"code","742c21c6":"code","b8269dd7":"code","70a2acdb":"markdown","9092b597":"markdown","2f0a9975":"markdown","87f99b8e":"markdown","7fb48a37":"markdown"},"source":{"82d09a34":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure, show\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eadafda1":"indianFood= pd.read_csv('\/kaggle\/input\/indian-food-101\/indian_food.csv')\nindianFood.head()","b0e9db07":"indianFood.info()","a05afe0c":"fig=px.bar(indianFood, x='region'     \n      )\n#change color of the bins\nfig.update_traces(marker_color='green',width=0.6)\nfig.update_layout(title_text='<i><b>Number of Dishes per Region<\/b><\/i>', title_x=0.5, title_font_color=\"#043927\",title_font_size=36, font_family=\"Courier New\",\n    font_color=\"#0B6623\", xaxis_title=\"Indian Region\",\n    yaxis_title=\"Number of different Dishes\", font_size=15)\n\nfig.add_annotation( # add a text callout with arrow\n    text=\"<b>New Region<br> in India? :) <\/b>\", x=\"3\", y=20, arrowhead=1, showarrow=True\n)\n","fa2fbf37":"fig2=px.bar(\n    indianFood, x='region', color= 'diet',\n       title= 'Different Diet per Region', \n       labels= {'region': 'Region', 'diet': 'Diet'},\n       color_discrete_sequence=['#3CB043','#32612D']\n      )\nfig2.update_layout(title_text='<i><b>Average Cooking Time per Dish per Region and Diet<\/b><\/i>', title_x=0.5, title_font_color=\"#03C04A\",title_font_size=24, font_family=\"Courier New\",\n    font_color=\"#0B6623\", xaxis_title=\"Indian Region\",\n    yaxis_title=\"Number of different Dishes\", font_size=15)","5119bef6":"fig3=px.pie(indianFood, names='diet', color_discrete_sequence=['#3CB043','#32612D'])\nfig3.update_traces(textfont_size=20, pull=[0.2, 0],\n                  marker=dict(line=dict(color='#000000', width=2)))\nfig3.update_layout(title_text='<i><b>Vegetarian or not Vegetarian?<\/b><\/i>', title_x=0.5, title_font_color=\"#03C04A\",title_font_size=36, font_family=\"Courier New\", font_size=15)","c310e432":"col_one_list = indianFood['ingredients'][0].split(\",\")\n\ningredientsList=[]\nfor i in range(0,255):\n    ingredientsList.append(indianFood['ingredients'][i].split(\",\"))\n    \nflat_list = []\nfor sublist in ingredientsList:\n    for item in sublist:\n        flat_list.append(item)\n        \ncountIngredients=[]\nfor i in flat_list:\n   countIngredients.append(flat_list.count(i))\n\nflat_small=map(lambda x:x.lower(), flat_list)\nIngredients_df = pd.DataFrame(list(zip(flat_small, countIngredients)), \n               columns =['Ingredient', 'Occurrence'])\nsorted=Ingredients_df.sort_values(by=['Occurrence'], ascending=False)\n\nunique_ingredients=sorted.drop_duplicates()","82ea82a4":"fig4=px.pie(indianFood, names='course',color_discrete_sequence=px.colors.sequential.Aggrnyl)\n\nfig4.update_traces(textfont_size=20, pull=[0, 0, 0, 0.2],\n                  marker=dict(line=dict(color='#000000', width=2)))\nfig4.update_layout(title_text='<i><b>Dessert, Main Course, Snack or Starter?<\/b><\/i>', title_x=0.5, title_font_color=\"#03C04A\",title_font_size=36, font_family=\"Courier New\", font_size=15)","742c21c6":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n#unique_string=(\" \").join(flat_small)\nwordcloud = WordCloud(width = 1000, height = 500).generate(\" \".join(flat_list))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()\n    ","b8269dd7":"#unique_ingredients.loc[unique_ingredients['Occurrence'] < 10, 'Ingredient'] = 'Other Ingredients'\nfig=px.bar(unique_ingredients.head(20), x='Ingredient' , y='Occurrence'  \n      )\n#change color of the bins\nfig.update_traces(marker_color='green',width=0.6)\nfig.update_layout(title_text='<i><b>Top 20 Most Common Ingredients<\/b><\/i>', title_x=0.5, title_font_color=\"#043927\",title_font_size=36, font_family=\"Courier New\",\n    font_color=\"#0B6623\", xaxis_title=\"Ingredients\",\n    yaxis_title=\"Frequency of Ingredients\", font_size=15)","70a2acdb":"# **Most Common Ingredients**","9092b597":"# Distribution of Dishes per Region","2f0a9975":"# What Kind of Dish should we prepare?","87f99b8e":"# Which Region allowes for more Vegetarian Food?","7fb48a37":"                   **Indian Cousine: General Overview in charts!**\n                                                                         \n                                                                        "}}