{"cell_type":{"b2fd0a36":"code","715a66a8":"code","ec2f4b27":"code","0d502298":"code","dddc14d4":"code","1f506f0d":"code","259be7b4":"code","e38d6e72":"code","9567172f":"code","2db2ab0c":"code","dbb552d4":"code","dc9203dc":"code","7e67f3cb":"code","49e51bc9":"code","6cb9dd6e":"code","099226d0":"code","79d97912":"code","68fde990":"code","27cc8578":"code","c66297b8":"code","2e7c5b6f":"code","30cb0df0":"code","72380e47":"code","da7b1e08":"code","83ba3a2a":"code","a1db6cd2":"code","b0328f91":"code","0eadbaa1":"code","f47538c0":"code","694d0eba":"code","2ba8bcfd":"code","47bbbdc3":"code","6ab706d7":"code","eaefdb9b":"code","33c2c360":"code","59c2ffae":"code","04ab3173":"code","c4ddd5b8":"code","5035ef71":"code","621e1f9f":"code","99441eba":"code","302fe7ed":"code","45e21594":"code","f40208bd":"code","7882ee45":"code","60b5f611":"code","d186f45e":"code","f939140e":"code","080b83ec":"code","ba7389aa":"code","d2ebdbab":"code","68d3bd0d":"code","9a161e33":"code","cb42feca":"code","d6ea04a6":"code","11a22f06":"code","57d699f4":"code","d4c2adf9":"code","b3a2f7ff":"code","3e8b6bc9":"code","e9f27c47":"code","f2a434ad":"code","15a05244":"code","ba3cf4e7":"code","a57a91e9":"code","b5b14773":"code","3cfeef82":"code","262784d9":"code","85a1e37c":"code","a2f8f83e":"code","a0465fb1":"code","84409c0e":"code","1d06d8dc":"code","3058ede4":"code","dec6520c":"code","3392e356":"code","0725df1e":"code","e97025b0":"code","a758b7b6":"code","88582c23":"code","23e7b059":"code","ebfdab27":"code","c99c71cf":"code","011cab43":"code","3dcda28b":"code","702b2b0f":"code","8cb99296":"code","38e35cfa":"code","668d325a":"code","1f93a8b7":"code","99222747":"code","a30f54a4":"code","a26dd5f5":"code","56a9e382":"code","9290af81":"code","639069ba":"code","aad01957":"code","d6d7d350":"code","9a3459dc":"code","cef75ea5":"code","51fb4095":"code","1e6d4183":"code","97ffb467":"code","4b79d6aa":"code","96cecfd3":"code","84808ebb":"code","19ccaff9":"code","e374fba3":"code","acb8317f":"code","273bf1a5":"code","17bad5b5":"markdown","3c2749e7":"markdown","f921c946":"markdown","b7ad0663":"markdown","b4e16536":"markdown","4d12aff6":"markdown","3dd82d26":"markdown","62dd96c2":"markdown","2c998b74":"markdown","9415ca26":"markdown","4713df79":"markdown","a8a7b2fc":"markdown","e87a4b7c":"markdown","dc515808":"markdown","171acc97":"markdown","2053aaff":"markdown","77e9e150":"markdown","21587bce":"markdown","c55a7dbb":"markdown"},"source":{"b2fd0a36":"# !pip install pycaret","715a66a8":"# \ub370\uc774\ud130 \ubd84\uc11d \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport numpy as np\nimport pandas as pd\n\n# \uc2dc\uac01\ud654 \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport lightgbm as lgbm\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold, StratifiedKFold, train_test_split\nfrom sklearn.metrics import precision_score, recall_score, classification_report, f1_score, confusion_matrix\n\nfrom math import sqrt\n\nimport gc\n# from pycaret.classification import *","ec2f4b27":"train = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/sample_submission.csv')","0d502298":"train.head()","dddc14d4":"print(train.shape, test.shape)","1f506f0d":"# income labeling\ntrain[\"income_label\"] = train[\"income\"].apply(lambda x: 1 if x == \">50K\" else 0)","259be7b4":"train.shape","e38d6e72":"train.info()","9567172f":"# \uc218\uce58\ud615\ntrain.describe()","2db2ab0c":"# \ubc94\uc8fc\ud615\ntrain.describe(include='O')","dbb552d4":"# \uc218\uce58\ud615 feature\nfor col in train.columns:\n    if train[col].dtype != 'object':        \n        print(f'[{col}]')\n        print()","dc9203dc":"# \ubc94\uc8fc\ud615 feature\nfor col in train.columns:\n    if train[col].dtype == 'object':\n        categories = train[col].unique()\n        print(f'[{col}] ({len(categories)})')\n        print('\\n'.join(categories))\n        print()","7e67f3cb":"display(train['education'].value_counts())\nprint('\uc704\uc544\ub798 \ubd84\ud3ec \ub3d9\uc77c\ud568. Preschool(1) ~ Doctorate(16)')\ndisplay(train['education_num'].value_counts())","49e51bc9":"# EDA \uc2dc\uc791\n# \uc804\uccb4 features \uc2dc\uac01\ud654\nfig = plt.figure(figsize=(30,60))\ncols = 3\nrows = 6\nfor i, column in enumerate(train.columns):\n    ax = fig.add_subplot(rows, cols, i + 1)\n    ax.set_title(column)\n    if train.dtypes[column] == np.object:\n        sns.countplot(column, hue='income', data=train, ax=ax, palette=\"Set3\")\n    else:\n        sns.distplot(train[column],ax=ax, kde_kws={'bw': 0.2}, color=\"green\")\nplt.subplots_adjust(hspace=0.7, wspace=0.2)","6cb9dd6e":"train['age'].describe()","099226d0":"plt.figure(figsize=(10, 8))\nplt.xticks(np.arange(0, 100, step=10))\nsns.distplot(train['age'], color=\"green\", bins=15);\n\n# 20\ub300 ~ 40\ub300 \ubd84\ud3ec\uac00 \ub9ce\uc74c.\n# age_band \uc0c8\ub85c\uc6b4 \ubc94\uc8fc\ud615 feature \ub3c4\ucd9c","79d97912":"print(train[train['income'] == '<=50K']['age'].value_counts().sort_index())\nprint()\nprint(train[train['income'] == '>50K']['age'].value_counts().sort_index())\nprint()\nprint(train.groupby(\"income\")[\"age\"].describe())\n\n# \uc218\uc785 50K \ucd08\uacfc \ud3c9\uade0\ub098\uc774\uac00 \uc880 \ub354 \ub9ce\uc74c","68fde990":"# grouping band \uc0ac\uc6a9 \uc548\ud568\n\n# train\n# train['age_band']=0\n# train.loc[train['age']<=29,'age_band']=0\n# train.loc[(train['age']>29)&(train['age']<=41),'age_band']=1\n# train.loc[(train['age']>41)&(train['age']<=53),'age_band']=2\n# train.loc[(train['age']>53)&(train['age']<=65),'age_band']=3\n# train.loc[(train['age']>65)&(train['age']<=77),'age_band']=4\n# train.loc[train['age']>77,'age_band']=5\n# display(train.head())\n\n# test\n# test['age_band']=0\n# test.loc[test['age']<=29,'age_band']=0\n# test.loc[(test['age']>29)&(test['age']<=41),'age_band']=1\n# test.loc[(test['age']>41)&(test['age']<=53),'age_band']=2\n# test.loc[(test['age']>53)&(test['age']<=65),'age_band']=3\n# test.loc[(test['age']>65)&(test['age']<=77),'age_band']=4\n# test.loc[test['age']>77,'age_band']=5\n# display(test.head())\n\n# train new\n# train['age_band_new']=0\n# train.loc[train['age']<=20,'age_band_new']=0\n# train.loc[(train['age']>20)&(train['age']<=30),'age_band_new']=1\n# train.loc[(train['age']>30)&(train['age']<=40),'age_band_new']=2\n# train.loc[(train['age']>40)&(train['age']<=52),'age_band_new']=3\n# train.loc[(train['age']>52)&(train['age']<=64),'age_band_new']=4\n# train.loc[(train['age']>64)&(train['age']<=76),'age_band_new']=5\n# train.loc[train['age']>76,'age_band_new']=6\n# display(train.head())\n\n# test new\n# test['age_band_new']=0\n# test.loc[test['age']<=20,'age_band_new']=0\n# test.loc[(test['age']>20)&(test['age']<=30),'age_band_new']=1\n# test.loc[(test['age']>30)&(test['age']<=40),'age_band_new']=2\n# test.loc[(test['age']>40)&(test['age']<=52),'age_band_new']=3\n# test.loc[(test['age']>52)&(test['age']<=64),'age_band_new']=4\n# test.loc[(test['age']>64)&(test['age']<=76),'age_band_new']=5\n# test.loc[test['age']>76,'age_band_new']=6\n# display(test.head())","27cc8578":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='income', y='age', data=train, palette=\"Set3\", linewidth=1);","c66297b8":"train['fnlwgt'].describe()","2e7c5b6f":"plt.figure(figsize=(10, 8))\nsns.distplot(train['fnlwgt'], color=\"green\", bins=15);\n\n# log \ud639\uc740 sqrt \ubcc0\ud658","30cb0df0":"# log\n# train['fnlwgt_log'] = np.log(train['fnlwgt'])\n# test['fnlwgt_log'] = np.log(test['fnlwgt'])\n\n# plt.figure(figsize=(10, 8))\n# sns.distplot(train['fnlwgt_log'], color=\"blue\", bins=15);","72380e47":"# sqrt\n# train['fnlwgt_sqrt'] = np.sqrt(train['fnlwgt'])\n# test['fnlwgt_sqrt'] = np.sqrt(test['fnlwgt'])\n\n# plt.figure(figsize=(10, 8))\n# sns.distplot(train['fnlwgt_sqrt'], color=\"red\", bins=15);","da7b1e08":"# \uadf8\ub798\ud504 3\uac1c \ud55c\ubc88\uc5d0 \ud45c\ud604\n# plt.figure(figsize=(30, 8))\n\n# plt.subplot(1, 3, 1)\n# sns.distplot(train['fnlwgt'], color=\"green\", bins=15);\n\n# plt.subplot(1, 3, 2)\n# sns.distplot(train['fnlwgt_log'], color=\"blue\", bins=15);\n\n# plt.subplot(1, 3, 3)\n# sns.distplot(train['fnlwgt_sqrt'], color=\"red\", bins=15);\n\n# plt.tight_layout()\n# plt.show()\n\n# sqrt \uadf8\ub798\ud504 \ubd84\ud3ec\uac00 \uac00\uc7a5 \uc88b\uc544\ubcf4\uc784","83ba3a2a":"print(train[train['income'] == '<=50K']['fnlwgt'].value_counts().sort_index())\nprint()\nprint(train[train['income'] == '>50K']['fnlwgt'].value_counts().sort_index())\nprint()\nprint(train.groupby(\"income\")[\"fnlwgt\"].describe())\n\n# \ud3c9\uade0, n\ubd84\uc704\uc218 \ud070 \ucc28\uc774 \uc548\ub0a8","a1db6cd2":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='income', y='fnlwgt', data=train, palette=\"Set3\", linewidth=1);","b0328f91":"train['capital_gain'].describe()","0eadbaa1":"plt.figure(figsize=(20, 8))\n\nplt.subplot(1, 2, 1)\nsns.distplot(train[\"capital_gain\"], kde_kws={'bw': 0.2}, color=\"green\");\n\n# 0\uc774 \ub108\ubb34 \ub9ce\uc544\uc11c\n\nplt.subplot(1, 2, 2)\nsns.distplot(train[train['capital_gain'] > 0][\"capital_gain\"], color=\"blue\");","f47538c0":"plt.figure(figsize=(20, 16))\n\nplt.subplot(2, 2, 1)\nsns.distplot(train[train['income'] == '<=50K']['capital_gain'], kde_kws={'bw': 0.2}, color=\"red\");\n\nplt.subplot(2, 2, 2)\nsns.distplot(train[train['income'] == '>50K']['capital_gain'], kde_kws={'bw': 0.2}, color=\"orange\");\n\n# 0 \ube44\uc911 \ub108\ubb34 \ud07c\n\nplt.subplot(2, 2, 3)\nsns.distplot(train[(train['income'] == '<=50K') & (train['capital_gain'] > 0)]['capital_gain'], kde_kws={'bw': 0.2}, color=\"red\");\n\nplt.subplot(2, 2, 4)\nsns.distplot(train[(train['income'] == '>50K') & (train['capital_gain'] > 0)]['capital_gain'], kde_kws={'bw': 0.2}, color=\"orange\");\n\n# capital_gain\uc774 5\ub9cc \ucd08\uacfc(\uc815\ud655\ud788\ub294 99999\ub9cc)\ud558\uba74 \ubaa8\ub450 \uc218\uc785 50K \ucd08\uacfc\ud568\n# but \ud53c\uccd0(capital_gain_band) \ub9cc\ub4e4\uc5b4\ub3c4 \ud6a8\uc6a9\uc5c6\uc74c \uc0ad\uc81c","694d0eba":"print(train[train['income'] == '<=50K']['capital_gain'].value_counts().sort_index())\nprint()\nprint(train[train['income'] == '>50K']['capital_gain'].value_counts().sort_index())\nprint()\nprint(train.groupby(\"income\")[\"capital_gain\"].describe())","2ba8bcfd":"print(test['capital_gain'].value_counts().sort_index())\nprint(test[\"capital_gain\"].describe())","47bbbdc3":"# \uc774\uc0c1\uce58 \uc870\uc815\ntrain['capital_gain_edit'] = train['capital_gain']\ntest['capital_gain_edit'] = test['capital_gain']\n\ntrain.loc[train['capital_gain_edit'] == 99999, 'capital_gain_edit'] = 27828\ntest.loc[test['capital_gain_edit'] == 99999, 'capital_gain_edit'] = 27828","6ab706d7":"print(train['capital_gain_edit'].value_counts().sort_index())\nprint(train[\"capital_gain_edit\"].describe())\nprint(test['capital_gain_edit'].value_counts().sort_index())\nprint(test[\"capital_gain_edit\"].describe())","eaefdb9b":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='income', y='capital_gain', data=train.loc[train['capital_gain'] > 0], palette=\"Set3\", linewidth=1);","33c2c360":"train['capital_loss'].describe()","59c2ffae":"plt.figure(figsize=(20, 8))\n\nplt.subplot(1, 2, 1)\nsns.distplot(train[\"capital_loss\"], kde_kws={'bw': 0.2}, color=\"green\");\n\n# 0\uc774 \ub108\ubb34 \ub9ce\uc74c\n\nplt.subplot(1, 2, 2)\nsns.distplot(train[train['capital_loss'] > 0][\"capital_loss\"], color=\"blue\");","04ab3173":"plt.figure(figsize=(20, 16))\n\nplt.subplot(2, 2, 1)\nsns.distplot(train[train['income'] == '<=50K']['capital_loss'], kde_kws={'bw': 0.2}, color=\"red\");\n\nplt.subplot(2, 2, 2)\nsns.distplot(train[train['income'] == '>50K']['capital_loss'], kde_kws={'bw': 0.2}, color=\"orange\");\n\nplt.subplot(2, 2, 3)\nsns.distplot(train[(train['income'] == '<=50K') & (train['capital_loss'] > 0)]['capital_loss'], kde_kws={'bw': 0.2}, color=\"red\");\n\nplt.subplot(2, 2, 4)\nsns.distplot(train[(train['income'] == '>50K') & (train['capital_loss'] > 0)]['capital_loss'], kde_kws={'bw': 0.2}, color=\"orange\");\n\n# 0 \ube44\uc911 \ub108\ubb34 \ud07c\n# capital_loss\ub294 capital_gain\uacfc \ub2e4\ub974\uac8c \uc218\uc785\uae30\uc900 \ud070 \ucc28\uc774 \uc548\ubcf4\uc784","c4ddd5b8":"print(train[train['income'] == '<=50K']['capital_loss'].value_counts().sort_index())\nprint()\nprint(train[train['income'] == '>50K']['capital_loss'].value_counts().sort_index())\nprint()\nprint(train.groupby(\"income\")[\"capital_loss\"].describe())\n\n# \ud3c9\uade0\ubcf4\uba74 \uc218\uc785 50K \ucd08\uacfc\uac00 \uadf8\ub098\ub9c8 \ub192\uc9c0\ub9cc \ubd84\ud3ec\ub294 \ud070 \ucc28\uc774 \uc548\ubcf4\uc784","5035ef71":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='income', y='capital_loss', data=train.loc[train['capital_loss'] > 0], palette=\"Set3\", linewidth=1);","621e1f9f":"# train['capital_net'] = train['capital_gain'] - train['capital_loss']\n# display(train['capital_net'].describe())\n\n# test['capital_net'] = test['capital_gain'] - test['capital_loss']\n# display(test['capital_net'].describe())","99441eba":"# plt.figure(figsize=(20, 8))\n\n# sns.distplot(train[\"capital_net\"], kde_kws={'bw': 0.2}, color=\"green\");","302fe7ed":"# print(train[train['income'] == '<=50K']['capital_net'].value_counts().sort_index())\n# print()\n# print(train[train['income'] == '>50K']['capital_net'].value_counts().sort_index())\n# print()\n# print(train.groupby(\"income\")[\"capital_net\"].describe())","45e21594":"# log1p capital_net\n\n# train['capital_net_log'] = np.log1p(train['capital_net'])\n# test['capital_net_log'] = np.log1p(test['capital_net'])\n\n# plt.figure(figsize=(10, 8))\n# sns.distplot(train['capital_net_log'], kde_kws={'bw': 0.2}, color=\"green\", bins=15);\n# sns.distplot(test['capital_net_log'], kde_kws={'bw': 0.2}, color=\"blue\", bins=15);","f40208bd":"# print(train[train['income'] == '<=50K']['capital_net_log'].value_counts().sort_index())\n# print()\n# print(train[train['income'] == '>50K']['capital_net_log'].value_counts().sort_index())\n# print()\n# print(train.groupby(\"income\")[\"capital_net_log\"].describe())","7882ee45":"# NaN \ucc98\ub9ac\n# train.loc[(train['capital_net_log'].isnull()) & (train['income_label'] == 0), 'capital_net_log'] = 0.341332\n# train.loc[(train['capital_net_log'].isnull()) & (train['income_label'] == 1), 'capital_net_log'] = 2.259526\n\n# test.loc[(test['capital_net_log'].isnull()) & (test['capital_net']>=-1900), 'capital_net_log'] = 0.310495\n# test.loc[(test['capital_net_log'].isnull()) & (test['capital_net']<-1900), 'capital_net_log'] = 2.055393","60b5f611":"# capital_net_log shape \ud655\uc778\n# print(train['capital_net_log'].shape, test['capital_net_log'].shape)","d186f45e":"train['hours_per_week'].describe()","f939140e":"plt.figure(figsize=(20, 8))\nsns.distplot(train[\"hours_per_week\"], color=\"green\");","080b83ec":"print(train[train['income'] == '<=50K']['hours_per_week'].value_counts().sort_index())\nprint()\nprint(train[train['income'] == '>50K']['hours_per_week'].value_counts().sort_index())\nprint()\nprint(train.groupby(\"income\")[\"hours_per_week\"].describe())","ba7389aa":"print(test['hours_per_week'].value_counts().sort_index())\nprint(test[\"hours_per_week\"].describe())","d2ebdbab":"# \uc774\uc0c1\uce58 \uc870\uc815\ntrain['hours_per_week_edit'] = train['hours_per_week']\ntest['hours_per_week_edit'] = test['hours_per_week']\n\ntrain.loc[train['hours_per_week_edit'] > 90, 'hours_per_week_edit'] = 90\ntrain.loc[train['hours_per_week_edit'] < 10, 'hours_per_week_edit'] = 10\ntest.loc[test['hours_per_week_edit'] > 90, 'hours_per_week_edit'] = 90\ntest.loc[test['hours_per_week_edit'] < 10, 'hours_per_week_edit'] = 10","68d3bd0d":"print(train['hours_per_week_edit'].value_counts().sort_index())\nprint(train[\"hours_per_week_edit\"].describe())\nprint(test['hours_per_week_edit'].value_counts().sort_index())\nprint(test[\"hours_per_week_edit\"].describe())","9a161e33":"plt.figure(figsize=(20, 16))\n\nplt.subplot(2, 2, 1)\nsns.distplot(train[train['income'] == '<=50K']['hours_per_week'], color=\"red\");\n\nplt.subplot(2, 2, 2)\nsns.distplot(train[train['income'] == '>50K']['hours_per_week'], color=\"orange\");\n\n# 30\uc2dc\uac04 \ucd08\uacfc\uc77c \ub54c \ube44\uad50\n\nplt.subplot(2, 2, 3)\nsns.distplot(train[(train['income'] == '<=50K') & (train['hours_per_week'] > 30)]['hours_per_week'], color=\"red\");\n\nplt.subplot(2, 2, 4)\nsns.distplot(train[(train['income'] == '>50K') & (train['hours_per_week'] > 30)]['hours_per_week'], color=\"orange\");\n\n# 40\uc2dc\uac04 \uc774\uc0c1\uc758 \uacbd\uc6b0 \uc218\uc785 50K \ucd08\uacfc\uc758 \ube44\uc911\uc774 \ub192\uc74c(\ud3c9\uade0, n\ubd84\uc704\uc218 \uacb0\uacfc)","cb42feca":"plt.figure(figsize=(10, 8))\nsns.boxplot(x='income', y='hours_per_week', data=train, palette=\"Set3\", linewidth=1);","d6ea04a6":"train['workclass'].value_counts()","11a22f06":"train.groupby(\"workclass\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","57d699f4":"# train\n# train['workclass_label'] = train['workclass']\n\n# train.loc[train['workclass'] == '?','workclass_label'] = 1\n# train.loc[train['workclass'] != '?','workclass_label'] = 0\n\ntrain['workclass_?'] = train['workclass']\n\ntrain.loc[train['workclass_?'] == '?','workclass_?'] = 'Private'\n# train.loc[train['workclass_?'] == 'Local-gov','workclass_?'] = 'State-gov'\n# train.loc[train['workclass_?'] == 'Federal-gov','workclass_?'] = 'State-gov'\n\n# display(train['workclass_label'].value_counts())\ndisplay(train['workclass_?'].value_counts())\ndisplay(train.head())\n\n\n# test\n# test['workclass_label'] = test['workclass']\n\n# test.loc[test['workclass'] == '?','workclass_label'] = 1\n# test.loc[test['workclass'] != '?','workclass_label'] = 0\n\ntest['workclass_?'] = test['workclass']\n\ntest.loc[test['workclass_?'] == '?','workclass_?'] = 'Private'\n# test.loc[test['workclass_?'] == 'Local-gov','workclass_?'] = 'State-gov'\n# test.loc[test['workclass_?'] == 'Federal-gov','workclass_?'] = 'State-gov'\n\n# display(test['workclass_label'].value_counts())\ndisplay(test['workclass_?'].value_counts())\ndisplay(test.head())","d4c2adf9":"# train.groupby(\"workclass\")[\"education_num\", \"income_label\"].agg([\"count\", \"mean\", \"std\"])","b3a2f7ff":"pd.crosstab(train['workclass'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","3e8b6bc9":"plt.figure(figsize=(20, 16))\nvalue_counts = train['workclass'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='workclass', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='workclass', hue='income', data=train, palette=\"Set3\", order = value_counts.index);\n\n# Self-emp-inc\ub9cc \uc218\uc785 50K \ucd08\uacfc\uac00 \ub354 \ub9ce\uc74c","e9f27c47":"train['education'].value_counts()","f2a434ad":"train.groupby(\"education_num\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))","15a05244":"# education_num_band \uc0ac\uc6a9 \uc548\ud568\n\n# def education_num_to_category(x):\n#     a = 0\n#     if x == 1:\n#         a = 0\n#     elif x == 2:\n#         a = 1\n#     elif x <= 4:\n#         a = 2\n#     elif x == 5:\n#         a = 3\n#     elif x == 6:\n#         a = 4\n#     elif x == 7:\n#         a = 5\n#     elif x == 8:\n#         a = 6\n#     elif x == 9:\n#         a = 7\n#     elif x == 10:\n#         a = 8\n#     elif x <= 12:\n#         a = 9\n#     elif x == 13:\n#         a = 10\n#     elif x == 14:\n#         a = 11\n#     elif x == 15:\n#         a = 12\n#     elif x == 16:\n#         a = 13\n#     return a\n\n# # \ud568\uc218 \uc801\uc6a9\n# train[\"education_num_band_new\"] = train[\"education_num\"].apply(lambda x : education_num_to_category(x))\n# display(train[\"education_num_band_new\"].value_counts().sort_values(ascending = False))\n\n# test[\"education_num_band_new\"] = test[\"education_num\"].apply(lambda x : education_num_to_category(x))\n# display(test[\"education_num_band_new\"].value_counts().sort_values(ascending = False))","ba3cf4e7":"pd.crosstab(train['education'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","a57a91e9":"plt.figure(figsize=(20, 16))\nvalue_counts = train['education'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='education', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='education', hue='income', data=train, palette=\"Set3\", order = value_counts.index);","b5b14773":"train['marital_status'].value_counts()","3cfeef82":"train.groupby(\"marital_status\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))","262784d9":"# train \uc0ac\uc6a9 \uc548\ud568\n# train['marital_status_new'] = train['marital_status']\n\n# train.loc[train['marital_status_new'] == 'Married-spouse-absent','marital_status_new'] = 'Separated'\n# display(train['marital_status_new'].value_counts())\n# display(train.head())\n\n\n# test\n# test['marital_status_new'] = test['marital_status']\n\n# test.loc[test['marital_status_new'] == 'Married-spouse-absent','marital_status_new'] = 'Separated'\n# display(test['marital_status_new'].value_counts())\n# display(test.head())","85a1e37c":"pd.crosstab(train['marital_status'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","a2f8f83e":"plt.figure(figsize=(20, 16))\nvalue_counts = train['marital_status'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='marital_status', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='marital_status', hue='income', data=train, palette=\"Set3\", order = value_counts.index);","a0465fb1":"train['occupation'].value_counts()","84409c0e":"train.groupby(\"occupation\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","1d06d8dc":"# train\n# train['occupation_label'] = train['occupation']\n\n# train.loc[train['occupation'] == '?','occupation_label'] = 1\n# train.loc[train['occupation'] != '?','occupation_label'] = 0\n\ntrain['occupation_?'] = train['occupation']\n\ntrain.loc[train['occupation_?'] == '?','occupation_?'] = 'Prof-specialty'\n\n# display(train['occupation_label'].value_counts())\ndisplay(train['occupation_?'].value_counts())\ndisplay(train.head())\n\n\n# test\n# test['occupation_label'] = test['occupation']\n\n# test.loc[test['occupation'] == '?','occupation_label'] = 1\n# test.loc[test['occupation'] != '?','occupation_label'] = 0\n\ntest['occupation_?'] = test['occupation']\n\ntest.loc[test['occupation_?'] == '?','occupation_?'] = 'Prof-specialty'\n\n# display(test['occupation_label'].value_counts())\ndisplay(test['occupation_?'].value_counts())\ndisplay(test.head())","3058ede4":"train.groupby(\"occupation\")[\"education_num\", \"income_label\"].agg([\"count\", \"mean\", \"std\"])","dec6520c":"pd.crosstab(train['occupation'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","3392e356":"plt.figure(figsize=(20, 16))\nvalue_counts = train['occupation'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='occupation', data=train, palette=\"Set3\", order = value_counts.index)\nplt.xticks(rotation=45);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='occupation', hue='income', data=train, palette=\"Set3\", order = value_counts.index)\nplt.xticks(rotation=45);","0725df1e":"train['relationship'].value_counts()","e97025b0":"train.groupby(\"relationship\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","a758b7b6":"pd.crosstab(train['relationship'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","88582c23":"plt.figure(figsize=(20, 16))\nvalue_counts = train['relationship'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='relationship', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='relationship', hue='income', data=train, palette=\"Set3\", order = value_counts.index);\n\n# \ub531\ud788 \ub178\ud130\uce58 \uc774\uc988 \uad7f\n# \uc11c\ub85c \ubd80\ubd80 \uad00\uacc4\uc77c \ub54c \uc218\uc785 50K \ucd08\uacfc\uac00 \ub9ce\uc74c","23e7b059":"train['race'].value_counts()","ebfdab27":"train.groupby(\"race\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","c99c71cf":"pd.crosstab(train['race'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","011cab43":"plt.figure(figsize=(20, 16))\nvalue_counts = train['race'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='race', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='race', hue='income', data=train, palette=\"Set3\", order = value_counts.index);","3dcda28b":"train['sex'].value_counts()","702b2b0f":"train.groupby(\"sex\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","8cb99296":"pd.crosstab(train['sex'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","38e35cfa":"plt.figure(figsize=(10, 16))\nvalue_counts = train['sex'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='sex', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='sex', hue='income', data=train, palette=\"Set3\", order = value_counts.index);\n\n# \ub0a8\uc790\uac00 \uc218\uc785 50K \ucd08\uacfc \ub9ce\uc74c","668d325a":"train['native_country'].value_counts()","1f93a8b7":"train.groupby(\"native_country\")[[\"income_label\", \"hours_per_week\", \"capital_gain\", \"capital_loss\"]].agg([\"count\", \"mean\", \"std\"]).sort_values(by=('income_label','mean'))\n# grouping \ud328\uc2a4","99222747":"# group_1 = ['Outlying-US(Guam-USVI-etc)', 'Honduras']\n# group_2 = ['Dominican-Republic']\n# group_3 = ['Columbia', 'Mexico', 'Guatemala', 'Portugal']\n# group_4 = ['Trinadad&Tobago', 'Nicaragua', 'Peru']\n# group_5 = ['El-Salvador', 'Vietnam', 'Jamaica']\n# group_6 = ['Haiti', 'Puerto-Rico']\n# group_7 = ['Laos', 'Thailand']\n# group_8 = ['Poland', 'Ecuador']\n# group_9 = ['South']\n# group_10 = ['Ireland', 'China']\n# group_11 = ['?']\n# group_12 = ['United-States']\n# group_13 = ['Scotland', 'Greece', 'Cuba']\n# group_14 = ['Hungary']\n# group_15 = ['Hong']\n# group_16 = ['Philippines', 'Canada']\n# group_17 = ['England', 'Germany', 'Italy']\n# group_18 = ['India', 'Japan']\n# group_19 = ['France']\n# group_20 = ['Yugoslavia']\n# group_21 = ['Cambodia']\n# group_22 = ['Taiwan', 'Iran']","a30f54a4":"# native_country_band \uc0ac\uc6a9 \uc548\ud568\n\n# def native_country_to_category(x):\n#     a = 0\n#     if x in group_1:\n#         a = 0\n#     elif x in group_2:\n#         a = 1\n#     elif x in group_3:\n#         a = 2\n#     elif x in group_4:\n#         a = 3\n#     elif x in group_5:\n#         a = 4\n#     elif x in group_6:\n#         a = 5\n#     elif x in group_7:\n#         a = 6\n#     elif x in group_8:\n#         a = 7\n#     elif x in group_9:\n#         a = 8\n#     elif x in group_10:\n#         a = 9\n#     elif x in group_11:\n#         a = 10\n#     elif x in group_12:\n#         a = 11\n#     elif x in group_13:\n#         a = 12\n#     elif x in group_14:\n#         a = 13\n#     elif x in group_15:\n#         a = 14\n#     elif x in group_16:\n#         a = 15\n#     elif x in group_17:\n#         a = 16\n#     elif x in group_18:\n#         a = 17\n#     elif x in group_19:\n#         a = 18\n#     elif x in group_20:\n#         a = 19\n#     elif x in group_21:\n#         a = 20\n#     elif x in group_22:\n#         a = 21\n#     return a\n\n# # \ud568\uc218 \uc801\uc6a9\n# train[\"native_country_band_new\"] = train[\"native_country\"].apply(lambda x : native_country_to_category(x))\n# display(train[\"native_country_band_new\"].value_counts().sort_values(ascending = False))\n\n# test[\"native_country_band_new\"] = test[\"native_country\"].apply(lambda x : native_country_to_category(x))\n# display(test[\"native_country_band_new\"].value_counts().sort_values(ascending = False))","a26dd5f5":"# ? \ucc98\ub9ac\n\n# train\n# train['native_country_label'] = train['native_country']\n\n# train.loc[train['native_country'] == '?','native_country_label'] = 1\n# train.loc[train['native_country'] != '?','native_country_label'] = 0\n\ntrain['native_country_?'] = train['native_country']\n\ntrain.loc[train['native_country_?'] == '?','native_country_?'] = 'United-States'\n\n# display(train['native_country_label'].value_counts())\ndisplay(train['native_country_?'].value_counts())\ndisplay(train.head())\n\n# test\n# test['native_country_label'] = test['native_country']\n\n# test.loc[test['native_country'] == '?','native_country_label'] = 1\n# test.loc[test['native_country'] != '?','native_country_label'] = 0\n\ntest['native_country_?'] = test['native_country']\n\ntest.loc[test['native_country_?'] == '?','native_country_?'] = 'United-States'\n\n# display(test['native_country_label'].value_counts())\ndisplay(test['native_country_?'].value_counts())\ndisplay(test.head())","56a9e382":"train.groupby(\"native_country\")[\"education_num\", \"income_label\"].agg([\"count\", \"mean\", \"std\"])","9290af81":"pd.crosstab(train['native_country'], train['income'], margins=True).style.background_gradient(cmap='RdYlGn_r')","639069ba":"plt.figure(figsize=(20, 16))\nvalue_counts = train['native_country'].value_counts();\n\nplt.subplot(2, 1, 1)\nsns.countplot(x='native_country', data=train, palette=\"Set3\", order = value_counts.index);\n\nplt.subplot(2, 1, 2)\nsns.countplot(x='native_country', hue='income', data=train, palette=\"Set3\", order = value_counts.index);","aad01957":"# \ud53c\uccd0 \ud655\uc778 \ub05d\ntrain.shape, test.shape","d6d7d350":"# \ud604\uc7ac \ud53c\uccd0 \uc0c1\uad00\uacc4\uc218\nplt.figure(figsize=(12, 12))\nsns.heatmap(train.corr(), annot=True);","9a3459dc":"# df_train, df_test\ub294 \ubaa8\ub378\ub9c1\uc5d0 \uc801\uc6a9\ud558\ub294 \uac1d\uccb4\ndf_train = train.copy()\ndf_train.drop('income_label', axis=1, inplace=True)\ndf_test = test.copy()\ndisplay(df_train.head())\ndisplay(df_train.shape, df_test.shape)","cef75ea5":"# target \ubd84\ub9ac\n\ndf_train['income'] = df_train['income'].apply(lambda x: 0 if x == '<=50K' else 1)\ny_train = df_train['income']\ndf_train = df_train.drop('income', axis=1)","51fb4095":"# \ud53c\uccd0 \uc218\uc815\uc2dc dtype \ud655\uc778\ndisplay(df_train.dtypes)\ndisplay(df_test.dtypes)","1e6d4183":"# LABEL ENCODING\nfor col in df_train.columns:\n    if df_train[col].dtype.name == 'object' or df_test[col].dtype.name == 'object':\n        le = LabelEncoder()\n        le.fit(list(df_train[col].values) + list(df_test[col].values))\n        df_train[col] = le.transform(list(df_train[col].values))\n        df_test[col]  = le.transform(list(df_test[col].values))","97ffb467":"df_train.columns","4b79d6aa":"# \ubcc0\uc218 \uc120\ud0dd\nX_train = df_train.drop(['id', 'fnlwgt', 'education', \n                        'capital_gain_edit', 'hours_per_week_edit',\n                        'workclass', 'occupation', 'native_country'], axis=1)\nX_test  = df_test.drop(['id', 'fnlwgt', 'education', \n                        'capital_gain_edit', 'hours_per_week_edit',\n                        'workclass', 'occupation', 'native_country'], axis=1)\nprint(\"X_train:\", X_train.shape)\nprint(\"y_train:\", y_train.shape)\nprint(\"X_test:\",  X_test.shape)\ndisplay(X_train.columns)\n\n","96cecfd3":"def lgb_f1_score(y_hat, data):\n    y_true = data.get_label()\n    y_hat  = np.round(y_hat)\n    \n    return 'f1', f1_score(y_true, y_hat, average='weighted'), True","84808ebb":"# \uc2dc\ub4dc\ubc14\uafd4\nSEED = 2021\nNUM_BOOST_ROUND = 100000\n\n\n# \ucee4\ud53c\uc88c\nlgbm_params = {\n          'objective': 'binary',\n          'max_depth': -1,\n          'n_jobs': -1,\n          'learning_rate': 0.01,\n          'num_leaves': 2**6,\n          'min_data_in_leaf': 30,\n          'boosting_type': 'gbdt',\n          'subsample_freq': 1,\n          'subsample': 0.7,\n          'n_estimators': 10000,\n          'verbose': -1,\n          'random_state': SEED,\n          }\n\n# \ud14c\ub514\uc88c\n# lgbm_params = {\n#     'objective': 'binary',\n#     'max_depth': -1,\n#     'boosting_type':'gbdt',\n#     'colsample_bytree':1.0,\n#     'importance_type':'split',\n#     'learning_rate':0.01,\n#     'min_child_samples':20,\n#     'min_child_weight':0.001,\n#     'min_split_gain':0,\n#     'n_estimators':10000,\n#     'num_leaves':40,\n#     'random_state':SEED,\n#     'early_stopping_rounds': 200,\n#     'reg_alpha':0.6,\n#     'reg_lambda':0.5,\n#     'subsample':0.7,\n#     'subsample_for_bin':200000,\n#     'subsample_freq':1, \n#     'n_jobs':-1, \n# }","19ccaff9":"%%time\nNFOLDS = 5\nfolds = KFold(n_splits=NFOLDS)\n\ncolumns = X_train.columns\nsplits = folds.split(X_train, y_train)\ny_preds = np.zeros(X_test.shape[0])\ny_oof = np.zeros(X_train.shape[0])\nscore = 0\n\nfeature_importances = pd.DataFrame()\nfeature_importances['feature'] = columns\n\nfor fold_n, (trn_idx, val_idx) in enumerate(splits):\n    X_trn, X_val = X_train[columns].iloc[trn_idx], X_train[columns].iloc[val_idx]\n    y_trn, y_val = y_train.iloc[trn_idx], y_train.iloc[val_idx]\n    \n    dtrain = lgbm.Dataset(X_trn, label=y_trn)\n    dvalid = lgbm.Dataset(X_val, label=y_val)\n    \n    clf = lgbm.train(\n        lgbm_params,\n        dtrain,\n        NUM_BOOST_ROUND,\n        valid_sets = [dtrain, dvalid],\n        verbose_eval = 200,\n        early_stopping_rounds = 100,\n        feval = lgb_f1_score\n    )\n    \n    feature_importances[f'fold_{fold_n+1}'] = clf.feature_importance()\n    \n    y_pred_val = clf.predict(X_val) \n    y_pred_val = [int(v >= 0.5) for v in y_pred_val]\n    \n    y_oof[val_idx] = y_pred_val\n    print(f\"Fold {fold_n + 1} | F1 Score: {f1_score(y_val, y_pred_val, average='weighted')}\")\n    \n    score += f1_score(y_val, y_pred_val, average='weighted') \/ NFOLDS\n    y_preds += clf.predict(X_test) \/ NFOLDS\n    \n    del X_trn, X_val, y_trn, y_val\n    gc.collect()\n    \nprint(f\"\\nMean F1 score = {score}\")\nprint(f\"OOF F1 score = {f1_score(y_train, y_oof, average='weighted')}\")","e374fba3":"feature_importances['average'] = feature_importances[[f'fold_{fold_n+1}' for fold_n in range(folds.n_splits)]].mean(axis=1)\n# feature_importances.to_csv('feature_importances.csv')\n\nplt.figure(figsize=(16, 16))\nsns.barplot(data=feature_importances.sort_values(by='average', ascending=False), x='average', y='feature');\nplt.title(f'Feature Importances over {folds.n_splits} folds average')","acb8317f":"y_preds = np.where(y_preds >= 0.5, 1, 0)\nsample_submission['prediction'] = y_preds\n\nsample_submission.head(10)","273bf1a5":"sample_submission.to_csv('submission_1.csv', index=False)","17bad5b5":"## race","3c2749e7":"## capital_loss","f921c946":"## capital_gain","b7ad0663":"## \ub354 \ud574\ubcfc\uac83\n- \uc218\uce58\ud615\ud53c\uccd0 \uc774\uc0c1\uce58\ucc98\ub9ac?\n- \ubc94\uc8fc\ud615\ud53c\uccd0 values \uc218\uce58\ud615 \uace0\ub824\ud574\uc11c \uc218\uc815\n- \uc2dc\uac01\ud654 fnlwgt\uac19\uc740\uac70 \ud655\uc778\ud574\uc11c \uc81c\uac70 \uace0\ub824\n- T\uc544\uce74\ub370\ubbf8 \ud53c\uccd0 \uc911\uc694\ub3c4 rfe\n- T\uc544\uce74\ub370\ubbf8 baseline model \uc5ec\ub7ec\uac1c\n- T\uc544\uce74\ub370\ubbf8 \uac00\uc911\uce58 \uc559\uc0c1\ube14","b4e16536":"## hours_per_week","4d12aff6":"## Modeling","3dd82d26":"## fnlwgt\n* \uc0ac\ub78c \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58 (final weight\uc758 \uc57d\uc790)\n\n - \ud574\ub2f9 \ub300\uc0c1\uc774 \uc804\uccb4\ub97c \uc5bc\ub9c8\ub098 \ub300\ud45c\ud558\uace0 \uc788\ub294\uc9c0\uc5d0 \ub300\ud55c \uac00\uc911\uce58\ub97c \ub098\ud0c0\ub0b4\ub294 \uac83\n - \ub9cc\uc57d\uc5d0 \uc544\uc774\uac00 1\uba85\uc774\uace0 \ud559\uc0ac\ub97c \uc878\uc5c5\ud55c \uc0ac\ub78c\uc774 \ub9ce\uc73c\uba74 final weight\uac00 \ub192\uc544\uc9c0\uace0\n - \uc544\uc774\uac00 5\uba85\uc5d0 \uc774\ud63c\uc744 \ud55c \ub300\ud45c\uc131\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc740 final weight\uac00 \ub0ae\uc544\uc9d0","62dd96c2":"## sex","2c998b74":"## native_country","9415ca26":"## relationship","4713df79":"\ub370\uc774\ud130\uc758 \uac01 feature\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. (data description\uc5d0\uc11c \uc81c\uacf5)\n\n- age : \ub098\uc774\n- workclass : \uace0\uc6a9 \ud615\ud0dc\n- fnlwgt : \uc0ac\ub78c \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58 (final weight\uc758 \uc57d\uc790)\n- education : \uad50\uc721 \uc218\uc900\n- education_num : \uad50\uc721 \uc218\uc900 \uc218\uce58\n- marital_status: \uacb0\ud63c \uc0c1\ud0dc\n- occupation : \uc5c5\uc885\n- relationship : \uac00\uc871 \uad00\uacc4\n- race : \uc778\uc885\n- sex : \uc131\ubcc4\n- capital_gain : \uc591\ub3c4 \uc18c\ub4dd\n- capital_loss : \uc591\ub3c4 \uc190\uc2e4\n- hours_per_week : \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n- native_country : \uad6d\uc801\n- income : \uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12)","a8a7b2fc":"### \ubc94\uc8fc\ud615\n## workclass","e87a4b7c":"## Submission","dc515808":"### \ud604\uc7ac \uc11c\ube0c\ubbf8\uc158 \ucd5c\uace0\n- ?\ucc98\ub9ac(column_name_?) + \uae30\ubcf8\ud53c\uccd0 + .drop(['id','education','fnlwgt'] \uceec\ub7fc12\n- Mean F1 score = 0.8673843587054867\n- OOF F1 score = 0.8673935531409734","171acc97":"## occupation","2053aaff":"## education\n## education \ub300\uc2e0 education_num \uc0ac\uc6a9(\ub77c\ubca8\ub9c1 \ub418\uc5b4\uc788\uc74c)","77e9e150":"## marital_status","21587bce":"### \uc218\uce58\ud615\n## age","c55a7dbb":"## capital_net \uc0dd\uc131\n### capital_gain - capital_net \uc0ac\uc6a9 \uc548\ud568"}}