{"cell_type":{"01a435d3":"code","6fd08472":"code","e253da96":"code","346fcf9a":"code","472be815":"code","3b25f7a8":"code","503a44c7":"code","b9ea81bb":"code","2c20bd58":"code","8acccea1":"code","82cfd775":"code","3cc907ed":"code","a2414b57":"code","a2905e2d":"markdown","d1d0fe68":"markdown","ffd974db":"markdown"},"source":{"01a435d3":"!pip install lightautoml","6fd08472":"# Data handling\nimport pandas as pd \nimport numpy as np\n\n# AutoML\nfrom lightautoml.automl.base import AutoML\nfrom lightautoml.ml_algo.boost_lgbm import BoostLGBM\nfrom lightautoml.ml_algo.tuning.optuna import OptunaTuner\nfrom lightautoml.pipelines.features.lgb_pipeline import LGBSimpleFeatures\nfrom lightautoml.pipelines.ml.base import MLPipeline\nfrom lightautoml.pipelines.selection.importance_based import ImportanceCutoffSelector, ModelBasedImportanceEstimator\nfrom lightautoml.reader.base import PandasToPandasReader\nfrom lightautoml.tasks import Task","e253da96":"# Import training data\ndf_train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf_train.head()","346fcf9a":"# Create task, reader and roles \ntask = Task(\"reg\", loss=\"rmsle\", metric=\"rmsle\")\nreader = PandasToPandasReader(task, cv=5, random_state=0)\nroles = {\n    \"target\":\"SalePrice\", \n    \"drop\":\"Id\"\n}","472be815":"# Create default LightGBM model \nmodel_0 = BoostLGBM(default_params = {\"learning_rate\": 0.05, \"num_leaves\": 150, \"seed\": 45, \"num_threads\": 4})\npipe_0 = LGBSimpleFeatures()\nmbie = ModelBasedImportanceEstimator()\nselector = ImportanceCutoffSelector(pipe_0, model_0, mbie, cutoff=0)","3b25f7a8":"# Create first level of ML Pipeline for AutoML\npipe = LGBSimpleFeatures()\nparams_tuner1 = OptunaTuner(n_trials=50, timeout=30)\nmodel_1 = BoostLGBM(default_params = {\"learning_rate\":0.05, \"num_leaves\":150, \"seed\":1, \"num_threads\":4})\nmodel_2 = BoostLGBM(default_params = {\"learning_rate\":0.025, \"num_leaves\":50, \"seed\":1, \"num_threads\":4})\n\n# run pipeline \npipeline_level1 = MLPipeline([\n    (model_1, params_tuner1), \n    model_2\n], pre_selection=selector, features_pipeline=pipe, post_selection=None)","503a44c7":"# Create second level of ML Pipeline for AutoML\npipe_1 = LGBSimpleFeatures()\nmodel = BoostLGBM(default_params = {\"learning_rate\":0.05, \"num_leaves\":50, \"seed\":1, \"num_threads\":4}, \n                 freeze_defaults=True)\npipeline_level2 = MLPipeline([model], pre_selection=None, features_pipeline=pipe_1, post_selection=None)","b9ea81bb":"autoML = AutoML(reader, [[pipeline_level1], [pipeline_level2]], skip_conn=False)","2c20bd58":"oof_pred = autoML.fit_predict(df_train, roles=roles)","8acccea1":"# Import test data\ntest_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest_df.head()","82cfd775":"# Predictions\ntest_predictions = autoML.predict(test_df)","3cc907ed":"# Export results \noutput = pd.DataFrame({\"Id\":test_df[\"Id\"], \n                      \"SalePrice\":test_predictions.data[:,0]})\noutput","a2414b57":"output.to_csv(\"submission.csv\", index=False)","a2905e2d":"# Packages","d1d0fe68":"# Submission","ffd974db":"# Model Development"}}