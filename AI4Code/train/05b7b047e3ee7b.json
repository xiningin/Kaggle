{"cell_type":{"83e6c969":"code","cd846d5f":"code","e7dfaf45":"code","ab1663ee":"code","4a01eb65":"code","6d767a3e":"code","9e3d1127":"code","50074beb":"code","2f2d5bab":"code","43023546":"code","8d7e16db":"code","a1e9a956":"code","2eab9f29":"code","25610d64":"code","c457193e":"code","5095a181":"code","8727c54e":"code","a1f0b5ed":"code","06742580":"code","ba3a3163":"code","b7775876":"code","44214c0b":"code","77943e80":"code","ce325daf":"code","55d86f1f":"markdown","b3ce9e31":"markdown","86c5d6fa":"markdown","901266d5":"markdown","914dab96":"markdown","1b392310":"markdown","25729336":"markdown","9fb4e18d":"markdown","07c34668":"markdown","b481940d":"markdown","b391ecc5":"markdown","6d396842":"markdown","7163b105":"markdown","41457265":"markdown"},"source":{"83e6c969":"import numpy as np\nimport pandas as pd\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nmpl.style.use('seaborn')\n%matplotlib inline","cd846d5f":"mpl.rcParams['figure.figsize'] = 12, 6\nmpl.rcParams['axes.titlesize'] = 20\nmpl.rcParams['axes.labelsize'] = 16\nmpl.rcParams['xtick.labelsize'] = 16\nmpl.rcParams['ytick.labelsize'] = 16\nmpl.rcParams['legend.fontsize'] = 12","e7dfaf45":"from kaggle.competitions import twosigmanews\n# You can only call make_env() once, so don't lose it!\nenv = twosigmanews.make_env()","ab1663ee":"(market_train_df, news_train_df) = env.get_training_data()","4a01eb65":"market_train_df.head(3)","6d767a3e":"market_train_df.shape","9e3d1127":"market_train_df.columns","50074beb":"print(\"The market data cover stock stats from: {} to {}.\"\n      .format(market_train_df.time.min(),market_train_df.time.max()))","2f2d5bab":"market_train_df = market_train_df.sort_values('time')\nmarket_train_df['date'] = market_train_df['time'].dt.date","43023546":"# inspired by https:\/\/www.kaggle.com\/dmdm02\/complete-eda-voting-lightgbm\nfor i in [0.05,0.25, 0.5, 0.75,0.95]:\n    close_df = market_train_df.groupby('date')['close'].quantile(i).reset_index()\n    plt.plot(close_df['date'], close_df['close'], label='%.2f quantile' %i)\nplt.legend(loc='best')\nplt.xlabel('Time')\nplt.ylabel('Closing Price')\nplt.title('Market closing price by quantile')","8d7e16db":"assets_by_day = market_train_df.groupby(market_train_df['date'])['assetCode'].nunique()\n\nplt.fill_between(assets_by_day.index,0,assets_by_day.values)\n#plt.plt(assets_by_day)\n\nplt.xlabel('Time')\nplt.ylabel('# of assets')\nplt.title('Number of assets by trading day')\n","a1e9a956":"volume_by_day = market_train_df.groupby(market_train_df['date'])['volume'].sum()\n\nplt.plot(volume_by_day) #or barchart (x=volume_by_day.index, y=volume_by_day.values)\nplt.xlabel('Time')\nplt.ylabel('Volume')\nplt.title('Trading volumes by day')","2eab9f29":"market_train_df['returnsOpenNextMktres10'].describe()","25610d64":"target_hist = plt.hist(market_train_df['returnsOpenNextMktres10'].sample(n=10000),\n                       bins=1000,\n                       range=(-1,1))","c457193e":"news_train_df.head(3)","5095a181":"news_train_df.shape","8727c54e":"news_train_df.columns","a1f0b5ed":"print(\"The news data cover news stats from: {} to {}.\"\n      .format(news_train_df.time.min(),news_train_df.time.max()))","06742580":"# Sort values by time then extract date\nnews_train_df = news_train_df.sort_values(by='time')\nnews_train_df['date'] = news_train_df['time'].dt.date","ba3a3163":"news_train_df['provider'].value_counts().head(10)","b7775876":"count_by_day = news_train_df.groupby('date')['sourceId'].count()\n#count_by_day = count_by_day.ewm(span=10).mean()\n\nplt.bar(x=count_by_day.index, height=count_by_day.values, width=1)\nplt.xlabel('Time')\nplt.ylabel('Count')\nplt.title('Count by day')","44214c0b":"asset_name = news_train_df.groupby('assetName')['sourceId'].count().sort_values(ascending=False)[:10]\nplt.barh(y=asset_name.index, width=asset_name.values, height=0.5, color='green')\nplt.gca().invert_yaxis()\nplt.xlabel('News count')","77943e80":"news_train_df['sentence_word_count'] =  news_train_df['wordCount'] \/ news_train_df['sentenceCount']\n\nplt.subplot(1, 3, 1)\nword_count = plt.boxplot(news_train_df['wordCount'][news_train_df['wordCount'] < 40]);\nplt.xlabel('Word')\n\nplt.subplot(1, 3, 2)\nsen_count = plt.boxplot(news_train_df['sentenceCount'][news_train_df['sentenceCount'] < 40]);\nplt.xlabel('Sentence')\n\nplt.subplot(1, 3, 3)\nsen_word_count = plt.boxplot(news_train_df['sentence_word_count'][news_train_df['sentence_word_count'] < 40])\nplt.xlabel('Word per sentence')\n","ce325daf":"# Barplot on negative, neutral and positive columns.\nnews_train_df[['sentimentNegative', 'sentimentNeutral','sentimentPositive']].mean().plot(kind='bar')\nplt.title(\"News sentiment chart\")\nplt.show()","55d86f1f":"News count by day.","b3ce9e31":"## Loading data","86c5d6fa":"Trends of closing prices by quantiles","901266d5":"## News data EDA","914dab96":"## Restart the Kernel to run your code again\nIn order to combat cheating, you are only allowed to call `make_env` or iterate through `get_prediction_days` once per Kernel run.  However, while you're iterating on your model it's reasonable to try something out, change the model a bit, and try it again.  Unfortunately, if you try to simply re-run the code, or even refresh the browser page, you'll still be running on the same Kernel execution session you had been running before, and the `twosigmanews` module will still throw errors.  To get around this, you need to explicitly restart your Kernel execution session, which you can do by pressing the Restart button in the Kernel Editor's bottom Console tab:\n![Restart button](https:\/\/i.imgur.com\/hudu8jF.png)","1b392310":"Outliers do exist, but most are in the -1 to 1 range.","25729336":"Target: returnsOpenNextMktres10 (Market-residualized open-to-open returns in the next 10 days).\n","9fb4e18d":"Which attitude prevails in news?","07c34668":"Top 10 mentioned assets in news.","b481940d":"News words and sentences count.","b391ecc5":"Top 10 news provider.","6d396842":"## Market data EDA","7163b105":"Number of assets by trading day.","41457265":"Trading volumes by day."}}