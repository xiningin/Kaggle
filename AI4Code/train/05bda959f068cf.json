{"cell_type":{"7fffef0d":"code","664e522f":"code","e742a4dc":"code","29d1057d":"code","62831195":"code","633d8814":"code","103942c9":"code","2f999d3f":"code","9ba53084":"code","b00a6e06":"code","7477319e":"code","964b71ca":"code","5d56a515":"code","f14357fa":"code","041c4dab":"code","93d1996e":"code","fd50c0ff":"code","a29bfa7f":"code","b4afcd58":"code","c2ea5c95":"code","34b99f0c":"code","b1b16a25":"code","aad841b6":"code","3457631a":"code","20617bcf":"code","d6f1c18f":"code","ac6a92d8":"markdown","e49c29cf":"markdown","dd6d06df":"markdown"},"source":{"7fffef0d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split","664e522f":"salary_data = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","e742a4dc":"salary_data.head()","29d1057d":"# check null values, datatypes\nsalary_data.info()","62831195":"# mean, min, max etc.\nsalary_data.describe()","633d8814":"salary_data.shape","103942c9":"salary_data.corr()","2f999d3f":"#create train test\nX = salary_data['YearsExperience']\ny = salary_data['Salary']\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, random_state = 100)","9ba53084":"plt.scatter(X,y)","b00a6e06":"sns.regplot(x=X,y=y,data=salary_data)","7477319e":"sns.heatmap(salary_data.corr(), annot=True)","964b71ca":"from sklearn.linear_model import LinearRegression","5d56a515":"print(X_train.shape)\nprint(X_test.shape)","f14357fa":"X_train_lm = X_train.values.reshape(-1,1)\nX_test_lm = X_test.values.reshape(-1,1)","041c4dab":"print(X_train_lm.shape)\nprint(X_test_lm.shape)","93d1996e":"lm = LinearRegression()","fd50c0ff":"lm.fit(X_train_lm, y_train)","a29bfa7f":"print(lm.coef_)\nprint(lm.intercept_)","b4afcd58":"#predict\ny_train_pred = lm.predict(X_train_lm)\ny_test_pred = lm.predict(X_test_lm)","c2ea5c95":"#train set\nplt.scatter(X_train, y_train)\nplt.plot(X_train_lm, y_train_pred, 'r')","34b99f0c":"#test set\nplt.scatter(X_test, y_test)\nplt.plot(X_test_lm, y_test_pred, 'b')","b1b16a25":"from sklearn.metrics import r2_score","aad841b6":"print(r2_score(y_true = y_train, y_pred = y_train_pred))\nprint(r2_score(y_true = y_test, y_pred = y_test_pred))","3457631a":"m = lm.coef_\nc = lm.intercept_\n\n#for 5 years of experience\nprint(c + m * 5)\n\n#for 1 years of experience\nprint(c + m * 1)\n\n#for 2.5 years of experience\nprint(c + m * 2.5)\n\n#for 0 years of experience\nprint(c + m * 0)","20617bcf":"y_pred = lm.predict(X.values.reshape(-1,1))\n\nplt.plot(X, y, label = \"Actual Line\")\nplt.plot(X, y_pred, label = \"Predicted Line\")\n\nplt.xlabel('x - axis')\nplt.ylabel('y - axis')\nplt.title('Two lines on same graph!')\nplt.legend()\nplt.show()","d6f1c18f":"import statsmodels.api as sm\n\nX_sm = sm.add_constant(X)\nolm = sm.OLS(y, X_sm)                                   \nolm = olm.fit()\nolm.summary()","ac6a92d8":"##### R-squared calc","e49c29cf":"#####  Model Creation using Statsmodel (OLS)","dd6d06df":"### Model Creation"}}