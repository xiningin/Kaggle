{"cell_type":{"7d84acb9":"code","e9268148":"code","a1f2044b":"code","41a2fc3f":"code","817d93c8":"code","2afd612e":"code","d00d5d34":"code","03ee9d4e":"code","5686988f":"code","28027da9":"code","5a6acdf9":"code","2d63d942":"code","a3908252":"code","959a828f":"code","edbb4853":"code","2058e775":"code","a9a49354":"markdown","a64e7702":"markdown","5369c538":"markdown","dbd1fd58":"markdown","91045586":"markdown","b555b903":"markdown","d772785e":"markdown","91d37262":"markdown","24282b22":"markdown","cdb45d82":"markdown","6181b050":"markdown","bdacd0d9":"markdown","819614a3":"markdown","4af7f0d4":"markdown","4ad0761a":"markdown","f4cdb55c":"markdown","2d74b496":"markdown","22a3ebea":"markdown","e2fa5cd8":"markdown","bc009d61":"markdown","dd33dca2":"markdown","2c0d8405":"markdown","f50fb066":"markdown","60845685":"markdown","f8f31477":"markdown","d3c95fdb":"markdown","80cb39ee":"markdown","2f7496c1":"markdown"},"source":{"7d84acb9":"round(45\/7,2)","e9268148":"# Respuesta aqui:\n213\/6","a1f2044b":"#n= (a+b+c+d+e+f)\/6 ","41a2fc3f":"(41+40+40+39+25+23)\/6\n","817d93c8":"#Mi Nombre\n'''\naaaaaa\n'''\nprint(\"\"\"Camilo\\'s Peluquer\u00eda\nTiene su inauguraci\u00f3n el d\u00eda de ma\u00f1ana\nTraer sus tanguitas narizonas\nCamilo va a evaluar si les queda bien\no mal...\n    \nNos vemos!!!!\n\"\"\")","2afd612e":"nombre = 'Cristiano'\napellido = 'Messi'\nedad = 35\ndatos = \"El Se\u00f1or \" + nombre + ' ' + apellido + ' tiene una edad de ' + str(edad) + \" a\u00f1os\"\ndatos2 = f\"El Se\u00f1or {nombre} {apellido} tiene una edad de {edad} a\u00f1os\"\n\ndatos = \"El Se\u00f1or \"\n\n#datos = datos + nombre\ndatos += nombre\n\nprint (datos2)\nprint (datos)\n\na = 6\na += 5\na -= 3\na *= 2\nprint (a)","d00d5d34":"a = [1,3,\"Perro\",1,6,3.7,1,2,4]\nprint (a)\na[3:8]\na.append(4)\nprint (a)\na.insert(3, 67 )\nprint (a)\ndel a[3]\nprint (a)","03ee9d4e":"t = (1,6,3.7,1,2,4)\nt.append(6)","5686988f":"(a, b) = (5, 6)\nprint (a)\nprint (b)","28027da9":"x = 40\n(x != 30) or not (x < 30)","5a6acdf9":"x = 40\nif (x != 30) and not (x < 30):\n    print(\"Hola\")\n    if x >= 40:\n        print(\"Mundo\")\nelif x < 15:\n    print (\"Pruebe otra cosa 15\")\nelif x < 25:\n    print (\"Pruebe otra cosa 25\")\nelse:\n    print(\"No Funciona\")","2d63d942":"i = 0\nwhile i < 10:\n    print (i)\n    i += 1","a3908252":"n = 1000\ni = 0\nresult = 0\nwhile i < n:\n    result += i\n    i += 1\nprint(result)","959a828f":"# R\/ Coloque el c\u00f3digo aqui\n\n#n = 45\n#n = 55\n#n = 4657221\n#n = 438323842397427347239842793842936\n#n = 1379217\nn = 57\nresultado = True\ni = 2\nwhile i <= n \/ 2:\n    if (n % i) == 0:\n        print (f\"{n} es divisible por {i}\")\n        resultado = False\n    i += 1\nif resultado:\n    print (f\"{n} es un n\u00famero primo\")\nelse:\n    print (f\"{n} no es un n\u00famero primo\")\n","edbb4853":"#R\/ Coloque el c\u00f3digo aqui\nm = 10\nj = 0\nk = 2\n\nwhile j < m:\n    es_primo = True\n    i = 2\n    while i <= k \/ 2:\n        if (k % i) == 0:\n            es_primo = False\n        i += 1\n    \n    if es_primo == True:\n        print (k)\n        j += 1\n    k += 1\n","2058e775":"1 % 2","a9a49354":"**Ejercicio 1.2.** En el siguiente slot, ingrese el c\u00f3digo necesario para el c\u00e1lculo del promedio de las edades de los asistentes al curso.","a64e7702":"# Herramientas para el control de Flujo\nA trav\u00e9s de estas herramientas, podemos condicionar la ejecuci\u00f3n del programa, dependiendo del estado de las variables y del entorno de ejecuci\u00f3n en general.","5369c538":"## Los Operadores L\u00f3gicos\n\nLos operadores l\u00f3gicos permite hacer operaciones l\u00f3gicas con los objetos de tipo booleanos\n\n```python\n\nand -> Conjunci\u00f3n L\u00f3gica y\nor -> Disyunci\u00f3n L\u00f3gica o\nnot -> Negaci\u00f3n\n\n```\n","dbd1fd58":"Realice los siguientes programas:\n\n1. Un programa que indique si un n\u00famero es primo o no\n\n","91045586":"Una matriz de 2 dimensiones 3x3 como la siguiente:\n\n```\n| 1 3 4 |\n| 4 5 6 |\n| 5 6 7 |\n```\nSe definir\u00eda de la siguiente manera:\n\n```python\nM = [ [ 1, 3, 4 ], [ 4, 5, 6 ], [ 5, 6, 7 ] ]\n      \n```\nPara acceder a un elemento de la matr\u00edz se debe indicar los 2 \u00edndices en el llamado, y si indicamos un solo \u00edndice, retornar\u00eda la lista asociada.\n\n```python\n>>> M[0][0]\n1\n>>> M[1][2]\n6\n>>> M[2]\n[5, 6, 7]\n```\n","b555b903":"Como la lista puede albergar objetos de distintos tipos, se puede realizar una lista de listas. Esos no generar\u00eda una matriz de dos dimensiones, incluso se pueden, crear una matriz de varias dimensiones, 2, 3, 4, 5... etc","d772785e":"# Estructura del Lenguaje Python\n\nPython es un Lenguaje de programaci\u00f3n que a pesar del gran potencial que tiene a la hora de brindar herramientas para desarrollar software, tiene una estructura elegante, legible y de f\u00e1cil apropiaci\u00f3n, es decir, visualmente, se puede entender un c\u00f3digo escrito en este lenguaje, sin tener una formaci\u00f3n avanzada en el tema.\n\nEl lenguaje cuanta con dos maneras de insertar comentarios en el c\u00f3digo (Texto que no ser\u00e1 ejecutado como parte del programa), `#` define un comentario en una l\u00ednea y `\"\"\"` y `\"\"\"` permite crear un comentario multil\u00ednea.","91d37262":"## Consola python\nPara ingresar a la consola de python, debemos ejecutar el comando `python` en la consola del sistema operativo.  En el caso del sistema operativo windows, podemos ingresar `Inicio + R` e ingresar python como comando a ejecutar, o buscar el Shell de Python directamente.  En linux, se pueden tener instaladas la versi\u00f3n 2.7 de python al tiempo de la versi\u00f3n 3.x; si por defecto, el sistema operativo toma la versi\u00f3n 2, se debe ejecutar `python3`.\n\n**Python** es un lenguaje interpretado, al tener esta condici\u00f3n, el compilador analiza la sintaxis del c\u00f3digo, la tansforma en lenguaje de m\u00e1quina y la ejecuta, l\u00ednea por l\u00ednea, el shell permite aprovechar esa manera de ejecutar el c\u00f3digo para poder ingresar la instrucciones y que ellas se vayan ejecutando, el shell cuenta con un espacio en la memoria para ir almacenando el *contexto de ejecuci\u00f3n*, es decir, el estado de las variables utilizadas.","24282b22":"`if` ... `else`\n\n`else` define un bloque de c\u00f3digo que se ejecutar\u00e1 si la condici\u00f3n del `if` es `False`\n\n```python\nx = 40\nif (x != 30) and not (x < 30):\n    print(\"Hola\")\n    if x >= 40:\n        print(\"Mundo\")\nelse:\n    print(\"No Funciona\")\n```","cdb45d82":"2. Un programa que al darle un n\u00famero m, genere los m primeros n\u00fameros primos","6181b050":"```python\nx = 40\nif (x != 30) and not (x < 30):\n    print(\"Hola\")\n    if x >= 40:\n        print(\"Mundo\")\nelif x < 15:\n    print (\"Pruebe otra cosa 15\")\nelif x < 25:\n    print (\"Pruebe otra cosa 25\")\nelse:\n    print(\"No Funciona\")\n```","bdacd0d9":"Para adicionar un elemento al final de la lista se debe usar el m\u00e9todo `append` y se pasa por par\u00e1metro el objeto a anexar.\n\n```python\na.append(23)\n```\n\nPara insertar un objeto en la lista en una posici\u00f3n determinada se usa el m\u00e9todo `insert`, \u00e9ste m\u00e9todo recibe 2 par\u00e1metros, el primero el \u00edndice de la posici\u00f3n donde se debe insertar el elemento y el segundo es el objeto a insertar.\n\n```python\na.insert(3.67)\n\n``` \n\nPara eliminar un elemento de la lista, basta con anteponer el termino `del` y se ubica el elemento a eliminar.\n\n```python\ndel a[6]\n\n``` ","819614a3":"`if` indica condici\u00f3n para la ejecuci\u00f3n de un bloque de c\u00f3digo, traduce \"si se cumple la condici\u00f3n haga\".\n\nLos bloques de c\u00f3digo que son dependientes, deben est\u00e1r indentados al siguiente nivel del `if`.\n\nLa s\u00edntasis del `if` es la siguiente:\n\n```python\nif <condition>:\n    ...\n    C\u00f3digo\n    ...\n```    \n  \n```\nx = 40\nif (x != 30) and not (x < 30):\n    print(\"Hola\")\n```","4af7f0d4":"## Tuplas\nLas Tuplas son similares a las listas, salvo que una vez creadas, estas no se pueden modificar, por lo tanto, no se puede actualizar, eliminar los objetos de la lista, anexar nuevos objetos.\n\nPara crear una tupla, es muy parecido con las lista, pero encerradas con `(...)`, incluso sin encerrarlas en par\u00e9ntesis el compilador la transforma en una Tupla.","4ad0761a":"### Los Operadores de comparaci\u00f3n\n\nOtro tipo de dato b\u00e1sico en python es el booleano (`bool`), tiene dos posibles valores, verdadero (`True`) y falso (`False`).\n\nExisten en el lenguaje operadores de comparaci\u00f3n, los cuales, permiten comparar dos objetos del mismo tipo.\n```\n`==` -> Igual a\n`>` -> Mayor Que\n`>=` -> Mayor o igual a que\n`<` -> Menor Qque\n`<=` -> Menor o igual a que\n`!=` -> Diferente a\n```\n\n```python\n>>> x = 40\n>>> x == 50\nFalse\n>>> x > 30\nTrue\n>>> x < 40\nFalse\n>>> x != 63\nTrue\n>>> x >= 40\nTrue\n```\n","f4cdb55c":"## N\u00fameros y operadores\n\nLos n\u00fameros enteros son de tipo `int`, aquellos con una parte decimal son de tipo flotante `float`. \n\nLa notaci\u00f3n de las operaciones matem\u00e1ticas en `python` es infija, es decir, que el operador se encuentra en la mitad de los 2 operandos (`5 + 8`), y se hace el uso de los par\u00e9ntesis para agrupar operaciones y fijar una prioridad en la resoluci\u00f3n de las mismas.  Sin los par\u00e9ntisis, python adopta la prioridad de resoluci\u00f3n de la matem\u00e1tica tradicional, es decir, el operador de la multiplicaci\u00f3n (`*`) y el operador de la divisi\u00f3n (`\/`), tienen prioridad sobre los operadores de suma (`+`) y resta (`-`).\n\nEl operador m\u00f3dulo (`%`) tiene menor prioridad que la multiplicaci\u00f3n y mayor que la suma.  Permite el c\u00e1lculo del residuo de la divisi\u00f3n entera, es decir si se tiene `7 \/ 2`, el resultado de la divisi\u00f3n en los n\u00fameros enteros ser\u00eda, `3` y el residuo ser\u00eda `1`, por lo tanto `7 % 2 = 1`.\n\nOtros Operadores:\n\n`\/\/` -> Divisi\u00f3n Entera. \n\n`**` -> Potencia.\n\n`round(x,d)` -> Redondea un flotante `x` a `d` decimales.\n","2d74b496":"`if` ... `elif` ... `else`\n\n`elif` define un bloque de c\u00f3digo que se ejecuta, si la condici\u00f3n del `if` es false y la condici\u00f3n del `elif` es verdadera.","22a3ebea":"Incluso, se puede tener un `if` anidado.\n\n```python\nx = 40\nif (x != 30) and not (x < 30):\n    print(\"Hola\")\n    if x >= 40:\n        print(\"Mundo\")\n```        ","e2fa5cd8":"```python\n# Funci\u00f3n creada para calcular ________\ndef sum(n):\n    i = 0\n    result = 0\n    while i < n:\n        result += i\n        i += 1\n    print(result)\n\nsum(1000)\n```","bc009d61":"**Respuesta aqu\u00ed** R\/","dd33dca2":"## La sentencia `if`","2c0d8405":"# Caso Extendido, para el estudio en Casa\n\nPara poner en pr\u00e1ctica lo aprendido en clase, se plantean los siguiente problemas:","f50fb066":"**Ejercicio 1.1.** Explique en sus palabras que hace el c\u00f3digo anterior, indicando el objetivo del mismo y m\u00e1s o menos la estrategia para resolver el problema.","60845685":"## Listas\nLas Listas son un tipo de dato compuesta, es una colecci\u00f3n de objetos, ordenados por la posici\u00f3n del elemento, es decir, se accede a cada uno de los elementos a trav\u00e9s de un \u00edndice.\n\nLas listas se definen por una secuencia de objetos separados por `,` y encerrados entre `[...]`.\n\n```python\na = [1,3,\"Perro\",1,6,3.7,1,2,4]\n```\n\nPara acceder a un elemento de la lista usamos un \u00edndice y ese se coloca seguido de la variable de la lista, entre corchetes.\n\n```python\n>>> a[0]\n1\n```\n\nLa primera posici\u00f3n de la lista es `0`, es decir, que en el ejemplo anterior, se est\u00e1 extrayendo el primer elemento de la lista.\n\nLas Listas, usan varias de las operaciones de las cadenas de caracteres,\n\n`+` -> Une dos listas\n\nTambi\u00e9n se soporta la extracci\u00f3n de sublistas con el uso de \u00edndices, que denoten rango usando el caracter `:`.","f8f31477":"## Cadenas de caracteres\n\n\nLas cadenas de caracteres es otro de los tipos de datos b\u00e1sicos de python, se construyen bordeando la cadena con comillas dobles (`\"...\"`) o comillas simples (`'...'`).\n\n`a = \"Hola Mundo\"`\n\nLa funci\u00f3n `print()` permite mostrar en pantalla el resultado de una expresi\u00f3n.\n\n```python\nnombre = 'Pedro Perez'\nprint (nombre)\n```\n\nTambi\u00e9n hay operaciones con cadenas de caracteres.\n\n`+` -> Une dos cadenas de caracteres.\n```python\n>>> nombre = 'Cristiano'\n>>> apellido = 'Messi'\n>>> print (nombre + ' ' + apellido)\nCristiano Messi\n```\n\n`*` -> Repite una cadena n veces.\n\n```python\n>>> letra = 'a'\n>>> print (letra * 3)\naaa\n```\n\n`[]` -> Sub\u00edndice de la cadena de caracteres\n\n```python\n>>> nombre[0]\n'C'\n>>> apellido[4]\n'i'\n>>> nombre[-1]\n'o'\n>>> nombre[-3]\n'a'\n>>> nombre[0:2]\n'Cri'\n>>> nombre[2:5]\n'ist'\n\n```\n`len()` -> permite calcular el tama\u00f1o de una cadena de texto\n```python\n >>> len(nombre)\n9\n```\n\n### Formato embebido\nSe puede construir cadenas de caracteres usando el modificador `f` previo a la cadena de caracteres y encerrando con `{...}` las operaciones.\n\n```python\n>>> print (f\"El resultado de sumar 5 y 4 es {5 + 4}\")\nEl resultado de sumar 5 y 4 es 9\n```","d3c95fdb":"## La sentencia `while`","80cb39ee":"## Variables\nLas variables son espacios de memoria RAM etiquetados con un nombre, donde se almacena el valor que tiene la misma, en un momento de la ejecuci\u00f3n del programa determinado.\n\nLas variables se pueden nombrar con palabras compuestas con las letras de a `a` la `z`, y por los d\u00edgitos del `0` al `9` y los caracteres `-` y `_`.  Sin embargo, el nombre de las variables no puede iniciar con n\u00famero.\n\nEl s\u00edmbolo `=` es utilizado para la asignaci\u00f3n de variables, donde a la izquierda se coloca la variable y a la derecha una operaci\u00f3n, un valor u otra variable.\n\n```python\nx = 35\ny = x + 2\nz = y\n```\n\nEn `python` el resultado de la \u00faltima operaci\u00f3n se guarda autom\u00e1ticamente en la variable `_`.\n\n```python\n5 + 6\na = _ + 7\n```","2f7496c1":"Sint\u00e1cticamente es muy parecido al `if`, la diferencia es que el bloque se ejecuta de manera repetida, mientras la condici\u00f3n no se cumpla.\n\nSe debe tener mucho cuidado con la ejecuci\u00f3n de la instrucci\u00f3n `while`, se debe garantizar una condici\u00f3n de parada, ya que la ejecuci\u00f3n infinita, puede consumir todos los recursos del equipo donde ser\u00e1 ejecutado el programa."}}