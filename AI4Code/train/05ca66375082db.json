{"cell_type":{"9f03d57c":"code","435551be":"code","9259a958":"code","37921058":"code","ec9151e8":"code","d954ee10":"code","cb22fce5":"code","d1ce43e7":"markdown"},"source":{"9f03d57c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","435551be":"#Import helpful libraries\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\n\n#Import CSV files\ntrain_data=pd.read_csv(\"\/kaggle\/input\/ventilator-pressure-prediction\/train.csv\")\npractice_train_data=train_data.sample(n=20000)\ntest_data=pd.read_csv(\"\/kaggle\/input\/ventilator-pressure-prediction\/test.csv\")\ntrain_data.describe()\n#train_data.head()","9259a958":"#Create X,y\nfeatures=['breath_id','R','C','time_step','u_in','u_out']\nX=practice_train_data[features]\ny=practice_train_data.pressure\n\n#split data to validation\ntrain_X,val_X,train_y,val_y=train_test_split(X,y,random_state=1)\n","37921058":"#define model, fit, predict and caliculate MAE\nrf_model = RandomForestRegressor(random_state=1)\nrf_model.fit(train_X, train_y)\nrf_val_predictions = rf_model.predict(val_X)\nrf_val_mae = mean_absolute_error(rf_val_predictions,val_y)\nprint(f\"Validation MAE for Random Forest Model:{rf_val_mae}\")","ec9151e8":"#Test Data Prediction\ntest_X=test_data[features]\ntest_preds=rf_model.predict(test_X)","d954ee10":"#check the results just to be sure\nprint(test_preds[0:20])","cb22fce5":"output=pd.DataFrame({'id': test_data.id,'pressure': test_preds})\noutput.to_csv('submission.csv', index=False)\nprint('end')","d1ce43e7":"- The code was created using only what I learned in Kaggle's Intro to Machine Learning Courses.It's simple randomforest, so it won't give you a good score.\n- Anyway, the code works and you can submit your results.\n- Please note that I have limited the number of data used in the training to 20,000 (because the number of data is very large).\n- I hope you find it useful."}}