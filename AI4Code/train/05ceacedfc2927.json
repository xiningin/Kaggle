{"cell_type":{"2f270bc7":"code","737ccd1b":"code","86181900":"code","8c07e80e":"code","70dca4c9":"code","01f5588c":"code","01f01937":"code","f11982da":"code","7ff4a8c1":"code","e5825e9c":"code","c3ace714":"code","6d99a800":"code","651b61d9":"code","3c87d896":"code","3d0e901c":"markdown","45a4ab93":"markdown","1830f54e":"markdown","a128bf5e":"markdown","2d51fd72":"markdown","a2cb6f6b":"markdown","b72e9d5d":"markdown","456c519d":"markdown","25180010":"markdown","2dcd566d":"markdown","4320b954":"markdown","75a42790":"markdown","9a81c9c8":"markdown","47942c81":"markdown","9e232a9f":"markdown","ac0a263a":"markdown","c76dd0da":"markdown","74b758f3":"markdown","61d4da58":"markdown","c6717761":"markdown","c0052482":"markdown","c814f1b5":"markdown","8473c198":"markdown"},"source":{"2f270bc7":"import numpy as np\nimport os\nimport pandas as pd\nfrom fastai.vision.all import *","737ccd1b":"x  = '..\/input\/cassava-leaf-disease-classification'\npath = Path(x)\npath.ls()","86181900":"train_df = pd.read_csv(path\/'train.csv')\ntrain_df['path'] = train_df['image_id'].map(lambda x:path\/'train_images'\/x)\ntrain_df = train_df.drop(columns=['image_id'])\ntrain_df = train_df.sample(frac=1).reset_index(drop=True)","8c07e80e":"np.random.seed(40)\nitem_tfms = RandomResizedCrop(460, min_scale=0.75, ratio=(1.,1.))\nbatch_tfms = [*aug_transforms(size=224, max_warp=0), Normalize.from_stats(*imagenet_stats)]\ndata = ImageDataLoaders.from_df(train_df, \n                               valid_pct=0.2, \n                               seed=999, \n                               label_col=0, \n                               fn_col=1, \n                               bs=256, \n                               item_tfms=item_tfms, \n                               batch_tfms=batch_tfms)","70dca4c9":"data.show_batch(figsize=(7,6))\n","01f5588c":"data.c","01f01937":"data","f11982da":"learn = cnn_learner(data, \n                    resnet50, \n                    loss_func = LabelSmoothingCrossEntropy(), \n                    metrics = [accuracy], \n                    cbs=MixUp()).to_native_fp16()\n","7ff4a8c1":"learn.lr_find()\n","e5825e9c":"lr1 = 1e-3\nlr2 = 1e-1\nlearn.fit_one_cycle(4,slice(lr1,lr2))","c3ace714":"# lr1 = 1e-3\nlr = 1e-1\nlearn.fit_one_cycle(20,slice(lr))","6d99a800":"learn.unfreeze()\nlearn.lr_find()\nlearn.fit_one_cycle(10,slice(1e-4,1e-3))","651b61d9":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","3c87d896":"learn.export(file = Path(\"\/kaggle\/working\/export.pkl\"))\nlearn.model_dir = \"\/kaggle\/working\"\nlearn.save(\"stage-1\",return_path=True)","3d0e901c":"<a id=\"14\"><\/a>\n<font color=\"blue\" size=+2.5><b>5.1 Interpret the results<\/b><\/font>\n<br\/>","45a4ab93":"<a id=\"16\"><\/a>\n<font color=\"blue\" size=+2.5><b>5.3 Save and Load Model<\/b><\/font>\n<br\/>\n","1830f54e":"<a id=\"2\"><\/a>\n<font color=\"blue\" size=+2.5><b>1.2  What is CNN ?<\/b><\/font>\n<br\/>\n<br\/>\n![image.png](attachment:image.png)\n**CNN stands for Convolutional Neural Network which is a specialized neural network for processing data that has an input shape like a 2D matrix like images. CNN's are typically used for image detection and classification.**","a128bf5e":"<a id=\"17\"><\/a>\n<font color=\"blue\" size=+2.5><b>5.4 Sources<\/b><\/font>\n<br\/>\n* [Fastai MOOC](https:\/\/course.fast.ai\/)\n* [Fastai library](https:\/\/docs.fast.ai\/)","2d51fd72":"<a id=\"10\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.1 Create Model<\/b><\/font>\n<br\/>\n* We now use a pre-trained ResNet50 Convolutional Neural Net model, and use transfer learning to learn weights of only the last layer of the network.\n* Why Transfer learning? Because with transfer learning, you begin with an existing (trained) neural network used for image recognition \u2014 and then tweak it a bit (or more) here and there to train a model for your particular use case. And why do we do that? Training a reasonable neural network would mean needing approximately 300,000 image samples, and to achieve really good performance, we\u2019re going to need at least a million images.\n* In our case, we have approximately 4000+ images in our training set \u2014 you have one guess to decide if that would have been enough if were to train a neural net from scratch.\n* We use the create_cnn() function for loading a pre-trained ResNet18 network, that was trained on around a million images from the ImageNet database.","a2cb6f6b":"<a id=\"9\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.4 Print Classes present in the data<\/b><\/font>\n<br\/>\n\n* data.c \u2014 How many classes are there in our dataset?\n* len(data.train_ds) \u2014 What is the size of our training dataset?\n* len(data.valid_ds) \u2014 What is the size of our validation dataset?","b72e9d5d":"<a id=\"5\"><\/a>\n\n\n<font color=\"blue\" size=+2.5><b>2. Library<\/b><\/font>","456c519d":"<font size=\"+1\" color=red ><b>Please Upvote my kernel and keep it in your favourite section if you think it is helpful.<\/b><\/font>","25180010":"![image.png](attachment:image.png)","2dcd566d":"<a id=\"8\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.3 Data Explorations<\/b><\/font>\n<br\/>\n\n*Our image dataset is stored as .jpg files in 2 different folders, with each folder bearing the name of model of the images contained in the folder. We use the ImageDataBunch.from_folder() function to load the images and assign labels the images based on the name of the folder they\u2019re read from.*","4320b954":"<a id=\"1\"><\/a>\n<font color=\"blue\" size=+2.5><b>Introduction<\/b><\/font>\n","75a42790":"<a id=\"4\"><\/a>\n<font color=\"blue\" size=+2.5><b>2.1 Installation<\/b><\/font>\n* Numpy\n* Pandas\n* Matplotlib\n* Fastai","9a81c9c8":"<a id=\"7\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.2 Data Loading For training<\/b><\/font>\n<br\/>\n\n**Things to be remember:**\n* Decide validation percentage ( 0.2 => 20% )\n* Provide path for training data\n* [Decide augmentations criteria (optional)](https:\/\/www.kaggle.com\/init27\/introduction-to-image-augmentation-using-fastai\/)\n* Decide image size (which is 224 in my case)\n* Test data can also be added but it's optional","47942c81":"<a id=\"11\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.2 Finding LR<\/b><\/font>\n<br\/>","9e232a9f":"<a id=\"13\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.4 Hyper Parameter Tuning<\/b><\/font>\n<br\/>","ac0a263a":"<a id=\"top\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of content<\/h3>\n\n<font color=\"blue\" size=+1><b>Introduction<\/b><\/font>\n* [1. What is CNN ?](#2)\n* [2. What is Transfer Learning ?](#3)    \n\n<font color=\"blue\" size=+1><b>Library<\/b><\/font>\n* [1. Installation](#4)\n* [2. Import Libraries ](#5)\n    \n<font color=\"blue\" size=+1><b> Load and view your data <\/b><\/font>\n* [1. Setting up path for training data ](#6)\n* [2. Data Loading For training ](#7)\n* [3. Data Explorations ](#8)\n* [4. Print Classes present in the data ](#9)\n\n<font color=\"blue\" size=+1><b> Create and train a model <\/b><\/font>\n* [1. Create Models ](#10)\n* [2. Train Model ](#11)\n* [3. Finding LR ](#12)\n* [4. Finetuning HyperParameter](#13)\n\n<font color=\"blue\" size=+1><b> Others <\/b><\/font>\n* [1. Interpret the results](#14)\n* [2. Prediction Using Trained Model](#15)\n* [3. Save and Load Model](#16)\n* [4. Sources](#17)","c76dd0da":"<a id=\"3\"><\/a>\n<font color=\"blue\" size=+2.5><b>1.3  What is Transfer Learning ?<\/b><\/font>\n<br\/>\n<br\/>\n![image.png](attachment:image.png)\n**Transfer learning is a machine learning technique where a model trained on one task is re-purposed on a second related task.**","74b758f3":"<a id=\"5\"><\/a>\n<font color=\"blue\" size=+2.5><b>2.2 Library Import<\/b><\/font>","61d4da58":"<a id=\"18\"><\/a>\n<font color=\"blue\" size=+2.5><b>Feedback and Support<\/b><\/font>\n<br\/>\n* Your feedback is much appreciated\n* Please UPVOTE if you LIKE this notebook\n* Comment if you have any doubts or you found any errors in the notebook","c6717761":"# Objective\nGoal of this kernel is following:\n- Learn how to implement FastAI on image data.\n- Learn how to implement CNN on custom data.\n- Learn how to Resnet to get better accuracy.\n- Provide Perfect Guide for all the tips and trick to implement CNN and get better accuracy as a Begineer.\n\nI have learned them from [FastAI](https:\/\/docs.fast.ai\/)","c0052482":"<a id=\"12\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.3 Train Model<\/b><\/font>\n<br\/>","c814f1b5":"<a id=\"6\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.1 Setting up path for training data<\/b><\/font>\n\n**Point to be Noted: Number of elements in a list of path is same as number of classes you have**","8473c198":"<font size=\"+3\" color=blue><b> <center><u> Cassava Leaf Disease - EDA & Fastai Baseline <\/u><\/center><\/b><\/font>"}}