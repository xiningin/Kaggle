{"cell_type":{"55cb554e":"code","229141c1":"code","c2febcd0":"code","0588fa0f":"code","caf02eb3":"code","7abf1bc3":"code","37bb7fcc":"code","f515d401":"code","7ef22459":"code","97a0fda9":"code","2b1dc11d":"code","bc0a3377":"code","90064c38":"code","2c6516d7":"code","ebf6ff25":"code","310a389c":"code","73fda218":"code","1c604875":"code","318ef4d8":"code","ec03176a":"code","3abda235":"code","66663ce1":"code","b2e4c6b5":"code","5c2ad1ea":"code","34df599b":"code","48eb973b":"code","36fd387c":"code","37a74cd8":"code","f2f3a429":"code","af833b75":"code","6ce2b61a":"code","78ea0f2f":"code","ecf91b29":"markdown"},"source":{"55cb554e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","229141c1":"df_confirmed = pd.read_csv('\/kaggle\/input\/ece657aw20asg4coronavirus\/time_series_covid19_confirmed_global.csv')","c2febcd0":"country = \"Canada\"\ndf_confirmed1 = df_confirmed[df_confirmed[\"Country\/Region\"] == country]\n\ndf_confirmed1","0588fa0f":"df_confirmed2 = pd.DataFrame(df_confirmed1[df_confirmed1.columns[4:]].sum(),columns=[\"confirmed\"])\ndf_confirmed2.index = pd.to_datetime(df_confirmed2.index,format='%m\/%d\/%y')\ndf_confirmed2","caf02eb3":"df_confirmed2.plot(figsize=(10,5),title=\"Canada\")\ndf_new = df_confirmed2[[\"confirmed\"]]\ndf_new.tail(10)","7abf1bc3":"len(df_new)\nx = len(df_new) - 5\nx","37bb7fcc":"train=df_new.iloc[:x]\ntest = df_new.iloc[x:]\ntrain","f515d401":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit(train)\nscaled_train = scaler.transform(train)#and divide every point by max value\nscaled_test = scaler.transform(test)\nscaled_train.shape","7ef22459":"from keras.preprocessing.sequence import TimeseriesGenerator\nn_input = 5  ## number of steps\nn_features = 1 ## number of features you want to predict (for univariate time series n_features=1)\ngenerator = TimeseriesGenerator(scaled_train,scaled_train,length = n_input,batch_size=1)\nlen(generator)","97a0fda9":"x,y = generator[71]\nx,y\n","2b1dc11d":"from keras.models import Sequential\nfrom keras.layers import Dense, LSTM, Dropout, Activation\nmodel = Sequential()\nmodel.add(LSTM(150,activation=\"relu\",input_shape=(n_input,n_features)))\n#model.add(Dropout(0.2))\nmodel.add(Dense(75, activation='relu'))\nmodel.add(Dense(units=1))\n#model.add(Activation('softmax'))\n#model.add(Dense(1))\nmodel.compile(optimizer=\"adam\",loss=\"mse\")\nmodel.summary()","bc0a3377":"validation_set = np.append(scaled_train[76],scaled_test)\nvalidation_set=validation_set.reshape(6,1)\nvalidation_set","90064c38":"n_input = 5\nn_features = 1\nvalidation_gen = TimeseriesGenerator(validation_set,validation_set,length=5,batch_size=1)","2c6516d7":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss',patience=20,restore_best_weights=True)","ebf6ff25":"model.fit_generator(generator,validation_data=validation_gen,epochs=100,callbacks=[early_stop],steps_per_epoch=10)","310a389c":"pd.DataFrame(model.history.history).plot(title=\"loss vs epochs curve\")","73fda218":"myloss = model.history.history[\"val_loss\"]\nplt.title(\"validation loss vs epochs\")\nplt.plot(range(len(myloss)),myloss)","1c604875":"##Forecast\ntest_prediction = []\n\n##last n points from training set\nfirst_eval_batch = scaled_train[-n_input:]\ncurrent_batch = first_eval_batch.reshape(1,n_input,n_features)","318ef4d8":"for i in range(len(test)+7):\n    current_pred = model.predict(current_batch)[0]\n    test_prediction.append(current_pred)\n    current_batch = np.append(current_batch[:,1:,:],[[current_pred]],axis=1)","ec03176a":"true_prediction = scaler.inverse_transform(test_prediction)\ntrue_prediction[:,0]","3abda235":"time_series_array = test.index\nfor k in range(0,7):\n    time_series_array = time_series_array.append(time_series_array[-1:] + pd.DateOffset(1))\ntime_series_array","66663ce1":"df_forecast = pd.DataFrame(columns=[\"confirmed\",\"confirmed_predicted\"],index=time_series_array)\ndf_forecast.loc[:,\"confirmed_predicted\"] = true_prediction[:,0]\ndf_forecast.loc[:,\"confirmed\"] = test[\"confirmed\"]\ndf_forecast","b2e4c6b5":"df_forecast.plot(title=\"Predictions for next 7 days\")","5c2ad1ea":"MAPE = np.mean(np.abs(np.array(df_forecast[\"confirmed\"][:5]) - np.array(df_forecast[\"confirmed_predicted\"][:5]))\/np.array(df_forecast[\"confirmed\"][:5]))\nprint(\"MAPE is \" + str(MAPE*100) + \" %\")","34df599b":"sum_errs = np.sum((np.array(df_forecast[\"confirmed\"][:5]) - np.array(df_forecast[\"confirmed_predicted\"][:5]))**2)\nsum_errs","48eb973b":"stdev = np.sqrt(1\/(5-2) * sum_errs)\nstdev","36fd387c":"interval = 1.96 * stdev\ninterval","37a74cd8":"df_forecast[\"confirm_min\"] = df_forecast[\"confirmed_predicted\"] - interval\ndf_forecast[\"confirm_max\"] = df_forecast[\"confirmed_predicted\"] + interval\ndf_forecast","f2f3a429":"df_forecast[\"Model Accuracy\"] = round((1-MAPE),2)\ndf_forecast","af833b75":"from datetime import datetime\ndf_forecast[\"Country\"] = country\ndf_forecast","6ce2b61a":"df_forecast.iloc[:,:4].plot()","78ea0f2f":"fig= plt.figure(figsize=(10,5))\nplt.title(\"{} - Results\".format(country))\nplt.plot(df_forecast.index,df_forecast[\"confirmed\"],label=\"confirmed\")\nplt.plot(df_forecast.index,df_forecast[\"confirmed_predicted\"],label=\"confirmed_predicted\")\n#ax.fill_between(x, (y-ci), (y+ci), color='b', alpha=.1)\nplt.fill_between(df_forecast.index,df_forecast[\"confirm_min\"],df_forecast[\"confirm_max\"],color=\"indigo\",alpha=0.09,label=\"Confidence Interval\")\nplt.legend()\nplt.show()","ecf91b29":"Forecast"}}