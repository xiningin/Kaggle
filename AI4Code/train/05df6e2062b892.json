{"cell_type":{"0081bc4b":"code","d32da02b":"code","e2cf0767":"code","daf9d71d":"code","42261ec8":"code","4d23cbc1":"code","f7de6a6e":"code","4fcb52a7":"code","8fa0fdd0":"code","1b2ab466":"code","3e2b3cee":"code","d482e476":"code","30035090":"code","1065e53a":"code","c6db7c6f":"code","d1056c3f":"code","44d76d0f":"code","e0133514":"code","17880f79":"code","93798e2f":"code","ab115833":"code","197c5536":"code","8d41224a":"code","4e316774":"code","11d46fa8":"code","0a3bc45a":"code","4f1e1f52":"code","fb60ebd0":"code","a1ff1d0b":"code","7a505981":"code","1bc89e1c":"code","b492ece4":"code","acc3ccc7":"code","80022c36":"code","4af70992":"code","3e62feab":"code","8156d402":"code","4374fa74":"code","5a4c5fa9":"code","fecca880":"code","468b75f6":"code","f0d3ce36":"code","8d6a7081":"code","ff603130":"code","6b73e677":"code","a621a850":"code","c712532b":"code","b0fe50f5":"code","30054dcf":"code","ff7dc4b3":"code","cb6d7eea":"code","3cfdb564":"code","a6f111f4":"code","ac084672":"markdown","9acef320":"markdown","de8e5d20":"markdown","50b2abfc":"markdown","e8e43c09":"markdown","56e280fe":"markdown","db761c38":"markdown","59f91af1":"markdown","9d1ae593":"markdown","734ebc65":"markdown","49623336":"markdown","9b0df3a4":"markdown","e214e1ef":"markdown","375932e2":"markdown","aec69f0b":"markdown","38bca80b":"markdown","3d405c86":"markdown","67c413ba":"markdown","fba2a8f0":"markdown","5907cbfd":"markdown","c00279b9":"markdown","61bb440e":"markdown","bba3dff6":"markdown","ff380332":"markdown","8a33ec05":"markdown","1402e75d":"markdown","cf7e345e":"markdown","80775adc":"markdown","7663d30a":"markdown","b172499e":"markdown","b272eb51":"markdown","caf12977":"markdown","b6237c62":"markdown","cf7b39c7":"markdown","af861841":"markdown"},"source":{"0081bc4b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom wordcloud import WordCloud\nfrom IPython.display import Image\n\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\n%matplotlib inline","d32da02b":"df_train = pd.read_csv(\"..\/input\/goemotions\/data\/train.tsv\", sep='\\t', header=None, names=['Text', 'Class', 'ID'])\ndf_dev = pd.read_csv(\"..\/input\/goemotions\/data\/dev.tsv\", sep='\\t', header=None, names=['Text', 'Class', 'ID'])\ndf_test = pd.read_csv(\"..\/input\/goemotions\/data\/test.tsv\", sep='\\t', header=None, names=['Text', 'Class', 'ID'])","e2cf0767":"df_train.head()","daf9d71d":"df_train['List of classes'] = df_train['Class'].apply(lambda x: x.split(','))","42261ec8":"df_train['Len of classes'] = df_train['List of classes'].apply(lambda x: len(x))","4d23cbc1":"df_train['Len of classes'].max()","f7de6a6e":"df_train[df_train['Len of classes'] == 5]","4fcb52a7":"temp_df = df_train[\"Len of classes\"].value_counts().sort_index()\n\ntrace1 = go.Bar(\n                x = ['1','2','3','4','5'],\n                y = temp_df.tolist(),\n                marker = dict(color = 'rgb(250,13,92)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text=temp_df.tolist(), textposition='outside',\n                width=[0.5, 0.5, 0.5, 0.5, 0.5])\nlayout = go.Layout(template= \"plotly_dark\",title = 'Number of classes' , xaxis = dict(title = 'Class Numbers'), yaxis = dict(title = 'Count'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","8fa0fdd0":"Image(filename='..\/input\/goemotions\/GoEmotionsFormat.PNG')","1b2ab466":"emotions_map = {}","3e2b3cee":"with open('..\/input\/goemotions\/data\/emotions.txt', 'r') as f:\n    for i,emotion in enumerate(f):\n        emotions_map[str(i)] = emotion.strip()","d482e476":"emotions_map","30035090":"for i in emotions_map:\n    df_train[emotions_map[i]] = df_train['List of classes'].apply(lambda x: 1 if i in x else 0)","1065e53a":"df_train.drop(['Class', 'ID', 'List of classes', 'Len of classes'], axis=1, inplace =True)","c6db7c6f":"df_train.head()","d1056c3f":"df_train.to_csv(\"processed_train.csv\", index=False)","44d76d0f":"emotion_list = list(emotions_map.values())","e0133514":"temp_list = df_train.drop(['Text'], axis=1).sum(axis=0).tolist()\ntrace1 = go.Bar(\n                x = emotion_list,\n                y = temp_list,\n                marker = dict(color = 'rgb(127, 16, 238)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text=temp_list, textposition='outside')\nlayout = go.Layout(template= \"plotly_dark\",title = 'NUMBER OF EMOTIONS' , xaxis = dict(title = 'Emotion'), yaxis = dict(title = 'Count'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","17880f79":"df_emotions = pd.read_csv(\"..\/input\/goemotions\/tables\/emotion_words.csv\")","93798e2f":"df_emotions.head()","ab115833":"wc_dict = {}","197c5536":"for i in df_emotions['emotion'].unique():\n    wc_dict[i] = {}\n    odds_list = df_emotions[df_emotions['emotion'] == i]['odds'].tolist()\n    word_list = df_emotions[df_emotions['emotion'] == i]['word'].tolist()\n    wc_dict[i] = dict(dict(zip(word_list,odds_list)))","8d41224a":"wc_dict","4e316774":"# Define a function to plot word cloud\ndef plot_cloud(wordcloud):\n    # Set figure size\n    plt.figure(figsize=(40, 30))\n    # Display image\n    plt.imshow(wordcloud) \n    # No axis details\n    plt.axis(\"off\");","11d46fa8":"wordcloud = WordCloud(width = 1000, height = 500, random_state=1, background_color='black', colormap='Set2', collocations=False)","0a3bc45a":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['admiration']))","4f1e1f52":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['amusement']))","fb60ebd0":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['anger']))","a1ff1d0b":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['annoyance']))","7a505981":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['approval']))","1bc89e1c":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['caring']))","b492ece4":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['confusion']))","acc3ccc7":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['curiosity']))","80022c36":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['desire']))","4af70992":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['disappointment']))","3e62feab":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['disapproval']))","8156d402":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['disgust']))","4374fa74":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['embarrassment']))","5a4c5fa9":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['excitement']))","fecca880":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['fear']))","468b75f6":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['gratitude']))","f0d3ce36":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['grief']))","8d6a7081":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['joy']))","ff603130":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['love']))","6b73e677":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['nervousness']))","a621a850":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['optimism']))","c712532b":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['pride']))","b0fe50f5":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['realization']))","30054dcf":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['relief']))","ff7dc4b3":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['remorse']))","cb6d7eea":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['sadness']))","3cfdb564":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['surprise']))","a6f111f4":"plot_cloud(wordcloud.generate_from_frequencies(wc_dict['neutral']))","ac084672":"## Anger","9acef320":"## Approval","de8e5d20":"Grief has the lowest Occurence, while neutral has the highest ocuurence followed by admiration ","50b2abfc":"## Curiosity","e8e43c09":"## Nervousness","56e280fe":"## Embarrassment","db761c38":"## Remorse","59f91af1":"## Fear","9d1ae593":"## Disgust","734ebc65":"## Grief","49623336":"## Sadness","9b0df3a4":"# Now Let's Check the Wordclouds related to each Emotion","e214e1ef":"## Joy","375932e2":"## Optimism","aec69f0b":"## Let's Check the distribution of the number of labels for each piece of text","38bca80b":"## Realization","3d405c86":"## Let's Convert our dataframe to the desired format for Multi-Label Classification ","67c413ba":"## Admiration","fba2a8f0":"## Relief","5907cbfd":"## Pride","c00279b9":"## Confusion","61bb440e":"## Love","bba3dff6":"## Excitement","ff380332":"Maximum number of labels assigned to a text are 5  ","8a33ec05":"## Neutral","1402e75d":"## Annoyance","cf7e345e":"Maximum texts are assigned **SINGLE** label","80775adc":"## Surprise","7663d30a":"## Disappointment","b172499e":"## Disapproval","b272eb51":"## Caring","caf12977":"### Maximum Number of labels assigned to a piece of text","b6237c62":"## Desire","cf7b39c7":"## Amusement","af861841":"## Gratitude"}}