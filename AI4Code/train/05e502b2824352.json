{"cell_type":{"72687692":"code","13eccc05":"code","50022ba2":"code","97af3c66":"code","971e1210":"code","73fd83b5":"code","ad2748ba":"code","6fa751cd":"code","61371ad3":"code","bedd191a":"code","934652ab":"code","abd5bbd1":"code","872f6096":"code","42d508c0":"code","82a92684":"code","0a843ead":"code","ba9d329a":"code","f8b50bd9":"code","b334c520":"code","bc484498":"code","97047b03":"code","85018a6a":"code","aca73e73":"code","4e53b65c":"markdown","ff1bab9a":"markdown","1989c67f":"markdown","4388b0f9":"markdown","7a1cafaf":"markdown","a64e74da":"markdown","ea6d36f6":"markdown","1a1e23d6":"markdown","cc1de2c7":"markdown","07ba0e23":"markdown","c66bee13":"markdown","f5cd5ce9":"markdown"},"source":{"72687692":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13eccc05":"data = pd.read_csv(\"\/kaggle\/input\/heart-failure-prediction\/heart.csv\")\ndata.head()","50022ba2":"data.isnull().sum()","97af3c66":"data.describe()","971e1210":"sns.countplot(x=data.Sex,hue=data.HeartDisease)\n","73fd83b5":"sns.countplot(x=data.RestingECG,hue=data.HeartDisease)","ad2748ba":"sns.lineplot(x=data.Age,y=data.HeartDisease)","6fa751cd":"X = data.drop(\"HeartDisease\",axis=1)\ny = data.HeartDisease","61371ad3":"X_cat = X.select_dtypes(exclude=np.number)\nX_cat[\"FastingBS\"] = data.FastingBS\nX_cat\nX_num = X.select_dtypes(include=np.number)\nX_num = X_num.drop(\"FastingBS\",axis=1)\nX_num","bedd191a":"X_dummies = pd.get_dummies(X_cat)\nX_dummies","934652ab":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\n\nX_num_scaled = scaler.fit_transform(X_num)\nX_num_scaled","abd5bbd1":"X_num_scaled = pd.DataFrame(data=X_num_scaled,columns=X_num.columns,index=X_num.index)","872f6096":"X_num_scaled","42d508c0":"X_new = pd.concat([X_num_scaled,X_dummies],axis=1)\nX_new","82a92684":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X_new,y,test_size=0.2,random_state=42)\nX_train, X_valid,y_train,y_valid = train_test_split(X_train,y_train,test_size=0.1,random_state=42)","0a843ead":"model = keras.models.Sequential([keras.layers.Dense(10,input_dim=20),\n                                 keras.layers.Dense(1000,activation=\"relu\",kernel_initializer=keras.initializers.GlorotNormal(seed=None)),\n                                 keras.layers.Dropout(rate=0.5),\n                                 keras.layers.Dense(1000,activation=\"relu\",kernel_initializer=keras.initializers.GlorotNormal(seed=None)),\n                                 keras.layers.Dropout(rate=0.5),\n                                 keras.layers.Dense(500,activation=\"relu\",kernel_initializer=keras.initializers.GlorotNormal(seed=None)),\n                                 keras.layers.Dropout(rate=0.5),\n                                 keras.layers.Dense(500,activation=\"relu\",kernel_initializer=keras.initializers.GlorotNormal(seed=None)),\n                                 keras.layers.Dropout(rate=0.5),\n                                 keras.layers.Dense(1,activation=\"sigmoid\")\n    \n])","ba9d329a":"model.compile(loss=\"binary_crossentropy\",metrics=[\"accuracy\"],optimizer=\"adam\")\nearly_stop = keras.callbacks.EarlyStopping(patience=30,restore_best_weights=True)","f8b50bd9":"history = model.fit(X_train,y_train,epochs=100,validation_data=(X_valid,y_valid),callbacks=(early_stop))","b334c520":"history_df = pd.DataFrame(history.history)\nhistory_df\n\nplt.plot(history_df.accuracy,label=\"Accuracy\")\nplt.plot(history_df.val_accuracy,label=\"Validation Accuracy\")\nplt.legend()\nplt.grid(True)","bc484498":"plt.plot(history_df.loss,label=\"Loss\")\nplt.plot(history_df.val_loss,label=\"Validation Loss\")\nplt.legend()\nplt.grid(True)","97047b03":"prediction = model.predict(X_test)\nprediction_labels = [np.argmax(i) for i in prediction]\nbinary_prediction= []\nfor i in prediction:\n    if i >0.5:\n        binary_prediction.append(1)\n    else:\n        binary_prediction.append(0)","85018a6a":"from sklearn.metrics import classification_report\nprint(classification_report(binary_prediction,y_test))","aca73e73":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(binary_prediction,y_test)\nsns.heatmap(cm,annot=True)\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Actual\")","4e53b65c":"**Seperating Categorical Variables and Numerical Variables**","ff1bab9a":"**Exploring Data**","1989c67f":"**Overall Accuracy**","4388b0f9":"**Train,Test and Validation Split**","7a1cafaf":"**Using OneHotEncoding on Categorical Values**","a64e74da":"**Building ANN model**","ea6d36f6":"**Plotting Performace of the model**","1a1e23d6":"**Checking Missing Values**","cc1de2c7":"**Turning Prediction from model to Binary Values**","07ba0e23":"## ***Loading Data***","c66bee13":"**Scaling Numerical Values**","f5cd5ce9":"**Merging Categorical and Numerical Values**"}}