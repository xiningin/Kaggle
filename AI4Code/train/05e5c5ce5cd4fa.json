{"cell_type":{"7406b8a9":"code","2bfd5403":"code","5230d05a":"code","5f1e1e84":"code","fce6f365":"code","6ce329d7":"code","c7ecc9c8":"code","94ce6a17":"code","26b04280":"code","4a36c3dc":"markdown","eb8eca0c":"markdown","dec3d85f":"markdown","09ce4880":"markdown","73466b8f":"markdown","4273de07":"markdown","13ec2801":"markdown","52793479":"markdown","1d2e200a":"markdown","23b91a6b":"markdown"},"source":{"7406b8a9":"# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.utils import shuffle\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\n#making corpus or words from comments\nimport re\nfrom nltk.stem.porter import PorterStemmer\nimport nltk\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","2bfd5403":"dataset = pd.read_csv('..\/input\/Roman Urdu DataSet.csv',encoding='cp437')","5230d05a":"dataset.head()","5f1e1e84":"Pos = dataset[dataset['sentiment'] == 'Positive'].shape[0]\nNeg = dataset[dataset['sentiment'] == 'Negative'].shape[0]\nNeu = dataset[dataset['sentiment'] == 'Neutral'].shape[0]\n# bar plot of the 3 classes\nplt.bar(10,Pos,3, label=\"Positve\")\nplt.bar(15,Neg,3, label=\"Negative\")\nplt.bar(20,Neu,3, label=\"Neutral\")\nplt.legend()\nplt.ylabel('Number of examples')\nplt.title('Proportion of examples')\nplt.show()","fce6f365":"# label selection\ny=dataset.iloc[:,1].values\nlabelEnocder_y=LabelEncoder()\ny=labelEnocder_y.fit_transform(y)\n# 2 postive 0 negative 1 nuetral","6ce329d7":"corpus=[]\nstopwords=['ai', 'ayi', 'hy', 'hai', 'main', 'ki', 'tha', 'koi', 'ko', 'sy', 'woh', 'bhi', 'aur', 'wo', 'yeh', 'rha', 'hota', 'ho', 'ga', 'ka', 'le', 'lye', 'kr', 'kar', 'lye', 'liye', 'hotay', 'waisay', 'gya', 'gaya', 'kch', 'ab', 'thy', 'thay', 'houn', 'hain', 'han', 'to', 'is', 'hi', 'jo', 'kya', 'thi', 'se', 'pe', 'phr', 'wala', 'waisay', 'us', 'na', 'ny', 'hun', 'rha', 'raha', 'ja', 'rahay', 'abi', 'uski', 'ne', 'haan', 'acha', 'nai', 'sent', 'photo', 'you', 'kafi', 'gai', 'rhy', 'kuch', 'jata', 'aye', 'ya', 'dono', 'hoa', 'aese', 'de', 'wohi', 'jati', 'jb', 'krta', 'lg', 'rahi', 'hui', 'karna', 'krna', 'gi', 'hova', 'yehi', 'jana', 'jye', 'chal', 'mil', 'tu', 'hum', 'par', 'hay', 'kis', 'sb', 'gy', 'dain', 'krny', 'tou']\nfor i in range(0,14646):\n    review = re.sub('[^a-zA-Z]',' ',dataset.iloc[:,0].values[i])\n    review=review.lower()\n    review=review.split()\n    review=[word for word in review if not word in stopwords]\n    review=' '.join(review)\n    corpus.append(review)","c7ecc9c8":"# making matrix of most common words with countVectorizer it is used to make vocabulary   \ncv=CountVectorizer(max_features=2500)\nx=cv.fit_transform(corpus).toarray()","94ce6a17":"#spliting dataset into train and test set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20)","26b04280":"classifier=LogisticRegression(random_state=0,solver='liblinear',multi_class='auto')\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\ncm=confusion_matrix(y_test,y_pred)\nprint(\"Confusion Matrix\")\nprint(cm)\nlabels=['Positive','Neutral','Negative']\nfig = plt.figure()\nax = fig.add_subplot(111)\ncax = ax.matshow(cm)\nplt.title('Confusion matrix of the classifier \\n')\nfig.colorbar(cax)\nax.set_xticklabels([''] + labels)\nax.set_yticklabels([''] + labels)\nplt.xlabel('Predicted')\nplt.ylabel('True')\nplt.show()\nprint('Accuracy is {} '.format(accuracy_score(y_test, y_pred)))","4a36c3dc":"In Cell below we have created logistic regression classifier used 80% of data for training 20% for testing created \nconfusion matrix printed it and visualized as well","eb8eca0c":"making matrix of most common words with countVectorizer it is used to make vocabulary ","dec3d85f":"importing dataset","09ce4880":"visualizing the proportion in which text is available with respect to sentiment","73466b8f":"First of All I am importing all the neccesary modules which will be used \nThe modules include numpy for numerical calculation pandas for dataframe manipulation matplotlib for ploting \ngraphs and sklearn for machine learning related tasks we have imported specific classes from these packages\nbased on our needs","4273de07":"spliting dataset into train and test set","13ec2801":"y is in form of categorical data so we need to convert it into quantitative data using label encoder","52793479":"Above figure shows number of texts for each category of sentiment","1d2e200a":"Below I have performed cleaning using following\ndelelting roman urdu stopwords \nconverting words in lower case","23b91a6b":"Having a look at dataset"}}