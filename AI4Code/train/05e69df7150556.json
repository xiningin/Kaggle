{"cell_type":{"ca467b2c":"code","40834d26":"code","e99531c8":"code","2f8a7882":"code","17e1b80c":"code","9326c4cf":"code","5cfe69e3":"code","8a7ec036":"code","a9dbdafa":"code","f1fdfa1c":"code","bd7badb0":"code","df063845":"code","26018879":"code","774527f7":"code","719267e3":"code","fb615e06":"code","08167a66":"code","72f5a832":"code","8de1154a":"code","f98af534":"code","fa5819b3":"code","ed993d6c":"code","f57362b3":"code","0268e4b4":"code","d5f6e11c":"markdown","f6313d6c":"markdown","cc47ac89":"markdown","518fbc4a":"markdown","26d6322a":"markdown","2a6d6e58":"markdown","127dc65d":"markdown","4abdd96f":"markdown","911e9687":"markdown","ed08bae7":"markdown","b458e9c3":"markdown","b3d3a3bb":"markdown","a5197c95":"markdown","5961133e":"markdown","4073c024":"markdown","90a95760":"markdown","52eb67c3":"markdown","954db69b":"markdown","85ceb9c6":"markdown","be66352d":"markdown"},"source":{"ca467b2c":"%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\nimport pandas as pd\nfrom pandas_summary import DataFrameSummary\nfrom IPython.display import display\nfrom datetime import datetime\n\nfrom fastai.imports import *\nfrom fastai.structured import *\nimport seaborn as sns\n\nsns.set(style='whitegrid', rc={\"grid.linewidth\": 0.1})\nsns.set_context(\"paper\", font_scale=1.9,rc={\"font.size\":8,\"axes.titlesize\":8,\"axes.labelsize\":5})              \nplt.figure(figsize=(3.1, 3)) # Two column paper. Each column is about 3.15 inch wide.\n\ndef display_all(df):\n    with pd.option_context(\"display.max_rows\", 1000, \"display.max_columns\", 1000): \n        display(df)","40834d26":"trans = pd.read_csv(\"..\/input\/BreadBasket_DMS.csv\",parse_dates=['Date'])\ndisplay(trans.T)","e99531c8":"display_all(trans.describe(include='all').T)","2f8a7882":"trans.info()","17e1b80c":"trans['Time'] =  pd.to_datetime(trans['Time'], format='%H:%M:%S')\ntrans.Item = trans.Item.astype('category')","9326c4cf":"trans.Item.value_counts()[:10]","5cfe69e3":"trans = trans[trans.Item != 'NONE']","8a7ec036":"trans.Item.cat.categories","a9dbdafa":"trans['Item_codes'] = trans.Item.cat.codes\ndisplay_all(trans.isnull().sum().sort_index()\/len(trans))","f1fdfa1c":"trans.head(10)","bd7badb0":"def add_datetime_features(df):\n    # sleep: 12-5, 6-9: breakfast, 10-14: lunch, 14-17: dinner prep, 17-21: dinner, 21-23: deserts!\n    df['Time'] = pd.DatetimeIndex(df['Time']).time\n    hour = df['Time'].apply(lambda ts: ts.hour)\n    df['Hour'],df['Time_Of_Day'] = hour,hour\n    df['Time_Of_Day'].replace([i for i in range(0,6)], 'Sleep',inplace=True)\n    df['Time_Of_Day'].replace([i for i in range(6,10)], 'Breakfast',inplace=True)\n    df['Time_Of_Day'].replace([i for i in range(10,14)], 'Lunch',inplace=True)\n    df['Time_Of_Day'].replace([i for i in range(14,17)], 'Dinner Prep',inplace=True)\n    df['Time_Of_Day'].replace([i for i in range(17,21)], 'Dinner',inplace=True)\n    df['Time_Of_Day'].replace([i for i in range(21,24)], 'Deserts',inplace=True)\n    df.drop('Time',axis=1,inplace=True)  \n\n    \n    df['Season'] = pd.DatetimeIndex(df['Date']).month\n    df['Season'].replace([1,2,12], 'Winter',inplace=True)\n    df['Season'].replace([i for i in range(3,6)], 'Spring',inplace=True)\n    df['Season'].replace([i for i in range(6,9)], 'Summer',inplace=True)\n    df['Season'].replace([i for i in range(9,12)], 'Fall',inplace=True) \n    \n    add_datepart(df, 'Date')\n    \n    return df","df063845":"trans = add_datetime_features(trans)\ntrans.head(10)","26018879":"trans.pivot_table(index='Season',columns='Item', aggfunc={'Item':'count'}).fillna(0)","774527f7":"trans.pivot_table(index='Time_Of_Day',columns='Item', aggfunc={'Item':'count'}).fillna(0)","719267e3":"trans.pivot_table(index='Year',columns='Item', aggfunc={'Item':'count'}).fillna(0)","fb615e06":"plt.figure(figsize=(20,10))\ntrans['Item'].value_counts()[:20].sort_values().plot.barh(title='Top 20 Sales',grid=True)","08167a66":"plt.figure(figsize=(20,10))\ntrans['Item'].value_counts()[-20:-1].sort_values().plot.barh(title='Top 20 Least Sales',grid=True)","72f5a832":"df1=trans[['Transaction', 'Month', 'Year', 'Time_Of_Day','Dayofweek','Hour','Is_year_end','Is_year_start','Is_month_end','Is_month_start','Season']]\ndf1=df1.drop_duplicates()\nplt.figure(figsize=(20,10))\nsns.countplot(x='Hour',data=df1,hue='Time_Of_Day').set_title('General Transation Trend Throughout The Day',fontsize=25)","8de1154a":"plt.figure(figsize=(20,10))\nsns.countplot(x='Dayofweek',data=df1).set_title('Pattern of Transation Trend Throughout The Week',fontsize=25)","f98af534":"plt.figure(figsize=(20,10))\nsns.countplot(x='Season',data=df1).set_title('Pattern of Transation Trend During Different Season\\'s',fontsize=25)","fa5819b3":"plt.figure(figsize=(20,10))\nsns.countplot(x='Year',data=df1,hue='Is_year_start').set_title('Transation Trend During Year Start',fontsize=25)","ed993d6c":"plt.figure(figsize=(20,10))\nsns.countplot(x='Year',data=df1,hue='Is_year_end').set_title('Transation Trend During Year End',fontsize=25)","f57362b3":"plt.figure(figsize=(20,10))\nsns.countplot(x='Month',data=df1,hue='Is_month_start').set_title('Transation Trend During Month Start',fontsize=25)","0268e4b4":"plt.figure(figsize=(20,10))\nsns.countplot(x='Month',data=df1,hue='Is_month_end').set_title('Transation Trend During Month End',fontsize=25)","d5f6e11c":"## Hourly Trend based on Activities of Day","f6313d6c":"## Data Processing:-","cc47ac89":"### **Insights**\n\nFrom the above plot we can conclude that the least purchased products are :-\n1. Polenta\n2. Gift voucher\n3. Bacon\n4. Raw bars\n5. Adjustment\n","518fbc4a":"## Least Bought Products","26d6322a":"## Monthly Trend","2a6d6e58":"## Weekly Trend","127dc65d":"### **Insights**\n\nFrom the above plot we can conclude that  the transactions are being affected by **End of Year** ","4abdd96f":"### **Insights**\n\nFrom the above plot we can conclude that most of the transaction are made during **Winters**","911e9687":"### **Insights**\n\nFrom the above plot we can conclude that  the transactions are being affected by **Start of Year** ","ed08bae7":"# To-Dos:- \n+ Find Association Rules\n+ Find Apriori","b458e9c3":"### **Insights**\n\nFrom the above plot we can conclude that  the transactions are being affected by **End of Month** ","b3d3a3bb":"![The Bread Basket](https:\/\/storage.googleapis.com\/kaggle-datasets-images\/50231\/92819\/043118a1f4b815eb271992ea0f83987c\/dataset-cover.jpg?t=2018-09-05-23-50-57=s2560 \"The Bread Basket\")\n\n## Context\nThe data belongs to a bakery called **\"The Bread Basket\"**, located in the historic center of *Edinburgh*. \nThis bakery presents a refreshing offer of *Argentine* and *Spanish* products.\n\n## Content\nData set containing 15,010 observations and more than 6,000 transactions from a bakery. The data set contains the following columns:\n\n1. ***Date:-***<br>\n Categorical variable that tells us the date of the transactions __*(YYYY-MM-DD format)*__.<br>\n The column includes dates from 30\/10\/2016 to 09\/04\/2017.\n\n2. ***Time:-***<br>\nCategorical variable that tells us the time of the transactions __*(HH:MM:SS format)*__.\n\n3. ***Transaction:-***<br>\nQuantitative variable that allows us to differentiate the transactions. The rows that share the same value in this field belong to the same transaction, that's why the data set has less transactions than observations.\n\n4. ***Item:-***<br>\nCategorical variable with the products.\n\n## Inspiration\n1. Market Basket Analysis\n\n2. Apriori algorithm","a5197c95":"# Visualization\n\n## Top Sales Products:-","5961133e":"### **Insights**\n\nFrom the above plot we can conclude that -\n+  Most of the transaction are made during **Lunch**\n+ Also trancsaction during **Breakfast** and **Dinner Prep** also fairly significant.\n\n\n","4073c024":"### **Insights**\n\nFrom the above plot we can conclude that the mostly purchased products are :-\n1. Coffee\n2. Bread\n3. Tea\n4. Cake\n5. Pastry","90a95760":"### **Insights**\n\nFrom the above plot we can conclude that  the transactions are being affected by **Start of Month** ","52eb67c3":"### **Insights**\n\nFrom the above plot we can conclude that -\n+  Most of the transaction are made during **Saturday**\n+ Also trancsaction during **Friday** and **Sunday** also fairly significant.","954db69b":"We can see we have `NONE` as item in the respective column. \n\nFor now we will remove this item","85ceb9c6":"## Seasonality Trend","be66352d":"## Yearly Trend"}}