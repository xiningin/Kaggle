{"cell_type":{"d8cb1d80":"code","708ab264":"code","1f980036":"code","b9ae519d":"code","b95d760d":"code","7e50bbf1":"code","8d598ee0":"code","deee0b7a":"code","794ebb7d":"code","3b553a36":"code","e084f0ca":"code","4fa23838":"code","f0e8977a":"code","11e22e37":"code","1c9ae1b2":"code","213fdd8f":"code","f7047bdb":"code","f9441add":"code","159b2f54":"code","b0413ae9":"code","f95cd610":"code","3a9f41e7":"code","47470430":"code","f879ca53":"code","674b5bc6":"code","1b4c41d2":"code","5ebea9ae":"code","75948b9a":"code","39446877":"code","6668e187":"code","022da246":"code","b00d03b9":"code","80f61d84":"code","91c2799c":"code","10013407":"code","0b505ee0":"code","c3b3f3a2":"code","517cee01":"code","b9d851b4":"code","d0f30791":"code","390d6959":"code","be8379f4":"markdown","a15973fd":"markdown","29869a01":"markdown","d98e647b":"markdown","9cecd00b":"markdown","31611447":"markdown","d9b9790b":"markdown","c8b16ed2":"markdown","becd2fe2":"markdown","a2137124":"markdown","8af3cd52":"markdown","7d7fa74e":"markdown","a7ea9287":"markdown","bba8aa3c":"markdown","2e1c9566":"markdown","f0806a47":"markdown","0c50023c":"markdown","2351954d":"markdown","6b0855ca":"markdown","37f07c7b":"markdown","dc90bc0e":"markdown","22054e30":"markdown","d17dcb10":"markdown","26e4020c":"markdown","522527b3":"markdown","afad270d":"markdown","49a3e50a":"markdown"},"source":{"d8cb1d80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","708ab264":"import matplotlib.pyplot as plt\nimport seaborn as sb\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score","1f980036":"train=pd.read_csv(\"\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv\")\ntrain.head()","b9ae519d":"train.shape","b95d760d":"test=pd.read_csv(\"\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Test Data.csv\")\ntest.head()","7e50bbf1":"train[\"Risk_Flag\"].unique()","8d598ee0":"train.describe()","deee0b7a":"train.isnull().sum() # no nulls ","794ebb7d":"plt.subplot(1,4,1)\nplt.subplots_adjust(left=0,right=3,bottom=1,top=2,wspace=0.2,hspace=0.4)\nlabel_age=['single', 'married']\nplt.title(\"Married\/Single\")\nplt.pie(train.groupby(train[\"Married\/Single\"]).size(),labels=label_age)\n\nplt.subplot(1,4,2)\nlabel_gen=['rented', 'norent_noown', 'owned']\nplt.title(\"House_Ownership\")\nplt.pie(train.groupby(train[\"House_Ownership\"]).size(),labels=label_gen)\n\nplt.subplot(1,4,3)\nlabel_ed=['no', 'yes']\nplt.title(\"Car_Ownership\")\nplt.pie(train.groupby(train[\"Car_Ownership\"]).size(),labels=label_ed)\n\nplt.subplot(1,4,4)\nlabel_ed=[0, 1]\nplt.title(\"Risk_Flag\")\nplt.pie(train.groupby(train[\"Risk_Flag\"]).size(),labels=label_ed)\n\nplt.show()","3b553a36":"plt.figure(figsize=(15,5))\nplt.xticks(rotation=\"90\")\nsb.countplot(x=\"Profession\", data=train)\nplt.show()","e084f0ca":"plt.figure(figsize=(20,5))\nplt.xticks(rotation=\"60\")\nsb.countplot(x=\"STATE\", data=train)\nplt.show()","4fa23838":"plt.figure(figsize=(10,5))\nplt.xticks(rotation=\"60\")\nsb.countplot(x=\"Experience\", data=train)\nplt.show()","f0e8977a":"plt.figure(figsize=(10,5))\nplt.xticks(rotation=\"60\")\nsb.countplot(x=\"CURRENT_JOB_YRS\", data=train)\nplt.show()","11e22e37":"plt.figure(figsize=(15,5))\nplt.xticks(rotation=\"90\")\nsb.countplot(x=\"Profession\", data=train)\nplt.show()","1c9ae1b2":"plt.figure()\nplt.xticks(rotation=\"60\")\nplt.hist(train[\"CURRENT_JOB_YRS\"])\nplt.show() ","213fdd8f":"train.head()","f7047bdb":"le_ms=preprocessing.LabelEncoder()\ntrain[\"Married\/Single\"]=le_ms.fit_transform(train[\"Married\/Single\"])","f9441add":"le_h=preprocessing.LabelEncoder()\ntrain[\"House_Ownership\"]=le_h.fit_transform(train[\"House_Ownership\"])","159b2f54":"le_c=preprocessing.LabelEncoder()\ntrain[\"Car_Ownership\"]=le_c.fit_transform(train[\"Car_Ownership\"])","b0413ae9":"train.head()","f95cd610":"train.columns","3a9f41e7":"X=train[['Income', 'Age', 'Experience', 'Married\/Single',\n       'House_Ownership', 'Car_Ownership',\n       'CURRENT_JOB_YRS', 'CURRENT_HOUSE_YRS']]\ny=train['Risk_Flag']","47470430":"train_x, test_x, train_y, test_y=train_test_split(X, y, test_size=0.30, random_state=0)\nprint(train_x.shape)\nprint(test_x.shape)\nprint(train_y.shape)\nprint(test_y.shape)","f879ca53":"model=LogisticRegression().fit(train_x, train_y)\npred=model.predict(test_x)","674b5bc6":"print(classification_report(test_y,pred))","1b4c41d2":"print(accuracy_score(test_y, pred))","5ebea9ae":"test.head()","75948b9a":"le_mst=preprocessing.LabelEncoder()\ntest[\"Married\/Single\"]=le_mst.fit_transform(test[\"Married\/Single\"])\n\nle_ht=preprocessing.LabelEncoder()\ntest[\"House_Ownership\"]=le_ht.fit_transform(test[\"House_Ownership\"])\n\nle_ct=preprocessing.LabelEncoder()\ntest[\"Car_Ownership\"]=le_ct.fit_transform(test[\"Car_Ownership\"])","39446877":"test.head()","6668e187":"test.columns","022da246":"test_y_p=test[['Income', 'Age', 'Experience', 'Married\/Single',\n       'House_Ownership', 'Car_Ownership',\n       'CURRENT_JOB_YRS', 'CURRENT_HOUSE_YRS']]","b00d03b9":"pred_p=model.predict(test_y_p)","80f61d84":"Risk_flagP=pd.DataFrame(pred_p)","91c2799c":"test[\"Risk_FlagP\"]=Risk_flagP","10013407":"test.head()","0b505ee0":"test[\"Married\/Single\"]=le_mst.inverse_transform(test[\"Married\/Single\"])\n\ntest[\"House_Ownership\"]=le_ht.inverse_transform(test[\"House_Ownership\"])\n\ntest[\"Car_Ownership\"]=le_ct.inverse_transform(test[\"Car_Ownership\"])","c3b3f3a2":"test.head()","517cee01":"sub=pd.read_csv(\"\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Sample Prediction Dataset.csv\")\nsub.head()","b9d851b4":"id=test[\"ID\"]\nrisk_flag=test[\"Risk_FlagP\"]\nsubmission=pd.concat([id, risk_flag], axis=1)","d0f30791":"submission.head()","390d6959":"submission.to_csv(\"submission_one\",index=False)","be8379f4":"## Test Data","a15973fd":"## Null check","29869a01":"- Histogram","d98e647b":"## Label Encoding","9cecd00b":"## ","31611447":"- Columns of test data","d9b9790b":"## Logistic Regression","c8b16ed2":"- Adding predicted value to data frame ","becd2fe2":"## Label encoding\n- Test data","a2137124":"- Columns","8af3cd52":"## Importing Libraries","7d7fa74e":"## Classification report","a7ea9287":"- Count plot","bba8aa3c":"## Visualization\n- Pie chart","2e1c9566":"## Splitting of data","f0806a47":"## Reading Data","0c50023c":"## Accuracy score","2351954d":"## Descriptive values","6b0855ca":"## Target variavle","37f07c7b":"## Size of Data","dc90bc0e":"## New traning data","22054e30":"## Prediction \n- on test data","d17dcb10":"- Submission csv","26e4020c":"## Submission CSV","522527b3":"## Label Decoding","afad270d":"- Submission data","49a3e50a":"## New test data"}}