{"cell_type":{"15bb6213":"code","cb8b87de":"code","836aea3d":"code","18cc3023":"code","a6410ea6":"code","3144dd11":"code","3029e7be":"markdown","4616267a":"markdown","920fb029":"markdown","24da068b":"markdown","8a6f377d":"markdown","8f12ff2e":"markdown","5cfdc383":"markdown"},"source":{"15bb6213":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb8b87de":"import matplotlib.pyplot as plt\nimport numpy as np\nusa_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/USA_0101-0703.npy')\nplt.imshow(usa_npy[187]) #July 6th USA satellite image\n","836aea3d":"import matplotlib.pyplot as plt\nimport numpy as np\nusa_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/USA_0101-0703.npy')\ninp=usa_npy[187]\n#count_img=len(usa_npy)\n#height,width=usa_npy[187].shape\n\n# Set missing pixel values as zero\ninp[0:400,0:1500]=0\ninp[0:260,2000:]=0\nplt.imshow(usa_npy[187])\n","18cc3023":"import matplotlib.pyplot as plt\nimport numpy as np\nusa_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/USA_0101-0703.npy')\n#plt.imshow(usa_npy[187])\n\n\n#View Numpy format images\nfig = plt.figure(figsize=(15, 40))  # width, height in inches\nfor i in range(188):\n    sub = fig.add_subplot(24,8, i + 1)\n    usa_npy[i,0:400,0:1500]=0\n    usa_npy[i,0:260,2000:]=0\n    sub.imshow(usa_npy[i],interpolation='nearest')","a6410ea6":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimg=mpimg.imread('..\/input\/moon-phase-calendar-2020\/moon.png')\nplt.figure(figsize=(18, 10))\nimgplot = plt.imshow(img)","3144dd11":"import matplotlib.pyplot as plt\nimport numpy as np\nusa_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/USA_0101-0703.npy')  #Till july6\n\n# Setting missing pixel values as Zero\n\nusa_npy[0:173,0:400,0:1500]=0\nusa_npy[0:173,0:260,2000:]=0\n\n#USA\nMoon_phase1_till_jan25=usa_npy[0:24].mean()\nMoon_phase2_till_feb23=usa_npy[25:53].mean()\nMoon_phase3_till_mar24=usa_npy[54:83].mean()\nMoon_phase4_till_apr23=usa_npy[84:113].mean()\nMoon_phase5_till_may22=usa_npy[114:142].mean()\nMoon_phase6_till_jun21=usa_npy[143:173].mean()\n\n\nme=[Moon_phase1_till_jan25,Moon_phase2_till_feb23,Moon_phase3_till_mar24,Moon_phase4_till_apr23,Moon_phase5_till_may22,Moon_phase6_till_jun21]\nx=['phase1(till jan25)','phase2(till feb23)','phase3(till mar24)','phase4(till apr23)','phase5(till may22)','phase6(till june21)']\nplt.xticks(rotation=45)\nplt.plot(x,me)\nplt.xlabel('Moon_phase')\nplt.ylabel('Pixel mean value')\n","3029e7be":"Above image showing moon Phase calendar for 2020. ","4616267a":"Actual brightness is kept decreasing due to lockdown announcement. \n\nAbove graph certainly correlate with oil price data. \n\n","920fb029":"Lets group the images w.r.t moon phase calendar, To determine the Actual brightness of the image. ","24da068b":"We have removed those missing pixel values from entire USA numpy images. Now lets focus on how to skip moon light intervention. ","8a6f377d":"In above image: Dark yellow portion is missing pixel values. We need to set those pixel values as zero. ","8f12ff2e":"Here we just removed those missing pixel values. \n\n**Follow the same process for entire USA numpy images. **","5cfdc383":"# How to quantify the actual brigtness from night time satellite image. \n\nWe have two bigger challenges: \n\n1. Moon light intervention, \n2. Missing pixel values were painted in red color.\n\n"}}