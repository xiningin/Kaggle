{"cell_type":{"c1d42896":"code","3c14a8f1":"code","6abe6cd4":"code","b0eab16f":"code","cc08a7cd":"code","6fee7bfb":"code","4b8911a2":"code","ffb98fd8":"code","5b574e11":"code","cb78632f":"code","a95657e7":"code","fb3fb1e5":"code","d8408c33":"code","bd1eb18c":"code","d2465678":"code","0df100d5":"code","370c2ccc":"code","6c7ec743":"code","7710187e":"code","24697f91":"code","296d339b":"code","30b00538":"code","f6c8b1c8":"code","14c413c1":"code","d4bb6a04":"code","a2f4a337":"code","d939dfc2":"code","88b4f0d1":"code","629fc7de":"code","87327199":"code","fa8c8c08":"code","9212d2d7":"code","999ae3b5":"code","1f818baf":"code","64dab295":"code","f439cc12":"code","f83ec8a2":"code","f8c847a8":"code","ef4a7f2c":"code","b9c08386":"code","6075c047":"code","42ccb147":"code","4e777b87":"code","b14f0564":"code","ef8b7d1f":"code","84ef859f":"code","8f875a2c":"code","a18f3570":"code","cc025800":"code","7171f4dd":"code","f5fb091e":"code","6b986dcc":"code","1aeb61b1":"code","331f23ba":"code","625f25ff":"code","53f257f7":"code","96e3ddf0":"code","334e3136":"code","dc49d3c6":"code","02093194":"code","33447762":"code","4b9224b0":"code","92f7d313":"code","aa378230":"code","6a700b4a":"code","075fc23b":"code","7ab09a78":"code","9e07098e":"code","e46c409a":"code","563cf1a3":"code","50f6b4e2":"code","5ac8b856":"code","e9c384ec":"code","7e2d849d":"code","13298047":"code","ac741473":"code","ff4e9494":"code","73f56847":"code","a39eba81":"code","06ded600":"code","88b9232d":"code","a2b9fbcc":"code","1e39e680":"code","5d9af427":"code","0128f42c":"code","93c53d4e":"code","1bdfd496":"code","169e2884":"code","bf27f0bd":"code","ae0cd1a4":"code","31d21439":"code","2f8204fd":"code","b1253aeb":"code","a2d309ea":"code","057dd378":"code","0e25799e":"code","81d149a7":"code","1a77e05c":"code","1fb99c20":"code","e55b321d":"code","840e0d78":"code","8cde6324":"code","2e9c8660":"code","01287f6f":"code","1ade4cdd":"code","606fae9b":"code","69befc27":"code","675e92ec":"code","ba36827a":"code","4ef4fcf6":"code","2b9d2998":"code","5d691961":"code","eb1c828f":"code","0b5b5b9f":"code","aab99d0d":"code","33197931":"code","98ab3523":"code","9df24eb5":"code","e43f50be":"code","b031322d":"code","ccca073d":"code","072727af":"code","4c6bd988":"code","63049878":"code","62c16f46":"code","d021c1fa":"code","1a934a0d":"code","733a0cac":"code","cd510c80":"code","9fcd6d42":"code","17b91524":"code","18953d60":"code","a2bad752":"code","1f25dd28":"code","368990bf":"code","b8478761":"code","43541b0c":"code","d55e4e1f":"code","f93222b9":"code","27c77c51":"code","98e91de2":"code","087191b6":"code","ac61b617":"markdown","66f6af09":"markdown","6c274e97":"markdown","6f66092f":"markdown","c0b0b1fc":"markdown","1420c329":"markdown","2e96a7b3":"markdown","f17f4b78":"markdown","ab52b8f9":"markdown","13bec87e":"markdown","f34e3b25":"markdown","1dadf2a1":"markdown","c5aa0f62":"markdown","a20ff059":"markdown","a4f25c7f":"markdown","62e2e9c0":"markdown","55bd5d40":"markdown","c8a04877":"markdown","afcd4071":"markdown","8ade16b0":"markdown","d63023d3":"markdown","ad7d2b8f":"markdown","2c837bc4":"markdown","1df3003a":"markdown","57c73f5c":"markdown","586e826a":"markdown","50a0fba3":"markdown","3bfacc9a":"markdown","e69bbd98":"markdown"},"source":{"c1d42896":"import datetime\n# Last execution:\nprint(f'Last execution: {datetime.datetime.now().strftime(\"%d\/%m\/%Y %H:%M:%S\")}')\n","3c14a8f1":"import numpy as np\nimport pandas as pd\nimport itertools    \nimport IPython\nfrom datetime import timedelta\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick\nimport matplotlib\nimport bokeh \nfrom bokeh.layouts import gridplot\nfrom bokeh.plotting import figure, show, output_file\nfrom bokeh.layouts import row, column\nfrom bokeh.resources import INLINE\nfrom bokeh.io import output_notebook\nfrom bokeh.models import Span\nfrom bokeh.io import output_notebook\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.graph_objs import *\nplt.style.use('seaborn-darkgrid')\noutput_notebook(resources=INLINE)","6abe6cd4":"url_confirmados = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv\"\nurl_mortes = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv\"\nurl_recuperados = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv\"\ndf_confirmados = pd.read_csv(url_confirmados)\ndf_mortes = pd.read_csv(url_mortes)\ndf_recuperados = pd.read_csv(url_recuperados)","b0eab16f":"df_confirmados.head()","cc08a7cd":"# split dataframe in locals dataframe\n\ndf_confirmados_brasil = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Brazil'].copy()\ndf_confirmados_italia = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Italy'].copy()\ndf_confirmados_eua = df_confirmados.loc[df_confirmados['Country\/Region'] == 'US'].copy()\ndf_confirmados_suecia = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Sweden'].copy()\n#-----------------------------------------------------------------------------------------------\ndf_mortes_brasil = df_mortes.loc[df_mortes['Country\/Region'] == 'Brazil'].copy()\ndf_mortes_italia = df_mortes.loc[df_mortes['Country\/Region'] == 'Italy'].copy()\ndf_mortes_eua = df_mortes.loc[df_mortes['Country\/Region'] == 'US'].copy()\ndf_mortes_suecia = df_mortes.loc[df_mortes['Country\/Region'] == 'Sweden'].copy()\n#-----------------------------------------------------------------------------------------------\ndf_recuperados_brasil = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Brazil'].copy()\ndf_recuperados_italia = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Italy'].copy()\ndf_recuperados_eua = df_recuperados.loc[df_recuperados['Country\/Region'] == 'US'].copy()\ndf_recuperados_suecia = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Sweden'].copy()","6fee7bfb":"df_confirmados_brasil.head()","4b8911a2":"df_confirmados_italia.head()","ffb98fd8":"df_confirmados_eua.head()","5b574e11":"df_confirmados_suecia.head()","cb78632f":"# Making all dataframes started 1 day after 1\u00ba case of covid\ndf_confirmados_brasil = df_confirmados_brasil.iloc[:,39:]\ndf_confirmados_eua = df_confirmados_eua.iloc[:,4:]\ndf_confirmados_italia = df_confirmados_italia.iloc[:,12:]\ndf_confirmados_suecia = df_confirmados_suecia.iloc[:,13:]\n# -------------------------------------------------------------\ndf_mortes_brasil = df_mortes_brasil.iloc[:,39:]\ndf_mortes_eua = df_mortes_eua.iloc[:,4:]\ndf_mortes_italia = df_mortes_italia.iloc[:,12:]\ndf_mortes_suecia = df_mortes_suecia.iloc[:,13:]\n# -------------------------------------------------------------\ndf_recuperados_brasil = df_recuperados_brasil.iloc[:,39:]\ndf_recuperados_eua = df_recuperados_eua.iloc[:,4:]\ndf_recuperados_italia = df_recuperados_italia.iloc[:,12:]\ndf_recuperados_suecia = df_recuperados_suecia.iloc[:,13:]","a95657e7":"# Geting the index columns\nindex_brasil = list(df_confirmados_brasil.columns.values) \nindex_italia = list(df_confirmados_italia.columns.values) \nindex_eua = list(df_confirmados_eua.columns.values) \nindex_suecia = list(df_confirmados_suecia.columns.values) ","fb3fb1e5":"# geting  values \u200b\u200bof all brazil df to assist in the construction of graphics:\ncasos_brasil = []\nmortes_brasil = []\nrecuperados_brasil = []\nfor i in index_brasil:\n    confirmados_brasil = df_confirmados_brasil[i].sum()\n    casos_brasil.append(confirmados_brasil)\n    \n    mortos_brasil = df_mortes_brasil[i].sum()\n    mortes_brasil.append(mortos_brasil)\n    \n    recupera_brasil = df_recuperados_brasil[i].sum()\n    recuperados_brasil.append(recupera_brasil)","d8408c33":"# making the same for us\ncasos_eua = []\nmortes_eua = []\nrecuperados_eua = []\n\nfor i in index_eua:\n    confirmados_eua = df_confirmados_eua[i].sum()\n    casos_eua.append(confirmados_eua)\n    \n    mortos_eua = df_mortes_eua[i].sum()\n    mortes_eua.append(mortos_eua)\n\n    recupera_eua = df_recuperados_eua[i].sum()\n    recuperados_eua.append(recupera_eua)\n","bd1eb18c":"# making the same for Italy\ncasos_italia = []\nmortes_italia = []\nrecuperados_italia = []\n\nfor i in index_italia:\n\n    confirmados_italia = df_confirmados_italia[i].sum()\n    casos_italia.append(confirmados_italia)\n    \n    mortos_italia = df_mortes_italia[i].sum()\n    mortes_italia.append(mortos_italia)\n    \n    recupera_italia = df_recuperados_italia[i].sum()\n    recuperados_italia.append(recupera_italia)\n   \n    \n    ","d2465678":"# making the same for Sweden\ncasos_suecia  = []\nmortes_suecia  = []\nrecuperados_suecia  = []\nfor i in index_suecia:\n    confirmados_suecia = df_confirmados_suecia[i].sum()\n    casos_suecia.append(confirmados_suecia)\n    \n    mortos_suecia = df_mortes_suecia[i].sum()\n    mortes_suecia.append(mortos_suecia)\n\n    recupera_suecia = df_recuperados_suecia[i].sum()\n    recuperados_suecia.append(recupera_suecia)","0df100d5":"# transform dates into a numpy array of calendar days:\ndias_brasil = np.array([i for i in range(len(index_brasil))]).reshape(-1, 1)\ndias_eua = np.array([i for i in range(len(index_eua))]).reshape(-1, 1)\ndias_italia = np.array([i for i in range(len(index_italia))]).reshape(-1, 1)\ndias_suecia = np.array([i for i in range(len(index_suecia))]).reshape(-1, 1)","370c2ccc":"futuro = 40 # this variable defines how many days ahead we want to predict.\n\n# making future dates in a calendar day numpy array\nfuturo_brasil = np.array([i for i in range(len(index_brasil) + futuro)]).reshape(-1, 1)\nfuturo_eua = np.array([i for i in range(len(index_eua) + futuro)]).reshape(-1, 1)\nfuturo_italia = np.array([i for i in range(len(index_italia) + futuro)]).reshape(-1, 1)\nfuturo_suecia = np.array([i for i in range(len(index_suecia) + futuro)]).reshape(-1, 1)","6c7ec743":"# transforming future calendar day in mm\/dd\/yy format\nstart_br = '2\/26\/20'\nstart_br = datetime.datetime.strptime(start_br,\"%m\/%d\/%y\")\ndatas_futuras_br = []\nfor i in range(len(futuro_brasil)):\n    datas_futuras_br.append((start_br + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_us = '1\/22\/20'\nstart_us = datetime.datetime.strptime(start_us,\"%m\/%d\/%y\")\ndatas_futuras_us = []\nfor i in range(len(futuro_eua)):\n    datas_futuras_us.append((start_us + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_it = '1\/30\/20'\nstart_it = datetime.datetime.strptime(start_it,\"%m\/%d\/%y\")\ndatas_futuras_it = []\nfor i in range(len(futuro_italia)):\n    datas_futuras_it.append((start_it + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_su = '1\/31\/20'\nstart_su = datetime.datetime.strptime(start_su,\"%m\/%d\/%y\")\ndatas_futuras_su = []\nfor i in range(len(futuro_suecia)):\n    datas_futuras_su.append((start_su + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))","7710187e":"# transposing all dataframes\ndf_confirmados_brasil = df_confirmados_brasil.T\ndf_confirmados_brasil['dates'] = index_brasil\n\ndf_mortes_brasil = df_mortes_brasil.T\ndf_mortes_brasil['dates'] = index_brasil\n\ndf_recuperados_brasil = df_recuperados_brasil.T\ndf_recuperados_brasil['dates'] = index_brasil\n\nnew_index_br = [x for x in range(len(index_brasil))]\n#----------------------------------------------------\ndf_confirmados_eua = df_confirmados_eua.T\ndf_confirmados_eua['dates'] = index_eua\n\ndf_mortes_eua = df_mortes_eua.T\ndf_mortes_eua['dates'] = index_eua\n\ndf_recuperados_eua = df_recuperados_eua.T\ndf_recuperados_eua['dates'] = index_eua\n\nnew_index_eua = [x for x in range(len(index_eua))]\n#----------------------------------------------------\ndf_confirmados_italia = df_confirmados_italia.T\ndf_confirmados_italia['dates'] = index_italia\n\ndf_mortes_italia = df_mortes_italia.T\ndf_mortes_italia['dates'] = index_italia\n\ndf_recuperados_italia = df_recuperados_italia.T\ndf_recuperados_italia['dates'] = index_italia\n\nnew_index_it = [x for x in range(len(index_italia))]\n#----------------------------------------------------\ndf_confirmados_suecia = df_confirmados_suecia.T\ndf_confirmados_suecia['dates'] = index_suecia\n\ndf_mortes_suecia = df_mortes_suecia.T\ndf_mortes_suecia['dates'] = index_suecia\n\ndf_recuperados_suecia = df_recuperados_suecia.T\ndf_recuperados_suecia['dates'] = index_suecia\nnew_index_su = [x for x in range(len(index_suecia))]\n","24697f91":"df_confirmados_brasil.head()\n","296d339b":"# as we have seen the indexes are wrong, we will fix them now.\n\ndf_confirmados_brasil['index'] = new_index_br\ndf_confirmados_brasil = df_confirmados_brasil.set_index('index')\ndf_confirmados_brasil.rename(columns={28:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_brasil.index.name = None\ndf_confirmados_brasil['dates'] = dias_brasil\n\ndf_mortes_brasil['index'] = new_index_br\ndf_mortes_brasil = df_mortes_brasil.set_index('index')\ndf_mortes_brasil.rename(columns={28:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_brasil.index.name = None\ndf_mortes_brasil['dates'] = dias_brasil\n\ndf_recuperados_brasil['index'] = new_index_br\ndf_recuperados_brasil = df_recuperados_brasil.set_index('index')\ndf_recuperados_brasil.rename(columns={29:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_brasil.index.name = None\ndf_recuperados_brasil['dates'] = dias_brasil\n\n#------------------------------------------------\ndf_confirmados_eua['index'] = new_index_eua\ndf_confirmados_eua = df_confirmados_eua.set_index('index')\ndf_confirmados_eua.rename(columns={225:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_eua.index.name = None\ndf_confirmados_eua['dates'] = dias_eua\n\ndf_mortes_eua['index'] = new_index_eua\ndf_mortes_eua = df_mortes_eua.set_index('index')\ndf_mortes_eua.rename(columns={225:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_eua.index.name = None\ndf_mortes_eua['dates'] = dias_eua\n\ndf_recuperados_eua['index'] = new_index_eua\ndf_recuperados_eua = df_recuperados_eua.set_index('index')\ndf_recuperados_eua.rename(columns={225:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_eua.index.name = None\ndf_recuperados_eua['dates'] = dias_eua\n#------------------------------------------------\ndf_confirmados_italia['index'] = new_index_it\ndf_confirmados_italia = df_confirmados_italia.set_index('index')\ndf_confirmados_italia.rename(columns={137:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_italia.index.name = None\ndf_confirmados_italia['dates'] = dias_italia\n\ndf_mortes_italia['index'] = new_index_it\ndf_mortes_italia = df_mortes_italia.set_index('index')\ndf_mortes_italia.rename(columns={137:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_italia.index.name = None\ndf_mortes_italia['dates'] = dias_italia\n\ndf_recuperados_italia['index'] = new_index_it\ndf_recuperados_italia = df_recuperados_italia.set_index('index')\ndf_recuperados_italia.rename(columns={131:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_italia.index.name = None\ndf_recuperados_italia['dates'] = dias_italia\n#------------------------------------------------\ndf_confirmados_suecia['index'] = new_index_su\ndf_confirmados_suecia = df_confirmados_suecia.set_index('index')\ndf_confirmados_suecia.rename(columns={205:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_suecia.index.name = None\ndf_confirmados_suecia['dates'] = dias_suecia\n\ndf_mortes_suecia['index'] = new_index_su\ndf_mortes_suecia = df_mortes_suecia.set_index('index')\ndf_mortes_suecia.rename(columns={205:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_suecia.index.name = None\ndf_mortes_suecia['dates'] = dias_suecia\n\ndf_recuperados_suecia['index'] = new_index_su\ndf_recuperados_suecia = df_recuperados_suecia.set_index('index')\ndf_recuperados_suecia.rename(columns={203:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_suecia.index.name = None\ndf_recuperados_suecia['dates'] = dias_suecia","30b00538":"df_confirmados_brasil.head()","f6c8b1c8":"df_mortes_eua.head()","14c413c1":"df_recuperados_suecia.head()","d4bb6a04":"df_mortes_italia.head()","a2f4a337":"today = datetime.datetime.now() - timedelta(days=1)\ntoday = today.strftime(\"%d\/%m\/%y\")\npop_eua = 331002651\npop_br = 212559417\npop_it = 60461826\npop_sw = 10099265","d939dfc2":"fig = plt.figure(figsize=(12, 7))\ncountry = ['US', 'Italy', 'Brazil', 'Sweden']\nnumbers = [confirmados_eua,confirmados_italia,confirmados_brasil,confirmados_suecia]\nrects = plt.bar(country,numbers, align='center', color=['red', 'green', 'blue', 'yellow'])\n\nax = rects.patches\nfor rect, label in zip(ax, numbers):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \n\nplt.ylabel('Number of cases per country', size = 20)\nplt.title('NUMBER OF COVID-19 CASES, IN ' + today, size=20)\nplt.show()","88b4f0d1":"print('comparison of cases in the 4 countries')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2200988\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2200988\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","629fc7de":"fig = plt.figure(figsize=(12, 7))\npaises = ['US', 'Italy', 'Brazil', 'Sweden']\nnumeros = [(confirmados_eua\/pop_eua)*1000000, (confirmados_italia\/pop_it) *1000000, \n           (confirmados_brasil\/pop_br)*1000000, (confirmados_suecia\/pop_sw)*1000000]\nnumeros = [round(num, 0) for num in numeros]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Number of cases', size = 20)\nplt.title('Number of cases per million of pop in ' + today, size=20)\nplt.show()","87327199":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, color='blue')\nplt.plot(dias_eua, casos_eua, color='red')\nplt.plot(dias_italia, casos_italia, color='green')\nplt.plot(dias_suecia, casos_suecia, color='yellow')\n\nplt.title('COMPARISON OF CASE PROGRESSION IN DIFFERENT COUNTRIES', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","fa8c8c08":"conf_eua1, conf_eua2 = itertools.tee(iter(list(casos_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(casos_italia)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(casos_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(casos_suecia)))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\n\n\n\nantes_30_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 30:\n        antes_30_eua.append(index)\neua_day = [i for i in range(len(antes_30_eua))]\n\nantes_30_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 30:\n        antes_30_br.append(index)\nbr_day = [i for i in range(len(antes_30_br))]\n\nantes_30_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 30:\n        antes_30_su.append(index)\nsu_day = [i for i in range(len(antes_30_su))]\n\nantes_30_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 30:\n        antes_30_it.append(index)\nit_day = [i for i in range(len(antes_30_it))]\n","9212d2d7":"p1 = figure(plot_width=800, plot_height=550, title=\"Logarithmic covid-19 trajectory\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days after increasing 30 daily cases'\np1.yaxis.axis_label = 'Progression of cases (logarithmic scale)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(br_day, casos_brasil[18:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(br_day[-1], casos_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, casos_eua[41:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(eua_day[-1], casos_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, casos_suecia[35:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(su_day[-1], casos_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, casos_italia[24:], color='#3EC358', \n        legend_label='Ialy', line_width=1)\np1.circle(it_day[-1], casos_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","999ae3b5":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o', color='blue')\nplt.plot(dias_suecia, casos_suecia, marker='o', color='yellow')\n\n\nplt.title('COMPARISON OF CASE PROGRESSION BRAZIL VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Brazil', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","1f818baf":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o', color='blue')\nplt.plot(dias_italia, casos_italia, marker='o', color='green')\n\nplt.title('COMPARISON OF CASE PROGRESSION BRAZIL VS Italy', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Brazil', 'Italy'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","64dab295":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o', color='blue')\nplt.plot(dias_eua, casos_eua, marker='o', color='red')\n\nplt.title('COMPARISON OF CASE PROGRESSION BRAZIL VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Brazil', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f439cc12":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, casos_italia, marker='o', color='green')\nplt.plot(dias_suecia, casos_suecia, marker='o', color='yellow')\n\n\nplt.title('COMPARISON OF CASE PROGRESSION ITALY VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f83ec8a2":"plt.figure(figsize=(20, 9))\nplt.plot(dias_eua, casos_eua, marker='o', color='red')\nplt.plot(dias_suecia, casos_suecia, marker='o', color='yellow')\n\n\nplt.title('COMPARISON OF CASE PROGRESSION US VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['US', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f8c847a8":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, casos_italia, marker='o', color='green')\nplt.plot(dias_eua, casos_eua, marker='o', color='red')\n\n\nplt.title('COMPARISON OF CASE PROGRESSION ITALY VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Italy', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ef4a7f2c":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in casos_eua:\n  porc = (i \/ 333545145)*100\n  eua_porc.append(porc)\nfor i in casos_brasil:\n  porc = (i \/ 217089238)*100\n  br_porc.append(porc)\nfor i in casos_italia:\n  porc = (i \/ 60017348)*100\n  it_porc.append(porc)\nfor i in casos_suecia:\n  porc = (i \/ 10174790)*100\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, br_porc, color='blue')\nplt.plot(dias_eua, eua_porc, color='red')\nplt.plot(dias_italia, it_porc, color='green')\nplt.plot(dias_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESSION IN RELATION TO THE POPULATION', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('% of cases in relation to population', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","b9c08386":"conf_eua1, conf_eua2 = itertools.tee(iter(list(casos_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(casos_italia)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(casos_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(casos_suecia)))\nnext(conf_su2)\ndifference_us =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndifference_italy =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndifference_brazil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndifference_sweden =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndifference_us_mean = np.array(difference_us).mean()\ndifference_italy_mean  = np.array(difference_italy).mean()\ndifference_brazil_mean = np.array(difference_brazil).mean()\ndifference_sweden_mean = np.array(difference_sweden).mean()\n\n\ncountry = ['US', 'Italy', 'Brazil', 'Sweden']\nnumbers = [difference_us_mean, difference_italy_mean, difference_brazil_mean, difference_sweden_mean]\nnumbers = [round(m, 2) for m in numbers]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(country, numbers, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numbers):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Average Daily Increase', size = 20)\nplt.title('Average Daily increase in covid-19 confirmation', size=20)\nplt.show()","6075c047":"ax = plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil[1:], difference_brazil, color='blue')\nplt.plot(dias_eua[1:], difference_us, color='red')\nplt.plot(dias_italia[1:], difference_italy, color='green')\nplt.plot(dias_suecia[1:], difference_sweden, color='yellow')\n\nplt.title('Daily Increase', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Cases increase', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","42ccb147":"diferenca_eua =[int(r) - int(p) for p,r in zip(casos_eua, mortes_eua)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(casos_italia, mortes_italia)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(casos_brasil, mortes_brasil)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(casos_suecia, mortes_suecia)]\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(diferenca_eua, recuperados_eua)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(diferenca_italia, recuperados_italia)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(diferenca_brasil, recuperados_brasil)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(diferenca_suecia, recuperados_suecia)]\n\nantes_30_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 30:\n        antes_30_eua.append(index)\neua_day = [i for i in range(len(antes_30_eua))]\n\nantes_30_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 30:\n        antes_30_br.append(index)\nbr_day = [i for i in range(len(antes_30_br))]\n\nantes_30_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 30:\n        antes_30_su.append(index)\nsu_day = [i for i in range(len(antes_30_su))]\n\nantes_30_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 30:\n        antes_30_it.append(index)\nit_day = [i for i in range(len(antes_30_it))]","4e777b87":"p1 = figure(plot_width=800, plot_height=550, title=\"Active cases (Total - (recovered + killed))\",\n             x_range=(0, 100))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days since covid start'\np1.yaxis.axis_label = 'Active cases'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day, diferenca_brasil[13:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(br_day[-1], diferenca_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, diferenca_eua[33:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(eua_day[-1], diferenca_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, diferenca_suecia[33:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(su_day[-1], diferenca_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, diferenca_italia[23:], color='#3EC358', \n        legend_label='Italy', line_width=1)\np1.circle(it_day[-1], diferenca_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","b14f0564":"p1 = figure(plot_width=800, plot_height=550, title=\"Active cases (Total - (recovered + killed))\",\n             x_range=(0, 100), y_axis_type='log')\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days since covid start'\np1.yaxis.axis_label = 'Active cases(LOG)'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day, diferenca_brasil[13:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(br_day[-1], diferenca_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, diferenca_eua[33:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(eua_day[-1], diferenca_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, diferenca_suecia[33:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(su_day[-1], diferenca_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, diferenca_italia[23:], color='#3EC358', \n        legend_label='Italy', line_width=1)\np1.circle(it_day[-1], diferenca_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","ef8b7d1f":"fig = plt.figure(figsize=(12, 7))\ncountry = ['US', 'Italy', 'Brazil', 'Sweden']\nnumbers = [mortos_eua,mortos_italia,mortos_brasil, mortos_suecia]\nrects = plt.bar(country,numbers, align='center', color=['red', 'green', 'blue', 'yellow'])\nax = rects.patches\nfor rect, label in zip(ax, numbers):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height , label,\n            ha='center', va='bottom', fontsize=15)\n\nplt.ylabel('Numero of deads', size = 20)\nplt.title('NUMBER OF COVID-19 DEATHS IN ' + today, size=20)\nplt.show()","84ef859f":"fig = plt.figure(figsize=(12, 7))\ncountry = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumbers = [(mortos_eua\/confirmados_eua)*100, (mortos_italia\/confirmados_italia) *100, \n           (mortos_brasil\/confirmados_brasil)*100, (mortos_suecia\/confirmados_suecia)*100]\nnumbers = [round(num, 2) for num in numbers]\nrects = plt.bar(country,numbers, align='center', color=['red', 'green', 'blue', 'yellow'])\n\nax = rects.patches\nfor rect, label in zip(ax, numbers):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height , label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('% Lethality', size = 20)\nplt.title('LETHALY in % OF COVID in ' + today, size=20)\nplt.show()","8f875a2c":"plt.figure(figsize=(20, 9))\nmort_br = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_brasil, casos_brasil)]\nmort_eua = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_eua, casos_eua)]\nmort_it = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_italia, casos_italia)]\nmort_su = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_suecia, casos_suecia)]\n\n\nplt.plot(dias_brasil, mort_br, color='blue')\nplt.plot(dias_eua, mort_eua, color='red')\nplt.plot(dias_italia, mort_it, color='green')\nplt.plot(dias_suecia, mort_su, color='yellow')\n\n\nplt.title('Evolution of the mortality rate', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('mortality rate (%)', size = 30)\nplt.legend(['Brazil', 'US','Italy','Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","a18f3570":"print('death comparasion:')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2201203\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2201203\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","cc025800":"fig = plt.figure(figsize=(12, 7))\npaises = ['US', 'Italy', 'Brazil', 'Sweden']\nnumeros = [(mortos_eua\/pop_eua)*1000000, (mortos_italia\/pop_it) *1000000, \n           (mortos_brasil\/pop_br)*1000000, (mortos_suecia\/pop_sw)*1000000]\nnumeros = [round(num, 0) for num in numeros]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Number of deaths', size = 20)\nplt.title('number of deaths per million in ' + today, size=20)\nplt.show()","7171f4dd":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, mortes_brasil,color='blue')\nplt.plot(dias_eua, mortes_eua, color='red')\nplt.plot(dias_italia, mortes_italia, color='green')\nplt.plot(dias_suecia, mortes_suecia, color='yellow')\n\nplt.title('COMPARISON OF DEATH PROGRESSION IN DIFFERENT COUNTRIES', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['Brazil', 'US', 'Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f5fb091e":"conf_eua1, conf_eua2 = itertools.tee(iter(list(mortes_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(mortes_eua)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(mortes_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(mortes_suecia)))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\n\n\n\nantes_5_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 5:\n        antes_5_eua.append(index)\neua_day = [i for i in range(len(antes_5_eua))]\n\nantes_5_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 5:\n        antes_5_br.append(index)\nbr_day = [i for i in range(len(antes_5_br))]\n\nantes_5_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 5:\n        antes_5_su.append(index)\nsu_day = [i for i in range(len(antes_5_su))]\n\nantes_5_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 5:\n        antes_5_it.append(index)\nit_day = [i for i in range(len(antes_5_it))]\n\n","6b986dcc":"p1 = figure(plot_width=800, plot_height=550, title=\"Death trajectory of covid-19 logarithmic\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days after an increase of 5 daily deaths'\np1.yaxis.axis_label = 'Progression deaths (logarithmic scale)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(br_day, mortes_brasil[24:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(br_day[-1], mortes_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, mortes_eua[47:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(eua_day[-1], mortes_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, mortes_suecia[54:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(su_day[-1], mortes_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, mortes_italia[39:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], mortes_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","1aeb61b1":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, mortes_brasil, marker='o',  color='blue')\nplt.plot(dias_suecia, mortes_suecia, marker='o',  color='yellow')\n\n\nplt.title('COMPARISON OF DEATH PROGRESSION BRAZIL VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['Brazil', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","331f23ba":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, mortes_italia, marker='o',  color='green')\nplt.plot(dias_eua, mortes_eua, marker='o',  color='red')\n\nplt.title('COMPARISON OF DEATH PROGRESSION ITALY VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['Italy', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","625f25ff":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in mortes_eua:\n  porc = (i \/ 333545145)*100\n  eua_porc.append(porc)\nfor i in mortes_brasil:\n  porc = (i \/ 217089238)*100\n  br_porc.append(porc)\nfor i in mortes_italia:\n  porc = (i \/ 60017348)*100\n  it_porc.append(porc)\nfor i in mortes_suecia:\n  porc = (i \/ 10174790)*100\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, br_porc, color='blue')\nplt.plot(dias_eua, eua_porc, color='red')\nplt.plot(dias_italia, it_porc, color='green')\nplt.plot(dias_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESSION OF DEATHS IN RELATION TO POPULATION', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('% of deaths in relation to the population', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","53f257f7":"conf_eua1, conf_eua2 = itertools.tee(iter(list(mortes_eua[38:])))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(mortes_italia[22:])))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(mortes_brasil[20:])))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(mortes_suecia[40:])))\nnext(conf_su2)\ndifference_us =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndifference_italy =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndifference_brazil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndifference_sweden =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndifference_us_mean = np.array(difference_us).mean()\ndifference_italy_mean = np.array(difference_italy).mean()\ndifference_brazil_mean = np.array(difference_brazil).mean()\ndifference_sweden_mean = np.array(difference_sweden).mean()\n\ncountry = ['US', 'Italy', 'Brazil', 'Sweden']\nnumbers = [difference_us_mean, difference_italy_mean, difference_brazil_mean, difference_sweden_mean]\nnumbers = [round(m, 2) for m in numbers]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(country, numbers, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numbers):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Average Deaths Daily Increase', size = 20)\nplt.title('Average Daily increase of Deaths', size=20)\nplt.show()","96e3ddf0":"ax = plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil[21:], difference_brazil, color='blue')\nplt.plot(dias_eua[39:], difference_us, color='red')\nplt.plot(dias_italia[23:], difference_italy, color='green')\nplt.plot(dias_suecia[41:], difference_sweden, color='yellow')\n\nplt.title('Dayly deaths increase', size=30)\nplt.xlabel('days since covid started', size = 30)\nplt.ylabel('Deaths increase', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","334e3136":"#@markdown Very large code, two clicks to open it\n#@markdown ---\nconf_eua1, conf_eua2 = itertools.tee(iter(mortes_eua))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(mortes_italia))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(mortes_brasil))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(mortes_suecia))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1,\n                                            conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1\n                                              ,conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1,\n                                              conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1,\n                                              conf_su2)]\n\ndepois_5_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 5:\n        depois_5_eua.append(index)\neua_day = [i for i in range(len(depois_5_eua))]\n\ndepois_5_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 5:\n        depois_5_br.append(index)\nbr_day = [i for i in range(len(depois_5_br))]\n\ndepois_5_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 5:\n        depois_5_su.append(index)\nsu_day = [i for i in range(len(depois_5_su))]\n\ndepois_5_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 5:\n        depois_5_it.append(index)\nit_day = [i for i in range(len(depois_5_it))]\n\ndef moving_average(a, n=7) :\n    ret = np.cumsum(a, dtype=float)\n    ret[n:] = ret[n:] - ret[:-n]\n    return ret[n - 1:] \/ n\nmoving_eua = moving_average(diferenca_eua[47:])\nmoving_br = moving_average(diferenca_brasil[24:])\nmoving_it = moving_average(diferenca_italia[29:])\nmoving_su = moving_average(diferenca_suecia[52:])","dc49d3c6":"p1 = figure(plot_width=800, plot_height=550, title=\"Deaths trajectory(LOG)\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days since 5 death daly increase'\np1.yaxis.axis_label = 'Deaths'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day[7:], moving_br, color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(br_day[-1], moving_br[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day[7:], moving_eua, color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(eua_day[-1], moving_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day[5:], moving_su, color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(su_day[-1], moving_su[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day[6:], moving_it, color='#3EC358', \n        legend_label='Italy', line_width=1)\np1.circle(it_day[-1], moving_it[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","02093194":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Cases and deaths in brazil in \" + today\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Cases'\n           , x=index_brasil\n           , y=casos_brasil),\n    \n    go.Bar(name='Deaths'\n           , x=index_brasil\n           , y=mortes_brasil\n           , text= mortes_brasil\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\nfig.show()\n","33447762":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Cases and deaths in US in \" + today\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Cases'\n           , x=index_eua\n           , y=casos_eua),\n    \n    go.Bar(name='Deaths'\n           , x=index_eua\n           , y=mortes_eua\n           , text= mortes_eua\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","4b9224b0":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Cases and deaths Italy in \" + today\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Cases'\n           , x=index_italia\n           , y=casos_italia),\n    \n    go.Bar(name='Deaths'\n           , x=index_italia\n           , y=mortes_italia\n           , text= mortes_italia\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","92f7d313":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Cases and death in Sweden in \" + today\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Cases'\n           , x=index_suecia\n           , y=casos_suecia),\n    \n    go.Bar(name='Deaths'\n           , x=index_suecia\n           , y=mortes_suecia\n           , text= mortes_suecia\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","aa378230":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, recuperados_brasil, marker='o',  color='green')\nplt.plot(dias_brasil, mortes_brasil, marker='o',  color='red')\n\n\nplt.title('COMPARISON OF RECOVERED VS DEATHS BRAZIL', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Recovered', 'Deads'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","6a700b4a":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, recuperados_italia, marker='o',  color='green')\nplt.plot(dias_italia, mortes_italia, marker='o',  color='red')\n\n\nplt.title('COMPARISON OF RECOVERED VS DEATHS ITALY', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Recovered', 'Deads'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","075fc23b":"plt.figure(figsize=(20, 9))\nplt.plot(dias_eua, recuperados_eua, marker='o',  color='green')\nplt.plot(dias_eua, mortes_eua, marker='o',  color='red')\n\n\n\nplt.title('COMPARISON OF RECOVERED VS DEATHS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Recovered', 'Deads'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","7ab09a78":"plt.figure(figsize=(20, 9))\nplt.plot(dias_suecia, recuperados_suecia, marker='o',  color='green')\nplt.plot(dias_suecia, mortes_suecia, marker='o',  color='red')\n\n\n\nplt.title('COMPARISON OF RECOVERED VS DEATHS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['Recovered', 'Deads'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","9e07098e":"#separating the target (value to be forecasted) from the dates\ntarget_confirmado_br = df_confirmados_brasil['cases'].copy()\ndf_confirmados_brasil.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_br = df_mortes_brasil['deaths'].copy()\ndf_mortes_brasil.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_br = df_recuperados_brasil['recovery']\ndf_recuperados_brasil.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_eua = df_confirmados_eua['cases'].copy()\ndf_confirmados_eua.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_eua = df_mortes_eua['deaths'].copy()\ndf_mortes_eua.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_eua = df_recuperados_eua['recovery']\ndf_recuperados_eua.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_italia = df_confirmados_italia['cases'].copy()\ndf_confirmados_italia.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_italia = df_mortes_italia['deaths'].copy()\ndf_mortes_italia.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_italia = df_recuperados_italia['recovery']\ndf_recuperados_italia.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_suecia = df_confirmados_suecia['cases'].copy()\ndf_confirmados_suecia.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_suecia = df_mortes_suecia['deaths'].copy()\ndf_mortes_suecia.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_suecia = df_recuperados_suecia['recovery']\ndf_recuperados_suecia.drop('recovery', axis = 1, inplace= True)","e46c409a":"# Start from Brazil","563cf1a3":"#Cases Brazil\nX_train, X_test, y_train, y_test = train_test_split(df_confirmados_brasil, target_confirmado_br, test_size=0.1, random_state=42)\npoly = PolynomialFeatures(degree=4, include_bias=False)\nX_poly = poly.fit_transform(X_train)\nsvm = LinearRegression()\nprint(\"fitting..\")\nsvm.fit(X_poly,y_train)","50f6b4e2":"pred_caso_br = svm.predict(poly.fit_transform(futuro_brasil))","5ac8b856":"plt.figure(figsize=(20, 12))\nplt.plot(dias_brasil, casos_brasil, marker='x')\nplt.plot(futuro_brasil[0:len(dias_brasil)],pred_caso_br[0:len(casos_brasil)], linestyle = 'dashed', color='purple')\nplt.title('BRAZIL COMPARISON CONFIRMED VS FORECAST', size=30)\nplt.xlabel('Days since 02\/27\/20', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['confirmed cases', 'forecast with Poly Regression'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","e9c384ec":"\nX_train, X_test, y_train, y_test = train_test_split(df_mortes_brasil, target_mortos_br, test_size=0.1, random_state=42)\npoly = PolynomialFeatures(degree=5, include_bias=False)\nX_poly = poly.fit_transform(X_train)\nsvm = LinearRegression()\nprint('fitting...')\nsvm.fit(X_poly,y_train)","7e2d849d":"pred_mortes_br = svm.predict(poly.fit_transform(futuro_brasil))","13298047":"plt.figure(figsize=(20, 12))\nplt.plot(dias_brasil, mortes_brasil, marker='x')\nplt.plot(futuro_brasil[0:len(dias_brasil)], pred_mortes_br[0:len(mortes_brasil)], linestyle = 'dashed', color='purple')\nplt.title('BRAZIL COMPARISON CONFIRMED DEATHS VS FORECAST', size=30)\nplt.xlabel('Days since 02\/27\/20', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['confirmed deaths', 'forecast with Poly Regression'],  prop={'size': 20}, loc=\"upper left\")\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ac741473":"#US\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=4000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_eua, target_confirmado_eua)","ff4e9494":"pred_caso_eua = mlp.predict(futuro_eua)","73f56847":"plt.figure(figsize=(20, 12))\nplt.plot(dias_eua, casos_eua, marker='x')\nplt.plot(futuro_eua[0:len(dias_eua)],pred_caso_eua[0:len(casos_eua)], linestyle = 'dashed', color='purple')\nplt.title('US COMPARISON CONFIRMED VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['confirmed cases', 'forecast with MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","a39eba81":"mlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_eua, target_mortos_eua)","06ded600":"pred_mortes_eua = mlp.predict(futuro_eua)","88b9232d":"plt.figure(figsize=(20, 12))\nplt.plot(dias_eua, mortes_eua, marker = 'x')\nplt.plot(futuro_eua[0:len(dias_eua)],pred_mortes_eua[0:len(mortes_eua)], linestyle = 'dashed', color='purple')\nplt.title('US COMPARISON  CONFIRMED DEATHS VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['confirmed deaths', 'forecast with MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()","a2b9fbcc":"# Italy Predict\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=30000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_italia, target_confirmado_italia)","1e39e680":"pred_caso_italia = mlp.predict(futuro_italia)","5d9af427":"plt.figure(figsize=(20, 12))\nplt.plot(dias_italia, casos_italia, marker = 'x')\nplt.plot(futuro_italia[0:len(dias_italia)],pred_caso_italia[0:len(casos_italia)], linestyle = 'dashed', color='purple')\nplt.title('Italy COMPARISON CONFIRMED VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['confirmed cases', 'forecast with SVM'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","0128f42c":"X_train, X_test, y_train, y_test = train_test_split(df_mortes_italia, target_mortos_italia, test_size=0.1, random_state=42)\n\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=30000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_italia, target_mortos_italia)","93c53d4e":"pred_mortes_italia = mlp.predict(futuro_italia)","1bdfd496":"plt.figure(figsize=(20, 12))\nplt.plot(dias_italia, mortes_italia, marker='x')\nplt.plot(futuro_italia[0:len(mortes_italia)],pred_mortes_italia[0:len(mortes_italia)], linestyle = 'dashed', color='purple')\nplt.title('Italy COMPARISON CONFIRMED DEATHS VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['confirmed deaths', 'forecast with MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","169e2884":"# Sweden predict\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_suecia, target_confirmado_suecia)","bf27f0bd":"pred_caso_suecia = mlp.predict(futuro_suecia)","ae0cd1a4":"plt.figure(figsize=(20, 12))\nplt.plot(dias_suecia, casos_suecia, marker='x')\nplt.plot(futuro_suecia[0:len(dias_suecia)], pred_caso_suecia[0:len(casos_suecia)], linestyle = 'dashed', color='purple')\nplt.title('SWEDEN COMPARISON CONFIRMED VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of cases', size = 30)\nplt.legend(['confirmed cases', 'forecast with SVM'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","31d21439":"mlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_suecia, target_mortos_suecia)","2f8204fd":"pred_mortes_suecia = mlp.predict(futuro_suecia)","b1253aeb":"plt.figure(figsize=(20, 12))\nplt.plot(dias_suecia, mortes_suecia,marker='x')\nplt.plot(futuro_suecia[0:len(dias_suecia)],pred_mortes_suecia[0:len(mortes_suecia)], linestyle = 'dashed', color='purple')\nplt.title('SWEDEN COMPARISON CONFIRMED  DEATHS VS FORECAST', size=30)\nplt.xlabel('Days since start of covid', size = 30)\nplt.ylabel('Number of deaths', size = 30)\nplt.legend(['confirmed deaths', 'forecast with MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","a2d309ea":"index = ['Predict', 'Real', 'Percentage difference', 'Gross difference']\npd.set_option('display.max_columns', 250)","057dd378":"columns =[i for i in datas_futuras_br]\nforecast = [round(i, 0) for i in pred_caso_br]\ndifference =[int(p) - int(r) for p,r in zip(pred_caso_br, casos_brasil)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, casos_brasil) ]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_case_br = pd.DataFrame([forecast[40:], casos_brasil[40:], formated_percentage_difference[40:], difference[40:]],\n                          columns=columns[40:], index = index)\n","0e25799e":"difference = np.array(difference[40:])\npercentage_difference = np.array(percentage_difference[40:])\nprint(f\"The average gross error for confirmed cases in Brazil is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for confirmed cases in Brazil is: {round(np.absolute(percentage_difference).mean(), 2)}%')","81d149a7":"print('CONFIRMED CASES FOR BRAZIL: ')\ndf_case_br","1a77e05c":"columns =[i for i in datas_futuras_br]\nforecast = [round(i, 0)  for i in pred_mortes_br]\ndifference =[int(p) - int(r) for p,r in zip(pred_mortes_br, mortes_brasil)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, mortes_brasil)]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_death_br = pd.DataFrame([forecast[40:], mortes_brasil[40:], formated_percentage_difference[40:], \n                            difference[40:]], columns=columns[40:], index = index)\n","1fb99c20":"difference = np.array(difference[40:])\npercentage_difference = np.array(percentage_difference[40:])\nprint(f\"The average gross error for deaths in Brazil is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for deaths in Brazil is: {round(np.absolute(percentage_difference).mean(), 2)}%')","e55b321d":"print('DEATHS IN BRASIL: ')\ndf_death_br","840e0d78":"columns =[i for i in datas_futuras_us]\nforecast = [round(i, 0) for i in pred_caso_eua]\ndifference =[int(p) - int(r) for p,r in zip(pred_caso_eua, casos_eua)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, casos_eua) ]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_case_us = pd.DataFrame([forecast[75:], casos_eua[75:], formated_percentage_difference[75:], difference[75:]],\n                          columns=columns[75:], index = index)\n","8cde6324":"difference = np.array(difference[75:])\npercentage_difference = np.array(percentage_difference[75:])\nprint(f\"The average gross error for confirmed cases in US is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for confirmed cases in US is: {round(np.absolute(percentage_difference).mean(), 2)}%')","2e9c8660":"print('CONFIRMED CASES IN US: ')\ndf_case_us","01287f6f":"columns =[i for i in datas_futuras_us]\nforecast = [round(i, 0)  for i in pred_mortes_eua]\ndifference =[int(p) - int(r) for p,r in zip(pred_mortes_eua, mortes_eua)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, mortes_eua)]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_death_us = pd.DataFrame([forecast[75:], mortes_eua[75:], formated_percentage_difference[75:], \n                            difference[75:]], columns=columns[75:], index = index)\n","1ade4cdd":"difference = np.array(difference[75:])\npercentage_difference = np.array(percentage_difference[75:])\nprint(f\"The average gross error for deaths in US is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for deaths in US is: {round(np.absolute(percentage_difference).mean(), 2)}%')","606fae9b":"print('DEATHS IN US ')\ndf_death_us","69befc27":"columns =[i for i in datas_futuras_it]\nforecast = [round(i, 0) for i in pred_caso_italia]\ndifference =[int(p) - int(r) for p,r in zip(pred_caso_italia, casos_italia)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, casos_italia) ]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_case_it = pd.DataFrame([forecast[67:], casos_italia[67:], formated_percentage_difference[67:], difference[67:]],\n                          columns=columns[67:], index = index)\n","675e92ec":"difference = np.array(difference[67:])\npercentage_difference = np.array(percentage_difference[67:])\nprint(f\"The average gross error for confirmed cases in Italy is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for confirmed cases in Italy is: {round(np.absolute(percentage_difference).mean(), 2)}%')","ba36827a":"print('CONFIRMED CASES IN ITALY : ')\ndf_case_it","4ef4fcf6":"columns =[i for i in datas_futuras_it]\nforecast = [round(i, 0)  for i in pred_mortes_italia]\ndifference =[int(p) - int(r) for p,r in zip(pred_mortes_italia, mortes_italia)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, mortes_italia)]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_death_it = pd.DataFrame([forecast[67:], mortes_italia[67:], formated_percentage_difference[67:], \n                            difference[67:]], columns=columns[67:], index = index)\n","2b9d2998":"difference = np.array(difference[67:])\npercentage_difference = np.array(percentage_difference[67:])\nprint(f\"The average gross error for deaths in Italy is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for deaths in Italy is: {round(np.absolute(percentage_difference).mean(), 2)}%')","5d691961":"print('DEATHS IN ITALY: ')\ndf_death_it","eb1c828f":"columns =[i for i in datas_futuras_su]\nforecast = [round(i, 0) for i in pred_caso_suecia]\ndifference =[int(p) - int(r) for p,r in zip(pred_caso_suecia, casos_suecia)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, casos_suecia) ]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_case_su = pd.DataFrame([forecast[66:], casos_suecia[66:], formated_percentage_difference[66:], difference[66:]],\n                          columns=columns[66:], index = index)\n","0b5b5b9f":"difference = np.array(difference[66:])\npercentage_difference = np.array(percentage_difference[66:])\nprint(f\"The average gross error for confirmed cases in Sweden is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for confirmed cases in Sweden is: {round(np.absolute(percentage_difference).mean(), 2)}%')","aab99d0d":"print('CONFIRMED CASES IN SWEDEN: ')\ndf_case_su","33197931":"columns =[i for i in datas_futuras_su]\nforecast = [round(i, 0)  for i in pred_mortes_suecia]\ndifference =[int(p) - int(r) for p,r in zip(pred_mortes_suecia, mortes_suecia)]\npercentage_difference = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(difference, mortes_suecia)]\npercentage_difference = [round(m, 2) for m in percentage_difference]\nformated_percentage_difference = [f'{i}%' for i in percentage_difference]\ndf_death_su = pd.DataFrame([forecast[66:], mortes_suecia[66:], formated_percentage_difference[66:], \n                            difference[66:]], columns=columns[66:], index = index)\n","98ab3523":"difference = np.array(difference[66:])\npercentage_difference = np.array(percentage_difference[66:])\nprint(f\"The average gross error for deaths in Sweden is: {round(np.absolute(difference).mean(), 1 )}\")\nprint(f'The average percentage error for deaths in Sweden is: {round(np.absolute(percentage_difference).mean(), 2)}%')","9df24eb5":"print('DEATHS IN SWEDEN: ')\ndf_death_su","e43f50be":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, color='blue')\nplt.plot(futuro_eua, pred_caso_eua, color='red')\nplt.plot(futuro_italia, pred_caso_italia, color='green')\nplt.plot(futuro_suecia, pred_caso_suecia, color='yellow')\n\nplt.title('COMPARISON OF CASE FORECAST IN DIFFERENT COUNTRIES', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of cases', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","b031322d":"labels = ['US', 'Italy', 'Brazil', 'Sweden']\natualmente = [confirmados_eua,confirmados_italia,confirmados_brasil,confirmados_suecia]\napos_40 = [pred_caso_eua[-1], pred_caso_italia[-1], pred_caso_br[-1],  pred_caso_suecia[-1]]\napos_40 = [round(m, 0) for m in apos_40]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Current')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' forecast after 40 days')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Cases')\nax.set_title('Current cases vs forecast')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","ccca073d":"print('comparison of case forecast in the 4 countries')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2208057\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2208057\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","072727af":"eua_porc = round(((pred_caso_eua[-1] - confirmados_eua)\/ confirmados_eua)*100 , 2)\nbr_porc =  round(((pred_caso_br[-1] - confirmados_brasil)\/ confirmados_brasil)*100, 2)\nit_porc =  round(((pred_caso_italia[-1] - confirmados_italia)\/ confirmados_italia)*100, 2)\nsu_porc =  round(((pred_caso_suecia[-1] - confirmados_suecia)\/ confirmados_suecia)*100, 2)\n\n\nfig = plt.figure(figsize=(12, 7))\npaises = ['US', 'Brazil', 'Italy', 'Sweden']\nnumeros = [eua_porc,br_porc,it_porc,su_porc]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('How many increased in 40 days', size = 20)\nplt.title('% increase', size=20)\nplt.show()","4c6bd988":"fig = plt.figure(figsize=(12, 7))\nlabels = ['EUA', 'Italia', 'Brasil', 'Suecia']\n\natualmente = [(confirmados_eua\/pop_eua)*1000000, (confirmados_italia\/pop_it) *1000000, \n           (confirmados_brasil\/pop_br)*1000000, (confirmados_suecia\/pop_sw)*1000000]\natualmente = [round(num, 0) for num in atualmente]\napos_40 = [(pred_caso_eua[-1]\/pop_eua)*1000000, (pred_caso_italia[-1]\/pop_it)*1000000,\n           (pred_caso_br[-1]\/ pop_br)*1000000, (pred_caso_suecia[-1]\/pop_sw)*1000000]\napos_40 = [round(num, 0) for num in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='now')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' predict in day: ' + columns[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Cases per Million')\nax.set_title('Cases per million now vs predict ')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","63049878":"p1 = figure(plot_width=800, plot_height=550, title=\"Expected trajectory for covid-19 logarithmic\",\n             y_axis_type=\"linear\", x_range=(80,190))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days'\np1.yaxis.axis_label = 'Progression of cases (logarithmic scale)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(np.squeeze(futuro_brasil)[40:], pred_caso_br[40:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(futuro_brasil[-1], pred_caso_br[-1], fill_color=\"white\", size=5)\n\np1.line(np.squeeze(futuro_eua)[75:], pred_caso_eua[75:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(futuro_eua[-1], pred_caso_eua[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_suecia)[66:], pred_caso_suecia[66:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(futuro_suecia[-1], pred_caso_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_italia)[67:], pred_caso_italia[67:], color='#3EC358', \n        legend_label='Italy', line_width=1)\np1.circle(futuro_italia[-1], pred_caso_italia[-1], fill_color=\"white\", size=5)\n\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","62c16f46":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, marker='o',  color='blue')\nplt.plot(futuro_suecia, pred_caso_suecia, marker='o',  color='yellow')\n\n\nplt.title('COMPARISON OF FORECAST BRAZIL VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of cases', size = 30)\nplt.legend(['Brazil', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","d021c1fa":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, marker='o',  color='blue')\nplt.plot(futuro_eua, pred_caso_eua, marker='o',  color='red')\n\nplt.title('COMPARISON OF FORECAST BRAZIL VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of cases', size = 30)\nplt.legend(['Brazil', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","1a934a0d":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_eua, pred_caso_eua, marker='o',  color='red')\nplt.plot(futuro_italia, pred_caso_italia, marker='o',  color='green')\n\n\nplt.title('COMPARISON OF FORECAST US VS ITALY', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of cases', size = 30)\nplt.legend(['US', 'ITALY'],  prop={'size': 20}, loc=\"upper left\")\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","733a0cac":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in pred_caso_eua:\n  porc = (i \/ pop_eua)*1000000\n  eua_porc.append(porc)\nfor i in pred_caso_br:\n  porc = (i \/ 217089238)*1000000\n  br_porc.append(porc)\nfor i in pred_caso_italia:\n  porc = (i \/ 60017348)*1000000\n  it_porc.append(porc)\nfor i in pred_caso_suecia:\n  porc = (i \/ 10174790)*1000000\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, br_porc, color='blue')\nplt.plot(futuro_eua, eua_porc, color='red')\nplt.plot(futuro_italia, it_porc, color='green')\nplt.plot(futuro_suecia, su_porc, color='yellow')\n\nplt.title('FORECAST  per million', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel(' cases  per million expected', size = 30)\nplt.legend(['Brazil', 'US', 'Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","cd510c80":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, color='blue')\nplt.plot(futuro_eua, pred_mortes_eua, color='red')\nplt.plot(futuro_italia, pred_mortes_italia, color='green')\nplt.plot(futuro_suecia, pred_mortes_suecia , color='yellow')\n\nplt.title('COMPARISON OF DEATH FORECAST IN DIFFERENT COUNTRIES', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of Deaths', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'SWEDEN'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","9fcd6d42":"conf_eua1, conf_eua2 = itertools.tee(iter(list(pred_caso_eua[75:])))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(pred_caso_italia[67:])))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(pred_caso_br[40:])))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(pred_caso_suecia[66:])))\nnext(conf_su2)\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndiferenca_eua_media = np.array(diferenca_eua).mean()\ndiferenca_italia_media = np.array(diferenca_italia).mean()\ndiferenca_brasil_media = np.array(diferenca_brasil).mean()\ndiferenca_suecia_media = np.array(diferenca_suecia).mean()\n\npaises = ['US', 'Italy', 'Brazil', 'Sweden']\nnumeros = [diferenca_eua_media, diferenca_italia_media, diferenca_brasil_media, diferenca_suecia_media]\nnumeros = [round(m, 0) for m in numeros]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(paises, numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('DAILY INCREASE PREDICT', size = 20)\nplt.title('daily increase of covid-19', size=20)\nplt.show()","17b91524":"ax = plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil[76:], diferenca_brasil[35:], color='blue')\nplt.plot(futuro_eua[76:], diferenca_eua, color='red')\nplt.plot(futuro_italia[76:], diferenca_italia[8:], color='green')\nplt.plot(futuro_suecia[76:], diferenca_suecia[9:], color='yellow')\n\nplt.title('DAILY INCREASE PREDICT', size=30)\nplt.xlabel('Days since begin predict', size = 30)\nplt.ylabel('daily increase', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","18953d60":"labels = ['US', 'Italy', 'Brazil', 'Sweden']\natualmente = [mortos_eua, mortos_italia, mortos_brasil, mortos_suecia]\napos_40 = [pred_mortes_eua[-1], pred_mortes_italia[-1], pred_mortes_br[-1],  pred_mortes_suecia[-1]]\napos_40 = [round(m, 0) for m in apos_40]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='currently')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' forecast for ' + datas_futuras_br[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Deaths')\nax.set_title('currently deaths vs forecast')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","a2bad752":"print('death forecast 4 country')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2288388\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2288388\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","1f25dd28":"eua_porc = round(((pred_mortes_eua[-1] - mortos_eua)\/ mortos_eua)*100 , 2)\nbr_porc =  round(((pred_mortes_br[-1] - mortos_brasil)\/ mortos_brasil)*100, 2)\nit_porc =  round(((pred_mortes_italia[-1] - mortos_italia)\/ mortos_italia)*100, 2)\nsu_porc =  round(((pred_mortes_suecia[-1] - mortos_suecia)\/ mortos_suecia)*100, 2)\n\n\nfig = plt.figure(figsize=(12, 7))\npaises = ['US', 'Brazil', 'Italy', 'Sweden']\nnumeros = [eua_porc,br_porc,it_porc,su_porc]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('% increase in deaths after 40 days', size = 20)\nplt.title('% increase', size=20)\nplt.show()","368990bf":"fig = plt.figure(figsize=(12, 7))\nlabels = ['EUA', 'Italia', 'Brasil', 'Suecia']\n\natualmente = [(mortos_eua\/pop_eua)*1000000, (mortos_italia\/pop_it) *1000000, \n           (mortos_brasil\/pop_br)*1000000, (mortos_suecia\/pop_sw)*1000000]\natualmente = [round(num, 0) for num in atualmente]\napos_40 = [(pred_mortes_eua[-1]\/pop_eua)*1000000, (pred_mortes_italia[-1]\/pop_it)*1000000,\n           (pred_mortes_br[-1]\/ pop_br)*1000000, (pred_mortes_suecia[-1]\/pop_sw)*1000000]\napos_40 = [round(num, 0) for num in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='now')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' predict for' + columns[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Deaths per million')\nax.set_title('Deaths per million now vs predict ')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","b8478761":"p1 = figure(plot_width=800, plot_height=550, title=\"Expected trajectory for logarithmic covid-19 deaths\",\n             y_axis_type=\"log\", x_range=(75,190))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Days'\np1.yaxis.axis_label = 'Deaths progression(logarithmic scale)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(np.squeeze(futuro_brasil)[40:], pred_mortes_br[40:], color='#3E4CC3', \n        legend_label='Brazil', line_width=1)\np1.circle(futuro_brasil[-1], pred_mortes_br[-1], fill_color=\"white\", size=5)\n\np1.line(np.squeeze(futuro_eua)[75:], pred_mortes_eua[75:], color='#F54138', \n        legend_label='United States', line_width=1)\np1.circle(futuro_eua[-1], pred_mortes_eua[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_suecia)[66:], pred_mortes_suecia[66:], color='#DBAE23', \n        legend_label='Sweden', line_width=1)\np1.circle(futuro_suecia[-1], pred_mortes_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_italia)[67:], pred_mortes_italia[67:], color='#3EC358', \n        legend_label='Italy', line_width=1)\np1.circle(futuro_italia[-1], pred_mortes_italia[-1], fill_color=\"white\", size=5)\n\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","43541b0c":"fig = plt.figure(figsize=(12, 7))\nlabels = ['US', 'Italy', 'Brazil', 'Sweden']\natualmente = [(mortos_eua\/confirmados_eua)*100, (mortos_italia\/confirmados_italia) *100, \n           (mortos_brasil\/confirmados_brasil)*100, (mortos_suecia\/confirmados_suecia)*100]\natualmente = [round(num, 2) for num in atualmente]\napos_40 = [(pred_mortes_eua[-1]\/pred_caso_eua[-1])*100, (pred_mortes_italia[-1]\/pred_caso_italia[-1])*100,\n           (pred_mortes_br[-1]\/ pred_caso_br[-1])*100, (pred_mortes_suecia[-1]\/pred_caso_suecia[-1])*100]\napos_40 = [round(m, 0) for m in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='currently')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' forecast after 40 days')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('% mortality')\nax.set_title('Current vs predicted mortality in%')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","d55e4e1f":"plt.figure(figsize=(20, 9))\nmort_br = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_br, pred_caso_br)]\nmort_eua = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_eua, pred_caso_eua)]\nmort_it = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_italia, pred_caso_italia)]\nmort_su = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_suecia, pred_caso_suecia)]\n\n\nplt.plot(futuro_brasil, mort_br, color='blue')\n#plt.plot(futuro_eua, mort_eua, color='red')\nplt.plot(futuro_italia, mort_it, color='green')\n#plt.plot(futuro_suecia, mort_su, color='yellow')\n\nplt.title('Evolution of the mortality rate  Brazil vs USA', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Mortality rate', size = 30)\nplt.legend(['Brasil', 'USA'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f93222b9":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, marker='o',  color='blue')\nplt.plot(futuro_suecia, pred_mortes_suecia, marker='o',  color='yellow')\n\nplt.title('COMPARISON OF DEATH FORECAST BRAZIL VS SWEDEN', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of Deaths', size = 30)\nplt.legend(['Brazil', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","27c77c51":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_italia, pred_mortes_italia, marker='o',  color='green')\nplt.plot(futuro_eua, pred_mortes_eua, marker='o',  color='red')\n\nplt.title('COMPARISON OF DEATH FORECAST ITALY VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of Deaths', size = 30)\nplt.legend(['Italy', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","98e91de2":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, marker='o',  color='blue')\nplt.plot(futuro_eua, pred_mortes_eua, marker='o',  color='red')\n\nplt.title('COMPARISON OF DEATH FORECAST BRAZIL VS US', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('Expected number of Deaths', size = 30)\nplt.legend(['Brazil', 'US'],  prop={'size': 20}, loc=\"upper left\")\n\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","087191b6":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in pred_mortes_eua:\n  porc = (i \/ 333545145)*100\n  eua_porc.append(porc)\nfor i in pred_mortes_br:\n  porc = (i \/ 217089238)*100\n  br_porc.append(porc)\nfor i in pred_mortes_italia:\n  porc = (i \/ 60017348)*100\n  it_porc.append(porc)\nfor i in pred_mortes_suecia:\n  porc = (i \/ 10174790)*100\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, br_porc, color='blue')\nplt.plot(futuro_eua, eua_porc, color='red')\nplt.plot(futuro_italia, it_porc, color='green')\nplt.plot(futuro_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESSION OF DEATHS IN RELATION TO POPULATION', size=30)\nplt.xlabel('Days since covid started', size = 30)\nplt.ylabel('% of deaths in relation to population', size = 30)\nplt.legend(['Brazil', 'US','Italy', 'Sweden'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ac61b617":"In this section we will build 8 data frames, one of confirmed cases and one of deaths for each country. In these dataframes we will have the official cases and those that our program predicted, and it will be updated directly.\nIn addition to these dataframes, we will redo the graphics made in the graphics section, but now with the forecasts, to see if the scenario of the countries change in relation to each other","66f6af09":"\nAt the beginning of March, Brazil recorded its first case of covid-19, which many thought was just an Asian disease, finally arrived in my territory, and since then, the situation in Brazil has only worsened, with records and records of deaths and cases.\n\nRight at the beginning of the pandemic in Brazil, universities stopped, and I see the uncertainty that hangs in the air until today \"what are we facing and how far can it go?\" it is with this doubt in mind, that I decided to analyze the data available not only for Brazil, but also countries that suffered a lot with the virus and that I thought was similar to Brazil, so here we will analyze and compare Brazil, USA, Italy and Sweden, and after this little analysis try to predict the next numbers of the disease for these 4 countries, and compare them, so to try to at least clear up the doubt that has been hovering in the air for months\n\n\n---\n\n\n\nDisclaimer \/ Legal Notice: This information should serve the interested parties as a first guideline. The general information contained herein, however, does not provide any warranty. Thus, the guarantee or liability of any kind is excluded, for example, of accuracy, reliability, completeness and timeliness of the information.\n\n\n---\n\n\n\n---","6c274e97":"In this section we will apply sklearn's SVR algorithm to try to predict the number of deaths, cases and recoveries from the 4 countries in the next 40 days.\n\n\n---\n\nNOTE:  PREDICTS  ARE ALSO BEING OPTIMIZED IN ANOTHER FILE TO REDUCE THE ERROR","6f66092f":"## Deaths","c0b0b1fc":"version control in GIT, clicking on the version number will take you to the corresponding repository\n\n---\nv1.0 \n\n*   Initial Version\n\n\n\n[v1.0.1](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/V1.0.1)\n\n\n*   Bugs fix   \n\n[v1.1](git.com.br) \n*   Enhanced Brazil predict of cases and death\n*   Texts translated to english\n*   Delete useless imports\n*   Bugs fix\n\n[v2.0](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/v2.0.x)\n* Improvement in some graphics\n* New Graphics\n* Improvement in the results presentation tables\n* Improved forecasting of cases and deaths in the USA\n* Added \"About Me\" section\n\n[v3.0](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/v3.0.x)\n* Improvements in some graphics\n* \"Bar Chart race\" views\n* log-scale graph for evolution of deaths and cases\n* mortality chart\n* graph of new cases per day\n* chart of new deaths per day\n* Change of the prediction algorithm for death and cases in all countries\n* More graphics\n* Added Introduction\n* Bug fixes\n","1420c329":"below, we will see the dataframes transposed\n\n","2e96a7b3":"# Data Reading\n\n\n---\n\n","f17f4b78":"# About Me","ab52b8f9":"#Introduction","13bec87e":"## Cases","f34e3b25":"Sweden looks almost like a straight line when comparing with USA and Italy, Brazil is also very discreet next to Italy and USA, ahead we will compare  the log graphic and these countries 2 to 2","1dadf2a1":"As we can see, in the countries that have already had their growth curve more accentuated, the number of cured people exceeds the number of deaths, while in countries like Brazil and Sweden that have not yet reached this growth curve, the number of deaths is greater than the of recovered, including the number of recovered stabilizes.\n","c5aa0f62":"When we see deaths in relation to% of population, we notice some things\n\n\n* Italy is still fired up front with more numbers of deaths\n* Sweden comes in front of Brazil and the USA\n* Brazil is growing faster than the USA and Sweden\n* Sweden and USA are on their growth curve","a20ff059":"Hello, I am Lucas Marchiori and currently (04\/2020) I am studying the 3rd semester of Computer Engineering at the Federal University of S\u00e3o Carlos (UFSCar), and I have been in the computer business since high school, where I was a computer technician at Etec de Nova Odessa.\n\nDespite having been in the computing area for a long time, I recently found myself in the data science area,  that  is my first project in this area, where I decided to use the quarantine free time to learn a little about this area , so vast that it has interested me more and more.\n\nCurrently I have been looking to study more about data science, machine learning and its \"sub divisions\"\n\nSome links:\n\nMy github: https:\/\/bit.ly\/GitLucas\n\nMy Linkedin: https:\/\/bit.ly\/2XJR5Z0\n\n\nemail for questions or suggestions: lucas@estudante.ufscar.br","a4f25c7f":"### Are we bending the curve?","62e2e9c0":"Below is the average error of our forecast for the confirmed cases  and the table with the forecasts, real cases and the difference between the two.\nsince these are forecasts, there are tables that have no differences yet, because our program has 40 days ahead. \n\nDRAG THE TABLES SCROLL BAR TO SEE ANOTHER DAYS.\n\n\n---\n\n\norder of tables:\n\n\n1. Brazil confirmed\n2. Dead Brazil\n3. Confirmed USA\n4. Dead USA\n5. Italy confirmed\n6. Dead Italy\n7. Sweden confirmed\n8. Dead Sweden","55bd5d40":"# Predict","c8a04877":"Vers\u00e3o em portugues: https:\/\/bit.ly\/notebookPT\n\nDataset by: [CSSEGISandData](https:\/\/github.com\/CSSEGISandData\/COVID-19\/tree\/master\/csse_covid_19_data\/csse_covid_19_time_series)\n\nps: variable names is in portuguese in the future they will be translated as well\n","afcd4071":"* Transform the csv available on Git into a pandas dataframe\n*   Split in 4 Dataframe: \n      1.   Brazil\n      2.   US\n      3.   Sweden\n      4.   Italy\n\n\n*   Remove parts of the dataframe that will not be used\n*   we will use 3 dataframe for each country: Confirmed, Deaths and Recovered\n\n\n\n\n\n\n\n","8ade16b0":"# Graphic Presentation","d63023d3":"the part of separating target data, and separating in train and test will be done in the prediction section\n","ad7d2b8f":"# Changelog","2c837bc4":"# Data Processing","1df3003a":"## Deaths vs recovered","57c73f5c":"\n**WHAT CAN BE REPAIRED THROUGH THESE CASE GRAPHICS:**\n* Italy is moving towards stabilization\n* United States Party for stabilization\n* Brazil as well as Sweden, tend to have more percentage cases than the United States\n* Brazil is going to be the country with more cases\n* Italy grew by a very large percentage","586e826a":"In this section, a few graphs will be presented that will help us to understand the situation of the covid-19 in the 4 selected countries\n\n","50a0fba3":" Machine learning algorithm does not accept dates in the MM\/DD\/YY format, we will perform some treatments in these dataframes to get what we want, we will perform the following steps:\n\n\n*  Extract columns index\n*   Extract case numbers from each country\n*   transform dates into calendar days, 1st day of covid = 0, second = 1 ...\n*   Choose how many calendar days in the future we want to make the prediction\n*   Transform the calendar days to mm\/dd\/yy format\n*   Transpose all dataframes\n\n\n\n\n\n\n\n\n","3bfacc9a":"# Results Presentation","e69bbd98":"## Deahts vs Confirmed bar chart "}}