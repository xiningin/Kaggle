{"cell_type":{"91354da2":"code","692cd758":"code","e3e43bb3":"code","50ef25a7":"code","dae8fa97":"code","0519c107":"code","b581e6a4":"code","3380a92e":"code","e1551ad1":"code","77203053":"code","79604c2a":"code","127e6ba5":"markdown","afe61037":"markdown","655594a4":"markdown","91c3c270":"markdown"},"source":{"91354da2":"import pandas as pd","692cd758":"def gnss_log_to_dataframes(path):\n    print('Loading ' + path, flush=True)\n    gnss_section_names = {'Raw','UncalAccel', 'UncalGyro', 'UncalMag', 'Fix', 'Status', 'OrientationDeg'}\n    with open(path) as f_open:\n        datalines = f_open.readlines()\n\n    datas = {k: [] for k in gnss_section_names}\n    gnss_map = {k: [] for k in gnss_section_names}\n    for dataline in datalines:\n        is_header = dataline.startswith('#')\n        dataline = dataline.strip('#').strip().split(',')\n        # skip over notes, version numbers, etc\n        if is_header and dataline[0] in gnss_section_names:\n            gnss_map[dataline[0]] = dataline[1:]\n        elif not is_header:\n            datas[dataline[0]].append(dataline[1:])\n\n    results = dict()\n    for k, v in datas.items():\n        results[k] = pd.DataFrame(v, columns=gnss_map[k])\n    # pandas doesn't properly infer types from these lists by default\n    for k, df in results.items():\n        for col in df.columns:\n            if col == 'CodeType':\n                continue\n            results[k][col] = pd.to_numeric(results[k][col])\n\n    return results","e3e43bb3":"dfs = gnss_log_to_dataframes('..\/input\/google-smartphone-decimeter-challenge\/train\/2020-05-14-US-MTV-1\/Pixel4\/Pixel4_GnssLog.txt')","50ef25a7":"dfs['Raw'].head(3)","dae8fa97":"dfs['UncalAccel'].head(3)","0519c107":"dfs['UncalGyro'].head(3)","b581e6a4":"dfs['UncalMag'].head(3)","3380a92e":"dfs['Fix'].head(3)","e1551ad1":"dfs['Status'].head(3)","77203053":"dfs['OrientationDeg']","79604c2a":"for field_name, df in dfs.items():\n    print('Number of rows in {0}: {1}'.format(field_name, len(df)))","127e6ba5":"GNSS log files are sort of like a bundle of csvs all mixed together. The header specifies which datasets are contained in the rest of the file and which columns are in each dataset. In the data section, the first column of each row specifies which dataset the row belongs to.\n\nYou can use the function below to load the GNSS log files into pandas dataframes without having to learn anything else about the GNSS file format.","afe61037":"Not all log files have every possible dataset in their header.","655594a4":"Expect to see a different number of rows in each dataset. Each instrument may have a different logging frequency, and some require multiple rows to log all of the data recorded at a single timestamp.","91c3c270":"Not all of the possible fields will actually be populated."}}