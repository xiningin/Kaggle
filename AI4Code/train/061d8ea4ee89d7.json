{"cell_type":{"ccbf8511":"code","75629152":"code","26bb9e95":"code","f7929730":"code","83f9ceff":"code","d2dc4007":"code","b2b3a435":"code","744cbad3":"code","a117446e":"code","27550913":"code","2450b889":"code","6058b13f":"code","9cd02cd6":"code","35b90592":"code","06227e29":"code","a5a36d59":"code","c45b7246":"code","df60469f":"code","a5646451":"code","cfc231c2":"code","ce0a608b":"code","d30f68a3":"code","5bdbb147":"code","6cc85d67":"markdown","0de69d37":"markdown","4fc956a7":"markdown","8536f1e2":"markdown","ac8388dd":"markdown","4d851d11":"markdown","ed08feab":"markdown","1f8921ee":"markdown"},"source":{"ccbf8511":"############## DIABETIES DATASET #################","75629152":"#####importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\n\nimport statsmodels.formula.api as smf\nfrom scipy.stats import shapiro,levene","26bb9e95":"########## importing the data ########################\ndata=pd.read_csv('..\/input\/diabetes.csv')\n#checking the head of the data\ndata.head()","f7929730":"#describing the data\ndata.describe()","83f9ceff":"#getting the information regarding the data\ndata.info()","d2dc4007":"#checking the shape of the data\ndata.shape","b2b3a435":"#checking for null values in the data and performing EDA\ndata.isnull().sum()","744cbad3":"#getting the individua count of the outcome yes or no in the dataset\ndata['Outcome'].value_counts()","a117446e":"#dropping the outcome in the x and considering it in y as y is the target variable\nx=data.drop('Outcome',axis=1)\nx.head()\ny=data['Outcome']\ny.head()","27550913":"#### plotting a HISTOGRAM on the data\ndata.hist(figsize=(10,8))\nplt.show()","2450b889":"#### BOXPLOT for checking the outliers\ndata.plot(kind= 'box' , subplots=True,layout=(3,3), sharex=False, sharey=False, figsize=(10,8))","6058b13f":"#### checking the correlation in matrix for variables using HEATMAP\nimport seaborn as sns\nsns.heatmap(data.corr(), annot = True)","9cd02cd6":"X=data.iloc[:,:-1]\nX.head()\nY=data.iloc[:,-1]\nY.head()","35b90592":"#### splitting X and y into training and testing sets \nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=100)","06227e29":"# Scaling the data\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","a5a36d59":"#logistic regression model\nmodel=LogisticRegression()\nmodel.fit(X_train,y_train)\nypred=model.predict(X_test)\nypred","c45b7246":"# accuracy score\nfrom sklearn import metrics\naccuracy=metrics.accuracy_score(y_test,ypred)\nprint(accuracy)","df60469f":"#confusion matrix\ncm=metrics.confusion_matrix(y_test,ypred)\nprint(cm)\nplt.imshow(cm, cmap='binary')","a5646451":"#sensitivity and specificity check\ntpr=cm[1,1]\/cm[1,:].sum()\nprint(tpr*100)\ntnr=cm[0,0]\/cm[0,:].sum()\nprint(tnr*100)","cfc231c2":"#checking roc and auc curves\nfrom sklearn.metrics import roc_curve,auc\nfpr,tpr,_=roc_curve(y_test,ypred)\nroc_auc=auc(fpr,tpr)\nprint(roc_auc)\nplt.figure()\nplt.plot(fpr,tpr)\nplt.xlim([0.0,1.0])\nplt.ylim([0.0,1.0])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic')\nplt.show()","ce0a608b":"#### importing the classifier and building the model\nfrom sklearn import tree\n\nmodel = tree.DecisionTreeClassifier()","d30f68a3":"model.fit(X_train, y_train)","5bdbb147":"y_predict = model.predict(X_test)\n\nfrom sklearn.metrics import accuracy_score\n\naccuracy_score(y_test, y_predict)","6cc85d67":"## SPLITTING THE DATA","0de69d37":"## DATA SCALING","4fc956a7":"## CHECKING FOR THE ACCURACY WITH THE METRICS","8536f1e2":"## DIABETIES DATASET","ac8388dd":"## PLOTS","4d851d11":"## BUILDING A LOGISTIC REGRESSION  MODEL","ed08feab":"## EDA","1f8921ee":"## BUILDING A DECISION TREE CLASSIFIER"}}