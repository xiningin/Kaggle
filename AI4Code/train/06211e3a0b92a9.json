{"cell_type":{"fdd516e5":"code","2938e636":"code","e72711f1":"code","16fd7019":"code","aa77ac11":"code","74a97316":"code","5c11346c":"code","abc74c44":"code","6aae00ba":"code","92aae188":"code","c5d93e90":"code","2a0b46be":"code","d32e4d4e":"code","5f020171":"code","5964531b":"code","ab664ce1":"code","fae60b7e":"code","5d837f17":"code","ca642d45":"code","56abb6ea":"code","e31764d4":"code","456b4b8c":"code","7437da4b":"code","7c78fcb7":"code","4cbec126":"code","b2770799":"code","f3dc096c":"code","054ec627":"code","45590404":"code","d36ac958":"code","6334b901":"code","0b360a9b":"code","456a4022":"code","2cc8027c":"code","7af11b81":"code","361d8e10":"code","cc3272ee":"code","4240c01f":"code","51afdad4":"markdown","faabb78d":"markdown","3f5439e2":"markdown","ffa4fc8e":"markdown","b18127d1":"markdown","654a47fb":"markdown","d2f68a71":"markdown","eb725576":"markdown","11df559a":"markdown","06d8a285":"markdown","b31bef38":"markdown","ab3bd3f8":"markdown","51645315":"markdown","20a20a2c":"markdown","07d26505":"markdown","b57d2051":"markdown","da56be88":"markdown","fe7819aa":"markdown","ee46aa06":"markdown"},"source":{"fdd516e5":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\n\n\n","2938e636":"raw_data = pd.read_csv('..\/input\/titanic\/train.csv')\nraw_data","e72711f1":"raw_data.isnull().sum()","16fd7019":"#Drop Cabin becasue it has vast amount of missing values as well as name and passenger ID becaue they will not fit my logit model well\nraw_data = raw_data.drop(['Cabin','PassengerId','Name'], axis=1)","aa77ac11":"# Replace na values with median of age column and rounding \nmedian = raw_data['Age'].median()\nraw_data['Age'].fillna(median, inplace=True)","74a97316":"raw_data.round()","5c11346c":"data_no_mv = raw_data.dropna(axis=0)","abc74c44":"data_no_mv.isnull().sum()","6aae00ba":"data_no_mv.describe(include='all')\n","92aae188":"##using pandas cut and bins to create four different age groups and checking for missing values\nbins= [0,14,24,65,99]\nlabels = ['Child','Teen','Young Adult', 'Senor']\ndata_no_mv['AgeGroup'] = pd.cut(data_no_mv['Age'], bins=bins, labels=labels, right=False)\ndata_no_mv1=data_no_mv.drop(['Age'], axis=1)\n\n","c5d93e90":"data_no_mv1.isnull().sum()","2a0b46be":"data_no_mv1['Child']=data_no_mv1['AgeGroup'].map({'Child':1,'Teen':0,'Young Adult':0,'Senor':0})\ndata_no_mv1['Teen']=data_no_mv1['AgeGroup'].map({'Child':0,'Teen':1,'Young Adult':0,'Senor':0})\ndata_no_mv1['Young Adult']=data_no_mv1['AgeGroup'].map({'Child':0,'Teen':0,'Young Adult':1,'Senor':0})\ndata_no_mv1['Senor']=data_no_mv1['AgeGroup'].map({'Child':0,'Teen':0,'Young Adult':0,'Senor':1})\ndata_no_mv2=data_no_mv1.drop(['AgeGroup'], axis=1)\n","d32e4d4e":"# Creating three new ticket classes  as well as mapping male and females to binary values \ndata_no_mv2['PclassL']=data_no_mv2['Pclass'].map({1:'1',2:'0',3:'0'})\ndata_no_mv2['PclassM']=data_no_mv2['Pclass'].map({1:'0',2:'1',3:'0'})\ndata_no_mv2['PclassU']=data_no_mv2['Pclass'].map({1:'0',2:'0',3:'1'})\ndata_no_mv3 = data_no_mv2.drop(['Pclass','Fare','Ticket'], axis=1)\n\ndata_no_mv3['Sex'] = data_no_mv3['Sex'].map({'male':1,'female':0})\n\n","5f020171":"data_no_mv3","5964531b":"data_with_dummies = pd.get_dummies(data_no_mv3, drop_first=True)","ab664ce1":"data_with_dummies.head()","fae60b7e":"targets = data_with_dummies['Survived']\ninputs = data_with_dummies.drop(['Survived'], axis=1)","5d837f17":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(inputs,targets,test_size= 0.20,random_state=9)","ca642d45":"reglog =sm.Logit(y_train,x_train)\nlogitreg =reglog.fit()\n","56abb6ea":"logitreg.summary()","e31764d4":"sc = np.array(logitreg.pred_table())\naccuracy_score = (sc[0,0]+sc[1,1])\/sc.sum()\naccuracy_score","456b4b8c":"test_data = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_data","7437da4b":"median = test_data ['Age'].median()\ntest_data ['Age'].fillna(median, inplace=True)","7c78fcb7":"test_data.round()","4cbec126":"bins= [0,14,24,65,99]\nlabels = ['Child','Teen','Young Adult', 'Senor']\ntest_data['AgeGroup'] = pd.cut(test_data['Age'], bins=bins, labels=labels, right=False)\n","b2770799":"test_data=test_data.drop(['Age'], axis=1)","f3dc096c":"#Age\ntest_data['Child']=test_data['AgeGroup'].map({'Child':1,'Teen':0,'Young Adult':0,'Senor':0})\ntest_data['Teen']=data_no_mv1['AgeGroup'].map({'Child':0,'Teen':1,'Young Adult':0,'Senor':0})\ntest_data['Young Adult']=test_data['AgeGroup'].map({'Child':0,'Teen':0,'Young Adult':1,'Senor':0})\ntest_data['Senor']=test_data['AgeGroup'].map({'Child':0,'Teen':0,'Young Adult':0,'Senor':1})\ntest_data=test_data.drop(['AgeGroup'], axis=1)","054ec627":"#Ticket Class\ntest_data['PclassL']=test_data['Pclass'].map({1:'1',2:'0',3:'0'})\ntest_data['PclassM']=test_data['Pclass'].map({1:'0',2:'1',3:'0'})\ntest_data['PclassU']=test_data['Pclass'].map({1:'0',2:'0',3:'1'})","45590404":"test_data['Sex'] = test_data['Sex'].map({'male':1,'female':0})","d36ac958":"test_data_drop_var = test_data.drop(['Cabin','Name','PassengerId','Ticket','Fare','Pclass'], axis=1)\ntest_data_wt_dummy = pd.get_dummies(test_data_drop_var, drop_first=True)\n","6334b901":"\ntest_data_wt_dummy.dtypes","0b360a9b":"test_data_wt_dummy.isnull().sum()","456a4022":"median = test_data_wt_dummy ['Teen'].median()\ntest_data_wt_dummy ['Teen'].fillna(median, inplace=True)","2cc8027c":"test_data_wt_dummy.isnull().sum()\n","7af11b81":"pred_values = logitreg.predict(test_data_wt_dummy)\nPredicted = pred_values.round()\n","361d8e10":"Predicted","cc3272ee":"pid = test_data['PassengerId']\npid","4240c01f":"output = pd.DataFrame(pid.values, columns=['PassengerId'])\noutput['Survived'] = Predicted\noutput = output.astype(int)\noutput.dtypes","51afdad4":"### Filter data to match inputed data","faabb78d":"## Introduction\nThis is my first competition submission, where i put together what i have learned about logit models to predict which passengers aboard the titanic survived the shipwreck or not. I came into the competition knowing the sex, age, and ticket class contributed to whether a person survived or not, so i jumped straight into processing the data to fit the model. Any feedback on how i can make my model better or any tips, would be greatly appreciated.\n\n\n\n## Table of Content \n    \n   \n   1. [The Challenge](#cell1)\n   2. [Variables Overview](#cell2)\n   2. [Importaing relevant libraries](#cell3)\n   3. [importing dataset](#cell4)\n   4. [Preprocessing dataset](#cell5)\n       - Dealing with missing values\n       - Exploring The descriptive statistics \n       - Creating binary columns\n       - Creating dummies for categorical variables \n   5. [Logit Regression Model](#cell6)\n        - Declaring depedent and indepedent Variable\n        - Train_Test_Split data\n        - Fitting Logit Model\n        - Logit Regression Results\n        \n   6. [Accuracy Score of model ](#cell7)\n   \n   7. [Testing](#cell8)\n         - Importing Test Data\n         - Filter data to match inputed data\n         - Creating Predicated data with test data\n\n\n\n\n","3f5439e2":"## The Challenge <a id=\"cell1\"><\/a>\nThe sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others.\n\nIn this challenge, we ask you to build a predictive model that answers the question: \u201cwhat sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).\n","ffa4fc8e":"## Importing Relevant libraries <a id=\"cell3\"><\/a>\nimporting pandas for data manipulation and analysis, matplotlib to visualize data in charts and graphs and seaborn for better visualization.","b18127d1":"## Importing Dataset <a id=\"cell4\"><\/a>","654a47fb":"## Accuracy Score of model <a id=\"cell7\"><\/a>","d2f68a71":"### Fitting Logit Model\nI use a logit Model to train the data","eb725576":"## Preprocessing Dataset<a id=\"cell5\"><\/a>","11df559a":"### Logit Regression Results\n","06d8a285":"### Exploring the descriptive statistics of the variables","b31bef38":"## Variables <a id=\"cell2\"><\/a>\n\n**survival** - 0 = No, 1 = Yes\n\n**pclass**\t- Ticket class\t1 = 1st, 2 = 2nd, 3 = 3rd\n\n**sex**\t- Sex\tM or F\n\n**Age**\t- Age in years\n\n**sibsp** -\t# of siblings \/ spouses aboard the Titanic\n\n**parch** -\t# of parents \/ children aboard the Titanic\n\n**ticket** -\tTicket number\n\n**fare** -\tPassenger fare\n\n**cabin** - \tCabin number\n\n**embarked** - \tPort of Embarkation\tC = Cherbourg, Q = Queenstown, S = Southampton\n\n**pclass** - A proxy for socio-economic status (SES)\n1st = Upper\n2nd = Middle\n3rd = Lower\n\n**age** - Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5\n\n**sibsp:**- The dataset defines family relations in this way...\n**Sibling** = brother, sister, stepbrother, stepsister\n**Spouse** = husband, wife (mistresses and fianc\u00e9s were ignored)\n\n**parch** - The dataset defines family relations in this way...\n**Parent** = mother, father\n**Child** = daughter, son, stepdaughter, stepson\nSome children travelled only with a nanny, therefore parch=0 for them.pclass: A proxy for socio-economic status (SES)\n1st = Upper\n2nd = Middle\n3rd = Lower\n","ab3bd3f8":"### Creating Predicated data with test data","51645315":"### Declaring input and depdent variables","20a20a2c":"## TESTING <a id=\"cell8\"><\/a>\n### Loading Testing Dataset\n","07d26505":"## Logit Regression Model <a id=\"cell6\"><\/a>","b57d2051":"### Creating dummies for categorical variables ","da56be88":"### Dealing with missing values\n","fe7819aa":"### Creating binary columns\n","ee46aa06":" ### Train_Test_Split data \nSetting a 80\/20 split, splitting the training data into 80 and the test data to 20 with a random state of 9"}}