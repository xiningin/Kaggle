{"cell_type":{"6a4da124":"code","b963571b":"code","ea38d024":"code","e65366f5":"code","0892a5ac":"code","57f84207":"code","6a83911c":"code","e1ab95b6":"code","bbe6fac3":"code","47de7ad6":"code","aef99cec":"code","931c0c7b":"code","d54abc97":"code","95597810":"code","c779523d":"code","dca20e36":"code","606cb848":"code","880b1cc2":"code","50d7ef1c":"code","f98e0763":"code","86f23818":"code","a73e4e69":"code","2897da15":"code","7ada763f":"code","0d6422af":"code","24020b11":"code","b615962f":"code","c24a96f3":"code","372a9abb":"code","6325eb26":"code","7b8e2b55":"code","d5e4b529":"code","1df54628":"code","ae538e1d":"code","c26f6997":"markdown","cfbab8b4":"markdown","6b5c6e02":"markdown","7b16bfdf":"markdown","e22e8542":"markdown","dd66c1b1":"markdown","98a516bc":"markdown","61adb84f":"markdown","239d65e5":"markdown","8ae7435b":"markdown","864d967a":"markdown","3ffff6e9":"markdown","7b7ad523":"markdown","99fd9f27":"markdown","47d86f2f":"markdown","836e5067":"markdown","a2c3b551":"markdown","96d1dd12":"markdown","bd873a76":"markdown","eb31f2ec":"markdown","8b5c6dd9":"markdown","3b244d3b":"markdown","38e31214":"markdown","5e149397":"markdown","318b81c5":"markdown","15e69c35":"markdown","77d15fb8":"markdown","1d79279f":"markdown","f91afdf1":"markdown","1b1fa338":"markdown","52b010f9":"markdown","d526b399":"markdown","1a6a50ca":"markdown","3bba1930":"markdown","568d57a4":"markdown","289cbb43":"markdown","af589d16":"markdown","21870c4c":"markdown","dde2c68a":"markdown","bb6024ea":"markdown","2ebd15a3":"markdown","99d3aa86":"markdown","976fbd27":"markdown","9ff04096":"markdown","d714b086":"markdown","bd9c1cdf":"markdown","8935c598":"markdown","b7b0741a":"markdown","1d0a03e2":"markdown","b3d1dd77":"markdown","6472eb34":"markdown","276c7c28":"markdown","b08a5144":"markdown","422389e1":"markdown","c21e9996":"markdown","545a9c6d":"markdown","e0927b86":"markdown","1cb8cc0d":"markdown","dfb498ad":"markdown","6b25d5a1":"markdown"},"source":{"6a4da124":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom collections import Counter\nfrom plotly.subplots import make_subplots\nfrom sklearn.preprocessing import LabelEncoder\nfrom plotly.figure_factory import create_2d_density as density","b963571b":"df = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","ea38d024":"px.pie(df, 'gender')","e65366f5":"px.pie(df, 'lunch')","0892a5ac":"px.pie(df, 'test preparation course')","57f84207":"count = Counter(df['race\/ethnicity'])\ndata = pd.DataFrame({'Ethnicity group':count.keys(), 'Number of students':count.values()})\npx.bar(data, 'Ethnicity group', 'Number of students')","6a83911c":"data = data.sort_values(by='Number of students', ascending=False)\npx.bar(data, 'Ethnicity group', 'Number of students')","e1ab95b6":"data = data.sort_values(by='Number of students', ascending=False)\npx.bar(data, 'Ethnicity group', 'Number of students', color='Number of students', title='Ethnicity group')","bbe6fac3":"count = Counter(df['parental level of education'])\ndata = pd.DataFrame({'Parental level of education':count.keys(), 'Number of students':count.values()})\npx.bar(data, 'Parental level of education', 'Number of students')","47de7ad6":"data = data.sort_values(by='Number of students', ascending=False)\npx.bar(data, 'Parental level of education', 'Number of students')","aef99cec":"data = data.sort_values(by='Number of students', ascending=False)\npx.bar(data, 'Parental level of education', 'Number of students', color='Number of students', title='Parental level of education')","931c0c7b":"px.scatter(df, 'math score', 'reading score')","d54abc97":"px.scatter(df, 'math score', 'reading score', color='gender')","95597810":"px.scatter(df, 'math score', 'reading score', color='race\/ethnicity')","c779523d":"px.scatter(df, 'math score', 'reading score', color='lunch')","dca20e36":"px.scatter(df, 'math score', 'reading score', color='test preparation course')","606cb848":"px.scatter(df, 'math score', 'reading score', color='parental level of education')","880b1cc2":"fig = make_subplots(rows=2, cols=2, subplot_titles=['gender', 'lunch', 'race\/ethnicity', 'test preparation course'])","50d7ef1c":"fig.update_layout(title_text='Reading and writing scores')","f98e0763":"le = LabelEncoder()\nfig.add_trace(go.Scatter(x=df['reading score'], y=df['writing score'], mode='markers', \n                         marker=dict(color=le.fit_transform(df['gender']))), 1, 1)","86f23818":"fig.add_trace(go.Scatter(x=df['reading score'], y=df['writing score'], mode='markers', \n                         marker=dict(color=le.fit_transform(df['lunch']))), 1, 2)","a73e4e69":"fig.add_trace(go.Scatter(x=df['reading score'], y=df['writing score'], mode='markers', \n                         marker=dict(color=le.fit_transform(df['race\/ethnicity']))), 2, 1)\nfig.add_trace(go.Scatter(x=df['reading score'], y=df['writing score'], mode='markers', \n                         marker=dict(color=le.fit_transform(df['test preparation course']))), 2, 2)","2897da15":"fig = px.treemap(df, path=['gender'], color='reading score')\nfig.show()","7ada763f":"px.treemap(df, path=['gender', 'test preparation course'], color='reading score')","0d6422af":"px.treemap(df, path=['gender', 'test preparation course', 'lunch'], color='reading score')","24020b11":"px.treemap(df, path=['lunch'], color='writing score')","b615962f":"px.treemap(df, path=['lunch', 'test preparation course'], color='writing score')","c24a96f3":"px.treemap(df, path=['lunch', 'test preparation course', 'parental level of education'], color='writing score')","372a9abb":"px.sunburst(df, path=['test preparation course'])","6325eb26":"px.sunburst(df, path=['test preparation course', 'lunch'])","7b8e2b55":"px.sunburst(df, path=['test preparation course', 'lunch', 'gender'], color='reading score')","d5e4b529":"density(df['math score'], df['writing score'])","1df54628":"density(df['math score'], df['reading score'])","ae538e1d":"density(df['reading score'], df['writing score'])","c26f6997":"## Race\/ethnicity","cfbab8b4":"## Lunch","6b5c6e02":"Finally, we colour-code the bars and add a title to the graph.","7b16bfdf":"To give a more informative view, we can now sort 'data' into descending order, starting with the most commonly used category and making our way down to the least common one.","e22e8542":"Now we take a look at what education levels the student's parents have achieved. A takeaway from this could be that students with parents who have a college degree may have slightly higher exam scores than those with parents who have soley finished high school.","dd66c1b1":"We can do another example of these.","98a516bc":"At the most complex level we will do here, we will now add a third layer to our visualisations: 'lunch'. The graph shows that those who have standard lunches have roughly better performance in reading than those with the free\/reduced meals.","61adb84f":"Now we come across something very intriguing: the reading and writing scores are very interlinked. Analysing the chart below, we can see a much clearer and stronger correlation between these two variables than we saw in the rest. In particular, there seem to be three clusters that the data is grouped into: one in 54.5, another one in 64.5 and the strongest one with 74.5 for each variable.","239d65e5":"# Treemap\n#### What is this chart?\n* Treemaps help us visualise data by displaying nested rectangles.\n\n#### When is it useful?\n* They can be used whenever you have categorial features and you wish to determine their quantity, or how they relate to a numerical feature.\n\n#### How do you use it?\n* You use this through plotly express's 'treemap' function, specifying firstly the dataframe you are working upon, then the 'path' attribute being the various variables within the data you wish to display, and you can also use the 'color' parameter to show how the features relate to a numerical feature.","8ae7435b":"Though, things get interesting whenever we use multiple features. The plot shows us that there are more students who have not completed the preparation course than those who have, while also stating that there are more pupils with standard rather than free\/reduced lunches.","864d967a":"To make it even more interesting, we now add the 'gender' variable as our last on the 'path' attribute, with the final touch being a colour-coded display showing the reading score of each variable.","3ffff6e9":"The data is once again split further into binary variables, this time being the 'test preparation course'.","7b7ad523":"Now we try to distinguish the difference in scores between the students who have standard lunches and those who have free\/reduced ones. Due to an imbalance of data (more 'standard lunch' samples than the rest), it may be difficult to recognise a straightforward connection between the people who eat lunches differently and their scores, so I cannot come to a conclusion with this data. We can, however, see this change further on in the notebook as we use graphs more suited to these features.","99fd9f27":"# Subplots\n#### What is this chart?\n* Subplots are charts which allow you to fit in multiple graphs beside each other.\n\n#### When is it useful?\n* These plots can be commonly used whenever you want to compare the results of different charts or you wish to summarise the conclusions of your previous graphs.\n\n#### How do you use it?\n* Subplots are created by the 'make_subplots' function from plotly express, passing in the number of rows and columns, as well as the titles for the subplots if you wish. You can then add a graph to your plots using 'add_trace'. I create my charts for subplots through plotly graph_objs (abbreviated to 'go'), as it is quite difficult to use plotly express for this.","47d86f2f":"Next, we do the same thing with our 'race\/ethnicity' feature. The chart here shows no clear difference between the various ethnicities in relation to their scores.","836e5067":"# Pie graphs\n#### What is this chart?\n* Pie charts display various categories within data by representing them as slices of a circle, like a pizza. They can show how much of each variable there is in your dataset in relation to the others.\n\n#### When is it useful?\n* Pie graphs are used when there is a small amount of unique categories in the feature, which is done so that it can be easier to visualise them.\n\n#### How do you use it?\n* You use this chart with plotly express's 'pie' function, with the first parameter being the dataframe of the feature, and the second parameter being the feature you wish to visualise.","a2c3b551":"At its most basic step, we have plotted out how much of the various categories in the 'race\/ethnicity' feature occur. This is done by firstly finding the distribution of the feature using collections' 'Counter' function, then by sorting out its contents into a dataframe called 'data' and finally defining it into our plotting function.","96d1dd12":"## Test preparation course","bd873a76":"On the most basic level, we can see the difference in reading scores between the two genders. Hovering over the rectangles and recognising the difference in colour, we see that the females perform higher than the males in the reading.","eb31f2ec":"To get a bit more familiar with how this works, we can also see the 'lunch' feature being added into the second plot.","8b5c6dd9":"# Scatter plots\n#### What is this chart?\n* Scatter plots are graphs that present two numerical features by representing each pair of values using a circle.\n\n#### When is it useful?\n* These types of plots are used for numerical variables, as they have a wide range of unique values which can be scattered, while categorical variables have less options and are harder to determine their correlation.\n\n#### How do you use it?\n* Just as with the bar charts, the scatter plots are used by specifying the first parameter as the dataframe you desire to work on, followed by the names of the two features in the dataset that you want to scatter. The function we use here is plotly express's 'scatter'.","3b244d3b":"This time we analyse writing scores and the starting feature is 'lunch', which shows us (like the last chart) that students with standard lunches do better than those with free\/reduced ones.","38e31214":"Furthermore, we sort the bars out into descending order.","5e149397":"### To learn more about choropleth maps and time series data, you can check out my notebook:\nhttps:\/\/www.kaggle.com\/dabawse\/introduction-to-choropleth-maps-and-time-series","318b81c5":"The next chart shows us that the free\/reduced meals in the school are a little over a third, while the rest have standard lunches.","15e69c35":"Here we can see the layout of our plots. We will analyse the connection between the reading and writing scores using the scatter function. The various feature names are seen above the graphs we will plot, along with the overall title 'Reading and writing scores' able to be seen at the top.","77d15fb8":"Next, we will now add our first chart. We can see here that I have encoded the 'gender' with a LabelEncoder so that the program can understand it, because it needs to be converted from categorical to numerical. The scatter plot we saw before which displays the reading and writing scores, as well as their connection to gender is shown here.","1d79279f":"<img src=\"https:\/\/3.bp.blogspot.com\/-Y1sdl8xLBPY\/WVPm5-sUULI\/AAAAAAAAaOw\/PeZ3hGtQh_ogzEPyfcjys98VAJta-qc0QCEwYBhgL\/s320\/ZyAGpCRUBh-Q_RGK7SsecNNHylV0SHhVbmJ_AEkCtuo.jpg\" width=\"450px\"\/>","f91afdf1":"## Parental level of education","1b1fa338":"We will be using the Student Exams dataset. Here is a preview:","52b010f9":"Now that we understand the mechanics of subplots, we can assemble all four together. I'd say those are some rather satisfying subplots, wouldn't you agree?","d526b399":"As a final touch, we can now add colour into our chart by specifying the 'colour' parameter in the 'bar' function to have the most frequent variables be yellow, the middle be purple and the least be blue. We also add in an 'Ethnicity group' title to make it even more informative.","1a6a50ca":"Here we plot the gender of the students, seeing that there are slightly more girls than boys by almost by 2 percent.","3bba1930":"# Density plot\n#### What is this chart?\n* The purpose of a density plot is related to that of a scatter plot. You take in two numerical features and you scatter them. However, the difference is that a density plot shows the most populated areas of your graph using various lines and shades, sort of like a contour map. Along with that, we can also display the distribution of each feature using a histogram.\n\n#### When is it useful?\n* The density plot is useful whenever you want to know the distribution of features and the most common samples across a 2D scatter graph.\n\n#### How do you use it?\n* The graph is used by specifying two numerical columns in the 'create_2d_density' function.","568d57a4":"## Lunch","289cbb43":"## Parental level of education","af589d16":"Using one variable (test preparation course), the sunburst is basically a pie chart.","21870c4c":"Here we compare the students who have done the test preparation against those who have not. Our conclusions are that, while it is perfectly possible for a person to do well on the test without preparation, pupils who have completed the preparation perform on average at a higher level on their tests than those who have not.","dde2c68a":"To make it a bit more complex, we can add the 'test preparation course' to be nested into our 'gender' rectangles. The data shows us that on average, those who perform the best at reading are girls who have finished their preparation course, while those who have done the worst are boys that have not done the course.","bb6024ea":"Let's do another example.","2ebd15a3":"## Race\/ethnicity","99d3aa86":"Firstly, we create subplots by defining two rows and two columns. The four feature names we will work with are also defined for the titles.","976fbd27":"Again, we plot out the distribution of the feature using the 'Counter' function, followed by visualising it using a bar chart.","9ff04096":"However, we can do something very interesting with this data. In addition to finding correlation, we can also determine whether the variables can classify another feature in the data. Here we can visualise the distinction between gender for the maths scores; boys being red and girls being blue. This is incredibly useful, as our takeaway from this plot is that the boys are better than the girls at maths, while the girls are better than the boys at reading.","d714b086":"Finally, we add in the 'parental level of education' feature as our final one. It tells us that the students with the worst writing scores have parents who only got a high school education, while the pupils with the best writing scores have parents who got college education. The higher the degree, the higher the marks.","bd9c1cdf":"# Bar charts","8935c598":"The final pie plot shows us that, again, a small bit over a third of pupils have completed the test preparation courses, while less than two thirds have not.","b7b0741a":"# Introduction to Visualisations with Plotly\nWelcome to my notebook, where today we will be exploring the fantastic plotly library and I will show you the different ways you can use it to make awesome data analyses.","1d0a03e2":"## Gender","b3d1dd77":"# Sunburst chart\n#### What is this chart?\n* The sunburst charts are similar to the treemaps, as they also visualise hierarchical data, using nested circles instead of rectangles.\n\n#### When is it useful?\n* As with the previous graph, the sunburt chart is used when displaying hierarchical data.\n\n#### How do you use it?\n* This graph is used by specifying the dataset and then specifying the 'path' attribute with the various nested features within the data.","6472eb34":"## Test preparation course","276c7c28":"Here we use a density plot to scatter the math and writing scores of the pupils. Our conclusions from this graph are that the most common writing scores are in the mid 70s, while the most common math scores are in the mid 60s. We can see this as we hover over the the darkest blue portion of the graph.","b08a5144":"### Description of features\n* **gender** - \"male\" or \"female\"\n* **race\/ethnicity** - Groups A, B, C, D and E\n* **parental level of education** - what type of education the student's parents have received: \"associate's degree\", \"bachelor's degree\", \"high school\", \"master's degree\", \"some college\" or \"some high school\"\n* **lunch** - type of meals that students have at school: \"standard\" or \"free\/reduced\"\n* **test preparation course** - whether they have completed the preparation for the test: \"completed\" or \"none\"\n* **math score** - numerical range of scores for maths tests\n* **reading score** - numerical range of scores for reading tests\n* **writing score** - numerical range of scores for writing tests","422389e1":"We see similar results as we plot out the math and reading scores of the pupils.","c21e9996":"#### What is this chart?\n* A bar chart displays categorical variables through rectangles which are next to each other.\n\n#### When is it useful?\n* Bar charts are practical for variables with multiple categories, as they can showcase them without overcrowding.\n\n#### How do you use it?\n* The function I use for this chart is plotly express's 'bar'. The neat thing about this is that the first parameter you enter is the dataframe you wish to work on, therefore all you need to do next is provide the names for two of the dataframe's features you want to plot.","545a9c6d":"### Thank you for reading my notebook.\n### If you enjoyed this notebook, please upvote it and give feedback.","e0927b86":"## Gender","1cb8cc0d":"<img src=\"https:\/\/th.bing.com\/th\/id\/Re2b554968bfb407bbe4c97fcf72ca7ab?rik=YBT0Pg%2bsl%2f9Gug&riu=http%3a%2f%2fwww.liyanatech.com%2fwp-content%2fuploads%2f2014%2f11%2fdata_analysis.jpg&ehk=3MVoPtiVUhWyphOFkvPXrZ579l%2fZu4zXGpTbLI9hl%2bM%3d&risl=&pid=ImgRaw\" width=\"500px\"\/>","dfb498ad":"Here we have a basic scatter plot. We have used our 'df' function to scatter the maths and reading scores of our students.","6b25d5a1":"In summary, plotly is an amazing tool for EDA which can provide us with a wide range of charts to help us solve various problems. I hope this notebook was helpful in showing you the incredible opportunities of plotly."}}