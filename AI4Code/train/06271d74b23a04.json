{"cell_type":{"d76172f7":"code","f6340b20":"code","7ba4f800":"code","1927c464":"code","d1144488":"code","e3814d1c":"code","095787e5":"code","2ae8533d":"code","66c9cc98":"code","39d6f8f4":"code","faea0903":"code","7473d7a4":"code","cb847780":"code","b4c2d0ea":"code","63e7367d":"code","047b9a0e":"code","b1752e7d":"code","09e0d45e":"code","99d1591b":"code","281cf076":"code","cba0d535":"code","9a446403":"code","c9fc6fa8":"markdown","f540d458":"markdown","1ea1d7c6":"markdown","877cd84a":"markdown","89103732":"markdown","6688c055":"markdown","9de93d49":"markdown","c3a58386":"markdown","602a762f":"markdown","dafba941":"markdown","2c9c49a8":"markdown","12716c1b":"markdown","95c17300":"markdown","9c3d8426":"markdown","36f11461":"markdown","356fe9db":"markdown","533a1cad":"markdown"},"source":{"d76172f7":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","f6340b20":"def load_persona():\n    \"\"\"\n    Returns\n    --------\n    Dataframe\n    \"\"\"\n    return pd.read_csv(\"..\/input\/projectgamepersona\/persona.csv\")\n\ndf = load_persona()","7ba4f800":"def check_df(dataframe, head=5, quan=False):\n    \"\"\"\n    A function that describe and summary the data functionally\n\n    Parameters\n    ----------\n    dataframe: Pandas dataframe\n    head: Showing the head of the data (default value is 5)\n    quan: Default is False. If quan set to the True, it will show the quantile information for the dataframe\n\n    Returns\n    -------\n    Returns the dataframe information like shape, tail, head, null variables\n\n    Examples\n    ----------\n    import pandas as pd\n\n    df = pd.read_csv(\"train.csv\")\n    check_df(df, head=10)\n\n    \"\"\"\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(head))\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\n    if quan:\n        print(\"##################### Quantiles #####################\")\n        print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ncheck_df(df, head=10, quan=True)","1927c464":"# Showing the number of unique for each column\nfor col in df.columns:\n    \"\"\"\n\n    Returns\n    --------\n    SEX: Number of Unique: 2\n    PRICE: Number of Unique: 6\n    SOURCE: Number of Unique: 2\n    COUNTRY: Number of Unique: 6\n    AGE: Number of Unique: 46\n\n    \"\"\"\n\n    print(f\"Column: {df[col].name},  Number of Unique: {df[col].nunique()}, Unique Values: {df[col].unique()}\")","d1144488":"# Defining categorical columns\ncat_col = [col for col in df.columns if df[col].dtypes == \"O\"]\n# Defining numerical columns\nnum_col = [col for col in df.columns if df[col].dtypes != \"O\"]\n# Defining numerical columns with cardinality\nnum_but_cat = [col for col in df.columns if df[col].nunique() < 10 and df[col].dtypes != \"O\"]\n# Defining categorical columns with cardinality\ncat_but_car = [col for col in df.columns if df[col].nunique() > 20 and df[col].dtypes == \"O\"]\n\ncat_cols = cat_col + num_but_cat\ncat_cols = [col for col in cat_col if col not in cat_but_car]\n\ndef cat_summary(dataframe, col_name, plot=False):\n    print(pd.DataFrame({col_name: dataframe[col_name].value_counts(),\n                        \"RATIO\": 100 * dataframe[col_name].value_counts() \/ len(dataframe)}))\n    print(\"########### FREQUENCY ###############\")\n    if plot:\n        sns.countplot(x=dataframe[col_name], data=dataframe)\n        plt.show()\n\nfor col in cat_cols:\n    cat_summary(df, col, plot=True)","e3814d1c":"\"\"\"\nOptinal\n-------\nnum_price_count = df[\"PRICE\"].value_counts()\nnum_price_count\n\"\"\"\n\ndef target_summary_with_cat(dataframe, target, categorical_col):\n    print(pd.DataFrame({\"TARGET_COUNT\": dataframe.groupby(target)[categorical_col].count()}), end=\"\\n\\n\\n\")\n\ntarget_summary_with_cat(df, \"PRICE\", \"PRICE\")","095787e5":"def target_value_counts_with_cat(dataframe, categorical_col, target):\n    return pd.DataFrame({\"TARGET_VALUE_COUNTS\": dataframe.groupby(categorical_col)[target].value_counts()})\n\ntarget_value_counts_with_cat(df,\"COUNTRY\", \"PRICE\").head(10)","2ae8533d":"target_summary_with_cat(df, \"COUNTRY\", \"PRICE\")","66c9cc98":"target_value_counts_with_cat(df, \"PRICE\" , \"SOURCE\")","39d6f8f4":"def target_mean_with_cat(dataframe, target, categorical_col):\n    return pd.DataFrame({\"TARGET_ MEAN\": dataframe.groupby(target)[categorical_col].mean()})\n\ntarget_mean_with_cat(df,\"COUNTRY\", \"PRICE\")","faea0903":"target_mean_with_cat(df, \"SOURCE\", \"PRICE\")","7473d7a4":"def breakdown_mean_with_num(dataframe, target1, target2, numerical_col):\n    return dataframe.groupby([target1, target2]).agg({numerical_col: \"mean\"})\n\nbreakdown_mean_with_num(df,\"COUNTRY\", \"SOURCE\", \"PRICE\")","cb847780":"pd.set_option('display.max_columns', 10)\npd.set_option('display.max_rows', 999)\n\ndef breakdown_average(dataframe, target, numerical_col):\n    return dataframe.groupby(target).agg({numerical_col: \"mean\"})\n\n\nms_2 = breakdown_average(df, target=[\"COUNTRY\", \"SOURCE\", \"SEX\", \"AGE\"], numerical_col=\"PRICE\")\nms_2.head(10)","b4c2d0ea":"agg_df = ms_2.sort_values(\"PRICE\", ascending=False)\nagg_df.head()","63e7367d":"agg_df = agg_df.reset_index()\n# Let's check the indexes\nagg_df.index\n# Let's check the columns\nagg_df.columns","047b9a0e":"def age_set_interval(dataframe,target, bins=[], labels=[]):\n    \"\"\"\n    Convert the numerical age column to a categorical column\n    Set interval for age\n     - \u20180_18', \u201819_23', '24_30', '31_40', '41_70'\n    \"\"\"\n    dataframe['AGE_CAT'] = pd.cut(dataframe[target], bins=bins, labels=labels, right=False)\n    dataframe['AGE_CAT'] = dataframe['AGE_CAT'].astype(\"object\")\n    return dataframe\n\nagg_df = age_set_interval(agg_df, \"AGE\", bins=[0,18,23,30,40,70], labels= ['0_18', '19_23', '24_30', '31_40', '41_70'])","b1752e7d":"# Let's check the updated dataframe\nagg_df.head()","09e0d45e":"def CategorizeColumns(dataframe, cat_cols, col_name1, col_name2, col_name3, col_name4):\n\n    for i in cat_cols:\n        dataframe[i] = dataframe[i].str.upper()\n    \n    dataframe[\"customers_level_based\"] = dataframe[col_name1]  + \"_\" + dataframe[col_name2] + \"_\" + dataframe[col_name3] + \"_\" + dataframe[col_name4]\n    return dataframe.groupby(\"customers_level_based\").mean().reset_index()\n\ndf_customer_level = CategorizeColumns(agg_df, cat_cols=cat_cols, col_name1=\"COUNTRY\", col_name2=\"SOURCE\", col_name3=\"SEX\", col_name4=\"AGE_CAT\")\ndf_customer_level.drop([\"AGE\"], axis=1, inplace=True)\n\n# Sorting Price column with descending order\ndf_customer_level.sort_values(\"PRICE\", ascending=False)\ndf_customer_level.head(15)","99d1591b":"df_customer_level[\"SEGMENT\"] = pd.qcut(df_customer_level[\"PRICE\"], 4, labels=['D','C','B','A'])\ndf_customer_level[\"SEGMENT\"].value_counts()","281cf076":"df_segment_c = df_customer_level[df_customer_level['SEGMENT'] == \"C\"]\ndf_segment_c.head()","cba0d535":"new_user = 'TUR_ANDROID_FEMALE_31_40'\ndf_customer_level[df_customer_level['customers_level_based'] == new_user]","9a446403":"new_user_2 = 'FRA_IOS_FEMALE_31_40'\ndf_customer_level[df_customer_level['customers_level_based'] == new_user_2]","c9fc6fa8":"##### Question 1: read persona.csv and show the general view of the dataset","f540d458":"##### Question 5 - How many sales were made each PRICE for each COUNTRY ?","1ea1d7c6":"## GAME INDUSTRY LEVEL BASED CUSTOMER SEGMENTATION\n\nA game company wants to create level-based new customer definitions (personas) by using some features of its customers, \nand to create segments according to these new customer definitions and\nto estimate how many the new customers can earn on average according to these segments.\n\n#### MISSION 1 - Please provide necessary answers for 10 questions below..","877cd84a":"### Mission 5\n\nPlease change the data type of AGE column and add as new column for agg_df dataframe\n\n\u25aa Age numerical column needs to change categorical column\n\n\u25aa Please provide interval for new age column\n\n\u25aa For instance: \u20180_18', \u201819_23', '24_30', '31_40', '41_70'","89103732":"### Mission 2 \n- What is the avereage profit for COUNTRY, SOURCE, SEX, AGE breakdown ?","6688c055":"##### Question 4 - How many sales were made for each PRICE ? ","9de93d49":"### Mission 6\n\n##### Identify new level-based customers (personas).\n\n\u25aa Define new level-based customers (personas) and add them as column to the dataset.\n\n\u25aa Name of the new variable needs to be added like customers_level_based\n\n\u25aa You need to create the customers_level_based variable by combining the observations from the output from the previous mission.","c3a58386":"##### Question 7 - What is the sales numbers for each SOURCE type ?","602a762f":"### Mission 4\n\n- Please change the indexes (Because the column name referred as index for the output of the misson 3 except PRICE column)\n","dafba941":"##### Question 8 - What is the PRICE means for each COUNTRY ?","2c9c49a8":"##### Question 2 - How many UNIQUE SOURCE do we have ? And, what is the frequency of the SOURCE ?\n##### Question 3 - How many UNIQUE PRICE do we have ? ","12716c1b":"### Mission 7 \n\n##### Please apply segmentation for new customers\n\n\u25aa Split new customers to 4 segmentation group for PRICE column (ex: USA_ANDROID_MALE_0_18) \n\n\u25aa Please assign segmentation names or groups and add to SEGMENT column\n\n\u25aa Please describe segmentation groups (Group by for SEGMENT and take MEAN, MAX and SUM of the groups according to PRICE.\n\n\u25aa Please analyse the C segmentation group (Extract C ssegmentation group and analyse it).","95c17300":"##### Question 10 - What is the PRICE means for COUNTRY-SOURCE breakdown ?","9c3d8426":"### Mission 3\n\n- To better see the output from the previous mission, use the sort_values method in descending order.\nApply according to PRICE.\n- Save the output as agg_df","36f11461":"##### Question 6 - How many profit were made for each COUNTRY ? ","356fe9db":"##### Question 9 - What is the PRICE means for each SOURCE ?","533a1cad":"### Mission 8\n\n- Please add new user and segment the new user.\n"}}