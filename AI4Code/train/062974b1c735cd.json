{"cell_type":{"b664bb17":"code","b251dc8b":"code","4eb46cdf":"code","1c4b73e8":"code","36762a51":"code","41a86f36":"code","b3b7bd9d":"code","83edfae3":"markdown","34989c7b":"markdown","890fd0a9":"markdown","e386d050":"markdown","c9b883a3":"markdown"},"source":{"b664bb17":"from numpy import mean\nfrom numpy import std\nfrom pandas import read_csv\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.ensemble import RandomForestClassifier","b251dc8b":"def load_dataset(full_path):\n\tdata = read_csv(full_path)\n\tdata = data.values\n\tX, y = data[:, :-1], data[:, -1]\n\ty = LabelEncoder().fit_transform(y)\n\treturn X, y","4eb46cdf":"path = '..\/input\/glass\/glass.csv'\n\nX, y = load_dataset(path)\nprint(X[:2])","1c4b73e8":"weights = {0:1.0, 1:1.0, 2:2.0, 3:2.0, 4:2.0, 5:2.0}\nmodel = RandomForestClassifier(n_estimators=1000, class_weight=weights)","36762a51":"def evaluate_model(X, y, model):\n\tcv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n\tscores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\treturn scores","41a86f36":"scores = evaluate_model(X, y, model)","b3b7bd9d":"print('Mean Accuracy: %.3f, Std Deviation:%.3f' % (mean(scores), std(scores)))","83edfae3":"# Accuracy","34989c7b":"# Dataset","890fd0a9":"# Glass - Multi Class Imbalanced Classification","e386d050":"# Model","c9b883a3":"# Evaluation"}}