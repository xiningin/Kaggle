{"cell_type":{"0a9b3b57":"code","fce95bc5":"code","6d95071d":"code","92e44d54":"code","0c162203":"code","4e6ae923":"code","249d867e":"code","ce290613":"code","6fd4508c":"code","320a6737":"code","5fa4dba7":"code","cbb275c1":"code","ef175263":"code","5d84bf7e":"code","d5f9bd0e":"code","f06904de":"code","254c08e0":"code","3de41364":"code","2adccf43":"code","140e32a7":"markdown","a8f24860":"markdown","a68fa52f":"markdown"},"source":{"0a9b3b57":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","fce95bc5":"data = pd.read_csv('..\/input\/movie_metadata.csv')\ndata.sample(3)","6d95071d":"data.shape # N\u00famero de observa\u00e7\u00f5es","92e44d54":"col = ['title_year','duration','budget','num_critic_for_reviews','movie_facebook_likes','num_voted_users','gross','imdb_score']","0c162203":"data = data[col]\ndata.shape # N\u00famero de observa\u00e7\u00f5es","4e6ae923":"data.sample(3)","249d867e":"# Dados Faltantes\ntotal = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()*100\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Porcentagem'])\nmissing_data.head(20)","ce290613":"# Remover Observac\u00f5es com algum dado ausente\ndata = data.dropna()\nprint(data.isnull().sum().max())\ndata.shape","6fd4508c":"data.sample(5)","320a6737":"sum(data['movie_facebook_likes'] == 0)","5fa4dba7":"import seaborn as sns\nsns.boxplot(x=data['movie_facebook_likes'] )","cbb275c1":"import seaborn as sns\n \nsns.set(style=\"ticks\")\nsns.pairplot(data[0:50], kind=\"scatter\", plot_kws=dict(s=80, edgecolor=\"white\", linewidth=2.5))\n","ef175263":"from numpy import array\nfrom numpy import mean\nfrom numpy import cov\nfrom numpy.linalg import eig\n\nA = data\nM = mean(A.T, axis=1)\n# center columns by subtracting column means\nC = A - M\n# calculate covariance matrix of centered matrix\nV = cov(C.T)","5d84bf7e":"# eigendecomposition of covariance matrix\nvalues, vectors = eig(V)\nprint(values)","d5f9bd0e":"pd.DataFrame(data=[values], columns=[1,2,3,4,5,6,7,8], index=['CP'])","f06904de":"print(vectors.shape)\nprint(vectors)","254c08e0":"pd.DataFrame(data=vectors, columns=[1,2,3,4,5,6,7,8], index=[1,2,3,4,5,6,7,8])","3de41364":"values_perc = values*100\/sum(values)\npd.DataFrame(data=[values_perc], columns=[1,2,3,4,5,6,7,8], index=['CP %'])","2adccf43":"# project data\nimport matplotlib.pyplot as plt\nP = vectors.T.dot(C.T)\nprint(P.shape)\nrange = 50\nplt.plot(P[0,0:range], P[1,0:range], 'o', markersize=6, color='blue', alpha=0.5, label='Classe 1')\nplt.plot(P[0,range:range*2], P[1,range:range*2], '^', markersize=7, color='red', alpha=0.5, label='Classe 2')\nplt.xlabel('CP1 91,1%')\nplt.ylabel('CP2 8,8%')\nplt.legend()\nplt.title('Componentes Principais')\n\nplt.show()","140e32a7":"> Atributos num\u00e9ricos selecionados\n> \n* budget\n* title_year\n* num_critic_for_reviews\n* imdb_score\n* movie_facebook_likes\n* num_voted_users\n* gross\n* duration","a8f24860":"**An\u00e1lise de Componentes Principais**","a68fa52f":"> Normalizar dados"}}