{"cell_type":{"adfe9ff9":"code","19dc9425":"code","f14f50c2":"code","e2288970":"code","bb8a4496":"code","6a960c71":"code","2a7b6beb":"code","c8d0584e":"code","ff58af59":"code","f88f6326":"code","d713d558":"code","50c53c47":"code","a49c5ca6":"code","17b92fc2":"code","657f8319":"code","df858f29":"code","b4bbf08d":"code","82993c8e":"code","0bbdf32c":"code","6c4f8303":"code","fe82a331":"code","39f0e6bb":"code","83d177ff":"markdown","a24e4c89":"markdown","7c924246":"markdown","90190fea":"markdown","4fe91934":"markdown","0d7a431e":"markdown","35a9b0ec":"markdown","33a5c2cc":"markdown"},"source":{"adfe9ff9":"import functools\nimport os\n\nfrom matplotlib import gridspec\nimport matplotlib.pylab as plt\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow_hub as hub","19dc9425":"print(\"TF Version: \", tf.__version__)\nprint(\"TF-Hub version: \", hub.__version__)\nprint(\"Eager mode enabled: \", tf.executing_eagerly())\nprint(\"GPU available: \", tf.test.is_gpu_available())","f14f50c2":"def crop_center(image):\n  \"\"\"Returns a cropped square image.\"\"\"\n  shape = image.shape\n  new_shape = min(shape[1], shape[2])\n  offset_y = max(shape[1] - shape[2], 0) \/\/ 2\n  offset_x = max(shape[2] - shape[1], 0) \/\/ 2\n  image = tf.image.crop_to_bounding_box(\n      image, offset_y, offset_x, new_shape, new_shape)\n  return image\n\n@functools.lru_cache(maxsize=None)\ndef load_image(image_url, image_size=(256, 256), preserve_aspect_ratio=True):\n  \"\"\"Loads and preprocesses images.\"\"\"\n  # Cache image file locally.\n  image_path = tf.keras.utils.get_file(os.path.basename(image_url)[-128:], image_url)\n  # Load and convert to float32 numpy array, add batch dimension, and normalize to range [0, 1].\n  img = plt.imread(image_path).astype(np.float32)[np.newaxis, ...]\n  if img.max() > 1.0:\n    img = img \/ 255.\n  if len(img.shape) == 3:\n    img = tf.stack([img, img, img], axis=-1)\n  img = crop_center(img)\n  img = tf.image.resize(img, image_size, preserve_aspect_ratio=True)\n  return img\n\ndef show_n(images, titles=('',)):\n  n = len(images)\n  image_sizes = [image.shape[1] for image in images]\n  w = (image_sizes[0] * 6) \/\/ 320\n  plt.figure(figsize=(w  * n, w))\n  gs = gridspec.GridSpec(1, n, width_ratios=image_sizes)\n  for i in range(n):\n    plt.subplot(gs[i])\n    plt.imshow(images[i][0], aspect='equal')\n    plt.axis('off')\n    plt.title(titles[i] if len(titles) > i else '')\n  plt.show()","e2288970":"output_image_size = 384 \ncontent_img_size = (output_image_size, output_image_size)\nstyle_img_size = (256, 256)","bb8a4496":"content_image_url = 'https:\/\/d16yj43vx3i1f6.cloudfront.net\/uploads\/2019\/10\/GettyImages-803849852.jpg'\nstyle_image_url = 'https:\/\/vertexpages.com\/wp-content\/uploads\/2019\/10\/farm.jpg'","6a960c71":"content_image = load_image(content_image_url, content_img_size)\nstyle_image = load_image(style_image_url, style_img_size)","2a7b6beb":"style_image = tf.nn.avg_pool(style_image, ksize=[3,3], strides=[1,1], padding='SAME')\nshow_n([content_image, style_image], ['Content image', 'Style image'])","c8d0584e":"import time\nstart_time = time.time()","ff58af59":"hub_handle = 'https:\/\/tfhub.dev\/google\/magenta\/arbitrary-image-stylization-v1-256\/2'\nhub_module = hub.load(hub_handle)","f88f6326":"outputs = hub_module(content_image, style_image)\nstylized_image = outputs[0]","d713d558":"# Stylize content image with given style image.\n# This is pretty fast within a few milliseconds on a GPU.\n\noutputs = hub_module(tf.constant(content_image), tf.constant(style_image))\nstylized_image = outputs[0]","50c53c47":"# Visualize input images and the generated stylized image.\n\nshow_n([content_image, style_image, stylized_image], titles=['Original content image', 'Style image', 'Stylized image'])","a49c5ca6":"end_time = time.time()\nprint('Time Taken = ', end_time-start_time)","17b92fc2":"content_image_url = 'https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/1d\/Taj_Mahal_%28Edited%29.jpeg\/1920px-Taj_Mahal_%28Edited%29.jpeg'\nstyle_image_url = 'https:\/\/joeburciaga.files.wordpress.com\/2013\/02\/tsunami-2698.jpg'","657f8319":"content_image = load_image(content_image_url, content_img_size)\nstyle_image = load_image(style_image_url, style_img_size)","df858f29":"style_image = tf.nn.avg_pool(style_image, ksize=[3,3], strides=[1,1], padding='SAME')\nshow_n([content_image, style_image], ['Content image', 'Style image'])","b4bbf08d":"start_time = time.time()","82993c8e":"hub_handle = 'https:\/\/tfhub.dev\/google\/magenta\/arbitrary-image-stylization-v1-256\/2'\nhub_module = hub.load(hub_handle)","0bbdf32c":"outputs = hub_module(content_image, style_image)\nstylized_image = outputs[0]","6c4f8303":"# Stylize content image with given style image.\n# This is pretty fast within a few milliseconds on a GPU.\n\noutputs = hub_module(tf.constant(content_image), tf.constant(style_image))\nstylized_image = outputs[0]","fe82a331":"# Visualize input images and the generated stylized image.\n\nshow_n([content_image, style_image, stylized_image], titles=['Original content image', 'Style image', 'Stylized image'])","39f0e6bb":"end_time = time.time()\nprint('Time Taken = ', end_time-start_time)","83d177ff":"Loading the TF Hub Module and performing the style transfer.","a24e4c89":"Using the below lines of codes the functions to load, format, preprocess and visualize images are defined. content_image, style_image, and stylized_image are expected to be 4-D Tensors with shapes [batch_size, image_height, image_width, 3]","7c924246":"Now, we will define the required sizes for the content images and style images. ","90190fea":"After importing, we will check the versions. tf.executing_eagerly() checks whether the current thread has eager execution enabled.","4fe91934":"# Neural Style Transfer","0d7a431e":"In this notebook, we present a very fast and effective way to neural style transfer in images using the TensorFlow Hub module. The TF-Hub module provides the pre-trained VGG Deep Convolutional Neural Network for style transfer. This approach takes less than four seconds to transfer style to a content image.","35a9b0ec":"Repeating the same steps for one more style transfer","33a5c2cc":"First of all, we will import the required libraries. To use the TensorFlow hub, we will import it as hub from tensorflow_hub. The functool library is used for higher-order functions that act on or return other functions. Make sure to install the if you are working on the local system. "}}