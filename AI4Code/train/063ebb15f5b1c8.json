{"cell_type":{"ee7af5e6":"code","dae432c4":"code","f853756b":"code","73c93afe":"code","a04ca944":"code","3e0cdac7":"code","6d68c60c":"code","d5a5af02":"code","d92ee23e":"code","6b474c56":"code","1da63549":"code","c1b12402":"code","0e275d68":"code","282190b4":"code","f4955f06":"code","e872bc9b":"code","fc55d92a":"code","371c239e":"code","a40e0332":"code","da3738f1":"code","07c3653f":"code","c97fa200":"code","af24a85a":"code","e7309707":"code","73aac3cf":"code","2f7ee958":"code","4a89c4e6":"code","5be25c35":"code","e5064766":"markdown","ca95d772":"markdown","ab16c01d":"markdown","2951f301":"markdown","3215a96f":"markdown","eb8b9690":"markdown","a67ac38d":"markdown"},"source":{"ee7af5e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dae432c4":"!pip install Faker \n","f853756b":"from faker import Faker","73c93afe":"# Create fake data using Faker\nfake_data = Faker()","a04ca944":"# Let's create a list of 200 fake names first\ndef create_names(n):\n    name = []\n    for _ in range(0, n):\n        name.append(fake_data.name())\n    return name","3e0cdac7":"name = create_names(200)","6d68c60c":"# Check the first 10 results\nname[:10]","d5a5af02":"# Create a list of countries\ndef create_country(n):\n    nation = []\n    for _ in range(0, n):\n        nation.append(fake_data.country())\n    return nation","d92ee23e":"country = create_country(200)","6b474c56":"country[:10]","1da63549":"# Create a list of age from 21 to 98 (integers)\nage = np.random.randint(21, 99, size = 200, dtype = 'int')","c1b12402":"# Create a list fo fake dates\ndef create_date(n):\n    member_since = []\n    for _ in range(0, n):\n        member_since.append(fake_data.date_this_century())\n    return member_since","0e275d68":"date = create_date(200)","282190b4":"# Create a list of fake jobs\ndef create_job(n):\n    job = []\n    for _ in range(0, n):\n        job.append(fake_data.job())\n    return job","f4955f06":"occupation = create_job(200)","e872bc9b":"# Create a list of fake credit card types\ndef create_credit(n):\n    card = []\n    for _ in range(0, n):\n        card.append(fake_data.credit_card_provider())\n    return card\n","fc55d92a":"card = create_credit(200)","371c239e":"# Create a fake location in US\ndef create_location(n):\n    location = []\n    for _ in range(0, n):\n        location.append(fake_data.local_latlng(country_code = \"US\"))\n    return location","a40e0332":"location = create_location(200)","da3738f1":"# Create a list of values 0 and 1, where 1 = married\nmarried = np.random.randint(0,2, size = 200)","07c3653f":"# Create a list of randomly picked races from the list of 4 races\ndef create_race(n):\n    race = []\n    for _ in range(0, n):\n        race.append(fake_data.random_element(elements = (\"White\", \"Hispanic\", \"Black\", \"Asian\")))\n    return race","c97fa200":"races = create_race(200)","af24a85a":"# Now create 3 list of integers just to have some numerical data\nsalary = np.random.randint(10000, 120000, size = 200, dtype = 'int')\nsavings = np.random.randint(0, 50000, size = 200, dtype = 'int')\nrent = np.random.randint(500, 3001, size = 200, dtype = 'int')","e7309707":"# Now, connect all columns into one data set\ndata = pd.DataFrame(list(zip(name, country, age, date, occupation, card, location, married,\n                            races, salary, savings, rent)),\n                   columns = ['Name', 'Place_of_Birth', 'Age', 'Member_Since', 'Job',\n                              'Card', 'Location', 'Married', 'Race', 'Salary', 'Savings',\n                              'Rent'])","73aac3cf":"# Let's see how the data looks like\ndata.head()","2f7ee958":"data.info()","4a89c4e6":"# Perfect, let's create another set based on time\ndatelist = pd.date_range('2010-01-01', periods = 200)\nsales = np.random.randint(100, 1100, size = 200, dtype = 'int')\nprofit = np.random.uniform(10000, 1000000, size = 200)\n\ndata2 = pd.DataFrame(list(zip(datelist, sales, profit)),\n                   columns = ['Date', 'Sales', 'Profit'])","5be25c35":"data2.head()","e5064766":"Everything seems to be correct","ca95d772":"### There you have it!","ab16c01d":"### Start creating  a fake dataset","2951f301":"## This kernel will show you how to create a fake data using Faker package.","3215a96f":"## For more, go to Faker Documentation","eb8b9690":"### Install the package on your machine","a67ac38d":"We are going to create multiple lists of variables of length 200 and then put it all in one data set."}}