{"cell_type":{"41cb2fcd":"code","b1d11d48":"code","230a3df6":"code","997207bd":"code","c66205fc":"code","bc3d5a74":"code","37461d26":"code","340c2aa0":"code","bbe7702b":"code","a5fffe7e":"code","5551085d":"code","7926dbd5":"code","91652c45":"code","09360d35":"code","c0739b4f":"code","dae7b182":"code","317cba59":"code","d3a932f5":"code","2228c359":"code","a63ed17d":"code","85b5d910":"code","4d58b27a":"code","21435535":"code","0624d528":"code","e86ced11":"code","f35fb57f":"code","cba45d1e":"code","d32be85d":"code","f855a4ba":"code","8e60c06a":"code","02b4127b":"code","009972ff":"code","5db01adb":"code","a533a210":"code","35f49a5b":"code","0e097b7d":"code","76055563":"code","b9900ca9":"code","1c243fd8":"code","cd835a18":"code","797512c9":"code","75fdd8a1":"code","61ecc662":"code","a4315fa6":"code","c26a99a6":"code","cec07d4e":"code","fe503cc0":"code","e34a9bfd":"code","090b7bfb":"code","1d67b3e1":"code","193e13a7":"code","3be93a11":"markdown","fadcb45c":"markdown","4c5f616d":"markdown","49c04082":"markdown","2351cd95":"markdown","0a7b0248":"markdown","0412d7c8":"markdown","be77853c":"markdown"},"source":{"41cb2fcd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n","b1d11d48":"%matplotlib inline","230a3df6":"wine=pd.read_csv('..\/input\/winequality-red.csv')","997207bd":"wine.head()","c66205fc":"wine.info()","bc3d5a74":"sns.barplot(x = 'quality', y = 'volatile acidity', data = wine)","37461d26":"sns.barplot(x = 'quality', y = 'fixed acidity', data = wine)","340c2aa0":"sns.barplot(x = 'quality', y = 'citric acid', data = wine)","bbe7702b":"sns.barplot(x = 'quality', y = 'residual sugar', data = wine)","a5fffe7e":"sns.barplot(x = 'quality', y = 'chlorides', data = wine)","5551085d":"sns.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine)","7926dbd5":"sns.barplot(x = 'quality', y = 'total sulfur dioxide', data = wine)","91652c45":"sns.barplot(x = 'quality', y = 'density', data = wine)","09360d35":"sns.barplot(x = 'quality', y = 'pH', data = wine)","c0739b4f":"sns.barplot(x = 'quality', y = 'sulphates', data = wine)","dae7b182":"sns.barplot(x = 'quality', y = 'alcohol', data = wine)","317cba59":"X = wine.drop('quality', axis = 1)\ny = wine['quality']","d3a932f5":"from sklearn.model_selection import train_test_split","2228c359":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","a63ed17d":"X_train.head()","85b5d910":"X_test.head()","4d58b27a":"y_train.head()","21435535":"from sklearn.linear_model import LinearRegression","0624d528":"lm=LinearRegression()","e86ced11":"lm.fit(X_train,y_train)","f35fb57f":"cnf=pd.DataFrame(lm.coef_,X_train.columns)\ncnf","cba45d1e":"predictions=lm.predict(X_test)","d32be85d":"y_test.head()","f855a4ba":"predictions","8e60c06a":"plt.scatter(y_test,predictions)","02b4127b":"from sklearn import metrics","009972ff":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","5db01adb":"from sklearn.metrics import classification_report,confusion_matrix","a533a210":"from sklearn.tree import DecisionTreeClassifier","35f49a5b":"dtree = DecisionTreeClassifier(max_depth=3)","0e097b7d":"dtree.fit(X_train,y_train)","76055563":"predictions = dtree.predict(X_test)","b9900ca9":"print(classification_report(y_test,predictions))","1c243fd8":"print(confusion_matrix(y_test,predictions))","cd835a18":"from IPython.display import Image  \nfrom sklearn.externals.six import StringIO  \nfrom sklearn.tree import export_graphviz\nimport pydot \n\nfeatures = list(wine.columns[:-1])\nfeatures","797512c9":"dot_data = StringIO()  \nexport_graphviz(dtree, out_file=dot_data,feature_names=features,filled=True,rounded=True)\n\ngraph = pydot.graph_from_dot_data(dot_data.getvalue())  \nImage(graph[0].create_png(),width=5000000,height=100)  ","75fdd8a1":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train, y_train)","61ecc662":"rfc_pred = rfc.predict(X_test)","a4315fa6":"print(confusion_matrix(y_test,rfc_pred))","c26a99a6":"print(classification_report(y_test,rfc_pred))","cec07d4e":"from sklearn.svm import SVC","fe503cc0":"model = SVC()","e34a9bfd":"model.fit(X_train,y_train)","090b7bfb":"predictions = model.predict(X_test)","1d67b3e1":"print(classification_report(y_test,predictions))","193e13a7":"print(confusion_matrix(y_test,predictions))","3be93a11":"# Random Forest","fadcb45c":"**After implementing all, it is safe to say that Random Forest Classifier is best to use for this dataset among all the above methods used.**","4c5f616d":"# Linear Regression","49c04082":"Tree Visualization\n","2351cd95":"Predict and Evaluate","0a7b0248":"# EDA","0412d7c8":"# SVM","be77853c":"# Decision Tree"}}