{"cell_type":{"b36112b9":"code","6ecac428":"code","4f86d1c6":"code","6712d4de":"code","d3073a89":"code","5a844e6f":"code","4ca4501f":"code","64619c9f":"code","0e2122ca":"code","209cd8ce":"code","bceebb3c":"code","316d1ebd":"code","a96227d7":"code","e5d9308e":"code","ee954693":"code","5a196cf2":"code","8340387c":"code","664aa1f9":"code","d1007e47":"code","141b4600":"code","e6732abc":"code","40ae1eaf":"code","f3408e33":"code","7b70185d":"code","a22c2c94":"code","561faea9":"code","4898103b":"code","6ab486f6":"code","1fefe148":"code","bc77ebbe":"code","61084418":"code","180682b7":"code","88599fd3":"code","b4f1105a":"code","5bfb003a":"code","6e40c4cc":"code","9060222d":"code","501c63f5":"markdown","67b51067":"markdown","dff85046":"markdown","7f8d5e37":"markdown","86f6d85b":"markdown","8d7ab13c":"markdown","24852659":"markdown","16d6528e":"markdown","169e91d1":"markdown","258d16e4":"markdown","2f0bb7f7":"markdown","cae83428":"markdown","1ed3de57":"markdown","2f5bdb76":"markdown","054f05c4":"markdown","afed73d5":"markdown","e458944c":"markdown","900d8fa5":"markdown","497ff33b":"markdown"},"source":{"b36112b9":"import pandas as pd","6ecac428":"df=pd.read_csv('..\/input\/space-missions-cleaned\/Space_Missions_Cleaned.csv')","4f86d1c6":"df.isnull().sum()# To find how many values are missing","6712d4de":"df['Rocket'] = df['Rocket'].fillna(df['Rocket'].mean())\n# filling out the missing rocket data by the mean of all missing data\n# fillna() allows us to fill the missing data","d3073a89":"df.isnull().sum()","5a844e6f":"df.head()","4ca4501f":"df=df.drop(['Location','Datum','Detail','DateTime','Launch_Site','Month','Count'],axis=1)\n# Dropping unnecessary columns\n# axis=1 means we are dropping columns, 0 would be for dropping rows","64619c9f":"df.head()","0e2122ca":"df['Status Mission'].value_counts()# Counts of unique values of Status Mission column","209cd8ce":"df['Status Mission'] =df['Status Mission'].apply(lambda x: x if x == 'Success' else 'Failure')\n# converting four unique values namely Success, Failure, Partial Failure and Prelaunch Failure \n# into just two values namely Success and Failure\ndf['Status Mission'].value_counts()","bceebb3c":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()# creating an object of labelEncoder class\ndf['Status Mission'] = encoder.fit_transform(df['Status Mission'])# fit_transform() method scales all the data\n                                                                  # and convertes it into 0 and 1.","316d1ebd":"df[:10]","a96227d7":"df['Status Mission'].value_counts()","e5d9308e":"encoder = LabelEncoder()\ndf['Status Rocket']=encoder.fit_transform(df['Status Rocket'])","ee954693":"df.head()","5a196cf2":"df['Status Rocket'].value_counts()","8340387c":"df=df.drop(['Country'],axis=1)","664aa1f9":"df.head()","d1007e47":"def onehot_encode(data, column):\n    dummies = pd.get_dummies(data[column])\n    data = pd.concat([data, dummies], axis=1)\n    data.drop(column, axis=1, inplace=True)\n    return data","141b4600":"df=onehot_encode(df,'Company Name')","e6732abc":"df.head()","40ae1eaf":"X=df.drop('Status Mission',axis=1)\ny=df['Status Mission']","f3408e33":"y.head()","7b70185d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7,random_state=101)","a22c2c94":"X_train.head()","561faea9":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nscaled_X_train=scaler.fit_transform(X_train)\nscaled_X_test=scaler.transform(X_test)","4898103b":"scaled_X_train","6ab486f6":"from sklearn.linear_model import LogisticRegressionCV\nlog_model=LogisticRegressionCV()\nlog_model.fit(scaled_X_train,y_train)","1fefe148":"y_pred=log_model.predict(scaled_X_test)\ny_pred","bc77ebbe":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\naccuracy_score(y_test,y_pred)","61084418":"confusion_matrix(y_test,y_pred)","180682b7":"print(classification_report(y_test,y_pred))","88599fd3":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(n_estimators=200,max_features='auto',random_state=101)\nrfc.fit(scaled_X_train,y_train)","b4f1105a":"rfc_pred=rfc.predict(scaled_X_test)","5bfb003a":"accuracy_score(rfc_pred,y_test)","6e40c4cc":"print(confusion_matrix(y_test,rfc_pred))","9060222d":"print(classification_report(y_test,rfc_pred))","501c63f5":"Similiarly, we convert Status Rocket into numerical form","67b51067":"### Importing the dataset","dff85046":"Segregating the X and y values. What that means is given X data columns, we have to predict y. So, y will only have 1 column and X should not have that column.","7f8d5e37":"## Feature Engineering","86f6d85b":"Next we need to make sure what columns would be ideal for a model to train. For example Detail,Datum has no need to be included in training data.","8d7ab13c":"# Space missions feature engineering and predictions\n\nWho does not love Space? \nThis DataSet was scraped from https:\/\/nextspaceflight.com\/launches\/past\/?page=1 and includes all the space missions since the beginning of Space Race (1957) \n\n![Image](https:\/\/i1.wp.com\/matmatch.com\/blog\/wp-content\/uploads\/2019\/03\/AdobeStock_80273384-compressor.jpeg?resize=2000%2C1125&ssl=1)","24852659":"So, 3360 rocket data is missing..","16d6528e":"There are no more null data","169e91d1":"When we try to build a model, we cant just pass null values to it. We need to fill those values somehow and feed it.","258d16e4":"Now we have to convert those values into numerical form. The simplest way to do this is make value success 1 and failure 0. LabelEncoder helps us to do just that.","2f0bb7f7":"We see that the acuuracy is 90%, but seeing the classification report we infer that 118 predictions for failure have been given wrong by our model. So this model is not good at all.","cae83428":"We can predict data for both company and country column, but I decided to drop Country Column.","1ed3de57":"using Logistic Regression Model for Prediction","2f5bdb76":"This model is somewhat better than the logistic regression model but its recall and f1-score is very low which means this is also a poor model.","054f05c4":"### Importing Libraries","afed73d5":"The thing we intend to predict here is whether the mission will fail or not. So we have to reduce four unique values into two unique values.","e458944c":"### One hot encoding the Country Column","900d8fa5":"Another very important thing is that we cant pass string values to a model for training. We have to convert it to some numerical form for a model to understand.","497ff33b":"Using StandardScalar to scale the data"}}