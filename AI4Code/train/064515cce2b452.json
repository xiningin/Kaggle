{"cell_type":{"8273d1d1":"code","af1ea8dd":"code","0ff76428":"code","0cf16d2c":"code","d429ead8":"code","07c0de3c":"code","3f98ee17":"code","17b10bdf":"code","fb19843a":"code","6dc98152":"code","c372d8e7":"code","e2684277":"code","c314f382":"code","ea92dff9":"code","55f293cc":"code","9ba2ffa5":"code","59765726":"code","20b862e8":"code","1683601e":"code","ab3c94a2":"code","bb33f832":"markdown"},"source":{"8273d1d1":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tcs-share\/TCS.NS (1).csv')\nnetflix.head()","af1ea8dd":"netflix=netflix[['Date','Close']]\nnetflix.head()","0ff76428":"netflix.info()","0cf16d2c":"!pip install pycaret-ts-alpha","d429ead8":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","07c0de3c":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","3f98ee17":"netflix = netflix.asfreq('d')\nnetflix.index","17b10bdf":"netflix.head()","fb19843a":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","6dc98152":"data=netflix.Close\ndata","c372d8e7":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","e2684277":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","c314f382":"## Create a model manually\nmodel = exp.create_model(\"exp_smooth\")\nmodel","ea92dff9":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","55f293cc":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","9ba2ffa5":"tuned_model = exp.tune_model(model,optimize = 'RMSE')\ntuned_model","59765726":"exp.predict_model(tuned_model)","20b862e8":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","1683601e":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","ab3c94a2":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","bb33f832":"# "}}