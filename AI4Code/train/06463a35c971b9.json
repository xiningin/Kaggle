{"cell_type":{"83b7cd94":"code","b12145af":"code","26f25bad":"code","87479575":"code","866449c8":"code","ef4ef5cf":"code","8cee8426":"code","76cbb4ec":"code","84950a62":"code","8523a2b2":"code","2071519b":"code","3d4bb226":"code","2799f320":"code","1996dd11":"code","9c554051":"code","e26d05bc":"code","7141ab02":"code","50bf896d":"code","8f01fd3a":"code","031616db":"code","a99a9bd3":"code","3731545d":"code","55567bda":"code","46dc5f5f":"code","f74cb73c":"code","4e3b63a4":"code","6adfb71b":"code","e325f2ef":"code","5b27c885":"code","b39f75bf":"markdown","d910a691":"markdown","73146960":"markdown","0d47c464":"markdown","9b91587d":"markdown","704de4bb":"markdown","5384a89c":"markdown","61b87f82":"markdown"},"source":{"83b7cd94":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b12145af":" \nimport plotly.graph_objs as go\nfrom textblob import TextBlob \nfrom statistics import *\nimport plotly.express as px\nimport string\nimport re\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nplt.style.use('ggplot')\nfrom nltk.corpus import stopwords\n ","26f25bad":"df=pd.read_csv('..\/input\/all-trumps-twitter-insults-20152021\/trump_insult_tweets_2014_to_2021.csv')","87479575":"df.head(10)","866449c8":"df.shape","ef4ef5cf":"df.info()","8cee8426":"df=df.dropna()","76cbb4ec":"#df.set_index('date',inplace=True)","84950a62":"df['date']=pd.to_datetime(df.date,format='%Y-%m-%d')","8523a2b2":"#number of trump tweets per year\ndf['date'].value_counts().resample('Y').sum()","2071519b":"df['date'].value_counts().resample('Y').sum().plot.line()","3d4bb226":"#number of trump tweets per month\ndf['date'].value_counts().resample('m').sum().plot.line()","2799f320":"df.head(5)","1996dd11":"df['target'].unique()","9c554051":"a=df['target'].value_counts().sort_values(ascending=False)\na.head(10)","e26d05bc":"media=df[df['target']=='the-media']","7141ab02":"a=media['insult'].value_counts()\n#top ten insults in media tweets\nb=a[:10]\npx.bar(media, x=b.values,y= b.index, color=b.index, height=500)","50bf896d":"#find and count mentions\n\n\ndef mentions(text):\n    line=re.findall(r'(?<=@)\\w+',text)\n    return \" \".join(line)\nmedia['mentions']=media['tweet'].apply(lambda x:mentions(x))\n\ntemp=media['mentions'].value_counts()[:][1:10]\n \npx.bar(media, x=temp.values,y= temp.index, color=temp.index, height=500)","8f01fd3a":"#treemap of mentions\nb = media['mentions'].value_counts()[:][1:11].index.tolist()\na = media['mentions'].value_counts()[:][1:11].tolist()\nrow = pd.DataFrame({'scenario' : []})\nrow[\"scenario\"] = b\nrow[\"Percentage\"] = a\nfig = px.treemap(row, path= [\"scenario\"], values=\"Percentage\",title='Tree of Mentions')\nfig.show()\n","031616db":"#4. Number of words in a tweet\n\nfig = plt.figure()\nax1 = plt.axes()\n\n#fig,ax1=plot(figsize=(15,5))\n#fig,ax1=plt.figure()\ntweet_len=df[df['target']==\"the-media\"]['tweet'].str.split().map(lambda x: len(x))\nax1.hist(tweet_len,color='#17C37B')\nax1.set_title('the-media tweets')","a99a9bd3":"\n#count and find hashtags\n\n\ndef find_hash(text):\n    line=re.findall(r'(?<=#)\\w+',text)\n    return \" \".join(line)\nmedia['hash']=media['tweet'].apply(lambda x:find_hash(x))\n\n#find top ten hashtags in media tweets\n\ntemp=media['hash'].value_counts()[:][1:11]\npx.bar(media, x=temp.values,y= temp.index, color=temp.index, height=500)","3731545d":"def clean_tweets(tweet):\n \n    tweet = re.sub(r':', '', str(tweet))\n    tweet = re.sub(r'\u201a\u00c4\u00b6', '', str(tweet))\n    tweet = re.sub('@[A-Za-z0\u20139]+', '', str(tweet))               \n    tweet = re.sub('#', '', str(tweet)) # Removing '#' hash tag\n    tweet = re.sub('https?:\\\/\\\/\\S+', '', str(tweet)) # Removing hyperlink\n    #replace consecutive non-ASCII characters with a space\n    tweet = re.sub(r'[^\\x00-\\x7F]+',' ',str(tweet))\n    tweet = str(tweet).lower()\n    tweet = re.sub('\\[.*?\\]', '', tweet)\n    tweet = re.sub('https?:\/\/\\S+|www\\.\\S+', '', tweet)\n    tweet = re.sub('<.*?>+', '', tweet)\n    tweet = re.sub('\\n', '', tweet)\n    tweet = re.sub('\\w*\\d\\w*', '', tweet)\n    tweet = re.sub(r'#','',tweet)\n    tweet = re.sub(r'RT[\\s]+','',tweet)\n    tweet = re.sub(r'[^\\w]', ' ', tweet)\n    tweet = re.sub('https', '', tweet)\n    tweet = re.sub('https ', '', tweet)\n    tweet = re.sub('co', '', tweet)\n    words = [w for w in tweet if w not in stopwords.words('english')]\n\n    return tweet\n\n# Applying the cleaning function to both test and training datasets\nmedia['tweet'] = media['tweet'].apply(lambda x: clean_tweets(x))","55567bda":"from wordcloud import WordCloud\nfig, ax1 = plt.subplots(1, 1, figsize=[26, 8])\nwordcloud1 = WordCloud( background_color='white',\n                        width=600,\n                        height=400).generate(\" \".join(media['tweet']))\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('Media',fontsize=40);","46dc5f5f":"## Sentimental Analysis \n\ndef getSubjectivity(tweet):\n    try:\n        return TextBlob(tweet).sentiment.subjectivity\n    except:\n        return None","f74cb73c":"# Create a function to get the polarity\ndef getPolarity(tweet):\n    try:\n        return  TextBlob(tweet).sentiment.polarity\n    except:\n        return None\n\ndef sentiment_calc(tweet):\n    try:\n        return TextBlob(tweet).sentiment\n    except:\n        return None","4e3b63a4":"# Create two new columns 'Subjectivity' & 'Polarity'\nmedia['subjectivity'] = media['tweet'].apply(getSubjectivity)\nmedia['polarity'] = media['tweet'].apply(getPolarity)\n\n#calculating sentimental\n\nmedia['sentiment'] = media['tweet'].apply(sentiment_calc)\n","6adfb71b":"def getAnalysis(score):\n    if score < 0:\n      return 'Negative'\n    elif score == 0:\n      return 'Neutral'\n    else:\n      return 'Positive'\n\nmedia['analysis'] = media['polarity'].apply(getAnalysis)","e325f2ef":"media.groupby('analysis')['analysis'].count().plot.bar()\nplt.title('Sentiment Analyisis for media tweets ')","5b27c885":"x=media.groupby('analysis')['analysis'].count()\nneutral=media[media['analysis']=='Neutral']['tweet'].count()\npositive=media[media['analysis']=='Positive']['tweet'].count()\nnegative=media[media['analysis']=='Negative']['tweet'].count()\n\nfig = go.Figure(data=[go.Pie(labels=[\"positivity\",\"negativity\",\"neutrality\"], values=[positive,negative,neutral])])\nfig.update_layout(title_text='Sentiment analysis of media tweets')\nfig.show()\n","b39f75bf":"we seeing that most of all trump tweets about media are negative ","d910a691":"# Doing sentimental analysis for media tweets","73146960":"we will do the same steps for ( democrats , hillary-clinton , trump-russia ,  joe-biden , the-new-york-times ,  cnn    ,   impeachment-inquiry  ,  adam-schiff    ,     2020-election) tweets  to do analysis and performing sentimental analysis \n","0d47c464":"# First we will talk about media tweets \n    ** Doing some analysis \n    ** performing sentimental analysis","9b91587d":"if you  find benefits in this netbook please upvote me , and if you have any question you are welcome in comments  ","704de4bb":"since there are no match missing data ,we will clearly remove just 2 samples","5384a89c":"clean media tweets","61b87f82":"# let's analysis top 10 targets that trump interested in "}}