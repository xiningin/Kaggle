{"cell_type":{"0a7838e0":"code","ba40a4a3":"code","e752fccc":"code","9ebf8fad":"code","6b85f352":"code","641c40e7":"code","db6b8f07":"code","c352b2ee":"code","af9f9d15":"code","9f81d991":"code","7a63a359":"code","df2fba80":"code","ec7c0d01":"code","41144753":"code","5474e39e":"code","d0daf127":"code","b3366d0a":"code","2311a48b":"code","a04d70b9":"code","2f5d6b63":"code","638b58e2":"code","7cf51709":"code","0d373b92":"code","31ae22e2":"code","167e4cd6":"code","d0068696":"code","80974fcf":"code","ca3c0bf4":"code","82fa640f":"markdown","603b5e63":"markdown","c13b9318":"markdown","5a391449":"markdown","83f2adbc":"markdown","49fe6450":"markdown","17cdbda6":"markdown"},"source":{"0a7838e0":"# data analysis and wrangling\nimport pandas as pd\nimport numpy as np\n\n# data visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5)\n\n# find NULL Data\nimport missingno as msno\n\n# ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","ba40a4a3":"# dataset\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","e752fccc":"df_train.head()","9ebf8fad":"df_train.describe()","6b85f352":"df_test.describe()","641c40e7":"# NaN data\nfor col in df_train.columns:\n    msg = 'columns: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","db6b8f07":"# NaN data\nfor col in df_test.columns:\n    msg = 'columns: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_test[col].isnull().sum() \/ df_test[col].shape[0]))\n    print(msg)","c352b2ee":"msno.matrix(df=df_train.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","af9f9d15":"msno.bar(df=df_train.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","9f81d991":"f, ax = plt.subplots(1,2,figsize=(18,8))\n\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1], autopct='%1.1f%%',ax=ax[0], shadow=True)\nax[0].set_title('Pie plot - Survivrd')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\nplt.show()","7a63a359":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()","df2fba80":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True)","ec7c0d01":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()","41144753":"y_position = 1.04\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32', '#FFDF00', '#D3D3D3'], ax=ax[0])\nax[0].set_title('Number of passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show()","5474e39e":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Sex: Survivied vs Dead')\nplt.show()","d0daf127":"pd.crosstab(df_train['Sex'], df_train['Survived'], margins=True)","b3366d0a":"sns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, size=6, aspect=1.5)","2311a48b":"sns.factorplot('Sex', 'Survived', hue='Pclass',data=df_train, saturation=5, size=6, aspect=1)","a04d70b9":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : {:.1f} years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \ub098\uc774 \uc801\uc740 \ud0d1\uc2b9\uac1d : {:.1f} years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f} years'.format(df_train['Age'].mean()))","2f5d6b63":"# \ubd84\ud3ec \uadf8\ub798\ud504\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","638b58e2":"# \ubd84\ud3ec \uadf8\ub798\ud504\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Pclass'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Pclass'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","7cf51709":"# \ubd84\ud3ec \uadf8\ub798\ud504\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 1)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 1)]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.title('1st class')\nplt.show()","0d373b92":"# \ubd84\ud3ec \uadf8\ub798\ud504\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 2)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 2)]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.title('2nd class')\nplt.show()","31ae22e2":"# \ubd84\ud3ec \uadf8\ub798\ud504\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 3)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 3)]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.title('3rd class')\nplt.show()","167e4cd6":"change_age_range_survival_ratio = []\n\nfor i in range(1, 80):\n    change_age_range_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7,7))\nplt.plot(change_age_range_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survived rate')\nplt.xlabel('Range of Age')\nplt.show ","d0068696":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\nsns.violinplot('Pclass', 'Age', hue='Survived', data=df_train, scale='count', split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 10))\n\nsns.violinplot('Sex', 'Age', hue='Survived', data=df_train, scale='count', split=True, ax=ax[1])\nax[1].set_title('Pclass and Age vs Survived')\nax[1].set_yticks(range(0, 110, 10))\nplt.show()","80974fcf":"f, ax = plt.subplots(1, 1, figsize=(7, 7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","ca3c0bf4":"f, ax = plt.subplots(2, 2, figsize=(20, 15))\nsns.countplot('Embarked', data=df_train, ax=ax[0, 0])\nax[0, 0].set_title('(1) No. Of Passengers Boared')\n\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0, 1])\nax[0, 1].set_title('(2) Male-Female split for embarked')\n\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1, 0])\nax[1, 0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1, 1])\nax[1, 1].set_title('(4) Embarked vs Pclass')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","82fa640f":"### Pclass\n","603b5e63":"### Sex and Pclass","c13b9318":"### Embarked","5a391449":"### EDA\ub780?\n\uc218\uc9d1\ud55c \ub370\uc774\ud130\uac00 \ub4e4\uc5b4\uc654\uc744 \ub54c, \uc774\ub97c \ub2e4\uc591\ud55c \uac01\ub3c4\uc5d0\uc11c \uad00\ucc30\ud558\uace0 \uc774\ud574\ud558\ub294 \uacfc\uc815\uc774\ub2e4. \ud55c\ub9c8\ub514\ub85c \ub370\uc774\ud130\ub97c \ubd84\uc11d\ud558\uae30 \uc804\uc5d0 \uadf8\ub798\ud504\ub098 \ud1b5\uacc4\uc801\uc778 \ubc29\ubc95\uc73c\ub85c \uc790\ub8cc\ub97c \uc9c1\uad00\uc801\uc73c\ub85c \ubc14\ub77c\ubcf4\ub294 \uacfc\uc815\uc774\ub2e4.","83f2adbc":"### Pclass, Sex, Age","49fe6450":"### Sex","17cdbda6":"### Age\n"}}