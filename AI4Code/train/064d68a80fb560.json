{"cell_type":{"492496cf":"code","97b58caa":"code","8e9467e5":"code","c90221d6":"code","060462a9":"code","c9d8babe":"code","7b2d432d":"code","d0f10714":"code","e7a29eac":"code","cd695f2d":"markdown","f701de56":"markdown","22386fdf":"markdown","703538e2":"markdown","68d360bd":"markdown","64565f5f":"markdown","822e044a":"markdown","3f39839c":"markdown","d109281d":"markdown","eb07d987":"markdown","07522a86":"markdown","5444d425":"markdown"},"source":{"492496cf":"# -------------------------------------------------------------------------------------------- #\n# -- Kaggle Python 3 environment\n# -- Image:\/\/github.com\/kaggle\/docker-python\n# -------------------------------------------------------------------------------------------- #\n\n# -- Generic packages\nimport numpy as np   # Linear Algebra and Scientific Computing\nimport pandas as pd  # Data I\/O and Processing\n\n# -- Operative System Navigation\nimport os            \nfrom os import listdir, path\nfrom os.path import isfile, join\n\n# -- Data Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling as pp","97b58caa":"# Get the absolute path of the folder with train files\nfiles_path = path.abspath('\/kaggle\/input\/mlb-player-digital-engagement-forecasting')\ndata_players = pd.read_csv(files_path + '\/players.csv')\ndata_teams = pd.read_csv(files_path + '\/teams.csv')\ndata_seasons = pd.read_csv(files_path + '\/seasons.csv')\ndata_awards = pd.read_csv(files_path + '\/awards.csv')","8e9467e5":"# Lets see the data types of the columns\ndata_players.dtypes","c90221d6":"# Option 1\nplayers_profile_ds = data_players.describe()\nplayers_profile_ds","060462a9":"# Option 2\nplayers_profile_pp = pp.ProfileReport(data_players, title = \"players.csv Data Profile\")\nplayers_profile_pp.to_notebook_iframe()","c9d8babe":"display(data_players.head(10))","7b2d432d":"# Unique countries\ncountries = list(data_players['birthCountry'].unique())\n\n# Number of NAs in StateProvince and City\nstate_nas = [data_players[data_players['birthCountry'] == country]['birthStateProvince'].isna().sum() for country in countries]\ncity_nas = [data_players[data_players['birthCountry'] == country]['birthCity'].isna().sum() for country in countries]\ncountry_count = [len(data_players[data_players['birthCountry'] == country]) for country in countries]\n\n# Aggregated dataframe\norigins = pd.DataFrame({'birthCountry': countries, 'count_birthCountry': country_count, 'NaNs_StateProvince': state_nas, 'NaNs_City': city_nas})\n\n# Ordered dataframe\norigins = origins.sort_values(by=['birthCountry'], inplace=False, ascending=False)\ndata_players = data_players.sort_values(by=['birthCountry'], inplace=False, ascending=False)\n\n# Display results and reference\ndisplay(origins)","d0f10714":"display('There are: {NaNs} missing values in StateProvince '.format(NaNs = sum(origins['NaNs_StateProvince'])), )","e7a29eac":"display(origins[origins['NaNs_StateProvince'] > 0])","cd695f2d":"I will argue that the fundamental aspect of the competition is the *players*, since you are asked to forecast *engagement* for every player active in 2021 season. So, lets start with that.","f701de56":"# About the competition\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nI found very useful and self-explanatory the first paragraph of the description tab in the competition, from that and for the sake of producing a quick and short version of Visual EDA, consider the following: \n\n- Time Series clasification problem (Multiclass): target1, target2, target3, target4.\n- You have info from other years but just forecast for players active in the 2021 season.\n- There are files with panel data (that do not change over time): players.csv, teams.csv, seasons.csv, awards.csv.\n- There is a file with time series data (daily data, train.csv).\n- Predicting the target in $d$ (in dataset), means to forecast target value for $d+1$ (in the problem context).","22386fdf":"## Exploration\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nAre the *birthStateProvince* and *birthCity* NAs because of those players were born outside USA ?","703538e2":"Lets get the list of _birthCountry_, and relate to that the _birthStateProvince_ and _birthCity_, so we can see NaNs values according to each _birthCountry_","68d360bd":"## Well, that is for the short version, What do you think about quick progress and iterative content in this notebook, does that make sense ?","64565f5f":"Interestingly enough, none where from Mexico, and since the majority of Latinos in USA are from that country, and in the North of Mexico baseball is a popular sport, it could be the case that engagement from Mexican players has interesting properties. But of course, that would be up to you to decide explore.","822e044a":"# A Short Series: Exploratory-Data-Analysis\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nMy intention is to produce notebooks iteratively until I feel comfortable to jump into a competition mode, so, here are a simple roadmap of intended Kaggle notebooks:\n\n1. Players Visual EDA (Short Version)\n2. Teams Visual EDA (Short Version)\n3. ... evaluate next content according to evidence of interaction and modeling findings (mainly notebooks or mainly competition)\n\nThere are two main reasons on why I'm sharing this:\n1. To draw your attention into the \"Documentation\" kind of aspect in these notebooks, so they help *you* win the competition.\n2. To ask for your comments, suggestions and hopefully a couple of votes if you found some content here useful for your particular purposes.","3f39839c":"# Back to the Kaggle\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nThis is a visual exploratory data analysis for the MLB Player Digital Engagement Forecasting Competition. In fact, it is a kind of template I'm doing my self to restart my kaggle activity, so I thought, It will be better instead of have it private, to share some of the formats, code snippets and apply them to an actual active competition. So, I hope you find useful this notebook, not only for predictive modeling activity but also for code organization, documentation, formatting, data visualization and actually for other projects outside Kaggle.","d109281d":"# Serious Exploratory-Data-Analysis\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nTo be honest, it feels sometimes like cheating, *pandas_profiling* is an automatic data profiling tools that is mounted on top of *pandas*. According to [pandas-profiling](https:\/\/github.com\/pandas-profiling\/pandas-profiling): *The pandas df.describe() function is great but a little basic for serious exploratory data analysis. pandas_profiling extends the pandas DataFrame with df.profile_report() for quick data analysis.*","eb07d987":"# Input data\n<hr style=\"border:0.02in solid gray\"> <\/hr>\n\nInput data files are available in the read-only \"..\/input\/\" directory. Which contains:\n- A set of static files that do not change with time: players, seasons, teams, awards\n- A training dataset with daily labels (shifted +1 in time)","07522a86":"Well, as suspected, the NaNs do not come from players born in USA. As pandas_profiling function previously stated, there are: 545 missing values in StateProvince.","5444d425":"No wonder, there are by default just 3 numeric columns, hence *describe* falls short of providing a quick summary. There are several other options of just *describe*, here is a very interesting one."}}