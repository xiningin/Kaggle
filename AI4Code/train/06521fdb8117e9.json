{"cell_type":{"89b430ad":"code","8303d4b9":"code","8730ffd3":"code","c65dc309":"code","91e1a05e":"code","bde65bed":"code","e33e0c83":"code","f9192542":"code","8ac5bd8e":"code","c97055a7":"code","c9df5243":"code","0e0d7234":"code","3f43dce3":"code","4ee10689":"code","294d3dfd":"code","fec853d5":"code","217ccdaf":"code","8e210977":"code","239b08af":"code","f8f842e5":"code","5f11f418":"code","66389b0a":"code","dc7efb64":"code","a11f1df6":"code","094bc125":"code","a38cb5a5":"code","58903129":"code","0b335491":"code","9feb1048":"code","ac7ec2a0":"markdown","840e698a":"markdown","babf483d":"markdown","589e690e":"markdown","556a4092":"markdown","c394bbab":"markdown","78115f7d":"markdown","7738fea5":"markdown","346547b8":"markdown","0207ba87":"markdown"},"source":{"89b430ad":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(context=\"notebook\", style=\"darkgrid\", palette=\"deep\", font=\"sans-serif\", font_scale=1, color_codes=True)\n","8303d4b9":"data= pd.read_csv(\"..\/input\/covid19-global-forecasting-week-1\/train.csv\")","8730ffd3":"data[\"Date\"].max() ## 2020-03-20\n","c65dc309":"data[\"Date\"] = data[\"Date\"].apply(lambda x: x.replace(\"-\",\"\"))\ndata[\"Date\"]  = data[\"Date\"].astype(int)","91e1a05e":"data = data.drop(['Province\/State'],axis=1)\ndata = data.dropna()\ndata.isnull().sum()\n","bde65bed":"data.head()","e33e0c83":"test = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-1\/test.csv\")   \ntest[\"Date\"] = test[\"Date\"].apply(lambda x: x.replace(\"-\",\"\"))\ntest[\"Date\"]  = test[\"Date\"].astype(int)\n\ntest[\"Lat\"]  = test[\"Lat\"].fillna(12.5211)\ntest[\"Long\"]  = test[\"Long\"].fillna(69.9683)\ntest.isnull().sum()\n","f9192542":"test[\"Date\"].min() ## 2020-03-12","8ac5bd8e":"x = data[['Lat', 'Long', 'Date']]\ny1 = data[['ConfirmedCases']]\ny2 = data[['Fatalities']]\nx_test = test[['Lat', 'Long', 'Date']]\n","c97055a7":"from sklearn.tree import DecisionTreeClassifier\nTree_model = DecisionTreeClassifier(criterion='entropy')","c9df5243":"##\nTree_model.fit(x,y1)\npred1 = Tree_model.predict(x_test)\npred1 = pd.DataFrame(pred1)\npred1.columns = [\"ConfirmedCases_prediction\"]","0e0d7234":"pred1.head()","3f43dce3":"Tree_model.fit(x,y2)\npred2 = Tree_model.predict(x_test)\npred2 = pd.DataFrame(pred2)\npred2.columns = [\"Death_prediction\"]","4ee10689":"pred2.head()","294d3dfd":"Sub = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-1\/submission.csv\")\nSub.columns\nsub_new = Sub[[\"ForecastId\"]]","fec853d5":"OP = pd.concat([pred1,pred2,sub_new],axis=1)\nOP.head()\nOP.columns = ['ConfirmedCases', 'Fatalities', 'ForecastId']\nOP = OP[['ForecastId','ConfirmedCases', 'Fatalities']]\n","217ccdaf":"OP[\"ConfirmedCases\"] = OP[\"ConfirmedCases\"].astype(int)\nOP[\"Fatalities\"] = OP[\"Fatalities\"].astype(int)\n","8e210977":"OP.head()","239b08af":"\n#### By using DecisionTreeRegressor\nfrom sklearn.tree import DecisionTreeRegressor  \nregressor = DecisionTreeRegressor(random_state = 0) ","f8f842e5":"regressor.fit(x,y1)\npred_r1 = regressor.predict(x_test)\npred_r1 = pd.DataFrame(pred_r1)\npred_r1.columns = [\"ConfirmedCases_prediction\"]\n","5f11f418":"regressor.fit(x,y2)\npred_r2 = regressor.predict(x_test)\npred_r2 = pd.DataFrame(pred_r2)\npred_r2.columns = [\"Death_prediction\"]","66389b0a":"OP_dr = pd.concat([sub_new,pred_r1,pred_r2],axis=1)\nOP_dr.head()\nOP_dr.columns = [ 'ForecastId','ConfirmedCases', 'Fatalities']\n","dc7efb64":"OP_dr[\"ConfirmedCases\"] = OP_dr[\"ConfirmedCases\"].astype(int)\nOP_dr[\"Fatalities\"] = OP_dr[\"Fatalities\"].astype(int)\nOP_dr.head()\n","a11f1df6":"## Random Forest regressor\nfrom sklearn.ensemble import RandomForestRegressor\nrand_reg = RandomForestRegressor()\n","094bc125":"rand_reg.fit(x,y1)\npred_ra1 = rand_reg.predict(x_test)\npred_ra1 = pd.DataFrame(pred_ra1)\npred_ra1.columns = [\"ConfirmedCases_prediction\"]\n","a38cb5a5":"rand_reg.fit(x,y2)\npred_ra2 = rand_reg.predict(x_test)\npred_ra2 = pd.DataFrame(pred_ra2)\npred_ra2.columns = [\"Death_prediction\"]","58903129":"OP_ra = pd.concat([sub_new,pred_ra1,pred_ra2],axis=1)\nOP_ra.head()\nOP_ra.columns = [ 'ForecastId','ConfirmedCases', 'Fatalities']\n","0b335491":"OP_ra[\"ConfirmedCases\"] = OP_ra[\"ConfirmedCases\"].astype(int)\nOP_ra[\"Fatalities\"] = OP_ra[\"Fatalities\"].astype(int)\nOP_ra.head()\n","9feb1048":"OP_ra.to_csv(\"submission.csv\",index=False)","ac7ec2a0":"# Model : ","840e698a":"<a id='Data'><\/a>","babf483d":"# Libraries :","589e690e":"# Table of content:\n \n* <a href='#Libraries'>Libraries<\/a>\n* <a href=\"#Data\">Data<\/a>\n* <a href=\"#Model\">Model<\/a>\n* <a href=\"#Out_sub\">Out_sub<\/a>","556a4092":"# Data :","c394bbab":"<a id='Out_sub'><\/a>","78115f7d":"<a id='Libraries'><\/a>","7738fea5":"**For LSTM model you can click on the below link:**\n* https:\/\/www.kaggle.com\/yashgoyal401\/advanced-visualizations-and-predictions-with-lstm","346547b8":"<a id='Model'><\/a>","0207ba87":"# Output submission :"}}