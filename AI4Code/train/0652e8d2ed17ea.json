{"cell_type":{"4fda804d":"code","dadf89e3":"code","780a9353":"code","7fddf395":"code","eb398750":"code","537fab61":"code","219e5b48":"code","d7b19de4":"code","6e1c8c28":"code","5d42c285":"code","944c8c7c":"code","40c0a788":"code","42227500":"code","bb9687a0":"code","8e047e25":"code","84d62f96":"code","31d67202":"code","51f2dba0":"code","526af647":"code","ecd449b2":"markdown"},"source":{"4fda804d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dadf89e3":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom xgboost import XGBClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier","780a9353":"df = pd.read_csv(\"\/kaggle\/input\/piano-sales\/piano_sales.csv\",\n                  engine=\"python\", sep=\",\")\ndf.head()","7fddf395":"df.shape","eb398750":"df.isnull().sum()","537fab61":"# Lets handle numerical features with nan value\nnumerical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes!='O']\nnumerical_nan","219e5b48":"df[numerical_nan].isna().sum()","d7b19de4":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=df[feature].median()\n    \n    df[feature].fillna(median_value,inplace=True)\n    \ndf[numerical_nan].isnull().sum()","6e1c8c28":"df['YEAR'].value_counts()","5d42c285":"df['VERTICAL PIANOS'].value_counts()","944c8c7c":"!pip install dabl\nimport dabl","40c0a788":"dabl.detect_types(df)","42227500":"dabl.plot(df, target_col=\"YEAR\")","bb9687a0":"dabl.plot(df, target_col=\"TOTALS\")","8e047e25":"dabl.plot(df, target_col=\"ELECTRONIC\")","84d62f96":"!pip install mglearn","31d67202":"import mglearn\n\nmglearn.plots.plot_grid_search_overview()\nplt.show()","51f2dba0":"mglearn.plots.plot_cross_validation();\nplt.show()","526af647":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","ecd449b2":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTjD2j426qBhx1cO4IKsBSdKTbegZmLr-TqVA&usqp=CAU)amazon.com"}}