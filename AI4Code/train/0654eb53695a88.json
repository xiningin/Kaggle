{"cell_type":{"183fc3a2":"code","d4ac0f23":"code","7a8688f4":"code","123bf8b6":"code","f3b95c1e":"code","f1f9b4b2":"code","6f9b9843":"code","bb4fb7b0":"code","a0605f48":"code","7042b4c2":"code","a433e938":"code","d1cab023":"code","4315d0c2":"code","bbb833bf":"code","34247837":"code","19c9d0ba":"code","4b2b863b":"code","4e14d90a":"code","349e931d":"code","7accea84":"code","dd2b055a":"code","b7d11ac3":"code","1ca49d67":"code","1c4c8b7a":"code","9e387aa0":"code","d51c7803":"code","bbebf068":"code","02c0804e":"code","0e881c2b":"code","eaf7e662":"code","5fae7da2":"code","78b4cee2":"code","5f81b0d0":"code","0d68d6c3":"code","10d1d540":"code","4a881c6b":"code","37d9035f":"code","4c7c6cd0":"code","fb3047c2":"code","6e07776d":"code","bc5feadf":"code","c3db8971":"code","fdd19f01":"code","20478e6f":"code","2aa1d4a8":"code","78c83e55":"code","7fa7df20":"code","1f2b47f8":"code","805fb3ba":"code","6dd57917":"code","e9056bf0":"code","7a0366d9":"code","ea5b20ab":"code","3cb0860e":"markdown","f9268e33":"markdown","41ae7b92":"markdown","78f1551e":"markdown"},"source":{"183fc3a2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d4ac0f23":"train = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ntest = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')","7a8688f4":"train.head()","123bf8b6":"#Shape of the dataset\ntrain.shape","f3b95c1e":"#Description about the Dataset\ntrain.describe()","f1f9b4b2":"#Checking for missing values\ntrain.isnull().sum()","6f9b9843":"train['LoanAmount']=train['LoanAmount'].fillna(train['LoanAmount'].mean())\ntrain['Credit_History']=train['Credit_History'].fillna(train['Credit_History'].median())","bb4fb7b0":"train.isnull().sum()","a0605f48":"#We drop all other missing values in the variables.\ntest.dropna(inplace=True)\ntest.shape","7042b4c2":"test.head()","a433e938":"test['Gender'].value_counts()\n","d1cab023":"test['Married'].value_counts()\n","4315d0c2":"test['Education'].value_counts()\n","bbb833bf":"test['Self_Employed'].value_counts()\n","34247837":"test['Property_Area'].value_counts()","19c9d0ba":"plt.plot(test['ApplicantIncome'])","4b2b863b":"plt.plot(test['CoapplicantIncome'])","4e14d90a":"plt.plot(test['LoanAmount'])\n","349e931d":"plt.plot(test['Loan_Amount_Term'])\n","7accea84":"plt.plot(test['Credit_History'])\n","dd2b055a":"print(pd.crosstab(test['Property_Area'],test['Loan_Status']))","b7d11ac3":"sns.countplot(test['Property_Area'],hue=test['Loan_Status'])","1ca49d67":"print(pd.crosstab(test['Gender'],test['Loan_Status']))\n","1c4c8b7a":"sns.countplot(test['Gender'],hue=test['Loan_Status'])","9e387aa0":"sns.countplot(test['Married'],hue=test['Loan_Status'])","d51c7803":"sns.countplot(test['Self_Employed'],hue=test['Loan_Status'])\n","bbebf068":"sns.countplot(test['Education'],hue=test['Loan_Status'])","02c0804e":"test['Loan_Status'].replace('N',0,inplace=True)\ntest['Loan_Status'].replace('Y',1,inplace=True)","0e881c2b":"df2=test.drop(labels=['ApplicantIncome'],axis=1)","eaf7e662":"df2=df2.drop(labels=['CoapplicantIncome'],axis=1)\ndf2=df2.drop(labels=['LoanAmount'],axis=1)\ndf2=df2.drop(labels=['Loan_Amount_Term'],axis=1)\ndf2=df2.drop(labels=['Loan_ID'],axis=1)\ndf2.head()","5fae7da2":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nle=LabelEncoder()\nohe=OneHotEncoder()","78b4cee2":"df2['Property_Area']=le.fit_transform(df2['Property_Area'])\n","5f81b0d0":"df2['Dependents']=le.fit_transform(df2['Dependents'])\n","0d68d6c3":"df2=pd.get_dummies(df2)\n","10d1d540":"df2.head()","4a881c6b":"df2=df2.drop(labels=['Gender_Female'],axis=1)\ndf2=df2.drop(labels=['Married_No'],axis=1)\ndf2=df2.drop(labels=['Education_Not Graduate'],axis=1)\ndf2=df2.drop(labels=['Self_Employed_No'],axis=1)\ndf2.head()","37d9035f":"df2=df2.drop('Self_Employed_Yes',1)\ndf2=df2.drop('Dependents',1)\ndf2=df2.drop('Education_Graduate',1)\nX=df2.drop('Loan_Status',1)\nY=df2['Loan_Status']","4c7c6cd0":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","fb3047c2":"x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=6)","6e07776d":"print('Shape of X_train is: ',x_train.shape)\nprint('Shape of X_test is: ',x_test.shape)\nprint('Shape of Y_train is: ',y_train.shape)\nprint('Shape of y_test is: ',y_test.shape)","bc5feadf":"from sklearn.linear_model import LogisticRegression\nlog=LogisticRegression()","c3db8971":"log.fit(x_train,y_train)","fdd19f01":"log.score(x_train,y_train)","20478e6f":"#Predicting test dataset\npred=log.predict(x_test)","2aa1d4a8":"from sklearn.metrics import accuracy_score","78c83e55":"accuracy_score(y_test,pred)","7fa7df20":"from sklearn import metrics\nmetrics.confusion_matrix(y_test,pred)","1f2b47f8":"metrics.precision_score(y_test,pred)","805fb3ba":"from sklearn.tree import DecisionTreeClassifier\nclf=DecisionTreeClassifier()\nclf.fit(x_train,y_train)","6dd57917":"clf.score(x_train,y_train)","e9056bf0":"pred1=clf.predict(x_test)","7a0366d9":"accuracy_score(y_test,pred1)","ea5b20ab":"metrics.precision_score(y_test,pred1)","3cb0860e":"There are 22 missing values in the LoanAmount variable so we fill the missing values by the mean of all \nvalues in that variable.","f9268e33":"There are 50 missing values in the credit History. we fill those missing values by the median of Credit History.","41ae7b92":"LOGISTIC REGRESSION","78f1551e":"DECISION TREE"}}