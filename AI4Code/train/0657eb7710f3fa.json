{"cell_type":{"18ce30e7":"code","702c7e4d":"code","b7745e55":"code","508adc92":"code","33130222":"code","2c0b7044":"code","82141d6f":"code","cb605dbe":"code","4e4500d7":"code","08a5ff64":"code","d9a3c2f3":"code","ca195490":"code","13a5dfa0":"code","f22d9f08":"code","186e9c0c":"code","92148997":"code","c2076c98":"markdown","f7ed7152":"markdown","ed164bf8":"markdown","1f0ed24d":"markdown","f5a32fd3":"markdown","5f31a743":"markdown","6adb365c":"markdown","f4796567":"markdown"},"source":{"18ce30e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","702c7e4d":"data=pd.read_csv('..\/input\/Pokemon.csv')\ndf=pd.DataFrame(data)\ndata=data.set_index(\"#\")\ndata.columns","b7745e55":"data.head()","508adc92":"data.tail()","33130222":"data.describe()","2c0b7044":"data.info()","82141d6f":"data['Type 1'].value_counts(dropna =False)","cb605dbe":"data['Type 2'].value_counts(dropna=False)","4e4500d7":"data['Type 2'].fillna('empty',inplace=True)\nassert 1==1","08a5ff64":"data['Type 2'].value_counts(dropna=False)","d9a3c2f3":"data.boxplot(column='Attack',by='Legendary')","ca195490":"data_new=data.head()","13a5dfa0":"melted = pd.melt(frame=data_new,id_vars = 'Name', value_vars= ['Attack','Defense'])\nmelted","f22d9f08":"melted.pivot(index = 'Name', columns = 'variable',values='value')","186e9c0c":"data1=data.head()\ndata2=data.tail()\nconcet_row_data=pd.concat([data1,data2],axis=0)\nconcet_row_data","92148997":"data1=data['Attack'].head()\ndata2=data['Defense'].head()\nconcat_col_data=pd.concat([data1,data2],axis=1)\nconcat_col_data","c2076c98":"#burada attack legendary olup olmamas\u0131na g\u00f6re plot ettik","f7ed7152":"#melt etti\u011fimiz datay\u0131 tekrar geri alal\u0131m yani pivot edelim","ed164bf8":"#burada NaN olan verileri\u00f6iz \u00e7\u0131kt\u0131 ister bunlar\u0131 atar\u0131z istersek bir de\u011fer atabiliriz ben de\u011fer at\u0131cam","1f0ed24d":"#datalar\u0131m\u0131z concat edelim","f5a32fd3":"#datada istedi\u011fimiz yeri alal\u0131m yani melt edelim","5f31a743":"#\u00d6NCE DATAMIZLA \u0130LG\u0130L\u0130 GENEL VER\u0130LERE BAKALIM","6adb365c":"# ARTIK DATAMIZLA OYNAYAB\u0130L\u0130R\u0130Z","f4796567":"NaN olan verilerimiz empty olarak de\u011fi\u015fti"}}