{"cell_type":{"fce4d105":"code","3751196b":"code","cd8b5d07":"code","07d4c74c":"code","540dca9e":"code","52ee596b":"code","f437ba93":"code","f056e7ac":"code","dea379c3":"code","b4b7c38d":"code","bfcef228":"code","e80055a7":"code","f1dfd7b7":"markdown","cded0157":"markdown","d067b6f5":"markdown","bc3f484b":"markdown"},"source":{"fce4d105":"!pip install keras_ocr","3751196b":"!pip freeze > requirements.txt","cd8b5d07":"import matplotlib.pyplot as plt\nimport keras_ocr\n\nimport numpy as np\nimport pandas as pd\n\nfrom time import time\nimport re\nimport itertools\nimport multiprocessing\nimport gc","07d4c74c":"print('Numpy version:', np.__version__)\nprint('Pandas version:', pd.__version__)","540dca9e":"!ls \/kaggle\/input","52ee596b":"df = pd.read_csv('\/kaggle\/input\/shopee-product-detection-student\/train.csv', dtype='object')\ndf['category'] = df['category'].apply(lambda c: str(c).zfill(2))\ndf.head()","f437ba93":"paths = []\nfor i in df.index:\n    paths.append(f'\/kaggle\/input\/shopee-product-detection-student\/train\/train\/train\/{df.loc[i, \"category\"]}\/{df.loc[i, \"filename\"]}')","f056e7ac":"pipeline = keras_ocr.pipeline.Pipeline()","dea379c3":"# part 1 = 0:26347\n# part 2 = 26347:52695 (CURRENT)\n# part 3 = 52695:79042\n# part 4 = 79042:TOTAL_IMAGES\nTOTAL_IMAGES = len(paths)\nBATCH_PREDICT = 5\n\nSTART_INDEX = 79042\nEND_INDEX = TOTAL_IMAGES\n\nlist_texts = []","b4b7c38d":"for i in range(START_INDEX, END_INDEX, BATCH_PREDICT):\n    try:\n        if i + BATCH_PREDICT < END_INDEX:\n            images = [keras_ocr.tools.read(p) for p in paths[i:i + BATCH_PREDICT]]\n        else:\n            images = [keras_ocr.tools.read(p) for p in paths[i:END_INDEX]]\n\n        prediction_groups = pipeline.recognize(images)\n\n        for x in range(len(prediction_groups)):\n            texts = []\n\n            for y in range(len(prediction_groups[x])):\n                texts.append(prediction_groups[x][y][0])\n\n            list_texts.append(texts)\n        gc.collect()\n    except:\n        if i + BATCH_PREDICT < END_INDEX:\n            for j in range(BATCH_PREDICT):\n                list_texts.append([])\n        else:\n            for j in range(END_INDEX - i):\n                list_texts.append([])","bfcef228":"sr_text = pd.Series(list_texts)\nsr_text","e80055a7":"sr_text.to_csv('train2d.csv', index=False, header=False)","f1dfd7b7":"# Config OCR","cded0157":"# Predict","d067b6f5":"# Dataset","bc3f484b":"# Library"}}