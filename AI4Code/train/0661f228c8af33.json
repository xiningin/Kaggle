{"cell_type":{"b83d4365":"code","d0aaa198":"code","e68695e9":"code","f2d6b4ed":"markdown","1014231b":"markdown"},"source":{"b83d4365":"!git clone https:\/\/github.com\/ufownl\/cycle_gan","d0aaa198":"import mxnet as mx\nimport matplotlib.pyplot as plt\nfrom cycle_gan.dataset import load_image, reconstruct_color\nfrom cycle_gan.pix2pix_gan import ResnetGenerator\n\ngen = ResnetGenerator()\ngen.load_parameters(\"\/kaggle\/input\/cyclegan-with-sn-and-cam\/selfie2anime.gen_ab.params\")\n\nimages = [\n    \"\/kaggle\/input\/selfie2anime\/testA\/female_14491.jpg\",\n    \"\/kaggle\/input\/selfie2anime\/testA\/female_15512.jpg\",\n    \"\/kaggle\/input\/selfie2anime\/testA\/female_32812.jpg\",\n    \"\/kaggle\/input\/selfie2anime\/testA\/female_2321.jpg\",\n    \"\/kaggle\/input\/selfie2anime\/testA\/female_4197.jpg\"\n]\nfor path in images:\n    raw = load_image(path)\n    real = mx.image.resize_short(raw, 256)\n    real = mx.nd.image.normalize(mx.nd.image.to_tensor(real), mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))\n    real = real.expand_dims(0)\n    fake, _ = gen(real)\n    plt.subplot(1, 2, 1)\n    plt.imshow(raw.asnumpy())\n    plt.axis(\"off\")\n    plt.subplot(1, 2, 2)\n    plt.imshow(reconstruct_color(fake[0].transpose((1, 2, 0))).asnumpy())\n    plt.axis(\"off\")\n    plt.show()","e68695e9":"!rm -rf cycle_gan","f2d6b4ed":"# Inference","1014231b":"# Selfie2Anime - CycleGAN with SN and CAM\n\nThis notebook shows the inference code of CycleGAN with Spectral Normalization and Class Activation Mapping Attention, you can get the training scripts [here](https:\/\/github.com\/ufownl\/cycle_gan). And I have made an [Online Demo](https:\/\/ufownl.github.io\/cycle_gan\/selfie2anime.html?server=https:\/\/avatar.rangerufo.site) of Selfie2Anime, so you can try the model by any selfie photos of girls."}}