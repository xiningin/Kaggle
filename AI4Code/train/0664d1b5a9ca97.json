{"cell_type":{"5968ee78":"code","36d3a142":"code","d9650c36":"code","6db06781":"code","694129b9":"code","e6517f64":"code","6b9507d7":"code","dfe74d48":"code","78dc0176":"code","8718fa9b":"code","befaf32a":"code","d1d65dc3":"code","2c4f2df2":"code","5042f683":"code","aefdbc2b":"code","f03f1147":"code","52df72ee":"code","07514917":"code","ee176a51":"code","359211c3":"code","92c19513":"code","1b4be2e1":"code","2f676722":"code","824e8d3e":"code","32eb147c":"code","c8b6d49e":"code","552bc57f":"code","9c107093":"code","b493499a":"code","dadf689f":"markdown","640624d1":"markdown","ff091baa":"markdown","33482f5e":"markdown","3ec9876f":"markdown","a1d4916d":"markdown","6b5dc9a5":"markdown","f1ef1695":"markdown","6b440829":"markdown","98dfda81":"markdown","b0b78cd8":"markdown","b31fefb9":"markdown","fd40ba2c":"markdown","eebb1c57":"markdown","4716aa46":"markdown","a793e4f6":"markdown","d730e220":"markdown","e7231ff7":"markdown","ee9d43fa":"markdown","2be78741":"markdown","26928c56":"markdown","be9faa48":"markdown","72e325e7":"markdown","7ba5e92b":"markdown","5cd92c1e":"markdown","bc779b90":"markdown","d515f978":"markdown","680ac866":"markdown","d70f4280":"markdown","80685884":"markdown"},"source":{"5968ee78":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom datetime import datetime\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\nimport plotly.offline as pyo\npyo.init_notebook_mode()\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_columns', 500)\nsns.set_style('white')\n%matplotlib inline","36d3a142":"%%javascript\nIPython.OutputArea.prototype._should_scroll = function(lines) {\n    return false;\n}","d9650c36":"df = pd.read_csv('..\/input\/eddie1\/fatal-police-shootings-data.txt')\ndf.head()","6db06781":"df['date'] = df['date'].apply(lambda x: pd.to_datetime(x))\ndf['date'].groupby(df.date.dt.to_period('M')).count().plot(kind='line')","694129b9":"count = df['date'].apply(lambda x: 'Weekday' if x.dayofweek < 5 else 'Weekend').value_counts(normalize=True)\nf, ax = plt.subplots(1,1)\nsns.barplot(x=count.index, y=count.values, ax=ax, palette='twilight')","e6517f64":"count = df['date'].apply(lambda x: x.dayofweek).value_counts(normalize=True).sort_index()\ncount.index = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\nf, ax = plt.subplots(1,1)\nsns.barplot(x=count.index, y=count.values, ax=ax, palette='twilight')\nax.set_title('Cases (%) for each day of the week');","6b9507d7":"count_1 = df['signs_of_mental_illness'].value_counts(normalize=True)\ncount_2 = df['threat_level'].value_counts(normalize=True)\ncount_3 = df['body_camera'].value_counts(normalize=True)\ncount_4 = df['manner_of_death'].value_counts(normalize=True)","dfe74d48":"fig, axes = plt.subplots(2, 2, figsize=(8, 8), sharey=True)\nsns.barplot(x=count_1.index, y=count_1.values, palette=\"rocket\", ax=axes[0,0])\naxes[0,0].set_title('Signs of mental illness (%)')\nsns.barplot(x=count_2.index, y=count_2.values, palette=\"viridis\", ax=axes[0,1])\naxes[0,1].set_title('Threat level (%)')\nsns.barplot(x=count_3.index, y=count_3.values, palette=\"nipy_spectral\", ax=axes[1,0])\naxes[1,0].set_title('Body camera (%)')\nsns.barplot(x=count_4.index, y=count_4.values, palette=\"gist_heat\", ax=axes[1,1])\naxes[1,1].set_title('Manner of death (%)');","78dc0176":"count = df.race.value_counts(normalize=True)\ncount.index = ['White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Other']\n\nf, ax = plt.subplots(1,1, figsize=(8,6))\nsns.barplot(y=count.index, x=count.values, palette='Reds_r')\nax.set_title('Total cases for each race (%)');\n","8718fa9b":"share_race_usa_2019 = pd.Series([60.0, 12.4, 0.9, 5.6, 18.4, 2.7], index=['White','Black','Native American','Asian','Hispanic','Other'])\n\ncount_races = count \/ share_race_usa_2019\ncount_races = count_races.sort_values(ascending=False)\nf, ax = plt.subplots(1,1, figsize=(8,6))\nsns.barplot(y=count_races.index, x=count_races.values, palette='Greens_r')\nax.set_title('Total cases for each race on total USA race percentage rate');","befaf32a":"sns.set_style('whitegrid')\nfig, axes = plt.subplots(1, 1, figsize=(10, 8))\naxes.xaxis.set_ticks(np.arange(0,100,10))\n\nsns.kdeplot(df[df.race == 'N'].age, ax=axes, shade=True, color='#7FFFD4')\nsns.kdeplot(df[df.race == 'O'].age, ax=axes, shade=True, color='#40E0D0')\nsns.kdeplot(df[df.race == 'B'].age, ax=axes, shade=True, color='#00CED1')\nsns.kdeplot(df[df.race == 'H'].age, ax=axes, shade=True, color='#6495ED')\nsns.kdeplot(df[df.race == 'A'].age, ax=axes, shade=True, color='#4682B4')\nsns.kdeplot(df[df.race == 'W'].age, ax=axes, shade=True, color='#008B8B')\n\n\nlegend = axes.legend_\nlegend.set_title(\"Race\")\nfor t, l in zip(legend.texts,(\"Native\", \"Other\", 'Black', 'Hispanic', 'Asian', 'White')):\n    t.set_text(l)","d1d65dc3":"count_1 = df[df.gender == 'M'].armed.value_counts(normalize=True)[:10]\ncount_2 = df[df.gender == 'F'].armed.value_counts(normalize=True)[:10]\n\nfig, axes = plt.subplots(1,2, figsize=(16,6))\nplt.subplots_adjust(wspace=0.3)\nsns.barplot(y=count_1.index, x=count_1.values, ax=axes[0])\naxes[0].set_title('Most used weapons - Male')\nsns.barplot(y=count_2.index, x=count_2.values, ax=axes[1])\naxes[1].set_title('Most used weapons - Female');","2c4f2df2":"def armed_or_not(x):\n    if x != 'unarmed' and x != 'toy weapon' and x != 'undetermined':\n        return 'armed'\n    if x == 'toy weapon':\n        return 'toy weapon'\n    if x == 'undetermined':\n        return 'undetermined'\n    else:\n        return 'unarmed'\n    \narmed_or_not = df.armed.apply(armed_or_not).value_counts(normalize=True)\nfig = px.pie(values = armed_or_not.values, names = armed_or_not.index, title='Armed or unarmed (%)')\nfig.update(layout=dict(title=dict(x=0.5),autosize=False, width=450, height=450))\nfig.show()","5042f683":"fig = px.pie(values = df.gender.value_counts(normalize=True).values, names=df.gender.value_counts(normalize=True).index, title='Total cases gender (%)')\nfig.update(layout=dict(title=dict(x=0.5),autosize=False, width=400, height=400))\nfig.show()","aefdbc2b":"cases = df.groupby(['state','city']).count()['id'].reset_index()\ncases.columns = ['state','city','cases']\npoverty = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv',encoding='iso-8859-1')\nhighschool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv',encoding='iso-8859-1')\nincome = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding='iso-8859-1')\nincome['Median Income'] = income['Median Income'].replace({'(X)': np.nan,'-': np.nan})\nincome = income.fillna(0)\npov_sch = pd.merge(poverty,highschool)\npov_sch = pd.merge(pov_sch,income)\npov_sch.columns = ['state','city','poverty_rate','percent_completed_hs','median_income']\npov_sch['city'] = pov_sch['city'].apply(lambda x: x.rsplit(' ',1)[0])\nrmv_indx = pov_sch[['state','city']][pov_sch[['state','city']].duplicated()].index\npov_sch = pov_sch.drop(rmv_indx)\npov_sch = pd.merge(cases,pov_sch,on=['state','city'],how='left')\npov_sch['poverty_rate'] = pov_sch['poverty_rate'].astype(float)\npov_sch['percent_completed_hs'] = pov_sch['percent_completed_hs'].astype(float)\npov_sch['median_income'] = pov_sch['median_income'].astype(float)\npov_sch.head()","f03f1147":"geo_demo = pd.read_csv('..\/input\/eddie2\/geo_demo_data.csv')\ngeo_demo = geo_demo.drop('index', axis=1)\ntotal = pd.merge(pov_sch, geo_demo, on=['state','city','cases'],how='left')\ntotal.head()","52df72ee":"fig, axes = plt.subplots(1,3,figsize=(16, 5))\nsns.scatterplot(y='cases_on_pop_rate', x='poverty_rate', data=total[total.population > 100], ax=axes[0], color='#78281F', size='cases_on_pop_rate',legend=False,alpha=0.7,linewidth=0.3)\nsns.scatterplot(y='cases_on_pop_rate', x='percent_completed_hs', data=total[total.population > 100], ax=axes[1], color='#145A32', size='cases_on_pop_rate',legend=False,alpha=0.7,linewidth=0.3)\nsns.scatterplot(y='cases_on_pop_rate', x='median_income', data=total[(total.population > 100) & (total.median_income > 0)], ax=axes[2], color='#FF6600', size='cases_on_pop_rate',alpha=0.7,linewidth=0.3)\naxes[0].set_title('Cases rate on poverty rate (%)')\naxes[1].set_title('Cases rate on completed_hs(%)')\naxes[2].set_title('Cases rate on median income (%)');","07514917":"fig, axes = plt.subplots(1,1,figsize=(10, 5))\nsns.barplot(x=total[total.population <= 100].sort_values(['population'],ascending=False).city, y=total[total.population <= 100].sort_values(['population'], ascending=False).population, ax=axes)","ee176a51":"states = {\n        'AK': 'Alaska','AL': 'Alabama','AR': 'Arkansas','AS': 'American Samoa','AZ': 'Arizona','CA': 'California','CO': 'Colorado',\n        'CT': 'Connecticut','DC': 'District of Columbia','DE': 'Delaware','FL': 'Florida','GA': 'Georgia','GU': 'Guam','HI': 'Hawaii',\n        'IA': 'Iowa','ID': 'Idaho','IL': 'Illinois','IN': 'Indiana','KS': 'Kansas','KY': 'Kentucky','LA': 'Louisiana','MA': 'Massachusetts',\n        'MD': 'Maryland','ME': 'Maine','MI': 'Michigan','MN': 'Minnesota','MO': 'Missouri','MP': 'Northern Mariana Islands','MS': 'Mississippi',\n        'MT': 'Montana','NA': 'National','NC': 'North Carolina','ND': 'North Dakota','NE': 'Nebraska','NH': 'New Hampshire','NJ': 'New Jersey',\n        'NM': 'New Mexico','NV': 'Nevada','NY': 'New York','OH': 'Ohio','OK': 'Oklahoma','OR': 'Oregon','PA': 'Pennsylvania','PR': 'Puerto Rico',\n        'RI': 'Rhode Island','SC': 'South Carolina','SD': 'South Dakota','TN': 'Tennessee','TX': 'Texas','UT': 'Utah','VA': 'Virginia',\n        'VI': 'Virgin Islands','VT': 'Vermont','WA': 'Washington','WI': 'Wisconsin','WV': 'West Virginia','WY': 'Wyoming'\n}\n\nstates_mapping = {value: key for key, value in states.items()}\n\nstate_races = pd.read_csv('..\/input\/eddie2\/state_race_populations.csv', sep=';')\nstate_races['state'] = state_races.state.map(states_mapping)\nstate_races.head()","359211c3":"df['race'] = df['race'].fillna('U')\nnum_cases_race_state = pd.get_dummies(df.race)\nnum_cases_race_state['state'] = df.state\nnum_cases_race_state = num_cases_race_state.groupby('state').sum().reset_index()\nnum_cases_race_state.columns = ['state','asian','black','hispanic','native_american','other','unknown','white']\nnum_cases_race_state.head()","92c19513":"total = pd.merge(state_races, num_cases_race_state, on=['state'])\ntotal['white_cases_rate'] = total['white'] \/ total['total_white'] * 100\ntotal['black_cases_rate'] = total['black'] \/ total['total_black'] * 100\ntotal['asian_cases_rate'] = total['asian'] \/ total['total_asian'] * 100\ntotal['native_american_cases_rate'] = total['native_american'] \/ total['total_native_american'] * 100\ntotal['hispanic_cases_rate'] = total['hispanic'] \/ total['total_hispanic'] * 100\ntotal['other_cases_rate'] = total['other'] \/ total['total_other'] * 100\ntotal.head()","1b4be2e1":"g = sns.PairGrid(total.sort_values(\"black_cases_rate\", ascending=False),\n                 x_vars=['black_cases_rate','white_cases_rate','hispanic_cases_rate',\n                         'native_american_cases_rate','asian_cases_rate','other_cases_rate'],\n                 y_vars=['state'],\n                 height=10, aspect=.25)\n\ng.map(sns.stripplot, size=10, orient=\"h\",linewidth=1, edgecolor=\"w\")\ng.set(xlim=(-0.001, 0.022), xlabel=\"\", ylabel=\"\")\n\ntitles = ['black_cases_rate','white_cases_rate','hispanic_cases_rate',\n          'native_american_cases_rate','asian_cases_rate','other_cases_rate']\n\nfor ax, title in zip(g.axes.flat, titles):\n    ax.set(title=title)\n    ax.xaxis.grid(False)\n    ax.yaxis.grid(True)\n\nsns.despine(left=True, bottom=True)","2f676722":"df_politic = pd.read_csv('..\/input\/eddie2\/usa-2016-presidential-election-by-county.csv')\ndf_politic = df_politic[['ST','Republicans 2016','Democrats 2016','Green 2016','Libertarians 2016']]\ndf_politic = df_politic.fillna(0).groupby('ST').mean().drop(0).reset_index()\ndf_politic.loc[0] = ['AK',51.28,36.55,5.88,1.80]\ndf_politic.columns = ['state','republicans','democrats','green','libertarians']\ndf_politic = pd.merge(df_politic, total, on=['state'])\n\ndf_politic.head()","824e8d3e":"fig, axes = plt.subplots(2,3,figsize=(12,8))\na = sns.scatterplot(data=df_politic, x='black_cases_rate',y='republicans', ax=axes[0,0], color='#1B6E15')\na.set(xlim=(-0.001,0.015))\nb = sns.scatterplot(data=df_politic, x='hispanic_cases_rate',y='republicans', ax=axes[0,1], color='#1B6E15')\nb.set(xlim=(-0.001,0.015))\nc = sns.scatterplot(data=df_politic, x='native_american_cases_rate',y='republicans', ax=axes[0,2], color='#1B6E15')\nc.set(xlim=(-0.001,0.015))\nd = sns.scatterplot(data=df_politic, x='black_cases_rate',y='democrats', ax=axes[1,0], color='#FF6600')\nd.set(xlim=(-0.001,0.015))\ne = sns.scatterplot(data=df_politic, x='hispanic_cases_rate',y='democrats', ax=axes[1,1], color='#FF6600')\ne.set(xlim=(-0.001,0.015))\nf = sns.scatterplot(data=df_politic, x='native_american_cases_rate',y='democrats', ax=axes[1,2], color='#FF6600')\nf.set(xlim=(-0.001,0.015));","32eb147c":"states_cases = pd.DataFrame({'state':df.state.value_counts().index,'cases':list(df.state.value_counts())})\n\nfig = px.choropleth(states_cases, locations='state', locationmode='USA-states', color='cases',\n                           range_color=(states_cases.cases.min(),states_cases.cases.max()),\n                           scope=\"usa\",\n                           color_continuous_scale='reds',\n                           title='antani'\n                          )\nfig.update_layout(title='Total cases in USA', title_x=0.5)","c8b6d49e":"total['non_white_cases'] = total.asian + total.black + total.hispanic + total.native_american + total.other\ntotal['non_white_population'] = total.total_black + total.total_hispanic + total.total_asian + total.total_native_american + total.total_other\ntotal['non_white_cases_rate'] = total.non_white_cases \/ total.non_white_population\nstates_rates = total[['state','non_white_cases_rate']]\n\nfig = px.choropleth(states_rates, locations='state', locationmode='USA-states', color='non_white_cases_rate',\n                           range_color=(states_rates.non_white_cases_rate.min(),states_rates.non_white_cases_rate.max()),\n                           scope=\"usa\",\n                           color_continuous_scale='reds',\n                           title = 'Non-white cases on total population rate (%)'\n                          )\nfig.update_layout(title_x = 0.5)","552bc57f":"state_rate = pd.DataFrame({'state': total.state,'black_cases_rate': list(total.black_cases_rate)})\n\nfig = px.choropleth(state_rate, locations='state', locationmode='USA-states', color='black_cases_rate',\n                           range_color=(state_rate.black_cases_rate.min(),state_rate.black_cases_rate.max()),\n                           scope=\"usa\",color_continuous_scale='reds', title='Black cases on black population rate (%)')\n\nfig.update_layout(title_x = 0.5)\nfig.show()","9c107093":"fig = go.Figure(data=go.Scattergeo(\n        lon = geo_demo['lng'],\n        lat = geo_demo['lat'],\n        text = geo_demo['city'] + ', ' + geo_demo['state'] + ': ' + geo_demo['cases'].astype(str) ,\n        mode = 'markers',\n        marker = dict(\n            size = geo_demo['cases'].apply(lambda x: 4 if x < 5 else x),\n            opacity = 0.8,\n            symbol = 'circle',\n            colorscale = 'bluered_r',\n            reversescale = True,\n            cmin = 1,\n            color = geo_demo['cases'],\n            cmax = geo_demo['cases'].max(),\n            colorbar_title=\"Cases 2015-2019\"\n        )))\n\nfig.update_layout(\n        margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0},\n        title = 'USA: fatal police shooting cases by city 2015-2019',\n        geo = dict(\n            scope='usa',\n            projection_type='albers usa',\n            showland = False,\n            landcolor = \"blue\",\n            subunitcolor = \"blue\",\n            countrycolor = \"blue\",\n            subunitwidth = 0.5\n        )\n    )\nfig.update_layout(title_x=0.5)\nfig.show()","b493499a":"cal = geo_demo[geo_demo.state == 'CA']\n\nfig = go.Figure(data=go.Scattergeo(\n        lon = cal['lng'],\n        lat = cal['lat'],\n        text = cal['city'] + ': ' + cal['cases'].astype(str),\n        mode = 'markers',\n        marker = dict(\n            size = cal['cases'].apply(lambda x: 4 if x < 5 else x),\n            opacity = 0.8,\n            symbol = 'circle',\n            colorscale = 'bluered_r',\n            reversescale = True,\n            cmin = 1,\n            color = cal['cases'],\n            cmax = cal['cases'].max(),\n            colorbar_title=\"Cases 2015-2019\"\n        )))\n\nfig.update_layout(\n        margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0},\n        title = 'California: fatal police shooting cases by city 2015-2019',\n        geo = dict(\n            scope='usa',\n            projection_type='albers usa',\n            showland = False,\n            landcolor = \"blue\",\n            subunitcolor = \"blue\",\n            countrycolor = \"blue\",\n            subunitwidth = 0.5,\n            center = dict(lat = 36.778259, lon = -121.417931),\n            projection_scale = 2.3\n        )\n    )\nfig.show()","dadf689f":"## Poverty rate, median income and completed high school rate relationship with police shoting cases\nNow let's import other data about poverty rate, completed high school rate and median housold income and add them to a new dataframe","640624d1":"In this dataset we have many informations about these cases, like characteristics of the victim and some circumstances of the case.","ff091baa":"First of all, all the number are expressed in percentage, so 0.2 means 0.2%.\n\n\n- poverty rate: cities with more cases don't seem to have an high poverty rate, as the average poverty rate for USA is around 20%\n- percent completed highschool: we can see that the points are more concentrated in values higher than 80%\n- median income: considering the median income by city, we can see that points are more concentrated between 25k and 50k","33482f5e":"As expected, more than 95% of the victims are male","3ec9876f":"## Is USA police racist?\nThe race column let us know that in many cases of fatal shooting white people are involved, followed by black and hispanic.","a1d4916d":"# Fatal police shooting cases in the USA 2015-2020","6b5dc9a5":"## Age of victims\nFrome these stacked kernel density plots, we can see that:\n- for asian and white, in most of the cases about 30 years old victims were involved\n- for other and native american, in most of the cases about 28 years old victims were involved\n- for hispanic and black, in most of the cases about 25 years old victims were involved\n\nSo we can say that for hispanic and black people, younger persons had been victims of police shoting.","f1ef1695":"Thanks for your attention and please add a comment with your opinion and suggestions in order to improve the quality of this notebook! :)","6b440829":"But let's consider the race shares in the USA in 2019, we can see that in proportion there is an higher rate of victims from the black USA population.\n\nShare of races source: https:\/\/data.census.gov\/cedsci\/table?q=Hispanic%20or%20Latino&tid=ACSDP1Y2019.DP05&hidePreview=false","98dfda81":"Finally, my objective is to visualize all the cases by city in the USA map, analyzing which zone is riskier. Using data manipulation, I built a dataframe with latitude and longitude of every city involved in fatal police shooting cases.","b0b78cd8":"This plot show us for each state, the number of cases of each race on the total population of that race.\n\nWe can easily see that black population has the highest rate of cases in almost all countries, also native american population has high cases rate in some states.\n\nIn particular:\n- Utah has the highest black cases on black population rate\n- Arkansas has the highest white cases on white population rate\n- New Mexico has the highest hispanic cases on hispanic population rate\n- Wyoming has the highest native american cases on native american population rate\n- South Dakota has the highest asian cases on asian population rate\n- Hawaii has the highest \"other\" cases on \"other\" population rate","b31fefb9":"Since January 1, 2015, The Washington Post has been compiling a database of every fatal shooting in the US by a police officer in the line of duty.\n\nThe Washington Post is tracking more than a dozen details about each killing including the race, age and gender of the deceased, whether the person was armed, and whether the victim was experiencing a mental-health crisis.\n\nThey have gathered this information from law enforcement websites, local new reports, social media, and by monitoring independent databases such as \"Killed by police\" and \"Fatal Encounters\". The Post has also conducted additional reporting in many cases.","fd40ba2c":"## Weapons and gender\nAnalyzing most used weapons for men and women we can see that:\n- guns are most used weapons for both categories\n- women had relatively more knives as weapons\n- women were relatively more unarmed or had toy weapons","eebb1c57":"As this plot shows, we don't have evidence that more cases happen during the weekend.","4716aa46":"Now let's import a dataset I created with geographical, demographical info and the rate of cases on the total population by city. Then let's merge it with the previous dataset, so we can see the relationship between poverty rate, completed high school rate, median income and the rate of police shoting cases on the total population.","a793e4f6":"Investigating more on days of the week, we can see that the central days of the week have an higher percentage of cases.","d730e220":"## Victim state and police body camera\nLet's go ahead with a brief description of these four countplots:\n- we can see that only in 20% of cases victims had signs of mental instability\n- in only 10% of cases policeman had the body camera\n- as we could expect, in 70% of cases the situation was declared dangerous\n- manner of death doesn't seem to be an interesting variable beacause most of the cases are \"shot\".","e7231ff7":"## States in which police shoots more to black people considering black population size\nTo find the right answer to this question, I used a rate made dividing the total cases in which the victims were black by the total black population of the state.\n\nIn this case, Utah has the highest rate, followed by Alaska, West Virginia, Oklahoma and Oregon.","ee9d43fa":"Now let's import a dataset from which we can obtain an average race rate of the population of USA states.","2be78741":"I excluded from the above plots these small cities: for each we have one cases and a really small population.\nCouriously we have Odanah with 0 inhabitants, according to Wikipedia in 2010 had 13 inhabitants, so it is possible that this village doesn't exist anymore.","26928c56":"![image.png](attachment:image.png)","be9faa48":"## Main sources\n\nUSA cities coordinates source: https:\/\/simplemaps.com\/data\/us-cities\n\nCities population dataset source: https:\/\/www2.census.gov\/programs-surveys\/popest\/datasets\/2010-2019\/cities\/totals\/\n\nGeocoder to find missing coordinates API: https:\/\/opencagedata.com\/users\/sign_in\n\nDemografic USA data: https:\/\/data.census.gov\/cedsci\/\n\n2016 USA election data: https:\/\/public.opendatasoft.com\/explore\/dataset\/usa-2016-presidential-election-by-county\/table\/?disjunctive.state\n\n\nSource of census data: https:\/\/factfinder.census.gov\/faces\/nav\/jsf\/pages\/community_facts.xhtml","72e325e7":"## States in which police victims in more cases don't belong to white population\nThe first thing I wanted to discover is in which state of the USA police is more racist. In order to this I created a rate made dividing all the cases in which non white people were involved by the total non white population of the state.\n\nWe can see that the highest rate is detected in West Virginia, followed by New Mexico, Alaska, Wyoming and Colorado.","7ba5e92b":"Now let's get all the cases for each race of the victims for every state.","5cd92c1e":"Let's zoom on California, we can see that intuitively more cases are in the metropolitan area of Los Angeles and San Francisco.","bc779b90":"## Dates and week days\nConsidering a monthly period over these 6 years, we can see that in the half of 2015, at the beginning of 2018 and in the first quarter of 2020 we reached some peaks of about more than 100 cases in on month.\nOn a monthly basis, we can't see a clear seasonality of the phenomenon.","d515f978":"## States with more fatal police shoting cases\nLet's go ahead with some geographical plots to better visualize the fatal police shooting cases.\n\nThis map is telling us that the state in which happend more cases is California (803), followed by Texas (484) and Florida (353). But is California the state in which USA Police is more violent?","680ac866":"Considering that Republicans won in about the 80% of the states, I just considered states in which they obtained a share 3 times bigger than the one obtained by Democrats: we can see that generally, in the states in which Democrats won, the \"non-white\" cases rate is higher.","d70f4280":"## Politic elections 2016\nI imported another dataset about USA 2016 politic elections to see if there is a relationship between the rate of non-white cases in a state and the most voted party: I also added the \"non-white\" cases rate. (source: https:\/\/public.opendatasoft.com\/explore\/dataset\/usa-2016-presidential-election-by-county\/table\/?disjunctive.state)","80685884":"We can see that in 87% of police shoting cases, victimes were armed, in 6.5% of cases they were unarmed and in 3.5% of cases they had a toy weapon."}}