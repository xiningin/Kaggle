{"cell_type":{"f0085301":"code","abe7fb67":"code","b00da174":"code","b71b6f75":"code","bd2c1b71":"code","6005b87b":"code","de6ccff4":"code","7bed67c8":"code","6c0fa16e":"code","ab51ad53":"code","a08896da":"code","a7925350":"code","1540b27a":"code","733e7cc4":"code","b92eb3fa":"code","bc1fc9ca":"code","41bdecbc":"code","5a836b48":"code","66e2f5dc":"code","52b2bbf7":"code","66f67e28":"code","6096ca20":"code","9bc8e280":"code","961de27b":"code","ecff952e":"code","31dd3540":"code","f3766f68":"code","10143b49":"code","93c97c78":"code","02422310":"code","eeb5b7ee":"code","04a6af61":"markdown","59d07dbc":"markdown","5fa632d3":"markdown","544af520":"markdown","acad8702":"markdown","1ecd80cc":"markdown","5d3cad91":"markdown","f111cdaa":"markdown","18397f4a":"markdown","9841e605":"markdown","3c3d26fd":"markdown","684e30cc":"markdown","ae429d68":"markdown","39206f6f":"markdown","4c4a1b36":"markdown","67da79d4":"markdown","b65848a4":"markdown","025add97":"markdown"},"source":{"f0085301":"import pandas as pd\nimport numpy as np\npd.set_option('display.max_columns', None)","abe7fb67":"raw_df=pd.read_csv('..\/input\/covid19-patient-precondition-dataset\/covid.csv',encoding='ISO-8859-1',parse_dates=[3,4])\nraw_df","b00da174":"raw_df.drop(['id','patient_type','pregnancy','contact_other_covid','other_disease'],inplace=True,axis=1)\n","b71b6f75":"raw_df['days_prior_to_treatment'] = (raw_df['entry_date'] - raw_df['date_symptoms']).dt.days\nraw_df['dead']='1'\nraw_df.loc[raw_df['date_died']=='9999-99-99','dead']='0'\nraw_df.drop(['entry_date','date_symptoms','date_died'],inplace=True,axis=1)\nraw_df = raw_df.astype('int8')\n","bd2c1b71":"raw_df=raw_df.loc[(raw_df['sex']<=2)&(raw_df['intubed']<=2)&(raw_df['pneumonia']<=2)&(raw_df['diabetes']<=2)&(raw_df['copd']<=2)&(raw_df['asthma']<=2)&(raw_df['inmsupr']<=2)&(raw_df['hypertension']<=2)&(raw_df['cardiovascular']<=2)&(raw_df['obesity']<=2)&(raw_df['renal_chronic']<=2)&(raw_df['tobacco']<=2)&(raw_df['covid_res']<=2)&(raw_df['dead']<=2)&(raw_df['icu']<=2)&(raw_df['days_prior_to_treatment']>=0),['sex','age','inmsupr','pneumonia','diabetes','asthma','copd','hypertension','cardiovascular','renal_chronic','obesity','tobacco','days_prior_to_treatment','covid_res','intubed','icu','dead']]","6005b87b":"raw_df.loc[raw_df['sex']==2,'sex']=0\nraw_df.loc[raw_df['inmsupr']==2,'inmsupr']=0\nraw_df.loc[raw_df['pneumonia']==2,'pneumonia']=0\nraw_df.loc[raw_df['diabetes']==2,'diabetes']=0\nraw_df.loc[raw_df['asthma']==2,'asthma']=0\nraw_df.loc[raw_df['copd']==2,'copd']=0\nraw_df.loc[raw_df['hypertension']==2,'hypertension']=0\nraw_df.loc[raw_df['cardiovascular']==2,'cardiovascular']=0\nraw_df.loc[raw_df['renal_chronic']==2,'renal_chronic']=0\nraw_df.loc[raw_df['obesity']==2,'obesity']=0\nraw_df.loc[raw_df['tobacco']==2,'tobacco']=0\nraw_df.loc[raw_df['intubed']==2,'intubed']=0\nraw_df.loc[raw_df['icu']==2,'icu']=0\nraw_df.loc[raw_df['covid_res']==2,'covid_res']=0","de6ccff4":"raw_df","7bed67c8":"import warnings\nwarnings.filterwarnings('ignore')\n\n\nfrom sklearn.preprocessing import StandardScaler\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import precision_score, recall_score, accuracy_score, confusion_matrix, f1_score,classification_report\n\nfrom sklearn.model_selection import GridSearchCV\n\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import RadiusNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nimport joblib","6c0fa16e":"raw_df=raw_df.loc[raw_df['covid_res']==1,['sex','age','inmsupr','pneumonia','diabetes','asthma','copd','hypertension','cardiovascular','renal_chronic','obesity','tobacco','days_prior_to_treatment','covid_res','intubed','icu','dead']]","ab51ad53":"X = raw_df.drop(['icu','covid_res','dead','intubed'], axis=1)\ny = raw_df['icu']","a08896da":"scaler = StandardScaler()\nX = scaler.fit_transform(X)","a7925350":"sm = SMOTE(random_state=42)\nX_res, y_res = sm.fit_resample(X, y)\nX_train, X_test, y_train, y_test = train_test_split(X_res, y_res, test_size=0.30, random_state=0,stratify=y_res)","1540b27a":"def reports():\n    print(\"train Accuracy = {}\".format(accuracy_score(y_train, train_model.predict(X_train))))\n    print(\"test Accuracy = {}\".format(accuracy_score(y_test, test_model)))\n    print(\"Confusion Matrix\")\n    print(confusion_matrix(y_test, test_model))\n    print(\"Classification Report\")\n    print(classification_report(y_test, test_model))\n    \n    ","733e7cc4":"\ntrain_model = RandomForestClassifier()\ntrain_model.fit(X_train, y_train)\ntest_model = train_model.predict(X_test)","b92eb3fa":"reports()","bc1fc9ca":"train_model = SVC()\ntrain_model.fit(X_train, y_train)\ntest_model = train_model.predict(X_test)","41bdecbc":"reports()","5a836b48":"train_model = KNeighborsClassifier()\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","66e2f5dc":"reports()","52b2bbf7":"train_model = KNeighborsClassifier(n_neighbors=5,weights='distance',p=1,metric='minkowski')\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","66f67e28":"reports()","6096ca20":"train_model = GradientBoostingClassifier()\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","9bc8e280":"reports()","961de27b":"train_model = GradientBoostingClassifier(max_features='auto', loss='deviance',learning_rate=0.3, max_depth=8,min_samples_leaf=3,min_samples_split=0.1, n_estimators=400, subsample=0.4)\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","ecff952e":"reports()","31dd3540":"train_model = AdaBoostClassifier()\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","f3766f68":"reports()","10143b49":"train_model = AdaBoostClassifier(n_estimators= 9000)\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","93c97c78":"reports()","02422310":"train_model = XGBClassifier()\ntrain_model.fit(X_train, y_train)\ntest_model =train_model.predict(X_test)","eeb5b7ee":"reports()","04a6af61":"**svm**","59d07dbc":"**VISIT THE LINK BELOW FOR MORE HIGHER ACCURATE MODELS|||| DEATH PREDICTION AVAILABLE IN GITHUB**\nhttps:\/\/github.com\/Nitin-rajesh-99\/final_year_Machine_learning_project","5fa632d3":"# importing dataset","544af520":"**ADABOOST**","acad8702":"considering only patients who are tested positive to covid","1ecd80cc":"**GBT TUNED**","5d3cad91":"**XGBOOST**","f111cdaa":"**RANDOM FOREST**","18397f4a":"**KNN TUNED**","9841e605":"# dropping rows with missing data","3c3d26fd":"# creating new columns","684e30cc":"# changing value of \"NO\" to '2' to '0'","ae429d68":"**KNN**","39206f6f":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#  importing lib\n","4c4a1b36":"# translating column headers and dropping irrelevent data","67da79d4":"# final processed dataset info","b65848a4":"**ADABOOST TUNED**","025add97":"**GBT**"}}