{"cell_type":{"8017574d":"code","8a183589":"code","808e7ef0":"code","3eaacbed":"code","e3c267c9":"code","9d296ff9":"code","2ff8523d":"code","92dccc99":"code","9cd68cf1":"code","ad1b0fa3":"code","4bddf073":"code","7d26e3d5":"code","d32943c8":"code","f48d5805":"code","0f2c7e6e":"code","902d3692":"code","2e658398":"code","6ac730de":"code","58ae8409":"code","69d833d2":"code","aeb15a8a":"code","d4441eef":"code","3dd0ecc7":"code","5271d515":"code","c98dfd23":"code","313bd023":"code","ea23f8d7":"code","a72f6e3d":"code","839baa51":"code","1f841aab":"code","83342b4e":"code","fbbf73cb":"code","8b5a2483":"code","5cd1691d":"code","00af9775":"code","7281d1fb":"code","cc92b19c":"code","6395b0dc":"code","5d0ae1f9":"code","a8cd9b76":"code","11756365":"code","bb83e1cd":"code","8d7faa57":"code","9a565f9a":"markdown"},"source":{"8017574d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a183589":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set_style('darkgrid')\nplt.rcParams['figure.figsize']=(8,6)","808e7ef0":"df=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf.head()","3eaacbed":"df_test=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndf_test.head()","e3c267c9":"df.shape,df_test.shape","9d296ff9":"df.info()","2ff8523d":"df.isnull().sum()","92dccc99":"sns.heatmap(df.isnull(),yticklabels=False)","9cd68cf1":"df.describe().T","ad1b0fa3":"null_features_train=[]\nfor i in df.columns.tolist():\n    if df[i].isnull().sum()>0:\n        null_features_train.append(i)\nprint('Null values in training data:')\nfor i in null_features_train:\n    print(i,df[i].isnull().sum())","4bddf073":"null_features_test=[]\nfor i in df_test.columns.tolist():\n    if df_test[i].isnull().sum()>0:\n        null_features_test.append(i)\nprint('Null values in Test Data:')\nfor i in null_features_test:\n    print(i,df_test[i].isnull().sum())","7d26e3d5":"#removing the features that have maximum null values\ndf.drop(['Id','Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=True)\ndf.shape","d32943c8":"null_features_train.remove('Alley')\nnull_features_train.remove('FireplaceQu')\nnull_features_train.remove('PoolQC')\nnull_features_train.remove('Fence')\nnull_features_train.remove('MiscFeature')\nnull_features_train","f48d5805":"df_id=df_test['Id']\ndf_id","0f2c7e6e":"df_test.drop(['Id','Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1,inplace=True)\ndf_test.shape","902d3692":"null_features_test.remove('Alley')\nnull_features_test.remove('FireplaceQu')\nnull_features_test.remove('PoolQC')\nnull_features_test.remove('Fence')\nnull_features_test.remove('MiscFeature')\nnull_features_test","2e658398":"for i in null_features_train:\n    if df[i].dtypes=='object':\n        df[i].replace(np.nan,df[i].value_counts().index.tolist()[0],inplace=True)\n    else:\n        df[i].replace(np.nan,df[i].mean(),inplace=True)","6ac730de":"sns.heatmap(df.isnull(),yticklabels=False)","58ae8409":"df.head()","69d833d2":"df.shape","aeb15a8a":"for i in null_features_test:\n    if df_test[i].dtypes=='object':\n        df_test[i].replace(np.nan,df_test[i].value_counts().index.tolist()[0],inplace=True)\n    else:\n        df_test[i].replace(np.nan,df_test[i].mean(),inplace=True)","d4441eef":"sns.heatmap(df.isnull(),yticklabels=False)","3dd0ecc7":"df_test.head()","5271d515":"df_test.shape","c98dfd23":"import warnings\nwarnings.filterwarnings('ignore')\nfig,axis=plt.subplots(15,5,figsize=(40,70))\nk=0\nj=0\nfor i in df.columns.tolist():\n    if df[i].dtype=='object':\n        sns.countplot(x=i,data=df,ax=axis[k,j])\n    else:\n        sns.distplot(df[i],ax=axis[k,j])\n#         df[i].plot(kind='hist',ax=axis[k,j])\n    j+=1\n    if j==5:\n        k+=1\n        j=0","313bd023":"#converting all the categorical values into numerical values\ncategorical_features=df.select_dtypes('object').columns.tolist()\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nfor i in categorical_features:\n    df[i]=le.fit_transform(df[i])\ndf.head()","ea23f8d7":"for i in categorical_features:\n    df_test[i]=le.fit_transform(df_test[i])\ndf_test.head()","a72f6e3d":"X=df.drop('SalePrice',axis=1)\ny=df['SalePrice']","839baa51":"#checking the corelation between the features\nX.corr()","1f841aab":"features=set()\nvalues=X.corr()\nfor i in range(len(values)):\n    for j in range(i+1,len(values)):\n        if values.iloc[i,j]>0.8:\n            features.add(df.columns.tolist()[i])\nfeatures","83342b4e":"X.drop(list(features),axis=1,inplace=True)\ndf_test.drop(list(features),axis=1,inplace=True)","fbbf73cb":"X.shape,df_test.shape","8b5a2483":"from sklearn.ensemble import ExtraTreesRegressor\netr=ExtraTreesRegressor(n_estimators=250)\netr.fit(X,y)\nscores=pd.Series(etr.feature_importances_)\nscores.index=X.columns\nscores","5cd1691d":"plt.figure(figsize=(15,20))\nscores.sort_values(ascending=False).plot(kind='barh')","00af9775":"features_to_be_removed=scores.nsmallest(29).index.tolist()\nfeatures_to_be_removed","7281d1fb":"X.drop(features_to_be_removed,axis=1,inplace=True)","cc92b19c":"df_test.drop(features_to_be_removed,axis=1,inplace=True)","6395b0dc":"X.shape,df_test.shape","5d0ae1f9":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nX_norm=ss.fit_transform(X)\ndf_test_norm=ss.fit_transform(df_test)\nX_norm[0:5]","a8cd9b76":"from sklearn.ensemble import RandomForestRegressor\nrfr=RandomForestRegressor(n_estimators=250)\nrfr.fit(X_norm,y)\ny_pred=rfr.predict(df_test_norm)","11756365":"y_pred[0:5]","bb83e1cd":"data={'Id':df_id,\n      'SalePrice':y_pred}\ndf_final=pd.DataFrame(data)\ndf_final","8d7faa57":"df_final.to_csv('final.csv')","9a565f9a":"**No Null values are present**"}}