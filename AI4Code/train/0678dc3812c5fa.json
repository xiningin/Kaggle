{"cell_type":{"05bc25e7":"code","568c6509":"code","851c6545":"code","c0e6e3ef":"code","9b41bca4":"code","2cea56cc":"code","41927e13":"code","555de53a":"code","c13ae668":"code","2e8bc212":"code","ee975cfd":"code","f9e783d7":"code","de61ed87":"markdown","99087c40":"markdown"},"source":{"05bc25e7":"import os\nprint(os.listdir(\"..\/input\"))","568c6509":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\n\nsns.set_palette('summer_r')\nimport warnings\nwarnings.filterwarnings('ignore')","851c6545":"data1 = pd.read_csv('..\/input\/my-dataset\/train.csv')\ndata2 = pd.read_csv('..\/input\/my-dataset\/test.csv')\nx_train = data1.drop(['PassengerId','Survived','Name','Ticket'],axis=1)\ny_train = data1.Survived\nx_test = data2.drop(['PassengerId','Name','Ticket'],axis=1)\n\n# print(data1.head())\n# print(data2.head())\nx_train['Cabin'] = x_train['Cabin'].fillna('X')\nx_test['Cabin'] = x_test['Cabin'].fillna('X')\nnew_cabin = pd.Series(x_train['Cabin'].str.slice(0,1))\ni=0\n\nx_train['Cabin'] = new_cabin.values\n\nnew_cabin = pd.Series(x_test['Cabin'].str.slice(0,1))\nx_test['Cabin'] = new_cabin.values","c0e6e3ef":"print(data1.isnull().sum(),data2.isnull().sum())\n","9b41bca4":"\nfrom sklearn.preprocessing import Imputer,LabelEncoder,OneHotEncoder\nle = LabelEncoder()\nx_train['Embarked'] = x_train['Embarked'].fillna('$')\nx_train['Embarked'] = le.fit_transform(x_train['Embarked'])\nx_train['Cabin'] = le.fit_transform(x_train['Cabin'])\nimr = Imputer(missing_values=8,strategy='median',axis=0,copy=False)\nx_train[['Cabin']]=imr.fit_transform(x_train[['Cabin']])\nimr.set_params(missing_values = np.nan,strategy='mean')\nx_train[['Age']] = imr.fit_transform(x_train[['Age']])\nimr.set_params(missing_values=3,strategy='most_frequent')\nx_train[['Embarked']] =  imr.fit_transform(x_train[['Embarked']])\nohe = OneHotEncoder(categorical_features=[1])\nx_train['Sex'] = le.fit_transform(x_train['Sex'])\n\nprint(x_train.head())","2cea56cc":"fig,ax1 = plt.subplots(figsize=(10,10))\nsns.heatmap(data=x_train.corr(),annot=True,fmt='.1f',linewidths=.1)\n","41927e13":"from sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(10,10))\nsc = StandardScaler()\nx_train_scaled = sc.fit_transform(x_train)\nx_train_scaled = pd.DataFrame(data=x_train_scaled)\nx_train_scaled.columns = ['Pclass','Sex','Age','SibSp','Parch','Ticket','Cabin','Embarked']\ntemp_data = pd.concat((y_train,x_train_scaled.loc[:,:]),axis=1)\ntemp_data = pd.melt(temp_data,id_vars='Survived',value_name='value',var_name='features')\nsns.boxplot(data=temp_data,x='features',y='value',hue='Survived')\nplt.figure(figsize=(12,12))\nsns.violinplot(data=temp_data,x='features',y='value',hue='Survived',split=True)","555de53a":"x_test['Embarked'] = x_test['Embarked'].fillna('$')\nx_test['Embarked'] = le.fit_transform(x_test['Embarked'])\nx_test['Cabin'] = le.fit_transform(x_test['Cabin'])\nimr = Imputer(missing_values=8,strategy='median',axis=0,copy=False)\nx_test[['Cabin']]=imr.fit_transform(x_test[['Cabin']])\nimr.set_params(missing_values = np.nan,strategy='mean')\nx_test[['Age']] = imr.fit_transform(x_test[['Age']])\nimr.set_params(missing_values=3,strategy='most_frequent')\nx_test[['Embarked']] =  imr.fit_transform(x_test[['Embarked']])\nimr.set_params(missing_values = np.nan)\nx_test[['Fare']] = imr.fit_transform(x_test[['Fare']])\nohe = OneHotEncoder(categorical_features=[1])\nx_test['Sex'] = le.fit_transform(x_test['Sex'])\n\n","c13ae668":"tes_Scaler = sc.fit_transform(x_test)","2e8bc212":"from sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\n\npca.fit(x_train_scaled)\nx_train_new = pca.transform(x_train_scaled)\npca.fit(tes_Scaler)\nx_test_new = pca.transform(tes_Scaler)\nblah = x_train_new\nfrom sklearn.linear_model import LogisticRegression\nx_train_new = pd.DataFrame(data=x_train_new,copy=False)\nx_train_new.columns = ['A','B']\nx_train_new = pd.concat((y_train,x_train_new),axis=1)\nsns.set_palette('muted')\nsns.lmplot(x='A',y='B',data=x_train_new,hue='Survived')","ee975cfd":"from sklearn.metrics import accuracy_score\nlr = LogisticRegression()\n\nlr.fit(x_train_scaled,y_train)\npred = lr.predict(tes_Scaler)\nprint(pred)\n\n","f9e783d7":"a = []\n\nfinal_data= pd.DataFrame(data=pred,columns=['Survived'])\nfinal_data.to_csv('output2.csv')","de61ed87":"First let us figure out the number of Empty rows in each Feature","99087c40":"We can now use Imputer for Imputing Missing Data"}}