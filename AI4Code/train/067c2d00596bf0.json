{"cell_type":{"8d9258cb":"code","011003f0":"code","f1478dc2":"code","5d84bdb1":"code","1a83c9b4":"code","f2e6f6fe":"code","ec3416bd":"code","9de54662":"code","295b9898":"code","afa346c2":"code","aef6117b":"code","f626b7dd":"code","439d8b8d":"code","830fa019":"code","be58fde8":"code","458a4053":"code","da9e5e68":"code","6b768401":"code","0f921880":"code","8c66064d":"code","4df36d98":"code","9aef4df2":"code","9c865857":"code","4f360465":"code","e0a15b88":"markdown","8f508cfb":"markdown","4de61652":"markdown","be53e247":"markdown","614a5b30":"markdown","f0c7bd23":"markdown","82a8cf92":"markdown","a337fd2f":"markdown","e321a250":"markdown","bf43bde4":"markdown"},"source":{"8d9258cb":"import pandas as pd","011003f0":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n!pip install pywaffle --quiet\nfrom pywaffle import Waffle","f1478dc2":"df= pd.read_csv(\"..\/input\/thesparkfoundation\/SampleSuperstore.csv\")","5d84bdb1":"df","1a83c9b4":"df.shape","f2e6f6fe":"df.isnull().any()","ec3416bd":"quant=df[[\"Quantity\", \"Profit\"]].groupby(['Quantity'], as_index=False).mean().sort_values(by='Profit', ascending=False)\nplt.figure(figsize=(10,8))\n\nsns.barplot(x='Quantity', y='Profit', data=quant)","9de54662":"cat=df[[\"Category\", \"Profit\"]].groupby(['Category'], as_index=False).mean().sort_values(by='Profit', ascending=False)\nplt.figure(figsize=(10,8))\n\nsns.barplot(x='Category', y='Profit', data=cat)","295b9898":"sub_cat=df[[\"Sub-Category\", \"Profit\"]].groupby(['Sub-Category'], as_index=False).mean().sort_values(by='Profit', ascending=False)\nplt.figure(figsize=(20,15))\n\nsns.barplot(x='Sub-Category', y='Profit', data=sub_cat)","afa346c2":"numerical = ['Sales','Quantity','Discount','Profit']","aef6117b":"df[numerical].hist(bins=25, figsize=(20,10), layout=(2, 2))","f626b7dd":"\ncategorical = ['Ship Mode','Segment','State','Region','Category','Sub-Category']\nfig, ax = plt.subplots(3, 2, figsize=(30, 15))\n\nplt.subplots_adjust(hspace=0.7)\nfor variable, subplot in zip(categorical, ax.flatten()):\n    sns.countplot(df[variable], ax=subplot)\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)","439d8b8d":"state_code = {'Alabama': 'AL','Alaska': 'AK','Arizona': 'AZ','Arkansas': 'AR','California': 'CA','Colorado': 'CO','Connecticut': 'CT','Delaware': 'DE','Florida': 'FL','Georgia': 'GA','Hawaii': 'HI','Idaho': 'ID','Illinois': 'IL','Indiana': 'IN','Iowa': 'IA','Kansas': 'KS','Kentucky': 'KY','Louisiana': 'LA','Maine': 'ME','Maryland': 'MD','Massachusetts': 'MA','Michigan': 'MI','Minnesota': 'MN','Mississippi': 'MS','Missouri': 'MO','Montana': 'MT','Nebraska': 'NE','Nevada': 'NV','New Hampshire': 'NH','New Jersey': 'NJ','New Mexico': 'NM','New York': 'NY','North Carolina': 'NC','North Dakota': 'ND','Ohio': 'OH','Oklahoma': 'OK','Oregon': 'OR','Pennsylvania': 'PA','Rhode Island': 'RI','South Carolina': 'SC','South Dakota': 'SD','Tennessee': 'TN','Texas': 'TX','Utah': 'UT','Vermont': 'VT','Virginia': 'VA','District of Columbia': 'WA','Washington': 'WA','West Virginia': 'WV','Wisconsin': 'WI','Wyoming': 'WY'}\ndf['state_code'] = df.State.apply(lambda x: state_code[x])","830fa019":"state = df[['Sales', 'Profit', 'state_code']].groupby(['state_code']).sum()\n\n\nfig = go.Figure(data=go.Choropleth(\n    locations=state.index, \n    z = state.Sales, \n    locationmode = 'USA-states', \n    colorscale = 'Reds',\n    colorbar_title = 'Sales in USD',\n))\n\nfig.update_layout(\n    title_text = 'Total State-Wise Sales',\n    geo_scope='usa',\n    height=800,\n)\n\nfig.show()\n5","be58fde8":"matrix = np.triu(df.corr())\nsns.heatmap(df.corr(), annot=True, mask=matrix)","458a4053":"fig, ax = plt.subplots(6, 1, figsize=(20,50))\nplt.subplots_adjust(hspace=0.4)\nfor var, subplot in zip(categorical, ax.flatten()):\n    sns.boxplot(x=var, y= 'Profit', data=df, ax=subplot,showfliers=False)\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)","da9e5e68":"state['profit_to_sales'] = state['Profit'] \/ state['Sales']\n\n# adding state name\nstate_name = {v: k for k, v in state_code.items()}\nstate['States'] = state.index\nstate['States'] = state.States.apply(lambda x: state_name[x])\n\n# sorting the dataframe\nstate = state.sort_values(by = ['profit_to_sales'], ascending=True)","6b768401":"fig = px.bar(state, x = 'profit_to_sales', y = 'States', title = 'PRICE TO SALES RATIO',\n            color = 'Profit', color_continuous_scale=px.colors.sequential.Viridis)\nfig.update_layout(\n    autosize=False,\n    height=1000,\n    xaxis = dict(\n        tickmode = 'array',\n        ticktext = state.States,\n        title='Profit to Sales Ratio',\n    ),\n    yaxis=dict(title='State'),\n)\nfig.show()","0f921880":"ship_segment = df.groupby(['Segment'])\nsegment_list = df.Segment.value_counts().index\ncat_list = df.Category.value_counts().index\n\nfor segment in segment_list:\n    seg_shipping = ship_segment.get_group(segment)\n    standard, second, first, same = [], [], [], []\n    for cat in cat_list:\n        count = seg_shipping.groupby(['Category']).get_group(cat)['Ship Mode'].value_counts()\n        standard.append(count[0]), second.append(count[1]), first.append(count[2]), same.append(count[3])\n        \n    fig = go.Figure()\n    fig.add_trace(go.Bar(x = cat_list,y = standard,name='Standard Class',marker_color='rgb(137,51,51)'\n                        ))\n    fig.add_trace(go.Bar(x = cat_list,y = second,name='Second Class',marker_color='rgb(234,84,84)'\n                        ))\n    fig.add_trace(go.Bar(x = cat_list,y = first,name='First Class',marker_color='rgb(250,127,78)'\n                        ))\n    fig.add_trace(go.Bar(x = cat_list,y = same,name='Same Day',marker_color='lightsalmon'\n                        ))\n\n    fig.update_layout(\n        barmode ='group',\n        width = 800,\n        title = segment.upper(),\n        yaxis = dict(title = 'Number of Deliveries'))\n    fig.show()","8c66064d":"df[\"Cost\"] = df['Sales']\/df['Quantity']\n\n#finding profit per sold items\n\ndf['Profit'] = df['Profit']\/df['Quantity']\n\n#Grouping Data\ndata_group_one = df[['Ship Mode','Segment','Category','Sub-Category','Cost','Discount','Profit']]\ndata_group_one = data_group_one.groupby(['Ship Mode','Segment','Category','Sub-Category'],as_index=False).mean()\n\n#Data for first Class & consumer\ndata_group_1 = data_group_one[data_group_one['Ship Mode'] == 'First Class']\ndata_group_1 = data_group_1[data_group_1['Segment'] == 'Consumer']\n\n#Data for Same Day & consumer\ndata_group_2 = data_group_one[data_group_one['Ship Mode'] == 'Same Day']\ndata_group_2 = data_group_2[data_group_2['Segment'] == 'Consumer']\n\n#Data for Second Class & consumer\ndata_group_3 = data_group_one[data_group_one['Ship Mode'] == 'Second Class' ]\ndata_group_3 = data_group_3[data_group_3['Segment'] == 'Consumer']\n\n#Data for Standard Class & consumer\ndata_group_4 = data_group_one[data_group_one['Ship Mode'] == 'Standard Class']\ndata_group_4 = data_group_4[data_group_4['Segment'] == 'Consumer']\n","4df36d98":"data_group_1","9aef4df2":"data_group_2","9c865857":"data_group_3","4f360465":"data_group_4","e0a15b88":"# Objectives","8f508cfb":"# Supermarket Data Analysis","4de61652":"* Standard class shipping is the most used shipping method across all consumer segments and product categories.\n* Across all three consumer segments, office supplies are the most bought products, and the technology items are the least bought products.","be53e247":"* there is strong positive correlation between sales price and profit\n* negative correlation between discount and sales price","614a5b30":"In this project, we'll be performing some exploratory data analysis on the sample supermarket data.\n","f0c7bd23":"* BookCases: In bookcases according to pattern shown in the data when cost per item is around 100 and discount is around 0.1% and where cost per item is around 200 and discount is around 0.2% there is profit.So,Discount in these items should increase by 0.1% per 100 increase in the cost of the item.\n\n* Tables: In case of tables where ever discount is around 0.2% there is loss so discount here should be around 0.1%.\n \n* Machines:The problem is with the segment consumer they buy less of this item so the cost should be increased and discount should be negligible.\n \n* Supplies:Here problem in the ship mode where discount must be around 0.01 in first class while in standard class there should be no discount.","82a8cf92":"Highest sales in the state of California $450K of goods.  New York second highest sales,$300k of goods.  The states of Texas and Washington $170K and 140K in sales respectively.","a337fd2f":"* Performing EDA on the data to derive insights on how the profits can be increased.\n* Discovering the weak areas of the sales deparment in order to improve the sales.\n*  Discovering hidden trends within the data that will allow the sales deparment to cater to region-specific needs of the buyers.\n","e321a250":"* Ohio has the worst profit-to-sales ratio in terms of total sales and the losses beared.\n* Delaware has the highest profit-to-sales ratio.\n* New York, California and Washington DC don't have the highest profit-to-sales ratio. This means that the company can further improve its sales\/profits in these states.","bf43bde4":"#  Loss incurred items groupwise\n\n* data_group_1:Bookcases,Tables,Machines\n* data_group_2:Tables\n* data_group_3:Bookcases,Tables,Supplies\n* data_group_4:Bookcases,Tables,Supplies,Machines\n"}}