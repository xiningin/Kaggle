{"cell_type":{"7c8da09b":"code","85df806c":"code","48de8734":"code","5bef92c4":"code","3ac71896":"code","938c5f29":"code","b96d5988":"code","a632f20d":"code","88c4bb0c":"code","e230ddfd":"code","b2fb0faa":"code","6cdeb7b8":"code","1ecbe72a":"code","53dce7fa":"code","31eaed56":"code","3490f277":"code","56e31156":"code","fdc4a535":"code","ba6ac404":"code","742e93d0":"code","0786f9db":"code","37e437e9":"code","0d6dda0e":"code","fff9f5ef":"code","16132d19":"code","ae2e407d":"code","572080c7":"code","4516411b":"code","56c09c64":"code","4a366c64":"code","ff7fd575":"code","18636f8d":"code","773991e5":"code","35852c5a":"code","3fc59dc6":"code","87f36c1b":"code","03073896":"markdown","824bec60":"markdown","29c1bb9e":"markdown","9f2a6983":"markdown","f03942fc":"markdown","5732e2f7":"markdown","da275bd2":"markdown","86ae2b94":"markdown","2da4a1b7":"markdown","1b497a2d":"markdown","6b4c4d4b":"markdown","2ed79444":"markdown","9b2ff5b4":"markdown","45d43aed":"markdown","598b7ae0":"markdown","aac8602c":"markdown","95e06865":"markdown","59de0f47":"markdown","7dce40f6":"markdown","a352e41e":"markdown","23a8332d":"markdown","acc92589":"markdown","d909f2a5":"markdown"},"source":{"7c8da09b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","85df806c":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","48de8734":"df_mkt=pd.read_csv('\/kaggle\/input\/chocolate-ratings\/chocolate_makers.csv')\ndf_rtg=pd.read_csv('\/kaggle\/input\/chocolate-ratings\/chocolate_ratings.csv')","5bef92c4":"df_mkt.head()","3ac71896":"df_mkt.info()","938c5f29":"df_mkt.groupby('COUNTRY')['COMPANY NAME'].count().plot.bar()","b96d5988":"df_mkt.groupby('CITY')['COMPANY NAME'].count().sort_values(ascending=False).head(50).plot.bar(figsize=(20,5))","a632f20d":"df_rtg.head()","88c4bb0c":"def Rating_rank(ex):\n        if ex >= 4:\n            return 5\n        elif 3.5 <= ex <4:\n            return 4\n        elif 3.0 <= ex <3.5:\n            return 3\n        elif 2.0 <= ex <3.0:\n            return 2\n        else:\n            return 1","e230ddfd":"df_rtg.loc[:,'Rating_rank']=df_rtg.loc[:,'Rating'].apply(Rating_rank)\ndf_rtg.head()","b2fb0faa":"for ex in df_rtg['Company (Manufacturer)'].value_counts().iteritems():\n    def company_freq(ex):\n        if ex >= 50:\n            return 5\n        elif 40 <= ex <50:\n            return 4\n        elif 30 <= ex <40:\n            return 3\n        elif 20 <= ex <30:\n            return 2\n        elif 10 <= ex <20:\n            return 1\n        else:\n            return 0","6cdeb7b8":"df_rtg2=pd.DataFrame(df_rtg['Company (Manufacturer)'].value_counts())\ndf_rtg2.loc[:,'Company_score']=df_rtg2.loc[:,'Company (Manufacturer)'].apply(company_freq)\ndf_rtg2=df_rtg2.reset_index()\ndf_rtg2=df_rtg2.drop('Company (Manufacturer)',axis=1)\ndf_rtg2.head()","1ecbe72a":"df_rtg=pd.merge(df_rtg, df_rtg2, left_on=['Company (Manufacturer)'], right_on=['index'],how='outer')","53dce7fa":"for ex in df_rtg['Specific Bean Origin or Bar Name'].value_counts().iteritems():\n    def Bean_freq(ex):\n        if ex >= 50:\n            return 5\n        elif 40 <= ex <50:\n            return 4\n        elif 30 <= ex <40:\n            return 3\n        elif 20 <= ex <30:\n            return 2\n        elif 10 <= ex <20:\n            return 1\n        else:\n            return 0","31eaed56":"df_rtg3=pd.DataFrame(df_rtg['Specific Bean Origin or Bar Name'].value_counts())\ndf_rtg3.loc[:,'Bean_score']=df_rtg3.loc[:,'Specific Bean Origin or Bar Name'].apply(Bean_freq)\ndf_rtg3=df_rtg3.reset_index()\ndf_rtg3=df_rtg3.drop('Specific Bean Origin or Bar Name',axis=1)\ndf_rtg3.head()","3490f277":"df_rtg=pd.merge(df_rtg, df_rtg3, left_on=['Specific Bean Origin or Bar Name'], right_on=['index'],how='outer')","56e31156":"for ex in df_rtg['Ingredients'].value_counts().iteritems():\n    def Ingredient_freq(ex):\n        if ex >= 800:\n            return 5\n        elif 700 <= ex <800:\n            return 4\n        elif 600 <= ex <700:\n            return 3\n        elif 100 <= ex <600:\n            return 2\n        elif 50 <= ex <100:\n            return 1\n        else:\n            return 0","fdc4a535":"df_rtg4=pd.DataFrame(df_rtg['Ingredients'].value_counts())\ndf_rtg4.loc[:,'Ingredients_score']=df_rtg4.loc[:,'Ingredients'].apply(Ingredient_freq)\ndf_rtg4=df_rtg4.reset_index()\ndf_rtg4=df_rtg4.drop('Ingredients',axis=1)\ndf_rtg4.head()","ba6ac404":"df_rtg=pd.merge(df_rtg, df_rtg4, left_on=['Ingredients'], right_on=['index'],how='outer')","742e93d0":"df_rtg['Cocoa Percent']=df_rtg['Cocoa Percent'].str.replace('%','')\ndf_rtg['Cocoa Percent']=df_rtg['Cocoa Percent'].astype(float)","0786f9db":"from nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nfrom string import punctuation\nimport string\n\nlist_stopwords = set(stopwords.words('english'))","37e437e9":"df_rtg['Caracteristics'] = df_rtg['Most Memorable Characteristics'].str.lower()\ndf_rtg['Caracteristics'] = df_rtg['Caracteristics'].apply(word_tokenize)\ndf_rtg['Caracteristics'] = df_rtg['Caracteristics'].apply(lambda x: [word for word in x if word not in list_stopwords])\ndf_rtg['Caracteristics'] = df_rtg['Caracteristics'].apply(lambda x : [word.translate(str.maketrans('', '', string.punctuation)) for word in x])\ndf_rtg['Caracteristics'] = df_rtg['Caracteristics'].apply(lambda x : [word for word in x if len(word) > 1])","0d6dda0e":"df_cara=pd.DataFrame(df_rtg['Caracteristics'].explode())\ndf_cara['Caracteristics'].value_counts().head(20).plot.bar()\nprint(df_cara['Caracteristics'].value_counts())","fff9f5ef":"df_rtg_new = pd.concat([df_rtg, df_rtg['Most Memorable Characteristics'].str.split(',', expand=True)], axis=1).drop('Most Memorable Characteristics', axis=1)","16132d19":"df_rtg_new.head()","ae2e407d":"df_rtg_data=df_rtg_new.loc[:,['Rating_rank','Cocoa Percent','Company_score','Bean_score','Ingredients_score',0,1,2,3,4]]","572080c7":"df_rtg_data.head()","4516411b":"sns.heatmap(df_rtg_data.corr(),annot=True, fmt=\"1.1f\")","56c09c64":"df_rtg_data=df_rtg_data.rename(columns={0: 'Feature1', 1: 'Feature2',2:'Feature3',3:'Feature4',4:'Feature5'})","4a366c64":"df_rtg_data=df_rtg_data.fillna(0)","ff7fd575":"df_feature=pd.DataFrame(df_rtg_data.groupby(['Feature1','Feature2','Feature3','Feature4','Feature5'])['Rating_rank'].mean())\ndf_feature.sort_values(by='Rating_rank',ascending=False).plot.bar(figsize=(20,10))\nprint(df_feature.sort_values)","18636f8d":"pip install pycaret --ignore-installed llvmlite numba","773991e5":"from pycaret.classification import *","35852c5a":"model = setup(df_rtg_data,target='Rating_rank',silent=True,session_id=1)","3fc59dc6":"ridge=create_model('ridge')","87f36c1b":"plot_model(ridge,plot='confusion_matrix')","03073896":"I focused on 5 features, 'Rating_rank','Cocoa Percent','Company_score','Bean_score' and 'Ingredients_score' and 5 Characteristics.","824bec60":"I changed 'Cocoa Percent' to 'float'.","29c1bb9e":"2.Data Outlines","9f2a6983":"I classified 'Ingredients' to 6 classes.","f03942fc":"2)Chocolate_rating file","5732e2f7":"![image.png](attachment:ccb24d65-58b3-4324-bbc0-a9bfb510ac60.png)","da275bd2":"I classified  'Company(Manufacturer)'  to 6 classes.","86ae2b94":"3.Classification Model by PyCaret","2da4a1b7":"* 4.0 - 5.0 = Outstanding='5'\n* 3.5 - 3.9 = Highly Recommended='4'\n* 3.0 - 3.4 = Recommended='3'\n* 2.0 - 2.9 = Disappointing='2'\n* 1.0 - 1.9 = Unpleasant='1'","1b497a2d":"I split 'Most Memorable Characteristics' to 5 columns.","6b4c4d4b":"By comparing the models, I decided to use 'Ridge Classifier'","2ed79444":"The number of companies by city.","9b2ff5b4":"The number of companies by country.","45d43aed":"There are 2,437 combinations !","598b7ae0":"I classified 'Specific Bean Origin or Bar Name' to 6 classes.","aac8602c":"Correlation between features.","95e06865":"Considering a lot of combination of Characteristics people feel, it seems to be difficult to make high accuracy classification model......","59de0f47":"![chocolate_hero1-d62e5444a8734f8d8fe91f5631d51ca5.jpg](attachment:206226a8-c9ad-473c-943d-522b2e557397.jpg)\n\nimage from https:\/\/www.thespruceeats.com\/a-guide-to-chocolate-varieties-520311","7dce40f6":"1)Chocolate_makers file","a352e41e":"I classified 'Rating' to 5 classes.","23a8332d":"1.Data Preprocessing","acc92589":"The combination of Characteristics people feel.","d909f2a5":"The feature 'Most Memorable Characteristics' analysis\n* How many characteristics are there in 'Most Memorable Characteristics' ?"}}