{"cell_type":{"7b2003cd":"code","79269109":"code","0f850ca6":"code","124f2db7":"code","09be9b5b":"code","b57e9813":"code","e5bcdb0c":"code","64f14864":"code","021fa79e":"code","b53392de":"code","26e8f007":"code","e65149f4":"code","ee329571":"code","d9a24fc9":"code","cddd5d1e":"code","c1066ddb":"code","d2167f61":"code","36101417":"code","6ab2afd8":"code","06f307ae":"code","a6ef923c":"code","235130c7":"code","45efcf37":"code","af764433":"code","f9f9228d":"code","799273a0":"code","41209afd":"code","ac707a80":"code","cc8b484d":"code","8c2129c1":"code","990698b4":"code","b753298a":"code","2da02a33":"code","43be60b9":"code","93704ec2":"code","4cc4b1fc":"code","9bda4b76":"code","18161888":"code","ece147de":"code","c1ac140d":"code","8cf0791d":"markdown","98168808":"markdown","b58278f4":"markdown","1b3a6778":"markdown","ecaf1189":"markdown","bdaa5728":"markdown"},"source":{"7b2003cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #for visualization\n%matplotlib inline\nimport seaborn as sns #for visualization\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n#from subprocess import check_output\n#print(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","79269109":"data =pd.read_csv('..\/input\/Social_Network_Ads.csv')#pandas k\u00fct\u00fcphanesini kullanarak dizini atad\u0131k\ndata","0f850ca6":"#Veri Ke\u015ffi ve G\u00f6rselle\u015ftirme","124f2db7":"data.describe().T#istatistikler","09be9b5b":"data.info()#bellek kullan\u0131m\u0131 ve veri t\u00fcrleri","b57e9813":"data.head() #ilk 5 sat\u0131r","e5bcdb0c":"data.shape #sat\u0131r ve s\u00fctun say\u0131s\u0131","64f14864":"data.tail()#son 5 sat\u0131r","021fa79e":"#Histogram grafi\u011fi incelemesi\ndata.hist(figsize=(16,16))","b53392de":"data.sample(6) #rastgele 6 sat\u0131r","26e8f007":"data.corr()","e65149f4":"#Korelasyon G\u00f6sterim\nf,ax = plt.subplots(figsize = (12,9))\nsns.heatmap(data.corr(), annot = True, linewidths =.5, fmt = '.2f', ax=ax)\nplt.show() ","ee329571":"#plotting\ndata.plot(x='Age', y='Purchased', style='o')  \nplt.title('Age-Purchased')  \nplt.xlabel('Age')  \nplt.ylabel('Purchased')  \nplt.show() \n\ndata.plot(x='EstimatedSalary', y='Purchased', style='+')  \nplt.title('EstimatedSalary-Purchased')  \nplt.xlabel('EstimatedSalary')  \nplt.ylabel('Purchased')  \nplt.show()\n","d9a24fc9":"#\u00d6n \u0130\u015fleme","cddd5d1e":"#Eksik De\u011fer Doldurma\n#Null olan \u00f6znitelikleri buluyoruz\ndata.isnull().sum()","c1066ddb":"#Null olan \u00f6zniteliklere sahip, toplam kay\u0131t say\u0131s\u0131n\u0131 buluyoruz\ndata.isnull().sum().sum()","d2167f61":"#Eksik de\u011fer tablosu\ndef eksik_deger_tablosu(data): \n    mis_val = data.isnull().sum()\n    mis_val_percent = 100 * data.isnull().sum()\/len(data)\n    mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n    mis_val_table_ren_columns = mis_val_table.rename(\n    columns = {0 : 'Eksik De\u011ferler', 1 : '% De\u011feri'})\n    return mis_val_table_ren_columns","36101417":"eksik_deger_tablosu(data)","6ab2afd8":"#B\u00fct\u00fcn kolonlardaki Null de\u011ferleri 'bo\u015f' de\u011feri ile doldur\ndata['User ID'] = data['User ID'].fillna('bo\u015f')\ndata['Gender'] = data['Gender'].fillna('bo\u015f')\ndata['Age'] = data['Age'].fillna('bo\u015f')\ndata['EstimatedSalary'] = data['EstimatedSalary'].fillna('bo\u015f')\ndata['Purchased'] = data['Purchased'].fillna('bo\u015f')\n\ndata","06f307ae":"#Ayk\u0131r\u0131(U\u00e7) De\u011fer Tespiti\nGlobal_Salesfig, axs = plt.subplots(ncols = 2, figsize=(15, 4))\nsns.boxplot(data.Age, ax=axs[0], orient = 'h')\nsns.boxplot(data.EstimatedSalary, ax=axs[1], orient = 'h', showfliers=False)","a6ef923c":"#Age alan\u0131ndaki ya\u015f bilgisini kullanarak 'Birthyear' isimli yeni bir \u00f6znitelik olu\u015fturuyoruz\ndef dogum_yili(age):\n    return (2018-age)\ndata['Birthyear'] = data['Age'].apply(dogum_yili)\ndata","235130c7":"#Veri Normalle\u015ftirme\nfrom sklearn import preprocessing\n\n#EstimatedSalary \u00f6zniteli\u011fini normalle\u015ftirmek istiyoruz\nx = data[['EstimatedSalary']].values.astype(float)\n\n#Normalle\u015ftirme i\u00e7in MinMax normalle\u015ftirme y\u00f6ntemini kullan\u0131yoruz.\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndata['EstimatedSalary2'] = pd.DataFrame(x_scaled)\ndata","45efcf37":"#Model E\u011fitimi","af764433":"# Veri setimizi okuyoruz\ndata=pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = data.iloc[:, [2, 3]].values\ny = data.iloc[:, 4].values","f9f9228d":"# Veri setini test ve e\u011fitim olarak 2'ye ay\u0131r\u0131yoruz.\nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","799273a0":"# \u00d6zellik \u00f6l\u00e7ekleme\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","41209afd":"# e\u011fitim setine Naive Bayes uyguluyoruz \nfrom sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)","ac707a80":"# Test veri setini kullanarak sonu\u00e7lar\u0131 tahmin ediyoruz\ny_pred = classifier.predict(X_test)","cc8b484d":"# Confusion matrisimizi olu\u015fturuyoruz.\nfrom sklearn.metrics import confusion_matrix,classification_report\ncm = confusion_matrix(y_test, y_pred)","8c2129c1":"# E\u011fitim sonu\u00e7lar\u0131 g\u00f6zlemliyoruz\nfrom matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('purple', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('darkblue', 'red'))(i), label = j)\nplt.title('Naive Bayes (Training set)')\nplt.xlabel('Age')\nplt.ylabel('EstimatedSalary')\nplt.legend()\nplt.show()","990698b4":"# Test sonu\u00e7lar\u0131n\u0131 g\u00f6zlemliyoruz.\nfrom matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('darkblue', 'purple'))(i), label = j)\nplt.title('Naive Bayes (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","b753298a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\n\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint(\"ACC: \",accuracy_score(y_pred,y_test))","2da02a33":"# Decision Tree Classification\n# Veri setini test ve e\u011fitim olarak 2'ye ay\u0131r\u0131yoruz.\nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","43be60b9":"#\u00d6zellik \u00f6l\u00e7ekleme (Decison Tree i\u00e7in \u00f6l\u00e7ekleme yapmak \u015fart de\u011fil ancak g\u00f6rselle\u015ftirme kodunu \u00e7al\u0131\u015ft\u0131r\u0131rken \u00f6l\u00e7eklenmi\u015f veriye ihtiya\u00e7 duyuluyor.\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","93704ec2":"# e\u011fitim setine Decision Tree algoritmas\u0131n\u0131 uyguluyoruz \nfrom sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","4cc4b1fc":"# Test veri setini kullanarak sonu\u00e7lar\u0131 tahmin ediyoruz\ny_pred = classifier.predict(X_test)","9bda4b76":"# Confusion matrisimizi olu\u015fturuyoruz.\nfrom sklearn.metrics import confusion_matrix,classification_report\ncm = confusion_matrix(y_test, y_pred)","18161888":"# E\u011fitim sonu\u00e7lar\u0131 g\u00f6zlemliyoruz\nfrom matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('purple', 'blue'))(i), label = j)\nplt.title('Decision Tree (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","ece147de":"# Test sonu\u00e7lar\u0131n\u0131 g\u00f6zlemliyoruz.\nfrom matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('Darkblue', 'Skyblue')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'yellow'))(i), label = j)\nplt.title('Decision Tree (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","c1ac140d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\n\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint(\"ACC: \",accuracy_score(y_pred,y_test))","8cf0791d":"Naive Bayes s\u0131n\u0131fland\u0131r\u0131lmas\u0131yla verilerin y\u00fczde 75'i e\u011fitim verisi olarak kullan\u0131l\u0131rken y\u00fczde 25'i de test verisi olarak ayr\u0131lm\u0131\u015ft\u0131r.Veri k\u00fcmesindeki \u00f6rnekleri tan\u0131mlayan \u00f6znitelikler birbirleri ile verilen hipoteze g\u00f6re \u015fartl\u0131 ba\u011f\u0131ms\u0131zlard\u0131r.Sonu\u00e7 olarak bu modelleme e\u011fitilip veriler test edilerek herhangi bir ya\u015f ve maa\u015fla sosyal a\u011flardaki  uygulamalar\u0131n sat\u0131n al\u0131n\u0131p al\u0131nmad\u0131\u011f\u0131n\u0131 tahmin edilebilir.","98168808":"Korelasyonla iki de\u011fi\u015fken aras\u0131ndaki ili\u015fkinin varl\u0131\u011f\u0131n\u0131,\u015fiddetini ve y\u00f6n\u00fcn\u00fc belirleriz.Korelaasyon kat say\u0131s\u0131 ili\u015fkinin y\u00f6n\u00fcn\u00fc ve derecesini bize verir.Bu verilere g\u00f6re Age ve Purchased korelasyon ayn\u0131 y\u00f6nl\u00fc ve iyi bir korelasyondur.Age ve User ID \u00f6znitelikleri aras\u0131ndaki ili\u015fki ters y\u00f6nl\u00fc ve yok denilebilecek kadar azd\u0131r.Korelasyon analizinde ama\u00e7; ba\u011f\u0131ms\u0131z de\u011fi\u015fken de\u011fi\u015fti\u011finde, ba\u011f\u0131ml\u0131 de\u011fi\u015fkenin ne y\u00f6nde de\u011fi\u015fece\u011fini g\u00f6rmektir.Pozitif bir ili\u015fkinin olmas\u0131 X de\u011fi\u015fkeninin de\u011ferlerinin artmas\u0131 durumunda Y de\u011fi\u015fkeninin de\u011ferlerinin de artmas\u0131, yada X de\u011fi\u015fkeninin de\u011ferlerinin d\u00fc\u015fmesi durumunda Y de\u011fi\u015fkenine ait de\u011ferlerin de d\u00fc\u015fme e\u011filiminde oldu\u011funu g\u00f6sterir.Sonu\u00e7 olarak bu Age de\u011fi\u015fkeni artt\u0131\u011f\u0131nda Purchased de\u011fi\u015fkeninin de art\u0131ca\u011f\u0131na yorumlan\u0131r.","b58278f4":"Genel olarak yorumlad\u0131\u011f\u0131m\u0131zda do\u011fruluk,hassasiyet,recall gibi \u00f6l\u00e7\u00fcmlerde  Naive Bayes, Karar A\u011fac\u0131na g\u00f6re daha iyi sonu\u00e7lara ula\u015f\u0131p do\u011frulu\u011fu daha kesin bilgiler vermi\u015ftir.","1b3a6778":"Baz\u0131 \u00f6znitelik de\u011ferleri baz\u0131 g\u00f6zlem de\u011ferleri i\u00e7in girilmemi\u015f olabilir.Eksik de\u011fer tespitiyle bunu belirleriz.Tespitimizde de g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi eksik de\u011fer bulunamam\u0131\u015ft\u0131r. ","ecaf1189":"Karar a\u011fac\u0131 s\u0131n\u0131fland\u0131rmas\u0131 yap\u0131l\u0131rken verilerin y\u00fczde 75i e\u011fitim,y\u00fczde 25 i test olarak ayr\u0131lm\u0131\u015ft\u0131r.Her niteli\u011fin bilgi kazanc\u0131 \u00f6l\u00e7\u00fcm\u00fc yap\u0131lmas\u0131 i\u00e7in entropy kriter olarak kullan\u0131lm\u0131\u015ft\u0131r.Entropy rastgeleli\u011fi, belirsizli\u011fi ve beklenmeyen durumun ortaya \u00e7\u0131kma olas\u0131l\u0131\u011f\u0131n\u0131 g\u00f6sterir.","bdaa5728":"Age \u00f6zniteli\u011finin u\u00e7 de\u011fer tespiti sonucunda 60 ve 18 in u\u00e7 de\u011fer oldu\u011fu g\u00f6zlemlenmi\u015ftir.Q1 ve Q3 ten yola \u00e7\u0131karak tespit yap\u0131lm\u0131st\u0131r.Ayn\u0131 \u015fekilde Estimated salary de bu \u015fekilde g\u00f6zlemlenip u\u00e7 de\u011fer tespiti yap\u0131lm\u0131\u015ft\u0131r."}}