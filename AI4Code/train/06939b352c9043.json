{"cell_type":{"9cce0365":"code","db897a9c":"code","c84e04b0":"code","b6dc765c":"code","21238908":"code","1aca1018":"code","2b693c7b":"code","a3b8e7b3":"code","024845c0":"code","568a5aca":"code","110aa54a":"code","89d4cd9c":"code","a8160dbe":"code","ed4209a2":"code","0c1c4287":"code","a2d0f0a3":"code","ea33da0d":"code","4206f4be":"code","cbdc7bc5":"code","260364ac":"code","13d948b6":"code","36dcd69c":"code","cb2ed947":"code","71704db5":"code","d28ef065":"code","c8986830":"code","213320f4":"code","d38689d5":"code","4844a6f2":"code","299cd8bb":"code","04268533":"code","287fa7b4":"code","192b5a1b":"code","7c48b0ce":"code","42418998":"code","aef5b2ec":"code","258a6142":"code","fbf5aa6e":"code","247c3441":"code","3a80abbd":"code","a40bc6d9":"code","0ad07066":"code","bcd0b8e0":"code","59cbe03a":"code","0458d69a":"markdown","a9d5cad2":"markdown"},"source":{"9cce0365":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db897a9c":"import pandas as pd","c84e04b0":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","b6dc765c":"df","21238908":"import xgboost as xgb\nimport matplotlib.pyplot as plt","1aca1018":"from sklearn import preprocessing\nfrom sklearn import impute\nfrom sklearn.model_selection import train_test_split","2b693c7b":"def scale_column(dataframe,colname):\n    df = dataframe.copy()\n    robust_scaler = preprocessing.RobustScaler()\n    simple_imputer = impute.SimpleImputer(missing_values=np.nan,strategy='constant',fill_value=0)\n    x = df.get('Age').to_numpy()\n    x = simple_imputer.fit_transform([x])\n    x_scaled = robust_scaler.fit_transform(np.reshape(x,(-1,1)))\n    dataframe[colname] = x_scaled.flatten()\n    return dataframe\n","a3b8e7b3":"def create_dummies(dataframe,colname):\n    if colname == 'Cabin':\n        dataframe['Cabin'] = dataframe['Cabin'].str[0]\n    dummies = pd.get_dummies(dataframe[colname],prefix=colname)\n    dataframe = pd.concat([dataframe.drop([colname],axis=1),dummies],axis=1)\n    return dataframe.copy()","024845c0":"def remove_useless_cols(dataframe,columns):\n    return dataframe.drop(columns,axis=1)","568a5aca":"import numpy as np","110aa54a":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","89d4cd9c":"def do_stuff(df):\n    dataframe = scale_column(df,'Age')\n    dataframe = scale_column(dataframe,'Fare')\n    dataframe = create_dummies(dataframe,'Sex')\n    dataframe = create_dummies(dataframe,'Cabin')\n    dataframe = create_dummies(dataframe,'Embarked')\n    dataframe = remove_useless_cols(dataframe,['Name','PassengerId','Ticket'])\n    return dataframe.copy()","a8160dbe":"def get_data(input_df):\n    dataframe = input_df.copy()\n    y = input_df['Survived']\n    input_df.drop(['Survived'],axis=1,inplace=True)\n    X = input_df[list(input_df.keys())]\n    return (X,y)","ed4209a2":"data = do_stuff(train_df)\nX,y = get_data(data)\nx_train,x_test,y_train,y_test = train_test_split(X,y,test_size = 0.33)","0c1c4287":"x_train","a2d0f0a3":"x_train.corrwith(y_train)","ea33da0d":"x_train['Sex_male'].count()","4206f4be":"clf = xgb.XGBClassifier()","cbdc7bc5":"xgb.XGBClassifier??","260364ac":"params = {\n    'max_depth':[1,5,10,20,50,100,200,500],\n    'learning_rate':[0.0001,0.0003,0.001,0.003,0.1,0.3,1],\n    'reg_lambda':[0.1,0.3,1,5],\n    'n_estimators':[50,100,150,200,250,300,350,400]\n}","13d948b6":"from sklearn.model_selection import GridSearchCV","36dcd69c":"grid_search = GridSearchCV(clf,param_grid=params,cv=5)","cb2ed947":"grid_search","71704db5":"grid_search.fit(x_train,y_train)","d28ef065":"grid_search.best_params_","c8986830":"clf = xgb.XGBClassifier(learning_rate=0.0001,max_depth=100,n_estimators=50,reg_lambda=0.1)\nclf.fit(x_train,y_train,eval_set=[(x_test,y_test)],early_stopping_rounds=15)","213320f4":"preds = classifier.predict(x_test)","d38689d5":"preds = np.around(preds).astype(np.int32)","4844a6f2":"from sklearn.metrics import accuracy_score,average_precision_score,recall_score","299cd8bb":"score = average_precision_score(y_test,preds)","04268533":"score","287fa7b4":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","192b5a1b":"test_df = do_stuff(test)","7c48b0ce":"test_df['Cabin_T'] = 0","42418998":"test_df = test_df [['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex_female', 'Sex_male', 'Cabin_A', 'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T', 'Embarked_C', 'Embarked_Q', 'Embarked_S']]","aef5b2ec":"preds = classifier.predict(test_df)","258a6142":"preds","fbf5aa6e":"preds = np.around(preds).astype(np.int32)","247c3441":"preds","3a80abbd":"output = pd.DataFrame(preds)","a40bc6d9":"eh = pd.DataFrame([i for i in range(892,1310)])","0ad07066":"eh","bcd0b8e0":"output = pd.concat([eh,output],axis=1)","59cbe03a":"output.to_csv('\/kaggle\/working\/submission.csv')","0458d69a":"## Rescaling the features ##\n\nSend dataframe and column reference to the function and the function imputes and scales the values","a9d5cad2":"## Scaling data and creating dummies ##"}}