{"cell_type":{"411fa921":"code","495d53a4":"code","94c60a75":"code","a2633c59":"code","099c218f":"code","89ef8338":"code","2c98a0be":"code","0a05856c":"code","f23c6c40":"code","d760b61c":"code","9b4e5981":"code","36a041f2":"code","1e795988":"code","72beb039":"code","17a1edb9":"code","62603e21":"code","e13bf0e2":"code","ccd3bdd7":"code","632fd71f":"code","4931fa3a":"code","b3edf8b6":"code","96b2ec1c":"code","9c5ac169":"code","3d3efd12":"code","a1731854":"markdown","6e28f116":"markdown"},"source":{"411fa921":"#  \u3053\u306e\u30bb\u30eb\uff08jupyter \u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u5358\u4f4d\u3067\u3059\u3002\uff09\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u3001sqlite \u30c7\u30fc\u30bf\u3068\u63a5\u7d9a\u3057\u3066\u3001\u4e00\u6642\u7684\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n# pandas \u3068\u3044\u3046\u30c7\u30fc\u30bf\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n# \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u64cd\u4f5c\u306f\uff33\uff31\uff2c\u3092\u901a\u3058\u3066\u884c\u3046\u306e\u3067\u3001pandas \u306f\u3001\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u305f\u3081\u306b\u4f7f\u3046\u306e\u304c\u4e3b\u3067\u3059\u3002\nimport pandas as pd\nimport numpy as np\nimport pandas.io.sql as psql\n\n# sqlite\u3092\u8aad\u307f\u8fbc\u3080\u30e9\u30a4\u30d6\u30e9\u30ea\nimport sqlite3\n\n# \u7dda\u5f62\u56de\u5e30\u3000\u4f7f\u3046\u983b\u5ea6\u306f\u3042\u307e\u308a\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u3044\u308c\u3066\u304a\u304d\u307e\u3059\u3002\nfrom sklearn import linear_model\nclf = linear_model.LinearRegression()\n\n\n\n# HTML\u3067\u8868\u793a\u3059\u308b\u3000\u30a8\u30af\u30bb\u30eb\u306b\u30b3\u30d4\u30da\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\nfrom IPython.display import display, HTML\n\n# markdown \u7528\nfrom tabulate import tabulate\n\n# \u65e5\u6642\u3092\u6271\u3046\nfrom datetime import datetime as dt\nimport time\n\n# \u30b0\u30e9\u30d5\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker\n%matplotlib inline\n\n# system \u95a2\u4fc2\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nimport sys\n# os \u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\nimport os\n# \u6b63\u898f\u8868\u73fe\nimport re\n\n# json,yaml \u5f62\u5f0f\u3092\u6271\u3046\nimport json\nimport yaml\n\n# \u5909\u6570\u306e\u72b6\u614b\u3092\u8abf\u3079\u308b\nimport inspect\n\n# \u6587\u5b57\u30b3\u30fc\u30c9\nimport codecs\n\n# Web \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nimport requests\n\n# \u8cbf\u6613\u7d71\u8a08\u306e\u30c7\u30fc\u30bf\n# http:\/\/www.customs.go.jp\/toukei\/info\/tsdl_e.htm\n# \u30b3\u30fc\u30c9\u3000\u8f38\u51fa\u306f\u65e5\u672c\u8a9e\u306e\u307f\n# https:\/\/www.customs.go.jp\/toukei\/sankou\/code\/code_e.htm \n\n# sqlite \u306b show tables \u304c\u306a\u3044\u306e\u3067\u88dc\u8db3\u3059\u308b\u3082\u306e\nshow_tables = \"select tbl_name from sqlite_master where type = 'table'\"\n# describe \u3082\u306a\u3044\u3067\u3001\u88dc\u5b8c\u3057\u307e\u3059\u3002\ndesc = \"PRAGMA table_info([{table}])\"\n# \u30e1\u30e2\u30ea\u3067\u3001sqlite \u3092\u4f7f\u3044\u307e\u3059\u3002kaggle \u306e\u30b9\u30af\u30ea\u30d7\u30c8\u4e0a\u3067\u306f\u3001\u30aa\u30f3\u30e1\u30e2\u30ea\u3067\u306a\u3044\u3068\u65b0\u898f\u30c6\u30fc\u30d6\u30eb\u304c\u3064\u304f\u308c\u307e\u305b\u3093\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u884c\u304c\u9577\u3044\u3068\u304d\u306f\u3000\\\u3000\u3067\u6539\u884c\u3057\u307e\u3059\u3002\nconn = \\\n    sqlite3.connect(':memory:')\n\n# sql \u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u5909\u6570\u3067\u3059\u3002\ncursor = conn.cursor()\n\n# 1997 \u5e74\u304b\u3089\u30012019 \u5e74\u307e\u3067\u306e\u5e74\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306f\u3001year_from_1997 \n# year_from_1997\nattach = 'attach \"..\/input\/japan-trade-statistics\/y_1997.db\" as y_1997'\ncursor.execute(attach)\n\n# 2018 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2018 \nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2018.db\" as ym_2018'\ncursor.execute(attach)\n\n# 2019 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2019\nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2019.db\" as ym_2019'\ncursor.execute(attach)\n\n# 2020 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2020\nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2020.db\" as ym_2020'\ncursor.execute(attach)\n\n# hs code,country,HS\u30b3\u30fc\u30c9\u3067\u3059\u3002\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b pandas\u3000\u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nattach = 'attach \"..\/input\/japan-trade-statistics\/codes.db\" as code'\ncursor.execute(attach)\n# import hs,country code as pandas\ntmpl = \"{hs}_{lang}_df =  pd.read_sql('select * from code.{hs}_{lang}',conn)\"\nfor hs in ['hs2','hs4','hs6','hs6','hs9']:\n    for lang in ['jpn','eng']:\n        exec(tmpl.format(hs=hs,lang=lang))        \n\n# \u56fd\u30b3\u30fc\u30c9\u3082 pandas \u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n# country table: country_eng,country_jpn\ncountry_eng_df = pd.read_sql('select * from code.country_eng',conn)\ncountry_eng_df['Country']=country_eng_df['Country'].apply(str)\ncountry_jpn_df = pd.read_sql('select * from code.country_jpn',conn)\ncountry_jpn_df['Country']=country_jpn_df['Country'].apply(str)\n\n# custom  table: code.custom \u7a0e\u95a2\u5225\u306e\u30b3\u30fc\u30c9\u3067\u3059\ncustom_df = pd.read_sql('select * from code.custom',conn)\nattach = 'attach \"..\/input\/japan-trade-statistics\/custom_from_2012.db\" as custom_from'\ncursor.execute(attach)\nattach = 'attach \"..\/input\/custom-2016\/custom_2018.db\" as custom_2018'\ncursor.execute(attach)\nattach = 'attach \"..\/input\/custom-2016\/custom_2019.db\" as custom_2019'\ncursor.execute(attach)\n\nattach = 'attach \"..\/input\/japan-trade-statistics\/custom_2020.db\" as custom_2020'\ncursor.execute(attach)\n\n# \u8a08\u7b97\u6642\u9593\u3092\u7bc0\u7d04\u3059\u308b\u305f\u3081\u306b\u3001\u5e74\u306e\u30c7\u30fc\u30bf\u304b\u3089\u30012019 \u5e74\u3092\u5207\u308a\u51fa\u3057\u307e\u3059\u3002\n# \u6700\u521d\u306e\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3067\u3059\u3002y_2019 \u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u65b0\u898f\u306b y_2019 \u3092\u4f5c\u308d\u3046\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n# error \u306e\u5834\u5408\u306f\u3001\u4f55\u3082\u305b\u305a\u3001\u6b21\u306b\u3059\u3059\u307f\u307e\u3059\u3002\ntry:\n    cursor.execute('drop table y_2019')\nexcept:\n    pass\n\n# \u3053\u308c\u304b\u3089\u304c\u3001SQl \u306b\u306a\u308a\u307e\u3059\u3002\u8907\u6570\u884c\u3067\u66f8\u304f\u3053\u3068\u304c\u591a\u3044\u306e\u3067sql \u3068\u3044\u3046\u5909\u6570\u306b\u8907\u6570\u884c\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n# \u6700\u5f8c\u306e [1:-1] \u306f\u3001\u4e00\u884c\u76ee\uff08\u6539\u884c\u3067\u7a7a\u767d\uff09\u3068\u6700\u5f8c\u306e\u884c\uff08\u3053\u308c\u3082\u6539\u884c\u3060\u3051\u3067\u7a7a\u767d\uff09\u3092\u3068\u308a\u306e\u305e\u304f\u305f\u3081\u3067\u3059\u3002\n# 0 \u304b\u3089\u59cb\u307e\u308b\u306e\u3067\u30011 \u3060\u3068\u3001\uff12\u884c\u76ee\u304b\u3089\u6700\u5f8c\u306e\u884c\u306e\u3072\u3068\u3064\u624b\u524d\u307e\u3067\u3067\u3059\u3002\nsql = \"\"\"\ncreate table y_2019 \nas select * from year_from_1997\nwhere Year = 2019\n\"\"\"[1:-1]\n# \u4e0a\u8a18\u306e sql \u3092\u5b9f\u884c\u3057\u3057\u3066\u30012019 \u5e74\u306e\u30c7\u30fc\u30bf\u3092\u3064\u304f\u308a\u307e\u3059\u3002\ncursor.execute(sql)\n\n# sql \u306e\u8aac\u660e\u3067\u3059\u3002\n# create table \u30c6\u30fc\u30d6\u30eb\u540d : \u30c6\u30fc\u30d6\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3000\u3053\u3053\u3067\u306f\u3001y_2019 \n# as select * from  \u30c6\u30fc\u30d6\u30eb\u540d\u3000: \u30c6\u30fc\u30d6\u30eb\u540d(year_from_1997)\u304b\u3089\u3064\u304f\u308a\u307e\u3059\u3002\n# where Year = 2019 : 2019 \u5e74\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Year \u306f\u3001\u6570\u5024\u306a\u306e\u3067\u30012019 \u3068\u66f8\u304d\u307e\u3059\u3002\n\n\n# graph \u7528\u306e\u3000color\u3000https:\/\/matplotlib.org\/examples\/color\/named_colors.htmlsql_sample ","495d53a4":"# ym_2019 \u306b ym_2020 \u3092\u52a0\u3048\u3066,ym_2019_2020 \u3092\u4f5c\u6210 \n# \u5e74\uff0b\u6708\u306e\u30ab\u30e9\u30e0(ym)\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n# \u5e74\u306f\u3001\u6574\u6570\u3001\u6708\u306f\u3001\u6587\u5b57\u5217\u306a\u306e\u3067\u3001\u578b\u5909\u63db\u3068\u6587\u5b57\u5217\u7d50\u5408\u3092\u884c\u3044\u307e\u3059\u3002\n# CAST(Year AS  str )||month as ym \u304c\u305d\u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u308b\u90e8\u5206\u3067\u3059\u3002\n# \u6587\u5b57\u5217\u7d50\u5408\u304c\u3001|| \u306a\u306e\u3067\u9055\u548c\u611f\u3042\u308a\u307e\u3059\u304c\u3001\u3057\u3087\u3046\u304c\u306a\u3044\u3067\u3059\u3002\n\ntry:\n    cursor.execute('drop table ym_2019_2020')\nexcept:\n    pass\n\nsql = \"\"\"\ncreate table ym_2019_2020\nas select CAST(Year AS  str )||month as ym,* from ym_2019\n\"\"\"[1:-1]\ncursor.execute(sql)\n\n\nsql = \"\"\"\ninsert into  ym_2019_2020\n select CAST(Year AS  str )||month as ym,* from ym_2020\n\"\"\"[1:-1]\ncursor.execute(sql)\n\n","94c60a75":"\n# \u30b0\u30e9\u30d5\u4f5c\u6210\u95a2\u6570\ndef graph_2(country):\n    # \u56fd\u306e\u6307\u5b9a country \u304c\u3042\u308b\u5834\u5408\n    if country != '':   \n        sql=\"\"\"\n        select  exp_imp,ym,sum(Value) as Value from ym_2019_2020\n        where Country = '{country}'\n        group by ym,exp_imp\n        \"\"\"[1:-1]\n        print(country_eng_df.query('Country==\"' + country + '\"')['Country_name'].values[0])\n        df = pd.read_sql(sql.format(country=country),conn)\n    else:\n        sql=\"\"\"\n        select  exp_imp,ym,sum(Value) as Value from ym_2019_2020\n        group by ym,exp_imp\n        \"\"\"[1:-1]\n        print('all')\n        df = pd.read_sql(sql,conn)\n\n        \n    plt.figure(figsize=(20, 10))\n    ax  = sns.lineplot(x='ym',y='Value',hue='exp_imp',linewidth = 7.0,\n             palette={1: \"b\", 2: \"r\"},\n             data=df)\n    ax.legend_._loc = 2\n    ax.xaxis.set_major_locator(ticker.MultipleLocator(1)) \n","a2633c59":"graph_2('')","099c218f":"graph_2('105')","89ef8338":"graph_2('304')","2c98a0be":"graph_2('103')","0a05856c":"graph_2('106')","f23c6c40":"graph_2('601')","d760b61c":"graph_2('111')","9b4e5981":"graph_2('213')","36a041f2":"graph_2('110')\n","1e795988":"graph_2('108')\n","72beb039":"graph_2('147')\n","17a1edb9":"graph_2('137')\n","62603e21":"graph_2('118')\n","e13bf0e2":"graph_2('113')\n","ccd3bdd7":"graph_2('112')\n\n","632fd71f":"graph_2('205')","4931fa3a":"graph_2('224')","b3edf8b6":"graph_2('117')\n","96b2ec1c":"graph_2('302')\n","9c5ac169":"graph_2('210')\n","3d3efd12":"graph_2('305')\n","a1731854":"# \u65e5\u672c\u3068\u306e\u8cbf\u6613\u7dcf\u984d\u30c8\u30c3\u30d7\uff12\uff10\u306e\u8f38\u51fa\u5165\u306e\u5e74\u6708\u30d9\u30fc\u30b9\u3067\u306e\u6bd4\u8f03\n\n","6e28f116":"# \u4e00\u6642\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 2018.1-2020\u5e74\u306e\u6708\u5225\u30c7\u30fc\u30bf \u5e74\u3092\u307e\u305f\u3050\u30c7\u30fc\u30bf\u3092\u3064\u306a\u304e\u307e\u3059\u3002\u3053\u306e\u4f5c\u696d\u306f\u6bce\u56de\u884c\u3044\u307e\u3059\u3002\n\n- \u30c6\u30fc\u30d6\u30eb\u540d ym_2019_2020 "}}