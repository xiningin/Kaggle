{"cell_type":{"9714a2e5":"code","dff300ef":"code","2128ef79":"code","53edf54a":"code","d09c15b3":"code","eceef209":"code","3f78d617":"code","59c5d65d":"code","405b345a":"code","50284b34":"code","3f7d1788":"code","4b6865a3":"markdown","681823e5":"markdown","6f9dad02":"markdown","2c350dfc":"markdown","2521a288":"markdown"},"source":{"9714a2e5":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","dff300ef":"train_data = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")","2128ef79":"xt = test_data.to_numpy().reshape((28000, 28, 28, 1))\n# ----\nxs = train_data.drop(\"label\", axis=1).to_numpy().reshape((42000, 28, 28, 1))\nys = train_data[\"label\"].to_numpy().reshape([42000, 1])\nprint(xt.shape, xs.shape, ys.shape)","53edf54a":"ys_oh = keras.utils.to_categorical(ys)","d09c15b3":"ys_oh[0]","eceef209":"#You can choose other values for \"m\"\nm=99\n\nfigure, ax = plt.subplots(1,2)\n\nax[0].imshow(xs[m])\nax[0].set_title(f\"Label = {ys[m]}\")\nax[1].imshow(xt[m])\nax[1].set_title(r\"Test data\")","3f78d617":"model = keras.models.Sequential([keras.layers.Conv2D(4, (3,3), padding=\"valid\", activation=\"relu\", input_shape=(28,28,1)),\n                                 keras.layers.MaxPooling2D(pool_size=(2, 2), padding=\"valid\"),\n                                 keras.layers.Conv2D(8, (3,3), padding=\"valid\", activation=\"relu\"),\n                                 keras.layers.MaxPooling2D(pool_size=(2, 2), padding=\"valid\"),\n                                 keras.layers.Flatten(),\n                                 keras.layers.Dense(32, activation=tf.nn.tanh),\n                                 keras.layers.Dense(10, activation=tf.nn.softmax)])\n\nmodel.compile(optimizer=\"adam\", loss=\"categorical_crossentropy\")","59c5d65d":"model.fit(xs, ys_oh, epochs=10)","405b345a":"raw_preds = model.predict(xt)\npreds = np.argmax(raw_preds, axis=1)","50284b34":"# Check prediction manually\nm = 4949\n\nplt.imshow(xt[m].reshape(28,28))\nplt.title(f\"Prediction label = {preds[m]}\")","3f7d1788":"sub = np.concatenate([np.arange(1,preds.size+1).reshape([28000, 1]), preds.reshape([preds.size, 1])], axis=1)\nfinal_preds = pd.DataFrame(data=sub, columns = [\"ImageId\", \"Label\"])\nfinal_preds.to_csv(\"submission1.csv\", index=False)","4b6865a3":"## Visualice images and labels","681823e5":"## Import necessary libraries","6f9dad02":"# Digit-Recognizer-v1 - MNIST database","2c350dfc":"## Import data files and reshape them into images","2521a288":"## Defining the model"}}