{"cell_type":{"8e48d5f4":"code","8afc8840":"code","65d589b6":"code","9cb43114":"code","030f957a":"code","f587ed36":"code","08bc4ce8":"code","e24b373f":"code","9a94a01e":"code","cfdf4bd7":"code","10084369":"code","fcd4a0e7":"code","c6c4f600":"code","9acfcb6f":"code","e34e3c75":"code","80286404":"code","11c17eb2":"code","f92f4989":"code","cd9987e3":"code","ef620a8e":"code","9f6ce26b":"markdown","89877e04":"markdown","07be37d9":"markdown","b5b61e7f":"markdown","497eeeeb":"markdown","9012ec33":"markdown"},"source":{"8e48d5f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom pandas import read_csv\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8afc8840":"item_categories=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitems=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nsales_train=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nsample_submission=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nshops=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ntest=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","65d589b6":"item_categories.info()","9cb43114":"items.info()","030f957a":"sales_train.info()","f587ed36":"sample_submission.info()","08bc4ce8":"shops.info()","e24b373f":"test.info()","9a94a01e":"train_full = pd.merge(sales_train, items, how='left', on=['item_id','item_id'])\ntrain_full = pd.merge(train_full, item_categories, how='left', on=['item_category_id','item_category_id'])\ntrain_full = pd.merge(train_full, shops, how='left', on=['shop_id','shop_id'])\ntrain_full.head()","cfdf4bd7":"train_full['date'] = pd.to_datetime(train_full['date'], format='%d.%m.%Y')\ntrain_full['month'] = train_full['date'].dt.month\ntrain_full['year'] = train_full['date'].dt.year\ntrain_full.head()","10084369":"\n#calculation total Price\ntrain_full['total_price']=train_full['item_price']*train_full['item_cnt_day']\ntrain_full.head()","fcd4a0e7":"plt.figure(figsize=(35,10))\nsns.countplot(x='date_block_num', data=train_full);\nplt.show()\n","c6c4f600":"plt.figure(figsize=(35,10))\nsns.countplot(x='shop_id', data=sales_train)\nplt.show()","9acfcb6f":"plt.figure(figsize=(35,10))\nsns.countplot(x='item_category_id', data=train_full)\nplt.xlabel('Months')\nplt.ylabel('item Count a day')\nplt.title('item Count a day According to Months')\nplt.show()","e34e3c75":"monthly_sales = pd.DataFrame(train_full.groupby(['date_block_num'])['item_cnt_day'].sum().reset_index())\nplt.figure(figsize=(35,10))\nsns.barplot(x=\"date_block_num\", y=\"item_cnt_day\", data=monthly_sales , order=monthly_sales['date_block_num'])\nplt.xlabel('Months')\nplt.ylabel('item Count a day')\nplt.title('item Count a day According to Months')\nplt.show()","80286404":"train_full_vs_monthly_total_price = pd.DataFrame(train_full.groupby(['date_block_num'])['total_price'].sum().reset_index())\nplt.figure(figsize=(35,10))\nsns.barplot(x=\"date_block_num\", y=\"total_price\", data=train_full_vs_monthly_total_price, order=train_full_vs_monthly_total_price['date_block_num'])\nplt.xlabel('Months')\nplt.ylabel('Total Price')\nplt.title('Total Price According to Months')\nplt.show()","11c17eb2":"sales_total_price = pd.DataFrame(train_full.groupby(['shop_id'])['total_price'].sum().reset_index())\nplt.figure(figsize=(35,10))\nsns.barplot(x=\"shop_id\", y=\"total_price\", data=sales_total_price , order=sales_total_price['shop_id'])\nplt.xlabel('Shop ID')\nplt.ylabel('Total Price')\nplt.title('Total Price According to Shops')\nplt.show()","f92f4989":"train_full.head()","cd9987e3":"sales_total_price.head()","ef620a8e":"sales_total_price = pd.DataFrame(train_full.groupby(['year'])['total_price'].sum().reset_index())\nplt.figure(figsize=(35,10))\nsns.barplot(x=\"year\", y=\"total_price\", data=sales_total_price , order=sales_total_price['year'])\nplt.xlabel('years')\nplt.ylabel('Total Price')\nplt.title('Total sales quantity According to years')\nplt.show()","9f6ce26b":"ranking chart by monthly sales quantity","89877e04":"\nwhich shop was sold how much","07be37d9":"Reading Datasets","b5b61e7f":"merging items,item_categories and shops datasets","497eeeeb":"date_block_num means \"a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1, ..., October 2015 is 33\"","9012ec33":"schema of all the dataframes "}}