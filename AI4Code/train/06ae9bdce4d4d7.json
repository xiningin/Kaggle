{"cell_type":{"dc82d443":"code","49fe35c8":"code","d44f51d6":"code","ebdc5ce1":"code","bdedf557":"code","708a17cd":"code","46a34b41":"code","8111a52e":"code","176e111b":"code","8aee9b57":"code","f20389b4":"code","728e6b74":"code","38bb5606":"code","ff5a8c9b":"code","82ee4bff":"markdown","c900f134":"markdown","5cb9a3ec":"markdown"},"source":{"dc82d443":"import numpy as np\nimport pandas as pd\nimport os\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n","49fe35c8":"train= \"..\/input\/rice-leaf-diseases\/rice_leaf_diseases\"\ntest= \"..\/input\/rice-leaf-diseases\/rice_leaf_diseases\"\n\nSIZE = (64,64)\nBATCH = 16\nEPOCHS = 20\n\nlabels = os.listdir(train)\n\nlabels","d44f51d6":"%matplotlib inline\n \nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nimport pprint\npp = pprint.PrettyPrinter(indent=4)","ebdc5ce1":"import joblib\nfrom skimage.io import imread\nfrom skimage.transform import resize\n \ndef resize_all(src, pklname, include, width=150, height=None):\n    \n    height = height if height is not None else width\n     \n    data = dict()\n    data['description'] = 'resized ({0}x{1})animal images in rgb'.format(int(width), int(height))\n    data['label'] = []\n    data['filename'] = []\n    data['data'] = []   \n     \n    pklname = f\"{pklname}_{width}x{height}px.pkl\"\n \n   \n    for subdir in os.listdir(src):\n        if subdir in include:\n            print(subdir)\n            current_path = os.path.join(src, subdir)\n \n            for file in os.listdir(current_path):\n                if file[-3:] in {'jpg', 'png'}:\n                    im = imread(os.path.join(current_path, file))\n                    im = resize(im, (width, height)) #[:,:,::-1]\n                    data['label'].append(subdir[:-4])\n                    data['filename'].append(file)\n                    data['data'].append(im)\n \n        joblib.dump(data, pklname)","bdedf557":"# modify to fit your system\ndata_path = \"..\/input\/rice-leaf-diseases\/rice_leaf_diseases\"\nos.listdir(data_path)","708a17cd":"base_name = 'rice_diseasses'\nwidth = 80\n \ninclude = {'Brown spot', 'Bacterial leaf blight', 'Leaf smut' \n           }\n \nresize_all(src=data_path, pklname=base_name, width=width, include=include)","46a34b41":"from collections import Counter\n \ndata = joblib.load(f'{base_name}_{width}x{width}px.pkl')\n \nprint('number of samples: ', len(data['data']))\nprint('keys: ', list(data.keys()))\nprint('description: ', data['description'])\nprint('image shape: ', data['data'][0].shape)\nprint('labels:', np.unique(data['label']))\n \nCounter(data['label'])","8111a52e":"#\nlabels = np.unique(data['label'])\n \n\nfig, axes = plt.subplots(1, len(labels))\nfig.set_size_inches(15,4)\nfig.tight_layout()\n \nfor ax, label in zip(axes, labels):\n    idx = data['label'].index(label)\n     \n    ax.imshow(data['data'][idx])\n    ax.axis('off')\n    ax.set_title(label)","176e111b":"X = np.array(data['data'])\ny = np.array(data['label'])","8aee9b57":"from sklearn.model_selection import train_test_split\n \nX_train, X_test, y_train, y_test = train_test_split(\n    X, \n    y, \n    test_size=0.2, \n    shuffle=True,\n    random_state=42,\n)","f20389b4":"X_train.shape","728e6b74":"X_train = X_train.reshape(42,80*80*3)\nX_train.shape","38bb5606":"from sklearn.neural_network import MLPClassifier\n\nclassifier = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)\n\nclassifier.fit(X_train, y_train)\n","ff5a8c9b":"from sklearn.metrics import plot_confusion_matrix\n\nplot_confusion_matrix(classifier, X_train, y_train)  \nplt.show()","82ee4bff":"# # # B. Scikitlearn Rice Leaf Diseases","c900f134":"# # CONFUSION MATRIX ","5cb9a3ec":"# # # MLP"}}