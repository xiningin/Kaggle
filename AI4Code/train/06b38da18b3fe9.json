{"cell_type":{"08c7d4f5":"code","a130fcba":"code","2b8a2c3c":"code","b3717126":"code","90a73641":"code","7c2ce199":"code","345971f3":"code","debde4c8":"code","7bfa3173":"code","11c7e6bb":"code","64582af0":"code","e017360f":"code","efe39b44":"code","0426fc2a":"code","841a33d2":"code","f8d6055c":"code","5a8e37b9":"code","b9843181":"code","bbdf7bf2":"code","35e8f98c":"code","71e5afe1":"code","dbe4718f":"code","911db6b2":"code","ba48d837":"markdown"},"source":{"08c7d4f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a130fcba":"df_train=pd.read_csv('\/kaggle\/input\/30-days-of-ml\/train.csv')\ndf_test=pd.read_csv('\/kaggle\/input\/30-days-of-ml\/test.csv')","2b8a2c3c":"df_train","b3717126":"df_train.isnull().sum()","90a73641":"df_test.isnull().sum()","7c2ce199":"cat_cols = ['cat0', 'cat1', 'cat2', 'cat3','cat4','cat5','cat6','cat7','cat8','cat9']","345971f3":"cat_cols","debde4c8":"X = df_train.drop(['id','target'], axis=1)\ny = df_train.target\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score","7bfa3173":"from sklearn.model_selection import KFold\n\nfor c in cat_cols:\n    data_tmp = pd.DataFrame({c: X[c], 'target': y})\n    target_mean = data_tmp.groupby(c)['target'].mean()\n    df_test[c] = df_test[c].map(target_mean)\n\n    tmp = np.repeat(np.nan, X.shape[0])\n\n    kf = KFold(n_splits=4, shuffle=True, random_state=72)\n    for idx_1, idx_2 in kf.split(X):\n        target_mean = data_tmp.iloc[idx_1].groupby(c)['target'].mean()\n        tmp[idx_2] = X[c].iloc[idx_2].map(target_mean)\n\n    X[c] = tmp","11c7e6bb":"from scipy.stats import skew","64582af0":"y=pd.DataFrame(y)\ny","e017360f":"X=pd.DataFrame(X)\nX","efe39b44":"target_sk=pd.DataFrame({'target':y['target'],'log(y+1)':np.log1p(y['target'])})\nprint(target_sk, '\u00a5n')\n\nprint('target skew        :',skew(target_sk['target']))\nprint('log(y+1) skew:', skew(target_sk['log(y+1)']))\n\ntarget_sk.hist()","0426fc2a":"X_skew=X.apply(lambda x:skew(x))\nprint(X_skew)","841a33d2":"X_skew = X_skew[X_skew > 0.75]\nprint('-----Skewness greater than 0.75-----')\nprint(X_skew)\nX_skew = X_skew.index\n\nX[X_skew] = np.log1p(X[X_skew])\nX[X_skew]","f8d6055c":"X","5a8e37b9":"train_x, test_x, train_y, test_y = train_test_split(X, y, test_size=0.2, random_state=0)","b9843181":"train_x","bbdf7bf2":"target_mean","35e8f98c":"df_test","71e5afe1":"df_test_skew=df_test.apply(lambda x:skew(x))\nprint(df_test_skew)","dbe4718f":"df_test_skew = df_test_skew[df_test_skew > 0.75]\nprint('-----Skewness greater than 0.75-----')\nprint(X_skew)\ndf_test_skew = df_test_skew.index\n\ndf_test[df_test_skew] = np.log1p(df_test[df_test_skew])\ndf_test[df_test_skew]","911db6b2":"df_test","ba48d837":"It may help to get score < 0.72"}}