{"cell_type":{"a56c20b4":"code","ab7b3438":"code","92a758b4":"code","620b47a7":"code","5c8952ca":"code","b6ab8795":"code","4263ad02":"code","0d171a85":"code","abeb41af":"code","40f369ca":"code","47425fe7":"code","4abf54d4":"code","e12a0583":"code","15cca0dd":"code","b9d15686":"code","0dd8ce8e":"code","b3ab9a7f":"code","f0d7c4f4":"code","98aa5481":"code","2311e273":"markdown","14248059":"markdown","914cc837":"markdown","c2aa0736":"markdown","3214e8c3":"markdown","5402b682":"markdown","24c1b4b9":"markdown","4f8fa776":"markdown","a8a618a8":"markdown","17745e22":"markdown"},"source":{"a56c20b4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ab7b3438":"delhi=pd.read_csv(\"..\/input\/delhi-weather-data\/testset.csv\")\ndelhi.head()","92a758b4":"delhi.drop([' _precipm',' _pressurem',' _heatindexm',' _hum',' _thunder',' _tornado',' _vism',' _wdird',' _wdire',' _wgustm',' _windchillm',' _wspdm'],axis='columns',inplace=True)\ndelhi.head()","620b47a7":"delhi['datetime_utc']=pd.to_datetime(delhi['datetime_utc'])\ndelhi['datetime_utc'].head()","5c8952ca":"delhi.isnull().sum()","b6ab8795":"delhi.dropna(0,inplace=True)\ndelhi.isnull().sum()","4263ad02":"delhiplot=delhi[['datetime_utc',' _tempm']].copy()\ndelhiplot['just_date'] = delhiplot['datetime_utc'].dt.date\n\ndelhifinal=delhiplot.drop('datetime_utc',axis=1)\n\n\n\ndelhifinal.set_index('just_date', inplace= True)\n\ndelhifinal.head()\n","0d171a85":"plt.figure(figsize=(25,8))\nplt.plot(delhifinal)\nplt.title('Time Series')\nplt.xlabel('Date')\nplt.ylabel('temperature')\nplt.show()\n\n","abeb41af":"from statsmodels.tsa.stattools import adfuller\ndef test_stationarity(timeseries):\n    \n    #Determing rolling statistics\n    rolmean = timeseries.rolling(12).mean()\n    rolstd = timeseries.rolling(12).std()\n\n    #Plot rolling statistics:\n    orig = plt.plot(timeseries, color='blue',label='Original')\n    mean = plt.plot(rolmean, color='red', label='Rolling Mean')\n    std = plt.plot(rolstd, color='black', label = 'Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show(block=False)\n    \n    #Perform Dickey-Fuller test:\n    print ('Results of :')\n    dftest = adfuller(timeseries, autolag='AIC')\n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print(dfoutput)","40f369ca":"plt.figure(figsize=(40,8))\ntest_stationarity(delhifinal)\n","47425fe7":"cond=delhi[' _conds'].unique()\nfor values in cond:\n    print(values)\n","4abf54d4":"smoke=delhi[' _conds'][delhi[' _conds'] == 'Smoke'].count()\nprint(smoke)\n\n","e12a0583":"rain=delhi[' _conds'][delhi[' _conds'] == 'Rain'].count()\nprint(rain)\n","15cca0dd":"clear=delhi[' _conds'][delhi[' _conds'] == 'Clear'].count()\nprint(clear)","b9d15686":"fog=delhi[' _conds'][delhi[' _conds'] == 'Fog'].count()\nprint(fog)","0dd8ce8e":"\nMist=delhi[' _conds'][delhi[' _conds'] == 'Mist'].count()\nprint(Mist)","b3ab9a7f":"Dust=delhi[' _conds'][delhi[' _conds'] == 'Widespread Dust'].count()\nprint(Dust)","f0d7c4f4":"Heavy=delhi[' _conds'][delhi[' _conds'] == 'Heavy Fog'].count()\nprint(Heavy)","98aa5481":"data = {'smoke': smoke,'rain':rain,'clear':clear,'fog':fog,'Mist':Mist,'Dust':Dust,'Heavy':Heavy}\nnames = list(data.keys())\nvalues = list(data.values())\n\nfig, axs = plt.subplots(1, 3, figsize=(23, 5), sharey=True)\naxs[0].bar(names, values,color='Orange')\naxs[1].scatter(names, values)\naxs[2].plot(names, values, color='Red')\nfig.suptitle('Categorical Plotting')\n","2311e273":"# Conversion To Official Datetime Format","14248059":"# Time Series Analysis","914cc837":"# Exploration Of Unique Conditions that exist in the Weather","c2aa0736":"# Dickey-Fuller Test\n\n\n**This is one of the statistical tests for checking stationarity. Here the null hypothesis is that the TS is non-stationary. The test results comprise of a Test Statistic and some Critical Values for difference confidence levels. If the \u2018Test Statistic\u2019 is less than the \u2018Critical Value\u2019, we can reject the null hypothesis and say that the series is stationary**","3214e8c3":"**Creating a seperate dataframe for analysis the time series data**\n\n\n### Adding the date as index","5402b682":"**From the above graph the mean values are correlating with the actual values and the standard deviation does not seem to vary.**\n\n\n### Therefore this is stationary","24c1b4b9":"# Looks like a sine wave haha.\n","4f8fa776":"# Data Preprocessing","a8a618a8":"# Complete Time Series Analysis & EDA\n","17745e22":"**We could see that for about 20000 days smoke prevailed in Delhi**\n\n#### Mist & Dust occupy the second place.\n\n#### There was very less rain in delhi\n"}}