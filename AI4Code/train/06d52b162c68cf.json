{"cell_type":{"cd80bf95":"code","f02dd659":"code","b24f3c5e":"code","038241d4":"code","5acaf433":"code","73a09f94":"code","3a9b94b3":"code","ef13782b":"code","0a6b28a3":"code","014f3c42":"code","13a5a57e":"markdown","4f9287bf":"markdown","28ac3067":"markdown"},"source":{"cd80bf95":"%matplotlib inline\nimport matplotlib.pylab as plt\n\nimport pandas as pd\nimport numpy as np\n\nfrom statsmodels.tsa.stattools import acf, pacf","f02dd659":"def ar1(phi = .9, n = 1000, init = 0):\n    time_series = [init]\n    error = np.random.randn(n)\n    for period in range(n):\n        time_series.append(error[period] + phi*time_series[-1])\n    return pd.Series(time_series[1:], index = range(n))\n    \ndef ar2(phi1 = .9, phi2 = -.8, n = 1000, init = 0):\n    time_series = [init, init]\n    error = np.random.randn(n)\n    for period in range(2,n):\n        time_series.append(error[period] + phi1*time_series[-1] + phi2*time_series[-2])\n    return pd.Series(time_series[1:], index = range(1,n))\n    ","b24f3c5e":"# try out different values of phi >=1 as compared to < 1\n# sometimes you need to make a large n to see lack of stationarity\na1 = ar1(phi = 1.1, n = 40)\na1.plot()","038241d4":"# try out different values of phi >=1 as compared to < 1\n# sometimes you need to make a large n to see lack of stationarity\na2 = ar2(n = 50, phi2 = 1.7)\na2.plot()","5acaf433":"# %load snippets\/7ma.py","73a09f94":"m1 = ma1(theta = -1000)\nm1.plot()","3a9b94b3":"a1 = ar1(phi = .5, n = 1000)\na1_acf = acf(a1, nlags = 20)\nplt.plot(a1_acf)\nplt.axhline(y=0,linestyle='--', color = 'black')\nplt.axhline(y=-1.96\/np.sqrt(len(a1)),linestyle='--', color = 'red')\nplt.axhline(y=1.96\/np.sqrt(len(a1)),linestyle='--', color = 'red')","ef13782b":"a1 = ar1(phi = .5, n = 1000)\na1_pacf = pacf(a1, nlags = 20)\nplt.plot(a1_pacf)\nplt.axhline(y=0,linestyle='--', color = 'black')\nplt.axhline(y=-1.96\/np.sqrt(len(a1)),linestyle='--', color = 'red')\nplt.axhline(y=1.96\/np.sqrt(len(a1)),linestyle='--', color = 'red')","0a6b28a3":"m1 = ma1(n = 1000, theta = .9)\nm1_acf = acf(m1, nlags = 20)\nplt.plot(m1_acf)\nplt.axhline(y=0,linestyle='--', color = 'black')\nplt.axhline(y=-1.96\/np.sqrt(len(m1)),linestyle='--', color = 'red')\nplt.axhline(y=1.96\/np.sqrt(len(m1)),linestyle='--', color = 'red')","014f3c42":"m1 = ma1(n = 1000, theta = .9)\nm1_pacf = pacf(m1, nlags = 20)\nplt.plot(m1_pacf)\nplt.axhline(y=0,linestyle='--', color = 'black')\nplt.axhline(y=-1.96\/np.sqrt(len(m1)),linestyle='--', color = 'red')\nplt.axhline(y=1.96\/np.sqrt(len(m1)),linestyle='--', color = 'red')","13a5a57e":"### Let's look at ACF + PACF for each kind of process","4f9287bf":"### Now let's generate an MA process","28ac3067":"### First let's figure out how to generate an AR proces"}}