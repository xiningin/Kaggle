{"cell_type":{"a697483f":"code","fb914276":"code","4b26e0bf":"code","8468fb96":"code","0be791c5":"code","40a8f52d":"code","08950a46":"code","cc9693ff":"code","0be9a9b3":"code","25aa5548":"code","d2a3b4e1":"code","434a3b2e":"code","8bc312e9":"code","e3452ec0":"code","9e4bd6ff":"code","d79ab1c4":"code","2fe66911":"code","bbdbe903":"code","6a8ea717":"code","9c7b2579":"code","8767c547":"code","6d8a8e4b":"code","9d07bd8c":"code","a0721c49":"code","b975edb7":"code","cd65d479":"code","5565eca3":"code","783ba542":"code","11e8efe7":"code","f08efecf":"code","7b5afc06":"code","066c5794":"code","0cf03d53":"code","7727f6fe":"code","1a07fb88":"code","616d1dce":"code","936b6ff3":"code","6a86bbbc":"code","8e46606a":"markdown","07c5ba5d":"markdown","1d863a76":"markdown","466712fb":"markdown","dddf11f6":"markdown","358b55ad":"markdown","5ff19bf1":"markdown","71005361":"markdown","66564e46":"markdown","520f8f19":"markdown","10105a5a":"markdown","cf902b96":"markdown","f8e800fc":"markdown","96715d3f":"markdown","04f12466":"markdown","146a3962":"markdown","6c8d2337":"markdown","a18b6d67":"markdown","198014ba":"markdown","d8c5c527":"markdown","f5763f81":"markdown","af28d647":"markdown","cdd31298":"markdown","2c01a1ff":"markdown"},"source":{"a697483f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb914276":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nstyle.use('ggplot')\n%matplotlib inline\nimport seaborn as sns\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\n#plt.rcParams['figure.figsize']=17,8\nimport cufflinks as cf\nimport plotly.offline as pyo\nfrom plotly.offline import init_notebook_mode,plot,iplot\nimport folium","4b26e0bf":"df=pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/city_day.csv')","8468fb96":"df.head()","0be791c5":"df.isnull().sum()","40a8f52d":"df  = df.fillna(df.mean())","08950a46":"df['BTX'] = df['Benzene']+df['Toluene']+df['Xylene']\ndf.drop(['Benzene','Toluene','Xylene'],axis=1,inplace=True)","cc9693ff":"df['Date'] = pd.to_datetime(df['Date'],format='%Y-%m-%d') # date parse\ndf['year'] = df['Date'].dt.year # year\ndf['year'] = df['year'].fillna(0.0).astype(int)\ndf['month'] = [d.strftime('%b') for d in df.Date]","0be9a9b3":"S=df.groupby('City')['SO2'].max().sort_values(ascending=False).reset_index()","25aa5548":"S.head()","d2a3b4e1":"trace = go.Table(\n    domain=dict(x=[0, 0.52],\n                y=[0, 1.0]),\n    header=dict(values=[\"City\",\"SO2\"],\n                fill = dict(color = '#119DFF'),\n                font = dict(color = 'white', size = 14),\n                align = ['center'],\n               height = 30),\n    cells=dict(values=[S['City'].head(10),S['SO2'].head(10)],\n               fill = dict(color = ['lightgreen', 'white']),\n               align = ['center']))\n\ntrace1 = go.Bar(x=S['City'].head(10),\n                y=S['SO2'].head(10),\n                xaxis='x1',\n                yaxis='y1',\n                marker=dict(color='lime'),opacity=0.60)\nlayout = dict(\n    width=830,\n    height=420,\n    autosize=False,\n    title='TOP 10 Cities with Max SO2',\n    showlegend=False,   \n    xaxis1=dict(**dict(domain=[0.58, 1], anchor='y1', showticklabels=True)),\n    yaxis1=dict(**dict(domain=[0, 1.0], anchor='x1', hoverformat='.2f')),  \n)\n\nfig1 = dict(data=[trace, trace1], layout=layout)\niplot(fig1)","434a3b2e":"SO2=df.groupby('year')['SO2'].sum().reset_index().sort_values(by='year',ascending=False)\nNO2=df.groupby('year')['NO2'].sum().reset_index().sort_values(by='year',ascending=False)\nBTX=df.groupby('year')['BTX'].sum().reset_index().sort_values(by='year',ascending=False)\nCO=df.groupby('year')['CO'].sum().reset_index().sort_values(by='year',ascending=False)\nPM=df.groupby('year')['PM2.5'].sum().reset_index().sort_values(by='year',ascending=False)\nO=df.groupby('year')['O3'].sum().reset_index().sort_values(by='year',ascending=False)","8bc312e9":"!pip install chart_studio","e3452ec0":"plt.subplots(figsize =(15,8))\nsns.pointplot(x='month', y='SO2', data=df,color='Orange')\nplt.xlabel('MONTHS',fontsize = 16,color='blue')\nplt.ylabel('SO2',fontsize = 16,color='blue')\nplt.title('SO2 in Different Months',fontsize = 20,color='blue')","9e4bd6ff":"N=df.groupby('City')['NO2'].max().sort_values(ascending=False).reset_index()\nN.head()","d79ab1c4":"trace = go.Table(\n    domain=dict(x=[0, 0.52],\n                y=[0, 1.0]),\n    header=dict(values=[\"City\",\"NO2\"],\n                fill = dict(color = '#119DFF'),\n                font = dict(color = 'white', size = 14),\n                align = ['center'],\n               height = 30),\n    cells=dict(values=[N['City'].head(10),N['NO2'].head(10)],\n               fill = dict(color = ['#25FEFD', 'white']),\n               align = ['center']))\n\ntrace1 = go.Bar(x=N['City'].head(10),\n                y=N['NO2'].head(10),\n                xaxis='x1',\n                yaxis='y1',\n                marker=dict(color='darkblue'),opacity=0.60)\nlayout = dict(\n    width=830,\n    height=430,\n    autosize=False,\n    title='TOP 10 Cities with Max NO2',\n    showlegend=False,   \n    xaxis1=dict(**dict(domain=[0.58, 1], anchor='y1', showticklabels=True)),\n    yaxis1=dict(**dict(domain=[0, 1.0], anchor='x1', hoverformat='.2f')),  \n)\n\nfig1 = dict(data=[trace, trace1], layout=layout)\niplot(fig1)","2fe66911":"plt.subplots(figsize =(15,8))\nsns.pointplot(x='month', y='NO2', data=df,color='darkblue')\nplt.xlabel('MONTHS',fontsize = 16,color='blue')\nplt.ylabel('NO2',fontsize = 16,color='blue')\nplt.title('NO2 in Different Months',fontsize = 20,color='blue')","bbdbe903":"C=df.groupby('City')['CO'].max().sort_values(ascending=False).reset_index()\nC.head()","6a8ea717":"trace = go.Table(\n    domain=dict(x=[0, 0.52],\n                y=[0, 1.0]),\n    header=dict(values=[\"City\",\"CO\"],\n                fill = dict(color = 'red'),\n                font = dict(color = 'white', size = 14),\n                align = ['center'],\n               height = 30),\n    cells=dict(values=[C['City'].head(10),C['CO'].head(10)],\n               fill = dict(color = ['lightsalmon', 'white']),\n               align = ['center']))\n\ntrace1 = go.Bar(x=C['City'].head(10),\n                y=C['CO'].head(10),\n                xaxis='x1',\n                yaxis='y1',\n                marker=dict(color='fuchsia'),opacity=0.60)\nlayout = dict(\n    width=830,\n    height=490,\n    autosize=False,\n    title='TOP 10 Cities with Max CO',\n    showlegend=False,   \n    xaxis1=dict(**dict(domain=[0.58, 1], anchor='y1', showticklabels=True)),\n    yaxis1=dict(**dict(domain=[0, 1.0], anchor='x1', hoverformat='.2f')),  \n)\n\nfig1 = dict(data=[trace, trace1], layout=layout)\niplot(fig1)","9c7b2579":"plt.subplots(figsize =(15,8))\nsns.pointplot(x='month', y='CO', data=df,color='green')\nplt.xlabel('MONTHS',fontsize = 16,color='blue')\nplt.ylabel('CO',fontsize = 16,color='blue')\nplt.title('CO in Different Months',fontsize = 20,color='blue')","8767c547":"P=df.groupby('City')['PM2.5'].max().sort_values(ascending=False).reset_index()\nP.head()","6d8a8e4b":"trace = go.Table(\n    domain=dict(x=[0, 0.52],\n                y=[0, 1.0]),\n    header=dict(values=[\"City\",\"PM2.5\"],\n                fill = dict(color = '#119DFF'),\n                font = dict(color = 'white', size = 14),\n                align = ['center'],\n               height = 30),\n    cells=dict(values=[P['City'].head(10),P['PM2.5'].head(10)],\n               fill = dict(color = ['#25FEFD', 'white']),\n               align = ['center']))\n\ntrace1 = go.Bar(x=P['City'].head(10),\n                y=P['PM2.5'].head(10),\n                xaxis='x1',\n                yaxis='y1',\n                marker=dict(color='deeppink'),opacity=0.60)\nlayout = dict(\n    width=830,\n    height=430,\n    autosize=False,\n    title='TOP 10 Cities with Max PM2.5',\n    showlegend=False,   \n    xaxis1=dict(**dict(domain=[0.58, 1], anchor='y1', showticklabels=True)),\n    yaxis1=dict(**dict(domain=[0, 1.0], anchor='x1', hoverformat='.2f')),  \n)\n\nfig1 = dict(data=[trace, trace1], layout=layout)\niplot(fig1)","9d07bd8c":"plt.subplots(figsize =(15,8))\nsns.pointplot(x='month', y='PM2.5', data=df,color='deeppink')\nplt.xlabel('MONTHS',fontsize = 16,color='blue')\nplt.ylabel('PM2.5',fontsize = 16,color='blue')\nplt.title('PM2.5 in Different Months',fontsize = 20,color='blue')","a0721c49":"B=df.groupby('City')['BTX'].max().sort_values(ascending=False).reset_index()\nB.head()","b975edb7":"trace = go.Table(\n    domain=dict(x=[0, 0.52],\n                y=[0, 1.0]),\n    header=dict(values=[\"City\",\"BTX\"],\n                fill = dict(color = '#119DFF'),\n                font = dict(color = 'white', size = 14),\n                align = ['center'],\n               height = 30),\n    cells=dict(values=[B['City'].head(10),B['BTX'].head(10)],\n               fill = dict(color = ['#25FEFD', 'white']),\n               align = ['center']))\n\ntrace1 = go.Bar(x=B['City'].head(10),\n                y=B['BTX'].head(10),\n                xaxis='x1',\n                yaxis='y1',\n                marker=dict(color='midnightblue'),opacity=0.60)\nlayout = dict(\n    width=830,\n    height=430,\n    autosize=False,\n    title='TOP 10 Cities with Max BTX',\n    showlegend=False,   \n    xaxis1=dict(**dict(domain=[0.58, 1], anchor='y1', showticklabels=True)),\n    yaxis1=dict(**dict(domain=[0, 1.0], anchor='x1', hoverformat='.2f')),  \n)\n\nfig1 = dict(data=[trace, trace1], layout=layout)\niplot(fig1)","cd65d479":"plt.subplots(figsize =(15,8))\nsns.pointplot(x='month', y='BTX', data=df,color='salmon')\nplt.xlabel('MONTHS',fontsize = 16,color='blue')\nplt.ylabel('BTX',fontsize = 16,color='blue')\nplt.title('BTX in Different Months',fontsize = 20,color='blue')","5565eca3":"from plotly.tools import make_subplots\ntrace1=go.Scatter(x=SO2['year'], y=SO2['SO2'], mode='lines+markers', name='NO2')\ntrace2=go.Scatter(x=NO2['year'], y=NO2['NO2'], mode='lines+markers', name='NO2')\ntrace3=go.Scatter(x=CO['year'], y=CO['CO'], mode='lines+markers', name='CO')\ntrace4=go.Scatter(x=PM['year'], y=PM['PM2.5'], mode='lines+markers', name='PM2.5')\nfig = plotly.tools.make_subplots(rows=2, cols=2,print_grid=False,\n                          subplot_titles=('SO2 in diff. years','NO2 in diff. years','CO in diff. years',\n                                          'PM2.5 in diff. years'))\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\nfig['layout'].update(height=550, width=850,title='AIR Pollutants In different Years',showlegend=False)\niplot(fig)","783ba542":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=SO2['year'], y=SO2['SO2'], mode='lines+markers', name='SO2',line=dict(color='Blue', width=2)))\nfig.add_trace(go.Scatter(x=NO2['year'], y=NO2['NO2'], mode='lines+markers', name='NO2',line=dict(color='Red', width=2)))\nfig.add_trace(go.Scatter(x=BTX['year'], y=BTX['BTX'], mode='lines+markers', name='BTX',line=dict(color='Green', width=2)))\nfig.add_trace(go.Scatter(x=CO['year'], y=CO['CO'], mode='lines+markers', name='CO',line=dict(color='orange', width=2)))\nfig.add_trace(go.Scatter(x=PM['year'], y=PM['PM2.5'], mode='lines+markers', name='PM2.5',line=dict(color='Magenta', width=2)))\nfig.add_trace(go.Scatter(x=O['year'], y=O['O3'], mode='lines+markers', name='Ozone',line=dict(color='royalblue', width=2)))\nfig.update_layout(title='AIR POLLUTANTS PARTICLES IN DIFFERENT YEARS', xaxis_tickfont_size=14,yaxis=dict(title='TOTAL AMOUNT IN YEARS'))\nfig.show()","11e8efe7":"cities = ['Ahmedabad','Delhi','Bengaluru','Kolkata','Hyderabad']\n\nfiltered_city_day = df[df['Date'] >= '2019-01-01']\nAQI = filtered_city_day[filtered_city_day.City.isin(cities)][['Date','City','AQI','AQI_Bucket']]\nAQI.head()","f08efecf":"df_Ahmedabad = df[df['City']== 'Ahmedabad']\ndf_Bengaluru = df[df['City']== 'Bengaluru']\ndf_Delhi     = df[df['City']== 'Delhi']\ndf_Hyderabad = df[df['City']== 'Hyderabad']\ndf_Kolkata   = df[df['City']== 'Kolkata']","7b5afc06":"fig,ax=plt.subplots(figsize=(20, 10))\nsns.despine(fig, left=True, bottom=True)\nsns.set_context(\"notebook\", font_scale=2, rc={\"lines.linewidth\": 2})\nsns.distplot(df_Delhi['AQI'].iloc[::30], color=\"y\",label = 'Delhi')\nsns.distplot(df_Ahmedabad['AQI'].iloc[::30], color=\"b\",label = 'Ahmedabad')\nsns.distplot(df_Hyderabad['AQI'].iloc[::30], color=\"black\",label = 'Hyderabad')\nsns.distplot(df_Bengaluru['AQI'].iloc[::30], color=\"g\",label = 'Bengaluru')\nsns.distplot(df_Kolkata['AQI'].iloc  [::30], color=\"r\",label = 'Kolkata')\nlabels = [item.get_text() for item in ax.get_xticklabels()]\nax.set_xticklabels(ax.get_xticklabels(labels), rotation=30,ha=\"left\")\nplt.rcParams[\"xtick.labelsize\"] = 15\nax.set_title('AQI DISTRIBUTIONS FROM DIFFERENT CITIES')\nax.legend(fontsize = 14);","066c5794":"df_Bengaluru_2019=df_Bengaluru[df_Bengaluru['Date']>='2019-01-01']\ndf_Ahmedabad_2019=df_Ahmedabad[df_Ahmedabad['Date']>='2019-01-01']\ndf_Delhi_2019=df_Delhi[df_Delhi['Date']>='2019-01-01']\ndf_Kolkata_2019=df_Kolkata[df_Kolkata['Date']>='2019-01-01']\ndf_Hyderabad_2019=df_Hyderabad[df_Hyderabad['Date']>='2019-01-01']","0cf03d53":"x = df_Ahmedabad_2019\ny = df_Bengaluru_2019\nz = df_Hyderabad_2019\n\ndata = [go.Scatterpolar(\n  r = [x['SO2'].values[0],x['NO2'].values[0],x['CO'].values[0],x['BTX'].values[0],x['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself', opacity = 0.8,\n  name = \"Ahmedabad\"),\n        \n    go.Scatterpolar(\n  r = [y['SO2'].values[0],y['NO2'].values[0],y['CO'].values[0],y['BTX'].values[0],y['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself',subplot = \"polar2\",\n    name = \"Bengaluru\"),\n       \n    go.Scatterpolar(\n  r = [z['SO2'].values[0],z['NO2'].values[0],z['CO'].values[0],z['BTX'].values[0],z['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself',subplot = \"polar3\",\n    name = \"Hyderbad\")]\nlayout = go.Layout(title = \"Comparison Between Ahmedabad,Bengaluru,Hyderabad in the year 2019\",\n                   \n                   polar = dict(radialaxis = dict(visible = True,range = [0, 120]),\n                   domain = dict(x = [0, 0.27],y = [0, 1])),\n                  \n                   polar2 = dict(radialaxis = dict(visible = True,range = [0, 60]),\n                   domain = dict(x = [0.35, 0.65],y = [0, 1])),\n                  \n                   polar3 = dict(radialaxis = dict(visible = True,range = [0, 70]),\n                   domain = dict(x = [0.75, 1.0],y = [0, 1])),)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","7727f6fe":"df_Bengaluru_2020=df_Bengaluru[df_Bengaluru['Date']>='2020-01-01']\ndf_Ahmedabad_2020=df_Ahmedabad[df_Ahmedabad['Date']>='2020-01-01']\ndf_Delhi_2020=df_Delhi[df_Delhi['Date']>='2020-01-01']\ndf_Kolkata_2020=df_Kolkata[df_Kolkata['Date']>='2020-01-01']\ndf_Hyderabad_2020=df_Hyderabad[df_Hyderabad['Date']>='2020-01-01']","1a07fb88":"x = df_Ahmedabad_2020\ny = df_Bengaluru_2020\nz = df_Hyderabad_2020\n\ndata = [go.Scatterpolar(\n  r = [x['SO2'].values[0],x['NO2'].values[0],x['CO'].values[0],x['BTX'].values[0],x['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself', opacity = 0.8,\n  name = \"Ahmedabad\"),\n        \n    go.Scatterpolar(\n  r = [y['SO2'].values[0],y['NO2'].values[0],y['CO'].values[0],y['BTX'].values[0],y['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself',subplot = \"polar2\",\n    name = \"Bengaluru\"),\n       \n    go.Scatterpolar(\n  r = [z['SO2'].values[0],z['NO2'].values[0],z['CO'].values[0],z['BTX'].values[0],z['PM2.5'].values[0]],\n  theta = ['SO2','NO2','CO','BTX','PM2.5'],\n  fill = 'toself',subplot = \"polar3\",\n    name = \"Hyderbad\")]\nlayout = go.Layout(title = \"Comparison Between Ahmedabad,Bengaluru,Hyderabad in the year 2020\",\n                   \n                   polar = dict(radialaxis = dict(visible = True,range = [0, 85]),\n                   domain = dict(x = [0, 0.27],y = [0, 1])),\n                  \n                   polar2 = dict(radialaxis = dict(visible = True,range = [0, 45]),\n                   domain = dict(x = [0.35, 0.65],y = [0, 1])),\n                  \n                   polar3 = dict(radialaxis = dict(visible = True,range = [0, 45]),\n                   domain = dict(x = [0.75, 1.0],y = [0, 1])),)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","616d1dce":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['SO2'], mode='lines', name='SO2',line=dict(color='Blue', width=2)))\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['NO2'], mode='lines', name='NO2',line=dict(color='Red', width=2)))\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['BTX'], mode='lines', name='BTX',line=dict(color='Green', width=2)))\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['CO'], mode='lines', name='CO',line=dict(color='orange', width=2)))\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['PM2.5'], mode='lines', name='PM2.5',line=dict(color='Magenta', width=2)))\nfig.add_trace(go.Scatter(x=df_Delhi_2020['Date'], y=df_Delhi_2020['O3'], mode='lines', name='Ozone',line=dict(color='royalblue', width=2)))\nfig.update_layout(title='AIR POLLUTANTS PARTICLES ON 2020 DELHI', xaxis_tickfont_size=14,yaxis=dict(title='AIR POLLUTANTS'))\nfig.show()","936b6ff3":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['SO2'], mode='lines', name='SO2',line=dict(color='Blue', width=2)))\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['NO2'], mode='lines', name='NO2',line=dict(color='Red', width=2)))\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['BTX'], mode='lines', name='BTX',line=dict(color='Green', width=2)))\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['CO'], mode='lines', name='CO',line=dict(color='orange', width=2)))\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['PM2.5'], mode='lines', name='PM2.5',line=dict(color='Magenta', width=2)))\nfig.add_trace(go.Scatter(x=df_Kolkata_2020['Date'], y=df_Kolkata_2020['O3'], mode='lines', name='Ozone',line=dict(color='royalblue', width=2)))\nfig.update_layout(title='AIR POLLUTANTS PARTICLES ON 2020 Kolkata', xaxis_tickfont_size=14,yaxis=dict(title='AIR POLLUTANTS'))\nfig.show()","6a86bbbc":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['SO2'], mode='lines', name='SO2',line=dict(color='Blue', width=2)))\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['NO2'], mode='lines', name='NO2',line=dict(color='Red', width=2)))\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['BTX'], mode='lines', name='BTX',line=dict(color='Green', width=2)))\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['CO'], mode='lines', name='CO',line=dict(color='orange', width=2)))\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['PM2.5'], mode='lines', name='PM2.5',line=dict(color='Magenta', width=2)))\nfig.add_trace(go.Scatter(x=df_Bengaluru_2020['Date'], y=df_Bengaluru_2020['O3'], mode='lines', name='Ozone',line=dict(color='royalblue', width=2)))\nfig.update_layout(title='AIR POLLUTANTS PARTICLES ON 2020 Bengaluru', xaxis_tickfont_size=14,yaxis=dict(title='AIR POLLUTANTS'))\nfig.show()","8e46606a":"*Comparison of Air Pollutants before and after Lockdown*","07c5ba5d":"**MONTHLY**","1d863a76":"**In One Graph**","466712fb":"***IN BENGALURU***","dddf11f6":"***MONTHLY***","358b55ad":"> Let's Compare ALL the pollutants with the changes of years","5ff19bf1":"*MONTHLY*","71005361":"***SO2 MONTHLY***","66564e46":"> Here We can see that in the month of basically August and sept. The amount of SO2 decreases, This may be due to Monsoon.","520f8f19":"***TOP 10 CITIES***","10105a5a":"***IN KOLKATA***","cf902b96":"*** Lets compare among the three cities with the air pollutants particles in the year 2019***","f8e800fc":"***# Let's Check The AQI Distributions of these 5 cities***","96715d3f":"***IN 2020***","04f12466":"***IN DELHI***","146a3962":"***NO2***","6c8d2337":"***Dealing With Missing Values***","a18b6d67":"***Convert date into pd.to_datetime***","198014ba":"***PM2.5***","d8c5c527":"****BTX****","f5763f81":"**SO2 in Different Cities**","af28d647":"**CO**","cdd31298":"***Cmbine Benzene Toluene and Xylene column***","2c01a1ff":"> LET'S ANALYZE SO2"}}