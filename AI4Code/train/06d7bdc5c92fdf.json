{"cell_type":{"2445c754":"code","804cd2a3":"code","fd36d0a3":"code","6b9c4953":"code","51b8889f":"code","f8b66f5d":"code","d45b4356":"code","30bcdac7":"code","a5761402":"code","2590bc76":"code","5167a1b5":"code","0c5c90dc":"code","74521bd0":"code","c12b59d5":"code","bf18d394":"markdown","58f1d77f":"markdown","60b1dc6b":"markdown","e9e4b6bc":"markdown","6c7c5347":"markdown","72da8676":"markdown","d9f925ea":"markdown"},"source":{"2445c754":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","804cd2a3":"df=pd.read_csv('\/kaggle\/input\/jigsaw-toxic-comment-classification-challenge\/train.csv.zip')","fd36d0a3":"df.head(10)","6b9c4953":"output=['toxic','severe_toxic','obscene','threat','insult','identity_hate']\nres_df1=df.loc[(df['toxic'] == 1) | (df['severe_toxic'] == 1) | (df['obscene'] == 1) | (df['threat'] == 1) | (df['insult'] == 1) | (df['identity_hate'] == 1)] \nres_df1.loc[:,'label'] = 1\nres_df2=df.loc[(df['toxic'] == 0) & (df['severe_toxic'] == 0) & (df['obscene'] == 0) & (df['threat'] == 0) & (df['insult'] == 0) & (df['identity_hate'] == 0)] \nres_df2.loc[:,'label'] = 0\ndf=res_df1.append(res_df2)\ndf = df.sample(frac=1).reset_index(drop=True)\ndf.head(5)","51b8889f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df['comment_text'],df['label'], test_size=0.3, random_state=42)","f8b66f5d":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfidf= TfidfVectorizer(min_df=2,max_df=0.5,ngram_range=(1,1),max_features=10000,stop_words='english')\nfeatures= tfidf.fit_transform(X_train)\n\n","d45b4356":"features=features.todense()\ntest_tfidf= tfidf.transform(X_test)\ntest_tfidf=test_tfidf.todense()","30bcdac7":"#random\nfrom sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier(max_depth=15, n_estimators=40)\nclf.fit(features, y_train)","a5761402":"test_data=X_test.tolist()\ntest_data[12445]","2590bc76":"import shap\nexplainer = shap.TreeExplainer(clf)\nchoosen_instance = test_tfidf[12445]\nchoosen_instance = np.squeeze(np.asarray(choosen_instance))\nshap_values = explainer.shap_values(choosen_instance)\nshap.initjs()\nshap.force_plot(explainer.expected_value[0], shap_values[0],choosen_instance,feature_names=tfidf.get_feature_names())","5167a1b5":"test_data[37]","0c5c90dc":"choosen_instance = test_tfidf[37]\nchoosen_instance = np.squeeze(np.asarray(choosen_instance))\nshap_values = explainer.shap_values(choosen_instance)\nshap.initjs()\nshap.force_plot(explainer.expected_value[1], shap_values[1],choosen_instance,feature_names=tfidf.get_feature_names())","74521bd0":"test_data[75]","c12b59d5":"choosen_instance = test_tfidf[75]\nchoosen_instance = np.squeeze(np.asarray(choosen_instance))\nshap_values = explainer.shap_values(choosen_instance)\nshap.initjs()\nshap.force_plot(explainer.expected_value[1], shap_values[1],choosen_instance,feature_names=tfidf.get_feature_names())","bf18d394":"another toxic example","58f1d77f":"# Working with Shap Library","60b1dc6b":"Here Words like fuck, balls , ass have contribution which makes a toxic sentence.","e9e4b6bc":"Here you can see the contribution of **thanks** word is quite high as compare to other features","6c7c5347":"# What is Explainable AI?\n\n**Explainable AI** is an emerging field in machine learning that aims to address how black box decisions of AI are made. This area inspects and tries to understand the steps & models involved in making decisions. It answers questions like - \n\n1. Why did the AI system make a specific prediction or decision?\n2. Why didn\u2019t the AI system do something else?\n3. When do AI system give enough confidence in the decision that one can trust it, how can the AI system correct    errors that arise?\n\nTo promote explainable AI, researchers have been developing tools and techniques such as What-if Tool, LIME,SHAP TreeInterpreter and many more.\n\n","72da8676":"# Shapley value\n\nA prediction can be explained by assuming that each feature value of the instance is a \"player\" in a game where the prediction is the payout. Shapley values -- a method from coalitional game theory -- tells us how to fairly distribute the \"payout\" among the features.\n\nLloyd shapley Idea:- Members should recieve payments or share propotionals to their marginal contribution.\n\nThe Shapley value is the only attribution method that satisfies the properties Efficiency, Symmetry, Dummy and Additivity, which together can be considered a definition of a fair payout.\n\nTo get deeper into the definition and computation of the Shapley value , you can refer this link https:\/\/christophm.github.io\/interpretable-ml-book\/shapley.html\n\n","d9f925ea":"Here we use Force Plot to visualize the contribution of various features(words) which makes the sentence as toxic or non toxic"}}