{"cell_type":{"dac9427f":"code","3a162e38":"code","6ef818f7":"code","5f385b8b":"code","d4ad8cc2":"code","8cb5f89b":"code","29d672d3":"code","e0812921":"code","79942ba5":"code","fd2295c3":"code","f998350e":"code","a4c1de92":"code","0f0715f7":"code","6afe599f":"code","777a9fe3":"code","ca6332f4":"code","30763b61":"code","31273c46":"code","b9215dfd":"code","04a995d0":"code","9dfabd7a":"code","8764a6da":"markdown","bcc08d9d":"markdown","260b909b":"markdown","5e1a1aa9":"markdown","ecc648ea":"markdown","7aa97f2e":"markdown","6e389b7c":"markdown","4b2ed53c":"markdown","7ca75c41":"markdown","59ee0dab":"markdown","74d477a9":"markdown","ad44edb3":"markdown","7948bceb":"markdown","5b278418":"markdown","752e7a2c":"markdown","9505d754":"markdown","f41b611e":"markdown","bbb78a3c":"markdown","8d2cdde8":"markdown"},"source":{"dac9427f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a162e38":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom wordcloud import WordCloud, ImageColorGenerator","6ef818f7":"dataset = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')\ndataset.head(10)","5f385b8b":"dataset.describe()","d4ad8cc2":"dataset.info()","8cb5f89b":"text = \",\".join(review for review in dataset.Title)\nwordcloud = WordCloud(max_words=200,collocations=False,background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","29d672d3":"total = dataset.isnull().sum().sort_values(ascending=False)\npercent = (dataset.isnull().sum()\/dataset.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(10)","e0812921":"dataset.drop(['Rotten Tomatoes','Unnamed: 0','Type'],axis=1, inplace=True)","79942ba5":"netflix_movies_count = len(dataset[dataset['Netflix'] == 1].index)\nhulu_movies_count = len(dataset[dataset['Hulu'] == 1].index)\nprime_movies_count =len(dataset[dataset['Prime Video'] == 1].index)\ndisney_movies_count = len(dataset[dataset['Disney+'] == 1].index)\n\n\nprint(netflix_movies_count)\nprint(hulu_movies_count)\nprint(prime_movies_count)\nprint(disney_movies_count)\n","fd2295c3":"label=['Netflix','Hulu', 'Prime Video','Disney+']\ncount=[netflix_movies_count,hulu_movies_count,prime_movies_count,disney_movies_count]\nplatform = pd.DataFrame(\n    {'Platform': label,\n     'MovieCount': count,\n    })\nplatform","f998350e":"fig = px.pie(platform,names='Platform', values='MovieCount')\nfig.update_traces(rotation=45, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"percent+label\", title='Movie Count per platform')\nfig.show()","a4c1de92":"yearly_movie_count = dataset.groupby('Year')['Title'].count().reset_index().rename(columns = {'Title':'MovieCount'})\nfig = px.bar(yearly_movie_count, x='Year', y='MovieCount', color='MovieCount', height=600)\nfig.show()","0f0715f7":"dataset['Genres'].value_counts().head(5)","6afe599f":"top_5_genres = ['Drama','Documentary','Comedy', 'Comedy,Drama','Horror']\ntable = dataset.loc[:,['Year','Genres','IMDb']]\ntable['AvgRating'] = table.groupby([table.Genres,table.Year])['IMDb'].transform('mean')\ntable.drop('IMDb', axis=1, inplace=True)\ntable = table[(table.Year>2009) & (table.Year<2020)]\ntable = table.loc[table['Genres'].isin(top_5_genres)]\ntable = table.sort_values('Year')","777a9fe3":"fig=px.bar(table,x='Genres', y='AvgRating', animation_frame='Year', \n           animation_group='Genres', color='Genres', hover_name='Genres', range_y=[0,10])\nfig.update_layout(showlegend=False)\nfig.show()","ca6332f4":"top_movies=dataset[dataset['IMDb']==9.3][['Title','Directors']]\ntop_movies","30763b61":"text = \",\".join(review for review in top_movies.Title)\nwordcloud = WordCloud(max_words=200,collocations=False,background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","31273c46":"movies_by_country = dataset.groupby('Country')['Title'].count().reset_index().sort_values('Title',ascending = False).head(10).rename(columns = {'Title':'MovieCount'})\nfig = px.pie(movies_by_country,names='Country', values='MovieCount')\nfig.update_traces(rotation=180, pull=[0.1,0.03,0.03,0.03,0.03],textinfo=\"percent+label\", title='Movie Count per Country')\nfig.update_layout(showlegend=False)\nfig.show()","b9215dfd":"longest_movies = dataset.sort_values('Runtime',ascending = False).head(10)\nfig = px.bar(longest_movies, x='Title', y='Runtime', color='Runtime', height=500, title='Runtime of the top 10 longest movies')\nfig.show()","04a995d0":"runtime_top_movies=dataset.loc[dataset['IMDb']==9.3][['Title','Runtime']]\nruntime_top_movies","9dfabd7a":"fig = px.bar(runtime_top_movies, x='Title', y='Runtime', color='Runtime', height=700, title='Runtime of the highest rated movies')\nfig.show()","8764a6da":"# Wordcloud of the highest rated movies","bcc08d9d":"# Exploring the dataset","260b909b":"# Please upvote if you like it.","5e1a1aa9":"# Runtimes of highest rated movies","ecc648ea":"71.1% of the movies are available on Prime Video.","7aa97f2e":"**These are some of the analysis and visualizations you can perform as a beginner.**","6e389b7c":"# Movie Count per Country","4b2ed53c":"****Number of movies on different platforms like Netflix, Hulu, Prime Video and Disney+****","7ca75c41":"# **Calculating missing data**","59ee0dab":"# Average ratings of Top 5 Genres","74d477a9":"# Analysing and Visualizing the data","ad44edb3":"**We have 6 movies that have the highest rating**","7948bceb":"# Importing libraries","5b278418":" A large number of movies were released in the year 2017.","752e7a2c":"**We'll be removing the Rotten Tomatoes because it has more than 50% data missing. \n\n**** We will also drop thenUnnamed: 0 and Type columns because they are irrelevant  ****","9505d754":"# **Some of the observations about the data**\n\n* There are 16744 rows i.e., information about 16744 movies is available.\n* The latest movie was released in the year 2020 and the oldest in 1902.\n* The average rating of movies is 5.9\n* The average runtime of movies is 93 minutes.\n ","f41b611e":"We have maximum number of movies available on Prime Video.","bbb78a3c":"# Runtime of the top 10 longest movies ","8d2cdde8":"# Number of movies per year "}}