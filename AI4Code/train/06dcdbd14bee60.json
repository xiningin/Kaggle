{"cell_type":{"53cf40ad":"code","35970cca":"code","39b2fda5":"code","d805dd53":"code","ac46c0d7":"code","ac6841d8":"code","55bdc20b":"code","b5a79a9f":"code","f9089999":"code","91cc32de":"code","879d592f":"code","668a7eef":"code","18423607":"code","21cd4dce":"code","668d7ce8":"code","78a319c1":"code","8e25168e":"code","c5617e29":"code","30a81731":"code","1c20951f":"code","769f3850":"code","969fc179":"code","e5cdad73":"code","91aec371":"code","5c67e8e0":"code","753793c2":"code","21869dbc":"code","667f4929":"code","96f665de":"code","5bd2be2e":"code","d1ed8c50":"code","79ed5552":"code","fbcbb682":"markdown","9dbec2c5":"markdown","546d8f46":"markdown","7ca28acd":"markdown","a696cce0":"markdown","438b49c5":"markdown","eb098ffc":"markdown","efe459d6":"markdown","5b2858b2":"markdown"},"source":{"53cf40ad":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns","35970cca":"# The Python Pandas packages helps us work with our datasets. We start by acquiring the datasets into Pandas DataFrames\niris_dataset = pd.read_csv('..\/input\/Iris.csv')","39b2fda5":"# Preview the data\niris_dataset.head()","d805dd53":"# Check whether there are any missing values in the dataset\niris_dataset.info()","ac46c0d7":"# Id column in the dataset does not contribute hence dropping the 'ID' field.\niris_dataset.drop(['Id'], axis=1, inplace=True)\n\niris_dataset.head()","ac6841d8":"# Check the unique values present in the Species column\nprint(iris_dataset['Species'].unique())","55bdc20b":"# Plot the relationship between Sepal Length and Sepal width for all the species using matplotlib\nfig = iris_dataset[iris_dataset.Species=='Iris-setosa'].plot(kind = \"scatter\", x = \"SepalLengthCm\", y = \"SepalWidthCm\", color = \"orange\", label='Setosa', marker='x')\niris_dataset[iris_dataset.Species=='Iris-versicolor'].plot(kind = \"scatter\", x = \"SepalLengthCm\", y = \"SepalWidthCm\", color = \"green\", label='Versicolor', ax = fig, marker='o')\niris_dataset[iris_dataset.Species=='Iris-virginica'].plot(kind = \"scatter\", x = \"SepalLengthCm\", y = \"SepalWidthCm\", color = \"blue\", label='Virginica', ax = fig, marker = 's')\nfig.set_xlabel('Sepal Lenth in Cm')\nfig.set_ylabel('Sepal Width in cm')\nfig.set_title('Sepal Length vs Width')\nfig = plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","b5a79a9f":"# Plot the relationship between Petal Length and Petal width for all the species using seaborn package.\n\nplt.figure(figsize=(10,6))\nax = sns.scatterplot(x=iris_dataset.PetalLengthCm, y=iris_dataset.PetalWidthCm, hue=iris_dataset.Species, style=iris_dataset.Species)\nplt.title('Petal Length vs Width')\n","f9089999":"# Plotting boxplot \nf,axis = plt.subplots(2,2, figsize = [20,20])\nplt.subplot(2,2,1)\nsns.boxplot(data=iris_dataset, x = 'Species', y = 'SepalLengthCm')\nplt.subplot(2,2,2)\nsns.boxplot(data=iris_dataset, x = 'Species', y = 'SepalWidthCm')\nplt.subplot(2,2,3)\nsns.boxplot(data=iris_dataset, x = 'Species', y = 'PetalLengthCm')\nplt.subplot(2,2,4)\nsns.boxplot(data=iris_dataset, x = 'Species', y = 'PetalWidthCm')","91cc32de":"# Generating violin plot to provide a visual distribution of data and its probability density. This provides a combination of Box plot and Density plot.\nplt.figure(figsize=(15,15))\nplt.subplot(2,2,1)\nsns.violinplot('Species', 'SepalLengthCm', data = iris_dataset)\nplt.subplot(2,2,2)\nsns.violinplot('Species', 'SepalWidthCm', data = iris_dataset)\nplt.subplot(2,2,3)\nsns.violinplot('Species', 'PetalLengthCm', data = iris_dataset)\nplt.subplot(2,2,4)\nsns.violinplot('Species', 'PetalWidthCm', data = iris_dataset)","879d592f":"# Boxplot to get a better picture of how the data is distributed.\nplt.figure(figsize=(15,15))\nplt.subplot(2,2,1)\nsns.distplot(iris_dataset['SepalLengthCm'], bins=10)\nplt.subplot(2,2,2)\nsns.distplot(iris_dataset['SepalWidthCm'], bins = 10)\nplt.subplot(2,2,3)\nsns.distplot(iris_dataset['PetalLengthCm'], bins = 10)\nplt.subplot(2,2,4)\nsns.distplot(iris_dataset['PetalWidthCm'], bins = 10)","668a7eef":"# Generating Heatmap\nplt.figure(figsize=(12,8))\nsns.heatmap(iris_dataset.corr(), annot=True, linewidths=0.4)   # annot displays the value of each cell in the heatmat\nplt.show()","18423607":"# From the above heatmap its evident that the Petal Length and Petal Width are highly correlated. On the other hand, the Sepal Length and Sepal Width are not correlated.","21cd4dce":"# Loading the ML algorithms\nfrom sklearn.linear_model import LogisticRegression  # For Logistic Regression\nfrom sklearn.model_selection import train_test_split  # To split the data set into training and testing \nfrom sklearn.neighbors import KNeighborsClassifier  # for K Nearest neighbors\nfrom sklearn import svm  # for SVM (Support Vector Machines) algorithm\nfrom sklearn import metrics  # for checking model accuracy\nfrom sklearn.tree import DecisionTreeClassifier  # for using Decision Tree Algorithm","668d7ce8":"# Splitting the dataset into Training and Testing\nX = iris_dataset.drop(['Species'], axis=1)\ny = iris_dataset['Species']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3)","78a319c1":"print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","8e25168e":"X_train.head()","c5617e29":"y_train.head()","30a81731":"# Logistic Regression\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\nprediction_log_reg = model.predict(X_test)\n\nprint('The accuracy of Logistic Regression', metrics.accuracy_score(prediction_log_reg, y_test))","1c20951f":"# K-nearest neigbors\nmodel = KNeighborsClassifier(n_neighbors=10)\nmodel.fit(X_train,  y_train)\nprediction_KNear = model.predict(X_test)\n\nprint('The accuracy of K-nearest neighbors:', metrics.accuracy_score(prediction_KNear, y_test))","769f3850":"a_index = list(range(1,11))\na = pd.Series()\nx = [1,2,3,4,5,6,7,8,9,10]\nfor i in a_index:\n    model = KNeighborsClassifier(n_neighbors=i)\n    model.fit(X_train, y_train)\n    prediction = model.predict(X_test)\n    a = a.append(pd.Series(metrics.accuracy_score(prediction, y_test)))\nplt.plot(a_index, a)","969fc179":"# The above graph shows accuracy levels of KNN models for different values of n","e5cdad73":"# We had used all the features of the Iris. Now we will use Petals and Sepals seperately","91aec371":"petals = iris_dataset[['PetalLengthCm', 'PetalWidthCm', 'Species']]\nsepals = iris_dataset[['SepalLengthCm', 'SepalWidthCm', 'Species']]","5c67e8e0":"petals.head()","753793c2":"sepals.head()","21869dbc":"# Splitting the Petals and Sepals dataset into Training and Testing\n\npetals_x = petals.drop(['Species'], axis = 1)\npetals_y = petals['Species']\n\nsepals_x = sepals.drop(['Species'], axis = 1)\nsepals_y = sepals['Species']\n\nx_train_p, x_test_p, y_train_p, y_test_p = train_test_split(petals_x, petals_y, test_size = 0.3)\nx_train_s, x_test_s, y_train_s, y_test_s = train_test_split(sepals_x, sepals_y, test_size = 0.3)","667f4929":"print(x_train_p.shape, x_test_p.shape, y_train_p.shape, y_test_p.shape)\nprint(x_train_s.shape, x_test_s.shape, y_train_s.shape, y_test_s.shape)","96f665de":"#Logistic Regression\nmodel_log = LogisticRegression()\n# 1. Petals\nmodel_log.fit(x_train_p, y_train_p)\nprediction = model_log.predict(x_test_p)\n\nprint('The accuracy of the model for Petals is:', metrics.accuracy_score(prediction, y_test_p))\n\n# 2. Sepals\nmodel_log.fit(x_train_s, y_train_s)\nprediction = model_log.predict(x_test_s)\n\nprint('The accuracy of the model for Sepals is:', metrics.accuracy_score(prediction, y_test_s))","5bd2be2e":"# Decision Tree \nfrom sklearn.tree import DecisionTreeClassifier\nmodel_dt = DecisionTreeClassifier(criterion='gini', max_depth=6)  # by defalt it takes Gini index as critera\n\n# 1. Petals\nmodel_dt.fit(x_train_p, y_train_p)\nprediction = model_dt.predict(x_test_p)\n\nprint('The accuracy of the model for Petals is:', metrics.accuracy_score(prediction, y_test_p))\n\n# 2. Sepals\nmodel_dt.fit(x_train_s, y_train_s)\nprediction = model_dt.predict(x_test_s)\n\nprint('The accuracy of the model for Sepals is:', metrics.accuracy_score(prediction, y_test_s))","d1ed8c50":"# Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\nmodel_rf = RandomForestClassifier()\n\n# 1. Petals\nmodel_rf.fit(x_train_p, y_train_p)\nprediction = model_rf.predict(x_test_p)\n\nprint('The accuracy of the model for Petals is:', metrics.accuracy_score(prediction, y_test_p))\n\n# 2. Sepals\nmodel_rf.fit(x_train_s, y_train_s)\nprediction = model_rf.predict(x_test_s)\n\nprint('The accuracy of the model for Sepals is:', metrics.accuracy_score(prediction, y_test_s))","79ed5552":"# K-Nearest Neighbors\nmodel_knn = KNeighborsClassifier(n_neighbors=9)\n\n# 1. Petals\nmodel_knn.fit(x_train_p, y_train_p)\nprediction = model_knn.predict(x_test_p)\n\nprint('The accuracy of the model for Petals is:', metrics.accuracy_score(prediction, y_test_p))\n\n# 2. Sepals\nmodel_knn.fit(x_train_s, y_train_s)\nprediction = model_knn.predict(x_test_s)\n\nprint('The accuracy of the model for Sepals is:', metrics.accuracy_score(prediction, y_test_s))","fbcbb682":"## Importing the iris dataset","9dbec2c5":"\n\n## **1-1 Problem Feature**\n### The Iris or Fisher's dataset was introduced by Ronald Fisher in 1936 paper - The use of multiple measurements in taxonomic problems.\n### This dataset contains records of 3 species(Iris Setosa, Iris Virginica & Iris versicolor) with \n### 50 samples each. 4 features of each sample was measured i.e. The length and width of Sepals and Petals\n### The iris dataset is a good dataset for beginners in the field of Machine Learning.\n\n## **1-2 Variables in the Dataset**\n### The dataset contains 6 columns:\n### * Id\n### * SepalLengthCm\n### * SepalWidthCm\n### * PetalLengthCm\n### * PetalWidthCm\n### * Species\n\n## **1-3 Aim**\n### The aim of the dataset is to get the best accuracy by applying different Machine Learning algorithms","546d8f46":"## **Visualization**","7ca28acd":"### In the above plot for Petal length and Petal width, we get a better clustered distribution for different types of species. We get a strong dissection for Setosa with respect to Versicolor and Virginica. Also, a better clustered distribution for Versicolor and Virginica for Petals in comparison to Sepals. Hence we should consider data for Petals for more accurate predictions.","a696cce0":"## ****About the Notebook****\n### This is a very basic tutorial to the Machine Learning world using the Iris Dataset.\n### In this notebook I have applied the basic Machine Learning algorithms and tried to get the best accuracy possible.","438b49c5":"## Loading the required packages.","eb098ffc":"### We have 3 types of species present in the dataset - Iris-setosa, Iris-versicolor and Iris-virginica","efe459d6":"### From the above boxplots and violin plots its clearly visible that setosa < versicolor < virginica. \n### In Violinplot, the thinner part shows there is less density and the thicker portion portrays higher density. The white dot represents the median, the thick grey bar shows the IQR and the thin grey line shows 95% confidence interval.","5b2858b2":"###  In the above scatter plot, we can easily differentiate the Setosa species but its hard to visually differentiate between Versicolor and Virginica."}}