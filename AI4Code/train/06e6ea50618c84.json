{"cell_type":{"64721b1a":"code","eb92c12f":"code","c4a93ae6":"code","78ce2b77":"code","e52bf439":"code","41c40764":"code","ee392aac":"code","5b057097":"code","fe9ba44c":"code","5e0018c3":"code","b71264fa":"code","02846ca0":"markdown","7216d7ef":"markdown","9dee5a16":"markdown","237a9920":"markdown","c114bf31":"markdown","de8e6780":"markdown"},"source":{"64721b1a":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nimport tensorflow_addons as tfa\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.utils import to_categorical","eb92c12f":"SEED = 42\nEPOCHS = 300\nBATCH_SIZE = 32\n\ndf = pd.read_csv('..\/input\/parkinsons-disease-data-set\/parkinsons.data')","c4a93ae6":"def seed_everything(seed):\n    np.random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    tf.random.set_seed(seed)\n\nseed_everything(SEED)","78ce2b77":"df","e52bf439":"df['status'].value_counts()","41c40764":"df.describe()","ee392aac":"df = df.drop('name', axis=1)\n\ntrain_df, test_df = train_test_split(df, \n                                     test_size=0.2, \n                                     random_state=SEED)\ntrain_df, val_df = train_test_split(train_df,\n                                    test_size=0.2,\n                                    random_state=SEED)\n\n\nX_train = train_df.drop('status', axis=1).values.astype('float32')\ny_train = train_df['status'].values.astype('int32')\nX_val = val_df.drop('status', axis=1).values.astype('float32')\ny_val = val_df['status'].values.astype('int32')\nX_test = test_df.drop('status', axis=1).values.astype('float32')\ny_test = test_df['status'].values.astype('int32')\n\nmmsc = MinMaxScaler()\nX_train = mmsc.fit_transform(X_train) \nX_val = mmsc.transform(X_val)\nX_test = mmsc.transform(X_test)\n\ny_train = to_categorical(y_train)\ny_val = to_categorical(y_val)\ny_test = to_categorical(y_test)","5b057097":"shape = X_train.shape[1]\nnum_classes = y_train.shape[1]\n\nmodel = Sequential()\nmodel.add(Input((shape,)))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(num_classes, activation='softmax'))\nopt = tfa.optimizers.RectifiedAdam()\nmodel.compile(loss='categorical_crossentropy', optimizer=opt, metrics=['accuracy'])\nmodel.summary()","fe9ba44c":"es_callback = tf.keras.callbacks.EarlyStopping(patience=30, verbose=1, restore_best_weights=True)\nhistory = model.fit(X_train, y_train, batch_size=BATCH_SIZE, epochs=EPOCHS, \n                    validation_data=(X_val, y_val), callbacks=[es_callback])","5e0018c3":"pd.DataFrame(history.history)[['accuracy', 'val_accuracy']].plot()\npd.DataFrame(history.history)[['loss', 'val_loss']].plot()\nplt.show()","b71264fa":"model.evaluate(X_test, y_test)","02846ca0":"## EDA","7216d7ef":"## Set Configurations and read data","9dee5a16":"This notebook challenges a neural network classification task using a Parkinson's disease dataset.\nBelow is a link to a paper taught by Vikas Ukani, the publisher of the dataset.\n\nhttps:\/\/ieeexplore.ieee.org\/document\/4636708","237a9920":"<h1><font size=\"6\">Classification using Parkinson\u2019s Disease Dataset<\/font><\/h1>","c114bf31":"## Import libraries","de8e6780":"## Build the model"}}