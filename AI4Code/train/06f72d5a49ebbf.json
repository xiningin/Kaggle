{"cell_type":{"ceac584d":"code","aaa22aa1":"code","d2e6097c":"code","e8aca775":"code","52ca10bc":"code","e673373d":"code","fdacc28b":"code","daf49483":"code","1411e275":"code","fa704c71":"code","b577cfdf":"code","23ed3f13":"code","c43a8bd6":"code","d6ff354f":"code","7fdeec63":"code","0fc3ce4d":"code","8b44b352":"code","0957a988":"code","befed6b3":"code","fab305cb":"code","d75db7b0":"code","09b7fe5d":"code","fbe7dc73":"code","19b09334":"code","7130ce6e":"code","d6461f68":"code","0028aea4":"code","e80fb9e1":"code","d82a53c2":"markdown","d0961b58":"markdown","13e0cc14":"markdown","8f86764c":"markdown","fa65e3a6":"markdown","07daac90":"markdown","0a8b3b92":"markdown","a2a52db2":"markdown","579fee19":"markdown","95bad096":"markdown","6ca32816":"markdown","a3de71f9":"markdown","b1e7dac6":"markdown","d4e3ae1f":"markdown","f4b00f04":"markdown","71387f70":"markdown","dd7364eb":"markdown","0111d134":"markdown","82af64cf":"markdown","b18f691f":"markdown","986eb430":"markdown","3303ae6d":"markdown","a3e646fc":"markdown","cb445c98":"markdown"},"source":{"ceac584d":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","aaa22aa1":"import random\nnp.random.seed(0)\nrandom.seed(0)","d2e6097c":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain.head()","e8aca775":"import warnings\nwarnings.filterwarnings(\"ignore\")","52ca10bc":"train[\"Sex\"][train[\"Sex\"] == \"male\"] = 0\ntrain[\"Sex\"][train[\"Sex\"] == \"female\"] = 1\ntest[\"Sex\"][test[\"Sex\"] == \"male\"] = 0\ntest[\"Sex\"][test[\"Sex\"] == \"female\"] = 1","e673373d":"train[\"Embarked\"][train[\"Embarked\"]== \"S\"] = 0\ntrain[\"Embarked\"][train[\"Embarked\"]== \"C\"] =1\ntrain[\"Embarked\"][train[\"Embarked\"]== \"Q\"] =2\ntest[\"Embarked\"][test[\"Embarked\"]== \"S\"] = 0\ntest[\"Embarked\"][test[\"Embarked\"]== \"C\"] =1\ntest[\"Embarked\"][test[\"Embarked\"]== \"Q\"] =2","fdacc28b":"data1 = train.loc[:,[\"Survived\",\"Age\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"]]\ndata1[\"Age\"] = data1[\"Age\"].fillna(data1[\"Age\"].mean())\n\ndata1.head()","daf49483":"data1.isnull().sum()","1411e275":"corr_matrix = data1.corr()\ncorr_matrix.to_csv(\"Correlation matrix.csv\")\ncorr_matrix","fa704c71":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.heatmap(corr_matrix,\n           square=True,\n           cmap=\"coolwarm\",\n           xticklabels = corr_matrix.columns.values,\n           yticklabels = corr_matrix.columns.values)\nplt.title(\"Correlation coefficient heatmap\", y=-0.25)\nplt.savefig(\"Correlation coefficient\u3000heatmap\")","b577cfdf":"corr_y = pd.DataFrame({\"features\":[\"Survived\",\"Age\",\"Pclass\",\"SibSp\",\"Parch\",\"Fare\"],\"corr_y\":corr_matrix[\"Survived\"]},index=None)\ncorr_y = corr_y.reset_index(drop=True)\ncorr_y.to_csv(\"Correlation Survived.csv\")\ncorr_y","23ed3f13":"!pip install pingouin","c43a8bd6":"import pingouin  \npcorr_matrix = data1.pcorr().round(3)\npcorr_matrix.to_csv(\"Partial correlation matrix.csv\")\npcorr_matrix","d6ff354f":"sns.heatmap(pcorr_matrix,\n           square=True,\n           cmap=\"coolwarm\",\n           xticklabels = corr_matrix.columns.values,\n           yticklabels = corr_matrix.columns.values)\nplt.title(\"Partial correlation heatmap\", y=-0.25)\nplt.savefig(\"Partial correlation heatmap\")","7fdeec63":"pcorr_y = pd.DataFrame({\"features\":[\"Survived\",\"Age\",\"Pclass\",\"SibSp\",\"Parch\",\"Fare\"],\"pcorr_y\":pcorr_matrix[\"Survived\"]},index=None)\npcorr_y = pcorr_y.reset_index(drop=True)\npcorr_y.to_csv(\"Partial correlation Survived.csv\")\npcorr_y","0fc3ce4d":"data1[\"Age\"] = pd.cut(data1[\"Age\"],3)\ndata1[\"Fare\"] =pd.cut(data1[\"Fare\"],3)","8b44b352":"data1.head()","0957a988":"!pip install graphviz\n!pip install pgmpy==0.1.11","befed6b3":"import pgmpy\nfrom pgmpy.estimators import ConstraintBasedEstimator\nest = ConstraintBasedEstimator(data1)\n\nskel,seperating_sets = est.estimate_skeleton(significance_level = 0.01)\nprint(\"Undirected edges: \",skel.edges())\n\npdag = est.skeleton_to_pdag(skel,seperating_sets)\nprint(\"PDAG edges:       \", pdag.edges())\n\nmodel = est.pdag_to_dag(pdag)\nprint(\"DAG edges:        \", model.edges())","fab305cb":"!pip install Pillow","d75db7b0":"import networkx as nx\nfrom IPython.display import SVG, display\nfrom PIL import Image","09b7fe5d":"G1 = nx.Graph()\nG1.add_nodes_from([\"Survived\",\"Age\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"])\nG1.add_edges_from(skel.edges())\nG1.remove_node(\"Fare\")\n\n#svg1 = SVG(nx.nx_agraph.to_agraph(G1).draw(prog='fdp', format='svg')) #To display needs pygraphviz!\n#display(svg1)\nG1img = Image.open(\"\/kaggle\/input\/titanicbayesian-network\/Undirected graph.png\")\nG1img","fbe7dc73":"G2 = nx.DiGraph()\nG2.add_nodes_from([\"Survived\",\"Age\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"])\nG2.add_edges_from(pdag.edges())\nG2.remove_node(\"Fare\")\n\n#svg2 = SVG(nx.nx_agraph.to_agraph(G2).draw(prog='fdp', format='svg'))\n#display(svg2)\nG2img = Image.open(\"\/kaggle\/input\/titanicbayesian-network\/Partial directed graph.png\")\nG2img","19b09334":"G3 = nx.DiGraph()\nG3.add_nodes_from([\"Survived\",\"Age\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"])\nG3.add_edges_from(model.edges())\nG3.remove_node(\"Fare\")\n\n#svg3 = SVG(nx.nx_agraph.to_agraph(G3).draw(prog='fdp', format='svg'))\n#display(svg3)\nG3img = Image.open(\"\/kaggle\/input\/titanicbayesian-network\/Directed graph.png\")\nG3img","7130ce6e":"G4 = nx.DiGraph()\nG4.add_nodes_from([\"Survived\",\"Age\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"])\nG4.add_edges_from(model.edges())\nG4.add_edges_from([(\"Sex\",\"Survived\"),(\"Pclass\",\"Survived\"),(\"SibSp\",\"Parch\")])\nG4.remove_edge(\"Parch\",\"SibSp\")\nG4.remove_node(\"Fare\")\n\n#svg4 = SVG(nx.nx_agraph.to_agraph(G4).draw(prog='fdp', format='svg'))\n#display(svg4)\nG4img = Image.open(\"\/kaggle\/input\/titanicbayesian-network\/Final graph.png\")\nG4img","d6461f68":"nodes = G4.nodes\nedges = G4.edges\nprint(nodes,edges)","0028aea4":"from pgmpy.models import BayesianModel\nfrom pgmpy.estimators import BicScore\nmodel = BayesianModel(edges)  \nprint(\"BIC=\"+str(BicScore(data1).score(model)))","e80fb9e1":"model.fit(data1)\ncpds = model.get_cpds()\nfor cpd in cpds:\n    print(cpd, '\\n')","d82a53c2":"**Bayesian network construction**","d0961b58":"male:0 female:1","13e0cc14":"Partial correlation Survived","8f86764c":"**Partial correlation matrix**","fa65e3a6":"1. Undirected graph","07daac90":"**Data arrange**","0a8b3b92":"**Visualization**","a2a52db2":"**continuous \u2192 discrete**","579fee19":"**Titanic data input**","95bad096":"Correlation Survived","6ca32816":"**BIC calculation**","a3de71f9":"**cpds calculation**","b1e7dac6":"**Categorical data\u3000\u2192 Dummy variable**","d4e3ae1f":"S:0 C:1 Q:2","f4b00f04":"**Hide error**","71387f70":"Partial correlation heatmap","dd7364eb":"**Random number seed setting**","0111d134":"****Titanic - Causal Analysis****\n1. correlation \n2. partial correlation \n3. bayesian-network","82af64cf":"3. Directed graph","b18f691f":"2. Partial directed graph","986eb430":"4. Final graph","3303ae6d":"**Confirmation of missing values**","a3e646fc":"Correlation matrix","cb445c98":"Correlation coefficient\u3000heatmap"}}