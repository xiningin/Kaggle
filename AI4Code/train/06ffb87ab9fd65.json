{"cell_type":{"a7fcc860":"code","4276e513":"code","ccd1bc96":"code","58186e14":"code","12a6337c":"code","86f25759":"code","76193b5b":"code","eae14aed":"code","5b3ca58a":"code","320accfc":"code","68f39085":"code","28fc7144":"code","81ea9800":"code","c821ed10":"code","0dbe7138":"code","cc8efb84":"code","48eecc60":"code","023569e0":"code","ce91e007":"code","ede6f5a3":"code","761d553e":"code","fe50778b":"code","a2b22c55":"code","387f9850":"code","bbebe38a":"code","396ca545":"code","1bf46ff4":"code","b646ce7f":"code","9c51502f":"code","9228a624":"code","c190279a":"code","3c287324":"code","9c149fc9":"code","64a78db5":"code","0f8e2e98":"code","2c39d39e":"code","d0309cb9":"code","5e4fe63f":"code","b1472f46":"code","f9811d8c":"code","c74eae3f":"code","9428b27a":"code","bd2851e8":"code","4372dec4":"code","fb0e8e8b":"code","049a256b":"code","9fe923b8":"code","e8ceba4f":"code","5339c12e":"code","15dfb989":"code","f5182bdc":"code","bc41720e":"code","5860fa21":"code","f0956f18":"code","b180e630":"code","f21d1432":"code","1a2af75b":"code","912ab293":"code","dab87b97":"code","7a069ccf":"code","b6c2beea":"code","641439e6":"code","00a2c819":"code","3574a479":"code","8f63ce02":"code","562e3e44":"code","d534fc80":"code","8f9fc1fc":"code","f73f9c32":"code","73dd06e1":"code","dac5c5ee":"code","2ec63fdd":"code","249f7f18":"code","032a6319":"code","004c8af0":"code","9771a503":"code","bf38be6b":"code","b228597e":"code","ae0b3352":"code","40dadf40":"code","fcb8e570":"code","70868a3f":"code","5ff095e3":"code","bf28f083":"code","b8094a4e":"code","8f8c9147":"code","ed1019c4":"code","5e0d0753":"code","d0983653":"markdown","4873cd98":"markdown","79f70841":"markdown","38bbf828":"markdown","2b973182":"markdown","9786dc24":"markdown","0bc93bf3":"markdown","72f68b54":"markdown","a0291f7b":"markdown","286073c3":"markdown","83ded12b":"markdown","884e7681":"markdown","ec1a40b1":"markdown","a44d0875":"markdown","ac26d51c":"markdown","9e8dc7fc":"markdown","c34873e1":"markdown","fc618883":"markdown","8fb5d8a6":"markdown","9ce04eb6":"markdown","2911d4cd":"markdown","4c76dab8":"markdown","0ee0221b":"markdown","c2026217":"markdown","bcd10ceb":"markdown","99584694":"markdown","40cf197d":"markdown","f161c854":"markdown","d27c9dd8":"markdown","9900077e":"markdown","657a3b7e":"markdown","f063e3d6":"markdown","dc48d97a":"markdown","519c8648":"markdown","de960456":"markdown","c4d90619":"markdown","d012619b":"markdown","d6188b26":"markdown","ad997c9f":"markdown","d27e9678":"markdown","90a6c369":"markdown","4f21c687":"markdown","57f12976":"markdown","cb5cad3e":"markdown","f88badda":"markdown","e95156fb":"markdown","2a973c8c":"markdown","7972a8cd":"markdown","b5bb64e7":"markdown","a06315d1":"markdown","ef7e3cc4":"markdown","26941ba5":"markdown","c6bb0997":"markdown","ac42532c":"markdown","0c6306bc":"markdown","240b28a2":"markdown","39e58e48":"markdown","be44bb3a":"markdown","5c309e81":"markdown"},"source":{"a7fcc860":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4276e513":"import warnings as wg\nwg.filterwarnings('ignore')","ccd1bc96":"import plotly as py\nimport cufflinks as cf\nfrom plotly.offline import iplot\npy.offline.init_notebook_mode(connected=True)\ncf.go_offline()","58186e14":"import plotly.express as px\nimport plotly.graph_objects as go","12a6337c":"from plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","86f25759":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","76193b5b":"from scipy import stats","eae14aed":"df_3 = pd.read_csv('..\/input\/data-after-univariate-analysis\/df_3(1).csv')","5b3ca58a":"test_encod = pd.read_csv('..\/input\/test-data-after-univariate-analysis\/test.csv')","320accfc":"df_3.head()","68f39085":"fig = px.strip(df_3, x=\"age\", y=\"gender\", color=\"income\", facet_col=\"native-country\")\nfig.show()","28fc7144":"mask = np.triu(np.ones_like(df_3.corr(), dtype=bool))\n\nf, ax = plt.subplots(figsize=(11, 9))\n\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\nsns.heatmap(df_3.corr(), mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5}, annot = True)\n\nplt.show()","81ea9800":"sns.pairplot(df_3, hue = 'income')","c821ed10":"plt.figure(figsize = (15, 8))\nsns.countplot('occupation', data = df_3, hue = 'income')\nplt.xticks(rotation=35)\nplt.title('Which occupation earns more income')\nplt.show()","0dbe7138":"plt.figure(figsize = (15, 8))\nsns.countplot('gender', data = df_3, hue = 'income')\nplt.xticks(rotation=35)\nplt.title('Earning pattern of each gender')\nplt.show()","cc8efb84":"plt.figure(figsize = (15, 8))\nsns.countplot('race', data = df_3, hue = 'income')\nplt.xticks(rotation=35)\nplt.title('How different race earn')\nplt.show()","48eecc60":"plt.figure(figsize = (15, 8))\nsns.countplot('native-country', data = df_3, hue = 'income')\nplt.xticks(rotation=35)\nplt.title('How different country people earns')\nplt.show()","023569e0":"plt.figure(figsize = (15, 8))\nsns.countplot('education', data = df_3, hue = 'income')\nplt.xticks(rotation=35)\nplt.title('Earning pattern of people with different education')\nplt.show()","ce91e007":"#fig, ax = plt.subplots(1, 2, figsize = [16,16])\nsns.catplot(x = 'educational-num', y = 'occupation',kind= 'bar',row = 'native-country',col = 'gender', data = df_3,  hue = 'income', legend_out = True)\nplt.show()","ede6f5a3":"sns.catplot(x = 'educational-num', y = 'occupation',kind= 'bar',row = 'native-country',col = 'race', data = df_3,  hue = 'income', legend_out = True)\nsns.despine()\nplt.show()","761d553e":"sns.catplot(x = 'educational-num', y = 'occupation',kind= 'bar',row = 'gender',col = 'race', data = df_3,  hue = 'income', legend_out = True)\nsns.despine()\nplt.show()","fe50778b":"sns.catplot(x = 'hours-per-week', y = 'workclass',kind= 'bar',row = 'gender',col = 'race', data = df_3,  hue = 'income', legend_out = True)\nplt.show()","a2b22c55":"df_3 = df_3.drop('fnlwgt', axis='columns')","387f9850":"df_3.columns","bbebe38a":"num = list(df_3.select_dtypes(include=np.number).columns)","396ca545":"num.remove('educational-num')","1bf46ff4":"num","b646ce7f":"df_3.shape","9c51502f":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()","9228a624":"for i in num:\n    df_3[i] = scaler.fit_transform(df_3[[i]])","c190279a":"df_3.head()","3c287324":"for i in num:\n    fig, axes = plt.subplots(ncols=2, figsize=(15, 5))\n    sns.boxplot(x = i , data = df_3, ax = axes[0])\n    \n    sns.distplot(df_3[i],kde = True, ax = axes[1])\n    \nplt.tight_layout()  \nplt.show()","9c149fc9":"# Initiating a figure\nplt.figure(figsize=(12, 8))\n\n# Creating a plot with 1 row and 2 cols\n\nplt.subplot(1, 2, 1)\nstats.probplot(df_3[num[0]], dist=\"norm\", plot=plt)\nplt.title(num[0])\n\nplt.subplot(1, 2, 2)\nstats.probplot(df_3[num[1]], dist=\"norm\", plot=plt)\nplt.title(num[1])\n\nplt.tight_layout()\nplt.show()","64a78db5":"for i in num:\n    df_3[i] += 0.1","0f8e2e98":"for i in num:\n    df_3[i+'_box'], l = stats.boxcox(df_3[i])","2c39d39e":"# Initiating a figure\nplt.figure(figsize=(12, 8))\n\n# Creating a plot with 2 row and 2 cols\n\nplt.subplot(1, 2, 1)\nstats.probplot(df_3[num[0]+'_box'], dist=\"norm\", plot=plt)\nplt.title(num[0]+'_box')\n\nplt.subplot(1, 2, 2)\nstats.probplot(df_3[num[1]+'_box'], dist=\"norm\", plot=plt)\nplt.title(num[1]+'_box')\n\n\nplt.tight_layout()\nplt.show()","d0309cb9":"for i in num:\n    df_3[i+'_log'] = np.log(df_3[i])","5e4fe63f":"# Initiating a figure\nplt.figure(figsize=(12, 8))\n\n# Creating a plot with 2 row and 2 cols\n\nplt.subplot(1, 2, 1)\nstats.probplot(df_3[num[0]+'_log'], dist=\"norm\", plot=plt)\nplt.title(num[0]+'_log')\n\nplt.subplot(1, 2, 2)\nstats.probplot(df_3[num[1]+'_log'], dist=\"norm\", plot=plt)\nplt.title(num[1]+'_log')\n\nplt.tight_layout()\nplt.show()","b1472f46":"from sklearn.preprocessing import PowerTransformer","f9811d8c":"transformer = PowerTransformer(method = 'yeo-johnson')\n\nfor i in num:\n    df_3[i+'_yj'] = transformer.fit_transform(df_3[[i]])","c74eae3f":"# Initiating a figure\nplt.figure(figsize=(12, 8))\n\n# Creating a plot with 2 row and 2 cols\n\nplt.subplot(1, 2, 1)\nstats.probplot(df_3[num[0]+'_yj'], dist=\"norm\", plot=plt)\nplt.title(num[0]+'_yj')\n\nplt.subplot(1, 2, 2)\nstats.probplot(df_3[num[1]+'_yj'], dist=\"norm\", plot=plt)\nplt.title(num[1]+'_yj')\n\nplt.tight_layout()\nplt.show()","9428b27a":"df_3['educational-num'] = scaler.fit_transform(df_3[['educational-num']])","bd2851e8":"cat = list(df_3.select_dtypes(include = 'object').columns)","4372dec4":"cat.remove('education')","fb0e8e8b":"cat","049a256b":"df_4 = df_3.drop([num[0]+'_log',num[1]+'_log',\n                  num[0]+'_yj',num[1]+'_yj',\n                  num[0]+'_box',num[1]+'_box'], axis='columns')","9fe923b8":"df_4.shape","e8ceba4f":"df_4.columns","5339c12e":"df_4 = df_4.drop('education', axis = 'columns')","15dfb989":"for i in cat:\n    print(i,'has',len(df_4[i].unique()), 'unique values')","f5182bdc":"df_4['gender'].unique()","bc41720e":"df_4['gender'] = df_4['gender'].replace(['Male', 'Female'], [1, 0]) # label encoding the categorical variables","5860fa21":"df_4['native-country'].unique()","f0956f18":"df_4['native-country'] = df_4['native-country'].replace(['United-States', 'Other'], [1, 0]) # label encoding the categorical variables","b180e630":"df_4['income'].unique()","f21d1432":"df_4['income'] = df_4['income'].replace(['<=50K', '>50K'], [0, 1]) # label encoding the categorical variables","1a2af75b":"df_4['capital-gain'].unique()","912ab293":"df_4['capital-gain'] = df_4['capital-gain'].replace(['0', '> 0'], [0, 1]) # label encoding the categorical variables","dab87b97":"df_4['capital-loss'].unique()","7a069ccf":"df_4['capital-loss'] = df_4['capital-loss'].replace(['0', '> 0'], [0, 1]) # label encoding the categorical variables","b6c2beea":"df_4.head()","641439e6":"dummy = pd.get_dummies(df_4[['workclass', 'marital-status', 'occupation', 'race']], drop_first=True)","00a2c819":"dummy.shape","3574a479":"dummy.columns","8f63ce02":"df_4.columns","562e3e44":"cat","d534fc80":"df_4 = df_4.drop(['marital-status', 'occupation',\n       'race', 'workclass'], axis = 'columns')","8f9fc1fc":"df_4.head()","f73f9c32":"original_df = df_4.copy()","73dd06e1":"original_df = pd.concat([original_df, dummy], axis = 'columns')\n#box_df = pd.concat([box_df, dummy], axis = 'columns')","dac5c5ee":"original_df.shape","2ec63fdd":"original_df.head()","249f7f18":"# from google.colab import files","032a6319":"# original_df.to_csv('original_df.csv', index = False)         \n# files.download('original_df.csv')","004c8af0":"# box_df.to_csv('box_df.csv', index = False)         \n# files.download('box_df.csv')","9771a503":"test_encod.head()","bf38be6b":"# Removing the two columns\ntest_encod = test_encod.drop(['fnlwgt','education'], axis='columns')\n\n# feature scaling\nfor i in num:\n    test_encod[i] = scaler.fit_transform(test_encod[[i]])\n\ntest_encod['educational-num'] = scaler.fit_transform(test_encod[['educational-num']])\n\n# label encoding categoical col.\ntest_encod['gender'] = test_encod['gender'].replace(['Male', 'Female'], [1, 0])\ntest_encod['native-country'] = test_encod['native-country'].replace(['United-States', 'Other'], [1, 0])\ntest_encod['income'] = test_encod['income'].replace(['<=50K', '>50K'], [0, 1])\ntest_encod['capital-gain'] = test_encod['capital-gain'].replace(['0', '> 0'], [0, 1])\ntest_encod['capital-loss'] = test_encod['capital-loss'].replace(['0', '> 0'], [0, 1])\n\n\ndummy_1 = pd.get_dummies(test_encod[['workclass', 'marital-status', 'occupation', 'race']], drop_first=True)\n\ntest_encod = pd.concat([test_encod, dummy_1], axis = 'columns')","b228597e":"test_encod.shape","ae0b3352":"test_encod.columns","40dadf40":"test_encod = test_encod.drop(['marital-status', 'occupation',\n       'race', 'workclass'], axis = 'columns')","fcb8e570":"test_col = list(test_encod.columns)","70868a3f":"original = list(original_df.columns)","5ff095e3":"for i in test_col:\n    if i not in original:\n        test_encod.drop(i, axis = 'columns')","bf28f083":"test_encod.shape","b8094a4e":"for i in test_col:\n    if i not in original:\n        print(i)","8f8c9147":"test_encod = test_encod.drop(['workclass_Government','workclass_Never-worked','workclass_Without-pay', 'occupation_Adm-clerical'], axis = 'columns')","ed1019c4":"test_encod.shape","5e0d0753":"# test_encod.to_csv('test_encod.csv', index = False)         \n# files.download('test_encod.csv')","d0983653":"<font color = blue>**Since, majority of the data belongs to white people so this might be the reason why white are earning better**<\/font>","4873cd98":"<font color = blue>**Many values in capital-loss and capital-gain are 0 so, box-cox can't be applied directly, due to which a constant is required to be added to both the columns**<\/font>","79f70841":"<font color = blue>**Now here, i have prepared my dataset to make a ML model**<\/font>","38bbf828":"**Part 3:** [Machine Learning Implementation](https:\/\/www.kaggle.com\/gauravkumar008\/predicting-adult-income)","2b973182":"### Correlation b\/w numerical features","9786dc24":"**Concatinating new dataframes with dummy encoded variables**","0bc93bf3":"# Removing the fnlwgt column","72f68b54":"\n\n*   Irrespective of the gender and native-country, if he\/she is working as Prof-speciality or Adm-clerical or Exec-managerial and have higher education, then there are more chances that he or she would earn the income of more than 50K.\n\n\n*   In transport-moving occupation, if a female is from other country, then she has more chances of getting the income of more than 50K even if she has lesser education than a male from other country in the same occupation.\n*   There is a lot more variability in the education of a female from other country getting the income of more than 50K working in sales department. It means a woman from other country might get a better salary even if she is lesser educated in sales occupation.\n\n\n*   In many of the occupations, female from other country may get the salary of more than 50K even if her education is comparatively lesser than others.\n\n*   No female from other country, is earning more than 50K in fishing-farming.\n\n\n*   Males from other country have to struggle more than others to get a good salary in the occupation of Machine-op-inspct\n\n\n\n\n\n\n\n\n","a0291f7b":"#### Label Encoding income","286073c3":"# Education vs Occupation vs Gender vs Race vs Income","83ded12b":"# Importing Relevant Libraries","884e7681":"<font color = green>**BoxCox not working**<\/font>","ec1a40b1":"## Label Encoding","a44d0875":"<font color = blue>**Since, there are more individuals from US that's why it is looking like they are earning better**<\/font>","ac26d51c":"<br>\n<h1 style = \"font-size:30px; font-family:monospace ; font-weight : bold; color : #AE0052; text-align: center; border-radius: 10px 10px;\">\ud83d\ude0bDo Upvote If You Liked My Work\ud83d\ude05<\/h1>\n<br>","9e8dc7fc":"### Scatterplot b\/w two variables","c34873e1":"<font color = blue>**The overall distribution looks the same it doesn't look like income dependso on country and gender**<\/font>","fc618883":"\n\n*   If you are not a white female, then as a self employed you will have to work like hell to get the income of more than 50K.\n\n","8fb5d8a6":"## Race vs Native-Country vs Education vs Occupation vs Income","9ce04eb6":"**Dropping the other transformation columns**","2911d4cd":"<font color = blue>**All transformations are producing almost the similar results so they are useless**<\/font>","4c76dab8":"# Feature Scaling","0ee0221b":"## Native-country vs gender vs age","c2026217":"## Dummy Encoding","bcd10ceb":"#### Label Encoding Gender","99584694":"#### Label encoding capital-loss","40cf197d":"\n\n*   Someone from higher education like bachelors,masters, Prof-school or doctrate has more chances to earn more than 50K.\n*   Someone having education of 5th-12th has very rare chance to earn more than 50K.\n\n\n*   Someone having education of 1st-8th have the less chances to earn more than 50K\n\n\n\n","f161c854":"## Education vs Occupation vs Native-Country vs Gender vs Income","d27c9dd8":"<font color = blue>**From here I am creating two separate dataframes for orignial numerical encoded data and other with box-cox tranformed encoded data**<\/font>","9900077e":"\n\n*   Majority of the individuals having income more than 50K have higher education.\n*   Majority of the individuals earning more than 50K are doing 30 to 55 hour work week approximately.\n\n\n\n\n","657a3b7e":"\n\n*   In the occupation of farming-fishing blacks are not getting the income of more than 50K whether they are from US or not.\n\n*   Even to get a job of handlers-cleaners, blacks from other country require to be more educated.\n*   For a job of Prof-specialty or craft-repair, blacks from other countries don't require to be much educated to get a good salary.\n\n","f063e3d6":"\n\n*   Females of other race, are not making more income in farming-fishing, transport-moving, handlers-cleaners even after having the relevant education in comparison with others.\n*   In Tech support occupation, persons of other race don't require much educations as compare to others to get the income of more than 50K.\n\n\n*   In other services, people of other race require to bre more educated as compare to other to get the income of more than 50K.\n\n\n","dc48d97a":"## Box-Cox Transformation","519c8648":"**Part 3:** [Machine Learning Implementation](https:\/\/www.kaggle.com\/gauravkumar008\/predicting-adult-income)","de960456":"#### Label Encoding native-country","c4d90619":"#### Label encoding capital-gain","d012619b":"**Deleting the columns of object datatype**","d6188b26":"# Data Preprocessing for Machine Learning","ad997c9f":"## Log Transformation","d27e9678":"\n\n---\n\n**It doesn't look like fnlwgt decides whether a person would earn less than or more than 50K**","90a6c369":"**Converting these datasets to csv for ML separately**","4f21c687":"### How income varies with education","57f12976":"<font color = blue>**Box-Cox is not working let's try log transformation**<\/font>","cb5cad3e":"<font color = blue>**We can clearly see that exec-manager and prof-speciality are the occupations which have many number of the people earning more than 50K**<\/font>","f88badda":"## How income depends on occupation","e95156fb":"# Encoding","2a973c8c":"<font color = blue>**The correlation between all the features is near to zero not any features are closely correlated**<\/font>","7972a8cd":"# Preprocessing of test-data","b5bb64e7":"<font color = blue>**Since, we already have the numerical eduivalent of education with name educational-num so that column is not required**<\/font>","a06315d1":"<font color = blue>**As we can see here, log transformation is useless**<\/font>","ef7e3cc4":"# Bivariate Analysis","26941ba5":"## Yeo-Johnson Transformation","c6bb0997":"<br>\n<h1 style = \"font-size:40px; font-family:monospace ; font-weight : bold; color : #3C0096; text-align: center; border-radius: 5px 25px;\">Table Of Contents<\/h1>\n<br>","ac42532c":"<br>\n<h1 style = \"font-size:40px; font-family:Brush Script MT ; font-weight : bold; color : #0331A8; text-align: center; border-radius: 10px 10px;\">The End<\/h1>\n<br>","0c6306bc":"### How income varies with different country people","240b28a2":"## Checking the normality of each numerical column","39e58e48":"<font color = blue>**Overall in the dataset males are in majority, so there is no doubt that even those earning more than 50K have majority of males**<\/font>","be44bb3a":"**Importing Relevant Libraries**<br>\n**Native-Country v\/s Gender v\/s Age**<br>\n**Bivariate Analysis**<br>\n* Correlation\n* PairPlot\n* Income And Occupation\n* Income and Native-Country\n* Income and Education\n\n**Multivariate Analysis**<br>\n* Education vs Occupation vs Native-Country vs Gender vs Income\n* Race vs Native-Country vs Education vs Occupation vs Income\n* Education vs Occupation vs Gender vs Race vs Income\n\n**Removing the fnlwgt column**<br>\n**Data Preprocessing for Machine Learning**<br>\n**Feature Scaling**<br>\n**Checking the normality of each numerical column**\n**Feature Transformation**<br>\n* Box-Cox Transformation\n* Log Transformation\n* Yeo-Johnson Transformation\n\n**Encoding**\n* Label Encoding\n* Dummy Encoding\n\n**Preprocessing On Test Data**<br>\n**Saving and Loading the File for ML**","5c309e81":"# Downloading Files for ML Work"}}