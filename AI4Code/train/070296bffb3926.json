{"cell_type":{"18f03304":"code","d67282cd":"code","3a69cd79":"code","8370354a":"code","df8ff2e0":"code","3782ccd7":"code","426edb0c":"code","51e3a4a9":"code","ef7c281b":"code","0ad760d4":"code","325baa97":"code","583d5fe9":"code","bb60e91f":"code","a7844eab":"code","00dcdb3e":"code","96e12a1c":"code","16a62c82":"code","a5e7f2b3":"code","3512063d":"code","3a10e1a9":"code","a681fbf2":"code","95143536":"code","c5106cb8":"code","0a105fa4":"code","60e907a3":"code","d0d2184a":"code","e7da5501":"code","4542b88d":"code","58143a1b":"code","8a5c3b03":"markdown","dd3b464a":"markdown","f9f6b413":"markdown","c2260956":"markdown","9abfa97e":"markdown","8fd52f1f":"markdown","22378128":"markdown","efb164b3":"markdown","c886f38f":"markdown","4236aca1":"markdown","df337481":"markdown","5d243520":"markdown","884f1d0c":"markdown","ef82bf60":"markdown","52567414":"markdown","9a9624df":"markdown","70260a17":"markdown","7186709e":"markdown","8ceadfda":"markdown","86785b18":"markdown","c2ea8483":"markdown","fb2c1285":"markdown","cf34cf06":"markdown","b5d2a3e4":"markdown","4249d674":"markdown","fef538c7":"markdown","af5114b2":"markdown","883eb370":"markdown"},"source":{"18f03304":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n\nimport plotly\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\ndf = pd.read_csv('..\/input\/steam-store-games\/steam.csv')","d67282cd":"df.head()","3a69cd79":"df.tail()","8370354a":"df.describe()","df8ff2e0":"df.info()","3782ccd7":"df.isnull().sum()","426edb0c":"df['appid'].sample()","51e3a4a9":"df.drop(columns='appid', inplace=True)","ef7c281b":"df['english'].unique()","0ad760d4":"map_dict = {0: 'non-English', 1: 'English'}\n\ndf['english'] = df['english'].map(map_dict)","325baa97":"fig = go.Figure(data=[go.Pie(labels=df['english'].value_counts().index, \n                             values=df['english'].value_counts().values)])\n\nfig.update_traces(textinfo='value', textfont_size=20,\n                  marker=dict(colors=['salmon', 'lightblue'], \n                  line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    height=600, width=600, title_text='English and not English pie chart',\n    xaxis_title='number of songs', yaxis_title='artist', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=18,\n            color=\"black\"),\n    \n    legend=dict(\n            orientation=\"h\",\n            yanchor=\"bottom\",\n            y=-0.2,\n            xanchor=\"right\",\n            x=1)\n)\n\nfig.show()","583d5fe9":"df['owners'].value_counts().tail()","bb60e91f":"top_6_owners = df[\n            (df['owners'] == '20000000-50000000') | \n            (df['owners'] == '50000000-100000000') | \n            (df['owners'] == '100000000-200000000')\n          ].sort_values(by='owners')","a7844eab":"top_6_owners","00dcdb3e":"df['release_date'] = pd.to_datetime(df['release_date'])","96e12a1c":"df['release_date'].head()","16a62c82":"free, not_free = df[df['price'] == 0].shape[0], df[df['price'] != 0].shape[0]\n\nlabels = ['free', 'not free']\n\nfig = go.Figure(data=[go.Pie(labels=labels, \n                             values=[free, not_free])])\n\nfig.update_traces(textinfo='value', textfont_size=20,\n                  marker=dict(colors=['salmon', 'lightblue'], \n                  line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    height=600, width=600, title_text='Free and not free games',\n    xaxis_title='number of songs', yaxis_title='artist', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=18,\n            color=\"black\"),\n    \n    legend=dict(\n            orientation=\"h\",\n            yanchor=\"bottom\",\n            y=-0.2,\n            xanchor=\"right\",\n            x=0.75)\n)\n\nfig.show()","a5e7f2b3":"df.head()","3512063d":"operating_systems = ['windows', 'mac', 'linux']\n\ndf['windows'], df['mac'], df['linux'] = df['platforms'].apply(lambda x: 'windows' in x),df['platforms'].apply(lambda x: 'mac' in x),df['platforms'].apply(lambda x: 'linux' in x)\ndf.drop(columns='platforms', inplace=True)","3a10e1a9":"windows, mac, linux = df[df['windows']].shape[0], df[df['mac']].shape[0], df['linux'].shape[0]\n\nlabels = ['windows', 'mac', 'linux']\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=labels, y=[windows,mac,linux], \n                     marker_color = 'salmon'))\n\nfig.update_layout(\n    height=600, width=500, title_text='Artists frequency on Billboard magazine',\n    xaxis_title='platform', yaxis_title='count', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=14,\n            color=\"black\")\n)\n\n\nfig.show()","a681fbf2":"df['multiplayer'] = df['categories'].apply(lambda x: 'multi-player' in x.lower())\ndf.drop(columns='categories')\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=['No-multiplayer','Multiplayer'], y=df['multiplayer'].value_counts().values, \n                     marker_color = 'salmon'))\n\nfig.update_layout(\n    height=600, width=500, title_text='Acces to multiplayer gameplay', yaxis_title='count', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=14,\n            color=\"black\")\n)\n\n\nfig.show()","95143536":"df.head()","c5106cb8":"df['release_date'].dt.year.value_counts()","0a105fa4":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x = df['release_date'].dt.year.value_counts().index[:12],\n                     y  = df['release_date'].dt.year.value_counts().values[:12],\n                     marker_color = 'salmon' ))\n\nfig.update_layout(\n    height=600, width=500, title_text='Steam games per year', yaxis_title='count', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=14,\n            color=\"black\")\n)\n\nfig.show()","60e907a3":"top_10_devs = df['developer'].value_counts().sort_values(ascending=False).head(10)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=top_10_devs.index, y=top_10_devs.values, marker_color='salmon'))\n\nfig.update_layout(\n    height=800, width=600, title_text='TOP 10 STEAM DEVELOPERS', yaxis_title='count', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=14,\n            color=\"black\")\n)\n\n\nfig.show()","d0d2184a":"top_10_publishers = df['publisher'].value_counts().sort_values(ascending=False).head(10)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=top_10_publishers.index, y=top_10_publishers.values, marker_color='salmon'))\n\nfig.update_layout(\n    height=800, width=600, title_text='TOP 10 STEAM PUBLISHERS', yaxis_title='count', title_x = 0.5,\n    \n    font=dict(\n            family=\"Courier New, monospace\",\n            size=14,\n            color=\"black\")\n)\n\n\nfig.show()","e7da5501":"top_10_genres = df['genres'].value_counts().head(10)\n\ntop_10_genres","4542b88d":"top_10_genres = df['genres'].apply(lambda x: x.split(';')[0]).value_counts()","58143a1b":"top_10_genres","8a5c3b03":"I'm going assume that there's:\n\n* 1 - English\n* 0 - non-English","dd3b464a":"Null values?","f9f6b413":"It seems that there's just app unique ids. It won't be usefull so I'm gonna drop it","c2260956":"Columns:\n\n* appid\n* english\n* owners\n* release date\n* price\n\nneed to be inspect if they're useful","9abfa97e":"**Developers**\n\nPlot of top 10 developers","8fd52f1f":"We can see that action games type is  still the most frequent genre","22378128":"There's only 6 games which have more than 20 milions of owners.","efb164b3":"**Genres**","c886f38f":"## Inspecting and preparing data","4236aca1":"**Publishers**","df337481":"**price**","5d243520":"Let's see how many Steam games is free","884f1d0c":"**release date**","ef82bf60":"Pie chart for English and non English","52567414":"# Steam-EDA","9a9624df":"Let's make data more visible and handle with operating systems from platforms column","70260a17":"Top 10 publishers","7186709e":"**Dota 2** have the biggest amount of owners","8ceadfda":"There's a problem, most of the games have Indie - short for **independent video game** after basic category (action, casual, adventure).","86785b18":"**appid**","c2ea8483":"**owners**","fb2c1285":"**Final conslusions**\n\n* More than 98 % of Steam games are in English\n* Approximately at least 10% of Steam games are free\n* if you re mac user and you wanna use Steam i I don't have good message - only every third game supports mac\n* Linux and windows player have acces to almost all games\n* Players like to play the most in Dota 2 and they usually choose action game genre","cf34cf06":"![Steam_icon_logo.svg.png](attachment:03d2ef22-6a40-4340-9026-593e4ea31d91.png)","b5d2a3e4":"Let's see how many games on Steam offers multiplayer gameplay and how many games don't offer this feature","4249d674":"Top 10 genres","fef538c7":"Games distribution per year","af5114b2":"**english**","883eb370":"Steam is a video game digital distribution service by Valve. It was launched as a standalone software client in September 2003 as a way for Valve to provide automatic updates for their games and, expanded to include games from third-party publishers. Steam has also expanded into an online web-based and mobile digital storefront."}}