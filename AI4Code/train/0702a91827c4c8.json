{"cell_type":{"6224a9d2":"code","116173e9":"code","c47ebb66":"code","9358f216":"code","20a25ad5":"code","ea0d2717":"code","67bb58a1":"code","56e3e827":"code","d4e35333":"code","1282ee04":"code","61ee5fa2":"code","756506d6":"code","e980fe3c":"code","aeaac54d":"code","e309f37a":"code","7cc54b78":"code","5322aec2":"code","ffbe87fe":"code","df0b6c50":"code","030523a8":"code","d16a773d":"code","8103e0ea":"code","122e812d":"code","ee489385":"code","40f7d5eb":"code","489b66e3":"code","a9735936":"code","a95bd000":"code","6b766749":"code","dbce1f1a":"code","3b786e4e":"code","621e6205":"code","e7710fc6":"code","c26b6b67":"code","4716d379":"code","f606de13":"code","d0956001":"code","a5e66355":"code","e30e8d58":"code","17556c67":"code","d57b2289":"code","e59d3a80":"code","f8357fbb":"code","f6262650":"code","fcb4a412":"code","245cccb0":"code","553b1c3c":"code","2fb70b57":"code","1bae8ebd":"code","67c86a3d":"code","4189058a":"code","10cd36e4":"code","58377a63":"code","11090a41":"code","19580b3b":"code","af71ec94":"code","85ea8496":"code","3fec2693":"code","0e589ee3":"code","69a25f6d":"code","f7d55f92":"code","2c1b2aae":"code","5620fbf0":"code","9aebfa05":"code","c2b3e8fe":"code","4e15c17f":"code","dc43285a":"code","eb97f7d4":"code","640f6b97":"code","c0c56f8c":"code","78247ea0":"code","93626f4f":"code","505a9c48":"code","566a578b":"code","06671db7":"code","7ca77161":"code","d1cc5780":"code","8fac983e":"code","6ac669e4":"code","0ea8ba03":"code","2f4a3ff3":"code","15ff41f3":"code","89f89e53":"code","5ae930f5":"code","e2c11bb7":"code","dc364b21":"code","e71d7c53":"code","8bb5c61f":"code","a8974272":"code","3aef2160":"code","3f3dac72":"code","d82679ef":"code","3d22fac7":"code","fd63078a":"code","defa6fdd":"code","828b8da7":"code","6e945b08":"code","ce754f80":"code","f5318184":"code","9e450f7f":"code","1c153530":"code","17fde78e":"code","cb5755c7":"code","d115dae6":"code","9a425feb":"code","c48a836e":"code","dd6e9a96":"code","2ed3232e":"code","cc194875":"code","6d1daf2f":"code","ca0f275a":"code","f78f8708":"code","1069f073":"code","df14113f":"code","b9da80aa":"code","c7881cac":"code","167196a8":"code","abe4f0fd":"markdown","0a51221c":"markdown","3a680a94":"markdown","681a2b45":"markdown","932d2cd3":"markdown","8aeeeede":"markdown","5e3c4388":"markdown","eca1bab7":"markdown","37ef3038":"markdown","af1cf377":"markdown","0d8bbd1d":"markdown","4abeb093":"markdown","7f32d29f":"markdown","b77ff7bc":"markdown","565b53e3":"markdown","264019c1":"markdown","ec4936e9":"markdown","4a33b309":"markdown","f39fd80c":"markdown","139f912b":"markdown","5a7ed0d0":"markdown","ae8a2170":"markdown","49697ca0":"markdown","1ab0d42b":"markdown","72bbb40d":"markdown","1736f494":"markdown","4a1bec02":"markdown","5e5b5389":"markdown","917a46f9":"markdown","e4c5f752":"markdown","547991ee":"markdown","69b49d8a":"markdown","ae1e40a3":"markdown","647437e2":"markdown","4340b6ea":"markdown","e7565b1e":"markdown","91d5d0d9":"markdown","220638c9":"markdown","a71f4d29":"markdown","c31bb6db":"markdown","fa78f243":"markdown","d9d38443":"markdown","de151322":"markdown","97232c18":"markdown","3c5ab163":"markdown","ec42328c":"markdown","0b0e0e90":"markdown","a16d1280":"markdown","57d5cd68":"markdown","ced48cad":"markdown","311f8956":"markdown","9b391a90":"markdown","9c2db5a9":"markdown","5f50d46d":"markdown","bec1308b":"markdown","9d897eeb":"markdown","b4e1b479":"markdown","5859d2df":"markdown","df89acbb":"markdown","2dbd7ca9":"markdown","3dda6e60":"markdown","7e7b9c22":"markdown","6a04b830":"markdown","0778b319":"markdown","357cdb80":"markdown","d54c503c":"markdown","83180a35":"markdown","bbde3e42":"markdown","7df39070":"markdown","f31bf677":"markdown","e76c3fc2":"markdown","73e79a44":"markdown"},"source":{"6224a9d2":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nsns.set_style(\"whitegrid\")\n\nfrom scipy import stats\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn import metrics\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","116173e9":"data=pd.read_csv(\"..\/input\/credit-card-dataset\/credit_dataset.csv\",index_col=0)","c47ebb66":"dataset=data.copy()","9358f216":"# Reviewing the dataset using the head (first 5 rows of dataset) function \ndataset.head()","20a25ad5":"#shape of dataset\nprint(\"Rows    :\",dataset.shape[0])\nprint(\"Columns :\",dataset.shape[1])","ea0d2717":"#checking for NULL VALUES in dataset\ndataset.isna().sum()","67bb58a1":"#datatypes of attributes present in dataset\ndataset.dtypes","56e3e827":"#checking for unique values in dataset\ndataset.nunique()","d4e35333":"# TARGET column\nsns.countplot(dataset.TARGET).set_title(\"Class Distribution \\n (0:Not Fraud || 1:Fraud)\")\nprint(dataset.TARGET.value_counts(normalize=True))\nplt.show()","1282ee04":"labels = ['No','Yes']\ndata = dataset['TARGET'].value_counts(sort=True)\ncolours = ['Orange','black']\nexplode = (0.6,0)\nplt.figure(figsize=(6,6))\n\nplt.pie(data,colors = colours,shadow =True,startangle=180\n        ,autopct=\"%1.1f%%\",explode=explode,labels=labels)\nplt.title(\"TARGET COLUMN\",fontsize=20,color=\"b\")\nplt.tight_layout()\n\nprint('Not Frauds :', round(dataset['TARGET'].value_counts()[0]\/len(dataset) * 100,2), '% of the dataset')\nprint('Frauds :', round(dataset['TARGET'].value_counts()[1]\/len(dataset) * 100,2), '% of the dataset')","61ee5fa2":"dataset.describe()","756506d6":"#Distribution of continuous \ndataset.hist(figsize=(20,12))\nplt.show()","e980fe3c":"dataset.describe(include=\"O\")","aeaac54d":"#all the categorical columns with their values -\ncols=dataset.describe(include=\"O\").columns\nfor i in cols:\n    print(\"Distinct_values :\\n 'column_name' =\",i)\n    print(dataset[i].unique())\n    print(\"\")","e309f37a":"#dropping FLAG_MOBIL as all the values is this column is 1\nplt.figure(figsize=(10,8))\nsns.heatmap(dataset.drop(\"FLAG_MOBIL\",axis=1).corr(),cmap=\"Blues\",annot=True,fmt='.2f')\nplt.show()","7cc54b78":"plt.figure(figsize=(16,4))\nplt.subplot(121)\nsns.countplot(dataset[\"GENDER\"],hue=\"TARGET\",data=dataset,palette=\"Blues\")\nplt.title(\"GENDER\",fontsize=15,color=\"Red\")\nplt.subplot(122)\nsns.boxplot(x=\"INCOME\",y=\"GENDER\",hue=\"TARGET\",data=dataset,palette=\"Blues_r\")\nplt.title(\"GENDER vs INCOME\",fontsize=15,color=\"Red\")\nplt.figure(figsize=(16,4))\nsns.scatterplot(dataset[\"INCOME\"],dataset[\"AGE\"],hue=dataset[\"TARGET\"])\nplt.title(\"Distribution of Age Vs Income : On basis of TARGET\",fontsize=15,color=\"Red\")\nplt.show()","5322aec2":"plt.figure(figsize=(13,4))\nsns.countplot(dataset[\"INCOME_TYPE\"],hue=\"TARGET\",data=dataset,palette=\"RdPu_r\")\nplt.show()","ffbe87fe":"plt.figure(figsize=(13,4))\nsns.countplot(dataset[\"EDUCATION_TYPE\"],hue=\"TARGET\",data=dataset,palette=\"Accent\")\nplt.show()","df0b6c50":"plt.figure(figsize=(13,4))\nsns.countplot(dataset[\"FAMILY_TYPE\"],hue=\"TARGET\",data=dataset,palette=\"PuBu\")\nplt.show()","030523a8":"plt.figure(figsize=(13,5))\nsns.boxplot(x=\"HOUSE_TYPE\",y=\"INCOME\",data=dataset,hue=\"TARGET\",palette=\"Purples\")\nplt.show()","d16a773d":"sns.boxplot(dataset[\"YEARS_EMPLOYED\"])\nplt.show()","8103e0ea":"plt.figure(figsize=(12,4))\nsns.countplot(dataset[\"YEARS_EMPLOYED\"])\nplt.show()","122e812d":"plt.figure(figsize=(12,4))\nsns.countplot(dataset[\"YEARS_EMPLOYED\"],hue=\"TARGET\",data=dataset)\nplt.title(\"YEARS_EMPLOYED vs  TARGET\",fontsize=20,color=\"BLUE\")\nplt.legend()\nplt.show()","ee489385":"#checking the frequency of BEGIN_MONTH\nplt.figure(figsize=(15,4))\nsns.countplot(dataset[\"BEGIN_MONTH\"])\nplt.figure(figsize=(15,4))\nsns.countplot(dataset[\"BEGIN_MONTH\"],hue=\"TARGET\",data=dataset)\nplt.show()","40f7d5eb":"plt.figure(figsize=(12,4))\nplt.subplot(121)\nsns.countplot(dataset[\"CAR\"],palette=\"Blues\")\nplt.subplot(122)\nsns.countplot(dataset.CAR,hue=\"TARGET\",data=dataset,palette=\"Blues\")\nplt.show()","489b66e3":"#these columns have continuous values other are having discrete entries\ncont=dataset[[\"INCOME\",\"BEGIN_MONTH\",\"AGE\",\"YEARS_EMPLOYED\"]]","a9735936":"#Using Boxplot to detect the outliers-\nplt.figure(figsize=(15,12))\n\nfor i ,col in enumerate(list(cont.columns)):\n    plt.subplot(4,2,i+1)\n    cont.boxplot(col)\n    plt.grid()\n    plt.tight_layout()","a95bd000":"# Distribution of columns those have continuous -\n#Histogram\nplt.figure(figsize=(15,10))\n\nfor i ,cols in enumerate(list(cont.columns)):\n    plt.subplot(3,2,i+1)\n    sns.distplot(cont[cols])\n    plt.xlabel(cols,fontsize=14,color=\"Red\")\n    plt.grid()\n    plt.tight_layout()","6b766749":"plt.figure(figsize=(17,4))\n\nplt.subplot(121)\nres=stats.probplot(dataset.INCOME,plot=plt,dist=\"norm\")\nplt.xlabel(\"INCOME\",fontsize=16,color=\"m\")\n\nplt.subplot(122)\nres=stats.probplot(dataset.YEARS_EMPLOYED,plot=plt,dist=\"norm\")\nplt.xlabel(\"YEARS_EMPLOYED\",fontsize=16,color=\"m\")\n\nplt.show()","dbce1f1a":"#removing values those are greater then 600000\ndataset=dataset[dataset['INCOME'] < 600000]","3b786e4e":"plt.figure(figsize=(17,4))\n\nplt.subplot(121)\nsns.boxplot(dataset.INCOME)\n\nplt.subplot(122)\nres=stats.probplot(dataset.INCOME,plot=plt,dist=\"norm\")","621e6205":"#Dropping the values greater the 20\ndataset=dataset[dataset['YEARS_EMPLOYED'] < 20]","e7710fc6":"plt.figure(figsize=(16,4))\nplt.subplot(121)\nsns.boxplot(dataset.YEARS_EMPLOYED)\nplt.subplot(122)\nres=stats.probplot(dataset.YEARS_EMPLOYED,plot=plt,dist=\"norm\")","c26b6b67":"dataset.drop(columns={\"ID\"},inplace=True,axis=1)","4716d379":"#everyone has phone \ndataset.drop(\"FLAG_MOBIL\",inplace=True,axis=1)","f606de13":"#converting float data types to INT64 datatype\nfloats=[\"INCOME\",\"FAMILY SIZE\",\"BEGIN_MONTH\"]\n\nfor i in floats:\n    dataset[i]=dataset[i].astype(\"int64\")","d0956001":"from sklearn.preprocessing import LabelEncoder","a5e66355":"labels=[\"GENDER\",\"CAR\",\"REALITY\",\"INCOME_TYPE\",\"EDUCATION_TYPE\",\"HOUSE_TYPE\",\"FAMILY_TYPE\"]\nlabel=LabelEncoder()\n\nfor i in labels:\n    dataset[i]=label.fit_transform(dataset[i])","e30e8d58":"#dataset after using LabelEncoder\ndataset.head()","17556c67":"#corr of the \ndataset.corr()","d57b2289":"plt.figure(figsize=(18,10))\nsns.heatmap(dataset.corr(),annot=True,fmt='.2',cmap=\"Greys\")\nplt.show()","e59d3a80":"#FAMILY_SIZE and NO_OF_CHILD are highly correlated to each other so we can drop one feature form the dataset\ndataset.drop('NO_OF_CHILD',inplace=True,axis=1)","f8357fbb":"from sklearn.tree import ExtraTreeClassifier","f6262650":"X=dataset.drop(\"TARGET\",axis=1)\ny=dataset.TARGET","fcb4a412":"print(\"X :\",X.shape)\nprint(\"y :\",y.shape)","245cccb0":"model=ExtraTreeClassifier()\nmodel.fit(X,y)","553b1c3c":"print(model.feature_importances_)","2fb70b57":"feat=pd.Series(model.feature_importances_,index=X.columns)","1bae8ebd":"feats=feat.to_frame().reset_index()\nfeats.columns=[\"Features\",\"Scores\"]\nfeatures=feats.sort_values(by=\"Scores\",ascending=False)\ntop_features=features.nlargest(12,\"Scores\")\ntop_features","67c86a3d":"plt.figure(figsize=(14,6))\nsns.barplot(y=\"Features\",x=\"Scores\",data=top_features)\nplt.xticks(rotation=90)\nplt.show()","4189058a":"new_data=dataset[[\"GENDER\",\"BEGIN_MONTH\",\"AGE\",\"INCOME\",\"YEARS_EMPLOYED\",\"FAMILY SIZE\",\"INCOME_TYPE\",\"FAMILY_TYPE\",\"WORK_PHONE\"\n                  ,\"PHONE\",\"HOUSE_TYPE\",\"EDUCATION_TYPE\",\"TARGET\"]]","10cd36e4":"new_data.shape","58377a63":"plt.figure(figsize=(12,8))\nsns.heatmap(new_data.corr(),fmt='.2',annot=True,cmap=\"Greys\")\nplt.show()","11090a41":"new_data.head()","19580b3b":"dummy_data=pd.get_dummies(new_data,columns={\"GENDER\",\"FAMILY SIZE\",\"INCOME_TYPE\",\"FAMILY_TYPE\",\"WORK_PHONE\",\"PHONE\",\n                                            \"HOUSE_TYPE\",\"EDUCATION_TYPE\"},drop_first=True)","af71ec94":"#shape of the dataset after creating dummy variables\ndummy_data.shape","85ea8496":"#checking the correlation of the new dataset\nplt.figure(figsize=(12,8))\nsns.heatmap(dummy_data.corr(),fmt='.2',cbar=False,cmap=\"RdPu_r\")\nplt.show()","3fec2693":"data=dummy_data.copy()","0e589ee3":"data_minority=data[dataset[\"TARGET\"] == 1]\ndata_majority=data[dataset[\"TARGET\"] == 0]","69a25f6d":"print(\"Data_majority :\",data_majority.shape)\nprint(\"Data_minority :\",data_minority.shape)","f7d55f92":"#library for perfroming SMOTE\nfrom imblearn.over_sampling import SMOTE","2c1b2aae":"data_oversampled=data.copy()","5620fbf0":"data_oversampled.TARGET.value_counts()","9aebfa05":"#setting TARGET variable SMOTE\nX=data_oversampled.drop(\"TARGET\",axis=1)\ny=data_oversampled.TARGET","c2b3e8fe":"X_smote,y_smote=SMOTE().fit_sample(X,y)","4e15c17f":"#shape of dataset after using SMOTE\nprint(\"X\",X_smote.shape)\nprint(\"y\",y_smote.shape)","dc43285a":"#head of data after using SMOTE\n#X_smote.head()","eb97f7d4":"sns.countplot(y_smote)\nplt.show()","640f6b97":"#considering the continuous variables -\nX_smote_continuous=X_smote[[\"BEGIN_MONTH\",\"AGE\",\"INCOME\",\"YEARS_EMPLOYED\"]]","c0c56f8c":"#distribution of the continuous variables after sampling the data using SMOTE -\nplt.figure(figsize=(13,9))\n\nfor i,col in enumerate((X_smote_continuous.columns)):\n    plt.subplot(3,2,i+1)\n    sns.distplot(X_smote_continuous[col])\n    plt.xlabel(col,fontsize=14,color=\"Magenta\")\n    plt.grid()\n    plt.tight_layout()","78247ea0":"plt.figure(figsize=(10,8))\nmatrix = np.triu(X_smote.corr())\nsns.heatmap(X_smote.corr(),mask=matrix,cbar=False)\nplt.show()","93626f4f":"X_train_over,X_test_over,y_train_over,y_test_over=train_test_split(X_smote,y_smote,test_size=0.25,random_state=99)","505a9c48":"#size of data after spliting\nprint(\"X_train_over : \",X_train_over.shape,\"\\ny_train_over : \",y_train_over.shape)\nprint(\"X_train_over : \",X_test_over.shape,\"\\ny_train_over : \",y_test_over.shape)","566a578b":"random_over=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=25, max_features='sqrt', max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=2, min_samples_split=50,\n            min_weight_fraction_leaf=0.0, n_estimators=700, n_jobs=None,\n            oob_score=False, random_state=None, verbose=0,\n            warm_start=False)","06671db7":"random_over.fit(X_train_over,y_train_over)","7ca77161":"pred_over=random_over.predict(X_test_over)","d1cc5780":"print(metrics.classification_report(pred_over,y_test_over))","8fac983e":"print(metrics.precision_score(pred_over,y_test_over))","6ac669e4":"score_over = {}\nscore_over[\"Random_Forest\"] ={}\nscore_over[\"Random_Forest\"][\"Precision\"]=metrics.precision_score(pred_over,y_test_over)*100\nscore_over[\"Random_Forest\"][\"Recall\"]=metrics.recall_score(pred_over,y_test_over)*100\nscore_over[\"Random_Forest\"][\"Accuracy\"]=metrics.accuracy_score(pred_over,y_test_over)*100","0ea8ba03":"sns.heatmap(metrics.confusion_matrix(y_test_over,pred_over),annot=True,cbar=False\n            ,cmap=\"Blues\",fmt=\"1\",linecolor=\"Black\",linewidth=0.3)\nplt.xlabel(\"PREDICTED_LABEL\",fontsize=12,color='r')\nplt.ylabel(\"ACTUAL_LBLE\",fontsize=12,color='r')\nplt.title(\"CONFUISON_MATRIX   :-\",fontsize=14,color=\"b\")\nplt.show()","2f4a3ff3":"from sklearn.tree import DecisionTreeClassifier","15ff41f3":"tree=DecisionTreeClassifier()\ntree.fit(X_train_over,y_train_over)","89f89e53":"pred_tree=tree.predict(X_test_over)","5ae930f5":"print(metrics.classification_report(y_test_over,pred_tree))","e2c11bb7":"score_over[\"Decision_Tree\"] ={}\nscore_over[\"Decision_Tree\"][\"Precision\"]=metrics.precision_score(pred_tree,y_test_over)*100\nscore_over[\"Decision_Tree\"][\"Recall\"]=metrics.recall_score(pred_tree,y_test_over)*100\nscore_over[\"Decision_Tree\"][\"Accuracy\"]=metrics.accuracy_score(pred_tree,y_test_over)*100","dc364b21":"sns.heatmap(metrics.confusion_matrix(y_test_over,pred_tree),annot=True,cbar=False\n            ,cmap=\"Blues\",fmt=\"1\",linecolor=\"Black\",linewidth=0.3)\nplt.xlabel(\"PREDICTED_LABEL\",fontsize=12,color='r')\nplt.ylabel(\"ACTUAL_LBLE\",fontsize=12,color='r')\nplt.title(\"CONFUISON_MATRIX   :-\",fontsize=14,color=\"b\")\nplt.show()","e71d7c53":"score_oversampling=pd.DataFrame(score_over)","8bb5c61f":"#library for selecting data at random\nfrom sklearn.utils import resample","a8974272":"data_undersampled=data.copy()","3aef2160":"#target class count bofer under_sampling\ndata_undersampled.TARGET.value_counts()","3f3dac72":"#splitting the whole data set into to parts for under_sampling method-\ndata_majority_undersampled=data_undersampled[data_undersampled[\"TARGET\"] == 0]\ndata_minority_undersampled=data_undersampled[data_undersampled[\"TARGET\"] == 1]","d82679ef":"#here we will be keeing the majority class double the size of minority class to prevent the model from underfitting\ndata_under_sampled=resample(data_majority_undersampled,n_samples=844,replace=True,random_state=42)","3d22fac7":"#shape of the majority class after resampling :\nprint(data_under_sampled.shape)","fd63078a":"data_under=pd.concat([data_under_sampled,data_minority])","defa6fdd":"#data afrer under sample\ndata_under.head()","828b8da7":"#size of new data_ after under_sampling\ndata_under.shape","6e945b08":"#data distribution after under sampling\ndata_under.hist(figsize=(20,20))\nplt.show()","ce754f80":"#target column of sampled data\nprint(data_under.TARGET.value_counts())","f5318184":"#Corr plot of the under_sampled data look same the normal data Major difference is not seen here in the plot.\n#Removing from the correlation plot INCOME_TYPE_3 because it has all the values 1\nplt.figure(figsize=(12,8))\nsns.heatmap(data_under.drop(\"INCOME_TYPE_3\",axis=1).corr(),fmt='.2',cbar=False)\nplt.show()","9e450f7f":"#after under_sampling the data now target class have 1:2 distribution\nsns.countplot(data_under.TARGET,palette=\"rocket\")\nplt.xlabel(\"Target_class Distribution\",fontsize=15)\nplt.show()","1c153530":"X_under=data_under.drop(\"TARGET\",axis=1)\ny_under=data_under.TARGET","17fde78e":"#spliting the data for train and test:\nX_train_under,X_test_under,y_train_under,y_test_under=train_test_split(X_under,y_under,test_size=0.25,random_state=71)","cb5755c7":"#size of data after spliting\nprint(\"X_train_under : \",X_train_under.shape,\"\\ny_train_under : \",y_train_under.shape)\nprint(\"X_train_under : \",X_test_under.shape,\"\\ny_train_under : \",y_test_under.shape)","d115dae6":"random_under=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=25, max_features='sqrt', max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=2, min_samples_split=50,\n            min_weight_fraction_leaf=0.0, n_estimators=700, n_jobs=None,\n            oob_score=False, random_state=None, verbose=0,\n            warm_start=False)","9a425feb":"random_under.fit(X_train_under,y_train_under)","c48a836e":"pred_under=random_under.predict(X_test_under)\nprint(metrics.classification_report(pred_under,y_test_under))","dd6e9a96":"precision_under=(metrics.precision_score(pred_under,y_test_under))\nprecision_under","2ed3232e":"score_under = {}\nscore_under[\"Random_Forest\"] ={}\nscore_under[\"Random_Forest\"][\"Precision\"]=metrics.precision_score(pred_under,y_test_under)*100\nscore_under[\"Random_Forest\"][\"Recall\"]=metrics.recall_score(pred_under,y_test_under)*100\nscore_under[\"Random_Forest\"][\"Accuracy\"]=metrics.accuracy_score(pred_under,y_test_under)*100","cc194875":"sns.heatmap(metrics.confusion_matrix(y_test_under,pred_under),annot=True,cbar=False\n            ,cmap=\"Greys\",fmt=\"1\",linecolor=\"Black\",linewidth=0.3)\nplt.xlabel(\"PREDICTED_LABEL\",fontsize=12,color='r')\nplt.ylabel(\"ACTUAL_LBLE\",fontsize=12,color='r')\nplt.title(\"CONFUISON_MATRIX   :-\",fontsize=14,color=\"b\")\nplt.show()","6d1daf2f":"tree_under=DecisionTreeClassifier()\ntree_under.fit(X_train_under,y_train_under)","ca0f275a":"pred_under_tree=tree_under.predict(X_test_under)","f78f8708":"print(metrics.classification_report(pred_under_tree,y_test_under))","1069f073":"score_under[\"Decision_Tree\"] ={}\nscore_under[\"Decision_Tree\"][\"Precision\"]=metrics.precision_score(pred_under_tree,y_test_under)*100\nscore_under[\"Decision_Tree\"][\"Recall\"]=metrics.recall_score(pred_under_tree,y_test_under)*100\nscore_under[\"Decision_Tree\"][\"Accuracy\"]=metrics.accuracy_score(pred_under_tree,y_test_under)*100","df14113f":"sns.heatmap(metrics.confusion_matrix(y_test_under,pred_under_tree),annot=True,cbar=False\n            ,cmap=\"Blues\",fmt=\"1\",linecolor=\"Black\",linewidth=0.3)\nplt.xlabel(\"PREDICTED_LABEL\",fontsize=12,color='r')\nplt.ylabel(\"ACTUAL_LBLE\",fontsize=12,color='r')\nplt.title(\"CONFUISON_MATRIX   :-\",fontsize=14,color=\"b\")\nplt.show()","b9da80aa":"score_undersampling=pd.DataFrame(score_under)","c7881cac":"score_oversampling.plot(kind=\"bar\",figsize=(10,3))\nplt.xticks(rotation=(0))\n#plt.xlabel(\"Evaluation Metrics\",fontsize=15)\nplt.ylabel(\"%\",fontsize=15)\nplt.title(\"Scores Of UnderSampled Data: SMOTE\",fontsize=15,color=\"Red\")\n\nscore_undersampling.plot(kind=\"bar\",figsize=(10,3))\nplt.xticks(rotation=(0))\nplt.xlabel(\"Evaluation Metrics\",fontsize=15)\nplt.ylabel(\"%\",fontsize=15)\nplt.title(\"Scores Of UnderSampled Data: Random Resampling\",fontsize=15,color=\"Red\")\nplt.show()","167196a8":"from sklearn.metrics import roc_auc_score,roc_curve\n\nytest_pred=random_over.predict_proba(X_test_over)\nprint(\"Xtest : {} \".format(roc_auc_score(y_test_over,ytest_pred[:,-1])))\nytest_pred_ = ytest_pred[:,-1]\n\nfpr,tpr,thresholds = roc_curve(y_test_over,ytest_pred_)\n\n#plt.figure(figsize=(12,8))\nplt.plot(fpr,tpr,label='roc_curve',color='MAGENTA')\nplt.plot([0,1],[0,1],color='darkblue',linestyle='--')\nplt.ylabel(\"True positive rate\",fontsize=15)\nplt.xlabel(\"False positive rate\",fontsize=15)\nplt.title(\"Receiver Operating Characteristic (Roc) curve -\",fontsize=15)\nplt.legend()\nplt.show()","abe4f0fd":"##### SMOTE (Synthetic minority oversampling technique)","0a51221c":"- Dataset have few categorical columns those who have datatype as \"object\"","3a680a94":"##### `Creating model of the under_sampled data : to check the prediction of the model -`","681a2b45":"- Majority of people does not have CAR.","932d2cd3":"- #### From dataset separating data in two parts which are data_minority(Fraudlent) and data_majority(Non-Fraudlent) ","8aeeeede":"- Now the target class have 50:50 instances of both Fraud and Non-Fraud","5e3c4388":"##### EDUCATION_TYPE","eca1bab7":"### **`Categorical Columns-`**","37ef3038":"- ###### **`Undersampling`**:- it means taking the less number of majority class (In our case taking less number of `Data_majority` so that our new data will be balanced","af1cf377":"- <a href='#22'>Loading Dataset<\/a>","0d8bbd1d":"###### Decision Tree","4abeb093":"##### The Credit Card Fraud Detection Problem includes modeling past credit card transactions with the knowledge of the ones that turned out to be fraud.This model is then used to identify whether a new transaction is fraudulent or not.","7f32d29f":"# <a id='5'> Feature Selection - <\/a>","b77ff7bc":"##### FAMILY_TYPE","565b53e3":"- Boxplot shows that now few values are present. We cannot drop all the values that does not show normal distribution, dropping values can cause loss of data which is not required.\n- After removing the outlier values the Q-Q plot shows now more values are alinged. In both the plots","264019c1":"   ![smote-2.png](attachment:smote-2.png) \n   \n                                                  Source - MEDIUM","ec4936e9":"- `YEARS_EMPLOYED` show some outliers which we will deal later","4a33b309":"- `INCOME`    :- Q-Q plot show all the points are not distributed uniformly\n- `YEARS_EMPLOYED`  :- As compared to INCOME, YEARS_EMPLOYED shows more disturbance in distribution.It has few outliers because high earning people also there\n","f39fd80c":"- Printing all the  Categorical Values that are persent in dataset","139f912b":"##### `Creating model of the under_sampled data : to check the prediction of the model -`","5a7ed0d0":"### Dummy Variables -","ae8a2170":"###### Random Forest","49697ca0":"## <a id='61'> Over Sampling -<\/a>","1ab0d42b":"# Credit Card Fraud Detection_","72bbb40d":"- There are no missing values in entire dataset","1736f494":"##### CAR","4a1bec02":"# <a id='6'>Sampling Methods -<\/a>","5e5b5389":"  # <a id='0'>Content<\/a>\n - <a href='#1'>Introduction<\/a>  \n - <a href='#2'>Load Packages And Dataset<\/a>\n     -  <a href='#21'>Loading Libraries<\/a>\n     -  <a href='#22'>Loading Dataset<\/a>\n - <a href='#3'>Univariate and Multivariate Analysis<\/a>\n - <a href='#4'>Data Processing<\/a>\n - <a href='#5'>Feature Selection<\/a>\n - <a href='#6'>Sampling Methods<\/a>\n     -  <a href='#61'>Over Sampling<\/a>\n     -  <a href='#62'>Under Sampling<\/a>","917a46f9":"###### **`BOX-PLOT`**: -\n- The box indicates the interquartile range, that is, the top line of the box is the third quartile and the bottom line of the box is the second quartile. \n- The line separating the second and third quartiles indicates the median.\n- The lines outside of the box indicate the outer-quartiles (first and fourth).","e4c5f752":"# <a id='3'>Univariate And Multivariate Analysis","547991ee":"- People those who have their `EDUCATION_TYPE` as **Secondary\/secondray special** have more Fraudlent count compared to other EDUCATION type","69b49d8a":"- <a id=\"21\">Loading Libraries -<\/a>","ae1e40a3":"##### GENDER","647437e2":"**`RANDOM RESAMPLING`** `:` -","4340b6ea":"![credit-card.jpg](attachment:credit-card.jpg)","e7565b1e":"##### Comparing Scores -","91d5d0d9":" Implementing SMOTE on our imbalanced dataset helped us with the imbalance of our labels (more no fraud than fraud transactions)\n \n As SMOTE show promising result as compared to Random Resampling. In Ramdom Undersampling where the data is reduced to size of the minority class, most of the Important Data is lost. \n \n Also, in our undersample data our model is unable to detect for a large number of cases non fraud transactions correctly and instead, misclassifies those non fraud transactions as fraud cases.","220638c9":"- Standard Deviation, Mean and Count of the continuous columns of dataset","a71f4d29":"**`SMOTE`** `:` -  it is also a type of oversampling but in this we will make the synthetic example of Minority data and will give as a balanced data","c31bb6db":"##### Roc-Auc curve ","fa78f243":"- In this phase of the project we will implement \"Random Under Sampling\" which basically consists of removing data in order to have a more balanced dataset and thus avoiding our models to overfitting.\n\n\n- Note: The main problem with \"Random Under-Sampling\" is that  our classification models will not perform as accurate as we would like to since there is a great loss of informatyion (from 25k \"Non-Fraud\" to 844 \"Non-Fraud\")","d9d38443":"- SMOTE first selects a minority class instance a at random and finds its k nearest minority class neighbors. The synthetic instance is then created by choosing one of the k nearest neighbors b at random and connecting a and b to form a line segment in the feature space. The synthetic instances are generated as a convex combination of the two chosen instances a and b.","de151322":"- Label Encoder refers to conveting the labels to numeric","97232c18":"- Creating a seprate column for the subclasses of the above mentioned columns ","3c5ab163":"- Correlation Matrix\n - `Note`: All the Categorical values are excluded only the Numerical Values are present in the plot","ec42328c":"##### BEGIN_MONTH","0b0e0e90":"-For Detailed Study of the dataset.\n - https:\/\/www.kaggle.com\/rikdifos\/credit-card-approval-prediction","a16d1280":"- ### Detecting Outliers","57d5cd68":"##### INCOME_TYPE","ced48cad":"- **Note:** Notice how imbalanced is our original dataset! Most of the transactions are non-fraud. If we use this dataframe as the base for our predictive models and analysis we might get a lot of errors and our algorithms will probably overfit since it will \"assume\" that most transactions are not fraud. But we don't want our model to assume, we want our model to detect patterns that give signs of fraud!","311f8956":"- Using the Values of Random Forest Classifiers build using the SMOTE technique as this model shows good scores compared to others\n","9b391a90":"###### CONCLUSION:-","9c2db5a9":"![undesampling.png](attachment:undesampling.png)\n                                                                                                    \n                                                                                                  -Source:TowardsDataScience","5f50d46d":"######  -   Distribution of data after under sampling looks normally distributed (ignoring the categorical columns)","bec1308b":"- Hence in data there is only 1.68 % are the fraud transcation while 98.32 are valid transcation\n- There are 422 Fraud transaction in 25k transaction, the dataset is highly imbalanced","9d897eeb":"-  `INCOME` and `YEARS_EMPLOYED` columns does not show normal distribution \n- Graphs of both the columns are right skewed","b4e1b479":"# <a id='2'>Load Packages And Dataset -<\/a>","5859d2df":"# <a id=\"1\">Introduction -<\/a>","df89acbb":"- For detail Study\nhttps:\/\/imbalanced-learn.org\/stable\/generated\/imblearn.over_sampling.SMOTE.html","2dbd7ca9":"###### Random Forest","3dda6e60":"- **`ID`** - Client Number\n- **`GENDER`** - M:Male , F:Female\n- **`CAR`** - Owns car or NO\n- **`REALITY`** - Is there a property\n- **`NO_OF_CHILD`** - Number Of Children\n- **`INCOME`** - Anually Income\n- **`EDUCATION_TYPE`** - Educaiton Level\n- **`FAMILY_TYPE`** - Marital Status\n- **`HOUSE_TYPE`** - Way of Living\n- **`FLAG_MOBILE`** - Is there a mobile phone\n- **`WORK_PHONE`** - Is there a work phone\n- **`PHONE`** - Is there a phone\n- **`OCCUPATION_TYPE`** - Occupation\n- **`FAMILY_SIZE`** - No. Of family members\n- **`BEGIN_MONTH`** - The month of the extracted data is the starting point, backwards, 0 is the current month, -1 is the previous month, and so on\n- **`AGE`** -  Age of the Client\n- **`YEARS_EMPLOYED`** -  Years of working\n- **`Target`** - Yes : 1, No : 0   \/\/ Yes - Fraud, No - Not_fraud","7e7b9c22":"### Our Goals :\n   - To perform under and over sampling on the same dataset to impove the prediction of model.\n   - For Oversampling SMOTE algorithm is used \n       - Creating a 50\/50 sub-dataframe ratio of \"Fraud\" and \"Non-Fraud\" transactions. (SMOTE Algorithm)\n   - For Undersampling Random resampling is used\n       - Creating a 2:1 ratio for the majority class (Non-Fraud) ","6a04b830":"- On imbalanced dataset Combination of SMOTE and resampling also work well you can try !!","0778b319":"##### YEARS_EMPLOYED","357cdb80":"- ###### **`Oversampling`**:- it means using replicating the data of minority class (fraud class) so that we can have a balanced data","d54c503c":"- YEARS_EMPLOYED :-\n- Most of the employees working experience lies between 1yrs to 15yrs. Countplot is more clustered in this region\n- Fraudlent entries also lies in this region","83180a35":"- Married people shows more number of fraud cases as compared to other `FAMILY_TYPE`","bbde3e42":"###### Decision Tree","7df39070":"#####  HOUSE_TYPE","f31bf677":"#  <a id='4'>Data Processing -<\/a> ","e76c3fc2":"## <a id='62'> Under Sampling -<\/a>","73e79a44":"![1_P93SeDGPGw0MhwvCcvVcXA.png](attachment:1_P93SeDGPGw0MhwvCcvVcXA.png) "}}