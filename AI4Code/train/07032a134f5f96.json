{"cell_type":{"9152b888":"code","107a3658":"code","665d45de":"code","e51bd9a1":"code","aac4af86":"code","b20200f0":"markdown","84af69c7":"markdown","7d3454f7":"markdown","00106249":"markdown","3f0cc213":"markdown","da39f9b3":"markdown"},"source":{"9152b888":"from IPython.display import Image\nurl = 'https:\/\/patentimages.storage.googleapis.com\/pages\/USD253711-2.png'\nImage(url=url,width=800, height=600)","107a3658":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport bq_helper\nfrom bq_helper import BigQueryHelper\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\n\n# prepare bigQuery helper\npatents = bq_helper.BigQueryHelper(active_project=\"patents-public-data\",\n                                   dataset_name=\"patents\")\nbq_assistant = BigQueryHelper(\"patents-public-data\", \"patents\")\nbq_assistant.list_tables()\n#patents.table_schema(\"publications\")\n#patents.head(\"publications\")\n#patents.head(\"publications\",selected_columns=\"application_number_formatted,inventor,country_code\", num_rows=10)","665d45de":"#import os\n#print(os.listdir(\"..\/input\"))\nUSPTO_patent_codes = pd.read_csv('..\/input\/USPTO patent codes.csv')\nUSPTO_patent_codes.head(5)","e51bd9a1":"# create query to be run\nquery1 = \"\"\"\nWITH temp1 AS (\n    SELECT\n      DISTINCT\n      PUB.country_code,\n      PUB.application_number AS patent_number,\n      inventor_name\n    FROM\n      `patents-public-data.patents.publications` PUB\n    CROSS JOIN\n      UNNEST(PUB.inventor) AS inventor_name\n    WHERE\n          PUB.grant_date > 0\n      AND PUB.country_code IS NOT NULL\n      AND PUB.application_number IS NOT NULL\n      AND PUB.inventor IS NOT NULL\n)\nSELECT\n  *\nFROM (\n    SELECT\n     temp1.country_code AS country,\n     temp1.inventor_name AS inventor,\n     COUNT(temp1.patent_number) AS count_of_patents\n    FROM temp1\n    GROUP BY\n     temp1.country_code,\n     temp1.inventor_name\n     )\nWHERE\n count_of_patents > 100\n;\n\"\"\"\n# Check size of data being examined by query\n#patents.estimate_query_size(query1)\n\n# Run query \nquery_results = patents.query_to_pandas_safe(query1, max_gb_scanned=6)\nprint(\"Number of records:\", len(query_results.index))\nquery_results.head(5)","aac4af86":"# reduce results down to the top 50 inventors in the US\ntop_50_inventors = query_results.loc[query_results['country'] == \"US\"].nlargest(50,'count_of_patents')\n\n# show the top 50 in a plotly table\ntable1 = ff.create_table(top_50_inventors)\npy.iplot(table1, filename='jupyter-table1')","b20200f0":"**TO DO...Step 5** - Plot top areas of invention for the top 50 inventors in the US by bringing the Google patent data together with the USPTO codes.","84af69c7":"**Step 2** - Load USPTO patent codes that I brought in as a new dataset from the [USPTO website](https:\/\/www.uspto.gov\/web\/patents\/classification\/selectnumwithtitle.htm).","7d3454f7":"This is some fun analysis of the Google Patents Public data set.\n\nFirst, a picture of one of the more enjoyable patents of all time...lego patent [USD253711S](https:\/\/patents.google.com\/patent\/USD253711S\/en) :)","00106249":"**Step 4** - sort the results to view the top 50 inventors in the US by volume of patents. I had fun googling some of the top names on here to get a sense for what they're focused on.","3f0cc213":"**Step 1** - Prep BigQuery connection.","da39f9b3":"**Step 3** - Query to find all inventors that have over 100 patents that were granted. I was happy that I got to use two of my favorite SQL commands in this: WITH and UNNEST. :)"}}