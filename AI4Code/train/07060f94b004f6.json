{"cell_type":{"643cc87f":"code","fead6f78":"code","f50ce276":"code","f21af7fa":"code","e283d70a":"code","fc6368d9":"code","cfbce547":"code","a57784c2":"code","464d6933":"code","0822684a":"code","5ab0550c":"code","34582290":"code","d7020244":"code","ad3b9dbe":"code","b682ab8c":"code","8bf468f4":"code","fdb2ab6b":"code","2c532538":"code","d95c6768":"code","db54e3af":"markdown","952ff67d":"markdown","8fcb9b4a":"markdown","94b61dda":"markdown","3058533a":"markdown","648899d7":"markdown"},"source":{"643cc87f":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","fead6f78":"cases = pd.read_csv(\"..\/input\/sarscov2-ch-ti\/cases.csv\")\ncases.count()","f50ce276":"cases","f21af7fa":"df_long=pd.melt(cases, id_vars=['date'], value_vars=['confirmed_cases', 'deaths'])\nfig = px.line(df_long, x='date', y='value', color='variable', width=1000, height=600, title=\"Total SARS-CoV-2 confirmed cases\", labels={ \"x\": \"Date\"})\nfig.show()","e283d70a":"rows = len(cases)\nchange = [cases['confirmed_cases'][i]-cases['confirmed_cases'][i-1] for i in range(1,rows)]\ndays=[cases.index[x+1] for x in range(rows-1)]\nfig = px.bar(x=days, y=change, color=change, orientation='v', width=1000, height=600, title='New SARS-CoV-2 confirmed cases by day', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()","fc6368d9":"rows = len(cases)\nperc_change = [100.0*(cases['confirmed_cases'][i]-cases['confirmed_cases'][i-1])\/cases['confirmed_cases'][i-1] for i in range(14,rows)]\ndays=[cases.index[x+14] for x in range(rows-14)]\nfig = px.bar(x=days, y=perc_change, color=perc_change, orientation='v', width=1000, height=600, title='New SARS-CoV-2 confirmed cases by day in %', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()","cfbce547":"dp_cases = pd.read_csv(\"..\/input\/sarscov2-ch-ti\/diamond_princess.csv\")\nmr = dp_cases[\"deaths\"] \/ dp_cases[\"confirmed_cases\"]","a57784c2":"'Based on the SARS-CoV-2 cases on the Diamond Princess ship, we estimate a mortality rate of: {} %'.format(round(mr[0]*100, 2))","464d6933":"cases_with_mr1 = cases['deaths'] \/ mr.to_numpy()\ncases_with_mr2 = cases['deaths'] \/ (mr.to_numpy() * 2.0)","0822684a":"days=[cases.index[x] for x in range(rows)]\nfig = go.Figure()\nfig.add_trace(go.Scatter(y=cases['confirmed_cases'], x=days, name='Confirmed cases'))\nfig.add_trace(go.Scatter(y=cases_with_mr1, x=days, name='Cases if MR: {} %'.format(round(mr[0]*100, 2))))\nfig.add_trace(go.Scatter(y=cases_with_mr2, x=days, name='Cases if MR: {} %'.format(round(mr[0]*100*2, 2))))\nfig.update_layout(width=1000,height=600, title='Potential SARS-CoV-2 cases in Ticino')\nfig.show()","5ab0550c":"days_to_predict = 50","34582290":"cases = pd.read_csv(\"..\/input\/sarscov2-ch-ti\/cases.csv\")\ncases = cases.set_index(\"date\")\ncases = cases.iloc[:, :-1]","d7020244":"X = np.asarray([x for x in range(len(change))]).reshape(-1,1)\ny = np.asarray(change).reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\nregressor = LinearRegression()  \nregressor.fit(X_train, y_train)\nprint(regressor.intercept_)\nprint(regressor.coef_)","ad3b9dbe":"y_pred = regressor.predict(X_test)\ndf = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf","b682ab8c":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","8bf468f4":"size = len(cases)\nX_pred = np.asarray([x for x in range(size,size+days_to_predict)]).reshape(-1,1)\ny_pred = regressor.predict(X_pred)","fdb2ab6b":"y_list=[]\ncumul_sum=0\nfor y in list(y_pred.flatten()):\n    cumul_sum+=y\n    y_list.append(cumul_sum)\n    \ntotal_y = list(y_train.flatten())\ntotal_y.extend(y_list)\n\ntotal_x = [x for x in range(len(total_y))]","2c532538":"x_orig = [x for x in range(len(cases))]\nplt.figure(figsize=(15, 10))\nplt.scatter(x_orig, cases,  color='gray')\nplt.plot(total_x, total_y, color='red', linewidth=2)\nplt.xlabel('Nth Day of Coronavirus in Ticino')\nplt.ylabel('Cases')\nplt.title('Predicted SARS-CoV-2 cases in Ticino')\nplt.show()","d95c6768":"estimated_peak_day = 40\ntotal_y[estimated_peak_day-1]","db54e3af":"## Total confirmed cases","952ff67d":"# Confirmed vs. potential cases","8fcb9b4a":"# Prediction with linear regression","94b61dda":"## New confirmed cases by day","3058533a":"## New confirmed cases by day in %","648899d7":"# General Overview"}}