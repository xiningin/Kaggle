{"cell_type":{"52b96638":"code","063a64b3":"code","ed8f0929":"code","cfa3649e":"code","5990ffc1":"code","9d677b88":"code","7f052250":"code","acb7ee7a":"code","84db2a47":"code","9dcc881c":"code","08c94e63":"code","0310d69f":"code","56047300":"code","8d7db3bc":"code","d917800e":"code","8404786e":"code","ce76935d":"code","85cd54a4":"code","b3676373":"code","fe8532a0":"code","830afc63":"code","2c9053f7":"code","6ae395b7":"code","f0e8785b":"code","7966515f":"code","f59e2bbc":"code","46ffd11a":"code","dd480d61":"code","b7a40ec0":"code","af568880":"code","9a837313":"markdown","1b1749b3":"markdown","a92a2601":"markdown","c4fe328e":"markdown","fc74448f":"markdown","0ea3282b":"markdown","de6a0b75":"markdown","74898072":"markdown","e67b0e99":"markdown","2a714cfe":"markdown","3ac62155":"markdown","677308a0":"markdown","0a9b034c":"markdown","badffb11":"markdown","c21fb4ee":"markdown","7599a4f9":"markdown","1ece41a4":"markdown","07a0421c":"markdown"},"source":{"52b96638":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","063a64b3":"# Reading the data\ndf = pd.read_csv(\"..\/input\/portland-oregon-average-monthly-.csv\")","ed8f0929":"df.columns = [\"month\", \"average_monthly_ridership\"]\ndf.head()","cfa3649e":"df.dtypes","5990ffc1":"df = df.drop(df.index[df['average_monthly_ridership'] == ' n=114'])","9d677b88":"df['average_monthly_ridership'].unique()","7f052250":"df['average_monthly_ridership'] = df['average_monthly_ridership'].astype(np.int32)","acb7ee7a":"df['month'] = pd.to_datetime(df['month'], format = '%Y-%m')","84db2a47":"df.dtypes","9dcc881c":"# Normal line plot so that we can see data variation\n# We can observe that average number of riders is increasing most of the time\n\ndf.plot.line(x = 'month', y = 'average_monthly_ridership')\nplt.show()","08c94e63":"to_plot_monthly_variation = df","0310d69f":"# only storing month for each index \nmon = df['month']","56047300":"# decompose yyyy-mm data-type \ntemp= pd.DatetimeIndex(mon)","8d7db3bc":"# assign month part of that data to ```month``` variable\nmonth = pd.Series(temp.month)","d917800e":"# dropping month from to_plot_monthly_variation\nto_plot_monthly_variation = to_plot_monthly_variation.drop(['month'], axis = 1)","8404786e":"# join months so we can get month to average monthly rider mapping\nto_plot_monthly_variation = to_plot_monthly_variation.join(month)","ce76935d":"# A quick glance\nto_plot_monthly_variation.head()","85cd54a4":"# Plotting bar plot for each month\nsns.barplot(x = 'month', y = 'average_monthly_ridership', data = to_plot_monthly_variation)\nplt.show()","b3676373":"to_plot_monthly_variation.plot.scatter(x = 'month', y = 'average_monthly_ridership')\nplt.show()","fe8532a0":"rider = df[['average_monthly_ridership']]","830afc63":"rider.rolling(6).mean().plot(figsize=(20,10), linewidth=5, fontsize=20)\nplt.show()","2c9053f7":"rider.diff(periods=4).plot(figsize=(20,10), linewidth=5, fontsize=20)\nplt.show()","6ae395b7":"pd.plotting.autocorrelation_plot(df['average_monthly_ridership'])\nplt.show()","f0e8785b":"pd.plotting.lag_plot(df['average_monthly_ridership'])\nplt.show()","7966515f":"df = df.set_index('month')","f59e2bbc":"# Applying Seasonal ARIMA model to forcast the data \nmod = sm.tsa.SARIMAX(df['average_monthly_ridership'], trend='n', order=(0,1,0), seasonal_order=(1,1,1,12))\nresults = mod.fit()\nprint(results.summary())","46ffd11a":"df['forecast'] = results.predict(start = 102, end= 120, dynamic= True)  \ndf[['average_monthly_ridership', 'forecast']].plot(figsize=(12, 8))\nplt.show()","dd480d61":"def forcasting_future_months(df, no_of_months):\n    df_perdict = df.reset_index()\n    mon = df_perdict['month']\n    mon = mon + pd.DateOffset(months = no_of_months)\n    future_dates = mon[-no_of_months -1:]\n    df_perdict = df_perdict.set_index('month')\n    future = pd.DataFrame(index=future_dates, columns= df_perdict.columns)\n    df_perdict = pd.concat([df_perdict, future])\n    df_perdict['forecast'] = results.predict(start = 114, end = 125, dynamic= True)  \n    df_perdict[['average_monthly_ridership', 'forecast']].iloc[-no_of_months - 12:].plot(figsize=(12, 8))\n    plt.show()\n    return df_perdict[-no_of_months:]","b7a40ec0":"predicted = forcasting_future_months(df,10)","af568880":"df.tail()","9a837313":"About dataset:\n* It is a monthly count of riders for the Portland public transportation system. The website states that it is from January 1973 through June 1982, but when you download the data starts in 1960. \nThis dataset you can also find [here](https:\/\/www.qlik.com\/us\/products\/qlik-data-market#!ds=22w6&display=line)","1b1749b3":"The above figure represents difference between average rider of a month and 4 months before that month i.e\n\n> $d[month] = a[month] - a[month - periods]$.\n\nThis gives us idea about variation of data for a period of time.","a92a2601":"## To check ","c4fe328e":"## What is a time series problem\nIn the field for machine learning and data science, most of the real-life problems are based upon the prediction of future which is totally oblivious to us such as stock market prediction, future sales prediction and so on.Time series problem is basically the prediction of such problems using various machine learning tools.Time series problem is tackled efficiently when first it is analyzed properly (Time Series Analysis) and according to that observation suitable algorithm is used (Time Series Forecasting).We'll study both of then later in this notebook. ","fc74448f":"# Time Series Analysis\n\n","0ea3282b":"The above curve represents the relation between current time stepp and its previous time step","de6a0b75":"![](http:\/\/)Now our data is clean.","74898072":"## Seasonability Analysis\n","e67b0e99":"## Trend Analysis","2a714cfe":"References to:\n* [Time Series Analysis and forecasting using ARIMA](https:\/\/www.kaggle.com\/hsankesara\/time-series-analysis-and-forecasting-using-arima)\n* [Seasonal_ARIMA_model_Portland_transit on Github](https:\/\/github.com\/seanabu\/seanabu.github.io\/blob\/master\/Seasonal_ARIMA_model_Portland_transit.ipynb)\n* [Seasonal ARIMA with Python](http:\/\/www.seanabu.com\/2016\/03\/22\/time-series-seasonal-ARIMA-model-in-python\/)\n","3ac62155":"## To generate future forcasts","677308a0":"## [Periodicity and Autocorrelation](https:\/\/machinelearningmastery.com\/gentle-introduction-autocorrelation-partial-autocorrelation\/)\n\nAuto correlation is the most famous way to understand seasonal variation till now. We can calculate the correlation for time series observations with observations with previous time steps, called lags. Because the correlation of the time series observations is calculated with values of the same series at previous times, this is called a serial correlation, or an autocorrelation.In this plot vertical axis is represented by the following equations:-\n\n> $C_n = \\sum_{t = 1}^{n - h} (y(t) - \\hat{y}) (y(t + n) - \\hat{y}) \/ n$\n\n> $C_0 = \\sum_{t = 1}^{n} (y(t) - \\hat{y})^2 \/ n$\n\nHorizontal axis represents time lag(previous time steps)  h","0a9b034c":"For trend analysis, we use smoothing techniques. In statistics smoothing a data set means to create an approximating function that attempts to capture important patterns in the data, while leaving out noise or other fine-scale structures\/rapid phenomena. In smoothing, the data points of a signal are modified so individual points (presumably because of noise) are reduced, and points that are lower than the adjacent points are increased leading to a smoother signal.We implement smoothing by taking moving averages. [Exponential moving average](https:\/\/www.investopedia.com\/terms\/e\/ema.asp) is frequently used to compute smoothed function.Here I used the rolling method which is inbuilt in pandas and frequently used for smoothing.","badffb11":"## Ploting monthly variation of dataset\nIt gives us idea about seasonal variation of our data set","c21fb4ee":"Cleaning data","7599a4f9":"# Time Series","1ece41a4":"Two most famous seasonability analysis algorithms are:-\n## [Using 1st discrete difference of object](https:\/\/machinelearningmastery.com\/difference-time-series-dataset-python\/)","07a0421c":"Changing data type of both the column\n* Assign int to ```monthly_ridership_data``` column\n* Assign datetime to ```month``` column"}}