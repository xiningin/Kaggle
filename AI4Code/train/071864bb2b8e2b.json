{"cell_type":{"64c2a73c":"code","55ce6950":"code","aa88b584":"code","6952f6bb":"code","4bc56d97":"code","b3460f44":"code","b612e197":"code","2b51210e":"code","23be045d":"code","d4a3726f":"code","dc23820a":"code","89a1a7d5":"code","5314cc81":"code","cc79c666":"code","1ba02cac":"code","cd994776":"code","b7bcc067":"code","777d2145":"code","da0562ff":"code","d0eb4be4":"code","1dc512bd":"code","6c1fecb2":"code","d4444f00":"code","19905054":"code","c1eb813d":"code","ccdecbd0":"code","fab0660b":"code","f118b71f":"code","45252669":"code","8ec90e17":"code","bceea4aa":"code","9adc025f":"code","107b6cb5":"code","0f408e60":"code","2ada4bc1":"code","df6dbd42":"code","d666c49c":"code","1764e314":"markdown"},"source":{"64c2a73c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55ce6950":"import tensorflow as tf\nfrom tensorflow import keras\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","aa88b584":"#train data\ntrain = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntrain.head()","6952f6bb":"#test data\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest.head()","4bc56d97":"#train shape\ntrain.shape","b3460f44":"#test shape\ntest.shape","b612e197":"x = train.drop(['label'],axis=1)\nX = np.array(x).reshape(len(train),28*28) \/ 255\nX.shape","2b51210e":"y = train['label']\ny.shape","23be045d":"x_test = np.array(test).reshape(len(test),28*28) \/ 255\nx_test.shape","d4a3726f":"from sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X,y,test_size=0.15,random_state=42)","dc23820a":"X_train.shape, y_train.shape","89a1a7d5":"X_val.shape, y_val.shape","5314cc81":"plt.imshow(X[2].reshape(28,28))","cc79c666":"y[2]","1ba02cac":"#Simple neural network with no hidden layers\nann =keras.Sequential([\n     keras.layers.Dense(10, input_shape=(784,),activation='sigmoid')\n])\nann.compile(\n             optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])\nann.fit(X_train,y_train,epochs=20)","cd994776":"ann.evaluate(X_val,y_val)","b7bcc067":"y_predict = ann.predict(X_val)\ny_predict","777d2145":"y_predicted_labels = [np.argmax(i) for i in y_predict]\ny_predicted_labels[0]","da0562ff":"cn = tf.math.confusion_matrix(y_val,y_predicted_labels)\nplt.figure(figsize=(8,6))\nsns.heatmap(cn,annot=True,fmt='d')\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","d0eb4be4":"#Using hidden layer\nann_hidden =keras.Sequential([\n    keras.layers.Dense(100, input_shape=(784,), activation='relu'),\n    keras.layers.Dense(10,activation='sigmoid')\n])\nann_hidden.compile(\n             optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])\nann_hidden.fit(X_train,y_train,epochs=20)","1dc512bd":"ann_hidden.evaluate(X_val,y_val)","6c1fecb2":"y_predict = ann_hidden.predict(X_val)\ny_predict","d4444f00":"y_predicted_labels = [np.argmax(i) for i in y_predict]\ny_predicted_labels[2]","19905054":"cn = tf.math.confusion_matrix(y_val,y_predicted_labels)\nplt.figure(figsize=(8,6))\nsns.heatmap(cn, annot=True, fmt='d')\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","c1eb813d":"#Flatten Layer\nann_flat = keras.Sequential([\n           keras.layers.Flatten(input_shape=(28,28)),\n           keras.layers.Dense(100, activation='relu'),\n           keras.layers.Dense(10, activation='sigmoid')\n])\nann_flat.compile(\n             optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])\nann_flat.fit(X_train,y_train,epochs=20)","ccdecbd0":"ann_flat.evaluate(X_val,y_val)","fab0660b":"y_predict = ann_hidden.predict(x_test)\ny_predict","f118b71f":"y_predicted_labels = [np.argmax(i) for i in y_predict]\ny_predicted_labels[2]","45252669":"#Using CNN\ncnn = keras.Sequential([\n    keras.layers.Conv2D(30, (3,3), activation='relu', input_shape=(28, 28, 1)),\n    keras.layers.MaxPooling2D((2,2)),\n \n    keras.layers.Flatten(),\n    keras.layers.Dense(100, activation='relu'),\n    keras.layers.Dense(10, activation='sigmoid')\n])","8ec90e17":"cnn.compile(\n             optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])","bceea4aa":"X_train = X_train.reshape(-1,28,28,1)\nX_train.shape","9adc025f":"x_test = x_test.reshape(-1,28,28,1)\nx_test.shape","107b6cb5":"cnn.fit(X_train, y_train, epochs=20)","0f408e60":"y_predict_final = cnn.predict(x_test)","2ada4bc1":"y_predicted_labels_final =[np.argmax(i) for i in y_predict_final]","df6dbd42":"image_id = range(1, y_predict_final.shape[0] + 1)\nsubmission_file = pd.DataFrame({'ImageId':image_id, 'Label':y_predicted_labels_final})\nsubmission_file.to_csv('digit_recognizer_submission_final_cnn_ann.csv',index=False)","d666c49c":"submission_file.head()","1764e314":"# Name: Md. Azharul Islam\n# ID: 181-35-2329"}}