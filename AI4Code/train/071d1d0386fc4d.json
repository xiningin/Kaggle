{"cell_type":{"2d3c6ea9":"code","009a289a":"code","e894c6c0":"code","42b6a339":"code","de542cfe":"code","6b78469e":"code","cdef735f":"code","9559f65e":"code","a25b6ce2":"code","b6333dba":"code","53d367af":"code","7757ef9f":"code","cdd4a5be":"code","7b35a8e8":"code","1931368f":"code","c1500814":"code","5069f58e":"code","7d83d4aa":"code","c2c3584f":"code","8a805c9d":"code","c2c26022":"code","ec33b95a":"code","354ff4e1":"code","bacc6372":"code","eaa3bedd":"code","fab4316c":"code","84ecc4b2":"code","9ab73852":"code","01926b56":"code","1d4dc94c":"code","56e5cc0d":"code","dcd54a04":"code","fbee5645":"code","3a943ac2":"code","9283c331":"code","54bdab8e":"code","472427cb":"code","5e7d3813":"code","e9b01a1e":"code","1e42e53f":"code","2f0b5969":"code","4b6ac21a":"code","d11980a6":"code","965f18c6":"code","27e31f8b":"code","17e67827":"code","19221aac":"code","5865f974":"code","9878bf94":"code","16fc7cfc":"code","1ffab993":"code","1ffe8d14":"code","700d3528":"code","bafc222a":"code","9ffee5d8":"code","9af046b9":"code","571f1ea3":"code","028b0e8d":"code","bc6421f9":"code","42c8224b":"code","9f451c7c":"code","d3d5c99c":"code","de422926":"code","665f9f51":"code","44650c2f":"code","1f8870c0":"code","c647e988":"code","cdccf381":"code","6bc31d8a":"code","1a234c91":"code","0ca80147":"code","2e7b69ac":"code","1a13dc00":"code","30733072":"code","19afa508":"code","07cdd7cc":"code","b1cd91f2":"code","8aa21185":"code","a5f71d03":"code","67798645":"code","99a9665a":"code","8e233383":"code","947194c3":"code","cc5324c3":"code","17e33ade":"code","8b001218":"code","ff1d1e4f":"code","0568b3b9":"code","a23d453a":"code","11d50b70":"code","d602cdcc":"code","f500aac8":"code","537dae6c":"code","0bd39360":"markdown","b14ed644":"markdown","00bf0f17":"markdown","26e61a77":"markdown","1b5250d3":"markdown","5570aeb4":"markdown","c890def3":"markdown","9266582c":"markdown","6b7cbc5d":"markdown","5e1f3db3":"markdown","1163cfa4":"markdown","a00eb52e":"markdown","13fbf8f5":"markdown","7c800536":"markdown","793d56be":"markdown","72d1eea8":"markdown","dc96290e":"markdown","8c080705":"markdown","a790c24b":"markdown","77af5a33":"markdown","eb101bda":"markdown","27d7a4be":"markdown","fb07d3e7":"markdown","67dd323f":"markdown","6c90979b":"markdown","61fa0cb9":"markdown","3e070627":"markdown","a1f3a9cb":"markdown","8103fc93":"markdown","472f5df4":"markdown","1a5294ff":"markdown","a763452d":"markdown","c668ff9e":"markdown","10cedda4":"markdown","cfcf0a93":"markdown","f40d4b7f":"markdown","62b05cb1":"markdown","75a1db4b":"markdown","50a99d10":"markdown","fa5d3821":"markdown","c2fc8c46":"markdown","47c7180a":"markdown","5bc0fbe8":"markdown","840be14a":"markdown","bc6847fa":"markdown","3eb4e1e5":"markdown","0f0c7926":"markdown","799a17e7":"markdown","37c1a13e":"markdown","26c27189":"markdown","7cab8789":"markdown","ca351f54":"markdown","214b96d8":"markdown","21b29c8e":"markdown"},"source":{"2d3c6ea9":"#importing basic libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sb\nimport matplotlib.pyplot as plt\n\n#importing sklearn libraries \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n\n#importing statsmodel api module\nimport statsmodels.api as sm\n\n#importing warnings\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\nsb.set_style(\"darkgrid\")\n","009a289a":"pd.options.display.max_columns = 40","e894c6c0":"#Reading dataset\ndf=pd.read_csv(\"..\/input\/car-price-prediction\/CarPrice_Assignment.csv\")","42b6a339":"df.info()","de542cfe":"df.head()","6b78469e":"#Checking the Null Values %age\nround(((df.isna().sum() \/ df.shape[0]) * 100),2)","cdef735f":"#Splitting the CarName COlumn\ndf.CarName=df.CarName.apply(lambda x:x.split(\" \")[0])","9559f65e":"#Checking the unique values\ndf.CarName.unique()","a25b6ce2":"df.CarName.replace({\"maxda\":\"mazda\",\"vokswagen\":\"volkswagen\",\"vw\":\"volkswagen\",\"Nissan\":\"nissan\",\"porcshce\":\"porsche\",\"toyouta\":\"toyota\"},inplace=True)","b6333dba":"df.doornumber.unique()","53d367af":"#mapping the door number from object to numerical\ndf.doornumber=df.doornumber.replace({\"two\":2,\"four\":4}).astype(np.int64)","7757ef9f":"df.drivewheel.unique()","cdd4a5be":"df.cylindernumber.unique()","7b35a8e8":"#mapping the object columns to numericals\ndf.cylindernumber=df.cylindernumber.map({\"four\":4,\"six\":6,\"five\":5,\"three\":3,\"twelve\":12,\"two\":2,\"eight\":8}).astype(np.int64)","1931368f":"df.cylindernumber.unique()","c1500814":"plt.figure(figsize=(20,10))\n\n#FUELTYPE\n\n# fueltye vs price distribution\nplt.subplot(2,3,1)\nplt.title(\"fueltype vs price \")\nsb.boxplot(df.fueltype,df.price)\n#count \nplt.subplot(2,3,4)\nplt.title(\"NO. of cars with specified fueltype \")\nsb.countplot(df.fueltype)\n\n#ASPIRATION\n\n#aspiration vs price disribution\nplt.subplot(2,3,2)\nplt.title(\"Aspiration used in the car vs price\")\nsb.boxplot(df.aspiration,df.price)\n#count\nplt.subplot(2,3,5)\nplt.title(\"Count of specific Aspiration type\")\nsb.countplot(df.aspiration)\n\n#DOORNUMBER\n\n#doornumber vs price distribution\nplt.subplot(2,3,3)\nplt.title(\"no. of doors vs price\")\nsb.boxplot(df.doornumber,df.price)\n#count\nplt.subplot(2,3,6)\nplt.title(\"Count of the cars with specific door number\")\nsb.countplot(df.doornumber)","5069f58e":"plt.figure(figsize=(20,4))\nplt.subplot(1,2,1)\nplt.title(\"Count of type of carbody bought\")\nsb.countplot(df.carbody)\nplt.subplot(1,2,2)\nplt.title(\"type of carbody vs price\")\nsb.boxplot(df.carbody,df.price)","7d83d4aa":"plt.figure(figsize=(15,4))\nplt.subplot(1,2,1)\nplt.title(\"No. of the cars bought vs engine-location\")\nsb.countplot(df.enginelocation)\nplt.subplot(1,2,2)\nplt.title(\"No of cars vs Engine type\")\nsb.countplot(df.enginetype)","c2c3584f":"plt.figure(figsize=(7,4))\nplt.title(\"No. of cyliner used in the cars\")\nsb.countplot(df.cylindernumber)","8a805c9d":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nplt.title(\"No of cars for particular fuelsystem\")\nsb.countplot(df.fuelsystem)\nplt.subplot(1,2,2)\nplt.title(\"fuelsystm vs car prices\")\nsb.barplot(df.fuelsystem,df.price)","c2c26022":"int_vars=df.select_dtypes(exclude=\"object\")","ec33b95a":"int_vars.head()","354ff4e1":"nvars=int_vars.drop(labels=[\"car_ID\",\"cylindernumber\",\"price\"],axis=1)","bacc6372":"cols=list(nvars.columns)","eaa3bedd":"#sb.pairplot(data=df,x_vars=cols,y_vars=df.price)\nsb.pairplot(data=df,x_vars=cols[:5],y_vars=\"price\")","fab4316c":"sb.pairplot(data=df,x_vars=cols[6:11],y_vars=\"price\")","84ecc4b2":"sb.pairplot(data=df,x_vars=cols[12:],y_vars=\"price\")","9ab73852":"plt.figure(figsize=(15,7))\nsb.heatmap(data=df.corr(),annot=True)","01926b56":"sb.distplot(df.groupby(by=\"CarName\")[\"price\"].mean().sort_values(ascending=False),bins=3)","1d4dc94c":"def car(x):\n    if x>5000 and x<=15000:\n        return \"Low\"\n    elif x>15000 and x<=25000:\n        return \"Medium\"\n    else :\n        return \"Hign\"","56e5cc0d":"df[\"car_cat\"]=df.price.apply(car)","dcd54a04":"df.head()","fbee5645":"#GETTING DUMMIES\ndummy_vars=[\"fueltype\",\"aspiration\",\"carbody\",\"drivewheel\",\"enginelocation\",\"enginetype\",\"fuelsystem\",\"car_cat\"]\ndummies=pd.get_dummies(data=df[dummy_vars],drop_first=True)","3a943ac2":"#Dropiing the columns that are of no use to us\ndf.drop(labels=[\"car_ID\",\"CarName\",\"fueltype\",\"aspiration\",\"carbody\",\"drivewheel\",\"enginelocation\",\"enginetype\",\"fuelsystem\",\"car_cat\"],axis=1,inplace=True)","9283c331":"final_df=pd.concat([df,dummies],axis=1)","54bdab8e":"final_df.head()","472427cb":"#SPLITTING THE DATASET\n\ndf_train,df_test=train_test_split(final_df,test_size=0.3,random_state=42)","5e7d3813":"#SCALING THE FEATUREs\nscale=MinMaxScaler()","e9b01a1e":"df_train.columns","1e42e53f":"cols=['symboling', 'doornumber', 'wheelbase', 'carlength', 'carwidth',\n       'carheight', 'curbweight', 'cylindernumber', 'enginesize', 'boreratio',\n       'stroke', 'compressionratio', 'horsepower', 'peakrpm', 'citympg',\n       'highwaympg', 'price', 'fueltype_gas', 'aspiration_turbo',\n       'carbody_hardtop', 'carbody_hatchback', 'carbody_sedan',\n       'carbody_wagon', 'drivewheel_fwd', 'drivewheel_rwd',\n       'enginelocation_rear', 'enginetype_dohcv', 'enginetype_l',\n       'enginetype_ohc', 'enginetype_ohcf', 'enginetype_ohcv',\n       'enginetype_rotor', 'fuelsystem_2bbl', 'fuelsystem_4bbl',\n       'fuelsystem_idi', 'fuelsystem_mfi', 'fuelsystem_mpfi',\n       'fuelsystem_spdi', 'fuelsystem_spfi', 'car_cat_Low', 'car_cat_Medium']","2f0b5969":"df_train[cols]=scale.fit_transform(df_train[cols])","4b6ac21a":"y_train=df_train.pop(\"price\")\nX_train=df_train","d11980a6":"X_train.shape","965f18c6":"y_train.shape","27e31f8b":"lm=LinearRegression()\nlm.fit(X_train,y_train)","17e67827":"rfe=RFE(lm,10)\nrfe=rfe.fit(X_train,y_train)","19221aac":"rfe.ranking_","5865f974":"list(zip(X_train.columns,rfe.support_,rfe.ranking_))","9878bf94":"final_cols=X_train.columns[rfe.support_].to_list()","16fc7cfc":"#Checking the final columns \nfinal_cols","1ffab993":"X_train.columns[~rfe.support_]","1ffe8d14":"################################### ITERATION 1 ############################################","700d3528":"X_train_rfe=X_train[final_cols]","bafc222a":"#Making the model using statsmodel (sm)\nX_train_rfe=sm.add_constant(X_train_rfe)\nlm = sm.OLS(y_train,X_train_rfe).fit()\nlm.summary()","9ffee5d8":"from statsmodels.stats.outliers_influence import variance_inflation_factor","9af046b9":"vif = pd.DataFrame()\nX=X_train_rfe.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","571f1ea3":"X_train_2=X_train_rfe.drop([\"citympg\"],axis=1)","028b0e8d":"###################################     ITERATION 2   ###########################","bc6421f9":"X_train_2=sm.add_constant(X_train_2)\nlm2 = sm.OLS(y_train,X_train_2).fit()\nlm2.summary()","42c8224b":"vif = pd.DataFrame()\nX=X_train_2.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","9f451c7c":"X_train_3=X_train_2.drop([\"carbody_wagon\"],axis=1)","d3d5c99c":"##################################      TRERATION 3    #####################","de422926":"X_train_3=sm.add_constant(X_train_3)\nlm3 = sm.OLS(y_train,X_train_3).fit()\nlm3.summary()","665f9f51":"vif = pd.DataFrame()\nX=X_train_3.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","44650c2f":"X_train_4=X_train_3.drop([\"highwaympg\"],axis=1)","1f8870c0":"#######################################       ITERATION 4    ###################","c647e988":"X_train_4=sm.add_constant(X_train_4)\nlm4 = sm.OLS(y_train,X_train_4).fit()\nlm4.summary()","cdccf381":"vif = pd.DataFrame()\nX=X_train_4.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","6bc31d8a":"############################## ITERATION 5 ##############################","1a234c91":"X_train_5=X_train_4.drop([\"compressionratio\"],axis=1)","0ca80147":"X_train_5=sm.add_constant(X_train_5)\nlm5 = sm.OLS(y_train,X_train_5).fit()\nlm5.summary()","2e7b69ac":"vif = pd.DataFrame()\nX=X_train_5.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","1a13dc00":"##################################  iTERATION 6 ##############################","30733072":"X_train_6=X_train_5.drop([\"carwidth\"],axis=1)","19afa508":"X_train_6=sm.add_constant(X_train_6)\nlm6 = sm.OLS(y_train,X_train_6).fit()\nlm6.summary()","07cdd7cc":"vif = pd.DataFrame()\nX=X_train_6.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","b1cd91f2":"sb.heatmap(X_train_6.corr(),annot=True)","8aa21185":"###########################################################################################################","a5f71d03":"X_train_7=X_train_6.drop([\"car_cat_Medium\"],axis=1)","67798645":"X_train_7=sm.add_constant(X_train_7)\nlm7 = sm.OLS(y_train,X_train_7).fit()\nlm7.summary()","99a9665a":"vif = pd.DataFrame()\nX=X_train_7.drop(\"const\",axis=1)\nvif['featues'] = X.columns\nvif['VIF']=[variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'],2)\nvif=vif.sort_values(by='VIF',ascending=False)\nvif","8e233383":"#preidting the values\ny_train_pred=lm7.predict(X_train_7)","947194c3":"#Finding residuals\nres = y_train - y_train_pred\nplt.axvline(x=0,color=\"red\")\n\n#distribution of error terms\nplt.xlabel(\"errors\",fontsize=15)\nsb.distplot(res,rug=True,color='red')\nr2_score (y_train, y_train_pred)","cc5324c3":"#Taking the columns\nprint(X_train_7.columns)\nvar=['price', 'enginesize', 'carbody_hardtop', 'fuelsystem_4bbl',\n       'car_cat_Low']","17e33ade":"df_test[cols]=scale.transform(df_test[cols])","8b001218":"df_test_var=df_test[var]","ff1d1e4f":"df_test_var=sm.add_constant(df_test_var)","0568b3b9":"y_test=df_test_var.pop(\"price\")\nX_test_var=df_test_var","a23d453a":"X_test_var.head()","11d50b70":"y_test_pred=lm7.predict(X_test_var)","d602cdcc":"res2 = y_test-y_test_pred\nplt.axvline(x=0,color=\"blue\")\nsb.distplot(res2,rug=True)","f500aac8":"#R2 score of the test data\nr2_score (y_test, y_test_pred)","537dae6c":"#ploting the y_test and Y-pred values\nplt.xlabel(\"y_test\",fontsize=15)\nplt.ylabel(\"y_pred\",fontsize=15)\nplt.scatter(y_test_pred,y_test)","0bd39360":"### Checking the cylindernumber column","b14ed644":"# Problem Statement \nA Chinese automobile company Geely Auto aspires to enter the US market by setting up their manufacturing unit there and producing cars locally to give competition to their US and European counterparts. \n \nThey have contracted an automobile consulting company to understand the factors on which the pricing of cars depends. Specifically, they want to understand the factors affecting the pricing of cars in the American market, since those may be very different from the Chinese market. The company wants to know: \n\n\uf0b7 Which variables are significant in predicting the price of a car\n\n\uf0b7 How well those variables describe the price of a car \n\nBased on various market surveys, the consulting firm has gathered a large dataset of different types of cars across the American market. ","00bf0f17":"#### car_cat_low and car_cat_medium are having a high co relation , by removing the car_cat_low our R2 score drops significantly so try removing the car_cat_medium and checking the R2 score and p values","26e61a77":"#### VIF , P-values and R2 score doesnot drop significatly so we can say that this is our final model built and we will use the above columns for further analysis","1b5250d3":"#### From above graph we have seen that mpfi have a bit high price and its count is max so we can also opt for ```2bbi``` as fuelsystem in tems of price and its usage","5570aeb4":"#### Now checking which fuelsystem is used the most and also checking its distribution","c890def3":"After our analysis we have concluded these variables can describe the price of the cars upto a good extent\n\nenginesize                                                                                                                     \ncar_cat_Low                                                                                                                     \ncarbody_hardtop                                                                                                                 \nfuelsystem_4bbl\n","9266582c":"#### Cheking which enginelocation and enginetype is more preferred","6b7cbc5d":"#### Now Analysing the carbody with price","5e1f3db3":"### for training","1163cfa4":"#### Removing the ```citympg``` columns as its p-value is significantly high  and reiterating the model using the remaining columns","a00eb52e":"#### Using the Recursive Feature elimination Technique fior removing the unnecessary columns","13fbf8f5":"We have seen that our p values and vif are in our required limits , so checking further coorelation by using the heatmap","7c800536":"Predicting the values","793d56be":"### Checking the drivewheel column","72d1eea8":"We have seen that few of the CarName are misspelled, so correcting them","dc96290e":"### for testing data","8c080705":"# CREATING MODEL","a790c24b":"Scaling the test data","77af5a33":"### creating dummy variables","eb101bda":"The training error (residuals) are not perfectly but almost reside near 0 , so we can say that the distribution is almost close to a normal distribution","27d7a4be":"We have seen that diesel cars have a significantly higher price but they have very few numbers                                 \nTurbo aspiration have a higher price bue usually implemented in less cars                                                       \nDoor numbers doesnot to be vary in price but 4 Doors cars are more bought","fb07d3e7":"This is the summary of statsmodels using ols on the RFE selected columns","67dd323f":"Reiterating the model by removing the ```carwidth``` column as it have a high vif value","6c90979b":"### Making the correlation map and seeing which variables are most correlated","61fa0cb9":"#### Now Checking the The price distribution of ```fueltype``` ,```aspiration``` and ```doornumber``` and their counts","3e070627":"### Scaling the dataset","a1f3a9cb":"## Model Evaluation","8103fc93":"Checking the distribution of test error values","472f5df4":"### Now analysisng the numericals columns","1a5294ff":"# Importing libraries","a763452d":"### plotting a pairplot for the numerical columns vs price column","c668ff9e":"# Final Inferences","10cedda4":"\n#### Cars having 4 cylinders are bought most","cfcf0a93":"### Building the model using statsmodels to get a statiscally significant model","f40d4b7f":"Again we have seen the same variation that high price carbody type is usually bought less ","62b05cb1":"making dataframe according to the model created","75a1db4b":"### Checking the doornumber column","50a99d10":"Now checking the Variance Inflation factor (VIF) of the columns","fa5d3821":"## Building the Model","c2fc8c46":"### Making the target variable and predictor variable","47c7180a":"#### There is a huge amount of cars bougth whose Engine Location is ```FRONT``` and Engine Type is ```OHC```","5bc0fbe8":"# Data Visualising And Finding Insights  (EDA's)","840be14a":"### Checking the CarName column\n","bc6847fa":"### Train_test_split","3eb4e1e5":"# Data Preparation \nThere is a variable named CarName which is comprised of two parts - the first word is the name of 'car company' and the second is the 'car model'. For example, chevrolet impala has 'chevrolet' as the car company name and 'impala' as the car model name. You need to consider only company name as the independent variable for model building","0f0c7926":"First plotting the categorical columns","799a17e7":"Reiterating the model by removing the ```highwaympg``` column as it have a high vif value","37c1a13e":"Here we have seen the clear distribution of price according to car so we can make a new derived matrix called car_category which can have the category of the car according the price fo the car.","26c27189":"y_test vs y_pred a is observed to have quite a linear variation, so our overall model is quite good","7cab8789":"### Before dropping the CarName column lets analysze its distributionin acccordance with price","ca351f54":"Removing the ```carbody_wagon``` column due to its p value(> 0.05)","214b96d8":"# Residual Analysis","21b29c8e":"Removing the ```compressionratio``` column due to its p value(> 0.05) and reiterating using the remaining columns"}}