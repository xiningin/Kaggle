{"cell_type":{"fa7705b1":"code","5dbdfb65":"code","4d9666ab":"code","f264a5c9":"code","8cca7a10":"code","33804993":"code","94cbc3c8":"code","57e470fb":"code","6565b102":"code","572b9f07":"code","6d4a1672":"code","35493ccc":"code","d5b55f04":"code","a0dee379":"code","8437e640":"code","21511c9a":"code","e90c8300":"code","0b12e026":"code","43130236":"code","7c6db422":"code","39c4f4d5":"markdown","4ba2160b":"markdown","344c90b1":"markdown","a1774937":"markdown","a36a23ca":"markdown","7e06fdff":"markdown","6a8781f7":"markdown"},"source":{"fa7705b1":"import pandas as pd\nimport numpy as np\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime","5dbdfb65":"train = pd.read_csv('..\/input\/data-science-winter-osaka2\/train.csv')\ntest = pd.read_csv('..\/input\/data-science-winter-osaka2\/test.csv')\n\ntrain[\"kind\"]=\"train\"\ntest[\"kind\"]=\"test\"\n\ntrain[\"user_reviews_int\"] = train[\"user_reviews\"].map({'c0':0, 'c1':1, 'c2':2})\n\ndf_merge = pd.concat([train, test], axis=0).reset_index()#train\u3068test\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u7d71\u5408\nprint(df_merge.shape)\nprint(df_merge[\"name\"].unique().shape)#\u30bd\u30d5\u30c8\u540d\u306f\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\ndf_merge.head()","4d9666ab":"def eval_data(row):\n    if row == row:\n        return eval(row)\n    else:\n        return np.nan\n    \nfor column in ['popular_tags', 'categories', 'minimum_requirements', 'recommended_requirements']:\n    df_merge[column] = df_merge[column].apply(eval_data)","f264a5c9":"from nltk import stem\n\nstemmer = stem.PorterStemmer()\ntag_unique = []\n\ngame_list = []\ntag_list = []\n\nfor title_and_tag in tqdm(df_merge.loc[:, [\"name\",\"popular_tags\"]].iterrows()):\n    game_title = title_and_tag[1][\"name\"]\n    try:\n        for tag in title_and_tag[1][\"popular_tags\"]:\n            #\u3053\u306e\u7b87\u6240\u3067\u3001\u5404tag\u306e\u8868\u8a18\u63fa\u308c\u3092\u5438\u53ce\u3057\u307e\u3059#######################\n            tag_stemed = stemmer.stem(tag)#\u8a9e\u5e79\u51e6\u7406\u3092\u5b9f\u65bd\n            tag_stemed = ''.join(char for char in tag_stemed if char.isalnum())#\u5909\u306a\u8a18\u53f7\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u6d88\u53bb\n            tag_stemed = ''.join(char for char in tag_stemed if not char.isdigit())#\u6570\u5b57\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u6d88\u53bb\n            #######################################################\n            \n            game_list.append(game_title)\n            tag_list.append(tag_stemed)\n            \n            if tag_stemed not in tag_unique:\n                tag_unique.append(tag_stemed)#\u65b0\u7a2e\u306etag\u306a\u3089\u8ffd\u52a0\n    \n    except TypeError:\n        #tag\u304cnan\u306e\u5834\u5408\u306fcontinue\n        continue","8cca7a10":"#\u30c7\u30fc\u30bf\u3092long_format\u3078\u5909\u63db\u3057\u307e\u3059\u3002\ndf_tag_wide = pd.DataFrame([game_list, tag_list]).T\ndf_tag_wide.columns = [\"name\", \"tag\"]\ndf_tag_wide.head()#long_format\u306e\u78ba\u8a8d","33804993":"#long-format\u3092one-hot\u306e\u5f62\u306b\u6574\u5f62\u3059\u308b\n#\u7b2c\u4e00\u306e\u76ee\u7684\u3067\u3042\u308bone_hot\u8868\u73fe\u3078\u306e\u6574\u5f62\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\ndf_one_hot = pd.DataFrame(index=df_merge[\"name\"], columns=tag_unique)\ndf_one_hot.iloc[:,:]=int(0)#\u5168\u3066\u306e\u8981\u7d20\u30920\u306b\u3059\u308b\n\n#\u30b9\u30fc\u30d1\u30fc\u529b\u6280\u30bf\u30a4\u30e0\uff08\u3044\u3044\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u306e\u65b9\u306f\u6559\u3048\u3066\u304f\u3060\u3055\u3044...\uff09\nfor row in tqdm(df_tag_wide.iterrows()):\n    game_title = row[1][\"name\"]\n    tgt_tag = row[1][\"tag\"]\n    df_one_hot.at[game_title, tgt_tag]=int(1)\nprint(df_one_hot.shape)\ndf_one_hot.to_csv(\"popular_tags_oh.csv\", index=True)#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u3048\u3066\u3001\u5410\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndf_one_hot.head()","94cbc3c8":"#\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\n#\u4e3b\u6210\u5206\u7a7a\u9593\u3078\u306e\u5c04\u5f71\u884c\u5217\u306e\u5b66\u7fd2\u306b\u306f\u3001\u4e00\u5fdc\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u307f\u3092\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n#(\u30b3\u30f3\u30da\u3067\u306f\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059\u304c...)\ndf_one_hot[\"user_reviews_int\"] = np.array(df_merge[\"user_reviews_int\"])\ndf_one_hot_train = df_one_hot[pd.isna(df_one_hot[\"user_reviews_int\"])==False]\ndf_one_hot_test = df_one_hot[pd.isna(df_one_hot[\"user_reviews_int\"])==True]\nprint(\"df_one_hot.shape\", df_one_hot.shape)#\u5143\u306eone_hot\nprint(\"df_one_hot_train.shape\", df_one_hot_train.shape)#\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u307f\nprint(\"df_one_hot_test.shape\", df_one_hot_test.shape)#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u307f","57e470fb":"#\u307e\u305a\u306f\u5b9a\u756aPCA\u304b\u3089\nimport sklearn \nfrom sklearn.decomposition import PCA \npca = PCA()\npca.fit(df_one_hot_train.iloc[:, :-1])#\u6700\u5f8c\u306e\u5217\u306b\u6b63\u89e3\u30e9\u30d9\u30eb\u3092\u3064\u3051\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u6700\u5f8c\u306e\u5217\u306f\u4f7f\u308f\u306a\u3044\n# \u30c7\u30fc\u30bf\u3092\u4e3b\u6210\u5206\u7a7a\u9593\u306b\u5199\u50cf\nfeature_train = pca.transform(df_one_hot_train.iloc[:, :-1])\nfeature_test = pca.transform(df_one_hot_test.iloc[:, :-1])","6565b102":"#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u616e\u3057\u3066\u3001csv\u3067\u4fdd\u5b58\ndf_pca_featrure = pd.DataFrame(np.concatenate([feature_train, feature_test]), index=df_merge[\"name\"])\ndf_pca_featrure.to_csv(\"pca_featrure.csv\", index=True)#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u3048\u3066\u3001\u5410\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndf_pca_featrure[\"user_reviews_int\"] = np.array(df_merge[\"user_reviews_int\"])\ndf_pca_featrure.head()","572b9f07":"df_pca_featrure_train = df_pca_featrure[pd.isna(df_pca_featrure[\"user_reviews_int\"])==False]\n#\u3000\u7b2c\u4e00\u4e3b\u6210\u5206\u8ef8(x\u8ef8)\u3060\u3051\u3067\u3082\u50be\u5411\u304c\u3042\u308a\u305d\u3046\u3002\nplt.figure(figsize=(8, 6))\n\nplt.scatter(df_pca_featrure_train[0],\n            df_pca_featrure_train[1],\n            c=df_pca_featrure_train[\"user_reviews_int\"],\n            alpha=0.8,s=3)\nplt.grid()\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.colorbar()\nplt.show()","6d4a1672":"#\u30e9\u30d9\u30eb\u306e\u3064\u3044\u305f\u30c7\u30fc\u30bf\u306e\u307f\ndf_pca_featrure_train_labeled = df_pca_featrure_train[df_pca_featrure_train[\"user_reviews_int\"]!=2]\n\nplt.figure(figsize=(8, 6))\n\nplt.scatter(df_pca_featrure_train_labeled[0],\n            df_pca_featrure_train_labeled[1],\n            c=df_pca_featrure_train_labeled[\"user_reviews_int\"],\n            alpha=0.8,s=3)\nplt.grid()\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.colorbar()\nplt.show()","35493ccc":"#(\u3044\u304f\u3089\u5f8c\u6bb5\u3067\u7a81\u3063\u8fbc\u3080\u5206\u985e\u6a5f\u304cgradient boost\u3068\u3044\u3048\u3069\u3082\u3001)\u5f92\u306b\u7279\u5fb4\u91cf\u6570\u3092\u5897\u3084\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u3001\u4f55\u6b21\u5143\u307e\u3067\u5165\u308c\u308b\u304b\u306f\u60a9\u307e\u3057\u3044\u3067\u3059\u3001\u3001\u3001\n#\u305d\u3053\u3067\u3001\u7d2f\u7a4d\u5bc4\u4e0e\u7387\u3092\u78ba\u8a8d\u3057\u3066\u304d\u307e\u3059\u3002\nevr = pca.explained_variance_ratio_\n\n# \u7d2f\u7a4d\u5bc4\u4e0e\u7387\u3092\u78ba\u8a8d\u3059\u308b\nplt.plot([0] + list(np.cumsum(evr)), \"-o\")\n\nplt.xlabel(\"pc num\")\nplt.ylabel(\"cumulative contribution ratio\")\n\nplt.grid()\nplt.show()","d5b55f04":"#\u7d2f\u7a4d\u5bc4\u4e0e\u7387\u304c\u6240\u5b9a\u306e\u5272\u5408\u3092\u8d85\u3048\u308b\u305f\u3081\u306e\u4e3b\u6210\u5206\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n#\u6700\u7d42\u30e2\u30c7\u30eb\u306b\u7a81\u3063\u8fbc\u3080\u4e3b\u6210\u5206\u6570\u306f\u3001\u30e2\u30c7\u30ea\u30f3\u30b0\u306e\u65b9\u91dd\u6b21\u7b2c\u3067\u3059\u306d\u3002\u3002\u3002\nprint(\"\u7d2f\u7a4d\u5bc4\u4e0e\u738730% :\", len(np.cumsum(evr)[[np.cumsum(evr)<0.3][0]==True]))\nprint(\"\u7d2f\u7a4d\u5bc4\u4e0e\u738740% :\", len(np.cumsum(evr)[[np.cumsum(evr)<0.4][0]==True]))\nprint(\"\u7d2f\u7a4d\u5bc4\u4e0e\u738750% :\", len(np.cumsum(evr)[[np.cumsum(evr)<0.5][0]==True]))\nprint(\"\u7d2f\u7a4d\u5bc4\u4e0e\u738760% :\", len(np.cumsum(evr)[[np.cumsum(evr)<0.6][0]==True]))\nprint(\"\u7d2f\u7a4d\u5bc4\u4e0e\u738780% :\", len(np.cumsum(evr)[[np.cumsum(evr)<0.8][0]==True]))\n","a0dee379":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nlda = LinearDiscriminantAnalysis(n_components=2)\n\nlda.fit(X=df_one_hot_train.iloc[:, :-1], \n        y=df_one_hot_train.iloc[:, -1])\n\n# \u30c7\u30fc\u30bf\u3092\u4e3b\u6210\u5206\u7a7a\u9593\u306b\u5199\u50cf\nlda_train = lda.transform(df_one_hot_train.iloc[:, :-1])\nlda_test = lda.transform(df_one_hot_test.iloc[:, :-1])","8437e640":"#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u616e\u3057\u3066\u3001csv\u3067\u4fdd\u5b58\ndf_lda_featrure = pd.DataFrame(np.concatenate([lda_train, lda_test]), index=df_merge[\"name\"])\ndf_lda_featrure.to_csv(\"lda_featrure.csv\", index=True)#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u3048\u3066\u3001\u5410\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndf_lda_featrure[\"user_reviews_int\"] = np.array(df_merge[\"user_reviews_int\"])\ndf_lda_featrure.head()","21511c9a":"df_lda_featrure_train = df_lda_featrure[pd.isna(df_lda_featrure[\"user_reviews_int\"])==False]\n#\u3000\u60aa\u304f\u306f\u306a\u3044\u3001\u304b\u306a\uff1f\uff1f\uff1f\nplt.figure(figsize=(8, 6))\n\nplt.scatter(df_lda_featrure[0],\n            df_lda_featrure[1],\n            c=df_lda_featrure[\"user_reviews_int\"],\n            alpha=0.8,s=3)\nplt.grid()\nplt.xlabel(\"LDA1\")\nplt.ylabel(\"LDA2\")\nplt.colorbar()\nplt.show()","e90c8300":"#\u30e9\u30d9\u30eb\u306e\u3064\u3044\u305f\u30c7\u30fc\u30bf\u306e\u307f\ndf_lda_featrure_train_labeled = df_lda_featrure_train[df_lda_featrure_train[\"user_reviews_int\"]!=2]\n\nplt.figure(figsize=(8, 6))\n\nplt.scatter(df_lda_featrure_train_labeled[0],\n            df_lda_featrure_train_labeled[1],\n            c=df_lda_featrure_train_labeled[\"user_reviews_int\"],\n            alpha=0.8,s=3)\nplt.grid()\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.colorbar()\nplt.show()","0b12e026":"import umap\nmapper = umap.UMAP(random_state=0)\nmapper.fit(df_one_hot_train.iloc[:, :-1])\numap_train = mapper.transform(df_one_hot_train.iloc[:, :-1])\numap_test = mapper.transform(df_one_hot_test.iloc[:, :-1])","43130236":"#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u616e\u3057\u3066\u3001csv\u3067\u4fdd\u5b58\ndf_umap_featrure = pd.DataFrame(np.concatenate([umap_train, umap_test]), index=df_merge[\"name\"])\ndf_umap_featrure.to_csv(\"umap_featrure.csv\", index=True)#\u4eca\u5f8c\u306e\u5229\u7528\u3082\u8003\u3048\u3066\u3001\u5410\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndf_umap_featrure[\"user_reviews_int\"] = np.array(df_merge[\"user_reviews_int\"])\ndf_umap_featrure.head()","7c6db422":"df_umap_featrure_train = df_umap_featrure[pd.isna(df_umap_featrure[\"user_reviews_int\"])==False]\n#\u3000\uff08\u7b2c\u4e8c\u6210\u5206\u307e\u3067\u3067\u306f\u3001PCA\u306e\u304c\u826f\u3055\u3052\u3067\u3059\u306d\u3002\u3002\u3002\uff09\nplt.figure(figsize=(8, 6))\n\nplt.scatter(df_umap_featrure_train[0],\n            df_umap_featrure_train[1],\n            c=df_umap_featrure_train[\"user_reviews_int\"],\n            alpha=0.8,s=3)\nplt.grid()\nplt.xlabel(\"umap_component_1\")\nplt.ylabel(\"umap_component_2\")\nplt.colorbar()\nplt.show()","39c4f4d5":"## \u4e3b\u6210\u5206\u5206\u6790","4ba2160b":"## Umap(\u304a\u307e\u3051)","344c90b1":"**popular_tags**\u306f\u305d\u306e\u307e\u307e\u3067\u306f\u5909\u6570\u3068\u3057\u3066\u6271\u3044\u306b\u304f\u305d\u3046\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u3001\u30e6\u30cb\u30fc\u30af\u306avalue\u304c\u591a\u3059\u304e\u308b\u3053\u3068\u3082\u3001\u305d\u306e\u4e00\u56e0\u3067\u3059\u3002\n- \u6a19\u8a18\u63fa\u308c\u304c\u5927\u304d\u3044\u3053\u3068\n- list\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\n\n\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u65b9\u91dd\u3067\u7279\u5fb4\u91cf\u3092\u4f5c\u6210\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n1. tag\u306e\u5404\u30ef\u30fc\u30c9\u3092stamming(\u5927\u6587\u5b57\u2192\u5c0f\u6587\u5b57, \u6d3b\u7528\u5f62\u2192\u539f\u5f62\u3001\u306a\u3069)\n1. \u7279\u6b8a\u8a18\u53f7\u3084\u6570\u5b57\u3092\u524a\u9664\n1. \u30c7\u30fc\u30bf\u3092long_format\u3078\u5909\u63db\n1. tag\u306eone_hot_table\u3078\u5909\u63db\n","a1774937":"# \u6b21\u5143\u306e\u5727\u7e2e\u3092\u5b9f\u65bd\u3059\u308b\n\n- \u8868\u8a18\u63fa\u308c\u306b\u5bfe\u51e6\u3059\u308b\u3053\u3068\u3067\u3001\u6b21\u5143\u3092644\u307e\u3067\u4e0b\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n- \u3057\u304b\u3057\u3001\u307e\u3060\u7279\u5fb4\u91cf\u3068\u3057\u3066\u30e2\u30c7\u30eb\u306b\u5165\u308c\u308b\u306b\u306f\u9ad8\u6b21\u5143\u3067\u3059\u3057\u3001\u30c7\u30fc\u30bf\u304c\u30b9\u30d1\u30fc\u30b9\u306a\u306e\u3082\u6c17\u304c\u304b\u308a\u3067\u3059\u3002\n- \u3053\u306e\u307e\u307e\u3067\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u306e\u7279\u5fb4\u91cf\u3068\u3057\u3066\u306f\u30b9\u30d1\u30fc\u30b9\u3059\u304e\u308b\u306e\u3067\u3001\u6b21\u5143\u524a\u6e1b\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002","a36a23ca":"# \u4eca\u56de\u306f\u300cpopular_tags\u300d\u3092EDA\u3057\u3066\u3001\u7279\u5fb4\u91cf\u306e\u4f5c\u6210\u3092\u8a66\u307f\u307e\u3059\u3002\n\n\u5b9f\u65bd\u4e8b\u9805\u306f\u4e8c\u3064\u3067\u3059\u3002\n\n- popular_tags\u3092one_hot\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\n- \u6b21\u5143\u524a\u6e1b\u3057\u3066\u3001\u30e2\u30c7\u30eb\u306b\u6295\u5165\u3059\u308b\u7279\u5fb4\u91cf\u3092\u4f5c\u308b\n    - PCA(\u4e3b\u6210\u5206\u5206\u6790)\n    - LDA(\u7dda\u5f62\u5224\u5225\u5206\u6790)\n    - Umap(\u304a\u307e\u3051)","7e06fdff":"# popular_tags\u3092one_hot\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b","6a8781f7":"## \u7dda\u5f62\u5224\u5225\u5206\u6790"}}