{"cell_type":{"672fa0d0":"code","35511575":"code","5d054a29":"code","34be0b56":"code","0108df52":"code","c17a589a":"code","1f7c479d":"code","7493c3bb":"code","639d3ed7":"code","4e605044":"code","a4710b5a":"code","cee50090":"code","a42b5a39":"code","1fd66c0a":"code","136e57ce":"code","2e4c0bb9":"code","a73e5e77":"code","c2781e96":"code","027ac145":"code","50ddf230":"code","cc66d0db":"code","863ac503":"code","0b13fdf3":"code","85527f78":"code","21e295a8":"code","e9a66533":"code","78611560":"code","328d7f52":"markdown","03924c5a":"markdown","06cde2f5":"markdown","77b2a44d":"markdown","c5372108":"markdown","3c289fc7":"markdown","7bc3d2b9":"markdown","e7198180":"markdown","04a6c5e6":"markdown","f3077493":"markdown","daffbe97":"markdown","9a771f40":"markdown","966bd60f":"markdown","d76774c5":"markdown","52bd76d6":"markdown","7301d2ae":"markdown","0b5a983a":"markdown","e2fd6a0e":"markdown","99f536e6":"markdown","f0b39368":"markdown"},"source":{"672fa0d0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n#import os\n#print(os.listdir(\"..\/input\"))","35511575":"data = pd.read_csv('..\/input\/911.csv')\ndata.head()","5d054a29":"data.info()","34be0b56":"data['zip'].value_counts().head()","0108df52":"data['twp'].value_counts().head()","c17a589a":"data['title'].nunique()","1f7c479d":"data['Reason'] = data['title'].apply(lambda title: title.split(':')[0])\ndata['Reason'].head()","7493c3bb":"data['Reason'].value_counts()","639d3ed7":"sns.countplot(x='Reason',data=data)","4e605044":"type(data['timeStamp'].iloc[0])","a4710b5a":"data['timeStamp'] = pd.to_datetime(data['timeStamp'])\ntype(data['timeStamp'].iloc[0])","cee50090":"data['Hour'] = data['timeStamp'].apply(lambda time: time.hour)\ndata['Month'] = data['timeStamp'].apply(lambda time: time.month)\ndata['Day of Week'] = data['timeStamp'].apply(lambda time: time.dayofweek)\ndata.head()","a42b5a39":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ndata['Day of Week'] = data['Day of Week'].map(dmap)\ndata.head()","1fd66c0a":"sns.countplot(x='Day of Week', data =data, hue='Reason')\n# Relocation of the legends outside\nplt.legend(bbox_to_anchor=(1.05,1),loc=2,borderaxespad=0.)","136e57ce":"sns.countplot(x='Month', data =data, hue='Reason')\n# Relocation of the legends outside\nplt.legend(bbox_to_anchor=(1.05,1),loc=2,borderaxespad=0.)","2e4c0bb9":"data['Date'] = data['timeStamp'].apply(lambda t: t.date())\ndata.head()","a73e5e77":"data.groupby('Date').count().head()","c2781e96":"data.groupby('Date').count()['lat'].plot()\nplt.tight_layout()","027ac145":"data[data['Reason']=='Traffic'].groupby('Date').count()['lat'].plot()\nplt.title(\"Traffic\")\nplt.tight_layout()","50ddf230":"data[data['Reason']=='Fire'].groupby('Date').count()['lat'].plot()\nplt.title(\"Fire\")\nplt.tight_layout()","cc66d0db":"data[data['Reason']=='EMS'].groupby('Date').count()['lat'].plot()\nplt.title(\"EMS\")\nplt.tight_layout()","863ac503":"dayHour = data.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head(2)","0b13fdf3":"sns.heatmap(dayHour,cmap='coolwarm')","85527f78":"sns.clustermap(dayHour,cmap='coolwarm')","21e295a8":"dayMonth = data.groupby(by=['Day of Week','Month']).count()['Reason'].unstack()\ndayMonth.head()","e9a66533":"sns.heatmap(dayMonth,cmap='coolwarm')","78611560":"sns.clustermap(dayMonth,cmap='coolwarm')","328d7f52":"Now use seaborn to create a countplot of 911 calls by Reason.","03924c5a":"Now recreate this plot but create 3 separate plots with each plot representing a Reason for the 911 call","06cde2f5":"\nWe can grab specific attributes from a Datetime object like -\n\ntime = data['timeStamp'].iloc[0]\ntime.hour\nUse .apply() Method, to create 3 new columns called Hour, Month, and Day of Week. You will create these columns based off the timeStamp column.","77b2a44d":"Use pd.to_datetime to convert the column from strings to DateTime objects.","c5372108":"Let's try to create heatmaps with seaborn and our data. But, first we will need to restructure the dataframe so that the columns become the Hours and the Index becomes the Day of the Week. There are lots of ways to do this, but let's try to combine groupby with an unstack method.","3c289fc7":"Now repeat these same plots and operations, for a DataFrame that shows the Month as the column.","7bc3d2b9":"What is the data type of the objects in the timeStamp column?","e7198180":"Now create a clustermap using this DataFrame.","04a6c5e6":"Create a new column called 'Date' that contains the date from the timeStamp column. You'll need to use apply along with the .date() method.","f3077493":"What are the top 5 zipcodes for 911 calls?","daffbe97":"What are the top 5 townships (twp) for 911 calls?","9a771f40":"# Creating new features\nIn the titles column there are \"Reasons\/Departments\" specified before the title code. These are EMS, Fire, and Traffic. Use .apply() with a custom lambda expression to create a new column called \"Reason\" that contains this string value.\n\nFor example, if the title column value is EMS: BACK PAINS\/INJURY , the Reason column value would be EMS.","966bd60f":"Use seaborn to create a countplot of the Day of Week column with the hue based off of the Reason column.","d76774c5":"# Thank You ","52bd76d6":"Now groupby this Date column with the count() aggregate and create a plot of counts of 911 calls.","7301d2ae":"Now create a HeatMap using this new DataFrame.","0b5a983a":"What is the most common Reason for a 911 call based off of this new column?","e2fd6a0e":"Take a look at the 'title' column, how many unique title codes are there?","99f536e6":"Day of Week is an integer 0-6. Use the .map() with this dictionary to map the actual string names to the day of the week:\n\ndmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}","f0b39368":"Now do the same for Month:"}}