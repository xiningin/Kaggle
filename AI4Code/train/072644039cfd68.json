{"cell_type":{"2bc6ed27":"code","0e5a9a34":"code","22193ea7":"code","76973332":"code","b7007bfe":"code","9ddf9769":"code","d8844d20":"code","8c3e2925":"code","b595c908":"code","be6f2900":"code","10baa538":"code","83a2b365":"code","69001938":"code","10ba03ab":"code","15c36b88":"code","74a9b495":"code","6f07b25d":"code","83dfc126":"code","326e1663":"code","39390a3c":"code","fab8ffd4":"code","2bd6f2e2":"code","c9896414":"code","a8d51a2d":"code","8a1fd6de":"code","d29c9171":"markdown","560a5d54":"markdown","5f730509":"markdown","d5dae390":"markdown","8916e083":"markdown","5500844c":"markdown","3ac3230b":"markdown","9be05207":"markdown","d9e013d8":"markdown","443a4a52":"markdown","8513361f":"markdown","cbeff474":"markdown","0bc32b84":"markdown","74d52f8d":"markdown","2861e29b":"markdown","5b35f453":"markdown","832ced7f":"markdown","5219bc6a":"markdown","7c4f61e8":"markdown","a3758a6a":"markdown","e6dc3049":"markdown","75372c99":"markdown","fa680062":"markdown","70eb1467":"markdown","46f657c3":"markdown","21c01404":"markdown","e0c9ea52":"markdown"},"source":{"2bc6ed27":"import tensorflow.compat.v1 as tf\nfrom sklearn.metrics import confusion_matrix\nimport numpy as np\nfrom scipy.io import loadmat\nimport os\nfrom pywt import wavedec\nfrom functools import reduce\nfrom scipy import signal\nfrom scipy.stats import entropy\nfrom scipy.fft import fft, ifft\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split, StratifiedKFold\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom tensorflow import keras as K\nimport matplotlib.pyplot as plt\nimport scipy\nfrom sklearn import metrics\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import KFold,cross_validate\nfrom tensorflow.keras.layers import Dense, Activation, Flatten, concatenate, Input, Dropout, LSTM, Bidirectional,BatchNormalization,PReLU,ReLU,Reshape\nfrom sklearn.metrics import classification_report\nfrom tensorflow.keras.models import Sequential, Model, load_model\nimport matplotlib.pyplot as plt;\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import cross_val_score\nfrom tensorflow.keras.layers import Conv1D,Conv2D,Add\nfrom tensorflow.keras.layers import MaxPool1D, MaxPooling2D\nimport seaborn as sns","0e5a9a34":"data_cross = pd.read_csv(\"..\/input\/mri-and-alzheimers\/oasis_cross-sectional.csv\")\ndata_long = pd.read_csv(\"..\/input\/mri-and-alzheimers\/oasis_longitudinal.csv\")\nprint(data_cross.info())\nprint(data_long.info())","22193ea7":"print(data_cross.isna().sum())\nprint(\"\\n\")\ndata_long.isna().sum()","76973332":"data_cross.dropna(subset=['CDR'],inplace=True)","b7007bfe":"data_cross.drop(columns=['ID','Delay'],inplace=True)\ndata_long = data_long.rename(columns={'EDUC':'Educ'})\ndata_long.drop(columns=['Subject ID','MRI ID','Group','Visit','MR Delay'],inplace=True)","9ddf9769":"data = pd.concat([data_cross,data_long])\ndata.head()","d8844d20":"data.describe()","8c3e2925":"cor = data.corr()\nplt.figure(figsize=(12,9))\nsns.heatmap(cor, xticklabels=cor.columns.values,yticklabels=cor.columns.values, annot=True)\n","b595c908":"import pandas_profiling as pp\npp.ProfileReport(data)","be6f2900":"data.isna().sum()","10baa538":"from sklearn.impute  import SimpleImputer\nimputer = SimpleImputer ( missing_values = np.nan,strategy='most_frequent')\n\nimputer.fit(data[['SES']])\ndata[['SES']] = imputer.fit_transform(data[['SES']])\n\n# We perform it with the median\nimputer = SimpleImputer ( missing_values = np.nan,strategy='median')\n\nimputer.fit(data[['MMSE']])\ndata[['MMSE']] = imputer.fit_transform(data[['MMSE']])","83a2b365":"data","69001938":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndata['CDR'] = le.fit_transform(data['CDR'].values)","10ba03ab":"data = pd.get_dummies(data)","15c36b88":"plt.bar(data['CDR'].unique(),data['CDR'].value_counts())","74a9b495":"data = data.drop(data[data['CDR']==3].index)\ndata.info()","6f07b25d":"y = data.pop('CDR')\nx = data","83dfc126":"x = StandardScaler().fit_transform(x)","326e1663":"X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 42,test_size=0.3)","39390a3c":"from xgboost import XGBClassifier\nFOLDS = 5\n\nparametros_xgb = {\n    \"learning_rate\": [0.01, 0.025, 0.005,0.5, 0.075, 0.1, 0.15, 0.2,0.3,0.8,0.9],\n    \"max_depth\":[3,5,8,10,15,20,25,30,40,50],\n    \"n_estimators\":range(1,1000)\n    }\n\nmodel_xgb= XGBClassifier(eval_metric='mlogloss')\n\n\nxgb_random = RandomizedSearchCV(estimator = model_xgb, param_distributions = parametros_xgb, n_iter = 100, cv = FOLDS, \n                               verbose=0, random_state=42,n_jobs = -1, scoring='accuracy')\nxgb_random.fit(X_train, y_train)\n\nxgb_random.best_params_","fab8ffd4":"model_xgb = xgb_random.best_estimator_\nmodel_xgb.fit(X_train,y_train)\nmodel_xgb.score(X_test,y_test)","2bd6f2e2":"from sklearn.ensemble import GradientBoostingClassifier\nFOLDS =10\n\nparametros_gb = {\n    \"loss\":[\"deviance\"],\n    \"learning_rate\": [0.01, 0.025, 0.005,0.5, 0.075, 0.1, 0.15, 0.2,0.3,0.8,0.9],\n    \"min_samples_split\": [0.01, 0.025, 0.005,0.4,0.5, 0.075, 0.1, 0.15, 0.2,0.3,0.8,0.9],\n    \"min_samples_leaf\": [1,2,3,5,8,10,15,20,40,50,55,60,65,70,80,85,90,100],\n    \"max_depth\":[3,5,8,10,15,20,25,30,40,50],\n    \"max_features\":[\"log2\",\"sqrt\"],\n    \"criterion\": [\"friedman_mse\",  \"mae\"],\n    \"subsample\":[0.5, 0.618, 0.8, 0.85, 0.9, 0.95, 1.0],\n    \"n_estimators\":range(1,100)\n    }\n\nmodel_gb= GradientBoostingClassifier()\n\n\ngb_random = RandomizedSearchCV(estimator = model_gb, param_distributions = parametros_gb, n_iter = 100, cv = FOLDS, \n                               verbose=0, random_state=42,n_jobs = -1, scoring='accuracy')\ngb_random.fit(X_train, y_train)\n\ngb_random.best_params_","c9896414":"model_gb = gb_random.best_estimator_\nprint(model_gb.score(X_test,y_test))","a8d51a2d":"cross_val_score(model_gb, x, y, cv=10, scoring='accuracy').mean()","8a1fd6de":"y_pred = model_gb.predict(X_test)\n\ncm = confusion_matrix(y_test, y_pred)\nclr = classification_report(y_test, y_pred)\n\nplt.figure(figsize=(8, 8))\nsns.heatmap(cm, annot=True, vmin=0, fmt='g', cbar=False, cmap='Blues')\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Actual\")\nplt.title(\"Confusion Matrix\")\nplt.show()\n\nprint(\"Classification Report:\\n----------------------\\n\", clr)\n","d29c9171":"## Encoding the Target variable using LabelEncoder.","560a5d54":"## Please upvote if you found it useful :)","5f730509":"## Using Pandas_Profiling to analyze the correlation between variables.","d5dae390":"# Alzheimer's prediction","8916e083":"### 2. Trying hyperparameter tuning of GradientBoostingClassifier.","5500844c":"## What is Dementia?","3ac3230b":"### 1. We will try hyperparameter tuning using cross-validation for XGBClassifier.","9be05207":"Since we will be predicting on the variable \"CDR\", we drop all the rows with undefined or null values","d9e013d8":"## Plotting the distribution of classes on a barplot.","443a4a52":"We describe the attributes in the dataset with data_cross.info() and data_long.info()","8513361f":"## Normalizing the data.\nWe observe that different columns have different ranges of values. We use Z-score normalization in this case.","cbeff474":"### Making predictions using the best estimator and plotting the confusion matrix along with classification report.","0bc32b84":"### Our problem statement\n\nEstimating the CDR (scale of Dementia) using relevant features in the MRI dataset.\n\nThe CDR is based on a scale of 0\u20133: no dementia (CDR = 0), questionable dementia (CDR = 0.5), MCI (CDR = 1), moderate cognitive impairment (CDR = 2), and severe cognitive impairment (CDR = 3).","74d52f8d":"Neglecting the last class due to negligible size in the combined dataset.","2861e29b":"## Removing unnecessary columns in both datasets.\nThe unique columns would be of no use in estimating the dependent variable \"CDR\"","5b35f453":"![image.png](attachment:cadd702e-970b-4cb6-a2bf-a6bdc41b0df7.png)![image.png](attachment:592d6d9a-e56a-40f9-8630-2197cd30fbc5.png)","832ced7f":"## Dividing dataset into train and test sets.","5219bc6a":"Dementia is a general term for loss of memory, language, problem-solving and other thinking abilities that are severe enough to interfere with daily life. Alzheimer's is the most common cause of dementia, a general term for memory loss and other cognitive abilities serious enough to interfere with daily life. Alzheimer's disease accounts for 60-80% of dementia cases.","7c4f61e8":"GradientBoosting model performs better than XGboost, Hence we try 10-fold cross validation on GradientBoostingClassifier model to improve accuracy.","a3758a6a":"## Checking for null values.","e6dc3049":"## Imputing columns using SimpleImputer.\nWe fill in the missing values in the \"SES\" columns with the most occuring data element.\nSimilarly, we fill the missing values in the \"MMSE\" column with the median of that column.","75372c99":"## Reading the Cross-sectional and Longitudinal MRI datasets.","fa680062":"## Defining Models.","70eb1467":"Alzheimer's disease (AD) is a neurodegenerative disease that usually starts slowly and progressively worsens.It is the cause of 60\u201370% of cases of dementia.The most common early symptom is difficulty in remembering recent events. As the disease advances, symptoms can include problems with language, disorientation (including easily getting lost), mood swings, loss of motivation, self-neglect, and behavioral issues. As a person's condition declines, they often withdraw from family and society.Gradually, bodily functions are lost, ultimately leading to death. Although the speed of progression can vary, the typical life expectancy following diagnosis is three to nine years.","46f657c3":"Converting categorical variables to numeric using OneHot encoding.","21c01404":"## Appending both the datasets.","e0c9ea52":"## What is Alzheimer's disease (AD)?"}}