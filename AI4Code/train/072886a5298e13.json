{"cell_type":{"7318a803":"code","53864109":"code","55fb8237":"code","81d1d02e":"code","6f0f3981":"code","31c160d9":"code","699f44f2":"code","394a6a51":"code","4f99b0e7":"code","770dfc29":"code","309810f8":"code","0eae691c":"code","0d9b7f8c":"code","adb8cc9c":"code","12b89e73":"code","8ec7a0d4":"code","340ffdef":"code","5aef86d4":"code","f4ce1d90":"code","3f14666a":"code","253b283f":"code","c4d65e60":"code","a8e9bec6":"code","66ba7d38":"code","eeebca8b":"code","6de6de6f":"code","c6af53b5":"code","a65e8e7f":"code","d05f4985":"code","272d0e7c":"code","98f6f23b":"code","20f31882":"code","6d7b67d8":"code","343a8d7a":"code","b0573053":"code","9b10f4f5":"code","879e2433":"code","d0fe51a1":"code","8be4fcfa":"code","77ebaad3":"code","f536ef36":"code","924a7ab9":"code","eec92a67":"code","1c2f6963":"code","7e23155b":"code","13361d56":"code","50414888":"code","06ed1ae4":"code","a9f6e934":"code","e5cb5ed2":"code","c51091b6":"code","cf16bd58":"code","45178cd9":"code","c757877d":"code","c50b2c0b":"code","552165c6":"code","6eafb301":"code","8b1001e0":"code","263d6d9a":"code","a4297131":"code","c03213ca":"code","a64a8d74":"code","931c2073":"code","1558c4b4":"code","77a3910a":"code","eb60951c":"markdown","ed7d3d73":"markdown","4c6dacdf":"markdown","52de2486":"markdown","07e5e1c2":"markdown","5eb775c6":"markdown","b27dd958":"markdown","ce347e52":"markdown","7e837103":"markdown","f1ab5098":"markdown","caf311a8":"markdown","dc93c3de":"markdown","fe4e9e5d":"markdown","66f1a274":"markdown","b24bf3c0":"markdown","10588dbd":"markdown","da820280":"markdown","a9d21515":"markdown","2808f303":"markdown","53a8e99b":"markdown","3a59c939":"markdown","d680203a":"markdown","276856d6":"markdown","609411bb":"markdown","875c9ab7":"markdown","f3c3a325":"markdown","7720c071":"markdown","e419a4f8":"markdown","ee01b21a":"markdown","327992b8":"markdown","f7eab426":"markdown","bafbb1c5":"markdown","5078d245":"markdown","de510d69":"markdown","090cd8f5":"markdown","cb812065":"markdown","6e5ecba1":"markdown","3387ae90":"markdown","34a981c5":"markdown","d7672ecc":"markdown","966cc2db":"markdown","823ae9b7":"markdown","6ba367d6":"markdown","3178b27b":"markdown","8d7df1a9":"markdown","214a67cd":"markdown","cccf1bbd":"markdown","e8fd0848":"markdown","c1fd8790":"markdown","f9d1fcab":"markdown","8cb2a948":"markdown","6629bb4c":"markdown","05f958d3":"markdown","e975cabc":"markdown","4e433fed":"markdown","5fc0ec77":"markdown","c2b5928b":"markdown","49c11256":"markdown","af481ebf":"markdown","dbee2504":"markdown","1fd1011e":"markdown","11591a60":"markdown","2ac5d05c":"markdown","9bb23375":"markdown","1ba3a6ed":"markdown","1dbc51d6":"markdown","57372d45":"markdown","9e636386":"markdown","4b67ea9d":"markdown","ab989b36":"markdown","65d8672e":"markdown","07d3ac68":"markdown","3fd6aa00":"markdown","f1bb761a":"markdown","ab451f8a":"markdown","b49723b3":"markdown","f8825e65":"markdown"},"source":{"7318a803":"# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nfrom matplotlib import rcParams\n\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\nrcParams['figure.figsize'] = 10,6\nbase_color = sb.color_palette()[0]","53864109":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","55fb8237":"# loading data into a pandas dataframe\ngames = pd.read_csv(\"\/kaggle\/input\/chess\/games.csv\")","81d1d02e":"# overview of data\nprint(games.shape)\nprint(games.dtypes)\nprint(games.head(10))","6f0f3981":"# splitting increment_code into base_time and increment\ngames['base_time']= games['increment_code'].str.split('+',expand=True)[0].astype(int)\ngames['increment']= games['increment_code'].str.split('+',expand=True)[1].astype(int)\n# removing unused columns in this analysis\ngames.drop(columns= ['id','created_at','last_move_at','increment_code','white_id','black_id','moves','opening_name','opening_ply'], inplace=True)","31c160d9":"# overview of dataset (cont.)\ngames.info()","699f44f2":"# overview of dataset (cont.)\ngames.describe()","394a6a51":"# the equation for calculating estimated game time (rounding to nearest 0.5)\ngames['estimated_time'] = round((games.base_time + games.increment*40\/60) * 2)\/2\n\n# initiate the game_rating column with the values of estimated time\ngames['game_rating'] = games['estimated_time']\n\n# replacing estimated game time with associated game rating\ngames['game_rating'] = games['game_rating'].apply(lambda x : 'bullet' if x<3 \n                                                  else ('blitz' if x<10 else 'rapid'))","4f99b0e7":"# converting game_rating data type to ordered categorical data type \nratings = ['bullet', 'blitz', 'rapid']\nratings_cat = pd.api.types.CategoricalDtype(categories= ratings, ordered=True)\ngames['game_rating'] = games['game_rating'].astype(ratings_cat)","770dfc29":"# dropping columns\ngames.drop(columns=['base_time', 'increment'], inplace = True)","309810f8":"# final overview of dataset\nprint(games.shape)\nprint(games.dtypes)\ngames.head(15)","0eae691c":"# distribution of game status in a bar chart\nstatus_order = games['victory_status'].value_counts().index\nsb.countplot(data=games, x='victory_status', color=base_color, order=status_order);\nplt.xlabel('Victory Status');\nprint(games['victory_status'].value_counts())","0d9b7f8c":"games = games.loc[(games['victory_status'].isin(['resign','mate']))]  # keep rows of winnings only\ngames.reset_index(drop=True, inplace=True)   # reseting index to fill gaps in the index","adb8cc9c":"# quick overview of dataset\nprint(games.shape)\nprint(games.describe())","12b89e73":"# since there are only two possible values of 'rated' column, I'll invesigate them in a pie chart\nrated_counts = games['rated'].apply(lambda x: 'Rated' if x==True else 'Unrated').value_counts()\n\ndef pie_values(pct):\n    absolute = int(round(pct\/100*games.shape[0],0))\n    return \"{}\\n\\n{:0.0f}%\".format(absolute,pct)\ndef pie_abs(pct):\n    absolute = int(round(pct\/100*games.shape[0],0))\n    return \"{}\".format(absolute)\n\nplt.pie(data=games, x= rated_counts, labels= rated_counts.index,\n        startangle=90, counterclock=False,autopct=pie_values, textprops=dict(fontsize=15),\n        colors=['darkseagreen','coral'])\nplt.axis('square');","8ec7a0d4":"games = games[games['rated']==True] # keeping rated games only and dropping unrated games\n\ngames.drop(columns='rated', axis=1, inplace= True) # dropping 'rated' column as it contains a single value\n\ngames.reset_index(drop=True, inplace=True)   # reseting index to fill gaps in the index","340ffdef":"# overview of dataset\nprint('Number of rows = {:,.0f} rows'.format(games.shape[0]))\ngames.head()","5aef86d4":"# plotting bar chart for the distribution of the winners; white and black\nsb.countplot(data=games, x='winner', palette=['silver','black'], order=['white','black']);\ngames.winner.value_counts()","f4ce1d90":"# At most game_ratings column contains only 3 ratings; bullet, blitz, rapid. So, we can plot it as a pie chart.\n\n# getting count for each rating and account for categories with zero count if any.\ngames['game_rating'] = games['game_rating'].cat.remove_unused_categories()\ngame_rating_count = games['game_rating'].value_counts() \n\n# plotting pie chart\nplt.pie(data=games, x= game_rating_count, labels= game_rating_count.index,\n        startangle=90, counterclock=False,autopct=pie_abs, textprops=dict(fontsize=15),\n        colors=['darkseagreen','orange'])\nplt.axis('square');","3f14666a":"games['opening_eco'].nunique() # number of unique opening ECOs","253b283f":"# keeping volume labels and remove the rest of the codes\ngames['opening_eco']= games['opening_eco'].apply(lambda x: x[0]) \n\n# converting opening_eco data type to ordered categorical data type (alphabetically)\nopenings = ['A', 'B', 'C', 'D', 'E']\nopenings_cat = pd.api.types.CategoricalDtype(categories= openings, ordered=True)\ngames['opening_eco'] = games['opening_eco'].astype(openings_cat)\n\n\n# plot\nsb.countplot(data=games, y= 'opening_eco', color= base_color);\nplt.ylabel('Opening ECO');\nplt.xlabel('Count');","c4d65e60":"games[['white_rating','black_rating']].describe()","a8e9bec6":"# plotting white rating side by side with black rating\n\n# constructing bins\nstep = 40\nbins_rating = np.arange(780, 2700+step, step)\n\n# plot white rating\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsb.distplot(games['white_rating'],kde=False, bins= bins_rating);\nplt.xlabel('White Rating')\nplt.ylabel('Count')\nplt.xlim(750,2700) # based on data min and max\nplt.ylim(0,1050) \n\n# plot black rating\nplt.subplot(1,2,2)\nsb.distplot(games['black_rating'],kde=False, bins=bins_rating);\nplt.xlabel('Black Rating')\nplt.xlim(750,2700) # based on data min and max\nplt.ylim(0,1050); # to make y-axes synchronized","66ba7d38":"# adding new column for difference in rating between white and black\ngames['rating_diff_wb'] = games['white_rating'] - games['black_rating'] \ngames['rating_diff_wb'].describe()","eeebca8b":"# bins\nbins_diff = np.arange(-1605, 1499+50, 50)\n\n# plot\nsb.distplot(games['rating_diff_wb'],kde=False, bins= bins_diff);\nplt.xlabel('Rating Difference (W-B)');\nplt.ylabel('Count');","6de6de6f":"# far points at the left end\nleft_end = -1000 # eyeballed\nprint('Number of far points at the left end= {}'.format(games[games['rating_diff_wb']<=left_end].shape[0]))\ngames[games['rating_diff_wb']<=left_end] ","c6af53b5":"# far points at the right end\nright_end= 1000 # eyeballed\nprint('Number of far points at the left end= {}'.format(games[games['rating_diff_wb']>=right_end].shape[0]))\ngames[games['rating_diff_wb']>=right_end] ","a65e8e7f":"games['turns'].describe()","d05f4985":"# bin edges\nstep= 6\nbins_turns = np.arange(games['turns'].min(), games['turns'].max()+step, step)\n\n# plot\nsb.distplot(games['turns'], kde=False, bins=bins_turns);\nplt.xlabel('Turns')\nplt.ylabel('Count');","272d0e7c":"np.log10(games['turns'].describe())","98f6f23b":"# right skewed distribution with long tail suggests plotting the distribution with a log scale \nstep = 0.05\nbins_log_turns = 10**np.arange(0,np.log10(games['turns'].max())+step, step)\nsb.distplot(games['turns'], kde=False, bins= bins_log_turns);\nplt.xscale('log')\nticks = [1, 2, 5, 10, 20, 50 ,100, 150, 250]\nplt.xticks(ticks, ticks)\nplt.xlabel('Turns')\nplt.ylabel('Count');","20f31882":"# investigating far points at the left\n\nprint(games[(games['turns']<4)].victory_status.value_counts()) # count number of points\ngames[(games['turns']<4)] # rows with less than 4 turns","6d7b67d8":"# drop rows with number of turns < 4\ngames = games[(games['turns']>=4)]\n\ngames.reset_index(drop=True, inplace=True)   # reseting index to fill gaps in the index","343a8d7a":"# bins\nstep = 0.06\nbins_log_turns = 10**np.arange(0.47,np.log10(games['turns'].max())+0.005, step)\n\n# plot\nsb.distplot(games['turns'], kde=False, bins= bins_log_turns);\nplt.xscale('log')\nticks = [5, 10, 20, 50 ,100, 150, 200]\nplt.xticks(ticks, ticks)\nplt.xlabel('Turns')\nplt.ylabel('Count');","b0573053":"print('Number of rows = {:,.0f} rows'.format(games.shape[0]))","9b10f4f5":"# plot\ng =sb.FacetGrid(data=games, col='game_rating', height=6, aspect=1.1)\ng.map(sb.countplot, 'winner', order=['white', 'black'], palette=['silver','black']);","879e2433":"# plot\nsb.pointplot(data=games, x='winner', y= 'rating_diff_wb', order=['white', 'black'],palette=['silver','black'], linestyles=\"\");\nplt.ylabel('Average Rating Difference (White-Black)');\nplt.xlabel('Winner');","d0fe51a1":"sb.countplot(data=games, hue='winner', x='opening_eco', hue_order=['white','black'],palette=['silver','black']);","8be4fcfa":"# plotting winner againist average number of turns\nsb.barplot(data=games, x='winner', y='turns', order=['white','black'], palette=['silver','black']);","77ebaad3":"# plotting the distribution of winners for each victory statusz\nsb.countplot(data=games, hue='winner', x='victory_status', hue_order=['white','black'],palette=['silver','black']);","f536ef36":"# adding new column for absolute difference in rating \ngames['abs_rating_diff_wb'] = abs(games['white_rating'] - games['black_rating'])","924a7ab9":"# plotting (absolute rating difference) against (victory status)\nsb.barplot(data= games, x='victory_status', y= 'abs_rating_diff_wb');\nplt.ylabel('Average Absolute Rating Difference (White-Black)')\nplt.xlabel('Victory Status');","eec92a67":"# plotting victory status distribution for each game rating\nsb.countplot(data=games, hue='victory_status', x='game_rating');\nplt.ylabel('Count')\nplt.xlabel('Game Rating')\nplt.legend(title='Victory Status');","1c2f6963":"# plotting victory status distribution for each opening\nsb.countplot(data=games, hue='victory_status', x='opening_eco');\nplt.ylabel('Count')\nplt.xlabel('Opening ECO')\nplt.legend(title='Victory Status');","7e23155b":"# plotting victory status distribution for each opening\nsb.violinplot(data=games, x='victory_status', y='turns', inner='quartile');\nplt.ylabel('Number of Turns')\nplt.xlabel('Victory Status');","13361d56":"# scatter plot between absolute rating difference and number of turns using a sample from the data\nsb.regplot(data=games.sample(2000, replace=False), y='turns', x='abs_rating_diff_wb',\n           fit_reg=True,truncate=False, scatter_kws={'alpha':0.4});\nplt.xlabel('Absolute Rating Difference');\nplt.ylabel('Number of Turns');","50414888":"# plotting number of turns against game rating and openings\ng = sb.PairGrid(data = games, y_vars=['turns'],\n            x_vars=['game_rating','opening_eco'], height=6, aspect=1.1,diag_sharey=True )\ng.map(sb.boxenplot);","06ed1ae4":"# plotting absolute rating difference against game rating and openings\ng = sb.PairGrid(data = games, y_vars=['abs_rating_diff_wb'],\n            x_vars=['game_rating','opening_eco'], height=6, aspect=1.1,diag_sharey=True)\ng.map(sb.boxenplot);","a9f6e934":"#plot\nsb.countplot(data=games, x='opening_eco', hue='game_rating', palette='dark');\nplt.ylabel('Count')\nplt.xlabel('Opening ECO')\nplt.legend(title='Game Rating');","e5cb5ed2":"def winner_percentages(var):\n        ''' A function to plot the percentage of games won for each winner, white and black,\n            and its variation with a variable\n            var: (string) the variable you want to plot the variation with.\n        '''\n        white_counts = games.query('winner == \"white\"').groupby(var)[var].count()\n        black_counts = games.query('winner == \"black\"').groupby(var)[var].count()\n        game_var_counts = games[var].value_counts()\n        \n        white_var_pct= (white_counts\/game_var_counts)*100\n        black_var_pct= (black_counts\/game_var_counts)*100\n        plt.figure(figsize=(12,7))\n        plt.bar(data= games, x=white_var_pct.index, height=white_var_pct,\n                width=-0.4, align='edge', color='silver',label='white');\n\n        plt.bar(data= games, x=black_var_pct.index, height=black_var_pct, \n                width=0.4, align='edge', color='black', label='black');\n\n        ticks= [0,10,20,30,40,50]\n        labels = ['{}%'.format(t) for t in ticks]\n        plt.yticks(ticks, labels);\n        plt.ylabel('% of Games Won')\n        plt.legend();\n\nwinner_percentages('game_rating')\nwinner_percentages('opening_eco')\nwinner_percentages('victory_status')","c51091b6":"def victory_percentages(var):\n        ''' A function to plot the percentage of games won for each victory status, resign and mate,\n            and its variation with a variable\n            var: (string) the variable you want to plot the variation with.\n        '''\n        mate_counts = games.query('victory_status == \"mate\"').groupby(var)[var].count()\n        resign_counts = games.query('victory_status == \"resign\"').groupby(var)[var].count()\n        game_var_counts = games[var].value_counts()\n        \n        mate_var_pct= (mate_counts\/game_var_counts)*100\n        resign_var_pct= (resign_counts\/game_var_counts)*100\n        plt.figure(figsize=(12,7))\n        \n        plt.bar(data= games, x=mate_var_pct.index, height=mate_var_pct,\n                width=-0.4, align='edge', color=sb.color_palette('colorblind')[3],label='mate');\n\n        plt.bar(data= games, x=resign_var_pct.index, height=resign_var_pct, \n                width=0.4, align='edge', label='resign');\n\n        ticks= [0,10,20,30,40,50, 60, 70]\n        labels = ['{}%'.format(t) for t in ticks]\n        plt.yticks(ticks, labels);\n        plt.ylabel('% of Games Won')\n        plt.legend();\n\nvictory_percentages('game_rating')\nvictory_percentages('opening_eco')","cf16bd58":"# making a sample of data to use for scatter plots\ngames_sample= games.sample(1000, replace=False, random_state=100)","45178cd9":"# scatter plot of rating difference versus number of turns for each winner\nwinner_markers= [['white', 'o', 'darkgray'],\n                ['black', '^', 'black']]\n\nplt.figure(figsize=(16,9))\nfor winner, marker, color in winner_markers:\n    sb.regplot(data = games_sample.loc[games_sample['winner']==winner], x = 'rating_diff_wb', y = 'turns',\n               x_jitter=5,fit_reg = False, marker = marker, scatter_kws={'color':color});\n\nplt.legend(title='Winner',labels=['White','Black']);\nplt.axvspan(0, 1100, facecolor='g', alpha=0.05)\nplt.axvline(0, color='k')\nplt.xlim(-1100,1100)\nplt.xlabel('Rating Difference (White-Black)')\nplt.ylabel('Number of Turns');","c757877d":"# scatter plot of rating difference versus number of turns for each victory status\nvictory_markers= [['resign', 'x'],\n                ['mate', 's']]\n\nplt.figure(figsize=(15,8))\nfor victory, marker in victory_markers:\n    ax=sb.regplot(data = games_sample.loc[games_sample['victory_status']==victory], x = 'rating_diff_wb', y = 'turns',\n               fit_reg = False, marker = marker, scatter_kws={'alpha':0.7},);\n\nplt.legend(title='Victory Status', labels=['resign','mate']);\nplt.xlim(ax.get_xlim())\nplt.axvspan(0,ax.get_xlim()[1], facecolor='g', alpha=0.05)\nplt.axvline(0, color='k')\nplt.xlabel('Rating Difference (White-Black)')\nplt.ylabel('Number of Turns');","c50b2c0b":"# plotting victory status against average rating difference for each winner\ng = sb.FacetGrid(data=games, col='winner', col_order=['white','black'], height=6, aspect=1.1)\ng.map(sb.barplot,'victory_status' , 'rating_diff_wb',order=['mate','resign'] \n      , palette=[sb.color_palette('colorblind')[3],sb.color_palette()[0]]);\nplt.ylim(-110,110)\ng.axes[0,0].set_xlabel('Victory Status');\ng.axes[0,0].set_ylabel('Average Rating Difference (White-Black)');\ng.axes[0,1].set_xlabel('Victory Status');","552165c6":"# plotting victory status against average number of turns for each winner\ng = sb.FacetGrid(data=games, col='winner', col_order=['white','black'], height=6, aspect=1.1)\ng.map(sb.barplot,'victory_status' , 'turns',order=['resign','mate'] \n      , palette=[sb.color_palette()[0],sb.color_palette('colorblind')[3]]);\ng.axes[0,0].set_xlabel('Victory Status');\ng.axes[0,0].set_ylabel('Average Number of Turns');\ng.axes[0,1].set_xlabel('Victory Status');","6eafb301":"# scatter plot of rating difference versus number of turns for each game rating\ngameRating_markers= [['blitz', 'x', sb.color_palette('dark')[0]],\n                ['rapid', 's', sb.color_palette('dark')[3]]]\n\nplt.figure(figsize=(15,8))\nfor gameRating, marker, color in gameRating_markers:\n    ax=sb.regplot(data = games_sample.loc[games_sample['game_rating']==gameRating], x = 'rating_diff_wb', y = 'turns',\n               fit_reg = False, marker = marker, scatter_kws={'alpha':0.7,'color': color});\n\nplt.legend(title='Game Rating', labels=['blitz','rapid']);\nplt.xlim(ax.get_xlim())\nplt.axvspan(0,ax.get_xlim()[1], facecolor='g', alpha=0.035)\nplt.axvline(0, color='k')\nplt.xlabel('Rating Difference (White-Black)')\nplt.ylabel('Number of Turns');","8b1001e0":"# plotting game rating against rating difference and against number of turns for each winner\nplt.figure(figsize=(15,8))\n\n# first plot\n# to make the comparison clearer between white an black I will take the absolute of mean rating difference\n\nplt.subplot(1,2,1) \nwhite_data=games.query('winner==\"white\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nsb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nsb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values),\n             palette=['black']*len(black_data.values))\nplt.xlabel('Game Rating')\nplt.ylabel('Average Rating Difference in Favor of the Winner')\nplt.ylim(0,110);\nplt.legend(title='Winner');\n\n\n\n# second plot\n\nplt.subplot(1,2,2)\nsb.pointplot(data=games, x='game_rating', y='turns', hue='winner', order=['blitz','rapid'], hue_order=['white','black'],\n            palette=['silver', 'black'], ci=False)\nplt.ylim(0,70);\nplt.xlabel('Game Rating')\nplt.ylabel('Average Number of Turns');","263d6d9a":"# plotting game rating against rating difference for each winner  and each victory status\n\n# first plot\nplt.figure(figsize=(16,9))\nplt.subplot(1,2,1)\nwhite_data=games.query('winner==\"white\" & victory_status==\"resign\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nax2=sb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\" & victory_status==\"resign\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nax1= sb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values), \n                  palette=['black']*len(black_data.values))\nplt.ylim(0,140);\nplt.xlabel('Game Rating')\nplt.ylabel('Average Rating Difference in Favor of the Winner')\nplt.title('Victory Status: Resign');\nplt.legend(title='Winner');\n\n\n# second plot\nplt.subplot(1,2,2)\nwhite_data=games.query('winner==\"white\" & victory_status==\"mate\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nax2=sb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\" & victory_status==\"mate\"').groupby('game_rating')['rating_diff_wb'].mean().abs()\nax1= sb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values),\n                  palette=['black']*len(black_data.values))\nplt.ylim(0,140);\nplt.xlabel('Game Rating')\nplt.title('Victory Status: Mate');\nplt.legend(title='Winner');","a4297131":"# plotting game rating against number of turns for each winner  and each victory status\n\ng = sb.FacetGrid(data=games, col='victory_status',col_order=['resign', 'mate'], height=6, aspect=1.1)\ng.map(sb.pointplot,'game_rating' , 'turns', 'winner',order=['blitz','rapid'] , hue_order=['white','black']\n      , palette=['silver', 'black'], ci=False);\n\ng.axes[0,0].set_ylabel('Average Number of Turns');\ng.axes[0,0].set_xlabel('Game Rating');\ng.axes[0,1].set_xlabel('Game Rating');\ng.axes[0,0].set_title('Victory Status: Resign');\ng.axes[0,1].set_title('Victory Status: Mate');\nplt.legend(title= 'Winner',title_fontsize=13, fontsize=12 );\nplt.ylim(0,80);","c03213ca":"games[['white_rating','black_rating']].describe()","a64a8d74":"# plotting the opening groups against the winner rating for white and black\nplt.figure(figsize=(15,8))\nwhite_data=games.query('winner==\"white\"').groupby('opening_eco')['white_rating'].mean()\nsb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\"').groupby('opening_eco')['black_rating'].mean()\nsb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values),\n             palette=['black']*len(black_data.values))\nplt.ylabel(\"Average Winner's Rating\")\nplt.legend(title='Winner');\nplt.ylim(np.min([games['white_rating'].min(),games['black_rating'].min()]),\n         np.max([games['white_rating'].max(),games['black_rating'].max()]));\n","931c2073":"# plotting the opening groups against the winner rating for white and black and for each victory status\n\nplt.figure(figsize=(16,9))\nplt.subplot(1,2,1)\nwhite_data=games.query('winner==\"white\" & victory_status==\"resign\"').groupby('opening_eco')['white_rating'].mean().abs()\nax2=sb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\" & victory_status==\"resign\"').groupby('opening_eco')['black_rating'].mean().abs()\nax1= sb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values), \n                  palette=['black']*len(black_data.values))\nplt.xlabel('Opening ECO')\nplt.ylabel(\"Average Winner's Rating\")\nplt.title('Victory Status: Resign');\nplt.legend(title='Winner');\nplt.ylim(np.min([games['white_rating'].min(),games['black_rating'].min()]),\n         np.max([games['white_rating'].max(),games['black_rating'].max()]));\n\n\nplt.subplot(1,2,2)\nwhite_data=games.query('winner==\"white\" & victory_status==\"mate\"').groupby('opening_eco')['white_rating'].mean().abs()\nax2=sb.pointplot(x=white_data.index, y=white_data.values, hue=['white']*len(white_data.values),\n                 palette=['silver']*len(white_data.values))\n\nblack_data=games.query('winner==\"black\" & victory_status==\"mate\"').groupby('opening_eco')['black_rating'].mean().abs()\nax1= sb.pointplot(x=black_data.index, y=black_data.values, hue=['black']*len(black_data.values),\n                  palette=['black']*len(black_data.values))\nplt.xlabel('Opening ECO')\nplt.title('Victory Status: Mate');\nplt.legend(title='Winner');\nplt.ylim(np.min([games['white_rating'].min(),games['black_rating'].min()]),\n         np.max([games['white_rating'].max(),games['black_rating'].max()]));","1558c4b4":"# plotting the opening groups against the number of turns for each winner\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\nsb.pointplot(data=games, x='opening_eco', y='turns', hue='winner', hue_order=['white','black'],\n            palette=['silver', 'black'], ci=False)\nplt.xlabel('Opening Eco')\nplt.ylabel('Average Number of Turns');\nplt.ylim(0,80);\n\n# plotting the opening groups against the number of turns for each victory status\nplt.subplot(1,2,2)\nsb.pointplot(data=games, x='opening_eco', y='turns', hue='victory_status', hue_order=['resign','mate'],\n            ci=False)\nplt.xlabel('Opening Eco')\nplt.ylabel('');\nplt.ylim(0,80);","77a3910a":"# plotting the opening groups against the number of turns for each winner and for each victory status\ng = sb.FacetGrid(data=games, col='victory_status',col_order=['resign', 'mate'], height=6, aspect=1.1)\ng.map(sb.pointplot,'opening_eco' , 'turns', 'winner',order=['A','B','C','D','E'] , hue_order=['white','black']\n      , palette=['silver', 'black'], ci=False);\n\ng.axes[0,0].set_ylabel('Average Number of Turns');\ng.axes[0,0].set_xlabel('Opening ECO');\ng.axes[0,1].set_xlabel('Opening ECO');\ng.axes[0,0].set_title('Victory Status: Resign');\ng.axes[0,1].set_title('Victory Status: Mate');\nplt.legend(title= 'Winner',title_fontsize=13, fontsize=12 );\nplt.ylim(0,90);","eb60951c":"It is hard to interpret any findings in this visual as the distributions of games won by checkmate or resigning are similar.","ed7d3d73":"The distribution of turns is right skewed with a long tail that suggests further investigation using log scale","4c6dacdf":"So, let's move on to another variable of interest: **victory status**.","52de2486":"Games that ends with **resigning** have similar trends for black and white. However, Blitz rating games that ended with **checkmate** are won by player as black at lower rating difference in his favor and in rapid rating games with higher rating difference compared to player as white.","07e5e1c2":"I decided to look at the winner's rating instead of rating difference this time because I want to know what openings at each rating level that the players use to win.","5eb775c6":"Difference in rating forms a long tailed distribution at both ends with a peak at ~=0 of approximately 2250 games that both players ratings are so close.<br>\n\nPoints at far ends could be considered outliers. Despite knowing that it is possible that in certain games there are high difference in ratings between the two players, those points shall be investigated further.","b27dd958":"Final distribution of number of turns:","ce347e52":"Most of the games in the dataset are rated meaning that players ratings get affected by the result of the game which makes them competative games. In the other hand, unrated games are much less as they are played for practice or for fun.<br>\n\nA lot of factors affecting game result are to be investigated, so it might be a good idea to consider only rated games as they are meant to be competative and each player is motivated to win.","7e837103":"The above bivariate exploration is about the variables of interest; winner and victory status. Now, let's take a look at the other relationships that number of turns and rating difference have with the other variables. Starting with the relationship between them.","f1ab5098":"Let's plot bar charts with the means of rating difference and number of turns that may be clearer.","caf311a8":"**3. Winner**<br>","dc93c3de":"According to [chess.com](https:\/\/support.chess.com\/article\/330-why-are-there-different-ratings-in-live-chess#:~:text=Live%20Chess%20has%20three%20different,games%2010%20minutes%20and%20longer.), live Chess has three different ratings based on different time controls: \n- **Bullet rating** - For games under 3 minutes. \n- **Blitz rating** - For games over 3 minutes but under 10 minutes. \n- **Rapid rating** - For games 10 minutes and longer.\n\nThe system assumes an **average game-length of 40 moves** to estimate the total length of time available to each player; the result is what determines which rating is affected by a given time control\n\nSo, we can define a column **`game_rating`** that contains the ratings based on **`base_time`** (minutes) &  **`increment`** (seconds) with estimated game-length of 40 moves.\n\n$$ Estimated Game Time = BaseTime + \\frac{Increment* 40}{60}$$","fe4e9e5d":"Games won by checkmate need, on average, higher number of turns and higher rating difference between players in favor of the winner compared to games won by resigning regardless of the winner, white or black.","66f1a274":"There are 341 unique openings which makes them hard to investigate.<br>\n\nAccording to [365Chess](https:\/\/www.365chess.com\/eco.php), those openings are divided in five volumes labeled from \"A\" through \"E\". So, I will use those five volumes instead of the whole 353 openings.","b24bf3c0":"**4. Game Rating\/Category**","10588dbd":"**6. Player Rating** *(White & Black)*","da820280":"Now, we have columns for estimated game time and game rating. We don't need time control columns anymore.","a9d21515":"This plot can clearly show what I learned earlier from the data and some interesting relationships.\n* Most of the games are played between players of the **same or close rating** and lasted until about **40 to 70 turns**.\n* Players, as white or as black, are **winning** more when their **ratings are higher** than their opponents compared to when they have less rating than their opponents.\n* Games that are played with **high difference in rating** in the winner's favor tend to end in **less number of turns** than those with lower difference in rating.\n* There are more players as **black winning** the game with **high number of turns** specially when the rating difference is small.","2808f303":"**7. Rating Difference** *(White to Black)*","53a8e99b":"These plots prove what I learned in the previous scatter plot with some additional findings;\n* blitz rating games won by more skilled players as white compared to players as black,\n* players as black tend to take more number of turns to win a rapid rating game.","3a59c939":"On average, players as white need less number of turns to win the game. It might be a slight difference, but in chess game I'd argue that it is may be significant.","d680203a":"**5. Opening ECO**","276856d6":"**1. Victory Status** <br>\n\n \n  Let's start with one of the variables of most interest.","609411bb":"So, is the player with higher rating has more chances to win? To answer that, let's look at the relationship between rating difference and the winner.","875c9ab7":"White overcomes black in both ratings, but with much less advantage at blitz rating games.","f3c3a325":"Are there certain opening groups associated with the winning player? Let's see.","7720c071":"From what I have learned in the previous exploration, the variations of the variables of interest, winner and victory status, with rating difference and number of turns are significant, so I will start plotting the variables of interest one by one with these two variables.","e419a4f8":"Looking at the relationship between victory status and the other variables: ","ee01b21a":"It looks that openings of group E are used more by the highest rated players while the lowest rated player prefer openings of group C.","327992b8":"## Bivariate Exploration","f7eab426":"Absolute rating difference, on average, is higher at games that ended by checkmate compared to games that ended by one of the players resigning.","bafbb1c5":"The log scale exposes the obvious outliers at the left end which doesn't make sense in practice as it is hard for a game to be won by less than 4 turns. I looked it up myself in the games history at Lichess, and here is a rated rapid [game](https:\/\/lichess.org\/V7a3QIoB\/black#4) which is barely won in 4 turns.","5078d245":"## Multivariate Exploration","de510d69":"Do players as white need less number of turns to win a game?","090cd8f5":"Most of the games are won when one of the players resigns,white or black. It could be because the games are played by high rated players who predicted the next moves and found out that they are losing before it happens.","cb812065":"- Player as white has more advantage over player as black in blitz rating games.\n- Highest winning percentage for white is at opening group C while, surprisingly, black has slight advantage when using opening group E.\n- White has slightly higher win percentage over black by checkmate compared to winning by player resigning.","6e5ecba1":"First, let's start with one of the variables of interest: **winner**. I want to look at its relationship with game rating.","3387ae90":"### Discuss the distribution(s) of your variable(s) of interest. Were there any unusual points? Did you need to perform any transformations?\n\n* **The game  could end with 4 possible results and 2 of them are dropped because I'm more interested in the games that are won by checkmate or when one of players resign**. [Draw](https:\/\/www.chess.com\/terms\/draw-chess) is obviously not a win, and out of time result could end with a draw as the rules of the game states that if one player is out of time and the other player has insufficient material to checkmate the game ends with a draw.\n\n### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?\n\n* There are **rated and unrated games**, but I decided to investigate those rated games as they are more competative than unrated ones, and they form the majority of data. Then, this column becomes useless with one value so it is dropped.<br>\n\n\n* **Openings** in chess games are divided in **5 volumes** that are to be used instead of what is inside each voulume because it would be difficult to analyze all of them.<br>\n\n\n* **Players Ratings** on their own are not relevant but the difference between them is to be important in predicting the winner, or that is what I expect. So, **I added a column for the difference in ratings between white and black respectively**. Despite the long tailed distribution at both ends, which indicates high difference in rating, I decided not to remove those games as they are possible and there is nothing odd about their data.<br>\n\n\n* **Number of turns** may not be the best predictor of the game winner, but exploring it helped me find interesting points that needed further investigation. At first, the distribution was right skewed, so I applied **log scale** to take a good look at the right tail. Instead, the distribution shifted to the right and becomes left skewed. That is when I found **outliers at the left tail**; games with 1,2, and 3 turns only are odd in practice. After exploring those games, it is found that all of them ended with one of the players resigning which is not normal in a chess game after only 3 turns and it may be due to reasons unrelated to the game, so I decided to **drop those points**.<br>","34a981c5":"### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?<br>\n\nThere are a lot of factors that can possibly affect the features of interest and I will take the most interesting relationships one by one so it doesn't become so overwhelming.<br>\n\n* **Difference in rating** between players is the most obvious factor in **winning the game**; The players who win have higher rating, on average, than the opponent by around 80 rating points. Average absolute rating difference is higher at games that ends with checkmate compared to the games that ends with resigning; but it doesn't say if the one with higher rating wins or not which will be investigated later.<br>\n\n\n* Player as black is taking slightly more **number of turns**, on average, to win the game compared to player as white, and number of turns that needed to checkmate are,on average, higher significantly than that of resigning.<br>\n\n\n* White is **winning** with higher percentage whether by **checkmate or resigning** compared to black, but the difference is slightly higher at games that ends with checkmate. <br>\n\n\n* Victory status has low variation with variables like **game rating** and **opening ECO**, but as for winning, white is more dominant at blitz rating games than rapid rating ones and it also has higher percentage at all openings except for openings group E in which black has barely higher winning percentage with it. <br>\n\n\n### Did you observe any interesting relationships between the other features (not the main feature(s) of interest)?\n\n* The two numerical variables; number of turns and difference in rating have a week negative correlation; the higher the difference in rating the fewer number of turns are needed to win the game.<br>\n","d7672ecc":"## Univariate Exploration","966cc2db":"Number of turns may not be related to the variable of interest, winner,","823ae9b7":"The same trends as earlier but with more highly rated players as black winning by chekmate using group B and E compared to other groups.","6ba367d6":"I will get the percentage of games won by black and by white in each game rating then compare them.","3178b27b":"I want to include another variable which is game rating, but first let's see its variation with rating difference and number of turns.","8d7df1a9":"Openings in volume C are the most frequent followed by B and A. Volume D occurs much less and volume E openings are rarely used.","214a67cd":"There is only one relationship left; game rating versus opening groups.","cccf1bbd":"Openings of group C are used significantly more by the player as white to win the game compared to player as black while all other groups has very small difference in favor of player as white except for group E in which there is approximately no difference.","e8fd0848":"- The trend is the same for both rapid rating and blitz rating games with resigning percentages are higher compared to checkmates in both.\n- Resigning percentage in group E is the highest, but other than that all openings are having similar distribution.","c1fd8790":"Now we have 14,115 rated games with a winner in each.","f9d1fcab":"Moving on to openings to see if there are certain openings that gurantee win for white or black.","8cb2a948":"The trends are similar for both white and black for each victory status. And as I found earlier checkmates are at higher number of turns compared to resigns.","6629bb4c":"First, I need to take the absolute of rating difference because I want to look at its relationship with victory status regardless of the player ,black or white, who has the higher rating.","05f958d3":"As expected, the winner, player as white or as black, has an average difference in rating in his favor by about 80.","e975cabc":"Let's add victory status variable to each of the previous two plots.","4e433fed":"There is nothing odd about those points, the ones with the higher ratings win in all of these games which makes sense, except the fact that they cause long tails in both sides of the difference distribution, so I decided to keep them. ","5fc0ec77":"> Since I'm interested in winnings and the factors affecting it ,whether it is a win through mate or the other player resigns, I will drop the rows of the two other results; draw and out of time.<br>","c2b5928b":"There is a small number of blitz games compared to rapid games that is why rapid rating dominates at each opening group.","49c11256":"Blitz rating games are won at high rating difference with less number of turns compared to the majority of rapid rating games.","af481ebf":"Number of turns has very weak correlation with the absolute rating difference. However, number of turns tends to be higher when the two players' ratings are so close (approximately zero difference between them).","dbee2504":"It looks like there are no bullet rating games in this dataset. Most of games are of rapid ratings which are greater than or equal 10 minutes.","1fd1011e":"Doing the same with victory status variable:","11591a60":"Games which are won by resigning takes the highest number of turns at group E for black and white, however; the highst number of turns it takes to win by checkmate is at group B for black and at group E for white.","2ac5d05c":"After looking at each possible combination of variables, I want to look at the percentages of games won, instead of counts, for the variables of interest; winner and victory status.","9bb23375":"Player as white has slightly more wins than player as black, but this doesn't conclude that white has an advantage over black.","1ba3a6ed":"### What is the structure of your dataset?\n\nThis is a part of a dataset that can be found [here](https:\/\/www.kaggle.com\/datasnaek\/chess) and it contains information about the most recent 20,000 games (at its time) played by the top 100 teams on [Lichess](https:\/\/www.lichess.org).\n\n**rated** (T\/F): If true it means that the game is rated and players' ratings increase or decrease depending on the final result.<br>\n**turns**: Number of total turns until the game ends.<br>\n**victory_status**: It is the game result; out of time, draw, resign and mate.<br>\n**winner**: The winner of the game; player as black or as white.<br>\n**white_rating**, **black_rating**: Players' ratings on Lichess.<br>\n**opening_eco**: Standardised code for any given opening play, list [here](https:\/\/www.365chess.com\/eco.php) and it is the opening made by the winner or player as white if the game ends with a draw.<br>\n**estimated_time**: Estimated game time.<br>\n**game_rating**: Based on time controls, there are three possible ratings; bullet, blitz, rapid.<br>\n\n### What is\/are the main feature(s) of interest in your dataset?\n\nI'm interested in what makes a player, as black or white, **win** the game and whether player as white always have the advantage or not. Also, it is interesting to know what are the attributes associated with each **final game result**.\n\n### What features in the dataset do you think will help support your investigation into your feature(s) of interest?\n\nI expect that factors like; rating difference between players, opening play, and whether the player plays as white or black, could have the most effect on the final result. It is also possible that different game ratings\/types have significant effect as the players adaptation to each type could be different.","1dbc51d6":"- Both game ratings have similar trends for victory status.\n- Haven't learnt much from the plot with groups of openings as each of these groups show the same trend of victory status.\n- Winning by checkmates takes, on average, more number of turns than that of games won by resigning; it can be seen from the higher median and the thicker distribution at higher number of turns.","57372d45":"Resigning the game occurs the most, mate is the second most and much less occurances of out of time  and draw games.<br>\n\nIt is not unusual that most of the games end with one of the players resigning because those games are played by the top 100 teams in Lichess, so they figure out when they lose before it actually happens by calculating next possible moves.<br>","9e636386":"Still left skewed distribution in log scale but with more resonable data points at both ends.","4b67ea9d":"# Chess Games Exploration\n## by Yasser Ali\n\n## Preliminary Wrangling\n\n> This is an exploratory anlaysis of a dataset containing informations about **over 20,000 games** collected from a selection of users on the site **[Lichess](https:\/\/www.lichess.org)**.","ab989b36":"### Talk about some of the relationships you observed in this part of the investigation. Were there features that strengthened each other in terms of looking at your feature(s) of interest?\n\nI investigated more the two factors, number of turns and players ratings, that showed the strongest variations with the winner and victory status and used them one by one with the other variables; game rating and opening groups. This multivariate investigation yielded some findings that were subtle before such as:\n\n\n* Blitz rating games are won more by white when he is more skilled than black with lower number of turns compared to rapid games. <br>\n\n* Despite the fact that openings of group E are rarely used by the winner, they are popular among players of higher ratings.<br>\n\n* For all opening groups, it takes higher number of turns to beat an opponent by checkmate than it takes for a win by resigning.<br>\n\n### Were there any interesting or surprising interactions between features?\n\nIt is interesting that white doesn't have more advantage over black or even different strategy despite that the player as white is the one who opens the game and player as black has to react to that opening. However, they both have  similar variations with all other variables with slight advantage for white who has wins at lower average number of turns and less average rating difference with the opponent.","65d8672e":"There are barely noticeable difference in values for each of these variables distribution against number of turns or rating difference. Number of turns tend to be higher in rapid rated games compared to blitz rating ones but blitz rating games are won more when difference in rating is higher. The openings with the highest number of turns are these of group E. ","07d3ac68":"**8. Number of Turns**","3fd6aa00":"**2. Rated?**","f1bb761a":"It takes black more number of turns, on average to win in each opening group and resigning from a game happens after less number of turns compared to checkmate in all opening groups.","ab451f8a":"The two distributions are similar; they both have a slight right skew due to small number of GM (Grand Master) players who have the highest ratings.<br>\n\nHowever, I'm more interested in the difference of rating between the two players. Let's see the difference distribution.","b49723b3":"There are 170 games in which one of the players resigned, and it is nearly impossible for the game to be finished in just 3 turns. It should be noted that it is an online game and there are many reasons for a player to resign a game and those reasons may mostly be unrelated to the game itself specially with such small number of turns. So those games are to be dropped from the dataset.","f8825e65":"How the winner win the game?"}}