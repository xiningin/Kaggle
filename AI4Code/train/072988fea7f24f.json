{"cell_type":{"ac5788c1":"code","772a6ef9":"code","ca9e8b19":"code","6936cc1c":"code","81d6df3b":"code","f51ce86b":"code","d9f678d0":"code","7b81f42c":"code","c151548a":"code","0c10b2ee":"code","f55166d3":"code","23b6f518":"code","fd8ca036":"markdown","fb91080e":"markdown","0d0ef58c":"markdown"},"source":{"ac5788c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport tensorflow \nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Conv2D\nimport matplotlib.pyplot as plt\nimport PIL.Image\n%matplotlib inline\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","772a6ef9":"letter1_df = pd.read_csv('..\/input\/classification-of-handwritten-letters\/letters.csv', delimiter=',')\nletter1_df.head(5)","ca9e8b19":"letter2_df = pd.read_csv('..\/input\/classification-of-handwritten-letters\/letters2.csv', delimiter=',')\nletter2_df.head(5)","6936cc1c":"letter3_df = pd.read_csv('..\/input\/classification-of-handwritten-letters\/letters3.csv', delimiter=',')\nletter3_df.head(5)","81d6df3b":"letters = pd.concat((letter1_df, letter2_df),axis=1)\nletters = pd.concat((letters, letter3_df),axis=1)\nletters.head(5)","f51ce86b":"letter_images = PIL.Image.open('..\/input\/classification-of-handwritten-letters\/LetterColorImages.h5')","d9f678d0":"len(letters)","7b81f42c":"letters.isna().sum()","c151548a":"letters = letters.fillna(0,axis=1)\nletters","0c10b2ee":"letters['letter']","f55166d3":"import seaborn as sns\ny = letters['label']\nX = letters.drop(['label'], axis=1)\nplt.figure(figsize=(10,5))\nplt.plot(X.count())","23b6f518":"from os.path import join\nimage_dir = ","fd8ca036":"Replacing NaN values with zero","fb91080e":"Checking the missing values here","0d0ef58c":"What all letters are there"}}