{"cell_type":{"9690137c":"code","8193527a":"code","90745800":"code","091e3477":"code","a512713f":"code","b1d943fe":"code","b8b997c3":"code","97e1880b":"code","64077180":"code","b18ddd9d":"code","a82e45b9":"code","114721ca":"code","74ff310c":"code","ee7b8e8d":"code","62da8425":"code","6c9ae967":"code","b7e0046d":"code","828856bd":"code","8b1768d7":"markdown","06dad085":"markdown","2d80adbf":"markdown","2c4803dc":"markdown","08ca1270":"markdown","81f9037e":"markdown","c6922dc2":"markdown","f7ac3eb7":"markdown","c73cc1b3":"markdown"},"source":{"9690137c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8193527a":"df=pd.read_csv('\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')\ndf.head()","90745800":"df.info()","091e3477":"import matplotlib.pyplot as plt\nimport seaborn as sns\nnumeric_index=['age','trestbps','chol','thalach','oldpeak']\ndf.hist(column=numeric_index, figsize=(10,30), layout=(5,1))\nplt.show()","a512713f":"plt.figure(figsize=(25,8))\ntotal = float(len(df) )\n\nax = sns.countplot(x=\"sex\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","b1d943fe":"plt.figure(figsize=(25,8))\ntotal = float(len(df) )\n\nax = sns.countplot(x=\"cp\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","b8b997c3":"plt.figure(figsize=(25,8))\ntotal = float(len(df) )\n\nax = sns.countplot(x=\"fbs\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","97e1880b":"plt.figure(figsize=(25,8))\ntotal = float(len(df) )\n\nax = sns.countplot(x=\"restecg\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","64077180":"plt.figure(figsize=(25,8))\ntotal = float(len(df) )\n\nax = sns.countplot(x=\"exang\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","b18ddd9d":"plt.figure(figsize=(12,10))\ntotal = float(len(df[\"target\"]) )\n\nax = sns.countplot(x=\"slope\", hue=\"target\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","a82e45b9":"plt.figure(figsize=(12,10))\ntotal = float(len(df[\"target\"]) )\n\nax = sns.countplot(x=\"thal\", hue=\"target\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","114721ca":"plt.figure(figsize=(12,10))\ntotal = float(len(df[\"target\"]) )\n\nax = sns.countplot(x=\"ca\", hue=\"target\", data=df)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","74ff310c":"x=df.drop(['target'],axis=1)\ny=df['target']","ee7b8e8d":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(x,y, test_size=0.3,random_state=0)","62da8425":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', random_state = 42,\n                                   max_features = 'auto', max_depth = 10)\nclassifier.fit(X_train, Y_train)","6c9ae967":"fitur=['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca','thal']\ntmp = pd.DataFrame({'Feature':fitur , 'Feature importance': classifier.feature_importances_})\ntmp = tmp.sort_values(by='Feature importance',ascending=False)\nplt.figure(figsize = (7,4))\nplt.title('Features importance',fontsize=14)\ns = sns.barplot(x='Feature',y='Feature importance',data=tmp)\ns.set_xticklabels(s.get_xticklabels(),rotation=90)\nplt.show()  ","b7e0046d":"from sklearn.metrics import confusion_matrix\npredicted = classifier.predict(X_test)\npredicted_proba = classifier.predict_proba(X_test)\n\nmatrix = confusion_matrix(Y_test, predicted)\nprint(matrix)","828856bd":"from sklearn.metrics import accuracy_score, make_scorer\nclassifier.fit(X_train, Y_train)\npredictions = classifier.predict(X_test)\naccuracy_score(y_true = Y_test, y_pred = predictions)","8b1768d7":"# Data Visualization","06dad085":"# Model Evaluation","2d80adbf":"# **Heart Attack**","2c4803dc":"From above the data there aren\u2019t missing\ndata (non-null)","08ca1270":"A heart attack is the death of a segment of heart muscle caused by a loss of blood supply. The blood is usually cut off when an artery supplying the heart muscle is blocked by a blood clot. If some of the heart muscle dies, a person experiences chest pain and electrical instability of the heart muscle tissue","81f9037e":"# Modelling","c6922dc2":"# Data Overview ","f7ac3eb7":"# Conclusion\nThe result of confusion matrix above by building the accuracy level in the model is 84.61%.","c73cc1b3":"# Table of Content\n1. Data Overview\n2. Data Visualization\n3. Modelling\n4. Model Evaluation\n5. Conclusion"}}