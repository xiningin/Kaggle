{"cell_type":{"16582436":"code","51497cad":"code","f927b710":"code","a863c3e7":"code","8de10f82":"code","e5f87b8d":"code","8accd3ea":"code","4872be65":"code","b61e3697":"code","bec0332a":"code","bc28b361":"code","1e61a861":"code","3de65bdc":"code","a063d4f6":"code","657964ab":"code","72b4ce14":"code","20d7c243":"code","a4647091":"code","3ba359c6":"code","7f88df5e":"code","23c035b2":"code","431b6762":"code","636b254f":"code","c7b46dd5":"code","193c3c02":"code","cc5cb297":"code","ca118b11":"code","0d4c4ab6":"code","12aedc8f":"code","ffbe5435":"code","db9fe346":"code","05f97358":"code","444099fb":"code","436b9af8":"markdown","5a30df41":"markdown","057b50be":"markdown","33bc4f76":"markdown","fb36d272":"markdown","3fddcabd":"markdown","33c5e6f4":"markdown"},"source":{"16582436":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport matplotlib.mlab as mlab\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","51497cad":"#Ler o arquivo e gravar no DataFrame\ndf = pd.read_csv('\/kaggle\/input\/hmeq-data\/hmeq.csv')","f927b710":"#Apresentar o cabe\u00e7alho e os 5 primeiros registros\ndf.head()","a863c3e7":"# Verificar quais s\u00e3o as colunas objetct\ndf.select_dtypes('object').head()","8de10f82":"# Analisando os registros  da coluna REASON\ndf['REASON'].value_counts()","e5f87b8d":"# Analisando os registros com os valores missing\npd.isnull(df).sum()","8accd3ea":"#Apresentar a quantidade de registros e colunas\ndf.shape","4872be65":"#Deletar os registros com dados nulos\ndf_all = (df.dropna(axis=0))","b61e3697":"#Verificar se ainda existe registros nulos\npd.isnull(df_all).sum()","bec0332a":"#Apresentar a quantidade de registros e colunas ap\u00f3s a exclus\u00e3o dos registros nulos\ndf_all.shape","bc28b361":"# Transformar os registros 'DebtCon' em 1 e 'HomeImp' em 0\n# Na coluna REASON\nmapeamento = { 'DebtCon': 1, 'HomeImp': 0}\n\ndf_all['REASON'] = df_all['REASON'].replace(mapeamento).astype(int)\n","1e61a861":"#Verificar a transforma\u00e7\u00e3o da coluna 'REASON'\ndf_all.head()","3de65bdc":"# Analisando os dados da coluna JOB\ndf['JOB'].value_counts()","a063d4f6":"# Transformar 'Other' em 0, 'ProfExe' em 1, 'Office'em 2, 'Mgr'em 3, 'Self'em 4, 'Sales' em 5\n# nas coluna JOB\nmapeamento = { 'Other': 0, 'ProfExe': 1, 'Office': 2, 'Mgr': 3, 'Self': 4, 'Sales': 5}\n\ndf_all['JOB'] = df_all['JOB'].replace(mapeamento).astype(int)","657964ab":"#Verificar a transforma\u00e7\u00e3o da coluna 'JOB'\ndf_all.head()","72b4ce14":"#Quantidade de registros por tipo de trabalho\ndf.groupby('JOB')['JOB'].count()","20d7c243":"#Descrever os dados quantitativos\ndf_all.describe()","a4647091":"import seaborn as sns\n\nsns.set_style('darkgrid')\nsns.distplot(df['YOJ'])","3ba359c6":"# Definindo as colunas para treinamento\nfeats = [c for c in df_all.columns if c not in ['BAD']]","7f88df5e":"#Apresentar as colunas\nfeats","23c035b2":"# importando a biblioteca para definir teste e treino\n\nfrom sklearn.model_selection import train_test_split","431b6762":"# Separar os dataframes\ntrain, test = train_test_split(df_all, random_state=42)\n\n","636b254f":"#Verificar a quantidade de registros de treino\nprint(\"Treino: \", train.shape)\nprint(\"Teste: \",test.shape)","c7b46dd5":"# Instanciando o random forest classifier utilizando 200 \u00e1rvores\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=200)","193c3c02":"# Treinando o modelo\nrf.fit(train[feats], train['BAD'])","cc5cb297":"# Gerar as predicoes do modelo com os dados de teste\npred_test = rf.predict(test[feats])","ca118b11":"#Import scikit-learn metrics module for accuracy calculation\nfrom sklearn import metrics\n# Apresentar a acur\u00e1cia do modelo\nprint(\"Accuracy:\",metrics.accuracy_score(test['BAD'], pred_test))\n\naccuracy = metrics.accuracy_score(test['BAD'], pred_test)","0d4c4ab6":"# Apresentar a balanced do modelo\nbalanced = balanced_accuracy_score(test['BAD'],pred_test)\nprint(\"Balanced:\",balanced)","12aedc8f":"# Apresentar a F1 score do modelo\nscore = f1_score(test['BAD'],pred_test)\nprint(\"f1 score:\",score)","ffbe5435":"# Apresentar as colunas por import\u00e2ncia\n(pd.Series(rf.feature_importances_, index=feats)\n   .nlargest(13)\n   .plot(kind='barh')) ","db9fe346":"#Importar as bibliotecas\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport scikitplot as skplt","05f97358":"#Apresentar a matriz de confus\u00e3o\nmatriz = confusion_matrix(test['BAD'], pred_test)\n\nmatriz","444099fb":"# Apresentar o gr\u00e1fico da matriz de confus\u00e3o\nskplt.metrics.plot_confusion_matrix(test['BAD'], pred_test)","436b9af8":"# Conclus\u00e3o\n\nO dataset analisado tem 13 atributos e 3364 registros. \nPara a avalia\u00e7\u00e3o dos modelos, o dataset foi divido aleatoriamente em um conjunto para treinamento e um conjunto para teste. \nFoi criado 0 classificador floresta de \u00e1rvores de decis\u00e3o gerada pelo algoritmo Random Forest. \nA acur\u00e1cia obtida foi de 95.4%.","5a30df41":"# Dicion\u00e1rio de dados\n\n* BAD: 1 = cliente inadimplente no empr\u00e9stimo 0 = empr\u00e9stimo reembolsado\n* LOAN: Montante do pedido de empr\u00e9stimo\n* MORTDUE: Valor devido da hipoteca existente\n* VALUE: Valor da propriedade atual\n* REASON: DebtCon = consolida\u00e7\u00e3o da d\u00edvida HomeImp = melhoria da casa\n* JOBS: Seis categorias ocupacionais\n* YOJ: Anos no emprego atual\n* DEROG: N\u00famero de principais relat\u00f3rios depreciativos\n* DELINQ: N\u00famero de linhas de cr\u00e9dito inadimplentes\n* CLAGE: Idade da linha comercial mais antiga em meses\n* NINQ: N\u00famero de linhas de cr\u00e9dito recentes\n* CLNO: N\u00famero de linhas de cr\u00e9dito\n* DEBTINC: R\u00e1cio d\u00edvida \/ rendimento","057b50be":"# Analise Explorat\u00f3ria\n\nA An\u00e1lise Explorat\u00f3ria de Dados consiste em analisar bases de dados e extrair informa\u00e7\u00f5es \u00fateis dos dados atrav\u00e9s de t\u00e9cnicas de visualiza\u00e7\u00f5es.","33bc4f76":"# **Introdu\u00e7\u00e3o**\n\nO presente trabalho tem o foco principal de implementar o modelo RandomForest para o conjunto de dados de Home Equity (HMEQ) e analisar se o modelo \u00e9 capaz de definir se \u00e9 um bom pagador ou n\u00e3o.\nSer\u00e1 utilizado a biblioteca **scikit-learn** *Random Forest Classifier*\n\n","fb36d272":"# Transforma\u00e7\u00e3o de Dados\n\nEssa etapa \u00e9 executada para transformar os dados originais em formatos mais apropriados e adequados para a aplica\u00e7\u00e3o do modelo:\n1. Trasnformar os dados object\n1. Retirar os registros missing : https:\/\/sigmoidal.ai\/como-tratar-dados-ausentes-com-pandas\/\n","3fddcabd":"# **INSTITUTO DE EDUCA\u00c7\u00c3O SUPERIOR DE BRAS\u00cdLIA - IESB**\n\n**TRABALHO FINAL DA MAT\u00c9RIA: ** Data Mining e Machine Learning II\n\n\n\n* **Professor: ** Marcos\n* **Campus: ** Asa Norte\n* **Aluna: ** La\u00eds A. de Souza","33c5e6f4":"# Modelo Random Forest\n\nRandom Forest \u00e9 um algoritmo de aprendizagem de m\u00e1quina flex\u00edvel e f\u00e1cil de usar que produz excelentes resultados a maioria das vezes, mesmo sem ajuste de hiperpar\u00e2metros.\n* https:\/\/medium.com\/machina-sapiens\/o-algoritmo-da-floresta-aleat%C3%B3ria-3545f6babdf8"}}