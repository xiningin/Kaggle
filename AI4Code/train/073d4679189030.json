{"cell_type":{"14a01c3d":"code","93069578":"code","08954731":"code","cd0be486":"code","249feacf":"code","56c9134a":"code","0076a322":"code","7ec8848d":"code","3e7d4f33":"code","b787b14d":"code","b0a5c90d":"code","fa998f45":"code","ba296300":"code","ff976b68":"code","c414278b":"code","252e683c":"code","b0aef8af":"code","b203882e":"code","dab4ae32":"code","05861be7":"code","b7742e0d":"code","190bc274":"code","ecc4b432":"code","63511d9c":"code","d036fb91":"code","b1ac6d57":"code","5daa2321":"code","95c9eeb6":"code","9d406ead":"code","b68c4be4":"code","3d43dfad":"code","b0dfea47":"code","daa184d4":"code","9c63491a":"code","6baa5176":"code","d6833887":"code","3068034d":"code","4cb29e6c":"code","301fb3c6":"markdown","ed15207a":"markdown","5c6a8c18":"markdown","eca2ea85":"markdown","dceafc49":"markdown","f1f9cab7":"markdown","d44319d6":"markdown"},"source":{"14a01c3d":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport zipfile\nimport numpy as np\nimport time\ntf.__version__","93069578":"image = tf.keras.preprocessing.image.load_img(r'\/kaggle\/input\/chest-xray-covid19-pneumonia\/Data\/train\/COVID19\/COVID19(0).jpg'\n                                              , target_size=(300,300))","08954731":"plt.imshow(image)","cd0be486":"train_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.resnet50.preprocess_input,\n                                   rotation_range = 50,\n                                   width_shift_range = 0.2,\n                                   height_shift_range = 0.2,\n                                   zoom_range = 0.1,\n                                   horizontal_flip = True,\n                                   vertical_flip = True)","249feacf":"train_generator = train_datagen.flow_from_directory('\/kaggle\/input\/chest-xray-covid19-pneumonia\/Data\/train\/',\n                                                    target_size = (300, 300),\n                                                    batch_size=50,\n                                                    class_mode = 'categorical',\n                                                    shuffle = True)","56c9134a":"step_size_train = train_generator.n \/\/ train_generator.batch_size\nstep_size_train","0076a322":"test_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.resnet50.preprocess_input)","7ec8848d":"test_generator = test_datagen.flow_from_directory('\/kaggle\/input\/chest-xray-covid19-pneumonia\/Data\/test\/',\n                                                  target_size=(300,300),\n                                                  batch_size=1,\n                                                  class_mode = 'categorical',\n                                                  shuffle = False)","3e7d4f33":"step_size_test = test_generator.n \/\/ test_generator.batch_size\nstep_size_test","b787b14d":"base_model = tf.keras.applications.ResNet50(weights='imagenet', include_top=False)","b0a5c90d":"x = base_model.output","fa998f45":"x = tf.keras.layers.GlobalAveragePooling2D()(x)","ba296300":"x = tf.keras.layers.Dense(1024, activation='relu')(x)\nx = tf.keras.layers.Dense(1024, activation='relu')(x)\nx = tf.keras.layers.Dense(512, activation='relu')(x)\npreds = tf.keras.layers.Dense(3, activation='softmax')(x)","ff976b68":"model = tf.keras.Model(inputs = base_model.input, outputs = preds)","c414278b":"model.summary()","252e683c":"for i, layer in enumerate(model.layers):\n  print(i, layer.name)","b0aef8af":"for layer in model.layers[:175]:\n  layer.trainable = False","b203882e":"for layer in model.layers[175:]:\n  layer.trainable = True ","dab4ae32":"model.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])","05861be7":"start = time.time()\nhistory = model.fit_generator(generator=train_generator,\n                              epochs=20,\n                              steps_per_epoch=step_size_train,\n                              validation_data = test_generator,\n                              validation_steps=step_size_test)\nend = time.time()\nprint(\"Execution time on GPU: \", (end - start))","b7742e0d":"np.mean(history.history['val_accuracy'])","190bc274":"np.std(history.history['val_accuracy'])","ecc4b432":"plt.plot(history.history['loss'], label='Training loss')\nplt.plot(history.history['val_loss'], label='Validation loss')\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend();","63511d9c":"plt.plot(history.history['accuracy'], label='Training accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation accuracy')\nplt.title('Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend();","d036fb91":"filenames = test_generator.filenames\n","b1ac6d57":"len(filenames)","5daa2321":"predictions = model.predict_generator(test_generator, steps = len(filenames))","95c9eeb6":"predictions2 = []\nfor i in range(len(predictions)):\n  predictions2.append(np.argmax(predictions[i]))","9d406ead":"from sklearn.metrics import accuracy_score, confusion_matrix\naccuracy_score(predictions2, test_generator.classes)","b68c4be4":"cm = confusion_matrix(predictions2, test_generator.classes)\nsns.heatmap(cm, annot=True)","3d43dfad":"from sklearn.metrics import f1_score\n","b0dfea47":"f1_score(predictions2, test_generator.classes, average='micro')","daa184d4":"f1_score(predictions2, test_generator.classes, average='macro')","9c63491a":"f1_score(predictions2, test_generator.classes, average='weighted')","6baa5176":"def pred(image):\n    image = tf.keras.preprocessing.image.img_to_array(image)\n    image = np.expand_dims(image, axis = 0)\n    image = tf.keras.applications.resnet50.preprocess_input(image)\n    predictions = model.predict(image)\n    prediction = list(train_generator.class_indices)[np.argmax(predictions[0])]\n    \n    return prediction","d6833887":"image = tf.keras.preprocessing.image.load_img(r'\/kaggle\/input\/chest-xray-covid19-pneumonia\/Data\/test\/PNEUMONIA\/PNEUMONIA(3422).jpg', target_size=(224,224))\nplt.imshow(image);","3068034d":"res = pred(image)\nres","4cb29e6c":"model.save('chest_xray_model_91acc.h5') ","301fb3c6":"# Evaluation","ed15207a":"Prediction with one image","5c6a8c18":"# Convolutional neural networks to detect lung disease in Chest X-ray images\n\n> Dataset avaliable in: https:\/\/www.kaggle.com\/prashant268\/chest-xray-covid19-pneumonia","eca2ea85":"F1 score","dceafc49":"# Saving a model","f1f9cab7":"# Fine Tuning\n\nThe pre-trained model is trained with a different dataset, therefore to train with the new dataset we need to fine tune the pre-trained model. The new dataset could be almost similar to the original dataset used for pre-training, or it could be a totally different one.\n\nThis is the step where we perform freezing of specific layers of our pre-trained vgg model.\nFreezing of layers means switching the layers into non-trainable mode, which means the weights of these frozen layers would not be updated during back propagation.","d44319d6":"- average=micro says the function to compute f1 by considering total true positives, false negatives and false positives (no matter of the prediction for each label in the dataset)\n- average=macro says the function to compute f1 for each label, and returns the average without considering the proportion for each label in the dataset.\n- average=weighted says the function to compute f1 for each label, and returns the average considering the proportion for each label in the dataset.\n- average=samples says the function to compute f1 for each instance, and returns the average. Use it for multilabel classification."}}