{"cell_type":{"7e47b4cb":"code","cd8621c2":"code","0b603833":"code","1713d2e2":"code","5181db5b":"code","67fa7ca8":"code","6e8eb365":"code","1a8cf0e5":"code","57ae83f2":"markdown"},"source":{"7e47b4cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cd8621c2":"# Constants\nINPUT_DIR = '\/kaggle\/input'\n# Any results you write to the current directory are saved as output.\nOUTPUT_DIR = '.\/'\nDATASET = 'crash_data.csv'","0b603833":"# Load dataset into dataframe\ndataframe = pd.read_csv(os.path.join(INPUT_DIR, DATASET))\ndataframe.shape","1713d2e2":"# Show dataframe\ndataframe.head()","5181db5b":"# Create a geodataframe from dataframe\ngeodataframe = gpd.GeoDataFrame(dataframe, geometry=gpd.points_from_xy(dataframe.lng, dataframe.lat))\ngeodataframe.shape","67fa7ca8":"# Show geodataframe\ngeodataframe.head()","6e8eb365":"# Plot the coordinates over a country-level map\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n\n# We restrict to United States of America\nax = world[world.name == 'United States of America'].plot(\n    color='white', edgecolor='black')\n\n# We can now plot our GeoDataFrame\ngeodataframe.plot(ax=ax, color='red')\n\n# Save PNG image\nplt.savefig(os.path.join(OUTPUT_DIR, 'crash_data.png'))\n\n# Plot GeoDataFrame\nplt.show()","1a8cf0e5":"# Save GeoJSON from GeoDataFrame\ngeodataframe.to_file(os.path.join(OUTPUT_DIR, 'crash_data.geojson'), driver='GeoJSON')","57ae83f2":"# CSV to GeoJSON\nThis is an example to show how we can use pandas and geopandas to transform CSV file to GeoJSON file"}}