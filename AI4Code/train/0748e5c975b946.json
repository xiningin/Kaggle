{"cell_type":{"28d3a0df":"code","8b693199":"code","d7524f0f":"code","35c855a3":"code","984e6a8f":"code","d716dc7d":"code","76643f29":"code","b668725b":"code","e2bdfdd4":"code","56009af3":"code","7ce5a526":"code","ca6237a0":"code","a06cadf7":"code","53cd7e56":"code","8b4fb446":"code","f2267e18":"code","2c76ff17":"code","634bd5a0":"code","1845b8f4":"code","0068f752":"code","99650725":"code","ae8a1ac2":"code","9fe0c888":"code","a26a5308":"markdown","946ab915":"markdown","1abe51df":"markdown","acdc1683":"markdown","18b8d3dd":"markdown","c014dd63":"markdown","8b4d5326":"markdown","6b70e14c":"markdown","f2f75c75":"markdown","59e9645e":"markdown","37ce924a":"markdown","b13c8b6a":"markdown","f52246c6":"markdown","0efa4e3a":"markdown","4a84f587":"markdown","eb9d550f":"markdown"},"source":{"28d3a0df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport statsmodels.api as sm\nfrom statsmodels.tools import add_constant as add_constant\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom imblearn.over_sampling import SMOTE\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8b693199":"df = pd.read_csv(\"\/kaggle\/input\/framingham-heart-study-dataset\/framingham.csv\")\ndf.info()","d7524f0f":"100* df.isnull().sum()\/df.count()","35c855a3":"df.dropna(inplace=True)","984e6a8f":"df.head()","d716dc7d":"print(\"Percentage of People with heart disease: {0:.2f} %\".format(100*df.TenYearCHD.value_counts()[1]\/df.TenYearCHD.count()))","76643f29":"df = pd.concat([df, pd.get_dummies(df.education, prefix=\"ed_\",drop_first=True)],axis=1)\ndf.drop(['education'], axis=1, inplace=True)\ndf.columns","b668725b":"X = df.drop(['TenYearCHD'], axis=1)\nY = df.TenYearCHD\n\nX_const=sm.add_constant(X)\nmodel=sm.Logit(Y, X_const)\nresult=model.fit()\nresult.summary()","e2bdfdd4":"def back_feature_elim(data_frame,dep_var,col_list):\n    \"\"\" Takes in the dataframe, the dependent variable and a list of column names, runs the regression repeatedly eliminating\n    feature with the highest p-value above alpha(0.05) one at a time and returns the regression summary with all \n    p-values below alpha\"\"\"\n\n    while len(col_list)>0 :\n        model=sm.Logit(dep_var,data_frame[col_list])\n        result=model.fit(disp=0)\n        largest_pvalue=round(result.pvalues,3).nlargest(1)\n        if largest_pvalue[0]<(0.05):\n            return result\n            break\n        else:\n            col_list=col_list.drop(largest_pvalue.index)","56009af3":"result=back_feature_elim(df,df.TenYearCHD, X.columns)\nresult.summary()","7ce5a526":"params = np.exp(result.params)\nconf = np.exp(result.conf_int())\nconf['OR'] = params\npvalue=round(result.pvalues,3)\nconf['pvalue']=pvalue\nconf.columns = ['CI 95%(2.5%)', 'CI 95%(97.5%)', 'Odds Ratio','pvalue']\nprint ((conf))","ca6237a0":"new_df=df[['male','age','cigsPerDay','prevalentHyp','diabetes','sysBP','diaBP','BMI','heartRate','ed__2.0','ed__3.0','ed__4.0',\n           'TenYearCHD']]\nX = new_df.drop(['TenYearCHD'], axis=1)\nY = new_df.TenYearCHD\nx_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.3,random_state=5)","a06cadf7":"logreg=LogisticRegression()\nlogreg.fit(x_train,y_train)\ny_pred=logreg.predict(x_test)","53cd7e56":"sklearn.metrics.accuracy_score(y_test,y_pred)","8b4fb446":"cm = confusion_matrix(y_test,y_pred)\nprint(cm)","f2267e18":"TN=cm[0,0]\nTP=cm[1,1]\nFN=cm[1,0]\nFP=cm[0,1]\nsensitivity=TP\/float(TP+FN)\nspecificity=TN\/float(TN+FP)","2c76ff17":"print('The accuracy of the model [TP+TN\/(TP+TN+FP+FN)] = ',(TP+TN)\/float(TP+TN+FP+FN),'\\n',\n\n'Missclassification [1-Accuracy] = ',1-((TP+TN)\/float(TP+TN+FP+FN)),'\\n',\n\n'Sensitivity or True Positive Rate [TP\/(TP+FN)] = ',TP\/float(TP+FN),'\\n',\n\n'Specificity or True Negative Rate [TN\/(TN+FP)] = ',TN\/float(TN+FP),'\\n')","634bd5a0":"smt = SMOTE()\nx_train, y_train = smt.fit_sample(x_train, y_train)","1845b8f4":"np.bincount(y_train)","0068f752":"logreg.fit(x_train,y_train)\ny_pred=logreg.predict(x_test)","99650725":"print(sklearn.metrics.accuracy_score(y_test,y_pred))\ncm = confusion_matrix(y_test,y_pred)\nprint(cm)","ae8a1ac2":"TN=cm[0,0]\nTP=cm[1,1]\nFN=cm[1,0]\nFP=cm[0,1]\nsensitivity=TP\/float(TP+FN)\nspecificity=TN\/float(TN+FP)","9fe0c888":"print('The accuracy of the model [TP+TN\/(TP+TN+FP+FN)] = ',(TP+TN)\/float(TP+TN+FP+FN),'\\n',\n\n'Missclassification [1-Accuracy] = ',1-((TP+TN)\/float(TP+TN+FP+FN)),'\\n',\n\n'Sensitivity or True Positive Rate [TP\/(TP+FN)] = ',TP\/float(TP+FN),'\\n',\n\n'Specificity or True Negative Rate [TN\/(TN+FP)] = ',TN\/float(TN+FP),'\\n')","a26a5308":"Inferences from the above table<br>\n* Odds of getting diagnosed with heart disease for males is higher by 49.69% than females\n* Odds of getting diagnosed with heart disease increases by 2.83% every year.\n* Odds of getting diagnosed with heart disease increases by 1.42% with every additional cigarette\nand so on...","946ab915":"We will use statsmodels' Logit funtion to perform logistic regression so that we get a clear picture of p-values , so that we find out statistically significant variables.","1abe51df":"#### Columns\/Variables Explained:\n* **sex**: male or female (male=1)\n* **age**: age of the patient;(Continuous - Although the recorded ages have been truncated to whole numbers, the concept of age is continuous)\n* **education**: 1 = Some High School; 2 = High School or GED; 3 = Some College or Vocational School; 4 = college\n* **currentSmoker**: whether or not the patient is a current smoker (current smoker=1)\n* **cigsPerDay**: the number of cigarettes that the person smoked on average in one day.\n* **BPMeds**: whether or not the patient was on blood pressure medication (on BP medication = 1)\n* **prevalentStroke**: whether or not the patient had previously had a stroke (previous stroke = 1)\n* **prevalentHyp**: whether or not the patient was hypertensive (hypertensive = 1)\n* **diabetes**: whether or not the patient had diabetes (diabetes = 1)\n* **totChol**: total cholesterol level.\n* **sysBP**: systolic blood pressure.\n* **diaBP**: diastolic blood pressure.\n* **BMI**: Body Mass Index.\n* **heartRate**: heart rate.\n* **glucose**: glucose level\n* **TenYearCHD**: 10 year risk of coronary heart disease CHD (yes=1)","acdc1683":"Let's create dummy variables for education.","18b8d3dd":"There are lot of columns which are statistically insignificant. (p-value>0.05). We remove these columns in the next step","c014dd63":"The classification goal is to predict whether the patient has 10-year risk of future coronary heart disease (CHD).","8b4d5326":"As we can see, True Negatives rate is very high (since, the dataset had around 85% No Heart Disease). Because of this, our model was not able to learn much of Positives","6b70e14c":"Since the percentage of nulls is very less, let's drop those rows.","f2f75c75":"Let's remove statistically insignificant columns and run logistic regression again","59e9645e":"Find out percentage of nulls","37ce924a":"\nThe confusion matrix shows 621+104 = 805 correct predictions and 322+51= 373 incorrect ones.\n\nTrue Positives: 104\n\nTrue Negatives: 621\n\nFalse Positives: 322 (Type I error)\n\nFalse Negatives: 51 ( Type II error)","b13c8b6a":"**Since we are dealing with Predicting heart disease, Higher value of false negatives is dangerous. <br>\nFalse Negative = There is Heart Disease, but we predict it wrongly as No Heart Disease. **","f52246c6":"There seems to be an Imbalance in data with respect to TenYearCHD. Only 15.23% rows have Positive value. We will first go ahead with the imbalance and see if it affects our analysis.","0efa4e3a":"As we can see, True positive rate has increased since we have balanced the data now(increasing Positive samples). Also, we were worried about False Negatives. This has decreased from 147 to 51 which is a good sign. Now our model will have lesser Type II errors.","4a84f587":"\n\nThe confusion matrix shows 937+8 = 945 correct predictions and 147+6= 153 incorrect ones.\n\nTrue Positives: 8\n\nTrue Negatives: 937\n\nFalse Positives: 6 (Type I error)\n\nFalse Negatives: 147 ( Type II error)","eb9d550f":"Now that we have the dataset all cleaned up, Let's split the dataset with statistically significant columns in the ratio train:test=70:30"}}