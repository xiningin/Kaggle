{"cell_type":{"ff4f0947":"code","8ea02d20":"code","5a5627ea":"code","25e2892b":"code","954d0747":"code","8cf554a7":"code","3f781831":"markdown"},"source":{"ff4f0947":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8ea02d20":"nfl_df = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv')\nnfl_df.head()","5a5627ea":"import matplotlib.pyplot as plt","25e2892b":"def position_marker(position):\n    position_map = {\n        'SS': \".\",\n        'DE': \",\",\n        'ILB': \"o\",\n        'FS': \"v\",\n        'CB': \"^\",\n        'DT': \"<\",\n        'WR': \">\",\n        'TE': \"1\",\n        'T': \"2\",\n        'QB': \"3\",\n        'RB': \"4\",\n        'G': \"8\",\n        'C': \"s\",\n        'OLB': \"p\",\n        'NT': \"P\",\n        'FB': \"*\",\n        'MLB': \"h\",\n        'LB': \"H\",\n        'OT': \"+\",\n        'OG': \"x\",\n        'HB': \"X\",\n        'DB': \"D\",\n        'S': \"d\",\n        'DL': \"|\",\n        'SAF': \"_\"\n    }\n    return position_map[position]","954d0747":"def prepare_field_plot():\n    plt.figure(figsize=(4 * 5.9602649, 4 * 2.5000000))\n\n    # play.plot.scatter(x='X',  y='Y', c=colors)\n    plt.xlim(0, 120)\n    plt.ylim(0, 53 + 1\/3)\n\n    # Vertical lines form 10-th yard to 110-th spaced for 5 yards\n    for p in range(10, 115, 5):\n        plt.axvline(p, c=\"#D3D3D3D3\")\n\n    plt.xticks(range(20, 110, 10), [10, 20, 30, 40, 50, 40, 30, 20, 10])\n    plt.yticks([])\n","8cf554a7":"prepare_field_plot()\n\nplay = nfl_df[nfl_df['PlayId'] == nfl_df['PlayId'][np.random.randint(0, len(nfl_df))]]\n\nfor i, player in play.iterrows():\n    # Offense team RED, defense team BLUE\n    if (player.HomeTeamAbbr == player.PossessionTeam):\n        if (player.Team ==  'home'):\n            p_color = 'red'\n        else:\n            p_color = 'blue'\n    else:\n        if (player.Team ==  'home'):\n            p_color = 'blue'\n        else:\n            p_color = 'red'\n    \n    p_marker = position_marker(player.Position)\n    plt.scatter(player.X, player.Y, c=p_color, marker=p_marker)\n    pass\n\nplt.show()","3f781831":"# NFL GamePlay Visualization\n\nThe main objective of this notebook is to provide a simple and quick way to visualize how the play happens. The players are plot on the field based on their positions and roles. The team are distiguished based on the possession of the ball. The team with the is red and the team in defense is blue."}}