{"cell_type":{"e484b7d1":"code","b18a9741":"code","f2f4c627":"code","6923bb4a":"code","792baeed":"code","a46e0063":"code","8cfe134f":"code","faa4cded":"code","81488544":"code","5db793a3":"code","14b92ed4":"code","85d4e12d":"code","99996fd9":"code","bd90587f":"code","080d584e":"code","436da531":"code","33c5d5b8":"code","631d6035":"code","4b43daab":"code","78e7e42b":"code","1c28bde6":"code","f907ff2f":"code","ffc5ad2a":"code","99596bd1":"code","aac477a8":"code","81257dde":"code","084780b1":"code","7bb7e871":"code","a6d215b4":"code","f36ec476":"code","6ff76e5b":"code","568150bc":"code","5ba4faf0":"code","52fe3cad":"code","791d0792":"markdown","5c5ccce3":"markdown","1cd05913":"markdown","cd87eed2":"markdown","3f66cde5":"markdown","9d8cc956":"markdown","672c7d11":"markdown","2c28962c":"markdown","9d18f349":"markdown","c5a8cd43":"markdown","0d5ba7da":"markdown","5d23e84f":"markdown","fdf82e79":"markdown","01bcae04":"markdown","6ee0155f":"markdown","30a182ef":"markdown","1c60f89f":"markdown","c12ff5d8":"markdown","c16f1339":"markdown","6c6064bf":"markdown","1b3e5432":"markdown","abc97096":"markdown","7b52f23c":"markdown","9352181d":"markdown","8e9aa751":"markdown","2164b81c":"markdown","83f7e813":"markdown","989f5671":"markdown","04928162":"markdown","2e26d448":"markdown","4977df05":"markdown"},"source":{"e484b7d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b18a9741":"import pandas as pd\nimport matplotlib.pyplot as plt","f2f4c627":"pd.options.display.float_format = '{:,.2f}'.format\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()","6923bb4a":"data = pd.read_csv('..\/input\/cost-revenue-dirty\/cost_revenue_dirty.csv')","792baeed":"data.shape","a46e0063":"data.isna().values.any()","8cfe134f":"data.duplicated().values.any()","faa4cded":"data.info()","81488544":"data.head()","5db793a3":"remove_char=[',', '$']\ncolumns=['USD_Production_Budget', 'USD_Worldwide_Gross', 'USD_Domestic_Gross']\nfor col in columns:\n    for char in remove_char:\n        data[col] = data[col].astype(str).str.replace(char,'')\n    data[col]=pd.to_numeric(data[col])\ndata.head()","14b92ed4":"data['Release_Date'] = pd.to_datetime(data.Release_Date)","85d4e12d":"data.info()","99996fd9":"data.describe()","bd90587f":"data[data.USD_Production_Budget==1100]","080d584e":"data[data.USD_Production_Budget==425000000]","436da531":"data[data.USD_Domestic_Gross==0].sort_values('USD_Production_Budget', ascending=False)","33c5d5b8":"data[data.USD_Worldwide_Gross==0].sort_values('USD_Production_Budget', ascending=False)","631d6035":"# international_releases = data.loc[(data.USD_Domestic_Gross == 0) & \n#                                   (data.USD_Worldwide_Gross != 0)]\ninternational_releases = data.query('USD_Domestic_Gross == 0 and USD_Worldwide_Gross != 0')\nprint(f'Number of international releases: {len(international_releases)}')\ninternational_releases.tail()","4b43daab":"scrape_date = pd.Timestamp('2018-5-1')","78e7e42b":"future_releases = data[data.Release_Date >= scrape_date]\nprint(len(future_releases))","1c28bde6":"data_clean = data.drop(future_releases.index)\ndata_clean","f907ff2f":"(len(data_clean[data_clean.USD_Production_Budget > data_clean.USD_Worldwide_Gross])\/len(data_clean))*100","ffc5ad2a":"import seaborn as sns","99596bd1":"plt.figure(figsize=(8,4), dpi=200)\nwith sns.axes_style('darkgrid'):\n  ax = sns.scatterplot(data=data_clean,\n                      y='USD_Production_Budget',\n                      x='Release_Date',\n                      hue='USD_Worldwide_Gross',\n                      size='USD_Worldwide_Gross')\n  ax.set(ylim=(0, 450000000),\n         xlim=(data_clean.Release_Date.min(), data_clean.Release_Date.max()),\n        xlabel='Year',\n        ylabel='Budget in $100 millions')\nplt.show()\n                        ","aac477a8":"dt_index = pd.DatetimeIndex(data_clean.Release_Date)\nyears = dt_index.year\ndecades = years\/\/10*10\ndata_clean['Decade'] = decades\ndata_clean.head()","81257dde":"old_films = data_clean[data_clean.Decade < 1970]\nold_films.describe()","084780b1":"new_films = data_clean[data_clean.Decade >=1970]\nnew_films.describe()","7bb7e871":"plt.figure(figsize=(8,4), dpi=200)\nwith sns.axes_style('darkgrid'):\n  ax=sns.regplot(data=old_films,\n              x='USD_Production_Budget',\n              y='USD_Worldwide_Gross',\n              color='#2f4b7c',\n              scatter_kws = {'alpha': 0.3},\n              line_kws = {'color': '#ff7c43'})\n  ax.set(title='Old Films Revenue vs Budget',\n         ylim=(0, 400000000),\n         xlim=(0, 45000000),\n         ylabel='Revenue in $100 millions',\n         xlabel='Budget in $10 millions')","a6d215b4":"plt.figure(figsize=(8,4), dpi=200)\nwith sns.axes_style('darkgrid'):\n  ax=sns.regplot(data=new_films,\n              x='USD_Production_Budget',\n              y='USD_Worldwide_Gross',\n              color='#2f4b7c',\n              scatter_kws = {'alpha': 0.3},\n              line_kws = {'color': '#ff7c43'})\n  ax.set(title='New Films Revenue vs Budget',\n         ylim=(0, 3000000000),\n         xlim=(0, 450000000),\n         ylabel='Revenue in $ billions',\n         xlabel='Budget in $100 millions')","f36ec476":"from sklearn.linear_model import LinearRegression\nregression = LinearRegression()","6ff76e5b":"x=pd.DataFrame(new_films, columns=['USD_Production_Budget'])\ny=pd.DataFrame(new_films, columns=['USD_Worldwide_Gross'])\nregression.fit(x,y)","568150bc":"print(f'The slope coefficient is: {regression.coef_[0]}')\nprint(f'The intercept is: {regression.intercept_[0]}')\nprint(f'The r-squared is: {regression.score(x,y)}')","5ba4faf0":"-8650768.006610274 + 3.12259592 * 350000000","52fe3cad":"budget = 350000000\nrevenue_estimate = regression.intercept_[0] + regression.coef_[0,0]*budget\nrevenue_estimate = round(revenue_estimate, -6)\nprint(f'The estimated revenue for a $350 film is around ${revenue_estimate:.10}.')","791d0792":"## Data Type Conversions","5c5ccce3":"Revenue of the lowest budget films","1cd05913":"The percentage of fims where the production costs exceeded the worldwide gross revenue","cd87eed2":"### Films released over time ","3f66cde5":"### Separate the \"old\" (before 1969) and \"new\" (1970s onwards) films","9d8cc956":"## Investigating the Zero Revenue Films","672c7d11":"## Descriptive Statistics","2c28962c":"## Seaborn Regression Plots","9d18f349":"## Notebook Predentation","c5a8cd43":"$$ REV \\hat ENUE = \\theta _0 + \\theta _1 BUDGET$$","0d5ba7da":"## Converting Release Date to Decades","5d23e84f":"Add a new column of Decade to `data_clean` DataFrame","fdf82e79":"### Filtering with multiple conditions","01bcae04":"Convert the `USD_Production_Budget`, `USD_Worldwide_Gross`, and `USD_Domestic_Gross` columns to a numeric format by removing $ signs and ,. ","6ee0155f":"Films grossed $0 internationally ","30a182ef":"Films grossed $0 domestically and the films with the highest budget that grossed nothing","1c60f89f":"**Example**:  How much global revenue does our model estimate for a film with a budget of $350 million? ","c12ff5d8":"## Use Model to Make a Prediction","c16f1339":"Identify which films were not released yet as of the time of data collection (May 1st, 2018) then create another DataFrame excludes these films.","6c6064bf":"Revenue of the highest budget films","1b3e5432":"Run linear regression for the `new_films`. Calculate the intercept, slope and r-squared. ","abc97096":"Convert the `Release_Date` column to a Pandas Datatime type","7b52f23c":"Create a subset for international releases that had some worldwide gross revenue, but made zero revenue domestically","9352181d":"### Films that Lost money","8e9aa751":"## Read the data","2164b81c":"We just estimated the slope and intercept! Remember that our Linear Model has the following form:\n\n$$ REV \\hat ENUE = \\theta _0 + \\theta _1 BUDGET$$","83f7e813":"# Introduction\n\nDo higher film budgets lead to more box office revenue? Let's find out if there's a relationship using the movie budgets and financial performance data that I've scraped from [the-numbers.com](https:\/\/www.the-numbers.com\/movie\/budgets) on **May 1st, 2018**. \n\n<img src=https:\/\/i.imgur.com\/kq7hrEh.png>","989f5671":"## Seaborn for Data Vizualization: Bubble Charts","04928162":"### Unreleased Films ","2e26d448":"## Explore and Clean data","4977df05":"## Run Regression with Scikit-learn"}}