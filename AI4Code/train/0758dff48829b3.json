{"cell_type":{"42c23016":"code","10bf34ee":"code","f422a625":"code","b63d1cd8":"code","3e8d7b60":"code","38968b9c":"code","d5573326":"code","c13f22f3":"code","05742e1a":"code","ebae555a":"code","369bc27d":"code","61a91219":"code","4438f4b6":"code","5c1ff139":"code","909dd0cc":"code","f6b3d190":"code","1d35c0c0":"code","e16e9a18":"code","99f0b41e":"code","308f5244":"code","1539eb4a":"code","711a8df5":"code","dba55d6f":"code","d1b4e1a7":"code","3334ce2e":"code","fc54895b":"code","28485f53":"code","1ce24cb4":"code","8deaabfa":"code","937af401":"code","1d1ef963":"code","ccbe8ff4":"code","6c149414":"code","f1b74640":"code","95527367":"code","55c6522b":"code","577b72aa":"code","1f4968c8":"code","39a2da0c":"code","4e1047da":"code","fdaba2de":"code","7361a71b":"code","1f3cab2e":"code","434f0546":"code","e6761f59":"code","5105c810":"code","405b5ff6":"code","84833bd9":"code","d9ccd6dd":"code","aef49461":"code","c10fff81":"code","a82b78eb":"code","82b95cd3":"code","98ff6148":"code","67e001ee":"code","62e805ac":"markdown"},"source":{"42c23016":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","10bf34ee":"# Task 1: Import a 311 NYC service request\ndata=pd.read_csv(\"..\/input\/nyc-311-customer-service-requests-analysis\/NYC311data.csv\")","f422a625":"data.head()","b63d1cd8":"data.columns","3e8d7b60":"data.isna().sum()","38968b9c":"data[data['Complaint Type']=='Animal in a Park']","d5573326":"data.drop(labels=283132, axis=0, inplace=True)","c13f22f3":"# Task 2: Read or convert the columns \u2018Created Date\u2019 and Closed Date\u2019 to datetime datatype and create a new column \u2018Request_Closing_Time\u2019 \n#as the time elapsed between request creation and request closing.","05742e1a":"data['Created Date']= pd.to_datetime(data['Created Date'])","ebae555a":"data['Closed Date']= pd.to_datetime(data['Closed Date'])","369bc27d":"data['Request_Closing_Time']= data['Closed Date'].values-data['Created Date'].values","61a91219":"data['Request_Closing_Time_mins'] = data['Request_Closing_Time']\/np.timedelta64(1,'m')","4438f4b6":"data.head()","5c1ff139":"data.info()","909dd0cc":"# Provide major insights\/patterns that you can offer in a visual format (graphs or tables); \n#at least 4 major conclusions that you can come up with after generic data mining.","f6b3d190":"data['Complaint Type'].unique()","1d35c0c0":"# Conclusion 1: City with maximum number of complaints was found to be Brooklyn with different types of complaints\ndf1=data.groupby(['City','Complaint Type']).size().unstack().fillna(0)","e16e9a18":"df1.plot.bar(figsize=(15,10), stacked=True)\nplt.ylabel('Number of Complaints')\nplt.title('Number of complaints vs. City')","99f0b41e":"data.Status.unique()","308f5244":"df2=data.groupby(['City','Status']).size().unstack().fillna(0)","1539eb4a":"# Conclusion 2: Based upon the status of complaints it can be inferred that maximum number of complaints were resolved.\n# From the total unresolved cases the top 5 cities have been found which sum upto 76.92 % of total Open cases\ndf2.sort_values(by='Open', ascending=False).head() # Thus maximum pending cases are in New york","711a8df5":"df2['Unresolved_percentage']= df2['Open']\/df2['Open'].sum()*100","dba55d6f":"df2.sort_values(by='Unresolved_percentage', ascending=False).head().sum()","d1b4e1a7":"# Conclusion 3: Since maximum number of complaints were filed in Brooklyn, complaint data was analysed for this city.\n# Blocked Driveway was found to be the most frequent complaint lodged to NYPD in the city of Brooklyn.\ndata.loc[(data['City']=='BROOKLYN'),:]['Complaint Type'].value_counts()\nplot_3= sns.countplot(x=data.loc[data.City=='BROOKLYN']['Complaint Type'], palette='YlOrRd_r')\nplot_3.set_xticklabels(plot_3.get_xticklabels(), rotation=90)","3334ce2e":"# Conclusion 4: It was found that al the complaints were lodged to New York Police Department\ndf3=data.groupby(['Agency Name','Complaint Type']).size().unstack().head(50)\ndf3.plot.bar(figsize=(8,8))","fc54895b":"data['Location Type'].unique()","28485f53":"data['Location Type'].value_counts()","1ce24cb4":"# Conclusion 5: The maximum complaints were regarding Street and Sidwalk which indicate that \n# there is a scope for improvement in strict measures on the road thus Traffic police can look into this matter\ndata['Location Type'].fillna(value='Street\/Sidewalk',inplace=True)","8deaabfa":"plt.figure(figsize=(10,5))\nplot_4 =sns.countplot(data['Location Type'])\nplot_4.set_xticklabels(plot_4.get_xticklabels(), rotation=90)","937af401":"# Conclusion 6: Major Complaint types and their count\ndf4= data['Complaint Type'].value_counts().head(10)\ndf4.nlargest().index","1d1ef963":"df4","ccbe8ff4":"plt.figure(figsize=(5,5))\nplot_5= sns.barplot(x=df4.nlargest().index, y= df4.nlargest().values)\nplot_5.set_xticklabels(plot_5.get_xticklabels(), rotation=90)","6c149414":"data.Request_Closing_Time_mins.head()","f1b74640":"# Conclusion 7: Average resolving time of a compalaint was observed for different Boroughs\nplt.figure(figsize=(8,7))\nsns.barplot(x='Borough', y='Request_Closing_Time_mins', data=data)\nplt.title('Average Request Closing Time for Boroughs')","95527367":"# Conclusion 7: Average Request Closing Time for various Compaints\ndf7=data[['Complaint Type', 'Request_Closing_Time_mins']]\ndf8=df7.groupby('Complaint Type')['Request_Closing_Time_mins'].mean().fillna(0).to_frame()","55c6522b":"df8.head()","577b72aa":"df8['Complaint Type']=df8.index\nplt.figure(figsize=(10,5))\nsns.barplot(x='Complaint Type', y='Request_Closing_Time_mins', data=df8.sort_values('Request_Closing_Time_mins'))\nplt.xticks(rotation=90)","1f4968c8":"# Task 3: Order the complaint types based on the average \u2018Request_Closing_Time\u2019, grouping them for different locations","39a2da0c":"df9 = data.groupby(['City','Complaint Type'])['Request_Closing_Time_mins'].mean()\ndf9.unstack().fillna(0).head()","4e1047da":"# Task 5: Perform a statistical test for the following:\n# Please note: For the below statements you need to state the Null \n# and Alternate and then provide a statistical test to accept or reject the Null Hypothesis along with the corresponding \u2018p-value\u2019.\n# Whether the average response time across complaint types is similar or not (overall)\n# Are the type of complaint or service requested and location related?","fdaba2de":"data['Complaint Type'].unique()","7361a71b":"# Since Blocked Driveway is the most frequent complaint I shall analyze that data\ndf10= data[data['Complaint Type']== 'Blocked Driveway']['Request_Closing_Time_mins']\ndf10.hist(range=(0,1500)) \n# The data is left skewed, needs to be converted to gaussian","1f3cab2e":"df11= data[data['Complaint Type']== 'Noise - Street\/Sidewalk']['Request_Closing_Time_mins']\ndf11.hist(range=(0,1500)) # Simiar result","434f0546":"# Applying log transformation\ndataset={}\nfor i in data['Complaint Type'].unique():\n    dataset[i]= np.log(data[data['Complaint Type']==i]['Request_Closing_Time_mins'])","e6761f59":"dataset.keys()","5105c810":"dataset['Blocked Driveway'].hist()","405b5ff6":"dataset['Noise - Street\/Sidewalk'].hist()","84833bd9":"# ANOVA Analysis (Checking for top 5 complaints)\n#1. Null Hypothesis: The average response time across complaint types is not different\n# Alternate Hypothesis: The average response time across complaint types is different","d9ccd6dd":"from scipy.stats import f_oneway\nstat,p = f_oneway(dataset['Noise - Street\/Sidewalk'], dataset['Blocked Driveway'], dataset['Illegal Parking'], dataset['Derelict Vehicle'], \n                dataset['Noise - Commercial'])\n\nalpha=0.05\nif p>0.05:\n    print('Null Hypothesis is accepted')\nelse:\n    print('Null hypothesis is rejected')","aef49461":"# 2.Are the type of complaint or service requested and location related?","c10fff81":"df11= data[['Complaint Type','Location','Latitude','Longitude','City','Borough']]","a82b78eb":"df11.head()","82b95cd3":"df11['Complaint Type']=df11['Complaint Type'].astype('category').cat.codes\ndf11['City']= df11['City'].astype('category').cat.codes\ndf11['Borough']= df11['Borough'].astype('category').cat.codes","98ff6148":"df11.head()","67e001ee":"df11.corr(method='pearson') # From the first line it can be seen that the complaint types does not depend upon the location","62e805ac":"# df8.head()"}}