{"cell_type":{"d3c92241":"code","2fd2d1bb":"code","7cb1a20b":"code","25c2ce3c":"code","8678adbd":"code","1bbca7e7":"code","e5111663":"code","3c979af8":"code","0f948ff5":"code","0e47ab1d":"code","6b2b4ed5":"code","511247ea":"code","f3cf62e6":"code","c39a2faf":"code","a4b2d5c4":"code","ae26bac6":"code","20703a7c":"code","f28a0b9c":"code","5eff7791":"code","37213798":"code","16c4cb62":"code","76d77079":"code","e4bad65b":"code","c1df6cd1":"code","f54c18ed":"code","b16fbfc5":"code","e15ccf86":"markdown","24391fa7":"markdown","a1599380":"markdown","a2c3b27a":"markdown","f79e72de":"markdown","52ea076c":"markdown","3ad847e5":"markdown","32581b9c":"markdown"},"source":{"d3c92241":"## Importing the required libraries\nimport pandas as pd\nimport numpy as np\n\n## For plotting\nimport seaborn as sns\nimport matplotlib.pyplot as plt","2fd2d1bb":"## The below command makes dataframe to print all rows and columns\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","7cb1a20b":"## Reading the csv file. Note: The csv file is tab seperated.\nmain_df = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep = '\\t')\ndf = main_df.copy()\ndf.head()","25c2ce3c":"## Checking for number of rows and columns\ndf.shape","8678adbd":"## To check for null value and datatype\ndf.info()","1bbca7e7":"## Filling the null values of Income with the mean of income column\ndf['Income'] = df['Income'].fillna(df['Income'].mean())","e5111663":"## Checking for unique values in each column\ndf.nunique()","3c979af8":"## From the above we can see that Z_CostContact and Z_Revenue have same value\n## Dropping these two columns\ndf = df.drop(columns = ['Z_CostContact', 'Z_Revenue'], axis = 1)\ndf.head()","0f948ff5":"## Checking for correlation among the feature columns\nplt.figure(figsize=(20, 20))\nsns.heatmap(df.corr(), annot = True)\nplt.show()","0e47ab1d":"## Combining kids into 1\ndf[\"Kids\"] = df['Kidhome'] + df[\"Teenhome\"]","6b2b4ed5":"df.columns","511247ea":"## Changing marital status\n## using map function from dataframe\nmarital_status = {\n    \"Single\": \"non_relationship\",\n    \"Together\": \"in_relationship\",\n    \"Married\": \"in_relationship\",\n    \"Divorced\": \"non_relationship\",\n    \"Widow\": \"non_relationship\",\n    \"Alone\": \"non_relationship\",\n    \"Absurd\": \"non_relationship\",\n    \"YOLO\": \"non_relationship\"\n}\n\n## Below command goes through every entry in the notebook and replaces each data with its associated value in the dictionary\ndf[\"Marital_Status\"] = df[\"Marital_Status\"].map(marital_status)","f3cf62e6":"## Checking if everything is substituted\ndf[\"Marital_Status\"].value_counts()","c39a2faf":"## Similarly for Education\ndf['Education'].value_counts()","a4b2d5c4":"df['Education'].value_counts()","ae26bac6":"## Classifying education into two categories. \n## 1. Undergraduate\n## 2. Post Graduate\n\ndf['Education'] = df['Education'].replace(['PhD', '2n Cycle', 'Graduation', 'Master'], 'Post Graduate')\ndf['Education'] = df['Education'].replace(['Basic'], 'Under Graduation')","20703a7c":"## Creating family size\ndf[\"Family_Size\"] = 0\n\nfor i in range(len(df)):\n    if df['Marital_Status'][i] == 'in_relationship':\n        df['Family_Size'][i] = 2 + df['Kids'][i]\n    else:\n        df['Family_Size'][i] = 1 + df['Kids'][i]","f28a0b9c":"df.head()","5eff7791":"## Converting from string to datetime \ndf['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'])","37213798":"type(df['Dt_Customer'][0])","16c4cb62":"## Finding the max time\ndf['Dt_Customer'].max()","76d77079":"## Finding the age of the customer with respect to 2014\n## Finding the number of days the person is client\ndf['Age'] = 2014 - df['Year_Birth']\ndf['Collected'] = '2014-12-06'\ndf['Collected'] = pd.to_datetime(df['Collected'])\ndf['Days_is_client'] = (df['Collected'] - df['Dt_Customer']).dt.days","e4bad65b":"df.head()","c1df6cd1":"## Through below code, We are finding total monthly purchase of the customers\ndf['MntTotal'] = df['MntWines'] + df['MntFruits'] + df['MntMeatProducts'] + df['MntFishProducts'] + df['MntSweetProducts'] + df['MntGoldProds']\n## We are finding the total number of purchases(Deals, web, catelog and store) the customer made \ndf['AllPurchases'] = df['NumDealsPurchases'] + df['NumWebPurchases'] + df['NumCatalogPurchases'] + df['NumStorePurchases']\n## Calculating the average the customer spent which would be total spent over total purchase\ndf['AverageSpent'] = round(df['MntTotal'] \/ df['AllPurchases'], 2)\n## Finding deal purchases\ndf['DealPurchases'] = round(df['NumDealsPurchases']\/df['AllPurchases'], 2)\n## Total number of accepted offers\ndf['TotalAcceptedOffers'] = df['AcceptedCmp1'] + df['AcceptedCmp2'] + df['AcceptedCmp3'] + df['AcceptedCmp4'] + df['AcceptedCmp5'] + df['Response']","f54c18ed":"## Removing customers who didnt make a purchase\n## query is used to evaluate some condition \ndf = df.query('AllPurchases != 0')","b16fbfc5":"df.head()","e15ccf86":"We will assume that all the information was collected on 2014-12-06","24391fa7":"### This notebook is for educational purpose. Most of the work is inspired by other notebooks in this dataset. Credit to the respective authors will be provided after completion of this notebook.\n### If you learnt something for this notebook or liked the work I have put here please do upvote and show support","a1599380":"Forming More features about purchases","a2c3b27a":"### EDA","f79e72de":"References:\n\nhttps:\/\/www.kaggle.com\/dmitryuarov\/customers-clustering-eda","52ea076c":"No proper conclusion regarding high correlation can be made. Hence not dropping any of the columns","3ad847e5":"From the above output we can see that income has null values.\n\nSince income is numerical value, will fill it with mean of income instead of dropping","32581b9c":"#### Problem Statement\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers. Customer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\n#### Attributes\n\n###### People\n\nID: Customer's unique identifier\n\nYear_Birth: Customer's birth year\n\nEducation: Customer's education level\n\nMarital_Status: Customer's marital status\n\nIncome: Customer's yearly household income\n\nKidhome: Number of children in customer's household\n\nTeenhome: Number of teenagers in customer's\n\nhousehold Dt_Customer: Date of customer's enrollment with the company\n\nRecency: Number of days since customer's last purchase\n\nComplain: 1 if customer complained in the last 2 years, 0 otherwise\n\n###### Products\n\nMntWines: Amount spent on wine in last 2 years\n\nMntFruits: Amount spent on fruits in last 2 years\n\nMntMeatProducts: Amount spent on meat in last 2 years\n\nMntFishProducts: Amount spent on fish in last 2 years\n\nMntSweetProducts: Amount spent on sweets in last 2 years\n\nMntGoldProds: Amount spent on gold in last 2 years Promotion\n\nNumDealsPurchases: Number of purchases made with a discount\n\nAcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n\nAcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n\nAcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n\nAcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n\nAcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n\nResponse: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n###### Place\n\nNumWebPurchases: Number of purchases made through the company\u2019s web site\n\nNumCatalogPurchases: Number of purchases made using a catalogue\n\nNumStorePurchases: Number of purchases made directly in stores\n\nNumWebVisitsMonth: Number of visits to company\u2019s web site in the last month"}}