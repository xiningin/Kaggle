{"cell_type":{"c88f342d":"code","2fd85b54":"code","25e54b3c":"code","9dc2f203":"code","6816ccda":"code","e5377ad7":"code","cdc01dc5":"code","49860f0d":"code","5f5d8232":"code","080b49a8":"code","a32b2c1f":"code","6506a298":"code","34afd177":"code","b8e71009":"code","eb6362de":"code","68b0cd9a":"code","2ff256d1":"code","9b8505bc":"code","d3bd183f":"code","39655a53":"code","395bf695":"code","589b004f":"code","25b3a02a":"code","c0aa3c35":"code","0c7bb588":"code","a34c2476":"code","f6ed6ba2":"code","6e391899":"code","125a7f4b":"code","35934b5b":"code","0f66885c":"code","33b0c42d":"code","1ce0615a":"code","d83c8985":"code","874af403":"code","8dbfe7a3":"code","7bbf89b3":"code","f6c91bd7":"code","2bf0a374":"code","158b3f3e":"code","331f4b40":"code","50f03ccb":"code","5edcd0ab":"code","7d84d1be":"code","f4cbd5b8":"code","4b61ead5":"code","757e94ce":"code","2bd4d66e":"code","17affa47":"markdown","5aa48be1":"markdown","647b39ac":"markdown","577ae580":"markdown","12bf1b7c":"markdown","faccfb34":"markdown","3f2b8bc0":"markdown"},"source":{"c88f342d":"#importing libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report,roc_auc_score","2fd85b54":"##Reading Data\ntrain=pd.read_csv('..\/input\/titanic\/train.csv')","25e54b3c":"train.shape\n","9dc2f203":"train.head()","6816ccda":"##Checking Missing Value\ntrain.isnull().sum()\n","e5377ad7":"## Target variable\ntrain['Survived'].value_counts()","cdc01dc5":"train['Survived'].value_counts(normalize=True)\n","49860f0d":"##Summary of Numeric Columns\ntrain.describe()\n","5f5d8232":"train['Sex'].value_counts()\n","080b49a8":"## Let's create dummy variables\nembark=pd.get_dummies(train['Embarked'])","a32b2c1f":"gender=pd.get_dummies(train['Sex'])\n","6506a298":"train['Age'].fillna(30,inplace=True)\ntrain['Age']=train['Age'].astype('int')","34afd177":"def age_grp(age):\n    if age<13:\n        return '<13'\n    elif (age>=13) &(age<18):\n        return '13-18'\n    elif (age>=18) &(age<=24):\n        return '18-24'\n    elif (age>=25) &(age<=34):\n        return '25-34'\n    elif (age>=35) &(age<=44):\n        return '35-44'\n    else:\n        return '45+'","b8e71009":"train['Age_grp']=train['Age'].apply(lambda x: age_grp(x))\n","eb6362de":"age=pd.get_dummies(train['Age_grp'])\n","68b0cd9a":"train_df=pd.concat([train,embark,gender,age],axis=1)\n","2ff256d1":"train_df.columns\n","9b8505bc":"def is_var(val):\n    if val>0:\n        return 1\n    else:\n        return 0","d3bd183f":"train_df['Family']=train_df['Parch'] + 1 + train_df['SibSp']\ntrain_df['Parch']=train_df['Parch'].apply(lambda x: is_var(x))\ntrain_df['SibSp']=train_df['SibSp'].apply(lambda x: is_var(x))\n","39655a53":"sel_cols=['Fare', \n    'Pclass', 'SibSp',\n       'Parch',  'C', 'Q',\n       'S', 'female', 'male', '18-24', '25-34', '35-44', '45+', '<13','13-18', 'Family'\n]","395bf695":"train_df.fillna(0,inplace=True)\n","589b004f":"X=train_df[sel_cols]\n","25b3a02a":"y=train_df['Survived']\n","c0aa3c35":"train_X,val_X,train_y,val_y=train_test_split(X,y,test_size=0.3,random_state=1)\n","0c7bb588":"##Model\nlr=LogisticRegression()\nlr.fit(train_X,train_y)","a34c2476":"lr.score(train_X,train_y)\n","f6ed6ba2":"lr.score(val_X,val_y)\n","6e391899":"pred=lr.predict(val_X)\n","125a7f4b":"##Confusion Matrix\nconfusion_matrix(val_y,pred)\n","35934b5b":"print(classification_report(val_y,pred))\n","0f66885c":"##Reading Data\ntest=pd.read_csv('..\/input\/titanic\/test.csv')","33b0c42d":"test.shape","1ce0615a":"test.columns","d83c8985":"## Let's create dummy variables\nembark=pd.get_dummies(test['Embarked'])","874af403":"gender=pd.get_dummies(test['Sex'])\n","8dbfe7a3":"test['Age'].fillna(30,inplace=True)\ntest['Age']=test['Age'].astype('int')","7bbf89b3":"test['Age_grp']=test['Age'].apply(lambda x: age_grp(x))\n","f6c91bd7":"age=pd.get_dummies(test['Age_grp'])\n","2bf0a374":"test_df=pd.concat([test,embark,gender,age],axis=1)\n","158b3f3e":"test_df['Family']=test_df['Parch']+1+test_df['SibSp']\ntest_df['Parch']=test_df['Parch'].apply(lambda x: is_var(x))\ntest_df['SibSp']=test_df['SibSp'].apply(lambda x: is_var(x))\n","331f4b40":"test_df.fillna(0,inplace=True)\n","50f03ccb":"test_X=test_df[sel_cols]\n","5edcd0ab":"test_X.columns","7d84d1be":"test_y=lr.predict(test_X)","f4cbd5b8":"sub=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","4b61ead5":"sub['Survived']=test_y","757e94ce":"sub.head()","2bd4d66e":"sub.to_csv('logistic_regression_out.csv',index=False)","17affa47":"# Introduction","5aa48be1":"Let's get started\nIn this tutorial we are using Titanic Dataset from kaggle. You can download the data from https:\/\/www.kaggle.com\/c\/titanic\/data\n\nData Description\nThe data has been split into two groups: training set (train.csv) test set (test.csv)\n\nData Dictionary Variable Definition Key survival Survival 0 = No, 1 = Yes pclass Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd sex Sex Age Age in years\nsibsp # of siblings \/ spouses aboard the Titanic\nparch # of parents \/ children aboard the Titanic\nticket Ticket number\nfare Passenger fare\ncabin Cabin number\nembarked Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton Variable Notes pclass: A proxy for socio-economic status (SES) 1st = Upper 2nd = Middle 3rd = Lower\n\nage: Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5\n\nsibsp: The dataset defines family relations in this way... Sibling = brother, sister, stepbrother, stepsister Spouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n\nparch: The dataset defines family relations in this way... Parent = mother, father Child = daughter, son, stepdaughter, stepson Some children travelled only with a nanny, therefore parch=0 for them.","647b39ac":"### Prediction on Test Data ###","577ae580":"### Logistic Regression ###\n\nLogistic Regression is the most famous ML algorithm. It is used for classification problem. It can be used for binary as well as multiclassification\nThe logistic function is a sigmoid function, which takes any real input t$$ t\\in \\mathbb {R} $$and outputs a value between zero and one\n\nLogistic Function(Sigmoid Function)image.png\n\nimage.png\n\nodds\n\nThe odds signifies the ratio of probability of success to probability of failure$${\\text{odds}}=e^{\\beta _{0}+\\beta _{1}x}.$$\n\nLog odds(Logit)image.png\n\nimage.png","12bf1b7c":"### Model Evaluation ###","faccfb34":"### Creating Submission File ###","3f2b8bc0":"### Feature Engineering"}}