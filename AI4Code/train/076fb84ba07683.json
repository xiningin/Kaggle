{"cell_type":{"2bbedbe5":"code","b3eb7ba1":"code","980861e2":"code","1b8e7a05":"code","23fdf167":"code","153e50a9":"code","e7c78633":"code","cbab1931":"code","a584ab8d":"code","9e8498cb":"code","b5a33a17":"code","6a2da8ab":"code","e3b37414":"code","847ffab6":"code","c373c968":"code","12ab3a76":"code","7383842f":"code","d7f35f88":"code","1fb3cb3f":"code","877c1d79":"code","7b6654e9":"code","32ecfea5":"code","257fde2b":"code","b1571eab":"code","64a761b0":"code","832f78da":"code","5030e04f":"code","88fb38e2":"code","c0910254":"code","21d83085":"code","fb733a52":"code","208b7395":"code","b75462fb":"code","d3f5845d":"code","0df4da15":"code","d4661c04":"code","013ad46a":"code","fd88394c":"code","9403fd16":"markdown","8241b88e":"markdown","6836256b":"markdown","c0c05515":"markdown","26617a2d":"markdown","5e87e5ec":"markdown","84355c17":"markdown","c18f4aee":"markdown","bf3f92ff":"markdown","2fc49d35":"markdown"},"source":{"2bbedbe5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')","b3eb7ba1":"import numpy as np\nimport pandas as pd","980861e2":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.tail()","1b8e7a05":"train.isnull().sum()","23fdf167":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.isnull().sum()","153e50a9":"train['Survived'].describe()","e7c78633":"sns.countplot(train['Survived'],data=train);","cbab1931":"sns.countplot(x='Pclass',hue='Survived',data=train);","a584ab8d":"sns.barplot(x='Pclass',y='Survived',hue='Sex',data=train);","9e8498cb":"sns.countplot(x='Sex',hue='Survived',data=train);","b5a33a17":"sns.countplot(x='Embarked',hue='Survived',data=train);","6a2da8ab":"sns.countplot(x='Embarked',hue='Pclass',data=train);","e3b37414":"sns.countplot(x='Embarked',hue='Sex',data=train);","847ffab6":"sns.heatmap(train.isnull());","c373c968":"train['Age'].isnull().sum()","12ab3a76":"train['middle']=train['Name'].map(lambda x:x.split(',')[1].split('.')[0])\nsns.countplot(x='middle',data=train);","7383842f":"test['middle']=test['Name'].map(lambda x:x.split(',')[1].split('.')[0])\ntest['middle'].value_counts()","d7f35f88":"train['middle'].value_counts()","1fb3cb3f":"train_Mr=train[train['middle'].str.contains('Mr')]\ntrain_Mrs=train[train['middle'].str.contains('Mrs')]\ntrain_Miss=train[train['middle'].str.contains('Miss')]\ntrain_Master=train[train['middle'].str.contains('Master')]\n\nprint('Mr {}'.format(train_Mr['Age'].dropna().mean()))\nprint('Mrs {}'.format(train_Mrs['Age'].dropna().mean()))\nprint('Miss {}'.format(train_Miss['Age'].dropna().mean()))\nprint('Master {}'.format(train_Master['Age'].dropna().mean()))\nprint('All {}'.format(train['Age'].dropna().mean()))","877c1d79":"for i in range(len(train)):\n    \n    if pd.isnull(train['Age'][i]):\n        name=train['middle'][i]\n        if name=='Mr':\n            train['Age'][i]=33\n        elif name=='Mrs':\n            train['Age'][i]=36\n        elif name=='Miss':\n            train['Age'][i]=22\n        elif name=='Master':\n            train['Age'][i]=5\n        else:\n            train['Age'][i]=30\n\ntrain['Age'].isnull().sum()","7b6654e9":"for i in range(len(test)):\n    if pd.isnull(test['Age'][i]):\n        name=test['middle'][i]\n        if name=='Mr':\n            test['Age'][i]=33\n        elif name=='Mrs':\n            test['Age'][i]=36\n        elif name=='Miss':\n            test['Age'][i]=22\n        elif name=='Master':\n            test['Age'][i]=5\n        else:\n            test['Age'][i]=30\n\ntest['Age'].isnull().sum()","32ecfea5":"train['Family']=train['SibSp']+train['Parch']+1","257fde2b":"test['Family'] = test['SibSp'] + test['Parch'] + 1","b1571eab":"sns.countplot(x='Family',hue='Survived',data=train);","64a761b0":"train['Family']=pd.cut(train.Family, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntest['Family']= pd.cut(test.Family, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntrain.head()","832f78da":"test.head()","5030e04f":"y=train['Survived']\nfeatures=['Pclass','Sex','Age','Fare','Embarked','Family']\nX=train[features]\nX.tail()","88fb38e2":"dummies=pd.get_dummies(X,drop_first=True)\ndummies.head()","c0910254":"X_train=dummies\nX_train.head()","21d83085":"from sklearn.linear_model import LogisticRegression","fb733a52":"logmodel=LogisticRegression(solver='liblinear')\nlogmodel.fit(X_train,y);","208b7395":"predictions=logmodel.predict(X_train)\npredictions","b75462fb":"X_test=test[features]\nX_test.isnull().sum()","d3f5845d":"X_test['Fare']=X_test['Fare'].fillna(X_test['Fare'].mean())","0df4da15":"dummies_X=pd.get_dummies(X_test,drop_first=True)","d4661c04":"preds=logmodel.predict(dummies_X)","013ad46a":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(logmodel,X_train,y)\n#print(scores)\nprint('Average: {}'.format(np.mean(scores)))","fd88394c":"log_sub=pd.DataFrame({'PassengerId':test.PassengerId,'SurVived':preds})\nlog_sub.to_csv('submission.csv',index=False)","9403fd16":"**Sex**:\u5973\u6027\u306e\u307b\u3046\u304c\u751f\u304d\u6b8b\u308a\u3084\u3059\u3044","8241b88e":"****Pclass****\uff1aPclass\u306e\u756a\u53f7\u304c\u82e5\u3044\u307b\u3046\u304c\u751f\u304d\u6b8b\u308a\u3084\u3059\u3044","6836256b":"**Embarked&Sex**:Q\u306b\u5973\u6027\u304c\u591a\u304f\u751f\u304d\u6b8b\u308a\u304c\u591a\u3044\u3068\u8003\u3048\u305f\u304c\u305d\u3046\u3067\u306f\u306a\u304b\u3063\u305f\n\n\u3053\u306e\u30b0\u30e9\u30d5\u3068Embarked&Survived\u306e\u30b0\u30e9\u30d5\u304c\u4f3c\u3066\u3044\u308b","c0c05515":"\u5e74\u9f62\u306e\u6b20\u640d\u5024\u5272\u5408\u304c177\/860\u306a\u306e\u3067\u524a\u9664\u3067\u306f\u306a\u304f\u9055\u3046\u5024\u3092\u5165\u308c\u308b","26617a2d":"Mr,Mrs\u306a\u3069\u306f\u5e74\u9f62\u304c\u9ad8\u3044\u3068\u4e88\u6e2c\u3067\u304d\u308b\u306e\u3067\u305d\u3053\u304b\u3089\u5e74\u9f62\u88dc\u5b8c\u3092\u3059\u308b\n\n\u4e0a\u4f4d4\u3064\u304c\u591a\u3044\u306e\u3067\u305d\u306e\u5e73\u5747\u5024\u3092\u633f\u5165\u3059\u308b","5e87e5ec":"Embarked\u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u306e\u3067\u6700\u983b\u5024\u3067\u7a74\u57cb\u3081","84355c17":"\u5bb6\u65cf\uff1dSib(\u5144\u5f1f\/\u914d\u5076\u8005)+Parch(\u89aa\/\u5b50\u4f9b)+\u81ea\u5206","c18f4aee":"1. 1\u4eba\u306e\u5834\u5408\n2. 2~4\u4eba\u306e\u5834\u5408\n3. 5\u4eba\u4ee5\u4e0a\n\n\u4e0a\u8a18\u306e\u5bb6\u65cf\u4eba\u6570\u3067Survived\u304c\u5909\u5316\u3057\u3066\u3044\u308b","bf3f92ff":"\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u3059\u308b\n\uff03score=k\u500b\u306b\u5206\u5272\u3057k\u500b\u306e\u30e2\u30c7\u30eb\u3092\u8a18\u9332\nk\u500b\u306e\u30e2\u30c7\u30eb\u7cbe\u5ea6\u306e\u5e73\u5747\u3092\u7b97\u51fa","2fc49d35":"**Embarked**:\n1. S\u3067\u306f\u4e57\u5ba2\u305d\u306e\u3082\u306e\u304c\u591a\u304f\u307e\u305f\u3001Pclass\uff13\u304c\u591a\u3044\u279e\u751f\u304d\u6b8b\u308a\u304c\u5c11\u306a\u304b\u3063\u305f\uff1f\n2. C\u3067\u306fPclass\uff11\u3068\uff13\u304c\u540c\u7a0b\u5ea6\u306a\u306e\u3067\u751f\u304d\u6b8b\u308a\u306e\u6570\u304c\u591a\u304b\u3063\u305f\uff1f\n3. Q\u3067\u306f\uff13\u304c\u591a\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u751f\u304d\u6b8b\u308a\u304c\u591a\u304b\u3063\u305f"}}