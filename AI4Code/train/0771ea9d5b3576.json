{"cell_type":{"eb7f31a6":"code","c6727eb7":"code","869fa0df":"code","cc71f965":"code","c1ffc9e1":"code","59088a8f":"code","c1f18e5e":"code","d3595002":"code","fc87e658":"code","e168caac":"code","5cc12bf9":"code","b2dc3dbf":"code","a39370bc":"code","88bd8225":"code","9c2b9227":"code","201071d6":"code","fdd2d6f0":"code","91821d31":"code","639bea80":"code","ca567bb2":"code","6769c6e6":"code","356ecc09":"code","074c8402":"code","146a90f1":"code","910209d7":"code","a00f43d1":"code","84f29eb1":"code","a1c9a847":"code","8db3b15e":"code","3ea2bfce":"code","23ca7407":"code","13dc6855":"code","25fbf461":"code","27d86171":"code","5f8eda8c":"code","152b3656":"code","26c05d0a":"code","6ccec7af":"code","20ea0224":"code","4bb1e988":"code","cfa089e7":"code","5885360a":"code","a6cc5325":"code","7971d8d6":"code","4c36c25e":"code","3d7def79":"code","eed640de":"code","b62669df":"code","bfc87dbb":"code","10f7fa59":"code","24222a62":"code","90b76b6e":"code","0663f106":"code","57080efb":"code","2d260350":"code","fa2a7178":"markdown","93fd673d":"markdown","02646fc7":"markdown","2e9616ab":"markdown","ccc2e073":"markdown","6565f6ad":"markdown","32eba9b4":"markdown","dfbbd9ef":"markdown","e2df5b84":"markdown","4a50a781":"markdown","0682e55a":"markdown","dbbea4e1":"markdown","53dc7f57":"markdown","7b78ce90":"markdown","265d7a15":"markdown","375d5fcf":"markdown","77b2ea2a":"markdown","7a35d24c":"markdown","8b7cf4e5":"markdown","bfed8531":"markdown","53149ae7":"markdown","cb2d997e":"markdown","bc5e838b":"markdown","6dd68d46":"markdown","b317356a":"markdown","b7638473":"markdown","c4dde2b7":"markdown","df086a78":"markdown","aa27d8f0":"markdown","34664bac":"markdown","b7631f7f":"markdown","590fa78b":"markdown"},"source":{"eb7f31a6":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import OrdinalEncoder","c6727eb7":"#importing Cab_Data.csv\ncab = pd.read_csv('\/kaggle\/input\/cabs-fare-data\/Cab_Data.csv')\ncab.head(5)","869fa0df":"city = pd.read_csv('..\/input\/cabs-fare-data\/City.csv')\ncity.head(5)","cc71f965":"customer = pd.read_csv('..\/input\/cabs-fare-data\/Customer_ID.csv')\ncustomer.head(5)","c1ffc9e1":"transaction = pd.read_csv('..\/input\/cabs-fare-data\/Transaction_ID.csv')\ntransaction.head(5)","59088a8f":"datasets = [cab, city, customer, transaction]\ndatasets_name = ['cab', 'city', 'customer', 'transaction']","c1f18e5e":"#defining some functions\ndef data_info(dataset, name):\n    print(f'For DataSet :{name}')\n    print(f'-------------\/\/Shape of dataset- {name} ')\n    print(dataset.shape)\n    print(f'-------------\/\/Columns in dataset- {name} ')\n    print(dataset.columns)\n    print(f'-------------\/\/Info for dataset- {name} ')\n    print(dataset.info())\n    print(f'-------------\/\/Null Values for dataset- {name}')\n    print(dataset.isnull().sum())\n    print(f'-------------\/\/Description of dataset- {name}')\n    print(dataset.describe())\n    print('')\n    print('')\n    print('')\n   \n    \n    \ndef plot_bar(group, title):\n    plt.figure(figsize=(14,6))\n    sns.barplot(x=group.index,y=group.values)     \n    plt.title(title)\n    plt.xticks(rotation=45)\n    plt.show()\n    print(group)\n    \ndef distribution_graph(dataset, title, x, x_label, color):\n    plt.figure(figsize=(14,6))\n    ax=sns.histplot(data = dataset, x=x,bins=40, color= color)\n    plt.title(title)\n    plt.ylabel('Frequency')\n    plt.xlabel(x_label)","d3595002":"#replacing spaces with '_' in column names\nfor col in cab.columns:\n    if ' ' in col:\n        cab = cab.rename(columns={col:col.replace(' ','_')})\nfor col in customer.columns:\n    if ' ' in col:\n        customer = customer.rename(columns={col:col.replace(' ','_')})\nfor col in city.columns:\n    if ' ' in col:\n        city = city.rename(columns={col:col.replace(' ','_')})\nfor col in transaction.columns:\n    if ' ' in col:\n        transaction = transaction.rename(columns={col:col.replace(' ','_')})\n","fc87e658":"data_info(cab, 'Cab Dataset')","e168caac":"#converting the date format into standard date format\ncab['Date_of_Travel'] = pd.to_datetime(cab['Date_of_Travel'])\ncab['Year'] = cab['Date_of_Travel'].dt.year #adding a new 'Year' column\ncab['Month'] = cab['Date_of_Travel'].dt.month #adding a new 'Month' column\n\ncab = cab.drop(['Date_of_Travel'], axis =1 )\n\ncab['Profit'] = cab['Price_Charged'] - cab['Cost_of_Trip'] \ncab['ProfitPercentage'] = ((cab['Price_Charged'] - cab['Cost_of_Trip'])\/cab['Cost_of_Trip'])*100\n","5cc12bf9":"cab.replace([np.inf, -np.inf], np.nan)\ncab['Profit_per_KM'] = cab['Profit']\/ cab['KM_Travelled']\ncab.head()","b2dc3dbf":"#getting the counts for Month, Year, Company and City column\nmonth = cab.groupby(['Month']).Transaction_ID.count()\nyear = cab.groupby(['Year']).Transaction_ID.count()\ncompany = cab.groupby(['Company']).Transaction_ID.count()\ncity_cab = cab.groupby(['City']).Transaction_ID.count()","a39370bc":"#visually displaying the counts with the tabluar data below it\n\ngroups = [company, month, year,city_cab]\nnames = ['company', 'month', 'year','city']\ni=0    \nfor group in groups:\n    title = 'Travel Frequency ' + names[i]\n    plot_bar(group, title)\n    i +=1","88bd8225":"distribution_graph(cab, 'KM travel frequency distribtion', 'KM_Travelled', 'KM Travelled', '#ce9be9' )","9c2b9227":"distribution_graph(cab, 'Price Charged frequency distribtion', 'Price_Charged', 'Price Charged', '#50acc3' )","201071d6":"distribution_graph(cab, 'Cost of Trip frequency distribtion', 'Cost_of_Trip', 'Cost of Trip', '#e79683' )","fdd2d6f0":"distribution_graph(cab, 'Profit per KM frequency distribtion', 'Profit_per_KM', 'Profit per KM', '#ce9be9' )","91821d31":"new = cab[[\"Company\", \"KM_Travelled\"]]\nnew_df = (new.groupby(\"Company\").mean()).sort_values(by=\"KM_Travelled\")\n\n#visualization\nplt.figure(figsize = (9,3))\nplt.bar(new_df.index,new_df[\"KM_Travelled\"])\nplt.ylabel(\"KM\")\nplt.title(\"Avarage Trip Long\")\nplt.show()\n\nprint(new_df)\n","639bea80":"new2 = cab[[\"Month\", \"KM_Travelled\"]]\nnew_df2 = (new2.groupby(\"Month\").mean()).sort_values(by=\"KM_Travelled\")\n\n#visualization\nplt.figure(figsize = (9,3))\nplt.bar(new_df2.index,new_df2[\"KM_Travelled\"])\nplt.ylabel(\"KM\")\nplt.title(\"Avarage Trip Long\")\nplt.show()\n\nprint(new_df2)","ca567bb2":"counts = cab.groupby(['Year','Company']).Transaction_ID.count().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","6769c6e6":"counts = cab.groupby(['Month','Company']).Transaction_ID.count().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","356ecc09":"counts = cab.groupby(['Year','Company']).ProfitPercentage.mean().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","074c8402":"counts = cab.groupby(['Month','Company']).ProfitPercentage.mean().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","146a90f1":"counts = cab.groupby(['Year','Company']).Profit.mean().unstack()\nprint(counts)\ncounts = cab.groupby(['Month','Company']).ProfitPercentage.mean().unstack()\nprint(counts)","910209d7":"df = cab.groupby(['City', 'Company']).agg(Profit_per_KM = (\"Profit_per_KM\", 'mean'))\ndf = cab.reset_index()\ndims = (14, 6)\nfig, ax = plt.subplots(figsize= dims)\n# plot barplot\ng = sns.barplot(x=\"City\", y=\"Profit_per_KM\", hue=\"Company\", ax=ax, data=df);\nvar = g.set_xticklabels(g.get_xticklabels(), rotation=90)","a00f43d1":"counts = cab.groupby(['Year','Company']).Profit_per_KM.mean().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)\n\ncounts = cab.groupby(['Month','Company']).Profit_per_KM.mean().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","84f29eb1":"customer.head()","a1c9a847":"customer = customer.rename(columns={'Income_(USD\/Month)': 'Income_per_Month'})","8db3b15e":"data_info(customer, 'Customer Dataset')","3ea2bfce":"gender = customer.groupby(['Gender']).Customer_ID.count()\nplot_bar(gender, 'Distribution of Customer based on Gender')","23ca7407":"distribution_graph(customer, 'Age Distribution', 'Age', 'Age', '#e79683' )\nage = customer.groupby(['Age']).Customer_ID.count()\nplot_bar(age, 'Distribution of Customer based on Gender')","13dc6855":"counts = customer.groupby(['Age']).Income_per_Month.mean()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\n\nprint('Max Income in the table is ',customer['Income_per_Month'].max())\nprint('Min Income in the table is ',customer['Income_per_Month'].min())","25fbf461":"print('\\n\\nMean Income based on Gender and Age') \nprint(customer.groupby(['Gender','Age']).Income_per_Month.mean())","27d86171":"transaction.head()","5f8eda8c":"data_info(transaction, 'Transaction Dataset')","152b3656":"payment_mode = transaction.groupby(['Payment_Mode']).Transaction_ID.count()\nplot_bar(payment_mode, 'Payment_Mode')","26c05d0a":"city.head()","6ccec7af":"data_info(city, 'City Dataset')","20ea0224":"#Feature Engineering\ncity['Population'] = city[\"Population\"].str.strip().str.replace(\",\",\"\") \ncity['Users'] = city[\"Users\"].str.strip().str.replace(\",\",\"\")\ncity.head(3)","4bb1e988":"population = list(city[\"Population\"].str.strip().str.replace(\",\",\"\"))\ncity['Population'] = population\npopulation = []\nfor i in city['Population']:\n    i = float(i)\n    population.append(i)\ncity['Population'] = population","cfa089e7":"users = list(city[\"Users\"].str.strip().str.replace(\",\",\"\"))\ncity['Users'] = users\nusers=[]\nfor i in city['Users']:\n    i = float(i)\n    users.append(i)\ncity['Users'] = users","5885360a":"#adding a new feature PercentageUser\ncity['PercentageUser'] = (city['Users']\/ city['Population'])*100","a6cc5325":"city.head()","7971d8d6":"plt.figure(figsize=(14,6))\nsns.barplot(x= city.City, y=city.Users)     \nplt.title('Distribution of Users in Every City')\nplt.xticks(rotation=90)\nplt.show()\n","4c36c25e":"plt.figure(figsize=(14,6))\nsns.barplot(x= city.City, y=city.PercentageUser)     \nplt.title('Percentage User in Every City')\nplt.xticks(rotation=90)\nplt.show()","3d7def79":"left = cab.set_index(['Transaction_ID'])\nright = transaction.set_index(['Transaction_ID'])\nmasterdata = left.join(right)\nleft = masterdata.set_index([masterdata.index,'Customer_ID'])\nright = customer.set_index(['Customer_ID'])\nmasterdata = left.join(right)\nmasterdata = masterdata.reset_index()\nmasterdata.head()","eed640de":"data_info(masterdata, 'Master Data')","b62669df":"data = masterdata.drop(['Transaction_ID', 'Customer_ID'], axis=1)","bfc87dbb":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndata[\"Company\"] = le.fit_transform(data[\"Company\"])\ndata[\"Gender\"] = le.fit_transform(data[\"Gender\"])\ndata[\"City\"] = le.fit_transform(data[\"City\"])\ndata[\"Payment_Mode\"] = le.fit_transform(data[\"Payment_Mode\"])\ndata","10f7fa59":"corr = data.corr()\ncorr","24222a62":"fig, ax = plt.subplots(figsize=(10,10))\nsns.heatmap(corr, ax=ax)","90b76b6e":"counts = masterdata.groupby(['Payment_Mode','Company']).Transaction_ID.count().unstack()\nax = counts.plot(kind='bar',stacked = False)\nplt.show()\nprint(counts)","0663f106":"price = np.array(cab[\"Price_Charged\"])\ncost = np.array(cab[\"Cost_of_Trip\"])\nprofit = np.subtract(price,cost)\nnew = zip(cab[\"City\"],profit)\nprofit_df = (pd.DataFrame(new,columns = [\"City\",\"Profits\"]).groupby(\"City\").sum()).sort_values(by = \"Profits\",ascending=False)\nnew_df = profit_df.round()\n\nplt.figure(figsize = (14,6))\nplt.bar(new_df.index,new_df.Profits)\nplt.xticks(rotation=\"90\")\nplt.ylabel(\"Profits\")\nplt.title(\"Profits for each city\")\nplt.show()\n\nprint(new_df)","57080efb":"profitpercentage = np.array(cab[\"ProfitPercentage\"])\nnew = zip(cab[\"City\"],profitpercentage)\nprofitpercent_df = (pd.DataFrame(new,columns = [\"City\",\"Profit_Percentage\"]).groupby(\"City\").mean()).sort_values(by = \"Profit_Percentage\",ascending=False)\nnew_df = profitpercent_df.round()\n\nplt.figure(figsize = (14,6))\nplt.bar(new_df.index,new_df.Profit_Percentage)\nplt.xticks(rotation=\"90\")\nplt.ylabel(\"Profit_Percentage\")\nplt.title(\"Profit Percentage for each city\")\nplt.show()\n\nprint(new_df)","2d260350":"yellow_cab = masterdata[masterdata.Company.isin(['Yellow Cab'])]\npink_cab = masterdata[masterdata.Company.isin(['Pink Cab'])]\ncounts = yellow_cab.groupby(['City']).Profit.mean()\ny_new = (yellow_cab.groupby(\"City\").mean())\nplt.figure(figsize = (14,6))\nplt.bar(y_new.index,y_new[\"Profit\"])\nplt.xticks(rotation=\"90\")\nplt.ylabel(\"City\")\nplt.title(\"Average Profit per City for Yellow Cab\")\nplt.show()\n\ncounts = pink_cab.groupby(['City']).Profit.mean()\np_new = (pink_cab.groupby(\"City\").mean())\nplt.figure(figsize = (14,6))\nplt.bar(p_new.index,p_new[\"Profit\"])\nplt.xticks(rotation=\"90\")\nplt.ylabel(\"City\")\nplt.title(\"Average Profit per City for Pink Cab\")\nplt.show()","fa2a7178":"* City\n* Population\n* Users- number of cab users in the specific city","93fd673d":"<h4 style=\"color:green;\">Mean Profit for Pink Cab on an Average for the three years is around 17-18<\/h4>\n<h4 style=\"color:green;\">Mean Profit for Yellow Cab on an Average for the three years is around 28-31<\/h4>","02646fc7":"<h4 style=\"color:green;\">After 400, there is an exponential decrease in number of rides<\/h4>","2e9616ab":"* Customer ID- unique customer ID \n* Gender\n* Age\n* Income - monthly income in USD for cutomer","ccc2e073":"* Transaction ID- unique id for every transaction\n* Date of Travel - date when the ride happened\n* Company- name of the company which provided the cab for ride\n* KM Travelled- distance travlled by cab in KMs\n* Price Charged- amount charged to the customer for the ride\n* Cost of Trip- actual cost of the trip (no profit or loss is added)","6565f6ad":"<h4 style=\"color:green;\">Highest Profit Percentage of Pink Cab was for the months- March and December, lowest for the months- June and July <\/h4>\n<h4 style=\"color:green;\">Highest Profit Percentage of Yellow Cab was for the months- May, Feb Jan and June, lowest for the months- August and July<\/h4>","32eba9b4":"<h4 style=\"color:green;\">Average distance travelled is constant with time over all three years and around 12 months<\/h4>","dfbbd9ef":"<h2 style=\"color:blue;\">master dataset<\/h2>","e2df5b84":"<h4 style=\"color:green;\">After the age og 40 there is a sudden drop in number of passengers. People younger than 40 form a larger part of customers<\/h4>","4a50a781":"<h4 style=\"color:green;\">In the above graph of Profit per KM, New York yields highest profits in terms of distance for both the companies.<\/h4>\n<h4 style=\"color:green;\">Dallas has lowest value in terms of profit per km for Pink Cab, and same goes for Sacramento for Yellow Cab <\/h4>","0682e55a":"<h4 style=\"color:green;\">Profit per KM is skewed towards right with few outliers<\/h4>","dbbea4e1":"<h4 style=\"color:green;\">After around 420 there is linear decrease in number of rides  till it reaches 0 around700<\/h4>","53dc7f57":"<h2 style=\"color:blue;\">city dataset<\/h2>","7b78ce90":"<h4 style=\"color:green;\">Above graphs represent City wise Profits and Profit Percentage trend<\/h4>","265d7a15":"<h4 style=\"color:green;\">Average income is constant amongst our customers for all ages<\/h4>","375d5fcf":"<h4 style=\"color:green;\">The percantage contribution of Pink Cab in number of cabs remain more or less same for all the months<\/h4>","77b2ea2a":"<h4 style=\"color:green;\">List of highly correlated attributes<\/h4>\n\n* KM_Travelled and Price_Charged\n* KM_Travelled and Cost_of_Trip\n* Price_Charged and Cost_of_Trip\n* Profit and ProfitPercentage\n","7a35d24c":"<h4 style=\"color:green;\">Unlike Profit Percentage highest profit average of Pink Cab is in moth of December and lowest from May to July<\/h4>\n<h4 style=\"color:green;\">Unlike Profit Percentage highest profit average of Yellow Cab is in moth of Jan and Feb and lowest for August<\/h4>","8b7cf4e5":"* Transaction ID\n* Customer ID\n* Payment_Mode- mode of payment for the cab ride","bfed8531":"<h4 style=\"color:green;\">Preferred Mode of transaction is Card, customers use card almost 60% during payment<\/h4>","53149ae7":"<h2 style=\"color:blue;\">transaction dataset<\/h2>","cb2d997e":"<h4 style=\"color:green;\">Both the companies have same average KM travelled<\/h4>","bc5e838b":"<h4 style=\"color:green;\">Users and Percentage of users shows no relation between one another. Highest number of users is in NEW YORK NY but highest number of percenatge users is in SAN FRANCISCO CA<\/h4>","6dd68d46":"<h2 style=\"color:blue;\">customer dataset<\/h2>","b317356a":"<h2 style=\"color:blue;\">cab dataset<\/h2>","b7638473":"<h4 style=\"color:green;\">On an average Pink cab contributes to 23% in total cab count for all three years<\/h4>","c4dde2b7":"You have been provided 4 individual data sets. Time period of data is from **31\/01\/2016 to 31\/12\/2018**\nBelow are the list of datasets which are provided for the analysis:\n* **Cab_Data.csv** \u2013 this file includes details of transaction for 2 cab companies\n* **Customer_ID.csv** \u2013 this is a mapping table that contains a unique identifier which links the customer\u2019s demographic details\n* **Transaction_ID.csv** \u2013 this is a mapping table that contains transaction to customer mapping and payment mode\n* **City.csv** \u2013 this file contains list of US cities, their population and number of cab users","df086a78":"<h4 style=\"color:green;\">Above graphs represent City wise Profits and Profit Percentage trend<\/h4>","aa27d8f0":"<h4 style=\"color:green;\">We have more number of male passengers\/customers<\/h4>","34664bac":"<h4 style=\"color:green;\">Yellow Cab is used more than Pink Cab. 76.4% of the rides are by Yellow Cab <\/h4>\n<h4 style=\"color:green;\">November and December (10 and 12) have the most rides. Jan and Feb being the least<\/h4>\n<h4 style=\"color:green;\">2018 has the highest cab rides but the 'Year\" column approximately has fairly distributed data <\/h4>\n<h4 style=\"color:green;\">NEW YORK NY has the highest number of rides vs PITTSBURGH PA with lowest  <\/h4>","b7631f7f":"<h4 style=\"color:green;\">After 40KM there is gradual linear decrease in number of rides<\/h4>","590fa78b":"<h4 style=\"color:green;\">Average Income is almost same (14k to 15k) for each age and for both males and females<\/h4>"}}