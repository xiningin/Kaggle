{"cell_type":{"2767b6ce":"code","528945d3":"code","8c16f5c3":"code","1783e2ad":"code","ea51acad":"code","5d4bdbf5":"code","96340202":"code","576a3763":"code","5af0dde4":"code","472fd94d":"code","4708c098":"code","5224c4e2":"code","9fbeb0fa":"code","03f74e47":"code","5f9d88af":"code","4c1de44d":"markdown","7c26de3c":"markdown","8a4eef52":"markdown","38d43362":"markdown","e08fc05b":"markdown","5c7e47cd":"markdown","3dfea163":"markdown"},"source":{"2767b6ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","528945d3":"#import libraries\nimport pandas as pd\nimport numpy as np","8c16f5c3":"df = pd.read_csv('\/kaggle\/input\/salary\/Salary.csv')\ndf","1783e2ad":"df.describe()","ea51acad":"df.info()","5d4bdbf5":"#import libraries for plotting data\nimport matplotlib.pyplot as plt\nimport pylab as pl\n%matplotlib inline","96340202":"plt.scatter(df.YearsExperience, df.Salary)\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')\nplt.show()","576a3763":"msk = np.random.rand(len(df))<0.5\ntrain = df[msk]\ntest = df[~msk]","5af0dde4":"plt.scatter(train.YearsExperience, train.Salary)\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')\nplt.show()","472fd94d":"plt.scatter(test.YearsExperience, test.Salary)\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')\nplt.show()","4708c098":"from sklearn import linear_model\nmodel = linear_model.LinearRegression()\ntrain_x = np.asanyarray(train['YearsExperience'])\ntrain_y = np.asanyarray(train['Salary'])\nmodel.fit(train_x.reshape(-1,1), train_y)","5224c4e2":"#coefficients\nprint('Coefficient:', model.coef_)\nprint('Intercept:', model.intercept_)","9fbeb0fa":"plt.scatter(train.YearsExperience, train.Salary, color = 'blue')\nplt.plot(train_x, model.coef_[0]*train_x + model.intercept_, '-r')\nplt.xlabel('Years Experience')\nplt.ylabel('Salary')","03f74e47":"from sklearn.metrics import r2_score\ntest_x = np.asanyarray(test['YearsExperience'])\ntest_y = np.asanyarray(test['Salary'])\ntest_y_ = model.predict(test_x.reshape(-1,1))","5f9d88af":"print('Mean Absolute Error is: %f' %np.mean(np.absolute(test_y - test_y_)))\nprint('Mean Squared Error is: %f' %np.mean(test_y - test_y_)**2)\nprint('R2 Score is: %f' %r2_score(test_y, test_y_))\n","4c1de44d":"# Modelling","7c26de3c":"# Data Exploration","8a4eef52":"# Create test and train dataset","38d43362":"# Simple Linear Regression Model","e08fc05b":"# Plot the outputs","5c7e47cd":"# Read the data","3dfea163":"# Evaluation"}}