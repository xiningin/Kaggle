{"cell_type":{"e30459ef":"code","ea561ad0":"code","1ded6a81":"code","6661f906":"code","dc59ff17":"code","03421a07":"code","1ceaf7ea":"code","066eb97e":"code","cf952796":"code","cdbf49ac":"code","ad39b1f9":"code","3aba237b":"code","e65abc44":"code","c949edfb":"code","0c5be9e6":"code","85ef9ad5":"code","92929b7f":"code","b3a80d61":"code","a8f769e4":"code","bc2e011f":"code","0ae6969e":"code","a1352ebe":"code","d1934c2b":"code","26144229":"code","08258be6":"code","37a92a1e":"code","20c3789b":"code","d194f8e3":"code","ab63d8f8":"code","c8aa5c87":"code","39a54a80":"code","5453a56a":"code","56eb4892":"code","3180824e":"code","c7cf9c30":"code","0652fb4d":"code","e5550c9e":"code","b385b78e":"code","c3f38c1a":"code","d19a8cf6":"code","4703adbd":"code","5badab16":"code","aaa94e5e":"code","df88fad2":"code","2867716f":"code","ab321c94":"code","ea1de99b":"code","9410d84b":"code","bf09225a":"code","d39664a5":"code","b79e6aed":"code","46d9d728":"code","905f99da":"code","4d406648":"code","ba9be484":"markdown","15af6b98":"markdown","c3b043b5":"markdown","c79d17a2":"markdown","cb5a2cdc":"markdown","19df8987":"markdown","e28256d5":"markdown","0bc819a9":"markdown","217b06ae":"markdown","3bdb3a81":"markdown","f37b3b49":"markdown","cc53ac55":"markdown","d5a18d71":"markdown","4f12e73a":"markdown","6210f2b7":"markdown","8ae7d269":"markdown","2bd6f6af":"markdown","708e3614":"markdown","a96dffff":"markdown","1339752a":"markdown","6e476b55":"markdown","14603d8d":"markdown","a5610c8a":"markdown","2ac0adb3":"markdown","df2673e5":"markdown","aa0b15b8":"markdown","5463a1ce":"markdown","d05b03ea":"markdown","cb81d36a":"markdown","029c4639":"markdown","7419729f":"markdown","324d0b23":"markdown","a0406258":"markdown","4dd62cfd":"markdown","a7329d0e":"markdown","31d1b574":"markdown","82398f75":"markdown","78c88283":"markdown"},"source":{"e30459ef":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ea561ad0":"#create data drame to read data set\ndf = pd.read_csv('\/kaggle\/input\/bank-marketing-dataset\/bank.csv')","1ded6a81":"df.head()","6661f906":"# check the df structe\ndf.info()","dc59ff17":"# find number of rows and column\ndf.shape","03421a07":"# describe df numerical columns\ndf.describe()","1ceaf7ea":"# find the unique values from categorical features\nfor col in df.select_dtypes(include='object').columns:\n    print(col)\n    print(df[col].unique())","066eb97e":"# find missing values\nfeatures_na = [features for features in df.columns if df[features].isnull().sum() > 0]\nfor feature in features_na:\n    print(feature, np.round(df[feature].isnull().mean(), 4),  ' % missing values')\nelse:\n    print(\"No missing value found\")","cf952796":"for column in df.columns:\n    print(column,df[column].nunique())","cdbf49ac":"categorical_features=[feature for feature in df.columns if ((df[feature].dtypes=='O') & (feature not in ['deposit']))]\ncategorical_features","ad39b1f9":"for feature in categorical_features:\n    print('The feature is {} and number of categories are {}'.format(feature,len(df[feature].unique())))","3aba237b":"#check count based on categorical features\nplt.figure(figsize=(15,80), facecolor='white')\nplotnumber =1\nfor categorical_feature in categorical_features:\n    ax = plt.subplot(12,3,plotnumber)\n    sns.countplot(y=categorical_feature,data=df)\n    plt.xlabel(categorical_feature)\n    plt.title(categorical_feature)\n    plotnumber+=1\nplt.show()","e65abc44":"#check target label split over categorical features\n#Find out the relationship between categorical variable and dependent variable\nfor categorical_feature in categorical_features:\n    sns.catplot(x='deposit', col=categorical_feature, kind='count', data= df)\nplt.show()","c949edfb":"#Check target label split over categorical features and find the count\nfor categorical_feature in categorical_features:\n    print(df.groupby(['deposit',categorical_feature]).size())","0c5be9e6":"# list of numerical variables\nnumerical_features = [feature for feature in df.columns if ((df[feature].dtypes != 'O') & (feature not in ['deposit']))]\nprint('Number of numerical variables: ', len(numerical_features))\n\n# visualise the numerical variables\ndf[numerical_features].head()","85ef9ad5":"discrete_feature=[feature for feature in numerical_features if len(df[feature].unique())<25]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","92929b7f":"continuous_features=[feature for feature in numerical_features if feature not in discrete_feature+['deposit']]\nprint(\"Continuous feature Count {}\".format(len(continuous_features)))","b3a80d61":"#plot a univariate distribution of continues observations\nplt.figure(figsize=(20,60), facecolor='white')\nplotnumber =1\nfor continuous_feature in continuous_features:\n    ax = plt.subplot(12,3,plotnumber)\n    sns.distplot(df[continuous_feature])\n    plt.xlabel(continuous_feature)\n    plotnumber+=1\nplt.show()","a8f769e4":"#boxplot to show target distribution with respect numerical features\nplt.figure(figsize=(20,60), facecolor='white')\nplotnumber =1\nfor feature in continuous_features:\n    ax = plt.subplot(12,3,plotnumber)\n    sns.boxplot(x=\"deposit\", y= df[feature], data=df)\n    plt.xlabel(feature)\n    plotnumber+=1\nplt.show()","bc2e011f":"#boxplot on numerical features to find outliers\nplt.figure(figsize=(20,60), facecolor='white')\nplotnumber =1\nfor numerical_feature in numerical_features:\n    ax = plt.subplot(12,3,plotnumber)\n    sns.boxplot(df[numerical_feature])\n    plt.xlabel(numerical_feature)\n    plotnumber+=1\nplt.show()","0ae6969e":"## Checking for correlation\ncor_mat=df.corr()\nfig = plt.figure(figsize=(15,7))\nsns.heatmap(cor_mat,annot=True)","a1352ebe":"#total patient count based on cardio_results\nsns.countplot(x='deposit',data=df)\nplt.show()","d1934c2b":"df['deposit'].groupby(df['deposit']).count()","26144229":"df2=df.copy()","08258be6":"df2.head()","37a92a1e":"#defaut features does not play imp role\ndf2.groupby(['deposit','default']).size()","20c3789b":"df2.drop(['default'],axis=1, inplace=True)","d194f8e3":"df2.groupby(['deposit','pdays']).size()","ab63d8f8":"# drop pdays as it has -1 value for around 40%+ \ndf2.drop(['pdays'],axis=1, inplace=True)","c8aa5c87":"# remove outliers in feature age...\ndf2.groupby('age',sort=True)['age'].count()\n# these can be ignored and values lies in between 18 to 95","39a54a80":"# remove outliers in feature balance...\ndf2.groupby(['deposit','balance'],sort=True)['balance'].count()\n# these outlier should not be remove as balance goes high, client show interest on deposit","5453a56a":"# remove outliers in feature duration...\ndf2.groupby(['deposit','duration'],sort=True)['duration'].count()\n# these outlier should not be remove as duration goes high, client show interest on deposit","56eb4892":"# remove outliers in feature campaign...\ndf2.groupby(['deposit','campaign'],sort=True)['campaign'].count()","3180824e":"# assuming campaign count greater than 32 are as outliers\ndf3 = df2[df2['campaign'] < 33]","c7cf9c30":"df3.groupby(['deposit','campaign'],sort=True)['campaign'].count()","0652fb4d":"# remove outliers in feature previous...\ndf3.groupby(['deposit','previous'],sort=True)['previous'].count()","e5550c9e":"df4 = df3[df3['previous'] < 31]","b385b78e":"# handle categorical features\ncat_columns = ['job', 'marital', 'education', 'contact', 'month', 'poutcome']\nfor col in  cat_columns:\n    df4 = pd.concat([df4.drop(col, axis=1),pd.get_dummies(df4[col], prefix=col, prefix_sep='_',drop_first=True, dummy_na=False)], axis=1)","c3f38c1a":"bool_columns = ['housing', 'loan', 'deposit']\nfor col in  bool_columns:\n    df4[col+'_new']=df4[col].apply(lambda x : 1 if x == 'yes' else 0)\n    df4.drop(col, axis=1, inplace=True)","d19a8cf6":"df4.head()","4703adbd":"X = df4.drop(['deposit_new'],axis=1)\ny = df4['deposit_new']\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=0)","5badab16":"len(X_train)","aaa94e5e":"len(X_test)","df88fad2":"# will try to use below two models that are RandomForestClassifier and XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import GridSearchCV","2867716f":"from sklearn.model_selection import cross_val_score\nmodel_score =cross_val_score(estimator=RandomForestClassifier(),X=X_train, y=y_train, cv=5)\nprint(model_score)\nprint(model_score.mean())","ab321c94":"from sklearn.model_selection import cross_val_score\nmodel_score =cross_val_score(estimator=XGBClassifier(),X=X_train, y=y_train, cv=5)\nprint(model_score)\nprint(model_score.mean())","ea1de99b":"#create param\nmodel_param = {\n    'RandomForestClassifier':{\n        'model':RandomForestClassifier(),\n        'param':{\n            'n_estimators': [10, 50, 100, 130], \n            'criterion': ['gini', 'entropy'],\n            'max_depth': range(2, 4, 1), \n            'max_features': ['auto', 'log2']\n        }\n    },\n    'XGBClassifier':{\n        'model':XGBClassifier(objective='binary:logistic'),\n        'param':{\n           'learning_rate': [0.5, 0.1, 0.01, 0.001],\n            'max_depth': [3, 5, 10, 20],\n            'n_estimators': [10, 50, 100, 200]\n        }\n    }\n}","9410d84b":"#gridsearch\nscores =[]\nfor model_name, mp in model_param.items():\n    model_selection = GridSearchCV(estimator=mp['model'],param_grid=mp['param'],cv=5,return_train_score=False)\n    model_selection.fit(X,y)\n    scores.append({\n        'model': model_name,\n        'best_score': model_selection.best_score_,\n        'best_params': model_selection.best_params_\n    })    ","bf09225a":"pd.set_option('display.max_columns', None)\nbest_model_df = pd.DataFrame(scores,columns=['model','best_score','best_params'])\nbest_model_df","d39664a5":"#as per above results, xgboost gives best result and hence selecting same to model building...\nmodel_xgb = XGBClassifier(objective='binary:logistic',learning_rate=0.1,max_depth=10,n_estimators=100)","b79e6aed":"model_xgb.fit(X_train,y_train)","46d9d728":"model_xgb.score(X_test,y_test)","905f99da":"#Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,model_xgb.predict(X_test))\ncm","4d406648":"#plot the graph\nfrom matplotlib import pyplot as plt\nimport seaborn as sn\nsn.heatmap(cm, annot=True,fmt='g')\nplt.xlabel('Predicted')\nplt.ylabel('True Value')\nplt.show()","ba9be484":"# Model Selection","15af6b98":"**5. Find Categorical Feature Distribution**","c3b043b5":"**3. Find Features with One Value**","c79d17a2":"**2. Find Missing Values**","cb5a2cdc":"**9. Relation between Discrete numerical Features and Labels**\n- NA","19df8987":"**7. Explore the Numerical Features**","e28256d5":"**Take-away**: \n- it seems age, days distributed normally\n- balance, duration, compaign, pdays and previous heavely skewed towards left and seems to be have some outliers.","0bc819a9":"**Feature**\n1. age | int64 | age in years\n2. job | object | type of job (categorical: ['admin.' 'technician' 'services' 'management' 'retired' 'blue-collar'\n 'unemployed' 'entrepreneur' 'housemaid' 'unknown' 'self-employed'\n 'student'])\n3. marital | object | marital status (categorical: ['married' 'single' 'divorced'])\n4. education | Object | education background (categorical: ['secondary' 'tertiary' 'primary' 'unknown'])\n5. default | Object | has credit in default?  (categorical: ['no' 'yes'])\n6. balance | int64 | Balance of the individual\n7. housing | object | has housing loan? (categorical: ['yes' 'no'])\n8. loan | object | has personal loan? (categorical: ['no' 'yes'])\n9. contact | object | contact communication type (categorical: ['unknown' 'cellular' 'telephone'])\n10. day | int64 | last contact day of the week (categorical: 'mon','tue','wed','thu','fri')\n11. month | object | last contact month of year (categorical: ['may' 'jun' 'jul' 'aug' 'oct' 'nov' 'dec' 'jan' 'feb' 'mar' 'apr' 'sep'])\n12. duration | int64 | last contact duration, in seconds (numeric)\n13. campaign | int64 | number of contacts performed during this campaign and for this client\n14. pdays | int64 | number of days that passed by after the client was last contacted from a previous campaign (numeric; 999 means client was not previously contacted)\n15. previous | int64 | number of contacts performed before this campaign and for this client\n16. poutcome | object | outcome of the previous marketing campaign (categorical: ['unknown' 'other' 'failure' 'success'])\n\n**Label**\n1. deposit | object | has the client subscribed a term deposit? (binary: 'yes','no')","217b06ae":"**11. Distribution of Continous Numerical Features**","3bdb3a81":"**Take-away**: \n- given dataset seems to be balanced. ","f37b3b49":"**13. Find Outliers in numerical features**","cc53ac55":"**Take-away**: \n- it seems no feature is heavily correlated with other features","d5a18d71":"- Drop unwanted Features\n- Handle Missing Values\n- Handle Categorical Features\n- Handle Feature Scalling\n- Remove Outliers","4f12e73a":"**6. Relationship between Categorical Features and Label**","6210f2b7":"**Take-away**:\n- No feature with only one value","8ae7d269":"# **Introduction**\n\nHello Guys, In this kernel we will try to perform exploratory data analysis and  build machine learning model to Predict Term Deposit Subscriptions in Bank. it will be supervised machine learning and this model will try to solve the classification problem like whether client will subscribe the term deposit in bank or not. you can check below youtube link for same.\n\nhttps:\/\/www.youtube.com\/watch?v=LanIDRcm5x8&list=PLNvKRfckeRUkR3ASlA0PKg6rTzlLjTvzS&index=6\n\n## **Data Description**\n\nThis is the classic marketing bank dataset uploaded originally in the UCI Machine Learning Repository. The dataset gives you information about a marketing campaign of a financial institution in which you will have to analyze in order to find ways to look for future strategies in order to improve future marketing campaigns for the bank.","2bd6f6af":"**Take-away**:\n- there are 7 continuous numerical features","708e3614":"**10. Find Continous Numerical Features**","a96dffff":"**Take-away**:\n- client with job type as management records are high in given dataset and housemaid are very less\n- client who married are high in records in given dataset and divorced are less\n- client whoes education background is secondary are in high numbers in given dataset\n- defualt feature seems to be does not play importand role as it has value of no at high ratio to value yes which can drop\n- data in month of may is high and less in dec","1339752a":"# Split Dataset into Training set and Test set","6e476b55":"**Take-away**:\n- age, balance, duration, compaign, pdays and previous has some outliers","14603d8d":"**Take-away**:\n- there are 9 categorical features\n- feature job and month has highest number of categorical values","a5610c8a":"**15. Check the Data set is balanced or not based on target values in classification**","2ac0adb3":"**Take-away**:\n- No missing value found","df2673e5":"**Take-away**:\n- these is no unwanted column present in given dataset to remove","aa0b15b8":"**Take-away**:\n- retired client has high interest on deposit\n- client who has housing loan seems to be not interested much on deposit\n- if pre campagin outcome that is poutcome=success then, there is high chance of client to show interest on deposit\n- in month of March, September, October and December, client show high interest to deposit\n- in month of may, records are high but client interst ratio is very less","5463a1ce":"**1. Find Unwanted Columns**","d05b03ea":"**8. Find Discrete Numerical Features**","cb81d36a":"**14. Explore the Correlation between numerical features**","029c4639":"**Take-away**:\n- there is no Discrete Variables in give dataset","7419729f":"As per Exploratory Data Analysis EDA, \n- no missing value found\n- no feature found with one value\n- 9 categorical features\n- defaut features does not play imp role\n- it seems some outliers found (age, balance, duration, compaign, pdays and previous has some outliers)","324d0b23":"# Feature Engineering","a0406258":"# Exploratory Data Analysis\n\n- Find Unwanted Columns\n- Find Missing Values\n- Find Features with one value\n- Explore the Categorical Features\n- Find Categorical Feature Distribution\n- Relationship between Categorical Features and Label\n- Explore the Numerical Features\n- Find Discrete Numerical Features\n- Relation between Discrete numerical Features and Labels\n- Find Continous Numerical Features\n- Distribution of Continous Numerical Features\n- Relation between Continous numerical Features and Labels\n- Find Outliers in numerical features\n- Explore the Correlation between numerical features\n- Find Pair Plot\n- Check the Data set is balanced or not based on target values in classification","4dd62cfd":"**Take-away**:\n- client shows interest on deposit who had discussion for longer duration","a7329d0e":"# Model Building","31d1b574":"**4. Explore the Categorical Features**","82398f75":"**Take-away**:\n- there are 7 numerical features","78c88283":"**12. Relation between Continous numerical Features and Labels**"}}