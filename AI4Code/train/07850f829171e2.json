{"cell_type":{"57ea73b9":"code","99186bac":"code","b18e792e":"code","f596f654":"code","dcc02349":"code","5c14b0cc":"code","1ec9a1f5":"code","abed7cd8":"code","825b9c21":"code","8b5745b8":"code","8e62980e":"code","a3bc27a8":"code","4e38f387":"code","34c6dd0c":"code","dcef34f2":"code","3c881b3d":"code","a508cdf8":"code","27a60f1b":"code","ea904a77":"code","5a684549":"code","b9700f91":"code","2101f96b":"code","e0344b9d":"code","934d4277":"code","6995fe40":"code","966a92b8":"code","87dd3d19":"markdown","961bd8bb":"markdown","b81bdc90":"markdown","bb88db0f":"markdown","fc079bfc":"markdown","877684be":"markdown","526bad10":"markdown","5cf5e2b1":"markdown","9bb13656":"markdown","a3ea6251":"markdown"},"source":{"57ea73b9":"import numpy as np\nimport pandas as pd\nfrom sklearn.datasets import load_boston\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","99186bac":"# Read the dataset\ndata = load_boston()","b18e792e":"print(data.DESCR)","f596f654":"print(type(data.data))\nprint(type(data.target))","dcc02349":"print(data.data.shape)\nprint(data.target.shape)","5c14b0cc":"df = pd.DataFrame(data.data, columns=data.feature_names)\ndf.head()","1ec9a1f5":"df['PRICE'] = data.target\ndf.head()","abed7cd8":"df.describe(include='all')","825b9c21":"df.info()","8b5745b8":"# Correlation\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Get correlations of each pair of features in the data\ncorrmat = df.corr()\ntop_corr_features = corrmat.index\nplt.figure(figsize=(20, 20))\n\n# Plot the heat map\nsns.heatmap(df[top_corr_features].corr(), annot=True, cmap='RdYlGn')\nplt.show()","8e62980e":"X, y = df.iloc[:, :-1], df.iloc[:, -1]","a3bc27a8":"print(X.shape)\nprint(y.shape)","4e38f387":"from sklearn import model_selection\n\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.2, shuffle=True, random_state=0)\n\nprint(y.shape[0])\nprint(y_train.shape[0])\nprint(y_test.shape[0])","34c6dd0c":"import xgboost as xgb\nxgreg = xgb.XGBRegressor(tree_method = 'gpu_hist')\nxgreg.fit(X_train, y_train)","dcef34f2":"# r2 score, coefficient of determination\nscore = xgreg.score(X_train, y_train)\nprint(\"r2_score on training data =\", score)","3c881b3d":"from sklearn import metrics\n\nprint(\"r2_score on training data =\", metrics.r2_score(y_true=y_train, y_pred=xgreg.predict(X_train), \n                                                      multioutput='variance_weighted'))","a508cdf8":"print(\"r2_score on test data =\", metrics.r2_score(y_true=y_test, y_pred=xgreg.predict(X_test), \n                                                      multioutput='variance_weighted'))","27a60f1b":"# Hyperparameter Optimization\nxgreg = xgb.XGBRegressor(tree_method = 'gpu_hist')\n\n# Default-Run of default-hyperparameters\nparameters = {'learning_rate': [0.3], 'max_depth': [6], 'min_child_weight': [1], 'n_estimators': [100]}\n\nreg_xgb = model_selection.GridSearchCV(estimator=xgreg, param_grid=parameters, n_jobs=-1, cv=3, refit=True, verbose=1)\nreg_xgb.fit(X_train, y_train)","ea904a77":"print(reg_xgb.best_params_)\nprint(reg_xgb.best_score_)\nprint(reg_xgb.best_estimator_)","5a684549":"# 1st-Run for best hyperparameters\nparameters = {'learning_rate': [0.1, 0.2, 0.3, 0.4, 0.5], \n              'max_depth': [2, 4, 6, 8, 10], \n              'min_child_weight': [1, 10, 20, 30, 40, 50], \n              'n_estimators': [100, 200, 300, 400, 500]}\n\nreg_xgb = model_selection.GridSearchCV(estimator=xgreg, param_grid=parameters, n_jobs=-1, cv=3, refit=True, verbose=1)\nreg_xgb.fit(X_train, y_train)","b9700f91":"print(reg_xgb.best_params_)\nprint(reg_xgb.best_score_)\nprint(reg_xgb.best_estimator_)","2101f96b":"# 2nd-Run for best hyperparameters\nparameters = {'learning_rate': [0.3, 0.35, 0.4, 0.45, 0.5], \n              'max_depth': [2, 3, 4, 5, 6], \n              'min_child_weight': [10, 15, 20, 25, 30], \n              'n_estimators': [50, 100, 150, 200, 250]}\n\nreg_xgb = model_selection.GridSearchCV(estimator=xgreg, param_grid=parameters, n_jobs=-1, cv=3, refit=True, verbose=1)\nreg_xgb.fit(X_train, y_train)","e0344b9d":"print(reg_xgb.best_params_)\nprint(reg_xgb.best_score_)\nprint(reg_xgb.best_estimator_)","934d4277":"# 3rd-Run for best hyperparameters\nparameters = {'learning_rate': [0.35, 0.375, 0.4, 0.425, 0.45], \n              'max_depth': [3, 4, 5, 6, 7], \n              'min_child_weight': [15, 18, 20, 22, 25], \n              'n_estimators': [80, 90, 100, 110, 120]}\n\nreg_xgb = model_selection.GridSearchCV(estimator=xgreg, param_grid=parameters, n_jobs=-1, cv=3, refit=True, verbose=1)\nreg_xgb.fit(X_train, y_train)","6995fe40":"print(reg_xgb.best_params_)\nprint(reg_xgb.best_score_)\nprint(reg_xgb.best_estimator_)","966a92b8":"final_model = xgb.XGBRegressor(learning_rate = 0.425, max_depth=3, min_child_weight=22, n_estimators=120, tree_method = 'gpu_hist')\n\nfinal_model.fit(X_train, y_train)\n\nprint(\"r2_score on train data =\", metrics.r2_score(y_true=y_train, y_pred=xgreg.predict(X_train), \n                                                      multioutput='variance_weighted'))\nprint(\"r2_score on test data =\", metrics.r2_score(y_true=y_test, y_pred=xgreg.predict(X_test), \n                                                      multioutput='variance_weighted'))","87dd3d19":"<a id=\"section-eight\"><\/a>\n# Final Model","961bd8bb":"<a id=\"section-three\"><\/a>\n# Model Building Preparation","b81bdc90":"<a id=\"section-six\"><\/a>\n# 2nd Run for Hyperparameters","bb88db0f":"<a id=\"section-one\"><\/a>\n# Initial Setup","fc079bfc":"<a id=\"section-five\"><\/a>\n# 1st Run for Hyperparameters","877684be":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:150%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;color:white;\">Thank You<\/p>\n<\/div>","526bad10":"<a id=\"section-seven\"><\/a>\n# 3rd Run for Hyperparameters","5cf5e2b1":"<a id=\"section-two\"><\/a>\n# Plotting Graphs for Relations","9bb13656":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:150%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;color:white;\">Hyperparameter Optimization for XGBoost using GridSearchCV<\/p>\n<\/div>\n\n* [**Intial Setup**](#section-one)\n* [**Plotting Graphs for Relations**](#section-two)\n* [**Model Building Preparation**](#section-three)\n* [**Default Run for Hyperparameters**](#section-four)\n* [**1st Run for Hyperparameters**](#section-five)\n* [**2nd Run for Hyperparameters**](#section-six)\n* [**3rd Run for Hyperparameters**](#section-seven)\n* [**Final Model**](#section-eight)","a3ea6251":"<a id=\"section-four\"><\/a>\n# Default Run for Hyperparameters"}}