{"cell_type":{"28af34cd":"code","1783e48f":"code","0f33d6d7":"code","17235cc9":"code","5349fe87":"code","69acb789":"code","e692d7b1":"code","0ec43b46":"code","816e1ef3":"code","4654c369":"code","c8e09e92":"code","386caa54":"code","2406a8ef":"code","930c87d8":"code","a48c0e30":"code","9f0c19a6":"code","daafe8b2":"code","1dbdddfc":"code","18e3699e":"code","a6670333":"code","39003fa5":"code","b1fc4848":"code","a85e4307":"code","de74b05f":"code","b3332122":"code","f8b66743":"code","c26db4f8":"code","777a2c64":"code","390dbbbb":"code","80b9f1fe":"code","cbac0c1b":"code","3bc9fb97":"code","1ebb57df":"code","14d801f5":"code","7961bc59":"code","00156c7f":"code","1ea8b53b":"code","ddf0ae17":"code","1cb18692":"code","1f7abc68":"code","3c676d01":"code","1014ecb5":"code","bd4c87de":"code","ea731707":"code","017f6704":"code","29514770":"code","650ae3ef":"code","1e1e98ec":"code","53a62c02":"code","30e022be":"code","97936421":"code","f1c074da":"code","ca1f9972":"code","d69baf98":"code","9aa867d6":"code","62b6cc34":"code","dc0a1042":"code","33c97372":"code","c1cfa42f":"code","dae8dcc8":"code","52c85060":"code","ffb14971":"code","164fa009":"code","7cf7b9e3":"code","31e6a655":"code","aec06753":"code","30f402f8":"code","1db7367f":"code","05a860f4":"code","cda16eed":"code","a5ad6ebc":"code","abb35285":"code","f79b49d0":"code","4d1a90d3":"code","a0fc1fbd":"code","4e473b30":"markdown","f423e7c1":"markdown","5c8d75e4":"markdown","33940caa":"markdown","4ebf6ced":"markdown","cf577d5f":"markdown","5ce8cb37":"markdown","b3e4fb0a":"markdown","edd7deed":"markdown","8516ac1b":"markdown","0bea410d":"markdown","52fcf305":"markdown","a0410071":"markdown","9d606958":"markdown","8898d2ac":"markdown","f67541bf":"markdown","9f241518":"markdown","6a24ec8c":"markdown","53582a38":"markdown","f759476e":"markdown","05d949a5":"markdown","6573a39d":"markdown","dc0eff82":"markdown","04e89d3f":"markdown","6cf88b86":"markdown","1a8c38b1":"markdown","f85b79c3":"markdown","76b5aaae":"markdown","0667ee2d":"markdown","9efd7b35":"markdown","ee3ca420":"markdown","9fdaec2c":"markdown","c9c4f27c":"markdown","e8ce7cf0":"markdown","91c0f368":"markdown","84dea759":"markdown","eea0c894":"markdown","9970734c":"markdown","bb0d3dbc":"markdown","e44ced44":"markdown","d5687c3d":"markdown","f738014d":"markdown","90f5219f":"markdown","f5213423":"markdown","4f4c4d88":"markdown","a4facaf0":"markdown","78a207b7":"markdown","6d27709b":"markdown","b1867871":"markdown","6925350e":"markdown","b83cb1a1":"markdown"},"source":{"28af34cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1783e48f":"df = pd.read_csv('\/kaggle\/input\/zomato-bangalore-restaurants\/zomato.csv')","0f33d6d7":"df.head()","17235cc9":"df.info()","5349fe87":"df.columns","69acb789":"df['listed_in(city)'].unique()","e692d7b1":"df['location'].unique()","0ec43b46":"df.drop(['url', 'address', 'phone', 'listed_in(city)'], axis = 1, inplace = True)","816e1ef3":"df.isnull().sum()","4654c369":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndef missing_values(data, thresh = 20, color = 'black', edgecolor = 'black', height = 3, width = 15):\n    \n    plt.figure(figsize = (width, height))\n    percentage = (data.isnull().mean()) * 100\n    percentage.sort_values(ascending = False).plot.bar(color = color, edgecolor = edgecolor)\n    plt.axhline(y = thresh, color = 'r', linestyle = '-')\n    \n    plt.title('Missing values percentage per column', fontsize = 20, weight = 'bold' )\n    \n    plt.text(len(data.isnull().sum()\/len(data))\/1.7, thresh + 12.5, f'Columns with more than {thresh}% missing values', fontsize = 12, color = 'crimson',\n         ha = 'left' ,va = 'top')\n    plt.text(len(data.isnull().sum()\/len(data))\/1.7, thresh - 5, f'Columns with less than {thresh}% missing values', fontsize=12, color='green',\n         ha = 'left' ,va = 'top')\n    plt.xlabel('Columns', size = 15, weight = 'bold')\n    plt.ylabel('Missing values percentage')\n    plt.yticks(weight = 'bold')\n    \n    return plt.show()\n","c8e09e92":"missing_values(df, thresh = 20, color = sns.color_palette('Reds',15))","386caa54":"df.drop(['dish_liked'], axis = 1, inplace = True)","2406a8ef":"missing_values(df, thresh = 20, color = sns.color_palette('Reds',15))","930c87d8":"df['rate'] = df['rate'].fillna(df['rate'].mode()[0])","a48c0e30":"missing_values(df, thresh = 20, color = sns.color_palette('Reds',15))","9f0c19a6":"previous_df = df\ndf.dropna(inplace = True)","daafe8b2":"missing_values(df, thresh = 20, color = sns.color_palette('Reds',15))","1dbdddfc":"df.isnull().sum().sum()","18e3699e":"print(\"Number of rows present in the dataset are: \", df.shape[0])\nprint(\"Number of columns present in the dataset are: \", df.shape[1])","a6670333":"df['rate'].value_counts()","39003fa5":"print(\"rate column type: \", type(df['rate'][0]))","b1fc4848":"df['rate'].replace({\"NEW\" : \"2.5 \/5\"}, inplace = True)","a85e4307":"df['rate'].unique()","de74b05f":"df.loc[df['rate'] == '-'].head(5)","b3332122":"a = df.loc[df['rate'] == '-'].index\ndf.drop(a, axis = 0, inplace = True)","f8b66743":"df['rate'].unique()","c26db4f8":"df['rate'] = df['rate'].apply(lambda x : x.split('\/')[0])","777a2c64":"df['rate'].unique()","390dbbbb":"df['rate'] = df['rate'].apply(lambda x : x.split(' ')[0])","80b9f1fe":"df['rate'].unique()","cbac0c1b":"df = df.astype({'rate' : float})\nprint(df['rate'].dtype)","3bc9fb97":"plt.figure(figsize = (10, 10))\nsns.distplot(df['rate'], color = 'red')","1ebb57df":"plt.figure(figsize = (10, 10))\nsns.countplot(df['rate'], color = 'crimson')","14d801f5":"print(\"Restaurants having the highest ratings are: \\n\", df.loc[(df['rate'] == 4.8) | (df['rate'] == 4.9)]['name'].unique())","7961bc59":"print(\"Total number of restaurants in Bengaluru are: \", len(df['name'].unique()))","00156c7f":"plt.figure(figsize = (6, 6))\ndf['name'].value_counts().head(10)\nindex = df['name'].value_counts().head(10).index\nvalues = df['name'].value_counts().head(10).values\ng = sns.barplot(x = index, y = values, data = df)\ng.set_xticklabels(labels = index, rotation = 90)\ng","1ea8b53b":"df.groupby('name')['rate'].mean().sort_values(ascending = False).head(15)","ddf0ae17":"df.groupby('name')['votes', 'rate'].max().sort_values(ascending = False, by = 'votes').head(15)","1cb18692":"names = df.groupby('name')['rate'].mean().sort_values(ascending = False).head(15).index\nlocations = []\nfor i in names:\n    loc = []\n    locations.append(df.loc[df['name'] == i]['location'].unique().tolist())\nname_location = dict(zip(names, locations))\nname_location","1f7abc68":"df['online_order'].unique()","3c676d01":"df['online_order'].replace({'Yes' : 1, 'No' : 0}, inplace = True)\n# Converting to integer data type.","1014ecb5":"plt.figure(figsize = (7, 7))\nsns.countplot(df['online_order'], color = 'green')","bd4c87de":"correlation = df.corr()['rate'].sort_values(ascending = False).to_frame().head(10)\n\ncmap = sns.light_palette(\"cyan\", as_cmap = True)\n\ns = correlation.style.background_gradient(cmap = cmap)\n\ns","ea731707":"sns.boxplot(x = 'online_order', y = 'rate', data = df)","017f6704":"df['book_table'].unique()","29514770":"df['book_table'].replace({'Yes' : 1, 'No' : 0}, inplace = True)","650ae3ef":"correlation = df.corr()['rate'].sort_values(ascending = False).to_frame().head(10)\n\ncmap = sns.light_palette(\"red\", as_cmap = True)\n\ns = correlation.style.background_gradient(cmap = cmap)\n\ns","1e1e98ec":"plt.figure(figsize = (7, 7))\nsns.countplot(df['book_table'], color = 'lightgreen')","53a62c02":"sns.boxplot(x = 'book_table', y = 'rate', data = df)","30e022be":"print(\"Data type for Approximate cost is: \", df['approx_cost(for two people)'].dtype)","97936421":"df['approx_cost(for two people)'] = df['approx_cost(for two people)'].apply(lambda x : x.replace(',', ''))","f1c074da":"df = df.astype({'approx_cost(for two people)' : int})\nprint(df['approx_cost(for two people)'].dtype)","ca1f9972":"correlation = df.corr()['rate'].sort_values(ascending = False).to_frame().head(10)\n\ncmap = sns.light_palette(\"pink\", as_cmap = True)\n\ns = correlation.style.background_gradient(cmap = cmap)\n\ns","d69baf98":"df.groupby('name')['rate', 'approx_cost(for two people)'].mean().sort_values(by = 'rate', ascending = False).head(15)","9aa867d6":"plt.figure(figsize = (8, 8))\nsns.distplot(df['approx_cost(for two people)'])","62b6cc34":"df['approx_cost(for two people)'].sort_values(ascending = False)","dc0a1042":"print(\"The name of the most expensive restaurant is {} and it is located at {}\".format(\n    df.loc[df['approx_cost(for two people)'] == df['approx_cost(for two people)'].max()]['name'].unique()[0],\n    df.loc[df['approx_cost(for two people)'] == df['approx_cost(for two people)'].max()]['location'].unique()[0]\n))","33c97372":"df['approx_cost(for two people)'].sort_values(ascending = False).head(15).unique()","c1cfa42f":"from geopy.geocoders import Nominatim\ngeolocator = Nominatim(user_agent=\"example app\")","dae8dcc8":"geolocator.geocode(\"Thippasandra, Bengaluru\").point # Sample use","52c85060":"df['location'] = df['location'].apply(lambda x : x + ', Bengaluru')","ffb14971":"locations = []\npoints = []\nfor i in df['location'].unique():\n#     print(i)\n    if geolocator.geocode(i):\n        locations.append(i)\n        points.append(geolocator.geocode(i).point)\n    else:\n        continue","164fa009":"location_point = {}\nlocation_point['Locations'] = locations\nlocation_point['Points'] = points\n\nlocation_point = pd.DataFrame(location_point)","7cf7b9e3":"location_point","31e6a655":"location_point[['lat', 'lon', 'altitude']] = pd.DataFrame(location_point['Points'].to_list())","aec06753":"location_point","30f402f8":"import folium\n\n# Create a map object and center it to the avarage coordinates to m\nm = folium.Map(location = location_point[[\"lat\", \"lon\"]].mean().to_list(), zoom_start = 2)\n\nfor i in range(0,len(location_point)):\n    folium.Marker([location_point.iloc[i]['lat'], location_point.iloc[i]['lon']]).add_to(m)\nm","1db7367f":"df.groupby('location')['rate'].mean().sort_values(ascending = False).head(10)","05a860f4":"df['cuisines'].unique()","cda16eed":"len(df['cuisines'][4].split(','))","a5ad6ebc":"df['Number_of_cuisines_offered'] = df['cuisines'].apply(lambda x : len(x.split(',')))","abb35285":"df.corr()","f79b49d0":"correlation = df.corr()['rate'].sort_values(ascending = False).to_frame().head(10)\n\ncmap = sns.light_palette(\"orange\", as_cmap = True)\n\ns = correlation.style.background_gradient(cmap = cmap)\n\ns","4d1a90d3":"# Pie chart\nlabels = df['listed_in(type)'].value_counts().index\nsizes = df['listed_in(type)'].value_counts().values\n# only \"explode\" the 2nd slice (i.e. 'Hogs')\nexplode = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1)\nfig1, ax1 = plt.subplots(figsize = (8, 8))\n\nax1.pie(sizes, labels = labels,\n        shadow = True, startangle = 90, explode = explode, rotatelabels = True)\ncentre_circle = plt.Circle((0, 0), 0.70,fc = 'white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.show()","a0fc1fbd":"plt.figure(figsize = (8, 8))\ng = sns.boxplot(x = 'listed_in(type)', y = 'rate', data = df)\nplt.xticks(rotation = 90)\nplt.show()","4e473b30":"The above 10 locations have the best average ratings. These are the paces you must visit if you are a food lover.","f423e7c1":"Votes contains total number of rating for the restaurant.","5c8d75e4":"As expected, these are restaurant chains that are present all around the globe. These restaurants are pretty amazing that's why they have the highest rating. \n\nNote: The one restaurant having such a large name must have been parsed incorrectly by the creator.","33940caa":"Let's see which is the most expensive restaurant.","4ebf6ced":"# Null Values","cf577d5f":"Book_table has a correlation of 0.39 with the ratings given.","5ce8cb37":"The same restaurant chain can be present at different location. Let's first check the number of unique restaurant present in the city.","b3e4fb0a":"# Location","edd7deed":"Let's see which restaurant have the highest number of outlets across the city.\n\nBefore we use code to find out, let's guess first which kind of restaurants can have the highest number of outlets. Most probably some coffe chain, or ice-cream chain or sweet shop or famous pizza chain like Dominos or Pizza Hut will be having the maximum number of outlets.","8516ac1b":"We can see a category named 'new' which indicates that the restaurant is fairly new, hence we will replace the value 'new' with '2.5' as it can be mode as well as bad..we don't know that yet. Please note we will replace with '2.5 \/5' for maintaing uniform format.","0bea410d":"Majority of the Restaurants of type 'Drinks & nightlife' and 'Pubs and bars' have a high median rating. The median value of these kind of restaurants is greater than the 75th Percentile value of rest of the restaurant types except that of 'Buffet' type. The IQR is highest for 'Desserts' category which indicates large amount of variation about median. ","52fcf305":"Number of cuisines offered have very little correlation with the rating.","a0410071":"We can see that the top 15 restaurants by ratings are completely different from those which have the highest number of outlets.","9d606958":"# Bangalore Restaurants Analysis","8898d2ac":"# Book Table","f67541bf":"We have to convert it into integer.\n\nThere are values like '1,200' we need to first convert such strings to '1200' then to 1200.","9f241518":"We will remove the 'dish_liked' column as it contains more than 50% missing values.","6a24ec8c":"Correlation of 'rating' with 'online_table' is 0.242.","53582a38":"Perfect, after performing all the above steps we can finally convert the column values from string to float datatype.","f759476e":"Top 15 restaurants cost ran range from 4000 to 6000 Rupees for two people","05d949a5":"As discussed before '2.5' represents the 'NEW' restaurants, and there were about 9800 restaurants that were NEW, that's why the above distribution is multi-modal. If we ignore the 'NEW' Restaurants we can observe that the graph resembles bell-shape i.e it's normally distributed.","6573a39d":"Maximum of the restaurants are pretty NEW. Apart from the recently opened restaurants, most of the Restaurants received 3.9 rating, followed by 3.7 and 3.8. Only a few restaurants have 4.8 or 4.9 rating. Let's see which are these restaurants.","dc0eff82":"Let's plot the unique places where thse restaurants are located. First we will use Geopy to get the latitudes and longitudes of a particular location. Geopy provides a class for popular mapping services. Once we get the lat and long, we will use Folium to plot them on the map","04e89d3f":"We can observe some of the top-rated restaurants are quite expensive. Punjab Grill costs 1000 per person, whereas Taaza Thindi costs 50 per person.\n\nLet's see the distribution of this feature.","6cf88b86":"Please zoom into the map to see the unique places where restaurants are located. Two points are not present in Bengaluru, may be that's due to the wrong information returned by Geopy","1a8c38b1":"**Hope you liked the notebook, any suggestions would be highly appreciated.**\n\n**I will continue experimenting in future versions of the notebook.**\n\n**Please upvote if you liked it.**","f85b79c3":"We will remove the rows having null values for the above column","76b5aaae":"We can observe from the above plot that those restaurants which offer online order has a higher median rating as compared to those restaurants that don't. \n\nAs IQR for restaurants offering online order is much less than that of restaurants not offering online order, we can say that restaurants offering online order has better ratings in general.\n\nIt makes sense also because Zomato offers home delivery for online orders also, so more people will give rating for online_order restaurants on their platform.","0667ee2d":"# Cuisines","9efd7b35":"There are about 65 such rows, we will drop these 65 rows because the value for 'rate' column is\n'-'","ee3ca420":"# Approx Cost","9fdaec2c":"As our aim is to get a fair idea about the factors affecting the establishment\nof different types of restaurant at different places in Bengaluru, we will remove certain columns that are not of much help to us. First we will remove 'url' column as it does not play a major role. 'Address' can also be removed because 'location' is a much easier and better feature to analyze as compared to 'address'. 'Phone' will also be removed.\n\nAs we can observe the 'location' field offers more precise location as compared to the column 'listed_in(city)' column, we will use the 'location' column.","c9c4f27c":"Above is a list of the top 15 restaurants by rating and the locations where they are present.","e8ce7cf0":"We have successfully converted the 'rate' column values to float.","91c0f368":"# Name","84dea759":"Again we will need to change 'Yes' or 'No' to 1 or 0 respectively.","eea0c894":"The unique values for 'online_order' columns are 'Yes' or 'No'. These values needs to be converted to numerical 1 or 0.","9970734c":"In order to analyse the cuisine column, let's make a new column called 'Number_of_cuisines_offered'.  ","bb0d3dbc":"# Online Order","e44ced44":"# Rating Distribution","d5687c3d":"Wow, only 7500 restaurants books a table in advance. Rest of the 43000 restaurants don't book table in advance. Let's see if this affects the rating of the restaurant.","f738014d":"Majority of the restaurants Delivers the food to the homes, very less proportion are pubs and bars or Drinks & nightlife.","90f5219f":"Now we can see all the unique values present are scores out of 5. But still there is a problem which we have not solved. Think about it for a while.\n\nThe problem is that the given scores are out of 5 and that the data type is string. So first we will need to store only the scores and then convert into float datatype.","f5213423":"For the null values present in the 'rate' column, we will replace them with the mode of the 'rate' column. We can not remove this column, because we won't have any dependent column left with us once we remove it.","4f4c4d88":"Therefore, no null values are present in the dataset. Let's move onto the analysis part.","a4facaf0":"Above are the 15 restaurants that have got the highest number of user votes. The ratings for these restaurants are also very high as expected. More votes most probably leads to better rating.","78a207b7":"![75161189.cms.jpeg](attachment:75161189.cms.jpeg)","6d27709b":"Eventhough there are some outliers for the book_table class, we can see that the lower whisker of '1''s boxplots which represents the minimum rating of the restaurants that book table in advance, is greater than the 50th percentile value or the median of the ratings of the restaurants that don't book table in advance. \n\nSome restaurants that don't book table in advance also have ratings close to 5. The IQR for '1' boxplot is quite small which represents small variation of the ratings around median. Therefore, if the restaurants offer to book table in advance, more ratings are given.","b1867871":"For some values, there is still a blank after the end of the string like '3.4 '. We will need to remove such spaces.","6925350e":"**In this notebook, we analyse the restaurants which are located in the 'Silicon Valley' of India i.e Bengalore. There are various columns present in the dataset and we will through them. I have used various types of charts for visualizations and have plotted certain locations on the map using GeoPy and Folium. Don't miss to check them out.**\n\n**Any suggestions would be highly appreciated, and please upvote if you liked it**.","b83cb1a1":"Boom, our guess was pretty accurate. Cafe Coffee Day(a coffee chain) had the maximum number of outlets. Sweet shops like Kanti sweet or pizza chains like Pizza Hut also have a lot of outlets across the city.\n\nHaving a large number of outlets does not gurantee a higher rating. Let's see which restaurant chain have the highest rating grouping by their name."}}