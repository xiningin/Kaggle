{"cell_type":{"46ffe736":"code","ff56df4b":"code","46e1daa5":"code","b5cdb5a4":"code","320bf10f":"code","5dc76900":"code","0a97b731":"code","9a231451":"code","5f152599":"code","09768c82":"code","455b2ddc":"code","ebbc79d7":"code","bf879c11":"code","dc81a5d1":"code","36577e29":"code","910f1971":"code","73181f26":"code","c8970c74":"code","8c708506":"code","d5c59313":"code","c2e2fac7":"code","7da537f2":"code","2169b7db":"code","0049a464":"code","c77c14ac":"code","0a15a3e7":"code","383286ec":"code","4f1facc4":"code","b9f2b88c":"code","5735101f":"code","f9d4791b":"code","179ec5b0":"code","756b2183":"code","74d8a98e":"code","11299c15":"code","495d75f8":"code","f95b1b98":"code","f2f89503":"code","dfd1782c":"code","9a304da0":"code","156ece4d":"code","85439c16":"code","d8e793e2":"code","2a3c230d":"code","dc7e7faa":"code","1a98d435":"code","cc2b41e6":"code","e0ce1bb1":"code","96215aef":"code","3849facf":"code","aa200547":"code","439759fc":"code","55e93b5b":"code","6526a3ae":"code","d2c50c77":"code","3de5c054":"code","bbc2f19e":"code","8d4b6c43":"code","f6f8c6e4":"code","09ed4551":"code","cdf51ce7":"code","ddd14a10":"code","c47dfadf":"code","2d299b6c":"code","e1383733":"code","7952ab86":"code","8310c495":"code","e5b12df9":"markdown"},"source":{"46ffe736":"import pandas as pd\nimport numpy as np","ff56df4b":"#creating series\nlabels=['a','b','c']\nmy_list=[10,20,30]\narr=np.array([10,20,30])\nd={'a':10,'b':20,'c':30}","46e1daa5":"pd.Series(data=my_list)","b5cdb5a4":"pd.Series(data=my_list, index=labels)","320bf10f":"pd.Series(my_list,labels)","5dc76900":"#Using Numpy Arrays indexing\narr=np.array([10,20,30])\npd.Series(arr)\n","0a97b731":"pd.Series(arr,labels)","9a231451":"pd.Series(data=labels)","5f152599":"pd.Series([sum,print,len])","09768c82":"ser1=pd.Series([1,2,3,4],index=['India','USA','Germany','Japan'])","455b2ddc":"ser1","ebbc79d7":"ser2=pd.Series([1,2,3,4],index=['Italy','USA','Germany','Japan'])","bf879c11":"ser2","dc81a5d1":"ser1['USA'] #case sensitive we not use 'usa' in place of USA\n","36577e29":"ser1+ser2","910f1971":"from numpy.random import randn\nnp.random.seed(101)","73181f26":" df = pd.DataFrame(randn(5, 4),index = 'A B C D E'.split(), columns = 'W X Y Z'.split())","c8970c74":"df","8c708506":"#Selecting Rows","d5c59313":"df.loc['D']","c2e2fac7":"df.iloc[2]","7da537f2":"df.loc['B', 'X']","2169b7db":"df.loc[['C','D'],['X','Z']]","0049a464":"df >0 #give the result which has positive integer","c77c14ac":"df[df>0]  #show only true values","0a15a3e7":"df[(df >0) | (df <0)]","383286ec":"df[(df >0)& (df <0)]","4f1facc4":"df[(df['W']>0)& df['Y']>1]","b9f2b88c":"df.reset_index()","5735101f":"new_index='AA EE II OO UU'.split()\ndf['new_ind']=new_index\ndf","f9d4791b":"df.set_index('new_ind')","179ec5b0":"df","756b2183":"#multi_index and index hierarchy","74d8a98e":"outside=['A1','A1','A1','E2','E2','E2']\ninside=[1,2,3,1,2,3]\nhier_index= list(zip(outside,inside))\nhier_index=pd.MultiIndex.from_tuples(hier_index)","11299c15":"hier_index","495d75f8":"df=pd.DataFrame(np.random.randn(6,2),hier_index,columns=['I','O'])","f95b1b98":"df","f2f89503":"df.loc['A1'].loc[1]","dfd1782c":"df.index.names","9a304da0":"df.index.names=['Group','Num']\ndf","156ece4d":"df.xs('A1')","85439c16":"df.xs(['A1',1])","d8e793e2":"df.xs(1,level='Num')","2a3c230d":"df=pd.DataFrame(\n{\n    'A':[1,2,np.nan],\n'B':[5,np.nan,np.nan],\n    'C':[1,2,3]\n}\n)","dc7e7faa":"df","1a98d435":"df.fillna(value='Demo')  #nan value replace with Demo word","cc2b41e6":"data ={'company':['GOOG','GOOG','MSFT','MSFT','FB','FB'],\n       'person':['ram','shyam','mohan','rohan','piyush','abhishek'],\n'sales':[200,120,240,124,35,350]      \n      }","e0ce1bb1":"df=pd.DataFrame(data)\ndf","96215aef":"df.groupby('company')","3849facf":"by_comp=df.groupby('company')","aa200547":"by_comp.mean()  #mean applying on variable","439759fc":"by_comp.min()","55e93b5b":"by_comp.max()  #max function calling","6526a3ae":"by_comp.count()","d2c50c77":"#all information like ,min,max,count and all\nby_comp.describe()","3de5c054":"by_comp.describe().transpose()['FB']","bbc2f19e":"#Create dataframe to perform different operations\n\ndummy_data1 = {\n        'id': ['1', '2', '3', '4', '5'],\n        'Feature1': ['A', 'C', 'E', 'G', 'I'],\n        'Feature2': ['B', 'D', 'F', 'H', 'J']}\n\ndf = pd.DataFrame(dummy_data1, columns = ['id', 'Feature1', 'Feature2'])\n","8d4b6c43":"df","f6f8c6e4":"dummy_data2 = {\n        'id': ['1', '2', '6', '7', '8'],\n        'Feature1': ['K', 'M', 'O', 'Q', 'S'],\n        'Feature2': ['L', 'N', 'P', 'R', 'T']}\ndf = pd.DataFrame(dummy_data2, columns = ['id', 'Feature1', 'Feature2'])","09ed4551":"df","cdf51ce7":"dummy_data3 = {\n        'id': ['1', '2', '3', '4', '5', '7', '8', '9', '10', '11'],\n        'Feature3': [12, 13, 14, 15, 16, 17, 15, 12, 13, 23]}\ndf = pd.DataFrame(dummy_data3, columns = ['id', 'Feature3'])","ddd14a10":"df","c47dfadf":"#Concatenate DataFrames\n\ndf_row = pd.concat([df, df],ignore_index=True)\n\ndf_row","2d299b6c":"#Data Reading and Writing In DF","e1383733":"#for csv\n\ndf.to_csv('demo.csv')","7952ab86":"df2=pd.read_csv('demo.csv')","8310c495":"df2","e5b12df9":"Missing data"}}