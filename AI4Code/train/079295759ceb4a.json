{"cell_type":{"f66e4342":"code","1184b2c0":"code","3d218cc5":"code","16d41b2c":"code","b63bec52":"code","4d2da6ba":"code","c40c8a6e":"code","f0309af4":"code","0e76d34d":"code","57c48d90":"code","431d0556":"code","8448b8ea":"code","a3ccf135":"code","3a7009cc":"code","e0c28da2":"code","49644379":"code","48672430":"code","4fd44bab":"code","d8aa9ccc":"code","e81bfb37":"code","ae164eec":"code","6e8d4fcb":"code","f658f7fd":"code","c7b4fa6a":"code","9dbe9e91":"code","0910c318":"code","d9d86fe9":"code","e881e242":"code","ce4f1b86":"code","e9244959":"code","622f648d":"code","87f63acd":"code","2743b7e3":"code","576048de":"code","b7f64933":"code","9002d646":"code","693aeed2":"code","635bd1dc":"code","8b642457":"code","28ae1f39":"code","34191cb8":"code","0fed71bc":"code","f47ab4f1":"code","009f8ab9":"code","fb2a3365":"code","a2a9e966":"code","3b90563a":"code","59113e58":"code","d5d5d775":"code","c22be64e":"code","2393a836":"code","6c1c1e83":"code","9a5c0fa7":"code","55297567":"code","0472ca84":"code","23b4e41e":"code","7eaea001":"code","f6dccbb5":"code","31cd768a":"code","aff4f4a2":"code","30226a0c":"code","1449b7d3":"code","4622fe8f":"code","e83432d7":"code","b4cdd3e7":"code","1b220353":"code","c3b1dae7":"code","12cb7a38":"code","236fae6c":"code","e18fc673":"code","c9a9e11f":"code","1ccf9cac":"code","133ab1f5":"code","fa291b2f":"code","5dd88d16":"code","03acb266":"markdown","649ed029":"markdown","02a37eaa":"markdown","a3c2b0a3":"markdown","01362cfb":"markdown","620bc29e":"markdown"},"source":{"f66e4342":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1184b2c0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style(\"darkgrid\")","3d218cc5":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nsample = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")","16d41b2c":"train_df.head()","b63bec52":"test_df.head()","4d2da6ba":"sample.head()","c40c8a6e":"print(train_df.shape,test_df.shape)","f0309af4":"train_df.isnull().sum()","0e76d34d":"test_df.isnull().sum()","57c48d90":"#dealing with null values dropping columns with high null values\ntrain_df = train_df.drop(columns=['Cabin'])\ntrain_df.isnull().sum()","431d0556":"test_df=test_df.drop(columns=['Cabin'])\ntest_df.isnull().sum()","8448b8ea":"print(train_df.PassengerId.nunique(),train_df.Pclass.nunique(),train_df.Name.nunique(),train_df.Ticket.nunique())","a3ccf135":"train_df = train_df.drop(columns = ['PassengerId','Name','Ticket','Fare'])\ntest_df = test_df.drop(columns = ['PassengerId','Name','Ticket','Fare'])\ntrain_df.head()","3a7009cc":"train_df.info()","e0c28da2":"#Label Encoding\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","49644379":"col = ['Sex','Embarked']\nfor i in col:\n    train_df[i] = le.fit_transform(train_df[i])\n    test_df[i] = le.fit_transform(test_df[i])\ntrain_df.info()","48672430":"test_df.info()","4fd44bab":"a1 = train_df.columns.to_list()\na2 = test_df.columns.to_list()","d8aa9ccc":"train_df.isnull().sum()","e81bfb37":"test_df.isnull().sum()","ae164eec":"train_df['Age'].fillna(train_df['Age'].mean(),inplace=True)\ntest_df['Age'].fillna(test_df['Age'].mean(),inplace=True)","6e8d4fcb":"train_df.info()","f658f7fd":"train_df.columns = a1\ntest_df.columns = a2\ntrain_df.head()","c7b4fa6a":"print(train_df.shape,test_df.shape)","9dbe9e91":"train_df.describe()","0910c318":"target = train_df['Survived']\ndata = train_df.drop(columns = ['Survived'])","d9d86fe9":"#Normalizing\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ndata =sc.fit_transform(data)\ntest_df = sc.fit_transform(test_df)","e881e242":"from sklearn.model_selection import train_test_split\nx_train,x_test ,y_train,y_test = train_test_split(data,target,test_size = 0.2)\nprint(x_train.shape,y_train.shape)","ce4f1b86":"pd.DataFrame(x_train).head()","e9244959":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix","622f648d":"from sklearn.model_selection import GridSearchCV\n\ngrid_parmas={\n    'n_neighbors':[3,5,7,9,11],\n    'weights':['uniform','distance'],\n    'metric':['euclidean','manhattan']\n}","87f63acd":"gs=GridSearchCV(\n    KNeighborsClassifier(),\n    grid_parmas,\n    verbose=1,\n    cv=3\n)","2743b7e3":"gs_results=gs.fit(x_train,y_train)","576048de":"gs_results","b7f64933":"gs_results.best_params_","9002d646":"#train\nknn = KNeighborsClassifier(n_neighbors = 11,weights= 'uniform')","693aeed2":"knn.fit(x_train,y_train)","635bd1dc":"knn.score(x_train,y_train)*100","8b642457":"#testing\nknn.score(x_test,y_test)*100","28ae1f39":"pd.crosstab(y_test,knn.predict(x_test))","34191cb8":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(random_state =42)","0fed71bc":"#trian\nlr.fit(x_train,y_train)","f47ab4f1":"lr.score(x_train,y_train)*100","009f8ab9":"#test\nlr.score(x_test,y_test)*100","fb2a3365":"pd.crosstab(y_test,lr.predict(x_test))","a2a9e966":"print(classification_report(y_test,lr.predict(x_test)))","3b90563a":"from sklearn.tree import DecisionTreeClassifier","59113e58":"grid_params = {\n    'criterion' : ['gini', 'entropy'],\n    'max_depth' : range(2, 32, 1),\n    'min_samples_leaf' : range(1, 10, 1),\n    'min_samples_split' : range(2, 10, 1),\n    'splitter' : ['best', 'random']\n}","d5d5d775":"gs =GridSearchCV(\nDecisionTreeClassifier(),\n    grid_params,\n    verbose =1,\n    cv =3\n)","c22be64e":"#result  = gs.fit(x_train,y_train)","2393a836":"#result","6c1c1e83":"#gs.best_params_","9a5c0fa7":"dt = DecisionTreeClassifier(max_depth=5,criterion='entropy',min_samples_leaf=1,min_samples_split=2,splitter='best')","55297567":"#train\ndt.fit(x_train,y_train)","0472ca84":"dt.score(x_train,y_train)*100","23b4e41e":"#test\ndt.score(x_test,y_test)*100","7eaea001":"pd.crosstab(y_test,dt.predict(x_test))","f6dccbb5":"from sklearn.svm import SVC","31cd768a":"svm=SVC()","aff4f4a2":"#train\nsvm.fit(x_train,y_train)","30226a0c":"svm.score(x_train,y_train)","1449b7d3":"#test\nsvm.score(x_test,y_test)","4622fe8f":"models = [lr, knn , dt,svm]\nlabel = ['LR','KNN',\"DT\",\"SVM\"]\nacc = []\nfor i in models:\n    acc.append(i.score(x_test,y_test)*100)\nprint(acc)","e83432d7":"sns.barplot(x=acc,y=label);","b4cdd3e7":"sample.head()","1b220353":"pred = svm.predict(test_df)\npred","c3b1dae7":"pred = np.array(pred).tolist()","12cb7a38":"test= pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.shape","236fae6c":"test.insert(2,column='Survived',value=pred)\ntest.head()","e18fc673":"c=test.columns.to_list()\nc","c9a9e11f":"final_sub =test.drop(columns=[\n 'Pclass',\n 'Name',\n 'Sex',\n 'Age',\n 'SibSp',\n 'Parch',\n 'Ticket',\n 'Fare',\n 'Cabin',\n 'Embarked'])\n","1ccf9cac":"final_sub.isnull().any()","133ab1f5":"final_sub.sample(5)","fa291b2f":"final_sub.to_csv('final_final2.csv',index=False)","5dd88d16":"final_sub.head()","03acb266":"## SVM","649ed029":"## Decision Tree","02a37eaa":"> Saving final submission","a3c2b0a3":"## KNN","01362cfb":"## Splitting","620bc29e":"## Logistic Regression"}}