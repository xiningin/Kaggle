{"cell_type":{"d89c9da3":"code","6010249e":"code","f34a05f0":"code","b6380572":"code","b342296f":"code","fb7283ea":"code","0a54d745":"code","a50570cd":"code","7a02b2c7":"code","98b9970d":"code","f7a110aa":"code","65e63c8b":"code","8356d68b":"code","48e7d2b3":"code","aaf564e8":"code","f0c953b8":"code","0c1119bc":"code","8b7fee61":"code","10fd7cd8":"code","3276e49c":"code","2cda3b2b":"code","e5d59e52":"code","e006d5aa":"markdown","b4c41054":"markdown","15f188e5":"markdown","44d54376":"markdown","c4b81c92":"markdown","14350b65":"markdown","1bcb2ff3":"markdown","9f074612":"markdown","65427aa5":"markdown","99fb4477":"markdown","a6dbb452":"markdown","a2ae584f":"markdown","745a6e62":"markdown","c8b73427":"markdown","d07525cc":"markdown","2d55c559":"markdown"},"source":{"d89c9da3":"import numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nfrom pandas import concat\nimport matplotlib\nfrom datetime import datetime\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport os\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport pandas_datareader as web\nimport datetime as dt","6010249e":"JPM = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/JPM_data.csv')\n\nBOA = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/BAC_data.csv')\n\nCITI = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/C_data.csv')\n\nGS = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/GS_data.csv')","f34a05f0":"JPM.tail()","b6380572":"BOA.tail()","b342296f":"CITI.tail()","fb7283ea":"GS.tail()","0a54d745":"JPM['date'] = pd.to_datetime(JPM['date'])\nBOA['date'] = pd.to_datetime(BOA['date'])\nCITI['date'] = pd.to_datetime(CITI['date'])\nGS['date'] = pd.to_datetime(GS['date'])","a50570cd":"JPM.describe()","7a02b2c7":"BOA.describe()","98b9970d":"CITI.describe()","f7a110aa":"GS.describe()","65e63c8b":"ib_list = ['JPM', 'BOA', 'CITI', 'GS']\nib_bank_list = [JPM, BOA, CITI, GS]\nbank_name = ['JP Morgan', 'Bank of America', 'Citi', 'Goldman Sachs']\nfor i, bank in enumerate(ib_bank_list, 1):\n    bank['Name'] = bank_name[i-1]","8356d68b":"plt.figure(figsize = (21, 12))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    plt.hist([bank['open'], bank['close']], color = [\"dodgerblue\", \"lightsalmon\"])\n    plt.ylabel(\"Opening & Closing Price USD($)\")\n    plt.xlabel(\"No. of days\")\n    plt.title(f\"{bank_name[i - 1]}\")","48e7d2b3":"plt.figure(figsize = (20, 13))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    plt.plot(bank['date'], bank[['high','low']])\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"High & Low Prices USD($)\")\n    plt.title(f\"{bank_name[i - 1]}\")","aaf564e8":"plt.figure(figsize = (20, 13))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    bank[\"volume\"].plot(color = \"red\")\n    plt.ylabel(\"Volume\")\n    plt.xlabel(\"Days\")\n    plt.title(f\"{bank_name[i - 1]}\")","f0c953b8":"plt.figure(figsize = (20, 13))\nsma30 = []\nsma100 = []\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    avg30day = pd.DataFrame()\n    avg30day['close'] = bank['close'].rolling(window = 30).mean()\n    sma30.append(avg30day)\n    avg100day = pd.DataFrame()\n    avg100day['close'] = bank['close'].rolling(window = 100).mean()\n    sma100.append(avg100day)\n    plt.plot(bank['close'], label = f\"{ib_list[i - 1]}\")\n    plt.plot(avg30day['close'], label = 'SMA30')\n    plt.plot(avg100day['close'], label = 'SMA100')\n    plt.title(f\"{bank_name[i - 1]}\")\n    plt.xlabel(\"Date: 2013-02-08 to 2018-02-07\")\n    plt.ylabel(\"Close price\")\n    plt.legend(loc = \"upper left\")","0c1119bc":"matplotlib.pyplot.figure(figsize = (20, 13))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    sns.scatterplot(x = bank['volume'], y = bank['high'], color = 'purple')\n    plt.title(f\"{bank_name[i - 1]}\")   ","8b7fee61":"plt.figure(figsize = (20, 13))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)\n    bank['Daily Return'] = bank['close'].pct_change()\n    sns.distplot(bank['Daily Return'].dropna(),bins = 2000, color = \"gold\")\n    plt.ylabel('Close Price')\n    plt.title(f\"{bank_name[i - 1]}\")\n#plt.ioff()","10fd7cd8":"for i, bank in enumerate(ib_bank_list, 1):\n    bank['avg30day'] = sma30[i-1]\n    bank['avg100day'] = sma100[i-1]\n    i += 1","3276e49c":"def stock_interpretation(comp):\n    buy, sell, c = [], [], -1\n    for i in range(len(comp)):\n        if(comp['avg30day'][i] > comp['avg100day'][i]): #i is the position of the graph\n            if c != 1:\n                buy.append(comp['close'][i])\n                sell.append(np.nan)\n                c = 1\n            else:\n                buy.append(np.nan)\n                sell.append(np.nan)\n        elif(comp['avg30day'][i] < comp['avg100day'][i]):\n            if c!= 0:\n                buy.append(np.nan)\n                sell.append(comp['close'][i])\n                c = 0\n            else:\n                buy.append(np.nan)\n                sell.append(np.nan)\n        else:\n            buy.append(np.nan)\n            sell.append(np.nan)\n    return(buy, sell)","2cda3b2b":"#Cannot run a loop for the below code since same object name gives a type error\no1 = stock_interpretation(JPM)\nJPM['buy'] = o1[0]\nJPM['sell'] = o1[1]\no2 = stock_interpretation(BOA)\nBOA['buy'] = o2[0]\nBOA['sell'] = o2[1]\no3 = stock_interpretation(CITI)\nCITI['buy'] = o3[0]\nCITI['sell'] = o3[1]\no4 = stock_interpretation(GS)\nGS['buy'] = o4[0]\nGS['sell'] = o4[1]","e5d59e52":"plt.figure(figsize = (20, 13))\nfor i, bank in enumerate(ib_bank_list, 1):\n    plt.subplot(2, 2, i)   \n    plt.plot(bank['close'], label = f\"{ib_list[i - 1]}\", alpha = 0.3)\n    plt.plot(bank['avg30day'], label = 'SMA30', alpha = 0.3)\n    plt.plot(bank['avg100day'], label = 'SMA100', alpha = 0.3)\n    plt.scatter(bank.index, bank['buy'], label = 'buy', marker = \"^\", color = \"green\", s = 200)\n    plt.scatter(bank.index, bank['sell'], label = 'sell', marker = \"v\", color = \"red\", s = 200)\n    plt.title(f\"{bank_name[i - 1]} Stock Movement\")\n    plt.legend(loc = \"upper left\")\n    plt.xlabel(\"Date: 2013-02-08 to 2018-02-07\")\n    plt.ylabel(\"Close price\")","e006d5aa":"**Correlation of High & Low Stock Prices USD($)**","b4c41054":"Although volume has a negative correlation with high, low, opening and closing prices, volume turns out to be very useful to predict bullish signs. For instance, volume increases on a price decline and then the price moves higher, followed by a move back lower. If the price on the move back lower doesn't fall below the previous low, and volume is diminished on the second decline, then this is usually interpreted as a bullish sign. All these charts show more volume towards the lower spectrum of high price. ","15f188e5":"**Importing Dataset**","44d54376":"**Daily Volume**","c4b81c92":"**Correlation between Volume and High Price USD ($)**","14350b65":"Here, I will be displaying the last 5 values instead of the first 5 since the bottom values are of the year 2018. This dataset shows stock prices over the range of 5 years.","1bcb2ff3":"With Bank of America lagging behind, these charts demonstrate the opening and closing prices over a number of days. JP Morgan crossed $400 with Citi and Goldman Sachs closely following. This year, in the middle of the deepest recession in memory, stock markets are reaching new highs. Numerous investors still take a long-term perspective; they are looking ahead to the end of the pandemic. Another factor: five big-tech companies now make up 21 percent of the S&P 500, one of the world\u2019s most-watched markets. And smaller, unlisted companies have absorbed a lot of the economic damage, such as the dramatic rise in unemployment. The overall stock market has been doing relatively well.","9f074612":"Goldman Sachs has the highest stock price of $257.10 followed by JP Morgan. 2018 demonstrated a more bullish tone for Goldman. In fact, the firm had predicted the S&P 500 to close 2016 at just 2,400, a mark it passed in late May 2018 and never looked back.","65427aa5":"**Stock Movement**","99fb4477":"# **Buy & Sell Model**\nTo decide when to buy and sell a stock, we create a function that checks when the 30 day average and 100 day average meet at a point.","a6dbb452":"# INTRODUCTION\n\nThe goal of this kernel is to compare the top investment banks in S&P 500 namely JP Morgan, Bank of America, Citibank and Goldman Sachs. We will be seeing which bank has been showing a consistent profit over the past 5 years as compared to the other firms. I will also be hinting which firm is ideal for investing in 2021.\n\n\n**Importing Libraries**","a2ae584f":"# EXPLORATORY DATA ANALYSIS (EDA)","745a6e62":"The graphs show when is it suitable to buy a stock (green arrow) or sell (red arrow). This model can be improved further using sentiment analysis.\n\n\nLet me know if I can add anything else and upvote if you like! \n\n\n**Thank you :)**","c8b73427":"**Close Price History**","d07525cc":"**Relationship between Opening & Closing Price USD($)**","2d55c559":"**Daily Return**"}}