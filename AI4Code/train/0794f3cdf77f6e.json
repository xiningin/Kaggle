{"cell_type":{"691186dd":"code","a6683527":"code","66d20ab8":"code","ad4d3d54":"code","b74024fd":"code","d98cde1d":"code","e6d8725c":"code","2d26bd86":"code","9ebdf438":"code","6b07f80c":"code","a49b6dd0":"code","f43ea805":"code","0158b423":"code","4ce98424":"code","292c20b9":"code","7dc46ed8":"code","52fad4f7":"code","2589f50f":"code","08492849":"code","ff5f370f":"code","e3f842b3":"code","4850d52d":"code","b448dd31":"code","1d59a2a6":"markdown","3801471a":"markdown","d28c71cc":"markdown"},"source":{"691186dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a6683527":"summary = pd.read_csv('\/kaggle\/input\/air-pollution-in-seoul\/AirPollutionSeoul\/Measurement_summary.csv')\nmeasurement_item = pd.read_csv('\/kaggle\/input\/air-pollution-in-seoul\/AirPollutionSeoul\/Original Data\/Measurement_item_info.csv')\nmeasurement_info = pd.read_csv('\/kaggle\/input\/air-pollution-in-seoul\/AirPollutionSeoul\/Original Data\/Measurement_info.csv')\nmeasurement_station = pd.read_csv('\/kaggle\/input\/air-pollution-in-seoul\/AirPollutionSeoul\/Original Data\/Measurement_station_info.csv')","66d20ab8":"summary.head()","ad4d3d54":"df = summary","b74024fd":"df['Date'] =  df['Measurement date'].str[:10]\ndf['Time'] = df['Measurement date'].str[11:13]","d98cde1d":"df.tail()","e6d8725c":"df['Month'] = df['Date'].str[5:7]\ndf['Year'] = df['Date'].str[:4]\ndf['Day'] = df['Date'].str[8:10]","2d26bd86":"df.head()","9ebdf438":"#We first look at how each metric for pollution are distributed\n","6b07f80c":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt  \nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)","a49b6dd0":"import seaborn as sns\nnumerical_list = ['SO2','SO2','O3','CO','PM10','PM2.5']\nfor i in numerical_list:\n    sns.distplot(df[i], hist=False, rug=True)\n    plt.show();","f43ea805":"#We will proceed with 2 metrics, PM2.5 and PM10 and see how certain factors affect them!","0158b423":"fig, axes = plt.subplots(1, 1, figsize=(20, 6))\nsns.boxplot(x='Station code', y='PM2.5', data=df, showfliers=False);\n#Pm2.5 Levels by Stations","4ce98424":"#Station Code 119 and 121 are a bit higher compared to 112 or 116\n#Lets see how far are they situated","292c20b9":"temp = df[(df['Station code'] == 119) | (df['Station code'] == 112)]\ntemp = temp.groupby(['Latitude','Longitude','Station code'])['Station code'].count().reset_index(name='count')\ntemp","7dc46ed8":"import plotly.express as px\nfig = px.density_mapbox(temp, lat='Latitude', lon='Longitude', radius=10,\n                        center=dict(lat=37.5, lon=126.8), zoom=8,\n                        mapbox_style=\"stamen-terrain\")\nfig.show()","52fad4f7":"#As you might observe that the lower point ie station code 119 is more in the city center hence it would be expected to recorder higher levels of PM2.5\n#So definetly location will be a key factor","2589f50f":"#Lets not look at how is each month over the years performs as a function of pollutions in PM2.5","08492849":"temp = df.groupby(['Month'])['PM2.5'].mean().reset_index(name='Average')\ntemp","ff5f370f":"fig = px.bar(temp, x='Month', y='Average',color='Month')\nfig.show()","e3f842b3":"#The month of March observes on average maximum PM2.5 Levels","4850d52d":"fig, axes = plt.subplots(1, 1, figsize=(20, 6))\nsns.boxplot(x='Month', y='PM2.5', data=df, showfliers=False);\n#Pm2.5 Levels by Stations","b448dd31":"#Looking at the boxplots gives similar results. The variation from months 6-9 is small probably due to rains during those months.","1d59a2a6":"## End of First Part","3801471a":"## Welcome to the EDA.\n## For this dataset I have a plan to fully explore this awesome dataset which I will update on a weekly basis.\n### Do comment to discuss new approaches for EDA on this dataset","d28c71cc":"\n<center><img src=\"https:\/\/www.travelgay.com\/wp-content\/uploads\/2019\/11\/soeul-city-guide.jpg\"><\/center>"}}