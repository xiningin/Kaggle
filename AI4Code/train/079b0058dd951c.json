{"cell_type":{"61fc1456":"code","49f4cfa3":"code","c2c3741a":"code","fffa0f3c":"code","56a46da6":"code","fdf059f3":"code","e133776f":"code","3e6bdd94":"code","259d71ec":"code","5c163b5a":"code","133e7ba5":"code","3d2803df":"code","01952b93":"code","5c4d8f9a":"code","519deb6e":"code","1b177722":"code","e1026fd0":"code","a41b4e8e":"code","b7551afd":"code","881fa544":"code","ea4cbf63":"code","2495eadd":"code","dd90f630":"markdown","35bd896a":"markdown","944c80d7":"markdown","12fcd423":"markdown","29110049":"markdown","b138b453":"markdown","6e689f3b":"markdown"},"source":{"61fc1456":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as py\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49f4cfa3":"from urllib.request import urlretrieve","c2c3741a":"italy_covid_url = 'https:\/\/gist.githubusercontent.com\/aakashns\/f6a004fa20c84fec53262f9a8bfee775\/raw\/f309558b1cf5103424cef58e2ecb8704dcd4d74c\/italy-covid-daywise.csv'\n\nurlretrieve(italy_covid_url, 'italy-covid-daywise.csv') #trying to retrive the csv file attachted to the url","fffa0f3c":"covid_df=pd.read_csv('italy-covid-daywise.csv') #pandas reading csv file","56a46da6":"type(covid_df) #Tying to check the type of the data","fdf059f3":"covid_df","e133776f":"covid_df.head(3) #Looking for just top 3 item","3e6bdd94":"covid_df.tail(3) #looking for only bottom 3 item","259d71ec":"covid_df.info()","5c163b5a":"covid_df.shape","133e7ba5":"covid_df.describe() #it is for just looking at it and telling that whether the data is correct or we need to clean the data","3d2803df":"covid_df.columns","01952b93":"covid_df['new_cases']","5c4d8f9a":"covid_df.at[245,'new_cases']","519deb6e":"covid_df.loc[1:4,'new_cases']","1b177722":"covid_df","e1026fd0":"covid_graph=covid_df[['new_cases','new_deaths']]","a41b4e8e":"py.plot(covid_graph)\npy.title=\"Death and new cases graph\"\npy.xlabel=\"New cases\"\npy.ylabel=\"New deaths\"\npy.legend()\npy.show()","b7551afd":"covid_df.sample(10)","881fa544":"total_cases=covid_df['new_cases'].sum()\nprint(\"The total case is {}\".format(total_cases))","ea4cbf63":"high_cases=covid_df['new_cases']>1000\nhigh_cases","2495eadd":"py.plot(covid_df['date'],high_cases)\npy.show()","dd90f630":"**we can do the column sum of all the data by just sum() command**","35bd896a":"**Here in the next section we are going to retreive the data of the italy day wise covid analysis by means of the url.**\n","944c80d7":"**For getting random samples use 'sample()'**","12fcd423":"**In the next code block we are trying to find the values at particular location by using 'loc' command**","29110049":"**We can use 'LOC' or 'At' to get access for the particular location**","b138b453":"**Here we access coloumn by column name and row by index**","6e689f3b":"**Plotting the curve of high cases with the date**"}}