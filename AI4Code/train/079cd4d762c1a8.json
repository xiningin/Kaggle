{"cell_type":{"3dd40e21":"code","04c4cc23":"code","8cebf842":"code","f4456f03":"code","64db4aff":"code","4a10e7f5":"code","539fd2d2":"code","6546410d":"code","22990724":"code","67184169":"code","5cc52b33":"code","921f289c":"code","554ddcf1":"code","8d434e53":"code","8428051a":"code","49acda00":"code","c820d87e":"code","5c42a59f":"code","efad1d6d":"code","2621ada9":"code","2e29f219":"code","7fca3aa8":"code","111deab1":"code","1ebfdcbe":"code","1febc821":"code","85f6faea":"code","44895fc3":"code","bde1f8a3":"code","8b1f1b2f":"code","a986b26f":"code","7efb3ee8":"code","36ba6e41":"code","f6c9e451":"code","44ba3c22":"code","b6750f21":"code","af50f45d":"code","0edbbc3e":"code","cbc7aa30":"code","96c686fc":"code","2b56365f":"code","922aae75":"code","4338abcb":"code","2a6831fb":"code","32af16ff":"code","e5407387":"code","ff292563":"code","d3156d56":"markdown","efff5390":"markdown","95ea3769":"markdown","8397bfb9":"markdown","405129d0":"markdown","6903435f":"markdown","af4b261d":"markdown","6b8061a6":"markdown","dadca6db":"markdown","43fad0fa":"markdown","5f8dca53":"markdown","99ee3816":"markdown","ac9dab1b":"markdown","041f37e8":"markdown","1fe44eb8":"markdown","c7063c3b":"markdown","91f7e9d6":"markdown","d018c646":"markdown"},"source":{"3dd40e21":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","04c4cc23":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport zipfile\n%matplotlib inline","8cebf842":"zf_train = zipfile.ZipFile('\/kaggle\/input\/whats-cooking\/train.json.zip')\ndf_train = pd.read_json(zf_train.open('train.json'))","f4456f03":"print(df_train.head())\ndf_train = df_train.drop('id', axis = 1)","64db4aff":"print(df_train.head())\nprint(df_train.shape)","4a10e7f5":"cuisines = df_train.cuisine.unique()\nprint(cuisines.shape)","539fd2d2":"fig = plt.figure()\nfig.set_size_inches(20, 6)\nsns.barplot(data = df_train.groupby('cuisine').count(), x = df_train.groupby('cuisine').count().index, y = 'ingredients')","6546410d":"cuisine_ingredients = {}\nfor i, cuisine in enumerate(cuisines):\n    df = df_train[df_train['cuisine'] == cuisine]\n    ingredients = []\n    df['ingredients'].apply(lambda x : ingredients.extend(x))\n    ingredients = np.array(ingredients)\n    unique_ingredients = np.unique(list(ingredients))\n    cuisine_ingredients[cuisine] = unique_ingredients\nprint(cuisine_ingredients)","22990724":"total_ingredients = []\nfor cuisine, ingredients in cuisine_ingredients.items():\n    total_ingredients.extend(ingredients)\nprint(len(total_ingredients))\ntotal_different_ingredients = list(np.unique(np.array(total_ingredients)))\nprint(\"Total different types of ingredients :\", len(total_different_ingredients))","67184169":"def make_columns(dataframe):\n    for ingredient in total_different_ingredients:\n        dataframe[ingredient] = 0\n    return dataframe\n\ndf_train = make_columns(df_train)\nprint(df_train.shape)","5cc52b33":"df_train.head()","921f289c":"def fill_columns(dataframe):\n    for index, row in dataframe.iterrows():\n        ingredients = row['ingredients']\n        print(index)\n        for ingredient in ingredients:\n            if ingredient in total_different_ingredients:\n                dataframe.at[index, ingredient] = 1\n    return dataframe\n\ndf_train = fill_columns(df_train)","554ddcf1":"df_grouped = df_train.groupby('cuisine').mean()\ndf_grouped","8d434e53":"keep_percent = .2\ntop_cuisine_ingredients = {}\nfor cuisine in cuisines:\n    a = df_grouped.loc[cuisine, :].sort_values() < keep_percent\n    a = a[a == True]\n    top_cuisine_ingredients[cuisine] = a.index\n\ntop_ingredients = []\nfor cuisine, ingredients in top_cuisine_ingredients.items():\n    top_ingredients.extend(ingredients)\n    \ntop_ingredients = np.array(top_ingredients)\nunique_top_ingredients = ['cuisine']\nunique_top_ingredients.extend(list(np.unique(top_ingredients)))\nprint(len(unique_top_ingredients))","8428051a":"df_train = df_train[unique_top_ingredients]\nprint(df_train.shape)","49acda00":"temp = df_train.groupby('cuisine').mean()","c820d87e":"fig, ax = plt.subplots(10, 2)\nax = ax.flatten()\nfig.set_size_inches(20, 50)\nfor index, cuisine in enumerate(cuisines):\n    ax[index].title.set_text(cuisine)\n    sns.barplot(x = top_cuisine_ingredients[cuisine][:-1][-5:], y = temp.loc[cuisine][top_cuisine_ingredients[cuisine]].values[:-1][-5:], ax = ax[index])","5c42a59f":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","efad1d6d":"Y = df_train.cuisine\nX = df_train.drop(['cuisine'], axis = 1)\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=.15)","2621ada9":"rf = RandomForestClassifier(n_estimators = 100, max_depth = height).fit(X_train, y_train)\ntest_predictions = rf.predict(X_test)\ntrain_predictions = rf.predict(X_train)\nprint(\"height is \", height)\nprint(\"Training Accuracy is : \", sum(train_predictions==y_train)\/y_train.shape[0])\nprint(\"Testing Accuracy is : \", sum(test_predictions==y_test)\/y_test.shape[0])","2e29f219":"zf_test = zipfile.ZipFile('\/kaggle\/input\/whats-cooking\/test.json.zip')\ndf_test = pd.read_json(zf_test.open('test.json'))\ndf_test.head()","7fca3aa8":"df_test = make_columns(df_test)\ndf_test.head()","111deab1":"df_test = fill_columns(df_test)\ndf_test.head()","1ebfdcbe":"id = df_test['id']\ndf_test = df_test[unique_top_ingredients[1:]]","1febc821":"df_test.head()","85f6faea":"predictions = rf.predict(df_test)","44895fc3":"df = pd.DataFrame({'id':id, 'cuisine':predictions})","bde1f8a3":"df.to_csv('cooking_submission.csv', index = False)","8b1f1b2f":"zf_train = zipfile.ZipFile('\/kaggle\/input\/whats-cooking\/train.json.zip')\ndf_train = pd.read_json(zf_train.open('train.json'))","a986b26f":"df_train.head()","7efb3ee8":"def joiningre(x):\n    return ' '.join(x)\ndf_train['all_ingredients'] = df_train['ingredients'].apply(joiningre)","36ba6e41":"df_train.head(2)","f6c9e451":"from sklearn.feature_extraction.text import CountVectorizer\ncount_vect = CountVectorizer()\ncount_vect.fit(df_train['all_ingredients'])","44ba3c22":"len(count_vect.vocabulary_)","b6750f21":"df_train_transform = count_vect.transform(df_train['all_ingredients'])","af50f45d":"X = df_train_transform.toarray()\nY = df_train['cuisine']","0edbbc3e":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","cbc7aa30":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=.15)","96c686fc":"rf = RandomForestClassifier(n_estimators = 100).fit(X_train, y_train)\ntest_predictions = rf.predict(X_test)\ntrain_predictions = rf.predict(X_train)\nprint(\"height is \", height)\nprint(\"Training Accuracy is : \", sum(train_predictions==y_train)\/y_train.shape[0])\nprint(\"Testing Accuracy is : \", sum(test_predictions==y_test)\/y_test.shape[0])","2b56365f":"print(train_predictions)","922aae75":"zf_test = zipfile.ZipFile('\/kaggle\/input\/whats-cooking\/test.json.zip')\ndf_test = pd.read_json(zf_test.open('test.json'))\ndf_test['all_ingredients'] = df_test['ingredients'].apply(joiningre)","4338abcb":"df_test.head()","2a6831fb":"df_test_transform = count_vect.transform(df_test['all_ingredients'])","32af16ff":"predictions = rf.predict(df_test_transform.toarray())\nprint(predictions)","e5407387":"df = pd.DataFrame({'id':df_test.id, 'cuisine':predictions})","ff292563":"df.to_csv('cooking_submission.csv', index = False)","d3156d56":"## Filling the columns according to the ingredients of the reciepies","efff5390":"## Loading the dataset","95ea3769":"## Converting the list of ingredient to a string","8397bfb9":"## Overview of the dataset","405129d0":"## Make every ingredient a column in the dataset","6903435f":"# ** Direct method with python libraries instead of self made methods like make_columns and fill_columns**","af4b261d":"## Predictions with the test data","6b8061a6":"## Finding the ingredients who are present in at least 2 percent receipies of a particular cuisine","dadca6db":"## Total different types of ingredients used in all of the cuisines","43fad0fa":"## Plotting the cuisine versus number of examples of that cuisine","5f8dca53":"## Top 5 ingredient in each cuisine","99ee3816":"## Using count vectorizer to build the vocab and then converting the ingredients string to a sparse matrix","ac9dab1b":"## Preprocessing the test data","041f37e8":"## Finding which ingredients are available in a cuisine","1fe44eb8":"## Converting the sparse matrix to one hot encode matrix","c7063c3b":"## Importing the libraries","91f7e9d6":"## Importing the Machine Learning Libraries","d018c646":"## What are the cuisines in the dataset"}}