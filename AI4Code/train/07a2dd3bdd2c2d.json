{"cell_type":{"dd1173a7":"code","5a064b73":"code","f85c5366":"code","3c62aa58":"code","5a7abebb":"code","4b1de671":"code","f558ee1b":"code","2fef0759":"code","f4d29ba4":"code","ba6b56c4":"code","6917836e":"code","8ab1692c":"code","e11dbbee":"code","7017cc6e":"code","d0d45d4a":"code","f2b6a649":"code","f032c456":"code","cfb2d775":"code","0af4328c":"code","8964b802":"code","211b7352":"markdown","cd60a94d":"markdown","4c908e7c":"markdown","681b0dd1":"markdown","4720f8b6":"markdown","27e74911":"markdown","a2d9694e":"markdown","974b93ed":"markdown","756e7920":"markdown","63fd38cb":"markdown","6098ca91":"markdown","89359ae6":"markdown","ee804895":"markdown","0ff4412a":"markdown","945bc062":"markdown"},"source":{"dd1173a7":"# Install it if not installed \n!pip install apyori","5a064b73":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nfrom apyori import apriori","f85c5366":"df = pd.read_csv('..\/input\/groceries-dataset\/Groceries_dataset.csv', parse_dates=['Date'])","3c62aa58":"df.shape","5a7abebb":"df.columns","4b1de671":"df.head()","f558ee1b":"df.isnull().any()","2fef0759":"all_products = df['itemDescription'].unique()\nprint(\"Total products: {}\".format(len(all_products)))","f4d29ba4":"df['itemDescription'].value_counts()","ba6b56c4":"df['Member_number'].value_counts()","6917836e":"def ditribution_plot(x,y,name=None,xaxis=None,yaxis=None):\n    fig = go.Figure([\n        go.Bar(x=x, y=y)\n    ])\n\n    fig.update_layout(\n        title_text=name,\n        xaxis_title=xaxis,\n        yaxis_title=yaxis\n    )\n    fig.show()","8ab1692c":"x = df['itemDescription'].value_counts()\nx = x.sort_values(ascending = False) \nx = x[:10]\n\nditribution_plot(x=x.index, y=x.values, yaxis=\"Count\", xaxis=\"Products\")","e11dbbee":"one_hot = pd.get_dummies(df['itemDescription'])\ndf.drop('itemDescription', inplace=True, axis=1)\ndf = df.join(one_hot)\ndf.head()","7017cc6e":"# Note: if a customer bought multiple products on same day, We will consider it one transaction\nrecords = df.groupby([\"Member_number\",\"Date\"])[all_products[:]].apply(sum)\nrecords = records.reset_index()[all_products]","d0d45d4a":"## Replacing non-zero values with product names\ndef get_Pnames(x):\n    for product in all_products:\n        if x[product] > 0:\n            x[product] = product\n    return x\n\nrecords = records.apply(get_Pnames, axis=1)\nrecords.head()","f2b6a649":"print(\"Total Transactions: {}\".format(len(records)))","f032c456":"## Removing zeros\nx = records.values\nx = [sub[~(sub == 0)].tolist() for sub in x if sub[sub != 0].tolist()]\ntransactions = x","cfb2d775":"transactions[0:10]","0af4328c":"rules = apriori(transactions,min_support=0.00030,min_confidance=0.05,min_lift=3,min_length=2,target=\"rules\")\nassociation_results = list(rules)","8964b802":"for item in association_results:\n\n    pair = item[0] \n    items = [x for x in pair]\n    print(\"Rule: \" + items[0] + \" -> \" + items[1])\n\n    print(\"Support: \" + str(item[1]))\n\n    print(\"Confidence: \" + str(item[2][0][2]))\n    print(\"Lift: \" + str(item[2][0][3]))\n    print(\"=====================================\")","211b7352":"### Introduction\n> #### Here are gonna use Shopping groceries dataset.\n> #### We have almost 39000 records of transaction.\n> #### About Data:  it has three columns:\n> #### ID of customer\/Date of purchase\/Description of product purchased.\n> #### In this project we are goona perform Market Basket Analysis using Aprior Algo.","cd60a94d":"### One-hot representation of products purchased","4c908e7c":"## Association Rules","681b0dd1":"## Loading Dataset","4720f8b6":"![](https:\/\/miro.medium.com\/max\/700\/1*b1X3sV7WgElbWUZCYMOMrA.png)","27e74911":"## Top Customer ID","a2d9694e":"[Click Here to learn More](https:\/\/towardsdatascience.com\/apriori-algorithm-for-association-rule-learning-how-to-find-clear-links-between-transactions-bf7ebc22cf0a)","974b93ed":"## Importing libraries","756e7920":"## Transactions","63fd38cb":"## Total Products","6098ca91":"## Displaying products ","89359ae6":"## Checking for Null values","ee804895":"### What is Association Rule ?\n> #### Association rule learning is a rule-based machine learning method for discovering interesting relations between variables in large databases. It is intended to identify strong rules discovered in databases using some measures of interestingness.\n> #### Association mining is usually done on transactions data from a retail market or from an online e-commerce store.\n> #### Since most transactions data is large, the apriori algorithm makes it easier to find these patterns or rules quickly. \n> #### Association Rules are widely used to analyze retail basket or transaction data, and are intended to identify strong rules discovered in transaction data using measures of interestingness, based on the concept of strong rules.\n> #### Apriori uses a \"bottom up\" approach, where frequent subsets are extended one item at a time (a step known as candidate generation), and groups of candidates are tested against the data. The algorithm terminates when no further successful extensions are found.","0ff4412a":"## Top 10 frequently sold products in this dataset","945bc062":"## Table of Content:\n> ####  Introduction\n> ####  What is Association Rule ?\n> ####  Importing Library\n> ####  Loading Dataset\n> ####  Checking for Null values\n> ####  Displaying Products\n> ####  Displaying Top 10 frequently sold products\n> ####  One-hot representation of products purchased\n> ####  Transactions\n> ####  Example transactions\n> ####  Association Rules\n> ####  Conclusion\n"}}