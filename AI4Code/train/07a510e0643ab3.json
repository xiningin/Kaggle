{"cell_type":{"7a798671":"code","7435b201":"code","335df1df":"code","e1a9dc7b":"code","712ab5be":"code","84fef4a0":"code","dfe484ba":"code","81c890af":"code","c67ebca2":"code","90b6af40":"code","f10760bf":"code","6f2ce7d4":"code","540cb40d":"code","5afaa3d8":"code","9caba82d":"code","41a114c6":"code","c72c78dd":"code","ccc39e3e":"code","017b1b99":"code","46b82a5e":"code","f61082d1":"code","8523ff42":"code","7c15a9bf":"code","3a155f65":"code","681296b2":"code","47ef4e72":"code","7ebc7579":"code","d6b84c6b":"code","273df5c5":"code","7cda7a9d":"code","34d58860":"code","35ea6a73":"markdown","ea195bb0":"markdown","c87a54f7":"markdown","171b1cc2":"markdown","809d9bde":"markdown","4f8feaa7":"markdown","e0484f3d":"markdown","727479ef":"markdown","5ad0f65c":"markdown","4e72e1fd":"markdown","0991c802":"markdown","2ed73f57":"markdown"},"source":{"7a798671":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7435b201":"convo1text = open(\"..\/input\/conversation1.txt\", \"r\").readlines()","335df1df":"convo1text","e1a9dc7b":"newConvo = []\nfor sent in convo1text:\n    sent = sent.strip(\"\\n\")\n    if not sent is '':\n        newConvo.append(sent)\n    \nconvo1text = newConvo\nprint(convo1text)","712ab5be":"for index,sent in enumerate(convo1text):\n    if sent.count(':') > 0:\n        previousSpeaker = sent.split(':')[0]\n    if sent.count(':') == 0:\n        convo1text[index] = previousSpeaker + ':' + sent\n        \nconvo1text\n\n","84fef4a0":"conversation1 = []\nfor sent in convo1text:\n    convo = sent.split(':')\n    if len(convo) > 2:\n        convo[1] += ('-').join(convo[2:])\n    convo = convo[:2]\n    convo[1] = convo[1].strip()\n    if not convo[1] is '':\n        conversation1.append([c for c in convo])","dfe484ba":"conversation1","81c890af":"import json\nwith open(\"..\/input\/appos.json\", \"r\") as read_file:\n    data = json.load(read_file)\n    \nappos = data['appos']\nappos","c67ebca2":"import re\nprocessedConversation = []\nfor speaker, dialog in conversation1:\n    for (key, val) in appos.items():\n        dialog = dialog.lower()\n        dialog = dialog.replace(key, val)\n        dialog = re.sub(r\"([\\w\/'+$\\s-]+|[^\\w\/'+$\\s-]+)\\s*\", r\"\\1 \", dialog)\n        dialog = ' ' + dialog + ' '\n        dialog = re.sub(' +', ' ',dialog)\n        \n    processedConversation.append([speaker, dialog])\n        \n","90b6af40":"processedConversation","f10760bf":"with open(\"..\/input\/thirdperson.json\", \"r\") as read_file:\n    data = json.load(read_file)\nthirdperson = {}\nfor (key, value) in data['thirdperson'].items():\n    thirdperson[' ' + key + ' '] = ' ' + value + ' '\n\n\n    \nthirdperson","6f2ce7d4":"finalConversation = []\npreviousSpeaker = ''\nfor speaker, dialog in processedConversation:\n    for (key, val) in thirdperson.items():\n        dialog = dialog.lower()\n        dialog = dialog.replace(key, val)\n        dialog = dialog.replace(' i ', ' ' +speaker + ' ')\n        dialog = dialog.replace('i ', ' ' +speaker + ' ')\n        dialog = dialog.replace('you', previousSpeaker if not previousSpeaker is '' else 'them' )\n    finalConversation.append([speaker, dialog])\n    \nfinalConversation","540cb40d":"import spacy","5afaa3d8":"nlp = spacy.load(\"en_core_web_sm\")","9caba82d":"summary = ''\nsummarySpeaker = None\nfor speaker, dialog in finalConversation:\n    if summarySpeaker is None:\n        doc = nlp(dialog)\n        for token in doc:\n            if token.lemma_ == 'summarize':\n                # this is the part where we hear someone summarize\n                # point following this must be a part of the summarization\n                summarySpeaker = speaker\n    else:\n        if speaker == summarySpeaker:\n            summary = summary + dialog\n        else:\n            summarySpeaker = None\n        \nsummary\n            ","41a114c6":"doc = nlp(summary)","c72c78dd":"spacy.displacy.render(doc, style='ent',jupyter=True)","ccc39e3e":"from nltk.corpus import stopwords\nfrom string import punctuation","017b1b99":"_stopwords = set(stopwords.words('english') + list(punctuation) + list(' '))\n_stopwords","46b82a5e":"word_sent = [word.text for word in doc if word.text not in _stopwords]\nword_sent","f61082d1":"from nltk.probability import FreqDist","8523ff42":"main_sent = []\nfor speaker, dialog in finalConversation:\n    dialogdoc = nlp(dialog)\n    for word in dialogdoc:\n        if word.text not in _stopwords:\n            main_sent.append(word.text)","7c15a9bf":"fd = {word:freq for word,freq in FreqDist(main_sent).items() if word in word_sent}","3a155f65":"from heapq import nlargest","681296b2":"imp_words = nlargest(10, fd, key=fd.get)","47ef4e72":"from collections import defaultdict","7ebc7579":"sents = []\nfor speaker, dialog in finalConversation:\n    sents.append(dialog)","d6b84c6b":"ranking = defaultdict(int)\nfor i, sent in enumerate(sents):\n    doc = nlp(sent)\n    for w in doc:\n        if w.text in freq: \n            ranking[i] += freq[w.text]","273df5c5":"ranking","7cda7a9d":"sent_idx = nlargest(5, ranking, key=ranking.get)\nsent_idx","34d58860":"[sents[i] for i in sent_idx]","35ea6a73":"# Conversion from 1st person to 3rd person conversation","ea195bb0":"now lets find insights based on this data","c87a54f7":"## Calculate freq of these words in main text","171b1cc2":"# Appneding speaker at places where the user lists the points","809d9bde":"above is the list of most common words that are a part of summary","4f8feaa7":"Note that we will see the last occurance of lemma 'summarize'.\n\nThen all the points that follow for the same speaker count as summary points","e0484f3d":"# Replacing Pronouns","727479ef":"# Understanding topics from this summary","5ad0f65c":"# Reading Conversation","4e72e1fd":"## removing stopwords","0991c802":"# Summarize if it encounters something like summarize.","2ed73f57":"# Data Cleaning \n\nRemoving '\\n' from the data"}}