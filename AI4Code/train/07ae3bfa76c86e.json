{"cell_type":{"7d5d0ea0":"code","84b40680":"code","c23241b2":"code","7f680196":"code","93f8c2b9":"code","d3437497":"code","46d62241":"code","24406461":"code","2b502ee6":"code","2da9546e":"code","631a0a67":"code","cbad264f":"code","2f4b25a4":"code","4501f5d3":"code","c19524cf":"code","391663ce":"code","7ca44689":"code","8d42840e":"markdown","e2127a00":"markdown","45312f52":"markdown"},"source":{"7d5d0ea0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","84b40680":"#First step as always importing our dictionaries\n\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport plotly.graph_objects as go","c23241b2":"#we import our data using pd.read_csv function;\ndata=pd.read_csv(\"\/kaggle\/input\/us-military-deaths-by-cause-19802010\/U.S. Military Deaths by cause 1980-2010.csv\")\n","7f680196":"#I always check my columns to avoid missspeiling. \nprint(data.columns)","93f8c2b9":"#Now we can check our data briefly \n#first I want to convert the data to a pandas data frame so it will be more organized\ndata=pd.DataFrame(data)\ndata","d3437497":"import plotly.graph_objects as go\n\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Total Deaths'],\n                name='Total Deaths',\n                marker_color='rgb(55, 83, 109)'\n                ))\n\nfig.update_layout(\n    title='General look',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Number of Deaths',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.1 # gap between bars of the same location coordinate.\n)\nfig.show()\n\n","46d62241":"plt.figure(figsize=(6, 6), dpi=80)\nplt.plot(data['Calendar Year'], data['Total Deaths'], color='blue', marker='.', linestyle='dashed',linewidth=2, markersize=12, label='Total Deaths',)\nplt.title('Total Deaths', color='red') \n","24406461":"data=pd.DataFrame(data=data)\nfig = go.Figure()\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Total Deaths'],\n                name='Total Deaths', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Accident '],\n                     name='Accident ', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Hostile Action'],\n                     name='Hostile Action', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Illness '],\n                     name='Illness ', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Homicide '],\n                     name='Homicide ', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Pending '],\n                     name='Pending ', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Self-Inflicted'],\n                     name='Self-Inflicted', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Terrorist Attack'],\n                     name='Terrorist Attack', width=0.2\n                ))\nfig.add_trace(go.Bar(x=data['Calendar Year'],\n                y= data['Undetermined '],\n                     name='Undetermined ', width=0.2\n                ))\nfig.update_layout(\n    title='Number of Deaths with reasons bar chart 1',\n    xaxis_tickfont_size=14,\n    xaxis=dict(\n        title='Years',),\n    autosize=False,\n    width=1100,\n    height=1100,\n\n)\n\n","2b502ee6":"fig = px.bar(data, x=data['Calendar Year'], y=[data['Total Deaths'], data['Accident '], data['Hostile Action'], data['Illness '],data['Homicide '], data['Pending '], data['Self-Inflicted'],data['Terrorist Attack'],data['Undetermined '] ], title=\"Wide-Form Input\")\nfig.update_layout(\n    title='Number of Deaths with reasons bar chart 2',\n    xaxis_tickfont_size=14,\n    xaxis=dict(\n        title='Years',),\n    autosize=False,\n    width=1000,\n    height=1000,\n\n)\n\nfig.show()","2da9546e":"#My favorite charts to see the each trend\nfig, (ax1, ax2, ax3,ax4 ) = plt.subplots(1, 4, constrained_layout=True, sharey=False, figsize=(12,4))\nax1.plot(data['Calendar Year'], data['Active Duty'])\nax1.set_title('Active Duty')\nax1.set_xlabel('Calender Year')\nax1.set_ylabel('Active Duty')\n\n#fig.suptitle('Genberal look', fontsize=16,)\n\nax2.plot(data['Calendar Year'] ,data['Full-Time (est) Guard+Reserve'])\nax2.set_title('Full-Time (est) Guard+Reserve')\nax2.set_xlabel('Calender Year')\nax2.set_ylabel('Full-Time (est) Guard+Reserve')\n\nax3.plot(data['Calendar Year'],data['Selected Reserve FTE'])\nax3.set_title ('Selected Reserve FTE')\nax3.set_xlabel ('Calender Year')\nax3.set_ylabel('Selected Reserve FTE')\n\nax4.plot(data['Calendar Year'], data['Total Military FTE'])\nax4.set_title('Total Military FTE')\nax4.set_xlabel('Calender Year')\nax4.set_ylabel('Total Military FTE')\n\nfig.show","631a0a67":"#My favorite charts to see the each trend\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, constrained_layout=True, sharey=False, figsize=(12,4))\nax1.plot(data['Calendar Year'], data['Total Deaths'])\nax1.set_title('Total Deaths')\nax1.set_xlabel('Calender Year')\nax1.set_ylabel('Total Deaths')\n\n#fig.suptitle('Genberal look', fontsize=16,)\n\nax2.plot(data['Calendar Year'] ,data['Accident '])\nax2.set_title('Accident')\nax2.set_xlabel('Calender Year')\nax2.set_ylabel('Accident')\n\nax3.plot(data['Calendar Year'],data['Hostile Action'])\nax3.set_title ('Hostile Action')\nax3.set_xlabel ('Calender Year')\nax3.set_ylabel('Hostile Action')\n\nfig, (ax4, ax5, ax6,) = plt.subplots(1, 3, constrained_layout=True, sharey=False, figsize=(12,4))\n\n\nax4.plot(data['Calendar Year'], data['Homicide '])\nax4.set_title('Homicide')\nax4.set_xlabel('Calender Year')\nax4.set_ylabel('Homicide')\n\nax5.plot(data['Calendar Year'],data['Illness '])\nax5.set_title('Illness')\nax5.set_xlabel('Calender Year')\nax5.set_ylabel('Illness')\n\nax6.plot(data['Calendar Year'],data['Pending '])\nax6.set_title ('Pending ')\nax6.set_xlabel ('Calender Year')\nax6.set_ylabel('Pending ')\n\nfig, (ax7, ax8, ax9,) = plt.subplots(1, 3, constrained_layout=True, sharey=False, figsize=(12,4))\n\n\nax7.plot(data['Calendar Year'], data['Self-Inflicted'])\nax7.set_title('Self-Inflicted')\nax7.set_xlabel('Calender Year')\nax7.set_ylabel('Self-Inflicted')\n\nax8.plot(data['Calendar Year'],data['Terrorist Attack'])\nax8.set_title('Terrorist Attack')\nax8.set_xlabel('Calender Year')\nax8.set_ylabel('Terrorist Attack')\n\nax9.plot(data['Calendar Year'],data['Undetermined '])\nax9.set_title ('Undetermined ')\nax9.set_xlabel ('Calender Year')\nax9.set_ylabel('Undetermined ')\n\nfig.show","cbad264f":"fig = px.scatter(x=data['Calendar Year'], y= data['Total Deaths'],trendline=\"ols\", \n                 title='total death',labels = 'Calender Year',)\n\nfig.show()","2f4b25a4":"fig = px.scatter(x=data['Calendar Year'], y= data['Active Duty'],trendline=\"ols\", \n                 title='Active Duty',labels = 'Calender Year',)\n\nfig.show()","4501f5d3":"fig = px.scatter(x=data['Calendar Year'], y= data['Accident '],trendline=\"ols\", \n                 title='Death caused by an accident ',labels = 'Calender Year',)\n\nfig.show()","c19524cf":"fig = px.scatter(data_frame= data, x=data['Calendar Year'], y= data['Total Deaths'],\n                 trendline=\"ols\", title='total death analyze',)\n\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Total Deaths'], name='Total Deaths'))\n\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Accident '], name='Accident'))\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Hostile Action'], name='Hostile Action'))\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Homicide '], name='Homicide'))\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Illness '], name='Illness')) \n     \nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Pending '], name='Pending'))   \nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Terrorist Attack'], name='Terrorist Attack')) \nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Self-Inflicted'], name='Self-Inflicted')) \n\nfig.add_traces(go.Scatter(x=data['Calendar Year'],\n                y= data['Undetermined '], name='Undetermined')) \n\n\nfig.show()","391663ce":"#correlation matrix\ncorrmat= data.corr()\nplt.figure(figsize=(20,20))  \nsns.heatmap(corrmat,annot=True, center=0)","7ca44689":"#I will be working on it. \n\n","8d42840e":"---------------------- Hi Everyone ----------------------\n\nThis is my first project on Kaggle and I am very excited to put out what I have learned so far. \nWe have a data set for Military Death numbers and we could answer some of the quesitons.\nI will try to visualize the chart and seek some answers throughout this project. \n\n--------------- Lets dive in ... Shall We ??  ---------------","e2127a00":"I see that we have data for the 30 years between 2010 and 1980. \nWith some basic chart feautre from payplot, we could see what are the minimum and maximum death numbers for each columns and analyse the trend.","45312f52":"PLEASE IF YOU LIKE IT, UPVOTE AND FEEL FREE TO COMMENT. \n\nTHANKS "}}