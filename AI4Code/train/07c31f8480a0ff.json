{"cell_type":{"8f9fc3bd":"code","b27d54e7":"code","9aef8e73":"code","4a386977":"code","c88cc135":"code","1038802c":"code","6b053e5d":"code","f3fc87c8":"code","be186c5c":"code","7c9cf20a":"code","54fb6f1e":"code","db786e06":"code","c095e6d4":"code","a3544a85":"code","1d7b5d75":"code","bf54d0ed":"code","2e2f1efd":"code","10b15f04":"markdown"},"source":{"8f9fc3bd":"\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","b27d54e7":"df= pd.read_csv(\"..\/input\/final-psngrs\/titanic_train_duplicate.csv\")","9aef8e73":"df.shape","4a386977":"#Update sex column to numerical\ndf[\"sex\"] = df[\"Sex\"].map({\"male\": 0, \"female\":1})\nprint(df[\"sex\"].head())","c88cc135":"# Fill the nan values in the age column\ndf[\"Age\"].fillna(value = round(df[\"Age\"].mean()), inplace = True )\nprint(df[\"Age\"])","1038802c":"# Create a first class column\ndf[\"FirstClass\"] = df[\"Pclass\"].apply(lambda p: 1 if p==1 else 0)\n\n# Create a second class column\ndf[\"SecondClass\"] = df[\"Pclass\"].apply(lambda p: 1 if p==2 else 0)","6b053e5d":"print(df.head(10))","f3fc87c8":"# Select the desired features\nfeatures = df[[\"sex\", \"Age\", 'FirstClass', \"SecondClass\"]]\nsurvival = df[\"Survived\"]","be186c5c":"#print(survival.head(5))\n# Perform train, test, split\ntrain_features, test_features , train_labels, test_labels = train_test_split(features,survival, test_size = 0.2,  )\n","7c9cf20a":"# Scale the feature data so it has mean = 0 and standard deviation = 1\nscaler = StandardScaler()\ntrain_features = scaler.fit_transform(train_features)\ntest_features = scaler.transform(test_features)","54fb6f1e":"# Create and train the model\nmodel = LogisticRegression()\nmodel.fit(train_features,train_labels)","db786e06":"# Score the model on the train data\nprint(model.score(train_features, train_labels))\n# Score the model on the test data\nprint(model.score(test_features, test_labels))\n","c095e6d4":"# Analyze the coefficients\nprint(features.columns)\nprint(model.coef_)\nprint(model.intercept_)","a3544a85":"# Sample passenger features\nJack = np.array([0.0,20.0,0.0,0.0])\nRose = np.array([1.0,17.0,1.0,0.0])\nYou  = np.array([0.0,24.0,0.0,1.0])\nyour_gf = np.array([1.0,24.0,1.0,0.0])\n# Combine passenger arrays\nsample_passengers = np.array([Jack, Rose, You, your_gf])","1d7b5d75":"# Scale the sample passenger features\nsample_passengers = scaler.transform(sample_passengers)","bf54d0ed":"print(sample_passengers)\n","2e2f1efd":"# Make survival predictions!\nprint(model.predict(sample_passengers))","10b15f04":"# Learning **Logistic Regression Model**"}}