{"cell_type":{"8c856021":"code","c1ab6296":"code","5b472d82":"code","732d7862":"code","3f507960":"code","ef57e6bd":"code","3193e4f4":"code","3230e413":"code","c361d0b7":"code","c45d86e8":"code","bc1f65cd":"code","efc0675e":"code","8518c546":"code","61fd5ff7":"code","d80cc932":"code","66aa2748":"code","f5b82f3e":"markdown","703ee39b":"markdown"},"source":{"8c856021":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c1ab6296":"df = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')\ndf","5b472d82":"df.describe(include='all')","732d7862":"#1. sales volume by gender\n\ndfgender = df.groupby(['Gender'], sort=False)['Gender','Total'].sum()\ndfgender.head(10)","3f507960":"#2. sales volume by product line\n\ndfpline = df.groupby(['Product line'], sort=False)['Total','Quantity'].sum()\ndfpline.head(10)","ef57e6bd":"#3. sales volume by payment type\n\ndfpmnttype = df.groupby(['Payment'], sort=False)['Total','Quantity'].sum()\ndfpmnttype.head(10)","3193e4f4":"#4. which city has which type of customers\n\ndfcust = df.groupby(['City', 'Customer type'], sort=False)['Total'].count()\ndfcust.head(10)","3230e413":"#how many Customer type \"Member\" are there in Yangon?\ndf['City'].value_counts()","c361d0b7":"#how many times does value \"Yangon\" occur?\ndf.City.value_counts().Yangon","c45d86e8":"dfplot = df[[\"City\",\"Gender\",\"Product line\",\"Total\"]]\ndfplot","bc1f65cd":"#Which city sells how much of each Product line?\npd.pivot_table(dfplot , values = 'Total' , index = 'City' , columns = 'Product line' , aggfunc = 'count')","efc0675e":"#Which type of payment is more popular when paying for a certain product line?\npd.pivot_table(df , values = 'Total' , index = 'Product line' , columns = 'Payment' , aggfunc = 'count')","8518c546":"sns.countplot(data = df , x = 'Payment' , hue = 'Product line'  , palette = 'magma')","61fd5ff7":"pd.pivot_table(df , values = 'Total' , index = 'City' , columns = 'Payment' , aggfunc = 'count')","d80cc932":"sns.countplot(data = df , x = 'City' , hue = 'Payment'  , palette = 'magma')","66aa2748":"df.groupby('Product line')['Gender'].value_counts()","f5b82f3e":"# Lets explore the Sales Data","703ee39b":"## Let's start with easy questions:\n1. sales volume by gender\n2. sales volume by product line\n3. sales volume by payment type\n4. which city has which type of customers"}}