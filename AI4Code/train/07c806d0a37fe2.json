{"cell_type":{"e860308f":"code","bff631e1":"code","ec60bed4":"code","d78fb4c5":"code","b6789666":"code","0a332bec":"code","6a018246":"code","9174185b":"code","f793b3f0":"code","b504d70b":"code","45ad4794":"code","02e1c993":"code","02d2a048":"code","9e64008d":"code","d6d6ce85":"code","42981f80":"code","e7ad168d":"code","e9e7de2d":"code","f78d251f":"code","f365be73":"code","43b476f6":"code","be7b6f81":"code","1a976329":"code","9986a59a":"code","60492536":"code","5cfe48d7":"code","6203f8cc":"code","d0fac284":"code","e6a007df":"code","ba1ea0e0":"code","dc446695":"code","f856f87f":"code","b7925e35":"code","68674080":"code","a6354728":"code","d7daf380":"code","466c3bc5":"code","4f0a0362":"code","2d60abeb":"code","d2e14471":"code","322a7ec9":"code","10c63243":"code","4a456515":"code","93acef8c":"code","b2c35174":"code","7eaf3fd5":"code","8298b3cf":"code","ada6d66e":"code","011c2839":"code","a4b1bb96":"code","6f66f000":"code","d90e3b94":"code","efc240a2":"markdown","319a1bf3":"markdown","c5c5f674":"markdown","31df2d6d":"markdown","17c91ccb":"markdown","8d00185a":"markdown","664e8d37":"markdown","b47bd612":"markdown","59e3d892":"markdown","8278bbbd":"markdown","adc09bde":"markdown","1565d6a5":"markdown","f11149c2":"markdown","017ebcbf":"markdown","27e34cb0":"markdown","64cec02f":"markdown","a1868196":"markdown","a943c017":"markdown","9b852cc0":"markdown","cc44c27e":"markdown","0d832b66":"markdown","af89ae8b":"markdown","e896ab6c":"markdown","ea548870":"markdown","6ef35e9b":"markdown","f1259c01":"markdown","92575872":"markdown","649580b8":"markdown","5a23d16f":"markdown","d567d441":"markdown","bef2debf":"markdown"},"source":{"e860308f":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score","bff631e1":"df = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv', index_col='Rank')","ec60bed4":"df.head()","d78fb4c5":"df.info()","b6789666":"df.shape","0a332bec":"df.describe()","6a018246":"df.nunique()","9174185b":"df.duplicated().sum()","f793b3f0":"df = df.drop_duplicates(keep='first').copy()","b504d70b":"df.loc[df['Name'] == 'Call of Duty: Black Ops II']","45ad4794":"df.isna().sum()","02e1c993":"((df.isnull() | df.isna()).sum() * 100 \/ df.index.size).round(2)","02d2a048":"df = df.dropna().copy()","9e64008d":"df.loc[df['Name'] == 'Super Mario Bros.']","d6d6ce85":"df_sales_all_plat = df.groupby(['Name'], as_index=False)['Global_Sales'].sum()\ndf_sales_all_plat = df_sales_all_plat.sort_values(['Global_Sales'], ascending=False)","42981f80":"df_sales_all_plat.loc[df_sales_all_plat['Name'] == 'Super Mario Bros.']","e7ad168d":"df_top_genre = df.groupby(['Genre'], as_index=False)['Global_Sales'].sum()\ndf_top_genre = df_top_genre.sort_values(['Global_Sales'], ascending=False)","e9e7de2d":"a = df['Name'][:5]\nb = df['Global_Sales'][:5]\n\nplt.figure(figsize=[13, 6])\nplt.title('The 5 most popular video games (by sales) - on their most popular platforms', \n          weight='bold')\nplt.xlabel('Games', weight='bold')\nplt.ylabel('Sales (in millions)', weight='bold')\nplt.bar(a, b, color=['forestgreen', 'limegreen', 'springgreen', 'aquamarine', 'turquoise'])\nplt.show()","f78d251f":"c = df_sales_all_plat['Name'][:5]\nd = df_sales_all_plat['Global_Sales'][:5]\n\nplt.figure(figsize=[13, 6])\nplt.title('The 5 most popular video games (by sales) - across ALL of their platforms', \n          weight='bold')\nplt.xlabel('Games', weight='bold')\nplt.ylabel('Sales (in millions)', weight='bold')\nplt.bar(c, d, color=['maroon', 'indianred', 'lightcoral', 'salmon', 'tomato'])\nplt.show()","f365be73":"e = df_top_genre['Genre'][:5]\nf = df_top_genre['Global_Sales'][:5]\n\nplt.figure(figsize=[13, 6])\nplt.title('The 5 most popular videogame genres', \n          weight='bold')\nplt.xlabel('Genres', weight='bold')\nplt.ylabel('Sales (in millions)', weight='bold')\nplt.barh(e, f, color=['darkviolet', 'blueviolet', 'mediumpurple', 'mediumslateblue', 'royalblue'])\nplt.show()","43b476f6":"df_annual_regional_sales = df.groupby('Year')[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']].sum()\ndf_annual_regional_sales","be7b6f81":"plt.figure(figsize=(9, 6))\nplt.xlabel('Years (1980-2020)', weight='bold')\nplt.ylabel('Sales (in millions)', weight='bold')\nsns.lineplot(data=df_annual_regional_sales)","1a976329":"le = LabelEncoder()\n\ndf['Name'] = le.fit_transform(df['Name'])\ndf['Platform'] = le.fit_transform(df['Platform'])\ndf['Genre'] = le.fit_transform(df['Genre'])\ndf['Publisher'] = le.fit_transform(df['Publisher'])","9986a59a":"df.info()","60492536":"X = df.drop(columns=['Global_Sales', 'JP_Sales', 'Other_Sales'])\ny = df['Global_Sales']","5cfe48d7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","6203f8cc":"lr = LinearRegression()\nlr.fit(X_train, y_train)\nlr_pred = lr.predict(X_test)","d0fac284":"def model_score(lr, model_name='Model Name'):\n    print(f'Score of {model_name} Model: {lr.score(X_test, y_test) * 100}%')","e6a007df":"model_score(lr, 'Linear Regression')","ba1ea0e0":"def mse(lr_pred, model_name='Model Name'):\n    print('Mean Squared Error: {} of {} model'.format(mean_squared_error(y_test, lr_pred), model_name))","dc446695":"mse(lr_pred, 'Linear Regression')","f856f87f":"def mae(lr_pred, model_name='Model Name'):\n    print('Mean Absolute Error: {} of {} model'.format(mean_absolute_error(y_test, lr_pred), model_name))","b7925e35":"mae(lr_pred, 'Linear Regression')","68674080":"def cross_val(lr, model_name='Model Name'):\n    print('Cross Validation: {} of {} model'.format(str(np.mean(cross_val_score(lr, X, y, cv=5))), model_name))","a6354728":"cross_val(lr, 'Linear Regression')","d7daf380":"dtr = DecisionTreeRegressor()\ndtr.fit(X_train, y_train)\ndtr_pred = dtr.predict(X_test)","466c3bc5":"model_score(dtr, 'Decision Tree Regressor')","4f0a0362":"mse(dtr_pred, 'Decision Tree Regressor')","2d60abeb":"mae(dtr_pred, 'Decision Tree Regressor')","d2e14471":"cross_val(dtr, 'Decision Tree Regressor')","322a7ec9":"rfg = RandomForestRegressor()\nrfg.fit(X_train, y_train)\nrfg_pred = rfg.predict(X_test)","10c63243":"print(f'Score of Random Forest Regressor Model: {rfg.score(X_test, y_test) * 100}%')","4a456515":"model_score(rfg, 'Random Forest Regressor')","93acef8c":"print(f'Mean Absolute Error: ' + str(mean_absolute_error(rfg_pred, y_test)) + ' - Random Forest Regressor')","b2c35174":"mse(rfg_pred, 'Random Forest Regressor')","7eaf3fd5":"mae(rfg_pred, 'Random Forest Regressor')","8298b3cf":"cross_val(rfg, 'Random Forest Regressor')","ada6d66e":"xgb = XGBRegressor(n_estimators=1000, learning_rate=0.05)\nxgb.fit(X_train, y_train, early_stopping_rounds=5, eval_set=[(X_test, y_test)], verbose=False)\nxgb_pred = xgb.predict(X_test)","011c2839":"model_score(xgb, 'XGBoost')","a4b1bb96":"mse(xgb_pred, 'XGBoost')","6f66f000":"mae(xgb_pred, 'XGBoost')","d90e3b94":"cross_val(xgb, 'XGBoost')","efc240a2":"# **Machine Learning**","319a1bf3":"*Note: Sales are in millions*","c5c5f674":"# **Exploratory Data Analysis \/ Data Preprocessing**","31df2d6d":"# **Conclusion**\nFrom these results, we see that our best model is Linear Regression! This makes sense because the Global Sales follow a linear trend which is highly dependent on NA and EU Sales. Our Linear Regression model scores extremely well in terms of accuracy, mean squared error, and mean absolute error. However, cross validation on our model does not return a very good result; this means that our model's performance is dependent on how the data is split, and if the data were to be split differently, the results would vary.","17c91ccb":"### **Random Forest Regressor**","8d00185a":"# Please upvote if you like this notebook. Feedback would also be greatly appreciated via the comment section! Thanks","664e8d37":"## **Data Familiarization**","b47bd612":"**Select variables**","59e3d892":"# **Video Game Sales EDA & Prediction**","8278bbbd":"## **DataFrame Creation\/Aggregation**","adc09bde":"In order for our models to be able to understand our data, the data needs to be in numerical form. Therefore, we'll use Label Encoder in order to convert our categorical variables to numerical variables.","1565d6a5":"#### Model Evaluation: Decision Tree Regressor","f11149c2":"**Train-test-split**","017ebcbf":"**Missing values**","27e34cb0":"Since the amount of missing values is a very small percentage of all the values in the df, we will drop them","64cec02f":"#### Model Evaluation: Linear Regression","a1868196":"What are the most popular videogames across all of their platforms?","a943c017":"## **Data Visualization**","9b852cc0":"*Unique values*","cc44c27e":"**Duplicate values**","0d832b66":"### **Linear Regression**","af89ae8b":"*What are the most popular games on a platform?*","e896ab6c":"We see that video game sales reached its peak from around 2005-2010, but sales have since significantly dropped","ea548870":"**Import necessary modules**","6ef35e9b":"### **XGBoost**","f1259c01":"Above, we see that this game has multiple rows; This is valid, though, because each row repersents the game on a different platform.","92575872":"### **Decision Tree Regressor**","649580b8":"Like we discussed above, a game can have multiple rows because each row shows the game on a different platform. That said, it would be nice to see the combined sales for each game across all of its platforms. So we'll do just that below!","5a23d16f":"Below, we'll put these missing values into perspective by seeing the percentage of the NaN values out of total values for each column*","d567d441":"#### Model Evaluation: Random Forest Regressor","bef2debf":"#### Model Evaluation: XGBoost Regressor"}}