{"cell_type":{"e49528fc":"code","0077f3f6":"code","e724607c":"code","191aa11f":"code","02084301":"code","9c8d437e":"code","7fbbccd1":"code","e642c5fe":"code","2f55ff52":"code","1a9cd226":"code","cc044cc5":"code","b6859796":"code","fc7755d9":"code","42426cec":"code","f551198a":"code","28e4bb33":"code","a8a7bc54":"code","5caf2a96":"code","fe63edc8":"code","bf07d327":"code","d1250624":"code","26ad0c94":"code","8fa1f219":"code","e9c0cf8c":"code","575fde0b":"code","22b7266a":"code","950c59a3":"code","9ff2e8c4":"code","f1c21f34":"code","57784f5b":"code","9b9fc711":"code","604af4c9":"code","201ee8df":"code","028a0bda":"code","28ef4257":"markdown","6c07da57":"markdown","c5448625":"markdown"},"source":{"e49528fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\n### DICAS E INSTRU\u00c7\u00d5ES EST\u00c3O EM: https:\/\/www.kaggle.com\/c\/iesb-2019\/ OU bit.ly\/iesb-2019\n## REFERENCIAS: https:\/\/datawhatnow.com\/feature-importance\/\n                # https:\/\/www.youtube.com\/watch?v=WE67TSz-a7s\n                # https:\/\/www.kaggle.com\/anokas\/data-analysis-xgboost-starter-0-35460-\n        \n# http:\/\/minerandodados.com.br\/index.php\/2017\/09\/01\/cafe-com-codigo-tratando-valores-faltantes-pandas-python\/\n# http:\/\/felipegalvao.com.br\/blog\/2016\/02\/29\/manipulacao-de-dados-com-python-pandas\/\n# https:\/\/www.kaggle.com\/joaoavf\/kernels\n        \n        # https:\/\/www.kaggle.com\/manoxis\/iesb-python-e-pandas-aula-06\n        # https:\/\/www.kaggle.com\/manoxis\/iesb-python-e-pandas-aula-05\n        # GR\u00c1FICOS: https:\/\/www.kaggle.com\/manoxis\/aula-03-python-e-pandas\/edit","0077f3f6":"df = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv(\"..\/input\/test.csv\")","e724607c":"df.shape, test.shape","191aa11f":"df.describe().T","02084301":"df.isnull().sum()","9c8d437e":"df.dtypes","7fbbccd1":"df = df.append(test)","e642c5fe":"# ALTERA\u00c7\u00c3O DA COLUNA CHAVE DA AMOSTRA, RETIRANTO A STRING 'ID_ID_' E CONVERTENDO PARA NUM\u00c9RICO\ndf['codigo_mun'] = df['codigo_mun'].apply(lambda x: x.replace('ID_ID_',''))\ndf['codigo_mun'] = df['codigo_mun'].values.astype('int64')","2f55ff52":"# SHAPE PARA CONFIRMAR QUE OS DATA FRAMES AINDA EST\u00c3O JUNTOS\ndf.shape","1a9cd226":"df.isnull().sum()","cc044cc5":"# Transformar texto em n\u00famero\nfor c in df.columns:\n    if df[c].dtype == 'object':\n        df[c] = df[c].astype('category').cat.codes","b6859796":"# como essa coluna n\u00e3o existia inicialmente no arquivo, utilizamos ela para filtrar para separar os dataframes novamente\n\ntest = df[df['nota_mat'].isnull()]","fc7755d9":"df = df[~df['nota_mat'].isnull()]","42426cec":"df.shape, test.shape","f551198a":"df.min().min()","28e4bb33":"test.min().min()","a8a7bc54":"test.fillna(-10, inplace = True)","5caf2a96":"df.fillna(-10, inplace = True)","fe63edc8":"df['nota_mat'].hist(bins=50)\n# plotando um histograma para a columa nota matem\u00e1tica","bf07d327":"df.groupby('estado')['nota_mat'].mean().plot.bar()","d1250624":"df.groupby('porte')['nota_mat'].describe()['mean'].sort_index(ascending=False).plot()","26ad0c94":"from sklearn.model_selection import train_test_split","8fa1f219":"train, valid = train_test_split(df, random_state=42)\n# se eu utilizar o par\u00e2mentro \"... (df, random_state=42, test_size =.1)\" divido a amostra com 90% para treino e 10% para testes.\n# o padr\u00e3o, sem par\u00e2mentro nenhum, divide em 75% treino e 25% para testes","e9c0cf8c":"removed_cols = ['municipio','Unnamed: 0']","575fde0b":"feats = [c for c in df.columns if c not in removed_cols]","22b7266a":"train, valid = train_test_split(df, random_state=42)\n# se eu utilizar o par\u00e2mentro \"... (df, random_state=42, test_size =.1)\" divido a amostra com 90% para treino e 10% para testes.\n# o padr\u00e3o, sem par\u00e2mentro nenhum, divide em 75% treino e 25% para testes","950c59a3":"train.shape, valid.shape","9ff2e8c4":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(random_state=42, n_estimators=1000, min_samples_leaf=30, verbose=3)\nfeats = [c for c in df.columns if c not in ['nota_mat']]\nrf.fit(train[feats], train['nota_mat'])","f1c21f34":"from sklearn.metrics import mean_squared_error","57784f5b":"valid_preds = rf.predict(valid[feats])","9b9fc711":"mean_squared_error(valid['nota_mat'], valid_preds)**(1\/2)","604af4c9":"pd.Series(rf.feature_importances_, index=feats).sort_values().plot.barh()","201ee8df":"# abaixo enviaremos o modelo para o kaggle validar com uma vase de teste que n\u00e3o conhecemos\ntest['nota_mat'] = rf.predict(test[feats])","028a0bda":"test[['codigo_mun','nota_mat']].to_csv('rf_rodrigoaragao.csv', index=False)","28ef4257":"> > **Carregamento dos dados de input e teste**","6c07da57":"> > **Jun\u00e7\u00e3o dos dois data frames (input e test) para possibilitar as altera\u00e7\u00f5es dos campos e nulos**","c5448625":"> > **Primeiras Explora\u00e7\u00f5es das Amostras**"}}