{"cell_type":{"b9df9b4f":"code","4430de9d":"code","909da2d7":"code","c6fe779a":"code","19458b4f":"code","a23c5fcc":"code","55ff9723":"code","e4ba2778":"code","eae757c2":"code","f918c9c7":"code","a7235702":"markdown","3c4aa9ae":"markdown","e5504f0f":"markdown"},"source":{"b9df9b4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# This code will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4430de9d":"# We create the path of the csv files\nstr_Disability_ByGender = dirname+\"\/\"+\"Male-Female-Disability.csv\"\nstr_NoDisability_ByGender = dirname+\"\/\"+\"Male-Female-NoDisability.csv\"\n\n# These are the column indexes to filter, we don't need the total column\ncol_list = [0,1,2]\npd_Disability_ByGender = pd.read_csv(str_Disability_ByGender, usecols=col_list)\npd_NoDisability_ByGender = pd.read_csv(str_NoDisability_ByGender, usecols=col_list)","909da2d7":"# Now, we merge datsets over \"Age\" column that is common between them.\npd_ByGender = pd.merge(pd_Disability_ByGender,pd_NoDisability_ByGender, on=[\"Age\"])\npd_ByGender","c6fe779a":"# Rename columns\npd_ByGender.rename(columns={' Male _x':'Male_Disability', ' Female _x':'Female_Disability',\n                            ' Male _y':'Male_NoDisability', ' Female _y':'Female_NoDisability'}, inplace=True)\npd_ByGender","19458b4f":"# Datasets to concat in array\nelements = [pd_Disability_ByGender,pd_NoDisability_ByGender]\n# Concat by column axis = 1\npd_CGender = pd.concat(elements, axis=1)\npd_CGender","a23c5fcc":"# Delete column \"Age\" position 3 that is repeated\npd_CGender.drop(pd_CGender.columns[3], axis=1, inplace=True)\npd_CGender","55ff9723":"# We create the path of the csv files\nstr_Disability_ByRace = dirname+\"\/\"+\"By-Race-Disability.csv\"\nstr_NoDisability_ByRace = dirname+\"\/\"+\"By-Race-NoDisability.csv\"","e4ba2778":"# We create dataframes\ncol_list = [0,1,2,3]\npd_Disability_ByRace = pd.read_csv(str_Disability_ByRace,usecols=col_list )\npd_NoDisability_ByRace = pd.read_csv(str_NoDisability_ByRace, usecols=col_list)","eae757c2":"# Merge by \"Ethnicity\" column.\npd_ByRace = pd.merge(pd_Disability_ByRace,pd_NoDisability_ByRace, on=[\"Ethnicity\"])","f918c9c7":"# Rename columns.\npd_ByRace.rename(columns={'<18_x':'<18_D', '18-64_x':'18-64_D','>65_x':'>65_D','<18_y':'<18_ND', '18-64_y':'18-64_ND','>65_y':'>65_ND',\n                            }, inplace=True)\npd_ByRace","a7235702":"# Merging Disability and No Disability By Race","3c4aa9ae":"# Using Merging Disability and No Disability By Gender","e5504f0f":"# Using Concat to join Disability and No Disability By Gender"}}