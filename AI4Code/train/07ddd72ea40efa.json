{"cell_type":{"9ceb83da":"code","a7fe49e5":"code","31df6514":"code","9155bacd":"code","b2a1d203":"code","dc2c96bb":"code","050100ef":"code","503c9de0":"code","ac8c4554":"code","365bdd1e":"code","7e7690e9":"code","b1001a72":"code","ef9625f4":"markdown"},"source":{"9ceb83da":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a7fe49e5":"df_train = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/train.csv')","31df6514":"#prevent NA rows dissapear in grouby operations\ndf_train['Province_State'].fillna(' ',inplace=True)","9155bacd":"#calculate daily additions to confirmed cases and fatalities in absolute values and percentages\nby_ctry_prov = df_train.groupby(['Country_Region','Province_State'])[['ConfirmedCases','Fatalities']]\ndf_train[['NewCases','NewFatalities']]= by_ctry_prov.transform(lambda x: x.diff().fillna(0))\ndf_train[['NewCasesPct','NewFatalitiesPct']]= by_ctry_prov.transform(lambda x: x.pct_change().fillna(0))","b2a1d203":"df_train.sort_values('NewCases',ascending = False).head()","dc2c96bb":"#check for inconsistencies in daily new cases, cumulative count should only increase or remain equal\ndf_train[df_train.NewCases < 0].sort_values('NewCases')","050100ef":"#check for inconsistencies in daily new fatalities, cumulative count should only increase or remain equal\ndf_train[df_train.NewFatalities < 0].sort_values('NewFatalities')","503c9de0":"#more deaths than confirmed cases\ndf_train[df_train.Fatalities > df_train.ConfirmedCases]","ac8c4554":"#more than 40% increase in ConfirmedCases with at least 1000 new cases - Hubei 13 Feb example\ndf_train[(df_train.NewCasesPct > 0.4) & (df_train.NewCases > 1000)]","365bdd1e":"#more than 80% increase in ConfirmedCases with at least 50 new cases\ndf_train[(df_train.NewFatalitiesPct > 0.8) & (df_train.NewFatalities > 50)]","7e7690e9":"#example data cleaning for Hubei\/China 13 Feb reporting\n#replace day with 14K new cases caused bby measure change in China with average of near dates\nmaxindx = df_train.loc[(df_train.Country_Region=='China') & (df_train.Province_State=='Hubei'),:].NewCases.idxmax()\ndf_train.loc[maxindx-2:maxindx+2,:] #before fix of NewCases value for this day","b1001a72":"avg_smooth = (df_train.NewCases[maxindx-1]+df_train.NewCases[maxindx+1])\/2\ndf_train.loc[maxindx,'NewCases']=avg_smooth\ndf_train.loc[maxindx-2:maxindx+2,:] #after fix of NewCases value for this day","ef9625f4":"**Utility program to check the train.csv daily data file for major errors.\n**\n\nThe John Hopkins data we used in the first week had daily reliability issues, mainly bad country reporting, so it's worth checking the consistency of the data before passing it to the modelling sections.\n\nThese are just some simple checks that flag suspicious entries, the tests thresholds can be modified as needed.\nNeeds to be followed up by investigating the suspect dates and specific cleaning."}}