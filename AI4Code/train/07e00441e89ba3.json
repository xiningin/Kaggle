{"cell_type":{"47ab27f5":"code","408f53e0":"code","cff65b20":"markdown"},"source":{"47ab27f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","408f53e0":"import cv2\nimport numpy as np\n\nface_cascade=cv2.CascadeClassifier('haarcascade_frontalface_default.xml ')\nimg=cv2.imread('image2.jpg')\ngray= cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nfaces=face_cascade.detectMultiScale(gray,1.1,4)\n\n\n\n\nfor (x,y,w,h) in faces:\n    cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)\n\n\n\ncv2.imshow('Face Detection',img)\n    \n","cff65b20":"![](http:\/\/)"}}