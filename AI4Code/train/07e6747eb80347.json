{"cell_type":{"0be2e451":"code","e88af811":"code","e7452fe3":"code","398b5fdb":"code","ddf07c77":"code","55f6891b":"code","f9d7bd5a":"code","f42d0fe1":"code","8de4ca84":"code","85ccca1f":"code","86ec1307":"code","4edf8ce2":"code","f1b60467":"code","13316688":"code","e8f7cc0c":"code","2543adc3":"code","5ef9bd9c":"code","756e8cd7":"code","a9e2687b":"code","d5a935cd":"code","032e7226":"code","b21c7ead":"code","68254264":"code","12cecd3b":"code","9adfdfbd":"code","8d883d37":"code","249dfa19":"markdown","d605bb77":"markdown","e1a284e7":"markdown","641693a8":"markdown","4ef56e59":"markdown","8b4316c4":"markdown","0a632885":"markdown","322d5669":"markdown","1f99fb78":"markdown","7a784e84":"markdown","f5629072":"markdown","416b0afa":"markdown"},"source":{"0be2e451":"import random\nimport pandas as pd\nimport numpy as np\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport networkx as nx\nimport matplotlib.dates as md\nimport matplotlib.font_manager as fm\nimport matplotlib.gridspec as gridspec\nimport warnings; warnings.filterwarnings(\"ignore\")\n\n# unhide all rows and columns\npd.set_option('display.max_rows', 50)\npd.set_option('display.max_columns', 50)\npd.set_option('display.width', 1000)","e88af811":"# Path of the file to read\nspotify_filepath = \"..\/input\/data-for-datavis\/spotify.csv\"\n\n# Read the file into a variable\n# \"parse_dates=True\"  tells the notebook to understand the each row label as a date\nspotify_data = pd.read_csv(spotify_filepath, index_col=\"Date\", parse_dates=True)\n\nspotify_data.tail()","e7452fe3":"# Set the width and height of the figure\nplt.figure(figsize=(16,6))\n\n# Add title\nplt.title(\"Daily Global Streams of Popular Songs in 2017-2018\")\n\n# Line chart  showing daily global streams of popular songs in 2017-2018\nsns.lineplot(data=spotify_data)","398b5fdb":"spotify_data.columns","ddf07c77":"# Set the width and height of the figure\nplt.figure(figsize=(14,6))\n\n# Add title\nplt.title(\"Daily Global Streams of Popular Songs in 2017-2018\")\n\n# Line chart showing daily global streams of 'Shape of You'\nsns.lineplot(data=spotify_data[\"Shape of You\"], label=\"Shape of You\")\n\n# Line chart showing daily global streams of 'Despacito'\nsns.lineplot(data=spotify_data[\"Despacito\"], label=\"Despacito\")\n\n# Add label for horizontal axis\nplt.xlabel(\"Date\")","55f6891b":"# Path of the file to read\nflight_filepath = \"..\/input\/data-for-datavis\/flight_delays.csv\"\n\n# Read the file into a variable\nflight_data = pd.read_csv(flight_filepath, index_col=\"Month\")\n\nflight_data.head()","f9d7bd5a":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Average Arrival Delay for Spirit Airlines Flights, by Month\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=flight_data.index, y=flight_data[\"NK\"])\n\n# Add label for vertical axis\nplt.ylabel(\"Arrival delay (in minutes)\")","f42d0fe1":"# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=flight_data.index, y=flight_data[\"NK\"])","8de4ca84":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\n# Add title\nplt.title(\"Average Arrival Delay for Each Airline, by Month\")\n\n# Heatmap showing average arrival delay for each airline by month\nsns.heatmap(data=flight_data, annot=True)\n\n# Add label for horizontal axis\nplt.xlabel(\"Airline\")","85ccca1f":"# Heatmap showing average arrival delay for each airline by month\nsns.heatmap(data=flight_data, annot=True)","86ec1307":"# Path of the file to read\ncandy_filepath = \"..\/input\/data-for-datavis\/candy.csv\"\n\n# Read the file into a variable\ncandy_data = pd.read_csv(candy_filepath, index_col=\"id\")\n\ncandy_data.head()","4edf8ce2":"# Scatter plot\nsns.scatterplot(x=candy_data[\"sugarpercent\"], y=candy_data[\"winpercent\"])","f1b60467":"# Scatter plot with regression line\nsns.regplot(x=candy_data[\"sugarpercent\"], y=candy_data[\"winpercent\"])","13316688":"# Color coded scatter plot\nsns.scatterplot(x=candy_data[\"winpercent\"], y=candy_data[\"chocolate\"], hue=candy_data[\"pricepercent\"])","e8f7cc0c":"# Color coded scatter plot with regression line\nsns.lmplot(x=\"winpercent\", y=\"pricepercent\", hue=\"chocolate\", data=candy_data)","2543adc3":"# Categorical scatter plot\nsns.swarmplot(x=candy_data[\"chocolate\"],\n              y=candy_data[\"winpercent\"])","5ef9bd9c":"# Scatter plot of all data\nfor i in range(0, len(candy_data.columns), 5):\n    sns.pairplot(data=candy_data,\n                x_vars=candy_data.columns[i:i+5],\n                y_vars=[\"winpercent\"])","756e8cd7":"# Path of the file to read\niris_filepath = \"..\/input\/data-for-datavis\/iris.csv\"\niris_set_filepath = \"..\/input\/data-for-datavis\/iris_setosa.csv\"\niris_ver_filepath = \"..\/input\/data-for-datavis\/iris_versicolor.csv\"\niris_vir_filepath = \"..\/input\/data-for-datavis\/iris_virginica.csv\"\n\n# Read the file into a variable\niris_data = pd.read_csv(iris_filepath, index_col=\"Id\")\niris_set_data = pd.read_csv(iris_set_filepath, index_col=\"Id\")\niris_ver_data = pd.read_csv(iris_ver_filepath, index_col=\"Id\")\niris_vir_data = pd.read_csv(iris_vir_filepath, index_col=\"Id\")\n\niris_data.head()","a9e2687b":"# Histogram \nsns.distplot(a=iris_data['Petal Length (cm)'], kde=False)","d5a935cd":"# Color coded histogram\nsns.distplot(a=iris_set_data['Petal Length (cm)'], label=\"Iris-setosa\", kde=False)\nsns.distplot(a=iris_ver_data['Petal Length (cm)'], label=\"Iris-versicolor\", kde=False)\nsns.distplot(a=iris_vir_data['Petal Length (cm)'], label=\"Iris-virginica\", kde=False)\n\n# Add title\nplt.title(\"Histogram of Petal Lengths, by Species\")\n\n# Force legend to appear\nplt.legend()","032e7226":"# 1D KDE plot \nsns.kdeplot(data=iris_data['Petal Length (cm)'], shade=True)","b21c7ead":"# 2D KDE plot\nsns.jointplot(x=iris_data['Petal Length (cm)'], y=iris_data['Sepal Width (cm)'], kind=\"kde\")","68254264":"# Color coded KDE plot\nsns.kdeplot(data=iris_set_data['Petal Length (cm)'], label=\"Iris-setosa\", shade=True)\nsns.kdeplot(data=iris_ver_data['Petal Length (cm)'], label=\"Iris-versicolor\", shade=True)\nsns.kdeplot(data=iris_vir_data['Petal Length (cm)'], label=\"Iris-virginica\", shade=True)\n\n# Add title\nplt.title(\"Distribution of Petal Lengths, by Species\")","12cecd3b":"fig, ax = plt.subplots(figsize=(30,10), dpi=100)\nax.plot(spotify_data[\"Shape of You\"], label=\"Shape of You\", color=\"green\", animated = True, linewidth=1)\nax.plot(spotify_data[\"Despacito\"], label=\"Despacito\", color=\"blue\", animated = True, linewidth=1)\nax.plot(spotify_data[\"HUMBLE.\"], label=\"HUMBLE.\", color=\"red\", animated = True, linewidth=1)\n\nax.set_title(\"Daily Global Streams of Popular Songs in 2017-2018\", fontsize=16)\nax.xaxis.set_major_locator(md.MonthLocator(interval=1))\nax.xaxis.set_major_formatter(md.DateFormatter(\"%d-%m-%Y\"))\n\nplt.xlabel(\"Date\", fontsize=16)\nplt.ylabel(\"Stream\", fontsize=16)\nplt.xticks(rotation=45)\nplt.legend(loc=\"upper right\", fontsize=16)\n\nplt.show()","9adfdfbd":"# Column Correlations Network\nmain_color = \"#16a085\"\nstrong_main_color = \"#ffeb3b\"\ncustom_colors = [strong_main_color, main_color]\n\ndf = pd.read_csv(\"..\/input\/data-for-datavis\/ign_scores.csv\")\n\nthresh = 0.3\ndef correlation_network(data, corr_interval=[-0.8, 0.8], data_type=\"Train\", node_color=custom_colors[1]):\n    data = data\n    corr = data.corr()\n    corr = pd.melt(corr.reset_index(), id_vars='index')\n    corr.columns = ['x', 'y', 'value']\n    high_corr = corr[((corr['value'] <= corr_interval[0]) | (corr['value'] >= corr_interval[1]))]\n    high_corr = high_corr[(high_corr['value'] != 1)].reset_index(drop=True)\n    sources = list(high_corr.x.unique())\n    targets = list(high_corr.y.unique())\n    plt.figure(figsize=(16, 12))\n    g = nx.from_pandas_edgelist(high_corr, source='x', target='y') \n    layout = nx.spring_layout(g, iterations=50, k=0.6, seed=1337)\n    target_size = [g.degree(t) * 80 for t in targets]\n    nx.draw_networkx_nodes(g, layout, nodelist=targets, node_size=target_size, node_color=node_color)\n    nx.draw_networkx_nodes(g, layout, nodelist=sources, node_color=node_color, node_size=800, alpha=0.5)\n    nx.draw_networkx_edges(g, layout, width=1, edge_color=custom_colors[1])\n    target_dict = dict(zip(targets, targets))\n    nx.draw_networkx_labels(g, layout, labels=target_dict)\n    plt.axis('off')\n    plt.title(f\"Column Correlations Network\", fontsize=25)\n    plt.show()\ncorrelation_network(data=df, corr_interval=[-thresh, thresh], data_type=\"Train\", node_color=custom_colors[0])","8d883d37":"# Correlation Matrix\ndf.corr().style.background_gradient()","249dfa19":"## 8.1. Correlation Network\nShows highly correlated columns as a network to observe patterns.","d605bb77":"## 8.2. Correlation Matrix","e1a284e7":"# 5. Histograms","641693a8":"# 6. Density Plots","4ef56e59":"# 3. Heatmaps","8b4316c4":"**To be continued...**","0a632885":"# 8. Correlations","322d5669":"# 2. Bar Charts","1f99fb78":"Here is the ultimate data visualization cheatsheet for myself and you guys!<br>\n**If you're reading this, please upvote.**","7a784e84":"# 1. Line Charts","f5629072":"# 4. Scatter Plots","416b0afa":"# 7. Customization Example"}}