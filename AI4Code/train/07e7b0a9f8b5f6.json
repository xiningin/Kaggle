{"cell_type":{"125d5e6c":"code","aacd9e31":"code","6d00370d":"code","6555694a":"code","fe38653a":"code","4dfdee0d":"code","79506525":"code","44773215":"code","21656895":"code","57b071b0":"code","4f58c63e":"code","3f540482":"code","97449eab":"code","7bbd2bdc":"code","987aee60":"code","7e46dea8":"code","de71a670":"code","bdcd3505":"code","a9c0eba3":"code","d3f112b2":"code","285a8cd4":"code","84ea58f4":"code","d0b23d3e":"code","e4cd39a7":"code","616e4d5e":"code","a057d17e":"code","f6e3e783":"code","be324638":"code","df20fa38":"code","775b868a":"markdown"},"source":{"125d5e6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aacd9e31":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n","6d00370d":"# read test file\ntest=pd.read_csv('\/kaggle\/input\/adulttest\/adult.test',header=None)","6555694a":"test.head()","fe38653a":"#Take a look at the data\ndf.describe()","4dfdee0d":"#all Columns\ncolumns=df.columns","79506525":"np.sum(df['workclass']=='?')","44773215":"#get all the columns where '?' missing value is present and store them to missing_val_column\nmissing_val_column=[]\nfor col in columns:\n    if np.sum(df[col]=='?')>0:\n        missing_val_column.append(col)\n\nmissing_val_column\n\n# so in ['workclass', 'occupation', 'native.country'] we got missingf values","21656895":"# creating a dataframe with missing values\nmissing_df=df[['workclass', 'occupation', 'native.country']]\nmissing_df.head()","57b071b0":"df['workclass'].value_counts()\n\n# there are 1836 number of missing values\n","4f58c63e":"df.groupby(['workclass'])['income'].value_counts()\n\n# as most missing value  earns less than <=50k and same for Private we replace missing value '?' with 'Private'","3f540482":"# replace '?' with 'Private'\ndf['workclass'].replace('?','Private',inplace=True)","97449eab":"df['workclass'].value_counts()","7bbd2bdc":"# Now the missing values of occupation\ndf['occupation'].value_counts()\n\n# There are 1843 number of missing value\n","987aee60":"df.groupby(['occupation'])['income'].value_counts()\n\n# it gives not much insights as most of them kind of similar","7e46dea8":"# Try occuption against education.num\n\ndf.groupby(['occupation'])['education.num'].mean()","de71a670":"missing_indices=df[df['occupation']=='?'].index.tolist()\n# In this index there are missing values in occupation\nmissing_indices","bdcd3505":"# as these missing values are close to every other occuption then i will\n# divide these missing values to other occuption ['Adm-clerical','Craft-repair','Farming-fishing','Handlers-cleaners','Machine-op-inspct','Other-service']\nreplace_category=['Adm-clerical','Craft-repair','Farming-fishing','Handlers-cleaners','Machine-op-inspct','Other-service']\ndivision=int(df.shape[0]\/len(replace_category))","a9c0eba3":"division","d3f112b2":"for i in range(len(replace_category)):\n    df.loc[:int((i+1)*division),'occupation'].replace('?',replace_category[i],inplace=True)\n    ","285a8cd4":"\n# df.loc[:int(division),'occupation'].replace('?',replace_category[0],inplace=True)","84ea58f4":"df['occupation'].value_counts()","d0b23d3e":"df","e4cd39a7":"#Now handle native.country missing value\ndf['native.country'].value_counts()\n\n# There are 583 missing values","616e4d5e":"df.groupby(['native.country'])['income'].value_counts()\n\n# we will replace the missing value by 'United-States'","a057d17e":"df.loc[df['native.country']=='?','native.country']=\"United-States\"","f6e3e783":"df['native.country'].value_counts()\n","be324638":"df.describe()","df20fa38":"# We need to normalize the data\nfrom sklearn.preprocessing import StandardScaler\n\nscaler=StandardScaler()\n","775b868a":"#Read the csv\ndf=pd.read_csv('..\/input\/adult-census-income\/adult.csv')\ndf.head()"}}