{"cell_type":{"7d39fc2a":"code","683657cf":"code","00482dbf":"code","4ddfa78f":"code","91c6628b":"code","cff0e4ff":"code","67c740ed":"code","576e6b1f":"code","833ae333":"code","1249a515":"code","6825fd4e":"code","60ba9448":"code","cfcf7715":"code","53407909":"code","5107738e":"code","1fdd67f5":"code","7c1bcf52":"code","90ffd53d":"code","eda58000":"code","023d6255":"code","6c9d8beb":"code","f00811cf":"code","48e235c7":"code","a9097137":"code","b09ae6b5":"code","7bca655c":"markdown","d6dada99":"markdown","d1d802ac":"markdown"},"source":{"7d39fc2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","683657cf":"import numpy as np\nimport pandas as pd\n\n","00482dbf":"train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')\nitems = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_category = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshop = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n","4ddfa78f":"train.head()\n","91c6628b":"items.head()","cff0e4ff":"test.head()","67c740ed":"print(train.shape, test.shape)","576e6b1f":"##Train datas\u0131ndaki tarihler text verisi old\u011fu i\u00e7in ppython da \n## kullanmak ad\u0131na datetime objelerine \u00e7evirmemiz gerekiyor\n\ntrain['date'] = pd.to_datetime(train['date'], format='%d.%m.%Y')","833ae333":"train.head()","1249a515":"Veriler = train.pivot_table(index=['item_id', 'shop_id'],values=['item_cnt_day'], columns='date_block_num', fill_value=0)","6825fd4e":"Veriler = Veriler.reset_index()","60ba9448":"Veriler = pd.merge(test, Veriler, on=['item_id', 'shop_id'], how='left')\nVeriler = Veriler.fillna(0)\n","cfcf7715":"Veriler.head()","53407909":"\n## Shop_id ve item_id de\u011ferleri i\u00e7in tekil bir ID bilgisi olusturuluyor.\n##Temelde test ve train datas harmanlan\u0131yor gibi d\u00fc\u015f\u00fcnebiliriz\n\nVeriler = Veriler.drop(['shop_id', 'item_id', 'ID'], axis=1)\nVeriler.head()","5107738e":"X_train = np.expand_dims(Veriler.values[:, :-1], axis=2)\ny_train = Veriler.values[:, -1:]\n\nX_test = np.expand_dims(Veriler.values[:, 1:], axis=2)\nprint(X_train.shape, y_train.shape, X_test.shape)","1fdd67f5":"from keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout","7c1bcf52":"tahmin = Sequential()\ntahmin.add(LSTM(64, input_shape=(33, 1)))\ntahmin.add(Dense(20, input_dim=2, activation='relu'))\ntahmin.add(Dropout(0.3))\ntahmin.add(Dense(1, activation='sigmoid'))\n\ntahmin.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\n","90ffd53d":"model_fitting = tahmin.fit(X_train, y_train, batch_size=4096, epochs=5)","eda58000":"xx, yy = np.meshgrid(np.arange(-2, 3, 0.1),\n                     np.arange(-1.5, 2, 0.1))\n\n","023d6255":"from keras.layers import Input, Dense, Dropout\nfrom keras.models import Model\nimport matplotlib.pyplot as plt","6c9d8beb":"_, accuracy=tahmin.evaluate(X_train, y_train)\n","f00811cf":"model_prediction = tahmin.predict(X_test)\nmodel_prediction = model_prediction.clip(0, 20)\n","48e235c7":"submission = pd.DataFrame({'ID': test['ID'], 'item_cnt_month': model_prediction.ravel()})","a9097137":"submission.head()","b09ae6b5":"print('Modelin Elde Etti\u011fi Do\u011fruluk Oran\u0131\u0131:%.2f'%(accuracy*100))","7bca655c":"> * **PROJE DE \u00c7IKTI DOSYASI OLARAK \u0130STEN\u0130LEN DOSYA,SUBMISSION","d6dada99":"## VER\u0130LER\u0130N Y\u00dcKLENMES\u0130","d1d802ac":"## Fatma Nur G\u00fcneri\n## 160201048\n## B\u00fcy\u00fck Veri Analizine Giri\u015f Final \u00d6devi\n## fatmanurguneri.1703@gmail.com\n"}}