{"cell_type":{"0d57a239":"code","eeaa5683":"code","4f3bcee6":"code","4d69c384":"code","91842d80":"code","202379e4":"code","3eaf73ff":"code","40ab353e":"code","ad4c8c68":"code","2b3d8f59":"code","d4200642":"code","120e8009":"code","4ca1daf8":"code","1f42347d":"code","c698682c":"code","f7c55b87":"code","7a5ae3e8":"code","a8c91dac":"code","c480cc41":"code","45454a3f":"code","295209ed":"code","11b5b6c0":"markdown","91d86fcf":"markdown","ed317766":"markdown","982e6275":"markdown","9c60109d":"markdown","03658157":"markdown","a03a8626":"markdown","c9e787d9":"markdown","460fe244":"markdown","a2f1e14d":"markdown","55a48b1b":"markdown","e7f1444b":"markdown","339bf522":"markdown","74727888":"markdown"},"source":{"0d57a239":"import warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#graphing\nimport matplotlib.pyplot as plt\nimport squarify\nimport folium\nimport seaborn as sns\nfrom wordcloud import WordCloud\nplt.style.use('fivethirtyeight')\n\n# for market basket analysis\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\n# \/kaggle\/input\/fantasy-premier-league\/kaggle\/gw4\/player_data_1-221937_gw4.csv","eeaa5683":"df_raw = pd.read_csv('..\/input\/fantasy-premier-league\/kaggle\/gw4\/player_data_1-221937_gw4.csv')","4f3bcee6":"df_raw.head()","4d69c384":"#Eliminating invalid entries\ndf_raw.dropna(subset = ['gw_team'], inplace = True)\n\n#Sorting by gameweek rank, this order will help later when discarding entries so apriori doesn't explode the virtual machine\ndf_raw = df_raw.sort_values(['main_user_gameweek_rank'])\n\n#discarding all irrelevant columns\ndf_raw = df_raw.reset_index()\ndf_raw = df_raw['gw_team']","91842d80":"#chequeando tipo de dato\ntype(df_raw.iloc[1])","202379e4":"df = df_raw.str.replace(' ', \"\")\ndf = df.str.strip('[]')\ndf = df.str.split(\",\", n = 14, expand = True)\ndf = df.astype(int)","3eaf73ff":"#finalmente, tenemos la data, cada row es el equipo de un usuario, los IDs de los 14 jugadores, uno por columna.\ndf","40ab353e":"#M\u00e1ximum value on the table, and thus, the number of players\ndf.values.max()","ad4c8c68":"#Most Common First Player\npd.value_counts(df[0]).to_frame().rename(columns={0: 'Frequencia'}).head(10)","2b3d8f59":"plt.rcParams['figure.figsize'] = (18, 7)\npd.value_counts(df[0]).to_frame().rename(columns={0: 'Frequencia'}).head(40).plot.bar(color = 'red')\nplt.title('Frecuencia de la primera elecci\u00f3n de jugador', fontsize = 20)\nplt.xticks(rotation = 90 )\nplt.grid()\nplt.show()","d4200642":"#Most Common Player\nMost_Common_Player = pd.value_counts(df.melt().value).to_frame()\nMost_Common_Player = Most_Common_Player.rename(columns={'value': 'Frecuencia'})\nMost_Common_Player.head(10)","120e8009":"plt.rcParams['figure.figsize'] = (18, 7)\nMost_Common_Player.head(80).plot.bar(color = 'blue')\nplt.title('frequencia de los jugadores m\u00e1s populares', fontsize = 20)\nplt.xticks(rotation = 90 )\nplt.grid()\nplt.show()","4ca1daf8":"pd.value_counts(df_raw).to_frame().reset_index().rename(columns={'index': 'Equipo', 'gw_team': 'Frecuencia'}).head(10)","1f42347d":"#Transform the dataframe into something the apriori algorithm can use\nfrom mlxtend.preprocessing import TransactionEncoder\nte = TransactionEncoder()\ndata = te.fit_transform(df.values)\ndata = pd.DataFrame(data, columns = te.columns_)\ndata.shape","c698682c":"#drop down to the 30 most common players, and down to a 30% top players sample, since running apriori over the whole thing is too much for the virtual machine\napriori_data = data.loc[:, Most_Common_Player.head(30).index]\napriori_data = apriori_data.head(round(221934*0.3))\napriori_data.shape","f7c55b87":"data.head()","7a5ae3e8":"apriori_results = apriori(apriori_data, min_support = 0.01, use_colnames = True)","a8c91dac":"#add lengths to the table, and, sort by support\napriori_results['length'] = apriori_results['itemsets'].apply(lambda x: len(x))\napriori_results = apriori_results.sort_values(['support'], ascending=[False])","c480cc41":"apriori_results[ (apriori_results['length'] >= 2)]","45454a3f":"apriori_results[ (apriori_results['length'] >= 4) & (apriori_results['support'] > 0.05)]","295209ed":"apriori_results[ apriori_results['itemsets'] == {272,82, 242} ]","11b5b6c0":"Hay muy pocos equipos id\u00e9nticos, es muy poco probable que los usuarios esten copiando equipos completos de aquellos usuarios que son m\u00e1s exitosos","91d86fcf":"O \u00bfqu\u00e9 porcentaje de equipos poseen los 3 jugadores m\u00e1s comunes?:","ed317766":"### Cargando los datos\nEste es un dataset de los usuarios y sus equipos entre 2016 y 2017, siendo un dataset gigantesco, nos vamos a enfocar en la cuarta semana de juego:\n","982e6275":"La distribuci\u00f3n es muy diferente, aunque hay una notable curva en la popularidad de los jugadores, es mucho menos dram\u00e1tica que en la primera elecci\u00f3n.\nCuriosamente, el jugador m\u00e1s popular como primera elecci\u00f3n (242) no es el jugador m\u00e1s popular en total (272), sino el tercero.\n\n### Equipos m\u00e1s frecuentes","9c60109d":"### Importando librer\u00edas","03658157":"Con soporte de data de los jugadores, que tristemente no encontramos disponible, podr\u00edamos tomar las posiciones de los jugadores y buscar equipos populares de delanteros, mediocampistas, defensas, laterales, etc.","a03a8626":"## Visualisaciones de la Data\n\n### Primera elecci\u00f3n de jugador:\nEl primer jugador a ser elegido por cada usuario","c9e787d9":"Nos ser\u00eda m\u00e1s conveniente tenerlo como columnas separadas de enteros, en vez de 1 string por grupo:","460fe244":"# Procesamiento de la Data","a2f1e14d":"## Miner\u00eda de Asociaci\u00f3n\n\nD\u00e9mosle una vista a los resultados","55a48b1b":"Como se puede ver, por cada set, poseemos el porcentaje del conjunto original que lo contiene.\nPodemos responder preguntas como por ejemplo: \"\u00bfCu\u00e1les son los grupos de 4 o m\u00e1s jugadores m\u00e1s comunes?\"","e7f1444b":"# Asociaci\u00f3n\n\n### Descripci\u00f3n General\nFantasy Premiere League es un juego multijugador en l\u00ednea de futb\u00f3l, en donde los usuarios buscan crear su equipo ideal en el tiempo que tienen disponible. Predeciblemente, hay jugadores que van a ser m\u00e1s exitosos y populares que otros, y se espera que haya combinaciones de jugadores que prueben ser muy populares. El algoritmo apriori nos permitir\u00e1 encontrar esta informaci\u00f3n.","339bf522":"Se puede ver que un jugador en particular (242) es masivamente m\u00e1s popular como primera elecci\u00f3n que cualquier otro, y que los 6 jugadores m\u00e1s populares como primera elecci\u00f3n sobrepasan el resto por una cantidad considerable.\n\n### Jugador m\u00e1s com\u00fan\nSe ver\u00e1 un comportamiento diferente al tomar en cuenta el equipo completo? O los usuarios seguir\u00e1n un comportamiento similar y veremos unos pocos jugadores siendo masivamente m\u00e1s populares que el resto?","74727888":"Para predecir combinaciones populares, no nos interesan varios de estos campos, de hecho, solo nos interesa un campo: gw_team.\nEl campo gw_team es un string que contiene los IDs de los 14 jugadores del equipo, nos interesan los equipos m\u00e1s populares."}}