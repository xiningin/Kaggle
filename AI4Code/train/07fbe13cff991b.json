{"cell_type":{"a05b6e43":"code","ea76c4c0":"code","40c06801":"code","47d69bef":"code","002b6490":"code","a04b8968":"code","afd355ba":"code","5d5601dd":"code","8cde5592":"code","43b7e3ef":"code","fef5f2eb":"code","31d951eb":"code","5c9ff616":"code","ec343f10":"markdown","19641d35":"markdown","8e92cb35":"markdown","f951bf74":"markdown","0f9ff516":"markdown","49e937dd":"markdown","ff225078":"markdown","466d4183":"markdown","28e43ee6":"markdown"},"source":{"a05b6e43":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea76c4c0":"df = pd.read_csv('\/kaggle\/input\/bostonhoustingmlnd\/housing.csv')","40c06801":"df.shape","47d69bef":"df.head()","002b6490":"df.describe()","a04b8968":"df.isna().sum()","afd355ba":"from sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor","5d5601dd":"X = df.drop(['MEDV'], axis = 1)\ny = df.MEDV","8cde5592":"from sklearn.model_selection import train_test_split","43b7e3ef":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, random_state=1)","fef5f2eb":"lr = LinearRegression()\nlr.fit(X_train, y_train)\nlr.score(X_test, y_test)","31d951eb":"svr = SVR()\nsvr.fit(X_train, y_train)\nsvr.score(X_test, y_test)","5c9ff616":"rf = RandomForestRegressor()\nrf.fit(X_train, y_train)\nrf.score(X_test, y_test)","ec343f10":"## Boston Houses\n\nA partir d'un jeu de donn\u00e9es r\u00e9pertoriant diff\u00e9rents param\u00e8tres de maisons situ\u00e9es \u00e0 Boston et leur prix, nous allons construire un mod\u00e8le capable de pr\u00e9dire le prix d'une maison.\n\n'RM', 'LSTAT', et 'PTRATIO' \u00e9tant les variables explicatives ; 'MEDV' \u00e9tant la variable expliqu\u00e9e.\n\nNotons aussi que nous sommes face \u00e0 un probl\u00e8me n\u00e9cessitant d'exprimer un prix, donc un probl\u00e8me de r\u00e9gression.","19641d35":"Contrairement aux exercices pr\u00e9c\u00e9dents (diab\u00e8te, fraude, zalando), nous ne devons plus pr\u00e9dire une classe (probl\u00e8mes de classification) mais une valeur num\u00e9rique, un prix. C'est un probl\u00e8me de r\u00e9gression.\n\nNous devons donc utiliser d'autres mod\u00e8les que ceux vus pr\u00e9c\u00e9demment, qui \u00e9taient destin\u00e9s \u00e0 la classification. Pour la plupart, nous allons simplement utiliser leur pendant adapt\u00e9 \u00e0 la r\u00e9gression : le svc devient svr, la r\u00e9gression logistique devient r\u00e9gression lin\u00e9aire, k-nn classifier devient k-nn reg,... m\u00eame xgBoost et RandomForest ont maintenant leur \u00e9quivalent en r\u00e9gression.\n\nQui dit changement de probl\u00e8me, dit \u00e9galement changement de m\u00e9thode d'\u00e9valuation des mod\u00e8les. La matrice de corr\u00e9lation et l'accuracy ne sont plus utilisables dans un probl\u00e8me de r\u00e9gression. Nous utiliserons donc ici le score R2.","8e92cb35":"R2 est compris entre O et 1. Il tend vers 1 quand le mod\u00e8le explique bien la distribution des points, et vers 0 lorsque mod\u00e8le n'explique absoluement pas la distribution.","f951bf74":"### D\u00e9finition X\/Y et Train\/Test ","0f9ff516":"## Machine Learning","49e937dd":"SVR","ff225078":"Random Forest Regressor","466d4183":"R\u00e9gression Lin\u00e9aire","28e43ee6":"## Exploration des donn\u00e9es"}}