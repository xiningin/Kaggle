{"cell_type":{"17c45e31":"code","12379c39":"code","886412b0":"code","3654e05d":"code","01f99af2":"code","d29bc91f":"code","6c37e1e7":"code","f1c182ea":"code","9996da51":"code","2a0ae721":"code","b49d58ac":"code","3e1a0879":"code","26dc05a5":"code","1aef68c7":"code","24f48559":"code","2f045fcf":"code","898415a3":"code","c9385ab0":"code","6de70143":"code","857f6099":"code","946a4c54":"code","56595f5d":"code","ebbbe629":"code","8b9e0805":"code","fc7ac9b1":"code","83f254f1":"code","dc7f5fa7":"code","8af182a0":"code","6d246786":"code","e2a2c0b2":"code","1ab2826a":"code","f76c6a52":"markdown","b73e8ffb":"markdown","b9217072":"markdown","96959699":"markdown","41abf950":"markdown","6dde7734":"markdown"},"source":{"17c45e31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","12379c39":"data = pd.read_csv('\/kaggle\/input\/womens-international-football-results\/results.csv')","886412b0":"data.head()","3654e05d":"data['date'] = pd.to_datetime(data['date'])","01f99af2":"data['year'] = data['date'].dt.year","d29bc91f":"plt.figure(figsize=(12, 6))\n\ndata.groupby('year')['date'].count().plot()\n\n# World Cups\nplt.axvline(x=1991, color='k', linestyle='--')\nplt.axvline(x=1995, color='k', linestyle='--')\nplt.axvline(x=1999, color='k', linestyle='--')\nplt.axvline(x=2003, color='k', linestyle='--')\nplt.axvline(x=2007, color='k', linestyle='--')\nplt.axvline(x=2011, color='k', linestyle='--')\nplt.axvline(x=2015, color='k', linestyle='--')\nplt.axvline(x=2019, color='k', linestyle='--')","6c37e1e7":"# First World Cup in 1991\n# Pick in the Olympics in 2018\n# COVID stopped the rise of matchs in women's football","f1c182ea":"for i, row in data.iterrows():\n    if (row['home_score'] - row['away_score']) > 0:\n        data.loc[i,'home_result'] = 'win'\n        data.loc[i,'away_result'] = 'loss'\n    elif (row['home_score'] - row['away_score']) < 0:\n        data.loc[i,'home_result'] = 'loss'\n        data.loc[i,'away_result'] = 'win'\n    else:\n        data.loc[i,'home_result'] = 'draw'\n        data.loc[i,'away_result'] = 'draw'","9996da51":"home = data[['home_team', 'home_result']]\nhome.columns = ['team', 'result']\n\naway = data[['away_team', 'away_result']]\naway.columns = ['team', 'result']","2a0ae721":"res = pd.concat([home,away])","b49d58ac":"res = res[res.result == 'win'].groupby('team').count().reset_index()\nres = res.sort_values('result', ascending=False)\nres","3e1a0879":"fig, ax = plt.subplots(figsize=(8, 8))\nax.pie(res[:10].result, labels=res[:10].team, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax.axis('equal')\n\nplt.show()","26dc05a5":"data.tournament.unique()","1aef68c7":"wc = data[data.tournament=='FIFA World Cup']","24f48559":"wc = wc[['home_team', 'away_team', 'home_result', 'away_result', 'year']]","2f045fcf":"# get all finals\nwc = wc.groupby('year').tail(1)","898415a3":"wc","c9385ab0":"# change results for the 2 draws\nwc.loc[(wc['year']==1999), 'home_result'] = 'win'\nwc.loc[(wc['year']==1999), 'away_result'] = 'loss'\nwc.loc[(wc['year']==2011), 'home_result'] = 'win'\nwc.loc[(wc['year']==2011), 'away_result'] = 'loss'","6de70143":"home = wc[['home_team', 'home_result']]\nhome.columns = ['team', 'result']\n\naway = wc[['away_team', 'away_result']]\naway.columns = ['team', 'result']","857f6099":"wc = pd.concat([home,away])","946a4c54":"wc = wc[wc.result == 'win'].groupby('team').count().reset_index()\nwc = wc.sort_values('result', ascending=False)","56595f5d":"plt.figure(figsize=(12, 6))\nsns.barplot(x=\"team\", y=\"result\", data=wc)","ebbbe629":"euro = data[data.tournament.isin(['Euro', 'UEFA Euro'])]","8b9e0805":"euro = euro[['home_team', 'away_team', 'home_result', 'away_result', 'year']]","fc7ac9b1":"# get all finals\neuro = euro.groupby('year').tail(1)","83f254f1":"euro","dc7f5fa7":"home = euro[['home_team', 'home_result']]\nhome.columns = ['team', 'result']\n\naway = euro[['away_team', 'away_result']]\naway.columns = ['team', 'result']","8af182a0":"euro = pd.concat([home,away])","6d246786":"euro = euro[euro.result == 'win'].groupby('team').count().reset_index()\neuro = euro.sort_values('result', ascending=False)","e2a2c0b2":"plt.figure(figsize=(12, 6))\nsns.barplot(x=\"team\", y=\"result\", data=euro)","1ab2826a":"# A lot of domination from Germany","f76c6a52":"# Data Exploration","b73e8ffb":"### Tournaments","b9217072":"#### World Cups","96959699":"#### Euro","41abf950":"### Most wins in history","6dde7734":"### Number of games per years"}}