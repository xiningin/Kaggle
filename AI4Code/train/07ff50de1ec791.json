{"cell_type":{"b8f9d94d":"code","05425fb4":"code","a2728bcd":"code","466d67a1":"code","8cc32938":"code","d04f28f4":"code","d0af12b8":"code","f589321e":"code","aaef2144":"code","929aa379":"code","dd3bb2d7":"code","55dfed90":"code","c0f03ad5":"code","486c479a":"code","bc06c3ab":"code","665cb6c7":"code","5b374a0c":"code","552358ec":"markdown","b66cf30a":"markdown","0ef941cb":"markdown","07072751":"markdown","3ee7d2b6":"markdown","f2565b12":"markdown","e7017df3":"markdown","e3a8392a":"markdown","9e101750":"markdown","72ac884c":"markdown","b76a39f6":"markdown","9039bc54":"markdown","d0b9aade":"markdown"},"source":{"b8f9d94d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom lightgbm import LGBMRegressor\nfrom xgboost import XGBRegressor\nfrom tensorflow.keras.wrappers.scikit_learn import KerasRegressor\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras import Sequential\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nimport plotly.express as px","05425fb4":"df=pd.read_excel('..\/input\/body-mass-index\/BMI.xlsx',index_col='SR.NO')","a2728bcd":"df.head()","466d67a1":"df.describe().T ","8cc32938":"df.info()","d04f28f4":"df=df.drop(['Age', 'Gender'], axis=1)","d0af12b8":"plt.figure()\nplt.subplot(1,2,1)\nsns.boxplot(y='Height(cm)',data=df)\nplt.subplot(1,2,2)\nsns.boxplot(y='Weight(in Kg)',data=df)","f589321e":"X=df.drop('BMI',axis=1)","aaef2144":"y=df.BMI","929aa379":"lm=sm.OLS(y,X)\nmodel=lm.fit()\nmodel.summary()","dd3bb2d7":"X_train,X_test,y_train, y_test=train_test_split(X,y,test_size=0.2, random_state=42)","55dfed90":"rf=RandomForestRegressor()\nrf.fit(X_train, y_train)\npreds=rf.predict(X_test)\nnp.sqrt(mean_squared_error(y_test,preds))","c0f03ad5":"light=LGBMRegressor()\nlight.fit(X_train,y_train)\npreds=light.predict(X_test)\nnp.sqrt(mean_squared_error(y_test,preds))","486c479a":"xm=XGBRegressor()\nxm.fit(X_train, y_train)\npreds=xm.predict(X_test)\nnp.sqrt(mean_squared_error(y_test,preds))","bc06c3ab":"mlp=MLPRegressor(max_iter=250)\nmlp.fit(X_train, y_train)\npreds=mlp.predict(X_test)\nnp.sqrt(mean_squared_error(y_test,preds))","665cb6c7":"kn=KNeighborsRegressor()\nkn.fit(X_train, y_train)\npreds=kn.predict(X_test)\nnp.sqrt(mean_squared_error(preds, y_test))","5b374a0c":"df1=pd.DataFrame({'Models':['Random Forest','LightGBM','XGBoost','MLP','KNeighbors'],\n                'Error':[1.3,6.08,1.53,9.75,2.04]})\ndf1=df1.sort_values(by='Error',ascending=False)\npx.bar(df1,x='Models',y='Error')","552358ec":"There is no outliar data so this dataset is safe for processing.","b66cf30a":"# 4. Comparison","0ef941cb":"# 2. Statistic Model","07072751":"# 3.Machine Learning Models","3ee7d2b6":"## 3.5. KNeighbors","f2565b12":"## 3.3. XGBoost","e7017df3":"So the linear model we prepared represents really well.\nP-value is 6.63e-39 and R^2 is 0.973.","e3a8392a":"# 1. Understanding Data","9e101750":"## 3.2. LightGBM","72ac884c":"Let's check whether there is any outliar data or not.","b76a39f6":"## 3.4. MLP","9039bc54":"## 3.1. Random Forest","d0b9aade":"Like Linear Regression model Random Forest model predicts BMI's really well."}}