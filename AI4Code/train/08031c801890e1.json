{"cell_type":{"d7a9cbc4":"code","56265d3a":"code","2d377eb4":"code","cf2a2b43":"code","738d0004":"code","e8174264":"code","9ce373b5":"code","31ccf7d5":"code","9b6427a3":"code","42b7dabc":"code","868c8d22":"code","c2f0d2b1":"code","f43ed299":"code","ad2938a5":"markdown","c34cc172":"markdown","3007a0bb":"markdown","0390da63":"markdown","b594c827":"markdown","4dbf1ad6":"markdown","e8fad63a":"markdown","a50de72b":"markdown","d37220dd":"markdown","ab3bdc29":"markdown","556705b2":"markdown","ca330491":"markdown"},"source":{"d7a9cbc4":"import pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score\nimport os","56265d3a":"raw_wine_data = pd.read_csv('\/kaggle\/input\/tdac-wine\/Test_Data.csv')","2d377eb4":"raw_wine_data.head()","cf2a2b43":"wine_target = raw_wine_data['type']\nraw_wine_data = raw_wine_data.drop(['index','type'], axis=1)","738d0004":"vals = raw_wine_data.values\nmin_max_scaler = preprocessing.MinMaxScaler()\nvals_scaled = min_max_scaler.fit_transform(vals)\nprocessed_wine_data = pd.DataFrame(vals_scaled)","e8174264":"from sklearn.manifold import TSNE\n\ndecomp_wine = TSNE(n_components=2, early_exaggeration=2.0).fit_transform(processed_wine_data)","9ce373b5":"decomp_wine = pd.DataFrame(decomp_wine)","31ccf7d5":"red_wine = decomp_wine[wine_target == 0]\nwhite_wine = decomp_wine[wine_target == 1]\n\nfig,ax=plt.subplots(1,1,figsize=(10, 10))\nred_wine.plot.scatter(0,1, color='red', ax=ax, label='Red Wine')\nwhite_wine.plot.scatter(0,1, color='blue', ax=ax, label='White Wine')","9b6427a3":"parameters_logit= [{'C':[0.1,0.2,0.5],'solver':['liblinear'],'penalty':['l1','l2'],'max_iter':[1000]},\n                   {'C':[0.1,0.2,0.5,1],'solver':['lbfgs'],'penalty':['l2'],'max_iter':[1000]}]","42b7dabc":"X_train, X_test, y_train, y_test = train_test_split(processed_wine_data, wine_target)\nLR = LogisticRegression()\ngrid_search_logit=GridSearchCV(estimator=LR, param_grid=parameters_logit,scoring='accuracy',cv=10)\ngrid_search_logit.fit(X_train,y_train)\ngrid_search_logit.score(X_test, y_test)","868c8d22":"raw_wine_val_data = pd.read_csv('\/kaggle\/input\/tdac-wine\/Val_Data.csv')","c2f0d2b1":"del raw_wine_val_data['Index']\nvals = raw_wine_val_data.values\nmin_max_scaler = preprocessing.MinMaxScaler()\nvals_scaled = min_max_scaler.fit_transform(vals)\nprocessed_wine_val_data = pd.DataFrame(vals_scaled)\nprocessed_wine_val_data.head()","f43ed299":"guess = grid_search_logit.predict(processed_wine_val_data)\nnp.savetxt(\"val.csv\", guess, delimiter=\",\")","ad2938a5":"Plotting the decomposed data","c34cc172":"Splitting the data into a training and test set.\nCreating a Logisitic Regression model.\nPassing the model and test parameters to the GridSearchCV function (this is a brute force way of finding the best parameters).\nFitting the training data to the model.\nScoring the test data.","3007a0bb":"Check out the data. It's all over the place. I need to standardize it. Additionally, I don't believe the index column will contribute so I'll take that out.","0390da63":"Establishing parameters that will be tested during my grid search","b594c827":"Read in the csv file.","4dbf1ad6":"**Wine Competition**\n\nUsing only the code from [tech trainings](https:\/\/github.com\/texas-a-m-data-analytics-club), you can get a 97% or higher on the wine competition.","e8fad63a":"Separating the type column into wine_target and removing the type and index column from the input data","a50de72b":"Preprocessing the inputs.","d37220dd":"Preprocessing the data\n\n\n1.   Removing just the index column since the type column isn't present in this file\n2.   Normalizing the data\n3.   Storing the data in a data frame\n\n","ab3bdc29":"Openning the validation data csv file","556705b2":"Using my trained model to predict the type of wine in the validation data and storing it in a csv file.","ca330491":"Visualizing the data to ensure there is a clear distinction between the two types. Using tSNE to reduce the dimensionality of the data."}}