{"cell_type":{"f15ea180":"code","aa848914":"code","4df2cca1":"code","79239190":"code","9ff323e3":"code","09998419":"code","3dab8137":"code","ac371706":"code","fd6a5ad2":"code","048f12da":"code","447e2c30":"code","1c39566c":"code","93e9a8cd":"code","169546a8":"code","2e3fcbc4":"code","23f942b0":"code","47e487f6":"code","55286931":"code","b7adc15f":"code","7b42b664":"code","a06876b5":"code","0ff00b3e":"code","6937526c":"code","518d4696":"code","dc7ae46f":"code","a3df9757":"code","21bf1b3a":"code","522e4776":"code","7d7c401b":"code","3efccafa":"code","d80cadee":"code","3a5dd74a":"code","474601e0":"code","b39764b6":"code","765cff04":"code","37c926be":"code","fe0fcfed":"code","18a6b93e":"code","bee944a1":"code","1312849d":"code","dcb0d2fb":"code","9caa9adf":"code","9445ea11":"code","c384092d":"code","884c18e7":"code","fe272100":"code","eb50bb3b":"code","936e58ae":"code","21bac72e":"code","d2acb5fd":"code","594054eb":"code","600450f6":"code","b3140dea":"code","edc38878":"code","9b28ebcf":"code","dbc7e5a1":"code","1260cf08":"code","0cb8e8f2":"code","5dc244ad":"code","254e25d7":"code","be7e283e":"code","c011b9c7":"code","0e73ef1d":"code","363b6a74":"code","4df361ed":"code","e1fd432f":"code","6ea7e6ab":"code","67aacfb4":"code","ef096bc0":"code","1f7a22a8":"code","d31fd3e0":"code","3da0b6f4":"code","1daaa026":"code","4cce39db":"code","88d860b6":"code","920534fa":"code","09800685":"code","8c0d6149":"code","1134952a":"code","417273a7":"code","9b16e7c2":"code","de9686c5":"code","0bfe0d8a":"code","454e36d3":"code","c5bc1e7f":"code","31e6b24a":"code","6ec27c60":"code","47598116":"code","44826ad8":"code","030230e0":"code","8d96a3ab":"code","652491fc":"code","2f4cd98e":"code","9a517219":"code","25445ca2":"code","e768ffa5":"code","d79acad1":"code","2aab521e":"code","60475963":"code","a1a5b915":"markdown","e8cce895":"markdown","1711806c":"markdown","042f4635":"markdown","6dc2028c":"markdown","2f621519":"markdown","9eae5eb3":"markdown","54309b09":"markdown","e6bda8b6":"markdown","77e3ea02":"markdown","dd419c39":"markdown","5de690df":"markdown","58c02bca":"markdown","717b153d":"markdown","ac9e56d6":"markdown","97d3ea01":"markdown","85d647b0":"markdown","5522e5fb":"markdown","e86c28df":"markdown","f92d6e05":"markdown","5e2c8951":"markdown","e177d288":"markdown","a70a3965":"markdown","3a83aed4":"markdown","216578c5":"markdown","5af114f1":"markdown","131d6deb":"markdown","4ced4a34":"markdown","2cec4693":"markdown","af9b2015":"markdown","a8a05cd6":"markdown","1407f0c2":"markdown","948448ea":"markdown","1aa96c64":"markdown","7a130f0c":"markdown","71e37233":"markdown","7720cb47":"markdown","74b2b095":"markdown","bec06b62":"markdown","9e37553a":"markdown","bb7f80c8":"markdown","09d94a71":"markdown","dadec3ab":"markdown","69cfb76f":"markdown","c88daa21":"markdown"},"source":{"f15ea180":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas.io.json import json_normalize\nimport json\nimport gc\n%matplotlib inline","aa848914":"json_cols = ['device', 'geoNetwork', 'totals', 'trafficSource']\njson_conv = {col: json.loads for col in (json_cols)}\ntrain = pd.read_csv(\"..\/input\/train.csv\",\n                    #nrows = 10000,\n                    dtype={'fullVisitorId': str},\n                    converters={'device': json.loads,\n                               'geoNetwork': json.loads,\n                               'totals': json.loads,\n                               'trafficSource': json.loads,\n                              })","4df2cca1":"train.head()","79239190":"train.describe()","9ff323e3":"train.info()","09998419":"def extractJsonColumns(df):\n    for col in json_cols:\n        print('Working on :' + col)\n        jsonCol = json_normalize(df[col].tolist())\n        jsonCol.columns = [col+'_'+jcol for jcol in jsonCol.columns]\n        df = df.merge(jsonCol,left_index=True,right_index=True)\n        df.drop(col,axis=1,inplace=True)\n    return(df)","3dab8137":"train = extractJsonColumns(train)\ntrain.columns","ac371706":"len(train)","fd6a5ad2":"def generateColumnInfo(df):\n    cls = []\n    nullCount = []\n    nonNullCount = []\n    nullsPct = []\n    uniqCount = []\n    dataType = []\n    for i,col in enumerate(df.columns):\n        cls.append(col)\n        nullCount.append(df[col].isnull().sum())\n        nonNullCount.append(len(df)-df[col].isnull().sum())\n        nullsPct.append((df[col].isnull().sum())*(100)\/len(df))\n        uniqCount.append(df[col].nunique())\n        dataType.append(df[col].dtype)\n        \n    column_info = pd.DataFrame(\n        {'ColumnName': cls,\n         'NullCount': nullCount,\n         'NonNullCount': nonNullCount,\n         'NullPercent': nullsPct,\n         'UniqueValueCount': uniqCount,\n         'DataType':dataType\n        })\n    return(column_info)","048f12da":"generateColumnInfo(train)\n","447e2c30":"train.drop('trafficSource_campaignCode',axis=1,inplace=True)","1c39566c":"trn_colInfo = generateColumnInfo(train)\ntrn_colInfo[(trn_colInfo['NullCount'] == 0) & (trn_colInfo['UniqueValueCount'] == 1)]","93e9a8cd":"train.drop(['socialEngagementType',\n'device_browserSize',\n'device_browserVersion',\n'device_flashVersion',\n'device_language',\n'device_mobileDeviceBranding',\n'device_mobileDeviceInfo',\n'device_mobileDeviceMarketingName',\n'device_mobileDeviceModel',\n'device_mobileInputSelector',\n'device_operatingSystemVersion',\n'device_screenColors',\n'device_screenResolution',\n'geoNetwork_cityId',\n'geoNetwork_latitude',\n'geoNetwork_longitude',\n'geoNetwork_networkLocation',\n'totals_visits',\n'trafficSource_adwordsClickInfo.criteriaParameters'],axis=1,inplace=True)","169546a8":"plt.figure(figsize=(15,8))\nsns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","2e3fcbc4":"def plot_colCount(df,col,xtick=0,w=12,h=7):\n    plt.figure(figsize=(w,h))\n    p = sns.countplot(data =df,x=col)\n    plt.xticks(rotation=xtick)\n    plt.title('Count of ' + col)\n    plt.show()\n    \ndef plot_totalRevenue(df,col,xtick=0,w=12,h=7):\n    groupedDf = df.groupby(col,as_index=False)['totals_transactionRevenue'].sum()\n    groupedDf = groupedDf[groupedDf['totals_transactionRevenue']>0]\n    plt.figure(figsize=(w,h))\n    p = sns.barplot(data=groupedDf,x=col,y='totals_transactionRevenue')\n    plt.xticks(rotation=xtick)\n    plt.title('Total revenue by ' + col)\n    plt.show()\n    \ndef plot_revenuePerUnitCol(df,col,xtick=0,w=12,h=7):\n    plt.figure(figsize=(w,h))\n    plt.ylim()\n    p = sns.barplot(data =df,x=col,y='totals_transactionRevenue',ci=False)\n    plt.xticks(rotation=xtick)\n    plt.title('Revenue per visit')\n    plt.show()","23f942b0":"print(train['totals_transactionRevenue'].isnull().sum())","47e487f6":"train['totals_transactionRevenue'].fillna(0,inplace=True)\ntrain['totals_transactionRevenue'] = train['totals_transactionRevenue'].astype('int64')","55286931":"plt.figure(figsize=[10,6])\nsns.distplot(train['totals_transactionRevenue'])","b7adc15f":"plot_colCount(train,'channelGrouping',30,10,6)\nplot_totalRevenue(train,'channelGrouping',30,10,6)\nplot_revenuePerUnitCol(train,'channelGrouping',30,10,6)","7b42b664":"train['date'] = pd.to_datetime(train['date'],format='%Y%m%d')","a06876b5":"import math\nbyDate = train.groupby('date',as_index=False).agg({'visitId':'count','totals_transactionRevenue':'sum'}).rename(columns={'visitId':'visits','totals_transactionRevenue':'totalRevenue'})\nbyDate['totalRevenue'] = byDate['totalRevenue']\/1000000\nbyDateFlat = byDate.melt('date',var_name ='Numbers',value_name='values')","0ff00b3e":"plt.figure(figsize=(16,8))\nnew_labels = ['label 1', 'label 2']\nsns.lineplot(data=byDateFlat,x='date',y='values',hue='Numbers')\nplt.title('Visit Count and Total Revenue (in 1000000) by date')\nplt.ylabel('')\nplt.show()","6937526c":"train['date_year'],train['date_month'],train['date_weekday'] = train['date'].dt.year,train['date'].dt.month,train['date'].dt.weekday\ntrain.drop('date',axis=1,inplace=True)","518d4696":"plot_colCount(train,'date_weekday',0,10,6)\n#Monday=0, Sunday=6","dc7ae46f":"plot_totalRevenue(train,'date_weekday',0,10,6)","a3df9757":"plot_colCount(train,'date_month',0,10,6)","21bf1b3a":"plot_totalRevenue(train,'date_month',0,10,6)","522e4776":"train['fullVisitorId'].value_counts().head(10)","7d7c401b":"train.groupby('fullVisitorId').sum()['totals_transactionRevenue'].sort_values(ascending=False).head(10)","3efccafa":"train['visitNumber'].value_counts().head()","d80cadee":"train['device_browser'].value_counts().head(10)","3a5dd74a":"plot_colCount(train,'device_browser',80)\nplot_totalRevenue(train,'device_browser',30,10,6)","474601e0":"plot_revenuePerUnitCol(train,'device_browser',80)","b39764b6":"f = sns.FacetGrid(train,hue='device_deviceCategory',size=5,aspect=4)\n#plt.xlim(0, 300)\nplt.figure(figsize=(15,10))\nf.map(sns.kdeplot,'totals_transactionRevenue',shade= True)\nf.add_legend()","765cff04":"f = sns.FacetGrid(train,hue='device_deviceCategory',size=5,aspect=4)\nplt.xlim(0, 500000000)\nplt.figure(figsize=(15,10))\nf.map(sns.kdeplot,'totals_transactionRevenue',shade= True)\nf.add_legend()","37c926be":"plot_colCount(train,'device_deviceCategory',60)\nplot_totalRevenue(train,'device_deviceCategory',30,10,6)\nplot_revenuePerUnitCol(train,'device_deviceCategory',60)","fe0fcfed":"plt.figure(figsize=(8,5))\nsns.barplot(data =train,x='device_isMobile',y='totals_transactionRevenue')","18a6b93e":"plot_colCount(train,'device_operatingSystem',60)\nplot_totalRevenue(train,'device_operatingSystem',30,10,6)\nplot_revenuePerUnitCol(train,'device_operatingSystem',60)","bee944a1":"topCities = train['geoNetwork_city'].value_counts().head(50).reset_index()\ntopCities.columns = ['city','count']\ntopCities = topCities[topCities.city !='not available in demo dataset']\ntopCities = topCities[topCities.city !='(not set)']\ntopCitiesTrain = train[train['geoNetwork_city'].isin(topCities['city'])]","1312849d":"plot_colCount(topCitiesTrain,'geoNetwork_city',60)\nplot_totalRevenue(topCitiesTrain,'geoNetwork_city',60)\nplot_revenuePerUnitCol(topCitiesTrain,'geoNetwork_city',60)","dcb0d2fb":"plot_colCount(train,'geoNetwork_continent',0,10,6)\nplot_totalRevenue(train,'geoNetwork_continent',0,10,6)\nplot_revenuePerUnitCol(train,'geoNetwork_continent',0,10,6)","9caa9adf":"import matplotlib.pyplot as plt\nfrom plotly.offline import download_plotlyjs, init_notebook_mode,plot,iplot\nimport plotly.graph_objs as go\nimport cufflinks as cf\nbyCountry = train.groupby('geoNetwork_country',as_index=False).agg({'visitId':'count','totals_transactionRevenue':'sum'}).rename(columns={'visitId':'visits','totals_transactionRevenue':'totalRevenue'})\ninit_notebook_mode(connected=True)\ncf.go_offline()","9445ea11":"data=dict(type='choropleth',\n         locations = byCountry['geoNetwork_country'],\n         locationmode = 'country names',\n         colorscale = 'Blues',\n         reversescale=True,\n         text = ['text 1','text 2','text 3'],\n         z=byCountry['visits'],\n         colorbar={'title':'Total visits'})\n\nlayout = dict(title='Visit count by Country')\n\nchoromap = go.Figure(data=[data])\niplot(choromap)","c384092d":"data=dict(type='choropleth',\n         locations = byCountry['geoNetwork_country'],\n         locationmode = 'country names',\n         colorscale = 'Blues',\n         reversescale=True,\n         text = ['text 1','text 2','text 3'],\n         z=byCountry['totalRevenue'],\n         colorbar={'title':'Total revenue'})\n\nlayout = dict(title='Total revenue by Country')\n\nchoromap = go.Figure(data=[data])\niplot(choromap)","884c18e7":"topCountries = train['geoNetwork_country'].value_counts().head(80).reset_index()\ntopCountries.columns = ['country','count']\ntopCountriesTrain = train[train['geoNetwork_country'].isin(topCountries['country'])]","fe272100":"plot_colCount(topCountriesTrain,'geoNetwork_country',80,16)\nplot_totalRevenue(topCountriesTrain,'geoNetwork_country',80,16)\n","eb50bb3b":"plot_revenuePerUnitCol(topCountriesTrain,'geoNetwork_country',80,16)","936e58ae":"topCountries = train['geoNetwork_country'].value_counts().head(8).index","21bac72e":"def plotByCountry(plotCol,n_labels = 0, xtick=0,plotType = 'line',order=0):\n    groupByCountry = train.groupby(['geoNetwork_country',plotCol],as_index=False).count()[['geoNetwork_country',plotCol,'visitId']]\n    groupByCountry = groupByCountry[groupByCountry['geoNetwork_country'].isin(topCountries)]\n    if n_labels != 0:\n        topLabels = train[plotCol].value_counts().head(n_labels).index\n        groupByCountry = groupByCountry[groupByCountry[plotCol].isin(topLabels)]\n    groupByCountry.columns = ['geoNetwork_country', plotCol, 'visits']\n    plt.figure(figsize=[14,10])\n    plt.xticks(rotation=xtick)\n    if plotType == 'line':\n        sns.lineplot(data=groupByCountry,x=plotCol,y='visits',hue='geoNetwork_country')\n    if plotType == 'bar':\n        if order == 0:\n            sns.barplot(data=groupByCountry,x=plotCol,y='visits',hue='geoNetwork_country')\n        if order == 1:\n            sns.barplot(data=groupByCountry,x='geoNetwork_country',y='visits',hue=plotCol)","d2acb5fd":"plotByCountry(plotCol='date_month',n_labels=12)","594054eb":"plotByCountry('date_weekday')","600450f6":"plotByCountry(plotCol='device_deviceCategory',plotType='bar',order=1)","b3140dea":"plotByCountry('channelGrouping',plotType='bar')","edc38878":"plotByCountry('device_operatingSystem',n_labels=5,plotType='bar',order=1)","9b28ebcf":"plotByCountry('device_browser',plotType='bar',n_labels=5,order=1)","dbc7e5a1":"topMetrosTrain = train[~train['geoNetwork_metro'].isin(['not available in demo dataset','(not set)'])]","1260cf08":"plot_colCount(topMetrosTrain,'geoNetwork_metro',90,16)\nplot_totalRevenue(topMetrosTrain,'geoNetwork_metro',90,16)","0cb8e8f2":"plot_revenuePerUnitCol(topMetrosTrain,'geoNetwork_metro',90,16)","5dc244ad":"topRegions = train['geoNetwork_region'].value_counts().head(80).reset_index()\ntopRegions.columns = ['region','count']\ntopRegions = topRegions[(topRegions.region !='not available in demo dataset') &(topRegions.region !='(not set)')]\ntopRegionsTrain = train[train['geoNetwork_region'].isin(topRegions['region'])]","254e25d7":"plot_colCount(topRegionsTrain,'geoNetwork_region',80,16)\nplot_totalRevenue(topRegionsTrain,'geoNetwork_region',80,16)","be7e283e":"plot_revenuePerUnitCol(topRegionsTrain,'geoNetwork_region',80,16)","c011b9c7":"plot_colCount(train,'geoNetwork_subContinent',30,15,6)\nplot_totalRevenue(train,'geoNetwork_subContinent',30,15,6)\nplot_revenuePerUnitCol(train,'geoNetwork_subContinent',30,15,6)","0e73ef1d":"train['totals_bounces'].fillna(0,inplace=True)\ntrain['totals_bounces'] = train['totals_bounces'].astype('int64')","363b6a74":"train['totals_newVisits'].fillna(0,inplace=True)\ntrain['totals_newVisits'] = train['totals_newVisits'].astype('int64')","4df361ed":"train['totals_hits'] = train['totals_hits'].astype('int64')","e1fd432f":"#totals_pageviews\ntrain['totals_pageviews'] = train['totals_pageviews'].astype(float)\nprint(train['totals_pageviews'].min())\nprint(train['totals_pageviews'].max())\ntrain['totals_pageviews'].fillna(0,inplace=True)","6ea7e6ab":"sns.distplot(train['totals_pageviews'])","67aacfb4":"sns.lmplot(data=train,x='totals_pageviews',y='totals_transactionRevenue',\n           hue='geoNetwork_continent',col='geoNetwork_continent',col_wrap=2,fit_reg=False)","ef096bc0":"train['trafficSource_campaign'].value_counts()","1f7a22a8":"train['trafficSource_medium'].value_counts()","d31fd3e0":"train['trafficSource_medium'].replace('(not set)','none',inplace=True)\ntrain['trafficSource_medium'].replace('(none)','none',inplace=True)","3da0b6f4":"plot_colCount(train,'trafficSource_medium',30,10,6)\nplot_totalRevenue(train,'trafficSource_medium',30,10,6)\nplot_revenuePerUnitCol(train,'trafficSource_medium',30,10,6)","1daaa026":"train['trafficSource_source'].value_counts().head()","4cce39db":"#trafficSource_adwordsClickInfo.isVideoAd\ntrain['trafficSource_adwordsClickInfo.isVideoAd'].unique()","88d860b6":"train.drop(['trafficSource_adwordsClickInfo.isVideoAd'],axis=1,inplace=True)","920534fa":"#trafficSource_isTrueDirect\ntrain['trafficSource_isTrueDirect'].fillna(0,inplace=True)\ntrain['trafficSource_isTrueDirect'].replace(True,1,inplace=True)\ntrain['trafficSource_isTrueDirect']=train['trafficSource_isTrueDirect'].astype(bool)","09800685":"#trafficSource_adContent\ntrain['trafficSource_adContent'].fillna('Unknown',inplace=True)","8c0d6149":"#trafficSource_adwordsClickInfo.adNetworkType\ntrain['trafficSource_adwordsClickInfo.adNetworkType'].value_counts()\ntrain['trafficSource_adwordsClickInfo.adNetworkType'].fillna('Unknown',inplace=True)","1134952a":"#trafficSource_adwordsClickInfo.gclId\ntrain['trafficSource_adwordsClickInfo.gclId'].fillna('Unknown',inplace=True)","417273a7":"#trafficSource_adwordsClickInfo.page\ntrain['trafficSource_adwordsClickInfo.page'].fillna(0,inplace=True)\ntrain['trafficSource_adwordsClickInfo.page'] = train['trafficSource_adwordsClickInfo.page'].astype('int64')","9b16e7c2":"#trafficSource_referralPath\ntrain['trafficSource_referralPath'].fillna(0,inplace=True)","de9686c5":"#trafficSource_adwordsClickInfo.slot\ntrain['trafficSource_adwordsClickInfo.slot'].value_counts()","0bfe0d8a":"train.drop(['trafficSource_adwordsClickInfo.slot'],axis=1,inplace=True)","454e36d3":"#trafficSource_keyword\ntrain['trafficSource_keyword'].fillna(0,inplace=True)","c5bc1e7f":"train.drop(['sessionId',\n            'visitId','visitStartTime',\n            'geoNetwork_region'],axis=1,inplace=True)","31e6b24a":"from sklearn import preprocessing\nencoder = preprocessing.OneHotEncoder()","6ec27c60":"train.columns","47598116":"unknownLabel = 'zzzUnknown'\nleColumns = ['device_deviceCategory','geoNetwork_continent','trafficSource_adwordsClickInfo.adNetworkType',\n                'channelGrouping','date_month','date_weekday','geoNetwork_subContinent','trafficSource_medium',\n                'geoNetwork_city','geoNetwork_networkDomain','trafficSource_adContent','trafficSource_campaign',\n                'trafficSource_keyword','trafficSource_source','device_operatingSystem','device_browser', \n             'geoNetwork_metro','geoNetwork_country','trafficSource_referralPath' ,\n             'trafficSource_adwordsClickInfo.gclId']","44826ad8":"for col in leColumns:\n    print('Processing column ' + col)\n    le = preprocessing.LabelEncoder()\n    le.fit(train[col].astype(str))\n    if unknownLabel not in le.classes_:\n        le.classes_ = np.append(le.classes_,unknownLabel)\n        #adding unknownLabel to handle test set labels not present in train set\n    train[col] = le.transform(train[col].astype(str))\n    np.save(col +'.npy',le.classes_)","030230e0":"train.columns","8d96a3ab":"plt.figure(figsize=(26,18))\nsns.heatmap(train.corr(),annot=True)","652491fc":"pd.DataFrame(train.corr()['totals_transactionRevenue']).abs().sort_values('totals_transactionRevenue',ascending=False).head(30)","2f4cd98e":"import math\nfrom sklearn.model_selection import train_test_split","9a517219":"X = train.drop(['totals_transactionRevenue','fullVisitorId'],axis=1)\ny = train['totals_transactionRevenue'].apply(lambda x:0 if x==0 else math.log(x))    ","25445ca2":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.33, random_state=42)","e768ffa5":"print(len(X_train))\nprint(len(X_val))","d79acad1":"import lightgbm as lgb\nfrom math import sqrt\nfrom sklearn.metrics import mean_squared_error\n\nparams = {'objective' : 'regression','metric' :'rmse','bagging_fraction' :0.5, 'bagging_frequency':8 ,'feature_fraction':0.7, 'learning_rate':0.01, 'max_bin' :100, \n           'max_depth' :7, 'num_leaves':30}\n\nlgbmReg = lgb.LGBMRegressor(**params,n_estimators=1000) \nlgbmReg.fit(X_train,y_train,eval_set=[(X_val,y_val)],early_stopping_rounds=100,verbose=30,eval_metric='rmse')","2aab521e":"imp = pd.DataFrame({'Feature':X_val.columns,'Importance':lgbmReg.booster_.feature_importance()})\nimp.sort_values(by='Importance',ascending=False)","60475963":"plt.figure(figsize=(14,20))\nsns.barplot(data=imp.sort_values(by='Importance',ascending=False),x='Importance',y='Feature')","a1a5b915":"### geoNetwork_subContinent","e8cce895":"### device_operatingSystem","1711806c":"There are 3 Traffic Source related columns that do not have any null values.\ntrafficSource_campaign\ntrafficSource_medium\ntrafficSource_source","042f4635":"### LGBM","6dc2028c":"- United States generates the highest number of visits and revenue\n- Surprisingly, Venezuela and Kenya generate the highest revenue per visit","2f621519":"### totals_pageviews","9eae5eb3":"These columns have a single unique value. They can be dropped.","54309b09":"### geoNetwork_region","e6bda8b6":"- Desktops generate the highest visits and revenue \n- Desktops generate the most high revenue transactions\n- Desktops generate almost 8 times the revenue per visit compared to tablets and mobile\n- Tablets generate the least total revenue \n- Tablets generate a high number of low revenue transactions","77e3ea02":"- Windows is the popular operating system but Mac generates more revenue. \n- Chrome generates more revenue per visit but is 3rd behind Windows and Mac in popularity","dd419c39":"- Visitor ID 1957458976293878100 has 278 visits and generates the most revenue","5de690df":"## Categorical Variables","58c02bca":"### fullVisitorId","717b153d":"- There is an increase in visits during the holiday period\n- There is an increase in the revenue during the same period","ac9e56d6":"## Extract X and y","97d3ea01":"### geoNetwork_metro","85d647b0":"### geoNetwork_city","5522e5fb":"- Mac is the leader in United States. It has a significant presence in Thailand and Vietnam but lags in other countries\n- Windows is the leader in all countries except United States\n- Countries with more iOS traffic than Android: United States, Canada, United Kingdom","e86c28df":"### device_browser","f92d6e05":"### totals_bounces","5e2c8951":"### visitNumber","e177d288":"-  Tuesdays, Wednesdays and Thursdays generate the most visits and revenue","a70a3965":"### Target Column","3a83aed4":"## Correlation","216578c5":"- As discussed above, Vietnam and Thailand have high Mac adoption and this could be the reason why they have almost equal traffic from Chrome and Safari","5af114f1":"## Drop Columns","131d6deb":"### totals_newVisits","4ced4a34":"### device_deviceCategory","2cec4693":"### geoNetwork_continent","af9b2015":"- Organic search generates the most number of visits\n- Referral generates the 4th most number of visits but generates the most revenue\n- Display generates the most revenue per visit","a8a05cd6":"### Date","1407f0c2":"- There is a significant spike in traffic from Vietnam between October and December\n- Thailand also shows a similar pattern\n- Most countries show a spike in summer and holiday season\n- Germany and Canada show very little seasonal fluctuation\n- United Kingdom is the only country where the most visits occur outside the November to January period ","948448ea":"trafficSource_campaignCode is not present in test set","1aa96c64":"- There is a significant difference in traffic from United States between weekdays and weekends. Other countries do not show this pattern","7a130f0c":"### geoNetwork_country","71e37233":"### device_isMobile","7720cb47":"Though trafficsource_campaign does not contain any null values, there are many unknowns.","74b2b095":"- October and November have the highest traffic\n- April, Agust and December generate the most revenue","bec06b62":"### Traffic Source Columns","9e37553a":"Not enough information. All non-values are 'False'. Dropping column.","bb7f80c8":"## Missing Values and EDA","09d94a71":"### Channel Grouping","dadec3ab":"- Chrome generates a significant majority of the visits and revenue ","69cfb76f":"### totals_hits","c88daa21":"- India and Thailand have very low desktop to tablet ratio. Tablets don't seem to be popular in these countries\n- Vietnam has the least desktop to mobile ratio"}}