{"cell_type":{"9034ea66":"code","d0e53dfa":"code","ba5bd16c":"code","b7837d94":"code","d3957bba":"code","0c47947e":"code","14608bde":"code","c07002bc":"code","9d00c2fd":"code","18584fd4":"code","3232751d":"code","9272a5a7":"code","b661f44d":"code","bde7dbbe":"code","513aa24c":"code","1e7603c7":"code","1aa0daff":"code","ed16f9ea":"code","fe51a148":"code","94b12678":"code","00100730":"code","7679a539":"code","b82fe47f":"code","2d46c6d9":"code","d5c2273a":"markdown","1f662f57":"markdown","95946fa5":"markdown","5109adcf":"markdown","54189f52":"markdown","af340ce9":"markdown","e080ca26":"markdown","01396871":"markdown","ecaba9e9":"markdown","95e2a4ef":"markdown","8f076071":"markdown"},"source":{"9034ea66":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom ipywidgets import widget\nimport plotly.express as px\nimport plotly.io as pio\nimport plotly.graph_objects as go\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import mutual_info_classif\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import roc_auc_score,roc_curve\nimport shap","d0e53dfa":"X=pd.read_csv('..\/input\/widsdatathon2021\/TrainingWiDS2021.csv')\nX_test=pd.read_csv('..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv')\nX.head()","ba5bd16c":"X.describe()","b7837d94":"X.isnull().sum().sort_values(ascending=False)","d3957bba":"#removing missing values from categorical features\ncat_cols=[col for col in X.columns if\n         X[col].dtype==\"object\"]\nfor col in X.columns:\n    if X[col].dtype=='int' or X[col].dtype=='float':\n        X[col]=X[col].fillna(X[col].mean())\nfor col in X_test.columns:\n    if X_test[col].dtype=='int' or X_test[col].dtype=='float':\n        X_test[col]=X_test[col].fillna(X_test[col].mean())\nfor col in cat_cols:\n    print(X[col].value_counts())\n\nmax_val=['Caucasian','M','Emergency Department','Accident & Emergency','admit','Med-Surg ICU']\nfor i,col in enumerate(cat_cols):\n    if X[col].isnull().any()==True:\n        X[col]=X[col].fillna(max_val[i])\n\nfor i,col in enumerate(cat_cols):\n    if X_test[col].isnull().any()==True:\n        X_test[col]=X_test[col].fillna(max_val[i])","0c47947e":"plt.style.use('ggplot')\nplt.figure(figsize=(12,9))\nfig,ax=plt.subplots(1,2)\nfig.set_size_inches(9,6)\ncols=['age','weight']\nfor idx,col in enumerate(cols):\n    ax[idx].hist(data=X,x=col,bins=30,edgecolor='white')\n    ax[idx].set_xlabel(col)\n    ax[idx].set_ylabel('Count')\nplt.tight_layout()","14608bde":"features=['glucose_apache','map_apache','hematocrit_apache','sodium_apache','resprate_apache','temp_apache']\nfor idx,feat in enumerate(features):\n    fig,ax=plt.subplots(1,2)\n    fig.set_size_inches(8,5)\n    ax[0].hist(data=X,x=feat,bins=30,\n               edgecolor='white')\n    ax[0].set_xlabel(feat)\n    ax[0].set_ylabel('Count')\n    ax[1]=sns.boxplot(data=X,x=feat,color='0.30',\n                      notch=True,ax=ax[1],showmeans=True,showfliers=True)\n    plt.tight_layout()\nplt.tight_layout()","c07002bc":"pie=px.pie(data_frame=X,names='hospital_admit_source',\n          values='age',\n          hover_data=['heart_rate_apache','glucose_apache'],\n          hole=0.2,\n          title='Analysis of Age vs Hospital Admit Source',\n          color_discrete_sequence=px.colors.qualitative.Bold,\n          width=800,\n          height=600)\npie.update_traces(pull=[0,0,0.1])\npie","9d00c2fd":"feat=['ethnicity','icu_type','icu_admit_source']\ncmap=plt.get_cmap('Spectral')\ncolors = [cmap(i) for i in np.linspace(0, 1, 5)]\nfig=plt.figure(figsize=(15,15))\nfor i,col in enumerate(feat):\n    fig.add_subplot(2,2,i+1)\n    fig.set_size_inches(15,11)\n    X[col].value_counts(sort=False).plot.pie(shadow=True,colors=colors,startangle=30)\n    plt.tight_layout()","18584fd4":"feat=['d1_glucose_max','d1_glucose_min','d1_hemaglobin_max','d1_hemaglobin_min',\n      'd1_hematocrit_max','d1_hematocrit_min','d1_platelets_max','d1_platelets_min','d1_potassium_max',\n      'd1_potassium_min','d1_sodium_max','d1_sodium_min','d1_wbc_max','d1_wbc_min']\nX_=X.loc[:,feat]\ncorr=X_.corr(method='pearson')\nplt.figure(figsize=(10,8))\nplt.title('Analysis of Features Correlation')\nsns.heatmap(corr,annot=True,fmt='0.1f',cmap='viridis',robust=True)","3232751d":"feat=['aids','cirrhosis','hepatic_failure','immunosuppression',\n      'leukemia','lymphoma','solid_tumor_with_metastasis','diabetes_mellitus']\nfor i,col in enumerate(feat):\n    fig=px.histogram(data_frame=X,x=col,\n                     barmode='group',\n                     color='gender',\n                     color_discrete_sequence=px.colors.qualitative.D3,\n                     width=500,height=400)\n    pio.show(fig)","9272a5a7":"cols=['age','weight','bmi']\nfor i,feat in enumerate(cols):\n    mp=px.density_heatmap(data_frame=X,x=feat,y='diabetes_mellitus',facet_col='gender',\n                         title='Analysis of feature with its impact on occurence of Diabetes',\n                         width=700,\n                         height=400)\n    pio.show(mp)","b661f44d":"y=X.diabetes_mellitus\nX=X.drop(['hospital_id','diabetes_mellitus'],axis=1)","bde7dbbe":"def mi_scores(X,y):\n    for col in cat_cols:\n        X[col],_=X[col].factorize()\n    discrete_features=[pd.api.types.is_integer_dtype(t) for t in X.dtypes]\n    mi_scores=mutual_info_classif(X,y,discrete_features=discrete_features,random_state=0)\n    mi_scores=pd.Series(mi_scores,index=X.columns)\n    mi_scores=mi_scores.sort_values(ascending=False)\n    return mi_scores\nmi_scores=mi_scores(X,y)\nmi_scores[:10]","513aa24c":"mi_scores[-10:]","1e7603c7":"for col in cat_cols:\n    X_test[col],_=X_test[col].factorize()\nX=X.drop(['lymphoma','readmission_status',\n          'd1_mbp_max','h1_mbp_noninvasive_min'],axis=1)\nX_test=X_test.drop(['lymphoma','readmission_status',\n                    'd1_mbp_max','h1_mbp_noninvasive_min',\n                    'hospital_id'],axis=1)","1aa0daff":"X_train,X_val,y_train,y_val=train_test_split(X,y,test_size=0.3,stratify=y)","ed16f9ea":"X_train=(X_train-X_train.mean(axis=0))\/X_train.std(axis=0)\nX_val=(X_val-X_val.mean(axis=0))\/X_val.std(axis=0)","fe51a148":"cat=CatBoostClassifier(\n    iterations=1500,\n    max_depth=7,\n    random_strength=2.1,\n    od_type='Iter',\n    od_wait=100,\n    custom_metric=['AUC'],\n    verbose=False\n)\ncat.fit(X_train,y_train,\n        eval_set=(X_val,y_val),\n        use_best_model=True,\n        early_stopping_rounds=200,\n        plot=True)\nprint(cat.get_best_score())","94b12678":"c_probs=cat.predict_proba(X_val)\nn_probs=[0 for _ in range(len(y_val))]\nc1_probs=c_probs[:,1]\nns_auc=roc_auc_score(y_val,n_probs)\nc1_auc=roc_auc_score(y_val,c1_probs)\nprint('ROC AUC:%.3f' %(c1_auc))\nns_fpr,ns_tpr,_=roc_curve(y_val,n_probs)\nc1_fpr,c1_tpr,_=roc_curve(y_val,c1_probs)\nsns.set_style('darkgrid')\nplt.figure(figsize=(9,7))\nplt.plot(ns_fpr,ns_tpr,linestyle='--',label='No skill')\nplt.plot(c1_fpr,c1_tpr,'g-',linewidth=2.3,label='positive outcome')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True positive rate')\nplt.legend()\n","00100730":"shap.initjs()\nexplainer=shap.TreeExplainer(cat)\nshap_values=explainer.shap_values(X_train,y_train)\nshap.summary_plot(shap_values,X_train,plot_type='bar')","7679a539":"solution=pd.DataFrame(X_test.encounter_id)","b82fe47f":"X_test=(X_test-X_test.mean(axis=0))\/X_test.std(axis=0)\nsolution['diabetes_mellitus']=cat.predict_proba(X_test)[:,1]","2d46c6d9":"submission=pd.DataFrame({\n    'encounter_id':solution['encounter_id'],\n    'diabetes_mellitus':solution['diabetes_mellitus']\n})\nsubmission.to_csv(\"my_submission.csv\",index=False)","d5c2273a":"####Checking for null values","1f662f57":"#### Checking for correlation of features pertaining to different body vitals","95946fa5":"#### Plotting Age wise distribution of the Hospital admit source.From here we can infer that majority patients have been admitted in the Emergency Department","5109adcf":"#### Here I have tried to plot features like age factor which is likely to conribute to existence of diabetes.Looking at the heatmap we get to analyze the exact number of people diagnosed with the disease as well as not diagnosed.","54189f52":"**#### Let's check the features with least mutual info. These can be dicarded as they do not show any dependence with the target value**","af340ce9":"#### ** Check the mutual information of the features to infer the dependence of specific feature on the target**","e080ca26":"#### Analysis of the apache features and their distribution","01396871":"Here we replace the null values in numerical data with mean of the respective feauture.Also we replace null values in categorical data with the max value in the particular feature","ecaba9e9":"#### Here we analyze the age and weight feature distribution","95e2a4ef":"#### Let's plot categorical features and check for values which are dominant. Here we see that patients belonging to Caucasian ethnicity are more in number as compared to others. Similarly people belonging to Med surg icu type are more in number. Also people admitted to Accident and Emergency icu are dominant than other admits.","8f076071":"#### Analyzing plots for positive and negative counts for each of the features related to particular type of disease."}}