{"cell_type":{"e1dc6993":"code","0dfa19a0":"code","dd2ed3cf":"code","4255e37e":"code","55c823e9":"code","867a391f":"code","07eff863":"code","020972aa":"code","6d49ba80":"code","d05317b9":"code","5cff1f9e":"code","ff346038":"code","b7a68d25":"code","be0da76a":"code","88a256cb":"code","ff1b878b":"markdown","583d833a":"markdown","abf05920":"markdown","df986af0":"markdown","83ae88ad":"markdown","482202e8":"markdown","ecadb5a7":"markdown","03106720":"markdown","bba72609":"markdown","00b40cab":"markdown","d6fb181a":"markdown","8a70d737":"markdown"},"source":{"e1dc6993":"import pandas as pd\nimport sqlite3\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom bs4 import BeautifulSoup\nimport requests\nimport plotly.express as px\nimport json\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\nimport numpy as np","0dfa19a0":"con = sqlite3.connect('..\/input\/california-data\/switrs.sqlite')\ncounty_populations = pd.read_csv('..\/input\/county-populations\/csvData.csv')\ncountys = json.load(open('..\/input\/geojson\/us-county-boundaries.geojson', 'r'))","dd2ed3cf":"all_data = pd.read_sql_query('''\n                  SELECT collision_severity, party_sobriety\n                  FROM collisions\n                  INNER JOIN parties\\\n                  ON collisions.case_id = parties.case_id\\\n                  WHERE '2020-01-01' > collision_date AND\\\n                  collision_date > '2019-01-01'\\\n                  AND party_type = 'driver'\\\n                  AND at_fault = 1\n               ''', con)","4255e37e":"drunk_driver_fatality = len(all_data[(all_data[\"collision_severity\"] == 'fatal') & (all_data[\"party_sobriety\"] == 'had been drinking, under influence')])\ndriver_fatality = len(all_data[(all_data[\"collision_severity\"] == 'fatal')])\n\ndrunk_driver_collision = len(all_data[(all_data[\"collision_severity\"] != 'fatal') & (all_data[\"party_sobriety\"] == 'had been drinking, under influence')])\ndriver_collision = len(all_data[(all_data[\"collision_severity\"] != 'fatal')])\n","55c823e9":"fatality_data = [driver_fatality - drunk_driver_fatality, drunk_driver_fatality]\ncollision_data = [driver_collision - drunk_driver_collision, drunk_driver_collision]\n\nfatality_labels = ['Fatalities caused by sober drivers', 'Fatilties caused by drunk drivers']\ncollision_labels = ['Collisions caused by sober drivers', 'Collisions caused by drunk drivers']\nsizes = fatality_data\n\nexplode = (0, 0.1)  \nfig1, ax1 = plt.subplots(1,2)\nax1[1].pie(fatality_data, explode=explode, labels=fatality_labels, autopct='%1.1f%%',\n        shadow=True, startangle=90, textprops={'fontsize': 10})\nax1[1].set_title('Driver Caused Fatalites in California (2019 - 2020)', y = 1.05, x = 0.55, fontweight=\"bold\")\nax1[0].pie(collision_data, explode=explode, labels=collision_labels, autopct='%1.1f%%',\n        shadow=True, startangle=90, textprops={'fontsize': 10})\nax1[0].set_title('Driver Caused Collisions in California (2019 - 2020)', y = 1.05, x = 0.55, fontweight=\"bold\")\nfig1.set_size_inches(11, 8)\nfig1.tight_layout()\nfig1.show()","867a391f":"new_data = pd.read_sql_query('''\n                          SELECT\n                          county_location, party_sobriety \n                          FROM collisions\n                          INNER JOIN parties\n                          ON parties.case_id = collisions.case_id\n                          WHERE '2020-01-01' > collision_date\n                          AND collision_date > '2019-01-01'\n                          AND parties.party_type = 'driver'\n                          AND parties.at_fault = 1\n                         ''', con)","07eff863":"def county_groups(dataframe):\n    sober_filter = dataframe['party_sobriety'] != 'had been drinking, under influence'\n    sober_data = dataframe.loc[sober_filter]['county_location'].value_counts()\\\n    .rename_axis('county_name').reset_index(name='number_of_sober_collisions')\n    drunk_filter = dataframe['party_sobriety'] == 'had been drinking, under influence'\n    drunk_data = dataframe.loc[drunk_filter]['county_location'].value_counts()\\\n    .rename_axis('county_name').reset_index(name='number_of_drunk_collisions')\n    return pd.merge(sober_data, drunk_data, on = 'county_name')\n\n","020972aa":"collisions = county_groups(new_data)","6d49ba80":"dic = {}\nfor feature in countys['features']:\n    feature['id'] = feature['properties']['countyfp']\n    dic[(feature['properties']['name']).lower()] = feature['id']\n\ncollisions['id'] = collisions['county_name'].apply(lambda x: dic[x.lower()])\n\n\n\ncollisions['Proportion_of_drunk_accidents (%)'] = round(collisions['number_of_drunk_collisions'] \/ collisions['number_of_sober_collisions'] * 100, 2)","d05317b9":"fig = px.choropleth_mapbox(collisions, locations = 'id',\n                    geojson = countys, color = 'Proportion_of_drunk_accidents (%)',\n                    hover_name = 'county_name', \n                    hover_data = {'Proportion_of_drunk_accidents (%)':True, 'id':False},\n                    mapbox_style = 'carto-positron', center = {'lat': 37.7, 'lon': -122},\n                    zoom = 4, opacity = 0.7)","5cff1f9e":"fig.show()","ff346038":"drunk_age_group_query = f'''\n                           SELECT Count(parties.party_age) AS 'Age_Groups', \n                           CASE WHEN parties.party_age >= 15 \n                           AND parties.party_age < 18 THEN '15 - 17'\n                           WHEN parties.party_age >= 18 \n                           AND parties.party_age < 24 THEN '18 - 24'\n                           WHEN parties.party_age >= 24 \n                           AND parties.party_age < 35 THEN '25 - 35'\n                           WHEN parties.party_age >= 35 \n                           AND parties.party_age < 50 THEN '36 - 50'\n                           ELSE 'Over 50'\n                           END AS Ages_groups\n                           FROM parties\n                           INNER JOIN collisions \n                           ON collisions.case_id = parties.case_id\n                           WHERE parties.party_type = 'driver'\n                           AND parties.party_sobriety = \n                           'had been drinking, under influence'\n                           AND '2020-01-01' > collisions.collision_date \n                           AND collisions.collision_date > '2019-01-01'\n                           AND parties.at_fault = 1\n                           GROUP BY Ages_groups\n                       '''\n\nall_age_group_query = f'''\n                           SELECT Count(parties.party_age) AS 'Age_Groups', \n                           CASE WHEN parties.party_age >= 15 \n                           AND parties.party_age < 18 THEN '15 - 17'\n                           WHEN parties.party_age >= 18 \n                           AND parties.party_age < 24 THEN '18 - 24'\n                           WHEN parties.party_age >= 24 \n                           AND parties.party_age < 35 THEN '25 - 35'\n                           WHEN parties.party_age >= 35 \n                           AND parties.party_age < 50 THEN '36 - 50'\n                           ELSE 'Over 50'\n                           END AS Ages_groups\n                           FROM parties\n                           INNER JOIN collisions \n                           ON collisions.case_id = parties.case_id\n                           WHERE parties.party_type = 'driver'\n                           AND '2020-01-01' > collisions.collision_date AND \n                           collisions.collision_date > '2019-01-01'\n                           AND parties.at_fault = 1\n                           GROUP BY Ages_groups\n                       '''","b7a68d25":"drunk_age_groups = pd.read_sql_query(drunk_age_group_query, con)\nall_age_groups = pd.read_sql_query(all_age_group_query, con)","be0da76a":"full_dataset = pd.merge(drunk_age_groups, all_age_groups, on = 'Ages_groups')\nfull_dataset['Percentage_of_drunk_collisions'] = (full_dataset['Age_Groups_x'] \/ full_dataset['Age_Groups_y']) * 100\nme = full_dataset[['Ages_groups', 'Percentage_of_drunk_collisions']].set_index('Ages_groups')","88a256cb":"fig, ax = plt.subplots()\n\nbars = ax.bar(\n    x=np.arange(me.size),\n    height=me['Percentage_of_drunk_collisions'],\n    tick_label=full_dataset['Ages_groups']\n)\n\nax.tick_params(axis='both', which='major', labelsize=20)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_color('#DDDDDD')\nax.tick_params(bottom=False, left=False)\nax.set_axisbelow(True)\nax.yaxis.grid(True, color='#EEEEEE')\nax.xaxis.grid(False)\n\nbar_color = bars[0].get_facecolor()\nfor bar in bars:\n  ax.text(\n      bar.get_x() + bar.get_width() \/ 2,\n      bar.get_height() + 0.1,\n      round(bar.get_height(), 1),\n      horizontalalignment='center',\n      color=bar_color,\n      weight='bold',\n      size = 'xx-large'\n\n  )\n\nax.set_xlabel('Age Groups', labelpad=15, color='#333333', size = 'xx-large')\nax.set_ylabel('collisions caused by drunk driving (%)', labelpad=15, color='#333333', size = 'xx-large')\nax.set_title('Drunk Driving incidents by age group', pad=15, color='#333333', size = 'xx-large',\n             weight='bold')\nfig.set_size_inches(16, 8)\n\n\n\nfig.show()","ff1b878b":"Now that we've seen the Counties where drunk driving happens the most, we will focus on what age groups to target within these counties. ","583d833a":"In this notebook I will show the effect that drunk driving has on collisions in California as well as showing the areas in which drunk driving is most prevelent.","abf05920":"As we can see from the map the proportio of drunk driving against all collisions varies widely throughout the state. What can be seen very clearly is that more rural counties such as Lake County have a much higher proportion of drunk driving cases than densly populated counties such as Los Angeles. This may be due to the lack of public transport in rural areas meaning people are more likely to drive even if they have had been drinking.","df986af0":"We see here we have two pie charts. One showing the collisions caused by drunk driving and the other showing the fatalities caused by drunk driving. \nFrom the charts we can see that while the total number of collisions caused by drunk driving is relitively low, collisions resulting in fatalities is greatly impacted by drunk driving.\n","83ae88ad":"With so many different collision causing factors within this dataset, you may be wondering why I am focusing my attention on drunk driving. \nIn this section, I will show the severity of the impact inebriation has on collisions.","482202e8":"# Countys in California in which drunk driving is most prevelent","ecadb5a7":"## Why target drunk driving?","03106720":"## Age groups in which drunk driving is most prevelent","bba72609":"The best way to try and reduce drunk driving incidents is by targeting the people who do it. We will do this firstly by analysing in which counties in California collisions caused by intoxication happens most.","00b40cab":"From the bar graph above we can see that drunk driving happens most often in the 25 - 35 age group. Because of this, we can conclude that the most appropriate people to target are young professionals.","d6fb181a":"# Alcohol and Traffic Accidents","8a70d737":"## Introduction"}}