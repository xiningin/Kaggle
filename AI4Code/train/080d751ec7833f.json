{"cell_type":{"d3e72c71":"code","c614aeca":"code","d3e8e5fd":"code","4d47eb29":"code","45ae296b":"code","17a5930c":"code","97fdead6":"code","0380769f":"code","f58fc93e":"code","ee1d9b3f":"code","83b5cc4d":"code","90a4b387":"code","04151453":"code","d7ab39cc":"code","71ef13e4":"code","0e498678":"code","a3d2f96d":"code","6b3b6c54":"code","8cd4b025":"code","f39bf346":"code","1f6fd79b":"code","80d09cfb":"code","b3e42f87":"code","ba9098a7":"code","418593f2":"code","546bccaa":"code","16c993f1":"code","de16f7e3":"code","f06f2d24":"code","8c612eb5":"code","b126f89d":"code","e3134c1d":"code","2a0ecff6":"code","457d3cf8":"code","8494bdfb":"markdown","580e233d":"markdown","61c74507":"markdown","38d3179c":"markdown","a0490c79":"markdown","5c3bc97c":"markdown","aa0a1da2":"markdown","69245f9a":"markdown","9f857032":"markdown","93b990b2":"markdown","4b610136":"markdown"},"source":{"d3e72c71":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport missingno as msno\nsns.set()\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c614aeca":"data = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()\n# Spending score -> Score given to customers given by company on the basis of money spent and behavior","d3e8e5fd":"data.info()","4d47eb29":"data.describe(include=['int64','object'])","45ae296b":"sns.countplot(x='Gender', data=data);","17a5930c":"data['Gender_int'] = (data['Gender'] == 'Female').astype('int')","97fdead6":"print(data['Annual Income (k$)'].mean())\nsns.displot(data, x=\"Annual Income (k$)\")","0380769f":"sns.displot(data, x=\"Age\")","f58fc93e":"sns.displot(data, x=\"Spending Score (1-100)\", kde=True)","ee1d9b3f":"sns.heatmap(data.drop(['CustomerID'], axis=1).corr(), annot=True, cmap='coolwarm')","83b5cc4d":"data['Young'] = (data['Age'] <= data['Age'].mean()).astype('int')","90a4b387":"data.groupby(['Young'])[['Spending Score (1-100)']].describe()","04151453":"data['High Spending Score'] = (data['Spending Score (1-100)'] >= data['Spending Score (1-100)'].mean()).astype('int')\ndata['Rich'] = (data['Annual Income (k$)'] >= data['Annual Income (k$)'].mean()).astype('int')","d7ab39cc":"sns.countplot(x='High Spending Score', hue='Young', data=data);","71ef13e4":"sns.countplot(x='High Spending Score', hue='Rich', data=data);","0e498678":"sns.countplot(x='High Spending Score', hue='Gender_int', data=data);","a3d2f96d":"sns.displot(data, x='Spending Score (1-100)', y='Age')","6b3b6c54":"import matplotlib.pyplot as plt\nplt.scatter(data['Age'],data['Spending Score (1-100)'])\nplt.show()","8cd4b025":"xdata = data[['Annual Income (k$)','Spending Score (1-100)','Age']].to_numpy()\nxdata = (xdata - xdata.mean(axis=0)) \/ (xdata.std(axis=0))","f39bf346":"def distance (x, cluster) :\n    return np.sqrt(np.sum((cluster-x)**2,axis=1))","1f6fd79b":"def find_cluster(x, cluster) :\n    c = np.ones(x.shape[0])\n    for i in range (x.shape[0]):\n        c[i] = np.argmin(distance(x[i],cluster))\n    return c","80d09cfb":"def error(x, c, cluster) :\n    e = 0\n    for i in range (x.shape[0]):\n#         print(int(c[i]))\n        e += distance(x[i], cluster[int(c[i]):int(c[i])+1])\n    return e","b3e42f87":"def redefine_clusters(x, c, k) :\n    n,m = x.shape\n    clusters = np.zeros(shape=(k,m))\n    \n    for i in range(k) :\n        s = np.zeros(m)\n        count  = 0\n        for j in range(n) :\n            if c[j] == i :\n                s = s + x[j]\n                count += 1\n        if count > 0 :\n            s = s \/ count\n        clusters[i] = s\n    return clusters","ba9098a7":"def clustering (xdata, k = 2, epochs = 50, det=False) :\n    n, m = xdata.shape\n    clusters = np.random.rand(k,m) * 2 - 1 # k clusters with m coordinates\n    e = 0\n    c = np.zeros(n)\n    if det: \n        print(clusters)\n    for epoch in range(epochs) :\n        c = find_cluster(xdata, clusters)\n        e = error(xdata, c, clusters)\n        if det and epoch % 10 == 0 :\n            print(\"Epoch {}\/{} ====> Error: {}\".format(epoch, epochs, e))\n            print(c)\n        clusters = redefine_clusters(xdata,c,k)\n    if det:\n        print(clusters)\n    return c,e","418593f2":"errors = []\nkval = []\nfor k in range(1,20) :\n    errorlst = []\n    for i in range(5) :\n        c,e = clustering(xdata,k,15)\n        errorlst.append(e)\n    errors.append(sum(errorlst)\/len(errorlst))\n    kval.append(k)","546bccaa":"import matplotlib.pyplot as plt","16c993f1":"plt.plot(kval,errors)\nplt.show()","de16f7e3":"cl,e = clustering(xdata,5,15)\nlen(cl)","f06f2d24":"print(e)","8c612eb5":"plt.scatter(data['Spending Score (1-100)'],data['Annual Income (k$)'],c=cl)\nplt.xlabel('Spending Score')\nplt.ylabel('Annual Income')\nplt.show()","b126f89d":"plt.scatter(data['Spending Score (1-100)'],data['Age'],c=cl)\nplt.xlabel('Spending Score')\nplt.ylabel('Age')\nplt.show()","e3134c1d":"clustered = data.copy()\nclustered['Cluster'] = cl.astype('int')","2a0ecff6":"clustered.groupby(['Cluster'])[['Spending Score (1-100)','Gender', 'Annual Income (k$)', 'Age']].agg([np.mean, np.std, np.min, np.max])","457d3cf8":"from mpl_toolkits import mplot3d\nimport matplotlib.pyplot as plt\nplt.ion()\n%matplotlib widget\n\nfig = plt.figure()\nax = plt.axes(projection='3d')\n\nax = plt.axes(projection='3d')\n\nzdata = data['Spending Score (1-100)']\nxdata = data['Age']\nydata = data['Annual Income (k$)']\nax.scatter3D(xdata, ydata, zdata, c=clustered['Cluster'],cmap='Set2')\nplt.show()","8494bdfb":"Dataset has more people in the lower half range of the incomes","580e233d":"Dataset has more people <= 40 years in age than people > 40 years in age","61c74507":"Dataset has more females as compared to males","38d3179c":"Distribution is close to normal distribution","a0490c79":"Not significant correlation between Income and Spending Score","5c3bc97c":"Moderate negative correlation between age and spending score  \n=> Lower age, higher spending score","aa0a1da2":"No correlation between gender and spending score","69245f9a":"The plot further solidifies the observation that the spending score is higher with young people","9f857032":"# Clustering","93b990b2":"## Result\/Observations\n* The customers can be divided into 5 clusters\n* Customers from cluster 0 and 4 have high average spending score\n    * Better targets for conversations\n    * Rich people with average age and young people in low income group ","4b610136":"# EDA"}}