{"cell_type":{"a377f735":"code","7bef5825":"code","f4480c0a":"code","af912d0b":"code","29718d99":"code","eb03920e":"code","9bc83e2c":"code","dc96b745":"code","28e9ee60":"code","5328d8b3":"markdown","a4929861":"markdown","9e1d1fa2":"markdown","c1d1f833":"markdown","b623f1e2":"markdown","f364b20c":"markdown","e76084ce":"markdown","7fa4efe0":"markdown","7a0fa346":"markdown","f2cab088":"markdown","b72cebce":"markdown"},"source":{"a377f735":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nfrom collections import Counter\nimport operator\n\nwarnings.filterwarnings('ignore')\nsns.set_palette('Set2')\nsns.set_style('darkgrid')","7bef5825":"df_world = pd.read_csv(\"\/kaggle\/input\/covid19-deaths-dataset\/all_weekly_excess_deaths.csv\")\nprint (df_world.shape)\ndf_world.head()","f4480c0a":"df_world.drop(columns=['days'], inplace=True)\ndf_temp = df_world['end_date'].str.split('-', expand=True)[[1,0]]\ndf_world['Date'] = df_temp[1] + '\/' + df_temp[0]","af912d0b":"corr = df_world.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nplt.figure(figsize=(12,12))\nsns.heatmap(corr, mask=mask, center=0, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","29718d99":"fig = px.choropleth(df_world.rename(columns={'covid_deaths':'Covid Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Covid Deaths', \n                    animation_frame='Date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","eb03920e":"fig = px.choropleth(df_world.rename(columns={'excess_deaths_per_100k':'Excess Deaths per 100k'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Excess Deaths per 100k', \n                    animation_frame='Date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","9bc83e2c":"plt.figure(figsize=(16,8))\nsns.barplot(data=df_world, x='total_deaths', y='Date', color='orange', label='Total Deaths')\nsns.barplot(data=df_world, x='covid_deaths', y='Date', color='grey', label='Covid Deaths')\nplt.xlabel(xlabel = 'Number of Deaths',fontsize=16, fontweight='bold')\nplt.ylabel(ylabel = 'Date',fontsize=16, fontweight='bold')\nplt.legend()\nplt.show()","dc96b745":"plt.figure(figsize=(16,8))\nsns.countplot(data=df_world, y='country', order=dict(Counter(df_world['country']).most_common(15)))\nplt.xlabel(xlabel = 'Count',fontsize=16, fontweight='bold')\nplt.ylabel(ylabel = 'Country',fontsize=16, fontweight='bold')\nplt.show()","28e9ee60":"df_USA = df_world[df_world['country']=='United States']\nfig = px.choropleth(df_USA[df_USA['region_code']!='USA'].rename(columns={'covid_deaths':'Covid Deaths'}),\n                    locations='region_code',\n                    locationmode = 'USA-states',\n                    color='Covid Deaths', \n                    animation_frame='Date',\n                    scope='usa'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","5328d8b3":"# **Feel free to <span style=\"color:red\">UPVOTE <\/span> and provide <span style=\"color:blue\">FEEDBACK <\/span> \ud83c\udf89**","a4929861":"## **HeatMap**","9e1d1fa2":"# **EDA \ud83d\udcca**","c1d1f833":"## **Covid Deaths in USA**","b623f1e2":"## **Number of Total Deaths and Covid Deaths in World**","f364b20c":"# **Load the Data \ud83d\udcdd**","e76084ce":"# **Import Libraries \ud83d\udcda**","7fa4efe0":"# **Pre-processing \u2702\ufe0f**","7a0fa346":"## **Excess Deaths per 100k in World**","f2cab088":"## **Covid Deaths in World**","b72cebce":"## **Number of Data Points\/Records for Top 15 Countries**"}}