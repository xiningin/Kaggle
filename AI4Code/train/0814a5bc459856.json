{"cell_type":{"f743cce7":"code","81075615":"code","2dcd2f77":"code","268a9ae5":"code","f28ecbcc":"code","8ed4e16e":"code","d69bcd69":"code","3e532d9a":"code","b142b8eb":"code","713e7cc0":"code","b88fe7a4":"code","9d3156fb":"code","22618cdb":"code","f80e274c":"code","711d379f":"code","692effdb":"code","42d3971e":"code","4d72256a":"code","74fa901e":"code","36fbc2f4":"markdown","2fe3f262":"markdown","86c49b3f":"markdown","7cca8778":"markdown","824512eb":"markdown","ce91056c":"markdown","9790916a":"markdown","1ed2be8e":"markdown","6c00776e":"markdown","1a2acaec":"markdown","51e4c881":"markdown","b51b69f1":"markdown","c2fdc30e":"markdown","a4483c46":"markdown","f874d1d5":"markdown","99cc0975":"markdown","57a21361":"markdown","37a1c14b":"markdown","e3c7f24a":"markdown","69853ccb":"markdown","69ad3fb9":"markdown","35af47a6":"markdown"},"source":{"f743cce7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom subprocess import check_output\n%matplotlib inline","81075615":"iris_df = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","2dcd2f77":"iris_df.describe()","268a9ae5":"iris_df.info()","f28ecbcc":"iris_df.shape","8ed4e16e":"iris_df.head()","d69bcd69":"# The different categories of Species\niris_df.Species.unique()","3e532d9a":"iris = iris_df.groupby('Species',as_index= False)[\"Id\"].count()\niris","b142b8eb":"ax = iris_df[iris_df.Species=='Iris-setosa'].plot.scatter(x='SepalLengthCm',y='SepalWidthCm',color='orange', label='Setosa')\niris_df[iris_df.Species=='Iris-versicolor'].plot.scatter(x='SepalLengthCm',y='SepalWidthCm',color='white', label='versicolor',ax=ax)\niris_df[iris_df.Species=='Iris-virginica'].plot.scatter(x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=ax)\nax.set_xlabel(\"Sepal Length\")\nax.set_ylabel(\"Sepal Width\")\nax.set_title(\"Relationship between Sepal Length and Width\")","713e7cc0":"sns.FacetGrid(iris_df, hue=\"Species\", size=6) \\\n   .map(plt.scatter, \"PetalLengthCm\", \"PetalWidthCm\") \\\n   .add_legend()\nplt.title(\"Relationship between Petal Length and Width\")","b88fe7a4":"cols = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm','PetalWidthCm']\ncorr_matrix = iris_df[cols].corr()\nheatmap = sns.heatmap(corr_matrix,cbar=True,annot=True,square=True,fmt='.2f',annot_kws={'size': 15},yticklabels=cols,xticklabels=cols,cmap='Dark2')","9d3156fb":"petal = np.array(iris_df[[\"PetalLengthCm\",\"PetalWidthCm\"]])\nsepal = np.array(iris_df[[\"SepalLengthCm\",\"SepalWidthCm\"]])\n\nkey = {'Iris-setosa':0,'Iris-versicolor':1,'Iris-virginica':2}\nY = iris_df['Species'].map(key)","22618cdb":"from sklearn.model_selection import train_test_split\n\nX_train_S, X_test_S, y_train_S, y_test_S = train_test_split(sepal,Y,test_size=0.2,random_state=42)\n\nX_train_P, X_test_P, y_train_P, y_test_P = train_test_split(petal,Y,test_size=0.2,random_state=42)","f80e274c":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nscaler.fit(X_train_S)\nX_train_std_S = scaler.transform(X_train_S)\nX_test_std_S = scaler.transform(X_test_S)\n\nscaler.fit(X_train_P)\nX_train_std_P = scaler.transform(X_train_P)\nX_test_std_P = scaler.transform(X_test_P)\n\n\nprint('Standardized features for Sepal and Petal \\n')\nprint(\"Sepal\\n\\n\" +str(X_train_std_S[:2]))\nprint(\"\\nPetal\\n\\n\" +str(X_train_std_P[:2]))","711d379f":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(criterion='gini',max_depth=4,presort=True)\nmodel.fit(X_train_std_S,y_train_S)\nprint('Training Accuracy Sepal = {}'.format(model.score(X_train_std_S, y_train_S)))\nprint('Testing  Accuracy Sepal = {}'.format(model.score(X_test_std_S, y_test_S)))\n\nmodel.fit(X_train_std_P,y_train_P)\nprint('\\nTraining Accuracy Petal = {}'.format(model.score(X_train_std_P, y_train_P)))\nprint('Testing  Accuracy Petal = {}'.format(model.score(X_test_std_P, y_test_P)))","692effdb":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train_std_S,y_train_S)\nprint('Training Accuracy Sepal = {}'.format(model.score(X_train_std_S, y_train_S)))\nprint('Testing  Accuracy Sepal = {}'.format(model.score(X_test_std_S, y_test_S)))\n\nmodel.fit(X_train_std_P,y_train_P)\nprint('\\nTraining Accuracy Petal = {}'.format(model.score(X_train_std_P, y_train_P)))\nprint('Testing  Accuracy Petal = {}'.format(model.score(X_test_std_P, y_test_P)))","42d3971e":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train_std_S,y_train_S)\nprint('Training Accuracy Sepal = {}'.format(model.score(X_train_std_S, y_train_S)))\nprint('Testing  Accuracy Sepal = {}'.format(model.score(X_test_std_S, y_test_S)))\n\nmodel.fit(X_train_std_P,y_train_P)\nprint('\\nTraining Accuracy Petal = {}'.format(model.score(X_train_std_P, y_train_P)))\nprint('Testing  Accuracy Petal = {}'.format(model.score(X_test_std_P, y_test_P)))","4d72256a":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(max_depth=2)\nmodel.fit(X_train_std_S,y_train_S)\nprint('Training Accuracy Sepal = {}'.format(model.score(X_train_std_S, y_train_S)))\nprint('Testing  Accuracy Sepal = {}'.format(model.score(X_test_std_S, y_test_S)))\n\nmodel.fit(X_train_std_P,y_train_P)\nprint('\\nTraining Accuracy Petal = {}'.format(model.score(X_train_std_P, y_train_P)))\nprint('Testing  Accuracy Petal = {}'.format(model.score(X_test_std_P, y_test_P)))","74fa901e":"from sklearn.svm import LinearSVC\n\nmodel = LinearSVC(C=10)\nmodel.fit(X_train_std_S,y_train_S)\nprint('Training Accuracy Sepal = {}'.format(model.score(X_train_std_S, y_train_S)))\nprint('Testing  Accuracy Sepal = {}'.format(model.score(X_test_std_S, y_test_S)))\n\nmodel.fit(X_train_std_P,y_train_P)\nprint('\\nTraining Accuracy Petal = {}'.format(model.score(X_train_std_P, y_train_P)))\nprint('Testing  Accuracy Petal = {}'.format(model.score(X_test_std_P, y_test_P)))","36fbc2f4":"<b>Creating the Training and testing datasets<\/b>","2fe3f262":"<b>Some visualizations for understanding the spread of these features<\/b>","86c49b3f":"Shape Function to list the records and the features","7cca8778":"# This report aims at applying descriptive statistics and Machine learning techniques to find trends in IRIS data","824512eb":"<b>Standardizing and Scaling the features<\/b>","ce91056c":"Number of Records per species","9790916a":"<b>Logistic Reggression<\/b>","1ed2be8e":"<b>Coorelation between the features<\/b>","6c00776e":"<b>Ensemble Learning: Random Forests ( n Decision trees)<\/b>","1a2acaec":"A look at the data using the head function","51e4c881":"Similarly for Petal using the seaborn function","b51b69f1":"From the above matrix it is seen that Petal Length and Width show a strong coorelation \nwhereas the Sepal Length and Width show weak correlations, it indicates that the Species can be identified \nbetter using Petal compared to Sepal,we will verify the same using Machine Learning","c2fdc30e":"<b>Descriptive Statistics<\/b>","a4483c46":"Relationship between the Sepal Length and Width using scatter plot","f874d1d5":"Information about the dataset","99cc0975":"<b>Support Vector Machines<\/b>","57a21361":"<b>Decision Tree Classifier<\/b>","37a1c14b":"<b>Load the Libraries<\/b>","e3c7f24a":"<b>As stated earlier using the correlation scores,  the Petal Length and Width are the best features to identify the species of IRIS<\/b>","69853ccb":"<b>Machine Learning with IRIS data<\/b>","69ad3fb9":"<b>k- Nearest Neighbours<\/b>","35af47a6":"<b>Load the Dataset <\/b>"}}