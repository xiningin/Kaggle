{"cell_type":{"d5df9940":"code","609c28e3":"code","a02b424d":"code","2684707d":"code","740880ea":"code","1a36f010":"code","28359008":"code","a627da1e":"code","b975d6b5":"code","3caa9aa7":"code","af94e208":"code","85aec0f9":"code","a2bbeeda":"code","334aeee5":"code","958d5ea0":"code","b54db54c":"code","180d60a6":"code","ad79e3cc":"code","83f3d1ce":"code","8aa0e776":"code","23cf0959":"code","9671138c":"code","f03d7991":"code","1ac75006":"code","214e5655":"code","d097f990":"code","780398eb":"code","b21ea29e":"code","fc372e50":"code","a55e6af1":"code","50eac29b":"code","0eb75cff":"code","9c6c4f99":"code","ffafeb55":"code","774fbfc0":"code","5b6dce3b":"code","48238b36":"code","6875e330":"code","07eeda05":"code","77f62927":"code","14e214dd":"code","f2bc3b4b":"code","f9a3caf5":"code","db8b30f3":"code","025c9beb":"code","913825ae":"code","fa1062ce":"code","5d4b7c80":"code","45854137":"code","0b673163":"code","4462ec39":"code","8cffa5a3":"code","7e800fdc":"code","b9723980":"code","33725a5f":"code","625e2d44":"code","a565a58a":"code","3830c621":"code","2eeaaf1b":"code","86e7f798":"code","6326d56c":"code","999fa9a8":"code","6eacc323":"code","4125151e":"code","0f55c069":"code","37d55673":"code","cee5fd76":"code","a365ecab":"code","1f3b2f5d":"code","382b0aeb":"code","1dbe2ccb":"code","903181fc":"code","3b53c190":"code","922944e4":"code","997fdd24":"code","1340d541":"code","08df381a":"code","3fe59db6":"markdown","a5af6230":"markdown","0ca4029a":"markdown","a7063a47":"markdown","e07000de":"markdown","67bf4ca0":"markdown","26c74c11":"markdown","1ab42688":"markdown","a2033430":"markdown","98ae9b45":"markdown","27a0a0d3":"markdown","756cb914":"markdown","ce8ab7dd":"markdown","f02308bd":"markdown","33b30f4b":"markdown","6bf74430":"markdown","078a6673":"markdown","33cc02ba":"markdown","5e8876bd":"markdown","286bdbb8":"markdown","5ca742e7":"markdown","b86c09e3":"markdown","c7fb2822":"markdown","5a704791":"markdown","126005da":"markdown","9dd905e0":"markdown","90684f4d":"markdown","9b5c3dc0":"markdown","7b9d56a6":"markdown","97a8e930":"markdown","16c90985":"markdown","93b97db0":"markdown","3e467624":"markdown","4565f0c3":"markdown","feb64576":"markdown","798685b7":"markdown","d68d3e66":"markdown","112a7d4c":"markdown","916c2a22":"markdown","01e8642b":"markdown","5821f48c":"markdown","2b82875a":"markdown","78f24f19":"markdown","b5c643c7":"markdown","7375e8fc":"markdown","66804388":"markdown","3949c0c9":"markdown","7ef9bd11":"markdown","b04a6823":"markdown","753d8634":"markdown","ac22c8a2":"markdown","3824abc7":"markdown","8a1c1432":"markdown","7f0ae483":"markdown","eb99c5a2":"markdown","bf449857":"markdown","e151fa7d":"markdown","bb25c7dc":"markdown","09f6dc25":"markdown"},"source":{"d5df9940":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom IPython.display import display\npd.options.display.max_columns = None\npd.options.display.max_rows = None\nimport seaborn as sns\nimport folium","609c28e3":"df = pd.read_csv('..\/input\/sudeste.csv')","a02b424d":"#df.to_hdf('weather.hdf','mydata',mode='w')","2684707d":"#df = pd.read_hdf('weather.hdf','mydata')","740880ea":"df.info()","1a36f010":"df.describe()","28359008":"df.shape","a627da1e":"df = df.set_index('mdct')\ndf.index = pd.to_datetime(df.index)","b975d6b5":"df.isna().sum()","3caa9aa7":"is_178 = df['wsid'] == 178\nw_station_178 = df[is_178]","af94e208":"w_station_178.plot(x='date', y='temp')","85aec0f9":"is_384 = df['wsid'] == 384\nstation_384 = df[is_384]\nstation_384_tail_365 = station_384.tail(365)\nstation_384_tail_365 = station_384_tail_365.reset_index()\nstation_384_tail_365.plot(x='mdct', y='temp')\nstation_384_tail_365.plot(x='mdct', y='prcp')\nstation_384_tail_365.plot(x='mdct', y='hmdy')\nstation_384_tail_365.plot(x='mdct', y='gbrd')\n","a2bbeeda":"plt.rcParams['figure.figsize'] = (20, 10)\nstation_384_tail_365[['wdsp', 'gust', 'temp', 'tmax']].plot()\nstation_384_tail_365[['temp', 'hmdy']].plot()","334aeee5":"station_384_tail_365[['temp']].plot()","958d5ea0":"station_384_temp = station_384_tail_365['temp']\nstation_384_temp.replace(0, np.nan, inplace=True)","b54db54c":"station_384_temp.plot()","180d60a6":"station_384_temp.interpolate('linear', inplace=True, limit_direction='both')","ad79e3cc":"station_384_temp.plot()","83f3d1ce":"station_384_temp_sept_oct = station_384_temp.head(24)\nstation_384_temp_sept_oct.plot()","8aa0e776":"is_385 = df['wsid'] == 385\nstation_385 = df[is_385]\nstation_385_year = station_385.tail(8760)","23cf0959":"pd.options.mode.chained_assignment = None  # default='warn'\nstation_385_year_temp = station_385_year['temp']\nstation_385_year_temp.replace(0, np.nan, inplace=True)\nstation_385_year_temp.interpolate('linear', inplace=True, limit_direction='both')\nplt.rcParams['figure.figsize'] = (40, 20)\nstation_385_year_temp.plot()","9671138c":"station_385_year[['gbrd']].plot()","f03d7991":"rain_df = station_385_year[['mo','prcp']].fillna(0)\ntotal_rain = rain_df.groupby('mo').sum().reset_index()\naverage_rain = rain_df.groupby('mo').mean().reset_index()\naverage_rain.plot( x='mo', y='prcp', kind='bar')","1ac75006":"sns.barplot(x=total_rain.mo, y=total_rain.prcp)","214e5655":"sns.barplot(x=average_rain.mo, y=average_rain.prcp)","d097f990":"is_385 = df['wsid'] == 385\nstation_385 = df[is_385]","780398eb":"station_385.shape","b21ea29e":"station_385['temp'].replace(0, np.nan, inplace=True)\nstation_385['temp'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['prcp'].fillna(0,inplace=True)\nstation_385['gbrd'].fillna(0,inplace=True)\nstation_385['tmax'].replace(0, np.nan, inplace=True)\nstation_385['tmax'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['tmin'].replace(0, np.nan, inplace=True)\nstation_385['tmin'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['dmax'].replace(0, np.nan, inplace=True)\nstation_385['dmax'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['dewp'].replace(0, np.nan, inplace=True)\nstation_385['dewp'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['dmin'].replace(0, np.nan, inplace=True)\nstation_385['dmin'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['hmax'].replace(0, np.nan, inplace=True)\nstation_385['hmax'].interpolate('linear', inplace=True, limit_direction='both')\nstation_385['hmin'].replace(0, np.nan, inplace=True)\nstation_385['hmin'].interpolate('linear', inplace=True, limit_direction='both')","fc372e50":"d = {}\nfor col in station_385:\n    d[col] = station_385[col].unique().tolist()\n    \nprint(d['prcp'])","a55e6af1":"station_385.isna().sum()","50eac29b":"col = ['prcp', 'stp', 'smax', 'smin', 'gbrd', 'temp',\n       'dewp', 'tmax', 'dmax', 'tmin', 'dmin', 'hmdy', 'hmax', 'hmin', 'wdsp',\n       'wdct', 'gust']\nstation_385 = station_385[(station_385[col] != 0).any(axis=1)]","0eb75cff":"station_385.to_hdf('station_385.hdf','mydata',mode='w')","9c6c4f99":"df = pd.read_csv('..\/input\/sudeste.csv')\n#df = pd.read_hdf('weather.hdf','mydata')\ndf = df.set_index('mdct')\ndf.index = pd.to_datetime(df.index)\ndf.isna().sum()","ffafeb55":"(df == 0).astype(int).sum(axis=0)","774fbfc0":"df['prcp'].fillna(0,inplace=True)\ndf['gbrd'].fillna(0,inplace=True)","5b6dce3b":"col = ['prcp', 'stp', 'smax', 'smin', 'gbrd', 'temp',\n       'dewp', 'tmax', 'dmax', 'tmin', 'dmin', 'hmdy', 'hmax', 'hmin', 'wdsp',\n       'wdct', 'gust']\ndf = df[(df[col] != 0).any(axis=1)]","48238b36":"df.shape","6875e330":"df['temp'].replace(0, np.nan, inplace=True)\ndf['temp'].interpolate('linear', inplace=True, limit_direction='both')\ndf['dewp'].replace(0, np.nan, inplace=True)\ndf['dewp'].interpolate('linear', inplace=True, limit_direction='both')\ndf['tmax'].replace(0, np.nan, inplace=True)\ndf['tmax'].interpolate('linear', inplace=True, limit_direction='both')\ndf['tmin'].replace(0, np.nan, inplace=True)\ndf['tmin'].interpolate('linear', inplace=True, limit_direction='both')\ndf['dmax'].replace(0, np.nan, inplace=True)\ndf['dmax'].interpolate('linear', inplace=True, limit_direction='both')\ndf['dmin'].replace(0, np.nan, inplace=True)\ndf['dmin'].interpolate('linear', inplace=True, limit_direction='both')\ndf['hmax'].replace(0, np.nan, inplace=True)\ndf['hmax'].interpolate('linear', inplace=True, limit_direction='both')\ndf['hmin'].replace(0, np.nan, inplace=True)\ndf['hmin'].interpolate('linear', inplace=True, limit_direction='both')\ndf['hmdy'].replace(0, np.nan, inplace=True)\ndf['hmdy'].interpolate('linear', inplace=True, limit_direction='both')\ndf['wdsp'].interpolate('linear', inplace=True,limit_direction='both')\ndf['gust'].interpolate('linear', inplace=True,limit_direction='both')","07eeda05":"plt.rcParams['figure.figsize'] = (20, 10)\nis_384 = df['wsid'] == 384\nstation_384 = df[is_384]\nstation_384_year = station_384.tail(365)\n\nstation_384_year[['wdsp', 'gust', 'temp', 'tmax']].plot()\nstation_384_year[['temp', 'hmdy']].plot()","77f62927":"df.isna().sum()","14e214dd":"(df == 0).astype(int).sum(axis=0)","f2bc3b4b":"df[df.elvt == 0].index[0]","f9a3caf5":"df[df.elvt == 0].head()","db8b30f3":"df[[\"wsid\", \"wsnm\", \"city\", \"prov\", \"elvt\", \"lat\", \"lon\"]].drop_duplicates()","025c9beb":"df[df.elvt == 0].wsid.unique()","913825ae":"df['elvt'].replace(0, 4, inplace=True)\ndf['lat'].replace(0, -23.993611, inplace=True)\ndf['lon'].replace(0, -46.256389, inplace=True)","fa1062ce":"stp_smax_equal = df[df['stp'] == df['smax']].count().stp\nstp_smax_equal","5d4b7c80":"stp_smin_equal = df[df['stp'] == df['smin']].count().stp\nstp_smin_equal","45854137":"smax_smin_equal = df[df['smax'] == df['smin']].count().stp\nsmax_smin_equal","0b673163":"df['stp'].replace(0, np.nan, inplace=True)\ndf['stp'].interpolate('linear', inplace=True, limit_direction='both')\ndf['smax'].replace(0, np.nan, inplace=True)\ndf['smax'].interpolate('linear', inplace=True, limit_direction='both')\ndf['smin'].replace(0, np.nan, inplace=True)\ndf['smin'].interpolate('linear', inplace=True, limit_direction='both')","4462ec39":"is_384 = df['wsid'] == 384\nstation_384 = df[is_384]\nstation_384_tail_365 = station_384.tail(365)\nstation_384_tail_365 = station_384_tail_365.reset_index()\n\n\nstation_384_tail_365.plot(x='mdct', y='wdsp')\n#station_384_tail_365.plot(x='mdct', y='wdct')\nstation_384_tail_365.plot(x='mdct', y='gust')\nstation_384_tail_365.plot(x='mdct', y='stp')\nstation_384_tail_365.plot(x='mdct', y='smax')\nstation_384_tail_365.plot(x='mdct', y='smin')\n","8cffa5a3":"is_384 = df['wsid'] == 384\nstation_384 = df[is_384]\nstation_384_tail_365 = station_384.tail(24)\nstation_384_tail_365 = station_384_tail_365.reset_index()\n\nstation_384_tail_365.plot(x='mdct', y='wdsp')\n#station_384_tail_365.plot(x='mdct', y='wdct')\nstation_384_tail_365.plot(x='mdct', y='gust')\nstation_384_tail_365.plot(x='mdct', y='stp')\nstation_384_tail_365.plot(x='mdct', y='smax')\nstation_384_tail_365.plot(x='mdct', y='smin')","7e800fdc":"a = df[['wsnm','lat','lon']].drop_duplicates()\nfor i in range(len(a)):\n    print(\"folium.Marker([{}, {}], popup='<b>{}<\/b>', tooltip=tooltip).add_to(m)\".format(a.lat.values[i], a.lon.values[i], a.wsnm.values[i]))\n","b9723980":"m = folium.Map(\n    location=[-19.481935, -45.593932],\n    zoom_start=4,\n    tiles='Stamen Terrain'\n)\n\ntooltip = 'Click me!'\n\nfolium.Marker([-6.835777, -38.311583], popup='<b>S\u00c3O GON\u00c7ALO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.271094, -40.306069], popup='<b>VIT\u00d3RIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.988388, -40.579572], popup='<b>SANTA TERESA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.356923000000002, -40.06868], popup='<b>LINHARES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.636526, -40.741818], popup='<b>ALFREDO CHAVES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.676198, -39.864051], popup='<b>S\u00c3O MATEUS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.750412, -41.488852], popup='<b>ALEGRE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.100804999999998, -41.039395], popup='<b>PRES. KENNEDY<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.695265, -40.390572], popup='<b>NOVA VENECIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.104194, -41.106861], popup='<b>AFONSO CLAUDIO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.228373, -43.767703000000004], popup='<b>BARBACENA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.605696, -46.949616999999996], popup='<b>ARAX\u00c1<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.686316, -43.843763], popup='<b>MONTES CLAROS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.917072, -48.255657], popup='<b>UBERL\u00c2NDIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.166773000000003, -40.687756], popup='<b>ALMENARA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.861604, -46.043365], popup='<b>MONTE VERDE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.762607, -42.864013], popup='<b>VI\u00c7OSA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.573824, -42.622413], popup='<b>TIM\u00d3TEO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.952907, -49.525071999999994], popup='<b>ITUIUTABA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.556592000000002, -43.75622], popup='<b>OURO BRANCO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.106502, -44.250928], popup='<b>S.J.DEL REI<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.566513, -45.4043], popup='<b>VARGINHA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.745237, -46.633916], popup='<b>PASSOS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.104867000000002, -42.375904], popup='<b>MURIA\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.769965, -43.364329], popup='<b>JU\u00cdZ DE FORA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.53921, -49.518133], popup='<b>CAMPINA VERDE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.98586, -48.151574], popup='<b>CONC. DAS ALAGOAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.883945, -43.969397], popup='<b>BELO HOR. (PAMPULHA)<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.798799, -40.249933], popup='<b>SERRA DOS AIMORES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.996684, -46.985935], popup='<b>PATROC\u00cdNIO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.454929999999997, -45.453825], popup='<b>FORMIGA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.875270999999998, -47.434102], popup='<b>SACRAMENTO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-14.408228, -44.404123], popup='<b>MONTALVANIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.89284, -41.515423], popup='<b>TE\u00d3FILO OTONI<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.200854999999997, -45.459835999999996], popup='<b>TR\u00caS MARIAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.395799, -44.961909000000006], popup='<b>PASSA QUATRO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.918066, -46.382996], popup='<b>CALDAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.314567, -45.373049], popup='<b>MARIA DA F\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.830354, -41.977007], popup='<b>GOVERNADOR VALADARES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.786842, -42.942921000000005], popup='<b>GUANH\u00c3ES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.532768, -41.090801], popup='<b>AIMORES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.885398000000002, -44.416883], popup='<b>FLORESTAL<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.481935, -45.593932], popup='<b>DORES DO INDAI\u00c1<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.231052, -43.648269], popup='<b>DIAMANTINA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.747711, -44.453784999999996], popup='<b>CURVELO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.085957999999998, -44.016036], popup='<b>MOCAMBINHO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-18.780620000000003, -40.986505], popup='<b>MANTENA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.705504, -42.389256], popup='<b>CAPELINHA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.554101, -46.881935], popup='<b>UNAI<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-14.912284, -42.808473], popup='<b>ESPINOSA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.524262, -46.435536], popup='<b>BURITIS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.258064, -44.8356], popup='<b>PIRAPORA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.561349, -47.199251000000004], popup='<b>GUARDA-MOR<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.362747, -45.123801], popup='<b>S\u00c3O ROM\u00c3O<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.300158999999999, -45.617430999999996], popup='<b>CHAPADA GA\u00daCHA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.751535999999998, -41.457786999999996], popup='<b>\u00c1GUAS VERMELHAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.575667000000003, -41.485588], popup='<b>ITAOBIM<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.723139000000002, -42.43575], popup='<b>RIO PARDO DE MINAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-16.160327, -42.310266], popup='<b>SALINAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-17.78477, -46.119394], popup='<b>JO\u00c3O PINHEIRO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.735757, -42.137146], popup='<b>CARATINGA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.031457, -44.011249], popup='<b>IBIRIT\u00c8 (ROLA MO\u00c7A)<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.263378, -42.182817], popup='<b>MANHUA\u00c7U<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.546728, -43.261029], popup='<b>CORONEL PACHECO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-15.448089000000001, -44.366313], popup='<b>JANUARIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.239555, -45.008187], popup='<b>POMPEU<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.909892000000003, -47.114259000000004], popup='<b>S\u00c3O SEBASTIAO DO PARA\u00cdSO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.455288, -44.17338], popup='<b>SETE LAGOAS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-19.980034, -43.958651], popup='<b>BELO HORIZONTE - CERCADINHO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.757868, -43.684843], popup='<b>ECOLOGIA AGR\u00cdCOLA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.050334, -43.595684999999996], popup='<b>MARAMBAIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.589806, -43.282233000000005], popup='<b>XEREM<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.587729, -41.958327000000004], popup='<b>CAMBUC\u00cd<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.975468, -42.02145], popup='<b>ARRAIAL DO CABO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.041647, -41.051871000000006], popup='<b>CAMPOS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.376317999999998, -41.812053000000006], popup='<b>MACA\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.450924, -44.444786], popup='<b>RESENDE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.464889000000003, -43.291505], popup='<b>PICO DO COUTO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.358094, -43.695656], popup='<b>VALEN\u00c7A<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.448922, -42.987146], popup='<b>TERES\u00d3POLIS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.22354, -44.726863], popup='<b>PARAT\u00cd<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.041647, -41.051871000000006], popup='<b>S\u00c3O TOM\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.861322, -43.41141], popup='<b>VILA MILITAR<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.334839000000002, -42.676932], popup='<b>NOVA FRIBURGO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.098391, -43.208574], popup='<b>TR\u00caS RIOS <\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-13.453981, -56.677323], popup='<b>RIO CLARO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.988286, -43.190436], popup='<b>FORTE DE COPACABANA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.645910999999998, -42.415775], popup='<b>SILVA JARDIM<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.871321, -42.609219], popup='<b>SAQUAREMA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.496294, -46.620088], popup='<b>SAO PAULO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.358052, -49.028877], popup='<b>BAURU<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.750231, -45.603836], popup='<b>CAMPOS DO JORD\u00c3O<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.119867000000003, -51.408637], popup='<b>PRESIDENTE PRUDENTE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.584475, -47.382549], popup='<b>FRANCA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.980353, -47.883927], popup='<b>S\u00c3O CARLOS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-24.671654, -47.545896], popup='<b>IGUAPE<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.426035, -47.585552], popup='<b>SOROCABA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.981918, -48.885818], popup='<b>ITAPEVA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.852022, -48.164817], popup='<b>S. MIG. ARCANJO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.949, -49.894546000000005], popup='<b>OURINHOS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.372832, -50.974709999999995], popup='<b>RANCHARIA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.101748999999998, -48.940996999999996], popup='<b>AVAR\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.703132, -47.623317], popup='<b>PIRACICABA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.666045, -49.734854], popup='<b>LINS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.041667999999998, -45.520841], popup='<b>TAUBAT\u00c9<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.403221, -49.966031], popup='<b>VOTUPORANGA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.165025, -50.595134], popup='<b>JALES<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.319138, -50.930158], popup='<b>VALPARAISO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.085675, -49.920388], popup='<b>JOS\u00c9 BONIF\u00c1CIO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.132937, -48.840426], popup='<b>ARIRANHA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.855567, -48.799717], popup='<b>IBITINGA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.78056, -47.07528], popup='<b>CASA BRANCA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.415062, -46.805292], popup='<b>ITAPIRA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.228362, -45.417055], popup='<b>S LUIS DO PARAITINGA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-22.471204999999998, -48.557573], popup='<b>BARRA BONITA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.993611, -46.256389], popup='<b>MOELA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-24.962819, -48.416379], popup='<b>BARRA DO TURVO<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-21.338432, -48.114007], popup='<b>PRAD\u00d3POLIS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.559175, -48.544996999999995], popup='<b>BARRETOS<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-20.35976, -47.775220000000004], popup='<b>ITUVERAVA<\/b>', tooltip=tooltip).add_to(m)\nfolium.Marker([-23.523889999999998, -46.86945], popup='<b>BARUERI<\/b>', tooltip=tooltip).add_to(m)\n\nm","33725a5f":"df[df['wsnm']=='S\u00c3O GON\u00c7ALO'].head(2)","625e2d44":"df[df['wsnm']=='RIO CLARO'].head(2)","a565a58a":"df.loc[df['wsnm']=='RIO CLARO','lat'] = -22.722778\ndf.loc[df['wsnm']=='RIO CLARO','lon'] = -44.135833\ndf.loc[df['wsnm']=='S\u00c3O GON\u00c7ALO','lat'] = -22.826944\ndf.loc[df['wsnm']=='S\u00c3O GON\u00c7ALO','lon'] = -43.053889","3830c621":"#df.to_hdf('cleaned_df.hdf','mydata',mode='w')","2eeaaf1b":"#df = pd.read_hdf('cleaned_df.hdf','mydata')","86e7f798":"sns.set(rc={'figure.figsize':(20, 14)})\nis_373 = df['wsid'] == 373\nstation_373 = df[is_373]\nstation_373['temp'].plot(linewidth=0.3);","6326d56c":"sns.set(rc={'figure.figsize':(20, 14)})\nis_420 = df['wsid'] == 420\nstation_420 = df[is_420]\n\nstation_420['temp'].plot(linewidth=0.3);\n","999fa9a8":"is_420 = df['wsid'] == 420\nstation_420 = df[is_420]\nstation_420_month = station_420.tail(720)\nstation_420_month_tmax = station_420_month['tmax'].groupby(station_420_month['da'])\nstation_420_month_tmin = station_420_month['tmin'].groupby(station_420_month['da'])\ntmax_mean = station_420_month_tmax.mean()\ntmin_mean = station_420_month_tmin.mean()\nplt.figure()\ntmax_mean.plot(color='red', figsize=[8,5])\ntmin_mean.plot(color='blue')","6eacc323":"index = []\nyear = []\ncity = []\ntmax = []\n\nfor i in df.yr.unique():\n    k = df.loc[df['yr'] == int(i)].tmax.nlargest()\n    for w in range(5):\n        try:\n            g = df.loc[k.index[w]][df.loc[k.index[w]].tmax == k[w]]\n            city.append(g.iloc[0]['city'])\n            year.append(i)\n            index.append(k.index[w])\n            tmax.append(k[w])\n        except:\n            pass\n        \ndf1 = pd.DataFrame({'date': index,'city': city,'tmax': tmax, 'year':year})\ndf1","4125151e":"index = []\ncity = []\ntmin = []\nyear = []\n\nfor i in df.yr.unique():\n    k = df.loc[df['yr'] == int(i)].tmin.nsmallest()\n    for w in range(5):\n        try:\n            g = df.loc[k.index[w]][df.loc[k.index[w]].tmin == k[w]]\n            city.append(g.iloc[0]['city'])\n            year.append(i)\n            index.append(k.index[w])\n            tmin.append(k[w])\n        except:\n            pass\n        \ndf2 = pd.DataFrame({'date': index,'city': city,'tmin': tmin,'year':year})\ndf2","0f55c069":"group_df = df['prcp'].groupby(df['prov'])\ngroup_df.sum()","37d55673":"group_df_wsid = df['prcp'].groupby(df['wsid'])\ngroup_df_wsid.sum()","cee5fd76":"group_df_wsid.max()","a365ecab":"import seaborn\nseaborn.set_style('ticks')\n%matplotlib inline","1f3b2f5d":"is_379 = df['wsid'] == 379\nwsid_379 = df[is_379]","382b0aeb":"total_count = wsid_379.shape[0]\ncalm_count = wsid_379.query(\"wdsp == 0\").shape[0]\n\nprint('Of {} total observations, {} have calm winds.'.format(total_count, calm_count))","1dbe2ccb":"def speed_labels(bins, units):   \n    labels = []\n    for left, right in zip(bins[:-1], bins[1:]):\n        if left == bins[0]:\n            labels.append('calm'.format(right))\n        elif np.isinf(right):\n            labels.append('>{} {}'.format(left, units))\n        else:\n            labels.append('{} - {} {}'.format(left, right, units))\n\n    return list(labels)\n\ndef _convert_dir(directions, N=None):\n    if N is None:\n        N = directions.shape[0]\n    barDir = directions * np.pi\/180. - np.pi\/N\n    barWidth = 2 * np.pi \/ N\n    return barDir, barWidth","903181fc":"spd_bins = [-1, 0, 3, 6, 9, 12, 15, 18, np.inf]\nspd_labels = speed_labels(spd_bins, units='m\/s')\n\ndir_bins = np.arange(-7.5, 370, 15)\n#print(dir_bins)\ndir_labels = (dir_bins[:-1] + dir_bins[1:]) \/ 2","3b53c190":"rose1 = (\n    wsid_379.assign(WindSpd_bins=lambda df:\n            pd.cut(df['wdsp'], bins=spd_bins, labels=spd_labels, right=True)\n         )\n        .assign(WindDir_bins=lambda df:\n            pd.cut(df['wdct'], bins=dir_bins, labels=dir_labels, right=False)\n         )\n        .replace({'WindDir_bins': {360: 0}})\n        .groupby(by=['WindSpd_bins', 'WindDir_bins'])\n        .size()\n        .unstack(level='WindSpd_bins')\n        .fillna(0)\n        .assign(calm=lambda df: calm_count \/ df.shape[0])\n        .sort_index(axis=1)\n        .applymap(lambda x: x \/ total_count * 100)\n)\n","922944e4":"def wind_rose(rosedata, wind_dirs, palette=None):\n    if palette is None:\n        palette = seaborn.color_palette('bright', n_colors=rosedata.shape[1])\n\n    bar_dir, bar_width = _convert_dir(wind_dirs)\n\n    fig, ax = plt.subplots(figsize=(10, 10), subplot_kw=dict(polar=True))\n    ax.set_theta_direction('clockwise')\n    ax.set_theta_zero_location('N')\n    for n, (c1, c2) in enumerate(zip(rosedata.columns[:-1], rosedata.columns[1:])):\n        if n == 0:\n            # first column only\n            ax.bar(bar_dir, rosedata[c1].values, \n                   width=bar_width,\n                   color=palette[0],\n                   edgecolor='none',\n                   label=c1,\n                   linewidth=0)\n\n        # all other columns\n        ax.bar(bar_dir, rosedata[c2].values, \n               width=bar_width, \n               bottom=rosedata.cumsum(axis=1)[c1].values,\n               align='edge',\n               color=palette[n+1],\n               edgecolor='none',\n               label=c2,\n               linewidth=0)\n\n    leg = ax.legend(loc=(0.75, 0.95), ncol=2)\n    xtl = ax.set_xticklabels(['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'])\n    \n    return fig\n","997fdd24":"directions = np.arange(0, 360, 15)\nfig = wind_rose(rose1, directions)","1340d541":"is_375 = df['wsid'] == 375\nwsid_375 = df[is_375]\n\nrose2 = (\n    wsid_375.assign(WindSpd_bins=lambda df:\n            pd.cut(df['wdsp'], bins=spd_bins, labels=spd_labels, right=True)\n         )\n        .assign(WindDir_bins=lambda df:\n            pd.cut(df['wdct'], bins=dir_bins, labels=dir_labels, right=False)\n         )\n        .replace({'WindDir_bins': {360: 0}})\n        .groupby(by=['WindSpd_bins', 'WindDir_bins'])\n        .size()\n        .unstack(level='WindSpd_bins')\n        .fillna(0)\n        .assign(calm=lambda df: calm_count \/ df.shape[0])\n        .sort_index(axis=1)\n        .applymap(lambda x: x \/ total_count * 100)\n)","08df381a":"fig = wind_rose(rose2, directions)","3fe59db6":"Interpolate for everything else","a5af6230":"Even after all this cleanup, there is still not much you can do about missing chunks of data from a weather station. The two examples below show, that even with interpolation, we are quite limited. Overall, it is difficult to get realiable data from over a 16 year period. The first graph shows a big chunk of data missing for  2004 and some of 2005, with one small line connecting the two.\n\nThe graph below that shows a much cleaner dataset\/weather station.","0ca4029a":"Let's try the plots in seaborn, just to compare how they look against matplotlib. ","a7063a47":"# Exploration and initial clean-up on small sets","e07000de":"Drop where all sensor columns are 0","67bf4ca0":"Import the dataset into pandas","26c74c11":"Let's play with some rain data. From our observations on precipitation above, it looks like stations report NA values when it doesn't rain, so let's fill those NA's with zero. Then get total and average rain per month for station 385.","1ab42688":"After interpolating and filling NAs, let's see what we are left with","a2033430":"Uhoh, then the other 40% has stp = smin. What about when smax = smin?","98ae9b45":"Station 385 cleaned. Save to hdf file for later use","27a0a0d3":"Temperature and humidity varies correctly except for zero values.\nPrecipitation data is sparse and looks to only have readings when it rains, other than that the sensor reports NA values.\nSolar radiation (gbrd) looks decent as well. Reporting values while the sun is out (daylight) and reporting NA when the sun is down (nighttime). We can even see that on the day it rains in the precipitation graph (20th - 21st), solar radiation is reporting low values, most likely due to cloud cover. ","756cb914":"Let's make the plots prettier and plot the data in tandem.","ce8ab7dd":"## Explore one year of data","f02308bd":"# Fun facts and graphs","33b30f4b":"3652525\/9159199 = 0.398, so about 40% of the data has this issue... Does this warrant dropping one of the columns? Or is smax a good enough estimate for both? ","6bf74430":"Save df to hdf for easy loading each time. (Tried saving to pickle but apparently there is a bug for saving large files to pickle in pandas)","078a6673":"Graph pre-interpolation:","33cc02ba":"Let's go down to data from one day ","5e8876bd":"9779168 - 9159199 = 619969 columns dropped","286bdbb8":"This explains the 0 values. Maybe the metadata for the station did not get input correctly? Let's go to the internet and see what the average lat\/lon and elevation is for Guaruj\u00e1\n\nhttps:\/\/en.wikipedia.org\/wiki\/Guaruj%C3%A1\n\nIt is a very small area (55 sq miles) Elevation is 4 meters lat lon is 23\u00b059\u203237\u2033S 46\u00b015\u203223\u2033W --> lat -23.993611, lon -46.256389 We can change this in our dataset to get a more accurate description","5ca742e7":"Let's look at a 2 week sample for station 384","b86c09e3":"2 stations are labelled incorrectly for latitude and longitude (not in SE Brazil). \nRio Claro and S\u00c3O GON\u00c7ALO are common names in Brazil. Digging deeper into it, we see that there are the same named cities in the correctly labeled province:  \nhttps:\/\/en.wikipedia.org\/wiki\/Rio_Claro,_Rio_de_Janeiro\nhttps:\/\/en.wikipedia.org\/wiki\/S%C3%A3o_Gon%C3%A7alo,_Rio_de_Janeiro\n\nLet's go ahead and update the lat and lon values for these two stations\nRio Claro = 22\u00b043\u203222\u2033S 44\u00b008\u203209\u2033W = -22.722778, -44.135833\nS\u00c3O GON\u00c7ALO = 22\u00b049\u203237\u2033S 43\u00b003\u203214\u2033W = -22.826944, -43.053889","c7fb2822":"### Note about cleaning time series data from multiple sensors","5a704791":"Good way to get unique values for each column to take a quick look if anything looks incorrect","126005da":"Shape of the dataframe. We have about 10 million observations","9dd905e0":"Let's attempt to clean up all stations. Best way is to look at all columns with NA values and with zero values and see if it makes sense.","90684f4d":"Plot post interpolation looks a lot better and fills in the missing holes nicely. This is a big assumption but I think it makes sense since most of the missing data is one hour here or there, so interpolating on small  holes seem appropriate.","9b5c3dc0":"Try a year of data from one station ","7b9d56a6":"Analyzing the data, we see that the station was not in operation in the first couple of years, so let's drop those values. Drop where all sensor columns are 0.","97a8e930":"## Investigate one station to get a bearing on how to clean","16c90985":"Let's play with some of the data now. Let's get 30 days of data from one station, get the average max and min temperatures by grouping on the entire day, and plotting to see how the temperature fluctuates in a day. ","93b97db0":"Let's look at stp. It looks like a bunch of the stations just use the same Smax value as they do for stp..","3e467624":"Check one day analysis","4565f0c3":"#### Air pressure and wind analysis","feb64576":"Look at a year's worth of gbrd (solar radiation) data. NaN values in gbrd (solar radiation) occur when the sun goes down. So we only get 8 to 12 data points each day.","798685b7":"## Let's make a wind rose","d68d3e66":"### Clean-up on one station","112a7d4c":"Let's see what the warmest and coldest temperatures for each year and which city it happens in:","916c2a22":"Looks like the summer months (December, January, February) get the most rain. Remember, we are south of the equator, so their summer is our winter. ","01e8642b":"Talked to some weather folks and it seems that this is perfectly reasonable for air pressure, min, max to hover around the same values in an hour span. So it actually looks like this is correct. We will keep it as is, and interpolate where there are 0 values since 0 air pressure doesn't make sense.","5821f48c":"Let's look into why elevation, lat, lon is zero (all same weather station?). Same with smin, smax etc, and look at surrounding values to see if it makes sense.\n\n - hr, prcp, and gbrd are ok to be 0","2b82875a":"Take a look at the data we are working with","78f24f19":"# Interpolation - fill in the missing gaps\nLet's look at just temperature and try to fill in the gaps so the data makes more sense. From the graph below, it doesn't make sense for the temperature to drop from 20C to 0C in the midst of an hour, so it makes more sense that a sensor reported incorrectly","b5c643c7":"Need to change mdct to index and to a datetime object","7375e8fc":"Let's see amount of rain in cm by province, and by weather station","66804388":"16 years of temperature data does not plot well. Looks like we need to zoom in on a smaller subset. From this, we see that there is missing data (NAs) around year 2008-2010. Maybe the station wasn't funded and didn't report reading then? Also, lots of zero values for this station. The data stabilizes a bit better in the later years, hovering between 16C-37C.\n\nLet's zoom in on about 2 weeks of hourly data for another station that has cleaner readings. \nAbout 2 weeks of data from sept 15 - sept 30, 2016 from station 384 in Rio de Janeiro","3949c0c9":"Interpolate linearly","7ef9bd11":"Clean up for one weather station with it's own quarks. This station does not track all years, will need to drop all Null and 0 values for all columns for the beginning part.\n\n- interpolate to clean up temp, tmax, tmin, dmax, dmin, hmax, hmin,\n- fill NaNs for precipitation\n- fill NaNs for solar radiation\n- stp, smax, smin, dewp, hmdy, wdsp, wdct, and gust seem clean (call unique on the values and see if anything looks odd)","b04a6823":"9159199 - (3652525 + 3458158 + 92853) = 1955663 rows have independent values for all 3.","753d8634":"Grab just the temperature data and see how it looks.","ac22c8a2":"First, change all 0's to NaNs, then use interpolation to fill in missing values.","3824abc7":"Let's save the cleaned up df now. ","8a1c1432":"Some stations do not have wind or rain sensors, owing to why there are so many Null values. Will set them to zero to be able to do cleanup. Gbrd has null values for when the sun is down (little less than half the time which makes sense). Make these zero values also to not affect analysis. Other column null values we can set to zero and interpolate to get a value.","7f0ae483":"### Folium map of weather station location","eb99c5a2":"Wind rose for the highest and lowest elevation stations","bf449857":"# Clean-up entire dataset","e151fa7d":"Looks like MG get's the most rain. Let's see rain by weather station, and max amount of rain a station got in one hour.","bb25c7dc":"Look at NAs and zeros","09f6dc25":"How many NA values do we need to investigate?"}}