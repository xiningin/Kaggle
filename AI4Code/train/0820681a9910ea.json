{"cell_type":{"d6685273":"code","2a6fc42b":"code","9b48f908":"code","e0ddb4a7":"code","f4e3a399":"markdown","7c90ad72":"markdown","f86408db":"markdown","2c1b16f8":"markdown","7211b413":"markdown","3901bdda":"markdown","4eeede41":"markdown","07caba2c":"markdown","83d0ca52":"markdown","b528e5a2":"markdown","c8fe2d7f":"markdown","07cbb8c1":"markdown","18973a66":"markdown","804240a1":"markdown","a2d93e3f":"markdown","9346edc9":"markdown"},"source":{"d6685273":"from IPython.display import Image","2a6fc42b":"from IPython.display import Image\nImage(\"..\/input\/applied-ml-summit-part1-images\/applied_ml_summit\/productionizing_ml_challenges.png\")","9b48f908":"Image(\"..\/input\/applied-ml-summit-part1-images\/applied_ml_summit\/kubeflow_and_pytorch_overview_diagram.png\")","e0ddb4a7":"Image(\"..\/input\/applied-ml-summit-part1-images\/applied_ml_summit\/kubeflow_pytorch_overview_bullets.png\")","f4e3a399":"Two weeks ago, I had the amazing opportunity to attend and review the Google Applied ML Summit. After having a chance to peruse the recordings from the Summit, I gleaned several new insights from the 3 tracks provided: \u201cDiscovering MLOps Technical Tutorials\u201d, \u201cExploring Cutting-Edge Innovation\u201d, and \u201cAdvanced MLOps.\u201d In this notebook, I focus on my top 3 takeaways from the first track.","7c90ad72":"![mlops_percentage.png](attachment:a7ed105b-2447-445b-831e-ac8377807083.png)","f86408db":"# Connect with me!\n- [LinkedIn](https:\/\/linkedin.com\/in\/roshanr11)\n- [GitHub](https:\/\/github.com\/roshanr11)\n- [Kaggle](https:\/\/kaggle.com\/roshanr11)","2c1b16f8":"# Part 1: Google Applied ML Summit | Takeaway Series","7211b413":"Utilizing Kubeflow Pipelines + Pytorch helps mitigate the many challenges of scalable ML, including tracking model artifacts, addressing model drift, and assisting a continuous iterative optimization process.","3901bdda":"![applied_ml_summit.png](attachment:6b0979d7-9853-4786-b693-11abb64a1d47.png)","4eeede41":"# Takeaway #3:","07caba2c":"Vertex AI is a unified MLOps platform to help data scientists\/ML Engineers increase experimentation, deploy faster, and manage models with confidence. Vertex AI provides tools to support your entire ML workflow, across different model types and varying levels of ML expertise.","83d0ca52":"The \u201cDiscovering MLOps Technical Tutorials\u201d track focused on building and training custom models, deploying and explaining models, as well as building an end-to-end pipeline using Vertex AI. \n\n\n\nSome key features\/use-cases of Vertex AI include:\n- Assessing data readiness\n- Feature engineering\n- Training and hyperparameter tuning\n- Model serving\n- Model tuning and understanding\n- Model monitoring\n- Model management\n- Edge deployment & monitoring","b528e5a2":"This will be the first of a 3-part series on the 3 tracks provided in the Google Applied ML Summit. Stay tuned for the next 2 posts for quick takeaways and applicable insights! Feel free to share if this helped you, and please comment your thoughts on the Summit below -- I would love to learn from fellow Machine Learning Practitioners and enthusiasts!","c8fe2d7f":"Note: almost all images are taken from the Google Applied ML Summit. The first image in Takeaway #2 is taken from the overview video in Andrew Ng\u2019s MLOps Specialization on Coursera.","07cbb8c1":"There are a ton of challenges in productionizing ML, including training-serving skew, data governance, and fairness & explainability, to name a few. Paraphrasing how Andrew Ng eloquently put it in his MLOps Specialization on Coursera, only 5-10% of attacking an ML problem consists of the ML Model Code; the remaining 90-95% (represented as whitespace in the image below) consists of the MLOps code\/solution.","18973a66":"# Takeaway #1:","804240a1":"# Takeaway #2:","a2d93e3f":"## Please upvote\/comment if you enjoyed this notebook! I'm a student learning how to become a better machine learning engineer and technical writer\/communicator\/storyteller. \n\n## I would greatly appreciate any and all constructive criticism\/tips\/advice. :) ","9346edc9":"![vertexai_overview.png](attachment:ff9c2bbf-c9c6-4921-bee8-49c69f0c39e3.png)"}}