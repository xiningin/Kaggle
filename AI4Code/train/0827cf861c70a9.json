{"cell_type":{"bd017164":"code","4152d3bf":"code","9d779c44":"code","48455fe9":"code","9d5b4c0e":"code","ca473ac9":"code","9d7afb4b":"code","ccdf3f7f":"code","28a60fe8":"code","13c49f2f":"code","e8ddcbc5":"code","575e86de":"code","5121449d":"code","0f9f6457":"code","b8d71a40":"code","d7398c57":"code","b00bed07":"code","744de37b":"code","aca00bc7":"code","fdd87b89":"code","a7bd96bb":"code","53adf06e":"code","d7664a6a":"code","12f170d8":"markdown","08e165f5":"markdown","b8bc9d5b":"markdown","16173e89":"markdown","3eb78b08":"markdown","7e4f4007":"markdown","1d678b0f":"markdown","b0bc0b3b":"markdown"},"source":{"bd017164":"import numpy as np \nimport pandas as pd \nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4152d3bf":"df = pd.read_csv(\"https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/undocumented\/connectionist-bench\/sonar\/sonar.all-data\",header=None)\ndf.head()","9d779c44":"df.shape","48455fe9":"# check for nan values\ndf.isnull().sum().sum()","9d5b4c0e":"df[60].value_counts() ","ca473ac9":"print(df[60].value_counts(normalize = True))\npd.value_counts(df[60]).plot(kind = \"bar\")","9d7afb4b":"X = df.drop(60, axis=1)\ny = df[60]","ccdf3f7f":"y = pd.get_dummies(y, drop_first=True)","28a60fe8":"y.value_counts()","13c49f2f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","e8ddcbc5":"import tensorflow as tf\nfrom tensorflow import keras","575e86de":"model = keras.Sequential([\n    keras.layers.Dense(60, input_dim=60, activation='relu'),\n    keras.layers.Dense(30, activation='relu'),\n    keras.layers.Dense(15, activation='relu'),\n    keras.layers.Dense(1, activation='sigmoid')\n])\n\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\nmodel.fit(X_train, y_train, epochs=100, batch_size=8)","5121449d":"model.evaluate(X_test, y_test)","0f9f6457":"y_pred = model.predict(X_test)\ny_pred[:10]","b8d71a40":"y_pred = np.round(y_pred)\nprint(y_pred[:10])","d7398c57":"y_pred = model.predict(X_test).reshape(-1)\ny_pred[:10]","b00bed07":"y_pred = np.round(y_pred)\nprint(y_pred[:10])","744de37b":"from sklearn.metrics import confusion_matrix , classification_report\n\nprint(classification_report(y_test, y_pred))","aca00bc7":"modeld = keras.Sequential([\n    keras.layers.Dense(60, input_dim=60, activation='relu'),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(30, activation='relu'),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(15, activation='relu'),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(1, activation='sigmoid')\n])\n\nmodeld.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\nmodeld.fit(X_train, y_train, epochs=100, batch_size=8)","fdd87b89":"modeld.evaluate(X_test, y_test)","a7bd96bb":"y_pred = modeld.predict(X_test).reshape(-1)\nprint(y_pred[:10])","53adf06e":"y_pred = np.round(y_pred)\nprint(y_pred[:10])","d7664a6a":"from sklearn.metrics import confusion_matrix , classification_report\n\nprint(classification_report(y_test, y_pred))","12f170d8":"**OBSERVATION -** There are no null values ","08e165f5":"# Dropout for Regularizing Deep Neural Networks","b8bc9d5b":"# Dropout Regularization","16173e89":"**OBSERVATION -** The data is not skewed","3eb78b08":"### **OBSERVATION** -  Model is performing exceptionally well with training data but not with testing data. So the model is overfitting","7e4f4007":"#### CHECKING TARGET VALUE","1d678b0f":"# MODEL TRAINING","b0bc0b3b":"Deep learning neural networks are likely to quickly overfit a training dataset with few examples. Droping out new neurons can help with overfitting. If there will be dropout neurons will not learn redundant details of inputs as it can't rely on one input as it might be dropped out randomly"}}