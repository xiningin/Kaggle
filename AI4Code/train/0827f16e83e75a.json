{"cell_type":{"b64b9e31":"code","1100f78a":"code","6c1ebe20":"code","85c3d9e6":"code","c978edc8":"markdown","4d8a50a0":"markdown","8fb484c5":"markdown","c156e51c":"markdown","76b1926d":"markdown","2f615f65":"markdown"},"source":{"b64b9e31":"import pandas as pd\n#defining a dataframe of all the months \ncolumns_name=['MONTH','TOTAL_TRAFFIC']\ndfresult=pd.DataFrame(columns=columns_name)\n###############################\n#defining a dataframe of each month \ncolumn_name=['DATE','TOTAL_TRAFFIC']\ndfoctresult=pd.DataFrame(columns=column_name)\ndfsepresult=pd.DataFrame(columns=column_name)\ndfaugresult=pd.DataFrame(columns=column_name)\ndfjulresult=pd.DataFrame(columns=column_name)\ndfjunresult=pd.DataFrame(columns=column_name)\ndfmayresult=pd.DataFrame(columns=column_name)\ndfaprresult=pd.DataFrame(columns=column_name)\ndfmarresult=pd.DataFrame(columns=column_name)\ndffebresult=pd.DataFrame(columns=column_name)\ndfjanresult=pd.DataFrame(columns=column_name)\ndfdecresult=pd.DataFrame(columns=column_name)\ndfnovresult=pd.DataFrame(columns=column_name)\ndfoct19result=pd.DataFrame(columns=column_name)\ndfsep19result=pd.DataFrame(columns=column_name)\n###############################\n","1100f78a":"#reading the csv files and store them in dataframes\n#then merging them into one dataframe\ndf1 = pd.read_csv('..\/input\/mta-data\/turnstile_201031.txt')\ndf2 = pd.read_csv('..\/input\/mta-data\/turnstile_201024.txt')\ndf3 = pd.read_csv('..\/input\/mta-data\/turnstile_201017.txt')\ndf4 = pd.read_csv('..\/input\/mta-data\/turnstile_201010.txt')\ndf5 = pd.read_csv('..\/input\/mta-data\/turnstile_201003.txt')\ndfoct=[df1,df2,df3,df4,df5]\ndfoct2020=pd.concat(dfoct,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf6 = pd.read_csv('..\/input\/mta-data\/turnstile_200926.txt')\ndf7 = pd.read_csv('..\/input\/mta-data\/turnstile_200919.txt')\ndf8 = pd.read_csv('..\/input\/mta-data\/turnstile_200912.txt')\ndf9 = pd.read_csv('..\/input\/mta-data\/turnstile_200905.txt')\ndfsep=[df6,df7,df8,df9]\ndfsep2020=pd.concat(dfsep,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf10 = pd.read_csv('..\/input\/mta-data\/turnstile_200829.txt')\ndf11 = pd.read_csv('..\/input\/mta-data\/turnstile_200822.txt')\ndf12 = pd.read_csv('..\/input\/mta-data\/turnstile_200815.txt')\ndf13 = pd.read_csv('..\/input\/mta-data\/turnstile_200808.txt')\ndf14 = pd.read_csv('..\/input\/mta-data\/turnstile_200801.txt')\ndfaug=[df10,df11,df12,df13,df14]\ndfaug2020=pd.concat(dfaug,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf15 = pd.read_csv('..\/input\/mta-data\/turnstile_200725.txt')\ndf16 = pd.read_csv('..\/input\/mta-data\/turnstile_200718.txt')\ndf17 = pd.read_csv('..\/input\/mta-data\/turnstile_200711.txt')\ndf18 = pd.read_csv('..\/input\/mta-data\/turnstile_200704.txt')\ndfjul=[df15,df16,df17,df18]\ndfjul2020=pd.concat(dfjul,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf19 = pd.read_csv('..\/input\/mta-data\/turnstile_200627.txt')\ndf20 = pd.read_csv('..\/input\/mta-data\/turnstile_200620.txt')\ndf21 = pd.read_csv('..\/input\/mta-data\/turnstile_200613.txt')\ndf22 = pd.read_csv('..\/input\/mta-data\/turnstile_200606.txt')\ndfjun=[df19,df20,df21,df22]\ndfjun2020=pd.concat(dfjun,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf23 = pd.read_csv('..\/input\/mta-data\/turnstile_200530.txt')\ndf24 = pd.read_csv('..\/input\/mta-data\/turnstile_200523.txt')\ndf25 = pd.read_csv('..\/input\/mta-data\/turnstile_200516.txt')\ndf26 = pd.read_csv('..\/input\/mta-data\/turnstile_200509.txt')\ndf27 = pd.read_csv('..\/input\/mta-data\/turnstile_200502.txt')\ndfmay=[df23,df24,df25,df26,df27]\ndfmay2020=pd.concat(dfmay,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n################################################################################################\ndfapr1 = pd.read_csv('..\/input\/mta-data\/turnstile_200425.txt')\ndfapr2 = pd.read_csv('..\/input\/mta-data\/turnstile_200418.txt')\ndfapr3 = pd.read_csv('..\/input\/mta-data\/turnstile_200411.txt')\ndfapr4 = pd.read_csv('..\/input\/mta-data\/turnstile_200404.txt')\ndfapr=[dfapr1,dfapr2,dfapr3,dfapr4]\ndfapr2020=pd.concat(dfapr,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n########################################lockdown################################################\ndflock1 = pd.read_csv('..\/input\/mta-data\/turnstile_200328.txt')\ndflock2 = pd.read_csv('..\/input\/mta-data\/turnstile_200321.txt')\ndflock3 = pd.read_csv('..\/input\/mta-data\/turnstile_200314.txt')\ndflock4 = pd.read_csv('..\/input\/mta-data\/turnstile_200307.txt')\ndfmar=[dflock1,dflock2,dflock3,dflock4]\ndfmar2020=pd.concat(dfmar,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n################################################################################################\ndf28 = pd.read_csv('..\/input\/mta-data\/turnstile_200229.txt')\ndf29 = pd.read_csv('..\/input\/mta-data\/turnstile_200222.txt')\ndf30 = pd.read_csv('..\/input\/mta-data\/turnstile_200215.txt')\ndf31 = pd.read_csv('..\/input\/mta-data\/turnstile_200208.txt')\ndf32 = pd.read_csv('..\/input\/mta-data\/turnstile_200201.txt')\ndffeb=[df28,df29,df30,df31,df32]\ndffeb2020=pd.concat(dffeb,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf33 = pd.read_csv('..\/input\/mta-data\/turnstile_200125.txt')\ndf34 = pd.read_csv('..\/input\/mta-data\/turnstile_200118.txt')\ndf35 = pd.read_csv('..\/input\/mta-data\/turnstile_200111.txt')\ndf36 = pd.read_csv('..\/input\/mta-data\/turnstile_200104.txt')\ndfjan=[df33,df34,df35,df36]\ndfjan2020=pd.concat(dfjan,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf37 = pd.read_csv('..\/input\/mta-data\/turnstile_191228.txt')\ndf38 = pd.read_csv('..\/input\/mta-data\/turnstile_191221.txt')\ndf39 = pd.read_csv('..\/input\/mta-data\/turnstile_191214.txt')\ndf40 = pd.read_csv('..\/input\/mta-data\/turnstile_191207.txt')\ndfdec=[df37,df38,df39,df40]\ndfdec2019=pd.concat(dfdec,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf41 = pd.read_csv('..\/input\/mta-data\/turnstile_191130.txt')\ndf42 = pd.read_csv('..\/input\/mta-data\/turnstile_191123.txt')\ndf43 = pd.read_csv('..\/input\/mta-data\/turnstile_191116.txt')\ndf44 = pd.read_csv('..\/input\/mta-data\/turnstile_191109.txt')\ndf45 = pd.read_csv('..\/input\/mta-data\/turnstile_191102.txt')\ndfnov=[df41,df42,df43,df44,df45]\ndfnov2019=pd.concat(dfnov,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf46 = pd.read_csv('..\/input\/mta-data\/turnstile_191026.txt')\ndf47 = pd.read_csv('..\/input\/mta-data\/turnstile_191019.txt')\ndf48 = pd.read_csv('..\/input\/mta-data\/turnstile_191012.txt')\ndf49 = pd.read_csv('..\/input\/mta-data\/turnstile_191005.txt')\ndfoct19=[df46,df47,df48,df49]\ndfoct2019=pd.concat(dfoct19,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n#*******************************************************************************************\ndf50 = pd.read_csv('..\/input\/mta-data\/turnstile_190928.txt')\ndf51 = pd.read_csv('..\/input\/mta-data\/turnstile_190921.txt')\ndf52 = pd.read_csv('..\/input\/mta-data\/turnstile_190914.txt')\ndf53 = pd.read_csv('..\/input\/mta-data\/turnstile_190907.txt')\ndfsep19=[df50,df51,df52,df53]\ndfsep2019=pd.concat(dfsep19,keys=['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'])\n# ########################################################\n#this function to clean the dataframe, add new columns \ndef cleanning(df):\n    #to remove the space after the exit column\n    df.columns=df.columns.str.strip()\n    #drop unnecessary columns \n    df.drop(['C\/A','UNIT','SCP','LINENAME','DIVISION','DESC'],axis=1,inplace= True)\n    #converting to the standard date format \n    df[\"DATE\"] = pd.to_datetime(df[\"DATE\"])\n    #calculating the actual entries not the cumulative \n    df['TOTAL_ENTRIES']= df['ENTRIES'].diff().tolist();\n    #calculating the actual exits not the cumulative \n    df['TOTAL_EXITS']= df['EXITS'].diff().tolist();\n    # drop the negative values\n    df.drop(df.index[df['TOTAL_ENTRIES'] < 0.0 ], inplace = True)\n    df.drop(df.index[df['TOTAL_EXITS'] < 0.0 ], inplace = True)\n    #drop the outliers 60*60*24\n    threshold=86400\n    df.drop(df.index[df['TOTAL_ENTRIES'] > threshold],inplace=True )\n    df.drop(df.index[df['TOTAL_EXITS'] > threshold],inplace=True )\n    threshold = 100000000\n    #calculating the total traffic\n    df['TOTAL_TRAFFIC']=df['TOTAL_ENTRIES']+df['TOTAL_EXITS']\n    #drop the outliers\n    df.drop(df.index[df['TOTAL_TRAFFIC'] > threshold],inplace=True )\n    #drop the nan values\n    df.dropna(inplace= True)\n    return df\n#this function calculates the sum of the traffic in all the days in one month\ndef print_result(df):\n    result=df['TOTAL_TRAFFIC'].sum().item()\n    return result\n#this function calculates the sum of the traffic in each day\ndef print_result_of_month(df):\n    result=df.groupby(['DATE'])['TOTAL_TRAFFIC'].sum().astype(int).reset_index()\n    return result\n","6c1ebe20":"#1- cleanning\n#2- get the values of days in one month\n#3- write the values in a csv file\n#4- get the total value in one month\n#5- save the value in dictionary\n#6- insert the dictionary into the result dataframe, which includes all the months\n#7- create a csv file with all the months \ncleanning(dfoct2020)\nprint(dfoct2020)\ndfoctresult=print_result_of_month(dfoct2020)\ndfoctresult.to_csv(\"cleaned_data_oct.csv\")\nx={'MONTH':'OCTOBER 2020','TOTAL_TRAFFIC':print_result(dfoctresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfsep2020=cleanning(dfsep2020)\nprint(dfsep2020)\ndfsepresult=print_result_of_month(dfsep2020)\ndfsepresult.to_csv(\"cleaned_data_sep.csv\")\nx={'MONTH':'SEPTEMBER 2020','TOTAL_TRAFFIC':print_result(dfsepresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfaug2020=cleanning(dfaug2020)\nprint(dfaug2020)\ndfaugresult=print_result_of_month(dfaug2020)\ndfaugresult.to_csv(\"cleaned_data_aug.csv\")\nx={'MONTH':'AUGUST 2020','TOTAL_TRAFFIC':print_result(dfaugresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfjul2020=cleanning(dfjul2020)\nprint(dfjul2020)\ndfjulresult=print_result_of_month(dfjul2020)\ndfjulresult.to_csv(\"cleaned_data_jul.csv\")\nx={'MONTH':'JULY 2020','TOTAL_TRAFFIC':print_result(dfjulresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfjun2020=cleanning(dfjun2020)\nprint(dfjun2020)\ndfjunresult=print_result_of_month(dfjun2020)\ndfjunresult.to_csv(\"cleaned_data_jun.csv\")\nx={'MONTH':'JUNE 2020','TOTAL_TRAFFIC':print_result(dfjunresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfmay2020=cleanning(dfmay2020)\nprint(dfmay2020)\ndfmayresult=print_result_of_month(dfmay2020)\ndfmayresult.to_csv(\"cleaned_data_may.csv\")\nx={'MONTH':'MAY 2020','TOTAL_TRAFFIC':print_result(dfmayresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfapr2020=cleanning(dfapr2020)\nprint(dfapr2020)\ndfaprresult=print_result_of_month(dfapr2020)\ndfaprresult.to_csv(\"cleaned_data_apr.csv\")\nx={'MONTH':'APRIL 2020','TOTAL_TRAFFIC':print_result(dfaprresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n########################################################################\ndfmar2020=cleanning(dfmar2020)\nprint(dfmar2020)\ndfmarresult=print_result_of_month(dfmar2020)\ndfmarresult.to_csv(\"cleaned_data_mar.csv\")\nx={'MONTH':'MARCH 2020','TOTAL_TRAFFIC':print_result(dfmarresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# ########################################################################\ndffeb2020=cleanning(dffeb2020)\nprint(dffeb2020)\ndffebresult=print_result_of_month(dffeb2020)\ndffebresult.to_csv(\"cleaned_data_feb.csv\")\nx={'MONTH':'FEBRUARY 2020','TOTAL_TRAFFIC':print_result(dffebresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n#-------------------------------------------------------------------\ndfjan2020=cleanning(dfjan2020)\nprint(dfjan2020)\ndfjanresult=print_result_of_month(dfjan2020)\ndfjanresult.to_csv(\"cleaned_data_jan.csv\")\nx={'MONTH':'JANUARY 2020','TOTAL_TRAFFIC':print_result(dfjanresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfdec2019=cleanning(dfdec2019)\nprint(dfdec2019)\ndfdecresult=print_result_of_month(dfdec2019)\ndfdecresult.to_csv(\"cleaned_data_dec19.csv\")\nx={'MONTH':'DECEMBER 2019','TOTAL_TRAFFIC':print_result(dfdecresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfnov2019=cleanning(dfnov2019)\nprint(dfnov2019)\ndfnovresult=print_result_of_month(dfnov2019)\ndfnovresult.to_csv(\"cleaned_data_nov19.csv\")\nx={'MONTH':'NOVEMBER 2019','TOTAL_TRAFFIC':print_result(dfnovresult)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfoct2019=cleanning(dfoct2019)\nprint(dfoct2019)\ndfoct19result=print_result_of_month(dfoct2019)\ndfoct19result.to_csv(\"cleaned_data_oct19.csv\")\nx={'MONTH':'OCTOBER 2019','TOTAL_TRAFFIC':print_result(dfoct19result)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n# #-----------------------------------------------------------------\ndfsep2019=cleanning(dfsep2019)\nprint(dfsep2019)\ndfsep19result=print_result_of_month(dfsep2019)\ndfsep19result.to_csv(\"cleaned_data_sep19.csv\")\nx={'MONTH':'SEPTEMBER 2019','TOTAL_TRAFFIC':print_result(dfsep19result)}\ndfresult=dfresult.append(x,ignore_index= True)\nprint(dfresult)\n###################################################\ndfresult.to_csv(\"cleaned_data.csv\")","85c3d9e6":"import matplotlib.pyplot as plt\nimport pandas as pd\n#these are data frames of the months, i displayed them first\n#df1 = pd.read_csv('.\/cleaned_data_oct.csv')\n# df2 = pd.read_csv('.cleaned_data_sep.csv')\n# df3 = pd.read_csv('.\/cleaned_data_aug.csv')\n# df4 = pd.read_csv('.\/cleaned_data_jul.csv')\n# df5 = pd.read_csv('.\/cleaned_data_jun.csv')\n# df6 = pd.read_csv('.\/cleaned_data_may.csv')\n# df7 = pd.read_csv('.\/cleaned_data_apr.csv')\n# df8 = pd.read_csv('.\/cleaned_data_mar.csv')\n# df9 = pd.read_csv('.\/cleaned_data_feb.csv')\n# df10 = pd.read_csv('.\/cleaned_data_jan.csv')\n# df11 = pd.read_csv('.\/cleaned_data_dec.csv')\n# df12 = pd.read_csv('.\/cleaned_data_nov.csv')\n# df13 = pd.read_csv('.\/cleaned_data_oct19.csv')\n# df14 = pd.read_csv('.\/cleaned_data_sep19.csv')\n#dataframe of all the months\ndf = pd.read_csv('.\/cleaned_data.csv')\nprint(df)\nplt.figure(figsize=(25,10))\nplt.gca().invert_xaxis()\nplt.plot(df.MONTH,df.TOTAL_TRAFFIC);\nplt.title('MTA EDA')\nplt.xlabel('Months')\nplt.ylabel('Number of people in 100 millions')\n# plot figures pf the months\n# plt.plot(df1.TOTAL_TRAFFIC,df1.DATE);\n# plt.plot(df2.TOTAL_TRAFFIC,df2.DATE);\n# plt.plot(df3.TOTAL_TRAFFIC,df3.DATE);\n# plt.plot(df4.TOTAL_TRAFFIC,df4.DATE);\n# plt.plot(df5.TOTAL_TRAFFIC,df5.DATE);\n# plt.plot(df6.TOTAL_TRAFFIC,df6.DATE);\n# plt.plot(df7.TOTAL_TRAFFIC,df7.DATE);\n# plt.plot(df8.TOTAL_TRAFFIC,df8.DATE);\n# plt.plot(df9.TOTAL_TRAFFIC,df9.DATE);\n# plt.plot(df10.TOTAL_TRAFFIC,df10.DATE);\n# plt.plot(df11.TOTAL_TRAFFIC,df11.DATE);\n# plt.plot(df12.TOTAL_TRAFFIC,df12.DATE);\n# plt.plot(df13.TOTAL_TRAFFIC,df13.DATE);\n# plt.plot(df14.TOTAL_TRAFFIC,df14.DATE);","c978edc8":"**Here we are importing pandas and creatig dataframes to store the data in it.**","4d8a50a0":"**Steps**\n\n* cleanning\n* get the values of days in one month\n* write the values in a csv file\n* get the total value in one month\n* save the value in dictionary\n* insert the dictionary into the result dataframe, which includes all the months\n* create a csv file with all the months ","8fb484c5":"here we are importing matplotlib, for the representation of the graph.","c156e51c":"**Abstract**\n\nThe metropolitan transportation authority [(MTA)](http:\/\/web.mta.info\/developers\/turnstile.html) has over 400 stations in New York city, and it is for sure that the pandemic has affected them, due to the total and partial lockdown. The goal of this analysis is to know whether the public transportation usage differs before and after the total lockdown that happened in New York City from March 2020 until April 2020, see and visualize how did the pandemic actually affected the public transportation in New York city. \n\n**Data structure**\n\nThe dataset was provided by Metis of the metropolitan transportation authority in New York city. I considered only six months before and after march 2020 and April 2020, in total 14 months. The dataset consists of 204795 and 217832 rows, and 11 columns in each data set. \n\n**Design and algorithm**\n\nFirst, I merged the days in a specific month, then did the cleaning process on the merge result. I added three new columns named: TOTAL_ENTRIES, TOTAL_EXITS, TOTAL_TRAFFIC, the first two calculate the number of people (not cumulative number), and the last for summing the first two in order to get the total traffic, and the three of them are float. Then I calculated the total traffic in one month, and append it to another data frame, in order to easily display the chart without the need to re-run the whole code.\n\n\n**Tools**\n\n* Spyder as developing environment.\n* Pandas for data manipulations.\n* Matplotlib.pyplot for data visualization.\n* Matplotlib.ticker import StrMethodFormatter for the formatting the result. \n\n\n","76b1926d":"**Cleaning**\n\nFor the data cleaning and the analysis, I used five of the existing columns and they are: station, date, time, entries, and exits. The cleaning steps are: Striping the columns of all the white spaces and next line space, dropping the C\\A, unit, linename, division, and the desc columns, converting the date into datetime, dropping outliers, NA values, the negative values after calculations. \n","2f615f65":"**Conclusion and communication**\n\nIn conclusion, there was a change in using public transportation before and after the total lockdown. Moreover, due to the partial lockdown, people were using less public transportation than before march, and after the partial lockdown (after April), people are using public transportation less than before the total lockdown.\n"}}