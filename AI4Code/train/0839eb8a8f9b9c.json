{"cell_type":{"a1a3c00b":"code","c156c354":"code","886cd8f8":"code","f66db9ae":"code","e10a65be":"code","a43a57da":"code","5f5c4bfa":"code","02a831f9":"code","d2c5e76a":"code","322f3003":"code","e077bf47":"code","2f0ddfec":"code","be2765f8":"code","a9c207d3":"code","35c744b3":"code","61a17001":"code","ac63e64f":"code","4c340cef":"code","8876e287":"code","74570d9b":"code","fcb3b962":"code","749102e9":"code","e26f83c1":"code","9232aad5":"markdown","e37e4f74":"markdown","8d5672a7":"markdown","fa78c733":"markdown","0a7e0c4c":"markdown","cc67780a":"markdown","ebeb150c":"markdown","34e1976d":"markdown","150f47b2":"markdown","2a394bbf":"markdown","09a4c4df":"markdown","f93d0267":"markdown","26c2132c":"markdown","1f719eae":"markdown"},"source":{"a1a3c00b":"# Entrada: Lista de n\u00fameros no ordenados\nlistaEntrada = [5, 4, 6, 3, 7, 2, 1, 8]\n# Salida: Lista de n\u00fameros ordenados, inicialmente vac\u00eda\nlistaSalida = []\n\n# Obtenemos el n\u00famero de elementos en la lista (tama\u00f1o de la lista)\nN = len(listaEntrada)\n\nprint(listaEntrada)\n\nprint(\"Tenemos\", N, \"n\u00fameros\")\n\n# Repite un bloque N veces\nfor i in range(N):\n    menor = min(listaEntrada)\n    listaEntrada.remove(menor)\n    listaSalida.append(menor)\n\nprint(listaSalida)","c156c354":"# Retener la edad de una persona\n\n# Entero\nedad = 23\n\n# Decimal (Flotante)\npeso = 45.5\n\n# Decimal (Flotante)\nestatura = 1.72\n    \n# Texto\nnombre = \"John\"\n\n# Texto\napellido_paterno = 'Doe'\n\n# Texto\napellidoMaterno = \"\"\"G\u00f3mez\"\"\"\n\n# Valor L\u00f3gico Verdadero (Booleano \/ Predicados)\nesCasado = True\n\n# Valor L\u00f3gico Falso (Booleano \/ Predicados)\nesEstudiante = False\n\n# Complejo (Real + Imaginaria)\nvibra = 123 + 45j\n\n# Nulo (No definido)\ndireccion = None\n\n# Lista de elementos (Elemento: <valor>)\nfrutas = [\"mango\", \"pera\", \"fresa\"]\n\n# Diccionario (<clave> : <valor>)\ncalificaciones = { \"matematicas\": 8, \"fisica\": 10, \"espa\u00f1ol\": 7, \"educacion_fisica\": 5 }\n\n# Tupla (2-tupla \/ 2-acople <valor>, <valor>)\nubicacion = (99.67, -113.76)","886cd8f8":"title = \"Reporte de Ventas\"\n\nprint(\"+-- {:^72} --+\".format(title))\nprint(\"|\" + \" \" * 78 + \"|\")\nprint(\"|\" + \" \" * 78 + \"|\")\nprint(\"|\" + \" \" * 78 + \"|\")\nprint(\"+\" + \"-\" * 78 + \"+\")\n\n# len(\"--- {:52} ---\".format(title))","f66db9ae":"if True:\n    print(\"Esto s\u00ed se imprime\")","e10a65be":"if False:\n    print(\"Esto no se imprime\")\nelse:\n    print(\"\u00a1Te lo dije!\")","a43a57da":"if 5 > 3:\n    print(\"5 > 3\")","5f5c4bfa":"if 5 > 10:\n    print(\"5 > 10\")\nelse:\n    print(\"5 <= 10\")","02a831f9":"a = 123\nb = 456\n\nif a < b:\n    print(\"a < b\")\nelse:\n    print(\"a >= b\")","d2c5e76a":"a = int( input(\"Dame el valor de a:\") )\nb = float( input(\"Dame el valor de b:\") )\n\nif a < b:\n    print(\"a < b\")\nelse:\n    print(\"a >= b\")","322f3003":"# float( <texto> ) -> <n\u00famero>\n# input( <mensaje> ) -> <texto>\n# float ( input ( \"Pide algo:\" ) ) -> <n\u00famero>\npeso = float( input(\"Dame el peso\") )\nestatura = float( input(\"Dame la estatura\") )\n\nimc = peso \/ estatura ** 2\n\n# Evalucaci\u00f3n en cascada (comprueba la condici\u00f3n y sino se cumple va con la siguiente)\nif imc < 24.5: # \u00bfSe cumple? -> Ejecuta\n    print(\"Peso bajo\", imc)\nelif imc < 28: # \u00bfSe cumple? -> Ejecuta\n    print(\"Peso normal\", imc)\nelif imc < 30: # \u00bfSe cumple? -> Ejecuta\n    print(\"Sobrepeso I\", imc)\nelif imc < 34:\n    print(\"Sobrepeso II\", imc)\nelse:\n    print(\"Sobrepeso III\", imc)","e077bf47":"# Rango Tipo 1: range(N) -> 0, 1, 2, ..., N - 1 (N)\n\nfor n in range(5):\n    print(\"--- Bloque ---\")\n    print(n)\n    print(\"-\" * 14)\n    print()","2f0ddfec":"# Rango Tipo 2: range(a, b) -> a, a + 1, a + 2, ..., b - 2, b - 1 (b - a)\n\nfor i in range(2, 7): # 2, 3, 4, 5, 6 (7 - 2 : 5)\n    print(i)","be2765f8":"# Rango Tipo 3: range(a, b, s) -> a, a + s, a + 2s, a + 3s, ..., b - 1 ((b - a) \/ s)\n\nfor x in range(100, 204, 8): # 100, 108, 116, 124, ..., 188, 196 (\u00bf204 > 204?)\n    print(x)","a9c207d3":"for y in range(200, 100, -20):\n    print(y)","35c744b3":"frutas = [\"mango\", \"manzana\", \"pera\"]\n\nwidth = 800\nheight = 600\n\nfor fruta in frutas:\n    url = \"http:\/\/fruta.com\/{}.png?size={}x{}\".format(fruta, width, height)\n    print(url)","61a17001":"\"Hola {}, \u00bfC\u00f3mo est\u00e1s?\"","ac63e64f":"nombre = \"J\u00f3se Juan\"\n\n\"Hola {}, \u00bfC\u00f3mo est\u00e1s?\".format(nombre)","4c340cef":"\"Hola soy {} y tengo {} a\u00f1os\".format(\"Anita\", 23)","8876e287":"\"El total es de ${:.2f} con descuento del %{:.1f}\".format(23.678, 12.56)","74570d9b":"while True:\n    print(\"Esto se repetir\u00e1 por siempre!!!\")\n    break # rompe el ciclo al llegar aqu\u00ed","fcb3b962":"while True:\n    respuesta = input(\"Deseas continuar? [y\/n]:\")\n    if respuesta != \"y\":\n        break","749102e9":"n = 1\nwhile n < 10: # Si la condici\u00f3n no se actualiza el ciclo se repetir\u00e1 siempre\n    print(n)\n    n = n + 1 # CUIDADO: No olviden actualizar la condici\u00f3n","e26f83c1":"while True:\n    print(\"--- Mini Ocso ---\")\n    print(\"1. Agregar una fruta\")\n    print(\"2. Buscar una fruta\")\n    print(\"3. Comprar una fruta\")\n    print(\"---\")\n    print(\"X. Salir\")\n    \n    opcion = input(\"Selecciona una opci\u00f3n\")\n    \n    if opcion == \"1\":\n        print(\"Se agreg\u00f3 la fruta\")\n    elif opcion == \"2\":\n        print(\"La fruta es mango\")\n    elif opcion == \"3\":\n        print(\"El total es de $84.90\")\n    elif opcion == \"X\":\n        break\n    else:\n        print(\"No te entiendo\")","9232aad5":"#### Soluci\u00f3n en Python","e37e4f74":"> **Condicionales** - `if <condici\u00f3n>: <bloque> [elif <condici\u00f3n 2>: <bloque 2>] ... [elif <condici\u00f3n N>: <bloque N>] [else: <bloque negado>]`","8d5672a7":"### Python Format\n\n[https:\/\/pyformat.info](https:\/\/pyformat.info)\n\n```text\n<texto> -> <plantilla>\n\n\"Hola Roberto, \u00bfC\u00f3mo est\u00e1s?\"\n\n\"Hola %s, \u00bfC\u00f3mo est\u00e1s?\"\n\n\"Hola {}, \u00bfC\u00f3mo est\u00e1s?\"\n\n\"Hola soy {} y tengo {} a\u00f1os\"\n\n\"El total es de ${:.2f} con descuento del %{:.1f}\"\n```","fa78c733":"## Ejercicios","0a7e0c4c":"> **Ciclos condicionales** - `while <codici\u00f3n>: <bloque>`","cc67780a":"## Sintaxis de Python","ebeb150c":"> **Variables** - `<nombre> = <valor>`","34e1976d":"# Introducci\u00f3n a Python\n\n## \u00bfQu\u00e9 es la programaci\u00f3n?\n\n> `Reducir l\u00f3gica para resolver problemas mediante m\u00e1quinas`\n\n> `Es la forma de definir c\u00f3digo a trav\u00e9s de un lenguaje computable`","150f47b2":"### 2. Calcular el \u00e1gulo asociado al lado C de un tri\u00e1ngulo escaleno dados los lados A, B, C\n\n`C^2 = A^2 + B^2 - 2 * A * B * cos(c)`\n\n`cos(c) = (C^2 - A^2 - B^2) \/ (2 * A * B)`\n\n`c = acos(C^2 - A^2 - B^2) \/ (2 * A * B)`","2a394bbf":"### Ejemplos\n\n> Ordenar una lista de n\u00fameros de forma ascendente\n\n```text\nEntrada: 5, 4, 6, 3, 7, 2, 1, 8\n\nSalida: 1, 2, 3, 4, 5, 6, 7, 8\n\n---\n(1)\n5, 4, 6, 3, 7, 2, (1), 8 -> []\n5, 4, 6, 3, 7, 2, (1), 8 -> [1]\n5, 4, 6, 3, 7, 2, 8 -> [1]\n5, 4, 6, 3, 7, 2, 8 -> [1] 1\n\n(2)\n5, 4, 6, 3, 7, (2), 8 -> []\n5, 4, 6, 3, 7, (2), 8 -> [2]\n5, 4, 6, 3, 7, 8 -> [2]\n5, 4, 6, 3, 7, 8 -> [2] 1, 2\n\n(3)\n5, 4, 6, (3), 7, 8 -> []\n5, 4, 6, (3), 7, 8 -> [3]\n5, 4, 6, 7, 8 -> [3]\n5, 4, 6, 7, 8 -> [3] 1, 2, 3\n\n...\n\n(N = 8)\n(8) -> [] 1, 2, 3, 4, 5, 6, 7\n(8) -> [8] 1, 2, 3, 4, 5, 6, 7\n. -> [8] 1, 2, 3, 4, 5, 6, 7\n. -> [8] 1, 2, 3, 4, 5, 6, 7, 8\n\n# REPITE N VECES:\n    # 1. Buscar el menor en la lista de entrada\n    # 2. Retener el menor en una variable\n    # 3. Quitar el menor de la lista de entrada\n    # 4. Agregar el menor a la lista de salida\n```","09a4c4df":"### 1. Calcular la hipotenusa de un tri\u00e1ngulo rect\u00e1ngulo\n\n`C^2 = A^2 + B^2`\n\n* C - Hipotenusa\n* A, B - Catetos","f93d0267":"> **Iteradores** - `for <elemento> in <secuencia>: <bloque (elemento)>`","26c2132c":"### 3. Calcular la suma de la lista [45, 67, 89, 92, 34, 6, 17]","1f719eae":"## Algoritmos\n\n> `Son procesos secuenciales definidos que gu\u00edan un flujo de operaciones`\n\n> `Sentencia` - Instrucci\u00f3n limitada para la m\u00e1quina\n\n> `Expresi\u00f3n` - Aritm\u00e9tica y L\u00f3gica\n\n> `Asignaci\u00f3n` - Es retener valores en variables (etiquetas de memoria)\n\n> `Llamado a la funci\u00f3n` - Pasa par\u00e1metros a una funci\u00f3n definida para obtener un \u00fanico resultado\n\n> `Condicional` - Es una estructura que permite ejecutar bloques de c\u00f3digo basado en condiciones (valores l\u00f3gicos)\n\n> `Iterador` - Es una estructura que permite repetir un bloque con acceso a un elemento (iterando) tomado desde una secuencia (iterable) para cada elemento\n\n> `Ciclo Condicional` - Es una estructura que permite repetir un bloque basado en una condici\u00f3n"}}