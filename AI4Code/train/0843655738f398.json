{"cell_type":{"5de4e0f4":"code","39bd25aa":"code","49249c9e":"code","717c7999":"code","99821156":"code","3412900f":"code","95a59dc9":"code","59713572":"code","7b3d6bfd":"code","ce525f25":"code","11e1b2bf":"code","1a70711a":"code","8df42318":"code","7eb3d877":"code","4c9f1852":"code","b03ac9e9":"code","53e4895b":"code","71482084":"code","80ce17da":"code","c43ea78b":"code","abd7341e":"code","5a746a62":"code","da35ac34":"code","6b97d5b4":"code","4a0f02ce":"code","21905347":"code","1775b8f2":"code","1197a52c":"markdown"},"source":{"5de4e0f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39bd25aa":"# reading Titanic train data.csv\ndf = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf.head(10)","49249c9e":"print(\"Shape:\\n\",df.shape)\nprint(\"Info:\\n\",df.info())","717c7999":"df.isna().sum()","99821156":"df = df.drop(['PassengerId','Name','Ticket','Cabin'],axis = 1)\ndf = df.dropna(subset = ['Age','Embarked'])\nprint(df.shape)\ndf.head()","3412900f":"# data statistics\ndf.describe()","95a59dc9":"df.groupby('Survived')[['Age']].mean()","59713572":"print(pd.crosstab(df['Survived'],df['Sex']))\nprint('\\n\\n')\nprint(pd.crosstab(df['Survived'],[df['Sex'],df['Pclass']]))","7b3d6bfd":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","ce525f25":"plt.subplot(1,2,1)\nsns.countplot(df['Sex'],hue = df['Survived'])\nplt.subplot(1,2,2)\nsns.countplot(df['Pclass'],hue = df['Survived'])","11e1b2bf":"plt.subplot(1,2,1)\nsns.countplot(df['Parch'],hue = df['Survived'])\nplt.subplot(1,2,2)\nsns.countplot(df['SibSp'],hue = df['Survived'])","1a70711a":"print(pd.crosstab(df['Survived'],df['Embarked']))\nsns.countplot(df['Embarked'],hue=df['Survived'])","8df42318":"print(pd.crosstab(df['Survived'],df['Pclass']))\nsns.FacetGrid(df,hue='Survived',size=6).map(plt.scatter,'Pclass','Fare').add_legend()","7eb3d877":"sns.FacetGrid(df, col = 'Pclass', hue = 'Survived').map(plt.hist, 'Age', alpha = 0.7).add_legend()","4c9f1852":"print(df['Sex'].unique())\nprint(df['Embarked'].unique())","b03ac9e9":"from sklearn.preprocessing import LabelEncoder\n\nenc = LabelEncoder()\ndf['Sex'] = enc.fit_transform(df['Sex'].values)\ndf['Embarked'] = enc.fit_transform(df['Embarked'].values)","53e4895b":"print(df['Sex'].unique())\nprint(df['Embarked'].unique())\ndf.head()","71482084":"X = df.iloc[:,1:]\nY = df['Survived']","80ce17da":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntdf = test.drop(['Cabin','PassengerId','Name','Ticket'],axis = 1)","c43ea78b":"tdf['Age'].fillna(round(tdf['Age'].mean()),inplace=True)\ntdf['Fare'].fillna(round(tdf['Fare'].mean()),inplace=True)","abd7341e":"enc_ = LabelEncoder()\ntdf['Sex'] = enc_.fit_transform(tdf['Sex'].values)\ntdf['Embarked'] = enc_.fit_transform(tdf['Embarked'].values)","5a746a62":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)\ntdf = sc.transform(tdf)","da35ac34":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier()\nclassifier.fit(X,Y)","6b97d5b4":"train_pred = classifier.predict(X)\ntest_pred = classifier.predict(tdf)","4a0f02ce":"from sklearn.metrics import accuracy_score,confusion_matrix\n\nprint('Confusion_matrix:\\n',confusion_matrix(Y,train_pred))\nprint('\\n')\nprint(\"Accuracy: \",accuracy_score(Y,train_pred))","21905347":"test['Survived']= test_pred","1775b8f2":"test[['PassengerId','Survived']].to_csv('result.csv',index=False)\n","1197a52c":"* From the above info we can see that age,cabin & embarked are having missing values\n* More than 50% of the cabin column data is missing, hence dropping the cabin column"}}