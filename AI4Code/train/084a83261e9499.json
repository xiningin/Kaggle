{"cell_type":{"f8aa8282":"code","f945bb76":"code","9da9b210":"code","6ae68d53":"code","63b40ba2":"code","fe619975":"code","40941d84":"code","3fd1e8e0":"code","c623b1d1":"code","7a27582f":"code","b196193a":"code","610976d5":"code","feb0cc0b":"code","94b6a572":"code","ce567f3a":"code","65eb81ec":"code","af8bc6d4":"code","319ce9ce":"code","2e7b177b":"code","ac17d930":"code","069aadfb":"code","2e07dbe5":"code","2311d56e":"code","8e125225":"markdown","90c04e69":"markdown","a24eedb3":"markdown","3c1d4f05":"markdown","c1d14a7a":"markdown","bf899427":"markdown","094f9c60":"markdown","9ff08b6b":"markdown","0288ae12":"markdown","f6d62cc1":"markdown","5546b84c":"markdown","83d2a31e":"markdown","ab115208":"markdown","92d9b26c":"markdown","072fb430":"markdown","f616ecb3":"markdown","05f6d650":"markdown","49b4d306":"markdown"},"source":{"f8aa8282":"!pip install seaborn==0.11","f945bb76":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport matplotlib.gridspec as gridspec \n\nfrom matplotlib.offsetbox import AnchoredText\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(action='ignore')\nplt.rcParams['figure.dpi'] = 200 #high resolution","9da9b210":"data = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nquestions = data.iloc[0, :].T\ndata = data.iloc[1:, :]\n","6ae68d53":"# Q1 & Q2 Analysis\nfig, ax = plt.subplots(1,1, figsize=(15, 6))\ndata_q1 = data['Q1'].value_counts().sort_index()\nax.bar(data_q1.index, data_q1, width=0.55, \n       edgecolor='darkgray', color='#d4dddd',\n       linewidth=0.7)\n\nfor i in data_q1.index:\n    ax.annotate(f\"{data_q1[i]}\", \n                   xy=(i, data_q1[i] + 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nax.set_ylim(0, 4200)    \nax.set_xticklabels(data_q1.index, fontfamily='serif')\nax.set_yticklabels(np.arange(0, 4001, 500),fontfamily='serif')\nfig.text(0.1, 0.95, 'Age Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nax.grid(axis='y', linestyle='-', alpha=0.4)    \nplt.show()","63b40ba2":"# Q2 Analysis\ndata['Q2'] = data['Q2'].apply(lambda x : 'ETC' if x not in ['Man', 'Woman'] else x)\ndata_q1q2 = data[data['Q2'] != 'ETC'].groupby(['Q2'])['Q1'].value_counts().unstack().sort_index()\nman = data_q1q2.loc['Man']\nwoman = -data_q1q2.loc['Woman']\n\nfig, ax = plt.subplots(1,1, figsize=(15, 6))\nax.bar(man.index, man, width=0.55, color='#004c70', alpha=0.8, label='Male')\nax.bar(woman.index, woman, width=0.55, color='#990000', alpha=0.8, label='Female')\nax.set_ylim(-1200, 3500)\n\nfor i in man.index:\n    ax.annotate(f\"{man[i]}\", \n                   xy=(i, man[i] + 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n    \nfor i in woman.index:\n    ax.annotate(f\"{-woman[i]}\", \n                   xy=(i, woman[i] - 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')    \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_q1q2.columns, fontfamily='serif')\nax.set_yticks([])    \nax.legend()\nfig.text(0.16, 0.95, 'Age \/ Gender Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nplt.show()","fe619975":"q3_order = data['Q3'].value_counts()[:11].drop('Other').index\ndata_q2q3 = data[['Q2', 'Q3']].groupby('Q3')['Q2'].value_counts().unstack().loc[q3_order]\ndata_q2q3['sum'] = data_q2q3.sum(axis=1)\ndata_q2q3_ratio = (data_q2q3.T \/ data_q2q3['sum']).T[['Man', 'Woman', 'ETC']].rename(index={'United States of America':'USA', 'United Kingdom of Great Britain and Northern Ireland': 'UK'})[::-1]","40941d84":"fig, ax = plt.subplots(1,1,figsize=(12, 6),)\n\nax.barh(data_q2q3_ratio.index, data_q2q3_ratio['Man'], \n        color='#004c70', alpha=0.7, label='Man')\nax.barh(data_q2q3_ratio.index, data_q2q3_ratio['Woman'], left=data_q2q3_ratio['Man'], \n        color='#990000', alpha=0.7, label='Woman')\nax.barh(data_q2q3_ratio.index, data_q2q3_ratio['ETC'], left=data_q2q3_ratio['Man']+data_q2q3_ratio['Woman'], \n        color='#4a4a4a', alpha=0.7, label='ETC')\n\nax.set_xlim(0, 1)\nax.set_xticks([])\nax.set_yticklabels(data_q2q3_ratio.index, fontfamily='serif', fontsize=11)\n\n# male percentage\nfor i in data_q2q3_ratio.index:\n    ax.annotate(f\"{data_q2q3_ratio['Man'][i]*100:.3}%\", \n                   xy=(data_q2q3_ratio['Man'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=9, fontweight='light', fontfamily='serif',\n                   color='white')\n\nfor i in data_q2q3_ratio.index:\n    ax.annotate(f\"{data_q2q3_ratio['Woman'][i]*100:.3}%\", \n                   xy=(data_q2q3_ratio['Man'][i]+data_q2q3_ratio['Woman'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=9, fontweight='light', fontfamily='serif',\n                   color='white')\n    \n\nfig.text(0.13, 0.95, 'Top10 Country : Gender Distribution', fontsize=15, fontweight='bold', fontfamily='serif')   \nfig.text(0.131, 0.91, 'Percent Stacked Bar Chart', fontsize=12,fontfamily='serif')   \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n    \nax.legend(loc='lower center', ncol=3, bbox_to_anchor=(0.5, -0.06))\nplt.show()","3fd1e8e0":"q4_order = [\n    'No formal education past high school',\n    'Professional degree',\n    'Some college\/university study without earning a bachelor\u2019s degree',\n    'Bachelor\u2019s degree',\n    'Master\u2019s degree',\n    'Doctoral degree',\n    'I prefer not to answer'\n]\n\ndata_q4 = data['Q4'].value_counts()[q4_order]\n\nfig, ax = plt.subplots(1,1, figsize=(12, 6))\nax.bar(data_q4.index, data_q4, width=0.55, \n       edgecolor='darkgray', color=sns.color_palette(\"crest\", 7),\n       linewidth=0.7)\n\nfor i in data_q4.index:\n    ax.annotate(f\"{data_q4[i]}\", \n                   xy=(i, data_q4[i] + 300),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_q4.index, fontfamily='serif', rotation=90)\nfig.text(0.09, 0.95, 'Education Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nax.grid(axis='y', linestyle='-', alpha=0.4)    \nplt.show()","c623b1d1":"q6_order = [\n      'I have never written code', '< 1 years', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20+ years',\n]\n\ndata_q6 = data['Q6'].value_counts()[q6_order]\n\nfig, ax = plt.subplots(1,1, figsize=(12, 6))\nax.bar(data_q6.index, data_q6, width=0.55, \n       edgecolor='darkgray', color=sns.color_palette(\"crest\", 7),\n       linewidth=0.6)\n\nfor i in data_q6.index:\n    ax.annotate(f\"{data_q6[i]}\", \n                   xy=(i, data_q6[i] + 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_q6.index, fontfamily='serif', rotation=90)\n\nfig.text(0.09, 0.95, 'Experience Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nax.grid(axis='y', linestyle='-', alpha=0.4)    \nplt.show()","7a27582f":"data['count'] = 1\nfig, ax = plt.subplots(1, 1, figsize=(12, 12))\nsns.heatmap(pd.pivot_table(data, values='count', index=['Q6'], columns=['Q4'], aggfunc=np.sum).loc[q6_order, q4_order], \n            cmap=\"YlGnBu\",\n            square=True, \n            linewidth=2.5, \n            cbar=False, \n            ax=ax,\n            annot=True,\n            fmt=\"d\"\n           )\n\nax.spines['top'].set_visible(True)\n\nfig.text(0.48, 1, 'Pivot Table : Education & Experience', fontweight='bold', fontfamily='serif', fontsize=15)   \n\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='serif', rotation = 0, fontsize=11)\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='serif', rotation=90, fontsize=11)\n\nplt.tight_layout()\nplt.show()","b196193a":"data_q14 = data[[i for i in data.columns if 'Q14' in i]]\ndata_q14_count = pd.Series(dtype='int')\nfor i in data_q14.columns:\n    data_q14_count[data_q14[i].value_counts().index[0]] = data_q14[i].count()\n    \n# Q14\n\ncolors = ['lightgray'] * 14 \ncolors[0] = colors[1] = colors[3] = '#02080F'\ncolors[2] = colors[4] = colors[6] = colors[7] = '#522e75'\ncolors[8] = colors[9] = '#714e3d'\n\nfig, ax = plt.subplots(1,1, figsize=(15, 6))\nax.bar(data_q14_count.index, data_q14_count, width=0.55, \n       edgecolor='darkgray', color=colors,\n       linewidth=0.7)\n\nfor i in data_q14_count.index:\n    ax.annotate(f\"{data_q14_count[i]}\", \n                   xy=(i, data_q14_count[i] + 500),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_q14_count.index, fontfamily='serif', rotation=40)\nfig.text(0.13, 0.95, 'Visualization Library', fontsize=15, fontweight='bold', fontfamily='serif')    \nax.grid(axis='y', linestyle='-', alpha=0.4)    \n\nstatic = mpatches.Patch(color='#02080F', label='static')\ninteractive = mpatches.Patch(color='#522e75', label='interactive')\ngeo = mpatches.Patch(color='#714e3d', label='geospatial')\n\nplt.legend(handles=[static, interactive, geo], fontsize=13)\n\nplt.show()","610976d5":"q5_order = ['Business Analyst'\n ,'Data Analyst'\n ,'Data Engineer'\n ,'Data Scientist'\n ,'DBA\/Database Engineer'\n ,'Machine Learning Engineer'\n ,'Product\/Project Manager'\n ,'Research Scientist'\n ,'Software Engineer'\n ,'Statistician'\n ,'Student'\n ,'Currently not employed'\n ,'Other']\n\nq15_order = [\n    'I do not use machine learning methods'\n    ,'Under 1 year'\n    ,'1-2 years'\n    ,'2-3 years'\n    ,'3-4 years'\n    ,'4-5 years'\n    ,'5-10 years'\n    ,'10-20 years'\n    ,'20 or more years']\n\n\n\ndata_q5q15 = pd.pivot_table(data, values='count', index=['Q5'], columns=['Q15'], aggfunc=np.sum).fillna(0).astype(int).loc[q5_order, q15_order].stack()\ndata_q5q15_man = pd.pivot_table(data[data['Q2']=='Man'], values='count', index=['Q5'], columns=['Q15'], aggfunc=np.sum).fillna(0).astype(int).loc[q5_order, q15_order].stack()\ndata_q5q15_woman = pd.pivot_table(data[data['Q2']=='Woman'], values='count', index=['Q5'], columns=['Q15'], aggfunc=np.sum).fillna(0).astype(int).loc[q5_order, q15_order].stack()","feb0cc0b":"# https:\/\/stackoverflow.com\/questions\/56337732\/how-to-plot-scatter-pie-chart-using-matplotlib\ndef drawPieMarker(xs, ys, ratios, sizes, colors, ax):\n    markers = []\n    previous = 0\n    # calculate the points of the pie pieces\n    for color, ratio in zip(colors, ratios):\n        this = 2 * np.pi * ratio + previous\n        x  = [0] + np.cos(np.linspace(previous, this, 30)).tolist() + [0]\n        y  = [0] + np.sin(np.linspace(previous, this, 30)).tolist() + [0]\n        xy = np.column_stack([x, y])\n        previous = this\n        markers.append({'marker':xy, 's':np.abs(xy).max()**2*np.array(sizes), 'facecolor':color})\n\n    # scatter each of the pie pieces to create pies\n    for marker in markers:\n        ax.scatter(xs, ys, **marker, alpha=0.7)","94b6a572":"\nfig = plt.figure(figsize=(20, 23), dpi=200)\n\ngs = fig.add_gridspec(5, 5)\n\n\n\nax_plot = fig.add_subplot(gs[1:4, 0:4]) \nfor q5_idx in q5_order[::-1]:\n    for q15_idx in q15_order:\n        man = data_q5q15_man[q5_idx][q15_idx]\n        woman = data_q5q15_woman[q5_idx][q15_idx]\n        tot = data_q5q15[q5_idx][q15_idx]\n        drawPieMarker([q15_idx],[q5_idx], [man\/(man+woman), woman\/(man+woman)] ,[tot*2.5], ['#004c70', '#990000'], ax=ax_plot)\n\nax_plot.grid(linewidth=0.2, zorder=0)        \n\nax_plot.set_yticklabels(q5_idx, fontfamily='serif', fontsize=15)\nax_plot.set_xticklabels(q15_idx, fontfamily='serif', fontsize=15, rotation=90)\n\n# Pos\nax_pos = fig.add_subplot(gs[0, :4], sharex=ax_plot) \ndata_q15_woman = data[data['Q2']=='Woman']['Q15'].value_counts()[q15_order]\nax_pos.bar(data_q15_woman.index, data_q15_woman, width=0.45, alpha=0.7, color='#990000')\n\ndata_q15_man = data[data['Q2']=='Man']['Q15'].value_counts()[q15_order]\nax_pos.bar(data_q15_man.index, data_q15_man, bottom=data_q15_woman , width=0.45, alpha=0.7, color='#004c70')\n\nplt.setp(ax_pos.get_xticklabels(), visible=False)\n\n\n# Exp\nax_exp = fig.add_subplot(gs[1:4, 4], sharey=ax_plot) \n\ndata_q5_woman = data[data['Q2']=='Woman']['Q5'].value_counts()[q5_order]\nax_exp.barh(data_q5_woman.index[::-1], data_q5_woman[::-1], height=0.55, alpha=0.7, color='#990000')\n\ndata_q5_man = data[data['Q2']=='Man']['Q5'].value_counts()[q5_order]\nax_exp.barh(data_q5_man.index[::-1], data_q5_man[::-1], left= data_q5_woman[::-1],height=0.55, alpha=0.7, color='#004c70')\n\nplt.setp(ax_exp.get_yticklabels(), visible=False)\n\n# Spines\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax_plot.spines[s].set_visible(False)\n    ax_pos.spines[s].set_visible(False)\n    ax_exp.spines[s].set_visible(False)\n    \n\nfig.text(0.8, 0.9, 'Gender & Position & ML Experience', fontweight='bold', fontfamily='serif', fontsize=35, ha='right') \nfig.text(0.8, 0.88, 'Stacked Bar Chart + Categorical Bubble Pie Chart', fontweight='light', fontfamily='serif', fontsize=20, ha='right')\n# plt.tight_layout()\nplt.show()","ce567f3a":"fig = plt.figure(figsize=(20, 23), dpi=200)\n\ngs = fig.add_gridspec(5, 5)\n\n\n\nax_plot = fig.add_subplot(gs[1:4, 0:4]) \nfor q5_idx in q5_order[::-1]:\n    for q15_idx in q15_order:\n        man = data_q5q15_man[q5_idx][q15_idx]\n#         woman = data_q5q15_woman[q5_idx][q15_idx]\n        ax_plot.scatter(q15_idx, q5_idx, s=man, color='#004c70')\n\n\nax_plot.grid(linewidth=0.2, zorder=0)        \n\nax_plot.set_yticklabels(q5_idx, fontfamily='serif', fontsize=15)\nax_plot.set_xticklabels(q15_idx, fontfamily='serif', fontsize=15, rotation=90)\n\n# Pos\nax_pos = fig.add_subplot(gs[0, :4], sharex=ax_plot) \ndata_q15_woman = data[data['Q2']=='Man']['Q15'].value_counts()[q15_order]\nax_pos.bar(data_q15_woman.index, data_q15_woman, width=0.45, alpha=0.7, color='#004c70')\n\nplt.setp(ax_pos.get_xticklabels(), visible=False)\n\n\n# Exp\nax_exp = fig.add_subplot(gs[1:4, 4], sharey=ax_plot) \n\ndata_q5_woman = data[data['Q2']=='Man']['Q5'].value_counts()[q5_order]\nax_exp.barh(data_q5_woman.index[::-1], data_q5_woman[::-1], height=0.55, alpha=0.7, color='#004c70')\n\nplt.setp(ax_exp.get_yticklabels(), visible=False)\n\n# Spines\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax_plot.spines[s].set_visible(False)\n    ax_pos.spines[s].set_visible(False)\n    ax_exp.spines[s].set_visible(False)\n    \n\nfig.text(0.8, 0.9, '[Man] Position & ML Experience', fontweight='bold', fontfamily='serif', fontsize=35, ha='right') \nfig.text(0.8, 0.88, 'Stacked Bar Chart + Categorical Bubble Pie Chart', fontweight='light', fontfamily='serif', fontsize=20, ha='right')\n# plt.tight_layout()\nplt.show()","65eb81ec":"\nfig = plt.figure(figsize=(20, 23), dpi=200)\n\ngs = fig.add_gridspec(5, 5)\n\n\n\nax_plot = fig.add_subplot(gs[1:4, 0:4]) \nfor q5_idx in q5_order[::-1]:\n    for q15_idx in q15_order:\n#         man = data_q5q15_man[q5_idx][q15_idx]\n        woman = data_q5q15_woman[q5_idx][q15_idx]\n        ax_plot.scatter(q15_idx, q5_idx, s=woman*3, color='#990000')\n\n\nax_plot.grid(linewidth=0.2, zorder=0)        \n\nax_plot.set_yticklabels(q5_idx, fontfamily='serif', fontsize=15)\nax_plot.set_xticklabels(q15_idx, fontfamily='serif', fontsize=15, rotation=90)\n\n# Pos\nax_pos = fig.add_subplot(gs[0, :4], sharex=ax_plot) \ndata_q15_woman = data[data['Q2']=='Woman']['Q15'].value_counts()[q15_order]\nax_pos.bar(data_q15_woman.index, data_q15_woman, width=0.45, alpha=0.7, color='#990000')\n\nplt.setp(ax_pos.get_xticklabels(), visible=False)\n\n\n# Exp\nax_exp = fig.add_subplot(gs[1:4, 4], sharey=ax_plot) \n\ndata_q5_woman = data[data['Q2']=='Woman']['Q5'].value_counts()[q5_order]\nax_exp.barh(data_q5_woman.index[::-1], data_q5_woman[::-1], height=0.55, alpha=0.7, color='#990000')\n\nplt.setp(ax_exp.get_yticklabels(), visible=False)\n\n# Spines\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax_plot.spines[s].set_visible(False)\n    ax_pos.spines[s].set_visible(False)\n    ax_exp.spines[s].set_visible(False)\n    \n\nfig.text(0.8, 0.9, '[Woman] Position & ML Experience', fontweight='bold', fontfamily='serif', fontsize=35, ha='right') \nfig.text(0.8, 0.88, 'Stacked Bar Chart + Categorical Bubble Pie Chart', fontweight='light', fontfamily='serif', fontsize=20, ha='right')\n# plt.tight_layout()\nplt.show()","af8bc6d4":"q24_order = ['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999', '5,000-7,499', '7,500-9,999',\n'10,000-14,999','15,000-19,999', '20,000-24,999', '25,000-29,999', '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999', '70,000-79,999', '80,000-89,999', '90,000-99,999',\n'100,000-124,999', '125,000-149,999',  '150,000-199,999', '200,000-249,999',  '250,000-299,999', '300,000-500,000', '> $500,000']\n\ndata_q24 = data['Q24'].value_counts()[q24_order]","319ce9ce":"fig, ax = plt.subplots(1,1, figsize=(20, 6), dpi=200)\nax.bar(data_q24.index, data_q24, width=0.55, \n       edgecolor='black', color=sns.light_palette(\"seagreen\", len(data_q24)),\n       linewidth=0.6)\n\nax.plot(data_q24.index, data_q24, c='k', linewidth=0.6)\n\nfor i in data_q24.index:\n    ax.annotate(f\"{data_q24[i]\/data_q24.sum()*100:.2f}%\", \n                   xy=(i, data_q24[i] + 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#2a2a2a')\n\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_q24.index, fontfamily='serif', rotation=90)\n\nfig.text(0.13, 0.97, 'Earn Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nax.grid(axis='y', linestyle='-', alpha=0.4)    \nplt.show()","2e7b177b":"# Q2 Analysis\nman = data[data['Q2']=='Man']['Q24'].value_counts()[q24_order]\nwoman = -data[data['Q2']=='Woman']['Q24'].value_counts()[q24_order]\n\nfig, ax = plt.subplots(1,1, figsize=(15, 6))\nax.bar(man.index, man, width=0.7, color='#004c70', alpha=0.8, label='Male')\nax.bar(woman.index, woman, width=0.7, color='#990000', alpha=0.8, label='Female')\nax.set_ylim(-700, 2000)\n\nfor i in man.index:\n    ax.annotate(f\"{man[i]}\", \n                   xy=(i, man[i] + 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')\n    \nfor i in woman.index:\n    ax.annotate(f\"{-woman[i]}\", \n                   xy=(i, woman[i] - 100),\n                   va = 'center', ha='center',fontweight='light', fontfamily='serif',\n                   color='#4a4a4a')    \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(q24_order, fontfamily='serif', rotation=90)\nax.set_yticks([])   \nax.legend()\nfig.text(0.16, 0.95, 'Earn & Gender Distribution', fontsize=15, fontweight='bold', fontfamily='serif')    \nplt.show()","ac17d930":"data_q5q24 = pd.pivot_table(data, values='count', index=['Q5'], columns=['Q24'], aggfunc=np.sum).fillna(0).astype(int).loc[:,q24_order]\n\ndata_q5q24 = (data_q5q24.T \/data_q5q24.sum(axis=1)).cumsum()","069aadfb":"data_q5q24 = pd.pivot_table(data, values='count', index=['Q5'], columns=['Q24'], aggfunc=np.sum).fillna(0).astype(int).loc[:,q24_order]\ndata_q5q24 = (data_q5q24.T \/data_q5q24.sum(axis=1))#.rename(columns={'United States of America':'USA', 'United Kingdom of Great Britain and Northern Ireland': 'UK'})\n\ncolors=sns.light_palette(\"seagreen\", len(data_q24))\n\nfig, ax = plt.subplots(6, 2,figsize=(15, 22), sharex=True)\n\nfor idx, q5_idx in enumerate(data_q5q24.columns):\n\n\n    ax[idx%6][idx\/\/6].bar(data_q5q24[q5_idx].index, data_q5q24[q5_idx], color=colors, edgecolor='black', linewidth=0.4, width=0.6)\n    ax[idx%6][idx\/\/6].set_yticks([])\n    for s in ['top', 'bottom', 'left', 'right']:\n        ax[idx%6][idx\/\/6].spines[s].set_linewidth(0.5)\n    \n    divider = make_axes_locatable(ax[idx%6][idx\/\/6])\n    cax = divider.append_axes(\"top\", size=\"11%\", pad=0)\n    cax.get_xaxis().set_visible(False)\n    cax.get_yaxis().set_visible(False)\n    cax.set_facecolor('black')\n\n    at = AnchoredText(q5_idx, loc=10, \n                      prop=dict(backgroundcolor='black',\n                                size=12, color='white', weight='bold'))\n    cax.add_artist(at)\n    \nax[-1][0].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\nax[-1][1].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\n\nax[-1][-1].set_visible(False)\n\nfig.suptitle('Job & Earn Distribution', fontsize=17, fontweight='bold', fontfamily='serif', y=1.03)\n\nplt.tight_layout()\n# plt.subplots_adjust(hspace=0.25)\nplt.show()","2e07dbe5":"data_q3q24 = pd.pivot_table(data, values='count', index=['Q3'], columns=['Q24'], aggfunc=np.sum).fillna(0).astype(int).loc[q3_order,q24_order]\ndata_q3q24 = (data_q3q24.T \/data_q3q24.sum(axis=1)).rename(columns={'United States of America':'USA', 'United Kingdom of Great Britain and Northern Ireland': 'UK'})\n\nfig, ax = plt.subplots(5, 2,figsize=(15, 22), sharex=True)\n\nfor idx, q3_idx in enumerate(data_q3q24.columns):\n\n\n    ax[idx%5][idx\/\/5].bar(data_q3q24[q3_idx].index, data_q3q24[q3_idx], color=colors, edgecolor='black', linewidth=0.4, width=0.6)\n    ax[idx%5][idx\/\/5].set_yticks([])\n    for s in ['top', 'bottom', 'left', 'right']:\n        ax[idx%5][idx\/\/5].spines[s].set_linewidth(0.5)\n    \n    divider = make_axes_locatable(ax[idx%5][idx\/\/5])\n    cax = divider.append_axes(\"top\", size=\"11%\", pad=0)\n    cax.get_xaxis().set_visible(False)\n    cax.get_yaxis().set_visible(False)\n    cax.set_facecolor('black')\n\n    at = AnchoredText(q3_idx, loc=10, \n                      prop=dict(backgroundcolor='black',\n                                size=12, color='white', weight='bold'))\n    cax.add_artist(at)\n    \nax[-1][0].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\nax[-1][1].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\n\nfig.suptitle('Country & Earn Distribution', fontsize=17, fontweight='bold', fontfamily='serif', y=1.03)\n\nplt.tight_layout()\n# plt.subplots_adjust(hspace=0.25)\nplt.show()","2311d56e":"data_q6q24 = pd.pivot_table(data, values='count', index=['Q6'], columns=['Q24'], aggfunc=np.sum).fillna(0).astype(int).loc[q6_order,q24_order]\ndata_q6q24 = (data_q6q24.T \/data_q6q24.sum(axis=1))#.rename(columns={'United States of America':'USA', 'United Kingdom of Great Britain and Northern Ireland': 'UK'})\n\nfig, ax = plt.subplots(4, 2,figsize=(15, 15), sharex=True)\n\nfor idx, q6_idx in enumerate(data_q6q24.columns):\n\n\n    ax[idx%4][idx\/\/4].bar(data_q6q24[q6_idx].index, data_q6q24[q6_idx], color=colors, edgecolor='black', linewidth=0.4, width=0.6)\n    ax[idx%4][idx\/\/4].set_yticks([])\n    for s in ['top', 'bottom', 'left', 'right']:\n        ax[idx%4][idx\/\/4].spines[s].set_linewidth(0.5)\n    \n    divider = make_axes_locatable(ax[idx%4][idx\/\/4])\n    cax = divider.append_axes(\"top\", size=\"11%\", pad=0)\n    cax.get_xaxis().set_visible(False)\n    cax.get_yaxis().set_visible(False)\n    cax.set_facecolor('black')\n\n    at = AnchoredText(q6_idx, loc=10, \n                      prop=dict(backgroundcolor='black',\n                                size=12, color='white', weight='bold'))\n    cax.add_artist(at)\n    \nax[-1][0].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\nax[-1][1].set_xticklabels(q24_order, fontfamily='serif', rotation=90)\nax[-1][-1].set_visible(False)\n\nfig.suptitle('Experience & Earn Distribution', fontsize=17, fontweight='bold', fontfamily='serif', y=1.03)\n\nplt.tight_layout()\n# plt.subplots_adjust(hspace=0.25)\nplt.show()","8e125225":"## Q1 & Q2. Age\/Gender Distribution","90c04e69":"It's an interesting phenomenon.\n\nDepending on the characteristics of the annual salary, a decreasing graph should be drawn, but it is not.\n\nIf you look at the bouncing section (peak) now, there is a bouncing section at 1000, 5000, 10000, 30000, 100000 sections.\n\nI think this is an easy-to-conceive number when people survey.\n\nLater, I will analyze the relationship between salary and other factors.","a24eedb3":" ## Q4 & Q6. Degree \/ Experience\n ","3c1d4f05":"## Q2 & Q5 & Q15. Gender \/ Position \/ ML Experience","c1d14a7a":"## Q2 & Q3. Gender & Country","bf899427":"About 75% have less than 5 years of experience and 25% have more than 5 years.\n\nThis time, let's look at the two questions at once.","094f9c60":"You can see that more than half of the total is under 30.","9ff08b6b":"1. The most basic library, matplotlib, is used the most.\n2. Plotly is the most used for interactive visualization.\n3. It is unfortunate that the number of geovisualization libraries is insufficient. \n    - Folium is still less used than Geoplotlib.\n4. There are more d3 users than I think. Is there any reason to use d3 even though it is ML unfriendly?","0288ae12":"## Visualization & Analysis\n\n\n\nHello. I'm Kaggler, who was on the upvote rankings last year with interactive visualization.\n\nThis time, I'll show you the beauty of ordinary visualization.\n\n### Please be sure to leave a reference when using code or taking ideas in my visualizations.","f6d62cc1":"I thought there would be the most bachelors, but there are the most masters.","5546b84c":"The most common is a 1-2 year bachelor's degree and a 3-5 year graduate.","83d2a31e":"## Q24. Compensation","ab115208":"### Please be sure to leave a reference when using code or taking ideas in my visualizations.","92d9b26c":"Gender ratio for the top 10 countries in the number of responses.\n\nYou can see that the number of women is still very short. \n\nIn particular, in Japan, only 6.5% are women.","072fb430":"Those with short careers had a particularly high percentage of women.\n\nAlthough it is still insufficient, it can be seen that the number of female ML developers is increasing compared to the past.\n\n","f616ecb3":"## Q14. Visualization Library ","05f6d650":"- UK, USA, Germany","49b4d306":"Obviously, I felt that there was a lot of influx of women, but I can see that there are still few."}}