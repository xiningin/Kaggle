{"cell_type":{"8333b988":"code","d33bc59b":"code","fe1d060f":"code","ff570c11":"code","be2c6754":"code","88124203":"code","8c381798":"code","a6c60329":"code","a6aa78f5":"code","24d7684c":"code","ab61ae97":"code","17e74ddb":"code","95f47c9f":"code","a61a12b3":"code","57a8c328":"code","3e9047c4":"code","0776e1a7":"code","e7ccda28":"code","905b3a55":"code","9904f2be":"code","ab6bda44":"code","888d5fd9":"code","394c09ae":"code","15da839d":"code","24c741fe":"code","354a49aa":"markdown","06011b5f":"markdown","b903ae0b":"markdown","67c5fa4c":"markdown","a5b29249":"markdown","ff0cc97e":"markdown","826cd9c8":"markdown","0684e81f":"markdown","4c718ae5":"markdown","22736ebe":"markdown","62d1f117":"markdown"},"source":{"8333b988":"# Importing the libraries \nimport pandas as pd\nimport numpy as np\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d33bc59b":"# Importing the Boston Housing dataset\nfrom sklearn.datasets import load_boston\nboston = load_boston()","fe1d060f":"# Initializing the dataframe\ndata = pd.DataFrame(boston.data)","ff570c11":"# See head of the dataset\ndata.head()","be2c6754":"#Adding the feature names to the dataframe\ndata.columns = boston.feature_names\ndata.head()","88124203":"#Adding target variable to dataframe\ndata['PRICE'] = boston.target \n# Median value of owner-occupied homes in $1000s","8c381798":"#Check the shape of dataframe\ndata.shape","a6c60329":"data.columns","a6aa78f5":"data.dtypes","24d7684c":"# Identifying the unique number of values in the dataset\ndata.nunique()","ab61ae97":"# Check for missing values\ndata.isnull().sum()","17e74ddb":"# See rows with missing values\ndata[data.isnull().any(axis=1)]","95f47c9f":"# Viewing the data statistics\ndata.describe()","a61a12b3":"# Finding out the correlation between the features\ncorr = data.corr()\ncorr.shape","57a8c328":"# Plotting the heatmap of correlation between features\nplt.figure(figsize=(20,20))\nsns.heatmap(corr, cbar=True, square= True, fmt='.1f', annot=True, annot_kws={'size':15}, cmap='Greens')","3e9047c4":"# Spliting target variable and independent variables\nX = data.drop(['PRICE'], axis = 1)\ny = data['PRICE']","0776e1a7":"# Splitting to training and testing data\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 4)","e7ccda28":"# Import library for Linear Regression\nfrom sklearn.linear_model import LinearRegression\n\n# Create a Linear regressor\nlm = LinearRegression()\n\n# Train the model using the training sets \nlm.fit(X_train, y_train)","905b3a55":"# Value of y intercept\nlm.intercept_","9904f2be":"#Converting the coefficient values to a dataframe\ncoeffcients = pd.DataFrame([X_train.columns,lm.coef_]).T\ncoeffcients = coeffcients.rename(columns={0: 'Attribute', 1: 'Coefficients'})\ncoeffcients","ab6bda44":"# Model prediction on train data\ny_pred = lm.predict(X_train)","888d5fd9":"# Model Evaluation\nprint('R^2:',metrics.r2_score(y_train, y_pred))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_train, y_pred))*(len(y_train)-1)\/(len(y_train)-X_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_train, y_pred))\nprint('MSE:',metrics.mean_squared_error(y_train, y_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_train, y_pred)))","394c09ae":"# Visualizing the differences between actual prices and predicted values\nplt.scatter(y_train, y_pred)\nplt.xlabel(\"Prices\")\nplt.ylabel(\"Predicted prices\")\nplt.title(\"Prices vs Predicted prices\")\nplt.show()","15da839d":"# Checking residuals\nplt.scatter(y_pred,y_train-y_pred)\nplt.title(\"Predicted vs residuals\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Residuals\")\nplt.show()","24c741fe":"# Checking Normality of errors\nsns.distplot(y_train-y_pred)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","354a49aa":"\ud835\udc45^2 : It is a measure of the linear relationship between X and Y. It is interpreted as the proportion of the variance in the dependent variable that is predictable from the independent variable.\n\nAdjusted \ud835\udc45^2 :The adjusted R-squared compares the explanatory power of regression models that contain different numbers of predictors.\n\nMAE : It is the mean of the absolute value of the errors. It measures the difference between two continuous variables, here actual and predicted values of y.\u00a0\n\nMSE: The\u00a0mean square error\u00a0(MSE) is just like the MAE, but\u00a0squares\u00a0the difference before summing them all instead of using the absolute value.\u00a0\n\nRMSE: The\u00a0mean square error\u00a0(MSE) is just like the MAE, but\u00a0squares\u00a0the difference before summing them all instead of using the absolute value.\u00a0\n\n\n\n\n","06011b5f":"#### Training the model","b903ae0b":"# Boston house price prediction","67c5fa4c":"The problem that we are going to solve here is that given a set of features that describe a house in Boston, our machine learning model must predict the house price. To train our machine learning model with boston housing data, we will be using scikit-learn\u2019s boston dataset.\n\nIn this dataset, each row describes a boston town or suburb. There are 506 rows and 13 attributes (features) with a target column (price).\nhttps:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/housing\/housing.names","a5b29249":"#### Model Evaluation","ff0cc97e":"CRIM per capita crime rate by town <br>\nZN proportion of residential land zoned for lots over 25,000 sq.ft. <br>\nINDUS proportion of non-retail business acres per town <br>\nCHAS Charles River dummy variable (= 1 if tract bounds river; 0 otherwise) <br>\nNOX nitric oxides concentration (parts per 10 million) <br>\nRM average number of rooms per dwelling <br>\nAGE proportion of owner-occupied units built prior to 1940 <br>\nDIS weighted distances to five Boston employment centres <br>\nRAD index of accessibility to radial highways <br>\nTAX full-value property-tax rate per 10,000usd <br>\nPTRATIO pupil-teacher ratio by town <br>\nB 1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town <br>\nLSTAT % lower status of the population <br>","826cd9c8":"There is no pattern visible in this plot and values are distributed equally around zero. So Linearity assumption is satisfied","0684e81f":"# Linear regression","4c718ae5":"### Please upvote if you found this kernel useful! :) <br>\n### Feedback is greatly appreciated!","22736ebe":"Here the model evaluations scores are almost matching with that of train data. So the model is not overfitting.","62d1f117":"Each record in the database describes a Boston suburb or town."}}