{"cell_type":{"67702fbe":"code","ab81c25c":"code","35cd7fdc":"code","252adc6d":"code","669bc1b4":"code","dc0d2425":"code","3f9fed37":"code","5f211940":"code","6d164c52":"code","1229cb5c":"code","835be5d8":"code","1b251dbf":"code","b177ca24":"code","98ac58ff":"code","ab7edc6b":"code","c5e2503e":"code","3e1cbd2e":"code","b6408073":"code","eee12fff":"code","484b00d5":"code","4b289c40":"code","cfd6c72e":"code","f42a0a5e":"code","1b46eb62":"code","be9c2d5e":"code","dd8382bd":"code","c33a9020":"markdown","8c65e9e8":"markdown","e7aa1ab8":"markdown","604a2350":"markdown","06d410c7":"markdown","e9935a37":"markdown","5a4825b0":"markdown","69c5968d":"markdown","d81e9738":"markdown"},"source":{"67702fbe":"\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore')\n                        \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ab81c25c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno\nfrom collections import Counter\npd.set_option('display.max_columns', None)\n%matplotlib inline","35cd7fdc":"data = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")","252adc6d":"data.sample(5)","669bc1b4":"data.shape","dc0d2425":"data.info()","3f9fed37":"\ndef missing_values_table(df):\n        mis_val = df.isnull().sum()\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        return mis_val_table_ren_columns","5f211940":"missing_values_table(data)","6d164c52":"msno.bar(data,color = 'indianred')\nplt.show()","1229cb5c":"msno.heatmap(data)","835be5d8":"data = data.dropna()\ndata.shape","1b251dbf":"#number of categories in each columns\nfor col in data.columns:\n        unique_cat = len(data[col].unique())\n        print(\"Feature '{col}' has {unique_cat} unique categories\".format(col=col, unique_cat=unique_cat))","b177ca24":"data['type'].value_counts().to_frame()","98ac58ff":"data['type'].value_counts().head(10).plot(kind=\"bar\")","ab7edc6b":"data['director'].value_counts()[data['director'].value_counts() == data['director'].value_counts().max()]","c5e2503e":"data.director.mode()","3e1cbd2e":"data[data['director'] == 'Ra\u00fal Campos, Jan Suter']","b6408073":"n = 10\ndata['director'].value_counts()[:n].index.tolist()","eee12fff":"#list of Martin Scorsese's Movie on Netflix (one of my favorit director)\ndata[data['director'] == 'Martin Scorsese']","484b00d5":"plt.figure(figsize=(16,8))\ndata['release_year'].value_counts().head(25).plot(kind=\"bar\")\n","4b289c40":"print('Released year from: ', data['release_year'].min(),'to', data['release_year'].max())","cfd6c72e":"#oldest movie on Netflix\ndata[data['release_year'] == 1942]","f42a0a5e":"data['listed_in'].value_counts().to_frame()","1b46eb62":"print(data[\"listed_in\"].value_counts()[:5])\nplt.figure(figsize=(12,6))\nsns.countplot(y='listed_in',data = data,order =data[\"listed_in\"].value_counts().index[0:5],palette=\"magma\")\nplt.title(\"Top 5 Genres of Tv Shows\",size=18)\nplt.show()","be9c2d5e":"data.rating.value_counts().to_frame()","dd8382bd":"plt.figure(figsize = (16,6))\nsns.countplot(data.rating, order = data.rating.value_counts().index[0:15],palette=\"magma\")\nplt.title(\"Ratings for Movies And Shows\")\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Total Count\")\nplt.show()","c33a9020":"# Deal with Missing Values","8c65e9e8":"as we can see the popular ganre of programm in Netflix are Movie ","e7aa1ab8":"**missingno** provides a small toolset of flexible and easy-to-use missing data visualizations and utilities that allows you to get a quick visual summary of the completeness (or lack thereof) of your dataset. Install:\n\n'pip install missingno'\nhttps:\/\/github.com\/ResidentMario\/missingno","604a2350":"# Load and check the Data","06d410c7":"# Top 5 Genres ","e9935a37":"The busiest directors are Ra\u00fal Campos, Jan Suter:","5a4825b0":"The top 10 most busiest(frequent) directors:","69c5968d":"# Netflix Data Analysis","d81e9738":"# Import Libraries"}}