{"cell_type":{"3e7b9e16":"code","1c6ae05a":"code","62f757a7":"code","f3e2ae34":"code","3f623406":"code","ac17452a":"markdown","ee229b2a":"markdown","12508ae6":"markdown"},"source":{"3e7b9e16":"import numpy  as np\nimport pandas as pd\nimport json","1c6ae05a":"train = pd.read_json('..\/input\/stanford-covid-vaccine\/train.json',lines=True)\nsample = pd.read_csv('..\/input\/stanford-covid-vaccine\/sample_submission.csv')","62f757a7":"reactivity_data   = np.mean(train['reactivity'].tolist(), axis=1)\nreactivity_mu     = np.mean(reactivity_data)\nreactivity_sigma  = np.std(reactivity_data)\n\ndeg_Mg_pH10_data  = np.mean(train['deg_Mg_pH10'].tolist(), axis=1)\ndeg_Mg_pH10_mu    = np.mean(deg_Mg_pH10_data)\ndeg_Mg_pH10_sigma = np.std(deg_Mg_pH10_data)\n\ndeg_pH10_data     = np.mean(train['deg_pH10'].tolist(), axis=1)\ndeg_pH10_mu       = np.mean(deg_pH10_data)\ndeg_pH10_sigma    = np.std(deg_pH10_data)\n\ndeg_Mg_50C_data   = np.mean(train['deg_Mg_50C'].tolist(), axis=1)\ndeg_Mg_50C_mu     = np.mean(deg_Mg_50C_data)\ndeg_Mg_50C_sigma  = np.std(deg_Mg_50C_data)\n\ndeg_50C_data      = np.mean(train['deg_50C'].tolist(), axis=1)\ndeg_50C_mu        = np.mean(deg_50C_data)\ndeg_50C_sigma     = np.std(deg_50C_data)","f3e2ae34":"print(\"reactivity:  \u03bc=%.4f\" %reactivity_mu  +\"  \u03c3=%.3f\" %reactivity_sigma)\nprint(\"deg_Mg_pH10: \u03bc=%.4f\" %deg_Mg_pH10_mu +\"  \u03c3=%.3f\" %deg_Mg_pH10_sigma)\nprint(\"deg_pH10:    \u03bc=%.4f\" %deg_pH10_mu    +\"  \u03c3=%.3f\" %deg_pH10_sigma)\nprint(\"deg_Mg_50C:  \u03bc=%.4f\" %deg_Mg_50C_mu  +\"  \u03c3=%.3f\" %deg_Mg_50C_sigma)\nprint(\"deg_50C:     \u03bc=%.4f\" %deg_50C_mu     +\"  \u03c3=%.3f\" %deg_50C_sigma)","3f623406":"n_values = sample.shape[0]\n\nsample.loc[:,'reactivity']  = np.random.normal(reactivity_mu,  reactivity_sigma,  n_values)\nsample.loc[:,'deg_Mg_pH10'] = np.random.normal(deg_Mg_pH10_mu, deg_Mg_pH10_sigma, n_values)\nsample.loc[:,'deg_pH10']    = np.random.normal(deg_pH10_mu,    deg_pH10_sigma,    n_values)\nsample.loc[:,'deg_Mg_50C']  = np.random.normal(deg_Mg_50C_mu,  deg_Mg_50C_sigma,  n_values)\nsample.loc[:,'deg_50C']     = np.random.normal(deg_50C_mu,     deg_50C_sigma,     n_values)\n\nsample.to_csv('submission.csv',index=False)","ac17452a":"### Calculate the mean values and the standard deviations of the training data:","ee229b2a":"### The purpose of this notebook is to produce a baseline score. If your score  is not lower than $\\approx$ 0.49(5) then your algorithm is not doing any better than the mean values + some random noise.","12508ae6":"### now create and write out some synthetic results to a `submission.csv` whose mean and standard deviation are the same as the results found in the training data:"}}