{"cell_type":{"ebaf2a34":"code","bddf6389":"code","3a7d5e01":"code","ce42937a":"code","3c0ef2fc":"code","da4a0d95":"code","95f3b1bf":"code","61ada60e":"code","06e191ce":"code","3af09318":"code","7a8427f8":"code","dc913f0f":"code","704e4816":"code","12bcdc09":"code","f267c21b":"code","abb31118":"code","d0dbcbe5":"code","a086c7cc":"code","0ec1228c":"code","2053ab18":"code","37023e4d":"code","39f9864b":"code","45cda680":"code","eb740918":"code","19df7e07":"code","ade39fef":"markdown","131ce22a":"markdown","4f2d9708":"markdown","4b9637b9":"markdown","167a2a84":"markdown","48295ad3":"markdown","c9658d28":"markdown","f62ff1f6":"markdown","07c64a02":"markdown"},"source":{"ebaf2a34":"import numpy as np \nimport pandas as pd \nimport os\nfrom PIL import Image\nfrom matplotlib.image import imread\n\npicnames=[] #Bet\u00f6lt\u00f6m a k\u00e9pek neveit.\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        picnames.append(os.path.join(dirname, filename))\npicnames=picnames[2:] #Az els\u0151 kett\u0151 az m\u00e1s f\u00e1jlok.\npicnames.sort()\n\ndf=pd.read_csv('\/kaggle\/input\/football-player-number-13\/train_solutions.csv')\ntrainnevek=df[\"Id\"]\ntrainnevek=list(trainnevek)\nfor i in range(len(trainnevek)):\n    trainnevek[i]=trainnevek[i].replace(\"-\",\"_\")\n    trainnevek[i]+=\".jpg\"\n    trainnevek[i]='\/kaggle\/input\/football-player-number-13\/images\/'+trainnevek[i]\ntrainnevek.sort()\n\nX_train=[]\nn=0\nfor i in trainnevek:\n    n+=1\n    if n%500==0:\n        print(n)\n    img = Image.open(i).resize((480,270)) # Ekkora dimenzi\u00f3s a legkisebb kisk\u00e9p\n    img = np.asarray(img)\n    X_train.append(img)\n    \nX_train=np.array(X_train)\n\ny_train=list(df.sort_values(by='Id')['Predicted'])\nfor i in range(len(y_train)):\n    if y_train[i]==True:\n        y_train[i]=1\n    else:\n        y_train[i]=0\ny_train=np.array(y_train)","bddf6389":"from keras.layers.core import Dense, Dropout, Activation, Flatten\nfrom keras.applications.vgg16 import VGG16\nfrom keras.preprocessing import image\nfrom keras.applications.vgg19 import preprocess_input\nfrom keras.layers import Input, Flatten, Dense\nfrom keras.models import Model, Sequential\n\nbase_model = VGG16(\n    weights=\"imagenet\",\n    include_top=False,\n    input_shape=(270,480,3)\n)\n\n\nmodel = Sequential()\nmodel.add(base_model)\nmodel.add(Flatten())\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1, activation='sigmoid'))\n\nmodel.layers[0].trainable = False\n\nmodel.compile(\n    loss='binary_crossentropy',\n    optimizer='adam',\n    metrics=['accuracy']\n)\n\nmodel.summary()","3a7d5e01":"model.fit(X_train,y_train, epochs=15)","ce42937a":"from collections import Counter\ndf2=df=pd.read_csv('\/kaggle\/input\/football-player-number-13\/sampleSubmissionAllZeros.csv')\ntestnevek=list(df2['Id'])\nfor i in range(len(testnevek)):\n    testnevek[i]=testnevek[i].replace(\"-\",\"_\")\n    testnevek[i]='\/kaggle\/input\/football-player-number-13\/images\/'+testnevek[i]+\".jpg\"\nX_test=[]\nn=0\nfor i in testnevek:\n    n+=1\n    if n%500==0:\n        print(n)\n    img = Image.open(i).resize((480,270)) # Ekkora dimenzi\u00f3s a legkisebb kisk\u00e9p\n    img = np.asarray(img)\n    X_test.append(img)\nX_test=np.array(X_test)\ny_test=model.predict(X_test)\ny_test=y_test.tolist()\nfor i in range(len(y_test)):\n    y_test[i]=y_test[i][0]\nfor i in range(len(y_test)):\n    if y_test[i]>0.5:\n        y_test[i]=True\n    else:\n        y_test[i]=False\nprint(Counter(y_test))","3c0ef2fc":"y_test=model.predict(X_test)\ny_test=y_test.tolist()\nfor i in range(len(y_test)):\n    y_test[i]=y_test[i][0]","da4a0d95":"y_test","95f3b1bf":"df2[\"Predicted\"]=y_test","61ada60e":"df2","06e191ce":"df3=df2[df2[\"Predicted\"]>1e-10]","3af09318":"Counter(df3.Predicted)","7a8427f8":"df3","dc913f0f":"picnames=[]\nfor i in list(df3['Id']):\n    picnames.append('\/kaggle\/input\/football-player-number-13\/images\/'+i.replace('-',\"_\")+'.jpg')","704e4816":"arrays=[]\nfor i in picnames:\n    img_array = np.array(Image.open(i))\n    arrays.append(img_array)","12bcdc09":"from matplotlib import pyplot as plt","f267c21b":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[0])","abb31118":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[1])","d0dbcbe5":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[6])","a086c7cc":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[7])","0ec1228c":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[18])","2053ab18":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[19])","37023e4d":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[20])","39f9864b":"plt.figure(figsize=(24,14))\nplt.imshow(arrays[21])","45cda680":"for i in range(len(y_test)):\n    if y_test[i]>0.5:\n        y_test[i]=True\n    else:\n        y_test[i]=False\ndf2[\"Predicted\"]=y_test","eb740918":"df2","19df7e07":"df2.to_csv('bemutatoPJ.csv',index=False)","ade39fef":"# Bemutat\u00f3, Bevadat2, 2020.06.24.","131ce22a":"# 1. Modell fel\u00e9p\u00edt\u00e9se","4f2d9708":"Vizsg\u00e1ljuk meg az eredm\u00e9nyeket!","4b9637b9":"# 2. Predikt\u00e1l\u00e1s + Elemz\u00e9s","167a2a84":"VGG16-os modellen fogunk transfer learninget v\u00e9grehajtani, a modell fel\u00e9p\u00edt\u00e9se egy az egyben a  https:\/\/www.kaggle.com\/ruslankl\/brain-tumor-detection-v1-0-cnn-vgg-16 4.2 alapj\u00e1n megy.","48295ad3":"El\u0151sz\u00f6r megadjuk gyors a predikci\u00f3t, amit submiteltem is a versenyen.","c9658d28":"Adatok feldolgoz\u00e1sa most nem relev\u00e1ns, ez\u00e9rt azt vill\u00e1mgyorsan megoldom.","f62ff1f6":"M\u00e9g elk\u00e9sz\u00edt\u00fcnk egy submission f\u00e1jlt is.","07c64a02":"K\u00e9sz\u00edtette: Pint\u00e9r J\u00f3zsef"}}