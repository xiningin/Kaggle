{"cell_type":{"c3c084df":"code","48197013":"code","03c914b9":"code","f57c1eb8":"code","2e7c3740":"code","8cc6db6e":"code","654aaa9b":"code","3aa1abdb":"code","22d80ac7":"code","e7f309ed":"code","0733010d":"code","c0b5760a":"code","91097b6e":"code","f5b0b2dc":"code","286b25c1":"code","07cedb13":"code","6d0d147f":"markdown","f35efe33":"markdown","9f101d0f":"markdown","16d96b9f":"markdown","66376499":"markdown","cb722add":"markdown","1b2ca15f":"markdown","dfe54f81":"markdown","b8e453db":"markdown"},"source":{"c3c084df":"# Standard imports\nimport numpy as np\nimport pandas as pd\n\n# Visualization tools\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","48197013":"sns.set_theme(style='darkgrid')","03c914b9":"df = pd.read_csv('..\/input\/the-worlds-biggest-companies-2021\/The Worlds Biggest Public Companies.csv', delimiter=';')\ndf.tail()","f57c1eb8":"df.info()","2e7c3740":"df.isna().sum()","8cc6db6e":"df.set_index('Rank', inplace=True)\ndf.head()","654aaa9b":"def converter(x):\n    converted = float(x[1:-2].replace(',', ''))\n    if x.endswith('M'):\n        converted \/= 1000\n    return converted","3aa1abdb":"for col in df.columns[2:]:\n    df[col] = df[col].apply(converter)","22d80ac7":"df.head()","e7f309ed":"df.info(0)","0733010d":"df_by_country = df[['Country', 'Name']].groupby('Country').count()\ndf_by_country.rename(columns={'Name': 'Count'}, inplace=True)\ndf_by_country.sort_values('Count', ascending=False, inplace=True)\n\nfig = plt.figure(figsize=(8, 12))\nsns.barplot(data=df_by_country, \n            x='Count', \n            y=df_by_country.index,\n            orient='h',\n            palette='crest')\nplt.title('Number of Companies in Top 500', fontweight='bold')\nplt.tight_layout();","c0b5760a":"def plot_avg_metric(metric, ax=None):\n    '''\n    Description:\n    ------------\n    Plots the average (mean) value of a given metric for each country.\n    \n    Parameters:\n    -----------\n    metric : str\n        The metric to plot. Can be one of 'Sales', 'Profit', 'Assets'\n        or 'Market Value'.\n    \n    ax : matplotlib axis (optional)\n        The axis to plot on. Useful when creating a figure with \n        various subplots.\n    '''\n    df_grouped = df.groupby('Country').mean()\n    df_grouped.sort_values(metric, ascending=False, inplace=True)\n    sns.barplot(data=df_grouped,\n                x=metric,\n                y=df_grouped.index,\n                orient='h',\n                palette='crest',\n                ax=ax)\n    ax.set_title(f'Average {metric} by Country', fontweight='bold')\n    ax.set_xlabel(f'Average {metric} ($ billions)')\n    plt.tight_layout(pad=1.50)","91097b6e":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(16, 16))\naxes = np.reshape(axes, -1)\n\nmetrics = df.columns[2:]\nfor i, metric in enumerate(metrics):\n    plot_avg_metric(metric, ax=axes[i])","f5b0b2dc":"def market_value_ratio(metric, aggregator):\n    '''\n    Description:\n    ------------\n    Plots the ratio of the market value to the given metric for each \n    country based on the specific aggregator method.\n    \n    Parameters:\n    -----------\n    metric : str\n        The metric to plot. Can be one of 'Sales', 'Profit', 'Assets'\n        or 'Market Value'.\n        \n    aggregator : str\n        The aggregation method to be used ('mean', 'median', etc.).\n    '''\n    df_ratio = df.copy()\n    df_ratio[f'MVto{metric}'] = df_ratio['Market Value'] \/ df_ratio[metric]\n    df_ratio = df_ratio.groupby('Country').agg(aggregator)\n    df_ratio.sort_values(f'MVto{metric}', ascending=False, inplace=True)\n    sns.barplot(data=df_ratio,\n                x=f'MVto{metric}',\n                y=df_ratio.index,\n                orient='h',\n                palette='crest')\n    plt.title(f'{aggregator.title()} Market Value to {metric} Ratio', fontweight='bold')\n    plt.xlabel('Ratio')","286b25c1":"fig = plt.figure(figsize=(8, 10))\nmarket_value_ratio('Sales', 'mean')","07cedb13":"fig = plt.figure(figsize=(8, 10))\nmarket_value_ratio('Profit', 'median')","6d0d147f":"# Overview\nThis notebook represents my submission for the task on \"[The World's Biggest Companies 2021](https:\/\/www.kaggle.com\/berkayalan\/the-worlds-biggest-companies-2021)\" dataset. The description of the task is simply:\n> Create an EDA and show breakdowns of companies\n\nThe [original source](https:\/\/www.forbes.com\/lists\/global2000\/#242cc9bb5ac0) of the dataset is from Forbes, which ranks each of the companies according to the following equally-weighted metrics:\n- Sales\n- Profit\n- Assets\n- Market Value\n\nLet's dive in!","f35efe33":"# EDA\n## Number of Companies per Country","9f101d0f":"## Converting to Floats\nThe `Sales`, `Profit`, `Assets`, and `Market Value` columns are all currently stored as strings and need to be converted to floats. I will keep the units in billions of dollars to ease the visualization process (axis formatting can be a pain).","16d96b9f":"## Average Metrics by Country","66376499":"# Imports & Settings","cb722add":"# Future Work\nThere are several ways that this data can be extended to produce even more interesting visuals. Some ideas include:\n- Historical data to observe how different metrics and countries have changed over time\n- Additional business metrics such as debt or cash flows\n- Industry information for each of the companies to calculate specific industry-level metrics","1b2ca15f":"# Preprocessing\n## Previewing Data","dfe54f81":"## Setting Index to Rank","b8e453db":"## Market Value Ratios by Country"}}