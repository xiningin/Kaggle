{"cell_type":{"c3e30cbe":"code","09b2a27a":"code","817ae3c3":"code","e4cfa75b":"code","b9fc64a5":"code","78bc1b00":"code","2ffeaa69":"code","f820f374":"code","c90159fe":"code","dd384e6b":"markdown","3eb059ec":"markdown","992ba630":"markdown","a1eb0ae9":"markdown","30b9b11f":"markdown","239f0920":"markdown","85eb825d":"markdown","d36e8701":"markdown","07562016":"markdown","e2ce7686":"markdown","f048705f":"markdown"},"source":{"c3e30cbe":"!pip install gmplot","09b2a27a":"# Work with Data - the main Python libraries\nimport numpy as np\nimport pandas as pd\nimport os\nimport pandas_profiling as pp\n\n# Visualization\nimport matplotlib.pyplot as plt\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nimport warnings\nwarnings.simplefilter('ignore')","817ae3c3":"# Creation the list of files with data\nfile_list = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        file_list.append(os.path.join(dirname, filename))\nfile_list","e4cfa75b":"def AQMV_download(file_path):\n    # Download and visualization data for given station # num_station from file with file_path\n    \n    # Determination the number of station\n    num_station = int(file_path[(file_path.rfind(\"_\")+1):file_path.rfind(\".\")])\n    \n    # Filtering of defective data\n    if num_station==4152:\n        skiprows_value = 560663\n    elif num_station==14627:\n        skiprows_value = 525902\n    elif num_station==4152:\n        skiprows_value = 560663\n    elif num_station==15952:\n        skiprows_value = 457572\n    else: skiprows_value=None\n    \n    # Download data\n    if skiprows_value is None:\n        df = pd.read_csv(file_path, sep=',', header=0)\n    else: \n        df = pd.read_csv(file_path, sep=',', header=None, skiprows=skiprows_value)\n    df.columns = ['device_id', 'phenomenon', 'value', 'time', 'value_text']\n    \n    indicators_list = df['phenomenon'].dropna().unique().tolist()\n    df = df[['phenomenon', 'value', 'time']]\n    df = pd.pivot_table(df, values=['value'], index=['time'], columns=['phenomenon'])\n    df.columns = indicators_list\n    \n    # Draw plots\n    print(f\"Data of the station number {num_station}\")\n    for col in indicators_list:\n        plt.figure(figsize=(12, 3))\n        plt.title(f'Indicator - \"{col}\"')\n        df[col].plot(rot=45)\n    plt.show()\n    \n    return df, num_station","b9fc64a5":"# Download and visualization data for given file path (station)\ndf, num_station = AQMV_download(file_list[1])\ndf","78bc1b00":"# Download data about stations\ndf_about = pd.read_csv('..\/input\/air-quality-monitoring\/about_stations.csv', sep=';', header=0)\ndf_about ","2ffeaa69":"df.info()","f820f374":"df.describe()","c90159fe":"# EDA with Pandas Profiling\npp.ProfileReport(df)","dd384e6b":"## Acknowledgements\n* [Data Science for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/data-science-for-tabular-data-advanced-techniques)\n* [EDA for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/eda-for-tabular-data-advanced-techniques)\n* services:\n    * [\"SaveEcoBot\"](https:\/\/www.saveecobot.com\/) \n    * [\"Eco-City\"](https:\/\/eco-city.org.ua\/)\n    * [\"Luftdaten.info\"](https:\/\/luftdaten.info\/)\n    * [\"SaveDnipro\"](https:\/\/www.savednipro.org\/) ","3eb059ec":"### Possible Tasks:\n\nAnalyze the basic patterns of data change in the city as a whole and for each station separately (seasonality, anomalies, etc.).","992ba630":"## 3. EDA<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","a1eb0ae9":"## 1. Import libraries<a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","30b9b11f":"[Go to Top](#0)","239f0920":"Dataset contains data of air quality monitoring in Vinnytsia city for 5 monitoring stations.\n\nData for 2019-2021 with an interval of 15-145 seconds.","85eb825d":"## 2. Download data<a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","d36e8701":"I invite others to improve this notebook.","07562016":"<a class=\"anchor\" id=\"0.1\"><\/a>\n## Table of Contents\n\n1. [Import libraries](#1)\n1. [Download data](#2)\n1. [EDA](#3)","e2ce7686":"<a class=\"anchor\" id=\"0.0\"><\/a>\n# Dataset [Air Quality Monitoring](https:\/\/www.kaggle.com\/vbmokin\/air-quality-monitoring)","f048705f":"### Map of the stations:\nhttps:\/\/www.saveecobot.com\/en\/maps#12\/49.2296\/28.4755\/aqi\/comp+cams+fire\n\n![image.png](attachment:46a52d83-faef-4bb3-b273-1d0fed10e2df.png)\n\nAir Quality Monitoring in Vinnytsia city."}}