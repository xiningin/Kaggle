{"cell_type":{"9eab7cc7":"code","0a4b59c3":"code","d9e221c2":"code","7be6afa1":"code","19fc65a5":"code","978f00e6":"code","ffa0cf22":"code","517d4db0":"code","1b4018de":"code","05638d68":"code","399c0dad":"code","703f6830":"code","af7e7e77":"code","77e5d39a":"code","0b905edf":"markdown","83ebeb9b":"markdown","375d7e7b":"markdown","da9d057a":"markdown","7c487bc3":"markdown","2c720e9d":"markdown","9c690337":"markdown","055be650":"markdown","15405480":"markdown","93bccc59":"markdown","5fe86b06":"markdown","d8829d48":"markdown","aff8a4ff":"markdown","57dece83":"markdown","f03a826b":"markdown","24aaf1bd":"markdown"},"source":{"9eab7cc7":"import pandas as pd\n# To read csv\nimport matplotlib.pyplot as plt\n# For plotting\nimport seaborn as sns\n# Plotting helper library\nimport numpy as np\n# For mathematical functions\n%matplotlib inline\n# To allow plotting inside the notebook\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# To ignore deprecation warnings","0a4b59c3":"df=pd.read_csv(\"..\/input\/loan.csv\", low_memory=False)\n# Reading the data, low_memory=False as the file is very large\nprint(df.shape)\ndf.head()\n# Shows the first 5 rows of the data","d9e221c2":"fig, ax = plt.subplots(1, 2, figsize=(16,5))\n# Making a plot with 2 subplots\n\nloan_amount = df[\"loan_amnt\"].values\nfunded_amount = df[\"funded_amnt\"].values\n\n\nsns.distplot(loan_amount, ax=ax[0], color='#000000')\nax[0].set_title(\"Loan Applied by the Borrower\", fontsize=14)\nsns.distplot(funded_amount, ax=ax[1])\nax[1].set_title(\"Amount Funded by the Lender\", fontsize=14)\n# Distribution plots\n\n# Loan applied for and loan funded have same distribution, meaning most loans were accepted","7be6afa1":"sns.boxplot(y=loan_amount)\nprint (\"Mean loan amount is: \",loan_amount.mean())\n# Most loans were between 10000 and 20000 dollars","19fc65a5":"status_counts = df.loan_status.value_counts()[1:]\n# Removing current loans as they will not be useful for our analysis\nax = sns.barplot(status_counts.index, status_counts.values)\nax.set_xticklabels(ax.get_xticklabels(),rotation=45)\nprint(\"Loan Statuses Counts\")","978f00e6":"years = pd.to_datetime(df.issue_d)\n# Converting the issue date column to datetime format for easy parsing\ndf[\"year\"] = years.dt.year\n# Taking only year from the issue date column and creating a new column\nyearwise_loans = df.year.value_counts()\n# Plotting the number of loans taken yearwise\n\nplt.figure(figsize=(10,6))\nax = sns.barplot(yearwise_loans.index, yearwise_loans.values)\n# Making a seaborn barplot\nax.set_xticklabels(ax.get_xticklabels(), rotation = 30)\nprint(\"Number of loans issued yearwise\")\n# Exponential growth in number of loans issued YoY","ffa0cf22":"plt.figure(figsize=(10,6))\nsns.barplot(df.year, df.loan_amnt)\n# PLotting a bar plot of average loan issued\n# Average loan issued also increased YoY","517d4db0":"# Bad Loans analysis\n\n# Various types of bad loans\nbad_loan = [\"Charged Off\", \"Default\", \"Does not meet the credit policy. Status:Charged Off\", \"In Grace Period\", \"Late (16-30 days)\", \"Late (31-120 days)\"]\n\n# Creating an empty column to store the laon type\ndf['loan_type'] = np.nan\n\n# Function to set the loan type\ndef loan_type(status):\n    if status in bad_loan:\n        return 'Bad Loan'\n    else:\n        return 'Good Loan'\n    \n# Applying the function to all the statuses    \ndf['loan_type'] = df['loan_status'].apply(loan_type)\n\n# Making a pie chart of good loans and bad loans\nplt.figure(figsize=(8,8))\ndf.loan_type.value_counts().plot.pie(explode = [0, 0.2],autopct='%1.2f%%', shadow = True, startangle = 75)\n# 7.6% of all loans were bad loans","1b4018de":"# General trend of higher loan amount implying higher chances of bad loan\nsns.barplot(x=df.year, y=df.loan_amnt, hue=df.loan_type)\n# Plotted yearwise","05638d68":"# Finding bad loan rate statewise\n# Making a dictionary of ratio of bad loans to good loans\nd = {}\nfor state in df['addr_state'].unique():\n    values = df[df['addr_state']==state].loan_type.value_counts()\n# Taking value counts of good and bad loans and finding the ratio\n# Rounding off to second decimal\n    d[state] = round(float(values[1])\/float(values[0])*100,2)\n    \n# Sorting the created dictionary by the ratio, in descending order\nimport operator\nsorted_d = sorted(d.items(), key=operator.itemgetter(1), reverse=True) \nx, y = zip(*sorted_d) \n\n# Plotting the bad loan rates, statewise\nplt.figure(figsize=(16,8))\nplt.bar(x,y)\n# Iowa has very high default rate (number of loans is relatively low as well)\n# Safest states are Nebraska, North Dakota and Maine","399c0dad":"# Grouping the data by year and grade and mean loan amount\n# G is the worst grade, A is the best\n# Creating a colormap for the plot\ncmap = plt.cm.coolwarm\nplt.figure(figsize=(20,7))\n\nby_credit_score = df.groupby(['year', 'grade']).loan_amnt.mean()\nby_credit_score.unstack().plot(colormap=cmap)\nprint(\"LOANS ISSUED, GROUPED BY CREDIT SCORE\")","703f6830":"# To plot interest rates grouped by credit score grade\n\nplt.figure(figsize=(20,10))\ncmap = plt.cm.coolwarm\n\nby_inc = df.groupby(['year', 'grade']).int_rate.mean()\nby_inc.unstack().plot(colormap=cmap)\nprint(\"INTEREST RATES GROUPED BY CREDIT SCORE\")","af7e7e77":"# Interest rate distribution by credit grade (not yearwise)\nplt.figure(figsize=(20,7))\nsns.violinplot(x='grade', y='int_rate', data=df, palette = \"Set2\", order=['A','B','C','D','E','F','G'])","77e5d39a":"# Bad loan rates by purpose of loan\n\n# Creating a dictionary to store bad loans percentages with purpose as keys\n\nd = {}\nfor purpose in df.purpose.unique():\n    values = df[df['purpose']==purpose].loan_type.value_counts()\n    d[purpose] = round(float(values[1])\/float(values[0])*100,2)\n\n# Sorting the dictionary by bad loan percentages in descending values\nimport operator\nsorted_d = sorted(d.items(), key=operator.itemgetter(1), reverse=True) \nx, y = zip(*sorted_d)\n# Plotting the data\nplt.figure(figsize=(20,10))\nplt.bar(x,y)\nplt.xticks(rotation=45)","0b905edf":"### Mean loan amount over the years 2007- 2015 grouped by credit score grade","83ebeb9b":"### Loan amount distribution","375d7e7b":"### Average loan amount issued over the years 2007- 2015","da9d057a":"### Number of loans issued over 2007- 2015","7c487bc3":"### Loan status distribution","2c720e9d":"### Yearwise correlation of loan amount and loan type","9c690337":"### Interest rates over the years 2007- 2015 grouped by interest rates","055be650":"### Loan applied for vs amount funded","15405480":"# Analysing Loan Data\n# Using plots and statistics, we shall find the important features from this data","93bccc59":"### Interest rate distribution by credit grade.\n#### We can see that worse grades have a substantially higher interest rate","5fe86b06":"### What percent of the loans were bad loans?","d8829d48":"### Imports","aff8a4ff":"### Statewise bad loan rates calculation","57dece83":"### Reading the file","f03a826b":"## Analysing the data","24aaf1bd":"### Bad loan rates grouped by loan purpose"}}