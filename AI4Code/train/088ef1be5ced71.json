{"cell_type":{"b4eda5dd":"code","89bbfe7e":"code","d7390e1a":"code","7660dc11":"code","c3c05d59":"code","b57b5259":"code","806a87da":"code","3111dcaa":"code","1bb67f2b":"code","ecf84629":"code","47b7366a":"code","523c8f56":"code","816d83ea":"code","36177cc0":"code","841ca965":"code","383eb206":"code","56ea51d0":"code","5ac61152":"code","be0110c0":"code","46523dd7":"code","9bc43942":"code","e4917456":"code","7d0c71b1":"code","ea1ede5f":"code","88ef25d9":"code","19476051":"code","16f9c55b":"code","e3f443f3":"code","adfee708":"code","e2a51366":"code","87b01fd0":"code","9860a48f":"code","2b40fa53":"code","4811014f":"code","dc4e2740":"code","8e1716f3":"code","bbc6faf3":"code","cb7932dc":"code","531da7e1":"markdown","c0ab63be":"markdown","57648dc7":"markdown"},"source":{"b4eda5dd":"# This code compares the death people data in Turkey for SARS- Cov- 2 viruses\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go #it uses for the graph of the data \nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.express as px\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n        import warnings\nwarnings.filterwarnings('ignore')   \n\n\n        \n","89bbfe7e":"province_data = pd.read_csv(\"\/kaggle\/input\/number-of-cases-in-the-city-covid19-turkey\/number_of_cases_in_the_city.csv\")\ndata = pd.read_csv(\"\/kaggle\/input\/covid19-in-turkey\/covid_19_data_tr.csv\")\ndata_test_numbers = pd.read_csv(\"\/kaggle\/input\/covid19-in-turkey\/test_numbers.csv\")\ndata_intensive_care = pd.read_csv(\"\/kaggle\/input\/covid19-in-turkey\/time_series_covid_19_intensive_care_tr.csv\")\ndata_intubated = pd.read_csv(\"\/kaggle\/input\/covid19-in-turkey\/time_series_covid_19_intubated_tr.csv\")","d7390e1a":"data.tail()","7660dc11":"data.info()","c3c05d59":"#run the section below once if you run it twice it will fail because it cannot find anything as province state\n\ndata.rename(columns = {\"Last_Update\" : \"Date\", \"Confirmed\" : \"Case\", \"Deaths\" : \"Demise\", \"Recovered\" : \"Convalescent\"}, inplace = True)\ndata.drop(\"Province\/State\", axis = 1, inplace = True)","b57b5259":"list1 = data_test_numbers.keys()\nlist2 = []\nfor i in range (4,len(list1)):\n    list2.append(data_test_numbers[list1[i]][0])\n\ndata['number_of_tests'] = list2 #Days without number of tests will be considered as 0","806a87da":"list3 = data_intensive_care.keys()\nlist4 = []\nfor i in range (4,len(list3)):\n    list4.append(data_test_numbers[list3[i]][0])\ndata['totalIntensiveCare'] = list4 #the number of patients in intensive care unit will be considered as 0, unspecified days","3111dcaa":"list5 = data_intubated.keys()\nlist6 = []\nfor i in range (4,len(list5)):\n    list6.append(data_test_numbers[list5[i]][0])\n\ndata['totalnumberofIntubates'] = list6 #days without intubation number will be considered as 0","1bb67f2b":"test_rate = [0] \ntest_increase = [0] \ncase_rate = [0] #we accepted 0 because there is no specified value\ndeath_rate = [0]\ncase_increase = [0]\ndeath_increase = [0]\ntest_rate = [0]\ntest_increase= [0]\nintensivecare_rate = [0]\nintensivecare_increase = [0]\nintubates_rate = [0]\nintubates_increase = [0]\nintensivecare_case_rate = [0]\nintubates_case_rate = [0]\nactive_case = [0]\n\nfor i in range(len(data)-1):\n    testRate =  round((data[\"number_of_tests\"][i+1] - data[\"number_of_tests\"][i]) \/ data[\"number_of_tests\"][i], 2)\n    testIncrease = data[\"number_of_tests\"][i+1] - data[\"number_of_tests\"][i] \n    caseRate = round((data[\"Case\"][i+1] - data[\"Case\"][i]) \/ data[\"Case\"][i], 2)\n    caseIncrease = data[\"Case\"][i+1] - data[\"Case\"][i]\n    deathRate =  round((data[\"Demise\"][i+1] - data[\"Demise\"][i]) \/ data[\"Demise\"][i], 2)\n    deathIncrease = data[\"Demise\"][i+1] - data[\"Demise\"][i]\n    intensivecareRate =  round((data[\"totalIntensiveCare\"][i+1] - data[\"totalIntensiveCare\"][i]) \/ data[\"totalIntensiveCare\"][i], 2)\n    intensivecareIncrease = data[\"totalIntensiveCare\"][i+1] - data[\"totalIntensiveCare\"][i] \n    intubatesRate =  round((data[\"totalnumberofIntubates\"][i+1] - data[\"totalnumberofIntubates\"][i]) \/ data[\"totalnumberofIntubates\"][i], 2)\n    intubatesIncrease = data[\"totalnumberofIntubates\"][i+1] - data[\"totalnumberofIntubates\"][i]\n    intensivecarecaseRate = round((data[\"totalIntensiveCare\"][i+1] - data[\"totalIntensiveCare\"][i]) \/ data[\"Case\"][i], 5)\n    intubatescaseRate = round((data[\"totalnumberofIntubates\"][i+1] - data[\"totalnumberofIntubates\"][i]) \/ data[\"Case\"][i], 5)\n    activeCase = data[\"Case\"][i] - data[\"Convalescent\"][i]\n    \n    \n    test_rate.append(testRate)\n    test_increase.append(testIncrease)\n    case_rate.append(caseRate)\n    death_rate.append(deathRate)\n    case_increase.append(caseIncrease)\n    death_increase.append(deathIncrease)\n    intensivecare_rate.append(intensivecareRate)\n    intensivecare_increase.append(intensivecareIncrease)\n    intubates_rate.append(intubatesRate)\n    intubates_increase.append(intubatesIncrease)\n    intensivecare_case_rate.append(intensivecarecaseRate)\n    intubates_case_rate.append(intubatescaseRate)\n    active_case.append(activeCase)\n\n    \ndata[\"Test Increase\"] = test_increase\ndata[\"Test Increase Rate\"] = test_rate\ndata[\"Case Increase\"] = case_increase\ndata[\"Case Increase Rate\"] = case_rate\ndata[\"Death Increase\"] = death_increase\ndata[\"Death Increase Rate\"] = death_rate\ndata[\"Intensivecare Increase\"] = intensivecare_increase\ndata[\"Intensivecare Increase Rate\"] = intensivecare_rate\ndata[\"Intubates Increase\"] = intubates_increase\ndata[\"Intubates Increase Rate\"] = intubates_rate\ndata[\"Intensivecare\/Case Rate\"] = intensivecare_case_rate\ndata[\"Intubates\/Case Rate\"] = intubates_case_rate\ndata['Active Case'] = active_case\n\ndata.fillna(0, inplace = True) #We updated NaN values to 0.\ndata = data.replace([np.inf, -np.inf], np.nan) #number\/0 infinity updated 0.","ecf84629":"test_positive=[]\nfor i in range(len(data)):\n    test_positive_rate = round((data[\"Case Increase Rate\"][i] \/ data[\"number_of_tests\"][i]), 2)\n    test_positive.append(test_positive_rate)\n    \ndata[\"Positive\/Test Rate\"] = test_positive\ndata = data.replace([np.inf, -np.inf], np.nan)","47b7366a":"data.fillna(0, inplace = True)\ndata","523c8f56":"fig = go.Figure(data=[\n    go.Bar(name='Case', x=data['Date'], y=data['Case'], marker_color='rgba(135, 206, 250, 0.8)'),\n    go.Bar(name='Demise', x=data['Date'], y = data['Demise'], marker_color='rgba(255, 0, 0, 0.8)'),\n    go.Bar(name='Convalescent', x=data['Date'], y=data['Convalescent'], marker_color='rgba(0, 255, 0, 0.8)')\n])\nfig.update_layout(barmode='group', title_text='Turkey Daily Case, Death and Convalescent Number', xaxis_tickangle=-45)\nfig.show()","816d83ea":"fig = go.Figure(data=[\n    go.Bar(name='Demise', x=data['Date'], y = data['Demise'], marker_color='rgb(255, 0, 0)'),\n    go.Bar(name='Convalescent', x=data['Date'] , y=data['Convalescent'], marker_color='rgb(0, 255, 0)')\n])\nfig.update_layout(barmode='group', title_text='Turkey Daily Death and Convalescent Number', xaxis_tickangle=-45)\nfig.show()","36177cc0":"fig = go.Figure(data=[go.Bar(name='Active Case', x=data['Date'], y=data['Active Case'], marker_color='rgba(135, 206, 250, 0.8)'),])\nfig.update_layout(barmode='group', title_text='Turkey Daily Active Case Number', xaxis_tickangle=-45, xaxis= dict(title= 'Date \/ Date'),\n                  yaxis= dict(title= 'Number of Person'))\nfig.show()","841ca965":"after17thofmarch = data.loc[data['Date'] > '3\/17\/2020']\nafter15thofmarch = data.loc[data['Date'] > '3\/15\/2020']\nafter26thofmarch = data.loc[data['Date'] > '3\/27\/2020']","383eb206":"case = go.Scatter(x = data.Date,\n                    y = data.Case,\n                    mode = \"lines+markers\",\n                    name = \"Case \/ Cases\",\n                    marker = dict(color = 'rgba(135, 206, 250, 0.8)'),\n                    text= data.Case\n                   )\ndeath = go.Scatter(x = data.Date,\n                    y = data.Demise,\n                    mode = \"lines+markers\",\n                    name = \"Demise \/ Death\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.8)'),\n                    text= data.Demise\n                   )\nconvalescent = go.Scatter(x = data.Date,\n                    y = data.Convalescent,\n                    mode = \"lines+markers\",\n                    name = \"Convalescent\/Recovered\",\n                    marker = dict(color = 'rgba(0, 255, 0, 0.8)'),\n                    text= data.Convalescent\n                   )\ndata2 = [case, death, convalescent]\nlayout = dict(title = \"Turkey SARS-Cov-2 Case, Demise and Convalescent -  Covid-19 Number of Case and Deaths in Turkey\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","56ea51d0":"death = go.Scatter(x = data.Date,\n                    y = data.Demise,\n                    mode = \"lines+markers\",\n                    name = \"Demise \/ Death\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.8)'),\n                    text= data.Demise\n                   )\nconvalescent = go.Scatter(x = data.Date,\n                    y = data.Convalescent,\n                    mode = \"lines+markers\",\n                    name = \"Convalescent\/Recovered\",\n                    marker = dict(color = 'rgba(0, 255, 0, 0.8)'),\n                    text= data.Convalescent\n                   )\ndata2 = [death,convalescent]\nlayout = dict(title = \"SARS- Cov- 2 Number of Deaths and Recovered in Turkey\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","5ac61152":"case = go.Scatter(x =after15thofmarch.Date,\n                    y = after15thofmarch.Case,\n                    mode = \"lines+markers\",\n                    name = \"Case \/ Cases\",\n                    marker = dict(color = 'rgba(135, 206, 250, 0.8)'),\n                    text= after15thofmarch.Case\n                   )\nlayout = dict(title = \"SARS- Cov- 2 Number of Case in Turkey (Logarithmic)\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45, yaxis_type=\"log\")\nfig = dict(data = case, layout = layout)\niplot(fig)","be0110c0":"demise = go.Scatter(x =after17thofmarch.Date,\n                    y = after17thofmarch.Demise,\n                    mode = \"lines+markers\",\n                    name = \"Demise \/ Death\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.8)'),\n                    text= after17thofmarch.Demise\n                   )\nlayout = dict(title = \"SARS- Cov- 2 Number of Death in Turkey (Logarithmic)\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45, yaxis_type=\"log\")\nfig = dict(data = demise, layout = layout)\niplot(fig)","46523dd7":"intensivecare = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalIntensiveCare,\n                    mode = \"lines+markers\",\n                    name = \"totalIntensivecare\",\n                    marker = dict(color = 'rgba(72,118 ,255, 0.8)'),\n                    text= after26thofmarch.totalIntensiveCare\n                   )\nintubates = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalnumberofIntubates,\n                    mode = \"lines+markers\",\n                    name = \"totalIntubates\",\n                    marker = dict(color = 'rgba(139, 90, 43, 0.8)'),\n                    text= after26thofmarch.totalnumberofIntubates\n                   )\ndata2 = [intensivecare,intubates]\nlayout = dict(title = \"SARS- Cov- 2 Intensivecare and Intubates Patient Number in Turkey \", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","9bc43942":"\nintensivecare = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalIntensiveCare,\n                    mode = \"lines+markers\",\n                    name = \"totalIntensivecare\",\n                    marker = dict(color = 'rgba(72,118 ,255, 0.8)'),\n                    text= after26thofmarch.totalIntensiveCare\n                   )\nintubates = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalnumberofIntubates,\n                    mode = \"lines+markers\",\n                    name = \"totalIntubates\",\n                    marker = dict(color = 'rgba(139, 90, 43, 0.8)'),\n                    text= after26thofmarch.totalnumberofIntubates\n                   )\ndata2 = [intensivecare,intubates]\nlayout = dict(title = \"SARS- Cov- 2 Intensivecare and Intubates Patient Number in Turkey \", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","e4917456":"intensivecare = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalIntensiveCare,\n                    mode = \"lines+markers\",\n                    name = \"totalIntensivecare\",\n                    marker = dict(color = 'rgba(72,118 ,255, 0.8)'),\n                    text= after26thofmarch.totalIntensiveCare\n                   )\nintubates = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalnumberofIntubates,\n                    mode = \"lines+markers\",\n                    name = \"totalIntubates\",\n                    marker = dict(color = 'rgba(139, 90, 43, 0.8)'),\n                    text= after26thofmarch.totalnumberofIntubates\n                   )\ndata2 = [intensivecare,intubates]\nlayout = dict(title = \"SARS- Cov- 2 Intensivecare and Intubates Patient Number in Turkey \", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","7d0c71b1":"intensivecare = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalIntensiveCare,\n                    mode = \"lines+markers\",\n                    name = \"totalIntensivecare\",\n                    marker = dict(color = 'rgba(72,118 ,255, 0.8)'),\n                    text= after26thofmarch.totalIntensiveCare\n                   )\nintubates = go.Scatter(x =after26thofmarch.Date,\n                    y = after26thofmarch.totalnumberofIntubates,\n                    mode = \"lines+markers\",\n                    name = \"totalIntubates\",\n                    marker = dict(color = 'rgba(139, 90, 43, 0.8)'),\n                    text= after26thofmarch.totalnumberofIntubates\n                   )\ndata2 = [intensivecare,intubates]\nlayout = dict(title = \"SARS- Cov- 2 Intensivecare and Intubates Patient Number in Turkey \", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number of Person'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","ea1ede5f":"case_rate_ = go.Scatter(x = data.Date,\n                    y = data['Case Increase Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Case Increase Rate\",\n                    marker = dict(color = 'rgba(135, 206, 250, 0.8)'),\n                    text= data['Case Increase Rate']\n                   )\ndeath_rate_ = go.Scatter(x = data.Date,\n                    y = data['Death Increase Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Death Increase Rate\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.8)'),\n                    text= data['Death Increase Rate']\n                   )\npositive_test_rate = go.Scatter(x = data.Date,\n                    y = data['Positive\/Test Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Positive\/Test Rate\",\n                    marker = dict(color = 'rgba(220, 218, 68, 0.8)'),\n                    text= data['Positive\/Test Rate']\n                   )\ndata2 = [case_rate_, death_rate_, positive_test_rate]\nlayout = dict(title = \"SARS- Cov- 2 Daily Rates in Turkey\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Rate \/ Rate'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","88ef25d9":"case_rate_ = go.Scatter(x = data.Date,\n                    y = data['Case Increase Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Case Increase Rate\",\n                    marker = dict(color = 'rgba(135, 206, 250, 0.8)'),\n                    text= data['Case Increase Rate']\n                   )\nlayout = dict(title = \"SARS- Cov- 2 Turkey Daily Case Increase Rate\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Rate \/ Rate'), xaxis_tickangle=-45)\nfig = dict(data = case_rate_, layout = layout)\niplot(fig)","19476051":"death_rate_ = go.Scatter(x = data.Date,\n                    y = data['Death Increase Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Death Increase Rate\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.8)'),\n                    text= data['Death Increase Rate']\n                   )\nlayout = dict(title = \"SARS- Cov- 2 Turkey Daily Death Increase Rate\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Rate \/ Rate'), xaxis_tickangle=-45)\nfig = dict(data = death_rate_, layout = layout)\niplot(fig)","16f9c55b":"test = go.Scatter(x = data.Date,\n                    y = data['number_of_tests'],\n                    mode = \"lines+markers\",\n                    name = \"Test Number\",\n                    marker = dict(color = 'rgba(220, 218, 68, 0.8)'),\n                    text= data['number_of_tests']\n                   )\nlayout = dict(title = \"SARS- Cov- 2 Turkey Daily Test Number\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Number'), xaxis_tickangle=-45)\nfig = dict(data = test, layout = layout)\niplot(fig)","e3f443f3":"positive_test_rate = go.Scatter(x = data.Date,\n                    y = data['Positive\/Test Rate'],\n                    mode = \"lines+markers\",\n                    name = \"Positive\/Test Rate\",\n                    marker = dict(color = 'rgba(220, 218, 68, 0.8)'),\n                    text= data['Positive\/Test Rate']\n                   )\nlayout = dict(title = \"SARS- Cov- ' Turkey Daily Positive\/Test Rate'\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Rate \/ Rate'), xaxis_tickangle=-45)\nfig = dict(data = positive_test_rate, layout = layout)\niplot(fig)","adfee708":"case_increase = go.Scatter(x = data.Date,\n                        y = data['Case Increase'],\n                    mode = \"lines+markers\",\n                    name = \"Case Increase Number\",\n                    marker = dict(color = 'rgba(135, 206, 250, 0.8)'),\n                    text= data['Case Increase']\n                   )\ntest_increase = go.Scatter(x = data.Date,\n                        y = data['Test Increase'],\n                    mode = \"lines+markers\",\n                    name = \"Test Increase Number\",\n                    marker = dict(color = 'rgba(220, 218, 68, 0.8)'),\n                    text= data['Test Increase']\n                   )\ndata2 =[case_increase,test_increase] \nlayout = dict(title = \"SARS- Cov- 2 Turkey Case Increase and Test Increase Number\", \n              xaxis= dict(title= 'Date \/ Date'), yaxis= dict(title= 'Rate \/ Rate'), xaxis_tickangle=-45)\nfig = dict(data = data2, layout = layout)\niplot(fig)","e2a51366":"province_data.head()","87b01fd0":"province_data.info()","9860a48f":"province_data.rename(columns = {\"Province\" : \"City\", \"Number of Case\" : \"Number of Case\"}, inplace = True)","2b40fa53":"province_data.sort_values(by=['Number of Case'], ascending=False, inplace = True)","4811014f":"#province_df = province_data.head(10)\nfig = px.pie(province_data.head(10), values='Number of Case', names='City', title='Number of Cases in the Citys')\nfig.show()","dc4e2740":"province_df2 = province_data[1:]\nfig = px.pie(province_df2, values='Number of Case', names='City', title='Number of Cases of Cities Outside of Istanbul', \n             hover_data=['Number of Case'])\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","8e1716f3":"fig = px.bar(province_data, x=\"City\", y=\"Number of Case\", title='Number of Cases in the Citys')\nfig.update_layout(barmode='group')\nfig.show()","bbc6faf3":"fig = px.bar(province_df2, x=\"City\", y=\"Number of Case\", title='Number of Cases of Cities Outside of Istanbul')\nfig.update_layout(barmode='group')\nfig.show()","cb7932dc":"fig = px.bar(province_df2.head(15), x=\"City\", y=\"Number of Case\", title='Case Numbers of Top 15 Cities Outside of Istanbul')\nfig.update_layout(barmode='group')\nfig.show()","531da7e1":"\nThe number of TESTS, the increase in the number of DEATHS and the number of POSITIVE DAILY CASES","c0ab63be":"Visualization","57648dc7":"City Visualization"}}