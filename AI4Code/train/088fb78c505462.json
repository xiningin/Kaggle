{"cell_type":{"8445bdbb":"code","39e87de1":"code","1a9d60e8":"code","3793448d":"code","60002adc":"code","531bc1d5":"code","a508d1fd":"code","b185a650":"code","d226c3fd":"code","61bc9ef9":"code","979fd260":"code","cbafe9f8":"code","bdf5e61d":"code","96458b71":"code","37ede429":"code","dc5e2cf1":"code","69922817":"code","9e1cb319":"code","23589acc":"code","7cb90700":"code","fcb5d55c":"code","b6f18660":"code","b39c93a0":"code","c7c98445":"code","a241bcb1":"code","272d88d6":"code","824b5180":"code","b965351d":"code","eee13558":"code","ddfaf3f0":"code","58bb4292":"code","225659c6":"code","3a6b6549":"code","7c261ffb":"code","40e5b6ba":"code","d8bfef02":"code","3ae83ee1":"code","54a41f69":"code","c7be6ae9":"code","a7e8f6be":"code","7f4b456e":"code","79109180":"code","695ed065":"code","9a546122":"code","b190d08c":"code","aaad01b8":"code","f367b24c":"markdown","b83f6205":"markdown","79ea2fcc":"markdown","27c2803e":"markdown","f4e52b43":"markdown","b5d5ce5c":"markdown","6190d2fc":"markdown","2439de5c":"markdown","edbd43a6":"markdown","b071d8e5":"markdown","d2435458":"markdown","6a0b4263":"markdown","49f82267":"markdown","64146ec2":"markdown","a14231ce":"markdown","a2deadbd":"markdown","595af3bc":"markdown","63e9078f":"markdown","ae8b2b1c":"markdown","f33b4d4c":"markdown","b096c5ea":"markdown","8eb3f5f6":"markdown","a7742774":"markdown","67929058":"markdown","9f5e16b3":"markdown","835f4263":"markdown","e76e341e":"markdown","0aa45a32":"markdown","b447538f":"markdown","84ed2fec":"markdown","54774a08":"markdown","b1c0542e":"markdown","1dab54b0":"markdown","d60699a3":"markdown","589dbe25":"markdown","c13194ad":"markdown","a6a0cb35":"markdown","b5d80b76":"markdown"},"source":{"8445bdbb":"import pandas as pd\nimport numpy as np\n\n#Importing data visulaisation libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport missingno as msno\nimport warnings\nwarnings.filterwarnings('ignore')","39e87de1":"df=pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndf.head()","1a9d60e8":"msno.matrix(df)  ","3793448d":"df.describe().T   #Statistical details of the dataframe","60002adc":"print('Shape of dataframe:',df.shape) #Shape of the dataframe\nprint('\\n')\nprint('Columns of the dataset:',df.columns) #Names of columns of the dataset","531bc1d5":"sns.countplot(x='stroke',data=df)","a508d1fd":"#Plotting a heatmap to find correlations between the variables.\n\nplt.figure(figsize=(12,6))\nsns.heatmap(df.corr(),cmap='coolwarm',annot=True)","b185a650":"print(df.groupby('gender').stroke.value_counts().to_frame())\n\nsns.set_style('whitegrid')\nsns.countplot(x='stroke',data=df,hue='gender',palette='spring')\nplt.title('Gender wise stroke count',fontweight='bold')","d226c3fd":"print(df.groupby('gender').hypertension.value_counts())\n\nsns.countplot(x='hypertension',data=df,hue='gender',palette='summer')\nplt.title('Gender wise hypertension count',fontweight='bold')","61bc9ef9":"print(df.groupby('gender').heart_disease.value_counts())\n\nsns.countplot(x='heart_disease',data=df,hue='gender',palette='autumn')\nplt.title('Gender wise heart disease count',fontweight='bold')","979fd260":"print(df.groupby('stroke').Residence_type.value_counts())\n\nsns.countplot(x='Residence_type',data=df,hue='gender')","cbafe9f8":"#A function is defined which classifies the average glucose level of the people into various categories like high, low and normal.\n#This function is applied on the avg_glucose_level column and another column is added to the dataframe df based on the results obtained on applying this function.\n\ndef glucose_level(amount):\n    if amount<60:\n        return 'Dangerously low'\n    elif 60<=amount<90:\n        return 'Low'\n    elif 90<=amount<110:\n        return 'Normal'\n    elif 110<=amount<140:\n        return 'Slightly high'\n    elif 140<=amount<240:\n        return 'High'\n    elif 240<=amount<300:\n        return 'Extremely high'\n    else:\n        return 'Dangerously high, requires medical attention'\n    \n#This classification is done based on the data available on the internet.\n    \ndf['Glucose_level_chart']=df['avg_glucose_level'].apply(glucose_level)\ndf.head()","bdf5e61d":"print(df.groupby('stroke').Glucose_level_chart.value_counts())\n\nsns.set_style('ticks')\nfig,axes=plt.subplots(1,2,figsize=(18,4))\nsns.countplot(ax=axes[0],x='Glucose_level_chart',data=df,hue='stroke',color='green')\nsns.countplot(ax=axes[1],x='Glucose_level_chart',data=df,hue='gender',color='cyan')","96458b71":"list_stroke=[]\n\nfor i in df['age'].index:\n    if (df['stroke'][i]==1):\n        list_stroke.append(df['age'][i])\nprint('Total number of people who suffered a stroke:', len(list_stroke))\n\nsns.set_style('whitegrid')\nplt.figure(figsize=(12,6))\nplt.title('Age distribution of people who suffered a stroke',fontweight='bold',fontsize=14)\nplt.xlabel('Age')\nsns.distplot(list_stroke,bins=50)","37ede429":"Male_patients=[]\nFemale_patients=[]\nfor i in df['age'].index:\n    if (df['stroke'][i]==1):\n        if (df['gender'][i]=='Male'):\n            Male_patients.append(df['age'][i])\n        else:\n            Female_patients.append(df['age'][i])\n            \nfig,axes=plt.subplots(1,2,figsize=(18,4))\nsns.distplot(Male_patients,ax=axes[0],color='orange',bins=25,kde=False)\nsns.distplot(Female_patients,ax=axes[1],color='yellow',bins=25,kde=False)\naxes[0].set_title('Age wise chances of stroke among males',fontweight='bold')\naxes[0].set_xlabel('Age of male patient')\naxes[1].set_title('Age wise chances of stroke among females',fontweight='bold')\naxes[1].set_xlabel('Age of female patient')","dc5e2cf1":"print(df.groupby('work_type').stroke.value_counts())\n\nplt.figure(figsize=(10,4))\nplt.title('Work type and stroke',fontweight='bold')\nplt.xlabel('Work')\nsns.countplot(x='work_type',data=df,hue='stroke',palette='dark')","69922817":"print(df.groupby('smoking_status').stroke.value_counts())\n\nplt.title('Smoking status analysis',fontweight='bold')\nplt.xlabel('Smoking status')\nsns.countplot(x='smoking_status',data=df,hue='gender',color='black')","9e1cb319":"plt.figure(figsize=(8,6))\nsns.heatmap(df.isnull(),cmap='viridis')","23589acc":"#Only the bmi column has missing data.\n#Filling in the missing values for bmi.\n   \n #1. Creating a function to classify bmi values into different groups.\n #2. Based on the classification we will create box plots.\n #3. Based on the averages obtained through box plots we will fill the average value in different classifications made in #1. \n\ndef bmi_values(bmi_values):\n    if bmi_values<20:\n        return 'undernourished'\n    elif 20<=bmi_values<30:\n        return 'normal_weight_1'\n    elif 30<=bmi_values<40:\n        return 'overweight'\n    elif 40<=bmi_values<50:\n        return 'Obese I'\n    elif 50<=bmi_values<70:\n        return 'Obese II'\n    elif 70<=bmi_values<100:\n        return 'Obese III'\n    else:\n        pass\ndf['bmi_classification']=df['bmi'].apply(bmi_values)\ndf.head()","7cb90700":"print(df.groupby('bmi_classification').stroke.value_counts())\n\nplt.figure(figsize=(12,8))  #Box plots\nsns.set_style('whitegrid')\nsns.boxplot(x='bmi_classification',y='bmi',data=df)\nplt.title('BMI classes',fontweight='bold',fontsize=12)","fcb5d55c":"def bmi_fill(bmi_value):       #Filling in values based on the results obatined from the box plot.\n    if pd.isnull(bmi_value):   \n        if bmi_value<=20:\n            return 17\n        elif 20<bmi_value<=30:\n            return 26\n        elif 30<bmi_value<=40:\n            return 33\n        elif 40<bmi_value<=50:\n            return 43\n        elif 50<bmi_value<=70:\n            return 55\n        elif 70<bmi_value<=100:\n            return 63\n        else:\n            return 105\n    else:\n        return bmi_value \n    \ndf['bmi']=df['bmi'].apply(bmi_fill)\ndf.head()  ","b6f18660":"df['bmi'].isnull().sum()","b39c93a0":"sns.pairplot(df.corr())","c7c98445":"Gender =pd.get_dummies(df['gender'],drop_first=True)   #Getting dummies for categorical column -'gender' (that has strings)\ndf=pd.concat([df,Gender],axis=1)","a241bcb1":"df.head()","272d88d6":"#Now there are no missing values in the bmi column.\n\n#Dropping the columns that are not required for training the model.\ndf.drop(['id','bmi_classification','work_type','ever_married','Residence_type','smoking_status','Glucose_level_chart','gender'],axis=1,inplace=True)\ndf.head()","824b5180":"X = df.drop(columns=[\"stroke\"])\ny = df[\"stroke\"]","b965351d":"print('Shape of X:', X.shape)\nX.head()","eee13558":"print('Shape of y:', y.shape)\ny.head()","ddfaf3f0":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=101)\nfrom sklearn.tree import DecisionTreeClassifier","58bb4292":"print('Shape of X after statifcation: ', X.shape)\nprint('Shape of y after stratification: ', y.shape)","225659c6":"lm=DecisionTreeClassifier()","3a6b6549":"lm.fit(X_train,y_train)","7c261ffb":"lm_predictions=lm.predict(X_test)","40e5b6ba":"from sklearn.metrics import classification_report,confusion_matrix","d8bfef02":"print(classification_report(y_test,lm_predictions))","3ae83ee1":"print(confusion_matrix(y_test,lm_predictions))","54a41f69":"lm.score(X_test,y_test)","c7be6ae9":"#Error in case of Decision tree model\n\nfrom sklearn.metrics import mean_squared_error\nmean_sq_error=mean_squared_error(y_test,lm_predictions)\nprint('Mean squared error: ',mean_sq_error)\nprint('Root mean squared error ',mean_sq_error**0.5)","a7e8f6be":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=101)\n\nfrom sklearn.ensemble import RandomForestClassifier","7f4b456e":"rfc=RandomForestClassifier()","79109180":"rfc.fit(X_train,y_train)","695ed065":"prediction_rfc= rfc.predict(X_test)","9a546122":"print('Confusion Matrix; ')\nprint(confusion_matrix(y_test,prediction_rfc))\nprint('\\n')\nprint('Classification Report: ')\nprint(classification_report(y_test,prediction_rfc))","b190d08c":"rfc.score(X_test,y_test)","aaad01b8":"#Error in case of Random forest model\n\nmean_sq_error_rfc=mean_squared_error(y_test,prediction_rfc)\nprint('Mean squared error: ',mean_sq_error_rfc)\nprint('Root mean squared error ',mean_sq_error_rfc**0.5)","f367b24c":"### Heatmap","b83f6205":"Mean squared error in case of Random Forest Classifier is 0.053 whereas in case of Decision Tree model the mean squared error is 0.097.\n\n**Random forest model yields better predictions in this case.**","79ea2fcc":"### Pairplots \nPairplots show the correlation of each feature with every other feature.","27c2803e":"### Relation between gender and hypertension","f4e52b43":"Total no. of females in the dataset = 2853+141 = 2994\n\nTotal no. of females who suffered a stroke = 141\n\n% of females who suffered a stroke = (141\/2994)*100 = 4.70%\n\nTotal number of males in the dataset = 2007+108 = 2115\n\nTotal number of males who suffered a stroke = 108\n\n% of males who suffered a stroke= (108\/2115)*100 = 5.10%\n\nThus, according to the dataset, **the risk of stroke among males is comparitively higher.** ","b5d5ce5c":"### Work type and stroke analysis","6190d2fc":"## Creating model and making predictions","2439de5c":"## Random Forest Classifier","edbd43a6":"**BMI column has missing values.**","b071d8e5":"### Filling in missing values","d2435458":"### Relation between gender and heart disease","6a0b4263":"\n## Thanks for reading. :)","49f82267":"#### Missing values","64146ec2":"Total no. of females in the dataset = 2994\n\nTotal no. of females who suffer from hypertension = 276\n\n% of females who suffered a stroke = (276\/2994)*100 = 9.21%\n\nTotal number of males in the dataset = 2115\n\nTotal number of males who suffered a stroke = 222\n\n% of males who suffered a stroke= (222\/2115)*100 = 10.49%\n\nThus, among the people surveyed **hypertension is more common among males.** ","a14231ce":"## Decision Tree","a2deadbd":"#### Errors % in the model predictions","595af3bc":"## Exploratory Data Analysis","63e9078f":"### Relation between smoking status and stroke","ae8b2b1c":"#### Statistical insights","f33b4d4c":"People with high and low average glucose level are at higher risk of suffering a stroke compared to people with normal glucose level.\n\nTotal number of people with low average glucose level = 2102+80 = 2181\n\nNumber of people having low average glucose level who suffered a stroke = 80\n\n**% of people having low average glucose level who suffered a stroke = (80\/2181)*100 = 3.66%**\n\nTotal number of people with high average glucose level = 684+82 = 766\n\nNumber of people having high average glucose level who suffered a stroke = 82\n\n**% of people having high average glucose level who suffered a stroke = (82\/766)*100 = 10.7%**\n","b096c5ea":"The plot shows clearly that chances of males suffering from a heart disease (value=1) is higher than females.  \n    \nTotal no. of females in the dataset = 2994\n\nTotal no. of females who suffer from a heart disease = 113\n\n% of females who suffered a stroke = (113\/2994)*100 = 3.77%\n\nTotal number of males in the dataset = 2115\n\nTotal number of males who suffered a stroke = 163\n\n% of males who suffered a stroke= (163\/2115)*100 = 7.70%\n\nThus on calculating also we see, among the people surveyed **more males suffer from some kind of heart disease compared to females (NEARLY DOUBLE)**. ","8eb3f5f6":"#### Getting dummies for categorical column","a7742774":"**Stroke is a leading cause of death in the US and a major cause of severe disability in adults. The sudden death of living brain cells due to loss of blood flow or lack of  oxygen flow to brain is almost fatal.**\n\nThe stroke prediction dataset used here contains data like age, average glucose level in body, whether or not they had a heart disease or hypertension, etc of patients.The data is split into training and test data and the training data is used to create models that predict whether or not an entry from the test data will suffer a stroke.\n\n**Let us undetstand the elements of the dataset, make some general observations and develop a model to predict stroke on new data.**\n\n### Do upvote if you like the analysis. :)","67929058":"![image.png](attachment:500c4b35-3996-4f4f-994f-e71fb573ec23.png)","9f5e16b3":"### Relation between age and chances of stroke","835f4263":"### Relation between stroke, gender and their average glucose level","e76e341e":"### Relation between residence type and stroke","0aa45a32":"#### Filling in 'bmi' column with appropriate values","b447538f":"### Gender and chances of stroke","84ed2fec":"## Importing libraries","54774a08":"It can be seen that the three major work types are:\n\n1.Private jobs-\n\n% of employees in **private sector** who have suffered a stroke = (149\/2925)*100 = 5.09%\n\n2.Government jobs-\n\n% of **government employees** who have suffered a stroke = (33\/657)*100 = 5.02%\n\n3.Self-employed-\n\n% of **self-employed people** who have suffered a stroke = (65\/819)*100 = 7.93%\n\nIt can be observed that the employment type does not have a very significant role to play while analysing the occurence of stroke. While the % remains almost the **same for private and government employees, self-employed people are more prone** a stroke according to the information provided in the dataset.","b1c0542e":"#### Errors % in the model predictions","1dab54b0":"From the heatmap, it can be seen that the **correlation of stroke with age of the person is the highest compared to the other factors** i.e., 0.25. Average glucose level, hypertension and heat disease have equal values.","d60699a3":"It can be seen that the age of **most of the people who have suffered a stroke is between 70-80 years** (more count is in between the age 75-80 years).","589dbe25":"#### Reading data and displaying first the 5 rows of the dataframe","c13194ad":"No null values are left in the dataframe now.","a6a0cb35":"Total number of people living in urban areas = 2465+135 = 2600\n\nNo. of people from urban areas who suffered a stroke = 135\n\n% of people from urban areas who suffered a stroke = (135\/2600)*100 = 5.16%\n\nTotal number of people living in rural areas = 2400+114 = 2514\n\nNo. of people from rural areas who suffered a stroke = 114\n\n% of people from rural areas who suffered a stroke = (114\/2514)*100 = 4.53%\n\nFrom the values obtained above, it can be seen that the **chances of stroke among people living in urban areas is VERY SLIGHTLY higher than that among people from rural areas.**\n\nThis looks pretty logical because people belonging to cities and towns generally have a sedentary lifestyle and suffer from more stress. These could be the major factors that could lead to a stroke.","b5d80b76":"The smoking status of a huge lot of people is unknown. However, on analysing the available data we see:\n\n% of people who suffered a stroke and **smoke or have formerly smoked = (112\/1674)*100 = 6.69%**\n\n% of people who suffered a stroke and **have never smoked = (90\/1802)*100 = 4.99%**\n\n**Smoking** can also be considered as a **contributing factor in the occurrence of stroke.**"}}