{"cell_type":{"102c85ab":"code","9f3aae45":"code","0c030f5a":"code","5c30fe39":"code","839f5bf2":"code","1d471dbd":"code","f5986486":"code","cf7b8dde":"code","9a44b6da":"code","26db5f10":"code","a8c0016e":"code","0cca42fd":"code","f87def95":"code","5bbc1bfe":"code","c3b1b3dc":"markdown","cff45808":"markdown","dcdc102b":"markdown","fd972658":"markdown","079d0496":"markdown","4ee7330f":"markdown","b27f4aec":"markdown","ac5bfe68":"markdown","98684e53":"markdown"},"source":{"102c85ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9f3aae45":"import matplotlib.pyplot as plt\nimport matplotlib\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\nimport seaborn as sns \nimport numpy as np\nimport pandas as pd\nimport numpy as np\nimport random as rnd\nimport re\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nimport matplotlib.gridspec as gridspec\nfrom sklearn.preprocessing import StandardScaler\nfrom numpy import genfromtxt\nfrom scipy.stats import multivariate_normal\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import recall_score , average_precision_score\nfrom sklearn.metrics import precision_score, precision_recall_curve\nplt.style.use('fivethirtyeight')\n%matplotlib inline","0c030f5a":"School_df = pd.read_csv(\"..\/input\/2016 School Explorer.csv\")","5c30fe39":"layout = go.Layout(xaxis=dict(title='City Name',tickangle=-35),\n      yaxis=dict(title='Number of Schools'),title='Maximum Number of Schools-City Wise', width=1000, height=500, margin=dict(l=100))\ntrace1 = go.Bar(x=School_df['City'].value_counts().index, y=School_df['City'].value_counts().values, marker=dict(color=\"#FF7441\"))\n\ndata = [trace1]\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\n","839f5bf2":"df = pd.DataFrame(School_df['Community School?'].value_counts().values,\n                  index=School_df['Community School?'].value_counts().index, \n                  columns=[' '])\n\ndf.plot(kind='pie', subplots=True, autopct='%1.0f%%', figsize=(8, 8))\nplt.title('Distribution of Schools-Community & Others')\nplt.show()","1d471dbd":"School_df['School Income Estimate']=School_df['School Income Estimate'].replace({'\\$':'', ',':''},regex=True).astype(float)\ntrace0 = go.Scatter(\n    x=School_df[School_df['Community School?'] == 'Yes']['School Income Estimate'],\n    y=School_df[School_df['Community School?'] == 'Yes']['Economic Need Index'],\n    mode='markers',\n    name='Community School? = Yes',\n    marker=dict(\n        size=2,\n        line=dict(\n            color='blue',\n            width=10\n        ),\n        \n    )\n)\ntrace1 = go.Scatter(\n    x=School_df[School_df['Community School?'] == 'No']['School Income Estimate'],\n    y=School_df[School_df['Community School?'] == 'No']['Economic Need Index'],\n    mode='markers',\n    name='Community School? = No',\n    marker=dict(\n        size=2,\n        line=dict(\n            color='red',\n            width=2.5\n        ),\n        \n    )\n)\ndata = [trace0, trace1]\nlayout = go.Layout(\n      xaxis=dict(title='School Income Estimate'),\n      yaxis=dict(title='Economic Need Index'),\n      title=('Economic Need Assessment'))\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","f5986486":"t0 = go.Scatter3d(\n    x=School_df[School_df['Community School?'] == 'Yes']['School Income Estimate'],\n    y=School_df[School_df['Community School?'] == 'Yes']['Economic Need Index'],\n    z=School_df[School_df['Community School?'] == 'Yes']['Grade High'],\n    mode='markers',\n    name='Community School? = Yes',\n    marker=dict(\n        size=2,\n        line=dict(\n            color='blue',\n            width=10\n        ),\n        \n    )\n)\nt1 = go.Scatter3d(\n    x=School_df[School_df['Community School?'] == 'No']['School Income Estimate'],\n    y=School_df[School_df['Community School?'] == 'No']['Economic Need Index'],\n    z=School_df[School_df['Community School?'] == 'No']['Grade High'],\n    mode='markers',\n    name='Community School? = No',\n    marker=dict(\n        size=2,\n        line=dict(\n            color='red',\n            width=2.5\n        ),\n        \n    )\n)\ndata = [trace0, trace1]\nlayout = go.Layout(\n      xaxis=dict(title='School Income'),\n      yaxis=dict(title='Economic Need Status'),\n      title=('Economic Status-Community vs Private'))\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\n","cf7b8dde":"School_df['Percent Black']=School_df['Percent Black'].replace({'\\%':''},regex=True).astype(float)\nSchool_df['Percent Black']=School_df['Percent Black']\/100\nSchool_df['Percent White']=School_df['Percent White'].replace({'\\%':''},regex=True).astype(float)\nSchool_df['Percent White']=School_df['Percent White']\/100\nSchool_df['Percent Asian']=School_df['Percent Asian'].replace({'\\%':''},regex=True).astype(float)\nSchool_df['Percent Asian']=School_df['Percent Asian']\/100\nSchool_df['Percent Hispanic']=School_df['Percent Hispanic'].replace({'\\%':''},regex=True).astype(float)\nSchool_df['Percent Hispanic']=School_df['Percent Hispanic']\/100\nSchool_df['Percent Black \/ Hispanic']=School_df['Percent Black \/ Hispanic'].replace({'\\%':''},regex=True).astype(float)\nSchool_df['Percent Black \/ Hispanic']=School_df['Percent Black \/ Hispanic']\/100","9a44b6da":"no_comnt_school = School_df[School_df['Community School?'] == 'No']\ncomnt_school = School_df[School_df['Community School?'] == 'Yes']","26db5f10":"v_features = ['Percent Hispanic','Percent Black','Percent White','Percent Asian']\nplt.figure(figsize=(15,8))\ngs = gridspec.GridSpec(1,4)\nfor i, cn in enumerate(no_comnt_school[v_features]):\n    ax = plt.subplot(gs[i])\n    sns.boxplot(y = cn , data = no_comnt_school)\n    ax.set_title(str(cn)[0:])\n    ax.set_ylabel(' ')","a8c0016e":"plt.figure(figsize=(15,8))\ngs = gridspec.GridSpec(1,4)\nfor i, cn in enumerate(comnt_school[v_features]):\n    ax = plt.subplot(gs[i])\n    sns.boxplot(y = cn , data = comnt_school)\n    ax.set_title(str(cn)[0:])\n    ax.set_ylabel(' ')","0cca42fd":"comnt_school = School_df[School_df['Community School?'] == 'Yes']\nnyccomnt_school=comnt_school[comnt_school['City'] == 'NEW YORK']\n#&School_df[School_df['City'] == 'NEW YORK']\nv_features = ['Percent Asian']\nplt.figure(figsize=(15,8))\ngs = gridspec.GridSpec(1,4)\nfor i, cn in enumerate(nyccomnt_school[v_features]):\n    ax = plt.subplot(gs[i])\n    sns.boxplot(y = cn , data =nyccomnt_school)\n    ax.set_title(str(cn)[0:])\n    ax.set_ylabel(' ')","f87def95":"v_features=['Rigorous Instruction Rating','Collaborative Teachers Rating','Supportive Environment Rating','Effective School Leadership Rating','Strong Family-Community Ties Rating','Trust Rating']\nplt.figure(figsize=(20,55))\ngs = gridspec.GridSpec(15, 2)\nfor i, cn in enumerate(School_df[v_features]):\n    ax = plt.subplot(gs[i])\n    sns.countplot(y=str(cn), data=School_df,order=School_df[str(cn)].value_counts().index, palette=\"Set2\")\n    ax.set_title(str(cn))\n    ax.set_xlabel(' ')\n    ax.set_ylabel(' ')","5bbc1bfe":"f,ax=plt.subplots(1,2,figsize=(15,7))\nsns.barplot( y = School_df['Grade High'].dropna().value_counts().index,\n            x = School_df['Grade High'].dropna().value_counts().values,\n                palette=\"winter\",ax=ax[0])\nax[0].set_title('Grade High')\nax[0].set_yticklabels(School_df['Grade High'].dropna().value_counts().index, \n                      rotation='horizontal', fontsize='large')\nax[0].set_ylabel('')\nsns.barplot( y = School_df['Grade Low'].dropna().value_counts().index,\n            x = School_df['Grade Low'].dropna().value_counts().values,\n                palette=\"summer\",ax=ax[1])\nax[1].set_title('Grade Low')\nax[1].set_yticklabels(School_df['Grade Low'].dropna().value_counts().index, \n                      rotation='horizontal', fontsize='large')\nax[1].set_ylabel('')\nplt.subplots_adjust(wspace=0.8)\nplt.show()","c3b1b3dc":"9 Describe out the number of schools with high and low grades in the dataset****.","cff45808":"5 Describe out the distribution of various races in non community schools.","dcdc102b":"6 Describe out the distribution of various races in community schools.[](http:\/\/)","fd972658":"3 Describe out the comparison between Community schools and Private Schools, along with their economic index","079d0496":"7 Describe out the distribution of Asians in community schools in NYC?****","4ee7330f":"1. What is the count of number of schools in a city, arrage from maximum to minimum?","b27f4aec":"We have found that Economic Need index is inversely proportional to school income for community as well as private schools.\n  4 Describe out the comparison between Community schools and Private Schools, along with their economic index using 3d scatter plot","ac5bfe68":"2 Which is the percentage of community schools in the entire set?","98684e53":"8 Describe the rating statistics of the school in the data set."}}