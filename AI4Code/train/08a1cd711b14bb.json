{"cell_type":{"6f2578a7":"code","dccd982a":"code","1bcebc46":"code","dba427b0":"code","88f4d2e3":"code","755f3678":"code","349765bc":"code","ee50dbca":"code","5ebe1ba0":"code","a6ec8bcf":"code","daae5bab":"code","1073871a":"code","21e764f7":"code","ff1f7ecc":"code","eead3395":"code","eaf70b61":"code","dec37f3c":"code","6e29ead0":"code","3663e481":"code","d5001ae4":"code","52751424":"code","dcf7e2b3":"code","de5f846c":"code","507ae6f4":"code","4b4c176e":"code","4d3a36be":"code","87f08e16":"code","4dac31fb":"code","556d0b51":"code","0fb11862":"code","8c8955b0":"code","0e2b1155":"code","0290b7cd":"code","0604b341":"code","1d925c71":"code","bd427b96":"code","0b5ee67b":"code","56257941":"code","bcc9615a":"code","d8a20926":"code","95763a6e":"markdown","0bab9bc7":"markdown","1a3a7d8c":"markdown","1baf5ff5":"markdown","d1bf4c67":"markdown","7d5ad7f4":"markdown","94c1702a":"markdown","7b3b809e":"markdown","eb8ba3e7":"markdown","02eab196":"markdown","ad9aeb0c":"markdown","c96a3bb4":"markdown","52ee511a":"markdown","3079b8bf":"markdown","e0b31188":"markdown","6f01603b":"markdown","0be14665":"markdown","c4e9ca8b":"markdown","07436b1f":"markdown","219f2537":"markdown","65103f5e":"markdown","44c1c501":"markdown","30701639":"markdown","bf712ddf":"markdown","965a4e3a":"markdown","8375ae75":"markdown","b5d79b21":"markdown","3da6f548":"markdown","4b56ff1e":"markdown","8c57f75d":"markdown","21d96b6f":"markdown","111e9e1c":"markdown","66952420":"markdown","cd64073c":"markdown","c041ddc8":"markdown","57c512e5":"markdown","f0e37bde":"markdown","fc0d93ab":"markdown","5a4ba684":"markdown"},"source":{"6f2578a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport seaborn as sns\nimport scipy.stats as stats\nimport warnings\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nwarnings.filterwarnings('ignore')","dccd982a":"df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","1bcebc46":"df.sample(5)","dba427b0":"df.columns","88f4d2e3":"serial_nums = df['Serial No.']\ndf.drop(columns=['Serial No.'],inplace=True)","755f3678":"df.shape","349765bc":"df.rename(columns={\"Chance of Admit \":\"Chance of Admit\",\n                  \"LOR \":\"LOR\"},inplace=True)","ee50dbca":"df.describe()","5ebe1ba0":"df.info()","a6ec8bcf":"df.nunique().sort_values()","daae5bab":"cat_columns = ['University Rating','SOP','LOR','Research']","1073871a":"num_columns = list(set(df.columns) - set(cat_columns))\nnum_columns ","21e764f7":"df.isna().sum()","ff1f7ecc":"df['Chance of Admit'].head()","eead3395":"df['Chance of Admit'].describe()","eaf70b61":"q3 = df['Chance of Admit'].quantile(q=0.75)\ndf['High Chance'] = df['Chance of Admit'].apply(lambda x: 1 if x>= q3 else 0)","dec37f3c":"y = df['Chance of Admit']\ny_skew = y.skew()\nylog_skew = np.log(y).skew()\ny_kurt = y.kurtosis()\nylog_kurt = np.log(y).kurtosis()\nprint('Skew range, current:',y_skew)\nprint('Skew range, log:',ylog_skew)\nprint('Kurtosis, current:',y_kurt)\nprint('Kurtosis range, log:',ylog_kurt)\n\nplt.figure(figsize=(10,8));\nplt.title('Normal v\/s Log normal plot')\nsns.distplot(y,color='g',label=\"Normal\")\nsns.distplot(np.log(y),label=\"Log Normal\")\nplt.legend()\nplt.show()","6e29ead0":"cat_columns","3663e481":"n_cat_cols = len(cat_columns)\n# fig,ax = plt.subplots(1,n_cat_cols,figsize=(8*n_cat_cols,6))\n# for i,col_name in enumerate(cat_columns):\n#     plt.subplot(ax[i])\nplt.rcParams['figure.figsize'] = 8,10\nsns.boxplot(data=df.loc[:,cat_columns],orient='h')\nplt.show()   ","d5001ae4":"df.iloc[347]","52751424":"q1 = df['LOR'].quantile(q=0.25)\nq3 = df['LOR'].quantile(q=0.75)\n\nlower_limit = q1 - (q3-q1)*1.5\ndf['LOR'].loc[df['LOR'] < lower_limit] = np.NaN\n\n# I checked the forward value and it is 2, so it will be safe to replace with forward fill\ndf['LOR'].fillna(method=\"ffill\",inplace=True)","dcf7e2b3":"fig,ax = plt.subplots(1,n_cat_cols,figsize=(6*n_cat_cols,6))\n\nfor i,col_name in enumerate(cat_columns):\n    plt.subplot(ax[i])\n    df[col_name].value_counts(normalize=True).plot.bar(title=col_name+\"(% per category)\")\nplt.show()","de5f846c":"num_columns","507ae6f4":"# Since Chance of Admit is our target\/dependant varaiable, removing it from the num_columns\nnum_columns.remove('Chance of Admit')\nnum_columns","4b4c176e":"# n_num = len(num_columns)\n# fig,ax = plt.subplots(1,n_num,figsize=(6*n_num,6))\n# for j,col_name in enumerate(num_columns):\n#     plt.subplot(ax[j])\n#     sns.distplot(df[col_name],bins=50)\n#     plt.subplot(ax[i,j])\nplt.rcParams['figure.figsize'] = 20,8\nsns.boxplot(data=df.loc[:,num_columns],orient='h')\nplt.show()","4d3a36be":"sns.FacetGrid(df,hue='High Chance',height=5)\\\n    .map(sns.distplot,'GRE Score')\\\n    .add_legend()\nplt.show()","87f08e16":"sns.FacetGrid(df,hue='High Chance',height=5)\\\n    .map(sns.distplot,'TOEFL Score')\\\n    .add_legend()\nplt.show()","4dac31fb":"sns.FacetGrid(df,hue='High Chance',height=5)\\\n    .map(sns.distplot,'CGPA')\\\n    .add_legend()\nplt.show()","556d0b51":"n_cat_cols,cat_columns","0fb11862":"fig,ax = plt.subplots(2,n_cat_cols,figsize=(6*n_cat_cols,12))\nfor i,col_name in enumerate(cat_columns):\n    plt.subplot(ax[0,i])\n    sns.violinplot(data=df,x=col_name,y='Chance of Admit',hue=\"High Chance\",split=True)\n    plt.subplot(ax[1,i])\n#     sns.countplot(data=df,y=col_name,hue=\"High Chance\")\n    sns.stripplot(data=df,x=col_name,y='Chance of Admit',hue=\"High Chance\",jitter=True)\n\nplt.show()","8c8955b0":"sns.jointplot(data=df,x=\"GRE Score\",y='Chance of Admit',kind=\"kde\")\nsns.lmplot(data=df,y=\"GRE Score\",x='Chance of Admit',hue=\"High Chance\")\nplt.show()","0e2b1155":"sns.jointplot(data=df,x=\"TOEFL Score\",y='Chance of Admit',kind=\"kde\")\nsns.lmplot(data=df,x='Chance of Admit',y=\"TOEFL Score\",hue=\"High Chance\")\nplt.show()","0290b7cd":"sns.jointplot(data=df,x=\"CGPA\",y='Chance of Admit',kind=\"kde\")\nsns.lmplot(data=df,x='Chance of Admit',y=\"CGPA\",hue=\"High Chance\")\nplt.show()","0604b341":"plt.figure(figsize=(8,8))\nax = sns.scatterplot(data=df,x=\"GRE Score\",y='TOEFL Score',size=\"Chance of Admit\",hue=\"High Chance\")","1d925c71":"plt.figure(figsize=(8,8))\nax = sns.scatterplot(data=df,x=\"GRE Score\",y='CGPA',size=\"Chance of Admit\",hue=\"High Chance\")","bd427b96":"plt.figure(figsize=(8,8))\nax = sns.scatterplot(data=df,x=\"TOEFL Score\",y='CGPA',size=\"Chance of Admit\",hue=\"High Chance\")","0b5ee67b":"cat_columns","56257941":"fig,ax = plt.subplots(1,n_cat_cols,figsize=(6*n_cat_cols,6))\nfor i,col in enumerate(cat_columns):\n    # Create a cross table for stacked graph\n    pd.crosstab(df[col],df['High Chance'])\n\n    ct = pd.crosstab(df[col],df['High Chance'],normalize=\"index\")\n    ct.plot.bar(stacked=True,ax=ax[i])\nplt.show()","bcc9615a":"# Removing serial no. and checking correlation.\ncorr = df.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nfig,ax = plt.subplots(figsize=(8, 8))\nwith sns.axes_style(\"white\"):\n#     cmap=\"YlGnBu\"\n    sns.heatmap(corr, ax=ax, annot=True, mask=mask, square=True,fmt= '.2f',cmap=\"coolwarm\")\nplt.show()","d8a20926":"ax = sns.pairplot(df,hue=\"High Chance\")","95763a6e":"From the map, we can see that the target `Chance of Admit` has the most linear relation with the following :\n<br\/>\n\nColumns | Corelation \n---|---\nCGPA | 0.88\nGRE Score | 0.81\nTOEFL | 0.79\n\n<br\/>\nThe least correlated featues is `Research` .","0bab9bc7":"The following insights can be extracted from the above charts:\n- **University Rating**: It shows that if a student's University rating is good, the chance of admit increases. A student who studied in a university with rating 4 or 5 has a higher chance.\n- **SOP**: An SOP score more than 4 will be favourable.\n- **LOR**: Higher chance is seen for candidates with score more than 4.5.\n- **Research**: Many students who had high acceptance chance had a history of publishing paper. However, there are many students who published paper yet having low chance.","1a3a7d8c":"### Univariate analysis","1baf5ff5":"### Conclusion\n\n> Focusing on LESS to get MORE\n\nIf a student wants to secure higher `Chance of Admit` with minimal amount of effort then the person should be focussing more on maximizing their CGPA, GRE Score and TOEFL Score.","d1bf4c67":"University admissions can be confusing and stressful. Most of the times, in order to know the status of admission it can take up a lot of time.\n\nIn this kernel, we will try to explore how we can maximize the Chance of Admit by focussing only on the most prominent factors.","7d5ad7f4":"### Pair Plot","94c1702a":"## Observing the Dependant variable","7b3b809e":"*Check numerical columns for outliers*","eb8ba3e7":"#### CGPA","02eab196":"## Reading and understanding data\n\nLet's choose the dataset Version1.1 with more number of columns","ad9aeb0c":"## Importing necessary libraries","c96a3bb4":"An outlier was spotted only in the LOR column (in the left side of plot), we will treat that using **IQR method**.","52ee511a":"Separating numerical and categorical columns for analysis.","3079b8bf":"**Check for nulls**","e0b31188":"### Categorical v\/s Categorical","6f01603b":"#### TOEFL Score","0be14665":"### Correlation between columns","c4e9ca8b":"Since the skew and kurtosis values are not improving with transformation, skipping the transformation as such.","07436b1f":"Now let us compare the relationship between \n- GRE Score and TOEFL Score\n- GRE Score and CGPA\n- CGPA and TOEFL Score","219f2537":"Creating a new columns high chance to identify profiles who are most likely to get an admit.","65103f5e":"Since the numerical columns are not having any outliers we can directly move on to the analysis.\n\nWe use **z-score method** to spot outliers in the numerical distributions.","44c1c501":"To get an idea of data distribution, lets check categorical columns. ","30701639":"#### GRE Score","bf712ddf":"#### Categorical columns","965a4e3a":"## Problem statement","8375ae75":"Even though few columns are integer or float types but they seem to have discrete unique values and hence they are most probably categorical in nature.","b5d79b21":"Checking and removing outliers in the categorical data.","3da6f548":"### Chance of Admit","4b56ff1e":"Dropping the column `Serial No.`, as it won't be necessary for analyzing the chance of admit.","8c57f75d":"#### Numeric columns","21d96b6f":"There are no null values in the dataset so we can skip that (treating null values) part. However, we will still have to check for outliers in the dataset (exclusing the dependant variable).","111e9e1c":"### Bivariate analysis","66952420":"Probably the answer for the above questionm is Yes!\n\nAll the 3 three features have a strong linear relationship with the `Chance of Admit`.","cd64073c":"## Observing the independant variables","c041ddc8":"#### Categorical v\/s Conitnuous","57c512e5":"### Does having a good GRE score or TOEFL score or CGPA aids in higher chance of Admit?\n\nContinuous v\/s continuous variables","f0e37bde":"The higher the PDF(probability distribution function) of two classes be separated from each other the more likely the feature will help in predicting the output (Chance of Admit).\n\nAnd from the above diagrams, it can be seen that CGPA has the most separation. Which implies CGPA will be the most prominent factor determining a high chance of admit.","fc0d93ab":"In the columns `Chance of admit` and `LOR`, there are extra spaces in the end, so we will remove that from the columns name.","5a4ba684":"Chance of Admit is a `continuious numerical` variable so we can use box plot, violin plot,histogram or density plot. \n\nLet's observe a density plot below."}}