{"cell_type":{"d78087ed":"code","6d7d2d12":"code","92eadbf0":"code","fe257f04":"code","7aa5fe25":"code","6ae816e1":"code","06b6b53f":"code","d230a341":"code","d6fa99db":"code","6d72f3f2":"code","65c1823a":"code","6101cfaa":"code","c8bfc6a5":"code","8523b4e8":"code","6fd19a22":"code","204a9b96":"code","752c6860":"code","3da246b0":"code","9069757f":"code","a280cb15":"code","e4c3a332":"code","4ed25e87":"code","f3661deb":"code","cb89a659":"code","1369b750":"code","205a16ce":"code","2e7a2a7c":"markdown","371d3398":"markdown","67247a41":"markdown","697ee7ae":"markdown","e0e7633f":"markdown","97c032cc":"markdown","72935b71":"markdown","2869c894":"markdown","a9736304":"markdown","39f587fa":"markdown","4e64dfc6":"markdown","628ff290":"markdown","10e3cf46":"markdown","b1cabf14":"markdown","68789865":"markdown","ef3dbacd":"markdown","b2491f16":"markdown","3cf47ce2":"markdown","c1d488f1":"markdown","25ed967c":"markdown","4929356d":"markdown","cddaa672":"markdown"},"source":{"d78087ed":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nimport os","6d7d2d12":"df = pd.read_csv('..\/input\/pokemon\/pokemon.csv')\npd.set_option('display.max_columns', None)\ndf.head()","92eadbf0":"for feature in df:\n    print(feature, df[feature].count())","fe257f04":"#impute missing value\ndf.height_m.fillna(np.mean(df.height_m), inplace=True)\ndf.weight_kg.fillna(np.mean(df.weight_kg), inplace=True)\ndf.percentage_male.fillna(df.percentage_male.max(), inplace=True)\n\n#drop unuseful feature\ndf.drop(columns='type2', inplace=True)","7aa5fe25":"# set_style option : darkgrid, whitegrid, dark, white, ticks\nsns.set_style('darkgrid');\n\n#set_context option: paper, notebook, talk, poster\nsns.set_context(context='paper', font_scale=1.2);\n\nsns.despine(left=False, bottom=True);\n\nsns.jointplot(x= df.attack, y= df.defense, kind='reg');","6ae816e1":"sns.distplot(df.speed, kde=False, bins=50);","06b6b53f":"sns.jointplot(x= df.attack, y= df.defense, kind='reg');\nsns.jointplot(x= df.attack, y= df.defense, kind='hex');\nsns.jointplot(x= df.attack, y= df.defense, kind='kde');","d230a341":"sns.kdeplot(df.speed);","d6fa99db":"pairplot_df = df[[ 'height_m', 'sp_attack', 'sp_defense', 'speed', 'weight_kg']]\n\nsns.pairplot(pairplot_df);","6d72f3f2":"sns.rugplot(df.defense);","65c1823a":"sns.barplot(x= df.generation, y= df.defense );","6101cfaa":"sns.countplot(x= df.generation, hue= df.is_legendary )\n\n# best decision = 0, upper right =1, upper left = 2, lower left = 3, lower right = 4\nplt.legend(loc=0);","c8bfc6a5":"sns.boxplot(x= df.experience_growth, y= df.base_total, hue= df.is_legendary)\n\nplt.legend(loc=0);","8523b4e8":"sns.violinplot(x= df.experience_growth, y= df.base_total, hue= df.is_legendary);","6fd19a22":"sns.violinplot(x= df.experience_growth, y= df.base_total, hue= df.is_legendary, split=True);","204a9b96":"plt.figure(figsize=(8, 5))\nsns.stripplot(x= df.generation, y= df.base_total, hue= df.is_legendary)\nplt.legend(loc=0);","752c6860":"plt.figure(figsize=(8, 5))\nsns.stripplot(x= df.generation, y= df.base_total, hue= df.is_legendary, dodge=True )\nplt.legend(loc=0);","3da246b0":"plt.figure(figsize=(8, 5))\nsns.swarmplot(x= df.generation, y= df.base_total, hue= df.is_legendary);","9069757f":"plt.figure(figsize=(7, 5))\nsns.swarmplot(x= df.generation, y= df.base_total, hue= df.is_legendary, palette='summer');","a280cb15":"pairplot_df = df[[ 'height_m', 'sp_attack', 'sp_defense', 'speed', 'weight_kg']]\npairplot_df = pairplot_df.corr()\nplt.figure(figsize=(8,5))\nsns.heatmap(pairplot_df, annot=True, cmap='Blues');","e4c3a332":"pairplot_df2 = df[['experience_growth', 'generation', 'base_total']]\npairplot_df2 = pairplot_df2.pivot_table(index='generation', columns='experience_growth', values='base_total')\n\nsns.heatmap(pairplot_df2, cmap='Blues');","4ed25e87":"clustermap_data = df[['sp_attack', 'sp_defense','height_m', 'weight_kg']]\nsns.clustermap(clustermap_data);","f3661deb":"pairgrid_df = df[['sp_attack', 'sp_defense','height_m', 'weight_kg', 'is_legendary']]\npairgrid_df = sns.PairGrid(pairgrid_df, hue='is_legendary')\npairgrid_df.map(plt.scatter);","cb89a659":"pairgrid_df = df[['sp_attack', 'sp_defense','height_m', 'weight_kg', 'is_legendary']]\npairgrid_df = sns.PairGrid(pairgrid_df, hue='is_legendary')\npairgrid_df.map_diag(plt.hist)\npairgrid_df.map_offdiag(plt.scatter);","1369b750":"pairgrid_df = df[['sp_attack', 'sp_defense','height_m', 'weight_kg', 'is_legendary']]\npairgrid_df = sns.PairGrid(pairgrid_df, hue='is_legendary')\npairgrid_df.map_diag(plt.hist)\npairgrid_df.map_upper(plt.scatter)\npairgrid_df.map_lower(sns.kdeplot);","205a16ce":"facetgrid_df = df[['is_legendary', 'generation', 'defense']]\nfacetgrid_df = sns.FacetGrid(data=facetgrid_df, row='generation', col='is_legendary',height=4, aspect=1.2)\nfacetgrid_df.map(plt.hist, 'defense');","2e7a2a7c":"### 7. Palettes","371d3398":"### 4. Facet Grid","67247a41":"### 4. Pair Plot","697ee7ae":"### 3. Pair Grid","e0e7633f":"### 1. Heatmaps","97c032cc":"### 5. Rug Plot","72935b71":"you can check here for any palettes option\n\nhttps:\/\/matplotlib.org\/stable\/tutorials\/colors\/colormaps.html","2869c894":"### 2. Joint Plot","a9736304":"### 6. Swarm Plot","39f587fa":"# Categorical Data","4e64dfc6":"### 3. Box Plot","628ff290":"### 4. Violin Plot","10e3cf46":"### 5. Strip Plot","b1cabf14":"### 1. Distribution Plot","68789865":"# Styling","ef3dbacd":"### 3. KDE Plot","b2491f16":"\n- name: The English name of the Pokemon\n- japanese_name: The Original Japanese name of the Pokemon\n- pokedex_number: The entry number of the Pokemon in the National Pokedex\n- percentage_male: The percentage of the species that are male. Blank if the Pokemon is genderless.\n- type1: The Primary Type of the Pokemon\n- type2: The Secondary Type of the Pokemon\n- classification: The Classification of the Pokemon as described by the Sun and Moon Pokedex\n- height_m: Height of the Pokemon in metres\n- weight_kg: The Weight of the Pokemon in kilograms\n- capture_rate: Capture Rate of the Pokemon\n- baseeggsteps: The number of steps required to hatch an egg of the Pokemon\n- abilities: A stringified list of abilities that the Pokemon is capable of having\n- experience_growth: The Experience Growth of the Pokemon\n- base_happiness: Base Happiness of the Pokemon\n- against_?: Eighteen features that denote the amount of damage taken against an attack of a particular type\n- hp: The Base HP of the Pokemon\n- attack: The Base Attack of the Pokemon\n- defense: The Base Defense of the Pokemon\n- sp_attack: The Base Special Attack of the Pokemon\n- sp_defense: The Base Special Defense of the Pokemon\n- speed: The Base Speed of the Pokemon\n- generation: The numbered generation which the Pokemon was first introduced\n- is_legendary: Denotes if the Pokemon is legendary.","3cf47ce2":"### 2. Clustermap","c1d488f1":"### 2. Count Plot","25ed967c":"# Matrix Plot","4929356d":"### 1. Bar Plot","cddaa672":"# Numerical Data"}}