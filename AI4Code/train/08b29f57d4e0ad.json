{"cell_type":{"97c34e56":"code","49fc625d":"code","47a2177c":"code","277d5770":"code","9047e54a":"code","98d13d4d":"code","188dc146":"code","58c406e7":"code","ecbe1936":"code","6a82bf71":"code","c75148d8":"code","8c7cb176":"code","fe1d221e":"code","90ea3014":"code","1abb8fe0":"code","606a959e":"code","b3b0df01":"code","80a6e061":"markdown","5c4e245d":"markdown","2cc9e92a":"markdown","f12a8b21":"markdown","4b86c2f6":"markdown","0b22552a":"markdown","9d4a8554":"markdown","f6800a5e":"markdown"},"source":{"97c34e56":"import numpy as np \nimport pandas as pd\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nimport tensorflow as tf\nfrom sklearn.metrics import confusion_matrix","49fc625d":"data = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/train.csv\")","47a2177c":"data.head()","277d5770":"data.describe()","9047e54a":"fig = px.imshow(data.corr())\nfig.show()","98d13d4d":"fig = make_subplots(rows=8, cols=3)\n\nfor i, col in enumerate(data.columns):\n    fig.add_trace(go.Histogram(x=data[col], name=col), row=(i\/\/3)+1, col=(i%3)+1)\n    \nfig.update_layout(height=1200,)\n    \nfig.show()\n","188dc146":"def make_box_plots(data):\n    fig = make_subplots(\n        rows = 8,\n        cols = 3,\n        subplot_titles = data.columns\n    )\n\n    i = 1\n    j = 1\n\n    for col in data.columns:\n        fig.append_trace(go.Box(y=data[:][col]), i, j)\n        if j < 3:\n            j += 1\n        else:\n            j = 1\n            i += 1\n    fig.update_layout(\n        autosize=False,\n        width=1200,\n        height=1200,\n        margin=dict(\n            l=50,\n            r=50,\n            b=100,\n            t=100,\n            pad=4\n        ),\n        paper_bgcolor=\"LightSteelBlue\",\n    )\n    fig.show()\nmake_box_plots(data)","58c406e7":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\ncols = [\"battery_power\", \"px_height\", \"px_width\", \"ram\"]\nX = scaler.fit_transform(data[cols])\nX","ecbe1936":"# Numero de clases\nnum_classes = 4\n\n# generar las etiquetas\ny = keras.utils.to_categorical(data['price_range'], num_classes)\ny","6a82bf71":"# tamano de la imagen de entrada\ninput_shape = (X.shape[1])\n\n# definicion del modelo Perceptron\nmodel = keras.Sequential(\n    [\n        keras.Input(shape=input_shape),\n        #layers.Flatten(),\n        layers.Dense(1400, activation=\"relu\"),\n        layers.Dense(num_classes, activation=\"softmax\"),\n    ]\n)\n\n# Construir el modelo y ver la arquitectura\nmodel.build(input_shape)\nmodel.summary()","c75148d8":"# Definir los parametros de optimizacion y perdida del modelo (con CrossValidation)\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","8c7cb176":"history = model.fit(X, y, epochs=20, batch_size=50, verbose=1, validation_split=0.4)","fe1d221e":"fig = make_subplots(rows=1, cols=2)\n\nfig.add_trace(go.Scatter(\n    y=history.history['loss'],\n    mode='lines+markers',\n    name='training loss'\n), row=1, col=1)\n\nfig.add_trace(go.Scatter(\n    y=history.history['val_loss'],\n    mode='lines+markers',\n    name='validation loss'\n), row=1, col=1)\n\n\nfig.add_trace(go.Scatter(\n    y=history.history['accuracy'],\n    mode='lines+markers',\n    name='training accuracy'\n), row=1, col=2)\n\nfig.add_trace(go.Scatter(\n    y=history.history['val_accuracy'],\n    mode='lines+markers',\n    name='validation accuracy'\n), row=1, col=2)\n\nfig.update_xaxes(title_text='Epoch')\nfig.update_layout(title_text=\"Training History Metrics\")\nfig.show()","90ea3014":"y_pred=model.predict(X)\ny_pred","1abb8fe0":"predicted_classes=np.argmax(y_pred,axis=1)\npredicted_classes","606a959e":"cm = confusion_matrix(data['price_range'], predicted_classes)\ncm","b3b0df01":"import seaborn as sns\nfigure = plt.figure(figsize=(8, 8))\nsns.heatmap(cm, annot=True,cmap=plt.cm.Blues)\nplt.tight_layout()\nplt.ylabel('True label')\nplt.xlabel('Predicted label')\nplt.show()","80a6e061":"# [Ir a Parte B](https:\/\/www.kaggle.com\/acuamarco\/ia02-mrodriguez-1-b)","5c4e245d":"## 3. Muestre sus resultados con una matriz de confusi\u00f3n y un reporte (4 pts)","2cc9e92a":"### Matriz de confusi\u00f3n","f12a8b21":"## 1.Realice un an\u00e1lisis de los datos de entrada. Utilice gr\u00e1ficos, histogramas, correlaci\u00f3n, ... (3 pts)","4b86c2f6":"## 2. Implemente la arquitectura de una red neuronal de 1 sola capa con Keras (3 pts) para predecir price_range","0b22552a":"# A. Keras","9d4a8554":"# [Ir a Parte B](https:\/\/www.kaggle.com\/acuamarco\/ia02-mrodriguez-1-b)","f6800a5e":"### Reporte"}}