{"cell_type":{"d0ed607a":"code","d3dcc3a2":"code","ea0755dd":"code","10b7dcf5":"code","cb6efad2":"code","178af517":"code","a0c6f2ac":"code","f56c2330":"code","442cfccb":"code","91fb8989":"code","d4a5bbd7":"code","7f58f63e":"code","508b6eac":"code","a962d9de":"code","7cebb4ef":"code","8b9d9e5d":"code","cd5978fd":"code","6dc4a713":"code","ae1d3447":"code","b486a578":"code","fe626fb2":"code","1d736623":"code","d82464f3":"code","ed93ecce":"code","b315b490":"code","c8f3ff76":"code","729dabc0":"code","b62c5e93":"code","461448e7":"code","03ae5975":"code","ae12cb7b":"code","13541d05":"code","8777f9bb":"code","686995d9":"code","44b3c075":"code","872c1731":"code","3c1c021e":"code","e82cc58b":"code","2447aec3":"code","6a84b8f2":"code","1fcfdc68":"code","5c3d050d":"code","7197d240":"code","7fa974a2":"code","0609ca63":"code","2a4ad6e4":"code","a962762c":"code","c9db52a8":"code","104bac39":"code","4f2e5507":"code","90ca18c3":"code","2d802456":"code","b2518f17":"code","431e062a":"code","559b2b89":"code","ae1d352d":"markdown","5e37dfdc":"markdown","4475c08e":"markdown","94ec192e":"markdown","d7ddce3f":"markdown","2a2d2e12":"markdown","b41a72b0":"markdown","d341117c":"markdown"},"source":{"d0ed607a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.float_format', lambda x: '%.3f' % x)","d3dcc3a2":"df=pd.read_csv(\"..\/input\/usa-housing\/USA_Housing.csv\")\ndf","ea0755dd":"df.info()","10b7dcf5":"df.isnull().sum()","cb6efad2":"df.describe()","178af517":"df.head()","a0c6f2ac":"df.tail(10)","f56c2330":"df.columns","442cfccb":"import missingno as msno","91fb8989":"msno.matrix(df)","d4a5bbd7":"sns.pairplot(df)","7f58f63e":"sns.distplot(df['Price'],hist_kws=dict(edgecolor=\"black\", linewidth=1),color='Blue')","508b6eac":"df.corr()","a962d9de":"sns.heatmap(df.corr(), annot=True)","7cebb4ef":"# y = b1*x + b0\n# y = ba\u011f\u0131ml\u0131 de\u011fi\u015fken \/ target value, dependent value\n# b1 = katsay\u0131,  \/ e\u011fim, slope = 0 < b1 < 1\n# x = ba\u011f\u0131ms\u0131z de\u011fi\u015fken \/ feature, independent value\n# b0 = otonom parametre \/ intercept","8b9d9e5d":"X = df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n               'Avg. Area Number of Bedrooms', 'Area Population']]\ny = df['Price']","cd5978fd":"X","6dc4a713":"y","ae1d3447":"from sklearn.model_selection import train_test_split","b486a578":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size= 0.3, random_state= 42) ","fe626fb2":"from sklearn.linear_model import LinearRegression","1d736623":"#creating LinearRegression Object\nlm = LinearRegression()","d82464f3":"lm","ed93ecce":"#Training the Data Model\nlm.fit(X_train, y_train)","b315b490":"df.sample(140)","c8f3ff76":"print( \"X_train features shape: {}\\nY_train features shape: {}\\nX_test features shape: {}\\ny_test features shape: {}\".format(X_train.shape, y_train.shape, X_test.shape, y_test.shape))","729dabc0":"from sklearn.linear_model import LinearRegression","b62c5e93":"model = LinearRegression()","461448e7":"model.fit(X_train, y_train)","03ae5975":"model.intercept_","ae12cb7b":"print(\"bo: \", model.intercept_)","13541d05":"model.coef_","8777f9bb":"print(\"b1: {}\\nb2: {}\\nb3: {}\".format(model.coef_[0], model.coef_[1], model.coef_[2]))","686995d9":"y_pred = model.predict(X_test)\ny_pred","44b3c075":"my_dict = {\"Actual\": y_test, \"pred\": y_pred, \"residual\": y_test - y_pred}","872c1731":"comparing = pd.DataFrame(my_dict)\ncomparing.sort_values(by= \"residual\")","3c1c021e":"result_sample = comparing.sample(20)\nresult_sample","e82cc58b":"result_sample.plot(kind= \"bar\", figsize = (15,9))\nplt.show()","2447aec3":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score","6a84b8f2":"R2_score = r2_score(y_test, y_pred)\n\nR2_score","1fcfdc68":"mae = mean_absolute_error(y_test, y_pred)\nmae","5c3d050d":"mse = mean_squared_error(y_test, y_pred)\nmse","7197d240":"rmse = np.sqrt(mean_squared_error(y_test, y_pred))\nrmse","7fa974a2":"price_mean = df[\"Price\"].mean()\nprice_mean","0609ca63":"mae \/ price_mean","2a4ad6e4":"rmse \/ price_mean","a962762c":"def eval_metric(actual, pred):\n    mae = mean_absolute_error(actual, pred)\n    mse = mean_squared_error(actual, pred)\n    rmse = np.sqrt(mean_squared_error(actual, pred))\n    R2_score = r2_score(actual, pred)\n    print(\"Model Testing Performance: \")\n    print(\"---------------------------\");\n    print(f\"R2_score \\t: {R2_score}\")\n    print(f\"MAE \\t\\t: {mae}\")\n    print(f\"MSE \\t\\t: {mse}\")\n    print(f\"RMSE \\t\\t: {rmse}\")","c9db52a8":"eval_metric(y_test, y_pred)","104bac39":"y_train_pred = model.predict(X_train)","4f2e5507":"eval_metric(y_train, y_train_pred)","90ca18c3":"residuals = y_test - y_pred","2d802456":"plt.figure(figsize = (10, 6))\nsns.scatterplot(x = y_test, y = residuals)\nplt.axhline(y= 0, color = \"r\", linestyle = \"--\")\nplt.show()\n\n","b2518f17":"sns.kdeplot(residuals)","431e062a":"import scipy.stats as stats","559b2b89":"stats.probplot(residuals, dist= \"norm\", plot = plt);","ae1d352d":"## Exploratory Data Analysis (EDA)","5e37dfdc":"## Displaying correlation among all the columns using Heat Map","4475c08e":"## Error Metrics","94ec192e":"## Library Import","d7ddce3f":"## Model Fitting and Compare Actual and Predicted Labels","2a2d2e12":"## Evaluation Model","b41a72b0":"## Check out the Data","d341117c":"## Splitting the dataset into X(independent variables) and y (dependent variable)"}}