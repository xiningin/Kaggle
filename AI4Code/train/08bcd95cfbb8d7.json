{"cell_type":{"46e02e1c":"code","3d0b3c84":"code","93371c90":"code","ddfde7fa":"code","8099b506":"code","b2de7b76":"code","e7ee68b1":"code","88fc2ad3":"code","30cff71d":"code","5b21f10d":"markdown","5d6f7203":"markdown","758b9be7":"markdown","93773df3":"markdown","b2095250":"markdown","7dcce84c":"markdown","eb1e1a2a":"markdown","948b6e75":"markdown"},"source":{"46e02e1c":"from os import system\nimport requests \nfrom lxml import html\nimport pandas as pd","3d0b3c84":"Links = []\nGenres= []\nfor k in range(1, 10):\n    bu = \"https:\/\/freemusicarchive.org\/genre\/Folk?sort=track_date_published&d=1&page=\" #base url\n    key = k #page number\n    print (key)    \n    final_link = bu + str(key)\n    print(final_link)\n    page = requests.get(final_link)\n    pData = html.fromstring(page.content)\n    headers = {'User-Agent': 'Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/50.0.2661.102 Safari\/537.36'}\n    newP = requests.get(final_link,headers=headers)\n    ntree = html.fromstring(newP.content)\n    for j in range (1, 21):\n      pL = ntree.xpath('\/\/*[@id=\"content\"]\/div[3]\/div[1]\/div[2]\/div[{}]\/span[2]\/a\/@href'.format(j))\n      if len(pL)!=0:\n        Links.append(pL[0])\n      gnrs = []\n      o = 5\n      while o>=0:\n        add = ntree.xpath('\/\/*[@id=\"content\"]\/div[3]\/div[1]\/div[2]\/div[{}]\/div\/span[4]\/a[{}]\/@href'.format(j,o))\n        if len(add)!=0:\n          gnrs.append(add[0])\n          print(\"Now working at \", o)\n        o-=1\n      Genres.append(gnrs)\n    \n\nprint(len(Links))\nprint(len(Genres))\n","93371c90":"for item in Genres:\n    for i in range(0, len(item)):\n        item[i] = item[i].replace(\"\/genre\/\",\"\")\n        item[i] = item[i].replace(\"\/\",\"\")","ddfde7fa":"scraped = pd.DataFrame()","8099b506":"scraped[\"Links\"] = Links\nscraped[\"Genres\"] = Genres","b2de7b76":"scraped.head(5)","e7ee68b1":"song = scraped[\"Links\"][0]\nsong\n","88fc2ad3":"!wget -x --load-cookies cookies.txt -nH https:\/\/files.freemusicarchive.org\/storage-freemusicarchive-org\/music\/ccCommunity\/Aglow_Hollow\/Proximate_Laws_Baba_Yaga_Booty_Calls\/Aglow_Hollow_-_04_-_Dog_Soldier___Stand_Down.mp3","30cff71d":"ls storage-freemusicarchive-org\/music\/ccCommunity\/Aglow_Hollow\/Proximate_Laws_Baba_Yaga_Booty_Calls\/","5b21f10d":"> You can download songs directly to any folder by using below code snippet","5d6f7203":"> Being a data scientist one of the most important skill you need to have is the ability to prepare your own dataset.\n> I am going to teach you how to scrape data to make a simple music and genre dataset.\n> Later I will make more tutorials based on user requests, if more than **5 to 10 people** asks me to explain more about data scraping I will do so.\n> Please comment your feedback in notebook's comment section \n> ","758b9be7":"# Woooh Woohhhh!! With this demo you might have learnt something new I guess, Please upvote this notebook if you find it clear\/useful to you or to anyone. Share if you can.I believe knowledge sharing as Caring","93773df3":"P.S: Please ignore typos & grammatical...","b2095250":"1. Here Requests package handles all the requests which we are going to send and recieve \n2. lxml package used to parse details\n3. pandas for dataframe\n","7dcce84c":"I am using Free Music Archieves platform for demo.\nThis is out data source.\nhttps:\/\/freemusicarchive.org","eb1e1a2a":"**Now I am adding these to a dataframe**","948b6e75":"# I am going to explain you how you can create your own music dataset using web scraping"}}