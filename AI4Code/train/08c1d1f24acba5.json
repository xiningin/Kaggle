{"cell_type":{"67a945ac":"code","1a616d94":"code","09f773f3":"code","fd231fed":"code","45c548e9":"code","fb7a6c65":"code","085b9741":"code","36b2738c":"code","7642ae46":"code","94c228ed":"code","ea68c0d4":"code","76bd6824":"code","73273df6":"code","1774455e":"code","6c1ef667":"code","97555a0f":"code","181f7bfa":"code","b0f96cd8":"code","a259ff3e":"code","970f0287":"code","2bc023ad":"code","6d9d686c":"code","2f814fae":"code","cf074277":"code","f28798aa":"code","b2c5c132":"code","e238c6a6":"code","041bb899":"code","ce145001":"code","b35aac8b":"code","b385fcdb":"code","51d3c04f":"code","8f745ee1":"code","ebd406a1":"code","f0d50957":"code","eb4a866c":"code","1ac79fb6":"code","2a88bdd9":"code","0fab5fe8":"code","2c4643e8":"code","6796d6f3":"code","9d20ae2a":"code","fc7c08ec":"code","a71ceab9":"code","350924b3":"code","6b4bf46f":"code","4e395546":"code","60242c29":"code","b3a9e843":"code","f8e1e9b3":"code","101e2b71":"code","d12b5a4d":"markdown","ffae3f19":"markdown","5b1176d2":"markdown","ef532fb0":"markdown","3e344d0f":"markdown","e0e7a591":"markdown","86f901ea":"markdown","cbfa2b58":"markdown","45e32bd0":"markdown","8e098941":"markdown","d954c003":"markdown"},"source":{"67a945ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1a616d94":"import matplotlib.pyplot as plt\nimport seaborn as sns","09f773f3":"dataset = pd.read_csv('..\/input\/Restaurant_Reviews.tsv',delimiter = '\\t')","fd231fed":"dataset.head()","45c548e9":"dataset.describe()","fb7a6c65":"dataset.info()","085b9741":"dataset.isnull().sum()","36b2738c":"sns.countplot(x = dataset['Liked'],data = dataset)","7642ae46":"dataset[dataset['Liked'] == 1][\"Liked\"].count()","94c228ed":"dataset[dataset['Liked'] == 0]['Liked'].count()","ea68c0d4":"from nltk.corpus import stopwords\nfrom nltk.stem.snowball import SnowballStemmer\nimport re","76bd6824":"stemmer = SnowballStemmer('english')\ncorpus = []\nfor i in range(0,1000):\n    review = re.sub('[^a-zA-Z]',' ',dataset['Review'][i])\n    review = review.lower()\n    review = review.split()\n    review = [stemmer.stem(word) for word in review if word not in set(stopwords.words('english'))]\n    review = ' '.join(review)\n    corpus.append(review)","73273df6":"corpus[1]","1774455e":"len(corpus)","6c1ef667":"corpus[999]","97555a0f":"from sklearn.feature_extraction.text import CountVectorizer","181f7bfa":"cv = CountVectorizer(max_features=1500)","b0f96cd8":"x = cv.fit_transform(corpus).toarray()","a259ff3e":"x.shape","970f0287":"y = dataset['Liked'].values","2bc023ad":"from sklearn.model_selection import train_test_split","6d9d686c":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 17)","2f814fae":"from sklearn.naive_bayes import MultinomialNB","cf074277":"classifier = MultinomialNB()","f28798aa":"classifier.fit(x_train,y_train)","b2c5c132":"y_pred = classifier.predict(x_test)","e238c6a6":"y_train_pred = classifier.predict(x_train)","041bb899":"from sklearn.metrics import classification_report,confusion_matrix,accuracy_score","ce145001":"print(classification_report(y_test,y_pred))","b35aac8b":"confusion_matrix(y_test,y_pred)","b385fcdb":"print('Training Accuray --->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuray --->',accuracy_score(y_test,y_pred))","51d3c04f":"from sklearn.ensemble import RandomForestClassifier","8f745ee1":"rf = RandomForestClassifier(n_estimators=800)\nrf.fit(x_train,y_train)","ebd406a1":"print(classification_report(y_test,y_pred))","f0d50957":"confusion_matrix(y_test,y_pred)","eb4a866c":"y_train_pred = rf.predict(x_train)","1ac79fb6":"print('Traning Accuracy --->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuracy --->',accuracy_score(y_test,y_pred))","2a88bdd9":"from sklearn.svm import SVC","0fab5fe8":"svc = SVC(gamma = 'scale')","2c4643e8":"svc.fit(x_train,y_train)","6796d6f3":"y_pred = svc.predict(x_test)","9d20ae2a":"from sklearn.model_selection import GridSearchCV","fc7c08ec":"parameters = [{'C':[1,10,100,1000],'kernel':['linear']},{'C':[1,10,100,1000],'kernel':['rbf'],'gamma':[1,0.5,0.1,0.01,0.001]}]","a71ceab9":"gs = GridSearchCV(estimator=SVC(),param_grid=parameters,scoring='accuracy',cv = 10)","350924b3":"gs = gs.fit(x_train,y_train)","6b4bf46f":"gs","4e395546":"y_pred = gs.predict(x_test)","60242c29":"print(classification_report(y_test,y_pred))","b3a9e843":"confusion_matrix(y_test,y_pred)","f8e1e9b3":"y_train_pred = gs.predict(x_train)","101e2b71":"print('Training Accuracy --->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuracy --->',accuracy_score(y_test,y_pred))","d12b5a4d":"## Checking for null values","ffae3f19":"## Evaluating the classifier","5b1176d2":"## Data Preprocessing","ef532fb0":"### Training the classifier","3e344d0f":"### Random Forest Classifier","e0e7a591":"## Naive Baye's Classifier(MultinomialNB)","86f901ea":"### Making Predictions","cbfa2b58":"## Grid Search for SVC","45e32bd0":"### Shape of the sparse matrix","8e098941":"## Creating Bag of Words Model","d954c003":"## Support Vector Classification"}}