{"cell_type":{"fc28bcea":"code","1d4cc22f":"code","49ff203a":"code","0fd5c2dc":"code","30686db2":"code","22fc1b0c":"code","8a266f76":"code","f4893748":"code","8e8d9067":"code","ed74293f":"code","ffb31b25":"code","bcdc0636":"code","392b876c":"code","1392c534":"code","7ab908f0":"markdown","2a6dfe54":"markdown"},"source":{"fc28bcea":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt # library for creating static, animated, and interactive visualizations in Python\nimport h5py # library for work with Hierarchical Data Format (HDF)\n\n\"\"\"\nHDF is a set of file formats (HDF4, HDF5) designed to store and organize large amounts of data.\nAn HDF5 file is a container for two kinds of objects: datasets, which are array-like collections \nof data, and groups, which are folder-like containers that hold datasets and other groups.\nFor more info about HDF follow the link: https:\/\/docs.h5py.org\/en\/stable\/quick.html\n\"\"\"\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","1d4cc22f":"print(os.listdir(\"..\/input\/\"))","49ff203a":"train = h5py.File('..\/input\/finger-n\/Train.h5', 'r')\nlist(train)","0fd5c2dc":"train","30686db2":"train_set_x = train.get('train_set_x')\ntrain_set_x","22fc1b0c":"trainImages = np.array(train_set_x)\ntrainImages","8a266f76":"trainImages.shape","f4893748":"train_set_y = train.get('train_set_y')\ntrain_set_y","8e8d9067":"train_y = np.array(train_set_y)\nlist(train_y)","ed74293f":"for i in range(9):\n    fig = plt.figure(dpi=100)\n    plt.imshow(trainImages[i][:])\n    plt.title(f\"Class ={train_y[i]}\")\n    plt.ylabel(\"Pixels\")\n    plt.xlabel(\"Pixels\")\n    plt.show()","ffb31b25":"test = h5py.File('..\/input\/finger-n\/Test.h5', 'r')\nlist(test)","bcdc0636":"test_set_x = test.get('test_set_x')\ntest_set_x","392b876c":"testImages = np.array(test_set_x)\ntestImages","1392c534":"for i in range(9):\n    fig = plt.figure(dpi=100)\n    plt.imshow(testImages[i][:])\n    #plt.title(f\"Class ={train_y[i]}\")\n    plt.ylabel(\"Pixels\")\n    plt.xlabel(\"Pixels\")\n    plt.show()","7ab908f0":"# Read Test.h5","2a6dfe54":"# Read Train.h5"}}