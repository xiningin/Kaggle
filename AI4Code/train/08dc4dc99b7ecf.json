{"cell_type":{"f775ce1c":"code","eced744b":"code","23538958":"code","586f089d":"code","add9c087":"code","a7aaa0de":"code","cac215e6":"code","03037897":"code","02055021":"code","b13ff127":"code","75a86559":"code","be40cf7c":"code","68c6ae83":"code","9e4be6cd":"code","7e43b15c":"code","71b7ca42":"code","0f8f128a":"code","864670f4":"code","3675da58":"code","5b00083a":"code","ce581b12":"code","8e4cce0b":"code","bfa28479":"code","623d17f6":"code","e13237ab":"code","c73727e2":"code","f51075f3":"code","b421a6ef":"markdown","725a0ca6":"markdown"},"source":{"f775ce1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","eced744b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom collections import Counter\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.","23538958":"data = pd.read_csv('..\/input\/heart.csv') #reading data for csv","586f089d":"print(\"Shape of this data {} \\n{} is no of row and {} is no of column.\" .format(data.shape, data.shape[0], data.shape[1]))\ndata.head(5)\n#if you want to show end of list you can data.tail\n\n\n#data.tail() ","add9c087":"data.columns\n#you can learn data's features","a7aaa0de":"data.info()","cac215e6":"data.plot(kind=\"scatter\", x=\"age\", y=\"chol\", alpha= 0.5, color=\"red\",grid=True, label = \"age\",linewidth=0.5 ) \nplt.legend(loc=\"upper right\")\nplt.ylabel(\"Chol\")\nplt.xlabel(\"Age (year)\")\nplt.title(\"Heart Diseases Related to Chol and Age\")\nplt.show()\n#if you want to compare 'age' and 'chol', you can use Scatter Plot","03037897":"#data.Speed.plot(kind='hist', bins=50, figsize=(50,50)), if you want, you can use this code. Similar codes.\n\ndata.age.hist(bins=50, figsize=(8,8), color= 'purple')\nplt.xlabel('Age (year)', color='blue')\nplt.ylabel('Trestbps (Hg)', color='blue')\nplt.title('Corelation Age and Trestbps', color='blue')\nplt.show()\n\n#I want to compare 'age' and 'trestbps', is it related to each other?","02055021":"data.hist(bins=50, figsize=(15,15), color= 'blue', grid=False)\nplt.show()\n#you can show all data of frequency.","b13ff127":"# using the seaborn library.\nsns.set(style=\"whitegrid\")              \ng = sns.jointplot(\"age\", \"oldpeak\", data=data, kind=\"reg\",xlim=(0, 60), ylim=(0, 12), color=\"Green\")\nplt.show()\n\n","75a86559":"\ndata.plot(kind = \"hist\", bins = 14, figsize = (8,8), label = \"all data\", alpha=0.65)\nplt.xlabel(\"all data\",FontSize = 10)\nplt.ylabel(\"Frequency\",FontSize = 10)\nplt.legend()\nplt.show()","be40cf7c":"data.describe()\n","68c6ae83":"\nf,ax = plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, cmap=\"BuPu\", fmt='.1f', ax=ax)\nplt.show()","9e4be6cd":"x= ((data['age']>65) &(data['sex']==1))\ndata[x]\n#list of age greater than 65 male\n#data filter","7e43b15c":"y= ((data['age']>65) &(data['sex']==0))\ndata[y]\n#list of age greater than 65 female\n#data filter","71b7ca42":"data[data.sex==1].age.hist(bins=20, color='blue')\ndata[data.sex==0].age.hist(bins=20, color='purple')\nplt.xlabel('Age(year)')\nplt.ylabel('Populations')\nplt.show()\n","0f8f128a":"#  If you want to filter, you can do it this way and see the statistical values of the data;\nx= ((data['age']>45) &(data['sex']==1))\ndata[x].describe()","864670f4":"y= ((data['age']>45) &(data['sex']==0))\ndata[y].describe()","3675da58":"print(data[x], data[y])","5b00083a":"#data visualization with point plot\nf,ax1 = plt.subplots(figsize=(20,10))\nsns.pointplot(x=data['age'],y=data['chol'],color='firebrick',alpha=0.8, label='chol')\nsns.pointplot(x=data['age'],y=data['thalach'],color='purple',alpha=0.8, label='thalach')\nplt.text(2,350,'chol',color='firebrick',fontsize=18,style='normal')\nplt.text(2,335,'thalach',color='purple',fontsize=18, style= 'normal')\nplt.xlabel('Ages',fontsize=15,color='blue')\nplt.ylabel('Values',fontsize=15,color='blue')\nplt.title('Chol vs Oldpeak Values',fontsize=20,color='blue')\nplt.legend()\nplt.show()","ce581b12":"pd.plotting.scatter_matrix(data.loc[:,data.columns!='Target'],\n                          c=['green','blue','red'], figsize=[15,15],diagonal='hist', alpha=0.8,\n                          s=20, marker='o', edgecolor='black')\nplt.show()","8e4cce0b":"#find min and max ages\n\nminAge=min(data.age)\nmaxAge=max(data.age)\nmeanAge=data.age.mean()\nprint('Min Age :',minAge)\nprint('Max Age :',maxAge)\nprint('Mean Age :',meanAge)\n","bfa28479":"#classification ages\n\ny_ages=data[(data.age>=29)&(data.age<40)]\nm_ages=data[(data.age>=40)&(data.age<55)]\ne_ages=data[(data.age>55)]\nprint('Young Ages :',len(y_ages))\nprint('Middle Ages :',len(m_ages))\nprint('Elderly Ages :',len(e_ages))\n","623d17f6":"\nsns.barplot(x=['young ages','middle ages','elderly ages'], y=[len(y_ages),len(m_ages),len(e_ages)])\nplt.xlabel('Age Range',size=15)\nplt.ylabel('Counts',size=15)\nplt.title('Ages State in Dataset',size=16)\nplt.show()\n\n","e13237ab":"male_count=len(data[data['sex']==1])\nfemale_count=len(data[data['sex']==0])\nprint('Male Count    :',male_count)\nprint('Female Count  :',female_count)","c73727e2":"sns.countplot(data.cp)\nplt.xlabel('Chest Type')\nplt.ylabel('Count')\nplt.title('Chest Type vs Count ')\nplt.show()\n\n#condition level\n#0 +\n#1 ++\n#2 ++++\n#3 +++++++","f51075f3":"chest_type=data[(data.cp == 3)&(data.age>60)]\nprint('high-risk:',chest_type)\n            ","b421a6ef":"**Data Information**","725a0ca6":"**Data Reading**"}}