{"cell_type":{"dbb441fe":"code","c90fed4e":"code","a1946dba":"code","3a1c2929":"code","bf164232":"code","60219b52":"code","8dad19c3":"code","c01f52e8":"code","cef8f3bb":"code","2c865383":"code","781863b3":"code","b1b70181":"code","4de09ab4":"code","d82eeb6f":"code","33085133":"code","54213436":"code","58974176":"code","fc03a103":"code","2e038942":"code","28d7d898":"code","c1f5814e":"code","844b292f":"code","1c5740ff":"code","6066d0ba":"markdown","59017447":"markdown","f0a07241":"markdown","c77a9f3d":"markdown","69c64f73":"markdown","033efb4c":"markdown","aaa433f6":"markdown","5cf71385":"markdown","896f2f0b":"markdown","6a980ac9":"markdown","7190b59d":"markdown","e313c111":"markdown","18baaadc":"markdown","30d31c83":"markdown"},"source":{"dbb441fe":"import os, ast\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom matplotlib import pyplot as plt # plotting\nimport matplotlib.patches as patches\nimport seaborn as sns # plotting","c90fed4e":"!ls \/kaggle\/input\/global-wheat-detection","a1946dba":"# Some constants\nBASE_DIR = '\/kaggle\/input\/global-wheat-detection'","3a1c2929":"%%time\ntrain_df = pd.read_csv(os.path.join(BASE_DIR, 'train.csv'))\nsample_sub_df = pd.read_csv(os.path.join(BASE_DIR, 'sample_submission.csv'))","bf164232":"train_df.head()","60219b52":"sample_sub_df.head()","8dad19c3":"print(f'Shape of training data: {train_df.shape}')\nprint(f'Shape of given test data: {sample_sub_df.shape}')","c01f52e8":"print(f'# of unique images: {train_df[\"image_id\"].nunique()}')","cef8f3bb":"print(f'Unique heights and widths: {train_df[\"width\"].unique()}, {train_df[\"height\"].unique()}')","2c865383":"print(f'Minimum number of wheat heads: {max(train_df[\"image_id\"].value_counts())}')\nprint(f'Minimum number of wheat heads: {len(train_df)\/train_df[\"image_id\"].nunique()}')","781863b3":"print(f'Total number of images: {len(os.listdir(os.path.join(BASE_DIR, \"train\")))}')","b1b70181":"sns.distplot(train_df['image_id'].value_counts(), kde=False)\nplt.xlabel('# of wheat heads')\nplt.ylabel('# of images')\nplt.title('# of wheat heads vs. # of images')\nplt.show()","4de09ab4":"train_df[['x_min','y_min', 'width', 'height']] = pd.DataFrame([ast.literal_eval(x) for x in train_df.bbox.tolist()], index= train_df.index)\ntrain_df = train_df[['image_id', 'bbox', 'source', 'x_min', 'y_min', 'width', 'height']]\ntrain_df","d82eeb6f":"sns.distplot(train_df['width'] * train_df['height'], kde=False)\nplt.xlabel('Area of bbox')\nplt.ylabel('# of images')\nplt.title('Area of bbox vs. # of images')\nplt.show()","33085133":"# Visualize few samples of current training dataset\nfig, ax = plt.subplots(nrows=2, ncols=4, figsize=(20, 10))\ncount=0\nfor row in ax:\n    for col in row:\n        img = plt.imread(f'{os.path.join(BASE_DIR, \"train\", train_df[\"image_id\"].unique()[count])}.jpg')\n        col.grid(False)\n        col.set_xticks([])\n        col.set_yticks([])\n        col.imshow(img)\n        count += 1\nplt.show()","54213436":"# Visualize few samples of current training dataset\nfig, ax = plt.subplots(nrows=2, ncols=4, figsize=(20, 10))\ncount=0\nfor row in ax:\n    for col in row:\n        img = plt.imread(f'{os.path.join(BASE_DIR, \"train\", train_df[\"image_id\"].unique()[-count])}.jpg')\n        col.grid(False)\n        col.set_xticks([])\n        col.set_yticks([])\n        col.imshow(img)\n        count += 1\nplt.show()","58974176":"def get_bbox(image_id, df, col, color='white'):\n    bboxes = df[df['image_id'] == image_id]\n    \n    for i in range(len(bboxes)):\n        # Create a Rectangle patch\n        rect = patches.Rectangle(\n            (bboxes['x_min'].iloc[i], bboxes['y_min'].iloc[i]),\n            bboxes['width'].iloc[i], \n            bboxes['height'].iloc[i], \n            linewidth=2, \n            edgecolor=color, \n            facecolor='none')\n\n        # Add the patch to the Axes\n        col.add_patch(rect)","fc03a103":"# Visualize few samples of current training dataset\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(20, 20))\ncount=0\nfor row in ax:\n    for col in row:\n        img_id = train_df[\"image_id\"].unique()[count]\n        img = plt.imread(f'{os.path.join(BASE_DIR, \"train\", img_id)}.jpg')\n        col.grid(False)\n        col.set_xticks([])\n        col.set_yticks([])\n        get_bbox(img_id, train_df, col, color='red')\n        col.imshow(img)\n        count += 1\nplt.show()","2e038942":"# Visualize few samples of current training dataset\nfig, ax = plt.subplots(nrows=2, ncols=2, figsize=(20, 20))\ncount=0\nfor row in ax:\n    for col in row:\n        img_id = train_df[\"image_id\"].unique()[-count]\n        img = plt.imread(f'{os.path.join(BASE_DIR, \"train\", img_id)}.jpg')\n        col.grid(False)\n        col.set_xticks([])\n        col.set_yticks([])\n        get_bbox(img_id, train_df, col)\n        col.imshow(img)\n        count += 1\nplt.show()","28d7d898":"image_id = (train_df['image_id'].value_counts() == 116).index[0]\nimg = plt.imread(f'{os.path.join(BASE_DIR, \"train\", image_id)}.jpg')\n\nfig, ax = plt.subplots(1, figsize=(12, 12))\n\nax.grid(False)\nax.set_xticks([])\nax.set_yticks([])\nax.axis('off')\nget_bbox(image_id, train_df, ax, color='red')\nax.imshow(img)\nplt.plot()","c1f5814e":"all_images = os.listdir(os.path.join(BASE_DIR, 'train'))\nall_images = set([x[:-4] for x in all_images])\n\nimages_with_bbox = set(list(train_df['image_id']))\n\nimages_without_bbox = list(all_images - images_with_bbox)","844b292f":"print(f'Total number of images without wheat heads: {len(images_without_bbox)}')","1c5740ff":"fig, ax = plt.subplots(nrows=2, ncols=4, figsize=(20, 10))\ncount=20\nfor row in ax:\n    for col in row:\n        img_id = images_without_bbox[count]\n        img = plt.imread(f'{os.path.join(BASE_DIR, \"train\", img_id)}.jpg')\n        col.grid(False)\n        col.set_xticks([])\n        col.set_yticks([])\n        col.imshow(img)\n        count += 1\nplt.show()","6066d0ba":"## Now let's visualize a few training images with bounding boxes","59017447":"## Some of the images without any wheat head","f0a07241":"## Visualizing a few training images without bounding boxes","c77a9f3d":"## Distribution of the size of training images","69c64f73":"Let's see the size of the dataset","033efb4c":"## Distribution of size of bounding boxes","aaa433f6":"## few more...","5cf71385":"## Image with highest number of wheat heads","896f2f0b":"Let's find out number of unique images in training dataset","6a980ac9":"## Reading the given dataset","7190b59d":"##  Min, Max and Average number of wheat heads","e313c111":"## Distribution of number of bounding boxes","18baaadc":"Summary of data:\n * Number of images: 3373\n * Avg. # of wheat heads per image: ~44\n * All images have same dimension: 1024 * 1024\n * Number of minimum bounding boxes (Wheat heads): 0 (Some of the images are without annotation)\n * Number of maximum bounding boxes (Wheat heads): 116","30d31c83":"So there are 3422 images in traing directory and 3373 images are annotated, that means there are 49 images which do not have any wheat heads in it (without annotation)"}}