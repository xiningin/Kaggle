{"cell_type":{"8dba1143":"code","4bcb8ab0":"code","a068f863":"code","4c09c07c":"code","dc63ee9c":"code","eceb4a2d":"code","01d96648":"code","c9c5be8d":"code","ca93181a":"code","a4bf61cb":"code","93d73f5e":"code","d93a6144":"code","9fa04a69":"code","9ddfd84a":"code","de214ccd":"code","3423245d":"code","5a1ae457":"code","3ba293b4":"code","16c2e4af":"code","5926c77f":"code","7314a172":"code","cba41315":"code","b20cd059":"code","9e3d3347":"code","d8e9e9b4":"code","48f6f323":"code","eafc20eb":"code","b5cb19a2":"code","6c2f4793":"code","1cead7ee":"markdown","4a5af8d4":"markdown","2a0e3a2e":"markdown","0db4f593":"markdown","e676674f":"markdown","86bc8b56":"markdown","cec52279":"markdown","ace5ed65":"markdown","73f64861":"markdown","7376011e":"markdown","d12c293c":"markdown","aaecc4f6":"markdown","0b73ff3f":"markdown","8143a592":"markdown","be207d32":"markdown","d05d29cf":"markdown","c0f0fba2":"markdown","b5badfff":"markdown","69d8ea7c":"markdown","be34bf66":"markdown","6b56cbd5":"markdown","69d44d94":"markdown","a2be25be":"markdown","02d3d780":"markdown","e9c16966":"markdown","b5c339b4":"markdown","b85d32c9":"markdown","480c3eaf":"markdown","aa624266":"markdown"},"source":{"8dba1143":"%%HTML\n<img src = \"https:\/\/www.thespruce.com\/thmb\/TDX3oSErYuWgD_mXSGf33WldwkE=\/3480x2323\/filters:fill(auto,1)\/remove-gas-diesel-fuel-stains-odor-2147097_01a-cc6f82e7c472406aa3f216eb66a61b9f.jpg\">","4bcb8ab0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a068f863":"cols = ['MPG','Cylinders','Displacement','Horsepower','Weight',\n                'Acceleration', 'Model Year', 'Origin']\n\ndf = pd.read_csv('..\/input\/autompg\/auto.data', names=cols, na_values = \"?\",\n                comment = '\\t', # once the program encounters a \\t then the rest of the line would be ignored by the function\n                sep= \" \",\n                skipinitialspace=True)\n\ndata = df.copy()","4c09c07c":"data.sample(20) # 20 random rows returned","dc63ee9c":"# checking the info\ndata.info()","eceb4a2d":"# checking the null values","01d96648":"data.isnull().sum()","c9c5be8d":"data.isnull()","ca93181a":"# Summary Statistics\ndata.describe()","a4bf61cb":"sns.boxplot(x = data['Horsepower'])","93d73f5e":"##imputing the values with median\nmedian = data['Horsepower'].median()\ndata['Horsepower'] = data['Horsepower'].fillna(median)\ndata.info()","d93a6144":"data[\"Cylinders\"].value_counts()","9fa04a69":"# category distribution\ndata[\"Cylinders\"].value_counts() \/ len(data)","9ddfd84a":"data['Origin'].value_counts()\n","de214ccd":"# pairplots to get an intuition of potential correlations\nsns.pairplot(data[[\"MPG\", \"Cylinders\", \"Displacement\", \"Weight\", \"Horsepower\"]], diag_kind=\"kde\")","3423245d":"from sklearn.model_selection import StratifiedShuffleSplit\n\nimport warnings\nwarnings.filterwarnings('ignore')","5a1ae457":"split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\nfor train_index, test_index in split.split(data, data[\"Cylinders\"]):\n    strat_train_set = data.loc[train_index]\n    strat_test_set = data.loc[test_index]","3ba293b4":"data = strat_train_set.drop(\"MPG\", axis=1)\ndata_labels = strat_train_set[\"MPG\"].copy()","16c2e4af":"def preprocess_origin_cols(df):\n    df[\"Origin\"] = df[\"Origin\"].map({1: \"India\", 2: \"USA\", 3: \"Germany\"})\n    return df\ndata_tr = preprocess_origin_cols(data)\n# data_tr is data transform\ndata_tr.head()","5926c77f":"data_tr.info()","7314a172":"# isolating the origin column\ndata_cat = data_tr[[\"Origin\"]]\ndata_cat.head()","cba41315":"#onehotencoding the categorical values\nfrom sklearn.preprocessing import OneHotEncoder\n\ncat_encoder = OneHotEncoder()\ndata_cat_1hot = cat_encoder.fit_transform(data_cat)\ndata_cat_1hot   # returns a sparse matrix","b20cd059":"data_cat_1hot.toarray()[:5]","9e3d3347":"cat_encoder.categories_","d8e9e9b4":"# Segregating the numerical columns\nnum_data = data.iloc[:, :-1]\nnum_data.info()","48f6f323":"from sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(strategy=\"median\")\nimputer.fit(num_data)","eafc20eb":"# median of all the columns from imputer\nimputer.statistics_\n","b5cb19a2":"# imputing the missing values by transforming the dataframe\nX = imputer.transform(num_data)\nX","6c2f4793":"data_tr = pd.DataFrame(X, columns=num_data.columns,\n                          index=num_data.index)\ndata_tr.info()","1cead7ee":"Let's convert the n dimensional array back to the dataframe","4a5af8d4":"Now let's look at the category distribuition to check how many rows belong to a particular class of values","2a0e3a2e":"Since our dataset has less than 20% missing values let's use Simple Imputer class of Scikit Learn to fill our missing values","0db4f593":"We are mapping each of the values in the origin column to India, USA and Germany","e676674f":"# Data Preparation","86bc8b56":"- Data Collection - we are using the classic Auto MPG dataset from UCI ML Repository.\n- Define Problem Statement - We'll frame the problem based on the dataset description and initial exploration.\n- EDA - Carry our exploratory analysis to figure out the important features and creating new combination of features.\n- Data Preparation - Using step 4, create a pipeline of tasks to transform the data to be loaded into our ML models.\n- Selecting and Training ML models - Training a few models to evaluate their predictions using cross-validation.\n- Hyperparameter Tuning - Fine tune the hyperparameters for the models that showed promising results.\n- Deploy the Model using a web service - Using Flask web framework to deploy our trained model on Heroku","cec52279":"**Sparse Matrix** : Sparse matrix is a matrix which contains very few non-zero elements.","ace5ed65":"Let's address the missing values in the horsepower column with the median value","73f64861":"Now let's split our dataset using Stratified Shuffle Split\n\nlearn about Stratified Shuffle Split here : https:\/\/www.kaggle.com\/viswanathanc\/stratifiedshufflesplit-working-with-less-data","7376011e":"Similarly let's do it for the Origin Variable","d12c293c":"# Problem Statement:\nThe data contains MPG variable which is continuous data and tells us about the efficiency of fuel consumption of a vehicle in 70s and 80s.\n\nOur aim here is to predict the MPG value for a vehicle given we have other attributes of that vehicle.\n\n","aaecc4f6":"### Importing a few libraries","0b73ff3f":"# Preprocessing the Origin Column","8143a592":"> ","be207d32":"Since we are going to use Stratified Shuffle Split for the train and test split, we are going to import that","d05d29cf":"# Loading Our Dataset","c0f0fba2":"### Hey there! If you are still going through my notebook, consider giving your honest reviews and I will work on improving the notebook\ud83d\ude00","b5badfff":"# Segregating target and feature variables","69d8ea7c":"Let's look at the categories for the cat_encoder object","be34bf66":"# One Hot encoding the Origin Column","6b56cbd5":"# Exploratory Data Analysis","69d44d94":"# Handling Missing Values with Simple Imputer","a2be25be":"# Predicting Fuel Efficiency of Vehicles","02d3d780":"Notice that origin column is converted to object datatype, which basically tells us that it is a categorical column","e9c16966":"To visualize things a little better, let's convert the sparse matrix to an array","b5c339b4":"# Data Collection","b85d32c9":"By dividing by the total number of row, we can come to know the distribution of the data","480c3eaf":"## Update!\nI will keep this notebook updated!","aa624266":"- Handling Categorical Attribute - OneHotEncoder\n- Data Cleaning - Imputer\n- Attribute Addition - Adding custom transformation\n- Setting up Data Transformation Pipeline for numerical and categorical column.\n"}}