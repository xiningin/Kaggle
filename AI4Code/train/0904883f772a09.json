{"cell_type":{"34ed4600":"code","7223be0a":"code","a89f040c":"code","63b1bbd7":"code","223be20d":"code","4f08c31b":"code","ce5ec4b0":"code","317032b9":"markdown","83251e6a":"markdown","83b88f74":"markdown"},"source":{"34ed4600":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","7223be0a":"# First of all we need to load the datasets\ntrain_df = pd.read_excel('..\/input\/train.xlsx')\ntest_df = pd.read_excel('..\/input\/test.xlsx')","a89f040c":"# Count the number of tweets for each political party\nplt.figure()\ntrain_count = train_df['party'].value_counts()\nsns.barplot(x=train_count.index, y=train_count.values)\nplt.figure()\n\n# Count the number of tweets for each user\nusername_count = train_df['username'].value_counts()\nsns.barplot(x=username_count.index, y=username_count.values)\n_ = plt.xticks(rotation=90)","63b1bbd7":"import re\nfrom wordcloud import WordCloud\nfrom stop_words import get_stop_words\n\ndef get_full(username, df):\n    \"\"\" Get all tweets from a user\n    \"\"\"\n    text_series = df[df['username'] == username]['text']\n    all_text = \" \".join(text_series)\n    return all_text\n\ndef stop_words():\n    \"\"\" Get the stop words\n    \"\"\"\n    return get_stop_words('es') + get_stop_words('ca') + get_stop_words('en') + ['dels', 'ho', 'hi', 'pel'] + ['aren', 'can', 'couldn', 'des', 'didn', 'doesn', 'don', 'hadn', 'hasn', 'haven', 'isn', 'let', 'll', 'mustn', 're', 'shan', 'shouldn', 've', 'wasn', 'weren', 'won', 'wouldn']\n\ndef filter_mentions(text):\n    \"\"\" Filter all mentions\n    \"\"\"\n    return re.sub(\"@\\S+\", \"\", text)\n\ndef filter_hashtags(text):\n    \"\"\" Filter all hashtags\n    \"\"\"\n    return re.sub(\"#\\S+\", \"\", text)\n\ndef get_hashtags_only(text):\n    \"\"\"\n    \"\"\"\n    return re.findall(\"#\\S+\", text)","223be20d":"# Define the needed functions for wordcloud\ndef draw_word_cloud(username, df):\n    text = filter_hashtags(filter_mentions(get_full(username, df)))\n    wordcloud = WordCloud(\n        stopwords=stop_words(),\n        normalize_plurals=False,\n        background_color='white').generate(get_full(username, df))\n\n    # Display the generated image:\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()\n\n# ... And for cloud using only hashtags\ndef draw_hashtag_word_cloud(username, df):\n    \"\"\" Draw the word cloud using just hashtags\n    \"\"\"\n    text = get_hashtags_only(filter_mentions(get_full(username, df)))\n    wordcloud = WordCloud(\n        stopwords=stop_words(),\n        normalize_plurals=False,\n        background_color='white').generate(' '.join(text))\n\n    # Display the generated image:\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()","4f08c31b":"plt.title(\"Ines Arrimadas (C's)\")\ndraw_word_cloud('inesarrimadas', train_df)\nplt.title(\"Carles Puigdemont (JXCAT)\")\ndraw_word_cloud('krls', train_df)\nplt.title(\"Miquel Iceta (PSC)\")\ndraw_word_cloud('miqueliceta', train_df)\nplt.title(\"Xavier Domenech (Podem)\")\ndraw_word_cloud('xavierdomenechs', train_df)\nplt.title(\"Xavier Garcia Albiol (PPC)\")\ndraw_word_cloud('albiol_xg', train_df)\nplt.title(\"Marta Rovira (ERC)\")\ndraw_word_cloud('martarovira', train_df)\nplt.title(\"Albert Rivera (C's)\")\ndraw_word_cloud('albert_rivera', train_df)","ce5ec4b0":"plt.title(\"Ines Arrimadas (C's)\")\ndraw_hashtag_word_cloud('inesarrimadas', train_df)\nplt.title(\"Albert Rivera (C's)\")\ndraw_hashtag_word_cloud('albert_rivera', train_df)\nplt.title(\"Carles Puigdemont (JXCAT)\")\ndraw_hashtag_word_cloud('krls', train_df)\nplt.title(\"Miquel Iceta (PSC)\")\ndraw_hashtag_word_cloud('miqueliceta', train_df)\nplt.title(\"Xavier Domenech (Podem)\")\ndraw_hashtag_word_cloud('xavierdomenechs', train_df)\nplt.title(\"Xavier Garcia Albiol (PPC)\")\ndraw_hashtag_word_cloud('albiol_xg', train_df)\nplt.title(\"Marta Rovira (ERC)\")\ndraw_hashtag_word_cloud('martarovira', train_df)","317032b9":"# Word Cloud Visualization\nA useful tool to overview a problem like this is using wordcloud.\n\nThe following code block includes some useful actions to perform over data.","83251e6a":"# Visualization\n\nIn this notebook we will dive inside the dataset and perform some fancy visualization operations to get a nice overview of the data","83b88f74":"# Class weighthings\nThe first important thing that we may want to notice is if we are facing a balanced or unbalanced dataset. To do so we will count the occurences of each political party contained in the dataset."}}