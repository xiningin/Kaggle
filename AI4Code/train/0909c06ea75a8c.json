{"cell_type":{"6f0b835d":"code","8a51c30d":"code","fea0341a":"code","bd966a0c":"code","833c0f99":"code","6e7ceae4":"code","e69616cf":"code","076c57ce":"code","db607da9":"code","98bf5a78":"code","36aa974f":"code","2d1d33b6":"code","51433001":"code","af346373":"code","737e59d8":"code","a6d0ce96":"markdown","0d1e72b6":"markdown","561034c0":"markdown","57f6e8cd":"markdown","c4b5e41e":"markdown","a06cc725":"markdown","4fdbc7cf":"markdown"},"source":{"6f0b835d":"import os\n\nimport numpy as np\nimport pandas as pd \nimport imageio\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom PIL import Image, ImageOps\nimport scipy.ndimage as ndi","8a51c30d":"#here we need to get to the data\ndirname = '\/kaggle\/input\/herbarium-2020-fgvc7\/nybg2020\/train\/images'\ndir_001 = os.path.join(dirname, '001')\ndir_001_19 = os.path.join(dir_001, '19')","fea0341a":"os.listdir(dir_001)","bd966a0c":"os.listdir(dir_001_19)","833c0f99":"def plot_imgs_one_dir(item_dir, num_imgs=25):\n    all_item_dirs = os.listdir(item_dir)\n    item_files = [os.path.join(item_dir, file) for file in all_item_dirs][:num_imgs]\n\n    plt.figure(figsize=(10, 10))\n    for idx, img_path in enumerate(item_files):\n        plt.subplot(5, 5, idx+1)\n\n        img = plt.imread(img_path)\n        plt.imshow(img)\n\n    plt.tight_layout()","6e7ceae4":"plot_imgs_one_dir(dir_001_19)","e69616cf":"def plot_img_hist_3channel(item_dir, num_img=6):\n    all_item_dirs = os.listdir(item_dir)\n    item_files = [os.path.join(item_dir, file) for file in all_item_dirs][:num_img]\n\n    #plt.figure(figsize=(10, 10))\n    for idx, img_path in enumerate(item_files):\n        fig1 = plt.figure(idx,figsize=(10, 10))\n        fig1.add_subplot(2, 2, 1)\n        img = mpimg.imread(img_path, )\n        plt.imshow(img)\n        fig1.add_subplot(2, 2, 2)\n        plt.hist(img.ravel(), bins = 256, color = 'orange')\n        plt.hist(img[:, :, 0].ravel(), bins = 256, color = 'red')\n        plt.hist(img[:, :, 1].ravel(), bins = 256, color = 'green')\n        plt.hist(img[:, :, 2].ravel(), bins = 256, color = 'blue')\n        plt.xlabel('Intensity')\n        plt.ylabel('Count')\n        plt.legend(['Total', 'Red Channel', 'Green Channel', 'Blue Channel'])\n        plt.show()\n    \n    plt.tight_layout()","076c57ce":"plot_img_hist_3channel(dir_001_19)","db607da9":"os.mkdir('\/kaggle\/working\/work_imgs')","98bf5a78":"dir_output = os.path.join('\/kaggle\/working\/','work_imgs');","36aa974f":"def  hist_equal(path_from, path_to, stop=4):\n    i=1\n    files = os.listdir(path_from)\n    \n    for file in files[:stop]: \n        try:\n            file_dir = os.path.join(path_from, file)\n            file_dir_save = os.path.join(path_to, file)\n            img = Image.open(file_dir)\n            img = ImageOps.equalize(img)\n            #img = img.convert(\"RGB\") #konwersja z RGBA do RGB, usuniecie kana\u0142u alfa zeby zapisa\u0107 do jpg\n            img.save(file_dir_save) \n            i=i+1\n        except:\n            continue","2d1d33b6":"hist_equal(dir_001_19, dir_output)","51433001":"plot_img_hist_3channel(dir_output, 4)","af346373":"def plot_cdf_comparison(item_dir_before,item_dir_after, num_img=1):\n    all_item_dirs = os.listdir(item_dir_before)\n    item_files_before = [os.path.join(item_dir_before, file) for file in all_item_dirs][:num_img]\n    item_files_after = [os.path.join(item_dir_after, file) for file in all_item_dirs][:num_img]\n  \n  #plt.figure(figsize=(10, 10))\n    for idx, img_path in enumerate(item_files_before):\n        im_b = imageio.imread(img_path)\n        hist_b = ndi.histogram(im_b, min=0, max=255, bins=256)\n        cdf_b = hist_b.cumsum() \/ hist_b.sum()\n        \n        img_path_a = item_files_after[idx]\n        im_a = imageio.imread(img_path_a)\n        hist_a = ndi.histogram(im_a, min=0, max=255, bins=256)\n        cdf_a = hist_a.cumsum() \/ hist_a.sum()\n\n        fig1 = plt.figure(idx,figsize=(10, 10))\n        fig1.add_subplot(2, 4, 1)\n        img_b = mpimg.imread(img_path, )\n        plt.title(\"Before. {}\".format(idx))\n        plt.imshow(img_b, cmap='gray')\n        fig1.add_subplot(2, 4, 4)\n        plt.title(\"CDF comparison\")\n        plt.plot(cdf_b)\n        \n        fig2 = plt.figure(idx,figsize=(10, 10))\n        fig2.add_subplot(2, 4, 2)\n        img_a = mpimg.imread(img_path_a, )\n        plt.title(\"Before. {}\".format(idx))\n        plt.imshow(img_a)\n        fig1.add_subplot(2, 4, 4)\n        plt.plot(cdf_a)\n        plt.legend(['CDF before', 'CDF after'])\n\n    plt.tight_layout()","737e59d8":"plot_cdf_comparison(dir_001_19, dir_output, 4)","a6d0ce96":"I'm going to have fun and try to play with this images. And try to get to know this dataset. ","0d1e72b6":"We can also see cumulative distribution function (CDF) and find out how it changed after equalisation.","561034c0":"To see what we have here I decided to just use code from my other notebooks. \nLet's see what we can find out.","57f6e8cd":"No idea if this will be helpful in the future. But who cares. :D","c4b5e41e":"We check only first 4 of the images. ","a06cc725":"I wonder what would happen if we equalize this histograms. Note that we only play with one image folder. ","4fdbc7cf":"To be continued... ;)"}}