{"cell_type":{"d04c3a88":"code","9a7a9e36":"code","9f295c7f":"code","407a8a05":"code","170eb50b":"code","7e0a8ada":"code","632caa3f":"code","c6b0d3c5":"code","0ae5ec03":"code","bc757a02":"code","d1d5cc40":"code","a8f0b368":"code","e9c0dae6":"code","bc60d43b":"code","2b48fdf0":"code","7e23fed5":"code","6735584d":"code","4d4673bc":"code","dc23e1ed":"code","7e093cfb":"code","e9763de5":"code","90e00345":"code","3c6adab1":"code","01ec5a1a":"code","65382f0f":"code","393bf3f2":"code","75750af7":"code","d0325086":"code","17530e13":"code","d36207ee":"code","6fc75351":"code","d0e96306":"markdown","34ebbf27":"markdown","d93d646e":"markdown"},"source":{"d04c3a88":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport re \n%matplotlib inline \n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('ggplot')\n\nimport nltk\nfrom nltk import word_tokenize\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom collections import Counter\nfrom wordcloud import WordCloud\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import f1_score\n\n","9a7a9e36":"df = pd.read_csv('..\/input\/amazon-product-reviews\/Reviews.csv')","9f295c7f":"df.head(3)","407a8a05":"df.shape","170eb50b":"df = df.sample(frac= 0.20,replace = True).reset_index(drop = True)\n\ndf.head()","7e0a8ada":"df.shape","632caa3f":"df.info()","c6b0d3c5":"df.isna().sum()","0ae5ec03":"df.dropna(inplace= True)","bc757a02":"df.isna().sum()","d1d5cc40":"rating_pct = df['Score'].value_counts()\/len(df) * 100\nrating_pct","a8f0b368":"rating_pct.plot.bar()\nplt.show()","e9c0dae6":"#words per review\nplt.figure(figsize = (14,6))\nWordsPerReview = df['Text'].apply(lambda x: len(x.split(' ')))\n\nsns.histplot(WordsPerReview,bins = 100)\n\nplt.xlabel('Review Length')\nplt.show()","bc60d43b":"txt = ' '.join(review for review in df.Text)\n\nwordcloud = WordCloud(\n            background_color = 'white',\n            max_font_size = 100,\n            max_words = 100,\n            width = 800,\n            height = 500\n            ).generate(txt)\n\n\nplt.imshow(wordcloud,interpolation = 'bilinear')\nplt.axis('off')\nplt.show()","2b48fdf0":"df = pd.DataFrame(df,columns = ['Score','Text'])\ndf.rename(columns = {'Score':'Rating','Text':'Review'},inplace = True)","7e23fed5":"def apply_sentiment(Rating):\n    if(Rating <=2 ):\n        return 0\n    else:\n        return 1","6735584d":"df['Sentiment'] = df['Rating'].apply(apply_sentiment)\ndf.drop(['Rating'],axis = 1, inplace = True)","4d4673bc":"sentiment = df['Sentiment'].value_counts()\nsentiment","dc23e1ed":"plt.figure(figsize = ( 10,8))\nsns.countplot(data = df, x = 'Sentiment')\nplt.show()","7e093cfb":"def clean_text(Review):\n   \n    Review = str(Review).lower() # convert to lowercase\n    Review = re.sub('\\[.*?\\]', '', Review) \n    Review = re.sub('https?:\/\/\\S+|www\\.\\S+', '', Review) # Remove URls\n    Review = re.sub('<.*?>+', '', Review)\n    Review = re.sub(r'[^a-z0-9\\s]', '', Review) # Remove punctuation\n    Review = re.sub('\\n', '', Review)\n    Review = re.sub('\\w*\\d\\w*', '', Review)\n    return Review\n","e9763de5":"df['Review'] = df['Review'].apply(clean_text)","90e00345":"df.head()","3c6adab1":"from nltk.corpus import stopwords\nstop_words = set(stopwords.words('english'))\nstopword = []\nsentence = df['Review'][0]\n\n\n#words = nltk.word_tokenize(sentence)\n\n\ndef remove_stopword(stop_words, sentence):\n    return [word for word in nltk.word_tokenize(sentence) if word not in stop_words]\n\ndf['reviews_text'] = df['Review'].apply(lambda row: remove_stopword(stop_words, row))","01ec5a1a":"df.head(3)","65382f0f":"X = df['reviews_text']\ny = df['Sentiment']\n","393bf3f2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,random_state = 42,\n                                                   test_size = 0.20)\nX_train.shape,X_test.shape,y_train.shape","75750af7":"from sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, TfidfTransformer\nfrom sklearn.naive_bayes import MultinomialNB\nclf = Pipeline([\n    ('vect', CountVectorizer(stop_words= \"english\")),\n    ('tfidf', TfidfTransformer()),\n    ('classifier', MultinomialNB()),\n    ])","d0325086":"fit_model = clf.fit(X_train,y_train)","17530e13":"y_pred = clf.predict(X_test)","d36207ee":"print('Training accuracy:', fit_model.score(X_train,y_train))\nprint('Test accuracy:', fit_model.score(X_test,y_test))","6fc75351":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(y_test,y_pred))\n\nprint(confusion_matrix(y_test,y_pred))","d0e96306":"What is the distribution of ratings across dataset","34ebbf27":"#### Data Preprocessing and Transformation","d93d646e":"#### Word cloud"}}