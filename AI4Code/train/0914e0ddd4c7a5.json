{"cell_type":{"a688bb51":"code","d7563b74":"code","bf62dd7f":"code","2fb8bc97":"code","433e4f39":"code","44a4794f":"code","1d3d2bc3":"code","fe68c8d5":"code","03022495":"code","cd32f954":"code","4a0b9bda":"code","150e37de":"code","7a5a38d1":"code","692a63ff":"code","837212fd":"code","757f34d2":"markdown","19218f6a":"markdown","23778b34":"markdown"},"source":{"a688bb51":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7563b74":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS","bf62dd7f":"data = pd.read_csv('\/kaggle\/input\/coursera-course-dataset\/coursea_data.csv')","2fb8bc97":"data.head()","433e4f39":"data.info()","44a4794f":"#Dropping unwanted columns\ndata.drop('Unnamed: 0', axis=1, inplace = True)","1d3d2bc3":"data['course_students_enrolled'] = data['course_students_enrolled'].str.replace('k','*1000')\ndata['course_students_enrolled'] = data['course_students_enrolled'].str.replace('m','*1000000')\ndata['course_students_enrolled'] = data['course_students_enrolled'].map(lambda x: eval(x))","fe68c8d5":"data.head()","03022495":"# TOP 10 ORGANISATIONS WITH MAXIMUM NUMBER OF COURSES\n\nx= data['course_organization'].value_counts(ascending=False)\na=x[:10]\na.plot(kind=\"bar\", figsize=(15,10))\nplt.title('TOP 10 ORGANISATIONS WITH MAXIMUM NUMBER OF COURSES OFFERED')\nplt.xlabel('Organisations Name')\nplt.ylabel('Number of Courses')","cd32f954":"plt.figure(figsize=(15,10)) \nsns.countplot(x='course_rating', data=data)\nplt.xlabel('Course Rating')\nplt.ylabel('Number of Courses')\nplt.title('NUMBER OF COURSES FOR DIFFERENT RATINGS')  ","4a0b9bda":"colors =  [\"#DF6589FF\", \"#76528BFF\",\"#FC766AFF\"]\nax= data['course_Certificate_type'].value_counts(ascending=False).plot.pie(colors=colors,\n            autopct='%1.1f%%',\n            figsize=(15, 10))\nplt.title('COURSE CERTIFICATION TYPE') \nplt.show()","150e37de":"large=data.nlargest(10, ['course_students_enrolled'])\n\n\nplt.figure(figsize=(30,15))\ng = sns.barplot(x=\"course_title\" ,y=\"course_students_enrolled\",hue=\"course_rating\",data=large)\nplt.xlabel('Course Titles')\nplt.ylabel('Number of Students Enrolled')\nplt.title(\"COURSES WITH MOST STUDENTS ENROLLMENT AND THEIR RATINGS\")\n\n\nfor p in g.patches:\n    \n    g.annotate(format(p.get_height(), '.2f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')","7a5a38d1":"plt.figure(figsize=(15,10)) \nsns.countplot(x='course_difficulty', data=data)\nplt.xlabel('Course Difficulty')\nplt.ylabel('Number of Courses')\nplt.title(\"PLOTTING DIFFICULTY OF COURSE WITH THEIR COUNT\")\n","692a63ff":"figure, ax =plt.subplots(1,2, figsize= (15,10))\n\n\nsns.countplot(data['course_difficulty'], ax=ax[0], hue=data['course_Certificate_type'])\nax[0].set_title(\"RELATION OF DIFFUCULTY OF COURSE WITH CERTIFICATION TYPE\")\n\n\nsns.countplot(data['course_Certificate_type'], ax=ax[1], hue=data['course_difficulty'])\nax[1].set_title(\"RELATION OF COURSE CERTIFICATION TYPE WITH DIFFICULTY OF COURSE\")\n\n\nfigure.show()","837212fd":"wordcloud = WordCloud(width = 1000, height = 1000, \n            background_color ='white', \n            stopwords = STOPWORDS, \n            min_font_size = 10).generate(str(data['course_title']))\n\nplt.figure(figsize = (15, 10))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","757f34d2":"# **VISUALIZING THE DATA**","19218f6a":"**THE ABOVE WORD CLOUD IS TO SEE WHAT WORDS ATTRACT A USER TO ENROLL IN THE COURSE**","23778b34":"# **PRE PROCESSING OF DATA**"}}