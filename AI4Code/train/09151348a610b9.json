{"cell_type":{"7dc503fd":"code","c670fb71":"code","59c025bb":"code","253cf42d":"code","e4e601be":"code","45f35841":"code","b5cd81d6":"code","0af1f596":"code","546592cf":"code","3a152d0a":"code","640561c4":"code","27078860":"code","55a71e71":"code","82c553b4":"code","d1d59f95":"code","6008a8b0":"code","3c402aeb":"code","20358f3e":"code","e5623df3":"code","d0243fbc":"code","afa2ce31":"code","c968ce81":"code","55814582":"code","3884fee2":"code","fae5cb8d":"code","7456c607":"code","ecd36b65":"code","6724adaf":"code","cbf2d5d7":"code","83150868":"code","5b432cc5":"code","12c33aaf":"code","820805a1":"code","0b17dea8":"code","45e4651f":"code","6d2ad2a6":"code","474861ab":"code","0ac8c5f5":"code","a0c4da55":"code","cb425c83":"code","3af49620":"code","9b8c29b8":"code","c1a040db":"code","5d7a440e":"code","53c98fbe":"code","898c4f3d":"code","f0e02240":"code","bae21384":"code","9a532e26":"markdown","ff44d1a7":"markdown","f65619c1":"markdown","eee76808":"markdown","795bfff9":"markdown","5745b6cd":"markdown","5ffd71a0":"markdown","b899eaa1":"markdown","7284073a":"markdown","07bd002d":"markdown","aa6bad8d":"markdown","365a8ff7":"markdown","9f248a44":"markdown","02c4ee84":"markdown","eb6f963c":"markdown"},"source":{"7dc503fd":"#import the required libraries\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.ticker as mtick  \nimport matplotlib.pyplot as plt\n%matplotlib inline","c670fb71":"df = pd.read_csv('..\/input\/churnprediction\/Telco-Customer-Churn.csv')","59c025bb":"df.head()","253cf42d":"df.shape","e4e601be":"df.info()","45f35841":"df['Churn'].value_counts().plot(kind='barh',figsize=(8,6))\nplt.xlabel('Count')\nplt.ylabel(\"Target Variable\")\nplt.title(\"Count of TARGET Variable per category\")","b5cd81d6":"df['Churn'].value_counts()\/len(df['Churn']) *100","0af1f596":"df.isna().sum()","546592cf":"df_copy = df.copy()","3a152d0a":"df_copy.TotalCharges = pd.to_numeric(df_copy.TotalCharges,errors='coerce')\ndf_copy.TotalCharges.dtype","640561c4":"df_copy.isnull().sum()","27078860":"df_copy.loc[df_copy['TotalCharges'].isnull() == True]","55a71e71":"df_copy.dropna(how='any',inplace=True)\ndf_copy.isnull().sum()","82c553b4":"# group data by tenure (every 12 month)\ndf_copy.tenure.max()","d1d59f95":"labels = [\"{0} - {1}\".format(i, i+ 11) for i in range(1, 72, 12)]\ndf_copy['tenure_group'] = pd.cut(df_copy.tenure, range(1, 80, 12), right=False, labels=labels)","6008a8b0":"labels","3c402aeb":"df_copy['tenure_group'].value_counts()","20358f3e":"df_copy['tenure_group'] = df_copy['tenure_group'].map({'1 - 12': 1,\n                            '13 - 24': 2,\n                            '25 - 36': 3,\n                            '37 - 48': 4,\n                            '49 - 60': 5,\n                            '61 - 72': 6})","e5623df3":"df_copy['tenure_group'].value_counts()","d0243fbc":"#drop column customerID and tenure\ndf_copy.drop(columns= ['customerID', 'tenure'], axis=1, inplace=True)\ndf_copy.head()","afa2ce31":"for i, target in enumerate(df_copy.drop(columns=['Churn', 'TotalCharges', 'MonthlyCharges'])):\n    plt.figure(i,figsize=(7,3))\n    sns.countplot(x=target, hue='Churn',data=df_copy)","c968ce81":"df_copy['Churn'].value_counts()","55814582":"# convert churn to numeric\ndf_copy['Churn'] = df_copy['Churn'].map({'Yes': 1,'No':0})","3884fee2":"df_copy['Churn'].value_counts()","fae5cb8d":"df_copy.head()","7456c607":"df_copy_dummies = pd.get_dummies(df_copy)\ndf_copy_dummies.head()","ecd36b65":"# Monthly charges & total charges\nsns.lmplot(x='MonthlyCharges',y='TotalCharges',data=df_copy_dummies, fit_reg=False)","6724adaf":"# churn and monthly charges\n_ = sns.kdeplot(df_copy_dummies.MonthlyCharges[(df_copy_dummies[\"Churn\"] == 0)], color=\"Red\", shade = True)\n_ = sns.kdeplot(df_copy_dummies.MonthlyCharges[(df_copy_dummies[\"Churn\"] == 1)], color=\"Blue\", shade = True)\nplt.legend([\"No Churn\", \"Churn\"])\nplt.xlabel('Monthly Charges')\nplt.ylabel('Size')\nplt.title('Monthly charges by churn')","cbf2d5d7":"# churn and total charges\n_ = sns.kdeplot(df_copy_dummies.TotalCharges[(df_copy_dummies[\"Churn\"] == 0)], color=\"Red\", shade = True)\n_ = sns.kdeplot(df_copy_dummies.TotalCharges[(df_copy_dummies[\"Churn\"] == 1)], color=\"Blue\", shade = True)\nplt.legend([\"No Churn\", \"Churn\"])\nplt.xlabel('Total Charges')\nplt.ylabel('Size')\nplt.title('Total charges by churn')","83150868":"plt.figure(figsize=(20,8))\ndf_copy_dummies.corr()['Churn'].sort_values(ascending = False).plot(kind='bar')","5b432cc5":"plt.figure(figsize=(12,12))\nsns.heatmap(df_copy_dummies.corr(), cmap=\"Paired\")","12c33aaf":"df_churn0 = df_copy.loc[df_copy['Churn']==0]\ndf_churn1 = df_copy.loc[df_copy['Churn']==1]","820805a1":"df_churn1.head()","0b17dea8":"def uniplot(df, col, title, hue = None, hue_palette=None):\n\n    sns.set_style('whitegrid')\n    sns.set_context('talk')\n    plt.rcParams['axes.labelsize'] = 20\n    plt.rcParams['axes.titlesize'] = 22\n    plt.rcParams['axes.titlepad'] = 30\n\n    fig, ax = plt.subplots()\n    fig.set_size_inches(15, 8)\n    plt.xticks(rotation=45)\n    plt.yscale('log')\n    plt.title(title)\n    sns.countplot(data = df, x = col, order=df[col].value_counts().index, hue=hue, palette=hue_palette)\n\n    plt.show()","45e4651f":"uniplot(df_churn1,col='Partner',title='Distribution of Partners for Churned Customers',hue='gender',hue_palette=['#432371',\"#FAAE7B\"])","6d2ad2a6":"uniplot(df_churn0,col='Partner',title='Distribution of Partners for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","474861ab":"uniplot(df_churn1,col='PaymentMethod',title='Distribution of PaymentMethod for Churned Customers',hue='gender',hue_palette=['#432371',\"#FAAE7B\"])","0ac8c5f5":"uniplot(df_churn0,col='PaymentMethod',title='Distribution of PaymentMethod for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","a0c4da55":"uniplot(df_churn1,col='Contract',title='Distribution of Contract for Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","cb425c83":"uniplot(df_churn0,col='Contract',title='Distribution of Contract for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","3af49620":"uniplot(df_churn1,col='TechSupport',title='Distribution of TechSupport for Churned Customers',hue='gender',hue_palette=['#432371',\"#FAAE7B\"])","9b8c29b8":"uniplot(df_churn0,col='TechSupport',title='Distribution of TechSupport for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","c1a040db":"uniplot(df_churn1,col='OnlineSecurity',title='Distribution of OnlineSecurity for Churned Customers',hue='gender',hue_palette=['#432371',\"#FAAE7B\"])","5d7a440e":"uniplot(df_churn0,col='OnlineSecurity',title='Distribution of OnlineSecurity for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","53c98fbe":"df_churn0.columns","898c4f3d":"uniplot(df_churn1,col='InternetService',title='Distribution of InternetService for Churned Customers',hue='gender',hue_palette=['#432371',\"#FAAE7B\"])","f0e02240":"uniplot(df_churn0,col='InternetService',title='Distribution of InternetService for Non-Churned Customers',hue='gender',hue_palette=[\"#FAAE7B\",'#432371'])","bae21384":"df_copy_dummies.to_csv('churn.csv')","9a532e26":"### Bivariate analysis","ff44d1a7":"![Screenshot.jpg](attachment:b1d729e8-37d1-418d-8840-e7b9bd0439a1.jpg)","f65619c1":"**High churn in:** <br>\n    - month to month contract <br>\n    - no online security <br>\n    - no technical support <br>\n    - fiber optics internet service <br>\n    - tenure 1 (first year of contract) <br>\n**Low churn in:** <br>\n    - 2 years contract <br>\n    - no internet services and device protection <br>\n    - custumers with long contract (tenure 6) <br>","eee76808":"**now we see that totalCharges have null values**","795bfff9":"### **we see that it is the opposite in total charges**","5745b6cd":"### **we see that there is a positive correlation between monthly and total charges**","5ffd71a0":"## EDA","b899eaa1":"<img src=\"https:\/\/raw.githubusercontent.com\/pik1989\/MLProject-Churn-Analysis-And-Prediction-Model\/main\/images\/Telco3.JPG\"\/>","7284073a":"### For univariate analysis","07bd002d":"### Encoding categorical features ","aa6bad8d":"**drop null values**","365a8ff7":"### As we can see:\n- Payment method(**electronic check**) has **high churn customers** compared to **credit card** <br>\n- Customers prefer **month to month** contract <br>\n- Customers prefer **no online security** contract <br>","9f248a44":"### now we see that data is highly imbalanced","02c4ee84":"## **Customer churn** is the percentage of customers that stopped using your company's product or service during a certain time frame. You can calculate churn rate by dividing the number of customers you lost during that time period -- say a quarter -- by the number of customers you had at the beginning of that time period. <br>\n\n### For example, if you start your quarter with 400 customers and end with 380, your churn rate is 5% because you lost 5% of your customers.","eb6f963c":"### **we see that churn is high when monthly charges are high**"}}