{"cell_type":{"36449c14":"code","14b1fec0":"code","8f2e832a":"code","da3cec30":"code","dac4e528":"code","cb6b6164":"code","01c810ce":"code","784f1a84":"code","ba828d62":"markdown","0ced9b06":"markdown","ba2ae04b":"markdown","7f393d04":"markdown","903f02aa":"markdown","bf87152b":"markdown","c7b8957b":"markdown","36e85106":"markdown","e7aa4d64":"markdown"},"source":{"36449c14":"import numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport warnings\n%matplotlib inline\nwarnings.simplefilter('ignore')\n\ntrn = pd.read_json('..\/input\/stanford-covid-vaccine\/train.json', lines=True)\ntst = pd.read_json('..\/input\/stanford-covid-vaccine\/test.json', lines=True)\npri = tst[tst.seq_length == 130]\npub = tst[tst.seq_length == 107]","14b1fec0":"def read_bpps_mean(df):\n    bpps_arr = []\n    for mol_id in df.id.to_list():\n        bpps_arr.append(np.load(f\"..\/input\/stanford-covid-vaccine\/bpps\/{mol_id}.npy\").mean(axis=1))\n    return bpps_arr\n\ntrn['bpps_mean'] = read_bpps_mean(trn)\npri['bpps_mean'] = read_bpps_mean(pri)\npub['bpps_mean'] = read_bpps_mean(pub)\n\nsns.distplot(np.array(trn['bpps_mean'].to_list()).reshape(-1),color=\"Blue\")\nsns.distplot(np.array(pub['bpps_mean'].to_list()).reshape(-1),color=\"Green\")\nsns.distplot(np.array(pri['bpps_mean'].to_list()).reshape(-1),color=\"Red\")","8f2e832a":"def read_bpps_max(df):\n    bpps_arr = []\n    for mol_id in df.id.to_list():\n        bpps_arr.append(np.load(f\"..\/input\/stanford-covid-vaccine\/bpps\/{mol_id}.npy\").max(axis=1))\n    return bpps_arr\n\ntrn['bpps_max'] = read_bpps_max(trn)\npri['bpps_max'] = read_bpps_max(pri)\npub['bpps_max'] = read_bpps_max(pub)\n\nsns.distplot(np.array(trn['bpps_max'].to_list()).reshape(-1),color=\"Blue\")\nsns.distplot(np.array(pub['bpps_max'].to_list()).reshape(-1),color=\"Green\")\nsns.distplot(np.array(pri['bpps_max'].to_list()).reshape(-1),color=\"Red\")","da3cec30":"def read_bpps_sum(df):\n    bpps_arr = []\n    for mol_id in df.id.to_list():\n        bpps_arr.append(np.load(f\"..\/input\/stanford-covid-vaccine\/bpps\/{mol_id}.npy\").sum(axis=1))\n    return bpps_arr\n\ntrn['bpps_sum'] = read_bpps_sum(trn)\npri['bpps_sum'] = read_bpps_sum(pri)\npub['bpps_sum'] = read_bpps_sum(pub)\n\nsns.distplot(np.array(trn['bpps_sum'].to_list()).reshape(-1),color=\"Blue\")\nsns.distplot(np.array(pub['bpps_sum'].to_list()).reshape(-1),color=\"Green\")\nsns.distplot(np.array(pri['bpps_sum'].to_list()).reshape(-1),color=\"Red\")","dac4e528":"def read_bpps_nb(df):\n    bpps_arr = []\n    for mol_id in df.id.to_list():\n        bpps = np.load(f\"..\/input\/stanford-covid-vaccine\/bpps\/{mol_id}.npy\")\n        bpps_nb = (bpps > 0).sum(axis=0) \/ bpps.shape[0]\n        bpps_arr.append(bpps_nb)\n    return bpps_arr \n\ntrn['bpps_nb'] = read_bpps_nb(trn)\npri['bpps_nb'] = read_bpps_nb(pri)\npub['bpps_nb'] = read_bpps_nb(pub)\n\nsns.distplot(np.array(trn['bpps_nb'].to_list()).reshape(-1),color=\"Blue\")\nsns.distplot(np.array(pub['bpps_nb'].to_list()).reshape(-1),color=\"Green\")\nsns.distplot(np.array(pri['bpps_nb'].to_list()).reshape(-1),color=\"Red\")","cb6b6164":"def mk_pair_map(structure, type='pm'):\n    pm = np.full(len(structure), -1, dtype=int)\n    pd = np.full(len(structure), -1, dtype=int)\n    queue = []\n    for i, s in enumerate(structure):\n        if s == \"(\":\n            queue.append(i)\n        elif s == \")\":\n            j = queue.pop()\n            pm[i] = j\n            pm[j] = i\n            pd[i] = i-j\n            pd[j] = i-j\n    if type == 'pm':\n        return pm\n    elif type == 'pd':\n        return pd","01c810ce":"trn['pair_map'] = trn.structure.apply(mk_pair_map, type='pm')\npub['pair_map'] = pub.structure.apply(mk_pair_map, type='pm')\npri['pair_map'] = pri.structure.apply(mk_pair_map, type='pm')\n\ntrn_list = np.array(trn['pair_map'].to_list()).reshape(-1)\npub_list = np.array(pub['pair_map'].to_list()).reshape(-1)\npri_list = np.array(pri['pair_map'].to_list()).reshape(-1)\n\nsns.distplot(trn_list[~trn_list<0],color=\"Blue\")\nsns.distplot(pub_list[~pub_list<0],color=\"Green\")\nsns.distplot(pri_list[~pri_list<0],color=\"Red\")","784f1a84":"trn['pair_dist'] = trn.structure.apply(mk_pair_map, type='pd')\npub['pair_dist'] = pub.structure.apply(mk_pair_map, type='pd')\npri['pair_dist'] = pri.structure.apply(mk_pair_map, type='pd')\n\ntrn_list = np.array(trn['pair_dist'].to_list()).reshape(-1)\npub_list = np.array(pub['pair_dist'].to_list()).reshape(-1)\npri_list = np.array(pri['pair_dist'].to_list()).reshape(-1)\n\nsns.distplot(trn_list[~trn_list<0],color=\"Blue\")\nsns.distplot(pub_list[~pub_list<0],color=\"Green\")\nsns.distplot(pri_list[~pri_list<0],color=\"Red\")","ba828d62":"## pair distance - Not sure, use it at your own risk. ","0ced9b06":"## bpps sum - looks OK","ba2ae04b":"## bpps max - looks OK","7f393d04":"## bpps non zero number ratio - Not sure, use it at your own risk. ","903f02aa":"## bpps mean - Dangerous ","bf87152b":"It is important to check the distribution of additional features you made.\nDangerous features which have different distribution would require some kind of normalization.\nIt needs to be done very carefully, or just stay away from them :)","c7b8957b":"bpps mean for private test data has different distribution compared to train and public test data.\nOn the other hand, max and sum distribution seems to be fine.","36e85106":"Some features are very dangerous because of the different sequence lengths of private test.\nEven if our CV or public score improves, we should not use them.","e7aa4d64":"## pair map - Dangerous "}}