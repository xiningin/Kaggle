{"cell_type":{"b6bf51f8":"code","fcad4835":"code","95119769":"code","7ac34b51":"code","66855448":"code","3260548a":"code","ea796a8a":"code","fb68c145":"code","ca671cbb":"code","9356e855":"code","59d86d13":"code","13f1ccc8":"code","9a42312c":"code","df9b06b7":"code","2fcb2907":"code","0554206d":"code","b863631f":"code","35a9fb6f":"code","1125ec03":"code","9ce379a1":"code","d0bef671":"code","17803353":"code","efd441a2":"code","39ffd98a":"code","d0d04339":"code","1c10a2df":"markdown","4ed97f4e":"markdown","e9746b1f":"markdown","19279336":"markdown","56cdd5b7":"markdown","c667f620":"markdown","e4607b56":"markdown","dab9440b":"markdown","b8562aac":"markdown","6c0b83b1":"markdown","e7b6c162":"markdown","79f24b96":"markdown","178b5ca7":"markdown","2ff07d62":"markdown"},"source":{"b6bf51f8":"# Importing all the necessary Modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","fcad4835":"match_df = pd.read_csv(\"..\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv\")\nball_df = pd.read_csv(\"..\/input\/ipl-complete-dataset-20082020\/IPL Ball-by-Ball 2008-2020.csv\")","95119769":"match_df.info()","7ac34b51":"match_df.head()","66855448":"ball_df.head()","3260548a":"print(match_df.shape,ball_df.shape)","ea796a8a":"match_df.dtypes","fb68c145":"plt.figure(figsize=(12,8))\nsns.countplot(y=match_df[\"winner\"], orient=\"h\")","ca671cbb":"ball_df.describe(include=\"all\")","9356e855":"ball_df.isnull().sum()","59d86d13":"match_df.isnull().sum()","13f1ccc8":"plt.figure(figsize=(12,8))\nax=sns.countplot(y=\"toss_winner\", data=match_df, orient=\"h\", hue=\"toss_decision\")\nplt.xlabel(\"Toss decision\")","9a42312c":"toss_winner = match_df[\"toss_winner\"].value_counts()\nwinner_toss_df = match_df[match_df[\"toss_winner\"]==match_df[\"winner\"]]\nwinner_count_after_toss_win = winner_toss_df[\"winner\"].value_counts()\nboth_win_dict = dict()\nfor items in winner_count_after_toss_win.iteritems():\n    both_win_dict[items[0]] = float(items[1])\/toss_winner[items[0]] * 100\nplt.figure(figsize=(12,8))\nsns.barplot(y=list(both_win_dict.keys()), x=list(both_win_dict.values()), orient=\"h\")\nplt.title(\"Match wins pecentage after toss win\")\nplt.xlabel(\"Percentage\")","df9b06b7":"sns.distplot(ball_df['extra_runs'])","2fcb2907":"sns.relplot(x=\"extra_runs\", y=\"batsman_runs\", hue='batting_team', data=ball_df)","0554206d":"corr = ball_df.corr()\nsns.heatmap(corr, annot=True, square=True)\nplt.yticks(rotation=2)\nplt.show()","b863631f":"ball_df.hist(figsize=(10, 12), bins=50, xlabelsize=8, ylabelsize=8);","35a9fb6f":"total_match = match_df[\"team1\"].append(match_df[\"team2\"])\ntotal_match.value_counts()\ndenominator=total_match.value_counts()\nb=match_df[\"winner\"].value_counts()\npercent={}\nfor items in b.iteritems(): \n    percent[items[0]]=float(items[1])\/denominator[items[0]] * 100\nax=plt.figure(figsize=(12,8))\nax=sns.barplot(y=list(percent.keys()), x=list(percent.values()), orient=\"h\")\nax.set_title(\"Pecentage Wins\")\nax.set_xlabel(\"Percentage\")\nfor rect in ax.patches:\n    ax.text(rect.get_width(), rect.get_y() + rect.get_height() \/ 2,\"%.1f%%\"% rect.get_width() )","1125ec03":"plt.figure(figsize=(10,8))\nsns.countplot(order=match_df['player_of_match'].value_counts()[:10].index, data=match_df, y=\"player_of_match\")\nplt.title(\"Man of the Match Award\")","9ce379a1":"fig, ax=plt.subplots(figsize=(10,10))\nsns.countplot(y='city',ax=ax, data=match_df)","d0bef671":"prob=match_df['toss_winner']==match_df['winner']\nprob.groupby(prob).size()","17803353":"sns.countplot(prob)","efd441a2":"fig, ax=plt.subplots(figsize=(4,5))\nsns.countplot(x='result',ax=ax, data=match_df)","39ffd98a":"fig, ax=plt.subplots(figsize=(4,5))\nsns.countplot(x='is_wicket',ax=ax, data=ball_df)","d0d04339":"fig, ax=plt.subplots(figsize=(4,5))\nsns.countplot(x='total_runs',ax=ax, data=ball_df)","1c10a2df":"## Runs per ball","4ed97f4e":"# Exploratory Data Analysis","e9746b1f":"## Winning Percentage","19279336":"### Extra Runs","56cdd5b7":"## No. of Wicket taking balls","c667f620":"### Correlation Matrix","e4607b56":"# The shape and type of data in the dataset","dab9440b":"## Won toss and the Match","b8562aac":"## Man of the Match Wins","6c0b83b1":"## Missing Data","e7b6c162":"## Deciding Factor","79f24b96":"### Toss","178b5ca7":"# Importing Data","2ff07d62":"## Cities"}}