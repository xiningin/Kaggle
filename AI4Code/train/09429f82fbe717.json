{"cell_type":{"770a6655":"code","063a2c0f":"code","0a376411":"code","c717630b":"code","880d2432":"code","7a2e073e":"code","445252ec":"code","53a0baab":"code","94a18f2f":"code","6f8b1bcb":"code","811626c8":"code","3d8d765b":"code","656b024f":"code","b2b0ce66":"code","135c17f7":"markdown","4e1a8ca0":"markdown","d9692b4e":"markdown","68f8b8cb":"markdown"},"source":{"770a6655":"import pandas as pd \nimport numpy as np\nimport matplotlib.pylab as plt\nimport seaborn as sns\nimport warnings \nwarnings.simplefilter('ignore')","063a2c0f":"apps =pd.read_csv(\"..\/input\/goggle-play-data\/apps.csv\",engine='python')\napps.head()","0a376411":"apps.info()","c717630b":"# Cleaning and Converting column in appropriate data type\n\n#Cleaning\n\n#installs column [\"+\",\",\"] occuring (i.e 10,000+) \napps['Installs']=apps['Installs'].str.replace(\"+\",\"\")\napps['Installs']=apps['Installs'].str.replace(\",\",\"\")\n\napps.rename({\"Unnamed: 0\":\"index\"}, axis=\"columns\", inplace=True)\n\n#Price column in $ occur(i.e $4.00)\napps['Price']=apps['Price'].str.replace(\"$\",\"\")\n\n#Converting data type (object to numeric data)\napps['Installs']=apps['Installs'].astype(int)\napps['Price']=apps['Price'].astype(float)","880d2432":"apps.info()","7a2e073e":"# In This Analysis in Mostly We focus Below\ncolumns=[\"App\",\"Category\",\"Rating\",\"Size\",\"Installs\",\"Price\",\"Reviews\"]\n","445252ec":"#1.we need Analyze Category wise apps frequency\nUnique_Category = apps['Category'].unique()\nUnique_Category","53a0baab":"Frequency_Category = apps['Category'].value_counts().to_frame()  # Value_Count\nFrequency_Category.rename({\"Category\": \"count\"}, axis=1,inplace=True)\nFrequency_Category","94a18f2f":"\n#plot \n\nplt.figure(figsize=(12, 4))\nplt.bar(Frequency_Category.index,Frequency_Category['count'])\nplt.xticks(rotation=90)\nplt.title(\"Category vs Count\")\nplt.show()\n\n\n","6f8b1bcb":"#selecting useful colunmn \nless_performance=apps.loc[0:,['App','Rating','Price','Type','Installs','Reviews']].dropna() #here not count None value \n\nc1=less_performance['Rating']<3\nc2=less_performance['Type']=='Paid'\nless_performance=less_performance[c1 & c2 ]\n\n\n#Total Earning individiual app\nless_performance[\"Total_Earning\"]=less_performance['Price']*less_performance['Installs']\n\n\n# per rating public paid Money (i.e Here Below Table You See \"I am extremely Rich\" app  earn 131031$ per ratings so here\n# public Lost big ,public paid big amount this app get only 1 rate it's worst app)\n\nless_performance['per_rating_paid(by people)']=less_performance[\"Total_Earning\"]\/less_performance[\"Rating\"]\nless_performance.sort_values(by='per_rating_paid(by people)',ascending=False,inplace=True)\nless_performance","811626c8":"## ploting \nplt.figure(figsize=(12,5))\nplt.suptitle(\"App vs Paid(by People per rating)\")\n\n#plot 1\nplt.subplot(131) #subplot give us better Visualization\nless_performance1=less_performance[0:4]\nplt.bar(less_performance1['App'],less_performance1['per_rating_paid(by people)'])\nplt.xticks(rotation=90)\n\n#plot 2\nplt.subplot(132)\nless_performance2=less_performance[4:12]\nplt.bar(less_performance2['App'],less_performance2['per_rating_paid(by people)'])\nplt.xticks(rotation=90)\n\n#plot 3\nplt.subplot(133)\nless_performance3=less_performance[12:]\nplt.bar(less_performance3['App'],less_performance3['per_rating_paid(by people)'])\nplt.xticks(rotation=90)\n\nplt.show()","3d8d765b":"%matplotlib inline","656b024f":"plt.figure(figsize=(12,5))\nsns.boxplot('Type','Rating',data=apps) \n# sns.boxplot('Type','Rating',data=apps,showfliers=False) without  outliers\n# Below plot you can see paid app Median slightly up.mid 50 % paid app get 4.1 to 4.60  rating while free mid 50% app \n#get 4 to 4.5 ratings here outliers not include ","b2b0ce66":"plt.figure(figsize=(13,5))\nRate_Size=apps[apps['Size']<30].dropna() #None Value not Count\nsns.jointplot(data=Rate_Size,x='Rating', y='Size',kind='kde')\n# sns.boxplot(apps['Rating'],apps['Size'],showfliers=False)\nplt.xticks(rotation=90)\nplt.title(\"Rating Vs Size\")\nplt.show()\n# Here Below plot you can see  4 Mb to 10Mb size give us best Performance 4 to 4.5 Rates ","135c17f7":"<b> Now we Comapare rating between free and paid app via Boxplot<\/b>\n","4e1a8ca0":"<b> <h1>we need Analyze Category wise apps frequency  <\/h1><\/b>","d9692b4e":"<b> we need Analyze Ratings less 3 Rating and paid app(less_performance) <\/b>","68f8b8cb":"<b> <h1> Now we make plot Rating vs Size (bar) <\/h1><\/b>"}}