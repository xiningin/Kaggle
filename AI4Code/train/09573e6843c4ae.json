{"cell_type":{"4ed25a99":"code","dad49754":"code","8675afaa":"code","edbc1e58":"code","c6a4075a":"code","6ed46eb6":"code","ac802426":"markdown","3c820275":"markdown","faac2ca2":"markdown","7284daaa":"markdown","497b3e78":"markdown","8f34f064":"markdown"},"source":{"4ed25a99":"import pandas as pd\nimport numpy as np\nimport plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.graph_objs import *\nimport matplotlib.pyplot as plt\nimport seaborn as sns   \nfrom random import *\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)","dad49754":"df=pd.read_csv('..\/input\/DJ_Mag.csv')\ndf.drop(df.columns[0],axis=1,inplace=True)\ndf=df.dropna()\ndf=df.sort_values(by=\"Year\" , ascending=True)\ndf=df.reset_index(inplace=False)\ndf.drop(df.columns[0],axis=1,inplace=True) # Data cleaning and sorting finished","8675afaa":"## Line Plot###########################################################################\nfavdjs='Diplo','Skrillex','Major Lazer','Jack U','Calvin Harris','Avicii','Flume','Daft Punk'\nnames=[]\nfor i in range(len(favdjs)):\n    name='trace'+str(i)\n    #print(name)\n    names.append(name)\n    names[i]=go.Scatter(\n        x = df['Year'][df['DJ']==favdjs[i]],\n        y = df['Rank'][df['DJ']==favdjs[i]],\n        name=favdjs[i]\n        )\nlayout=dict(title='Ranking Changes of My Favorite Producers',\n            xaxis=dict(title='Year',zeroline=True),\n            yaxis=dict(title='Ranking',range=[100,0]),\n            )\nfig=dict(data=names,layout=layout)\nplotly.offline.iplot(fig, filename='line_plot.html')","edbc1e58":"## Bar Charts\nre=[] # Re-entry\nne=[] # New-entry\nnc=[] # No change\nnames=[] # Clear the trace name list\nfor i in range(2010,2018):\n    df0=list(df['Change'][df['Year']==i])\n    re.append(df0.count('Re-entry'))\n    ne.append(df0.count('New Entry'))\n    nc.append(df0.count('No change'))\ncates=['Re-entry','New Entry','No Change']\ncnt=[re,ne,nc]\nfor i in range(0,3):    \n    name='trace'+str(i)\n    names.append(name)\n    names[i]=go.Bar(\n        x = ['2010','2011','2012','2013','2014','2015','2016','2017'],\n        y = cnt[i],\n        name=cates[i]\n        )\nlayout=dict(title='Numbers of Re-entry, New Entry and No change',\n            xaxis=dict(title='Year',zeroline=True),\n            yaxis=dict(title='Number'),\n            )\nfig=dict(data=names,layout=layout)\nplotly.offline.iplot(fig, filename='bar_charts.html')","c6a4075a":"## Bubble Plot###########################################################################\nn=df['DJ'].unique()\nmsize=[]\nx0=[]\ny0=[]\ntxt=[]\nmsize0=[]\nfor i in n:\n    t=list(df['DJ']).count(i)\n    msize0.append(t)\n    msize.append(t*t\/3)\n    x0.append(np.random.randint(1, 100))\n    y0.append(np.random.randint(1, 100))\n    txt0=str(i)+'<br>Times:'+str(t)\n    txt.append(txt0)\n\ndf1=pd.DataFrame()\ndf1['Name']=n\ndf1['Times']=msize0\ntimes=[]\nfor x in range(len(df['DJ'])): \n    m=df1.loc[df1['Name']== df['DJ'][x],'Times'].iloc[0]\n    times.append(m)\ndf['Time']=times # New feature assed: times appeared on the chart\n\ntrace0 = go.Scatter(\n    x=x0,\n    y=y0,\n    mode='markers',\n    hoverinfo = 'text',\n    text=txt,\n    marker=dict(  \n        size=msize,\n        color=msize,\n        showscale=True\n    )\n)\nlayout=dict(title='Number of Times Entering the Chart',\n            xaxis=dict(autorange=True,\n                       showgrid=False,\n                       zeroline=False,\n                       showline=False,\n                       ticks='',\n                       showticklabels=False),\n            yaxis=dict(autorange=True,\n                       showgrid=False,\n                       zeroline=False,\n                       showline=False,\n                       ticks='',\n                       showticklabels=False)\n            )\nfig=dict(data=[trace0],layout=layout)\nplotly.offline.iplot(fig, filename='bubblechart-size')","6ed46eb6":"## Pie Plot###########################################################################\nrank1=df['DJ'][df['Rank']==1]\nlabel1=rank1.unique()\nlabel1=list(label1)\nrank1=list(rank1)\nvalue1=[]\nfor i in label1:\n    value1.append(rank1.count(i))\n\nrank2=df['DJ'][df['Rank']==2]\nlabel2=rank2.unique()\nlabel2=list(label2)\nrank2=list(rank2)\nvalue2=[]\nfor i in label2:\n    value2.append(rank2.count(i))\n\nrank3=df['DJ'][df['Rank']==3]\nlabel3=rank3.unique()\nlabel3=list(label3)\nrank3=list(rank3)\nvalue3=[]\nfor i in label3:\n    value3.append(rank3.count(i))\n\nfig = {\n  \"data\": [\n    {\n      \"values\": value1,\n      \"labels\": label1,\n      \"domain\": {\"x\": [0, .33]},\n      \"hoverinfo\":\"label+value\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    {\n      \"values\": value2,\n      \"labels\": label2,\n      \"textposition\":\"inside\",\n      \"domain\": {\"x\": [.34, .66]},\n      \"hoverinfo\":\"label+value\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    {\n      \"values\": value3,\n      \"labels\": label3,\n      \"domain\": {\"x\": [.67, 1]},\n      \"hoverinfo\":\"label+value\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    }],\n  \"layout\": {\n        \"title\":\"Who Wins Most?\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"No.1\",\n                \"x\": 0.13,\n                \"y\": 0\n            },\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"N0.2\",\n                \"x\": 0.51,\n                \"y\": 0\n            },\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"No.3\",\n                \"x\": 0.87,\n                \"y\": 0\n            }\n        ]\n    }\n}\nplotly.offline.iplot(fig, filename='donut')","ac802426":"**Introduction**\n\nThis script helps visualize DJ Mag 100 History Dataset with Plotly. The best thing about Plotly is that the plots are all interacitve! And I just wanted to mention that as an EDM fan, I am so lucky to witness the burgeon through the recent few years and I would like to see more data analysis of relative topics. ","3c820275":"And this pie plot shows who wins the first place, the second place and the third place respectively.","faac2ca2":"There are missing values in the dataset, so firstly I dropped the rows with any missing value.","7284daaa":"The first plot is a line plot showing how the ranking of my personal favorite producers changes. Some of them are well-established and some are relatively more recent.","497b3e78":"This exhibites how many times somebody's name has appeared on the charts. Colorscale was applied to make it even more clear to see who wins most. In a total of 14 years, some names have appeared 14 times! (The side bar only represents the size of the circles.)","8f34f064":"Also I analyzed the New-entries, Re-entries and No-changes. Previous to 2016, the number of new entries every year is around 20 and reduced to 15 or less afterward. However, the number of Re-entries and No-changes has increased, indicating that less new artists are getting into the charts. For those new producers seeking opportunities to be recognized, this is bad news."}}