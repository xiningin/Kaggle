{"cell_type":{"55bbab9a":"code","729ce923":"code","c079bcaf":"code","f3bff994":"code","344dd9ee":"code","1f1060a8":"code","487245a7":"code","50320c0e":"code","a55a08be":"code","9883a04e":"markdown","fa2a69da":"markdown","5d5a4589":"markdown","10ff5062":"markdown","c9e161a9":"markdown","486ca990":"markdown","783c4bf6":"markdown","33c18964":"markdown","33dfdaca":"markdown","e6d83b0e":"markdown","77cd8ad6":"markdown","6bf17c4e":"markdown"},"source":{"55bbab9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","729ce923":"import plotly.graph_objects as go\nfrom plotly.offline import iplot","c079bcaf":"data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","f3bff994":"data.head()","344dd9ee":"data.describe()","1f1060a8":"fig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['gender'],\n                        y=data['math score'],\n                        legendgroup='Math', scalegroup='Math', name='Math'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['gender'],\n                        y=data['reading score'],\n                        legendgroup='Reading', scalegroup='Reading', name='Reading'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['gender'],\n                        y=data['writing score'],\n                        legendgroup='Writing', scalegroup='Writing', name='writing'\n                        )\n             )\nfig.update_traces(box_visible=True, meanline_visible=True)\nfig.update_layout(violinmode='group',title={\n        'text': \"Scores by gender\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},  \n                  yaxis=dict(\n                            title='Scores',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Gender',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = 'plotly_dark'\n                  )\niplot(fig)","487245a7":"fig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['race\/ethnicity'],\n                        y=data['math score'],\n                        legendgroup='Math', scalegroup='Math', name='Math'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['race\/ethnicity'],\n                        y=data['reading score'],\n                        legendgroup='Reading', scalegroup='Reading', name='Reading'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['race\/ethnicity'],\n                        y=data['writing score'],\n                        legendgroup='Writing', scalegroup='Writing', name='writing'\n                        )\n             )\nfig.update_traces(box_visible=True, meanline_visible=True)\nfig.update_layout(violinmode='group',title={\n        'text': \"scores by race\/ethnicity\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},  \n                  yaxis=dict(\n                            title='scores',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Race\/ethnicity',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = 'plotly_dark'\n                  )\niplot(fig)","50320c0e":"fig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['parental level of education'],\n                        y=data['math score'],\n                        legendgroup='Math', scalegroup='Math', name='Math'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['parental level of education'],\n                        y=data['reading score'],\n                        legendgroup='Reading', scalegroup='Reading', name='Reading'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['parental level of education'],\n                        y=data['writing score'],\n                        legendgroup='Writing', scalegroup='Writing', name='writing'\n                        )\n             )\nfig.update_traces(box_visible=True, meanline_visible=True)\nfig.update_layout(violinmode='group',title={\n        'text': \"Scores by Parental level of education\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},  \n                  yaxis=dict(\n                            title='Scores',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Parental level of education',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = 'plotly_dark'\n                  )\niplot(fig)","a55a08be":"fig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['lunch'],\n                        y=data['math score'],\n                        legendgroup='Math', scalegroup='Math', name='Math'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['lunch'],\n                        y=data['reading score'],\n                        legendgroup='Reading', scalegroup='Reading', name='Reading'\n                        )\n             )\nfig.add_trace(go.Violin(x=data['lunch'],\n                        y=data['writing score'],\n                        legendgroup='Writing', scalegroup='Writing', name='writing'\n                        )\n             )\nfig.update_traces(box_visible=True, meanline_visible=True)\nfig.update_layout(violinmode='group',title={\n        'text': \"Scores by lunch\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},  \n                  yaxis=dict(\n                            title='Scores',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  xaxis=dict(\n                            title='Lunch',\n                            titlefont_size=16,\n                            tickfont_size=14),\n                  template = 'plotly_dark'\n                  )\niplot(fig)","9883a04e":"# Analyzing by lunch","fa2a69da":"# Analyzing by parental level of education","5d5a4589":"## as can be seen, the group E had better scores in all subjects and the group A had wrost scores in all subjects\nyou can always click on the legend to look at each subject individually.","10ff5062":"## ","c9e161a9":"## as can be seen, men had better scores in mathematics and women in reading and writing.\nyou can always click on the legend to look at each subject individually. ","486ca990":"# Loadind the data","783c4bf6":"# as can be seen, the standard lunch had better scores in all subjects\nyou can always click on the legend to look at each subject individually.","33c18964":"# analyzing scores by gender","33dfdaca":"## ","e6d83b0e":"## as can be seen, masters\u00b4s degree had better scores in all subjects and the wrost scores  vary between some college,associate\u00b4s degree, highschool and some high school\nyou can always click on the legend to look at each subject individually.","77cd8ad6":"# Analyzing by race\/ethnicity","6bf17c4e":"# importing the libraries\n"}}