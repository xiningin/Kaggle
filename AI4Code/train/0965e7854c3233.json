{"cell_type":{"d8dca84b":"code","e6159b48":"code","9d284651":"code","042f8072":"code","abdf7f25":"code","8cbfa8e2":"code","4eadd085":"code","7dec1fa9":"code","c2c0ea13":"code","dcbf2f6c":"code","9f114ee3":"code","f6c84ce6":"code","4c6350b0":"code","7385d101":"code","556223b1":"code","9f8501c6":"code","50e2de26":"code","37d2cd21":"code","25dd7a35":"code","487a52d3":"code","d045b8a2":"code","557a1505":"code","a1c9dbd9":"code","e86bf2e3":"markdown","d697d83a":"markdown","7e376bc0":"markdown","94f29118":"markdown","82ed0c42":"markdown","94dd2f08":"markdown","c738128a":"markdown","f80e716d":"markdown","908aa276":"markdown","21eece23":"markdown","a37aed08":"markdown","698b613c":"markdown","0f30d67d":"markdown"},"source":{"d8dca84b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6159b48":"df_train = pd.read_csv('..\/input\/daily-climate-time-series-data\/DailyDelhiClimateTrain.csv')","9d284651":"df_train.head(4)","042f8072":"df_test = pd.read_csv('..\/input\/daily-climate-time-series-data\/DailyDelhiClimateTest.csv')","abdf7f25":"df_test.head(6)","8cbfa8e2":"df_train.iloc[2]","4eadd085":"df_train.iloc[[5,4,3]]","7dec1fa9":"df_train[:3]","c2c0ea13":"df_train[(df_train.meantemp > 20) | (df_train.humidity < 60)].head(10)","dcbf2f6c":"df_train['meantemp'].value_counts().head(5).plot.bar(color=['#ff0000','#ff8e71','#ffba93','#9f5f80','#583d72'])","9f114ee3":"df_train['meantemp'].value_counts().sort_index().head(5).plot.bar(color=['#5B85AA','#F46036','#5B85AA','#5B85AA','#5B85AA'])","f6c84ce6":"df_train['meantemp'].value_counts().sort_index().head(20).plot.line()","4c6350b0":"df_train['meantemp'].value_counts().sort_index().head(20).plot.area()","7385d101":"df_train[df_train['meantemp'] < 10]['meantemp'].plot.hist()","556223b1":"df_train['wind_speed'].plot.hist(color='grey')","9f8501c6":"df_train[df_train['meantemp'] < 20].sample(100).plot.scatter(x='meantemp', y='wind_speed',color='#F46036')","50e2de26":"df_train[df_train['meantemp'] < 20].plot.scatter(x='meantemp', y='wind_speed',color='#F46036')","37d2cd21":"df_train[df_train['meantemp'] < 20].plot.hexbin(x='meantemp', y='wind_speed', gridsize=20) ","25dd7a35":"data1 = df_train.head(12)","487a52d3":"data = data1.groupby(['humidity']).mean()[['meantemp', 'wind_speed']]","d045b8a2":"data.plot.bar(stacked=True)","557a1505":"data.plot.line(stacked=True)","a1c9dbd9":"data.plot.area(stacked=True)","e86bf2e3":"**Similarly the data is fetched using the indexing so here @pos 5,4,3 in descending order it was fetched**","d697d83a":"**Here we import numpy,pandas and OS packages**","7e376bc0":"**KASHYAP SANTOKI MBA TECH CS Machine Learning C batch**","94f29118":"**First 6 row of the test data**","82ed0c42":"**Here we fetch data using slicing operator**","94dd2f08":"**Fisrt 4 rows of the training data**","c738128a":"**We are using the logical operator to fetch the operator**","f80e716d":"**Here the data is so much so we are going to use head function to selected first 12 data**","908aa276":"**Test Data is readed**","21eece23":"> *This is line chart is for first 20 data of meantemp available in training dataset*","a37aed08":"**Here Data is fetch using the indexing i.e At pos 2 the data is showned**","698b613c":"Temperature is selected as below 10","0f30d67d":"**Training Data is readed**"}}