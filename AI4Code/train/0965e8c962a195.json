{"cell_type":{"1cfd8e18":"code","74fce47d":"code","02fdfd4c":"code","c4cb742f":"code","07b2dfaa":"code","96b25a3c":"code","668983b3":"code","a1fea1dd":"code","671104bf":"code","6d22ea9c":"code","87ffd038":"code","66137d71":"code","5d180862":"code","d022ef70":"code","3e7925b8":"code","d093d3a1":"code","930ed613":"code","10b0b5f8":"markdown","44d29992":"markdown","f5d9f9d0":"markdown","b1eb8df0":"markdown","a6ef064c":"markdown","e3f5dfb2":"markdown","ea9b1433":"markdown","45683ae1":"markdown","bab40934":"markdown","f599c6ea":"markdown","8b45dc05":"markdown","df71a542":"markdown","cc333467":"markdown"},"source":{"1cfd8e18":"import numpy as np\n\nfrom tensorflow import random\n\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPool2D, Flatten, Dense\nfrom keras.preprocessing import image\nfrom keras.preprocessing.image import ImageDataGenerator","74fce47d":"seed = 1\nnp.random.seed(seed)\nrandom.set_seed(seed)","02fdfd4c":"classifier = Sequential()","c4cb742f":"classifier.add(Conv2D(filters=32, kernel_size=(3, 3), input_shape=(64, 64, 3), activation='relu'))\n\nclassifier.add(MaxPool2D(2, 2))\n\nclassifier.add(Flatten())\n\nclassifier.add(Dense(128, activation='relu'))\n\nclassifier.add(Dense(1, activation='sigmoid'))","07b2dfaa":"classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","96b25a3c":"train_datagen = ImageDataGenerator(rescale=1.\/255,\n                                     shear_range=0.2,\n                                     zoom_range=0.2,\n                                     horizontal_flip=True)\n\ntest_datagen = ImageDataGenerator(rescale=1.\/255)","668983b3":"training_set = train_datagen.flow_from_directory('..\/input\/cars-vs-flowers\/dataset\/cars_vs_flowers\/training_set',\n                                                target_size=(64,64),\n                                                batch_size=32,\n                                                class_mode='binary')\n\ntest_set = test_datagen.flow_from_directory('..\/input\/cars-vs-flowers\/dataset\/cars_vs_flowers\/test_set',\n                                                target_size=(64,64),\n                                                batch_size=32,\n                                                class_mode='binary')","a1fea1dd":"classifier.fit_generator(training_set,\n               epochs=10,\n               steps_per_epoch=2000 \/\/ 32,\n               validation_data=test_set,\n               validation_steps=2000 \/\/ 32,\n               shuffle=False     \n              )","671104bf":"new_image = image.load_img('..\/input\/cars-vs-flowers\/car_test_image.jpg',\n                          target_size=(64, 64))\nnew_image","6d22ea9c":"training_set.class_indices","87ffd038":"new_image = image.img_to_array(new_image) # (64, 64, 3)\nnew_image = np.expand_dims(new_image, axis=0) # (1, 64, 64, 3)","66137d71":"result = classifier.predict(new_image)\nresult","5d180862":"if result[0][0] == 1:\n    print('Flower')\nelse:\n    print('Car')","d022ef70":"new_image_2 = image.load_img('..\/input\/cars-vs-flowers\/flower_test_image.jpg',\n                            target_size=(64,64))\n\nnew_image_2","3e7925b8":"new_image_2 = image.img_to_array(new_image_2)\nnew_image_2 = np.expand_dims(new_image_2, axis=0)","d093d3a1":"result = classifier.predict(new_image_2)","930ed613":"if result[0][0] == 1:\n    print('Flower')\nelse:\n    print('Car')","10b0b5f8":"## Define seed","44d29992":"## Data generator","f5d9f9d0":"## Training and test datasets","b1eb8df0":"# Simple model","a6ef064c":"### Flower","e3f5dfb2":"## Model architecture","ea9b1433":"## Compile","45683ae1":"## Libraries","bab40934":"This is a simple notebook designed to test the dataset **cars_vs_flowes**.","f599c6ea":"## Model","8b45dc05":"## Classifying a new image","df71a542":"### Car","cc333467":"## Fit"}}