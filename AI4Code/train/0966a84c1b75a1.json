{"cell_type":{"be132ab9":"code","ab49f223":"code","65bbd077":"code","a450420a":"code","33728cde":"code","69a1507d":"code","1b42feea":"code","470fd370":"code","28d98a48":"code","6e2957cf":"code","1f4b3ae8":"code","1e9c0e5e":"code","616f0282":"code","94dcddc5":"code","7c0812b5":"code","955fafa4":"code","0ac25425":"code","e305546b":"code","39a697b7":"code","8d48b594":"code","4a08d48f":"code","e6ea1387":"code","910cb44f":"code","45d9214c":"code","18a5a80e":"code","533c181a":"code","d999b0b9":"code","21bfc6e7":"code","873ff39f":"code","cd0a2a54":"code","488486c9":"markdown","40d7b8cd":"markdown","17d05f72":"markdown","532c2a12":"markdown","cf5a6586":"markdown","9274b66a":"markdown","7c2c9101":"markdown","f676f3bb":"markdown","63bd2528":"markdown","e48b83a3":"markdown","65cc49bf":"markdown","9f37e435":"markdown","080c922d":"markdown","feb63e71":"markdown","e1e3034c":"markdown","e8ac0438":"markdown","3e17065a":"markdown","75e1504c":"markdown","5ff9d98d":"markdown","d6070bd4":"markdown"},"source":{"be132ab9":"# Import Python packages\nimport numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\n\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport plotly.plotly as py\ninit_notebook_mode(connected=True)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_columns', 5000)\nsns.set(style=\"whitegrid\")","ab49f223":"Responce = pd.read_csv('..\/input\/kaggle-survey-2018\/freeFormResponses.csv').loc[1:, :]\nMultipleResponce = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv').loc[1:, :]\nSurveySchema = pd.read_csv('..\/input\/kaggle-survey-2018\/SurveySchema.csv').loc[1:, :]\nMultipleResponce_tmp = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')","65bbd077":"MultipleResponce['Q9_avg'] = MultipleResponce['Q9'].apply(lambda x: 5 if x == '0-10,000'\n                            else (15 if x == '10-20,000' else (25 if x == '20-30,000' else (35 if x == '30-40,000' \n                            else (45 if x == '40-50,000' else (55 if x == '50-60,000' else (65 if x == '60-70,000' \n                            else (75 if x == '70-80,000' else (85 if x == '80-90,000' else (95 if x == '90-100,000' \n                            else (112 if x == '100-125,000' else (137 if x == '125-150,000' else (175 if x == '150-200,000' \n                            else (225 if x == '200-250,000' else (275 if x == '250-300,000' else (400 if x == '300-400,000' \n                            else (450 if x == '400-500,000' else (500 if x == '500,000+' else 0)\n                            ))))))))))))))))) #.value_counts()\nMultipleResponce['Q2_avg'] = MultipleResponce['Q2'].apply(lambda x: 20 if x == '18-21'\n                            else (23 if x == '22-24' else (27 if x == '25-29' else (32 if x == '30-34' \n                            else (37 if x == '35-39' else (42 if x == '40-44' else (47 if x == '45-49' \n                            else (55 if x == '50-59' else (65 if x == '60-79' else (75 if x == '70-79' \n                            else (80 if x == '80+' else 30)\n                            ))))))))))\nMultipleResponce['Q8_avg'] = MultipleResponce['Q8'].apply(lambda x: 1 if x == '0-1'\n                            else (2 if x == '1-2' else (5 if x == '5-10' else (3 if x == '2-3' \n                            else (4 if x == '3-4' else (15 if x == '10-15' else (5 if x == '4-5' \n                            else (20 if x == '15-20' else (25 if x == '20-25' else (30 if x == '30 +' \n                            else (99 if x == '25-30' else 0)\n                            ))))))))))\nMultipleResponce['Q24_avg'] = MultipleResponce['Q24'].apply(lambda x: 2 if x == '1-2 years'\n                            else (5 if x == '3-5 years' else (1 if x == '< 1 year' else (10 if x == '5-10 years' \n                            else (20 if x == '10-20 years' else (0 if x == 'I have never written code' else (30 if x == '20-30 years' \n                            else (99 if x == '30+ ' else 0)\n                            )))))))\nMultipleResponce['Q25_avg'] = MultipleResponce['Q25'].apply(lambda x: 1 if x == '< 1 year'\n                            else (2 if x == '1-2 years' else (3 if x == '2-3 years' else (4 if x == '3-4 years' \n                            else (10 if x == '5-10 years' else (5 if x == '4-5 years' else (15 if x == '10-15 years' \n                            else (20 if x == '20+ years' else (0 if x == 'I have never studied machine learning but plan to learn in the future'\n                            else (-1 if x == 'I have never studied machine learning and I do not plan to' else 0)\n                            )))))))))\nMultipleResponce['Q2'] = MultipleResponce['Q2'].apply(lambda x: '50-59' if x in ['50-54','55-59']\n                            else ('60+' if x in ['60-69','70-79','80+'] else x ))\nMultipleResponce['Q3'] = MultipleResponce['Q3'].apply(lambda x: 'Hong Kong' if x == 'Hong Kong (S.A.R.)'\n                            else ('Iran' if x == 'Iran, Islamic Republic of...'\n                            else ('United Kingdom' if x == 'United Kingdom of Great Britain and Northern Ireland'\n                            else ('United States' if x == 'United States of America'\n                            else ('Vietnam' if x == 'Viet Nam'\n                            else ('Other' if x == 'I do not wish to disclose my location'       \n                            else x\n                            )))))) \nMultipleResponce['Q4'] = MultipleResponce['Q4'].apply(lambda x: 'High school' if x == 'No formal education past high school'\n                            else ('High school' if x == 'Some college\/university study without earning a bachelor\u2019s degree'\n                            else x\n                            ))\nMultipleResponce['Q9'] = MultipleResponce['Q9'].apply(lambda x: 'Do not want to say' if x == 'I do not wish to disclose my approximate yearly compensation'\n                            else x\n                            )\nMultipleResponce['Q10_new'] = MultipleResponce['Q10'].apply(lambda x: 'We are exploring ML methods' if x == 'We are exploring ML methods (and may one day put a model into production)'\n                            else ('We are exploring ML methods' if x == 'We use ML methods for generating insights (but do not put working models into production)'\n                            else x\n                            ))\n","a450420a":"def prep_data(df, group_col, target):\n    data = df.copy()\n    data = pd.DataFrame(data.groupby([group_col])[target].agg(['size','mean','sum']))\n    data['mean'] = np.round(data['mean'],1)\n    data = data.reset_index()\n    data.columns = ['val', 'cnt', 'mean','sum']\n    return data.sort_values(by = 'mean', ascending=False)","33728cde":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q9', 'Q9_avg')\ndata['cnt'] = np.round(100*data['cnt']\/data['cnt'].sum(),1)\n\nsns.set(rc={'figure.figsize':(12,7)}, style=\"whitegrid\")\nax = sns.barplot(x='cnt', y='val', data=data, \n                 order=['Do not want to say', \n                        '0-10,000', '10-20,000', '20-30,000', '30-40,000', '40-50,000', '50-60,000', '60-70,000',  '70-80,000', '80-90,000','90-100,000',\n                        '100-125,000', '125-150,000', '150-200,000', '200-250,000', '250-300,000', '300-400,000', '400-500,000', '500,000+'], \n                 palette=np.array(['#dc0000', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'\n                                   , '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'])            \n                )\nax.set_title(\"Yearly salary in $USD\",fontsize=16,weight='bold')\nax.set_xlabel(\"Percentage %\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nax.text(15, 4, 'Jedna na cztery osoby\\nnie chce zdradzi\u0107 swoich zarobk\u00f3w', ha='left', fontsize=14, color = '#dc0000')\n#, ha=\"left\", va=\"center\", size=10, bbox=dict(boxstyle=\"square\", fc=\"w\")\nsns.despine(offset=10, trim=True)\n\nplt.show()\n","69a1507d":"MultipleResponce = MultipleResponce[MultipleResponce['Q9'] != 'Do not want to say']","1b42feea":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q9', 'Q9_avg')\ndata['sum'] = data['sum'] \/1000\nplt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='sum', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'\n                                    , '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000'])                )\nax.set_title(\"Yearly income for whole group\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ MILLION\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nax.text(35, 0.6, '63 osoby zarobi\u0142y \\nko\u0142o 31.5 million\u00f3w $', ha='left', fontsize=16, color = '#00cc00')\nax.text(35, 17.5, '4.400 os\u00f3b (28%) zarobi\u0142o \\noko\u0142o 22 million\u00f3w $', ha='left', fontsize=16, color = '#dc0000')\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'\n                                    , '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000'])\n                )\nax.set_title(\"Number of people by yearly income\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.text(900,9, '63 najbohatszych os\u00f3b zarobi\u0142o tyle\\nile zarobi\u0142oby oko\u0142o 6,300 os\u00f3b \\nnajmniej zarabiaj\u0105cych', ha='left', fontsize=16, color = 'black')\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","470fd370":"data = prep_data(pd.DataFrame(MultipleResponce.fillna('Not employed')), 'Q6', 'Q9_avg')\nMultipleResponce['Q6'] = MultipleResponce['Q6'].apply(lambda x: 'Other' if x in data[data['cnt'] < 100]['val'].unique() else x)\ndata = prep_data(pd.DataFrame(MultipleResponce.fillna('Not employed')), 'Q6', 'Q9_avg')","28d98a48":"plt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#00cc00','#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'\n                                   , '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000'])\n                )\nax.set_title(\"Yearly income ($ k) by current job\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nax.text(40, 15, 'Wi\u0119cej ni\u017c 5.300 os\u00f3b(28%) \\ns\u0105 studentami lub bezrobotni', ha='left', fontsize=16, color = '#dc0000')\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                 palette=np.array(['#00cc00', '#00cc00','#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'\n                                   , '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000'])\n                )\nax.set_title(\"Number of people by current job\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.text(600,1.5, 'Osoby zarz\u0105dzaj\u0105ce lud\u017ami lub \\nproduktami s\u0105 najlepiej op\u0142acani(6%)', ha='left', fontsize=16, color = '#00cc00')\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","6e2957cf":"MultipleResponce = MultipleResponce[MultipleResponce['Q6'] != 'Student']\nMultipleResponce = MultipleResponce[MultipleResponce['Q6'] != 'Not employed']\nMultipleResponce = MultipleResponce[MultipleResponce['Q7'] != 'I am a student']\nMultipleResponce = MultipleResponce[MultipleResponce['Q9_avg'] != 0]\n\nconst_mean = round(MultipleResponce['Q9_avg'].mean(),1)\nconst_median = round(MultipleResponce['Q9_avg'].median(),1)\n\n#print(const_mean)\n#print(const_median)","1f4b3ae8":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q2', 'Q9_avg')\n\nplt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8', '#dc0000'])            \n                )\nax.set_title(\"Yearly income ($ k) by age\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"Age group\", fontsize=12)\nax.text(80, 6.3, 'The largest group are people \\nafter graduation starting \\nwith their careers (29%)', ha='left', fontsize=16, color = '#1245ff')\nax.text(60, 3.3, 'Perfect income dependence', ha='left', rotation = '52', fontsize=16, color = 'black')\n\nax.annotate(\"\",\n            xy=(130, 0.1), xycoords='data',\n            xytext=(30, 8), textcoords='data',\n            arrowprops=dict(arrowstyle=\"fancy\", \n                            color=\"0.5\",\n                            patchB=0,\n                            shrinkB=20,\n                            connectionstyle=\"arc3,rad=0.0\",\n                            ),\n            )\n\n\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8', '#dc0000'])  \n                )\n\n\nax.set_title(\"Number of people by age\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","1e9c0e5e":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q8', 'Q9_avg')\n\nplt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000', '#dc0000'])            \n                )\nax.set_title(\"Yearly income by work experience (in years)\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"Work experience is years\", fontsize=12)\nax.text(67, 3.5, 'Perfect income dependence', ha='left', rotation = '56', fontsize=16, color = 'black')\n\nax.annotate(\"\",\n            xy=(145, 0.1), xycoords='data',\n            xytext=(45, 10), textcoords='data',\n            arrowprops=dict(arrowstyle=\"fancy\", \n                            color=\"0.5\",\n                            patchB=0,\n                            shrinkB=2,\n                            connectionstyle=\"arc3,rad=0.0\",\n                            ),\n            )\n\n\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000', '#dc0000'])\n                )\n\nax.text(1200, 4.3, 'Pierwsza wi\u0119ksza fala prekursor\u00f3w \\nw uczeniu maszynowym sprzed 2014 roku', ha='left', fontsize=16, color = '#1245ff')\nax.text(1200, 7.3, 'Coraz wi\u0119cej os\u00f3b zaczyna zajmowa\u0107 sie \\ndanymi z roku na rok', ha='left', fontsize=16, color = '#dc0000')\nax.annotate(\"\",\n            xy=(2700, 10), xycoords='data',\n            xytext=(1600, 8), textcoords='data',\n            arrowprops=dict(arrowstyle=\"fancy\", \n                            color=\"0.5\",\n                            patchB=0,\n                            shrinkB=2,\n                            connectionstyle=\"arc3,rad=-0.3\",\n                            ),\n            )\nax.text(2200, 8.2, '+ 50% !', ha='left', fontsize=16, rotation = -35, color = '#dc0000', weight='bold')\n\nax.set_title(\"Number of people by work experience  (in years)\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","616f0282":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q26', 'Q9_avg')\n\nplt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'])\n                )\n#ax.text(15, 2, 'The first large group of ML precursors \\nfrom before 2014', ha='left', fontsize=16, color = '#1245ff')\nax.set_title(\"Do you consider yourself to be a data scientist?\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'])\n                )\n\nax.set_title(\"Do you consider yourself to be a data scientist?\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","94dcddc5":"data = prep_data(pd.DataFrame(MultipleResponce), 'Q4', 'Q9_avg')\n\nplt.subplots(1, 2, figsize = (18, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000'])            \n                )\nax.set_title(\"Yearly income ($ k) by education\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\n\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                palette=np.array(['#00cc00', '#c8c8c8','#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000'])   \n                )\n\nax.set_title(\"Number of people by education\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","7c0812b5":"data = prep_data(pd.DataFrame(MultipleResponce.fillna('No information')), 'Q37', 'Q9_avg')\nMultipleResponce['Q37'] = MultipleResponce['Q37'].apply(lambda x: 'Other' if x in data[data['cnt'] < 100]['val'].unique() else x)\ndata = prep_data(pd.DataFrame(MultipleResponce.fillna('No information')), 'Q37', 'Q9_avg')","955fafa4":"MultipleResponce['Q37'] = MultipleResponce['Q37'].apply(lambda x: 'University Courses' if x == 'Online University Courses'\n                            else x\n                            )\n\ndata = prep_data(pd.DataFrame(MultipleResponce.fillna('No information')), 'Q37', 'Q9_avg')\n\nplt.subplots(1, 2, figsize = (20, 9), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(1, 2, 1)\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8','#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000'])            \n                )\nax.set_title(\"Yearly income ($ k) by online education\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nax.text(55, 8.6, 'Dlaczego???', ha='left', fontsize=16, color = '#dc0000')\n\nsns.despine(offset=10, trim=True)\n\nplt.subplot(1, 2, 2)\nax = sns.barplot(x='cnt', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff', '#c8c8c8','#c8c8c8', '#c8c8c8', '#dc0000', '#dc0000'])            \n                )\n\nax.text(3000, 3.2, 'Co druga osoba nie poda\u0142a \\n\u017cadnej informacji...', ha='left', fontsize=16, color = '#1245ff')\nax.text(3000, 5.2, '...ale oznacza to, \u017ce a\u017c 50%\\nuczy si\u0119 online!', ha='left', fontsize=16, color = '#1245ff')\n\nax.set_title(\"Number of people by online education\",fontsize=18,weight='bold')\nax.set_xlabel(\"Number of people from the survey\",fontsize=12)\nax.set_ylabel(\"Online platforms\", fontsize=12)\nsns.despine(offset=10, trim=True)","0ac25425":"data = prep_data(pd.DataFrame(MultipleResponce.fillna('No information')), 'Q37', 'Q2_avg')\nsns.set(rc={'figure.figsize':(12,7)}, style=\"whitegrid\")\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#c8c8c8', '#00cc00','#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#1245ff'\n                                   , '#dc0000', '#dc0000'])            \n                )\n\nax.set_title(\"Avarage age by online education\",fontsize=16,weight='bold')\nax.set_xlabel(\"Avarage age\",fontsize=12)\nax.set_ylabel(\"Online platforms\", fontsize=12)\nsns.despine(offset=10, trim=True)\n\nplt.show()","e305546b":"data = prep_data(pd.DataFrame(MultipleResponce.fillna('I do not know')), 'Q10_new', 'Q9_avg')\n\nax = sns.barplot(x='mean', y='val', data=data, \n                 palette=np.array(['#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#dc0000'])            \n                )\nax.set_title(\"Yearly income ($ k) by company usage of ML methods\",fontsize=18,weight='bold')\nax.set_xlabel(\"Yearly income in $ thousands\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nax.text(45, 4.2, 'Mo\u017ce nied\u0142ugo te firmy obudz\u0105 si\u0119 \\nz zimowego snu', ha='left', fontsize=16, color = '#dc0000')\n\nsns.despine(offset=10, trim=True)\n","39a697b7":"# download data with country name 4 hole world\nall_country = pd.read_csv('..\/input\/survey-data\/2014_world_gdp_with_codes.csv')\nall_country.columns = ['country', 'mean', 'CODE']\nall_country = all_country[['country', 'mean']]\nall_country['mean'] = 0\n\nlocations = pd.DataFrame(MultipleResponce.groupby(['Q3'])['Q9_avg'].agg(['mean']))\nlocations['mean'] = np.round(locations['mean'],0)\nlocations = locations.reset_index()\nlocations.columns = ['country', 'mean']\nlocations = locations.sort_values(by = 'country', ascending=True)\nlocations.head()\n\nlocations = pd.merge(all_country, locations, how='left', on='country', sort=True).fillna(0)\nlocations = locations.drop(columns=['mean_x'])\nlocations.columns = ['country', 'mean']\n\ndata = [ dict(\n        type = 'choropleth',\n        locations = locations['country'],\n        locationmode = 'country names',\n        z = locations['mean'],\n        text = locations['country'],\n        colorscale = [[0,\"rgb(235, 0, 0)\"],[0.5,\"rgb(235, 235, 0)\"],[1,\"rgb(220, 220, 220)\"]],\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '$',\n            title = 'Avarage yearly salary in $'),\n      ) ]\n\nlayout = dict(\n    title = '<b>Avarage yearly salary in $<\/b>',\n    geo = dict(\n        showframe = False,\n        showcoastlines = False,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\niplot( fig, validate=False, filename='d3-world-map' )","8d48b594":"BigMacIndex = pd.read_csv('..\/input\/bigmacindex\/BigMacIndex.csv')\nBigMacIndex = BigMacIndex[BigMacIndex['date'] == '2018-07-01']\nBigMacIndex.rename(columns={'name':'Q3'}, inplace=True)\nBigMacIndex['Q3'] = BigMacIndex['Q3'].apply(lambda x: 'United Kingdom' if x == 'Britain'\n                            else x)\nBigMacIndex['BigMacIndex'] = BigMacIndex['local_price']\/BigMacIndex['dollar_ex']\nBigMacIndex = BigMacIndex[['Q3','BigMacIndex']]\n\nBigMacIndex.sort_values(by='BigMacIndex').head()\n\nMultipleResponce = pd.merge(MultipleResponce, BigMacIndex, left_index=False, right_index=False, how='left')\nMultipleResponce['BigMacIndex'] = MultipleResponce['BigMacIndex'].fillna(MultipleResponce['BigMacIndex'].mean())\n\nMultipleResponce['Q9_BigMacDaily'] = (1000*MultipleResponce['Q9_avg']\/365)\/MultipleResponce['BigMacIndex']","4a08d48f":"locations = pd.DataFrame(MultipleResponce.groupby(['Q3'])['Q9_BigMacDaily'].agg(['mean']))\nlocations['mean'] = np.round(locations['mean'],0)\nlocations = locations.reset_index()\nlocations.columns = ['country', 'mean']\nlocations = locations.sort_values(by = 'country', ascending=True)\n\nlocations = pd.merge(all_country, locations, how='left', on='country', sort=True).fillna(0)\nlocations = locations.drop(columns=['mean_x'])\nlocations.columns = ['country', 'mean']\n\ndata = [ dict(\n        type = 'choropleth',\n        locations = locations['country'],\n        locationmode = 'country names',\n        z = locations['mean'],\n        text = locations['country'],\n        colorscale = [[0,\"rgb(235, 0, 0)\"],[0.5,\"rgb(235, 235, 0)\"],[1,\"rgb(235, 235, 235)\"]],\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '',\n            title = 'Daily salary in BiG Macs'),\n      ) ]\n\nlayout = dict(\n    title = '<b>Avarage daily salary in Big Macs <\/b>',\n    geo = dict(\n        showframe = False,\n        showcoastlines = False,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\ntmp = iplot( fig, validate=False, filename='d3-world-map' )","e6ea1387":"from lightgbm import LGBMClassifier\nfrom sklearn.metrics import roc_auc_score, roc_curve\nfrom sklearn.model_selection import KFold, StratifiedKFold, train_test_split\nimport matplotlib.pyplot as plt\nimport gc\n\ndef one_hot_encoder(df, nan_as_category = True):\n    original_columns = list(df.columns)\n    categorical_columns = [col for col in df.columns if df[col].dtype == 'object']\n    df = pd.get_dummies(df, columns= categorical_columns, dummy_na= nan_as_category)\n    new_columns = [c for c in df.columns if c not in original_columns]\n    return df, new_columns\n\ndef kfold_lightgbm(df, num_folds, stratified = False, debug= False, n_estimators=1000, max_depth=4, early_stopping_rounds=100,\n                  num_leaves = 16, learning_rate = 0.02, reg_alpha = 0.04, reg_lambda = 0.07, subsample = 0.85,\n                  colsample_bytree = 1.0, min_split_gain = 0.02, min_child_weight = 40,\n                  min_child_samples = 20, min_data_in_leaf = 20):\n    # Divide in training\/validation and test data\n    #train_df = df[df['TARGET'].notnull()]\n    #test_df = df[df['TARGET'].isnull()]\n    train_df, test_df = train_test_split(df,test_size=0.2, random_state=2018)\n    print(\"Starting LightGBM. Train shape: {}, test shape: {}\".format(train_df.shape, test_df.shape))\n    del df\n    gc.collect()\n    # Cross validation model\n    if stratified:\n        folds = StratifiedKFold(n_splits= num_folds, shuffle=True, random_state=2018)\n    else:\n        folds = KFold(n_splits= num_folds, shuffle=True, random_state=2018)\n    # Create arrays and dataframes to store results\n    oof_preds = np.zeros(train_df.shape[0])\n    sub_preds = np.zeros(test_df.shape[0])\n    \n    sub_preds_train = np.zeros(train_df.shape[0])\n    \n    feature_importance_df = pd.DataFrame()\n    feats = [f for f in train_df.columns if f not in ['TARGET']]\n    \n    for n_fold, (train_idx, valid_idx) in enumerate(folds.split(train_df[feats], train_df['TARGET'])):\n        train_x, train_y = train_df[feats].iloc[train_idx], train_df['TARGET'].iloc[train_idx]\n        valid_x, valid_y = train_df[feats].iloc[valid_idx], train_df['TARGET'].iloc[valid_idx]\n\n        # LightGBM parameters found by Bayesian optimization\n        clf = LGBMClassifier(\n            n_jobs = 4,\n            n_estimators = n_estimators, \n            learning_rate = learning_rate, \n            num_leaves = num_leaves, \n            subsample = subsample, \n            colsample_bytree = colsample_bytree,\n            max_depth = max_depth, \n            reg_alpha = reg_alpha, \n            reg_lambda = reg_lambda, \n            min_split_gain = min_split_gain, \n            min_child_weight = min_child_weight, \n            min_child_samples = min_child_samples,\n            min_data_in_leaf = min_data_in_leaf,\n            silent = -1,\n            verbose = -1, )\n\n        clf.fit(train_x, train_y, eval_set=[(train_x, train_y), (valid_x, valid_y)], \n            eval_metric= 'auc', verbose= 100, early_stopping_rounds= early_stopping_rounds)\n\n        oof_preds[valid_idx] = clf.predict_proba(valid_x, num_iteration=clf.best_iteration_)[:, 1]\n        sub_preds += clf.predict_proba(test_df[feats], num_iteration=clf.best_iteration_)[:, 1] \/ folds.n_splits\n        sub_preds_train += clf.predict_proba(train_df[feats], num_iteration=clf.best_iteration_)[:, 1] \/ folds.n_splits\n        \n        fold_importance_df = pd.DataFrame()\n        fold_importance_df[\"feature\"] = feats\n        fold_importance_df[\"importance\"] = clf.feature_importances_\n        fold_importance_df[\"fold\"] = n_fold + 1\n        feature_importance_df = pd.concat([feature_importance_df, fold_importance_df], axis=0)\n        print('Fold %2d AUC : %.6f' % (n_fold + 1, roc_auc_score(valid_y, oof_preds[valid_idx])))\n         \n        del clf, train_x, train_y, valid_x, valid_y\n        gc.collect()\n\n    print('Full AUC score %.6f' % roc_auc_score(train_df['TARGET'], oof_preds))\n    fpr, tpr, _ = roc_curve(train_df['TARGET'], oof_preds)\n\n    #display_importances(feature_importance_df)\n    return feature_importance_df, fpr, tpr, roc_auc_score(train_df['TARGET'], oof_preds)\n\n# Display\/plot feature importance\ndef display_importances(feature_importance_df_):\n    cols = feature_importance_df_[[\"feature\", \"importance\"]].groupby(\"feature\").mean().sort_values(by=\"importance\", ascending=False)[:10].index\n    best_features = feature_importance_df_.loc[feature_importance_df_.feature.isin(cols)]\n    plt.figure(figsize=(8, 10))\n    sns.barplot(x=\"importance\", y=\"feature\", data=best_features.sort_values(by=\"importance\", ascending=False))\n    plt.title('LightGBM Features (avg over folds)')\n    plt.tight_layout()\n    #plt.savefig('lgbm_importances01.png')","910cb44f":"probka = MultipleResponce.copy()\nprobka['TARGET'] = probka['Q9_BigMacDaily'].apply(lambda x: 1 if x >= 60 else 0)\nprobka['Time from Start to Finish (seconds)'] = probka['Time from Start to Finish (seconds)'].astype('int64')\n\nchar_list = []\nout_list = []\n\nfor c in probka.columns:\n    if (\"OTHER\" in c) or (\"TEXT\" in c) or (\"Q34\" in c) or (\"Q35\" in c) or (c in ['Q9','Q9_avg','Q9_BigMacDaily','BigMacIndex', 'Q47_Part_16', 'Q2', 'Time from Start to Finish (seconds)']):\n        out_list.append(c)\n    else:\n        char_list.append(c)     \n\nprobka = probka[char_list]\n\n# Categorical features with One-Hot encode\nprobka, cat_cols = one_hot_encoder(probka, False) ","45d9214c":"feats1 = [f for f in probka.columns]\nfeat_importance1, fpr1, tpr1, roc_score1  = kfold_lightgbm(probka[feats1], num_folds= 4, stratified= False, debug= False, n_estimators = 1000, early_stopping_rounds = 50)\n\ntmp1 = feat_importance1.groupby(['feature'])['importance'].agg(['mean','sum', 'max'])","18a5a80e":"tmp1.sort_values(by = 'mean', ascending = False).head(10)","533c181a":"feats2 = [f for f in probka.columns if ('Q3' not in f)]\nfeat_importance2, fpr2, tpr2, roc_score2 = kfold_lightgbm(probka[feats2], num_folds= 4, stratified= False, debug= False, n_estimators = 1000, early_stopping_rounds = 50)\n\ntmp2 = feat_importance2.groupby(['feature'])['importance'].agg(['mean','sum', 'max'])","d999b0b9":"tmp2.sort_values(by = 'mean', ascending = False).head(10)","21bfc6e7":"f1 = tmp1.sort_values(by = 'mean', ascending = False).head(10)\nf2 = tmp2.sort_values(by = 'mean', ascending = False).head(10)\n\nindex1 = pd.Index(['Q8_Years of experience','Q2_Age', 'Q3_Live in USA', 'Q24_Expirience in writing code to analyze data', 'Q7_Academics education'\n             ,'Q13_Use Notepad++','Q10_We have well established ML methods','Q42_Important is revenue and business goals'\n             , 'Q25_How many years have you used machine learning methods','Q11_My role: Build prototypes to explore applying ML to new areas'])\nf1 = f1.set_index(index1, inplace = False)\n\nindex2 = pd.Index(['Q8_Years of experience','Q2_Age', 'Q24_Expirience in writing code to analyze data', 'Q7_Academics education'\n             ,'Q13_Use Notepad++', 'Q25_How many years have you used machine learning methods','Q10_We have well established ML methods'\n             ,'Q42_Important is revenue and business goals','Q11_My role: Build prototypes to explore applying ML to new areas'\n             ,'Q10_We do not use ML methods'])\nf2 = f2.set_index(index2, inplace = False)\n\nplt.subplots(2, 1, figsize = (9, 18), sharey = True, gridspec_kw = {'wspace': 0.05})\n\nplt.subplot(2, 1, 1)\n\nax = sns.barplot(x='mean', y=f1.index, data=f1, \n                 palette=np.array(['#00cc00', '#00cc00','#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'])            \n                )\nax.set_title(\"Top 10 char - all data\",fontsize=18,weight='bold')\nax.set_xlabel(\"Importance\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\n\nsns.despine(offset=10, trim=True)\n\nplt.subplot(2, 1, 2)\nax = sns.barplot(x='mean', y=f2.index, data=f2, \n                palette=np.array(['#00cc00', '#00cc00','#00cc00', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8', '#c8c8c8'])            \n                )\n\nax.set_title(\"Top 10 char - without countries\",fontsize=18,weight='bold')\nax.set_xlabel(\"Importance\",fontsize=12)\nax.set_ylabel(\"\", fontsize=12)\nsns.despine(offset=10, trim=True)","873ff39f":"trace0 = go.Scatter(x=[0, 1], y=[0, 1], \n                    mode='lines', \n                    line=dict(color='lightgray', width=1, dash='dash'),\n                    showlegend=False)\n\ntrace1 = go.Scatter(x=fpr1, y=tpr1, \n                    mode='lines', \n                    line=dict(color='#00cc00', width=3),\n                    name='Model przewiduj\u0105cy doch\u00f3d (wszystkie dost\u0119pne informacje)'\n                   )\n\ntrace2 = go.Scatter(x=fpr2, y=tpr2, \n                    mode='lines', \n                    line=dict(color='#dc0000', width=3),\n                    name='Model przewiduj\u0105cy doch\u00f3d <br>(bez wp\u0142ywu miejsca zamieszania na \u015bwiecie)'\n                   )\n\nlayout = go.Layout(title='<b>ROC Curve<\/b><br><i>Gini: ' + str(round(100*(2*roc_score1 - 1),1)) +'% vs ' + str(round(100*(2*roc_score2 - 1),1)) +'% <\/i> ', \n                     height=400, \n                     width=700,\n                     showlegend=True,\n                     legend=dict(x=0.4, y=0.5),\n                     xaxis=dict(title='% of negatives'),\n                     yaxis=dict(title='% of positives'),\n                    )\n\nfig = go.Figure(data=[trace1, trace2], layout=layout)\n\niplot(fig)","cd0a2a54":"data_m = prep_data(pd.DataFrame(MultipleResponce[MultipleResponce['Q1']=='Male']), 'Q4', 'Q9_avg')\ndata_f = prep_data(pd.DataFrame(MultipleResponce[MultipleResponce['Q1']=='Female']), 'Q4', 'Q9_avg')\ndata_f['mean'] = -1*data_f['mean']\n\nlayout = go.Layout(title = '<b>Does the academic title affect your income?<\/b>',\n                   yaxis=go.layout.YAxis(automargin=True),\n                   xaxis=go.layout.XAxis(\n                       range=[-70, 70],\n                       tickvals=[-60, -40, -20, 0, 20, 40, 60],\n                       ticktext=[60, 40, 20, 0, 20, 40, 60],\n                       title='Avarage yearly income in thousands of $'),\n                   barmode='overlay',\n                   bargap=0.1, \n                   annotations=[\n                    dict(\n                        x = -50, y = 5, text='<b>W ka\u017cdej grupie <br>kobiety zarabiaj\u0105 mniej<\/b>',showarrow=False,\n                    ),]\n                  )\n\ndata = [go.Bar(y=data_f['val'],\n               x=data_m['mean'],\n               orientation='h',\n               name='Men',\n               hoverinfo='x',\n               marker=dict(color='powderblue')\n               ),\n        go.Bar(y=data_f['val'],\n               x=data_f['mean'],\n               orientation='h',\n               name='Women',\n               text=-1*data_f['mean'],\n               hoverinfo='text',\n               marker=dict(color='pink')\n               )]\n\niplot(dict(data=data, layout=layout)) \n\nMultipleResponce['Q8_new'] = MultipleResponce['Q8'].apply(lambda x: '0-5' if x in ['0-1','1-2','2-3','3-4','4-5']\n                            else ('20+' if x in ['20-25','25-30','30 +'] else x ))\n\ndata_m = prep_data(pd.DataFrame(MultipleResponce[MultipleResponce['Q1']=='Male']), 'Q8_new', 'Q9_avg')\ndata_f = prep_data(pd.DataFrame(MultipleResponce[MultipleResponce['Q1']=='Female']), 'Q8_new', 'Q9_avg')\n\ndata_f['mean'] = -1*data_f['mean']\n\nlayout = go.Layout(title = '<b>... and work experience?<\/b>',\n                   yaxis=go.layout.YAxis(automargin=True),\n                   xaxis=go.layout.XAxis(\n                       range=[-150, 150],\n                       tickvals=[-120, -80, -40, 0, 40, 80, 120],\n                       ticktext=[120, 80, 40, 0, 40, 80, 120],\n                       title='Avarage yearly income in thousands of $'),\n                   barmode='overlay',\n                   bargap=0.1, \n                   annotations=[\n                    dict(\n                        x = -100, y = 3.8, text='<b>W ka\u017cdej grupie z <br>5+ do\u015bwiadczeniem <br>kobiety zarabiaj\u0105 mniej',showarrow=False,\n                    ),]\n                  )\n\ndata = [go.Bar(y=data_f['val'],\n               x=data_m['mean'],\n               orientation='h',\n               name='Men',\n               hoverinfo='x',\n               marker=dict(color='powderblue')\n               ),\n        go.Bar(y=data_f['val'],\n               x=data_f['mean'],\n               orientation='h',\n               name='Women',\n               text=-1*data_f['mean'],\n               hoverinfo='text',\n               marker=dict(color='pink')\n               )]\n\niplot(dict(data=data, layout=layout)) ","488486c9":">\"*Heh. Czyli \u015bwiat nie jest taki prosty. Tyle zale\u017cno\u015bci i jak w tym si\u0119 nie pogubi\u0107*\" - powiedzia\u0142 Draco.\n\n>\"*M\u0119\u017cusiu, a w jakiej bran\u017cy chcia\u0142by\u015b pracowa\u0107? Co Ciebie najbardziej interesuje?*\" - spyta\u0142a z przek\u0105sem Abi prowokuj\u0105c go do refleksji co chce robi\u0107.\n\n>\"*Wszystko jedno gdzie, byle spe\u0142nia\u0142a dwa proste warunki: by by\u0142o du\u017co danych. I bym by\u0142 nag\u0142upsz\u0105 osob\u0105 w pokoju.*\"\n\n>\"*Dlaczego?*\" - spyta\u0142a si\u0119 \u015bmiej\u0105c.\n\n>\"*Bym mia\u0142 od kogo ch\u0142on\u0105\u0107 wiedz\u0119*\" odpowiedzia\u0142 Draco.","40d7b8cd":">\"*Hmm... jednak jest jeden kraj wyr\u00f3\u017cniaj\u0105cy si\u0119 na tle innych. A gdyby go nie by\u0142o? To ciekawe jaka by\u0142aby r\u00f3\u017cnica*\"","17d05f72":">\"*Mia\u0142a\u015b racj\u0119 ksi\u0119\u017cniczko.*\" przytakn\u0105\u0142 Draco w my\u015blach.\n\n>\"*\u017bebym ja mia\u0142 tak\u0105 pewno\u015b\u0107 siebie jak ty*\" powiedzia\u0142 g\u0142o\u015bno z u\u015bmiechem do Abigail.\n\n>\"*A pewno\u015b\u0107 siebie i znanie w\u0142asnej warto\u015bci te\u017c jest moim zdaniem istotna.*\" - sp\u0142entowa\u0142a.","532c2a12":"> \"*S\u0142ysza\u0142em kiedy\u015b, \u017ce \u015bwiat jest mocno rozwarstwiony, tzn. \u017ce 99% pieni\u0119dzy na \u015bwiecie nale\u017cy do 1% najbogatszych ludzi. Ciekawe czy tak jest te\u017c tutaj...*\" zapyta\u0142 sam siebie Draco","cf5a6586":"-----------------------------------------------------------------------------------\n## Referencje:\n(polska wersja: https:\/\/www.kaggle.com\/mamczurmiroslaw\/quo-vadis-a-story-of-young-data-scientist)\n\n[1] Informacja o BIG MAC Index: https:\/\/www.economist.com\/news\/2018\/07\/11\/the-big-mac-index\n\nDana na temat BIG Mac Index: https:\/\/raw.githubusercontent.com\/TheEconomist\/big-mac-data\/master\/source-data\/big-mac-source-data.csv\n\n[2] Lista pobranych kraj\u00f3w:https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/2014_world_gdp_with_codes.csv\n\n[3] Inspiracje z innych opowiada\u0144:\n- https:\/\/www.kaggle.com\/andresionek\/what-makes-a-kaggler-valuable\n- https:\/\/www.kaggle.com\/headsortails\/what-we-do-in-the-kernels-a-kaggle-survey-story\n- https:\/\/www.kaggle.com\/lytyakov\/kaggler-from-india-who-are-you\n\n","9274b66a":"Za siedmioma g\u00f3rami, za siedmioma lasami nad brzegiem morza...\n\n>\"*Hej Draco! W \u017cyciu nie widzia\u0142am ciebie jeszcze tak zamy\u015blonego*\" szepn\u0119\u0142a do ucha m\u0142odemu m\u0119\u017cczy\u017anie przepi\u0119kna kobieta chwytaj\u0105c go za d\u0142o\u0144.\n\n>\"*Wybacz ksi\u0119\u017cniczko. Nigdy do tej pory nie czu\u0142em takiej odpowiedzialno\u015bci spoczywaj\u0105cych ma moich barkach*\" odpowiedzia\u0142. \n\nDraco stan\u0105\u0142 za kobiet\u0105 w pi\u0119knej bia\u0142ej sukni i przytuli\u0142 j\u0105 z ca\u0142ych si\u0142.\n\n<img src=\"https:\/\/draxe.com\/wp-content\/uploads\/2018\/05\/HUGS_HEADER_2.jpg\" width=\"50%\">\n\n>*\"Po prostu chc\u0119 by\u015bcie by\u0142y szcz\u0119\u015bliwe i nigdy Wam niczego nie zabrak\u0142o*\" - po\u0142o\u017cy\u0142 jedn\u0105 z d\u0142oni na brzuchu - \"*Od kilku godzin jeste\u015b moj\u0105 \u017con\u0105, a za sze\u015b\u0107 miesi\u0119cy zostan\u0119 ojcem. Zaczynam ca\u0142kiem inaczej spogl\u0105da\u0107 na \u015bwiat ni\u017c dotychczas *\"- powiedzia\u0142 Draco -\" *Wiem, \u017ce pieni\u0105dze szcz\u0119\u015bcia nie daj\u0105. Jednak chcia\u0142bym zarabia\u0107 wystarczaj\u0105co du\u017co by\u015bmy mogli sobie za nie kupi\u0107 bezpiecze\u0144stwo i spok\u00f3j. Po to by pieni\u0105dze pracowa\u0142y dla nas, a nie my dla pieni\u0119dzy. Po to by sta\u0107 by\u0142o nas na to by\u015bmy mogli du\u017co czasu sp\u0119dza\u0107 ze sob\u0105 i mogli realizowa\u0107 w\u0142asne pasje i marzenia. Czy to \u017ale?*\"\n\n>\"*To nic z\u0142ego kochanie*\" - odpowiedzia\u0142a Abigail. \"*Zostawi\u0119 ciebie z Twoimi my\u015blami i b\u0119de czeka\u0107 w domku na pla\u017cy*\" szepn\u0119\u0142a zalotnie si\u0119 u\u015bmiechaj\u0105c. \n\nDraco zosta\u0142 na pla\u017cy. Przez d\u0142ugi czas bi\u0142 si\u0119 z my\u015blami, kt\u00f3re pr\u00f3bowa\u0142y znale\u017a\u0107 odpowied\u017a na pytanie co nale\u017cy zrobi\u0107. S\u0142o\u0144ce ju\u017c dawno zasz\u0142o.\n\n>\"*Gdybym tylko wiedzia\u0142, w kt\u00f3rym kierunku p\u00f3j\u015b\u0107...*\" - pomy\u015bla\u0142 Draco. \n\nUk\u0142adaj\u0105c najr\u00f3\u017cniejsze plany na przysz\u0142o\u015b\u0107 i rozwa\u017caj\u0105c r\u00f3zne kierunki zasn\u0105\u0142 ze zm\u0119czenia. Gdy nagle si\u0119 przebudzi\u0142 ku swojemu zdziwieniu zobaczy\u0142 ko\u0142o si\u0119bie grub\u0105 ksi\u0119g\u0119 z  karteczk\u0105. \n<img src=\"https:\/\/apekshadrishtikon.files.wordpress.com\/2013\/06\/old_armenian_book_by_deviantik.jpg\" width=\"20%\">\n\n>\"*Odpowied\u017a na swoje pytanie znajdziesz w \u015brodku m\u0142odzie\u0144cze. Specjalnie o takich m\u0142odych osobach jak Ty przygotowa\u0142em sie na tak\u0105 ewentualno\u015b\u0107 by wam pom\u00f3c. Jednak musisz uwa\u017cnie si\u0119 przygl\u0105da\u0107 tym informacj\u0105 ... Powodzenia*\" - podpisano przez czarnoksi\u0119\u017cnika Wielkiego Kaggle'a. Okaza\u0142o si\u0119, \u017ce ksi\u0119ga wype\u0142niona jest ankietami ludzi z ca\u0142ego \u015bwiata.\n\nDraco niezw\u0142ocznie pobieg\u0142 do domku na pla\u017cy, w kt\u00f3rym sp\u0119dza\u0142 miesi\u0105c miodowy ze swoj\u0105 ci\u0119\u017carn\u0105 \u017con\u0105 Abigail. Usiad\u0142 przy biurku i zacz\u0105\u0142 po cichu przegl\u0105da\u0107 z zaciekawieniem informacje, by nie obudzi\u0107 Abi.\n\n>\"*Nie wierz\u0119! Czy\u017cby rzeczywi\u015bcie by\u0142a tutaj odpowied\u017a?\"* - krzycza\u0142 w my\u015blach z zaciekawieniem wertuj\u0105c kolejne kartki.\n\n>\"*Przyjrzyjmy si\u0119 bli\u017cej...*\"","7c2c9101":"Koniuszkiem oka pociek\u0142a mu \u0142ezka. Przytuli\u0142 jeszcze mocniej ma\u0142\u0105 ksi\u0119\u017cniczk\u0119.\n\n>\"***Mam nadziej\u0119, \u017ce zanim doro\u015bniesz to si\u0119 zmieni ...***\"\n<img src=\"http:\/\/www.thespiritualindian.com\/wp-content\/uploads\/2016\/01\/tears-are-good.jpg\" width=\"30%\">","f676f3bb":">*\"Hmm...akceptuj\u0119 tak\u0105 niewielk\u0105 r\u00f3\u017cnic\u0119 zyskuj\u0105c to co mam w moim otoczeniu. Szcz\u0119\u015bcie jest najwa\u017cniejsze...*\" podsumowa\u0142 spogl\u0105daj\u0105c na \u015bpi\u0105c\u0105 \u017con\u0119 wtulon\u0105 w poduszk\u0119.","63bd2528":">\"*Dobrze, to ju\u017c wiem do\u015b\u0107 sporo. Ale jeszcze jedno pytania kochanie*\"\n\n>\"*Jakie pytanie?*\" spyta\u0142a zaniepokojona Abigil\n\n>\"*Jeste\u015b gotowa na przeprowadzk\u0119 do innego miasta lub kraju?*\" - spyta\u0142 podnosz\u0105\u0107 delikatni brwi\n\nNagle posputnia\u0142a. Podesz\u0142a do okna i spojrza\u0142a w dal. My\u015bla\u0142a o czekaj\u0105cej na nich w kraju rodzinie, przyjacio\u0142ach, znajomych. \n>\"*Nie wiem. A nie moza inaczej? Czy to jest jedyny spos\u00f3b by opuszcza\u0107 kraj?\"*\n\n>\"*Szukajmy dalej odpowiedzi*\" powiedzia\u0142 Draco","e48b83a3":">\"*Dobra. Ju\u017c wiem jaki wp\u0142yw ma do\u015bwiadczenie, wiek czy pewno\u015b\u0107 siebie. Zastan\u00f3wmy si\u0119 jeszcze co z moj\u0105 dalsz\u0105 edukacj\u0105*\" doda\u0142 Draco.","65cc49bf":">\"*Sk\u0105d mo\u017ce wynika\u0107 taka radykalna r\u00f3\u017cnica?*\" spyta\u0142a Abigail spogl\u0105daj\u0105c przez ramie na wyniki. \n\n>\"*Odpowied\u017a wydaje mi si\u0119 prosta*\" odpowiedzia\u0142 Draco. \"*Osoby z doktoratem piastuj\u0105 wy\u017csze stanowiska w firmach. Dodatkowo sam znam kilka os\u00f3b z uczelni, kt\u00f3re rzuci\u0142y karier\u0119 zostania profesorem na poczet wy\u017cszych zarobk\u00f3w w prywatnych przedsi\u0119biorstwach.*\"\n\n>\"*Tylko pami\u0119taj kochanie zanim rozpoczniesz pod\u0105\u017ca\u0107 w kierunku doktoratu, ile to ci\u0119\u017ckiej pracy kosztuje oraz wyrzecze\u0144. A mo\u017ce te wszystkie godziny da rade lepiej spo\u017cytkowa\u0107?*\" - powiedzia\u0142a m\u0142oda \u017cona.\n\n>\"*Co masz na my\u015bli?*\"\n\n>\"*Mo\u017ce lepiej posiedzie\u0107 w domu, przytula\u0107 \u017cone i opiekowa\u0107 si\u0119 dzieckiem?*\" - u\u015bmiechn\u0119\u0142a si\u0119 Abi.","9f37e435":">\"*Co\u015b mi tutaj nie pasuje... Dobr\u0105 alternatyw\u0105 by\u0142oby dla dalszej nauki uczenie w domu by pom\u00f3c \u017conie przy naszym dzieciaczku. Tylko dlaczego osoby, kt\u00f3re ucz\u0105 si\u0119 na niekt\u00f3rych platformach zarabiaj\u0105 mniej?*\"- zaniepokoi\u0142 si\u0119 Draco.\n\nZacz\u0105\u0142 chodzi\u0107 w k\u00f3\u0142ko po pokoju i nerwowo obgryza\u0107 paznokcie\n\n>*\"Wiem!*\" krzykn\u0105\u0142 \"*bo to s\u0105 r\u00f3\u017cne populacje innych ludzi. Tylko jak to udowodni\u0107?*\"","080c922d":"> \"*Zatem najwi\u0119cej zarabiaj\u0105 menad\u017cerowie*\" - chwil\u0119 zastanawia\u0142 si\u0119 m\u0142ody Draco.\n\n>\"*To ma sens. Zarz\u0105dzaj\u0105 lud\u017ami zajmuj\u0105cymi si\u0119 danymi, musz\u0105 wiedzie\u0107 co robi\u0105. Gdyby nie wiedzieli, to m\u0142ode wilki by ich szybko wygryz\u0142y. Odrzu\u0107my osoby na poczatku swojej drogi i pod\u0105\u017cajmy dalej.*\" - mrukn\u0105\u0142 zastanawi\u0105j\u0105c si\u0119 jakie odkrycia jeszcze zobaczy.\n\n>\"*Kochanie, cho\u0107bym nie wiem co by\u015b robi\u0142 to nie b\u0119dziesz menda\u017cerem*\" - u\u015bmiechn\u0119\u0142a si\u0119 jego ksi\u0119\u017cniczka wchodz\u0105c do pokoju - \"* chyba jeste\u015b za m\u0142ody i brakuje Ci do\u015bwiadczenia*\".","feb63e71":"Draco posmutnia\u0142. Zobaczy\u0142 jak to wygl\u0105da na \u015bwiecie. Wiedzia\u0142, \u017ce jego druga po\u0142\u00f3wka wola\u0142aby zosta\u0107 na miejscu.\n\n>\"*Co\u015b mi tutaj jeszcze nie pasuje.*\" zacz\u0105\u0142 drapa\u0107 si\u0119 po g\u0142owie. Rozgl\u0105dn\u0105\u0142 si\u0119 po pokoju i chwyci\u0142 za kanapk\u0119. \n\n>\"*G\u0142odny Draco to z\u0142y Draco*\" -u\u015bmiechn\u0105\u0142 si\u0119 do siebie m\u00f3wi\u0105c po nosem. \n\nJedz\u0105c spojrza\u0142 na kanapk\u0119. Kupi\u0142 j\u0105 w pobliskim sklepie za 8 euro. Przypomnia\u0142 sobie, \u017ce kilka dni przed wyjazdem na miesi\u0105c miodowy jad\u0142 w swoim mie\u015bcie tak\u0105 sam\u0105 za 3 z\u0142ote - w walucie wartej cztery razy mniej ni\u017c euro. \n\n>\"*Mam informacje o zarobkach w dolarach w ankiecie, ale nie wsz\u0119dzie ten sam dolar jest warty tyle ile w innym miejscu na \u015bwiecie.*\"\n\nB\u0142ysk, jedna my\u015bl... Draco przypomnia\u0142 sobie, \u017ce McDonald ma restauracje w prawie ka\u017cdym kraju. I cen\u0119 BigMaca dostosowuje do waluty i si\u0142y nabywczej w ka\u017cdym kraju.","e1e3034c":"# Quo vadis? [(*)](https:\/\/en.wikipedia.org\/wiki\/Quo_vadis%3F)\n### Historia o szukaniu swojej drogi przez m\u0142odego naukowca danych","e8ac0438":"# Epilog\n...min\u0105\u0142 rok. Draco przytulaj\u0105c c\u00f3reczk\u0119 spojrza\u0142 na ni\u0105 i si\u0119 zacz\u0105\u0142 zastanawia\u0107\n\n>\"*A ty kim b\u0119dziesz maluszku kiedy\u015b?*\"\n\nDziewczynka wskaza\u0142a na ojca.\n\n>\"*O, chcesz si\u0119 zajmowa\u0107 tym co ja?*\"\n\nDraco wyci\u0105gn\u0105\u0142 po\u015bpiesznie zaniepokojony wcze\u015bniejsze notatki. Zosta\u0142o mu co\u015b jeszcze do sprawdzenia.","3e17065a":"Pojawi\u0142 sie u\u015bmiech na twarzy jak tylko zrozumia\u0142, \u017ce jednak nie ma a\u017c tak istotnych dysproporcji na \u015bwiecie. \n\n>\"*Hmm... Ostatnia rzecz. A jakby wrzuci\u0107 dane do pierwszego lepszego modelu statystycznego, kt\u00f3ry b\u0119dzie przewidywa\u0142 na podstawie danych z ankiet ile kto\u015b zarabia. Ciekawe co by wysz\u0142o i okaza\u0142o si\u0119 istotne. Ciekawe czy potwierdzi mi to, co ju\u017c mam w g\u0142owie...*\" powiedzia\u0142 do siebie Draco.","75e1504c":"# PODSUMOWANIE\n***Niewa\u017cne gdzie mieszkasz, co studiujesz, albo jak\u0105 konkretnie dziedzin\u0105 si\u0119 zajmujesz. Najwa\u017cniejsze jest to by\u015b zbiera\u0142 do\u015bwiadczenia, rozwija\u0142 sie i pracowa\u0142 w firmach kt\u00f3re ju\u017c teraz wykorzystuj\u0105 uczenie maszynowe. Je\u015bli robisz to co lubisz to pami\u0119taj - nie musisz si\u0119 spieszy\u0107. Pieni\u0105dze przyjd\u0105 same. ***","5ff9d98d":">\"*Hmm...dobra. Nie dla wszystkich znam \u015brednie roczne zarobki. Wyklucze ich by mi nie przeszkadzali w wyci\u0105ganiu wniosk\u00f3w*\" pewnym tonem powiedzia\u0142 Draco do siebie upewniaj\u0105c si\u0119, ze dobrze robi.","d6070bd4":"> \"*Czyli rzeczywi\u015bcie tak jest*\" pomy\u015bla\u0142. \"*Zg\u0142\u0119bi\u0119 teraz tajemnic\u0119 czym jedni r\u00f3\u017cni\u0105 si\u0119 od drugich.*\"\n\nDraco spojrza\u0142 jeszcze na kartk\u0119 zostawion\u0105 przez czarnoksi\u0119\u017cnika. \n\n>\"*Zobaczmy czy s\u0105 jeszcze jakie\u015b pu\u0142apki, np. grupy os\u00f3b, co mog\u0105 zaburzy\u0107 obraz ca\u0142o\u015bci. Musz\u0119 by\u0107 pewny, \u017ce moje wnioski potem b\u0119d\u0105 poprawne.\"*"}}