{"cell_type":{"94cd7f32":"code","4b255796":"code","b52f2d62":"markdown"},"source":{"94cd7f32":"#Definition of the Necesarry Modules\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom termcolor import colored\nimport random\nimport plotly.figure_factory as ff\nimport warnings            \nwarnings.filterwarnings(\"ignore\") \nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n#Importing the Datasets\nDatax1 = pd.read_csv(\"..\/input\/internet-access-oecd\/DP_LIVE_25112020170111306.csv\")\nDatax1.columns = Datax1.columns.str.title()\n\nDatax2 = pd.read_csv(\"..\/input\/access-to-computers-from-home-oecd\/DP_LIVE_04122020114826086.csv\")\nDatax2.columns = Datax2.columns.str.title()\n\n#Reshaping the Datasets\nDatax1.drop([\"Subject\",\"Indicator\",\"Measure\",\"Frequency\",\"Flag Codes\"], axis=\"columns\", inplace=True)\nDatax1.rename(columns={\"Value\": \"Internet_Access\"}, inplace = True)\n\nDatax2.drop([\"Subject\",\"Indicator\",\"Measure\",\"Frequency\",\"Flag Codes\"], axis=\"columns\", inplace=True)\nDatax2.rename(columns={\"Value\": \"Computer_Access\"}, inplace = True)\n\n#Combining the Datasets\nDatax = pd.merge(Datax1, Datax2, on=[\"Location\",\"Time\"])\nDatax.head(20)","4b255796":"variables = [\"Internet_Access\",\"Computer_Access\"]\n\nfor x in variables:\n    \n    #Convertion of Final Dataset to Necessary Format    \n    CountryGroups = Datax.groupby(\"Location\")\n    Data1 = pd.concat([pd.Series(v[x].tolist(), name=k) for k, v in CountryGroups], axis=1)    \n    \n        #Managing Group Names as a List\n    ln = len(Data1.columns)\n    \n    #Limiting the Number of Countries\n    if ln >= 10:\n        lnm = range(10)\n    else:    \n        lnm = range(ln)\n        \n    Group = []   \n    for i in lnm:\n        col= Data1.columns[i]\n        Group.append(col)\n    \n    Data = pd.melt(Data1.reset_index(), id_vars=[\"index\"],value_vars=Group)\n    Data.columns = [\"Index\", \"Country\", x]\n    \n    #Setting the Dataframe Name\n    Data1.name = str(x)\n    \n    #Histograms\n    color_provider3 = []\n    for i in Group:\n\n        #Creating Random Colors for Each Box Plot\n        r = random.randrange(0,255)\n        b = random.randrange(0,255)\n        g = random.randrange(0,255)\n        color_provider = (r, g, b)\n        color_provider2 = \"rgb\"+str(color_provider)\n        color_provider3.append(color_provider2)\n\n    hist_data = []\n    for i in Data1.columns[:10]:\n        x = Data1[i].dropna()\n        hist_data.append(x)\n\n    # Create distplot with curve_type set to 'normal'\n    fig = ff.create_distplot(hist_data, Group, curve_type=\"normal\", colors=color_provider3)\n\n    # Add title\n    fig.update_layout(title_text=\"Distplot with Normal Distribution for \"+str(Data1.name))\n    fig.show()\n\n","b52f2d62":"# <font color=\"#E74C3C\">Improved <\/font> <font color=\"#2980B9\">Histogram<\/font> <font color=\"#F39C12\">Visualization<\/font> <font color=\"#2ECC71\">on OECD<\/font> <font color=\"#9B59B6\">Countries <\/font> <font color=\"#2E4053\"> Internet Access<\/font> \n\nIn this kernel a colorful Histogram algorithm is improved in a way; manipulating the dataset to necessary form, specifying the groups, managing the color of plot for each group and title the plot.\n\nThanks a lot to @Mathchi for his base study https:\/\/www.kaggle.com\/mathchi\/study-plotly-world-happiness-report\n\n\n### <b><mark style=\"background-color: #9B59B6\"><font color=\"white\">*   How to Use?   *<\/font><\/mark><\/b>\n\n\n1. Import the dataset\n2. Change the definition of <font color=\"#C30947\"> variables <\/font> according to yout dataset\n3. Define the grouping variable you need to youse to this part  <font color=\"#E74C3C\"> Groups = timesData.groupby(\"Location\")<\/font> in the place of <font color=\"#C30947\"> Location <\/font> \n4. Assign the name of grouping variable in this part <font color=\"#E74C3C\"> Data.columns = [\"Index\", \"Country\", x] <\/font> in the place of <font color=\"#C30947\"> Country <\/font> "}}