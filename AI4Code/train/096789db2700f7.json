{"cell_type":{"0fcd840b":"code","972cbdb9":"code","c7b9f756":"code","a5f045c4":"code","500454f6":"code","e75e53a5":"code","8c53ad77":"code","4849f84c":"code","02b0d3a2":"code","65644289":"code","a082052e":"code","9d1a5f0a":"code","77eab20b":"code","4cd65ce9":"code","2580a422":"code","ba8780dd":"code","1915f79a":"code","1131aaa1":"code","1acfa835":"code","03b3b86f":"code","6bbd8f51":"code","b5792b71":"code","376f7bb4":"code","0678e0fb":"code","f5e3f1bd":"code","0703a4cb":"code","8b83106d":"code","9b538083":"code","6f723282":"code","acb10ea4":"code","7db83088":"code","67273d4d":"code","91216084":"code","27858d63":"code","3e584908":"code","c4d14994":"code","038fbaea":"code","18a09c47":"code","a16cca2a":"code","ce33e36f":"code","fe4f65f5":"code","031600c6":"code","5107e1d1":"code","8a39633c":"code","d280b7d2":"code","16dcf547":"code","39655724":"code","c3de6bba":"code","aa467ca1":"code","b5f86303":"code","8ad9c58b":"code","7b46766e":"code","1b7dd3f2":"code","b675545e":"code","d6dd2ebb":"code","837cb839":"code","7fa56b4c":"code","1b78512c":"code","113dc2d8":"code","51bc19be":"code","d3bb41b2":"code","42fef5c2":"code","75285cc7":"code","ed6018bb":"code","46ccce45":"code","0e376641":"code","0933c637":"code","d318975a":"code","1e7c06a3":"code","d95b54d4":"code","6cfdd2bc":"code","31eac48f":"code","fddf2a66":"code","064a7221":"code","39db2400":"code","b8821182":"code","360fbaf1":"code","bbeff3ba":"code","37b3487f":"code","142c4e86":"code","083d7654":"code","8d936681":"code","f737526d":"code","0d0087d2":"code","f40bd9fd":"code","c0587994":"code","1168af0a":"code","4f570882":"code","9b9b4501":"code","438a68d1":"code","9ffaaf72":"code","e0c44a41":"code","58e8937f":"code","575bc009":"code","6236eee0":"code","5b385954":"code","a8421cfe":"code","4816e9ad":"code","b868422a":"markdown","099fdc4f":"markdown","3a748a4a":"markdown","20cc4dbd":"markdown","bbb192c4":"markdown","5ce8f3b1":"markdown","df3cc4b5":"markdown","d83c1b7e":"markdown","cb61c4ae":"markdown","c20c7ce2":"markdown","a93eef11":"markdown","c2a82fd8":"markdown","0dcdcc97":"markdown","712207fc":"markdown","1352a9d4":"markdown","ba8cf8ee":"markdown","db24ee43":"markdown","f8a11bb7":"markdown","291fe1ae":"markdown","ad649b9d":"markdown","88226564":"markdown","a2129c46":"markdown","102762c1":"markdown","40998dd5":"markdown","b05436bc":"markdown","a6508a80":"markdown","c5c60c98":"markdown","7208461a":"markdown","b3fec474":"markdown","571fafdf":"markdown","ef408006":"markdown","16f6aa51":"markdown","f9142b6b":"markdown","bacb928b":"markdown","7d2348e2":"markdown","ca4858b3":"markdown","ca3cfc29":"markdown","3284904e":"markdown"},"source":{"0fcd840b":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport re\nimport seaborn as sns\ncolor = sns.color_palette()\nfrom tqdm import tqdm # progress bar\nimport plotly.offline as py\n\n\n# Limit floats output to 3 decimal points\npd.set_option('display.float_format', lambda x: '%.3f' % x)\n\nplt.style.use('fivethirtyeight')\n%matplotlib inline \n\n# Increase default figure and font sizes for easier viewing.\nplt.rcParams['figure.figsize'] = (8, 6)\nplt.rcParams['font.size'] = 14\n\nimport datetime as dt\nfrom datetime import timedelta\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score,silhouette_samples\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error,r2_score\nimport statsmodels.api as sm\nfrom statsmodels.tsa.api import Holt,SimpleExpSmoothing,ExponentialSmoothing\nfrom fbprophet import Prophet\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom statsmodels.tsa.stattools import adfuller","972cbdb9":"\"\"\"\n!pip install pyramid-arima\nfrom pyramid.arima import auto_arima\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.graphics.tsaplots import plot_acf,plot_pacf\nstd=StandardScaler()\n\"\"\"","c7b9f756":"from pathlib import Path\ndata_dir = Path('..\/input\/covidcompletesetcc\/COVID-19-DATASETS\/covid19-global-forecasting-week-1\/')\n\nimport os\nos.listdir(data_dir)","a5f045c4":"data = pd.read_csv(data_dir\/'train.csv', parse_dates = ['Date'])\ndata.head()","500454f6":"data.info()","e75e53a5":"data.head(0)","8c53ad77":"data.rename(columns = {'Date': 'date',\n                       'Id': 'id',\n                       'Province\/State':'state',\n                       'Country\/Region': 'country',\n                       'Lat': 'lat',\n                       'Long': 'long',\n                       'ConfirmedCases':'confirmed',\n                       'Fatalities': 'fatalities'\n                      }, inplace = True)\n\ndata.head()","4849f84c":"cleaned_data = pd.read_csv('..\/input\/corona-virus-report\/covid_19_clean_complete.csv', parse_dates = ['Date'])\n\ncleaned_data.head()","02b0d3a2":"# Rename column names\ncleaned_data.rename(columns={'Date': 'date', \n                     'Province\/State':'state',\n                     'Country\/Region':'country',\n                     'Last Update':'last_updated',\n                     'Confirmed': 'confirmed',\n                     'Deaths':'deaths',\n                     'Recovered':'recovered'\n                    }, inplace=True)\n\n\n# Group columns for 'cases'\n\ncases = ['confirmed', 'deaths', 'recovered', 'active']","65644289":"cleaned_data","a082052e":"# Active case = 'confirmed' - 'deaths' - 'recovered'\n\ncleaned_data['active'] = cleaned_data['confirmed'] - cleaned_data['deaths'] - cleaned_data['recovered']\n\n# Replace 'Mainland China' with just 'China'\n\ncleaned_data['country'] = cleaned_data['country'].replace('Mainland China', 'China')\n\n# Fill in missing values (NaN values in 'state' column)\n\ncleaned_data[['state']] = cleaned_data[['state']].fillna('')\ncleaned_data[cases] = cleaned_data[cases].fillna(0)\ncleaned_data.rename(columns= {'Date': 'date'}, inplace=True)\n\ndata_new = cleaned_data","9d1a5f0a":"print(\"External Data\")\n\nprint(f\"Earliest Entry: {data_new['date'].min()}\")\nprint(f\"Last Entry:     {data_new['date'].max()}\")\nprint(f\"Total Days:     {data_new['date'].max() - data_new['date'].min()}\")\n","77eab20b":"import sys\nprint('\\n'.join(sys.path))","4cd65ce9":"# Import modules for plots\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\nfrom plotly.subplots import make_subplots\n","2580a422":"data_new.head(2)","ba8780dd":"ww_confirmed = data_new.groupby('date')['date','confirmed','deaths'].sum().reset_index()","1915f79a":"ww_confirmed","1131aaa1":"sns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\n# ax.axis.set_major_formatter(mdates.DateFormatter(\"%Y-%m\"))\n\nsns.lineplot(ww_confirmed.date, ww_confirmed.confirmed, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('confirmed', fontsize=12)\nplt.title('Globally Confirmed Cases Over Time', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n","1acfa835":"data_new.columns","03b3b86f":"# Country categories: 'china', 'us', 'italy', 'rest_of_world':\n\ngroup_china = data_new[data_new['country']=='China'].reset_index()\ngroup_china_date = group_china.groupby('date')['date','confirmed','deaths'].sum().reset_index\n\ngroup_italy = data_new[data_new['country']=='Italy'].reset_index()\ngroup_italy_date = group_italy.groupby('date')['date','confirmed','deaths'].sum().reset_index\n\ngroup_us = data_new[data_new['country']=='US'].reset_index()\ngroup_us_date = group_us.groupby('date')['date','confirmed','deaths'].sum().reset_index\n\ngroup_rest = data_new[~data_new['country'].isin(['China', 'Italy', 'US'])].reset_index()\ngroup_rest_date = group_rest.groupby('date')['date', 'confirmed', 'deaths'].sum().reset_index()","6bbd8f51":"group_china_date","b5792b71":"# China\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_china.date, group_china.confirmed, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('confirmed', fontsize=12)\nplt.title('Confirmed Cases Over Time in China', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Italy\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_italy.date, group_italy.confirmed, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('confirmed', fontsize=12)\nplt.title('Confirmed Cases Over Time in Italy', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# US\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_us.date, group_us.confirmed, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('confirmed', fontsize=12)\nplt.title('Confirmed Cases Over Time in U.S.', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Rest\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_rest.date, group_rest.confirmed, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('confirmed', fontsize=12)\nplt.title('Confirmed Cases Over Time (Rest of the World)', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()","376f7bb4":"data_new.head()","0678e0fb":"data_new['state'] = data_new['state'].fillna('')\n\ntemp = data_new[[col for col in data_new.columns if col != 'state']]\n\nlatest = temp[temp['date'] == max(temp['date'])].reset_index()\nlatest_grouped = latest.groupby('country')['confirmed', 'deaths'].sum().reset_index()","f5e3f1bd":"latest_grouped","0703a4cb":"import plotly.graph_objects as go\nimport plotly.express as px # high-level API for rapid data expl. and figure generation\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\nfrom plotly.subplots import make_subplots","8b83106d":"worldcasesfig = px.choropleth(latest_grouped, locations=\"country\", \n                    locationmode='country names', color=\"confirmed\", \n                    hover_name=\"country\", range_color=[1,5000], \n                    color_continuous_scale=\"peach\", \n                    title='Countries with Confirmed Cases')\n\nworldcasesfig.show()","9b538083":"data_new.country","6f723282":"europe_list = list(['Austria','Belgium','Bulgaria','Croatia','Cyprus','Czechia','Denmark','Estonia','Finland','France','Germany','Greece','Hungary','Ireland',\n               'Italy', 'Latvia','Luxembourg','Lithuania','Malta','Norway','Netherlands','Poland','Portugal','Romania','Slovakia','Slovenia',\n               'Spain', 'Sweden', 'United Kingdom', 'Iceland', 'Russia', 'Switzerland', 'Serbia', 'Ukraine', 'Belarus',\n               'Albania', 'Bosnia and Herzegovina', 'Kosovo', 'Moldova', 'Montenegro', 'North Macedonia'])\n\neurolist_grouped_latest = latest_grouped[latest_grouped['country'].isin(europe_list)] # Makes sure and verify the countries are within the list\n","acb10ea4":"eurolist_fig = px.choropleth(eurolist_grouped_latest, locations='country', locationmode='country names', color='confirmed',\n                                                    hover_name='country', range_color=[1,2000], color_continuous_scale='portland', \n                                                     title='European Countries with Confirmed Cases', scope='europe', height=800)\n\neurolist_fig.show()","7db83088":"latest_grouped","67273d4d":"# Confirmed Cases Worldwide (bargraph)\n\nworldconfirmed_figbar = px.bar(latest_grouped.sort_values('confirmed', ascending=False)[:20][::-1],\n                                                         x='confirmed', y='country',\n                                                         title=\"Confirmed Cases Worldwide\", text='confirmed',\n                                                         height=1000, orientation='h')\n\nworldconfirmed_figbar.show()","91216084":"eurolist_grouped_latest","27858d63":"# Taking a closer look at confirmed cases in Europe (bargraph)\n\neuropeconfirm_figbar = px.bar(eurolist_grouped_latest.sort_values('confirmed', ascending=False)[:10][::-1], \n             x='confirmed', y='country', color_discrete_sequence=['#D63230'],\n             title='Confirmed Cases in Europe', text='confirmed', orientation='h')\n\neuropeconfirm_figbar.show()","3e584908":"# Taking a closer look at confirmed cases in the United States (bargraph)\n\n\"\"\"\nusa = cleaned_data[cleaned_data['country'] == 'US']\n\nusa_grouped_latest = usa[usa['date'] == max(usa['date'])]\nusa_grouped_latest = usa_grouped_latest.groupby('state')['confirmed','deaths'].max().reset_index()\n\nusaconfirm_figbar = px.bar(usa_grouped_latest.sort_values('confirmed', ascending=False)[:10][::-1],\n                           x='confirmed', y='state', color_discrete_sequence=['#D63230'], title='Confirmed Cases in the United States',\n                           text='confirmed', orientation='h')\n\nusaconfirm_figbar.show()\n\"\"\"","c4d14994":"ww_confirmed.head()","038fbaea":"# Look at confirmed cases across the globe:\n\nww_confirmed_fig = px.line(ww_confirmed, x='date', y='deaths', title='Global Deaths Over Time', color_discrete_sequence=['#D63230'])\nww_confirmed_fig.show()\n\n# Logarithmic Scale of the figure above\nww_confirmed_fig = px.line(ww_confirmed, x='date', y='deaths', title='Global Deaths Over Time (Log Scale)', log_y = True,\n                           color_discrete_sequence=['#D63230'])\nww_confirmed_fig.show()","18a09c47":"# China\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\n\nsns.lineplot(group_china.date, group_china.deaths, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('deaths', fontsize=12)\nplt.title('Confirmed Deaths Over Time in China', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Italy\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_italy.date, group_italy.deaths, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('deaths', fontsize=12)\nplt.title('Confirmed Deaths Over Time in Italy', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# US\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_us.date, group_us.deaths, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('deaths', fontsize=12)\nplt.title('Confirmed Deaths Over Time in U.S.', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Rest\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_rest.date, group_rest.deaths, palette=\"RdBu\")\nplt.xlabel('date', fontsize=12)\nplt.ylabel('deaths', fontsize=12)\nplt.title('Confirmed Deaths Over Time (Rest of the World)', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()","a16cca2a":"figdeathglobal = px.choropleth(latest_grouped, locations=\"country\", \n                    locationmode='country names', color=\"deaths\", \n                    hover_name=\"deaths\", range_color=[1,100], \n                    color_continuous_scale=\"peach\", \n                    title='Countries with Reported Deaths (Global-Scope)')\n\nfigdeathglobal.show()","ce33e36f":"figdeatheurope = px.choropleth(eurolist_grouped_latest, locations=\"country\", \n                    locationmode='country names', color=\"deaths\", \n                    hover_name=\"country\", range_color=[1,100], \n                    color_continuous_scale='portland',\n                    title='Reported Deaths in EUROPE', scope='europe', height=800)\n\nfigdeatheurope.show()","fe4f65f5":"eurolist_grouped_latest.head()","031600c6":"fig_deatheurope = px.bar(eurolist_grouped_latest.sort_values('deaths', ascending=False)[:5][::-1],\nx = 'deaths', y = 'country', color_discrete_sequence=['#D63230'],\ntitle = 'Deaths in Europe', text = 'deaths', orientation='h')\n\nfig_deatheurope.show()","5107e1d1":"# US\n\"\"\"\nfig_deathus = px.bar(usa_grouped_latest.sort_values('deaths', ascending=False)[:5][::-1],\nx = 'deaths', y = 'state', color_discrete_sequence=['#D63230'],\ntitle = 'Deaths in the United States', text = 'deaths', orientation='h')\n\nfig_deathus.show()\n\"\"\"","8a39633c":"cleaned_data","d280b7d2":"grouped_china = cleaned_data[cleaned_data['country']=='China'].reset_index()\ngrouped_china_date = grouped_china.groupby('date')['date','confirmed','deaths','active','recovered'].sum().reset_index\n\ngrouped_italy = cleaned_data[cleaned_data['country']=='Italy'].reset_index()\ngrouped_italy_date = grouped_italy.groupby('date')['date','confirmed','deaths','active','recovered'].sum().reset_index\n\ngrouped_us = cleaned_data[cleaned_data['country']=='US'].reset_index()\ngrouped_us_date = grouped_us.groupby('date')['date','confirmed','deaths','active','recovered'].sum().reset_index\n\ngrouped_rest = cleaned_data[~cleaned_data['country'].isin(['China', 'Italy', 'US'])].reset_index()\ngrouped_rest_date = grouped_rest.groupby('date')['date','confirmed','deaths','active','recovered'].sum().reset_index()","16dcf547":"# China\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\n\nsns.lineplot(group_china.date, group_china.active, palette=\"RdBu\")\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Active Cases', fontsize=12)\nplt.title('Active Cases in China', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Italy\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_italy.date, group_italy.active, palette=\"RdBu\")\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Active Cases', fontsize=12)\nplt.title('Active Cases in Italy', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# US\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_us.date, group_us.active, palette=\"RdBu\")\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Active Cases', fontsize=12)\nplt.title('Active Cases in U.S.', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()\n\n# Rest\nsns.set_style('darkgrid')\nf, ax = plt.subplots(figsize=(10,10))\nsns.lineplot(group_rest.date, group_rest.active, palette=\"RdBu\")\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Active Cases', fontsize=12)\nplt.title('Active Cases (Rest of the World)', fontsize=16)\nplt.xticks(rotation=90)\nplt.show()","39655724":"cleaned_data['state'] = cleaned_data['state'].fillna('')\n\ntemp = cleaned_data[[col for col in data_new.columns if col != 'state']]\n\nlatest = temp[temp['date'] == max(temp['date'])].reset_index()\nlatest_grouped = latest.groupby('country')['confirmed', 'deaths','active','recovered'].sum().reset_index()","c3de6bba":"latest_grouped.head()","aa467ca1":"fig_activeworld = px.choropleth(latest_grouped, locations = 'country', locationmode = 'country names',\n                               color='active', hover_name = 'active', range_color = [1,1000],\n                               color_continuous_scale = 'peach', title = 'Active Cases (Global)')\n\nfig_activeworld.show()","b5f86303":"eurolist_grouped_latest.head()","8ad9c58b":"\"\"\"\nfig_activeeurope = px.choropleth(eurolist_grouped_latest, locations = 'country', locationmode = 'country names',\n                               color='active', hover_name = 'active', range_color = [1,1000],\n                               color_continuous_scale = 'portland', title = 'Active Cases in European Countries',\n                                scope = 'europe', height = 700)\n\nfig_activeeurope.show()\n\n\"\"\"","7b46766e":"fig_activeworld_bar = px.bar(latest_grouped.sort_values('active', ascending = False)[:10][::-1],\n                            x = 'active', y = 'country', title = 'Active Cases (Globally)',\n                            text = 'active', orientation = 'h')\n\nfig_activeworld_bar.show()","1b7dd3f2":"latest_grouped.head()","b675545e":"fig_recoverworld = px.bar(latest_grouped.sort_values('recovered', ascending = False)[:10][::-1],\n                         x = 'recovered', y = 'country', title = 'Recovered Cases (Globally)',\n                         text = 'recovered', orientation = 'h')\n\nfig_recoverworld.show()","d6dd2ebb":"cleaned_data.head()","837cb839":"compare_cases = cleaned_data.groupby('date')['recovered','deaths','active'].sum().reset_index()\n\n\"\"\"Melt function:massage a DataFrame into a format where one or more columns are identifier variables, while all other columns, considered measured variables, are unpivoted to the row axis, leaving just two non-identifier columns, variable and value.\n\"\"\"\n    \ncompare_cases = compare_cases.melt(id_vars='date', value_vars=['recovered','deaths','active'],\n                                  var_name='case', value_name='count')\n\ncompare_cases.head()","7fa56b4c":"compare_cases_fig = px.line(compare_cases, x=\"date\", y=\"count\", color='case', title='Cases over time: Line Plot',\n                            color_discrete_sequence = ['cyan', 'red', 'orange'])\n\ncompare_cases_fig.show()\n\n\ncompare_cases_fig = px.area(compare_cases, x=\"date\", y=\"count\", color='case', title='Cases over time: Area Plot',\n                            color_discrete_sequence = ['cyan', 'red', 'orange'])\n\ncompare_cases_fig.show()","1b78512c":"cleaned_data.head()","113dc2d8":"# Remove China from equation\ncompare_cases_rest = cleaned_data[cleaned_data['country'] != 'China']\n\ncompare_casesrest_grouped = compare_cases_rest.groupby('date')['recovered','deaths','active'].sum().reset_index()\n\ncompare_cases_melt = compare_casesrest_grouped.melt(id_vars = 'date', value_vars = ['recovered','deaths','active'],\n                                                   var_name = 'case', value_name = 'count')\n\ncompare_cases_melt.head()","51bc19be":"compare_casesrest_fig = px.line(compare_cases_melt, x = 'date', y = 'count', color = 'case',\n                               title = 'Cases from the Rest of the World')\n\ncompare_casesrest_fig.show()\n\n\ncompare_casesrest_fig = px.area(compare_cases_melt, x = 'date', y = 'count', color = 'case',\n                               title = 'Cases from the Rest of the World')\n\ncompare_casesrest_fig.show()","d3bb41b2":"cleaned_data.head(3)","42fef5c2":"cleaned_data_latest = cleaned_data[cleaned_data['date'] == max(cleaned_data['date'])]\n\ncleaned_data_latestgroup = cleaned_data_latest.groupby('country')['confirmed','deaths','recovered','active'].sum().reset_index()\n\ncleaned_data_latestgroup.head(3)","75285cc7":"# Mortality Rate = (# deaths \/ # confirmed) * 100\n## Round product\ncleaned_data_latestgroup['mortality_rate'] = round((cleaned_data_latestgroup['deaths']\/cleaned_data_latestgroup['confirmed'])\n                                                  * 100, 2)\ncleaned_data_latestgroup.head(2)","ed6018bb":"# Sort 'confirmed' to 100 case batches\nmort_rate = cleaned_data_latestgroup[cleaned_data_latestgroup['confirmed'] > 100]\nmort_rate = mort_rate.sort_values('mortality_rate', ascending = False)\n\nmort_rate.head()","46ccce45":"mortrate_fig = px.bar(mort_rate.sort_values('mortality_rate', ascending = False)[:10][::-1],\n                     x = 'mortality_rate', y = 'country', title = 'DEATHS per 100 Confirmed Cases',\n                     text = 'mortality_rate', color_discrete_sequence = ['darkred'], orientation = 'h')\n\nmortrate_fig.show()","0e376641":"low_mortrate = cleaned_data_latestgroup[cleaned_data_latestgroup['confirmed'] > 100]\n\nlow_mortrate = low_mortrate.sort_values('mortality_rate', ascending = True)[['country','confirmed','deaths']][:15]\n\nlow_mortrate.head(2)","0933c637":"# Add color gradient to chart\nlow_mortrate.sort_values('confirmed', ascending = False)[['country','confirmed','deaths']][:20].style.background_gradient(cmap = 'Reds')","d318975a":"# Recovery Rate = (# recoveries \/ # confirmed) * 100\n## Round product to two decimals\ncleaned_data_latestgroup['recovery_rate'] = round((cleaned_data_latestgroup['recovered']\/cleaned_data_latestgroup['confirmed'])\n                                                  * 100, 2)\n\n# Sort 'confirmed' to 100 case batches\nrecov_rate = cleaned_data_latestgroup[cleaned_data_latestgroup['confirmed'] > 100]\nrecov_rate = recov_rate.sort_values('recovery_rate', ascending = False)\n\nrecov_rate.head()","1e7c06a3":"recov_rate_fig = px.bar(recov_rate.sort_values('recovery_rate', ascending = False)[:10][::-1],\n                     x = 'recovery_rate', y = 'country', title = 'RECOVERIES per 100 Confirmed Cases',\n                     text = 'recovery_rate', color_discrete_sequence = ['darkgreen'], orientation = 'h')\n\n\nrecov_rate_fig.show()","d95b54d4":"low_recovrate = recov_rate[recov_rate['confirmed'] > 100]\n\nlow_recovrate = low_recovrate.sort_values('recovery_rate', ascending = True)[['country','confirmed','recovered']][:20]\n\nlow_recovrate.head()\n\n","6cfdd2bc":"# Add color gradient to chart\nlow_recovrate.sort_values('confirmed', ascending = False)[['country','confirmed','recovered']][:20].style.background_gradient(cmap = 'Greens')","31eac48f":"data_new","fddf2a66":"formated_gdf = data_new.groupby(['date', 'country'])['confirmed', 'deaths'].max()\nformated_gdf = formated_gdf.reset_index()\nformated_gdf['date'] = pd.to_datetime(formated_gdf['date'])\nformated_gdf['date'] = formated_gdf['date'].dt.strftime('%m\/%d\/%Y')\nformated_gdf['size'] = formated_gdf['confirmed'].pow(0.3)\n\nfig = px.scatter_geo(formated_gdf, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", size='size', hover_name=\"country\", \n                     range_color= [0, 1500], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Spread Over Time', color_continuous_scale=\"portland\")\n\nfig.show()","064a7221":"covid = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ncovid.head()","39db2400":"print(\"Size\/Shape of the dataset: \",covid.shape)\nprint(\"Checking for null values:\\n\",covid.isnull().sum())\nprint(\"Checking Data-type of each column:\\n\",covid.dtypes)","b8821182":"# Dropping column as SNo is of no use, and \"Province\/State\" contains too many missing values\ncovid.drop([\"SNo\"], 1, inplace = True)","360fbaf1":"#Converting \"Observation Date\" into Datetime format\ncovid[\"ObservationDate\"] = pd.to_datetime(covid[\"ObservationDate\"])","bbeff3ba":"# Grouping Different Types of Cases as per Date\ndatewise = covid.groupby([\"ObservationDate\"]).agg({\"Confirmed\":'sum',\"Recovered\":'sum',\"Deaths\":'sum'})","37b3487f":"datewise[\"Days Since\"] = datewise.index-datewise.index[0]\ndatewise[\"Days Since\"] = datewise[\"Days Since\"].dt.days","142c4e86":"train_ml=datewise.iloc[:int(datewise.shape[0]*0.95)]\nvalid_ml=datewise.iloc[int(datewise.shape[0]*0.95):]\nmodel_scores=[]","083d7654":"lin_reg = LinearRegression(normalize = True)\n\nlin_reg.fit(np.array(train_ml[\"Days Since\"]).reshape(-1,1),np.array(train_ml[\"Confirmed\"]).reshape(-1,1))\n","8d936681":"prediction_valid_linreg = lin_reg.predict(np.array(valid_ml[\"Days Since\"]).reshape(-1,1))","f737526d":"model_scores.append(np.sqrt(mean_squared_error(valid_ml[\"Confirmed\"],prediction_valid_linreg)))\n\nprint(\"Root Mean Square Error for Linear Regression: \", np.sqrt(mean_squared_error(valid_ml[\"Confirmed\"], prediction_valid_linreg)))","0d0087d2":"plt.figure(figsize=(11,6))\nprediction_linreg=lin_reg.predict(np.array(datewise[\"Days Since\"]).reshape(-1,1))\nplt.plot(datewise[\"Confirmed\"],label=\"Actual Confirmed Cases\")\nplt.plot(datewise.index,prediction_linreg, linestyle='--',label=\"Predicted Confirmed Cases using Linear Regression\",color='black')\nplt.xlabel('Time')\nplt.ylabel('Confirmed Cases')\nplt.title(\"Confirmed Cases Linear Regression Prediction\")\nplt.xticks(rotation=90)\nplt.legend()","f40bd9fd":"train_ml=datewise.iloc[:int(datewise.shape[0]*0.95)]\nvalid_ml=datewise.iloc[int(datewise.shape[0]*0.95):]","c0587994":"poly = PolynomialFeatures(degree = 8) \n\ntrain_poly=poly.fit_transform(np.array(train_ml[\"Days Since\"]).reshape(-1,1))\nvalid_poly=poly.fit_transform(np.array(valid_ml[\"Days Since\"]).reshape(-1,1))\ny = train_ml[\"Confirmed\"]","1168af0a":"linreg = LinearRegression(normalize = True)\nlinreg.fit(train_poly,y)","4f570882":"prediction_poly = linreg.predict(valid_poly)\nrmse_poly = np.sqrt(mean_squared_error(valid_ml[\"Confirmed\"], prediction_poly))\nmodel_scores.append(rmse_poly)\n\nprint(\"Root Mean Squared Error for Polynomial Regression: \",rmse_poly)","9b9b4501":"comp_data = poly.fit_transform(np.array(datewise[\"Days Since\"]).reshape(-1,1))\n\nplt.figure(figsize=(11,6))\npredictions_poly=linreg.predict(comp_data)\nplt.plot(datewise[\"Confirmed\"],label=\"Train Confirmed Cases\",linewidth=3)\nplt.plot(datewise.index,predictions_poly, linestyle='--',label=\"Best Fit for Polynomial Regression\",color='black')\nplt.xlabel('Time')\nplt.ylabel('Confirmed Cases')\nplt.title(\"Confirmed Cases Polynomial Regression Prediction\")\nplt.xticks(rotation=90)\n\nplt.legend()","438a68d1":"new_prediction_poly = []\n\nfor i in range(1,18):\n    new_date_poly=poly.fit_transform(np.array(datewise[\"Days Since\"].max()+i).reshape(-1,1))\n    new_prediction_poly.append(linreg.predict(new_date_poly)[0])","9ffaaf72":"train_ml = datewise.iloc[:int(datewise.shape[0]*0.95)]\nvalid_ml = datewise.iloc[int(datewise.shape[0]*0.95):]","e0c44a41":"#Intializing SVR Model\n\nsvm = SVR(C = 1, degree = 5, kernel = 'poly', epsilon = 0.01)","58e8937f":"# Fitting Model on the Training Data\n\nsvm.fit(np.array(train_ml[\"Days Since\"]).reshape(-1,1), np.array(train_ml[\"Confirmed\"]).reshape(-1,1))","575bc009":"prediction_valid_svm = svm.predict(np.array(valid_ml[\"Days Since\"]).reshape(-1,1))","6236eee0":"model_scores.append(np.sqrt(mean_squared_error(valid_ml[\"Confirmed\"], prediction_valid_svm)))\n\nprint(\"Root Mean Square Error for Support Vectore Machine: \", np.sqrt(mean_squared_error(valid_ml[\"Confirmed\"], prediction_valid_svm)))","5b385954":"plt.figure(figsize = (11,6))\nprediction_svm = svm.predict(np.array(datewise[\"Days Since\"]).reshape(-1,1))\nplt.plot(datewise[\"Confirmed\"],label = \"Train Confirmed Cases\",linewidth = 3)\nplt.plot(datewise.index,prediction_svm, linestyle = '--',label = \"Best Fit for SVR\",color = 'black')\nplt.xlabel('Time')\nplt.ylabel('Confirmed Cases')\nplt.title(\"Confirmed Cases Support Vector Machine Regressor Prediction\")\nplt.xticks(rotation = 90)\nplt.legend()","a8421cfe":"new_date = []\nnew_prediction_lr = []\nnew_prediction_svm = []\n\nfor i in range(1,18):\n    new_date.append(datewise.index[-1]+timedelta(days=i))\n    new_prediction_lr.append(lin_reg.predict(np.array(datewise[\"Days Since\"].max()+i).reshape(-1,1))[0][0])\n    new_prediction_svm.append(svm.predict(np.array(datewise[\"Days Since\"].max()+i).reshape(-1,1))[0])","4816e9ad":"pd.set_option('display.float_format', lambda x: '%.6f' % x)\n\nmodel_predictions=pd.DataFrame(zip(new_date,new_prediction_lr,new_prediction_poly,new_prediction_svm),\n                               columns=[\"Dates\",\"Linear Regression Prediction\",\"Polynonmial Regression Prediction\",\"SVM Prediction\"])\n\nmodel_predictions.head()","b868422a":"- Cases in China have plummetted.\n- What is working in China?\n    - Strict lockdowns?\n- Active cases elsewhere have climbed exponentially, especially seeing how steep the slope is for the United States.","099fdc4f":"# COVID-19 EXPLORATORY DATA ANALYSIS","3a748a4a":"- Deaths in China have plateau'd since March compared to the rest of the countries.\n- The United State's sharp spike is concerning","20cc4dbd":"# Recovered Cases","bbb192c4":"#### Pressing Questions:\n\n- Which countries are the most affected by the coronavirus?\n- How well is the U.S. doing?\n- How did it spread so far?\n- Will a public lockdown work?\n- Should we be worried?","5ce8f3b1":"# GLOBAL SCOPE","df3cc4b5":"- Predictions of Linear Regression are not close to actual values.","d83c1b7e":"#### Import Modules and Load in Files","cb61c4ae":"# Mortality & Recovery Rates","c20c7ce2":"#### Confirmed Deaths Across the World","a93eef11":"#### Countries with the WORST Recovery Rates","c2a82fd8":"- Active cases over time is the number of people who are currently affected by the virus (no deaths, no recovery reports)","0dcdcc97":"# Comparisons","712207fc":"- The U.S., China, and Europe aren't doing well from a quick glance, but need to dive deeper and see how much each of the European countries are affected.","1352a9d4":"# Confirmed Deaths Over Time","ba8cf8ee":"- Concerning Countries\n    - Spain\n    - Italy\n    - France\n    \n- Countries with Less Severity\n    - Portugal\n    - Ireland\n    - Iceland\n- Italy appears to have suffered the most from COVID-19","db24ee43":"#### Plot Cases for the Rest of the World (minus China)","f8a11bb7":"- Active cases across the board are climbing dramatically toward March, with deaths slowly increasing.\n- China's recovery rate or the number of recovered relative to their population could mask the actual plots for deaths and recovered patients.\n- Removing China from the equation, a graph is needed to see how the rest of the world is doing (see figure below).","291fe1ae":"#### Countries with Reported Deaths (World Scope)","ad649b9d":"#### Countries with Low Mortality Rates","88226564":"#### Polynomial Regression for Prediction of Confirmed Cases","a2129c46":"- The global snapshot of active cases does not account for the increase in infected people.","102762c1":"#### Dig deeper and see trends in deaths per confirmed cases (100)","40998dd5":"#### RECOVERIES per 100 Confirmed Cases","b05436bc":"#### Confirmed Deaths Over Time Across CHINA, ITALY, U.S., and Rest of the World","a6508a80":"# Active Cases Over Time","c5c60c98":"#### Reference\n- Novel Corona Virus 2019 Dataset (https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset)","7208461a":"\n- Cleaned data from COVID-19 Complete Dataset (Updated every 24hours)\n- https:\/\/www.kaggle.com\/imdevskp\/corona-virus-report","b3fec474":"- China appears to be doing well in patients recovering from the COVID-19; however, China's population is overwhelming different from other countries so it'll be trickier to compare China's recovery rates with other countries.\n- How does cruise ship have more recoveries than Germany and Belgium?\n- Is Italy doing okay relative to their countries population?\n- Could the aging population and culture be an impact on number of active cases and recovery rates?\n","571fafdf":"# Confirmed Cases Over Time","ef408006":"- Good news for China - it appears that the coronavirus did not hit critical levels when March arrived compared to Italy who are aggressively affected by the disease.\n- U.S. spike may be an indication of getting more testing and testing results, but this is also concerning because the spike can't conclusively tell us that.\n- Steady increase in other parts of the world.","16f6aa51":"- It appears that active cases are also increasing drastically for the rest of the world.\n- Recovery rates for the rest of the world is noticeably low compared to the previous graph with China taken into account.\n    - What is China doing that is increasing their recovery rates for patients with the virus?\n    ","f9142b6b":"#### Taking a closer look at Europe","bacb928b":"#### Support Vector Machine ModelRegressor for Prediction of Confirmed Cases","7d2348e2":"#### Plot Cases Over Time","ca4858b3":"- The Linear Regression Model is absolutely falling apart.","ca3cfc29":"# Data Analysis of COVID-19\n- Confirmed Cases Around the Globe\n- Confirmed Deaths Over Time\n- Active Cases Over Time\n- Recovered Cases\n- Comparisons\n- Mortality and Recovery Rates","3284904e":"- COVID-19 has the strongest effect in Western Europe based on the heatmap."}}