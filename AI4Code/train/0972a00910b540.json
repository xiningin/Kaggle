{"cell_type":{"1618aafe":"code","80c10f15":"code","6afa9858":"code","ae211db0":"code","931f475d":"code","5ba23616":"code","8b332517":"code","1edb0ecd":"code","e82291d5":"code","d8083b8b":"code","cf0bce51":"code","2048b841":"code","3169225f":"code","bd52302c":"markdown"},"source":{"1618aafe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80c10f15":"train = pd.read_csv('..\/input\/melanoma-tumor-size-prediction-machinehack\/Train.csv')\ntest = pd.read_csv('..\/input\/melanoma-tumor-size-prediction-machinehack\/Test.csv')\nsub = pd.read_csv('..\/input\/melanoma-tumor-size-prediction-machinehack\/sample_submission.csv')","6afa9858":"train.head(5)","ae211db0":"import h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","931f475d":"htrain = h2o.H2OFrame(train)\nhtest = h2o.H2OFrame(test)","5ba23616":"x = ['mass_npea', 'size_npear', 'malign_ratio', 'damage_size',\n       'exposed_area', 'std_dev_malign', 'err_malign', 'malign_penalty',\n       'damage_ratio']\ny = 'tumor_size'\n#train[y] = train[y]#.asfactor()","8b332517":"aml = H2OAutoML(max_models=50, seed=666, sort_metric = \"rmse\", max_runtime_secs=1800)# ,exclude_algos = [\"DeepLearning\"]\naml.train(x=x, y=y, training_frame=htrain)#, fold_column='fold_column')","1edb0ecd":"# View the AutoML Leaderboard\nlb = aml.leaderboard\nlb.head(rows=lb.nrows)  # Print all rows instead of default (10 rows)","e82291d5":"# The leader model is stored here\naml.leader","d8083b8b":"preds = aml.leader.predict(htest)\npreds = preds.as_data_frame()","cf0bce51":"sub['tumor_size'] = preds.astype(float)\nsub.head(5)","2048b841":"sub.describe()","3169225f":"#sub.to_csv('MH15_baseline_v1ka.csv')\nsub.to_csv('MH15_baseline_v1kb.csv')","bd52302c":"## Simple AML solution...\n\n### With light feature engineering, it's possible to get RSME arround 3.81xxx and LB 3.80xxx"}}