{"cell_type":{"e7c7c1bb":"code","fbf4eb6e":"code","ea83a022":"code","698dad51":"code","da53f8c5":"code","7441dff4":"code","a8e86be6":"code","94c0a75d":"code","52dd2860":"code","36be6e8a":"code","ed77864f":"code","6cb82d80":"code","1bffda1a":"code","dda6980a":"code","126d8bff":"code","5bac5d41":"code","92f2b77e":"code","ac745098":"code","4ad83784":"code","1481f5d2":"code","1a2530f3":"code","373b7519":"markdown","0b8b1403":"markdown","916cc31e":"markdown","9460c15d":"markdown","e01e734c":"markdown","03faa2f0":"markdown","d0dc5269":"markdown","2850d226":"markdown","98305e41":"markdown","4cbe87b8":"markdown","fb2a0b4a":"markdown","f05d7cb0":"markdown","b7410228":"markdown","6bdd9fa2":"markdown","df489976":"markdown","be72fe97":"markdown","4aa65cbd":"markdown","0e4a120c":"markdown","6e93a3c6":"markdown","1aa02028":"markdown"},"source":{"e7c7c1bb":"import pandas as pd \nimport re\nfrom pathlib import Path\nimport shapely\nimport geopandas as gpd\nfrom tqdm.notebook import tqdm\ntqdm.pandas();","fbf4eb6e":"sample_path = Path('..\/input\/spacenet-7-multitemporal-urban-development\/SN7_buildings_train_sample\/sample\/L15-0506E-1204N_2027_3374_13')\nlabel_csv_path = Path('..\/input\/spacenet-7-multitemporal-urban-development\/SN7_buildings_train_csvs\/csvs\/sn7_train_ground_truth_pix.csv')\noutput_path = Path.cwd()\noutput_csv_path = output_path\/'output_csvs\/'\nPath(output_csv_path).mkdir(parents=True, exist_ok=True)","ea83a022":"df = pd.read_csv(label_csv_path)","698dad51":"df.head()","da53f8c5":"def extract_date(string):\n    pattern = r'(\\d+)'\n    match = re.findall(pattern=pattern,string=string)\n    return (match[0],match[1])","7441dff4":"def extract_file_id(string):\n    pattern = r'_(L.+)'\n    match = re.findall(pattern=pattern,string=string)\n    return match[0]","a8e86be6":"df['year'],df['month'] = zip(*df['filename'].progress_map(extract_date))","94c0a75d":"df['file_id'] = df['filename'].progress_map(extract_file_id)","52dd2860":"df.head()","36be6e8a":"df['year'].value_counts()","ed77864f":"df['month'].value_counts()","6cb82d80":"gdf = gpd.GeoDataFrame(df)\ngdf['geometry'] = gdf['geometry'].progress_map(shapely.wkt.loads)","1bffda1a":"print('data type of geometry column before conversion: ', df['geometry'].dtype)\nprint('data type of geometry column after conversion: ', gdf['geometry'].dtype)","dda6980a":"display(df['geometry'][0])\nprint(gdf['geometry'][0])\ndisplay(gdf['geometry'][1])","126d8bff":"gdf.crs = 'EPSG:4326'","5bac5d41":"gdf.crs","92f2b77e":"gdf.to_file(output_csv_path\/\"global_geodataframe.gpkg\", driver=\"GPKG\")","ac745098":"sample_image_id = 'L15-0506E-1204N_2027_3374_13'","4ad83784":"sample_gdf = gdf[gdf['file_id'] == sample_image_id].copy()","1481f5d2":"sample_gdf['id'].value_counts()","1a2530f3":"sample_gdf.to_file(output_csv_path\/\"sample_geodataframe.gpkg\", driver=\"GPKG\")","373b7519":"## Define Directory Paths","0b8b1403":"## Import Dependencies","916cc31e":"### Set the Coordinate Reference System (crs) of our GeoDataFrame","9460c15d":"Let's have a look at the difference between the output of a WKT string, and a shapely polygon.","e01e734c":"We do the same for extracting the file_id from the filename string.","03faa2f0":"The function below will extract the unique file id from the input string.","d0dc5269":"### Convert Well Known Text (WKT) format to shapely polygons\n\nCurrently the WKT is under the geometry column in our dataframe, and it is formatted as a string. \n\nIn order to get the most out of our polygons, we need to convert them from WKT format to shapely polygon.\n\nWe will also convert our dataframe into geodataframe, which is a dataframe with built in support for spatial data and polygons. It includes methods that will make it easier for us to analyze our vector data, while maintining our georeferencing.","2850d226":"Great, looking great!","98305e41":"The function below will use regex to extract the year and month from an input string.","4cbe87b8":"We will also extract a subset of our labels, that correspond to the SpaceNet 7 building training sample images.","fb2a0b4a":"Let's have a look at the output we have so far:","f05d7cb0":"In this notebook we are going to check out the csv files containing the labels and extract some important metadata that we can possibly use for data augmentation.","b7410228":"### Extract File Metadata\n#### Notes on file names\n\n-     The format of a filename (as defined above for the footprint definition CSV file) is:\n   `global_monthly_<time>_mosaic_<AOI-name>`\n    for example:\n    `global_monthly_2018_02_mosaic_L15-0369E-1244N_1479_3214_13`\n\n- `<time>` is a timestamp in YYYY_MM format that represents when image collection happened.\n \n-    `<AOI-name>` is a unique identifier of a location. All AOI-names are 28 characters long.\n\n-   All ids (filenames and AOI names) are case sensitive.\n\n-   Image data is stored in files named `<filename>.tif` in the images, images_masked and UDM_masks folders. ","6bdd9fa2":"We then map the extrac_date function on the column containing our filename string in our dataframe, and place them in 2 new columns. One column for the year and one for the month.","df489976":"Now that we have extracted the metadata, let's try and further understand the contents of the dataframe. \n\nOur dataframe contains information about the polygons that appear in our satellite imagery data. The dataset consists of satellite imagery for specific regions around the world. These regions are sampled every month using a satellite. These images are then annotated by proffesional annotators, and the geolocation of the building polygon is stored in a format known as Well Known Text (WKT). \n\nSince this dataset is about change detection in satellite imagery we expect that the number of polygons will increase as the year number increases, because the area in which the satellite image is being taken is being built, therefore the total number of polygons would increase. \n\nLet's have a look below.","be72fe97":"## Read CSV into pandas DataFrame","4aa65cbd":"# Creating and Packaging GeoDataFrame from CSV","0e4a120c":"## About our Data","6e93a3c6":"## Saving our GeoDataFrames\nFinally let's save our GeoDataFrames into a format known as GeoPackage, this will allow us to save the data for ease of access later on.","1aa02028":"According to the dataset, the crs our polygons is EPSG:4326, but what really is that?\n\nA coordinate reference system defines a specific map projection, as well as transformations between different spatial reference systems. So basically by defining our crs we are able to accurately plot our polygons on a map. \n\nNote that if we wanted to plot our polygons on top of an existing basemap, then both our basemap and the polygons should have the same crs."}}