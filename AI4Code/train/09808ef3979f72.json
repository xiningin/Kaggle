{"cell_type":{"1b99cea1":"code","3613de83":"code","2866cf8c":"code","9bcd0fd3":"code","d64bdf88":"code","503afb21":"code","11014345":"code","fa7c6cc2":"code","1a1d5c84":"code","1979bd1c":"code","97704344":"code","4b08047f":"code","3f6d88c9":"code","dfc61098":"code","ff01ed24":"code","eb207102":"code","77996c30":"code","771f3805":"code","b136aa26":"code","59bcb334":"code","2f511f5c":"code","e14bc8d6":"markdown"},"source":{"1b99cea1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import precision_score, recall_score, f1_score, log_loss, accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3613de83":"link_train=\"\/kaggle\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv\"\ndf=pd.read_csv(link_train)","2866cf8c":"df.columns","9bcd0fd3":"df.head()","d64bdf88":"df.describe()","503afb21":"df.groupby(\"Loan_Status\").Loan_Status.count()","11014345":"df.duplicated().any()","fa7c6cc2":"plt.figure(figsize=(10,6))\nsns.countplot(df['Loan_Status'])\nprint(\"Yes: \", df.Loan_Status.value_counts()[0]\/len(df))\nprint(\"No: \", df.Loan_Status.value_counts()[1]\/len(df))","1a1d5c84":"sns.swarmplot(x=\"Credit_History\", y=\"Loan_Status\", data=df)","1979bd1c":"plt.figure(figsize=(6,6))\nsns.countplot(x='Married', hue='Loan_Status', data=df)\n# if one is married, the person has a higher chance of getting the loan","97704344":"df.groupby(\"Dependents\").Dependents.count()","4b08047f":"plt.figure(figsize=(6,6))\nsns.countplot(x='Dependents', hue='Loan_Status', data=df)","3f6d88c9":"sns.countplot(x='Education',hue='Loan_Status',data=df)","dfc61098":"sns.countplot(x='Self_Employed',hue='Loan_Status',data=df)","ff01ed24":"sns.countplot(x='Gender',hue='Loan_Status',data=df)","eb207102":"df.groupby(\"Loan_Status\").median()","77996c30":"df.isnull().sum().sort_values(ascending=False)","771f3805":"cat=[]\nnum=[]\nfor i,c in enumerate (df.dtypes):\n    if c == object:\n        cat.append(df.iloc[:,i])\n    else:\n        num.append(df.iloc[:,i])","b136aa26":"cat= pd.DataFrame(cat).transpose()\nnum = pd.DataFrame(num).transpose()","59bcb334":"cat.head()","2f511f5c":"num.head()","e14bc8d6":"# Exploratory Data Analysis"}}