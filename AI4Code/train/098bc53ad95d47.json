{"cell_type":{"ae42dd17":"code","58bc0d77":"code","a8b2eb1a":"code","ea698a27":"code","46eda3ae":"code","fd1bb425":"code","0620ebaa":"code","ccd83d87":"code","1f75a7e4":"code","fd9cd1c7":"code","b47d666b":"code","8a61b492":"code","2851c205":"markdown","c260f27b":"markdown","d10518cb":"markdown","92acb6c9":"markdown","356a03ae":"markdown","a020ae3a":"markdown","f74a38eb":"markdown","d3b59d6f":"markdown"},"source":{"ae42dd17":"%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport spacy\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","58bc0d77":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a8b2eb1a":"BASE = \"\/kaggle\/input\/nlp-getting-started\/\"\ntrain = pd.read_csv(BASE + \"train.csv\")\ntest = pd.read_csv(BASE + \"test.csv\")\nsub = pd.read_csv(BASE + \"sample_submission.csv\")","ea698a27":"# Load the model to get the vectors\nnlp = spacy.load('en_core_web_lg')\n\ntweets = train[['text', 'target']]\ntweets.head()","46eda3ae":"df=tweets.copy()","fd1bb425":"reviews = df #  300 columns\n# We just want the vectors so we can turn off other models in the pipeline\nwith nlp.disable_pipes():\n    vectors = np.array([nlp(tweets.text).vector for idx, tweets in reviews.iterrows()])\n    \nvectors.shape","0620ebaa":"from sklearn.svm import LinearSVC\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(vectors, tweets['target'], \n                                                    test_size=0.1, random_state=1)\n\n\n\n# Create the LinearSVC model\nmodel = LinearSVC(random_state=1, dual=False)\n# Fit the model\nmodel.fit(X_train,y_train)\n\n# Uncomment and run to see model accuracy\nprint(f'Model test accuracy: {model.score(X_test, y_test)*100:.3f}%')","ccd83d87":"tweets_test = test[['id','text']]\ntweets_test.head()","1f75a7e4":"reviews = tweets_test #\n# We just want the vectors so we can turn off other models in the pipeline\nwith nlp.disable_pipes():\n    vectors = np.array([nlp(tweets.text).vector for idx, tweets in reviews.iterrows()])\n    \nvectors.shape","fd9cd1c7":"lr_pred = model.predict(vectors)","b47d666b":"sub['target'] = lr_pred\nsub.to_csv(\"submission.csv\", index=False)\nsub.head()","8a61b492":"if len(sub) == len(test):\n    print(\"Submission dataframe is the same length as test ({} rows).\".format(len(sub)))\nelse:\n    print(\"Dataframes mismatched, won't be able to submit to Kaggle.\")","2851c205":"![image.png](attachment:image.png)","c260f27b":"# Importing","d10518cb":"## test data prep","92acb6c9":"# Disclaimer! This kernel is only for educational purposes and made for fun therefor the content of the kernel should not be taken to seriously!","356a03ae":"# Model","a020ae3a":"## training data prep","f74a38eb":"# 5. Prediction and Submition","d3b59d6f":"# Loading data"}}