{"cell_type":{"cf144305":"code","53e167fa":"code","07c4778e":"code","6b26b733":"code","bbda78c0":"code","60216ecc":"code","4acbf7f8":"code","c5a8b44e":"code","a2ddca22":"code","ed7d83a4":"code","2867f09d":"code","3acb5da7":"code","cc8b4500":"code","7b57720f":"code","c6f64aa6":"code","8fa728e3":"code","8ee81c76":"code","4f901bd8":"code","bfb11abb":"code","4c5ee7a5":"code","52dfb615":"code","86bd77d2":"code","3893340d":"code","5e5bc6f7":"markdown"},"source":{"cf144305":"#!kaggle competitions download -c 2020-ai-exam-fashionmnist-1","53e167fa":"#!unzip 2020-ai-exam-fashionmnist-1.zip","07c4778e":"import torch\nimport torchvision.datasets as data\nimport torchvision.transforms as transforms\nimport random\n\nimport pandas as pd\nimport numpy as np\n","6b26b733":"device = 'cuda' if torch.cuda.is_available() else 'cpu'\n\nrandom.seed(777)\ntorch.manual_seed(777)\nif device == 'cuda':\n  torch.cuda.manual_seed_all(777)","bbda78c0":"learning_rate = 0.1\ntraining_epochs = 15\nbatch_size = 100","60216ecc":"train_data = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-1\/mnist_train_label.csv', header = None)\ntest_data = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-1\/mnist_test.csv', header = None, usecols=range(1, 785))","4acbf7f8":"test_data","c5a8b44e":"train_data","a2ddca22":"x_train_data = train_data.loc[:, 1:784]\ny_train_data = train_data.loc[:, 0]\n\nx_train_data = np.array(x_train_data)\ny_train_data = np.array(y_train_data)\nx_train_data = torch.FloatTensor(x_train_data)\ny_train_data = torch.LongTensor(y_train_data)","ed7d83a4":"train_dataset =  torch.utils.data.TensorDataset(x_train_data, y_train_data)","2867f09d":"data_loader = torch.utils.data.DataLoader(dataset=train_dataset, \n                                          batch_size=batch_size, \n                                          shuffle = True, \n                                          drop_last = True)","3acb5da7":"linear = torch.nn.Linear(784,10, bias = True)","cc8b4500":"torch.nn.init.xavier_normal_(linear.weight)","7b57720f":"model = torch.nn.Sequential(linear).to(device)","c6f64aa6":"loss = torch.nn.CrossEntropyLoss().to(device)\noptimizer = torch.optim.SGD(model.parameters(), lr = learning_rate)","8fa728e3":"print(len(data_loader))","8ee81c76":"total_batch = len(data_loader)\nfor epoch in range(training_epochs):\n  avg_cost = 0\n\n  for X, Y in data_loader:\n    X = X.to(device)\n    Y = Y.to(device)\n\n    optimizer.zero_grad()\n    hypothesis = model(X)\n    cost = loss(hypothesis, Y)\n    cost.backward()\n    optimizer.step()\n\n    avg_cost += cost\/total_batch\n  print(epoch+1)\n  print(avg_cost)\nprint(\"f\")","4f901bd8":"with torch.no_grad():\n  test_data.loc[:, 783] = 0\n  x_test = test_data.loc[:,:]\n  x_test = np.array(x_test)\n  x_test = torch.from_numpy(x_test).float().to(device)\n  prediction = model(x_test)\n  correct = torch.argmax(prediction, 1)\ncorrect","bfb11abb":"correct = correct.cpu().numpy().reshape(-1, 1)\ncorrect","4c5ee7a5":"submit = pd.read_csv('..\/input\/2020-ai-exam-fashionmnist-1\/submission.csv')\nsubmit","52dfb615":"for i in range(len(correct)):\n  submit['Category'][i] = correct[i].item()\nsubmit","86bd77d2":"submit.to_csv('submit.csv', index = False, header = True)","3893340d":"#!kaggle competitions submit -c 2020-ai-exam-fashionmnist-1 -f submit.csv -m \"result\"","5e5bc6f7":"!pip uninstall kaggle<br>\n!pip install --upgrade pip<br>\n!pip install kaggle==1.5.6<br>\n!mkdir -p ~\/.kaggle<br>\n!cp kaggle.json ~\/.kaggle<br>\n!ls -lha kaggle.json<br>\n!chmood 600 ~\/.kaggle\/kaggle.json<br>"}}