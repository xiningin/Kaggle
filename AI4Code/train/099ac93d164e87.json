{"cell_type":{"f182c4a9":"code","cb409100":"code","4c5bf69b":"code","b8c76925":"code","e53d43b2":"code","6697d56d":"code","f7dfb49e":"code","9bdb6b24":"code","3064a84f":"code","40bbde1f":"code","49a230fc":"code","3990c1bd":"code","feb75d28":"code","7c30830c":"code","c827ebd8":"code","7c5d78b3":"code","68337f48":"code","a29f47d3":"markdown","f09df8e8":"markdown","b4a02efe":"markdown","7e03394c":"markdown","1b484e26":"markdown","43300edd":"markdown","eb52917b":"markdown","52a36376":"markdown","ffb7c373":"markdown"},"source":{"f182c4a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb409100":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport lightgbm as lgb\nimport plotly.express as px","4c5bf69b":"Raindf = pd.read_csv(\"..\/input\/rainfall-in-pakistan\/Rainfall_1901_2016_PAK.csv\")","b8c76925":"df = Raindf.copy()","e53d43b2":"df.info()","6697d56d":"df.head()","f7dfb49e":"df.shape","9bdb6b24":"df.rename(columns ={' Year':'year'}, inplace=True)\ndf.rename(columns ={\"Month\":'month'}, inplace=True)\ndf.rename(columns ={\"Rainfall - (MM)\":'rainfall-mm'}, inplace=True)","3064a84f":"df.head()","40bbde1f":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"year\"].loc[(df.year >=2000)].loc[(df.month==\"January\")], y=df[\"rainfall-mm\"])","49a230fc":"plt.figure(figsize=(10, 6))\nsns.barplot(x=df[\"year\"].loc[(df.year >=2000)].loc[(df.month==\"February\")], y=df[\"rainfall-mm\"])","3990c1bd":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"year\"].loc[(df.year>=2000)].loc[(df.month==\"March\")], y=df[\"rainfall-mm\"])","feb75d28":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"year\"].loc[(df.year>=2000)].loc[(df.month==\"April\")], y=df[\"rainfall-mm\"])","7c30830c":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"year\"].loc[(df.year >=2000)].loc[(df.month ==\"May\")],y=df[\"rainfall-mm\"])","c827ebd8":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"year\"].loc[(df.year >=2000)].loc[(df.month ==\"June\")],y=df[\"rainfall-mm\"])","7c5d78b3":"px.scatter(df.loc[(df.year >= 2000)], x=\"year\", y=\"rainfall-mm\", \n          animation_frame = \"year\", animation_group=\"month\",\n          size=\"rainfall-mm\", color=\"month\", hover_name=\"month\", \n          title='rain in each month form 2000-2016',\n          log_x=True, size_max=100, range_x=[1998, 2018], range_y=[0, 200])","68337f48":"px.bar(df.loc[(df.year >=2000)], x=\"year\", y=\"rainfall-mm\", animation_frame=\"year\", animation_group=\"month\",\n            color=\"month\", hover_name=\"month\",title=' Rain fall-(mm) in each month from 2000 to 2016',\n           log_x=True, range_x=[1998,2018], range_y=[0,400])","a29f47d3":"**First Look**","f09df8e8":"**Quick Check**","b4a02efe":"**February**","7e03394c":"**Import the required Libraries**","1b484e26":"**Rains in March**","43300edd":"* There Seems to be no missing Values","eb52917b":"**DataFrame Looks Okay.**","52a36376":"**Copy Real DataSet**","ffb7c373":"**Load Dataset**"}}