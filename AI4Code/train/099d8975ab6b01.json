{"cell_type":{"6b428a94":"code","ff289250":"code","f19f356d":"code","255f2734":"code","d2d4bb49":"code","29270972":"code","0d6f7c02":"code","c29893f1":"code","ada5789b":"code","521a7db4":"code","8a3e2cbc":"code","d0d9f0e4":"code","02cff001":"code","1521514f":"code","6009dd23":"code","3071ad1e":"code","8bf5502c":"code","a584e64d":"code","951d0801":"code","466b5b1e":"code","d1493118":"code","3351435a":"code","13a99812":"markdown","8ed25fe1":"markdown","38336174":"markdown","cb401ac8":"markdown","bcd6e1a4":"markdown","17aedd4a":"markdown","d1c17074":"markdown","17d412b2":"markdown","622b52f9":"markdown","e3231864":"markdown","3f3b0523":"markdown","85becbd6":"markdown","22ec3830":"markdown","7ca8ec13":"markdown"},"source":{"6b428a94":"import matplotlib.pyplot as plt\nf = plt.figure(figsize=(18,12))\nimg = plt.imread('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/Stephen.jpg')\nplt.imshow(img)\nplt.axis('off')\nplt.show()","ff289250":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport seaborn as sns\nfrom matplotlib import cm\nfrom matplotlib.colors import ListedColormap, LinearSegmentedColormap\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom skimage import io\nfrom sklearn.cluster import KMeans\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f19f356d":"total_season = pd.read_csv('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/Stephen Curry Stats.csv')\nregular_season = pd.read_csv('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/Stephen Curry Regularseason Stats.csv')\npost_season = pd.read_csv('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/Stephen Curry Postseason Stats.csv')\npre_season = pd.read_csv('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/Stephen Curry Preseason Stats.csv')\nnba_logo = pd.read_csv('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/NBA_Team_logos_data.csv')","255f2734":"colors = []\n\nimg = io.imread('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/NBA_team_logos\/Golden State Warriors.gif')\nimg_r = img.reshape((img.shape[0] * img.shape[1], 4))\n\nk = 5\nclt = KMeans(n_clusters = k)\nclt.fit(img_r)\n\nfor center in clt.cluster_centers_:\n    color = [int(i) for i in list(center)]\n    colors.append('#%02x%02x%02x' % (color[0], color[1], color[2]))\n\nf, ax = plt.subplots(1, 1, figsize=(6, 4))\nax.imshow(img)\nax.set_xticks([])\nax.set_yticks([])\nsns.palplot(colors, size=1)\n\nplt.show()\nprint(colors)","d2d4bb49":"main_colors = ['#20448b', '#f1b229', '#8e7e55', '#8e9fc3']\nsns.set_palette(sns.color_palette(main_colors))\ncmap = mpl.colors.LinearSegmentedColormap.from_list('', ['white', main_colors[1]])","29270972":"total_season.head()","0d6f7c02":"def color_negative(value):\n    if value > 0:\n        color = main_colors[1]\n    else:\n        color = 'black'\n    return 'color: %s' % color\n\ntotal_season.describe().T.style.applymap(color_negative, subset=['max'])","c29893f1":"cols = total_season.columns\ndetail_record = pd.DataFrame(columns=cols)\n\ndetail_record.loc['Max_MIN'] = total_season.loc[total_season['MIN'] == total_season['MIN'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_FGM'] = total_season.loc[total_season['FGM'] == total_season['FGM'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_3PTM'] = total_season.loc[total_season['3PTM'] == total_season['3PTM'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_FTM'] = total_season.loc[total_season['FTM'] == total_season['FTM'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_REB'] = total_season.loc[total_season['REB'] == total_season['REB'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_AST'] = total_season.loc[total_season['AST'] == total_season['AST'].max(), :].values[0].reshape(-1)\ndetail_record.loc['Max_BLK'] = total_season.loc[total_season['BLK'] == total_season['BLK'].max(), :].values[0].reshape(-1)\ndetail_record.loc['Max_STL'] = total_season.loc[total_season['STL'] == total_season['STL'].max(), :].values[0].reshape(-1)\ndetail_record.loc['Max_TO'] = total_season.loc[total_season['TO'] == total_season['TO'].max(), :].values.reshape(-1)\ndetail_record.loc['Max_PTS'] = total_season.loc[total_season['PTS'] == total_season['PTS'].max(), :].values.reshape(-1)\n\ndetail_record.T\n\n# AST, BLK, STL\uc740 Max \uac1c\uc218\uac00 \ub3d9\uc77c\ud55c \uacbd\uae30\uac00 2\uac1c \uc774\uc0c1\uc73c\ub85c \uacb0\uacfc\uac12\uc911 \uccab\ubc88\uc9f8 \uacbd\uae30\ub9cc \uac00\uc838\uc624\uac8c \ud568","ada5789b":"regular_season.head()","521a7db4":"def highlight_max(data, color=main_colors[1]):\n    attr = 'color: {}'.format(color)\n    if data.ndim == 1:  # Series from .apply(axis=0) or axis=1\n        is_max = data == data.max()\n        return [attr if v else '' for v in is_max]\n    else:  # from .apply(axis=None)\n        is_max = data == data.max().max()\n        return pd.DataFrame(np.where(is_max, attr, ''),\n                            index=data.index, columns=data.columns)\n\nregular_season_x = regular_season.drop(['Season_div', 'Date', 'OPP', 'Result', 'T Score', 'O Score', 'FG', '3PT', 'FT'], axis=1)\nregular_stats2 = pd.DataFrame(columns=list(regular_season_x.columns))\nseasons = regular_season['Season_year'].unique()\n\nfor s in seasons:\n    regular_stats2.loc[s] = regular_season_x.loc[regular_season_x['Season_year'] == s, :].sum().values.reshape(-1)\n\ngames = []\nfor s in seasons:\n    games.append(\n    regular_season_x.loc[regular_season_x['Season_year'] == s, 'MIN'].count())\n\nregular_stats2 = regular_stats2.drop(['Season_year', 'FG%', '3P%', 'FT%'], axis=1)\nregular_stats2['Game'] = games\nregular_stats2 = regular_stats2[['Game', 'MIN', 'FGM', 'FGA', '3PTM', '3PTA', 'FTM', 'FTA', 'REB', 'AST', 'BLK', 'STL', 'PF', 'TO', 'PTS']]\nregular_stats2.style.format('{:.1f}').apply(highlight_max)","8a3e2cbc":"regular_stats2.loc['Total'] = regular_stats2.sum().values\nregular_stats2.loc[['Total']]","d0d9f0e4":"regular_stats = pd.DataFrame(columns=list(regular_season_x.columns))\nregular_stats = regular_stats.drop('Season_year', axis=1)\nseasons = regular_season_x['Season_year'].unique()\n\nregular_stats['FG%'] = regular_stats2['FGM'] \/ regular_stats2['FGA'] * 100\nregular_stats['3P%'] = regular_stats2['3PTM'] \/ regular_stats2['3PTA'] * 100\nregular_stats['FT%'] = regular_stats2['FTM'] \/ regular_stats2['FTA'] * 100\nregular_stats = regular_stats.drop('Total', axis=0)\n\nfor s in seasons:\n    regular_stats.loc[s] = regular_season_x.loc[regular_season_x['Season_year'] == s, :].mean().round(2).values.reshape(-1)\n\nregular_stats.style.format('{:.1f}').apply(highlight_max)","02cff001":"regular_stats = regular_stats.astype(float)\ncols = regular_stats.columns\n\nf, ax = plt.subplots(6, 3, figsize=(18,18))\n\nfor i in range(6):\n    for j in range(3):\n        if (i*3)+j < 17:\n            sns.lineplot(data=regular_stats, x=regular_stats.index, \n                         y=regular_stats[cols[(i*3)+j]], color=main_colors[1], ax=ax[i][j])\n            ax[i][j].set_title('{}'.format(cols[(i*3)+j]))\n            ax[i][j].set_xticks([])\n            ax[i][j].set_ylabel('')\n            \n        else:\n            pass\n        \nax.flatten()[-1].axis('off')\nsns.despine()\nplt.subplots_adjust(wspace=0.1, hspace=0.3)\nplt.show()","1521514f":"regular_stats2 = regular_stats2.drop('Total', axis=0)\n\nfig, ax = plt.subplots(2, 1, figsize=(12,12))\n\n# ax[0]\nsns.barplot(data=regular_stats2, x=regular_stats2.index, y=regular_stats2['3PTM']\/50, \n            label='TOTAL_3PTM', color=main_colors[0], ax=ax[0])\nsns.lineplot(data=regular_stats, x=regular_stats.index, y=regular_stats['3PTM'], \n            label='AVG_3PTM', color=main_colors[1], linewidth=3, ax=ax[0])\n\ntpt_text = regular_stats['3PTM'].values\ntpt_text2 = regular_stats2['3PTM'].values\n\nfor t in range(len(tpt_text)):\n    ax[0].text(s=tpt_text[t], x=(t-0.2), y=tpt_text[t]-0.5, fontsize=10, color=main_colors[1])\n    ax[0].text(s=tpt_text2[t], x=(t-0.2), y=(tpt_text2[t]\/50)+0.1, fontsize=10, color=main_colors[0])\n\nax[0].legend(loc='upper left')\nax[0].set_ylabel('')\nax[0].set_yticks([])\nax[0].set_xticks([])\n\n# ax[1]\nsns.barplot(data=regular_stats, x=regular_stats.index, y=regular_stats['3PTA'],\n            label='AVG_3PTA', color=main_colors[3], ax=ax[1])\nsns.barplot(data=regular_stats, x=regular_stats.index, y=regular_stats['3PTM'], \n            label='AVG_3PTM', color=main_colors[0], ax=ax[1])\nsns.lineplot(data=regular_stats, x=regular_stats.index, y=regular_stats['3P%']\/20, \n            label='AVG_3PT%', color=main_colors[1], linewidth=3, ax=ax[1])\n\nhpt_text = regular_stats['3PTA'].values\nhpt_text2 = regular_stats['3PTM'].values\nhpt_text3 = regular_stats['3P%'].values\n\nfor t in range(len(hpt_text)):\n    ax[1].text(s=hpt_text[t], x=(t-0.2), y=hpt_text[t]+0.1, fontsize=10, color=main_colors[3])\n    ax[1].text(s=hpt_text2[t], x=(t-0.2), y=hpt_text2[t]+0.1, fontsize=10, color=main_colors[0])\n    ax[1].text(s='{}%'.format(hpt_text3[t]), x=(t-0.3), y=(hpt_text3[t]\/20)-0.5, fontsize=10, color=main_colors[1])\n\nax[1].set_ylabel('')\nax[1].set_yticks([])\nax[1].set_xticklabels(labels=regular_stats.index, fontsize=8)\n\nplt.subplots_adjust(wspace=0.1, hspace=0.05)\nplt.show()","6009dd23":"fig, ax = plt.subplots(1, 1, figsize=(12, 12))\n\nsns.scatterplot(data=total_season, x='MIN', y='PTS', hue='Season_year', size='3PTM', alpha=0.5,\n                palette='PuBu', ax=ax)\nplt.show()","3071ad1e":"# making Cmap\n\nfrom matplotlib.colors import ListedColormap, LinearSegmentedColormap\n\ncmap_1 = mpl.colors.LinearSegmentedColormap.from_list('', ['white', main_colors[0]])","8bf5502c":"def highlight_min(data, color=main_colors[0]):\n    attr = 'color: {}'.format(color)\n    if data.ndim == 1:  # Series from .apply(axis=0) or axis=1\n        is_min = data == data.min()\n        return [attr if v else '' for v in is_min]\n    else:  # from .apply(axis=None)\n        is_min = data == data.min().min()\n        return pd.DataFrame(np.where(is_min, attr, ''),\n                            index=data.index, columns=data.columns)\n\nregular_team = regular_season.groupby('OPP').mean()\nregular_team['Games'] = regular_season[['Result', 'OPP']].groupby('OPP').count().values\nregular_team['W'] = regular_season.loc[regular_season['Result']=='W', ['Result', 'OPP']].groupby('OPP').count().values\nregular_team['L'] = regular_season.loc[regular_season['Result']=='L', ['Result', 'OPP']].groupby('OPP').count().values\nregular_team['W\/L'] = regular_team['W'] - regular_team['L']\nregular_team['T\/O Score'] = regular_team['T Score'] - regular_team['O Score']\n\nteam_stats = ['Games', 'W', 'L', 'W\/L', 'T Score', 'O Score', 'T\/O Score']","a584e64d":"regular_team_t = regular_team[team_stats]\nregular_team_t.style.format('{:.1f}').apply(highlight_max).apply(highlight_min)\\\n.bar(subset=['W\/L', 'T\/O Score'], align='mid', color=[main_colors[3], main_colors[0]])\n\n# regular_season.groupby('OPP').mean().style.format('{:.1f}').highlight_max(color=main_colors[1])\\\n# .highlight_min(color=main_colors[3])","951d0801":"drop_stats = team_stats + ['FG%', '3P%', 'FT%']\n\nregular_team_c = regular_team.drop(drop_stats, axis=1)\nregular_team_c.style.format('{:.1f}').apply(highlight_max).apply(highlight_min)","466b5b1e":"ini_names = regular_team.index.values\nfull_names = nba_logo['Name'].values\nfull_names = np.delete(full_names, 9, axis=0)\n\nteam_name_dict = {i:j for i,j in zip(ini_names, full_names)}","d1493118":"for t in range(len(regular_team.index.values)):\n    n = len(regular_team.index.values)\n    fig = plt.figure(figsize=(12, 3*n))\n    gs = fig.add_gridspec(n, 4)\n    \n    ini_n = ini_names[t]\n    full_n = team_name_dict[ini_n]\n    \n#     t_t = regular_team_t.iloc[regular_team_t.index == ini_n, :]\n    t_c = regular_team_c.iloc[regular_team_c.index == ini_n, :]\n    t_img = io.imread('\/kaggle\/input\/stephen-curry-stats-20092021-in-nba\/NBA_team_logos\/{}.gif'.format(full_n))\n    \n    ax_t_1 = fig.add_subplot(gs[t, :3])\n    ax_t_2 = fig.add_subplot(gs[t, 3])\n\n    idx_t = ax_t_1.bar(data=t_c, x=t_c.columns, height=t_c.values.reshape(-1), color=main_colors[0])\n    ax_t_2.imshow(t_img)\n    \n    ax_t_1.set_title('VS {}'.format(full_n), size=14, loc='left')\n    ax_t_1.bar_label(idx_t, fmt='%.1f', color=main_colors[0])\n    ax_t_1.spines['top'].set_visible(False)\n    ax_t_1.spines['right'].set_visible(False)\n    ax_t_2.axis('off')\n            \nplt.subplots_adjust(wspace=0.1, hspace=0.1)\nplt.show()","3351435a":"post_season.head()","13a99812":"## EDA(Exploratory Data Analysis) ##","8ed25fe1":"### Changes in made and made rate of 3Points throw","38336174":"to be continue","cb401ac8":"### detail in the match related each of records","bcd6e1a4":"### What I found out\n\n* During Curry's playing period, the lowest score GSW earned in a game is 70 points and the highest score is 149 points\n* During Curry's playing period, the lowest score other team earned in a game is 63 points and the highest score is 141 points\n* Curry's shortest playing minutes in a single game is 2 minutes and longest is 58 minutes\n* Curry's minimum of made field goals in a single game is 0 and maximum is 20\n* Curry's minimum of attempted field goals in a single game is 0 and maximum is 35\n* Curry's minimum of made 3 points goals in a single game is 0 and maximum is 13\n* Curry's minimum of attempted 3 points goals in a single game is 0 and maximum is 20\n* Curry's minimum of made free throws in a single game is 0 and maximum is 18\n* Curry's minimum of attempted free throws in a single game is 0 and maximum is 19\n* Curry's minimum of rebounds in a single game is 0 and maximum is 15\n* Curry's minimum of assists in a single game is 0 and maximum is 16\n* Curry's minimum of blocks in a single game is 0 and maximum is 3\n* Curry's minimum of steals in a single game is 0 and maximum is 7\n* Curry's minimum of turn overs in a single game is 0 and maximum is 11\n* Curry's minimum of got points in a single game is 0 and maximum is 62\n\n\n\n\uc54c\uac8c \ub41c \uac83\n\n* \ucee4\ub9ac\uac00 \ub6f0\ub294 \uae30\uac04\uc911 \uace8\ub4e0\uc2a4\ud14c\uc774\ud2b8\uac00 \ud55c \uacbd\uae30\uc5d0\uc11c \ud68d\ub4dd\ud55c \ucd5c\uc18c \uc810\uc218\ub294 70\uc810, \ucd5c\ub2e4 \uc810\uc218\ub294 149\uc810\uc774\ub2e4.\n* \ucee4\ub9ac\uac00 \ub6f0\ub294 \uae30\uac04\uc911 \uc0c1\ub300\ud300\uc774 \ud55c \uacbd\uae30\uc5d0\uc11c \ud68d\ub4dd\ud55c \ucd5c\uc18c \uc810\uc218\ub294 63\uc810, \ucd5c\ub2e4 \uc810\uc218\ub294 141\uc810\uc774\ub2e4.\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \ucd9c\uc804 \uc2dc\uac04\uc740 \ucd5c\uc18c 2\ubd84, \ucd5c\ub300 58\ubd84\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc57c\ud22c \uc131\uacf5 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 20\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc57c\ud22c \uc2dc\ub3c4 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 35\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 3\uc810 \uc131\uacf5 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 13\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 3\uc810 \uc2dc\ub3c4 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 20\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc790\uc720\ud22c \uc131\uacf5 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 18\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc790\uc720\ud22c \uc2dc\ub3c4 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 19\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \ub9ac\ubc14\uc6b4\ub4dc \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 15\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc5b4\uc2dc\uc2a4\ud2b8 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 16\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \ube14\ub77d \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 3\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \uc2a4\ud2f8 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 7\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \ud134\uc624\ubc84 \uac1c\uc218\ub294 \ucd5c\uc18c 0\uac1c, \ucd5c\ub2e4 11\uac1c\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n* \ucee4\ub9ac\uc758 \ud55c \uacbd\uae30 \ud68d\ub4dd\ud55c \ucd5c\uc18c \uc810\uc218\ub294 0\uc810, \ucd5c\ub2e4 \uc810\uc218\ub294 62\uc810\uc774\ub2e4. (\uacb0\uc7a5 \uc81c\uc678)\n","17aedd4a":"### Main colors ###\n\nStephen Curry has playing for only one team 'Golden State Warriors' since his debut in NBA. \nI think Gold, Blue and White are trade colors from the team and him","d1c17074":"## Records","17d412b2":"### What I found out\n\n\n* Curry's average playing minute is highest in 2012-2013 season. Generally his playing time is in 33-36 minutes. After Steve Kerr's appointed to director of GSW, his playing minutes is almost under 35 minutes\n\n* Curry's average assists, turnovers are highest in 2013-2014 season, which is thought to be a result of his high proportion of ball possession due to the PG(Point Guard) position's characteristics. Also, after 2013-2014 season, his number of average assists decrease about two, That's beause his teammate Draymond Green was playing as a playmaker with him, and Curry transformed into a more scoring-focused play style.\n\n* Curry's average FG%(field goals percentage), 3PT%(3 points field goals percentage) and steals are highest 2015-2016 season which was Curry's unanimous MVP. Also the almost season stats (attempted field goals, made field goals, attempted 3 points field goals, made 3 points field goals, attempted free throws, made free throws, rebounds, steals, points) are the maximum in that season.\n\n* Most other average records are the highest in 2020-2021 season. Especially, Curry is making records about offense stats(average attempted field goals, average made field goals, average attempted 3 points field goals, average made 3 points field goals, average attempted free throws, average made free throws, average points). The absence of Klay Thompson who is GSW's second option player is the biggest  reason for that records\n\n\n\n\uc54c\uac8c \ub41c \uac83\n\n* \ucee4\ub9ac\uc758 \ud3c9\uade0 \ucd9c\uc804 \uc2dc\uac04\uc740 2012-2013 \uc2dc\uc98c\uc774 \uac00\uc7a5 \ub192\ub2e4. \uc804\uccb4\uc801\uc73c\ub85c 33-36\ubd84 \ub0b4\uc678\uc774\uba70 \ud2b9\ud788 \uc2a4\ud2f0\ube0c\ucee4 \uac10\ub3c5\uc774 \ubd80\uc784\ud55c \uc774\ud6c4\uc5d0\ub294 35\ubd84 \ubbf8\ub9cc\uc73c\ub85c \uad00\ub9ac\ub418\uace0 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4.\n\n* \ucee4\ub9ac\uc758 \ud3c9\uade0 \uc5b4\uc2dc\uc2a4\ud2b8\uc640 \ud134\uc624\ubc84\ub294 2013-2014 \uc2dc\uc98c\uc774 \uac00\uc7a5 \ub192\uc73c\uba70 \uc774\ub294 \ud3ec\uc9c0\uc158 \ud2b9\uc131\uc0c1 \ubcfc\uc18c\uc720 \ube44\uc911\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \ub098\ud0c0\ub098\ub294 \uacb0\uacfc\ub85c \uc0dd\uac01\ub41c\ub2e4. \ub610\ud55c 2013-2014 \uc2dc\uc98c \uc774\ud6c4\uc5d0\ub294 \uc5b4\uc2dc\uc2a4\ud2b8 \uc218\uce58\ub294 \uc57d 2\uac1c \uac00\ub7c9 \ub5a8\uc5b4\uc84c\ub294\ub370 \uc774\ub294 \ub3d9\ub8cc\uc120\uc218\uc778 \ub4dc\ub808\uc774\uba3c\ub4dc \uadf8\ub9b0\uc774 \ud50c\ub808\uc774\uba54\uc774\ud0b9\uc744 \ud568\uaed8 \ud574\uc8fc\uba70 \ucee4\ub9ac\ub294 \uc880 \ub354 \uc2a4\ucf54\uc5b4\ub9c1\uc5d0 \uc9d1\uc911\ud558\ub294 \ud50c\ub808\uc774\uc2a4\ud0c0\uc77c\ub85c \ubcc0\ubaa8\ud568\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ub2e8, \uc5b4\uc2dc\uc2a4\ud2b8 \uc218\uce58 \ud558\ub77d\uc5d0 \ube44\ud574 \ud134\uc624\ubc84 \uc218\uce58\ub294 \uc18c\ud3ed \ub5a8\uc5b4\uc838 \ud328\uc2a4 \ud6a8\uc728\uc740 \uacfc\uac70\uc5d0 \ube44\ud574 \ub5a8\uc5b4\uc84c\ub2e4\uace0 \ud310\ub2e8\ub41c\ub2e4.\n\n* \ucee4\ub9ac\uc758 \uc57c\ud22c\uc728\uacfc \uc0bc\uc810\uc131\uacf5\ub960, \uc2a4\ud2f8\uc740 2015-2016 \uc2dc\uc98c\uc774 \uac00\uc7a5 \ub192\uc73c\uba70 \uc774\ub294 \ucee4\ub9ac\uc758 \ub9cc\uc7a5\uc77c\uce58 MVP \uc2dc\uc808\uc774\ub2e4. \ub610\ud55c \ud574\ub2f9 \uc2dc\uc98c\uc774 \ud569\uacc4 \uae30\ub85d \ub300\ubd80\ubd84(\uc57c\ud22c \uc2dc\ub3c4, \uc57c\ud22c \uc131\uacf5, \uc0bc\uc810 \uc2dc\ub3c4, \uc0bc\uc810 \uc131\uacf5, \uc790\uc720\ud22c \uc2dc\ub3c4, \uc790\uc720\ud22c \uc131\uacf5, \ub9ac\ubc14\uc6b4\ub4dc, \uc2a4\ud2f8, \uc810\uc218)\uc758 \ucd5c\uace0 \uae30\ub85d\uc774 \ubaa8\uc5ec\uc788\ub294 \uc2dc\uc98c\uc774\uae30\ub3c4 \ud558\ub2e4.\n\n* \uadf8 \uc678 \ub300\ubd80\ubd84\uc758 \ud3c9\uade0 \uae30\ub85d\uc774 \uc774\ubc88 \uc2dc\uc98c\uc778 2020-2021\uc5d0 \uac00\uc7a5 \ub192\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4.\n\ud2b9\ud788 \uacf5\uaca9 \uad00\ub828 \ud56d\ubaa9\ub4e4 \ud3c9\uade0 \uc810\uc218, \uc57c\ud22c, 3\uc810, \uc790\uc720\ud22c\uc758 \uc2dc\ub3c4 \ubc0f \uc131\uacf5 \uac1c\uc218\uc5d0\uc11c \ubaa8\ub450 \ucee4\ub9ac\uc5b4 \ucd5c\ub2e4\ub97c \uae30\ub85d\ud558\uace0 \uc788\ub2e4. 2\uc635\uc158\uc778 \ud074\ub808\uc774\ud0d0\uc2a8\uc758 \ubd80\uc0c1\uc73c\ub85c \uc778\ud55c \ubd80\uc7ac\ub85c \ud300 \ub0b4 \uacf5\uaca9\uc5d0\uc11c \uac00\uc7a5 \ud070 \ube44\uc911\uc744 \ucc28\uc9c0\ud568\uc744 \uc54c \uc218 \uc788\ub2e4.\n\uc591\uc801\uc73c\ub85c \uac00\uc7a5 \ub6f0\uc5b4\ub0ac\ub358 2015-2016 \uc2dc\uc98c\uc5d0 \ube44\uad50\ud574 \uacb0\ucf54 \ub4a4\ucc98\uc9c0\uc9c0 \uc54a\uc73c\uba70 \ubd80\uc0c1\uc73c\ub85c \uc778\ud55c \uacb0\uc7a5 \ubc0f \ub2e8\ucd95\uc2dc\uc98c\uc73c\ub85c \uc778\ud55c \uacbd\uae30\uc218 \uac10\ucd95\ub9cc \uc544\ub2c8\uba74 \uc591\uc801\uc73c\ub85c\ub3c4 \uac00\uc7a5 \ub6f0\uc5b4\ub09c \uc2dc\uc98c\uc774 \ub420 \uc218\ub3c4 \uc788\uc744 \uac83\uc774\ub2e4.","622b52f9":"### Analysis of Season stats","e3231864":"## Regular Season Stats","3f3b0523":"## Importing and Reading Dataset ##","85becbd6":"### Curry's Average Stats by Team","22ec3830":"## Post Season","7ca8ec13":"### Average stats in regular season"}}