{"cell_type":{"a22d7918":"code","2432431f":"code","bba29cb2":"code","14b77e44":"code","402191c8":"code","02882303":"code","f386dad4":"code","948a9bbb":"code","3c41a59f":"code","f3837fcf":"code","1e7411c2":"code","69705292":"code","b89c3302":"code","5ad7d717":"code","77d98950":"code","c3156906":"code","dcf1d5c7":"code","97acccb8":"code","bfe335d6":"code","03c3a9ae":"code","68dcbae9":"code","5cdf1eb0":"code","b1a2ced4":"code","873a84b4":"code","9a830bda":"code","0c775eda":"markdown","543ee29f":"markdown","74162aef":"markdown","5ce60c75":"markdown","7426865d":"markdown","60646b64":"markdown","00cfa409":"markdown","f4c7c041":"markdown","219dc30e":"markdown","6f57608f":"markdown","7ea290c8":"markdown","4649dd59":"markdown","1c4d7f61":"markdown"},"source":{"a22d7918":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2432431f":"forest_data = pd.read_csv('\/kaggle\/input\/learn-together\/train.csv')","bba29cb2":"# Just making things easier here:\nfeatures = ['Elevation', 'Aspect', 'Slope',\n       'Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology',\n       'Horizontal_Distance_To_Roadways', 'Hillshade_9am', 'Hillshade_Noon',\n       'Hillshade_3pm', 'Horizontal_Distance_To_Fire_Points']\nsoil = ['Soil_Type1', 'Soil_Type2', 'Soil_Type3',\n       'Soil_Type4', 'Soil_Type5', 'Soil_Type6', 'Soil_Type7', 'Soil_Type8',\n       'Soil_Type9', 'Soil_Type10', 'Soil_Type11', 'Soil_Type12',\n       'Soil_Type13', 'Soil_Type14', 'Soil_Type15', 'Soil_Type16',\n       'Soil_Type17', 'Soil_Type18', 'Soil_Type19', 'Soil_Type20',\n       'Soil_Type21', 'Soil_Type22', 'Soil_Type23', 'Soil_Type24',\n       'Soil_Type25', 'Soil_Type26', 'Soil_Type27', 'Soil_Type28',\n       'Soil_Type29', 'Soil_Type30', 'Soil_Type31', 'Soil_Type32',\n       'Soil_Type33', 'Soil_Type34', 'Soil_Type35', 'Soil_Type36',\n       'Soil_Type37', 'Soil_Type38', 'Soil_Type39', 'Soil_Type40']\nwilderness_area = ['Wilderness_Area1', 'Wilderness_Area2', 'Wilderness_Area3',\n       'Wilderness_Area4']","14b77e44":"y = forest_data.Cover_Type\nX1 = forest_data[features] # Since this set is so dominate in models I've seen so far, including my own, this is here for the sake of it.\nX2 = forest_data[features + wilderness_area + soil]","402191c8":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split","02882303":"train_X1, val_X1, train_y1, val_y1 = train_test_split(X1, y, test_size=0.4, random_state=1)\ntrain_X2, val_X2, train_y2, val_y2 = train_test_split(X2, y, test_size=0.4, random_state=1)","f386dad4":"rfc_model1 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model1.fit(train_X1, train_y1)\nrfc_val_predictions1 = rfc_model1.predict(val_X1)\nrfc_val_mae1 = mean_absolute_error(rfc_val_predictions1, val_y1)\n\nrfc_model2 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model2.fit(train_X2, train_y2)\nrfc_val_predictions2 = rfc_model2.predict(val_X2)\nrfc_val_mae2 = mean_absolute_error(rfc_val_predictions2, val_y2)\n\nprint(\"Validation MAE for features-only: {:,.2f}\".format(rfc_val_mae1))\nprint(\"Validation MAE for all variables: {:,.2f}\".format(rfc_val_mae2))","948a9bbb":"# Looking at feature importance:\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndef feature_importances(clf, X, y, figsize=(18, 6)):\n    clf = clf.fit(X, y)\n    \n    importances = pd.DataFrame({'Features': X.columns, \n                                'Importances': clf.feature_importances_})\n    \n    importances.sort_values(by=['Importances'], axis='index', ascending=False, inplace=True)\n\n    fig = plt.figure(figsize=figsize)\n    sns.barplot(x='Features', y='Importances', data=importances)\n    plt.xticks(rotation='vertical')\n    plt.show()\n    return importances","3c41a59f":"importances = feature_importances(rfc_model1, X1, y)","f3837fcf":"importances = feature_importances(rfc_model2, X2, y)","1e7411c2":"forest_data['Soil_Type']=''\nforest_data['Wilderness_Area'] = ''\n\nfor col_name in forest_data[soil].columns:\n    forest_data.loc[forest_data[col_name]==1,'Soil_Type']= forest_data['Soil_Type'] + col_name\n\nfor col_name in forest_data[wilderness_area].columns:\n    forest_data.loc[forest_data[col_name]==1,'Wilderness_Area']= forest_data['Wilderness_Area'] + col_name","69705292":"tmp = pd.DataFrame(forest_data['Soil_Type'])\ntmp['Taxonomy_Groups'] = forest_data['Soil_Type']\ntmp['Order_Groups'] = forest_data['Soil_Type']\ntmp['USFS_ELU_Codes'] = forest_data['Soil_Type']\n\ntmp.head()","b89c3302":"tmp['Taxonomy_Groups'] = tmp['Taxonomy_Groups'].replace({'Soil_Type1' : 'Mollisols_Ustolls_Haplustolls',\n                                                        'Soil_Type2' : 'Alfisols_Mollisols',\n                                                        'Soil_Type3' : 'Mollisols_Borolls_Haploborolls',\n                                                        'Soil_Type4' : 'Mollisols_Ustolls_Haplustolls',\n                                                        'Soil_Type5' : 'Alfisols_Ustalfs_Haplustalfs',\n                                                        'Soil_Type6' : 'Alfisols_Ustalfs_Haplustalfs',\n                                                        'Soil_Type7' : 'Mollisols_Cryolls_Agricryolls',\n                                                        'Soil_Type8' : 'Alfisols_Mollisols',\n                                                        'Soil_Type9' : 'Alfisols_Cryalfs_Haplocryalfs',\n                                                        'Soil_Type10' : 'Inceptisols_Cryepts',\n                                                        'Soil_Type11' : 'Inceptisols_Cryepts',\n                                                        'Soil_Type12' : 'Entisols_Orthents_Cryorthents',\n                                                        'Soil_Type13' : 'Inceptisols_Cryepts',\n                                                        'Soil_Type14' : 'Mollisols',\n                                                        'Soil_Type15' : 'Unspecified',\n                                                        'Soil_Type16' : 'Mollisols',\n                                                        'Soil_Type17' : 'Mollisols',\n                                                        'Soil_Type18' : 'Mollisols',\n                                                        'Soil_Type19' : 'Histosols_Mollisols',\n                                                        'Soil_Type20' : 'Inceptisols_Mollisols',\n                                                        'Soil_Type21' : 'Inceptisols_Mollisols',\n                                                        'Soil_Type22' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type23' : 'Inceptisols_Mollisols',\n                                                        'Soil_Type24' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type25' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type26' : 'Alfisols_Inceptisols',\n                                                        'Soil_Type27' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type28' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type29' : 'Entisols_Inceptisols',\n                                                        'Soil_Type30' : 'Entisols_Inceptisols',\n                                                        'Soil_Type31' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type32' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type33' : 'Inceptisols_Cryepts_Dystrocryepts',\n                                                        'Soil_Type34' : 'Entisols_Orthents_Cryorthents',\n                                                        'Soil_Type35' : 'Inceptisols',\n                                                        'Soil_Type36' : 'Inceptisols',\n                                                        'Soil_Type37' : 'Entisols_Inceptisols',\n                                                        'Soil_Type38' : 'Inceptisols_Mollisols',\n                                                        'Soil_Type39' : 'Entisols_Inceptisols',\n                                                        'Soil_Type40' : 'Entisols_Inceptisols'}\n                                                       )\n\ntmp['Taxonomy_Groups'].describe()","5ad7d717":"tmp['Order_Groups'] = tmp['Order_Groups'].replace({'Soil_Type1' : 'Mollisols',\n                                                   'Soil_Type2' : 'Alfisols_Mollisols',\n                                                   'Soil_Type3' : 'Mollisols',\n                                                   'Soil_Type4' : 'Mollisols',\n                                                   'Soil_Type5' : 'Alfisols',\n                                                   'Soil_Type6' : 'Alfisols',\n                                                   'Soil_Type7' : 'Mollisols',\n                                                   'Soil_Type8' : 'Alfisols_Mollisols',\n                                                   'Soil_Type9' : 'Alfisols',\n                                                   'Soil_Type10' : 'Inceptisols',\n                                                   'Soil_Type11' : 'Inceptisols',\n                                                   'Soil_Type12' : 'Entisols',\n                                                   'Soil_Type13' : 'Inceptisols',\n                                                   'Soil_Type14' : 'Mollisols',\n                                                   'Soil_Type15' : 'Unspecified',\n                                                   'Soil_Type16' : 'Mollisols',\n                                                   'Soil_Type17' : 'Mollisols',\n                                                   'Soil_Type18' : 'Mollisols',\n                                                   'Soil_Type19' : 'Histosols_Mollisols',\n                                                   'Soil_Type20' : 'Inceptisols_Mollisols',\n                                                   'Soil_Type21' : 'Inceptisols_Mollisols',\n                                                   'Soil_Type22' : 'Inceptisols',\n                                                   'Soil_Type23' : 'Inceptisols_Mollisols',\n                                                   'Soil_Type24' : 'Inseptisols',\n                                                   'Soil_Type25' : 'Inceptisols',\n                                                   'Soil_Type26' : 'Alfisols_Inceptisols',\n                                                   'Soil_Type27' : 'Inceptisols',\n                                                   'Soil_Type28' : 'Inceptisols',\n                                                   'Soil_Type29' : 'Entisols_Inceptisols',\n                                                   'Soil_Type30' : 'Entisols_Inceptisols',\n                                                   'Soil_Type31' : 'Inseptisols',\n                                                   'Soil_Type32' : 'Inseptisols',\n                                                   'Soil_Type33' : 'Inseptisols',\n                                                   'Soil_Type34' : 'Entisols',\n                                                   'Soil_Type35' : 'Inceptisols',\n                                                   'Soil_Type36' : 'Inceptisols',\n                                                   'Soil_Type37' : 'Entisols_Inceptisols',\n                                                   'Soil_Type38' : 'Inceptisols_Mollisols',\n                                                   'Soil_Type39' : 'Entisols_Inceptisols',\n                                                   'Soil_Type40' : 'Entisols_Inceptisols'}\n                                                 )\ntmp['Order_Groups'].describe()","77d98950":"tmp['USFS_ELU_Codes'] = tmp['USFS_ELU_Codes'].replace({'Soil_Type1' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type2' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type3' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type4' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type5' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type6' : 'lower_montane_igneous_and_metamorphic',\n                                                       'Soil_Type7' : 'montane_dry_mixed_sedimentary',\n                                                       'Soil_Type8' : 'montane_dry_mixed_sedimentary',\n                                                       'Soil_Type9' : 'montane_glacial',\n                                                       'Soil_Type10' : 'montane_igneous_and_metamorphic',\n                                                       'Soil_Type11' : 'montane_igneous_and_metamorphic',\n                                                       'Soil_Type12' : 'montane_igneous_and_metamorphic',\n                                                       'Soil_Type13' : 'montane_igneous_and_metamorphic',\n                                                       'Soil_Type14' : 'montane_dry_and_montane_alluvium',\n                                                       'Soil_Type15' : 'montane_dry_and_montane_alluvium',\n                                                       'Soil_Type16' : 'montane_and_subalpine_alluvium',\n                                                       'Soil_Type17' : 'montane_and_subalpine_alluvium',\n                                                       'Soil_Type18' : 'montane_and_subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type19' : 'subalpine_alluvium',\n                                                       'Soil_Type20' : 'subalpine_alluvium',\n                                                       'Soil_Type21' : 'subalpine_alluvium',\n                                                       'Soil_Type22' : 'subalpine_glacial',\n                                                       'Soil_Type23' : 'subalpine_glacial',\n                                                       'Soil_Type24' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type25' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type26' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type27' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type28' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type29' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type30' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type31' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type32' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type33' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type34' : 'subalpine_igneous_and_metamorphic',\n                                                       'Soil_Type35' : 'alpine_igneous_and_metamorphic',\n                                                       'Soil_Type36' : 'alpine_igneous_and_metamorphic',\n                                                       'Soil_Type37' : 'alpine_igneous_and_metamorphic',\n                                                       'Soil_Type38' : 'alpine_igneous_and_metamorphic',\n                                                       'Soil_Type39' : 'alpine_igneous_and_metamorphic',\n                                                       'Soil_Type40' : 'alpine_igneous_and_metamorphic'}\n                                                 )\ntmp['USFS_ELU_Codes'].describe()","c3156906":"# Just an interim step:\ntmp = pd.get_dummies(tmp, columns=['Taxonomy_Groups', 'Order_Groups', 'USFS_ELU_Codes'])\n\ntaxonomy = ['Taxonomy_Groups_Alfisols_Cryalfs_Haplocryalfs',\n       'Taxonomy_Groups_Alfisols_Inceptisols',\n       'Taxonomy_Groups_Alfisols_Mollisols',\n       'Taxonomy_Groups_Alfisols_Ustalfs_Haplustalfs',\n       'Taxonomy_Groups_Entisols_Inceptisols',\n       'Taxonomy_Groups_Entisols_Orthents_Cryorthents',\n       'Taxonomy_Groups_Histosols_Mollisols', 'Taxonomy_Groups_Inceptisols',\n       'Taxonomy_Groups_Inceptisols_Cryepts',\n       'Taxonomy_Groups_Inceptisols_Cryepts_Dystrocryepts',\n       'Taxonomy_Groups_Inceptisols_Mollisols', 'Taxonomy_Groups_Mollisols',\n       'Taxonomy_Groups_Mollisols_Borolls_Haploborolls',\n       'Taxonomy_Groups_Mollisols_Ustolls_Haplustolls']\norder = ['Order_Groups_Alfisols', 'Order_Groups_Alfisols_Inceptisols',\n       'Order_Groups_Alfisols_Mollisols', 'Order_Groups_Entisols',\n       'Order_Groups_Entisols_Inceptisols', 'Order_Groups_Histosols_Mollisols',\n       'Order_Groups_Inceptisols', 'Order_Groups_Inceptisols_Mollisols',\n       'Order_Groups_Inseptisols', 'Order_Groups_Mollisols']\nusfs_codes = ['USFS_ELU_Codes_alpine_igneous_and_metamorphic',\n       'USFS_ELU_Codes_lower_montane_igneous_and_metamorphic',\n       'USFS_ELU_Codes_montane_and_subalpine_alluvium',\n       'USFS_ELU_Codes_montane_and_subalpine_igneous_and_metamorphic',\n       'USFS_ELU_Codes_montane_dry_and_montane_alluvium',\n       'USFS_ELU_Codes_montane_dry_mixed_sedimentary',\n       'USFS_ELU_Codes_montane_glacial',\n       'USFS_ELU_Codes_montane_igneous_and_metamorphic',\n       'USFS_ELU_Codes_subalpine_alluvium', 'USFS_ELU_Codes_subalpine_glacial',\n       'USFS_ELU_Codes_subalpine_igneous_and_metamorphic']","dcf1d5c7":"# Going to use my single wilderness column the rest of the time to stratify:\nX6 = forest_data[features + soil] # my benchmark stratified\nX9 = pd.concat([forest_data[features], tmp[taxonomy]], axis=1, sort=False) # features + taxonomy\nX11 = pd.concat([forest_data[features], tmp[order]], axis=1, sort=False) # features + order\nX12 = pd.concat([forest_data[features], tmp[usfs_codes]], axis=1, sort=False) # features + codes","97acccb8":"train_X6, val_X6, train_y6, val_y6 = train_test_split(X6, y, test_size=0.4, stratify=forest_data['Wilderness_Area'], random_state=1)\ntrain_X9, val_X9, train_y9, val_y9 = train_test_split(X9, y, test_size=0.4, stratify=forest_data['Wilderness_Area'], random_state=1)\ntrain_X11, val_X11, train_y11, val_y11 = train_test_split(X11, y, test_size=0.4, stratify=forest_data['Wilderness_Area'], random_state=1)\ntrain_X12, val_X12, train_y12, val_y12 = train_test_split(X12, y, test_size=0.4, stratify=forest_data['Wilderness_Area'], random_state=1)","bfe335d6":"rfc_model6 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model6.fit(train_X6, train_y6)\nrfc_val_predictions6 = rfc_model6.predict(val_X6)\nrfc_val_mae6 = mean_absolute_error(rfc_val_predictions6, val_y6)\n\nrfc_model9 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model9.fit(train_X9, train_y9)\nrfc_val_predictions9 = rfc_model9.predict(val_X9)\nrfc_val_mae9 = mean_absolute_error(rfc_val_predictions9, val_y9)\n\nrfc_model11 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model11.fit(train_X11, train_y11)\nrfc_val_predictions11 = rfc_model11.predict(val_X11)\nrfc_val_mae11 = mean_absolute_error(rfc_val_predictions11, val_y11)\n\nrfc_model12 = RandomForestClassifier(n_estimators=100, random_state=1)\nrfc_model12.fit(train_X12, train_y12)\nrfc_val_predictions12 = rfc_model12.predict(val_X12)\nrfc_val_mae12 = mean_absolute_error(rfc_val_predictions12, val_y12)\n\nprint(\"Validation MAE for features-only       : {:,.2f}\".format(rfc_val_mae1))\nprint(\"Validation MAE for all variables       : {:,.2f}\".format(rfc_val_mae2))\nprint(\"Validation MAE for stratified benchmark: {:,.2f}\".format(rfc_val_mae6))\nprint(\"Validation MAE for features + taxonomy : {:,.2f}\".format(rfc_val_mae9))\nprint(\"Validation MAE for features + order    : {:,.2f}\".format(rfc_val_mae11))\nprint(\"Validation MAE for features + codes    : {:,.2f}\".format(rfc_val_mae12))","03c3a9ae":"importances = feature_importances(rfc_model1, X1, y)","68dcbae9":"importances = feature_importances(rfc_model2, X2, y)","5cdf1eb0":"importances = feature_importances(rfc_model6, X6, y)   ","b1a2ced4":"importances = feature_importances(rfc_model9, X9, y)   ","873a84b4":"importances = feature_importances(rfc_model11, X11, y) ","9a830bda":"importances = feature_importances(rfc_model12, X12, y) ","0c775eda":"To make a long story short, the order in soil taxonomy is Order, Suborder, Great Group, Subgroup, Family, and Series. When reading through our 40 types, there are some mistakes: -olis is supposed to be -olls; \"family\" is supposed to be \"series.\"\n\nI find that, after learning about taxonomy, our list contains series, combination of series, great groups and suborders, and any combination of that. So, there is no uniqueness in which to play with all 6 levels of the hierarchy. Instead, I need to blend. For example, the Cathedral series, or soil type 1, is just a single series. Whereas, soil type 2 contains two series: Vanet and Ratake. How I deal with that is I take the highest order and pair that: For example, Vanet is in the Order Alfisols, Suborder Ustalfs, and Great Group Haplustalfs, while Ratake is Mollisols-Ustolls-Haplustolls, respectively. Since I'm not getting a common level, I use the Order and give the label for soil 2 Alfisols-Molisolls. Any Order-Suborder-Great Group you see has enough commonality in the soil type to give a non-hybrid label. (Some series had subgroups, but family I have not gotten a clear definition and never looked for that level of detail, especially since some of our soil types stop at the Suborder and Great Group level.) Below is my final list:","543ee29f":"**Soil Taxonomy:** Looking through other people's work, I would not see many venture into the soil types. When I read through them carefully, I got the feeling you could do more with this somehow and it posed the question that I had at the beginning of this workbook: if this is the lowest level, can we find a way to use super-groups to improve performance? For the sake of time, I think I'll just get to the classification than share the rabbit hole I went through to understand and interpret soil classification.\n\nLet's decode our one-hot encoded variables:","74162aef":"I think it's been the major concensus that distance to roadways, fire points, and hydrology are tightly related to elevation. I have seen with more creativity that aspect, hillshade, and slope can contribute much more.","5ce60c75":"Respectively, I now have 14 unique categories from a taxonomy level, 10 from an Order-only level, and 11 from these codes rather than 40. Let's build some models:","7426865d":"**Conclusions:** In my other notebook, stratifying the benchmark gave a MAE of 0.38. So, probably some rounding error. In sum, providing the new labels do not lower the MAE and probably aren't lowering the accuracy. It begs the question, does having a \"better\" base model make these new labels come to light? How can we get there, though?\n\nBelow are all of the feature importance graphs. Notice that the ELU code grouping seems to poke one attribute up to the top 5 even though the MAE is the lowest of the other two groupings.\n\nTime permitting, I want to look more into the codes or the taxonomy in order to get more information - oddly enough, it's difficult to find one solid source. I still think there's something about soil type that can be more rewarding. I know people have tried \"stonyness,\" but I've seen people disregard the fact that missing \"stonyness\" in a description immediately means there is none and I don't think that's a safe claim. Noble effort, but not a careful approach.\n\nFeel free to comment or debate about anything here.","60646b64":"Naturally, let's have another set of labels purely at the Order level, hybrids included:","00cfa409":"Without doing anything special, with a MAE of 0.39, my all-features model yielded %73 accuracy when I submitted it for the competition.","f4c7c041":"**Summary:** I'm very new at this. So by all means, comment away at any improvements you think could make soil much better. I am approaching this with only basic modeling in order to see what direction to go for the optimisation stage. So, for the purposes of this experiment, I'm only using RandomForestClassifier and fairly standard train-test split with some stratifying. Evaluation criteria is MAE.\n\n**Objective:** Can soil data be approached from a different angle? If the 40 types provided are presumably the lowest level in a hierarchy, can moving up the levels improve performance?","219dc30e":"**The Basics:**","6f57608f":"While researching, this exact competition is lined out in a paper from 2017. In it, they showed USFS ELU Codes that I never could find outside the paper, but thought there might be merit to them. Using the definitions of the codes, I created another set:","7ea290c8":"Thank you and goodnight! :)","4649dd59":"I need to create (or at least for myself) a \"play\" database in order to get these new groups for the soil types.","1c4d7f61":"People have diced this up many ways, so I will cut to the chase by building my benchmark: what MAE do you get when throw it all in to a basic model?"}}