{"cell_type":{"9392a831":"code","efe17fa5":"code","35874e6d":"code","e30cb045":"code","a981e7a5":"code","e283de01":"code","4492ebf0":"code","1c945fd3":"code","dc47fc35":"code","16304281":"code","40ba6b72":"code","c2c8d1ba":"code","4ed80b6d":"code","e32b925c":"code","49e544f0":"code","877a0b82":"markdown","1abd9e82":"markdown","5a7b69c0":"markdown","ab112c2b":"markdown","317dc207":"markdown","239e2166":"markdown","2ee20614":"markdown","9fb79a23":"markdown"},"source":{"9392a831":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom skimage.transform import resize\nimport os\nimport cv2\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D, Activation, Flatten","efe17fa5":"infected = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/Parasitized')\nuninfected = os.listdir('..\/input\/cell-images-for-detecting-malaria\/cell_images\/Uninfected')","35874e6d":"image_data = []","e30cb045":"for img in infected:\n    try:\n        image = cv2.imread(os.path.join('..\/input\/cell-images-for-detecting-malaria\/cell_images\/Parasitized',img),cv2.IMREAD_GRAYSCALE)\n        image_resize = resize(image, (40,40), anti_aliasing=True)\n        image_data.append([image_resize, 1])\n    except AttributeError:\n        print('')\n\nfor img in uninfected:\n    try:\n        image = cv2.imread(os.path.join('..\/input\/cell-images-for-detecting-malaria\/cell_images\/Uninfected',img),cv2.IMREAD_GRAYSCALE)\n        image_resize = resize(image, (40,40), anti_aliasing=True)\n        image_data.append([image_resize, 0])\n    except AttributeError:\n        print('')","a981e7a5":"import random\n\nrandom.shuffle(image_data)","e283de01":"X = []\ny = []","4492ebf0":"for data, labels in image_data:\n    X.append(data)\n    y.append(labels)","1c945fd3":"X = np.array(X).reshape(-1, 40, 40, 1)\ny = np.array(y).reshape(-1, 1)","dc47fc35":"from sklearn.model_selection import train_test_split","16304281":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, stratify=y)","40ba6b72":"model = Sequential()\n\nmodel.add(Conv2D(128,(3,3),input_shape=X.shape[1:],activation='relu'))\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(64, activation='relu'))\n\nmodel.add(Dense(1, activation='sigmoid'))","c2c8d1ba":"model.summary()","4ed80b6d":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","e32b925c":"model.fit(X_train, y_train, batch_size=64, validation_split=0.1, epochs=8)","49e544f0":"model.evaluate(X_test, y_test)","877a0b82":"**Model Fitting**","1abd9e82":"**Shuffling Training Data**","5a7b69c0":"**Creating Feature Space & Labels**","ab112c2b":"**Loading Dataset**","317dc207":"**Importing Libraries**","239e2166":"**Model Evaluation**","2ee20614":"**Model Construction**","9fb79a23":"**Model Compilation**"}}