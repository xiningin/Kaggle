{"cell_type":{"67a7b4ac":"code","6543beaf":"code","3aba7b1f":"code","635aa861":"code","2b5d3be4":"markdown"},"source":{"67a7b4ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6543beaf":"import pandas as pd\n\ndf_treino = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf_teste = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","3aba7b1f":"df_treino.head()","635aa861":"df_teste.head()","2b5d3be4":"# Roadmap Ci\u00eancia de Dados\n1. EDA: An\u00e1lise Explorat\u00f3ria de Dados - Insights\n    - Compreender os dados que a gente tem\n2. Data Cleaning: Limpeza de dados\n    - Coluna com ESTADO -> SP, sp, Sampa, S\u00e3o Paulo, S\u00c2O PAULO, SAO PAULO (SP)\n3. Feature Engineering: Cria\u00e7\u00e3o de novas vari\u00e1veis\n    - #quartos, tamanho do lote m\u00b2 -> #quartos\/m\u00b2\n4. Modelagem: Machine Learning\n    - Sele\u00e7\u00e3o de Vari\u00e1veis: m\u00e9todo que separa as vari\u00e1veis mais fortes (com alto poder de explicabilidade)-\n    \n    4.1 Baseline: Modelo mais simples que explica os dados\n        -> Treina v\u00e1rios modelos, e escolhe os N melhores a partir de uma m\u00e9trica de performance (acur\u00e1cia|ROC|..., classifica\u00e7\u00e3o ; MSE|RMSE|..., regress\u00e3o)\n    \n    4.2 Tunning de Hiperpar\u00e2metros: otimiza\u00e7\u00e3o do modelo\n        -> Modelo campe\u00e3o\n    AQUI TAMB\u00c9M PODE FAZER A SELE\u00c7\u00c3O DE VARI\u00c1VEIS SE N\u00c3O FOR FEITA NO COME\u00c7O DO PROCESSO DE MODELAGEM\n    \n    4.3 Avalia\u00e7\u00e3o do melhor modelo: amostra nova e valida de \u00e9 est\u00e1vel (n\u00e3o varia a performance)\n    \n    4.4 Deploy: colocar em produ\u00e7\u00e3o"}}