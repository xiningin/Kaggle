{"cell_type":{"ba56c803":"code","55b90f70":"code","f5b0fd64":"code","53676d1b":"code","0e056ddb":"code","9decde47":"code","91be1fb2":"markdown","9d565f68":"markdown","59d6f50f":"markdown","afad2e12":"markdown","cce1ca10":"markdown","c81be912":"markdown","0986be77":"markdown","cb0f33e9":"markdown","40ec3db7":"markdown"},"source":{"ba56c803":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.set_option('mode.chained_assignment','warn')\n\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns\n\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55b90f70":"Change_By_City = pd.read_csv(r\"\/kaggle\/input\/climate-change-earth-surface-temperature-data\/GlobalLandTemperaturesByCity.csv\")","f5b0fd64":"Change_By_City=Change_By_City.dropna(axis=0,how='any',subset=['AverageTemperature', 'Latitude', 'Longitude'])\nChange_By_City[\"Year\"]=Change_By_City.dt.str[0:4] \nav_by_year=Change_By_City.groupby(['Year','Latitude','Longitude'])['AverageTemperature'].transform('mean')\nChange_By_City[\"Average_By_Year\"]=av_by_year.loc[:,]\nChange_By_City.sort_values(['Year','Country','City'], inplace=True)\nChange_By_City_By_Year=Change_By_City.drop_duplicates(subset=['Year','Country','City'])\nmask=Change_By_City_By_Year['Year']>='1975'\nLast_Change_By_City_By_Year=Change_By_City_By_Year.loc[mask,:]\n\ndef my_model(X,y):\n    '''Given X and y, this function fits the Linear Regression model\n    and returns coef, intercept and score'''\n    change_model = linear_model.LinearRegression(fit_intercept=True)\n    change_model.fit(X,y)\n    score=change_model.score\n    change_model.score(X,y)\n    a,b=change_model.coef_,change_model.intercept_\n    return(a,b,score)\nCountries=np.unique(Last_Change_By_City_By_Year['Country'])\nLast_Change_By_City_By_Year=Last_Change_By_City_By_Year.sort_values(['Country','City'],  \n               axis = 0, ascending = True) \nslope=[]\nCountry=[]\nCity=[]\nfor i in Countries:\n    mask_Country=Last_Change_By_City_By_Year['Country']==i\n    My_Country=Last_Change_By_City_By_Year[mask_Country]\n    Cities=np.unique(My_Country['City'])\n    for j in Cities:\n        mask_City=My_Country['City']==j\n        My_City=My_Country[mask_City]\n        X = My_City.iloc[:,7].values.reshape(-1, 1)\n        y = My_City.iloc[:,8].values\n        (a,b,score)=my_model(X,y)\n        slope.append(a[0])\n        City.append(j)\n        Country.append(i)\nChange_By_Country_City=Last_Change_By_City_By_Year.drop_duplicates(subset=['Country','City'])\nChange_By_Country_City.reset_index(inplace = True) \nslope_by_city=pd.DataFrame(slope,columns=['Slope'])\ncity_by_city=pd.DataFrame(City)\ncountry_by_city=pd.DataFrame(Country)\nslope_by_city.loc[:,'Slope']\nChange_By_Country_City[\"Slope_by_city\"]=slope_by_city.loc[:,'Slope']","53676d1b":"Change_By_Country_City.head()","0e056ddb":"biggest_increasing=Change_By_Country_City.groupby(['Country'])['Slope_by_city'].transform('max')\nChange_By_Country_City[\"biggest_increasing\"]=biggest_increasing.loc[:,]\nmini_increasing=Change_By_Country_City.groupby(['Country'])['Slope_by_city'].transform('min')\nChange_By_Country_City[\"mini_increasing\"]=mini_increasing.loc[:,]\nChange_By_City_By_Year=Change_By_City.drop_duplicates(subset=['Year','Country','City'])\nMax_Change_By_Country=Change_By_Country_City[['City','Country','Slope_by_city','biggest_increasing']] \\\n[Change_By_Country_City.Slope_by_city==Change_By_Country_City.biggest_increasing] \\\n    .drop_duplicates(subset=['Country']) \\\n    .sort_values('Slope_by_city',ascending=False) \\\n    .reset_index(drop=True)\ndef city_country (data):\n    new_list=[]\n    for row in range(data.shape[0]):\n        new=str(data['City'].iloc[row]+'('+data['Country'].iloc[row]+')')\n        new_list.append(new)\n    return(new_list)\n\nnew_list=city_country(Max_Change_By_Country)\nMax_Change_By_Country[\"CityCountry\"] = new_list\n\nsns.set(style=\"whitegrid\",font_scale=0.9)\nf, ax = plt.subplots(figsize=(15, 30))\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"biggest_increasing\", y=\"CityCountry\", data=Max_Change_By_Country,\n            palette=\"Reds_d\")\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(xlim=(-0.01,0.065), ylabel=\"\",\n       xlabel=\"Increment of Temperature per year\")\nsns.despine(left=True, bottom=True)","9decde47":"Min_Change_By_Country=Change_By_Country_City[['City','Country','Slope_by_city','mini_increasing']] \\\n[Change_By_Country_City.Slope_by_city==Change_By_Country_City.mini_increasing] \\\n    .drop_duplicates(subset=['Country']) \\\n    .sort_values('Slope_by_city',ascending=True) \\\n    .reset_index(drop=True)\nnew_list=city_country(Min_Change_By_Country)\nMin_Change_By_Country[\"CityCountry\"] = new_list\n\nsns.set(style=\"whitegrid\",font_scale=0.9)\nf, ax = plt.subplots(figsize=(15, 30))\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"mini_increasing\", y=\"CityCountry\", data=Min_Change_By_Country,\n            palette=\"Blues_d\")\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(xlim=(-0.01,0.065), ylabel=\"\",\n       xlabel=\"Increment of Temperature per year\")\nsns.despine(left=True, bottom=True)","91be1fb2":"To understand it, take the first row. Baflan in Afganistan.\n\nIts Average Temperature by Year is 10.2630 \u00baC. \n\nIts slope is 0.034176.\n\nSo, for 2050 we can calculate how many years we want to predict in the future:\n\n\\begin{align}\n\\displaystyle {y} &= 2050 - 1975 &= 75\n\\end{align}\n\nWe have to calculate the temperature from 1975, to 75 years later.\n\n\\begin{align}\n\\displaystyle T &= 10.2630 + 75*0.034176 &= 10.2630 + 2.5632 = 12,8262\n\\end{align}\n\n12.8262 will be the predicted temperature in 2050 in Baflan (Afganistan). \n\nThis calculate, can be done easily with the method predict of LinearRegression. But I wanted just to show what it means.","9d565f68":"### Conclusions\n\nAs we have seen the worst warming in the world will be in Russia and the best in Bolivia.\n\nAttending to the plots, it seems that Bolivia wont suffer Global Warming as other countries.\n\nI would like to guess what factors make some cities to worm more rapidly to others. Maybe industry, altitude, to be next to an ocean or a sea... in theese datasets we don't have all this information. It would be great to complete it a little. But I think it was not the purpose of theese datasets. It just wanted to evidence that The Earth is getting warm. And my purspose was to know how quickly it was happening.\n\nSo now you know where the temperature will change more and less in the next years. Think about it. \n\nAnd thanks for reading until here :)","59d6f50f":"Here we can see that the first city in this ranking, Oruro in Bolivia, is decreasing its temperature, as it's slope even is negative. \n\nThe rest of the world is increasing it.\n\n\n","afad2e12":"\n\n### Introduction\n\nMy work is going to be the visualization as a ranking of how is increasing the temperature in every country. \n\nI thought about plotting all the cities in the dataset, but it was too much to see it in only one plot. I also didn't want one plot for country, as there are many countries, and it will became an eternal notebook. \nSo I finaly decided to plot one city per country. 159 cities. I think it is enough to make an idea of the situation with one plot (finally I made two).\n\nThe plot 0 that I did was the global temperature vs years. I'm not shearing it in this notebook. But if you see one from other notebook you will realize that from 1975, the temperature is increasing almost linearly. So I thought to calculate the slope of this straight line.\n\nI'm going to calculate the slope of the main temperature for each year and city from this moment, 1975, where the linear regression seems to be a good model to fit the data. I'm taking into account countries because colonialism made many cities to have the same name in different countries.\n\nAny way, I'm not plotting the current mean temperature of those cities, so the increase must be understud as a tendence, not a temperature itself.\n\nAnd I'm always suposing that the warming is goin to be the same as it is nowadays.\n","cce1ca10":"### Linear Regression of the mean temperature per year\n\nI'm going to calculate the average temperature of every year for every city and calculate the linear regression for every city in the data set.\nI'm doing this from 1975 as it seams to be the beggining of the current Global Warming.","c81be912":"### Minimum value per country\n\n\nHere I'm going to do the same as before but for de minimum slope in each country.\n\nThe only difference is that I'm going to order the slope ascendig in the plot.\n","0986be77":"In this notebook I'm going to make an study about the increase of the temperature. Not the temperature itself.\n\nIt will be divided into this sections:\n\n- Introduction\n\n\n- Linear Regression of the mean temperature per year\n\nWith the temperature of every city, I'm going to calculate the slope of the mean temperature as a function of the years.\nSo this information will tell us if one city is getting hotter more rapidly than others. We will know how many degrees increases the temperature in one year.\n\n- Maximum value per country\n\nFor each country, I'm going to calculate the city that is increasing it's temperature more qickly.\nIt will be like the ranking of the worst cities in the world to live in the future (in terms of Global Warming).\nOf course, I don't pretend a massive migration. It's just a way to understand the data.\n\n- Minimum value per country\n\nFor each country, I'm going to calculate the city that is increasing it's temperature more slowly.\nIt will be like the ranking of the best cities in the world to live in the future (in terms of Global Warming).\nAgain, I don't pretend a massive migration. It's just a way to understand the data.\n\n- Conclusions\n\n\n\nI will get some warning messages... please, be comprehensive. I'm just a beginner :)\n\n\n","cb0f33e9":"### Maximum value per country\n\nHere, from the slope of each city, I'm going to calculate for each country, wich is the city that is warming more quickly (higher slope).\n","40ec3db7":"So, we can see that the city in the world that is increasing it's temperature more rapidly is Belgorod in Russia. It's the city that increases it's temperature more rapidly in Russia, wich is the first of the ranking.\n\nThe second one is Pavlohrad in Ukraine. But you have to understand that maybe, the second city that increases the temperature more rapidly in the world is again in Russia. Pavlohrad is the more rapid in Ukraine, so it puts Ukraine in the second place in this ranking.\n\nFinaly, Tarija in Bolivia is the city that is getting worm more rapidly in Bolivia, but its speed is the slowest in this ranking."}}