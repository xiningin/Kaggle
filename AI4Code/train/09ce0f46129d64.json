{"cell_type":{"520c9e76":"code","6d3ff46c":"code","8a5f522d":"code","ebaee4b4":"code","048d1679":"code","45e0cadb":"code","97ce4a25":"code","f0fc051b":"code","721233af":"code","39ba6219":"code","9d10a8fe":"code","b9d2a1be":"code","95c6bdf7":"code","d88b3403":"code","a9c52176":"code","fa7054f0":"markdown","8f8abd05":"markdown","51757a41":"markdown","3e994a2b":"markdown","58f43e5d":"markdown","7b76e070":"markdown","eb1b9648":"markdown","44c238f2":"markdown","76223918":"markdown","400e3c06":"markdown","8ecaa561":"markdown"},"source":{"520c9e76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nsns.set()\nfrom sklearn.cluster import KMeans\nfrom mpl_toolkits.mplot3d import Axes3D\nimport tensorflow as tf \nimport tensorflow_datasets as tfds\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.corpus import stopwords\nfrom collections import  Counter\nimport nltk\nnltk.download('stopwords')\nimport re\n\nfrom collections import defaultdict\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler,OneHotEncoder, OrdinalEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline, FeatureUnion, make_pipeline\nfrom xgboost import XGBRegressor\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.metrics import mean_absolute_error\nfrom scipy import stats\nfrom scipy.stats import norm, skew \nfrom scipy.special import boxcox1p\nfrom sklearn.preprocessing import RobustScaler\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d3ff46c":"!pip install openpyxl   # Solving Kaggle error while importing the data","8a5f522d":"medal =  pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx', index_col = 0)\nathlete = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx', index_col = 0)\ngender = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx', index_col = 0)\nteam = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx',index_col=0)\ncoach =  pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx',index_col=0)","ebaee4b4":"def miss(data):\n    missing_value = data.isnull().sum().sort_values(ascending = False)\n    missing_perc = (data.isnull().sum()*100\/data.shape[0]).sort_values(ascending = False)\n    value = pd.concat([missing_value,missing_perc],axis=1,keys=['Count','%'])\n    display(value.head(20).style.background_gradient(cmap = 'Reds', axis = 0))","048d1679":"miss(medal)","45e0cadb":"miss(athlete)","97ce4a25":"miss(gender)","f0fc051b":"miss(team)","721233af":"miss(coach)","39ba6219":"count1 = athlete['NOC'].value_counts().head(10)\nsns.barplot(x=count1.index,y = count1.values)\nplt.xticks(rotation = 90)\n\nplt.show()","9d10a8fe":"count = athlete['Discipline'].value_counts().head(10)\nsns.barplot(x=count.index,y = count.values)\nplt.xticks(rotation = 90)\n\nplt.show()","b9d2a1be":" # athlete.sort_values(by=athlete['NOC'].value_counts())\n# new = athlete.groupby('NOC')['Discipline'].value_counts()\n# new1 =  pd.DataFrame()\n# new","95c6bdf7":"gender['male_ratio'] =  gender['Male']\/gender['Total']\ngender['female_ratio'] =  gender['Female']\/gender['Total']\ngender['Discipline']= gender.index\n\n","d88b3403":"from plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    y=gender.Discipline,\n    x=gender.female_ratio,\n    orientation='h',\n    name='Females'\n   )\n    )\n\nfig.add_trace(go.Bar(\n    y=gender.Discipline,\n    x=gender.male_ratio,\n    orientation='h',\n    name='Males'\n    )\n    )\n\ntemplate = dict(layout=go.Layout(title_font=dict(family=\"Rockwell\", size=30)))\n\nfig.update_layout(\n                title = 'Distribution of disciplines based on gender',\n                template = template,\n                barmode='stack', \n                autosize=False,\n                width=680,\n                height=900,\n                margin=dict(\n                  l=150,\n                  r=100,\n                   b=30,\n                   t=100,\n                   pad=4\n                          )\n)\n\nfig.layout.xaxis.tickformat = ',.0%'\nfig.show()","a9c52176":"medal.rename(columns={'Team\/NOC':'NOC'}, inplace=True)\nmedalf = medal.sort_values(by='Rank by Total',ascending = True).head(10)\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    y=medalf.Gold,\n    x= medalf.NOC,\n   \n    name='Gold'\n   )\n    )\n\nfig.add_trace(go.Bar(\n    y=medalf.Silver,\n    x= medalf.NOC,\n    \n    name='Silver'\n   )\n    )\n\nfig.add_trace(go.Bar(\n    y=medalf.Bronze,\n    x= medalf.NOC,\n    name='Bronze'\n   )\n    )\n\n\ntemplate = dict(layout=go.Layout(title_font=dict(family=\"Rockwell\", size=30)))\n\nfig.update_layout(\n                title = 'Medal Distribution',\n                template = template,\n                barmode='stack', \n                autosize=False,\n                width=680,\n                height=650,\n               margin=dict(\n                  l=30,\n                  r=30,\n                  b=180,\n                  t=100,\n                  pad=4\n                          )\n)\n\nfig.layout.xaxis.tickformat = ',.0%'\nfig.show()\n","fa7054f0":"# Gender ratios in different sports","8f8abd05":"# Medals","51757a41":"**China** has higher number of **gold** medals, whereas **US** is leading in other two medals.","3e994a2b":"**Athlectics** is the most participated event in the Olympics.","58f43e5d":"# Importing Data and Basic checks","7b76e070":"# Athlete EDA","eb1b9648":"**Checking for Missing values in our data**","44c238f2":"Vast majority of the athletes participating are from **USA** and **Japan**.","76223918":"**Function for checking Missing values**","400e3c06":"Many of the sports have **equal** distribution based on gender. A very good sign!!!","8ecaa561":"**We can see there no missing values in our datasets except the Coach data.**"}}