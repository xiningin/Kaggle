{"cell_type":{"2d317db1":"code","067fa00f":"code","c66e9908":"code","08325b6d":"code","50bf6dab":"code","882812dd":"code","9820bded":"code","eb1887d5":"code","0e849a21":"code","28e09de3":"code","c06ac2ee":"code","d5e2231d":"code","e2e8cf4c":"code","79506800":"code","ca043d57":"code","c6527f99":"code","3b0bf6f3":"code","3dcce077":"code","a8c831c4":"code","6293c461":"code","2c1d1a83":"code","5a4e7358":"code","9ff8c72c":"code","42db4be6":"code","e87ea4b0":"code","b4b2f24f":"code","e63d771d":"code","d02cd602":"code","e470cf30":"code","75251ce8":"code","2235b269":"code","0e75d47c":"code","540c70e2":"code","91e968c8":"code","130ad9d4":"code","29d71738":"code","6f16b4a6":"code","857e5d44":"code","3f8c65b8":"code","eb834827":"code","d30602a8":"code","411a996c":"code","eafd3058":"code","263a2226":"code","6f0db708":"code","0dc53345":"code","9d884f4b":"code","e51483fc":"code","8f38d1b4":"code","005b0c98":"code","78b98679":"code","b9e7b040":"code","4164af4c":"code","eab96bb9":"code","fe7a7eeb":"code","fdf1b1c7":"code","454be2ec":"code","02d595ca":"code","e50d4d63":"code","7c798cbe":"code","5a222c5a":"code","135afbf0":"code","d3c7a1c6":"code","ad9b67bb":"code","be356c80":"code","8201a714":"code","dbebb14c":"code","13586c4f":"code","d6145765":"code","15187d32":"code","3da87026":"markdown","9a58defb":"markdown","d46633d6":"markdown","3267e34f":"markdown","d18ebb1d":"markdown","93ace9c8":"markdown","2980813b":"markdown","71acacde":"markdown","ee4368b1":"markdown","2eb2ba3e":"markdown","8f4526ae":"markdown","adbb68f6":"markdown","96e354c1":"markdown","d9fd0591":"markdown","36cbf2d4":"markdown","212f7e89":"markdown"},"source":{"2d317db1":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np \n\nimport seaborn as sns","067fa00f":"\ndf=pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf.head(4)","c66e9908":"df.info()\ndf=df.drop(0,axis=0)","08325b6d":"country=df.groupby(df.Q3)['Q1'].count() #To know number of entries from each country \ncountry=pd.DataFrame(country)\nx=country.index\ny=country.Q1","50bf6dab":"plt.figure(figsize=(20,15))\nsns.set(font_scale=2)\nax=sns.barplot(x,y)\nax.set_xticklabels(ax.get_xticklabels(),rotation=45, ha=\"right\",fontsize=20)\n\nax.set(xlabel='Countries', ylabel='Total Number of Participants')\nplt.tight_layout()\nplt.show()","882812dd":"degree=df.groupby(['Q4'])['Q3'].count()  #Group according to No of degree holders\ndegree=pd.DataFrame(degree)\ndegree=degree.iloc[:-1,:]\ndegree=degree.sort_values(by='Q3',ascending=True)","9820bded":"x=degree.index\ny=degree.Q3\n\nplt.figure(figsize=(15,5))\nsns.set(font_scale=1)\n\nax=sns.barplot(y,x,palette=\"rocket_r\")\nax.set_xticklabels(ax.get_xticklabels(),rotation=20, ha=\"right\")\n\nax.set(xlabel='Formal Degree', ylabel='Total Number of Participants')\n\nplt.tight_layout()\nplt.show()","eb1887d5":"roles=df.iloc[:,3:20].drop('Q6',axis=1)\nroles.rename(columns={'Q3':'country',\n                      'Q4':'edu',\n                      'Q5':'role',\n                      'Q7_Part_1':'Python',\n                      'Q7_Part_2':'R',\n                      'Q7_Part_3':'SQL',\n                      'Q7_Part_4':'C',\n                      'Q7_Part_5':'C++',\n                      'Q7_Part_6':'Java',\n                      'Q7_Part_7':'Javascript',\n                      'Q7_Part_8':'Julia',\n                      'Q7_Part_9':'Swift',\n                      'Q7_Part_10':'Bash',\n                      'Q7_Part_11':'Matlab',\n                      'Q7_Part_12':'None',\n                      'Q7_OTHER':'Other'},inplace=True)","0e849a21":"p_lang=roles.groupby('role').count()\nindex=pd.Series(p_lang.index)\np_lang.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\n\np =pd.concat([index,p_lang], axis=1)\np_lang=p\n","28e09de3":"\np_lang.plot(x= \"role\", y=['Python', 'R', 'SQL','C','C++','Java','Javascript','Julia','Swift','Bash','Matlab','None','Other'], kind=\"bar\",figsize=(25,8),width=1).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","c06ac2ee":"p_lang.plot(x= \"role\", y=['Python', 'R', 'SQL','C','C++','Java','Javascript','Julia','Swift','Bash','Matlab','None','Other'],kind='area',figsize=(20,10)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","d5e2231d":"lang_ds=df[['Q8']]\nlang_rds=df[['Q5','Q8']]    \nlang_rds=lang_rds.dropna()","e2e8cf4c":"lang_rds=lang_rds.where(lang_rds['Q5']==\"Data Scientist\").dropna() #only recommended by Data Scientist\nlang_ds=lang_ds.dropna()","79506800":"lang_ds=pd.DataFrame(lang_ds.groupby('Q8')['Q8'].count())\nlang_rds=pd.DataFrame(lang_rds.groupby('Q8')['Q5','Q8'].count())","ca043d57":"lang_rds=lang_rds.drop('Q8',axis=1)","c6527f99":"index=pd.Series(lang_rds.index)\nlang_rds.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\n\np =pd.concat([index,lang_rds], axis=1)\nlang_rds=p\n","3b0bf6f3":"index=pd.Series(lang_ds.index)\nlang_ds.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\n\np =pd.concat([index,lang_ds], axis=1)\nlang_ds=p\nlang_ds.rename(columns={'Q8':'Languages',\n                       'Q8':'Recommendation'},inplace=True)","3dcce077":"lang_ds.columns=['Languages','Recommendations']","a8c831c4":"lang_rds.rename(columns={'Q8':'Languages',\n                        'Q5':'Recommendations'},inplace=True)","6293c461":"\nax=lang_rds.plot(x= 'Languages', y='Recommendations',kind='area',figsize=(20,10)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\nlang_ds.plot(x= 'Languages', y='Recommendations',kind='area',figsize=(20,10)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\n","2c1d1a83":"x=lang_ds['Languages']\ny=lang_ds['Recommendations']","5a4e7358":"plt.figure(figsize=(8,5))\nsns.set(font_scale=1)\n\nax = sns.barplot(x,y )\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=20, ha=\"right\")\n\nax.set(xlabel='Language recommended for Data scientist', ylabel='Number of Recommendation')\n\nplt.tight_layout()\nplt.show()\n","9ff8c72c":"plt.figure(figsize=(8,5))\nsns.set(font_scale=1)\n\nax = sns.barplot(x=lang_rds.Languages,y=lang_rds.Recommendations)\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=20, ha=\"right\")\n\nax.set(xlabel='Language recommended for Data scientist', ylabel='Number of Recommendation')\n\nplt.tight_layout()\nplt.show()\n","42db4be6":"IDE=df[['Q4','Q5','Q9_Part_1','Q9_Part_2','Q9_Part_3','Q9_Part_4','Q9_Part_5','Q9_Part_6','Q9_Part_7','Q9_Part_8','Q9_Part_9','Q9_Part_10','Q9_Part_11','Q9_OTHER']]\nIDE.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q9_Part_1':'Jupyter',\n                      'Q9_Part_2':'R Studio',\n                      'Q9_Part_3':'Visual Studio',\n                      'Q9_Part_4':'Visual Studio Code',\n                      'Q9_Part_5':'PyCharm',\n                      'Q9_Part_6':'Spyder',\n                      'Q9_Part_7':'Notepad++',\n                      'Q9_Part_8':'Sublime Text',\n                      'Q9_Part_9':'Vim\/Emacs',\n                      'Q9_Part_10':'Matlab',\n                      'Q9_Part_11':'None',\n                      'Q9_OTHER':'Others'},inplace=True)","e87ea4b0":"role_IDE=IDE.groupby(['role']).count()#Preferred IDE according to the role\nedu_IDE=IDE.groupby(['edu']).count()  #Preffered IDE according to education qualification","b4b2f24f":"\nindex=pd.Series(role_IDE.index)\nrole_IDE.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,role_IDE], axis=1)\nrole_IDE=p\n\nindex=pd.Series(edu_IDE.index)\nedu_IDE.index=[0,1,2,3,4,5,6]\np =pd.concat([index,edu_IDE], axis=1)\nedu_IDE=p\n\nrole_IDE.plot(x= \"role\", y=['Jupyter','R Studio','Visual Studio','Visual Studio Code','PyCharm','Spyder','Notepad++','Sublime Text','Vim\/Emacs','Matlab','None','Others'], kind=\"bar\",figsize=(25,8),width=1).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","e63d771d":"NB_P=df[['Q4','Q5','Q10_Part_1','Q10_Part_2','Q10_Part_3','Q10_Part_4','Q10_Part_5','Q10_Part_6','Q10_Part_7','Q10_Part_8','Q10_Part_9','Q10_Part_10','Q10_Part_11','Q10_Part_12','Q10_Part_13','Q10_OTHER']]\nNB_P.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q10_Part_1':'Kaggle',\n                      'Q10_Part_2':'Colab',\n                      'Q10_Part_3':'Azure',\n                      'Q10_Part_4':'Paperspace',\n                      'Q10_Part_5':'Binder\/Jupyter Hub',\n                      'Q10_Part_6':'Code Ocean',\n                      'Q10_Part_7':'IBM Watson Studio',\n                      'Q10_Part_8':'Amazon Sagemaker',\n                      'Q10_Part_9':'Amazon EMR ',\n                      'Q10_Part_10':'Google Colud AI Platform',\n                      'Q10_Part_11':'Google Cloud Datalab',\n                      'Q10_Part_12':'Databricks Collaborative',\n                      'Q10_Part_13':'None',\n                      'Q10_OTHER':'Others'},inplace=True)","d02cd602":"NB_P_edu=NB_P.groupby(['edu']).count()\nNB_P_role=NB_P.groupby(['role']).count()","e470cf30":"\nindex=pd.Series(NB_P_role.index)\nNB_P_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,NB_P_role], axis=1)\nNB_P_role=p\n\nindex=pd.Series(NB_P_edu.index)\nNB_P_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,NB_P_edu], axis=1)\nNB_P_edu=p\n\nNB_P_role.plot(x= \"role\", y=['Kaggle', 'Colab', 'Azure', 'Paperspace',\n       'Binder\/Jupyter Hub', 'Code Ocean', 'IBM Watson Studio',\n       'Amazon Sagemaker', 'Amazon EMR ', 'Google Colud AI Platform',\n       'Google Cloud Datalab', 'Databricks Collaborative', 'None', 'Others'], kind=\"bar\",figsize=(25,8),width=1).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","75251ce8":"Compute_P=df[['Q4','Q5','Q11']]\nv=pd.get_dummies(Compute_P.Q11)\nCompute_P=pd.concat([Compute_P,v],axis=1)","2235b269":"Compute_P=Compute_P.replace(0,np.nan)\nCompute_P=Compute_P.drop('Q11',axis=1)","0e75d47c":"Compute_P.rename(columns={'Q4':'edu',\n                        'Q5':'role'},inplace=True)","540c70e2":"CP_edu=Compute_P.groupby(['edu']).count()\nCP_role=Compute_P.groupby(['role']).count()","91e968c8":"index=pd.Series(CP_role.index)\nCP_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,CP_role], axis=1)\nCP_role=p\n\nindex=pd.Series(CP_edu.index)\nCP_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,CP_edu], axis=1)\nCP_edu=p\n\nCP_role.plot(x= \"role\", y=[ 'A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)',\n       'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)',\n       'A personal computer or laptop', 'None', 'Other'], kind=\"bar\",figsize=(10,8),width=1).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","130ad9d4":"HD=df[['Q4','Q5','Q12_Part_1','Q12_Part_2','Q12_Part_3','Q12_OTHER']]\nHD.rename(columns={'Q4':'edu',\n                   'Q5':'role',\n                   'Q12_Part_1':'GPU',\n                   'Q12_Part_2':'TPU',\n                   'Q12_Part_3':'None',\n                   'Q12_OTHER':'Others'},inplace=True)","29d71738":"HD_edu=HD.groupby(['edu']).count()\nHD_role=HD.groupby(['role']).count()","6f16b4a6":"HD_role.columns","857e5d44":"index=pd.Series(HD_role.index)\nHD_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,HD_role], axis=1)\nHD_role=p\n\nindex=pd.Series(HD_edu.index)\nHD_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,HD_edu], axis=1)\nHD_edu=p\n\nHD_role.plot(x= \"role\", y=[ 'GPU', 'TPU', 'None', 'Others'], kind=\"bar\",figsize=(8,5),width=1).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","3f8c65b8":"VL=df[['Q4','Q5','Q14_Part_1','Q14_Part_2','Q14_Part_3','Q14_Part_4','Q14_Part_5','Q14_Part_6','Q14_Part_7','Q14_Part_8','Q14_Part_9','Q14_Part_10','Q14_Part_11','Q14_OTHER']]\nVL.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q14_Part_1':'Matplotlib',\n                      'Q14_Part_2':'Seaborn',\n                      'Q14_Part_3':'Plotly',\n                      'Q14_Part_4':'Ggplot',\n                      'Q14_Part_5':'Shiny',\n                      'Q14_Part_6':'D3 js',\n                      'Q14_Part_7':'Altair',\n                      'Q14_Part_8':'Bokeh',\n                      'Q14_Part_9':'Geoplotlib',\n                      'Q14_Part_10':'Leaflet\/Folium',\n                      'Q14_Part_11':'None',\n                      'Q14_OTHER':'Others'},inplace=True)","eb834827":"VL_edu=VL.groupby(['edu']).count()\nVL_role=VL.groupby(['role']).count()","d30602a8":"index=pd.Series(VL_role.index)\nVL_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,VL_role], axis=1)\nVL_role=p\n\nindex=pd.Series(VL_edu.index)\nVL_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,VL_edu], axis=1)\nVL_edu=p\n\nVL_role.plot(x= \"role\", y=['Matplotlib', 'Seaborn', 'Plotly', 'Ggplot', 'Shiny', 'D3 js',\n       'Altair', 'Bokeh', 'Geoplotlib', 'Leaflet\/Folium', 'None', 'Others'], kind=\"line\",figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","411a996c":"ML_F=df[['Q4','Q5','Q16_Part_1','Q16_Part_2','Q16_Part_3','Q16_Part_4','Q16_Part_5','Q16_Part_6','Q16_Part_7','Q16_Part_8','Q16_Part_9','Q16_Part_10','Q16_Part_11','Q16_Part_12','Q16_Part_13','Q16_Part_14','Q16_Part_15','Q16_OTHER']]\nML_F.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q16_Part_1':'Scikit Learn',\n                      'Q16_Part_2':'TensorFlow',\n                      'Q16_Part_3':'Keras',\n                      'Q16_Part_4':'PyTorch',\n                      'Q16_Part_5':'Fast.ai',\n                      'Q16_Part_6':'MXNet',\n                      'Q16_Part_7':'Xgboost',\n                      'Q16_Part_8':'LightGBM',\n                      'Q16_Part_9':'CatBoost',\n                      'Q16_Part_10':'Prophet',\n                      'Q16_Part_11':'H2O 3',\n                     'Q16_Part_12':'Caret',\n                     'Q16_Part_13':'Tidymodels',\n                     'Q16_Part_14':'JAX',\n                     'Q16_Part_15':'None',\n                      'Q16_OTHER':'Others'},inplace=True)","eafd3058":"ML_F_edu=ML_F.groupby(['edu']).count()\nML_F_role=ML_F.groupby(['role']).count()","263a2226":"ML_F_role.columns","6f0db708":"index=pd.Series(ML_F_role.index)\nML_F_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,ML_F_role], axis=1)\nML_F_role=p\n\nindex=pd.Series(ML_F_edu.index)\nML_F_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,ML_F_edu], axis=1)\nML_F_edu=p\n\nML_F_role.plot(x= \"role\", y=['Scikit Learn', 'TensorFlow', 'Keras', 'PyTorch', 'Fast.ai',\n       'MXNet', 'Xgboost', 'LightGBM', 'CatBoost', 'Prophet', 'H2O 3', 'Caret',\n       'Tidymodels', 'JAX', 'None', 'Others'], kind=\"line\",marker='.',figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","0dc53345":"Algo=df[['Q4','Q5','Q17_Part_1','Q17_Part_2','Q17_Part_3','Q17_Part_4','Q17_Part_5','Q17_Part_6','Q17_Part_7','Q17_Part_8','Q17_Part_9','Q17_Part_10','Q17_Part_11','Q17_OTHER']]\nAlgo.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q17_Part_1':'Linear or Logistic Regression',\n                      'Q17_Part_2':'Decision Tree or Random Forest',\n                      'Q17_Part_3':'Gradient Boosting Machines',\n                      'Q17_Part_4':'Bayesians Apporach',\n                      'Q17_Part_5':'Evolutionary Approach',\n                      'Q17_Part_6':'Dense Neural Network',\n                      'Q17_Part_7':'Convolution Neural Ndetwork',\n                      'Q17_Part_8':'Generative Adversarial Networks',\n                      'Q17_Part_9':'Recurrent Neural Networks',\n                      'Q17_Part_10':'Transformer Networks',\n                      'Q17_Part_11':'None',\n                      'Q17_OTHER':'Others'},inplace=True)","9d884f4b":"Algo_edu=Algo.groupby(['edu']).count()\nAlgo_role=Algo.groupby(['role']).count()","e51483fc":"Algo_role.columns","8f38d1b4":"index=pd.Series(Algo_role.index)\nAlgo_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,Algo_role], axis=1)\nAlgo_role=p\n\nindex=pd.Series(Algo_edu.index)\nAlgo_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,Algo_edu], axis=1)\nAlgo_edu=p\n\nAlgo_role.plot(x= \"role\", y=[ 'Linear or Logistic Regression',\n       'Decision Tree or Random Forest', 'Gradient Boosting Machines',\n       'Bayesians Apporach', 'Evolutionary Approach', 'Dense Neural Network',\n       'Convolution Neural Ndetwork', 'Generative Adversarial Networks',\n       'Recurrent Neural Networks', 'Transformer Networks', 'None', 'Others'], kind=\"line\",marker='.',figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","005b0c98":"Comp_V=df[['Q4','Q5','Q18_Part_1','Q18_Part_2','Q18_Part_3','Q18_Part_4','Q18_Part_5','Q18_Part_6','Q18_OTHER']]\nComp_V.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q18_Part_1':'General Purpose tool',\n                      'Q18_Part_2':'Image Segmentation',\n                      'Q18_Part_3':'Object Detection',\n                      'Q18_Part_4':'Image Classification',\n                      'Q18_Part_5':'Generative Network',\n                      'Q18_Part_6':'None',\n                      'Q18_OTHER':'Others'},inplace=True)","78b98679":"Comp_V_edu=Comp_V.groupby(['edu']).count()\nComp_V_role=Comp_V.groupby(['role']).count()","b9e7b040":"index=pd.Series(Comp_V_role.index)\nComp_V_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,Comp_V_role], axis=1)\nComp_V_role=p\n\nindex=pd.Series(Comp_V_edu.index)\nComp_V_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,Comp_V_edu], axis=1)\nComp_V_edu=p\n\nComp_V_role.plot(x= \"role\", y=[ 'General Purpose tool', 'Image Segmentation', 'Object Detection',\n       'Image Classification', 'Generative Network', 'None', 'Others'], kind=\"line\",marker='.',figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","4164af4c":"NLP=df[['Q4','Q5','Q19_Part_1','Q19_Part_2','Q19_Part_3','Q19_Part_4','Q19_Part_5','Q19_OTHER']]\nNLP.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q19_Part_1':'Word embedding model',\n                      'Q19_Part_2':'encoder decoder model',\n                      'Q19_Part_3':'Contextualized embedding',\n                      'Q19_Part_4':'Transformer Language model',\n                      'Q19_Part_5':'None',\n                      'Q19_OTHER':'Others'},inplace=True)","eab96bb9":"NLP_edu=NLP.groupby(['edu']).count()\nNLP_role=NLP.groupby(['role']).count()","fe7a7eeb":"NLP_role.columns","fdf1b1c7":"index=pd.Series(NLP_role.index)\nNLP_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,NLP_role], axis=1)\nNLP_role=p\n\nindex=pd.Series(NLP_edu.index)\nNLP_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,NLP_edu], axis=1)\nNLP_edu=p\n\nNLP_role.plot(x= \"role\", y=['Word embedding model', 'encoder decoder model',\n       'Contextualized embedding', 'Transformer Language model', 'None',\n       'Others'], kind=\"line\",marker='.',figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","454be2ec":"ML_O=df[['Q22']]\nML_g=ML_O.groupby(['Q22'])['Q22'].count()\nML_g=pd.DataFrame(ML_g)\n","02d595ca":"index=pd.Series(ML_g.index)\nML_g.index=[0,1,2,3,4,5]\np =pd.concat([index,ML_g], axis=1)\nML_g=p\nML_g.columns=['ML in industry','Frequency']","e50d4d63":"ML_g.plot(x= \"ML in industry\", y=['Frequency'],figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","7c798cbe":"Y_Compensation=df[['Q4','Q5','Q24']]\nY_Compensation.rename(columns={'Q4':'edu',\n                              'Q5':'role',\n                              'Q24':'Compensation'},inplace=True)","5a222c5a":"Y_Compensation_edu=Y_Compensation.groupby(['edu']).count()\nY_Compensation_role=Y_Compensation.groupby(['role']).count()","135afbf0":"index=pd.Series(Y_Compensation_role.index)\nY_Compensation_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,Y_Compensation_role], axis=1)\nY_Compensation_role=p\n\nindex=pd.Series(Y_Compensation_edu.index)\nY_Compensation_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,Y_Compensation_edu], axis=1)\nY_Compensation_edu=p\n\nY_Compensation_role.plot(x= \"role\", y=['Compensation'], kind=\"bar\",width=1,figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","d3c7a1c6":"Money_S=df[['Q4','Q5','Q25']]\nMoney_S.rename(columns={'Q4':'edu',\n                              'Q5':'role',\n                              'Q25':'Money Spent'},inplace=True)","ad9b67bb":"Money_S_edu=Money_S.groupby(['edu','Money Spent']).count()","be356c80":"Money_S_edu=pd.DataFrame(Money_S_edu)","8201a714":"# index=pd.Series(Money_S_edu.index)\n# Money_S_edu.index=[0,1,2,3,4,5,6]\n# p =pd.concat([index,Money_S_edu], axis=1)\n# Money_S_edu=p\n\n\n# Money_S_edu.plot(x= \"Money Spent\", y=['role'], kind=\"scatter\",width=1,figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","dbebb14c":"Cloud_P=df[['Q4','Q5','Q26_A_Part_1','Q26_A_Part_2','Q26_A_Part_3','Q26_A_Part_4','Q26_A_Part_5','Q26_A_Part_6','Q26_A_Part_7','Q26_A_Part_8','Q26_A_Part_9','Q26_A_Part_10','Q26_A_Part_11','Q26_A_OTHER']]\nCloud_P.rename(columns={'Q4':'edu',\n                      'Q5':'role',\n                      'Q26_A_Part_1':'Amazon Web Services (AWS)',\n                      'Q26_A_Part_2':'Microsoft Azure',\n                      'Q26_A_Part_3':'GCP',\n                      'Q26_A_Part_4':'IBM Cloud',\n                      'Q26_A_Part_5':'Oracle Cloud',\n                      'Q26_A_Part_6':'SAP Cloud',\n                      'Q26_A_Part_7':'Salesforce Cloud',\n                      'Q26_A_Part_8':'VMWare Cloud',\n                      'Q26_A_Part_9':'Alibaba Cloud',\n                      'Q26_A_Part_10':'Tencent Cloud',\n                      'Q26_A_Part_11':'None',\n                      'Q26_A_OTHER':'Others'},inplace=True)","13586c4f":"Cloud_P_edu=Cloud_P.groupby(['edu']).count()\nCloud_P_role=Cloud_P.groupby(['role']).count()","d6145765":"Cloud_P_role.columns","15187d32":"index=pd.Series(Cloud_P_role.index)\nCloud_P_role.index=[0,1,2,3,4,5,6,7,8,9,10,11,12]\np =pd.concat([index,Cloud_P_role], axis=1)\nCloud_P_role=p\n\nindex=pd.Series(Cloud_P_edu.index)\nCloud_P_edu.index=[0,1,2,3,4,5,6]\np =pd.concat([index,Cloud_P_edu], axis=1)\nCloud_P_edu=p\n\nCloud_P_role.plot(x= \"role\", y=['Amazon Web Services (AWS)', 'Microsoft Azure', 'GCP',\n       'IBM Cloud', 'Oracle Cloud', 'SAP Cloud', 'Salesforce Cloud',\n       'VMWare Cloud', 'Alibaba Cloud', 'Tencent Cloud', 'None', 'Others'], kind=\"bar\",width=1,figsize=(20,5)).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))","3da87026":"NLP Methods","9a58defb":"Yearly Compensation\n","d46633d6":"Computer Vision","3267e34f":"Cloud Platform\n","d18ebb1d":"Visualization Libraries used","93ace9c8":"Computing platform used","2980813b":"Notebook","71acacde":"Recommended Particularly by data scientist","ee4368b1":"Money spent","2eb2ba3e":"Python seems to be promising and powerful language for all the professions.DBA professionals though SQL being main language there is more or less equal importance to python. For Data Analyst one can go with Python or R; if you want to make career in Data Analysis you should be well versed with python or R and along with that SQL also is vital.Data Engineer Python and R plays a vital role. Though other language can be used for Data Science, Scientist prefer using Python than R or any other language along with SQL.Students are also keen about python. Python is one of the most powerfull language of this era. Which is in high value in almost every field.\nIf you are looking forward to any these above field mentioned and dont know where to start or which language to learn first then without giving it any thought go for Python.","8f4526ae":"From the above graph, it is clear very few people prefer doing professional courses, most people prefer to do Master's after Bachelor's, but few prefer studying for Doctoral after Master's ","adbb68f6":"ML models in Office\n","96e354c1":"Specialized Hardware","d9fd0591":"ML Framework","36cbf2d4":"Aspiring data scientist should learn\n","212f7e89":"Most number of people who participated in kaggle machine learning and data science survey are from India having more than 50000 participation followed by USA having around 2000 participants followed by Japan , Brazil and then other countries"}}