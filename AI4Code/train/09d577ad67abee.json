{"cell_type":{"9f2b2a01":"code","e1cfc3fd":"code","e835e065":"code","0cefc5eb":"code","4de8b01e":"code","c28ed1d3":"code","2db22366":"code","320ce51f":"code","8119e8dc":"code","31af6e29":"code","ab74d051":"code","aa25d7a7":"code","b99930d3":"code","5fa52b31":"code","3ffe8b7e":"code","63a89247":"code","731d5d4f":"code","e159c4a6":"markdown","5a210a95":"markdown"},"source":{"9f2b2a01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1cfc3fd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nimport geopandas as gpd\nimport squarify    # pip install squarify (algorithm for treemap)\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nfrom folium.plugins import HeatMap","e835e065":"df = pd.read_csv('..\/input\/california-housing-prices\/housing.csv')\ndf.head()","0cefc5eb":"df.ocean_proximity.value_counts()","4de8b01e":"plt.figure(figsize=(16,7))\ndf['ocean_proximity'].value_counts().plot(kind='bar',edgecolor='k', alpha=0.8)\n  \nfor index, value in enumerate(df['ocean_proximity'].value_counts()):\n    plt.text(index, value, str(value))\nplt.xlabel(\"Area\", fontsize=14)\nplt.ylabel(\"Houses\", fontsize=13)\nplt.xticks(rotation=0)\nplt.title(\"Houses across the state of California (CA)\", fontsize=15)\nplt.show() ","c28ed1d3":"california_img = plt.imread('..\/input\/ca-stuff\/ca_map.png')\n\ndf.plot(kind='scatter', x='longitude', y='latitude',  alpha=0.3,\n                s=df['population']\/50, label='population', figsize=(10,7), c='b', zorder=2)\n\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05], alpha=1)\nplt.title('Population across California',fontsize=15)\nplt.legend() \nplt.show()","2db22366":"california_img = plt.imread('..\/input\/ca-stuff\/ca_map.png')\n\ndf.plot(kind='scatter', x='longitude', y='latitude', alpha=0.4,\n        s=df['population']\/100, label='population', figsize=(10,7),\n        c='median_house_value', cmap=plt.get_cmap('jet'), colorbar=True)\n\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05], alpha=1)\nplt.title('Median House Value across California',fontsize=15)\nplt.legend() \nplt.show()","320ce51f":"df.median_house_value.head()","8119e8dc":"plt.figure(figsize=(16,7))\n\ndf['median_house_value'].hist(bins=100)\nplt.xlabel(\"Median House Value\", fontsize=14)\nplt.ylabel(\"Houses\", fontsize=13)\nplt.xticks(rotation=0)\nplt.title(\"Median House Value across the state of California (CA)\", fontsize=15)\nplt.show() ","31af6e29":"plt.figure(figsize=(20,5))\nsns.set_color_codes(palette=\"bright\")\nsns.distplot(df['median_house_value'],color='g')\nplt.title(\"Median House Value across the state of California (CA)\", fontsize=15)\nplt.xlabel(\"Median House Value\", fontsize=13)\nplt.ylabel(\"Houses\", fontsize=13)\nplt.show()","ab74d051":"plt.figure(figsize=(12,8))\nsns.jointplot(x=df.latitude.values,y=df.longitude.values,height=10, alpha=0.5)\nplt.ylabel(\"longitude\")\nplt.xlabel(\"latitude\")\nplt.show()","aa25d7a7":"df.columns","b99930d3":"# Create the GeoDataFrame\ndf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df[\"longitude\"], df[\"latitude\"]) )\n\ndf.head()","5fa52b31":"california = gpd.read_file('..\/input\/ca-stuff\/f067d2f7-7950-4e16-beba-8972d811599c2020329-1-18infjv.25og.shp')\ncalifornia.head()","3ffe8b7e":"# Using groupby to plot World Heritage Sites that are in the danger list\nax=california.plot(figsize=(15,10),linestyle=\":\",edgecolor='black',color='lightgray')\ndf.groupby(\"ocean_proximity\")['geometry'].plot(ax=ax,marker='o', markersize=50, alpha=0.4)\nplt.title(\"Houses by Ocean Proximity across California\", fontsize=14)\nplt.show()","63a89247":"m = folium.Map(location=[37.166773, -120.436393], tiles=\"OpenStreetMap\", zoom_start=6)\n \n# I can add marker one by one on the map\nfor i in range(0,len(df)):\n    folium.Circle([df.iloc[i]['latitude'], df.iloc[i]['longitude']], popup=df.iloc[i]['ocean_proximity'], radius=10).add_to(m)\n#m.save('Folium CA.png')  <-----To download the graph\nm","731d5d4f":"map_ca = folium.Map(location=[36.7783,-119.4179],\n                    zoom_start = 6, min_zoom=5) \n\ndf1 = df[['latitude', 'longitude']]\ndata = [[row['latitude'],row['longitude']] for index, row in df1.iterrows()]\nHeatMap(data, radius=10).add_to(map_ca)\nmap_ca","e159c4a6":"**Import Essentials**","5a210a95":"**Load Datasets**"}}