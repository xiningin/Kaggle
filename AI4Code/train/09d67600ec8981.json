{"cell_type":{"cfbfa98d":"code","7f4b36ec":"code","965341a6":"code","81572678":"code","7b6a719c":"code","6e4c03a7":"code","7cc05d8a":"code","5ac3af5b":"code","0c6c79ca":"code","eb1c25da":"markdown"},"source":{"cfbfa98d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n## importing libraries\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\n%matplotlib inline \nfrom sklearn.model_selection import train_test_split\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f4b36ec":"#view dataset\ndiabetes=pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndiabetes.head()","965341a6":"# data normalization\ncols_to_norm= ['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction']\ndiabetes[cols_to_norm]=diabetes[cols_to_norm].apply(lambda x: (x - x.min()) \/ (x.max() - x.min()))\ndiabetes.head()","81572678":"#numerical features\npreg_cnt=tf.feature_column.numeric_column('Pregnancies')\nglu_cnt=tf.feature_column.numeric_column('Glucose')\nbp=tf.feature_column.numeric_column('BloodPressure')\ntricep=tf.feature_column.numeric_column('SkinThickness')\ninsulin=tf.feature_column.numeric_column('Insulin')\nbmi=tf.feature_column.numeric_column('BMI')\npedigree=tf.feature_column.numeric_column('DiabetesPedigreeFunction')\nage=tf.feature_column.numeric_column('Age')\n\n#categorical feature\nage_grp=tf.feature_column.bucketized_column(age, boundaries=[20,40,50,60,70,80])","7b6a719c":"# data visualization  \ndiabetes['Age'].hist(bins=20,facecolor='yellow', alpha=0.5)\nplt.xlabel('Age')\nplt.ylabel('Diabetes Count')\nplt.subplots_adjust(left=0.15)\nplt.show()","6e4c03a7":"#combining all features\nfea_col=[preg_cnt,glu_cnt,bp,tricep,insulin,bmi,pedigree,age_grp]\n\n#data classifictaion\nx_data=diabetes.drop('Outcome', axis=1)\nx_label=diabetes['Outcome']\n\n#data splitting\nX_train, X_test, y_train,y_test=train_test_split(x_data,x_label,test_size=0.33,random_state=101)","7cc05d8a":"#appliying estimator on training data\ninput_func=tf.compat.v1.estimator.inputs.pandas_input_fn(x=X_train,y=y_train,\n                                                         batch_size=10,\n                                                         num_epochs=100,\n                                                         shuffle=True)\n\n#model estimation\nmodel=tf.estimator.LinearClassifier(feature_columns=fea_col,n_classes=2)\nmodel.train(input_fn=input_func,steps=1000)","5ac3af5b":"#appliying estimator on test data\npred_func=tf.compat.v1.estimator.inputs.pandas_input_fn(x=X_test,\n                                                         batch_size=10,\n                                                         num_epochs=1,\n                                                         shuffle=False)\n\n#creating model\npred=model.predict(pred_func)","0c6c79ca":"#exporting result \n##  classes -[b'0'],[b'1'] : b-binary 0\/1- diabetes no\/yes or class_ids-0\/1\ndf_test=pd.DataFrame(pred)\ndf_test.to_csv('\/kaggle\/working\/pred_diabetes.csv')","eb1c25da":"### Problem Statement - Diagonising diabetes predection based on historical medical records\n#### Success Factor- if we reach 95% of the prediction rate than will cotinue with this project.\n#### Ref-> https:\/\/www.kaggle.com\/uciml\/pima-indians-diabetes-database"}}