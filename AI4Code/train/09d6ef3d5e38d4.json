{"cell_type":{"39163970":"code","e8eb621a":"code","7030adf6":"code","f6496b2f":"code","ec6861f9":"code","50721bb1":"code","385544bd":"code","32a6d5e8":"code","fe132aeb":"code","5dc13458":"code","fde4dafd":"code","8d67caaf":"code","484c6549":"code","e799d775":"code","3d0dda69":"code","3b1b416b":"code","2cf68c31":"code","81b68d77":"markdown","5f60cd96":"markdown","6d98499c":"markdown","2013c25f":"markdown","afe4a0c5":"markdown","ec2192f7":"markdown","50aa13eb":"markdown"},"source":{"39163970":"!pip install pycaret==2.0","e8eb621a":"import random\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pycaret.classification import *\nfrom sklearn.model_selection import train_test_split","7030adf6":"sampleNumber=10000","f6496b2f":"\nd = {\n    'x1': np.random.randint(0,3,sampleNumber) ,#Make sacrifices\n    'x2': np.random.randint(0,3,sampleNumber) ,#Punctuality\n    'x3': np.random.randint(0,2,sampleNumber) ,#Not feeling bored while you are together\n    'x4': np.random.randint(0,3,sampleNumber) ,#You evaluate gifts\n    'x5': np.random.randint(0,2,sampleNumber) ,#Take care of my problems\n    'x6': np.random.randint(0,2,sampleNumber) ,#Rai respect \n    'y' : np.zeros(sampleNumber, dtype=bool)\n    }\ndata  = pd.DataFrame(data=d)\n\n\n \ndata[\"y\"]=(data['x1'] +   data['x2'] +    data['x3'] +   data['x4'] +   data['x5']+    data['x6'])>4\n\n\nX=data[['x1','x2','x3','x4','x5','x6']]\ny=data[[\"y\"]]\n\n","ec6861f9":"X_train, X_test, y_train, y_test = train_test_split(    \n    X, y, test_size=.20, random_state=42)","50721bb1":"train_Data=X_train\ntrain_Data[\"y\"]=y_train\ndel X_train\ndel y_train","385544bd":"\nclf= setup(data = train_Data, target = \"y\")","32a6d5e8":"compare_models()","fe132aeb":"lr = create_model('lr')","5dc13458":"plot_model(lr,\"confusion_matrix\")","fde4dafd":"evaluate_model(lr)","8d67caaf":"lr_pred = predict_model(lr, data = X_test) #new_data is pd dataframe","484c6549":"lr_pred","e799d775":"y_test.reset_index(drop=True, inplace=True)","3d0dda69":"y_test","3b1b416b":"y_test=y_test.astype(\"int\").values.T","2cf68c31":"correct_predictions = np.nonzero(lr_pred[\"Label\"].values==y_test)[0]\nincorrect_predictions = np.nonzero(lr_pred[\"Label\"].values!=y_test)[0]\nprint(len(correct_predictions),\" classified correctly\")\nprint(len(incorrect_predictions),\" classified incorrectly\")","81b68d77":"In the end,I use a low code ML library called as PyCaret,this library automatically fits different classifier models to the data and gives output within seconds.I urge all the intermediate and advanced level ML enthusiasts to have a look at PyCaret implementation as it is really useful for deciding which models to focus on and also helps in its fine tuning","5f60cd96":"# **References**","6d98499c":"# **PyCaret**","2013c25f":"# Thankyou for Reading and Do Upvote If you liked !!!","afe4a0c5":"https:\/\/pycaret.org\/","ec2192f7":"# **Thank You for opening this notebook!!!**","50aa13eb":"https:\/\/www.kaggle.com\/darthmanav\/interview-data-random-forest-knn-pycaret-2-0"}}