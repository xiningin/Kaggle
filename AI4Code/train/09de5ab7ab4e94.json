{"cell_type":{"23bfc0ef":"code","0d60c617":"code","98dd3acd":"code","559a8beb":"code","3ba713d8":"code","b3b9966c":"code","00b0c236":"code","a1b7428e":"code","25efd3f1":"code","6556068c":"code","0f8f0080":"code","1865c9c6":"code","bf34dc4c":"code","eaf577d2":"markdown","98e25478":"markdown","a61062d6":"markdown"},"source":{"23bfc0ef":"import numpy as np\nimport pandas as pd","0d60c617":"!pip install openpyxl\n\nxls = pd.ExcelFile(r'\/kaggle\/input\/insider-trading-vietnam\/Insider_Trading_events.xlsx')\ndf = pd.read_excel(xls)","98dd3acd":"df.rename(columns={\"DateBuyExpected\":\"DateStartExpected\",\"DateSellExpected\":\"DateEndExpected\"},inplace=True)\n\nimport unidecode\ndef remove_accent(data):\n    list_col = ['Title_Event','TypeName','DTTHLQ','StatusName','PositionCD','DTTHLQ','DTTHCD','DTLQLQ','NVTH','ExtraPositionNLQ','ExtraPositionNLQEx','RelationShipType']\n    \n    for colname in list_col:\n        data[colname]=data[colname].apply(str)\n        data[colname]=data[colname].apply(unidecode.unidecode)\n    return data\n\nremove_accent(df)","559a8beb":"#Only keep all Report Date before 2021\ndf = df[(df['ReportDate']<'2021-01-01')]","3ba713d8":"#Match events of affiliated persons. df1 is the dataframe contains only events of affiliated persons\ndf1 = df[df['TypeName']=='GD cua nguoi lien quan']\n\n#Get register events first, rename ReportDate as RegisteredDate, create df1_dangky & df1_ketqua \ndf1_dangky = df1[df1['StatusName']=='Dang ky']\ndf1_dangky.rename(columns={\"ReportDate\":\"RegisterDate\"}, inplace=True)\ndf1_dangky = df1_dangky[['StockCode','RegisterDate','DTLQLQ','DTTHLQ','DateStartExpected','DateEndExpected']]\n\n\ndf1_ketqua = df1[df1['StatusName']=='Ket qua']\ndf1_ketqua.rename(columns={\"ReportDate\":\"ResultReportDate\"}, inplace=True)\ndf1_dangky","b3b9966c":"df1_ketqua","00b0c236":"#Match df1_ketqua with df1_dangky using 'StockCode','DTLQLQ','DTTHLQ','DateStartExpected','DateEndExpected'\ndf1_ketqua = df1_ketqua.merge(df1_dangky, left_on=['StockCode','DTLQLQ','DTTHLQ','DateStartExpected','DateEndExpected'], right_on=['StockCode','DTLQLQ','DTTHLQ','DateStartExpected','DateEndExpected'])\ndf1_ketqua","a1b7428e":"df1_ketqua = df1_ketqua.reindex(columns=['StockCode','RegisterDate','ResultReportDate','DateStartExpected','DateEndExpected','DateActionFrom','DateActionTo','TypeName','RegisterVolumeBefore','RegisterVolumeBeforePercent','RegisterBuyVolume','RegisterSellVolume','RegisterVolumeAfter','RegisterVolumeAfterPercent','VolumeBefore','VolumeBeforePercent','BuyVolume','SellVolume','VolumeAfter','VolumeAfterPercent','Title_Event','PositionCD','DTTHCD','DTTHLQ','DTLQLQ','NVTH','ExtraPositionNLQ','ExtraPositionNLQEx','RelationShipType'])\ndf1_ketqua = df1_ketqua.dropna(subset=['RegisterDate','ResultReportDate','DateStartExpected','DateEndExpected','DateActionFrom','DateActionTo'])\ndf1_ketqua","25efd3f1":"#Match events of insiders. df2 is the dataframe contains only events of affiliated persons\ndf2 = df[df['TypeName'] == 'GD CD noi bo']\ndf2 = df2[df2['ReportDate']<'2021-01-01']\n\n#Get register events first, rename ReportDate as RegisteredDate, create df2_dangky & df2_ketqua \ndf2_dangky = df2[df2['StatusName'] == 'Dang ky']\ndf2_dangky.rename(columns = {\"ReportDate\": \"RegisterDate\"}, inplace=True)\ndf2_dangky = df2_dangky[['StockCode','RegisterDate','DTTHCD','PositionCD','DateStartExpected','DateEndExpected']]\n\ndf2_ketqua = df2[df2['StatusName']=='Ket qua']\ndf2_ketqua.rename(columns={\"ReportDate\" : \"ResultReportDate\"}, inplace=True)\ndf2_dangky","6556068c":"#Match df2_ketqua with df2_dangky using 'StockCode','DTTHCD','PositionCD','DateStartExpected','DateEndExpected'\ndf2_ketqua = df2_ketqua.merge(df2_dangky, left_on=['StockCode','DTTHCD','PositionCD','DateStartExpected','DateEndExpected'], right_on=['StockCode','DTTHCD','PositionCD','DateStartExpected','DateEndExpected'])\ndf2_ketqua","0f8f0080":"df2_ketqua = df2_ketqua.reindex(columns=['StockCode','RegisterDate','ResultReportDate','DateStartExpected','DateEndExpected','DateActionFrom','DateActionTo','TypeName','RegisterVolumeBefore','RegisterVolumeBeforePercent','RegisterBuyVolume','RegisterSellVolume','RegisterVolumeAfter','RegisterVolumeAfterPercent','VolumeBefore','VolumeBeforePercent','BuyVolume','SellVolume','VolumeAfter','VolumeAfterPercent','Title_Event','PositionCD','DTTHCD','DTTHLQ','DTLQLQ','NVTH','ExtraPositionNLQ','ExtraPositionNLQEx','RelationShipType'])\ndf2_ketqua = df2_ketqua.dropna(subset=['RegisterDate','ResultReportDate','DateStartExpected','DateEndExpected','DateActionFrom','DateActionTo'])\ndf2_ketqua","1865c9c6":"df1_ketqua['Diff_days'] = df1_ketqua['DateStartExpected'] - df1_ketqua['RegisterDate']\ndf1_ketqua['Diff_days'] = df1_ketqua['Diff_days'].dt.days\ndf1_ketqua = df1_ketqua[(df1_ketqua['Diff_days']>=3)&(df1_ketqua['Diff_days']<15)]\ndf1_ketqua","bf34dc4c":"df2_ketqua['Diff_days'] = df2_ketqua['DateStartExpected'] - df2_ketqua['RegisterDate']\ndf2_ketqua['Diff_days'] = df2_ketqua['Diff_days'].dt.days\ndf2_ketqua = df2_ketqua[(df2_ketqua['Diff_days']>=3)&(df2_ketqua['Diff_days']<15)]\ndf2_ketqua","eaf577d2":"**Step 1: Import relevant packages**","98e25478":"**Step 3: Clean data before matching**","a61062d6":"**Step 2: Remove accents**"}}