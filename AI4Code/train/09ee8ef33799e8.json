{"cell_type":{"6ad6c097":"code","67b38f98":"code","dc9e07a1":"code","8a68ab41":"code","eeeca0b3":"code","532885db":"code","40037cf7":"code","8eb3ef1a":"code","52e32bd7":"code","7e49c95a":"code","637ddc9e":"code","87cee57a":"code","9d6b81e2":"code","e41092d6":"code","780fd9e7":"code","cf681aff":"code","f57766ab":"markdown","0ea69e61":"markdown","78fd9463":"markdown","519883f2":"markdown","e386b501":"markdown","df14adf7":"markdown","75a99b8c":"markdown","56628cdf":"markdown"},"source":{"6ad6c097":"from fastai.vision.all import *","67b38f98":"labels = pd.read_csv(\"..\/input\/dog-breed-identification\/labels.csv\")\nlabels","dc9e07a1":"labels[\"breed\"].value_counts().plot(kind=\"hist\");","8a68ab41":"from sklearn.model_selection import StratifiedShuffleSplit\n\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\ntrain_ids, valid_ids = next(split.split(labels, labels[\"breed\"]))\nlabels[\"is_valid\"] = [i in valid_ids for i in range(len(labels))]\n\nlabels[\"id\"] = labels[\"id\"].apply(lambda x: x + \".jpg\")","eeeca0b3":"path = \"..\/input\/dog-breed-identification\/train\"\n\ndls = ImageDataLoaders.from_df(labels, path,\n                               item_tfms=Resize(460, method=\"squeeze\"),\n                               batch_tfms=[*aug_transforms(size=300, mult=1.5),\n                                           Contrast(),\n                                           Saturation(),\n                                           Normalize.from_stats(*imagenet_stats)],\n                               bs=64, valid_col=\"is_valid\")","532885db":"dls.show_batch()","40037cf7":"label_count = labels[\"breed\"].value_counts()\nn_samples = labels.shape[0]\nn_classes = len(dls.vocab)\nweights = [n_samples \/ (n_classes * label_count[label]) for label in dls.vocab]\nweights = tensor(weights, device=\"cuda\")","8eb3ef1a":"learn = cnn_learner(dls, resnet152, loss_func=nn.CrossEntropyLoss(),\n                    metrics=[accuracy, F.cross_entropy], path=\".\").to_fp16()","52e32bd7":"learn.lr_find()","7e49c95a":"learn.fit_one_cycle(3, 1e-3)","637ddc9e":"learn.save(\"freezed\")\n#learn = learn.load(\"freezed\").to_fp16()","87cee57a":"learn.unfreeze()\nlearn.lr_find()","9d6b81e2":"learn.fit_one_cycle(5, slice(1e-6, 1e-4))","e41092d6":"test_files = get_image_files(\"..\/input\/dog-breed-identification\/test\")\ntest_dl = dls.test_dl(test_files, bs=8)","780fd9e7":"preds, targs = learn.tta(dl=test_dl)","cf681aff":"preds = torch.softmax(preds, dim=1)\nsub = pd.DataFrame({\"id\":test_files.map(lambda x:x.stem)})\nsub[list(dls.vocab)] = preds\nsub.to_csv(\"submission.csv\", index=False)","f57766ab":"freeze the convnet part","0ea69e61":"# Get predictions of test data","78fd9463":"split data set into training and validation set in a stratified manner","519883f2":"compute weights for each class to deal with classes imabalance","e386b501":"preparing dataloaders","df14adf7":"# Data Preparation","75a99b8c":"# Training our model","56628cdf":"train the model"}}