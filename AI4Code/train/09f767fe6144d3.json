{"cell_type":{"81e0769f":"code","a5830ff4":"code","e236c2d9":"code","1bae2274":"code","a4b5c947":"code","9d0b8d13":"code","80473b80":"code","02686e13":"code","ae91ef47":"code","c99eb080":"code","961f2570":"code","5339eef8":"code","f79e0008":"code","b98d229c":"code","2b69861a":"code","fe5b8732":"code","1f4f1627":"code","daadf01a":"code","43fd077a":"code","e10f01b7":"code","e914fb13":"code","63569d64":"code","faad6117":"markdown","76041e4b":"markdown","9d86c5b1":"markdown","8d33864b":"markdown","13d95106":"markdown","2d1f490c":"markdown"},"source":{"81e0769f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a5830ff4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e236c2d9":"df=pd.read_csv(\"..\/input\/world-population-by-year\/WorldPopulation.csv\")\ndf.head()","1bae2274":"df.shape","a4b5c947":"df.isna().sum()","9d0b8d13":"df.info()","80473b80":"df.describe()","02686e13":"df.hist(figsize=(20,15))\nplt.show","ae91ef47":"sns.pairplot(df)","c99eb080":"plt.xlabel('Year')\nplt.ylabel('Population')\nplt.scatter(df.Year,df.Population,color='red',marker='+')\nplt.show()","961f2570":"\nfig=plt.figure(figsize=(20,10))\nplt.bar(df['Year'],df.Population)\nplt.bar(df['Year'],df.Urban)\nplt.show()\n","5339eef8":"plt.hist(df.Urban)\nplt.show","f79e0008":"corr=df.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(corr,square=True,annot=True)","b98d229c":"plt.figure(figsize=(15,8))\nsns.barplot(df.Year[:30],df.NetChange)\nplt.show()","2b69861a":"plt.figure(figsize=(20,15))\nsns.barplot(df.Year[:40],df.Density)","fe5b8732":"input=df.drop('Population',axis='columns')\ntarget=df.Population","1f4f1627":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(input,target)","daadf01a":"len(x_train)","43fd077a":"len(x_test)","e10f01b7":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()","e914fb13":"model.fit(x_train,y_train)","63569d64":"model.score(x_test,y_test)","faad6117":"# Relation Between Urban Population And Total Population with years\n","76041e4b":"# lets import LinearRegression algorithm","9d86c5b1":"# so the model works with great accuracy","8d33864b":"# Please UPVOTE and comment If you like the notebook.","13d95106":"# Please UPVOTE and comment If you like the notebook.","2d1f490c":"# # ****As the year increase the population is increasing linearly"}}