{"cell_type":{"b3c29db1":"code","d145ca7f":"code","c3f23095":"code","9fa06261":"code","575beed8":"code","407d002c":"code","9566b917":"code","e00c1dc3":"code","c251c329":"code","3aa0c3c4":"code","ee2d4b02":"code","bdd60f91":"code","906ff830":"code","d4a15962":"code","10b4575f":"code","3f9b0ab0":"code","1aa27c72":"code","a1f69828":"code","c6689d58":"code","0fb70366":"code","6836aae6":"code","e73668ea":"code","24774cd1":"code","2176dac2":"code","5108aef8":"code","f404851c":"code","37f4e599":"code","5f2b5985":"code","41c8f9a5":"code","7fc582b2":"code","3f390429":"code","56f8bcb9":"code","4516be2f":"code","54203133":"code","37831662":"code","e66518e4":"code","2feb7dd6":"code","51db6443":"code","5e122098":"code","e5b8cd5f":"code","90aaf366":"code","e2254485":"code","24e039b9":"code","ab2db8ab":"code","05c94db8":"code","d7ab02c2":"code","5fb0e725":"code","8e91b170":"code","96dde07d":"code","9d8aa334":"code","854dd244":"code","39fbdf7f":"code","8f74c9a2":"code","adf4c9b8":"code","210ebd3a":"code","c93d920e":"code","8574ba8b":"code","60fa976d":"code","0ea191a1":"code","f7ac1683":"code","cd263d40":"code","a965091b":"code","1780490a":"code","0205835f":"code","549d3afb":"code","57a10f3a":"code","2f2a0a75":"code","e7b2523b":"code","0ee79175":"code","faf095ae":"code","89cc63da":"code","4bad2a4a":"code","3b87c290":"code","7fa30ad4":"code","f6f32511":"code","2548a756":"code","802ae708":"code","14d6f7fa":"code","6d45b39a":"code","271c7ac3":"code","e391bbb7":"code","63c48351":"code","a0128100":"code","3c67cddd":"code","f2ff1834":"code","f88a2663":"code","91db6c1d":"code","3c5e9f29":"code","331a1c35":"code","c53afb0a":"code","833d3592":"code","8fc3e8fe":"code","30dc5ba0":"code","f12dc178":"markdown","7beb7a74":"markdown","979ef8f7":"markdown","4ea62655":"markdown","82da29fb":"markdown","1a87dfbe":"markdown","12510d6c":"markdown","e8b52468":"markdown","ad53572f":"markdown","2faf9006":"markdown","8545e550":"markdown","b6a5ac87":"markdown","c76a93d2":"markdown","799cf21d":"markdown","c65135bb":"markdown","d3b68ffd":"markdown","3c78ea5a":"markdown","6613519d":"markdown","58709d48":"markdown","6b738ea3":"markdown","babce1e5":"markdown","d303c726":"markdown","89030674":"markdown","010de516":"markdown","95b09409":"markdown","4ef9daae":"markdown","dbc09321":"markdown","c1b9ed85":"markdown","1d7b547a":"markdown","2c6ba252":"markdown"},"source":{"b3c29db1":"#import the libraries we need\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","d145ca7f":"df = pd.read_csv('..\/input\/ames-housing-dataset\/AmesHousing.csv')","c3f23095":"df.head()","9fa06261":"df.columns","575beed8":"df.info()","407d002c":"with open('..\/input\/advance-house-price-predicitons\/data description.txt', 'r') as f:\n    print(f.read())","9566b917":"df = df.drop('PID', axis = 1)","e00c1dc3":"df.isnull().sum()\/len(df)","c251c329":"#Make a Function to calculate the percent of missing data in each columns (feature) and then sort it\n\ndef missing_percent(df):\n    nan_percent= 100*(df.isnull().sum()\/len(df))\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","3aa0c3c4":"missing_percent(df)","ee2d4b02":"plt.figure(figsize=(12,6))\nsns.barplot(missing_percent(df).index, y=missing_percent(df))\n\nplt.xticks(rotation=90)","bdd60f91":"plt.figure(figsize=(12,6))\nsns.barplot(missing_percent(df).index, y=missing_percent(df))\nplt.xticks(rotation=90)\n\nplt.ylim(0,1)","906ff830":"missing_percent(df)[missing_percent(df)<1]","d4a15962":"df[df['Electrical'].isnull()]","10b4575f":"df.groupby('Electrical').count()","3f9b0ab0":"df['Electrical'] = df['Electrical'].fillna('SBrkr')","1aa27c72":"df[df['Garage Area'].isnull()]","a1f69828":"df= df.dropna(axis=0, subset=['Garage Area'])","c6689d58":"missing_percent(df)[missing_percent(df)<1]","0fb70366":"plt.figure(figsize=(12,6))\nsns.barplot(missing_percent(df).index, y=missing_percent(df))\nplt.xticks(rotation=90)\n\nplt.ylim(0.0,1)","6836aae6":"df[df['Total Bsmt SF'].isnull()]","e73668ea":"df[df['Bsmt Half Bath'].isnull()]","24774cd1":"df[df['Bsmt Full Bath'].isnull()]","2176dac2":"#numerical features fill with 0\n\nbsmt_num_cols= ['BsmtFin SF 1', 'BsmtFin SF 2', 'Bsmt Unf SF','Total Bsmt SF' ,'Bsmt Full Bath', 'Bsmt Half Bath']\ndf[bsmt_num_cols]=df[bsmt_num_cols].fillna(0)","5108aef8":"#categorical features fill with None\n\nbsmt_str_cols= ['Bsmt Qual', 'Bsmt Cond', 'Bsmt Exposure', 'BsmtFin Type 1', 'BsmtFin Type 2']\ndf[bsmt_str_cols]= df[bsmt_str_cols].fillna('None')","f404851c":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","37f4e599":"df[df['Mas Vnr Type'].isnull()]","5f2b5985":"df[df['Mas Vnr Area'].isnull()]","41c8f9a5":"df[\"Mas Vnr Type\"] = df[\"Mas Vnr Type\"].fillna(\"None\")\ndf[\"Mas Vnr Area\"] = df[\"Mas Vnr Area\"].fillna(0)","7fc582b2":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n","3f390429":"df[df['Garage Type'].isnull()]","56f8bcb9":"df[df['Garage Finish'].isnull()]","4516be2f":"Gar_str_cols= ['Garage Type', 'Garage Finish', 'Garage Qual', 'Garage Cond']\n\n#Categorical variables with None\ndf[Gar_str_cols]=df[Gar_str_cols].fillna('None')\n\n#numerical variables with 0\ndf['Garage Yr Blt']=df['Garage Yr Blt'].fillna(0)","54203133":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n","37831662":"df= df.drop(['Fence', 'Alley', 'Misc Feature','Pool QC'], axis=1)","e66518e4":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n","2feb7dd6":"df[df['Fireplace Qu'].isnull()]","51db6443":"df['Fireplace Qu']","5e122098":"#Filling in Fireplace Quality based on dataset documentation:\ndf['Fireplace Qu']= df['Fireplace Qu'].fillna('None')","e5b8cd5f":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","90aaf366":"df['Neighborhood'].unique()","e2254485":"plt.figure(figsize=(8,12))\nsns.boxplot(data=df, x='Lot Frontage', y='Neighborhood')","24e039b9":"#Impute missing data based on other columns:\n\ndf.groupby('Neighborhood')['Lot Frontage']","ab2db8ab":"df.groupby('Neighborhood')['Lot Frontage'].mean()","05c94db8":"df['Lot Frontage']=df.groupby('Neighborhood')['Lot Frontage'].transform(lambda val: val.fillna(val.mean()))","d7ab02c2":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","5fb0e725":"df['Lot Frontage']= df['Lot Frontage'].fillna(0)","8e91b170":"missing_percent(df)","96dde07d":"sns.scatterplot(data=df, x='Overall Qual', y='SalePrice')\nplt.axhline(y=200000,color='r')","9d8aa334":"df[(df['Overall Qual']>8) &(df['SalePrice']<200000)][['SalePrice', 'Overall Qual']]","854dd244":"sns.scatterplot(x='Gr Liv Area', y='SalePrice', data=df)\nplt.axhline(y=200000, color='r')\nplt.axvline(x=4000, color='r')","39fbdf7f":"df[(df['Gr Liv Area']>4000) & (df['SalePrice']<400000)][['SalePrice', 'Gr Liv Area']]","8f74c9a2":"#Remove the outliers:\nindex_drop=df[(df['Gr Liv Area']>4000) & (df['SalePrice']<400000)].index\ndf=df.drop(index_drop, axis=0)","adf4c9b8":"sns.scatterplot(x='Gr Liv Area', y='SalePrice', data=df)\nplt.axhline(y=200000, color='r')\nplt.axvline(x=4000, color='r')","210ebd3a":"#Remove the outliers:\nindex_drop=df[(df['Gr Liv Area']>4000) & (df['SalePrice']>700000)].index\ndf=df.drop(index_drop, axis=0)","c93d920e":"sns.scatterplot(x='Gr Liv Area', y='SalePrice', data=df)","8574ba8b":"#Based on documentation Ms subclass is just a number to show class.\n\n#Convert to String:\ndf['MS SubClass']= df['MS SubClass'].apply(str)","60fa976d":"df.select_dtypes(include='object')","0ea191a1":"df_num = df.select_dtypes(exclude='object')\ndf_obj = df.select_dtypes(include='object')","f7ac1683":"# Converting:\n\ndf_obj= pd.get_dummies(df_obj, drop_first=True)","cd263d40":"df_obj.shape","a965091b":"df_num.shape","1780490a":"df.shape","0205835f":"Final_df= pd.concat([df_num, df_obj], axis=1)","549d3afb":"Final_df.head()","57a10f3a":"df.describe()['SalePrice']","2f2a0a75":"plt.figure(figsize=(12,6))\nsns.kdeplot(data=Final_df, x=\"SalePrice\")","e7b2523b":"df.corr()['SalePrice'].sort_values()","0ee79175":"plt.figure(figsize=(12,6))\n\nsns.kdeplot(\n   data=Final_df, x=\"SalePrice\", hue=\"Overall Qual\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n)","faf095ae":"Overall_Qual_df = Final_df.groupby('Overall Qual').count()['Lot Frontage']\n#sns.barplot(x=Overall_Qual_df[0], y=Overall_Qual_df[1])\n\nplt.figure(figsize=(12,6))\nOverall_Qual_df.plot.bar()","89cc63da":"#X : Features\n#y : Target variable\n\nX = Final_df.drop(['SalePrice'], axis = 1)\ny = df['SalePrice']","4bad2a4a":"#we use train_test_split from sklearn.model_selection to devide dataset to train and test set.\n\nfrom sklearn.model_selection import train_test_split\n\n#train set in a bigger sample of dataset that model uses to learn.\n#test set in smaller sample of dataset that model should be evaluated in.\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=101)","3b87c290":"#Build model\n\nfrom sklearn.linear_model import LinearRegression\n\nRgg_model = LinearRegression()\n\nRgg_model.fit(X_train,y_train)","7fa30ad4":"#predict\n\ny_pred = Rgg_model.predict(X_test)","f6f32511":"from sklearn.metrics import mean_absolute_error, mean_squared_error\n\nRgg_MAE = mean_absolute_error(y_pred,y_test)\nRgg_MSE = mean_squared_error(y_pred,y_test)\nRgg_RMSE = np.sqrt(Rgg_MSE)\n\npd.DataFrame([Rgg_MAE, Rgg_MSE, Rgg_RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","2548a756":"from sklearn.preprocessing import StandardScaler","802ae708":"scaler = StandardScaler()","14d6f7fa":"scaler.fit(X_train)","6d45b39a":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","271c7ac3":"#Train the Model\nfrom sklearn.linear_model import RidgeCV\n\nridge_cv_model = RidgeCV(alphas = (0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')\n\nridge_cv_model.fit(X_train, y_train)","e391bbb7":"#Predicting Test Data\ny_pred= ridge_cv_model.predict(X_test)","63c48351":"RidgeCV_MAE = mean_absolute_error(y_pred,y_test)\nRidgeCV_MSE = mean_squared_error(y_pred,y_test)\nRidgeCV_RMSE = np.sqrt(RidgeCV_MSE)\n\npd.DataFrame([RidgeCV_MAE, RidgeCV_MSE, RidgeCV_RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","a0128100":"from sklearn.linear_model import LassoCV\n\nlasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)\n\nlasso_cv_model.fit(X_train, y_train)","3c67cddd":"lasso_cv_model.alpha_","f2ff1834":"y_pred= lasso_cv_model.predict(X_test)","f88a2663":"Lasso_MAE = mean_absolute_error(y_pred,y_test)\nLasso_MSE = mean_squared_error(y_pred,y_test)\nLasso_RMSE = np.sqrt(Lasso_MSE)\n\npd.DataFrame([Lasso_MAE, Lasso_MSE, Lasso_RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","91db6c1d":"from sklearn.linear_model import ElasticNetCV\n\nelastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=100000)\n\nelastic_model.fit(X_train, y_train)","3c5e9f29":"elastic_model.l1_ratio_","331a1c35":"y_pred = elastic_model.predict(X_test)","c53afb0a":"Elastic_MAE = mean_absolute_error(y_pred,y_test)\nElastic_MSE = mean_squared_error(y_pred,y_test)\nElastic_RMSE = np.sqrt(Elastic_MSE)\n\npd.DataFrame([Elastic_MAE, Elastic_MSE, Elastic_RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","833d3592":"metrics_compare = pd.DataFrame({'Model':['Linear Regression','RidgeCV','Lasso','Elastic Net'],\n                                'MAE':[Rgg_MAE,RidgeCV_MAE,Lasso_MAE,Elastic_MAE],\n                                'MSE':[Rgg_MSE,RidgeCV_MSE,Lasso_MAE,Elastic_MSE],\n                                'RMSE': [Rgg_RMSE,RidgeCV_RMSE,Lasso_RMSE,Elastic_RMSE]})","8fc3e8fe":"metrics_compare","30dc5ba0":"metrics_compare.min()","f12dc178":"We assume that the Lot Frontage is related to what a Neighborhood a house is in.","7beb7a74":"In statistics, missing data, or missing values, occur when no data value is stored for the variable in an observation. Missing data are a common occurrence and can have a significant effect on the conclusions that can be drawn from the data...\n\nread more : https:\/\/en.wikipedia.org\/wiki\/Missing_data\n\nfirst, we need to know how much data are missing?","979ef8f7":"It seems like other features with missing data should check based on thier column. There are a lot of missing data and we should change approach to analyse them.\n\nIn first step we decide to remove the columns that have more than 80 % missing values.","4ea62655":"## 4.4 Lasso Regression","82da29fb":"Some of column's name and thier valuesare not clear. So we use this document to find out more about dataset and features.","1a87dfbe":"when d-Type is object we can use dummy variables.","12510d6c":"# 5. Compare models","e8b52468":"now we check all the features for deciding what to do with missing data.","ad53572f":"As we can see there are some rows columns that have a few missing data. When missing data is just for some rows maybe the best choise is to remove them from dataset.\n\nSo, we decide to remove rows with the features that has under 1 % missing data at all.","2faf9006":"Now Preparation Data is over and we can start building models for predicting target variable.","8545e550":"It seems like missing data in features about garage happend when there is no garage in the house. So we can easily decide to fill them with 0 or None.","b6a5ac87":"In this notebook we try to work with a real dataset that needs preparation. We should deal with missing data, categorical variables and outlier rows! After cleaning dataset we try to build some model and predict them with Linear Regression, Ridge Regression, Lasso Regression & Elastic Net. \n\nThen we will compare the results and choose the best model between them.","c76a93d2":"## 4.3 Ridge CV Regression","799cf21d":"Most of electrical system is Standard Circuit Breakers & Romex. So we have 2 option:\n\n1. We can use Sbrkr for this row by Adherence to the majority.\n2. We can drop the row.\n\nI decide to Adherence to the majority.","c65135bb":"## 2-2 Categorical Features\n\nWhen ever we want to encode a categorical variable to a numerical one we should be carefull about the message that numbers deliver! ","d3b68ffd":"Now we know PID is just work like Index and we don't need that in building our model. So we can drop this column from model.","3c78ea5a":"# 3. Exploratory data analysis\n\nBased on information we get in Section 1 we choose SalePrice as target variable.","6613519d":"# 2. Preparation Data \n## 2-1 Missing Data","58709d48":"## 4.2 Polynomial Regression\n\nBecause of limitation of space Kaggle can't calculate the calculations of this model.\n## Regularization","6b738ea3":"It seems like these rows show the houses that do not have basement.","babce1e5":"These 3 features are related to basement. So we can check them together to decide what should we do with missing data.","d303c726":"It seems like SalePrice has Gamma distribution.","89030674":"Base on results **Elastic Net** build more valid model than others. However, the differences between the indexes of the models are not large.","010de516":"# 4. ML algorithm\n## 4.1 Linear Regression","95b09409":"It seems like there are same rows that have missing data in these features. We can consider that missing data in these 2 columns mean there is no mansonry veneer in house. So like before we can fill them with 0 or None.","4ef9daae":"So as we can see we handel all missing data in dataset.\n\nNow we should deal with outlier data.","dbc09321":"# 1. Import dataset and first review","c1b9ed85":"# 4.5 Elastic Net","1d7b547a":"Next feature: Garage Area","2c6ba252":"with Ames Housing Feature Description we can do a lot more in EDA."}}