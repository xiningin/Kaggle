{"cell_type":{"12e2867b":"code","b8d4038a":"code","0b785e8d":"code","92d35fd8":"code","f572de84":"code","f7dc84d7":"code","0d8fcca1":"code","70106c2b":"code","a305e03a":"code","30fea766":"code","1a3e90b3":"code","cfc0b057":"code","9de17204":"code","7792eed9":"code","40cf675b":"code","b5b2e685":"code","d03e2431":"code","0c255891":"code","daf8f363":"code","0ba1cc5a":"markdown"},"source":{"12e2867b":"# We are working on a practice problem to classify species of Iris flower ","b8d4038a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0b785e8d":"# Loading important libraries and dataset\n\nfrom sklearn.datasets import load_iris\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, f1_score, accuracy_score","92d35fd8":"# Loading the Iris Dataset here from the Sklearn library and create a model for predicting the type of Iris flowers.\n\ndataset= load_iris()\ndf= pd.concat([pd.DataFrame(data= dataset.data, columns= dataset.feature_names), pd.DataFrame(data= dataset.target, columns= ['Target'])], axis= 1)","f572de84":"df.head()\n# a simple look in to the dataset shows that there are four features (sepal and petal width and length) and a target variable","f7dc84d7":"print(df.Target.value_counts(dropna= False))\n# the code above shows that there are three classes in the iris dataset 0, 1 and 2\ndataset.target_names\n# the code above shows the corresponding species of flower in the dataset","0d8fcca1":"df.describe()","70106c2b":"# we'll check if there are missing values in the DataFrame\n\ndf.isna().sum()\n\n# from the result we can see that there are no missing values, so we will proceed without any processing","a305e03a":"plt.figure(figsize= (24, 12))\n\nfor idx, cols in enumerate(dataset.feature_names):\n    \n    plt.subplot(2,2, idx+1)\n    \n    sns.boxplot(x= 'Target', y= cols, data= df)\n    \n    # the graph below shows that there is significant difference in features between the three classes\n    # the plot also shows that there are a few possible outliers in that dataset but we'll leave them for now","30fea766":"# we'll check if there is any significance in creating a new feature from multiplying sepals and petals\n\ndf['sepal area']= df['sepal length (cm)'].mul(df['sepal width (cm)'])\ndf['petal area']= df['petal length (cm)'].mul(df['petal width (cm)'])","1a3e90b3":"plt.figure(figsize= (24, 12))\nfor idx, cols in enumerate(['sepal area', 'petal area']):\n    \n    plt.subplot(1, 2, idx+1)\n    \n    sns.boxplot(x= 'Target', y= cols, data= df)\n    \n    # we can see that this feautre brings in some differentiation in the classes but we will go ahead and\n    # create a model without these engineered features.\n    \n    ","cfc0b057":"X, y= df.drop(['Target','sepal area', 'petal area'], axis= 1), df.Target","9de17204":"X.shape, y.shape\n#checking the shape of the variables to see if the code worked right","7792eed9":"# splitting the dataset to train and test\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state= 123, stratify= y)\n# we split the dataset into 80:20 and stratify","40cf675b":"lr_clf= LogisticRegression()","b5b2e685":"lr_clf.fit(X_train, y_train)","d03e2431":"lr_pred= lr_clf.predict(X_test)","0c255891":"confusion_matrix(y_test, lr_pred)\n\n# we see that we only had one miss classification","daf8f363":"f1_score(y_test, lr_pred, average= 'macro')\n\n# we see that we have a good f1 score, I think we have a good model at hand.","0ba1cc5a":"# **Summary statistics**"}}