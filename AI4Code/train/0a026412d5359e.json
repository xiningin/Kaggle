{"cell_type":{"48171fd3":"code","587c7e0f":"code","a0b8a740":"code","ced3bdef":"code","90d62c4b":"code","eb1aba80":"code","4da5d019":"code","5a1e70dd":"code","7c283968":"code","71608fed":"code","9781442b":"code","d4030ffa":"code","d349428e":"code","ae32abdc":"code","cbc13be2":"code","f9271d2a":"code","0fe7dd0e":"code","d983d068":"code","7b2f2780":"code","e290494c":"code","007bf9e9":"code","5953103c":"code","fe517139":"code","03f09118":"code","6e93d53d":"code","7868d49f":"code","3c9a8696":"code","ebf2bf86":"code","98a8d87c":"code","2ef88208":"code","2a321e7b":"code","d999bbb1":"code","58008dcb":"code","4e0fb46f":"code","1eb6603c":"code","eaf4b840":"code","fd74c58e":"code","189517ca":"code","ae4e2fc7":"code","3807993b":"code","684e639e":"code","ba0e33fa":"code","6164f94b":"code","f67c92d2":"code","97423d12":"code","eac8d883":"code","770e43e3":"code","515fa9e7":"code","9300bb94":"code","fa164fa2":"code","adc6c266":"code","152f2822":"code","fba996f6":"code","45f482be":"code","f6ee1945":"markdown","a81a8ee3":"markdown","9728c92a":"markdown","87ecbb20":"markdown","87e19890":"markdown","026ddbfd":"markdown","90f28193":"markdown","20a0a977":"markdown","d6c1b148":"markdown","55670cbe":"markdown","56db5be8":"markdown"},"source":{"48171fd3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline","587c7e0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0b8a740":"df=pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")","ced3bdef":"df.head()","90d62c4b":"df.dropna(subset=['Rating'],inplace=True) #remove all record in which rating is null","eb1aba80":"df[df['Android Ver'].isnull()] #last record has all wrong data in their column","4da5d019":"df.drop(index=df[df['Size']=='1,000+'].index,inplace=True)","5a1e70dd":"def price(x):\n    if x[-1]=='M':\n        return float(x[:-1])*100000\n    elif x[-1]=='k':\n        return float(x[:-1])*1000\ndf['Size']=df['Size'].apply(lambda x: price(x)) #this will remove dollor sign","7c283968":"df.dtypes","71608fed":"#df.drop(index=10472,inplace=True) #so i removed the last record","9781442b":"from statistics import mode\ndf['Android Ver'].fillna(value=mode(df['Android Ver']),inplace=True)","d4030ffa":"df.loc[[4453,4490]] #after using mode","d349428e":"df[df['Current Ver'].isnull()] #same for current version \n#we will not drop any as all record looks fine","ae32abdc":"df['Current Ver'].fillna(value=mode(df['Current Ver']),inplace=True) #fill null with most common value","cbc13be2":"df.loc[[15,1553,6322,7333]]","f9271d2a":"df.tail(5)","0fe7dd0e":"df.describe()","d983d068":"df.dtypes #data types of all column here we can see that some contain numeric data but has object data type\n#but first lets clean the price which has dollor sign and object format","7b2f2780":"def price(x):\n    if x=='0':\n        return x\n    else:\n        return x[1:]\ndf['Price']=df['Price'].apply(lambda x: price(x)) #this will remove dollor sign","e290494c":"df['Price']=df['Price'].astype('float')","007bf9e9":"#df[df['Installs'].isnull()]\ndef install(x):\n    x=x.split('+')\n    y=x[0].split(',')\n    return \"\".join(y)\n\ndf['Installs']=df['Installs'].apply(lambda x: install(x)) #this will remove comma and + sign","5953103c":"df.head()","fe517139":"df['Installs']=df['Installs'].astype('int') #converted to integer","03f09118":"df['Reviews']=df['Reviews'].astype('int') #convert reviews to integer","6e93d53d":"df.dtypes #all are converted to right format","7868d49f":"df[df['Rating']>5] #no rating is greater than 5","3c9a8696":"df[df['Reviews']>df['Installs']] #Reviews should not be more than installs as only those who installed can review the\n#app","ebf2bf86":"df.drop(index=df[df['Reviews']>df['Installs']].index,inplace=True)","98a8d87c":"df[df['Reviews']>df['Installs']]","2ef88208":"sns.scatterplot(x='Price',y='Price',data=df) #most of the data are between 0-50. We can't consider the data with price \n#more than 50 as they are our outliers that can affect our analysis","2a321e7b":"#sns.distplot(df['Price'],bins=5)","d999bbb1":"df.drop(index=df[df['Price']>=30].index,inplace=True)","58008dcb":"sns.scatterplot(x='Price',y='Price',data=df) #without outliers","4e0fb46f":"sns.distplot(df['Reviews'],bins=5) #so most of the data are less than 1 million reviews so we remove all above it","1eb6603c":"df.drop(index=df[df['Reviews']>=1000000].index,inplace=True)","eaf4b840":"sns.scatterplot(x='Reviews',y='Reviews',data=df) #without outliers","fd74c58e":"df['Installs'].quantile(q=0.95) #checking the 95th percentile of the data to remove the outliers i.e. last 5s","189517ca":"df.drop(index=df[df['Installs']>10000000].index,inplace=True)  #removing last 5% which are outliers","ae4e2fc7":"df.to_csv('play_store_cleaned.csv')","3807993b":"sns.distplot(df['Rating'])","684e639e":"df['Content Rating'].value_counts() #as content rating is very less for adults and unrated as they wont needed for\n#analysis","ba0e33fa":"df.drop(index=df[df['Content Rating']=='Adults only 18+'].index,inplace=True)","6164f94b":"df.drop(index=df[df['Content Rating']=='Unrated'].index,inplace=True)","f67c92d2":"df['Content Rating'].value_counts()","97423d12":"#sns.jointplot(x='Rating',y='Size',data=df)","eac8d883":"sns.jointplot(x='Price',y='Rating',data=df)","770e43e3":"df1=df[df['Price']>0.0]","515fa9e7":"sns.jointplot(x='Price',y='Rating',data=df1)","9300bb94":"df2=df[['Reviews', 'Size', 'Rating', 'Price']]","fa164fa2":"sns.pairplot(df2)","adc6c266":"sns.jointplot(x='Price',y='Size',data=df)","152f2822":"from statistics import mode\nplt.figure(figsize=(5,5))\nsns.barplot(x='Content Rating',y='Rating',data=df)","fba996f6":"sns.jointplot(x='Rating',y='Reviews',data=df)","45f482be":"# Insights","f6ee1945":"1. Distribution of Ratings is a Left skewed distribution (Mean is smaller than median) as Most of the ratings are between 4-4.5 so most of the app perform well\n2. Most of the app are from 15mb to 40mb and as we know all the rating of apps are quiet well of 4-4.5\n3. As the free apps removed we get a clear idea and here we can conclude that paid apps are highly rated\n4. Most of the priced items are of lesser size so we can say that People prefer to pay for app of lesser size or app are designed in such a way that they are not bulky\n5. We can conclude from this is that bulky app may not perform well in the market\n6. We can see that at an average all the ratings are nearly the same (close to 4) irrespective of the content rating\n7. Mature 17+ it looks like they are lower than others\n8. Well known apps(more reviews) gets higher ratings ","a81a8ee3":"Tere is some pattern in size vs price let us explore that","9728c92a":"Distribution of Ratings is a Left skewed distribution (Mean is smaller than median)\nas Most of the ratings are between 4-4.5 so most of the app perform well\n\nWe should use some other variable with rating to get clear idea of the performance of the applications \n","87ecbb20":"# Data Cleaning","87e19890":"Here we can say that paid apps are mostly highly rated\nExceptional is there of 0 which are free apps which has mixed ratings\n\nLet us remove the free apps and observe only the paid apps","026ddbfd":"Seems like well known apps(more reviews) gets higher ratings ","90f28193":"We can see that at an average all the ratings are nearly the same (close to 4) irrespective of the content rating\n\nBut in mature 17+ it looks like they are lower than others","20a0a977":"As the free apps removed we get a clear idea and here we can conclude that paid apps are highly rated","d6c1b148":"we can see from the graph that Most of the app are from 15mb to 40mb and as we know all the rating of apps are quiet well of 4-4.5","55670cbe":"Most of the priced items are of lesser size so we can say that People prefer to pay for app of lesser size or app are designed in such a way that they are not bulky\n\nWe can conclude from this is that bulky app may not perform well in the market","56db5be8":"### Data Analysis Starts From Here"}}