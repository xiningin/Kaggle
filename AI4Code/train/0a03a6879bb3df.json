{"cell_type":{"6366f7cc":"code","30337c00":"code","ddcb5487":"code","c4ac11f8":"code","cc587899":"code","5f61f8db":"code","9f47401f":"code","de256353":"code","b392fa13":"code","f0b0f59d":"code","06477049":"code","fd1fa734":"code","2188096a":"code","224a3491":"code","a08b4e35":"code","2ef53545":"code","7e37f6db":"code","c3ab752b":"code","00dd1d2c":"code","07858eb8":"code","daff98c0":"code","62db1509":"code","3ffd5f51":"code","c3bf0a62":"code","e538f3d3":"code","4ec1fe83":"code","1cc7dc35":"code","99751b6b":"code","8f9f5383":"code","93e9a9ae":"code","8dd8c776":"code","3f73e61e":"code","04f2a87d":"code","6f37d477":"code","728a7bc2":"code","946c199b":"code","8bb91cb0":"code","69e93fb3":"code","25fa00a2":"code","3efb2cfc":"code","643ebb6f":"code","967873cc":"code","2b6e1aa7":"code","c6e2c2bd":"code","ee2a7dfd":"code","93ca49da":"code","635c7ff8":"code","42e59dfb":"code","746e249d":"code","00577915":"code","381e2e3c":"code","802bcae1":"code","19074c6a":"code","884f7ba6":"code","4cc65e33":"code","b8cf9862":"code","c28ff50e":"code","b0f792d8":"code","10510275":"code","393dc649":"markdown","2372d6d6":"markdown","c82ddca8":"markdown","9bfa497a":"markdown","6023d583":"markdown","2043b401":"markdown","6137001a":"markdown","19b48e88":"markdown","f112b23e":"markdown","24142e55":"markdown","fe86e119":"markdown","190218af":"markdown","7fea7015":"markdown","c135aeef":"markdown","6aebd8d8":"markdown","953abb41":"markdown"},"source":{"6366f7cc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport time\nimport os\nimport random\nimport datetime\nimport operator\nimport folium\nimport seaborn as sns\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use(\"fivethirtyeight\")\n%matplotlib inline","30337c00":"today=datetime.date.today().strftime(\"%m-%d-%Y\")\ndata_date=datetime.date.today()-datetime.timedelta(days=1)\nprint(\"Covid-19 Analysis on {}\".format(today))\ndata_date=data_date.strftime(\"%m-%d-%Y\")","ddcb5487":"\nconfirmed_cases=pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv\")\nconfirmed_cases.head()","c4ac11f8":"deaths_reported= pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv\")\ndeaths_reported.head()","cc587899":"recovered_cases=pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv\")\nrecovered_cases.head()","5f61f8db":"latest_data=pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_daily_reports\/{}.csv'.format(data_date))\nlatest_data.head()","9f47401f":"print(\"Datasize of Confirmed_cases dataset:\",confirmed_cases.shape)\nprint(\"Datasize of deaths_reported dataset:\",deaths_reported.shape)\nprint(\"Datasize of recovered_cases dataset:\",recovered_cases.shape)\nprint(\"Datasize of latest_data dataset:\",latest_data.shape)","de256353":"# function to find the data for the required country.\ndef country_cases(country,x):\n    dates=confirmed.columns\n    country_data=[]\n    for i in dates:\n        country_data.append(x[x['Country\/Region']==country][i].sum())\n    return country_data\n\n\n\n# function to find active cases\ndef active_cases(confirmed,recovered,deaths):\n    active = [x-(y+z) for x,y,z in zip(confirmed,recovered,deaths)]\n    return active\n\n\n# Function for daily increase cases\ndef daily_increase(data):\n    '''function to get daily increase\n    of the of the values.\n    '''\n    d=[]\n    for i in range(len(data)):\n        if i==0:\n            d.append(data[0])\n        else:\n            d.append(data[i]-data[i-1])\n    return d\n\ndef moving_average(data, window_size):\n    moving_average = []\n    for i in range(len(data)):\n        if i + window_size < len(data):\n            moving_average.append(np.mean(data[i:i+window_size]))\n        else:\n            moving_average.append(np.mean(data[i:len(data)]))\n    return moving_average","b392fa13":"# Extract all date features data\ncols=confirmed_cases.columns\nconfirmed=confirmed_cases.loc[:,cols[4]:cols[-1]]\ndeaths=deaths_reported.loc[:,cols[4]:cols[-1]]\nrecovered=recovered_cases.loc[:,cols[4]:cols[-1]]\nconfirmed.head()","f0b0f59d":"# apply country_cases function\nindia_cases = country_cases(\"India\",confirmed_cases)\nbrazil_cases= country_cases(\"Brazil\",confirmed_cases)\nus_cases= country_cases(\"US\",confirmed_cases)\nitaly_cases = country_cases(\"Italy\",confirmed_cases)\ngermany_cases = country_cases(\"Germany\",confirmed_cases)\nspain_cases = country_cases(\"Spain\",confirmed_cases)\nfrance_cases = country_cases(\"France\",confirmed_cases)\nuk_cases = country_cases(\"'United Kingdem'\",confirmed_cases)\nrussia_cases = country_cases(\"Russia\",confirmed_cases)\nperu_cases = country_cases(\"Peru\",confirmed_cases)\nchile_cases = country_cases(\"Chile\",confirmed_cases)\nmexico_cases = country_cases(\"Mexico\",confirmed_cases)","06477049":"india_deaths=country_cases(\"India\",deaths_reported)\nbrazil_deaths= country_cases(\"Brazil\",deaths_reported)\nus_deaths= country_cases(\"US\",deaths_reported)\nitaly_deaths = country_cases(\"Italy\",deaths_reported)\ngermany_deaths = country_cases(\"Germany\",deaths_reported)\nspain_deaths = country_cases(\"Spain\",deaths_reported)\nfrance_deaths = country_cases(\"France\",deaths_reported)\nuk_deaths = country_cases(\"'United Kingdem'\",deaths_reported)\nrussia_deaths = country_cases(\"Russia\",deaths_reported)\nperu_deaths = country_cases(\"Peru\",deaths_reported)\nchile_deaths = country_cases(\"Chile\",deaths_reported)\nmexico_deaths = country_cases(\"Mexico\",deaths_reported)","fd1fa734":"india_recoveries = country_cases(\"India\",recovered_cases)\nbrazil_recoveries= country_cases(\"Brazil\",recovered_cases)\nus_recoveries= country_cases(\"US\",recovered_cases)\nitaly_recoveries = country_cases(\"Italy\",recovered_cases)\ngermany_recoveries = country_cases(\"Germany\",recovered_cases)\nspain_recoveries = country_cases(\"Spain\",recovered_cases)\nfrance_recoveries = country_cases(\"France\",recovered_cases)\nuk_recoveries = country_cases(\"'United Kingdem'\",recovered_cases)\nrussia_recoveries = country_cases(\"Russia\",recovered_cases)\nperu_recoveries = country_cases(\"Peru\",recovered_cases)\nchile_recoveries = country_cases(\"Chile\",recovered_cases)\nmexico_recoveries = country_cases(\"Mexico\",recovered_cases)","2188096a":"india_cases = country_cases(\"India\",confirmed_cases)\nindia_recoveries = country_cases(\"India\",recovered_cases)\nindia_deaths=country_cases(\"India\",deaths_reported)\nindia_active = active_cases(india_cases,india_recoveries,india_deaths)\n","224a3491":"world_cases=[]\ntotal_deaths=[]\nmortatality_rate=[]\nrecovery_rate=[]\ntotal_recoverd=[]\ntotal_active=[]\nmortatality_rate = []\nrecovery_rate = []\n\ndates=confirmed.columns\nfor i in dates:\n    confirmed_sum=confirmed[i].sum()\n    death_sum=deaths[i].sum()\n    recovered_sum=recovered[i].sum()\n\n    world_cases.append(confirmed_sum)\n    total_deaths.append(death_sum)\n    total_recoverd.append(recovered_sum)\n    total_active.append(confirmed_sum-death_sum-recovered_sum)\n\n    mortatality_rate.append(death_sum\/confirmed_sum)\n    recovery_rate.append(recovered_sum\/confirmed_sum)","a08b4e35":"print(\"Daily Increse cases in India: \",daily_increase(india_cases)[::-1])","2ef53545":"unique_countries=list(latest_data['Country_Region'].unique())\nprint( \"Total No of Unique countries in dataset\\n\",len(unique_countries))\nprint(\"\\nTotal Unique countries in datasetare:-  \",unique_countries)","7e37f6db":"country_confirmed_cases=[]\ncountry_death_cases=[]\ncountry_recovery_cases=[]\ncountry_active_cases=[]\ncountry_mortality_rate=[]\ncountry_recovery_rate=[]\n\nno_cases=[]\nfor i in unique_countries:\n    cases=latest_data[latest_data['Country_Region']==i]['Confirmed'].sum()\n    if cases>0:\n        country_confirmed_cases.append(cases)\n    else:\n        no_cases.append(i)\n\nfor i in no_cases:\n    unique_countries.remove(i)\n#sort countries by the number of confirmed cases\nunique_countries=[k for k ,v in sorted(zip(unique_countries,country_confirmed_cases),key=operator.itemgetter(1),reverse=True)]\nfor i in range(len(unique_countries)):\n    country_confirmed_cases[i]=latest_data[latest_data['Country_Region']==unique_countries[i]]['Confirmed'].sum()\n    country_death_cases.append(latest_data[latest_data['Country_Region']==unique_countries[i]]['Deaths'].sum())\n    country_recovery_cases.append(latest_data[latest_data['Country_Region']==unique_countries[i]]['Recovered'].sum())\n    country_active_cases.append(country_confirmed_cases[i]-country_death_cases[i]-country_recovery_cases[i])\n    # Moratlity Rate=[(death cases)\/confirmed cases)]\n    country_mortality_rate.append(country_death_cases[i]\/country_confirmed_cases[i])\n    #Recovery Rate=[(recovered cases)\/confirmed cases)]\n    country_recovery_rate.append(country_recovery_cases[i]\/country_confirmed_cases[i])","c3ab752b":"#Country wise dataframe \ncountry_df=pd.DataFrame({'Country Name':unique_countries,'Number of Confirmed Cases':country_confirmed_cases,'Number of Deaths':country_death_cases,\n                         'Number of Recoveries':country_recovery_cases,'Number of Active Cases':country_active_cases,'Mortality Rate':country_mortality_rate,\"Recovery Rate\":country_recovery_rate})\n\n# number of cases per country\/region\nsubset=country_df.columns\ncountry_df.style.background_gradient(cmap='Blues',subset=subset[1])\\\n                        .background_gradient(cmap='Reds',subset=subset[2])\\\n                        .background_gradient(cmap='Greens',subset=subset[3])\\\n                        .background_gradient(cmap='Purples',subset=subset[4])\\\n                        .background_gradient(cmap='Oranges',subset=subset[5])\\\n                        .background_gradient(cmap='Greys',subset=subset[6])\n                  ","00dd1d2c":"import plotly.offline as py \nimport plotly.graph_objs as go\nimport pycountry","07858eb8":"country_df=pd.DataFrame({'Country Name':unique_countries,'Number of Confirmed Cases':country_confirmed_cases})\ncountry_df.head()","daff98c0":"plt.figure(figsize=(9,9))\nworldmap = [dict(type = 'choropleth', locations = country_df['Country Name'], locationmode = 'country names',\n                 z = country_df['Number of Confirmed Cases'], autocolorscale = True, reversescale = False, \n                 marker = dict(line = dict(color = 'rgb(90,90,90)', width = 0.5)), \n                 colorbar = dict(autotick = False, title = 'Number of Confirmed Cases'))]\n\nlayout = dict(title = 'Number of Confirmed Cases', geo = dict(showframe = False, showcoastlines = False, \n                                                                projection = dict(type = 'Mercator')))\n\nfig = dict(data=worldmap, layout=layout)\npy.iplot(fig, validate=False)","62db1509":"country_df[country_df[\"Country Name\"]=='India']","3ffd5f51":"USA_confirmed=latest_data[latest_data[\"Country_Region\"]==\"US\"]['Confirmed'].sum()\nindia_confirmed=latest_data[latest_data[\"Country_Region\"]==\"India\"]['Confirmed'].sum()\nbrazil_confirmed=latest_data[latest_data[\"Country_Region\"]==\"Brazil\"]['Confirmed'].sum()\nother_confirmed=np.sum(country_confirmed_cases)-(USA_confirmed+ india_confirmed+brazil_confirmed)\nplt.figure(figsize=(15,8))\nplt.barh(\"USA\",USA_confirmed)\nplt.barh(\"INDIA\",india_confirmed) \nplt.barh(\"Brazil\",brazil_confirmed)\nplt.barh(\"Other Countries\",other_confirmed)\nplt.title(\"Number of Coronavirus Confirmed Cases\",size=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","c3bf0a62":"print(\"BRAZIL: {} cases\".format(brazil_confirmed))\nprint(\"INDIA: {} cases\".format(india_confirmed))\nprint(\"USA: {} cases\".format(USA_confirmed))\nprint(\"Other Cuntries: {} cases\".format(other_confirmed))\nprint(\"Total: {} cases in the world\".format(brazil_confirmed+india_confirmed+USA_confirmed+other_confirmed))","e538f3d3":"# only show 10 countries with the most confirmed case,rest are grouped into the outher category\n\nvisual_unique_countries=[]\nvisaul_confirmed_cases=[]\nothers=np.sum(country_confirmed_cases[10:])\n\nfor i in range(len(country_confirmed_cases[:10])):\n    visual_unique_countries.append(unique_countries[i])\n    visaul_confirmed_cases.append(country_confirmed_cases[i])\n\nvisual_unique_countries.append(\"Others\")\nvisaul_confirmed_cases.append(others)","4ec1fe83":"def plot_bar_graphs(x,y,title):\n    plt.figure(figsize=(12,8))\n    plt.barh(x,y, align = 'center', color = 'gold', edgecolor = 'k')\n    for index, value in enumerate(y):\n        plt.text(value+10000, index, str(value), fontsize = 18)\n    plt.title(title,size=20)\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()\n\n# Pie Plot function\ndef plot_pie_charts(x,y,title):\n    c=random.choices(list(mcolors.CSS4_COLORS.values()),k=len(x))\n    plt.figure(figsize=(10,10))\n    plt.title(title,size=20)\n    labels=[]\n    explode=[]\n    for i in x:\n        labels.append(str(i))\n        explode.append(0.05)\n    plt.pie(y,labels=labels,autopct='%1.1f%%',colors=c,explode=explode)\n    centre_circle = plt.Circle((0,0),0.70,fc='white')\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    #plt.legend(x,loc='best',fontsize=15)\n    plt.yticks(size=20)\n    plt.show()","1cc7dc35":"plot_bar_graphs(visual_unique_countries,visaul_confirmed_cases,\"Number of Covid-19 Confirmed cases in Countries\")\nplot_pie_charts(visual_unique_countries,visaul_confirmed_cases,\"Number of Covid-19 Confirmed cases in Countries\")\n","99751b6b":"def plot_pie_country_with_regions(country_name,title):\n    regions=list(latest_data[latest_data['Country_Region']==country_name]['Province_State'].unique())\n    confirmed_cases=[]\n    no_cases=[]\n    for i in regions:\n        cases=latest_data[latest_data[\"Province_State\"]==i][\"Confirmed\"].sum()\n        if cases>0:\n            confirmed_cases.append(cases)\n        else:\n            no_cases.append(i)\n  #remove the areas with no cases\n    for i in no_cases:\n        regions.remove(i)\n\n  #show top 10 cases\n    regions=[k for k,v in sorted(zip(regions,confirmed_cases),key=operator.itemgetter(1),reverse=True)]\n\n\n    for i in range(len(regions)):\n        confirmed_cases[i]=latest_data[latest_data[\"Province_State\"]==regions[i]]['Confirmed'].sum()\n\n\n    #others province\/state will be considered others\n    if(len(regions))>10:\n        regions_10=regions[:10]\n        regions_10.append(\"others\")\n        confirmed_cases_10=confirmed_cases[:10]\n        confirmed_cases_10.append(np.sum(confirmed_cases[10:]))\n        plot_pie_charts(regions_10,confirmed_cases_10,title)\n\n    else:\n        plot_pie_charts(regions,confirmed_cases,title)\n    ","8f9f5383":"plot_pie_country_with_regions(\"US\",\"COVID-19 confirmed cases in US\")","93e9a9ae":"days_since_1_22=np.array([i for i in range(len(dates))]).reshape(-1,1)\nworld_cases=np.array(world_cases).reshape(-1,1)\ntotal_deaths=np.array(total_deaths).reshape(-1,1)\ntotal_recoverd=np.array(total_recoverd).reshape(-1,1)\n\ndays_in_future=20\nfuture_forcast=np.array([i for i in range(len(dates)+days_in_future)]).reshape(-1,1)\nadjusted_dates=future_forcast[:-20]\n\nstart=\"1\/22\/2020\"\nstart_date=datetime.datetime.strptime(start,\"%m\/%d\/%Y\")\nfuture_forcast_dates=[]\nfor i in range(len(future_forcast)):\n    future_forcast_dates.append((start_date+datetime.timedelta(days=i)).strftime(\"%m\/%d\/%Y\"))","8dd8c776":"def plot_line(x,y,title):\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y)\n    plt.title(title,size=25)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Numer of cases\",size=20)\n    plt.xticks(size=15)\n    plt.yticks(size=15)\n    plt.show()\n\ndef plot_bar(x,y,title):\n    plt.figure(figsize=(12,8))\n    plt.bar(x,y,width=0.8,align='center')\n    plt.title(title,size=25)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Numer of cases\",size=20)\n    plt.xticks(size=15)\n    plt.yticks(size=15)\n    plt.show()","3f73e61e":"plot_line(adjusted_dates,world_cases,\"World's Coronavirus cases  over time\")\nplot_line(adjusted_dates,total_deaths,\"World's Coronavirus Deaths  over time\")\nplot_line(adjusted_dates,total_recoverd,\"World's Coronavirus Recoveries over time\")\nplot_line(adjusted_dates,total_active,\"World's Coronavirus active cases over time\")","04f2a87d":"plt.figure(figsize=(15,9))\nplt.plot(adjusted_dates,total_deaths,color='r')\nplt.plot(adjusted_dates,total_recoverd,color=\"green\")\nplt.plot(adjusted_dates,total_active,color=\"b\")\nplt.title(\"Number of Coronavirus Cases in the World\",size=20)\nplt.legend([\"Death\",\"Recoveries\",\"Active\"],loc=\"best\",fontsize=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"Number of cases\",size=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","6f37d477":"plt.figure(figsize=(15,9))\nplt.plot(adjusted_dates,daily_increase(india_cases),color='g')\nplt.plot(adjusted_dates,daily_increase(india_recoveries),color=\"b\")\nplt.plot(adjusted_dates,daily_increase(india_deaths),color=\"r\")\nplt.plot(adjusted_dates,daily_increase(india_active),color=\"y\")\nplt.title(\"Comparision b\/w Daily increase in Confirmed, recovered and Deaths in India \",size=20)\nplt.legend([\"Daily increse cases\",\"Daily Recoveries\",\"Daily Deaths\",\"Active Cases\"],loc=\"best\",fontsize=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"Number of cases\",size=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","728a7bc2":"plt.figure(figsize=(15,9))\nplt.plot(adjusted_dates,daily_increase(india_deaths),color='r')\n\nplt.title(\"Daily increse of deaths\",size=20)\nplt.legend([\"Daily Increse deaths\"],loc=\"best\",fontsize=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"Number of cases\",size=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","946c199b":"plt.figure(figsize=(15,8))\nplt.plot(total_recoverd,total_deaths)\nplt.title(\"Number of Coronavirus Deaths vs Number of Cororavirus recoveries over the world\",size=20)\nplt.xlabel(\"Number of Recoveries\",size=20)\nplt.ylabel(\"Number of Deaths\",size=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","8bb91cb0":"def country_plot(x,y1,y2,y3,y4,country):\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y1)\n    plt.title(\"{} confirmed cases\".format(country),size=20)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Number of Cases\",size=20)\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()\n\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y2)\n    plt.title(\"{} Daily increse in confirmed cases\".format(country),size=20)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Number of Cases\",size=20)\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()\n\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y3)\n    plt.title(\"{} Daily increse in deaths\".format(country),size=20)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Number of Cases\",size=20)\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()\n\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y4)\n    plt.title(\"{} Daily Increse in Recoveries\".format(country),size=20)\n    plt.xlabel(\"Days since 1\/22\/2020\",size=20)\n    plt.ylabel(\"Number of Cases\",size=20)\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()    ","69e93fb3":"country_plot(adjusted_dates,world_cases,daily_increase(world_cases),daily_increase(total_deaths),daily_increase(total_recoverd),\"World\")","25fa00a2":"plt.figure(figsize=(16,9))\nplt.plot(adjusted_dates,brazil_cases,'k')\nplt.plot(adjusted_dates,italy_cases,'g')\nplt.plot(adjusted_dates,us_cases,'r')\nplt.plot(adjusted_dates,spain_cases,'c')\nplt.plot(adjusted_dates,france_cases,'m')\nplt.plot(adjusted_dates,peru_cases,'y')\nplt.plot(adjusted_dates,india_cases,'b')\nplt.title(\"Number of Coronavirus cases in various countries\",size=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"number of cases\",size=20)\nplt.legend([\"Brazil\",\"Italy\",\"US\",\"Spain\",\"France\",\"Peru\",\"India\"],fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","3efb2cfc":"plt.figure(figsize=(16,9))\nplt.plot(adjusted_dates,brazil_deaths,'k')\nplt.plot(adjusted_dates,italy_deaths,'g')\nplt.plot(adjusted_dates,us_deaths,'r')\nplt.plot(adjusted_dates,spain_deaths,'c')\nplt.plot(adjusted_dates,france_deaths,'m')\nplt.plot(adjusted_dates,peru_deaths,'y')\nplt.plot(adjusted_dates,india_deaths,'b')\nplt.title(\"Number of Deaths in various countries\",size=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"number of cases\",size=20)\nplt.legend([\"Brazil\",\"Italy\",\"US\",\"Spain\",\"France\",\"Peru\",\"India\"],fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","643ebb6f":"plt.figure(figsize=(16,9))\nplt.plot(adjusted_dates,brazil_recoveries,'k')\nplt.plot(adjusted_dates,italy_recoveries,'g')\nplt.plot(adjusted_dates,us_recoveries,'r')\nplt.plot(adjusted_dates,spain_recoveries,'c')\nplt.plot(adjusted_dates,france_recoveries,'m')\nplt.plot(adjusted_dates,peru_recoveries,'y')\nplt.plot(adjusted_dates,india_recoveries,'b')\nplt.title(\"Number of Recoveries cases in various countries\",size=20)\nplt.xlabel(\"Days since 1\/22\/2020\",size=20)\nplt.ylabel(\"number of cases\",size=20)\nplt.legend([\"Brazil\",\"Italy\",\"US\",\"Spain\",\"France\",\"Peru\",\"India\"],fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.show()","967873cc":"confirmed_india=confirmed_cases.loc[confirmed_cases[\"Country\/Region\"]==\"India\"]\ndeaths_india=deaths_reported.loc[deaths_reported[\"Country\/Region\"]==\"India\"]\nrecovered_india=recovered_cases.loc[recovered_cases[\"Country\/Region\"]==\"India\"]\nind_confirm=confirmed_india.iloc[0][-1]\nind_death=deaths_india.iloc[0][-1]\nind_recover=recovered_india.iloc[0][-1]\nind_active=confirmed_india.iloc[0][-1]-deaths_india.iloc[0][-1]-recovered_india.iloc[0][-1]\nprint(\"India Confirmed cases:-\",ind_confirm)\nprint(\"India total deaths:-\",ind_death)\nprint(\"India Recovered cases:-\",ind_recover)\nprint(\"India Active cases:-\",ind_active)","2b6e1aa7":"x=pd.DataFrame([[\"Confirmed\",\"Recovered\",\"Active\",\"Deaths\"],[ind_confirm,ind_recover,ind_active,ind_death]])\nx","c6e2c2bd":"plot_bar_graphs(x.loc[0],x.loc[1],'India Covid Bar Graph')\nplot_pie_charts((x.drop(0,axis=1)).loc[0],(x.drop(0,axis=1)).loc[1],'India Pie Graph b\/w Active,Recovered & Deaths ')","ee2a7dfd":"var=[confirmed_india,deaths_india,recovered_india]\ncolors=[\"b\",\"r\",\"g\"]\ntitle=[\"Confirmed cases\",\"Deaths\",\"Recovered Cases\"]\nfor i in range(len(var)):\n    plt.figure(figsize=(20,6))\n    plt.plot(var[i].iloc[:,4:].T,color=colors[i])\n    plt.xticks(rotation=90)\n    plt.title(title[i])\n    plt.xlim(50,)\n    #plt.legend([],fontsize=20\n    plt.show()","93ca49da":"var=[confirmed_india,deaths_india,recovered_india]\ncolors=[\"b\",\"r\",\"g\"]\ntitle=[\"Confirmed cases\",\"Deaths\",\"Recovered Cases\"]\nfor i in range(len(var)):\n    plt.figure(figsize=(20,6))\n    plt.plot(var[i].iloc[:,4:].T.index,daily_increase(var[i].iloc[:,4:].T.values),color=colors[i])\n    plt.xticks(rotation=90)\n    plt.title(\"Daily increase in {}\".format(title[i]))\n    plt.xlim(50,)\n    #plt.legend([],fontsize=20\n    plt.show()","635c7ff8":"country_plot(adjusted_dates,india_cases,daily_increase(india_cases),daily_increase(india_deaths),daily_increase(india_recoveries),\"India\")","42e59dfb":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score","746e249d":"X_train_confirmed,X_test_confirmed,y_train_confirmed,y_test_confirmed=train_test_split(days_since_1_22,world_cases,\n                                            test_size=0.35,random_state=42,shuffle=False)\n#transform  data in polynomial\npoly=PolynomialFeatures(degree=3)\npoly_X_train_confirmed=poly.fit_transform(X_train_confirmed)\npoly_X_test_confirmed=poly.fit_transform(X_test_confirmed)\npoly_future_forcast=poly.fit_transform(future_forcast)\n","00577915":"#Linear Regression\n\nlr=LinearRegression(normalize=True,fit_intercept=False)\nlr.fit(poly_X_train_confirmed,y_train_confirmed)\ntrain_linear_pred=lr.predict(poly_X_train_confirmed)\n\ntest_linear_pred=lr.predict(poly_X_test_confirmed)\nlinear_pred=lr.predict(poly_future_forcast)\n\nprint(\"MAE:\",mean_absolute_error(test_linear_pred,y_test_confirmed))\nprint(\"MSE:\",mean_squared_error(test_linear_pred,y_test_confirmed))\nprint(\"Train R2 Score:\",r2_score(train_linear_pred,y_train_confirmed))\nprint(\"Test R2 Score:\",r2_score(test_linear_pred,y_test_confirmed))","381e2e3c":"plt.plot(y_test_confirmed)\nplt.plot(test_linear_pred)\nplt.legend([\"Test data\",\"Polynomial regression Prediction\"])\nplt.show()","802bcae1":"def prediction_plot(x,y,pred,algo_name,color):\n    plt.figure(figsize=(16,9))\n    plt.plot(x,y)\n    plt.plot(future_forcast,pred,linestyle=\"dashed\",color=color)\n    plt.title(\"Number of Coronavirus cases over time\")\n    plt.xlabel(\"Days since 1\/22\/2020\")\n    plt.ylabel(\"Number of cases\")\n    plt.legend([\"confirmed cases\",algo_name],prop={\"size\":20})\n    plt.xticks(size=20)\n    plt.yticks(size=20)\n    plt.show()","19074c6a":"prediction_plot(adjusted_dates,world_cases,linear_pred,\"Polynomial Regression Prediction\",'r')","884f7ba6":"\"\"\"X_train_confirmed,X_test_confirmed,y_train_confirmed,y_test_confirmed=train_test_split(days_since_1_22,india_cases,\n                                            test_size=0.35,random_state=42,shuffle=False)\n#transform  data in polynomial\npoly=PolynomialFeatures(degree=4)\npoly_X_train_confirmed=poly.fit_transform(X_train_confirmed)\npoly_X_test_confirmed=poly.fit_transform(X_test_confirmed)\npoly_future_forcast=poly.fit_transform(future_forcast)\n\n#Linear Regression\n\nlr=LinearRegression(normalize=True,fit_intercept=False)\nlr.fit(poly_X_train_confirmed,y_train_confirmed)\ntrain_linear_pred=lr.predict(poly_X_train_confirmed)\n\ntest_linear_pred=lr.predict(poly_X_test_confirmed)\nlinear_pred=lr.predict(poly_future_forcast)\n\nprint(\"MAE:\",mean_absolute_error(test_linear_pred,y_test_confirmed))\nprint(\"MSE:\",mean_squared_error(test_linear_pred,y_test_confirmed))\nprint(\"Train R2 Score:\",r2_score(train_linear_pred,y_train_confirmed))\nprint(\"Test R2 Score:\",r2_score(test_linear_pred,y_test_confirmed))\n\nplt.plot(y_test_confirmed)\nplt.plot(test_linear_pred)\nplt.legend([\"Test data\",\"Polynomial regression Prediction\"])\nplt.show()\n\nprediction_plot(adjusted_dates,india_cases,linear_pred,\"Polynomial Regression Prediction India\",'r')\n\nactual_pred=pd.DataFrame({\"Dates\":future_forcast_dates[:-20],\"Actual Cases\": india_cases,\"Predicted Cases\": np.round(linear_pred[:-20])})\nactual_pred.iloc[70:,:]\n\n\n\nlinear_pred=linear_pred.reshape(1,-1)[0]\ndf_poly=pd.DataFrame({\"Dates\":future_forcast_dates[-20:],\n                      \"Predicted no of confirmed cases\":np.round(linear_pred[-20:])})\n# future prediction for next20 days\ndf_poly\n\"\"\"","4cc65e33":"from fbprophet import Prophet","b8cf9862":"confirmed_india =pd.DataFrame({\"ds\":future_forcast_dates[:-20],\"y\": india_cases})\nconfirmed_india.tail()\n                               ","c28ff50e":"m= Prophet(interval_width = 0.95)\nm.fit(confirmed_india)\nfuture_date = m.make_future_dataframe(periods=10)\nforcast = m.predict(future_date)\nforcast[['ds','yhat','yhat_lower','yhat_upper']].tail(10)","b0f792d8":"m.plot(forcast)","10510275":"m.plot_components(forcast)","393dc649":"###  Predictive Analysis","2372d6d6":"## Covid-19 Data Analysis for World data and India data","c82ddca8":"## Forecasting Total Number of Cases in India by Prophet","9bfa497a":"### Size of the a Datasets","6023d583":"Loading of  the all neccessary data.","2043b401":"##### Recovered Cases data for some countries.","6137001a":"## Polynomial Linear Regression","19b48e88":"'b', 'g', 'r', 'c', 'm', 'y', 'k', 'w","f112b23e":"#### Confirmed Cases data for some countries.","24142e55":"> ****Polynomial Transformation****","fe86e119":"**Comparision between Daily increase in Confirmed cases, Recoveries and Deaths**","190218af":"Import the libraries.","7fea7015":"**Thanks for going through in this notebook. Your suggestions are requested in comments.**\n\n\n**If you feel this notebook helpful, please upvote the notebook.**","c135aeef":"##### Death Cases data for some countries.","6aebd8d8":"Import the libraries.","953abb41":"### India Covid -19 Analysis"}}