{"cell_type":{"62fe5625":"code","17b560bb":"code","bc93f67a":"code","ad14f2d6":"code","892f2d96":"code","59b735e6":"code","821e51b9":"code","03b4eb64":"code","086268be":"code","8610394a":"code","6d9a3e5f":"code","fbc82b9a":"code","cd6e2a36":"code","4daa6ea6":"code","142b6d3a":"code","93eebc21":"code","d654c9e4":"markdown","0d301818":"markdown","bde8080f":"markdown","d2112e0f":"markdown","cf4661cb":"markdown","87649744":"markdown","69d56da6":"markdown","2db2bb41":"markdown","90c91c0c":"markdown","b485bb64":"markdown"},"source":{"62fe5625":"import os\nimport numpy as np \nimport pandas as pd\nimport time\nimport gc\nimport time","17b560bb":"bool_columns = [ 'id', 'f22','f43','f242','f243','f244','f245','f246','f283','f284',\n            'f247','f248','f249','f250','f251','f252',\n            'f253','f254','f255','f256','f257','f258',\n            'f259','f260','f261','f262','f263','f264',\n            'f265','f266','f267','f268','f269','f270',\n            'f271','f272','f273','f274','f275','f276',\n            'f277','f278','f279','f280','f281','f282']","bc93f67a":"%%time\ntime_s_32 = time.time()\n\ntrain_32 = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/train.csv',dtype='float32')\ntest_32 = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/test.csv',dtype='float32')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\n\nfor col in bool_columns:\n    train_32[col] = train_32[col].astype(np.int8)\n    test_32[col] = test_32[col].astype(np.int16)\n\ntrain_32['target'] = train_32['target'].astype(np.int8)\n\ntime_e_32 = time.time()\n\ntime__32 = '{:.1f}'.format(time_e_32-time_s_32)\nmemory_32 = (train_32.memory_usage(index = True).sum() + test_32.memory_usage(index = True).sum() + submission.memory_usage(index = True).sum() )\/ 1e9\nmemory_32_str = '{:.2f}'.format(memory_32)\ntypes_32 = (train_32.dtypes).value_counts()","ad14f2d6":"%%time\ntime_s = time.time()\n\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\n\ntime_e = time.time()\n\ntime__ = '{:.1f}'.format(time_e-time_s)\nmemory = (train.memory_usage(index = True).sum() + test.memory_usage(index = True).sum() + submission.memory_usage(index = True).sum() )\/ 1e9\nmemory_str = '{:.2f}'.format(memory)\ntypes = (train.dtypes).value_counts()","892f2d96":"print(f'{3*\"=\"} Traditional method  {24*\"=\"}\\nMemory:\\t{memory_str} gb\\nTime:\\t{time__} sec\\n\\n{types}\\n\\n')\nprint(f'{3*\"=\"} Traditional method with reduce memory {5*\"=\"}\\nMemory:\\t{memory_32_str} gb\\nTime:\\t{time__32} sec\\n\\n{types_32}')","59b735e6":"%%time\ntime_s_h = time.time()\n\ntrain_h5 = pd.read_hdf('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/train_32.h5',key='tps1021', mode='r')\ntest_h5 = pd.read_hdf('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/test_32.h5',key='tps1021', mode='r')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\n\ntime_e_h = time.time()\n\ntime__h = '{:.1f}'.format(time_e_h-time_s_h)\nmemory_h = (train_h5.memory_usage(index = True).sum() + test_h5.memory_usage(index = True).sum() + submission.memory_usage(index = True).sum() )\/ 1e9\nmemory_h_str = '{:.2f}'.format(memory_h)\ntypes_h = (train_h5.dtypes).value_counts()","821e51b9":"print(f'{3*\"=\"} HDF method (all in one){18*\"=\"}\\nMemory:\\t{memory_h_str} gb\\nTime:\\t{time__h} sec\\n\\n{types_h}')","03b4eb64":"train_h5.shape","086268be":"train_h5.head()","8610394a":"%%time\ntime_s_f = time.time()\n\ntrain_f = pd.read_feather('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/train_f.feather')\ntest_f = pd.read_feather('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/test_f.feather')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\n\ntime_e_f = time.time()\n\ntime__f = '{:.1f}'.format(time_e_f-time_s_f)\nmemory_f = (train_f.memory_usage(index = True).sum() + test_f.memory_usage(index = True).sum() + submission.memory_usage(index = True).sum() )\/ 1e9\nmemory_f_str = '{:.2f}'.format(memory_f)\ntypes_f = (train_f.dtypes).value_counts()","6d9a3e5f":"print(f'{3*\"=\"} Feather method (all in one){18*\"=\"}\\nMemory:\\t{memory_f_str} gb\\nTime:\\t{time__f} sec\\n\\n{types_f}')","fbc82b9a":"train_f.shape","cd6e2a36":"train_f.head()","4daa6ea6":"print('With HDF method,     Data load {:.2f}% faster and {:.2f}% less memory'.format(100 * (time_e_32-time_s_32-time_e_h+time_s_h) \/ (time_e-time_s), 100 * (memory - memory_h) \/ memory))\nprint('With Feather method, Data load {:.2f}% faster and {:.2f}% less memory'.format(100 * (time_e_32-time_s_32-time_e_f+time_s_f) \/ (time_e-time_s), 100 * (memory - memory_f) \/ memory))","142b6d3a":"train_h5 = pd.read_hdf('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/train_32.h5',key='tps1021', mode='r')\ntest_h5 = pd.read_hdf('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/test_32.h5',key='tps1021', mode='r')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')","93eebc21":"train_f = pd.read_feather('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/train_f.feather')\ntest_f = pd.read_feather('\/kaggle\/input\/all-booster-parameters-for-tps-oct-2021\/test_f.feather')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')","d654c9e4":"# Load data in Feather method (all in one)","0d301818":"# Load data in traditional method with reduce memory","bde8080f":"# How to use\n\nFirst add the <a href=\"https:\/\/www.kaggle.com\/akmeghdad\/all-booster-parameters-for-tps-oct-2021\" target=\"_blank\"><b>A<\/b>ll <b>B<\/b>oosters <b>P<\/b>arameters<\/a> dataset from the top right of Kaggle code editor<br>\n\n![image.png](attachment:f4fb6756-248d-44cd-ada6-1809c1d006f7.png)","d2112e0f":"# Load data in traditional method","cf4661cb":"<div class=\"alert alert-success\">\n  <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\/>\n<\/svg>\n<b style=\"font-size: x-large;\">UPVOTE<\/b><br>\n<b>I will try to create for future competitions as well if it is helpful for you,<br>If you think this notebook or <a href=\"https:\/\/www.kaggle.com\/akmeghdad\/all-booster-parameters-for-tps-oct-2021\" target=\"_blank\">this dataset<\/a> that i created are helpful for you, Please do not forget upvote this notebook and <a href=\"https:\/\/www.kaggle.com\/akmeghdad\/all-booster-parameters-for-tps-oct-2021\" target=\"_blank\">this dataset<\/a><\/b><br>\nThank you in advance \n<\/div>\n","87649744":"<span style=\"font-size: 21px;\">OR<\/span>","69d56da6":"# Load data in HDF method (all in one)","2db2bb41":"you could then load the data with the following codes ","90c91c0c":"![image.png](attachment:d48b3900-b081-4f28-a4c9-54d7c888d89d.png)","b485bb64":"<div class=\"alert alert-info\">\n  <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-info-circle-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"\/>\n<\/svg>\n<\/svg>\n<b style=\"font-size: x-large;\">MORE INFO<\/b><br>\nPlease see <a href=\"https:\/\/www.kaggle.com\/c\/tabular-playground-series-oct-2021\/discussion\/278237\" target=\"_blank\"><b>Reduce memory with Pandas<\/b><\/a><br>\n<\/div>"}}