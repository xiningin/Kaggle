{"cell_type":{"79e50c8f":"code","59ec6458":"code","c4522513":"code","c2582ccc":"code","e12b382b":"code","961cd377":"code","7d7cf0a7":"code","50554987":"code","db7f5682":"code","ee80acbd":"code","9248e716":"code","deefb143":"code","73607af4":"code","3a856fe7":"code","13084bce":"code","8b235342":"code","8d7e2b98":"code","7bb0694c":"code","5c386e2b":"markdown","d4c53dbe":"markdown","84f64b41":"markdown","55d9a876":"markdown","81cec649":"markdown","5ad12cf5":"markdown","c7a75834":"markdown","c2752251":"markdown","10817a98":"markdown","0950126b":"markdown","fd677631":"markdown","ce118078":"markdown","2a554152":"markdown","2579ed27":"markdown","6099f82b":"markdown","5e64106a":"markdown","8a616b95":"markdown"},"source":{"79e50c8f":"%%capture\n!pip install --upgrade pip\n!pip install -U seaborn","59ec6458":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","c4522513":"df = pd.read_csv('..\/input\/mobile-games-ab-testing\/cookie_cats.csv')\ndf.head()","c2582ccc":"print('Number of players:', df['userid'].count())","e12b382b":"# Plotting \n\nplt.figure(figsize = (7,4))\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\nsns.countplot(data = df, x = 'version').set(xlabel=\"Control\/test split\", ylabel=\"Number of users\", title=\"Number of players in control\/test group\")\nplt.show()","961cd377":"# Counting the number of players for each number of gamerounds \ngame_rounds_distribution = df['sum_gamerounds'].value_counts()\n\n# Plotting \n\nplt.figure(figsize = (17,7))\nplt.xlabel('Number of players')\nplt.ylabel('Number of game rounds')\nplt.title('Distribution of players')\n\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\nsns.lineplot(data = game_rounds_distribution[game_rounds_distribution > 10])\nplt.show()","7d7cf0a7":"# Plotting \n\nplt.figure(figsize = (18,2))\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\nsns.boxplot(x = game_rounds_distribution[game_rounds_distribution > 100]).set(xlabel=\"Game rounds\", title='Distribution of players retention with boxplot')\nplt.show()","50554987":"number_of_players_with_zero_rounds = df[df['sum_gamerounds'] == 0].count()['userid']\nprint('Players that did not play the game after install', number_of_players_with_zero_rounds)\nprint('Mean number of game rounds per player', round(df['sum_gamerounds'].mean()))","db7f5682":"control_test_parameter = 'version'","ee80acbd":"def metric_overall_stat(dataframe, metric):\n    result = df[metric].sum()\/df[metric].count()*100\n    print (f'Overall average for {metric} is {round(result, 2)}')\n    \nmetric_overall_stat(df, 'retention_1')\nmetric_overall_stat(df, 'retention_7')","9248e716":"def metric_difference_for_groups(dataframe, control_test_parameter, metric):\n    result = dataframe.groupby(control_test_parameter)[metric].sum()\/dataframe.groupby(control_test_parameter)[metric].count()*100\n    for control_test, performance in result.items():\n        print (f'With metric {control_test_parameter}={control_test}, {metric} is {round(performance,3)}')\n    return result\n        \n\nmetrics_1_day = metric_difference_for_groups(df, control_test_parameter, 'retention_1')\nmetrics_7_day = metric_difference_for_groups(df, control_test_parameter, 'retention_7')","deefb143":"## transformation for plotting\nretention_metrics = metrics_1_day.to_frame().join(metrics_7_day).reset_index().melt(id_vars='version', var_name='variable', value_name='value')\n\n## plot side-by-side\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\nsns.catplot(data = retention_metrics, kind='bar', col='version',x='variable', y='value').set(xlabel=\"\", ylabel=\"Retention percent\")\nplt.show()","73607af4":"def bootstrap_metric(dataframe, control_test_parameter, metric, iterations = 500): \n    boot = []\n    for i in range(iterations):\n        boot_mean = dataframe.sample(frac=1, replace=True).groupby(control_test_parameter)[metric].mean()\n        boot.append(boot_mean)\n    boot = pd.DataFrame(boot)\n    return boot","3a856fe7":"retention_1_bootstrapped = bootstrap_metric(df, control_test_parameter, 'retention_1')\n\nplt.figure(figsize = (10,4))\nplt.xlabel('Retention rate')\nplt.title('Bootstrap distribution for 1 day retention')\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\n\nsns.kdeplot(data=retention_1_bootstrapped)\nplt.show()\n","13084bce":"retention_7_bootstrapped = bootstrap_metric(df, control_test_parameter, 'retention_7')\n\nplt.figure(figsize = (10,4))\nplt.xlabel('Retention rate')\nplt.title('Bootstrap distribution for 7 day retention')\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\n\nsns.kdeplot(data=retention_7_bootstrapped)\nplt.show()\n","8b235342":"## column calculation with the % difference between the two AB-groups for one day retention\nretention_1_bootstrapped['diff'] = (retention_1_bootstrapped['gate_30'] - retention_1_bootstrapped['gate_40'])\/retention_1_bootstrapped['gate_40'] * 100\n\nplt.figure(figsize = (9,3))\nplt.xlabel('% mean difference')\nplt.title('Bootstrapped 1 day retention mean difference')\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\n\nsns.kdeplot(data=retention_1_bootstrapped['diff'])\nplt.show()","8d7e2b98":"## column calculation with the % difference between the two AB-groups for seven days retention\nretention_7_bootstrapped['diff'] = (retention_7_bootstrapped['gate_30'] - retention_7_bootstrapped['gate_40'])\/retention_7_bootstrapped['gate_40'] * 100\n\nplt.figure(figsize = (9, 3))\nplt.xlabel('% mean difference')\nplt.title('Bootstrapped 7 day retention mean difference')\n\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\nsns.set_context(\"notebook\")\n\nsns.kdeplot(data=retention_7_bootstrapped['diff'])\nplt.show()","7bb0694c":"# Calculating the probability that 1-day retention is greater when the gate is at level 30\n\nprob_1_retention = (retention_1_bootstrapped['diff'] > 0).sum()\/len(retention_1_bootstrapped['diff'])\nprob_7_retention = (retention_7_bootstrapped['diff'] > 0).sum()\/len(retention_7_bootstrapped['diff'])\n\nprint(\"Probability that 1-day retention is greater when the gate is at level 30 is\",'{:.1%}'.format(1\/prob_1_retention) )\nprint(\"Probability that 7-day retention is greater when the gate is at level 30 is\",'{:.1%}'.format(1\/prob_7_retention) )","5c386e2b":"Since we are interested in retention, we can look at both day 1 and day 7 retention metrics.","d4c53dbe":"The bootstrap result tells us that there is strong evidence that 7-day retention is higher when the gate is at level 30 than when it is at level 40. The conclusion is: If we want to keep retention high \u2014 both 1-day and 7-day retention \u2014 we should not move the gate from level 30 to level 40.\n\n","84f64b41":"Sanity check to reassure, that number of players in both groups is roughly the same","55d9a876":"These distributions above represent the bootstrap uncertainty over what the underlying 1-day retention could be for the two AB-groups.","81cec649":"The plot above shows that 3994 players install the game but then never play it (0 game rounds), some players just play a couple of game rounds in their first week, and the majority of players play 52 game rounds on average. So gate_30 vs gate_40 is a very important question to be answered thoroughly.","5ad12cf5":"* From this chart above, we can see that the most likely % difference is around 1% - 2%, and that most of the distribution is above 0%, comparing to the gate at level 30. \n* For 7 day retention metric the difference is more significant, around 4.5%","c7a75834":"There is a slight decrease in 1-day retention when the gate was moved to level 40 (44.2%) compared to the control when it was at level 30 (44.8%). It's a small change, but even small changes in retention can have a large impact.\n\nThere are a couple of ways we can get at the certainty of these retention numbers. Here we will use bootstrapping. Bootstrapping is a statistical procedure that resamples a single dataset to create many simulated samples. This process allows you to calculate standard errors, construct confidence intervals, and perform hypothesis testing for numerous types of sample statistics. We will repeatedly re-sample our dataset (with replacement) and calculate required metrics for those samples.","c2752251":"# Business problem","10817a98":"## Datasource definition\n\n* **userid** - unique user identification number.\n* **version** - *gate_30* (control group) and *gate_40* (treatment or experimental group) describes game design changes.\n* **sum_gamerounds** - number of game rounds played by the player during the first 14 days after install.\n* **retention_1** - player come back and play 1 day after installing\n* **retention_7** - player come back and play 7 days after installing","0950126b":"## Connecting to datasource","fd677631":"<img src= \"http:\/\/www.businesskorea.co.kr\/news\/photo\/201407\/4082_5539_0.png\" alt =\"In-app purchase\" style='width: 450px;'>\n","ce118078":"# Conclusion","2a554152":"As players progress through the levels of the game, they will occasionally encounter gates that force them to wait a non-trivial amount of time or make an in-app purchase to progress. But where should the gates be placed? Initially the first gate was placed at level 30, but in this notebook we're going to analyze an AB-test where we moved the first gate from level 30 to level 40. In particular, we will look at the impact on player retention.\n\nThe focus of this analysis will be on how the gate placement affects player retention.","2579ed27":"# Imports","6099f82b":"# A\/B analysis","5e64106a":"# Datasource","8a616b95":"## Bootstrapping statistics"}}