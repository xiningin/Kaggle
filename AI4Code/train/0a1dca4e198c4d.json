{"cell_type":{"19e7ff6f":"code","6a387721":"code","14b5537a":"code","35c87bd2":"code","e8148397":"code","66567694":"code","9a8a31b9":"code","6ffe3bf2":"code","b2b763db":"code","3e41f435":"code","1864990b":"code","a685867f":"code","23f3f255":"code","611ec8d3":"code","3eca1f28":"code","8d1ef786":"code","cfbcc067":"code","73880e20":"code","ecf59dde":"code","645cdc2b":"code","e20d9ae9":"code","d4dcda02":"code","05f4d7e5":"code","04a898e8":"code","0c78b674":"code","6abca7ae":"code","a8b7f821":"code","cf09dded":"code","5636887f":"code","4b5d2db7":"code","3e3e9070":"code","9720432b":"code","4df0a0b4":"code","5cbeb372":"markdown","54509d35":"markdown","77ffec17":"markdown","240fa41f":"markdown","bcf51f61":"markdown","cb76b0d8":"markdown","e4bae02c":"markdown","14c7669a":"markdown","f579019c":"markdown","263473af":"markdown","eaf36f85":"markdown","f3a80536":"markdown","131267e3":"markdown","6f592276":"markdown","02c5a8f8":"markdown","0c89185c":"markdown","60c15cbc":"markdown","47afee2c":"markdown","e1076d58":"markdown","0501eb76":"markdown","013d67bb":"markdown","e7c05874":"markdown","92f58f4e":"markdown","5ae67586":"markdown","59c2db5d":"markdown","78599e5a":"markdown","d4f2b2ec":"markdown","eea116c9":"markdown","386bf4b2":"markdown","a22113d5":"markdown","2ba91df0":"markdown","05f48c3c":"markdown","5de4a13e":"markdown","8961a535":"markdown","45cc07e6":"markdown","762f4285":"markdown","71c77c00":"markdown","72c2d486":"markdown","fd56bb25":"markdown","11b283b5":"markdown","f101e4d3":"markdown","410010c7":"markdown","1d335b7c":"markdown","ad1bc5eb":"markdown","59e54542":"markdown","397b1b6d":"markdown"},"source":{"19e7ff6f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport tensorflow as tf\nimport seaborn as sns\nimport math\nimport keras","6a387721":"filepath_heart = '..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv'\n\nheart_data = pd.read_csv(filepath_heart)","14b5537a":"df = heart_data.copy()","35c87bd2":"df.shape","e8148397":"df.info()","66567694":"df.head()","9a8a31b9":"def Age(age):\n    if age >= 70 : return '70 years old'\n    if age >= 60 : return '60 years old'\n    if age >= 50 : return '50 years old'\n    if age >= 40 : return '40 years old'\n    if age >= 30 : return '30 years old'\n    else: return '20 years old'\ndf['age_group'] = df.apply(lambda x: Age(x[\"age\"]), axis = 1)","6ffe3bf2":"def gender(gender):\n    if gender == 0  : return 'female'\n    else: return 'male'\ndf['sex'] = df.apply(lambda x: gender(x[\"sex\"]), axis = 1)","b2b763db":"def cp_prob(value):\n    if value == 0  : return 'normal'\n    if value == 1  : return 'atypical angina'\n    if value == 2  : return 'non-anginal pain'\n    else: return 'asymptomatic'\ndf['cp_value'] = df.apply(lambda x: cp_prob(x['cp']), axis = 1)","3e41f435":"def ecg_res(value):\n    if value == 0  : return 'normal'\n    if value == 1  : return 'wave abnormality'\n    else: return 'left ventricular hypertrophy'\ndf['restecg_value'] = df.apply(lambda x: ecg_res(x['restecg']), axis = 1)","1864990b":"def Old(peak):\n    if peak >= 6 : return 6.0\n    if peak >= 5 : return 5.0\n    if peak >= 4 : return 4.0\n    if peak >= 3 : return 3.0\n    if peak >= 2.5 : return 2.5\n    if peak >= 2 : return 2\n    if peak >= 1.5 : return 1.5\n    if peak >= 1 : return 1\n    if peak >= 0.5 : return 0.5\n    else: return peak\ndf['oldpeak'] = df.apply(lambda x: Old(x[\"oldpeak\"]), axis = 1)","a685867f":"def Target(value):\n    if value == 0  : return 'less chance'\n    else: return 'more chance'\ndf['output_val'] = df.apply(lambda x: Target(x['output']), axis = 1)","23f3f255":"plt.figure(figsize=(13,5))\nage_categ_count = df['age_group'].value_counts()\nax = sns.countplot(x=\"age_group\", \n                   data = df,\n                   hue = 'sex',\n                   order = age_categ_count.index,\n                   linewidth=2)\nfor rect in ax.patches:\n    ax.text (rect.get_x() + rect.get_width()  \/ 2,rect.get_height()+ 0.75,rect.get_height(),horizontalalignment='center', fontsize = 13)\nax.set_title('Which age groups are most affected by heart attacks??',fontsize = 20, fontweight='bold')\nax.set_xlabel('Age group', fontsize = 15)\nax.set_ylabel('N\u00b0 of people', fontsize = 15)","611ec8d3":"plt.figure(figsize=(20,10))\nsns.countplot(x=df[\"age\"])\nplt.title(\"Distribution of people age\",fontsize=20, fontweight='bold')\nplt.xlabel(\"AGE\",fontsize=20)\nplt.ylabel(\"COUNT\",fontsize=20)\nplt.show()","3eca1f28":"s=df[\"sex\"].value_counts().reset_index()\nfig = px.pie(s, values = 'sex', names='index',\n             title='There are more males or females?',\n             labels={'sex':'n\u00b0 of cases', 'index':'sex'})\nfig.show()","8d1ef786":"plt.figure(figsize=(13,5))\noutput_count = df['output_val'].value_counts()\nax = sns.countplot(x=\"output_val\", \n                   data = df,\n                   order = output_count.index,\n                   hue = \"sex\",\n                   linewidth=2)\nfor rect in ax.patches:\n    ax.text (rect.get_x() + rect.get_width()  \/ 2,rect.get_height()+ 0.75,rect.get_height(),horizontalalignment='center', fontsize = 13)\nax.set_title('There are more male or female in danger?',fontsize = 20, fontweight='bold' )\nax.set_xlabel('Chance of an heart attack', fontsize = 15)\nax.set_ylabel('N\u00b0 of people', fontsize = 15)","cfbcc067":"cp=df[\"cp_value\"].value_counts().reset_index()\nfig = px.bar(cp, x='cp_value', y='index',\n             title='What are the chest pains more frequent?',\n             labels={'cp_value':'n\u00b0 of cases', 'index':'type of chest pain'})\nfig.show()","73880e20":"plt.figure(figsize=(20,10))\nsns.histplot(data=df, x=\"trtbps\", hue = 'output')\nplt.title(\"Distribution of blood pressure around patients\",fontsize=30, fontweight='bold')\nplt.xlabel(\"Pressure (in mmHg)\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=20)\nplt.show()","ecf59dde":"plt.figure(figsize=(25,10))\nsns.histplot(data=df, x=\"chol\", hue = 'output')\nplt.title(\"Distribution of cholesteral around patients\",fontsize=30, fontweight='bold')\nplt.xlabel(\"cholestoral in mg\/dl\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=20)\nplt.show()","645cdc2b":"rst=df[\"restecg_value\"].value_counts().reset_index()\nfig = px.bar(rst, x='index', y='restecg_value',\n             title='What are the ecg results more frequent?',\n             labels={'restecg_value':'n\u00b0 of cases', 'index':'type of chest pain'})\nfig.show()","e20d9ae9":"plt.figure(figsize=(20,10))\nsns.lineplot(x=\"age\",y=\"thalachh\",hue=\"output\",data=df)\nplt.title(\"Effect of heart attack with increase in age and maximum heart rate\",\n          fontsize=20, fontweight='bold')\nplt.xlabel(\"Age\",fontsize=15)\nplt.ylabel(\"Thalachh\",fontsize=15)\nplt.show()","d4dcda02":"plt.figure(figsize=(13,5))\noldpeak_count = df['oldpeak'].value_counts()\nax = sns.countplot(x=\"oldpeak\", \n                   data = df,\n                   order = oldpeak_count.index,\n                   linewidth=2)\nfor rect in ax.patches:\n    ax.text (rect.get_x() + rect.get_width()  \/ 2,rect.get_height()+ 0.75,rect.get_height(),horizontalalignment='center', fontsize = 13)\nax.set_title('How many previous peak do the patiens have already had?',fontsize = 20, fontweight='bold' )\nax.set_xlabel('N\u00b0 of peaks', fontsize = 15)\nax.set_ylabel('N\u00b0 of people', fontsize = 15)","05f4d7e5":"s=df[\"output_val\"].value_counts().reset_index()\nfig = px.pie(s, values = 'output_val', names='index',\n             title='There are more people in danger or with less chance of heart attack?',\n             labels={'output':'n\u00b0 of cases', 'index':'output'})\nfig.show()","04a898e8":"plt.figure(figsize=(20,6))\nsns.heatmap(df.corr(),annot=True,cmap=\"PuBuGn\")","0c78b674":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn import metrics","6abca7ae":"data = heart_data.copy()\ndata.head()","a8b7f821":"target = data['output']\ndata = data.drop(columns = ['output','slp'])","cf09dded":"data_dummies = data[['sex','cp','fbs','restecg','exng','caa','thall']]\ndata_dummies = pd.get_dummies(data_dummies,columns=['sex','cp','fbs','restecg','exng','caa','thall'])","5636887f":"data.drop(columns=['sex','cp','fbs','restecg','exng','caa','thall'],inplace=True)\ndata = data.merge(data_dummies,left_index=True, right_index=True,how='left')\ndata.head()","4b5d2db7":"train_x,test_x,train_y,test_y = train_test_split(data,target,test_size=0.3,random_state=42)","3e3e9070":"scaler=StandardScaler()\ntrain_x = scaler.fit_transform(train_x)\ntest_x = scaler.transform(test_x)","9720432b":"lr_model=LogisticRegression()\nlr_model.fit(train_x,train_y)\nscore = lr_model.score(test_x, test_y)\nprediction = lr_model.predict(test_x)\ncm = confusion_matrix(test_y,prediction)\nprint('Testing Score \\n',score)\nplot_confusion_matrix(lr_model,test_x,test_y,cmap='rocket_r')\nmetrics.plot_roc_curve(lr_model, test_x, test_y)  ","4df0a0b4":"dt_model =  DecisionTreeClassifier(random_state = 1)\ndt_model.fit(train_x,train_y)\nscore = dt_model.score(test_x, test_y)\nprediction = dt_model.predict(test_x)\ncm = confusion_matrix(test_y,prediction)\nprint('Testing Score \\n',score)\nplot_confusion_matrix(dt_model,test_x,test_y,cmap='rocket_r')\nmetrics.plot_roc_curve(dt_model, test_x, test_y)  ","5cbeb372":"* Logistic Regression model","54509d35":"**Try 2 models for see which makes better predictions**","77ffec17":"**Cholesteral**","240fa41f":"**Create another copy of the dataset for the predictions and without the new features that we have created**","bcf51f61":"**Have a look on the shapes of the dataset**","cb76b0d8":"**Chest pain**","e4bae02c":"**Genders**","14c7669a":"-------------------------------------------","f579019c":"**But what is the correlation between the features?**","263473af":"# What's heart attack? How frequent is it? Who does it hit?","eaf36f85":"**Read data files**","f3a80536":"![](https:\/\/th.bing.com\/th\/id\/Ra5fdfa4209dd1fd68547587508f1a175?rik=aCiCknlW4VtJDw&riu=http%3a%2f%2fi.huffpost.com%2fgen%2f1483544%2fthumbs%2fo-HEART-ATTACK-facebook.jpg&ehk=eqHuVoVBFNLMHmWVlGrHHMxap7aV7Wf%2f5mJ9ORvD7%2b4%3d&risl=&pid=ImgRaw)","131267e3":"**Here we want to analyze which age groups are most affected by this nasty disease while in the other plot we can see the age distribution of people with this disease**","6f592276":"Since heart rate is a consequence of the pumping of blood from the heart, how does it affect the possibility of a heart attack? But above all, does it influence her or not?","02c5a8f8":"# **Data preprocessing and modelling**","0c89185c":"How does blood pressure affect the chance of heart attack?","60c15cbc":"As we can see the Logistic Regression model performs better than the Decision Tree Classifier ","47afee2c":"**Import libraries**","e1076d58":"**Merging the dummy variables and our original data**","0501eb76":"And how does cholesteral affect the chance of heart attack?","013d67bb":"----------------------------------------------------------","e7c05874":"**Make a copy of the dataset so as not to work on the original**","92f58f4e":"Little description of the features of the dataframe:\n* **Age** : Age of the patient\n\n* **Sex** : Sex of the patient\n\n* **cp** : Chest Pain type chest pain type\n \n    * Value 1: typical angina\n    * Value 2: atypical angina\n    * Value 3: non-anginal pain\n    * Value 4: asymptomatic\n\n* **trtbps** : resting blood pressure (in mmHg)\n\n* **chol** : cholestoral in mg\/dl fetched via BMI sensor\n\n* **fbs** : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n\n* **restecg** : resting electrocardiographic results\n \n    * Value 0: normal\n    * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n    \n    \n* **thalach** : maximum heart rate achieved\n\n* **exng**: exercise induced angina (1 = yes; 0 = no)\n\n* **oldpeak**: number of previous peak\n\n* **slp**: Speech\u2013language pathology \n\n* **caa**: number of major vessels (0-3)\n\n* **thall**: Thallium Stress Test\n\n* **output** : \n    * 0= less chance of heart attack \n    * 1= more chance of heart attack","5ae67586":"An **heart attack** is an acute episode of **coronary** heart **disease** marked by the death or damage of heart muscle due to insufficient blood supply to the heart usually as a result of a coronary artery becoming blocked by a blood clot formed in response to a ruptured or torn fatty arterial deposit\n\ns of 2018, 30.3 million U.S. adults  were diagnosed with heart disease. Every year, about 647,000 Americans die from heart disease, making it the leading cause of death in the United States. Heart disease causes 1 out of every 4 deaths.\n\nAccording to the Centers for Disease Control and Prevention (CDC), approximately **every 40 seconds** an American will have a heart attack. Every year, **805,000 Americans have a heart attack**, 605,000 of them for the first time.\n\nSeeing these terrifying data I wanted to examine this dataset to try to understand it a little more and then be able to share it with you, so let's find out more about this bad disease that affects so many people.","59c2db5d":"As we have said in the introduction, we can see that the majority of the people who are affected by heart attack is for the first time. So we are especially careful trying to avoid the situations that could lead us to be affected by it ","78599e5a":"**ECG results**","d4f2b2ec":"**One-Hot Encoding for the categorical variables**","eea116c9":"**Age group**","386bf4b2":"**Oldpeaks**","a22113d5":"**Heart rate**","2ba91df0":"# EDA part: plotting graphs","05f48c3c":"* Decision Tree Classifier model","5de4a13e":"**There are more people in danger or with less chance of heart attack?**","8961a535":"**Taking a look on what types are the features and if there are missing values**","45cc07e6":"**And taking a little overview on the first 5 file of the dataset**","762f4285":"As we can see, the most heart attack chances are when the blood pressure is between 120 and 140 mmHg","71c77c00":"**Drop the 'output' feature from the dataset to create a target** ","72c2d486":"**Standardizing the training and testing data withe the stander scaler**","fd56bb25":"Heart attack can cause 3 types of chest pain mainly, which is the most frequent? Does it always cause pain or may it not even cause it?","11b283b5":"**We are now creating new related features with existing features that will help us better represent data in graphs**","f101e4d3":"**Thank you so much for looking at this notebook, I hope you enjoyed it and if so I would invite you to put an upvote. If you have found any errors, please write them to me in the comments or even if you have any suggestions for improving the notebook. thank you very much again and good Kaggling!**","410010c7":"**Blood pressure**","1d335b7c":"Are males or females more affected? Will there be a difference between the genders or will they be even?","ad1bc5eb":"# **First approach with data and small elaborations**","59e54542":"**Import libraries**","397b1b6d":"**Splitting the data into training and testing sets**"}}