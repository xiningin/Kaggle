{"cell_type":{"adca3b98":"code","9c82da00":"code","96046f65":"code","3c181e1a":"code","8e810796":"code","39c735e0":"code","75eac370":"code","6eee10f1":"code","0a5b42b4":"code","eaa5308d":"code","c8e23ae3":"code","67c17bf4":"code","5c84273b":"code","279750f3":"code","5c1a49ea":"code","c4f13b82":"code","e12bab52":"code","e23b40bc":"code","adbbda3e":"code","1f5d253d":"code","e1ab716e":"code","081fced5":"code","3d609d57":"code","8e973847":"code","bf75dcb7":"code","9892bc6c":"code","2cfea9a6":"code","11c0d0c3":"code","cdd2e39b":"code","73703574":"code","a1e2a33b":"code","4c8b7e0d":"code","c5c69e83":"code","83b221a7":"code","1f2e2d93":"code","c01e3976":"code","af81588c":"code","3c0fdc99":"code","43fd51d3":"code","6f8d41d2":"code","46d80663":"code","6e30fe9b":"code","bc655e1f":"code","75c455b2":"code","0a275ee1":"code","9d1d0f3d":"code","3be84541":"code","433ba565":"code","ebe74518":"code","d51c2a4e":"code","df8ba29d":"code","c80ba3c2":"code","002f4a6d":"code","2e6e4214":"code","977b64bb":"code","73171778":"code","0bbccb25":"code","1632e819":"code","160d81c1":"code","777eed35":"code","b66f8a8d":"code","5fbd1a73":"code","b6158afa":"code","eecca413":"code","e2f6d9bb":"code","27ef4717":"code","2c718435":"code","1a5ccf5d":"code","8f1c0006":"code","f0c43a04":"code","b65a1b70":"code","5049f846":"code","13f17a54":"code","d045d9ec":"code","9f88bd92":"code","f282542e":"code","b145e7c4":"code","e8a83a36":"code","41ba3ef5":"code","f2cda5b3":"code","3dc1b832":"code","cd11a4da":"code","332cfbb7":"code","aa58f6d4":"code","84f8bd4b":"code","327b2673":"code","fcaaf26d":"code","2789f4c2":"code","bb145c0b":"code","ef84a75d":"code","90603fcf":"code","395a6082":"code","4be741eb":"code","5ec1da97":"code","ac78b8d2":"code","53f7683e":"code","1f6de012":"code","005140ab":"code","38082277":"code","847ce605":"code","9ba95fae":"code","a0804404":"code","af20044f":"code","999b62d3":"code","47bb27a3":"code","37fa55bd":"code","54b4d54f":"code","32656320":"code","386d7190":"code","30dc320e":"code","f5566f58":"code","8227dc15":"code","f9c06158":"code","a38c12f7":"code","67818f25":"code","6e3dcf98":"code","e59c1be3":"code","023f82ec":"code","a9120ee4":"code","8b638866":"code","d08e4624":"code","6bcbf7cd":"code","1b5a5be4":"code","aceae538":"code","9086ce02":"code","698799a9":"code","3961d23f":"code","273ce46c":"code","91de1aa0":"code","6a4dc365":"code","b2de7ee8":"code","3c03006d":"code","14df46cf":"code","46572768":"code","02f07b50":"code","9e6bff7d":"code","76ba1283":"code","b96c19a5":"code","0ac5f082":"code","60188f99":"code","b6d92216":"code","f55c14c3":"code","35e24f86":"code","ab15b819":"code","16a68c97":"code","7302f01e":"code","841617f7":"code","48e7db1c":"code","2d0c82af":"code","f1b0a119":"code","44d62e6e":"code","5c661582":"code","604c6d50":"code","dca481d6":"code","3c0ebcb6":"code","22911abc":"code","7ff35ff4":"code","4cd3d07a":"markdown","4922c689":"markdown","4da9de07":"markdown","c702e32e":"markdown","7817f7b3":"markdown","9de589e6":"markdown","c17cf903":"markdown","07961ae8":"markdown","ef3d4520":"markdown","391a6031":"markdown","b54e4b13":"markdown","6daf9d03":"markdown","479cdf46":"markdown","1d4916c1":"markdown","c88e13f2":"markdown","ad3f4181":"markdown","f7fc7271":"markdown","cc1bc9e7":"markdown","74680004":"markdown","b97379ba":"markdown","0357a1b1":"markdown","40c64662":"markdown","84353933":"markdown","bad375d1":"markdown","a373704b":"markdown","5c72a82b":"markdown","7b2e2243":"markdown","295b3599":"markdown","1970ad12":"markdown","6e69c7bb":"markdown","67cc9a3d":"markdown","58ad18df":"markdown","362139ac":"markdown","1689cec9":"markdown","ef37af4e":"markdown","72d92c55":"markdown","1cd8d377":"markdown","8d924827":"markdown","140f66ce":"markdown","c839ab4a":"markdown","6c1a4768":"markdown","8f471817":"markdown","307ead1e":"markdown","3759d1b1":"markdown","0d8ac343":"markdown","3f226005":"markdown","cf79265a":"markdown","2128a076":"markdown","c75098dd":"markdown","33a81777":"markdown","6dea4da0":"markdown","692c8462":"markdown","18123e93":"markdown","36024863":"markdown","3831ff4f":"markdown","b33e7da1":"markdown","0f10f2ed":"markdown","1ccc52bc":"markdown","f7f86002":"markdown","aed86e50":"markdown","f166ea76":"markdown","18f70982":"markdown","e747deac":"markdown","893380bd":"markdown","b8ea5003":"markdown","dfe864b3":"markdown","fc1e38a2":"markdown","12a4b043":"markdown","625247fc":"markdown","1ac93127":"markdown","ff76a946":"markdown","445a387c":"markdown","87d2a85a":"markdown","95e5560e":"markdown","243fa84d":"markdown","f748843a":"markdown","614f5f55":"markdown","2fea58e0":"markdown","b30d06a4":"markdown","0f296172":"markdown","52683541":"markdown","911c4359":"markdown","a799fe56":"markdown","25487dd5":"markdown","94bef38b":"markdown","05a69542":"markdown","f494ae9c":"markdown","8125d23b":"markdown","0feba8bf":"markdown","e5f07863":"markdown","71cdc94d":"markdown","3817722f":"markdown","d146c274":"markdown","f385b577":"markdown","b2633283":"markdown","633ab73d":"markdown","566e8ace":"markdown","9de2624a":"markdown","c8f37761":"markdown","101f62db":"markdown","691df913":"markdown","dfd019a5":"markdown","28c6bdb9":"markdown","8d993321":"markdown","5c29686f":"markdown","257579f0":"markdown","830e5b2f":"markdown","b4af763f":"markdown","5228d54b":"markdown","9dbf0549":"markdown","68e29696":"markdown","4053f0fa":"markdown","25bcfa1b":"markdown","5c0635ba":"markdown","1b18fa2c":"markdown","c318460d":"markdown","70c902c1":"markdown","47dd7921":"markdown","3ebd238a":"markdown","4baf859a":"markdown","a41d20a5":"markdown","2864e98d":"markdown","902044b8":"markdown","a65b758d":"markdown","bce34051":"markdown","0e8fdef2":"markdown","40969524":"markdown","ef2e49f1":"markdown","bed70b08":"markdown","c7a70e37":"markdown","c38857e7":"markdown","cc679e2e":"markdown","ab772ca0":"markdown","98e36242":"markdown","0c1122de":"markdown","790235de":"markdown","3f173eb4":"markdown","e6589baa":"markdown","65c2f677":"markdown","f5f0bdc9":"markdown","8bf410a0":"markdown","9bd4c58d":"markdown","ee59b1fc":"markdown","6b5634f9":"markdown","bbceda34":"markdown","f76e5937":"markdown","9b9fb0c0":"markdown","d29dad0d":"markdown","60870328":"markdown","cccd8372":"markdown","c66609d0":"markdown","8c152dbd":"markdown","db5320e2":"markdown","613b21c8":"markdown","d62f1150":"markdown","1662e62a":"markdown"},"source":{"adca3b98":"# Import packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt  \nimport seaborn as sns\nimport warnings","9c82da00":"warnings.filterwarnings('ignore')\npd.set_option('display.max_columns',None)","96046f65":"df_application_current = pd.read_csv('\/kaggle\/input\/loan-defaulter\/application_data.csv')\ndf_application_current.head()","3c181e1a":"df_application_current.info()","8e810796":"df_application_current.describe()","39c735e0":"# Count missing values column wise\ndf_application_current.isnull().sum()","75eac370":"# List the columns having more than 30% missing values\ncols_30_percent_missing_values = (df_application_current.columns[(round(100*(df_application_current.isnull().sum()\/len(df_application_current.index)), 2)) >= 30]).tolist()\ncols_30_percent_missing_values","6eee10f1":"# Delete the columns having more than 30% missing values\ndf_application_current = df_application_current.drop(cols_30_percent_missing_values,axis=1)","0a5b42b4":"df_application_current.columns","eaa5308d":"cols_irrelevant = ['DAYS_REGISTRATION','FLAG_MOBIL','FLAG_EMP_PHONE','FLAG_WORK_PHONE','FLAG_CONT_MOBILE',\n                   'FLAG_PHONE','FLAG_EMAIL','WEEKDAY_APPR_PROCESS_START','HOUR_APPR_PROCESS_START','LIVE_REGION_NOT_WORK_REGION',\n                   'REG_CITY_NOT_LIVE_CITY','REG_CITY_NOT_WORK_CITY','LIVE_CITY_NOT_WORK_CITY','DAYS_LAST_PHONE_CHANGE',\n                  'OBS_30_CNT_SOCIAL_CIRCLE','DEF_30_CNT_SOCIAL_CIRCLE','OBS_60_CNT_SOCIAL_CIRCLE','DEF_60_CNT_SOCIAL_CIRCLE',\n                  'NAME_TYPE_SUITE']\ncols_irrelevant","c8e23ae3":"# Delete the columns which are irrelevant for the analysis\ndf_application_current = df_application_current.drop(cols_irrelevant,axis=1)","67c17bf4":"df_application_current.shape","5c84273b":"df_application_current.columns","279750f3":"# Count the number of rows having more than 50% missing values\n# As there are none of the rows, so we are not deleting rows on basis of this\nlen(df_application_current[df_application_current.isnull().sum(axis=1) > (len(df_application_current.columns)\/\/2)].index)","5c1a49ea":"# Percent of missing values in columns\n(round(100*(df_application_current.isnull().sum()\/len(df_application_current.index)),2))","c4f13b82":"# Count the rows for which EXT_SOURCE_2 and EXT_SOURCE_3 both are empty\nlen(df_application_current[np.isnan(df_application_current['EXT_SOURCE_2']) & np.isnan(df_application_current['EXT_SOURCE_3'])])","e12bab52":"# As there are only 230 such records we can delete those.\n# Note:- As we have total 307511 records deleting only 230 records will not affect our further analysis\ndf_application_current = df_application_current[(~(np.isnan(df_application_current['EXT_SOURCE_2']) & np.isnan(df_application_current['EXT_SOURCE_3'])))]","e23b40bc":"# Comparing EXT_SOURCE_2 and EXT_SOURCE_3 column \nround(df_application_current.loc[:, ['EXT_SOURCE_2', 'EXT_SOURCE_3']].describe(),3)","adbbda3e":"# Imputing EXT_SOURCE_2 and EXT_SOURCE_3 by mean values\ndf_application_current.loc[np.isnan(df_application_current['EXT_SOURCE_2']), ['EXT_SOURCE_2']] = df_application_current['EXT_SOURCE_2'].mean()\ndf_application_current.loc[np.isnan(df_application_current['EXT_SOURCE_3']), ['EXT_SOURCE_3']] = df_application_current['EXT_SOURCE_3'].mean()\n","1f5d253d":"(round(100*(df_application_current.isnull().sum()\/len(df_application_current.index)),2))","e1ab716e":"# Treating missing values in AMT_GOODS_PRICE\ndf_application_current['AMT_GOODS_PRICE'].describe().apply(lambda x: '%.2f' % x)","081fced5":"df_application_current.boxplot(column =['AMT_GOODS_PRICE']) ","3d609d57":"df_application_current = df_application_current[~np.isnan(df_application_current['AMT_GOODS_PRICE'])]","8e973847":"# Handling AMT_REQ_CREDIT_BUREAU_QRT \ndf_application_current['AMT_REQ_CREDIT_BUREAU_QRT'].describe()","bf75dcb7":"# converting AMT_REQ_CREDIT_BUREAU_QRT to type 'category'\ndf_application_current['AMT_REQ_CREDIT_BUREAU_QRT'] = df_application_current['AMT_REQ_CREDIT_BUREAU_QRT'].astype('category')\n\n# displaying frequencies of each category\ndf_application_current['AMT_REQ_CREDIT_BUREAU_QRT'].value_counts()","9892bc6c":"# Imputing AMT_REQ_CREDIT_BUREAU_QRT with 0\ndf_application_current.loc[pd.isnull(df_application_current['AMT_REQ_CREDIT_BUREAU_QRT']), ['AMT_REQ_CREDIT_BUREAU_QRT']] = 0","2cfea9a6":"# Deleting AMT_REQ_CREDIT_BUREAU_HOUR, AMT_REQ_CREDIT_BUREAU_DAY, AMT_REQ_CREDIT_BUREAU_WEEK, AMT_REQ_CREDIT_BUREAU_MON, AMT_REQ_CREDIT_BUREAU_YEAR\ndf_application_current = df_application_current.drop(['AMT_REQ_CREDIT_BUREAU_HOUR','AMT_REQ_CREDIT_BUREAU_DAY','AMT_REQ_CREDIT_BUREAU_WEEK','AMT_REQ_CREDIT_BUREAU_MON','AMT_REQ_CREDIT_BUREAU_YEAR'],axis=1)","11c0d0c3":"(round(100*(df_application_current.isnull().sum()\/len(df_application_current.index)),2))","cdd2e39b":"df_application_current.shape","73703574":"# Percentage of rows lost\n(100 - 100*(len(df_application_current.index)\/307511))","a1e2a33b":"# Divide 'DAYS_BIRTH' by 365 for taking Age\ndf_application_current['AGE'] = abs(df_application_current['DAYS_BIRTH']\/\/365)\n","4c8b7e0d":"# Drop 'DAYS_BIRTH' column\ndf_application_current = df_application_current.drop(['DAYS_BIRTH'],axis=1)","c5c69e83":"# Divide 'DAYS_EMPLOYED' by 365 for YEAR_EMPLOYED\ndf_application_current['YEARS_EMPLOYED'] = abs(df_application_current['DAYS_EMPLOYED']\/\/365)","83b221a7":"# Drop 'DAYS_EMPLOYED' column\ndf_application_current = df_application_current.drop(['DAYS_EMPLOYED'],axis=1)","1f2e2d93":"df_application_current.head()","c01e3976":"# Finding outliers in all the numerical columns with 1.5 IQR rule and removing the outlier records \ncol_list_outlier = ['AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE','AGE']\nfor col in col_list_outlier: \n    q1 = df_application_current[col].quantile(0.25)\n    q3 = df_application_current[col].quantile(0.75)\n    iqr = q3-q1\n    range_low  = q1-1.5*iqr\n    range_high = q3+1.5*iqr\n    df_application_current = df_application_current.loc[(df_application_current[col] > range_low) & (df_application_current[col] < range_high)]\n\ndf_application_current.shape","af81588c":"# Percentage of rows lost\nround((100 - 100*(len(df_application_current.index)\/307511)),2)","3c0fdc99":"# Listing columns for checking data imbalance and plotting them\ncol_list = ['TARGET','NAME_CONTRACT_TYPE','CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','NAME_INCOME_TYPE',\n            'NAME_EDUCATION_TYPE','NAME_FAMILY_STATUS','NAME_HOUSING_TYPE']\nk=0\nplt.figure(figsize=(20,15))\nfor col in col_list:    \n    k=k+1\n    plt.subplot(3, 3,k)    \n    df_application_current[col].value_counts().plot(kind='bar');\n    plt.title(col)","43fd51d3":"# Plotting all the FLAG_DOCUMENT columns to check data imbalance\nk=0\nplt.figure(figsize=(15,15))\nfor i in range(2,22) :    \n    k=k+1\n    plt.subplot(5, 5,k)    \n    col_name = 'FLAG_DOCUMENT_'+str(i)\n    df_application_current[col_name].value_counts().plot(kind='bar');\n    plt.title(col_name)","6f8d41d2":"# Delete all teh FLAG_DOCUMENT columns except FLAG_DOCUMENT_3\ndf_application_current.drop('FLAG_DOCUMENT_2',axis=1,inplace=True)\nfor i in range(4,22):\n    col = 'FLAG_DOCUMENT_'+str(i)\n    df_application_current.drop(col,axis=1,inplace=True)","46d80663":"df_application_current['AGE'].describe()","6e30fe9b":"# Define function for categorizing AGE_GROUP (Young, Mid age and Senior)\ndef age_group(x):\n    if (x < 40):\n        return 'Young'\n    elif (x >= 40 and x < 60):\n        return 'Mid Age'\n    else:\n        return 'Senior'","bc655e1f":"#Creating new column AGE_GROUP\ndf_application_current['AGE_GROUP'] = df_application_current['AGE'].apply(age_group)\ndf_application_current.head()","75c455b2":"round(df_application_current['AMT_CREDIT'].describe(),2)","0a275ee1":"# Define function for categorizing CREDIT_GROUP (High, Medium and Low)\ndef credit_group(x):\n    if (x < 500000):\n        return 'Low'\n    elif (x >= 500000 and x < 750000):\n        return 'Medium'\n    else:\n        return 'High'","9d1d0f3d":"#Creating new column AGE_GROUP\ndf_application_current['CREDIT_GROUP'] = df_application_current['AMT_CREDIT'].apply(credit_group)\ndf_application_current.head()","3be84541":"df_application_current['AMT_INCOME_TOTAL'].describe()","433ba565":"# Define function for categorizing AMT_INCOME_TOTAL (Low, Medium and High)\ndef income_group(x):\n    if (x < 100000):\n        return 'Low'\n    elif(x >= 100000 and x < 150000):\n        return 'Medium'\n    else:\n        return 'High'","ebe74518":"# Creating column INCOME_GROUP with AMT_INCOME_TOTAL (Low, Medium and High)\ndf_application_current['INCOME_GROUP'] = df_application_current['AMT_INCOME_TOTAL'].apply(income_group)\ndf_application_current.head()","d51c2a4e":"df_application_current['EXT_SOURCE_SCORE'] = round(((df_application_current['EXT_SOURCE_2'] + df_application_current['EXT_SOURCE_3'])\/2),2)\ndf_application_current.head()","df8ba29d":"# Dropping (EXT_SOURCE_2 and EXT_SOURCE_3 columns\ndf_application_current.drop(['EXT_SOURCE_2','EXT_SOURCE_3'],axis=1,inplace=True)","c80ba3c2":"df_application_current['EXT_SOURCE_SCORE'].describe()","002f4a6d":"# Define function for categorizing EXT_SOURCE_SCORE (Low, Medium and High)\ndef ext_source_group(x):\n    if (x < 0.4):\n        return 'Low'\n    elif (x >= 0.4 and x < 0.6):\n        return 'Medium'\n    else:\n        return 'High'","2e6e4214":"# Creating column EXT_SCORE_CATEGORY with High, medium and Low\ndf_application_current['EXT_SCORE_CATEGORY'] = df_application_current['EXT_SOURCE_SCORE'].apply(ext_source_group)\ndf_application_current.head()","977b64bb":"# Remove rows where CODE_GENDER == XNA\n# There are four such rows\ndf_application_current = df_application_current[~(df_application_current['CODE_GENDER'] == 'XNA')]","73171778":"# Client with payment difficulties (Target=1)\ndf_current_target_1 = df_application_current[df_application_current['TARGET'] == 1]\ndf_current_target_1.head()","0bbccb25":"# Client with all other cases (Target=0)\ndf_current_target_0 = df_application_current[df_application_current['TARGET'] == 0]\ndf_current_target_0.head()","1632e819":"df_current_target_0.shape","160d81c1":"df_current_target_1.shape","777eed35":"# Plotting two plots for delaulters and non defaulters on basis of gender\nplt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'CODE_GENDER',data=df_current_target_1)\nplt.title('Defaulters')\nax.set(xlabel='Gender')\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'CODE_GENDER',data=df_current_target_0)\nplt.title('Non-Defaulters')\nax.set(xlabel='Gender')","b66f8a8d":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'NAME_CONTRACT_TYPE',data=df_current_target_1)\nplt.title('Defaulters')\nax.set(xlabel='Loan type')\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'NAME_CONTRACT_TYPE',data=df_current_target_0)\nplt.title('Non-Defaulters')\nax.set(xlabel='Loan type')","5fbd1a73":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'NAME_INCOME_TYPE',data=df_current_target_1)\nplt.title('Defaulters')\nax.set(xlabel='Income type')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')\n\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'NAME_INCOME_TYPE',data=df_current_target_0)\nplt.title('Non-Defaulters')\nax.set(xlabel='Income type')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","b6158afa":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'NAME_EDUCATION_TYPE',data=df_current_target_1)\nplt.title('Defaulters')\nax.set(xlabel='Education type')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')\n\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'NAME_EDUCATION_TYPE',data=df_current_target_0)\nplt.title('Non-Defaulters')\nax.set(xlabel='Education type')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","eecca413":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'NAME_FAMILY_STATUS',data=df_current_target_1)\nplt.title('Defaulters')\nax.set(xlabel='Family status')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')\n\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'NAME_FAMILY_STATUS',data=df_current_target_0)\nplt.title('Non-Defaulters')\nax.set(xlabel='Family status')\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","e2f6d9bb":"plt.figure(figsize=(16,6))\nplt.subplot(1,2,1) \nplt.title('Defaulters')\nsns.distplot(df_current_target_1['AMT_CREDIT'],hist=False)\n\nplt.subplot(1,2,2) \nplt.title('Non Defaulters')\nsns.distplot(df_current_target_0['AMT_CREDIT'],hist=False)","27ef4717":"gender = ['M','F']\nplt.figure(figsize=(16,6))\nplt.subplot(1,2,1) \nplt.title('Defaulters')\nfor i in gender:\n    subset = df_current_target_1[df_current_target_1['CODE_GENDER'] == i]\n    sns.distplot(subset['AMT_INCOME_TOTAL'],hist=False,label=i)\n    \nplt.subplot(1,2,2) \nplt.title('Non Defaulters')\nfor i in gender:\n    subset = df_current_target_0[df_current_target_0['CODE_GENDER'] == i]\n    sns.distplot(subset['AMT_INCOME_TOTAL'],hist=False,label=i)\n    ","2c718435":"plt.figure(figsize=(16,6))\nplt.subplot(1,2,1) \nplt.title('Defaulters')\nsns.distplot(df_current_target_1['AMT_ANNUITY'],hist=False)\n\nplt.subplot(1,2,2) \nplt.title('Non Defaulters')\nsns.distplot(df_current_target_0['AMT_ANNUITY'],hist=False)","1a5ccf5d":"# Taking the percentage of each age group who was defaulted.\n# Divide each defaulted age group count by total count of that age group\nyoung_1 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Young') & (df_application_current['TARGET'] == 1)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Young']),2)\nmidage_1 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Mid Age') & (df_application_current['TARGET'] == 1)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Mid Age']),2)\nsenior_1 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Senior') & (df_application_current['TARGET'] == 1)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Senior']),2)","8f1c0006":"# Creating a dataframe of the defaulted age group percentage\nagegroup_default = {'AGE_GROUP':['Young', 'Mid Age', 'Senior'], 'Percentage':[young_1, midage_1, senior_1]} \ndf_agegroup_default = pd.DataFrame(agegroup_default) \ndf_agegroup_default","f0c43a04":"# Taking the percentage of each age group who was not defaulted.\n# Divide each non defaulted age group count by total count of that age group\nyoung_0 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Young') & (df_application_current['TARGET'] == 0)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Young']),2)\nmidage_0 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Mid Age') & (df_application_current['TARGET'] == 0)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Mid Age']),2)\nsenior_0 = round(100*len(df_application_current[(df_application_current['AGE_GROUP'] == 'Senior') & (df_application_current['TARGET'] == 0)])\/len(df_application_current[df_application_current['AGE_GROUP'] == 'Senior']),2)","b65a1b70":"# Creating a dataframe of the non defaulted age group percentage\nagegroup_nondefault = {'AGE_GROUP':['Young', 'Mid Age', 'Senior'], 'Percentage':[young_0, midage_0, senior_0]} \ndf_agegroup_nondefault = pd.DataFrame(agegroup_nondefault) \ndf_agegroup_nondefault","5049f846":"# Plotting the above two dataframes\nplt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1) \nsns.barplot(x='AGE_GROUP',y='Percentage',data=df_agegroup_default)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2)\nsns.barplot(x='AGE_GROUP',y='Percentage',data=agegroup_nondefault)\nplt.title('Non-Defaulters')","13f17a54":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'CREDIT_GROUP',data=df_current_target_1)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'CREDIT_GROUP',data=df_current_target_0)\nplt.title('Non-Defaulters')","d045d9ec":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'INCOME_GROUP',data=df_current_target_1)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'INCOME_GROUP',data=df_current_target_0)\nplt.title('Non-Defaulters')","9f88bd92":"plt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)    \nax = sns.countplot(x = 'EXT_SCORE_CATEGORY',data=df_current_target_1)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2) \nax = sns.countplot(x = 'EXT_SCORE_CATEGORY',data=df_current_target_0)\nplt.title('Non-Defaulters')","f282542e":"# Listing the relevant columns for finding corelation\ncorr_cols = ['AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE','AGE','EXT_SOURCE_SCORE','REGION_RATING_CLIENT']","b145e7c4":"# Creating dataframe for numerical columns\ndf_corr_target_1 = df_current_target_1[corr_cols]\ndf_corr_target_1.head()","e8a83a36":"# Corelation matrix\ndf_corr_target_1.corr() ","41ba3ef5":"plt.figure(figsize=(10,8))\nsns.heatmap(df_corr_target_1.corr(),cmap=\"YlGnBu\",annot=True)","f2cda5b3":"# Creating dataframe for numerical columns\ndf_corr_target_0 = df_current_target_0[corr_cols]\ndf_corr_target_0.head()","3dc1b832":"# Corelation matrix\ndf_corr_target_0.corr() ","cd11a4da":"plt.figure(figsize=(10,8))\nsns.heatmap(df_corr_target_0.corr(),cmap=\"YlGnBu\",annot=True)","332cfbb7":"plt.figure(figsize=(16,6))\n\nplt.subplot(1,2,1)\nax = sns.scatterplot('AMT_INCOME_TOTAL','AMT_CREDIT',hue='CODE_GENDER', data=df_current_target_1)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2)\nax = sns.scatterplot('AMT_INCOME_TOTAL','AMT_CREDIT',hue = 'CODE_GENDER', data=df_current_target_0)\nplt.title('Non Defaulters')","aa58f6d4":"plt.figure(figsize=(16,6))\n\nplt.subplot(1,2,1)\nax = sns.scatterplot('AMT_REQ_CREDIT_BUREAU_QRT','AMT_CREDIT', data=df_current_target_1)\nplt.title('Defaulters')\n\nplt.subplot(1,2,2)\nax = sns.scatterplot('AMT_REQ_CREDIT_BUREAU_QRT','AMT_CREDIT', data=df_current_target_0)\nplt.title('Non Defaulters')","84f8bd4b":"# Category list\ncategories = ['NAME_CONTRACT_TYPE','CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','NAME_INCOME_TYPE','NAME_EDUCATION_TYPE',\n             'NAME_FAMILY_STATUS','NAME_HOUSING_TYPE','AGE_GROUP','INCOME_GROUP','EXT_SCORE_CATEGORY']","327b2673":"plt.figure(figsize=(25,40))\nk=0\nfor category in categories:\n    k = k+1\n    ax = plt.subplot(4,3,k)\n    sns.boxplot(x = category, y = 'AMT_CREDIT', data=df_current_target_1)\n    temp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","fcaaf26d":"plt.figure(figsize=(25,40))\nk=0\nfor category in categories:\n    k = k+1\n    ax = plt.subplot(4,3,k)\n    sns.boxplot(x = category, y = 'AMT_CREDIT', data=df_current_target_0)\n    temp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","2789f4c2":"df_application_current.pivot_table(values='TARGET',index='INCOME_GROUP',columns='CODE_GENDER',aggfunc='mean').plot.bar(figsize=(8,6),rot=45)\nplt.xlabel('Income group')\nplt.ylabel('Defaulters')","bb145c0b":"df_application_current.pivot_table(values='TARGET',index='NAME_EDUCATION_TYPE',columns='CODE_GENDER',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Educational qualification')\nplt.ylabel('Defaulters')","ef84a75d":"df_application_current.pivot_table(values='TARGET',index='CREDIT_GROUP',columns='INCOME_GROUP',aggfunc='mean').plot.bar(figsize=(8,6),rot=45)\nplt.xlabel('Credit amount group')\nplt.ylabel('Defaulters')","90603fcf":"df_application_current.pivot_table(values='TARGET',index='CREDIT_GROUP',columns='AGE_GROUP',aggfunc='mean').plot.bar(figsize=(8,6),rot=45)\nplt.xlabel('Credit amount group')\nplt.ylabel('Defaulters')","395a6082":"df_application_current.pivot_table(values='TARGET',index='AGE_GROUP',columns='INCOME_GROUP',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Age group')\nplt.ylabel('Defaulters')","4be741eb":"df_application_current.pivot_table(values='TARGET',index='NAME_INCOME_TYPE',columns='CODE_GENDER',aggfunc='mean').plot.bar(figsize=(8,5),rot=90)\nplt.xlabel('Profession')\nplt.ylabel('Defaulters')","5ec1da97":"df_application_current.pivot_table(values='TARGET',index='NAME_FAMILY_STATUS',columns='AGE_GROUP',aggfunc='mean').plot.bar(figsize=(8,7),rot=45)\nplt.xlabel('Family status')\nplt.ylabel('Defaulters')","ac78b8d2":"df_application_current.pivot_table(values='TARGET',index='NAME_FAMILY_STATUS',columns='CODE_GENDER',aggfunc='mean').plot.bar(figsize=(8,7),rot=45)\nplt.xlabel('Family status')\nplt.ylabel('Defaulters')","53f7683e":"df_application_previous = pd.read_csv('\/kaggle\/input\/loan-defaulter\/previous_application.csv')\ndf_application_previous.head()","1f6de012":"df_application_previous.shape","005140ab":"df_application_previous.info()","38082277":"df_application_previous.describe()","847ce605":"df_application_previous.replace('XNA',np.nan,inplace=True)\ndf_application_previous.replace('XAP',np.nan,inplace=True)","9ba95fae":"# List the columns having more than 30% missing values\ncols_30_percent_missing_values = (df_application_previous.columns[(round(100*(df_application_previous.isnull().sum()\/len(df_application_previous.index)), 2)) >= 30]).tolist()\ncols_30_percent_missing_values","a0804404":"# Delete the columns having more than 30% missing values\ndf_application_previous = df_application_previous.drop(cols_30_percent_missing_values,axis=1)","af20044f":"df_application_previous.columns","999b62d3":"cols_irrelevant = ['HOUR_APPR_PROCESS_START','FLAG_LAST_APPL_PER_CONTRACT','NFLAG_LAST_APPL_IN_DAY','WEEKDAY_APPR_PROCESS_START']","47bb27a3":"# Delete the columns which are irrelevant for the analysis\ndf_application_previous = df_application_previous.drop(cols_irrelevant,axis=1)","37fa55bd":"df_application_previous.shape","54b4d54f":"# Count the number of rows having more than 50% missing values\n# As there are none of the rows, so we are not deleting rows on basis of this\nlen(df_application_previous[df_application_previous.isnull().sum(axis=1) > (len(df_application_previous.columns)\/\/2)].index)","32656320":"# Percent of missing values in columns\n(round(100*(df_application_previous.isnull().sum()\/len(df_application_previous.index)),2))","386d7190":"# Count the rows for which AMT_ANNUITY, AMT_GOODS_PRICE and CNT_PAYMENT all are empty\nlen(df_application_previous[np.isnan(df_application_previous['AMT_ANNUITY']) & np.isnan(df_application_previous['CNT_PAYMENT']) & np.isnan(df_application_previous['AMT_GOODS_PRICE'])])","30dc320e":"df_application_previous = df_application_previous[(~(np.isnan(df_application_previous['AMT_ANNUITY']) & np.isnan(df_application_previous['AMT_GOODS_PRICE']) & np.isnan(df_application_previous['CNT_PAYMENT'])))]","f5566f58":"df_application_previous.shape","8227dc15":"(round(100*(df_application_previous.isnull().sum()\/len(df_application_previous.index)),2))","f9c06158":"# Count the rows for which AMT_ANNUITY is empty\nlen(df_application_previous[np.isnan(df_application_previous['AMT_ANNUITY'])])","a38c12f7":"# As there are only 38380 rows we can delte those records\ndf_application_previous = df_application_previous[~(np.isnan(df_application_previous['AMT_ANNUITY']))]","67818f25":"df_application_previous.shape","6e3dcf98":"(round(100*(df_application_previous.isnull().sum()\/len(df_application_previous.index)),2))","e59c1be3":"df_application_previous.shape","023f82ec":"# Finding outliers in all the numerical columns with 1.5 IQR rule and removing the outlier records \ncol_list_outlier = ['AMT_ANNUITY','AMT_APPLICATION','AMT_CREDIT','AMT_GOODS_PRICE','DAYS_DECISION','CNT_PAYMENT']\nfor col in col_list_outlier: \n    q1 = df_application_previous[col].quantile(0.25)\n    q3 = df_application_previous[col].quantile(0.75)\n    iqr = q3-q1\n    range_low  = q1-1.5*iqr\n    range_high = q3+1.5*iqr\n    df_application_prev = df_application_previous.loc[(df_application_previous[col] > range_low) & (df_application_previous[col] < range_high)]\n\ndf_application_prev.shape","a9120ee4":"# Percentage of rows lost\nround((100 - 100*(len(df_application_prev.index)\/1670214)),2)","8b638866":"# Listing columns for check data imbalance and plotting them\ncol_list = ['NAME_CONTRACT_TYPE','NAME_CONTRACT_STATUS','NAME_CLIENT_TYPE','NAME_PORTFOLIO','CHANNEL_TYPE']            \nk=0\nplt.figure(figsize=(20,22))\nfor col in col_list:    \n    k=k+1\n    plt.subplot(3, 3,k)    \n    #df_application_prev[col].value_counts().plot(kind='bar');\n    ax = sns.countplot(x = col , data = df_application_prev )\n    temp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","d08e4624":"# Divide 'DAYS_DECISION' by 30 for taking MONTH_DECISION\ndf_application_prev['MONTH_DECISION'] = abs(df_application_prev['DAYS_DECISION']\/\/30)","6bcbf7cd":"# Drop 'DAYS_DECISION' column\ndf_application_prev = df_application_prev.drop(['DAYS_DECISION'],axis=1)","1b5a5be4":"df_application_prev.head()","aceae538":"df_application_prev.shape","9086ce02":"# Columns to take from current application dataset\ncols_current = ['SK_ID_CURR','TARGET','CODE_GENDER','NAME_EDUCATION_TYPE','NAME_FAMILY_STATUS','AGE_GROUP','INCOME_GROUP','EXT_SCORE_CATEGORY']","698799a9":"# Creating a dataset from current application for merging \ndf_current_to_merge = df_application_current[cols_current]\ndf_current_to_merge.head()","3961d23f":"# Columns to remove from previous application dataset\ncols_prev_to_drop = ['SELLERPLACE_AREA','PRODUCT_COMBINATION','AMT_GOODS_PRICE']","273ce46c":"# Creating  a dataset from previous application for merging\ndf_prev_to_merge = df_application_prev.drop(cols_prev_to_drop,axis=1)\ndf_prev_to_merge.head()","91de1aa0":"# Merging both the datasets\ndf_merged = pd.merge(df_prev_to_merge,df_current_to_merge, on='SK_ID_CURR', how='left')\ndf_merged.head()","6a4dc365":"df_merged.shape","b2de7ee8":"len(df_merged[np.isnan(df_merged['TARGET'])])","3c03006d":"df_merged = df_merged[(~(np.isnan(df_merged['TARGET'])))]         ","14df46cf":"# Converting TARGET column from float64 to Int64\ndf_merged['TARGET'] = df_merged['TARGET'].astype('int64')","46572768":"df_merged.head()","02f07b50":"df_merged['PERCENT_CREDIT'] = round(((df_merged['AMT_CREDIT']\/df_merged['AMT_APPLICATION'])*100),2)\ndf_merged.head()","9e6bff7d":"plt.figure(figsize=(8,5))   \nax = sns.countplot(x = 'NAME_CONTRACT_STATUS',data=df_merged)\nax.set(xlabel='Loan status')\n","76ba1283":"plt.figure(figsize=(8,5))   \nax = sns.countplot(x = 'NAME_CLIENT_TYPE',data=df_merged)\nax.set(xlabel='Client type')","b96c19a5":"plt.figure(figsize=(8,5))   \nax = sns.countplot(x = 'NAME_PORTFOLIO',data=df_merged)\nax.set(xlabel='Portfolio')","0ac5f082":"plt.figure(figsize=(8,5))   \nax = sns.countplot(x = 'CHANNEL_TYPE',data=df_merged)\ntemp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')\nax.set(xlabel='Application channel')","60188f99":"plt.figure(figsize=(10,6))\nax = sns.distplot(df_merged['AMT_APPLICATION'],hist=False)\nax.set(xlabel='Application amount')","b6d92216":"plt.figure(figsize=(10,6))\nax = sns.distplot(df_merged['AMT_CREDIT'],hist=False)\nax.set(xlabel='Credited amount')","f55c14c3":"plt.figure(figsize=(10,6))\nax = sns.distplot(df_merged['MONTH_DECISION'],hist=False)\nax.set(xlabel='Months')","35e24f86":"# Listing the relevant columns for finding corelation\ncorr_cols = ['AMT_APPLICATION','AMT_CREDIT','AMT_ANNUITY','PERCENT_CREDIT','CNT_PAYMENT','MONTH_DECISION']","ab15b819":"# Creating dataframe for numerical columns\ndf_merged_corr = df_merged[corr_cols]\ndf_merged_corr.head()","16a68c97":"# Corelation matrix\ndf_merged_corr.corr()","7302f01e":"plt.figure(figsize=(10,8))\nsns.heatmap(df_merged_corr.corr(),cmap=\"YlGnBu\",annot=True)","841617f7":"plt.figure(figsize=(10,6))\nax = sns.scatterplot('AMT_APPLICATION','AMT_CREDIT',hue='NAME_CONTRACT_STATUS', data=df_merged)","48e7db1c":"plt.figure(figsize=(10,6))\nax = sns.scatterplot('AMT_APPLICATION','MONTH_DECISION',hue='NAME_CONTRACT_STATUS', data=df_merged)","2d0c82af":"# Category list\ncategories = ['NAME_CONTRACT_TYPE','NAME_CLIENT_TYPE','NAME_PORTFOLIO','CHANNEL_TYPE']","f1b0a119":"plt.figure(figsize=(25,20))\nk=0\nfor category in categories:\n    k = k+1\n    ax = plt.subplot(2,2,k)\n    sns.boxplot(x = category, y = 'AMT_CREDIT', data=df_merged)\n    temp = ax.set_xticklabels(ax.get_xticklabels(), rotation = 45, horizontalalignment='right')","44d62e6e":"plt.figure(figsize=(10,6))\n\nsns.countplot(x = 'NAME_CLIENT_TYPE' ,hue = 'NAME_CONTRACT_STATUS', data = df_merged )","5c661582":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='CODE_GENDER',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","604c6d50":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='NAME_CLIENT_TYPE',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","dca481d6":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='AGE_GROUP',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","3c0ebcb6":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='INCOME_GROUP',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","22911abc":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='NAME_PORTFOLIO',aggfunc='mean').plot.bar(figsize=(8,5),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","7ff35ff4":"df_merged.pivot_table(values='TARGET',index='NAME_CONTRACT_STATUS',columns='EXT_SCORE_CATEGORY',aggfunc='mean').plot.bar(figsize=(8,6),rot=45)\nplt.xlabel('Previous loan status')\nplt.ylabel('Current defaulters')","4cd3d07a":"##### Analysis\nThe distribution of the credited amount of the loan was mostly in 250000 range.","4922c689":"#### Credit amount of the loan of various categories","4da9de07":"#### Age group and Income group","c702e32e":"##### Analysis\nWe see that `Country-wide` was heavily used for previous applications followed by `Credit and Cash offices`, `Stone` and `Regional`. Rest other channels are hardly used. ","7817f7b3":"##### Analysis\n1. `Lower secondary` educated clients are more defaulted followed by `Secondary` and `Incomplete higher` educated clients.\n2. The `Higher` educated people are less defaulted.\n3. Accross all educated level `Females` are less defaulted than male.","9de589e6":"##### Analysis\n1. **Defaulters** - No surprise that low scorer from external data source are more defaulters. Also, the medium scorer are as likely defaulter as low scorer.\n2. **Non defaulters** - Medium scorers are no more defaulted than High scorer. As expected the Low scorers are lesser in number.","c17cf903":"**Replacing all the XNA and XAP to np.null**\nBecause looks like these values entered in the application as blank or may be not applicable.","07961ae8":"### Removing outliers","ef3d4520":"##### Analysis\n1. For previously `Unused` offer the `Medium` income group was more defaulted and `Low` income group is the least.\n2. For other application status more or less all the income groups are equally defaulted. ","391a6031":"## Bivariate analysis","b54e4b13":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n\n1. Young people, who were previously refused are mostly defaulted.\n2. The senior citizens are less defaulted irrespective of their previous loan status.\n3. In all income groups previously refused applicants are more defaulted.\n\n***Recommendations:-***\n1. Safer to grant loans for senior citizen.\n2. Lesser risk to grant loans for approved applicants to all income groups.\n","6daf9d03":"#### Credit amount group and Age group","479cdf46":"##### Analysis\nWe see that the more number of enquiries the lesser the amount of loan credited for both defaulters and non defaulters.","1d4916c1":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n\n1. Previously refused and unused offer applications were more defaulted in male.\n2. New clients with previously unused offer are more defaulted.\n\n***Recommendations:-***\n\n1. It is recommended to provide loans to previously approved females.\n2. There is a risk to grant loans for clients, whose applications were refused or unused previously.\n","c88e13f2":"#### Credit amount of the loan on the basis of client income for both male and female","ad3f4181":"For the simplification of analysis of Normalized score from external data source, we are taking average of two different external data sources (EXT_SOURCE_2 and EXT_SOURCE_3) and creating a column called **EXT_SOURCE_SCORE**\n","f7fc7271":"#### Application amount and the month taken to take decision related to current application","cc1bc9e7":"##### Analysis\n1. We can see that the `Defaulters` are more for previously `Unused offers` loan status clients, who were `New`.\n2. For previously `Approved` status the `New` clients were more defaulted followed by `Repeater`.\n3. For previously `Refused` applicants the `Defaulters` are more `Refreshed` clients.\n4. For previously `Canceled` applicants the `Defaulters` are more `New` clients.","74680004":"##### Corelation of non defaulters ","b97379ba":"##### Analysis\n1. Applicants with low external source score are highly defaulted.\n2. Higher scorer applicants are very ulikely to default irrespective of their previous loan status.","0357a1b1":"#### Applied loan amount","40c64662":"#### Previous Loan status","84353933":"## Bivariate analysis","bad375d1":"#### Creating three age groups - Young, Mid age and Senior citizen","a373704b":"### Checking data imbalance","5c72a82b":"#### Family status and age group","7b2e2243":"#### Credit amount of the loan of various categories","295b3599":"#### Credited loan amount","1970ad12":"#### Converting `DAYS_DECISION` column into `MONTH_DECISION` column for readablity and analysis","6e69c7bb":"#### Current loan defaulter status with respect to previous loan application status","67cc9a3d":"### Merging Current application and Previous application dataset","58ad18df":"### Bivariate analysis on continious variable","362139ac":"### Bivariate analysis on categorical variable","1689cec9":"##### Analysis\nWe can see that `Males` are more likely defaulted than `Females` accross all income groups.","ef37af4e":"This is an integer type variable, and thus have values 0, 1, 2 etc. We cannot impute the NaNs by the mean or the median (1.53 enquires does not make sense!).\nThus, we need to impute them by the mode - the most common occurring value if that approach is feasible.","72d92c55":"##### Analysis\n1. Most of the clients were defaulted, who previously applied loan for `Cards`.\n2. For approved loan status the clients applied for `Cars` are less defaulted.\n3. For `Refused` loan status the clients applied for `POS` are less defaulted.","1cd8d377":"##### Analysis\nMost of the applications were for the amount of below 250000 as we see from the above distribution.","8d924827":"### Divide data into two sets \n##### Client with payment difficulties (Target=1) \n##### All other cases (Target=0) ","140f66ce":"##### Analysis\n1. **Defaulters** - Education with Secondary\/Secondary sepcial customers are more number in defaulters comapre with other level of eduacted poeple.\n2. **Non defaulters** - Here also Secondary\/Secondary sepcial are more in numbers.","c839ab4a":"##### Analysis\n1. **Defaulters** - We see that Young people are more likely to default than other two age groups. Whereas, Senior citizens are less likely to default than others.\n2. **Non defaulters** - There is not much difference in the likelihood for non defaulters in the age groups.","6c1a4768":"##### Analysis\nWe see in both the cases that Revolving loans are very less in number compared to Cash loans.","8f471817":"#### Non-defaulters","307ead1e":"#### Client type","3759d1b1":"## Introduction\n\nThis case study aims to give us an idea of applying EDA in a real business scenario. In this case study, apart from applying the techniques of Exploratory Data Analysis (EDA), we will also develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.\n\n## Business Understanding\n\nThe loan providing companies find it hard to give loans to the people due to their insufficient or non-existent credit history. Because of that, some consumers use it as their advantage by becoming a defaulter. Suppose you work for a consumer finance company which specialises in lending various types of loans to urban customers. You have to use EDA to analyse the patterns present in the data. This will ensure that the applicants are capable of repaying the loan are not rejected.\n\nWhen the company receives a loan application, the company has to decide for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n- If the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company\n- If the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company.\n\nThe data given below contains the information about the loan application at the time of applying for the loan. It contains two types of scenarios:\n- **The client with payment difficulties:** he\/she had late payment more than X days on at least one of the first Y instalments of the loan in our sample,\n- **All other cases:** All other cases when the payment is paid on time.\n\nWhen a client applies for a loan, there are four types of decisions that could be taken by the client\/company):\n1. **Approved**: The Company has approved loan Application\n2. **Cancelled:** The client cancelled the application sometime during approval. Either the client changed her\/his mind about the loan or in some cases due to a higher risk of the client he received worse pricing which he did not want.\n3. **Refused**: The company had rejected the loan (because the client does not meet their requirements etc.).\n4. **Unused offer**:  Loan has been cancelled by the client but on different stages of the process.\n\nIn this case study, you will use EDA to understand how consumer attributes and loan attributes influence the tendency of default.\n\n## Business Objectives \n\nThis case study aims to identify patterns which indicate if a client has difficulty paying their instalments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.\n\nTo develop your understanding of the domain, you are advised to independently research a little about risk analytics - understanding the types of variables and their significance should be enough).\n\n## Data Understanding\n\n\nThis dataset has 3 files as explained below: \n1. **application_data.csv**  contains all the information of the client at the time of application.\nThe data is about whether a client has payment difficulties.\n2. **previous_application.csv** contains information about the client\u2019s previous loan data. It contains the data whether the previous application had been Approved, Cancelled, Refused or Unused offer.\n3. **columns_description.csv** is data dictionary which describes the meaning of the variables.\n","0d8ac343":"##### Analysis\nWe see that the `Repeater` clients have more approved loans than `New` and `Refreshed` clients.","3f226005":"#### Application amount and credited amount","cf79265a":"### Bivariate analysis on categorical variable","2128a076":"#### Defaulters and non-defaulters on the basis of Education type","c75098dd":"#### Analysis of two segmented variables","33a81777":"#### Defaulters and non-defaulters on the basis of Loan type","6dea4da0":"#### Corelation of relevant numerical columns for defaulters and non defaulters","692c8462":"#### Defaulters","18123e93":"We can see that there is data imbalance in below columns:-\n1. NAME_CONTRACT_TYPE - There are veru few `Revolving Loans`\n2. NAME_CONTRACT_STATUS - There are very few `Refused` loans. Almost negligible `Canceled` loans.\n3. NAME_CLIENT_TYPE - There are very few `New` applicant. Even fewer `Refreshed` applicants.\n4. NAME_PORTFOLIO - Very few application for Cards and Cars\n5. CHANNEL_TYPE - Except `Country-Wide`, `Credit and Cash offices` and `Stone` all other channels are very few in muber.","36024863":"#### Defaulters and non-defaulters on the basis of gender and their total income","3831ff4f":"We can see that there are NaN values in the current application columns in the merged datasets. Because few `SK_ID_CURR` are present in the previous application dataset, but those IDs are not present in the current application dataset.\nEg:- `SK_ID_CURR == 176158` is present in the previous application but not in present.\nWe will remove those such records.","b33e7da1":"As we can see that except **FLAG_DOCUMENT_3** all the columns have negligible count of 1s.\nSo we are removing all the FLAG_DOCUMENT columns except FLAG_DOCUMENT_3","0f10f2ed":"As there are only 333855 such records we can delete those.\nNote:- As we have total 1670214 records deleting only 333855 records will not much affect our further analysis.\nIt is better to delete such rows instead of imputing values and making the analysis biased.","1ccc52bc":"#### Current loan defaulter status with respect to previous loan application status and portfolio of the loan","f7f86002":" #### Income group and gender","aed86e50":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n1. Senior people irrespective of family status are less likely to be defaulted.\n2. Young people are more likely to be defaulted in all family status.\n3. Males are more like to be defaulted than females.\n\n***Recommendations:-***\n1. Better to grant loan for senior citizen of all family status.\n2. It is risky to grant loan for single, separated and civil marriage young men.","f166ea76":"#### Defaulters and non-defaulters on the basis of Loan annuity","18f70982":"### Univariate analysis for continious variables","e747deac":"##### Analysis\n1. `Young` clients are more defaulted than Mid age and senior.\n2. Young low income people are more defaulted.\n3. For Mid age and senior people the default rate is almost same in all income group.","893380bd":"#### Months took for the pervious application decision relative to the current application ","b8ea5003":"##### Analysis\n1. **Defaluters** - We can see that females are slightly more in number of defaulters than male.\n2. **Non-defaluters** - The same pattern continues for non-defaluters as well. The females are more in number here than male.","dfe864b3":"### Checking Data Imbalance","fc1e38a2":"##### Analysis\nWe see that previously `Refused` client is more defaulted than previously `Approved` clients. Also, in all the cases the `Males` are more defaulted than `Females`.","12a4b043":"#### Treating Missing Values in Rows","625247fc":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n\n1. Higher educated people are less defaulted and lower secondary educated people are more.\n2. Unemployed clients along with clients with maternity leave are heavily defaulted.\n\n***Recommendations:-***\n\n1. Safe to grant loans to higher educated clients across all profession except unemployed and women with maternity.\n","1ac93127":"##### Analysis\n1. No surprise the unemployed clients are more defaulted.\n2. Clients with maternity leave are expected to be defaulted more.\n3. The default rate is lesser in all other professions.\n4. Males are more defaulted with their respective professions compared to females.","ff76a946":"##### Analysis\n1. For all the previous status `Young` applicants are more defaulted.\n2. For all the previous status `Senior` applicants are less defaulted compared to others.","445a387c":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n\n1. The previous applications for portfolio Cards and POS are mostly defaulted .\n2. Previously refused applications for Cash are also defaulted in higher rate.\n3. Low external source scorer are highly defaulted irrespective of their previous loan status.\n\n***Recommendations:-***\n\n1. It is safer to grant loans for any portfolio for previously approved applicants.\n2. It is high risk to grant loans for applicants, who have poor external source score specially whose loan were previously refused, unused or cancel.\n","87d2a85a":"#### Creating three income groups - Hign, medium and Low","95e5560e":"#### Defaulters and non-defaulters on the basis of Family status","243fa84d":"##### Analysis\nThe highest number of the previous applications was for POS. Applications for Cash also has good number. Applications for Cards were very few.","f748843a":"We can see that there is data imbalance in below columns:-\n1. TARGET -  There are very few defaulters(1) compare to non defaulters(0)\n2. NAME_CONTRACT_TYPE - There are very few Revolving loans than Cash loans\n3. NAME_EDUCATION_TYPE - Most of the loans applied by Secondary\/Secondary special educated people\n4. NAME_FAMILY_STATUS - Most of the loans applied by Married people.\n5. NAME_HOUSING_TYPE - Most of the application came from Home\/appartment owner\n","614f5f55":"#### Treating Missing Values in Rows","2fea58e0":"### Univariate analysis on unordered categorical variable","b30d06a4":"#### Percentage of age group applicants defaulted and not defaulted\nThe analysis below showed that the how much percentage of each age group(Young, Mid age and Senior citizen) applicants are defaulted and not defaulted.","0f296172":"##### Analysis\nWe can see that the applications are more concentrated on the lesser amount and so as the credited amount. Also, the credited amount is increased with respect to the application amount.","52683541":"##### Analysis\n1. Credit amount of the loans are very low for `Revolving loans`\n2. There is no credit amount differnce between genders, client owning cars or realty.\n3. The mid age group got more amount of loan credited cmpared to young and senior citizen.\n4. Higher income group have more loan amount credited and lower the lowest.\n5. Clients having higher external score have more loan amount.\n6. Surprisingly the `unemployed` people have spike in credit amount of loan\n7. The `Married` people have more loan amount credited.","911c4359":"##### Analysis\n1. **Defaulters** - Surprisingly the High income group is more in number to be defaulted, then Medium and then Low.\n2. **Non defaulters** - Here as expected the count of non defaulters more in High income group and less in low income group.","a799fe56":"**Highly corelate columns for non defaulters**\n1. AMT_CREDIT and AMT_ANNUITY (0.76)\n2. AMT_CREDIT and AMT_GOODS_PRICE (0.98)\n3. AMT_ANNUITY and AMT_GOODS_PRICE (0.76)","25487dd5":"##### Analysis\n1. **Defaulters** - We can notice that the lesser the credit amount of the loan, the more chances of being defaulter. The spike is till 500000.\n2. **Non defaulters** - If the credit amount is less, there is lesser chance of being defaulted. And gradually the chance is being decreased with the loan credit amount.","94bef38b":"##### Analysis\nWe can see that most of the applications decision took approximately 30 months. The time taken spread upto 100 months.","05a69542":"#### Current loan defaulter status with respect to previous loan application status and client types","f494ae9c":" #### Credit amount group and Income group","8125d23b":"Though we lost around `10%` rows in the outliers handling exercise, we got rid of the outliers for fair analysis of the data.  ","0feba8bf":"#### Credit amount group","e5f07863":"#### Current loan defaulter status with respect to previous loan application status and external source score category","71cdc94d":"#### Creating three External source score groups - High, Medium and Low","3817722f":"**Highly corelate columns for defaulters**\n1. AMT_CREDIT and AMT_ANNUITY (0.74)\n2. AMT_CREDIT and AMT_GOODS_PRICE (0.98)\n3. AMT_ANNUITY and AMT_GOODS_PRICE (0.74)","d146c274":"## Analysis","f385b577":"### Handaling missing values in columns\n","b2633283":"We can create a new derived column for what percentage of the applied amount was credited for each client. \nDerived column name :- `PERCENT_CREDIT`","633ab73d":"##### Analysis\n1. Credit amount of the loans are very low for `Revolving loans`\n2. There is no credit amount differnce between genders, client owning cars or realty.\n3. The Young age group got less amount of loan credited cmpared to mid age and senior citizen.\n4. Higher income group have more loan amount credited.\n5. Clients having higher external score have more loan amount.","566e8ace":"##### Analysis\n1. Medium credit amount group are highly defaulted in all income groups.\n2. High credit amount groups are less likely to default in all income groups.","9de2624a":"We just have lost 0.16% rows in the entire data cleaning process","c8f37761":"#### Education and gender","101f62db":"##### Analysis\nMostly the applicants were `Repeater`","691df913":"##### Analysis\n1. `Cash loans` are more credited in amount than Revolving and Consumer loans.\n2. `Repeater` clients get more amount loan than new and refreshed clients.\n3. The loan with portfolio `Cars` are more amount credited followed by `Cash`.\n4. The credit amount of the loan is more from the application channel type as `car dealer` followed by `Channel of corporate sales`, `Credit and cash offices` and `Contact center`. The amount is very less for `Regional`, `Stone` and `Country-wide` channels.","dfd019a5":"##### Analysis\nAcross all family status the `Male` clients are more defaulted than `Female`.","28c6bdb9":"### Removing outliers","8d993321":"We see the standard deviation of `AMT_GOODS_PRICE` is very high. Also there are good amount of outliers in the colum as well.\nSo, imputing missing values with mean or median will be biased in this case.\nHence, it is better to remove the rows with missing `AMT_GOODS_PRICE`. Infact these rows are only 0.09% of the whole records.","5c29686f":"**Highly corelate columns**\n1. AMT_APPLICATION and AMT_CREDIT\n2. AMT_APPLICATION and AMT_ANNUITY\t\n3. AMT_CREDIT and AMT_ANNUITY\n\n**Moderately corelated columns**\n1. AMT_APPLICATION and CNT_PAYMENT\n2. AMT_CREDIT and CNT_PAYMENT","257579f0":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n1. High income groups are less defaulter than comparatively lower income groups.\n2. Mid age and senior people with all income groups are less defaulted.\n\n***Recommendation:-***\n1. Safer to grant loan for mid age and senior citizen clients with higher income. \n2. Risky to grant loans for young people with low income groups.","830e5b2f":"##### Analysis\nThere are huge number of `Approved` loan than `Refused`. Hardly, there are any `Canceled` or `Unused offer` loan.","b4af763f":"#### Count of defaulters and non-defaulters on the basis of gender","5228d54b":"##### Analysis\nWe can see a pattern here that the more the application amount of the loan, the lesser the months taken prior to current application. That means, most of the higher amount of the loan application decision made in the recent time comapred to the lower loan amount application. ","9dbf0549":"##### Analysis\n1. **Defaulters** - We can slightly figure out that the values are more concentrated on the lower income and lower credit of the loan. That means as the income is increased, the amount of loan is also increased. This is true for both the genders.\n2. **Non defaulters** - We can hardly figure out any pattern out of this.","68e29696":"##### Analysis\n1. Young clients with medium and low credit amount group are highly defaulted.\n2. Senior citizens across all credit amount groups are less likely defaulted.","4053f0fa":"# Final Notes\n\n***Highly recommended groups:-***\n\n1. Approved clients in their previous applications.\n2. Highly educated clients with higher income.\n3. Clients with higher external source score.\n4. Senior citizens in all categories.\n5. Married clients compared to other family status.\n6. Females are comparatively favourable than male.\n\n***High risk groups:-***\n\n1. Previously refused, cancelled or unused offer clients.\n2. Low income groups with previously refused status.\n3. Unemployed clients.\n4. Poor external source scorer.\n5. Young clients are comparatively riskier than mid age clients and senior citizens.\n6. Lower secondary and secondary educated clients.","25bcfa1b":"#### Corelation of relevant numerical columns","5c0635ba":"##### Analysis\nWe can notice from the above distribution plot that in both the cases the loan annuity is concentrated more from 10000 to 40000. ","1b18fa2c":"#### Current loan defaulter status with respect to previous loan application status and income group","c318460d":"#### Handaling missing values in columns","70c902c1":"##### Analysis\n1. **Defaulters** - We can notice by looking at the pattern that for being a defaulter both the genders (male and female) are almost equal in all income levels. The spike of being defaulters is from 50000 to 200000.\n2. **Non defaulters** - Here we see an interesting pattern. Females are more non defaulter on the lower income level but lesser non defaluter in higher income level. The spike is more for both the genders from 75000 to 150000.","47dd7921":"#### Defaulters and non-defaulters on the basis of credit amount of the loan","3ebd238a":"##### Analysis\nFor both the customers (defaulters and non-defaulters) married people are more in number comapred with single, separated, widow etc.","4baf859a":"#### Binning of `AGE`,  `AMT_INCOME_TOTAL`, `AMT_CREDIT` and `EXT_SOURCE_SCORE` columns\n`","a41d20a5":"#### Current loan defaulter status with respect to previous loan application status and age group","2864e98d":"#### Income group","902044b8":"#### Application channel type","a65b758d":"#### Credit amount of the loan on the basis of Number of enquiries to Credit Bureau about the client","bce34051":"#### Defaulters and non-defaulters on the basis of Income type","0e8fdef2":"We now have a dataframe with no missing values. Let's finally look at how many rows we have lost in the process.\nAt the begining we had `307511` rows.","40969524":"#### Analysis\n1. **Defaulters** - Working people are mostly defaulted as their numbers are high with compare to other pfrofessions.\n2. **Non-defaulters** - Similarly here also working people are more in number who are not defaulted.","ef2e49f1":"### Bivariate analysis on continious variable","bed70b08":"# Current application","c7a70e37":"### Univariate analysis for continious variables","c38857e7":"#### Converting `DAYS_BIRTH` column into `AGE` column for readablity and analysis","cc679e2e":"### Analysis of two segmented variables ","ab772ca0":"## Current applications","98e36242":"##### List and delete the columns, which are not much relevant for the analysis","0c1122de":"#### Status and Client type","790235de":"\n**Conclusion** - \nWe can see that for both defaulters and non defaulters the same pairs of columns are highly corelated.","3f173eb4":"![image.png](attachment:image.png)\n![image.png](attachment:image.png)\n\n***Observations:-***\n1. Across all income groups clients with medium amount credited is highly defaulted followed by low and high credit amount.\n2. Young clients with medium and low amount credited are most likely defaulted.\n\n***Recommendations:-***\n1. Recommended to grant slightly higher amount of loan to all income groups.\n2. It is very risky to grant medium and low amount of loan to young clients.\n","e6589baa":"#### Creating three credit amount groups - High, medium and low","65c2f677":"#### Profession and Gender","f5f0bdc9":"The most common value of ```AMT_REQ_CREDIT_BUREAU_QRT``` is 0, so let's impute the NaNs by that.","8bf410a0":"##### Analysis\nAcross all family status the `Young` clients are more defaulted and `Senior citizen` are less.","9bd4c58d":"#### Normalized score from external data source","ee59b1fc":"##### Analysis\n1. **Defaulters** - Surprisingly low credited amount groups are more defaulters.\n2. **Non defaulters** - As expected low credit amount groups are more in number, who were not defaulted.","6b5634f9":"## Loan application status relations - Current and Previous","bbceda34":"# Business Recomendation ","f76e5937":"# Previous application","9b9fb0c0":"#### Portfolio of the previous applications","d29dad0d":"### Segmented Univariate analysis for ordered categorical variables","60870328":"##### List and delete the columns, which are not much relevant for the analysis","cccd8372":"### Univariate analysis for Unordered categorical variables","c66609d0":"#### Converting `DAYS_EMPLOYED` column into `YEARS_EMPLOYED` column for readablity and analysis","8c152dbd":"We can see that the difference between mean and median is quite narrow for both the columns. Also, the variation from 25th to 75th percentile is equally distributed. \nThus, let's impute the missing values by the mean value of `EXT_SOURCE_2` and `EXT_SOURCE_3` respectively.","db5320e2":"#### Family status and gender","613b21c8":"We have 5 columns for the number of enquiries to Credit Bureau about the client.\nIt doesn't make much sense to count the number for a very short period of time such as an hour or a day or a week before the application date. On the other had it also make lesser sense if we count the number for a very long period of time. \nHence, it will be feasible for us if we take the count for a quater, which is not too short or too long time period.\nSo, we have to do two things now:-\n1. We will handle missing data for the column `AMT_REQ_CREDIT_BUREAU_QRT`\n2. We will delete the column for the count of hour, day, week, month and year.","d62f1150":"##### Corelation of defaulters ","1662e62a":"In our data cleaning excerise we have lost around `25%` rows. As this is huge dataset, we still have 1242076 records for analysis."}}