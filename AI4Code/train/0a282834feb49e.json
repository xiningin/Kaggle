{"cell_type":{"537e1333":"code","49ca443c":"code","62fa22f1":"code","6515d5d9":"code","04e0c6d4":"code","8ad40273":"code","c1742fcf":"code","f6ff20e7":"code","9c40c54b":"code","31665143":"code","6d041ada":"code","84ab19c7":"code","1bde3e98":"code","48c052b5":"code","b002d185":"code","dee7b97c":"code","b94d2539":"code","6791b4d8":"code","663502f6":"code","09f9e5ef":"code","c7cb21ae":"code","0a6ae893":"code","db10163b":"code","7cab2d13":"code","73adde76":"code","943eb0f6":"code","07e0f423":"code","87858be2":"code","5f4708fa":"code","550da731":"code","74651b61":"code","5dd38ed8":"code","e832611d":"code","9f490bc2":"code","732fd26f":"code","b1099c39":"code","33dcc096":"code","d0204753":"code","cdaebd02":"code","a460116a":"code","188d591e":"code","2f0ca35a":"code","0e175c3e":"code","571ec1d0":"code","afb40179":"code","b316e032":"code","ff12332d":"code","c2be1196":"code","3db1bac2":"code","f8d678cd":"code","86be0166":"code","015c8c56":"code","d49d9765":"code","35de19c5":"code","3bbb414e":"code","aef76874":"code","5ac4f1d6":"code","910933ac":"code","1fa376bb":"code","1a7aae2e":"code","cecd1b10":"code","48a071c4":"code","be014dc5":"code","1eb5a968":"code","e8e73e00":"code","f1fce4e7":"code","78de2728":"code","66d9752e":"code","01a3bf15":"code","9984c429":"code","89c23c79":"code","2658c7d6":"code","240f627b":"code","ddbda507":"code","3927de76":"code","efcd75c5":"code","b07733c9":"code","e8598ce3":"code","0b279c55":"code","63c06ff8":"code","b6e13477":"code","e7126ef4":"code","a22f5671":"code","d3eb0c43":"markdown","7d1dd328":"markdown","7986bf0f":"markdown","12d40a34":"markdown","183d24b1":"markdown","d4e91651":"markdown","56ad6a98":"markdown","8d96b131":"markdown","c9029a72":"markdown","e5c0634e":"markdown","87a1d0f0":"markdown","e1ec550c":"markdown","e34aab82":"markdown","36ed7b2c":"markdown","187c3942":"markdown","37cec652":"markdown","4a9dc45c":"markdown","ce253d36":"markdown","39b76de0":"markdown","68667ac8":"markdown","b14e259e":"markdown","d4dbc91c":"markdown","5d02148e":"markdown","a9f07410":"markdown","19f0f85e":"markdown","d041cb54":"markdown","fb318b12":"markdown","b5508a0c":"markdown","dced0e4c":"markdown","06ec4eb6":"markdown","c8834bb7":"markdown","1dffe3bc":"markdown","6c262eb0":"markdown","e1b35558":"markdown","ea7602e3":"markdown","23c15164":"markdown","e908560b":"markdown","090d5a80":"markdown","0a061c26":"markdown","83bc23d9":"markdown","454c0fe2":"markdown","d1ee3b9f":"markdown","b81195bc":"markdown","fd90de05":"markdown","d1c8b6c7":"markdown","6a2ff18c":"markdown","1cc1c050":"markdown","214504f5":"markdown","5ad8cec4":"markdown"},"source":{"537e1333":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49ca443c":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ub85c\ub529\n\nimport pandas as pd\nimport numpy as np\nimport time\nimport gc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","62fa22f1":"# \uae54\ub054\ud558\uac8c \ubcf4\uae30 \uc704\ud574 \ud654\uba74 \ud06c\uae30 \uc124\uc815\npd.set_option('display.max_rows', 150)\npd.set_option('display.max_columns', 250)","6515d5d9":"# \ub370\uc774\ud130\ub4e4 \uc77d\uc5b4\uc624\uae30 \n\ndef get_dataset():\n    app_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\n    app_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')\n    prev = pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')\n    bureau = pd.read_csv('..\/input\/home-credit-default-risk\/bureau.csv')\n    \n    return app_train, app_test, prev, bureau\n\napp_train, app_test, prev, bureau = get_dataset()","04e0c6d4":"# train \ub370\uc774\ud130 \ud6d1\uc5b4\ubcf4\uae30\n\nprint('application_train data shape : ',app_train.shape)\napp_train.head(10)","8ad40273":"app_train.info()","c1742fcf":"# test \ub370\uc774\ud130 \ud6d1\uc5b4\ubcf4\uae30\n\nprint('application_test data shape : ',app_test.shape)\napp_test.head(10)","f6ff20e7":"# bereau \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30\n\nprint('bereau shape : ', bureau.shape)\nbureau.head(10)","9c40c54b":"bureau.info()","31665143":"# previous_application \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30\n\nprint('previous_applications shape : ', prev.shape)\nprev.head(10)","6d041ada":"prev.info()","84ab19c7":"app_train['TARGET']. value_counts()\/app_train.shape[0]","1bde3e98":"app_train['TARGET'].astype(int).plot.hist()","48c052b5":"app_train.dtypes.value_counts()","b002d185":"def missing_values(df):\n        # \ucd1d \uacb0\uce21\uac12\uc758 \uc218\n        mis_val = df.isnull().sum()\n        \n        # \uc804\uccb4 \uac12\ub4e4\uc911 \uacb0\uce21\uac12\uc774 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\n        mis_val_percent = round(100 * df.isnull().sum() \/ len(df), 2)\n        \n        # \uacb0\uacfc \uc800\uc7a5 - concat\uc744 \uc774\uc6a9\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # \uc5f4\uc758 \uc774\ub984 \uc218\uc815\n        mis_val_table = mis_val_table.rename(\n        columns = {0 : '\uacb0\uce21\uac12\uc758 \uc218', 1 : '\uc804\uccb4\ub300\ube44 \uacb0\uce21\uac12'})\n        \n        # \uacb0\uce21\uac12 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\n        mis_val_table_new = mis_val_table[mis_val_table.iloc[:,1] != 0].sort_values('\uc804\uccb4\ub300\ube44 \uacb0\uce21\uac12', ascending=False)\n        \n        # \uacb0\uce21\uac12\uc774 \uc788\ub294 column \uac1c\uc218 \ucd9c\ub825\n        print (\"\ud574\ub2f9 \ub370\uc774\ud130\ud504\ub808\uc784\uc774 \uac00\uc9c4 columns\uc758 \uc218  : \" + str(df.shape[1]) + \"\uac1c\\n\"      \n            \"\ud574\ub2f9 \ub370\uc774\ud130\ud504\ub808\uc784 \uc911 \uacb0\uce21\uac12\uc774 \uc788\ub294 columns\uc758 \uc218 \" + str(mis_val_table_new.shape[0]) +\n              \"\uac1c\")\n        \n        return mis_val_table_new","dee7b97c":"# \uacb0\uce21\uac12 \ud1b5\uacc4\ub0b4\uc11c \uc0b4\ud3b4\ubcf4\uae30 - train\n\nmissing_values_1 = missing_values(app_train)\nprint()\nmissing_values_1","b94d2539":"# bureau\n\nmissing_values_2 = missing_values(bureau)\nprint()\nmissing_values_2","6791b4d8":"# previous_applications\n\nmissing_values_3 = missing_values(prev)\nprint()\nmissing_values_3","663502f6":"# cond1 = TARGET\uc774 1\uc77c \uacbd\uc6b0 (\ub300\ucd9c\uc0c1\ud658\ubd88\uac00), cond0 = TARGET\uc774 0\uc77c\uacbd\uc6b0 (\ub300\ucd9c\uc0c1\ud658\uac00\ub2a5)\ncond1 = (app_train['TARGET']==1)\ncond0 = (app_train['TARGET']==0)","09f9e5ef":"apps = pd.concat([app_train, app_test])\napps_o = apps\nprint(apps_o.shape)","c7cb21ae":"# \uc5f0\uc18d\ud615 \uc22b\uc790\ub97c \uac00\uc9c4 \uc720\ud615\uc758 feature\n\ndef show_binary(df, columns):\n    for column in columns:\n        fig, ax = plt.subplots(figsize=(12,4), nrows=1, ncols=3, squeeze=False)\n        sns.violinplot(x='TARGET', y=column, data=df, ax=ax[0][0])\n        sns.kdeplot(df.loc[cond0, column], label='target==0', ax=ax[0][1])\n        sns.kdeplot(df.loc[cond1, column], label='target==1', ax=ax[0][1])\n        sns.distplot(df[cond0][column], ax=ax[0][2], label='0', color = 'yellow')\n        sns.distplot(df[cond1][column], ax=ax[0][2], label='1', color = 'blue')\n        \nbinary_columns =['AMT_INCOME_TOTAL', 'AMT_CREDIT','AMT_GOODS_PRICE', 'DAYS_BIRTH', 'DAYS_EMPLOYED','CNT_CHILDREN', 'CNT_FAM_MEMBERS']\nshow_binary(apps, binary_columns)","0a6ae893":"cond = apps['AMT_INCOME_TOTAL'] < 400000\nsns.violinplot(x='TARGET', y='AMT_INCOME_TOTAL',data=apps[cond])","db10163b":"# \ub9c9\ub300\uadf8\ub798\ud504\ub85c target=1\uc758 \ube44\uc728\uacfc \ud574\ub2f9 \uc870\uac74\uc5d0 \ub9de\ub294 \uc218\ub97c \uc138\uc5b4\uc8fc\ub294 \ub9c9\ub300\uadf8\ub798\ud504 \ud45c\uc2dc\n\ndef show_plot(df,Target):\n    temp = df[Target].value_counts()\n    df1 = pd.DataFrame({Target: temp.index,'Number': temp.values})\n\n    # \uce74\ud14c\uace0\ub9ac\ubcc4 target=1\uc77c\uacbd\uc6b0\uc758 \ube44\uc728\n    cat_perc = df[[Target, 'TARGET']].groupby([Target],as_index=False).mean()\n    cat_perc.sort_values(by='TARGET', ascending=False, inplace=True)\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12,6))\n    sns.set_color_codes(\"pastel\")\n    s = sns.barplot(ax=ax1, x = Target, y=\"Number\",data=df1) \n    s = sns.barplot(ax=ax2, x = Target, y='TARGET', order=cat_perc[Target], data=cat_perc)\n    plt.ylabel('Percent of target = 1 [%]', fontsize=10)\n\n    plt.show();","7cab2d13":"# distplot\uc744 \ub098\ud0c0\ub0b4\ub294 \ud568\uc218, \uc0c9\uae54\ub3c4 \uc9c0\uc815 \uac00\ub2a5\n\ndef plot_distribution(df, feature, color):\n    plt.figure(figsize=(10,6))\n    plt.title(\"Distribution of %s\" % feature)\n    sns.distplot(df[feature].dropna(),color=color, kde=True ,bins=100)\n    plt.show()","73adde76":"show_plot(apps, 'CNT_CHILDREN')","943eb0f6":"show_plot(apps,'CNT_FAM_MEMBERS')","07e0f423":"# DAYS_BIRTH\ub97c \ub098\uc774\ub85c \ubcc0\ud574\uc11c \uadf8\ub798\ud504 \ub098\ud0c0\ub0b4\uae30\n\ndef show_convert(df, feature):\n    df[feature] = abs(df[feature])\n    plt.figure(figsize=(10,6))\n    sns.kdeplot(df.loc[df['TARGET']==0, feature]\/365, label='0', color='yellow')\n    sns.kdeplot(df.loc[df['TARGET']==1, feature]\/365, label='1')\n    plt.xlabel(feature)\n    plt.title('Distribution of '+ feature)","87858be2":"show_convert(apps, 'DAYS_BIRTH')","5f4708fa":"show_convert(apps, 'DAYS_EMPLOYED')","550da731":"# object feature\uc744 object_columns \uc5d0 \ub2f4\uace0 \uc774\ub4e4\uc744 \uc2dc\uac01\ud654\n\nobject_columns = app_train.dtypes[app_train.dtypes=='object'].index.tolist()\n\ndef show_category(df,columns):\n    for column in columns:\n        # distplot\uc740 \uc5f0\uc18d\ud615\uac12 \ud45c\ud604\uc5d0 \uc4f0\ub294\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uc8fc\ub85c catplot\uc744 \uc0ac\uc6a9\n        chart=sns.catplot(x=column, col='TARGET', data=df, kind='count')\n        chart.set_xticklabels(rotation=60)\n        chart.fig.set_figwidth(12)\n        chart.fig.set_figheight(2)\n        # \uadf8\ub798\ud504\uc758 x\ucd95 \ud56d\ubaa9\ub4e4\uc744 \uc798 \ubcf4\uae30\uc704\ud574 \uc218\ud589, \ud06c\uae30\uc870\uc815\n        \nshow_category(app_train, object_columns)","74651b61":"# \uc0c1\uad00\uad00\uacc4\uc21c \uc624\ub984\ucc28\uc21c \uc815\ub82c\ncorrelations = app_train.corr()['TARGET'].sort_values()\nprint('\uac00\uc7a5 \ud070 negative correlation \uc0c1\uc704 10\uac1c:\\n', correlations.head(10))\nprint()\n# \uc0c1\uad00\uad00\uacc4 \ub0b4\ub9bc\ucc28\uc21c \uc815\ub82c\ncorrelations = app_train.corr()['TARGET'].sort_values(ascending=False)\nprint('\uac00\uc7a5 \ud070 positive correlation \uc0c1\uc704 10\uac1c:\\n', correlations.head(10))","5dd38ed8":"correlations.count()","e832611d":"binarys = np.array(binary_columns)\nsns.heatmap(app_train[binarys].corr(), annot=True)\nplt.show()","9f490bc2":"bureau_train = apps.merge(bureau, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\nbureau_train_o = bureau_train","732fd26f":"b_columns = ['CREDIT_CURRENCY', 'AMT_CREDIT_SUM_DEBT', 'AMT_CREDIT_SUM_LIMIT', 'CREDIT_ACTIVE', 'CNT_CREDIT_PROLONG', 'CREDIT_DAY_OVERDUE']","b1099c39":"# bureau_train\uc5d0\uc11c \ud574\ub2f9\ud558\ub294 \uceec\ub7fc\ub4e4\ub9cc \uc120\ud0dd\ud574\uc11c \ub2e4\uc2dc train \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uace0 \uc22b\uc790\ud615 feature\ub9cc \uace8\ub77c\uc11c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e6\n\nbureau_train=bureau_train[['SK_ID_CURR','TARGET']+b_columns]\nb_num_columns = bureau_train.dtypes[bureau_train.dtypes != 'object'].index.tolist()\nb_num_columns = b_num_columns[2:6]\nprint(b_num_columns)","33dcc096":"# bureau_train\uc5d0\uc11c object feature\ub9cc \uace8\ub77c\uc11c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e6\n\nb_object_columns = bureau_train.dtypes[bureau_train.dtypes == 'object'].index.tolist()\nprint(b_object_columns)","d0204753":"# object \uc544\ub2cc \uc720\ud615\uc758 feature \uc2dc\uac01\ud654\n\ndef show_binary_2(df, columns):\n    for column in columns:\n        fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 3), squeeze=False)\n        \n        # bureau\ub294 \ud2b9\uc815 \uceec\ub7fc\uac12\uc774 infinite\ub85c \ub4e4\uc5b4\uac00\uc788\ub294 \uacbd\uc6b0\uac00 \uc788\uc74c.  infinite\uc77c \uacbd\uc6b0 KDE histogram \uc2dc\uac01\ud654 \uc2dc \ubb38\uc81c \ubc1c\uc0dd\ud558\uc5ec \uc774\ub97c \uc81c\uac70\n        sns.violinplot(x='TARGET', y=column, data=df[np.isfinite(df[column])], ax=ax[0][0])\n        sns.distplot(df[cond0 & np.isfinite(df[column])][column], label='0', color='coral', ax=ax[0][1])\n        sns.distplot(df[cond1 & np.isfinite(df[column])][column], label='1', color='turquoise', ax=ax[0][1])\n        \nshow_binary_2(bureau_train, b_num_columns)","cdaebd02":"TB0=bureau_train[bureau_train['TARGET']==0]\nTB1=bureau_train[bureau_train['TARGET']==1]","a460116a":"print(\"\ud604\uc7ac \ucc44\ubb34 \uae08\uc561 >\")\nround(bureau_train['AMT_CREDIT_SUM_DEBT'].describe(),1)","188d591e":"print(\"\uc2e0\uc6a9\uce74\ub4dc \ud55c\ub3c4 >\")\nround(bureau_train['AMT_CREDIT_SUM_LIMIT'].describe(),2)","2f0ca35a":"print(\"\uc2e0\uc6a9 \uc5f0\uc7a5 \ud69f\uc218 >\")\nround(bureau_train['CNT_CREDIT_PROLONG'].describe(),2)","0e175c3e":"print(\"\uc2e0\uc6a9 \uc5f0\uc7a5\ud69f\uc218\uc5d0 \ub530\ub978 target=0\uc77c \ud655\ub960\", \"\ub2e8, NAN\uc758 \uacbd\uc6b0\ub294 target=1\uc778 \uacbd\uc6b0\uac00 \uc5c6\uc744\ub54c\uc774\ub2e4. \uc989 100%\")\nTB0['CNT_CREDIT_PROLONG'].value_counts()\/(TB0['CNT_CREDIT_PROLONG'].value_counts()+TB1['CNT_CREDIT_PROLONG'].value_counts())*100","571ec1d0":"print(\" \ub300\ucd9c \uc2e0\uccad\uc2dc \uc5f0\uccb4 \uc77c\uc218\")\nround(bureau_train['CREDIT_DAY_OVERDUE'].describe(),2)","afb40179":"binarys = np.array(b_num_columns)\nsns.heatmap(bureau_train[binarys].corr(), annot=True)\nplt.show()","b316e032":"# object \uc720\ud615\uc758 feature \uc2dc\uac01\ud654\n\nshow_category(bureau_train, b_object_columns)","ff12332d":"bureau_train['CREDIT_CURRENCY'].value_counts()","c2be1196":"prev_train = apps.merge(prev, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\nprev_train_o = prev_train","3db1bac2":"prev_columns=['NAME_CONTRACT_TYPE_x', 'DAYS_DECISION', 'AMT_DOWN_PAYMENT', 'AMT_APPLICATION', 'AMT_CREDIT_x','WEEKDAY_APPR_PROCESS_START_y', 'NAME_TYPE_SUITE_x', 'NFLAG_INSURED_ON_APPROVAL']","f8d678cd":"prev_train=prev_train[prev_columns+['SK_ID_CURR', 'SK_ID_PREV','TARGET']]\nprev_train.rename(columns={'NAME_CONTRACT_TYPE_x':'NAME_CONTRACT_TYPE', 'AMT_CREDIT_x':'AMT_CREDIT', 'WEEKDAY_APPR_PROCESS_START_y':'WEEKDAY_APPR_PROCESS_START', 'NAME_TYPE_SUITE_x':'NAME_TYPE_SUITE' }, inplace=True)\nprint(prev_train.dtypes)","86be0166":"# prev_train\uc5d0\uc11c \ud574\ub2f9\ud558\ub294 \uceec\ub7fc\ub4e4\ub9cc \uc120\ud0dd\ud574\uc11c \ub2e4\uc2dc train \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uace0 \uc22b\uc790\ud615 feature\ub9cc \uace8\ub77c\uc11c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e6\nprev_num_columns = ['DAYS_DECISION', 'AMT_DOWN_PAYMENT', 'AMT_APPLICATION', 'AMT_CREDIT', 'NFLAG_INSURED_ON_APPROVAL']","015c8c56":"# prev_train\uc5d0\uc11c object feature\ub9cc \uace8\ub77c\uc11c \ub9ac\uc2a4\ud2b8\ub85c \ub9cc\ub4e6\n\nprev_object_columns = ['NAME_CONTRACT_TYPE', 'WEEKDAY_APPR_PROCESS_START', 'NAME_TYPE_SUITE']","d49d9765":"# groupby\ub97c \uc774\uc6a9\ud574 \ud3c9\uade0\uac74\uc218 \uad6c\ud558\uae30\n\nmean_prev = prev_train.groupby('SK_ID_CURR')['SK_ID_CURR'].count().mean()\nprint(\"SK_ID_CURR\ub2f9 \ud3c9\uade0 SK_ID_PREV \uac74\uc218 : \" , round(mean_prev,2))\nprint()\ng=sns.boxplot(prev_train.groupby('SK_ID_CURR')['SK_ID_CURR'].count())","35de19c5":"show_binary_2(prev_train, prev_num_columns)","3bbb414e":"binarys = np.array(prev_num_columns)\nsns.heatmap(prev_train[binarys].corr(), annot=True)\nplt.show()","aef76874":"# object \uc720\ud615\uc758 feature \uc2dc\uac01\ud654\n\nshow_category(prev_train, prev_object_columns)","5ac4f1d6":"TP0 = prev_train[prev_train['TARGET']==0]\nTP1 = prev_train[prev_train['TARGET']==1]\n\nprint(\"NAME_CONTRACT_TYPE\uc5d0 TARGET=0\uc77c \ud655\ub960 >> \")\nprint(TP0['NAME_CONTRACT_TYPE'].value_counts()\/(TP0['NAME_CONTRACT_TYPE'].value_counts()+TP1['NAME_CONTRACT_TYPE'].value_counts())*100)","910933ac":"print(\"NAME_TYPE_SUITE\uc758 \ubd84\ud3ec \ube44 >> \")\nprint(prev_train['NAME_TYPE_SUITE'].value_counts()\/prev_train['NAME_TYPE_SUITE'].value_counts().sum() * 100)","1fa376bb":"# \uc131\ubcc4 \uc778\ucf54\ub529\napps['CODE_GENDER'] = pd.factorize(apps['CODE_GENDER'])[0]","1a7aae2e":"apps['APPS_EXT_SOURCE_MEAN']=apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].mean(axis=1)\napps['APPS_EXT_SOURCE_STD']=apps[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']].std(axis=1)\napps['APPS_EXT_SOURCE_STD'] =apps['APPS_EXT_SOURCE_STD'].fillna(apps['APPS_EXT_SOURCE_STD'].mean())","cecd1b10":"#AMT_CREDIT \uc73c\ub85c \uac00\uacf5\napps['APPS_ANNUITY_CREDIT_RATIO'] = apps['AMT_ANNUITY']\/ apps['AMT_CREDIT']\napps['APPS_GOODS_CREDIT_RATIO'] = apps['AMT_GOODS_PRICE']\/apps['AMT_CREDIT']\napps['APPS_CREDIT_GOODS_DIFF'] = apps['AMT_CREDIT'] - apps['AMT_GOODS_PRICE']","48a071c4":"# FLAG_OWN_CAR, FLAG_OWN_REALTY \ubaa8\ub450 \uc18c\uc720\ud560\uacbd\uc6b0, \ud55c\uacbd\uc6b0\ub9cc \uc18c\uc720\ud560 \uacbd\uc6b0 \ub458\ub2e4 \uc18c\uc9c0\ud558\uc9c0 \uc54a\uc744\uacbd\uc6b0\n\napps['FLAG_OWN_CAR']= pd.factorize(apps['FLAG_OWN_CAR'])[0]\napps['FLAG_OWN_REALTY']=pd.factorize(apps['FLAG_OWN_REALTY'])[0]\napps['FLAG_OWN'] = 0 if (apps['FLAG_OWN_CAR']==0 and apps['FLAG_OWN_REALTY']==0) else (1 if (apps['FLAG_OWN_CAR']==0 or apps['FLAG_OWN_REALTY']==0) else 2)","be014dc5":"apps = apps.fillna(-999)","1eb5a968":"# \ud604\uc7ac \ud06c\ub798\ub527 \ucd1d\uc561 \uae08\uc561\uacfc \ucc44\ubb34 \ucd1d\uc561 \uae08\uc561 \uc0ac\uc774 \ube44\uc728\uacfc \ucc28\uc774\uc5d0 \ub300\ud55c feature \uc0dd\uc131\nbureau_train_o['BUREAU_CREDIT_DEBT_RATIO'] = bureau_train_o['AMT_CREDIT_SUM_DEBT'] \/ bureau_train_o['AMT_CREDIT_SUM']\nbureau_train_o['BUREAU_CREDIT_DEBT_DIFF'] = bureau_train_o['AMT_CREDIT_SUM_DEBT'] - bureau_train_o['AMT_CREDIT_SUM']","e8e73e00":"# \uc5f0\ucc44 \ud588\uc744\uacbd\uc6b0\uc758 \uac12\ub4e4 \uc870\uc0ac\nprint(round(bureau_train[bureau_train_o['CREDIT_DAY_OVERDUE']!=0]['CREDIT_DAY_OVERDUE'].describe(),2))\nprint()\nbureau_train_o['CREDIT_DAY_OVERDUE'].value_counts()","f1fce4e7":"bureau_train_o['CREDIT_DAY_OVERDUE_YN'] = bureau_train_o['CREDIT_DAY_OVERDUE'].apply(lambda x: 1 if x >0 else 0)\nbureau_train_o['CREDIT_DAY_OVERDUE_YN'].value_counts()","78de2728":"bureau_train_o['CREDIT_ACTIVE']=pd.factorize(bureau_train_o['CREDIT_ACTIVE'])[0]\nbureau_train_o['CREDIT_ACTIVE_NEW'] = bureau_train_o['CREDIT_ACTIVE'].apply(lambda x: -999 if x > 1 else x)\nbureau_train_o['CREDIT_ACTIVE_NEW'].value_counts()","66d9752e":"# \uc704\uc5d0\uc11c \uc5f0\uccb4 \ud69f\uc218\uac00 5\ud68c\uc774\uc0c1\uc774\uba74 TARGET\uc774 1\uc778 \uacbd\uc6b0\ub294 \uc5c6\uc73c\ubbc0\ub85c \ub2e4\uc74c\uc758 feature \ucd94\uac00\nbureau_train_o['CNT_CREDIT_PROLONG_YN'] = bureau_train_o['CNT_CREDIT_PROLONG'].apply(lambda x: 1 if x >4 else 0)\nbureau_train_o['CNT_CREDIT_PROLONG_YN'].value_counts()","01a3bf15":"bureau_train_o.drop('CREDIT_CURRENCY', axis=1)","9984c429":"bureau_train_o = bureau_train_o.fillna(-999)","89c23c79":"# \uc77c\uc218\ub97c \ub144\uc5f0\uc218\ub85c \ubcc0\uacbd\n\nprev_train_o['MONTH_DECISION'] =  abs(prev_train_o['DAYS_DECISION'])\/12\nprev_train_o.drop('DAYS_DECISION', axis=1)\n\nprint(round(abs(prev_train_o['MONTH_DECISION']).describe(),2))\nprint(prev_train_o['MONTH_DECISION'].isnull().sum())","2658c7d6":"sns.distplot(prev_train_o[prev_train_o['TARGET']==0]['MONTH_DECISION'], label='0', color = 'yellow')\nsns.distplot(prev_train_o[prev_train_o['TARGET']==1]['MONTH_DECISION'], label='1', color = 'blue')","240f627b":"# \ub300\ucd9c \uc2e0\uccad\uae08\uc561\uacfc \ud5c8\uac00\ub41c \ub300\ucd9c \uae08\uc561 \ucc28\uc774\n\nprev_train_o['PREV_CREDIT_DIFF'] = prev_train_o['AMT_APPLICATION'] - prev_train_o['AMT_CREDIT_x']","ddbda507":"# \ub300\ucd9c \uc2e0\uccad\uae08\uc561\uacfc \ub0a9\ubd80\uc120\uae08\uc561 \ucc28\uc774\n\nprev_train_o['AMT_DOWN_DIFF']= prev_train_o['AMT_APPLICATION'] - prev_train_o['AMT_DOWN_PAYMENT']","3927de76":"# \uc694\uc77c \uc6d0\ud56b\uc778\ucf54\ub529\nprev_train_o=pd.get_dummies(prev_train_o, columns = ['WEEKDAY_APPR_PROCESS_START_y'])\nprev_train_o.head(5)","efcd75c5":"# \ub3d9\ud589 \uace0\uac1d \uc778\ucf54\ub529\n\nprev_train_o['NAME_TYPE_SUITE_x']=pd.factorize(prev_train_o['NAME_TYPE_SUITE_x'])[0]","b07733c9":"prev_train_o = prev_train_o.fillna(-999)","e8598ce3":"from sklearn.model_selection import train_test_split\nfrom lightgbm import LGBMClassifier","0b279c55":"apps_train = apps[-apps['TARGET'].isnull()]\napp_test =apps[apps['TARGET'].isnull()]\nbureau_trains = bureau_train_o[- bureau_train_o['TARGET'].isnull()]\nprev_trains = prev_train_o[-prev_train_o['TARGET'].isnull()]\n\nftr_app1=apps_train.drop(['SK_ID_CURR', 'TARGET'], axis=1)\nftr_app2=bureau_trains.drop(['SK_ID_CURR', 'TARGET'], axis=1)\nftr_app3=prev_trains.drop(['SK_ID_CURR', 'TARGET'], axis=1)\nftr_app = app1.merge(app2, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\nftr_app = ftr_app.merge(app3, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\nftr_app = ftr_app.drop(['SK_ID_CURR', 'TARGET'], axis=1)\n\nt1 = apps_train['SK_ID_CURR', 'TARGET']\nt2 = bureau_trains['SK_ID_CURR', 'TARGET']\nt3 = prev_trains['SK_ID_CURR', 'TARGET']\ntarget_app = t1.mearge(t2, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\ntarget_app = target_app.mearge(t3, left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\ntarget_app =target_app.drop(['SK_ID_CURR'], axis=1)","63c06ff8":"train_x, valid_x, train_y, valid_y = train_test_split(ftr_app, target_app, test_size=0.3, random_state=2020)","b6e13477":"clf=LGBMClassifier(\n    n_jobs=-1,\n    n_estimators=1000,\n    learning_rate=0.02\n    num_leaves=32\n    subsample=0.8\n    max_depth=12\n    silent=-1\n    verbose=-1 \n)\n\nclf.fit(train_x, train_y, eval_set=[(train_x, train_y), (valid_x, valid_y)], eval_metric='auc', verbose=100, early_stopping_rounds=100)","e7126ef4":"from lightgbm import plot_importance\n\nplot_importance(clf, figsie = (15,30))","a22f5671":"clf.predict_probal(app_Test.drop(['SK_ID_CURR'], axis=1))[:,1]\n\napp_test['TARGET'] =pred\napp_test[['SK_ID_CURR', 'TARGET']].to_csv('app_baseline.csv', index=False)","d3eb0c43":"**Binary feature**","7d1dd328":"### \uacb0\uce21\uac12\ub4e4 \uc870\uc0ac\ubc0f \uad00\ucc30","7986bf0f":"## \ub370\uc774\ud130\ub4e4\uc744 \ubd84\ub9ac\ud558\uace0 LGBM Classifier\ub85c \ud559\uc2b5 \uc218\ud589","12d40a34":"**apps**","183d24b1":" ##### train \ub370\uc774\ud130\uc640 test \ub370\uc774\ud130\uc758 \ubaa8\uc591\uc744 \ubcf4\uba74 1\uac1c \ucc28\uc774\uac00 \ub0a8 => \uc608\uce21\ud574\uc57c\ud558\ub294 target\uc758 \uc720\ubb34\ub54c\ubb38\uc5d0 \ucc28\uc774\uac00 \uc788\ub294 \uac83\uc785\ub2c8\ub2e4.","d4e91651":"**Binary Feature**","56ad6a98":"**Object Feature**\n\n\ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc740 \uac1c\ubcc4\uac12\uc744 \uc22b\uc790\ub85c \ubc14\uafd4\uc8fc\uc5b4\uc57c \ud558\ub294\ub370 \ubc94\uc8fc\ud615 feature\uc744 \uc22b\uc790\ub85c \uc778\ucf54\ub529\ud558\ub294 \ubc29\ubc95\uc740                         \nLabel \uc778\ucf54\ub529\uacfc one-hot \uc778\ucf54\ub529\uc73c\ub85c \ubc94\uc8fc\ud615 \ubcc0\uc218\uac00 \uace0\uc720\uc758 \uac12\uc744 \ub450\uac1c \uc774\uc0c1 \uac00\uc9c4\ub2e4\uba74 one-hot \uc778\ucf54\ub529\uc744 \uad8c\uc7a5\ud55c\ub2e4","8d96b131":"### Bureau data \uc0b4\ud53c\uae30\n\n**SK_ID_CURR\uc744 \uae30\uc900\uc73c\ub85c bureau\uc640 app_train\uacfc \ud569\uce5c \ud6c4 \uc0b4\ud3b4\ubd10\uc57c\ud55c\ub2e4**","c9029a72":"##### => resolving loan\uc77c\ub54c \ud655\ub960\uc774 \uc870\uae08 \ub354 \ub192\uc74c","e5c0634e":"**AMT_INCOME_TOTAL**, **CNT_CHILDREN**, **CNT_FAM_MEMBERS**\uc740 \uadf8\ub798\ud504\uac00 \ub9e4\uc6b0 \uc67c\ucabd\uc73c\ub85c \uce58\uc6b0\uce5c \ubaa8\uc591\uc774\ub2e4.\n\uc57d\uac04\uc758 \ucc98\ub9ac\ud55c \ud6c4 \uad00\ucc30\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n**AMT_CREDIT** \uc740 \ub300\ucd9c\uae08\uc561\uc744 \ub098\ud0c0\ub0b4\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \ubd84\ud3ec\uc785\ub2c8\ub2e4.\n\n**AMT_GOODS_PRICE**\ub294 \ub0c9\uc7a5\uace0, \uc790\ub3d9\ucc28, \ucef4\ud4e8\ud130 \ub4f1 \uace0\uac00\uc758 \uc0c1\ud488\uc744 \uc0ac\uae30 \uc704\ud574\uc11c \ub300\ucd9c\uc744 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc5ec\ub7ec \uad70\uc9d1\uc73c\ub85c \ub098\ub258\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","87a1d0f0":"### Feature\ub4e4\uac04\uc758 \uc0c1\uad00\uad00\uacc4","e1ec550c":"## Feature Engineering \uc218\ud589\n\n**\uc804\ucc98\ub9ac\uacfc\uc815\ub3c4 \ud568\uaed8 \uc218\ud589\ud558\ub3c4\ub85d \ud55c\ub2e4**","e34aab82":"#### **Previous_application \ub370\uc774\ud130\uc5d0\uc11c \uc4f8 \ud53c\ucc98\ub4e4 8\uac00\uc9c0**\n\n\ub300\ucd9c \uc720\ud615, \uacfc\uac70\ub300\ube44 \ud604\uc7ac \uc2e0\uccad\uacb0\uc815\uae30\uac04, \ub300\ucd9c\uc2dc \ub0a9\ubd80\ud55c \uc120\uae08\uc561, \ub300\ucd9c \uc2e0\uccad\uae08\uc561, \ub300\ucd9c\uae08\uc561(\ud5c8\uac00), \ub300\ucd9c \uc2dc\uc791\ud55c \uc694\uc77c, \ub3d9\ud589 \uace0\uac1d, \ub300\ucd9c\uc2dc \ubcf4\ud5d8 \uc694\uccad\uc5ec\ubd80","36ed7b2c":"**DAYS_DECISION**\uc740 TARGET=1\uc77c \ub54c 0\uc5d0 \uac00\uae4c\uc6b4(\ucd5c\uadfc\uc77c)\uac12\uc774 \uc57d\uac04 \ub354 \ub9ce\uc74c.                                \n**AMT_CREDIT, AMT_APPLICATION** \ud070\ucc28\uc774\ub294 \uc544\ub2c8\uc9c0\ub9cc TARGET=1\uc77c \uacbd\uc6b0\uc5d0 \uc18c\uc561 \ube44\uc728\uc774 \uc57d\uac04 \ub192\uc74c                   \n**RATE_DOWN_PAYMENT**\ub294 \ud070 \ucc28\uc774 \uc5c6\uc74c.","187c3942":"**CREDIT_ACTIVE** \ub294 object feature\uc774\ubbc0\ub85c \ub77c\ubca8\uc778\ucf54\ub529\uc744 \uc218\ud589 0\uacfc 1\uac12\uc774 \uc544\ub2c8\uba74 -999\uac00 \ub418\ub3c4\ub85d \ubcc0\uacbd","37cec652":"### Previous_application \uc0b4\ud53c\uae30\n**SK_ID_CURR\uc744 \uae30\uc900\uc73c\ub85c bureau\uc640 app_train\uacfc \ud569\uce5c \ud6c4 \uc0b4\ud3b4\ubd10\uc57c\ud55c\ub2e4**","4a9dc45c":"## CSV \ud30c\uc77c\uc744 \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ub85c\ub4dc","ce253d36":"\uac00\uc7a5 \uc0c1\uad00\uad00\uacc4\uac00 \ud070\uac83\uc740 AMT_APPLICATION\uacfc AMT_PAYMENT\uc774\ub2e4","39b76de0":"CREDIT_CURRENCY\ub294 \ubcc4\ub85c \ud070 \uc601\ud5a5\uc744 \ubabb\ubbf8\uce58\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 column\uc740 \uc0ad\uc81c","68667ac8":"##### ==> \ud06c\uac8c unaccompanied \uc640 Family \uadf8\ub9ac\uace0 \ub098\uba38\uc9c0\ub85c \ub098\ub20c \uc218 \uc788\ub2e4.","b14e259e":"#### **Bureau \ub370\uc774\ud130\uc5d0\uc11c \uc4f8 \ud53c\ucc98\ub4e4 6\uac00\uc9c0**\n\n\ud654\ud3d0 \uc720\ud615, \ud604\uc7ac \ucc44\ubb34\uae08\uc561, \uc2e0\uc6a9\uce74\ub4dc \ud55c\ub3c4, \ub300\ucd9c \uc0c1\ud0dc, \uc2e0\uc6a9 \uc5f0\uc7a5 \ud69f\uc218, \ub300\ucd9c \uc2e0\uccad\uc2dc CB \ud06c\ub808\ub527 \uc5f0\uccb4 \uc77c\uc218","d4dbc91c":"### previous_applications","5d02148e":"**Object feature**","a9f07410":"### apps \ub370\uc774\ud130 \uc0b4\ud53c\uae30","19f0f85e":"### bureau","d041cb54":"CREDIT_CURRENCY\ub97c \ubcf4\uba74 currency 1\uc774 99.9%\ub97c \ucc28\uc9c0\ud558\uace0 \uc788\uc73c\ubbc0\ub85c \uadf8\ub0e5 currency1\uc774 \uc804\ubd80\ub97c \ucc28\uc9c0\ud558\uace0 \uc788\ub2e4\uace0 \ubd10\ub3c4 \ubb34\ubc29\ud558\ubbc0\ub85c \ud574\ub2f9 \ud56d\ubaa9\uc740 \uc758\ubbf8\uac00 \uc5c6\ub2e4.","fb318b12":"\ud788\uc2a4\ud1a0\uadf8\ub7a8\ub4f1\uc73c\ub85c \ubd84\ud3ec\ub97c \ud655\uc778\ud558\uba74 \uad6c\uac04\uc5d0 \ub530\ub77c \uacb0\uacfc\uac00 \ub9e4\uc6b0 \ub2ec\ub77c\uc9c8 \uc704\ud5d8\uc774 \uc788\uc73c\ubbc0\ub85c kdeplot\uc744 \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504\ub97c \ub098\ud0c0\ub0c8\uc73c\uba70\n\ub610 \ub2e4\ub978 \uadf8\ub798\ud504\uc778 violinplot\uc744 \uc774\uc6a9\ud574\uc11c \uac01 feature\ub4e4\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.","b5508a0c":"app_train\uc5d0\ub294 float\ub098 int\ud0c0\uc785\uc758 numerical feature\uc774 \uc788\uace0 object feature\uc774 \uc788\ub2e4","dced0e4c":"train \ub370\uc774\ud130\uc758 target \ube44\uc728\uc744 \ud655\uc778\ud574\ubcf4\uba74 0\uacfc 1\uc0ac\uc774 \ucc28\uc774\uac00 \ub9e4\uc6b0 \ud06c\ub2e4.\n\ub300\ucd9c\uae08\uc744 \uc81c\ub54c \uc0c1\ud658 \uac00\ub2a5\ud55c \uc0ac\ub78c\ub4e4\uc774 \ub300\ubd80\ubd84\uc784\uc744 \uc54c \uc218 \uc788\uc74c\n\n\uc704\uc758 \ub370\uc774\ud130\ub294 \ubd88\uade0\ud615\ud55c \ub370\uc774\ud130\uc784\uc744 \uc54c \uc218 \uc788\uace0 \uc774\ub300\ub85c \ud6c8\ub828\uc744 \ud558\uba74 \uc815\ud655\ub3c4\uac00 \ub0ae\uc740 \uc608\uce21\uc774 \ub098\uc62c\uac83\uc774\uae30 \ub54c\ubb38\uc5d0        \n\uc5ec\ub7ec\uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \ubaa8\ub378\ub9c1\uc744 \ud55c \ud6c4 \uc0b4\ud3b4\ubd10\uc57c \ud55c\ub2e4.","06ec4eb6":"### application_train","c8834bb7":"CNT_CHILDREN \uacfc CNT_FAM_MEMBERS \ub294 CNT_CHILDREN+2\ud55c \ubd84\ud3ec\uac00 CNT_FAM_MEMBERS\uc758 \uac12\uc758 \ubd84\ud3ec\uc640 \uc720\uc0ac\ud568\uc73c\ub85c\nCNT_CHILDREN, CNT_FAM_MEMBERS\ub97c \uac19\uc774 \ubb36\uc5b4 CNT_FAM_MEMBERS\ub85c \ub300\uccb4\ud558\uae30\ub85c\ud588\ub2e4.                     \n\ub610\ud55c target=1\uc758 \ube44\uc728\uc778 \ud45c\ub97c \ubcfc\ub54c \uac00\uc871\uc774 \ub9ce\uc744\uc218\ub85d \ub192\uc740\ube44\uc728\ub85c \ub300\ucd9c\uc744 \uac1a\uc9c0 \ubabb\ud558\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc5c8\ub2e4","1dffe3bc":"### \ub370\uc774\ud130 \uac00\uacf5 \uc804 train \ub370\uc774\ud130\uc640 test \ub370\uc774\ud130 \uc138\ud2b8 \uacb0\ud569","6c262eb0":"\ub098\uba38\uc9c0 \ub370\uc774\ud130\ub4e4\ub3c4 \uacb0\uce21\uac12\uc744 \ud6d1\uc5b4\ubd24\ub2e4.","e1b35558":"**Object Feature**","ea7602e3":"\uac12\ub4e4\uc774 \ub108\ubb34 \uc3e0\ub824\uc788\uc73c\ubbc0\ub85c \uc870\uc815\ud574\uc8fc\uae30 \uc704\ud574 \ud1b5\uacc4\uce58\ub97c \uc54c\uc544\ubd24\ub2e4.","23c15164":"**SK_ID_CURR\ub2f9 \ud3c9\uade0 SK_ID_PREV \uac74\uc218 \uad6c\ud558\uae30**","e908560b":"**Previous_application**","090d5a80":"**Bureau**","0a061c26":"### application_test","83bc23d9":"\ub370\uc774\ud130\ud504\ub808\uc784\uc774 \uac00\uc9c4 column\uc740 \ucd1d 122\uac1c \uc774\uba70 \uc774\ub4e4\uc911 \uacb0\uce21\uac12\uc774 \uad00\uce21\ub418\ub294 column\uc740 64\uac1c\uc774\uace0 \uc704\ub294 \uacb0\uce21\uac12\uc758 \ube44\uc728\uc774 \ub192\uc740\uc21c\uc73c\ub85c \uc815\ub82c\ud55c\uac83\uc774\ub2e4.","454c0fe2":"DAYS_EMPLOYED\uc5d0\uc11c **365243**\uc774 \uc790\uc8fc \ub098\ud0c0\ub098\ub294\ub370 365243\uc744 365\ub85c \ub098\ub204\uba74 \uc57d 1000\uc73c\ub85c \ucc9c\ub144\ub3d9\uc548 \uadfc\ubb34\ub97c \ud558\ub294\uac83\uc740 \uc774\uc0c1\ud558\ub2e4.        \n\ub530\ub77c\uc11c \ub2e4\uc74c\uc758 \uac12\uc740 \uc774\uc0c1\uce58\ub77c\uace0 \ubd10\ub3c4 \ubb34\ubc29\ud558\ub2e4.","d1ee3b9f":"CREDIT_ACTIVE\ub294 \uc8fc\ub85c CLOSED(\ub300\ucd9c \uc0c1\ud658 \uc644\ub8cc)\uc640 ACTIVE(\ub300\ucd9c \uc0c1\ud658\uc911) \uc0c1\ud0dc\ub85c \ub098\ub258\uba70 \ub300\ucd9c\uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b8\ub2e4                                                       \n**\ub300\ucd9c \uc0c1\ud658 \uc644\ub8cc \uc0c1\ud0dc\uc77c\uc218\ub85d Target=0\uc77c \ud655\ub960\uc774 \ub192\ub2e4.**","b81195bc":"122-16=106 \uc774\ubbc0\ub85c object feature\uc740 \uc0c1\uad00\uad00\uacc4\ub85c \ud45c\ud604\ub418\uc9c0 \uc54a\ub294\ub2e4.","fd90de05":"**\uc2e0\uc6a9 \uc5f0\uc7a5\ud69f\uc218\ub294 \ud3c9\uade0\uc801\uc73c\ub85c 0\ubc88\uc774\ub2e4.**\n\ub2e4\ub9cc \ub180\ub78d\uac8c\ub3c4 \uc5f0\uc7a5\ud69f\uc218\uac00 \ub298\uc5b4\ub0a0\uc218\ub85d target=0\uc77c \ud655\ub960\uc774 \uc62c\ub77c\uac04\ub2e4","d1c8b6c7":"**Binary Feature**","6a2ff18c":"\ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \ub178\ub780\uc0c9 \uadf8\ub798\ud504\uac00 \ub354 \uc801\uc740\uac83\uc744 \ubcf4\uc544 \ub300\ucd9c\uc744 \uac1a\uc744 \ub2a5\ub825\uc774 \ub5a8\uc5b4\uc9c0\uace0 40\ub300 \uc774\uc0c1\ubd80\ud130\ub294 \ub300\ucd9c\uc744 \uac1a\uc744 \ud655\ub960\uc774 \ub354 \ub192\uc544\uc9c4\ub2e4","1cc1c050":"#### **heatmap\uc73c\ub85c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uc790**","214504f5":"\uc5f0\uccb4\ud55c \uac74\uc218\ubcf4\ub2e4 \uc5f0\uccb4 \uc548\ud55c \uac74\uc218\uc758 \uc218\uac00 \ub354 \ub9ce\uc74c \ub530\ub77c\uc11c \uac12\uc774 0\uc77c\ub54c\uc640 \uc544\ub2d0\ub54c\ub85c \ubcc0\uacbd\ud574\uc900\ub2e4","5ad8cec4":"## EDA (\ud0d0\uc0c9\uc801 \ub370\uc774\ud130\ubd84\uc11d)\n\n\ub370\uc774\ud130\uc758 \ucd94\uc138, \uc774\uc0c1, \ud328\ud134 \ub610\ub294 \uad00\uacc4\ub97c \ucc3e\uae30 \uc704\ud55c \uac83\uc73c\ub85c \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \uc774\ub904\uc84c\ub294\uc9c0 \uc0b4\ud3b4\ubcfc \uc218 \uc788\ub2e4.\n\n\" target\uc740 \uc608\uce21\ud574\uc57c \ud558\ub294 \uac12\uc73c\ub85c 0\uc740 \ub300\ucd9c\uae08 \uc0c1\ud658 \uac00\ub2a5, 1\uc740 \ub300\ucd9c\uae08 \uc0c1\ud658 \ubd88\uac00 \""}}