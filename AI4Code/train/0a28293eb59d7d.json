{"cell_type":{"84d47b6a":"code","16d5b57b":"code","7c55b72d":"code","d67985d5":"code","d83476e4":"code","82b25e65":"markdown"},"source":{"84d47b6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16d5b57b":"###################################################\n# Pandas profiling for Cowin data\n# Altair for Visualization\n# ipywidgets for dropdown menu\n##################################################\nfrom pandas_profiling import ProfileReport\nimport altair as alt\nalt.renderers.enable('kaggle')\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nimport ipywidgets as widgets","7c55b72d":"##################################################\n# State-wise vaccine doses data \n##################################################\ndf = pd.read_csv(\"\/kaggle\/input\/covid19indiaorg-vaccinations-india-data\/vaccine_doses_statewise.csv\")\ndf.info()\ndf.head()","d67985d5":"df.columns.name = \"date\"\n\n# Convert the date from dd\/mm\/yyyy format to the format that works with Altair for Visualization\nnew_cols = dict(zip(df.columns[1:], [pd.to_datetime(x,format=\"%d\/%m\/%Y\") for x in df.columns[1:]]))\ndf_formatted = df.rename(columns= new_cols, inplace=False)\ndf_formatted.set_index(\"State\", inplace=True)\ndf_formatted.head()\n\ndef f(state):\n    data = df_formatted.loc[[state]]\n    data = data.T.reset_index()\n    data = pd.melt(data, id_vars=[\"date\"]).rename(columns = {\"date\": \"date\", \"value\": \"Total Individuals Vaccinated\"})\n    chart = alt.Chart(data).mark_area().encode(\n        x=\"date:T\",\n        y=alt.Y(\"Total Individuals Vaccinated:Q\", stack=None),\n        color=\"State:N\",\n        strokeDash='State',\n        tooltip = [alt.Tooltip('State:N'),\n                   alt.Tooltip('date:T'),\n                   alt.Tooltip('Total Individuals Vaccinated:Q')\n                    ]\n            ).interactive()\n    return chart\n\ninteract(f, state=df_formatted.index)","d83476e4":"##################################################\n# Profiling State-wise vaccine doses data: Cowin\n##################################################\ndf_cowin = pd.read_csv(\"\/kaggle\/input\/covid19indiaorg-vaccinations-india-data\/cowin_vaccine_data_statewise.csv\")\ndf_cowin.info()\ndf_cowin.head()\ndf_cowin.profile_report()","82b25e65":"# State-wise Vaccinations in India\n\n#### Python version - https:\/\/github.com\/VidyasagarMSC\/vaccine-visualizer"}}