{"cell_type":{"36105802":"code","9ac0ce11":"code","e1ccbf8b":"code","e35925d2":"code","69a8ec12":"markdown"},"source":{"36105802":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9ac0ce11":"df_train = pd.read_csv('..\/input\/train_2v.csv')\ndf_test  = pd.read_csv('..\/input\/test_2v.csv')\nprint(\"train set : \", df_train.shape)\nprint(\"test set : \", df_test.shape)\ndf_train.head(2)","e1ccbf8b":"print(\"############  gender\")\nprint(df_train.groupby('gender').size())\n\nprint(\"############  hypertension\")\nprint(df_train.groupby('hypertension').size())\n\nprint(\"############  heart_disease\")\nprint(df_train.groupby('heart_disease').size())\n\nprint(\"############  ever_married\")\nprint(df_train.groupby('ever_married').size())\n\nprint(\"############  work_type\")\nprint(df_train.groupby('work_type').size())\n\nprint(\"############  work_type\")\nprint(df_train.groupby('Residence_type').size())\n\nprint(\"############  smoking\")\nprint(df_train.groupby('smoking_status').size())\n\nprint(\"############  stroke\")\nprint(df_train.groupby('stroke').size())","e35925d2":"import matplotlib.pyplot as plt\n########## there are missing gender \n\nprint(\"############  age\")\nprint(df_train.age.describe())\nplt.hist(df_train.age, bins = 20)\nplt.show()\n########  some patients are too young ... ? Maybe two models, one for adult and one for child\n\nprint(\"############ glucose\")\nprint(df_train.avg_glucose_level.describe())\nplt.hist(df_train.avg_glucose_level, bins = 20)\nplt.show()\n########  < 55 is really low, > 200 is weired, maybe not fasting ?\n\nprint(\"############ bmi\")\nprint(df_train.bmi.describe())  \nplt.hist(df_train.bmi, bins = 20)\nplt.show()\n#######  < 10 or > 50 is almost impossible .... should replace\/filter those wrong data & there are missings ","69a8ec12":"**1.Read in the training & testing sets, check the missing, outliers, and distributions**"}}