{"cell_type":{"104729d9":"code","3d2f349f":"code","1ddde781":"code","cbfda8dd":"code","84c9eec3":"code","26eaac1a":"code","3bd74a30":"code","34888c6b":"code","2be4f5c0":"code","a2106a77":"code","32aac6d1":"code","d283f772":"code","df63de52":"code","25f2978f":"code","7b887477":"code","afdfac11":"code","b7ca507d":"code","d8042ae9":"code","7042023c":"code","0c103c82":"code","d5efc9d4":"code","a721896a":"code","42374401":"code","1433e997":"markdown","b00c06b3":"markdown"},"source":{"104729d9":"import pandas as pd\nimport numpy as np\nfrom tensorflow import keras \nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.models import Sequential","3d2f349f":"from tensorflow.keras.datasets import mnist","1ddde781":"(x, y), (x_test, y_test) = mnist.load_data()","cbfda8dd":"print(\"Shape of training data is   \",x.shape)\nprint(\"Shape of testing data is    \",x_test.shape)\nprint(\"shape of training labels is \",y.shape)\nprint(\"shape of testing labels is  \", y_test.shape)","84c9eec3":"x= x.reshape(x.shape[0],28,28,1)     # Normalizing the data","26eaac1a":"x = x\/255.0","3bd74a30":"#train test split\nfrom sklearn.model_selection import train_test_split\n","34888c6b":"x_train,x_val,y_train,y_val = train_test_split(x,y,test_size=0.2,random_state=123)","2be4f5c0":"x_train.shape","a2106a77":"x_val.shape","32aac6d1":"from tensorflow.keras.layers import Dense,Conv2D,Flatten\nimport tensorflow.keras.backend as K\nK.clear_session()\n\n\nmodel=Sequential()\nmodel.add(Conv2D(256,3,activation='relu',input_shape=(x.shape[1:])))\nmodel.add(Conv2D(128,3,activation='relu'))\nmodel.add(Conv2D(64,3,activation='relu'))\nmodel.add(Conv2D(64,5,activation='relu'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(512,activation='relu'))\nmodel.add(Dense(256,activation='relu'))\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dense(10,activation='softmax'))","d283f772":"model.summary()","df63de52":"#compile model \nmodel.compile(optimizer=\"adam\",loss=\"sparse_categorical_crossentropy\",metrics=\"accuracy\")","25f2978f":"# Callbacks\nes = keras.callbacks.EarlyStopping(monitor = \"val_accuracy\",mode=\"max\",verbose=1,patience=10,min_delta=0.001)","7b887477":"mc = keras.callbacks.ModelCheckpoint('best_model.hdf5',monitor=\"val_accuracy\",mode=\"max\",verbose=1,save_best_only=True)","afdfac11":"history = model.fit(x_train,y_train,batch_size=32,epochs=100,validation_data = (x_val,y_val),callbacks=[es,mc])","b7ca507d":"import matplotlib.pyplot as plt\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title(\"Epoch vs Loss\")\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'val'], loc='upper left')\nplt.show()","d8042ae9":"model.load_weights(\"best_model.hdf5\") # Loading saved model","7042023c":"train_loss,train_accuracy=model.evaluate(x_train,y_train)","0c103c82":"val_loss,val_accuracy=model.evaluate(x_val,y_val)","d5efc9d4":"x_test=x_test\/255.0","a721896a":"x_test= x_test.reshape(x_test.shape[0],28,28,1)","42374401":"test_loss,test_accuracy=model.evaluate(x_test,y_test)","1433e997":"## Model Inference","b00c06b3":"## Model Evaluation"}}