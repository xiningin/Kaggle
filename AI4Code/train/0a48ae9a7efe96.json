{"cell_type":{"0f586f18":"code","5f5066a2":"code","f020469c":"code","7d8813f3":"code","9db91932":"code","a8c2e59f":"code","31a1e319":"code","e99825e7":"code","80e6db00":"code","7603d2a2":"code","6c7bffcc":"code","7c16f77f":"code","238ffc60":"code","3ed42ba9":"code","362a8ac5":"code","7dd4fd94":"code","854b8add":"code","4ab3a0ec":"code","c51e864a":"code","65ba4764":"code","4cc96a17":"code","394b65f7":"code","cbe2a6b4":"code","83fa63c8":"code","ea00f1cb":"code","72200e36":"code","b7c35112":"code","e0be64e4":"code","df038f2a":"code","3db322a1":"code","4ea0dfb0":"code","753785d9":"code","9e89d794":"code","a39e4ac1":"code","c026d9e9":"code","9df9cbc7":"code","6c9410ca":"code","4cfa40dd":"code","72cea23c":"code","4bd42cf2":"code","a205303a":"code","b9f8c22f":"code","db91da72":"code","0ed6f362":"code","40e3aa7b":"code","33fa2f4e":"markdown","5bb3c9de":"markdown","ab83dd6a":"markdown","237c6ed8":"markdown","dd6b1037":"markdown","db525af6":"markdown","f483c4ab":"markdown","936450ad":"markdown","e9552221":"markdown","6cc208d0":"markdown","c7be339f":"markdown","b5d88a7f":"markdown","e01e2595":"markdown","f659a4de":"markdown","2f84aa97":"markdown","36329e1b":"markdown","78dce375":"markdown","9253aadd":"markdown","25ea7632":"markdown","5ee66abf":"markdown","f499d0af":"markdown","44065110":"markdown","3ade5c9e":"markdown","958ab7d7":"markdown","01159a25":"markdown","f557b410":"markdown","8519edcf":"markdown","a10227dc":"markdown","c3cb3612":"markdown","40908f15":"markdown","e0ec06bd":"markdown","f0619762":"markdown","0ecb2e7b":"markdown","5b7983df":"markdown","d60c3e04":"markdown","954cd0f5":"markdown","e6fda640":"markdown","412f487a":"markdown","bddcaa23":"markdown","af3cc4b6":"markdown"},"source":{"0f586f18":"import os\nimport numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\n\n# \uc624\ub958 \ubb34\uc2dc\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# \uc2dc\uac01\ud654\ub97c \uc704\ud55c \ud328\ud0a4\uc9c0\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5f5066a2":"# print(os.listdir(\"..\/input\/\"))\n\n# \ud30c\uc77c\uba85 \ud655\uc778\nprint(os.listdir(\"..\/input\/home-credit-default-risk\/\"))","f020469c":"# Training data \ud655\uc778\napp_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\nprint('Training data shape: ', app_train.shape)\napp_train.head()","7d8813f3":"# Testing data \ud655\uc778\napp_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')\nprint('Testing data shape: ', app_test.shape)\napp_test.head()","9db91932":"app_train['TARGET'].value_counts()","a8c2e59f":"app_train['TARGET'].astype(int).plot.hist();","31a1e319":"def missing_values_table(df):\n        # \ucd1d \uacb0\uce21\uac12\n        mis_val = df.isnull().sum()\n        \n        # \uacb0\uce21\uac12\uc758 \ube44\uc728\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # \uacb0\uacfc\ub97c \ud14c\uc774\ube14\uc5d0 \uc800\uc7a5\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # \uc5f4\uc758 \uc774\ub984 \uc218\uc815\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # \uacb0\uce21\uac12 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # \uc694\uc57d\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # return\n        return mis_val_table_ren_columns","e99825e7":"# \uacb0\uce21\uac12 \ud1b5\uacc4\nmissing_values = missing_values_table(app_train)\nmissing_values.head(20)","80e6db00":"# \uac01 \uc5f4\uc758 \ud0c0\uc785 \uac1c\uc218\napp_train.dtypes.value_counts()","7603d2a2":"# Number of unique classes in each object column\n# object \uc5f4(\ubc94\uc8fc\ud615 \ubcc0\uc218)\uc758 \uace0\uc720 \ud56d\ubaa9 \uc218 \ud30c\uc545\napp_train.select_dtypes('object').apply(pd.Series.nunique, axis = 0)","6c7bffcc":"# Create a label encoder object\nle = LabelEncoder()\nle_count = 0\n\n# Iterate through the columns\nfor col in app_train:\n    if app_train[col].dtype == 'object':\n        # If 2 or fewer unique categories\n        if len(list(app_train[col].unique())) <= 2:\n            # Train on the training data\n            le.fit(app_train[col])\n            # Transform both training and testing data\n            app_train[col] = le.transform(app_train[col])\n            app_test[col] = le.transform(app_test[col])\n            \n            # Keep track of how many columns were label encoded\n            le_count += 1\n            \nprint('%d columns were label encoded.' % le_count)","7c16f77f":"# one-hot encoding of categorical variables\napp_train = pd.get_dummies(app_train)\napp_test = pd.get_dummies(app_test)\n\nprint('Training Features shape: ', app_train.shape)\nprint('Testing Features shape: ', app_test.shape)","238ffc60":"# TARGET \uc744 \ubcf4\uc874\ud558\uae30 \uc704\ud574 \ucd94\ucd9c\ntrain_labels = app_train['TARGET']\n\n# \ub370\uc774\ud130 \ud504\ub808\uc784\uc73c\ub85c Train, Test \ub370\uc774\ud130 \uc815\ub82c ( \uc5f4\uc758 \uac1c\uc218 \ub9de\ucda4 )\napp_train, app_test = app_train.align(app_test, join = 'inner', axis = 1)\n\n# TARGET \ucd94\uac00\napp_train['TARGET'] = train_labels\n\nprint('Training Features shape: ', app_train.shape)\nprint('Testing Features shape: ', app_test.shape)","3ed42ba9":"# \ub098\uc774 \ud2b9\uc774\uce58\n(app_train['DAYS_BIRTH'] \/ -365).describe()","362a8ac5":"app_train['DAYS_EMPLOYED'].describe()","7dd4fd94":"app_train['DAYS_EMPLOYED'].plot.hist(title = 'Days Employment Histogram');\nplt.xlabel('Days Employment');","854b8add":"anom = app_train[app_train['DAYS_EMPLOYED'] == 365243]\nnon_anom = app_train[app_train['DAYS_EMPLOYED'] != 365243]\nprint('The non-anomalies default on %0.2f%% of loans' % (100 * non_anom['TARGET'].mean()))\nprint('The anomalies default on %0.2f%% of loans' % (100 * anom['TARGET'].mean()))\nprint('There are %d anomalous days of employment' % len(anom))","4ab3a0ec":"# Create an anomalous flag column\napp_train['DAYS_EMPLOYED_ANOM'] = app_train[\"DAYS_EMPLOYED\"] == 365243\n\n# Replace the anomalous values with nan\napp_train['DAYS_EMPLOYED'].replace({365243: np.nan}, inplace = True)\n\napp_train['DAYS_EMPLOYED'].plot.hist(title = 'Days Employment Histogram');\nplt.xlabel('Days Employment');","c51e864a":"app_test['DAYS_EMPLOYED_ANOM'] = app_test[\"DAYS_EMPLOYED\"] == 365243\napp_test[\"DAYS_EMPLOYED\"].replace({365243: np.nan}, inplace = True)\n\nprint('There are %d anomalies in the test data out of %d entries' % (app_test[\"DAYS_EMPLOYED_ANOM\"].sum(), len(app_test)))","65ba4764":"# Find correlations with the target and sort\ncorrelations = app_train.corr()['TARGET'].sort_values()\n\n# Display correlations\nprint('Most Positive Correlations:\\n', correlations.tail(15))\nprint('\\nMost Negative Correlations:\\n', correlations.head(15))","4cc96a17":"# Find the correlation of the positive days since birth and target\napp_train['DAYS_BIRTH'] = abs(app_train['DAYS_BIRTH'])\napp_train['DAYS_BIRTH'].corr(app_train['TARGET'])","394b65f7":"# Set the style of plots\nplt.style.use('fivethirtyeight')\n\n# Plot the distribution of ages in years\nplt.hist(app_train['DAYS_BIRTH'] \/ 365, edgecolor = 'k', bins = 25)\nplt.title('Age of Client'); plt.xlabel('Age (years)'); plt.ylabel('Count');","cbe2a6b4":"plt.figure(figsize = (10, 8))\n\n# \uc815\uc2dc \uc0c1\ud658\ub41c \ub300\ucd9c\uc758 \ub098\uc774 \ubd84\ud3ec\nsns.kdeplot(app_train.loc[app_train['TARGET'] == 0, 'DAYS_BIRTH'] \/ 365, label = 'target == 0')\n\n# \uc815\uc2dc \uc0c1\ud658\ub418\uc9c0 \uc54a\uc740 \ub300\ucd9c\uc758 \ub098\uc774 \ubd84\ud3ec\nsns.kdeplot(app_train.loc[app_train['TARGET'] == 1, 'DAYS_BIRTH'] \/ 365, label = 'target == 1')\n\n# Labeling of plot\nplt.xlabel('Age (years)'); plt.ylabel('Density'); plt.title('Distribution of Ages');","83fa63c8":"# Age information into a separate dataframe\nage_data = app_train[['TARGET', 'DAYS_BIRTH']]\nage_data['YEARS_BIRTH'] = age_data['DAYS_BIRTH'] \/ 365\n\n# Bin the age data\nage_data['YEARS_BINNED'] = pd.cut(age_data['YEARS_BIRTH'], bins = np.linspace(20, 70, num = 11))\nage_data.head(10)","ea00f1cb":"# Group by the bin and calculate averages\nage_groups  = age_data.groupby('YEARS_BINNED').mean()\nage_groups","72200e36":"plt.figure(figsize = (8, 8))\n\n# Graph the age bins and the average of the target as a bar plot\nplt.bar(age_groups.index.astype(str), 100 * age_groups['TARGET'])\n\n# Plot labeling\nplt.xticks(rotation = 75); plt.xlabel('Age Group (years)'); plt.ylabel('Failure to Repay (%)')\nplt.title('Failure to Repay by Age Group');","b7c35112":"# Extract the EXT_SOURCE variables and show correlations\next_data = app_train[['TARGET', 'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH']]\next_data_corrs = ext_data.corr()\next_data_corrs","e0be64e4":"plt.figure(figsize = (8, 6))\n\n# Heatmap of correlations\nsns.heatmap(ext_data_corrs, cmap = plt.cm.RdYlBu_r, vmin = -0.25, annot = True, vmax = 0.6)\nplt.title('Correlation Heatmap');","df038f2a":"plt.figure(figsize = (10, 12))\n\n# iterate through the sources\nfor i, source in enumerate(['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']):\n    \n    # create a new subplot for each source\n    plt.subplot(3, 1, i + 1)\n    # plot repaid loans\n    sns.kdeplot(app_train.loc[app_train['TARGET'] == 0, source], label = 'target == 0')\n    # plot loans that were not repaid\n    sns.kdeplot(app_train.loc[app_train['TARGET'] == 1, source], label = 'target == 1')\n    \n    # Label the plots\n    plt.title('Distribution of %s by Target Value' % source)\n    plt.xlabel('%s' % source); plt.ylabel('Density');\n    \nplt.tight_layout(h_pad = 2.5)","3db322a1":"# Copy the data for plotting\nplot_data = ext_data.drop(columns = ['DAYS_BIRTH']).copy()\n\n# Add in the age of the client in years\nplot_data['YEARS_BIRTH'] = age_data['YEARS_BIRTH']\n\n# Drop na values and limit to first 100000 rows\nplot_data = plot_data.dropna().loc[:100000, :]\n\n# Function to calculate correlation coefficient between two columns\ndef corr_func(x, y, **kwargs):\n    r = np.corrcoef(x, y)[0][1]\n    ax = plt.gca()\n    ax.annotate(\"r = {:.2f}\".format(r),\n                xy=(.2, .8), xycoords=ax.transAxes,\n                size = 20)\n\n# Create the pairgrid object\ngrid = sns.PairGrid(data = plot_data, size = 3, diag_sharey=False,\n                    hue = 'TARGET', \n                    vars = [x for x in list(plot_data.columns) if x != 'TARGET'])\n\n# Upper is a scatter plot\ngrid.map_upper(plt.scatter, alpha = 0.2)\n\n# Diagonal is a histogram\ngrid.map_diag(sns.kdeplot)\n\n# Bottom is density plot\ngrid.map_lower(sns.kdeplot, cmap = plt.cm.OrRd_r);\n\nplt.suptitle('Ext Source and Age Features Pairs Plot', size = 32, y = 1.05);","4ea0dfb0":"# \uad50\ud638 \uc791\uc6a9 \ubcc0\uc218\ub4e4\uc744 \ub9cc\ub4e4\uae30 \uc704\ud574 \uc544\ub798\uc758 \ubcc0\uc218\ub4e4\uc744 \ubd88\ub7ec\uc624\uc790\n# \uacb0\uce21\uac12 \ucc44\uc6b0\uae30\n\n# Make a new dataframe for polynomial features\npoly_features = app_train[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH', 'TARGET']]\npoly_features_test = app_test[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH']]\n\n# imputer for handling missing values\nfrom sklearn.preprocessing import Imputer\nimputer = Imputer(strategy = 'median')\n\npoly_target = poly_features['TARGET']\n\npoly_features = poly_features.drop(columns = ['TARGET'])\n\n# Need to impute missing values\npoly_features = imputer.fit_transform(poly_features)\npoly_features_test = imputer.transform(poly_features_test)\n\nfrom sklearn.preprocessing import PolynomialFeatures\n                                  \n# Create the polynomial object with specified degree\npoly_transformer = PolynomialFeatures(degree = 3) # \uc5ec\uae30\uc11c degree \ub294 \ub2e4\ud56d\uc2dd\uc744 \uc758\ubbf8","753785d9":"# Train the polynomial features\npoly_transformer.fit(poly_features)\n\n# Transform the features\npoly_features = poly_transformer.transform(poly_features)\npoly_features_test = poly_transformer.transform(poly_features_test)\nprint('Polynomial Features shape: ', poly_features.shape)","9e89d794":"poly_transformer.get_feature_names(input_features = ['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH'])[:15]","a39e4ac1":"# Create a dataframe of the features \npoly_features = pd.DataFrame(poly_features, \n                             columns = poly_transformer.get_feature_names(['EXT_SOURCE_1', 'EXT_SOURCE_2', \n                                                                           'EXT_SOURCE_3', 'DAYS_BIRTH']))\n\n# Add in the target\npoly_features['TARGET'] = poly_target\n\n# Find the correlations with the target\npoly_corrs = poly_features.corr()['TARGET'].sort_values()\n\n# Display most negative and most positive\nprint(poly_corrs.head(10))\nprint(poly_corrs.tail(5))","c026d9e9":"# Put test features into dataframe\npoly_features_test = pd.DataFrame(poly_features_test, \n                                  columns = poly_transformer.get_feature_names(['EXT_SOURCE_1', 'EXT_SOURCE_2', \n                                                                                'EXT_SOURCE_3', 'DAYS_BIRTH']))\n\n# Merge polynomial features into training dataframe\npoly_features['SK_ID_CURR'] = app_train['SK_ID_CURR']\napp_train_poly = app_train.merge(poly_features, on = 'SK_ID_CURR', how = 'left')\n\n# Merge polnomial features into testing dataframe\npoly_features_test['SK_ID_CURR'] = app_test['SK_ID_CURR']\napp_test_poly = app_test.merge(poly_features_test, on = 'SK_ID_CURR', how = 'left')\n\n# Align the dataframes\napp_train_poly, app_test_poly = app_train_poly.align(app_test_poly, join = 'inner', axis = 1)\n\n# Print out the new shapes\nprint('Training data with polynomial features shape: ', app_train_poly.shape)\nprint('Testing data with polynomial features shape:  ', app_test_poly.shape)","9df9cbc7":"app_train_domain = app_train.copy()\napp_test_domain = app_test.copy()\n\napp_train_domain['CREDIT_INCOME_PERCENT'] = app_train_domain['AMT_CREDIT'] \/ app_train_domain['AMT_INCOME_TOTAL']\napp_train_domain['ANNUITY_INCOME_PERCENT'] = app_train_domain['AMT_ANNUITY'] \/ app_train_domain['AMT_INCOME_TOTAL']\napp_train_domain['CREDIT_TERM'] = app_train_domain['AMT_ANNUITY'] \/ app_train_domain['AMT_CREDIT']\napp_train_domain['DAYS_EMPLOYED_PERCENT'] = app_train_domain['DAYS_EMPLOYED'] \/ app_train_domain['DAYS_BIRTH']","6c9410ca":"app_test_domain['CREDIT_INCOME_PERCENT'] = app_test_domain['AMT_CREDIT'] \/ app_test_domain['AMT_INCOME_TOTAL']\napp_test_domain['ANNUITY_INCOME_PERCENT'] = app_test_domain['AMT_ANNUITY'] \/ app_test_domain['AMT_INCOME_TOTAL']\napp_test_domain['CREDIT_TERM'] = app_test_domain['AMT_ANNUITY'] \/ app_test_domain['AMT_CREDIT']\napp_test_domain['DAYS_EMPLOYED_PERCENT'] = app_test_domain['DAYS_EMPLOYED'] \/ app_test_domain['DAYS_BIRTH']","4cfa40dd":"plt.figure(figsize = (12, 20))\n# iterate through the new features\nfor i, feature in enumerate(['CREDIT_INCOME_PERCENT', 'ANNUITY_INCOME_PERCENT', 'CREDIT_TERM', 'DAYS_EMPLOYED_PERCENT']):\n    \n    # create a new subplot for each source\n    plt.subplot(4, 1, i + 1)\n    # plot repaid loans\n    sns.kdeplot(app_train_domain.loc[app_train_domain['TARGET'] == 0, feature], label = 'target == 0')\n    # plot loans that were not repaid\n    sns.kdeplot(app_train_domain.loc[app_train_domain['TARGET'] == 1, feature], label = 'target == 1')\n    \n    # Label the plots\n    plt.title('Distribution of %s by Target Value' % feature)\n    plt.xlabel('%s' % feature); plt.ylabel('Density');\n    \nplt.tight_layout(h_pad = 2.5)","72cea23c":"from sklearn.preprocessing import MinMaxScaler, Imputer\n\n# Drop the target from the training data\nif 'TARGET' in app_train:\n    train = app_train.drop(columns = ['TARGET'])\nelse:\n    train = app_train.copy()\n    \n# Feature names\nfeatures = list(train.columns)\n\n# Copy of the testing data\ntest = app_test.copy()\n\n# \uacb0\uce21\uac12\uc758 \uc911\uc559\uac12\uc73c\ub85c \ucc44\uc6b0\uae30\nimputer = Imputer(strategy = 'median')\n\n# \uc2a4\ucf00\uc77c\uc744 0~1\ub85c \uc9c0\uc815\nscaler = MinMaxScaler(feature_range = (0, 1))\n\n# Fit on the training data\nimputer.fit(train)\n\n# Transform both training and testing data\ntrain = imputer.transform(train)\ntest = imputer.transform(app_test)\n\n# Repeat with the scaler\nscaler.fit(train)\ntrain = scaler.transform(train)\ntest = scaler.transform(test)\n\nprint('Training data shape: ', train.shape)\nprint('Testing data shape: ', test.shape)","4bd42cf2":"from sklearn.ensemble import RandomForestClassifier\n\n# Make the random forest classifier\nrandom_forest = RandomForestClassifier(n_estimators = 100, random_state = 50, verbose = 1, n_jobs = -1)","a205303a":"# Train on the training data\nrandom_forest.fit(train, train_labels)\n\n# Extract feature importances\nfeature_importance_values = random_forest.feature_importances_\nfeature_importances = pd.DataFrame({'feature': features, 'importance': feature_importance_values})\n\n# Make predictions on the test data\npredictions = random_forest.predict_proba(test)[:, 1]","b9f8c22f":"random_forest.score(train, train_labels)","db91da72":"# Make a submission dataframe\nsubmit = app_test[['SK_ID_CURR']]\nsubmit['TARGET'] = predictions\n\n# Save the submission dataframe\nsubmit.to_csv('random_forest_baseline.csv', index = False)","0ed6f362":"a = feature_importances.sort_values('importance'\n                                   , ascending=False).reset_index().head()","40e3aa7b":"plt.figure(figsize=(10, 6))\nsns.barplot(a['importance'], a['feature'])\nsns.despine(left=True, bottom=True)","33fa2f4e":"\uc774\uc0c1 \uace0\uac1d\uc758 \ub300\ucd9c \uc0c1\ud658\ub960\uc774 \uc77c\ubc18\uc801\uc778 \uace0\uac1d\ubcf4\ub2e4 \ub0ae\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4!","5bb3c9de":"## \uc0c1\uad00\uad00\uacc4\n\n\ubc94\uc8fc\ud615 \ubcc0\uc218\uc640 \uc774\uc0c1\uce58\ub97c \ub2e4\ub8e8\uc5c8\uc73c\ub2c8 EDA\ub97c \uacc4\uc18d\ud574\ubcf4\uc790.\n\ub370\uc774\ud130\ub97c \uc774\ud574\ud558\uae30 \uc704\ud574\uc11c\ub294 feature \uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud30c\uc545\ud558\ub294 \uac83\uc774\ub2e4.\n\n\uc0c1\uad00\uacc4\uc218\uc758 \uc808\ub300\uac12\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \ud574\uc11d\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4.\n\n - .00-.19 \u201c\ub9e4\uc6b0 \uc57d\ud55c \uc0c1\uad00\uad00\uacc4\u201d\n - .20-.39 \u201c\uc57d\ud55c \uc0c1\uad00\uad00\uacc4\u201d\n - .40-.59 \u201c\uc911\uac04 \uc0c1\uad00\uad00\uacc4\u201d\n - .60-.79 \u201c\uac15\ud55c \uc0c1\uad00\uad00\uacc4\u201d\n - .80-1.0 \u201c\ub9e4\uc6b0 \uac15\ud55c \uc0c1\uad00\uad00\uacc4\u201d","ab83dd6a":"### \uac01 \uc5f4\uc758 \ud0c0\uc785 \ud30c\uc545","237c6ed8":"# 2. \ubb38\uc81c \uc815\uc758, \ub370\uc774\ud130 \uc815\uc758\n## 2-1. \ubb38\uc81c \uc815\uc758\n\uc5ec\uae30\uc11c \ud504\ub85c\uc81d\ud2b8\uc758 \ubaa9\ud45c\ub294 \uc774\ubbf8 \uc81c\uc2dc\ub418\uc5c8\ub2e4.\n\n> <span style=\"color:red\">\" \uac01 \uc2e0\uccad\uc790\uac00 \ub300\ucd9c\uc744 \uc0c1\ud658 \ud560 \uc218\uc788\ub294 \ub2a5\ub825\uc744 \uc608\uce21\ud558\uc2dc\uc624.\"<\/span>\n\n\uc544\ub798\ub294 Home Credit \ud504\ub85c\uc81d\ud2b8\uc758 \uc694\uc57d\ubcf8\uc774\ub2e4.\n\n> 1997\ub144 \uccb4\ucf54\uc5d0\uc11c \uc124\ub9bd\ub41c \ube44\uc740\ud589 \uae08\uc735 \uae30\uad00\uc785\ub2c8\ub2e4.<br> \n\uc2e0\uc6a9\uae30\ub85d\uc774 \uc801\uac70\ub098 \uc804\ud600 \uc5c6\ub294 \uc0ac\ub78c\ub4e4\uc744 \ub300\uc0c1\uc73c\ub85c \ub300\ucd9c\uc5d0 \uc911\uc810\uc744 \ub450\uace0 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\ubcf8 \uc0ac\uc758 Home Credit \uc740 \uae0d\uc815\uc801\uc774\uace0 \uc548\uc804\ud55c \ub300\ucd9c \uacbd\ud5d8\uc744 \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \uace0\uac1d\uc744 \ud655\ubcf4\ud558\ub824 \ub178\ub825\ud569\ub2c8\ub2e4.<br>\n\uc774\ub7ec\ud55c \uc778\uad6c\ub4e4\uc774 \uae0d\uc815\uc801\uc778 \ub300\ucd9c \uacbd\ud5d8\uc744 \uac16\ub3c4\ub85d \ud558\uae30 \uc704\ud574 Home Credit\uc740 \uace0\uac1d\uc758 \uc0c1\ud658 \ub2a5\ub825\uc744 \uc608\uce21\ud558\uae30 \uc704\ud574 <br>\n\uc804\ud654 \ubc0f \uac70\ub798 \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c \ub2e4\uc591\ud55c \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc0c1\ud658 \uac00\ub2a5\ud55c \uace0\uac1d\uc774 \uac70\ubd80\ub418\uc9c0 \uc54a\uace0 <br>\n\ub300\ucd9c\uc5d0 \uc131\uacf5\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \ubaa9\ud45c\uc785\ub2c8\ub2e4. Home Credit\uc740 \ud604\uc7ac \uc774\ub7ec\ud55c \ud1b5\uacc4\ub97c \uc608\uce21\ud558\uae30 \uc704\ud574 <br>\n\ub2e4\uc591\ud55c \ud1b5\uacc4 \ubc0f \uba38\uc2e0 \ub7ec\ub2dd \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc9c0\ub9cc, Kagglers\ub4e4\uc758 \ubc29\ubc95\uc744 \ubcf4\uae30 \uc704\ud574 \uc774 \ucc4c\ub9b0\uc9c0\ub97c \uc81c\uc548\ud569\ub2c8\ub2e4.","dd6b1037":"## Pairs Plot\n\n\ucd5c\uc885 \ud0d0\uc0c9\uc801 \uadf8\ub798\ud504\ub85c\uc11c, EXT_SOURCE \ubcc0\uc218\uc640 DatS_BIRTH \ubcc0\uc218\uc758 \uadf8\ub798\ud504\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4.","db525af6":"\ub2e4\uc74c\uc73c\ub85c \ubcc0\uce59\uc801\uc778 \uace0\uac1d\ub4e4\uc774 \uc77c\ubc18\uc801\uc778 \uace0\uac1d\uc5d0 \ube44\ud574 <br>\n\ub300\ucd9c \uc0c1\ud658\ub960\uc758 \uacbd\ud5a5\uc774 \uc5b4\ub5a4\uc9c0 \ud30c\uc545\ud574\ubcf4\uc790.","f483c4ab":"\uc774\uc81c \uacb0\uacfc\ub97c \uc81c\ucd9c\ud558\uc790","936450ad":"## 2-2. \ub370\uc774\ud130 \uc815\uc758\n\n\ub370\uc774\ud130\ub294 Home Credit \uc5d0 \uc758\ud574\uc11c \uc81c\uacf5\ub418\uba70, \ucd1d 7\uac00\uc9c0\ub85c \uad6c\uc131\ub41c\ub2e4.\n\n - application_train\/application_test <br>\n Home Credit\uc758 \uac01 \ub300\ucd9c \uc2e0\uccad\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uac00\uc9c4 \ub370\uc774\ud130\n \ubaa8\ub4e0 \ub300\ucd9c\ub0b4\uc5ed\uc740 \uac01 \ud589\uc744 \uac00\uc9c0\uba70, SK_ID_CURR feature\ub85c \ud310\ub2e8\ud558\uba70, \uadf8 \uae30\uc900\uc740\n 0 : \ub300\ucd9c\uc0c1\ud658 \ub418\uc5c8\uc74c, 1 : \ub300\ucd9c\uc0c1\ud658 \ub418\uc9c0 \uc54a\uc558\uc74c \uc73c\ub85c \ub098\ub25c\ub2e4.\n - bureau <br>\n \ub2e4\ub978 \uae08\uc735 \uae30\uad00\uc73c\ub85c\ubd80\ud130\uc758 \uace0\uac1d\uc758 \uc774\uc804 \ub300\ucd9c \ub0b4\uc5ed\n - bureau_balance <br>\n bureau\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \ub370\uc774\ud130\n - previous_application <br>\n Home Credit \uc73c\ub85c\ubd80\ud130\uc758 \uace0\uac1d\uc758 \uc774\uc804 \ub300\ucd9c \ub0b4\uc5ed\n SK_ID_PREV feature \ub85c \ud310\ub2e8\ud55c\ub2e4.\n - POS_CASH_balance <br>\n application data \uc5d0 \ub300\ucd9c\uc774 \uc788\ub294 \uace0\uac1d\uc758 \uc774\uc804 \ub300\ucd9c \uc2e0\uccad \ub0b4\uc5ed\n - credit_card_balance <br>\n Home Credit \uc744 \uc0ac\uc6a9\ud558\ub294 \uace0\uac1d\uc758 \uc2e0\uc6a9 \uce74\ub4dc \ub0b4\uc5ed, \uc6d4\ubcc4 \ub370\uc774\ud130\n - installments_payment <br>\n Home Credit \uc744 \uc0ac\uc6a9\ud588\ub358 \uace0\uac1d\uc758 \ub300\ucd9c \uc0c1\ud658 \ub0b4\uc5ed\n \n \uc544\ub798\uc758 \ud45c\ub294 \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \uc5f0\uad00\ub418\uc5b4\uc788\ub294\uc9c0 \ubcf4\uc5ec\uc900\ub2e4.\n\n![home_credit](https:\/\/user-images.githubusercontent.com\/53182751\/69926570-4f1d8100-14f8-11ea-8111-1f6dfc90f867.png)\n\n\uc774\ub97c \ubc94\uc8fc\ub85c \ub098\ud0c0\ub0b4\uba74 6\uac00\uc9c0\ub85c \ub098\ub204\uc5b4 \ubcfc \uc218 \uc788\ub2e4.\n1. \uc778\uad6c\ud1b5\uacc4\uc801 \ud2b9\uc131\n2. \uc9c1\uc5c5 \ubc0f \uc18c\ub4dd \uad00\ub828 \ud2b9\uc131\n3. \uae30\ubcf8 \uc790\uc0b0 \ud604\ud669\n4. \uac70\uc8fc\uc9c0 \uad00\ub828 \ud2b9\uc131\n5. \uc678\ubd80 \uc2e0\uc6a9\ud3c9\uac00 \uc790\ub8cc\n6. \uc2e0\uccad\ud55c \ub300\ucd9c\uc758 \ud2b9\uc131\n\n\uc6b0\ub9ac\ub294 \uc774 \uacbd\uc7c1\uc5d0\uc11c \uc21c\uc704\ub97c \ub192\uc774\uae30 \uc704\ud55c \uac83\uc774 \uc544\ub2cc \uc785\ubb38\uc790\ub85c\uc11c\n\ucd5c\ub300\ud55c \ud558\ub098\uc529 \uc774\ud574\ud558\ub294 \uac83\uc774 \ubaa9\ud45c\uc774\ubbc0\ub85c, \ubcf8 \ub178\ud2b8\uc5d0\uc11c\ub294 \napplication_train application_test \ub9cc \uc0ac\uc6a9\ud560 \uac83\uc774\ub2e4.","e9552221":"Training data \ub294 307,511 \uac1c\uc758 \ud589\uacfc 122\uac1c\uc758 \uc5f4(feature)\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4.","6cc208d0":"### \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc778\ucf54\ub529\n\n\ub354 \ub098\uc544\uac00\uae30 \uc804\uc5d0, \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc744 \ub2e4\ub8f0 \ud544\uc694\uac00 \uc788\ub2e4.\n\uba38\uc2e0\ub7ec\ub2dd\uc758 \ub300\ubd80\ubd84 \ubaa8\ub378\ub4e4\uc740 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \ub2e4\ub8f0 \uc218 \uc5c6\ub2e4. (LightGBM \ub4f1\uc744 \uc81c\uc678)\n\ub530\ub77c\uc11c \uc774\ub7ec\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc744 \uc22b\uc790\ub85c \uc778\ucf54\ub529 \ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \ucc3e\uc544\uc57c \ud55c\ub2e4.\n\uc778\ucf54\ub529 \ud558\ub294 \ubc29\ubc95\uc740 2\uac00\uc9c0\uac00 \uc788\ub2e4.\n\n - Label encoding <br>\n ![label_encoding](https:\/\/user-images.githubusercontent.com\/53182751\/69928041-ba1d8680-14fd-11ea-91c6-c502b8638dc1.png)\n\n - one-hot encoding <br>\n ![one_hot_encoding](https:\/\/user-images.githubusercontent.com\/53182751\/69928068-d4576480-14fd-11ea-8ba6-ff8e93312f6e.png)\n \n \uc77c\ubc18\uc801\uc73c\ub85c \ubc94\uc8fc\ud615 \ubcc0\uc218(\ub0a8\uc131\/\uc5ec\uc131 \ub4f1)\uac00 2\uac1c\uc758 \uace0\uc720 \uac12\ub9cc \uac00\uc9c0\uace0 \uc788\ub2e4\uba74\n Lable encoding \uc740 \uad1c\ucc2e\uc9c0\ub9cc, 2\uac1c \uc774\uc0c1\uc758 \uace0\uc720 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4\uba74\n One-hot encoding \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uad1c\ucc2e\uc73c\ubbc0\ub85c \ubcf8 \ub178\ud2b8\uc5d0\uc11c\ub294\n 2\uac1c\uc758 \ubcc0\uc218\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub294 Label encoding\n 2\uac1c \uc774\uc0ac\uc73c\uc774 \ubcc0\uc218\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub294 one-hot encoding \uc744 \uc9c4\ud589\ud55c\ub2e4.\n","c7be339f":"\uc5f0\ub839\uc774 \ub0ae\uc744 \uc218\ub85d \ub300\ucd9c \uc0c1\ud658 \ub2a5\ub825\uc774 \ub5a8\uc5b4\uc9c0\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\ub2e4.\n\n\uc880 \ub354 \uc81c\ub300\ub85c \ud30c\uc545\ud558\uae30 \uc704\ud574 \uad6c\uac04\uc744 \ubd84\ud560\ud574\ubcf4\uc790.","b5d88a7f":"\uc704\uc758 \uadf8\ub798\ud504\ub97c \ud574\uc11d\ud574\ubcf4\uba74 EXT_SOURCE_3\uc774 \ub300\uc0c1 \uac12 \uc0ac\uc774\uc758 \ud070 \ucc28\uc774\ub97c \ubcf4\uc774\ubbc0\ub85c,<br>\n\uc774 \ud2b9\uc9d5\uc774 \uc2e0\uccad\uc790\uac00 \ub300\ucd9c\uae08\uc744 \uc0c1\ud658\ud560 \uac00\ub2a5\uc131\uacfc \uc5b4\ub5a4 \uad00\uacc4\uac00 \uc788\uc744\uc744 \uc54c \uc218 \uc788\ub2e4.","e01e2595":"# 3. EDA (\ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d)\n\nEDA \ub294 \ub370\uc774\ud130\ub97c \ubcf4\uace0 \ub370\uc774\ud130\uc758 \ucd94\uc138, \uc774\uc0c1, \ud328\ud134 \ub610\ub294 \uad00\uacc4\ub97c \ucc3e\uae30 \uc704\ud55c \uac83\uc774\ub2e4.<br>\n\uc774\ub97c \ud1b5\ud574 \ub370\uc774\ud130\uac00 \ubb34\uc5c7\uc744 \ub9d0\ud558\ub294\uc9c0 \ud30c\uc545\ud558\uace0 \ubaa8\ub378\ub9c1 \uc120\ud0dd\uc5d0 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\ub2e4.\n\n\uac01 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \uc774\ub8e8\uc5b4\uc84c\ub294\uc9c0 \uc54c\uc544\ubcf4\uc790.","f659a4de":"### Label Encoding and One-Hot Encoding","2f84aa97":"\ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8 \ubaa8\ub378\uc5d0\uc11c \uc5b4\ub5a4 \ubcc0\uc218\uac00 \uc911\uc694\ud558\uac8c \uc4f0\uc600\ub294\uc9c0<br>\nfeature_importances_\ub97c \ud655\uc778\ud574\ubcf4\uc790","36329e1b":"# 1. \uc18c\uac1c\n>\ubcf8 \ub178\ud2b8\ub294 \uba38\uc2e0\ub7ec\ub2dd\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\uac70\ub098 \ubb38\uc81c\uc5d0 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\ub294 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud55c \uac83\uc774\ub2e4. \n\n\uc774\uc5d0 \ub530\ub77c \ubcf5\uc7a1\ud55c \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \uacb0\ud569\ud558\ub294 \uac83\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4.\n\n\uc774 \ucc4c\ub9b0\uc9c0\uc758 \ubaa9\uc801\uc740 \ub300\ucd9c \uc2e0\uccad\uc790\uac00 \ub300\ucd9c\uc744 \uc0c1\ud658\ud560 \uc218 \uc788\ub294\uc9c0 \n\uc5ec\ubd80\ub97c \uc608\uce21\ud558\uae30 \uc704\ud574 \uacfc\uac70 \ub300\ucd9c \uc2e0\uccad \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud55c\ub2e4.\n\n\ubcf8 \ub178\ud2b8\uc758 \ubaa9\ud45c\ub294 \ucd5c\ub300\ud55c \uc27d\uac8c \uc608\uce21\uac12\uc744 \ub3c4\ucd9c\ud560 \uc218 \uc788\ub3c4\ub85d \ud55c\ub2e4.\n\ub808\uc774\ube14\uc758 \ubd84\ub958\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc9c4 \ubd84\ub958\ub85c \uc774\ub8e8\uc5b4\uc9c4\ub2e4.\n - 0 ( \uc815\uc2dc \ub300\ucd9c \uc0c1\ud658 )\n - 1 ( \uc815\uc2dc \ub300\ucd9c \uc0c1\ud658 \uc5b4\ub824\uc6c0 )","78dce375":"\ucd5c\ub300 \uac00\uce58\uac00 1000\ub144\uc774\ubbc0\ub85c \uc774 \ub370\uc774\ud130\ub294 \uc774\uc0c1\uc774 \uc788\ub2e4\uace0 \ubcfc \uc218 \uc788\ub2e4.","9253aadd":"## 5. \ub370\uc774\ud130 \ubaa8\ub378\ub9c1\n\n### \ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8","25ea7632":"---\n\n - \ucee4\ub9ac\ud058\ub7fc : https:\/\/kaggle-kr.tistory.com\/32?category=868318\n\n - \uc6d0\ubb38 : https:\/\/www.kaggle.com\/willkoehrsen\/start-here-a-gentle-introduction\n---","5ee66abf":"\uc0c8\ub86d\uac8c \uc0dd\uc131\ud55c \ubcc0\uc218 \uc911 \uba87\uba87 \ubcc0\uc218\ub294 \uae30\uc874\uc758 \ubcc0\uc218\ubcf4\ub2e4 TARGET \uacfc <br>\n\ub354 \ud070 \uc0c1\uad00 \uad00\uacc4\ub97c \uac16\ub294\ub2e4. \uc774\ub97c Train, Test \ub370\uc774\ud130\uc5d0 <br>\n\ub123\uc5c8\uc744 \ub54c\uc640 \ub123\uc9c0 \uc54a\uc558\uc744 \ub54c\ub97c \ube44\uad50 \ud6c4 \ud6a8\uacfc\ub97c \uc2dc\ud5d8\ud574 \ubcfc \uc218 \uc788\ub2e4. <br>\n\n\uc0c8\ub86d\uac8c \uc0dd\uc131\ud55c \uac12\ub4e4\uc774 \uc601\ud5a5\uc774 \uc788\uc744\uc9c0 \ubaa8\ub974\uc9c0\ub9cc, \ubcf8 \ucee4\ub110\uc758 \uc6d0 \uc800\uc790\ub294 merge\ub97c \uc2dc\ucf1c\uc900\ub2e4.\n\uae30\uc874\uc758 app_train \uc774\ub77c\ub294 \uc6d0\ubcf8 \ub370\uc774\ud130\uc5d0\uc11c SK_ID_CURR\uc744 \uac00\uc838\uc628 \ub4a4 poly_feature\uc5d0 \ub123\uc5b4\uc8fc\uace0\n\uc870\uc778\uc744 \uc2dc\ucf1c\uc900\ub2e4. \uadf8\ub9ac\uace0 \ub2e4\uc2dc \uc815\ub82c\ud558\uc790.\n","f499d0af":"Test data \ub294 Training \ubcf4\ub2e4 \ud589\uc774 \uc801\uc73c\uba70, \ubaa9\ud45c(TARGET) \uc5f4\uc774 \uc5c6\ub2e4.","44065110":"\uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\ub9c1\uc744 \ud560 \ub54c, \uc704\uc758 \uacb0\uce21\uac12\uc744 \uc9c0\uc6b0\uac70\ub098 \ucc44\uc6cc\uc57c \ud55c\ub2e4.\n\uc6b0\ub9ac\ub294 \uacb0\uce21\uac12\uc774 \ub192\uc740 feature \ub97c \uc5c6\uc560\uc9c0 \uc54a\uace0 \ucd5c\ub300\ud55c \ubaa8\ub450 \uc774\uc6a9\ud560 \uac83\uc774\ub2e4.\n\n\ucd94\ud6c4 XGBoost \uac19\uc740 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud560 \ub54c\uc5d0\ub294 \uacb0\uce21\uac12\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \ubcf4\ub2e4 \ub2e4\uc591\ud558\ub2e4.","3ade5c9e":"# \ubaa9\ucc28\n1. \uc18c\uac1c\n<br>\n\n2. \ubb38\uc81c \uc815\uc758, \ub370\uc774\ud130 \uc124\uba85\n<br>2-1. \ubb38\uc81c \uc815\uc758\n<br>2-2. \ub370\uc774\ud130 \uc815\uc758\n<br>2-3. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n<br>\n\n3. EDA ( \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d )\n\n4. Feature Engineering\n<br>4-1. Polynomial Features\n<br>4-2. Domain Knowledge Features\n\n5. \ub370\uc774\ud130 \ubaa8\ub378\ub9c1","958ab7d7":"### \ub098\uc774\uac00 \ub300\ucd9c \uc0c1\ud669\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5 \ud30c\uc545","01159a25":"### Train, Test \ub370\uc774\ud130\uc758 \uc5f4 \uc815\ub82c\n\nTrain, Test \ub370\uc774\ud130\uac00 \ub3d9\uc77c\ud55c \uc5f4\uc758 \uac1c\uc218\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\uc57c \ud55c\ub2e4.\n\none-hot encoding \uc744 \uc9c4\ud589\ud558\uba74\uc11c \uc0dd\uae34 dummy \ub85c \uceec\ub7fc\uc774 \ub354 \uc0dd\uaca8 \uc774\ub97c Test \uc5f4\uc758 \uc218\uc640 \ub3d9\uc77c\ud558\uac8c \ub9cc\ub4e4\uc5b4\uc8fc\uc790.","f557b410":"\uc774\ub97c \ud574\uc11d\ud574\ubcf4\uba74 \ub098\uc774\uac00 \uc80a\uc744\uc218\ub85d \ub300\ucd9c\uae08\uc744 <br>\n\uc0c1\ud658\ud558\uc9c0 \uc54a\uc744 \uac00\ub2a5\uc131\uc774 \ub192\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.","8519edcf":"\uc774\ub97c \ud574\uc11d\ud574\ubcf4\uba74 \uace0\uac1d\uc758 \ub098\uc774\uac00 \ub4e4\uc218\ub85d \ub300\ucd9c\uae08\uc744 \ub354 \uc790\uc8fc<br>\n\uc0c1\ud658\ud558\ub294 \uacbd\ud5a5\uc774 \uc788\ub2e4\ub294 \ubaa9\ud45c \uc758\ubbf8\uc640 \ubd80\uc815\uc801\uc778 \uc120\ud615 \uad00\uacc4\uac00 \uc788\ub2e4.","a10227dc":"\uc704\uc758 0(\ub300\ucd9c \uc815\uc2dc \uc0c1\ud658)\uc774 1(\ub300\ucd9c \uc815\uc2dc \uc0c1\ud658 x) \uc5d0 \ube44\ud574 \ub192\ub2e4 \ub77c\ub294 <br>\n\ub370\uc774\ud130\ub97c \ud1b5\ud574 \uc774 \ubb38\uc81c\uac00 \uc9c0\ub09c 2\ubc88 \uc8fc\uc81c\uc778 Porto \uc758 \ub370\uc774\ud130 \uc14b\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c<br>\n\ubd88\uade0\ud615 \ubb38\uc81c\uc778 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.","c3cb3612":"## 4-2. Domain Knowledge Features\n\n\uad50\ud638 \uc791\uc6a9 \ubcc0\uc218 \uc678\uc5d0\ub3c4 \uace0\uac1d\uc758 \ub300\ucd9c \ubc18\ud658 \uc5ec\ubd80\ub97c \ud310\ub2e8\ud558\ub294 \ub370\uc5d0\n\uba87 \uac00\uc9c0 feature\ub97c \ub354 \ub9cc\ub4e4 \uc218 \uc788\ub2e4.\n\n - CREDIT_INCOME_PERCENT <br>\n \uace0\uac1d \uc18c\ub4dd\uc5d0 \ub300\ud55c \uc2e0\uc6a9 \uae08\uc561\uc758 \ubc31\ubd84\uc728\n - ANNUILY_INCOME_PERCENT <br>\n \uace0\uac1d \uc18c\ub4dd\uc5d0 \ub300\ud55c \ub300\ucd9c \uc5f0\uae08\uc758 \ubc31\ubd84\uc728\n - CREDIT_TERM <br>\n \uc6d4 \uc9c0\ubd88\uc758\uae30\uac04\n - DAYS_EMPLOYEM_PERCENT \n \uace0\uac1d\uc758 \uc5f0\ub839\uc5d0 \ube44\ud574 \uace0\uc6a9\ub41c \uc77c\uc758 \ubc31\ubd84\uc728","40908f15":"### \ub2e4\uc2dc EDA \n\n#### \uc774\uc0c1 \uc720\ubb34 \ud30c\uc545\n\nEDA\ub97c \uc218\ud589\ud560 \ub54c \ud56d\uc0c1 \uc870\uc2ec\ud574\uc57c \ud560 \uac83\uc740 \ub370\uc774\ud130 \ub0b4\uc758 \uc774\uc0c1\uc774\ub2e4.<br>\n\uc774\ub294 \uce21\uc815 \uc7a5\ube44\uc758 \uc624\ub958, \uc720\ud6a8\ud558\uc9c0\ub9cc \uadf9\ub2e8\uc801\uc778 \uce21\uc815 \ub4f1\uc774 \uc788\ub2e4.<br>\n\nDAYS_BIRTH \ub97c \uc0b4\ud3b4\ubcf4\uc790\n\uc5ec\uae30\uc11c DAYS_BIRTH \ub780, \ub098\uc774\ub97c \uc758\ubbf8\ud55c\ub2e4.<br>\n\uc774 \uc678\uc5d0\ub3c4 DAYS_EMPLOYED \ub4f1 DAYS \ub85c \uc2dc\uc791\ub418\ub294 \ubcc0\uc218\uac00 \uc788\ub294\ub370,<br>\n\uc774\ub7f0 \ubcc0\uc218\ub4e4\uc740 \"\ub300\ucd9c \uc2e0\uccad \uc2dc\uc810 - \ud574\ub2f9 \uc0ac\uac74 \ubc1c\uc0dd \uc2dc\uc810\"\uc73c\ub85c \uacc4\uc0b0\ud558\uae30 \ub584\ubb38\uc5d0<br>\n\ub9c8\uc774\ub108\uc2a4(-) \ud615\ud0dc\ub85c \ud45c\uc2dc\ub418\ub294 \uac83\uc5d0 \uc8fc\uc758 \ud574\uc57c \ud55c\ub2e4.\n\n\uc774 \ub370\uc774\ud130\ub97c \uc798 \ud65c\uc6a9\ud558\uba74 \ub9ce\uc740 \ubd84\uc11d\uc744 \ud560 \uc218 \uc788\ub294\ub370, \uac00\ub839 DAYS_BIRTH \ub97c<br>\n\uc591\uc218\ub85c \ubc14\uafb8\uace0 365\ub85c \ub098\ub204\uac8c \ub418\uba74 \ub098\uc774\uac00 \uacc4\uc0b0\ub418\uace0, \uc774\ub97c 10\uc0b4 \uc529 \ubb36\uac8c \ub418\uba74<br>\n\uc5f0\ub839\ub300\ubcc4 \ud2b9\uc131\uc774 \uc5b4\ub5bb\uac8c \ub098\ud0c0\ub098\ub294\uc9c0 \ubd84\uc11d\uc774 \uac00\ub2a5\ud558\ub2e4.\n\n\uc774\uc81c \ub098\uc774\uc5d0 \ub530\ub978 \uc774\uc0c1 \uc720\ubb34\ub97c \ud30c\uc545\ud574\ubcf4\uc790.","e0ec06bd":"# 4. Feature Engineering\n\n## 4-1. Polynomial Features","f0619762":"## 2-3. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n\n\ud30c\uc774\uc36c \ud328\ud0a4\uc9c0\ub85c\ub294 numpy, pandas, sklearn, matplotlib \ub97c \uc0ac\uc6a9\ud560 \uc608\uc815\uc774\ub2e4.","0ecb2e7b":"### Target \uc758 \ubd84\ud3ec \uc870\uc0ac","5b7983df":"# <center>Level 3. Home Credit Default Risk<\/center>\n### <center>- Start Here: A Gentle Introduction -<\/center>\n# <center>**\uc8fc\ud0dd \ub300\ucd9c \ubbf8\uc0c1\ud658 \uace0\uac1d \uc608\uce21**<\/center>\n## <center>\uc81c\uc791\uc790 : \uc11c\uc0c1\ud6c8<\/center>","d60c3e04":"\uc704\uc758 \uacb0\uacfc\ub97c \ubcf4\uba74 \ub098\uc774\ub300\uac00 \ud569\ub9ac\uc801\uc73c\ub85c \ubcf4\uc778\ub2e4.<br>\n\ub192\uc740 \ucabd\uc774\ub098 \ub0ae\uc740 \ucabd\uc5d0 \ud2b9\uc774\uce58\uac00 \uc5c6\uc5b4 \ubcf4\uc778\ub2e4.\n\n\ub2e4\uc74c\uc73c\ub85c \uace0\uc6a9\uc77c\uc744 \ubcf4\uc790","954cd0f5":"\uc0c8\ub86d\uac8c \ucd94\uac00\ud55c feature\uc758 \ud6a8\uacfc\ub97c \uc2dc\ud5d8\ud558\ub824\uba74 \ud14c\uc2a4\ud2b8 \ud558\ub294 \uc218 \ubc16\uc5d0 \uc5c6\ub2e4.","e6fda640":"\uc0c8\ub86d\uac8c \ucd94\uac00\ub41c \ubcc0\uc218\uc640 TARGET \uc744 \uc2dc\uac01\ud654 \ud574\ubcf4\uc790","412f487a":"### \uc678\ubd80 \uae08\uc735\uae30\uad00\uc73c\ub85c\ubd80\ud130\uc758 \ub370\uc774\ud130\n\nTARGET \uacfc \uac00\uc7a5 \uac15\ud55c \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac16\ub294 3\uac1c\uc758 \ubcc0\uc218\ub294\nEXT_SURCE_1, EXT_SURCE_2, EXT_SURCE_3 \ubb38\uc11c\uc5d0 \ub530\ub974\uba74\n\uc774 feature \ub4e4\uc740 \uc2e0\uc6a9\ub4f1\uae09\uc744 \uc758\ubbf8\ud55c\ub2e4.","bddcaa23":"3 \uac00\uc9c0 EXT_SOURCE \uae30\ub2a5 \ubaa8\ub450 TARGET \uacfc \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4<br>\nEXT_SOURCE \uc758 \uac00\uce58\uac00 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \uace0\uac1d\uc774 \ub300\ucd9c\uae08\uc744 \uc0c1\ud658\ud560 \uac00\ub2a5\uc131\uc774<br>\n\ub192\ub2e4\ub294 \uac83\uc744 \ub098\ud0c0\ub0b8\ub2e4.\n\n\ub610\ud55c DayS_BIRTH\uc640 EXT_SOURCE_1 \uacfc \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc784\uc73c\ub85c\uc368 \uc774 \uc810\uc218\uc758\n\uc694\uc778 \uc911 \ud558\ub098\uac00 \uace0\uac1d \uc5f0\ub839\uc784\uc744 \uc54c \uc218 \uc788\ub2e4.","af3cc4b6":"### \uacb0\uce21\uac12 \uc870\uc0ac"}}