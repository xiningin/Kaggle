{"cell_type":{"b8826c2a":"code","db541206":"code","6fb30176":"code","06c9f9ce":"code","3211eb51":"code","d08ef7c1":"code","923d0f3f":"code","b7da943d":"code","aabedf9f":"code","a86f83b6":"code","40c25f1b":"code","4eede45a":"code","3b480637":"code","6dc18c35":"code","69cf7323":"code","a0c84e63":"code","53b08947":"code","e3c8a35c":"code","27c4ea65":"code","ebf83eef":"code","536c3109":"code","4bbbba27":"code","29331476":"code","0581f620":"markdown","8137631c":"markdown","e48fa895":"markdown","8e1a502f":"markdown","2ae8c922":"markdown","ec156083":"markdown","21c83418":"markdown","3cc9cbfb":"markdown","f40a044f":"markdown","65009ded":"markdown","b0ee0b28":"markdown","de4d07cc":"markdown","f43cbe1e":"markdown","6930e665":"markdown","7e1f1717":"markdown"},"source":{"b8826c2a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nfrom nltk.corpus import stopwords \nfrom nltk.tokenize import word_tokenize \nfrom nltk.stem.wordnet import WordNetLemmatizer\nstop_words =set( stopwords.words('english') )\nimport string\npunc=set(string.punctuation)\nlemm=WordNetLemmatizer()\nlemmatizer = WordNetLemmatizer()","db541206":"df=pd.read_csv(\"..\/input\/urban_dictionary.csv\")","6fb30176":"df.head()","06c9f9ce":"df.shape","3211eb51":"df.info()","d08ef7c1":"df.drop(['date','tags'],axis=1,inplace=True)","923d0f3f":"df.dtypes","b7da943d":"df['author'].value_counts().head()","aabedf9f":"df['word'].value_counts().head()","a86f83b6":"df.columns","40c25f1b":"df['original_count']=df.definition.apply(lambda x:len(x.split()))","4eede45a":"df.head()","3b480637":"print('positive word',df.loc[df.up==df.up.max()]['word'])\nprint('Negative  word',df.loc[df.down==df.down.max()]['word'])","6dc18c35":"df['def_new']=None\nfor i in range(len(df['definition'])):\n    doc=df.definition[i]\n    doc=doc.split(\" \")\n    doc=[w for w in doc if w not in set(stop_words)]\n    doc=[w for w in doc if w not in punc]\n    doc=\" \".join([lemmatizer.lemmatize(word) for word in doc])\n    df.at[i,'def_new']=doc\n\n    ","69cf7323":"df.head()","a0c84e63":"df['def_new_count']=df['def_new'].apply(lambda x:len(x.split(\" \")))","53b08947":"df[['def_new_count','original_count']].head()","e3c8a35c":"sm=SentimentIntensityAnalyzer()","27c4ea65":"df['score']=None\ndf['polarity']=None\nfor i in range(len(df.def_new)):\n    score_dic=sm.polarity_scores(df.def_new[i])\n    key=max(score_dic,key=score_dic.get)\n    df.at[i,'score']=score_dic[key]\n    df.at[i,'polarity']=key\n    #print(key,score_dic[key])\n    \n    ","ebf83eef":"val=(df['polarity'].value_counts())","536c3109":"type(val)","4bbbba27":"df['polarity'].value_counts().index","29331476":"pd.DataFrame(val).plot.pie(y='polarity',figsize=(10,10),autopct='%1.0f%%')","0581f620":"### ** Loading datafile**","8137631c":"#### ****Removing unwanted columns****","e48fa895":"### Number of rows and columns","8e1a502f":"### **word frequencies**","2ae8c922":"## **Visualization of polarity score**","ec156083":"### **Finding hightest contribution _ authors**","21c83418":"### **Visualization of counts of word -before and after preproccessing **","3cc9cbfb":"### **Importing libraries**","f40a044f":"#### **Word counts after preproccessing**","65009ded":"## **Most positive word and negative word **","b0ee0b28":"### **Pre proccessing**","de4d07cc":"### **Word count**","f43cbe1e":"### **Sentiment Analysis**","6930e665":"**INFO**","7e1f1717":"### Header"}}