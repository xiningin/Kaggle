{"cell_type":{"92428d84":"code","d8fb4a5f":"code","77d95a9c":"code","9653f190":"code","d740f828":"code","0995286d":"markdown","521cb274":"markdown","cb1b4772":"markdown","66da25a4":"markdown"},"source":{"92428d84":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8fb4a5f":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","77d95a9c":"dataset=pd.read_csv('\/kaggle\/input\/ads-ctr-optimisation\/Ads_CTR_Optimisation.csv')","9653f190":"import random\nN=10000\nd=10\nads_selected=[]\nnumbers_of_reward_0=[0]*d\nnumbers_of_reward_1=[0]*d\ntotal_rewards=0\nfor n in range(0,N):\n    ad=0\n    max_random=0\n    for i in range(0,d):\n        random_beta=random.betavariate(numbers_of_reward_1[i]+1,numbers_of_reward_0[i]+1)\n        if(random_beta>max_random):\n            max_random=random_beta\n            ad=i\n    ads_selected.append(ad)\n    rewards=dataset.values[n,ad]\n    if rewards==0:\n        numbers_of_reward_0[ad]+=1\n    else:\n        numbers_of_reward_1[ad]+=1\n\n    total_rewards+=rewards\nprint(total_rewards)","d740f828":"plt.hist(ads_selected)\nplt.show()","0995286d":"# Visualisation","521cb274":"# Implementing the thompson sampling","cb1b4772":"# Importing the dataset","66da25a4":"# Importing the libaries"}}