{"cell_type":{"5882b789":"code","ce84cab2":"code","0e06de29":"code","49d1cd3d":"code","835dd168":"code","e28d3135":"code","5170b3c0":"code","8f4066ee":"code","2b1b6037":"code","cbb69889":"code","30151ca2":"code","96b06088":"code","4e6d7645":"code","29ffe811":"code","6b8584eb":"markdown","4016ed22":"markdown","2d4da368":"markdown","3b471f47":"markdown"},"source":{"5882b789":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n\n#sklearn imports\nfrom sklearn import (datasets, metrics, model_selection as skms, naive_bayes, neighbors)\n\n#warning off\nimport warnings\n\nwarnings.filterwarnings('ignore')\nnp.random.seed(42)","ce84cab2":"iris  = datasets.load_iris()\nprint(iris.DESCR)","0e06de29":"iris_df = pd.DataFrame(iris.data, columns=iris.feature_names)\niris_df['tgt'] = iris.target\niris_df.head()","49d1cd3d":"sns.pairplot(iris_df, hue='tgt', height=1.5)","835dd168":"iris.target_names","e28d3135":"actual  = np.array([True, True, False, True])\npreds = np.array([True, True, True ,True])","5170b3c0":"correct = actual == preds\ncorrect.sum() \/ len(actual)","8f4066ee":"#accuracy score\n\nmetrics.accuracy_score(actual, preds)","2b1b6037":"ftrs = np.random.randint(1,7, (8,2))\nftrs","cbb69889":"tgts = np.random.randint(0,2,8)\ntgts","30151ca2":"plt.scatter(ftrs[:,0] , ftrs[:,1] , c=tgts)\ntst = (2,3)\nplt.scatter(*tst, c='r')","96b06088":"distance = np.hypot(2-ftrs[:, 0], 3-ftrs[:,1])\ndistance.argsort()","4e6d7645":"(iris_train_ftrs, iris_test_ftrs, \n iris_train_tgt, iris_test_tgt) = skms.train_test_split(iris.data, iris.target, test_size = .70)\n\nlen(iris_train_ftrs), len(iris_test_ftrs)","29ffe811":"#fitting KNN\nknn = neighbors.KNeighborsClassifier(n_neighbors = 5)\nfit = knn.fit(iris_train_ftrs, iris_train_tgt)\npreds = fit.predict(iris_test_ftrs)\n\n#how accurate it is\nactuals = iris_test_tgt\nmetrics.accuracy_score(actuals,preds)","6b8584eb":"# Fitting K-NN --> Train\/Test Split","4016ed22":"# Accuracy","2d4da368":"# **Iris Datasets**","3b471f47":"# k-nearest neighbour(kNN)\n"}}