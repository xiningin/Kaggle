{"cell_type":{"5aee4f01":"code","a4425ece":"code","a2335aa1":"code","3738242d":"code","10b5b318":"code","2858bb17":"code","c962bd32":"code","bccd2ac7":"code","2342d081":"code","259a4923":"code","f678931d":"code","9753970d":"code","73700c76":"code","aacc6df5":"code","c01530ca":"code","59633dae":"code","e1b90ec6":"code","bd36e697":"code","322e0be4":"code","4615383d":"code","72a2bfb9":"code","04400bf8":"code","de369668":"code","660a123e":"markdown","fe5090a2":"markdown","fd99cfef":"markdown"},"source":{"5aee4f01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import scale\nfrom sklearn import datasets\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a4425ece":"#Loading the iris dataset\niris = datasets.load_iris()\n","a2335aa1":"#Checking the dataset\niris.data\nprint(iris.data.shape)","3738242d":"#Checking the featues\niris.feature_names","10b5b318":"#Scaling the data for clustering for better efficiency\nx = scale(iris.data)","2858bb17":"#checking the target\niris.target","c962bd32":"# Doing the clustering \nclustering = KMeans(n_clusters =3,random_state=1)","bccd2ac7":"#Fitting the algorithm\nclustering.fit(x)","2342d081":"#Labelling the cluster\nclustering.labels_","259a4923":"#Adding the visualisation\nimport matplotlib.pyplot as plt\n%matplotlib inline","f678931d":"#Converting into DataFrame\niris_df = pd.DataFrame(iris.data)","9753970d":"iris_df.columns=['sepal_length','sepal_width','petal_length','petal_width']","73700c76":"y=pd.DataFrame(iris.target)\ny.columns=['targets']","aacc6df5":"y.head()","c01530ca":"plt.scatter(x=iris_df.petal_length,y=iris_df.petal_width)\nplt.title(\"The actual dataset\")","59633dae":"import numpy as np\ncolor =np.array(['red','blue','green'])","e1b90ec6":"#adding the colors\nplt.scatter(x=iris_df.petal_length,y=iris_df.petal_width,c=color[iris.target])\nplt.title(\"The actual dataset\")","bd36e697":"#After the clustering\n#adding the colors\ncolor2=np.array(['green','red','blue'])\nplt.scatter(x=iris_df.petal_length,y=iris_df.petal_width,c=color2[clustering.labels_])\nplt.title(\"The dataset post clustering\")","322e0be4":"#finding distortion for every k- value\n\n# K = 1 to 10,for every k value we calculate distortion,then we plot the line graph between K and Distortion\ndistortions = []\nK = range(1,18)\nprint(K)\n","4615383d":"#importing the cdist package\nfrom scipy.spatial.distance import cdist\nimport math\niris_df.head()\nX = iris_df.loc[:,['petal_length','petal_width']]","72a2bfb9":"# Finding the distortion in every set as the min Euclidean distance between two points\nfor k in K: \n    kmeans_model = KMeans(n_clusters=k)\n    kmeans_model.fit(X)\n    distortions.append(sum(np.min(cdist(X,kmeans_model.cluster_centers_,\"euclidean\"),axis=1))\/X.shape[0])","04400bf8":"#printing the distortion\ndistortions","de369668":"#Plot distortions againt K value\nprint(K)\n# checking for min of K value\nprint(np.min(distortions))\n#Plotting for change in K value\nplt.plot(K,distortions,'bx-')","660a123e":"# Implementing the K Means Algorithm using the Iris Dataset","fe5090a2":"# Hence from the above graph since the value changes at around 3 ,using the elbow technique the value must be around 3","fd99cfef":"# Now we shall use the elbow technique for finding the number of clusters"}}