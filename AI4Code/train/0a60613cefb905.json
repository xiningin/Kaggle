{"cell_type":{"1c24aef9":"code","1d374b24":"code","003ba667":"code","bb095a60":"code","dfef2418":"code","1152a442":"code","e1d8d26d":"code","3110744a":"code","d27bc9ad":"code","d5317e57":"code","38c5b17c":"code","702b816d":"code","35864ca4":"code","29eb70b3":"code","6c1b3ac3":"code","c914a3ea":"code","3f67c02d":"code","62df0f9e":"code","767f0e22":"code","a069a9f4":"code","e6dc6dde":"code","962c576e":"code","318cedeb":"code","5c649870":"code","589a8399":"code","2db59570":"code","a96f7b3e":"code","396a133d":"code","648c6fed":"code","a3334518":"code","c4d6323e":"code","edfe72a1":"code","11280b59":"markdown","62475a9e":"markdown","f5b42b95":"markdown","5dae562d":"markdown","52e5eabc":"markdown","55e6bd52":"markdown","98dadb27":"markdown","82e46a7a":"markdown","84875a49":"markdown","3d1655e1":"markdown","0f42c84c":"markdown","90f463af":"markdown","66f3bdb2":"markdown","bff49e4a":"markdown","ec33b3bf":"markdown","78e8feed":"markdown","e25f1685":"markdown","2087068d":"markdown","2e262120":"markdown","fa4e3866":"markdown","b85a19c2":"markdown","a2b5d657":"markdown","45b6ddd2":"markdown","22f43811":"markdown","af7e556b":"markdown","ac7ad500":"markdown","8e7243db":"markdown","a2408f58":"markdown","03eb2468":"markdown","3647e584":"markdown","56edf73a":"markdown","b48b0246":"markdown","4f066a41":"markdown","2f9c52b0":"markdown","bcc6917d":"markdown","98b8cf0f":"markdown","c4731961":"markdown","c359a509":"markdown"},"source":{"1c24aef9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1d374b24":"import folium as fl\nfrom folium import plugins\nimport ipywidgets\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","003ba667":"unemp = pd.read_csv('..\/input\/boston-unemployment-rate\/Bostonrate.csv')\nunemp","bb095a60":"crime = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='latin-1')\ncrime.head(8)","dfef2418":"r_crime_type = crime.groupby([\"OFFENSE_CODE_GROUP\"]).mean()\ncrime_type = list(r_crime_type.index)\nprint(r_crime_type.index)\nprint(len(r_crime_type.index))","1152a442":"sns.catplot(y=\"YEAR\",data=crime,kind=\"count\")","e1d8d26d":"winter_data =crime.loc[(crime.MONTH) >9]\n\nc_of_year = [\"#0affe6\",\"#8b658b\",\"#ffc1c1\" ]\n\nsns.catplot(x=\"YEAR\",data=winter_data,hue=\"MONTH\",height=4,kind=\"count\",palette=c_of_year)","3110744a":"sns.catplot(y=\"YEAR\",data=crime,hue=\"UCR_PART\",height=4,kind=\"count\")","d27bc9ad":"plt.bar(unemp.Mounth,unemp[\"2016\"] ,label= \"2016\")   \nplt.legend(loc='upper right')    \nplt.xlabel(' ')\nplt.ylabel(\"rate %\")\nplt.show()","d5317e57":"Y_2016 = crime.loc[(crime.YEAR)==2016]\n\nsns.countplot(x=\"MONTH\",data=Y_2016)\nplt.show()","38c5b17c":"plt.bar(unemp.Mounth,unemp[\"2017\"] ,label= \"2017\")   \nplt.legend(loc='upper right')   \nplt.xlabel(' ')\nplt.ylabel(\"rate %\")\nplt.show()","702b816d":"Y_2017 = crime.loc[(crime.YEAR)==2017]\n\nsns.countplot(x=\"MONTH\",data=Y_2017)","35864ca4":"def maxer (days,arr1,arr2,df):\n    lap = 0 \n    mx = 0\n    ind= \" \"\n    \n    while lap < 7 :\n        l = 0\n        for i in df[days[lap]]:\n            if i > mx :\n                mx =  i\n                ind = df.index[l]\n            l += 1 \n            \n        arr2.append(str(ind)+\"\\n\"+ str(days[lap]))\n        lap += 1 \n        arr1.append(mx)\n        mx = 0\n        ind = \" \"","29eb70b3":"d_crime_time = crime.groupby([\"OFFENSE_CODE_GROUP\",\"DAY_OF_WEEK\"]).count().unstack().INCIDENT_NUMBER\n\nDay = [\"Friday\",\"Monday\",\"Saturday\",\"Sunday\",\"Thursday\",\"Tuesday\",\"Wednesday\"]\nday = []\ncrm=  []\n\nmaxer(Day,day,crm,d_crime_time)","6c1b3ac3":"d_crime_time.loc['Motor Vehicle Accident Response']","c914a3ea":"r_crime_time = crime.groupby([\"INCIDENT_NUMBER\"]).count()\nr_time = []\nx = [2,3,4,5,6,7,8,9,10,11,12,13]\nfor i in range(1,13):\n    r_time.append(len(r_crime_time.loc[(r_crime_time.YEAR) > i]))\n    \n\nlist_label = [\"time\",\"inicident\"]\nlist_col = [x,r_time]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\ncrime_1 = pd.DataFrame(data_dict)\n        \nsns.catplot(x=\"time\",y=\"inicident\",kind=\"point\",data=crime_1 ,markers=[\"o\"] ,linestyle=[\"-\"])","3f67c02d":"def parter(x):\n    if i in other :\n        return \"Other\"\n    elif i in part1 :\n        return \"Part One\"\n    elif i in part2:\n        return \"Part Two\"\n    elif i in part3:\n        return \"Part Three\"\n    \ndef adder(arr,earr):\n    \n    for i in arr:   \n        i = i.split(\" \")\n        empty = []\n        L = 0\n        while L < len(i):\n            empty.append((i[L])[0])\n            L += 1\n        earr.append(\"\".join(empty))\n        empty=[]","62df0f9e":"dist = crime.groupby([\"OFFENSE_CODE_GROUP\",\"DISTRICT\"]).count().unstack().INCIDENT_NUMBER\nd\u0131str\u0131ct = [i for i in dist]\ndist[\"\u0131ndex\"]=dist.index\n\nucr= []\ncap = []\n\nother =['Arson','Auto Theft Recovery','Burglary - No Property Taken','License Plate Related Incidents','Manslaughter','Other']\npart1 =['Aggravated Assault', 'Auto Theft', 'Commercial Burglary', 'Homicide', 'Larceny', 'Larceny From Motor Vehicle', 'Other Burglary', 'Residential Burglary', 'Robbery']\npart2 =['Ballistics', 'Biological Threat', 'Bomb Hoax', 'Confidence Games', 'Counterfeiting', 'Criminal Harassment', 'Disorderly Conduct', 'Drug Violation', 'Embezzlement', 'Evading Fare', 'Explosives', 'Fire Related Reports', 'Firearm Violations', 'Fraud', 'Gambling', 'Harassment', 'Liquor Violation', 'Missing Person Reported', 'Offenses Against Child \/ Family', 'Operating Under the Influence', 'Other', 'Phone Call Complaints', 'Prisoner Related Incidents', 'Prostitution', 'Recovered Stolen Property', 'Restraining Order Violations', 'Simple Assault', 'Vandalism', 'Violations']\npart3 =['Aircraft', 'Assembly or Gathering Violations', 'Explosives', 'Fire Related Reports', 'Firearm Discovery', 'Harbor Related Incidents', 'Investigate Person', 'Investigate Property', 'Landlord\/Tenant Disputes', 'License Plate Related Incidents', 'License Violation', 'Medical Assistance', 'Missing Person Located', 'Missing Person Reported', 'Motor Vehicle Accident Response', 'Other', 'Police Service Incidents', 'Prisoner Related Incidents', 'Property Found', 'Property Lost', 'Property Related Damage', 'Search Warrants', 'Service', 'Towed', 'Verbal Disputes', 'Warrant Arrests']\n\n\n\nfor i in dist.\u0131ndex:\n    ucr.append(parter(i))\n    \n    \nadder(dist.index,cap)\n    \ndist[\"short\u0131nd\"] = cap   \ndist[\"ucrpart\"]=ucr\n\nOther = dist.loc[(dist.ucrpart) == \"Other\" ]\nPartOne = dist.loc[(dist.ucrpart) == \"Part One\" ]\nPartTwo = dist.loc[(dist.ucrpart) == \"Part Two\" ]\nPartThree = dist.loc[(dist.ucrpart) == \"Part Three\" ]\n\n","767f0e22":"Other","a069a9f4":"col = [Other.A1 , Other.A15 , Other.A7 , Other.B2 , Other.B3 , Other.C11 , Other.C6 , Other.D14 , Other.D4 ,Other.E13,Other.E18,Other.E5]\nfig, ax = plt.subplots(nrows=3,ncols=4,figsize=(15,10)) \nlap = 0\nf= 0\ns= 0\nwhile lap < 12:\n    pl = ax[f][s]\n    pl.bar(Other.short\u0131nd,col[lap],label= d\u0131str\u0131ct[lap])   \n    pl.legend(loc='upper left')    \n    pl.set_xlabel(' ')\n    pl.set_ylabel(\" \")\n    \n    lap += 1 \n    s += 1 \n    if s == 4:\n        s=0\n        f+=1\n    \nplt.show()\nprint(list(zip(Other.\u0131ndex,Other.short\u0131nd)))","e6dc6dde":"col = [PartOne.A1 , PartOne.A15 , PartOne.A7 , PartOne.B2 , PartOne.B3 , PartOne.C11 , PartOne.C6 , PartOne.D14 , PartOne.D4 ,PartOne.E13,PartOne.E18,PartOne.E5]\nfig, ax = plt.subplots(nrows=3,ncols=4,figsize=(15,10)) \nlap = 0\nf= 0\ns= 0\nwhile lap < 12:\n    pl = ax[f][s]\n    pl.bar(PartOne.short\u0131nd,col[lap],label=d\u0131str\u0131ct[lap],align=\"center\")   \n    pl.legend(loc='upper left')    \n    pl.set_xlabel(' ')\n    pl.set_ylabel(\" \")\n    \n    lap += 1 \n    s += 1 \n    if s == 4:\n        s=0\n        f+=1\n    \nplt.show()\nprint(list(zip(PartOne.\u0131ndex,PartOne.short\u0131nd)))","962c576e":"col = [PartTwo.D14 , PartTwo.A15 , PartTwo.A7 ,  PartTwo.B3 ,PartTwo.B2 , PartTwo.C11 , PartTwo.C6 ,PartTwo.A1 , PartTwo.D4 ,PartTwo.E13,PartTwo.E18,PartTwo.E5]\nfig, ax = plt.subplots(nrows=4,ncols=1,figsize=(20,20)) \nlap = 0\nf= 0\nx_index = np.arange(len(PartTwo.short\u0131nd))\nwidth = 0.3\n\nwhile lap < 4:\n    pl = ax[lap]\n    pl.bar(x_index-width,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#444444\")\n    f+=1\n    pl.bar(x_index,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#008fd5\")\n    f+=1\n    pl.bar(x_index+width,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#e5ae38\")\n    f+=1\n    pl.set_xticks(ticks=x_index,minor=False)\n    pl.set_xticklabels(PartTwo.short\u0131nd,fontdict={'fontsize':13})\n    pl.legend(loc='upper left')    \n    pl.set_xlabel(' ')\n    pl.set_ylabel(\" Part Two \")\n    \n    lap += 1\n               \nplt.show()\nprint(list(zip(PartTwo.\u0131ndex,PartTwo.short\u0131nd)))","318cedeb":"col = [PartThree.D14 , PartThree.A15 , PartThree.A7 ,  PartThree.B3 ,PartThree.B2 , PartThree.C11 , PartThree.C6 ,PartThree.A1 , PartThree.D4 ,PartThree.E13,PartThree.E18,PartThree.E5]\nfig, ax = plt.subplots(nrows=4,ncols=1,figsize=(20,20)) \nlap = 0\nf= 0\nx_index = np.arange(len(PartThree.short\u0131nd))\nwidth = 0.3\n\nwhile lap < 4:\n    pl = ax[lap]\n    pl.bar(x_index-width,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#444444\")\n    f+=1\n    pl.bar(x_index,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#008fd5\")\n    f+=1\n    pl.bar(x_index+width,col[f],width = 0.25,label=d\u0131str\u0131ct[f],color=\"#e5ae38\")\n    f+=1\n    pl.set_xticks(ticks=x_index,minor=False)\n    pl.set_xticklabels(PartThree.short\u0131nd,fontdict={'fontsize':12})\n    pl.legend(loc='upper left')    \n    pl.set_xlabel(' ')\n    pl.set_ylabel(\" Part Three \")\n    \n    lap += 1\n               \nplt.show()\nprint(list(zip(PartThree.\u0131ndex,PartThree.short\u0131nd)))","5c649870":"def steeter (di,arr1,arr2,df):\n    lap = 0 \n    mx = 0\n    stre= \" \"\n    \n    while lap < 12 :\n        l = 0\n        for i in df.loc[di[lap]].INCIDENT_NUMBER :\n            if i > mx :\n                mx =  i\n                stre = df.loc[di[lap]].INCIDENT_NUMBER.index[l]\n            l += 1 \n            \n        \n        data = str(di[lap]) + \"\\n\" + str(stre)\n        arr2.append(mx)\n        lap += 1 \n        arr1.append(data)\n        mx = 0\n        stre = \" \"","589a8399":"street = crime.groupby([\"DISTRICT\",\"STREET\"]).count()\n\ncol1= []\ncol2= []\n\ndst = [\"A1\",\"A15\",\"A7\",\"B2\",\"B3\",\"C11\",\"C6\",\"D14\",\"D4\",\"E13\",\"E18\",\"E5\"]  \n\nsteeter(dst,col1,col2,street)\n\nfig, ax = plt.subplots(figsize=(26,8)) \nplt.bar(col1,col2,label=\"hello\")   \nplt.legend(loc='upper right')    \nplt.xlabel('Count')\nplt.ylabel(\"Street \")\nplt.show()","2db59570":"index=[]\nloc = []\ncolr = ['green', 'red', 'purple', 'lightred', 'gray', 'beige', 'lightgreen', 'cadetblue', 'darkred', 'white', 'darkgreen', 'lightgray', 'blue', 'black', 'orange', 'pink', 'darkblue', 'darkpurple', 'lightblue']\n\nsteer = crime.loc[((crime.STREET) == \"BLUE HILL AVE\")& ((crime.DISTRICT)== \"B2\")&((crime.YEAR)==2016)]\n\nster = steer.groupby([\"OFFENSE_CODE_GROUP\"]).count()\n\ndata = ster.loc[(ster.OFFENSE_CODE)> 10].index\n\nfor i in data :\n    x = steer.loc[(steer.OFFENSE_CODE_GROUP)== i]\n    lat = x[\"Lat\"].dropna(inplace=False)\n    long = x[\"Long\"].dropna(inplace=False)\n    Loc = zip(lat,long)\n    index.append(i)\n    loc.append(list(Loc))\n    \n\nstreet = fl.Map(location=[42.30584602, -71.08470215],zoom_start=14)\nfl.raster_layers.TileLayer('Stamen Terrain').add_to(street)\nfl.LayerControl().add_to(street)\n\nrad = 50\nlap = 0\nwhile lap < 16 :\n    \n    for i in loc[lap]:\n        fl.Circle(location=[i[0],i[1]],radius=rad, color=colr[lap],popup=index[lap] ,fill_color=colr[lap],fill_opacity=0.7).add_to(street)\n    \n    lap += 1\n    rad -= 3\n\nstreet\n","a96f7b3e":"index=[]\nloc = []\ncolr = ['green', 'red', 'purple', 'lightred', 'gray', 'beige', 'lightgreen', 'cadetblue', 'darkred', 'white', 'darkgreen', 'lightgray', 'blue', 'black', 'orange', 'pink', 'darkblue', 'darkpurple', 'lightblue']\n\nsteer = crime.loc[((crime.STREET) == \"BLUE HILL AVE\")& ((crime.DISTRICT)== \"B3\")&((crime.YEAR)==2016)]\nster = steer.groupby([\"OFFENSE_CODE_GROUP\"]).count()\ndata = ster.loc[(ster.OFFENSE_CODE)> 10].index\n\nfor i in data :\n    x = steer.loc[(steer.OFFENSE_CODE_GROUP)== i]\n    lat = x[\"Lat\"].dropna(inplace=False)\n    long = x[\"Long\"].dropna(inplace=False)\n    Loc = zip(lat,long)\n    index.append(i)\n    loc.append(list(Loc))\n    \n\nstreet = fl.Map(location=[42.305846 ,-71.077763],zoom_start=14)\nfl.raster_layers.TileLayer('Stamen Terrain').add_to(street)\nfl.LayerControl().add_to(street)\n\nrad = 50\nlap = 0\nwhile lap < 16 :\n    \n    for i in loc[lap]:\n        fl.Circle(location=[i[0],i[1]],radius=rad, color=colr[lap],popup=index[lap] ,fill_color=colr[lap],fill_opacity=0.7).add_to(street)\n    \n    lap += 1\n    rad -= 3\n\n\nstreet  ","396a133d":"index=[]\nloc = []\ncolr = ['green', 'red', 'purple', 'lightred', 'gray', 'beige', 'lightgreen', 'cadetblue', 'darkred', 'white', 'darkgreen', 'lightgray', 'blue', 'black', 'orange', 'pink', 'darkblue', 'darkpurple', 'lightblue']\n\nsteer = crime.loc[((crime.STREET) == \"DORCHESTER AVE\")& ((crime.DISTRICT)== \"C11\")&((crime.YEAR)==2016)]\nster = steer.groupby([\"OFFENSE_CODE_GROUP\"]).count()\ndata = ster.loc[(ster.OFFENSE_CODE)> 20].index\n\nfor i in data :\n    x = steer.loc[(steer.OFFENSE_CODE_GROUP)== i]\n    lat = x[\"Lat\"].dropna(inplace=False)\n    long = x[\"Long\"].dropna(inplace=False)\n    Loc = zip(lat,long)\n    index.append(i)\n    loc.append(list(Loc))\n    \n\nstreet = fl.Map(location=[42.305846 ,-71.077763],zoom_start=13)\nfl.raster_layers.TileLayer('Stamen Terrain').add_to(street)\nfl.LayerControl().add_to(street)\n\nrad = 50\nlap = 0\nwhile lap < 16 :\n    \n    for i in loc[lap]:\n        fl.Circle(location=[i[0],i[1]],radius=rad, color=colr[lap],popup=index[lap] ,fill_color=colr[lap],fill_opacity=0.5).add_to(street)\n    \n    lap += 1\n    rad -= 3\n\nstreet\n","648c6fed":"index=[]\nloc = []\ncolr = ['green', 'red', 'purple', 'lightred', 'gray', 'beige', 'lightgreen', 'cadetblue', 'darkred', 'white', 'darkgreen', 'lightgray', 'blue', 'black', 'orange', 'pink', 'darkblue', 'darkpurple', 'lightblue']\n\nsteer = crime.loc[((crime.STREET) == \"BOYLSTON ST\")& ((crime.DISTRICT)== \"D4\")&((crime.YEAR)==2016)]\n\nster = steer.groupby([\"OFFENSE_CODE_GROUP\"]).count()\n\ndata = ster.loc[(ster.OFFENSE_CODE)> 20].index\n\nfor i in data :\n    x = steer.loc[(steer.OFFENSE_CODE_GROUP)== i]\n    lat = x[\"Lat\"].dropna(inplace=False)\n    long = x[\"Long\"].dropna(inplace=False)\n    Loc = zip(lat,long)\n    index.append(i)\n    loc.append(list(Loc))\n    \n\nstreet = fl.Map(location=[42.34489594, -71.09659186],zoom_start=14)\nfl.raster_layers.TileLayer('Stamen Terrain').add_to(street)\nfl.LayerControl().add_to(street)\n\nrad = 50\nlap = 0\nwhile lap < 16 :\n    \n    for i in loc[lap]:\n        fl.Circle(location=[i[0],i[1]],radius=rad, color=colr[lap],popup=index[lap] ,fill_color=colr[lap],fill_opacity=0.7).add_to(street)\n    \n    lap += 1\n    rad -= 3\n\nstreet","a3334518":"d\u0131st = crime.loc[((crime.DISTRICT) == \"B3\")]\nlar = d\u0131st.loc[((d\u0131st.OFFENSE_CODE_GROUP) == \"Larceny\")&((d\u0131st.YEAR)==2016)]\n\nLarloc = []\nlat = lar[\"Lat\"].dropna(inplace=False)\nlong = lar[\"Long\"].dropna(inplace=False)\nLarloc.append(zip(lat,long))\n\nMap = fl.Map(location=[42.305846 ,-71.077763], zoom_start=12)\n\nfor i in list(Larloc[0]):\n    fl.Circle(location=i,radius=30,color=\"red\",fill_color=\"red\",fill_opacity=0.7).add_to(Map)","c4d6323e":"d\u0131st = crime.loc[((crime.DISTRICT) == \"B2\")]\nlar = d\u0131st.loc[((d\u0131st.OFFENSE_CODE_GROUP) == \"Larceny\")&((d\u0131st.YEAR)==2016)]\n\nLarloc = []\nlat = lar[\"Lat\"].dropna(inplace=False)\nlong = lar[\"Long\"].dropna(inplace=False)\nLarloc.append(zip(lat,long))\n\n\nfor i in list(Larloc[0]):\n    fl.Circle(location=i,radius=30,color=\"blue\",fill_color=\"blue\",fill_opacity=0.7).add_to(Map) ","edfe72a1":"d\u0131st = crime.loc[((crime.DISTRICT) == \"C11\")]\nlar = d\u0131st.loc[((d\u0131st.OFFENSE_CODE_GROUP) == \"Larceny\")&((d\u0131st.YEAR)==2016)]\n\nLarloc = []\nlat = lar[\"Lat\"].dropna(inplace=False)\nlong = lar[\"Long\"].dropna(inplace=False)\nLarloc.append(zip(lat,long))\n\n\nfor i in list(Larloc[0]):\n    fl.Circle(location=i,radius=30,color=\"orange\",fill_color=\"orange\",fill_opacity=0.7).add_to(Map)\nMap","11280b59":"**What is the crime??**<a id=\"What_is_the_crime\"><\/a> <br>\n\nCrime is a violation event of law.  However, triggers that are in the background of that instant event cannot be neglected. We have numerous triggers such as phycological effect, pecuniary case, public case, environmental factors. That list did not include people who have some sociological and phycological problems. Every crime type has some particular trigger. We try to find all the triggers but it is not easy. Because of that, we will enjoy it.\n","62475a9e":"**Other \/ District** <a id=\"Other\/District\"><\/a> <br>","f5b42b95":"**Part One \/ District** <a id=\"PortOne\/District\"><\/a> <br>","5dae562d":"# Solution tragedy ::\n\n In the end, I try to look at these graphs with the view of cops or rozzers. However, I am just an engineer and  I find a solution. I try my best but I just want to remind you that My solution cannot as well as a solution which is founded by Boston's abiders.\n\nWhen we analyze the favorite street part, We saw some site area. I think we can fix it by redemografication. I just a minute ago that word. Its mean is that it positively changes the all demographical configuration. Anddd problem creator cannot do that. This is our responsibility.  Nobody can face that issue better than us.\n\nAlso, we have some special suspension as C11 which plays for the peak in location\/crime such as AI. However, The job which explains that project for politicians as harder as ...(I cannot find any job equal that).people do not forget cops' mission for that AI. A\u0131 is a perfect machine but all machines need feedback from master people.\n","52e5eabc":"  **B2 -BLUE HILL AVE** ","55e6bd52":"# In a nutshell :\n\nIn this kernel, we try to exploit the Boston crime data set.\nwe analyze the most columns and If I can find some shining idea, I will add that kernel. However, the part which is most encourage me is feedback from you because I am still a beginner. \nIf you have any idea, please write the comment section. I will thank to your feedback. ","98dadb27":"**Unemployment rate\/crime count**<a id=\"Unemployment_rate\/crime_count\"><\/a> <br>","82e46a7a":"Crime structuring which is in D4 is not surprised. Enormes jammed housing, busy road, high density of public building ;\nthat is a feature of a metropolitan city. D4 needs our help immediately.D4 has 7 cake whish is have not several different each other in Stamen Terrain and that is good because when we fix one cake, we use the same solution way for others. cake. Nonetheless. Nonetheless, the various wedding cake was produced by D4 but It can fix smoothly.\n\n--I  want to create more answers on the D4 map. However, the copious reason is generated by the effect of location such as .... (That list is so long and I am a slothful man).\nAlso, nobody can estimate all reason because every second most reason will rotate. However, that impossible possibility can be transcendent ML project with time and endurance.-","84875a49":"The crime count increased in 2016 and 2017 but in 2018, we have a perfect decline. We do not know why we have this decline. My first estimate is that the data set mistake. In the graph which is down of the text show crimes of the last 3 month. And we already know that graph uploaded on the fourth of September. That's means, we have not got the last 3-month crime data. Tear\/Crime graph is affected by these missing data","3d1655e1":"**Devil of Boston** <a id=\"Devil_of_Boston\"><\/a> <br>","0f42c84c":"### The dispersion according to the location: ","90f463af":"I examine Larceny which is a favorite of the first slice with the map. The crime was not born in an area of overlap in the district. Source place of crime spread al district area unbalanced. That is soo good. I do not know how the border of the district affects Boston but in my hometown borders which is separate the district is a little problem for rozzers because most time criminals can spread both sides of the border.","66f3bdb2":"**Part three \/ District** <a id=\"PartThree\/District\"><\/a> <br>","bff49e4a":"In all maps or streets, the main problem is the wedding cake style because of the wedding most time calls gang !!\nEverybody knows that gangs cannot clear easily. Actually, You have another gang that is not a problem. The gang has one fundamental postulate which depends on loyalty. People who want to demolish this construction has a bigger lie than a lie which guard by the gang(And everybody knows that only two people can create this lie. 1-)Royal suspect 2-)politician. Both types are worst than others).","ec33b3bf":"In all maps or streets, the main problem is the wedding cake style because of the wedding most time calls gang !!\nEverybody knows that gangs cannot clear easily. Actually, You have another gang that is not a problem. The gang has one fundamental postulate which depends on loyalty. People who want to demolish this construction has a bigger lie than a lie which guard by the gang(And everybody knows that only two people can create this lie. 1-)Royal suspect 2-)politician. Both types are worst than others).\n\nLocation of the wedding cake :\n* Franklin Zoo Park\n* Woodcliff Street\n* Moreland Street\n* Hukins Street\n* Brunswick Street\n\nThese wedding cakes include the same crime type. My view, that is good but I live in a country which is far 1000km  from Baston, and I don not told my mind because that name is pontificating. The hardest part is that map between Castlegate Road to Stanwood Street. On this dangerous side, Boston has more than a wedding cake such as three wedding cake. I know that this is so mathematical comparison but that is a true and an enormous problem. Although cops usually use the powerful force to prohibit these wedding cakes, these problems were created by the demographical structure. Also we need a god of drawback (politician) to change the demographical composition.","78e8feed":"**Part Two \/ District** <a id=\"PartTwo\/District\"><\/a> <br>","e25f1685":"** Favorite street ** <a id=\"Favorite_street\"><\/a> <br>","2087068d":"People who lack of the regret emotion do not reject the opportunity of committing a crime. Remind that situation to say that aphorism \"If devil not be, God can be still a god?\"","2e262120":"Investigate Property(IP), Medical Assistance(MA), Motor Vehicle Accident Response(MVAR) share the peak in part three section. These crime types do not correlate with the demographical composition. As a result of that, we start the Anti-neighborhood district.\n\n:> A7-E15 __ Both district location is as same as the north and south pole. However, the offense rate as the same as each other. These small pieces of information can change our view of the neighborhood principle. \n\n:> E18-D14__ That couple which has a huge distance has a joint feature  which is IP and MA\n\nMaintenance data:\n\n:>B2-B3-C11__ This trinity was a leader every graph. Also, the location of that couple looks like the Bermuda Triangle. \nBecause of all these reasons, I especially focus on that group and try to find an extra creative solution.\n\n:> In the VD list, we saw top 3 ad A1, C13. That is a huge problem because Verbal Disputes symbolize the stress level and stress is the mother of all crime types. Somewhere, If you have many mothers, you will have many children.","fa4e3866":"![geojson_map.PNG](attachment:geojson_map.PNG)","b85a19c2":"# Introduction ::\n\n* What is the definition of crime? \n* Why we commit the crime? \n* What is the crime of fundamental? \n\nWe try to answer all these questions with little philosophy and little Kaggle dataset. I hope that we can answer all question in a notebook. However, this adventure will be 3 or 4 kernels. In this adventure, we analyze all crime data set which publishes in Kaggle and wrote (code) 5,8 notebook. I don't live in Boston or I never been Boston (Actually I have not got a  passport ). Because of that, I do not know anything about Boston. I try to do some consideration with the theory of the same human ( humans is the same everywhere ).\n\n**What we have ??**\n* [Import series](#Import_series)\n* [Data sets](#Data_sets)\n* [What is the crime](#What_is_the_crime)\n\nCRIME TYPE AND CRIME COUNT ::\n* [Crime type](#Crime_Type)\n\nTHE DISPERSION ACCORD\u0130NG TO THE LOCATION\n* [Unemployment rate\/crime count](#Unemployment_rate\/crime_count)\n\n\n* [Solution part of first section](#Solution_part_of_first_section)\n* [Highest crime type](#Highest_crime_type)\n* [Devil of Boston](#Devil_of_Boston)\n\nThe dispersion according to the location::\n* [Other \/ District](#Other\/District)\n* [Part One \/ District](#PartOne\/District)\n* [Part Two \/ District](#PartTwo\/District)\n* [Part Three \/ District](#PartThree\/District)\n* [Favorite street](#Favorite_street)\n\nSolution tragedy ::\n\nIn a nutshell ::","a2b5d657":"### Crime Type and Crime count ::","45b6ddd2":"-- I do know why I do that but in the next stage will be connected to this graph because of that I just want to show.--","22f43811":"South end 's  (D4) which is in the peak of Larceny population density is higher than two times of Boston general's population density (28,4\\13,6 ). Where the majority, shit there (That is a direct translation).However, our job is that create a solution. Let's do the first step of our job, find a problem.\n\n--[Kaynak : areavibes](http:\/\/www.areavibes.com\/boston-ma\/cost-of-living\/)--\n\n:> High life cost == If we find some connection with fight or escape which is a basic instinct, People seldom choose that leave our hometown and start a new life in another city. On the other hand, Most people choose that violate the Law of Government which does not care about the public. In this stage, Larceny is the best option. If you want more stable earning, you should choose LFMV.\n\n:> Aggravated Assault has not got a huge rate but It can draw attention with its location. In Roxbury (B2), North Dorchester (B3) and Dorchester(C11), Aggravated Assaultrate is as same as Larceny.\n\n:> Downtown(A1) is so far to trinity but it has the same rate as the trinity.","af7e556b":"**Solution part of first section ::** <a id=\"Solution_part_of_first_section\"><\/a> <br>\n\nWe can understand that a crowded environment which proper for crime is prepared by the festival with these 3 graphs and some internet searches. Because of that, we canceled all festival.\nThe first solution is more security person. However, the proudest feature of being a human is the emotion of taking initiative. That emotion can be used by guilty(I admire these guilty every time). We have a good science fiction solution which came from China which is an expert of crowded places. The solution is using AI for tracking people. Active human searching which is an important part of the AI system already using in China is very successful. The next step of that system is to combine the data set which includes identity, health information and criminal history of people. This is a very useful combine system but we need 5 or 10 years and a huge data set.\n\nPeople who lack of the regret emotion do not reject the opportunity of committing a crime. Remind that situation to say that aphorism \"If devil not be, God can be still a god?\"\n\nThe dispersion according to the location:\nIn the upper we have analyses that do bloodthirstily according to time. After all these graphs, the location was discovered by  Cihangir (Me). I try to find interesting something with the location data set.","ac7ad500":"![geojson_map.PNG](attachment:geojson_map.PNG)\n\n-- Boston haritas\u0131","8e7243db":"B3 have some problem which is more important than Accident such as Trump Tower. Miss Trump use their political authority and build some Trump cake in Boston D4.\n\n\nOur main sites :\n* Fairway street\n* Morton street\n* Harambee park\n* Vesta road\n* Columbia street\n\nThis comment may include observer mistake because We do not analyze a short street which is like B2's street. This is longer and already have more offense rate.","a2408f58":"Other part which is in other section in ucrpart in the first place this graph. Because of these Others, I cannot do many remarks. However; in the other graphs, I will do more remark with my experience which gains in eighteen years.","03eb2468":"It seems like Boston's people got their driver's license from the butcher(Agin that is idiom).--I am just joking, most probably all driver who join that accident better driver than me.--","3647e584":"**Highest crime type**<a id=\"Highest_crime_type\"><\/a> <br>","56edf73a":"**B3 - BLUE HILL AVE **","b48b0246":"**Crime type**  <a id=\"Crime_Type\"><\/a> <br>\n\nWe can understand easily crime count. Downtown which saw easily did not want a guide. (That is Turkish idiom. I use direct translation because \u0131 want culture mix.) That mean is more fun.","4f066a41":"The first 3 places were shared by Drug Violation[DV], Simple Assault[SA], Vandalism[V]. The idiom which is  that Grapes Which is near another dark grape will get dark was confirmed by B2, B3, and C11\n\nRoxbury (B2) and Dorchester(C11)'s crime rate is so same. Because of that, we may think the demographical structure of this district looks similar. However, we do not forget the principle of repetition. Let's look at the other four graphs.\n\nDowntown (A1) and South End (D4) can catch direct proportion on SA and DV but they cannot show the equivalent performance in Vandalism. I do not know anything about this issue (Maybe they have not enough public building). I need some help people who live in Boston.\n\nThe neighborhood principle can be confirmed by East Boston (A7) and Charlestown (A15). Both districts have below and likewise rate. ","2f9c52b0":"\n### The dispersion according to the location:\n\nIn the upper we have analyses that do bloodthirstily according to time. After all these graphs, the location was discovered by  Cihangir (Me). I try to find interesting something with the location data set.","bcc6917d":"**Data sets**<a id=\"Data_sets\"><\/a> <br>","98b8cf0f":"The offense rate correlates strongly with the unemployment rate. Result of these correlations we use another data set to draw the Month\/Unemployment rate graph. Anddd we saw the unemployment rate is not a huge effect of the crime rate. However, This is a good result for us. As we know that we should find more reasons for the crime.","c4731961":"**Import series** <a id=\"Import_series\"><\/a> <br>","c359a509":"When I analyzed the C11 map, I cannot give the location of the wedding cake because I have limited space in the kernel. The main drawback location is all street which is the upper side of Ashmont Peabody square.\n\nI want to do some criticism for the city but that is so complicated crime graph. However, I am far from Boston."}}