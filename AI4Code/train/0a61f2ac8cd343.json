{"cell_type":{"8eeed7db":"code","70eb6a59":"code","c4049277":"code","e615d0ed":"code","f61bd829":"code","9b1499f8":"code","fdd592ee":"code","6ac637f1":"code","24a8c2bb":"code","b193d98c":"code","97396a27":"code","54750e95":"code","06df4df4":"code","2eefd28f":"code","cdacba3c":"markdown","e314e5d3":"markdown","106b5ed4":"markdown","21c17000":"markdown","4ead8900":"markdown","f1cadc70":"markdown","7564ed4a":"markdown"},"source":{"8eeed7db":"#imports\nimport numpy as np\nimport pandas as pd\n\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge\nfrom sklearn.ensemble import GradientBoostingRegressor,RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_absolute_error","70eb6a59":"#load dataset\ndataset = pd.read_csv(\"..\/input\/concrete-compressive-strength-uci\/Concrete_Data.csv\")\nprint('dataset shape: ', dataset.shape)\ndataset.head()","c4049277":"#arrange data into separate dataframes for features (x) and targets (y)\nx = dataset.drop(['Concrete compressive strength(MPa, megapascals) '], axis=1)\ny = dataset['Concrete compressive strength(MPa, megapascals) ']","e615d0ed":"#check for missing data\nx.isnull().sum()","f61bd829":"#take a first look at the different features and their values\nx.astype('category').describe()","9b1499f8":"#drop specific features, test later\nprint(x.shape)\nx_less_features = x.drop(['Blast Furnace Slag (component 2)(kg in a m^3 mixture)','Fly Ash (component 3)(kg in a m^3 mixture)','Superplasticizer (component 5)(kg in a m^3 mixture)'], axis=1)\nprint(x_less_features.shape)","fdd592ee":"#take a look at the target values\ny.describe()","6ac637f1":"sns.displot(y)","24a8c2bb":"#check for correlation between features\nsns.heatmap(dataset.corr(), annot=True)","b193d98c":"sns.pairplot(dataset)","97396a27":"#normalize data and split into train and test sets\nx_scaled = StandardScaler().fit_transform(x)\ny_scaled = LabelEncoder().fit_transform(y)\nx_train, x_test, y_train, y_test = train_test_split(x_scaled, y_scaled, test_size=0.3, random_state=42)\nx_less_features_train, x_less_features_test, y_less_features_train, y_less_features_test = train_test_split(x_scaled, y_scaled, test_size=0.3, random_state=42)","54750e95":"regressors = {\n    \"LinearRegression\": LinearRegression(),\n    \"Lasso\": Lasso(alpha=0.1),\n    \"Ridge\": Ridge(),\n    \"RandomForest\": RandomForestRegressor(),\n    \"GradientBoosting\": GradientBoostingRegressor(max_depth=4),\n    \"XGBoost\": XGBRegressor()\n}\n\nfor key, regressor in regressors.items():\n    regressor.fit(x_train, y_train)\n    training_score = cross_val_score(regressor, x_train, y_train, cv=5, scoring='neg_mean_absolute_error')\n    print(f\"{regressor.__class__.__name__} has a training mean MAE score of {abs(training_score).mean():.2f}\")\n","06df4df4":"#let's see what happens when we use less features\nfor key, regressor in regressors.items():\n    regressor.fit(x_less_features_train, y_less_features_train)\n    training_score = cross_val_score(regressor, x_less_features_train, y_less_features_train, cv=5, scoring='neg_mean_absolute_error')\n    print(f\"{regressor.__class__.__name__} has a training mean MAE score of {abs(training_score).mean():.2f}\")","2eefd28f":"for key, regressor in regressors.items():\n    y_pred = regressor.predict(x_less_features_test)\n    test_score = mean_absolute_error(y_pred, y_less_features_test)\n    print(f\"{regressor.__class__.__name__} has a final MAE score of {abs(test_score):.2f}\")","cdacba3c":"After trying a few different hyperparameters, XGB achieved the best result, with the lowest training MAE score.\nLet's see what happens on the final test set:","e314e5d3":"XGBoost has the best performance on the test set, with the lowest MAE compared to the other models.","106b5ed4":"Now we can start. First - organize the data.","21c17000":"Build models and compare results.","4ead8900":"It seems there is barely any difference so we'll continue without them.","f1cadc70":"Notice how 3 of the features have a lot of zero values, they could be relatively less informative than the other features.","7564ed4a":"### The goal of this project is to practice working with basic regression models:\n1. Conduct standard exploratory data analysis to try and understand the data.\n2. Split data into train and test sets and preprocess the data.\n3. Train several regression models and compare results using test set."}}