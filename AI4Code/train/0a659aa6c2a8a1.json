{"cell_type":{"44e6376b":"code","94a0b14b":"code","de1df2f4":"code","6d978eef":"code","128d49e7":"code","f8a72f3f":"code","fd1e1c74":"code","02c819bf":"code","6c569d24":"code","d3e6096d":"code","b4a372f8":"code","9c328761":"code","e3c98ba8":"code","020566b1":"code","fa7f0beb":"code","ae76c3e9":"code","39a0f714":"code","989b79fe":"code","9b5fb925":"code","8f92020d":"code","7e360fc1":"code","7e5be001":"code","1acd2bd7":"code","7c6af1e6":"code","bb1c805c":"code","0bf47e95":"code","c06550f4":"code","01a00b8d":"code","fcc36b78":"code","82c2fbd6":"code","3e20da36":"code","9061d907":"code","c8f132ab":"code","dfd385bd":"code","e2191cf5":"code","576d3fe8":"code","7ef99ce5":"code","8a82d2c7":"code","f03bd6a3":"code","bb6b2b1a":"code","9c2a5fe0":"code","8061c1ef":"code","6e365311":"code","13c7df16":"code","c57c6d34":"code","037cb010":"code","da40b684":"code","cf0333bf":"code","115e29d4":"code","446c2774":"code","ee35e2ba":"code","9482d4c1":"code","278c9a94":"code","0acc871b":"code","88160713":"code","b37431e9":"code","a08759c4":"code","e1ea9434":"code","c60aca83":"code","df6217ba":"code","b0cbd6ee":"code","6aa7717f":"code","4ed31515":"code","db6e5e49":"code","2c4aef5e":"code","9a2b3aed":"code","b75e6bbb":"code","f0b41771":"code","b01a1235":"code","30adabef":"code","ee387af6":"code","cf7b7567":"code","4e622915":"code","9d095fc6":"code","cc2f52b4":"code","83acc109":"code","2bb86beb":"code","bb363567":"code","1c70916c":"code","1011e307":"code","3b83b659":"code","718fcce4":"code","1958b4a6":"code","21dea0b3":"code","98b15a5e":"code","44303dc6":"code","a541f5c2":"code","8fecdb87":"code","0e077750":"code","1c480906":"code","04c85784":"code","3a25df2e":"code","5174b2a3":"code","66de19e4":"code","38fc8316":"code","89b8abab":"code","dc4d5a29":"code","2650005d":"code","2f11516b":"code","381c42e6":"code","9b26ef44":"code","0204b3e3":"code","f5ba8181":"code","279254f6":"code","e9bf2203":"code","767cc550":"code","c124020e":"code","3e4217f2":"code","65e495dc":"code","f72bb3c8":"code","2819c79f":"code","cdc7e036":"code","4d1de6f6":"code","05d2f33e":"code","8b371c39":"code","e970197a":"code","4d623a54":"code","4d3454bf":"code","fe533626":"code","ec1f11dd":"code","64e513e2":"code","fdc73851":"code","0b785bc4":"code","4b26118b":"code","8f582550":"code","b2fd2f82":"code","166618bf":"code","dd24fcfe":"code","18c50c82":"code","f4a61a84":"code","c9426088":"code","53d1a649":"code","5fc59c12":"code","035e9435":"code","5242b662":"code","f591c598":"code","ac204fa3":"code","5c7a882a":"code","f15d08c6":"code","10f4a329":"code","5aabad50":"code","7062e274":"code","3b80bfea":"code","0216b029":"code","dfc8ab06":"code","14c9ca62":"code","67f7a3aa":"code","fda14870":"code","fa22faa4":"code","70d3cc61":"code","d737c946":"markdown","9ead7dcf":"markdown","2ec35671":"markdown","0f9beefe":"markdown","b79e18a8":"markdown","1b047a89":"markdown","a7a9df4d":"markdown","34f40134":"markdown","2538c9cf":"markdown","aaa26816":"markdown","18f9639d":"markdown","557e3a7e":"markdown","073e1e68":"markdown","e6bc3f0a":"markdown","8b5c7547":"markdown","18df2d2d":"markdown","1a09199a":"markdown","037b0cb8":"markdown","ad2f321f":"markdown","acd90a43":"markdown","23890b22":"markdown","2fbb101b":"markdown","bbf9b39d":"markdown","107e6326":"markdown","73a47aaa":"markdown","2ce69543":"markdown","7065933c":"markdown","0baedf00":"markdown","d6251992":"markdown","cf56e193":"markdown","a8dfa036":"markdown","92804e32":"markdown","7dfd2559":"markdown","18d19121":"markdown","a056a12f":"markdown","7c0bad93":"markdown","11d01cc7":"markdown","956a397f":"markdown","153062f8":"markdown","f174142f":"markdown","9e251c3c":"markdown","86d43f10":"markdown","391b5c21":"markdown","fb6ae8ee":"markdown","ca79b738":"markdown","c4f20d5f":"markdown","86d46466":"markdown","dc6ffd2f":"markdown","97e5166a":"markdown","acc717e1":"markdown","c789eb39":"markdown","a807ea8d":"markdown","2eea74e9":"markdown","5cf51d9a":"markdown","038294a2":"markdown","46ac19ca":"markdown","d219f923":"markdown","3070e75b":"markdown","3ae590e3":"markdown","8729ac8c":"markdown","9c748050":"markdown","820b6b2e":"markdown","bf12ef9b":"markdown","f8d253f9":"markdown","6c49ed8f":"markdown","512f4990":"markdown","0376e2c9":"markdown","2ae7d285":"markdown","e3825318":"markdown","fd197df5":"markdown","af4f6cc0":"markdown","ea8380c9":"markdown","84a9cd3e":"markdown","8f2a014e":"markdown","dcc1fab4":"markdown","6fc65d20":"markdown","925e6f74":"markdown","8a8b3a5b":"markdown","1bd75433":"markdown","e93df719":"markdown","8f28579e":"markdown","050a3c0a":"markdown"},"source":{"44e6376b":"import pandas as pd # For Data Visualization\nimport numpy as np # For Numerical activities\n\nimport matplotlib.pyplot as plt # For Visualization\nimport seaborn as sns # For Visualization\nimport folium # For Map Visualization\n\nplt.style.use('fivethirtyeight') # For Nice Viz\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n","94a0b14b":"pd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)","de1df2f4":"df = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")","6d978eef":"df.head()","128d49e7":"df.info()","f8a72f3f":"df.date = pd.to_datetime(df.date)","fd1e1c74":"df.info()","02c819bf":"df.describe()","6c569d24":"df.isnull().sum()","d3e6096d":"df.isnull().sum().plot(kind='bar')\nplt.title(\"Null Values\")\nplt.xlabel(\"Attributes\")\nplt.ylabel(\"Null Counts\")\nplt.show()","b4a372f8":"id_vs_price = df[[\"id\",\"price\"]].copy()","9c328761":"id_vs_price","e3c98ba8":"norm = MinMaxScaler()\nid_vs_price[\"id\"] = norm.fit_transform(id_vs_price[[\"id\"]])","020566b1":"plt.plot(id_vs_price['id'], id_vs_price['price'], \n         color='#8f3a84', marker='*', linestyle='solid', \n         markersize=12, linewidth=3, label=\"Price\")\nplt.xlabel(\"ID\")\nplt.ylabel(\"Price\")\nplt.legend()\nplt.title(\"ID Vs Price\")\nplt.show()","fa7f0beb":"sns.scatterplot(data=id_vs_price, x=\"price\", y=\"id\")","ae76c3e9":"id_vs_price.corr()","39a0f714":"df.columns","989b79fe":"# Range of Bedrooms values\ndf.bedrooms.unique()","9b5fb925":"df.groupby('bedrooms').price.mean().plot(kind='bar')\nplt.xlabel(\"No. of bedrooms\")\nplt.ylabel(\"Mean Price\")\nplt.title(\"Price vs Bedrooms\")\nplt.legend()","8f92020d":"plt.figure(figsize=(12,10))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"bedrooms\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"Bedrooms Distributions\")","7e360fc1":"# With Mean\nbedroom_price = df.groupby('bedrooms').price.median()\nsns.barplot(x=bedroom_price.index, y=bedroom_price.values, dodge=False)\nplt.xlabel(\"No. of bedrooms\")\nplt.ylabel(\"Median Price\")\nplt.title(\"Price vs Bedrooms\")","7e5be001":"df[[\"bedrooms\",\"price\"]].corr()","1acd2bd7":"# Range of Bathrooms values\ndf.bathrooms.unique()","7c6af1e6":"bathroom_sort = df.bathrooms.value_counts().sort_index()","bb1c805c":"plt.figure(figsize=(10, 7))\ndf.groupby('bathrooms').price.median().plot(kind='bar')\nplt.xlabel(\"No. of bathrooms\")\nplt.ylabel(\"Median Price\")\nplt.title(\"Price vs Bathrooms\")\nplt.legend()","0bf47e95":"bathroom_sort","c06550f4":"# Value Counts - Distribution\nplt.figure(figsize=(10,5))\nsns.barplot(x=bathroom_sort.index, y=bathroom_sort.values, dodge=False)\nplt.xlabel(\"No. of bathroom\")\nplt.ylabel(\"Distribution\")\nplt.title(\"Bathroom Distribution\")\nplt.xticks(rotation=90)\nplt.show()","01a00b8d":"plt.figure(figsize=(12,10))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"bathrooms\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"Bathrooms Distributions\")","fcc36b78":"# Find the correlation of bathroom with price\ndf[['bathrooms','price']].corr()","82c2fbd6":"df[\"bathroom_category\"] = df[\"bathrooms\"].apply(lambda x: x if x<5.5 else 10)","3e20da36":"# Find the correlation of bathroom with price\ndf[['bathroom_category','price']].corr()","9061d907":"# Value Counts - Distribution\nplt.figure(figsize=(10,5))\nbathroom_sort = df.bathroom_category.value_counts().sort_index()\nsns.barplot(x=bathroom_sort.index, y=bathroom_sort.values, dodge=False)\nplt.xlabel(\"No. of bathroom\")\nplt.ylabel(\"Distribution\")\nplt.title(\"Bathroom Distribution\")\nplt.xticks(rotation=90)\nplt.show()","c8f132ab":"df.groupby(\"bedrooms\").bathrooms.value_counts().unstack()","dfd385bd":"df.columns","e2191cf5":"df.groupby(\"bedrooms\").bathrooms.sum()","576d3fe8":"deletion_mask = (df.bedrooms.isin([11, 33]))","7ef99ce5":"deletion_mask","8a82d2c7":"df.drop(df[deletion_mask].index,axis=0,inplace=True)","f03bd6a3":"df.groupby(\"bedrooms\").bathrooms.sum()","bb6b2b1a":"# Find the correlation of bathroom with price\ndf[['bathrooms','price']].corr()","9c2a5fe0":"# Find the correlation of bathroom with price\ndf[['bathroom_category','price']].corr()","8061c1ef":"sqft_srs = df[['sqft_living','price']].sort_values(by='sqft_living')","6e365311":"sqft_df = sqft_srs.reset_index().drop('index',axis=1)","13c7df16":"sns.scatterplot(data=sqft_df, x=\"sqft_living\", y=\"price\")","c57c6d34":"sns.regplot(x=\"sqft_living\", y=\"price\", data=sqft_df)","037cb010":"sqft_df.corr()","da40b684":"df.columns","cf0333bf":"sqft_srs = df[['sqft_lot','price']].sort_values(by='sqft_lot')","115e29d4":"sqft_df = sqft_srs.reset_index().drop('index',axis=1)","446c2774":"sns.scatterplot(data=sqft_df, x=\"sqft_lot\", y=\"price\")","ee35e2ba":"sns.regplot(x=\"sqft_lot\", y=\"price\", data=sqft_df)","9482d4c1":"sqft_df.corr()","278c9a94":"df.floors.unique()","0acc871b":"df.floors.value_counts()","88160713":"sns.set(style=\"whitegrid\")\nplt.figure(figsize=(12,5))\n\ntotal = float(df.shape[0])\n\nax = sns.countplot(x=\"floors\", data=df)\nplt.title('Floors Distribution', fontsize=20)\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='center')\nplt.xlabel(\"Floors\")\nplt.ylabel(\"Count\")\nplt.show()","b37431e9":"plt.figure(figsize=(12,10))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"floors\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"Floors Distributions\")","a08759c4":"df.groupby('floors').price.max()","e1ea9434":"df.groupby('floors').price.median()","c60aca83":"df[[\"floors\",\"price\"]].corr()","df6217ba":"df.columns","b0cbd6ee":"df.waterfront.unique()","6aa7717f":"df.waterfront.corr(df.price)","4ed31515":"plt.figure(figsize=(12,5))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"waterfront\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"Waterfront Distributions\")","db6e5e49":"df.waterfront.value_counts()","2c4aef5e":"df.view.unique()","9a2b3aed":"df.groupby(\"view\").price.mean().plot(kind=\"bar\")","b75e6bbb":"plt.figure(figsize=(12,5))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"view\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"View Distributions\")","f0b41771":"df[[\"view\",\"price\"]].corr()","b01a1235":"df.condition.unique()","30adabef":"df.groupby(\"condition\").price.mean().plot(kind=\"bar\")","ee387af6":"plt.figure(figsize=(12,5))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"condition\", y=\"price\", data=df, palette=\"Set3\")\nplt.title(\"Condition Distributions\")","cf7b7567":"df[[\"condition\",\"price\"]].corr()","4e622915":"df.grade.unique()","9d095fc6":"df.groupby(\"grade\").price.mean().plot(kind=\"bar\")","cc2f52b4":"df.grade.corr(df.price)","83acc109":"df.sqft_above.dtype","2bb86beb":"df[[\"sqft_above\",\"price\"]]","bb363567":"df[[\"sqft_above\",\"price\"]].corr()","1c70916c":"sns.scatterplot(data=df, x=\"sqft_above\", y=\"price\")","1011e307":"sns.regplot(data=df, x=\"sqft_above\", y=\"price\")","3b83b659":"df.sqft_basement.dtype","718fcce4":"df[[\"sqft_basement\",\"price\"]]","1958b4a6":"sns.scatterplot(data=df, x=\"sqft_basement\", y=\"price\")","21dea0b3":"sns.regplot(data=df, x=\"sqft_basement\", y=\"price\")","98b15a5e":"df[[\"sqft_basement\",\"price\"]].corr()","44303dc6":"df.yr_built.unique()","a541f5c2":"df.yr_built.value_counts()","8fecdb87":"df[[\"yr_built\",\"price\"]]","0e077750":"df[[\"yr_built\",\"price\"]].corr()","1c480906":"df.yr_renovated.unique()","04c85784":"df[df.yr_renovated==0]","3a25df2e":"df[[\"yr_renovated\",\"price\"]].corr()","5174b2a3":"df.zipcode.unique()","66de19e4":"df.zipcode.value_counts()","38fc8316":"df[[\"zipcode\",\"price\"]].corr()","89b8abab":"df[[\"lat\",\"long\"]]","dc4d5a29":"from glob import glob\nfrom folium import plugins\nfrom folium.plugins import HeatMap\n\n\nm = folium.Map([47, -122], tiles='stamentoner', zoom_start=6)\ndata = df[[\"lat\",\"long\"]].values.tolist()\nHeatMap(data).add_to(folium.FeatureGroup(name='Heat Map').add_to(m))\nfolium.LayerControl().add_to(m)\n\nm","2650005d":"for index, row in df.iterrows():\n    folium.CircleMarker([row['lat'], row['long']],\n                        radius=15,\n                        popup=row['price'],\n                        fill_color=\"#3db7e4\",\n                       ).add_to(m)\nm","2f11516b":"df.sqft_living15.dtype","381c42e6":"df[[\"sqft_living15\", \"price\"]]","9b26ef44":"sns.scatterplot(data=df, x=\"sqft_living15\", y=\"price\")","0204b3e3":"sns.regplot(data=df, x=\"sqft_living15\", y=\"price\")","f5ba8181":"df[[\"sqft_living15\", \"price\"]].corr()","279254f6":"df.sqft_lot15.dtype","e9bf2203":"df[[\"sqft_lot15\", \"price\"]]","767cc550":"sns.scatterplot(data=df, x=\"sqft_lot15\", y=\"price\")","c124020e":"sns.regplot(data=df, x=\"sqft_lot15\", y=\"price\")","3e4217f2":"df[[\"sqft_lot15\",\"price\"]].corr()","65e495dc":"fltrd_df = df[[\"bedrooms\",'bathrooms','sqft_living',\"floors\",\"waterfront\",\"view\",\"grade\",\"sqft_above\",\"sqft_basement\", \"condition\",\"yr_built\",\"yr_renovated\", \"zipcode\",\"lat\",\"long\",\"price\"]]","f72bb3c8":"fltrd_df","2819c79f":"fltrd_df[[\"yr_built\",\"yr_renovated\"]]","cdc7e036":"fltrd_df[\"yr_gap\"] = fltrd_df[\"yr_renovated\"] - fltrd_df[\"yr_built\"]\nfltrd_df[\"yr_gap\"] = fltrd_df[\"yr_gap\"].apply(lambda x : x if x >=0 else -1)","4d1de6f6":"fltrd_df[\"yr_gap\"].corr(fltrd_df[\"price\"])","05d2f33e":"fltrd_df.yr_gap.unique()","8b371c39":"def apply_gap_in_yr(x):\n    if x >= 0 and x <= 10:\n        return 1\n    elif x >= 11 and x <= 20:\n        return 2\n    elif x>=21 and x<=30:\n        return 3\n    elif x>=31 and x<=40:\n        return 4\n    elif x>=41 and x<=50:\n        return 5\n    elif x>=51 and x<=60:\n        return 6\n    elif x>=61 and x<=70:\n        return 7\n    elif x>=71 and x<=80:\n        return 8\n    elif x>=81 and x<=90:\n        return 9\n    elif x>=91 and x<=100:\n        return 10\n    elif x>=101:\n        return 11\n    else:\n        return x","e970197a":"fltrd_df[\"yr_gap\"] = fltrd_df[\"yr_gap\"].apply(apply_gap_in_yr)","4d623a54":"fltrd_df.groupby(\"yr_gap\").price.max()","4d3454bf":"fltrd_df[\"yr_gap\"].corr(fltrd_df[\"price\"])","fe533626":"plt.figure(figsize=(15,10))\nsns.heatmap(fltrd_df.corr(), annot = True)","ec1f11dd":"# Model Imports\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler","64e513e2":"models_data = []","fdc73851":"width = 12\nheight = 10\nplt.figure(figsize=(width, height))\nsns.regplot(x=\"sqft_living\", y=\"price\", data=fltrd_df)\nplt.ylim(0,)","0b785bc4":"X = fltrd_df[[\"sqft_living\"]]\nY = fltrd_df[[\"price\"]]\nlr = LinearRegression()\nlr.fit(X, Y)\n\nprint(lr.coef_, lr.intercept_)\nprint(lr.predict(X.head()))\n\nprint(Y.head())\n\nprint(\"Final Score\", lr.score(X, Y))","4b26118b":"X = fltrd_df[[\"grade\"]]\nY = fltrd_df[[\"price\"]]\nlr = LinearRegression()\nlr.fit(X, Y)\n\nprint(lr.coef_, lr.intercept_)\nprint(lr.predict(X.head()))\n\nprint(Y.head())\n\nprint(\"Final Score\", lr.score(X, Y))","8f582550":"X = fltrd_df[[\"bathrooms\"]]\nY = fltrd_df[[\"price\"]]\nlr = LinearRegression()\nlr.fit(X, Y)\n\nprint(lr.coef_, lr.intercept_)\nprint(lr.predict(X.head()))\n\nprint(Y.head())\n\nprint(\"Final Score\", lr.score(X, Y))","b2fd2f82":"X = fltrd_df[[\"view\"]]\nY = fltrd_df[[\"price\"]]\nlr = LinearRegression()\nlr.fit(X, Y)\n\nprint(lr.coef_, lr.intercept_)\nprint(lr.predict(X.head()))\n\nprint(Y.head())\n\nprint(\"Final Score\", lr.score(X, Y))","166618bf":"X = fltrd_df.drop([\"waterfront\", \"condition\", \"yr_built\", \"zipcode\",\"lat\",\"long\", \"price\"], axis=1)\nY = fltrd_df[\"price\"]\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30, random_state=42)\n\n","dd24fcfe":"X.head()","18c50c82":"lr = LinearRegression()\nlr.fit(X_train,y_train)\nlr.score(X_train, y_train)","f4a61a84":"# Training data\ny_hat = lr.predict(X_train)\nprint(\"MSE\", mean_squared_error(y_train, y_hat))\nprint(\"MAE\", mean_absolute_error(y_train, y_hat))\nprint(\"Score\", r2_score(y_train, y_hat))","c9426088":"# Testing data\ny_hat = lr.predict(X_test)\nprint(\"MSE\", mean_squared_error(y_test, y_hat))\nprint(\"MAE\", mean_absolute_error(y_test, y_hat))\nprint(\"Score\", r2_score(y_test, y_hat))","53d1a649":"lr.score(X_test,y_test)","5fc59c12":"pr=PolynomialFeatures(degree=2)\npr","035e9435":"X_pr = pr.fit_transform(X)","5242b662":"X_train_pr, X_test_pr, y_train, y_test = train_test_split(X_pr, Y, test_size=0.30, random_state=42)\n","f591c598":"lr = LinearRegression()\nlr.fit(X_train,y_train)\nlr.score(X_train, y_train)","ac204fa3":"lr = LinearRegression()\nlr.fit(X_train_pr,y_train)\nlr.score(X_train_pr, y_train)\n# after polynomial conversion accuracy had improved","5c7a882a":"y_pred = lr.predict(X_pr)","f15d08c6":"plt.figure(figsize=(12, 10))\n\nax1 = sns.distplot(fltrd_df['price'], hist=False, color=\"r\", label=\"Actual Value\") # hist=True\nsns.distplot(y_pred, hist=False, color=\"b\", label=\"Predicted Values\" , ax=ax1)\n\n\nplt.title('Actual vs Predicted Values for House')\nplt.xlabel('Price')\nplt.ylabel('Proportion of House')\n\nplt.show()\nplt.close()","10f4a329":"y_hat = lr.predict(X_test_pr)\nprint(\"MSE\", mean_squared_error(y_test, y_hat))\nprint(\"MAE\", mean_absolute_error(y_test, y_hat))\nprint(\"Score\", r2_score(y_test, y_hat))","5aabad50":"X = fltrd_df[[\"sqft_living\"]]\nnorm = MinMaxScaler()\nX = norm.fit_transform(X)\nY = fltrd_df[[\"price\"]]\nlr = LinearRegression()\nlr.fit(X, Y)\n\nprint(lr.coef_, lr.intercept_)\nprint(lr.predict(X[:5]))\n\nprint(Y.head())\n\nprint(\"Final Score\", lr.score(X, Y))","7062e274":"X = fltrd_df.drop([\"waterfront\", \"condition\", \"yr_built\", \"zipcode\",\"lat\",\"long\",\"price\"], axis=1)\nY = fltrd_df[\"price\"]","3b80bfea":"norm = MinMaxScaler()\npr = PolynomialFeatures(2)","0216b029":"X_norm = norm.fit_transform(X)\nX_pr = pr.fit_transform(X_norm)","dfc8ab06":"X_train_pr, X_test_pr, y_train, y_test = train_test_split(X_pr, Y, test_size=0.30, random_state=42)\n","14c9ca62":"\nlr_pr = LinearRegression()\nlr_pr.fit(X_train_pr,y_train)\nlr_pr.score(X_train_pr, y_train)\ny_hat = lr_pr.predict(X_train_pr)\nprint(\"MSE\", mean_squared_error(y_train, y_hat))\nprint(\"MAE\", mean_absolute_error(y_train, y_hat))\nprint(\"Score\", r2_score(y_train, y_hat))","67f7a3aa":"X_train_pr.shape","fda14870":"X_test_pr.shape","fa22faa4":"y_hat = lr_pr.predict(X_test_pr)","70d3cc61":"# Testing data\nprint(\"MSE\", mean_squared_error(y_test, y_hat))\nprint(\"MAE\", mean_absolute_error(y_test, y_hat))\nprint(\"Score\", r2_score(y_test, y_hat))","d737c946":"## 2. Multivariate","9ead7dcf":"## 3. Polynomial","2ec35671":" The square footage of the interior housing space that is below ground level","0f9beefe":"#### Inference: \nOn considering only floors, we are having positive correlation, but its small only. We can checkout the upcoming columns and will try to create a column - Feature Engineering\n","b79e18a8":"#### Inference:\nRelation between Sqft_above and Price is good. 60.5 %","1b047a89":"## 1. Univariate Model ","a7a9df4d":"# 3. Data preparation and Visualizations","34f40134":"## 16. Yr_renovated vs Price","2538c9cf":"#### Inference: \nYr_built is having very less positive corelation.","aaa26816":"## 15. Yr_built vs Price","18f9639d":"We wont be buying a house on any places. If the place\/locality is good then only we will start thinking about buying and all attributes related.","557e3a7e":"## 20. Sqft_lot15","073e1e68":"#### Inference:\nThe reason for low corelation is, median is almost in a common range. Since its low we can ignore it. ","e6bc3f0a":"#### Inference:\n1. From the above we can see that we can <b> Median <\/b> Price is rising till 9 and dropping and raising again. So we can see futher whether the bedroom is also affected by some other values and we can change the values of these categorical values. \n\n2. Bedrooms is having a correlation of 0.30 ","8b5c7547":"#### Inference:\nGrade is having a good Correlation of 66.7%","18df2d2d":" Unique ID for each home sold","1a09199a":"# Unexplored Options:\n1. Hypothesis: Cost of the house is dependant on the area (Near to public communities). We can use lat long to create a cluster of n numbers and based on that we can categorize the data and use it for predictions. \n\n2. We can find a relationship between bathroom and bedroom ; use it for predictions. \n\n## If you find any other interesting options please share it in comments. \n## If you like it, Click on the Upvote Button. ","037b0cb8":"#### Inference:\nSqft_living is having good Corr with Price. about 58.5 %","ad2f321f":"Square footage of the land space","acd90a43":"from the above we can see that, a house with 11 bedrooms is having only 3 bathrooms and a house with 33 bedrooms !\nis having only 1.75 bathrooms . \n\n\nI Feel these are some outlier data so we can remove it. ","23890b22":"# 4. Feature Engineering","2fbb101b":"Number of bathrooms, where .5 accounts for a room with a toilet but no shower","bbf9b39d":"From the above plot, we can see that mean price of a house with bedrooms in the range 1-8 its increasing and then its decreasing. ","107e6326":"## 1. Overview of the above Data Preparation\n\n1. No Null Values. \n2. We will be concentrating only on \n     1. \u2705 Bedroom\n     2. \u2705 Bathrooms\n     3. \u2705 SqftLiving\n     4. \u2705 Floors\n     5. \u2705 Waterfront\n     6. \u2705 View\n     7. \u2705 Grade\n     8. \u2705 SqftAbove\n     9. \u2705 sqft_basement\n     10. \u2705 sqft_living15\n3. Possible feature engineering in , \n    1. Bedroom and Bathroom\n    2. Floors\n    3. View\n    4. Condition\n    5. YrBuilt and Year Renovation\n    6. Zipcode with Lat Long -> Clustering a particular area\n ","73a47aaa":"## 3. Year Built and Renovated","2ce69543":"# Problem Description\n\nPredict the house price based on the given attributes using regression with the following approaches. \n\n1. Univariate\n2. Multivariate\n3. Polynomial\n4. Univariate with Normalization\n5. Polynomial with Normalization\n\n\n# <b>Data Description:<\/b>\n\n1. Id - Unique ID for each home sold\n2. date - Date of the home sale\n3. price - Price of each home sold\n4. bedrooms - Number of bedrooms\n5. bathrooms - Number of bathrooms, where .5 accounts for a room with a toilet but no shower\n6. sqft_living - Square footage of the apartments interior living space\n7. sqft_lot - Square footage of the land space\n8. floors - Number of floors\n9. waterfront - A dummy variable for whether the apartment was overlooking the waterfront or not\n10. view - An index from 0 to 4 of how good the view of the property was\n11. condition - An index from 1 to 5 on the condition of the apartment,\n12. grade - An index from 1 to 13, where 1-3 falls short of building construction and design, 7 has an average level of construction and design, and 11-13 have a high quality level of construction and design.\n13. sqft_above - The square footage of the interior housing space that is above ground level\n14. sqft_basement - The square footage of the interior housing space that is below ground level\n15. yr_built - The year the house was initially built\n16. yr_renovated - The year of the house\u2019s last renovation\n17. zipcode - What zipcode area the house is in\n18. lat - Lattitude\n19. long - Longitude\n20. sqft_living15 - The square footage of interior housing living space for the nearest 15 neighbors\n21. sqft_lot15 - The square footage of the land lots of the nearest 15 neighbors\n\n\nHere, Price is our dependant variable\n","7065933c":" The square footage of interior housing living space for the nearest 15 neighbors","0baedf00":"#### Inference \nIts having lower corelation, so we can ignore it. ","d6251992":"## 4. Univariate with Normalization","cf56e193":"A dummy variable for whether the apartment was overlooking the waterfront or not","a8dfa036":"#### Inference\nView is having a good corelation of 39.7 %","92804e32":"## 13. Sqft Above vs Price","7dfd2559":"#### Inference:\nIts having very less positive correlation","18d19121":"The year the house was initially built","a056a12f":"## 2. Finding Null Values","7c0bad93":"#### Inference:\nZipcode is having a negative correlation. ","11d01cc7":"1. [Loading Libraries](#1.-Loading-Libraries)\n2. [Loading Data](#2.-Loading-Data)\n3. [Data preparation and Visualizations](#3.-Data-preparation-and-Visualizations)\n    1. [Checking Datatypes and Description of Data](#1.-Checking-Datatypes-and-Description-of-Data)\n    2. [Finding Null Values](#2.-Finding-Null-Values)\n    3. [Id Vs Price](#3.-ID-with-Price)\n    4. [Bedrooms Vs Price](#4.-Bedrooms-Vs-Price)\n    5. [Bathrooms vs Price](#5.-Bathrooms-vs-Price)\n    6. [Price vs SqftLiving](#6.-Price-vs-SqftLiving)\n    7. [Price vs SqftLot](#7.-Price-vs-SqftLot)\n    8. [Floors vs Price](#8.-Floors-vs-Price)\n    9. [Waterfront vs Price](#9.-Waterfront)\n    10. [View vs Price](#10.-View-vs-Price)\n    11. [Condition vs Price](#11.-Condition-vs-Price)\n    12. [Grade vs Price](#12.-Grade-vs-Price)\n    13. [Sqft Above vs Price](#13.-Sqft-Above-vs-Price)\n    14. [Sqft Basement vs Price](#14.-Sqft-Basement-vs-Price)\n    15. [Yr_built vs Price](#15.-Yr_built-vs-Price)\n    16. [Yr_renovated vs Price](#16.-Yr_renovated-vs-Price)\n    17. [Zipcode vs Price](#17.-Zipcode-vs-Price)\n    18. [Lat Long Visualization](#18.-Lat-Long)\n    19. [Sqft_living15](#19.-Sqft_living15)\n    20. [Sqft_lot15](#20.-Sqft_lot15)\n4. [Feature Engineering](#4.-Feature-Engineering)\n    1. [Overview of the above Data Preparation](#1.-Overview-of-the-above-Data-Preparation)\n    2. [Analysing the data](#2.-Analysing-the-data)\n    3. [Year Built and Renovated](#3.-Year-Built-and-Renovated)\n5. [Model Preparation](#5.-Model-Preparation)\n    1. [Univariate Model](#1.-Univariate-Model)\n    2. [Multivariate](#2.-Multivariate)\n    3. [Polynomial](#3.-Polynomial)\n    4. [Univariate with Normalization](#4.-Univariate-with-Normalization)\n    5. [Polynomial Normalization with Regression](#5.-Polynomial-Normalization-with-Regression)\n6. [Inference](#Inference:)\n7. [Unexplored Options](#Unexplored-Options:)","956a397f":"## 5. Polynomial Normalization with Regression","153062f8":"## 14. Sqft Basement vs Price","f174142f":"## 11. Condition vs Price ","9e251c3c":"#### Inference:\nIts also having less positive correlation. We can check this in feature engineering.","86d43f10":"#### Inference: \nThere are no null values present in the data. ","391b5c21":"An index from 0 to 4 of how good the view of the property was","fb6ae8ee":"From the above we can see that its gradually increasing, but at the end at 7.5 its dropping a lot (same as house with zero bathrooms)\n\n\nFrom the above graph its suspecious that why a value is dropping and rising suddenly at range 5.0 to 8.0. We can try to find the total amount of items present in indivdual categories. ","ca79b738":"#### Inference: \nNice corealtion is existing between sqft_living and price (0.70)","c4f20d5f":"## 2. Analysing the data","86d46466":"## 8. Floors vs Price\n\nFloors - Number of floors","dc6ffd2f":"# 5. Model Preparation","97e5166a":"The year of the house\u2019s last renovation","acc717e1":"# Contents","c789eb39":"Just Coordinates. ","a807ea8d":"#### Inference:\n1. Bathrooms column is having a corr of 0.525\n2. Newly generated bathroom_category column, There is a slight increase in corr (0.5387), we can keep it like this itself. ","2eea74e9":"## 9. Waterfront","5cf51d9a":"# 1. Loading Libraries","038294a2":"Number of bedrooms","46ac19ca":"From the above plot, its clear like its not having a good relationship. The price remains the same for any id (more of a static value)","d219f923":"We can convert the these in to a categorical values. ","3070e75b":"## 3. ID with Price","3ae590e3":" An index from 1 to 13, where 1-3 falls short of building construction and design, 7 has an average level of construction and design, and 11-13 have a high quality level of construction and design.","8729ac8c":"## 10. View vs Price","9c748050":"The square footage of the land lots of the nearest 15 neighbors","820b6b2e":"## 17. Zipcode vs Price","bf12ef9b":"### Bathroom vs Bedroom","f8d253f9":"#### Inference: \nYr Renovated is also having very less positive correlation","6c49ed8f":"## 19. Sqft_living15","512f4990":"An index from 1 to 5 on the condition of the apartment,","0376e2c9":"We can create a new column with the below logic, \n1. yr_gap -> yr_renovated - yr_built\n2. if yr_renovated is zero we can put -1","2ae7d285":"## 4. Bedrooms Vs Price","e3825318":"#### adding a buffer of 5 , we can split the categories. ","fd197df5":"## 12. Grade vs Price","af4f6cc0":"# Inference:\n1. With Multivariate Linear Regression : 57 % Accuracy\n2. With Polynomial Linear Regression : 63% Accuracy\n3. With Polynomical Normalization Linear Regression : 63% Accuracy","ea8380c9":"## 1. Checking Datatypes and Description of Data","84a9cd3e":"Considering sqft_living, since it has more correlation than others. ","8f2a014e":"## 6. Price vs SqftLiving","dcc1fab4":"## 7. Price vs SqftLot","6fc65d20":"## 5. Bathrooms vs Price","925e6f74":"The square footage of the interior housing space that is above ground level","8a8b3a5b":"#### Inference:\nSqft Basement is having a good correlation of 32.3%","1bd75433":"#### Inference: \nFrom the above we can see id and price is not having a good relationship. So we can ignore that. ","e93df719":"## 18. Lat Long ","8f28579e":"# 2. Loading Data","050a3c0a":"Square footage of the apartments interior living space"}}