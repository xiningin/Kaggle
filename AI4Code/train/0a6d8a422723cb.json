{"cell_type":{"356e4c40":"code","dda8693a":"code","e9b52da0":"code","0688233a":"code","7866de51":"code","85a2a4ba":"code","9bb2e8e7":"code","376dd072":"code","076a2c6f":"code","7343398b":"code","b5c02806":"code","7be3c13f":"code","db4948cd":"code","ea6dfc68":"code","5db16d39":"code","8e1613f1":"code","1e4f492a":"code","e8f62e54":"code","bded73f5":"code","e60d0a94":"code","5a1768a4":"code","8d67a5b5":"code","c4c9cc93":"code","db86d3af":"code","c0924e42":"code","edf55066":"code","276b6031":"code","73b1b457":"code","de2227a9":"code","308ad5ab":"code","670fb638":"code","fe900b0e":"code","13f985ee":"code","c0c43b27":"code","8cf676bb":"code","102e8faf":"code","d528d59a":"code","7071cf1d":"code","0c89ff55":"code","5dde95d5":"markdown","8d7058df":"markdown"},"source":{"356e4c40":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #importing our visualization libraries\nimport seaborn as sns","dda8693a":"df = pd.read_csv('\/kaggle\/input\/fifa-2021-complete-player-data\/FIFA-21 Complete.csv',sep = ';') #reading our data which is ';' seperated","e9b52da0":"df.head()","0688233a":"df.isnull().sum() #checking null values in our data","7866de51":"df.info() #checkinng thee column details in our data","85a2a4ba":"df.dtypes #checking the type of data present in our data frame","9bb2e8e7":"df['nationality'].value_counts().nunique() #checking total number of countries available in the data set","376dd072":"plt.style.use('dark_background') #top 50 nations that the players represent in FIFA 2021\nplt.figure(figsize = (20,7))\ndf['nationality'].value_counts().head(10).plot.bar(color = 'orangered')\nplt.title('Players from different countries present in FIFA-2021')\nplt.xlabel('Country')\nplt.ylabel('Count')\nplt.show()","076a2c6f":"plt.style.use('dark_background') #checking the age distribution of the players in FIFA-2021\nage  = df.age\nplt.figure(figsize = (12,8))\nax = sns.distplot(age,bins = 60,kde = False,color ='orangered')\nax.set_ylabel('Number of Players')\nax.set_xlabel('Age')\nax.set_title('Distribution of Age of Players')\nplt.show()","7343398b":"plt.style.use('dark_background') #popular clubs in FIFA-2021\nplt.figure(figsize = (20,7))\ndf['team'].value_counts().head(20).plot.bar(color = 'orangered')\nplt.title('Most Popular Clubs in FIFA-2021')\nplt.xlabel('Clubs')\nplt.ylabel('Count')\nplt.show()","b5c02806":"df.sort_values('age', ascending = True)[['name', 'age', 'team', 'nationality']].head(10) #The 10 youngest players present in the game","7be3c13f":"df.sort_values('age', ascending = False)[['name', 'age', 'team', 'nationality']].head(10) #the top 10 oldest players present in the game","db4948cd":"df.groupby(['team'])['age'].mean().sort_values(ascending = True).head(10) #top 10 team with the youngest squad","ea6dfc68":"df.groupby(['team'])['age'].mean().sort_values(ascending = False).head(10) #top 10 teams with the oldest squad","5db16d39":"df['position'].value_counts() #checking the different positions and  the number of players playing them","8e1613f1":"df[df['position'] == 'CB'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play CB position","1e4f492a":"df[df['position'] == 'ST'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play ST position","e8f62e54":"df[df['position'] == 'CF'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play CF position","bded73f5":"df[df['position'] == 'LW'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play LW position","e60d0a94":"df[df['position'] == 'RW'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play RW position","5a1768a4":"df[df['position'] == 'GK'][['name', 'age', 'team', 'nationality']].head(10) #Top players that only play GK position","8d67a5b5":"df[['name', 'age', 'team', 'nationality']].head(10) #Top 10 Players present in the game","c4c9cc93":"plt.figure(figsize=(12,8))\nsns.heatmap(df[['age', 'nationality', 'overall', 'potential', 'team', 'hits', 'position']].corr(), annot = True) #overall correlation between the various columns present in our data\nplt.title('Overall relation between columns of the Dataset', fontsize = 20)\nplt.show()","db86d3af":"def player(x): #method to check the  individual player information\n    return df.loc[df['name']==x]\n\ndef country(x): #method to check the information of any country's football team\n    return df[df['nationality'] == x][['name','overall','potential','position','hits','age','team']]\n\ndef club(x): #method to check the the club's player details\n    return df[df['team'] == x][['name','overall','potential','position','hits','age']]\ndef overall(x): #method to get players with similar overall ratings\n        return df[df['overall'] == x][['name','overall','potential','position','hits','age','team']]","c0924e42":"player('Cristiano Ronaldo') #checking out Cristiano Ronaldo's stats","edf55066":"country('India') #checking the indian Football teams players and their stats","276b6031":"club('Real Madrid ') #the club stats for Real Madrid","73b1b457":"overall(86).head(10) #gives us top 10 players with overall rating 86","de2227a9":"plt.figure(figsize=(12,8)) #comparing overall score of a person versus their age\nsns.lineplot(df['overall'], df['age'], palette = \"Set1\")\nplt.title('Overall vs Age', fontsize = 20)\nplt.show()","308ad5ab":"plt.figure(figsize=(12,8)) #comparing potential of a player vs their age\nsns.lineplot(df['potential'], df['age'], palette = \"Set1\")\nplt.title('Potential vs Age', fontsize = 20)\nplt.show()","670fb638":"plt.style.use('dark_background') #checking the potential distribution of the players in FIFA-2021\npotential  = df.potential\nplt.figure(figsize = (12,8))\nax = sns.distplot(potential,bins = 60,kde = False,color ='orangered')\nax.set_ylabel('Number of Players')\nax.set_xlabel('Potential')\nax.set_title('Distribution of Potentials of Players')\nplt.show()","fe900b0e":"plt.style.use('dark_background') #checking the overall scores distribution of the players in FIFA-2021\noverall  = df.overall\nplt.figure(figsize = (12,8))\nax = sns.distplot(overall,bins = 60,kde = False,color ='orangered')\nax.set_ylabel('Number of Players')\nax.set_xlabel('Overall')\nax.set_title('Distribution of Overall scores of Players')\nplt.show()","13f985ee":"plt.figure(figsize=(12,8)) #checking for the top 10 teams with highest overall scores in the game\nax = df.groupby(['team'])['overall'].max().sort_values(ascending = False).head(10).plot.bar(color='orangered')\nax.set_xlabel('Clubs')\nax.set_ylabel('Overall')\nax.set_title(\"Clubs with highest Overall scores in FIFA-2021\")\nplt.show()","c0c43b27":"plt.figure(figsize=(12,8)) #checking for the top 10 teams with highest potential scores of players in the game\nax = df.groupby(['team'])['potential'].max().sort_values(ascending = False).head(10).plot.bar(color='orangered')\nax.set_xlabel('Clubs')\nax.set_ylabel('Potential')\nax.set_title(\"Clubs with highest Potential scores of players in FIFA-2021\")\nplt.show()","8cf676bb":"#Top clubs from Europe's Top-5 Leagues with high overall player scores\nplt.figure(figsize=(12,8))\ntop = ('FC Barcelona ', 'Juventus ', 'Paris Saint-Germain ', 'Real Madrid ', 'FC Bayern M\u00fcnchen ')\ndf2 = df.loc[df['team'].isin(top)  & df['potential'] ]\n\nax = sns.barplot(x=df2['team'], y=df2['potential'], palette=\"Set1\");\nax.set_title(label='Distribution of Potential Scores in 5 Teams', fontsize=20);","102e8faf":"#Top clubs from Europe's Top-5 Leagues with high overall player scores\nplt.figure(figsize=(12,8))\ntop = ('FC Barcelona ', 'Juventus ', 'Paris Saint-Germain ', 'Real Madrid ', 'FC Bayern M\u00fcnchen ')\ndf2 = df.loc[df['team'].isin(top)  & df['overall'] ]\n\nax = sns.barplot(x=df2['team'], y=df2['overall'], palette=\"Set1\");\nax.set_title(label='Distribution of Overall Scores in 5 Teams', fontsize=20);","d528d59a":"import plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nrating = pd.DataFrame(df.groupby(['nationality'])['overall'].sum().reset_index())\ncount = pd.DataFrame(rating.groupby('nationality')['overall'].sum().reset_index())\n\nplot = [go.Choropleth(\n            colorscale = 'inferno',\n            locationmode = 'country names',\n            locations = count['nationality'],\n            text = count['nationality'],\n            z = count['overall'],\n)]\n\nlayout = go.Layout(title = 'Country vs Overall Ratings of players belonging to them')\n\nfig = go.Figure(data = plot, layout = layout)\npy.iplot(fig)","7071cf1d":"rating = pd.DataFrame(df.groupby(['nationality'])['potential'].sum().reset_index())\ncount = pd.DataFrame(rating.groupby('nationality')['potential'].sum().reset_index())\n\nplot = [go.Choropleth(\n            colorscale = 'inferno',\n            locationmode = 'country names',\n            locations = count['nationality'],\n            text = count['nationality'],\n            z = count['potential'],\n)]\n\nlayout = go.Layout(title = 'Country vs Potential Ratings of players belonging to them')\n\nfig = go.Figure(data = plot, layout = layout)\npy.iplot(fig)","0c89ff55":"from wordcloud import WordCloud\nplt.subplots(figsize=(12,8))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","5dde95d5":"# FIFA - 2021 Game Analysis\n---\nThis Kernel consists of EDA performed on FIFA - 2021 Player dataset which was released in October 2020.","8d7058df":"This concludes my analysis and visualization on the FIFA-2021 data-set. I would like to thank [Roshan Sharma](https:\/\/www.kaggle.com\/roshansharma) whose notebooks i referred for some of the graphs. It was really great working on this data and you should try working with this too."}}