{"cell_type":{"f297718c":"code","d2770459":"code","4a009251":"code","47fd3e6b":"code","7d67ab35":"code","a15fec6c":"code","d375084c":"code","20a427fc":"code","c5673671":"code","e42e0c70":"code","797dcd99":"code","46b39b03":"code","2caa12bb":"code","f2b3807e":"code","0eac45c3":"code","6c890fe8":"code","38b67e04":"code","aa387e8c":"code","bdb9d524":"code","f0527dd1":"code","0bf1171d":"code","cfb15230":"code","cd2c3ba6":"code","ccd28696":"code","a0019168":"code","dbf13898":"code","8a66631f":"code","70690000":"code","fbb9db49":"code","094aaf49":"code","bb7300c4":"code","d6553683":"code","2ae3fc8d":"code","fd3ad1f7":"code","2aaf2f42":"code","e83c854a":"code","6ce0a8a4":"code","1172af40":"code","d848900b":"code","a25253b2":"code","832ef372":"code","72a9cdf9":"code","671c7d15":"code","26c2742a":"code","b901fa92":"code","8894ba95":"code","bd57fae6":"code","a2f7ad62":"code","2bf8f28c":"code","33458143":"code","5fd87dfa":"code","ceea7108":"code","e38b9ec5":"code","f0403467":"code","0f7d3b94":"code","939bf1b3":"code","73bb1bf4":"code","e96e2852":"code","8dcda8df":"code","df520028":"code","65f640bb":"code","05a858d7":"code","b2c3a809":"code","3db4e937":"code","b2268465":"code","52873cde":"code","a1eb3dc5":"code","0d07103a":"code","543a9dd5":"code","3cc82d09":"code","a0a6221c":"code","569e613c":"code","c785e761":"code","6c9068d0":"code","e42409b3":"code","9eb14c3e":"code","20275354":"code","8b456ded":"code","31ead59b":"code","360711ea":"code","6d22b5ae":"code","11f3b082":"code","9e18fced":"code","426db7bd":"code","ea5ba217":"code","52250d5a":"code","3898f0ae":"code","c3971edc":"code","641f8817":"code","df7617f0":"code","761d730d":"code","65e50f2a":"code","b5f64487":"code","a3b6948d":"code","95ca2dbf":"code","c5fbcca9":"code","fccaeae4":"code","84cb5658":"code","9b5017b8":"code","4a8003bb":"code","4f63f4c5":"markdown","63e9402b":"markdown","a3e47a88":"markdown","ae497815":"markdown","1fccc939":"markdown","ce410b46":"markdown","1d07b29a":"markdown","b32a0aa0":"markdown","07ee05a0":"markdown","9826659c":"markdown","ea6562a4":"markdown","c4ef1d20":"markdown","e22f4f20":"markdown","b74bb12d":"markdown","4cda513c":"markdown","06df49d3":"markdown","c499b435":"markdown","ee7787f5":"markdown","bfff7acc":"markdown","916fb1dc":"markdown","674c121d":"markdown","1cbd038b":"markdown","7b43c613":"markdown","55a7188a":"markdown","81e14664":"markdown","cef2eaa7":"markdown","a882b1fc":"markdown","37e766e9":"markdown","d5da0492":"markdown","5c5afbe7":"markdown","ca6186e0":"markdown","49315d88":"markdown","c4d27c58":"markdown","aeb40690":"markdown","70dc32f6":"markdown","38045ddc":"markdown","0573bb7f":"markdown","5ea53f8a":"markdown","be29cc26":"markdown","5c5a494e":"markdown","cb871495":"markdown","fc67e1f6":"markdown","22c816df":"markdown","b2032aa9":"markdown","965fe188":"markdown","15d21448":"markdown","9eca5507":"markdown","404228e2":"markdown","d3561a8d":"markdown","a9bb9fea":"markdown","a2677424":"markdown","a173821c":"markdown","a7c8e33a":"markdown","e73f5fd6":"markdown","004a0217":"markdown","b07410b5":"markdown","0850126d":"markdown","ca987eb5":"markdown","9dfc36a5":"markdown","2556f1aa":"markdown","17bcb203":"markdown","b92e9d96":"markdown","f027c639":"markdown","f5e09422":"markdown","24aa5480":"markdown","b4457c3c":"markdown","8f5ef9fc":"markdown","93ad0026":"markdown","b95be284":"markdown","85ce985f":"markdown","96d64412":"markdown","494042ff":"markdown","34da4850":"markdown","e01f36ef":"markdown","0d56a82d":"markdown","36c70466":"markdown"},"source":{"f297718c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2770459":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","4a009251":"# import data\ndf = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\ndf","47fd3e6b":"# We remove the first row of the data set because it\n\ndata = df.iloc[1:,:]\ndata.info()","7d67ab35":"data.info()","a15fec6c":"data.describe()","d375084c":"labels = list(data.Q1.value_counts().index)\nvalues = list(data.Q1.value_counts())\nlabels, values","20a427fc":"fig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","c5673671":"labels = list(data.Q2.value_counts().index)\nvalues = list(data.Q2.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0.2, 0.1, 0.2, 0.2, 0.2], hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","e42e0c70":"plt.figure(figsize= (20, 10), dpi= 300)\nsns.countplot(x= 'Q2', data= data)","797dcd99":"### Let's see the age group based on sex of the participants\nplt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(x= 'Q1', data= data, hue= 'Q2')","46b39b03":"plt.figure(figsize= (20, 11), dpi= 110)\nsns.countplot(y ='Q3', data = data)","2caa12bb":"df","f2b3807e":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q4', data= data)","0eac45c3":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q4', data= data, hue=\"Q2\")","6c890fe8":"plt.figure(figsize= (10, 10))\n# Create a word cloud of the current jobs\nfrom wordcloud import WordCloud\n#Creating the text variable\ntext = \" \".join(job for job in data.Q5)\n# Creating word_cloud with text as argument in .generate() method\nword_cloud = WordCloud(collocations = True, background_color = 'white').generate(text)\n# Display the generated Word Cloud\nplt.imshow(word_cloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","38b67e04":"labels = list(data.Q5.value_counts().index)\nvalues = list(data.Q5.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0.1, 0.1, 0.1, 0.1, 0.1], hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","aa387e8c":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q5', data= data)","bdb9d524":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q5', data= data, hue=\"Q2\")","f0527dd1":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q5', data= data, hue=\"Q4\")","0bf1171d":"labels = list(data.Q6.value_counts().index)\nvalues = list(data.Q6.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","cfb15230":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q6', data= data, hue=\"Q5\", palette=\"Set1\")","cd2c3ba6":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q6', data= data, hue=\"Q4\", palette=\"Set1\")","ccd28696":"plt.figure(figsize= (20, 10), dpi= 110)\nsns.countplot(y= 'Q6', data= data, hue=\"Q2\", palette=\"Set1\")","a0019168":"Q7_dict= {}\nfor i in range(1,13):\n    Q7_dict.update(dict(data[f\"Q7_Part_{i}\"].value_counts()))\nQ7_df = pd.DataFrame(Q7_dict.items(), columns = ['Planguage', 'counts'])\nQ7_df","dbf13898":"plt.figure(figsize= (20, 10))\nfig = px.bar(Q7_df, x='Planguage', y='counts')\nfig.show()","8a66631f":"fig = px.pie(Q7_df, values='counts', names='Planguage', title='Programming languages used By Kagglers')\nfig.show()","70690000":"import math\n\nhover_text = []\nbubble_size = []\nfor index, row in Q7_df.iterrows():\n    hover_text.append(('Programming language: {Planguage}<br>'+\n                      'Counts: {counts}').format(Planguage=row['Planguage'],\n                                            counts=row['counts']))\n    bubble_size.append(math.sqrt(row['counts']))\n\nQ7_df['text'] = hover_text\nQ7_df['size'] = bubble_size\nsizeref = 2.*max(Q7_df['size'])\/(100**2)\n\n# Dictionary with dataframes for each continent\nlanguages_names = list(Q7_df.iloc[:,0])\nlanguages_data = {Planguage:Q7_df.query(\"Planguage == '%s'\" %Planguage)\n                              for Planguage in languages_names}\n# Create figure\nfig = go.Figure()\n\nfor languages_name, language in languages_data.items():\n    fig.add_trace(go.Scatter(\n        x=language['counts'], y=language['Planguage'],\n        name=languages_name, text=language['text'],\n        marker_size=language['size'],\n        ))\n\n# Tune marker appearance and layout\nfig.update_traces(mode='markers', marker=dict(sizemode='area',\n                                              sizeref=sizeref, line_width=2))\n\nfig.update_layout(\n    title='Most Programming languages used by Kagglers',\n    xaxis=dict(\n        title='Count of use of the programming language',\n        gridcolor='white',\n        type='log',\n        gridwidth=2,\n    ),\n    yaxis=dict(\n        title='programming language',\n        gridcolor='white',\n        gridwidth=2,\n    ),\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\nfig.show()","fbb9db49":"data['Q8'].value_counts()","094aaf49":"data['Q8'].isnull().sum()","bb7300c4":"data.Q8.fillna(\"None\", inplace=True)","d6553683":"data['Q8'].isnull().sum()","2ae3fc8d":"data['Q8'].value_counts()","fd3ad1f7":"plt.figure(figsize= (20, 10))\nsns.countplot(x= 'Q8', data= data)","2aaf2f42":"plt.figure(figsize= (20, 10))\nsns.countplot(x= 'Q8', data= data, hue=\"Q5\", palette=\"Set1\")","e83c854a":"Q9_columns = [column for column in df.columns if 'Q9' in column]\nQ9_dict = {}\n\nfor column in Q9_columns:\n    Q9_dict.update(dict(data[column].value_counts()))\n\nQ9_df = pd.DataFrame(Q9_dict.items(), columns = ['IDE', 'counts'])\nQ9_df","6ce0a8a4":"print(Q9_df[\"counts\"][0] , Q9_df[\"counts\"][10])","1172af40":"Q9_df[\"counts\"][0] = Q9_df[\"counts\"][0] + Q9_df[\"counts\"][10]\nQ9_df.drop(index=10, axis=1, inplace=True)","d848900b":"Q9_df","a25253b2":"labels = list(Q9_df[\"IDE\"])\nvalues = list(Q9_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","832ef372":"Q10_columns = [column for column in df.columns if 'Q10' in column]\nQ10_dict = {}\n\nfor column in Q10_columns:\n    Q10_dict.update(dict(data[column].value_counts()))\n\nQ10_df = pd.DataFrame(Q10_dict.items(), columns = ['IDE', 'counts'])\nQ10_df","72a9cdf9":"fig = px.bar(Q10_df, x='IDE', y='counts',\n             hover_data=['IDE'], color='counts',\n             labels={'IDE':'hosted notebook'}, height=600)\nfig.show()\n","671c7d15":"data[\"Q11\"].value_counts()","26c2742a":"labels = list(data.Q11.value_counts().index)\nvalues = list(data.Q11.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0.2, 0.1, 0.2, 0.2, 0.2], hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","b901fa92":"plt.figure(figsize= (20, 10))\nsns.countplot(y= 'Q11', data= data, hue=\"Q5\", palette=\"Set1\")","8894ba95":"Q12_columns = [column for column in df.columns if 'Q12' in column]\nQ12_dict = {}\n\nfor column in Q12_columns:\n    Q12_dict.update(dict(data[column].value_counts()))\n\nQ12_df = pd.DataFrame(Q12_dict.items(), columns = ['hardware', 'counts'])\nQ12_df","bd57fae6":"fig = px.pie(Q12_df, values='counts', names='hardware', title='specialized hardware used on a regular basis?')\nfig.show()","a2f7ad62":"data[\"Q13\"].value_counts()","2bf8f28c":"plt.figure(figsize= (20, 10))\nsns.countplot(x= 'Q13', data= data, hue=\"Q5\", palette=\"Set2\")","33458143":"Q14_columns = [column for column in df.columns if 'Q14' in column]\nQ14_dict = {}\n\nfor column in Q14_columns:\n    Q14_dict.update(dict(data[column].value_counts()))\n\nQ14_df = pd.DataFrame(Q14_dict.items(), columns = ['hardware', 'counts'])\nQ14_df","5fd87dfa":"labels = list(Q14_df[\"hardware\"])\nvalues = list(Q14_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3, textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","ceea7108":"data['Q15'].value_counts()","e38b9ec5":"plt.figure(figsize= (20, 10))\nsns.countplot(y= 'Q15', data= data, hue=\"Q5\", palette=\"Set2\")","f0403467":"Q16_columns = [column for column in df.columns if 'Q16' in column]\nQ16_dict = {}\n\nfor column in Q16_columns:\n    Q16_dict.update(dict(data[column].value_counts()))\n\nQ16_df = pd.DataFrame(Q16_dict.items(), columns = ['framework', 'counts'])\nQ16_df","0f7d3b94":"labels = list(Q16_df[\"framework\"])\nvalues = list(Q16_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.5, textinfo='percent', name=\"ML frameWorks\"\n                            )])\nfig.show()","939bf1b3":"Q17_columns = [column for column in df.columns if 'Q17' in column]\nQ17_dict = {}\n\nfor column in Q17_columns:\n    Q17_dict.update(dict(data[column].value_counts()))\n\nQ17_df = pd.DataFrame(Q17_dict.items(), columns = ['algo', 'counts'])\nQ17_df","73bb1bf4":"fig = px.bar(Q17_df, x='algo', y='counts',\n             hover_data=['algo'], color='counts',\n             labels={'algo':'ML algorithms'}, height=600)\nfig.show()","e96e2852":"Q18_columns = [column for column in df.columns if 'Q18' in column]\nQ18_dict = {}\n\nfor column in Q18_columns:\n    Q18_dict.update(dict(data[column].value_counts()))\n\nQ18_df = pd.DataFrame(Q18_dict.items(), columns = ['c_vision', 'counts'])\nQ18_df","8dcda8df":"fig = px.bar(Q18_df, x='c_vision', y='counts',\n             hover_data=['c_vision'], color='counts',\n             labels={'c_vision':'Computer vision methods'}, height=900)\nfig.show()","df520028":"Q19_columns = [column for column in df.columns if 'Q19' in column]\nQ19_dict = {}\n\nfor column in Q19_columns:\n    Q19_dict.update(dict(data[column].value_counts()))\n\nQ19_df = pd.DataFrame(Q19_dict.items(), columns = ['nlp', 'counts'])\nQ19_df","65f640bb":"labels = list(Q19_df[\"nlp\"])\nvalues = list(Q19_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.5, textinfo='percent', name=\"?LP methods\"\n                            )])\nfig.show()","05a858d7":"data[\"Q20\"].value_counts()","b2c3a809":"labels = list(data.Q20.value_counts().index)\nvalues = list(data.Q20.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","3db4e937":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q20', data= data, palette=\"Set2\")","b2268465":"data[\"Q21\"].value_counts()","52873cde":"labels = list(data.Q21.value_counts().index)\nvalues = list(data.Q21.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","a1eb3dc5":"data[\"Q22\"].value_counts()","0d07103a":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q22', data= data, palette=\"Set2\")","543a9dd5":"labels = list(data.Q22.value_counts().index)\nvalues = list(data.Q22.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent+label',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","3cc82d09":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q22', data= data,hue=\"Q21\", palette=\"Set2\")","a0a6221c":"data[\"Q23\"].value_counts()","569e613c":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q23', data= data, palette=\"Set2\")","c785e761":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q23', data= data,hue=\"Q22\", palette=\"Set2\")","6c9068d0":"Q24_columns = [column for column in df.columns if 'Q24' in column]\nQ24_dict = {}\n\nfor column in Q24_columns:\n    Q24_dict.update(dict(data[column].value_counts()))\n\nQ24_df = pd.DataFrame(Q24_dict.items(), columns = ['activity', 'counts'])\nQ24_df","e42409b3":"labels = list(Q24_df[\"activity\"])\nvalues = list(Q24_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.5, textinfo='percent', name=\"Job main activities\"\n                            )])\nfig.show()","9eb14c3e":"data[\"Q25\"].value_counts()","20275354":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q25', data= data, palette=\"Set2\")","8b456ded":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q25', data= data,hue=\"Q4\", palette=\"Set2\")","31ead59b":"data[\"Q26\"].value_counts()","360711ea":"labels = list(data.Q26.value_counts().index)\nvalues = list(data.Q26.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent+label',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","6d22b5ae":"Q27_a_columns = [column for column in df.columns if 'Q27_A' in column]\nQ27_a_dict = {}\n\nfor column in Q27_a_columns:\n    Q27_a_dict.update(dict(data[column].value_counts()))\n\nQ27_a_df = pd.DataFrame(Q27_a_dict.items(), columns = ['platform', 'counts'])\nQ27_a_df","11f3b082":"Q27_b_columns = [column for column in df.columns if 'Q27_B' in column]\nQ27_b_dict = {}\n\nfor column in Q27_b_columns:\n    Q27_b_dict.update(dict(data[column].value_counts()))\n\nQ27_b_df = pd.DataFrame(Q27_b_dict.items(), columns = ['platform', 'counts'])\nQ27_b_df","9e18fced":"from plotly.subplots import make_subplots\n\n\nlabels_a = list(Q27_a_df[\"platform\"])\nvalues_a = list(Q27_a_df[\"counts\"])\n\nlabels_b = list(Q27_b_df[\"platform\"])\nvalues_b = list(Q27_b_df[\"counts\"])\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels_a, values=values_a, name=\"Used CCP\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels_b, values=values_b, name=\"hope to use CCP\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\" Best Cloud computing platform\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Used CCP', x=0.18, y=0.5, font_size=20, showarrow=False),\n                 dict(text='hope to use CCP', x=0.835, y=0.5, font_size=15, showarrow=False)])\nfig.show()","426db7bd":"data[\"Q28\"].value_counts()","ea5ba217":"labels = list(data.Q28.value_counts().index)\nvalues = list(data.Q28.value_counts())\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent+label',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","52250d5a":"plt.figure(figsize= (20, 12))\nsns.countplot(y= 'Q28', data= data, palette=\"Set2\")","3898f0ae":"Q30_a_columns = [column for column in df.columns if 'Q30_A' in column]\nQ30_a_dict = {}\n\nfor column in Q30_a_columns:\n    Q30_a_dict.update(dict(data[column].value_counts()))\n\nQ30_a_df = pd.DataFrame(Q30_a_dict.items(), columns = ['storage', 'counts'])\nQ30_a_df","c3971edc":"\nlabels = list(Q30_a_df[\"storage\"])\nvalues = list(Q30_a_df[\"counts\"])\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4, textinfo='percent+label',\n                             insidetextorientation='radial'\n                            )])\nfig.show()","641f8817":"Q30_b_columns = [column for column in df.columns if 'Q30_B' in column]\nQ30_b_dict = {}\n\nfor column in Q30_b_columns:\n    print(data[column].value_counts())\n    Q30_b_dict.update(dict(data[column].value_counts()))\n\nQ30_b_df = pd.DataFrame(Q30_b_dict.items(), columns = ['storage', 'counts'])\nQ30_b_df\n\n\n# The 30th question containes just Nan vales","df7617f0":"Q31_a_columns = [column for column in df.columns if 'Q31_A' in column]\nQ31_a_dict = {}\n\nfor column in Q31_a_columns:\n    Q31_a_dict.update(dict(data[column].value_counts()))\n\nQ31_a_df = pd.DataFrame(Q31_a_dict.items(), columns = ['ml_prod', 'counts'])\nQ31_a_df.drop(index=8, axis=1, inplace=True)\nQ31_a_df","761d730d":"Q31_b_columns = [column for column in df.columns if 'Q31_B' in column]\nQ31_b_dict = {}\n\nfor column in Q31_b_columns:\n    Q31_b_dict.update(dict(data[column].value_counts()))\n\nQ31_b_df = pd.DataFrame(Q31_b_dict.items(), columns = ['ml_prod', 'counts'])\nQ31_b_df.drop(index=8, axis=1, inplace=True)\nQ31_b_df","65e50f2a":"labels_a = list(Q31_a_df[\"ml_prod\"])\nvalues_a = list(Q31_a_df[\"counts\"])\n\nlabels_b = list(Q31_b_df[\"ml_prod\"])\nvalues_b = list(Q31_b_df[\"counts\"])\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels_a, values=values_a, name=\"Used CCP\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels_b, values=values_b, name=\"hope to use CCP\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Managed machine learning products\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Managed ML\\n products', x=0.10, y=-0.1, font_size=15, showarrow=False),\n                 dict(text='Wanted to learn managed ML \\n products', x=0.870, y=-0.1, font_size=15, showarrow=False)])\nfig.show()","b5f64487":"Q32_a_columns = [column for column in df.columns if 'Q32_A' in column]\nQ32_a_dict = {}\n\nfor column in Q32_a_columns:\n    Q32_a_dict.update(dict(data[column].value_counts()))\n\nQ32_a_df = pd.DataFrame(Q32_a_dict.items(), columns = ['bd_prod', 'counts'])\nQ32_a_df.drop(index=19, axis=1, inplace=True)\nQ32_a_df","a3b6948d":"fig = px.bar(Q32_a_df, x='bd_prod', y='counts',\n             hover_data=['bd_prod'], color='counts',\n             labels={'bd_prod':'Big data products'}, height=900)\nfig.show()","95ca2dbf":"Q32_b_columns = [column for column in df.columns if 'Q32_B' in column]\nQ32_b_dict = {}\n\nfor column in Q32_b_columns:\n    Q32_b_dict.update(dict(data[column].value_counts()))\n\nQ32_b_df = pd.DataFrame(Q32_b_dict.items(), columns = ['bd_prod', 'counts'])\nQ32_b_df.drop(index=19, axis=1, inplace=True)\nQ32_b_df","c5fbcca9":"fig = px.bar(Q32_b_df, x='bd_prod', y='counts',\n             hover_data=['bd_prod'], color='counts',\n             labels={'bd_prod':'Big data products'}, height=900)\nfig.show()","fccaeae4":"Q34_a_columns = [column for column in df.columns if 'Q34_A' in column]\nQ34_a_dict = {}\n\nfor column in Q34_a_columns:\n    Q34_a_dict.update(dict(data[column].value_counts()))\n\nQ34_a_df = pd.DataFrame(Q34_a_dict.items(), columns = ['BITools', 'counts'])\nQ34_a_df.drop(index=15, axis=1, inplace=True)\nQ34_a_df","84cb5658":"fig = px.bar(Q34_a_df, x='BITools', y='counts',\n             hover_data=['BITools'], color='counts',\n             labels={'BITools':'BI Tools'}, height=900)\nfig.show()","9b5017b8":"Q34_b_columns = [column for column in df.columns if 'Q34_A' in column]\nQ34_b_dict = {}\n\nfor column in Q34_b_columns:\n    Q34_b_dict.update(dict(data[column].value_counts()))\n\nQ34_b_df = pd.DataFrame(Q34_b_dict.items(), columns = ['BITools', 'counts'])\nQ34_b_df.drop(index=15, axis=1, inplace=True)\nQ34_b_df","4a8003bb":"fig = px.bar(Q34_b_df, x='BITools', y='counts',\n             hover_data=['BITools'], color='counts',\n             labels={'BITools':'BI Tools'}, height=900)\nfig.show()","4f63f4c5":"> Matplotlib, seaborn, Plotly\/Plotly Express are the most data visualization libraries or tools mostly used on a regular basis\n\n> PS: This notebook is also writen by these 3 labraries","63e9402b":"> But Who Recommend it ?","a3e47a88":"## Which integrated development environments (IDE's) is the most used on a regular basis?","ae497815":"The participants are most likely to having 1-3 years of writting code experience (30%), dominantly by men and bachelor\/master degrees. \n\nMost interesting that there are 7.16% with experience more than 20 years. These people are the gurus of data science and machine learning. **Much Respect** \n\nSurprisingly there are 3.97% that have never written any code","1fccc939":"> We obviously can see that Linear Models, Tree Models, Bosting Models and CNN are the most used Algorithms on Kaggle, followed by Dense Neural Networks, RNN and Bayesian Approaches,","ce410b46":"> NLP methods are also used by a certain part of the participants. Not everyone uses those methods. But for those who do - **Word embeddings\/vectors (GLoVe, fastText, word2vec)**, Transformer language models (GPT-3, BERT, XLnet, etc) and Encoder-decoder models (seq2seq, vanilla transformers) are the most popular among them.","1d07b29a":"> Annalyzing and understanding data is main activity for almost 28% of kagglers, followed by exploring prototypes for machine learning by 15.5% ....","b32a0aa0":"**Python** is the most programming languages used by Kaggles (participants on the survey) with 34.5% then cames SQL, C++...","07ee05a0":"## Data Science team size in the organizations","9826659c":"> As they are the most used, Tableau, & Microssoft power BI are also the most wanted to learn","ea6562a4":"## Participants Gender","c4ef1d20":"## Data storage Usage on regular basis","e22f4f20":"It's almost like the questions of `how many years have the participants been writing code ?`,\n> students are almost absent when we are talking about 3 yaers of experience and more, & in contrary they are the much more in less than 3 yers of experience","b74bb12d":"## The most computing platform often us for your data science projects","4cda513c":"before we do any plot or treatements we should have the value_counts of any programming language, as the 7th question is a multi answers question****","06df49d3":"## Size of the company of employement","c499b435":"## Machine learning algorithms most used by kagglers","ee7787f5":"> Bachlor's degree are the most payed 0-999$ , where as Master's degree are the most payed every where !!","bfff7acc":"## Managed machine learning products","916fb1dc":"> Approximately 23% of the companies have +20 employees in Data science team & the majority have more that 2 employees.\n\n**But who are the companies that have different DS sizes?**","674c121d":"> Turned out That Data Scientist are the most ones using Cloud latforms","1cbd038b":"> Different organizations Sizes, but the most frequent is the small\/meduim company of 0-49 employees","7b43c613":"## What the most recommended programming language","55a7188a":"## Participants Current Job","81e14664":"* we have 25973 row with 369 feature all classified as object features\n* There are question that have multiple choice \n* each choise have its column ","cef2eaa7":"## What is the highest level of formal education for the participants","a882b1fc":"## NLP (natural language processing) methods used on a regular basis by kagglers","37e766e9":"> most uses didn't use TPU before","d5da0492":"> That's is very well explained, as long as the company is big as long as they have big Data science team. \n\n> Orgaisations from 0-49 employees have in most cases 0 - 4 employees & organisation more that 49 employees have bigger teams","5c5afbe7":"## Yearly compensation (approximate $USD)","ca6186e0":"## Which types of specialized hardware used on a regular basis?","49315d88":"## What is the age of the participants - Age Group","c4d27c58":"## Business intelligence tools","aeb40690":"## Which language kagglers used on their regular basis ?","70dc32f6":"## big data products","38045ddc":"> Still Traditional Relational database management systems (MySQL, PostgreSQL, SQLite) and MongoDB (non relational) the most wanted to learn in the next 2 yers, with Googlr Cloud SQL, Microssoft Azure SQL Database, ","0573bb7f":"> My special thanks to you for reading this notebook, your \n\n> Let me know if you have any feedback at the comment below.\n\n> And Kindly support, upvote, if you like this work.\n\nVisialisation libraries:\n* [Plotly](https:\/\/plotly.com\/python\/)\n* [Seaborn](https:\/\/seaborn.pydata.org\/index.html)\n* [Matplotlib](https:\/\/matplotlib.org\/)","5ea53f8a":"## Industry of current employement\/contract","be29cc26":"## Experience of working with machine learning methods","5c5a494e":"Hmmm, 2021's survey is dominanted by men, they are almost 80% of the participants .\n\nThere are also 18% Women Kagglers. The ratio is not that bad, but it can be improved upon.\n\nFinally, about 2% are either Non-Bianary, Do not wish to disclose or Prefer to self explain.","cb871495":"## For how many years have the participants been writing code ?","fc67e1f6":"> Amazon Simple Storage Service (S3) & Google Cloud Storage (GCS) are the most cloud storage usage by kagglers","22c816df":"> 50.1% of kagglers don't use any specialized hardware, then comes NVIDIA GPUs with 30.4%, AWS are the less used hardwares","b2032aa9":"> Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc), Image segmentation methods (U-Net, Mask R-CNN, etc) and Object detection methods (YOLOv3, RetinaNet, etc) are the most popular Computer Vision Modules used by Kagglers, But in general CV methods are widely used by kagglers","965fe188":"We can obviously see that majority of Kagglers (37,9%) are between 21 to 29 years of age as 18,9% are between 28-21 & 19% are between 25-29.\n\nVery few Kagglers are over the age of 50 (8,61%)","15d21448":"## Machine learning frameworks used on regular basis","9eca5507":"## Data visualization libraries or tools mostly used on a regular basis?","404228e2":"## Which hosted notebook products is the most used on a regular basis? ","d3561a8d":"> As I expected Colab & Kaggle Notebooks are the most hosted notebooks used","a9bb9fea":"## Is ML incorporated in Organisations business ?","a2677424":"## Computer vision methods used on a regular basis by kagglers","a173821c":"## Best Cloud computing platform","a7c8e33a":"> Google Cloud Vertex AI is the most wanted to learn in the ML products, even if the most used ones are Amazon SageMaker, Azure Machine Learning Studio","e73f5fd6":"# EDA","004a0217":"Ooops, I was expecting that the most of the participants are Data Scientists\/Analysts or ML Enginneers, however, we can see that majority of the participants are Students!\n\nTherefore, Students, followed by Data Scientists, Software Engineers and Data Analysts are pre-dominantly the main professions in Kaggle.\n\nMost of the participants have 3 principal educational paths, whether a Bachelor, Master, or Doctoral degrees\n\nNotice that data jobs ( Data Scientists\/Analysts, ML enginners and statisticians ) are tend to have a master degree","b07410b5":"## Job important activities for kagglers","0850126d":"> The past 2 yeras were maybe the revolution of ML methods in organizations as from the last 2 years or maybe before oranization with different DS team sizes are incorporating ML methods in their business...","ca987eb5":"most of the participants live in India, USA, Japan, Russia, Brazil, Uk,China.\n\nVery less number of the participants are from from Norway, Algeria, Ehiopia and Denmark.\n\n**Morocco** is the first country amoung North africa participants","9dfc36a5":"## Money spent on machine learning or cloud computing service at home or work place in past 5 years","2556f1aa":"* Even with the age groups, Men are always dominants then Women. \n* if we look more deeper, woman that are 18-21 years old age range, is much higher than other age range. \n* age groupe between 30 to 50 years old are declining clearly in population. \n* It seems that these people are the one who were early practitioners of the modern Machine Learning and Data Science.","17bcb203":"> 65% of the data scientist\/analyst... use their laptops for their data projects, and almost 20% use a desktop computer...","b92e9d96":"# Imports","f027c639":"> Traditional Relational database management systems (MySQL, PostgreSQL, SQLite) and MongoDB (non relational) are the most Big data products used by kagglers","f5e09422":"## Number of times kaggle users used a TPU (tensor processing unit)","24aa5480":"> almost 45% of kagglers are working on computers\/technology and Academics jobs, following by Accounting\/Finance Sectors","b4457c3c":"> **Python** is the most recommended language to learn first, and it is recommended by data scientist\/Engineers..., Swift is the less recommended language to learn first","8f5ef9fc":"> Again AWS, GCP are the most enjoyable Cloud computing platforms","93ad0026":"let's see what are the age groups who participated in the survey","b95be284":"## Where are the participants from?","85ce985f":"# Conclusion","96d64412":"> AWS, GCP are the most Cloud computing used world wide by kagglers, and the most ones that people wants to learn in the future","494042ff":"## Most enjoyable Cloud computing platform","34da4850":"> **SkLearn** continues to be the top ML framework used by many Kagglers followed by Tensor-flow and Keras...","e01f36ef":"Most of the participants either hold a Master's degree or a Bachelor's degree","0d56a82d":"> Tableau, & Microssoft power BI is the best BI tools for kagglers ","36c70466":"> **Jupyter (JupyterLab, Jupyter Notebooks, etc)** are the most IDE used, and that's due to the big number of Data Scientist\/Analyst..., Then we find VSCode as it is One of the best IDE in the word & it can be used by event data jobs"}}