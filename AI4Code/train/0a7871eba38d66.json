{"cell_type":{"81f94166":"code","d3301bcc":"code","83434e53":"code","47130603":"code","24f4bf3d":"code","c2a22504":"code","84f9f9f3":"code","bd325735":"code","76921b7a":"code","674092ad":"code","dcca1532":"code","52f871bf":"code","fbbc7794":"code","17b1c76e":"code","9f3bc3c5":"code","04cd0f91":"code","3cf46ad6":"code","b1df677e":"code","34198f98":"code","82984166":"code","80771494":"code","ceaa8345":"code","346a2a8e":"code","beaf76f2":"code","b522555e":"code","56a69783":"code","93152051":"code","f15f8cf5":"code","583dd9ae":"code","8de9c871":"code","172134ee":"code","c3befa4c":"code","a1cca42d":"code","22aa075d":"code","5910188c":"markdown","3b6c1f0a":"markdown","6b0aca82":"markdown","aec483de":"markdown","f8feda3f":"markdown","5091a732":"markdown","386c376d":"markdown","95298962":"markdown"},"source":{"81f94166":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3301bcc":"import warnings\nwarnings.filterwarnings(\"ignore\")","83434e53":"import zipfile\n\n# Will unzip the files so that you can see them....\/input\/dogs-vs-cats\/test1.zip\nwith zipfile.ZipFile(\"..\/input\/dogs-vs-cats\/test1.zip\",\"r\") as z:\n    z.extractall(\".\")\n\nwith zipfile.ZipFile(\"..\/input\/dogs-vs-cats\/train.zip\",\"r\") as z:\n    z.extractall(\".\")","47130603":"import cv2\nimport matplotlib.pyplot as plt\npath = \"\/kaggle\/working\/train\"\nimage_name = os.listdir(path)\nimage_name[:10]","24f4bf3d":"img = cv2.imread(os.path.join(path, image_name[7]))\nimg = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)\nprint(img.shape)\nplt.imshow(img)","c2a22504":"from fastai.vision import *","84f9f9f3":"path = Path('\/kaggle\/working\/train')\npath","bd325735":"fn_paths = [path\/name for name in image_name]; fn_paths[:2]\n#str(fn_path)\n#fn_path = [path\/image_name]\ncategory = str(fn_paths[17]).split('.')[0]\ncategory[22:]\n#if category == 'dog':\n#    print(1)\n#else:\n#    print(0)","76921b7a":"tfms = get_transforms(do_flip=True)\nbs = 64","674092ad":"def get_labels(filename):\n    category = str(filename).split('.')[0]\n    if category[22:] == 'dog':\n        return 1\n    else:\n        return 0\n","dcca1532":"data = ImageDataBunch.from_name_func(path, fn_paths, label_func=get_labels,valid_pct=0.2, ds_tfms=tfms, size=224,bs=bs)\ndata = data.normalize(imagenet_stats)","52f871bf":"data.show_batch(rs=3, figsize=(7,8))","fbbc7794":"data.classes, data.c, len(data.train_ds), len(data.valid_ds)","17b1c76e":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)","9f3bc3c5":"learn.fit_one_cycle(4)\nlearn.recorder.plot_losses()","04cd0f91":"learn.save('stage-1')","3cf46ad6":"learn.load('stage-1');","b1df677e":"learn.unfreeze()\nlearn.lr_find()","34198f98":"learn.recorder.plot()\nlearn.recorder.plot_lr()","82984166":"learn.fit_one_cycle(2, max_lr=slice(1e-5,2e-4))","80771494":"learn.save('stage-2')","ceaa8345":"learn.load('stage-2');","346a2a8e":"interp = ClassificationInterpretation.from_learner(learn)","beaf76f2":"interp.plot_confusion_matrix()","b522555e":"interp.plot_top_losses(9, figsize = (15,11))","56a69783":"path = Path('\/kaggle\/working\/train')\nlearn.export()\nlearn = load_learner(path)\n#path = '\/kaggle\/working\/test1'\n#learn = load_learner(learn.load('stage-2'),test=ImageItemList.from_folder(path))\n#preds = learn.get_preds(ds_type=DatasetType.Test)","93152051":"test_path = Path('\/kaggle\/working\/test1')\nlearn = load_learner(path, test=ImageList.from_folder(test_path))","f15f8cf5":"preds = learn.get_preds(ds_type=DatasetType.Test)\npreds","583dd9ae":"y = np.argmax(to_np(preds[0]),axis=1)","8de9c871":"n= 0\ny[n]","172134ee":"img = ImageList.from_folder(test_path)\n#learn.predict(img)\nimg[n]","c3befa4c":"test_img_name = os.listdir(test_path)\ntest_img_name[:10]","a1cca42d":"ID = pd.Series(test_img_name)\nlabel = pd.Series(y)\nsubmit = pd.DataFrame({ 'id': ID, 'label': label })\nsubmit.head()","22aa075d":"submit.to_csv('submission.csv', index=False)","5910188c":"# Obsevering the Losses","3b6c1f0a":"# Training the head network to identify dogs and cats","6b0aca82":"# Understanding the data","aec483de":"# Creating a pretrained Resnet-34 DNN that was trained on imagenet dataset","f8feda3f":"# Implementing Fast.Ai library","5091a732":"# Comparison of predicted output with the input of the test data","386c376d":"# **The dataset requires that we classify all dogs to 1 and  cats to 0**","95298962":"# Submission"}}