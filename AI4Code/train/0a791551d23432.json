{"cell_type":{"ddf41bf9":"code","2adeacb3":"code","9cace2c1":"code","e957ea4a":"code","4e50742c":"code","e16dee8e":"code","56cf3db4":"code","edbdbe39":"code","43dccc3e":"code","ec6e6e64":"code","255c4153":"code","fa4ac749":"code","1cd6c5c9":"code","3ea29ce5":"code","da02b451":"code","cfbd21b4":"code","c6afb018":"code","081c906b":"code","e95344be":"code","550e6265":"code","e84a695e":"code","6fc71150":"code","2fcd6648":"code","314e12b8":"code","aa4f335e":"code","25e141cc":"markdown","62bcd7cd":"markdown","8abb64b9":"markdown","fe6b0118":"markdown","58bcb4d5":"markdown","67e86505":"markdown","40850059":"markdown"},"source":{"ddf41bf9":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error, r2_score","2adeacb3":"train = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")\ntest = pd.read_csv(\"..\/input\/home-data-for-ml-course\/test.csv\")","9cace2c1":"train.head()","e957ea4a":"train.set_index('Id', inplace = True)\ntest.set_index('Id', inplace = True)","4e50742c":"train.shape","e16dee8e":"train.head()","56cf3db4":"train.tail()","edbdbe39":"train.isnull().sum().sort_values(ascending = False)","43dccc3e":"train.info()","ec6e6e64":"train.columns","255c4153":"train.corr().SalePrice.sort_values(ascending = False)","fa4ac749":"# create list containing numerical features;\nnum_ft = [ft for ft in train.columns if train[ft].dtypes != 'O']\nnum_ft","1cd6c5c9":"train[num_ft].corr().SalePrice.sort_values(ascending = False).head(10)","3ea29ce5":"features = ['YearRemodAdd', 'YearBuilt', 'TotRmsAbvGrd', 'FullBath', '1stFlrSF']","da02b451":"train[features].isnull().sum()","cfbd21b4":"#split the dataset;\nX = train[features]\ny = train.SalePrice\nX_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    train_size = 0.85,  \n                                                    test_size = 0.15, \n                                                    random_state = 42)\nX_train.head()","c6afb018":"## define the model;\nmodel = RandomForestRegressor(random_state = 42, n_estimators = 100, criterion = 'mae')\n# fit the model;\nmodel.fit(X_train, y_train)","081c906b":"#predict the values;\npreds = model.predict(X_test)\npreds","e95344be":"## some evaluations shots;\nmae = np.round(mean_absolute_error(y_test, preds), 2)\nrmse = np.round(mean_squared_error(y_test, preds), 2) ** 0.5\nr2 = np.round(r2_score(y_test, preds), 2) * 100\nprint('The mean absolute error is: {}'.format(mae))\nprint('The root mean squared error is: {}'.format(rmse))\nprint('The R2 Score is: {}%'.format(r2))","550e6265":"test_filter = test[features].copy()\ntest_filter","e84a695e":"# Generate test Predictions;\npred_test_ft = model.predict(test_filter)\npred_test_ft","6fc71150":"# now, will save this predictions in format used for home-data-ml competition scoring;\noutput = pd.DataFrame({'Id': test_filter.index, 'SalePrice': pred_test_ft})\noutput.to_csv('submission.csv', index = False)","2fcd6648":"pred_test_ft","314e12b8":"conclusion  = '\ud83e\udde1'* 5, 'Assalamu Aaikum Ouarahmato Allahi Ouabarakatoh', '\ud83e\udde1'*5","aa4f335e":"print(conclusion)","25e141cc":"## So, that was a simple random forest model \n* For more info about Random Forest check this [Link](https:\/\/www.kaggle.com\/alexisbcook\/introduction), from kaggel machine learning course.","62bcd7cd":"# <center>3 -Data Exploration<\/center>","8abb64b9":"# <center>1 -Import Libraries <\/center>","fe6b0118":"# <center>2 -Load the Dataset<\/center>","58bcb4d5":"# <center> Conclusion<\/center>","67e86505":"That Greate for the R2 Score\ud83d\ude0b","40850059":"# <center>4 -Create Random Forest model<\/center>"}}