{"cell_type":{"57dba5ff":"code","d9c12d8f":"code","11930587":"code","00b2f007":"code","691c53ea":"code","b5424e9d":"code","b55fd6da":"code","65ebe27c":"code","cc63a3dd":"code","7e8fe56a":"code","26e8abdb":"code","c08023fd":"code","cd456628":"code","049fc954":"code","781282b6":"code","fa94a8cf":"code","9636872f":"code","1e545c1d":"code","2e799273":"code","5187e901":"markdown","ec15fdb8":"markdown"},"source":{"57dba5ff":"# os,pandas,numpy\nimport os\nimport pandas as pd\nimport numpy as np","d9c12d8f":"# \u30e9\u30f3\u30c0\u30e0\u30b7\u30fc\u30c9\nimport random\nnp.random.seed(1234)\nrandom.seed(1234)","11930587":"# csv\u8aad\u307f\u8fbc\u307f\ntrain_df = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/test.csv\")\nsubmission = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/sample_submission.csv\")\n\ntrain_df.head()","00b2f007":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u5408\nall_df = pd.concat([train_df, test_df], sort=False).reset_index(drop=True)\n\nall_df[\"Pawpularity\"]","691c53ea":"# lightgbm\nimport lightgbm as lgb","b5424e9d":"# \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5206\u5272\u6570\u30923\u306b\u8a2d\u5b9a\nfrom sklearn.model_selection import KFold\nfolds = 3\nkf = KFold(n_splits=folds)","b55fd6da":"# \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\nlgbm_params = {\n    \"objective\":\"regression\",\n    \"random_seed\":1234\n}","65ebe27c":"# \u7d50\u5408\u3057\u305f\u5f8c\u518d\u5206\u985e\ntrain_df_le = all_df[~all_df[\"Pawpularity\"].isnull()]\ntest_df_le = all_df[all_df[\"Pawpularity\"].isnull()]\n# \u8aac\u660e\u5909\u6570\u30fb\u76ee\u7684\u5909\u6570\u3092\u6307\u5b9a\ntrain_X = train_df_le.drop([\"Pawpularity\", \"Id\"], axis=1)\ntrain_Y = train_df_le[\"Pawpularity\"]\n\ntrain_df,train_X,train_Y","cc63a3dd":"# \u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u3092\u51fa\u3059\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom sklearn.metrics import mean_squared_error","7e8fe56a":"# \u5404fold\u3054\u3068\u306b\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3054\u3068\u306e\u4e88\u6e2c\u5024\u3092\u4fdd\u5b58\nmodels = []\nrmses = []\noof = np.zeros(len(train_X))\n\nfor train_index, val_index in kf.split(train_X):\n    X_train = train_X.iloc[train_index]\n    X_valid = train_X.iloc[val_index]\n    y_train = train_Y.iloc[train_index]\n    y_valid = train_Y.iloc[val_index]\n    \n    lgb_train = lgb.Dataset(X_train, y_train)\n    lgb_eval = lgb.Dataset(X_valid, y_valid, reference=lgb_train)\n    \n    model_lgb = lgb.train(lgbm_params,\n                         lgb_train,\n                         valid_sets=lgb_eval,\n                         num_boost_round=100,\n                         early_stopping_rounds=20,\n                         verbose_eval=10)\n    \n    y_pred = model_lgb.predict(X_valid, num_iteration=model_lgb.best_iteration)\n    tmp_rmse = np.sqrt(mean_squared_error(np.log(y_valid),np.log(y_pred)))\n    print(tmp_rmse)\n    \n    models.append(model_lgb)\n    rmses.append(tmp_rmse)\n    oof[val_index] = y_pred","26e8abdb":"# \u5e73\u5747RMSE\u3092\u8a08\u7b97\nsum(rmses)\/len(rmses)","c08023fd":"# \u73fe\u72b6\u306e\u4e88\u6e2c\u5024\u3068\u5b9f\u969b\u306e\u5024\u306e\u9055\u3044\u3092\u78ba\u8a8d\u3059\u308b\nactual_pred_df = pd.DataFrame({\n    \"actual\" : train_Y,\n    \"pred\" : oof\n})\n\nactual_pred_df.plot(figsize=(12,5))","cd456628":"# \u5909\u6570\u306e\u6570\u3092\u5236\u9650\u3057\u3066\u5404\u5909\u6570\u306e\u91cd\u8981\u5ea6\u3092\u8868\u793a\nfor model in models:\n    lgb.plot_importance(model,importance_type=\"gain\", max_num_features=15)","049fc954":"# Pawpularity\u306e\u30c7\u30fc\u30bf\u5206\u5e03\u3092\u78ba\u8a8d\u3059\u308b\n\ntrain_df[\"Pawpularity\"].describe()","781282b6":"train_df[\"Pawpularity\"].plot.hist(bins=20)","fa94a8cf":"# Pawpularity\u3092\u5bfe\u6570\u5316\nnp.log(train_df['Pawpularity'])","9636872f":"# \u3000\u5bfe\u6570\u5316\u3057\u305fSalePrice\u306e\u5206\u5e03\u3092\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3067\u53ef\u8996\u5316\nnp.log(train_df['Pawpularity']).plot.hist(bins=20)","1e545c1d":"# \u5bfe\u6570\u5316\u306b\u3088\u308b\u4e88\u6e2c\u7cbe\u5ea6\u306e\u5411\u4e0a\u3092\u78ba\u8a8d\ntrain_df_le[\"Pawpularity_log\"] = np.log(train_df_le[\"Pawpularity\"])\n\ntrain_X = train_df_le.drop([\"Pawpularity\",\"Pawpularity_log\",\"Id\"], axis=1)\ntrain_Y = train_df_le[\"Pawpularity_log\"]\n                      \nmodels = []\nrmses = []\noof = np.zeros(len(train_X))\n\nfor train_index, val_index in kf.split(train_X):\n    X_train = train_X.iloc[train_index]\n    X_valid = train_X.iloc[val_index]\n    y_train = train_Y.iloc[train_index]\n    y_valid = train_Y.iloc[val_index]\n        \n    lgb_train = lgb.Dataset(X_train, y_train)\n    lgb_eval = lgb.Dataset(X_valid, y_valid, reference=lgb_train)    \n    \n    model_lgb = lgb.train(lgbm_params, \n                          lgb_train, \n                          valid_sets=lgb_eval, \n                          num_boost_round=100,\n                          early_stopping_rounds=20,\n                          verbose_eval=10,\n                         )    \n    \n    y_pred = model_lgb.predict(X_valid, num_iteration=model_lgb.best_iteration)\n    tmp_rmse = np.sqrt(mean_squared_error(y_valid, y_pred))\n    print(tmp_rmse)    \n              \n    models.append(model_lgb)    \n    rmses.append(tmp_rmse)\n    oof[val_index] = y_pred ","2e799273":"sum(rmses)\/len(rmses)","5187e901":"# \u30c7\u30fc\u30bf\u5206\u5e03\u306e\u78ba\u8a8d","ec15fdb8":"# \u76ee\u7684\u5909\u6570\u306e\u5bfe\u6570\u5316\u306b\u3088\u308b\u4e88\u6e2c\u7cbe\u5ea6\u306e\u5411\u4e0a\u3092\u78ba\u8a8d\u3059\u308b"}}