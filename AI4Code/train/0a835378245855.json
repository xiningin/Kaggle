{"cell_type":{"e4415c4d":"code","11a3623c":"code","52f297bd":"code","ed8667e5":"code","540dbfd7":"code","41cdbb98":"code","60e825b5":"code","b38c2eac":"code","33ab26db":"code","d6c98d3e":"code","e87ba9a6":"code","b2e47431":"code","b4c16203":"code","526db6f1":"code","d690b152":"code","4ad3d9b8":"markdown","bac7e0ec":"markdown","d9fcb84c":"markdown","bc2c0a6c":"markdown","5343ba3c":"markdown","2be99e54":"markdown","6663a286":"markdown"},"source":{"e4415c4d":"import numpy as np\nimport pandas as pd \nimport os\nimport glob\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt","11a3623c":"FOLDER_PATH = '..\/input\/unusual-options-activity'\nall_files = glob.glob(f'{FOLDER_PATH}\/*.csv')\n\ndf = pd.concat(map(pd.read_csv, all_files))\ndf.info()\n\noriginal_today_format = str(dt.date.today() )\ntoday = str(dt.date.today())","52f297bd":"df['Exp Date'] = pd.to_datetime(df['Exp Date'])\n# df['Exp Date'] = pd.to_datetime(df['Exp Date']).dt.strftime('%d\/%m\/%Y')\n\ndf.rename(columns={'Time': 'Date entered'}, inplace = True)\ndf['Date entered'] = pd.to_datetime(df['Date entered'])\ndf['Total Cost'] = df['Midpoint'] * df['Open Int']\n\ndf_group = df.groupby(['Type', 'Date entered']).agg({'Volume': 'sum', 'Total Cost': 'sum'}).reset_index()\ndf_group['Total Cost']  = df_group['Total Cost'].astype(int).apply(lambda x: \"{:,}\".format(x)) \ndf_group['Volume']  = df_group['Volume'].astype(int).apply(lambda x: \"{:,}\".format(x)) \ndf_group.head(3)","ed8667e5":"long_group = pd.melt(df_group, id_vars=['Type', 'Date entered'])\nlong_group['Combined_type'] = long_group['Type'] + '_' +long_group['variable']\nlong_group.sort_values(by=\"Date entered\").head(3)","540dbfd7":"fig = plt.figure(figsize=(14, 6))\n\ndef change_to_numeric(text): \n    return text if isinstance(text, int) else  pd.to_numeric(text.replace(',',''))\n\nlong_group['value']= long_group[\"value\"].apply(change_to_numeric)\nsns.lineplot(x=\"Date entered\", y=\"value\", hue=\"Combined_type\", data=long_group)\n\nplt.xlabel('Date')\nplt.ylabel('Amount')\nplt.show()\n","41cdbb98":"df = df[(df['Exp Date']  > today)].reset_index()\ndf_calls = df[(df['Type'] == 'Call')]\ndf_puts = df[(df['Type'] == 'Put')]","60e825b5":"def group_and_sum(_df): \n    return _df.groupby(['Symbol', 'Exp Date', 'Type', 'Date entered']).agg({'Total Cost': 'sum'})\n\ndef sort_and_display(_df): \n    return _df.reset_index().sort_values(by=['Total Cost'], ascending=False)","b38c2eac":"df_symbols = group_and_sum(df)\ndf_symbols","33ab26db":"sort_and_display(df_symbols).head(40)","d6c98d3e":"df_call_symbols = group_and_sum(df_calls)\ndf_call_symbols","e87ba9a6":"sorted_calls = sort_and_display(df_call_symbols)\nsorted_calls.head(10)","b2e47431":"top_tickers = sorted_calls.drop_duplicates(subset=['Symbol'])\ntop_call_ticker_list = top_tickers.head(30)['Symbol'].tolist()\nprint(top_call_ticker_list)","b4c16203":"df_puts_symbols = group_and_sum(df_puts)\ndf_puts_symbols","526db6f1":"sorted_puts = sort_and_display(df_puts_symbols)\nsorted_puts.head(10)","d690b152":"top_tickers = sorted_puts.drop_duplicates(subset=['Symbol'])\ntop_call_ticker_list = top_tickers.head(30)['Symbol'].tolist()\nprint(top_call_ticker_list)","4ad3d9b8":"- Highest put\/call ratio\n- Lowest put\/call ration \n- Track ticker, unusual options: put\/call trend. ","bac7e0ec":"# Most active symbols","d9fcb84c":"Most active call ","bc2c0a6c":"Base information","5343ba3c":"Most active puts","2be99e54":"View after today only","6663a286":"Most active symbol on date\n"}}