{"cell_type":{"dff47d50":"code","199c4f98":"code","9d43918d":"code","9ffdf0dc":"code","5c135857":"code","00e201db":"code","5d757be1":"code","522f5895":"code","fe86f50c":"code","83412809":"code","04fc4168":"code","058a6e29":"code","17508a56":"code","840384f5":"code","b23beb4f":"code","84a7e582":"code","b7302b2b":"code","b7f3b590":"code","090eb2f0":"code","f2e9fe47":"code","905a8ce9":"code","7e9e48b1":"code","229163e1":"code","9f1a1ac7":"code","2c7e412b":"code","48e586a2":"code","461c54b5":"markdown","e9eafc39":"markdown"},"source":{"dff47d50":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\"))\ndf=pd.read_csv(\"..\/input\/CSVForDate.csv\",parse_dates=[\"Date\"])\ndf.head()","199c4f98":"#data columns\ndf.columns","9d43918d":"#check for missing values\ndf.isnull().sum()","9ffdf0dc":"#lets see if date is a date time series\ntype(df.Date[0])","5c135857":"#lets make Date as index\ndf.set_index(\"Date\",inplace=True)","00e201db":"df.index","5d757be1":"df.head()","522f5895":"#lets see date for the month of January and february\ndf[\"2009-01\":\"2009-02\"]","fe86f50c":"#lets see data of January only\ndf[\"2009-01\"]","83412809":"df.sort_index(inplace=True)\ndf_jan=df[\"2009-01\"] #January data in sorted way","04fc4168":"df_jan #january dataset created for see the trend in January","058a6e29":"sns.distplot(df_jan[\"Open\"])\n","17508a56":"#resmapling data on a monthly frequency with avg close price every month end\ndf.Close.resample(\"M\").mean()","840384f5":"#plotting the above data to see the trend\nplt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\ndf.Close.resample(\"M\").mean().plot()\nplt.subplot(2,2,2)\n#lets plot data quarterly\ndf.Close.resample(\"Q\").mean().plot()","b23beb4f":"plt.scatter(df[\"Open\"],df[\"Close\"],data=df)\nplt.xlabel(\"Open price\")\nplt.ylabel(\"close Price\")","84a7e582":"sns.lineplot(df[\"Open\"],df[\"Close\"],data=df,color=\"r\")","b7302b2b":"df.head()","b7f3b590":"#feature correlation\ndf1=df[[\"Open\",\"High\",\"Low\"]]\ndf1.corr()","090eb2f0":"#Data is highly correlated hence it will give us a bad model so use only 1 feature\nX=df[\"Open\"].values.reshape(-1,1)","f2e9fe47":"#Label\ny=df[\"Close\"]","905a8ce9":"#train test and split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=1)","7e9e48b1":"#lets  do the feature scaling for an acurate model\n#from sklearn.preprocessing import MinMaxScaler\n#mm=MinMaxScaler()\n#mm.fit(X_train,y_train)","229163e1":"from sklearn.linear_model import LinearRegression\nlreg=LinearRegression()\nlreg.fit(X_train,y_train)","9f1a1ac7":"y_pred=lreg.predict(X_test)\ny_pred","2c7e412b":"sns.lineplot(y_test,y_pred)","48e586a2":"lreg.score(X_test,y_test)  #this High score suspects overfitting of data","461c54b5":"Score of the Linear regression model","e9eafc39":"Lets look at the datato predict the close point of the same "}}