{"cell_type":{"c1d6c15e":"code","a225c967":"code","ea29b483":"code","2dc2e6a7":"code","4516c32d":"code","9adaa810":"code","bbfd54f1":"code","4e736359":"code","6e9eca70":"code","7d7f2147":"code","c50196f6":"code","54323aa3":"code","b9ecb219":"code","6db66ede":"code","955c8b50":"code","e74b861e":"code","0ecbf613":"code","fe6f9688":"code","f8af1d3c":"code","2a6d5364":"code","67d0e1a8":"code","59ac2b7e":"code","e66e47f5":"code","9601eb7a":"code","28da701b":"code","0ca79c89":"code","4b3d3dd8":"code","b7d17945":"code","60d1f85c":"code","e20b4885":"code","475d2baf":"code","1dc6fae5":"code","0d0467e3":"code","3b4170e4":"code","212fb45b":"code","07c24055":"code","54981275":"code","8510fe06":"code","94b88cbb":"code","5ede9c43":"code","67b69a9e":"code","9ec008f2":"code","ba87dde7":"code","082fdae9":"code","5988237d":"code","ec5f3fa9":"code","6d037ff3":"code","70efabbe":"code","a07afdd1":"code","dbf103b0":"code","b9b5000b":"code","9a9cad8c":"code","c9652ff9":"code","e7797b0c":"code","38558769":"code","b58c8a96":"code","9e1425ea":"code","8378f308":"code","ef83c5fd":"code","67e6930a":"code","426b4d2d":"code","414a7ce6":"code","f351f8a4":"code","9f524a71":"markdown","1b081dae":"markdown","151322fd":"markdown","6cdab0e4":"markdown","53767fde":"markdown","212b6751":"markdown","fd7e61e2":"markdown","aa464d1e":"markdown","e3fff95c":"markdown","480c8af1":"markdown","d602f9ad":"markdown","e6107339":"markdown","e222c789":"markdown","786b2f7f":"markdown","25327929":"markdown","a47541bc":"markdown","fc3eed5f":"markdown"},"source":{"c1d6c15e":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a225c967":"df=pd.read_csv('\/kaggle\/input\/weather-dataset-rattle-package\/weatherAUS.csv')","ea29b483":"df.head()","2dc2e6a7":"#Making a copy of the dataframe loaded\ndf_copy=df.copy()","4516c32d":"print('Rows:',df.shape[0])\nprint('Columns:',df.shape[1])","9adaa810":"df.info()","bbfd54f1":"df.describe()","4e736359":"df.describe(include='object')","6e9eca70":"df['WindDir9am'].value_counts(normalize=True).plot(kind='bar')","7d7f2147":"df['WindDir3pm'].value_counts(normalize=True).plot(kind='bar')","c50196f6":"df['WindGustDir'].value_counts(normalize=True).plot(kind='bar')","54323aa3":"#Checking for missing values\ndf.isnull().sum()","b9ecb219":"# Missing value impuatation\ndf['MinTemp']=df['MinTemp'].fillna(df['MinTemp'].median())\ndf['MaxTemp']=df['MaxTemp'].fillna(df['MaxTemp'].median())\ndf['Rainfall']=df['Rainfall'].fillna(df['Rainfall'].median())\ndf['Evaporation']=df['Evaporation'].fillna(method='ffill')\ndf['Sunshine']=df['Sunshine'].fillna(method='ffill')\ndf['WindDir9am']=df['WindDir9am'].fillna(method='ffill')\ndf['WindDir3pm']=df['WindDir3pm'].fillna(method='ffill')\ndf['Humidity3pm']=df['Humidity3pm'].fillna(df['Humidity3pm'].median())\ndf['Humidity9am']=df['Humidity9am'].fillna(df['Humidity9am'].median())\ndf['Pressure3pm']=df['Pressure3pm'].fillna(method='ffill')\ndf['Pressure9am']=df['Pressure9am'].fillna(method='ffill')\ndf['Cloud3pm']=df['Cloud3pm'].fillna(method='ffill')\ndf['Cloud9am']=df['Cloud9am'].fillna(method='ffill')\ndf['Temp9am']=df['Temp9am'].fillna(df['Temp9am'].median())\ndf['Temp3pm']=df['Temp3pm'].fillna(df['Temp3pm'].median())\ndf['Evaporation']=df['Evaporation'].fillna(df['Evaporation'].median())\ndf['Sunshine']=df['Sunshine'].fillna(df['Sunshine'].median())\ndf['WindGustSpeed']=df['WindGustSpeed'].fillna(df['WindGustSpeed'].median())\ndf['WindSpeed3pm']=df['WindSpeed3pm'].fillna(df['WindSpeed3pm'].median())\ndf['WindSpeed9am']=df['WindSpeed9am'].fillna(df['WindSpeed9am'].median())\ndf['RainToday']=df['RainToday'].fillna('No')\ndf['WindGustDir']=df['WindGustDir'].fillna('W')","6db66ede":"#Checking for missing values again\ndf.isnull().sum()","955c8b50":"df['Cloud3pm']=df['Cloud3pm'].fillna(df['Cloud3pm'].median())","e74b861e":"#Checking for missing values again\ndf.isnull().sum()","0ecbf613":"#checking for outliers\ndf.plot(kind='box',subplots=True,layout=(9,2),figsize=(16,12))","fe6f9688":"# Detecting outlier's limit(MaxTemp)\n#IQR=Q3-Q1\niqr=28.2-17.9\nmax_u=28.2+1.5*(iqr)\nmax_l=17.9-1.5*(iqr)\nprint('Upper Limit:',max_u)\nprint('Lower Limit:',max_l)","f8af1d3c":"# Capping Values greater than 43.65 to 43.65 and lesser than 2.45 to 2.45\ndf.loc[df.MaxTemp>43.65,'MaxTemp'] = 43.65","2a6d5364":"df.loc[df.MaxTemp<2.45,'MaxTemp'] = 2.45","67d0e1a8":"# Detecting outlier's limit(MinTemp)\niqr=16.8-7.6\nmin_u=16.8+1.5*(iqr)\nmin_l=7.6-1.5*(iqr)\nprint('Upper Limit:',min_u)\nprint('Lower Limit:',min_l)","59ac2b7e":"# Capping Values greater than 30.6 to 30.6 and lesser than -6.2 to -6.2\ndf.loc[df.MinTemp>30.6,'MinTemp'] = 30.6\ndf.loc[df.MinTemp<-6.2,'MinTemp'] = -6.2","e66e47f5":"# Detecting outlier's limit(RainFall)\niqr=0.8-0\nrain_u=0.8+1.5*(iqr)\nrain_l=0-1.5*(iqr)\nprint('Upper Limit:',rain_u)\nprint('Lower Limit:',rain_l)","9601eb7a":"# Capping Values greater than 2.0 to 2.0 and lesser than -1.2 to -1.2\ndf.loc[df.Rainfall>2.0,'Rainfall'] = 2.0\ndf.loc[df.Rainfall<-1.2,'Rainfall'] = -1.2","28da701b":"# Detecting outlier's limit(Evaporation)\niqr=7.4-2.6\nev_u=7.4+1.5*(iqr)\nev_l=2.6-1.5*(iqr)\nprint('Upper Limit:',ev_u)\nprint('Lower Limit:',ev_l)","0ca79c89":"# Capping Values greater than 14.6 to 14.6 and lesser than -4.6 to -4.6\ndf.loc[df.Evaporation>14.6,'Evaporation'] = 14.6\ndf.loc[df.Evaporation<-1.2,'Evaporation'] = -1.2","4b3d3dd8":"# Detecting outlier's limit(WindGustSpeed)\niqr=48-31\nwg_u=48+1.5*(iqr)\nwg_l=31-1.5*(iqr)\nprint('Upper Limit:',wg_u)\nprint('Lower Limit:',wg_l)","b7d17945":"# Capping Values greater than 73.5 to 73.5 and lesser than 5.5 to 5.5\ndf.loc[df.WindGustSpeed>73.5,'WindGustSpeed'] = 73.5\ndf.loc[df.WindGustSpeed<5.5,'WindGustSpeed'] = 5.5","60d1f85c":"# Detecting outlier's limit(WindSpeed9am)\niqr=19-7\nu=19+1.5*(iqr)\nl=7-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","e20b4885":"# Capping Values greater than 37.0 to 37.0 and lesser than -11.0 to -11.0\ndf.loc[df.WindSpeed9am>37.0,'WindSpeed9am'] = 37.0\ndf.loc[df.WindSpeed9am<-11.0,'WindSpeed9am'] = -11.0","475d2baf":"# Detecting outlier's limit(WindSpeed3pm)\niqr=24.0-13.0\nu=24.0+1.5*(iqr)\nl=13.0-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","1dc6fae5":"# Capping Values greater than 40.5 to 40.5 and lesser than -3.5 to -3.5\ndf.loc[df.WindSpeed3pm>40.5,'WindSpeed3pm'] = 40.5\ndf.loc[df.WindSpeed3pm<-3.5,'WindSpeed3pm'] = -3.5","0d0467e3":"# Detecting outlier's limit(humidity9am)\niqr=83.0-57.0\nu=83.0+1.5*(iqr)\nl=57.0-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","3b4170e4":"# Capping Values \ndf.loc[df.Humidity9am>122.0,'Humidity9am'] = 122.0\ndf.loc[df.Humidity9am<18.0,'Humidity9am'] = 18.0","212fb45b":"# Detecting outlier's limit(Pressure9am)\niqr=1022.4-1012.9\nu=1022.4+1.5*(iqr)\nl=1012.9-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","07c24055":"# Capping Values \ndf.loc[df.Pressure9am>1036.65,'Pressure9am'] = 1036.65\ndf.loc[df.Pressure9am<998.65,'Pressure9am'] = 998.65","54981275":"# Detecting outlier's limit(Pressure3pm)\niqr=1020.0-1010.4\nu=1020.0+1.5*(iqr)\nl=1010.4-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","8510fe06":"# Capping Values \ndf.loc[df.Pressure3pm>1034.4,'Pressure3pm'] = 1034.4\ndf.loc[df.Pressure3pm<996.0,'Pressure3pm'] = 996.0","94b88cbb":"# Detecting outlier's limit(Temperature9am)\niqr=21.6-12.3\nu=21.6+1.5*(iqr)\nl=12.3-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","5ede9c43":"# Capping Values \ndf.loc[df.Temp9am>35.55,'Temp9am'] = 35.55\ndf.loc[df.Temp9am<-1.65,'Temp9am'] = -1.65","67b69a9e":"# Detecting outlier's limit(Temperature3pm)\niqr=26.4-16.6\nu=26.4+1.5*(iqr)\nl=16.6-1.5*(iqr)\nprint('Upper Limit:',u)\nprint('Lower Limit:',l)","9ec008f2":"# Capping Values \ndf.loc[df.Temp3pm>41.1,'Temp3pm'] = 41.1\ndf.loc[df.Temp3pm<1.9,'Temp3pm'] = 1.9","ba87dde7":"#Using boxcox for RISK_MM\nfrom scipy.stats import boxcox\nl=list((boxcox(df.RISK_MM+1)[0]))\ndf['RISK_MM']=l","082fdae9":"df.plot(kind='box',subplots=True,layout=(9,2),figsize=(16,12))","5988237d":"#We will convert the target variables to label 0 and 1.\ndf['RainTomorrow'].replace({'Yes':'1','No':'0'},inplace=True)\ndf['RainTomorrow']=df['RainTomorrow'].astype(int)","ec5f3fa9":"#checking for correlation\nplt.figure(figsize=(12,10))\ncorr=df.corr()\nsns.heatmap(corr,annot=True)","6d037ff3":"pd.crosstab(df['RainToday'],df['RainTomorrow']).plot(kind='bar')","70efabbe":"sns.scatterplot(x='RISK_MM',y='RainTomorrow',data=df)","a07afdd1":"sns.scatterplot(x='Humidity3pm',y='RainTomorrow',data=df)","dbf103b0":"sns.scatterplot(x='Cloud9am',y='RainTomorrow',data=df)","b9b5000b":"sns.scatterplot(x='Cloud3pm',y='RainTomorrow',data=df)","9a9cad8c":"l=['Cloud9am','Cloud3pm','Date','Location']\ndf.drop(l,axis=1,inplace=True)","c9652ff9":"#Creating dummies\ndf=pd.get_dummies(data=df,columns=['WindGustDir','WindDir9am','WindDir3pm','RainToday'])","e7797b0c":"#Creating a copy of our dataframe\ndf_new=df.copy()","38558769":"# Defining X and y\nX=df.drop('RainTomorrow',axis=1)\ny=df['RainTomorrow']","b58c8a96":"#Train and test split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=1)","9e1425ea":"#Model Building\nfrom sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(X_train,y_train)","8378f308":"y_train_pred=lr.predict(X_train)\ny_test_pred=lr.predict(X_test)\nfrom sklearn.metrics import classification_report,accuracy_score,confusion_matrix,roc_auc_score,roc_curve\nprint('Train Accuracy',accuracy_score(y_train,y_train_pred))\nprint('Test Accuracy',accuracy_score(y_test,y_test_pred))","ef83c5fd":"from sklearn.metrics import cohen_kappa_score\ncohen_kappa_score(y_test,y_test_pred)","67e6930a":"print('Confusion Matrix(test)',confusion_matrix(y_train,y_train_pred))\ncm=confusion_matrix(y_test,y_test_pred)\ntn=cm[0,0]\ntp=cm[1,1]\nfn=cm[1,0]\nfp=cm[0,1]\naccuracy=(tp+tn)\/(tp+tn+fp+fn)\nmisclassification_error=1-accuracy\nsensitivity=tp\/float(tp+fn)\nspecificity=tn\/float(tn+fp)","426b4d2d":"print('The misclassifiction error is',misclassification_error)","414a7ce6":"print('Negative Liklihood ratio is',(1-sensitivity)\/specificity)","f351f8a4":"print('Positive Liklihood ratio is',sensitivity\/(1-specificity))","9f524a71":"We observe no relationship between them. We can consider dropping the column Clod9am and Clod3pm.","1b081dae":"We observe a slight correlation between the variables 'RainToday' and 'RainTomorrow'.\nIf there is no RainToday there is a high chance that there will be no rain tomorrow also.","151322fd":"When humidity is very less then the chances of getting rain tomorrow is very less.","6cdab0e4":"Mostly the wind direction at 3pm is towards SE about 8%.","53767fde":"The model seems to perform well. There is no problem of overfitting also.","212b6751":"# Treating outliers using Capping and Flooring technique","fd7e61e2":"Most of the strong winds in a given period of time is towards the West direction.","aa464d1e":"1. Categorical variables:\nLocation,WindGustDir,WindDir9am,WindDir3pm,RainToday,RainTomorrow\n2. Numerical variables:  MinTemp,MaxTemp,Rainfall,Evaporation,Sunshine,WindGustSpeed,WindSpeed9am,WindSpeed3pm,Humidity9pm,Humidty3pm,Pressure9am,Pressure3pm,Cloud9am,Cloud3pm,Temp9am,Temp3pm,RISK_MM","e3fff95c":"- cohen_kappa_score is a metric to establish the relevancy between the predicted values and actual values.\n- A Cohen Kappa Score of 1 indicates that there is a perfect aggreement. But anything above 0 is a desirable value.\n","480c8af1":"1. Right skewed: MinTemp,MaxTemp,Rainfall,Evaporation,WindGustSpeed,WindSpeed9am,RISK_MM\n2. Left Skewed: Sunshine,WindSpeed3pm,Humidity9am,Humidity3pm,Cloud9am,Cloud3pm\n3. Slighlty left skewed: Pressure9am\n4. Slightly right skewed: Pressure3pm,Temp9am,Temp3pm\n5. Standard deviation is the highest for Humidity3pm column. This factor to be considered while choosing the features for modelling.","d602f9ad":"Mostly the wind direction at 9am is towards N aound 8% of the time.","e6107339":"As the RISK_MM increases the chances of getting rain also increases.","e222c789":"> We observe that the outliers have reduced significantly after treating them.","786b2f7f":"So based on our observations we will drop the columns Clod9am and Clod3pm.\nWe will drop the Location and Date column as well as it is not very much relevant for our analysis.","25327929":"1. We observe that the highest correlation for our target variable exists with the 'RISK_MM' column.\n2. The second highest correlation for our target variable exists with the 'Humidity3pm' column.\n3. Highest negative correlation is observed with Temp3pm.","a47541bc":"The most frequent location is 'Canberra' occuring 3418 times.\nThe most frequent value for the RainToday and RainTomorrow column is 'No'.\nThe most frequent WindDir3pm is 'SE' occuring 10663.\nThe most frequent value for the WindDir9am' is 'N'.","fc3eed5f":"We will apply appropriate transforms to reduce the outliers."}}