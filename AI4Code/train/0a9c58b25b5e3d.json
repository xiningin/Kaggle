{"cell_type":{"181fb8e9":"code","9544ed1b":"code","5a85444d":"code","32e2e0d6":"code","01114370":"code","637fa4c1":"code","5a5c20a8":"code","15b08cb5":"code","7f06f563":"code","3386f951":"code","2f5d9d20":"code","10ea53e3":"code","2820bccd":"code","56607d04":"markdown","931d8929":"markdown","b3c160db":"markdown","d0dab4cc":"markdown","c36bfab2":"markdown","a6b8b3fd":"markdown","23aa83f0":"markdown","b13fae08":"markdown"},"source":{"181fb8e9":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9544ed1b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom datetime import date\nimport requests","5a85444d":"mydateparser = lambda x: pd.datetime.strptime(x, \"%d\/%m\/%y\")\ndf_covid19_india = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv', parse_dates = ['Date'] ,date_parser = mydateparser)\ndf_patients = pd.read_csv('\/kaggle\/input\/covid19-in-india\/IndividualDetails.csv')","32e2e0d6":"df_patients.head()\nperc_age_null = df_patients[df_patients.age.isnull()].shape[0] \/ df_patients.shape[0]\nperc_gender_null = df_patients[df_patients.gender.isnull()].shape[0] \/ df_patients.shape[0]\nprint('Percentage of records without age {:.2f} %'.format(perc_age_null*100))\nprint('Percentage of records without gender {:.2f} %'.format(perc_gender_null*100))","01114370":"df_patients_sanity = df_patients.groupby('detected_state').agg({'age':['count'], 'gender':['count'], 'id':['count']})\ndf_patients_sanity['%age data given'] = df_patients_sanity['age'] \/ df_patients_sanity['id']\ndf_patients_sanity['%gender data given'] = df_patients_sanity['gender'] \/ df_patients_sanity['id']\ndf_patients_sanity.sort_values(['%age data given','%gender data given'], ascending=False)","637fa4c1":"df_statewise_timeseries = df_covid19_india.groupby(['Date','State\/UnionTerritory']).agg({'Confirmed':['sum'], 'Cured':['sum'], 'Deaths':['sum']})\n# df_statewise_timeseries = df_statewise_timeseries.sort_values(['Date', 'State\/UnionTerritory'])\ndf_statewise_timeseries = df_statewise_timeseries.reset_index()\ndf_statewise_timeseries.columns = df_statewise_timeseries.columns.get_level_values(0)","5a5c20a8":"fig = px.line(df_statewise_timeseries, x='Date', y='Confirmed', color='State\/UnionTerritory', line_group='State\/UnionTerritory', labels = 'Tag')\nfig.update_layout(template='plotly_dark')\nfig.show()","15b08cb5":"df_statewise_timeseries","7f06f563":"# fig = px.scatter( confirmed_by_country_df, x='Confirmed', y='Confirmed', log_y=True,  size = 'Deaths', color = 'Deaths',\n#                  log_x=True,  hover_name='Country', animation_frame=\"Date\", animation_group=\"Country\", text='Country',\n#                 )\nmax_xvalue = df_statewise_timeseries.Confirmed.max()\nmax_xvalue = np.log10(max_xvalue) + 1\n\nmax_yvalue = df_statewise_timeseries.Deaths.max() \n# max_yvalue = np.log10(max_yvalue) + 1\n\ndf_statewise_timeseries['Date_str'] = df_statewise_timeseries.Date.apply(lambda x: x.date()).apply(str) \nfig = px.scatter( df_statewise_timeseries, x='Confirmed', y='Deaths',  color = 'Deaths',\n                 log_x=True,  hover_name='State\/UnionTerritory', animation_frame='Date_str', animation_group='State\/UnionTerritory', text='State\/UnionTerritory'\n                )\nfig.update_layout(template='plotly_dark', title='State-wise Confirmed Rate Analysis', )\nfig.update_xaxes(range=[0, max_xvalue])\nfig.update_yaxes(range=[0, max_yvalue])\nfig.show()","3386f951":"r = requests.get(url='https:\/\/raw.githubusercontent.com\/geohacker\/india\/master\/state\/india_telengana.geojson')\n# r = requests.get(url='https:\/\/raw.githubusercontent.com\/karthikcs\/india-states-geojson\/master\/india-states.geojson')\n# r = requests.get(url='https:\/\/github.com\/karthikcs\/india-states-geojson\/raw\/master\/map.geojson')\n\ngeojson = r.json()\n\ndef change_state_name(state):\n    if state == 'Odisha':\n        return 'Orissa'\n    elif state == 'Telengana':\n        return 'Telangana'\n    elif state == 'Jharkhand#':\n        return 'Jharkhand'\n    return state","2f5d9d20":"df_ind_cases = df_statewise_timeseries\ndf_ind_cases['State\/UnionTerritory'] = df_ind_cases.apply(lambda x: change_state_name(x['State\/UnionTerritory']), axis=1)\nlast_date = df_ind_cases.Date.max()\ndf_ind_states = df_ind_cases.copy()\ndf_ind_cases = df_ind_cases[df_ind_cases['Date']==last_date]\ncolumns = ['State\/UnionTerritory', 'Cured', 'Deaths','Confirmed']\ndf_ind_cases = df_ind_cases[columns]\ndf_ind_cases.sort_values('Confirmed',inplace=True, ascending=False)\ndf_ind_cases.reset_index(drop=True,inplace=True)\ndf_ind_cases.style.background_gradient(cmap='Reds')","10ea53e3":"# max_y = df_statewise_timeseries['Confirmed'].max()\ndf_statewise_timeseries.sort_values(['Date','Confirmed'], ascending=[True,False], inplace=True)\nfig = px.bar(df_statewise_timeseries, log_y = True, x='State\/UnionTerritory', y='Confirmed', animation_frame='Date_str', animation_group='State\/UnionTerritory', )\nfig.update_layout(template='plotly_dark', title='State-wise confirmed cases over period of time', )\nfig.show()","2820bccd":"fig = px.choropleth(df_ind_cases, geojson=geojson, \n                    color=\"Confirmed\",\n                    locations=\"State\/UnionTerritory\", featureidkey=\"properties.NAME_1\",\n                    hover_data=['Cured','Deaths'],\n                    color_continuous_scale=px.colors.sequential.YlOrRd,\n                    title='India: Total Current cases per state'\n                   )\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600,margin={\"r\":0,\"t\":30,\"l\":0,\"b\":30})\nfig.show()","56607d04":"# Sanity Check\nWe know that these data have been consolidated by the state bulletins provided on daily basis. Let us see how states have been providing data, how is the sanity with respect to age and gender of the patients\n","931d8929":"Let us see which states are giving better data. ","b3c160db":"Let us explore all the datasets what we have in this kernel","d0dab4cc":"Let us check how states have handled the cases over a period of time","c36bfab2":"Karnataka, Goa and Bihar are providing comaparitevly better data","a6b8b3fd":"# Coronavirus (Covid19) India Analysis\nLet us analyse the Covid19 data from India","23aa83f0":"Let us see state choropleth map to see how total cases have been distributed","b13fae08":"Some references\n1. Referred https:\/\/www.kaggle.com\/anshuls235\/covid19-explained-through-visualizations for India Choropleth map"}}