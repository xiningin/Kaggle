{"cell_type":{"9c2fa695":"code","132689c2":"code","9c7efe23":"code","717f6da7":"code","90d12dcd":"code","32ce3f97":"code","29d4a913":"code","f63a02e2":"code","eccaccd5":"code","7f9a531b":"code","de900e03":"code","cda5d59c":"code","d478f01e":"code","909455da":"code","055d6439":"code","a0af2197":"code","461d3671":"code","5ef888f6":"code","21de15ea":"code","d2dae377":"markdown","633dafe3":"markdown","e7746f4b":"markdown","b28e0939":"markdown","3036e2f6":"markdown","eadc2cfe":"markdown","55ca3ead":"markdown","6410e5d1":"markdown","4e9a521c":"markdown"},"source":{"9c2fa695":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport cufflinks\ncufflinks.go_offline(connected=True)\ninit_notebook_mode(connected=True)\n\nimport folium\nplt.style.use('ggplot')\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","132689c2":"df_daily = pd.read_csv('..\/input\/dailydata\/03-23-2020.csv')\ndf_time_series_confirmed = pd.read_csv('..\/input\/timeseries\/time_series_covid19_confirmed_global.csv')\ndf_time_series_death = pd.read_csv('..\/input\/timeseries\/time_series_covid19_deaths_global.csv')\ndf_dolar_brazil = pd.read_csv('..\/input\/financialdata\/USD_BRL.csv')","9c7efe23":"df_daily.head(5)","717f6da7":"df_time_series_death.head()","90d12dcd":"df_dolar_brazil.head()","32ce3f97":"top_country_death = df_daily[['Country_Region','Deaths']]\ntop_country_death = top_country_death.groupby(['Country_Region'], as_index=False).sum()\ntop_country_death = top_country_death.sort_values(by=['Deaths'], ascending=False).head(10)\nfig = px.bar(top_country_death, y='Deaths', x='Country_Region', color='Country_Region', orientation=\"v\")\n\nfig.update_layout(\n    title={\n        'text': 'Top 10 pa\u00edses com o maior n\u00famero de \u00f3bitos',\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.update_xaxes(title_text='Pa\u00eds')\nfig.update_yaxes(title_text='N\u00famero de \u00f3bitos')\n\nfig.show()","29d4a913":"top_country_death = df_daily[['Country_Region','Deaths']]\ntop_country_death = top_country_death.groupby(['Country_Region'], as_index=False).sum()\ntop_country_death = top_country_death.sort_values(by=['Deaths'], ascending=False).head(10)\n\ncoronavirus_worldwide = df_time_series_death.drop(columns = ['Province\/State','Lat', 'Long'])\ncoronavirus_worldwide = coronavirus_worldwide.groupby(['Country\/Region']).sum()\ncoronavirus_worldwide = coronavirus_worldwide.sort_values(by = coronavirus_worldwide.columns[-1], ascending = False)\ncoronavirus_worldwide = coronavirus_worldwide.head(10)\ncoronavirus_worldwide = coronavirus_worldwide.transpose()\ncoronavirus_worldwide.iplot(asFigure=True,kind='line',xTitle='Data',yTitle='N\u00famero de \u00d3bitos',title='S\u00e9rie temporal dos top 10 pa\u00edses com o maior n\u00famero de \u00f3bitos')","f63a02e2":"df_groupby = df_daily.groupby(['Country_Region'], as_index=False).sum()\n\ndf_without_death = df_groupby.copy()\ndf_without_death = df_without_death.loc[(df_without_death['Deaths'] == 0) & (df_without_death['Confirmed'] == 0)]\ndf_without_death_and_confirmed = df_groupby.copy()\ndf_without_death_and_confirmed = df_without_death_and_confirmed.loc[(df_without_death_and_confirmed['Deaths'] == 0) & (df_without_death_and_confirmed['Confirmed'] >= 0)]\ndf_death_and_confirmed = df_groupby.copy()\ndf_death_and_confirmed = df_death_and_confirmed.loc[(df_death_and_confirmed['Deaths'] >= 1)]","eccaccd5":"fig = go.Figure(data=go.Scattergeo(\n        lon = df_without_death_and_confirmed['Long_'],\n        lat = df_without_death_and_confirmed['Lat'],\n        mode = 'markers',\n        hovertext=df_without_death_and_confirmed['Country_Region'],\n        marker = dict(\n            color = 'orange',\n            line = {'width': 1,'color': 'orange'},\n            sizemode = 'area')\n        ))\n\nfig.update_layout(\n        title={\n        'text': 'Pa\u00edses em que n\u00e3o h\u00e1 ocorr\u00eancia de \u00f3bito por coronavirus <br> (entre os que j\u00e1 registraram casos confirmados)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","7f9a531b":"fig = go.Figure(data=go.Scattergeo(\n        lon = df_death_and_confirmed['Long_'],\n        lat = df_death_and_confirmed['Lat'],\n        mode = 'markers',\n        hovertext=df_death_and_confirmed['Country_Region']+ ' - \u00d3bitos: ' ++ df_death_and_confirmed['Deaths'].astype(str),\n        marker = dict(\n            color = 'red',\n            line = {'width': 1,'color': 'red'},\n            sizemode = 'area')\n        ))\n\nfig.update_layout(\n        title={\n        'text': 'Pa\u00edses em que h\u00e1 ocorr\u00eancia de \u00f3bito por coronavirus',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","de900e03":"df_groupby_south_america = df_groupby.copy()\n\ndf_groupby_south_america = df_groupby_south_america.loc[(df_groupby_south_america['Country_Region'] == \"Brazil\") | (df_groupby_south_america['Country_Region'] == \"Argentina\") \n                          | (df_groupby_south_america['Country_Region'] == \"Bolivia\") | (df_groupby_south_america['Country_Region'] == \"Uruguay\") \n                          | (df_groupby_south_america['Country_Region'] == \"Chile\") | (df_groupby_south_america['Country_Region'] == \"Paraguay\")\n                          | (df_groupby_south_america['Country_Region'] == \"Peru\")| (df_groupby_south_america['Country_Region'] == \"Colombia\")\n                          | (df_groupby_south_america['Country_Region'] == \"Venezuela\")| (df_groupby_south_america['Country_Region'] == \"Ecuador\")\n                          | (df_groupby_south_america['Country_Region'] == \"Guyana\") | (df_groupby_south_america['Country_Region'] == \"Suriname\")\n                          | (df_groupby_south_america['Country_Region'] == \"French Guiana\")]","cda5d59c":"top_country_south_america_death = df_groupby_south_america.loc[(df_groupby_south_america['Deaths'] >= 1)]\ntop_country_south_america_death = top_country_south_america_death.sort_values(by=['Deaths'], ascending=False).head(15)\nfig = px.bar(top_country_south_america_death, y='Deaths', x='Country_Region', color='Country_Region', orientation=\"v\")\n\nfig.update_layout(\n    title={\n        'text': 'Pa\u00edses sul-americanos com o maior n\u00famero de \u00f3bitos por coronavirus',\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.update_xaxes(title_text='Pa\u00eds')\nfig.update_yaxes(title_text='N\u00famero de \u00f3bitos')\n\nfig.show()","d478f01e":"df_groupby_south_america.loc[df_groupby_south_america['Deaths'] >=1, 'Having Death'] = 'yes'\ndf_groupby_south_america.loc[(df_groupby_south_america['Deaths'] == 0) & (df_groupby_south_america['Confirmed'] == 0), 'Having Death'] = 'still safe'\ndf_groupby_south_america.loc[(df_groupby_south_america['Deaths'] == 0) & (df_groupby_south_america['Confirmed'] >= 1), 'Having Death'] = 'only confirmed'","909455da":"colors = {\n 'yes': 'red',\n 'still safe': 'green',\n 'only confirmed': 'orange'\n}\n\nsouth_america_map = folium.Map(\n    location=[-14.235,-51.9253],\n    zoom_start=3\n)\n\nfor _, sa in df_groupby_south_america.iterrows():\n    if sa['Having Death'] in colors.keys():\n        folium.Marker(\n            location=[sa['Lat'], sa['Long_']],\n            tooltip=str(sa['Confirmed'])+ str(\" Confirmed\")+\" | \"+str(sa['Recovered'])+ str(\" Recovered\")+\" | \"+str(sa['Deaths'])+ str(\" Deaths\"),\n            icon=folium.Icon(color=colors[sa['Having Death']])\n        ).add_to(south_america_map)\n\nsouth_america_map","055d6439":"df_brazil_china_italy = df_time_series_confirmed.copy()\ndf_brazil_china_italy = df_brazil_china_italy.drop(columns = ['Province\/State','Lat', 'Long'])\ndf_brazil_china_italy = df_brazil_china_italy.groupby(['Country\/Region'], as_index=False).sum()\ndf_brazil_china_italy = df_brazil_china_italy.loc[(df_brazil_china_italy['Country\/Region'] == \"Brazil\") \n                                                  | (df_brazil_china_italy['Country\/Region'] == \"China\") \n                                                  | (df_brazil_china_italy['Country\/Region'] == \"Italy\")]\ndf_brazil_china_italy = df_brazil_china_italy.groupby(['Country\/Region']).sum()\ndf_brazil_china_italy = df_brazil_china_italy.sort_values(by = df_brazil_china_italy.columns[-1], ascending = False)\ndf_brazil_china_italy = df_brazil_china_italy.head(10)\ndf_brazil_china_italy = df_brazil_china_italy.transpose()\ndf_brazil_china_italy.iplot(asFigure=True,kind='line',xTitle='Data',yTitle='N\u00famero de Casos Confirmados',title='Crescimento do n\u00famero de casos confirmados entre Brasil, China e It\u00e1lia')","a0af2197":"df_brazil_china_italy = df_time_series_death.copy()\ndf_brazil_china_italy = df_brazil_china_italy.drop(columns = ['Province\/State','Lat', 'Long'])\ndf_brazil_china_italy = df_brazil_china_italy.groupby(['Country\/Region'], as_index=False).sum()\ndf_brazil_china_italy = df_brazil_china_italy.loc[(df_brazil_china_italy['Country\/Region'] == \"Brazil\") \n                                                  | (df_brazil_china_italy['Country\/Region'] == \"China\") \n                                                  | (df_brazil_china_italy['Country\/Region'] == \"Italy\")]\ndf_brazil_china_italy = df_brazil_china_italy.groupby(['Country\/Region']).sum()\ndf_brazil_china_italy = df_brazil_china_italy.sort_values(by = df_brazil_china_italy.columns[-1], ascending = False)\ndf_brazil_china_italy = df_brazil_china_italy.head(10)\ndf_brazil_china_italy = df_brazil_china_italy.transpose()\ndf_brazil_china_italy.iplot(asFigure=True,kind='line',xTitle='Data',yTitle='N\u00famero de \u00d3bitos',title='Crescimento do n\u00famero de \u00f3bitos entre Brasil, China e It\u00e1lia')","461d3671":"df_time_series_confirmed_brazil = df_time_series_confirmed.copy()\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.drop(columns = ['Province\/State','Lat', 'Long'])\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.groupby(['Country\/Region'], as_index=False).sum()\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.loc[(df_time_series_confirmed_brazil['Country\/Region'] == \"Brazil\")]\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.groupby(['Country\/Region']).sum()\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.sort_values(by = df_time_series_confirmed_brazil.columns[-1], ascending = False)\ndf_time_series_confirmed_brazil = df_time_series_confirmed_brazil.transpose()\ndf_time_series_confirmed_brazil.iplot(asFigure=True,kind='line',xTitle='Data',yTitle='N\u00famero de casos confirmados',title='N\u00famero de pessoas confirmadas com coronavirus no Brasil')","5ef888f6":"df_dolar_brazil = df_dolar_brazil.stack().str.replace(',','.').unstack()\ndf_dolar_brl = df_dolar_brazil.copy()\ndf_dolar_brl = df_dolar_brl.drop(columns = ['Abertura','M\u00e1xima','M\u00ednima','Var%'])\ndf_dolar_brl['\u00daltimo'] = df_dolar_brl['\u00daltimo'].astype(float)\ndf_dolar_brl['Data'] = pd.to_datetime(df_dolar_brl['Data'], format='%d.%m.%Y')\ndf_dolar_brl = df_dolar_brl.sort_values(by='Data',ascending=True)\ndf_dolar_brl['Data1'] = df_dolar_brl['Data'].dt.strftime('%m\/%d\/%Y')","21de15ea":"fig = go.Figure([go.Scatter(x=df_dolar_brl['Data1'], y=df_dolar_brl['\u00daltimo'])])\nfig.update_layout(\n        title={\n        'text': 'Oscila\u00e7\u00e3o do d\u00f3lar no Brasil',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.update_xaxes(title_text='Data')\nfig.update_yaxes(title_text='Valor do D\u00f3lar')\n\nfig.show()","d2dae377":"J\u00e1 o conjunto de dados final apresenta a varia\u00e7\u00e3o do d\u00f3lar por dia. Neste estudo iremos observar apenas o valor em que o d\u00f3lar foi fechado no respectivo dia. ","633dafe3":"O primeiro tipo de conjunto de dados analisado ser\u00e1 o **di\u00e1rio**, que ir\u00e1 mostrar a informa\u00e7\u00e3o consolidada de um determinado dia. Nele, \u00e9 poss\u00edvel obter dados de localiza\u00e7\u00e3o (*Province\/State, Country_Region,Lat* e *Long_*), dados de tempo (*Last Update*) e dados sobre os casos de coronavirus (*Confirmed, Deaths, Recovered*) do \u00faltimo dia.","e7746f4b":"**N\u00famero de casos confirmados, casos de recupera\u00e7\u00e3o e \u00f3bitos por coronavirus**\n\nOs marcadores vermelhos sinalizam que o pa\u00eds j\u00e1 obteve pelo menos 1 caso confirmado de \u00f3bito. Pa\u00edses sinalizados em laranja possuem apenas, at\u00e9 o momento, casos confirmados de pessoas infectadas pelo v\u00edrus. Ao passar o mouse em cima dos marcadores, \u00e9 poss\u00edvel visualizar o n\u00famero de casos confirmados, n\u00famero de pessoas recuperadas e n\u00famero de \u00f3bitos por pa\u00eds.","b28e0939":"<center><img src=\"https:\/\/ichef.bbci.co.uk\/images\/ic\/720x405\/p086bx5w.jpg\"><\/center>\n<br>\n*<center>Fonte: www.bbc.com<\/center>*\n","3036e2f6":"# **_importa\u00e7\u00e3o e visualiza\u00e7\u00e3o pr\u00e9via dos dados**\n\nPrimeiramente, iremos importar os quatro conjuntos de dados que ser\u00e3o utilizados neste trabalho. Os tr\u00eas primeiros se tratam dos dados sobre o coronavirus, disponibilizados e atualizados desde janeiro de 2020 pela John Hopkins University e que podem ser dividos em duas categorias: di\u00e1rio e de s\u00e9rie temporal. O quarto *dataset* utilizado diz respeito a varia\u00e7\u00e3o do d\u00f3lar no Brasil a partir do m\u00eas de fevereiro de 2020. ","eadc2cfe":"### Este notebook tem por objetivo apresentar os dados relacionados ao coronavirus no mundo, com \u00eanfase nos casos identificados na Am\u00e9rica do Sul e no Brasil. Os [dados utilizados](http:\/\/github.com\/CSSEGISandData\/COVID-19) s\u00e3o fornecidos e atualizados diariamente pela John Hopkins University. Os dados financeiros s\u00e3o coletados do site [www.investing.com](http:\/\/www.investing.com).","55ca3ead":"# **_an\u00e1lise gr\u00e1fica dos dados**\nO objetivo desta an\u00e1lise \u00e9 apresentar um panorama da propaga\u00e7\u00e3o do coronav\u00edrus no \u00faltimo dia e ao longo do tempo. Em seguida, ser\u00e1 mostrado de modo espec\u00edfico o cen\u00e1rio na Am\u00e9rica do Sul e no Brasil.","6410e5d1":"O segundo tipo de conjunto de dados analisado ser\u00e1 o de **s\u00e9rie temporal**, que visa mostrar as observa\u00e7\u00f5es acerca da propaga\u00e7\u00e3o do v\u00edrus ao redor do mundo registradas de modo sequencial, neste caso, desde o dia 22-01-2020 at\u00e9 o dia 23-03-2020.","4e9a521c":"No gr\u00e1fico acima \u00e9 poss\u00edvel observar que o Brasil teve o seu primerio caso confirmado de \u00f3bito por coronavirus no dia 18-03-2020. Quatro dias depois, em 21-03-2020, esse n\u00famero subiu para 11.\n\nNa It\u00e1lia, o primeiro caso de \u00f3bito por corovirus foi registrado em 21-02-2020. Quatro dia depois, em 25-02-2020, registrou 10 mortes. "}}