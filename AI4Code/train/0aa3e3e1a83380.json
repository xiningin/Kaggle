{"cell_type":{"179bc6e2":"code","e84d69ff":"code","a6b7ac51":"code","711778e8":"code","f8f0882f":"code","c2f8f311":"code","5432de4d":"code","f22f8717":"code","18d4ad90":"code","9aa562e1":"code","0dda1245":"code","661b7ce8":"code","99fdb059":"code","8ee40f45":"code","2662eeac":"code","4a1b45c1":"code","bb1d7a58":"code","c0048ae2":"code","195a7b16":"code","486dbfa8":"code","a2271df7":"code","a731964c":"code","bdf4b37d":"code","d1bbd07b":"code","73b9b50a":"code","466c13b7":"code","e41bfbba":"code","1f12cd36":"code","7aa438df":"code","007eec82":"code","cc09cbb6":"code","c76f98d0":"code","e85d28f0":"code","7afeb84c":"code","268d8f6e":"code","59b36501":"markdown","67f2df50":"markdown","999299eb":"markdown","8f31ffc1":"markdown","0387ee5b":"markdown","47eb34ee":"markdown","c3bb8acb":"markdown","0202075d":"markdown","23053902":"markdown","3bf44a41":"markdown","84c779b5":"markdown","efd2d650":"markdown","dcd881ef":"markdown","f5c51770":"markdown","c07c6dc6":"markdown","8949d509":"markdown","47bc7185":"markdown","8570b7e3":"markdown","5dda26dd":"markdown","72524d18":"markdown","44564dc6":"markdown","5d94878b":"markdown","59cb1543":"markdown"},"source":{"179bc6e2":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px \nimport plotly.graph_objs as go \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e84d69ff":"df=pd.read_csv('\/kaggle\/input\/covid19-tweets\/covid19_tweets.csv')","a6b7ac51":"df.head()","711778e8":"df.shape","f8f0882f":"df.info()","c2f8f311":"df.isna().sum()","5432de4d":"plt.figure(figsize=(15,5))\nloca = df['user_location'].value_counts().sort_values(ascending=False)\nloc= loca.head(5)\nloc.plot.bar(color=['black', 'red', 'green', 'blue', 'cyan'])\nplt.title('User locations with maximum tweets')\nplt.xlabel('User Location')\nplt.ylabel('Tweet Count')\nplt.show()\n","f22f8717":"grouped = df.groupby(df.user_name)[[\"user_location\"]].count().reset_index()\ngrouped.columns= ['user_name','count']\ngrouped = grouped.sort_values(by = \"count\" , ascending = False)\ngrouped= grouped.head(10)\ngrouped\n\n\nfig = px.bar(grouped, x='user_name', y='count',title = 'Usernames with most Tweets')\nfig.show()\n\n\n","18d4ad90":"plt.figure(figsize=(15,5))\n\ndf['user_verified'].value_counts().plot.bar()\nplt.title('Verified and Non Verified Accounts')\nplt.xlabel('Verified or Not')\nplt.ylabel('Count')\nplt.show()","9aa562e1":"col_one_list = df['date'].tolist()\ncol_one_list\n\n\nlst=[]\nfor i in col_one_list:\n    lst.append(str(i).split(' ')[0])","0dda1245":"df['Dates'] = lst\n","661b7ce8":"plt.figure(figsize=(15,5))\n\ndf['Dates'].value_counts().plot.bar()\nplt.title('Dates with maximum tweets')\nplt.xlabel('Tweet Dates')\nplt.ylabel('Tweet Count')\nplt.show()","99fdb059":"plt.figure(figsize=(15,5))\nsouce = df['source'].value_counts().sort_values(ascending=False)\nsource = souce.head(10)\nsource.plot.bar(color=['black', 'red', 'green', 'blue', 'cyan','pink','purple','violet','yellow','orange'])\nplt.title('User Platform with maximum tweets')\nplt.xlabel('User Platform')\nplt.ylabel('Tweet Count')\nplt.show()","8ee40f45":"def hashtag(x):\n  x = str(x)\n  x = x.replace('[','')\n  x = x.replace(']','')\n  x = x.split(',')\n  return x\n  \ndf['hashtag'] = df['hashtags'].apply(lambda y : hashtag(y))\ndf = df.explode('hashtag')\ndf['hashtag'] = df['hashtag'].astype(str)\ndf['hashtag'] = df['hashtag'].str.replace(\"'\",'')\ndf['hashtag'] = df['hashtag'].str.replace('\"','')\n\ndf['hashtag'] = df['hashtag'].str.replace(\" \",'')\ndf= df[df['hashtag'] != 'nan']\n","2662eeac":"plt.figure(figsize=(15,5))\nsouce = df['hashtag'].value_counts().sort_values(ascending=False)\nsource = souce.head(10)\nsource.plot.bar(color=['black', 'red', 'green', 'blue', 'cyan','pink','purple','violet','yellow','orange'])\nplt.title('Hashtag  with maximum Usage')\nplt.xlabel('Hashtag')\nplt.ylabel('Count')\nplt.show()","4a1b45c1":"tab = pd.crosstab(df.Dates,df.user_location)\ntab.head(10)","bb1d7a58":"col_2_list = df['date'].tolist()\ncol_2_list\n\n\nlst=[]\nfor i in col_2_list:\n    lst.append(str(i).split(' ')[1])\n\ndf['time']= lst","c0048ae2":"df['hashtags'] = df['hashtags'].fillna('[]')\ndf['hashtag_count'] = df['hashtags'].apply(lambda x : len(x.split(',')))\ndf.loc[df['hashtags'] == '[]', 'hashtag_count'] = 0\ndf.head(10)","195a7b16":"df['hashtag_count'].describe()","486dbfa8":"hash = df['hashtag_count'].value_counts()\nhash.plot.bar()\nplt.title('No of hashtags per post')\nplt.xlabel('No of Hashtag')\nplt.ylabel('Count')\nplt.show()","a2271df7":"col_3 = df['Dates'].tolist()\nlst3 = []\nfor i in col_3:\n  lst3.append(str(i).split('-')[1])\ndf['month'] = lst3","a731964c":"df.head()\n\ndef month(x):\n  x = str(x)\n  x = x.replace('01','Jan')\n  x = x.replace('02','Feb')\n  x = x.replace('03','March')\n  x = x.replace('04','April')\n  x = x.replace('05','May')\n  x = x.replace('06','June')\n  x = x.replace('07','July')\n  x = x.replace('08','August')\n  x = x.replace('09','Sept')\n  x = x.replace('10','Oct')\n  x = x.replace('11','Nov')\n  x = x.replace('12','Dec')\n  return x\n\ndf['month'] = df['month'].apply(lambda row : month(row))\n\n","bdf4b37d":"df['month']","d1bbd07b":"dm = df.groupby('month').size()\n\n\ndm.plot(kind='pie', subplots=True, figsize=(15, 8))\nplt.title(\"Pie Chart tweets in different months\")\nplt.ylabel(\"\")\nplt.show()","73b9b50a":"\njuly = df['user_location'][df['month'] == 'July'].value_counts().sort_values(ascending=False)\njuly[0:10].plot(kind = 'bar', title = '10 Most tweeting countries In July',color=['black', 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('User Location')\nplt.ylabel('Tweet Count')\nplt.show()","466c13b7":"\naug = df['user_location'][df['month'] == 'August'].value_counts().sort_values(ascending=False)\naug[0:10].plot(kind = 'bar', title = '10 Most tweeting countries In August',color=['black', 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('User Location')\nplt.ylabel('Tweet Count')\nplt.show()","e41bfbba":"from matplotlib import cm\nind = df['hashtag'][df['user_location'] == 'India'].value_counts().sort_values(ascending=False)\nind[0:10].plot(kind = 'bar', title = '10 Most tweeting countries In August',color=[ 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('User Location')\nplt.ylabel('Tweet Count')\nplt.show()","1f12cd36":"from matplotlib import cm\nus = df['hashtag'][df['user_location'] == 'United States'].value_counts().sort_values(ascending=False)\nus[0:10].plot(kind = 'bar', title = '10 Most Hashtags used in India',color=[ 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('Hashtags')\nplt.ylabel(' Count')\nplt.show()","7aa438df":"from matplotlib import cm\nnd = df['hashtag'][df['user_location'] == 'New Delhi, India'].value_counts().sort_values(ascending=False)\nnd[0:10].plot(kind = 'bar', title = '10 Most Hashtags used in New,Delhi',color=[ 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('Hashtags')\nplt.ylabel(' Count')\nplt.show()","007eec82":"from matplotlib import cm\nmum = df['hashtag'][df['user_location'] == 'Mumbai, India'].value_counts().sort_values(ascending=False)\nmum[0:10].plot(kind = 'bar', title = '10 Most Hashtags used in Mumbai,India',color=[ 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('Hashtags')\nplt.ylabel(' Count')\nplt.show()","cc09cbb6":"from matplotlib import cm\nsw = df['hashtag'][df['user_location'] == 'Switzerland'].value_counts().sort_values(ascending=False)\nsw[0:10].plot(kind = 'bar', title = '10 Most Hashtags used in Switzerland',color=[ 'red', 'green', 'blue', 'cyan','black', 'red', 'green', 'blue', 'cyan'])\nplt.xlabel('Hashtags')\nplt.ylabel(' Count')\nplt.show()","c76f98d0":"df['source'].value_counts()","e85d28f0":"\npla = df['source'][df['user_location'] == 'India'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0,0.01) \nplt.figure(figsize=(5,5))\npla[0:5].plot(kind = 'pie', title = '10 Most Tweet Sources used in India', autopct='%1.1f%%',shadow=True,explode = explode)\n\nplt.show()\n","7afeb84c":"pus = df['source'][df['user_location'] == 'United States'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0,0) \nplt.figure(figsize=(5,5))\ncolor = ['red','purple','cyan','green','blue']\npus[0:5].plot(kind = 'pie', title = '10 Most Tweet Sources used in USA', autopct='%1.1f%%',explode = explode,colors = color)\n\nplt.show()","268d8f6e":"swit = df['source'][df['user_location'] == 'Switzerland'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.2, 0.1, 0,0) \nplt.figure(figsize=(12,12))\ncolor = ['orange','purple','cyan','green','blue']\nswit[0:5].plot(kind = 'pie', title = '10 Most Tweet Sources used in Switzerland', autopct='%1.1f%%',explode = explode,colors = color)\n\nplt.show()","59b36501":"Now let's change months into the name of months i.e Jan,Feb etc","67f2df50":"# **GEO PLATFORM ANALYSIS**","999299eb":"We can analyse the tweets across various platform across the globe","8f31ffc1":"Group the username and count them by the user_location attributte to know about the top tweeters by name across the globe.","0387ee5b":"We can see non verified and verified user count in our dataset.","47eb34ee":"**FS poster analysis can be used to display optimised ads in Switzerland where as WEB-App used in India and USA**","c3bb8acb":"Our data set contains null values in the user_location,user_description and hashtags columns","0202075d":"From the date column extract the date and put it into a new column\nThe older date columns contains time as well which we do not have much of  a use for.","23053902":"The dataset contains 155101 rows and 13 columns","3bf44a41":"# **GEO HASHTAG ANALYSIS**","84c779b5":"# GEO ANALYSIS OF COVID DATA\n\nThe section consists of various section of geo analysis of data\n* Data Cleaning and analysis\n* Geo-Montly Analysis\n* Geo-User Platform Analysis\n* Geo-Hashtag Analysis\n","efd2d650":"Bar plot shows the no of tweets per day","dcd881ef":"Import the CSV File","f5c51770":"A brief View of the file","c07c6dc6":"Analysis if various platforms used for tweeting during the Covid-19 based on geographical locations\nThis helps companies to flash ads on Twitter at specific location best eoptimised for the platfornm used by people .\nThis is a key step to the analysis.","8949d509":"# **Data Cleaning and Basic analysis**","47bc7185":"Crosstabs show the various user_locations on specific dates they tweeted.This could be important asset to judge the outbreak date frequency of the Corona Virus.\n","8570b7e3":"The process pf cleaning the hashtags column and making a new hashtag column and storing the data in it.\nthis is done by removing special characters and putting the data int the new column.","5dda26dd":"Plotting the location with the highest number of tweets over the globe","72524d18":"No of tweets by userlocation across various months","44564dc6":"The top hashtags used tells us about the current scenario and condition of that state.\nFor example a place with hashtag as blood has something to do with blood transfusion where as Survival show that the people are survivig more and tweet count increases subsequently\n\n* The plot shows various locations (with highest tweet count) and the top hashtags used.","5d94878b":"Adding time column to the dataset","59cb1543":"# **GEO MONTH WISE TWEET ANALYSIS**"}}