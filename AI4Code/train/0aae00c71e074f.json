{"cell_type":{"19b9af01":"code","63d541c9":"code","b83f5089":"code","f9d24761":"code","2b4b9769":"code","7fc165f2":"code","d802b040":"code","56e6813e":"code","e64e2bbe":"code","ec7c9331":"code","db9756d3":"code","dbe47398":"code","c6adb7a8":"markdown","c00654a2":"markdown","585088e7":"markdown","99bbcd5a":"markdown","74740e63":"markdown","cce143e0":"markdown","44f1d205":"markdown","40932279":"markdown","e4dfcaa4":"markdown","6a32f206":"markdown"},"source":{"19b9af01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","63d541c9":"\nimport pandas as pd\nfrom glob import glob\nimport os\nimport cv2\nimport numpy as np\nfrom collections import Counter\nimport matplotlib.pyplot as plt","b83f5089":"input_path = \"..\/input\/\"","f9d24761":"def load_df(path):    \n    def get_filename(image_id):\n        return os.path.join(input_path, \"train_images\", image_id + \".png\")\n\n    df_node = pd.read_csv(path)\n    df_node[\"file\"] = df_node[\"id_code\"].apply(get_filename)\n    df_node = df_node.dropna()\n    \n    return df_node\n\ndf = load_df(os.path.join(input_path, \"train.csv\"))\nlen(df)\n\ndf.head()","2b4b9769":"import math\n\ndef get_filelist(diagnosis=0):\n    return df[df['diagnosis'] == diagnosis]['file'].values\n\ndef subplots(filelist):\n    plt.figure(figsize=(16, 9))\n    ncol = 3\n    nrow = math.ceil(len(filelist) \/\/ ncol)\n    \n    for i in range(0, len(filelist)):\n        plt.subplot(nrow, ncol, i + 1)\n        img = cv2.imread(filelist[i])\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n        plt.imshow(img)","7fc165f2":"filelist = get_filelist(diagnosis=0)\nsubplots(filelist[:9])","d802b040":"filelist = get_filelist(diagnosis=1)\nsubplots(filelist[:9])","56e6813e":"filelist = get_filelist(diagnosis=2)\nsubplots(filelist[:9])","e64e2bbe":"filelist = get_filelist(diagnosis=3)\nsubplots(filelist[:9])","ec7c9331":"filelist = get_filelist(diagnosis=4)\nsubplots(filelist[:9])","db9756d3":"Counter(df['diagnosis'])","dbe47398":"plt.hist(df['diagnosis'], bins=5)","c6adb7a8":"Plotting retina images","c00654a2":"0 - No DR\n\n1 - Mild\n\n2 - Moderate\n\n3 - Severe\n\n4 - Proliferative DR","585088e7":"Severity 4: Proliferative DR","99bbcd5a":"Load the annotations and file","74740e63":"\nSeverity 2: Moderate","cce143e0":"\nSeverity 0: No DR\nNo abnormalities","44f1d205":"Class statics ","40932279":"Severity 3: Severe","e4dfcaa4":"**Simple visualisation of each class **","6a32f206":"\nSeverity 1: Mild\n"}}