{"cell_type":{"f47e6b82":"code","2aaa7598":"code","a4f51586":"code","b55c8dd4":"code","4ea11cce":"code","a60be7b1":"code","4defdf7b":"code","42695845":"code","bac63323":"code","1230a27f":"code","4a0f2396":"code","0976727a":"code","b78811d5":"code","03758406":"code","bb2813ac":"code","8ff9fd33":"code","afcce238":"code","5e08e721":"code","1939d8be":"markdown","327360f3":"markdown","ce1f678f":"markdown","782c696a":"markdown","05331fe5":"markdown","a662baf9":"markdown"},"source":{"f47e6b82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport imblearn\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    \n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2aaa7598":"data = pd.read_csv(\"\/kaggle\/input\/fetal-health-classification\/fetal_health.csv\")\ndata.head()","a4f51586":"sns.countplot(data.fetal_health)","b55c8dd4":"sns.barplot(data.fetal_health,data.fetal_movement)\nplt.xlabel(\"Fetal Health\")\nplt.ylabel(\"Fetal Movement\")","4ea11cce":"corr = data.corr()\ncorr.fetal_health.sort_values(ascending=False)","a60be7b1":"sns.barplot(data.fetal_health,data.prolongued_decelerations)\nplt.xlabel(\"Fetal Health\")\nplt.ylabel(\"Prolongues Decelerations\")","4defdf7b":"sns.barplot(data.fetal_health,data.abnormal_short_term_variability)\nplt.xlabel(\"Fetal Health\")\nplt.ylabel(\"abnormal_short_term_variability\")","42695845":"sns.barplot(data.fetal_health,data.percentage_of_time_with_abnormal_long_term_variability)\nplt.xlabel(\"Fetal Health\")\nplt.ylabel(\"percentage_of_time_with_abnormal_long_term_variability\")","bac63323":"sns.barplot(data.fetal_health,data.accelerations)\nplt.xlabel(\"Fetal Health\")\nplt.ylabel(\"Accelerations\")","1230a27f":"X = data.drop(\"fetal_health\",axis=1)\ny = pd.get_dummies(data.fetal_health)","4a0f2396":"X","0976727a":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\nX_scaled.shape","b78811d5":"from sklearn.model_selection import train_test_split\nX_train,X_val,y_train,y_val = train_test_split(X_scaled,y,test_size=0.2)","03758406":"X_train.shape","bb2813ac":"model = keras.Sequential([keras.layers.Dense(20,input_shape=X_train.shape,activation=\"relu\",kernel_initializer=\"HeNormal\"),\n                          keras.layers.Dense(40,activation=\"relu\"),\n                          keras.layers.Dense(80,activation=\"relu\"),\n                          keras.layers.Dropout(0.3),\n                          keras.layers.Dense(160,activation=\"relu\"),\n                          keras.layers.Dense(320,activation=\"relu\"),\n                          keras.layers.Dropout(0.3),\n                          keras.layers.Dense(640,activation=\"relu\"),\n                          keras.layers.Dense(3,activation=\"softmax\")\n    \n    \n])","8ff9fd33":"model.compile(loss=\"categorical_crossentropy\",metrics=\"accuracy\",optimizer=\"rmsprop\")\nearly_stop = keras.callbacks.EarlyStopping(patience=20)\nhistory = model.fit(X_train,y_train,validation_data=(X_val,y_val),epochs=100,callbacks=early_stop)","afcce238":"history_df = pd.DataFrame(history.history)\nplt.plot(history_df.accuracy,label=\"Accuracy\")\nplt.plot(history_df.val_accuracy,label=\"Validation Accuracy\")\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Accuracy\")\nplt.legend()\nplt.grid()","5e08e721":"history_df = pd.DataFrame(history.history)\nplt.plot(history_df.loss,label=\"Loss\")\nplt.plot(history_df.val_loss,label=\"Validation Loss\")\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Accuracy\")\nplt.legend()\nplt.grid()","1939d8be":"# **ANN Model**","327360f3":"# **Loading Data**","ce1f678f":"# **Correlation**","782c696a":"# **Creating Plots**","05331fe5":"# **Visualizing Model's Performance**","a662baf9":"# **Preprocessing**"}}