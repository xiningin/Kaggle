{"cell_type":{"72e90f52":"code","b80d0f38":"code","6036ec22":"code","c304239f":"code","e37e712c":"code","35f0d059":"code","cb5c5349":"code","6ab70f7c":"code","20e8bc67":"code","241ceb69":"code","01609de1":"code","78633c21":"code","5431437d":"code","2c779a56":"code","a0a954c4":"code","0db5d087":"code","66748279":"code","99a2e54c":"code","7f534a60":"code","60592444":"code","f4175f90":"code","175d42b4":"code","985ce433":"code","841ee2f7":"code","8399bc9e":"code","111a6472":"code","c9637462":"code","770891f7":"code","84e5e47e":"code","f6b9fcfc":"code","99f482d4":"code","3bd87b74":"code","de7de724":"code","e6ae9e50":"code","9c9614fc":"code","8ca879b6":"code","39f1d50e":"code","f4c87418":"code","3f1ebfae":"code","5efd116b":"code","b462eecb":"code","641f0806":"code","ba8e0361":"code","698fcbc0":"code","866c37d9":"code","6c38620d":"code","61c8292e":"code","b92e6c15":"code","631bd9ee":"code","4ac3f875":"code","b75ba254":"code","259b1473":"code","b7f41487":"code","c409a5fc":"code","e20f0120":"code","ada8bd08":"code","bec9568a":"code","8c1a7a82":"code","342f647e":"code","c3d6e93f":"code","d3651b6d":"code","563988ab":"code","827e8b48":"markdown","bdeb1fd8":"markdown","84254d2d":"markdown","f035de09":"markdown","11921030":"markdown","1fe1b7b5":"markdown","82365ade":"markdown","0481fa4b":"markdown","f429994f":"markdown","37e5b5b0":"markdown","503e6ab4":"markdown","972510e9":"markdown","636cf8eb":"markdown","eb393f74":"markdown","1d727380":"markdown","1eb2c871":"markdown","b804784d":"markdown","bdd1bd50":"markdown","01bf77e4":"markdown","0a2f654d":"markdown","874dab8d":"markdown","19771fae":"markdown","de9685bf":"markdown","aaf024ac":"markdown","4d1801d4":"markdown","bba76318":"markdown","f262dbd1":"markdown","50ad3aa5":"markdown","de983c46":"markdown","d929881f":"markdown","345c91af":"markdown","8a021912":"markdown","83f16356":"markdown","65e756ca":"markdown","7ce450bf":"markdown","c76b5e42":"markdown","d443c173":"markdown","48723a15":"markdown","e742b5cf":"markdown","fb1ebf40":"markdown","ad9c7891":"markdown"},"source":{"72e90f52":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\nfrom scipy import stats\n\n!pip install ipy_table\nimport ipy_table as tbl\n\nimport warnings\nwarnings.filterwarnings('ignore')","b80d0f38":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_train.head()","6036ec22":"df_train.shape","c304239f":"df_train.columns","e37e712c":"df_train.info()","35f0d059":"df_train.isnull().sum()","cb5c5349":" df_train.Survived.value_counts()","6ab70f7c":"f,ax = plt.subplots(1,2,figsize=(18,8))\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct = '%1.1f%%', ax=ax[0],shadow=True)\nax[0].set_title(\"Survived\")\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train,ax=ax[1])\nax[1].set_title('Survived')\nax[1].set_xlabel('Survived')\nplt.show()","20e8bc67":"sns.heatmap(df_train.corr(),annot=True,cmap='RdYlGn',linewidths=0.2)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.show()","241ceb69":" df_train.groupby(['Sex','Survived'])['Survived'].count()","01609de1":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf_train[['Sex', 'Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","78633c21":"pd.crosstab(df_train.Pclass,df_train.Survived,margins=True).style.background_gradient(cmap='YlGn')","5431437d":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['Blue','Red','Green'],ax=ax[0])\nax[0].set_title('Number of Passengers By Pclass')\nax[0].set_ylabel('Count')\nsns.countplot('Pclass',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead')\nplt.show()","2c779a56":"pd.crosstab([df_train.Sex,df_train.Survived],df_train.Pclass,margins=True).style.background_gradient(cmap='summer_r')","a0a954c4":"sns.factorplot('Pclass','Survived',hue='Sex',data=df_train)\nplt.show()","0db5d087":"print('Mean Age',df_train.Age.mean())\nprint('Max Age',df_train.Age.max())\nprint('Min Age',df_train.Age.min())","66748279":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot('Pclass','Age',hue='Survived',split=True,data=df_train,ax=ax[0])\nax[0].set_title('Survived vs Pclass and Age')\nax[0].set_yticks(range(0,110,10))\nsns.violinplot('Sex','Age',hue='Survived',split=True,data=df_train,ax=ax[1])\nax[1].set_title('Survived vs Age and Sex')\nax[1].set_yticks(range(0,110,10))\nplt.show()","99a2e54c":"df_train.Age.isna().sum()","7f534a60":"df_train['Intial'] = df_train.Name.str.extract('([A-Za-z]+)\\.')","60592444":"pd.crosstab(df_train.Sex,df_train.Intial).style.background_gradient(cmap='summer_r')","f4175f90":"df_train['Intial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],\n                            ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)","175d42b4":"df_train.groupby('Intial')['Age'].mean()","985ce433":"df_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Mr'),'Age']=33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Mrs'),'Age']=36\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Master'),'Age']=5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Miss'),'Age']=21\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Other'),'Age']=46","841ee2f7":"df_train.Age.isnull().sum()","8399bc9e":"f,ax=plt.subplots(1,2,figsize=(20,10))\ndf_train[df_train['Survived']==0].Age.plot.hist(ax=ax[0],bins=20,edgecolor='black',color='red')\nax[0].set_title('Survived=0')\nax[0].set_xticks(range(0,90,5))\ndf_train[df_train['Survived']==1].Age.plot.hist(ax=ax[1],bins=20,edgecolor='black',color='green')\nax[1].set_title('Survived=1')\nax[1].set_xticks(range(0,90,5));","111a6472":"sns.factorplot('Pclass','Survived', col='Intial',data=df_train)\nplt.show()","c9637462":"pd.crosstab([df_train.Embarked,df_train.Pclass],[df_train.Sex,df_train.Survived],\n            margins=True).style.background_gradient(cmap='summer_r')","770891f7":"sns.factorplot('Embarked','Survived',data=df_train)\nfig=plt.gcf()\nfig.set_size_inches(5,3)\nplt.show()","84e5e47e":"f,ax=plt.subplots(2,2,figsize=(20,10))\nsns.countplot('Embarked',data=df_train,ax=ax[0,0])\nax[0,0].set_title('No. of passangers board')\nsns.countplot('Embarked',hue='Sex',data=df_train,ax=ax[0,1])\nax[0,1].set_title('male female split for Embarked')\nsns.countplot('Embarked',hue='Pclass',data=df_train,ax=ax[1,0])\nax[1,0].set_title('Classwise split for Embarked')\nsns.countplot('Embarked',hue='Survived',data=df_train,ax=ax[1,1])\nax[1,1].set_title('Survived vs Embareked')\nplt.subplots_adjust(wspace=0.2,hspace=0.5)\nplt.show()","f6b9fcfc":"sns.factorplot('Pclass','Survived',hue='Sex',col='Embarked',data=df_train)\nplt.show();","99f482d4":"df_train.Embarked.isna().sum()","3bd87b74":"df_train.Embarked.fillna('S',inplace=True)","de7de724":"df_train.Embarked.isna().sum()","e6ae9e50":"pd.crosstab(df_train.SibSp,df_train.Survived,margins=True).style.background_gradient(cmap='summer_r')","9c9614fc":"sns.barplot('SibSp','Survived',data=df_train)\nplt.show()","8ca879b6":"pd.crosstab(df_train.SibSp,df_train.Pclass).style.background_gradient(cmap='summer_r')","39f1d50e":"pd.crosstab(df_train.Parch,df_train.Survived,margins=True).style.background_gradient(cmap='summer_r')","f4c87418":"sns.barplot('Parch','Survived',data=df_train)\nplt.show()","3f1ebfae":"print('max fare:',df_train.Fare.max())\nprint('min fare:',df_train.Fare.min())\nprint('mean fare:',df_train.Fare.mean())","5efd116b":"f,ax=plt.subplots(1,3,figsize=(20,8))\nsns.distplot(df_train[df_train['Pclass']==1].Fare,ax=ax[0])\nax[0].set_title('Fare for Pclass 1')\nsns.distplot(df_train[df_train['Pclass']==2].Fare,ax=ax[1])\nax[1].set_title('Fare for Pclass 2')\nsns.distplot(df_train[df_train['Pclass']==3].Fare,ax=ax[2])\nax[2].set_title('Fare for Pclass 2')\nplt.show();","b462eecb":"df_train1 = df_train.copy()","641f0806":"table = pd.crosstab(df_train['Survived'],df_train['Sex'])\nprint(table)","ba8e0361":"table = pd.crosstab([df_train['Survived']], df_train['Sex'])\nchi2, p, dof, expected = stats.chi2_contingency(table.values)\nresults = [\n    ['Item','Value'],\n    ['Chi-Square Test',chi2],\n    ['P-Value', p]\n]\ntbl.make_table(results)","698fcbc0":"fare_labels = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80-89', '90-99', '100+']\ndf_train['fare_group'] = pd.cut(df_train.Fare, [0,10,20,30,40,50,60,70,80,90,100,600], right=False, labels=fare_labels)\nprint(df_train.groupby(['fare_group']).Survived.mean())","866c37d9":"df_train.groupby(['fare_group']).size().plot(kind='bar',stacked=True)\nplt.title(\"Distribution of fares\",fontsize=14)\nplt.ylabel('Count')\nplt.xlabel('Fare range')","6c38620d":"table = pd.crosstab([df_train['Survived']], df_train['fare_group'])\nchi2, p, dof, expected = stats.chi2_contingency(table.values)\nresults = [\n    ['Item','Value'],\n    ['Chi-Square Test',chi2],\n    ['P-Value', p]\n]\ntbl.make_table(results)","61c8292e":"table = pd.crosstab(df_train['Survived'],df_train['Pclass'])\nprint(table)","b92e6c15":"table = pd.crosstab([df_train['Survived']], df_train['Pclass'])\nchi2, p, dof, expected = stats.chi2_contingency(table.values)\nresults = [\n    ['Item','Value'],\n    ['Chi-Square Test',chi2],\n    ['P-Value', p]\n]\ntbl.make_table(results)","631bd9ee":"age_labels = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79']\ndf_train['age_group'] = pd.cut(df_train.Age, range(0, 81, 10), right=False, labels=age_labels)\nprint(df_train.groupby(['age_group']).Survived.mean())","4ac3f875":"df_train.groupby(['age_group']).size().plot(kind='bar',stacked=True)\nplt.title(\"Distribution of Age Groups\",fontsize=14)\nplt.ylabel('Count')\nplt.xlabel('Age Group')","b75ba254":"table = pd.crosstab([df_train['Survived']], df_train['age_group'])\nchi2, p, dof, expected = stats.chi2_contingency(table.values)\nresults = [\n    ['Item','Value'],\n    ['Chi-Square Test',chi2],\n    ['P-Value', p]\n]\ntbl.make_table(results)","259b1473":"train = df_train1.copy()\n\ntrain.drop(['Name', 'Ticket', 'Cabin', 'Intial'], axis=1, inplace=True)\n\ntrain['Sex'] = train['Sex'].map({\"male\": 0, \"female\": 1})\ntrain['Male'] = np.where(train['Sex']==0, 1, 0)\ntrain['Female'] = np.where(train['Sex']==1, 1, 0)\ntrain.drop('Sex', axis=1, inplace=True)\n\ntrain['Embarked'] = train['Embarked'].map({\"S\": 1, \"C\": 2, \"Q\": 3})\ntrain['S'] = np.where(train['Embarked']==1, 1, 0)\ntrain['C'] = np.where(train['Embarked']==2, 1, 0)\ntrain['Q'] = np.where(train['Embarked']==3, 1, 0)\ntrain.drop('Embarked', axis=1, inplace=True)\n\ntrain['Fare'] = round(train['Fare'])\ntrain['Fare'] = train['Fare'].astype('int')\n\ntrain['Age'] = round(train['Age'])\ntrain['Age'] = train['Age'].astype('int')","b7f41487":"train.head()","c409a5fc":"from sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n\npredictors = train.drop(['Survived', 'PassengerId'], axis=1)\ntarget = train[\"Survived\"]\nx_train, x_val, y_train, y_val = train_test_split(predictors, target, test_size = 0.2, random_state = 0)","e20f0120":"# Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\n\nlogreg = LogisticRegression()\nlogreg.fit(x_train, y_train)\ny_pred = logreg.predict(x_val)\nacc_logreg = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_logreg)","ada8bd08":"from sklearn.svm import SVC\n\nsvc = SVC()\nsvc.fit(x_train, y_train)\ny_pred = svc.predict(x_val)\nacc_svc = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_svc)","bec9568a":"# Perceptron\nfrom sklearn.linear_model import Perceptron\n\nperceptron = Perceptron()\nperceptron.fit(x_train, y_train)\ny_pred = perceptron.predict(x_val)\nacc_perceptron = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_perceptron)","8c1a7a82":"#Decision Tree\nfrom sklearn.tree import DecisionTreeClassifier\n\ndecisiontree = DecisionTreeClassifier()\ndecisiontree.fit(x_train, y_train)\ny_pred = decisiontree.predict(x_val)\nacc_decisiontree = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_decisiontree)","342f647e":"# Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\n\nrandomforest = RandomForestClassifier()\nrandomforest.fit(x_train, y_train)\ny_pred = randomforest.predict(x_val)\nacc_randomforest = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_randomforest)","c3d6e93f":"# K-Nearest Neighbors\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier()\nknn.fit(x_train, y_train)\ny_pred = knn.predict(x_val)\nacc_knn = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_knn)","d3651b6d":"models = pd.DataFrame({\n    'Model': ['Support Vector Machine', 'K-Nearest Neighbors', 'Logistic Regression', \n              'Random Forest', 'Perceptron', 'Decision Tree'],\n    'Score': [acc_svc, acc_knn, acc_logreg, \n              acc_randomforest, acc_perceptron, acc_decisiontree]})\nmodels.sort_values(by='Score', ascending=False)","563988ab":"# Ensemble\nfrom sklearn.ensemble import StackingClassifier\n\nestimators = [('lr', LogisticRegression()), ('svc', SVC()), ('perc', Perceptron()), ('dt', DecisionTreeClassifier()), ('rf', RandomForestClassifier()), ('knn', KNeighborsClassifier())]\n\nensemble = StackingClassifier(estimators=estimators)\nensemble.fit(x_train, y_train)\ny_pred = ensemble.predict(x_val)\nacc_ensemble = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_ensemble)","827e8b48":"Inference: Women and children had the highest survival rate.","bdeb1fd8":"Inferences:\n* Survival rate for women of class 1 and 2 is almost 100%.\n* Port Q has the least survival rate for men.\n* Port S has the least survival rate for women of class 3.","84254d2d":"Inferences:\n*  Women of Pclass1 had a survival rate upto 98%.\n*  Even the men of Pclass1 had a lesser survival rate than that of the Pclass3 women.\n*  Men of Pclass3 had a survival rate as low as 15%.","f035de09":"**5. Parch** <br\/>\nIt is an Ordinal Feature","11921030":"Inference: Only about 342 people survived out of 891.","1fe1b7b5":"# Analysing the Features","82365ade":"Missing data to be imputed with a 'S' as that is the port from where the majority of passengers embarked.","0481fa4b":"**4. Embarked** <br\/>\nIt is a Categorical Feature","f429994f":"## Hypothesis 1\n\nH0 = Gender has no impact on survivability\n\nHA = Gender does impact the chances of survivability","37e5b5b0":"**5. SibSb** <br\/>\nIt is an Ordinal Feature","503e6ab4":"# Correlation Between The Features","972510e9":"**1. Sex** <br\/>\nIt is a categorical feature","636cf8eb":"# Train Models","eb393f74":"Inference: By the above plot, we can deduce that the chance of survival is 38.4%.","1d727380":"Inferences:\n* Maximun passengers from S are of Pclass3.\n* Passengers embarked at port C had the highest survival rate.\n* 95% of people embarked at port Q are of Pclass3.","1eb2c871":"Inferences:\n* P1class survival rate is around 63%.\n* P2class survival rate is around 48%.\n* P3class survival rate is around 25%.","b804784d":"**6. Fare** <br\/>\nIt is a Continous Feature","bdd1bd50":"Inferences: \n* The null value count for the age feature is significant when compared to the number of training examples, around 20%.\n* Therefore, it is essential that we impute the missing values cleverly so as to prevent mis-interpretation of the resultant data.\n* We can know which age group a person belongs by extracting the intials from their name.","01bf77e4":"# Hypothesis Testing","0a2f654d":"Inference: Features are less correlated to each other.","874dab8d":"## Hypothesis 4\n\nH0 = Age Group has no impact on survivability\n\nHA = Age Group does impact the chances of survivabily","19771fae":"**Conclusion:** As the P-Value is less than 0.05, the probability of age impacting the chances of survival is high.\n\nTherefore, the null hypothesis can be safely rejected.","de9685bf":"# Import the Libraries","aaf024ac":"**2. Pclass** <br\/>\nIts is an ordinal feature","4d1801d4":"## Hypothesis 3\n\nH0 = Social Class has no impact on survivability\n\nHA = Social Class does impact the chances of survivabily","bba76318":"Inference: There are 891 rows and 12 columns.","f262dbd1":"# Survival Count","50ad3aa5":"**Conclusion:** As the P-Value is less than 0.05, the probability of social class impacting the chances of survival is high.\n\nTherefore, the null hypothesis can be safely rejected.","de983c46":"Inference: Age, Cabin and Embarked are the features with null value.","d929881f":"Final Inferences:\n* **Sex:** The chance of survival for women is high when compared to men.\n \n* **Pclass**:There is a visible trend that being a 1st class passenger gives you better chances of survival. The survival rate for Pclass3 is very low. For women, the chance of survival from Pclass1 is almost 1 and is also high for those from Pclass2.\n\n* **Age**: Children less than 5-10 years do have a high chance of survival. Passengers between age group 15 to 35 died a lot.\n \n* **Embarked**: This is a very interesting feature. The chances of survival at C looks better even though the majority of Pclass1 passengers got up at S. Passengers at Q were all from Pclass3.\n\n* **Parch+SibSp**: Having 1-2 siblings, spouse on board or 1-3 Parents showed a greater rate of survival rather than being alone or having a large family travelling with you.","345c91af":"**3. Age** <br\/>\nIt is a continous feature","8a021912":"Inferences:\n* Oldest person to survive is of age 85.\n* Infants were saved in large number.\n* Maximum deaths are at age 30-40.","83f16356":"**Conclusion:** As the P-Value is less than 0.05, the probability of fare impacting the chances of survival is high.\n\nTherefore, the null hypothesis can be safely rejected.","65e756ca":"Inference: From this, we can see that only around 18% of men survived while around 75% of women survived.","7ce450bf":"# Load the Dataset ","c76b5e42":"Inferences:\n* Survival rate for children below 10 are pretty good.\n* Pclass1 passengers had a higher survival rate between 20-50 age group.\n* Survival rate for men decrease with increase in age.","d443c173":"Inferences:\n* There was a 55% chance of survival for those who had boarded from port C.\n* People who have boarded the ship from port S had lowest survival rates.","48723a15":"# Prepare Data","e742b5cf":"**Conclusion:** As the P-Value is less than 0.05, the probability of gender impacting the chances of survival is high.\n\nTherefore, the null hypothesis can be safely rejected.","fb1ebf40":"## Hypothesis 2\n\nH0 = Fare has no impact on survivability\n\nHA = Fare does impact the chances of survivability","ad9c7891":"Models used for training:\n\n* Logistic Regression\n* Support Vector Machine\n* Perceptron\n* Decision Tree Classifier\n* Random Forest Classifier\n* K-Nearest Neighbors"}}