{"cell_type":{"27b85fd9":"code","81633aac":"code","c2e97333":"code","7a797d69":"code","09ede41f":"code","45b33924":"code","6c51f2ec":"code","cedbdb28":"code","c09c58bd":"code","b9fc2f34":"code","6daa8786":"code","dc2ff715":"code","10cc08ca":"code","9a640f63":"code","974c6a8e":"code","c9cec22d":"code","878e49cf":"code","bb943f9d":"code","3e4b742b":"code","b35cdf72":"code","c3843a1b":"code","6f281aeb":"code","7e7fc491":"code","410ead5a":"code","b8308b36":"code","b22f4ca0":"code","10a2f199":"code","b876ca27":"code","a40cfade":"code","561cb18b":"code","f58bf9f8":"code","f3b2de9e":"code","60e500ae":"code","b5ccf9f8":"code","acc5aa5c":"code","0d4e4786":"code","0a8b47c9":"code","a1bd03bd":"code","d1b9c52d":"code","45d1fb1f":"code","a5f9eb3b":"code","6b165e3e":"code","b6eb4482":"code","29c736cc":"code","bb5b4005":"code","4f3ea22f":"code","b9ee87fc":"code","d50c868b":"code","0b7637ad":"code","84efbb91":"code","a5189e2d":"code","a6d50291":"markdown","b2c2b25f":"markdown","442b4b84":"markdown","e0b5bede":"markdown","0ef6da87":"markdown","c471f3e2":"markdown","7b97dc6e":"markdown","9997ec46":"markdown","7339f6e7":"markdown","1361fd60":"markdown","9b0563d9":"markdown","fa6c9589":"markdown","a5aa36e8":"markdown","160b0ade":"markdown","c401fe51":"markdown","e6268085":"markdown","851b98ab":"markdown","8e6f5d3b":"markdown","76fab2a9":"markdown","9d631041":"markdown","967ef7f7":"markdown","1d1a71b1":"markdown","76cf0ebd":"markdown","f6e796e3":"markdown","23cc9e2f":"markdown","95268a86":"markdown","25a2c18f":"markdown","e0e66a48":"markdown","91e19970":"markdown","cb176e24":"markdown","c50c443d":"markdown","b41788ad":"markdown","37a11981":"markdown","9cc3cd9e":"markdown","4a4be3aa":"markdown","107fd054":"markdown","d7056711":"markdown","4f1abb4b":"markdown","246c7828":"markdown","57a3a1b9":"markdown","498d0279":"markdown","3a78ca3b":"markdown","bff14869":"markdown","94fd2568":"markdown","4efd073c":"markdown","a4fbd32d":"markdown","7261dd42":"markdown","5b1e0ee7":"markdown","220679b1":"markdown","36b5e614":"markdown","03626a80":"markdown","8f8d553e":"markdown","a28c3f59":"markdown","36a62e22":"markdown","e4878ee9":"markdown","dc36aa38":"markdown","9bf55289":"markdown","2bd29f76":"markdown"},"source":{"27b85fd9":"# importing the core library\nimport numpy as np\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# print multiple output in single cell\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","81633aac":"\nimport numpy as np\nprint(np.__version__)","c2e97333":"# Question : Create a 1D array of numbers from 0 to 9\n# Output : #> array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n# Solution\nX = np.arange(10)\nX","7a797d69":"# Question : Create a 3\u00d73 numpy array of all True\u2019s\n\n# Solution\nnp.full((3,3), True, dtype=bool)\n\n#or\nnp.full((9), True, dtype=bool).reshape(3,3)\n\n#or\nnp.ones((3,3), dtype=bool)\n\n#or\nnp.ones((9), dtype=bool).reshape(3,3)","09ede41f":"# Question : Extract all odd numbers from array\n# input: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n# output: array([1, 3, 5, 7, 9])\n\n#Solution\n\narr = np.arange(10)\n\narr[arr%2 == 1]","45b33924":"# Question: Replace all odd numbers in arr with -1\n# input: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n# output: array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1])\n\n# Solution\n\narr = np.arange(10)\n\narr[arr%2 == 1] = -1\narr","6c51f2ec":"# Question: Replace all odd numbers in arr with -1 without changing arr\n# input: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n# output: out\n# array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1])\n# arr\n# array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n# Solution\n\narr = np.arange(10)\n\nout = arr.copy()\n\nout[out%2 == 1] = -1\n\nprint('Modified Array')\nout\n\nprint('\\nOriginal Array')\narr","cedbdb28":"# Question: Convert a 1D array to a 2D array with 2 rows\n# input: np.arange(10)\n# output array([[0, 1, 2, 3, 4],\n#               [5, 6, 7, 8, 9]])\n\n# Solution\n\narr = np.arange(10)\narr.reshape(2,5)\n\n# Another solution\narr = np.arange(10)\narr.reshape(2, -1)  # Setting to -1 automatically decides the number of cols","c09c58bd":"# Question: Stack arrays a and b vertically\n# input: a = np.arange(10).reshape(2,-1)\n#        b = np.repeat(1, 10).reshape(2,-1)\n\n# output: array([[0, 1, 2, 3, 4],\n#                [5, 6, 7, 8, 9],\n#                [1, 1, 1, 1, 1],\n#                [1, 1, 1, 1, 1]])\n\n# Solution\n\na = np.arange(10).reshape(2,-1)\nb = np.repeat(1, 10).reshape(2,-1)\n\nnp.vstack([a,b])","b9fc2f34":"# Question: Stack the arrays a and b horizontally.\n\n# Input: a = np.arange(10).reshape(2,-1)\n#        b = np.repeat(1, 10).reshape(2,-1)\n# Output: array([[0, 1, 2, 3, 4, 1, 1, 1, 1, 1],\n#                [5, 6, 7, 8, 9, 1, 1, 1, 1, 1]])\n\n\n# Solution:\na = np.arange(10).reshape(2,-1)\nb = np.repeat(1, 10).reshape(2,-1)\n\nnp.hstack([a,b])","6daa8786":"# Question: Create the following pattern without hardcoding. Use only numpy functions and the below input array a.\n\n# Input: a = np.array([1,2,3])\n# Output: array([1, 1, 1, 2, 2, 2, 3, 3, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3])\n\n\n# Solution\n\na = np.array([1,2,3])\nnp.r_[np.repeat(a, 3), np.tile(a, 3)]\n\n#other solution\nnp.hstack((np.repeat(a, 3), np.tile(a, 3)))","dc2ff715":"# Question: Get the common items between a and b\n\n# Input: a = np.array([1,2,3,2,3,4,3,4,5,6])\n#        b = np.array([7,2,10,2,7,4,9,4,9,8])\n\n# Output: array([2, 4])\n\n\n# Solution:\na = np.array([1,2,3,2,3,4,3,4,5,6])\nb = np.array([7,2,10,2,7,4,9,4,9,8])\nnp.intersect1d(a,b)","10cc08ca":"# Question: From array a remove all items present in array b\n\n# Input: a = np.array([1,2,3,4,5])\n#        b = np.array([5,6,7,8,9])\n\n# Output: array([1,2,3,4])\n\n\n# Solution\na = np.array([1,2,3,4,5])\nb = np.array([5,6,7,8,9])\n\nnp.setdiff1d(a,b)","9a640f63":"# Question: Get the positions where elements of a and b match\n\n# Input: a = np.array([1,2,3,2,3,4,3,4,5,6])\n#        b = np.array([7,2,10,2,7,4,9,4,9,8])\n\n# Output: (array([1, 3, 5, 7]),)\n\n\n# Solution\n\na = np.array([1,2,3,2,3,4,3,4,5,6])\nb = np.array([7,2,10,2,7,4,9,4,9,8])\n\nnp.where(a == b)","974c6a8e":"# Question: Get all items between 5 and 10 from a.\n\n# Input: a = np.array([2, 6, 1, 9, 10, 3, 27])\n# Output: (array([6, 9, 10]),)\n\n\n# Solution\n\na = np.array([2, 6, 1, 9, 10, 3, 27])\na[(a >= 5) & (a <= 10)]","c9cec22d":"# Question: Convert the function maxx that works on two scalars, to work on two arrays.\n# Input:\n\ndef maxx(x, y):\n    \"\"\"Get the maximum of two items\"\"\"\n    if x >= y:\n        return x\n    else:\n        return y\n\n# maxx(1, 5)\n#> 5\n\n# Output:\n# a = np.array([5, 7, 9, 8, 6, 4, 5])\n# b = np.array([6, 3, 4, 8, 9, 7, 1])\n# pair_max(a, b)\n# array([ 6.,  7.,  9.,  8.,  9.,  7.,  5.])\n\n# Solution\n\ndef pair_max(x, y):\n    # here I am using map to make tuple from a and b, other solution is using zip(a,b)\n    maximum = [maxx(a,b) for a,b in map(lambda a,b:(a,b),x,y)]\n    # using zip\n    # maximum = [maxx(a,b) for a,b in zip(x,y)]\n    return np.array(maximum)\n\na = np.array([5, 7, 9, 8, 6, 4, 5])\nb = np.array([6, 3, 4, 8, 9, 7, 1])\n\npair_max(a,b)","878e49cf":"# Question: Swap columns 1 and 2 in the array arr.\n\n# Input:\n\narr = np.arange(9).reshape(3,3)\n\nprint('Original array')\narr\n\n# Solution\n\nprint(\"\\nModified array\")\narr[:, [1,0,2]]","bb943f9d":"# Question: Swap rows 1 and 2 in the array arr:\n\n# Input: \n\narr = np.arange(9).reshape(3,3)\nprint('Original array')\narr\n\n# Solution\n\nprint(\"\\nModified array\")\narr[[1,0,2], :]","3e4b742b":"# Question: Reverse the rows of a 2D array arr.\n\n# Input:\n\narr = np.arange(9).reshape(3,3)\n\nprint('Original array')\narr\n\n# Solution\n\nprint(\"\\nModified array\")\narr[::-1, :]","b35cdf72":"# Question: Reverse the columns of a 2D array arr.\n\n# Input: arr = np.arange(9).reshape(3,3)\n\n# Solution\n\narr = np.arange(9).reshape(3,3)\nprint('Original array')\narr\n\n\nprint(\"\\nModified array\")\narr[:, ::-1]","c3843a1b":"# Question: Create a 2D array of shape 5x3 to contain random decimal numbers between 5 and 10.\n\n# Solution:\n\nrand_arr = np.random.uniform(5,10, size=(5,3))\nrand_arr","6f281aeb":"# Question: Print or show only 3 decimal places of the numpy array rand_arr.\n\n# Input: rand_arr = np.random.random((5,3))\n\nrand_arr = np.random.random((5,3))\nnp.set_printoptions(precision=3)\nrand_arr","7e7fc491":"# Pretty print rand_arr by suppressing the scientific notation (like 1e10)\n\n# Input: \n# Create the random array\nnp.random.seed(100)\nrand_arr = np.random.random([3,3])\/1e3\nnp.set_printoptions(suppress=False)\nrand_arr\n\n# Output:\n#> array([[ 0.000543,  0.000278,  0.000425],\n#>        [ 0.000845,  0.000005,  0.000122],\n#>        [ 0.000671,  0.000826,  0.000137]])\n\nnp.set_printoptions(suppress=True)\nrand_arr\n#> array([[ 0.000543,  0.000278,  0.000425],\n#>        [ 0.000845,  0.000005,  0.000122],\n#>        [ 0.000671,  0.000826,  0.000137]])","410ead5a":"# Question: Limit the number of items printed in python numpy array a to a maximum of 6 elements.\na = np.arange(15)\nnp.set_printoptions(threshold=6)\na","b8308b36":"# Question: Print the full numpy array a without truncating.\n\n# Input: np.set_printoptions(threshold=6)\n# a = np.arange(15)\n# a\n\n# Output: a\n#> array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])\n\n# Solution\n\na = np.arange(15)\n\n\nnp.set_printoptions(threshold=15)\na","b22f4ca0":"# Question: Import the iris dataset keeping the text intact.\n\n# Solution:\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', skip_header=1, \n                          usecols = [0,1,2,3,4,5], dtype = object)\niris_data","10a2f199":"# Question: Extract the text column species from the 1D iris imported in previous question.\n\ndata = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', skip_header=1, \n                          usecols = [-1], dtype = object)\ndata","b876ca27":"# Question: Convert the 1D iris to 2D array iris_2d by omitting the species text field.\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', skip_header=1, dtype='float', usecols=[0,1,2,3])\niris_data","a40cfade":"# Question: Find the mean, median, standard deviation of iris's sepallength (1st column)\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', skip_header=1, usecols = [1])\n\nprint('Mean', np.mean(iris_data))\nprint('Median', np.median(iris_data))\nprint('Standard Deviation', np.std(iris_data))","561cb18b":"# Question: Create a normalized form of iris's sepallength whose values range exactly between 0 and 1 so that the minimum has value 0 and maximum has value 1.\n\n# Solution\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1], skip_header=1)\n\n(iris_data - np.min(iris_data))\/(np.max(iris_data) - np.min(iris_data))","f58bf9f8":"# Question: Compute the softmax score of sepallength.\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1], skip_header=1)\nsoftmax = np.exp(iris_data)\/sum(np.exp(iris_data))\nsoftmax.sum() # it must sum 1\nsoftmax","f3b2de9e":"# Question. Find the 5th and 95th percentile of iris's sepallength\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1], skip_header=1)\n\nnp.percentile(iris_data, q=[5, 95])","60e500ae":"# Question: Insert np.nan values at 20 random positions in iris_2d dataset\n\n# Solution\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1,2,3,4], skip_header=1)\nfor i in np.random.randint(0, len(iris_data), 20):\n    iris_data[i]=np.nan\niris_data","b5ccf9f8":"# Question: Find the number and position of missing values in iris_2d's sepallength (1st column)\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1,2,3,4], skip_header=1)\niris_data[np.random.randint(len(iris_data), size=20),np.random.randint(4,size=20)] = np.nan\n\n# Find total mising value in complete data\nprint(\"Number of missing values in Iris data: \\n\", np.isnan(iris_data[:, :]).sum())\n\n# Find total mising value in 1D data\nprint(\"Number of missing values in any one feature of Iris data: \\n\", np.isnan(iris_data[:, 0]).sum())\n\nprint(\"Position of missing values: \\n\", np.where(np.isnan(iris_data[:, 0])))","acc5aa5c":"# Question: Filter the rows of iris_2d that has petallength (3rd column) > 1.5 and sepallength (1st column) < 5.0\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype='float', usecols=[1,2,3,4], skip_header=1)\n\n# Solution\niris_data[(iris_data[:, 2] > 1.5) & (iris_data[:, 0] < 5.0)]","0d4e4786":"# Question: Select the rows of iris_2d that does not have any nan value.\n\ndiabetes_data = np.genfromtxt('..\/input\/pima-indians-diabetes-database\/diabetes.csv', delimiter=',', dtype='float', usecols=[0,1,2,3,4,5,6,7], skip_header=1)\ndiabetes_data[np.random.randint(150, size=20), np.random.randint(4, size=20)] = np.nan\ndiabetes_data[np.sum(np.isnan(diabetes_data), axis = 1) == 0][:5]","0a8b47c9":"# question: Find the correlation between SepalLength(1st column) and PetalLength(3rd column) in iris_2d\n# insted or using iris data I am going to used pima diabetes data and going to find corelation between BP(1st column) and BMI (5th column).\n\ndiabetes_data = np.genfromtxt('..\/input\/pima-indians-diabetes-database\/diabetes.csv',\n                              delimiter=',', dtype='float', usecols=[0,1,2,3,4,5,6,7], skip_header=1)\n\nprint(np.corrcoef(diabetes_data[:, 1], diabetes_data[:, 5]))\n\nprint('\\n')\n# you can get correlation by getting value at index [0,1] or [1,0]\nprint(np.corrcoef(diabetes_data[:, 1], diabetes_data[:, 5])[0,1])","a1bd03bd":"# question: Find out if iris_2d has any missing values.\ndiabetes_data = np.genfromtxt('..\/input\/pima-indians-diabetes-database\/diabetes.csv',\n                              delimiter=',', dtype='float', usecols=[0,1,2,3,4,5,6,7], skip_header=1)\n\nnp.isnan(diabetes_data).any()","d1b9c52d":"# Question: Replace all ccurrences of nan with 0 in numpy array\n\nwine_quality = np.genfromtxt('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv',\n                             delimiter=',', dtype='float', usecols=[0,1,2,3,4,5,6,7,8,9,10], skip_header=1)\n\nwine_quality[np.random.randint(len(wine_quality), size=20), np.random.randint(11, size=20)] = np.nan\n\nprint(\"Does dataset have any Nan value:\",np.isnan(wine_quality).any())\n\nwine_quality[np.isnan(wine_quality)] = 0\n\nprint(\"Does dataset have any Nan value:\",np.isnan(wine_quality).any())","45d1fb1f":"# Question: Find the unique values and the count of unique values in mashroom data's habitat (22 column) column\n\nmushroom = np.genfromtxt('..\/input\/mushroom-classification\/mushrooms.csv',\n                             delimiter=',', dtype=object, usecols=[0], skip_header=1)\n#mushroom\nnp.unique(mushroom, return_counts=True)","a5f9eb3b":"# Question: Bin the petal length (3rd) column of iris_2d to form a text array, such that if petal length is:\n\n# Less than 3 --> 'small'\n# 3-5 --> 'medium'\n# >=5 --> 'large'\n\n# Solution\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', dtype=object, usecols=[3], skip_header=1)\n\nbins = np.array([0, 3, 5, 7])\ninds = np.digitize(iris_data.astype('float'), bins)\n\nlabels = {1:'small', 2: 'medium', 3:'large'}\niris_cat_data = [labels[x] for x in inds]\niris_cat_data[:10]","6b165e3e":"# Question: Create a new column for volume in iris_2d, where volume is (pi x petallength x sepal_length^2)\/3\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', \n                          dtype=object, usecols=[1,2,3,4], skip_header=1)\n\nsepallength = iris_data[:, 0].astype('float')\npetallength = iris_data[:, 2].astype('float')\n\nnew_column = (np.pi * petallength * (sepallength**2))\/3\n\nnew_column = new_column[:, np.newaxis]\n#new_column\n\n# Add the new column\nout = np.hstack([iris_data, new_column])\n\n# View\nout[:4]","b6eb4482":"# Question: Randomly sample iris's species such that setose is twice the number of versicolor and virginica\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', \n                          dtype=object, usecols=[1,2,3,4,5], skip_header=1)\n\nnp.random.seed(100)\na = np.array(['Iris-setosa', 'Iris-versicolor', 'Iris-virginica'])\nspecies_out = np.random.choice(a, 150, p=[0.5, 0.25, 0.25])\nprint(np.unique(species_out, return_counts=True))","29c736cc":"# Question: What is the value of second longest petallength of species setosa\n# For this question I am going to find second highest bloodpressure (2nd column) where outcome is 1\ndiabetes_data = np.genfromtxt('..\/input\/pima-indians-diabetes-database\/diabetes.csv',\n                              delimiter=',', dtype=object, usecols=[0,1,2,3,4,5,6,7,8], skip_header=1)\n\n# Solution\nbloodpressure= diabetes_data[diabetes_data[:, 8]==b'1', [2]].astype('float')\n\nnp.unique(np.sort(bloodpressure))[-2]","bb5b4005":"# Question: Sort the iris dataset based on sepallength column.\n# In this problem, I am going to sort the diabetes dataset based on Glucose (1th column)\ndiabetes_data = np.genfromtxt('..\/input\/pima-indians-diabetes-database\/diabetes.csv',\n                              delimiter=',', dtype=object, usecols=[0,1,2,3,4,5,6,7,8], skip_header=1)\n\ndiabetes_data[diabetes_data[:,1].argsort()]","4f3ea22f":"# Question: Find the most frequent value of petal length (3rd column) in iris dataset.\n\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', \n                          dtype=object, usecols=[1,2,3,4,5], skip_header=1)\n\nv,c = np.unique(iris_data[:, 2], return_counts=True)\nv[np.argmax(c)]","b9ee87fc":"# Question: Find the position of the first occurrence of a value greater than 1.0 in \n# petalwidth 4th column of iris dataset.\niris_data = np.genfromtxt('..\/input\/iris\/Iris.csv', delimiter=',', \n                          dtype=object, usecols=[4], skip_header=1)\n\nnp.argwhere(iris_data[:].astype(float) > 1.0)[0]","d50c868b":"# Question: From the array a, replace all values greater than 30 to 30 and less than 10 to 10.\n\n# Solution\n\nnp.set_printoptions(precision=2)\nnp.random.seed(100)\na = np.random.uniform(1,50, 20)\n\na[a<10]=10\na[a>30]=30\nnp.set_printoptions(threshold=20)\na","0b7637ad":"# Question: Get the positions of top 5 maximum values in a given array a.\nnp.random.seed(100)\na = np.random.uniform(1,50, 20)\na\nsort = a.argsort()\nprint('Positions')\nsort[-5:][::-1]\nprint('Values')\na[sort][-5:][::-1]","84efbb91":"# Question: Compute the counts of unique values row-wise.\n\n# Solution\ndef counts_of_all_values_rowwise(arr2d):\n    # Unique values and its counts row wise\n    num_counts_array = [np.unique(row, return_counts=True) for row in arr2d]\n\n    # Counts of all values row wise\n    return([[int(b[a==i]) if i in a else 0 for i in np.unique(arr2d)] for a, b in num_counts_array])\n\nnp.random.seed(100)\nnp.set_printoptions(threshold=10)\narr = np.random.randint(1,11,size=(6, 10))\narr\nprint(np.arange(1,11))\ncounts_of_all_values_rowwise(arr)","a5189e2d":"# Question: Convert array_of_arrays into a flat linear 1d array.\narr1 = np.arange(3)\narr2 = np.arange(3,7)\narr3 = np.arange(7,10)\n\narr_2d = np.concatenate([arr1, arr2, arr3])\nprint(arr_2d)","a6d50291":"<a id='1'><\/a>\n### *Exercise 1*. Import numpy as np and see the version\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","b2c2b25f":"<a id='4'><\/a>\n### *Exercise 4*. How to extract items that satisfy a given condition from 1D array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","442b4b84":"<a id='16'><\/a>\n### *Exercise 16*. How to swap two columns in a 2d numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","e0b5bede":"## I hope you have learned something in this kernel.\n## <font color='red'> If you like this kernel, Don't forget to upvote. <\/font>","0ef6da87":"<a id='39'><\/a>\n### *Exercise 39*. How to find the count of unique values in a numpy array?\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","c471f3e2":"<a id='25'><\/a>\n### *Exercise 25*. How to import a dataset with numbers and texts keeping the text intact in python numpy?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","7b97dc6e":"<a id='30'><\/a>\n### *Exercise 30*. How to compute the softmax score?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","9997ec46":"<a id='18'><\/a>\n### *Exercise 18*. How to reverse the rows of a 2D array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","7339f6e7":"<a id='19'><\/a>\n### *Exercise 19*. How to reverse the columns of a 2D array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","1361fd60":"<a id='15'><\/a>\n### *Exercise 15*. How to make a python function that handles scalars to work on numpy arrays?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","9b0563d9":"<a id='8'><\/a>\n### *Exercise 8*. How to stack two arrays vertically?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","fa6c9589":"<a id='26'><\/a>\n### *Exercise 26*. How to extract a particular column from 1D array of tuples?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","a5aa36e8":"<a id='31'><\/a>\n### *Exercise 31*. How to find the percentile scores of a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","160b0ade":"<a id='34'><\/a>\n### *Exercise 34*. How to filter a numpy array based on two or more conditions?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","c401fe51":"<a id='20'><\/a>\n### *Exercise 20*. How to create a 2D array containing random floats between 5 and 10?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","e6268085":"<a id='3'><\/a>\n### *Exercise 3*. How to create a boolean array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","851b98ab":"<a id='import_required_libraries'><\/a>\n## Import required libraries\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","8e6f5d3b":"<a id='14'><\/a>\n### *Exercise 14*. How to extract all numbers between a given range from a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","76fab2a9":"<a id='2'><\/a>\n### *Exercise 2*. How to create a 1D array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","9d631041":"<a id='48'><\/a>\n### *Exercise 48*. How to get the positions of top n values from a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","967ef7f7":"<a id='43'><\/a>\n### *Exercise 43*. How to get the second largest value of an array when grouped by another array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","1d1a71b1":"<a id='23'><\/a>\n### *Exercise 23*. How to limit the number of items printed in output of numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","76cf0ebd":"This kernel is part of my 100 days of machine learning challenge.\nCheck out my progress on this challenge --> https:\/\/github.com\/themlphdstudent\/100DaysofMachineLearning","f6e796e3":"<a id='32'><\/a>\n### *Exercise 32*. How to insert values at random positions in an array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","23cc9e2f":"<a id='44'><\/a>\n### *Exercise 44*. How to sort a 2D array by a column\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","95268a86":"<a id='45'><\/a>\n### *Exercise 45*. How to find the most frequent value in a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","25a2c18f":"<a id='47'><\/a>\n### *Exercise 47*. How to replace all values greater than a given value to a given cutoff?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","e0e66a48":"<a id='46'><\/a>\n### *Exercise 46*. How to find the position of the first occurrence of a value greater than a given value?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","91e19970":"<a id=\"top\"><\/a>\n# Table of Content\n- [Import required libraries](import_required_libraries)\n- [*Exercise 1*. Import numpy as np and see the version](#1)\n- [*Exercise 2*. How to create a 1D array?](#2)\n- [*Exercise 3*. How to create a boolean array?](#3)\n- [*Exercise 4*. How to extract items that satisfy a given condition from 1D array?](#4)\n- [*Exercise 5*. How to replace items that satisfy a condition with another value in numpy array?](#5)\n- [*Exercise 6*. How to replace items that satisfy a condition without affecting the original array?](#6)\n- [*Exercise 7*. How to reshape an array?](#7)\n- [*Exercise 8*. How to stack two arrays vertically?](#8)\n- [*Exercise 9*. How to stack two arrays horizontally?](#9)\n- [*Exercise 10*. How to generate custom sequences in numpy without hardcoding?](#10)\n- [*Exercise 11*. How to get the common items between two python numpy arrays?](#11)\n- [*Exercise 12*. How to remove from one array those items that exist in another?](#12)\n- [*Exercise 13*. How to get the positions where elements of two arrays match?](#13)\n- [*Exercise 14*. How to extract all numbers between a given range from a numpy array?](#14)\n- [*Exercise 15*. How to make a python function that handles scalars to work on numpy arrays?](#15)\n- [*Exercise 16*. How to swap two columns in a 2d numpy array?](#16)\n- [*Exercise 17*. How to swap two rows in a 2d numpy array?](#17)\n- [*Exercise 18*. How to reverse the rows of a 2D array?](#18)\n- [*Exercise 19*. How to reverse the columns of a 2D array?](#19)\n- [*Exercise 20*. How to create a 2D array containing random floats between 5 and 10?](#20)\n- [*Exercise 21*. How to print only 3 decimal places in python numpy array?](#21)\n- [*Exercise 22*. How to pretty print a numpy array by suppressing the scientific notation (like 1e10)?](#22)\n- [*Exercise 23*. How to limit the number of items printed in output of numpy array?](#23)\n- [*Exercise 24*. How to print the full numpy array without truncating](#24)\n- [*Exercise 25*. How to import a dataset with numbers and texts keeping the text intact in python numpy?](#25)\n- [*Exercise 26*. How to extract a particular column from 1D array of tuples?](#26)\n- [*Exercise 27*. How to convert a 1d array of tuples to a 2d numpy array? ](#27)\n- [*Exercise 28*. How to compute the mean, median, standard deviation of a numpy array?](#28)\n- [*Exercise 29*. How to normalize an array so the values range exactly between 0 and 1?](#29)\n- [*Exercise 30*. How to compute the softmax score?](#30)\n- [*Exercise 31*. How to find the percentile scores of a numpy array?](#31)\n- [*Exercise 32*. How to insert values at random positions in an array?](#32)\n- [*Exercise 33*. How to find the position of missing values in numpy array?](#33)\n- [*Exercise 34*. How to filter a numpy array based on two or more conditions?](#34)\n- [*Exercise 35*. How to drop rows that contain a missing value from a numpy array?](#35)\n- [*Exercise 36*. How to find the correlation between two columns of a numpy array?](#36)\n- [*Exercise 43*. How to get the second largest value of an array when grouped by another array?](#43)\n- [*Exercise 44*. How to sort a 2D array by a column](#44)\n- [*Exercise 45*. How to find the most frequent value in a numpy array?](#45)\n- [*Exercise 46*. How to find the position of the first occurrence of a value greater than a given value?](#46)\n- [*Exercise 47*. How to replace all values greater than a given value to a given cutoff?](#47)\n- [*Exercise 48*. How to get the positions of top n values from a numpy array?](#48)\n- [*Exercise 49*. How to compute the row wise counts of all possible values in an array?](#49)\n- [*Exercise 50*. How to convert an array of arrays into a flat 1d array?](#50)","cb176e24":"<a id='27'><\/a>\n### *Exercise 27*. How to convert a 1d array of tuples to a 2d numpy array? \n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","c50c443d":"## <font color='red'> <center> I am continuously updating this kernel. <\/center> <\/font>\n\n## <font color='red'> <center> Don't forget to upvote. <\/center> <\/font>","b41788ad":"<a id='13'><\/a>\n### *Exercise 13*. How to get the positions where elements of two arrays match?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","37a11981":"<a id='49'><\/a>\n### *Exercise 49*. How to compute the row wise counts of all possible values in an array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","9cc3cd9e":"<a id='37'><\/a>\n### *Exercise 37*. How to find if a given array has any null values?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","4a4be3aa":"<a id='5'><\/a>\n### *Exercise 5*. How to replace items that satisfy a condition with another value in numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","107fd054":"<a id='17'><\/a>\n### *Exercise 17*. How to swap two rows in a 2d numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","d7056711":"<a id='21'><\/a>\n### *Exercise 21*. How to print only 3 decimal places in python numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","4f1abb4b":"<a id='42'><\/a>\n### *Exercise 42*. How to do probabilistic sampling in numpy?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","246c7828":"<a id='11'><\/a>\n### *Exercise 11*. How to get the common items between two python numpy arrays?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","57a3a1b9":"<a id='36'><\/a>\n### *Exercise 36*. How to find the correlation between two columns of a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","498d0279":"# NumPy Exercises","3a78ca3b":"<a id='9'><\/a>\n### *Exercise 9*. How to stack two arrays horizontally?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","bff14869":"This kernel uses exercises of NumPy from the Machine Learning Plus webpage --> https:\/\/www.machinelearningplus.com\/python\/101-numpy-exercises-python\/","94fd2568":"<a id='10'><\/a>\n### *Exercise 10*. How to generate custom sequences in numpy without hardcoding?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","4efd073c":"<a id='28'><\/a>\n### *Exercise 28*. How to compute the mean, median, standard deviation of a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","a4fbd32d":"<a id='50'><\/a>\n### *Exercise 50*. How to convert an array of arrays into a flat 1d array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","7261dd42":"<a id='41'><\/a>\n### *Exercise 41*. How to create a new column from existing columns of a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","5b1e0ee7":"<a id='12'><\/a>\n### *Exercise 12*. How to remove from one array those items that exist in another?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","220679b1":"<a id='35'><\/a>\n### *Exercise 35*. How to drop rows that contain a missing value from a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","36b5e614":"## Happy Learning","03626a80":"<a id='6'><\/a>\n### *Exercise 6*. How to replace items that satisfy a condition without affecting the original array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","8f8d553e":"<a id='38'><\/a>\n### *Exercise 38*. How to replace all missing values with 0 in a numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","a28c3f59":"<a id='22'><\/a>\n### *Exercise 22*. How to pretty print a numpy array by suppressing the scientific notation (like 1e10)?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","36a62e22":"<a id='29'><\/a>\n### *Exercise 29*. How to normalize an array so the values range exactly between 0 and 1?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","e4878ee9":"<a id='24'><\/a>\n### *Exercise 24*. How to print the full numpy array without truncating\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","dc36aa38":"<a id='40'><\/a>\n### *Exercise 40*. How to convert a numeric to a categorical (text) array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","9bf55289":"<a id='7'><\/a>\n### *Exercise 7*. How to reshape an array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","2bd29f76":"<a id='33'><\/a>\n### *Exercise 33*. How to find the position of missing values in numpy array?\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>"}}