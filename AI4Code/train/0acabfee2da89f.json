{"cell_type":{"e4c44eea":"code","687d84b4":"code","b369505b":"code","f5d89280":"code","aad19e47":"code","ea3729f8":"code","8a2789fd":"code","80f43916":"code","47b537a9":"code","5fe2a127":"code","15be22a0":"code","87813f58":"code","eb91d2d8":"code","ea1c7fbb":"code","0de2c2a7":"markdown","05e3af00":"markdown","f93d49f7":"markdown","0264b694":"markdown","6b602939":"markdown"},"source":{"e4c44eea":"# System\nimport os\n\n# Numerical\nimport numpy as np\nimport pandas as pd\n\n# NLP\nimport re\n\n# Tools\nimport itertools\n\n# Machine Learning - Preprocessing\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n# Machine Learning - Model Selection\nfrom sklearn.model_selection import GridSearchCV\n\n# Machine Learning - Models\nfrom sklearn import svm\n\n# Machine Learning - Evaluation\nfrom sklearn import metrics \nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import cross_val_score\n\n# Plot\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nprint(os.listdir(\"..\/input\"))","687d84b4":"df = pd.read_csv(\"..\/input\/employee_reviews.csv\")","b369505b":"df.head()","f5d89280":"df.describe()","aad19e47":"# df.info()","ea3729f8":"all_cols = ['company', 'location', 'job-title', 'overall-ratings',\n       'work-balance-stars', 'culture-values-stars',\n       'carrer-opportunities-stars', 'comp-benefit-stars',\n       'senior-mangemnet-stars', 'helpful-count']\n\nrating_cols = [\"overall-ratings\", \"work-balance-stars\", \"culture-values-stars\",\n       \"carrer-opportunities-stars\", \"comp-benefit-stars\",\n       \"senior-mangemnet-stars\"]","8a2789fd":"sns.reset_defaults()\n\nfigsize=(20, 5)\nticksize = 14\ntitlesize = ticksize + 8\nlabelsize = ticksize + 5\n\nsns.set(context='notebook', style='whitegrid', palette='deep', font='sans-serif', font_scale=2, color_codes=True, rc=None)\nsns.set_style(\"ticks\", {\"xtick.major.size\": ticksize, \"ytick.major.size\": ticksize})\n\n\n\nparams = {'figure.figsize' : figsize,\n          'axes.labelsize' : labelsize,\n          'axes.titlesize' : titlesize}\n\nplt.rcParams.update(params)\n\n\ncol = \"company\"\n\nxlabel = \"Company\"\nylabel = \"Count\"\n\ntitle = \"Vote Count Per Company\"\n\n\nsns.countplot(x=df[col], data=df)\nplt.title(title)\nplt.xlabel(xlabel)\nplt.ylabel(ylabel)\nplt.plot()","80f43916":"df[rating_cols] = df[rating_cols].apply(pd.to_numeric, errors='coerce')","47b537a9":"sns.reset_defaults()\n\nfigsize=(20, 16)\nticksize = 14\ntitlesize = ticksize + 8\nlabelsize = ticksize + 5\n\nnrows = 3\nncols = 2\n\nsns.set(context='notebook', style='whitegrid', palette='deep', font='sans-serif', font_scale=1, color_codes=True, rc=None)\nsns.set_style(\"ticks\", {\"xtick.major.size\": ticksize, \"ytick.major.size\": ticksize})\n\n\nfig, axs = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize)\nplt.subplots_adjust(hspace=.6, wspace=.3)\n\nparams = {'figure.figsize' : figsize,\n          'axes.labelsize' : labelsize,\n          'axes.titlesize' : titlesize}\n\nplt.rcParams.update(params)\n\n\nxcol = \"company\"\nxlabel = \"Company\"\n\ntitle = \"Vote Count Per Company\"\n\n\nfeature_count = len(rating_cols)\n\nfor i in range(feature_count):\n    plt.subplot(nrows,ncols, i+1)\n    ylabel = re.sub(\"[^a-zA-Z]\", \" \", rating_cols[i])\n    ylabel = re.sub(\"\\s+\", \" \", ylabel).title()\n    tmp = df.groupby(xcol, as_index=False)[rating_cols[i]].mean()\n    sns.barplot(x=xcol, y=rating_cols[i], data=tmp)\n    plt.title(ylabel)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    plt.plot()\n\nplt.show()","5fe2a127":"def get_state(x):\n    if \"(\" in x:\n        x = x.split(\"(\")[1]\n        x = x.split(\")\")[0]\n    elif \", \" in x:\n        x = x.split(\", \")[-1]\n\n    return x\n\ndf[\"state\"] = df[\"location\"].apply(lambda x: get_state(x))","15be22a0":"a = get_state(\"Chinno Hills, CA\")\na","87813f58":"sns.reset_defaults()\n\nfigsize=(30, 50)\nticksize = 14\ntitlesize = ticksize + 8\nlabelsize = ticksize + 5\n\nnrows = len(rating_cols)\nncols = 1\n\n\nsns.set(context='notebook', style='whitegrid', palette='deep', font='sans-serif', font_scale=2, color_codes=True, rc=None)\nsns.set_style(\"ticks\", {\"xtick.major.size\": ticksize, \"ytick.major.size\": ticksize})\n\n\nfig, axs = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize)\nplt.subplots_adjust(hspace=2, wspace=.3)\n\nparams = {'figure.figsize' : figsize,\n          'axes.labelsize' : labelsize,\n          'axes.titlesize' : titlesize}\n\nplt.rcParams.update(params)\n\n\nfeature_count = len(rating_cols)\nitem_count = 50\nxcol = \"state\"\nxlabel = \"State\"\n\n\nfor i in range(feature_count):\n    plt.subplot(nrows,ncols, i+1)\n    ylabel = re.sub(\"[^a-zA-Z]\", \" \", rating_cols[i])\n    ylabel = re.sub(\"\\s+\", \" \", ylabel).title()\n    tmp = df.groupby(xcol, as_index=False)[rating_cols[i]].mean().sort_values(by=rating_cols[i],ascending=False)\n    sns.barplot(x=xcol, y=rating_cols[i], data=tmp.head(item_count))\n    plt.title(ylabel)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    plt.xticks(rotation=90)\n    plt.plot()\n\nplt.show()\n","eb91d2d8":"sns.reset_defaults()\n\nfigsize=(30, 50)\nticksize = 14\ntitlesize = ticksize + 8\nlabelsize = ticksize + 5\n\nnrows = len(rating_cols)\nncols = 1\n\nsns.set(context='notebook', style='whitegrid', palette='deep', font='sans-serif', font_scale=2, color_codes=True, rc=None)\nsns.set_style(\"ticks\", {\"xtick.major.size\": ticksize, \"ytick.major.size\": ticksize})\n\n\nfig, axs = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize)\nplt.subplots_adjust(hspace=2, wspace=.3)\n\nparams = {'figure.figsize' : figsize,\n          'axes.labelsize' : labelsize,\n          'axes.titlesize' : titlesize}\n\nplt.rcParams.update(params)\n\n\nfeature_count = len(rating_cols)\nitem_count = 50\nxcol = \"location\"\nxlabel = \"Location\"\n\n\nfor i in range(feature_count):\n    plt.subplot(nrows,ncols, i+1)\n    ylabel = re.sub(\"[^a-zA-Z]\", \" \", rating_cols[i])\n    ylabel = re.sub(\"\\s+\", \" \", ylabel).title()\n    tmp = df.groupby(xcol, as_index=False)[rating_cols[i]].mean().sort_values(by=rating_cols[i],ascending=False)\n    sns.barplot(x=xcol, y=rating_cols[i], data=tmp.head(item_count))\n    plt.title(ylabel)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    plt.xticks(rotation=90)\n    plt.plot()\n\nplt.show()\n","ea1c7fbb":"sns.reset_defaults()\n\nfigsize = (16, 6)\nticksize = 14\ntitlesize = ticksize + 8\nlabelsize = ticksize + 5\n\nsns.set(context='notebook', style='whitegrid', palette='deep', font='sans-serif', font_scale=2, color_codes=True, rc=None)\nsns.set_style(\"ticks\", {\"xtick.major.size\": ticksize, \"ytick.major.size\": ticksize})\n\n\nparams = {'figure.figsize' : figsize,\n          'axes.labelsize' : labelsize,\n          'axes.titlesize' : titlesize}\n\nplt.rcParams.update(params)\n\n\nxcol = \"company\"\nycol = \"helpful-count\"\n\nxlabel = \"Company\"\nylabel = \"Helpful Count\"\n\ntitle = \"Vote Count Per Company\"\n\n\ntmp = df.groupby(xcol, as_index=False)[ycol].count()\nsns.barplot(x=xcol, y=ycol, data=tmp)\nplt.title(ylabel)\nplt.xlabel(xlabel)\nplt.ylabel(ylabel)\nplt.show()\ntmp = df.groupby(xcol, as_index=False)[ycol].mean()\nsns.barplot(x=xcol, y=ycol, data=tmp)\nplt.title(ylabel)\nplt.xlabel(xlabel)\nplt.ylabel(ylabel)\nplt.plot()\nplt.show()\n","0de2c2a7":"# 1. Import","05e3af00":"![](http:\/\/internationalschooltechnology.com\/wp-content\/uploads\/2016\/05\/Google-Apple-Facebook-Amazon.jpg)","f93d49f7":"# 2. Read Data","0264b694":"# 3. Visualize Data","6b602939":"Note:\n1. Amazon has the highest number of reviews here, followed by Microsoft, Apple and Google."}}