{"cell_type":{"4ce47746":"code","6fd2054e":"code","a0f065c4":"code","44800ce1":"code","3c887a48":"code","fa11a422":"code","ed271764":"code","7a17ff06":"code","1e823f6e":"code","00fef15a":"code","7a90f7a7":"code","78e02516":"code","db86f147":"code","611a791b":"code","f59afd2a":"markdown","a2deffb2":"markdown","aac92327":"markdown","eacae1d5":"markdown","e49c5150":"markdown","fe9d11d7":"markdown","48515e79":"markdown","e9d1611b":"markdown","2bbd1b18":"markdown","d711934d":"markdown","3c0cf89a":"markdown","53c86de9":"markdown","1496de80":"markdown","5797dec8":"markdown","3d3cd137":"markdown","3c147c9a":"markdown","6f4ef4cd":"markdown","afa78a41":"markdown","eda7ed03":"markdown","b65fb4ba":"markdown","52141274":"markdown","567aefc9":"markdown","c3c0adcc":"markdown","ffa6d975":"markdown","f347bde5":"markdown","407cc8ff":"markdown","aa5d8cae":"markdown","19b07629":"markdown","87455c68":"markdown","4b7558f3":"markdown","785ad67a":"markdown","43e92f0d":"markdown","0317c13f":"markdown","52d6ff9b":"markdown","aa03914c":"markdown"},"source":{"4ce47746":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6fd2054e":"import matplotlib.pyplot as plt\nimport numpy as np","a0f065c4":"plt.plot([1,2,3,4],[1,4,9,16])\nplt.show()","44800ce1":"plt.plot([1,2,3,4],[1,4,9,16])\nplt.title('Figure 1')\nplt.xlabel('X axis')\nplt.ylabel('Y axis')\nplt.show()\n","3c887a48":"plt.figure(figsize = (15,8))\nplt.plot([1,2,3,4],[1,4,9,16])\nplt.show()","fa11a422":"plt.plot([1,2,3,4],[1,4,9,16],\"go\")\nplt.title('Figure 1')\nplt.xlabel('X axis')\nplt.ylabel('Y axis')\nplt.show()","ed271764":"x = np.arange(1,5)\ny = x ** 3 \nplt.plot([1,2,3,4],[1,4,9,16],x,y,'r^')","7a17ff06":"plt.subplot(1,2,1)\nplt.plot([1,2,3,4],[1,4,9,16],'r^')\nplt.title('First')\n\nplt.subplot(1,2,2)\nplt.plot([1,2,3,4],[1,8,27,64],'g')\nplt.title('Second')\n\n\nplt.suptitle('Graphs')\nplt.show()","1e823f6e":"x = np.arange(1,10)\ny = x ** 4 \nfig,ax = plt.subplots(nrows = 2, ncols =2, figsize = (6,6))\nax[0,1].plot([1,2,3,4],[1,4,9,16],\"go\")\nax[1,0].plot(x,y)\nax[0,1].set_title('Plot 1')\nax[1,0].set_title('Plot 2')","00fef15a":"x = ['A','B','C','D']\ny = [33,55,32,87]\n\nplt.bar(x,y)\nplt.title('Bar Graph')\nplt.xlabel('Section')\nplt.ylabel('Average Marks')","7a90f7a7":"import numpy as np\nsection = ['A','B','C','D']\nboys = [33,55,32,87]\ngirls = [66,87,34,90]\n\nindex = np.arange(4)\nwidth = 0.4\n\nplt.bar(index,boys,width)\nplt.bar(index+width,girls,width)\nplt.title('Bar Graph')\nplt.xlabel('Section')\nplt.ylabel('Average Marks')\n\nplt.xticks(index + width\/2,section)","78e02516":"x = ['A','B','C','D']\ny = [33,55,32,87]\n\nplt.pie(y,labels = x)\nplt.title('Pie Chart')\nplt.legend()","db86f147":"x = np.random.randn(100)\nplt.hist(x,10)","611a791b":"x = [10,20,30,40]\ny = [100,200,300,400]\n\nplt.scatter(x,y)\nplt.xlim(10,40)\nplt.ylim(100,400)","f59afd2a":"ploting multiple data by passing in multiple sets of arguments of X and Y axis in the plot() is shown \n","a2deffb2":"# Installing Matplotlib","aac92327":"Scatter plot is used to find co relation between two variables","eacae1d5":"# Subplots","e49c5150":"It is very important to visualize our data to bring busniess insights. Matplotlib is one such solution for the Python users.\nIt is a data vizualisation library used to create plots and charts for our data.","fe9d11d7":"# Conclusion\n\nHope this article was useful to you. Last but not the least, here are some important functions of matplotlib","48515e79":"# Titles and labels","e9d1611b":"We will first try to plot very basic function in matplotlib's pyplot","2bbd1b18":"An Optional third argument in the form of a string can be given in the plot which indicates the colour and line type of the plot. \n\ndefault is b- which means a solid blue line. \"go\" which means green circles and many more","d711934d":"It is ploted for a range of values and their frequency, used to find the distribution of a graph","3c0cf89a":"\nTo install Matplotlib on system, open Python command prompt and type\n\npython -m pip install -U matplotlib","53c86de9":"1. Bar Graph","1496de80":"The subplots have 3 important parameters such as nrows, ncols and index","5797dec8":"# Figure size\n\nIn order to change the size of the figure, we can use figsize and resize the plot","3d3cd137":"# Method - 2","3c147c9a":"A more convenient way is to use subpltots() method.\n\nThis method takes two arguments nrows and ncols as number of rows and number of columns respectively. It creates two objects:figure and axes which we store in variables fig and ax which can be used to change the figure and axes level attributes respectively. Note that these variable names are chosen arbitrarily.\n\n","6f4ef4cd":"Bar graphs are used to show data with the categorical variables. \nWe have to specify the categories on the x axis and the corresponding values in the y axis \n\nBarh gives horizontal bar graphs.\n\n","afa78a41":"To add title for the graphs and x lables and y lables below is the code\n","eda7ed03":"# Matplotlib - Python\u2019s powerful Plotting library","b65fb4ba":"Here we pass 2 list with numeric values. First array appears on the x-axis and second array appears on the y-axis of the plot. ","52141274":"To add more than one plots in one figure, we can use subplot() method","567aefc9":"They indicate the number of rows, number of columns and the index number of the sub-plot.","c3c0adcc":"To create vertically stack bar graphs together, we can use \"bottom\" and mention graph which we want to stack below as its value.","ffa6d975":"![image.png](attachment:image.png)","f347bde5":"For instance, in our example, we want to create two sub-plots in one figure such that it comes in one row and in two columns and hence we pass arguments (1,2,1) and (1,2,2) in the subplot() method. Note that we have separately used title()method for both the subplots. We use suptitle() method to make a centralized title for the figure.","407cc8ff":"# Pie Chart","aa5d8cae":"Plots can be categorized into \n\n![image.png](attachment:image.png)","19b07629":"# Histogram","87455c68":"Note - If we want our sub-plots in two rows and single column we can interchange the arguments and pass\n","4b7558f3":"To create stacked bar graphs we can use bar() function twice and pass the arguments ","785ad67a":"# Scatter Plot","43e92f0d":"Pie chart can be created using pie() function ","0317c13f":"The first value in the figure size denotes the x axis size and second for y axis.","52d6ff9b":"# different types of graphs with Pyplot","aa03914c":"# Getting Started with Pyplot\n\nPyplot, a module of Matplotlib helps us to create simple functions and to add plot elements like lines, images, text, etc. to the current axes in the current figure.\n"}}