{"cell_type":{"a30f4aae":"code","2f36cbbc":"code","3728258b":"code","2f5ecd48":"code","04ca4d86":"code","d02008da":"code","55aa51a2":"code","961079be":"code","6b5f35df":"code","0984cf94":"code","377bdc02":"code","eb77edc6":"code","1dd1f3a7":"code","18d1c482":"code","b44263db":"code","26d898d1":"code","a3c5fe38":"code","f2a55c40":"code","a21f5281":"code","5c016c43":"code","89175795":"code","1747a252":"code","32fc2b95":"code","3529a920":"code","6a8d0542":"code","dbc4bf7c":"code","3d7522a9":"code","6f82f723":"markdown","9f7d94cd":"markdown","03ccf7a3":"markdown","b7d9ae57":"markdown","cf64b8cf":"markdown","c58a5e33":"markdown","453e24ba":"markdown","88e154bb":"markdown","0a7876b2":"markdown","539ac676":"markdown","4086a959":"markdown","f7a4c986":"markdown","0d8cafac":"markdown"},"source":{"a30f4aae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom matplotlib import figure\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2f36cbbc":"timesData=pd.read_csv('..\/input\/world-university-rankings\/timesData.csv')","3728258b":"timesData.info()","2f5ecd48":"timesData.head()","04ca4d86":"timesData.columns","d02008da":"#2011 YILINDAK\u0130 ALINTI YAPMA VE \u00d6\u011eRET\u0130M SKORLARINI KONTROL EDECE\u011e\u0130Z\n#Line Charts Example: Citation and Teaching vs World Rank of Top 100 Universities\n\ndf=timesData.iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Scatter(\n                  x=df.world_rank,\n                  y=df.citations,\n                  mode=\"lines\",\n                  name=\"cititions\",\n                  marker=dict(color=\"rgba(16,112,2,0.8)\"),\n                  text=df.university_name)\ntrace2=go.Scatter(\n                  x=df.world_rank,\n                  y=df.teaching,\n                  mode=\"lines+markers\",\n                  name=\"teaching\",\n                  marker=dict(color=\"rgba(80,26,80,0.8)\"),\n                  text=df.university_name)\ndata=[trace1,trace2]\nlayout=dict(title='Citation and Teaching vs World Rank of Top 100 Universities',\n            xaxis=dict(title='World Rank',ticklen=5,zeroline=False)\n            )\nfig=dict(data=data,layout=layout)\niplot(fig)","55aa51a2":"timesData.head()","961079be":"#2014-2015-2016 D\u00fcnyadaki ilk 100 \u00fcniversitenin al\u0131nt\u0131s\u0131n\u0131 inceleyece\u011fiz.\ndf2014=timesData[timesData.year==2014].iloc[:100,:]\ndf2015=timesData[timesData.year==2015].iloc[:100,:]\ndf2016=timesData[timesData.year==2016].iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Scatter (\n                   x=df2014.world_rank,\n                   y=df2014.citations,\n                   mode=\"markers\",\n                   name=\"2014\",\n                   marker=dict(color='rgba(255,128,255,0.8)'),\n                   text=df2014.university_name\n)\ntrace2=go.Scatter (\n                   x=df2015.world_rank,\n                   y=df2015.citations,\n                   mode=\"markers\",\n                   name=\"2015\",\n                   marker=dict(color='rgba(255,128,2,0.8)'),\n                   text=df2015.university_name\n)\ntrace3=go.Scatter (\n                   x=df2016.world_rank,\n                   y=df2016.citations,\n                   mode=\"markers\",\n                   name=\"2016\",\n                   marker=dict(color='rgba(0,255,200,0.8)'),\n                   text=df2014.university_name\n)\ndata=[trace1,trace2,trace3]\nloyout=dict(title='Citation vs world rank of top 100 universities with 2014 ,2015 and 2016 years',\n            xaxis=dict(title='World Rank',ticklen=6,zeroline=False),\n            yaxis=dict(title='Citation',ticklen=4,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","6b5f35df":"df2014","0984cf94":"#2014-2015-2016 D\u00fcnyadaki ilk 100 \u00fcniversitenin al\u0131nt\u0131s\u0131n\u0131 inceleyece\u011fiz.\n#2014-2015-2016 SIRALAMAYA G\u00d6RE GRAF\u0130K\ndf2014=timesData[timesData.year==2014].iloc[:100,:]\ndf2015=timesData[timesData.year==2015].iloc[:100,:]\ndf2016=timesData[timesData.year==2016].iloc[:100,:]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Scatter (\n                   x=df2014.world_rank,\n                   y=df2014.total_score,\n                   mode=\"markers\",\n                   name=\"2014\",\n                   marker=dict(color='rgba(255,128,255,0.8)'),\n                   text=df2014.university_name\n)\ntrace2=go.Scatter (\n                   x=df2015.world_rank,\n                   y=df2015.total_score,\n                   mode=\"markers\",\n                   name=\"2015\",\n                   marker=dict(color='rgba(255,128,2,0.8)'),\n                   text=df2015.university_name\n)\ntrace3=go.Scatter (\n                   x=df2016.world_rank,\n                   y=df2016.total_score,\n                   mode=\"markers\",\n                   name=\"2016\",\n                   marker=dict(color='rgba(0,255,200,0.8)'),\n                   text=df2014.university_name\n)\ndata=[trace1,trace2,trace3]\nloyout=dict(title='Citation vs world rank of top 100 universities with 2014 ,2015 and 2016 years',\n            xaxis=dict(title='World Rank',ticklen=6,zeroline=False),\n            yaxis=dict(title='Citation',ticklen=4,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","377bdc02":"timesData.head()","eb77edc6":"df2014","1dd1f3a7":"df2014 = timesData[timesData.year == 2014].iloc[:3,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.citations,\n                name = \"citations\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df2014.country)\n# create trace2 \ntrace2 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.teaching,\n                name = \"teaching\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df2014.country)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","18d1c482":"df2016=timesData[timesData.year==2016].iloc[:4,:]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Bar(\n                x=df2016.university_name,\n                y=df2016.citations,\n                name='citations',\n                marker=dict(color='rgba(255,174,120,0.5)',line=dict(color='rgba(0,0,0)',width=1.5)),\n                text=df2016.country\n)\n\ntrace2=go.Bar (\n                x=df2016.university_name,\n                y=df2016.teaching,\n                name='teaching',\n                marker=dict(color='rgba(225,235,105,0.6)',line=dict(color='rgb(0,0,0)',width=1.5)),\n                text=df2016.country\n)\ndata=[trace1,trace2]\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","b44263db":"df2014=timesData[timesData.year==2014].iloc[:3,:]\nimport plotly.graph_objs as go\n\nx=df2014.university_name\n\ntrace1={\n    'x':x,\n    'y':df2014.citations,\n    'name':'citation',\n    'type':'bar'\n};\ntrace2={\n    'x':x,\n    'y':df2014.teaching,\n    'name':'teaching',\n    'type':'bar'\n};\ndata=[trace1,trace2];\nlayout={\n    'xaxis':{'title':'Top 3 universities'},\n    'barmode':'relative',\n    'title':'citations and teaching of top universities in 2014'\n};\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","26d898d1":"df2016","a3c5fe38":"#2016 YILINDA \u00d6\u011eRENC\u0130LER\u0130N SAYISINI KAR\u015eILA\u015eTIRMA \u0130LK 7 \u00dcN\u0130VERS\u0130TE\ndf2016 = timesData[timesData.year == 2016].iloc[:7,:]\npie1 = df2016.num_students\npie1_list = [float(each.replace(',', '.')) for each in df2016.num_students] \nlabels = df2016.university_name\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Students Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Universities Number of Students rates\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Students\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","f2a55c40":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:10,:]\nnum_students_size  = [float(each.replace(',', '.')) for each in df2016.num_students]\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'y': df2016.teaching,\n        'x': df2016.world_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n        },\n        \"text\" :  df2016.university_name    \n    }\n]\niplot(data)","a21f5281":"#neden hata veriyor \u00e7\u00f6zemiyorum ayn\u0131s\u0131n\u0131 yapmam ra\u011fmen\ndf2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size = [float(each.replace(',','.')) for each in df2016.num_students]\ninternational_color = df2016.international\ndata=[\n    {\n        'y':df2016.teaching,\n        'x':df2016.world_rank,\n        'mode':'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n            \n        },\n        \"text\":  df2016.university_name  \n    }\n] \niplot(data)","5c016c43":"timesData.head()","89175795":"X2011=timesData.student_staff_ratio[timesData.year==2011]\nX2012=timesData.student_staff_ratio[timesData.year==2012]\n\ntrace1= go.Histogram (\n    x=X2011,\n    opacity= 0.75,\n    name=\"2011\",\n    marker=dict(color='rgba(171,50,96,0.6)'))\ntrace2=go.Histogram(\n    x=X2012,\n    opacity=0.75,\n    name=\"2012\",\n    marker=dict(color='rgba(12,50,196,0.6)'))\n\ndata=[trace1,trace2]\nlayout=go.Layout (barmode='overlay',\n                  title='students-staff ratio in 2011 and 2012',\n                  xaxis=dict(title=\"students-staff ratio\"),\n                  yaxis=dict(title=\"Count\"),)\nfig=go.Figure(data=data,layout=layout)\niplot(fig)\n            ","1747a252":"x2011=timesData.country[timesData.year==2011]\nplt.subplots(figsize=(8,8))\nwordcloud=WordCloud(\n                      background_color='white',\n                      width=512,  \n                      height=384\n                    ).generate(\"\".join(x2011))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","32fc2b95":"x2015=timesData[timesData.year==2015]\n\ntrace0 = go.Box(\n    y=x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)\n\n","3529a920":"#2 den fazla feauture kar\u015f\u0131la\u015ft\u0131rmak i\u00e7in kullan\u0131yoruz.\nimport plotly.figure_factory as ff\ndataframe=timesData[timesData.year==2015]\ndata2015=dataframe.loc[:,[\"research\",\"international\",\"total_score\"]]\ndata2015[\"index\"]=np.arange(1,len(data2015)+1)\nfig=ff.create_scatterplotmatrix(data2015,diag='box',index='index',colormap='Portland',\n                                 colormap_type='cat',\n                                 height=700, width=700)\niplot(fig)","6a8d0542":"#Bu plotta \u00f6nemli olan bizim i\u00e7in b\u00fcy\u00fck g\u00f6steriliyor.\u00d6nemsiz olan k\u00fc\u00e7\u00fck oluyor.\n\ntrace1=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.teaching,\n    name=\"teaching\",\n    marker=dict(color=\"rgba(16,112,2,0.8)\"),\n    \n)\ntrace2=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x2',\n    yaxis='y2',\n    name=\"income\",\n    marker=dict(color='rgba(160,110,56,0.8)'),\n)\ndata=[trace1,trace2]\nlayout=go.Layout (\n    xaxis2=dict(\n        domain=[0.6,0.95],\n        anchor='y2',\n    ),\n    yaxis2=dict(\n        domain=[0.6,0.95],\n        anchor='x2',\n    ),\n    title='Income and Teaching vs World Rank of Universities'\n)\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","dbc4bf7c":"trace1 = go.Scatter3d(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    z=dataframe.citations,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,0,0)',                  \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","3d7522a9":"trace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","6f82f723":"2 SCATTER MATR\u0130X PLOTS","9f7d94cd":"BAR CHARTS","03ccf7a3":"MULT\u0130PLE SUBPLOTS\n","b7d9ae57":"P\u0130E CHARTS\n","cf64b8cf":"BOX PLOT","c58a5e33":"FINISH","453e24ba":"L\u0130NE CHARTS","88e154bb":"H\u0130STOGRAM","0a7876b2":"Word Cloud","539ac676":"SCATTER PLOT","4086a959":"Bubble Charts","f7a4c986":"3D SCATTER PLOT","0d8cafac":"INSET PLOT\n"}}