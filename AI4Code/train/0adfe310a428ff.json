{"cell_type":{"8883adc9":"code","b683c966":"code","b23e7ff3":"code","d3785d4c":"code","1bc41f16":"code","6784ee0f":"code","07f714d6":"code","bdef70f2":"code","a7612a24":"code","479c7929":"code","f603794f":"code","5cdca22f":"code","465a4760":"code","9faa1d55":"code","1c2e1388":"code","c4b52ea7":"code","37760180":"code","ba9a52f2":"code","6c68632c":"code","138d11c4":"code","2c3db482":"code","116873c6":"code","c5b48332":"code","203f414c":"code","e44670df":"code","eb0ffb2b":"code","7952dd24":"code","b8241b3b":"code","faf3b5de":"code","2af1af1a":"code","7f834c80":"code","2355a058":"code","4c444074":"code","09479b20":"code","0adb48aa":"code","b2292cc9":"code","3ff23bba":"code","2a234352":"code","8721af05":"code","2a673733":"code","23c4286b":"code","9bbb1914":"code","df5d0c38":"code","9bc23bdf":"code","38de7eb2":"code","65bb694d":"code","ed49cb25":"code","bf8d6809":"code","230c4efb":"code","674e8a46":"code","f46f372b":"code","fa02cc89":"code","a4929078":"code","31836e98":"markdown","9753ed7d":"markdown","58d59b02":"markdown","e7872e86":"markdown","fb15d5df":"markdown","d4323310":"markdown","d1175214":"markdown","0ab78e36":"markdown","d0b40c0d":"markdown","ac3a85c1":"markdown","906f85ca":"markdown","c9a03367":"markdown","79d2b6dc":"markdown","2a1eddd5":"markdown","c6023137":"markdown","b98ecde8":"markdown","fe892c31":"markdown","f607a825":"markdown","6230eb52":"markdown","061f7001":"markdown"},"source":{"8883adc9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b683c966":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter","b23e7ff3":"data=pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\ndata.head()","d3785d4c":"data.shape  # the data includes 1338 rows and 7 columns","1bc41f16":"data.describe()  # mean people age who participate in the survey is 39.2","6784ee0f":"data.info()  # the data includes int object and float types so we are going to examine again in next parts","07f714d6":"\nplt.figure(figsize=(3,5))\nplt.bar(data[\"sex\"].value_counts().index,data[\"sex\"].value_counts())","bdef70f2":"def bar(variable):\n    \n    var=data[variable]\n    var_value=var.value_counts()\n    plt.figure(figsize=(4,5))\n    plt.title(i)  \n    plt.bar(var_value.index,var_value)\n    plt.xticks(var_value.index,var_value.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.show()\n","a7612a24":"variables=[\"sex\",\"smoker\",\"region\"]   # I prefer \"bar plot\" for categorical variables\n\nfor i in variables:\n        \n    bar(i)\n    ","479c7929":"\n    \n    \ndef histogram(variables):\n    \n    var=data[variables]\n    \n    var_value=data[variables].value_counts()\n    plt.figure(figsize=(10,8))\n    plt.title(\"{} distribution with histogram\".format(variables))\n    \n    plt.hist(var)\n    \n    plt.xticks(var_value.index,var_value.index.values)\n    plt.ylabel(\"Values\")\n    plt.show()","f603794f":"variable=[\"age\",\"bmi\",\"children\",\"charges\"]\n\nfor i in variable:\n    histogram(i)","5cdca22f":"\ndata_x=data[[\"age\",\"charges\"]].groupby([\"age\"],as_index=False).mean().sort_values(by=\"charges\",ascending=False)\ndata_x.head()","465a4760":"data_y=data[[\"sex\",\"charges\"]].groupby([\"sex\"],as_index=False).mean().sort_values(by=\"charges\",ascending=False)\ndata_y.head()","9faa1d55":"data_z=data[[\"children\",\"charges\"]].groupby([\"children\"],as_index=False).mean().sort_values(by=\"children\",ascending=False)\ndata_z.head()","1c2e1388":"variable=[\"age\",\"bmi\",\"charges\",\"children\"]  #as we observ on plot that bmi and charges variables includes outlier values\nfor i in variable:\n\n    sns.boxplot(x=data[i])\n    plt.show()","c4b52ea7":"bmi=data[\"bmi\"]\nbmi.shape","37760180":"bmi=data[\"bmi\"]\n    \nQ1=bmi.quantile(0.25)\n\nQ3=bmi.quantile(0.75)\n\nIQR=Q3-Q1\n\nup_limit=Q3+1.5*IQR\n\ndown_limit=Q1-1.5*IQR\n\naykiri=(bmi>up_limit)|(bmi<down_limit)\n                  \n\n    ","ba9a52f2":"bmi_aykiri=bmi[aykiri]  #these values are outliers\nbmi_aykiri","6c68632c":"clear_bmi=bmi[~((bmi>(up_limit))|(bmi<(down_limit)))]     # 9 bmi data is outliers\nclear_bmi","138d11c4":"charges=data[\"charges\"]\n    \nQ1=charges.quantile(0.25)\n\nQ3=charges.quantile(0.75)\n\nIQR=Q3-Q1\n\nup_limit=Q3+1.5*IQR\n\ndown_limit=Q1-1.5*IQR\n\naykiri=(charges>up_limit)|(charges<down_limit)\n\n    ","2c3db482":"charges_aykiri=charges[aykiri]  #139 values is outlier\ncharges_aykiri","116873c6":"clear_charges=charges[~((charges>(up_limit))|(charges<(down_limit)))]  #139 data is outliers\nclear_charges","c5b48332":"#MISSING VALUE\n\ndata.isnull().sum()    #the dataset does not include missing value","203f414c":"\nplt.figure(figsize=(8,6))\nvariable=[\"age\",\"bmi\",\"charges\",\"children\"]\n\nsns.heatmap(data[variable].corr(),cmap=\"BuPu\",annot=True,fmt=\".2f\");    #\" cmap_color_settings= Reds, Oranges,BuGn,BuPu..\"\"\n\n\n# It seems that there is strong correlation between age and charges.Thus we can say that age affects medical insurance price directly","e44670df":"from matplotlib import rcParams\nsns.factorplot(x=\"age\",y=\"charges\",data=data,kind=\"bar\")\nplt.xlabel(\"observation participant ages\")\nplt.ylabel(\"Medical Insurance Prices\")\n\nplt.plot()","eb0ffb2b":"plt.figure(figsize=(3,4))\nplt.bar(x=data[\"sex\"],height=data[\"charges\"])  # Gender does not affect price of Medical Insurance\nplt.show()","7952dd24":"plt.figure(figsize=(3,4))\nsns.barplot(x=\"sex\",y=\"charges\",data=data);     #as you see; seaborn library provides good-looker graphs than matplot","b8241b3b":"plt.figure(figsize=(6,8))\nsns.barplot(x=\"bmi\",y=\"charges\",data=data);","faf3b5de":"plt.figure(figsize=(6,6))\nsns.pairplot(data,hue=\"children\")\nplt.show()","2af1af1a":"sns.jointplot(x=\"age\", y=\"charges\", data=data,\n                  kind=\"reg\",truncate=False,\n                  color=\"blue\")","7f834c80":"sns.jointplot(x=\"bmi\", y=\"charges\", data=data,\n                  kind=\"reg\",truncate=False,\n                  color=\"orange\")","2355a058":"\nplt.figure(figsize=(8,8))\nsns.scatterplot(x=\"bmi\",y=\"charges\",hue=\"smoker\",data=data,markers=\"*\",s=100);","4c444074":"plt.figure(figsize=(8,8))\nsns.boxplot(x=\"children\",y=\"charges\",hue=\"region\",data=data);","09479b20":"from sklearn.preprocessing import LabelEncoder\nlbe=LabelEncoder()\ndata[\"sex\"]=lbe.fit_transform(data[\"sex\"])\n\ndata[\"sex\"]=pd.get_dummies(data[\"sex\"])","0adb48aa":"data[\"smoker\"]=lbe.fit_transform(data[\"smoker\"])\n","b2292cc9":"data[\"region\"]=lbe.fit_transform(data[\"region\"])","3ff23bba":"data.info()","2a234352":"from sklearn.model_selection import train_test_split,GridSearchCV,StratifiedKFold,cross_val_score\n\nfrom sklearn.linear_model import LinearRegression ,Ridge ,LassoCV\n\nfrom sklearn.svm import SVC\n\nfrom sklearn.ensemble import RandomForestClassifier,VotingClassifier\n\n\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree  import DecisionTreeClassifier\n\nfrom sklearn.metrics import confusion_matrix,mean_squared_error,r2_score\n\n","8721af05":"X=data.drop(labels=\"charges\",axis=1)\ny=data[\"charges\"]\n","2a673733":"\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)","23c4286b":"print(\"X_train= \",len(X_train))\nprint(\"X_test= \",len(X_test))\nprint(\"y_train= \",len(y_train))\nprint(\"y_test= \",len(y_test))","9bbb1914":"linreg=LinearRegression()\nlinreg.fit(X_train,y_train)\nlinreg_pred=linreg.predict(X_test)","df5d0c38":"MSE=mean_squared_error(linreg_pred,y_test)\nnp.sqrt(MSE)","9bc23bdf":"r2_score(linreg_pred,y_test)  #r2_score is used for regression problems but accuracy_score is used for classification problems\n","38de7eb2":"#Ridge Regression\nridge=Ridge()\nridge.fit(X_train,y_train)\n\ny_pred=ridge.predict(X_test)","65bb694d":"r2_score(y_pred,y_test)","ed49cb25":"#Lasso Regression\n\nlasso=LassoCV()\nlasso.fit(X_train,y_train)\nlasso_pred=lasso.predict(X_test)","bf8d6809":"r2_score(y_test,lasso_pred)","230c4efb":"#LASSO MODEL TUNING\n?LassoCV","674e8a46":"params=[{\"n_alphas\":np.arange(90,150),\"max_iter\":[100,500,1000,3000]}]\n\nclf = GridSearchCV(lasso, params,cv=10,n_jobs=-1,verbose=2)\nclf.fit(X_train,y_train)","f46f372b":"clf.best_params_","fa02cc89":"lasso_tuned=LassoCV(max_iter=100, n_alphas= 94).fit(X_train,y_train)\nlasso_tuned_pred=lasso_tuned.predict(X_test)","a4929078":"r2_score(lasso_tuned_pred,y_test)","31836e98":"<a id= \"12\"><\/a><br>\n# bar plot","9753ed7d":"**Introduction**\n\nThe kernel targets to predict medical insurance prices through collected data\n\n\n<font color= \"red\">\nContent:\n\n[1-Load and Check](#1)\n\n[2-Variable Description](#2)\n    \n*    [Categorical Variable Analysis](#9)\n    \n*    [Numerical Variable Analysis](#10)\n    \n\n[3-Basic Data Analysis](#3)\n    \n[4-Outlier Data Detection](#4)\n    \n[5-Missing Value](#5)\n    \n[6-Visualization](#6)\n    \n*     [Heatmap](#11)\n     \n*     [Bar plot](#12)\n     \n*     [Pair plot](#13)\n     \n*     [Joint plot](#14)\n     \n*     [Scatter plot](#15)\n    \n[7-Feature Engineering](#7)\n    \n[8-Modelling](#8)\n    \n*     [Linear regression](#16)\n     \n*     [Ridge Regression](#17)\n     \n*     [Lasso Regression](#18)","58d59b02":"<a id= \"1\"><\/a><br>\n# 1-LOAD AND CHECK DATA","e7872e86":"<a id= \"5\"><\/a><br>\n# 5-MISSING VALUE","fb15d5df":"<a id= \"9\"><\/a><br>\n# categorical variable analysis","d4323310":"<a id= \"7\"><\/a><br>\n# 7-FEATURE ENGINEERING","d1175214":"<a id= \"11\"><\/a><br>\n# heatmap","0ab78e36":"<a id= \"8\"><\/a><br>\n# 8-MODELLING","d0b40c0d":"<a id= \"18\"><\/a><br>\n# lasso regression","ac3a85c1":"<a id= \"14\"><\/a><br>\n# joint plot","906f85ca":"<a id= \"3\"><\/a><br>\n# 3-BASIC DATA ANALYSIS","c9a03367":"<a id= \"6\"><\/a><br>\n# 6-VISUALIZATION ","79d2b6dc":"<a id= \"2\"><\/a><br>\n# 2-VARIABLE DESCRIPTION","2a1eddd5":"Columns\n\nage: age of primary beneficiary\n\nsex: insurance contractor gender, female, male\n\nbmi: Body mass index, providing an understanding of body, weights that are relatively high or low relative to height,\nobjective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9\n\nchildren: Number of children covered by health insurance \/ Number of dependents\n\nsmoker: Smoking\n\nregion: the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n\ncharges: Individual medical costs billed by health insurance","c6023137":"<a id= \"16\"><\/a><br>\n# linear regression","b98ecde8":"<a id= \"17\"><\/a><br>\n# ridge regression","fe892c31":"<a id= \"4\"><\/a><br>\n# 4-OUTLIER DATA DETECTION","f607a825":"<a id= \"15\"><\/a><br>\n# scatter plot","6230eb52":"<a id= \"10\"><\/a><br>\n# numerical variable analysis","061f7001":"<a id= \"13\"><\/a><br>\n# pair plot"}}