{"cell_type":{"1ae4c08c":"code","10582c23":"code","f3a3aebb":"code","6380166b":"code","0c68f130":"code","353ba631":"code","c5bef06e":"code","90adbc8c":"code","b610b2ab":"code","1367ae24":"code","216adf13":"code","61b2634b":"code","3456dad5":"code","6b989910":"code","f51e8959":"markdown","1aea1e93":"markdown","3a5220ae":"markdown","7da86769":"markdown","367630c7":"markdown","93888043":"markdown","c5c186a9":"markdown","0b0723de":"markdown","bca08dda":"markdown","9d255159":"markdown","2e71382d":"markdown","2b81410f":"markdown","15541897":"markdown","c4ec51c9":"markdown","0c942efe":"markdown","ece8606a":"markdown"},"source":{"1ae4c08c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","10582c23":"import numpy as np\nimport pandas as pd","f3a3aebb":"pip install pycaret","6380166b":"data = pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")","0c68f130":"data.head(20)","353ba631":"from pycaret.classification import * ","c5bef06e":"exp_clf = setup(data, target = 'Class')","90adbc8c":"best = compare_models(sort='AUC', exclude =['lda','gbc','ada','catboost','rf','lightgbm','xgboost','et','qda'])","b610b2ab":"dt = create_model('dt', fold = 5)","1367ae24":"tuned_dt = tune_model(dt,optimize = 'Recall')","216adf13":"evaluate_model(tuned_dt)","61b2634b":"final_dt = finalize_model(tuned_dt)","3456dad5":"prediction = predict_model(final_dt, data = data)\nprediction.head(20)","6b989910":"save_model(final_dt,'Final DT Model 18May21')","f51e8959":"# Prediction Time \ud83d\udd2e","1aea1e93":"# \u2728Get the magic wand installed named PyCaret\u2728","3a5220ae":"We are soring the model on the AUC metric and ignoring models like LDA, GBC, ADA, Catboost etc. as they were taking a lot of time as long as 8 hours\ud83d\ude28","7da86769":"# Save the Model and you are done\ud83d\udcbe","367630c7":"# Let's get the key libraries installed!","93888043":"# Let's get the classification module fired up\ud83d\ude80","c5c186a9":"# Let's finalize the model\u2714\ufe0f","0b0723de":"We would be requiring atleast two key libraries numpy to perform algeberaic routines and Pandas to to create and work with data frames and PyCaret is compatible with Pandas data frames.","bca08dda":"# Read the data\ud83d\udcda","9d255159":"# Credit Fraud Detection Using PyCaret\n![](https:\/\/securionpay.com\/wp-content\/uploads\/2016\/06\/Fraud-Management-How-Do-I-Know-If-The-Charges-Are-Fraudulent2.svg)","2e71382d":"While almost all the mterics based on the number of iterations = Folds (5) looks good and would still want to go ahead an perform hyperparameter tuning to further improve the model's performance. ","2b81410f":"PyCaret is an open source, low-code machine learning library in Python that allows you to perform all the core ML steps in no time. It provides access to almost all the leading algos and related routines that can save you a lot of time when working with complex data and related business problems.","15541897":"# Evaluate the Model\u2696\ufe0f","c4ec51c9":"# Let's Get the data!","0c942efe":"While Naive Bayes model has shown the best AUC howevever, for this analysis I will be using Decision Tree Classifier as this algo has almost all the metrics above 70% and AUC metric at a decent >85%, and in my opinion this model can be great a tackling even highly imbalanced data.Hence, I will be going with Decision Tree Classifier.\n\nPyCaret gives you the option to do model ensembling and blending to further improve your model's performance. However, I want to keep this analysis pretty straightforward and simple.","ece8606a":"Interestingly the tuning didn't help much. The thought behind tuning the recall was to cast a wider net to get as many observations as possible with the associated accuracy for better predictions. However, the results turned out to be southwards, nevermind, I will still go ahead with the tuned model and if required at a later stage we can always tune based on the other factors as well."}}