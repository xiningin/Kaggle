{"cell_type":{"0327a3ca":"code","131525dc":"code","a949c265":"code","f4fa046f":"code","3d01e2a9":"code","64c42628":"code","6b22d910":"code","17be5a51":"code","9b03df0e":"code","569f8227":"code","2c96f581":"code","173632d8":"code","3daeb098":"code","450bc674":"code","c9915714":"code","4a9fc8a9":"code","8dd0c4c8":"code","4919e7c8":"code","e0b2939f":"code","2ac5cd37":"code","2d22b402":"code","62e0f1c1":"code","bb287db5":"code","f2f1c3bf":"markdown","6b294bb5":"markdown","1feddf01":"markdown","29098740":"markdown","50a83a82":"markdown","d51ab732":"markdown","8e592234":"markdown","fcd7555b":"markdown","28b8eefe":"markdown","05f74997":"markdown","02010cf5":"markdown","07b526f0":"markdown","00bddba4":"markdown","27d66dd1":"markdown","6fb0e43a":"markdown","b78e08d5":"markdown","6c79e6a4":"markdown","446799fa":"markdown","37d5ed3b":"markdown","9bb936ff":"markdown","a71b27e6":"markdown","3e1b3407":"markdown","977fd9b6":"markdown","d7ac5c39":"markdown","3689ead1":"markdown"},"source":{"0327a3ca":"import pandas as pd\nimport numpy as np","131525dc":"pd.options.display.max_columns = 60\npd.options.display.max_rows = 30\npd.options.display.float_format = lambda x: f' {x:,.2f}'\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a949c265":"game = pd.read_csv('..\/input\/train_V2.csv', index_col='Id')\n# game = pd.read_csv('input\/train_V2.csv', index_col='Id')\ngame.head()","f4fa046f":"game.describe()","3d01e2a9":"game.info()","64c42628":"game.isna().sum()","6b22d910":"filt = game['winPlacePerc'].isna()\ngame[filt]","17be5a51":"filt2 = game['maxPlace'] == 1\ngame[filt2]","9b03df0e":"game = game.fillna(0)","569f8227":"game.isna().sum().sum()","2c96f581":"game.corr().style.format(\"{:.2%}\").highlight_min()","173632d8":"X = game[['killPlace','weaponsAcquired','walkDistance','boosts','heals']].values\nX[:10]","3daeb098":"y = game['winPlacePerc'].values\ny[:10]","450bc674":"from sklearn.ensemble import RandomForestRegressor\nrfr = RandomForestRegressor()","c9915714":"from sklearn.model_selection import cross_val_score","4a9fc8a9":"cvs_rfr = cross_val_score(rfr, X, y)\ncvs_rfr.mean(), cvs_rfr.std()","8dd0c4c8":"rfr.fit(X,y)","4919e7c8":"game_test = pd.read_csv('..\/input\/test_V2.csv', index_col='Id')\n# game_test = pd.read_csv('input\/test_V2.csv', index_col='Id')\ngame_test.head()","e0b2939f":"game_test.isna().sum().sum()","2ac5cd37":"X_test = game_test[['killPlace','weaponsAcquired','walkDistance','boosts','heals']].values\nX_test[:10]","2d22b402":"predictions = rfr.predict(X_test).reshape(-1,1)","62e0f1c1":"dfpredictions = pd.DataFrame(predictions, index=game_test.index).rename(columns={0:'winPlacePerc'})\ndfpredictions.head(15)","bb287db5":"dfpredictions.to_csv('submission.csv', header=True)","f2f1c3bf":"# <center>PUBG RF Prediction with Five Features<\/center>\n### <center>by Bon Crowder<\/center>","6b294bb5":"Looks good from here. So let's focus on the important parts.","1feddf01":"And these are my personal prettifiers (not required): ","29098740":"## Choosing a Model","50a83a82":"Now to get our predictions:","d51ab732":"I'm going to set up the feature set and target first. Then I'll look at a handful of possible models to see which might work the best.","8e592234":"Looks like `killPlace` is the most dramatically and negatively correlated. So I'll start with that one.\n\nAlso, `weaponsAcquired` and `walkDistance` are both strongly and *positively* correlated, so those may be the two to check out next.","fcd7555b":"***","28b8eefe":"#### Random Forest","05f74997":"That's a LOT better than the previous attempt at 75%.","02010cf5":"And then create the output that can be sent to Kaggle.","07b526f0":"And our result is...","00bddba4":"We already have `rfr` instantiated; now it's time to train it.","27d66dd1":"## Choose Features","6fb0e43a":"Now it's time to bring in the test data and take a peek.","b78e08d5":"Here are the dependencies:","6c79e6a4":"Just to confirm we're all done with missing values:","446799fa":"## Training the Random Forest Model","37d5ed3b":"The only missing value is a single value in `winPlacePerc`. Let's take a look at it.","9bb936ff":"We can put those in a dataframe:","a71b27e6":"In order to decide which single feature to use, I can look at the correlation of `winPlacePerc` to the other features. I've highlighted the minimums and I'll manually look at the maximums.","3e1b3407":"Based on the information in the variable descriptions as well as the correlation of `maxPlace` to `winPlacePerc`, I think filling in the missing values for `winPlacePerc` with 0 (total loser) seems appropriate. ","977fd9b6":"## Preliminary Code","d7ac5c39":"I've done a few with linear regression with minimal success. Now I want to see how a Random Forest may fare. ","3689ead1":"### Load the PUBG Dataset"}}