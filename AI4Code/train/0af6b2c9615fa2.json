{"cell_type":{"897b8f8e":"code","957aa5ad":"code","4658e098":"code","9066a053":"code","4ac2bbf3":"code","dfcd463e":"code","01818271":"code","772dd72e":"code","6fa52330":"code","600cc840":"code","c0691d3a":"code","5fa1d528":"code","1280f802":"code","b4ba8012":"code","4c7f658f":"code","147437ca":"code","cdd0e042":"code","c6a52df1":"code","a0b55c3d":"code","4855f036":"code","38b343ea":"code","9d310189":"code","87baee5e":"code","2dbf6713":"code","611590d1":"code","e6e20e59":"code","916604b6":"markdown"},"source":{"897b8f8e":"!pip install --use-feature=2020-resolver fastbook\nimport fastbook\nfastbook.setup_book()","957aa5ad":"from fastbook import *","4658e098":"Config.config_path","9066a053":"!dir ..\/input\/humpback-whale-identification","4ac2bbf3":"input_images = \"..\/input\/humpback-whale-identification\"\nim = Image.open(input_images + \"\/train\/0000e88ab.jpg\")\nim.to_thumb(256,256)","dfcd463e":"TRAIN = input_images + \"\/train\"\nTEST = input_images + \"\/test\"\nLABELS = input_images + \"\/train.csv\"\nSAMPLE_SUB = input_images + \"sample_submission.csv\"","01818271":"train_df = pd.read_csv(LABELS).set_index('Image')\nunique_labels = np.unique(train_df.Id.values)\n\nlabels_dict = dict()\nlabels_list = []\nfor i in range(len(unique_labels)):\n    labels_dict[unique_labels[i]] = i\n    labels_list.append(unique_labels[i])\n\nprint(\"Number of classes: {}\".format(len(unique_labels)))\ntrain_names = train_df.index.values\ntrain_df.Id = train_df.Id.apply(lambda x: labels_dict[x])\ntrain_labels = np.asarray(train_df.Id.values)\ntest_names = [f for f in os.listdir(TEST)]","772dd72e":"labels_count = train_df.Id.value_counts()\n_, _ , _ = plt.hist(labels_count, bins=100)\nlabels_count ","6fa52330":"print(\"Count for class new_whale: {}\".format(labels_count[0]))\n\nplt.hist(labels_count[1:],bins=100,range=[0,100])\nplt.hist(labels_count[1:],bins=100,range=[0,100])","600cc840":"dup = []\nfor idx,row in train_df.iterrows():\n    if labels_count[row['Id']] < 5:\n        dup.extend([idx]*math.ceil((5 - labels_count[row['Id']])\/labels_count[row['Id']]))\ntrain_names = np.concatenate([train_names, dup])\ntrain_names = train_names[np.random.RandomState(seed=42).permutation(train_names.shape[0])]\nlen(train_names)","c0691d3a":"path = Path(input_images)","5fa1d528":"path","1280f802":"df = pd.read_csv(path\/'train.csv')\ndf.head()","b4ba8012":"\ndls = ImageDataLoaders.from_df(df, TRAIN, item_tfms=Resize(128),batch_tfms=aug_transforms(mult=2))","4c7f658f":"dls.show_batch()","147437ca":"fns = get_image_files(TEST)","cdd0e042":"verify_images(fns)","c6a52df1":"learn = cnn_learner(dls, resnet18, metrics=error_rate)\nlearn.fine_tune(4)","a0b55c3d":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","4855f036":"interp.plot_top_losses(16, nrows = 8)","38b343ea":"learn.export()","9d310189":"path = Path()\npath.ls(file_exts='.pkl')","87baee5e":"learn_inf = load_learner(path\/'export.pkl')\n","2dbf6713":"# need to make code for submission","611590d1":"test_images =get_image_files(TEST)","e6e20e59":"test_images","916604b6":"# Working on the dataset using fastai v4\n\nI just wanted to apply the fastai lesson2, fundamentals on this dataset. It looks really beginner friendly. \n\nBut any comment regarding evaluating on test images would be most welcome. I am kind of stuck there."}}