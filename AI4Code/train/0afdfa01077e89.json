{"cell_type":{"7d5dcb99":"code","2b6cfb26":"code","a0396e89":"code","5090fc54":"code","2bcb9386":"code","429a3bfb":"code","85a26d0b":"markdown","1c1ab11a":"markdown"},"source":{"7d5dcb99":"import collections\nimport datetime\nimport math\nimport re\nimport typing as tp\n\nimport bokeh.io, bokeh.plotting\nimport nltk\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns","2b6cfb26":"posts = pd.read_csv(\"\/kaggle\/input\/wallstreetbets-posts-and-comments-for-august-2021\/wsb-aug-2021-posts.csv\")\ncomments = pd.read_csv(\"\/kaggle\/input\/wallstreetbets-posts-and-comments-for-august-2021\/wsb-aug-2021-comments.csv\")","a0396e89":"def get_tickers_from_text(text: str) -> tp.List[str]:\n    try:\n        return re.findall('(?<=\\$)[A-Z]{1,4}', text)\n    except TypeError:\n        return []\n\n# Test the algorithm\nprint(posts.iloc[6][\"title\"])\nget_tickers_from_text(posts.iloc[6][\"title\"])","5090fc54":"def get_all_counts() -> tp.Tuple[collections.Counter, collections.Counter]:\n    c = collections.Counter()\n    adjusted_c = collections.Counter()\n    for comment in comments.iloc:\n        tickers = get_tickers_from_text(comment[\"body\"])\n        for ticker in tickers:\n            c.update([ticker])\n        for ticker in list(set(tickers)):\n            adjusted_c.update([ticker])\n    return (c, adjusted_c)\n\ncounts, adjusted_counts = get_all_counts()\nprint(counts.most_common(20))\nprint(adjusted_counts.most_common(20))","2bcb9386":"bokeh.io.output_notebook()","429a3bfb":"def plot_ticker_mentions(ticker: str):\n    data = []\n    for comment in comments.iloc:\n        if ticker in set(get_tickers_from_text(comment[\"body\"])):\n            comment = dict(comment.copy())\n            comment[\"created_utc\"] = datetime.datetime.fromtimestamp(comment[\"created_utc\"])\n            if not math.isnan(comment[\"sentiment\"]):\n                data.append(comment)\n    f = bokeh.plotting.figure(title=f\"Mentions of ${ticker} by date\",x_axis_type=\"datetime\")\n    f.scatter([comment[\"created_utc\"] for comment in data], [comment[\"sentiment\"] for comment in data])\n    bokeh.plotting.show(f)\n    #data = pd.DataFrame(data)\n    #sns.scatterplot(data=data, x=\"created_utc\", y=\"sentiment\")\n    \n            \nplot_ticker_mentions(\"HOOD\")","85a26d0b":"# Let's analyze some stonks","1c1ab11a":"# Try it yourself!\n\nThis is just a short example. We invite you to try the dataset for yourself and see what you can take out of it."}}