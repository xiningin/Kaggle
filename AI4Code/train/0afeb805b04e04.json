{"cell_type":{"87631ade":"code","4d7dab7c":"code","41fbd2df":"code","d1d47e96":"code","8aafa722":"code","e424cb59":"code","a6ab3665":"code","bcbc3182":"markdown","40930648":"markdown","3cf82529":"markdown","0599376f":"markdown","22f2962a":"markdown"},"source":{"87631ade":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d7dab7c":"df = pd.read_csv(\"..\/input\/weekly-sales-transactions\/Sales_Transactions_Dataset_Weekly.csv\")","41fbd2df":"X = df.iloc[:, 1:53]\nX.head()","d1d47e96":"scaler = StandardScaler()\nscaled_X = pd.DataFrame(scaler.fit_transform(X))\nscaled_X.columns = X.columns","8aafa722":"wcss = []\nfor i in range(1, 9):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(scaled_X)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 9), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","e424cb59":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(scaled_X)","a6ab3665":"plt.scatter(scaled_X[y_kmeans == 0]['W0'], scaled_X[y_kmeans == 0]['W2'], s = 20, c = 'red', label = 'Cluster 1')\nplt.scatter(scaled_X[y_kmeans == 1]['W0'], scaled_X[y_kmeans == 1]['W2'], s = 20, c = 'green', label = 'Cluster 2')\nplt.scatter(scaled_X[y_kmeans == 2]['W0'], scaled_X[y_kmeans == 2]['W2'], s = 20, c = 'blue', label = 'Cluster 3')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 30, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of sales')\nplt.xlabel('First week')\nplt.ylabel('Third week')\nplt.legend()\nplt.show()","bcbc3182":"# Using the elbow method to find the optimal number of clusters","40930648":"# Feature Scaling","3cf82529":"# Fitting K-Means to the dataset","0599376f":"# Visualising the clusters","22f2962a":"# Importing dataset"}}