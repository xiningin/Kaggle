{"cell_type":{"e325c62f":"code","7f0ac0fc":"code","f18745c9":"code","e2f0621a":"code","2cdffa2e":"code","ec62cb5d":"code","6fc29f88":"code","0a945478":"code","9fef020b":"code","8942a7f7":"code","9a0b8017":"code","0bf56a0c":"code","69e2907a":"code","d7cc783f":"code","53658562":"code","7dc5ad39":"code","d43b641c":"code","2a5f20a1":"code","a5eefc01":"code","daaa3047":"code","6a6f7833":"code","ef25a8c6":"code","f611f432":"markdown"},"source":{"e325c62f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\n%matplotlib inline \nnp.random.seed(2)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nimport itertools\nimport warnings\n\ndef fxn():\n    warnings.warn(\"deprecated\", DeprecationWarning)\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    fxn()\nwarnings.filterwarnings(\"ignore\")","7f0ac0fc":"train=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")","f18745c9":"Y_train=train['label']\nX_train=train.drop(labels=['label'],axis=1)\n\ng=sns.countplot(Y_train)\nY_train.value_counts()","e2f0621a":"X_train.isnull().sum().describe()","2cdffa2e":"test.isnull().any().describe()","ec62cb5d":"#Normalization the data\nX_train=X_train \/ 255.0\ntest=test \/ 255.0\n","6fc29f88":"X_train=X_train.values.reshape(-1,28,28,1)\ntest=test.values.reshape(-1,28,28,1)","0a945478":"from keras.utils.np_utils import to_categorical\nY_train=to_categorical(Y_train,num_classes=10)","9fef020b":"random_seed=2","8942a7f7":"X_train, X_val, Y_train, Y_val = train_test_split(X_train, Y_train, test_size = 0.1, random_state=random_seed)","9a0b8017":"g=plt.imshow(X_train[0][:,:,0],cmap='gray')","0bf56a0c":"from keras.optimizers import Adam\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout,Flatten,Conv2D,MaxPool2D\nfrom keras.layers.normalization import BatchNormalization\nmodel=Sequential()\nmodel.add(Conv2D(filters=32,kernel_size=(5,5),padding='Same',activation='relu',input_shape=(28,28,1)))\nmodel.add(Conv2D(filters=32,kernel_size=(5,5),padding='Same',activation='relu'))\nmodel.add(Conv2D(filters=32,kernel_size=(5,5),padding='Same',activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.15))\nmodel.add(Conv2D(filters=64,kernel_size=(3,3),padding='Same',activation='relu'))\nmodel.add(Conv2D(filters=64,kernel_size=(3,3),padding='Same',activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2),strides=(2,2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(256,activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10,activation=\"softmax\"))\n","69e2907a":"optimizer=Adam(lr=0.00001,beta_1=0.9,beta_2=0.009,epsilon=10e-8)\n#optimizer=RMSprop(lr=0.001,epsilon=10e-8,decay=0.0)\nmodel.compile(optimizer='adam',loss=[\"categorical_crossentropy\"],metrics=[\"accuracy\"])","d7cc783f":"learning_rate_reduction=ReduceLROnPlateau(monitor='val_acc',patience=3,verbose=1,factor=0.5,min_lr=0.000001)","53658562":"epochs=30\n\nbatch_size=200","7dc5ad39":"from sklearn.model_selection import StratifiedKFold\nskf=StratifiedKFold(n_splits=5)\nhistory = model.fit(X_train, Y_train, batch_size = batch_size, epochs = epochs, \n      validation_data = (X_val, Y_val), verbose = 2)","d43b641c":"# predict results\nresults = model.predict(test)\n","2a5f20a1":"predictions=np.argmax(results,axis=1)","a5eefc01":"predictions","daaa3047":"predictions=pd.Series(predictions,name='Label')","6a6f7833":"submission=pd.concat([pd.Series(range(1,28001),name='ImageId'),predictions],axis=1)\nsubmission.to_csv('submission.csv',index=False)","ef25a8c6":"submission","f611f432":"RESULTS:\n* with RMSprop i received the score of 0.99264\n* with Adam optimize, I received  the score of 0.99378"}}