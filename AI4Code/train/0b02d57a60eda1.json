{"cell_type":{"fed12291":"code","a2cf3594":"code","68e14ba2":"code","d1fcd7ec":"code","158b6ed3":"code","e18f095a":"code","d843b010":"code","47b70dae":"code","6458b112":"code","ba3eb55a":"code","a95d5fe8":"markdown","d6a14dc4":"markdown"},"source":{"fed12291":"import warnings\nwarnings.filterwarnings('ignore')","a2cf3594":"import numpy as numpy\nimport pandas as pd\nfrom keras.layers.core import Dense, Dropout, Activation\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras import layers\nfrom keras import optimizers, regularizers\nfrom sklearn import ensemble\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","68e14ba2":"# loading the dataset\ndataset = pd.read_csv('..\/input\/house-price-dataset-with-other-information\/kc_house_data.csv')\ndataset.info()","d1fcd7ec":"print(dataset['bedrooms'].value_counts())","158b6ed3":"dataset['bedrooms'].value_counts().plot(kind='bar')\nplt.xlabel('bedrooms')\nplt.ylabel('count')\nplt.show()","e18f095a":"# we are going to predict the price column based on our training set\nx = dataset[['bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade',\n             'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long', 'sqft_living15', 'sqft_lot15']]\ny = dataset['price']","d843b010":"# training set = 75% and testing set = 25%\nX_train, X_test, Y_train, Y_test = train_test_split(\n    x, y, test_size=0.25, random_state=2)\nprint(len(X_train))","47b70dae":"reg = ensemble.GradientBoostingRegressor(n_estimators=400, max_depth=5, min_samples_split=2,\n                                         learning_rate=0.1, loss='ls')\n# we can also use reg = LinearRegression() but in that case the accuracy of prediction is not as good as this one\nreg.fit(X_train, Y_train)\nprint(reg.score(X_test, Y_test) * 100)","6458b112":"result = reg.predict(X_test)\ndf = pd.DataFrame({'Actual': Y_test, 'Predict': result.round()})\nprint(df)","ba3eb55a":"df.plot(kind='bar', figsize=(5, 5))\nplt.show()","a95d5fe8":"# Training ","d6a14dc4":"# Data Visualization"}}