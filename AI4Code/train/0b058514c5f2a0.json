{"cell_type":{"5dde03c2":"code","cc061d23":"code","55395d54":"code","4c55bab3":"code","a60b3bdf":"code","46038bcf":"code","7189acaa":"code","5be4041d":"code","6892b64f":"code","70dd4ca5":"code","b5fdbb6c":"code","8537a848":"code","a91ddf78":"code","dd7ad7b3":"code","e701030f":"code","4044df17":"code","00d12827":"code","4664b79d":"code","dff32a01":"code","39df73af":"code","edb1be8a":"code","a9879218":"code","7eb58196":"code","f0638e2d":"code","be562b27":"code","b768f3e0":"markdown","1a6a9843":"markdown","a54b045e":"markdown","92c8a63a":"markdown","11f2b80f":"markdown","56d13086":"markdown","34877e3f":"markdown","a4331977":"markdown"},"source":{"5dde03c2":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\n# from sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline\nfrom sklearn.linear_model import LinearRegression","cc061d23":"wine = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","55395d54":"wine.head()","4c55bab3":"wine.info()","a60b3bdf":"wine.shape","46038bcf":"import seaborn\nseaborn.barplot(x ='quality', y ='fixed acidity', data = wine)","7189acaa":"seaborn.barplot(x = 'quality', y = 'volatile acidity', data = wine)","5be4041d":"seaborn.barplot(x = 'quality', y = 'citric acid', data = wine)","6892b64f":"seaborn.barplot(x = 'quality', y = 'residual sugar', data = wine)","70dd4ca5":"seaborn.barplot(x = 'quality', y = 'chlorides', data = wine)","b5fdbb6c":"seaborn.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine)","8537a848":"seaborn.barplot(x = 'quality', y = 'total sulfur dioxide', data = wine)","a91ddf78":"seaborn.barplot(x = 'quality', y = 'sulphates', data = wine)","dd7ad7b3":"seaborn.barplot(x = 'quality', y = 'alcohol', data = wine)","e701030f":"### correlation gives us relation between individual factors, which factor contributing more\ncorrelation  = wine.corr()\nplt.figure(figsize=(25,8))\nsns.heatmap(correlation,annot = True)       # Here annot= True write data value to each box\ncor = wine.corr()\ncor['quality'].sort_values(ascending=False)","4044df17":"### Making binary classificaion for the response variable.\n### Dividing wine as good and bad by giving the limit for the quality\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import LabelEncoder\nquality_range = (2,5,6,8)\nquality_class = ['Worst','average','best']\nwine['quality'] = pd.cut(wine['quality'], bins = quality_range, labels = quality_class)\nLB = LabelEncoder()\nLB_encoded = LB.fit_transform(wine['quality'])\nprint((LB.classes_))\nprint(LB_encoded)","00d12827":"wine['quality'].max()\nwine[\"quality\"].value_counts()","4664b79d":"seaborn.countplot(wine[\"quality\"])      ","dff32a01":"from sklearn.model_selection import train_test_split\nX = wine.drop('quality', axis = 1)\nY = wine['quality']\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y,test_size = 0.3, random_state = 50)","39df73af":"def get_score(model, X_train, X_test, Y_train, Y_test):\n    model.fit(X_train, Y_train)\n    return model.score(X_test, Y_test)","edb1be8a":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","a9879218":"import sklearn.linear_model as sk\nlearn = sk.LogisticRegression();          #initializing linear regression model\nlearn.fit(X_train,Y_train);          #training the linear regression model\ny_predicted = learn.predict(X_test)\nscore = learn.score(X_test,Y_test);    #testing the linear regression model\nprint (score)","7eb58196":"SVM = SVC()\nSVM.fit(X_train,Y_train)\nSVM.score(X_test,Y_test)","f0638e2d":"rf = RandomForestClassifier(n_estimators=100)\nrf.fit(X_train,Y_train)\nrf.score(X_test,Y_test)","be562b27":"rfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train, Y_train)\npred_rfc = rfc.predict(X_test)\nscore=rfc.score(X_test,Y_test)\nprint(classification_report(Y_test, pred_rfc))","b768f3e0":"#### Observations\n- Dataset dont have null values,All the data is of numeric type,There is no categorical variables in the dataset ","1a6a9843":"#### By visualising the data through heatmap, it is clear that Fixed acidity (13%), Citric acid(23%), Sulphates(21%), alcohol(36%) only contribute major part in quality ","a54b045e":"#### Checking score with SVM","92c8a63a":"#### Preprocessing of data","11f2b80f":"#### Random Forest Classifier","56d13086":"#### Checking score with Logistic regression","34877e3f":"#### Checking score with Random Forest ","a4331977":"#### Splitting data for training "}}