{"cell_type":{"fb7871b5":"code","92f86300":"code","d4cc1d56":"code","85b60985":"code","dc173284":"code","d56dd9aa":"code","0dd77018":"code","35838c1f":"code","865cbc60":"code","ba07414f":"code","c709ca18":"code","0c4cd256":"code","b9742014":"code","11753a98":"code","d3ec0efa":"code","6bda3b1c":"code","fa16ea46":"code","c0b4cb23":"code","2baa0979":"code","527d36e9":"code","96851acc":"code","19880895":"code","33f79db8":"markdown","e7ee7332":"markdown","8f8b8828":"markdown","25d9f887":"markdown","c00f65ec":"markdown","0d288beb":"markdown","f4af8d0f":"markdown","96ac8f8e":"markdown","9563adb2":"markdown","c6559b07":"markdown","ae4d69e7":"markdown","1fe5133b":"markdown","fc4bcb23":"markdown","6edb7d4b":"markdown","23d0c9bc":"markdown","88b1aa8c":"markdown","2bb4e0af":"markdown","d6aac225":"markdown","a7eb9132":"markdown"},"source":{"fb7871b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","92f86300":"data = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\nprint(\"Data size : \"+str(data.shape))\ndisplay(data.head())\nworld_coordinates = pd.read_csv(\"..\/input\/world-coordinates\/world_coordinates.csv\")","d4cc1d56":"print(\"Columns : \")\nprint(data.columns.values)","85b60985":"### Sno and either one of the date field doesnt required for the analysis. so removing those.\ndata.drop(['Sno','Last Update'], axis = 1, inplace = True)\n# Rename the province\/State to State\ndata = data.rename(columns = {\"Province\/State\":\"State\"})\n# Convert Date into Date datatype\ndata.Date = pd.to_datetime(data.Date)","dc173284":"# Data is Updated each day and the counts of Confirmed, Deaths, Recovered added day by day with existing count. \nfinal_data = data[data['Date'] == max(data.Date)]\nfinal_data.shape","d56dd9aa":"country_sum = final_data.groupby(['Country','State'])['Confirmed','Deaths','Recovered'].sum().reset_index()\ncountry_sum","0dd77018":"ex_china = country_sum[country_sum['Country']!='Mainland China']\nex_china","35838c1f":"fig = go.Figure(data = [go.Pie(labels = ex_china.Country,values = ex_china.Confirmed)])\nfig.show()","865cbc60":"fig = go.Figure(data = [go.Pie(labels = ex_china.Country,values = ex_china.Deaths)])\nfig.show()","ba07414f":"fig = go.Figure(data = [go.Pie(labels = ex_china.Country,values = ex_china.Recovered)])\nfig.show()","c709ca18":"china = final_data[final_data['Country']=='Mainland China']\nchina","0c4cd256":"fig = go.Figure(data = [go.Pie(labels = china.State,values = china.Confirmed)])\nfig.show()","b9742014":"fig = go.Figure(data = [go.Pie(labels = china.State,values = china.Deaths)])\nfig.show()","11753a98":"fig = go.Figure(data = [go.Pie(labels = china.State,values = china.Recovered)])\nfig.show()","d3ec0efa":"fig = px.choropleth(country_sum, locations=\"Country\", \n                    locationmode='country names', color=\"Confirmed\", \n                    hover_name=\"Country\", range_color=[1,100], \n                    color_continuous_scale=\"bluyl\", \n                    labels={'Confirmed':'Confirmed Cases'},\n                    title='Confirmed Cases by Countries')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","6bda3b1c":"fig = px.choropleth(country_sum, locations=\"Country\", \n                    locationmode='country names', color=\"Deaths\", \n                    hover_name=\"Country\", range_color=[1,100], \n                    color_continuous_scale=\"purd\", \n                    labels={'Deaths':'Deaths Cases'},\n                    title='Death Cases by Countries')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","fa16ea46":"fig = px.choropleth(country_sum, locations=\"Country\", \n                    locationmode='country names', color=\"Recovered\", \n                    hover_name=\"Country\", range_color=[1,100], \n                    color_continuous_scale=\"greens\", \n                    labels={'Recoved':'Recovered Cases'},\n                    title='Recovered Cases by Countries')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","c0b4cb23":"time_data = data.groupby(['Date'])['Confirmed','Deaths','Recovered'].sum().reset_index()\ntime_data","2baa0979":"fig = px.line(time_data, x=\"Date\", y=\"Confirmed\")\nfig.show()","527d36e9":"fig = px.line(time_data, x=\"Date\", y=\"Deaths\")\nfig.update_traces(line_color='#FF3322')\nfig.show()","96851acc":"fig = px.line(time_data, x=\"Date\", y=\"Recovered\")\nfig.update_traces(line_color='#33FF22')\nfig.show()","19880895":"import plotly.graph_objects as go\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=time_data['Date'], y=time_data['Confirmed'],mode='lines+markers',name='Confirmed'))\nfig.add_trace(go.Scatter(x=time_data['Date'], y=time_data['Deaths'],mode='lines+markers',name='Deaths'))\nfig.add_trace(go.Scatter(x=time_data['Date'], y=time_data['Recovered'],mode='lines+markers', name='Recovered'))\nfig.update_layout(title='Corona Cases Trend',\n                   xaxis_title='Days',\n                   yaxis_title='Count')\nfig.show()","33f79db8":"## Trend of Recovred Cases","e7ee7332":"# Country-wise Distribution","8f8b8828":"# Cases Distribution except China","25d9f887":"![image.png](attachment:image.png)\n\n**This beautiful looking virus is destroying humen.**","c00f65ec":"### Hubei is the highest affected state in China","0d288beb":"# Time Series Visualizations","f4af8d0f":"### First two weeks Government struggled to solve the issue. Then Recovered cases count increased drastically.","96ac8f8e":"**Plz *Upvote*, If you like the content**","9563adb2":"# State wise Distribution in China","c6559b07":"## Trend of Death cases","ae4d69e7":"### Death cases country wise","1fe5133b":"### Recovered cases country wise","fc4bcb23":"**Plz *Upvote*, If you like the content**","6edb7d4b":"# Geo-Map Visualization","23d0c9bc":"### China is the most affected country","88b1aa8c":"# Basic Preprocessing","2bb4e0af":"## Trend of Confirmed cases","d6aac225":"### Confirmed cases in other countries except China","a7eb9132":"# Data Loading"}}