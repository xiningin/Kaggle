{"cell_type":{"cb52cfb2":"code","9ab14463":"code","a1eafac1":"code","6f511de8":"code","84f983c6":"code","80d6dac5":"code","e6e906e4":"code","a7bb5565":"code","ea6ffcd2":"code","7a642fb1":"code","665ee5f7":"code","97850836":"code","29a42858":"code","9cde607b":"code","f320ed4c":"code","a428984c":"code","fd686eb6":"markdown","9f53a371":"markdown","c6265851":"markdown","93f17d57":"markdown","74c88dd3":"markdown","0cdb11d0":"markdown","0c5b8ad1":"markdown","027bcdd9":"markdown","cdea3434":"markdown","fae01dfe":"markdown","1ec43852":"markdown","510fe9ab":"markdown"},"source":{"cb52cfb2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import tree\nimport graphviz\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import LinearSVR\nfrom sklearn.metrics import r2_score, mean_squared_error","9ab14463":"train_data_path = '..\/input\/house-prices-advanced-regression-techniques\/train.csv'\ntest_data_path = '..\/input\/house-prices-advanced-regression-techniques\/test.csv'\n\ntrain_data = pd.read_csv(train_data_path, index_col='Id')\ntest_data = pd.read_csv(test_data_path, index_col='Id')\n\ndisplay(train_data, test_data)","a1eafac1":"# Data training dan test digabung terlebih dahulu agar pengisian nilai null dan\n# proses pengubahan data kategoris dapat dilakukan secara seragam pada kedua dataset \nall_data = pd.concat([train_data, test_data])\ndisplay(all_data, all_data.describe())","6f511de8":"# Menemukan kolom-kolom dengan missing data\ntotal_missing = all_data.isnull().sum()\ntotal_missing = total_missing.drop(total_missing[total_missing == 0].index)\npercent_missing = (total_missing \/ len(all_data) * 100)\ncolumns_with_missing_values = pd.DataFrame({'total missing': total_missing, 'percent missing': percent_missing}).sort_values('percent missing', ascending=False)\n\ndisplay(columns_with_missing_values)","84f983c6":"numerical_columns = all_data.select_dtypes('number').columns\ncategorical_columns = all_data.select_dtypes('object').columns\n\n# Data null pada kolom numerikal diisi dengan median dan bukan mean karena \n# pada beberapa kolom terdapat range yang jauh antara min dan maxnya\nall_data[numerical_columns] = all_data[numerical_columns].fillna(all_data[numerical_columns].median())\n\n# Data null pada kolom kategoris diisi dengan 'None' untuk menandakan bahwa pada\n# rumah tersebut tidak terdapat feature yang dimaksud\nall_data[categorical_columns] = all_data[categorical_columns].fillna(np.nan).replace([np.nan], ['None'])\n\ndisplay(all_data, 'Number of missing data: %d' % all_data.isnull().sum().sum())","80d6dac5":"# Mengubah data kategoris menggunakan metode one hot encoding\nall_data = pd.get_dummies(all_data)\n\ndisplay(all_data)","e6e906e4":"train_data = all_data.copy()[:len(train_data)]\ntest_data = all_data.copy()[len(train_data):]\ntest_data.drop(['SalePrice'], axis=1, inplace=True)\n\ndisplay(train_data, test_data)","a7bb5565":"# Mencari 10 feature yang paling mempengaruhi nilai dari SalePrice\nk = 10\ncorrmat = train_data.corr()\ncols = corrmat.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train_data[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","ea6ffcd2":"# Membuat scatter plot dari feature yang paling berpengaruh untuk mendapatkan gambaran\n# dari hubungan (linear atau non-linear) feature tersebut dengan SalePrice\nsns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', '1stFlrSF', 'FullBath', 'BsmtQual_Ex', 'TotRmsAbvGrd']\nsns.pairplot(train_data[cols], height = 2.5)\nplt.show();","7a642fb1":"X = train_data.drop('SalePrice', axis=1)\ny = train_data.dropna(subset=['SalePrice'], axis=0).SalePrice\n\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=0)","665ee5f7":"linear_regressor = LinearRegression()\nlinear_regressor.fit(X_train, y_train)\ny_pred = linear_regressor.predict(X_valid)\nscore = r2_score(y_valid, y_pred)\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\ndisplay(score, rmse)","97850836":"svr = LinearSVR(random_state=0)\nsvr.fit(X_train, y_train)\ny_pred = svr.predict(X_valid)\nscore = r2_score(y_valid, y_pred)\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\ndisplay(score, rmse)","29a42858":"dtr = DecisionTreeRegressor(random_state=0, max_depth=5)\ndtr.fit(X_train, y_train)\ny_pred = dtr.predict(X_valid)\nscore = r2_score(y_valid, y_pred)\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\ndisplay(score, rmse)","9cde607b":"knn = KNeighborsRegressor()\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_valid)\nscore = r2_score(y_valid, y_pred)\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\ndisplay(score, rmse)","f320ed4c":"dot_data = tree.export_graphviz(dtr, feature_names=list(X), class_names=sorted(y.unique()), filled=True)\ngraphviz.Source(dot_data)","a428984c":"predictions = dtr.predict(test_data)\nsubmission = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\nsubmission.SalePrice = predictions\nsubmission.to_csv('submission.csv', index=False)\ndisplay(submission)","fd686eb6":"## Encode Categorical Data","9f53a371":"# Train Model","c6265851":"## Exploratory Analysis","93f17d57":"## Split Training Data to Training Set and Validation Set","74c88dd3":"# Load Data","0cdb11d0":"# Import Libraries","0c5b8ad1":"# Predict Data","027bcdd9":"Berdasarkan percobaan dari keempat algoritma tersebut, dapat dilihat bahwa algoritma decision tree lebih tepat untuk digunakan untuk data tersebut (metric yang digunakan adalah R\u00b2 dimana score yang paling mendekati 1 adalah yang paling baik, dan RMSE dimana nilai yang paling mendekati 0 adalah yang paling baik).","cdea3434":"# Data Preprocessing","fae01dfe":"## Re-split Data to Training Data and Test Data","1ec43852":"Berdasarkan correlation matrix tersebut dapat diketahui bahwa features yang paling berpengaruh pada nilai SalePrice adalah OverallQual, GrLivArea, GarageCars, GarageArea, TotalBsmtSF, 1stFlrSF, FullBath, BsmtQual_Ex, dan TotRmsAbvGrd","510fe9ab":"## Handle Missing Data"}}