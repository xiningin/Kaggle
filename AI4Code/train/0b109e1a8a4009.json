{"cell_type":{"7de832f5":"code","60b7e682":"code","375b7fe2":"code","ff1660ad":"code","04c99a00":"code","0f17fa01":"code","cdb974b4":"code","0a869054":"code","24e2c338":"code","f01e7b34":"code","877805b9":"code","e4b2f998":"code","cdec724b":"code","8af09859":"code","38d5f30b":"code","71bf05a8":"code","eaf977c4":"code","fe4844d6":"code","df9f0306":"code","037c40a4":"code","4a4bfc39":"code","ff3ec065":"code","202169db":"code","7e2b7e6e":"code","5467144e":"code","4ae52071":"code","21145ee9":"code","e38532ac":"code","3b85dceb":"code","b9db2752":"code","20b31e91":"code","7d3a0719":"code","27076130":"code","93d04c92":"code","cc055230":"code","56c79b75":"code","95e15082":"code","5e4b72ae":"code","b5513302":"code","47832d62":"code","7bdce151":"code","274c3d16":"code","637cc726":"code","81615515":"code","c127badd":"code","187ba88b":"code","1ebff4dc":"code","3699041e":"code","ac260feb":"code","8133d5a5":"code","3e8bccbb":"code","14526829":"code","71fc4fd2":"code","aac2ff1f":"code","7ad0b5fe":"code","bd798ca8":"code","e4d67e20":"code","46b26311":"code","08ab8d46":"code","cf1400ab":"code","dee9969f":"code","fbfebf86":"code","8979bfbf":"code","7b541586":"code","53dda59b":"code","3332a8ca":"code","ebb806ef":"code","1d5ed4f6":"code","4c0e639b":"code","4f7cb075":"code","287cacd5":"code","2312c68b":"code","9127c588":"code","3d1bb1b7":"code","76562fee":"code","f4319541":"code","b699bf12":"code","e897eaaf":"code","c53b0d67":"code","acd7c081":"markdown","3f41e585":"markdown","3bcaa640":"markdown","7c6b4544":"markdown","a27a14f8":"markdown","24cfc9a7":"markdown","7319225f":"markdown","a4f9663c":"markdown","dfb06a85":"markdown","e7fe0b67":"markdown","c51a2fd0":"markdown","adaa4815":"markdown","d3acc735":"markdown","1ac76e45":"markdown","dc9944e7":"markdown","1520ac78":"markdown","0c258166":"markdown","cbd6a921":"markdown","48f6afab":"markdown","7102d49f":"markdown","71483dab":"markdown","f993a59d":"markdown","2e939a06":"markdown","29c84554":"markdown","f706faf7":"markdown","6c8a1a19":"markdown","68ab30ff":"markdown","1e1c6216":"markdown","1c979e4d":"markdown","0d35a15e":"markdown","1e1e3d64":"markdown","f23fb9ad":"markdown","d1e26d00":"markdown","27f90fa9":"markdown","6c5b5de8":"markdown","ce0fe913":"markdown","a1c8934e":"markdown","f337fdb6":"markdown","05b44f00":"markdown","d1b58a2f":"markdown","e94e7b0a":"markdown","e0cf5c56":"markdown","6560a02a":"markdown","acee53ac":"markdown","629d3ff9":"markdown","47e4a3d8":"markdown","a53b9a2e":"markdown","8c851d83":"markdown","f6edc688":"markdown","7731ef80":"markdown","ad554cca":"markdown","1414afe5":"markdown","3e7848b8":"markdown","1306b4ab":"markdown","561a15e5":"markdown"},"source":{"7de832f5":"import pandas as pd\nimport pandas_profiling\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline\nfrom sklearn.feature_selection import f_classif, mutual_info_classif\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\nfrom sklearn.model_selection import cross_validate\nfrom mlxtend.feature_selection import ExhaustiveFeatureSelector as EFS\nfrom math import log as log\nimport os\n\npd.options.mode.chained_assignment = None\n\n# \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0442\u0430\u043a \u043a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 kaggle\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nPATH_to_file = '\/kaggle\/input\/sf-dst-scoring\/'\n\n# # # \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0442\u0430\u043a \u043a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435\n# from importlib import reload\n# print(os.listdir('.\/data'))\n# PATH_to_file = '.\/data\/'","60b7e682":"import utils_module28072020 as utils","375b7fe2":"RANDOM_SEED = 42\n!pip freeze > requirements.txt\nCURRENT_DATE = pd.to_datetime('11\/08\/2020')","ff1660ad":"df_train = pd.read_csv(PATH_to_file+'train.csv')\ndf_test = pd.read_csv(PATH_to_file+'test.csv')\npd.set_option('display.max_columns', None)\nprint('\u0420\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430: ', df_train.shape)\ndisplay(df_train.head(2))\nprint('\u0420\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430: ', df_test.shape)\ndisplay(df_test.head(2))","04c99a00":"# \u0412\u0410\u0416\u041d\u041e! \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\ndf_train['Train'] = 1 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_test['Train'] = 0 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\n\ndf = df_train.append(df_test, sort=False).reset_index(drop=True) # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c\n#!\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043b\u044f \u0434\u0430\u0442\u0430\u043b\u0438\u043a\u043e\u0432","0f17fa01":"pandas_profiling.ProfileReport(df[df['Train']==1])","cdb974b4":"# \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u0441\u0432\u043e\u0434\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443 df \u0431\u0435\u0437 \u0442\u0435\u0441\u0442\u0430 \u0438 \u0442\u0435\u0441\u0442\u0430 kaggle\nutils.describe_without_plots_all_collumns(df[df['Train']==1], short=True)","0a869054":"# \u0432\u043d\u0435\u0441\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0440\u0435\u0437\u044e\u043c\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438 \n# \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u044f\u0434 (1)\ntime_cols = ['app_date']\n# \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 (default \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a) (5+1 = 6)\nbin_cols = ['sex', 'car', 'car_type', 'good_work', 'foreign_passport']\n# \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 (Train \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0441\u0430\u043c\u0438 \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438) (3+1=4)\ncat_cols = ['education', 'region_rating', 'home_address', 'work_address', 'sna', 'first_time']\n# \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, client_id \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 (8)\nnum_cols = ['age','decline_app_cnt','score_bki','bki_request_cnt','income','days']\n# client_id \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043a\u0438","24e2c338":"utils.four_plot_with_log2('age', df[df['Train']==1])","f01e7b34":"utils.describe_without_plots('age', df[df['Train']==1].age)","877805b9":"df['age'] = np.log(df['age'] + 1)","e4b2f998":"utils.four_plot_with_log2('decline_app_cnt', df[df['Train']==1])","cdec724b":"# \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b - \u0433\u0440\u0430\u043d\u0438\u0446\u044b (\u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b \u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c) \u0438 \u0438\u0445 \u043a\u043e\u043b-\u0432\u043e\nutils.borders_of_outliers('decline_app_cnt',df[df['Train']==1], log = True)","8af09859":"df['decline_app_cnt'] = np.log(df['decline_app_cnt'] + 1)","38d5f30b":"utils.four_plot_with_log2('bki_request_cnt', df[(df['Train']==1)])","71bf05a8":"# \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u043d\u0438\u0446\nutils.borders_of_outliers('bki_request_cnt',df[df['Train']==1], log = True)","eaf977c4":"df['bki_request_cnt'] = np.log(df['bki_request_cnt'] + 1)","fe4844d6":"utils.four_plot_with_log2('income', df[df['Train']==1])","df9f0306":"utils.borders_of_outliers('income',df[df['Train']==1], log = True)","037c40a4":"df['income'] = np.log(df['income'] + 1)","4a4bfc39":"utils.describe_with_hist('score_bki', df[df['Train']==1].score_bki)","ff3ec065":"utils.borders_of_outliers('score_bki',df[df['Train']==1], log = False)","202169db":"utils.four_plot_with_log2('sna', df[df['Train']==1])","7e2b7e6e":"utils.describe_without_plots('sna', df[df['Train']==1].sna)","5467144e":"utils.four_plot_with_log2('first_time', df[df['Train']==1])","4ae52071":"utils.describe_without_plots('first_time', df[df['Train']==1].sna)","21145ee9":"utils.four_plot_with_log2('region_rating', df[df['Train']==1])","e38532ac":"utils.describe_without_plots('region_rating', df[df['Train']==1].region_rating)","3b85dceb":"utils.borders_of_outliers('region_rating',df[df['Train']==1], log = False)","b9db2752":"df['education'].value_counts().plot.bar()","20b31e91":"# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 education\n# \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 education 307 (0.4%) \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \n# \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0441\u0430\u043c\u044b\u043c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \ndf['education'] = df['education'].fillna('SCH')","7d3a0719":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0444\u043e\u0440\u043c\u0430\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\ndf.app_date = pd.to_datetime(df.app_date, format='%d%b%Y')","27076130":"# \u0412\u044b\u044f\u0441\u043d\u044f\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u043e \u0438 \u043a\u043e\u043d\u0435\u0446 \u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u043d\u0430\u0448\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 - \u044d\u0442\u043e 1 \u044f\u043d\u0432\u0430\u0440\u044f \u0438 30 \u0430\u043f\u0440\u0435\u043b\u044f 2014 \u0433\u043e\u0434\u0430\nstart = df.app_date.min()\nend = df.app_date.max()\nstart,end","93d04c92":"# \u0412\u0432\u043e\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f\ndf['days'] = (df.app_date - start).dt.days.astype('int')","cc055230":"# \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u0444\u043e\u043b\u0442\u043e\u0432 \u043f\u043e \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u043c\u0443 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u043c\u0435\u0441\u044f\u0446\u0435\u043c \u043f\u043e\u0434\u0430\u0447\u0438 \u0437\u0430\u044f\u0432\u043a\u0438\nplt.style.use('seaborn-paper')\nplt.subplots(figsize=(12, 4))\ncolor_text = plt.get_cmap('PuBu')(0.85)\nsns.barplot(data=df[df['Train']==1], x=df.loc[df['Train']==1,'app_date'].dt.month, y='default', palette=\"PuBu\");","56c79b75":"# \u0412\u044b\u044f\u0441\u043d\u044f\u0435\u043c, \u0447\u0442\u043e \u0432 \u0431\u0430\u043d\u043a\u0435 \u0432\u0435\u043b\u0430\u0441\u044c \u0441\u043a\u0432\u043e\u0437\u043d\u0430\u044f \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0434\u043d\u044f \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f\nsns.scatterplot(x='client_id',y='days',data=df)","95e15082":"# \u041d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0433\u043b\u0430\u0434\u043a\u043e\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0441 90 \u0434\u043d\u044f \u0431\u043e\u0440\u044c\u0431\u0430 \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u0430\u043c\u0438 \u0441\u0442\u0430\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439\nutils.plot_filter_df_kde(['\u041d\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439','\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439'], 'default', 'days', df[df['Train']==1], 1.1)","5e4b72ae":"utils.simple_heatmap('\u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u043d\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445',df[df['Train']==1], num_cols+['default'], 1.1, 1, 9)","b5513302":"temp_df = df[df['Train']==1]\nimp_num = pd.Series(f_classif(temp_df[num_cols], temp_df['default'])[0], index = num_cols)\nimp_num.sort_values(inplace = True)\nimp_num.plot(kind = 'barh', title='\u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e ANOVA F test')","47832d62":"label_encoder = LabelEncoder()\ndf['education_l'] = label_encoder.fit_transform(df['education'])\n\n# \u043f\u0430\u0440\u0430\u043b\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0438\u0445 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442\n# \u0434\u043b\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c LabelEncoder\nlabel_encoder = LabelEncoder()\nfor column in bin_cols:\n    df[column] = label_encoder.fit_transform(df[column])\n    \n# \u0442\u0443\u0442 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u0442\u0430\u043b\u0438\u043a\u0438, \u043d\u043e \u043c\u044b \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043b\u0438 \u043a\u0430\u043a \u044d\u0442\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c,\n# \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0434\u0430\u043b\u0435\u0435 \u043f\u043e \u044d\u0442\u0438\u043c \u043c\u0435\u0442\u043a\u0430\u043c \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0435 \u0444\u0438\u0447\u0438 \u043f\u043e get_dummies\n\nall_cat_and_bin_cols = cat_cols+bin_cols\nall_cat_and_bin_cols.remove('education')\nall_cat_and_bin_cols.append('education_l')\nprint(all_cat_and_bin_cols)\n\ntemp_df = df[df['Train']==1]\nimp_cat = pd.Series(mutual_info_classif(temp_df[all_cat_and_bin_cols], temp_df['default'], discrete_features =True), index = all_cat_and_bin_cols)\nimp_cat.sort_values(inplace = True)\nimp_cat.plot(kind = 'barh', title = '\u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0438\u043d. \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440. \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e Mutual information test')","7bdce151":"# \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 OneHotLabels \u0447\u0435\u0440\u0435\u0437 get_dummies\ndf=pd.get_dummies(df, prefix=cat_cols, columns=cat_cols)","274c3d16":"# \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u043d\u0430 \u0438 \u0442\u0435\u0441\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0434\u0430\u0442\u0430\u043b\u0438\u043a\u043e\u0432\nutils.StandardScaler_df_and_filna_0(df[df['Train']==1], num_cols)\n\nutils.StandardScaler_df_and_filna_0(df[df['Train']==0], num_cols)","637cc726":"display(df.head(2))","81615515":"df.drop(['app_date', 'education_l'], axis=1, inplace=True)","c127badd":"train_data = df.query('Train == 1').drop(['Train', 'client_id'], axis=1)\ntest_data = df.query('Train == 0').drop(['Train', 'client_id'], axis=1)\n\ny = train_data.default.values            # \u043d\u0430\u0448 \u0442\u0430\u0440\u0433\u0435\u0442\nX = train_data.drop(['default'], axis=1)","187ba88b":"# \u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435 train_test_split \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u0438\u0432\u043a\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n# \u0432\u044b\u0434\u0435\u043b\u0438\u043c 20% \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e (\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 test_size)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=RANDOM_SEED)","1ebff4dc":"# \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\ntest_data.shape, train_data.shape, X.shape, X_train.shape, X_test.shape","3699041e":"# \u043f\u0435\u0440\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0435\nmodel = LogisticRegression(random_state=RANDOM_SEED)\n\nmodel.fit(X_train, y_train)\n\ny_pred_prob = model.predict_proba(X_test)[:,1]\ny_pred = model.predict(X_test)","ac260feb":"# \u0432 \u043f\u0435\u0440\u0432\u044b\u0439 \u0440\u0430\u0437 \u0438\u043d\u0438\u0446\u0438\u0438\u0440\u0443\u0435\u043c \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u0441\u043a\u043e\u0440\u043e\u043c\nutils.last_pred = np.zeros((3,len(y_test)))","8133d5a5":"utils.test_last_pred(y_test, y_pred, y_pred_prob) if (utils.last_pred[0].max() == 0) else 0\nutils.all_metrics(y_test, y_pred, y_pred_prob)","3e8bccbb":"utils.confusion_matrix_f(['\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439','\u041d\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439'], y_test, y_pred, 1.2, normalize=False)","14526829":"utils.ROC_curve_with_area(y_test, y_pred_prob, 1.1)","71fc4fd2":"utils.PR_curve_with_area(y_test, y_pred, 1.1)","aac2ff1f":"temp_vec = cross_validate(model, X_test, y_test, cv=10, scoring='roc_auc', return_train_score=True)\nutils.vis_cross_val_score('ROC-AUC', temp_vec, 0.744846, 1.1)","7ad0b5fe":"# \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c GridSearch \u043d\u0430 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b-\u0432\u0435 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439 max_iter=50 \u0438 \u0441 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0434\u0435\u043b\u044c\u0442\u043e\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430 tol1e-3\n# \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u0431\u043b\u0438\u0436\u0435\u043d\u0438\u0438\nmodel = LogisticRegression(random_state=RANDOM_SEED)\n\niter_ = 50\nepsilon_stop = 1e-3\n\nparam_grid = [\n    {'penalty': ['l1'], \n     'solver': ['liblinear', 'lbfgs'], \n     'class_weight':['none', 'balanced'], \n     'multi_class': ['auto','ovr'], \n     'max_iter':[iter_],\n     'tol':[epsilon_stop]},\n    {'penalty': ['l2'], \n     'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga'], \n     'class_weight':['none', 'balanced'], \n     'multi_class': ['auto','ovr'], \n     'max_iter':[iter_],\n     'tol':[epsilon_stop]},\n    {'penalty': ['none'], \n     'solver': ['newton-cg', 'lbfgs', 'sag', 'saga'], \n     'class_weight':['none', 'balanced'], \n     'multi_class': ['auto','ovr'], \n     'max_iter':[iter_],\n     'tol':[epsilon_stop]},\n]\ngridsearch = GridSearchCV(model, param_grid, scoring='f1', n_jobs=-1, cv=5)\ngridsearch.fit(X_train, y_train)\nmodel = gridsearch.best_estimator_\n##\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\nbest_parameters = model.get_params()\nfor param_name in sorted(best_parameters.keys()):\n        print('\\t%s: %r' % (param_name, best_parameters[param_name]))\n    ##\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043c\u0435\u0442\u0440\u0438\u043a\u0438\npreds = model.predict(X_test)\nprint('Accuracy: %.4f' % accuracy_score(y_test, preds))\nprint('Precision: %.4f' % precision_score(y_test, preds))\nprint('Recall: %.4f' % recall_score(y_test, preds))\nprint('F1: %.4f' % f1_score(y_test, preds))","bd798ca8":"# \u0432\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438\nmodel = LogisticRegression(random_state=RANDOM_SEED, \n                           C=1, \n                           class_weight= 'balanced', \n                           dual= False, \n                           fit_intercept= True, \n                           intercept_scaling= 1, \n                           l1_ratio= None, \n                           multi_class= 'auto', \n                           n_jobs= None, \n                           penalty= 'l2', \n                           solver = 'sag', \n                           verbose= 0, \n                           warm_start= False)\n\nmodel.fit(X_train, y_train)\n\ny_pred_prob = model.predict_proba(X_test)[:,1]\ny_pred = model.predict(X_test)","e4d67e20":"utils.test_last_pred(y_test, y_pred, y_pred_prob) if (utils.last_pred[0].max() == 0) else 0\nutils.all_metrics(y_test, y_pred, y_pred_prob)","46b26311":"utils.confusion_matrix_f(['\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439','\u041d\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439'], y_test, y_pred, 1.2, normalize=False)","08ab8d46":"utils.ROC_curve_with_area(y_test, y_pred_prob, 1.1)","cf1400ab":"utils.PR_curve_with_area(y_test, y_pred, 1.1)","dee9969f":"temp_vec = cross_validate(model, X_test, y_test, cv=10, scoring='roc_auc', return_train_score=True)\nutils.vis_cross_val_score('ROC-AUC', temp_vec, 0.744223, 1.1)","fbfebf86":"# \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0430 l1 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u043f\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u043c \u0438\u043b\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043d\u0438\u0437\u043a\u0438\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438,\n# \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043d\u0440\u0430\u0432\u044f\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u0438 (\u0432 \u043d\u0438\u0445 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0438\u043b\u0438 \u043d\u0435\u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0444\u043e\u0440\u043c\u0430\u0442)\n# \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u043e \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u043e\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u0438 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\nmodel = LogisticRegression(random_state=RANDOM_SEED, \n                           C=1, \n                           class_weight= 'balanced', \n                           dual= False, \n                           fit_intercept= True, \n                           intercept_scaling= 1, \n                           l1_ratio= None, \n                           multi_class= 'auto', \n                           n_jobs= None, \n                           penalty= 'l1', \n                           solver = 'liblinear', \n                           verbose= 0, \n                           warm_start= False)\n\nmodel.fit(X_train, y_train)\n\ndisplay(utils.model_coef(X_train.columns, model.coef_[0]))","8979bfbf":"# \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0441\u0435\u0432\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ndrop_list_cols = ['work_address_1', 'home_address_1', 'sna_3', 'region_rating_60', 'first_time_3', 'education_PGR']","7b541586":"#\u0437\u0430\u043d\u043e\u0432\u043e \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u0435\u0437 \u044d\u0442\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_data = df.query('Train == 1').drop(['Train', 'client_id']+drop_list_cols, axis=1)\ntest_data = df.query('Train == 0').drop(['Train', 'client_id']+drop_list_cols, axis=1)\n\ny = train_data.default.values            # \u043d\u0430\u0448 \u0442\u0430\u0440\u0433\u0435\u0442\nX = train_data.drop(['default'], axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=RANDOM_SEED)","53dda59b":"# \u0432\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438\nmodel = LogisticRegression(random_state=RANDOM_SEED, \n                           C=1, \n                           class_weight= 'balanced', \n                           dual= False, \n                           fit_intercept= True, \n                           intercept_scaling= 1, \n                           l1_ratio= None, \n                           multi_class= 'auto', \n                           n_jobs= None, \n                           penalty= 'l2', \n                           solver = 'sag', \n                           verbose= 0, \n                           warm_start= False)\n\nmodel.fit(X_train, y_train)\n\ny_pred_prob = model.predict_proba(X_test)[:,1]\ny_pred = model.predict(X_test)\n\nutils.test_last_pred(y_test, y_pred, y_pred_prob) if (utils.last_pred[0].max() == 0) else 0\nutils.all_metrics(y_test, y_pred, y_pred_prob)","3332a8ca":"temp_vec = cross_validate(model, X_test, y_test, cv=10, scoring='roc_auc', return_train_score=True)\nutils.vis_cross_val_score('ROC-AUC', temp_vec, 0.744262, 1.1)","ebb806ef":"# \u0431\u043b\u043e\u043a \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u043b\u0433\u043e, \u043d\u0438\u0436\u0435 \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \n\n# model = LogisticRegression(multi_class = 'ovr', class_weight='balanced', solver='liblinear', random_state=RANDOM_SEED)\n\n# param_grid = [\n#     {'penalty': ['l1'], 'C':[0.1, 1, 10], 'max_iter':[1000],'tol':[1e-5]},\n#     {'penalty': ['l2'], 'C':[0.1, 1, 10], 'max_iter':[1000],'tol':[1e-5]},\n#     {'penalty': ['none'], 'max_iter':[1000],'tol':[1e-5]},\n# ]\n# gridsearch = GridSearchCV(model, param_grid, scoring='f1', n_jobs=-1, cv=5)\n# gridsearch.fit(X_train, y_train)\n# model = gridsearch.best_estimator_\n# ##\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n# best_parameters = model.get_params()\n# for param_name in sorted(best_parameters.keys()):\n#         print('\\t%s: %r' % (param_name, best_parameters[param_name]))\n#     ##\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043c\u0435\u0442\u0440\u0438\u043a\u0438\n# preds = model.predict(X_test)\n# print('Accuracy: %.4f' % accuracy_score(y_test, preds))\n# print('Precision: %.4f' % precision_score(y_test, preds))\n# print('Recall: %.4f' % recall_score(y_test, preds))\n# print('F1: %.4f' % f1_score(y_test, preds))","1d5ed4f6":"# \u0442\u0440\u0435\u0442\u044c\u044f \u043c\u043e\u0434\u0435\u043b\u044c\nmodel = LogisticRegression(C=7, \n                           penalty='l2', \n                           multi_class = 'ovr', \n                           class_weight='balanced', \n                           solver='liblinear', \n                           random_state=RANDOM_SEED,\n                           max_iter = 1000)\n\nmodel.fit(X_train, y_train)\n\ny_pred_prob = model.predict_proba(X_test)[:,1]\ny_pred = model.predict(X_test)","4c0e639b":"utils.test_last_pred(y_test, y_pred, y_pred_prob) if (utils.last_pred[0].max() == 0) else 0\nutils.all_metrics(y_test, y_pred, y_pred_prob)","4f7cb075":"utils.confusion_matrix_f(['\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439','\u041d\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439'], y_test, y_pred, 1.2, normalize=False)","287cacd5":"utils.ROC_curve_with_area(y_test, y_pred_prob, 1.1)","2312c68b":"utils.PR_curve_with_area(y_test, y_pred, 1.1)","9127c588":"temp_vec = cross_validate(model, X_test, y_test, cv=10, scoring='roc_auc', return_train_score=True)\nutils.vis_cross_val_score('ROC-AUC', temp_vec, 0.744262, 1.1)","3d1bb1b7":"# \u043e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u0432\u0435\u0441\u0442\u0438 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0434\u0430\u0436\u0435 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0442\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a\u043e\u0434\n\n# model = LogisticRegression(C=7, penalty='l2', multi_class = 'ovr', class_weight='balanced', solver='liblinear', random_state=RANDOM_SEED)\n\n# efs1 = EFS(model, \n#            min_features=1,\n#            max_features=10,\n#            scoring='roc_auc',\n#            print_progress=True,\n#            cv=5)\n\n# efs1 = efs1.fit(X_train, y_train)\n\n# print('Best roc_auc score: %.2f' % efs1.best_score_)\n# print('Best subset (indices):', efs1.best_idx_)\n# print('Best subset (corresponding names):', efs1.best_feature_names_)","76562fee":"train_data = df.query('Train == 1').drop(['Train', 'client_id']+drop_list_cols, axis=1)\ntest_data = df.query('Train == 0').drop(['Train', 'client_id']+drop_list_cols, axis=1)","f4319541":"X_train=train_data.drop(['default'], axis=1)\ny_train = train_data.default.values\nX_test = test_data.drop(['default'], axis=1)","b699bf12":"# \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\ntest_data.shape, train_data.shape, X_train.shape, y_train.shape, X_test.shape","e897eaaf":"model = LogisticRegression(C=7, \n                           penalty='l2', \n                           multi_class = 'ovr', \n                           class_weight='balanced', \n                           solver='liblinear', \n                           random_state=RANDOM_SEED,\n                           max_iter=1000)\n\nmodel.fit(X_train, y_train)","c53b0d67":"y_pred_prob = model.predict_proba(X_test)[:,1]\n\n\nsubmit = pd.DataFrame(df_test.client_id)\nsubmit['default']=y_pred_prob\nsubmit.to_csv('submission.csv', index=False)","acd7c081":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438, \u043e\u0447\u0435\u043d\u044c \u043f\u043b\u043e\u0445\u0430\u044f, \u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043c\u0435\u0442\u0440\u0438\u043a\u0430 ROC-AUC \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0432\u044b\u0441\u043e\u043a\u0430\u044f (=0.745).  \n\u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e:\n- \u0418\u0437 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u043e\u0448\u0438\u0431\u043e\u043a \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043c\u044b \u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u0443\u0433\u0430\u0434\u044b\u0432\u0430\u0435\u043c \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 (38 \u0438\u0437 1789). \u041e\u0431 \u044d\u0442\u043e\u043c \u0442\u0430\u043a\u0436\u0435 \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0430 \u043f\u043e\u043b\u043d\u043e\u0442\u0430 recall = 0.020799, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0432\u0441\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u043f\u043e\u043f\u0430\u043b\u0438 \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u043e\u0434\u0430, \u0430 \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u043f\u043b\u043e\u0445\u043e \u0434\u043b\u044f \u0431\u0430\u043d\u043a\u0430, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u0440\u0435\u0434\u0438\u0442\u044b \u043b\u044e\u0434\u044f\u043c \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0445 \u043d\u0435 \u0441\u043c\u043e\u0433\u0443\u0442 \u0432\u0435\u0440\u043d\u0443\u0442\u044c - \u0440\u0438\u0441\u043a \u043f\u043e\u0442\u0435\u0440\u044f\u0442\u044c \u0432\u0441\u0435 \u0434\u0435\u043d\u044c\u0433\u0438. \n- \u041d\u043e \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u043e\u0434 ROC \u043a\u0440\u0438\u0432\u043e\u0439 \u043e\u043a\u0430\u0437\u0430\u043b\u0430\u0441\u044c \u043d\u0435 \u0442\u0430\u043a\u043e\u0439 \u0443\u0436 \u043f\u043b\u043e\u0445\u043e\u0439. \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u044d\u0442\u0430 \u043a\u0440\u0438\u0432\u0430\u044f \u043f\u043b\u043e\u0445\u043e \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043d\u0430 \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 Precision-Recall \u043a\u0440\u0438\u0432\u0443\u044e \u0438 \u0443\u0432\u0438\u0434\u0435\u043b\u0438 \u0447\u0442\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0448\u0435\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0436\u0435\u043b\u0430\u0442\u044c \u043b\u0443\u0447\u0448\u0435\u0433\u043e.  \n\n\u041a\u0440\u043e\u0441\u0441 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044e \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0430 \u0442\u0435\u0441\u0442\u0435 0.014 \u0438 \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0430 \u043a\u0440\u0430\u0439\u043d\u0438\u0445 \u0444\u043e\u043b\u0434\u0430\u0445, \u0447\u0435\u043c \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0438\u0445. \u0412 \u0430\u043d\u0430\u043b\u0438\u0437\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 data \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043b\u0430\u0441\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0430 \u043e \u0442\u043e\u043c \u0447\u0442\u043e \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0432 \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0435 \u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u0432 \u0431\u0430\u043d\u043a\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043b\u0430\u0441\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0430\u043a\u0446\u0438\u044f \u0438 \u043f\u043e\u0440\u043e\u0433 \u0432\u044b\u0434\u0430\u0447\u0438 \u043a\u0440\u0435\u0434\u0438\u0442\u0430 \u0441\u043d\u0438\u0436\u0430\u043b\u0441\u044f. \u041d\u043e \u043c\u044b \u0432 \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441\u0442\u0440\u0435\u043c\u0438\u043b\u0438\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u043e\u0434\u0430 (\u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u043f\u043e\u0442\u0435\u0440\u0438 \u0431\u0430\u043d\u043a\u0430) \u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 (f1, PRC_AUC) \u043f\u0440\u0438 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438, \u0430 \u043d\u0435 \u0433\u043d\u0430\u043b\u0438\u0441\u044c \u0437\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435.","3f41e585":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u0432\u043b\u0438\u044f\u043d\u0438\u0435 score_bki \u0441\u0430\u043c\u043e\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0435, \u0441\u043b\u0435\u0434\u043e\u043c \u0438\u0434\u0443\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0440\u0435\u0433\u0438\u043e\u043d\u0430, \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u043b-\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u043e\u0432.  \n\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435:\n- work_address_1\n- home_address_1\n- sna_3\n- region_rating_60\n- first_time_3\n- education_PGR","3bcaa640":"### Precision-Recall \u043a\u0440\u0438\u0432\u0430\u044f","7c6b4544":"## 3. \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445","a27a14f8":"### **\u0418\u0442\u043e\u0433\u043e\u0432\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0421\u043e\u043a\u043e\u043b\u043e\u0432\u0430 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u0430**  \n### \u043f\u043e \u041f\u0440\u043e\u0435\u043a\u0442\u0443 3. \u041a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u00ab\u041d\u0435\u0442\u00bb \n####  \u042e\u043d\u0438\u0442 4. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f. \u0427\u0430\u0441\u0442\u044c I (\u044d\u0442\u0430 \u0432\u0435\u0440\u0441\u0438\u044f \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430 11.07.2020, \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u043d\u0430\u0434 \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438 \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u043c\u0435\u043d\u0442\u043e\u0440\u043e\u0432 @adorozhko \u0438 @itslek)\n---\n\n## 1. \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","24cfc9a7":"### \u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f","7319225f":"### \u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","a4f9663c":"***\u0420\u0435\u0437\u044e\u043c\u0435 - decline_app_cnt:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 - \u0432\u0437\u044f\u043b\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c, \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0434\u0430\u0436\u0435 \u043f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0443 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.  ","dfb06a85":"***\u0420\u0435\u0437\u044e\u043c\u0435 - score_bki:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435. \u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435 \u043c\u043d\u043e\u0433\u043e, \u043d\u0435 \u0441\u0442\u0430\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c","e7fe0b67":"### \u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e ANOVA F test","c51a2fd0":"### 2. decline_app_cnt","adaa4815":"### 3. bki_request_cnt","d3acc735":"### \u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u0430\u044f \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0432\u044b\u0445 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a","1ac76e45":"### 6.sna","dc9944e7":"***\u0420\u0435\u0437\u044e\u043c\u0435 - bki_request_cnt:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 - \u0432\u0437\u044f\u043b\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c, \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435 \u043c\u043d\u043e\u0433\u043e, \u043d\u0435 \u0441\u0442\u0430\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c","1520ac78":"### 4. income","0c258166":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u043f\u0440\u0435\u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0435\u0441\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 ROC-AUC \u043d\u0430 \u043d\u0435 \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u041c\u044b \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435 \u0443\u0433\u0430\u0434\u0430\u043b\u0438 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0442\u0435\u043c \u0441\u0430\u043c\u044b\u043c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u043b\u0438 \u0441\u0435\u0431\u0435 \u043e\u0433\u0440\u043e\u043c\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u0438 \u043a\u0430\u043a \u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0435 \u043a\u043e\u043b\u043e\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \u0443\u0431\u044b\u0442\u043e\u043a, \u043d\u043e ROC-AUC \u0443 \u043d\u0430\u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u0439. \u0411\u043b\u0430\u0433\u043e f1 \u043a\u0430\u043a-\u0442\u043e \u0441\u0438\u0433\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043e \u0442\u043e\u043c \u0447\u0442\u043e \u0447\u0442\u043e-\u0442\u043e \u043d\u0435 \u0432\u043f\u043e\u0440\u044f\u0434\u043a\u0435. \u041d\u0430\u0434\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0443 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043d\u0430 \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 - PRC-AUC.","cbd6a921":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u043c\u0435\u0442\u0440\u0438\u043a\u0430 f1 \u043f\u043e\u0434\u0440\u043e\u0441\u043b\u0430 \u043f\u043e\u0447\u0442\u0438 \u0432 10 \u0440\u0430\u0437, \u0447\u0442\u043e \u0432\u0441\u0435\u043b\u044f\u0435\u0442 \u043d\u0430\u0434\u0435\u0436\u0434\u0443 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0435. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u044d\u0442\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043d\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0437\u0430\u043d\u043e\u0432\u043e \u043f\u0435\u0440\u0435\u0441\u043e\u0431\u0435\u0440\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0430\u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0443","48f6afab":"### \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u0441\u043b\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","7102d49f":"### \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 ","71483dab":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u0441\u0438\u043b\u044c\u043d\u043e \u0441\u043a\u043e\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0435\u0442, \u0432\u0441\u0435 \u0431\u0435\u0440\u0435\u043c \u0432 \u0440\u0430\u0431\u043e\u0442\u0443","f993a59d":"### \u041f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438","2e939a06":"\u0420\u0435\u0437\u044e\u043c\u0435 - \u0412\u0438\u0434\u043d\u043e \u0447\u0442\u043e \u043f\u0440\u0438 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0438 \u043d\u0430 10 \u0444\u043e\u043b\u0434\u043e\u0432 ROC-AUC \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u0441\u0438\u043b\u044c\u043d\u043e, \u0435\u0441\u0442\u044c \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0432\u0430\u043b \u0434\u043e 0.716. \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u043e \u0444\u043e\u043b\u0434\u0430\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0432\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0434\u043e \u043a\u0440\u043e\u0441\u0441\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 0.744, \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044f 0.015, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0440\u0443\u0442\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0430\u0431\u043c\u0438\u0448\u0435\u043d. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0430 l1 \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u0430\u043a\u0438\u0445-\u043d\u0438\u0431\u0443\u0434\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043d\u0440\u0430\u0432\u044f\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u0438.","29c84554":"## Submission","f706faf7":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u0421\u0430\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u043f\u043e Mutual information \u0442\u0435\u0441\u0442\u0443 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0432\u044f\u0437\u044c \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u0431\u0430\u043d\u043a\u0430 (sna) \u0438 \u0434\u0430\u0432\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0435 (first_time), \u043f\u043e\u0442\u043e\u043c \u0438\u0434\u0435\u0442 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 (region_rating) \u0438 \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u043e\u043b (sex).","6c8a1a19":"### \u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f","68ab30ff":"### \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c, \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0441 \u0442\u0435\u0441\u0442\u043e\u043c","1e1c6216":"## 5. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u043c\u0443 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e\n---\n### \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","1c979e4d":"## 4. \u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\n---\n\u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n### 1. age","0d35a15e":"### \u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","1e1e3d64":"### ROC \u043a\u0440\u0438\u0432\u0430\u044f","f23fb9ad":"## 2. \u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445","d1e26d00":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u043e\u0446\u0435\u043d\u043a\u0430 \u043f\u043b\u0430\u0442\u0435\u043b\u044c\u0449\u0438\u043a\u0430 \u0411\u041a\u0418 (score_bki) \u0441\u0430\u043c\u044b\u0439 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043f\u043e ANOVA F test, \u043f\u043e\u0442\u043e\u043c \u043a\u043e\u043b-\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u044f\u0432\u043e\u043a (declain_app_cnt) \u0438 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 (age)","27f90fa9":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043f\u043e\u0434\u0440\u043e\u0441\u043b\u0430 \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u043d\u0435\u0435 \u0445\u043e\u0440\u043e\u0448\u043e \u0432\u0435\u0434\u0435\u0442 \u0441\u0435\u0431\u044f \u043d\u0430 \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438","6c5b5de8":"***\u0420\u0435\u0437\u044e\u043c\u0435 - Age:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 , \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044f\u043c \u043d\u0435\u0442. \u0412\u0437\u044f\u043b\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430","ce0fe913":"***\u0420\u0435\u0437\u044e\u043c\u0435 - sna:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u043e \u0432\u043f\u0440\u0430\u0432\u043e - \u0441\u043a\u043e\u0440\u0435\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435. \u041d\u043e \u043d\u0435 \u0441\u0442\u0430\u043b\u0438 \u043f\u043e\u043a\u0430 \u0431\u0440\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c. \u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442. \u0412\u0441\u0435\u0433\u043e 4 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0448\u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","a1c8934e":"### 11. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 SF\n---\n### \u041e\u0446\u0435\u043d\u043a\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439","f337fdb6":"\u0420\u0435\u0437\u044e\u043c\u0435 \u043f\u043e \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u043d\u0430\u043b\u0438\u0437\u0443: \u0432 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 73799 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439  - 36349. \u0412\u0441\u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043e 110148 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445. \u0412\u0441\u0435\u0433\u043e 20 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445, \u0438\u0437 \u043d\u0438\u0445 1 - \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u044f\u0434, 6 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445, 7 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 8 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445. \u0412\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 272 (0.4%), \u0432\u0441\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 education. client_id \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u043d\u0435\u0441\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0441\u0442\u0435\u0439. \u0412 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445 \u043d\u0430\u0448\u0435 \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f  default \u0438 \u0438\u0441\u043a\u0443\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 Train  \n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\n- client_id - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n- education - \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n- sex - \u043f\u043e\u043b \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430\n- age - \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430\n- car - \u0444\u043b\u0430\u0433 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\n- car_type - \u0444\u043b\u0430\u0433 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0438\u043d\u043e\u043c\u0430\u0440\u043a\u0438\n- decline_app_cnt - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0448\u043b\u044b\u0445 \u0437\u0430\u044f\u0432\u043e\u043a\n- good_work - \u0444\u043b\u0430\u0433 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u201c\u0445\u043e\u0440\u043e\u0448\u0435\u0439\u201d \u0440\u0430\u0431\u043e\u0442\u044b\n- bki_request_cnt - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0411\u041a\u0418\n- home_address - \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0437\u0430\u0442\u043e\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430\n- work_address - \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0437\u0430\u0442\u043e\u0440 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430\n- income - \u0434\u043e\u0445\u043e\u0434 \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430\n- foreign_passport - \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u0430\u0433\u0440\u0430\u043d\u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430\n- sna - \u0441\u0432\u044f\u0437\u044c \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u0431\u0430\u043d\u043a\u0430\n- first_time - \u0434\u0430\u0432\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0435\u043c\u0449\u0438\u043a\u0435\n- score_bki - \u0441\u043a\u043e\u0440\u0438\u043d\u0433\u043e\u0432\u044b\u0439 \u0431\u0430\u043b\u043b \u043f\u043e \u0434\u0430\u043d\u043d\u044b\u043c \u0438\u0437 \u0411\u041a\u0418\n- region_rating - \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\n- app_date - \u0434\u0430\u0442\u0430 \u043f\u043e\u0434\u0430\u0447\u0438 \u0437\u0430\u044f\u0432\u043a\u0438\n- default - \u0444\u043b\u0430\u0433 \u0434\u0435\u0444\u043e\u043b\u0442\u0430 \u043f\u043e \u043a\u0440\u0435\u0434\u0438\u0442\u0443","05b44f00":"### 7.first_time","d1b58a2f":"***\u0420\u0435\u0437\u044e\u043c\u0435*** - \u0432\u0441\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043f\u043e\u0434\u0440\u043e\u0441\u043b\u0438 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e, \u043a\u0440\u043e\u043c\u0435 accuracy \u0438 precision. \u041d\u043e \u0437\u0430\u0442\u043e \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f accuracy \u0432\u044b\u0440\u043e\u0441\u043b\u0430 \u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0436\u0438\u0434\u0430\u0442\u044c \u043d\u0435 \u0442\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0432\u0430\u043b \u043f\u043e \u043e\u0448\u0438\u0431\u043a\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u043a\u0430\u043a \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. \u041d\u0443 \u0438 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 precision \u043f\u0440\u043e\u0441\u0435\u043b\u0430 \u0442\u043e\u0436\u0435 \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0430\u043b\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043b\u0443\u0447\u0448\u0435 \u0438 \u0432 FP \u043f\u043e\u043b\u0438\u043b\u0438\u0441\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u0438\u0437 TN. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u0443\u0431\u0435\u0434\u0438\u043c\u0441\u044f \u0432 \u044d\u0442\u043e\u043c","e94e7b0a":"### \u041f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438","e0cf5c56":"***\u0420\u0435\u0437\u044e\u043c\u0435 - income:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 - \u0432\u0437\u044f\u043b\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c, \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0438 \u0441\u043b\u0435\u0432\u0430 \u0438 \u0441\u043f\u0440\u0430\u0432\u0430 \u0434\u0430\u0436\u0435 \u043f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438\u0445 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0443 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.  ","6560a02a":"### 5.score_bki","acee53ac":"### \u041e\u0446\u0435\u043d\u043a\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 ","629d3ff9":"## 6. \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n---\n### \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439","47e4a3d8":"***\u0420\u0435\u0437\u044e\u043c\u0435:***  \nscore - 0.73650  \n\u043d\u0435 \u0445\u0432\u0430\u0442\u0438\u043b\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a income \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c EFS\n\n**\u0415\u0441\u043b\u0438 \u043d\u043e\u0443\u0442\u0431\u0443\u043a \u0432\u0430\u043c \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u043b\u0441\u044f \u043f\u0440\u043e\u0448\u0443 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0441\u0442\u0440\u0435\u043b\u043a\u043e\u0439 \u0432\u0432\u0435\u0440\u0445**\n\n\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430 \u0432\u044b \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u0433\u0438\u0442\u0445\u0430\u0431\u0435 \u0432 \u043f\u0430\u043f\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 - https:\/\/github.com\/alex-sokolov2011\/skillfactory_rds\/tree\/master\/module_4\n\u0422\u0430\u043c \u0436\u0435 \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u043e\u0432 \u0438 \u0441\u0430\u0431\u043c\u0438\u0448\u0435\u043d\u044b\n\n**\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435**  \n\u0415\u0441\u043b\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0438 \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0435 - \u043f\u0438\u0448\u0438\u0442\u0435","a53b9a2e":"### \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f","8c851d83":"### 10. app_date - \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u0440\u044f\u0434","f6edc688":"### \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0435\u0432","7731ef80":"### 8.region_rating","ad554cca":"***\u0420\u0435\u0437\u044e\u043c\u0435 - first_time:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u043e \u0432\u043b\u0435\u0432\u043e - \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435. \u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442. \u0412\u0441\u0435\u0433\u043e 4 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0448\u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","1414afe5":"### 9. education","3e7848b8":"***\u0420\u0435\u0437\u044e\u043c\u0435 - region_rating:*** \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u043a\u043e\u0440\u0435\u0435 \u043b\u043e\u0433\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435. \u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0441\u043b\u0435\u0432\u0430 \u0432 \u043a\u043e\u043b-\u0432\u0435 506 \u043f\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0443 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 30 \u0438 20 \u0432 \u043a\u043e\u043b-\u0432\u0435 506 \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043a\u0430\u043a \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0435\u0437 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0442\u043e\u043c \u0443\u0434\u0430\u043b\u0438\u043c. \u0421\u043f\u0440\u0430\u0432\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u043b\u0435\u0432\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0432\u043f\u0440\u0430\u0432\u043e \u0438 \u043f\u0440\u0438 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u0440\u043e\u043f\u0430\u0434\u0443\u0442. \u0420\u0435\u0448\u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","1306b4ab":"### \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u044d\u043d\u0442\u043e\u0432 \u043f\u0440\u0438 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0430","561a15e5":"### \u041e\u0446\u0435\u043d\u043a\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438\n---\n### \u041a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438"}}