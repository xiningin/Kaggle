{"cell_type":{"fe6429ab":"code","2191af23":"code","917cccb1":"code","f8551cc0":"markdown"},"source":{"fe6429ab":"import time, os\nimport numpy as np\nimport smtplib\nimport mimetypes\nimport requests, bs4, smtplib\nfrom email.header import Header\nfrom email.mime.multipart import MIMEMultipart\nfrom email import encoders\nfrom email.message import Message\nfrom email.mime.audio import MIMEAudio\nfrom email.mime.base import MIMEBase\nfrom email.mime.image import MIMEImage\nfrom email.mime.text import MIMEText\nfrom email import encoders\n\n#  Here, I just use TEST to finish running the notebook. Remove TEST to use it.\nTEST = True","2191af23":"# Modified from https:\/\/github.com\/jorgemgr94\/python-smtplib-attachments\n\ndef sendattachmail(sender_address, sender_pass, receiver_mails, content, file_dir, num):\n    # The mail addresses and password, in this example i'm using Gmail\n    sender_address = sender_address\n    sender_pass = sender_pass\n    smtp_server = 'smtp.gmail.com'\n    smtp_port = 587\n\n    # Setup mail content\n    mail_content = content\n\n    # Setup global the MIME\n    message = MIMEMultipart()\n    message['Subject'] = 'Report ' + str(num) \n\n    # Body and the attachments for the mail\n    message.attach(MIMEText(mail_content, 'plain'))\n    attach_file_name = file_dir + f'\/submission_{content}.csv'\n    attach_file = open(attach_file_name, 'rb') # Open the file as binary mode\n    payload = MIMEBase('application', 'octate-stream')\n    payload.set_payload((attach_file).read())\n    encoders.encode_base64(payload) # Encode the attachment\n    payload.add_header('Content-Disposition', 'attachment', filename=f'submission_{content}.csv')\n    message.attach(payload)\n\n    #Create SMTP session \n    session = smtplib.SMTP(smtp_server, smtp_port)\n    session.starttls() #enable security\n    session.login(sender_address, sender_pass) #login\n    text = message.as_string()\n\n    # mails = ['xxxx@gmail.com', 'xxxx@gmail.com', ...]\n    mails = receiver_mails\n\n    for receiver_address in mails:\n        # Setup the MIME\n        message['From'] = sender_address\n        message['To'] = receiver_address\n        session.sendmail(sender_address, receiver_address, text)\n        print('Mail Sent: '+receiver_address)\n    \n    session.quit()","917cccb1":"if not TEST:\n    \n    # Your submission file path\n    DIR = 'C:\/Users\/yirun_zhang008\/Project\/Santa\/submission'\n\n    # Check the initial best score\n    score = []\n    name = os.listdir(DIR)\n    for item in name:\n        score.append(float(item.split('_')[1].split('.c')[0]))\n    best = np.min(score)\n    print('Initial Best Score: ', best)\n\n    i = 0\n    while True:\n        score = []\n        name = os.listdir(DIR)\n        for item in name:\n            score.append(float(item.split('_')[1].split('.c')[0]))\n        if np.min(score) < best:\n            i += 1\n            best = np.min(score)\n            print(f'New Score: {best}')\n            print('-'*40)\n            sendattachmail(sender_address='xxxx@gmail.com', \n                           sender_pass='12345678', \n                           receiver_mails=['xxxx@gmail.com', 'xxxx@gmail.com'], \n                           content=str(best), \n                           file_dir=DIR, \n                           num=i)\n        time.sleep(300) # check every 5 minutes","f8551cc0":"# Introduction\n\nI can imagine that waiting for the results of your notebooks\/scripts when solving it using heuristic algorithms is very stressful, especially when you are not able to access your computer\/cloud service. This is a simple example showing how you can get an email notification with the submission file attached so that you can be noticed your algorithm's progress at any time and any place with your phone and internet connection on. \n\nMoreover, I suppose this can be used when commiting kaggle notebooks with internet on (I haven't tested this yet)."}}