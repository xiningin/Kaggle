{"cell_type":{"2c853a43":"code","dc1382e0":"code","2cda6b41":"code","79aeec70":"code","e2028ad1":"code","d2e5aa64":"code","09e61c4e":"code","3210f97e":"code","447e5654":"code","c27496ba":"code","c53113d8":"code","0707af20":"code","cc9ed0f8":"code","01b59ee0":"code","f3dc230b":"code","249ca625":"code","db7dfba0":"code","6339480b":"code","2773108d":"code","343bf1d3":"code","1bf545b1":"code","b4593b36":"code","2e568e43":"code","6cfe66a4":"code","21d14e40":"code","f391c8fc":"code","758f7d60":"code","2d5fcb30":"code","f33934da":"code","9794ae64":"code","66ea53bb":"code","ab9aa8bb":"code","c0d540d2":"code","1fca61aa":"code","0b071c10":"code","29c223dc":"code","d93f62ea":"markdown","44b675a8":"markdown","776e8780":"markdown","60b128bb":"markdown","34c5db43":"markdown","c20203c4":"markdown","00f82779":"markdown","e2d2db7f":"markdown","bff6e090":"markdown","cb85307e":"markdown","8296f4c4":"markdown","5f996970":"markdown","18b471bb":"markdown","05aa08b0":"markdown"},"source":{"2c853a43":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc1382e0":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","2cda6b41":"train=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nitems=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\ncategories=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nshops=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\ntest=pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")","79aeec70":"train.shape","e2028ad1":"train.head()","d2e5aa64":"train.info()","09e61c4e":"items.shape","3210f97e":"items.head()","447e5654":"categories.shape","c27496ba":"categories.head()","c53113d8":"shops.shape","0707af20":"shops.head()","cc9ed0f8":"train.date_block_num.unique()","01b59ee0":"train.drop(\"date\",axis=1,inplace=True)","f3dc230b":"train.corr()","249ca625":"sns.heatmap(train.corr())","db7dfba0":"def hist(data, x, bins, title, xlabel):\n    plt.figure(figsize = (15, 12))\n    sns.set()\n    sns.distplot(data[x], color = 'blue')\n    plt.title(title)\n    plt.xlabel(xlabel)\n    plt.show()","6339480b":"hist(train,\"date_block_num\",1,\"date_block_num_dp\",\"date_block_num\")","2773108d":"hist(train,\"shop_id\",1,\"shop_id_dp\",\"shop_id\")","343bf1d3":"hist(train,\"item_id\",1,\"item_id_dp\",\"item_id\")","1bf545b1":"hist(train,\"item_price\",1000,\"item_price_dp\",\"item_price\")","b4593b36":"plt.figure(figsize = (12, 8))\nsns.boxplot(y=train['item_price'])\nplt.ylim(0, 10000)\nplt.grid()\nplt.title('Boxplot for Item_price')\nplt.ylabel('item_price')","2e568e43":"test.head()","6cfe66a4":"train.drop(\"date_block_num\",axis=1,inplace=True)","21d14e40":"x_train=train[[\"shop_id\",\"item_id\"]]\ny_train=train[\"item_cnt_day\"]","f391c8fc":"x_test=test[[\"shop_id\",\"item_id\"]]","758f7d60":"from sklearn.model_selection import train_test_split\nx_train1,x_val,y_train1,y_val = train_test_split(x_train,y_train,test_size = .2,random_state =42)","2d5fcb30":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import confusion_matrix","f33934da":"modlr=LinearRegression()\nmodlr=modlr.fit(x_train,y_train)","9794ae64":"rsq=modlr.score(x_train,y_train)\nrsq","66ea53bb":"rsq=modlr.score(x_val,y_val)\nrsq","ab9aa8bb":"from catboost import CatBoostRegressor\nimport lightgbm as lgb","c0d540d2":"lgb_train = lgb.Dataset(x_train, y_train)   \nlgb_eval = lgb.Dataset(x_val, y_val, reference=lgb_train)","1fca61aa":"params = {'boosting_type': 'gbdt',\n              'objective': 'regression',\n              'num_leaves': 40,\n              'learning_rate': 0.1,\n              'feature_fraction': 0.9\n              }\ngbm = lgb.train(params,\n    lgb_train,\n    num_boost_round=200,\n    valid_sets=[lgb_train, lgb_eval],\n    valid_names=['train','valid'])","0b071c10":"y_te=gbm.predict(x_test).clip(0,40)\ny_te","29c223dc":"submission = pd.DataFrame({\n    'ID': test.index, \n    'item_cnt_month': y_te\n})\nsubmission.to_csv('sales_submission.csv', index=False)\nprint(submission)","d93f62ea":"***Importing Required Packages***","44b675a8":"***Linear Regression***","776e8780":"***Visualizing the data***","60b128bb":"***Dropping \"date column from train ***","34c5db43":"**Dropping unneeded column**","c20203c4":"**Defining Hist plot such that we can use in future**","00f82779":"Its doing very bad","e2d2db7f":"***Reading The Datasets***","bff6e090":"***CatBoost and Light GBM***","cb85307e":"**Understanding The Datasets**","8296f4c4":"**Correlation**","5f996970":"**Splitting the data set into train set and validation set so that we can know how our model will work in the test dattaset**","18b471bb":"***Visualization Of the data***","05aa08b0":"**Taking x,y**"}}