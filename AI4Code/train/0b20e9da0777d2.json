{"cell_type":{"4ddfa3a3":"code","c85f3979":"code","e3c3aaa8":"code","19fe3ac9":"code","00f7ad74":"code","a90f59e0":"code","dfc5d28c":"code","3bf3a0b8":"code","3039f167":"code","85360dec":"code","0b1d8616":"code","5f40c2bf":"code","b594a73a":"code","268b2965":"code","629115bd":"code","4d98f502":"code","508812c3":"code","3b843bca":"code","7ab81608":"code","9515ca21":"code","634885fd":"code","71c91e6d":"code","f4e92779":"code","fe3bb67c":"markdown","e18ffa78":"markdown","4a791eb9":"markdown","f834cc2e":"markdown","15ea9188":"markdown","9480607e":"markdown","2aabe3aa":"markdown","e23196ab":"markdown","17547d4c":"markdown","567f0de5":"markdown","fc735838":"markdown","8caa12d8":"markdown","d22f5da9":"markdown","6bc9a489":"markdown","5ad4c3ea":"markdown","5ae8b4d2":"markdown","ed919242":"markdown","241d78a9":"markdown","ae524b2d":"markdown","a920b453":"markdown"},"source":{"4ddfa3a3":"# Import Packages\nimport numpy as np    # Numeric Library\nimport pandas as pd     # Data Analysis Library\nimport warnings\nwarnings.filterwarnings('ignore')","c85f3979":"# Reading heart diseases\nheart_df = pd.read_csv(\"\/kaggle\/input\/heart.csv\")\nheart_df.head()","e3c3aaa8":"import matplotlib.pyplot as plt    #Visualization Library\nimport seaborn as sns    # Advanced Visualization Library\nsns.set()\n\n%matplotlib inline","19fe3ac9":"# Sex Dictionary\nsex_dict = { 0: 'Female',1: 'Male' }\n\n# Chest Pain Dictionary\nchest_pain_dict = { 0:'Typical Angina', 1:'Atypical Angina', 2:'Non-Anginal Pain', 3:'Asymptomatic'}\n\n# Blood Sugar  Dictionary\nfbs_dict = { 0: 'No Blood Sugar', 1: 'Blood Sugar'}\n\n# Rest ECG\nrestecg_dict = { 0:'Normal restecg', 1:'ST-T wave abnormality restecg', 2:'ventricular hypertrophy restecg'}\n\n# Exercise Induced Angina\nexang_dict = { 0:'Exang No', 1:'Exang Yes'}\n\n# Slope of the peak exercise ST segment \nslope_dict = { 0:'Upsloping', 1:'flat', 2:'Downsloping'}\n\n# Number of Major Vessels (0-3) Colored by Flourosopy\nca_dict = { 0:'Major vessel 0', 1:'Major vessel 1', 2:'Major vessel 2', 3:'Major vessel 3', 4:'Major vessel 4'}\n\n# Thalassemia Dictionary\n\nthal_dict = { 0: 'None', 1: 'Normal', 2:'Fixed Defect',3:'Reversable Defect'}\n\n# Target Dictionary\ntarget_dict = { 0: 'Not Present', 1: 'Present'}","00f7ad74":"# Creating new DataFrame\ndf = heart_df[['age']]\n# trestbps as Resting Blood Pressure\ndf['Resting Blood Pressure'] = heart_df['trestbps']\n# chol as Serum Cholestoral\ndf['Serum Cholestoral'] = heart_df['chol']\n# thalach as Max. Heart Rate\ndf['Max. Heart Rate'] = heart_df['thalach']\n# old peak ST Depression\ndf['ST Depression'] = heart_df['oldpeak']\n# sex as Sex\ndf['Sex'] = heart_df['sex'].apply(lambda x:sex_dict[x])\n# thal as Thalassemia\ndf['Thalassemia'] = heart_df['thal'].apply(lambda x:thal_dict[x])\n# fbs as Thalassemia\ndf['Fasting Blood Sugar'] = heart_df['fbs'].apply(lambda x:fbs_dict[x])\n# cp as Chest Pain\ndf['Chest Pain'] = heart_df['cp'].apply(lambda x:chest_pain_dict[x])\n# target as Heart Disease\ndf['Heart Disease'] = heart_df['target'].apply(lambda x:target_dict[x])","a90f59e0":"def custom_count_barplot(df, col, col_val, gp_val, gp_key):\n    # Getting groupby on gp_val by gp_key\n    new_df = df[df[col]==col_val].groupby([gp_val,gp_key])[gp_key].count()\n    \n    # Ploting Bar chart\n    ax = new_df.unstack().plot(kind='bar', fontsize=14, figsize=(14,5))\n    ax.set_title('{0} with {1}'.format(col_val,gp_key), fontsize=18)\n    ax.set_xlabel(gp_val,labelpad=10, fontsize=14)\n    ax.set_ylabel('Count',fontsize=14)\n    ax.legend(fontsize=12)\n    ax.tick_params(labelrotation=0)\n    \n    # Annoting counts on the plot\n    for patch in ax.patches:\n        left, bottom, width, height = patch.get_bbox().bounds\n        ax.annotate(\"{0}\".format(int(height)), xy=(left+width\/2, bottom+height\/2), ha='center', va='center')\n    \n    plt.show()","dfc5d28c":"custom_count_barplot(df=df,col='Sex',col_val='Male',gp_val='Heart Disease',gp_key='Chest Pain')","3bf3a0b8":"custom_count_barplot(df=df,col='Sex',col_val='Female',gp_val='Heart Disease',gp_key='Chest Pain')","3039f167":"custom_count_barplot(df=df,col='Sex',col_val='Male',gp_val='Heart Disease',gp_key='Thalassemia')","85360dec":"custom_count_barplot(df=df,col='Sex',col_val='Female',gp_val='Heart Disease',gp_key='Thalassemia')","0b1d8616":"custom_count_barplot(df=df,col='Sex',col_val='Male',gp_val='Heart Disease',gp_key='Fasting Blood Sugar')","5f40c2bf":"custom_count_barplot(df=df,col='Sex',col_val='Female',gp_val='Heart Disease',gp_key='Fasting Blood Sugar')","b594a73a":"sns.catplot(x=\"target\", y=\"age\", hue=\"sex\", kind=\"violin\", split=True, data=heart_df);\nplt.show()","268b2965":"# Feature\nfeature = heart_df.drop(['target','age','trestbps','chol','thalach','oldpeak'], axis=1)\n# Labels\nlabel = heart_df[['target']]","629115bd":"# Categories as Features i.e. Dummies of data\ndef get_dummies_concated(df,key,column_dict):\n    tmp = pd.get_dummies(df[key])\n    tmp.columns = column_dict.values()\n    return pd.concat([df.drop(key, axis=1), tmp], axis=1)\n\ncol_resp_dict = {\n    'sex':sex_dict,\n    'cp':chest_pain_dict,\n    'fbs':fbs_dict,\n    'restecg':restecg_dict,\n    'exang':exang_dict,\n    'slope':slope_dict,\n    'ca':ca_dict,\n    'thal':thal_dict\n}\n# Applying above dictionary\nfor key,value in col_resp_dict.items():\n    new_featue = get_dummies_concated(feature,key,value)","4d98f502":"# Sacling the data\nfrom sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler().fit(new_featue)\nfeature_scale = sc.transform(new_featue)","508812c3":"# Splitting Train Test in Ratio 75:25\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(new_featue, label, test_size=0.25)","3b843bca":"# Import Models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC","7ab81608":"models = []\nmodels.append(('LGR',LogisticRegression()))\nmodels.append(('KNN',KNeighborsClassifier()))\nmodels.append(('GNB',GaussianNB()))\nmodels.append(('DT',DecisionTreeClassifier()))\nmodels.append(('SVC',SVC()))","9515ca21":"# Finding best model using cross validation\nfrom sklearn.model_selection import cross_val_score\n\naccuray_list = []\nname_list = []\n\nfor name, model in models:\n    \n    accuray = cross_val_score(model, X_train, Y_train, scoring='accuracy' )\n\n    name_list.append(name)\n    accuray_list.append(accuray)\n    \n    print(\"Model: '{0}' | Accurcy: {1:.2f}%\".format(name, accuray.mean()*100))","634885fd":"# Svm depend on C and gamma\nsvc_param = {\n    \"C\":[0.1,1,10,100,200],\n    \"gamma\":[0.01,0.1,1,10,100]\n}","71c91e6d":"# Using Grid Search for Para meter tuning\nfrom sklearn.model_selection import GridSearchCV\n\nclf = GridSearchCV(SVC(),param_grid=svc_param).fit(X_train,Y_train)\nclf.best_params_ ","f4e92779":"cv = SVC(C=1,gamma=0.1).fit(X_train,Y_train)\nprint(cv.score(X_train,Y_train))\nprint(cv.score(X_test,Y_test))","fe3bb67c":"#### Chest Pain Analysis\n- Typical Angina: The presence of substernal chest pain or discomfort that was provoked by emotional stress and was gone by rest.\n- Atypical Angina: The presence of most of the typical angina categories\n- Non-Anginal: The presence of 1 or 2 type of typical angna\n- Asymptomatic: Asymptomatic means neither causing nor exhibiting symptoms of disease.","e18ffa78":"#### Data Preparation\nPreparin data for classification. Droping unwanted data and creating new features.","4a791eb9":"### Load Data","f834cc2e":"- People within range of 40 years to 70 years heart Disease is present.","15ea9188":"> Lets create common function to plot chart.","9480607e":"- Female also with fixed defect mostly have Heart Disease","2aabe3aa":"# Heart Diseases Classification and Analysis\n**Heart Diseases** is broad term it includes the many heart related diseses like **chest pain**, **abnormal heart beat**, **heart attack** etc.\n**Heart Diseases** cuased by many reason like **abnormal heart beat**, **weak heart muscle**, **heart infection**.\n\n#### Steps to Classify Heat Diseases\n- Load Data\n- Data Analysis\n- Model Selection\n        1. Models\n            a. Logistic Regression\n            b. K-Nearest Neighbour\n            c. Gaussian Naive Bayes\n            d. Decision tree\n            e. Support Vector Machine\n        2. Cross Validaiton\n        3. Hyper Parameter Tuning of Top Accuarate models\n        4. Select Best Model\n- Refernece for information","e23196ab":"Creating and Applying Label Dictionaries in New DataFrame with New Column Name for better understanding.\n","17547d4c":"#### Fasting Blood Sugar Analyis","567f0de5":"- Male with fixed defect mostly have Heart Disease\n- With reversable defect mostly Heart Disease not present","fc735838":"- Patient with Heart Disease mostly have Sugar.","8caa12d8":"- Male with Non-Anginal chest pain (as per data) mostly have Heart Disease.\n- Male with Typical Angina chest pain (as per data) mostly don't have Heart Disease.","d22f5da9":"#### Thalassemia Analysis\nThalassemia is a blood disorder in which body makes inadequate amount of hemoglobin proteins.","6bc9a489":"#### Hyper Parameter Tuning","5ad4c3ea":"Support Vector Machine is best for fitting above data","5ae8b4d2":"Reference for theoretical information:\n- https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/heart-disease\/heart-disease.names\n- https:\/\/www.timeofcare.com\/typical-vs-atypical-chest-pain\/\n- http:\/\/www.ilpi.com\/msds\/ref\/asymptomatic.html\n- https:\/\/medlineplus.gov\/ency\/article\/000587.htm","ed919242":"### Data Analysis\n> Lets inspect and analyse the heart disease data","241d78a9":"#### Agewise Analysis","ae524b2d":"- Creating named dictorionries to analyse the data.","a920b453":"- Female with Non-Anginal chest pain (as per data) mostly have Heart Disease."}}