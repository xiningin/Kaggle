{"cell_type":{"014f3c32":"code","64e67a04":"code","cc2f36fd":"code","e5243bc1":"code","829602bf":"code","f93a1f58":"code","8c62747a":"code","14641bf8":"code","039e1762":"code","9d3b6020":"code","2eddfb41":"code","0591b5c8":"code","572cf7e3":"code","5eafa41f":"code","8952f9ee":"code","67b36608":"code","58d4b8c7":"code","bd559754":"code","74d8092d":"markdown","ca735004":"markdown"},"source":{"014f3c32":"# Ignore  the warnings\nimport warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')\n\n# data visualisation and manipulation\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns\nimport missingno as msno\n#configure\n# sets matplotlib to inline and displays graphs below the corressponding cell.\n%matplotlib inline  \nstyle.use('fivethirtyeight')\nsns.set(style='whitegrid',color_codes=True)\n\n#import the necessary modelling algos.\n\n#classifiaction.\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import LinearSVC,SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier,AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\n \n\n#regression\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso,RidgeCV\nfrom sklearn.ensemble import RandomForestRegressor,BaggingRegressor,GradientBoostingRegressor,AdaBoostRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\n\n#model selection\nfrom sklearn.model_selection import train_test_split,cross_validate\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import GridSearchCV\n\n#preprocessing\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler,LabelEncoder\n\n#evaluation metrics\nfrom sklearn.metrics import mean_squared_log_error,mean_squared_error, r2_score,mean_absolute_error # for regression\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score  # for classification\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import cross_val_score","64e67a04":"df = pd.read_csv('..\/input\/fetal-health-classification\/fetal_health.csv')\ndf.head()","cc2f36fd":"df.shape","e5243bc1":"df.info()","829602bf":"df.isnull().sum()","f93a1f58":"sns.countplot(data = df, x = 'fetal_health')","8c62747a":"bins = (0, 1.0, 3.0)\nbin_names = ['Normally', 'Carefully']\ndf['fetal_health'] = pd.cut(df['fetal_health'], bins = bins, labels = bin_names)\n","14641bf8":"df.fetal_health","039e1762":"sns.countplot(data = df, x = 'fetal_health')","9d3b6020":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","2eddfb41":"df['fetal_health'] = le.fit_transform(df['fetal_health'])\ndf.head()","0591b5c8":"X = df.drop('fetal_health', axis = 1)\ny = df.fetal_health","572cf7e3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","5eafa41f":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","8952f9ee":"models = [LogisticRegression(),LinearSVC(),SVC(kernel='rbf'),KNeighborsClassifier(),RandomForestClassifier(),\n        DecisionTreeClassifier(),GradientBoostingClassifier(),GaussianNB()]\nmodel_names=['LogisticRegression','LinearSVM','rbfSVM','KNearestNeighbors','RandomForestClassifier','DecisionTree',\n             'GradientBoostingClassifier','GaussianNB']\n\nacc=[]\nd={}\n\nfor model in range(len(models)):\n    clf=models[model]\n    clf.fit(X_train,y_train)\n    pred=clf.predict(X_test)\n    acc.append(accuracy_score(pred,y_test))\n     \nd={'Modelling Algo':model_names,'Accuracy':acc}\nd","67b36608":"acc_frame=pd.DataFrame(d)\nacc_frame","58d4b8c7":"sns.barplot(y='Modelling Algo',x='Accuracy',data=acc_frame)\n","bd559754":"sns.factorplot(x='Modelling Algo',y='Accuracy',data=acc_frame,kind='point',size=4,aspect=3.5)\n","74d8092d":"# Modeling","ca735004":"### Dividing fetal_health as normally and carefully for binary classification"}}