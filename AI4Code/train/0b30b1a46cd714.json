{"cell_type":{"65c485cc":"code","1d57a00c":"code","a938c461":"code","71a86c6a":"code","c084c6a3":"code","ea595cd7":"code","4be32a0a":"code","e038d5c1":"code","5b0b49e4":"code","9010aed0":"code","912e741b":"code","845f3932":"code","405f4b48":"code","aebc4b82":"code","7d17c47a":"code","f00e3bd4":"code","7db7cf13":"code","a05f45be":"markdown","d9f7a47e":"markdown","6e339be3":"markdown","00e2880d":"markdown"},"source":{"65c485cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d57a00c":"df = pd.read_csv('\/kaggle\/input\/tcs-dataset-from-2015-to-2021\/TCS.NSE.csv')\ndf.head()","a938c461":"df.tail()","71a86c6a":"df.info()","c084c6a3":"df.describe()","ea595cd7":"df.shape","4be32a0a":"df.isnull().sum()\n#shows there is null values.","e038d5c1":"#remove Adj close. because it is not neccessary\n\ndf = df.drop(columns =['Adj Close'])","5b0b49e4":"#df[df['Open'].isnull()]\n#remove null values\ndf = df.dropna()\ndf.shape","9010aed0":"#covert Date format from object to datestamp\ndf[\"Date\"] = pd.to_datetime(df[\"Date\"])\ndf.info()","912e741b":"import matplotlib.pyplot as plt\nimport matplotlib.dates as mpl_dates","845f3932":"plt.figure(figsize = (18,6))\nplt.plot(df['Date'], df['Close'], color = 'red')\nplt.title('TCS stock price(2015 - 2022)', fontsize = 14, fontweight = 'bold')\nplt.xlabel(\"Year\", fontsize =13)\nplt.ylabel(\"Price in INR\", fontsize = 13)\nplt.grid()\nplt.show()","405f4b48":"plt.figure(figsize = (18,6))\nplt.bar(df['Date'], df['Close'])\nplt.title('TCS stock price(2015 - 2022)', fontsize = 14, fontweight = 'bold')\nplt.xlabel(\"Year\", fontsize =13)\nplt.ylabel(\"Price in INR\", fontsize = 13)\nplt.grid()\nplt.show()","aebc4b82":"df['Market cap'] = df[\"Open\"]*df[\"Volume\"]","7d17c47a":"df['Volume'] = df['Volume'].astype(int)\ndf['Market cap'] = df['Market cap'].astype(int)","f00e3bd4":"df.head()","7db7cf13":"plt.figure(figsize = (20,6))\nplt.plot(df['Date'], df['Market cap'], color ='orange')\nplt.title(\"Market capitalization of TCS(2015-2022)\", fontsize = 14, weight = 'bold')\nplt.xlabel(\"Date\")\nplt.ylabel(\"Market cap\")\nplt.grid()\nplt.show()","a05f45be":"# **Data Analysis and Visualisation**","d9f7a47e":"**Convert date from object to Datestamp**","6e339be3":"# **Importing_the_data**\n","00e2880d":"**Market Capitalization**"}}