{"cell_type":{"5a1b8f5a":"code","89938df9":"code","9129ab06":"code","220dc49e":"code","8035e6bd":"code","549cf25c":"code","0efd6e15":"code","eaeb709a":"code","d0858867":"code","afb9a950":"code","77664e54":"code","4fe80d86":"code","3d811c0f":"code","be04c620":"code","fb08f9a4":"code","a7514c91":"code","f343e3b3":"code","4432e7de":"code","4180c1fa":"markdown","7b8cf671":"markdown","500e9c4f":"markdown","161143ff":"markdown","a642cd8e":"markdown","636e4fe6":"markdown","bf470628":"markdown","2a558dfa":"markdown","a3da37b4":"markdown","dee7dd01":"markdown","23a41988":"markdown","5d4dbf5c":"markdown","7586c936":"markdown","3fb12741":"markdown","23bb2c7a":"markdown"},"source":{"5a1b8f5a":"import numpy as np\nimport pandas as pd\nimport xgboost as xgb\nfrom xgboost import XGBClassifier, plot_importance\nimport sklearn\nfrom sklearn.metrics import classification_report, accuracy_score\nfrom sklearn.metrics import log_loss\nfrom sklearn.metrics import mean_squared_error, mean_squared_log_error\nfrom sklearn.model_selection import train_test_split, KFold, GroupKFold, StratifiedKFold\nimport optuna\nfrom optuna import Trial, visualization\nimport warnings\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\n\n# Mute warnings\nwarnings.filterwarnings('ignore')","89938df9":"df = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","9129ab06":"df.head()","220dc49e":"df.isnull().sum()","8035e6bd":"df = df.drop(['id','Unnamed: 32'],axis=1)","549cf25c":"df['diagnosis'] = df.diagnosis.astype('category').cat.codes","0efd6e15":"df.info()","eaeb709a":"corrMatrix = df.corr()\nfig = plt.figure(figsize=(20,20))\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","d0858867":"df.corr()","afb9a950":"fig = plt.figure(figsize=(5,5))\nsns.countplot(x=df.diagnosis,data=df)\nplt.xlabel(\"Diagn\u00f3stico: 0 - Maligno, 1 - Benigno\")\nplt.ylabel(\"Contagem\")","77664e54":"feature_cols = df.columns.values.tolist()\ntarget_col = ['diagnosis']\nfeature_cols.remove('diagnosis')","4fe80d86":"# Carregando os dataframes\n\nX = df.drop('diagnosis', axis=1)\ny = df['diagnosis']\n\n# Declarando XGBRegressor,\nfrom xgboost import XGBClassifier\n\nxgb = XGBClassifier(objective='binary:logistic')\nxgb.fit(X, y)","3d811c0f":"def objective(trial,data=X,target=y):\n    \n    train_x, test_x, train_y, test_y = train_test_split(data, target, test_size=0.15,random_state=42)\n    \n    model = XGBClassifier(objective='binary:logistic')  \n    \n    model.fit(train_x,train_y,eval_set=[(test_x,test_y)],early_stopping_rounds=100,verbose=False)\n    \n    preds = model.predict(test_x)\n    \n    rmse = mean_squared_error(test_y, preds,squared=False)\n    \n    return rmse","be04c620":"study = optuna.create_study(direction='minimize', study_name = 'xgbclassifier') \nstudy.optimize(objective, n_trials=50)","fb08f9a4":"study.best_params","a7514c91":"#fmodel = XGBClassifier(**study.best_params,tree_method='gpu_hist', use_label_encoder=False)\nfmodel = XGBClassifier(**study.best_params, use_label_encoder=False)\nfmodel.fit(X, y)","f343e3b3":"# Declarando nosso split de teste e validacao\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 0.3, random_state=2)","4432e7de":"from sklearn.model_selection import cross_val_score\n\ncross_val_score(fmodel, X, y, scoring='accuracy')","4180c1fa":"# Analysis and appliyng Machine Learning on Breast Cancer Dataset","7b8cf671":"<a id=\"2\"><\/a> \n# Aplicando XGBoost","500e9c4f":"Content:\n\n1. [Pr\u00e9 processamento de Dados](#1)\n1. [Aplicando XGBoost](#2)\n1. [Utilizando Optuna para Hyperparameter Tuning](#3)\n1. [Conclus\u00e3o](#4)\n","161143ff":"<a id=\"4\"><\/a> \n# Conclus\u00e3o\n* Quaisquer d\u00favidas, responderei vide coment\u00e1rio ou email\n* Recomenda\u00e7\u00f5es e gratifica\u00e7\u00f5es s\u00e3o sempre bem-vindas!\n* Um abra\u00e7o!\n\n***Obrigado pelo seu tempo,***\n***Lucas Silva***","a642cd8e":"<a id=\"3\"><\/a> \n# Utilizando Optuna para Hyperparameter Tuning","636e4fe6":"Vamos analisar os tipos de cada coluna:","bf470628":"<a id=\"1\"><\/a> \n# Pr\u00e9 processamento de Dados:\n\n1 - ID number\n\n2 - Diagnosis (M = malignant, B = benign)\n\n3-32 - Ten real-valued features are computed for each cell nucleus:\n\n* a) radius (mean of distances from center to points on the perimeter)\n* b) texture (standard deviation of gray-scale values)\n* c) perimeter\n* d) area\n* e) smoothness (local variation in radius lengths)\n* f) compactness (perimeter^2 \/ area - 1.0)\n* g) concavity (severity of concave portions of the contour)\n* h) concave points (number of concave portions of the contour)\n* i) symmetry\n* j) fractal dimension (\"coastline approximation\" - 1)\n\nN\u00e3o h\u00e1 daldos faltantes, dado pelo concedente do dataset","2a558dfa":"Essa coluna unnamed n\u00e3o est\u00e1 declarada nas informa\u00e7\u00f5es do Dataset, ent\u00e3o vou drop\u00e1-la, junto com id","a3da37b4":"Ok, tudo certo por aqui, podemos partir para as an\u00e1lises.","dee7dd01":"Vamos listar a matriz, para vermos os valores:","23a41988":"Vamos come\u00e7ar determinando nossas features:","5d4dbf5c":"Vamos analisar nossa coluna de diagn\u00f3stico, para saber se nosso dataset est\u00e1 equilibrado:","7586c936":"Temos cerca de 75% a mais de dados de malignos, isso pode ser um impec\u00edlio depois, nosso modelo pode ter um bias, mas vamos l\u00e1!","3fb12741":"Por fim, vamos codificar a coluna de diagn\u00f3stico:","23bb2c7a":"Agora, vamos determinar o score do nosso modelo:"}}