{"cell_type":{"923413d1":"code","29ed8ca0":"code","022865a5":"code","5073065f":"code","e046807b":"code","fcd764d2":"code","1c33e7e4":"code","a68c7760":"code","123360a0":"code","6ac43a65":"code","e1201710":"code","f0d947f5":"code","bc168f1a":"code","f55cf72a":"code","b49e2ee9":"code","9a8c6092":"code","3adfde67":"code","b0c2bd53":"code","7b7b995d":"code","52d080c1":"code","29c857cc":"code","f481a503":"code","98a6ec35":"code","4db7f101":"code","52a11231":"code","7b9cdeff":"code","591b8824":"code","6674603c":"code","8e4af2cb":"code","05468c5d":"code","74586a23":"code","415b8738":"markdown","d2ff9903":"markdown","a0ab34b2":"markdown","b99eda93":"markdown","dff9affb":"markdown","a907ab6d":"markdown","21e7f705":"markdown","ddea307b":"markdown","b25eca14":"markdown","387f210d":"markdown","9bc29368":"markdown","54eceadf":"markdown","f3b18a8c":"markdown","b3985bc3":"markdown","35fb8b53":"markdown","27e997a7":"markdown","2aa385ff":"markdown","7f5bcd32":"markdown","12356b56":"markdown","eae2879a":"markdown","05af590e":"markdown","af5620ef":"markdown"},"source":{"923413d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","29ed8ca0":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","022865a5":"df = pd.read_csv('..\/input\/lifestyle-courses-udemy-39k-course\/udemy_output_All_Lifestyle_p1_p626.csv')\nrows, cols = df.shape\nprint(f\"This dataset has {rows} rows and {cols} columns\")","5073065f":"df.head()","e046807b":"df.describe()","fcd764d2":"df.info()","1c33e7e4":"df['id'].duplicated().any()","a68c7760":"df[df['price_detail__amount'].isna()].value_counts('is_paid')","123360a0":"# Sanity check\ndf['price_detail__amount'].count() + df[df['price_detail__amount'].isna()].value_counts('is_paid')[0] == rows\n","6ac43a65":"df['num_published_practice_tests'].unique()","e1201710":"df.columns","f0d947f5":"drop_cols = ['discount_price__currency', 'discount_price__price_string', 'price_detail__currency', 'price_detail__price_string']\ndf.drop(columns=drop_cols, inplace=True)","bc168f1a":"df.rename(columns={'discount_price__amount':'discount_price_in_rupees', 'price_detail__amount': 'price_detail_in_rupees'}, inplace=True)\ndf.head()","f55cf72a":"# 1 rupee = 0.011 Euro\nexchange_rate = 0.01144185\n\ndf['discount_price_in_euros'] = df['discount_price_in_rupees'] * exchange_rate\ndf['price_detail_in_euros'] = df['price_detail_in_rupees'] * exchange_rate\n\ndf['discount_price_in_euros'] = df['discount_price_in_euros'].round(decimals=2)\ndf['price_detail_in_euros'] = df['price_detail_in_euros'].round(decimals=2)\n\ndf.head()","b49e2ee9":"df['created'] = pd.to_datetime(df['created']).dt.date\ndf['published_time'] = pd.to_datetime(df['created']).dt.date\ndf.head()","9a8c6092":"cols_to_fill = ['discount_price_in_rupees', 'price_detail_in_rupees', 'discount_price_in_euros', 'price_detail_in_euros']\nfor col in cols_to_fill:\n    df[col] = df[col].fillna(0)","3adfde67":"df.sample(3)","b0c2bd53":"df.columns","7b7b995d":"corr = df[['price_detail_in_euros', 'rating', 'num_subscribers', 'num_published_lectures', 'num_published_practice_tests']].corr()\ncorr","52d080c1":"mask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nwith sns.axes_style('white'):\n    f, ax = plt.subplots(figsize=(10,10))\n    ax = sns.heatmap(corr, mask=mask, annot=True, vmax=.3, square=True)","29c857cc":"df.sort_values(['price_detail_in_euros', 'rating'], ascending=(True, False)).head()","f481a503":"df['trust_score'] = df['num_reviews'] \/ df['rating']\ndf.head()","98a6ec35":"df.sort_values(['price_detail_in_euros', 'trust_score'], ascending=(True, False)).head()","4db7f101":"df.sort_values(['price_detail_in_euros', 'trust_score'], ascending=(False, False)).head()","52a11231":"df[df.num_subscribers >= 1000].sort_values(['price_detail_in_euros', 'rating'], ascending=(True, True)).head()","7b9cdeff":"df[df.num_subscribers >= 1000].sort_values(['price_detail_in_euros', 'rating'], ascending=(False, True)).head()","591b8824":"df.sort_values(['rating', 'num_subscribers'], ascending=(False,False)).head()","6674603c":"df.sort_values(['rating', 'num_subscribers'], ascending=(True,False)).head()","8e4af2cb":"df.sort_values(['price_detail_in_euros', 'num_subscribers'], ascending=(False,False)).head()","05468c5d":"df.sort_values(['price_detail_in_euros', 'num_subscribers'], ascending=(True,False)).head()","74586a23":"df.sort_values('num_subscribers', ascending=False).head()","415b8738":"#### Observation\n\nAll courses are free and have very few reviews with few lectures that were published in second half of 2020. It is hard to say more about quality of course without knowing watch time. The results migh be like this because people only subscribed but never started watching it or watched for a bit and decided it was not worth their time.","d2ff9903":"### Which are the cheapest courses with highest rating?","a0ab34b2":"## EDA","b99eda93":"### Which are the most expensive courses with lowest rating where is at least 1000 subscribers?","dff9affb":"### Dates","a907ab6d":"### Lowest rated courses with the highest subscriber count","21e7f705":"### How price correlates to rating, subscribers, lenght of course and practice tests on course? ","ddea307b":"## Courses with most subscribers","b25eca14":"### Most expensive courses with the highest subscriber count","387f210d":"#### Observation\n\n1. Simple sorting will not cut; Because we can see that courses with only few subscirbers and even fewer reviews has a better possibility to show up, but that just dont represents the truth.\n    - I am going to need implement some additional metric. I am going to create a new column with trust score. It will be calculated like this: ***num_reviews \/ rating***","9bc29368":"# LifeStyle Courses - Udemy (39K+ course) EDA\n\ndataset provided by [JIL KOTHARI](https:\/\/www.kaggle.com\/jilkothari)","54eceadf":"### Prices","f3b18a8c":"#### Observation\n\nThis calculation is biased on number of reviews and rating. If there is any recommendations how I should have dealt with it differently I would like to know.","b3985bc3":"### The cheapest courses with the highest subscriber count","35fb8b53":"### Which are the most expensive courses with highest rating?","27e997a7":"### Initial Toughts\n\n- Price is in Indian Rupees, will be converting it into Euros to get better insights on prices with familiar currency. This includes: discounted and price details, will leave INR colums with indication but also will add Euros.\n- Need to convert created and published time to date time fields.\n- There are missing values in prices, but they are because those courses are free. Probobly will replace NaN with 0.\n- Feel like missing few important columns like categories, bestseller column could be an interesting addition\n","2aa385ff":"### Filling free courses prices as 0","7f5bcd32":"## Cleaning data","12356b56":"#### Observations\n\nI noticed that price only correlates with with number of lectures published and it is nquite weak correlation. That seems to be about right because content focused primally on the subject and the content of lectures is what people pay money for. Also Numbeer of lectures have a weak correlation with rating and number of subscribers. ","eae2879a":"### Highest rated courses with the highest subscriber count","05af590e":"### Which are the cheapest courses with lowest rating where is at least 1000 subscribers?","af5620ef":"## Loading dataset and initial exploration"}}