{"cell_type":{"169d55a9":"code","f1fd1dc6":"code","152df3ca":"code","4398d819":"code","243f2278":"code","511a4a2b":"code","102083f5":"code","3766b5a9":"code","acd65003":"code","27c7f8b5":"code","61c372e7":"code","5c3a5f0e":"code","dc479903":"code","1e03add8":"code","4e0b4552":"code","9d7057f9":"code","c00488ae":"code","c260653c":"code","f1805e6a":"code","fb8e31e5":"code","f65cc341":"code","3cb4b42d":"markdown"},"source":{"169d55a9":"import pandas as pd\nimport numpy as np\nfrom sklearn import linear_model\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeRegressor \nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score","f1fd1dc6":"df_train = pd.read_csv(\"..\/input\/socc-ai-competition-1\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/socc-ai-competition-1\/test.csv\")\n","152df3ca":"y = df_train['shares']\ndf_train.drop(['shares', 'url'], axis=1, inplace=True)","4398d819":"\n'''\ndf_train['abs_title_sentiment_polarity']=df_train['abs_title_sentiment_polarity'].replace(['0'],np.nan)\ndf_train['global_rate_negative_words']=df_train['global_rate_negative_words'].replace(['0'],np.nan)\ndf_train['rate_positive_words']=df_train['rate_positive_words'].replace(['0'],np.nan)\ndf_train['abs_title_subjectivity']=df_train['abs_title_subjectivity'].replace(['0'],np.nan)\ndf_train['title_sentiment_polarity']=df_train['title_sentiment_polarity'].replace(['0'],np.nan)\ndf_train['title_subjectivity']=df_train['title_subjectivity'].replace(['0'],np.nan)\ndf_train['max_negative_polarity']=df_train['max_negative_polarity'].replace(['0'],np.nan)\ndf_train['min_negative_polarity']=df_train['min_negative_polarity'].replace(['0'],np.nan)\ndf_train['avg_negative_polarity']=df_train['avg_negative_polarity'].replace(['0'],np.nan)\ndf_train['max_positive_polarity']=df_train['max_positive_polarity'].replace(['0'],np.nan)\ndf_train['min_positive_polarity']=df_train['min_positive_polarity'].replace(['0'],np.nan)\ndf_train['avg_positive_polarity']=df_train['avg_positive_polarity'].replace(['0'],np.nan)\ndf_train['rate_negative_words']=df_train['rate_negative_words'].replace(['0'],np.nan)\n'''","243f2278":"#df_train = df_train.dropna(how='any',axis=0)","511a4a2b":"'''\nx = df[:-20]\ny = df[-20:]\n'''","102083f5":"#model = LinearRegression().fit(df_train, y)","3766b5a9":"#model = linear_model.linearRegression()","acd65003":"#model = RandomForestRegressor(n_estimators=100, max_features='auto', bootstrap=True, max_depth=10, min_samples_leaf=2)","27c7f8b5":"#model.fit(df_train, y)","61c372e7":"model = RandomForestRegressor(min_samples_split=9).fit(df_train,y)","5c3a5f0e":"df_test.drop('url', axis=1, inplace=True)\ntest_preds = model.predict(df_test)","dc479903":"#help(RandomForestRegressor())","1e03add8":"#predicted_test = .predict(df_test)","4e0b4552":"#model.fit(df_train,y)","9d7057f9":"#model.coef_","c00488ae":"#model.intercept_","c260653c":"submit = pd.DataFrame()\nsubmit['Id'] = np.arange(0,len(test_preds))\nsubmit['Expected'] = test_preds\nsubmit.to_csv(\"sample2.csv\", index=False)","f1805e6a":"model.score(df_train,y)","fb8e31e5":"# The coefficients\n\n#print('Coefficients: \\n', model.coef_)\n","f65cc341":"# y = -1*age + 50","3cb4b42d":"#"}}