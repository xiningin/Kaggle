{"cell_type":{"caaef9ca":"code","79450a2b":"code","36e0bda0":"code","9f9996b7":"code","4160b0e5":"code","47a1c3b2":"code","c2ed616c":"code","8b0ea14a":"code","b2dad562":"code","89f9d3ae":"code","958dfb8d":"code","4cadc69f":"code","57b7e5a1":"code","11f89945":"code","fb633292":"code","e4152eaa":"code","c5db086d":"code","02eec600":"code","106ccbc7":"code","fb3b4668":"code","258482eb":"code","29aeb9ca":"code","a2f528c3":"code","29790c1b":"code","1a77a605":"code","6e8767d6":"code","c1d8185b":"code","851fe7af":"code","f5ec5cd1":"code","c5487589":"code","230c7b3f":"code","41a58658":"code","35071491":"code","0b303e8b":"code","704db7b5":"code","cc2bab1b":"markdown","6a01207a":"markdown","00028dc1":"markdown","354da123":"markdown","3dbe4108":"markdown","33bb874f":"markdown","2cd49fce":"markdown","24091994":"markdown","9b87e869":"markdown","5e1f7297":"markdown","f0fc358c":"markdown","5258000c":"markdown","36ca916c":"markdown","003009bf":"markdown","c7a5ee20":"markdown","6265df69":"markdown","396bc90d":"markdown"},"source":{"caaef9ca":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\n# plotting stuff\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\ncolorMap = sns.light_palette(\"blue\", as_cmap=True)\nimport datatable as dt\n# misc\nimport missingno as msno\n# system\nimport warnings\nwarnings.filterwarnings('ignore')\n# garbage collector to keep RAM in check\nimport gc  \nimport matplotlib.gridspec as gridspec\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","79450a2b":"!wc -l ..\/input\/gufhtugu-publications-dataset-challenge\/*.csv","36e0bda0":"df_data = dt.fread('\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv').to_pandas()\ndf_data.head(10)","9f9996b7":"df_data.info()","4160b0e5":"# Number of rows and columns in the Data set\ndf_data.shape","47a1c3b2":"df_data['Time'] = df_data['Order Date & Time'].apply(lambda x: str(x).split(' ')[1])\ndf_data['Date'] = df_data['Order Date & Time'].apply(lambda x: str(x).split(' ')[0])","c2ed616c":"# check the rows have null values in dataset\ndf_data[pd.isnull(df_data).any(axis=1)]","8b0ea14a":"print(\"Number of features with null values:\",np.sum(df_data.isna().sum()>0))","b2dad562":"df_data[df_data.duplicated(['Order Number'])]","89f9d3ae":"df_data['Order Status'].unique()","958dfb8d":"print(df_data['Order Status'].value_counts())","4cadc69f":"px.histogram(df_data, x = 'Order Status', width = 600, height = 400, title = 'Frequency of Order Status')","57b7e5a1":"df_data[\"Payment Method\"] = df_data[\"Payment Method\"].replace('Cash on Delivery (COD)', 'Cash on delivery')\ndf_data[\"Payment Method\"].value_counts()","11f89945":"px.histogram(df_data, x = 'Payment Method', width = 800, height = 500, title = 'Frequency of Payment Method')","fb633292":"fig = px.histogram(df_data, x=\"Order Status\", color=\"Payment Method\")\nfig.show()","e4152eaa":"bookdata = df_data['Book Name'].value_counts().rename_axis('Book_Name').reset_index(name='counts')\nbookdata.head(10)","c5db086d":"px.histogram(bookdata.head(10), x = 'Book_Name',y = 'counts', width = 800, height = 500,  title = 'Top selling books')","02eec600":"bookdata_without_combination = bookdata[bookdata[\"Book_Name\"].str.contains(\"\/\") == False]\nbookdata_without_combination.tail()","106ccbc7":"px.histogram(bookdata_without_combination.tail(10), x = 'Book_Name',y = 'counts', width = 800, height = 500,  title = 'Low selling books')","fb3b4668":"bookdata_with_combination = bookdata[bookdata[\"Book_Name\"].str.contains(\"\/\") == True]\nbookdata_with_combination.tail()","258482eb":"px.histogram(bookdata_with_combination.head(10), x = 'Book_Name',y = 'counts', width = 800, height = 500,  title = 'Top selling books with combination')","29aeb9ca":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['City'].value_counts().rename_axis('City').reset_index(name='counts')\norder=completeorder.head(10)\n\n\nx=order[\"City\"]\ny=order[\"counts\"]\nfig = go.Figure(data=[go.Bar(x=x,\n                             y=y,\n                             text=y,\n            textposition='auto',\n        )])\nfig.update_layout(title_text='Top Selling City with Order status Completed with Counts',\n                   xaxis_title_text='City', \n    yaxis_title_text='Count')\nfig.show()","a2f528c3":"returnorder=df_data[df_data['Order Status']==\"Returned\"]['City'].value_counts().rename_axis('City').reset_index(name='counts')\norder1=returnorder.head(10)\nx=order1[\"City\"]\ny=order1[\"counts\"]\nfig = go.Figure(data=[go.Bar(x=x,\n                             y=y,\n                             text=y,\n            textposition='auto',\n        )])\nfig.update_layout(title_text='Top Selling City with Order status Returned with Counts',\n                 xaxis_title_text='City', \n    yaxis_title_text='Count' )\nfig.show()","29790c1b":"Canceledorder=df_data[df_data['Order Status']==\"Cancelled\"]['City'].value_counts().rename_axis('City').reset_index(name='counts')\norder2=Canceledorder.head(10)\n\n\nx=order2[\"City\"]\ny=order2[\"counts\"]\nfig = go.Figure(data=[go.Bar(x=x,\n                             y=y,\n                             text=y,\n            textposition='auto',\n        )])\nfig.update_layout(title_text='Top Selling City with Order status Canceled with Counts',\n                   xaxis_title_text='City', \n    yaxis_title_text='Count')\nfig.show()","1a77a605":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['Book Name'].value_counts().rename_axis('Book Name').reset_index(name='counts')\norder=completeorder.head(10)\n\n\nx=order[\"Book Name\"]\ny=order[\"counts\"]\nfig = go.Figure(data=[go.Bar(x=x,\n                             y=y,\n                             text=y,\n            textposition='auto',\n        )])\nfig.update_layout(title_text='Top Selling Book with Order status Completed with Counts',\n                   xaxis_title_text='Book', \n    yaxis_title_text='Count')\nfig.show()","6e8767d6":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['Date'].value_counts().rename_axis('Date').reset_index(name='counts')\norder=completeorder.head(15)\n\n\nx=order[\"Date\"]\ny=order[\"counts\"]\nfig = go.Figure(data=[go.Bar(x=x,\n                             y=y,\n                             text=y,\n            textposition='auto',\n        )])\nfig.update_layout(title_text='Top Selling Book with Order status Completed with Respect to date',\n                   xaxis_title_text='Date', \n    yaxis_title_text='Count')\nfig.show()","c1d8185b":"fig = px.histogram(df_data, x=\"Order Status\", color=\"Date\")\nfig.update_layout(title_text='Order status with Respect to date',\n                   xaxis_title_text='Order Status', \n    yaxis_title_text='Count')\nfig.show()","851fe7af":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['City'].value_counts().rename_axis('City').reset_index(name='counts')\norder=completeorder.head(10)\ntop_cities = pd.Series(order.City)\ndf_data[df_data['City'].isin(top_cities)]\nfig = px.histogram(df_data[df_data['City'].isin(top_cities)] , x=\"Order Status\", color=\"City\")\nfig.update_layout(title_text='Order status with Respect to Top Cities',\n                   xaxis_title_text='Order Status', \n    yaxis_title_text='Count')\nfig.show()","f5ec5cd1":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['City'].value_counts().rename_axis('City').reset_index(name='counts')\norder=completeorder.head(10)\ntop_cities = pd.Series(order.City)\ndf_data[df_data['City'].isin(top_cities)]\nfig = px.histogram(df_data[df_data['City'].isin(top_cities)] , x=\"Payment Method\", color=\"City\")\nfig.update_layout(title_text='Payment Method with Respect to Top cities',\n                   xaxis_title_text='Payment Method', \n    yaxis_title_text='Count')\nfig.show()","c5487589":"df_data['date_only'] = pd.to_datetime(df_data['Date'])  \ndf_data['Year'] = [d.year for d in  df_data[\"date_only\"]]","230c7b3f":"completeorder=df_data[df_data['Order Status']==\"Completed\"]['Book Name'].value_counts().rename_axis('Book Name').reset_index(name='counts')\norder=completeorder.head(10)\ntop_Books = pd.Series(order[\"Book Name\"])\n\nfig = px.histogram(df_data[df_data['Book Name'].isin(top_Books)], x=\"Book Name\", color=\"Year\")\nfig.show()","41a58658":"p_table = df_data[['Date', 'Order Number', 'Order Status','Year']]\np_table['Date'] = pd.to_datetime(df_data.Date.iloc[:])\np_table = p_table.groupby(['Date','Year'])['Order Number'].count().reset_index()\np_table.head()","35071491":"fig = px.scatter(p_table, x=\"Date\", y=\"Order Number\",trendline=\"ols\")\nfig.show()","0b303e8b":"from fbprophet import Prophet\nsales_pred = Prophet(interval_width = 0.95)\n# renaming the columns, since fbpropher requires each column to be used to be renamed as ds and y\nsales = p_table.rename(columns={'Date': 'ds', 'Order Number': 'y'})\n# fitting the model\nsales_pred.fit(sales)\n\n# forecasting the number of sales for the next 12 Months\nsales_forecast = sales_pred.make_future_dataframe(periods=12, freq='MS')\nsales_forecast = sales_pred.predict(sales_forecast)\n\n# visualizing the predictions\nplt.figure(figsize=(12, 6))\nsales_pred.plot(sales_forecast, xlabel = 'Date', ylabel = 'Sales')\nplt.title('Book Sales')","704db7b5":"fig2 = sales_pred.plot_components(sales_forecast)","cc2bab1b":"# Book Name","6a01207a":"# Relation with Date and Numbers of Orders and OLS Trend line","00028dc1":"# City","354da123":"# Order Status","3dbe4108":"# Order Status vs Payment Method","33bb874f":"This is the one of its kinds book sales dataset from Pakistan. It contains 200,000 book orders from January 2019 to January 2021. The data was collected from the merchant (Gufhtugu Publications www.Gufhtugu.com) who are partner in this research study. ","2cd49fce":"# Data Description","24091994":"\n## This is second version of EDA. Work in progress and if you like my work do \"up vote\"","9b87e869":"# Payment Method","5e1f7297":"# Null Values Handling","f0fc358c":"### There are three data set GP Order 2, 4, 5. I am going to use Update(GP Orders - 5.csv) dataset which have additional fields.","5258000c":"### There is no dublicate values","36ca916c":"In 2019 Data Science was a bestseller with 303 copies.\n\nIn 2020 the books online and the bestseller was Earn Money online with 2206 copies.\n\nIn 2021 the best seller is Lucy Draw book with 487 copies and the second best was Earn Money online with 373 copies sold in the first few days.\n","003009bf":"#  Trend, yearly seasonality, and weekly seasonality of the time series.","c7a5ee20":"**Please upvote if you find this notebook helpful! \ud83d\ude0a Thank you! I would also be very happy to receive feedback on my work.**","6265df69":"# Time series forecasting ","396bc90d":"# Data Overview"}}