{"cell_type":{"dc317f7f":"code","ea1658d9":"code","19ef52f1":"code","366494cb":"code","9caa4752":"code","c877dd44":"code","b90d6b32":"code","da867fcd":"code","c76c48db":"code","4855bda8":"code","f1142661":"code","556cef20":"code","16122400":"code","c074b081":"code","06e4e198":"code","edfbb014":"code","60e7c3ac":"code","3c3105ad":"code","1c0da438":"markdown","5a74fde5":"markdown","38594405":"markdown","8907bd32":"markdown","6a9c09d3":"markdown","b2516f57":"markdown","564ef9d9":"markdown","6cf69170":"markdown","683e6e01":"markdown","cf4eb794":"markdown"},"source":{"dc317f7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","ea1658d9":"df1 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-apr14.csv\")\ndf2 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-aug14.csv\")\ndf3 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-jul14.csv\")\ndf4 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-jun14.csv\")\ndf5 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-may14.csv\")\ndf6 = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-sep14.csv\")","19ef52f1":"data_full = pd.concat([df1, df2, df3, df4, df5, df6])","366494cb":"data_full.shape","9caa4752":"clus = data_full[['Lat', 'Lon']]\nclus.dtypes","c877dd44":"import matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer","b90d6b32":"model = KMeans()\nvisualizer = KElbowVisualizer(model, k = (1, 18))\nvisualizer.fit(clus)\nvisualizer.show()","da867fcd":"kmeans = KMeans(n_clusters = 5, random_state = 0)\nkmeans.fit(clus)","c76c48db":"centroids = kmeans.cluster_centers_\ncentroids","4855bda8":"clocation = pd.DataFrame(centroids, columns = ['Latitude', 'Longitude'])","f1142661":"clocation.head()","556cef20":"plt.scatter(clocation['Latitude'], clocation['Longitude'], marker = \"x\", color = 'R', s = 200)","16122400":"import folium\ncentroid = clocation.values.tolist()\n\nmap = folium.Map(location = [40.71600413400166, -73.98971408426613], zoom_start = 10)\nfor point in range(0, len(centroid)):\n    folium.Marker(centroid[point], popup = centroid[point]).add_to(map)\n\nmap","c074b081":"label = kmeans.labels_\nlabel","06e4e198":"data_new = data_full.copy()\ndata_new['Clusters'] = label\ndata_new","edfbb014":"import seaborn as sb\nsb.factorplot(data = data_new, x = \"Clusters\", kind = \"count\", size = 7, aspect = 2)","60e7c3ac":"count_3 = 0\ncount_0 = 0\nfor value in data_new['Clusters']:\n    if value == 3:\n        count_3 += 1\n    if value == 0:\n        count_0 += 1\nprint(count_0, count_3)","3c3105ad":"new_location = [(40.86, -75.56)]\nkmeans.predict(new_location)","1c0da438":"# Predict cluster for new location","5a74fde5":"# Selecting feature\n","38594405":"# Grouping and visualizing the total number of clusters","8907bd32":"# Assigning a number of cluster in K-Means Algorithim","6a9c09d3":"# Visualize centroids","b2516f57":"# Plot the number of clusters","564ef9d9":"# Stroring the Cluster Centroids","6cf69170":"# Compare the cluster","683e6e01":"# **READ ALL 6 FILES DATASET**","cf4eb794":"# Row bind using pandas concatenate "}}