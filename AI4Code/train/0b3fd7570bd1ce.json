{"cell_type":{"d7a53e57":"code","f41457ec":"code","fb8dc5f6":"code","f52821d1":"code","3b889e1e":"code","e79aa471":"code","a9603f4a":"code","046adce1":"code","9fc253bd":"code","8a7318c8":"code","dee82634":"code","eafe9b6a":"code","3e8ced1d":"code","283a430c":"code","eecbab46":"code","df21d5a6":"code","a48bb58f":"code","5ca0e50a":"code","82d3ca38":"code","95ce9608":"code","c8904fd6":"code","15287e3e":"code","3dfe7f89":"code","17400260":"code","e5ed490c":"markdown","46603e1a":"markdown","ca307fb3":"markdown"},"source":{"d7a53e57":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f41457ec":"#\u8f09\u5165package\u8207\u6a94\u6848\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nimport seaborn as sb\n\n\ndf_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","fb8dc5f6":"df_train.head()","f52821d1":"#\u6aa2\u67e5\u662f\u5426\u6709\u907a\u6f0f\u503c\ndf_train.info()\n#training data \u4e2d age\u3001cabin\u8207embarked\u6709\u907a\u6f0f\u503c\u9808\u8655\u7406","3b889e1e":"df_test.info()\n#testing data\u4e2dage\u3001fare\u3001cabin\u6709\u907a\u6f0f\u503c\u9808\u8655\u7406","e79aa471":"#\u5c07training data\u8207testing data\u5408\u4f75\ndf_data = df_train.append(df_test)\ndf_data","a9603f4a":"#reset\ndf_data.reset_index(inplace=True, drop=True)\ndf_data","046adce1":"#\u89c0\u5bdf\u76f8\u95dc\u4fc2\u6578\u77e9\u9663\nplt.subplots(figsize=(8, 5))\nsb.heatmap(df_data.corr(), annot=True, cmap=\"RdYlGn\")\nplt.show()  ","9fc253bd":"#\u89c0\u5bdf\u5404\u8b8a\u6578\u5206\u5e03\nsb.countplot(df_data['Survived'])","8a7318c8":"sb.countplot(df_data['Sex'], hue=df_data['Survived'])\n#\u5973\u6027\u5b58\u6d3b\u7387\u9ad8\u65bc\u7537\u6027","dee82634":"sb.countplot(df_data['Pclass'], hue=df_data['Survived'])\n#\u8259\u7b49\u8d8a\u9ad8\u5b58\u6d3b\u7387\u8d8a\u9ad8","eafe9b6a":"sb.countplot(df_data['Embarked'], hue=df_data['Survived'])\n#\u5f9es\u6e2f\u4e0a\u8239\u7684\u5b58\u6d3b\u7387\u504f\u4f4e","3e8ced1d":"ageplot = sb.FacetGrid(df_data, col='Survived')\nageplot.map(sb.distplot, 'Age', kde=False)\n#\u5e74\u9f61\u8207\u662f\u5426\u5b58\u6d3b\u770b\u8d77\u4f86\u95dc\u4fc2\u4e0d\u6703\u5f88\u5927","283a430c":"fareplot = sb.FacetGrid(df_data, col='Survived')\nfareplot.map(sb.distplot, 'Fare', kde=False)\n#\u7968\u50f9\u4f4e\u7684\u5b58\u6d3b\u7387\u8d8a\u4f4e","eecbab46":"parchplot = sb.FacetGrid(df_data, col='Survived')\nparchplot.map(sb.distplot, 'Parch', kde=False)\n#\u6c92\u6709\u8ddf\u7236\u6bcd\u5c0f\u5b69\u4e00\u8d77\u4f86\u7684\u751f\u5b58\u7387\u6bd4\u8d77\u6709\u8ddf\u7236\u6bcd\u5c0f\u5b69\u4f86\u7684\u4f4e","df21d5a6":"sibspplot = sb.FacetGrid(df_data, col='Survived')\nsibspplot.map(sb.distplot, 'SibSp', kde=False)\n#\u55ae\u8eab\u7684\u6bd4\u8d77\u8ddf\u5144\u5f1for\u592b\u59bb\u4e00\u8d77\u4f86\u7684\u5b58\u6d3b\u7387\u4f4e","a48bb58f":"#\u8655\u7406\u907a\u6f0f\u503c\uff0c\u524d\u9762\u63d0\u5230age\u3001embarked\u3001fare\u8ddfcabin\u90fd\u6709\u907a\u6f0f\u503c\n#\u5e74\u9f61\u4ee5\u5e73\u5747\u503c\u88dc\u4e0a\ndf_data['Age'] = df_data['Age'].fillna(df_data['Age'].mean())\n#embarked\u50c5\u6709\u5169\u7b46\u907a\u6f0f\u503c\uff0c\u7528\u6700\u591a\u7684s\u88dc\u4e0a\ndf_data['Embarked'] = df_data['Embarked'].fillna('S')\n#\u7968\u50f9\u4ee5\u5e73\u5747\u503c\u88dc\u4e0a\ndf_data['Fare'] = df_data['Fare'].fillna(df_data['Fare'].mean())\n\n#\u6aa2\u67e5\u662f\u5426\u9084\u6709\u8b8a\u6578\u6709\u907a\u6f0f\u503c\ndf_data.count()\n#cabin\u907a\u6f0f\u503c\u592a\u591a\uff0c\u4e4b\u5f8c\u6703drop\u6389\u4e0d\u7d0d\u5165\u6a21\u578b","5ca0e50a":"#\u5c07\u985e\u5225\u8cc7\u6599\u8f49\u63db\u70ba\u6574\u6578\ndf_data['Sex'] = df_data['Sex'].astype('category').cat.codes\ndf_data['Embarked'] = df_data['Embarked'].astype('category').cat.codes\ndf_data['Pclass'] = df_data['Pclass'].astype('category').cat.codes\ndf_data","82d3ca38":"#\u5c07train\u8ddftest data\u5206\u5272\nTrain = df_data[pd.notnull(df_data['Survived'])].sort_values(by=[\"PassengerId\"])\nTest = df_data[~pd.notnull(df_data['Survived'])].sort_values(by=[\"PassengerId\"])\n","95ce9608":"#\u5c07training data\u4e2d\u4e0d\u8981\u7d0d\u5165\u6a21\u578b\u7684\u8b8a\u6578drop\u6389\nTrain.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True) ","c8904fd6":"Train.head()","15287e3e":"#training data\u5206\u5272\nX = Train[['Embarked','Fare','Parch','Pclass','Sex','SibSp']]\ny = Train['Survived']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=33)","3dfe7f89":"#\u5957\u5165xgboost\u6a21\u578b\nfrom xgboost import XGBClassifier\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)\nprint('The accuracy of XGB Classifier on testing set:', model.score(X_test, y_test))","17400260":"#\u9810\u6e2c\u7d50\u679c\u7522\u751f\nTest = Test[['Embarked','Fare','Parch','Pclass','Sex','SibSp']]\nsubmit = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\ntest_predict =  model.predict(Test)\nsubmit['Survived'] = test_predict\nsubmit['Survived'] = submit['Survived'].astype(int)\nsubmit.to_csv('submit.csv', index= False)\n\nsubmit","e5ed490c":"#### ","46603e1a":"\u8cc7\u6599\u8655\u7406","ca307fb3":"\u89c0\u5bdf\u8b8a\u6578\u76f8\u95dc\u6027\u8207\u8b8a\u6578\u5206\u5e03"}}