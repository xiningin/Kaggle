{"cell_type":{"98b87821":"code","02792776":"code","2357be4f":"code","a0d0fc05":"code","c5150b73":"code","fae1e53a":"code","28f6ed01":"code","885161c8":"code","38719ded":"code","a0d71db4":"code","b7043697":"code","e0013579":"code","d516eaf0":"code","e66beb0a":"markdown","f06475d9":"markdown","a213c972":"markdown","bbe70e8f":"markdown","f825bd9e":"markdown","13330201":"markdown","59d36b8b":"markdown","cc75571e":"markdown","7fd6ad6e":"markdown"},"source":{"98b87821":"# Import relevant packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","02792776":" # Define a dictionary containing Pi Network data\ndata = {'Mainnet Holders': [30000000],\n        'Circulating Supply': [1000000000]}","2357be4f":"# Convert the dictionary into DataFrame\ndf = pd.DataFrame(data)\ndf","a0d0fc05":"# Declare more columns\ndata = {'Mainnet Holders': [30000000, 0, 0, 0, 0],\n        'Circulating Supply': [1000000000, 0, 0, 0, 0],\n# New added columns\n        'Lost_Accounts': ['Phone verification', 'Facebook verification', 'Lost phone', 'Lost facebook', 'KYC failure'],\n        'Lost_Accounts_Percentage': [0.05, 0.05, 0.1, 0.1, 0.2],\n        'PI Holders After Wipe': [30000000 * 0.05, 30000000 * 0.05, 30000000 * 0.1, 30000000 * 0.1, 30000000 * 0.2],\n        'Total PI Holders After Wipe': [30000000 * 0.05 + 30000000 * 0.05 + 30000000 * 0.1 + 30000000 * 0.1 + 30000000 * 0.2, 0, 0, 0, 0]}","c5150b73":"df = pd.DataFrame.from_dict(data, orient='index')\ndf = df.transpose()\ndf.head(5)","fae1e53a":"# Declare more columns\ndata = {'Mainnet Holders': [30000000, 0, 0, 0, 0],\n        'Circulating Supply': [1000000000, 0, 0, 0, 0],\n# New added columns\n        'Lost_Accounts': ['Phone verification', 'Facebook verification', 'Lost phone', 'Lost facebook', 'KYC failure'],\n        'Lost_Accounts_Percentage': [0.05, 0.05, 0.1, 0.1, 0.2],\n        'PI Holders After Wipe': [30000000 * 0.05, 30000000 * 0.05, 30000000 * 0.1, 30000000 * 0.1, 30000000 * 0.2],\n        'Total PI Holders After Wipe': [30000000 * 0.05 + 30000000 * 0.05 + 30000000 * 0.1 + 30000000 * 0.1 + 30000000 * 0.2, 0, 0, 0, 0],\n# New added columns\n        'Average Early Adopters (3 years)': [25000, 0, 0, 0, 0],\n        'Average Mid Adopters (2 years)': [5000, 0, 0, 0, 0],\n        'Average Late Adopters (1 year)': [1200, 0, 0, 0, 0]}","28f6ed01":"df = pd.DataFrame.from_dict(data, orient='index')\ndf = df.transpose()\ndf.head(5)","885161c8":"# Declare more columns\ndata = {'Mainnet Holders': [30000000, 0, 0, 0, 0],\n        'Circulating Supply': [1000000000, 0, 0, 0, 0],\n# New added columns\n        'Lost_Accounts': ['Phone verification', 'Facebook verification', 'Lost phone', 'Lost facebook', 'KYC failure'],\n        'Lost_Accounts_Percentage': [0.05, 0.05, 0.1, 0.1, 0.2],\n        'PI Holders After Wipe': [30000000 * 0.05, 30000000 * 0.05, 30000000 * 0.1, 30000000 * 0.1, 30000000 * 0.2],\n        'Total PI Holders After Wipe': [30000000 * 0.05 + 30000000 * 0.05 + 30000000 * 0.1 + 30000000 * 0.1 + 30000000 * 0.2, 0, 0, 0, 0],\n# New added columns\n        'Average Early Adopters (3 years)': [25000, 0, 0, 0, 0],\n        'Average Mid Adopters (2 years)': [5000, 0, 0, 0, 0],\n        'Average Late Adopters (1 year)': [1200, 0, 0, 0, 0],\n# New added columns\n        'Average holders percentage': [0.5, 0.35, 0.15],\n        'Average PI Token Held': [0.5 * 1200, 0.35 * 5000, 0.15 * 25000, 0, 0],\n        'Total Average Token Held': [600 + 1750 + 3750, 0, 0, 0, 0]}","38719ded":"df = pd.DataFrame.from_dict(data, orient='index')\ndf = df.transpose()\ndf.head(5)","a0d71db4":"# Declare more columns\ndata = {'Mainnet Holders': [30000000, 0, 0, 0, 0],\n        'Circulating Supply': [1000000000, 0, 0, 0, 0],\n# New added columns\n        'Lost_Accounts': ['Phone verification', 'Facebook verification', 'Lost phone', 'Lost facebook', 'KYC failure'],\n        'Lost_Accounts_Percentage': [0.05, 0.05, 0.1, 0.1, 0.2],\n        'PI Holders After Wipe': [30000000 * 0.05, 30000000 * 0.05, 30000000 * 0.1, 30000000 * 0.1, 30000000 * 0.2],\n        'Total PI Holders After Wipe': [30000000 * 0.05 + 30000000 * 0.05 + 30000000 * 0.1 + 30000000 * 0.1 + 30000000 * 0.2, 0, 0, 0, 0],\n# New added columns\n        'Average Early Adopters (3 years)': [25000, 0, 0, 0, 0],\n        'Average Mid Adopters (2 years)': [5000, 0, 0, 0, 0],\n        'Average Late Adopters (1 year)': [1200, 0, 0, 0, 0],\n# New added columns\n        'Average holders percentage': [0.5, 0.35, 0.15],\n        'Average PI Token Held': [0.5 * 1200, 0.35 * 5000, 0.15 * 25000, 0, 0],\n        'Total Average Token Held': [600 + 1750 + 3750, 0, 0, 0, 0],\n# Market Capitalization calculation\n        'Market Capitalization': [6100 * 15000000, 0, 0, 0, 0]}","b7043697":"df = pd.DataFrame.from_dict(data, orient='index')\ndf = df.transpose()\ndf.head(5)","e0013579":"# Declare more columns\ndata = {'Mainnet Holders': [30000000, 0, 0, 0, 0],\n        'Circulating Supply': [1000000000, 0, 0, 0, 0],\n# New added columns\n        'Lost_Accounts': ['Phone verification', 'Facebook verification', 'Lost phone', 'Lost facebook', 'KYC failure'],\n        'Lost_Accounts_Percentage': [0.05, 0.05, 0.1, 0.1, 0.2],\n        'PI Holders After Wipe': [30000000 * 0.05, 30000000 * 0.05, 30000000 * 0.1, 30000000 * 0.1, 30000000 * 0.2],\n        'Total PI Holders After Wipe': [30000000 * 0.05 + 30000000 * 0.05 + 30000000 * 0.1 + 30000000 * 0.1 + 30000000 * 0.2, 0, 0, 0, 0],\n# New added columns\n        'Average Early Adopters (3 years)': [25000, 0, 0, 0, 0],\n        'Average Mid Adopters (2 years)': [5000, 0, 0, 0, 0],\n        'Average Late Adopters (1 year)': [1200, 0, 0, 0, 0],\n# New added columns\n        'Average holders percentage': [0.5, 0.35, 0.15],\n        'Average PI Token Held': [0.5 * 1200, 0.35 * 5000, 0.15 * 25000, 0, 0],\n        'Total Average Token Held': [600 + 1750 + 3750, 0, 0, 0, 0],\n# Market Capitalization calculation\n        'Market Capitalization': [6100 * 15000000, 0, 0, 0, 0],\n# Price prediction calculation\n        'Predicted Price': [91500000000 \/ 10000000000, 0, 0, 0, 0]}","d516eaf0":"df = pd.DataFrame.from_dict(data, orient='index')\ndf = df.transpose()\ndf.head(5)","e66beb0a":"Packages load:","f06475d9":"Now finally we can calculate the predicted price if the circulating supply would be **10 Bilions.**\nThe calculation process is market cap divided by circulating supply.\nlet us add that column to our dataframe.","a213c972":"We currently have **25M+ pioneers** so let us assume we will have **30M pioneers** on mainnet, as the mainnet release would be in December maximum.\nAlso let us assume the circulating supply would be **10 Bilion**, we will check if it's possible in our analyze.\nadd table columns of the data:","bbe70e8f":"From our calculations pi network estimated mainnet price would be **9.15$~** considering the circulating supply is **10 Billion.**","f825bd9e":"We know that after our calculation the supposed total pi holders are **15 million.**\nI will add three columns of the supposed predicted average of each pioneer by year differences included the security and pioneer added by estimate.","13330201":"**Small Pi Network price prediction project.**\n\n**Key Task:** Estimate the prediction of pi network mainnet price.\n\nAuthor: Ennry","59d36b8b":"Now that we have the Average pi token held, we can calculate the market capitalization with the formula Average pi token held * the pi holders after the wipe.\nLet us create the columns for the calculation.","cc75571e":"We want to know the market cap in order to know the price, the formula for that is **(average tokens hold per pioneer * holders)**, but we also need the pi network holders after a wipe of many reasons.\nI will create lost accounts, lost accounts percentage lose and PI holders after wipe columns.","7fd6ad6e":"Now we can estimate the average holders percentage and the average pi token held.\nThe estimations are based of logic. **2019 Adopters** should be the lowest, **2020 adopters** should be in the middle and the **2021 adopters** should be the most of the current holders, since they are the most likely pioneers to stay in the project, since they joined nearing the mainnet release."}}