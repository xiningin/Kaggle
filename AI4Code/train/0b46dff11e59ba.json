{"cell_type":{"f1a13cbd":"code","1b9ab05b":"code","d879963a":"code","a40f2c7f":"code","99fa6529":"code","2ecd9abd":"code","9107fdc9":"code","4ac90b45":"code","cdcb18a0":"code","a993bac4":"code","84773c51":"code","31119ff3":"code","c56921e5":"code","33527ce4":"code","1c0ed4f1":"code","d8232c84":"code","915be52a":"code","cdcd5bb1":"code","864c8dfa":"code","99a6b09d":"code","630b2174":"code","fb03fd2f":"code","8ca73c5c":"code","bb0892ea":"code","a4c6e959":"code","f450b96c":"code","9b614f24":"code","a345b80a":"code","32c587eb":"code","7ca88536":"code","39ee606d":"code","b5691237":"code","22a87836":"code","2abfac6a":"code","c6607fc1":"code","5eda5825":"code","e5f95770":"code","4e7f5db5":"code","198ac3d8":"code","5ae9788c":"code","9de99944":"code","574f1bd1":"code","6633c5ea":"code","3833a3fb":"code","ea5ac308":"code","179e1ab7":"code","754ade69":"code","b16fe953":"code","95f18f7b":"markdown","2934ae11":"markdown","83a35d43":"markdown","a3ce5ed6":"markdown","9388c600":"markdown","c2c131ee":"markdown","982a40a8":"markdown","3ce5bdd1":"markdown","d5784139":"markdown","259bdacf":"markdown","994f4704":"markdown","eb41c06e":"markdown","0d24097a":"markdown","9ffd3d2f":"markdown","98c28195":"markdown","15a12bc2":"markdown","5235af52":"markdown","4cb526f6":"markdown","e17093df":"markdown","fd98bce0":"markdown"},"source":{"f1a13cbd":"%matplotlib inline","1b9ab05b":"import matplotlib.pyplot as plt\nimport pandas as pd","d879963a":"import os\n\nprint(os.listdir('..\/input'))","a40f2c7f":"df = pd.read_csv(\"..\/input\/Online Retail.csv\", sep = ',',encoding = \"ISO-8859-1\", header= 0)\ndf.head()","99fa6529":"df.shape","2ecd9abd":"df.dtypes","9107fdc9":"# parse date\ndf['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'], format = \"%d-%m-%Y %H:%M\")\ndf.head()","4ac90b45":"# Visualize the distributuion of Quantity using a box plot\n\nax = df['Quantity'].plot.box(\n    showfliers=False, # without outliers\n    grid=True,\n    figsize=(10, 7)\n)\n\nax.set_ylabel('Order Quantity')\nax.set_title('Quantity Distribution')\n\nplt.suptitle(\"\")\nplt.show()","cdcb18a0":"pd.DataFrame(df['Quantity'].describe())","a993bac4":"# Filter out all the cancelled orders\n\ndf.loc[df['Quantity'] > 0].shape","84773c51":"df = df.loc[df['Quantity'] > 0]","31119ff3":"df.shape","c56921e5":"# Look into the numbers of orders received over time\n\nmonthly_orders_df = df.set_index('InvoiceDate')['InvoiceNo'].resample('M').nunique()","33527ce4":"monthly_orders_df","1c0ed4f1":"# Visualize this monthly data with a line chart\n\nax = pd.DataFrame(monthly_orders_df.values).plot(\n    grid=True,\n    figsize=(10, 7),\n    legend=False\n)\n\nax.set_xlabel('date')\nax.set_ylabel('number of orders\/invoices')\nax.set_title('Total Number of Orders Over Time')\n\nplt.xticks(\n    range(len(monthly_orders_df.index)), \n    [x.strftime('%m.%Y') for x in monthly_orders_df.index], \n    rotation=45\n)\n\nplt.show()","d8232c84":"# Look at the data in December 2011\n\ninvoice_dates = df.loc[\n    df['InvoiceDate'] >= '2011-12-01',\n    'InvoiceDate'\n]","915be52a":"print('Min date: %s\\nMax date: %s' % (invoice_dates.min(), invoice_dates.max()))","cdcd5bb1":"# Remove data for December, 2011\n\ndf = df.loc[df['InvoiceDate'] < '2011-12-01']","864c8dfa":"df.shape","99a6b09d":"monthly_orders_df = df.set_index('InvoiceDate')['InvoiceNo'].resample('M').nunique()","630b2174":"monthly_orders_df","fb03fd2f":"ax = pd.DataFrame(monthly_orders_df.values).plot(\n    grid=True,\n    figsize=(10,7),\n    legend=False\n)\n\nax.set_xlabel('date')\nax.set_ylabel('number of orders')\nax.set_title('Total Number of Orders Over Time')\n\nax.set_ylim([0, max(monthly_orders_df.values)+500])\n\nplt.xticks(\n    range(len(monthly_orders_df.index)), \n    [x.strftime('%m.%Y') for x in monthly_orders_df.index], \n    rotation=45\n)\n\nplt.show()","8ca73c5c":"# Built the monthly revenue data column\n\ndf['Sales'] = df['Quantity'] * df['UnitPrice']","bb0892ea":"# Get the monthly revenue data\n\nmonthly_revenue_df = df.set_index('InvoiceDate')['Sales'].resample('M').sum()","a4c6e959":"monthly_revenue_df","f450b96c":"# Visualize this data with a line plot\n\nax = pd.DataFrame(monthly_revenue_df.values).plot(\n    grid=True,\n    figsize=(10,7),\n    legend=False\n)\n\nax.set_xlabel('date')\nax.set_ylabel('sales')\nax.set_title('Total Revenue Over Time')\n\nax.set_ylim([0, max(monthly_revenue_df.values)+100000])\n\nplt.xticks(\n    range(len(monthly_revenue_df.index)), \n    [x.strftime('%m.%Y') for x in monthly_revenue_df.index], \n    rotation=45\n)\n\nplt.show()","9b614f24":"df.head()","a345b80a":"# Aggregate data for each order using InvoiceNo and InvoiceDate\n\ninvoice_customer_df = df.groupby(\n    by=['InvoiceNo', 'InvoiceDate'],\n).agg({\n    'Sales': sum,\n    'CustomerID': max,\n    'Country': max,\n}).reset_index()","32c587eb":"invoice_customer_df.head()","7ca88536":"# Aggregate this data per month and \n# compute the number of customers who made more than one purchase in a given month\n\nmonthly_repeat_customers_df = invoice_customer_df.set_index('InvoiceDate').groupby([\n    pd.Grouper(freq='M'), 'CustomerID'# group the index InvoiceDate by each month and by CustomerID\n]).filter(lambda x: len(x) > 1). resample('M').nunique()['CustomerID']# only those customers with more than one order","39ee606d":"monthly_repeat_customers_df","b5691237":"monthly_unique_customers_df = df.set_index('InvoiceDate')['CustomerID'].resample('M').nunique()","22a87836":"monthly_unique_customers_df","2abfac6a":"# Calculate the percentages of repeat customers for each month\n\nmonthly_repeat_percentage = monthly_repeat_customers_df \/ monthly_unique_customers_df * 100.0\nmonthly_repeat_percentage","c6607fc1":"# Visualize all this data in a chart\n\nax = pd.DataFrame(monthly_repeat_customers_df.values).plot(\n    figsize=(10,7)\n)\n\npd.DataFrame(monthly_unique_customers_df.values).plot(\n    ax=ax,\n    grid=True\n)\n\n\nax2 = pd.DataFrame(monthly_repeat_percentage.values).plot.bar(\n    ax=ax,\n    grid=True,\n    secondary_y=True, # add another y-axis on the rightside of the chart\n    color='green',\n    alpha=0.2\n)\n\nax.set_xlabel('date')\nax.set_ylabel('number of customers')\nax.set_title('Number of All vs. Repeat Customers Over Time')\n\nax2.set_ylabel('percentage (%)')\n\nax.legend(['Repeat Customers', 'All Customers'])\nax2.legend(['Percentage of Repeat'], loc='upper right')\n\nax.set_ylim([0, monthly_unique_customers_df.values.max()+100])\nax2.set_ylim([0, 100])\n\nplt.xticks(\n    range(len(monthly_repeat_customers_df.index)), \n    [x.strftime('%m.%Y') for x in monthly_repeat_customers_df.index], \n    rotation=45\n)\n\nplt.show()","5eda5825":"monthly_rev_repeat_customers_df = invoice_customer_df.set_index('InvoiceDate').groupby([\n    pd.Grouper(freq='M'), 'CustomerID'# group the index InvoiceDate by each month and by CustomerID\n]).filter(lambda x: len(x) > 1). resample('M').sum()['Sales']# sum to add all the sales from repeat customers for a given month","e5f95770":"monthly_rev_repeat_customers_df","4e7f5db5":"# Calculate the percentages of the monthly revenue generated by the repeat customers\n\nmonthly_rev_perc_repeat_customers_df = monthly_rev_repeat_customers_df\/monthly_revenue_df * 100.0","198ac3d8":"monthly_rev_perc_repeat_customers_df","5ae9788c":"# Visualize this monthly revenue\n\nax = pd.DataFrame(monthly_revenue_df.values).plot(figsize=(12,9))\n\npd.DataFrame(monthly_rev_repeat_customers_df.values).plot(\n    ax=ax,\n    grid=True,\n)\n\nax.set_xlabel('date')\nax.set_ylabel('sales')\nax.set_title('Total Revenue vs. Revenue from Repeat Customers')\n\nax.legend(['Total Revenue', 'Repeat Customer Revenue'])\n\nax.set_ylim([0, max(monthly_revenue_df.values)+100000])\n\nax2 = ax.twinx()\n\npd.DataFrame(monthly_rev_perc_repeat_customers_df.values).plot(\n    ax=ax2,\n    kind='bar',\n    color='g',\n    alpha=0.2\n)\n\nax2.set_ylim([0, max(monthly_rev_perc_repeat_customers_df.values)+30])\nax2.set_ylabel('percentage (%)')\nax2.legend(['Repeat Revenue Percentage'])\n\nax2.set_xticklabels([\n    x.strftime('%m.%Y') for x in monthly_rev_perc_repeat_customers_df.index\n])\n\nplt.show()","9de99944":"# Calculate the number  of items sold for each product for each period\n\ndate_item_df = pd.DataFrame(\n    df.set_index('InvoiceDate').groupby([\n        pd.Grouper(freq='M'), 'StockCode'\n    ])['Quantity'].sum()\n)\n\ndate_item_df","574f1bd1":"# Rank items by the last month sales\n# Specifically, see what items were sold the most on November 30, 2011\n\nlast_month_sorted_df = date_item_df.loc['2011-11-30'].sort_values(\n    by = 'Quantity', ascending=False\n).reset_index()\n\nlast_month_sorted_df.head(5)","6633c5ea":"# Aggregate the monthly sales data for these 5 products\n\ndate_item_df = pd.DataFrame(\n    df.loc[\n        df['StockCode'].isin(['23084', '84826', '22197', '22086', '85099B'])\n    ].set_index('InvoiceDate').groupby([\n        pd.Grouper(freq='M'), 'StockCode'\n    ])['Quantity'].sum()\n)\n\ndate_item_df","3833a3fb":"# Transform this data into a tabular format\n\ntrending_items_df = date_item_df.reset_index().pivot('InvoiceDate','StockCode').fillna(0)\ntrending_items_df.head(2)","ea5ac308":"trending_items_df = trending_items_df.reset_index()\ntrending_items_df.head(2)","179e1ab7":"trending_items_df = trending_items_df.set_index('InvoiceDate')\ntrending_items_df.head(2)","754ade69":"trending_items_df.columns = trending_items_df.columns.droplevel(0)\ntrending_items_df","b16fe953":"# Visualize this time series for the top five best-sellers\n\nax = pd.DataFrame(trending_items_df.values).plot(\n    figsize=(10,7),\n    grid=True,\n)\n\nax.set_ylabel('number of purchases')\nax.set_xlabel('date')\nax.set_title('Item Trends over Time')\n\nax.legend(trending_items_df.columns, loc='upper left')\n\nplt.xticks(\n    range(len(trending_items_df.index)), \n    [x.strftime('%m.%Y') for x in trending_items_df.index], \n    rotation=45\n)\n\nplt.show()","95f18f7b":"### - Time-series Repeat Customers\n\nA typical strong and stable business has a steady stream of sales from existing customers.\n<br>We are going to see how much of the sales are from repeat and existing customers of the current online retail business.","2934ae11":"Resample function resamples and converts time series data into the monthly time series data, by using 'M'.","83a35d43":"As we can see, some orders have negative quantities because the cancelled or refunded orders are recorded with negative values in the Qunatity column of our dataset.","a3ce5ed6":"# 2. Product Analytics","9388c600":"## Time Series Analyses\n\nUnderstanding the overall time series trends in the revenue and the numbers of orders or purchases, this helps us realize whether the business is growing or shrinking in terms of both the overall revenue and the numbers of orders we receive over time.","c2c131ee":"We see a similar pattern as before, where there is a significant increase in the revenue from September 2011.\n<br>Whereas we have learnt that roughly 20-30% of the customers who made purchases are <u>repeat customer<\/u>, 40-50% of the total revenue is from <u>repeat customers<\/u>:\n<br>__this means that roughly half of the revenue was driven by the 20-30% of the customer base who repeats purchases.__\n<br>__<u>This demonstrates how important it is to retain customers!<\/u>__","982a40a8":"In the list above, we got the top five best-sellers of November 2011 with the codes: 23084, 84826, 22197, 22086, and 85099B.","3ce5bdd1":"The drop we noticed before is due to the fact that we only have the data from December 1, to December 9, 2011. \nSo, it would be a misrepresentation to consider the month of December, 2011, for doing our time series analysis.","d5784139":"Roughly about 20 to 30% of the customers are repeat customers.","259bdacf":"__The numbers of both reapeat and all customers start to rise significantly from September 2011.\n<br>The percentage of <u>repeat  customers<\/u> seems to stay pretty consistent at about 20% to 30%.__\n<br>This online retail business will benefit from this steady stream of repeat customers, as they will help the business to generate a stable stream of sales.","994f4704":"### - Popular Items Over Time\n\nWe are going to analyze how the customers interact with products that are sold, specifically with the top five best-sellers.","eb41c06e":"### - Time-series Revenue","0d24097a":"### - Revenue from Repeat Customers\n\nNow we analyze how much of the monthly revenue comes from these __<u>repeat customers<\/u>__.","9ffd3d2f":"# 1. Load Data\n\nThe data we are going to load is a transnational data set which contains all the transactions occurring between 01\/12\/2010 and 09\/12\/2011 for a UK-based and registered non-store online retail.\n<br>The company mainly sells unique all-occasion gifts. \n<br>Many customers of the company are wholesalers.","98c28195":"We can notice that there is a sudden radical drop in the number of orders in December 2011.","15a12bc2":"__The monthly number of orders seems to float around 1,500 from December 2010 to August 2011.\n<br>It increases significantly from September 2011, and almost doubles by November 2011.__\n<br>This spike in sales could be provoked by a growth in business or by seasonal effects.\n<br>To know this, we should compare the current year's data against the previuos year's data.","5235af52":"The sales of the five products spiked in November 2011, especially with the product with the stock code, __84826, which were close to $0$ from February 2010 to October 2011.Then, it suddenly spiked in November 2011.\n<br>The popularity of the other top five products seems to have built up in the few months priors to November 2011.__\n<br> As a marketer, we should verify the reasons or the drivers behind this buildup of rising popularity for all the five products.","4cb526f6":"__<u>Analyzing trends and changes in the popularity of products<\/u> helps us:__\n<br>\n- __understand what customers like and purchase the most__\n<br>\n- __tailor the marketing messages__\n<br>\n- __improve customer engagement__\n<br>\n- __get higher customer conversion rate__\n<br>\n- __build a product recommendation engine.__","e17093df":"We see a similar pattern to the previous Total Number of Orders Over Time chart.\n<br>Here, __the monthly revenue floats around 700,000 from December 2010 to August 2011.\n<br> It increases significantly from September 2011.__\n<br>To know the reason of this spike, we need to look further back in the sales history.","fd98bce0":"### - Quantity Distribution"}}