{"cell_type":{"eb947ada":"code","8d60d5f9":"code","871c90e4":"code","3dafd436":"code","83104c6d":"code","ddea46cb":"code","0574dd81":"code","01864ea6":"code","82541a36":"code","4a80059a":"code","ef46be5d":"code","b5f699f4":"markdown","2d83cdd5":"markdown","f5386bb4":"markdown","27cdea0a":"markdown","75ad2f03":"markdown","a2771347":"markdown","4207876b":"markdown","ad8b0158":"markdown","ef8a6341":"markdown"},"source":{"eb947ada":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d60d5f9":"df = pd.read_csv('..\/input\/iphone-price-from-flipkartcom\/iphoneFlipkart.csv')","871c90e4":"df.info()","3dafd436":"df.head(10)","83104c6d":"df.tail(10)","ddea46cb":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","0574dd81":"colour = [\"#e74c3c\", \"#34495e\"]\nsns.set_style('darkgrid')\nsns.set_palette(colour)\nsns.set_context('notebook')\n\ng = sns.catplot(y = 'Status' , data = df, kind = 'count', height = 3, aspect = 3.5)\ng.set(xlabel = 'Classes', ylabel ='Samples in each class')\nplt.show()\n","01864ea6":"s = sns.color_palette(sns.cubehelix_palette(10))\ng = sns.catplot(y = 'Product_Name', data = df, kind = 'count', height = 12, aspect = 2, palette = s)\ng.set(xlabel = 'Samples in each class', ylabel ='Classes')\nplt.show()","82541a36":"g = sns.pairplot(df, hue=\"Status\", palette=\"husl\", markers=[\"D\", \"o\"])","4a80059a":"df.groupby(['Memmory','Product_Name'])['Price'].mean()","ef46be5d":"df.pivot_table(values = 'Price' , index = 'Product_Name' , columns = 'Color', fill_value = 0, margins = True)","b5f699f4":"We can see Iphone 11, Iphone XR and Iphone 8 are most available in the store.","2d83cdd5":"First we will check the status column. ","f5386bb4":"Convert the csv file into a dataframe","27cdea0a":"Then we check the columns, number of rows and null values. Although most of the time it is given by the dataset provider in kaggle but it is better to practice this sanity checking.","75ad2f03":"***This is my simple work within few minutes. Hope you will like it. I am still very new in this area. So, give feedback on my mistakes. Happy Hacking :)***","a2771347":"We can also look at the average prices for different Iphones with different storages.","4207876b":"# Its time to do some exploratory data analysis.","ad8b0158":"We can see there are only two types of status and most of them are not deliverable. \n\nWe could the same for other classes as well.","ef8a6341":"Now we will dive into the dataset using the .head() method. I usually like to see first 10 and last 10 rows."}}