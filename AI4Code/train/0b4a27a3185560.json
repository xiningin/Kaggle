{"cell_type":{"d128a4d5":"code","9853f447":"code","d185f4df":"code","db8c6585":"code","acbc1bb0":"code","bdbf16de":"code","a9df79d6":"code","449203b2":"code","afedc232":"code","d033a849":"code","ffd6e399":"code","2aa7acdd":"code","129faeae":"code","7c884382":"code","1d6832ad":"code","8f48a23d":"code","ccf2f9f3":"code","ce099a59":"code","fe368a8b":"code","5afa94a6":"code","5fc383d7":"code","de78500d":"code","f4ea6c70":"code","a5bba609":"code","c6d4414c":"code","f8c560f7":"code","070a664b":"code","2fcf5030":"code","5d79b4ac":"code","4f9dd0a2":"code","5efa534a":"code","a3b3d809":"code","638b3b9a":"code","852d5fee":"code","01824938":"code","fb2f4cac":"code","d77aefb5":"code","59cdd184":"code","650a9ec5":"code","0b905b0b":"code","b2f0ae07":"code","12326f7b":"code","3dabee2f":"code","e488190b":"code","91c79f6b":"code","2d7c72a4":"code","11d52bd5":"code","d1b637fa":"code","f155c638":"code","0a6a5224":"code","2745b0c6":"code","46cfaeef":"code","2ea1ace6":"code","1055875f":"code","32bb22aa":"code","31840bf0":"code","5e4ae383":"code","63478ad4":"code","22fd07d4":"code","64db67e7":"code","34021b39":"code","0deca4fe":"code","c6fb378c":"code","f100665e":"code","e59b771a":"code","cfb50046":"code","2f494084":"code","03359a66":"code","a8ea2d55":"code","e5bd49bf":"code","3fcd3ae5":"code","0d6d5b68":"code","531e38ba":"code","3bb5abe5":"code","6f6a1805":"code","941f9911":"code","f8d10712":"code","cb05b18f":"code","a46e05d0":"code","83ef8f45":"code","bd8cb7a9":"code","03f18668":"code","5fea8b07":"code","4c54dca2":"code","3b4c1249":"code","c59be725":"code","6c5f7921":"code","6f6ecf3b":"code","0f68f48c":"code","a23216f2":"code","5493ab5c":"code","d07738ff":"code","c7b4c468":"code","65a7dacf":"code","675063b1":"code","ccde2faf":"code","b556e6af":"code","aa2d498a":"code","b2881bf2":"code","ff7c0db9":"code","14ae7cff":"code","785ed3b2":"code","4daf5ce8":"code","95cb41d6":"code","7a60bf33":"code","e1d9090b":"code","c0e9af88":"code","6179c6ce":"code","6f174763":"code","6b927c73":"code","0ab14cee":"code","396fe420":"code","73c21d8c":"code","91c69268":"code","c83fcad5":"code","c1315870":"code","e798899a":"code","3d6685f5":"code","12d4d69a":"code","e858bc80":"code","a9ec4791":"code","c42fb9f4":"code","bbbbc63c":"code","09f62819":"code","d3b6a894":"code","5bee1b0d":"code","0cf7f7a9":"code","d29c4c7a":"code","e7bbc8ec":"code","213bb7e9":"code","fc104eb0":"markdown","6677b2a1":"markdown","61ba1a9e":"markdown","0958fe1c":"markdown","fef012d7":"markdown","e3e17d97":"markdown","b3335ed8":"markdown","9850ee37":"markdown","d6d08168":"markdown","6f54abb2":"markdown","5e911015":"markdown","8b442973":"markdown","bf7b74e6":"markdown","15c86b29":"markdown","20ef56ee":"markdown","10acf3a5":"markdown","587d3b32":"markdown","378bf032":"markdown","24ee4012":"markdown","6342ae27":"markdown","006a1ea7":"markdown","2019a634":"markdown","2b2f0463":"markdown","7a34c192":"markdown","6f88647b":"markdown","03f83f4a":"markdown","5b590ba9":"markdown","bd8bbfbc":"markdown","ce52bf4f":"markdown","7a02182b":"markdown","309012cd":"markdown","82cdca96":"markdown","1e47ac1e":"markdown","20cca7b8":"markdown","009cecd2":"markdown","6affe323":"markdown","608e56ff":"markdown","dbd8bddd":"markdown","2c965dc0":"markdown","19d4f2f7":"markdown","ae0e1b37":"markdown","02f16276":"markdown","eb4e6272":"markdown","9b6532da":"markdown","2ba51e72":"markdown","58858a67":"markdown","7bdd8851":"markdown","62f7a5da":"markdown","0332b265":"markdown","c57390ce":"markdown","f43901ef":"markdown","7a21880b":"markdown","fd888956":"markdown","97b0569b":"markdown","50afa432":"markdown","442ff228":"markdown","55fff881":"markdown","aa0a8ea9":"markdown","980c1984":"markdown","4a36895f":"markdown","d318dbc2":"markdown","2f6af63b":"markdown","4c7e6e1e":"markdown","0d28ff8b":"markdown","ca44b858":"markdown","9554de36":"markdown","20d9f847":"markdown","61d3a492":"markdown","2e71b59b":"markdown","42c7cd82":"markdown","0e5f8583":"markdown","754520b9":"markdown","8d39dae3":"markdown","f215cb53":"markdown","35be4b16":"markdown","b9013795":"markdown","7bc17a03":"markdown","f93a0812":"markdown","8172b2d1":"markdown","f885d832":"markdown","18f40b49":"markdown","1cc78eb0":"markdown","19f62035":"markdown","c18bdaad":"markdown","f955bf57":"markdown","bcafa69c":"markdown","cf780c10":"markdown","d8c72ea1":"markdown","eda7a8c4":"markdown","202f9689":"markdown","5c5d68e6":"markdown","afa924cd":"markdown","409e9901":"markdown","390c9374":"markdown","d6c621f6":"markdown","f14a8c8e":"markdown","7a9f7272":"markdown","23a2fc0f":"markdown","06b703f8":"markdown","0fb3c475":"markdown","ad7f1eb4":"markdown","1e954cc2":"markdown","7b4ad1fe":"markdown","6cc3d3bb":"markdown","1e1176ba":"markdown","05a89595":"markdown","ef2b5615":"markdown","f12d3a26":"markdown","c4486aa3":"markdown","8c1ef0e3":"markdown","3312e207":"markdown","6b3d861e":"markdown"},"source":{"d128a4d5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nfrom scipy import stats\n\nimport warnings\nwarnings.filterwarnings('ignore')","9853f447":"books = pd.read_csv('..\/input\/goodbooks-10k\/books.csv')\nratings = pd.read_csv('..\/input\/goodbooks-10k\/ratings.csv')\nbook_tags = pd.read_csv('..\/input\/goodbooks-10k\/book_tags.csv')\ntags = pd.read_csv('..\/input\/goodbooks-10k\/tags.csv')","d185f4df":"books.head().transpose()","db8c6585":"ratings.head()","acbc1bb0":"book_tags.head()","bdbf16de":"tags.head()","a9df79d6":"books.shape","449203b2":"books.describe()","afedc232":"books.info()","d033a849":"!pip install Goodreads","ffd6e399":"from goodreads import client\napi_key = 'k8aNpms0tdzaddORWzUHoA'\napi_secret = '2Vy3eO4Nm2amvPLCxwRaufXwqKvd2pmS2E5FvNkXgg4'\ngc = client.GoodreadsClient(api_key, api_secret)","2aa7acdd":"null_year = books[books.original_publication_year.isna()==True].book_id\nnull_year.head()","129faeae":"for index,book_id in zip(null_year.index,null_year.values):\n    books['original_publication_year'].iloc[index] = float(gc.book(book_id).publication_date[2])","7c884382":"# null_language = books[books.language_code.isna()==True].book_id\n\n# for index,book_id in zip(null_language.index,null_language.values):\n#     books['language_code'].iloc[index] = gc.book(book_id).language_code","1d6832ad":"# books['publisher'] = books.apply(lambda x: gc.book(x.book_id).publisher","8f48a23d":"books[books.title.duplicated(keep=False)==True].sort_values('title').transpose()","ccf2f9f3":"def plot_books_by(df, col, n_rows=10):\n    plt.figure(figsize=(12,7))\n    ax = sns.barplot(x=df[col].head(n_rows), y=df['title'].head(n_rows), data=df)\n    plt.title('Best ' + str(n_rows) + ' books by ' + col.replace('_',' ').capitalize(), weight='bold')\n    plt.xlabel('Score of ' + col)\n    plt.ylabel('Book Title')    ","ce099a59":"important_columns = ['title','authors','average_rating','ratings_count','work_text_reviews_count']","fe368a8b":"book_sorted_ratings = books[books['ratings_count']>=1000].sort_values('average_rating', ascending=False)\nbook_sorted_ratings[important_columns].head(15)","5afa94a6":"plot_books_by(book_sorted_ratings, 'average_rating', 15)","5fc383d7":"book_sorted_ratings_count = books.sort_values('ratings_count', ascending=False)\nbook_sorted_ratings_count[important_columns].head(15)","de78500d":"plot_books_by(book_sorted_ratings_count, 'ratings_count', 15)","f4ea6c70":"book_sorted_reviews_count = books[books['ratings_count']>=1000].sort_values('work_text_reviews_count', ascending=False)\nbook_sorted_reviews_count[important_columns].head(15)","a5bba609":"plot_books_by(book_sorted_reviews_count, 'work_text_reviews_count', 15)","c6d4414c":"from sklearn.preprocessing import MinMaxScaler","f8c560f7":"cols = ['ratings_count','average_rating']\nscaler = MinMaxScaler()\ndf_normalized = books[important_columns].copy()\ndf_normalized[cols] = scaler.fit_transform(df_normalized[cols])","070a664b":"df_normalized.head()","2fcf5030":"df_normalized['book_score'] = 0.5 * df_normalized['ratings_count'] + 0.5 * df_normalized['average_rating']","5d79b4ac":"df_normalized_sorted_score = df_normalized.sort_values('book_score', ascending=False)\ndf_normalized_sorted_score.head()","4f9dd0a2":"plot_books_by(df_normalized_sorted_score, 'book_score', 15)","5efa534a":"lang_counts = pd.DataFrame(books['language_code'].value_counts())\nlang_counts.columns = ['counts']\nlang_counts","a3b3d809":"len(lang_counts)","638b3b9a":"plt.figure(figsize=(16,8))\nplt.title(\"Number of Books released in a specific Language (English included).\", weight='bold')\nplt.bar(x=lang_counts.index,height='counts', data=lang_counts);","852d5fee":"lang_counts = lang_counts.drop([\"en-US\", \"en-GB\", \"eng\", \"en-CA\"])","01824938":"plt.figure(figsize=(16,8))\nplt.title(\"Number of Books released in a specific Language (English excluded).\", weight='bold')\nplt.bar(x=lang_counts.index,height='counts', data=lang_counts);","fb2f4cac":"books['original_publication_year'] = books['original_publication_year'].astype(int)\nyear_count = books.groupby('original_publication_year')['title'].count()\nplt.figure(figsize=(18,5))\nyear_count.plot();","d77aefb5":"plt.figure(figsize=(18,5))\nyear_count[year_count.index > 1900].plot();","59cdd184":"books.groupby('original_publication_year')['title'].count()[books.groupby('original_publication_year')['title'].count()>200]","650a9ec5":"books[['title', 'original_publication_year']].sort_values('original_publication_year').head(10)","0b905b0b":"books[['book_id', 'title', 'original_publication_year']].sort_values('original_publication_year').tail(10)","b2f0ae07":"books.authors.value_counts()","12326f7b":"c = []\nbooks.authors.apply(lambda x: c.append(x) if 'Agatha Christie' in x else [])\nc","3dabee2f":"print('The real number of books (int the data) for Agatha Christie is {} not {}.'.format(len(c),books.authors.value_counts()['Agatha Christie']))","e488190b":"a = []\nbooks.authors.apply(lambda x: a.append(x) if ',' in x else [])\na[:10]","91c79f6b":"print('Number of books with multi-authors is {}.'.format(len(a)))","2d7c72a4":"authors_list = books['authors'].apply(lambda x: [a for a in x.split(', ')] if ',' in x else x)\nauthors_list.head()","11d52bd5":"authors_list.head(6).apply(lambda x: pd.Series(x)).stack().head(6)","d1b637fa":"authors_list.head(6).apply(lambda x: pd.Series(x)).stack().head(6).reset_index(level=1, drop=True)","f155c638":"splitted_authors = authors_list.apply(lambda x: pd.Series(x)).stack().reset_index(level=1, drop=True)\nsplitted_authors.name = 'authors'\nsplitted_authors.head()","0a6a5224":"df_edited_authors = books[important_columns].drop('authors', axis=1).join(splitted_authors)\ndf_edited_authors.head()","2745b0c6":"books.shape, df_edited_authors.shape","46cfaeef":"df_edited_authors.authors.value_counts()","2ea1ace6":"def plot_authors_by(df, title, xlabel, n=15, ylabel='Author', y_size=7):\n    plt.figure(figsize=(15,y_size))\n    ax = sns.barplot(x=df.head(n).values, y=df.head(n).index)\n    plt.title(title, weight='bold')\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)","1055875f":"authors_most_with_books = df_edited_authors.authors.value_counts()\nauthors_most_with_books.head(15)","32bb22aa":"plot_authors_by(authors_most_with_books, 'Authors with most books', 'Number of Books', 30)","31840bf0":"def at_least_books(df, n):\n    more_than_n = df_edited_authors['authors'].value_counts().values >= n\n    return df['authors'].isin(df['authors'].value_counts()[more_than_n == True].index)","5e4ae383":"def at_least_ratings_count(df, n):\n    return df.ratings_count >= n","63478ad4":"at_least_books(df_edited_authors, 5).head()","22fd07d4":"at_least_ratings_count(df_edited_authors, 10000).head()","64db67e7":"df_edited_authors['authors'].value_counts().describe()","34021b39":"plt.figure(figsize=(10,5))\nplt.hist(df_edited_authors.authors.value_counts().values);\nplt.xlabel('number of books');\nplt.ylabel('count');","0deca4fe":"plt.figure(figsize=(17,2))\nsns.boxplot(x=df_edited_authors.authors.value_counts(), orient='h');\nplt.xlabel('number of books');","c6fb378c":"df_edited_authors['ratings_count'].describe()","f100665e":"plt.figure(figsize=(10,5))\nplt.hist(df_edited_authors['ratings_count']);\nplt.xlabel('number of ratings');\nplt.ylabel('count');","e59b771a":"plt.figure(figsize=(17,2))\nsns.boxplot(x=df_edited_authors['ratings_count'], orient='h');","cfb50046":"c1 = at_least_books(df_edited_authors, 5)\nc2 = at_least_ratings_count(df_edited_authors, 50000)","2f494084":"best_rating_authors = df_edited_authors[c1 & c2].groupby('authors')['average_rating'].mean().sort_values(ascending=False)\nbest_rating_authors.head(15)","03359a66":"print('Best Rating Authors are {} of {} authors'.format(len(best_rating_authors),len(df_edited_authors.authors.unique())))","a8ea2d55":"plot_authors_by(best_rating_authors, 'Best Rating Authors', 'Rating', 30)","e5bd49bf":"most_ratings_authors = df_edited_authors.groupby('authors')['ratings_count'].sum().sort_values(ascending=False)\nmost_ratings_authors.head(15)","3fcd3ae5":"plot_authors_by(most_ratings_authors, 'Most Ratings Authors', 'Total Ratings', 30)","0d6d5b68":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()","531e38ba":"best_rating_authors_normalized = pd.DataFrame(best_rating_authors.values, index=best_rating_authors.index, columns=['rating'])\nbest_rating_authors_normalized['rating'] = scaler.fit_transform(best_rating_authors_normalized)\nbest_rating_authors_normalized.head()","3bb5abe5":"authors_rating_score = df_edited_authors['authors'].apply(lambda x: best_rating_authors_normalized.loc[x].rating if x in best_rating_authors_normalized.index else 0.0)\nauthors_rating_score.head()","6f6a1805":"most_ratings_authors_normalized = pd.DataFrame(most_ratings_authors.values, index=most_ratings_authors.index, columns=['total_rating'])\nmost_ratings_authors_normalized['total_rating'] = scaler.fit_transform(most_ratings_authors_normalized)\nmost_ratings_authors_normalized.head()","941f9911":"authors_ratings_count_score = df_edited_authors['authors'].apply(lambda x: most_ratings_authors_normalized.loc[x].total_rating)\nauthors_ratings_count_score.head()","f8d10712":"df_edited_authors['author_score'] = 0.5 * authors_rating_score + 0.5 * authors_ratings_count_score\ndf_edited_authors['author_score'].head()","cb05b18f":"best_authors = df_edited_authors.groupby('authors')['author_score'].mean().sort_values(ascending=False)\nbest_authors.head(15)","a46e05d0":"plot_authors_by(best_authors, 'Best Authors', 'Score', 30)","83ef8f45":"ratings.head()","bd8cb7a9":"print('There are {} ratings.'.format(ratings.shape[0]))","03f18668":"print('Number of users is {}'.format(len(ratings.user_id.unique())))","5fea8b07":"ratings[ratings.duplicated()==True]","4c54dca2":"ratings[ratings.duplicated(keep=False)==True].head(6)","3b4c1249":"ratings_rmv_duplicates = ratings.drop_duplicates()\nratings_rmv_duplicates.shape","c59be725":"ratings_sample = ratings_rmv_duplicates.sample(frac=0.2)\nratings_sample.shape","6c5f7921":"plt.figure(figsize=(12,8))\nsns.countplot(x='rating', data=ratings_sample);","6f6ecf3b":"ratings_per_user = ratings_sample.groupby('user_id')['user_id'].count()\nratings_per_user","0f68f48c":"plt.figure(figsize=(12,8))\nplt.hist(ratings_per_user ,bins='auto');\nplt.grid(axis='y', alpha=0.75)\nplt.xlabel('number of ratings per user')\nplt.ylabel('count');","a23216f2":"mean_rating_per_user = ratings_sample.groupby('user_id')['rating'].mean()\nmean_rating_per_user","5493ab5c":"plt.figure(figsize=(12,8))\nplt.hist(mean_rating_per_user, bins='auto');\nplt.grid(axis='y', alpha=0.75)\nplt.xlabel('mean user rating')\nplt.ylabel('count');","d07738ff":"ratings_per_book = ratings_sample.groupby('book_id')['book_id'].count()\nratings_per_book","c7b4c468":"plt.figure(figsize=(12,8))\nplt.hist(ratings_per_book ,bins='auto');\nplt.grid(axis='y', alpha=0.75)\nplt.xlabel('number of ratings per book')\nplt.ylabel('count');","65a7dacf":"mean_rating_per_book = ratings_sample.groupby('book_id')['rating'].mean()\nmean_rating_per_book","675063b1":"plt.figure(figsize=(12,8))\nplt.hist(mean_rating_per_book, bins='auto');\nplt.grid(axis='y', alpha=0.75)\nplt.xlabel('mean book rating')\nplt.ylabel('count');","ccde2faf":"tags.head()","b556e6af":"tags.shape","aa2d498a":"book_tags.head()","b2881bf2":"book_tags.shape","ff7c0db9":"genres = [\"Art\", \"Biography\", \"Business\", \"Chick Lit\", \"Children's\", \"Christian\", \"Classics\",\n          \"Comics\", \"Contemporary\", \"Cookbooks\", \"Crime\", \"Ebooks\", \"Fantasy\", \"Fiction\",\n          \"Gay and Lesbian\", \"Graphic Novels\", \"Historical Fiction\", \"History\", \"Horror\",\n          \"Humor and Comedy\", \"Manga\", \"Memoir\", \"Music\", \"Mystery\", \"Nonfiction\", \"Paranormal\",\n          \"Philosophy\", \"Poetry\", \"Psychology\", \"Religion\", \"Romance\", \"Science\", \"Science Fiction\", \n          \"Self Help\", \"Suspense\", \"Spirituality\", \"Sports\", \"Thriller\", \"Travel\", \"Young Adult\"]","14ae7cff":"genres = list(map(str.lower, genres))\ngenres[:4]","785ed3b2":"available_genres = tags.loc[tags.tag_name.str.lower().isin(genres)]","4daf5ce8":"print('Number of available tags is {} out of the {} tags in genres list'.format(available_genres.shape[0], len(genres)))","95cb41d6":"available_books_with_genres = book_tags[book_tags.tag_id.isin(available_genres.tag_id)]\navailable_books_with_genres.shape","7a60bf33":"tag_counts = pd.DataFrame(available_books_with_genres.groupby('tag_id')['count'].sum())\ntag_counts.head()","e1d9090b":"tag_counts.set_index(available_genres.tag_name, inplace=True)\ntag_counts.head()","c0e9af88":"tag_counts.sort_values('count', ascending=False, inplace=True)\ntag_counts.head()","6179c6ce":"plt.figure(figsize=(12,8))\nsns.barplot(x='count', y=tag_counts.index, data=tag_counts, orient='h');","6f174763":"cols = ['books_count','original_publication_year','average_rating','ratings_count','work_ratings_count','work_text_reviews_count']","6b927c73":"corr = books[cols].corr()\ncorr","0ab14cee":"plt.figure(figsize=(13,8))\nsns.heatmap(corr, vmin = -1, vmax = 1, center = 0, cmap = 'coolwarm', annot=True);","396fe420":"mask = np.zeros(corr.shape, dtype=bool)\nmask[np.triu_indices(len(mask))] = True\n\nplt.figure(figsize=(13,8))\nsns.heatmap(corr, vmin = -1, vmax = 1, center = 0, cmap = 'coolwarm', annot = True, mask = mask);","73c21d8c":"jp = sns.jointplot(x='ratings_count', y='average_rating', kind='reg', line_kws={'color':'cyan'}, data=books)\njp.annotate(stats.pearsonr, fontsize=12);","91c69268":"jp = sns.jointplot(x='books_count', y='average_rating', kind='reg', line_kws={'color':'cyan'}, data=books)\njp.annotate(stats.pearsonr, fontsize=12);","c83fcad5":"jp = sns.jointplot(x=ratings.groupby('user_id')['user_id'].count(),\n                   y=ratings.groupby('user_id')['rating'].mean(),\n                   kind='reg', line_kws={'color':'cyan'})\njp.annotate(stats.pearsonr, fontsize=12);\nplt.xlabel('number_of_rated_books');\nplt.ylabel('mean_rating');","c1315870":"subtitle = 'the lord of the rings'\nbooks[books.title.str.lower().str.find(subtitle) > -1][['title']].values","e798899a":"book_series = books[books.title.str.contains('\\(.*[,:]') == True][['title', 'average_rating']]","3d6685f5":"print('There are {} books that are in series'.format(book_series.shape[0]))","12d4d69a":"book_series.head()","e858bc80":"series = book_series.copy()\nseries['title'] = series['title'].str.findall('\\(.*[,:]').apply(lambda x: x.pop()[1:-1])","a9ec4791":"series.head()","c42fb9f4":"jp = sns.jointplot(x=series.groupby('title')['title'].count(),\n                   y=series.groupby('title')['average_rating'].mean(),\n                   kind='reg', line_kws={'color':'cyan'})\njp.annotate(stats.pearsonr, fontsize=12);\nplt.xlabel('number_of_volumes_in_series');\nplt.ylabel('mean_rating');","bbbbc63c":"title_length = books[['title', 'average_rating']]\ntitle_length['length'] = title_length['title'].str.findall('\\s').apply(lambda x: len(x)+1)","09f62819":"title_length.head()","d3b6a894":"plt.figure(figsize=(12,8))\nsns.boxplot(x='length', y='average_rating', data=title_length);\nplt.xlabel('title_length');\nplt.grid()","5bee1b0d":"has_subtitle = books[['title', 'average_rating']]\nhas_subtitle['has_subtitle'] = title_length['title'].str.contains(':', regex=False)","0cf7f7a9":"has_subtitle.head()","d29c4c7a":"plt.figure(figsize=(6,8))\nsns.boxplot(x='has_subtitle', y='average_rating', data=has_subtitle);\nplt.grid()","e7bbc8ec":"n_of_authors = books.authors.apply(lambda x: len(x.split(',')))","213bb7e9":"plt.figure(figsize=(8,7))\njp = sns.regplot(x=n_of_authors, y=books['average_rating'], line_kws={'color':'cyan'})\njp.annotate('r =' + str(round(stats.pearsonr(n_of_authors,books['average_rating'])[0], 3)),\n            xy=(20,3), fontsize=15);\nplt.xlabel('number_of_authors');\n","fc104eb0":"#### Year","6677b2a1":"```\nData columns (total 24 columns):\n #   Column                     Non-Null Count  Dtype  \n---  ------                     --------------  -----  \n 0   Unnamed: 0                 10000 non-null  int64  \n 1   id                         10000 non-null  int64  \n 2   book_id                    10000 non-null  int64  \n 3   best_book_id               10000 non-null  int64  \n 4   work_id                    10000 non-null  int64  \n 5   books_count                10000 non-null  int64  \n 6   isbn                       9300 non-null   object \n 7   isbn13                     9415 non-null   float64\n 8   authors                    10000 non-null  object \n 9   original_publication_year  10000 non-null  float64\n 10  original_title             9415 non-null   object \n 11  title                      10000 non-null  object \n 12  language_code              9294 non-null   object \n 13  average_rating             10000 non-null  float64\n 14  ratings_count              10000 non-null  int64  \n 15  work_ratings_count         10000 non-null  int64  \n 16  work_text_reviews_count    10000 non-null  int64  \n 17  ratings_1                  10000 non-null  int64  \n 18  ratings_2                  10000 non-null  int64  \n 19  ratings_3                  10000 non-null  int64  \n 20  ratings_4                  10000 non-null  int64  \n 21  ratings_5                  10000 non-null  int64  \n 22  image_url                  10000 non-null  object \n 23  small_image_url            10000 non-null  object \ndtypes: float64(3), int64(14), object(7)\nmemory usage: 1.8+ MB\n```","61ba1a9e":"For multi-authors books, we will split their authors with a copy of the book for each one.","0958fe1c":"### - Does having a subtitle improve the book\u2019s rating?<a id=\"38\"><\/a> <br>","fef012d7":"### - Does the number of authors matter?<a id=\"39\"><\/a> <br>","e3e17d97":"### Publication Year<a id=\"5\"><\/a> <br>","b3335ed8":"We see that books that have a subtitle get rated slightly higher than books without a subtitle.","9850ee37":"### - Number of ratings per user<a id=\"27\"><\/a> <br>","d6d08168":"### Date<a id=\"17\"><\/a> <br>","6f54abb2":"As we see, most of books were released in **September**.","5e911015":"### - Distribution of mean book ratings<a id=\"30\"><\/a> <br>","8b442973":"**######### \/\/\\\\\\\\ #########**","bf7b74e6":"## *Authors*<a id=\"18\"><\/a> <br>","15c86b29":"From the given plot, we can infer that the highest ratings ever given, usually are for books with the page range of **200-400**, peaking near 250. It could lead to the fact that most of the people seem to prefer books with a moderate amount of pages, and that thicker books seems to scare people away. ","20ef56ee":"### Language<a id=\"16\"><\/a> <br>","10acf3a5":"### - Is there a relationship between the number of ratings and the average rating?<a id=\"33\"><\/a> <br>","587d3b32":"# Importing Libraries and Loading Our Data<a id=\"1\"><\/a> <br>","378bf032":"Below, I examine whether books which are part of a larger series receive a higher rating. In fact the more volumes are in a series, the higher the average rating is.","24ee4012":"We notice here that **Mary GrandPr\u00e9** achieved the 2nd place, although that she isn't an author, but the illustrator of the *Harry Potter* books in their U.S. editions.","6342ae27":"## *Ratings*<a id=\"24\"><\/a> <br>","006a1ea7":"![](https:\/\/66.media.tumblr.com\/59a3d091859a39398ec73de02c8538e0\/18ec3e5a5cc9b75e-85\/s1280x1920\/3c9f637376e5c8f9e385e4b9c4d75fce85c61d2b.png)","2019a634":"![](https:\/\/66.media.tumblr.com\/f0d97df9762a79d69d7ea54dbbfc3507\/18ec3e5a5cc9b75e-a6\/s1280x1920\/9a38d8908edac01a58f071537c93978bfb0144c2.png)","2b2f0463":"We can see that our data has books before 1500 BC, so we will try for books after 1900.","7a34c192":"We can see that there are **69** duplicated books (including originals).\nWe can get rid of duplicates by combining them with the *originals* through features like (`rating`, `ratings_count`, ...), but as it's noticed above, the duplicates may differ from the originals in some features like (`original_publication_year`, `language_code`). So we will keep them.","6f88647b":"We can see now the difference as the previous largest number of books was **60** for *Stephen King*, now it's **98** for *James Patterson*.","03f83f4a":"### Top Text-Reviewed Books<a id=\"13\"><\/a> <br>","5b590ba9":"### Most Ratings Authors<a id=\"22\"><\/a> <br>","bd8bbfbc":"![](https:\/\/66.media.tumblr.com\/09b90fd4f2d83359a656b67c13896d17\/18ec3e5a5cc9b75e-6f\/s1280x1920\/d95dcfe34b73077cac3326f0bdd009d9e0296060.png)","ce52bf4f":"## *Books*","7a02182b":"Next, we can see, whether we can find any associations of features with a book\u2019s rating. For a quick look, let\u2019s first plot the correlation matrix between the books average_rating and some variables. In summary, we see only small correlations between the features and the average rating (last row), indicating that there are no strong relationships between the rating a book receives and meta-variables (like rating counts etc.). This means that the rating depends more strongly on other features (e.g. the quality of the books itself).","309012cd":"### Top Scored Books<a id=\"14\"><\/a> <br>","82cdca96":"# Exploratory Data Analysis<a id=\"9\"><\/a> <br>","1e47ac1e":"### - What is the distribution of the ratings?<a id=\"26\"><\/a> <br>","20cca7b8":"## *Books*<a id=\"10\"><\/a> <br>","009cecd2":"The data contains information in the title column about whether a certain book is part of a series (e.g. the Lord of the Rings trilogy).","6affe323":"Also here I put some visualizations for **Num of Pages**  that I extracted from the other *Goodreads* project","608e56ff":"### Publisher<a id=\"7\"><\/a> <br>","dbd8bddd":"**######### \\\\\\\\\/\/ #########**","2c965dc0":"As we see, most of books were released on **Tuesday**.","19d4f2f7":"- [Importing Libraries and Loading Our Data](#1)\n- [Have a look at the dataset](#2)\n- [Cleaning Data](#3)\n    - [Handle Missing Data](#4)\n      - [Publication Year](#5)\n      - [Language Code](#6)\n      - [Publisher](#7)\n    - [Handle Duplicated Books](#8)\n- [Exploratory Data Analysis](#9)\n  - [Books](#10)\n    - [Top Rated Books](#11)\n    - [Top Popular Books](#12)\n    - [Top Text-Reviewed Books](#13)\n    - [Top Scored Books](#14)\n    - [Num of Pages](#15)\n    - [Language](#16)\n    - [Date](#17)\n  - [Authors](#18)\n    - [Filter Authors](#19)\n    - [Authors with Most Books](#20)\n    - [Best Rating Authors](#21)\n    - [Most Ratings Authors](#22)\n    - [Best Authors](#23)\n  - [Ratings](#24)\n    - [Remove Duplicates Ratings](#25)\n    - [What is the distribution of the ratings?](#26)\n    - [Number of ratings per user](#27)\n    - [Distribution of mean user rating](#28)\n    - [Number of ratings per book](#29)\n    - [Distribution of mean book ratings](#30)\n  - [Tags](#31)\n    - [What influences a book\u2019s rating?](#32)\n    - [Is there a relationship between the number of ratings and the average rating?](#33)\n    - [Multiple editions of each book](#34)\n    - [Do frequent raters rate differently?](#35)\n    - [Series of Books](#36)\n    - [How long should a title be?](#37)\n    - [Does having a subtitle improve the book\u2019s rating?](#38)\n    - [Does the number of authors matter?](#39)    ","ae0e1b37":"---","02f16276":"---","eb4e6272":"Have you ever wondered which book to read next? I often have and to me, book recommendations are a fascinating issue. This external [dataset](https:\/\/www.kaggle.com\/zygmunt\/goodbooks-10k) allows us to take a deeper look at data-driven book recommendations.","9b6532da":"Here we do some analysis trying to pick up suitable parameters for functions above.","2ba51e72":"![](https:\/\/66.media.tumblr.com\/tumblr_mcolvu1mMC1roxi95o1_500.jpg)","58858a67":"It is possible, that users that rate more books (frequent raters) rate books differently from less frequent raters. The figure above explores this possibility. It seems like frequent raters tend to give lower ratings to books, maybe they are\/become more critical the more they read and rate. That\u2019s interesting.","7bdd8851":"### - Series of Books<a id=\"36\"><\/a> <br>","62f7a5da":"### Best Authors<a id=\"23\"><\/a> <br>","0332b265":"As our data doesn't have the full date, I put some visualizations for **Month** and **Day** that I extracted from another *Goodreads* project of mine with different data has the full date.\n\n**Note:** you can scrape the full date using the goodreads **api** we used above with missing data.","c57390ce":"## *Tags*<a id=\"31\"><\/a> <br>\n","f43901ef":"To reduce calculation times, I select only a subset of users. (e.g., 20%)","7a21880b":"We see that people tend to give quite positive ratings to books. Most of the ratings are in the 3-5 range, while very few ratings are in the 1-2 range.","fd888956":"Theoretically, it might be that the popularity of a book (in terms of the number of ratings it receives) is associated with the average rating it receives, such that once a book is becoming popular it gets better ratings. However, our data shows that this is true only to a very small extent. The correlation between these variables is only 0.045.","97b0569b":"### - How long should a title be?<a id=\"37\"><\/a> <br>","50afa432":"We will do some *feature-engineering* (as before with books) to create a new scorer for authors.","442ff228":"People have different tendencies to rate books. Some already give 5 stars to a mediocre book, while others do not give 5 stars unless it is the perfect book for them. Such tendencies can be seen in the figure above. On the right side there is a bump from users with a mean rating of 5, indicating that they really liked all books (or they only rated books they really like\u2026). We can also see that there are nearly no notoriuous downvoters rating all books with a 1. Such tendencies are going to be important for collaborative filtering later, and are typically dealt with by subtracting the user\u2019s mean rating from their ratings.","55fff881":"Firstly, you need to get an *api_code* from [here](https:\/\/www.goodreads.com\/api\/keys)","aa0a8ea9":"This plot doesn't give that much of an accurate inference due to the massive presence of outliers for books above 1000 pages, for the _maximum_ density is between 0-1000 pages. \n\nBased on that logic, let's explore the scenario in that range","980c1984":"I've chosen at least **5** books and **50k** ratings for a successful author. You can play with different values and explore the results.","4a36895f":"Mean book ratings don\u2019t reveal any peculiarities.","d318dbc2":"### Top Popular Books<a id=\"12\"><\/a> <br>","2f6af63b":"#### Day","4c7e6e1e":"### - Multiple editions of each book<a id=\"34\"><\/a> <br>","0d28ff8b":"If you need to get missing data you can uncomment and run the cells above, but it would take some time.\n\nAnd below the first result after handling the *null* publication years.  ","ca44b858":"![](https:\/\/66.media.tumblr.com\/4b12cf009bcbf628450689d44360f198\/18ec3e5a5cc9b75e-e6\/s500x750\/7ca9608265141da5c36cdcda69877f9df44ff349.png)","9554de36":"With some exploration through the data I have found some **patterns** in *titles* :\n\n```\n(Private, #1)\n(Ex-Heroes, #1)\n(Forgotten Realms: The Dark Elf Trilogy, #1; Legend of Drizzt, #1)\n(The Mortal Instruments #1-4)\n(New Tales of the Vampires)\n```","20d9f847":"### Language Code<a id=\"6\"><\/a> <br>","61d3a492":"We can see that there are some users with many ratings. This is interesting, because we can later examine whether frequent raters rate books differently from less frequent raters. We will come back to this later.","2e71b59b":"As we know that **Mary GrandPr\u00e9** is an illustrator, so we can consider that **J.K. Rowling** is the best author for her fantastic *Harry Potter* Series (that also achieved the best scored books above). ","42c7cd82":"#### Removing the Duplicate Top-Half","0e5f8583":"This Project is splitted into 2 parts:\n\n- **Part I: [The Story of Book](https:\/\/www.kaggle.com\/omarzaghlol\/goodreads-1-the-story-of-book)**\n    - Explore the dataset to find some interesting insights.\n- **Part II: [Book Recommender System](https:\/\/www.kaggle.com\/omarzaghlol\/goodreads-2-book-recommender-system)**\n    - Build Recommender Systems using various techniques.","754520b9":"**Note:**\n\nAny cells between \n\n**######### \\\\\\\\\/\/ #########** \n\nand \n\n**######### \/\/\\\\\\\\ #########**\n\nare for explaining steps or used functions for ease-of-understanding. So you can **skip** them if you want.","8d39dae3":"I've found a [library](https:\/\/pypi.org\/project\/Goodreads\/) that make it easy to deal with **Goodreads** api to get the null data.","f215cb53":"### What influences a book\u2019s rating?<a id=\"32\"><\/a> <br>","35be4b16":"**######### \\\\\\\\\/\/ #########**","b9013795":"## - Handle Missing Data<a id=\"4\"><\/a> <br>","7bc17a03":"### Authors with Most Books<a id=\"20\"><\/a> <br>","f93a0812":"## - Handle Duplicated Books<a id=\"8\"><\/a> <br>","8172b2d1":"# Cleaning Data<a id=\"3\"><\/a> <br>","f885d832":"![](https:\/\/66.media.tumblr.com\/8e00196055106a433d2d6ce2554c97d2\/18ec3e5a5cc9b75e-73\/s500x750\/87d8c9448d5a5e2b016f2af17519a41553f847a3.png)","18f40b49":"### - Distribution of mean user rating<a id=\"28\"><\/a> <br>","1cc78eb0":"The dataset contains information about how many editions of a book are available in `books_count`. These can either be different editions in the same language or also translations of the book into different languages. So one might assume, that the better the book is the more editions should be available. In fact, data show exactly the opposite pattern: The more editions a book has the lower is the average rating. The causal direction of this association is of course unclear here.","19f62035":"For coming analysis we need to filter authors by their *number of books* & *total ratings count*, as for an author (with just one book and few ratings of **5**), won't be the same for a popular author with avrage-rating of maybe **4.5**.","c18bdaad":"Extracting the genres of the books is not trivial since users assign self-chosen tags to books, which may or may not be the same as genres defined by goodreads. As a pragmatic way I chose only the tags the match those provided by goodbooks. This could be improved by grouping similar tags together (like \u2018self-help\u2019, \u2018self help\u2019 etc. to \u2018Self Help\u2019). But I think my approach is fine for a first glance.","f955bf57":"### Best Rating Authors<a id=\"21\"><\/a> <br>","bcafa69c":"Or even getting new data!","cf780c10":"We see that most books are \u201cFantasy\u201d, \u201cRomance\u201d, or \u201cMistery\u201d books, while there are not very many \u201cCookbooks\u201d in the database.","d8c72ea1":"### Features\n\n- **book_id**: A unique Identification number for each book. \n\n- **best_book_id**: generally point to the most popular edition of a given book.\n\n- **work_id**: refers to the book in the abstract sense.\n\n- **books_count**: number of editions.\n\n- **isbn**: Another unique number to identify the book, the International Standard Book Number.\n\n- **isbn13**: A 13-digit ISBN to identify the book, instead of the standard 11-digit ISBN.\n\n- **authors**: Names of the authors of the book. Multiple authors are delimited with `,`.\n\n- **original_publication_year**: year when the book was first published.\n\n- **title**: The name under which the book was published.\n\n- **language_code**: Helps understand what is the primary language of the book. For instance, eng is standard for English.\n\n- **average_rating**: The average rating of the book received in total.\n\n- **ratings_count**: Total number of ratings the book received.\n\n- **work_text_reviews_count**: Total number of written text reviews the book received.\n\n- **ratings_1**: Total number of ratings of 1.\n\n- **ratings_2**: Total number of ratings of 2.\n\n- **ratings_3**: Total number of ratings of 3.\n\n- **ratings_4**: Total number of ratings of 4.\n\n- **ratings_5**: Total number of ratings of 5.\n\n**Note:** You can use the goodreads book and work IDs to create URLs as follows:\n\n`https:\/\/www.goodreads.com\/book\/show\/<book_id>`\n\n`https:\/\/www.goodreads.com\/work\/editions\/<work_id>`","eda7a8c4":"you can simply install it by uncomment then running the next cell, then reads the docs to learn more about it ","202f9689":"## Have a look at the dataset<a id=\"2\"><\/a> <br>\n\nFirst, let\u2019s have a look at the dataset. It consists of the files:\n\n\n- **ratings.csv**:  contains ratings and looks like that:\n- **toread.csv**: provides IDs of the books marked \"to read\" by each user, as userid,book_id pairs.\n- **books.csv**: has metadata for each book (goodreads IDs, authors, title, average rating, etc.).\n- **book_tags.csv**: contains tags\/shelves\/genres assigned by users to books. Tags in this file are represented by their IDs.\n- **tags.csv**: contains the tag_names corresponding to the tag_ids.\n\nAs the name suggests **ratings.csv** contains all users\u2019s ratings of the books (a total of 980k ratings, for 10,000 books, from 53,424 users).","5c5d68e6":"# Summary - Part I\n\nWe identified some interesting aspects of this book datasets. In summary, observed effects on book rating are rather small, suggesting that book rating is mainly driven by other aspects, hopefully including the quality of the book itself.\n\nIn [part II](https:\/\/www.kaggle.com\/omarzaghlol\/goodreads-2-book-recommender-system) we will build a recommender system using different techniques.","afa924cd":"You might have seen in the books.csv that there is language information on the books. This is interesting because goodreads is an english speaking site. However, the dataset contains some books in different languages. The reason is that typically there are multiple editions of a book (both in the same language and in different languages). For this dataset it seems that the most popular edition was included, which for some books is their original language.","409e9901":"As you can see above, the null data we need to handle are the `original_publication_year` & `language_code`, for the rest \"null\" data we don't need them in both **EDA** & **Recommendation System**","390c9374":"We need to normalize `average_rating` & `ratings_count` to have the same scale.","d6c621f6":"**######### \/\/\\\\\\\\ #########**","f14a8c8e":"We can see that in the subsetted dataset most books have around 18-20 ratings.","7a9f7272":"### Remove Duplicates Ratings<a id=\"25\"><\/a> <br>","23a2fc0f":"### Num of Pages<a id=\"15\"><\/a> <br>","06b703f8":"### - Do frequent raters rate differently?<a id=\"35\"><\/a> <br>","0fb3c475":"### Filter Authors<a id=\"19\"><\/a> <br>","ad7f1eb4":"### - Number of ratings per book<a id=\"29\"><\/a> <br>","1e954cc2":"It's obvious that *Harry Potter* books appear several times in best 15 books.","7b4ad1fe":"### Top Rated Books<a id=\"11\"><\/a> <br>","6cc3d3bb":"Now you can do the same (as above) for handling missing data.","1e1176ba":"If you are an author, one of the most important choices is the title of a book. Of course the content of the title is important. However, it might also matter how long the title is. Below I therefore plot the average rating as a function of the length of the title (in words). We can see that there is in fact some variation in average rating depending on title length. Titles with 5 or 10 words seem to have slightly higher ratings.","05a89595":"We all know the saying: \u201ctoo many cooks spoil the broth.\u201d Is this also true for books? Looking at the plot above it seems to be exactly the opposite: The more authors a book has the higher is its average rating.","ef2b5615":"#### Correlation","f12d3a26":"#### Month","c4486aa3":"# What's in this kernel?","8c1ef0e3":"# The Story of Book","3312e207":"With *Authors*, it's difficult to make analysis on them because the goodreads data not just include the author(s), but also sometimes include the illustarator, translator and so on (separated by '**,**').\n\nSo it wouldn't be easy to know the number of books for each author as we can notice above.\n\nSo I thought in 3 solutions (and their drawbacks):\n\n- We can simply just take the first author for each book and remove the rest\n    - *Problem*: there are books with co-authors, in addition, the main author doesn't always come in the 1st place (as above).\n- For books with multi-authors, we can sort them according to their number of occurrences in the whole data and just keep the most frequent one.\n    - *Problem*: again, there are books with co-authors\n- We can scrape data for authors (if possible) from goodreads and remove the unwanted ones.\n    - *Problem*: it will cost time and effort\n\nSo I decided to try playing with the recent data as possible, and maybe someone like the illustrator affect the book rating.","6b3d861e":"We try some *feature-engineering* to come with new features.\n\nWe will create a new scorer for books by combining `average_rating` & `ratings_count` with \nratios **0.5** : **0.5**, and you can play with them.\n\n**Note:** in the *Recommender System* Notebook, I will use a different scorer that **IMDB** uses to rank movies."}}