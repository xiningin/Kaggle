{"cell_type":{"207ed745":"code","f7318df8":"code","cba2a77d":"code","0d56d7c7":"code","76a7561c":"code","9b7c2417":"code","b27ba62e":"code","31c72a7d":"code","a4fc9ee8":"code","9cd8fc53":"code","7588b0d6":"code","0a404956":"code","3b01b9f8":"code","5c2e1e58":"code","f5432f56":"code","995db8a7":"code","18b28e83":"code","38a09335":"code","02862525":"code","bbfc9c94":"code","eccf454f":"code","ffc2c382":"code","0dd1dc62":"markdown","10b2e0bd":"markdown","d7f60f0d":"markdown","40e9ec13":"markdown","bc4334fe":"markdown","66f6a9cc":"markdown","ca04799f":"markdown","94631aa6":"markdown","4abcdbf7":"markdown","51390aa5":"markdown","b7236545":"markdown"},"source":{"207ed745":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f7318df8":"import numpy as np\nimport pandas as pd","cba2a77d":"df1 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_1.csv\")\ndf1","0d56d7c7":"df2 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_2.csv\")\ndf2","76a7561c":"#ignore headers while reading data file\ndf2 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_2.csv\",header=None)\ndf2","9b7c2417":"#bypass given headers with your own\ndf2 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_2.csv\",header=None, names=['Bedroom','Sq.ft','Locality','Price($)'])\ndf2","b27ba62e":"df3 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_3.csv\")\ndf3","31c72a7d":"#using semicolon as seperator\ndf3 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_3.csv\",sep=';')\ndf3","a4fc9ee8":"df4 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_1.csv\",names=['A','B','C','D'])\ndf4","9cd8fc53":"df4 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_1.csv\",header=0,names=['A','B','C','D'])\ndf4","7588b0d6":"df5 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_skiprows.csv\")\ndf5","0a404956":"df5 = pd.read_csv(\"..\/input\/dummy-data-for-reading-files\/CSV_EX_skiprows.csv\",skiprows=2)\ndf5","3b01b9f8":"!pip install xlrd\n!pip install openpyxl","5c2e1e58":"df_excel = pd.read_excel(\"..\/input\/dummy-data-for-reading-files\/Housing_data-single.xlsx\")\ndf_excel","f5432f56":"df_excel.shape","995db8a7":"df11_1 = pd.read_excel(\"..\/input\/dummy-data-for-reading-files\/Housing_data.xlsx\",sheet_name='Data_Tab_1')\ndf11_2 = pd.read_excel(\"..\/input\/dummy-data-for-reading-files\/Housing_data.xlsx\",sheet_name='Data_Tab_2')\ndf11_3 = pd.read_excel(\"..\/input\/dummy-data-for-reading-files\/Housing_data.xlsx\",sheet_name='Data_Tab_3')","18b28e83":"df11_1.shape","38a09335":"df11_2.shape","02862525":"df11_3.shape","bbfc9c94":"df_txt = pd.read_table(\"..\/input\/dummy-data-for-reading-files\/Table_EX_1.txt\")\ndf_txt","eccf454f":"df_txt = pd.read_table(\"..\/input\/dummy-data-for-reading-files\/Table_EX_1.txt\",sep=',')\ndf_txt","ffc2c382":"import pandas as pd\nurl=\"https:\/\/raw.githubusercontent.com\/cs109\/2014_data\/master\/countries.csv\"\ndf_url=pd.read_csv(url)\ndf_url","0dd1dc62":"### Read data from a CSV where delimiters\/separators are not comma ","10b2e0bd":"### Read data from a CSV where headers are missing ","d7f60f0d":"### Readling data from Url","40e9ec13":"## Importing Packages:","bc4334fe":"### Skip initial rows ","66f6a9cc":"# Importing Data \n\nProcess of loading and reading data into python from various resource.\n \nTwo important properties:\n ### Format (various format such as csv, json, xlxs, etc)\n ### File path of the data set \n \n* Computer\/Desktop\/Folder\n* Internet: URL\/API","ca04799f":"### How to bypass given headers with your own? ","94631aa6":"# Reading Datasets\nHow to read data from different sources\n* Read data from a CSV\n* Read data from a CSV where headers are missing \n* Read data from a CSV where delimiters\/separators are not comma \n* How to bypass given headers with your own? \n* Skip initial rows \n* Reading from an Excel file\n* Reading from an Excel file - how to use `sheet_name`\n* General delimated text file can be read same as a CSV\n* Readling data from Url","4abcdbf7":"### Reading from an Excel file - how to use `sheet_name`","51390aa5":"### Reading from an Excel file","b7236545":"### General delimated text file can be read same as a CSV"}}