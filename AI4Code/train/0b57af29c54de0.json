{"cell_type":{"fdaa7ed0":"code","0db260a6":"code","a94f6c39":"code","b33df408":"code","ad3c1376":"code","6219ba6a":"code","a870c8d1":"code","1285693e":"code","5cefce6e":"code","0585798b":"code","386b40e3":"code","4f65eb7a":"code","26e8a856":"code","9f45193b":"code","39ffd7c3":"code","95f76170":"markdown"},"source":{"fdaa7ed0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0db260a6":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\nimport pandas as pd\nimport numpy as np \ndf = pd.read_csv('..\/input\/titanicdataset-traincsv\/train.csv')\n\ndf.head(5)","a94f6c39":"#import pandas as pd\n#import numpy as np \n#df= pd.read_csv('')","b33df408":"Q1 = df['Fare'].quantile(0.25)\nQ3 = df['Fare'].quantile(0.75)\n\nprint(Q1, Q3)\n\n\nQ1 = df['Fare'].quantile(0.25)\nQ3 = df['Fare'].quantile(0.75)","ad3c1376":"IQR = Q3 - Q1\nIQR = Q3 - Q1 \n\nlow = Q1 - 1.5*IQR\nuppper = Q3 + 1.5*IQR\n\nlow = Q1 - 1.5*IQR\nuppper = Q3 + 1.5*IQR","6219ba6a":"print(low ,uppper)","a870c8d1":"outdata1 = df[df['Fare'] <low]\noutdata2 = df[df['Fare'] > uppper]\n\nprint (len(outdata1) ,len(outdata2) )","1285693e":"df.describe()\ndf.describe()","5cefce6e":"df.isna().sum()\ndf.isna().sum()","0585798b":"# \uc911\uc559\uac12 median\uc73c\ub85c \uacb0\uce21\uac12 \uc815\ub9ac\ud558\uae30 \ndf['Age'] = df['Age'].fillna(df['Age'].median)\n\ndf['Age'] = df['Age'].fillna(df['Age'].median)","386b40e3":"df.isna().sum()\ndf.isna().sum()","4f65eb7a":"df.describe()","26e8a856":"df2= df.sort_values(['Fare','Survived','Cabin'], ascending=[False,False,True]).reset_index(drop=True)\ndf2= df.sort_values(['Fare','Survived','Cabin'], ascending=[False,False,True]).reset_index(drop=True)\n\ndf2.head(10)\n","9f45193b":"## Fare float \uac12\uc73c\ub85c \uc815\ub82c\ud574\ubcf4\uae30 \ndf= df.sort_values('Fare', ascending=False).reset_index(drop=True)\ndf= df.sort_values('Fare', ascending=False).reset_index(drop=True)\n\nprint(df.head(10))","39ffd7c3":"##Sex female \uc870\uac74 \uc0ac\uc6a9\ud558\uae30\ncond = (df['Sex']=='female') & (df['Survived']== 1)\ncond = (df['Sex']=='female') & (df['Survived']== 1)\n\nprint(df[cond].head(10))\nprint(df[cond].head(10))\n","95f76170":"#\uc774\uc0c1\uce58 \ub370\uc774\ud130 \uad6c\ud558\uae30"}}