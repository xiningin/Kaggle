{"cell_type":{"a5e1ffc8":"code","23f6e110":"code","0875687a":"code","5f23fab2":"code","96a2d107":"code","c6926003":"code","6c19c376":"code","2d0036bc":"code","72a4f2c8":"code","89cc28f6":"code","c6c4f3c4":"code","5b2fd62c":"markdown","45ad61d5":"markdown","8b81bdcd":"markdown","f8bba870":"markdown","b4482aa3":"markdown","20d418d7":"markdown","34a1619b":"markdown","60d61703":"markdown","9e41e2e0":"markdown"},"source":{"a5e1ffc8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf = df.sample(frac=1)\ndf.head()","23f6e110":"df.hist(figsize=(16,10))","0875687a":"fig, ax = plt.subplots(figsize=(15,13)) \n\nmatrix = np.triu(df.corr(),k=1)\nsns.heatmap(df.corr(), annot=True, mask = matrix)\nplt.title(\"Correlation matrix between patient features\\n\", fontsize=12, color='#009432')","5f23fab2":"data = df.drop(['DEATH_EVENT', 'time'], axis = 1)\ntargets = df['DEATH_EVENT']","96a2d107":"num_columns = ['age', 'creatinine_phosphokinase', 'ejection_fraction', 'platelets', 'serum_creatinine', 'serum_sodium']\ncat_columns = ['anaemia', 'diabetes', 'high_blood_pressure', 'sex', 'smoking']\ncolumns = num_columns + cat_columns","c6926003":"num_data = data[num_columns]\ncat_data = data[cat_columns]","6c19c376":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nscaled_num_data = pd.DataFrame(scaler.fit_transform(num_data))","2d0036bc":"processed_data = pd.concat([scaled_num_data, cat_data], axis=1, sort=False)\nnum_columns_dict = {i : num_columns[i] for i in range(len(num_columns))}\nprocessed_data = processed_data.rename(columns = num_columns_dict)\nprocessed_data.head()","72a4f2c8":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\n\nforest_clf = RandomForestClassifier()\n\nprint(cross_val_score(forest_clf, processed_data, targets, cv = 5))","89cc28f6":"forest_clf.fit(processed_data, targets)","c6c4f3c4":"top_idx = 6\n\nimportances = forest_clf.feature_importances_\nstd = np.std([tree.feature_importances_ for tree in forest_clf.estimators_],\n             axis=0)\nindices = np.argsort(importances)[::-1]\nnames = [columns[i] for i in indices]\n\n# Plot the impurity-based feature importances of the forest\nplt.figure(figsize=(14,8))\nplt.title(\"Feature ranking\")\nplt.bar(range(top_idx), importances[indices[:top_idx]],\n        color=\"r\", yerr=std[indices[:top_idx]], align=\"center\")\nplt.xticks(range(top_idx), names[:top_idx])\nplt.xlim([-1, top_idx])\nplt.ylabel(\"Importance and standard deviation of the features\", fontsize=12)\nplt.show()","5b2fd62c":"The most important indicators, based on the correlation are the **age**, the **ejection_fraction**, the **serum_creatinine** and the **serum_sodium**.\n\nWe do not take the *time* into account since the event of death impacts this feature (the follow-up period). Hence it is not useful in order to detect risks of death before the eventual death happens.","45ad61d5":"## Loading data","8b81bdcd":"## Extract insights from the trained classifier","f8bba870":"## Training a classifier","b4482aa3":"## Exploratory Data Analysis","20d418d7":"## Prepare the data","34a1619b":"The results are in line with those obtained from the correlations, except for the **platelets** feature, which is not as correlated to the death event as the other features but is still important for our model.","60d61703":"This dataset contains medical information about patients and if they died from heart failure.\n\nIn this notebook, we will train a model to **detect if a patient presents a high risk of dying of heart failure** based on its medical information.\n\nWe will also highlight the most important features to detect if a patient will die, by looking at the **correlations** and at **the most used features by our model**.","9e41e2e0":"# Heart Failure Prediction"}}