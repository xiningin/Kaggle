{"cell_type":{"c1683447":"code","61f14764":"code","5126b0f4":"code","a55819fc":"code","56912fa3":"code","6108fb35":"code","02149b41":"code","cc825351":"code","676b4e65":"code","a673b804":"code","1ba57954":"code","4172d360":"code","0e8420e5":"code","14d029cb":"code","8976a0bd":"code","c3f911f7":"code","eb4e93b3":"code","62cb4c7a":"code","082f1315":"code","045640d3":"code","144008d2":"code","01e2b65a":"code","24fd00da":"code","8fb35c6d":"code","d40408ea":"code","2ad157e1":"markdown","406561f8":"markdown","59a41b72":"markdown","d9bd4370":"markdown","d679a563":"markdown","eef5edf5":"markdown","3f8866e5":"markdown","284e5c1a":"markdown","1f924a2b":"markdown","9723fbc9":"markdown","dfbee5dc":"markdown","774db478":"markdown"},"source":{"c1683447":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Any results you write to the current directory are saved as output.","61f14764":"# csv file for 'Automobile Data Set'\ncsv_file = '\/kaggle\/input\/auto.csv'\n# headers supplied for the data set\nheaders = [\"symboling\",\"normalized-losses\",\"make\",\"fuel-type\",\"aspiration\", \"num-of-doors\",\"body-style\",\n         \"drive-wheels\",\"engine-location\",\"wheel-base\", \"length\",\"width\",\"height\",\"curb-weight\",\"engine-type\",\n         \"num-of-cylinders\", \"engine-size\",\"fuel-system\",\"bore\",\"stroke\",\"compression-ratio\",\"horsepower\",\n         \"peak-rpm\",\"city-mpg\",\"highway-mpg\",\"price\"]","5126b0f4":"# using pandas to read csv file, assign headers to names\ndf = pd.read_csv(csv_file, names = headers)\ndf.head(10)","a55819fc":"df.replace('?', np.nan, inplace = True)\ndf.head()","56912fa3":"# identify missing data\/values\nmissing_data = df.isnull().sum().sort_values()\nmissing_data","6108fb35":"# explore d_types, columns etc\ndf.info()","02149b41":"df.describe().T","cc825351":"avg_normloss = df['normalized-losses'].astype('float').mean()\navg_bore = df['bore'].astype('float').mean()\navg_stroke = df['stroke'].astype('float').mean()\navg_horse = df['horsepower'].astype('float').mean()\navg_rpm = df['peak-rpm'].astype('float').mean()\nprint(avg_normloss, avg_bore, avg_stroke, avg_horse, avg_rpm)","676b4e65":"# replacing\ndf['normalized-losses'].replace(np.nan, avg_normloss, inplace = True)\ndf['bore'].replace(np.nan, avg_bore, inplace = True)\ndf['stroke'].replace(np.nan, avg_stroke, inplace = True)\ndf['horsepower'].replace(np.nan, avg_horse, inplace = True)\ndf['peak-rpm'].replace(np.nan, avg_rpm, inplace = True)","a673b804":"# use idxmax() method to identify most occuring value\ndf['num-of-doors'].value_counts().idxmax()","1ba57954":"df['num-of-doors'].replace(np.nan, 'four', inplace = True)","4172d360":"# drop row of missing values\ndf.dropna(subset = ['price'], axis = 0, inplace = True)\n\n# reset index to account for dropped rows\ndf.reset_index(drop = True, inplace = True)","0e8420e5":"# ensure dataframe has no more missing values\nmissing_check = df.isnull().sum().sort_values()\nmissing_check","14d029cb":"df.dtypes","8976a0bd":"# convert to floats\ndf[['bore', 'stroke', 'peak-rpm', 'price']] = df[['bore',\n                                                  'stroke',\n                                                  'peak-rpm',\n                                                  'price']].astype('float')\n\n# convert to integers\ndf[['normalized-losses', 'horsepower']] = df[['normalized-losses',\n                                             'horsepower']].astype('int')","c3f911f7":"specs = ['length', 'width', 'height']\nfor s in specs:\n    df[s] = df[s]\/df[s].max()\n\n# print results   \ndf[specs].head()","eb4e93b3":"# use numpy.linspace() to create 4 equally spaced numbers between \n# the min and max of horsepowers range\nbins = np.linspace(min(df['horsepower']), max(df['horsepower']), 4)\nbins","62cb4c7a":"# create group names for bins\nbin_names = ['Low', 'Medium', 'High']","082f1315":"df['horsepower-binned'] = pd.cut(df['horsepower'], \n                                 bins,\n                                 labels = bin_names, \n                                 include_lowest = True)\n\ndf[['horsepower','horsepower-binned']].head(20)","045640d3":"dummy_fuel = pd.get_dummies(df[\"fuel-type\"])\ndummy_fuel.head()","144008d2":"# change column name for clarity and ease of access\ndummy_fuel.rename(columns={'fuel-type-diesel':'gas', 'fuel-type-diesel':'diesel'}, inplace=True)\ndummy_fuel.head()","01e2b65a":"# merge data frame \"df\" and \"dummy_variable_1\" \ndf = pd.concat([df, dummy_fuel], axis=1)\n\n# drop original column \"fuel-type\" from \"df\"\ndf.drop(\"fuel-type\", axis = 1, inplace=True)","24fd00da":"# get dummy variable for aspiration\ndummy_asp = pd.get_dummies(df['aspiration'])\n\n# rename column for clarity\ndummy_asp.rename({'std' : 'aspiration-std', 'turbo': 'aspiration-turbo'}, inplace=True)\ndummy_asp.head()","8fb35c6d":"# merge dummy aspiration variable to data frame\ndf = pd.concat([df, dummy_asp], axis=1)\n\n# drop original column \"fuel-type\" from \"df\"\ndf.drop(\"aspiration\", axis = 1, inplace=True)\ndf.head()","d40408ea":"# df.to_csv('Cleaned_Auto.csv')","2ad157e1":"## Drop row of missing data\n","406561f8":"## Using MODE\n**Find most occuring value: 'four' or 'two'**","59a41b72":"# 2) Correct Data Format  \n\n**Ensure columns are assigned to the correct data types**","d9bd4370":"**Use pandas.cut() method to determine which bin each value of horsepower belongs to.**","d679a563":"**Replace NaN values with 'four'**","eef5edf5":"# 1) Identify missing values  \n\n**Replace '?' with 'np.nan'**\n","3f8866e5":"# 5) Export Clean DataSet  \n\n**Use to_csv from pandas to perform this operation**","284e5c1a":"# 4) Binning  \n\n**Used to transform continuous numerical variables into discrete categorical 'bins', for grouped analysis.**\n\n","1f924a2b":"## Using MEAN\n**Calculate mean of missing value columns, and replace np.nan with mean**","9723fbc9":"# 3) Data Normalization  \n\n**This process entails transforming values of variables into a similar range, ie between 0 and 1**","dfbee5dc":"### Create Dummy Variables  \n\n*Dummy variable is a numerical variable used to label categories. Specifical used for regression analysis*","774db478":"## Based on the summary above, the Automobile csv file has 205 rows and contains 7 columns that are missing data\n\n**The columns missing data and appropiate operation to perform:**\n\n*Using MEAN method to fill missing data*\n\n1) normalized-losses: 41 missing data\n\n2) bore: 4 missing data\n\n3) stroke: 4 missing data\n\n4) horsepower: 2 missing data\n\n5) peak-rpm: 2 missing data\n\n*Using FREQUENCY\/MODE to fill missing data:*\n\n1) num-of-doors: 2 missing data\n\n*Dropping row of missing data:*\n\n1) price: 4 missing data"}}