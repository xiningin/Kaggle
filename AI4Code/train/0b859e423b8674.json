{"cell_type":{"cc998389":"code","a9723e28":"code","c0deb3d3":"code","3f07e14e":"code","19684be3":"code","06a98973":"code","e8b7a3ce":"code","440efa64":"code","fa92c43b":"code","aaee1f3c":"code","7d4d2ff2":"code","fe07fd75":"code","f674ceaa":"code","c21ef13c":"code","959bbf82":"code","4196d4a8":"code","4b9b2f11":"code","d7a7b4b5":"code","cd1431e8":"code","38701538":"code","5536eca3":"code","93e476d5":"code","00946eb9":"code","85a23577":"code","b665529e":"code","712a2ea3":"code","ef24717d":"code","03602c96":"code","887e19ca":"code","9dd2e42b":"code","b9cf7ec1":"code","5445ce29":"code","cdb7ff32":"code","6b9f331e":"code","441c76d1":"code","0655daf1":"code","a03c0ef6":"code","b552622f":"code","08abd9e5":"code","c04f37a8":"code","98aebcf8":"code","45e5b41f":"code","80c9bba2":"code","77a6d7fb":"code","2aca3a5e":"code","a54627df":"code","34419dab":"code","cc35fa31":"code","dd91eba7":"code","6f1f3220":"code","62f0d48a":"code","e5346aad":"code","13ff86f1":"code","3de2738c":"code","ac23708d":"code","0c36b271":"code","8dc9d20f":"code","037634d1":"code","874a58be":"code","d1d9486e":"code","9c1bace1":"markdown","b6122c90":"markdown","0e0500b1":"markdown","4a89dd00":"markdown","86a6a2b4":"markdown","47191090":"markdown","86a92a84":"markdown","af466dd2":"markdown","286e77d6":"markdown","d6f0f7a1":"markdown","d6d4c8ab":"markdown","e6a8498d":"markdown","32b9d405":"markdown","c2c28699":"markdown","d74de777":"markdown","7b7785be":"markdown","b6796ecb":"markdown","9a1e8b9c":"markdown","d5334bf6":"markdown","04d8cc94":"markdown","624ea326":"markdown","de8ea36c":"markdown","8a4cca16":"markdown","43e27c4a":"markdown","dfa59576":"markdown","305d2a0a":"markdown","bc9be77d":"markdown","1c615656":"markdown","c0774fae":"markdown","0ab199dd":"markdown","721d4fe3":"markdown","e33c97ed":"markdown","0937ee4b":"markdown","25974fde":"markdown","fc31a3ea":"markdown","01c73fa5":"markdown","c9104455":"markdown","09f3153a":"markdown","448b3557":"markdown","4825db45":"markdown","14bb2148":"markdown","55049771":"markdown","745447dc":"markdown","774c68c2":"markdown","df2700a2":"markdown","387efc54":"markdown","a7f2bcdd":"markdown","a792cdac":"markdown","60324fe8":"markdown","218c749a":"markdown","2b34ced9":"markdown","2eb1463c":"markdown","3f18fd7f":"markdown","53cb5859":"markdown","bd64eb51":"markdown","12c5bdfe":"markdown","cf271fe7":"markdown","eca599eb":"markdown","767366a0":"markdown","727e98c8":"markdown","b991959c":"markdown","4332a202":"markdown","6526c988":"markdown"},"source":{"cc998389":"import numpy as np # linear algebra\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy import stats\nfrom scipy.stats import norm, skew\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a9723e28":"#Loading the data\ndf = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf.head()","c0deb3d3":"with open(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/data_description.txt\",'r') as f:\n    print(f.read())","3f07e14e":"#Plotting the correlation\ncorr_df = df.corr()['SalePrice'].sort_values(ascending=False)\nplt.figure(figsize=(5,8))\nsns.barplot( y=corr_df.index, x=corr_df)\nplt.xlabel(\"Correlation with Salesprice\")","19684be3":"#Plotting a relationship b\/w GrLivArea and Salesprice\nfig, ax = plt.subplots()\nax.scatter(x = df['GrLivArea'], y = df['SalePrice'])\nplt.ylabel('SalePrice', fontsize=13)\nplt.xlabel('GrLivArea', fontsize=13)\nplt.show()","06a98973":"df = df.drop(df[(df['GrLivArea']>4000) & (df['SalePrice']<300000)].index)","e8b7a3ce":"#Lets plot the curve again\nfig, ax = plt.subplots()\nax.scatter(x = df['GrLivArea'], y = df['SalePrice'])\nplt.ylabel('SalePrice', fontsize=13)\nplt.xlabel('GrLivArea', fontsize=13)\nplt.show()","440efa64":"#Creating a dataframe for the plot analysis\ndf_plot = df[['MSSubClass','MSZoning','LotFrontage','LotArea','Street','Alley', 'LotShape','LandContour','LotConfig',\n                'LandSlope','SalePrice']]","fa92c43b":"df_plot.head()","aaee1f3c":"df_plot.isna().sum()","7d4d2ff2":"#Seperating categorical columns from the data\ncat_col = df_plot.loc[:,df_plot.dtypes==np.object].columns\ncat_col","fe07fd75":"df_plot.describe(include=['O'])","f674ceaa":"#Let's do some plotting on the categorical features\nfor col in cat_col:\n    fig, axes = plt.subplots(figsize=(5,3), dpi=150)\n    sns.barplot(data=df_plot, x=col, y='SalePrice', palette ='husl')","c21ef13c":"df.drop('LotConfig', axis=1, inplace=True)\ndf.drop('Alley', axis=1, inplace=True)","959bbf82":"#Exploring the correlation of numerical features\nplt.figure(figsize=(5,3), dpi=150)\nsns.heatmap(df_plot.corr(), annot=True)","4196d4a8":"fig, ax = plt.subplots(nrows=1,ncols=2, figsize=(9,4), dpi=150)\nax[0].scatter(x = df_plot['LotFrontage'], y = df['SalePrice'])\nax[1].scatter(x = df_plot['LotArea'], y = df['SalePrice'])\nax[0].set_ylabel('SalePrice', fontsize=13)\nax[0].set_xlabel('LotFrontage', fontsize=13)\nax[1].set_xlabel('LotArea', fontsize=13)\nfig.subplots_adjust(wspace=0.3)\nplt.show()","4b9b2f11":"df['LotFrontage'].fillna(df['LotFrontage'].median(), inplace=True)","d7a7b4b5":"df_location = df[['Neighborhood','Condition1','Condition2','Utilities','SalePrice']]","cd1431e8":"plt.figure(figsize=(8,3), dpi=150)\nsns.barplot(data=df_location, x='Neighborhood', y='SalePrice')\nplt.xticks(rotation=90);","38701538":"df.groupby('Neighborhood')['SalePrice'].median().sort_values(ascending=False)","5536eca3":"df_location.isna().sum()","93e476d5":"df_building = df[['BldgType','HouseStyle','OverallQual','OverallCond','YearBuilt','YearRemodAdd','SalePrice']]","00946eb9":"df_building.head()","85a23577":"sns.barplot(data=df_building, x='OverallQual', y='SalePrice')","b665529e":"fig, ax = plt.subplots(nrows=1,ncols=2, figsize=(10,4), dpi=150)\nax[0].scatter(x = df_building['YearBuilt'], y = df_building['SalePrice'])\nax[1].scatter(x = df_building['YearRemodAdd'], y = df_building['SalePrice'])\nax[0].set_ylabel('SalePrice', fontsize=13)\nax[0].set_xlabel('YearBuilt', fontsize=13)\nax[1].set_xlabel('YearRemodAdd', fontsize=13)\nfig.subplots_adjust(wspace=0.3)\nplt.show()","712a2ea3":"df_building.isna().sum()","ef24717d":"df_structure = df[['RoofStyle', 'RoofMatl', 'Exterior1st','Exterior2nd','MasVnrType','MasVnrArea','ExterQual','ExterCond',\n                  'Foundation','SalePrice']]\ndf_structure.head()","03602c96":"#Checking for missing values\ndf_structure.isna().sum()","887e19ca":"cat_cols = df_structure[df_structure.columns[df_structure.dtypes=='object']]\ncat_cols","9dd2e42b":"for col in cat_cols.columns:\n    plt.figure(figsize=(5,3), dpi=150)\n    sns.barplot(data=df,x=col, y='SalePrice')\n    plt.xticks(rotation=90)","b9cf7ec1":"plt.figure(figsize=(7,4), dpi=150)\nsns.scatterplot(data=df_structure, x='MasVnrArea', y='SalePrice')","5445ce29":"df_structure['MasVnrType'].value_counts()","cdb7ff32":"#Filling MasVnrType as 'None' for most values\ndf['MasVnrType'].fillna(df['MasVnrType'].mode()[0], inplace=True)","6b9f331e":"#Filling missing MasVnrArea with its median\ndf['MasVnrArea'].fillna(df['MasVnrArea'].median(), inplace=True)","441c76d1":"df_basement = df[['BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinSF1', 'BsmtFinType2', 'BsmtFinSF2',\n                  'BsmtUnfSF','TotalBsmtSF','BsmtFullBath','BsmtHalfBath','SalePrice']]\ndf_basement.head()","0655daf1":"\nfig, ax = plt.subplots(nrows=1,ncols=2, figsize=(9,3), dpi=150)\nax[0].scatter(x = df_basement['TotalBsmtSF'], y = df_basement['SalePrice'])\nax[1].scatter(x = df_basement['BsmtFinSF1'], y = df_basement['SalePrice'])\nax[0].set_ylabel('SalePrice', fontsize=13)\nax[0].set_xlabel('TotalBsmtSF', fontsize=13)\nax[1].set_xlabel('BsmtFinSF1', fontsize=13)\nfig.subplots_adjust(wspace=0.3)\nplt.show()","a03c0ef6":"df_basement.isna().sum()","b552622f":"#We replace basement quality and basement condition to 'None' for No basement\ndf['BsmtQual'].fillna('None', inplace=True)\ndf['BsmtCond'].fillna('None', inplace=True)\n\n#Removing the remaining columns, which we feel will not be of significance\ndf['BsmtExposure'].fillna('None', inplace=True)\ndf.drop(['BsmtFinType1','BsmtFinType2','BsmtFinSF2','BsmtHalfBath'], axis=1, inplace=True)","08abd9e5":"df_comfort = df[['Heating','HeatingQC','CentralAir','Electrical','Fireplaces','FireplaceQu','SalePrice']]\ndf_comfort.head()","c04f37a8":"df_comfort.isna().sum()","98aebcf8":"for col in df_comfort.drop(['Fireplaces','SalePrice'], axis=1).columns:\n    plt.figure(figsize=(5,3), dpi=150)\n    sns.barplot(data=df_comfort,x=col, y='SalePrice')\n    plt.xticks(rotation=90)","45e5b41f":"#Replacing the missing values of Quality as 'None' as fireplaces are missing from the remaining homes\ndf['FireplaceQu'].fillna('None', inplace=True)","80c9bba2":"#Filling the 'Electrical' missing value with the mode-Standard Circuit Breakers & Romex\ndf['Electrical'].fillna(df['Electrical'].mode()[0], inplace=True)","77a6d7fb":"df_livspace = df[['1stFlrSF','2ndFlrSF','LowQualFinSF','GrLivArea','FullBath','HalfBath','KitchenQual',\n                  'TotRmsAbvGrd','Functional','SalePrice']]\ndf_livspace.head()","2aca3a5e":"fig, ax = plt.subplots(nrows=1,ncols=2, figsize=(9,3), dpi=150)\nax[0].scatter(x = df_livspace['1stFlrSF'], y = df_livspace['SalePrice'])\nax[1].scatter(x = df_livspace['2ndFlrSF'], y = df_livspace['SalePrice'])\nax[0].set_ylabel('SalePrice', fontsize=13)\nax[0].set_xlabel('1stFlrSF', fontsize=13)\nax[1].set_xlabel('2ndFlrSF', fontsize=13)\nfig.subplots_adjust(wspace=0.3)\nplt.show()","a54627df":"#Dropping the feature\ndf.drop('LowQualFinSF', axis=1, inplace=True)","34419dab":"#plt.figure(fig)\nsns.barplot(data=df_livspace, x='KitchenQual', y='SalePrice')","cc35fa31":"sns.barplot(data=df_livspace, x='FullBath', y='SalePrice')","dd91eba7":"#Dropping the feature\ndf.drop('HalfBath', axis=1, inplace=True)","6f1f3220":"df_livspace.isna().sum()","62f0d48a":"df_exterior = df[['GarageType','GarageYrBlt','GarageFinish','GarageCars','GarageArea','GarageQual','GarageCond',\n                 'PavedDrive','WoodDeckSF','OpenPorchSF','EnclosedPorch','3SsnPorch','ScreenPorch','PoolArea',\n                 'PoolQC','Fence','MiscFeature','SalePrice']]\ndf_exterior.head()","e5346aad":"fig, ax = plt.subplots(nrows=2,ncols=2, figsize=(9,6), dpi=150)\nax[0][0].scatter(x = df_exterior['GarageArea'], y = df_exterior['SalePrice'])\nax[0][1].scatter(x = df_exterior['PoolArea'], y = df_exterior['SalePrice'])\nax[1][0].scatter(x = df_exterior['GarageYrBlt'], y = df_exterior['SalePrice'])\nax[1][1].scatter(x = df_exterior['GarageCars'], y = df_exterior['SalePrice'])\nax[0][0].set_ylabel('SalePrice', fontsize=13)\nax[0][0].set_xlabel('GarageArea', fontsize=13)\nax[0][1].set_xlabel('PoolArea', fontsize=13)\nax[1][0].set_xlabel('GarageYrBlt', fontsize=13)\nax[1][1].set_xlabel('GarageCars', fontsize=13)\nfig.subplots_adjust(wspace=0.3,hspace=0.3)\nplt.show()","13ff86f1":"df_exterior.isna().sum()","3de2738c":"df.drop(['MiscFeature','Fence','PoolArea','PoolQC','GarageYrBlt'], axis=1,inplace=True)","ac23708d":"df['GarageType'].fillna('None',inplace=True)\ndf['GarageFinish'].fillna('None',inplace=True)\ndf['GarageQual'].fillna('None',inplace=True)\ndf['GarageCond'].fillna('None',inplace=True)\n","0c36b271":"df.drop(['MiscVal','MoSold','YrSold','SaleType','Id'], axis=1, inplace=True)","8dc9d20f":"#Checking for any missing values in our dataset\ndf.isna().sum().sort_values(ascending=False)[:5]","037634d1":"cat_columns = df[df.columns[df.dtypes=='object']]\n\nfrom sklearn.preprocessing import LabelEncoder\nfor i in cat_columns:\n    label = LabelEncoder()\n    label.fit(df[i].values)\n    df[i] = label.transform(df[i].values)","874a58be":"plt.figure(figsize=(6,3), dpi=150)\nsns.distplot(df['SalePrice'] , fit=norm);\n\n# The fitted parameters used by the function\n(mu, sigma) = norm.fit(df['SalePrice'])\nprint( '\\n mu = {:.2f} and sigma = {:.2f}\\n'.format(mu, sigma))\n\n#Plot the distribution\nplt.legend(['Normal dist. ($\\mu=$ {:.2f} and $\\sigma=$ {:.2f} )'.format(mu, sigma)],\n            loc='best')\nplt.ylabel('Frequency')\nplt.title('SalePrice distribution')\n\n#Plot the QQ-plot\nfig = plt.figure(figsize=(6,3), dpi=150)\nres = stats.probplot(df['SalePrice'], plot=plt)\nplt.show()","d1d9486e":"#We use the numpy fuction log1p which  applies log(1+x) to all elements of the column\ndf[\"SalePrice\"] = np.log1p(df[\"SalePrice\"])\n\n#Check the new distribution \nplt.figure(figsize=(6,3), dpi=150)\nsns.distplot(df['SalePrice'] , fit=norm);\n\n# Get the fitted parameters used by the function\n(mu, sigma) = norm.fit(df['SalePrice'])\nprint( '\\n mu = {:.2f} and sigma = {:.2f}\\n'.format(mu, sigma))\n\n#Now plot the distribution\nplt.legend(['Normal dist. ($\\mu=$ {:.2f} and $\\sigma=$ {:.2f} )'.format(mu, sigma)],\n            loc='best')\nplt.ylabel('Frequency')\nplt.title('SalePrice distribution')\n\n#Get also the QQ-plot\nfig = plt.figure(figsize=(6,3), dpi=150)\nres = stats.probplot(df['SalePrice'], plot=plt)\nplt.show()","9c1bace1":"Now, for simplicity, let's analyse the data, by splitting the features to several sub-components \n\nFrom the detailed study of the data, from data description, the features can be clearly split into\n1. Lot\/Plot details\n2. Location details\n3. Building whereabouts\n4. Building structure details\n5. Basement details\n6. Temperature comfort details\n7. Living space details\n8. Exterior details","b6122c90":"**But, we have 259 values missing from the Lot Frontage, and we replace that with the median of the values.**\n\n\n*Note: We use 'median instead of 'mean' as we have outlier values, and mean is too sensitive to outliers*","0e0500b1":"**By exploring the features, we get to know that the features explain every aspect from the exterior structure to plot structure to interior details.**\n\n**So we must be able to split the features, and do a exploratory data analysis of each aspect, and before that let's check do some preliminary analysis on the entire data**","4a89dd00":"**From the data description, the dataset is the Ames Housing dataset, which has about 79 features describing the aspects of a dream home. We will explore the data, before anything**","86a6a2b4":"**Let's explore the Masonry veneer area, which has a decent correlation with Salesprice**","47191090":"**One final thing to check before proceeding to the predictions would be to check the skewness of the target variable. We will have a check and try to use logarithmic transformation**","86a92a84":"**We create a dataframe with these features, and for analysis purpose we add salesprice to all the seperate dataframes we create**","af466dd2":"**We dont have any missing values here!**","286e77d6":"# 7. Living space details","d6f0f7a1":"# 3. Building whereabouts","d6d4c8ab":"* BsmtQual: Height of the basement\n* BsmtCond: General condition of the basement\n* BsmtExposure: Walkout or garden level basement walls\n* BsmtFinType1: Quality of basement finished area\n* BsmtFinSF1: Type 1 finished square feet\n* BsmtFinType2: Quality of second finished area (if present)\n* BsmtFinSF2: Type 2 finished square feet\n* BsmtUnfSF: Unfinished square feet of basement area\n* TotalBsmtSF: Total square feet of basement area\n* BsmtFullBath: Basement full bathrooms\n* BsmtHalfBath: Basement half bathrooms","e6a8498d":"**The data now seems like a normally distributed one**","32b9d405":"Neighborhood should be the most important feature in terms of location, lets explore that","c2c28699":"There are no missing values here...","d74de777":"# 8. Exterior","7b7785be":"* GarageType: Garage location\n* GarageYrBlt: Year garage was built\n* GarageFinish: Interior finish of the garage\n* GarageCars: Size of garage in car capacity\n* GarageArea: Size of garage in square feet\n* GarageQual: Garage quality\n* GarageCond: Garage condition\n* PavedDrive: Paved driveway\n* WoodDeckSF: Wood deck area in square feet\n* OpenPorchSF: Open porch area in square feet\n* EnclosedPorch: Enclosed porch area in square feet\n* 3SsnPorch: Three season porch area in square feet\n* ScreenPorch: Screen porch area in square feet\n* PoolArea: Pool area in square feet\n* PoolQC: Pool quality\n* Fence: Fence quality\n* MiscFeature: Miscellaneous feature not covered in other categories","b6796ecb":"* BldgType: Type of dwelling\n* HouseStyle: Style of dwelling\n* OverallQual: Overall material and finish quality\n* OverallCond: Overall condition rating\n* YearBuilt: Original construction date\n* YearRemodAdd: Remodel date","9a1e8b9c":"Let's see, which all features, come into each category","d5334bf6":"**We drop the 'alley' feature also, as most number of homes does not have an alley, and hence would not contribute much to our cause**","04d8cc94":"# 5. Basement details","624ea326":"Heating Quality, and air conditioning have good impact on the salesprice, no wonder thermal comfort is of utmost importance!","de8ea36c":"**LotFrontage and LotArea seems to have a good relationship with the Salesprice, as implied by the correlation matrix**","8a4cca16":"* 1stFlrSF: First Floor square feet\n* 2ndFlrSF: Second floor square feet\n* LowQualFinSF: Low quality finished square feet (all floors)\n* GrLivArea: Above grade (ground) living area square feet\n* FullBath: Full bathrooms above grade\n* HalfBath: Half baths above grade\n* Bedroom: Number of bedrooms above basement level\n* Kitchen: Number of kitchens\n* KitchenQual: Kitchen quality\n* TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n* Functional: Home functionality rating","43e27c4a":"**The total basement area has a good correlation with Salesprice, and hence that becomes the most important feature in terms of basement, along with BsmtFinSF1**","dfa59576":"**Kitchen Quality and Full bathrooms are of utmost priority too, while buying a house!!**","305d2a0a":"**This section deals with the thermal comfort aspect regarding the house, and let's see how that will affect the salesprice of the house**","bc9be77d":"**To negate any outlier influence, lets try grouping them as median of Salesprice**","1c615656":"**Again, we drop 'HalfBath' feature, as the correlation is too less for that, with Saleprice**","c0774fae":"# Skewness in Target","0ab199dd":"**Let's fill the remaining missing values with None, implying no garages**","721d4fe3":"**And the last step would be to do a label encoding to the categorical features**","e33c97ed":"**We are also dropping some columns from the dataset, which we feel will have minimum impact**","0937ee4b":"**Overall Quality, Living area, Garage area, basement area becomes some of the most correlated features, and that makes complete sense**","25974fde":"This looks pretty clean!","fc31a3ea":"**We have already seen the visualizations for the Living area square feet, so we will explore the remaining features**\n\n**Let's dive deep into some dimensional features, and see how it can help us**","01c73fa5":"As per our common intuition, Lot Area feature will be important, but from our correlation plot, Lot frontage also has a impact on SalePrice. So let's plot and explore","c9104455":"* RoofStyle: Type of roof\n* RoofMatl: Roof material\n* Exterior1st: Exterior covering on house\n* Exterior2nd: Exterior covering on house (if more than one material)\n* MasVnrType: Masonry veneer type\n* MasVnrArea: Masonry veneer area in square feet\n* ExterQual: Exterior material quality\n* ExterCond: Present condition of the material on the exterior\n* Foundation: Type of foundation","09f3153a":"* Heating: Type of heating\n* HeatingQC: Heating quality and condition\n* CentralAir: Central air conditioning\n* Electrical: Electrical system\n* Fireplaces: Number of fireplaces\n* FireplaceQu: Fireplace quality","448b3557":"**And this also shows nothing different as these 3 places remain the hotspot in Ames city**","4825db45":"Garage area and Garage cars have a good correlation as per our original correlation plot, in most cases. Garage Year built and pool area doesn' seem to contribute much","14bb2148":"### Exploring the Categorical variables","55049771":"* **Neighborhood**: Physical locations within Ames city limits\n* **Condition1**: Proximity to main road or railroad\n* **Condition2**: Proximity to main road or railroad (if a second is present)\n* **Utilities**: Type of utilities available","745447dc":"**Now, let's see if we can get such a perfection in year built and year remodelled**","774c68c2":"**Let's start with the target variable, 'SalesPrice', we will do some exploration**","df2700a2":"**We see 2 outlier values, down to the bottom, which has living area, and is available for a lower salesprice. We will remove these outliers, before performing any analysis, as that would mess with the later performance of the model**","387efc54":"**Northridge, Northridge Heights and Stone Brook are the key hotspots in the city, and obviously the prices are high**","a7f2bcdd":"# SalesPrice - Target Variable","a792cdac":"**Now comes one of the most important aspects while purchasing a home, the living space, the interior. Let's explore this in detail, as we expect some deep insights from here**","60324fe8":"**No missing values here too!**","218c749a":"**Pool quality, Fence, Misc Features are missing from most of the observations, maybe these facilities are absent in most of the houses we covered, hence we drop these features**\n\n**Pool Area also have lots of values as 0, and hence would not contribute to our cause, we will drop that too.**","2b34ced9":"# 2. Location details","2eb1463c":"As per the plots, we can see a right skew to the target variable. Let's do a log transformation on the variable to make it normally distributed ","3f18fd7f":"**From our correlation plot, Overall Quality and Year built had the highest correlation, let's visualize and explore**","53cb5859":"# 4. Building structure details","bd64eb51":"**From the initial look of it, we see:**\n* There are lots of missing values for some fields\n* General number of features are too high.\n\n**So let's try understanding the features, by reading the data description**","12c5bdfe":"# 6. Comfort","cf271fe7":"**From the plots, 'LotConfig' seems to have a less say, in terms of sales price, and hence we drop that feature from the original dataset**\n\n*Note: We will use the split feature dataset only to visualize the data better, while we do the tranformations to the original dataset*","eca599eb":"**Of the features, low quality finished sq feet, doesn't provide any valuable insight as most values are zero, hence we drop that feature**","767366a0":"# 1. Lot\/Plot details","727e98c8":"**The plot looks good, with a sudden increase in salesprice close to 2000 and further**","b991959c":"# Understanding the Data","4332a202":"**That's a perfect correlation!**","6526c988":"**It includes all the features which says about the plot, so, from the data, we've added below features:**\n\n* MSSubClass: The building class\n* MSZoning: The general zoning classification\n* LotFrontage: Linear feet of street connected to property\n* LotArea: Lot size in square feet\n* Alley: Type of alley access\n* LotShape: General shape of property\n* LandContour: Flatness of the property\n* Utilities: Type of utilities available\n* LotConfig: Lot configuration\n* LandSlope: Slope of property"}}