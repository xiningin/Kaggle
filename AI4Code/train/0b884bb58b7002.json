{"cell_type":{"0af77766":"code","cfca9184":"code","43542bf4":"code","9d42c026":"code","0612e828":"code","b35ffc5f":"code","bf6ba90e":"code","814cabfd":"code","0aa06656":"code","afda2c2d":"code","7eeb8228":"code","8ae93027":"code","c893c0c8":"code","9d3bdd9f":"code","b639fc87":"code","3605e365":"code","0d54a0d1":"code","b02955fe":"code","7be8ef13":"code","7a4ae54b":"code","95f8895c":"code","a4b72df2":"code","dd65c420":"code","5e7f4d5e":"code","21162025":"code","9ea961fa":"code","5a45136d":"code","0bf0c823":"code","a3ba1ca8":"code","e111ed16":"code","9387e4a3":"code","81326f89":"code","c2244c40":"code","bf35ce62":"code","4cdb1a09":"code","c5d15a0c":"code","7b53db58":"code","2f3ea16b":"code","a8eed9fd":"code","f410ee99":"code","2860123f":"code","a454f6a6":"code","68546149":"code","eb9e1419":"code","5cb3a2bb":"code","a9a981f1":"markdown","3ab4cc40":"markdown","c137cbf0":"markdown","311c888c":"markdown","b0e9d378":"markdown","2209192e":"markdown","65eedafc":"markdown","c36603a8":"markdown","ffa66bed":"markdown","70dd9a4d":"markdown","4ee54eb7":"markdown","ff5c9e0b":"markdown","10612f99":"markdown","1fb7ab30":"markdown","bc656ae2":"markdown","21316a27":"markdown","1e5e25b1":"markdown","019c95df":"markdown","b6ea6c5a":"markdown","8010f4f1":"markdown","c98f9d06":"markdown","2bc86c32":"markdown","c47944b3":"markdown","5bbb43a7":"markdown","de7fd117":"markdown","6abdd902":"markdown","a33f7851":"markdown","976a2ba9":"markdown","4b1e8101":"markdown","b3aba4e8":"markdown","8a664945":"markdown","42a4600d":"markdown","e2a46fb0":"markdown","57df68b3":"markdown","e41e871f":"markdown","f7f72acf":"markdown","bc397ae3":"markdown","0a1e6026":"markdown","1c2fc167":"markdown","66240512":"markdown"},"source":{"0af77766":"import pandas as pd\nimport numpy as np\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","cfca9184":"df = pd.read_csv(\"..\/input\/top-play-store-games\/android-games.csv\")","43542bf4":"df.head()","9d42c026":"df.shape","0612e828":"df.info()","b35ffc5f":"df.isnull().sum()","bf6ba90e":"df.price.value_counts()","814cabfd":"df.describe()","0aa06656":"df.installs.value_counts()","afda2c2d":"def in_million(inst):\n    if inst == \"500.0 k\":\n        return \"0.5 M\"\n    elif inst == \"100.0 k\":\n        return \"0.1 M\"\n    else:\n        return inst","7eeb8228":"df.installs = df.installs.apply(in_million)","8ae93027":"df.installs.value_counts()","c893c0c8":"df.installs = df[\"installs\"].str.replace(\"M\", \"\").str.strip().astype(\"float\")","9d3bdd9f":"df.installs.value_counts()","b639fc87":"df.price.value_counts()","3605e365":"df.paid.value_counts()","0d54a0d1":"df.drop(\"price\", axis=1, inplace=True)\n\n# df = df.drop(\"price\", axis=1)","b02955fe":"df.shape","7be8ef13":"df.info()","7a4ae54b":"df.category.value_counts(normalize=True) ","95f8895c":"df.category.value_counts() \/ df.shape[0] * 100","a4b72df2":"fig = px.histogram(df, x=\"category\", title='Game Categories')\nfig.update_layout(xaxis=go.layout.XAxis(tickangle=90))\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","dd65c420":"df.columns","5e7f4d5e":"df[\"total ratings\"].describe()","21162025":"fig = px.histogram(data_frame=df, x=\"total ratings\", title=\"Game Total Ratings\")\nfig.show()","9ea961fa":"fig = px.box(data_frame=df, x=\"total ratings\", hover_data=df[[\"title\", \"category\"]])\nfig.show()","5a45136d":"df.installs.describe()","0bf0c823":"fig = px.histogram(data_frame=df, x=\"installs\", title=\"Number of Game Installs\")\nfig.show()","a3ba1ca8":"fig = px.box(data_frame=df, x=\"installs\", title=\"Number of Game Installs\", hover_data=df[[\"title\", \"category\"]])\nfig.show()","e111ed16":"df.paid.value_counts(normalize=True)*100","9387e4a3":"df_paid_notpaid= df['paid'].value_counts()\nlabel =['Free','NotPaid']\nfig = px.pie(df_paid_notpaid, values=df['paid'].value_counts().values, names=label,\n             title='Paid & Free Games')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","81326f89":"tot_rat_by_cat = df.groupby(\"category\")[\"total ratings\"].mean()\ntot_rat_by_cat","c2244c40":"fig = px.bar(data_frame=tot_rat_by_cat, x= tot_rat_by_cat.index, y=tot_rat_by_cat.values, labels={'y':'Total Ratings'})\nfig.update_layout(xaxis=go.layout.XAxis(tickangle=90))\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","bf35ce62":"inst_by_cat = df.groupby(\"category\")[\"installs\"].mean()\ninst_by_cat","4cdb1a09":"fig = px.bar(data_frame=inst_by_cat, x= inst_by_cat.index, y=inst_by_cat.values, labels={'y':'Install'})\nfig.update_layout(xaxis=go.layout.XAxis(tickangle=90))\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","c5d15a0c":"growth_first30days_by_cat = df.groupby(\"category\")[\"growth (30 days)\"].mean()\ngrowth_first30days_by_cat","7b53db58":"fig = px.bar(data_frame=growth_first30days_by_cat, x=growth_first30days_by_cat.index, y=growth_first30days_by_cat.values, labels={'y':'Growth in 30 Days'})\nfig.update_layout(xaxis=go.layout.XAxis(tickangle=90))\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","2f3ea16b":"growth_first60days_by_cat = df.groupby(\"category\")[\"growth (60 days)\"].mean()\ngrowth_first60days_by_cat","a8eed9fd":"fig = px.bar(data_frame=growth_first60days_by_cat, x=growth_first60days_by_cat.index, y=growth_first60days_by_cat.values, labels={'y':'Growth in 60 Days'})\nfig.update_layout(xaxis=go.layout.XAxis(tickangle=90))\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","f410ee99":"top_3_ranked = df[df[\"rank\"] < 4][[\"rank\", \"category\",\"total ratings\", \"title\", \"installs\"]]\ntop_3_ranked","2860123f":"fig = px.scatter(data_frame=top_3_ranked, x='total ratings', y='title', \n                 hover_data = top_3_ranked[['category','rank']], color='category', \n                 title = \"Top 3 Games by Their Total Ratings\")\nfig.show()","a454f6a6":"fig = px.scatter(data_frame=top_3_ranked, x='installs', y='title', \n                 hover_data = top_3_ranked[['category','rank']], color='category', \n                 title = \"Top 3 Games by Their Installs\")\nfig.show()","68546149":"top_10 = df.sort_values(\"installs\", ascending=False)[:11]\ntop_10","eb9e1419":"fig = px.bar(data_frame=top_10, x= 'title', y='installs', color=\"category\")\nfig.update_layout(xaxis={\"categoryorder\":\"total descending\"})\nfig.show()","5cb3a2bb":"fig = px.bar(data_frame=top_10, x= 'title', y='total ratings', color=\"category\")\nfig.update_layout(xaxis={\"categoryorder\":\"total descending\"})\nfig.show()","a9a981f1":"- It can be inferred from the chart above ther even though Candy Crush Saga and Subway Surfers have 1 Billion installs, it does not automatically mean that, they will get the most total number of ratings.","3ab4cc40":"###### Let's see game categories first. \n- With \"normalize=True\" parameter, we have just returned relative frequescies of game catgories. Same output might be reahced with # df.category.value_counts() \/ df.shape[0]\". ","c137cbf0":"###### This time, let's se what we have in terms of number of installattions by category","311c888c":"- We have rightly skewed distribution with possible outliers on max side of our distribution.\n- Candy Crush Saga with 1 Billion install and Clash of Clans with 500 Million installs shown in the box plot.\n- Size of the outliers definitely affect mean value and distributions.\n- Difference between mean value and median value is really huge (mean = 29.1M,median= 10M)\n- As it was the case with the above distribution, it would be a good idea to use median based approach due to same reason.","b0e9d378":"- It can be inferred from bar chart above that games in the action, casual, strategy,arcade, sports categories are getting considerably more ratings than, games in the educational, music categories.","2209192e":"- It can be inferred from the very above output that our distribution will be right-skewed due to fact that mean is higher than median. And we might expect some outliers in max side of our distribution.","65eedafc":"As it is case with other areas or fields of different studies or professions, it is highly important to know your dataset before diving into analysis. First and foremost, we need to understand what we want to do with a given dataset and what can be done with it. ","c36603a8":"###### Let's move to number of games installed.","ffa66bed":"###### Now, let's chack our dataset in terms of free-paid games","70dd9a4d":"###### And let's finalize our analysis with the top 10 games in terms of number of installments.","4ee54eb7":"###### Let's see what we have in terms of total ratings by category.","ff5c9e0b":"All categories are almost in the same size","10612f99":"- Our histogram displays that our distribution is positively skewed. However, it cannot say anything about outliers for sure. Let's check whether we have any with boxplot.","1fb7ab30":"As it is the case with every EDA study, let's import the libraries that are required.\n\n\nDue to its interactive and dynamic structre, pltoly will be preferred for data visualization.","bc656ae2":"Let's focus on \"intalls\" column and make some changes on it.","21316a27":"Then, let's get rid of \"M\"s and change type to float","1e5e25b1":"- It can be inferred from scatter chart as well  that games in the action, casual, strategy,arcade, sports categories are getting considerably more ratings than, games in the educational, music categories.","019c95df":"###### Let's see top 3 ranked games in each categories.","b6ea6c5a":"# Knowing Dataset","8010f4f1":"- This study is going to focus on Top Games dataset to make Exploratory Data Analysis.\n- It is designed to be a beginner-friendly study.\n- It will be based on a dataset, which is about popular games from Google playstore.","c98f9d06":"Let's read our csv dataset and have a look at basics of it","2bc86c32":"That is the end of our EDA, hope you will enjoy it and learn lots of things as I did while studying it.","c47944b3":"###### And what about growth in 60 days? Let's explore it.","5bbb43a7":"- It can be inferred from the very above output that our distribution will be right-skewed due to fact that mean is higher than median. And we might expect some outliers in max side of our distribution.","de7fd117":"Now, let's apply this function to all \"installs\" column.","6abdd902":"- Our histogram displays that our distribution is positively skewed. However, it cannot say anything about outliers for sure. Let's check whether we have any with boxplot.","a33f7851":"- We have totally different picture in 60-day-growth. At the stage it is quite hard to point out a reason for this phenemonen for sure. ","976a2ba9":"- It can be easily concluded that even though games in the action categories get more ratings and were installed more than games in the other categories, games in the casino category have more growth in 30 days.","4b1e8101":"- It can be inferred from bar chart above that games in the action, arcade and casual categories are installed significantly more than games in the trivia, casino and word categories. ","b3aba4e8":"- Our dataset has games from different categories, different ratings and different number of installs.  \n- \"installs\" column displays numeric values. However, when paid attention to info() code it is object type. Therefore, we will need to manipulate it before using it.\n- There is no missing value, which means that less work during data clearing stage.\n- 'category' column is categorical variable, it would be good to see whether any significant differences among the categories of the games.\n- 'paid' and 'price' seems to have a lot on common (when paid attention to the very above code output, it can be observed that since almost all games are free of charge both \"price\" and \"paid\" actually tell the same story). Therefore, for the sake of simplicity, one of them might be drpped.","8a664945":"With these very four codes above, we can see that our dataset has 1730 games with 15 different varibales. It seems to be quite clean in terms of missing values. Therefore it is kinda black swan in real world of datasets. We have eleven numeric columns, which means that we can apply several calculations on it. ","42a4600d":"- 2 top games have 1 Billion installs, 8 following games have 500 million installs.","e2a46fb0":"- Same story is valid in terms of number of installments, as well.","57df68b3":"We have changed values in thousands into million","e41e871f":"- 99.5% of games are free of charge (with the exception of 7 games out of total 1730 games).","f7f72acf":"- It can be seen that quite a lot of the ratings are in the 0 - 500.000 ratings range.\n- We have highly skewed distribution, more specifially right skewed distribution with the possible outliers on the maximum side of the distribution. \n- On the other hand ve have quite a number of outliers on the max side, which increases mean and put it further away from the median.\n- In these kinds of situations, it would be a good idea to look for the median based approach since median is more resilient to outliers than mean.","bc397ae3":"# Analyzing Dataset","0a1e6026":"Let's move to \"price\" and \"paind\" columns.\n- When paid close attention to the following codes outputs, it can be observed that since almost all games are free of charge both \"price\" and \"paid\" actually tell the same story. Therefore, for the sake of simplicity, let's drop \"price\" column.\n\nNote1: Sample size less than 30, most of the time, does not fulfill minimum requirements for the sample - population representativeness.\n\n\n\n\nNote1: Dropping column, deleting rows are decisions to be taken very cautiously and should based on analysis and domain knowledge.","1c2fc167":"###### Let's see total ratings","66240512":"###### Now, let's see how the grotwh rates are by category"}}