{"cell_type":{"2ddefede":"code","eebf6952":"code","523fc7f2":"code","f099e298":"code","e5ed99a8":"code","727d497f":"code","ad68997f":"code","a3f433e1":"code","2e06cf73":"code","6a9af079":"code","a08476c5":"code","61772046":"code","851751fa":"code","f0715816":"code","86bd57cf":"code","a2009d14":"code","447205f2":"markdown","c460c04c":"markdown","39aacc43":"markdown","c5ee01dd":"markdown","8fbf27fa":"markdown","d2e66ab7":"markdown","326f6eb5":"markdown","33f68c05":"markdown","662938b2":"markdown","3a63cb0f":"markdown","b6794da3":"markdown","31136cbd":"markdown","554b8c3e":"markdown"},"source":{"2ddefede":"# import packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go","eebf6952":"survey17 = pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv', encoding='latin-1')\nconversionrates17 = pd.read_csv('..\/input\/kaggle-survey-2017\/conversionRates.csv')\nsurvey18 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\nsurvey19 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\nsurvey20 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","523fc7f2":"# Extract info we initially want to use from the survey data\n# 2017 survey\nresponses17 = survey17[['GenderSelect', 'Country', 'EmploymentStatus', 'StudentStatus', 'CurrentJobTitleSelect', 'CompensationAmount', 'CompensationCurrency']] # columns\nresponses17.insert(0, 'ResponseID', range(1, 1 + len(responses17))) # add a response ID\nresponses17.loc[(responses17['EmploymentStatus'] == 'Not employed, but looking for work') | (responses17['EmploymentStatus'] == 'Not employed, and not looking for work'), 'CurrentJobTitleSelect'] = 'Not Employed' # add not employed to jobs list\nresponses17.loc[(responses17['StudentStatus'] == 'Yes'), 'CurrentJobTitleSelect'] = 'Student' # add student to jobs list\nresponses17.loc[(responses17.CurrentJobTitleSelect.isna()), 'CurrentJobTitleSelect'] = 'Other' # fill in job blanks with other\n# these next few lines about currency took a while to make work. I'm sure there's a more efficient way to do it.\nresponses17sal = pd.merge(responses17, conversionrates17, how = 'inner', left_on = 'CompensationCurrency', right_on = 'originCountry')\nresponses17sal['CompensationAmount'] = responses17sal['CompensationAmount'].str.replace(',', '') # remove non-numeric characters\nresponses17sal['CompensationAmount'] = responses17sal['CompensationAmount'].str.replace('-', '')\nresponses17sal.loc[(responses17sal['CompensationAmount'] == ''), 'CompensationAmount'] = 0 # replace empty values with 0\n#responses17['CompensationAmount'] = responses17['CompensationAmount'].fillna(0) # replace nan with 0\nresponses17sal['CompensationAmount'] = pd.to_numeric(responses17sal['CompensationAmount'])\nresponses17sal['USD_converted'] = responses17sal['CompensationAmount']*responses17sal['exchangeRate']\nresponses17 = pd.merge(responses17, responses17sal[['ResponseID', 'USD_converted']], how = 'left', on = 'ResponseID')\nresponses17 = responses17[['GenderSelect', 'Country', 'CurrentJobTitleSelect', 'USD_converted']]\nresponses17.columns = ['Gender', 'Country', 'JobTitle', 'Salary']\nresponses17['SurveyYear'] = 2017\n\n# 2018 survey\nresponses18 = survey18.loc[1:,['Q1', 'Q3', 'Q6', 'Q9']]\nresponses18.columns = ['Gender', 'Country', 'JobTitle', 'Salary']\nresponses18['SurveyYear'] = 2018\n\n# 2019 survey\nresponses19 = survey19.loc[1:,['Q2', 'Q3', 'Q5', 'Q10']]\nresponses19.columns = ['Gender', 'Country', 'JobTitle', 'Salary']\nresponses19['SurveyYear'] = 2019\n\n# 2020 survey\nresponses20 = survey20.loc[1:,['Q2', 'Q3', 'Q5', 'Q24']]\nresponses20.columns = ['Gender', 'Country', 'JobTitle', 'Salary']\nresponses20['SurveyYear'] = 2020","f099e298":"# the salary bands need a fair amount of work to make them all compareable. Hurrah.\n# 2017 are individual amounts so will need to be grouped\n# 2018 has 19 salary bands\n# 2019 and 2020 have 25 salary bands\n# no year provides groupings that satisfy the other years so we'll have to create a hybrid salary grouping based on groups across 2018 - 2020\n\n# 2017\nresponses17['SalaryGrp'] = 'Unknown'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] <= 10000), 'SalaryGrp'] = '$0-10k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 10000) & (responses17['Salary'] <= 20000), 'SalaryGrp'] = '$10-20k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 20000) & (responses17['Salary'] <= 30000), 'SalaryGrp'] = '$20-30k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 30000) & (responses17['Salary'] <= 40000), 'SalaryGrp'] = '$30-40k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 40000) & (responses17['Salary'] <= 50000), 'SalaryGrp'] = '$40-50k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 50000) & (responses17['Salary'] <= 60000), 'SalaryGrp'] = '$50-60k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 60000) & (responses17['Salary'] <= 70000), 'SalaryGrp'] = '$60-70k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 70000) & (responses17['Salary'] <= 80000), 'SalaryGrp'] = '$70-80k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 80000) & (responses17['Salary'] <= 90000), 'SalaryGrp'] = '$80-90k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 90000) & (responses17['Salary'] <= 100000), 'SalaryGrp'] = '$90-100k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 100000) & (responses17['Salary'] <= 125000), 'SalaryGrp'] = '$100-125k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 125000) & (responses17['Salary'] <= 150000), 'SalaryGrp'] = '$125-150k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 150000) & (responses17['Salary'] <= 200000), 'SalaryGrp'] = '$150-200k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 200000) & (responses17['Salary'] <= 250000), 'SalaryGrp'] = '$200-250k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 250000) & (responses17['Salary'] <= 300000), 'SalaryGrp'] = '$250-300k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 300000) & (responses17['Salary'] <= 500000), 'SalaryGrp'] = '$300-500k'\nresponses17.loc[(responses17['SurveyYear'] == 2017) & (responses17['Salary'] > 500000), 'SalaryGrp'] = '$500k+'\n\n# 2018\nresponses18['SalaryGrp'] = 'Unknown'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == 'I do not wish to disclose my approximate yearly compensation'), 'SalaryGrp'] = 'Unknown'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '0-10,000'), 'SalaryGrp'] = '$0-10k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '10-20,000'), 'SalaryGrp'] = '$10-20k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '20-30,000'), 'SalaryGrp'] = '$20-30k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '30-40,000'), 'SalaryGrp'] = '$30-40k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '40-50,000'), 'SalaryGrp'] = '$40-50k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '50-60,000'), 'SalaryGrp'] = '$50-60k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '60-70,000'), 'SalaryGrp'] = '$60-70k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '70-80,000'), 'SalaryGrp'] = '$70-80k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '80-90,000'), 'SalaryGrp'] = '$80-90k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '90-100,000'), 'SalaryGrp'] = '$90-100k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '100-125,000'), 'SalaryGrp'] = '$100-125k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '125-150,000'), 'SalaryGrp'] = '$125-150k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '150-200,000'), 'SalaryGrp'] = '$150-200k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '200-250,000'), 'SalaryGrp'] = '$200-250k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '250-300,000'), 'SalaryGrp'] = '$250-300k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '300-400,000'), 'SalaryGrp'] = '$300-500k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '400-500,000'), 'SalaryGrp'] = '$300-500k'\nresponses18.loc[(responses18['SurveyYear'] == 2018) & (responses18['Salary'] == '500,000+'), 'SalaryGrp'] = '$500k+'\n\n# 2019\nresponses19['SalaryGrp'] = 'Unknown'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '$0-999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '1,000-1,999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '2,000-2,999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '3,000-3,999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '4,000-4,999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '5,000-7,499'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '7,500-9,999'), 'SalaryGrp'] = '$0-10k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '10,000-14,999'), 'SalaryGrp'] = '$10-20k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '15,000-19,999'), 'SalaryGrp'] = '$10-20k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '20,000-24,999'), 'SalaryGrp'] = '$20-30k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '25,000-29,999'), 'SalaryGrp'] = '$20-30k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '30,000-39,999'), 'SalaryGrp'] = '$30-40k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '40,000-49,999'), 'SalaryGrp'] = '$40-50k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '50,000-59,999'), 'SalaryGrp'] = '$50-60k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '60,000-69,999'), 'SalaryGrp'] = '$60-70k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '70,000-79,999'), 'SalaryGrp'] = '$70-80k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '80,000-89,999'), 'SalaryGrp'] = '$80-90k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '90,000-99,999'), 'SalaryGrp'] = '$90-100k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '100,000-124,999'), 'SalaryGrp'] = '$100-125k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '125,000-149,999'), 'SalaryGrp'] = '$125-150k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '150,000-199,999'), 'SalaryGrp'] = '$150-200k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '200,000-249,999'), 'SalaryGrp'] = '$200-250k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '250,000-299,999'), 'SalaryGrp'] = '$250-300k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '300,000-500,000'), 'SalaryGrp'] = '$300-500k'\nresponses19.loc[(responses19['SurveyYear'] == 2019) & (responses19['Salary'] == '> $500,000'), 'SalaryGrp'] = '$500k+'\n\n# 2020\nresponses20['SalaryGrp'] = 'Unknown'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '$0-999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '1,000-1,999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '2,000-2,999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '3,000-3,999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '4,000-4,999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '5,000-7,499'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '7,500-9,999'), 'SalaryGrp'] = '$0-10k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '10,000-14,999'), 'SalaryGrp'] = '$10-20k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '15,000-19,999'), 'SalaryGrp'] = '$10-20k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '20,000-24,999'), 'SalaryGrp'] = '$20-30k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '25,000-29,999'), 'SalaryGrp'] = '$20-30k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '30,000-39,999'), 'SalaryGrp'] = '$30-40k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '40,000-49,999'), 'SalaryGrp'] = '$40-50k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '50,000-59,999'), 'SalaryGrp'] = '$50-60k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '60,000-69,999'), 'SalaryGrp'] = '$60-70k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '70,000-79,999'), 'SalaryGrp'] = '$70-80k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '80,000-89,999'), 'SalaryGrp'] = '$80-90k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '90,000-99,999'), 'SalaryGrp'] = '$90-100k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '100,000-124,999'), 'SalaryGrp'] = '$100-125k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '125,000-149,999'), 'SalaryGrp'] = '$125-150k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '150,000-199,999'), 'SalaryGrp'] = '$150-200k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '200,000-249,999'), 'SalaryGrp'] = '$200-250k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '250,000-299,999'), 'SalaryGrp'] = '$250-300k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '300,000-500,000'), 'SalaryGrp'] = '$300-500k'\nresponses20.loc[(responses20['SurveyYear'] == 2020) & (responses20['Salary'] == '> $500,000'), 'SalaryGrp'] = '$500k+'\n\n# append the four sets of responses together\nresponses = responses17.append([responses18, responses19, responses20])\nresponses[['SurveyYear']] = responses[['SurveyYear']].astype(str)","e5ed99a8":"# Tidy up Job Title column\nresponses['JobTitle'] = responses.JobTitle.replace(['Software Developer\/Software Engineer', 'Software Engineer'], 'Software Developer')\nresponses['JobTitle'] = responses.JobTitle.replace(['Researcher', 'Research Assistant', 'Scientist\/Researcher'], 'Research Scientist')\nresponses['JobTitle'] = responses.JobTitle.replace(['Manager'], 'Product\/Project Manager')\nresponses['JobTitle'] = responses.JobTitle.replace(['Not employed', 'Currently not employed'], 'Not Employed')\nresponses['JobTitle'] = responses.JobTitle.replace(['Engineer'], 'Data Engineer')\nresponses['JobTitle'] = responses['JobTitle'].fillna('Other')","727d497f":"# Tidy up Country column\nresponses['Country'] = responses.Country.replace([\"Hong Kong (S.A.R.)\"], 'Hong Kong')\nresponses['Country'] = responses.Country.replace([\"Iran, Islamic Republic of...\"], 'Iran')\nresponses['Country'] = responses.Country.replace([\"People 's Republic of China\", \"Republic of China\"], 'China')\nresponses['Country'] = responses.Country.replace([\"Republic of Korea\"], 'South Korea')\nresponses['Country'] = responses.Country.replace([\"United Kingdom of Great Britain and Northern Ireland\", \"United Kingdom\"], 'UK')\nresponses['Country'] = responses.Country.replace([\"United States\", \"United States of America\"], 'USA')\nresponses['Country'] = responses.Country.replace([\"Viet Nam\"], 'Vietnam')\nresponses['Country'] = responses.Country.replace([\"United Arab Emirates\"], 'UAE')\nresponses['Country'] = responses.Country.replace([\"Other\", \"I do not wish to disclose my location\"], 'Unknown')\nresponses['Country'] = responses.Country.fillna('Unknown')","ad68997f":"# create a function to speed up repetitive steps\ndef surveysum(table, colnames):\n    \"\"\"function to summarise a given set of columns from a table\"\"\"\n    survsum = table[colnames].value_counts().reset_index()\n    colnames.append('Responses')\n    survsum.columns = colnames\n    return survsum","a3f433e1":"# summarise responses by survey year\nsurvyearsum = surveysum(responses, ['SurveyYear'])\n\n# plot survey year responses\ncolors = ['#009db6', '#45025c', '#005db6', '#11d16e'] # based on index\n\nfig = go.Figure(go.Bar(x = survyearsum['SurveyYear'], y = survyearsum['Responses'], marker_color = colors))\nfig.update_xaxes(type='category')\nfig.update_layout(height = 500,\n                  width = 600,\n                  title = 'Survey Responses by Year',\n                  xaxis_title = \"Survey Year\",\n                  yaxis_title = \"Responses\",\n                  xaxis = {'categoryorder':'array', 'categoryarray':['2017', '2018', '2019', '2020']})\n\nfig.show()","2e06cf73":"# summarise job titles by survey year\njobsummary = surveysum(responses, ['JobTitle', 'SurveyYear'])\n\n# join summaries and calculate %\njobsummary = pd.merge(jobsummary, survyearsum, on='SurveyYear')\njobsummary['ResponsePrcnt'] = jobsummary['Responses_x']\/jobsummary['Responses_y']","6a9af079":"jobsummary17 = jobsummary[jobsummary['SurveyYear'] == '2017']\njobsummary18 = jobsummary[jobsummary['SurveyYear'] == '2018']\njobsummary19 = jobsummary[jobsummary['SurveyYear'] == '2019']\njobsummary20 = jobsummary[jobsummary['SurveyYear'] == '2020']\n\nfig = go.Figure(go.Bar(x=jobsummary17['JobTitle'], y=jobsummary17['ResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x=jobsummary18['JobTitle'], y=jobsummary18['ResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x=jobsummary19['JobTitle'], y=jobsummary19['ResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x=jobsummary20['JobTitle'], y=jobsummary20['ResponsePrcnt'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  #width = 1100,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat = \".1%\"),\n                  legend=dict(yanchor = \"top\", y = 0.98, xanchor = \"right\", x = 0.99),\n                  title = \"Survey responses for Role (2017 - 2020)\",\n                  xaxis_title = \"Selected Role\",\n                  yaxis_title = \"Response Percentage\",\n                  legend_title = \"Survey Year\",\n                  #xaxis = {'categoryorder':'total descending'},)\n                  xaxis = {'categoryorder':'array', 'categoryarray':['Student', 'Data Scientist', 'Other', 'Software Developer',\n                                                                    'Not Employed', 'Data Analyst', 'Research Scientist',\n                                                                    'Machine Learning Engineer', 'Business Analyst', 'Product\/Project Manager',\n                                                                    'Data Engineer', 'Statistician', 'DBA\/Database Engineer',\n                                                                    'Consultant', 'Chief Officer', 'Developer Advocate',\n                                                                    'Marketing Analyst', 'Salesperson', 'Principal Investigator',\n                                                                    'Data Journalist', 'Programmer', 'Computer Scientist',\n                                                                    'Predictive Modeler', 'Data Miner', 'Operations Research Practitioner']})\n# roles ordered by responses in 2020, then responses in 2019 for any not in 2020, and so on.\n\nfig.show()","a08476c5":"# create table just for student responses\nstudents = responses[responses['JobTitle'] == 'Student']\n\n# summarise student responses by survey year\nstudentsummary = surveysum(students, ['SurveyYear'])\n\n# summarise students by country and survey year\nstudentcountrysummary = surveysum(students, ['SurveyYear', 'Country'])\n\n# join summaries and calculate %\nstudentcountrysummary = pd.merge(studentcountrysummary, studentsummary, on = 'SurveyYear')\nstudentcountrysummary['StudentResponsePrcnt'] = studentcountrysummary['Responses_x']\/studentcountrysummary['Responses_y']","61772046":"# plot country percentage for student responses\nstudentcountrysummary17 = studentcountrysummary[studentcountrysummary['SurveyYear'] == '2017']\nstudentcountrysummary18 = studentcountrysummary[studentcountrysummary['SurveyYear'] == '2018']\nstudentcountrysummary19 = studentcountrysummary[studentcountrysummary['SurveyYear'] == '2019']\nstudentcountrysummary20 = studentcountrysummary[studentcountrysummary['SurveyYear'] == '2020']\n\nfig = go.Figure(go.Bar(x = studentcountrysummary17['Country'], y = studentcountrysummary17['StudentResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x = studentcountrysummary18['Country'], y = studentcountrysummary18['StudentResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x = studentcountrysummary19['Country'], y = studentcountrysummary19['StudentResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x = studentcountrysummary20['Country'], y = studentcountrysummary20['StudentResponsePrcnt'], name='2020', marker_color='#45025c'))\n\n#fig = go.Figure(go.Bar(x = studentcountrysummary17['Country'], y = studentcountrysummary17['Responses_x'], name='2017', marker_color='#11d16e'))\n#fig.add_trace(go.Bar(x = studentcountrysummary18['Country'], y = studentcountrysummary18['Responses_x'], name='2018', marker_color='#009db6'))\n#fig.add_trace(go.Bar(x = studentcountrysummary19['Country'], y = studentcountrysummary19['Responses_x'], name='2019', marker_color='#005db6'))\n#fig.add_trace(go.Bar(x = studentcountrysummary20['Country'], y = studentcountrysummary20['Responses_x'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat=\".1%\"),\n                  title = \"Student responses by Country and Survey Year (Top 10 Countries by response volume)\",\n                  xaxis_title = \"Country\",\n                  yaxis_title = \"Percentage of students in survey year\",\n                  legend_title = \"Survey Year\",\n                  xaxis = {'categoryorder':'total descending'},)\nfig.update_xaxes(range=(-.5, 9.5))\n\nfig.show()","851751fa":"salaries = responses[(responses['SalaryGrp'] != 'Unknown') & (responses['JobTitle'] == 'Data Scientist') & (responses['Country'] == 'USA')]\n\nsalarysummary = surveysum(salaries, ['SurveyYear', 'SalaryGrp'])\n\nsurvyearsalsum = surveysum(salaries, ['SurveyYear'])\n\n# join summaries and calculate %\nsalarysummary = pd.merge(salarysummary, survyearsalsum, on = 'SurveyYear')\nsalarysummary['ResponsePrcnt'] = salarysummary['Responses_x']\/salarysummary['Responses_y']\n\nsalarysummary17 = salarysummary[salarysummary['SurveyYear'] == '2017']\nsalarysummary18 = salarysummary[salarysummary['SurveyYear'] == '2018']\nsalarysummary19 = salarysummary[salarysummary['SurveyYear'] == '2019']\nsalarysummary20 = salarysummary[salarysummary['SurveyYear'] == '2020']\n\n#fig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['Responses_x'], name='2017', marker_color='#11d16e'))\n#fig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['Responses_x'], name='2018', marker_color='#009db6'))\n#fig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['Responses_x'], name='2019', marker_color='#005db6'))\n#fig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['Responses_x'], name='2020', marker_color='#45025c'))\n\nfig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['ResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['ResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['ResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['ResponsePrcnt'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  #width = 1100,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat = \".1%\"),\n                  legend=dict(yanchor = \"top\", y = 0.98, xanchor = \"right\", x = 0.99),\n                  title = \"Data Scientist Salaries in The United States\",\n                  xaxis_title = \"Salary\",\n                  yaxis_title = \"Responses\",\n                  legend_title = \"Survey Year\",\n                  #xaxis = {'categoryorder':'total descending'},)\n                  xaxis = {'categoryorder':'array', 'categoryarray':['$0-10k', '$10-20k', '$20-30k', '$30-40k',\n                                                                    '$40-50k', '$50-60k', '$60-70k', '$70-80k',\n                                                                    '$80-90k', '$90-100k', '$100-125k', '$125-150k',\n                                                                    '$150-200k', '$200-250k', '$250-300k', '$300-500k',\n                                                                    '$500k+',]})\n\nfig.show()","f0715816":"salaries = responses[(responses['SalaryGrp'] != 'Unknown') & (responses['JobTitle'] == 'Data Analyst') & (responses['Country'] == 'USA')]\n\nsalarysummary = surveysum(salaries, ['SurveyYear', 'SalaryGrp'])\n\nsurvyearsalsum = surveysum(salaries, ['SurveyYear'])\n\n# join summaries and calculate %\nsalarysummary = pd.merge(salarysummary, survyearsalsum, on = 'SurveyYear')\nsalarysummary['ResponsePrcnt'] = salarysummary['Responses_x']\/salarysummary['Responses_y']\n\nsalarysummary17 = salarysummary[salarysummary['SurveyYear'] == '2017']\nsalarysummary18 = salarysummary[salarysummary['SurveyYear'] == '2018']\nsalarysummary19 = salarysummary[salarysummary['SurveyYear'] == '2019']\nsalarysummary20 = salarysummary[salarysummary['SurveyYear'] == '2020']\n\n#fig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['Responses_x'], name='2017', marker_color='#11d16e'))\n#fig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['Responses_x'], name='2018', marker_color='#009db6'))\n#fig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['Responses_x'], name='2019', marker_color='#005db6'))\n#fig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['Responses_x'], name='2020', marker_color='#45025c'))\n\nfig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['ResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['ResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['ResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['ResponsePrcnt'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  #width = 1100,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat = \".1%\"),\n                  legend=dict(yanchor = \"top\", y = 0.98, xanchor = \"right\", x = 0.99),\n                  title = \"Data Analyst Salaries in The United States\",\n                  xaxis_title = \"Salary\",\n                  yaxis_title = \"Responses\",\n                  legend_title = \"Survey Year\",\n                  #xaxis = {'categoryorder':'total descending'},)\n                  xaxis = {'categoryorder':'array', 'categoryarray':['$0-10k', '$10-20k', '$20-30k', '$30-40k',\n                                                                    '$40-50k', '$50-60k', '$60-70k', '$70-80k',\n                                                                    '$80-90k', '$90-100k', '$100-125k', '$125-150k',\n                                                                    '$150-200k', '$200-250k', '$250-300k', '$300-500k',\n                                                                    '$500k+',]})\n\nfig.show()","86bd57cf":"salaries = responses[(responses['SalaryGrp'] != 'Unknown') & (responses['JobTitle'] == 'Software Developer') & (responses['Country'] == 'USA')]\n\nsalarysummary = surveysum(salaries, ['SurveyYear', 'SalaryGrp'])\n\nsurvyearsalsum = surveysum(salaries, ['SurveyYear'])\n\n# join summaries and calculate %\nsalarysummary = pd.merge(salarysummary, survyearsalsum, on = 'SurveyYear')\nsalarysummary['ResponsePrcnt'] = salarysummary['Responses_x']\/salarysummary['Responses_y']\n\nsalarysummary17 = salarysummary[salarysummary['SurveyYear'] == '2017']\nsalarysummary18 = salarysummary[salarysummary['SurveyYear'] == '2018']\nsalarysummary19 = salarysummary[salarysummary['SurveyYear'] == '2019']\nsalarysummary20 = salarysummary[salarysummary['SurveyYear'] == '2020']\n\n#fig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['Responses_x'], name='2017', marker_color='#11d16e'))\n#fig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['Responses_x'], name='2018', marker_color='#009db6'))\n#fig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['Responses_x'], name='2019', marker_color='#005db6'))\n#fig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['Responses_x'], name='2020', marker_color='#45025c'))\n\nfig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['ResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['ResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['ResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['ResponsePrcnt'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  #width = 1100,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat = \".1%\"),\n                  legend=dict(yanchor = \"top\", y = 0.98, xanchor = \"right\", x = 0.99),\n                  title = \"Software Developer Salaries in The United States\",\n                  xaxis_title = \"Salary\",\n                  yaxis_title = \"Responses\",\n                  legend_title = \"Survey Year\",\n                  #xaxis = {'categoryorder':'total descending'},)\n                  xaxis = {'categoryorder':'array', 'categoryarray':['$0-10k', '$10-20k', '$20-30k', '$30-40k',\n                                                                    '$40-50k', '$50-60k', '$60-70k', '$70-80k',\n                                                                    '$80-90k', '$90-100k', '$100-125k', '$125-150k',\n                                                                    '$150-200k', '$200-250k', '$250-300k', '$300-500k',\n                                                                    '$500k+',]})\n\nfig.show()","a2009d14":"salaries = responses[(responses['SalaryGrp'] != 'Unknown') & (responses['JobTitle'] == 'Data Scientist') & (responses['Country'] == 'UK')]\n\nsalarysummary = surveysum(salaries, ['SurveyYear', 'SalaryGrp'])\n\nsurvyearsalsum = surveysum(salaries, ['SurveyYear'])\n\n# join summaries and calculate %\nsalarysummary = pd.merge(salarysummary, survyearsalsum, on = 'SurveyYear')\nsalarysummary['ResponsePrcnt'] = salarysummary['Responses_x']\/salarysummary['Responses_y']\n\nsalarysummary17 = salarysummary[salarysummary['SurveyYear'] == '2017']\nsalarysummary18 = salarysummary[salarysummary['SurveyYear'] == '2018']\nsalarysummary19 = salarysummary[salarysummary['SurveyYear'] == '2019']\nsalarysummary20 = salarysummary[salarysummary['SurveyYear'] == '2020']\n\n#fig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['Responses_x'], name='2017', marker_color='#11d16e'))\n#fig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['Responses_x'], name='2018', marker_color='#009db6'))\n#fig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['Responses_x'], name='2019', marker_color='#005db6'))\n#fig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['Responses_x'], name='2020', marker_color='#45025c'))\n\nfig = go.Figure(go.Bar(x=salarysummary17['SalaryGrp'], y=salarysummary17['ResponsePrcnt'], name='2017', marker_color='#11d16e'))\nfig.add_trace(go.Bar(x=salarysummary18['SalaryGrp'], y=salarysummary18['ResponsePrcnt'], name='2018', marker_color='#009db6'))\nfig.add_trace(go.Bar(x=salarysummary19['SalaryGrp'], y=salarysummary19['ResponsePrcnt'], name='2019', marker_color='#005db6'))\nfig.add_trace(go.Bar(x=salarysummary20['SalaryGrp'], y=salarysummary20['ResponsePrcnt'], name='2020', marker_color='#45025c'))\n\nfig.update_layout(barmode='group', \n                  #height = 700,\n                  #width = 1100,\n                  xaxis_tickangle = -45,\n                  yaxis = dict(tickformat = \".1%\"),\n                  legend=dict(yanchor = \"top\", y = 0.98, xanchor = \"right\", x = 0.99),\n                  title = \"Data Scientist Salaries in the United Kingdom\",\n                  xaxis_title = \"Salary\",\n                  yaxis_title = \"Responses\",\n                  legend_title = \"Survey Year\",\n                  #xaxis = {'categoryorder':'total descending'},)\n                  xaxis = {'categoryorder':'array', 'categoryarray':['$0-10k', '$10-20k', '$20-30k', '$30-40k',\n                                                                    '$40-50k', '$50-60k', '$60-70k', '$70-80k',\n                                                                    '$80-90k', '$90-100k', '$100-125k', '$125-150k',\n                                                                    '$150-200k', '$200-250k', '$250-300k', '$300-500k',\n                                                                    '$500k+',]})\n\nfig.show()","447205f2":"# Trends in the roles of Kagglers (2017 - 2020)\n\nIn this notebook I aim to tell a story about how the roles of Kagglers have developed over the last four years based on the results of the annual Kaggle surveys. I haven't analysed all questions across the surveys. Instead I've focused on a few areas I'm particularly interested in understanding more about.\n\nI've been away for a while but it's good to be back amongst the Kaggle community. When I saw this competition I had grand plans to explore many aspects of these surveys and put together the mother of all notebooks. However work, spending time with my wife and dog, running, Christmas and COD Warzone got in the way, so the scope of this notebook has shortened somewhat. In true PhD thesis style though I've included a further work section at the end for stuff I might get to at some point.\n\nI think exploring the reasons behind analysis outputs is one of the most interesting aspects of working in the field of Data Science. So since we're in this no-pressure environment (i.e. no one is going to lose out financially or otherwise if I give a wildly incorrect hypothesis) I aim to provide commentary around the outputs where I can. We're all domain experts to some extent in this area so if anyone has any further insights or alternate suggestions for some of the results then I'd love to hear them.\n\nIncase you're already getting tired of my rambling, here are some headline insights to take away from this work:\n* **Students** have surged from 5.9% of respondents in 2017 to 25.8% of respondents in 2020\n* In 2020, 43.4% of students are based in **India** and the number of Indian students has increased x10 since 2017\n* **Data Scientist** is consistently the most popular occupation amongst Kagglers but has reduced in popularity by 7.3% in the last year\n* Salaries vary by role. They remain largely stable in the US over the past four years, but are more changeable in other countries\n\n## Some motivation for this work - What's my role again?\n\nData Science is a very broad topic, and a Data Scientist can cover a lot of roles in a company. I work for a small analytics company with a team of 3 - 4 data scientists and we cover many aspects of work in our roles, including data acquisition, product development, project management, and customer support (as well as some actual data science). When I filled in the 2020 survey and got to the current role question, it was hard to answer.\n\nI have a Bachelors degree in Maths, and eventually managed to complete a part time PhD whilst working full time. In terms of roles, I started as a student, my first professional role was as a research associate, then I tried 'Mathematician' for a while, and also mulled over 'Quantitative Analyst' (I found it hard to say, so dropped it). A few years into my professional career, I went to the predictive analytics world conference in San Francisco where Anthony Goldbloom gave the keynote speech about the Heritage Health Prize competition. In another talk I attended, a speaker (unfortunately I can't remember his name) summarised at the end of his presentation by saying - \"to do well, learn Python, learn R, change your job title to Data Scientist, and ask for a pay rise\". It got a big cheer. I promptly went and found my boss, who had been watching a different talk, and told him I was now a data scientist and I needed a pay rise. He laughed, and agreed. \n\nData Scientist has stuck since then. On my business card and email signature I'm a data scientist. But maybe I'm actually more of a product\/project manager, or maybe I'm a data analyst? Maybe I'm something else? Maybe this is a common thing for Data Scientists. I'm not sure. It would be great if I could use these surveys to help me make things clearer.\n\n## Some notes about compiling the annual survey results\n\nI initially focused on the following areas across the surveys -\n* **Role** - I tidied up the various role options across the years, hopefully without changing anyone's actual role too much. I had to look up what some actually were. There were separate questions for unemployement and student status in the 2017 survey so these have been added to the roles to be consistent with following years.\n* **Country** - some country names were captured differently across the surveys but on the whole this was pretty clean to compile.\n* **Salary** - these were a lot of fun to compile. 2019 and 2020 were the same format, however 2018 was captured in different bands, and 2017 captured individual amounts in the repondants own currency. Thank goodness Kaggle provided a conversion table. I had to create a new set of salary bands that all the results would fit into.","c460c04c":"Software Developers get paid similar amounts to Data Scientists in the US. Whilst there are small changes, these salaries look largely stable.","39aacc43":"It's pretty clear what's going on - almost half of all Kaggle students are based in India, up from 24.5% of students in 2017 to 43.4% of students in 2020. In terms of raw counts though, the number of students in India completing the Kaggle survey has gone up ten fold in four years - 240 responses in 2017 to 2242 responses in 2020. If these figures are representative of the wider Kaggle population then this is remarkable, and great news for both India and Kaggle. Again, the roll out of free learning resources could be a contributing factor to this.\n\nStudent responses are much lower everywhere else. Interestingly, responses from the US and China have dropped considerably (the US had 856 student responses in 2018 - down to 353 in 2020, China 715 down to 209 for the same years), but have generally remained stable elsewhere. The responses from India certainly skew the results - meaning that stable student proportions across years correspond to rising student responses in the latest year.\n\nThere is probably a whole notebook to write on the trends of Indian (and American) students, but I'll leave this for now.","c5ee01dd":"There's a lot to digest in this plot. Let me put my discussion cap on.\n* Students rising! Student Kagglers dominate the most recent survey by some way, increasing from 20.4% to 25.8% of responses from the previous year. Kaggle is clearly an increasingly valuable resource for students. Remarkably, students made up only 5.9% of responses back in 2017. There are probably a number of factors contributing to the huge increase since then. Speculating on the spot - reasons could include increasing demand for data specialists in industry, general increased availablity of data science degrees and courses, and ofcourse, Kaggle continuing to roll out their own free learning courses (which are great, by the way).\n* Survey design could have impacted some of the ability to compare the results fairly across years. In particular, the 2017 survey was rather different to the following surveys in terms of design and the focus of questions. There were far more questions wanting the opinion of the person - topics like job title accuracy, job satisfaction, most important job factors, etc. Potentially Kaggle were getting to know who their users were and what they value. Whereas the more recent surveys are more black and white - what do you do, what do you use, etc. I imagine Kaggle will use this information to make sure their products are calibrated to the skills and tools of most of their users, which makes sense. Ofcourse, Kaggle may just have had some feedback after 2017 saying the survey was a bit long and hard to answer, and so they simplified it a bit. Specifically though on the subject of job titles, employement status and student status were individual questions in 2017. 13.7% of people responded as 'Not working' when asked about their employment status, compared to 3.5% in 2018. Perhaps this is where some unnamed students could have been hiding? *Note: after 2017, both these questions were removed and 'Student' and 'Not Employed' became job title options.*\n* Data Scientist is consistently the most common professional role, although considerably less people selected it as their job title this year. Is being a Data Scientist no longer cool? Or is it increasingly ok and appreciated to be something else instead?\n* A lot of people have job titles outside the selection options (or would prefer not to say what their job title is). Kaggle haven't provided any output from the free-form text responses, so we won't go any further into what these other roles are.\n* Responders indicating they are Not Employed is on the rise - up from 4.8% to 8.2% in 2020. Again, there could be several factors affecting this. Increases in student Kagglers mean there will presumably be increases in Kagglers transitioning from education to professional careers, with potentially some amount of time inbetween where they are not employed. Kaggle's increased offering of learning courses and dataset access is probably also increasingly attractive to those currently not working who are looking to boost their skills and job prospects. Ofcourse another more sobering potential reason for increased unemployment is the year that is 2020 and the devasting global impacts of covid. All the best to anyone impacted by covid in any way, health, career or other, I hope you get back up to speed soon.\n* There is a fair amount of changing job selection options in the survey. Some of the more periferal job selections aren't given every year, with many only given once. The Kaggle guys are potentially tweaking the survey options based on their own internal priorities, or someone different is writing the survey each year ;). The job title options certainly aren't determined purely on previous popularity though, with roles such as Consultant, Programmer and Computer Scientist having far more responses in the years they were options than roles such as Statistician or the very rare Database Engineer. I imagine since roles like Statasticians and DB Engineers are fundamental to the core topic of data science, they remain in the survey regardless of the number of responses, where as some of the others may be a bit vague. Who knows. Machine Learning Engineers are celebrating though! Dropped after 2017 before being reinstated in 2020 and picking up a very respectable 5.4% of responses. Maybe some digging in the Other category might highlight more about what is going on here.\n\nMy brain's hurting now from thinking, so lets produce some more plots.\n\nFirst up, where on earth (literally) are those students coming from?","8fbf27fa":"# Survey Summary\nVery quickly, let's check how much data we're working with.","d2e66ab7":"Role salaries are another fascinating aspect of the survey. I think the most insight can be gained from reviewing the salaries of roles for individual countries, so I'll pick a few to look at.","326f6eb5":"## Kaggler's Role Titles\n\nNow let's move onto something more specific and interesting. What's everyone's roles?","33f68c05":"2018 was quite a year for the Kaggle survey. 2019 and 2020 responses have been a bit lower but stable since then. In short, there's a good amount of responses.","662938b2":"There are clear salary bands for Data Scientists in the US - generally between 100k - 200k. There are some smaller trends which show that salaries may be increasing. This clear distribution of salaries could be due to the opportunities and competition of numerous tech companies in places like Silicon Valley. I'm sure US based Kagglers would know more on this!","3a63cb0f":"# Salaries","b6794da3":"And finally, what do Data Scientist salaries look like in my country? They're certainly different to those in the US. It looks like we generally get paid less over here. I feel like we're a few years behind the US in terms of the establishment of Data Science in business, but tech companies are growing all over the country and data science will only continue to grow, as can be seen by the increased proportion of respondants with higher salaries. It also looks like there are two salary distributions in here - a lower salary group around 50k, and a higher salary group around 100k. This might be due to different salary grades in the public and private sectors. Again, this is pure speculation at this point - I'm sure I could put more time into investigating the underlying reasons.","31136cbd":"## Further work when I get time\n* Further exploration into the underlying reasons for role and salary trends\n* Add some more interesting plots (bar charts are ok, but it would be nice to have more variety)\n* Build a classification model to predict what my job title should be. No promises I'll change it though. Data Science salaries are pretty good ;)\n\nIf you've got this far then thanks for reading. As I type, Trump supporters have taken over the Capitol in DC, so I hope that gets sorted soon. Stay safe everyone.","554b8c3e":"Data Analysts are generally paid less than Data Scientists in the US, however there are clear trends that Analysts are being paid more in recent years."}}