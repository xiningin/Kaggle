{"cell_type":{"369238be":"code","45576a3c":"code","53920584":"code","03b972ed":"code","9aaf483f":"code","71b7c858":"code","d9fc4d63":"code","0472b254":"code","454643f8":"code","5ffbcca5":"code","2c74a92f":"code","2f627692":"markdown","a4d461a0":"markdown","bad48097":"markdown","b308c410":"markdown","f4b1e247":"markdown","97ea10f0":"markdown","b4b09931":"markdown","61bdab7e":"markdown","dd679733":"markdown","d197ccbf":"markdown","c0fbdd63":"markdown","c3963e7f":"markdown","eb76a756":"markdown"},"source":{"369238be":"import numpy as np\nimport pandas as pd\nimport os, json, gc, re, random\nfrom tqdm.notebook import tqdm\nfrom sklearn.model_selection import train_test_split\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport logging\nlogging.basicConfig(level=logging.INFO)\ntransformers_logger = logging.getLogger(\"transformers\")\ntransformers_logger.setLevel(logging.WARNING)","45576a3c":"%%time\n\n!\/opt\/conda\/bin\/python3.7 -m pip install --upgrade pip\n!pip uninstall -q tqdm -y > \/dev\/null\n!pip install -q tqdm==4.48.1 > \/dev\/null\n!pip uninstall -q torch -y > \/dev\/null\n!pip install -q torch==1.6.0+cu101 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html > \/dev\/null\n!pip install -q -U tokenizers==0.7.0 > \/dev\/null\n!pip install -q -U transformers==3.0.2 > \/dev\/null\n!pip install -q -U simpletransformers==0.46.0 > \/dev\/null","53920584":"import torch, transformers, tokenizers\ntorch.__version__, transformers.__version__, tokenizers.__version__","03b972ed":"data_file = '..\/input\/arxiv\/arxiv-metadata-oai-snapshot.json'\n\n\"\"\" Using `yield` to load the JSON file in a loop to prevent Python memory issues if JSON is loaded directly\"\"\"\n\ndef get_metadata():\n    with open(data_file, 'r') as f:\n        for line in f:\n            yield line","9aaf483f":"metadata = get_metadata()\nfor paper in metadata:\n    for k, v in json.loads(paper).items():\n        print(f'{k}: {v} \\n')\n    break","71b7c858":"category_map = {'astro-ph': 'Astrophysics',\n                'astro-ph.CO': 'Cosmology and Nongalactic Astrophysics',\n                'astro-ph.EP': 'Earth and Planetary Astrophysics',\n                'astro-ph.GA': 'Astrophysics of Galaxies',\n                'astro-ph.HE': 'High Energy Astrophysical Phenomena',\n                'astro-ph.IM': 'Instrumentation and Methods for Astrophysics',\n                'astro-ph.SR': 'Solar and Stellar Astrophysics',\n                'cond-mat.dis-nn': 'Disordered Systems and Neural Networks',\n                'cond-mat.mes-hall': 'Mesoscale and Nanoscale Physics',\n                'cond-mat.mtrl-sci': 'Materials Science',\n                'cond-mat.other': 'Other Condensed Matter',\n                'cond-mat.quant-gas': 'Quantum Gases',\n                'cond-mat.soft': 'Soft Condensed Matter',\n                'cond-mat.stat-mech': 'Statistical Mechanics',\n                'cond-mat.str-el': 'Strongly Correlated Electrons',\n                'cond-mat.supr-con': 'Superconductivity',\n                'cs.AI': 'Artificial Intelligence',\n                'cs.AR': 'Hardware Architecture',\n                'cs.CC': 'Computational Complexity',\n                'cs.CE': 'Computational Engineering, Finance, and Science',\n                'cs.CG': 'Computational Geometry',\n                'cs.CL': 'Computation and Language',\n                'cs.CR': 'Cryptography and Security',\n                'cs.CV': 'Computer Vision and Pattern Recognition',\n                'cs.CY': 'Computers and Society',\n                'cs.DB': 'Databases',\n                'cs.DC': 'Distributed, Parallel, and Cluster Computing',\n                'cs.DL': 'Digital Libraries',\n                'cs.DM': 'Discrete Mathematics',\n                'cs.DS': 'Data Structures and Algorithms',\n                'cs.ET': 'Emerging Technologies',\n                'cs.FL': 'Formal Languages and Automata Theory',\n                'cs.GL': 'General Literature',\n                'cs.GR': 'Graphics',\n                'cs.GT': 'Computer Science and Game Theory',\n                'cs.HC': 'Human-Computer Interaction',\n                'cs.IR': 'Information Retrieval',\n                'cs.IT': 'Information Theory',\n                'cs.LG': 'Machine Learning',\n                'cs.LO': 'Logic in Computer Science',\n                'cs.MA': 'Multiagent Systems',\n                'cs.MM': 'Multimedia',\n                'cs.MS': 'Mathematical Software',\n                'cs.NA': 'Numerical Analysis',\n                'cs.NE': 'Neural and Evolutionary Computing',\n                'cs.NI': 'Networking and Internet Architecture',\n                'cs.OH': 'Other Computer Science',\n                'cs.OS': 'Operating Systems',\n                'cs.PF': 'Performance',\n                'cs.PL': 'Programming Languages',\n                'cs.RO': 'Robotics',\n                'cs.SC': 'Symbolic Computation',\n                'cs.SD': 'Sound',\n                'cs.SE': 'Software Engineering',\n                'cs.SI': 'Social and Information Networks',\n                'cs.SY': 'Systems and Control',\n                'econ.EM': 'Econometrics',\n                'eess.AS': 'Audio and Speech Processing',\n                'eess.IV': 'Image and Video Processing',\n                'eess.SP': 'Signal Processing',\n                'gr-qc': 'General Relativity and Quantum Cosmology',\n                'hep-ex': 'High Energy Physics - Experiment',\n                'hep-lat': 'High Energy Physics - Lattice',\n                'hep-ph': 'High Energy Physics - Phenomenology',\n                'hep-th': 'High Energy Physics - Theory',\n                'math.AC': 'Commutative Algebra',\n                'math.AG': 'Algebraic Geometry',\n                'math.AP': 'Analysis of PDEs',\n                'math.AT': 'Algebraic Topology',\n                'math.CA': 'Classical Analysis and ODEs',\n                'math.CO': 'Combinatorics',\n                'math.CT': 'Category Theory',\n                'math.CV': 'Complex Variables',\n                'math.DG': 'Differential Geometry',\n                'math.DS': 'Dynamical Systems',\n                'math.FA': 'Functional Analysis',\n                'math.GM': 'General Mathematics',\n                'math.GN': 'General Topology',\n                'math.GR': 'Group Theory',\n                'math.GT': 'Geometric Topology',\n                'math.HO': 'History and Overview',\n                'math.IT': 'Information Theory',\n                'math.KT': 'K-Theory and Homology',\n                'math.LO': 'Logic',\n                'math.MG': 'Metric Geometry',\n                'math.MP': 'Mathematical Physics',\n                'math.NA': 'Numerical Analysis',\n                'math.NT': 'Number Theory',\n                'math.OA': 'Operator Algebras',\n                'math.OC': 'Optimization and Control',\n                'math.PR': 'Probability',\n                'math.QA': 'Quantum Algebra',\n                'math.RA': 'Rings and Algebras',\n                'math.RT': 'Representation Theory',\n                'math.SG': 'Symplectic Geometry',\n                'math.SP': 'Spectral Theory',\n                'math.ST': 'Statistics Theory',\n                'math-ph': 'Mathematical Physics',\n                'nlin.AO': 'Adaptation and Self-Organizing Systems',\n                'nlin.CD': 'Chaotic Dynamics',\n                'nlin.CG': 'Cellular Automata and Lattice Gases',\n                'nlin.PS': 'Pattern Formation and Solitons',\n                'nlin.SI': 'Exactly Solvable and Integrable Systems',\n                'nucl-ex': 'Nuclear Experiment',\n                'nucl-th': 'Nuclear Theory',\n                'physics.acc-ph': 'Accelerator Physics',\n                'physics.ao-ph': 'Atmospheric and Oceanic Physics',\n                'physics.app-ph': 'Applied Physics',\n                'physics.atm-clus': 'Atomic and Molecular Clusters',\n                'physics.atom-ph': 'Atomic Physics',\n                'physics.bio-ph': 'Biological Physics',\n                'physics.chem-ph': 'Chemical Physics',\n                'physics.class-ph': 'Classical Physics',\n                'physics.comp-ph': 'Computational Physics',\n                'physics.data-an': 'Data Analysis, Statistics and Probability',\n                'physics.ed-ph': 'Physics Education',\n                'physics.flu-dyn': 'Fluid Dynamics',\n                'physics.gen-ph': 'General Physics',\n                'physics.geo-ph': 'Geophysics',\n                'physics.hist-ph': 'History and Philosophy of Physics',\n                'physics.ins-det': 'Instrumentation and Detectors',\n                'physics.med-ph': 'Medical Physics',\n                'physics.optics': 'Optics',\n                'physics.plasm-ph': 'Plasma Physics',\n                'physics.pop-ph': 'Popular Physics',\n                'physics.soc-ph': 'Physics and Society',\n                'physics.space-ph': 'Space Physics',\n                'q-bio.BM': 'Biomolecules',\n                'q-bio.CB': 'Cell Behavior',\n                'q-bio.GN': 'Genomics',\n                'q-bio.MN': 'Molecular Networks',\n                'q-bio.NC': 'Neurons and Cognition',\n                'q-bio.OT': 'Other Quantitative Biology',\n                'q-bio.PE': 'Populations and Evolution',\n                'q-bio.QM': 'Quantitative Methods',\n                'q-bio.SC': 'Subcellular Processes',\n                'q-bio.TO': 'Tissues and Organs',\n                'q-fin.CP': 'Computational Finance',\n                'q-fin.EC': 'Economics',\n                'q-fin.GN': 'General Finance',\n                'q-fin.MF': 'Mathematical Finance',\n                'q-fin.PM': 'Portfolio Management',\n                'q-fin.PR': 'Pricing of Securities',\n                'q-fin.RM': 'Risk Management',\n                'q-fin.ST': 'Statistical Finance',\n                'q-fin.TR': 'Trading and Market Microstructure',\n                'quant-ph': 'Quantum Physics',\n                'stat.AP': 'Applications',\n                'stat.CO': 'Computation',\n                'stat.ME': 'Methodology',\n                'stat.ML': 'Machine Learning',\n                'stat.OT': 'Other Statistics',\n                'stat.TH': 'Statistics Theory'}","d9fc4d63":"%%time\n\ntitles = []\nabstracts = []\n\n# Consider all categories in the `category_map` to be used during training and prediction\n# paper_categories = np.array(list(category_map.keys())).flatten()\n\n# Consider specific paper categories to be used during training and prediction\npaper_categories = [\"cs.AI\", # Artificial Intelligence\n                    \"cs.CV\", # Computer Vision and Pattern Recognition\n                    \"cs.LG\"] # Machine Learning\n\nmetadata = get_metadata()\nfor paper in tqdm(metadata):\n    paper_dict = json.loads(paper)\n    category = paper_dict.get('categories')\n    try:\n        year = int(paper_dict.get('journal-ref')[-4:])\n        if category in paper_categories and 2000<year<2021:\n            titles.append(paper_dict.get('title'))\n            abstracts.append(paper_dict.get('abstract').replace(\"\\n\",\"\"))\n    except:\n        pass \n\nlen(titles), len(abstracts)","0472b254":"papers = pd.DataFrame({\n    'title': titles,\n    'abstract': abstracts,\n})\n\npapers = papers.dropna()\n\npapers[\"title\"] = papers[\"title\"].apply(lambda x: re.sub('\\s+',' ', x))\npapers[\"abstract\"] = papers[\"abstract\"].apply(lambda x: re.sub('\\s+',' ', x))\n\n# You could use papers[\"text\"] to translate both Title and Abstract\npapers[\"text\"] = papers['text'] = papers['title'] + '. ' + papers['abstract']\n\ndel titles, abstracts\npapers","454643f8":"%%time\n\nfrom simpletransformers.seq2seq import Seq2SeqModel\n\nmodel_args = {\n    \"reprocess_input_data\": True,\n    \"overwrite_output_dir\": True,\n    \"train_batch_size\": 8,\n    \"num_train_epochs\": 2,\n    \"save_eval_checkpoints\": False,\n    \"save_model_every_epoch\": False,\n    \"max_length\": 2048,\n}\n\nsrc = 'en'  # source language\ntrg = 'fr'  # target language\n\n# Create a MarianMT model \nmodel = Seq2SeqModel(\n    encoder_decoder_type=\"marian\",\n    encoder_decoder_name=f'Helsinki-NLP\/opus-mt-{src}-{trg}',\n    use_cuda=False,\n    args=model_args,\n)","5ffbcca5":"src = papers.sample(n=20)[\"text\"].tolist()\n\npredictions = model.predict(src)\n\nfor en, fr in zip(src, predictions):\n\n    print(f\"English Abstract : \\n {en}\\n\")\n    print(f\"French Abstract : \\n {fr}\\n\")\n    print(\"\\n--------------------------\\n\")","2c74a92f":"src = papers.sample(n=50)[\"title\"].tolist()\n\npredictions = model.predict(src)\n\nfor en, fr in zip(src, predictions):\n\n    print(f\"English Title : {en}\")\n    print(f\"French Title : {fr}\")\n    print(\"\\n--------------------------\\n\")","2f627692":"![](https:\/\/storage.googleapis.com\/kaggle-public-downloads\/arXiv.JPG)\n<h1><center>ArXiv Abstract Translation<\/center><\/h1>","a4d461a0":"### Libraries \ud83d\udcda\u2b07","bad48097":"#### For this task, let's choose papers from all categories published in the last decade","b308c410":"### Abstract Translation","f4b1e247":"# #1. Abstract Translation\n###    Language Translation using **MarianMT**","97ea10f0":"### #1.4 Prediction \ud83d\udd2e","b4b09931":"### Acknowledgements\n\n#### This notebook borrows code from:\n* [simpletransformers documentation](https:\/\/github.com\/ThilinaRajapakse\/simpletransformers)\n* Andrew Lukyanenko's [Arxiv metadata exploration](https:\/\/www.kaggle.com\/artgor\/arxiv-metadata-exploration) kernel","61bdab7e":"### Read JSON Data \ud83d\udcdd","dd679733":"#### Let's print a sample paper metadata","d197ccbf":"### Title Translation","c0fbdd63":"## Introduction\n\n#### In this notebook, we use [MarianMT](https:\/\/marian-nmt.github.io\/) Transformer model to perform abstract translation to other languages.","c3963e7f":"### #1.2 Data Pre-processing \u2699\ufe0f","eb76a756":"### #1.3 Creating MarianMT Model \ud83d\ude9e"}}