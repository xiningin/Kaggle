{"cell_type":{"3a167354":"code","0ab8ca1a":"code","c2eebb2b":"code","da956e70":"code","9b537bc6":"code","2bf54987":"code","8c7047ac":"code","eb6aecc9":"code","e202de8e":"code","fbc264b0":"code","9b84c416":"code","39b49f27":"code","1a97cf61":"code","1fb11855":"code","b2f46efe":"code","8749397e":"code","7a74bd8f":"code","f0bc6ff3":"code","d46a7a05":"code","551cd76b":"code","9b8b5c0a":"code","2149aa24":"code","542c4b43":"code","b2d21043":"code","df95bfe9":"code","c039d1f9":"code","7f78031d":"code","4041c0ca":"code","02914c4c":"code","fa77f83d":"code","dc99084c":"code","356e9530":"code","05e1723e":"code","365acd0f":"code","44fa8679":"markdown","f61a82e6":"markdown","1d5649f3":"markdown","df4e82bb":"markdown","70b817cf":"markdown","bb8db24c":"markdown","ca0f8972":"markdown","69bfdb49":"markdown","ad2f205d":"markdown","66c27494":"markdown","901bd937":"markdown","a1f27673":"markdown","6ed09930":"markdown","d012a54b":"markdown","377bf17e":"markdown","a61ad75a":"markdown","36b54c4d":"markdown","849a2962":"markdown","b70e7f41":"markdown","efaceb6f":"markdown","7c0be117":"markdown","ed4d0987":"markdown","8d7e6b19":"markdown","e1d789aa":"markdown","9e11c059":"markdown","d0c099f5":"markdown","ca60943c":"markdown","8f90ca51":"markdown","6e34a978":"markdown","f31d9b91":"markdown","4656b091":"markdown","447c86c3":"markdown","1cb948f0":"markdown","b47db050":"markdown","89f0ff56":"markdown","5274e956":"markdown","d3cbdb5c":"markdown"},"source":{"3a167354":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ab8ca1a":"netflix=pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\nnetflix.shape","c2eebb2b":"netflix.head(3)","da956e70":"netflix.info()","9b537bc6":"netflix.isnull().sum()","2bf54987":"netflix['director'].fillna('unknown',inplace=True)\nnetflix['cast'].fillna('unknown',inplace=True)\nnetflix['country'].fillna('unknown',inplace=True)\nnetflix['rating'].fillna(netflix['rating'].mode()[0],inplace=True)\nnetflix.drop(['date_added'],axis=1,inplace=True)","8c7047ac":"netflix.isnull().sum().sum()","eb6aecc9":"netflix['type'].value_counts()","e202de8e":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.countplot(netflix['type'])","fbc264b0":"netflix['type'].value_counts().plot.pie(autopct='%1.1f%%',figsize=(10,5))","9b84c416":"import re\ndef remove_text(text):\n    text=re.sub(\"\\D\", \"\", text)\n    return text\nnetflix['duration']=netflix['duration'].apply(lambda x:remove_text(x))","39b49f27":"netflix['duration'].head()","1a97cf61":"movies=netflix[netflix['type']=='Movie']\ntv_shows=netflix[netflix['type']=='TV Show']","1fb11855":"netflix['release_year'].hist()","b2f46efe":"sns.kdeplot(movies['release_year'],color='g',shade=True,label='movies')\nsns.kdeplot(tv_shows['release_year'],color='y',shade=True,label='TV Shows')","8749397e":"sns.kdeplot(movies['duration'],color='r',shade=True,label='movies')","7a74bd8f":"sns.kdeplot(tv_shows['duration'],color='b',shade=True,label='TV Shows')","f0bc6ff3":"movies['rating'].value_counts()","d46a7a05":"movies['rating'].value_counts()[:5].plot(kind='bar')","551cd76b":"tv_shows['rating'].value_counts()[:5].plot(kind='bar')","9b8b5c0a":"netflix['listed_in'].value_counts()[:10].plot(kind='barh')","2149aa24":"movies['listed_in'].value_counts()[:10].plot(kind='barh',color='r')","542c4b43":"tv_shows['listed_in'].value_counts()[:10].plot(kind='barh',color='pink')","b2d21043":"movies['country'].value_counts()[:10].plot(kind='barh',color='green')","df95bfe9":"tv_shows['country'].value_counts()[:10].plot(kind='barh',color='brown')","c039d1f9":"movies['director'].value_counts()[1:11].plot(kind='bar')","7f78031d":"tv_shows['director'].value_counts()[1:11].plot(kind='barh')","4041c0ca":"def get_director(director):\n     return netflix.loc[netflix['director']==director,['title','release_year','listed_in']]\nget_director('Steven Spielberg')    ","02914c4c":"def movies_shows(data,year):\n    return data.loc[data['release_year']==year,['title']].head()\nmovies_shows(movies,2019)","fa77f83d":"movies_shows(tv_shows,2010)","dc99084c":"from wordcloud import WordCloud\nplt.subplots(figsize=(25,8))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(movies['title']))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('cast.png')\nplt.show()","356e9530":"plt.subplots(figsize=(25,8))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(tv_shows['title']))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('cast.png')\nplt.show()","05e1723e":"plt.subplots(figsize=(25,8))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(netflix['director']))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('cast.png')\nplt.show()","365acd0f":"plt.subplots(figsize=(25,8))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(netflix['cast']))\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('cast.png')\nplt.show()","44fa8679":"# Please upvote if you like,any suggestions or mistakes put it in comments,Thank you.","f61a82e6":"Now we will see distribution of tv shows duration,as shown below most of the shows have only 1 season and for few shows has 2 and 3 seasons.","1d5649f3":"Duration feature containes text in it,so first we are removing text using simple regex and then doing the visualisations.","df4e82bb":"Top 10 countries by movies","70b817cf":"Top 10 countries by tv shows","bb8db24c":"# Country feature","ca0f8972":"Top 5  movie ratings ","69bfdb49":"First we will see distribution of release year of overall dataset.As shown below most of the movies and tv shows are in between 2000 and 2019.","ad2f205d":"# Director feature","66c27494":"First checking the categories in type feature and visualising them using countplot and pie plot.","901bd937":"Checking the null values in the data.","a1f27673":"# Duration feature cleaning","6ed09930":"Director,cast,country and rating contains null values.So we replaced them with unknown and for rating we replaced with most repeated rating. ","d012a54b":"Now using kdeplot we are seperately visualising the release years of movies and tv shows.As we already known most of them are released b\/w 2000 and 2019","377bf17e":"Below are various wordclouds of movies and tv shows titles,directors and cast.","a61ad75a":"Here we write a simple function to get our results.For example,as shown below we got the movies and tv shows directored by steven spielberg. ","36b54c4d":"First we will see top 10 most released categories,as shown below documentaries type is most relesed followed by stand by comedy.","849a2962":"Dividing the dataset into movies and tv shows. ","b70e7f41":"Top 5 tv shows ratings.","efaceb6f":"Below we again checked for null value count and it is 0.","7c0be117":"# Words clouds","ed4d0987":"# Type feature","8d7e6b19":"Info() gives us the details about types of features in our data.","e1d789aa":"First we will see categories in ratings and then we will visualise them based on movies and tv shows seperatly.","9e11c059":"# Get detailes of movies,tv shows directored by particular director along with release year and category","d0c099f5":"# listed_in(category) feature","ca60943c":"Top 10 tv shows categories","8f90ca51":"# Get movies or tv shows released in particular year","6e34a978":"# Ratings feature","f31d9b91":"First we will see distribution of movies duration,as shown below most of them are having durations b\/w 70 and 140 minutes.","4656b091":"Top 10 movie categories","447c86c3":"# Loading the data and checking shape and top 3 rows","1cb948f0":"Below i write a simple function,and as you see we get movies released in 2019 and tv shows in 2010","b47db050":"Top 10 directors who director most number of tv shows","89f0ff56":"Top 10 most directed ditectors names","5274e956":"# Duration feature","d3cbdb5c":"# release_year feature"}}