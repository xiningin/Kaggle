{"cell_type":{"2259568a":"code","e0aed2d8":"code","6b15be97":"code","3d8449b4":"code","e984136f":"code","d0a15d11":"code","1a1a4408":"code","6d039377":"code","c4f692f5":"code","e750ac73":"code","348cef8a":"code","f5ef24fd":"code","268962a4":"code","e63b5f5b":"code","19d71e97":"code","4ce416ed":"code","e9a98117":"code","8158c5bc":"code","537560ea":"code","915cd7c9":"code","47007331":"code","4e57019c":"code","fb3c352f":"code","ca5ca09f":"code","488df28a":"code","281cbf98":"code","0323d057":"code","85168824":"code","58634d48":"code","95ec11a3":"code","6dd192b6":"code","024738f0":"code","0572e310":"code","c45dc69a":"code","5a86bd83":"code","0cc44709":"code","01713777":"code","b9d69847":"code","06aa6234":"code","1c8d0d2d":"code","c6462057":"code","9155681c":"code","3b0a79c5":"code","f2d48ef4":"code","e6d86129":"code","1a67512e":"code","7e73cd0b":"code","8c6c3376":"code","9a4774df":"code","e0b574a7":"code","041c9f5b":"code","eca649f7":"code","3321f324":"code","b4d4df45":"code","e3824846":"code","b535dc0a":"code","342caf8e":"code","e5dee3a4":"markdown","2d33f59a":"markdown","43ebaa27":"markdown","10d4f796":"markdown","34608b32":"markdown","969014e9":"markdown","11d36423":"markdown","159310a7":"markdown","267801a1":"markdown","04c50635":"markdown","ad218b40":"markdown"},"source":{"2259568a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","e0aed2d8":"df = pd.read_csv(\"..\/input\/student-alcohol-consumption\/student-mat.csv\")\ndf.head()","6b15be97":"df.shape","3d8449b4":"df.describe()","e984136f":"df.describe(include='O')","d0a15d11":"df.info()","1a1a4408":"df.isnull().sum()","6d039377":"sns.countplot(df['school'],hue=df['sex'])","c4f692f5":"sns.countplot(df['sex'],hue=df['age'])","e750ac73":"sns.countplot(df['sex'],hue=df['famsize'])","348cef8a":"sns.countplot(df['Pstatus'],hue=df['famsize'])","f5ef24fd":"sns.countplot(df['Medu'],hue=df['famsize'])","268962a4":"sns.countplot(df['Fedu'],hue=df['famsize'])","e63b5f5b":"sns.countplot(df['G1'])","19d71e97":"sns.countplot(df['G2'])","4ce416ed":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True)","e9a98117":"df.head()","8158c5bc":"# Preprocessing and Using One hot Encoding ","537560ea":"df.describe(include='O')","915cd7c9":"df['Mjob'] = df['Mjob'].apply(lambda x: 'm_'+ x)\ndf['Fjob'] = df['Fjob'].apply(lambda x: 'f_'+ x)\ndf['reason'] = df['reason'].apply(lambda x: 'reason_'+ x)\ndf['guardian'] = df['guardian'].apply(lambda x: 'gurd_'+ x)","47007331":"df['school'] = pd.get_dummies(df['school'],drop_first=True)\ndf['sex'] = pd.get_dummies(df['sex'],drop_first=True)\ndf['address'] = pd.get_dummies(df['address'],drop_first=True)\ndf['Pstatus'] = pd.get_dummies(df['Pstatus'],drop_first=True)\ndf['famsize'] = pd.get_dummies(df['famsize'],drop_first=True)\nmjob = pd.get_dummies(df['Mjob'],drop_first=True)\nfjob = pd.get_dummies(df['Fjob'],drop_first=True)\nreason = pd.get_dummies(df['reason'],drop_first=True)\ngurdian = pd.get_dummies(df['guardian'],drop_first=True)\ndf['schoolsup'] = pd.get_dummies(df['schoolsup'],drop_first=True)\ndf['famsup'] = pd.get_dummies(df['famsup'],drop_first=True)\ndf['paid'] = pd.get_dummies(df['paid'],drop_first=True)\ndf['activities'] = pd.get_dummies(df['activities'],drop_first=True)\ndf['nursery'] = pd.get_dummies(df['nursery'],drop_first=True)\ndf['higher']= pd.get_dummies(df['higher'],drop_first=True)\ndf['internet'] = pd.get_dummies(df['internet'],drop_first=True)\ndf['romantic'] = pd.get_dummies(df['romantic'],drop_first=True)","4e57019c":"df = pd.concat([df,mjob,fjob,reason,gurdian],axis=1)","fb3c352f":"df.drop(['Mjob','Fjob','reason','guardian'],axis=1,inplace=True)","ca5ca09f":"df.head()","488df28a":"X = df.drop('G3',axis=1)\ny = df['G3']","281cbf98":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","0323d057":"X = pd.DataFrame(scaler.fit_transform(X),columns=X.columns)","85168824":"X.head()","58634d48":"# splitting the dataset\nfrom sklearn.model_selection import train_test_split","95ec11a3":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)","6dd192b6":"from sklearn.linear_model import LinearRegression,Ridge\nLR = LinearRegression()\nR = Ridge()","024738f0":"LR.fit(X_train,y_train)","0572e310":"print(LR.score(X_test,y_test))","c45dc69a":"y_predLR = LR.predict(X_test)","5a86bd83":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predLR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predLR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predLR)))","0cc44709":"plt.scatter(y_test,y_predLR)","01713777":"sns.distplot(y_test-y_predLR)","b9d69847":"R.fit(X_train,y_train)","06aa6234":"print(R.score(X_test,y_test))","1c8d0d2d":"y_predR = R.predict(X_test)","c6462057":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predR)))","9155681c":"plt.scatter(y_test,y_predR)","3b0a79c5":"sns.distplot(y_test-y_predR)","f2d48ef4":"from sklearn.ensemble import RandomForestRegressor,ExtraTreesRegressor","e6d86129":"RFR = RandomForestRegressor()\nETR = ExtraTreesRegressor()","1a67512e":"RFR.fit(X_train,y_train)","7e73cd0b":"print(RFR.score(X_test,y_test))","8c6c3376":"y_predRFR = RFR.predict(X_test)","9a4774df":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predRFR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predRFR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predRFR)))","e0b574a7":"plt.scatter(y_test,y_predRFR)","041c9f5b":"sns.distplot(y_test-y_predRFR)","eca649f7":"ETR.fit(X_train,y_train)","3321f324":"print(ETR.score(X_test,y_test))","b4d4df45":"y_predETR = RFR.predict(X_test)","e3824846":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predETR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predETR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predETR)))","b535dc0a":"plt.scatter(y_test,y_predETR)","342caf8e":"sns.distplot(y_test-y_predETR)","e5dee3a4":"# Using Ridge Regreesion","2d33f59a":"# Using Random Forest Regression and ExtraTree Regression","43ebaa27":"# Loading Dataset","10d4f796":"# Importing Libraries","34608b32":"# Using Linear Regression","969014e9":"# separate X and y","11d36423":"# Scaling the Data using standard scaler","159310a7":"# Exploratory Data Analysis","267801a1":"# Checking null Values","04c50635":"# Trainning Model","ad218b40":"# Correlation"}}