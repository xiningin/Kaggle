{"cell_type":{"394e092a":"code","360dc177":"code","cbc6a731":"code","9db8ef12":"code","72807347":"code","9476214b":"code","49a6efe2":"code","ad011e5d":"code","6ccbc317":"code","41402737":"code","ed8fa49f":"code","42ffedab":"code","702663e9":"markdown","e1c11858":"markdown","81212368":"markdown","230c939b":"markdown","d548e293":"markdown","9cf7461b":"markdown","bf925c58":"markdown","a97bd12f":"markdown","65d1c8b2":"markdown","425fe571":"markdown","954c42a3":"markdown"},"source":{"394e092a":"import numpy as np\nimport pandas as pd\nimport torch\nimport torch.nn.functional as F\nimport torch.optim as optim\n\ntorch.manual_seed(1)\n","360dc177":"! pip uninstall -y kaggle\n! pip install --upgrade pip\n! pip install kaggle==1.5.6 \n! ls -lha kaggle.json\n\n! mkdir -p ~\/.kaggle\n! cp kaggle.json ~\/.kaggle\/\n! chmod 600 ~\/.kaggle\/kaggle.json\n! kaggle -v\n\n","cbc6a731":"! kaggle competitions download -c ai-tomato\n! unzip ai-tomato.zip","9db8ef12":"xy_train = pd.read_csv(\"training_set.csv\")\nxy_train","72807347":"## data separate (\uc6d4,\uc77c \uc815\ubcf4\ub3c4 \uc0ac\uc6a9)\nxy_train[\"date\"] = xy_train[\"date\"]%10000\/100\nx_train = xy_train.loc[:,[i for i in xy_train.keys()[:-1]]]\ny_train = xy_train[xy_train.keys()[-1]]","9476214b":"## data frame => numpy\nx_train = np.array(x_train)\ny_train = np.array(y_train)\n\n## numpy => torch tensor\nx_train = torch.FloatTensor(x_train)\ny_train = torch.FloatTensor(y_train)\n\ny_train = y_train.unsqueeze(dim=1)\ny_train\n","49a6efe2":"w = torch.zeros((7,1),requires_grad=True)\nb = torch.zeros(1,requires_grad=True)\noptimizer = optim.SGD([w,b],lr=1e-3,momentum=0.9)","ad011e5d":"epochs = 30001\n\nfor epoch in range(epochs) :\n\n    h = x_train.matmul(w)+b\n\n    cost = torch.mean((h-y_train)**2)\n\n    optimizer.zero_grad()\n    cost.backward()\n    optimizer.step()\n\n    if epoch % 3000==0 :\n        print('Epoch : {}, Cost : {}'.format(epoch, cost.item()))","6ccbc317":"test = pd.read_csv(\"test_set.csv\",usecols=range(0,7))\ntest","41402737":"test[\"date\"] = test[\"date\"]%10000\/100\ntest","ed8fa49f":"## data frame => numpy\ntest = np.array(test)\n## numpy => torch Tensor\ntest = torch.FloatTensor(test)","42ffedab":"prediction = test.matmul(w) +b\nprint(prediction[:5])\n\ndf = pd.read_csv('submit_sample.csv')\n\nprint(df)\n\nfor i in range(len(prediction)) :\n    df['expected'][i] = prediction[i]\n\nprint(df)\n\ndf.to_csv('baseline.csv',index=False)\n\n! kaggle competitions submit -c ai-tomato -f baseline.csv -m \"baseline\"","702663e9":"## Import , seed \uace0\uc815","e1c11858":"## \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc","81212368":"## Tensor \ub85c \ubcc0\ud658","230c939b":"## Train data set","d548e293":"## data separate (\uc6d4,\uc77c \uc815\ubcf4\ub3c4 \uc0ac\uc6a9)\n","9cf7461b":"## \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ud559\uc2b5 \ud6c4 \uce90\uae00 \uc5c5\ub85c\ub4dc","bf925c58":"## \ud559\uc2b5 \ud30c\ub77c\ubbf8\ud130 \uc124\uc815","a97bd12f":"## \ud559\uc2b5","65d1c8b2":"## \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub85c\ub4dc","425fe571":"## Kaggle setting","954c42a3":"## data \ubd84\ub9ac"}}