{"cell_type":{"d5d968cc":"code","807dd784":"code","ea86a6c6":"code","445843e4":"code","0491702d":"code","95e719ac":"code","bf9f64b1":"code","b5e93b60":"code","f8da4878":"code","7f547e73":"code","6960cf6d":"code","dd1a863a":"code","56122a7b":"code","ec7c8163":"code","0d795d24":"code","92e735d3":"code","729c3e0c":"code","b20d4100":"code","678bdce6":"code","2009ba10":"code","b5904d73":"code","78d39b10":"code","2214c96f":"code","b0270114":"markdown","f95d0276":"markdown","7e2995b1":"markdown","77a126d3":"markdown","c9756656":"markdown","29901dca":"markdown","4f71653d":"markdown","de7e75a7":"markdown","e0b40f9f":"markdown","608a0d8b":"markdown","c32077cb":"markdown","71854848":"markdown","f067e832":"markdown","71d7693d":"markdown","8c3a1141":"markdown","9f292ef9":"markdown","775863ba":"markdown","bb739378":"markdown","9abe1e35":"markdown","082e974d":"markdown","1a2d2386":"markdown","83b355a7":"markdown","8535153e":"markdown","2fbf0e8e":"markdown","23e3bf8f":"markdown","abe9dc79":"markdown"},"source":{"d5d968cc":"# import needed library\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport json\nimport numpy as np\nfrom scipy.signal import savgol_filter\nfrom sklearn.metrics import mean_absolute_error as mae","807dd784":"# load the csv files to dataframe for use\nour_sys = pd.read_csv('..\/input\/processed-running-data-0720\/right_camera_0.20.csv')\ngold_sys = pd.read_csv('..\/input\/processed-running-data-0720\/golden_system.csv')","ea86a6c6":"# show the dataframe of our system\nour_sys","445843e4":"# show the dataframe of golden system\ngold_sys","0491702d":"plt.figure()\n# select four cycles for detail analysis\ntest_gold = gold_sys[163:857].reset_index()\nsns.lineplot(data = test_gold, x = test_gold.index, y = 'right knee angle')\nplt.title('Knee Angle Measured by Golden System')\nplt.xlabel('frame number')","95e719ac":"# create a function for all visualization\ndef vis(dataset, y, plot_row = 2, plot_col = 2, cycle_length = 173, figsize = (15, 15)):\n    plots_num = plot_col * plot_row\n    fig = plt.figure(figsize = figsize)\n    for i in range(plots_num):\n        if i ==  0:\n            start_idx = 0\n        else:\n            start_idx += cycle_length\n        end_idx = cycle_length + start_idx\n        plt.subplot(plot_row,plot_col,i+1)\n        sns.scatterplot(data = dataset[start_idx:end_idx], x = dataset[start_idx:end_idx].index,y =y)\n        sns.lineplot(data = dataset[start_idx:end_idx], x = dataset[start_idx:end_idx].index,y =y)","bf9f64b1":"vis(dataset = test_gold, y = 'right knee angle', plot_row = 4, plot_col = 1,figsize = (5, 10))","b5e93b60":"# we found the same four cycle in our collected dataset\ntest_our = our_sys[814:1180]\n# we change the domain of the angle value to the same as the golden system\ntest_our['right knee angle'] = test_our['Angle2'] - 180\ntest_our['right ankle angle'] = 180 - test_our['Angle4']\n# reset the index\ntest_our = test_our.reset_index()","f8da4878":"test_our['filtered our sys knee angle'] = savgol_filter(test_our['right knee angle'], 25, 2)\ntest_our['filtered our sys ankle angle'] = savgol_filter(test_our['right ankle angle'], 25, 2)","7f547e73":"dataset = test_our\n# plot right knee angle with\/without filter\nplt.figure(figsize = [30,15])\nplt.subplot(2,2,1)\nsns.lineplot(data = dataset, x = dataset.index,y='right knee angle')\nplt.title('(a) before applying filter', fontsize = 30)\nplt.ylabel('Knee Angle (Deg)', fontsize = 30)\nplt.xticks(fontsize = 30)\nplt.yticks(fontsize = 30)\n\nplt.subplot(2,2,2)\nplt.plot(dataset.index, dataset['filtered our sys knee angle'])\nplt.title('(b) after applying filter', fontsize = 30)\nplt.xticks(fontsize = 30)\nplt.yticks(fontsize = 30)\n\n\n# plot right ankle angle with\/without filter\nplt.subplot(2,2,3)\nsns.lineplot(data = dataset, x = dataset.index,y='right ankle angle')\nplt.ylabel('Knee Angle (Deg)', fontsize = 30)\nplt.xlabel('frame number', fontsize = 30)\nplt.xticks(fontsize = 30)\nplt.yticks(fontsize = 30)\n\nplt.subplot(2,2,4)\nplt.plot(dataset.index, dataset['filtered our sys ankle angle'])\nplt.xlabel('frame number', fontsize = 30)\nplt.xticks(fontsize = 30)\nplt.yticks(fontsize = 30)","6960cf6d":"test_our","dd1a863a":"vis(dataset = test_our, y = 'filtered our sys knee angle', plot_row = 4, plot_col = 1, cycle_length = 92, figsize=(5,10))","56122a7b":"# resample the golden system dataset to the same amount as our system.\nfrom sklearn.utils import resample\n\n# resample the golden system dataset, and then smooth the data with a low-pass filter\nresample_data = resample(test_gold, n_samples = 366, replace = False, random_state = 0).sort_index()\nresample_data = resample_data.reset_index()\nsmooth_knee = savgol_filter(resample_data['right knee angle'], 11, 2)\nsmooth_ankle = savgol_filter(resample_data['right ankle angle'], 11, 2)\n\nresample_data['filtered golden sys knee data'] = smooth_knee\nresample_data['filtered golden sys ankle data'] = smooth_ankle","ec7c8163":"resample_data","0d795d24":"vis(dataset = resample_data, figsize = (15, 15), y = 'filtered golden sys knee data', cycle_length = 92)","92e735d3":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error as mse\nscaler = MinMaxScaler()\ndftest = pd.concat([resample_data['right knee angle'],test_our['filtered our sys knee angle']], axis = 1)\ntest_data = scaler.fit_transform(dftest[['right knee angle', 'filtered our sys knee angle']])\nprint('mean absolute error is: {:.2f}%'.format(100 * mae(test_data[:,0], test_data[:,1])))\nprint('mean square error is: {:.2f}%'.format(100 * mse(test_data[:,0], test_data[:,1], squared = False)))\n","729c3e0c":"dftest = pd.concat([resample_data['right knee angle'],test_our['right knee angle']], axis = 1)\ntest_data = scaler.fit_transform(dftest[['right knee angle', 'right knee angle']])\nprint('mean absolute error is: {:.2f}%'.format(100 * mae(test_data[:,0], test_data[:,1])))\nprint('mean square error is: {:.2f}%'.format(100 * mse(test_data[:,0], test_data[:,1], squared = False)))","b20d4100":"plt.figure()\nsns.lineplot(data = test_gold, x = test_gold.index,y='right ankle angle')\nplt.title('Right Ankle Angle Meausred by Golden System')\nplt.xlabel('Frame number')\n# smooth_ankle = savgol_filter(right['right ankle angle'], 25, 2)\n# right['ankle filtered data'] = smooth_ankle\n# plt.plot(right.index, smooth_ankle)\n# show golden system\nvis(dataset = test_gold, y = 'right ankle angle')","678bdce6":"test_our_new = our_sys[984:1350]\ntest_our_new['right knee angle'] = test_our_new['Angle2'] - 180\ntest_our_new['right ankle angle'] = 180 - test_our_new['Angle4']\ntest_our_new = test_our_new.reset_index()\n\nvis(dataset = test_our_new, y = 'right knee angle', cycle_length = 92)","2009ba10":"plt.figure()\nsmooth_ankle = savgol_filter(test_our_new['right ankle angle'], 25, 2)\ntest_our_new['filtered our sys ankle angle'] = smooth_ankle\nplt.plot(test_our_new.index, smooth_ankle)\nplt.xlabel('Frame number')\nplt.title('Right Ankle Angle Measured by Our System')\n\nvis(dataset = test_our_new, cycle_length = 91, y = 'filtered our sys ankle angle')","b5904d73":"test_our_new","78d39b10":"dftest = pd.concat([resample_data['right ankle angle'],test_our_new['filtered our sys ankle angle']], axis = 1)\ntest_data = scaler.fit_transform(dftest[['right ankle angle', 'filtered our sys ankle angle']])\nprint('mean absolute error is {:.2f}%'.format(100*mae(test_data[:,0], test_data[:,1])))\nprint('mean squared error is {:.2f}%'.format(100*mse(test_data[:,0], test_data[:,1], squared = False)))","2214c96f":"dftest = pd.concat([resample_data['right ankle angle'],test_our_new['right ankle angle']], axis = 1)\ntest_data = scaler.fit_transform(dftest[['right ankle angle', 'right ankle angle']])\nprint('mean absolute error is {:.2f}%'.format(100*mae(test_data[:,0], test_data[:,1])))\nprint('mean squared error is {:.2f}%'.format(100*mse(test_data[:,0], test_data[:,1], squared = False)))","b0270114":"### 3.1 The Analysis for the knee angles\n#### 3.1.1 Check the knee angle changes during running in golden system","f95d0276":"### After applied low pass filter","7e2995b1":"## 1. Import needed libraries and datasets","77a126d3":"Steps taken:\n* Apply savgol filter to clean the noisy in our system\n* Create a plot for all four running cycles\n* Create four seperate plots for each running cycle\n* Plot the knee angle data points and the smoothed data in the same plot to visulize the difference\n","c9756656":"## 3.2 Comparision of the knee angle from our system and the golden system","29901dca":"#### 3.3.2 Check the ankle angle for our system","4f71653d":"## 3. Select a section of the running data for detail analysis","de7e75a7":"# Running Analysis","e0b40f9f":"Since the method of ankle angle reference in our system is slightly different from the golden system, we need to adjust the system to the same scale.\n* First, we manually selected the running cycle in our system that represent the same cycles in the golden system\n* Second, knee angle of our system = knee angle of golden system - 180 degrees\n* Third, ankle angle of our system = 180 - ankle angle of golden system\n* Last, reset the index and represent the new dataframe of our system","608a0d8b":"## Conclusion\n* Knee angle values measured by our system obtained a MAE of 11.07% and a RMSE of 15.59%;\n* Ankle angle values measured by our system obtained a MAE of 18.94% and a RMSE of 25.45%;\n* Applying a low pass filter did not change the significance of our system measurement, but it is very helpful to remove the system noise to give a smooth plot;\n* The knee angle measured by our system is more accurate compared to the ankle angle measurements. The reason is that OpenPose does not perform well with foot key points detection. Since we calculate the ankle angle using the big toe estimation, the accuracy for the ankle angle measurement can be effected. ","c32077cb":"#### preprocess of the data, so two dataset can be aligned and resampled\n* resample the golden system dataset to the same amount of data points as our system\n* use dynamic time warping to align the running cycles from two different datasets","71854848":"## 2. Take a first look at the dataframes our system and the golden system ","f067e832":"### Before filtering our system results using low pass filter","71d7693d":"#### 3.3.3 Analysis result comparison","8c3a1141":"##### First, take a look at the difference of the plot with and without filter","9f292ef9":"### After filtering our system results using low pass filter","775863ba":"## Background: \nWe have collected two running datasets. One dataset is collected using our system (marker-less gait analysis system), and another dataset is collected by Qualisys (marker-based gait analysis system). \n\n## Datasets:\nAll kinematical data are stored in csv files. \nFor our system, we collected four angles (right knee angle, right ankle angle, left knee angle and left ankle angle). \nFor golden system, it stored the right knee angle and right ankle angle. \n\n## Analysis Goal:\nWe want to compare the accuracy of our system using the Qualisys system as golden rule. \n* compare the knee angle measurements from two systems\n* compare the ankle angle measurements from two systems\n* create visualization for both systems and angles","bb739378":"### Seperate each running cycle and take a look to the knee angle plot","9abe1e35":"#### 3.3.1 Check the ankle angle for golden system","082e974d":"## 3.3 Comparision of the ankle angle from our system and the golden system","1a2d2386":"### Section conclusion:\nAs above figures shown, the plots in our system also indicate two peaks in one cycle. The angle range is [-80, -10] However, we can also see that our system contains more noisy than the golden system. With the smoothed filter, the noisy of our running dataset has been reduced.  ","83b355a7":"### 2.1 check the loaded dataframes","8535153e":"#### 3.1.2 Check the knee angle changes in our system","2fbf0e8e":"### 3.2.2 Analysis the result for the knee angle  \nUse mean absolute error and mean squared error matrices to measure the accuracy of our system comparing to the golden system","23e3bf8f":"As we can see from the plots, the knee angle changes periodically over time. There are two peek in one cycle and the range of the angle should be within [-90, -10]","abe9dc79":"#### 3.2.1 resample the golden system dataset to the same amount as our system"}}