{"cell_type":{"8608de0d":"code","c93bda0e":"code","febf0ee9":"code","9ea8c034":"code","7e8aaaff":"code","1345d7ca":"code","4f1dae94":"code","7147f794":"code","664f674f":"code","e26ac330":"code","1eb451de":"code","9466b2c5":"code","86664b5d":"code","9919f572":"code","4b3390be":"code","cbc054d4":"code","5b426fb2":"code","0002fd8e":"code","7e73b091":"code","09e8df3c":"code","8a854e05":"code","4a34e604":"code","d14ba2f6":"code","c3b31640":"code","c2f1bc3f":"code","a4ff8f11":"code","f4bec5e3":"code","ec3ea6c5":"code","4f95c9f7":"code","e3bfda37":"code","3e289cca":"code","eb84ec44":"code","56ffd650":"code","58631026":"code","1127ae4a":"code","378a2cdd":"code","d5d0b74b":"code","0b0a8689":"code","dd6adea4":"code","414da35c":"markdown","b43dc5ad":"markdown","fcd9586c":"markdown","3a31c74e":"markdown","c59ee953":"markdown","42143d30":"markdown","bc685ff0":"markdown","f2f61ed0":"markdown","2ec33fd4":"markdown","e81152a0":"markdown","40f6947c":"markdown","158ad323":"markdown","8f4debfb":"markdown","6f5db5d7":"markdown","ca8e00bb":"markdown","69e2fcf6":"markdown","7bc2c761":"markdown","a6146c9b":"markdown","4fa21bf0":"markdown","dd9919f9":"markdown","67332f12":"markdown","ba52ceea":"markdown","fa73ca84":"markdown","69a3cae8":"markdown","66073621":"markdown","921060fb":"markdown","d130b6c6":"markdown","d802b721":"markdown","ac15ffcb":"markdown","7bc1b9a7":"markdown","9578c44a":"markdown","0779eb73":"markdown"},"source":{"8608de0d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","c93bda0e":"data = pd.read_csv('..\/input\/Iris.csv')","febf0ee9":"data.columns","9ea8c034":"data.info()","7e8aaaff":"data.corr()","1345d7ca":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","4f1dae94":"data.PetalWidthCm.plot(kind = \"line\",color = \"r\",label=\"PWidth\",linestyle=\":\",linewidth=2,grid=True)\ndata.SepalWidthCm.plot(color = \"b\",label=\"SWidth\",linewidth=2,linestyle=\"-.\",grid=True)\nplt.legend()\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.show()","7147f794":"#plt.scatter(data.PetalLengthCm,data.SepalLengthCm,alpha=0.5,color = \"r\")\n\ndata.plot(kind = \"scatter\",x=\"PetalLengthCm\",alpha = 0.5 , color=\"r\",\n          y=\"SepalLengthCm\")\n\nplt.show()","664f674f":"data.SepalLengthCm.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()\nprint(\"Mean of SepalLengthCm: \",(sum(data.SepalLengthCm)\/len(data.SepalLengthCm)))","e26ac330":"dictionary = {'Turkey' : 'Kayseri','Germany' : 'M\u00fcnih'}\nprint(dictionary.keys())\nprint(dictionary.values())\n","1eb451de":"dictionary[\"Turkey\"]=\"Bursa\" # add a new value\nprint(dictionary)\nprint(\" \")\ndictionary[\"Germany\"] = \"M\u00fcnchen\" # update existing value\nprint(dictionary)\nprint(\" \")\nprint(\"New York\"in dictionary) # check \nprint(\" \")\ndel dictionary[\"Germany\"]# remove \"Germany\" from dictionary\nprint(dictionary)\nprint(\" \")\ndictionary.clear()#clear all values\nprint(dictionary)\nprint(\" \")\n","9466b2c5":"series = data[\"SepalLengthCm\"] \nprint(type(series))\ndata_frame = data[[\"SepalLengthCm\"]] # \u0130f you dont use double [] you cant use dataframe classes!\nprint(type(data_frame))","86664b5d":"x=data[\"PetalLengthCm\"]>6\ndata[x]","9919f572":"data[(data['PetalLengthCm']>6) & (data['PetalWidthCm']>2.2)]","4b3390be":"for i in dictionary:\n   print(dictionary[i])","cbc054d4":"for key, value in dictionary.items():\n    print(key,\" : \",value)","5b426fb2":"data.info()","0002fd8e":"mean_of_sepallength = sum(data.SepalLengthCm) \/ len(data.SepalLengthCm)\n#print(mean_of_sepallength)\ndata[\"LeafLength\"] = [\"long\" if i>mean_of_sepallength else \"short\" for i in data.SepalLengthCm]\n\nprint(data[50:65])\n","7e73b091":"print(data['SepalLengthCm'].value_counts(dropna =False))","09e8df3c":"data.describe()","8a854e05":"data.boxplot(column='SepalLengthCm',by = 'SepalWidthCm')\nplt.show()","4a34e604":"newdata1 = data.head()\nnewdata2 = data.tail()\nconc_data = pd.concat([newdata1,newdata2],axis=0,ignore_index = True )\n#ignore_index adds new id column\n#if axix=1 it will be concatenate datas horizontly\nconc_data","d14ba2f6":"# id_vars = what we do not wish to melt\n# value_vars = what we want to melt\nmelted = pd.melt(frame=conc_data , id_vars=\"Species\",value_vars=[\"SepalLengthCm\",\"PetalLengthCm\"])\nmelted","c3b31640":"data.dtypes","c2f1bc3f":"data['SepalLengthCm'] = data['SepalLengthCm'].astype('str')\n#We converted SepalLengthCm float to str","a4ff8f11":"data.dtypes","f4bec5e3":"data1=data\ndata1[\"Species\"].dropna(inplace = True)# we droped nan values in species","ec3ea6c5":"data1[\"Species\"]# there is no missing data","4f95c9f7":"country = [\"Turkey\",\"Germany\"]\npopulation = [\"80\",\"50\"]\nlist_label = [\"country\",\"population\"]\nlist_col = [country,population]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf\n","e3bfda37":"df[\"capital\"] = [\"Ankara\",\"M\u00fcnih\"]\ndf","3e289cca":"data1 = data.loc[:,[\"SepalLengthCm\",\"PetalLengthCm\",\"SepalWidthCm\",\"SepalWidthCm\"]]\ndata1.plot()\n#hard to understand","eb84ec44":"data1.plot(subplots = True)\nplt.show()\n#you can easily understand now","56ffd650":"data.describe()","58631026":"#how to do str to datatime\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# close warning\n\ndata2 = data.head()\ndate_list = [\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"] = datetime_object\ndata2= data2.set_index(\"date\")\ndata2 ","1127ae4a":"data2.resample(\"A\").mean()\ndata2.resample(\"M\").mean()\n#we havent got enough value for all months","378a2cdd":"data2.resample(\"M\").first().interpolate(\"linear\")\n#fill NaNs linearly","d5d0b74b":"data\ndata = data.set_index(\"Id\")\ndata","0b0a8689":"data['SepalLengthCm'] = data['SepalLengthCm'].astype('float')\nfilter1 = data.SepalLengthCm> 6\ndata[filter1]\n","dd6adea4":"data2 =data.SepalWidthCm[filter1]\ndata2","414da35c":"**SECOND PART**","b43dc5ad":"*Describe function gives as median of the data and another informations.*","fcd9586c":"> ***Histogram***","3a31c74e":"> ***Getting Values with Index in Dictionary with for loop***","c59ee953":"**D\u0130CT\u0130ONARY**\n* *Sample of dictionary:*\n* dictionary = {'spain' : 'madrid','usa' : 'vegas'}\n","42143d30":"> ***Basic for loop***","bc685ff0":"It is my first try to analyzing a dataset. And I choose Iris dataset because it is simple and useful . Thanks for your reading:)\n\nParts of my notebook:\n\n1. Visualization \n1. List Comprehension\n1. Cleaning Data","f2f61ed0":"**VISUALIZATION AND ANALYZING OF IRIS DATASET**\n\n","2ec33fd4":"*Concatenating two datas with pd.concat*","e81152a0":"> ***Defining Dictionary***","40f6947c":"*We can find our outlayers*","158ad323":"> *** Scatterplot***","8f4debfb":"> ***Lineplot***","6f5db5d7":"> ***BUILDING DATA FRAMES FROM SCRATCH***","ca8e00bb":"> ***Getting Data***","69e2fcf6":"*We can change dtype with astype function*","7bc2c761":"> ***Some Tools For Dictionary***","a6146c9b":"**FOURTH PART**","4fa21bf0":"> ***Filtering the Data with Two \u0130nputs***","dd9919f9":"* parse_dates(boolean): Transform date to ISO 8601 (yyyy-mm-dd hh:mm:ss ) format","67332f12":"***MANIPULATING DATA FRAMES WITH PANDAS***","ba52ceea":"***STATISTICAL EXPLORATORY DATA ANALYSIS***\n","fa73ca84":".\n\n\n\n**PANDAS**\n\n.\n\n\n\n","69a3cae8":"*Number of the values in this label. *","66073621":"> ***Filtering The Data***","921060fb":"*We can get data types with data.dtypes\n*","d130b6c6":"**TH\u0130RD PART**","d802b721":"We tried: \n\n1. importing scv files\n1. Plotting line,scatter and histogram\n1. Dictionary\n1. Basic pandas\n1. Basic for loops\n\n\n\u0130t is my first try.\n\nSorry for my bad english.\n \nThanks for your reading...","ac15ffcb":"*Using list comprehension*","7bc1b9a7":"***INDEXING PANDAS TIME SERIES***","9578c44a":"> ***Some infos About Dataset of Iris***","0779eb73":"*We melted our data*"}}