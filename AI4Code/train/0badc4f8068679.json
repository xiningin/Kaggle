{"cell_type":{"4622dae6":"code","a820d1fa":"code","07a9476a":"code","0f78db9f":"code","07d7e474":"code","7bfb1635":"code","d6d0ec8b":"code","10e72a55":"code","597b3c31":"code","62b8304f":"code","8b57625d":"code","5c2d4aed":"code","dc0e9ad5":"code","4f11358d":"code","5ea634c2":"code","2372fcc1":"code","aad74245":"code","9cd48380":"code","62f36f74":"code","aed3ef29":"code","b3dd31ad":"code","d5102d07":"code","dfeae856":"code","67c45299":"code","b9f6ff35":"code","4bb508d4":"code","72789148":"code","0bf2c992":"code","dbb145f4":"markdown","b6f28271":"markdown","d6f83ccd":"markdown","6e53ba40":"markdown","4f92ecfc":"markdown","1b2fdb3f":"markdown","6bb18613":"markdown","9b84a08f":"markdown"},"source":{"4622dae6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom ml_metrics import rmse","a820d1fa":"train= pd.read_csv(\"..\/input\/neolen-house-price-prediction\/train.csv\")\ntest =pd.read_csv(\"..\/input\/neolen-house-price-prediction\/test.csv\")","07a9476a":"train.head()","0f78db9f":"train.info()","07d7e474":"train.describe().T","7bfb1635":"corr=train.corr()\ncorr","d6d0ec8b":"corr[\"SalePrice\"]","10e72a55":"print(train.corr().abs().nlargest(6, 'SalePrice').index)\nprint(train.corr().abs().nlargest(6, 'SalePrice').values[:,37])","597b3c31":"sns.jointplot(x = \"OverallQual\", y = \"SalePrice\", data = train, kind = \"reg\");","62b8304f":"sns.jointplot(x = \"GrLivArea\", y = \"SalePrice\", data = train, kind = \"reg\");","8b57625d":"sns.jointplot(x = \"GarageCars\", y = \"SalePrice\", data = train, kind = \"reg\");","5c2d4aed":"sns.jointplot(x = \"TotalBsmtSF\", y = \"SalePrice\", data = train, kind = \"reg\");","dc0e9ad5":"sns.jointplot(x = \"GarageArea\", y = \"SalePrice\", data = train, kind = \"reg\");","4f11358d":"lm  = LinearRegression()","5ea634c2":"X = pd.DataFrame(np.c_[train['GrLivArea'], train['OverallQual']], columns = ['GrLivArea','OverallQual'])\ny = train[[\"SalePrice\"]]","2372fcc1":"x_train, x_test, Y_train, Y_test = train_test_split(X, y, test_size = 0.3,\nrandom_state=5)","aad74245":"model = lm.fit(x_train, Y_train)\ny_pred=model.predict(x_test)\nmse = mean_squared_error(Y_test, model.predict(x_test))","9cd48380":"y_pred[0:5]","62f36f74":"# The mean absolute error\nprint(\"MAE = %5.3f\" % mean_absolute_error(Y_test, y_pred))\n# Explained variance score: 1 is perfect prediction\nprint(\"R^2 = %0.5f\" % r2_score(Y_test, y_pred))\n# The mean squared error\nprint(\"MSE = %5.3f\" % mean_squared_error(Y_test, y_pred))\n# Root-Mean-Squared-Error (RMSE)\nprint(\"RMSE = %5.3f\" % rmse(Y_test, y_pred))","aed3ef29":"fig, ax = plt.subplots()\nax.scatter(Y_test, y_pred, edgecolors = (0, 0, 0))\nax.text(y_pred.max()-4.5, Y_test.max()-0.1, r\"$R^2$ = %.2f, MAE = %.2f\" % (\nr2_score(Y_test, y_pred), mean_absolute_error(Y_test, y_pred)))\nax.plot([Y_test.min(), Y_test.max()], [Y_test.min(), Y_test.max()], \"k--\",\nlw = 4)\nax.set_xlabel(\"Measured\")\nax.set_ylabel(\"Predicted\")\nplt.show()","b3dd31ad":"y.describe().T","d5102d07":"df=train.loc[:,['GrLivArea','OverallQual',\"GarageArea\",\"TotalBsmtSF\",\"GarageCars\"]]\ny = train[[\"SalePrice\"]]\ndf","dfeae856":"x_train, x_test, Y_train, Y_test = train_test_split(df, y, test_size = 0.3,\nrandom_state=5)","67c45299":"model = lm.fit(x_train, Y_train)\ny_pred=model.predict(x_test)\nmse = mean_squared_error(Y_test, model.predict(x_test))","b9f6ff35":"# The mean absolute error\nprint(\"MAE = %5.3f\" % mean_absolute_error(Y_test, y_pred))\n# Explained variance score: 1 is perfect prediction\nprint(\"R^2 = %0.5f\" % r2_score(Y_test, y_pred))\n# The mean squared error\nprint(\"MSE = %5.3f\" % mean_squared_error(Y_test, y_pred))\n# Root-Mean-Squared-Error (RMSE)\nprint(\"RMSE = %5.3f\" % rmse(Y_test, y_pred))","4bb508d4":"fig, ax = plt.subplots()\nax.scatter(Y_test, y_pred, edgecolors = (0, 0, 0))\nax.text(y_pred.max()-4.5, Y_test.max()-0.1, r\"$R^2$ = %.2f, MAE = %.2f\" % (\nr2_score(Y_test, y_pred), mean_absolute_error(Y_test, y_pred)))\nax.plot([Y_test.min(), Y_test.max()], [Y_test.min(), Y_test.max()], \"k--\",\nlw = 4)\nax.set_xlabel(\"Measured\")\nax.set_ylabel(\"Predicted\")\nplt.show()","72789148":"final=test.loc[:,['GrLivArea','OverallQual',\"GarageArea\",\"TotalBsmtSF\",\"GarageCars\"]]\ny_pred_test= model.predict(final)\nsubmission  = pd.DataFrame()\nsubmission['Id']=test['Id']\nsubmission[\"SalePrice\"]=y_pred_test\nsubmission.info()\nsubmission.to_csv('submission.csv', index=False) ","0bf2c992":"submission.head()","dbb145f4":"## Data exploring","b6f28271":"# Libraries and Data","d6f83ccd":"## linear regression model with 2 features","6e53ba40":"## Feature selection ","4f92ecfc":"# INTRODUCTION\n\nIn these data, the characteristics of each house are explained by giving 79 different variables. The aim of this study is to predict the sales price for each house. A prediction model was created by choosing the most significant one among the variables. The linear regression model was chosen to create the model. House price prediction data set is used.","1b2fdb3f":"# Modeling","6bb18613":"## lineer regression model with 5 features","9b84a08f":"## FEATURES\n*SalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.\n\n*MSSubClass: The building class\n\n*MSZoning: The general zoning classification\n\n*LotFrontage: Linear feet of street connected to property\n\n*LotArea: Lot size in square feet\n\n*Street: Type of road access\n\n*Alley: Type of alley access\n\n*LotShape: General shape of property\n\n*LandContour: Flatness of the property\n\n*Utilities: Type of utilities available\n\n*LotConfig: Lot configuration\n\n*LandSlope: Slope of property\n\n*Neighborhood: Physical locations within Ames city limits\n\n*Condition1: Proximity to main road or railroad\n\n*Condition2: Proximity to main road or railroad (if a second is present)\n\n*BldgType: Type of dwelling\n\n*HouseStyle: Style of dwelling\n\n*OverallQual: Overall material and finish quality\n\n*OverallCond: Overall condition rating\n\n*YearBuilt: Original construction date\n\n*YearRemodAdd: Remodel date\n\n*RoofStyle: Type of roof\n\n*RoofMatl: Roof material\n\n*Exterior1st: Exterior covering on house\n\n*Exterior2nd: Exterior covering on house (if more than one material)\n\n*MasVnrType: Masonry veneer type\n\n*MasVnrArea: Masonry veneer area in square feet\n\n*ExterQual: Exterior material quality\n\n*ExterCond: Present condition of the material on the exterior\n\n*Foundation: Type of foundation\n\n*BsmtQual: Height of the basement\n\n*BsmtCond: General condition of the basement\n\n*BsmtExposure: Walkout or garden level basement walls\n\n*BsmtFinType1: Quality of basement finished area\n\n*BsmtFinSF1: Type 1 finished square feet\n\n*BsmtFinType2: Quality of second finished area (if present)\n\n*BsmtFinSF2: Type 2 finished square feet\n\n*BsmtUnfSF: Unfinished square feet of basement area\n\n*TotalBsmtSF: Total square feet of basement area\n\n*Heating: Type of heating\n\n*HeatingQC: Heating quality and condition\n\n*CentralAir: Central air conditioning\n\n*Electrical: Electrical system\n\n*1stFlrSF: First Floor square feet\n\n*2ndFlrSF: Second floor square feet\n\n*LowQualFinSF: Low quality finished square feet (all floors)\n\n*GrLivArea: Above grade (ground) living area square feet\n\n*BsmtFullBath: Basement full bathrooms\n\n*BsmtHalfBath: Basement half bathrooms\n\n*FullBath: Full bathrooms above grade\n\n*HalfBath: Half baths above grade\n\n*Bedroom: Number of bedrooms above basement level\n\n*Kitchen: Number of kitchens\n\n*KitchenQual: Kitchen quality\n\n*TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n\n*Functional: Home functionality rating\n\n*Fireplaces: Number of fireplaces\n\n*FireplaceQu: Fireplace quality\n\n*GarageType: Garage location\n\n*GarageYrBlt: Year garage was built\n\n*GarageFinish: Interior finish of the garage\n\n*GarageCars: Size of garage in car capacity\n\n*GarageArea: Size of garage in square feet\n\n*GarageQual: Garage quality\n\n*GarageCond: Garage condition\n\n*PavedDrive: Paved driveway\n\n*WoodDeckSF: Wood deck area in square feet\n\n*OpenPorchSF: Open porch area in square feet\n\n*EnclosedPorch: Enclosed porch area in square feet\n\n*3SsnPorch: Three season porch area in square feet\n\n*ScreenPorch: Screen porch area in square feet\n\n*PoolArea: Pool area in square feet\n\n*PoolQC: Pool quality\n\n*Fence: Fence quality\n\n*MiscFeature: Miscellaneous feature not covered in other categories\n\n*MiscVal: $Value of miscellaneous feature\n\n*MoSold: Month Sold\n\n*YrSold: Year Sold\n\n*SaleType: Type of sale\n\n*SaleCondition: Condition of sale\n"}}