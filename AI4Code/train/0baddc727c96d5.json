{"cell_type":{"4ff8d6f2":"code","b54b6cfd":"code","3663e994":"code","36c3f354":"code","a6648326":"code","e2e20dbe":"code","66deda66":"code","04881dbd":"code","b94c9a95":"code","432a1e7a":"code","f008ef80":"code","3db8e85d":"code","9f73bac7":"code","a943bbf4":"code","f570fbae":"code","c630dc60":"code","1774bd5b":"code","9ba2af30":"code","7df8acc5":"code","33079e62":"code","afe661f1":"code","aa39e795":"code","bdebb1f0":"code","e6a11c80":"code","37e0927c":"code","38c88663":"code","26eb0e1f":"code","a57b2515":"code","069d8033":"code","46acc08a":"code","d6bdd98e":"code","42be5787":"code","d996ca9f":"code","40d62bc8":"code","c5357f7a":"code","f2f663c5":"code","fc34bbd4":"code","4a7fe070":"code","4b10ab4f":"code","568e8f10":"code","18c65298":"code","fd8d3ad0":"code","8cd627b1":"code","f0c37af5":"code","52c3e27d":"code","41a26268":"code","d11678e4":"code","d18f76c2":"code","315b8ef5":"code","71308811":"code","8ad572d3":"code","53c3e9d4":"code","3ffcf695":"code","862a5884":"code","73841e0c":"code","0494756f":"markdown","7391b80c":"markdown","895ff460":"markdown","a24fddca":"markdown","5bdd96ef":"markdown","d3520636":"markdown","19dc380b":"markdown","64a5691f":"markdown","063cc149":"markdown","88fad50f":"markdown","9800605e":"markdown","47204b31":"markdown","f22d80c3":"markdown","02134ae9":"markdown","1acc10a6":"markdown","45e0aeae":"markdown","20a8a7e9":"markdown","c17b495b":"markdown","3c3bcba8":"markdown","abd2ce12":"markdown","577f75ef":"markdown","5d639a6a":"markdown","102d30f1":"markdown","864203de":"markdown","e4f176e9":"markdown","76d17913":"markdown","5aaeb8c0":"markdown","9a0c08da":"markdown","db67cc2c":"markdown","58400351":"markdown"},"source":{"4ff8d6f2":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams","b54b6cfd":"bank_churners = pd.read_csv(\"..\/input\/credit-card-customers\/BankChurners.csv\")","3663e994":"bank_churners.head()","36c3f354":"df = bank_churners.copy()\ndf.head()","a6648326":"df = df.iloc[:,:-2]\ndf.head()","e2e20dbe":"df.info()","66deda66":"df_features = list(df.dtypes.index)\ndf_features","04881dbd":"df.describe()","b94c9a95":"k = 0\nfor i in df_features:\n    if df[df_features[k]].dtypes == \"object\":\n        df[df_features[k]].value_counts().plot.barh()\n        plt.title(df_features[k])\n        plt.show()\n    k = k+1","432a1e7a":"df.loc[df.Marital_Status == \"Unknown\"].Marital_Status.index","f008ef80":"df.iloc[df.loc[df.Marital_Status == \"Unknown\"].Marital_Status.index,6] = np.nan","3db8e85d":"df.iloc[df.loc[df.Education_Level == \"Unknown\"].Education_Level.index,5] = np.nan","9f73bac7":"df.iloc[df.loc[df.Income_Category == \"Unknown\"].Income_Category.index,7] = np.nan","a943bbf4":"df.isnull().sum()","f570fbae":"df.Education_Level.isnull().sum()\/len(df)","c630dc60":"df.Marital_Status.isnull().sum()\/len(df)","1774bd5b":"df.Income_Category.isnull().sum()\/len(df)           ","9ba2af30":"import missingno as msno","7df8acc5":"msno.matrix(df);","33079e62":"msno.heatmap(df);","afe661f1":"df[\"Marital_Status\"] = df[\"Marital_Status\"].fillna(df.Marital_Status.mode()[0])","aa39e795":"df[\"Education_Level\"] = df[\"Education_Level\"].fillna(df.Education_Level.mode()[0])","bdebb1f0":"df[\"Income_Category\"] = df[\"Income_Category\"].fillna(df.Income_Category.mode()[0])","e6a11c80":"df.isnull().sum()","37e0927c":"df.head()","38c88663":"df.info()","26eb0e1f":"df_features_numerics = []\nk = 0\nfor i in df_features:\n    if df[df_features[k]].dtypes != \"object\": \n        df_features_numerics.append(df_features[k])\n    k = k+1\nprint(df_features_numerics)","a57b2515":"df_features_numerics_1 = df_features_numerics[1:8]\ndf_features_numerics_2 = df_features_numerics[8:]\nprint(df_features_numerics_1)\nprint(df_features_numerics_2)","069d8033":"k = 0\nfig,ax = plt.subplots(ncols = len(df_features_numerics_1), figsize = (25,8))\nfor i in df_features_numerics_1:\n    sns.boxplot(x = \"Attrition_Flag\", y = df_features_numerics_1[k], data = df,  ax = ax[k])\n    k = k+1","46acc08a":"k = 0\nfig,ax = plt.subplots(ncols = len(df_features_numerics_2), figsize = (30,10))\nfor i in df_features_numerics_2:\n    sns.boxplot(x = \"Attrition_Flag\", y = df_features_numerics_2[k], data = df,  ax = ax[k])\n    k = k+1","d6bdd98e":"df_features_objects = []\nk = 0\nfor i in df_features:\n    if df[df_features[k]].dtypes == \"object\":\n        df_features_objects.append(df_features[k])\n    k = k+1\nprint(df_features_objects)","42be5787":"k = 0\nfig,ax=plt.subplots(ncols=6,figsize=(20,5))\nfor i in df_features_objects:\n    sns.countplot(x=\"Attrition_Flag\", hue = df_features_objects[k], data=df,  ax = ax[k])\n    k = k+1","d996ca9f":"rcParams['figure.figsize'] = 16,6.0\nsns.heatmap(df.corr(), vmin = -1, vmax = 1, annot = True);","40d62bc8":"df.info()","c5357f7a":"df_features_objects","f2f663c5":"df.Attrition_Flag = pd.Categorical(df.Attrition_Flag)  \ndf.Gender = pd.Categorical(df.Gender)  \ndf.Education_Level = pd.Categorical(df.Education_Level)  \ndf.Marital_Status = pd.Categorical(df.Marital_Status)  \ndf.Income_Category = pd.Categorical(df.Income_Category)  \ndf.Card_Category = pd.Categorical(df.Card_Category)  ","fc34bbd4":"df.info()","4a7fe070":"df_X = df.drop(columns = [\"Attrition_Flag\", \"CLIENTNUM\", \"Avg_Utilization_Ratio\", \"Months_on_book\"], axis = 1)\ndf_X","4b10ab4f":"df_Y = df.Attrition_Flag\ndf_Y","568e8f10":"df_X = pd.get_dummies(df_X, drop_first = True)\ndf_X","18c65298":"df_X.info()","fd8d3ad0":"df_Y = pd.get_dummies(df_Y, drop_first = True)\ndf_Y","8cd627b1":"from sklearn.model_selection import train_test_split\ndf_X_train, df_X_test, df_Y_train, df_Y_test = train_test_split(df_X , df_Y, test_size = 0.40)","f0c37af5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom lightgbm import LGBMClassifier\n\nlog_model = LogisticRegression().fit(df_X_train, df_Y_train)\nknn_model = KNeighborsClassifier().fit(df_X_train, df_Y_train)\nrf_model = RandomForestClassifier().fit(df_X_train, df_Y_train)\nlgbm_model = LGBMClassifier().fit(df_X_train, df_Y_train)\n","52c3e27d":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nlog_model_score = accuracy_score(df_Y_test, log_model.predict(df_X_test)) \nknn_model_score = accuracy_score(df_Y_test, knn_model.predict(df_X_test)) \nrf_model_score = accuracy_score(df_Y_test, rf_model.predict(df_X_test)) \nlgbm_model_score = accuracy_score(df_Y_test, lgbm_model.predict(df_X_test)) \n\nprint(\"Logistic regression accuracy score is: \" , log_model_score)\nprint(\"KNN accuracy score is: \" , knn_model_score)\nprint(\"Random forest accuracy score is: \" , rf_model_score)\nprint(\"LGBM accuracy score is: \" , lgbm_model_score)","41a26268":"print(classification_report(df_Y_test, log_model.predict(df_X_test)))\nprint(classification_report(df_Y_test, knn_model.predict(df_X_test)))\nprint(classification_report(df_Y_test, rf_model.predict(df_X_test)))\nprint(classification_report(df_Y_test, lgbm_model.predict(df_X_test)))","d11678e4":"lgbm_grid = {\"n_estimators\": [50, 100, 500, 1000, 2000],\n        'learning_rate': [0.5,0.1,0.01,0.02,0.05]}","d18f76c2":"from lightgbm import LGBMRegressor\nfrom sklearn.model_selection import GridSearchCV\nlgbm = LGBMRegressor()\nlgbm_cv_model = GridSearchCV(lgbm, lgbm_grid, cv=10, n_jobs = -1, verbose = 2)\nlgbm_cv_model.fit(df_X_train, df_Y_train)","315b8ef5":"lgbm_cv_model.best_params_","71308811":"lgbm_tuned = LGBMRegressor(learning_rate = 0.02, n_estimators = 1000).fit(df_X_train, df_Y_train)","8ad572d3":"y_pred = lgbm_tuned.predict(df_X_test)","53c3e9d4":"accuracy_score(df_Y_test, y_pred.round())","3ffcf695":"print(classification_report(df_Y_test, y_pred.round()))","862a5884":"Importance = pd.DataFrame({\"Importance\": lgbm_tuned.feature_importances_*100},\n                         index = df_X_train.columns)","73841e0c":"Importance.sort_values(by = \"Importance\", \n                       axis = 0, \n                       ascending = True).plot(kind =\"barh\", color = \"r\")\n\nplt.xlabel(\"Feature Importance Levels\")","0494756f":"Months_on_book and Avg_Utilization_Ratio will not be taken into account for modelling ","7391b80c":"Attrited Customer is represented by \"0\".\nThere is no significant change in Recall of \"0\" after hyperparameter tuning. ","895ff460":"# 2.1. Missing Value Analysis","a24fddca":"Existing Customer --> 1\n\nAttrited Customer --> 0 ","5bdd96ef":"Missing values are observed less than 15% of the category that they belong. ","d3520636":"# 1. Library and Data Loading","19dc380b":"The amount of existing customers are approximately eight times higher than attrited ones.\nThe distribution of categorical variables look similar in existing and attrited customers.\nGraduates, married customers, customers with less than $40K and blue card categories dominate the dataset.","64a5691f":"# 2.3. Correlation","063cc149":"# 2.4. Data Preparation","88fad50f":"# 2. Descriptive Data Analysis","9800605e":"The most important features are Total_Trans_Amt and Total_Trans_Ct. It seems numerical variables affect customer churns more than categorical ones. ","47204b31":"Logistic Regression, KNN, Random Forest and Light GBM are applied. Tree based models have better accuracy score. LGBM is the best.","f22d80c3":"Unknown observations are assigned as missing values. ","02134ae9":"According to the given information by data owner, last two columns are deleted.","1acc10a6":"There are some observations called \"Unknown\" in the dataset. They need to be detected and processed for further activities.","45e0aeae":"The type of objects are transformed to category for modelling.\nFeatures and labels are seperated as df_X and df_Y. \nClientnum has no effect and Avg_Utilization_Ratio, Months_on_book features are correlated with others. So they are out of the modelling. Attrition Flag is the target variable. ","20a8a7e9":"There are both categorical and numerical variables in the dataset. ","c17b495b":"# 3. Machine Learning","3c3bcba8":"**The variables below are highly correlated to each other:**\n\nTotal_Revolving_Bal and Avg_Utilization_Ratio\n\nMonths_on_book and Customer_Age\n\nCredit_Limit and Avg_Utilization_Ratio\n\nAvg_Open_To_Buy and Avg_Utilization_Ratio ","abd2ce12":"**Model Tuning**","577f75ef":"LGBM showed the best performance in terms of accuracy and recall score. So it will be tuned to make this result better. ","5d639a6a":"There are no correlations between missing values which means they are distributed randomly. Therefore they can be removed or mode values of each features can be assigned to them.","102d30f1":"Education Level, Marital Status and Income Category have Unknown values. They will be assigned as missing values.","864203de":"**Feature Importance** ","e4f176e9":"One hot encoding is applied to the features. We will try to predict the Attrited Customers which is \"0\" in target variable. ","76d17913":"# 2.2. Data Visualization","5aaeb8c0":"Mode values are assigned, now there are not any missing values in dataset.","9a0c08da":"The effects of \"Age\", \"Months_on_book\" and \"Avg_Open_To_Buy\" variables on \"Attrition_Flag\" seem not so strong. ","db67cc2c":"# Predict Churning Customers\n**Kaan Akkartal**\n","58400351":"Variables are visualized with detail of the target variable \"Attrition Flag\". \nNumerical and categorical features are listed seperately for better investigation.\nNumerical variables are divided into two groups in order to make some clear boxplots."}}