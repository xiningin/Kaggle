{"cell_type":{"55388c01":"code","821bde3c":"code","94afe59d":"code","1a301e0c":"code","0ca2c0bd":"code","83bf1c20":"code","adf49449":"code","8cfaeace":"code","2d67cce9":"code","18dc5b1f":"code","d29066f2":"code","821047ea":"markdown","4ae0d379":"markdown","5ce6141f":"markdown","ef22454f":"markdown","7cfdd1b4":"markdown","5968cb0c":"markdown"},"source":{"55388c01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","821bde3c":"df=pd.read_csv('\/kaggle\/input\/air-bnb-ny-2019\/AB_NYC_2019.csv')\ndf","94afe59d":"df1=df[['room_type','price']]\ndf1","1a301e0c":"dj=df1.loc[df1['room_type'] == 'Entire home\/apt']\ndj","0ca2c0bd":"import seaborn as sns\nx=dj['price']\nsns.distplot(x,bins=30,kde=False)","83bf1c20":"dj.describe()","adf49449":"dj['price'].quantile(0.95)\n#THE OUTPUT IS THE THRESHOLD VALUE, WHICH MEANS 95% OF ALL THE PRICES ARE BELOW 450$","8cfaeace":"max_threshold=dj['price'].quantile(0.95)\n#Similarly we will define minimum threshold value\nmin_threshold=dj['price'].quantile(0.05)\nmin_threshold\n#THE OUTPUT IS THE MINIMUM THRESHOLD VALUE, WHICH MEANS 5% OF ALL THE PRICES ARE BELOW 78$","2d67cce9":"dj[(dj['price']<max_threshold)&(dj['price']>min_threshold)]","18dc5b1f":"dj[(dj['price']>max_threshold)|(dj['price']<min_threshold)]","d29066f2":"#so there are 2495 outliers in the dataset as per the percentile we have defined","821047ea":"# Outlier are unusual datapoints which are different from the rest","4ae0d379":"# Now we will use percentile feature of pandas dataframe","5ce6141f":"# now we will se the price distribution for entire home","ef22454f":"# Now we will see the data with outliers","7cfdd1b4":"# Now we will see the data without outliers","5968cb0c":"# Here i am interested in room type and price for detecting the outliers"}}