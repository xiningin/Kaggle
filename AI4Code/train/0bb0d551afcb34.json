{"cell_type":{"f49d40d6":"code","6d58d928":"code","f328b952":"code","439ea028":"code","8251f1c6":"code","8daa0831":"code","5207f306":"code","664e0114":"code","f69bea8d":"code","929af73d":"code","704c1858":"code","4ff5f894":"code","d99aadab":"markdown","19c6a844":"markdown","10c4655d":"markdown","89b2e2b3":"markdown","85d7de4e":"markdown","28e929a9":"markdown","948c9cfd":"markdown","b5381f76":"markdown","7973b878":"markdown","5b943ffb":"markdown","a5153d2c":"markdown"},"source":{"f49d40d6":"import pandas as pd\n\n#reading the data into a DataFrame\nhome_data = pd.read_csv('..\/input\/home-data-for-ml-course\/train.csv')","6d58d928":"#setting the display to show all rows and columns stat\npd.set_option('display.max_rows',None,'display.max_columns',None)\n\n#displaying descriptive stats\nhome_data.describe(include='all')","f328b952":"home_data.head()","439ea028":"#selecting prediction target\ny = home_data.SalePrice\n\n#selecting input features\nfeature_columns = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = home_data[feature_columns]","8251f1c6":"from sklearn.model_selection import train_test_split\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, train_size=0.8, test_size=0.2, random_state=1)","8daa0831":"from sklearn.tree import DecisionTreeRegressor\n\niowa_model = DecisionTreeRegressor(random_state=1)\n\niowa_model.fit(train_X, train_y)","5207f306":"from sklearn.metrics import mean_absolute_error\n\nval_predictions = iowa_model.predict(val_X)\n\nval_mae = mean_absolute_error(val_predictions, val_y)\n\nprint(\"Validation MAE when not specifying max_leaf_nodes: {:,.0f}\".format(val_mae))","664e0114":"def get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state=0)\n    model.fit(train_X, train_y)\n    preds_val = model.predict(val_X)\n    mae = mean_absolute_error(val_y, preds_val)\n    return(mae)","f69bea8d":"candidate_max_leaf_nodes = [5*n for n in range(1,100)]\n\nmaes=[]\nfor max_leaf_nodes in candidate_max_leaf_nodes:\n    mae= get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y)\n    maes.append(mae)\n    if mae == min(maes):\n        best_tree_size=max_leaf_nodes","929af73d":"best_iowa_model = DecisionTreeRegressor(max_leaf_nodes=best_tree_size, random_state=1)\nbest_iowa_model.fit(train_X, train_y)\nval_predictions = best_iowa_model.predict(val_X)\nval_mae = mean_absolute_error(val_predictions, val_y)\nprint(\"Validation MAE for best value of max_leaf_nodes: {:,.0f}\".format(val_mae))","704c1858":"test_data_path = '..\/input\/home-data-for-ml-course\/test.csv'\n\ntest_data = pd.read_csv(test_data_path)\n\nfeatures=['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\ntest_X = test_data[features]\n \ntest_preds = best_iowa_model.predict(test_X)","4ff5f894":"output = pd.DataFrame({'Id': test_data.Id,\n                       'SalePrice': test_preds})\noutput.to_csv('decision_tree_output.csv', index=False)","d99aadab":"### 2. Describing the Data","19c6a844":"### 4. Train-Test Split","10c4655d":"### 11. Create a submission file","89b2e2b3":"### 6. Make validation predictions and calculate mean absolute error","85d7de4e":"### 10. Make Predictions for Test Data","28e929a9":"### 9. Define a model with best tree size","948c9cfd":"### 3. Selecting Features","b5381f76":"### 5. Defining and fitting the Model","7973b878":"### 7. Define a function to get the Mean Absolute Error(MAE)","5b943ffb":"### 8. Write loop to find the ideal tree size (max_leaf_nodes)","a5153d2c":"### 1. Importing the Data File"}}