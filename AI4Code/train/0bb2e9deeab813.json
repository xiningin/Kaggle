{"cell_type":{"d6b662ce":"code","91b0ae6e":"code","902b1edd":"code","05be3c3f":"code","51dec383":"code","6e592908":"code","20a16487":"code","c671e381":"code","debe3751":"code","706e61aa":"code","f5a8be3d":"code","e7920590":"code","db66fbd9":"code","6c0f7a4d":"code","125dfbf6":"code","794a1626":"code","74dde044":"code","9c23f626":"code","47d60f5d":"code","f60e5285":"code","0ec0a235":"code","2935fa7b":"code","5330acc1":"code","1698b827":"code","77e8e414":"code","60da5d98":"code","d30acaf2":"code","fe2ba276":"code","255b9799":"code","4177061e":"code","020ea983":"code","97009d2c":"code","83efab57":"code","54bb02ff":"code","706b63c6":"code","4974a574":"code","256b03bc":"code","91eb7fd7":"code","8b4bf0e9":"code","5129686f":"code","36849568":"code","4763d6aa":"code","11ec5628":"code","a200f885":"code","8a7d0a42":"code","ef78a3db":"code","89f4f54e":"code","eae6bcd2":"code","17fd95e3":"code","f0c1385f":"code","2560ee66":"code","7ac78390":"code","e346656a":"code","b2d0ea32":"code","a826a2f0":"code","316d6b5e":"code","29587986":"code","a43b1e6e":"code","1274e7dc":"code","8d50892d":"code","61ba99ff":"code","052a45be":"code","ea2d5954":"markdown","d10d9766":"markdown","d90126a0":"markdown","b2896737":"markdown","b993f0ca":"markdown","acc45bbe":"markdown","f793085b":"markdown","b350090c":"markdown","342fb431":"markdown","67d636b8":"markdown","7ebce73c":"markdown","eeb6c6f3":"markdown","9bd660d5":"markdown","14e943d1":"markdown","d3a5ddbb":"markdown","938d5a38":"markdown","81652d78":"markdown","5bd81628":"markdown","9ecd709f":"markdown","69045c35":"markdown","1c8a1261":"markdown","7ca831e1":"markdown","33b1fb5b":"markdown","510c2beb":"markdown","112a8609":"markdown"},"source":{"d6b662ce":"import numpy as np\nimport pandas as pd\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","91b0ae6e":"train","902b1edd":"test","05be3c3f":"sub","51dec383":"train['source'] = 'train'\ntest['source'] = 'test'\ndata = pd.concat([train, test], ignore_index=True)\ndata","6e592908":"data.isnull().sum()","20a16487":"data.drop(['Name','Ticket'], axis=1, inplace=True)","c671e381":"data.isnull().sum()","debe3751":"data['Age'].isnull().sum()","706e61aa":"data['Age'].describe()","f5a8be3d":"data['Age'].mode()","e7920590":"data['Age'].replace(np.nan, data['Age'].mode()[0], inplace=True)","db66fbd9":"data.loc[data.Age < 1, \"Age\"] = data.Age * 100\ndata['Age'].astype(int)","6c0f7a4d":"data['Age'].isnull().sum()","125dfbf6":"data['Embarked'].isnull().sum()","794a1626":"data['Embarked'].describe()","74dde044":"data['Embarked'].mode()","9c23f626":"data['Embarked'].replace(np.nan,data['Embarked'].mode()[0], inplace=True)","47d60f5d":"data['Embarked'].isnull().sum()","f60e5285":"data['Fare'].isnull().sum()","0ec0a235":"data['Fare'].describe()","2935fa7b":"data['Fare'].mean()","5330acc1":"data['Fare'].fillna(data['Fare'].mean(), inplace=True)","1698b827":"data['Fare'].isnull().sum()","77e8e414":"!pip install ptitprince","60da5d98":"from ptitprince import RainCloud","d30acaf2":"import matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10, 10))\nRainCloud(data=data, y='Fare', orient='h')\nax.grid()","fe2ba276":"# log scale\ndata['Fare'] = data['Fare'].map(lambda i: np.log(i) if i > 0 else 0)\n\nfig, ax = plt.subplots(figsize=(10, 10))\nRainCloud(data=data, y='Fare', orient='h')\nax.grid()","255b9799":"data['Fare'].describe()","4177061e":"data['Cabin'].isnull().sum()","020ea983":"data['Cabin'].describe()","97009d2c":"data['Cabin'].mode()","83efab57":"data['Cabin'].replace(np.nan, data['Cabin'].mode()[0], inplace=True)","54bb02ff":"data","706b63c6":"data.isnull().sum()","4974a574":"data[\"Cabin\"]","256b03bc":"data['Cabin'] = data['Cabin'].apply(lambda x: x[0:1])\ndata['Cabin'].value_counts()","91eb7fd7":"import seaborn as sns\n\nsns.countplot(x='Cabin',hue='Survived',data=data)\nplt.show()","8b4bf0e9":"data['family_size'] = data['SibSp']+data['Parch']+1","5129686f":"data","36849568":"train_modified = data.loc[data['source']=='train']\ntest_modified = data.loc[data['source']=='test']","4763d6aa":"train_modified.head()","11ec5628":"test_modified.head()","a200f885":"train_modified.drop('source',axis=1,inplace=True)\ntest_modified.drop(['source','Survived'],axis=1,inplace=True)","8a7d0a42":"!pip install pycaret","ef78a3db":"from pycaret.classification import *","89f4f54e":"clf1 = setup(data = train_modified,\n             target = 'Survived',\n             numeric_features=['SibSp', 'Parch', 'family_size'],\n             categorical_features=['Pclass'],\n             silent = True)","eae6bcd2":"compare_models()","17fd95e3":"lgbm = create_model('lightgbm')","f0c1385f":"tuned_lightgbm = tune_model(lgbm)","2560ee66":"plot_model(estimator = tuned_lightgbm, plot = 'learning')","7ac78390":"plot_model(estimator = tuned_lightgbm, plot = 'auc')","e346656a":"plot_model(estimator = tuned_lightgbm, plot = 'confusion_matrix')","b2d0ea32":"plot_model(estimator=tuned_lightgbm, plot='feature')","a826a2f0":"evaluate_model(tuned_lightgbm)","316d6b5e":"interpret_model(tuned_lightgbm)","29587986":"predictions = predict_model(tuned_lightgbm, data=test_modified)\npredictions.head()","a43b1e6e":"sub['Survived'] = list(map(int, predictions['Label'].astype(float)))\nsub.to_csv('tuned_lightgbm.csv', index=False)","1274e7dc":"xgboost  = create_model('xgboost')\ncatboost  = create_model('catboost')","8d50892d":"blend = blend_models(estimator_list=[tuned_lightgbm, xgboost, catboost])","61ba99ff":"predictions = predict_model(blend, data=test_modified)\npredictions.head()","052a45be":"sub['Survived'] = list(map(int, predictions['Label'].astype(float)))\nsub.to_csv('blend.csv', index=False)","ea2d5954":"You can see that the influence of fare and age is very high.\n\nBelow you can see various other results as well.","d10d9766":"## Cabin","d90126a0":"Let's actually make a prediction.","b2896737":"First of all, let's check the data.","b993f0ca":"### Check the distribution by RainCloud","acc45bbe":"In this notebook, I will use pycaret.  \n[PyCaret](https:\/\/pycaret.org\/) is an open source, low-code machine learning library in Python that allows you to go from preparing your data to deploying your model within minutes in your choice of notebook environment.\n\n[This kaggle notebook](https:\/\/www.kaggle.com\/frtgnn\/pycaret-introduction-classification-regression) would be helpful.  ","f793085b":"# Ensemble","b350090c":"Let's get back to compare_models() cell and check it.  \nFollowing lightgbm, catboost and gbc are ranked high.  \nSo we'll use tuned_lightgbm, catboost and gbc.","342fb431":"## Family size (SibSp+Parch)","67d636b8":"## Feature engineering","7ebce73c":"# Compare models","eeb6c6f3":"As well as tuned_lightgbm, check the result of this blend model.","9bd660d5":"## Fare","14e943d1":"## Cabin","d3a5ddbb":"The type of survival is object so you should change this to int.","938d5a38":"# Preprocess and Feature Engineering by PyCaret","81652d78":"## Age","5bd81628":"# Hyperparameter tuning","9ecd709f":"# Load data","69045c35":"## Embarked","1c8a1261":"Algorithms are arranged in descending order of \"Accuracy\".  \nNow, use **lightGBM**, which is relatively rapid, accurate and popular in kaggle\n\nNext, create a model with lightGBM.","7ca831e1":"Let's plot some of the results.","33b1fb5b":"# Missing Values","510c2beb":"# Reference\n- https:\/\/www.kaggle.com\/ranjeetshrivastav\/tabular-playground-series-apr-2021","112a8609":"Feature Importance is below."}}