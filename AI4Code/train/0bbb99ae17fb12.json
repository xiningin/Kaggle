{"cell_type":{"08fa61a6":"code","ca4f9463":"code","53d9185d":"code","bcd8317f":"code","ce676848":"code","302bb039":"code","7043db53":"code","2d64756e":"code","1b451392":"code","50bb064f":"code","7c6818d6":"code","e9af2767":"code","c494dbc7":"code","600e0ad5":"code","d3c72fb3":"code","d8c299f5":"code","e7575529":"code","ce9d8b42":"code","6fa6110d":"code","176a3968":"code","27e2ee7e":"code","945a4667":"code","cfe9b886":"code","035f7f55":"code","407f207c":"code","fafb321c":"code","1febce67":"code","e8025797":"code","850eb5e7":"code","d319ec2e":"code","fe44aad3":"markdown","c1ae241c":"markdown","98f16c06":"markdown","97d7df7e":"markdown","28d6b264":"markdown","da3d15c3":"markdown","4b0c708e":"markdown","b219424e":"markdown","ec7a7242":"markdown","de698bb6":"markdown","b6d377a8":"markdown","6187bcb5":"markdown","5b60c089":"markdown","963efb06":"markdown","3f972b54":"markdown"},"source":{"08fa61a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport sklearn as sk\nimport matplotlib\nfrom matplotlib import pyplot as plt\n\nget_ipython().run_line_magic('matplotlib', 'inline')\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.base import BaseEstimator, TransformerMixin\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import Lasso\nfrom sklearn.svm import LinearSVR\nfrom sklearn.ensemble import AdaBoostRegressor\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca4f9463":"df_out=pd.read_csv('\/kaggle\/input\/ftse-mib-stocks\/FTSE_MIB_Main_Stocks.csv')","53d9185d":"class Upd_Data(BaseEstimator, TransformerMixin):\n    def __init__ (self, add_Adj_Close=True):\n        self.add_Adj_Close=add_Adj_Close\n       \n    def fit(self,X,y=None):\n        return self\n    def transform(self,X,y=None):\n        \n        if(self.add_Adj_Close):\n            return np.array(X.drop(['Year','Shares'],axis=1))\n        else:\n            return np.array(X)","bcd8317f":"res_dict=dict()","ce676848":"df_out.info()","302bb039":"df=df_out.drop(['Awards_issued','Investment_Profits','Other_revenues','Profit_for_the_year','Total_Loans','Interest_margin','Brokerage_margin','Management:result','Total_assets'],axis=1)\ndf=df.dropna()","7043db53":"df.info()","2d64756e":"num_p=Pipeline([('attr_add',Upd_Data(add_Adj_Close=True)),('std_scaler',StandardScaler())],)","1b451392":"df_tf=pd.DataFrame(num_p.fit_transform(df),columns=df.columns[0:14].append(pd.Index(['Incr_prc'])))","50bb064f":"X=np.array(df_tf.drop(['Ann.Increase\\[%\\]'],axis=1))\ny=np.array(df_tf['Ann.Increase\\[%\\]'])","7c6818d6":"X_tr, X_val, y_tr, y_val = train_test_split(X, y, test_size=0.2, random_state=42)","e9af2767":"plt.plot(y)\n\n\nplt.axhline(y.mean(), color='g')\nplt.axhline(np.percentile(y, 75), color='#d62728')\nplt.grid()\n","c494dbc7":"lin_reg=LinearRegression()\nscores=cross_val_score(lin_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_lin_reg=np.sqrt(-scores)\nprint(rmse_lin_reg)\nres_dict['Lin_Reg']=rmse_lin_reg.mean()","600e0ad5":"f_reg=RandomForestRegressor(n_estimators=30)","d3c72fb3":"param_grid=[{'n_estimators':[30,40,50],},]\ngrid_search=GridSearchCV(f_reg,param_grid,cv=5,scoring='neg_mean_squared_error',return_train_score=True)\ngrid_search.fit(X_tr,y_tr)\nprint(grid_search.best_estimator_)","d8c299f5":"scores=cross_val_score(f_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_for_reg=np.sqrt(-scores)\nprint(rmse_for_reg)\nres_dict['Rand_For_Reg']=rmse_for_reg.mean()","e7575529":"eln_reg=ElasticNet()","ce9d8b42":"param_grid=[{'alpha':[0.1,0.2,0.5,1],'l1_ratio':[0.01,0.1,0.5,1],'max_iter':[2000000000],},]\ngrid_search=GridSearchCV(eln_reg,param_grid,cv=5,scoring='neg_mean_squared_error',return_train_score=True)\ngrid_search.fit(X_tr,y_tr)\ngrid_search.best_estimator_","6fa6110d":"eln_reg=ElasticNet(alpha=0.1, max_iter=2000000000)","176a3968":"scores=cross_val_score(eln_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_eln_reg=np.sqrt(-scores)\nres_dict['El_Net_Reg']=rmse_eln_reg.mean()","27e2ee7e":"lasso_reg=Lasso(alpha=0.1,fit_intercept=False, tol=0.00000000000001,\n          max_iter=2000000000, positive=True)\nscores=cross_val_score(lasso_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_lasso_reg=np.sqrt(-scores)\nres_dict['Lasso_Reg']=rmse_lasso_reg.mean()","945a4667":"svm_reg=LinearSVR()","cfe9b886":"param_grid=[{'epsilon':[0.01,0.05,0.1],'max_iter':[2000000000],},]\ngrid_search=GridSearchCV(svm_reg,param_grid,cv=5,scoring='neg_mean_squared_error',return_train_score=True)\ngrid_search.fit(X_tr,y_tr)\ngrid_search.best_estimator_","035f7f55":"svm_reg=LinearSVR(epsilon=0.1, max_iter=2000000000)","407f207c":"scores=cross_val_score(svm_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_svm_reg=np.sqrt(-scores)\nres_dict['SVM_Reg']=rmse_svm_reg.mean()","fafb321c":"ada_reg=AdaBoostRegressor(base_estimator=ElasticNet(alpha=0.1, max_iter=2000000000))","1febce67":"param_grid=[{'n_estimators':[100,110,120],'learning_rate':[1],},]\ngrid_search=GridSearchCV(ada_reg,param_grid,cv=5,scoring='neg_mean_squared_error',return_train_score=True)\ngrid_search.fit(X_tr,y_tr)\ngrid_search.best_estimator_","e8025797":"ada_eln_reg=AdaBoostRegressor(base_estimator=ElasticNet(alpha=0.1, max_iter=2000000000),\n                  learning_rate=1, n_estimators=120)","850eb5e7":"scores=cross_val_score(ada_eln_reg,X_tr,y_tr,scoring='neg_mean_squared_error',cv=10)\nrmse_ada_eln_reg=np.sqrt(-scores)\nres_dict['ADA_ELN_Reg']=rmse_ada_eln_reg.mean()","d319ec2e":"print(res_dict)","fe44aad3":"## ADA Fine Tune","c1ae241c":"# <center>FTSE MIB Shares values: Annual % Increment Prediction <\/center>\n\n#### <center> 9 August 2020 <\/center> \n#####  <center> A.P. <\/center> \n\n\n\n# Introduction \nLet's try to predict the Annual % Increment Prediction of a share basing on a dataset with main budgetary data  of the most relevant Italian stock market index, related to years 2017, 2018 and 2019.\nAn evaluation of different regression Machine Learning algorithm has been done to find the best (minimum rmse).\n","98f16c06":"# ElasticNet Regression","97d7df7e":"# Linear Regression","28d6b264":"The Best results is the one obtained with  Random Forest Regression","da3d15c3":"# Explore Dataset","4b0c708e":"## Random Forest Fine Tune","b219424e":"# SVM Regression","ec7a7242":"## Explore y feature","de698bb6":"# Test Results","b6d377a8":"# ADA Boost Regressor with Elasticnet","6187bcb5":"## ElasticNet Fine Tune","5b60c089":"# Random Forest","963efb06":"## SVM Fine Tune","3f972b54":"# Lasso Regression"}}