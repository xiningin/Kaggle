{"cell_type":{"9e47d948":"code","d62617fc":"code","726f5521":"code","52efb890":"code","ac3cacae":"code","e4073f83":"code","d5006893":"code","a2ae1b0e":"code","7463095e":"code","745f344b":"code","8307336b":"code","b2091092":"code","972e40c9":"code","3475cffd":"code","505b2f30":"markdown","b9e386a9":"markdown","bdd3d566":"markdown","057f1bdd":"markdown","5f1988be":"markdown"},"source":{"9e47d948":"#importing all of the neccesary libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom statsmodels.tsa.arima_model import ARIMA\nimport pandas_datareader\nimport datetime\n\nimport pandas_datareader.data as web","d62617fc":"#creating a start and an end dates:\nstart = datetime.datetime(2016,1,1)\nend = datetime.datetime.today()","726f5521":"#Alibaba\nalibaba = web.DataReader('BABA', 'yahoo', start, end)\nalibaba.head()","52efb890":"\nalibaba['Open'].plot(label = 'Alibaba')\nplt.legend(loc = 'best');","ac3cacae":"\nalibaba['Volume'].plot(label = 'Alibaba')\nplt.legend();","e4073f83":"\nalibaba['Total Traded'] = alibaba['Open']*alibaba['Volume']\nalibaba['Total Traded'].plot(figsize = (16,8), label = 'Alibaba')\nplt.legend(loc = 'best');","d5006893":"\nalibaba['Avg'] = alibaba[['High', 'Low']].mean(axis=1)\nalibaba['Total Traded New'] = alibaba['Avg']*alibaba['Volume']\nalibaba['Total Traded New'].plot(figsize = (16,8), label = 'Alibaba')\nplt.legend(loc = 'best');","a2ae1b0e":"\n\nalibaba['MA50'] = alibaba['Open'].rolling(50).mean()\nalibaba['MA200'] = alibaba['Open'].rolling(200).mean()","7463095e":"alibaba['Returns'] = alibaba['Close'].pct_change(1)","745f344b":"alibaba['Returns'].hist(bins = 50);","8307336b":"\nalibaba['Returns'].hist(bins = 100, figsize=(16,8), label = 'Alibaba', alpha=0.4)\nplt.legend();","b2091092":"\nalibaba['Returns'].plot(kind='kde', label = 'Alibaba', figsize=(10,8))\nplt.legend();","972e40c9":"box_df = pd.concat([ alibaba['Returns']], axis = 1)\nbox_df.columns = [ 'Alibaba Ret']\nbox_df.plot(kind='box', figsize = (8,10));","3475cffd":"model = ARIMA(alibaba['Total Traded New'], order=(2,0,0)).fit()\ny2 = model.predict(100)\n\ny2.plot()","505b2f30":"### **Moving Average**","b9e386a9":"***\u0412\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0434\u0430\u043d\u0438\u0445 \u043f\u0440\u043e \u0444\u043e\u043d\u0434\u043e\u0432\u0438\u0439 \u0440\u0438\u043d\u043e\u043a***","bdd3d566":"References to:\n1. [vbmokin](http:\/\/www.kaggle.com\/vbmokin)\n2. https:\/\/www.kaggle.com\/thebrownviking20\/everything-you-can-do-with-a-time-series\n3. https:\/\/towardsdatascience.com\/an-end-to-end-project-on-time-series-analysis-and-forecasting-with-python-4835e6bf050b\n4. https:\/\/habr.com\/ru\/post\/436294\/\n5. https:\/\/www.kaggle.com\/yurazdit\/time-series-v1\/notebook","057f1bdd":"# Boxplots on the returns","5f1988be":"# \u0410\u043d\u0430\u043b\u0456\u0437 \u0434\u0430\u043d\u0438\u0445 \u0447\u0430\u0441\u043e\u0432\u0438\u0445 \u0440\u044f\u0434\u0456\u0432"}}