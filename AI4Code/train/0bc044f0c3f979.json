{"cell_type":{"82e28d41":"code","f0f2fd66":"code","677fa764":"code","ce69cee3":"code","56a5052f":"code","b86eb5c2":"code","051a72e0":"code","f9b7a10e":"code","90877942":"code","23ed13f7":"code","b1c8bf47":"code","26ed5b02":"code","449c7d75":"code","6eaf88f6":"code","6281f272":"code","49f70f51":"code","d1eb7bbf":"code","4178209a":"code","3bab247f":"code","03c06cc6":"code","a9ba881b":"code","c94a966e":"code","a37cfb7e":"code","ce12ec7d":"code","1d878d21":"code","0a08fc60":"code","f5d13359":"code","8f9f24a4":"code","4ea53a90":"code","1a2ae486":"code","a48e6e12":"code","a49d3a44":"code","faca3628":"code","bc8e209f":"code","3ac20f93":"code","2f68e975":"code","67e2532d":"code","aadd2d53":"code","65b8c914":"code","5ca345dc":"code","81a95650":"markdown","dfb54fe8":"markdown","82e7fafc":"markdown","b4c2f982":"markdown","b431d0ed":"markdown","41bf6541":"markdown","a903a81e":"markdown","44b85ea3":"markdown","e559333a":"markdown","1cb183ce":"markdown","65d9607c":"markdown","9fdf532a":"markdown","afb2f778":"markdown","0f2c96c7":"markdown","241421f7":"markdown","70c29f4d":"markdown","47bbf669":"markdown"},"source":{"82e28d41":"#pandas\nimport pandas as pd\n\n#numpy\nimport numpy as np\n\n#matplotlib\nimport matplotlib.pyplot as plt\n\n#seaborn\nimport seaborn as sns\n\n#sklearn\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report,f1_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nimport pickle\nimport warnings\nwarnings.filterwarnings('ignore')","f0f2fd66":"thyroid_df = pd.read_csv('..\/input\/thyroid-disease-data-set\/hypothyroid.csv')\nthyroid_df.head()","677fa764":"thyroid_df.rename(columns={'binaryClass':'Label'},inplace=True)","ce69cee3":"thyroid_df.replace('?',np.nan,inplace=True)","56a5052f":"thyroid_df.drop(['T3 measured','TSH measured','TT4 measured','T4U measured','FTI measured','TBG measured','TBG','referral source','on thyroxine','query on thyroxine','on antithyroid medication','query hypothyroid', 'query hyperthyroid','hypopituitary', 'psych'],axis=1,inplace=True)","b86eb5c2":"thyroid_df.info()","051a72e0":"thyroid_df['thyroid surgery'].value_counts()","f9b7a10e":"cols = ['age','FTI','TSH','T3','TT4','T4U']\nfor i in cols:\n    thyroid_df[i] = pd.to_numeric(thyroid_df[i])","90877942":"thyroid_df.info()","23ed13f7":"thyroid_df.isnull().sum()","b1c8bf47":"miss_cols = ['FTI','TSH','T3','TT4','T4U']\nfor i in miss_cols:\n    thyroid_df[i] = thyroid_df[i].fillna(thyroid_df[i].mean())","26ed5b02":"thyroid_df.dropna(inplace=True)","449c7d75":"thyroid_df.isnull().sum()","6eaf88f6":"thyroid_df = thyroid_df.drop(1364)","6281f272":"thyroid_df.TT4 = thyroid_df.TT4.astype(int)\nthyroid_df.FTI = thyroid_df.FTI.astype(int)\nthyroid_df.age = thyroid_df.age.astype(int)","49f70f51":"sns.countplot(x='Label',data=thyroid_df)\nplt.title(\"Countplot for Target variable\");","d1eb7bbf":"positive_df = thyroid_df[thyroid_df.Label=='P']","4178209a":"plt.figure(figsize=(9,6))\nsns.histplot(x='age',data=positive_df,color='blue')\nplt.title(\"Distribution of Positive Class Based on Age\",{'fontsize':20});","3bab247f":"plt.figure(figsize=(10,8))\nplt.pie(x=positive_df.sex.value_counts(),\n        labels=['Female','Male'],\n        startangle = 90,\n        colors=['springgreen','orange'],\n        autopct='%.2f'\n       );\nplt.legend();","03c06cc6":"plt.figure(figsize=(8,8))\nplt.pie(x=positive_df.sick.value_counts(),\n        labels=['Sick','Well'],\n        startangle = 20,\n        colors=['deepskyblue','red'],\n        autopct='%.2f',\n        explode=[0,0.2]\n       );\nplt.legend();","a9ba881b":"X = thyroid_df.drop('Label',axis=1)\ny = thyroid_df.Label","c94a966e":"s_encoder = LabelEncoder()\nsi_encoder = LabelEncoder()\npreg_encoder = LabelEncoder()\nth_encoder = LabelEncoder()\ntreat_encoder = LabelEncoder()\nlith_encoder = LabelEncoder()\ng_encoder= LabelEncoder()\ntu_encoder = LabelEncoder()","a37cfb7e":"X['sex'] = s_encoder.fit_transform(X.sex)\nX['I131 treatment'] = treat_encoder.fit_transform(X['I131 treatment'])\nX['sick'] = si_encoder.fit_transform(X.sick)\nX['pregnant'] = preg_encoder.fit_transform(X.pregnant)\nX['thyroid surgery'] = th_encoder.fit_transform(X['thyroid surgery'])\nX['lithium'] = lith_encoder.fit_transform(X['lithium'])\nX['goitre'] = g_encoder.fit_transform(X['goitre'])\nX['tumor'] = tu_encoder.fit_transform(X['tumor'])","ce12ec7d":"# output1 = open('sex_lbl.pkl', 'wb')\n# pickle.dump(s_encoder, output1)\n# output1.close()\n# output2 = open('surgery.pkl', 'wb')\n# pickle.dump(th_encoder, output2)\n# output2.close()","1d878d21":"def func(df):\n    if df == 'P':\n        return 1\n    else:\n        return 0","0a08fc60":"y = y.apply(func)","f5d13359":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=11)","8f9f24a4":"smote = SMOTE(random_state=11)\n\nx_smote, y_smote = smote.fit_resample(X_train, y_train)","4ea53a90":"print(\"Shape before the Oversampling : \",X_train.shape)\nprint(\"Shape after the Oversampling : \",x_smote.shape)\n","1a2ae486":"scalr = MinMaxScaler()\nx_smote.TT4 = scalr.fit_transform(x_smote[['TT4']])\nx_smote.age = scalr.fit_transform(x_smote[['age']])\nx_smote.FTI = scalr.fit_transform(x_smote[['FTI']])","a48e6e12":"# with open('scalar.pkl','wb') as f:\n#     pickle.dump(scalr,f)","a49d3a44":"X_test.TT4 = scalr.transform(X_test[['TT4']])\nX_test.age = scalr.transform(X_test[['age']])\nX_test.FTI = scalr.transform(X_test[['FTI']])","faca3628":"models = {\n    LogisticRegression(max_iter=500):'Logistic Regression',\n    SVC():\"Support Vector Machine\",\n    RandomForestClassifier():'Random Forest'\n}\nfor m in models.keys():\n    m.fit(x_smote,y_smote)\nfor model,name in models.items():\n     print(f\"Accuracy Score for {name} is : \",model.score(X_test,y_test)*100,\"%\")","bc8e209f":"for model,name in models.items():\n    y_pred = model.predict(X_test)\n    print(f\"Classification Report for {name}\")  \n    print(\"----------------------------------------------------------\")\n    print(classification_report(y_test,y_pred))\n    print(\"----------------------------------------------------------\")","3ac20f93":"rf = RandomForestClassifier()\nrf.fit(x_smote,y_smote)\nrf.score(X_test,y_test)","2f68e975":"plt.figure(figsize=(9,7))\nfeature_imp1 = rf.feature_importances_\nsns.barplot(x=feature_imp1, y=X.columns)\n# Add labels to your graph\nplt.xlabel('Feature Importance Score')\nplt.ylabel('Features')\nplt.title(\"Visualizing Important Features For Random Forest \",{'fontsize':25})\nplt.show();","67e2532d":"x_smote.drop(['sick', 'pregnant', 'I131 treatment',\n              'lithium', 'goitre', 'tumor'], axis=1, inplace=True)\nX_test.drop(['sick', 'pregnant', 'I131 treatment',\n              'lithium', 'goitre', 'tumor'], axis=1, inplace=True)\n","aadd2d53":"new_rf = RandomForestClassifier()\nnew_rf.fit(x_smote,y_smote)\nnew_rf.score(X_test,y_test)","65b8c914":"# with open('thyroid.pkl','wb') as f:\n#     pickle.dump(new_rf,f)","5ca345dc":"thyroid_df.head()","81a95650":"### Thyroid disease (TD) is one of the most progressive endocrine disorders in the human population today. Prediction of the endocrine disease is a critical task in the field of clinical data analysis. Machine Learning (ML) has shown effective results in the decision making and predictions from the enormous data generated by healthcare domain. Various studies in the prediction of thyroid disease have given only a glimpse using machine learning algorithms. In this project we have proposed three models based on the primary dataset collected from 3772  patients. In these models, we have compared top three ML algorithms (Support Vector Machine, Logistic Regression, Random Forest) for effective classification.","dfb54fe8":"## **Inference :**\n### Female patients who has disease is greater than male patients.","82e7fafc":"## **Handle Imbalance Data**","b4c2f982":"## **Scaling (Normalization)**","b431d0ed":"## **Handle Missing Values**","41bf6541":"## **Classification Report for each model.**","a903a81e":"### Thyroid disease is one of the diseases that afflict the world\u2019s population, and the number of cases of this disease is increasing. Because of medical reports that show serious imbalances in thyroid diseases, ourstudy deals with the classification of thyroid disease between hyperthyroidism and hypothyroidism. This disease was classified using algorithms. Machine learning showed us good results using several algorithmsand was built in the form of two models.","44b85ea3":"## **Split original data into training data and testing data.**","e559333a":"## **EDA**","1cb183ce":"## **Build Models.**","65d9607c":"## **Introduction**","9fdf532a":"## **Inference :**\n### The most of patients who suffer from thyroid belonging to age group between 50-70","afb2f778":"## **Data Cleaning**","0f2c96c7":"## **Conclusion**","241421f7":"## **Transform non-numerical labels to numerical labels.**","70c29f4d":"## **Import Libraries**","47bbf669":"## **Read data from csv**"}}