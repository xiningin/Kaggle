{"cell_type":{"279ca452":"code","2d68038e":"code","0aba65f8":"code","5ce5fb75":"code","1618b50b":"code","7f6d9519":"code","c8e97749":"code","38af04de":"code","009c2633":"code","eca5039b":"code","5b126ad9":"markdown","8e860e73":"markdown","b7f13df9":"markdown","f891cd30":"markdown","a3290e93":"markdown","fe482a8c":"markdown"},"source":{"279ca452":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d68038e":"# For handling datasets\nimport pandas as pd\n\n# For plotting graph\nfrom matplotlib import pyplot as plt\n\n# Import sklearn lib for KNN\nfrom sklearn.neighbors import KNeighborsClassifier","0aba65f8":"df=pd.read_csv('..\/input\/iriscsv\/Iris.csv')\ndf.head()","5ce5fb75":"df.tail()","1618b50b":"df.info()","7f6d9519":"df.columns","c8e97749":"X=df.loc[:,'SepalLengthCm':'PetalWidthCm']\nY=df.loc[:,'Species']","38af04de":"knn=KNeighborsClassifier()\n\n# Train the Model\nknn.fit(X,Y)","009c2633":"X_test=[[4.9,7.0,1.2,0.2],\n        [6.0,2.9,4.5,1.5],\n        [6.1,2.6,5.6,1.2]]\n\n# Test the model\nprediction=knn.predict(X_test)\nprint(prediction)","eca5039b":"# plot each relation \n# feature with each class\n\nplt.xlabel('Feature')\nplt.ylabel('Species')\n\nX=df.loc[:,'SepalLengthCm']\nY=df.loc[:,'Species']\nplt.scatter(X,Y,color='green',label='SepalLengthCm')\n\n\nX=df.loc[:,'SepalWidthCm']\nY=df.loc[:,'Species']\nplt.scatter(X,Y,color='blue',label='SepalWidthCm')\n\n\nX=df.loc[:,'PetalLengthCm']\nY=df.loc[:,'Species']\nplt.scatter(X,Y,color='red',label='PetalLengthCm')\n\n\nX=df.loc[:,'PetalWidthCm']\nY=df.loc[:,'Species']\nplt.scatter(X,Y,color='black',label='PetalWidthCm')\n\nplt.legend(loc=4, prop={'size':5})\nplt.show()\n\n\n\n","5b126ad9":"# **Plotting**","8e860e73":"# **Import required libraries**","b7f13df9":"# **Train the Model**","f891cd30":"# **Import dataset**","a3290e93":"# **Prepare data for training**","fe482a8c":"# **Test the model**"}}