{"cell_type":{"80c561ef":"code","ba511d9d":"code","0124ef29":"code","b3cb3130":"code","598f1591":"code","e1310f34":"code","5443fcaf":"code","e282a35b":"code","cd6242fd":"code","0fc05a88":"code","4d17f1da":"code","26180e98":"code","9851b304":"code","eb0c8f3c":"code","8cd24038":"code","ca33da87":"code","a31754fa":"code","2b5074f7":"code","f0d06975":"code","491563f2":"code","ad0039d1":"code","0dc37072":"code","c9c0094f":"code","a8885b06":"code","d5d9457d":"code","55e9b9d6":"code","bcbd08a4":"code","83bf5d7c":"code","ed98d3cf":"code","5ec7a0a6":"code","c5438301":"code","39c51568":"code","ba429aea":"code","b1cb2533":"markdown","d6355019":"markdown","bd1e1a1f":"markdown","f1919bb0":"markdown","6eb80c94":"markdown","0178fa39":"markdown","71f88f07":"markdown","9de13c0e":"markdown","d8700b2b":"markdown","7116f082":"markdown","5d1b1ec8":"markdown","f6506428":"markdown","899406d3":"markdown","3d810324":"markdown","5b1daf4c":"markdown","03f2e61e":"markdown","e13cf5fd":"markdown","a8bc39b3":"markdown","b4b1bb6f":"markdown","32069118":"markdown","b33f382b":"markdown","18371fab":"markdown","43276d6f":"markdown","3fc2e4fe":"markdown","27f28a73":"markdown","b011bfc4":"markdown","67b37689":"markdown","7465ed1a":"markdown","4ecf22db":"markdown","8bd288fa":"markdown","b21ce096":"markdown","14cc0bd4":"markdown","c38ea145":"markdown","56a52e77":"markdown","cfe77053":"markdown","dc44e403":"markdown","d47b4039":"markdown","43cd9b91":"markdown","7f6b2b4f":"markdown"},"source":{"80c561ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba511d9d":"# Import necessary libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\nimport plotly.express as ex","0124ef29":"# Set to display all columns\npd.set_option('display.max_columns', None)\n\nmatches_path = \"\/kaggle\/input\/ipl\/matches.csv\"\ndeliveries_path = \"\/kaggle\/input\/ipl\/deliveries.csv\"\n\nmatches_data = pd.read_csv(matches_path)\ndeliveries_data = pd.read_csv(deliveries_path)","b3cb3130":"# Shape of dataset:\nmatches_data.shape","598f1591":"# check the null entries:\nmatches_data.isna().sum()","e1310f34":"# Drop column 'umpire3', as all entries are null\nmatches_data.drop('umpire3', axis=1, inplace=True)\n\n# Entries for \"winner\" and \"player_of_match\" columns are null, when there is no result for the match, so\n# will fill both column null entries with \"no result\"\nmatches_data['winner'].fillna('no result', inplace=True)\nmatches_data['player_of_match'].fillna('no result', inplace=True)\n\n# As all 7 missing cities belong to venue = Dubai International Cricket Stadium, so lets put city as Dubai\nmatches_data['city'].fillna('Dubai', inplace=True)\n\n# For one match both \"umpire1\" and \"umpire2\" are having null entries, so lets put \"missing\" as value\nmatches_data['umpire1'].fillna('missing', inplace=True)\nmatches_data['umpire2'].fillna('missing', inplace=True)","5443fcaf":"# Check whether all null values are fixed\nmatches_data.isna().sum()","e282a35b":"# Check null entries\ndeliveries_data.isna().sum()","cd6242fd":"# Replace player_dismissed and dismissal_kind of NaN with 'not out' as in those balls no one is dismissed\ndeliveries_data['player_dismissed'].fillna('not out', inplace=True)\ndeliveries_data['dismissal_kind'].fillna('not out', inplace=True)\n\n# Check when the fielder is required, so that we can analyse what we can enter for null entries\ndeliveries_data[(deliveries_data['dismissal_kind'] != 'not out') & (deliveries_data['fielder'].isna() == False)]['dismissal_kind'].unique()\n\n# Replace it with 'na', as fielder value doesn't make any sense in this\ndeliveries_data['fielder'].fillna('na', inplace=True)","0fc05a88":"# Check whether all null values are fixed\ndeliveries_data.isna().sum()","4d17f1da":"accumulated_data = matches_data.merge(deliveries_data, left_on='id', right_on='match_id')\naccumulated_data.head()","26180e98":"## Remove the match_id, as that match_id and id column is replaced\naccumulated_data.drop('match_id', axis=1, inplace=True)","9851b304":"print(\"Total number of matches played: {}\".format(matches_data.shape[0]))","eb0c8f3c":"plt.figure(figsize=(10,8))\nsns.countplot(y='city', data=matches_data)\nplt.title(\"Matches played in different cities\")","8cd24038":"plt.figure(figsize=(10,10))\nsns.countplot(y='venue', data=matches_data)\nplt.title(\"Matches played in different stadium\")","ca33da87":"plt.figure(figsize=(10,8))\nsns.countplot(y='winner', data=matches_data)\nplt.title(\"Matches won by the teams\")","a31754fa":"# Decision for Toss whether batting or bowling\nsns.countplot('toss_decision', data=matches_data)\nplt.title(\"Decision to field or bat depending on toss\")","2b5074f7":"conditions = [\n    (((matches_data['toss_decision'] == 'field') & \n     (matches_data['toss_winner'] == matches_data['winner'])) |\n     ((matches_data['toss_decision'] == 'bat') & \n     (matches_data['toss_winner'] != matches_data['winner']))\n    ),\n    (((matches_data['toss_decision'] == 'field') & \n     (matches_data['toss_winner'] != matches_data['winner'])) |\n     ((matches_data['toss_decision'] == 'bat') & \n     (matches_data['toss_winner'] == matches_data['winner']))\n    )\n]\n\nvalues = ['field', 'bat']\n\n# Column will have 'field' as value if toss_winner chooses 'field' and it wons, otherwise 'bat'\nmatches_data['win_field_or_bat'] = np.select(conditions, values) ","f0d06975":"sns.countplot(x='win_field_or_bat', data=matches_data)\nplt.title(\"Matches won by the fielding team and batting team\")","491563f2":"plt.figure(figsize=(10,8))\nsns.boxplot(y='winner', x='win_by_runs', data=matches_data)\nplt.title(\"Win run differences\")","ad0039d1":"plt.figure(figsize=(10,8))\nsns.boxplot(y='winner', x='win_by_wickets', data=matches_data)\nplt.title(\"Wicket differences\")","0dc37072":"plt.figure(figsize=(20,50))\nsns.countplot(y='player_of_match', data=matches_data, )\nplt.title(\"Man of the match\")","c9c0094f":"# Get top 10 wicket takers\nwicket_data = deliveries_data[deliveries_data['player_dismissed'] !='not out']\nwicket_data['wicket_taker'] = np.where(wicket_data['fielder'] != 'na', wicket_data['fielder'], wicket_data['bowler'])\nwicket_data = wicket_data.groupby('wicket_taker')['player_dismissed'].count().sort_values(ascending=False)[1:11]","a8885b06":"wicket_data.plot(kind='bar')\nplt.title(\"Top 10 Wicket taking players\")","d5d9457d":"top_10_batsman = deliveries_data.groupby('non_striker')['total_runs'].count().sort_values(ascending=False)[1:11]\ntop_10_batsman.plot(kind='bar')\nplt.title(\"Top 10 Batsman with score\")","55e9b9d6":"umpire1 = matches_data.groupby('umpire1')['umpire1'].count().sort_values(ascending=False)\numpire2 = matches_data.groupby('umpire2')['umpire2'].count().sort_values(ascending=False)\numpire = umpire1.add(umpire2, fill_value=0)\nprint(\"Total number of umpires: {}\".format(umpire.shape[0]))\numpire = umpire.sort_values(ascending=False)[0:10]","bcbd08a4":"umpire.plot(kind='bar')\nplt.title(\"Top 10 common umpires\")","83bf5d7c":"sns.countplot(x='season', hue='toss_decision', data=matches_data)","ed98d3cf":"plt.figure(figsize=(10,10))\nsns.countplot(y='toss_winner', data=matches_data)","5ec7a0a6":"matches_teams=pd.concat([matches_data['team1'],matches_data['team2']])\nmatches_teams=matches_teams.value_counts().reset_index()\nmatches_teams.columns=['Teams', 'Total matches']\nmatches_teams['wins']=matches_data['winner'].value_counts().reset_index()['winner']","c5438301":"data0 = go.Bar(\n        x=matches_teams['Teams'],\n        y=matches_teams['Total matches'],\n        name = 'Total matches'\n        )\n\ndata1 = go.Bar(\n        x=matches_teams['Teams'],\n        y=matches_teams['wins'],\n        name = 'Total wins'\n        )\n\ndata =[data0, data1]\nlayout = go.Layout(barmode='stack')\n\nfig = go.Figure(data=data, layout=layout)\nfig.show()","39c51568":"sns.countplot(x='season', data=matches_data)","ba429aea":"plt.figure(figsize=(10,20))\nsns.countplot(y='venue', hue='win_field_or_bat', data=matches_data)","b1cb2533":"**Observation:** Raina is the player whose score total is more.","d6355019":"**Observations:** Mumbai Indias won most of the matches, and there are approximately three matches that donot have any result.","bd1e1a1f":"**2.16 Matches played across each season**","f1919bb0":"**2.13 Toss decision by which team in different seasons**","6eb80c94":"**2.7 Difference of runs by which fielding team won**","0178fa39":"**Observation:** Dhoni took max number of wickets","71f88f07":"**2.5 Decision for Toss whether batting or bowling**","9de13c0e":"**2.11 Player who scored more**","d8700b2b":"Handle null values for delieveries data.","7116f082":"**Observation:** Matches played by Mumbai Indians, RCB, KKR, kings X1 Punjab, and Delhi daredevils are aproximately same,but Mumbai Indians won more as comparison to others.","5d1b1ec8":"**Observation**: We can see from the above countplot, that maximum number of matches are played in \"Mumbai\", and minimum number of matches are played in \"Bloemfontein\"","f6506428":"**Observation**: In most of the season, toss winning team chooses to field first especially in 2016 and 2017.","899406d3":"**2.10 Player who took max wickets**","3d810324":"Handle Null for matches data","5b1daf4c":"**2.17 Matches played in different stadium and whether field or batting team won**","03f2e61e":"**2.4: Who won most of the matches**","e13cf5fd":"**2.9 Player with most of the time man of the match**","a8bc39b3":"****","b4b1bb6f":"**Observations:** Most of the matches are won by the team who choose field first","32069118":"**2.2 Matches played in different cities**","b33f382b":"**Obeservations:** There are many teams who won by the wicket difference of 10, but the data is left skewed like most teams won with less than 5 wickets.","18371fab":"**2.6 Wins depending on field or batting**","43276d6f":"**Observation:** We can notice that Mumbai Indians won the toss maximum followed by kokata knight riders","3fc2e4fe":"## Tasks performed:\n1. Feature Engineering:\\\n    1.1 Handle null values for matches and delieveries data\\\n    1.2 Combine both data's\n2. Exploratory Data Analysis\\\n    2.1 Total matches played\\\n    2.2 Matches played in different cities\\\n    2.3 Matches played in different stadium\\\n    2.4 Who won most of the matches\\\n    2.5 Decision for Toss whether batting or bowling\\\n    2.6 Wins depending on field or batting\\\n    2.7 Difference of runs by which fielding team won\\\n    2.8 Max wicket difference for win\\\n    2.9 Player with most of the time man of the match\\\n    2.10 Player who took max wickets\\\n    2.11 Player who scored more\\\n    2.12 Umpire in most of the matches\\\n    2.13 Toss decision by which team in different seasons\\\n    2.14 Maximum toss winning team\\\n    2.15 Total win by team among total matches played\\\n    2.16 Matches played across each season\\\n    2.17 Matches played in different stadium and whether field or batting team won","27f28a73":"**Observation:** Most of the teams chooses to field","b011bfc4":"**Observation:** We can see at max fielding team won specially every match is won by fielding team first in Green Park and Holkar Cricket stadium.Batting first has very less chances in almost stadium except \"Subrata Roy Sahara stadium\", \"MA Chidambaram stadium\"","67b37689":"**Observation:** Every season has almost same number of matches nearby 60 except from 2011-2013 where matches played are more than 70.","7465ed1a":"## Task 1: Feature Engineering\n**1.1. Handle null values for matches and delieveries data**","4ecf22db":"**1.2: Combine both matches and deieveries data**","8bd288fa":"**2.3: Matches played in different stadium**","b21ce096":"**2.12 Umpire in most of the matches**","14cc0bd4":"**Observation:** \"Chris Gayle\" won max times the man of the match title with app. 18 times","c38ea145":"**2.8. Max wicket difference for win**","56a52e77":"**2.15 Total win by team among total matches played**","cfe77053":"**Conclusion:** Mumbai Indian won by the maximum run difference of app. 150 runs followed by Royal challengers Banglore.","dc44e403":"## Task 2: Exploratory data analysis:\n**2.1: Total matches played**","d47b4039":"**Observation:** Heree Dharamsena umpired in 87 matches which is higher in comparison to all other(55) umpires","43cd9b91":"**2.14 Maximum toss winning team**","7f6b2b4f":"**Observation:** Maximum matches are played in \"M chinaswamy stadium\" and minimum matches are played in \"OUTsurance Oval\""}}