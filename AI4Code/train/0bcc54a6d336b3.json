{"cell_type":{"a63e375c":"code","8ed8f521":"code","1fb7d945":"code","dfe30ead":"code","b6888bee":"code","2573fb9a":"code","ea4cec6f":"code","21193a96":"code","57c71ced":"code","c5c13745":"code","5f00b68e":"code","02a7e6de":"code","aabc6e87":"code","f638934c":"code","2ba3dfa1":"code","0a338d29":"code","2c02eb28":"code","99af986e":"code","d62626af":"code","06a50a2d":"code","05cf5afa":"code","353a8d6c":"code","ef539bc7":"code","09b5f23b":"code","0cbda0b9":"code","6524d5e9":"code","4327e4b4":"code","819fb6c6":"code","169d8a44":"code","294fc702":"code","80a5aded":"code","8961bfb1":"markdown","99bbe5b8":"markdown","1796a055":"markdown","50a33d73":"markdown","e86c78ef":"markdown","21780a90":"markdown"},"source":{"a63e375c":"import numpy as np \nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n        \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport matplotlib as pl\nimport sklearn\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score","8ed8f521":"dataset = pd.read_csv('\/kaggle\/input\/headbrain\/headbrain.csv')","1fb7d945":"dataset.shape","dfe30ead":"dataset.head()","b6888bee":"dataset.tail()","2573fb9a":"# Checking for null values\n# ------------------------\n\ndataset.isnull().sum()","ea4cec6f":"dataset['Age Range'].max()","21193a96":"dataset['Age Range'].min()","57c71ced":"sns.scatterplot( data = dataset, x=\"Head Size(cm^3)\", y=\"Brain Weight(grams)\")\nplt.show()","c5c13745":"sns.lmplot(x='Head Size(cm^3)', y='Brain Weight(grams)', hue = 'Gender', data = dataset)\nplt.show()","5f00b68e":"sns.lmplot(x='Head Size(cm^3)', y= 'Brain Weight(grams)', hue= 'Age Range', data= dataset)\nplt.show()","02a7e6de":"sns.regplot(x=dataset['Head Size(cm^3)'], y=dataset['Brain Weight(grams)'])\nplt.show()","aabc6e87":"dataset.describe()","f638934c":"dataset.info()","2ba3dfa1":"X = dataset.iloc[: ,2].values   #Features\ny = dataset.iloc[: ,3].values   #Targets","0a338d29":"# plot the imput data\n# -------------------\n\n\nplt.scatter(X,y, color = 'purple', label = 'Data Points')\nplt.xlabel('Head size in cm3')\nplt.ylabel('Brain Weight weight in grams')\nplt.legend()\n\n\nplt.show()","2c02eb28":"# from sklearn.linear_model import LinearRegression","99af986e":"# Simple Linear Regression using Sklearn\n# --------------------------------------\n\nmodel = LinearRegression()","d62626af":"X.shape","06a50a2d":"X = X.reshape(len(X), 1)     # We cannot use rank 1 matrices in sklearn so we have to reshape","05cf5afa":"X.shape","353a8d6c":"# model Fting \n# -----------\n\nmodel.fit(X,y)","ef539bc7":"model.coef_","09b5f23b":"model.intercept_","0cbda0b9":"# Model Prediction\n# ----------------\n\ny_pred = model.predict(X)","6524d5e9":"# y_pred","4327e4b4":"# Visualising: Plotting Values and Regression Line\n# -------------------------------------------------\n# Ploting Values \nplt.scatter(X, y, color='green', label='Scatter Points')\n\n\n# Ploting Regression Line \nplt.plot(X, y_pred,  color = 'blue', label = 'Regression Kine')\n\nplt.title('Head Size VS Brain Weight')\nplt.xlabel('Head Size(cm^3)')\nplt.ylabel('Bran Weight(grams)')\nplt.legend()\nplt.show()","819fb6c6":"model.score(X,y)","169d8a44":"# from sklearn.metrics import r2_score","294fc702":"# Model Evaluation\n# ................\n\nr_squared_score = r2_score(y, y_pred)   # R2 (Coefficient of Sata Matrics) regression score function","80a5aded":"print((r_squared_score * 100).round(2), \"%\")","8961bfb1":"# Machine Learning Algorithm - Regression(SLR)1","99bbe5b8":"#### 1- import libraries","1796a055":"#### R\u2013squared value is the statistical measure to show how close the data are to the fitted regression line.","50a33d73":"##### Link: https:\/\/scikit-learn.org\/stable\/modules\/linear_model.html#ordinary-least-squares","e86c78ef":"#### 2- import dataset","21780a90":"#### Implementation using Python (NumPy, Pandas, Matplotlib, Seaborn & Scikit-Learn)"}}