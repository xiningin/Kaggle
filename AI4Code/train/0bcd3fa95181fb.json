{"cell_type":{"56413abc":"code","18d9d869":"code","4db6c799":"code","e1ad8046":"code","c81ceb6f":"code","1bd53660":"code","fe5a1808":"code","a927a2f7":"code","3a096ef6":"code","98880902":"code","62c1b739":"code","f1b04d03":"code","75d33e0f":"code","ad077c1c":"code","bb33588a":"code","16a575a7":"code","d5efef78":"code","70eeded4":"code","7bf4f0d1":"code","1d46dd30":"code","cd32db9a":"code","c05cada3":"code","29bc80bb":"code","bf62dbf9":"code","b7316de8":"code","75b72c80":"code","17226f08":"code","4c3e35ab":"code","8cf9cb3b":"code","2fd189ff":"code","1d949247":"code","2ed8d85d":"code","4903d752":"code","5171c023":"code","2cc9fe93":"code","ad03d225":"code","cad59312":"code","32fa405d":"code","3d6fbe84":"code","5f342fc2":"code","745fdb15":"code","5d923ccb":"code","84e4b1ff":"code","e1174fd5":"code","7cd3505b":"code","4d0f0bec":"code","b82c88e5":"code","7e4d2c87":"code","b8267fa7":"code","a30a5af6":"code","0a727bee":"code","0ca3fdf7":"code","67869d64":"code","fc36cfc4":"code","f5ec3bd3":"code","b254df61":"code","6fb2b0c0":"markdown","b59e9ea7":"markdown","1609ba4e":"markdown","e9e4f8dd":"markdown","ecd2c6ca":"markdown","581a4a0c":"markdown","d773a7b1":"markdown","b289685d":"markdown","0569fa2b":"markdown","de7daf1f":"markdown","fe0ad0c2":"markdown","634bfc65":"markdown","6ed62432":"markdown","eb649232":"markdown","745052ff":"markdown","f609eaf6":"markdown","bd6c1543":"markdown","d1466170":"markdown","9aebd551":"markdown","e877e906":"markdown","cb1f5656":"markdown","a80178f0":"markdown","387f0eb3":"markdown","55d1eca9":"markdown","37e1f3ce":"markdown","8b7101e3":"markdown","4e808ff8":"markdown"},"source":{"56413abc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18d9d869":"#importing essential libraries\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport warnings\nimport plotly.express as px\nimport plotly.io as pio\nwarnings.filterwarnings(\"ignore\")","4db6c799":"import plotly.graph_objects as go","e1ad8046":"df= pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","c81ceb6f":"df","1bd53660":"df.dtypes","fe5a1808":"df.isnull().sum()","a927a2f7":"df.describe()","3a096ef6":"print(f\"the missing values for glucose are : \",len(df.loc[df.Glucose==0]))\nprint(f\"the missing values for insulin are : \",len(df.loc[df.Insulin==0]))\nprint(f\"the missing values for bloodpressure are : \",len(df.loc[df.BloodPressure==0]))\nprint(f\"the missing values for SkinThickness are : \",len(df.loc[df.SkinThickness==0]))\nprint(f\"the missing values for BMI are : \",len(df.loc[df.BMI==0]))\n","98880902":"from sklearn.impute import SimpleImputer","62c1b739":"impute= SimpleImputer(missing_values=0, strategy=\"mean\")","f1b04d03":"df.iloc[:,1:6]= impute.fit_transform(df.iloc[:,1:6])","75d33e0f":"df.describe()","ad077c1c":"plt.figure(figsize= (15,6))\nsns.set_style(\"darkgrid\")\nsns.heatmap(df.corr(),annot= True)\nplt.show()","bb33588a":"ax= px.histogram(df,x= \"Age\", template= \"plotly_dark\",color= \"Outcome\",title='Age distribution')\nax.show()","16a575a7":"ax= px.pie(df, names= \"Outcome\",template= \"plotly_dark\",title= \"chances of Diabetes\",hole= 0.5)\nax.show()","d5efef78":"ax= px.scatter(df,x= \"Glucose\",y= \"Age\",marginal_x='histogram', marginal_y='histogram',size=\"Age\", size_max=20,\n              template= \"plotly_dark\",color= \"Outcome\",title=\"age and glucose correlation\")\nax.show()","70eeded4":"ax= px.scatter(df,x= \"BloodPressure\",y= \"Age\",marginal_x='histogram', marginal_y='histogram',size=\"Age\", size_max=20,\n              template= \"plotly_dark\",color= \"Outcome\",title=\"age and bloodpressure correlation\")\nax.show()","7bf4f0d1":"ax= px.scatter(df,x= \"Insulin\",y= \"Age\",marginal_x='histogram', marginal_y='histogram',size=\"Age\", size_max=20,\n              template= \"plotly_dark\",color= \"Outcome\",title=\"age and Insulin correlation\")\nax.show()","1d46dd30":"ax = px.scatter_3d(df, x=\"Age\", y=\"Glucose\", z=\"Insulin\",template= \"plotly_dark\",color=\"Outcome\")\nax.show()","cd32db9a":"dt= df.iloc[:,6:]","c05cada3":"ax= px.parallel_coordinates(dt, color=\"Outcome\",template= \"plotly_dark\")\nax.show()","29bc80bb":"fig = px.area(df, x=\"Age\", y=\"BMI\", color=\"Outcome\",template= \"plotly_dark\")\nfig.show()","bf62dbf9":"dt= df.iloc[:,1:8]","b7316de8":"ax = px.box(dt,template= \"plotly_dark\")\nax.show()","75b72c80":"#importing essential libraries\nfrom sklearn.metrics import confusion_matrix,classification_report,accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV","17226f08":"df.var()","4c3e35ab":"df[\"Glucose\"]= np.log(df.Glucose)\ndf[\"BloodPressure\"]= np.log(df.BloodPressure)\ndf[\"Insulin\"]= np.log(df.Insulin)\ndf[\"BMI\"]= np.log(df.BMI)","8cf9cb3b":"df[\"SkinThickness\"]= np.log(df.SkinThickness)\ndf[\"Age\"]= np.log(df.Age)","2fd189ff":"df.var()","1d949247":"#train test split\nlabel= df[\"Outcome\"]\ntrain= df.drop(\"Outcome\",axis= 1)","2ed8d85d":"x_train,x_test,y_train,y_test= train_test_split(train,label,test_size= 0.3,random_state= 5)","4903d752":"scores= []\nfor i in range(1,50):\n    knn= KNeighborsClassifier(n_neighbors= i)\n    knn.fit(x_train,y_train)\n    scores.append(accuracy_score(y_test,knn.predict(x_test)))","5171c023":"plt.figure(figsize= (15,6))\nsns.lineplot(np.arange(1,50),scores)\nplt.show()","2cc9fe93":"knn= KNeighborsClassifier(n_neighbors= 15)\nknn.fit(x_train,y_train)\nknnpred = knn.predict(x_test)\nprint(f\"accuracy score: \",accuracy_score(y_test,knnpred))","ad03d225":"#classification report\ncr= classification_report(y_test,knnpred)\nprint(cr)","cad59312":"lr= LogisticRegression()\nlr.fit(x_train,y_train)\nlrpred= lr.predict(x_test)\nprint(f\"accuracy score: \",accuracy_score(y_test,lrpred))","32fa405d":"#classification report\ncr= classification_report(y_test,lrpred)\nprint(cr)","3d6fbe84":"rf= RandomForestClassifier()\nrf.fit(x_train,y_train)\nrfpred= rf.predict(x_test)\naccuracy_score(y_test,rfpred)","5f342fc2":"#hyperparameter tuning\nparams={\n    'max_depth': [80, 90, 100],\n    'max_features': [2, 3],\n    'min_samples_leaf': [3, 4, 5],\n    'min_samples_split': [8, 10, 12],\n    'n_estimators': [100, 200]\n}","745fdb15":"grid_search = GridSearchCV(estimator = rf, param_grid = params,cv = 3)","5d923ccb":"grid_search.fit(x_train,y_train)","84e4b1ff":"grid_search.best_score_","e1174fd5":"#classification report\ncr= classification_report(y_test,rfpred)\nprint(cr)","7cd3505b":"ad=AdaBoostClassifier()\nad.fit(x_train,y_train)\nadpred= ad.predict(x_test)\naccuracy_score(y_test,adpred)","4d0f0bec":"#hyperparameter tuning\nparams={\n   \"learning_rate\":[0.2,0.1,0.5],\n   \"n_estimators\": [100,150,200]\n}","b82c88e5":"grid_search = GridSearchCV(estimator = ad, param_grid = params,cv = 3)","7e4d2c87":"grid_search.fit(x_train,y_train)","b8267fa7":"grid_search.best_params_","a30a5af6":"grid_search.best_score_","0a727bee":"ad=AdaBoostClassifier(learning_rate= 0.1,n_estimators=100)\nad.fit(x_train,y_train)\nadpred= ad.predict(x_test)\nprint(f\"accuracy score: \",accuracy_score(y_test,adpred))","0ca3fdf7":"#classification report\ncr= classification_report(y_test,adpred)\nprint(cr)","67869d64":"gb= GradientBoostingClassifier()\ngb.fit(x_train,y_train)\npredgb= gb.predict(x_test)\naccuracy_score(y_test,predgb)","fc36cfc4":"#classification report\ncr= classification_report(y_test,predgb)\nprint(cr)","f5ec3bd3":"from pandas import DataFrame\nmodel=[[\"KNN\",accuracy_score(y_test,knnpred)],[\"GRADIENTBOOST\",accuracy_score(y_test,predgb)],[\"RANDOMFOREST\",accuracy_score(y_test,rfpred)]\n       ,[\"ADABOOST\",accuracy_score(y_test,adpred)],[\"LOGISTICREGRESSION\",accuracy_score(y_test,lrpred)]]\ndx= DataFrame(model,columns= [\"model\",\"score\"])","b254df61":"ax= px.bar(dx,x= \"model\",y=\"score\",template=\"plotly_dark\",title= \"scores\",color= \"model\")\nax.show()","6fb2b0c0":"<p style=\"background-color:Tomato;\">we will be imputing these missing values with the mean with help of sklearn imputer<\/p>\n\n\n","b59e9ea7":"<p style=\"background-color:Tomato;\">However the dataset shows some of the features having minimum value as 0 like insulin,BMI,glucose which is not logical and can be considered missing values<\/p>\n","1609ba4e":"<p style=\"background-color:Tomato;\">lets see the distribution of Outcome(diabetes or not)<\/p>","e9e4f8dd":"<p style=\"background-color:Tomato;\">Visualizing the BMI and diabetes pedigree function<\/p>","ecd2c6ca":"# **<h2 style=\"background-color:DodgerBlue;\">LOGISTIC REGRESSION<\/h2>**","581a4a0c":"<p style=\"background-color:Tomato;\">Insulin and age correlation\/ distribution across target variable<\/p>","d773a7b1":"# **<h2 style=\"background-color:DodgerBlue;\">KNN<\/h2>**","b289685d":"\n# **<h2 style=\"background-color:DodgerBlue;\">EDA<\/h2>**","0569fa2b":"* # **<h2 style=\"background-color:DodgerBlue;\">AdaBoost<\/h2>**","de7daf1f":"features: \n\nPregnancies:  Number of times pregnant\n\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\n\nBloodPressure: Diastolic blood pressure (mm Hg)\n\nSkinThickness: Triceps skin fold thickness (mm)\n\nInsulin: 2-Hour serum insulin (mu U\/ml)\n\nBMI: Body mass index (weight in kg\/(height in m)^2)\n\nDiabetesPedigreeFunction: Diabetes pedigree function\n\nAge: Age (years)","fe0ad0c2":"<p style=\"background-color:Tomato;\">The features have high variance and hence need to be normalized<\/p>","634bfc65":"<p style=\"background-color:Tomato;\">Diabetes is a disease that occurs when your blood glucose, also called blood sugar, is too high. Blood glucose is your main source of energy and comes from the food you eat. Insulin, a hormone made by the pancreas, helps glucose from food get into your cells to be used for energy. Sometimes your body doesn\u2019t make enough\u2014or any\u2014insulin or doesn\u2019t use insulin well. Glucose then stays in your blood and doesn\u2019t reach your cells.<\/p>","6ed62432":"<p style=\"background-color:Tomato;\">Glucose and age correlation\/ distribution across target variable<\/p>","eb649232":"<p style=\"background-color:Tomato;\">3D scatterplot showing correlation between insulin and glucose across ages and it impacts the target variable<\/p>","745052ff":"<p style=\"background-color:Tomato;\">blood pressure and age correlation\/ distribution across target variable<\/p>","f609eaf6":"<p style=\"background-color:Tomato;\">importing essential libraries<\/p>\n","bd6c1543":"![](https:\/\/st1.thehealthsite.com\/wp-content\/uploads\/2020\/11\/Diabetes-2-768x427.jpg)","d1466170":"# **<h2 style=\"background-color:DodgerBlue;\">RANDOM FOREST<\/h2>**","9aebd551":"* # **<h2 style=\"background-color:DodgerBlue;\">GradientBoosting<\/h2>**","e877e906":"<p style=\"background-color:Tomato;\">All the zero values have been imputed<\/p>\n","cb1f5656":"<p style=\"background-color:Tomato;\">No missing values present in the dataset<\/p>\n","a80178f0":"<p style=\"background-color:Tomato;\">lets see the distribution of age across dataset<\/p>\n","387f0eb3":"The scores and models can be further improved using hyperparameter tuning with different parameters","55d1eca9":"\n# **<h2 style=\"background-color:DodgerBlue;\">MODELS<\/h2>**","37e1f3ce":"<p style=\"background-color:Tomato;\">importing dataset<\/p>\n","8b7101e3":"The dataset is slightly imbalanced wrt to outcome as 65% of patients have low of diabetes and only 34% patients have high chance","4e808ff8":"<p style=\"background-color:Tomato;\">CORRELATION HEATMAP SEABORN<\/p>\n"}}