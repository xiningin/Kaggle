{"cell_type":{"f819675c":"code","23ed9b5b":"code","7bd7ebdf":"code","1876ce0b":"code","f299be0a":"code","1bc01f61":"code","9962d2e1":"code","29086238":"code","353fa8ee":"code","df380444":"code","431d6174":"code","f5be8d91":"code","2bb491ff":"code","d5df8144":"code","ea55b017":"code","6064ea00":"code","8139c55f":"code","2154cd70":"code","005a6534":"code","6a943243":"code","10ef3c37":"code","17873980":"code","b0477d2c":"code","442a02e7":"code","000f3ff4":"code","b5b07cf6":"code","f69bd487":"code","1cdd92bb":"code","3b3da888":"code","afeef870":"code","9e33ca56":"code","0ae82341":"code","6f38f9b6":"code","34b73ea0":"code","e9eeb2d8":"code","237c4c3d":"code","608f37db":"code","0aec7641":"code","4d02d576":"code","766a2694":"code","354ee979":"code","b50dc0e9":"code","e8ca6888":"code","dd11c17f":"code","46fd3be4":"code","efbe03d3":"markdown","2871ec8f":"markdown","224e371c":"markdown","077f6ef2":"markdown","ec9aa0c2":"markdown","18fa07b1":"markdown","51678d61":"markdown","4789870d":"markdown","eb70f1b7":"markdown","42b700a7":"markdown","83f00570":"markdown","3ee5c83e":"markdown","65ee2b35":"markdown","40d6c8f0":"markdown","7d8aaf2d":"markdown","e9d41fff":"markdown","0fbee85c":"markdown","9735cfaa":"markdown","07849e40":"markdown","6ac025b8":"markdown","91066bbe":"markdown","8e61f047":"markdown","20bac829":"markdown","99b2bfe1":"markdown","a9891916":"markdown","0c3eee82":"markdown","c0b05390":"markdown"},"source":{"f819675c":"\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npowers = pd.read_csv('..\/input\/superhero-set\/super_hero_powers.csv')\nheroes = pd.read_csv('..\/input\/superhero-set\/heroes_information.csv')","23ed9b5b":"heroes.head()","7bd7ebdf":"powers.head()","1876ce0b":"heroes= heroes.drop('Unnamed: 0', axis=1)\nheroes.info()","f299be0a":"heroes['Alignment'].unique()","1bc01f61":"heroes['Publisher'].unique()\n","9962d2e1":"heroes.loc[(heroes['Publisher'] != 'Marvel Comics') & (heroes['Publisher'] != 'DC Comics'),'Publisher'] = 'Other'","29086238":"heroes['name'].unique()\n","353fa8ee":"heroes['name'].isna().value_counts()","df380444":"heroes.loc[heroes['name'] == '-']","431d6174":"heroes['Gender'].unique()","f5be8d91":"heroes['Eye color'].unique()","2bb491ff":"heroes['Race'].unique()","d5df8144":"heroes['Skin color'].unique()","ea55b017":"heroes['Skin color'].isnull().value_counts()","6064ea00":"heroes['Height'].value_counts()","8139c55f":"heroes['Weight'].value_counts()","2154cd70":"heroes['Hair color'].unique()","005a6534":"heroes.loc[heroes['Gender']=='-']","6a943243":"heroes.loc[heroes['Gender'] == '-','Gender'] = 'Unknown'\nheroes.loc[heroes['Eye color'] == '-','Eye color'] = 'Unknown'\nheroes.loc[heroes['Hair color'] == '-','Hair color'] = 'Unknown'\nheroes.loc[heroes['Hair color'] == 'Brownn','Hair color'] = 'Brown'\nheroes.loc[heroes['Hair color'] == 'black','Hair color'] = 'Black'\nheroes.loc[heroes['Skin color'] == '-','Skin color'] = 'Unknown'\nheroes.loc[heroes['Alignment'] == '-','Alignment'] = 'Unknown'\nheroes.loc[heroes['Race'] == '-','Race'] = 'Unknown'\nheroes.loc[(heroes['Publisher'] == '-') | (heroes['Publisher'].isna() == True),'Publisher'] = 'Unknown'\nheroes.loc[heroes['Height'] < 0,'Height'] = 'Unknown'\nheroes.loc[heroes['Weight'] < 0,'Weight'] = 'Unknown'\n","10ef3c37":"heroes = heroes.rename(columns={'name': 'hero_names'})","17873980":"heroes.loc[heroes['Gender'] == 'Unknown']","b0477d2c":"combined = pd.merge(heroes,powers)","442a02e7":"combined.head()","000f3ff4":"sns.set_palette(\"pastel\")","b5b07cf6":"Publisher_df=combined[['Publisher','Gender']]\nplt.figure(figsize=(8,4))\nsns.countplot(x='Publisher',data=Publisher_df,hue='Gender')\nplt.title('Publishers and the Amount of Superheroes', fontsize=14)\n\ndef roundup(x):\n    return 50 + int(math.ceil(x \/ 100.0)) * 100 \n\ntotal =float(len(Publisher_df))\nax = plt.gca()\ny_max = combined['Publisher'].value_counts().max() \nax.set_ylim([0, roundup(y_max)])\n\nfor patch in ax.patches:\n    ax.text(patch.get_x() + patch.get_width()\/2., patch.get_height(), '{:.0%}'.format(patch.get_height()\/total), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.show()","f69bd487":"plt.figure(figsize=(8,4))\nsns.countplot(x='Publisher',data=combined,hue='Alignment')\ntotal =float(len(combined))\nplt.title('Publishers and the Alignment of Their Superheroes', fontsize=14)\n\n\nax = plt.gca()\ny_max = combined['Publisher'].value_counts().max() \nax.set_ylim([0, roundup(y_max)])\n\nfor patch in ax.patches:\n    ax.text(patch.get_x() + patch.get_width()\/2., patch.get_height(), '{:.0%}'.format(patch.get_height()\/total), \n            fontsize=12, color='black', ha='center', va='bottom')\nplt.show()","1cdd92bb":"df = combined.drop(combined[combined.Race == 'Unknown'].index) # Keep\n\n\nRace_df = df['Race'].value_counts().sort_values(ascending=False).head(10)\n\nlabel = Race_df.index\nvalue = Race_df.values\n\nplt.figure(figsize=(15,4))\nsns.barplot(x=label,y=value)\nplt.xlabel('Races')\nplt.ylabel('Count')\nplt.title(\"Top 10 Superhero Races\")\n\nax = plt.gca()\ny_max = combined['Publisher'].value_counts().max() \nax.set_ylim([0, roundup(y_max)])\n\nfor patch in ax.patches:\n    ax.text(patch.get_x() + patch.get_width()\/2., patch.get_height(), '{:.0%}'.format(patch.get_height()\/total), \n            fontsize=12, color='black', ha='center', va='bottom')\n\nplt.show()","3b3da888":"df = combined.drop(combined[combined['Eye color'] == 'Unknown'].index) \nEyecolor_df = df['Eye color'].value_counts().sort_values(ascending=False).head(10)\n\nlabel = Eyecolor_df.index\nvalue = Eyecolor_df.values\n\nplt.figure(figsize=(15,4))\nsns.barplot(x=label,y=value)\nplt.xlabel('Eye colors')\nplt.ylabel('Count')\nplt.title(\"Top 10 Superhero Eye Colors\")\n\nax = plt.gca()\ny_max = combined['Publisher'].value_counts().max() \nax.set_ylim([0, roundup(y_max)])\n\nfor patch in ax.patches:\n    ax.text(patch.get_x() + patch.get_width()\/2., patch.get_height(), '{:.0%}'.format(patch.get_height()\/total), \n            fontsize=12, color='black', ha='center', va='bottom')\n\nplt.show()","afeef870":"df = combined.drop(combined.columns[10:],axis=1)\ndf['Height'].unique()","9e33ca56":"Height_df=df.drop(df[df['Height']=='Unknown'].index)\n\nHeight_M=Height_df.drop(Height_df[Height_df['Gender']!= 'Male'].index)\nHeight_F=Height_df.drop(Height_df[Height_df['Gender']!= 'Female'].index)\nHeight_U=Height_df.drop(Height_df[Height_df['Gender']!= 'Unknown'].index)","0ae82341":"fig=plt.figure(figsize=(14,8))\nfig.add_subplot(1,3,1)\nplt.ylim(100,300)\nsns.boxplot(x='Gender',y='Height',data=Height_M, width =0.75, color='red')\nfig.add_subplot(1,3,2)\nplt.ylim(100,375)\nplt.title('Superheroes and Height Distributions')\nsns.boxplot(x='Gender',y='Height',data=Height_F, width =0.75)\nfig.add_subplot(1,3,3)\nplt.ylim(100,250)\nsns.boxplot(x='Gender',y='Height',data=Height_U, width =0.75, color ='green')\nplt.show()","6f38f9b6":"Weight_df=df.drop(df[df['Weight']=='Unknown'].index)\nWeight_df=Weight_df.dropna()\n\nWeight_M=Weight_df.drop(Weight_df[Weight_df['Gender']!= 'Male'].index)\nWeight_F=Weight_df.drop(Weight_df[Weight_df['Gender']!= 'Female'].index)\nWeight_U=Weight_df.drop(Weight_df[Weight_df['Gender']!= 'Unknown'].index)","34b73ea0":"fig=plt.figure(figsize=(14,8))\nfig.add_subplot(1,3,1)\n\nsns.boxplot(x='Gender',y='Weight',data=Weight_M, width =0.75,color='red')\nfig.add_subplot(1,3,2)\n\nplt.title('Superheroes and Weight Distributions')\nsns.boxplot(x='Gender',y='Weight',data=Weight_F, width =0.75)\nfig.add_subplot(1,3,3)\n\nsns.boxplot(x='Gender',y='Weight',data=Weight_U, width =0.75, color='green')\nplt.show()","e9eeb2d8":"hero_powers=combined*1\nhero_powers.loc[:, '# of powers'] = hero_powers.iloc[:, 1:].sum(axis=1)\nhero_powers\n","237c4c3d":"df=hero_powers[['hero_names','# of powers']].sort_values('# of powers',ascending=False)\nfig=plt.figure(figsize=(10,5))\nplt.title('Superheroes With the Most Amount of Powers')\nfig.add_subplot(1,1,1)\nsns.barplot(x='hero_names',y='# of powers',data=df.head(15),palette=\"viridis\")\nplt.xticks(rotation=60)\n\n\nplt.show()","608f37db":"df","0aec7641":"hp=hero_powers[['hero_names','# of powers','Gender']].sort_values('# of powers',ascending=False)\nhp_M=hp.drop(hp[hp['Gender'] != 'Male'].index)\nhp_U=hp.drop(hp[hp['Gender'] != 'Unknown'].index)\nhp_F=hp.drop(hp[hp['Gender'] != 'Female'].index)","4d02d576":"fig=plt.figure(figsize=(20,5))\nfig.add_subplot(1,3,1)\nsns.barplot(x='hero_names',y='# of powers',data=hp_M.head(15),palette=\"plasma_r\",hue='Gender')\nplt.xticks(rotation=80)\n\nfig.add_subplot(1,3,2)\nplt.title(\"Superoheroes With the Most Amount of Powers Related to Genders\")\nsns.barplot(x='hero_names',y='# of powers',data=hp_F.head(15),palette=\"Blues\",hue='Gender')\nplt.xticks(rotation=80)\n\nfig.add_subplot(1,3,3)\nsns.barplot(x='hero_names',y='# of powers',data=hp_U.head(15),palette=\"viridis\",hue='Gender')\nplt.xticks(rotation=80)\nplt.show()\n\n","766a2694":"hero_powers=hero_powers.drop(hero_powers.columns[0:10],axis=1)\nhero_powers","354ee979":"hero_powers=hero_powers.drop('# of powers', axis =1)\n","b50dc0e9":"hero_powers_count =pd.DataFrame()\n\nfor i in hero_powers.columns:\n    hero_powers_count[i] = hero_powers[i].value_counts()","e8ca6888":"hero_powers_count\nhero_powers_count=hero_powers_count.drop([0])\nhero_powers_count=hero_powers_count.T\nhero_powers_count=hero_powers_count.reset_index()\nhero_powers_count.rename(columns={'index': 'Hero Power',1:'Count'}, inplace=True)","dd11c17f":"hero_powers_count=hero_powers_count.sort_values('Count',ascending=False)\n","46fd3be4":"\nplt.figure(figsize=(20,10))\nplt.xticks(rotation=50)\nsns.barplot(x='Hero Power',y='Count', data=hero_powers_count.head(15))\n\ntotal =float(len(combined))\nax = plt.gca()\ny_max = combined['Publisher'].value_counts().max() \nax.set_ylim([0, roundup(y_max)])\n\nfor patch in ax.patches:\n    ax.text(patch.get_x() + patch.get_width()\/2., patch.get_height(), '{:.0%}'.format(patch.get_height()\/total), \n            fontsize=12, color='black', ha='center', va='bottom')\n\nplt.title('Most Popular Hero Powers and the Proportion of Heroes That Have Them')\nplt.show()","efbe03d3":"**Inspecting the Data**","2871ec8f":"# Beginner: Superhero EDA","224e371c":"# Data Visualizations","077f6ef2":"Here I check if any heroes did not have names.","ec9aa0c2":"# Personal Takeaways","18fa07b1":"The next visualization shows the most popular eye color for superheroes.\nYet again,the percentage is also based on the total superhero count.\n\nExluding the unknown category, it seems that 32% of the superheroes have blue eyes. \nI wonder if the reasoning behind this pertains to the race of the superheroes or if it is just due to artist preference?\n\n","51678d61":"At the very beginning, I noticed that the variable 'Skin color' was missing some values. So I decided to inspect each variable, after checking out the powers dataset.","4789870d":"* I shouldn't have worked on a combined dataset, unless I wanted to find metrics that required both datasets. I lost some instances from the merge. \n* I should use a more consistent coding method\/way to organize the visualizations. I kept creating\/overwriting dataframes. If I made an error or wanted to back track I would have to recreate a dataframe.\n* I should scale my quantitative data because it made my boxplots hard to read. If I did not limit the dimensions, the boxplot would have been a lot smaller.\n* Learning how to weigh a variable would be valuable in working with future data sets. Some abilities are better than others.","eb70f1b7":"I noticed that some heroes had a height of -99.0. Based on this information, I made a note that this was probably an missing value.\nDue to this incident, I assumed that weight would probably have some -99.0 values as well.\n","42b700a7":"The first visualization is of the publishers and the amount of superheroes that they have created.\nThe percentage indicates how many of their superheroes are related to a specific gender based on the total count of superheroes in the dataset.\n\nMarvel has contributed the most to the superhero dataset, by owning 51% of the total superheroes.\nIt also appears that 70% of superheroes are males, while 27% are female.\n","83f00570":"I decided to modify some cell values for most of the columns.\n\nI made an error here by setting the -99.0 values to 'Unknown for Height and Weight.\nThis results in having to change the values later on, due to changing the columns' types from float.","3ee5c83e":"# Interesting Findings","65ee2b35":"I dropped the 'Unnamed' column because it was an additional index.","40d6c8f0":"Here is a visualization that shows the Weight distributions of superheroes based on their gender.\n","7d8aaf2d":"The second visualization is of the publishers and the alignment of their superheroes.\nThe percentage indicates how many of their superheroes are related to a specific alignment based on the total count of superheroes in the dataset.\n\nOverall, all 3 publishers prioritize on creating 'good' aligned superheroes. 65% of the superheroes are 'good', 29% are 'bad', and around 4% are 'neutral'.\nI was surprised that there aren't that many neutral superheroes. 4 % of the superheroes fall in the neutral category.\n","e9d41fff":"The next visualization shows which hero has the most amount of powers.\nSpectre is in the first position with 49 powers, followed by Amazo.","0fbee85c":"* Marvel Comics and DC Comics are the main contributors to the superhero dataset.\n* It also appears that 70% of superheroes are males, while 27% are female.\n* Regarding alignment: 65% of heroes are good, 29% are bad, and 4% are neutral.\n* The hero with the most amount of powers is Spectre, he has 49 powers.\n* 55% of the hero roster has the super strength ability, being strong doesn't seem that amazing anymore.\n* 18% of the hero roster has the invulnerability ability, this seems really overpowered.\n* Godzilla is considered a hero.","9735cfaa":"The next visualization shows the most popular superhero races.\nThe percentage is also based on the total superhero count.\n\nExluding the unknown category, it seems that 30% of the superheroes are 'human'.\nOne thing that I am unable to figure out is how is a superhero classified as a human?\nI see that 2% of superheroes consist of 'Human\/Radiation,' is there a specific percentage of 'human' traits required to be 'human?'\nOr should the 'Human\/Radiation' variants also be classified as 'human?\n\nDisclaimer: There were a lot of unknown values and I removed them from the visualizations, otherwise 'unknown' would always be the top variable.\n","07849e40":"I renamed values in the 'Publisher' column to other, if they were not Marvel Comics nor DC Comics.\nI assumed that there wouldn't be many heroes from these other publishers. Some of them are not main competitors in the comic book industry.\nOne example would be South Park. It is a cartoon show that I watch.\n","6ac025b8":"Lastly, this is a bar chart that shows the most popular powers and the percentage of superheroes that have them.","91066bbe":"Here is a visualization that shows the height distributions of superheroes based on their gender.\n\nFor this visualization and the following one, there are a lot of outliers. There are some outliers past the 300 value, but I cut them off to help with the scaling of the boxplots.\nI think I should have scaled the data as each boxplot has a different scale. ","8e61f047":"**Importing Modules and Loading Data**","20bac829":"I combined both datasets here. \n\nI believe this may have been an error as well because I lost some rows of data.\nI should have worked on both datasets independently.","99b2bfe1":"I renamed the heroes dataset's 'name' column to 'hero_names' in order to merge it with the powers dataset.","a9891916":"**Objective of this Notebook**\n\n1. Gain insight on both datasets\n2. Practice preparing data\n3. Test out the Seaborn module\n4. Practice performing alternative methods to produce graphs.","0c3eee82":"The visualization below shows the hero with the most amount of powers based on gender.\nI'm surprised that Godzilla made it onto this the list with the unknown gender.","c0b05390":"# Data Preparation"}}