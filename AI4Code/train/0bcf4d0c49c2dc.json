{"cell_type":{"6fb1ab0d":"code","cafb53da":"code","38a091ce":"code","b38aef34":"code","bce9509e":"code","75c66f6b":"code","f4c70d68":"code","d6296ab8":"code","8c4366a2":"code","070923fa":"code","b4b8eabb":"code","64bba423":"code","9b1f336f":"code","0a5f7a07":"code","fe3ea2eb":"code","ab5f5793":"code","23743390":"code","15ea957d":"code","990f925c":"code","fa552d44":"code","e13c7861":"code","6b1b93b9":"code","8bf0b41c":"code","44ae2e15":"code","3eaa4090":"code","a19d1bc0":"code","ec864394":"code","7718d4ba":"code","d2a8bbb7":"code","e7663f44":"code","746f9f96":"code","eb9c4264":"markdown","39c1583d":"markdown"},"source":{"6fb1ab0d":"import pandas as pd\nimport lightgbm as lgb\nfrom sklearn.preprocessing import KBinsDiscretizer","cafb53da":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","38a091ce":"train[\"PassengerId\"].value_counts(dropna=False)","b38aef34":"train[\"Survived\"].value_counts(dropna=False)","bce9509e":"train[\"Name\"].value_counts(dropna=False)","75c66f6b":"train[\"Sex\"].value_counts(dropna=False)","f4c70d68":"train[\"SibSp\"].value_counts(dropna=False)","d6296ab8":"train[\"Parch\"].value_counts(dropna=False)","8c4366a2":"train[\"Cabin\"].value_counts(dropna=False)","070923fa":"train[\"Embarked\"].value_counts(dropna=False)","b4b8eabb":"train[train[\"Embarked\"].isna()]","64bba423":"train[\"Fare\"].value_counts(dropna=False).plot(kind=\"bar\", figsize=(25, 5))","9b1f336f":"train[\"Fare\"].max()","0a5f7a07":"train[\"Fare\"].min()","fe3ea2eb":"train[\"Ticket\"].value_counts(dropna=False)","ab5f5793":"train[\"Pclass\"].value_counts(dropna=False)","23743390":"train[\"Age\"].value_counts(dropna=False).plot(kind=\"bar\", figsize=(15, 5))","15ea957d":"train[\"Age\"].mean()","990f925c":"train[\"Age\"].median()","fa552d44":"train[(train[\"Pclass\"] == \"3\") & (train[\"Sex\"] == \"male\")][\"Age\"].mean()","e13c7861":"train[train[\"Pclass\"] == \"2\"][\"Age\"].median()","6b1b93b9":"train[train[\"Pclass\"] == \"3\"][\"Age\"].median()","8bf0b41c":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","44ae2e15":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain = train[~train[\"Embarked\"].isna()]\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\nage_pclass_1 = train.loc[train[\"Pclass\"] == 1][\"Age\"].median()\nage_pclass_2 = train[train[\"Pclass\"] == 2][\"Age\"].median()\nage_pclass_3 = train[train[\"Pclass\"] == 3][\"Age\"].median()\n\ntrain.loc[(train[\"Pclass\"] == 1) & (train[\"Age\"].isna()), \"Age\"] = age_pclass_1\ntrain.loc[(train[\"Pclass\"] == 2) & (train[\"Age\"].isna()), \"Age\"] = age_pclass_2\ntrain.loc[(train[\"Pclass\"] == 3) & (train[\"Age\"].isna()), \"Age\"] = age_pclass_3\n\ntest.loc[(test[\"Pclass\"] == 1) & (test[\"Age\"].isna()), \"Age\"] = age_pclass_1\ntest.loc[(test[\"Pclass\"] == 2) & (test[\"Age\"].isna()), \"Age\"] = age_pclass_2\ntest.loc[(test[\"Pclass\"] == 3) & (test[\"Age\"].isna()), \"Age\"] = age_pclass_3\n\nfare_pclass_1 = train.loc[train[\"Pclass\"] == 1][\"Fare\"].median()\nfare_pclass_2 = train.loc[train[\"Pclass\"] == 2][\"Fare\"].median()\nfare_pclass_3 = train.loc[train[\"Pclass\"] == 3][\"Fare\"].median()\n\ntrain.loc[(train[\"Pclass\"] == 1) & (train[\"Fare\"].isna()), \"Fare\"] = fare_pclass_1\ntrain.loc[(train[\"Pclass\"] == 2) & (train[\"Fare\"].isna()), \"Fare\"] = fare_pclass_2\ntrain.loc[(train[\"Pclass\"] == 3) & (train[\"Fare\"].isna()), \"Fare\"] = fare_pclass_3\n\ntest.loc[(test[\"Pclass\"] == 1) & (test[\"Fare\"].isna()), \"Fare\"] = fare_pclass_1\ntest.loc[(test[\"Pclass\"] == 2) & (test[\"Fare\"].isna()), \"Fare\"] = fare_pclass_2\ntest.loc[(test[\"Pclass\"] == 3) & (test[\"Fare\"].isna()), \"Fare\"] = fare_pclass_3\n\nage_binner = KBinsDiscretizer(int((train[\"Age\"].max() - train[\"Age\"].min()) \/ 5), encode=\"ordinal\")\ntrain[\"Age\"] = age_binner.fit_transform(train[\"Age\"].values.reshape(-1, 1))\ntest[\"Age\"] = age_binner.transform(test[\"Age\"].values.reshape(-1, 1))\n\nfare_binner = KBinsDiscretizer(int((train[\"Fare\"].max() - train[\"Fare\"].min()) \/ 10), encode=\"ordinal\")\ntrain[\"Fare\"] = fare_binner.fit_transform(train[\"Fare\"].values.reshape(-1, 1))\ntest[\"Fare\"] = fare_binner.transform(test[\"Fare\"].values.reshape(-1, 1))\n\nbad_features = [\"Cabin\", \"Name\", \"Ticket\", \"PassengerId\"]\ncat_features = [\"Pclass\", \"Sex\", \"Embarked\"]\n\nfor cat in cat_features:\n    train[cat] = train[cat].astype(str).astype(\"category\")\n    test[cat] = test[cat].astype(str).astype(\"category\")\n\ntrain = train.drop(columns=bad_features, axis=1)\nX_train = train.drop(columns=[\"Survived\"], axis=1)\ny_train = train[\"Survived\"]","3eaa4090":"test[\"Age\"].value_counts(dropna=False).plot(kind=\"bar\", figsize=(15, 5))","a19d1bc0":"test[\"Fare\"].value_counts(dropna=False).plot(kind=\"bar\", figsize=(15, 5))","ec864394":"train.dtypes","7718d4ba":"clf = lgb.LGBMClassifier()\nclf.fit(X_train, y_train)","d2a8bbb7":"test[\"Survived\"] = clf.predict(test.drop(columns=bad_features, axis=1))","e7663f44":"test[[\"PassengerId\", \"Survived\"]].to_csv(\"gender_submission.csv\")","746f9f96":"test[\"Embarked\"].value_counts()","eb9c4264":"# # Train a model","39c1583d":"# # Exploring the data"}}