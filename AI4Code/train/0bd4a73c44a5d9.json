{"cell_type":{"38a8760f":"code","14c2bb71":"code","df475bf9":"code","5c403bb0":"code","a64e9256":"code","86a75548":"code","d2b541cf":"code","a749abb8":"code","2f68c64b":"code","a5922534":"code","8333608d":"code","facf76e3":"code","6f2163d8":"code","8dde2362":"code","25cb9887":"code","773d7ae5":"code","a7563e82":"code","9cc2ab63":"code","999235d9":"code","e0b2ece6":"code","10b995ca":"code","a067213a":"code","fc4a7ad0":"code","e26fe2f4":"code","3ed9d350":"code","a23ed6a5":"markdown","c252700a":"markdown","c72d4414":"markdown","2f0e95f1":"markdown","7dbf0205":"markdown","abc2520e":"markdown","ebe30698":"markdown","c5084471":"markdown","087b595f":"markdown","c61db9da":"markdown","b5580eff":"markdown","368b95d8":"markdown","73be5559":"markdown"},"source":{"38a8760f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nfrom sklearn.datasets import make_blobs\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","14c2bb71":"marketing_campaign_data=pd.read_csv(\"..\/input\/customer-personality-analysis\/marketing_campaign.csv\",sep='\\t')","df475bf9":"marketing_campaign_data.head()","5c403bb0":"df_customer=marketing_campaign_data.iloc[:,:]\ndf_customer","a64e9256":"df_customer['Age of Customer']=[2021-df_customer['Year_Birth'][i] for i in range(len(df_customer))]\ndf_customer.head()","86a75548":"age_0to50=len(df_customer[(df_customer['Age of Customer']>0)&(df_customer['Age of Customer']<=50)])\nage_50to75=len(df_customer[(df_customer['Age of Customer']>50)&(df_customer['Age of Customer']<=75)])\nage_75plus=len(df_customer[df_customer['Age of Customer']>75])\nl1=[\"0-50 Years\",\"50-75 Years\",\"75+ Years\"]\nl2=[age_0to50,age_50to75,age_75plus]\nage_df=pd.DataFrame({\"Age Bracket\":l1,\"Count\":l2})\nage_df\n\nplt.bar(age_df['Age Bracket'],age_df['Count'])\nplt.title(\"Count of Customers in different Age Brackets\")\nplt.xlabel(\"Age Bracket\")\nplt.ylabel(\"Count\")\n\nplt.show()","d2b541cf":"ed_df=df_customer.groupby(['Education'])['ID'].count()\ned_df","a749abb8":"for i in range(len(df_customer['Marital_Status'])):\n    if(df_customer['Marital_Status'][i]=='Single' or df_customer['Marital_Status'][i]=='Divorced' or df_customer['Marital_Status'][i]=='Widow' or df_customer['Marital_Status'][i]=='Alone' or df_customer['Marital_Status'][i]=='Absurd' or df_customer['Marital_Status'][i]=='YOLO'):\n        df_customer['Marital_Status'][i]=1\n    elif(df_customer['Marital_Status'][i]=='Together' or df_customer['Marital_Status'][i]=='Married' ):\n        df_customer['Marital_Status'][i]=2\n\n#df_customer['Number of Family Members']=\ndf_customer['Number of Family Members']=[df_customer['Marital_Status'][i]+df_customer['Teenhome'][i]+df_customer['Kidhome'][i] for i in range(len(df_customer))]\ndf_customer.head()","2f68c64b":"print('Maximum Yearly Income = ',max(df_customer['Income']))\nprint('Minimum Yearly Income = ',min(df_customer['Income']))\n\nprint(\"************************************************\")\n\n#This means that if the income remains constant then for 2 yrs we can say that the income will be double\n\nprint('Maximum two-Yearly Income = ',2*max(df_customer['Income']))\nprint('Minimum Two-Yearly Income = ',2*min(df_customer['Income']))\n\n","a5922534":"best_prod=df_customer.iloc[:,9:15]\ndict(best_prod.iloc[0])","8333608d":"# Finding the 1st and 2nd Best product\ndf_customer['1st Best Product']=pd.Series()\ndf_customer['2nd Best Product']=pd.Series()\nbest_prod=df_customer.iloc[:,9:15]\nbest_prod=best_prod.rename(columns={'MntWines':1,'MntFruits':2,'MntMeatProducts':3,\n                                    'MntFishProducts':4,'MntSweetProducts':5,'MntGoldProds':6})\nfor i in range(len(best_prod)):\n    d=dict(best_prod.iloc[i])\n    \n    m=max(d,key=d.get)\n    df_customer['1st Best Product'].iloc[i]=int(m)\n    del d[m]\n    df_customer['2nd Best Product'].iloc[i]=int(max(d,key=d.get))\ndf_customer.head()","facf76e3":"# Finding the number of campaigns\nc=0\ndf_customer['Number of Campaigns Needed']=pd.Series()\ncampaign=df_customer.loc[:,['AcceptedCmp1','AcceptedCmp2','AcceptedCmp3'\n                    ,'AcceptedCmp4','AcceptedCmp5','Response']]\ncampaign=campaign.rename(columns={'Response':\"AcceptedCmp6\"})\n\nfor i in range(len(campaign)):\n    d=dict(campaign.iloc[i])\n    for j in range(len(d)):\n        if(d['AcceptedCmp{}'.format(j+1)]==0):\n            c+=1\n        else:\n            break\n    df_customer['Number of Campaigns Needed'].iloc[i]=c\n    c=0\ndf_customer.head()\n\n    ","6f2163d8":"# Clustering Dataset\n\ndf_clustering=df_customer.loc[:,['Age of Customer','Number of Family Members','1st Best Product'\n                    ,'2nd Best Product','Number of Campaigns Needed','NumWebPurchases'\n                                ,'NumCatalogPurchases','NumStorePurchases']]\ndf_clustering\n","8dde2362":"# Using a scaler to standardize the values in the feature set\n\nscaler = StandardScaler()\nscaled_features = scaler.fit_transform(df_clustering)","25cb9887":"scaled_features","773d7ae5":"kmeans_kwargs = {\n   \"init\": \"random\",\n   \"n_init\": 10,\n   \"max_iter\": 300,\n   \"random_state\": 42,\n  }\n\nsse=[]\nfor k in range(1, 11):\n    kmeans = KMeans(n_clusters=k, **kmeans_kwargs)\n    kmeans.fit(scaled_features)\n    sse.append(kmeans.inertia_)\nplt.style.use(\"fivethirtyeight\")\nplt.plot(range(1, 11), sse)\nplt.xticks(range(1, 11))\nplt.xlabel(\"Number of Clusters\")\nplt.ylabel(\"SSE\")\nplt.show()","a7563e82":"kmeans=KMeans(3)\nkmeans.fit(df_clustering)\nidentified_clusters = kmeans.fit_predict(df_clustering)\ns=set(identified_clusters)\nl=list(s)\nprint(l)\nprint('*********************************')\nidentified_clusters","9cc2ab63":"kmeans.cluster_centers_","999235d9":"df_clustering['Clusters']=identified_clusters\n","e0b2ece6":"df_clustering.head()","10b995ca":"score=silhouette_score(scaled_features, kmeans.labels_)\nround(score,4)","a067213a":"cluster_0=df_clustering[df_clustering['Clusters']==0]\ncluster_1=df_clustering[df_clustering['Clusters']==1]\ncluster_2=df_clustering[df_clustering['Clusters']==2]","fc4a7ad0":"cluster_0.describe().transpose()","e26fe2f4":"cluster_1.describe().transpose()","3ed9d350":"cluster_2.describe().transpose()","a23ed6a5":"Now we come to the Income Column. This column helps to understand if the customer has the \"capacity to pay\". We can use the boxplot to understand the min and max income values.","c252700a":"The rounded SILHOUETTE SCORE of **0.0501** suggests that the clustering is good with overlapping clusters.","c72d4414":"Furthermore, the number of campaigns held by the company to get the customer to buy a product also makes it important to understand the customer's product interest which affects buying decision.","2f0e95f1":"Here we can see that most of the customers are Graduates and pHD holders which means that they can better understand the product if it is marketed in a proper way by the company. Coming to the next columns which are Marital Status,KidHome,TeenHome we can get an idea of the family or close relatives of the particular customer. This will help to bifurcate customers based on the headcounts in the family and the total yearly income of that customer considering the family.","7dbf0205":"So now we do this :\n1. We find out the 1st and 2nd best product based on the amount spent.\n2. We find out the number of campaigns held by the company to get the customer\n3. Number of web purchases made by the customer\n\nAfter doing this we merge it into a dataset having features such as Age, Number of Family Members,1st Best, 2nd Best, Number of campaigns, Number of Web purchases made.\n\nThe clustering will be done into 3 classes namely,\"Lovely Product\",\"Maybe Likes Product\", \"Not at all likes Product\".","abc2520e":"We can solve this problem using three prong strategy that is :\n\n* Extrapolate all the columns in the data and understand its meaning.\n* Take out the required feature columns after condensing the initial dataset.\n* Applying the clustering algortihm.\n\nLet us first deep dive into the data we have and bring out some noteworthy aspects of it to light.","ebe30698":"From the above graph it is evident that after k=2 the graph goes continuous. Hence we can say k=2 or k=3. To be on safer side I will take it as k=3.","c5084471":"Now we will be performing the clustering on this dataset to get <br>\n{0:\"Lovely Product\",<br>\n 1:\"Maybe Likes Product\",<br>\n 2:\"Not at all likes Product\"}","087b595f":"The underlying problem statement states that the company wants to know about the various customer segments for marketing its different products. Furthermore, an **unsupervised ML clustering algorithm** can be used to identify the different customer segments for different product clusters.","c61db9da":"This marks the end of the notebook with clusters being identified correctly as specified above that is<br><br>\n{0:\"Lovely Product\",<br><br>\n1:\"Maybe Likes Product\",<br><br>\n2:\"Not at all likes Product\"}\n","b5580eff":"From the above graph we can conclude that the dataset contains more customers in 50-75 Age bracket than the other two. Now coming to the next column which is the Education Column. Education of the customer defines how the person perceives and understands the product.","368b95d8":"The dataset signifies that there is a very high fluctuation in the Income Column that is from thousands to lakhs. Now coming to the product columns. The customer's product interest is probabilistically evident when the Amount Spent on that product is higher than others. We can thus find out the 1st and 2nd best product for a particular customer using these parameters.","73be5559":"In this data, we can bifurcate it to understand every column well. So lets start with the Year_Birth column. Using this column we can find out the age of every customer which is an important data point for customer segmentation. Using the customer age we can create customer age brackets and find their counts."}}