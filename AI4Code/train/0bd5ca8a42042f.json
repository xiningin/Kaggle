{"cell_type":{"ea5a5dfa":"code","ac7eeb90":"code","ea39c4df":"code","31eb8761":"code","dd6cc83a":"code","67c798e0":"code","fff7d5d7":"code","bc6ae72f":"code","d908f3d6":"code","250655a7":"code","0751f5c0":"code","23c56a1f":"code","e6dc992c":"code","6e0a9613":"code","6b20633c":"code","15788d5c":"code","b9fd65d5":"code","bba82052":"code","521e8ca5":"code","154ad54b":"code","67dc5ab3":"code","405a5fab":"code","ba9f2f4a":"markdown","1d70128e":"markdown","536e13b3":"markdown","af2250b2":"markdown","cfc0d417":"markdown"},"source":{"ea5a5dfa":"!yes | apt-get install libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0\n!yes | apt-get install ffmpeg libav-tools\n!yes | apt-get install python-gnuradio-audio-portaudio\n!yes | pip install --upgrade pip\n!yes | pip install pyaudio","ac7eeb90":"import pyaudio # for reading & writing audio files\nimport struct # for unpacking chunks of audio for plotting\nimport IPython.display as ipd  # To play sound in the notebook\nimport wave # opening .wav files\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualizations\n%matplotlib inline\nimport os # operating system\n\nfrom os.path import join\n\n\nprint(os.listdir(\"..\/input\"))\n\nDATA_DIR = \"..\/input\/data\"\nFIRST_TRAIN_SAMPLE_DIR = join(DATA_DIR, \"TRAIN\", \"DR1\", \"FCJF0\")\n","ea39c4df":"wav_files = [n for n in os.listdir(FIRST_TRAIN_SAMPLE_DIR) if n.endswith(\"wav\")]\nprint(wav_files)","31eb8761":"ONE_BYTE = 1024\nCHUNK = ONE_BYTE * 2 # chunk is how many audio samples to process at a time\nFORMAT = pyaudio.paInt16 # 16 bit int sample size\nCHANNELS = 1 # mono audio\nRATE = 16000 # KHz # samples per second\nMODEL_INPUT_SECONDS = 1.5","dd6cc83a":"# open a .wav file\nfilepath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[0])\nwf = wave.open(filepath, 'rb')","67c798e0":"# read data\ndata = wf.readframes(nframes=CHUNK)\n# convert data to integers\ndata_ints = struct.unpack(str(2*CHUNK) + 'B', data)\n# convert to numpy array 8 bit ints between \ndata_ints = np.array(data_ints, dtype='int8') + 127","fff7d5d7":"data_ints","bc6ae72f":"print(\"wf.getsampwidth(): \", wf.getsampwidth(), \"...what is this???\")\nprint(\"wf.getnchannels(): \", wf.getnchannels(), \"mono\" if wf.getnchannels()==1 else \"stereo\")\nprint(\"wf.getframerate(): \", wf.getframerate(), \"KHz\")\nassert(wf.getframerate() == RATE) # test case\nprint(\"wf.getnframes(): \", wf.getnframes(), \"...should this match the end timestamp in .WRD?\")\nprint('len_data=',len(data), 'CHUNK=',CHUNK)\nprint(\"str(2*CHUNK)+'B'=\",str(2*CHUNK) + 'B')","d908f3d6":"fig, axis = plt.subplots()\naxis.plot(data_ints, '-')","250655a7":"print(wav_files)","0751f5c0":"print(wav_files[0])\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[0])\nipd.Audio(fpath)","23c56a1f":"print(wav_files[1])\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[1])\nipd.Audio(fpath)","e6dc992c":"print(wav_files[2])\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[2])\nipd.Audio(fpath)","6e0a9613":"print(wav_files[3])\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[3])\nipd.Audio(fpath)","6b20633c":"wrd_file = wav_files[4].replace('.WAV.wav', '') + '.WRD'\nwrd_path = join(FIRST_TRAIN_SAMPLE_DIR, wrd_file)\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[4])\nprint(wrd_path)\nprint(fpath)\n\n# print the .WRD file contents\nwrd_file = open(wrd_path)\nprint()\nprint(wrd_file.read())\nwrd_file.close()\n\n# output a GUI to playback audio\nipd.Audio(fpath)","15788d5c":"wav = wave.open(fpath)\nprint(\"Sampling (frame) rate = \", wav.getframerate())\nprint(\"Total samples (frames) = \", wav.getnframes())\nprint(\"Duration = \", wav.getnframes()\/wav.getframerate())\nwav.close()","b9fd65d5":"# Using scipy\nfrom scipy.io import wavfile\nrate, data = wavfile.read(fpath)\nprint(\"Sampling (frame) rate = \", rate)\nprint(\"Total samples (frames) = \", data.shape)","bba82052":"plt.plot(data, '-', );","521e8ca5":"wrd_file = wav_files[4].replace('.WAV.wav', '') + '.WRD'\nwrd_path = join(FIRST_TRAIN_SAMPLE_DIR, wrd_file)\nfpath = join(FIRST_TRAIN_SAMPLE_DIR, wav_files[4])\nprint(wrd_path)\nprint(fpath)\n\n# print the .WRD file contents\nwrd_file = open(wrd_path)\nprint()\nprint(wrd_file.read())\nwrd_file.close()\n\n# output a GUI to playback audio\nipd.Audio(fpath)","154ad54b":"plt.plot(data, '-', );\nfont = {'size':24, 'weight':'bold', 'rotation':90, 'color':'w','backgroundcolor':'k'}\nplt.text(2260, 0, 'critical',fontdict=font)\nplt.text(7895, 1000, 'equipment',fontdict=font)\nplt.text(13781, 0, 'needs',fontdict=font)\nplt.text(18101, 0, 'proper',fontdict=font)\nplt.text(23628, 2000, 'maintenance',fontdict=font)\nplt.show()","67dc5ab3":"plt.plot(data, '-', );\nfont = {'size':24, 'weight':'bold', 'rotation':90}\nplt.text(2260, 0, 'critical',fontdict=font)\nplt.text(7895, 1000, 'equipment',fontdict=font)\nplt.text(13781, 0, 'needs',fontdict=font)\nplt.text(18101, 0, 'proper',fontdict=font)\nplt.text(23628, 2000, 'maintenance',fontdict=font)\nplt.show()","405a5fab":"plt.plot(data, '-', );\nplt.show()","ba9f2f4a":"# This tutorial is the BEST\n* https:\/\/www.kaggle.com\/fizzbuzz\/beginner-s-guide-to-audio-data","1d70128e":"# Put it all together","536e13b3":"# Let's open this file with `wave` library","af2250b2":"# `wave` is also nicely abstracted in scipy","cfc0d417":"# These tutorials are nice\n* https:\/\/youtu.be\/AShHJdSIxkY\n* https:\/\/youtu.be\/Qf4YJcHXtcY"}}