{"cell_type":{"303a5c4f":"code","8038b98f":"code","9afb755d":"code","2a190d30":"code","629b4a1a":"code","fc8380bf":"code","32e2acbd":"code","db4bc6fb":"code","7831cd78":"code","22c87251":"code","69f0dc3c":"code","f5836b16":"code","925cef9a":"code","04e2d648":"code","618febb9":"code","cb7867de":"markdown","74961894":"markdown","32ea23e5":"markdown","d71bf691":"markdown","a359b424":"markdown","e0373e5e":"markdown","789b285f":"markdown","47aaf012":"markdown","acc68399":"markdown","305e3711":"markdown","1481569e":"markdown","f1eb413f":"markdown","bb9a9a5b":"markdown","df316314":"markdown","8706cb49":"markdown","11677776":"markdown","030b9a84":"markdown"},"source":{"303a5c4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport missingno as miss\n\n%matplotlib inline\n\ndf = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv', index_col=0)\ndf.head()","8038b98f":"df.head(10)","9afb755d":"df.info()","2a190d30":"df.isnull().sum()","629b4a1a":"miss.matrix(df)\nplt.show()","fc8380bf":"miss.heatmap(df)\nplt.show()","32e2acbd":"df.groupby(['region_2']).mean()","db4bc6fb":"region_group = df.groupby('region_2').mean().reset_index('region_2')\nregions = region_group['region_2']\nprice = region_group['price']\npoints = region_group['points']\n\nfig, ax1 = plt.subplots()\n\nax2 = ax1.twinx()\nax1.bar(regions, price)\nax2.plot(regions, points, color='green')\n\nax1.set_xlabel('Region')\nax1.set_ylabel('Price ($)', color='g')\nax2.set_ylabel('Points', color='green')\nax1.set_xticklabels(regions, rotation='vertical', size=8)\n\nplt.show()","7831cd78":"def get_year(title):\n    title = title.split()\n    for ele in title:\n        if ele.isnumeric() and 1920 <= int(ele) <= 2020:\n            return ele\n\n\ndf['year'] = df['title'].apply(get_year) ","22c87251":"df.head()","69f0dc3c":"df.groupby(['year']).mean().astype(int).tail(10)","f5836b16":"year_group = df.groupby('year').mean().reset_index('year')\nyears = year_group['year']\nprice = year_group['price']\npoints = year_group['points']\n\nfig, ax1 = plt.subplots(figsize=(50, 25))\n\nax2 = ax1.twinx()\nax1.bar(years, price)\nax2.plot(years, points, color='green')\n\nlabel_format = '{:.0f}'\n\nax1.set_ylabel('Price ($)', size=30)\nax1.set_xlabel('Years', size=30)\nax2.set_ylabel('Points', size=30, color='g')\n\nax1.set_xticklabels(years, size=25, rotation=45)\nax1.set_yticks(ax1.get_yticks().tolist())\nax1.set_yticklabels([label_format.format(x) for x in ax1.get_yticks().tolist()], fontsize=30)\nax2.set_yticks(ax2.get_yticks().tolist())\nax2.set_yticklabels([label_format.format(x) for x in ax2.get_yticks().tolist()], fontsize=30)\nplt.show() \n","925cef9a":"df['description'] = df['description'].apply(lambda string: string.replace(',', ' '))\ndf['keywords'] = df['description'].apply(lambda string: string.split())\ndf['keywords'] = df['keywords'].map(lambda x: list(map(str.lower, x)))\n\nimport nltk\nfrom nltk.stem import WordNetLemmatizer\nfrom nltk.corpus import stopwords\n\ntokenizer = nltk.tokenize.WhitespaceTokenizer()\nlemmatizer = WordNetLemmatizer()\nstop_words = set(stopwords.words('english'))\n\ndef lemmatize_text(text):\n    return [lemmatizer.lemmatize(w) for w in text if w not in stop_words and w.isalpha()]\n\ndf['keywords'] = df['keywords'].apply(lemmatize_text)","04e2d648":"df.head()","618febb9":"def recommendation(title):\n    wine_column = df.loc[df['title'] == title]\n    index = df.loc[df['title'] == title].index.values.astype(int)[0] \n    df['points'] = [len(list(set(df['keywords'][index]) & set(df['keywords'][i]))) for i in range(len(df))]\n    return(df.sort_values(by='points', ascending=False).drop(['taster_name', 'taster_twitter_handle'], axis=1).iloc[1:].head(5))\n\nrecommendation('B\u00e9res 2014 Furmint (Tokaj)')","cb7867de":"**We can see that:**\n\n*     designation column has missing values with variation in occurrence\n*     region_2 column are almost filled with missing values with variation in occurrence\n*     price, region_1, taster_name and taster_twitter_handle column have few missing values with variation in occurrence.\n","74961894":"So, there is a strong relation between the region and the price of the wine. Probably it depends on the average points of wines as well. Lets visualise it to see it more clear.","32ea23e5":"In addition to the heatmap, there is a bar on the right side of this diagram. This is a line plot for each row's data completeness. The sparkline at right summarizes the general shape of the data completeness and points out the rows with the maximum and minimum nullity in the dataset.","d71bf691":"**The *missingno* correlation heatmap measures nullity correlation: how strongly the presence or absence of one variable affects the presence of another:**\n\nThis heatmap visualization immediately tells us such tendency. Also, if more than 2 columns have a correlation in missing value locations, such correlation will be visualized. ","a359b424":"Nullity correlation ranges from -1 (if one variable appears the other definitely does not) to 0 (variables appearing or not appearing have no effect on one another) to 1 (if one variable appears the other definitely also does)","e0373e5e":"We will create a recommedation system by keywords in description of wine, and recommend the most similar. First of all, we should transform descriptions into lists and remove stopwords. Then compare choosed wine description to all others in the dataframe.","789b285f":"**Add a year column**","47aaf012":"**Confirm the number of missing values in each column.**","acc68399":"Lets visualise a relation between a vintage, expert point and a price.","305e3711":"# Heatmap. Checking the correlation bettween missing cells.","1481569e":"# Finding Null and Correlation","f1eb413f":"# Lets see how the price depends on the region where a wine was produced.","bb9a9a5b":"**The first method is by *missingno* modul.**","df316314":"# And finally lets create a recommendation module by description","8706cb49":"The next single-line code will visualize the location of missing values. We need to know if the occurrence of missing values is sparsely located or located as a big chunk.","11677776":"As a result, we see that there is a strong relation between regions, points and prices of wines. We can say that wines from region Napa have the highest points from tasters and they're the most expensive. If you're looking for the best price\/quality value, you should consider buying wines from this list from South Coast, Sonoma or Willamette Valley","030b9a84":"# Correlation between a vintage, expert points and a price"}}