{"cell_type":{"3b9cd98c":"code","ad22d7f0":"code","1ade3b0e":"code","ff828ae4":"code","c0f06365":"code","08bf521a":"code","f6dee867":"code","5cdc9bb9":"code","8346c3f8":"code","b1842ba4":"code","040f2a2c":"code","443eda14":"markdown","4575c993":"markdown","32e8c763":"markdown","c768d797":"markdown","03f62a61":"markdown","14fb07ff":"markdown","1bd5b86f":"markdown","d562aea2":"markdown","4db8cc79":"markdown"},"source":{"3b9cd98c":"import tensorflow as tf\nimport tensorflow_hub as hub\nimport numpy as np \nimport pandas as pd\nimport nltk\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","ad22d7f0":"## train_data\ntrain_data = pd.read_csv('\/kaggle\/input\/commonlitreadabilityprize\/train.csv')\n\n##test_data\ntest_data = pd.read_csv('\/kaggle\/input\/commonlitreadabilityprize\/test.csv')\n\n\ntrain_data.head()","1ade3b0e":"len_v = train_data['excerpt'].apply(nltk.word_tokenize).apply(lambda x : len(x))\nlen_v.head()","ff828ae4":"\nplt.figure(figsize=(10,10))\nsns.histplot(len_v)","c0f06365":"X_train,X_test,y_train,y_test = train_test_split(train_data['excerpt'],train_data['target'],random_state=42)","08bf521a":"model = tf.keras.models.Sequential()\nmodel.add(hub.KerasLayer(\"\/kaggle\/input\/universalsentenceencoder\/\",input_shape=[],trainable=False,dtype=tf.string))\nmodel.add(tf.keras.layers.Dense(128))\nmodel.add(tf.keras.layers.Dense(64))\nmodel.add(tf.keras.layers.Dense(32))\nmodel.add(tf.keras.layers.Dense(1))\n\nmodel.compile(optimizer='adam',loss = \"mean_squared_error\")","f6dee867":"model2 = tf.keras.models.Sequential()\nmodel2.add(hub.KerasLayer(\"\/kaggle\/input\/universalsentenceencoderlarge\/\",input_shape=[],trainable=False,dtype=tf.string))\nmodel2.add(tf.keras.layers.Dense(128))\nmodel2.add(tf.keras.layers.Dense(64))\nmodel2.add(tf.keras.layers.Dense(32))\nmodel2.add(tf.keras.layers.Dense(1))\nmodel2.compile(optimizer='adam',loss = \"mean_squared_error\")","5cdc9bb9":"model.fit(X_train,y_train,epochs=20)\npreds_dan = model.predict(X_test)","8346c3f8":"model2.fit(X_train,y_train,epochs=20)\npreds_trans = model.predict(X_test)","b1842ba4":"print(\"RMSE for DAN Model: \" + str(np.sqrt(mean_squared_error(y_test,preds_dan))))\n\nprint(\"RMSE for Transformer Model: \" + str(np.sqrt(mean_squared_error(y_test,preds_trans))))","040f2a2c":"test_data['target'] = model.predict(test_data['excerpt'])\ntest_data.drop(['url_legal','license','excerpt'],axis=1,inplace=True)\n\ntest_data.to_csv('\/kaggle\/working\/submission.csv',index=False)\ntest_data.head()","443eda14":"#### Transformer Model","4575c993":"# <center>CommonLit Readability Prize<\/center>\n\n\n**To-Do**\n* To predict the complexity of reading passages for grade 3-12 classroom use.\n\n**About data** -\n> * id - unique ID for excerpt\n> * url_legal - URL of source - this is blank in the test set.\n> * license - license of source material - this is blank in the test set.\n> * excerpt - text to predict reading ease of\n> * target - reading ease\n> * standard_error - measure of spread of scores among multiple raters for each excerpt. Not included for test data.\n\n\n**Special Notes** -\n* url_legal, license and standard error are not available for test data.","32e8c763":"* **We can see that both models have approximately same RMSE. It does not make sense to waste resources on the transformer one.**","c768d797":"### Imports","03f62a61":"### Universal Sentence Encoder - \n\n* USE encodes text into some n-dimensional vectors, which then can be used for text classification, clustering etc.\n* It comes with two variations i.e. one trained with Transformer encoder and other trained with Deep Averaging Network (DAN). \n* Tf-Hub provides both versions. In this notebook, I will be comparing both models.\n* Best part about USE is, it can convert paragraphs to embeddings as well.\n\n","14fb07ff":"#### DAN model","1bd5b86f":" ### **If you find this useful, please upvote my work.**","d562aea2":"### Histogram of token length","4db8cc79":"### Reading Data"}}