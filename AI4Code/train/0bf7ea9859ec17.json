{"cell_type":{"ddac5122":"code","08479a09":"code","445fa355":"code","ecfb082a":"code","612f9b9e":"code","2111dfbb":"code","3a96e23d":"code","3bff2b5c":"code","17a81dea":"code","2ae4f077":"code","21c82b6a":"code","3cad5ec7":"code","05aa9677":"code","5017a384":"markdown","d89dfb44":"markdown","18c4c1be":"markdown","495677c2":"markdown","ebcc8dc3":"markdown","cce343d9":"markdown","8ddc069f":"markdown","96cd9288":"markdown"},"source":{"ddac5122":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport plotly as py\nimport plotly.graph_objs as go\nfrom sklearn.cluster import KMeans\nimport warnings\n\n","08479a09":"df = pd.read_csv(r'..\/input\/Mall_Customers.csv')\ndf.head()","445fa355":"plt.figure(1 , figsize = (16 , 16))\nn = 0\nfor x in ['Age' , 'Annual Income (k$)' , 'Gender']:\n    n += 1\n    plt.subplot(3 , 1 , n)\n    sns.boxplot(x=x, y='Spending Score (1-100)', data=df, whis='range')\n    plt.title('Distplot of {}'.format(x))","ecfb082a":"df_p = df.drop(['CustomerID'], axis=1)\ndf_p['Gender'] = df_p['Gender'].factorize()[0]","612f9b9e":"from sklearn.manifold import TSNE\ntsn = TSNE()\nres_tsne = tsn.fit_transform(df_p)","2111dfbb":"from sklearn.cluster import AgglomerativeClustering as AggClus\nclus_mod = AggClus(n_clusters = 5) # no reason, just a try\nassign = clus_mod.fit_predict(df_p)\nplt.figure(figsize=(8,8))\nsns.set(style='whitegrid',palette='pastel')\ncmap = sns.cubehelix_palette(dark=.5, light=.5, as_cmap=True)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=assign, palette='Paired');","3a96e23d":"from scipy.cluster.hierarchy import dendrogram, ward\nsns.set(style='whitegrid')\nplt.figure(figsize=(8,8))\nlink = ward(res_tsne)\ndendrogram(link)\nax = plt.gca()\nbounds = ax.get_xbound()\nax.plot(bounds, [30,30],'--', c='m')\nax.plot(bounds,'--', c='c')","3bff2b5c":"X1 = df[['Age' , 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 7):\n    algorithm = (KMeans(n_clusters = n ,init='k-means++', n_init = 6 ,max_iter=300, \n                        tol=0.0001,  random_state= 101  , algorithm='elkan') )\n    algorithm.fit(X1)\n    inertia.append(algorithm.inertia_)","17a81dea":"plt.figure(1 , figsize = (16 ,6))\nplt.plot(np.arange(1 , 7) , inertia , 'o')\nplt.plot(np.arange(1 , 7) , inertia , '-' )\nplt.xlabel('Number of Clusters') , plt.ylabel('Inertia')\nplt.show()","2ae4f077":"algorithm = (KMeans(n_clusters = 6 ,init='k-means++', n_init = 6 ,max_iter=300, \n                        tol=0.0001,  random_state= 111  , algorithm='elkan') )\nalgorithm.fit(X1)\nlabels1 = algorithm.labels_\ncentroids1 = algorithm.cluster_centers_\n\nh = 0.02\nx_min, x_max = X1[:, 0].min() - 1, X1[:, 0].max() + 1\ny_min, y_max = X1[:, 1].min() - 1, X1[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\nZ = algorithm.predict(np.c_[xx.ravel(), yy.ravel()]) \n\n","21c82b6a":"plt.figure(1 , figsize = (16 , 6) )\nplt.clf()\nZ = Z.reshape(xx.shape)\nplt.imshow(Z , interpolation='nearest', \n           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n           cmap = plt.cm.hsv, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Age' ,y = 'Spending Score (1-100)' , data = df , c = labels1 , \n            s = 200 )\nplt.scatter(x = centroids1[: , 0] , y =  centroids1[: , 1] , s = 200 , c = 'w' )\nplt.ylabel('Spending Score (1-100)') , plt.xlabel('Age')","3cad5ec7":"X2 = df[['Annual Income (k$)' , 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 7):\n    algorithm = (KMeans(n_clusters = n ,init='k-means++', n_init = 6 ,max_iter=300, \n                        tol=0.0001,  random_state= 101  , algorithm='elkan') )\n    algorithm.fit(X2)\n    inertia.append(algorithm.inertia_)\n                   \n    \nalgorithm = (KMeans(n_clusters = 6 ,init='k-means++', n_init = 6 ,max_iter=300, \n                        tol=0.0001,  random_state= 101  , algorithm='elkan') )\nalgorithm.fit(X2)\nlabels2 = algorithm.labels_\ncentroids2 = algorithm.cluster_centers_\n\n\nh = 0.02\nx_min, x_max = X2[:, 0].min() - 1, X2[:, 0].max() + 1\ny_min, y_max = X2[:, 1].min() - 1, X2[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\nZ2 = algorithm.predict(np.c_[xx.ravel(), yy.ravel()]) ","05aa9677":"plt.figure(1 , figsize = (16 , 6) )\nplt.clf()\nZ2 = Z2.reshape(xx.shape)\nplt.imshow(Z2 , interpolation='nearest', \n           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n           cmap = plt.cm.Set3, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Annual Income (k$)' ,y = 'Spending Score (1-100)' , data = df , c = labels2 , \n            s = 200 )\nplt.scatter(x = centroids2[: , 0] , y =  centroids2[: , 1] , s = 200 , c = 'w' )\nplt.ylabel('Spending Score (1-100)') , plt.xlabel('Annual Income (k$)')","5017a384":"### The optimal number of cluster\n","d89dfb44":"\n\n\n![](https:\/\/www.cs.us.es\/~fran\/curso_unia\/_images\/clustering_techniques.png)\n\n**A question always make managers painful : How to deliver the right message to right audience?**\n\n* First, you need to know your product \/ service.\n* Second, and even more crucial, you need to understand your customers.\n\n**It's time to explore !**\n\nTarget:\n1. Find the behaviour patterns\n2. Find the best cluster numbers\n3. Cluster\n","18c4c1be":"#### 1. Segment Age and Spending Score","495677c2":"#### 2. Segment Annual Income and Spending Score\n","ebcc8dc3":"![I adore the tidy and intuitive](https:\/\/frankdatascience.files.wordpress.com\/2018\/09\/1_2bpc6k2c4ojhp00ijxbska.jpeg?w=1023)","cce343d9":"#### The 6 is the lucky number !","8ddc069f":"**It shows signicifant differences, I can see 6 differnt patterns at least.**\n\n1. Customers under 40 years old have higher spending score and the higher range.\n2. Customers between 40 and 50 years old have lower spending score and even the median is 43 - 44, the general top score is 60,still much lower than youngs.\n3. Customers are above 50 years old are quite versatile, not easy to describe the habits.\n4. Lower income customers (< 40k) have strong purchasing demand and higher spending score\n5. Middle Income Customers (40k - 50k) are quite conservative in purchasing.\n6. High Income Customers (>50k) have strong purchasing ability and high spending score.\n\nThis is very interesting and reminds me '**the poor middle class**'. \n*  You are a poor, you don't give a shit and try your best to buy best things you can afford for yourself.\n*  You are a middle class, tons of bills need to pay to maintain a middle class life and you have to calculate every penny on entertaining yourself.\n* You are a rich, you can buy whatever goods you want to buy.","96cd9288":"## K-Mean Clustering"}}