{"cell_type":{"5cbcdc62":"code","90163135":"code","f8d7858c":"code","583d2c77":"code","2d3d515a":"code","bf3b7e89":"code","b8304659":"code","42358160":"code","4eaa5653":"code","82fe1d15":"code","6c158ce7":"code","67c3a6e8":"code","c3c4de3a":"code","b7559afe":"code","8ad5733c":"code","ea1b257d":"code","edbfd08c":"code","580ab1a8":"code","25633aaf":"code","baade902":"code","ecec124b":"markdown","ebea1aa2":"markdown","2cc8883c":"markdown","48ff449e":"markdown"},"source":{"5cbcdc62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90163135":"# Reading data with information of districts and products\ndistrict = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\nproducts = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')","f8d7858c":"display(district.info(), district.isna().any())","583d2c77":"display(products.info(), products.isna().any())","2d3d515a":"display(len(district), district.head(), len(products), products.head())","bf3b7e89":"print(district['state'].unique(), len(district['state'].unique()))","b8304659":"district['state'].value_counts()","42358160":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nsns.set_palette('colorblind')\n\nplt.figure(figsize=(14,8))\ng = sns.countplot(x='state', data=district, hue='locale')\ng.set(xlabel='State', ylabel='Count')\nplt.legend(loc='center right')\nplt.xticks(rotation=90)\nplt.show()","4eaa5653":"g2 = sns.catplot(y='state', data=district, kind='count', col='locale', col_wrap=2, sharey=False, sharex=False,\n                 height=5, aspect=1.5, color='orange')\ng2.set_xticklabels(rotation=0)\ng2.set(xlabel='Count', ylabel='State')\nplt.show()\nplt.clf()","82fe1d15":"print(products['Primary Essential Function'].unique(), len(products['Primary Essential Function'].unique()))","6c158ce7":"products['Primary Essential Function'].value_counts()","67c3a6e8":"plt.figure(figsize=(18,10))\ng3 = sns.countplot(x='Primary Essential Function', data=products, hue='Sector(s)')\ng3.set(xlabel='Primary Essential Function', ylabel='Count')\nplt.xticks(rotation=90)\nplt.legend(title='Sectors', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","c3c4de3a":"# Providers that provide more than 3 products\nproviders = products.groupby('Provider\/Company Name').filter(lambda x: len(x) > 1)\ndisplay(providers, len(providers))","b7559afe":"plt.figure(figsize=(18,10))\ng4 = sns.countplot(x='Provider\/Company Name', data=providers, hue='Sector(s)', order=providers['Provider\/Company Name'].value_counts().index)\ng4.set(xlabel='Primary Essential Function', ylabel='Count')\nplt.xticks(rotation=90)\nplt.legend(title='Sectors', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","8ad5733c":"# Replacing characters in disctricts columns\ncols_to_clean = ['pct_black\/hispanic', 'pct_free\/reduced', 'county_connections_ratio', 'pp_total_raw']\nfor col in cols_to_clean:\n    for i in range(len(district[col])):\n        if str(district.iloc[i][col]) != 'nan':\n            district[col].loc[i] = (district[col].loc[i]).rstrip(\"[\") + \"]\"\ndistrict.head()","ea1b257d":"plt.figure(figsize=(18,8))\ng5 = sns.countplot(x='state', data=district, hue='pct_black\/hispanic', order=district.groupby('state').agg({'pct_black\/hispanic': 'count'}).sort_values(by='pct_black\/hispanic', ascending=False).index)\ng5.set(xlabel='State', ylabel='Number of districts')\nplt.xticks(rotation=90)\nplt.title('')\nplt.legend(title='Black\/Hispanic (percent)', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","edbfd08c":"plt.figure(figsize=(18,8))\ng6 = sns.countplot(x='state', data=district, hue='pct_free\/reduced', order=district.groupby('state').agg({'pct_free\/reduced': 'count'}).sort_values(by='pct_free\/reduced', ascending=False).index)\ng6.set(xlabel='State', ylabel='Number of districts')\nplt.xticks(rotation=90)\nplt.title('')\nplt.legend(title='Students in the districts eligible for \\nfree or reduced-price (percent)', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","580ab1a8":"plt.figure(figsize=(18,8))\ng7 = sns.countplot(x='state', data=district, hue='county_connections_ratio', order=district.groupby('state').agg({'county_connections_ratio': 'count'}).sort_values(by='county_connections_ratio', ascending=False).index)\ng7.set(xlabel='State', ylabel='Number of districts')\nplt.xticks(rotation=90)\nplt.title('')\nplt.legend(title='Residential fixed high-speed connections over \\n200 kbps in at least one direction\/households', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","25633aaf":"plt.figure(figsize=(18,8))\ng8 = sns.countplot(x='state', data=district, hue='pp_total_raw', order=district.groupby('state').agg({'pp_total_raw': 'count'}).sort_values(by='pp_total_raw', ascending=False).index)\ng8.set(xlabel='State', ylabel='Number of districts')\nplt.xticks(rotation=90)\nplt.title('')\nplt.legend(title='Sum of local and federal \\nexpenditure', fontsize='large', loc='center right')\nplt.show()\nplt.clf()","baade902":"g9 = district['pp_total_raw'].value_counts().plot.pie(figsize=(10,10))","ecec124b":"#### Graphics for district DataFrame","ebea1aa2":"# Exploring the Categorical Variables","2cc8883c":"There is no reason to delete the NaN data within the district DataFrame, because there is a csv related to each id.","48ff449e":"### Graphic EDA"}}