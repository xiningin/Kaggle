{"cell_type":{"8be2d47f":"code","33d45e2b":"code","9956fa89":"code","03521209":"code","35b57226":"code","26ae645a":"code","4b664520":"code","0845bf7c":"code","92d10dec":"code","8b8eb61d":"code","437d0b85":"code","95a46114":"code","dbc40568":"code","99d65a20":"code","e870eb45":"code","0ee27514":"code","8ca2f240":"code","5c61cebb":"code","1beeaed3":"code","f20cf09b":"code","2430aa76":"code","bdf9766d":"code","ad01b5ab":"code","64256af7":"code","a675a0a5":"code","160c5972":"code","94c8cc1d":"code","4f61295e":"code","1e354da5":"code","08d81506":"code","11a33d3e":"code","d7e81a4c":"code","6971f63a":"code","6f175bba":"code","ad6c705e":"code","c9a81fbf":"markdown","373047d5":"markdown","34ac76a3":"markdown","0666abe6":"markdown","b9466aed":"markdown","2b37a7df":"markdown","f7055602":"markdown","67685586":"markdown","fea423a1":"markdown","5c6a8d4e":"markdown","377bb8dd":"markdown","fe333fd0":"markdown","a852eac4":"markdown","b2cbb5ba":"markdown","c77478e8":"markdown","6c297285":"markdown","fa60b6cf":"markdown","f400ccd0":"markdown","950be610":"markdown","5756c1a7":"markdown","a854038c":"markdown","f790027b":"markdown","f2bbf56d":"markdown","017c7031":"markdown","16294ec1":"markdown"},"source":{"8be2d47f":"import numpy as np \nimport pandas as pd\n\nimport geopandas as gpd\n\nimport folium\nfrom folium import Choropleth, Circle, Marker, Icon, Map, GeoJson\nfrom folium.plugins import HeatMap, MarkerCluster\n\npd.set_option(\"display.max_columns\", None)    ","33d45e2b":"address = pd.read_csv('..\/input\/address3\/address3.csv', sep=',', header=0, index_col=0)\ndata = pd.read_csv('..\/input\/madrid-real-estate-market\/houses_Madrid.csv', sep=',', header=0, index_col=0)\nhouses = pd.read_csv('..\/input\/housesclean\/madrid_houses_clean.csv', sep=',', header=0, index_col=0)","9956fa89":"print(address.shape, data.shape, houses.shape)","03521209":"address_map = pd.merge(address, houses, how='left', on='id')\naddress_map.head()","35b57226":"address_map.rename(columns={'latitude_x':'latitude', 'longitude_x': 'longitude'}, inplace=True)","26ae645a":"geo_data = pd.merge(address_map, data, how='left', on='id', suffixes=('', '_y'))\ngeo_data.head()","4b664520":"geo_data.drop(list(geo_data.filter(regex = '_y$')), axis=1, inplace=True)\ngeo_data.shape","0845bf7c":"geo_data.dropna(axis=1, how='all', inplace=True)","92d10dec":"geo_data.neighborhood_id.iloc[0]","8b8eb61d":"geo_data['mean_buy_price'] = geo_data.neighborhood_id.str.extract('(\\d+\\.\\d+)\\s\u20ac')\ngeo_data = geo_data.astype({'mean_buy_price': 'float64'})","437d0b85":"geo_data.info()","95a46114":"geo_data.drop(columns=['sq_mt_useful', 'is_exact_address_hidden', 'street_name', 'street_number', 'is_floor_under', 'neighborhood_id', 'operation', \n                      'is_rent_price_known', 'is_buy_price_known','house_type_id', 'is_accessible', 'is_parking_included_in_price', 'parking_price'], inplace=True)","dbc40568":"geo_data.notnull().sum()","99d65a20":"geo_data.head()","e870eb45":"map_1 = Map(location=[40.32,-3.69], tiles='cartodbpositron', zoom_start=10)\n#map_1","0ee27514":"garden_houses = geo_data[geo_data.has_garden.notnull()]\ngarden_houses.shape","8ca2f240":"for idx, row in garden_houses.iterrows():\n    if(row.has_pool == True):\n        Marker([row.latitude, row.longitude], popup=row.raw_address ,icon = Icon(color='green',icon='ok-sign'),tooltip='Click me!').add_to(map_1)\n    else:\n        Marker([row.latitude, row.longitude], popup=row.raw_address,icon = Icon(color='red',icon='exclamation-sign'),tooltip='Click me!').add_to(map_1)\n    ","5c61cebb":"map_1","1beeaed3":"casas = geo_data[geo_data.house_type == 2]\ncasas.shape","f20cf09b":"HeatMap(data=casas[['latitude', 'longitude']], radius=10).add_to(map_1)\n\nmap_1","2430aa76":"cheapest_flats = geo_data[(geo_data.buy_price < 180000) & (geo_data.is_renewal_needed == False)]\ncheapest_flats.shape[0]","bdf9766d":"map_2 = Map(location=[40.32,-3.69], tiles='openstreetmap', zoom_start=13)\n\nmc = MarkerCluster()\n\nfor idx, row in cheapest_flats.iterrows():\n    if row.energy_certificate > 3:\n        mc.add_child(Marker([row['latitude'], row['longitude']], tooltip=\"Price: \" + str(row['buy_price']) +\"\u20ac\", icon=Icon(color='green')))\n    else:\n        mc.add_child(Marker([row['latitude'], row['longitude']], tooltip=\"Price: \" + str(row['buy_price']) +\"\u20ac\", icon=Icon(color='red')))\n    \nmap_2.add_child(mc)\n\nmap_2","ad01b5ab":"map_3 = folium.Map(location=[40.32,-3.69], tiles='Stamen Toner', zoom_start=10)\n\ndef color_producer(mean_zone, mean_flat):\n    if mean_zone <= mean_flat:\n        return 'forestgreen'\n    else:\n        return 'darkred'\n\n# Add a bubble map to the base map\nfor idx, row in cheapest_flats.iterrows():\n    percentage = round((row['buy_price_by_area'] - row['mean_buy_price'])\/row['mean_buy_price']*100,2)\n    Circle(\n        location=[row['latitude'], row['longitude']], popup=(\"id: {} {}%\".format(int(row.id), percentage)),\n        radius=abs(percentage)*2.5,\n        color=color_producer(row['mean_buy_price'], row['buy_price_by_area'])).add_to(map_3)\n\nmap_3\n","64256af7":"map_4 = folium.Map(location=[40.32,-3.69], tiles='Stamen Toner', zoom_start=10)\n\ndef color_producer(house_type):\n    if house_type == 1: #flats\n        return 'forestgreen' \n    elif house_type == 2: #houses\n        return 'darkred'\n    elif house_type == 3: #studies\n        return 'darkblue'\n    elif house_type == 4: #duplex\n        return 'yellow'\n    else:\n        return 'Fuchsia' #top floor\n\nfor idx, row in geo_data.iterrows():\n    percentage = round((row['buy_price_by_area'] - row['mean_buy_price'])\/row['mean_buy_price']*100,2)\n    Circle(\n        location=[row['latitude'], row['longitude']], popup=(\"size: {} price: {}\".format(int(row.sq_mt_built), row.buy_price)),\n        radius=row.buy_price\/10000,\n        color=color_producer(row.house_type)).add_to(map_4)\n\nmap_4\n","a675a0a5":"schools = pd.read_csv('..\/input\/opcioneslinguisticas\/opciones_linguisticas.csv', sep=';', encoding='latin1')\nschools.head()","160c5972":"schools = schools[schools.centro_tipo_codigo == 42]\nschools = schools[['centro_codigo', 'centro_nombre', 'direccion_coor_x', 'direccion_coor_y', 'bilingue_idioma']]\nschools.shape","94c8cc1d":"schools.isnull().sum()","4f61295e":"schools.dropna(subset=['bilingue_idioma'], inplace=True)\nschools.reset_index(drop=True, inplace=True)\nschools.shape","1e354da5":"schools_map = gpd.GeoDataFrame(schools, geometry=gpd.points_from_xy(schools.direccion_coor_x, schools.direccion_coor_y))\nschools_map.crs = {'init': 'epsg:32630'}\nschools_map.head()","08d81506":"two_km_buffer = schools_map.geometry.buffer(2*1000)\ntwo_km_buffer.head()","11a33d3e":"schools_map2 = schools_map.to_crs(epsg=4326)\nschools_map2.head()","d7e81a4c":"map_5 = Map(location=[40.32,-3.69], tiles='openstreetmap', zoom_start=10)\n\nmc = MarkerCluster()\n\nfor idx, row in schools_map2.iterrows():\n    Marker([row.geometry.y, row.geometry.x], tooltip=row.centro_nombre ,icon=Icon(color='green', icon='info-sign')).add_to(mc)\n\n\nfor idx, row in cheapest_flats.iterrows():\n    Marker([row['latitude'], row['longitude']], popup=(\"Price: {} Size: {} m\u00b2 Rooms: {}\").format(row['buy_price'], row['sq_mt_built'], row['n_rooms'])).add_to(mc)\n    \nmap_5.add_child(mc)\n\nGeoJson(two_km_buffer.to_crs(epsg=4326)).add_to(map_5)\n    \nmap_5","6971f63a":"madrid_map = gpd.read_file('..\/input\/municipios\/municipios_y_distritos_madrid.shp', encoding='latin1')\nmadrid_map.set_index('nombre', inplace=True)\nmadrid_map.head()","6f175bba":"covid = pd.read_csv('..\/input\/covid19\/covid19_2.csv', sep=';', header=0, index_col=1)\ncovid.head()","ad6c705e":"map_6 = Map(location=[40.32,-3.69], tiles='cartodbpositron', zoom_start=10)\n\nChoropleth(geo_data=madrid_map.geometry , \n           data=covid['tasa_incidencia_acumulada_total'], \n           key_on=\"feature.id\", \n           fill_color='BuPu', \n           legend_name='Cumulative incidence rate in Madrid'\n          ).add_to(map_6)\n\nfor idx, row in geo_data.iterrows():\n    Circle([row.latitude, row.longitude], popup=row.raw_address, radius=20, color='green').add_to(map_6)\n    \n\nmap_6","c9a81fbf":"The column 'neighborhood_id' has several interesting data. In the previous notebook we extracted the neighbors' number and district.\n\nHere, we want the mean price by neighborhood to be able to compare it with houses' prices.","373047d5":"# Preparing the data\n\nWe merge 'address' and 'houses' by their 'id' columns keeping only the rows from 'address'.","34ac76a3":"# Adding more data\n\nLet's say that we are moving to Madrid and we have children. There are many schools in Madrid with bilingual programs (normally spanish\/english). We can place those schools in a map to find houses near them.\n\nWe'll get the data from the official 'Comunidad de Madrid' website <a href=\"https:\/\/www.comunidad.madrid\/gobierno\/datos-abiertos\">Datos abiertos<\/a>.","0666abe6":"Yes! With a few exceptions these houses are the detached ones.\n\nWhen we have many points to place in a map, it may be useful to cluster them together.\n\nLet's select a group of houses under 180000\u20ac that don't need any kind of repairs.","b9466aed":"We'll import three files:\n* 'address' contains latitude and longitude values for the original houses_Madrid file.\n* 'data' is the original houses_Madrid file.\n* 'houses' contains the cleaned version of houses_Madrid file.","2b37a7df":"Clicking on a bubble gives the percentage over the mean (negative value) or under the mean (positive value).\n\nThe size of the bubble indicates how big the percentage is.","f7055602":"Let's see which ones of these houses' prices are over the mean (red) or under it.","67685586":"We'll create a 2 km radius around each high school.","fea423a1":"Now, we merge the resulting file, 'address_map', with the original one, 'data' by their attribute 'id', keeping only the rows in 'address_map'. \n\nWhen a column is in both files, we assign a suffix '\\_y' to the column in 'data'. ","5c6a8d4e":"Let's focus on high schools with code 42.","377bb8dd":"Let's see how houses are distributed all over Madrid. Color shows the type.","fe333fd0":"However, we have to do some additional cleaning to the columns from 'data'. Like we did in the notebook 'Madrid houses'.\n\nFirst, we drop all the columns with only NaN.","a852eac4":"We can do the same thing but with covid19 statistics. Plotting the cumulative incidence rate per county with our houses.","b2cbb5ba":"We change the reference and we calculate the coordinates in the new system.","c77478e8":"When we don't have many rows, we can show directly the markers. Let's see an example with houses that have a garden.","6c297285":"We can see that houses are to the north of Madrid, while flats cover the rest.\n\nSize of the circles shows price, with houses and top floors as the most expensive.","fa60b6cf":"We'll mark houses with an energy certificate's high value with a green icon, over 3. The rest with a red icon.","f400ccd0":"# Creating the maps\n\n<a href=\"https:\/\/python-visualization.github.io\/folium\/\">Folium<\/a> is a library that allows us to manipulate data in python and visualize it on a map with the javascript library *leaflet.js*\n\nWe can select different tiles (Openstreetmap is by default), different types of markers, colors, several types of maps,...","950be610":"We eliminate the duplicated columns that we marked with '\\_y'.\n\nThe final file, geo_data, has the rows with latitude and longitude coordinates from 'address', the cleaned columns from 'houses' and the rest of the columns from 'data'.","5756c1a7":"The ones with garden and pool are in green, while the ones without a pool are in red. Let's see if this houses are the detached ones.","a854038c":"Let's see the columns.","f790027b":"We can show the address by clicking on the marker. We can change the color and add other features.\n\nFor example, let's divide this group between those with garden and pool and those without a pool.","f2bbf56d":"We had eliminated several of these columns because they have to many missing values to fill. But here, we may use them to show houses' attributes.","017c7031":"There are several columns we won't need.","16294ec1":"And, finally, we can plot all our houses on a covid19 Madrid's map and check how spread the incidence rate is at march 9 2021."}}