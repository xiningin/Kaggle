{"cell_type":{"2522581f":"code","75be7122":"code","ebe2da47":"code","21749b42":"code","b992ba49":"code","e5a77268":"code","beb5b62b":"code","0e4bf912":"code","77b1448f":"code","7991f997":"code","a072ea24":"code","433c1699":"code","ee74a9b3":"code","518d5755":"markdown","8d5eb4b4":"markdown","0ca219ed":"markdown","3aef37f2":"markdown","0b57022f":"markdown","33b7c19f":"markdown"},"source":{"2522581f":"from tensorflow.keras.layers.experimental.preprocessing import TextVectorization\nfrom sklearn.model_selection import train_test_split\nimport tensorflow_hub as hub\nimport tensorflow as tf\nimport pandas as pd\nimport numpy as np\n\ntf.__version__","75be7122":"train_df = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')\ntrain_df = train_df.sample(frac=1, random_state=42)\ntrain_df.head()","ebe2da47":"train_df.target.value_counts().plot.bar();","21749b42":"# Keep 10% for validation\n\nx_train, x_val, y_train, y_val = train_test_split(train_df['text'].to_numpy(),\n                                                  train_df['target'].to_numpy(),\n                                                  test_size=0.1,\n                                                  random_state=42)\nprint(x_train.shape, x_val.shape)","b992ba49":"# Average number of words in each tweet\nnp.mean([len(i.split()) for i in x_train])","e5a77268":"max_vocab_length = 10_000\nmax_length = 15  # Average words in each tweet\n\ntext_vectorizer = TextVectorization(max_tokens=max_vocab_length,\n                                    output_mode='int',\n                                    output_sequence_length=max_length)\n\ntext_vectorizer.adapt(x_train)","beb5b62b":"words_in_vocab = text_vectorizer.get_vocabulary()\nprint(words_in_vocab[:5])   # Most common words\nprint(words_in_vocab[-5:])  # Least common words","0e4bf912":"sentence_encoder = hub.KerasLayer('https:\/\/tfhub.dev\/google\/universal-sentence-encoder\/4',\n                                  input_shape=[],\n                                  dtype=tf.string,\n                                  trainable=False,\n                                  name='USE')\nmodel = tf.keras.Sequential([\n    sentence_encoder,\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(32, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\n\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nh = model.fit(x=x_train,\n              y=y_train,\n              validation_data=(x_val, y_val),\n              epochs=10)","77b1448f":"pd.DataFrame(h.history).plot();","7991f997":"test_df = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv')\nx_test = test_df['text'].to_numpy()\nprint(x_test.shape)","a072ea24":"pred = model.predict(x_test)\npred = tf.squeeze(tf.round(pred)).numpy()\nprint(pred.shape)\nprint(pred[:10])","433c1699":"test_df['target'] = pred.astype('uint8')\ntest_df.head()","ee74a9b3":"test_df[['id', 'target']].to_csv('submission.csv', index=False)","518d5755":"# Transfer Learning","8d5eb4b4":"# Read and Visualize","0ca219ed":"# Tokenization and Embedding","3aef37f2":"<h1>Natural Language Processing with Disaster Tweets<\/h1>\n\n[https:\/\/www.kaggle.com\/c\/nlp-getting-started](https:\/\/www.kaggle.com\/c\/nlp-getting-started)\n\nAuthor: Vaasudevan Srinivasan [(Portfolio)](https:\/\/vaasudevans.github.io) <br>\nCreated on: July 06, 2021 <br>\n\n\n","0b57022f":"# Prediction and Submission","33b7c19f":"# Import all the Modules"}}