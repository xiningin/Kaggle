{"cell_type":{"a5c6236a":"code","437b0d7b":"code","be38ffdf":"code","ba00e566":"code","79df5874":"code","033ebefc":"code","ef740e43":"code","9edcf105":"code","22a52918":"code","842cee7e":"code","fbd2ce94":"markdown","38ee5732":"markdown","da4e8d6a":"markdown","a623bc6d":"markdown","99ceed2e":"markdown","a5e9e2cb":"markdown","271cf71f":"markdown","3fd701d8":"markdown","6731c650":"markdown","2a4c9106":"markdown","2e58e66f":"markdown","ca708e0f":"markdown","34bbdfb1":"markdown","15082041":"markdown","9c6cf947":"markdown","cd56f0ef":"markdown","9478ab7d":"markdown","d41cb592":"markdown","9997c4ef":"markdown","40867140":"markdown"},"source":{"a5c6236a":"from IPython.display import Image\nimport os\nImage('..\/input\/coverimage\/tabea-damm-9-xfYKAI6ZI-unsplash.jpg')","437b0d7b":"from IPython.core.display import HTML\nHTML(\"\"\"\n<style>\n.output_png {\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n}\n<\/style>\n\"\"\")","be38ffdf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nsns.set(style='white', context='notebook')\n\nimport warnings\nwarnings.simplefilter('ignore')\n\n# survey data\nsurvey = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', skiprows = [1])\n\n# clean up survey \n# exclude student, unemployed, Other (not informative), or missing value in job title, as we will not consider these\n# exclude salary of 'None' or '$0-999'\nsurvey = survey[survey['Q5'].isin(['Student','Currently not employed', 'Other', np.nan]) == False][survey['Q24'].isin([np.nan, '$0-999']) == False]\n\n# relevant questions: \n## 5 (job title)\n\n# get Q5\nq5 = survey[['Q5']]\n\n# add categorical variable for > x respondents\nx = 100\njob_counts = pd.DataFrame(q5['Q5'].value_counts()).reset_index()\njob_counts.columns = ['Q5', 'count']\n\nq5 = q5.merge(job_counts, on='Q5', how = 'left')\nq5 = q5.assign(More_than_x = q5['count'] > x)\n\n## FIRST exclude low sample size jobs from survey data (original df) for further analyses\njobs_to_exclude = list(q5[q5['More_than_x'] == False]['Q5'].unique())\nsurvey = survey[survey['Q5'].isin(jobs_to_exclude)==False]\n\n## AND exclude low sample size jobs from q5 analysis\nq5 = q5[q5['More_than_x'] == True]\n\n# palette\ncpal = sns.color_palette(['#330033'])\n\n# countplot\nplt.figure(figsize=(6,4))\ng = sns.countplot(x='Q5', data=q5, order = q5['Q5'].value_counts(ascending=False).index, palette = cpal)\nplt.xticks(rotation=45, ha='right')\nplt.xlabel('')\nplt.title('Job titles of 2020 survey respondents', fontdict = {'fontsize':15}, pad=24)\nsns.despine();","ba00e566":"# relevant questions: \n## 5 (job title)\n## 23 (Select any activities that make up an important part of your role at work)\n\n# function to get all columns matching question of interest\ndef get_q(q):\n    ''' Returns all columns with column name containing the string you provide (q)'''\n    \n    q_col_list = [name for name in survey.columns if q in name]\n    survey_q = survey[q_col_list]\n    return survey_q\n\n# get Q23 answers as big-picture overview\nq23 = pd.concat([get_q('Q5'), get_q('Q23')], axis=1).iloc[1:]\nq23 = q23.melt(id_vars = 'Q5', var_name = 'q_part', value_name = 'response').dropna()\n\n## Q23 summary stats\n### number of responses per question grouped by job title\nq23_summary = pd.DataFrame(q23.groupby('Q5')['response'].value_counts())\nq23_summary.columns = ['n_responses']\nq23_summary.reset_index(inplace=True)\n\n### add number of respondents for each job title\nq23_summary = q23_summary.merge(job_counts, how='left', on='Q5')\n\n### calculate percent positive responses\nq23_summary = q23_summary.assign(pct_pos = (q23_summary['n_responses']\/q23_summary['count'])*100)\n\n## create legend for abbreviated question responses\nlabel_abbrev = {'Analyze and understand data to influence product or business decisions': 'Analyze data',\n               'Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data': 'Data infrastructure',\n               'Build prototypes to explore applying machine learning to new areas': 'ML prototyping',\n               'Build and\/or run a machine learning service that operationally improves my product or workflows': 'ML application',\n               'Experimentation and iteration to improve existing ML models': 'ML improvement',\n               'Do research that advances the state of the art of machine learning': 'ML research',\n               'None of these activities are an important part of my role at work': 'None',\n               'Other': 'Other'}\n\n### as a data frame for printout later (like a legend)\nlabels_df = pd.DataFrame.from_dict(label_abbrev, orient = 'index').reset_index()\nlabels_df.columns = ['Survey Response', 'Heatmap Label']\n\n\n### set up a column in df for label abbrev\ndef abbreviate_label(x):\n    '''given the survey response for Q23 (\"x\"), returns the abbreviated label from labels_df'''\n    return label_abbrev[x]\n    \nq23_summary['label'] = q23_summary['response'].apply(lambda x: abbreviate_label(x))\n\n## wide format data\nq23_wide = q23_summary.pivot('label', 'Q5', 'pct_pos')\n\n## plot: heatmap\nplt.figure(figsize=(6,6))\nsns.heatmap(q23_wide, annot=True, linewidths=.5, square=True, cbar_kws={'shrink':0.6, 'label':'% positive responses within job title'})\nplt.xlabel(\"Job title\")\nplt.ylabel(\"Work activities\")\nplt.title(\"Q23: Select any activities that make up an important part of your role at work\", fontdict = {'fontsize':15}, pad=24);","79df5874":"# legend for heatmap\nlabels_df[labels_df.columns[::-1]].style.hide_index()","033ebefc":"# relevant questions: \n## 5 (job title)\n## 14 (data visualization), 17 (ML), 18 (computer vision), 19 (NLP), 29_A (big data), 31_A (BI)\n\n# generate None\/not none summary of general areas of work questions\nretrieve_q = ['Q14', 'Q17', 'Q18', 'Q19', 'Q29_A', 'Q31_A']\n\n## function to tell if the respondent answered 'None':\ndef answer_None(x):\n    '''Returns True if the question response (x) is \"None\", otherwise returns False.'''\n    if x == 'None':\n        return True\n    else:\n        return False\n\n## retrieve questions on areas of work and score 1 if answered \"None\"\nans_none = survey[['Q5']]\n\nfor q in retrieve_q:\n    this_q = get_q(q).reset_index()\n    this_q = this_q.melt(id_vars = 'index', var_name = 'question_part', value_name = 'response')\n    this_q[q] = this_q['response'].apply(lambda x: answer_None(x))\n    result = this_q.groupby('index')[[q]].sum()\n    ans_none = ans_none.join(result)\n\n## column names more informative\ninformative_names = ['Job title', 'Data visualization (Q14)', 'Machine learning (Q17)', 'Computer vision (Q18)', \n                    'Natural language processing (Q19)', 'Big data (Q29-A)', 'Business intelligence (Q31-A)']\n\nans_none.columns = informative_names\n\n### make legend table\nlabels2_df = pd.DataFrame(informative_names[1:], columns = ['Heatmap Label'])\nlabels2_df['Survey Question'] = ['What data visualization libraries or tools do you use on a regular basis?',\n                                'Which of the following ML algorithms do you use on a regular basis?',\n                                'Which categories of computer vision methods do you use on a regular basis?',\n                                'Which of the following natural language processing (NLP) methods do you use on a regular basis?',\n                                'Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?',\n                                'Which of the following business intelligence tools do you use on a regular basis?']\n\n## invert these answers to capture who did NOT answer \"None\"\nnot_none = pd.concat([ans_none[['Job title']], 1-ans_none.drop(columns='Job title')], axis=1)\n\n## calculate percentage of respondents performing each technique by job title\nareas_summary = not_none.groupby('Job title').mean()*100\nareas_summary = round(areas_summary, 1)\n\n## plot: heatmap\nplt.figure(figsize=(6,6))\nsns.heatmap(areas_summary.transpose(), annot=True, linewidths=.5, square=True, cbar_kws={'shrink':0.6, 'label':'% positive responses within job title'})\nplt.xlabel(\"Job title\")\nplt.ylabel(\"DS & ML techniques\")\nplt.title(\"Techniques performed at work\", fontdict={'fontsize':15}, pad=24);","ef740e43":"from textwrap import wrap\n\n# reload the survey, questions row only\nsurvey_qs = pd.DataFrame(pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', dtype=str).iloc[0]).reset_index()\nsurvey_qs.columns = ['q_id', 'q_text']\n\n# questions of interest\nretrieve_q = ['Q7', 'Q14', 'Q16', 'Q17', 'Q18', 'Q19', 'Q29_A', 'Q31_A']\n# or if you want a longer list of questions: retrieve_q = ['Q7', 'Q9', 'Q11', 'Q14', 'Q16', 'Q17', 'Q18', 'Q19', 'Q26_A', 'Q27_A', 'Q28_A', 'Q29_A', 'Q31_A', 'Q33_A', 'Q34_A', 'Q35_A', 'Q36']\n\n# for each question, retrieve number of answers for each job title, and calculate percentage of positive responses within job title\n\ndef heatmap_my_qs(qlist, row_order = []):\n    '''Plots a heatmap of question and responses by job title.\n    Input: \n    - qlist: a list of question numbers in the format \"Q1\"\n    - row_order: a list of the question responses, for ordering the rows in your heatmap output; default: empty list\n    Output: \n    -heatmap'''\n    \n    for q in qlist:\n        this_q = pd.concat([survey[['Q5']], get_q(q)], axis=1)\n\n        this_q = this_q.melt(id_vars = 'Q5', var_name = 'q_part', value_name = 'response').dropna()\n\n        ## question summary stats\n        ### number of responses per question grouped by job title\n        this_summary = pd.DataFrame(this_q.groupby('Q5')['response'].value_counts())\n        this_summary.columns = ['n_responses']\n        this_summary.reset_index(inplace=True)\n\n        ### add number of respondents for each job title\n        this_summary = this_summary.merge(job_counts, how='left', on='Q5')\n\n        ### calculate percent positive responses\n        this_summary = this_summary.assign(pct_pos = (this_summary['n_responses']\/this_summary['count'])*100)\n\n        ### wide format for heatmap\n        this_wide = this_summary.pivot('response', 'Q5', 'pct_pos')\n        \n        ### option to reorder rows of heatmap if list provided\n        if len(row_order) > 0:\n            this_wide = this_wide.reindex(row_order)\n        else:\n            this_wide = this_wide\n\n        ### make labels less long by getting rid of brackets\n        this_wide.index = [ind.split(\" (\")[0] for ind in this_wide.index]\n\n        ## retrieve the question text\n        q_text = survey_qs[survey_qs['q_id'].str.match(q)].reset_index()\n        q_text[['main_q', 'restof_q']] = q_text['q_text'].str.split('?', expand=True)\n        q_title = q + \": \" + q_text.iloc[0].loc['main_q'] + \"?\"\n\n        ## plot\n        plt.figure(figsize = (6,12))\n        p = sns.heatmap(this_wide, annot=True, linewidths=.5, square=True, cbar_kws={'shrink':0.3, 'label':'% positive responses within job title'})\n        plt.xlabel(\"Job title\")\n        plt.ylabel(\"Question response\")\n        plt.title(\"\\n\".join(wrap(q_title, 70)), fontdict = {'fontsize':15}, pad=24)\n    \n    return p\n\nheatmap_my_qs(retrieve_q);","9edcf105":"from matplotlib.colors import LinearSegmentedColormap\n\n# retrieve all the questions from the section above into 1 df\nretrieve_q = ['Q7', 'Q14', 'Q16', 'Q17', 'Q18', 'Q19', 'Q29_A', 'Q31_A']\n\nmyqs = pd.DataFrame() # for concatenating results onto\n\nfor q in retrieve_q:\n    myqs = pd.concat([myqs, get_q(q)], axis = 1)\n    \n# convert to binary response\n## change column names to match the answer within each column\nmyqs = myqs.fillna(0)\n\nnew_colnames = []\nfor col in myqs.columns:\n    x = myqs[col].unique()\n    colname = x[x!=0][0].strip()\n    new_colnames.append(colname)\n    \n### make new colnames less long by getting rid of brackets\nnew_colnames = [name.split(\" (\")[0] for name in new_colnames]\n\nmyqs.columns = new_colnames\n\n## get rid of None and Other columns (not informative here)\nmyqs = myqs.drop(columns=['None', 'Other'])\n\n## change positive responses to 1's\nmyqs = myqs.replace(regex=r'.+', value=1)\n\n# add job annotation then split into separate clustermaps by job title\nmyqs = pd.concat([survey[['Q5']], myqs], axis = 1)\n\nfor job in sorted(myqs['Q5'].unique()):\n    job_data = myqs[myqs['Q5'] == job].reset_index(drop=True)\n    job_data.drop(columns = ['Q5'], inplace=True)\n\n    # we'll just look at the top 25 tools\/techniques for each job\n    top = job_data.sum().sort_values(ascending=False).index[:25]\n    job_data = job_data[top]\n\n    # remove any respondents where all answers are 0 in this top 25 tool\/technique list\n    job_data['row_sum'] = job_data.apply(sum, axis = 1)\n    job_data = job_data[job_data['row_sum'] != 0]\n    job_data.drop(columns = ['row_sum'], inplace=True)\n    \n    ## custom colors\n    my_colors = ('#330033','#fff2e6')\n    my_cmap = LinearSegmentedColormap.from_list('Custom', my_colors, len(my_colors))\n    \n    ## plot clustermap\n    g = sns.clustermap(job_data.transpose(), figsize=(14,10), dendrogram_ratio = 0.2, \n                       cbar_pos=(-0.05, 0.8, 0.05, 0.18), cbar_kws = {'ticks':[0,1], 'shrink':0.1}, cmap=my_cmap,\n                      xticklabels = False)\n    g.fig.suptitle(job, y=1.02, fontsize = 15)\n    g.cax.set_title(\"Response:\\n0=No \/ 1=Yes\", fontsize=12, pad=10)","22a52918":"heatmap_my_qs(['Q36']);","842cee7e":"# provide row order for heatmap rows:\nrow_order = ['I prefer not to answer',\n            'No formal education past high school',\n            'Some college\/university study without earning a bachelor\u2019s degree',\n            'Bachelor\u2019s degree',\n            'Master\u2019s degree',\n            'Doctoral degree',\n            'Professional degree']\n\nheatmap_my_qs(['Q4'], row_order = row_order);","fbd2ce94":"The way some of these tools\/techniques are clustered is quite intuitive - the fact that Python and matplotlib, or R and ggplot cluster together probably comes as no surprise. Other clusters can give you a little bit more information about the different \"flavors\" of toolkits within a given job title. For example, if you look at the clustered heatmap for Data Scientists (the most frequent job title), there is a cluster of tools\/techniques involving neural networks, image classification, and natural language processing (word embeddings\/vectors). It appears that around half of the data scientists use this cluster of techniques, and the other half don't. \n\nIf you take a moment to examine the clustered heatmap for your dream job, you might find different \"flavors\" of toolkits within your profession of interest too.","38ee5732":"This is quite a surprising contrast to the responses we just saw above from Question 23, where relatively few of the work activities broke the 50% mark of positive responses within each job title. Many of the ML & DS tools we are considering here (except business intelligence and big data) had a positive response rate above 80% across all job titles!\n\nWhereas Question 23 was getting at which activites are an *important* part of work, these questions highlight techniques that people are using, regardless of whether they consider it an important focus. And they are all using a *LOT* of different ML & DS techniques! I would speculate that these results may be somewhat skewed toward ML because we are looking at a sample of Kaggle users (a ML-heavy platform), but the results are interesting nonetheless.\n\nThe take-away: We job hunters have our work cut out for us when it comes to learning all these techniques. We'd better focus our efforts on learning the most widely-used tools within each category of techniques.","da4e8d6a":"# A Heatmap Roadmap to Your Dream Job\n## Exploring the machine learning & data science tools real people are using in the job of your dreams\n##### 2020 Kaggle ML & DS Survey","a623bc6d":"## What about those pesky degrees?\n\nWe've looked at the ML & DS tools you'll need on your way to your dream job. Finally let's ask about the dreaded D-word: degrees? What level of education do the real people in your dream job typically have? For this we'll look at Question 4: *What is the highest level of formal education you have attained or plan to attain within the next 2 years?*","99ceed2e":"## Showing off your ML & DS toolkit\n\nSo now that you're on the road to learning just the right skillset for your dream job, how should you showcase your newfound skills to potential employers?\n\nLet's assume that the real people in this survey who are currently working in your dream job *could also be the real people interviewing you for your dream job*. Let's look at where they share their work, to get an idea of where is the best place to showcase your ML & DS portfolio. For this we'll look at Question 36: *Where do you publicly share or deploy your data analysis or machine learning applications?*","a5e9e2cb":"# Part 1. What is my dream job anyway?\n\nThose of us preparing to enter the ML & DS job market have all heard the fancy job titles being thrown around. Data scientist, data analyst, machine learning engineer... But what do these job titles really mean in terms of your day-to-day work? Because let's face it, doing things you actually like is what makes the difference between having your dream job and just hitting the daily grind. \n\nSo let's start by looking at what real people in your dream job are actually doing at work, to help you refine your idea of what your dream job really is.","271cf71f":"## What are the most widely-used ML & DS tools and techniques?\n\nLet's look at the proportion of respondents in each job title using each ML & DS tool or technique. You can use this information to help inform your decision as to which tools within each category are most valuable to learn first as you prepare to enter the job market. There are a lot of plots here, but don't worry - a summary of the main trends is provided below.","3fd701d8":"# Parting words\n\nThanks for joining me on this journey through the \u201cHeatmap Roadmap to Your Dream Job\u201d. Hopefully you found some valuable insights for choosing your dream job, or for preparing yourself to land your dream job. If you did, please show your appreciation with an upvote. If you already have your dream job and you were reading this for its sheer entertainment value, then why not show your appreciation with a job offer or hiring recommendation for my dream job as a data analyst?\n  \n\n  \n   \n.......................................................................................................................................................................   \n*Job offers and networking contacts can connect with me: jmg.crockett[at]gmail.com*","6731c650":"*Image credit: Tabea Damm on Unsplash*","2a4c9106":"Let's break down what this tells us about each job title, to help you identify your job preference:\n* *Business analyst, Data analyst, or Statistician*: Data analysis is the most common response among respondents by far, and data infrastructure is in second place.\n* *Data engineer*: Data analysis and data infrastructure are the most common responses.\n* *Data scientist*: Data analysis is the most common response, but ML prototyping\/improvement\/application and data infrastructure are also important activities.\n* *Machine learning engineer*: ML prototyping\/improvement\/application and data infrastructure are the most common responses. There is a strong similarity with the profile of data scientists in this survey, with the exception of their responses on data analysis.\n* *Product\/project manager*: Data analysis is the most common response, and ML prototyping is in second place.\n* *Research scientist*: ML research, ML prototyping, and data analysis are the most common responses. It's probably safe to say these are ML researchers.\n* *Software engineer*: Data analysis and 'None' are tied for the most common response.","2e58e66f":"## Job titles covered in this survey\n\nLet's start by looking at the job titles of the survey respondents (Question 5). Let's exclude people without jobs (*i.e.* student, currently not employed, or missing values), or people who listed their job title as 'Other' (because that's going to lump a bunch of unrelated jobs together). Let's also exclude respondents whose current yearly compensation is missing or $0-999 USD, so we can just focus on the survey responses from people who are working and earning at least a small salary \\(it's possible that the some of the folks with low salaries may have been entering their *monthly* instead of *yearly* salary\\). Finally, we'll only include job titles with more than 100 respondents to be sure we are getting a large enough sample size to draw meaningful conclusions. Here are the job titles that leaves us with:","ca708e0f":"It looks like Github followed by Kaggle are the most popular platforms for sharing ML & DS work across the board. Is Kaggle so popular because this is a Kaggle survey? I'll let you be the judge. In any case, these results indicate that if you want to showcase your portfolio then Github is a good choice... and of course Kaggle too!","34bbdfb1":"# Greetings, fellow job hunters\n\nI'm preparing to enter the job market in the field of machine learning and data science (ML & DS). Taking a quick glance at the results of the 2020 Kaggle ML & DS Survey, I'd say that many of my fellow Kagglers are preparing for that too - 25% of the >20,000 respondents in the survey were students! \n\nThat got me thinking... How can we leverage the data in this survey to create a roadmap for how to prepare for your dream job? What ML & DS tools and techniques do you need to know? How best to showcase your skillset to potential employers? What level of education do you need in order to be competitive? And before we even get to those job-specific details, what is the right dream job for your interests anyway? Sure, you could just google it... But you'll generally find people's opinions or perhaps interviews with a handfull of experts. It's rare that you'll find answers from *thousands* of ML & DS professionals in one place - but that's what you'll find in this analysis, my friends.\n\nSo join me on this roadmap to your dream job, told in a series of heatmaps comparing the responses of professionals with different job titles in the 2020 Kaggle ML & DS Survey. This roadmap has two parts:\n* *Part 1: What is my dream job anyway?* will help you identify the dream job that fits your ML & DS interests.\n* *Part 2: How do I prepare for my dream job?* will explore the ML & DS tools and techniques used by real people who are currently working in your dream job.","15082041":"It looks as though Master's degree is the most common level of education achieved in most job titles. In many cases, Bachelor's degree is the second most common answer. Some notable exceptions are Research Scientist (Doctoral degree most common), and Software Engineer (Bachelor's degree won by a hair over Master's). Overall, the percentage of respondents who haven't completed post-secondary education of some kind is very low. So in addition to learning the right ML & DS tools for your dream job, it will likely be advantageous to have a degree as well.","9c6cf947":"## Techniques real people are using at work\n\nThe responses on work activities gave us a big-picture overview for each job title, but it is still pretty general. And in some cases we just don't get a lot of insight beyond 'Analyzing data' (gee thanks!). So let's try to get some more helpful information for your quest to identify your perfect dream job.\n\nLet's dig deeper using the list of questions below to see what DS & ML techniques are used by the respondents in each job title. For now we won't look at the specific algorithms and libraries - you'll see that in Part 2 of this roadmap. We will simply look at whether the respondent performs a technique or not (*i.e.* did they give a response other than 'None' to the question?). This will tell us:\n* *Q14:* Does the respondent perform any kind of data visualization?\n* *Q17:* Machine learning?\n* *Q18:* Computer vision?\n* *Q19:* Natural language processing?\n* *Q29-A:* Big data (relational databases etc.)?\n* *Q31-A:* Business intelligence?","cd56f0ef":"## Activities real people are doing at work\n\nLet's get a picture of what real people in our dream jobs are doing at work, starting with Question 23: *'Select any activities that make up an important part of your role at work.'* We'll take a look at the proportion of positive responses within each job title. \n\nOur respondents were allowed to select multiple answers, so in the heatmap below each cell represents the percentage of respondents within each job title (the columns) that selected each answer (the rows). For example in the heatmap below, 81% of Business Analysts and 86% of Data Analysts said that they \"analyze data\", and 30% of Business Analysts and 37% of Data Analysts said that they perform work involving \"data infrastructure\". A legend follows the heatmap, giving the full text of the survey responses corresponding to the heatmap row labels.","9478ab7d":"These plots show that within each Question, certain tools are widely popular among most of the dream jobs. There are also some interesting differences in what is most popular when comparing one dream job to another, for example which programming language is more popular - R or Python - among Statisticians *vs.* all other job titles.\n\nWe won't delve into a description of all the specifics here - you can dig into the plots above and look at the results for your specific dream job. But here is a summary of the most striking overall trends:\n* *Programming languages:* Python is the most popular across the board, unless you're hoping to be a statistician, in which case it's R. SQL is generally a second most popular choice.\n* *Data visualization libraries:* Matplotlib and Seaborn are most popular within the Python universe, and ggplot is most popular in the R universe.\n* *Machine learning frameworks:* Scikit-learn is an across-the-board favorite, but TensorFlow and Keras deserve an honorable mention.\n* *Machine learning algorithms:* Linear\/logistic regression and decision trees\/random forests appear to be most popular on the whole, but several other algorithms are also quite popular, particularly among certain job titles.\n* *Computer vision methods:* There is a lot of job title-specific variation here, but image classification stands out in a few job titles.\n* *Natural language processing:* Again, there is job title-specific variation, but word embeddings\/vectors appears to come out on top.\n* *Big data products:* MySQL, Microsoft SQL server, and PostgresSQL appear to take 1st, 2nd, and 3rd here.\n* *Business intelligence tools:* Microsoft Power BI and Tableau are the favorites among those who use BI tools.","d41cb592":"#### Legend","9997c4ef":"## Refining your job-specific toolkit\n\nThe insights from the section above are useful for getting started on learning the right general tools for your dream job. Remember that we were looking at aggregated data within each job title, so we might have missed specific combinations of tools that are used by subgroups within job titles.\n\nTo address this, let's look at the answers from individual respondents, and see what clusters of ML & DS tools\/techniques emerge within each job title. In each clustered heatmap below, the columns represent individual survey respondents within a given job title, and the rows represent the top 25 most widely-used ML & DS tools\/techniques within that job title (there are 83 possible tools\/techniques represented in the heatmaps you saw in the section above). Each respondent's answers are represented as either 1 or 0, meaning that the respondent does or does not use that tool\/technique, respectively. For the sake of simplicity, we will omit any respondents whose answers were '0' for all of the top 25 tools\/techniques shown. \n\nIf you look at the dendrogram on the y-axis of each clustered heatmap, you can see which tools\/techniques cluster together for each job title. A summary of interesting trends is provided below the plots.","40867140":"# Part 2. How do I prepare for my dream job?\n\nLet's face it - we don't have the time (or the space in our brains) to learn how to use every programming language, every data visualization library, or every ML framework out there, especially not up front in our quest for our dream jobs. Seasoned ML & DS veterans have probably honed their skills in a multitude of these tools, and are able to select just the right tool for any task. But we job hunters just want to get our foot in the door at our dream job by knowing the most widely-used tools, and we can continue learning from there."}}