{"cell_type":{"d373a1b3":"code","c3d44e06":"code","5251254d":"code","8dc25fdc":"code","deb79468":"code","70bbb0f3":"code","237be175":"code","37ab789f":"code","68872934":"code","e42b8f84":"code","5816f764":"code","33cb9417":"code","4fb8ddc1":"code","62575f1a":"code","c0e41780":"code","414faac6":"code","53698f7c":"code","98826bed":"code","93532aa1":"markdown","db2f9143":"markdown","99c27e18":"markdown","5685dc4e":"markdown","df4f6d59":"markdown","e7ee6f45":"markdown","4acadfed":"markdown"},"source":{"d373a1b3":"import numpy as np\nimport pandas as pd\nimport pandas_profiling","c3d44e06":"!pwd","5251254d":"!ls ..\/input\/titanic\/","8dc25fdc":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\nans = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","deb79468":"train.profile_report()","70bbb0f3":"test.head()","237be175":"data = pd.concat([train, test], sort=False)","37ab789f":"data.isnull().sum()","68872934":"data['Sex'].replace(['male', 'female'], [0, 1], inplace=True)","e42b8f84":"data['Embarked'].fillna('S', inplace=True)\ndata['Embarked'] = data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)","5816f764":"data['Fare'].fillna(np.mean(data['Fare']), inplace=True)","33cb9417":"age_avg = data['Age'].mean()\nage_std = data['Age'].std()\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)","4fb8ddc1":"delete_columns = ['Name', 'PassengerId', 'SibSp', 'Parch', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)","62575f1a":"train = data[:len(train)]\ntest = data[len(train):]","c0e41780":"y_train = train['Survived']\nX_train = train.drop('Survived', axis=1)\nX_test = test.drop('Survived', axis=1)","414faac6":"from sklearn.model_selection import train_test_split\n\n\n# stratify=y_train\u3092\u6307\u5b9a\u3057\u3066\u5206\u5272\u3057\u305f\u3068\u304d\u306ey\u306e0,1\u306e\u500b\u6570\u306e\u6bd4\u7387\u306b\u504f\u308a\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nX_train, X_valid, y_train, y_valid = train_test_split(X_train, y_train, test_size=0.1, random_state=0, stratify=y_train)","53698f7c":"import lightgbm as lgb\n\n# \u672c\u5f53\u306fOptuna\u4f7f\u3063\u3066\u6700\u9069\u5316\u3059\u308b\u3079\u304d\uff08https:\/\/tech.preferred.jp\/ja\/blog\/hyperparameter-tuning-with-optuna-integration-lightgbm-tuner\/\uff09\nparams = {\n    'objective': 'binary',\n    'max_bin': 300,\n    'learning_rate': 0.05,\n    'num_leaves': 40\n}\n\nlgb_train = lgb.Dataset(X_train, y_train,)\nlgb_eval = lgb.Dataset(X_valid, y_valid, reference=lgb_train)\n\nmodel = lgb.train(params, lgb_train,\n                               valid_sets=[lgb_train, lgb_eval],\n                               verbose_eval=10,\n                               num_boost_round=1000,\n                               early_stopping_rounds=10)\n\ny_pred = model.predict(X_test, num_iteration=model.best_iteration)","98826bed":"ans['Survived'] = list(map(int, y_pred))\nans.to_csv('submission.csv', index=False)","93532aa1":"linux\u306e\u30b3\u30de\u30f3\u30c9\u304c\u767a\u884c\u3067\u304d\u308b","db2f9143":"\u5e73\u5747\u5024\u304b\u30891\u03c3\u305a\u3064\u305a\u3089\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u88dc\u5b8c\uff08\u518d\u73fe\u6027\u7684\u306b\u30e9\u30f3\u30c0\u30e0\u3067\u88dc\u5b8c\u3059\u308b\u306e\u306f\u826f\u304f\u306a\u3044\u3089\u3057\u3044\uff09","99c27e18":"- \u5206\u6790\u53ef\u80fd\u306a\u5f62\u306b\u30c7\u30fc\u30bf\u3092\u6574\u5f62\uff08GBDT\u306e\u3088\u3046\u306b\u4eca\u56de\u3084\u308b\u6574\u5f62\u304c\u4e0d\u8981\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3082\u3042\u308b\uff09\n  - \u6587\u5b57\u5217\u3092\u30c0\u30df\u30fc\u5909\u6570\u306b\u7f6e\u304d\u63db\u3048\n- \u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316\u7d50\u679c\u3092\u5143\u306b\u6b20\u640d\u5024\u3092\u88dc\u5b8c\n  - \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u3082\u6b20\u640d\u304c\u3042\u308b\u306e\u3067\u88dc\u5b8c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n  - \u3084\u3063\u3066\u307f\u305f\u3068\u8a00\u3046\u30ec\u30d9\u30eb\u306a\u306e\u3067\u3069\u3046\u88dc\u5b8c\u3059\u308b\u304b\u306f\u771f\u9762\u76ee\u306b\u8003\u3048\u3066\u3044\u306a\u3044","5685dc4e":"- \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n- \u521d\u624bGBDT\u5b89\u5b9a\n- \u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u6cd5\u3067\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u305f\uff08\u672c\u5f53\u306fcross validation\u3067\u3084\u308b\u3079\u304d\uff09","df4f6d59":"- Embarked: \u4e57\u8239\u3057\u305f\u6e2f\uff08\u4e09\u7a2e\u985e\u3042\u308b\uff09","e7ee6f45":"- \u8003\u616e\u3057\u306a\u304b\u3063\u305f\u9805\u76ee\n    - Name: \u540d\u524d\n    - PassengerId: ID\n    - SibSp: \u5144\u5f1f\uff0c\u914d\u5076\u8005\u306e\u6570\n    - Parch: \u4e21\u89aa\uff0c\u5b50\u4f9b\u306e\u6570\n    - Ticket: \u30c1\u30b1\u30c3\u30c8\u756a\u53f7\n    - Cabin: \u90e8\u5c4b\u756a\u53f7","4acadfed":"- \u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\n  - \u6559\u5e2b\u30c7\u30fc\u30bf\n  - \u63d0\u51fa\u5f62\u5f0f"}}