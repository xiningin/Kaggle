{"cell_type":{"ed09c548":"code","da25290f":"code","0aa9509d":"code","f97b96d8":"code","9cc9598e":"code","48e05021":"code","19255b87":"code","a58d3f02":"code","b87f05c9":"code","f3470f24":"code","bfc79cbd":"code","440328db":"code","a27321b8":"code","df5b98e1":"code","0dd47730":"code","92d21b7e":"code","1efe54f2":"code","c25106f5":"code","0a95af3c":"code","62b0bd38":"code","384d9bae":"code","ab7578be":"code","b0196df1":"code","a570d33a":"code","6c2d9f0f":"code","cf4cefa4":"code","cecb2352":"code","0a6e56bd":"code","12ba5df6":"code","30f58c74":"code","7ee6c565":"code","6be8051a":"code","45386de2":"code","eac2c4e4":"code","6634e40b":"code","9fe7338a":"code","c4ed340e":"code","1d8fa0d7":"code","2d01d176":"code","ef41dda9":"code","43c9e172":"code","bedc2b3f":"code","c3550668":"code","477e2460":"code","395dd884":"code","bc7faacf":"code","af9d831c":"code","93baebbe":"code","ee568662":"code","7532dc8f":"code","d196fe53":"code","8ef15083":"code","65a7b1ae":"code","6e8385b3":"code","b928d467":"code","f24d1e84":"code","502cb27f":"code","23e75d5b":"code","28a09519":"code","5cf77cc4":"code","3341733a":"code","2bd96b2d":"code","e144eba6":"code","38b1ae5f":"code","cc5fe1fe":"code","993d2a44":"code","338402a2":"code","b990ef64":"markdown","c57be24d":"markdown","2ad32041":"markdown","0fb61c1d":"markdown","6b2b8bea":"markdown","99b03ae4":"markdown","0cda83b1":"markdown","e7353ba4":"markdown","e90f8619":"markdown","5cec419d":"markdown","6aa07b44":"markdown","ebdc158e":"markdown","8b3f0041":"markdown","4cfbcc7d":"markdown","152c0896":"markdown","13537fb7":"markdown","be908766":"markdown","e9ccb0dc":"markdown","d6b2dfb8":"markdown","fc4c434f":"markdown","49188031":"markdown","40d246b6":"markdown"},"source":{"ed09c548":"# Import necessary  Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","da25290f":"# Load train and Test data\ntrain_data=pd.read_csv(\"..\/input\/hranalysis\/train.csv\")\ntest_data=pd.read_csv(\"..\/input\/hranalysis\/test.csv\")","0aa9509d":"train_data.head()","f97b96d8":"train_data.shape","9cc9598e":"# Check all columns in train data\ntrain_data.columns","48e05021":"train_data.info()","19255b87":"# Check null values in train data\ntrain_data.isnull().sum()","a58d3f02":"import missingno as msno\nmsno.matrix(train_data)","b87f05c9":"test_data.shape","f3470f24":"# Check all the information of test data\ntest_data.info()","bfc79cbd":"test_data.isnull().sum()","440328db":"# Check the null values in test data\nmsno.bar(test_data,color = 'y', figsize = (10,8))","a27321b8":"# pairplot using seaborn\nsns.pairplot(train_data)","df5b98e1":"# Visulazing the distibution of the data for every feature\ntrain_data.hist(edgecolor='black',linewidth=1.2, figsize=(20,20));","0dd47730":"plt.figure(figsize=(30,30))\nsns.heatmap(train_data.corr(),annot=True,cmap=\"RdYlGn\", annot_kws={\"size\":15})","92d21b7e":"# check value counts in \" department \" columns\ntrain_data['department'].value_counts()","1efe54f2":"# visualizing the different groups in the dataset\nplt.subplots(figsize=(15,5))\ntrain_data[\"department\"].value_counts(normalize=True)\ntrain_data[\"department\"].value_counts(dropna=False).plot.bar(color=['black', 'red', 'green', 'blue', 'cyan'])\nplt.show()","c25106f5":"# checking the different regions of the company\nplt.subplots(figsize=(15,5))\nsns.countplot(train_data[\"region\"],color=\"red\")\nplt.title(\"Different Region of the company\",fontsize=30)\nplt.xticks(rotation = 60)\nplt.xlabel('Region Code')\nplt.ylabel('count')\nplt.show()","0a95af3c":"# Check most popular department\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\n\nstopword=set(STOPWORDS)\nwordcloud=WordCloud(stopwords=stopword).generate(str(train_data[\"department\"]))\nplt.rcParams['figure.figsize'] = (15, 8)\nprint(wordcloud)\nplt.imshow(wordcloud)\nplt.title('Most Popular Departments', fontsize = 30)\nplt.axis('off')\nplt.show()","62b0bd38":"train_data[\"education\"].value_counts()","384d9bae":"# prepare the data\ndata=train_data.groupby('education').size()\n\n# Make plot with pandas\ndata.plot(kind='pie',subplots=True,figsize=(15,8))\nplt.title(\"Pie Chart of different types of education\")\nplt.ylabel(\"\")\nplt.show()","ab7578be":"# most popular education degree among the employees\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\n\nstopword=set(STOPWORDS)\nwordcloud=WordCloud(stopwords=stopword,max_words=5).generate(str(train_data[\"education\"]))\nplt.rcParams['figure.figsize'] = (15, 8)\nprint(wordcloud)\nplt.imshow(wordcloud)\nplt.title('Most Popular Degrees among the Employees', fontsize = 30)\nplt.axis('off')\nplt.show()\n","b0196df1":"# checking the gender gap\n\ntrain_data[\"gender\"].value_counts()","a570d33a":"# plotting a pie chart\nsize=[38496, 16312]\nlabels=\"Male\",\"Female\"\ncolors=[\"yellow\",\"red\"]\nexplod=[0.0,0.1]\nplt.subplots(figsize=(8,8))\nplt.pie(size,labels=labels,colors=colors,explode=explod,autopct = \"%.2f%%\")\nplt.title('A Pie Chart Representing GenderGap', fontsize = 30)\nplt.axis('off')\nplt.legend()\nplt.show()","6c2d9f0f":"# comparison of permoted gender male & female\nplt.subplots(figsize=(15,5))\nsns.countplot(x=\"education\",data=train_data,hue=\"gender\",palette = 'dark')\nplt.show()","cf4cefa4":"# comparison of permoted gender male & female\nplt.subplots(figsize=(15,5))\nsns.countplot(x = 'gender', data = train_data, hue = 'is_promoted', palette = 'dark')\nplt.show()","cecb2352":"# comparison of permoted gender male & female\nplt.subplots(figsize=(15,5))\nsns.countplot(x = 'recruitment_channel', data = train_data, hue = 'gender', palette = 'dark')\nplt.show()","0a6e56bd":"train_data['recruitment_channel'].value_counts()","12ba5df6":"# plotting a donut chart for visualizing each of the recruitment channel's share\n\nsize=[30446,23220,1142]\nlabels=[\"other\",\"sourcing\",\"referred\"]\ncolor=[\"black\",\"yellow\",\"red\"]\n\nmy_circle = plt.Circle((0, 0), 0.7, color = 'white')\n\nplt.rcParams['figure.figsize']=(9,9)\nplt.pie(size,labels=labels,colors=color, shadow = True, autopct = '%.2f%%')\nplt.title('Showing share of different Recruitment Channels', fontsize = 30)\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.legend()\nplt.show()","30f58c74":"plt.subplots(figsize=(15,5))\nsns.distplot(train_data[\"age\"])\nplt.title('Distribution of Age of Employees', fontsize = 30)","7ee6c565":"train_data[\"previous_year_rating\"].value_counts().sort_index().plot.bar(color=\"red\",figsize=(15,5))\nplt.title('Distribution of Previous year rating of the Employees', fontsize = 30)\nplt.xlabel('Ratings', fontsize = 15)\nplt.ylabel('count')\nplt.show()","6be8051a":"# checking the distribution of length of service\nplt.subplots(figsize=(15,8))\nsns.distplot(train_data[\"length_of_service\"],color=\"green\")\nplt.title('Distribution of length of service among the Employees', fontsize = 30)\nplt.xlabel('Length of Service in years')\nplt.ylabel('count')\nplt.show()","45386de2":"train_data[\"KPIs_met >80%\"].value_counts()","eac2c4e4":"# plotting a pie chart\n\n\nsize = [35517, 19291]\nlabels = \"Not Met KPI > 80%\", \"Met KPI > 80%\"\ncolors = ['violet', 'grey']\nexplode = [0, 0.1]\n\nplt.rcParams['figure.figsize'] = (8, 8)\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, autopct = \"%.2f%%\")\nplt.title('A Pie Chart Representing Gap in Employees in terms of KPI', fontsize = 30)\nplt.axis('off')\nplt.legend()\nplt.show()","6634e40b":"train_data['awards_won?'].value_counts()","9fe7338a":"# plotting a donut chart for visualizing each of the recruitment channel's share\n\nsize = [53538, 1270]\ncolors = ['black', 'red']\nlabels = \"Awards Won\", \"NO Awards Won\"\n\nmy_circle = plt.Circle((0, 0), 0.7, color = 'white')\n\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(size, colors = colors, labels = labels, shadow = True, autopct = '%.2f%%')\nplt.title('Showing a Percentage of employees who won awards', fontsize = 30)\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.legend()\nplt.show()","c4ed340e":"# checking the distribution of the avg_training score of the Employees\nplt.subplots(figsize=(15,8))\nsns.distplot(train_data[\"avg_training_score\"],color=\"green\")\nplt.title('Distribution of length of service among the Employees', fontsize = 30)\nplt.xlabel('Length of Service in years')\nplt.ylabel('count')\nplt.show()","1d8fa0d7":"# checkig the no. of Employees Promoted\ntrain_data[\"is_promoted\"].value_counts()","2d01d176":"# finding the %age of people promoted\n\npromoted = (4668\/54808)*100\nprint(\"Percentage of Promoted Employees is {:.2f}%\".format(promoted))","ef41dda9":"#plotting a scatter plot \nplt.hist(train_data[\"is_promoted\"])\nplt.title(\"plot to show the gap in Promoted and Non-Promoted Employees\", fontsize=20)\nplt.xlabel('0 -No Promotion and 1- Promotion', fontsize = 20)\nplt.ylabel('count')\nplt.show()\n","43c9e172":"# scatter plot between average training score and is_promoted\ndata=pd.crosstab(train_data[\"avg_training_score\"],train_data[\"is_promoted\"])\ndata.div(data.sum(1).astype(float), axis = 0).plot(kind = 'bar', stacked = True, figsize = (20, 9), color = ['darkred', 'lightgreen'])\nplt.title('Looking at the Dependency of Training Score in promotion', fontsize = 30)\nplt.xlabel('Average Training Scores', fontsize = 15)\nplt.legend()\nplt.show()","bedc2b3f":"# checking dependency of different regions in promotion\n\ndata = pd.crosstab(train_data['region'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (20, 8), color = ['lightblue', 'purple'])\n\nplt.title('Dependency of Regions in determining Promotion of Employees', fontsize = 30)\nplt.xlabel('Different Regions of the Company', fontsize = 20)\nplt.legend()\nplt.show()","c3550668":"# dependency of awards won on promotion\ndata = pd.crosstab(train_data['awards_won?'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (10, 8), color = ['magenta', 'purple'])\n\nplt.title('Dependency of Awards in determining Promotion', fontsize = 30)\nplt.xlabel('Awards Won or Not', fontsize = 20)\nplt.legend()\nplt.show()","477e2460":"#dependency of KPIs with Promotion\n\ndata = pd.crosstab(train_data['KPIs_met >80%'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (10, 8), color = ['pink', 'darkred'])\n\nplt.title('Dependency of KPIs in determining Promotion', fontsize = 30)\nplt.xlabel('KPIs Met or Not', fontsize = 20)\nplt.legend()\nplt.show()\n","395dd884":"# checking dependency on previous years' ratings\n\ndata = pd.crosstab(train_data['previous_year_rating'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (15, 8), color = ['violet', 'pink'])\n\nplt.title('Dependency of Previous year Ratings in determining Promotion', fontsize = 30)\nplt.xlabel('Different Ratings', fontsize = 20)\nplt.legend()\nplt.show()","bc7faacf":"# checking how length of service determines the promotion of employees\n\ndata = pd.crosstab(train_data['length_of_service'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (20, 8), color = ['pink', 'lightblue'])\n\nplt.title('Dependency of Length of service in Promotions of Employees', fontsize = 30)\nplt.xlabel('Length of service of employees', fontsize = 20)\nplt.legend()\nplt.show()","af9d831c":"# checking dependency of age factor in promotion of employees\n\ndata = pd.crosstab(train_data['age'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (20, 8), color = ['lightblue', 'green'])\n\nplt.title('Dependency of Age in determining Promotion of Employees', fontsize = 30)\nplt.xlabel('Age of Employees', fontsize = 20)\nplt.legend()\nplt.show()","93baebbe":"# checking which department got most number of promotions\n\ndata = pd.crosstab(train_data['department'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (20, 8), color = ['orange', 'lightgreen'])\n\nplt.title('Dependency of Departments in determining Promotion of Employees', fontsize = 30)\nplt.xlabel('Different Departments of the Company', fontsize = 20)\nplt.legend()\nplt.show()","ee568662":"# checking dependency of gender over promotion\n\ndata = pd.crosstab(train_data['gender'], train_data['is_promoted'])\ndata.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (7, 5), color = ['pink', 'yellow'])\n\nplt.title('Dependency of Genders in determining Promotion of Employees', fontsize = 30)\nplt.xlabel('Gender', fontsize = 20)\nplt.legend()\nplt.show()","7532dc8f":"# find the null values\ntrain_data.isna().sum()","d196fe53":"# filling missing values in train data\ntrain_data[\"education\"].fillna(train_data[\"education\"].mode()[0],inplace=True)\ntrain_data[\"previous_year_rating\"].fillna(1,inplace=True)\n\n# again checking if there is any Null value left in the data\ntrain_data.isnull().sum().sum()","8ef15083":"# filling missing values in test data\ntest_data[\"education\"].fillna(test_data[\"education\"].mode()[0],inplace=True)\ntest_data[\"previous_year_rating\"].fillna(1,inplace=True)\n\n# again checking if there is any Null value left in the data\ntest_data.isnull().sum().sum()","65a7b1ae":"# removing the employee_id column because it's useless in our data\ntrain_data=train_data.drop([\"employee_id\"],axis=1)\ntrain_data.columns","6e8385b3":"# saving the employee_id\n\nemp_id = test_data['employee_id']\n\n# removing the employee_id column also in test data\n\ntest_data = test_data.drop(['employee_id'], axis = 1)\n\ntest_data.columns","b928d467":"train_data.shape","f24d1e84":"# defining the test set\n\nx_test=test_data\nx_test.columns\n","502cb27f":"# one hot encoding for the test set\nx_test=pd.get_dummies(x_test)\n\nx_test.columns","23e75d5b":"# splitting the train set into dependent and independent sets\n\n#x = train_data.iloc[:, :-1]\n#y = train_data.iloc[:, -1]\n\n#print(\"Shape of x:\", x.shape)\n#print(\"Shape of y:\", y.shape)","28a09519":"# splitting the train set into dependent and independent sets\nx=train_data.drop(\"is_promoted\",axis=1)\ny=train_data[\"is_promoted\"]\n\nprint(\"Shape of x:\", x.shape)\nprint(\"Shape of y:\", y.shape)","5cf77cc4":"# one hot encoding for the train set\n\nx = pd.get_dummies(x)\n\nx.columns","3341733a":"from imblearn.over_sampling import SMOTE\nx_sample, y_sample = SMOTE().fit_resample(x, y.values.ravel())\n\nx_sample = pd.DataFrame(x_sample)\ny_sample = pd.DataFrame(y_sample)\n\n# checking the sizes of the sample data\nprint(\"Size of x-sample :\", x_sample.shape)\nprint(\"Size of y-sample :\", y_sample.shape)","2bd96b2d":"# splitting x and y into train and validation sets\n\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_valid, y_train, y_valid = train_test_split(x_sample, y_sample, test_size = 0.2, random_state = 0)\n\nprint(\"Shape of x_train: \", x_train.shape)\nprint(\"Shape of x_valid: \", x_valid.shape)\nprint(\"Shape of y_train: \", y_train.shape)\nprint(\"Shape of y_valid: \", y_valid.shape)","e144eba6":"# standard scaling\n\nfrom sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test  = sc.transform(x_test)\nx_valid = sc.transform(x_valid)","38b1ae5f":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import average_precision_score\n\nrfc = RandomForestClassifier()\nrfc.fit(x_train,y_train)\n\nrfc_pred=rfc.predict(x_test)\nprint(\"Training Accuracy :\", rfc.score(x_train,y_train))","cc5fe1fe":"from xgboost.sklearn import XGBClassifier\nxgb = XGBClassifier()\nxgb.fit(x_train, y_train)\n\nxgb_pred = xgb.predict(x_test)\n\nprint(\"Training Accuracy :\", xgb.score(x_train, y_train))","993d2a44":"from lightgbm import LGBMClassifier\nlgb = LGBMClassifier()\nlgb.fit(x_train, y_train)\n\nlgb_pred = lgb.predict(x_test)\n\nprint(\"Training Accuracy :\", lgb.score(x_train, y_train))","338402a2":"from sklearn.ensemble import ExtraTreesClassifier\netc = ExtraTreesClassifier()\netc.fit(x_train, y_train)\n\netc_pred = etc.predict(x_test)\n\nprint(\"Training Accuracy :\", etc.score(x_train, y_train))","b990ef64":"<center><h1 style=\"font-size:180%; font-family:cursive; background:skyblue; color:black; border-radius:10px 10px; padding:10px;\">Extra Trees Classifier <\/h1><\/center>","c57be24d":"<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>Visualizing the null values using missingo function<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">Missingno is a Python library that provides the ability to understand the distribution of missing values through informative visualizations. The visualizations can be in the form of heat maps or bar charts. With this library, it is possible to observe where the missing values have occurred and to check the correlation of the columns containing the missing with the target column.<\/p>","2ad32041":"<center><h1 style=\"font-size:180%; font-family:cursive; background:skyblue; color:black; border-radius:10px 10px; padding:10px;\">Random Forest Classifier <\/h1><\/center>","0fb61c1d":"<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>What is Imblearn Technique?<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">Imblearn techniques are the methods by which we can generate a data set that has an equal ratio of classes. The predictive model built on this type of data set would be able to generalize well. We mainly have two options to treat an imbalanced data set that are Upsampling and Downsampling.<\/p>","6b2b8bea":"<p style=\"font-size:150%; font-family:cursive;\">The above plot shows that there is no partiality between males and females in terms of promotion\n<\/p>","99b03ae4":"<p style=\"font-size:150%; font-family:cursive;\">The Above Graph clearly suggests that previous ratings matter a lot, if the ratings are high, the chances of being promoted in the company increases and there is completely no promotion for the employees with previous year ratings = 0\n<\/p>","0cda83b1":"<center><h1 style=\"font-size:180%; font-family:cursive; background:skyblue; color:black; border-radius:10px 10px; padding:10px;\">XGBoost CLassifier <\/h1><\/center>","e7353ba4":"<center><h1 style=\"font-size:130%; font-family:cursive; background:pink; color:black; border-radius:10px 10px; padding:10px;\"> I hope you enjoyed this kernel , Please don't forget to appreciate me with an Upvote.<\/h1><\/center>","e90f8619":"<p style=\"font-size:150%; font-family:cursive;\">This is Very Impressive that the company promotes employees of all the ages equally even the freshers have equal share of promotion and also the senior citizen employees are getting the equal share of Promotion in the Company\n<\/p>","5cec419d":"<center><h1 style=\"font-size:230%; font-family:cursive; background:pink; color:black; border-radius:10px 10px; padding:10px;\"> Checking the Null Values<\/h1><\/center>","6aa07b44":"<center><h1 style=\"font-size:230%; font-family:cursive; background:pink; color:black; border-radius:10px 10px; padding:10px;\"> Model Building <\/h1><\/center>","ebdc158e":"<p style=\"font-size:150%; font-family:cursive;\">Again Having a good KPI score increases the chances of getting promoted in the company.<\/p>","8b3f0041":"\n\n<p style=\"font-size:150%; font-family:cursive;\">There is a very good chance of getting promoted if the employee has won an award.<\/p>","4cfbcc7d":"<center><h1 style=\"font-size:230%; font-family:cursive; background:pink; color:black; border-radius:10px 10px; padding:10px;\"> Exploratory Data Analysis<\/h1><\/center>","152c0896":"<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>Plot Displot for 'Distribution of Age of Employees'<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">Seaborn distplot lets you show a histogram with a line on it. This can be shown in all kinds of variations. We use seaborn in combination with matplotlib, the Python plotting module.A distplot plots a univariate distribution of observations. The distplot() function combines the matplotlib hist function with the seaborn kdeplot() and rugplot() functions.<\/p>","13537fb7":"<center><h1 style=\"font-size:180%; font-family:cursive; background:skyblue; color:black; border-radius:10px 10px; padding:10px;\">Light Gradient Boosting Classifier <\/h1><\/center>","be908766":"<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>Bivariate Plots<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">A bivariate plot graphs the relationship between two variables that have been measured on a single sample of subjects. Such a plot permits you to see at a glance the degree and pattern of relation between the two variables. On a bivariate plot, the abscissa (X-axis) represents the potential scores of the predictor variable and the ordinate (Y-axis) represents the potential scores of the predicted or outcome variable. Each point on the plot shows the X and Y scores for a single subject. This is what we mean by \"bivariate\" plot -- each point represents two variables. A bivariate plot of two scores (self-esteem and Interpersonal Avoidance) from our class dataset is shown below. The red line on the graph shows a perfect linear relationship between the two variables.<\/p>","e9ccb0dc":"<p style=\"font-size:150%; font-family:cursive;\">As, the Training Scores Increases, the chances of Promotion Increases Highly.<\/p>","d6b2dfb8":"<center><h1 style=\"font-size:230%; font-family:cursive; background:pink; color:black; border-radius:10px 10px; padding:10px;\"> Data Pre-processing<\/h1><\/center>","fc4c434f":"<p style=\"font-size:150%; font-family:cursive;\">Again, Each of the departments have equal no. of promotions showing an equal developement in each of the departments of the company.\n<\/p>","49188031":"<center><h1 style=\"font-size:280%; font-family:cursive; background:yellow; color:black; border-radius:10px 10px; padding:10px;\"> HR Analysis, Prediction and Visualization<\/h1><\/center>\n\n<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>What Is HR Analytics?<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">To understand the essence of HR analytics and to explain how it impacts business performance, we asked Mick Collins, Global Vice President, Workforce Analytics & Planning Solution Strategy and Chief Expert at SAP SuccessFactors, to break it down for us. \u201cHR analytics is a methodology for creating insights on how investments in human capital assets contribute to the success of four principal outcomes: (a) generating revenue, (b) minimizing expenses, (c) mitigating risks, and (d) executing strategic plans. This is done by applying statistical methods to integrated HR, talent management, financial, and operational data,\u201d says Collins in an exclusive discussion with HR Technologist. HR analytics focuses primarily on the HR function and is not \u2013 as is largely believed \u2013 exactly interchangeable with people analytics or workforce analytics.<\/p>\n\n<center><img src=\"https:\/\/careerbright.com\/wp-content\/uploads\/2020\/03\/HR-career-day-in-life-1024x681.jpg\"><\/center>\n\n<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>How does HR analytics work?<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">HR analytics follows a pattern of acquiring and analyzing information, which can help the organization derive crucial insight into their functions. Overall, HR analytics follows a multi-step process to understand their workforce more thoroughly.<\/p>\n\n<h1 style=\"font-size:180%; font-family:cursive; color:red;\"><b>Should We Invest in an HR Analytics Solution?<\/b><\/h1>\n\n<p style=\"font-size:150%; font-family:cursive;\">HR analytics offers some undoubted benefits. It allows HR teams to significantly streamline processes that reduce costs, reduce attrition, and consequently improve the bottom line. With task automation, you are freed up to innovate and explore the human aspect of human resources without spending time on tracking mountains of data from multiple sources. Overall, the use of HR analytics has been established as an HR technology trend for 2019, as it is posed to improve the employee experience that directly translates into improved business outcomes. However, it also presents some real challenges. As Collins tells us, \u201cWhile HR is ambitious about the use of predictive HR analytics, two HR leaders I recently spoke with said \u2018we want to be able to predict everything!\u2019 The vision for how analytics will become an HR core competency is being constrained by limited consumption (insights being shared only within the four walls of HR) and action (the research does not lead to a program change or new investment). There is still much progress to be made.\u201d In addition, because data is siloed across the organization and conversations about the goal of implementing analytics are unclear, the valuable data HR requires for analytics is often underutilized. The challenge is in waiting to actually see results. Predictive analytics is likely to take a minimum of 24 months to show meaningful results, but it will help get started with HR transformation. So, the time to get started with HR analytics is now. By making a strong business case to key stakeholders, as an HR practitioner, you can leverage the power of analytics to become a strategic business partner who makes substantial contributions to the business.<\/p>","40d246b6":"\n<p style=\"font-size:150%; font-family:cursive;\">The above graph shows that there is no biasedness over regions in terms of Promotion as all the regions share promotions almost equally.<\/p>"}}