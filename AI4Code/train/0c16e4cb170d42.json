{"cell_type":{"03095458":"code","8cbd9657":"code","fb1b0983":"code","b889c355":"code","9bea56a4":"code","5a7382ff":"code","0b948874":"code","ea2d41a0":"code","c73e4f22":"code","54943f61":"code","a1cd16e0":"code","f4ecd3a6":"code","eac077e5":"code","cd99b7c5":"code","993ed4a3":"code","91b8d149":"code","4a7a0228":"markdown","15010d2b":"markdown","f1863137":"markdown","f9e4c498":"markdown","9989b86a":"markdown","e4dfd467":"markdown","fa3ee940":"markdown","5e4f39c2":"markdown","287f77db":"markdown","3b7ff944":"markdown","f06a682f":"markdown","3fbd10ba":"markdown","b83bc0a0":"markdown","0f9c2370":"markdown","26197fbe":"markdown"},"source":{"03095458":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8cbd9657":"from IPython.display import Image","fb1b0983":"Image(\"..\/input\/imagespandas-profiling\/Pandas_Profiling_01.jpg\",width=800,height=800)","b889c355":"Image(\"..\/input\/imagespandas-profiling\/Pandas_Profiling_02.jpg\",width=800,height=800)","9bea56a4":"import pandas as pd\n\nimport pandas_profiling as pp\nfrom ipywidgets import widgets","5a7382ff":"Heart = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\nHeart.head()","0b948874":"display(Heart.shape)\n#display(tabular.shape)","ea2d41a0":"display(Heart.columns)\n#display(tabular.columns)","c73e4f22":"display(Heart.isnull().sum())\n#display(tabular.isnull().sum())","54943f61":"# to create the simple report quickly\n\nmethod1 = pp.ProfileReport(Heart)","a1cd16e0":"# to create the simple report quickly\n\nmethod2 = pp.ProfileReport(Heart,\n                           title=\"Pandas Profiling Report\",\n                           explorative=True)","f4ecd3a6":"# Generate the Profiling Report\n\nmethod3 = pp.ProfileReport(Heart,\n                           title=\"Heart Attack analysis and Prediction Dataset\",\n                           html={\"style\": {\"full_width\": True}},\n                           sort=\"None\"\n)","eac077e5":"method1","cd99b7c5":"# output file stored in output section\nmethod2.to_file(\"output.html\")","993ed4a3":"# Use the HTML report in an iframe\nmethod3","91b8d149":"# The Notebook Widgets Interface\nmethod3.to_widgets()","4a7a0228":"<h2 style='background-color:magenta; font-family:newtimeroman; font-size:160%; text-align:left;' > i) Method: 1 <\/h2>","15010d2b":"<h2 style=color:green align=\"left\"> 2) Understanding the Report <\/h2>\n\n - The report generated contains a general overview and different sections for different characteristics of attributes of the dataset. The different sections are:\n \n#### A) Overview\n\n - Statistics on the overall dataset and the number of variables (columns) and observations (rows).\n\n#### B) Variable Properties\n\n - We can scroll down to see all the variables in the dataset and their properties.\n \n - This is just a data science-type name for the columns, dimensions or fields in your dataset (table). Summary statistics and distribution plots are provided for each column in the dataset.\n \n#### C) Interaction of Variables\n\n - Similarly, we can also view the interaction of different attributes of the dataset with each other.\n \n - A quick interactive way to explore the columns and plot them against each other as scatterplots.\n \n#### D) Correlations of the variable\n\n - The report generated contains different types of correlations like Spearman\u2019s, Kendall\u2019s, etc. of all the attributes of the dataset.\n \n - A set of different correlation matrices so you can quickly see how the columns in your data correlate or impact each other. TIP: To see a brief explanation of each correlation, click \"Toggle correlation descriptions\".\n \n#### E) Missing Values\n\n - Other than this the report also shows which attributes have missing values.\n \n - The report generated is really helpful in identifying patterns in the data and finding out the characteristics of the data. \n \n - A few different visual summaries about missing values in the dataset for each column.\n \n#### F) Samples\n\n - Data previews of the first and last 10 rows in the dataset.","f1863137":"<h2 style='background-color:magenta; font-family:newtimeroman; font-size:160%; text-align:left;' > ii) Method: 2 <\/h2>","f9e4c498":"<h1 style='background-color:orange; font-family:newtimeroman; font-size:180%; text-align:left;' > a) HTML Report <\/h1>","9989b86a":"<h2 style=color:blue align=\"left\"> Generate the Profiling Report in two ways <\/h2>\n\n------------------------------------------------------\n\n<h3 style=color:green align=\"left\"> Method 1: <\/h3>\n\n##### import pandas_profiling as pp\n\n##### pp.ProfileReport(Heart)\n\n------------------------------------------------------\n\n<h3 style=color:green align=\"left\"> Method 2: <\/h3>\n\n##### import pandas_profiling as pp\n##### profile = pp.ProfileReport(Heart, title=\"Pandas Profiling Report\", explorative=True)\n\n------------------------------------------------------\n\n<h3 style=color:green align=\"left\"> Method 3: <\/h3>\n\n##### import pandas_profiling as pp\n##### profile = pp.ProfileReport(Heart, title=\"Heart Attack analysis and Prediction Dataset\", html={\"style\": {\"full_width\": True}}, sort=\"None\")\n\n------------------------------------------------------","e4dfd467":"<h1 style='background-color:LimeGreen; font-family:newtimeroman; font-size:220%; text-align:center; border-radius: 15px 50px;' > 3) Pandas Profiling <\/h1>","fa3ee940":"<h2 style=color:green align=\"left\"> Exploratory Data Analysis (EDA) <\/h2>\n\n- is used to explore different aspects of the data we are working on. EDA should be performed in order to find the patterns, visual insights, etc. that the data set is having, before creating a model or predicting something through the dataset. EDA is a general approach of identifying characteristics of the data we are working on by visualizing the dataset. EDA is performed to visualize what data is telling us before implementing any formal modelling or creating a hypothesis testing model.\n\n- Analyzing a dataset is a hectic task and takes a lot of time, according to a study EDA takes around 30% effort of the project but it cannot be eliminated. Python provides certain open-source modules that can automate the whole process of EDA and save a lot of time. Some of these popular modules that we are going to explore are:-\n\n #### Pandas Profiling\n #### Sweetviz\n #### Autoviz\n #### LUX\n #### DataPrep\n #### D Tale","5e4f39c2":"<h1 style='background-color:orange; font-family:newtimeroman; font-size:180%; text-align:left;' > b) Widgets <\/h1>","287f77db":"<h1 style='background-color:LimeGreen; font-family:newtimeroman; font-size:220%; text-align:center; border-radius: 15px 50px;' > If you like this kernal... Don't forget to upvote!!!!!!!!!!! <\/h1>","3b7ff944":"<h1 style='background-color:LimeGreen; font-family:newtimeroman; font-size:220%; text-align:center; border-radius: 15px 50px;' > 1) Introduction to Pandas Profiling <\/h1>","f06a682f":"### Refer:\n\n - https:\/\/www.kaggle.com\/general\/233785\n \n - https:\/\/www.youtube.com\/watch?v=AYalukmWroY&t=5s","3fbd10ba":"<h2 style='background-color:magenta; font-family:newtimeroman; font-size:160%; text-align:left;' > iii) Method: 3 <\/h2>","b83bc0a0":"<h1 style='background-color:LimeGreen; font-family:newtimeroman; font-size:220%; text-align:center; border-radius: 15px 50px;' > 2) Loading Required Libraries <\/h1>","0f9c2370":"<h2 style=color:green align=\"left\"> 1) For each column the following statistics - if relevant for the column type - are presented in an interactive HTML report <\/h2>\n\n - **Type inference:** detect the types of columns in a dataframe.\n\n - **Essentials:** type, unique values, missing values\n\n - **Quantile statistics** like minimum value, Q1, median, Q3, maximum, range, interquartile range\n\n - **Descriptive statistics** like mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness\n\n - **Most frequent values**\n\n - **Histogram**\n\n - **Correlations** highlighting of highly correlated variables, Spearman, Pearson and Kendall matrices\n\n - **Missing values** matrix, count, heatmap and dendrogram of missing values\n\n - **Text analysis** learn about categories (Uppercase, Space), scripts (Latin, Cyrillic) and blocks (ASCII) of text data.\n\n - **File and Image analysis** extract file sizes, creation dates and dimensions and scan for truncated images or those containing EXIF information.","26197fbe":"<h2 style=color:green align=\"left\"> 3) Displaying and Saving the Report <\/h2>\n\n - Once you have the data profile object, there's a few different methods you can choose from to display and save the report.\n\n#### Display in the notebook:\n\n      to_widgets()\n      to_notebook_iframe()\n\n#### Assign to a string:\n\n      to_html()\n      to_json()\n\n#### Save as a file:\n\n     to_file(\"report_name.html\")\n     to_file(\"report_name.json\")"}}