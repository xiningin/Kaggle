{"cell_type":{"9c415bdb":"code","57b66222":"code","65d00f29":"code","85f953fd":"code","d6598900":"code","7f4639ef":"code","4b6d59f4":"code","6175da3d":"code","ade1d1dd":"markdown","10a2d5f3":"markdown"},"source":{"9c415bdb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","57b66222":"df=pd.read_csv('\/kaggle\/input\/train-cleaned\/train_cleaned.csv')\ndf.head()","65d00f29":"X=df.drop(columns='Survived')\ny=df['Survived']\nprint(X.shape)\nprint(y.shape)","85f953fd":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2, random_state=42)\nprint(X_train.shape)\nprint(y_test.shape)","d6598900":"from sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier().fit(X_train, y_train)\ny_predict=model.predict(X_test)","7f4639ef":"from sklearn.metrics import classification_report\nreport=classification_report(y_predict, y_test)\nprint(report)","4b6d59f4":"from sklearn import metrics\nprecision, recall, thresholds=metrics.precision_recall_curve(y_test, y_predict)\nfpr, tpr, thresholds= metrics.roc_curve(y_test, y_predict)","6175da3d":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.figure(figsize=(8,4))\nplt.subplot(121)\nplt.plot(recall, precision)\nplt.xlabel('recall')\nplt.ylabel('precision')\nplt.title('Precision-Recall Curve')\nplt.subplot(122)\nplt.plot(tpr,fpr)\nplt.xlabel('TPR')\nplt.ylabel('FPR')\nplt.title('ROC Curve')\nplt.subplots_adjust(wspace = 0.5 )\nauc=metrics.auc(precision, recall)\nprint(\"Area under Precision-Recall Curve:\",auc)","ade1d1dd":"# Precision-Recall-F1score-AUC-ROC","10a2d5f3":"**This notebook is for easy learning about basic classification metrics such as Precision-Recall-F1score-AUC-ROC**"}}