{"cell_type":{"810d6ae2":"code","6ce82288":"code","559251b6":"code","a7eabc71":"code","6dc0bf11":"code","be6a60e4":"code","d164245c":"code","36c3f8f0":"code","115bdcb2":"code","796e4588":"code","fa33b1b2":"code","e2fdd5b0":"code","8db3ae49":"code","a79534e2":"code","0c238215":"code","bdd08ce5":"code","7576de1d":"code","2fb51d21":"code","2613566c":"code","f26b2a09":"code","f61603f6":"code","4aaa3cde":"code","7cdf146d":"code","8e2e602b":"code","550c3738":"code","846589ae":"code","e20a77ef":"code","1004c33b":"code","f74d27b0":"code","72c40fbd":"code","28cc061a":"code","aeabf6df":"code","42985ab3":"code","0684eca0":"code","b00e316e":"code","13d5f292":"code","de2ae736":"code","4c7ff2ff":"code","b2a39cbe":"code","99235342":"code","4e903211":"code","3a9310aa":"code","319ba3a2":"code","82ea83d1":"code","83429b0c":"code","95c1922b":"code","7919405d":"code","189d6ee6":"code","bca120e0":"code","476c570b":"code","8940c50f":"code","19dbbe55":"code","18d00f76":"code","e5ffef31":"code","9dc9b4bf":"code","1a5a1a94":"code","b5ddd839":"code","c619fd32":"code","20410ca5":"code","a16ae899":"code","909dfca8":"code","68cc141b":"code","b28066c1":"code","8a6017b7":"code","a074eda3":"code","a60d33aa":"code","9846e8ba":"code","712c66f3":"code","a7eae253":"markdown","ada4b5f9":"markdown","3e12616a":"markdown","3355d5c2":"markdown","adccaae8":"markdown","3fb4bd17":"markdown","28d920ff":"markdown","d2283b68":"markdown","ec0904ad":"markdown","a919c486":"markdown","c234fa18":"markdown","977d7787":"markdown","93b25cfd":"markdown","be11c737":"markdown","1b4aecbe":"markdown","8096ceb9":"markdown","98371726":"markdown","57da61ba":"markdown","76b9f359":"markdown","8af6a472":"markdown","84444a0e":"markdown","599e310a":"markdown","d1a23eee":"markdown","43bf7c1b":"markdown","76731392":"markdown","4167e1f4":"markdown","16b0bc16":"markdown"},"source":{"810d6ae2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n","6ce82288":"median_house_hold_in_come = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","559251b6":"percentage_people_below_poverty_level.head()","a7eabc71":"percentage_people_below_poverty_level.poverty_rate.value_counts()","6dc0bf11":"percentage_people_below_poverty_level['Geographic Area'].unique()","be6a60e4":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)","d164245c":"percentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\npercentage_people_below_poverty_level.poverty_rate.value_counts()","36c3f8f0":"area_list = list(percentage_people_below_poverty_level['Geographic Area'].unique()) \nprint(area_list)","115bdcb2":"area_poverty_ratio = []  # We have defined an empty list\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\n","796e4588":"# Sorting Data - S\u0131ralanm\u0131\u015f Liste\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\nsorted_data.head()","fa33b1b2":"plt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')\nplt.show()","e2fdd5b0":"kill.info()","8db3ae49":"kill.head()","a79534e2":"kill.name.value_counts()","0c238215":"separate = kill.name[kill.name != 'TK TK'].str.split() \nseparate","bdd08ce5":"a,b = zip(*separate)                  \nname_list = a+b                         \nname_count = Counter(name_list)      \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)","7576de1d":"plt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')\nplt.show()","2fb51d21":"percent_over_25_completed_highSchool.head()","2613566c":"percent_over_25_completed_highSchool.info()","f26b2a09":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","f61603f6":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\npercent_over_25_completed_highSchool.percent_completed_hs.value_counts()","4aaa3cde":"area_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\nprint(area_list)\n","7cdf146d":"area_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\nprint(area_highschool)","8e2e602b":"data = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\nsorted_data2.head()","550c3738":"plt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")\nplt.show()","846589ae":"share_race_city.head()","e20a77ef":"share_race_city.info()","1004c33b":"# share_race_city.share_white.value_counts()\n# share_race_city.share_black.value_counts()\n# share_race_city.share_native_american.value_counts()\n# share_race_city.share_asian.value_counts()\n# share_race_city.share_hispanic.value_counts()","f74d27b0":"share_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)","72c40fbd":"share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)","28cc061a":"area_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n    \nprint(area_list)\n    \n","aeabf6df":"f,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")\nplt.show()","42985ab3":"Normalization","0684eca0":"sorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\nprint(sorted_data.head(),sorted_data2.head())","b00e316e":"data = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\ndata.head()","13d5f292":"f,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","de2ae736":"g = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","4c7ff2ff":"g = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","b2a39cbe":"sns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","99235342":"sns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=3)\nplt.show()","4e903211":"pal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","3a9310aa":"data.corr()","319ba3a2":"f,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","82ea83d1":"sns.pairplot(data)\nplt.show()","83429b0c":"kill.head()","95c1922b":"kill.race.value_counts()","7919405d":"kill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values","189d6ee6":"plt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)\nplt.show()","bca120e0":"kill.manner_of_death.unique()","476c570b":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# Plot the orbital period with horizontal boxes\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","8940c50f":"# swarm plot\n# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\nsns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()","19dbbe55":"kill.gender.value_counts()","18d00f76":"kill.head()","e5ffef31":"sns.countplot(kill.gender)\nplt.title(\"gender\",color = 'blue',fontsize=15)\nplt.show()","9dc9b4bf":"armed = kill.armed.value_counts()\narmed","1a5a1a94":"plt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)\nplt.show()","b5ddd839":"above25 =['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\ndf.head()","c619fd32":"sns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)\nplt.show()","20410ca5":"sns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)\nplt.show()","a16ae899":"city = kill.city.value_counts()\ncity.head()","909dfca8":"plt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)\nplt.show()","68cc141b":"state = kill.state.value_counts()\nstate.head()","b28066c1":"plt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)\nplt.show()","8a6017b7":"sns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)\nplt.show()","a074eda3":"sns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)\nplt.show()","a60d33aa":"sns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)\nplt.show()","9846e8ba":"sns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)\nplt.show()","712c66f3":"sta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)\nplt.show()","a7eae253":"* Most Dangerous States","ada4b5f9":"<a id=\"3\"><h2>**2. Poverty rate of each state**<\/h2><\/a>\n\nThe name of the data we will use - percentage_people_below_poverty_level","3e12616a":"<a id=\"2\"> <h2> 1. Read Datas <\/h2><\/a>","3355d5c2":"<a id=\"8\"><h2> 7. Kill properties<\/h2><\/a>\n    * Manner of death\n    * Kill weapon\n    * Age of killed people\n    * Race of killed people\n    * Most dangerous cities\n    * Most dangerous states\n    * Having mental ilness or not for killed people\n    * Threat types\n    * Flee types\n    * Having body cameras or not for police","adccaae8":"<h1><a href='#1'><\/a>\n<p><font face=\"Verdana\" size=\"5\" color=\"DodgerBlue\">\n<b>Visualization to Data of Fatal Police Shootings in the US<\/b><\/font><\/p>\n<\/h1>\n\n\n# <a id='0'>Content<\/a>\n\n- <a href='#1'>Introduction<\/a>  \n\n","3fb4bd17":"* Threat types","28d920ff":"<a id=\"7\"><h2> 6. High school graduation rate vs Poverty rate of each state<\/h2><\/a>","d2283b68":"* Most dangerous cities","ec0904ad":"  * Age of Klled People","a919c486":"* Having mental ilness or not for killed people","c234fa18":"* Manner of death","977d7787":"<a id=\"5\"><h2>**4. High school graduation rate of the population that is older than 25 in states**<\/h2><\/a>","93b25cfd":"* Having body cameras or not for police","be11c737":"**Visualization**","1b4aecbe":"**Visualization**","8096ceb9":"* Flee types","98371726":"<a id=\"1\">Introduction<\/a> \n\n* <a href='#2'>1. Read datas<\/a>\n* <a href='#3'>2. Poverty rate of each state<\/a>\n* <a href='#4'>3. Most common 15 Name or Surname of killed people<\/a>\n* <a href='#5'>4. High school graduation rate of the population that is older than 25 in states<\/a>\n* <a href='#6'>5. Percentage of state's population according to races that are black,white,native american, asian and hispanic<\/a>\n* <a href='#7'>6. High school graduation rate vs Poverty rate of each state<\/a>\n* <a href='#8'>7. Kill properties<\/a>\n    * Manner of death\n    * Kill weapon\n    * Age of killed people\n    * Race of killed people\n    * Most dangerous cities\n    * Most dangerous states\n    * Having mental ilness or not for killed people\n    * Threat types\n    * Flee types\n    * Having body cameras or not for police","57da61ba":"<a id=\"4\"><h2>**3. Most common 15 Name or Surname of killed people**<\/h2><\/a>\n\nThe name of the data we will use -  \"kill\"","76b9f359":"<a id=\"6\"><h2>5. Percentage of state's population according to races that are black,white,native american, asian and hispanic<\/h2><\/a>","8af6a472":"* Race of killed people","84444a0e":"**Visualization**","599e310a":"* Kill numbers from states in kill data","d1a23eee":"Visualization\n\n    * Race of killed people","43bf7c1b":"Visualization","76731392":"* Kill weapon","4167e1f4":"<h2>CONCLUSION <\/h2>\n\nThaks.","16b0bc16":"**# sorting**"}}