{"cell_type":{"5d01ea31":"code","b97e7a99":"code","83e63e71":"code","b8351448":"code","6dcd023f":"code","a1829b7d":"code","4e056c32":"code","7fc5023b":"code","d4a3db08":"code","f7b70752":"code","a73f62e9":"code","b45ab5f9":"code","52b02865":"code","fb551855":"code","f98a3c69":"code","e2902900":"code","c8b53529":"code","b663051a":"code","7b0141f3":"markdown","004b3a4b":"markdown","27be2726":"markdown"},"source":{"5d01ea31":"import pandas as pd\nimport numpy as np\nfrom scipy.sparse import csr_matrix\nfrom sklearn.neighbors import NearestNeighbors","b97e7a99":"books = pd.read_csv('..\/input\/book-recommendation-dataset\/Books.csv', low_memory=False)\nratings = pd.read_csv('..\/input\/book-recommendation-dataset\/Ratings.csv')\nusers = pd.read_csv('..\/input\/book-recommendation-dataset\/Users.csv')","83e63e71":"books.info(), ratings.info(), users.info()","b8351448":"x = ratings['User-ID'].value_counts() > 300\nidx = x[x].index\nratings = ratings[ratings['User-ID'].isin(idx)]\nratings","6dcd023f":"ratings.info()","a1829b7d":"rating_with_books = ratings.merge(books, on='ISBN')\nrating_with_books.head()","4e056c32":"final_rating.columns","7fc5023b":"number_rating = rating_with_books.groupby('Book-Title')['Book-Rating'].count().reset_index()\nnumber_rating.rename(columns= {'Book-Rating':'number_of_ratings'}, inplace=True)\nfinal_rating = rating_with_books.merge(number_rating, on='Book-Title')\nfinal_rating = final_rating[final_rating['number_of_ratings'] >= 50]\nfinal_rating.drop_duplicates(['User-ID','Book-Title'], inplace=True)\nfinal_rating","d4a3db08":"final_rating.columns","f7b70752":"book_pivot = final_rating.pivot_table(columns='User-ID', index='Book-Title', values=\"Book-Rating\")\nbook_pivot.fillna(0, inplace=True)","a73f62e9":"book_pivot.shape\nbook_pivot.iloc[:5,:5]","b45ab5f9":"book_sparse = csr_matrix(book_pivot)\nbook_sparse","52b02865":"\n\n\nmodel = NearestNeighbors(algorithm='brute')\nmodel.fit(book_sparse)\n\n","fb551855":"n = np.random.choice(book_pivot.shape[0])\nn","f98a3c69":"distances, suggestions = model.kneighbors(book_pivot.iloc[n, :].values.reshape(1, -1))","e2902900":"distances.shape, suggestions.shape","c8b53529":"pd.DataFrame(book_pivot.iloc[n, :]).columns","b663051a":"for i in range(5):\n    print(book_pivot.index[suggestions[0,i]])","7b0141f3":"We will do collaborative filtering. That is,\n\nUSER A : Likes a, b, c\nUSER B : likes c, b, f\n\nThen f will be suggested to A and a will be to B.\n\nAnother method is called content based. That is,\n\nUSER A : Likes Pizza, Pasta\n\nSo we suggest some italian cuisine which has more to do with pizza or pasta.\n\nThing is we have to build a USER vs BOOK matrix, with values to be rating, which could be huge. That is not worth it, because, every user is not going to contribute to every entry.\n\nSo we shall take users who has rated at least 300 books. And Books with at least 70 ratings. ","004b3a4b":"The nb is based on a wonderful article, https:\/\/www.analyticsvidhya.com\/blog\/2021\/06\/build-book-recommendation-system-unsupervised-learning-project\/","27be2726":"If you like the nb, I appreciate UPVOTE!"}}