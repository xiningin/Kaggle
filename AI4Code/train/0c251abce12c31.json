{"cell_type":{"4e9a798e":"code","fec500c7":"code","08dabfbe":"code","f44156c2":"code","62d712c4":"code","e8e0c6eb":"code","5945d452":"code","cf14383f":"code","f3a37c8b":"code","ee21af09":"code","bb42c8f8":"code","087f970c":"code","60f11a0b":"code","da663706":"code","2bd44a6d":"code","eff37c47":"code","2851697e":"code","2b373a13":"code","dbba34be":"code","2f3a5558":"code","4a1de810":"code","d09ff21b":"code","a95596ef":"code","9d5b73c9":"code","4f1f9ce1":"code","f51db15c":"code","36b18d33":"code","c2329f35":"code","3cdd701e":"code","8f912914":"code","fd73a00d":"code","ae342fdf":"code","186f3f95":"code","6021125e":"code","28a0946e":"code","1c1054c3":"code","3264192b":"code","91290f2f":"code","6a1dfb11":"code","787aa29a":"code","c07e7873":"code","f5737bf3":"code","08d9e50d":"code","52837865":"code","3177981d":"code","86c7d0fe":"code","d727969b":"code","b69a13db":"code","e5134271":"code","f8673d75":"code","8e59cdc2":"code","07635597":"code","7eedac81":"code","2908deb3":"code","5e7275dc":"code","ea6a5122":"code","093e6891":"code","25f102d2":"code","3a6a74a4":"code","fcd33844":"markdown","0d7a84ce":"markdown","742b9739":"markdown","e67e6734":"markdown","31de3472":"markdown","2de02fd7":"markdown","203923f9":"markdown","f61cabd1":"markdown","de4dcc6c":"markdown","5914b086":"markdown","d706dd49":"markdown","ce0d8e30":"markdown","bb846365":"markdown","de12d9d1":"markdown","88889f00":"markdown","006d86b9":"markdown","0a7a383c":"markdown","476ad5ec":"markdown","e9a49493":"markdown"},"source":{"4e9a798e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fec500c7":"#import necessary libraries.\nimport pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly","08dabfbe":"df = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv', index_col='id')","f44156c2":"df.head()","62d712c4":"df.shape","e8e0c6eb":"df.info()","5945d452":"#drop unimportant column\ndf.drop(columns='Unnamed: 32',inplace=True)","cf14383f":"# knowing more information about numerical data.\ndf.describe().T","f3a37c8b":"#  So I will look at the diagnosis column and divide the data into three parts.\ndf['diagnosis'].value_counts(normalize=True)\n# These data tell us that there are 62% of cases benign and 37% of cases are Malignant.","ee21af09":"# now we will convert this column to categorical type.\ndf['diagnosis']=df['diagnosis'].astype('category',inplace=True)","bb42c8f8":"df.info()","087f970c":"# it is time to divide data.\ntumor_mean = df[['diagnosis',             \n'radius_mean'           \n,'texture_mean'          \n,'perimeter_mean'        \n,'area_mean'             \n,'smoothness_mean'       \n,'compactness_mean'      \n,'concavity_mean'        \n,'concave points_mean'   \n,'symmetry_mean'         \n,'fractal_dimension_mean']]\n# standard erro\ntumor_ste = df[['diagnosis','radius_se'             \n,'texture_se'            \n,'perimeter_se'          \n,'area_se'               \n,'smoothness_se'         \n,'compactness_se'        \n,'concavity_se'          \n,'concave points_se'    \n,'symmetry_se'           \n,'fractal_dimension_se']]\ntumor_worst =df[['diagnosis','radius_worst'           \n,'texture_worst'          \n,'perimeter_worst'        \n,'area_worst'             \n,'smoothness_worst'       \n,'compactness_worst'      \n,'concavity_worst'        \n,'concave points_worst'   \n,'symmetry_worst'         \n,'fractal_dimension_worst']]","60f11a0b":"tumor_worst.head()","da663706":"tumor_ste.head()","2bd44a6d":"tumor_mean.head()","eff37c47":"# change columns name \ncol=tumor_mean.columns.str.split('_').str[0]\ntumor_mean.columns=col","2851697e":"tumor_mean.head()","2b373a13":"all_t=tumor_mean.groupby('diagnosis').sum()\nall_t.style.background_gradient(cmap='Blues',subset=[\"radius\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"texture\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"perimeter\"])\\\n                        .background_gradient(cmap='Purples',subset=[\"area\"])\\\n                        .background_gradient(cmap='Pastel1_r',subset=[\"smoothness\"])\\\n                        .background_gradient(cmap='YlOrBr',subset=[\"compactness\"])\\\n                        .background_gradient(cmap='Pastel1_r',subset=[\"concavity\"])\\\n                        .background_gradient(cmap='Blues',subset=[\"concave points\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"symmetry\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"fractal\"])\\","dbba34be":"tumor_mean['diagnosis'].value_counts()","2f3a5558":"B_index=tumor_mean[tumor_mean['diagnosis']=='B'].index","4a1de810":"B_tu=tumor_mean[tumor_mean['diagnosis']=='B']","d09ff21b":"B_tu=pd.DataFrame(B_tu)","a95596ef":"B_tu.head()","9d5b73c9":"M_ = tumor_mean.drop(index=B_index)","4f1f9ce1":"M_.head()","f51db15c":"M_B=pd.concat([B_tu.iloc[0:212,:],M_])","36b18d33":"M_B.shape","c2329f35":"all_t=M_B.groupby('diagnosis').sum()\nall_t.style.background_gradient(cmap='Blues',subset=[\"radius\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"texture\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"perimeter\"])\\\n                        .background_gradient(cmap='Purples',subset=[\"area\"])\\\n                        .background_gradient(cmap='Pastel1_r',subset=[\"smoothness\"])\\\n                        .background_gradient(cmap='YlOrBr',subset=[\"compactness\"])\\\n                        .background_gradient(cmap='Pastel1_r',subset=[\"concavity\"])\\\n                        .background_gradient(cmap='Blues',subset=[\"concave points\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"symmetry\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"fractal\"])\\","3cdd701e":"tumor_mean.head()","8f912914":"from plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks as cf","fd73a00d":"# For Notebooks\ninit_notebook_mode(connected=True)","ae342fdf":"# For offline use\ncf.go_offline()","186f3f95":"sns.countplot(x='diagnosis',data=tumor_mean)","6021125e":"tumor_mean['radius'].iplot(kind='hist')\n#most radius btween 10 to 15","28a0946e":"tumor_mean.iplot(kind='scatter',x='radius',y='texture',mode='markers',categories='diagnosis',size=10,xTitle='radius',yTitle='texture',title='The relationship of the texture to the type of tumor and radius')\n","1c1054c3":"tumor_mean.iplot(kind='scatter',x='radius',y='concavity',mode='markers',categories='diagnosis',size=10,xTitle='radius',yTitle='concavity',title='The relationship of the concavity to the type of tumor and radius')\n","3264192b":"tumor_mean.iplot(kind='scatter',x='radius',y='compactness',mode='markers',categories='diagnosis',size=10,xTitle='radius',yTitle='compactness',title='The relationship of the compactness to the type of tumor and radius')\n","91290f2f":"tumor_mean.head()","6a1dfb11":"tumor_mean[['radius','texture']].iplot(kind='box')","787aa29a":"tumor_mean[['area']].iplot(kind='box')","c07e7873":"plt.figure(figsize=(30,10))\nplt.subplot(2,3,1)\nsns.boxplot(x='smoothness',data=tumor_mean)\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,2)\nsns.boxplot(x='concavity',data=tumor_mean)\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,3)\nsns.boxplot(x='compactness',data=tumor_mean)\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,4)\nsns.boxplot(x='concave points',data=tumor_mean)\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,5)\nsns.boxplot(x='symmetry',data=tumor_mean)\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,6)\nsns.boxplot(x='fractal',data=tumor_mean)\n","f5737bf3":"plt.figure(figsize=(30,10))\n\nsns.boxplot(x='radius',data=tumor_mean)\nplt.figure(figsize=(30,10))\n\nsns.boxplot(x='texture',data=tumor_mean)\nplt.figure(figsize=(30,10))\n\nsns.boxplot(x='perimeter',data=tumor_mean)\nplt.figure(figsize=(30,10))\n\nsns.boxplot(x='area',data=tumor_mean)\n","08d9e50d":"from pandas.api.types import is_numeric_dtype\ndef remove_outlier(df):\n    low = .05\n    high = .95\n    quant_df = df.quantile([low, high])\n    for name in list(df.columns):\n        if is_numeric_dtype(df[name]):\n            df = df[(df[name] > quant_df.loc[low, name]) & (df[name] < quant_df.loc[high, name])]\n    return df\n\ndata=remove_outlier(tumor_mean)","52837865":"data.shape","3177981d":"plt.figure(figsize=(15,15))\nplt.subplot(2,5,1)\nsns.violinplot(x='area',y='diagnosis',data=data)\nplt.subplot(2,5,2)\nsns.violinplot(x='radius',y='diagnosis',data=data)\nplt.subplot(2,5,3)\nsns.violinplot(x='perimeter',y='diagnosis',data=data)\nplt.subplot(2,5,4)\nsns.violinplot(x='smoothness',y='diagnosis',data=data)\nplt.subplot(2,5,5)\nsns.violinplot(x='compactness',y='diagnosis',data=data)\nplt.subplot(2,5,6)\nsns.violinplot(x='concavity',y='diagnosis',data=data)\nplt.subplot(2,5,7)\nsns.violinplot(x='concave points',y='diagnosis',data=data)\nplt.subplot(2,5,8)\nsns.violinplot(x='symmetry',y='diagnosis',data=data)\nplt.subplot(2,5,9)\nsns.violinplot(x='fractal',y='diagnosis',data=data)\n","86c7d0fe":"plt.figure(figsize=(10,10))\nsns.clustermap(data.corr(),linewidths=2,annot=True)","d727969b":"data=data[[\"diagnosis\",'perimeter','texture','compactness', 'symmetry']]","b69a13db":"data.iloc[:,1:].melt().groupby('variable').sum()","e5134271":"data.head()","f8673d75":"data['diagnosis']=data['diagnosis'].replace('M',1)\ndata['diagnosis']=data['diagnosis'].replace('B',0)","8e59cdc2":"data.head()","07635597":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\ndata_f = sc_X.fit_transform(data)","7eedac81":"data_f= pd.DataFrame(data_f)","2908deb3":"data_f.head()","5e7275dc":"data_f.columns=[[\"diagnosis\",'perimeter','texture','compactness', 'symmetry']]","ea6a5122":"data_f.head()","093e6891":"data_f[['texture','perimeter']].iplot(kind='spread',title='spread of texture and perimeter')","25f102d2":"data_f[['compactness','symmetry']].iplot(kind='spread',title='spread of compactness and symmetry')","3a6a74a4":"data_f.head()","fcd33844":"Most adenomas are between 0 and 1.7 in contrast to randomly spreading malignancies","0d7a84ce":"# working with outliers","742b9739":"From this we can see the centralization of data and  we discover that there is outliers","e67e6734":"# Visualization ","31de3472":"now we can observed \nthe radius, perimeter and area are highly correlated as expected from their relation so from these we will use anyone of them\ncompactness, concavity and concavepoint are highly correlated so we will use compactness from here\nso selected Parameter for use is perimeter, texture, compactness, symmetry*","2de02fd7":"We can see that concavity for adenoma is constant 0 to 0.15\nAs for the malignant disease, it is random and irregular","203923f9":"# Preprocessing \n\n### working in tumor_mean first \n","f61cabd1":"the data after divided","de4dcc6c":"Now we can answer some questions, such as how to determine the type of disease\n1- We can see that the area of \u200b\u200bthe malignant tumor ranges between 0 to 700 in most cases, but the malignancy exceeds that\n2- The text of the diameter of the adenoma between 10 and 15, unlike the malignant tumor that exceeds that\n3- The circumference of the benign tumor is between 50 to 100, and if it increases, it will become malignant\n4- Concave adenoma from 0 to 0.1 in benign tumor\n5- Concave point in the adenoma between 0.05","5914b086":"The mean, standard error and \"worst\" mean (mean of the three largest values) of these features were computed for each image, resulting in 30 features. The categorical target feature indicates the type of the tumor.\nfor more information https:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+%28Diagnostic%29?fbclid=IwAR1pkfU-Pp-y090BgJIpHAtOGJ9mf_RfUARNKzZ-LqFRyeLvul4R4nAgzbE","d706dd49":"Now we can see that the higher these values, the greater their effect on malignant disease. We can notice that there is a big difference in\n[radius,area,compactness,concavity,concave points]\nAlso, there is a convergence of values in fractal ","ce0d8e30":"The dataset gives information about tumor features, that are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. For each observation there are 10 features, which describe tumor size, density, texture, symmetry, and other characteristics of the cell nuclei ","bb846365":"I will separate the data that contain the type of malignant disease and the data that contain the type of benign disease","de12d9d1":"# now let us see the distribution after delete outliers","88889f00":"now i will doing feature Scaling to measure spread of the data","006d86b9":"when we Looking , we find the sum of the radius, texture, perimeter, smoothness,symmetry and fractal\nWe find it greater, but this is not accurate information because the number of polyps is greater, but in\nArea, compactness and concave points\nDespite the small number of malignancies, this indicates that they have a significant impact on the type of disease","0a7a383c":"Let us know some information about this data in order to understand it.","476ad5ec":"Now I will identify an equal number of malignant and benign disease in order to find accurate values","e9a49493":"We can see that the texture does not affect the type of disease, but we have noticed that when the diameter of the tumor is greater than 20, this indicates that the type of tumor is malignant."}}