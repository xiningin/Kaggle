{"cell_type":{"df8d4a3b":"code","0c717c14":"code","73a72bc8":"code","5b9e6fd2":"code","a2f08374":"code","1af10860":"code","8eebad00":"code","28a51f32":"code","ac2fabcc":"code","5f8fb20e":"code","02aabe3b":"code","bb77fce9":"code","15be413c":"code","917d5bf6":"code","53407a2f":"code","4f058498":"code","6c2384a0":"code","ea57db37":"code","20c12ee7":"code","23b301f0":"code","05a085f3":"code","d5acab5d":"code","c4936574":"code","af52b146":"code","c313ec5c":"code","db33f603":"code","356b4505":"code","5e9ed404":"markdown","abe04dd6":"markdown","e4ec40d7":"markdown","2f187e92":"markdown","cc63baa4":"markdown","3ed50c69":"markdown"},"source":{"df8d4a3b":"import os\nprint(os.listdir('..\/input'))","0c717c14":"import pandas as pd\nimport numpy as n\nimport seaborn as sns\n\npath_data = os.path.join('..', 'input', \"Coastal Data System - Waves (Mooloolaba) 01-2017 to 06 - 2019.csv\")\n\n\nwaves = pd.read_csv('..\/input\/waves-measuring-buoys-data-mooloolaba\/Coastal Data System - Waves (Mooloolaba) 01-2017 to 06 - 2019.csv')\n\nwaves.columns = [\"time\", \"Hs\", \"Hmax\",\"Tz\",\"Tp\",\"direction\", \"temp\"]\nwaves[\"time\"] = pd.to_datetime(waves[\"time\"])\nwaves[\"year\"] = waves[\"time\"].astype(str).str[0:4]\nwaves[\"year\"] = waves[\"year\"].astype(int)\n\nwaves[\"time1\"] = waves[\"time\"].astype(str).str[11:16]\nwaves[\"month\"] = waves[\"time\"].astype(str).str[5:7]\n\nwaves[\"dir\"] = 10* (waves[\"direction\"] \/\/ 10)\n\nwaves[\"temp1\"] = (waves[\"temp\"] \/\/ 1)\nwaves.info()\nwaves = waves[waves.Hs > 0]\nwaves.head()\n","73a72bc8":"waves[waves.temp1 > 0].pivot_table('Hs', index='year',columns =\"temp1\" )","5b9e6fd2":"waves[waves.temp1 > 0].pivot_table('Hs', index=\"temp1\",columns = 'year').plot(figsize=(20,10), kind=\"bar\")","a2f08374":"waves[waves.temp > 0].pivot_table('Hs', index=\"temp1\").plot(figsize=(20,10), kind = \"bar\")","1af10860":"import matplotlib.pyplot as plt\nsns.set() # Seaborn-Stile verwenden\n\nwaves[waves.Hs > 0].pivot_table(\"Hs\",index = \"time\").plot(figsize=(20,10))\nplt.ylabel(\"Height of waves\")","8eebad00":"waves[waves.Hs > 0].pivot_table(\"Hmax\",index = \"time\").plot(figsize=(20,10))\nplt.ylabel(\"Height of waves\")","28a51f32":"waves[waves.Hs > 0].pivot_table('Hs', index='year',columns = \"month\")","ac2fabcc":"waves.pivot_table('Hs', index=\"month\",columns = 'year').plot(figsize=(20,10))","5f8fb20e":"waves[waves.direction > 0].pivot_table('Hs', index=\"dir\").plot(figsize=(20,10), kind = \"bar\")","02aabe3b":"waves[waves.direction > 0].pivot_table('Hs', columns=\"dir\")","bb77fce9":"from math import pi\ny1 = waves[waves.direction > 0].Hs.to_list()\nx1 = waves[waves.direction > 0].direction.to_list()\n\n\ncategories = [\"North\",\"West\",\"South\",\"East\"]\nN = len(categories)\n\n\nplt.rcParams['figure.figsize'] = (15, 15)\nplt.axes(projection='polar')\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\n\n\nplt.xticks(angles[:-1], categories, color='black', size=14)\nplt.yticks(color=\"black\", size=15)\n#plt.ylim(0,100)\n\n\nplt.polar(x1, y1,  'ro', color= \"blue\")\n#plt.text(x, y, '%d, %d')\nplt.show()","15be413c":"y2 = waves[waves.direction > 0].Hs.to_list()\nx2 = waves[waves.direction > 0].dir.to_list()\n#print(y)\n\ncategories = [\"North\",\"West\",\"South\",\"East\"]\nN = len(categories)\n\n\nplt.rcParams['figure.figsize'] = (15, 15)\nplt.axes(projection='polar')\n\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\n\n\nplt.xticks(angles[:-1], categories, color='black', size=14)\nplt.yticks(color=\"black\", size=15)\n#plt.ylim(0,3)\n\n\nplt.polar(x2, y2,  'ro', color= \"blue\")\n#plt.text(x, y, '%d, %d')\nplt.show()","917d5bf6":"waves.pivot_table('Hs', index=\"time1\").plot(figsize=(20,10))","53407a2f":"waves[waves.month == \"01\"].pivot_table('Hs', index=\"time1\").plot(figsize=(20,10))","4f058498":"waves[waves.month == \"08\"].pivot_table('Hs', index=\"time1\").plot(figsize=(20,10))","6c2384a0":"import pandas as pd  \nimport numpy as np  \nimport matplotlib.pyplot as plt  \nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline","ea57db37":"waves.head()","20c12ee7":"X_waves = waves.drop(\"time\",axis = 1)\nX_waves = X_waves.drop(\"Hs\",axis = 1)\nX_waves = X_waves.drop(\"year\",axis = 1)\nX_waves = X_waves.drop(\"time1\",axis = 1)\nX_waves = X_waves.drop(\"dir\",axis = 1)\n#X_waves = X_waves.drop(\"Hmax\",axis = 1)\nX = X_waves.drop(\"temp\",axis = 1)\nprint(X.shape)\n#print(X)\ny = waves[\"Hs\"]\nprint(y.shape)","23b301f0":"plt.figure(figsize=(15,10))\nplt.tight_layout()\nseabornInstance.distplot(waves['Hs'])","05a085f3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","d5acab5d":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train)","c4936574":"coeff_df = pd.DataFrame(regressor.coef_, X.columns, columns=['Coefficient'])  \ncoeff_df","af52b146":"y_pred = regressor.predict(X_test)","c313ec5c":"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf1 = df.head(50)","db33f603":"df1.plot(kind='bar',figsize=(10,8))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","356b4505":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","5e9ed404":"# Prediction of wave size","abe04dd6":"# Wave size in August","e4ec40d7":"# Wave direction correlated to size ","2f187e92":"# Wave size over the year","cc63baa4":"# Wave size in January","3ed50c69":"# Conclusion in direction families"}}