{"cell_type":{"2c8948d2":"code","da75017b":"code","9f3cc45f":"code","730b955c":"code","2ac64cb8":"code","ac1313ee":"code","9bbf03ec":"code","d6177db1":"code","5bcb4647":"code","ca36bb90":"code","84ae0f69":"code","5b984964":"code","5d8eed8a":"code","32d63b99":"code","f69d833f":"code","7714d223":"code","e8b7f11c":"code","08ae0a4b":"code","59125249":"code","8d7cb071":"markdown","bdbdc26c":"markdown","6c197648":"markdown","ea40de14":"markdown","56f8c9c1":"markdown"},"source":{"2c8948d2":"import os\n\nimport numpy as np \nimport pandas as pd \nimport plotly.express as px\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","da75017b":"df_master = pd.read_csv('\/kaggle\/input\/worldcities-australia\/au.csv')","9f3cc45f":"df_master.info()","730b955c":"df_master.head(10)","2ac64cb8":"# Number of cities in each state and territory (identified by the admin name). There are 8 states \/ territories in Australia\ndf_master['admin_name'].value_counts()","ac1313ee":"\"\"\"\n\nLooking at the total population in each state \/ territory\n\n\"\"\"\n\ndf_master.sort_values(by='population',ascending=False,inplace=True)\nstate_territory_list = np.unique(df_master['admin_name'])\n\n\n\npopulations = []\nfor st in state_territory_list:\n    pop = sum(df_master[df_master['admin_name'] == st]['population'])\n    print(f\"Population of all cities in {st} = {pop}\\n\")\n    populations.append(pop)\n    \n\nplt.barh(state_territory_list, populations)\nplt.yticks(state_territory_list, state_territory_list)\nplt.title('Population of each state and territory')\nplt.show()","9bbf03ec":"\"\"\"\n\nTop 10 cities with the largest population\n\n\"\"\"\n\n\n\nprint(df_master[['city','population']].head(10))\n\nplt.barh(df_master.loc[0:9,'city'], df_master.loc[0:9,'population'])\nplt.yticks(df_master.loc[0:9,'city'], df_master.loc[0:9,'city'])\nplt.ticklabel_format(style='plain', axis='x')\nplt.title('10 most populated cities')\nplt.show()","d6177db1":"def summary_stats(df,columns):\n    for col in columns:\n        print(f'Column --> {col}')\n        print(f'Mean --> {df[col].mean()}')\n        print(f'Median -- {df[col].median()}')\n        print(f'Standard Deviation --> {df[col].std()}')\n        print(f'Quantile 0.05 --> {df[col].quantile(0.05)}')\n        print(f'Quantile 0.25 --> {df[col].quantile(0.25)}')\n        print(f'Quantile 0.50 --> {df[col].quantile(0.50)}')\n        print(f'Quantile 0.75 --> {df[col].quantile(0.75)}')\n        print(f'Quantile 0.95 --> {df[col].quantile(0.95)}')\n        print('\\n\\n')","5bcb4647":"\"\"\"\n\nSome summary statistics for the population and population_proper columns\n\n\"\"\"\n\nsummary_stats(df_master,['population','population_proper'])","ca36bb90":"\"\"\"\n\nAssigning Id numbers for each row based on the quantile that it belongs to (population column)\n\nquantile < 0.05 -> 1\n0.05 <= quantile < 0.25 -> 2\n0.25 <= quantile < 0.5 -> 3\n0.5 <= quantile < 0.75 -> 4\n0.75 <= quantile < 0.95 -> 5\nquantile >= 0.95 -> 6\n\n\"\"\"\n\nquantiles = df_master['population'].quantile([ 0.05 , 0.25 , 0.5 , 0.75 , 0.95 ])\ndf_master['quantile_id'] = 0\nfor index,row in df_master.iterrows():\n    if df_master.at[index,'population'] < quantiles[0.05]:\n        df_master.at[index,'quantile_id'] = 1\n    elif df_master.at[index,'population'] >= quantiles[0.05] and  df_master.at[index,'population'] < quantiles[0.25]:\n        df_master.at[index,'quantile_id'] = 2\n    elif df_master.at[index,'population'] >= quantiles[0.25] and  df_master.at[index,'population'] < quantiles[0.5]:\n        df_master.at[index,'quantile_id'] = 3\n    elif df_master.at[index,'population'] >= quantiles[0.5] and  df_master.at[index,'population'] < quantiles[0.75]:\n        df_master.at[index,'quantile_id'] = 4\n    elif df_master.at[index,'population'] >= quantiles[0.75] and  df_master.at[index,'population'] < quantiles[0.95]:\n        df_master.at[index,'quantile_id'] = 5\n    else:\n        df_master.at[index,'quantile_id'] = 6\n","84ae0f69":"df_master.head()","5b984964":"df_master[\"quantile_id\"].value_counts()","5d8eed8a":"\"\"\"\n\nplots for quantile id = 1\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 1]['population'], shade=True)\nplt.title('quantile id = 1\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 1]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 1]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 1\", loc=\"left\")\nplt.show()","32d63b99":"\"\"\"\n\nplots for quantile id = 2\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 2]['population'], shade=True)\nplt.title('quantile id = 2\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 2]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 2]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 2\", loc=\"left\")\nplt.show()","f69d833f":"\"\"\"\n\nplots for quantile id = 3\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 3]['population'], shade=True)\nplt.title('quantile id = 3\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 3]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 3]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 3\", loc=\"left\")\nplt.show()","7714d223":"\"\"\"\n\nplots for quantile id = 4\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 4]['population'], shade=True)\nplt.title('quantile id = 4\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 4]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 4]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 4\", loc=\"left\")\nplt.show()","e8b7f11c":"\"\"\"\n\nplots for quantile id = 5\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 5]['population'], shade=True)\nplt.title('quantile id = 5\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 5]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 5]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 5\", loc=\"left\")\nplt.show()","08ae0a4b":"\"\"\"\n\nplots for quantile id = 6\n\n\"\"\"\n\n# Density chart\nsns.kdeplot(df_master[df_master['quantile_id'] == 6]['population'], shade=True)\nplt.title('quantile id = 6\\n')\nplt.show()\n\n# Violin plot\nax = sns.violinplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 6]))\nax = sns.stripplot(x='quantile_id', y='population', data=(df_master[df_master['quantile_id'] == 6]), color=\"red\", jitter=0.2, size=6)\nplt.title(\"quantile id = 6\", loc=\"left\")\nplt.ticklabel_format(style='plain', axis='y')\nax.set(ylim=(0, 6000000))\nplt.show()","59125249":"# Geospatial visualisation of the cities in the dataset\n# Colour and size based on quantile id\nfig = px.scatter_geo(df_master, lat=df_master['lat'],lon=df_master['lng'],\n                     color=\"quantile_id\", \n                     hover_name=\"city\", \n                     hover_data=[\"population\"],\n                     size=\"quantile_id\", \n                     projection=\"natural earth\")\nfig.show()\n\n# Geospatial visualisation of the cities in the dataset\n# Colour based on state \/ territory and size based on quantile id\nfig = px.scatter_geo(df_master, lat=df_master['lat'],lon=df_master['lng'],\n                     color=\"admin_name\", \n                     hover_name=\"city\", \n                     hover_data=[\"population\"],\n                     size=\"quantile_id\", \n                     projection=\"natural earth\")\nfig.show()","8d7cb071":"### Thanks to Marya Alizadeh for providing the dataset ","bdbdc26c":"## 2. A brief EDA","6c197648":"## 1. Importing libraries and dataset","ea40de14":"* Only missing data in the \"captial\" column. This is not a concern for this analysis","56f8c9c1":"# Quick Australian population EDA and Visualisation"}}