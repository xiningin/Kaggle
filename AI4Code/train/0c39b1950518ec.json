{"cell_type":{"6e167b3b":"code","7447ae59":"code","cca6afe7":"code","cfe810f6":"code","5fd91086":"code","28a38bca":"code","b2da4c5f":"code","400653fc":"code","808a6ee7":"code","06900183":"code","75044927":"code","de5a0f72":"code","c63fc7d0":"markdown","27a83fce":"markdown","a009845b":"markdown","f6a67818":"markdown","0096a130":"markdown","ee39cd53":"markdown","a32a6aba":"markdown","87489799":"markdown","e68fdb3f":"markdown","be3e56f1":"markdown"},"source":{"6e167b3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Any results you write to the current directory are saved as output.","7447ae59":"train_df = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\",index_col='Id')\ntest_df = pd.read_csv(\"..\/input\/home-data-for-ml-course\/test.csv\",index_col='Id')\ntrain_df.head()","cca6afe7":"cat_cols = [col for col in train_df if train_df[col].dtype == 'object' and train_df[col].nunique()>10]\ntrain_df.drop(cat_cols,axis=1,inplace=True)\ntest_df.drop(cat_cols,axis=1,inplace=True)\ntrain_df","cfe810f6":"train_df.drop([col for col in train_df if train_df[col].isnull().sum()>100],axis=1,inplace=True)\ntest_df.drop([col for col in test_df if test_df[col].isnull().sum()>100],axis=1,inplace=True)\ntrain_df","5fd91086":"target = train_df.SalePrice\ntrain_df.drop('SalePrice',axis=1,inplace=True)","28a38bca":"train_df.fillna(train_df.mode(),inplace=True)\ntest_df.fillna(test_df.mode(),inplace=True)\ntrain_df","b2da4c5f":"train_df = pd.get_dummies(train_df)\ntest_df = pd.get_dummies(test_df)\ntrain_df","400653fc":"train_df.drop([col for col in train_df if train_df[col].isnull().any()],axis=1,inplace=True)\ntest_df.drop([col for col in test_df if test_df[col].isnull().any()],axis=1,inplace=True)","808a6ee7":"from sklearn.model_selection import train_test_split\n\nX_train,X_valid,y_train,y_valid = train_test_split(train_df,target,test_size = 0.2,random_state = 20,shuffle=True)\ndisplay(X_train,y_train)","06900183":"from sklearn.preprocessing import StandardScaler\n\nss = StandardScaler()\nss.fit(X_train)\nX_train = ss.transform(X_train)\nX_valid = ss.transform(X_valid)","75044927":"from xgboost import XGBRegressor\nfrom sklearn.metrics import mean_absolute_error\n\nmodel = XGBRegressor(n_estimators=500,learning_rate=0.05,random_state=0)\n\nmodel.fit(X_train,y_train)\npreds = model.predict(X_valid)\nscores = mean_absolute_error(preds,y_valid)\nscores","de5a0f72":"# submission_preds = model.predict(test_df)\n# output = pd.read_csv(\"..\/input\/home-data-for-ml-course\/sample_submission.csv\")\n# ouptut.SalePrice = submission_preds\n# output.to_csv('submission.csv',index=False)","c63fc7d0":"## split into train and test subsets","27a83fce":"# Model training & evaluation\n## XGBRegressor model and MAE for evaluation","a009845b":"# Preprocessing Phase\n## drop categorical features which have more than 10 unique variables (too many features if (get_dummies) later)","f6a67818":"# Load Dataset","0096a130":"# Setup Environment","ee39cd53":"## standard scalar","a32a6aba":"## drop features more than 100 NaN entries","87489799":"## extract SalePrice from train dataset and assign it to variable target","e68fdb3f":"## one-hot encoding using pd.get_dummies","be3e56f1":"## fill remaining NaN value with mode value"}}