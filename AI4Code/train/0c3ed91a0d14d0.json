{"cell_type":{"485a1960":"code","918f6611":"code","46b8e3a6":"code","93e6917b":"code","e9598c77":"code","9de7c1b2":"code","0be91a38":"code","a65b9182":"code","77247ba1":"code","3e13339d":"code","0da0daf1":"code","77c169a4":"code","7489dea6":"code","50615dcc":"code","859cd83a":"code","a64cbe7c":"code","299f3c01":"markdown","b643a9a3":"markdown"},"source":{"485a1960":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.impute import SimpleImputer\nimport xgboost as xgb\nfrom sklearn.metrics import f1_score, recall_score\nfrom sklearn.model_selection import GridSearchCV","918f6611":"#import train data\ndf = pd.read_csv('\/kaggle\/input\/iba-ml1-mid-project\/train.csv')\ndf.head()","46b8e3a6":"#get general information about data\ndf.info()","93e6917b":"#data type of each column\ndf.dtypes","e9598c77":"#dimensionality of the dataframe\ndf.shape","9de7c1b2":"#drop first column and replace dataframe\ndf.drop(['Id'], axis=1, inplace = True)","0be91a38":"#first 10 rows\ndf.head(10)","a65b9182":"#last 10 rows\ndf.tail(10)","77247ba1":"#distinct values of column\nprint(df['credit_line_utilization'].unique())\n\n#counts of non-null values\ndf['credit_line_utilization'].value_counts()","3e13339d":"#firstly, replace ',' with '.'\ndf['credit_line_utilization'] = df['credit_line_utilization'].str.replace(',','.')\n\n#convert object to float\ndf['credit_line_utilization'] = df['credit_line_utilization'].astype(float)","0da0daf1":"df.dtypes","77c169a4":"#describe and get general statistical information about data\ndf.describe()","7489dea6":"#count of null values each columns\ndf.isna().sum()","50615dcc":"#compute pairwise correlation of columns, excluding null values\ndf.corr()","859cd83a":"#graphical representation of correlation\nsns.heatmap(df.corr())","a64cbe7c":"sns.pairplot(df, vars=['age', 'number_dependent_family_members', 'monthly_income',\n                       'number_of_credit_lines', 'real_estate_loans'], height=5)\nplt.show()","299f3c01":"We see that data type of 'credit_line_utilization' column is object, but must be float.","b643a9a3":"# 1. Explotary data analysis"}}