{"cell_type":{"a7c1664d":"code","2e4bbff1":"code","63209315":"code","9d4f2dc7":"code","21645d69":"code","be2b33f8":"code","a4f33f70":"code","8a70e238":"code","0f33da33":"markdown","31ab6859":"markdown","2817ac18":"markdown","926ad249":"markdown","bc3adbfa":"markdown","89dbef62":"markdown","d4d1111f":"markdown","e341aa73":"markdown","276d8a83":"markdown","2b0a8133":"markdown","29010c41":"markdown"},"source":{"a7c1664d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport skimage.io\nfrom tqdm.notebook import tqdm\nimport random\nimport cv2\nplt.rcParams['figure.figsize'] = [15,8]","2e4bbff1":"DATA_DIR = '\/kaggle\/input\/prostate-cancer-grade-assessment\/'\ndata = pd.read_csv(DATA_DIR + 'train.csv')\ndata_karolinska = data[data.data_provider==\"karolinska\"].reset_index().drop(columns=['index'])\ndata_radboud = data[data.data_provider==\"radboud\"].reset_index().drop(columns=['index'])","63209315":"def show_grid(dataframe):\n    N = len(dataframe)\n    for i in range(3):\n        for j in range(3):\n            plt.subplot(3,3,j+3*i+1)\n            img = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + dataframe.image_id[int(N*random.random())] + '.tiff')\n            plt.imshow(img[2])\n            plt.axis('off')","9d4f2dc7":"print('Radboud Samples')\nshow_grid(data_radboud)","21645d69":"print('Karolinska Samples')\nshow_grid(data_karolinska)","be2b33f8":"def enhance_image(image, contrast=1, brightness=15):\n    \"\"\"\n    Enhance constrast and brightness of images\n    \"\"\"\n    img_enhanced = cv2.addWeighted(image, contrast, image, 0, brightness)\n    return img_enhanced\n\nfactor = 4 \nchannel = 1# using 2nd channel\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_radboud.image_id[50] + '.tiff')[channel][factor*0:factor*300,factor*0:factor*300]\nenhnaced_img = enhance_image(img)\nimg_concat = np.concatenate((img, enhnaced_img), axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A RADBOUD SAMPLE \\n\\n [Left] Before Image Enhancement, [Right] After Image Enhancement')\nplt.show();\n\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_karolinska.image_id[50] + '.tiff')[channel][factor*0:factor*1300,factor*0:factor*1300]\nenhnaced_img = enhance_image(img)\nimg_concat = np.concatenate((img, enhnaced_img), axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A KAROLINSKA SAMPLE \\n\\n [Left] Before Image Enhancement, [Right] After Image Enhancement')\nplt.show();","a4f33f70":"def RGB_histogram_equalization(img):\n    \"\"\" Histogram Equalization of 3-Channel images\"\"\"\n    equalized_image1 = cv2.equalizeHist(img[:,:,0])\n    equalized_image2 = cv2.equalizeHist(img[:,:,1])\n    equalized_image3 = cv2.equalizeHist(img[:,:,2])\n    return cv2.merge((equalized_image1,equalized_image2,equalized_image3))\n\nfactor = 4 \nchannel = 1# using 2nd channel\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_radboud.image_id[50] + '.tiff')[channel][factor*0:factor*300,factor*0:factor*300]\nimg = enhance_image(img)\nequalized_image = RGB_histogram_equalization(img)\nimg_concat = np.concatenate((img, equalized_image),axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A RADBOUD SAMPLE \\n\\n [Left] Before Histogram Equalization, [Right] After Histogram Equalization')\nplt.show();\n\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_karolinska.image_id[50] + '.tiff')[1][factor*0:factor*1300,factor*0:factor*1300]\nimg = enhance_image(img)\nequalized_image = RGB_histogram_equalization(img)\nimg_concat = np.concatenate((img, equalized_image),axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A KAROLINSKA SAMPLE \\n\\n [Left] Before Histogram Equalization, [Right] After Histogram Equalization')\nplt.show();","8a70e238":"def unsharp_masking(img):\n    \"\"\" Unsharp masking of an RGB image\"\"\"\n    img_gaussian = cv2.GaussianBlur(img, (21,21), 10.0)\n    return cv2.addWeighted(img, 1.8, img_gaussian, -0.8, 0, img)\n\nfactor = 4\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_radboud.image_id[500] + '.tiff')[1][factor*150:factor*250,factor*150:factor*250]\nimg = enhance_image(img)\nunsharp_image = unsharp_masking(img.copy())\nimg_concat = np.concatenate((img, unsharp_image),axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A RADBOUD SAMPLE \\n\\n [Left] Before Unsharp Masking, [Right] After Unsharp Masking')\nplt.show();\n\nimg = skimage.io.MultiImage(DATA_DIR + 'train_images\/' + data_karolinska.image_id[500] + '.tiff')[1][factor*600:factor*1000,factor*600:factor*1000]\nimg = enhance_image(img)\nunsharp_image = unsharp_masking(img.copy())\nimg_concat = np.concatenate((img, unsharp_image),axis=1)\nplt.imshow(img_concat);plt.axis('off');\nplt.title('A KAROLINSKA SAMPLE \\n\\n [Left] Before Unsharp Masking, [Right] Unsharp Masking')\nplt.show();","0f33da33":"##  <span style=\"color:pink\">  Utilities","31ab6859":"---\n## Filter 2: <span style=\"color:pink\"> Histogram Equalization <\/span>\n---\n\nNote: We are applying histogram equalization to already contrast enhanced images.\n\n<span style=\"color:orange\"> The result is not good. So we cannot use it for this competitions. Please let me know if you made it work, I will be happy to update here! <\/span>\n\nWe can use opencv ```equalizeHist``` function.","2817ac18":"##  <span style=\"color:pink\">  Let's Look at Radboud and Karolinska Samples <\/span>\n\nWe randomly sample ```Radboud``` and ```Karolinska``` data for visualization.\n\n- If you look carefully, you will notice that in the ```Radboud``` samples, there is a distinct gray thick boundary around the tissue border due to transparent slides used in the experiment. \n\n- This is not visible as predominently in the ```Karolinska``` data.\n\n### <span style=\"color:orange\"> This region can cause issue in segmenting forground from the background! <\/span>","926ad249":"##  <span style=\"color:pink\">  In this notebook: <\/span>\n\n### 1. First, applied a contrast enhancement filter to remove gray areas in Radboud samples.\n\n### 2. Experimented with other filters:\n \n   a. Histogram equalization: did not work!\n\n   b. Unsharp masking: results are good!\n\n### <center> I will add more filters if Kagglers like this notebook. Please upvote if it is useful!","bc3adbfa":"##  <span style=\"color:pink\">  Import Packages <\/span>","89dbef62":"# <span style=\"color:orange\"> More filters coming if Kagglers show interest!\n  ","d4d1111f":"#  <span style=\"color:#aaa\">  Further Enhancements<\/span>","e341aa73":"---\n## Filter 3: <span style=\"color:pink\"> Unsharp Masking <\/span>\n---\n\nUnsharp masking enhances the high frequency details. This can be implemented using a gaussian filter and subtracting it from the original image.\n\n### <span style=\"color:orange\"> You can see that this filter enhance the details! <\/span>","276d8a83":"---\n##  Filter 1: <span style=\"color:pink\">  Removing Gray Borders in Radboud Samples using <\/span> <span style=\"color:orange\">Contrast Enhancement <\/span>\n---\n\nFor contrast enhancement we will use OpenCV function ```addWeighted``` for this purpose.\n\n```\nimg_enhanced = cv2.addWeighted( img, contrast, img, 0, brightness)\n```\n\nThe same enhancement can also be safely applied to ```Karolinska``` samples, as I observed from my limited experiments. See the following figures for comparison.\n\n#### Reference: https:\/\/stackoverflow.com\/questions\/39308030\/how-do-i-increase-the-contrast-of-an-image-in-python-opencv\n","2b0a8133":"## <center> <span style=\"color:#aaa\"> Prostate cANcer graDe Assessment (PANDA) Challenge <\/span><\/center>\n\n\n# <center> Looking into the Effect of  <\/center>\n# <center>  <font size=\"6\"> <span style=\"color:#ffa7b6\"> IMAGE ENHANCEMENT <\/span> <\/font><\/center>   ","29010c41":"## <span style=\"color:pink\">  Data I\/O"}}