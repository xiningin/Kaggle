{"cell_type":{"1eee207c":"code","eddacc5b":"code","a2585e07":"code","83ab3e31":"code","ae892111":"code","d3cc642e":"code","8c9bd75d":"code","7424c7e4":"code","25463067":"code","d46211ec":"code","5506462c":"code","3632b210":"code","b26b4330":"code","3ff14faa":"code","49d20b6a":"code","d28f7f51":"code","f11efd0b":"code","27e657ce":"code","9a6a70a0":"code","13f18312":"code","5b78f398":"code","836bc710":"code","660829fd":"code","96f4d545":"code","67745f5f":"code","2a3bacfa":"code","054d711a":"code","083def6b":"code","3c36a08f":"code","3a556244":"code","415dbf3b":"code","1b3c01e9":"code","821fcbf1":"code","c384b4d8":"code","63746ff2":"code","42b20b91":"code","9add9654":"code","d165212a":"code","c18f2fd3":"code","89fa3ced":"code","4136ae33":"code","bd5549c4":"code","01eb96a0":"code","16a1ce72":"code","19b76d00":"code","c1ae7b68":"code","1b3e1606":"code","6e996bc0":"code","1a2957a0":"code","86d6264d":"code","bee49cc1":"markdown","1646d27c":"markdown","64b97725":"markdown","e5df1952":"markdown"},"source":{"1eee207c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# importing the math library\nimport math as m\n\n# plot lib\nimport matplotlib.pyplot as plt\n\n# Any results you write to the current directory are saved as output.","eddacc5b":"2+1","a2585e07":"3+4","83ab3e31":"6+6\n","ae892111":"number = 0\nnumber","d3cc642e":"number = 5\nprint(number)\n\n# Add 2 to the current value of number\nnumber = number + 2\nprint(number)\n\n#number = 0\n\nif number > 0:\n    print(\"Number greater than 0\")\n    \nprint(\"always printed\")\n\nnumber\n","8c9bd75d":"print(number)","7424c7e4":"amount = 4\n\ntext_info = \"Hello \" * amount\nprint(text_info)","25463067":"number_b = 5\n\ntype(number_b)","d46211ec":"number_b = 19.666\ntype(number_b)","5506462c":"print(1+2)\n\nprint(8-3)\n\nprint(3*4)\n\n## true division ##\nprint(8\/2)\nprint(8\/3)\n\n## floor division ##\nprint(8\/\/2) # 4\nprint(8\/\/3) # 2","3632b210":"8 - 3 +2","b26b4330":"-3 + 4 * 2","3ff14faa":"(-3 + 4) * 4","49d20b6a":"hat_height_cm = 25\nmy_height_cm = 206\n\ntotal_height_meters = hat_height_cm + my_height_cm \/ 100\nprint(\"Height in meters = \", total_height_meters, \"?\")","d28f7f51":"total_height_meters = (hat_height_cm + my_height_cm) \/ 100\nprint(\"Height in meters = \", total_height_meters)","f11efd0b":"#minimum\nprint(min(1,2,3))\n\n#maximum\nprint(max(1,2,3))\n","27e657ce":"#minimum\nprint(\"minimum of 1,2,3 = \", min(1,2,3))\n\n#maximum\nprint(\"maximum of 1,2,3 = \", max(1,2,3))\n","9a6a70a0":"print(abs(32))\nprint(abs(-32))\n","13f18312":"print(float(10))","5b78f398":"print(int(3.33))","836bc710":"print(int(\"345\") + 3)","660829fd":"text = \"123\"\n\nprint (int(text) * 2)","96f4d545":"#text = \"123a\"\n\nprint (int(text) * 2)","67745f5f":"5 % 2","2a3bacfa":"if 3 % 2 == 0:\n    print(\"even\")\nelse:\n    print(\"odd\")\n    \n    ","054d711a":"number = 3\nif number % 2 == 0:\n    print(number, \" is even\")\nelse:\n    print(number, \" is odd\")\n    \n    ","083def6b":"for i in range(10):\n    print(i+1)\n","3c36a08f":"for i in range(10):\n    if (i % 2 == 0):\n        print(i, \" is even\")\n    else:\n        print(i, \" is odd\")\n","3a556244":"math.pi","415dbf3b":"number = 3.56\nmath.ceil(number)","1b3c01e9":"math.floor(number)","821fcbf1":"math.sqrt(number)","c384b4d8":"math.pow(3, 4)","63746ff2":"m.pi","42b20b91":"plt.plot([1,2,3,4])","9add9654":"plt.plot([1,2,3,4])\nplt.ylabel('some numbers')\nplt.xlabel('numbers')\n","d165212a":"plt.plot([1, 2, 3, 4], [1, 4, 9, 16])","c18f2fd3":"plt.plot([1,2,3,4], [1,4,9,16], 'go')\nplt.axis([0, 6, -10, 20])","89fa3ced":"np.arange(0., 5., 0.2)","4136ae33":"t = np.arange(0., 5., 0.2)\n\nplt.plot(t, t, 'r--', t, t**2, 'bs')","bd5549c4":"t = np.arange(0., 5., 0.2)\n\nplt.plot(t, t, 'r--', t, t**2, 'bs', t, t**3, 'g^')","01eb96a0":"t1 = np.arange(0.0, 5.0, 0.1)\nt2 = np.arange(0.0, 5.0, 0.02)\n\ndef f(t):\n    return np.exp(-t) * np.cos(2*np.pi*t)\n\nplt.figure(1)\nplt.subplot(211) # 2, 1, 1 - numrows, numcols, fignum\nplt.plot(t1, f(t1), 'bo', t2, f(t2), 'k')\n\nplt.subplot(212) # 2, 1, 2 - numrows, numcols, fignum\nplt.plot(t1, f(t1), 'bo', t2, f(t2), 'k')\n","16a1ce72":"t1 = np.arange(0.0, 5.0, 0.1)\nt2 = np.arange(0.0, 5.0, 0.02)\n\ndef f(t):\n    return np.exp(-t) * np.cos(2*np.pi*t)\n\nplt.figure(1)\nplt.subplot(211) # 2, 1, 1 - numrows, numcols, fignum\nplt.plot(t1, f(t1), 'bo', t2, f(t2), 'k')\n\nplt.subplot(212) # 2, 1, 2 - numrows, numcols, fignum\nplt.plot(t2, np.cos(2*np.pi*t2), 'r--')\n","19b76d00":"plt.figure(1)\nplt.subplot(211)\nplt.plot([1,2,3])\n\nplt.subplot(2,1,2)\nplt.plot([4,5,6])\n\nplt.figure(2)\nplt.plot([4,5,6])\n\nplt.title('Easy as 1, 2, 3') \n","c1ae7b68":"plt.figure(1)\nplt.subplot(211)\nplt.plot([1,2,3])\nplt.title('Easy as 1, 2, 3') \n\nplt.subplot(2,1,2)\nplt.plot([4,5,6])\n\nplt.figure(2)\nplt.plot([4,5,6])\n\n#plt.figure(1)\n#plt.subplot(211)\n#plt.title('Easy as 1, 2, 3') \n","1b3e1606":"mu = 100\nsigma = 15\n\nx = mu + sigma * np.random.randn(10000)\n\nplt.hist(x, 50, normed=1, facecolor='g', alpha=0.75)\n\nplt.xlabel(\"Smarts\")\nplt.ylabel('Probability')\nplt.title('Histogram Test')\nplt.text(120, .025, r'$\\mu=100,\\ \\sigma=15$')\nplt.grid(True)\n\nplt.show()","6e996bc0":"df = pd.read_csv(\"..\/input\/test_Y3wMUE5_7gLdaTN.txt\")\n\n# head first 10 rows of file\ndf.head(10)\n\n# tail - last 10 rows of file\n#df.tail(10)","1a2957a0":"df.describe()","86d6264d":"df['Property_Area'].value_counts()","bee49cc1":"**PEMDAS - Parentheses, Exponents, Multiplication\/Division, Addition\/Subtraction.**","1646d27c":"**modulus of 2 can only be 1 or 0**","64b97725":"**c - copy\nv - paste\nx - cut**","e5df1952":"[plot](https:\/\/matplotlib.org\/api\/pyplot_api.html#matplotlib.pyplot.plot)"}}