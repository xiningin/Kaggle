{"cell_type":{"63a4d0fe":"code","ff88c30a":"code","706f8b94":"code","1925cc75":"code","40e44e77":"code","4225a6bb":"code","cab2f927":"code","5a9e809c":"code","aaf7044c":"code","276e0897":"code","298b3c73":"code","046d791f":"code","eb781575":"code","c4163fb7":"code","076ed927":"code","18f7889c":"code","8f8ff774":"code","6098b234":"code","bfbe88e3":"code","a6c8b399":"code","814923b3":"code","c5d14562":"code","d2df2eb3":"code","48bc1e04":"code","58a3a52d":"markdown","bf4f99ec":"markdown","eea2b66a":"markdown","bd81544e":"markdown","c0ea9abc":"markdown","20106158":"markdown"},"source":{"63a4d0fe":"#IMPORTING LIBRARIES\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf","ff88c30a":"#IMPORTING DATASET\nds = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')\nds.head()","706f8b94":"#REMOVING UNNECESSARY FEATURES\nds.drop(['RowNumber', 'CustomerId', 'Surname'],axis = 1,inplace = True)","1925cc75":"#DATASET NOW HAS 10000 ROWS AND 11 COLUMNS\nds.shape","40e44e77":"#CHECKING FOR NULL VALUES\nds.isnull().sum()","4225a6bb":"#FEATURES 1 AND 2 ARE CATEGORICAL THEREFORE WE HAVE TO CONVERT THAT CATEGORICAL DATA\nds.info()","cab2f927":"ds.columns","5a9e809c":"plt.figure(figsize=(18,10))\ncol = ['Geography','Gender','Tenure','NumOfProducts', 'HasCrCard','IsActiveMember']\nc = 1\nfor i in col:\n    if c < 7:\n        plt.subplot(2,3,c)\n        sns.countplot(x = i,data =ds,hue = 'Exited')\n        plt.xlabel(i)\n    c += 1\n    plt.tight_layout()","aaf7044c":"sns.countplot(x = 'Exited', data = ds)","276e0897":"plt.figure(figsize=(12,10))\ncol = ['CreditScore','Age','Balance','EstimatedSalary']\nc = 1\nfor i in col:\n    if c < 5:\n        plt.subplot(2,2,c)\n        sns.violinplot(x = 'Exited',y = i,data =ds )\n        plt.xlabel(i)\n    c += 1\n    plt.tight_layout()","298b3c73":"plt.figure(figsize = (12,10))\nsns.heatmap(ds.corr(),annot = True)","046d791f":"#DIVIDING DATASET IN DEPENDENT AND INDEPENDENT VARIABLE\nx = ds.iloc[:,:-1].values\ny = ds.iloc[:,-1].values","eb781575":"#APPLYING LABEL ENCODING ON FEATURE 'GENDER'\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nx[:, 2] = le.fit_transform(x[:, 2])","c4163fb7":"#APPLYING ONE HOT ENCODING ON FEATURE 'GEOGRAPHY'\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nx = np.array(ct.fit_transform(x))","076ed927":"#SPLITTING DATASET IN TRAINING AND TESTING SET\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 0)","18f7889c":"#FEATURE SCALING IS NECESSARY IN ANN\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","8f8ff774":"#CREATING THE ANN AS SEQUENCE OF LAYERS\nann = tf.keras.Sequential()","6098b234":"#ADDING FIRST HIDDEN LAYER WITH 6 NEURONS, THE INPUT LAYER WILL BE ADDED AUTOMATICALLY,\nann.add(tf.keras.layers.Dense(units = 6,activation = 'relu'))","bfbe88e3":"#ADDING 2ND HIDDEN LAYER WITH 6 NEURONS\nann.add(tf.keras.layers.Dense(units = 6,activation = 'relu'))","a6c8b399":"#ADDING OUTPUT LAYER WITH 1 NEURON , AS THIS IS A BINARY CLASSIFICATION\nann.add(tf.keras.layers.Dense(units = 1,activation = 'sigmoid'))","814923b3":"#COMPILING THE ANN USING STOCHASTIC GRADIENT DESCENT (optimizer = 'adam')\nann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","c5d14562":"#TRAINING THE ANN WITH BATCH SIZE OF 32 (THIS IS A BATCH LEARNING)\nann.fit(x_train, y_train,batch_size = 32, epochs = 100)","d2df2eb3":"#GETTING ACCURACY AND CONFUSION MATRIX\nfrom sklearn.metrics import confusion_matrix,accuracy_score\ny_pred = ann.predict(x_test)\ny_pred  = y_pred > 0.5\ncm = confusion_matrix(y_pred,y_test)\nac = accuracy_score(y_pred,y_test)","48bc1e04":"sns.heatmap(cm,annot = True)\nplt.title('CONFUSION MATRIX')\nprint('Accuracy - {}%'.format(ac*100))","58a3a52d":"**AROUND 2000  CUSTOMERS HAVE CHURNED**","bf4f99ec":"**NO MISSING VAUES**","eea2b66a":"**-MOST CHURNED CUSTOMERS ARE FROM GERMNAY.**\n\n**-NUMBER OF FEMALE CUSTOMERS CHURNED ARE MORE AS COMPARED TO MALE CUSTOMERS.**\n\n**-TENURE BETWEEN 1 - 9 IS HIGH.**\n\n**-MOST CUSTOMERS CHURNED HAS 1 PRODUCT.**\n\n**-PEOPLE HAVING HASH CARD ARE MORE LIKELY TO CHURN.**\n\n**-WHEN PEOPLE BECOME INACTIVE THEY ARE MOST LIKELY TO EXIT THE BANK.**\n","bd81544e":"**NO SIGNIFICANT CORRELATION**","c0ea9abc":"**-CHURNED CUSTOMERS HAD AN AVERAGE CREDIT SCORE AROUND 650, BUT CREDIT SCORE DOESN'T HAVE ANY AFFECT ON CHURNING.**\n\n**-CHURNED CUSTOMERS HAD AN AVERAGE AGE OF 45,AGED PEOPLE WERE FOUND TO BE LEAVING MORE.**\n\n**-CHURNED CUSTOMERS HAD AN AVERAGE BALANCE BETWEEN 100000 - 150000.**\n\n**-SALARY DOESN'T HAVE ANT AFFECT ON CHURNING**","20106158":"**PREDICTING CHURN MEANS FINDING IF A CUSTOMER WILL LEAVE OR NOT.**\n\n**THE DATASET HAS 13 FEATURES AMONG WHICH ALL ARE INDEPENDENT EXCEPT THE LAST ONE WHICH IS DEPENDENT. ANN IS APPLIED TO CREATE A MODEL TO PREDICT THE CHURN.**\n\n**I CREATED A ANN WITH 2 HIDDEN LAYERS BOTH WITH 6 NEURONS.**"}}