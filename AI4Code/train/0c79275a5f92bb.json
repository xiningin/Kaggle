{"cell_type":{"f463b007":"code","2a6dd2fd":"code","22ddf224":"code","72525980":"code","b3064305":"code","07c4097f":"code","cebc2c27":"code","042f1c53":"code","3dc98596":"markdown","186e7516":"markdown","e517dc62":"markdown","975f1e93":"markdown","51bb6085":"markdown","e4ab803a":"markdown","9951a509":"markdown","729200f5":"markdown"},"source":{"f463b007":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a6dd2fd":"TenneTTSO=pd.read_csv('\/kaggle\/input\/wind-power-generation\/TenneTTSO.csv')\nHertz=pd.read_csv('\/kaggle\/input\/wind-power-generation\/50Hertz.csv')\nTransnetBW=pd.read_csv('\/kaggle\/input\/wind-power-generation\/TransnetBW.csv')\nAmprion=pd.read_csv('\/kaggle\/input\/wind-power-generation\/Amprion.csv')","22ddf224":"#Consider how time correlated\nAmprion.set_index('Date',inplace=True)\nimport plotly.graph_objects as go\nx=list(Amprion.corr().index)\ny=list(Amprion.corr().columns)\nvalues=np.array(Amprion.corr().values)\nfig = go.Figure(data=go.Heatmap(\n    z=values,\n    x=x,\n    y=y,\n                 \n    \n                   hoverongaps = False))\nfig.show()","72525980":"TransnetBW.set_index('Date',inplace=True)\nimport plotly.graph_objects as go\nx=list(TransnetBW.corr().index)\ny=list(TransnetBW.corr().columns)\nvalues=np.array(TransnetBW.corr().values)\nfig = go.Figure(data=go.Heatmap(\n    z=values,\n    x=x,\n    y=y,\n                 \n    \n                   hoverongaps = False))\nfig.show()","b3064305":"Hertz.set_index('Date',inplace=True)\nimport plotly.graph_objects as go\nx=list(Hertz.corr().index)\ny=list(Hertz.corr().columns)\nvalues=np.array(Hertz.corr().values)\nfig = go.Figure(data=go.Heatmap(\n    z=values,\n    x=x,\n    y=y,\n                 \n    \n                   hoverongaps = False))\nfig.show()","07c4097f":"TenneTTSO.set_index('Date',inplace=True)\nimport plotly.graph_objects as go\nx=list(TenneTTSO.corr().index)\ny=list(TenneTTSO.corr().columns)\nvalues=np.array(TenneTTSO.corr().values)\nfig = go.Figure(data=go.Heatmap(\n    z=values,\n    x=x,\n    y=y,\n                 \n    \n                   hoverongaps = False))\nfig.show()","cebc2c27":"import matplotlib.pyplot as plt\nstd=pd.DataFrame({'TenneTTSO':np.std(TenneTTSO),'Hertz':np.std(Hertz),'TransnetBW':np.std(TransnetBW),'Amprion':np.std(Amprion)})\nsumm=pd.DataFrame({'TenneTTSO':TenneTTSO.median(),'Hertz':Hertz.median(),'TransnetBW':TransnetBW.median(),'Amprion':Amprion.median()})\nsumm.plot(figsize=(10,10),yerr=std)","042f1c53":"summ.plot(figsize=(5,10))","3dc98596":"TransnetBW","186e7516":"50Hertz","e517dc62":"So, we have four companies producing wind enegry. Time series data shows how much enegry they produce every 15 min during dome period of time. Let's explore what is the most productive time frame and company","975f1e93":"Amprion","51bb6085":"TenneTTSO","e4ab803a":"How time measurements correlate with each other? Significant bias in TransnetBW is visible. ","9951a509":"This the same chart without standard deviation and having more shrunken x axis. ","729200f5":"So, wind changes by time so do productivity. However it's hard to say what time is the best but it's definitely not early in the morning. "}}