{"cell_type":{"60fa69f8":"code","e1c92070":"code","7f0c47d1":"code","fd19469f":"code","92464cca":"code","f22400a8":"code","2c0af258":"code","c47d3e4f":"code","e372d7d5":"code","5bfc8341":"code","0d4161b3":"code","93a41fea":"code","21942703":"code","ab0e0946":"code","7ebd64b4":"code","8c3dbf83":"code","ec8a42c4":"code","30f34b04":"code","7bc968c0":"code","b2bb0522":"code","12dde498":"code","45a418c3":"code","de05a716":"code","09bf52fc":"code","8c4ccb7e":"code","8d91e8fc":"code","abf01aa1":"code","76b04f8a":"code","b3d7ccbf":"code","ed7fb534":"markdown","a0a29e76":"markdown","e7a274c1":"markdown","a8ec0ab6":"markdown","c795c830":"markdown","b2e35eb6":"markdown","e6f0acfd":"markdown","f97a02df":"markdown","801f2491":"markdown","c916f368":"markdown","147e0645":"markdown","dba96f93":"markdown"},"source":{"60fa69f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1c92070":"#import libraries\nimport numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7f0c47d1":"data = pd.read_csv('\/kaggle\/input\/weather-dataset\/weatherHistory.csv')\ndata.shape","fd19469f":"data.head()","92464cca":"df = data.copy()\ndf.dtypes","f22400a8":"# let's correct the dtype of formatted date\ndf['Formatted Date'] = pd.to_datetime(df['Formatted Date'], utc=True)","2c0af258":"df.dtypes","c47d3e4f":"df.isnull().sum()","e372d7d5":"categorical_features = [feature for feature in df.columns if df[feature].dtype == 'O']\nprint(f\"len of categorical features {len(categorical_features)}\")","5bfc8341":"df[categorical_features].head()","0d4161b3":"#drop the Daily summary column\ndf.drop('Daily Summary', axis=1, inplace=True)","93a41fea":"print(\"%14s %15s %15s\" %(\"column\",\"Distinct\",\"Null\"))\nfor col in ['Summary','Precip Type']:\n    uniq = df[col].nunique()\n    na = df[col].isnull().sum()\n    print(\"%14s %15s %15s\" %(col,uniq,na))","21942703":"data.groupby('Precip Type')['Temperature (C)'].mean()","ab0e0946":"plt.figure(figsize=(15,5))\nsns.countplot(x='Summary',hue='Precip Type', data=df)\nplt.legend(loc='upper right') #1\nplt.xticks(rotation='vertical')\nplt.show()","7ebd64b4":"numerical_features = [feature for feature in df.columns if df[feature].dtype != 'O']\nprint(f\"len of categorical features {len(numerical_features)}\")","8c3dbf83":"df[numerical_features].head(3)","ec8a42c4":"df1 = df.set_index('Formatted Date')\ndf1 = df1[['Apparent Temperature (C)','Humidity']].resample('MS').mean()\ndf1","30f34b04":"# relation between temperature and Humidity\nplt.figure(figsize=(11,5))\nplt.plot(df1['Apparent Temperature (C)'], label=\"Temperature\", color=\"green\")\nplt.plot(df1['Humidity'], label=\"Humidity\", color=\"blue\", linestyle=\"dashed\", linewidth=3)\nplt.title(\"Variation Of Apparent Temperature Vs Humidity \")\nplt.legend(loc=\"best\")\nplt.show()","7bc968c0":"# Jan 2006 to Jan 2016","b2bb0522":"jan = df1[df1.index.month==1]\njan.head(2)","12dde498":"plt.figure(figsize=(10,4))\nplt.plot(jan.loc['2006-01-01':'2016-01-01','Apparent Temperature (C)'],\n        marker='o',label=\"Apparent Temperature\",linestyle='-',color=\"green\")\nplt.plot(jan.loc['2006-01-01':'2016-01-01','Humidity'],marker='o',\n        linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in JAN 2006 TO JAN 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","45a418c3":"feb = df1[df1.index.month==2]\n\nplt.figure(figsize=(10,4))\nplt.plot(feb.loc['2006-02-01':'2016-02-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(feb.loc['2006-02-01':'2016-02-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in FEB 2006 TO FEB 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","de05a716":"march = df1[df1.index.month==3]\n\nplt.figure(figsize=(10,4))\nplt.plot(march.loc['2006-03-01':'2016-03-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(march.loc['2006-03-01':'2016-03-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in MAR 2006 TO MAR 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","09bf52fc":"april = df1[df1.index.month==4]\n\nplt.figure(figsize=(10,4))\nplt.plot(april.loc['2006-04-01':'2016-04-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(april.loc['2006-04-01':'2016-04-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in APRIL 2006 TO APRIL 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","8c4ccb7e":"may = df1[df1.index.month==5]\n\nplt.figure(figsize=(10,4))\nplt.plot(may.loc['2006-05-01':'2016-05-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(may.loc['2006-05-01':'2016-05-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in MAY 2006 TO MAY 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","8d91e8fc":"june = df1[df1.index.month==6]\n\nplt.figure(figsize=(10,4))\nplt.plot(march.loc['2006-06-01':'2016-06-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(march.loc['2006-06-01':'2016-06-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in June 2006 TO June 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","abf01aa1":"july = df1[df1.index.month==6]\n\nplt.figure(figsize=(10,4))\nplt.plot(march.loc['2006-07-01':'2016-07-01','Apparent Temperature (C)'],\n        marker='o',linestyle='-',label=\"Apparent Temperature\",color=\"green\")\nplt.plot(march.loc['2006-07-01':'2016-07-01','Humidity'],\n        marker='o',linestyle='-',label=\"Humidity\",color=\"blue\")\nplt.title(\"App Temp Vs Humidity variation in July 2006 TO July 2016\")\nplt.legend(loc=\"best\")\nplt.xticks(rotation=45)\nplt.show()","76b04f8a":"df2 = df.set_index('Formatted Date')\ndf2 = df2[['Temperature (C)','Wind Speed (km\/h)','Humidity']].resample('MS').mean()\ndf2","b3d7ccbf":"janw = df2[df2.index.month == 1]\n\nplt.figure(figsize=(10,4))\nplt.plot(janw.loc['2006-01-01':'2016-01-01','Wind Speed (km\/h)'],\n        marker='o',linestyle='-',color=\"orange\", label=\"Wind Speed (km\/h)\")\nplt.plot(janw.loc['2006-01-01':'2016-01-01','Humidity'],\n        marker='o',linestyle='-',color=\"purple\", label=\"Wind Speed (km\/h)\")\nplt.title(\"Variation of wind spped with humidity in JAN 2006 TO JAN 2016\")\nplt.legend(loc=\"best\")\nplt.show()","ed7fb534":"**The problem statement suggest that to check the variation of humidity of all the 10 years (2006-2016). so let;s check the graph for some months separately**","a0a29e76":"**Observation**\n- from the above graph we can say that Humidity is almost constant in these years. and temperature is also the same as peak lies on same line.","e7a274c1":"**Here, MS means Monthly Starting. we are displaying the average Apparent temperature w.r.t Humidity with help of mean().**","a8ec0ab6":"**Let's check Wind speed w.r.t Humidity**","c795c830":"## THANK YOU!.","b2e35eb6":"**CATEGORICAL FEATURES**","e6f0acfd":"**OBSERVATIONS**\n- With respect to humidity appraent temperature every year and every month varying a lot. sometimes it is at peak and sometimes temp fall down.\n- humidity is as constant as app temp varies according to month each year.","f97a02df":"## EDA","801f2491":"**Before moving forward, let's check for missing values**","c916f368":"**Numerical Features**","147e0645":"**Now since we have been given hourly data, we need to resample it monthly. Resampling is a convenient method for frequency conversion. Object must have a datetime like index**\n\n### After Resampling","dba96f93":"**Analysis of Variation of Temperature w.r.t Humidity from 2006 to 2016 in different months.**"}}