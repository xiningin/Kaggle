{"cell_type":{"0c6117c2":"code","9fe3add6":"code","5d8ea481":"code","708d9bd2":"code","d1316440":"code","63d585a4":"code","f94ebfd5":"code","2de9ac21":"code","0b85f2c5":"code","e54c6d6f":"markdown","9af39277":"markdown"},"source":{"0c6117c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport folium\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n        df= pd.read_csv(r'\/kaggle\/input\/brooklyn-food-waste\/brooklyn.csv')\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fe3add6":"df.shape","5d8ea481":"df.loc[df.duplicated()]","708d9bd2":"df.isnull().sum()","d1316440":"df.dtypes\n","63d585a4":"df['retailer_type'].unique()","f94ebfd5":"test=df.groupby(['collection_lat',\t'collection_long'\t,'retailer_type',\t'retailer_detail', ])['approximate_dollar_value'].sum()\ntest=test.reset_index()","2de9ac21":"location_data = pd.DataFrame()\nlocation_data['latitude']= test['collection_lat']\nlocation_data['longitude']= test['collection_long']\nlocation_data['retailer_type']=test['retailer_type']\nlocation_data['dollar_value_total']=test['approximate_dollar_value']","0b85f2c5":"#create a map using latitude and longitude, respectively, of general Brooklyn through a google search\nmap=folium.Map(location=[40.6782,-73.99447], zoom_start=10)\n\n#create a feature group to add to the map\ndumpsters = folium.map.FeatureGroup()\n\n#create loop to add location of dumpsters to the map\nfor lat, lon, in zip(location_data.latitude, location_data.longitude):\n    dumpsters.add_child(\n        folium.features.CircleMarker(\n            [lat,lon],\n            radius= 8,\n            color= 'blue',\n            fill= True,\n            fill_color= 'red',\n            fill_opacity=0.7\n        )\n    )\n#adding some text to markers\nlatitudes = list(location_data.latitude)\nlongitudes = list(location_data.longitude)\nstore_label = location_data.retailer_type\ndollar_label= location_data.dollar_value_total.round(2)\n\nfor lat, lon, label1, label2 in zip(latitudes, longitudes, store_label,dollar_label ):\n    folium.Marker([lat, lon], popup=[label1, label2]).add_to(map)\n\n#add features to map\nmap.add_child(dumpsters)","e54c6d6f":"# Using data to map locations visited\n\nUsing Folium I created a map located the collection puts with some categorical information","9af39277":"## Data Set looks good for our purposes. \n### We will create a dataframe with the information we want to put on our map and use Folium to map it out"}}