{"cell_type":{"7710ebc5":"code","6c79667d":"code","92bc2c76":"code","9c1b997c":"code","f27e78e9":"markdown"},"source":{"7710ebc5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom IPython.display import display_html\nfrom PIL import Image\nimport gc\nimport cv2\nimport pydicom # for DICOM images\nfrom skimage.transform import resize\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c79667d":"# Any results you write to the current directory are saved as output.\nimage = cv2.imread('\/kaggle\/input\/totaltextstr\/Total-Text\/Test\/img1093.jpg')\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\nplt.figure(figsize=(12, 12))\nplt.subplot(1, 2, 1)\nplt.title(\"Original\")\nplt.imshow(image)\n\n# Create our shapening kernel, we don't normalize since the \n# the values in the matrix sum to 1\nkernel_sharpening = np.array([[-1,-1,-1], \n                              [-1,9,-1], \n                              [-1,-1,-1]])\n\n# applying different kernels to the input image\nsharpened = cv2.filter2D(image, -1, kernel_sharpening)\n\n\nplt.subplot(1, 2, 2)\nplt.title(\"Image Sharpening\")\nplt.imshow(sharpened)\n\nplt.show()","92bc2c76":"#Codes from Andrada Olteanu https:\/\/www.kaggle.com\/andradaolteanu\/siim-melanoma-competition-eda-augmentations\/notebook\u00b6\n#for i in range(0, 2*6):\n  #  data = pydicom.read_file(df['input\/bird-species\/dataset1.0\/train\/Hawk\/09bf87799e7b43308a0c5bdff428ba84.jpg'][i])\n   # image = data.pixel_array\nimage = cv2.imread('\/kaggle\/input\/totaltextstr\/Total-Text\/Test\/img1093.jpg')    \n    # Transform to B&W\n    # The function converts an input image from one color space to another.\nimage = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)\nimage = cv2.resize(image, (200,200))\n    \n#x = i \/\/ 6\n#y = i % 6\n#axes[x, y].imshow(image, cmap=plt.cm.bone) \n#axes[x, y].axis('off')\nplt.imshow(image)","9c1b997c":"fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(16,5))\n\n#for i in range(0, 2*6):\n #   data = pydicom.read_file(train_df['path_ditotaltextstr\/Total-Text\/Test\/img1093com'][i])\n #   image = data.pixel_array\nimage = cv2.imread('\/kaggle\/input\/totaltextstr\/Total-Text\/Test\/img1093.jpg')     \n    # Transform to B&W\n    # The function converts an input image from one color space to another.\nimage = cv2.cvtColor(image, cv2.COLOR_RGB2HSV)\nimage = cv2.resize(image, (200,200))\n    \n#    x = i \/\/ 6\n #   y = i % 6\n  #  axes[x, y].imshow(image, cmap=plt.cm.bone) \n   # axes[x, y].axis('off')\nplt.imshow(image) ","f27e78e9":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke"}}