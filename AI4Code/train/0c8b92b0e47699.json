{"cell_type":{"9e9d6647":"code","0bd5955e":"code","38ab235e":"code","62f91d08":"code","77f28114":"code","7626ded7":"code","1beaa104":"code","4be81bd2":"code","985788ff":"code","e1e97480":"code","8e1f2652":"code","66ddcb10":"code","3cdb1d27":"code","3ff19051":"code","d84b74a3":"code","62e6c94d":"code","097cf1e7":"code","ce2ca103":"code","574ac757":"code","c1f84f82":"code","42387c61":"code","fde6fb0f":"code","916e8068":"code","daf3e28d":"code","a6a60e13":"code","30f6434c":"code","377a4b7f":"code","9e6b2956":"code","15b1f475":"code","3f3fc357":"code","04ac502c":"code","9bd20e69":"markdown"},"source":{"9e9d6647":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bd5955e":"import numpy as np\nimport pandas as pd\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler,Normalizer\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score,mean_squared_error\nfrom sklearn.model_selection import train_test_split","38ab235e":"df = pd.read_csv('..\/input\/house-price-prediction-challenge\/train.csv')","62f91d08":"df.head()","77f28114":"df.shape","7626ded7":"df.isnull().sum()","1beaa104":"plt.figure(figsize=(15,5))\ndf['POSTED_BY'].value_counts().plot(kind='barh',color='r')\nplt.show()","4be81bd2":"df['BHK_NO.'].value_counts()[:5].plot(kind='bar',color='g')","985788ff":"df['UNDER_CONSTRUCTION'].value_counts().plot(kind='bar',color='gold')","e1e97480":"df['READY_TO_MOVE'].value_counts().plot(kind='bar',color='orange')","8e1f2652":"df['RESALE'].value_counts().plot(kind='bar',color='pink')","66ddcb10":"df['RERA'].value_counts().plot(kind='bar',color='violet')","3cdb1d27":"plt.figure(figsize=(15,5))\ndf.ADDRESS = df.ADDRESS.apply(lambda x: x.split(',')[-1])\ndf.ADDRESS.value_counts()[:20].plot(kind='bar',color='navy')\nplt.show()","3ff19051":"def label_encoder(df, column_name):\n    label_encoder = preprocessing.LabelEncoder()\n\n    df[column_name]= label_encoder.fit_transform(df[column_name])\n    print(column_name)\n    for i in range(len(df[column_name].unique())):\n        print(\"For {} : {}\".format(i, label_encoder.inverse_transform([i])))\n    print('-'*10)\n    print(df[column_name].value_counts())\n    print('-'*10)\n    \n    return df[column_name], label_encoder","d84b74a3":"df['POSTED_BY'], label_encoder_posted_by = label_encoder(df, 'POSTED_BY')\ndf['BHK_OR_RK'], label_encoder_posted_by = label_encoder(df, 'BHK_OR_RK')\ndf['ADDRESS'], label_encoder_posted_by = label_encoder(df, 'ADDRESS')","62e6c94d":"df.head()","097cf1e7":"df.columns","ce2ca103":"X = df[['POSTED_BY', 'UNDER_CONSTRUCTION', 'RERA', 'BHK_NO.', 'BHK_OR_RK',\n       'SQUARE_FT', 'READY_TO_MOVE', 'RESALE', 'ADDRESS', 'LONGITUDE',\n       'LATITUDE']]\nY = df[['TARGET(PRICE_IN_LACS)']]","574ac757":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3)","c1f84f82":"from sklearn.tree import DecisionTreeRegressor","42387c61":"from sklearn.tree import DecisionTreeRegressor\ndtr = DecisionTreeRegressor().fit(X,Y)\nprint(dtr.score(X, Y))","fde6fb0f":"test = pd.read_csv('..\/input\/house-price-prediction-challenge\/test.csv')","916e8068":"test.head()","daf3e28d":"def label_encoder(test, column_name):\n    label_encoder = preprocessing.LabelEncoder()\n\n    test[column_name]= label_encoder.fit_transform(test[column_name])\n    print(column_name)\n    for i in range(len(test[column_name].unique())):\n        print(\"For {} : {}\".format(i, label_encoder.inverse_transform([i])))\n    print('-'*10)\n    print(test[column_name].value_counts())\n    print('-'*10)\n    \n    return test[column_name], label_encoder","a6a60e13":"test.ADDRESS = test.ADDRESS.apply(lambda x: x.split(',')[-1])","30f6434c":"test['POSTED_BY'], label_encoder_posted_by = label_encoder(test, 'POSTED_BY')\ntest['BHK_OR_RK'], label_encoder_posted_by = label_encoder(test, 'BHK_OR_RK')\ntest['ADDRESS'], label_encoder_posted_by = label_encoder(test, 'ADDRESS')\n","377a4b7f":"sample = pd.read_csv('\/kaggle\/input\/house-price-prediction-challenge\/sample_submission.csv')\nsample.head()","9e6b2956":"res = dtr.predict(test)","15b1f475":"for i in range(0, res.shape[0]):\n    sample.iloc[i,0] = res[i]","3f3fc357":"sample.head()","04ac502c":"sample.tail(5)","9bd20e69":"# PLOTS"}}