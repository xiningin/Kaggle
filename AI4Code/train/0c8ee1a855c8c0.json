{"cell_type":{"c26ba6b8":"code","b1f3a926":"code","ca5e11e5":"code","e3306d74":"code","e08a3d82":"code","33feba7f":"code","9eab8eec":"code","5048a445":"code","3614e259":"code","714e91a5":"code","76f3cba7":"code","e46f42cc":"code","80a5c145":"code","5115cd26":"code","b30710bd":"code","4466955a":"code","da96c566":"code","ce358dd1":"code","cc3a26fa":"code","f939305a":"code","1dd0a8f2":"code","e720e5bb":"code","c68e6379":"code","c9f09967":"code","a61c4122":"code","1c681778":"code","bd404f87":"code","04c7456d":"code","9a57fbef":"code","663c6d0a":"code","df11fb95":"code","930b4750":"code","fbbeb096":"code","b0b5599b":"code","dcae2f63":"code","77f05d81":"code","b6582a31":"markdown","d5571766":"markdown","52039892":"markdown","d6988d47":"markdown"},"source":{"c26ba6b8":" ! pip install -q kaggle","b1f3a926":" from google.colab import files\n\nfiles.upload()","ca5e11e5":"!mkdir -p ~\/.kaggle","e3306d74":"!cp kaggle.json ~\/.kaggle\/","e08a3d82":"!ls ~\/.kaggle","33feba7f":"! chmod 600 ~\/.kaggle\/kaggle.json","9eab8eec":"pip show kaggle","5048a445":"!kaggle competitions download nfl-big-data-bowl-2022","3614e259":"missing_values = [\"n\/a\", \"na\", \"--\",\"-\"] \nimport warnings\nimport tensorflow as tf\nfrom tensorflow import keras \ntf.test.is_gpu_available()\nimport numpy             as np\nimport pandas            as pd\npd.set_option('display.max_columns', 100)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Activation, Dense\nfrom tensorflow.keras.layers import BatchNormalization, Dropout\nfrom tensorflow.keras import optimizers,regularizers","714e91a5":"!unzip \"\/content\/tracking2018.csv.zip\"","76f3cba7":"tracking2018= pd.read_csv('\/content\/tracking2018.csv', index_col=False)","e46f42cc":"tracking2018.head()","80a5c145":"sns.set_style(\"darkgrid\")\nsns.displot(data=tracking2018, x=\"playDirection\")","5115cd26":"tracking2018.fillna(tracking2018.median())","b30710bd":"tracking2018.isnull().sum()","4466955a":"ax = sns.heatmap(tracking2018.corr(), linewidth=0.8)\nplt.show()","da96c566":"tracking2018.drop(['x','y','jerseyNumber','gameId','playId','time','event','displayName','team'], axis='columns', inplace=True)","ce358dd1":"tracking2018['o'].fillna(tracking2018.o.median(), inplace = True)  \ntracking2018['nflId'].fillna(tracking2018.nflId.median(), inplace = True)  \ntracking2018['dir'].fillna(tracking2018.dir.mean(), inplace = True)  ","cc3a26fa":"tracking2018.describe()","f939305a":"one_hot = pd.get_dummies(tracking2018['position'])","1dd0a8f2":"tracking2018 = tracking2018.drop('position',axis = 1)","e720e5bb":"tracking2018 = tracking2018.join(one_hot)\ntracking2018['playDirection'] = tracking2018['playDirection'].astype('bool') ","c68e6379":"tracking2018.head()","c9f09967":"tracking2018.isnull().sum()","a61c4122":"X = tracking2018.drop(\"playDirection\", axis=1)\ny = tracking2018['playDirection']","1c681778":"# splitting into training and testing\nX_vtrain, X_test, y_vtrain, y_test = train_test_split(X, y, test_size=.30)","bd404f87":"# splitting to create training and validation data\nX_train, X_val, y_train, y_val = train_test_split(X_vtrain, y_vtrain, test_size=.20)","04c7456d":"datashape = X_train.shape\ndatashape","9a57fbef":"# Input Layer\n#Adding Input layer and activation functions ReLU\nnn_reg = Sequential([\n                     Dense(34, activation ='relu',input_shape= (34, ))])","663c6d0a":"nn_reg.add(Dense(34, activation ='relu'))\nnn_reg.add(Dense(17, activation ='relu'))\nnn_reg.add(Dense(8, activation ='relu'))\nnn_reg.add(Dense(4, activation ='relu'))\nnn_reg.add(Dense(2, activation ='relu'))\nnn_reg.add(Dense(1, activation ='softmax'))","df11fb95":"nn_reg.summary()","930b4750":"nn_reg.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=[\"accuracy\"])","fbbeb096":"print(y_train)","b0b5599b":"nn_reg.fit(X_train, y_train, validation_data=(X_val,y_val),epochs=5, batch_size=1000)","dcae2f63":"tf.keras.utils.plot_model(nn_reg, show_shapes=True)\n","77f05d81":"\nlosses = pd.DataFrame(nn_reg.history.history)\nlosses.plot()\n","b6582a31":"<font color = red> <b> This surely is an overfit data, however we can further use the logic to combine multiple NN to drive at an outcome after the target variable is decied. \n\n\nwe can futher feature engineer other sets and find out the best possible combination of NN to give out the desired output. ","d5571766":"Corr between S,A, dis, dir Frame id seems to be \nconvincing \n\n---\n\nConsidering playDirection as our target variable we will keep the coorelated columns for further processing. \n\n","52039892":"<a href=\"https:\/\/colab.research.google.com\/github\/GunjanGrunge\/SVHNNeuralNetwork\/blob\/main\/nfl_big_data_bowl_2022_Neural_Network_Experiment.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","d6988d47":"\n<FONT COLOR = TEAL>\n<B> File descriptions <\/b>\n\n    Game data: The games.csv contains the teams playing in each game. The key variable is gameId.\n\n    Play data: The plays.csv file contains play-level information from each game. The key variables are gameId and playId.\n\n    Player data: The players.csv file contains player-level information from players that participated in any of the tracking data files. The key variable is nflId.\n\n    Tracking data: Files tracking[season].csv contain player tracking data from season [season]. The key variables are gameId, playId, and nflId.\n\n    PFF Scouting data: The PFFScoutingData.csv file contains play-level scouting information for each game. The key variables are gameId and playId*\n\n"}}