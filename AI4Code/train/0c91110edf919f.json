{"cell_type":{"f9f14029":"code","3c620387":"code","41d0003b":"code","de5dc9ef":"code","6a3ce6f9":"code","f6dc6b62":"code","7e406f63":"code","c6e9ee4c":"code","f0651d21":"code","fe859230":"code","a50d7e44":"code","66d8a097":"code","0443f165":"code","4ce3ac4e":"code","a95e0b5b":"code","f26d8f51":"code","5a55e03e":"code","c19d46e8":"markdown","3f11399e":"markdown","2c373ca5":"markdown","38775fbb":"markdown","50286c84":"markdown","f95e3e0e":"markdown","ad9b6363":"markdown","94a8f4bd":"markdown","60a8f80e":"markdown","679f1ac2":"markdown","24773370":"markdown","b5584a72":"markdown","fd9005e1":"markdown","bda85818":"markdown"},"source":{"f9f14029":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nimport warnings \nwarnings.filterwarnings(\"ignore\")","3c620387":"df = pd.read_csv(\"..\/input\/heart.csv\")","41d0003b":"df.head()","de5dc9ef":"df.columns = ['age', 'sex', 'chest_pain_type', 'resting_blood_pressure', 'cholesterol', 'fasting_blood_sugar', 'rest_ecg', 'max_heart_rate_achieved',\n       'exercise_induced_angina', 'st_depression', 'st_slope', 'num_major_vessels', 'thalassemia', 'target']","6a3ce6f9":"df.isna().sum()","f6dc6b62":"sns.countplot(df['target'].value_counts())","7e406f63":"sns.pairplot(data=df,hue='target')","c6e9ee4c":"print(\"Sex Feature unique Values is\\n{0}\".format(df['sex'].value_counts()))\nprint(\"Chest Pain Feature unique Values is\\n{0}\".format(df['chest_pain_type'].value_counts()))\nprint(\"Fast Blood Sugar Feature unique Values is\\n{0}\".format(df['fasting_blood_sugar'].value_counts()))\nprint(\"rest_ecg Feature unique Values is\\n{0}\".format(df['rest_ecg'].value_counts()))\nprint(\"exercise_induced_angina Feature unique Values is\\n{0}\".format(df['exercise_induced_angina'].value_counts()))\nprint(\"st_slope Feature unique Values is\\n{0}\".format(df['st_slope'].value_counts()))\nprint(\"thalassemia Feature unique Values is\\n{0}\".format(df['thalassemia'].value_counts()))\n","f0651d21":"# Applying Reverse Engineerig on the following features for applying one hot encoding.\n# Sex Feature \ndf['sex'][df['sex'] == 1] = 'male'\ndf['sex'][df['sex'] == 0] = 'female'\n\n# Chest Pain Type* Feature\n# Value 0: typical angina\n# Value 1: atypical angina\n# Value 2: non-anginal pain\n# Value 3: asymptomatic \ndf['chest_pain_type'][df['chest_pain_type'] == 0] = 'typical angia'\ndf['chest_pain_type'][df['chest_pain_type'] == 1] = 'atypical angia'\ndf['chest_pain_type'][df['chest_pain_type'] == 2] = 'non-anginal pain'\ndf['chest_pain_type'][df['chest_pain_type'] == 3] = 'asymptomatic'\n\n\n# fbs: (fasting blood sugar > 120 mg\/dl)** ---> fasting_blood_sugar\n#  1 = true\n#  0 = false     \ndf['fasting_blood_sugar'][df['fasting_blood_sugar'] == 1] = 'fasting blood sugar greater 120mg\/dl'\ndf['fasting_blood_sugar'][df['fasting_blood_sugar'] == 0] = 'fasting blood sugar less 120mg\/dl'\n\n        \n# ** restecg: resting electrocardiographic results** rest_ecg\n# Value 0: normal\n# Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n# Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n\ndf['rest_ecg'][df['rest_ecg'] == 0] = 'normal'\ndf['rest_ecg'][df['rest_ecg'] == 1] = 'ST-T wave abnormality'\ndf['rest_ecg'][df['rest_ecg'] == 2] = 'left ventricular hypertrophy'\n\n# ** exang: ** exercise_induced_angina\n# exercise induced angina \n# 1 = yes\n# 0 = no    \ndf['exercise_induced_angina'][df['exercise_induced_angina'] == 0] = 'no exercise induced'\ndf['exercise_induced_angina'][df['exercise_induced_angina'] == 1] = 'yes exercise induced'       \n        \n# ** slope:  ** st_slope\n# the slope of the peak exercise ST segment \n# Value 0: upsloping \n# Value 1: flat\n# Value 2: downsloping\ndf['st_slope'][df['st_slope'] == 0] = 'upsloping'\ndf['st_slope'][df['st_slope'] == 1] = 'flat'  \ndf['st_slope'][df['st_slope'] == 2] = 'downsloping'  \n        \n# **thal:** thalassemia\n# 0&1 = normal\n# 2 = fixed defect\n# 3 = reversable defect \ndf['thalassemia'][df['thalassemia'] == 0] = 'normal'\ndf['thalassemia'][df['thalassemia'] == 1] = 'normal'\ndf['thalassemia'][df['thalassemia'] == 2] = 'fixed defect'  \ndf['thalassemia'][df['thalassemia'] == 3] = 'reversable defect'   ","fe859230":"#Convert it to Object Type\ndf['sex'] = df['sex'].astype('object')\ndf['chest_pain_type'] = df['chest_pain_type'].astype('object')\ndf['fasting_blood_sugar'] = df['fasting_blood_sugar'].astype('object')\ndf['rest_ecg'] = df['rest_ecg'].astype('object')\ndf['exercise_induced_angina'] = df['exercise_induced_angina'].astype('object')\ndf['st_slope'] = df['st_slope'].astype('object')\ndf['thalassemia'] = df['thalassemia'].astype('object')","a50d7e44":"df.describe()","66d8a097":"df = pd.get_dummies(df, drop_first=True)","0443f165":"df.head()","4ce3ac4e":"cvsrc_all_svc = []\nfor i in range(1,500):\n    clf = make_pipeline(StandardScaler(), SVC(C=i))\n    cvsrc = cross_val_score(clf, df.iloc[:,:-1],df.iloc[:,-1], cv=10,scoring=\"roc_auc\")\n    cvsrc_all_svc.append(cvsrc.mean())\n\nprint(\"SVC Mean Score is {0}%\".format(np.array(cvsrc_all_svc).mean()*100))\n\n\ncvsrc_all_knn = []\nfor i in range(1,272):\n    clf = make_pipeline(StandardScaler(), KNeighborsClassifier(n_neighbors=i))\n    cvsrc = cross_val_score(clf, df.iloc[:,:-1],df.iloc[:,-1], cv=10,scoring=\"roc_auc\")\n    cvsrc_all_knn.append(cvsrc.mean())\n\nprint(\"KNeighbors Mean Score is {0}%\".format(np.array(cvsrc_all_knn).mean()*100))\n\n\ncvsrc_all_rf = []\nfor i in range(1,100):\n    clf = make_pipeline(StandardScaler(),RandomForestClassifier(max_depth=i))\n    cvsrc = cross_val_score(clf, df.iloc[:,:-1],df.iloc[:,-1], cv=10,scoring=\"roc_auc\")\n    cvsrc_all_rf.append(cvsrc.mean())\n\nprint(\"Random Forest Score is {0}%\".format(np.array(cvsrc_all_rf).mean()*100))\n","a95e0b5b":"print(\"SVC Best Score is {0}% for this {1}th value of C\".format(np.array(cvsrc_all_svc).max(),np.array(cvsrc_all_svc).argmax()))","f26d8f51":"print(\"KNN Best Score is {0}% for this {1}th value of N neighbors\".format(np.array(cvsrc_all_knn).max(),np.array(cvsrc_all_knn).argmax()))","5a55e03e":"print(\"Random Forest Best Score is {0}% for this {1}th value of max_depth\".format(np.array(cvsrc_all_rf).max(),np.array(cvsrc_all_rf).argmax()))","c19d46e8":"No Missing Data in the dataset","3f11399e":"Lets check for some missing Information in the dataset","2c373ca5":"So the key take away from the dataset we have ordinal variables , but as we understand there is no order of ranking, hence after EDA we might need to apply one hot encoding in model building.","38775fbb":"# Heart Disease Analysis","50286c84":"Lets Fix the Ordinal Variables:\nWe cant rank them as 0,1 or so on as there is no ranking mechanism.\nWe need to do some reverse engineering ! Converting numbers to strings and then extracting them back in the form of One hot encoding columns.","f95e3e0e":"![Heart Diseases](https:\/\/images.indianexpress.com\/2017\/07\/heart-main.jpg?w=759&h=422&imflag=true)","ad9b6363":"Reading the Dataset","94a8f4bd":"## EDA","60a8f80e":"We can clearly see our data is approximatley balanced with more 1 i.e. (greater than 50% diameter narrowing)","679f1ac2":"## Importing Libraries","24773370":"Attribute Information\n\n**1 age:**\n\n        age in years \n        \n**2 sex: **\n\n        1 : male \n        0 : female   \n        \n**3 cp: chest pain type**\n\n        Value 1: typical angina\n        Value 2: atypical angina\n        Value 3: non-anginal pain\n        Value 4: asymptomatic \n \n**4 trestbps:** \n\n        resting blood pressure (in mm Hg on admission to the hospital)\n        \n**5 chol:** \n\n        serum cholestoral in mg\/dl \n        \n**6 fbs: (fasting blood sugar > 120 mg\/dl)**\n\n        1 = true\n        0 = false     \n        \n**7 restecg: resting electrocardiographic results**\n\n        Value 0: normal\n        Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n        Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n        \n**8 thalach:  **\n\n        maximum heart rate achieved \n        \n**9 exang: **\n\n        exercise induced angina \n        1 = yes\n        0 = no    \n        \n**10 oldpeak**\n\n        ST depression induced by exercise relative to rest \n        \n**11 slope:  **\n\n        the slope of the peak exercise ST segment \n        Value 1: upsloping \n        Value 2: flat\n        Value 3: downsloping\n        \n**12 ca:**\n\n        number of major vessels (0-3) colored by flourosopy \n        \n**13 thal:**\n\n        3 = normal\n        6 = fixed defect\n        7 = reversable defect \n        \n**14 num:** \n\n        diagnosis of heart disease (angiographic disease status)      \n        Value 0: less than 50% diameter narrowing \n        Value 1: greater than 50% diameter narrowing","b5584a72":"## Model Building","fd9005e1":"Also changing the dataframe columns to much understandable name","bda85818":"Lets see the data is balanced or unbalanced on the based of labels (Target)"}}