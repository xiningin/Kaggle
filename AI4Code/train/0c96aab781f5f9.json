{"cell_type":{"d175be88":"code","20e58411":"code","5e240952":"code","0d096056":"code","719bc5a3":"code","0aa3d40d":"code","660f774c":"code","96a0e95a":"code","d3073651":"code","cf156e51":"code","ce0dee96":"code","daa8b426":"code","992cf5ac":"code","48dd39c9":"code","c4eb53df":"code","cf5d264c":"code","e4cc86de":"code","c4ba7020":"code","8e99c898":"code","1729dfaa":"code","717f224d":"code","5820f1df":"markdown","07584650":"markdown","9c1dc07f":"markdown","9b07cda4":"markdown"},"source":{"d175be88":"import numpy as np \nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport keras","20e58411":"%matplotlib inline","5e240952":"labels_data = pd.read_csv('..\/input\/labels.csv')","0d096056":"labels_data.shape","719bc5a3":"labels_data.head()","0aa3d40d":"labels_data.tail()","660f774c":"labels_data['class_name'] = labels_data['attribute_name'].apply(lambda x: x.split('::')[0])\nlabels_data['subclass_name'] = labels_data['attribute_name'].apply(lambda x: x.split('::')[1])","96a0e95a":"labels_data.class_name.unique()","d3073651":"sns.countplot(labels_data.class_name)\nplt.xlabel('Class Name')\nplt.ylabel('Number of subclasses')\nplt.text(x=0, y=300, s=str(labels_data[labels_data.class_name=='culture'].shape[0]), color='white', horizontalalignment='center', size='large', weight='bold')\nplt.text(x=1, y=600, s=str(labels_data[labels_data.class_name=='tag'].shape[0]), color='white', horizontalalignment='center', size='large', weight='bold')\nplt.show()","cf156e51":"classes_ordered = labels_data.class_name.apply(lambda x: x=='tag')\nplt.plot(list(range(labels_data.shape[0])), classes_ordered)\nplt.show()","ce0dee96":"print('Number of unique attributes = {0}'.format(len(labels_data.subclass_name.unique())))","daa8b426":"train_data = pd.read_csv('..\/input\/train.csv')","992cf5ac":"train_data.shape","48dd39c9":"train_data.head()","c4eb53df":"num_images_in_classes = [0]*labels_data.shape[0]\ndef count(record):\n    classes = record.split()\n    for class_ in classes:\n        num_images_in_classes[int(class_)]+=1\n\ntrain_data['attribute_ids'].apply(lambda x: count(x));","cf5d264c":"plt.plot(list(range(labels_data.shape[0])), num_images_in_classes)\nplt.xlabel('Class')\nplt.ylabel('Number of images')\nplt.show()","e4cc86de":"len_classes_images = train_data.attribute_ids.apply(lambda x: len(x.split()))","c4ba7020":"print('Max number of classes for one image = {0}, Min number of classes for one image = {1}'.format(max(len_classes_images), min(len_classes_images)))","8e99c898":"sns.countplot(len_classes_images)\nplt.xticks(list(range(1, 12)))\nplt.xlabel('Number of classes for one image')\nplt.ylabel('Number of images')\nplt.show()","1729dfaa":"tags = train_data.attribute_ids.apply(lambda x: list(map(lambda y: int(y) >= 398, x.split())))","717f224d":"all_tags = list(filter(lambda x: len(x) == np.sum(x), tags))\nall_culture = list(filter(lambda x: np.sum(x) == 0, tags))\nprint('Number of images with the culture tag only = {0}'.format(len(all_culture)))\nprint('Number of images without the culture tag = {0}'.format(len(all_tags)))\nprint('Number of images with culture and other tags = {0}'.format(train_data.shape[0]-len(all_tags)-len(all_culture)))","5820f1df":"To be continued","07584650":"**Lets see:**\n1. can an image belong to two categories (culture & tag)?\n2. How are the classes distributed? How many images per class? How many classes can an image belong to?","9c1dc07f":"The dataset is biased. Some classes have many images while other has very few images.","9b07cda4":"It seems that they are ordered. The culture is placed at the tob then the tag."}}