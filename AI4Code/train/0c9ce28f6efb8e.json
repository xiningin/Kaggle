{"cell_type":{"793eef5c":"code","dd82a739":"code","5ec1cb57":"code","19e128af":"code","c3d78414":"code","af3c142d":"code","ad90a438":"code","6c0b76dd":"code","13f5e226":"code","63ce8c75":"code","7f95e387":"code","1d6eedef":"code","ae79c025":"code","12cf09c1":"code","b4e5b37a":"code","70875899":"code","72b841cb":"code","4550b867":"code","fe3776ba":"code","83d4d1ae":"code","55564d8f":"code","4f3651c6":"markdown","f07b3c09":"markdown","aec4d0b4":"markdown","496bf8e9":"markdown","4ef9d186":"markdown","52afee81":"markdown","c59bbde0":"markdown","cd74bdea":"markdown","963e7df4":"markdown","aa03e1f3":"markdown","4e6effae":"markdown","c496ecb4":"markdown","4cbc1a95":"markdown","432360af":"markdown","dff29376":"markdown","7543ea61":"markdown","172478e7":"markdown","f8033313":"markdown","5158f461":"markdown","79a4aca5":"markdown"},"source":{"793eef5c":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling as pp\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport plotly.express as px","dd82a739":"df_train = pd.read_csv('..\/input\/learn-together\/train.csv',index_col='Id')\ndf_test  = pd.read_csv('..\/input\/learn-together\/test.csv',index_col='Id')","5ec1cb57":"df_train.head()","19e128af":"print(\"Train dataset shape: \"+ str(df_train.shape))\nprint(\"Test dataset shape:  \"+ str(df_test.shape))","c3d78414":"df_train.info()","af3c142d":"df_train.describe().T","ad90a438":"print(df_train.iloc[:,10:-1].columns)","6c0b76dd":"pd.unique(df_train.iloc[:,10:-1].values.ravel())","13f5e226":"df_train.iloc[:,10:-1] = df_train.iloc[:,10:-1].astype(\"category\")\ndf_test.iloc[:,10:] = df_test.iloc[:,10:].astype(\"category\")","63ce8c75":"f,ax = plt.subplots(figsize=(8,6))\nsns.heatmap(df_train.corr(),annot=True, \n            linewidths=.5, fmt='.1f', ax=ax) \n\nplt.show()","7f95e387":"df_train.plot(kind='scatter', x='Vertical_Distance_To_Hydrology', \n              y='Horizontal_Distance_To_Hydrology', alpha=0.5, \n              color='darkblue', figsize = (12,9))\n\nplt.title('Vertical And Horizontal Distance To Hydrology')\nplt.xlabel(\"Vertical Distance\")\nplt.ylabel(\"Horizontal Distance\")\n\nplt.show()","1d6eedef":"df_train.plot(kind='scatter', x='Aspect', y='Hillshade_3pm', \n              alpha=0.5, color='maroon', figsize = (12,9))\n\nplt.title('Aspect and Hillshade 3pm Relation')\nplt.xlabel(\"Aspect\")\nplt.ylabel(\"Hillshade 3pm\")\n\nplt.show()","ae79c025":"df_train.plot(kind='scatter', x='Hillshade_Noon', y='Hillshade_3pm', \n              alpha=0.5, color='purple', \n              figsize = (12,9))\n\nplt.title('Hillshade Noon and Hillshade 3pm Relation')\nplt.xlabel(\"Hillshade_Noon\")\nplt.ylabel(\"Hillshade 3pm\")\n\nplt.show()","12cf09c1":"trace1 = go.Box(\n    y=df_train[\"Vertical_Distance_To_Hydrology\"],\n    name = 'Vertical Distance',\n    marker = dict(color = 'rgb(0,145,119)')\n)\n\ntrace2 = go.Box(\n    y=df_train[\"Horizontal_Distance_To_Hydrology\"],\n    name = 'Horizontal Distance',\n    marker = dict(color = 'rgb(5, 79, 174)')\n)\n\ndata = [trace1, trace2]\nlayout = dict(autosize=False, width=700,height=500, title='Distance To Hydrology', paper_bgcolor='rgb(243, 243, 243)', \n              plot_bgcolor='rgb(243, 243, 243)', margin=dict(l=40,r=30,b=80,t=100,))\n\nfig = dict(data=data, layout=layout)\niplot(fig)","b4e5b37a":"trace1 = go.Box(\n    y=df_train[\"Hillshade_Noon\"],\n    name = 'Hillshade Noon',\n    marker = dict(color = 'rgb(255,111,145)')\n)\n\ntrace2 = go.Box(\n    y=df_train[\"Hillshade_3pm\"],\n    name = 'Hillshade 3pm',\n    marker = dict(color = 'rgb(132,94,194)')\n)\n\ndata = [trace1, trace2]\nlayout = dict(autosize=False, width=700,height=500, title='Hillshade 3pm and Noon', paper_bgcolor='rgb(243, 243, 243)', \n              plot_bgcolor='rgb(243, 243, 243)', margin=dict(l=40,r=30,b=80,t=100,))\n\nfig = dict(data=data, layout=layout)\niplot(fig)","70875899":"f,ax=plt.subplots(1,2,figsize=(15,7))\ndf_train.Vertical_Distance_To_Hydrology.plot.hist(ax=ax[0],bins=30,\n                                                  edgecolor='black',color='crimson') \n                                       \nax[0].set_title('Vertical Distance To Hydrology')\nx1=list(range(-150,350,50))\nax[0].set_xticks(x1)\n\ndf_train.Horizontal_Distance_To_Hydrology.plot.hist(ax=ax[1],bins=30,\n                                                    edgecolor='black',color='darkmagenta') \n                                                                                                        \nax[1].set_title('Horizontal Distance To Hydrology')\nx2=list(range(0,1000,100))\nax[1].set_xticks(x2)\n\nplt.show","72b841cb":"soil_types = df_train.iloc[:,14:-1].sum(axis=0)\n\nplt.figure(figsize=(18,9))\nsns.barplot(x=soil_types.index, y=soil_types.values, \n            palette=\"rocket\")\n\nplt.xticks(rotation= 75)\nplt.ylabel('Total')\nplt.title('Count of Soil Types With Value 1',\n          color = 'darkred',fontsize=12)\n\nplt.show()","4550b867":"wilderness_areas = df_train.iloc[:,10:14].sum(axis=0)\n\nplt.figure(figsize=(7,5))\nsns.barplot(x=wilderness_areas.index, y=wilderness_areas.values, \n            palette=\"Blues_d\")\n\nplt.xticks(rotation=90)\nplt.title('Wilderness Areas',color = 'darkred',fontsize=12)\nplt.ylabel('Total')\n\nplt.show()","fe3776ba":"cover_type = df_train[\"Cover_Type\"].value_counts()\ndf_cover_type = pd.DataFrame({'CoverType': cover_type.index, 'Total':cover_type.values})\n\nfig = px.bar(df_cover_type, x='CoverType', y='Total', \n             height=400, width=650)\n\nfig.show()","83d4d1ae":"f,ax=plt.subplots(1,3,figsize=(21,7))\ndf_train.plot.scatter(ax=ax[0],x='Cover_Type', y='Horizontal_Distance_To_Fire_Points', \n                      alpha=0.5, color='purple')\n\nax[0].set_title('Horizontal Distance To Fire Points')\nx1=list(range(1,8,1))\nax[0].set_ylabel(\"\")\nax[0].set_xlabel(\"Cover Type\")\ndf_train.plot.scatter(ax=ax[1],x='Cover_Type', y='Horizontal_Distance_To_Roadways', \n                      alpha=0.5, color='purple')\n\nax[1].set_title('Horizontal Distance To Roadways')\nx2=list(range(1,8,1))\nax[1].set_ylabel(\"\")\nax[1].set_xlabel(\"Cover Type\")\ndf_train.plot.scatter(ax=ax[2],x='Cover_Type', y='Horizontal_Distance_To_Hydrology', \n                      alpha=0.5, color='purple')\n\nax[2].set_title('Horizontal Distance To Hydrology')\nx2=list(range(1,8,1))\nax[2].set_ylabel(\"\")\nax[2].set_xlabel(\"Cover Type\")\n\nplt.show()","55564d8f":"report = pp.ProfileReport(df_train)\n\nreport.to_file(\"report.html\")\n\nreport","4f3651c6":"Yes all wilderness area and soil type columns consist of 0 and 1. In other words they are categorical. So i'm convering these columns to categorical ones.","f07b3c09":"<a id=\"1\"><\/a> <br>\n## 1. Importing Libraries And Loading Datasets","aec4d0b4":"Type 7, Type 8, Type 15 and Type 25 have either no or too few values. Must examine carefully before create a model.","496bf8e9":"<a id=\"5\"><\/a> <br>\n## 5. Ending","4ef9d186":"i'll take a look our categorical categorical variables soil types and wilderness areas.","52afee81":"There are obvious patterns if we ignore to outliers. And with this patterns, our model will learn.\n\nBoxplot can use to see outliers. For a better visualization i will use plotly this time.","c59bbde0":"I'm trying to find out correlation between columns with heatmap in this step. ","cd74bdea":"I wonder how many (y) labels we have in each class. I'll take a look the last column (cover type) for this.","963e7df4":"All of them have a similar pattern, haven't it?","aa03e1f3":"There are same amount of data for each class exactly...\n\nIn terms of horizontal distance to x point, distribution of class charts following...","4e6effae":"All Wilderness_Area and Soil_Type columns have values in the range of 0 and 1. Quite likely these columns are categorical and consist of 0 and 1. To validate this i'm checking distinct values of following columns:","c496ecb4":"There are total 55 columns in train dataset (54 in test dataset except the last column that is y), All of them are not null.","4cbc1a95":"<a id=\"3\"><\/a> <br>\n## 3. Data Visualization","432360af":"<a id=\"4\"><\/a> <br>\n## 4. Pandas Profiling","dff29376":"<a id=\"2\"><\/a> <br>\n## 2. Exploratory Data Analysis (EDA)","7543ea61":"### To be continued... If you like, Please upvote.","172478e7":"Actually there is a faster way for exploratory data analysis. Pandas provides you powerful HTML profiling reports with pandas-profiling. It's like a magic! You can click \"Overview\", \"Variables\" etc tabs for a quick run.","f8033313":"It seems the most important correlations are between \"Horizontal Distance To Hydrology\" and \"Vertical Distance To Hydrology\" with 70%;  between \"Aspect\" and \"Hillshade 3pm\" with 60%;  between \"Hillshade Noon\" and \"Hillshade 3pm\" with %60;  between \"Elevation\" and \"Horizontal Distance To Roadways\" with %60. Let's see how they are looking.","5158f461":"**Content**\n1. [Importing Libraries And Loading Datasets](#1)\n1. [Exploratory Data Analysis (EDA)](#2)\n1. [Data Visualization](#3)\n1. [Pandas Profiling](#4)\n1. [Ending](#5)","79a4aca5":"This time i'll compare vertical and horizontal distance to hydrology with histogram."}}