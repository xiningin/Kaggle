{"cell_type":{"812c56cc":"code","9ed371f2":"code","53d2fbed":"code","e4c4cbc3":"code","cb1d6af3":"code","ab7b02f9":"code","d1df3bc9":"code","bc4bb459":"code","b9f6bf22":"code","7f372ceb":"code","a82fe2d5":"code","405db204":"code","1448d6f0":"code","a9ad64e3":"code","c48c37e1":"code","8867a846":"code","2b5448c4":"code","47a9216d":"code","2451cd32":"code","c83aed55":"code","9c1eb41a":"code","518c279e":"code","8495a90d":"code","1f4c34e0":"code","0a29516b":"code","7fe6531a":"code","b7d7a24f":"markdown","0895d21a":"markdown","6a75da44":"markdown","d0aa54f3":"markdown","a03a7ff1":"markdown","6ec53723":"markdown","9452931c":"markdown","84021861":"markdown","f6f93e38":"markdown","cb595add":"markdown","2bfadcc8":"markdown","49ba759c":"markdown","b150747e":"markdown","9e9826d3":"markdown","24b9dab8":"markdown","85401198":"markdown"},"source":{"812c56cc":"# data manipulation\nimport pandas as pd \nimport numpy as np\nimport os\n\n# data vizualisation \nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# dataprep\n!pip install dataprep\nfrom dataprep.eda import *\nfrom dataprep.datasets import load_dataset\nfrom dataprep.eda import create_report\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda.missing import plot_missing\n\n#default theme\nsns.set(context='notebook', style='darkgrid', palette='colorblind', font='sans-serif', font_scale=1, rc=None)\nmatplotlib.rcParams['figure.figsize'] =[15,10]\nmatplotlib.rcParams.update({'font.size': 15})\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9ed371f2":"df=pd.read_csv('..\/input\/axial-age-dataset\/AxialAgeDataset.csv')\ndf","53d2fbed":"print('we had ',df.shape[0],'columns and ',df.shape[1],'rows')","e4c4cbc3":"df.columns","cb1d6af3":"# Create a text preprocessing function\n\nimport re\n\ndef text_preprocess(str):\n\n    \n    str = str.lstrip('0123456789. ')\n    str = re.sub(r\"\\s+\", '_', str)\n    str = re.sub(r\"[\\-.]\", '_', str)\n    str = str.lower()\n    return str\n\n# of the nga column.\ndf.columns = df.columns.to_series().apply(text_preprocess)\ndf[\"nga\"] = df[\"nga\"].map(text_preprocess)\n\n# Check that the preprocessing worked.\nprint(\"RegExed Columns:\\n\" + str(df.columns))\nprint(\"\\nRegExed NGAs:\\n\" + str(df.nga.unique()))","ab7b02f9":"df.info()","d1df3bc9":"df.dtypes","bc4bb459":"plot(df.dtypes.value_counts())","b9f6bf22":"fig, axarr = plt.subplots(1, 2, figsize=(20, 8))\n\ndf.dtypes.value_counts().plot.pie(explode=[0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,ax=axarr[1])\naxarr[1].set_title(\"type of our data \", fontsize=18)\n\ndf.dtypes.value_counts().plot(kind='bar',ax=axarr[0])\nplt.title('type of our data');\naxarr[0].set_title(\"type of our data \", fontsize=18)","7f372ceb":"df.describe(include='all')","a82fe2d5":"miss_val = df.isnull().sum()\nmiss_per = miss_val\/df.shape[0]*100\n\ndata={\n    'missing values':miss_val,\n    'missing values by %':miss_per,\n    'type':df.dtypes\n}\nframe = pd.DataFrame(data)\nframe","405db204":"plot_missing(df)","1448d6f0":"df=df.fillna(0)","a9ad64e3":"miss_val = df.isnull().sum()\nmiss_per = miss_val\/df.shape[0]*100\n\ndata={\n    'missing values':miss_val,\n    'missing values by %':miss_per,\n    'type':df.dtypes\n}\nframe = pd.DataFrame(data)\nframe","c48c37e1":"df.describe(include='all')","8867a846":"df.hist(figsize=(20,15),edgecolor='black');","2b5448c4":"plt.figure(figsize=(25,10))\nsns.countplot(df.date_from)\nplt.xticks(rotation='90')\nplt.title('Historical years')","47a9216d":"plt.figure(figsize=(20,10))\nsns.lineplot(data=df, y=\"date_from\",x='nga')\nplt.title('Relation betwwen time and nga');","2451cd32":"plot(df,'date_from')","c83aed55":"\n# Plot total observations by feature over time.\ndf_date_list = df.date_from.unique()\ndf_date_list = sorted(df_date_list)\ncol_list = (list(df))\nnew_col_list = (col_list[2:-1])\n\n# Create a dataframe for the plot.\nfeature_adoption=[]\nfor i in df_date_list:\n    date_dict = {}\n    date_dict[\"year\"] = i\n    df_years = df.loc[df['date_from'] == i]\n    for j in new_col_list:\n        df_feature = df_years[[\"date_from\", j]]\n        total = df_feature[j].sum()\n        date_dict[j] = total\n    feature_adoption.append(date_dict)    \nadoptiondf = pd.DataFrame(feature_adoption)\n\n# Plot subplots of features over time. \nfig = plt.figure(figsize=(20,30))\nnum = 1\nfor i in range(1,12):    \n    ax = fig.add_subplot(6,2,num)\n    adoptiondf.plot(x='year', y=new_col_list[i-1], \n                    ax = ax, legend = False, color = \"green\")\n    plt.ylim(0, 11)\n    num += 1  \n    ","9c1eb41a":"df.nga.value_counts()","518c279e":"fig, axarr = plt.subplots(1, 2, figsize=(30, 8))\n\ndf.nga.value_counts().plot.pie(autopct='%1.1f%%',shadow=True,ax=axarr[1])\naxarr[1].set_title(\"counts of nga\", fontsize=18)\n\nsns.countplot(df.nga,ax=axarr[0])\naxarr[0].set_title(\"counts of nga\", fontsize=18)\nplt.show()","8495a90d":"plot(df,\"nga\")","1f4c34e0":"plt.figure(figsize=(20,10))\nsns.FacetGrid(df,hue=\"nga\", height=8,xlim = (0,20)).map(sns.kdeplot, \"sum\").add_legend()\nplt.title('Sum Distribution of NGA',fontsize=15);\n\nplt.show();","0a29516b":"plt.figure(figsize=(20,10))\nsns.catplot(x=\"nga\", y=\"sum\", kind=\"box\",data=df.sort_values(\"nga\"))\nplt.title('NGA vs Sum',fontsize=15)\nplt.xticks(rotation=90)\nplt.show()","7fe6531a":"create_report(df)","b7d7a24f":"our missing value are hard to change it with traditional methode so we gonna remplace them all with 0 ","0895d21a":"### we gonna visualate our data types in a plot to facilate vision ","6a75da44":"#### like we can see the names of our columns Overlapping and disorganized so we gonna change the columns names by creating a function that will :\n* removes numbers and periods, \n* replaces spaces and dashes with underscores, and lowercases letters\n* for easier coding and top keep text in compliance with PEP-8 formatting.\n    \n    * Parameters:\n        INPUTS:\n        str (str): This is the text to be preprocessed.\n    \n    * OUTPUTS:\n        str : This is the fully preprocessed string.\n    ","d0aa54f3":"### Context\nThe Axial Age dataset tracks a variety of sociopolitical norms and their development across key areas in Afro-Eurasia. The specific scores for each sociopolitical norm for each date (varying time spans between 5300 BCE and 1800 CE in 100 year increments) within 10 NGAs (natural geographic area) were agreed-upon by a group of experts and compiled into the dataset.\n\n![](https:\/\/images-na.ssl-images-amazon.com\/images\/I\/71nLQuk865L._RI_.jpg)","a03a7ff1":"lets check our data describtion after cleaning ","6ec53723":"### now we gonna see some distrubation","9452931c":"#### Relation between date and nga :","84021861":"## B. nga","f6f93e38":"#### like **94% of our data are numirical** and **6% are categorical** ","cb595add":"# 3. findig and handling with missing values","2bfadcc8":"# A. date","49ba759c":"#### Relation between time and other features","b150747e":"# 1. import packages and theme","9e9826d3":"# 4. data visualization ","24b9dab8":"### Relation betwenn nga & sum ","85401198":"# 2. data analysis"}}