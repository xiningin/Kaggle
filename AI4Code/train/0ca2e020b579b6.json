{"cell_type":{"f9bd163e":"code","9241841d":"code","0ba5706d":"code","c155b613":"code","1e04872d":"code","efaa303f":"code","6596d329":"code","30e1fdd7":"code","debbab01":"code","8ac3b952":"code","1d93b347":"code","e506231c":"code","f4efbe4f":"markdown","cfe4e15c":"markdown"},"source":{"f9bd163e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nfrom matplotlib import cm\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport plotly.graph_objects as go\nimport plotly.io as pio\nfrom datetime import datetime, timedelta\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9241841d":"df = pd.read_csv('\/kaggle\/input\/covid19-full-dataset\/owid-covid-data (1).csv')\ndf","0ba5706d":"# viridis_cmap = matplotlib.cm.get_cmap('viridis')\n\n# viridis_rgb = []\n# norm = matplotlib.colors.Normalize(vmin=0, vmax=255)\n\n# for i in range(0, 255):\n#     k = matplotlib.colors.colorConverter.to_rgb(viridis_cmap(norm(i)))\n#     viridis_rgb.append(f'rgb{k}')","c155b613":"def dynamic_bar_country(df, country, count_hist=10, shift=50, count_ma=20):\n    data = df[df['location'] == country].iloc[:, 3:10]\n    data.set_index(pd.DatetimeIndex(data['date']), inplace=True)\n    data['ExpMA'] = data['new_cases'].ewm(span=count_ma, adjust=False).mean()\n\n    listOfFrames = []\n\n    for j, i in enumerate(pd.date_range(data.index[0], data.index[-count_hist])):\n        v = pd.date_range(i, periods=count_hist).to_series()\n#         print(v)\n        d1 = data.loc[v, 'new_cases']\n        d2 = data.loc[v, 'new_deaths']\n        d3 = data.loc[v, 'ExpMA']\n\n        data1 = go.Bar(x=v, y=d1, name='Infected', \n                       marker_color=[f'rgb{k + shift, shift, shift}' for k in range(j, j + count_hist)],\n                       hoverinfo=\"none\", textposition=\"outside\", texttemplate=\"%{y:s}\", cliponaxis=False)\n\n        data2 = go.Bar(x=v, y=d2, name='Died', \n                       marker_color=[f'rgb{shift, k + shift, shift}' for k in range(j, j + count_hist)],\n                       hoverinfo=\"none\", textposition=\"outside\", texttemplate=\"%{y:s}\", cliponaxis=False)\n        \n        data3 = go.Scatter(x=v, y=d3, name='Exp MA', mode=\"lines\")\n        \n        layout = go.Layout(font={\"size\": 14}, height=400, width=600,\n                           barmode='group', bargap=0.15, bargroupgap=0.1,\n                           xaxis={\"showline\": True, \"tickangle\": 30, \"visible\": True, \"linewidth\": 2, \"linecolor\": 'black'},\n                           yaxis={\"showline\": True, \"tickangle\": 30, \"visible\": True, \"linewidth\": 2, \"linecolor\": 'black'},\n                           title=str(datetime.strptime(str(v[-1]), '%Y-%m-%d %H:%M:%S').date()))\n\n        listOfFrames.append(go.Frame(data=[data1, data2, data3], layout=layout))\n    \n    d1 = go.Bar(x=data.index, y=data['new_cases'], name='Infected', \n                marker={'color': data['new_cases'], 'colorscale': 'Viridis'}, hoverinfo=\"none\", \n                textposition=\"outside\", texttemplate=\"%{y:s}\", cliponaxis=False)\n    \n    d2 = go.Bar(x=data.index, y=data['new_deaths'], name='Died',\n                marker={'color': data['new_deaths'], 'colorscale': 'Magma'}, hoverinfo=\"none\", \n                textposition=\"outside\", texttemplate=\"%{y:s}\", cliponaxis=False)\n    \n    d3 = go.Scatter(x=data.index, y=data['ExpMA'], name='Exp MA', mode=\"lines\")\n    \n    layout = go.Layout(title=f'Covid in {country}', font={\"size\": 16}, height=400, width=600,\n                       barmode='group', bargap=0.15, bargroupgap=0.1,\n                       xaxis={\"showline\": True, \"tickangle\": 30, \"visible\": True, \"linewidth\": 2, \"linecolor\": 'black'},\n                       yaxis={\"showline\": True, \"tickangle\": 30, \"visible\": True, \"linewidth\": 2, \"linecolor\": 'black'},\n                       updatemenus=[dict(type=\"buttons\",\n                                         buttons=[dict(label=\"\u25ba\", method=\"animate\", args=[None, {\"fromcurrent\": True}]),\n                                                  dict(label=\"\u275a\u275a\", method=\"animate\", args=[[None], {\"frame\": {\"duration\": 200, \"redraw\": False}, \n                                                                       \"mode\": 'immediate', \"transition\": {\"duration\": 200}}])])])\n    fig = go.Figure(data=[d1, d2, d3], layout=layout, frames=list(listOfFrames))\n#     print(list(listOfFrames))\n    return fig","1e04872d":"fig1 = dynamic_bar_country(df, 'United States')\nfig1.show()","efaa303f":"fig1 = dynamic_bar_country(df, 'Italy')\nfig1.show()","6596d329":"df2 = df[df['location'] == 'Italy'].iloc[:, 3:10]\ndf2.set_index(pd.DatetimeIndex(df2['date']), inplace=True)\ndf2.drop(['date'], axis=1, inplace=True)\n\ndf2['new_cases'].min(), df2['new_deaths'].min()","30e1fdd7":"import plotly.express as px\n\nlist_country = ['United States', 'Russia', 'Brazil', 'India', 'Italy', \n                'Spain', 'China', 'Sweden', 'United Kingdom', 'Sweden']\n\ndf2 = df[df['continent'].notna()]\ndf2 = df2[df2['location'].isin(list_country)].iloc[:, :8]\ndf2['date'] = pd.to_datetime(df2['date'])\ndf2['total_cases'] = df2['total_cases'].astype(int)\n\n\nfig = px.bar(df2, x='location', y='total_cases', height=400, width=600, \n             color=\"location\", template=\"plotly_dark\",\n             animation_frame=pd.DatetimeIndex(df2['date']).strftime('%Y-%m-%d'),\n             animation_group=\"location\", log_y=True, title='Increased infections Covid')\nfig.show()","debbab01":"list_del = []\nfor i in list_country:\n    diff = pd.date_range(start='2019-12-31', end='2020-07-09').difference(df2[df2['location'] == i]['date'])\n    print(i, diff, sep='\\t')","8ac3b952":"data = df[df['continent'].notna()].iloc[:, :8]\nmax_value = data[data['date'] == '2020-07-09']['total_cases'].quantile(.99)\ndata = data[data['date'] > '2020-03-15']","1d93b347":"fig = px.choropleth(data, locations=\"iso_code\", height=400, width=600, \n                    title='Increased infections Covid in world',\n                    color=\"total_cases\", template=\"plotly_dark\", hover_name=\"location\", \n                    color_continuous_scale=px.colors.sequential.Plasma, \n                    range_color=(0, max_value),\n                    animation_frame=pd.DatetimeIndex(data['date']).strftime('%Y-%m-%d'))\n\nfig.show()","e506231c":"import plotly as py\npy.offline.init_notebook_mode(connected=True)\n\npy.offline.plot(fig, filename='myplot.html')","f4efbe4f":"I thought it seemed to me. How???\n\nFrom Italy:","cfe4e15c":"What about the animation on March 9th (India) and July 9th (Spain)?\n\nMissing values???"}}