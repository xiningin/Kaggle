{"cell_type":{"c693bf76":"code","176d78d5":"code","d7b61ba0":"code","c6406a67":"code","e7a20b54":"code","a9deb141":"code","b9faad13":"code","6c3e66a7":"code","ccad4395":"code","336a7da7":"code","3f81e26a":"code","1e1fdb9d":"code","b88e8bbb":"code","027163a9":"code","bec2ddfb":"code","44972903":"code","449746df":"code","d0eddc8c":"code","208ce7e7":"code","8f650452":"code","3c608bb5":"code","68c1cb66":"code","4406c365":"code","e5f87d87":"code","bf2e022b":"code","4dd534d1":"code","4dce5b14":"code","91aa9225":"code","e61877bd":"code","b4bef28c":"code","8947e653":"code","6d66f985":"code","4704b53f":"code","b7fb1ed3":"code","9117bc42":"code","76ea6b3d":"code","d6034bf5":"code","0119cf84":"code","be2c9b1c":"markdown","8b232759":"markdown","7bd78e7e":"markdown","f8666187":"markdown","ac32ed2c":"markdown","de21271b":"markdown","e7510fe2":"markdown","ca8548e4":"markdown","7f0f4c4a":"markdown","608b2e36":"markdown","4f4032c1":"markdown","44ad3352":"markdown","8c9ba7a0":"markdown","abf13688":"markdown","c86b9e24":"markdown","551dd863":"markdown","67028a13":"markdown","06a2753f":"markdown","a960b40f":"markdown","f383d2e5":"markdown","2b92a9b2":"markdown","b31c61a6":"markdown","e24d5a31":"markdown","453ea023":"markdown","d7499290":"markdown","ac091d5f":"markdown","057c1ef4":"markdown","b17cf95e":"markdown","972bd5f1":"markdown","e627feb3":"markdown","9f8e1aa2":"markdown","85945175":"markdown"},"source":{"c693bf76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","176d78d5":"import numpy as np\nimport pandas as pd \n\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nfrom sklearn.ensemble import RandomForestClassifier,VotingClassifier,AdaBoostClassifier,BaggingClassifier\nimport xgboost as xgb\n\nfrom sklearn import metrics\nfrom prettytable import PrettyTable","d7b61ba0":"df = pd.read_csv('..\/input\/H.D_1.csv')","c6406a67":"df.replace('A',1,inplace=True)","e7a20b54":"df.head()","a9deb141":"df.nunique()","b9faad13":"df.info()","6c3e66a7":"df.isnull().sum()","ccad4395":"df['sex']=df.sex.astype('int64')","336a7da7":"df.info()","3f81e26a":"plt.figure(figsize=(14,10))\ncorr = df.corr()\nsns.heatmap(corr,annot=True,linewidths=3,linecolor='c',cbar=False)\nplt.show()","1e1fdb9d":"sns.pairplot(df,diag_kind='kde')","b88e8bbb":"plt.figure(figsize=(15,8))\nplt.style.use('seaborn')\nsns.lineplot(x=df.age,y=df.cp,hue=df.sex,ci=0)\nplt.show()\n# 0 -- female       1 -- male","027163a9":"plt.figure(figsize=(15,8))\nplt.style.use('seaborn')\nsns.lineplot(x=df.chol,y=df.restecg)\nplt.xlabel('Cholesterol')\nplt.ylabel('Resting ECG')\nplt.show()","bec2ddfb":"plt.figure(figsize=(15,8))\nplt.style.use('seaborn')\nsns.lineplot(x=df.trestbps,y=df.chol,hue=df.sex,ci=0)\nplt.show()","44972903":"plt.figure(figsize=(20,5))\nplt.style.use('seaborn')\nsns.countplot(x=df.chol,hue=df.cp)\nplt.legend()\nplt.show()\n# 1 --Male    0 --Female","449746df":"plt.figure(figsize=(10,5))\nplt.style.use('seaborn')\nsns.lineplot(x=df.exang,y=df.chol,hue=df.sex,ci=0)\nplt.show()","d0eddc8c":"plt.figure(figsize=(10,5))\nplt.style.use('seaborn')\nsns.lineplot(x=df.slope,y=df.chol,hue=df.sex,ci=0)\nplt.show()","208ce7e7":"plt.figure(figsize=(10,5))\nplt.style.use('seaborn')\nsns.lineplot(x=df.ca,y=df.chol,hue=df.sex,ci=0)\nplt.show()","8f650452":"plt.figure(figsize=(6,2))\nplt.style.use('seaborn')\nsns.boxplot(x=df.age)\nplt.show()","3c608bb5":"plt.figure(figsize=(6,2))\nplt.style.use('seaborn')\nsns.boxplot(x=df.trestbps)\nplt.show()","68c1cb66":"plt.figure(figsize=(6,2))\nplt.style.use('seaborn')\nsns.boxplot(x=df.chol)\nplt.show()","4406c365":"plt.figure(figsize=(6,2))\nplt.style.use('seaborn')\nsns.boxplot(x=df.thalach)\nplt.show()","e5f87d87":"plt.figure(figsize=(6,2))\nplt.style.use('seaborn')\nsns.boxplot(x=df.oldpeak)\nplt.show()","bf2e022b":"pd.crosstab(df.target.count(),df.sex)","4dd534d1":"from scipy import stats\ndata_out = df[np.abs((stats.zscore(df)) < 3) .all(axis=1)].copy()","4dce5b14":"df1_y=df.iloc[:,-1]\ndf1_x=df.iloc[:,:-1]","91aa9225":"x1train,x1test,y1train,y1test=train_test_split(df1_x,df1_y,random_state=43)","e61877bd":"sc1=StandardScaler()\nX1train=sc1.fit_transform(x1train)\nX1test=sc1.transform(x1test)","b4bef28c":"LR1 = LogisticRegression(random_state=1)\nLR1.fit(X1train,y1train)\nLR_o_pre = LR1.predict(X1test)\n\n\nprint('accuracy ',metrics.accuracy_score(y1test,LR_o_pre))\nprint('recall',metrics.recall_score(y1test,LR_o_pre))\nprint('precision',metrics.precision_score(y1test,LR_o_pre))\nprint('F1',metrics.f1_score(y1test,LR_o_pre))\nprint('roc_auc_score',metrics.roc_auc_score(y1test,LR_o_pre))\nprint(metrics.classification_report(y1test,LR_o_pre))\n\nprint(metrics.confusion_matrix(y1test,LR_o_pre))\n\nfpr1, tpr1, threshold = metrics.roc_curve(y1test,LR_o_pre)\nroc_auc1 = metrics.auc(fpr1, tpr1)","8947e653":"dt1=DecisionTreeClassifier(criterion='gini',random_state=67)\ndt1.fit(X1train,y1train)\ndt_o_pre = dt1.predict(X1test)\n\nprint('accuracy ',metrics.accuracy_score(y1test,dt_o_pre))\nprint('precision',metrics.precision_score(y1test,dt_o_pre))\nprint('recall',metrics.recall_score(y1test,dt_o_pre))\nprint('F1',metrics.f1_score(y1test,dt_o_pre))\nprint('roc_auc_score',metrics.roc_auc_score(y1test,dt_o_pre))\nprint(metrics.confusion_matrix(y1test,dt_o_pre))\nprint(metrics.classification_report(y1test,dt_o_pre))\nfpr2, tpr2, threshold = metrics.roc_curve(y1test,dt_o_pre)\nroc_auc2 = metrics.auc(fpr2, tpr2)","6d66f985":"rf_o = RandomForestClassifier(random_state=60,n_estimators=29)\nrf_o.fit(X1train,y1train)\nrf_o_pre=rf_o.predict(X1test)\n\nprint('accuracy ',metrics.accuracy_score(y1test,rf_o_pre))\nprint('precision',metrics.precision_score(y1test,rf_o_pre))\nprint('recall',metrics.recall_score(y1test,rf_o_pre))\nprint('F1',metrics.f1_score(y1test,rf_o_pre))\nprint('roc_auc_score',metrics.roc_auc_score(y1test,rf_o_pre))\nprint(metrics.confusion_matrix(y1test,rf_o_pre))\nprint(metrics.classification_report(y1test,rf_o_pre))\n\nfpr6, tpr6, threshold = metrics.roc_curve(y1test,rf_o_pre)\nroc_auc6 = metrics.auc(fpr6, tpr6)","4704b53f":"bg_o = BaggingClassifier(DecisionTreeClassifier(),n_estimators=11,random_state=5)\nbg_o.fit(X1train,y1train)\nbg_o_pre = bg_o.predict(X1test)\n\nprint(metrics.accuracy_score(y1test,bg_o_pre))\nprint(metrics.precision_score(y1test,bg_o_pre))\nprint(metrics.recall_score(y1test,bg_o_pre))\nprint(metrics.f1_score(y1test,bg_o_pre))\nprint(metrics.roc_auc_score(y1test,bg_o_pre))\nfpr3, tpr3, threshold = metrics.roc_curve(y1test,bg_o_pre)\nroc_auc3 = metrics.auc(fpr3, tpr3)","b7fb1ed3":"ab_o = AdaBoostClassifier(DecisionTreeClassifier(),random_state=13,n_estimators=20,learning_rate=1)\nab_o.fit(X1train,y1train)\nab_0_pre = ab_o.predict(X1test)\n    \nprint(metrics.accuracy_score(y1test,ab_0_pre))\nprint(metrics.precision_score(y1test,ab_0_pre))\nprint(metrics.recall_score(y1test,ab_0_pre))\nprint(metrics.f1_score(y1test,ab_0_pre))\nprint(metrics.roc_auc_score(y1test,ab_0_pre))\nfpr4, tpr4, threshold = metrics.roc_curve(y1test,ab_0_pre)\nroc_auc4 = metrics.auc(fpr4, tpr4)","9117bc42":"lr=LogisticRegression(random_state=2)\nrf =RandomForestClassifier(random_state=60)\nsvm = SVC(random_state=20,kernel='poly')\nnb=GaussianNB()\nvc_o = VotingClassifier(estimators=[('lr',lr),('rf',rf),('svm',svm),('nb',nb)],voting='hard')\nvc_o=vc_o.fit(X1train,y1train)\nvc_0_pre=vc_o.predict(X1test)\n\nprint(metrics.accuracy_score(y1test,vc_0_pre))\nprint(metrics.precision_score(y1test,vc_0_pre))\nprint(metrics.recall_score(y1test,vc_0_pre))\nprint(metrics.f1_score(y1test,vc_0_pre))\nprint(metrics.roc_auc_score(y1test,vc_0_pre))\nprint(metrics.confusion_matrix(y1test,vc_0_pre))\n\nfpr5, tpr5, threshold = metrics.roc_curve(y1test,vc_0_pre)\nroc_auc5 = metrics.auc(fpr5, tpr5)","76ea6b3d":"plt.title('Receiver Operating Characteristic')\nplt.plot(fpr1, tpr1, 'b', label = 'Logistic---AUC = %0.2f' % roc_auc1)\nplt.plot(fpr2, tpr2, 'g', label = 'DecisionTree---AUC = %0.2f' % roc_auc2)\nplt.plot(fpr6, tpr6, 'r', label = 'RandomForest---AUC = %0.2f' % roc_auc6)\nplt.plot(fpr3, tpr3, 'r', label = 'Bagging---AUC = %0.2f' % roc_auc3)\nplt.plot(fpr4, tpr4, 'c', label = 'Boosting---AUC = %0.2f' % roc_auc4)\nplt.plot(fpr5, tpr5, 'k', label = 'Voting---AUC = %0.2f' % roc_auc5)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","d6034bf5":"t = PrettyTable(['Model', 'Accuracy', 'Recall','Precision','F1','roc_auc'])\nt.add_row(['Random Forest',82,78,90,84,81])\nt.add_row(['Logistic Regression',90,100,83,91,89])\nt.add_row(['DecisionTree',79,82,78,79,79])\nt.add_row(['Voting Classifier',89,84,95,90,88])\nt.add_row(['Bagging',82,77,93,84,81])\nt.add_row(['AdaBooating',84,85,85,85,84])","0119cf84":"print(t)","be2c9b1c":"# checking outliers in Cholesterol","8b232759":"# checking outliers in ST depression induced by exercise","7bd78e7e":"surprisingly the cholesterol levels more than 350 there is no raise in ECG ","f8666187":"The names and social security numbers of the patients were recently removed from the database, replaced with dummy values.","ac32ed2c":"# Comparing Cholesterol level & Resting ECG","de21271b":"# DecissionTree","e7510fe2":"# checking outliers in Maximum heartrate reached","ca8548e4":"# AdaBoost","7f0f4c4a":"# Comparing Cholesterol level & chest pain","608b2e36":"# Voting classifier","4f4032c1":"30-40 age males are having peak chest pain and 40-70 age females are having peak chest pain .\n\n","44ad3352":"Acknowledgements\n    \n    Creators:\n\n    Hungarian Institute of Cardiology. Budapest: Andras Janosi, M.D.\n    University Hospital, Zurich, Switzerland: William Steinbrunn, M.D.\n    University Hospital, Basel, Switzerland: Matthias Pfisterer, M.D.\n    V.A. Medical Center, Long Beach and Cleveland Clinic Foundation: Robert Detrano, M.D., Ph.D.\n\n    Donor: ics.uci.edu","8c9ba7a0":"# checking outliers in Age","abf13688":"# when chest pain occured what is level of chest pain felt by gender and by age","c86b9e24":"# Logistic Regression","551dd863":"Attribute Information:\n  \n    age (age in years)\n    sex (1 = male; 0 = female)\n    cp -- chest pain type (4 values)\n    trestbps -- resting blood pressure (in mm Hg on admission to the hospital)\n    chol -- serum cholestoral in mg\/dl\n    fbs -- fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\n    restecg -- resting electrocardiographic results (values 0,1,2)\n    thalach -- maximum heart rate achieved\n    exang -- exercise induced angina (1 = yes; 0 = no)\n    oldpeak -- ST depression induced by exercise relative to rest\n    slope -- the slope of the peak exercise ST segment\n    ca -- number of major vessels (0-3) colored by flourosopy\n    thal -- 3 = normal; 6 = fixed defect; 7 = reversable defect\n    target --1 or 0","67028a13":"# Spliting train & test data","06a2753f":"# RandomForest","a960b40f":"# how to handle outliers","f383d2e5":"# Bagging","2b92a9b2":"# Above i showed the technique to handle outliers but i did not removed the outliers because in health every report is important and although there are very few rows in give dataset so that is the reason i did not eliminated the outliers","b31c61a6":"This Data contains all requied data about the patients with heart disease and without disease .\n\n    Goal :::\n    your goal is to predict will the person is going to prone to Heart Disease ","e24d5a31":"the above plot is to general viewing of cholesterol & chest pain ","453ea023":"# Comparing Cholesterol level & resting blood pressure","d7499290":"# Comparing Cholesterol level & number of major vessels (0-3) colored by flourosopy","ac091d5f":"# As all the values are in different units iam scaling them to unit less","057c1ef4":"# roc_auc cruve","b17cf95e":"# Comparing Cholesterol level & exercise induced angina","972bd5f1":"# Comparing Cholesterol level & peak exercise ST segment","e627feb3":"# All the Heart disease's are related to cholesterol. thats why iam comparing every variable with cholesterol","9f8e1aa2":"# checking outliers in Resting blood pressure","85945175":"# cross_tab is one of the commonly used method used in EDA"}}