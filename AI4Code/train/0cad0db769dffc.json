{"cell_type":{"d0200733":"code","18d15c3a":"code","b6e6608d":"code","fc22a37b":"code","8064743d":"code","046c3fd8":"code","d73a7784":"markdown","fb33e6c7":"markdown"},"source":{"d0200733":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport statistics\nData = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")","18d15c3a":"Data['ExerciseAngina'] = Data['ExerciseAngina'].replace('N',0)#0 is No\nData['ExerciseAngina'] = Data['ExerciseAngina'].replace('Y',1)#1 is yes\nData['Sex'] = Data['Sex'].replace('F',0)#0 is female\nData['Sex'] = Data['Sex'].replace('M',1)#1 is male\nData['ST_Slope'] = Data['ST_Slope'].replace('Up',1)\nData['ST_Slope'] = Data['ST_Slope'].replace('Flat',0)\nData['ST_Slope'] = Data['ST_Slope'].replace('Down',-1)\nData['RestingECG'] = Data['RestingECG'].replace('Normal',0)\nData['RestingECG'] = Data['RestingECG'].replace('ST',1)\nData['RestingECG'] = Data['RestingECG'].replace('LVH',1)\nData['ChestPainType'] = Data['ChestPainType'].replace('ATA',1)\nData['ChestPainType'] = Data['ChestPainType'].replace('NAP',2)\nData['ChestPainType'] = Data['ChestPainType'].replace('ASY',3)\nData['ChestPainType'] = Data['ChestPainType'].replace('TA',4)\nprint(Data)","b6e6608d":"y = Data.iloc[:, -1].values\nx = Data.iloc[:,0:-1].values\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)","fc22a37b":"from sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier()\nclf = clf.fit(x_train,y_train)\ny_pred = clf.predict(x_test)\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix\n\ncm = confusion_matrix(y_test,y_pred)\nprint(cm)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","8064743d":"from sklearn.ensemble import RandomForestClassifier\nclassification = RandomForestClassifier(n_estimators=15,criterion = 'entropy', random_state = 0)\nregressor = classification .fit(x_train, y_train)\ny_pred_reg = regressor.predict(x_test)\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix\n\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred_reg))\npm = confusion_matrix(y_test,y_pred_reg)\nprint(pm)","046c3fd8":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nscores =[]\nfor k in range(1, 200):\n    rfc = RandomForestClassifier(n_estimators=k)\n    rfc.fit(x_train, y_train)\n    y_pred = rfc.predict(x_test)\n    scores.append(accuracy_score(y_test, y_pred))\n\n# plot the relationship between K and testing accuracy\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.plot(range(1, 200), scores)\nplt.xlabel('Value of n_estimators for Random Forest Classifier')\nplt.ylabel('Testing Accuracy')","d73a7784":"Decision Tree Classifier","fb33e6c7":"Random Forest Classifier\n"}}