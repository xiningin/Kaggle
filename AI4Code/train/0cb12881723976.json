{"cell_type":{"cf6a4f98":"code","582e65b1":"markdown"},"source":{"cf6a4f98":"%%HTML\n<canvas height=\"400\" id=\"canvas\" style=\"border: 1px black solid;\" width=\"400\"><\/canvas>\n<script>\nvar W=600;\nvar H=400;\n\ncanvas=document.getElementById(\"canvas\");\ncanvas.setAttribute(\"width\",W);\ncanvas.setAttribute(\"height\",H);\ndc=canvas.getContext(\"2d\");\nimageData=dc.getImageData(0,0,W,H);\ndata=imageData.data;\n\nvar T=0;\nfunction loop(){\n  T+=0.1;\n  rayTrace(T);\n  dc.putImageData(imageData,0,0);\n}\n\n\nfunction rayTrace(T){\n\n    var spheres = [\n       {x:-1,y:Math.sin(T)*2,z:8,r:2,R:255,G:255,B:128}\n      ,{x:5,y:2+Math.cos(T)*4,z:20,r:4,R:128,G:255,B:255}\n      ,{x:0,y:18,z:10,r:16,R:255,G:128,B:255}\n    ];\n    var numSpheres=3;\n    var sp;\n\n    var iterations=10;\n\n    for(var x=0;x<W;x++)\n    for(var y=0;y<H;y++){\n\n      var R=255;\n      var G=255;\n      var B=255;\n\n      \/\/camera start=\n      var cx=0, cy=0, cz=0;\n      var Lx=(x-W\/2)\/H, Ly=(y-H\/2)\/H, Lz=1;\n      var L=Math.sqrt(Lx*Lx+Ly*Ly+Lz*Lz);\n      \/\/var L=1;\n      Lx\/=L;Ly\/=L;Lz\/=L;  \/\/normalize\n      var found=-1;\n\n      for(var t=0;t<iterations;t++){\n\n        found=-1;\n\n        var dist=1E10;\n\n        for(var s=0;s<numSpheres;s++){\n            sp = spheres[s]; \/\/doescopying structs cause slowdown?\n            var Sx = cx-sp.x, Sy=cy-sp.y, Sz=cz-sp.z;\n            var LS = Lx*Sx+Ly*Sy+Lz*Sz;\n            var SS = Sx*Sx+Sy*Sy+Sz*Sz;\n            var BB = LS*LS - (SS - sp.r*sp.r );\n            if( BB>0 ) {\n                  var d=(- LS - Math.sqrt(BB));  \n                  if( d>0 && d<dist) {\n                     found = s;\n                     dist = d;\n                  }\n            }\n        }\/\/s\n\n        if(found>=0){\n            sp=spheres[found];\n            R=((R*sp.R)\/255); \n            G=((G*sp.G)\/255); \n            B=((B*sp.B)\/255);\n            cx += Lx * dist;\n            cy += Ly * dist;\n            cz += Lz * dist;\n\n            \/\/reflect\n            var Nx = cx-sp.x, Ny=cy-sp.y, Nz=cz-sp.z; \n            var LN = (Lx*Nx+Ly*Ny+Lz*Nz)\/(Nx*Nx+Ny*Ny+Nz*Nz);\n            Lx -= 2*Nx*LN; \n            Ly -= 2*Ny*LN;\n            Lz -= 2*Nz*LN;\n         } else break;\n\n      }\/\/t\n      \/\/colour of sky\n        if(found==-1 ){\n          \/\/var f0= (int)(Math.floor(Math.atan2(Lx,Lz)\/3.14159f*10+100)+Math.floor((Ly+1)*5) ) %2;\n          var f0=(3+(-Lx-Ly-Lz))\/4;\n          var f=f0;\/\/MIN(1,MAX(0,f0)); \/\/light\n          R= (R*f*0.9); \n          G= (G*f*0.9);\n          B= (B*f);\n        }else{\n          R=G=B=0;  \n        }\n\n      var n=(x+y*W)*4;\n      data[n]=R;\n      data[n+1]=G;\n      data[n+2]=B;\n      data[n+3]=255;\n    }\/\/xy\n}\n\nsetInterval(loop,50);\n<\/script>","582e65b1":"Javascript Ray Tracer\n==\nHere is a ray tracer implemented in Javascript."}}