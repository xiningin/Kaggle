{"cell_type":{"d0534f62":"code","f0642875":"code","eb45f686":"code","cd099384":"code","15b4f903":"code","3ff7d7c7":"code","729ba332":"code","0f98fb73":"code","9d184ffc":"code","ad57eb36":"code","92ac8be5":"code","43dbcded":"code","b86235c4":"code","bbb96079":"code","ec3ef7dc":"code","57be97b0":"code","88ccc4ee":"code","6148acd3":"code","d61aaad8":"code","fa7d06a9":"markdown","bf6c4432":"markdown","6bae133e":"markdown"},"source":{"d0534f62":"from pandas_datareader import data","f0642875":"start_date = '2014-01-01'\nend_date = '2018-01-01'\ngoog_data = data.DataReader('GOOG', 'yahoo', start_date, end_date)\ngoog_data","eb45f686":"import pandas as pd","cd099384":"goog_data_signal = pd.DataFrame(index=goog_data.index)\ngoog_data_signal","15b4f903":"goog_data_signal['price'] = goog_data['Adj Close']\ngoog_data_signal","3ff7d7c7":"goog_data_signal['daily_difference'] = goog_data_signal['price'].diff()\ngoog_data_signal","729ba332":"import numpy as np","0f98fb73":"goog_data_signal['signal'] = 0.0\ngoog_data_signal['signal'] = np.where(goog_data_signal['daily_difference'] >= 0, 1.0, 0.0)\ngoog_data_signal","9d184ffc":"goog_data_signal['positions'] = goog_data_signal['signal'].diff()\ngoog_data_signal.head(10)","ad57eb36":"import matplotlib.pyplot as plt","92ac8be5":"fig = plt.figure()\nax1 = fig.add_subplot(111, ylabel=\"Google Price in US$\")\ngoog_data_signal['price'].plot(ax=ax1, color='r', lw=2.)\nax1.plot(goog_data_signal.loc[goog_data_signal.positions == 1.0].index, \n         goog_data_signal.price[goog_data_signal.positions == 1.0],\n         '^', markersize=5, color='m')\nax1.plot(goog_data_signal.loc[goog_data_signal.positions == -1.0].index, \n         goog_data_signal.price[goog_data_signal.positions == -1.0],\n         'v', markersize=5, color='k')\nplt.show()","43dbcded":"initial_capital = float(1000.00)","b86235c4":"positions = pd.DataFrame(index=goog_data_signal.index).fillna(0.0)\nportfolio = pd.DataFrame(index=goog_data_signal.index).fillna(0.0)","bbb96079":"positions['GOOG'] = goog_data_signal['signal']\nportfolio['positions'] = (positions.multiply(goog_data_signal['price'], axis=0))","ec3ef7dc":"positions.head(10)","57be97b0":"portfolio.head(10)","88ccc4ee":"portfolio['cash'] = initial_capital - (positions.diff().multiply(goog_data_signal['price'], axis=0)).cumsum()\nportfolio.head(10)","6148acd3":"portfolio['total'] = portfolio['positions'] + portfolio['cash']\nportfolio","d61aaad8":"portfolio['total'].plot()\nplt.show()","fa7d06a9":"### This is my version of the algorithm taught in the chapter #1 of the book: \"Learn Algorithmic Trading\" by Donadio & Ghosh.","bf6c4432":"#### This is a simple strategy, where we by GOOG stocks whenever it has dropped in the previous day, and sells in the first day it drops from the time of the buy.\n#### Although this strategy has shown profits in the 4 year period below, it is far from being fully validated and safe.","6bae133e":"So during this period of time that strategy has been profitable, as the amount of cash increased..."}}