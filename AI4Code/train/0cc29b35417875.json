{"cell_type":{"df8fd774":"code","377b114f":"code","319a0fba":"code","a998b106":"code","e6c8e61b":"code","a188eadf":"code","661f56b2":"code","81102291":"code","a204b14e":"code","a6b4d1fc":"code","8ea17d90":"code","9af8d0b7":"code","25b923c2":"code","1e5059ef":"code","1a4d8e19":"code","cae2a34b":"code","01099cee":"code","131f56bd":"code","60965c88":"code","57eee7da":"code","fa6783c0":"code","680b3061":"code","6d0b6562":"code","f8c1b123":"code","c498be27":"code","8704dc59":"code","330828dc":"code","f72d270c":"code","677bbe51":"code","29b2bfe5":"code","2e6e2e4c":"code","94ac9c20":"code","3849dd19":"code","ab72dc82":"markdown"},"source":{"df8fd774":"import numpy as np\nimport scipy.stats as st\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn import preprocessing\nsns.set_style(\"whitegrid\", {'axes.grid' : False})\nfrom statsmodels.distributions.empirical_distribution import ECDF\nimport statsmodels.api as sm\nimport math\n","377b114f":"df = pd.read_csv(\"..\/input\/video-game-sales-with-ratings\/Video_Games_Sales_as_at_22_Dec_2016.csv\") # Read the CSV from the data file","319a0fba":"df.shape #Get the number of rows and columns","a998b106":"df.info() #Get the data types of the columns","e6c8e61b":"columns_for_analysis = [\"User_Score\",\"User_Count\", \"Critic_Score\", \"Global_Sales\"]\n\ndf['User_Score'] =  pd.to_numeric(df['User_Score'], errors='coerce')\n","a188eadf":"def remove_zero_nan_values(df,list_of_columns): #\n    df = df\n    for i in list_of_columns:\n        df = df[df[i].notnull()]\n        df = df[df[i]>= 0]\n    return df","661f56b2":"def store_columns_in_array(df,list_of_columns):\n    x = []\n    for i in list_of_columns:\n        y = df[i].values\n        x.append(y)\n    x = np.array(x).T\n    return x","81102291":"df = remove_zero_nan_values(df,columns_for_analysis)\nX = store_columns_in_array(df,columns_for_analysis)","a204b14e":"len(X)","a6b4d1fc":"user_reviews = X[:,0]","8ea17d90":"np.mean(user_reviews)","9af8d0b7":"np.std(user_reviews)","25b923c2":"ss = np.sqrt(np.var(user_reviews))\nst.moment(user_reviews,3)\/(ss**3)","1e5059ef":"st.moment(user_reviews,4)\/(ss**4)","1a4d8e19":"plt.figure(figsize=(6,4))\nax = sns.distplot(user_reviews,rug=True,\n                 kde_kws={\"label\": \"Kernel Density\", \"color\" : 'k'},\n                 hist_kws={\"label\": \"Histogram\", \"color\" : 'c'}\n                )\nplt.xlim([0,10])\n\nsns.rugplot(np.array([1]),label=\"Rug Plot\")\nplt.xlabel('User Review Rating (x)')\nplt.ylabel('Estimated Density')\nxk,yk = ax.get_lines()[0].get_data()\nmm = np.mean(user_reviews)\nmd = np.median(user_reviews)\nmo = xk[np.argmax(yk)]\nxx = np.ones(2)\nyy = np.array([0, 0.5])\nplt.xticks(np.arange(0, 11, step=1))\nplt.plot(mm*xx,yy,'--b',label='Mean', alpha=0.8)\nplt.plot(md*xx,yy,'-.r',label='Median', alpha=0.8)\nplt.plot(mo*xx,yy,':m',label='KDE-estimated Mode', alpha=0.8)\nplt.legend()\nplt.tight_layout()\nplt.savefig('kde.png',format='png')\nplt.show()","cae2a34b":"plt.figure(figsize=(6,4))\necdf=ECDF(user_reviews)\n\np25 = np.percentile(user_reviews,25)\np50 = np.percentile(user_reviews,50)\np75 = np.percentile(user_reviews,75)\np100 = np.percentile(user_reviews,100)\nplt.step(ecdf.x,100*ecdf.y,linestyle='--',c=[0.5,0.5,0.5])\nplt.plot([0,p25,p25],[25, 25, 0],'-k')\nplt.plot([0,p50,p50],[50, 50, 0],'-k')\nplt.plot([0,p75,p75],[75, 75, 0],'-k')\nplt.xlabel('User Review Rating (x)')\nplt.ylabel('ECDF x 100%')\nplt.ylim([0,100])\nplt.xlim([0,5])\nplt.xticks((0,p25,p50,p75, p100),('0',p25,p50,p75,p100))\nresults = [str(i) for i in plt.yticks()[0]]\nresults2 = [25,50,75]\nplt.yticks((list(plt.yticks()[0]))+results2,results+['$_{P25}$','$_{P50}$','$_{P75}$'])\nplt.tight_layout()\nplt.savefig('ecdf.png',format='png')\nplt.show()","01099cee":"user_reviews = user_reviews\ncritic_reviews = X[:,2]","131f56bd":"plt.figure(figsize=(6,4))\nplt.scatter(user_reviews,critic_reviews, s=7)\nplt.xlabel('User Reviews')\nplt.ylabel('Critic Reviews')\nplt.savefig('scatter.png',format='png')\nplt.show()","60965c88":"sns.kdeplot(user_reviews,critic_reviews,cmap=\"Blues\")\nplt.xlabel('User Reviews')\nplt.ylabel('Critic Reviews')\nplt.savefig('kde_2.png',format='png')\nplt.show()","57eee7da":"np.corrcoef(np.array([user_reviews,critic_reviews]).T,rowvar=False) ","fa6783c0":"values_to_center = np.array([user_reviews,critic_reviews]).T","680b3061":"mean_to_subtract = np.mean(values_to_center, axis=0)","6d0b6562":"values_to_center = values_to_center - mean_to_subtract","f8c1b123":"np.mean(values_to_center, axis=0) #Check if the centered values equal 0","c498be27":"\nsns.kdeplot(values_to_center[:,0],values_to_center[:,1],cmap=\"Blues\")\nplt.xlabel('User Reviews')\nplt.ylabel('Critic Reviews')\nplt.savefig('kde_centered.png',format='png')\nplt.show()","8704dc59":"\nvalues_to_standardize = np.std(values_to_center, axis=0) \n","330828dc":"final_values = values_to_center \/ values_to_standardize","f72d270c":"sns.kdeplot(final_values[:,0],final_values[:,1],cmap=\"Blues\")\nplt.xlabel('User Reviews')\nplt.ylabel('Critic Reviews')\nplt.savefig('kde_standardised.png',format='png')\nplt.show()","677bbe51":"np.cov(final_values,rowvar=False) #Check if the matrix matches the Pearson product-moment correlation coefficients.","29b2bfe5":"np.corrcoef(values_to_center,rowvar=False) #Check if the matrix matches the co-variance of the standarised values","2e6e2e4c":"pd.DataFrame(np.corrcoef(X.T), columns=columns_for_analysis, index=columns_for_analysis)\n","94ac9c20":"global_sales = X[:,3]\n\nh = sns.jointplot(user_reviews,global_sales,cmap=\"Blues\",kind=\"hex\")\nh.set_axis_labels('User Reviews', 'Global Sales (Millions)', fontsize=10)\nplt.subplots_adjust(left=0.1, right=0.8, top=0.8, bottom=0.1) \ncbar_ax = h.fig.add_axes([.85, .25, .05, .4])\nplt.colorbar(cax=cbar_ax)\nplt.savefig('outliers.png',format='png')\nplt.show()","3849dd19":"global_sales = X[:,3]\n\nh = sns.jointplot(user_reviews,np.log(global_sales),cmap=\"Blues\",kind=\"hex\")\nax = h.ax_joint\nh.set_axis_labels('User Reviews', 'Global Sales (Millions - natural log)', fontsize=10)\nplt.subplots_adjust(left=0.1, right=0.8, top=0.8, bottom=0.1) \ncbar_ax = h.fig.add_axes([.85, .25, .05, .4])\n\nplt.colorbar(cax=cbar_ax)\nplt.savefig('outliers_log.png',format='png')\nplt.show()\n","ab72dc82":"# Univariate Exploratory Data Analysis\n \nFor the univariate exploratory data analysis we will be exploring review scores by users."}}