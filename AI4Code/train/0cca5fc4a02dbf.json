{"cell_type":{"95134c0d":"code","c7c2ca9c":"code","cb4baca1":"code","9e03ad6d":"code","86191500":"code","bfb68c31":"code","2d6e7bba":"code","0270c5f6":"code","5b03a3dd":"code","876576c6":"code","6e6a951b":"code","7fdd5116":"code","fdd5aab4":"code","fd19c473":"code","3b901878":"code","06507212":"code","2ccfcf3e":"code","e38cdc44":"code","8bb7fbe0":"code","31df7710":"code","6ab63234":"code","a0c59820":"code","cd59b64b":"code","dd64dd22":"code","3a2a13d0":"code","2ce703c4":"code","227f96df":"code","185def77":"code","ae8444cb":"code","734a0873":"code","128ca94a":"code","e0af9ccd":"code","adaec2b5":"code","157400e2":"code","4d4461dc":"code","e05bcd46":"code","e6eb54c0":"code","a1c15709":"code","3c1e691f":"code","093f2dd1":"code","610efb3a":"code","96ddec9f":"markdown","42d59f40":"markdown","7b35a57a":"markdown","b1895cec":"markdown","3560c66e":"markdown","618b5943":"markdown","bb8b4221":"markdown","fc17c6bb":"markdown","e439c3f8":"markdown","8951ce68":"markdown","22f5ccea":"markdown","a5db6145":"markdown","ad2d5886":"markdown","07a07175":"markdown","d708003a":"markdown","e628042c":"markdown","034f9b81":"markdown","17c38d56":"markdown","ff35b9a7":"markdown","2d0f1772":"markdown","013ac10e":"markdown","c9e9b55b":"markdown","cbe6dae4":"markdown","63f3a4fa":"markdown","56a63368":"markdown","4910e7d0":"markdown","c4615d93":"markdown","84bc89ac":"markdown"},"source":{"95134c0d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n!pip install pywaffle --quiet\nfrom pywaffle import Waffle\nfrom wordcloud import WordCloud","c7c2ca9c":"df= pd.read_csv(\"..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")","cb4baca1":"df","9e03ad6d":"df.head()","86191500":"df.info()","bfb68c31":"df['date'] = pd.to_datetime(df['Date'])\ndf['date'].dtype\ndf['date'] = pd.to_datetime(df['date'])\ndf['day'] = (df['date']).dt.day\ndf['month'] = (df['date']).dt.month\ndf['year'] = (df['date']).dt.year\ndel(df[\"date\"])","2d6e7bba":"df","0270c5f6":"df['Time'] = pd.to_datetime(df['Time'])\ndf['Hour'] = (df['Time']).dt.hour\ndf['Hour'].unique()","5b03a3dd":"categorical_columns = [cname for cname in df.columns if df[cname].dtype == \"object\"]\ncategorical_columns","876576c6":"print(\"A detailed description of the dataset \")\nd = df.describe().T\nd","6e6a951b":"print('Insights obtained from the dataset are as follows :')\nprint(\"1. Mean ratings of an experience in the supermaket =\",d.iloc[-5,1])\nprint(\"1. Mean unit price of an article in the supermaket = $\",d.iloc[0,1])\nprint(\"2. Mean cogs obtained from selling the articles    = $\",d.iloc[4,1])\nprint(\"3. Mean gross margin percentage of articles sold   = $\",d.iloc[5,1])\nprint(\"4. So mean revenue in dollars of the supermarket   = $\",(d.iloc[4,1]\/(d.iloc[5,1]-1))+d.iloc[4,1])\nprint(\"5. Net mean income per day of the supermarket      = $\",((d.iloc[4,1]\/(d.iloc[5,1]-1))+d.iloc[4,1])\/40)","7fdd5116":"print(\"According to customer satisfaction level, the supermarket is \",end=\": \")\nif(d.iloc[-1,1]>5.0):\n    print(\"Good\")\nelse:\n    print(\"Poor\")","fdd5aab4":"plt.figure(figsize=(20,7))\nsns.countplot(df['Gender'])","fd19c473":" sns.boxplot(x=\"Branch\", y = \"Rating\" ,data =df).set_title(\"Ratings by Branch\")","3b901878":"cat=df[[\"Product line\", \"Rating\"]].groupby(['Product line'], as_index=False).mean().sort_values(by='Rating', ascending=False)\nplt.figure(figsize=(20,8))\n\nsns.barplot(x='Product line', y='Rating', data=cat)","06507212":"cat=df[[\"Product line\", \"gross income\"]].groupby(['Product line'], as_index=False).sum().sort_values(by='gross income', ascending=False)\nplt.figure(figsize=(20,8))\n\nsns.barplot(x='Product line', y='gross income', data=cat)","2ccfcf3e":"sns.lineplot(x=\"Hour\",  y = 'Quantity',data =df).set_title(\"Product Sales per Hour\")","e38cdc44":"sns.relplot(x=\"Hour\",  y = 'Quantity', col= 'month' , row= 'Branch', kind=\"line\", hue=\"Gender\", style=\"Gender\", data =df)","8bb7fbe0":"sns.relplot(x=\"Hour\",  y = 'Total', col= 'month' , row= 'Branch', estimator = None, kind=\"line\", data =df)","31df7710":"sns.boxenplot(y = 'Product line', x = 'Quantity', data=df )","6ab63234":"plt.figure(figsize=(20,7))\nsns.barplot(df['Branch'],df['gross income'])\nplt.xlabel('Branch code\/ branch name',fontsize='16')\nplt.xticks(fontsize='16')\nplt.ylabel('Gross income',fontsize='16')\nplt.yticks(fontsize='16')\nplt.suptitle(\"Most profittable centre judgement\\n\",fontsize='20',fontweight='bold')","a0c59820":"plt.figure(figsize=(20,7))\nsns.barplot(df['City'],df['gross income'],palette='Set1')\nplt.xlabel('City name',fontsize='16')\nplt.xticks(fontsize='16')\nplt.ylabel('Gross income',fontsize='16')\nplt.yticks(fontsize='16')\nplt.suptitle(\"Most profittable city judgement\\n\",fontsize='20',fontweight='bold')","cd59b64b":"sns.countplot(y = 'Product line', data=df, order = df['Product line'].value_counts().index )","dd64dd22":"sns.boxenplot(y = 'Product line', x = 'Rating', data=df )","3a2a13d0":" sns.countplot(x=\"Payment\", data =df).set_title(\"Payment Mode\")","2ce703c4":" sns.countplot(x=\"Payment\", hue = \"Branch\", data =df).set_title(\"Payment Channel by Branch\")","227f96df":" sns.countplot(x=\"Customer type\", hue = \"Branch\", data =df).set_title(\"Customer Type by Branch\")","185def77":"df.groupby(['Customer type']).agg({'Total': 'sum'})","ae8444cb":"sns.swarmplot(x=\"Customer type\",  y = \"Rating\",  hue = \"City\", data =df).set_title(\"Customer Type\") \n","734a0873":"plt.figure(figsize=(12,6),dpi=100)\nsns.regplot(x='Unit price',y='gross income',data=df,color='blue')\nplt.xlabel('Unit Price')\nplt.ylabel('Gross Income')\nplt.title('Unit Price v Gross Income',fontsize=15)\nplt.show()","128ca94a":"numerical = ['cogs','Quantity','gross income','Total']","e0af9ccd":"df[numerical].hist(bins=25, figsize=(20,10), layout=(2, 2))","adaec2b5":"matrix = np.triu(df.corr())\nplt.figure(figsize=(12,6),dpi=100)\nsns.heatmap(df.corr(), annot=True, mask=matrix)","157400e2":"plt.figure(dpi=125)\nsns.countplot(y ='Product line', hue = \"City\", data = df) \nplt.xlabel('Count')\nplt.ylabel('Product Type')\nplt.show()","4d4461dc":"plt.figure(figsize=(12,6),dpi=100)\nsns.regplot(x='Quantity',y='cogs',data=df,color='blue')\nplt.xlabel('Quantity')\nplt.ylabel('Cost of Goods Sale')\nplt.title('Quantity v Cost of Goods Sale',fontsize=15)\nplt.show()","e05bcd46":"from sklearn.model_selection import train_test_split","e6eb54c0":"X = df.iloc[:, -8].values.reshape(-1,1)","a1c15709":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\nplt.figure(figsize=(20,7))\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","3c1e691f":"# Training the K-Means model on the dataset\nkmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","093f2dd1":"plt.figure(figsize=(20,8))\nplt.scatter(X[y_kmeans == 0,0], X[y_kmeans == 0], s = 100, c = 'red', label = 'Lower Class')\nplt.scatter(X[y_kmeans == 1,0], X[y_kmeans == 1], s = 100, c = 'blue', label = 'Upper Lower Class')\nplt.scatter(X[y_kmeans == 2,0], X[y_kmeans == 2], s = 100, c = 'green', label = 'Medium Class')\nplt.scatter(X[y_kmeans == 3,0], X[y_kmeans == 3], s = 100, c = 'cyan', label = 'Upper Medium Class')\nplt.scatter(X[y_kmeans == 4,0], X[y_kmeans == 4], s = 100, c = 'magenta', label = 'Upper Class5')\nplt.title('Clusters of customers')\nplt.xlabel('Total expenditure')\nplt.ylabel('COGs earned')\nplt.legend()\nplt.show()","610efb3a":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df[\"Product line\"]))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('cast.png')\nplt.show()","96ddec9f":"Looking for \"Char\" columns","42d59f40":"Here we can interpret that **food and bevarages**, **fashion accesories** has less **mean quantity** whereas we have seen that both of these categories had **high rating**. **So we need to increase our supply, matey.**","7b35a57a":"# ***THINGS YOU HAVE TO FOLLOW WHILE WALKING THROUGH THE WHOLE REPORT***\n\n1. If you are familiar with python then only follow the code. \n2. The simple explanations about any visual or graph will be there.\n3. There will be a brief conclusion of the report.\n4. Every explanation is presented below the line of code's output.\n\n***Enjoy***\n","b1895cec":"Useful Box plots and you can see that average rating is less in **BRANCH B**","3560c66e":"# FEATURE ENGINEERING","618b5943":"# DATA VISUALIZATION","bb8b4221":"# Customer analysis","fc17c6bb":"FINAL COMPLETE BUSINESS REPORT\n1. The city chosen for expansion should be Naypyitaw.\n2. Open the store in Naypyitaw with a full-backed inventory of goods in product categories - Food and Beverages, Fashion Assesories and Electronics.\n3. The company should improve service in Electronics domain.\n4. Increase service in cash payment modes.","e439c3f8":"Well, Yangon leads at Home & Lifestyle and Electronic accessories.\n\nNaypyitaw leads at Food & Bevaerages and Fashion accessories.\n\nMandalay leads at Sports & Travel and Health & Beauty.","8951ce68":"Above, Precisely saying, red coloured cluster represents economically lower class of customers and blue cluster represents economically stronger group of customers\n","22f5ccea":"The Graph speak for itself","a5db6145":"Fashion accessories and food and bevarages are highly scr***d we have to look into it.","ad2d5886":"Graph speak for itself.","07a07175":"**Negligible variation of rating across product line**","d708003a":"Male and Female proportion through bar graph","e628042c":"We got 1000 rows and 17 features","034f9b81":"IMPORTED USEFUL LIBRARIES","17c38d56":"Creating more specific column utilizing the *Time column*","ff35b9a7":"Basic info of the data, looking at any *null values, datatypes*","2d0f1772":"# DO UPVOTE AND FOLLOW","013ac10e":"Peak was achieved during the **14th hour** of the day, So more quantity is been sold in **Afternoon**","c9e9b55b":"A detailed plot of every **branch's Quantity** during the **three month** of time period presented by **females** and **males**","cbe6dae4":"READING DATA THROUGH *pd.read_csv* and saving that in *df*","63f3a4fa":"**Above our some basic insights like mean ratings, mean unit price** *e.t.c*","56a63368":"Gross income is more in Food and bevarages. However,**Health and supply need some good caring**","4910e7d0":"Using the date column to create more specific columns. such as *day, month, year*","c4615d93":"Useless plot. **XD**","84bc89ac":"# THE END"}}