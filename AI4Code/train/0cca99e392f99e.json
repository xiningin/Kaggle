{"cell_type":{"c737dde6":"code","8969b31c":"code","d3afc8bd":"code","3fe08e14":"code","6738fc0c":"code","39ebea0a":"code","f7506054":"code","13c04125":"code","e1e0a739":"code","d3156e1d":"code","8a5b4778":"code","0b83d934":"code","95b07188":"code","4c5d532b":"code","e85251d6":"code","057be215":"code","4e17d74a":"code","da340a8f":"code","d89b7af2":"code","4ccabbff":"code","5e143124":"code","02d6222a":"code","75f7157e":"code","046f41e6":"code","9193d498":"code","48a9fe6b":"code","0a38150c":"code","cbabff90":"code","cd10e38a":"code","1f69172f":"code","2523340b":"code","3884d358":"code","db58b8d4":"code","d580e879":"code","7c957d2f":"code","6d826740":"code","26c9c40e":"code","544d7ccb":"code","bc965167":"code","eb749291":"code","3dfddfce":"code","5ded5eaa":"code","7eab2b62":"code","94c46e1b":"code","cefbebd2":"code","ec1dcae5":"code","9097c5ed":"code","31e43103":"code","a575b4c0":"code","bf5bda3d":"code","8f0c6dbc":"markdown","dacba69c":"markdown","2ea2bc59":"markdown","940484ac":"markdown","b31bfaa2":"markdown","5b3a2898":"markdown","59df8b9b":"markdown","d0e7eee4":"markdown","96f72a7c":"markdown","ed326059":"markdown","95c0ef5c":"markdown","d8ea75cf":"markdown","2cebfc97":"markdown"},"source":{"c737dde6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8969b31c":"#tarih de\u011fi\u015fkenler i\u00e7in datetime\nimport datetime as dt\nimport pandas as pd\n!pip install openpyxl\n#de\u011fi\u015fenlerde maximum s\u00fct\u00fcn\u00fc g\u00f6ster \npd.set_option('display.max_columns', None)\n\n# g\u00f6zlemlerde, sat\u0131rlardan maksimum sat\u0131lar\u0131 g\u00f6ster.\n# pd.set_option('display.max_rows', None)\n\n# \"%.%2f\" noktadan sonra ikibasamak g\u00f6ster\npd.set_option('display.float_format', lambda x: '%.2f' % x)","d3afc8bd":"#1. Online Retail II excelindeki 2010-2011 verisini okuyunuz. Olu\u015fturdu\u011funuz dataframe\u2019in kopyas\u0131n\u0131 olu\u015fturunuz. \n\n\n# Year2010-2011 y\u0131l\u0131 i\u00e7erisindeki veriler\ndf_2010_2011 = pd.read_excel(\"\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\",\n                    sheet_name=\"Year 2010-2011\", engine = \"openpyxl\")\n","3fe08e14":"# kopyas\u0131n\u0131 olu\u015fturmak\ndf = df_2010_2011.copy()\n#ilk sat\u0131rlar\ndf.head()","6738fc0c":"# 2. Veri setinin betimsel istatistiklerini inceleyiniz.\ndf.describe().T","39ebea0a":"#Verinin boyutu, \n# 525k g\u00f6zlem, 8 de\u011fi\u015fken\ndf.shape","f7506054":"df.head()","13c04125":"#verinin boyutu, yeni de\u011fi\u015fken eklenmi\u015f\ndf.shape","e1e0a739":"# 3. Veri setinde eksik g\u00f6zlem var m\u0131? Varsa hangi de\u011fi\u015fkende ka\u00e7 tane eksik g\u00f6zlem vard\u0131r?\n\n#Eksik verilerin toplam\u0131\ndf.isnull().sum()","d3156e1d":"# 4. Eksik g\u00f6zlemleri veri setinden \u00e7\u0131kart\u0131n\u0131z. \u00c7\u0131karma i\u015fleminde \u2018inplace=True\u2019 parametresini kullan\u0131n\u0131z.\n\n# eksik verileri kal\u0131c\u0131 olarak silme\ndf.dropna(inplace=True)","8a5b4778":"# eksik sat\u0131rlar gittikten sonra\n# 407 k g\u00f6zleme d\u00fc\u015ft\u00fc\ndf.shape\n","0b83d934":"#Eksik verilerin toplam\u0131\ndf.isnull().sum()","95b07188":"# 5. E\u015fsiz \u00fcr\u00fcn say\u0131s\u0131 ka\u00e7t\u0131r?\ndf[\"StockCode\"].nunique()","4c5d532b":"df.head()","e85251d6":"#6. Hangi \u00fcr\u00fcnden ka\u00e7ar tane vard\u0131r?\ndf.groupby(\"StockCode\").sum()","057be215":"#6. Hangi \u00fcr\u00fcnden ka\u00e7ar tane vard\u0131r?\ndf.groupby('StockCode').agg({\n    'Quantity': lambda Quantity: Quantity.sum()})","4e17d74a":"# 7. En \u00e7ok sipari\u015f edilen 5 \u00fcr\u00fcn\u00fc \u00e7oktan aza do\u011fru s\u0131ralay\u0131n\u0131z.\ndf.groupby('Description').agg({\n    'Quantity': lambda Quantity: Quantity.sum()}).sort_values(\n    \"Quantity\", ascending= False).head()","da340a8f":"# iadeleri g\u00f6ster, invoce care\ndf[df[\"Invoice\"].str.contains(\"C\", na=False)].head()\n# Total price -eksi olur mu?\n# Quantitiy eksi olur mu?","d89b7af2":"#8. Faturalardaki \u2018C\u2019 iptal edilen i\u015flemleri g\u00f6stermektedir. \u0130ptal edilen i\u015flemleri veri setinden \u00e7\u0131kart\u0131n\u0131z.\n\n# iptal edilen i\u015flemlerin d\u00fc\u015f\u00fcr\u00fclmesi\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]","4ccabbff":"# iadelerin \u00e7\u0131km\u0131\u015f hali\ndf.head()","5e143124":"#9. Fatura ba\u015f\u0131na elde edilen toplam kazanc\u0131 ifade eden \u2018TotalPrice\u2019 ad\u0131nda bir de\u011fi\u015fken olu\u015fturunuz.\n\n# Yeni de\u011fi\u015fken tan\u0131mlama\n#Toplam fiyat= adet*\u00fcr\u00fcn fiyat\u0131\n# Her bir faturan\u0131n toplam bedeli\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\ndf.head()","02d6222a":"df[\"InvoiceDate\"].min() # ilk fatura tarihi\n","75f7157e":"#Recency,al\u0131\u015fveri\u015f yap\u0131l\u015fm\u0131\u015f  son faturaarih\ndf[\"InvoiceDate\"].max()","046f41e6":"# analiz tarihi, ne zaman bu analizi yap\u0131yor olacaks\u0131n?\ntoday_date = dt.datetime(2011, 12, 11)\ntoday_date","9193d498":"# 2.  M\u00fc\u015fteri \u00f6zelinde Recency, Frequency ve Monetary metriklerini groupby, agg ve lambda ile \n\n\n# Her bir m\u00fc\u015fteri i\u00e7in # recency, # frequency ve # monetary de\u011ferlerini nas\u0131l hesaplar\u0131rz?\n# recency, m\u00fc\u015fterinin son al\u0131\u015fveri\u015f tarihinden analiz tarihimizden \u00e7\u0131karaca\u011f\u0131z, burada g\u00fcn cinsinden alm\u0131\u015f\u0131z\n# frequency: customer Id ye g\u00f6re groupby, unique fatura numaras\u0131yla\n# monetary: Customer Id groupby, sonras\u0131nda totalPrice suma alaca\u011f\u0131z\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda InvoiceDate: (today_date - InvoiceDate.max()).days,\n                                     'Invoice': lambda Invoice: Invoice.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n","48a9fe6b":"rfm.head()","0a38150c":"# Acaba en \u00e7ok \u00f6deme yapan m\u00fc\u015fteri kim?\nrfm.sort_values(by=['TotalPrice'], ascending=False).head()\n","cbabff90":"#4\u25aa Olu\u015fturdu\u011funuz metriklerin isimlerini recency, frequency ve monetary olarak de\u011fi\u015ftiriniz.\n\n# yeni de\u011fi\u015fken adlar\u0131n\u0131 atamak\nrfm.columns = ['recency', 'frequency', 'monetary']\nrfm.head()","cd10e38a":"# Transpozunu almak,\n# b\u00fct\u00fcn veririn RFM de\u011feri ortaya \u00e7\u0131kt\u0131\n# ortalama ka\u00e7 g\u00fcn \u00f6nce al\u0131\u015fveri\u015f yapt\u0131\u011f\u0131 \n#frequency, de\u011fer \nrfm.describe().T \n# Acaba \u00f6demesi 0 s\u0131f\u0131rdan k\u00fc\u00e7\u00fck olan var m\u0131? \n#Yanl\u0131\u015fl\u0131kla yap\u0131lm\u0131\u015f olabilir?","1f69172f":"#fatura toplam bedelinin s\u0131f\u0131rdan k\u00fc\u00e7\u00fck olanlar\u0131 \u00e7\u0131kard\u0131\u011f\u0131m\u0131zda\nrfm = rfm[rfm[\"monetary\"] > 0]\nrfm.describe().T ","2523340b":"rfm.head()","3884d358":"# 1\u25aa Recency, Frequency ve Monetary metriklerini qcut yard\u0131m\u0131 ile 1-5 aras\u0131nda skorlara \u00e7eviriniz. \n\n# Recency\n#k\u00fc\u00e7\u00fc\u011fe 5 puan verece\u011fim\n# qcut, k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe s\u0131ralar.\nrfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, \n                               labels=[5, 4, 3, 2, 1])\n# 0,20,40,60,80,100\n# yeni de\u011fi\u015fken tan\u0131mlad\u0131k.\nrfm.head()","db58b8d4":"# rank nedir?\n# 0-20 1 ise 20-40de 1 ise, ilk gelen say\u0131ya bir diyor.\nrfm[\"frequency_score\"] = pd.qcut(rfm['frequency'].rank(method=\"first\"), \n                                 5, labels=[1, 2, 3, 4, 5])\nrfm.head()","d580e879":"\nrfm[\"monetary_score\"] = pd.qcut(rfm['monetary'],\n                                5, labels=[1, 2, 3, 4, 5])\nrfm.head()","7c957d2f":"# 3. \u25aa recency_score ve frequency_score\u2019u tek bir de\u011fi\u015fken olarak ifade ediniz ve RFM_SCORE olarak \n\n# monetary skor neden yok? \n\nrfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                    rfm['frequency_score'].astype(str))\nrfm.head(10)\n#Monetory de\u011feri nerede?","6d826740":"#\u25aa A\u015fa\u011f\u0131daki seg_map yard\u0131m\u0131 ile skorlar\u0131 segmentlere \u00e7eviriniz.\n\n\n# segment isim s\u00f6zl\u00fc\u011f\u00fcn\u00fc tan\u0131mlama\n#R-F, XY\n# regular Expression r'\nseg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}","26c9c40e":"# Regular Expression\n# Yeni segment tan\u0131mala\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\nrfm.head(12)","544d7ccb":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]][rfm[\"segment\"] == \"cant_loose\"].groupby(\n    \"segment\").agg([\"mean\", \"count\"])\n\n\n","bc965167":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]][rfm[\"segment\"] == \"loyal_customers\"].groupby(\n    \"segment\").agg([\"mean\", \"count\"])","eb749291":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]][rfm[\"segment\"] == \"need_attention\"].groupby(\n    \"segment\").agg([\"mean\", \"count\"])","3dfddfce":"rfm[\"segment\"].value_counts()\n","5ded5eaa":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\n    \"segment\").agg(\n    [\"mean\", \"count\"])\n\n#monetary \u00f6nemli ama transaction daha \u00f6nemli y\u00fcre\u011fi s\u0131cak olmas\u0131  daha \u00f6nemli\n#i\u015flem yap\u0131yor olmas\u0131 daha \u00f6nemli.","7eab2b62":"#kimlere ilgi gerekiyor?\n\nrfm[rfm[\"segment\"] == \"loyal_customers\"].head(20)","94c46e1b":"# Yeni dataframe olu\u015fturma\nnew_df = pd.DataFrame()\nnew_df","cefbebd2":"# bu ki\u015filer kim? bunlara y\u00f6nelik \nnew_df[\"new_customer_id\"] = rfm[rfm[\"segment\"] == \"loyal_customers\"].index\nnew_df.count()","ec1dcae5":"new_df.head(14)","9097c5ed":"#csv olarak kay\u0131t etme, \n# bu ki\u015filere \u00f6zg\u00fc kampanyalar d\u00fczenlebilir.\nnew_df.to_excel(\"loyal_customers.xlsx\")  # df'i kaydet","31e43103":"def create_rfm(dataframe):\n\n    # VERIYI HAZIRLAMA\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n\n    # RFM METRIKLERININ HESAPLANMASI\n    today_date = dt.datetime(2011, 12, 11)\n    rfm = dataframe.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                                'Invoice': lambda num: num.nunique(),\n                                                \"TotalPrice\": lambda price: price.sum()})\n    rfm.columns = ['recency', 'frequency', \"monetary\"]\n    rfm = rfm[(rfm['monetary'] > 0)]\n\n    # RFM SKORLARININ HESAPLANMASI\n    rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n    rfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n    rfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1, 2, 3, 4, 5])\n\n    # cltv_df skorlar\u0131 kategorik de\u011fere d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcp df'e eklendi\n    rfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                        rfm['frequency_score'].astype(str))\n\n\n    # SEGMENTLERIN ISIMLENDIRILMESI\n    seg_map = {\n        r'[1-2][1-2]': 'hibernating',\n        r'[1-2][3-4]': 'at_risk',\n        r'[1-2]5': 'cant_loose',\n        r'3[1-2]': 'about_to_sleep',\n        r'33': 'need_attention',\n        r'[3-4][4-5]': 'loyal_customers',\n        r'41': 'promising',\n        r'51': 'new_customers',\n        r'[4-5][2-3]': 'potential_loyalists',\n        r'5[4-5]': 'champions'\n    }\n\n    rfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\n    rfm = rfm[[\"recency\", \"frequency\", \"monetary\", \"segment\"]]\n    return rfm","a575b4c0":"df = df_2010_2011.copy()\ndf.head()","bf5bda3d":"rfm_new = create_rfm(df)\nrfm_new.head(10)","8f0c6dbc":"###############################################################\n# 7. T\u00fcm S\u00fcrecin Fonksiyonla\u015ft\u0131r\u0131lmas\u0131\n###############################################################","dacba69c":"###############################################################\n# 6. RFM Segmentlerinin Olu\u015fturulmas\u0131 ve Analiz Edilmesi (Creating & Analysing RFM Segments)\n###############################################################\n## G\u00f6rev 4:RFM skorlar\u0131n\u0131n segment olarak tan\u0131mlanmas\u0131\n\n\n![RFM](attachment:b03d7ee1-f7cc-4531-9734-e18fd9226a10.png)\n\n\n","2ea2bc59":"###############################################################\n# RFM ile M\u00fc\u015fteri Segmentasyonu (Customer Segmentation with RFM)\n###############################################################\n1. \u0130\u015f Problemi (Business Problem)\n2. Veriyi Anlama (Data Understanding)\n3. Veri Haz\u0131rlama (Data Preparation)\n4. RFM Metriklerinin Hesaplanmas\u0131 (Calculating RFM Metrics)\n5. RFM Skorlar\u0131n\u0131n Hesaplanmas\u0131 (Calculating RFM Scores)\n6. RFM Segmentlerinin Olu\u015fturulmas\u0131 ve Analiz Edilmesi (Creating & Analysing RFM Segments)\n7. T\u00fcm S\u00fcrecin Fonksiyonla\u015ft\u0131r\u0131lmas\u0131","940484ac":"1. 133 g\u00fcn \u00f6nce ortalama al\u0131\u015f-veri\u015f yap\u0131lm\u0131\u015f\n2. 63 farkl\u0131 fatura\n3. fatura ba\u015f\u0131 8.4 \u00fcr\u00fcn sepette var.\n4.  fatura ba\u015f\u0131 ortalama 2800 sterlin para b\u0131rakm\u0131\u015flar\n\n- ek indirim kampayas\u0131 veya \u00fccretsiz kargo verilebilir mi?\n","b31bfaa2":"###############################################################\n# 3. Veri Haz\u0131rlama (Data Preparation)\n###############################################################","5b3a2898":"###############################################################\n# 2. Veriyi Anlama (Data Understanding)\n###############################################################\n","59df8b9b":"###############################################################\n# 5. RFM Skorlar\u0131n\u0131n Hesaplanmas\u0131 (Calculating RFM Scores)\n###############################################################\n\n## G\u00f6rev 3: RFM skorlar\u0131n\u0131n olu\u015fturulmas\u0131 ve tek bir de\u011fi\u015fkene \u00e7evrilmesi\n\n","d0e7eee4":"## G\u00f6rev 2:\n1. \u25aa Recency, Frequency ve Monetary tan\u0131mlar\u0131n\u0131 yap\u0131n\u0131z.\n","96f72a7c":"###############################################################\n# 4. RFM Metriklerinin Hesaplanmas\u0131 (Calculating RFM Metrics)\n###############################################################","ed326059":"###############################################################\n# 1. \u0130\u015f Problemi (Business Problem)\n###############################################################\n\nBir e-ticaret \u015firketi m\u00fc\u015fterilerini segmentlere ay\u0131r\u0131p bu segmentlere g\u00f6re pazarlama stratejileri belirlemek istiyor.\n\n### Veri Seti Hikayesi\n- https:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail+II\n- https:\/\/www.kaggle.com\/nathaniel\/uci-online-retail-ii-data-set\n\n        - Online Retail II isimli veri seti \u0130ngiltere merkezli online bir sat\u0131\u015f ma\u011fazas\u0131n\u0131n 01\/12\/2009 - 09\/12\/2011 tarihleri aras\u0131ndaki sat\u0131\u015flar\u0131n\u0131 i\u00e7eriyor.\n\n\n### De\u011fi\u015fkenler\n\n- InvoiceNo: Fatura numaras\u0131. Her i\u015fleme yani faturaya ait e\u015fsiz numara. C ile ba\u015fl\u0131yorsa iptal edilen i\u015flem.\n- StockCode: \u00dcr\u00fcn kodu. Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numara.\n- Description: \u00dcr\u00fcn ismi\n- Quantity: \u00dcr\u00fcn adedi. Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir.\n- InvoiceDate: Fatura tarihi ve zaman\u0131.\n- UnitPrice: \u00dcr\u00fcn fiyat\u0131 (Sterlin cinsinden)\n- CustomerID: E\u015fsiz m\u00fc\u015fteri numaras\u0131\n- Country: \u00dclke ismi. M\u00fc\u015fterinin ya\u015fad\u0131\u011f\u0131 \u00fclke.","95c0ef5c":"1. 53 g\u00fcn \u00f6nce ortalama al\u0131\u015f-veri\u015f yap\u0131lm\u0131\u015f\n2. 187 farkl\u0131 fatura\n3. fatura ba\u015f\u0131 2.3 \u00fcr\u00fcn sepette var.\n4.  fatura ba\u015f\u0131 ortalama 900 sterlin para b\u0131rakm\u0131\u015flar\n\n- ek indirim kampayas\u0131 veya \u00fccretsiz kargo verilebilir mi?\n- \u00e7apraz \u00fcr\u00fcn, sales-up, pahall\u0131 \u00fcr\u00fcnler teklif edilse nas\u0131l \u015fampiyon yapabiliriz?\n- aran\u0131p acaba uzun zamand\u0131r neden al\u0131\u015fveri\u015f yapm\u0131yorlar? sonras\u0131nda yeni bir aksiyon yap\u0131labilir?\n","d8ea75cf":"1. 33 g\u00fcn \u00f6nce ortalama al\u0131\u015f-veri\u015f yap\u0131lm\u0131\u015f\n2. 819 farkl\u0131 fatura\n3. fatura ba\u015f\u0131 6.5 \u00fcr\u00fcn sepette var.\n4.  fatura ba\u015f\u0131 ortalama 2860 sterlin para b\u0131rakm\u0131\u015flar\n\n- ek indirim kampayas\u0131 veya \u00fccretsiz kargo verilebilir mi?\n- \u00e7apraz \u00fcr\u00fcn, sales-up, pahall\u0131 \u00fcr\u00fcnler teklif edilse nas\u0131l \u015fampiyon yapabiliriz?\n","2cebfc97":"## G\u00f6rev 1:"}}