{"cell_type":{"0f67c5da":"code","e6bab3a2":"code","821a84b3":"code","6df2f6b5":"code","54e20493":"code","f0b565e4":"code","bc1877bc":"code","1380f139":"code","f6dba145":"code","c7014eed":"code","45a0cfc6":"code","05c6ff04":"markdown","a0862da2":"markdown","18edef1f":"markdown","cdaf5256":"markdown","a4bc41af":"markdown","5cca43ca":"markdown","b89558a6":"markdown","8ff862ba":"markdown","ea876230":"markdown","39e0064b":"markdown","18d31ba5":"markdown"},"source":{"0f67c5da":"import pandas as pd","e6bab3a2":"def get_index_positions(list_of_elems, element):\n    '''\n    Returns the indexes of all occurrences of give element in the given list\n    '''\n    index_pos_list = []\n    index_pos = 0\n    while True:\n        try:\n            # Search for item in list from indexPos to the end of list\n            index_pos = list_of_elems.index(element, index_pos)\n            # Add the index position in list\n            index_pos_list.append(index_pos)\n            index_pos += 1\n        except ValueError as e:\n            break\n    return index_pos_list","821a84b3":"def process_showdown_moveset_data(filepath=\"..\/input\/d\/fruityfritz\/gen8-vgc-series7-movesets\", filename=\"2020-12\"):\n    \"\"\"\n    Processes Smogon moveset data and returns it in a dictionary per Pokemon\n    \n    Inputs:\n    - filepath: string of the filepath\n    - filename: string of the filename WITHOUT the file extension\n    \n    Returns dictionary of information indexed by Pokemon\n    \"\"\"\n    # importing each line of data to be parseda\n    with open(f\"{filepath}\/{filename}.txt\") as f:\n        lines = f.readlines()\n    # splitting the lines of data per each Pokemon\n    lines_per_pokemon = [] # list of lists of lines pertaining to each Pokemon\n    beginning_line = 0 # initializing\n    for line_no in range(len(lines)-1):\n        # looking for lines with repeating beginning to the line indicating the end and start of a new Pokemon data stream\n        if lines[line_no][:3] == \" +-\" and lines[line_no+1][:3] == \" +-\":\n            lines_per_pokemon.append(lines[beginning_line:line_no+1])\n            beginning_line = line_no+1\n    \n    # Looping through each Pokemons alotted lines and extracting the information\n    data = {} # dictionary to store the Pokemon information\n    for info in lines_per_pokemon:\n        # pre-allocating the per Pokemon dictionary\n        d = {\"usage\":[],\"abilities\":[],\"items\":[],\"spreads\":[],\"moves\":[],\"teammates\":[]}\n        # calling helper function to indentify where the headers for the keys of the dictionary will be\n        indices = get_index_positions(info,\" +----------------------------------------+ \\n\")\n        # stripping the data that will be consistently in the same place\n        name = info[1].split(\" |\")[1].strip() # name of Pokemon\n        usage = int(info[3].split(\" |\")[1].split(\": \")[-1]) # number of times used that month\n        d[\"usage\"] = usage\n        # removing indices for the name, usage, and counters and checks information blocks\n        reduced_indices = indices[2:-1]\n        # looping through the indices and grabbing the information from each block\n        for j, index in enumerate(reduced_indices):\n            var = info[index+1].split(\" |\")[1].strip() # variable name\n            if var != \"Checks and Counters\": # easier just to check for this\n                # Grabbing the individual data from the block by looking between the indices\n                for line in info[index+2:reduced_indices[j+1]]:\n                    # splitting the information into the string and the percentage\n                    tokens = line.split(\" |\")[1].strip().split(\" \")\n                    # some strings are multiple words, looping through all but the last split and concatenating back\n                    s = \"\" \n                    for token in tokens[:-1]:\n                        s += token + \" \"\n                    # adding just the float of the percentage\n                    percentage = float(tokens[-1].split(\"%\")[0])\n                    # appending the list to the dictionary\n                    d[var.lower()].append([s.strip(),percentage])\n\n        data[name] = d\n        \n    return data","6df2f6b5":"file = \"2020-12\"\ndata = process_showdown_moveset_data(filename=file)","54e20493":"# top five used Pokemon\nprint(list(data.keys())[:5])","f0b565e4":"for ability, percent in data[\"Dragapult\"][\"abilities\"]:\n    print(f\"{ability}: {percent}%\")","bc1877bc":"for item, percent in data[\"Landorus\"][\"items\"]:\n    print(f\"{item}: {percent}%\")","1380f139":"for spread, percent in data[\"Tapu Fini\"][\"spreads\"]:\n    print(f\"{spread}: {percent}%\")","f6dba145":"for moves, percent in data[\"Regieleki\"][\"moves\"]:\n    print(f\"{moves}: {percent}%\")","c7014eed":"for partner, percent in data[\"Dusclops\"][\"teammates\"]:\n    print(f\"{partner}: {percent}%\")","45a0cfc6":"series = 7\nwith open(f\"vgc-series{series}_{file}-usage_formatted.json\", \"w+\") as j:\n    json.dump(data, j)","05c6ff04":"### Spreads\nThe spreads for each Pokemon are given and the relative percentage.","a0862da2":"### Usage\nData are compiled according to usage and therefore the dictionary is sorted based on usage.","18edef1f":"# Pre-Processing Showdown Moveset Data\nThe purpose of this notebook is to help facilitate processing of the data provided by Pokemon Showdown on movesets used by Pokemon on their platform. \n\nThe dataframes created here are also provided in this database for future use.","cdaf5256":"## Importing Raw Showdown Data\nWe define a function to help import, process, and format the data from Showdown. The information looks nicely formatted, but it is a nightmare (in my opinion) to deal with. The following two functions help to deal with it.","a4bc41af":"### Items\nSame as abilities, you can see the most used items on a Pokemon. At most, 7 unique items will be displayed and the remaining items will be lumped together as \"Other\".","5cca43ca":"## Exploring Formatted Dataset\nThe following cells highlight some of the basic uses of the formatted dataset.","b89558a6":"### Teammates\nThe last bit of information is the typically used teammates that accompany a Pokemon.","8ff862ba":"### Moves\nAnd, of course, you can see the various moves that are used by a Pokemon. At most, you will see the top 11 moves used by the Pokemon and the rest will be lumped together as \"Other\"","ea876230":"## Saving \nThe following cell will save the dictionary as a json file that you can import and work with.","39e0064b":"Using the `process_showdown_moveset_data` function, we can get the data.","18d31ba5":"### Abilities\nYou can see the abilities that are typically used by a certain Pokemon"}}