{"cell_type":{"059e5aea":"code","6f197ff8":"code","13811bb9":"code","5d411f75":"code","613a1373":"code","af1b660d":"code","0cdf5a73":"code","c76f5eb2":"code","cc805309":"code","450e530e":"code","99b2beff":"code","3b916e9f":"code","cbe767d7":"code","f6e1aa27":"code","82c81100":"code","7b51fba1":"code","f85f4219":"code","450afe66":"code","c63f280a":"code","8035b2e9":"code","c4182f8d":"code","61e42262":"markdown","de2df8e1":"markdown","57233224":"markdown","9bc9185f":"markdown","60f502cf":"markdown","51c7f9f6":"markdown","b1583b9b":"markdown"},"source":{"059e5aea":"import numpy as np\nimport pandas as pd\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom scipy import stats\nimport glob\nwarnings.filterwarnings('ignore')","6f197ff8":"train = pd.read_csv(\"..\/input\/landmark-recognition-2020\/train.csv\")\ntrain.head()","13811bb9":"# Check for Duplicates\ntrain.duplicated().sum()","5d411f75":"print(\"Training data size\",train.shape)\nsubmission = pd.read_csv(\"..\/input\/landmark-recognition-2020\/sample_submission.csv\")\nsubmission.head()","613a1373":"train['landmark_id'].value_counts().hist()","af1b660d":"# missing data in training data \ntotal = train.isnull().sum().sort_values(ascending = False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending = False)\nmissing_train_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_train_data.head()","0cdf5a73":"# Occurance of landmark_id in decreasing order(Top categories)\ntemp = pd.DataFrame(train.landmark_id.value_counts().head(8))\ntemp.reset_index(inplace=True)\ntemp.columns = ['landmark_id','count']\ntemp","c76f5eb2":"# Plot the most frequent landmark_ids\nplt.figure(figsize = (9, 8))\nplt.title('Most frequent landmarks')\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"landmark_id\", y=\"count\", data=temp,\n            label=\"Count\")\nplt.show()","cc805309":"# Occurance of landmark_id in increasing order\ntemp = pd.DataFrame(train.landmark_id.value_counts().tail(8))\ntemp.reset_index(inplace=True)\ntemp.columns = ['landmark_id','count']\ntemp","450e530e":"# Plot the least frequent landmark_ids\nplt.figure(figsize = (9, 8))\nplt.title('Least frequent landmarks')\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"landmark_id\", y=\"count\", data=temp,\n            label=\"Count\")\nplt.show()","99b2beff":"train.nunique()","3b916e9f":"#Landmark ID distribution\nplt.figure(figsize = (10, 8))\nplt.title('Landmark ID Distribuition')\nsns.distplot(train['landmark_id'])\n\nplt.show()","cbe767d7":"print(\"Number of classes under 20 occurences\",(train['landmark_id'].value_counts() <= 20).sum(),'out of total number of categories',len(train['landmark_id'].unique()))","f6e1aa27":"# Landmark Id Density Plot\nplt.figure(figsize = (8, 8))\nplt.title('Landmark id density plot')\nsns.kdeplot(train['landmark_id'], color=\"tomato\", shade=True)\nplt.show()","82c81100":"#Landmark id distribuition and density plot\nplt.figure(figsize = (8, 8))\nplt.title('Landmark id distribuition and density plot')\nsns.distplot(train['landmark_id'],color='green', kde=True,bins=100)\nplt.show()","7b51fba1":"sns.set()\nplt.title('Training set: number of images per class(line plot)')\nsns.set_color_codes(\"pastel\")\nlandmarks_fold = pd.DataFrame(train['landmark_id'].value_counts())\nlandmarks_fold.reset_index(inplace=True)\nlandmarks_fold.columns = ['landmark_id','count']\nax = landmarks_fold['count'].plot(logy=True, grid=True)\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","f85f4219":"#Training set: number of images per class(statter plot)\nsns.set()\nlandmarks_fold_sorted = pd.DataFrame(train['landmark_id'].value_counts())\nlandmarks_fold_sorted.reset_index(inplace=True)\nlandmarks_fold_sorted.columns = ['landmark_id','count']\nlandmarks_fold_sorted = landmarks_fold_sorted.sort_values('landmark_id')\nax = landmarks_fold_sorted.plot.scatter(\\\n     x='landmark_id',y='count',\n     title='Training set: number of images per class(statter plot)')\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","450afe66":"# Visualize outliers, min\/max or quantiles of the landmarks count\nsns.set()\nax = landmarks_fold_sorted.boxplot(column='count')\nax.set_yscale('log')","c63f280a":"# Probability Plot\nsns.set()\nres = stats.probplot(train['landmark_id'], plot=plt)","8035b2e9":"train_list = glob.glob('..\/input\/landmark-recognition-2020\/train\/*\/*\/*\/*')","c4182f8d":"plt.rcParams[\"axes.grid\"] = False\nf, axarr = plt.subplots(4, 3, figsize=(24, 22))\n\ncurr_row = 0\nfor i in range(12):\n    example = cv2.imread(train_list[i])\n    example = example[:,:,::-1]\n    \n    col = i%4\n    axarr[col, curr_row].imshow(example)\n    if col == 3:\n        curr_row += 1","61e42262":"## Plot Random Images","de2df8e1":"![Google LAndmark Recognition](https:\/\/miro.medium.com\/max\/2680\/1*d70CQj7zmTsy01WQvi5cpg.jpeg)","57233224":"## For more updates in this notebook checkout this repository: https:\/\/github.com\/chiragsamal\/Google-Landmark-Recognition ","9bc9185f":"## References\n - [Google Landmarks v2 Exploratory Data Analysis(EDA)](https:\/\/www.kaggle.com\/huangxiaoquan\/google-landmarks-v2-exploratory-data-analysis-eda\/data)\n - [Google Landmark Recogn. Challenge Data Exploration](https:\/\/www.kaggle.com\/gpreda\/google-landmark-recogn-challenge-data-exploration)\n - [A Very Extensive Landmark Exploratory Analysis](https:\/\/www.kaggle.com\/codename007\/a-very-extensive-landmark-exploratory-analysis) \n - [Diving into Google\u2019s Landmark Recognition Kaggle Competition](https:\/\/towardsdatascience.com\/diving-into-googles-landmark-recognition-kaggle-competition-6975dbe11072)","60f502cf":"## End of the Notebook","51c7f9f6":"# Breakdown of this notebook:\n1. **Importing Libraries**\n2. **Loading the dataset**\n3. **Data Visualization:** \n    - Histogram of Count of Landmark ID\n    - Plot the most frequent landmark_ids\n    - Plot the least frequent landmark_ids\n    - Landmark ID distribution\n    - Landmark Id Density Plot\n    - Landmark id distribuition and density plot\n    - Training set: number of images per class(line plot)\n    - Training set: number of images per class(statter plot)\n    - Visualize outliers, min\/max or quantiles of the landmarks count\n    - Probability Plot\n4. **Plot Random Images**    ","b1583b9b":"<h1> Please Upvote if you found this helpful:) <\/h1>"}}