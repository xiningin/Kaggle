{"cell_type":{"a3b3c685":"code","b2268e27":"code","38bdabee":"code","4e8f237a":"code","11dc5810":"code","b99548f1":"code","4f9fe9c0":"code","651dad9a":"code","2670220d":"code","b378829e":"code","55b40693":"code","6cd246bc":"code","08864b1f":"code","dc1eb7a4":"code","b0cbbe39":"code","0d16a694":"code","bbe4efb7":"code","95d72a93":"code","6b549ac3":"code","1cb7eec2":"code","fee039ee":"code","f1b4563b":"code","2c658ada":"code","efef5290":"code","682cc4b7":"code","c12c0c02":"code","e5bbaf9a":"code","04e605f0":"code","0e080b88":"code","e0b044e3":"code","59a7d122":"code","2b241ece":"code","70108234":"code","97b029c2":"code","37dbb859":"code","21ac7e06":"code","a83af28c":"code","6ea7118c":"code","a1a7eba5":"code","3630543f":"code","a2b8fc41":"code","2ecb5a86":"code","80dfe993":"code","9299db8a":"code","a2b8ad3e":"code","19484522":"code","21d496d9":"code","ff342b4c":"code","5c2b8c93":"code","60b9c3e7":"code","a8fae3dd":"code","6d16c84d":"code","c9cf0b1a":"code","1aff4334":"code","f84eb723":"code","1f800263":"code","d9ac17f3":"code","2bcd44ff":"code","261d5834":"code","26f4b8ec":"code","c36b3cd8":"code","33326529":"code","dd4c5287":"code","f7e829f0":"code","1fe47d14":"code","f3c2a547":"code","66de4d07":"markdown","65588618":"markdown","0811a83d":"markdown","7417211b":"markdown","1fdaecbe":"markdown","453ac4ba":"markdown","f63bad0c":"markdown","5f2d3e1e":"markdown","490fcb9c":"markdown","7a95fe66":"markdown"},"source":{"a3b3c685":"!pip install feature-engine","b2268e27":"import pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt \n\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nimport eli5\nfrom warnings import filterwarnings\nfrom sklearn.preprocessing import RobustScaler, MinMaxScaler,StandardScaler\nfrom sklearn.model_selection import RepeatedStratifiedKFold,cross_val_score\n\nfrom eli5.sklearn import PermutationImportance\nfrom sklearn.preprocessing import FunctionTransformer, PowerTransformer\nfrom imblearn.over_sampling import SMOTE,RandomOverSampler,ADASYN,KMeansSMOTE,SMOTENC,BorderlineSMOTE\nfrom imblearn.under_sampling import NearMiss,RandomUnderSampler,TomekLinks,OneSidedSelection\nfrom imblearn.under_sampling import CondensedNearestNeighbour,RepeatedEditedNearestNeighbours\nfrom imblearn.under_sampling import  ClusterCentroids,InstanceHardnessThreshold\nfrom imblearn.ensemble import BalancedBaggingClassifier,BalancedRandomForestClassifier,EasyEnsembleClassifier\nfrom collections import Counter\nfrom sklearn.ensemble import VotingClassifier,RandomForestClassifier,GradientBoostingClassifier,StackingClassifier\nfrom scipy.stats import boxcox\nfrom scipy import stats\nimport scipy\nfrom feature_engine.encoding import WoEEncoder,MeanEncoder,PRatioEncoder\nfrom feature_engine.encoding import DecisionTreeEncoder,CountFrequencyEncoder,OrdinalEncoder\nfrom feature_engine.selection import DropConstantFeatures,SmartCorrelatedSelection\nfrom feature_engine.creation import MathematicalCombination,CombineWithReferenceFeature\nfrom sklearn.tree import DecisionTreeClassifier\nimport featuretools as ft\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nimport missingno as msn\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nimport scipy.cluster.hierarchy as sch\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import DBSCAN\nfrom imblearn.pipeline import Pipeline, make_pipeline\nfrom sklearn.model_selection import KFold,GridSearchCV\nfrom sklearn.ensemble import IsolationForest\n\nfilterwarnings(\"ignore\")\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows',None)","38bdabee":"def set_all_seeds(seed):\n    np.random.seed(seed)\n    random.seed(seed)\n    tf.random.set_seed(seed)","4e8f237a":"submission=pd.read_csv(\"\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/sample_submission.csv\")\nmonthly_exp=pd.read_csv(\"\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/monthly_expenditures.csv\")\ntrain=pd.read_csv(\"\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/turkiye-is-bankas-machine-learning-challenge-3\/test.csv\")","11dc5810":"train=train.drop([29804,48736])","b99548f1":"train_musteri=train.musteri\ntest_musteri=test.musteri","4f9fe9c0":"full_data=pd.concat([train,test])\nfull_data_musteri=full_data.musteri","651dad9a":"monthly_exp.tarih=monthly_exp.tarih.astype(str)","2670220d":"monthly_exp[\"date\"]=[monthly_exp.tarih[i][:4]+\"-\"+monthly_exp.tarih[i][4:] for i in range(len(monthly_exp.tarih))]\nmonthly_exp[\"date\"]=[monthly_exp.date[i][:7]+\"-\"+monthly_exp.date[i][7:] for i in range(len(monthly_exp.date))]","b378829e":"monthly_exp.date=pd.to_datetime(monthly_exp.date)\nmonthly_exp[\"ay\"]=monthly_exp.date.dt.month","55b40693":"merged_data=pd.concat([full_data,monthly_exp])","6cd246bc":"merged_data_new=pd.merge(merged_data,full_data,on=[\"musteri\"]).drop([\"yas_x\",\"kidem_suresi_x\",\n                                                     \"egitim_x\",\"is_durumu_x\",\n                                                    \"meslek_grubu_x\",\"tarih_x\",\n                                                    \"target_x\"],axis=1).rename({\"yas_y\":\"yas\",\n                                                                               \"kidem_suresi_y\":\"kidem_suresi\",\n                                                                               \"egitim_y\":\"egitim\",\n                                                                               \"is_durumu_y\":\"is_durumu\",\n                                                                               \"meslek_grubu_y\":\"meslek_grubu\",\n                                                                               \"tarih_y\":\"tarih\",\n                                                                               \"target_y\":\"target\"},axis=1)\nmerged_data_new=merged_data_new.dropna(subset=[\"sektor\",\"islem_adedi\",\n                                               \"aylik_toplam_tutar\",\"date\",\"ay\"])\nmerged_data_new.head()","08864b1f":"merged_data_new.aylik_toplam_tutar.max()","dc1eb7a4":"merged_data_new.aylik_toplam_tutar.describe().to_frame().T","b0cbbe39":"merged_data_new=merged_data_new.drop([230981])","0d16a694":"merged_data_new[merged_data_new.aylik_toplam_tutar==148625250.0]","bbe4efb7":"merged_data_new[\"yas_grubu\"]=pd.cut(merged_data_new.yas,bins=[17,19,24,29,34,39,44,50],\n                        labels=[\"grup1\",\"grup2\",\"grup3\",\"grup4\",\"grup5\",\"grup6\",\"grup7\"])","95d72a93":"merged_data_new.loc[merged_data_new.islem_adedi<=0,\"islem_adedi\"]=-1*(merged_data_new.loc[merged_data_new.islem_adedi<=0,\"islem_adedi\"])","6b549ac3":"#count_map_=merged_data_new.sektor.value_counts().to_dict()\n#merged_data_new[\"count_sektor\"]=merged_data_new.sektor.map(count_map_)\ncount_map=merged_data_new.musteri.value_counts().to_dict()\nmerged_data_new[\"count_customer\"]=merged_data_new.musteri.map(count_map)\n#count_map=merged_data_new.meslek_grubu.value_counts().to_dict()\n#merged_data_new[\"count_meslek_grubu\"]=merged_data_new.meslek_grubu.map(count_map)\n#count_map=merged_data_new.is_durumu.value_counts().to_dict()\n#merged_data_new[\"count_is_durumu\"]=merged_data_new.is_durumu.map(count_map)","1cb7eec2":"islem_adet_toplam=merged_data_new.groupby([\"musteri\"])[\"islem_adedi\"].sum()\nmerged_data_new=pd.merge(merged_data_new,islem_adet_toplam,how=\"inner\",on=[\"musteri\"]).rename({\"islem_adedi_x\":\"islem_adedi\",\n                                                                            \"islem_adedi_y\":\"islem_adet_toplam\"},\n                                                                           axis=1).sort_values(by=\"date\")","fee039ee":"mus_tutar=merged_data_new.groupby([\"musteri\"])[\"aylik_toplam_tutar\"].sum()\nmerged_data_new=pd.merge(merged_data_new,mus_tutar,how=\"inner\",on=[\"musteri\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n                                                                          \"aylik_toplam_tutar_y\":\"mus_tutar\"},\n                                                                           axis=1).sort_values(by=\"date\")\n\n#mus_std_tutar=merged_data_new.groupby([\"musteri\"])[\"aylik_toplam_tutar\"].std()\n#merged_data_new=pd.merge(merged_data_new,mus_std_tutar,how=\"inner\",on=[\"musteri\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n #                                                                           \"aylik_toplam_tutar_y\":\"mus_std_tutar\"},\n  #                                                                         axis=1).sort_values(by=\"date\")","f1b4563b":"count_map=merged_data_new.loc[merged_data_new.sektor==\"KUYUMCU\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_KUYUMCU\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_KUYUMCU=merged_data_new.count_KUYUMCU.fillna(0)","2c658ada":"count_map=merged_data_new.loc[merged_data_new.sektor==\"DIJITAL_URUNLR\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_DIGITAL\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_DIGITAL=merged_data_new.count_DIGITAL.fillna(0)\n","efef5290":"count_map=merged_data_new.loc[merged_data_new.sektor==\"BAHCE_CICEKCLK\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_CICEK\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_CICEK=merged_data_new.count_CICEK.fillna(0)","682cc4b7":"count_map=merged_data_new.loc[merged_data_new.sektor==\"TASIMACILIK\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_TASIMA\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_TASIMA=merged_data_new.count_TASIMA.fillna(0)","c12c0c02":"count_map=merged_data_new.loc[merged_data_new.sektor==\"BENZIN_YAKIT\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_BENZIN\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_BENZIN=merged_data_new.count_BENZIN.fillna(0)","e5bbaf9a":"count_map=merged_data_new.loc[merged_data_new.sektor==\"GIYIM_AKSESUAR\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_GIYIM\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_GIYIM=merged_data_new.count_GIYIM.fillna(0)","04e605f0":"count_map=merged_data_new.loc[merged_data_new.sektor==\"ELKT_ESYA_BILG\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_ELK\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_ELK=merged_data_new.count_ELK.fillna(0)","0e080b88":"count_map=merged_data_new.loc[merged_data_new.sektor==\"RESTORAN_CATER\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_REST\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_REST=merged_data_new.count_REST.fillna(0)\ncount_map=merged_data_new.loc[merged_data_new.sektor==\"ICKILI_YERLER\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_ICKILI_YERLER\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_ICKILI_YERLER=merged_data_new.count_ICKILI_YERLER.fillna(0)\ncount_map=merged_data_new.loc[merged_data_new.sektor==\"EGL_SPOR_HOBI\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_EGL_SPOR_HOBI\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_EGL_SPOR_HOBI=merged_data_new.count_EGL_SPOR_HOBI.fillna(0)\ncount_map=merged_data_new.loc[merged_data_new.sektor==\"KLP_DERNK_SOSY\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_KLP_DERNK_SOSY\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_KLP_DERNK_SOSY=merged_data_new.count_KLP_DERNK_SOSY.fillna(0)\ncount_map=merged_data_new.loc[merged_data_new.sektor==\"SAGLIK_HIZMTLR\",\"musteri\"].value_counts().to_dict()\n\nmerged_data_new[\"count_SAGLIK_HIZMTLR\"]=merged_data_new.musteri.map(count_map)\nmerged_data_new.count_SAGLIK_HIZMTLR=merged_data_new.count_SAGLIK_HIZMTLR.fillna(0)","e0b044e3":"#mus_adet_sek=merged_data_new.groupby([\"musteri\",\"sektor\"])[\"islem_adedi\"].sum()#\n#merged_data_new=pd.merge(merged_data_new,mus_adet_sek,how=\"inner\",on=[\"musteri\",\"sektor\"]).rename({\"islem_adedi_x\":\"islem_adedi\",\n #                                                                            \"islem_adedi_y\":\"mus_adet_sek\"},\n  #                                                                          axis=1).sort_values(by=\"date\")","59a7d122":"merged_data_new.sektor.value_counts()","2b241ece":"#merged_data_new[\"oran_adet_evlilik\"]=np.nan\n\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup1\"),\"oran_adet_evlilik\"]=0.056124\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup2\"),\"oran_adet_evlilik\"]=0.376476\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup3\"),\"oran_adet_evlilik\"]=0.270968\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup4\"),\"oran_adet_evlilik\"]=0.137642\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup5\"),\"oran_adet_evlilik\"]=0.074385\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup6\"),\"oran_adet_evlilik\"]=0.047185\n#merged_data_new.loc[(merged_data_new.target==0)&(merged_data_new.yas_grubu==\"grup7\"),\"oran_adet_evlilik\"]=0.037220\n\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup1\"),\"oran_adet_evlilik\"]=0.001586\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup2\"),\"oran_adet_evlilik\"]=0.086471\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup3\"),\"oran_adet_evlilik\"]=0.415618\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup4\"),\"oran_adet_evlilik\"]=0.303830\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup5\"),\"oran_adet_evlilik\"]=0.114775\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup6\"),\"oran_adet_evlilik\"]=0.055844\n#merged_data_new.loc[(merged_data_new.target==1)&(merged_data_new.yas_grubu==\"grup7\"),\"oran_adet_evlilik\"]=0.021876","70108234":"def missing_indicator(df, variable):    \n    return np.where(df[variable].isnull(), 1, 0)\n\n#merged_data_new[\"meslek_grubu\"+'_NA'] = missing_indicator(merged_data_new,\"meslek_grubu\")\n#merged_data_new[\"egitim\"+'_NA'] = missing_indicator(merged_data_new, \"egitim\")\nmerged_data_new[\"is_durumu\"+\"_NA\"]=missing_indicator(merged_data_new,\"is_durumu\")","97b029c2":"merged_data_new.meslek_grubu=merged_data_new.meslek_grubu.fillna(\"bilinmiyor\")\nmerged_data_new.egitim=merged_data_new.egitim.fillna(\"bilinmiyor\")\nmerged_data_new.is_durumu=merged_data_new.is_durumu.fillna(\"bilinmiyor\")","37dbb859":"#egit_is_grup=merged_data_new.groupby([\"egitim\",\"is_durumu\",\"meslek_grubu\"])[\"aylik_toplam_tutar\"].mean()\n\n#merged_data_new=pd.merge(merged_data_new,egit_is_grup,on=[\"egitim\",\"is_durumu\",\"meslek_grubu\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n #                                                                           \"aylik_toplam_tutar_y\":\"egitim_is_grup\"},axis=1)   \n#egit_is_yas_grup=merged_data_new.groupby([\"egitim\",\"is_durumu\"])[\"aylik_toplam_tutar\"].mean()\n\n#merged_data_new=pd.merge(merged_data_new,egit_is_yas_grup,on=[\"egitim\",\"is_durumu\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n #                                                                           \"aylik_toplam_tutar_y\":\"egitim_is_yas_grup\"},axis=1)  ","21ac7e06":"#egit_is_grup=merged_data_new.groupby([\"egitim\",\"is_durumu\",\"meslek_grubu\"])[\"aylik_toplam_tutar\"].mean()\n\n#merged_data_new=pd.merge(merged_data_new,egit_is_grup,on=[\"egitim\",\"is_durumu\",\"meslek_grubu\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n #                                                                           \"aylik_toplam_tutar_y\":\"egitim_is_grup\"},axis=1)   \n#egit_is_yas_grup=merged_data_new.groupby([\"egitim\",\"is_durumu\"])[\"aylik_toplam_tutar\"].mean()\n\n#merged_data_new=pd.merge(merged_data_new,egit_is_yas_grup,on=[\"egitim\",\"is_durumu\"]).rename({\"aylik_toplam_tutar_x\":\"aylik_toplam_tutar\",\n #                                                                           \"aylik_toplam_tutar_y\":\"egitim_is_yas_grup\"},axis=1)  ","a83af28c":"unique_data=merged_data_new.drop_duplicates(subset=\"musteri\")\nfull_data_musteri=pd.DataFrame(full_data_musteri)\nfull=full_data_musteri.join(unique_data.set_index(\"musteri\"),on=\"musteri\").drop([\"islem_adedi\",\n                                                                                 \"aylik_toplam_tutar\",\"ay\",\"sektor\"],axis=1)\nfull.head() #sektor eklicen","6ea7118c":"full.loc[full.kidem_suresi<0,\"kidem_suresi\"]=0","a1a7eba5":"full.head()","3630543f":"train_new=full.iloc[:59998]\ntest_new=full.iloc[59998:]","a2b8fc41":"#def missing_indicator(df, variable):    \n #   return np.where(df[variable].isnull(), 1, 0)\n\n#train_new[\"meslek_grubu\"+'_NA'] = missing_indicator(train_new,\"meslek_grubu\")\n#train_new[\"egitim\"+'_NA'] = missing_indicator(train_new, \"egitim\")\n#train_new[\"is_durumu\"+\"_NA\"]=missing_indicator(train_new,\"is_durumu\")\n\n#test_new[\"meslek_grubu\"+'_NA'] = missing_indicator(test_new,\"meslek_grubu\")\n#test_new[\"egitim\"+'_NA'] = missing_indicator(test_new, \"egitim\")\n#test_new[\"is_durumu\"+\"_NA\"]=missing_indicator(test_new,\"is_durumu\")\n#train_new.meslek_grubu=train_new.meslek_grubu.fillna(\"bilinmiyor\")\n#train_new.egitim=train_new.egitim.fillna(\"bilinmiyor\")\n#train_new.is_durumu=train_new.is_durumu.fillna(\"bilinmiyor\")\n\n\n#test_new.meslek_grubu=test_new.meslek_grubu.fillna(\"bilinmiyor\")\n#test_new.egitim=test_new.egitim.fillna(\"bilinmiyor\")\n#test_new.is_durumu=test_new.is_durumu.fillna(\"bilinmiyor\")","2ecb5a86":"train_new[\"log_kidem_suresi\"]=np.sqrt(train_new.kidem_suresi)\ntest_new[\"log_kidem_suresi\"]=np.sqrt(test_new.kidem_suresi)","80dfe993":"train_new.head()","9299db8a":"sns.distplot(train_new.kidem_suresi)","a2b8ad3e":"sns.distplot(train_new.log_kidem_suresi)","19484522":"#train_new[\"yas_kidem\"]=train_new[\"yas\"]-(train_new[\"kidem_suresi\"]\/12)\n#test_new[\"yas_kidem\"]=test_new[\"yas\"]-(test_new[\"kidem_suresi\"]\/12)\n#plt.figure(figsize=(20,10));\n#sns.heatmap(train_new.corr().abs(),annot=True,cmap=\"coolwarm\");\ntrain_new.head()","21d496d9":"X_train=train_new.drop([\"musteri\",\"date\",\"tarih\",\"target\",\"kidem_suresi\",\"yas_grubu\"],axis=1)\n\n#\"grup_aylik_mean\"\nX_test=test_new.drop([\"musteri\",\"date\",\"tarih\",\"target\",\"kidem_suresi\",\"yas_grubu\"],axis=1)\ny_train=train_new[\"target\"]\nX_train.shape,X_test.shape,y_train.shape","ff342b4c":"ratio_enc =PRatioEncoder(\n    variables=['meslek_grubu',\"egitim\",\"is_durumu\"])\n","5c2b8c93":"ratio_enc.fit(X_train, y_train)\nX_train = ratio_enc.transform(X_train)\nX_test = ratio_enc.transform(X_test)","60b9c3e7":"X_train_encoded=pd.get_dummies(X_train)\nX_test_encoded=pd.get_dummies(X_test)\nX_train_encoded.shape,X_test_encoded.shape","a8fae3dd":"scaler=RobustScaler()\nX_train_scaled=scaler.fit_transform(X_train_encoded)\nX_test_scaled=scaler.transform(X_test_encoded)","6d16c84d":"smt = RandomOverSampler(sampling_strategy=\"minority\") #(sampling_strategy=\"minority\")\nX_train_scaled, y_train = smt.fit_sample(X_train_scaled, y_train)\ny_train = y_train.astype(int)","c9cf0b1a":"X_train_scaled.shape, y_train.shape","1aff4334":"np.isnan(X_train_scaled).any()","f84eb723":"sns.countplot(y_train)","1f800263":"from tensorflow.keras.layers import Input, Dense, BatchNormalization, Dropout, Concatenate, Lambda, GaussianNoise, Activation\nfrom tensorflow.keras.models import Model, Sequential\nfrom tensorflow.keras.losses import BinaryCrossentropy\nfrom tensorflow.keras.optimizers import Adam, Adagrad\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.layers.experimental.preprocessing import Normalization\nfrom tensorflow.keras.metrics import AUC\nimport tensorflow as tf\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import GroupKFold\n\nfrom tqdm import tqdm\nfrom random import choices\nimport random\n\n\nimport kerastuner as kt","d9ac17f3":"from tensorflow.keras.metrics import TruePositives, FalsePositives, TrueNegatives, FalseNegatives, BinaryAccuracy, Precision, Recall, AUC\nMETRICS = [\n      TruePositives(name='tp'),\n      FalsePositives(name='fp'),\n      TrueNegatives(name='tn'),\n      FalseNegatives(name='fn'), \n      BinaryAccuracy(name='accuracy'),\n      Precision(name='precision'),\n      Recall(name='recall'),\n      AUC(name='auc'),\n]\n","2bcd44ff":"from tensorflow.keras.optimizers import Adam\noptimizer = lambda x: Adam(x)","261d5834":"import keras \n\ndef create_e_model():\n    model = Sequential([\n        Input(X_train_scaled.shape[-1],),\n        BatchNormalization(),\n        GaussianNoise(0.3353),\n        BatchNormalization(),\n        \n        Dense(73, activation=\"relu\"),\n        Dropout(0.17013),\n        BatchNormalization(),\n        \n        Dense(57, activation=\"relu\"),\n        Dropout(0.36313),\n        BatchNormalization(),\n                \n        Dense(110, activation=\"relu\"),\n        Dropout(0.16105),\n        BatchNormalization(),\n        \n        Dense(48, activation=\"relu\"),\n        Dropout(0.13959),\n        BatchNormalization(),\n        \n                \n        Dense(60, activation=\"relu\"),\n        Dropout(0.33544),\n        BatchNormalization(),\n        \n                \n        Dense(445, activation=\"relu\"),\n        Dropout(0.1),\n        BatchNormalization(),\n        \n                \n        Dense(64, activation=\"relu\"),\n        Dropout(0.2),\n        BatchNormalization(),\n        \n                \n        Dense(16, activation=\"relu\"),\n        Dropout(0.1),\n        BatchNormalization(),\n        \n                \n        Dense(16, activation=\"relu\"),\n        Dropout(0.1),\n        BatchNormalization(),\n        \n        Dense(1, activation='sigmoid')\n        \n    ])\n    model.compile(\n      optimizer=keras.optimizers.Adam(lr=1e-3),\n      loss=keras.losses.BinaryCrossentropy(label_smoothing = 0.5),\n      metrics=\"AUC\")\n    return model","26f4b8ec":"model = create_e_model()","c36b3cd8":"model.summary()","33326529":"history = model.fit(X_train_scaled,y_train, epochs=10)","dd4c5287":"a = model.predict(X_test_scaled)","f7e829f0":"\nsubmission.target = a\n        ","1fe47d14":"submission.head()","f3c2a547":"submission_csv=submission.to_csv(\"submission.csv\",index=False)\nfrom IPython.display import FileLink\nFileLink(r'submission.csv')","66de4d07":"import keras\n\ntuner = kt.tuners.RandomSearch(\n    make_model,\n    objective=\"loss\",\n    max_trials=100,\n    overwrite=True)\n\ncallbacks=[keras.callbacks.EarlyStopping(monitor='AUC', mode='max', patience=3, verbose = 1)]\n\n\n\ntuner.search(X_train_scaled,y_train, callbacks=callbacks, epochs=10)","65588618":"auto encoder","0811a83d":"best_model.summary()","7417211b":"best_hp = tuner.get_best_hyperparameters()[0]\nmodel = make_model(best_hp)\nmodel.summary()","1fdaecbe":"bunu yapt\u0131g\u0131m\u0131zda lb: 0.68 civar\u0131 fakat bu olmad\u0131\u011f\u0131nda yani thresholdu kendiniz se\u00e7medi\u011finizde lb:0.76 oluyor :D\n        \n        for i in range(len(submission)):\n\n            if a[i] > 0.5:\n\n                submission.target[i] = 1\n","453ac4ba":"best_model = tuner.get_best_models()[0]","f63bad0c":"help(tuner.get_best_hyperparameters)","5f2d3e1e":"tuner.get_best_hyperparam6eters()[0]","490fcb9c":"def make_model(hp,input_dim=X_train_scaled.shape[-1],output_dim=1):\n    i = Input(input_dim)\n    x = BatchNormalization()(i)\n    x = GaussianNoise(hp.Float('noise',0.1,0.5,default=0.1))(x)\n    \n    encoding_units = []\n    encoding_dp = []\n    \n    for j in range(hp.Int('num_encoding_layers',1,3)):\n        u = hp.Int(f'encoding_units_{j}',64,512)\n        encoding_units.append(u)\n        x = BatchNormalization()(x)\n        x = Dense(u,activation='relu')(x)\n        dp = hp.Float(f'encoding_dp_{j}',0.1,0.5)\n        encoding_dp.append(dp)\n        x = Dropout(dp)(x)\n    \n    for u,dp in zip(encoding_units[::-1],encoding_dp[::-1]):\n        x = BatchNormalization()(x)\n        x = Dense(u,activation='relu')(x)\n        x = Dropout(dp)(x)\n        \n    decoded = Dense(input_dim,activation='linear',name='decoded')(x)\n    \n    for j in range(hp.Int('num_bottleneck_layers',1,3)):\n        x = BatchNormalization()(x)\n        x = Dense(hp.Int(f'bottleneck_units_{j}',16,64))(x)\n        x = Lambda(tf.keras.activations.swish)(x)\n        x = Dropout(hp.Float(f'bottleneck_dp_{j}',0.1,0.5))(x)\n    \n    x = Dense(output_dim,activation='sigmoid',name='label_output')(x)\n    \n    autoencoder = Model(inputs=i,outputs=[decoded,x])\n    \n    autoencoder.compile(optimizer=optimizer(1e-3),loss=('binary_crossentropy'))\n    \n    return autoencoder","7a95fe66":"# Model"}}