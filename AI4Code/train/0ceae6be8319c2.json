{"cell_type":{"a5edd874":"code","79e62a6b":"code","6ab09901":"code","bf653190":"code","2be78b03":"code","d0bfc198":"code","766ff0de":"code","b55adf1b":"code","563cc4bd":"code","05f7316e":"code","3de3c51f":"code","868e9c4c":"code","7799a7ca":"code","0817c67f":"code","098f79fd":"code","fc9a18bf":"code","ea297aff":"code","a9f55414":"code","68f21738":"markdown","67ebf3c8":"markdown","b17f357c":"markdown","c9f36191":"markdown","b5c0f1a8":"markdown","10816798":"markdown","e5cc0c16":"markdown","898cfb0d":"markdown"},"source":{"a5edd874":"import numpy as np\nimport pandas as pd\n\nimport re\nfrom nltk.corpus import stopwords\n\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\n\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","79e62a6b":"data = pd.read_csv('..\/input\/trip-advisor-hotel-reviews\/tripadvisor_hotel_reviews.csv')","6ab09901":"data","bf653190":"data.info()","2be78b03":"stop_words = stopwords.words('english')","d0bfc198":"def process_text(text):\n    text = re.sub(r'\\d+', ' ', text)\n    text = text.split()\n    text = \" \".join([word for word in text if word.lower().strip() not in stop_words])\n    return text","766ff0de":"reviews = data['Review'].apply(process_text)","b55adf1b":"num_words = 10000\n\ntokenizer = Tokenizer(num_words=num_words)\ntokenizer.fit_on_texts(reviews)\n\nsequences = tokenizer.texts_to_sequences(reviews)","563cc4bd":"max_seq_length = np.max(list(map(lambda x: len(x), sequences)))\n\nprint(\"Max sequence length:\", max_seq_length)","05f7316e":"inputs = pad_sequences(sequences, maxlen=max_seq_length, padding='post')","3de3c51f":"inputs","868e9c4c":"data['Rating'].value_counts()","7799a7ca":"labels = np.array(data['Rating'].apply(lambda x: 1 if x == 5 else 0))","0817c67f":"labels","098f79fd":"train_inputs, test_inputs, train_labels, test_labels = train_test_split(inputs, labels, train_size=0.7, random_state=100)","fc9a18bf":"embedding_dim = 128\n\ninputs = tf.keras.Input(shape=(max_seq_length,))\n\nembedding = tf.keras.layers.Embedding(\n    input_dim=num_words,\n    output_dim=embedding_dim,\n    input_length=max_seq_length\n)(inputs)\n\ngru = tf.keras.layers.Bidirectional(\n    tf.keras.layers.GRU(128, return_sequences=True)\n)(embedding)\n\nflatten = tf.keras.layers.Flatten()(gru)\n\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(flatten)\n\n\nmodel = tf.keras.Model(inputs, outputs)\n\ntf.keras.utils.plot_model(model)","ea297aff":"model.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\nhistory = model.fit(\n    train_inputs,\n    train_labels,\n    validation_split=0.2,\n    batch_size=32,\n    epochs=20,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_accuracy',\n            patience=2,\n            restore_best_weights=True\n        )\n    ]\n)","a9f55414":"model.evaluate(test_inputs, test_labels)","68f21738":"# Results","67ebf3c8":"# Encoding Labels","b17f357c":"# Modeling\/Training","c9f36191":"# Processing Text","b5c0f1a8":"# Splitting","10816798":"# Task for Today  \n\n***\n\n## Hotel Rating Prediction  \n\nGiven *TripAdvisor hotel reviews*, let's try to predict the **rating** associated with a given review.\n\nWe will use a TensorFlow RNN to make our predictions.","e5cc0c16":"# Getting Started","898cfb0d":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/A2ao3wysAFk"}}