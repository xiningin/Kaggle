{"cell_type":{"bc8bb4c1":"code","570fd710":"code","5cb6091c":"code","28033a62":"code","ce1b67d0":"code","9a7c9839":"code","ae0aad38":"code","4730f55a":"code","3d58b9db":"code","bd6e18ad":"code","1e6803d0":"code","b6d829d9":"code","f2486401":"code","def32a3c":"code","24f569a0":"code","fa114e2c":"code","db44091a":"code","c5895c74":"code","c0b1e092":"code","9813a5a9":"code","0128835e":"code","8a111b74":"code","46046a6d":"markdown","b6540d15":"markdown","fb7a381b":"markdown","8eea7fb9":"markdown"},"source":{"bc8bb4c1":"%pylab inline\nimport pandas as pd","570fd710":"train_data = pd.read_csv(\"..\/input\/datamining2020\/train_data.csv\", encoding=\"utf8\")","5cb6091c":"train_data.head()","28033a62":"train_data.author.unique().shape","ce1b67d0":"target = pd.read_csv(\"..\/input\/datamining2020\/train_target.csv\")","9a7c9839":"target.head()","ae0aad38":"subreddits = train_data.subreddit.unique()\nsubreddits_map = pd.Series(index=subreddits, data=arange(subreddits.shape[0]))","4730f55a":"from scipy import sparse","3d58b9db":"def extract_features(group):\n    group_subreddits = group['subreddit'].values\n    idxs = subreddits_map[group_subreddits].values\n    v = sparse.dok_matrix((1, subreddits.shape[0]))\n    for idx in idxs:\n        if not np.isnan(idx):\n            v[0, idx] = 1\n    return v.tocsr()\n\nextract_features(train_data[train_data.author=='RedThunder90'])","bd6e18ad":"features_dict = {}\n\nfor author, group in train_data.groupby('author'):\n    features_dict[author] = extract_features(group)","1e6803d0":"X = sparse.vstack([features_dict[author] for author in target.author])\nX","b6d829d9":"y = target.gender","f2486401":"def extract_text(group):\n    group_text = group['body'].values\n    return \" \".join(group_text)\n\nextract_text(train_data[train_data.author=='RedThunder90'])","def32a3c":"text_dict = {}\n\nfor author, group in train_data.groupby('author'):\n    text_dict[author] = extract_text(group)","24f569a0":"author_text = [text_dict[author] for author in target.author]\nauthor_text[0][:100]","fa114e2c":"# YOUR CODE HERE\n\nclass Model():\n    def predict_proba(self, X):\n        return np.zeros((X.shape[0], 2))\n    \nmodel = Model()","db44091a":"test_data = pd.read_csv(\"..\/input\/datamining2020\/test_data.csv\", encoding=\"utf8\")","c5895c74":"features_dict = {}\n\nfor author, group in test_data.groupby('author'):\n    features_dict[author] = extract_features(group)","c0b1e092":"X_test = sparse.vstack([features_dict[author] for author in test_data.author.unique()])\nX_test","9813a5a9":"y_pred = model.predict_proba(X_test)[:,1]","0128835e":"solution = pd.DataFrame({\"author\":test_data.author.unique(), \"gender\":y_pred})\nsolution.head()","8a111b74":"# solution.to_csv(\"solution.csv\", index=False)","46046a6d":"# Model Selection","b6540d15":"# Prepare the solution","fb7a381b":"# Feature Extraction","8eea7fb9":"# Load the train data"}}