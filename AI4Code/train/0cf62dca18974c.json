{"cell_type":{"dd323ccd":"code","9661fb43":"code","cd729025":"code","adf66fcf":"markdown","0f0b78d2":"markdown"},"source":{"dd323ccd":"#detailed documentation #\n#https:\/\/bobrupakroy.medium.com\/auto-clustering-32c28b3946f1\n\n# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Importing the dataset\ndataset = pd.read_csv('..\/input\/crime-data\/crime_data.csv')\n#drop the missing values\ndataset = dataset.dropna()\n#droping the pre-existing cluster values\nX = dataset.iloc[:,2:].values\n#Normalization\nfrom sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX=sc_X.fit_transform(X)\n#spliting is not required(optional for later validation purpose)\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(X, test_size = 0.2, random_state = 0)\n#Using the elbow method to find the optimal number of clusters\nfrom sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 0)\n    kmeans.fit(X_train)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","9661fb43":"#pip install autoelbow\nfrom autoelbow_rupakbob import autoelbow\nn =autoelbow.auto_elbow_search(X)\nprint(\"optimized number of clusters:\",n)","cd729025":"# Fitting K-Means to the dataset\nkmeans_model = KMeans(n_clusters =n, init = 'k-means++', random_state = 0)\n#Predicting with new data\ny_kmeans = kmeans_model.fit_predict(X_train)\ny_kmeans1 = kmeans_model.fit_predict(X_test)\n#We can also merge the results: clusters for later analysis\ndf = pd.DataFrame( X_train, y_kmeans)\n#renaming the index column\ndf.index.name = \"cluster\"\ndf","adf66fcf":"And we have n = 4 that exactly matches with the original number of clusters!\nFor the rest, we can continue the same","0f0b78d2":"So according to our original dataset and the elbow method, the optimal number of clusters is 4. now let's see if we can get the same via AutoElbow package that i have put together for you."}}