{"cell_type":{"2fcc200e":"code","10f5fa01":"code","24f563cf":"code","caf011af":"code","c1ba8149":"code","c0bd298d":"code","287007de":"code","a65c8740":"code","5fcb86c0":"code","dec040a7":"code","fa5bcf09":"code","4f3d8ce8":"code","2fe93f12":"code","50dc56b1":"code","eceedd4d":"code","813cc523":"code","30a1d2cf":"code","d72dd096":"markdown","ec5058db":"markdown","a231425d":"markdown","1f04c35e":"markdown","f5c041e6":"markdown","8a578fa2":"markdown","5ac14178":"markdown","c2350f0f":"markdown","96b88f1e":"markdown","4f1bb5a0":"markdown","3ed3e1b6":"markdown","a367992f":"markdown","50bbdde2":"markdown"},"source":{"2fcc200e":"import numpy as np \nimport pandas as pd\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt","10f5fa01":"my_data=pd.read_csv(\"..\/input\/drug200.csv\")\nmy_data[0:5]","24f563cf":"my_data.shape","caf011af":"#Feature Matrix:\nX=my_data[[\"Age\",\"Sex\",\"BP\",\"Cholesterol\",\"Na_to_K\"]].values\nX[0:5]","c1ba8149":"from sklearn import preprocessing\nle_sex = preprocessing.LabelEncoder()\nle_sex.fit(['F','M'])\nX[:,1] = le_sex.transform(X[:,1]) \n\n\nle_BP = preprocessing.LabelEncoder()\nle_BP.fit([ 'LOW', 'NORMAL', 'HIGH'])\nX[:,2] = le_BP.transform(X[:,2])\n\n\nle_Chol = preprocessing.LabelEncoder()\nle_Chol.fit([ 'NORMAL', 'HIGH'])\nX[:,3] = le_Chol.transform(X[:,3]) \n\nX[0:5]","c0bd298d":"#Target Variable:\ny=my_data[\"Drug\"]\ny[0:5]","287007de":"from sklearn.model_selection import train_test_split","a65c8740":"X_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size=0.3, random_state=3)","5fcb86c0":"print(\"Shape of X_trainset: \",X_trainset.shape)\nprint(\"Shape of y_trainset: \",y_trainset.shape)","dec040a7":"print(\"Shape of X_testset: \",X_testset.shape)\nprint(\"Shape of y_testset: \",y_testset.shape)","fa5bcf09":"drugTree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4)\ndrugTree # it shows the default parameters","4f3d8ce8":"#We will fit the data with the training feature matrix X_trainset and training response vector y_trainset\ndrugTree.fit(X_trainset,y_trainset)","2fe93f12":"predTree=drugTree.predict(X_testset)","50dc56b1":"print(\"Predictions : \",predTree[0:5])\nprint(\"Actual Values : \\n\",y_testset[0:5])","eceedd4d":"print(\"DecisionTrees's Accuracy: \", metrics.accuracy_score(y_testset, predTree))","813cc523":"from sklearn.externals.six import StringIO\n#import pydotplus\nimport matplotlib.image as mpimg\nfrom sklearn import tree\n%matplotlib inline ","30a1d2cf":"#with open(\"drugTree.dot\", \"w\") as f:\n    #f = tree.export_graphviz(, out_file=f)\nimport graphviz\n\ndata = export_graphviz(drugTree,out_file=None,filled=True,rounded=True,special_characters=True)\ngraph = graphviz.Source(data)\ngraph","d72dd096":"**Setting up the Decision Tree**","ec5058db":"**Visualization**\n\nLets visualize the tree","a231425d":"**N.B:**\n\nWe have catigorical variables in our features like \"Sex\" and \"BP\"\nUnfortunately,Sklearn Decision tree don't handle with catigorical variables so we have to convert them into numerical  variables.","1f04c35e":"**Modeling**\n\nWe will first create an instance of the DecisionTreeClassifier called drugTree.","f5c041e6":"**Pre-processing**","8a578fa2":" **We declare the following variables: **\n ","5ac14178":"**WE ARE GOOD**","c2350f0f":"**Loading Data**","96b88f1e":"**EVALUATION**","4f1bb5a0":"**Prediction**\n\nLet's make some predictions on the testing dataset and store it into a variable called predTree.","3ed3e1b6":"**About dataset**\n\nWe have collected data about a set of patients, all of whom suffered from the same illness. During their course of treatment, each patient responded to one of 5 medications, Drug A, Drug B, Drug c, Drug x and y.\n\n**GOAL:** \nBuild a model to find out which drug might be appropriate for a future patient with the same illness. The feature sets of this dataset are Age, Sex, Blood Pressure, and Cholesterol of patients, and the target is the drug that each patient responded to.\n","a367992f":"We will be using train\/test split on our decision tree.","50bbdde2":"**Size of the data**"}}