{"cell_type":{"44d682f1":"code","29bddfce":"code","5dc02636":"code","df0f0661":"code","815fae86":"code","1132a16b":"code","00c7962e":"code","b560bb30":"code","dc0e4bf7":"code","3e2c2753":"code","7de1ea8d":"code","92411cdc":"code","1fefdd93":"code","0f02f2be":"code","19367e3a":"code","303625a7":"code","67fb84b8":"code","7dcab54b":"code","36346519":"code","5ceba0c1":"code","ab2cb8b2":"code","d248092f":"code","0293e5cd":"code","334961fa":"code","412cb390":"code","c7119711":"code","86b31a8e":"code","33adb05b":"code","24a5a88f":"code","17da3702":"code","fc3e02ae":"code","cf81cda9":"code","578cdb2a":"code","e8a2e579":"code","f2243f53":"code","1cf1b7f0":"code","2dca246b":"code","b76bb335":"code","c933c119":"code","3013c0fd":"markdown","7d33e575":"markdown","2d1cdbf4":"markdown","2fca73ce":"markdown","4e4b20b4":"markdown","42bbc8b0":"markdown","5506b2d9":"markdown","e88c1063":"markdown","672a27fa":"markdown","0cfc6724":"markdown","8f1aef6d":"markdown","f0464e72":"markdown","2834896a":"markdown","42db690c":"markdown","206e5d34":"markdown","85650929":"markdown","8dafcec8":"markdown","90b915f3":"markdown","d7ae1219":"markdown","285a5d93":"markdown","ef937a75":"markdown","62625ae7":"markdown","9440c5b6":"markdown","e393e9f3":"markdown","d4b99ddf":"markdown","f29dfc28":"markdown","3d22125d":"markdown","323ea80a":"markdown","de2e4f2b":"markdown","f91ff110":"markdown","f14f50fd":"markdown","314d18e3":"markdown","2f8d771d":"markdown","6deed74e":"markdown","f355e3da":"markdown","d9b5f47b":"markdown","d2850c8a":"markdown","7b0856e7":"markdown","fb06fbbb":"markdown","b3641fb1":"markdown","cd4a6fdf":"markdown","b6bd74df":"markdown"},"source":{"44d682f1":"import numpy as np, pandas as pd, matplotlib.pyplot as plt, seaborn as sns\nimport time, os, warnings\ncolor = sns.color_palette()\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\n\ninspections = pd.read_csv(\"..\/input\/restaurant-and-market-health-inspections.csv\")\nviolations = pd.read_csv(\"..\/input\/restaurant-and-market-health-violations.csv\")","29bddfce":"inspections.head()","5dc02636":"inspections.describe()","df0f0661":"inspections.info()","815fae86":"fig, ax  = plt.subplots(2, 1, figsize = (10, 8))\nsns.boxplot(inspections[\"score\"], ax = ax[0])\nax[0].set_title(\"Box plot of Score\", fontsize = 14)\nax[0].set_xlabel(\"\")\nsns.distplot(inspections[\"score\"], kde = True, bins = 20, ax = ax[1])\nax[1].set_xlabel(\"score\")\nax[1].set_title(\"Distribution of Score\", fontsize = 14)\nplt.show()","1132a16b":"inspections[\"activity_date\"] = pd.to_datetime(inspections[\"activity_date\"])\n\ninspect_date = pd.DataFrame({\"date\":inspections[\"activity_date\"].value_counts().index, \n                             \"values\":inspections[\"activity_date\"].value_counts().values}).sort_values(by = \"date\")\nplt.figure(figsize = (10, 5))\nplt.plot(inspect_date[\"date\"], inspect_date[\"values\"])\nplt.title(\"Inspections Overview By Date\", fontsize = 14)\nplt.show()","00c7962e":"inspections[\"year\"] = inspections[\"activity_date\"].dt.year\ninspections[\"month\"] = inspections[\"activity_date\"].dt.month\ninspections[\"day\"] = inspections[\"activity_date\"].dt.day","b560bb30":"fig, ax = plt.subplots(3, 1, figsize = (10, 15))\n\nfor idx, time in enumerate([\"year\", \"month\", \"day\"]):\n    temp = inspections[time].value_counts()\n    sns.barplot(temp.index, temp.values, order = temp.index, ax = ax[idx])\n    ax[idx].set_xlabel(time)\n    ax[idx].set_ylabel(\"frequency\")\n    ax[idx].set_title(\"Inspection {} Frequency\".format(time), fontsize = 14)\n    rects = ax[idx].patches\n    labels = temp.values\n    for rect, label in zip(rects, labels):\n        ax[idx].text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n                     label, ha = \"center\", va = \"bottom\")\nplt.show()","dc0e4bf7":"inspections[\"grade\"].unique()","3e2c2753":"inspections.loc[inspections[\"grade\"] == ' ', \"grade\"] = \"Unknown\"","7de1ea8d":"inspections[\"grade\"].unique()","92411cdc":"plt.figure(figsize = (10, 5))\ngrade = inspections[\"grade\"].value_counts()\nax = sns.barplot(grade.index, grade.values)\nplt.xlabel(\"grade\")\nplt.ylabel(\"frequency\")\nplt.title(\"Inspection Grade Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = grade.values\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","1fefdd93":"inspections[inspections[\"grade\"] == \"Unknown\"]","0f02f2be":"inspections.loc[inspections[\"grade\"] == \"Unknown\", \"grade\"] = \"C\"","19367e3a":"plt.figure(figsize = (10, 5))\ninspections[\"service_code\"].astype(str)\nservice_code = inspections[\"service_code\"].value_counts()\nax = sns.barplot(service_code.index, service_code.values)\nplt.xlabel(\"service code\")\nplt.ylabel(\"frequency\")\nplt.title(\"Top 20 Service Code Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = service_code.values\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","303625a7":"inspections[\"service_description\"].unique()","67fb84b8":"plt.figure(figsize = (10, 5))\nservice_description = inspections[\"service_description\"].value_counts()\nax = sns.barplot(service_description.index, service_description.values)\nplt.xlabel(\"service description\")\nplt.ylabel(\"frequency\")\nplt.title(\"Service Description Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = service_description.values\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","7dcab54b":"second_inspect = inspections[inspections[\"service_description\"] == \"OWNER INITIATED ROUTINE INSPECT.\"]","36346519":"plt.figure(figsize = (10, 5))\nsecond_grade = second_inspect[\"grade\"].value_counts()\nax = sns.barplot(second_grade.index, second_grade.values)\nplt.xlabel(\"grade\")\nplt.ylabel(\"frequency\")\nplt.title(\"Second Inspection Grade Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = second_grade.values\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","5ceba0c1":"len(inspections[\"facility_zip\"].unique())","ab2cb8b2":"inspections[\"facility_zip_pri\"] = inspections[\"facility_zip\"].apply(lambda x:x[:5])\ninspections[\"facility_zip_pri\"].unique()","d248092f":"plt.figure(figsize = (10, 5))\nfacility_zip = inspections[\"facility_zip_pri\"].value_counts()\nax = sns.barplot(facility_zip.index[:20], facility_zip.values[:20], order = facility_zip.index[:20])\nplt.xlabel(\"facility zip\")\nplt.xticks(rotation = 90)\nplt.ylabel(\"frequency\")\nplt.title(\"First 20 Facility Zip Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = facility_zip.values[:20]\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","0293e5cd":"inspections[\"facility_name\"].unique()","334961fa":"len(inspections[\"facility_name\"].unique())","412cb390":"plt.figure(figsize = (10, 5))\nfacility_name = inspections[\"facility_name\"].value_counts()\nax = sns.barplot(facility_name.index[:20], facility_name.values[:20], order = facility_name.index[:20])\nplt.xlabel(\"facility name\")\nplt.xticks(rotation = 90)\nplt.ylabel(\"frequency\")\nplt.title(\"Top 20 Facility Name Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = facility_name.values[:20]\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","c7119711":"inspections[\"program_name\"].unique()","86b31a8e":"len(inspections[\"program_name\"].unique())","33adb05b":"plt.figure(figsize = (10, 5))\nprogram_name = inspections[\"program_name\"].value_counts()\nax = sns.barplot(program_name.index[:20], program_name.values[:20], order = program_name.index[:20])\nplt.xlabel(\"program name\")\nplt.xticks(rotation = 90)\nplt.ylabel(\"frequency\")\nplt.title(\"Top 20 Program Name Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = program_name.values[:20]\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","24a5a88f":"inspections[\"program_status\"].unique()","17da3702":"plt.figure(figsize = (10, 5))\nprogram_status = inspections[\"program_status\"].value_counts()\nax = sns.barplot(program_status.index, program_status.values)\nplt.xlabel(\"program status\")\nplt.ylabel(\"frequency\")\nplt.title(\"Program Status Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = program_status.values[:15]\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","fc3e02ae":"plt.figure(figsize = (10, 5))\npe_description = inspections[\"pe_description\"].value_counts()\nax = sns.barplot(pe_description.index, pe_description.values, order = pe_description.index)\nplt.xlabel(\"pe description\")\nplt.xticks(rotation = 90)\nplt.ylabel(\"frequency\")\nplt.title(\"Pe Description Frequency\", fontsize = 14)\nrects = ax.patches\nlabels = pe_description.values\nfor rect, label in zip(rects, labels):\n    ax.text(rect.get_x() + rect.get_width()\/2, rect.get_height() + 5,\n           label, ha = \"center\", va = \"bottom\")\nplt.show()","cf81cda9":"plt.figure(figsize = (10, 5))\nsns.countplot(x = \"year\", hue = \"grade\", data = inspections)\nplt.xlabel(\"year\")\nplt.ylabel(\"frequency\")\nplt.title(\"Inspections Grade by Year\", fontsize = 14)\nplt.show()","578cdb2a":"years = sorted(inspections[\"year\"].unique())","e8a2e579":"fig, ax = plt.subplots(2, 2, figsize = (15, 10))\n\nfor i, year in enumerate(years):\n    temp = inspections[inspections[\"year\"] == year]\n    sns.countplot(x = \"month\", hue = \"grade\", data = temp, ax = ax[int(i\/2)][i%2])\n    ax[int(i\/2)][i%2].set_xlabel(\"month\")\n    ax[int(i\/2)][i%2].set_ylabel(\"frequency\")\n    ax[int(i\/2)][i%2].set_title(\"Inspections Grade per Month, {}\".format(year), fontsize = 14)\nplt.show()","f2243f53":"fig, ax = plt.subplots(1, 2, figsize = (15, 5))\n\nfor i, year in enumerate(years[:2]):\n    temp = inspections[inspections[\"year\"] == year]\n    sns.countplot(x = \"pe_description\", hue = \"grade\", data = temp, ax = ax[i])\n    ax[i].set_xlabel(\"pe description\")\n    ax[i].set_ylabel(\"frequency\")\n    ax[i].set_title(\"Inspections Grade by Pe description, {}\".format(year), fontsize = 14)\n\nfor ax in fig.axes:\n    plt.sca(ax)\n    plt.xticks(rotation = 90)\n    \nplt.show()","1cf1b7f0":"fig, ax = plt.subplots(1, 2, figsize = (15, 5))\n\nfor i, year in enumerate(years[2:]):\n    temp = inspections[inspections[\"year\"] == year]\n    sns.countplot(x = \"pe_description\", hue = \"grade\", data = temp, ax = ax[i])\n    ax[i].set_xlabel(\"pe description\")\n    ax[i].set_ylabel(\"frequency\")\n    ax[i].set_title(\"Inspections Grade by Pe description, {}\".format(year), fontsize = 14)\n\nfor ax in fig.axes:\n    plt.sca(ax)\n    plt.xticks(rotation = 90)\n    \nplt.show()","2dca246b":"fig, ax = plt.subplots(2, 2, figsize = (15, 18))\n\nfor i, year in enumerate(years):\n    temp = inspections[inspections[\"year\"] == year]\n    sns.countplot(x = \"program_status\", hue = \"grade\", data = temp, ax = ax[int(i\/2)][i%2])\n    ax[int(i\/2)][i%2].set_xlabel(\"program status\")\n    ax[int(i\/2)][i%2].set_title(\"Inspections Program Status in {}\".format(year), fontsize = 14)\nplt.show()","b76bb335":"fig, ax = plt.subplots(2, 2, figsize = (15, 18))\n\nfor i, year in enumerate(years):\n    temp = inspections[inspections[\"year\"] == year]\n    temp = temp.groupby([\"activity_date\", \"grade\"]).score.mean()\n    temp.unstack().plot(stacked = False, colormap = plt.cm.Set3,\n                        grid = False, legend = True, ax = ax[int(i\/2)][i%2])\n    ax[int(i\/2)][i%2].set_xlabel(\"activity date\")\n    ax[int(i\/2)][i%2].set_title(\"Inspections Average Grade in {}\".format(year), fontsize = 14)\nplt.show()","c933c119":"fig, ax = plt.subplots(2, 2, figsize = (15, 10))\n\nfor i, year in enumerate(years):\n    temp = inspections[inspections[\"year\"] == year]\n    sns.countplot(x = \"service_description\", hue = \"grade\", data = temp, ax = ax[int(i\/2)][i%2])\n    ax[int(i\/2)][i%2].set_xlabel(\"service description\")\n    ax[int(i\/2)][i%2].set_ylabel(\"frequency\")\n    ax[int(i\/2)][i%2].set_title(\"Inspections Service Description in {}\".format(year), fontsize = 14)\nplt.show()","3013c0fd":"We found:\n\n* The inspections started in July, 2015.\n* July has less inspections in 2015, 2016,  and 2017","7d33e575":"We found:\n\n* In 2015, not many restaurants\/markets participated in inspections\n* In 2017, there were less participants than in 2016. Less owner received grade A. \n  * A possibility is that some restaurants\/markets don't require inspection each year","2d1cdbf4":"### Grade","2fca73ce":"### Program Status","4e4b20b4":"We found:\n* Program name is the name of a restaurant or a market.\n* And there are 12447 stores participated in the inspection. \n* Some names are diverse, for example, subway and subway sandwiches, McDonald's and Mc Donalds (need to clean).","42bbc8b0":"At the first glance, most restaurants and markets are located in 90012, 90045, and 90028","5506b2d9":"Without loss of generality, this restaurant has a grade C since it scored 65. ","e88c1063":"We found:\n\n* 1016 has the most Inspections\n* Inspections schedule in March more often\n* Inspections schedule in day 7, 13, 20, and 6 of each month","672a27fa":"### Mean Grade Per Day","0cfc6724":"### Pe-Description","8f1aef6d":"## Conclusion:","f0464e72":"### Program Name","2834896a":"### Service Code","42db690c":"### Service Description vs Grade","206e5d34":"Since we don't know what grade these restaurants or markets received in the first inspection, we assume some of them did get a better grade in the second round.","85650929":"We found:\n\n* Facility names are diverse, some name contain its store name and its store number\/location","8dafcec8":"Ideas:\n* Classify zipcode by district \n* Apply GeoPy to find long and lat by address","90b915f3":"## General Info of Inspections","d7ae1219":"### Facility Name","285a5d93":"### Service Description","ef937a75":"Restaurants (0-30) seats high risk receive A grade.","62625ae7":"About $99$% of restaurant and merket owners statisfied the routine inspection. About $1$% don't, and they rescheduled a second inspection in order to get a better score.","9440c5b6":"Many zip code contain their local zip code, which make the analysis more complicated, so we decide to use their primary zip code instead.  ","e393e9f3":"### Score","d4b99ddf":"We found small restaurants are difficult to maintain clean.","f29dfc28":"### Program Status vs Grade","3d22125d":"This dataset is very clean, just program_name misses 132 values.","323ea80a":"At the first glance, there are about $60$% of restaurants and markets received score 90 or above.","de2e4f2b":"### Activity Date","f91ff110":"### Activity Date vs Grade","f14f50fd":"It seems some missing values are filled with empty strings. This implies that the dataset aren't clean actually and we will fill those missing value with 'Unknown'.","314d18e3":"Owners who recheculed a second inspection did get a grade A in most cases.","2f8d771d":"There is only one restaurant\/market with an unknown grade! Let's see who it is.","6deed74e":"There are 6832 programs inactive, this tells us these restaruants or markets don't have a inspection in the activity date.","f355e3da":"#### Service Description: Owner Initiated Routine Inspect","d9b5f47b":"## Regression Analysis","d2850c8a":"### Facility Zip Code","7b0856e7":"# Inspections","fb06fbbb":"### Pe Descrition vs Grade","b3641fb1":"### Facility Zip vs Grade","cd4a6fdf":"Without loss of generality, inspectors go to the same restaurants or markets each year. Below, we will start analyzing the grade against with different features in each year.","b6bd74df":"## Overview of Features"}}