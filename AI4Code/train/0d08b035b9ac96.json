{"cell_type":{"273048f4":"code","6a1d36fe":"code","ca99fa7a":"code","6f489292":"code","80780d8b":"code","4e968b39":"code","e4ddac87":"code","5ac83b67":"code","5c0b0386":"code","ea249522":"code","7029f418":"code","78aef8b1":"code","1f9f8076":"code","a3778a13":"code","da4b24b1":"code","1a6d0ed8":"code","30d1d1bc":"code","23cdd83c":"code","2d648eaa":"code","584da9f0":"code","1ba042f4":"code","2e0bbcf6":"code","83a11f37":"code","fb50de7c":"code","80ef8be3":"markdown","f8ed9b8d":"markdown","6435e65f":"markdown","b1773769":"markdown","92479d82":"markdown","349513f2":"markdown"},"source":{"273048f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a1d36fe":"import warnings\nwarnings.filterwarnings('ignore')\n\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","ca99fa7a":"df = pd.read_csv(\"\/kaggle\/input\/pakistans-courier-companies-dataset\/courier_dataset.csv\")","6f489292":"df.head()","80780d8b":"df.shape","4e968b39":"df.isnull().sum()","e4ddac87":"df1 = df.dropna(thresh=0.90*len(df), axis=1)\n# Droping all those columns having more than 5 % missing values ","5ac83b67":"df1","5c0b0386":"df1.isnull().sum()","ea249522":"df1.dtypes","7029f418":"df1['Delivery Time'].value_counts()","78aef8b1":"def change_type(word):\n    return int(word.split(sep = \" \")[0])","1f9f8076":"df1['Delivery Time'] = df1['Delivery Time'].apply(change_type)","a3778a13":"df1['Delivery Time'].describe()","da4b24b1":"sns.boxplot(x=df1['Delivery Time'], data=df1)","1a6d0ed8":"df1['Delivery Time'].value_counts().plot(kind='bar', figsize=(12,10))","30d1d1bc":"df1['Status'].describe()","23cdd83c":"df1['Status'].value_counts().plot(kind='bar', figsize=(6,4))","2d648eaa":"df1['Company'] = df1['Company'].replace(['BLUEX','TRAX'],[0,1])","584da9f0":"df1['Status'] = df1['Status'].replace(['Delivered','Returned Recieved'],[0,1])","1ba042f4":"df1['Area'] = df1['Area'].replace(['Main','Tehsil', 'Village'],[0,1,2])","2e0bbcf6":"from numpy import array\nfrom sklearn.preprocessing import LabelEncoder","83a11f37":"label_encoder = LabelEncoder()\ndf1.City = label_encoder.fit_transform(df1.City)\ndf1.head()","fb50de7c":"df1['Target']=df1['Company']\ndel df1['Company']\ndf1.head()","80ef8be3":"### Handling Missing Values","f8ed9b8d":"# Feature Encoding","6435e65f":"####  Mannual Encoding","b1773769":"# Handling Data Quality Problems","92479d82":"##### If you do nat have the domain knowledge , the boxplot may give you some clue about the presence of possibly incorrect values. We call them as outliers. Outliers may be real or due to data collection problems","349513f2":"### Label Encoding"}}