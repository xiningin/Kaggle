{"cell_type":{"fc0dd8b7":"code","2bc657e4":"code","010f7db7":"code","6acf032b":"code","6d61fecd":"code","fd176019":"code","a226d23e":"code","bc3fe6dc":"code","fd11be46":"code","60057ad3":"code","1bbf16b3":"code","81ec707b":"code","8328f049":"code","bb798eef":"code","5ffc94a1":"code","a822ce5d":"code","5d92c8ba":"code","dced664e":"code","b186bc56":"code","bb35c62d":"code","f60b8529":"code","929a0b6b":"code","e8ef3858":"code","3083afb3":"markdown","21b0da7f":"markdown","c3e7e025":"markdown","921513dc":"markdown","98592198":"markdown","483dd088":"markdown","a628f8c4":"markdown","48ddcad8":"markdown","30f8186c":"markdown"},"source":{"fc0dd8b7":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use(\"fivethirtyeight\")\nsns.set_style(\"darkgrid\")\nimport missingno as msno\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")","2bc657e4":"df = pd.read_csv(\"\/kaggle\/input\/predicting-divorce\/divorce.csv\")\ndisplay(df)","010f7db7":"print(f\"Dataset consists of {df.shape[0]} rows and {df.shape[1]} columns\")","6acf032b":"msno.matrix(df)","6d61fecd":"df.info()","fd176019":"# Statistical analysis\ndf.describe().T","a226d23e":"# labels\nsns.countplot(df.Divorce_Y_N)","bc3fe6dc":"X = df.drop(\"Divorce_Y_N\",axis=1)\ny = df.Divorce_Y_N","fd11be46":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, accuracy_score, roc_auc_score, confusion_matrix\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)","60057ad3":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","1bbf16b3":"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nrf = RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_test)\nacc = accuracy_score(y_pred, y_test)\nreport = classification_report(y_test, y_pred)\nprint(f\"Accuracy: {acc*100} %\")\nprint(report)\ncm = confusion_matrix(y_pred, y_test)\nsns.heatmap(cm, annot=True,cmap=\"icefire\")\nplt.show()","81ec707b":"ada = AdaBoostClassifier()\nada.fit(X_train, y_train)\ny_pred2 = ada.predict(X_test)\nacc2 = accuracy_score(y_pred2, y_test)\nreport2 = classification_report(y_test, y_pred2)\nprint(f\"Accuracy: {acc2*100} %\")\nprint(report2)\ncm2 = confusion_matrix(y_pred2, y_test)\nsns.heatmap(cm2, annot=True,cmap=\"icefire\")\nplt.show()","8328f049":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nlgb = LGBMClassifier()\nlgb.fit(X_train, y_train)\ny_pred3 = lgb.predict(X_test)\nacc3 = accuracy_score(y_pred3, y_test)\nreport3 = classification_report(y_test, y_pred3)\nprint(f\"Accuracy: {acc3*100} %\")\nprint(report3)\ncm3 = confusion_matrix(y_pred3, y_test)\nsns.heatmap(cm3, annot=True,cmap=\"RdBu\")\nplt.show()","bb798eef":"!pip install pycaret","5ffc94a1":"df_train = df[:127]\ndf_test = df[127:]","a822ce5d":"import pycaret\nfrom pycaret import classification\n\nclf = classification.setup(df,target=\"Divorce_Y_N\",train_size=0.8)","5d92c8ba":"from pycaret.classification import *\nbest = compare_models(sort=\"AUC\")","dced664e":"lr = classification.create_model(\"lr\")","b186bc56":"tuned_lr = classification.tune_model(lr)","bb35c62d":"classification.evaluate_model(tuned_lr)","f60b8529":"classification.plot_model(tuned_lr, plot=\"feature\")","929a0b6b":"final_model = finalize_model(tuned_lr)","e8ef3858":"final_model","3083afb3":"## Random Forest Classifier","21b0da7f":"### Adaboost Classifier","c3e7e025":"# Scaling data","921513dc":"# Pycaret","98592198":"### XGBoost Classifier","483dd088":"* Data doesnot have any null values.","a628f8c4":"* As this dataset is too small, testing is not implemented in this notebook.","48ddcad8":"## Training and Testing Split","30f8186c":"# Predicting Divorce"}}