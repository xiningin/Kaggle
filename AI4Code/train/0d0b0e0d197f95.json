{"cell_type":{"64a994d8":"code","8e379563":"code","6e9dfadf":"code","cb3e7689":"code","43cc3170":"code","51859c26":"code","96aa4483":"code","4efbe055":"code","777a8a3b":"code","1f4e9f56":"code","c0b215b1":"code","bd592441":"code","1d281b96":"code","a72cd7ab":"code","5b6c1bc9":"code","d95d6333":"code","d8addef3":"code","7aec733f":"code","980309ee":"code","4582c326":"code","171e0277":"code","1c9e2d50":"code","f014bd62":"code","102366d2":"code","a57c1770":"code","dbbd7218":"code","9f597322":"code","cacd6600":"code","b79f7277":"code","2e7b3554":"code","60afd247":"code","74c1bd44":"code","a7bd4478":"code","cc94a815":"code","62ec29ba":"code","d7ab71b5":"code","ce939ed9":"code","218869ef":"code","660e08f5":"code","5f13385e":"code","a79fd4a5":"code","a9da2b01":"code","f7237e90":"code","561edb09":"code","c2201416":"code","f548dcaa":"code","249c62f4":"code","bd9f8f3d":"code","57e50de4":"code","730049dd":"code","5d4d5fbe":"code","e6ebbd3d":"code","c447ac4a":"code","1419f945":"code","011de951":"code","8cea614f":"code","7e7039f5":"code","57e47dd5":"code","e3fdddd5":"code","1d5dd292":"code","3463ae84":"code","439ede1c":"code","7e83d54f":"code","415eebe6":"code","760a34fb":"code","9649d13d":"code","e4227acc":"code","ff467158":"code","4795ca66":"code","0c3ef999":"code","23fde6b1":"code","377f8e05":"code","16e2336e":"code","ddf9a6b7":"code","feebd83a":"code","00f9fd92":"code","3ba5fd8c":"code","fddc9688":"code","24df88e9":"code","5ef55be3":"code","a24ea454":"code","f842e9bd":"code","44235533":"code","80cd4a7e":"markdown","4751b8d2":"markdown","76a55403":"markdown","b143771d":"markdown","5b25c74d":"markdown","a858aff7":"markdown","46db9652":"markdown","1af1ad5e":"markdown","052344a1":"markdown","69c1b6e6":"markdown","6f36cbed":"markdown","d23019d7":"markdown","ac3fd0ff":"markdown","a943178e":"markdown","e2385a61":"markdown","3580aded":"markdown","535325db":"markdown","2be56d10":"markdown","d9f9335b":"markdown","ba05c0ab":"markdown","a035f575":"markdown","766fd5da":"markdown","149e270c":"markdown","3abec1e5":"markdown","9ec0152a":"markdown","787fbcf4":"markdown","aa02b08c":"markdown","bde8e10d":"markdown","2c3f8e5f":"markdown","d50f338b":"markdown","627f0b5f":"markdown","bede4794":"markdown","1737ffcd":"markdown","2312574f":"markdown","94f39358":"markdown","0427a9d1":"markdown","c6beceaa":"markdown","cf3a6d78":"markdown","183e38d1":"markdown","2dc9673c":"markdown","bc466f7f":"markdown","dda09ea2":"markdown","2f33dae8":"markdown","037a7734":"markdown","83a21b43":"markdown","4252bf16":"markdown","d2ea2201":"markdown","53003c4c":"markdown","513e3e55":"markdown","6d09bd72":"markdown","d8bc99f9":"markdown","de579eb9":"markdown","3a1b2b33":"markdown","a25ce07b":"markdown","3ae3bd1f":"markdown","cc8fff95":"markdown","ff4eabe9":"markdown","3ceb9a86":"markdown","1e30c510":"markdown","f39f7960":"markdown","42008e67":"markdown","2559fc88":"markdown","894304ae":"markdown","2981ff47":"markdown","6b55bb49":"markdown","e1f12836":"markdown","515292a3":"markdown","868438fe":"markdown","9287297e":"markdown","d5117437":"markdown","334e4391":"markdown","c3deb83d":"markdown","17a04a76":"markdown","b5bf9272":"markdown","e8defb1e":"markdown","bda8efbf":"markdown","a1d3a0d7":"markdown","7e66a3cb":"markdown","c7623119":"markdown","467758d5":"markdown","d1fea100":"markdown","fcdd781b":"markdown","b9af3f1c":"markdown","d282f869":"markdown","6d1a2c46":"markdown","70c3b569":"markdown","b472098f":"markdown","f20dd8d3":"markdown","6b8db063":"markdown","85a2dd75":"markdown","57976c6f":"markdown","91d9944c":"markdown","309701e5":"markdown","7b264684":"markdown","50eff0e9":"markdown","cbf7540b":"markdown","f8068fcf":"markdown","4c19bffd":"markdown","4695519e":"markdown","aca70a9e":"markdown"},"source":{"64a994d8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.cluster import KMeans\n\nfrom sklearn.metrics import silhouette_score","8e379563":"census = pd.read_csv('..\/input\/country-data-test-2020\/Country-data.csv')\ncensus.head()","6e9dfadf":"### Checking the general info of the dataframe\ncensus.info()","cb3e7689":"## Checking the dimensions of the dataframe\ncensus.shape","43cc3170":"## Checking for null values \ncensus.isnull().sum()","51859c26":"### checking the datatypes \ncensus.dtypes","96aa4483":"### Checking for duplicates \nduplicateDFRow = census[census.duplicated(keep='last')]\nprint(duplicateDFRow)","4efbe055":"census['health'] = census['health']*0.01*census['gdpp']\ncensus['exports'] = census['exports']*0.01*census['gdpp']\ncensus['imports'] = census['imports']*0.01*census['gdpp']","777a8a3b":"census.head()","1f4e9f56":"## Checking the numerical features and their distribution\ncensus.describe()","c0b215b1":"## Getting a list of all columns \ncensus.columns","bd592441":"exports1 = census['exports'].quantile(0.99)\ncensus['exports'][census['exports'] > exports1] = exports1\n\nhealth1 = census['health'].quantile(0.99)\ncensus['health'][census['health'] > health1] = health1\n\nincome1 = census['income'].quantile(0.99)\ncensus['income'][census['income']>income1] = income1\n\ngdpp1 = census['gdpp'].quantile(0.99)\ncensus['gdpp'][census['gdpp']> gdpp1] = gdpp1\n\nlife_expec1 = census['life_expec'].quantile(0.90)\ncensus['life_expec'][census['life_expec']>life_expec1] = life_expec1\n\nimports1 = census['imports'].quantile(0.99)\ncensus['imports'][census['imports'] < imports1] = imports1","1d281b96":"child_mort1 = census['child_mort'].quantile(0.01)\ncensus['child_mort'][census['child_mort'] < child_mort1] = child_mort1\n\nimports1 = census['imports'].quantile(0.01)\ncensus['imports'][census['imports'] < imports1] = imports1\n\ninflation1 = census['inflation'].quantile(0.01)\ncensus['inflation'][census['inflation'] < inflation1] = inflation1\n\ntotal_fer1 = census['total_fer'].quantile(0.01)\ncensus['total_fer'][census['total_fer'] < total_fer1] = total_fer1","a72cd7ab":"## Checking the range of numerical variables after capping of outliers\n\ncensus.describe()","5b6c1bc9":"def univar(para):\n    plt.figure(figsize = (15,3))\n    plt.title('Boxplot of '+ para)\n    print(sns.boxplot(x = census[para], data = census))","d95d6333":"## checking the feature Exports \nunivar('exports')\nplt.show()","d8addef3":"## Checking the parameters 'Child Mortality'\nunivar('child_mort')\nplt.show()","7aec733f":"## checking the parameter : health \nunivar('health')\nplt.show()","980309ee":"## checking the parameter 'Income'\nunivar('income')\nplt.show()","4582c326":"## Checking the parameter : Imports \nunivar('imports')\nplt.show()","171e0277":"## Checking the parameter : Inflation \nunivar('inflation')\nplt.show()","1c9e2d50":"## Checking the parameter : Life expectancy\nunivar('life_expec')\nplt.show()","f014bd62":"## Checking the parameter : Total fertility\nunivar('total_fer')\nplt.show()","102366d2":"## Checking the parameter GDPP\nunivar('gdpp')\nplt.show()","a57c1770":"## Checking for 10 countries with highest child mortality \n\nplt.figure(figsize = (15,3))\nchild = census.sort_values(by = 'child_mort', ascending = False ).head(10)\nplt.title('Countries with the highest child mortality')\nsns.barplot(y = 'child_mort', x = 'country', data = child)\nplt.show()","dbbd7218":"## Checking for top 10 countries with lowest income\n\nplt.figure(figsize = (15,3))\nincome = census.sort_values(by = 'income', ascending = True).head(10)\nplt.title('Countries with the lowest income')\nsns.barplot(y = 'income', x = 'country', data = income)\nplt.show()","9f597322":"## Countries with lowest income \n\nplt.figure(figsize = (15,3))\nimports = census.sort_values(by = 'imports', ascending = True).head(10)\nplt.title('Countries with the lowest imports')\nsns.barplot(y = 'imports', x = 'country', data = imports)\nplt.show()\n","cacd6600":"### Countries with lowest health expenditure \n\nplt.figure(figsize = (15,3))\nhealth = census.sort_values(by = 'health', ascending = True).head(10)\nplt.title('Countries with the lowest health expenditure')\nsns.barplot(y = 'health', x = 'country', data = health)\nplt.show()","b79f7277":"## checking with highest inflation\n\nplt.figure(figsize = (15,3))\ninflation = census.sort_values(by = 'inflation', ascending = False ).head(10)\nplt.title('Countries with the highest inflation')\nsns.barplot(y = 'inflation', x = 'country', data = inflation)\nplt.show()\n","2e7b3554":"## Countries with lowest life expectancy \n\nplt.figure(figsize = (15,3))\nlife = census.sort_values(by = 'life_expec', ascending = True).head(10)\nplt.title('Countries with the lowest life expectancy')\nsns.barplot(y = 'life_expec', x = 'country', data = life)\nplt.show()","60afd247":"### Countries with highest fertility rates \n\nplt.figure(figsize = (15,3))\nfer = census.sort_values(by = 'total_fer', ascending = False).head(10)\nplt.title('Countries with the highest fertility')\nsns.barplot(y = 'total_fer', x = 'country', data = fer)\nplt.show()","74c1bd44":"## Countries with lowest GDPP\n\nplt.figure(figsize = (15,3))\ngd = census.sort_values(by = 'gdpp', ascending = True).head(10)\nplt.title('Countries with the lowest gdpp')\nsns.barplot(y = 'gdpp', x = 'country', data = gd)\nplt.show()","a7bd4478":"### Countries with lowest exports \n\nplt.figure(figsize = (15,3))\nexports = census.sort_values(by = 'exports', ascending = True).head(10)\nplt.title('Countries with the lowest exports')\nsns.barplot(y = 'exports', x = 'country', data = exports)\nplt.show()","cc94a815":"## Plotting a heatmap to check for correlation between the parameters. \n\nplt.figure(figsize = (10,7))\nsns.heatmap(census.corr(),annot = True, cmap = 'Blues')","62ec29ba":"## Hopkins statistics is used to determine if there are any patterns in the given dataframe. \n## A value of above 65-70 is considered as a good hopkins and the dataset can be clustered. \n\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","d7ab71b5":"census_country = census.drop('country', axis =1)\nhopkins(census_country)","ce939ed9":"scaler = StandardScaler() \n#fit_transform\ncensus_scaled = scaler.fit_transform(census_country)\ncensus_scaled = pd.DataFrame(census_scaled)\ncensus_scaled.columns = census_country.columns\ncensus_scaled.describe()","218869ef":"## Elbow curve i.e. sum of squared distances \nssd = []\nrange_n_clusters = [2,3,4,5,6,7,8]\nfor num_clusters in range_n_clusters: \n    kmeans = KMeans(n_clusters = num_clusters, max_iter = 50)  \n    kmeans.fit(census_scaled)\n    \n    ssd.append(kmeans.inertia_)\n\n#plot the ssd for each n_clusters  \nplt.plot(ssd)\n","660e08f5":"## silhouette analysis\nsilhouette = []\nrange_n_clusters = [2,3,4,5,6,7,8]\n\nfor num_clusters in range_n_clusters:\n    ##initialise k-means \n    kmeans = KMeans(n_clusters = num_clusters, max_iter = 50)\n    kmeans.fit(census_scaled)\n    \n    cluster_labels = kmeans.labels_ \n    \n    ##silhouette score \n    \n    silhouette_avg = silhouette_score(census_scaled, cluster_labels)\n    \n    print('for n_clusters={0}, the silhouette score is {1}'. format(num_clusters, silhouette_avg))\n    silhouette.append(silhouette_avg)\n    \n    ","5f13385e":"plt.plot(range_n_clusters, silhouette)","a79fd4a5":"kmeans = KMeans(n_clusters = 5, random_state = 100)  \nkmeans.fit(census_scaled)","a9da2b01":"## determing the labels\n\nkmeans.labels_","f7237e90":"census['cluster_id'] = kmeans.labels_ ##assigning labels as cluster ids to the dataframe\n\ncensus.head()","561edb09":"census.cluster_id.value_counts() ## checking the count of each cluster id. ","c2201416":"kmeans2 = KMeans(n_clusters = 6, random_state = 100)  \nkmeans2.fit(census_scaled)","f548dcaa":"kmeans2.labels_","249c62f4":"census['cluster_id2'] = kmeans2.labels_ ## assigning the labels derived from fitting the model to k=6 to cluster_id2\n\ncensus.head()","bd9f8f3d":"census['cluster_id2'].value_counts()","57e50de4":"census_scaled['c2'] = census['cluster_id2']","730049dd":"census_scaled.drop(['inflation', 'imports', 'exports', 'total_fer','life_expec','health'],axis = 1).groupby('c2').mean().plot(kind = 'bar')","5d4d5fbe":"# Plot for income vs GDPP for 5 clusters\nplt.figure(figsize = (10,5))\nplt.title('Income Vs GDPP Plot')\nsns.scatterplot(x = 'gdpp', y = 'income', hue = 'cluster_id', data = census,  palette = 'Set1')\nplt.savefig('Income Vs GDPP Plot')","e6ebbd3d":"# Plot for GDPP VS CHILD MORTALITY for 5 clusters\n\nplt.figure(figsize = (10,5))\nplt.title('GDPP vs Child Mortality')\nsns.scatterplot(x = 'gdpp', y = 'child_mort', hue = 'cluster_id', data = census,  palette = 'Set1')\nplt.savefig('GDPP vs Child Mortality')","c447ac4a":"# Plot for Income vs Child mortality \n\nplt.figure(figsize = (10,5))\nplt.title('income vs Child Mortality')\nsns.scatterplot(x = 'income', y = 'child_mort', hue = 'cluster_id', data = census,  palette = 'Set1')\nplt.savefig('Income vs Child Mortality')","1419f945":"census_scaled['cluster_id'] = kmeans.labels_\ncensus_scaled['country'] = census['country']\ncensus_scaled.head()","011de951":"census_scaled.drop(['inflation', 'imports', 'exports', 'total_fer','life_expec','health','c2'],axis = 1).groupby('cluster_id').mean().plot(kind = 'bar')","8cea614f":"cluster0 = census[census['cluster_id']== 0]\nprint(cluster0['country'].tolist())","7e7039f5":"cluster1 = census[census['cluster_id']== 1]\nprint(cluster1['country'].tolist())","57e47dd5":"cluster2 = census[census['cluster_id']== 2]\nprint(cluster2['country'].tolist())","e3fdddd5":"cluster3 = census[census['cluster_id']== 3]\nprint(cluster3['country'].tolist())","1d5dd292":"cluster3 = census[census['cluster_id']== 4]\nprint(cluster3['country'].tolist())","3463ae84":"census[census['cluster_id'] == 4].sort_values(by = ['child_mort','gdpp','income'], ascending = [False, True, True]).head()","439ede1c":"census[census['cluster_id'] == 2].sort_values(by = ['child_mort','gdpp','income'], ascending = [False, True, True]).head()","7e83d54f":"from scipy.cluster.hierarchy import linkage ##scipy is scientific python\nfrom scipy.cluster.hierarchy import dendrogram \nfrom scipy.cluster.hierarchy import cut_tree","415eebe6":"census_scaled.describe()","760a34fb":"## Checking the dendrogram for single linkage \n\nnew = census_scaled.drop(['country','cluster_id', 'c2'], axis =1).copy()\n\nplt.figure(figsize = (25,5))\nmergings = linkage(new, method = 'single', metric = 'euclidean')\ndendrogram(mergings)\nplt.show()\nplt.savefig('single_Linkage')","9649d13d":"## checking the dendrogram for complete linkage \n\nplt.figure(figsize = (25,5))\ncomplete_mergings = linkage(new, method = 'complete', metric = 'euclidean')\ndendrogram(complete_mergings)\nplt.show()\nplt.savefig('complete_Linkage')\n\n##height of the dendrogram gives the no. of clusters. ","e4227acc":"## checking the dendrogram for average linkage \n\nplt.figure(figsize = (25,5))\navg_mergings = linkage(new, method = 'average', metric = 'euclidean')\ndendrogram(avg_mergings)\nplt.show()\nplt.savefig('avg_Linkage')\n\n##height of the dendrogram gives the no. of clusters. ","ff467158":" cut_tree(complete_mergings, n_clusters = 6)","4795ca66":"### generating labels by cutting the dendrogram \n\nlabels = cut_tree(complete_mergings, n_clusters = 6).reshape(-1, )\nlabels","0c3ef999":"## generating labels through hierarchical clustering using complete linkage and agglomerative approach \ncensus['hac_complete_labels'] = labels\ncensus.head()","23fde6b1":"## checking the count in each cluster\n\ncensus['hac_complete_labels'].value_counts()","377f8e05":"new['labels'] = labels ##using scaled dataset for profiling \nnew.drop(['inflation', 'imports', 'exports', 'total_fer','life_expec','health'],axis = 1).groupby('labels').mean().plot(kind = 'bar')\n","16e2336e":"cluster0 = census[census['hac_complete_labels']== 0]\nprint(cluster0['country'].tolist())","ddf9a6b7":"cluster1 = census[census['hac_complete_labels']== 1]\nprint(cluster1['country'].tolist())","feebd83a":"cluster2 = census[census['hac_complete_labels']== 2]\nprint(cluster2['country'].tolist())","00f9fd92":"cluster3 = census[census['hac_complete_labels']== 3]\nprint(cluster3['country'].tolist())","3ba5fd8c":"cluster4 = census[census['hac_complete_labels']== 4]\nprint(cluster4['country'].tolist())","fddc9688":"cluster5 = census[census['hac_complete_labels']== 5]\nprint(cluster5['country'].tolist())","24df88e9":"# Plot of Income vs GDPP using hierarchical clusters\n\nplt.figure(figsize = (10,5))\nplt.title('Income Vs GDPP Plot')\nsns.scatterplot(x = 'gdpp', y = 'income', hue = 'hac_complete_labels', data = census,  palette = 'Set1')","5ef55be3":"# Plot for GDPP vs child mortality \n\nplt.figure(figsize = (10,5))\nplt.title('GDPP vs Child Mortality')\nsns.scatterplot(x = 'gdpp', y = 'child_mort', hue = 'hac_complete_labels', data = census,  palette = 'Set1')","a24ea454":"# Plot for Income vs Child mortality \n\nplt.figure(figsize = (10,5))\nplt.title('income vs Child Mortality')\nsns.scatterplot(x = 'income', y = 'child_mort', hue = 'hac_complete_labels', data = census,  palette = 'Set1')","f842e9bd":"census[census['hac_complete_labels'] == 5].sort_values(by = ['child_mort','gdpp','income'], ascending = [False, True, True]).head()","44235533":"census[census['hac_complete_labels'] == 0].sort_values(by = ['child_mort','gdpp','income'], ascending = [False, True, True]).head()","80cd4a7e":"<a id = 'hierarchical_clustering'><\/a>\n### 5.2 Hierarchical Clustering","4751b8d2":"Myanmar exports the lowest. ","76a55403":"There are too many clusters with the similar characteristics. Picking 5 clusters to create clusters with striking differences.\nThe following plots are plotted for 5 clusters. ","b143771d":"#### Plots","5b25c74d":"From complete linkage, we get 6 clusters. Let's go ahead with 6 clusters. ","a858aff7":"<a id = 'data_preparation'><\/a>\n## 4. Data Preparation","46db9652":"- Cluster 2 has high GDPP and high income. \n- cluster 4 has the highest GDPP and high income. \n- Cluster 0 has the lowest income and GDPP.","1af1ad5e":"Niger has the highest fertility. ","052344a1":"Inflation ranges beyond 100. ","69c1b6e6":"Afganistan has the lowest amount of imports. ","6f36cbed":"\n1. [Importing the libraries](#importing_the_libraries)\n\n\n2. [Reading the dataset](#reading_the_dataset)\n\n    2.1 [Inspecting the dataframe](#inspecting_the_dataframe)\n    \n    \n\n3. [Data Cleaning](#data_cleaning)\n    \n    3.1 [Outlier Treatment](#outlier_treatment)\n    \n    3.2 [Univariate Analysis](#univariate_analysis)\n    \n    3.3 [Bivariate Analysis](#bivariate_analysis)\n    \n    3.4 [Checking for Correlation](#Checking_for_correlation)\n    \n\n4. [Data Preparation](#data_preparation)\n\n    4.1. [Hopkins statistics](#hopkins_statistics)\n    \n    4.2 [Scaling](#scaling)\n    \n   \n    \n5. [Clustering](#clustering)\n\n    5.1 [K-means Clustering](#kmeans_clustering) \n    \n    5.2 [Hierarchical Clustering](#hierarchical_clustering)\n    \n    \n6. [Results](#results)\n","d23019d7":"There are 97 countries in cluster 1, 47 in cluster 0, 16 in cluster 2, 5 in cluster 3 and 1 each in cluster 5 and 4","ac3fd0ff":"<a id = 'univariate_analysis'><\/a>\n### 3.2 Univariate analysis","a943178e":"**Countries in Cluster 5**","e2385a61":"Since there is a clear dip at 5, let's take no.of clusters as 5. \nIt seems fair from the business point of view too. \n2-3 clusters would be too broad. \nDeveloped and developing countries with no serious issues may get clustered together.\n4-5 Clusters will give us well-defined clusters based on the features.  \n","3580aded":"**Capping the upper range outliers of parameters- Exports,  Health, income, Gdpp, life expectancy, Imports.** \n\nAs mentioned earlier, these parameters can be called positive indicators. An increase in these parameters indicates prosperity and progress. The countries with have values more than 99th percentile of exports, health, income, GDPP, life expectancy and imports are not in need of immediate aid. Hence the upper outliers in this features can be capped. ","535325db":"Fertility rates range from 1 to 6.8 with median at 2.5","2be56d10":"**Countries in cluster 4**","d9f9335b":"According to this model, \n81 countries belong to cluster 3, 46 countries belong to cluster 1, 27 countries belong to cluster 0, 11 countries belong to cluster 4, 1 country belongs to each cluster 2 and 5. ","ba05c0ab":"**Countries in Cluster 3**","a035f575":"Burundi has the lowest GDPP. ","766fd5da":"<a id=\u2019outlier_treatment\u2019><\/a>\n### 3.1 Outlier Treatment ","149e270c":"- Cluster 2 has the highest child mortality and the lowest income. \n- Cluster 1 has the lowest child mortality and highest income.  ","3abec1e5":"### Analysis ","9ec0152a":"**Countries in Cluster 1**","787fbcf4":"There are no null values in any columns  ","aa02b08c":"Life expectancy ranges from 30 to 80. ","bde8e10d":"There is no clear dip. Lets check silhouette score. ","2c3f8e5f":"All datatypes are correct. ","d50f338b":"Let's check the labels for two values of k. ","627f0b5f":"Income ranges goes beyond 80000","bede4794":"At 6, we get 5 clusters.","1737ffcd":"# COUNTRIES IN NEED OF IMMEDIATE AID ","2312574f":"There are a lot of countries beyond the 75th percentile of exports. Median is around 2000. ","94f39358":"**Ranges of parameters after treatment of outliers**\n\n1. Child mortality ranges from 2.8 to 208. \n2. exports range from 1.07 to 64794.26. \n3. health expenditure ranges from 78 to 8410\n4. imports range from 55371 to 149100\n5. income ranges from 609 to 84374\n6. inflation ranges from -2.34 to 104\n7. life expectancy ranges from 32 years to 80 years \n8. Total fertility ranges from 1.24 to 7.49\n9. GDPP ranges from 231 to 79088. \n","0427a9d1":"**Countries in Cluster 2**","c6beceaa":"**Countries in need of immediate aid**\n\n- Nigeria\n- Haiti\n- Sierra leone\n- Chad\n- Central African Republic. ","cf3a6d78":"- Cluster 2 has the child mortality and low GDPP. \n- Cluster 1 has the highest GDPP and lowest child mortality. ","183e38d1":"**Countries in need of immediate aid**","2dc9673c":"**Countries in Cluster 0**","bc466f7f":"<a id = 'inspecting_the_dataframe'><\/a>\n### 2.1 Inspecting the dataframe ","dda09ea2":"#### Silhouette score to determine clusters","2f33dae8":"**Countries in Cluster 2**","037a7734":"Health, Imports and exports are as a percentage of GDPP. Hence they must be converted to their actual figures. ","83a21b43":"- Cluster 0 has the highest child mortality and lowest GDPP \n- Cluster 5 also has high child mortality. ","4252bf16":"GDPP 75th percentile is at 30000 and ranges upto 80000. ","d2ea2201":"A dataset with **166 countries and 9 health\/economic\/socio economic parameters** are given. The parameters are broadly classified into two categories :\n1. Positive indicators \n2. Negative indicators \n\n**Positive indicators** : An increase in these parameters indicates progress and well being. Example : Increase in health expenditure indicates that the country is doing well and is not in need of external aid. \n      - Income\n      - Exports\n      - Imports\n      - Health\n      - GDPP\n\n**Negative indicators** : An increase in these parameters indicates poverty or lack of basic amenities. Ex: Increase in child mortality actually indicates poor health infrastructure. \n      - Child mortality\n      - Inflation\n      - Life expectancy\n      - Total fertility","53003c4c":"### Objective \n\nThe objective of the analysis was to cluster countries based on certain features like Child Mortality, income etc and find out the top 5 countries that are in need of immediate aid. ","513e3e55":"#### Elbow-curve method to determine clusters","6d09bd72":"Nigeria has very child mortality, low income and low GDPP. It needs immediate aid. ","d8bc99f9":"An empty list is created indicating that there were no duplicates in the dataset.","de579eb9":"### For K = 6 ","3a1b2b33":"<a id = 'reading_the_dataset'><\/a>\n\n## Reading the dataset ","a25ce07b":"**Countries in Cluster 4**","3ae3bd1f":"Imports range from 0 to beyond 140000.","cc8fff95":"Haiti has the highest child mortality of 200. ","ff4eabe9":"### Problem Statement \n\nHELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n","3ceb9a86":"Conclusions:\n - Cluster 3 has the highest GDPP and Income. \n - Cluster 2 has the lowest GDPP and income. ","1e30c510":"These countries have high child mortality, low GDPP and low income. This cluster is better off than cluster 4. However, they also may need aid. ","f39f7960":"Health expenditure goes beyond 8000. ","42008e67":"Haiti has the lowest life expectancy. ","2559fc88":"**Cluster Profiling using hierarchical clustering**","894304ae":"**Cluster Profiling for 5 clusters** ","2981ff47":"<a id = 'data_cleaning'><\/a>\n## 3. Data Cleaning","6b55bb49":"The countries that need immediate aid\n- Nigeria\n- Haiti\n- Sierra leone\n- Chad\n- Central African republic\n- Mali","e1f12836":"**Observations from the above heatmap**\n\n- Child Mortality and income are negatively correlated. Negative coefficient of 0.55\n- Child Mortality and life expectancy are negatively correlated. Negative coefficient of 0.89 \n- Child Mortality and GDPP are negatively correlated. Negative correlation of 0.5\n- Child Mortality and Total fertility are positively correlated with a coefficient of 0.85\n- Income and total fertility are negatively correlated. Coefficient of -0.53\n- life expectancy and total fertility are negatively correlated. Coefficient of -0.76\n- GDPP and income have strong positive correlation of 0.91\n- GDPP has strong correlation with health, exports and is negatively correlated to total fertility, inflation and child mortality. \n- Life expectancy and income, health and exports are positively correlated.  ","515292a3":"#### For K = 5 ","868438fe":"Child mortality ranges from 2 to 208 with median at  20. ","9287297e":"<a id = 'Checking_for_correlation'><\/a>\n### 3.4 Checking for Correlation","d5117437":"In k-means clustering algorithm, we need to determine the number of clusters i.e. k beforehand. This is usually done using two processes. \n1. Elbow curve method\n2. Silhouette method","334e4391":"- Cluster 0 has high child mortality and low income.\n- cluster 5 has high child mortality and low income.","c3deb83d":"    1) Cluster 0 has low child mortality, low income, low gdpp\n    2) Cluster 1 has low child mortality, high income and high gdpp\n    3) Cluster 2 has low income, high child mortality, low gdpp. \n    4) Cluster 3 has high income, high gdpp, low child mortality. \n    5) Cluster 4 has high child mortality, low income, and low GDPP. This is the cluster that need immediate aid followed by cluster 2.","17a04a76":"These countries have low child mortality, low income and low gdpp. But they are better off than those in cluster 4 and 2","b5bf9272":"**Countries in need of immediate aid using hierarchical clustering**","e8defb1e":"Luxembourg in cluster 3 has high GDPP, high income and low child mortality. ","bda8efbf":"Nigeria has the highest inflation. ","a1d3a0d7":"**Countries in Cluster 0**","7e66a3cb":"- Cluster 5 has high child mortality, low income, low gdpp. \n- Cluster 0 has high child mortality, low income and low GDPP. \n\nThese 2 clusters need immediate aid. \n\n- Cluster 1 has low child mortality but has low income and low gdpp. \n\nFollowing cluster 2 and 4, these countries also need aid. \n","c7623119":"<a id = 'clustering'><\/a>\n## 5. Clustering ","467758d5":"There are 88 countries in cluster 0, 30 countries in cluster 1, 47 countries in cluster 2, 1 each in cluster 3 and 4.  ","d1fea100":"Eritrea spend the lowest in health. ","fcdd781b":"At 6 if we cut the tree, we get around 3 clusters. ","b9af3f1c":"There are no null values in columns and all datatypes are correct. ","d282f869":"167 rows and 10 parameters  ","6d1a2c46":"Congo has the lowest income. ","70c3b569":"At 8, we get 6 clusters. ","b472098f":"<a id = 'bivariate_analysis'><\/a>\n### 3.3 Bivariate Analysis","f20dd8d3":"<a id = 'hopkins_statistics'><\/a>\n### 4.1 Hopkins statistics ","6b8db063":"<a id = 'kmeans_clustering'><\/a>\n## 5.1 K-means Clustering ","85a2dd75":"<a id = 'scaling'><\/a>\n### 4.2 Scaling","57976c6f":"Hopkins score on several iterations is above 0.85. The dataset is suitable for clustering. ","91d9944c":"<a id=\u2019importing_the_libraries\u2019><\/a>\n\n## Importing the libraries","309701e5":"Dataset contains parameters child mortality, exports, health, imports, income, inflation, life expectancy, total fertility. Imports, exports and health are given as %age of the GDP per capita. They have to be converted to absolute terms.  ","7b264684":"These countries have low child mortality, high income and high GDPP. They are not in need of aid.","50eff0e9":"**Countries in Cluster 1**","cbf7540b":"1. Child mortality ranges from 2.6 to 208\n2. exports range from 1.07 to 183750. \n3. health expenditure ranges from 12 to 8663\n4. imports range from 0.6 to 149100\n5. income ranges from 609 to 125000\n6. inflation ranges from -4.2 to 104\n7. life expectancy ranges from 32 years to 82 years \n8. Total fertility ranges from 1.15 to 7.49\n9. GDPP ranges from 231 to 105000. ","f8068fcf":"**Capping the lower outliers in the below parameters**:\n\n- Inflation : The measurement of the annual growth rate of the Total GDP. Governments often strive for 2-3% inflation rates. High inflation can cause the economy to decline. \nThose with higher inflation needs aid. \n\n- Total fertility : This must be around 2.1. \n![image.png](attachment:image.png)\nWith rise in TFR, Human development index decreases. Higher the TFR, higher need of aid. \n\n- Child Mortality : It is the death of children under 5 years of age per 1000 live births. Higher child mortality indicates that the country might need aid to uplift its healthcare. \n\n\nAn increase in the above parameters means that the country lacks basic amenties and the living conditions are not so good. Hence they may be in need of aid. However, the countries which have low child mortality, low total fertility and low inflation are not in need of external aid. So the countries with low values i.e 0.01% of this features can be capped. ","4c19bffd":"**Countries in Cluster 3**","4695519e":"<a id = 'results'><\/a>\n## 6. Results \n\n**Results from K-means :**\n\nCountries in need of immediate aid:\n\n1. Nigeria\n2. Haiti\n3. Sierra leone\n4. Chad\n5. Central African Republic\n\n**Results from hierarchical clustering :**\n\nCountries in need of immediate aid:\n\n1. Nigeria\n2. Haiti\n3. Sierra leone\n4. Chad\n5. Central African Republic","aca70a9e":"## Steps in analysis"}}