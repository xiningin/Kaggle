{"cell_type":{"75458e2f":"code","d13af804":"code","6789d785":"code","d88235e6":"code","f692cc8a":"code","d55b9ca6":"code","2e5f4b56":"code","5e3998bb":"code","2c7e65c9":"code","02e539a1":"code","9fbf67ca":"code","bee8f767":"code","2f488c02":"code","26d937c6":"code","0d557fab":"code","95e7b32c":"code","c186c3b2":"code","5cab1d9f":"code","5ced6679":"code","9bc6c24c":"code","a4e77e87":"code","9a2b219a":"code","90d04554":"code","285ea25f":"code","f567f69a":"code","f7288899":"code","1b24f585":"code","7c464996":"markdown","827660a6":"markdown","cca58453":"markdown","56985bf7":"markdown","8f3bf8ef":"markdown","e4bfb296":"markdown","f9e58768":"markdown","26074037":"markdown","8342de2e":"markdown","cb70cde5":"markdown","1a65b6cc":"markdown","44dda843":"markdown","3fb218b7":"markdown","a0014848":"markdown","792cfd9d":"markdown","2ff8bc58":"markdown","6d9c2984":"markdown"},"source":{"75458e2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d13af804":"import pandas as pd #utile pour de nombreux calculs scientifiques en Python\nimport numpy as np  #biblioth\u00e8que de structure de donn\u00e9es principale","6789d785":"!conda install -c conda-forge folium=0.5.0 --yes","d88235e6":"import folium\n#la carte du monde\nworld_map=folium.Map()\nworld_map","f692cc8a":"#Cr\u00e9ons une carte centr\u00e9e sur le Canada et jouons avec le niveau de zoom pour voir comment cela \n#affecte la carte\nworld_map=folium.Map(location=[56.130, -106.35], zoom_start=4)\n#location pour latitude et longitude du canada, zoom_start pour le zoom de depart\nworld_map","d55b9ca6":"world_map=folium.Map(location=[9.537, -13.677], zoom_start=8)\nworld_map","2e5f4b56":"world_map=folium.Map(location=[56.130, -106.35],zoom_start=4,tiles='Stamen Toner')\nworld_map","5e3998bb":"world_map=folium.Map(location=[9.537, -13.677],zoom_start=7,tiles='Stamen Terrain')\nworld_map","2c7e65c9":"#donn\u00e9es sur les incidents \u00e0 sanfrancisco\ndf=pd.read_csv('https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DV0101EN\/labs\/Data_Files\/Police_Department_Incidents_-_Previous_Year__2016_.csv')\ndf.head()","02e539a1":"df.shape","9fbf67ca":"df=df.iloc[0:100,:]\ndf.shape","bee8f767":"latitude = 37.77\nlongitude = -122.42","2f488c02":"#carte de san francisco\nsanfran_map=folium.Map(location=[latitude,longitude],zoom_start=12)\nsanfran_map","26d937c6":"#Superposons maintenant les emplacements des crimes sur la carte. La fa\u00e7on de le faire dans Folium est de cr\u00e9er\n#un FeatureGroup avec ses propres caract\u00e9ristiques et son propre style, puis de l'ajouter \u00e0 sanfran_map\nincidents=folium.map.FeatureGroup() \nfor lat,lng, in zip(df.Y,df.X):\n    incidents.add_child(\n       folium.features.CircleMarker(\n           [lat,lng],radius=5,\n           color='yellow',fill=True,\n           fill_color='blue',fill_opacity=0.6\n       )\n    )\n    ","0d557fab":"#on ajoute incident \u00e0 la carte\nsanfran_map.add_child(incidents)","95e7b32c":"latitudes = list(df.Y)\nlongitudes = list(df.X)\nlabels = list(df.Category)","c186c3b2":"for lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat, lng], popup=label).add_to(sanfran_map)","5cab1d9f":"sanfran_map","5ced6679":"#regrouper les incidents dans des clusters en utilisant 'plugins' dans folium\nfrom folium import plugins\nsanfran_map = folium.Map(location = [latitude, longitude], zoom_start = 12)\nincidents = plugins.MarkerCluster().add_to(sanfran_map)\nfor lat, lng, label, in zip(df.Y, df.X,df.Category):\n    folium.Marker(\n        location=[lat, lng],\n        icon=None,\n        popup=label,\n    ).add_to(incidents)\n\nsanfran_map","9bc6c24c":"#donn\u00e9es sur l'immigration au canada\ndf_can = pd.read_excel('https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DV0101EN\/labs\/Data_Files\/Canada.xlsx',\n                     sheet_name='Canada by Citizenship',\n                     skiprows=range(20),\n                     skipfooter=2)\ndf_can.head()","a4e77e87":"df_can.shape","9a2b219a":" df_can.drop(['AREA','REG','DEV','Type','Coverage'], axis=1, inplace=True)\n\ndf_can.rename(columns={'OdName':'Country', 'AreaName':'Continent','RegName':'Region'}, inplace=True)\n\ndf_can.columns = list(map(str, df_can.columns))\n\ndf_can['Total'] = df_can.sum(axis=1)\n\nyears = list(map(str, range(1980, 2014)))\nprint ('data dimensions:', df_can.shape)","90d04554":"df_can.head()","285ea25f":"!wget --quiet https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DV0101EN\/labs\/Data_Files\/world_countries.json -O world_countries.json","f567f69a":"world_geo = r'world_countries.json' # geojson fichier\n\n# carte du monde\nworld_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')","f7288899":"world_map.choropleth(\n    geo_data=world_geo,\n    data=df_can,\n    columns=['Country', 'Total'],\n    key_on='feature.properties.name',\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Immigration to Canada'\n)\n\n# display map\nworld_map","1b24f585":"\n# cr\u00e9er un tableau numpy de longueur 6(pour les 6 differentes couleurs) et a un espacement lin\u00e9aire de \n#l'immigration totale minimale \u00e0 l'immigration totale maximale\nthreshold_scale = np.linspace(df_can['Total'].min(),\n                              df_can['Total'].max(),\n                              6, dtype=int)\nthreshold_scale = threshold_scale.tolist() # changer le tableau numpy en une liste\nthreshold_scale[-1] = threshold_scale[-1] + 1#assurez-vous que la derni\u00e8re valeur de la liste est sup\u00e9rieure \u00e0 \n#l'immigration maximale\n\n\n\n\nworld_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')\nworld_map.choropleth(\n    geo_data=world_geo,\n    data=df_can,\n    columns=['Country', 'Total'],\n    key_on='feature.properties.name',\n    threshold_scale=threshold_scale,\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Immigration to Canada',\n    reset=True\n)\nworld_map","7c464996":"## Nous allons utiliser une autre biblioth\u00e8que de visualisation de python qui est 'Folium': d\u00e9velopp\u00e9 dans le seul but de visualiser les donn\u00e9es g\u00e9ospatiales","827660a6":"on va representer sur une carte de san francisco l\u00e0 o\u00f9 ses crimes ont eu lieu","cca58453":"la barre de couleurs commencent par un nombre negatif, on va changer \u00e7a","56985bf7":"### avoir la categorie d'incident en cas de clic sur un marqueur","8f3bf8ef":"Une carte choropl\u00e8the est une carte th\u00e9matique o\u00f9 les r\u00e9gions sont color\u00e9es ou remplies d'un motif qui montre une mesure statistique, tels la densit\u00e9 de population ou le revenu par habitant. Ce type de carte facilite la comparaison d'une mesure statistique d'une r\u00e9gion \u00e0 l'autre ou montre la variabilit\u00e9 de celle-ci pour une r\u00e9gion donn\u00e9e.","e4bfb296":"Pour cr\u00e9er une carte choropl\u00e8the, nous avons besoin d'un fichier GeoJSON qui d\u00e9finit les zones \/ fronti\u00e8res de l'\u00c9tat, du comt\u00e9 ou du pays qui nous int\u00e9ressent. Dans notre cas, puisque nous nous effor\u00e7ons de cr\u00e9er une carte du monde, nous voulons un GeoJSON qui d\u00e9finit les fronti\u00e8res de tous les pays du monde","f9e58768":"Ils sont parfaits pour explorer les m\u00e9andres des rivi\u00e8res et les zones c\u00f4ti\u00e8res","26074037":"Selon notre l\u00e9gende de la carte choropl\u00e8the, plus la couleur d'un pays est sombre et plus la couleur est proche du rouge, plus le nombre d'immigrants de ce pays est \u00e9lev\u00e9. En cons\u00e9quence, l'immigration la plus \u00e9lev\u00e9e sur 33 ans (de 1980 \u00e0 2013) provenait de la Chine, de l'Inde et des Philippines, suivies de la Pologne, du Pakistan et, fait int\u00e9ressant, des \u00c9tats-Unis","8342de2e":"# Cartes avec marqueurs","cb70cde5":"## On peut aussi creer diff\u00e9rents styles de cartes ","1a65b6cc":"##  A- Stamen Toner Maps","44dda843":"Creons une carte centr\u00e9e sur la Guin\u00e9e avec un zoom de depart de 8","3fb218b7":"##  Choropleth Maps","a0014848":"### Ce style est id\u00e9al pour visualiser l'ombrage des collines et couleurs de la v\u00e9g\u00e9tation naturelle ","792cfd9d":"Folium n'est pas disponible par d\u00e9faut. Donc, nous devons d'abord l'installer avant de pouvoir l'importer","2ff8bc58":"##  B-Stamen Terrain Maps ","6d9c2984":"150500 incidents pour 13 colonnes, on va travailler avec les 100 premi\u00e8rs incidents"}}