{"cell_type":{"097d3489":"code","8d5113be":"code","cb4ba7a2":"code","9192ba09":"code","76ef1a5d":"code","507e070a":"code","690967cf":"code","4896f71f":"code","56d719fa":"code","76f2c277":"code","5113dec2":"code","bde6a789":"code","da6c0f27":"code","6bf07e6a":"code","7fcd7767":"code","2211d8ee":"code","79893281":"code","6c7b80b2":"code","d620812f":"code","f1812f74":"code","f56b9fe5":"code","1736aeec":"code","8344ba65":"code","48753ab2":"code","76b33095":"code","b0eda820":"code","b7db38aa":"code","84e1971a":"code","5fa6cc70":"code","e60fdeeb":"code","8451263d":"code","7bcaaf33":"code","4158af4d":"code","87228b59":"code","d4bdf806":"code","bf999e00":"code","45b82549":"code","9a043c8a":"code","f8b64096":"code","21ccaca9":"code","acb6f530":"code","2476ab16":"code","9b7461c9":"code","429eb7f5":"code","c9fe1953":"code","fa00b2c7":"code","3a06dfe8":"code","07c76808":"code","7477e8f0":"code","c023404f":"code","f53df083":"code","7f3b1af8":"code","063a4668":"code","6a48ebbc":"code","f8336450":"code","5f480ab9":"code","0354d836":"code","b7ecdf14":"markdown","64c74507":"markdown","fa4f2cb1":"markdown","4498ad24":"markdown","f3e3d56a":"markdown","aa5a8f61":"markdown","a4978263":"markdown","7aa930e4":"markdown","0d12bb2d":"markdown","b40c4b16":"markdown","6bd17b60":"markdown","ab6c8e08":"markdown"},"source":{"097d3489":"!pip install sidetable","8d5113be":"import sidetable as stb\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport seaborn as sns\nfrom datetime import datetime as dt\n\n%matplotlib inline","cb4ba7a2":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9192ba09":"kickstarter = pd.read_csv('\/kaggle\/input\/kickstarter-projects\/ks-projects-201801.csv', parse_dates=['deadline', 'launched'], index_col='ID')\nprint(kickstarter.shape)\nkickstarter.head()","76ef1a5d":"kickstarter.describe(percentiles=[0.1,0.25,0.75,0.9])","507e070a":"kickstarter[['goal','usd_goal_real','pledged','usd_pledged_real','backers']].agg(['min', 'median', 'max', 'mean', 'std']).round().T","690967cf":"kickstarter.info()","4896f71f":"kickstarter.nunique()","56d719fa":"kickstarter.dtypes","76f2c277":"column_name = 'main_category'\npd.DataFrame({'count': kickstarter[column_name].value_counts(normalize=False),\n              'percent': kickstarter[column_name].value_counts(normalize=True)\n             })","5113dec2":"kickstarter.stb.freq(['main_category'], thresh=0.5)","bde6a789":"kickstarter['project_duration'] = kickstarter['deadline'].dt.date - kickstarter['launched'].dt.date\nkickstarter['is_success'] = (kickstarter['state']=='successful')\nkickstarter['duration_in_month'] = kickstarter['project_duration'].dt.days \/\/ 30\nkickstarter['opening_month'] = kickstarter['launched'].dt.month\nkickstarter['pledged_of_goal_usd'] = kickstarter['usd_pledged_real'].divide(kickstarter['usd_goal_real'])\nkickstarter['pledged_of_goal_usd'].agg(['min', 'median', 'max', 'mean'])","da6c0f27":"kickstarter['goal']=kickstarter['goal'].astype(int)\nkickstarter['usd_goal_real']=kickstarter['usd_goal_real'].astype(int)\nkickstarter['usd_pledged_real']=kickstarter['usd_pledged_real'].astype(int)","6bf07e6a":"#drop too small goal\ntiny_goals=kickstarter[kickstarter['usd_goal_real']<=500]\nprint(kickstarter.shape)\nkickstarter = kickstarter.drop(index=tiny_goals.index)\nprint(kickstarter.shape)","7fcd7767":"#drop date invalid\nmask = (kickstarter['launched'].dt.year < 2000)\nprint(kickstarter.shape)\nkickstarter = kickstarter.loc[~mask,:]\nprint(kickstarter.shape)","2211d8ee":"#drop unknown country\ncountry_n0=kickstarter[kickstarter['country']=='N,0\"']\nprint(kickstarter.shape)\nkickstarter = kickstarter.drop(index=country_n0.index)\nprint(kickstarter.shape)","79893281":"# drop no name project\nno_name = kickstarter[kickstarter['name'].isna()]\nprint(kickstarter.shape)\nkickstarter = kickstarter.drop(index=no_name.index)\nprint(kickstarter.shape)","6c7b80b2":"kickstarter.head(10)","d620812f":"pie_ax=kickstarter['state'].value_counts(normalize=True).plot.pie(figsize=(9,9),explode=(0,0.07,0,0,0),\n                                                              legend=True,shadow=True, autopct='%1.1f%%' ,\n                                                              pctdistance=0.75, radius=1.05, wedgeprops = {'linewidth': 0.1}, \n                                                              textprops = {'fontsize': 14})\npie_ax.set_title('Projects state distribution', fontsize=16, weight='bold')\npie_ax.legend(fancybox=True, shadow=True, title='State', fontsize=11)\npie_ax.set_ylabel(\"\")\n#plt.rcParams['font.size'] = 15\n\nplt.show()","f1812f74":"fig = plt.figure(figsize=(14,7))\nax=kickstarter.groupby('main_category').size().sort_values(ascending=False).plot.bar(color=sns.hls_palette(15, l=0.5, s=0.5))\nax.set_ylabel('Number of projects')\nax.set_xlabel('Main Category')\nax.set_title('Projects in the DB by main category', fontsize=16, weight='bold')\n\nplt.show()","f56b9fe5":"state_per_main_category = (kickstarter\n                           .groupby('main_category')['state']\n                           .value_counts(normalize=True)\n                           .unstack().round(2)\n                           .drop(columns='live')\n                           .sort_values(by=['successful','failed'],axis=0, ascending=False)\n                          )\n\nax=state_per_main_category.plot.bar(figsize=(22,8))\nax.set_title('State distribution by main category', fontsize=16, weight='bold')\nax.set_xlabel(\"\")\nax.set_ylabel(\"State distribution %\")\nplt.show()","1736aeec":"fig = plt.figure(figsize=(14,7))\nax = fig.gca()\nax.set_title('Success rate by main category', fontsize=16, weight='bold')\nax=kickstarter.groupby('main_category')['is_success'].mean().round(2).sort_values(ascending=False).plot.bar(color=sns.hls_palette(15, l=0.5, s=0.5))\nax.set_ylabel('Success rate')\nax.set_xlabel('Main Category')\nplt.show()","8344ba65":"success_per_category = kickstarter.groupby(['main_category', 'category'])['is_success'].mean()\nmain_categories_list = list(kickstarter.groupby('main_category').size().sort_values().index)\n\nfig = plt.figure(figsize=(40,90))\ngs = fig.add_gridspec(8,2)\n\nlist_of_axes = []\nlist_of_axes.append(fig.add_subplot(gs[0,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[1,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[2,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[3,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[4,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[5,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[6,0],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[0,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[1,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[2,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[3,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[4,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[5,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[6,1],xlim=(0,0.8)))\nlist_of_axes.append(fig.add_subplot(gs[7,:],xlim=(0,0.8)))\n\nfor axes in list_of_axes:\n    cat = main_categories_list.pop(0)\n    axes.set_title(cat,size=25,weight='semibold')\n    axes.tick_params(axis=\"both\", labelsize=22.0)\n    axes.barh(success_per_category[cat].sort_values().index,success_per_category[cat].sort_values().values,color=sns.color_palette(\"muted\",len(success_per_category[cat])))\n    \nfig.subplots_adjust(hspace=0.35)\nfig.tight_layout(rect=[0, 0.05, 1, 0.95])\nfig.suptitle('Success Rate In Each Main Category',size=30,weight='bold',va='center')\n\nplt.xlabel(\"Success Rate\",size=20,style='oblique',weight='bold')\nplt.show()","48753ab2":"#num of projects per country\n#kickstarter['country'].value_counts()\nax=kickstarter.groupby('country').size().sort_values(ascending=False).plot.bar(figsize=(16,8),color=sns.hls_palette(22, l=0.5, s=0.5))\nax.set_title('Projects in the DB by country', fontsize=16, weight='bold')\nfor p in ax.patches: \n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.text(x+width\/2, \n            y+height+5000, \n            '{:.0f}'.format(height), \n            horizontalalignment='center', \n            verticalalignment='center')#,\n            #fontsize=11\n           #)","76b33095":"# Country Success dist - Normalized by row:\ncountry_success_dist=kickstarter.groupby(['country','state'])['state'].count().unstack().div(\n    kickstarter.groupby(['country','state'])['state'].count().unstack().sum(axis=1), axis=0).sort_values(by=['successful'], ascending=False)\ncountry_success_dist","b0eda820":"#success distruption by country\nax = country_success_dist.plot.bar(stacked=True, figsize=(18,9))\nax.set_title('State distruption by country', fontsize=16, weight='bold')\nax.legend(bbox_to_anchor=(1, 0.5))\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    if height<=0.01:\n        continue\n    x, y = p.get_xy() \n    ax.text(x+width\/2, \n            y+height\/2, \n            '{:.0f} %'.format(height*100), \n            horizontalalignment='center', \n            verticalalignment='center')","b7db38aa":"# Only successful\nax=country_success_dist['successful'].sort_values(ascending=False).plot.bar(figsize=(16,8), color='tab:red')\nax.set_title('Success distruption by country', fontsize=14)\nplt.show()","84e1971a":"succesful_projects=kickstarter[kickstarter['state']=='successful']\nfailed_projects=kickstarter[kickstarter['state']=='failed']","5fa6cc70":"country_pledged_of_goal=kickstarter.groupby('country')['pledged_of_goal_usd'].agg(['mean', 'median', 'max','count']).sort_values(by='median',ascending=False)\ncountry_pledged_of_goal","e60fdeeb":"# Pledged_of_goal_usd by Country\ncountry_order=list(country_pledged_of_goal.index.values)\nplt.figure(figsize = (24,8))\nax=sns.boxenplot(data=kickstarter, x='country', y='pledged_of_goal_usd',order=country_order)\nax.set_ylim(0,5)\nax.set_ylabel(\"Pledged of goal\",fontsize=14)\nax.set_xlabel(\"Country\",fontsize=14)\nax.set_title('Money pledged out of goal by country', fontsize=16, weight='bold')\nplt.show()","8451263d":"# Pledged_of_goal_usd by Country divided by Successful\/Failed\nfig=plt.figure(figsize=(24,12))#, constrained_layout=True)\n#fig.set_size_inches(24,12)\n\nax1 = fig.add_subplot(2, 1, 1)\nax1=sns.boxenplot(data=succesful_projects, x='country', y='pledged_of_goal_usd',order=country_order)\nax1.set_title('Succesful Projects')\nax1.set_ylabel('Pledged of goal')\nax1.set_ylim(1,10)\nfig.suptitle('Money pledged out of goal by country, divided to successful and failed project', fontsize=16, weight='bold')\n\nax2 = fig.add_subplot(2, 1, 2)\nax2=sns.boxenplot(data=failed_projects, x='country', y='pledged_of_goal_usd',order=country_order)\nax2.set_title('Failed Projects')\nax2.set_ylabel('Pledged of goal')\nax2.set_ylim(0,1)\n\n#fig.tight_layout()\nplt.show()","7bcaaf33":"# summary of succesful_projects\nsuccesful_projects['pledged_of_goal_usd'].agg(['min', 'median', 'max', 'mean','count'])","4158af4d":"# summary of failed_projects\nfailed_projects['pledged_of_goal_usd'].agg(['min', 'median', 'max', 'mean','count'])","87228b59":"failed_but_pledged=failed_projects[failed_projects['pledged_of_goal_usd']>1]\nprint(failed_but_pledged.shape)\nfailed_but_pledged.head(5)","d4bdf806":"top_currencies=kickstarter.groupby(['currency','state'])['state'].count().unstack().sort_values(by=['successful'],ascending=False).head(5)\ntop_currencies","bf999e00":"#normalized by currency\nax=top_currencies.div(top_currencies.sum(axis=1), axis=0).sort_values(by=['successful'], ascending=False).plot.bar(stacked=True, figsize=(18,9))\nax.set_title('State distribution by currency', fontsize=16, weight='bold')\nax.legend(bbox_to_anchor=(1, 0.5))\n#add percentage values on stacked bars\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    if height<=0.01:\n        continue\n    x, y = p.get_xy() \n    ax.text(x+width\/2, \n            y+height\/2, \n            '{:.0f} %'.format(height*100), \n            horizontalalignment='center', \n            verticalalignment='center',\n            fontsize=14)","45b82549":"non_us=kickstarter[kickstarter['country'] != 'US']\nprint(non_us.shape)\nnon_us.head()","9a043c8a":"non_us.groupby(['currency','state'])['state'].count().unstack().sort_values(by='successful', ascending=False)","f8b64096":"kickstarter['goal_category']=pd.cut(kickstarter['usd_goal_real'],[0,2500,10000,25000,100000001], labels=['low', 'medium','high', 'very_high'])\nsuccesful_projects=kickstarter[kickstarter['state']=='successful']\nfailed_projects=kickstarter[kickstarter['state']=='failed']","21ccaca9":"kickstarter['usd_goal_real'].describe().round()","acb6f530":"kickstarter['goal_category'].value_counts()","2476ab16":"goal_success_dist=kickstarter.groupby(['goal_category','state'])['state'].count().unstack().div(\n    kickstarter.groupby(['goal_category','state'])['state'].count().unstack().sum(axis=1), axis=0).sort_values(by=['successful'], ascending=False)\ngoal_success_dist","9b7461c9":"ax = goal_success_dist.plot.bar(stacked=True, figsize=(18,9))\nax.set_title('State distribution by goal groups', fontsize=16, weight='bold')\nax.set_xlabel('Goal category')\n#add percentage values on stacked bars\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    if height<=0.02:\n        continue\n    x, y = p.get_xy() \n    ax.text(x+width\/2, \n            y+height\/2, \n            '{:.0f} %'.format(height*100), \n            horizontalalignment='center', \n            verticalalignment='center',\n            fontsize=14)","429eb7f5":"fig, axes = plt.subplots(1, 2)\nfig.set_size_inches(30,8)\n\n#succesful\nsns.boxplot(data=succesful_projects, x='goal_category', y='pledged_of_goal_usd', ax=axes[0])\naxes[0].set_title('Succesful Projects', fontsize=14)\naxes[0].set_ylabel('Pledged of goal')\naxes[0].set_ylim(1,5)\nfig.suptitle('Money pledged out of goal by goal groups, divided to successful and failed project', fontsize=18, weight='bold')\n\n# failed\nsns.boxplot(data=failed_projects, x='goal_category', y='pledged_of_goal_usd', ax=axes[1])\naxes[1].set_title('Failed Projects', fontsize=14)\naxes[1].set_ylabel('Pledged of goal')\naxes[1].set_ylim(0,1)\n\n#fig.tight_layout()\nplt.show()","c9fe1953":"plt.figure(figsize=(10,8))\n\nsuccess = pd.DataFrame({'0': kickstarter[kickstarter['duration_in_month']==0]['state'].value_counts(normalize=True)})\nsuccess.index.name = 'state'\nfor n in range(1,4):\n    success = pd.concat([success, pd.DataFrame({ str(n) : kickstarter.loc[kickstarter['duration_in_month']==n,:]['state'].value_counts(normalize=True)})], axis=1, sort=False)\n\nax=sns.heatmap(success, cmap='Blues' ,linecolor='k', linewidths=0.2)\nax.set_title('State distribution by project duration (in months)',size=16, weight='bold')\nplt.show()","fa00b2c7":"mask = (success.index == 'successful') | (success.index == 'failed')\nsuccess_or_fail = success.loc[mask,:]\n\nsuccess_or_fail","3a06dfe8":"ax = plt.gca()\n\nsuccess_or_fail.T.plot.bar(width=0.35 ,stacked=True, figsize=(8,7), color=['green','red'], ax=ax)\nttl = ax.set_title('Success & Failed rates by project duration (in months)',size=16, weight='bold')\nttl.set_position([0.5,1.05])\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05), shadow=True, ncol=2)\nplt.show()","07c76808":"plt.figure(figsize=(18,9))\nplt.xticks(np.arange(1, 93, 3))\nduration_success = kickstarter.groupby('project_duration')['is_success'].mean()\nduration_success.index = duration_success.index.days\nax = sns.lineplot(data=duration_success)\n\nax.set_xlabel('Duration of Project (in days)', size=10 , weight='semibold')\nax.set_ylabel('Success rate', size=10 , weight='semibold')\nax.set_title('Success rate by Number of days of project',size=16,weight='bold')\n\nplt.show()","7477e8f0":"plt.figure(figsize=(12,6))\npledged_in_months = kickstarter.groupby(['opening_month','duration_in_month'])['pledged_of_goal_usd'].agg('median').unstack().round(2)\n\nax = sns.barplot(data=pledged_in_months)\n\n#sns.set(style=\"whitegrid\")\nax.set_xlabel('Duration of Project (in months)', size=10 , weight='semibold')\nax.set_ylabel('MEDIAN - % Pledged out of Goal', size=10 , weight='semibold')\nax.set_title('% pledged out of the goal by duration of projects',size=16,weight='bold')\n\nplt.show()","c023404f":"plt.figure(figsize=(12,6))\nax=kickstarter.groupby('opening_month')['usd_pledged_real'].mean().plot.bar(color=sns.color_palette(\"Set1\", desat=0.5))\nax.set_title('Average money pledged by the opening month of the project',size=16, weight='bold')\nax.set_xlabel('Opening month')\nax.set_ylabel('Average money pledged')\nplt.show()","f53df083":"plt.figure(figsize=(12,6))\nax=kickstarter.groupby('opening_month')['is_success'].mean().plot.bar()\nax.set_title('Average success rate by the opening month of the project',size=16, weight='bold')\nplt.show()","7f3b1af8":"plt.figure(figsize=(10,15))\nunder_pledged = kickstarter[kickstarter['pledged_of_goal_usd']<3]\nax = sns.violinplot(x=\"opening_month\", y=\"pledged_of_goal_usd\", data=under_pledged)\nax.set_xlabel('Opening month of the Project', size=10 , weight='semibold')\nax.set_ylabel('MEAN % Pledged out of Goal', size=10 , weight='semibold')\nax.set_title('% pledged out of goal by duration across opening months of projects',size=16, weight='bold')\nplt.show()","063a4668":"plt.figure(figsize=(14,7))\nplt.xticks(np.arange(1, 13, 1))\npledged_in_months = kickstarter.groupby(['opening_month','duration_in_month'])['pledged_of_goal_usd'].mean().unstack().round(2)\npledged_in_months.rename(columns={0:'Less than a month',\n                          1:'Between 1 & 2 months',\n                          2:'Between 2 & 3 months',\n                          3:'More than 3 months'}, \n                          inplace=True)\nax = sns.lineplot(data=pledged_in_months)\nax.legend(loc='center left', bbox_to_anchor=(1, 0.5), fancybox=True, shadow=True)\nax.set_xlabel('Opening month of the Project', size=10 , weight='semibold')\nax.set_ylabel('MEAN - % Pledged out of Goal', size=10 , weight='semibold')\nax.set_title('% pledged out of the goal by duration across opening months of projects',size=16,weight='bold')\nax.set_ylim(bottom=0)\n\nplt.show()","6a48ebbc":"kickstarter['ending_month'] = kickstarter['deadline'].dt.month","f8336450":"plt.figure(figsize=(14,7))\nplt.xticks(np.arange(1, 13, 1))\npledged_in_months = kickstarter.groupby(['ending_month','duration_in_month'])['pledged_of_goal_usd'].mean().unstack().round(2)\npledged_in_months.rename(columns={0:'Less than a month',\n                          1:'Between 1 & 2 months',\n                          2:'Between 2 & 3 months',\n                          3:'More than 3 months'}, \n                          inplace=True)\nax = sns.lineplot(data=pledged_in_months)\nax.legend(loc='center left', bbox_to_anchor=(1, 0.5), fancybox=True, shadow=True)\nax.set_xlabel('Closing month of the Project', size=10 , weight='semibold')\nax.set_ylabel('MEAN - % Pledged out of Goal', size=10 , weight='semibold')\nax.set_title('% pledged out of the goal by duration across closing months of projects',size=16,weight='bold')\nax.set_ylim(bottom=0)\n\nplt.show()","5f480ab9":"kickstarter['is_US'] = (kickstarter.country == 'US')","0354d836":"kickstarter.groupby('is_US')['pledged_of_goal_usd'].mean()","b7ecdf14":"#### relationship between countries & success","64c74507":"projects outside of the us who pledged dollars?","fa4f2cb1":"### Success by the duration of the project","4498ad24":"#### By main categories","f3e3d56a":"##### Since there are no projects outside the US who pledged in dollar$, the state distribution by currency looks the same as by country","aa5a8f61":"#### Lets start exploring the state col to get better understanding of the project success distribution ","a4978263":"### Categorize the goal column","7aa930e4":"##### Hong Kong and Singapore has only ~500 samples so we need to be carefull with our conclusions about them.","0d12bb2d":"#### Even Though Kickstarter fundings are All-or-nothing fundings, we assume that projects similiar to projects that pledged more will have better chances to success.","b40c4b16":"### Check currencies influence","6bd17b60":"### Success by opening month of the project","ab6c8e08":"#### Categories by main categories"}}