{"cell_type":{"65305155":"code","192ec427":"code","2ba080b9":"code","49090ecf":"code","42579199":"code","75f8cc52":"code","ceea7576":"code","380bb9d5":"code","095961c2":"markdown"},"source":{"65305155":"# Constants\nepochs = 1000\nbatch_size = 50","192ec427":"# Get data\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\ndf","2ba080b9":"# Prepare data for training\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.utils import to_categorical\n\ny = np.array(df.pop(\"DEATH_EVENT\"))\nX = df.values\n\nX = X.reshape((-1, 12))\ny = y.reshape((-1, 1))\n              \n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","49090ecf":"# Import keras\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, InputLayer\nfrom tensorflow.keras.callbacks import History","42579199":"# Define the model\nmodel = Sequential()\nhistory = History()\n\nmodel.add(InputLayer(input_shape=(None, 12)))\nmodel.add(Dense(128, activation=\"relu\"))\nmodel.add(Dense(128, activation=\"relu\"))\nmodel.add(Dropout(0.1))\nmodel.add(Dense(128, activation=\"relu\"))\nmodel.add(Dense(1, activation=\"sigmoid\"))","75f8cc52":"# Compile and train model\nmodel.compile(loss=keras.losses.binary_crossentropy,\n              optimizer=keras.optimizers.Adadelta(),\n              metrics=['accuracy'])\n\nmodel.fit(X_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          verbose=1,\n          validation_data=(X_test, y_test),\n          callbacks=[history])","ceea7576":"# Test the model and show loss and accuracy\nfig, ax = plt.subplots()\nax.plot([i+1 for i in range(epochs)], history.history[\"loss\"])\nax.set_title(\"Loss\")\nfig.show()\n\nfig1, ax1 = plt.subplots()\nax1.plot([i+1 for i in range(epochs)], history.history[\"accuracy\"], color=\"C1\")\nax1.set_ylim([0,1])\nax1.set_title(\"Accuracy\")\nfig1.show()\n\nmodel.evaluate(X_test, y_test, verbose=2)","380bb9d5":"# Save the model to the notebook output\nmodel.save(\"\/kaggle\/working\/model.h5\")","095961c2":"# Predicting heart attack deaths with a neural network\nIn this notebook I will try to get the probability of a person dying that had a heart attack using [this dataset](https:\/\/www.kaggle.com\/andrewmvd\/heart-failure-clinical-data) and Keras."}}