{"cell_type":{"083e7ad2":"code","092cd303":"code","2ac9fa9e":"code","c13e011b":"code","0ff3fc3b":"code","11ef22c1":"code","fae8f4a7":"code","8e67c940":"code","b3dcf5ca":"code","f878fcb3":"code","1982421b":"code","f15af1f3":"markdown","5b1e7b8f":"markdown","e5458146":"markdown","56789030":"markdown","d48be864":"markdown","08205707":"markdown","f649300e":"markdown","904ba219":"markdown","96dd91bc":"markdown","83a4c677":"markdown","100fbaa8":"markdown"},"source":{"083e7ad2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport time\nimport xml.etree.ElementTree as ET\nimport geopandas\nimport os\nprint(os.listdir(\"..\/input\"))\ntree = ET.parse('..\/input\/japan-restaurant-database\/getStatsData.xml')\nfile = open('..\/input\/japan-restaurant-database\/getStatsData.xml')\nroot = tree.getroot()","092cd303":"# I made some dictionaries that have the corrisponding codes for XML queries. Some will not be referenced in this program.\nl1 = {}; l2 = {}; l3 = {}; l4 = {}\np=[l1,l2,l3,l4]\natr=['tab','cat01','cat02','area']\nfor k in range(4):\n    for i in root.findall(\".\/\/CLASS_OBJ[@id='{}']\/\/\".format(atr[k])):\n        p[k][i.attrib.get('name')]=i.attrib.get('code')\n        \n# Here I printed out a list of restraunt type here and will use their codes for the querrying.\nprint(l3)\nprefectureNames = list(l4.keys())","2ac9fa9e":"#I didn't use 'area' for my querry as that will be variable\ndef createMap(code):\n    code = str(code)\n    rest = [i for i in root.findall(\".\/\/VALUE[@tab='811'][@cat01='000'][@cat02='{}']\".format(code))]\n    u=[int(i.text) for i in rest]\n    df2 = pd.read_csv('..\/input\/populations\/pop2.csv')\n    df3 = pd.read_csv('..\/input\/cnterdfk\/CTD.csv')\n    pops = df2['pop'].tolist()\n    popsint = [int(i.replace(',', '')) for i in pops]\n    final = pd.DataFrame({\"Population\" : popsint[1:],\n                          \"nam_ja\" : prefectureNames[1:],\n                          \"Value\" : u[1:]})\n    final['PerCapita'] = (final.Value\/final.Population)\n    final.set_index('nam_ja', inplace=True)\n    Japan = geopandas.read_file('..\/input\/japanmap\/japan.geojson')\n    Japan.set_index('nam_ja', inplace=True)\n    Japan['per capita'] = final.PerCapita\n    Japan.plot(column = 'per capita', figsize = (20,20), cmap = 'viridis')","c13e011b":"createMap(17940)","0ff3fc3b":"createMap(17760)","11ef22c1":"createMap(17930)","fae8f4a7":"createMap(17880)","8e67c940":"createMap(17860)","b3dcf5ca":"createMap(17820)","f878fcb3":"createMap(17770)","1982421b":"createMap(17910)","f15af1f3":"I am thinking of making other kernels based on this one in the future. So I created a legend for all variables even the ones held as constants in this kernel.","5b1e7b8f":"# Bars, Cabaret Clubs, and Nightclubs","e5458146":"# Izakaya Pubs, Beer Halls","56789030":"# Udon\/Soba Shops","d48be864":"# Okonomiyaki","08205707":"# Chinese Restaurants","f649300e":"# Ramen Shops","904ba219":"Here is a function I created to make querries to pull values and make a map","96dd91bc":"# Hamburger Restraunts","83a4c677":"# Cafe\/Teahouse","100fbaa8":"**Overview**\n\nThis is my first shared kernel. I used e-stat's API which has a lot of data related to restraunts. Its entirely in Japanese, so if you don't know how to run an XML file through a translator it may be difficult to utilize.\n\nFrom this API I made maps of Japan showing different types of restrauntsby prefecture. I was surprised to see how this industry differs so much regionally!"}}