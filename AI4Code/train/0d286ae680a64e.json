{"cell_type":{"2d0099a2":"code","a975c726":"code","4a70dfd5":"code","d8e97511":"code","0b0145bd":"code","cc6fea81":"code","5962e4ea":"code","aa1fdf2a":"code","f8fd0a9c":"code","630c0627":"code","5fa26ac8":"code","e89ab630":"code","03a0976d":"code","51a70a07":"code","be12192d":"code","f8398246":"code","c47182e7":"code","ff0b8753":"code","69db2ea2":"code","f92e7b1f":"markdown"},"source":{"2d0099a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a975c726":"data = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\ndata.head()","4a70dfd5":"data.corr()","d8e97511":"f,ax = plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(), annot=True, linewidths=.4, fmt=\".1f\", ax=ax)","0b0145bd":"data.head(1)","cc6fea81":"#line plot\ndata.Confirmed.plot(kind=\"line\", color=\"pink\", label=\"Confirmed\")\nplt.legend(loc=\"upper right\")\nplt.show()","5962e4ea":"#scatter plot\n\ndata.plot(kind=\"scatter\", x=\"Confirmed\", y=\"Deaths\", color=\"black\", alpha=0.2)\nplt.xlabel=\"confirmed\"\nplt.ylabel=\"Deaths\"\nplt.title=\"Deaths-Confirmed Corona\"","aa1fdf2a":"#histogram plot\ndata.Recovered.plot(kind=\"hist\",bins=20, color=\"orange\")\nplt.show()","f8fd0a9c":"# user defined func\ndef tuble_exa():\n    t = (\"m\",\"e\",\"r\",\"v\",\"e\")\n    return t\nm,e,r,v,e=tuble_exa()\nprint(m,e,r,v,e)","630c0627":"#lambda func\n\nmulti = lambda m : m**2+m*3\nmulti(3)","5fa26ac8":"#lambda func\n\ncalculator = lambda m,r,v: m**5-r**0*v**3\ncalculator(3,6,4)","e89ab630":"#anonymous func\n\nlistexa={1,3,5,7}\ny = map(lambda x: x**2+5, listexa)\nprint(list(y))","03a0976d":"#iterators\n\ncourse_name=\"DataScience\"\nfirst=iter(course_name)\nprint(next(first),next(first),next(first),next(first))\nprint(*first)","51a70a07":"#zip metodu\n\nindex=[1,2,3,4,5]\ndata=[\"m\",\"e\",\"r\",\"v\",\"e\"]\nzipp = zip(index,data)\nz = list(zipp)\nprint(list(z))","be12192d":"#unzip\nunzipp = zip(*z)\nun1,un2= list(unzipp)\nprint(un1,un2)","f8398246":"#list comprehension\n\nlst = [3,4,5]\nlist_2 = [i*3 for i in lst]\nprint(list_2)","c47182e7":"lstn = [2,4,8,78]\nlstnev = [i+5 if i==3 else i*2 if i>5 else i-3 for i in lstn]\nprint(lstnev)","ff0b8753":"data = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\")\ndata.head()","69db2ea2":"sumdata = sum(data.Confirmed)\/len(data.Confirmed)\nprint(\"Avg of Confirmed\",sumdata)\ndata[\"Teshis\"]=[\"high\" if i>sumdata else \"low\" for i in data.Confirmed]\n\ndata.loc[210:220,[\"Confirmed\", \"Teshis\"]]","f92e7b1f":"# Information\n\nBu veri seti, 2019 yeni koronavir\u00fcs\u00fcnden etkilenen vakalar\u0131n say\u0131s\u0131, \u00f6l\u00fcmler ve iyile\u015fme hakk\u0131nda g\u00fcnl\u00fck d\u00fczeyde bilgiye sahiptir.\n\n\n* Confirmed  - O tarihe kadar toplam do\u011frulanm\u0131\u015f vaka say\u0131s\u0131\n* Deaths  - O tarihe kadar biriken \u00f6l\u00fcm say\u0131s\u0131\n* Recovered  - O tarihe kadar birikmi\u015f geri kazan\u0131lm\u0131\u015f vaka say\u0131s\u0131"}}