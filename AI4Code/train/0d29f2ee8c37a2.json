{"cell_type":{"85b03097":"code","a94e7b35":"code","60087428":"code","ff749fb8":"code","0caf734a":"code","588941d8":"code","955b5f60":"code","b684027c":"code","ec396456":"code","7d5c51f6":"code","9195beed":"code","c382997a":"code","6c09848e":"code","9b8fdde1":"code","3358e8be":"code","d0bed3e2":"code","337753d0":"code","6821f52d":"code","ad56adc4":"code","382f045a":"code","051ccca5":"code","4265c8b3":"code","6d7a7587":"code","6ab55b4a":"code","b99865e1":"code","8c669110":"code","6e4bdb78":"code","2ea631cb":"markdown","28628a17":"markdown","cc0d7417":"markdown","5a22b819":"markdown","8f253352":"markdown","7fa722cd":"markdown","03d8e4a2":"markdown","120c158a":"markdown","ad5d88e9":"markdown","7c41b399":"markdown","54f14ced":"markdown","56081efb":"markdown","fa9a9770":"markdown"},"source":{"85b03097":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt ","a94e7b35":"train_mnist = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_train.csv')\ntest_mnist = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_test.csv')","60087428":"y_test = test_mnist.iloc[:, 0]","ff749fb8":"y_train = train_mnist.iloc[:, 0]","0caf734a":"train_mnist.drop('label', axis='columns', inplace=True)\ntest_mnist.drop('label', axis='columns', inplace=True)","588941d8":"x_train = train_mnist.iloc[:, :]\nx_test = test_mnist.iloc[:, :]","955b5f60":"from sklearn.preprocessing import MinMaxScaler","b684027c":"normalize = MinMaxScaler()","ec396456":"x_train = normalize.fit_transform(x_train)\nx_test = normalize.fit_transform(x_test)","7d5c51f6":"import tensorflow as tf\nfrom tensorflow import keras","9195beed":"model = keras.models.Sequential([\n    # input layer\n    keras.layers.Dense(300,activation='relu' , input_shape=(784,)),\n    # first hidden layer\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(200, activation='relu'),\n    # second hidden layer\n    keras.layers.Dropout(0.3),\n    #keras.layers.Dense(50, activation='relu'),\n    #keras.layers.Dropout(0.2),\n    # output layer\n    keras.layers.Dense(10, activation='softmax')\n])","c382997a":"model.summary()","6c09848e":"model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","9b8fdde1":"#early_stop = keras.callbacks.EarlyStopping(patience=5, restore_best_weights=True)","3358e8be":"result_model = model.fit(x_train, y_train, epochs=12, validation_split=0.2, batch_size=128) #, callbacks=early_stop)","d0bed3e2":"hist = result_model.history","337753d0":"loss = hist['loss']\nval_loss = hist['val_loss']\nplt.plot(loss)\nplt.plot(val_loss)","6821f52d":"acc = hist['accuracy']\nval_acc = hist['val_accuracy']\nplt.plot(acc)\nplt.plot(val_acc)","ad56adc4":"plt.imshow(x_train[0].reshape(28, 28 ))\nprint(y_train[0])","382f045a":"predict = model.predict(x_test)","051ccca5":"plt.imshow(x_test[10].reshape(28, 28))\nprint(np.argmax(predict[10]))","4265c8b3":"y_test[10]","6d7a7587":"from sklearn.decomposition import PCA","6ab55b4a":"pca = PCA(n_components=3)","b99865e1":"x_train_pca = pca.fit_transform(x_train)","8c669110":"import seaborn as sns","6e4bdb78":"sns.heatmap(pca.components_[2, :].reshape(28, 28),cmap='gray_r')","2ea631cb":"## TASK2: Normalize The x_train And x_test ","28628a17":"### As You See x_test[10] our model guees class 3 and true label is 3 ","cc0d7417":"### If Look At DataSets You See Label That Represent To Cloth See On Data Description \n### We Remove It And Put It On Label_test And label_train \n### Pay Attention Label Does Not Required The Normalize But x_test And x_train Need To Normalize By MinMax() Function. ","5a22b819":"## TASK1: Load Data","8f253352":"## If You Need To Change The Range Not Be 0 And 1 Set feature_range=0, 1","7fa722cd":"## How Many Hidden Layer Actualy We Need It :\n* depends on problem, but typiclly (1 to 5)\n* nerual per hidden layer depends on problem, but typiclly (10 to 100)","03d8e4a2":"### If You Need EarlyStopping Using It Like Below","120c158a":"## TASK3: Creat Model:","ad5d88e9":"# Another Tip You Can Use It PCA ","7c41b399":"## Good Let's Remove The Label From Both train And test  ","54f14ced":"### Total params: 42,260\n### Trainable params: 42,260\n### Non-trainable params: 0\n\n### if you creat model see this param said all data and how many we use it for train and how many not use in train\n***784 * 500 + 500 = 392500 #  \n500 * 200 + 200 = 100200 #    \n200 * 10 + 10 = 2010 # ***  ","56081efb":"## Final Task : Prediction:","fa9a9770":"### Why We choose output layer has 10 nerual :\n### Because We Have 10 Class At All \n### Number Of Nerual In Outlayer Depends On Data:\n## =======================================================================================\n### for binary classification 1 nerual is enough \n### for multi label binary classification 1 per Label nerual is enough\n### for multiclass classification 1 per class nerual is enough"}}