{"cell_type":{"6ab2f3f1":"code","24d321ee":"code","2d1d876f":"code","f9d8aebc":"code","c60cc654":"code","23893a6a":"code","180597f6":"code","a1a1b922":"code","e39fa5b9":"code","32563d5c":"code","8adf059d":"code","a0c9da72":"code","516fc8e3":"code","62c2c577":"code","9ce34eed":"code","0625f639":"code","9dba4fd1":"code","20922f34":"code","67207230":"code","5bb29b30":"code","6b2de672":"code","cf75f4e3":"code","7c1626ef":"code","316a7bec":"code","e82955c1":"code","b0c7e01c":"code","e482705b":"code","2692bd8e":"code","66f8e615":"code","094d965e":"code","08dc4cf8":"code","8f1fdee2":"code","95ea721f":"code","a01ecbeb":"code","8102d1e0":"code","f3c8ad8d":"code","0ed5ca91":"code","6c83b284":"code","bc3dcb99":"code","cf08012f":"code","0124a4e9":"code","0646670e":"code","2bdebf1b":"code","8d43960d":"code","cbdfabbf":"code","e674524f":"code","cbdc42cf":"code","eb988231":"code","d988f6b6":"code","1b0c4b62":"code","f0f4087f":"code","b306ad5a":"code","f7068f96":"code","2888efc8":"code","b1a3ee70":"code","44bfda3e":"code","82acc102":"code","01ff92d2":"code","749d2813":"code","088f764a":"code","a260f20f":"code","53cdfde1":"code","778c01e4":"code","74ba8ec0":"code","e7c9584d":"code","83597bbc":"code","b76a9e10":"code","0ba86414":"code","0ceb943f":"code","92be1aa3":"code","8f969236":"code","b34d25ec":"code","b6213364":"code","629a530b":"code","c8548aa3":"code","9b5fe167":"code","0c44047c":"code","a8f06b6a":"code","f598d93f":"code","48d196ab":"code","1332ecd7":"code","6654a018":"code","b50de456":"code","634bc563":"code","f2b1c0d4":"code","46449b37":"code","a5af317e":"code","5a5e7063":"code","f3af33c2":"code","3eb1dba9":"code","74933360":"code","96132f59":"code","df1c15e0":"code","e46d0add":"code","2c4144a4":"code","6c201b03":"code","ae394a68":"code","76a1d6b2":"code","8386ef75":"code","b8c86d1b":"code","a7659302":"code","e71a292e":"code","4147badf":"markdown","8439e126":"markdown","6b5fef29":"markdown","94b8385d":"markdown","57e2921b":"markdown","4f93c4a3":"markdown","a84b113f":"markdown","1b857210":"markdown","8dbec7d6":"markdown","f299a04d":"markdown","7d46d0dc":"markdown","58d60876":"markdown","146896d6":"markdown","e42b6f89":"markdown","d90d2d12":"markdown","2613848d":"markdown","42108a91":"markdown","803cb62a":"markdown","cdf0c092":"markdown","3c30543b":"markdown","6dc260b1":"markdown","626b8d42":"markdown","16725fc5":"markdown","56226cee":"markdown","3b605ade":"markdown","802737b1":"markdown","baab1a5a":"markdown","514872b9":"markdown","2e98490f":"markdown","8e19091e":"markdown","aa9a6851":"markdown","7b74f118":"markdown","aeac8897":"markdown","af7784f9":"markdown","b6e8bf68":"markdown","533d364e":"markdown","1c65dae9":"markdown","add83e6a":"markdown","71530911":"markdown","a8bb80b5":"markdown","75a14812":"markdown","ffe6ff20":"markdown","9ec012c8":"markdown","50f8da47":"markdown","9f19dbd8":"markdown","82dc713f":"markdown","da7ddf71":"markdown","a9afa55c":"markdown","911052a6":"markdown","14c7590a":"markdown","cf533f09":"markdown","00f87a91":"markdown","cd1b700a":"markdown","87831f44":"markdown","4cb3425b":"markdown","bb8ec8fd":"markdown","9d8d6cff":"markdown","7dcb0255":"markdown","466e3550":"markdown","9238e308":"markdown","5980117e":"markdown","3dd3af39":"markdown","6f63a10f":"markdown","15c45be7":"markdown","3d0679f0":"markdown","c8272de2":"markdown","622ed785":"markdown","46a6986b":"markdown","b7f63052":"markdown","5b6ada70":"markdown","667d9764":"markdown","31b4c0b3":"markdown","1e07481b":"markdown","b3896690":"markdown","f3d10a76":"markdown","1ed83e8d":"markdown","38f00b90":"markdown","baea8901":"markdown","da41e1a3":"markdown","283d2fb5":"markdown","9b08a324":"markdown","d6a0e152":"markdown","41e6bdc0":"markdown","c2e55efd":"markdown","1c75ba66":"markdown","115b627b":"markdown","e643a286":"markdown","31252fe6":"markdown","fe4e0309":"markdown","693a3a31":"markdown","35a159ff":"markdown","d2c8fd93":"markdown","e0baa041":"markdown","4e0855fd":"markdown","1e5667b1":"markdown","de21c264":"markdown"},"source":{"6ab2f3f1":"#Importing the packages\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom pandas import Series,DataFrame\nimport re\nimport datetime\nimport seaborn as sns\nimport csv as csv\nsns.set()","24d321ee":"#Importing the datasets\nelectricity1= pd.read_csv('..\/input\/powergrind\/EIA930_BALANCE_2019_Jan_Jun.csv',header=0)\nelectricity2= pd.read_csv('..\/input\/powergrind\/EIA930_BALANCE_2019_Jul_Dec (2).csv',header=0)","2d1d876f":"#Concatinating both the datasets\nelectricity =pd.concat([electricity1,electricity2])\nelectricity.fillna(0) ## fillna with 0","f9d8aebc":"# Putting all the columns that have numeric entries into a list. \nnum_var = ['Hour Number','Demand Forecast (MW)', 'Demand (MW)', 'Net Generation (MW)', 'Total Interchange (MW)', \n 'Sum(Valid DIBAs) (MW)', 'Demand (MW) (Imputed)', 'Net Generation (MW) (Imputed)', 'Demand (MW) (Adjusted)', \n 'Net Generation (MW) (Adjusted)', 'Net Generation (MW) from Coal', 'Net Generation (MW) from Natural Gas', \n 'Net Generation (MW) from Nuclear', 'Net Generation (MW) from All Petroleum Products', \n 'Net Generation (MW) from Hydropower and Pumped Storage', 'Net Generation (MW) from Solar', \n 'Net Generation (MW) from Wind', 'Net Generation (MW) from Other Fuel Sources', \n 'Net Generation (MW) from Unknown Fuel Sources']\n\n# Ensuring all numeric entries are floats (for future calculations) and removing any non-numeric symbols. \nfor i in num_var:\n    electricity[i] = electricity[i].astype(str)\n    electricity[i] = electricity[i].replace({',':''}, regex=True)\n    electricity[i] = electricity[i].astype(float)","c60cc654":" electricity.info()","23893a6a":"electricity['Balancing Authority'].unique()  ## get all the name Balancing Authority name","180597f6":"#Total no. of balancing authorities = 65\nelectricity['Balancing Authority'].nunique()","a1a1b922":"electricity['Data Date']=pd.to_datetime(electricity['Data Date'])\nelectricity['day_of_week']=electricity['Data Date'].dt.weekday_name\nelectricity['monthly']=pd.PeriodIndex(electricity['Data Date'],freq='M')\nelectricity['quarter']=pd.PeriodIndex(electricity['Data Date'],freq='Q')\nelectricity.rename(columns={'Total Interchange (MW)':'tinterchange'},inplace=True) ## rename the column for later caculation\nelectricity","e39fa5b9":"electricity1=electricity[electricity.tinterchange < 0] ## GET list of balancing authority with negative total interchange\nelectricity1.head()","32563d5c":"###\tDuring their peak power usage?\nelectricity2=electricity1.groupby('Hour Number')['Net Generation (MW)', 'Demand (MW)','tinterchange'].mean()\nelectricity2.plot.line(xticks=range(1,25),use_index=True,figsize=(16,5))\n####demand equals net generation minus total interchange. ","8adf059d":"### Reindex weekday to display from Mon-Sun\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nelectricity32=electricity1.groupby('day_of_week')['Demand (MW)'].mean()\nweekday=electricity32.reindex(cats).astype(float)\nweekday.plot(figsize=(16,5),title='Demand (MW) BY WEEKDAY') ## demand changing during weekday","a0c9da72":"electricity33=electricity1.groupby('monthly')['Demand (MW)'].mean()\nelectricity33.plot.line(use_index=True,figsize=(16,5),title='Demand (MW) BY MONTH')## demand changing during months","516fc8e3":"electricity34=electricity1.groupby('quarter')['Demand (MW)'].mean()\nelectricity34.plot.line(use_index=True,figsize=(16,5),title='Demand (MW) BY QUARTER')## demand changing during quarters","62c2c577":"electricity20=electricity.groupby('Balancing Authority')['tinterchange', 'Demand (MW)', 'Net Generation (MW)'].mean().sort_values(by=['tinterchange'], ascending=False)\nelectricity20.tail(10) ## top 10 negative total interchanges","9ce34eed":"electricity3=electricity[electricity['Balancing Authority'].isin(['PGE','ISNE','NYIS','MISO','CISO'])] \nelectricity3   ## group top 5 negative inter change balancing authority\n","0625f639":"electricity4=electricity3.groupby(['Balancing Authority','Hour Number'])['tinterchange', 'Demand (MW)', 'Net Generation (MW)'].mean()\n## group by balancing authority and hour number so dataframe can get ready for plot\nelectricity4.reset_index(inplace=True)\nsns.factorplot(x='Hour Number',y='tinterchange',col='Balancing Authority',col_wrap=3,data=electricity4,kind=\"bar\",size=10,aspect=0.7,color='g')","9dba4fd1":"electricity6=electricity3.groupby(['Balancing Authority','quarter'])['Net Generation (MW)', 'Demand (MW)','tinterchange'].mean()\nelectricity6.reset_index(inplace=True)\nwith sns.axes_style('white'):\n    sns.factorplot(x='quarter',y='tinterchange',col='Balancing Authority',data=electricity6,kind=\"bar\",size=6,aspect=.5)","20922f34":"electricity5=electricity3.groupby(['Balancing Authority','Data Date'])['Net Generation (MW)', 'Demand (MW)','tinterchange'].mean()\nelectricity5.head()","67207230":"electricity5.loc['CISO'].plot(kind='line',label='CISO',title='Balancing Authority(CISO)',figsize=(16,5))\nplt.legend(loc='upper left')   ###Balancing Authority(CISO)","5bb29b30":"electricity5.loc['MISO'].plot(kind='line',label='MISO',title='Balancing Authority(MISO)',figsize=(16,5))\nplt.legend(loc='center left')  ### polt Balancing Authority(MISO)","6b2de672":"electricity5.loc['NYIS'].plot(kind='line',label='NYIS',title='Balancing Authority(NYIS)',figsize=(16,5))\nplt.legend(loc='center left')  ### polt Balancing Authority(NYIS)","cf75f4e3":"electricity5.loc['ISNE'].plot(kind='line',label='ISNE',title='Balancing Authority(ISNE)',figsize=(16,5))\nplt.legend(loc='center left') ### polt Balancing Authority(ISNE)","7c1626ef":"electricity5.loc['PGE'].plot(kind='line',label='PGE',title='Balancing Authority(PGE)',figsize=(16,5))\nplt.legend(loc='best') ### polt Balancing Authority(PGE)","316a7bec":"electricity7=electricity3.groupby(['Balancing Authority','day_of_week'])['Net Generation (MW)', 'Demand (MW)','tinterchange'].mean()\n## groupby weekday with balacing authirity with net generation,demand,total interchange\nelectricity7.reset_index(inplace=True)\n## plot top 5 balcaing authirity with total interchange during weekday \ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    sns.factorplot(x='day_of_week',y='tinterchange',col='Balancing Authority',col_wrap=3,data=electricity7,kind=\"bar\",size=7,aspect=.8,order=cats)","e82955c1":"electricity.rename(columns={'tinterchange':'Total Interchange (MW)'},inplace=True)\ncomb = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']\ncomb","b0c7e01c":"top10 = comb.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).head(10)\ntop10","e482705b":"top10.plot.bar(figsize=(12,5));\nplt.ylabel(\"Mean MegaWatts (MW) Per Hour\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Top 10 Balancing Authorities with Positive Net Interchanges\")","2692bd8e":"top10Proportion = top10\ntop10Proportion['ProportionNetGen'] = top10Proportion['Total Interchange (MW)']\/top10Proportion['Net Generation (MW)']\ntop10Proportion['Proportiondemand'] = top10Proportion['Total Interchange (MW)']\/top10Proportion['Demand (MW)']\ntop10Proportion","66f8e615":"ProportionNetGen = top10Proportion['ProportionNetGen'].tolist()\nProportionDemand = top10Proportion['Proportiondemand'].tolist()\nfig = plt.subplots(figsize=(10, 6))\nplt.bar(np.arange(len(ProportionNetGen)), ProportionNetGen, width=0.7, color='b', label='Proportion Net Gen to Total Interchange')\nplt.bar(np.arange(len(ProportionDemand)), ProportionDemand, width=0.5, color='r', alpha=0.5, label='Proportion Demand to Total Interchange')\nplt.xticks(np.arange(10), top10.index.tolist(), rotation='vertical')\nplt.ylabel(\"Ratio of Total Interchange\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Proportion of Total Interchange (Balancing Authorities with Top 10 Total Interchange)\")\nplt.legend()","094d965e":"# Finding the top 10 balancing authorities with negative interchanges.\nbottom10 = comb.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).tail(10)\nbottom10","08dc4cf8":"bottom10.plot.bar(figsize=(12,5));\nplt.ylabel(\"Mean MegaWatts (MW) Per Hour\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Top 10 Balancing Authorities with Negative Net Interchanges\")","8f1fdee2":"bottom10Proportion = bottom10\nbottom10Proportion['ProportionNetGen'] = bottom10Proportion['Total Interchange (MW)']\/bottom10Proportion['Net Generation (MW)']\nbottom10Proportion['Proportiondemand'] = bottom10Proportion['Total Interchange (MW)']\/bottom10Proportion['Demand (MW)']","95ea721f":"ProportionNetGenBottom = bottom10Proportion['ProportionNetGen'].tolist()\nProportionDemandBottom = bottom10Proportion['Proportiondemand'].tolist()\nfig = plt.subplots(figsize=(10, 6))\nplt.bar(np.arange(len(ProportionNetGenBottom)), ProportionNetGenBottom, width=0.7, color='b', label='Proportion Net Gen to Total Interchange')\nplt.bar(np.arange(len(ProportionDemandBottom)), ProportionDemandBottom, width=0.5, color='r', alpha=0.5, label='Proportion Demand to Total Interchange')\nplt.xticks(np.arange(10), bottom10.index.tolist(), rotation='vertical')\nplt.ylabel(\"Ratio of Total Interchange\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Proportion of Total Interchange (Balancing Authorities with Bottom 10 Total Interchange)\")\nplt.legend()","a01ecbeb":"combSource = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Net Generation (MW) from Coal', \n                                                         'Net Generation (MW) from Natural Gas', \n                                                         'Net Generation (MW) from Nuclear', \n                                                         'Net Generation (MW) from All Petroleum Products', \n                                                         'Net Generation (MW) from Hydropower and Pumped Storage']\n\n# Finding the top 10 balancing authorities with positive interchanges.\ntop10Sources = (combSource.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).head(10)).fillna(value=0)\ntop10Sources.plot.bar(figsize=(12,5));\nplt.ylabel(\"MW per Hour Produced\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Total Interchange and Energy Source (MW) for Balancing Authorities with the Top 10 Total Interchanges\")","8102d1e0":"top10Sources","f3c8ad8d":"from statistics import stdev\nalldata = []\nfor i in top10Sources.index.tolist():\n    # Excluding the first value as that is the total interchange.  All other values are from energy generation sources. \n    data = (top10Sources.loc[i][1:].tolist()\/top10Sources.loc[i][1:].sum()).tolist()\n    data2 = []\n    for i in data:\n        # An enery source must contribute to at least 5% of the balancing authority's net generation. \n        if i > 0.05:\n            i *= 100\n            data2.append(i)\n    for i in data2:\n        if len(data2)==1:\n            alldata.append(data2[0])\n        elif len(data2)==0:\n            print('There was an error.')\n        else:       \n            std_dev = stdev(data2)\n            alldata.append(std_dev)\navg_std_dev = sum(alldata)\/len(alldata)\navg_std_dev\n# The below is the whole percentage. ","0ed5ca91":"# Finding the bottom 10 balancing authorities with negative interchanges.\nbottom10Sources = (combSource.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).tail(10)).fillna(value=0)\nbottom10Sources.plot.bar(figsize=(12,5));\nplt.ylabel(\"MW per Hour Produced\")\nplt.xlabel(\"Balancing Authority\")\nplt.title(\"Total Interchange and Energy Source (MW) for Balancing Authorities with the Bottom 10 Total Interchanges\")","6c83b284":"# I imported stdev before. \nalldata = []\nfor i in bottom10Sources.index.tolist():\n    # Excluding the first value as that is the total interchange.  All other values are from energy generation sources. \n    data = (bottom10Sources.loc[i][1:].tolist()\/bottom10Sources.loc[i][1:].sum()).tolist()\n    data2 = []\n    for i in data:\n        # An enery source must contribute to at least 5% of the balancing authority's net generation. \n        if i > 0.05:\n            i *= 100\n            data2.append(i)\n    for i in data2:\n        if len(data2)==1:\n            alldata.append(data2[0])\n        elif len(data2)==0:\n            print('There was an error.')\n        else:       \n            std_dev = stdev(data2)\n            alldata.append(std_dev)\navg_std_dev = sum(alldata)\/len(alldata)\navg_std_dev\n# The below is the whole percentage. ","bc3dcb99":"gen_only=electricity[electricity['Balancing Authority'].isin(['DEAA','EEI','GRID','GRIF','GRMA','GWA','HGMA','SEPA','WWA','YAD'])]\ngen_only_bas = gen_only.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']\ngen_only_bas_mean = gen_only_bas.mean().sort_values(by=['Total Interchange (MW)'], ascending=False)\ngen_only_bas_mean","cf08012f":"# Creating lists of the generation-only balancing authorities and the top 10 balancing authorities for inclusion in the \n# following chart. \ngen_only_bas_mean_list = []\nfor i in range(len(gen_only_bas_mean)):\n    gen_only_bas_mean_list.append(gen_only_bas_mean['Total Interchange (MW)'][i])\n\ntop10_bas_mean_list = []\nfor i in range(len(top10)):\n    top10_bas_mean_list.append(top10['Total Interchange (MW)'][i])\n\nplt.figure(figsize=(10,6))\n\nplt.bar(np.arange(len(top10_bas_mean_list)), top10_bas_mean_list, width=0.7, color='b', label='Top 10 Balancing Authorities (MW)')\nplt.bar(np.arange(len(gen_only_bas_mean_list)), gen_only_bas_mean_list, width=0.5, color='r', alpha=0.5, label='Generating-Only Balancing Authorities (MW)')\n\nplt.xticks(np.arange(len(top10_bas_mean_list)), [\"#{}\".format(i) for i in range(1,11)])\n\nplt.ylabel(\"MegaWatts (MW) of Electricity Interchanged\")\nplt.xlabel(\"Top Producer In Each Category\")\nplt.title(\"Total Interchange for Both Overall and Generating-Only Balancing Authorities\")\n\nplt.legend()\nplt.show()","0124a4e9":"#Setting up the latitudes and longitudes \nelectricity.loc[electricity['Balancing Authority'] == 'ERCO', 'lon'] = -99.901  \nelectricity.loc[electricity['Balancing Authority'] == 'ERCO', 'lat'] = 31.968  \nelectricity.loc[electricity['Balancing Authority'] == 'PJM', 'lon'] = -77.1945   \nelectricity.loc[electricity['Balancing Authority'] == 'PJM', 'lat'] = 41.2033 \nelectricity.loc[electricity['Balancing Authority'] == 'BANC', 'lon'] = -119.4179   \nelectricity.loc[electricity['Balancing Authority'] == 'BANC', 'lat'] = 36.7783\nelectricity.loc[electricity['Balancing Authority'] == 'CISO', 'lon'] = -119.4179   \nelectricity.loc[electricity['Balancing Authority'] == 'CISO', 'lat'] = 36.7783\nelectricity.loc[electricity['Balancing Authority'] == 'LDWP', 'lon'] = -119.4179   \nelectricity.loc[electricity['Balancing Authority'] == 'LDWP', 'lat'] = 36.7783\nelectricity.loc[electricity['Balancing Authority'] == 'BPAT', 'lon'] = -120.7401   \nelectricity.loc[electricity['Balancing Authority'] == 'BPAT', 'lat'] = 47.7511\nelectricity.loc[electricity['Balancing Authority'] == 'PGE', 'lon'] = -120.7401   \nelectricity.loc[electricity['Balancing Authority'] == 'PGE', 'lat'] = 47.7511\nelectricity.loc[electricity['Balancing Authority'] == 'NWMT', 'lon'] = -120.7401   \nelectricity.loc[electricity['Balancing Authority'] == 'NWMT', 'lat'] = 47.7511\nelectricity.loc[electricity['Balancing Authority'] == 'IPCO', 'lon'] = -120.7401   \nelectricity.loc[electricity['Balancing Authority'] == 'IPCO', 'lat'] = 47.7511\nelectricity.loc[electricity['Balancing Authority'] == 'SRP', 'lon'] = -111.0937   \nelectricity.loc[electricity['Balancing Authority'] == 'SRP', 'lat'] = 34.0489\nelectricity.loc[electricity['Balancing Authority'] == 'SC', 'lon'] = -79.0193   \nelectricity.loc[electricity['Balancing Authority'] == 'SC', 'lat'] = 35.7596\nelectricity.loc[electricity['Balancing Authority'] == 'DUK', 'lon'] = -79.0193   \nelectricity.loc[electricity['Balancing Authority'] == 'DUK', 'lat'] = 35.7596\nelectricity.loc[electricity['Balancing Authority'] == 'CPLE', 'lon'] = -79.0193   \nelectricity.loc[electricity['Balancing Authority'] == 'CPLE', 'lat'] = 35.7596\nelectricity.loc[electricity['Balancing Authority'] == 'MISO', 'lon'] = -94.6859   \nelectricity.loc[electricity['Balancing Authority'] == 'MISO', 'lat'] = 46.7296\nelectricity.loc[electricity['Balancing Authority'] == 'NYIS', 'lon'] = -74.0060   \nelectricity.loc[electricity['Balancing Authority'] == 'NYIS', 'lat'] = 40.7128\nelectricity.loc[electricity['Balancing Authority'] == 'ISNE', 'lon'] = -70.8227   \nelectricity.loc[electricity['Balancing Authority'] == 'ISNE', 'lat'] = 43.9654\nelectricity.loc[electricity['Balancing Authority'] == 'SWPP', 'lon'] = -98.4842   \nelectricity.loc[electricity['Balancing Authority'] == 'SWPP', 'lat'] = 39.0119\nelectricity.loc[electricity['Balancing Authority'] == 'SOCO', 'lon'] = -86.9023   \nelectricity.loc[electricity['Balancing Authority'] == 'SOCO', 'lat'] = 32.3182\nelectricity.loc[electricity['Balancing Authority'] == 'FPL', 'lon'] = -81.5158   \nelectricity.loc[electricity['Balancing Authority'] == 'FPL', 'lat'] = 27.6648\nelectricity.loc[electricity['Balancing Authority'] == 'TVA', 'lon'] = -86.5804   \nelectricity.loc[electricity['Balancing Authority'] == 'TVA', 'lat'] = 35.5175\n","0646670e":"#Grouping by balancing authorities\n\nc_elec = electricity.groupby('Balancing Authority')['Balancing Authority','Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)', 'lon', 'lat']\n\n#Top 5 with positive interchange\ninter = c_elec.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).head(5)\ninter","2bdebf1b":"#Bar chart\ninter[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']].plot.bar(figsize=(16,5));\nplt.title('Top 5 for total positive interchange');","8d43960d":"#Top 5 with negative interchange\n\nintertail = c_elec.mean().sort_values(by=['Total Interchange (MW)'], ascending=False).tail(5)\nintertail","cbdfabbf":"intertail[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']].plot.bar(figsize=(16,5));\nplt.title('Top 5 for total negative interchange');","e674524f":"#Top 5 based on demand\ndem = c_elec.mean().sort_values(by=['Demand (MW)'], ascending=False).head(5)\ndem[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']].plot.bar(figsize=(16,5));\nplt.title('Top 5 based on demand');","cbdc42cf":"#Top 5 based on generation\n\ngen = c_elec.mean().sort_values(by=['Net Generation (MW)'], ascending=False).head(5)\ngen[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)']].plot.bar(figsize=(16,5));\nplt.title('Top 5 based on generation');","eb988231":"# Now looking at different sources of energy. \n\n#Top 5 for coal\n\ncoal = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Coal']\ncoal5 = coal.mean().sort_values(by=['Net Generation (MW) from Coal'], ascending=False).head(5)\ncoal5.plot.bar(figsize=(16,5));\nplt.title('Coal');","d988f6b6":"#Top 5 for natural gas\n\ngas = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Natural Gas']\ngas5 = gas.mean().sort_values(by=['Net Generation (MW) from Natural Gas'], ascending=False).head(5)\ngas5.plot.bar(figsize=(16,5));\nplt.title('Natural Gas');","1b0c4b62":"#Top 5 for nuclear energy\n\nnuc = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Nuclear']\nnuc5 = nuc.mean().sort_values(by=['Net Generation (MW) from Nuclear'], ascending=False).head(5)\nnuc5.plot.bar(figsize=(16,5));\nplt.title('Nuclear Energy');","f0f4087f":"#Top 5 for all petroleum based energy sources\n\npetro = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from All Petroleum Products']\npetro5 = petro.mean().sort_values(by=['Net Generation (MW) from All Petroleum Products'], ascending=False).head(5)\npetro5.plot.bar(figsize=(16,5));\nplt.title('All petroleum based energy sources');","b306ad5a":"#Top 5 for hydropower and pumped storage\n\nhydro = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Hydropower and Pumped Storage']\nhydro5 = hydro.mean().sort_values(by=['Net Generation (MW) from Hydropower and Pumped Storage'], ascending=False).head(5)\nhydro5.plot.bar(figsize=(16,5));\nplt.title('Hydropower and pumped storage');","f7068f96":"#Top 5 for solar energy\n\nsolar = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Solar', 'lon','lat']\nsolar5 = solar.mean().sort_values(by=['Net Generation (MW) from Solar'], ascending=False).head(5)\nsolar5[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)','Net Generation (MW) from Solar']].plot.bar(figsize=(16,5));\nplt.title('Solar energy');","2888efc8":"#Top 5 for wind energy\n\nwind = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Wind','lon','lat']\nwind5 = wind.mean().sort_values(by=['Net Generation (MW) from Wind'], ascending=False).head(5)\nwind5[['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)','Net Generation (MW) from Wind']].plot.bar(figsize=(16,5));\nplt.title('Wind energy');","b1a3ee70":"#Top 5 for other fuel sources\n#\n\nother = electricity.groupby('Balancing Authority')['Total Interchange (MW)', 'Demand (MW)', 'Net Generation (MW)',\n                                                         'Net Generation (MW) from Other Fuel Sources']\nother5 = other.mean().sort_values(by=['Net Generation (MW) from Other Fuel Sources'], ascending=False).head(5)\nother5.plot.bar(figsize=(16,5));\nplt.title('Other fuel sources');","44bfda3e":"# Reading a csv file that matches balancing authorities with regions. \nregions_xls = pd.read_csv(\"..\/input\/regions\/regions.csv\")\nregions_xls[:5]","82acc102":"# Identifying the number of balancing authorities per region. \nregion_count = regions_xls.groupby(['Region'])['Balancing Authority'].count()\nregion_count","01ff92d2":"# Creating a function that returns a list of the balancing authorities in a region. \ndef ba_calc(series):\n    BAs = []\n    for i in range(len(series)):\n        BAs.append(series.values[i])\n    return BAs\n\n# Testing the above function on the California region. \nCalifornia_BAs = regions_xls.loc[regions_xls['Region'] == 'California']['Balancing Authority']\nba_calc(California_BAs)","749d2813":"# A dataframe of all 65 balancing authorities and their Total Interchange, Demand, and Net Generation, in MW. \n# The dataframe is ordered by the greatest Total Interchange. \nordered = comb.mean().sort_values(by=['Total Interchange (MW)'], ascending=False)\nordered[0:67]","088f764a":"# Identifying the balancing authorities for each region. \nCalifornia_BAs = regions_xls.loc[regions_xls['Region'] == 'California']['Balancing Authority']\nCalifornia = ba_calc(California_BAs)\nCarolinas_BAs = regions_xls.loc[regions_xls['Region'] == 'Carolinas']['Balancing Authority']\nCarolinas = ba_calc(Carolinas_BAs)\nCentral_BAs = regions_xls.loc[regions_xls['Region'] == 'Central']['Balancing Authority']\nCentral = ba_calc(Central_BAs)\nFlorida_BAs = regions_xls.loc[regions_xls['Region'] == 'Florida']['Balancing Authority']\nFlorida = ba_calc(Florida_BAs)\nMid_Atl_BAs = regions_xls.loc[regions_xls['Region'] == 'Mid-Atlantic']['Balancing Authority']\nMid_Atlantic = ba_calc(Mid_Atl_BAs)\nMidwest_BAs = regions_xls.loc[regions_xls['Region'] == 'Midwest']['Balancing Authority']\nMidwest = ba_calc(Midwest_BAs)\nNW_BAs = regions_xls.loc[regions_xls['Region'] == 'Northwest']['Balancing Authority']\nNorthwest = ba_calc(NW_BAs)\nSE_BAs = regions_xls.loc[regions_xls['Region'] == 'Southeast']['Balancing Authority']\nSoutheast = ba_calc(SE_BAs)\nSW_BAs = regions_xls.loc[regions_xls['Region'] == 'Southwest']['Balancing Authority']\nSouthwest = ba_calc(SW_BAs)","a260f20f":"# Correcting two items with the California region to ensure it can fit on the final chart. \nCalifornia_Corrected = ordered.loc[California]['Total Interchange (MW)'].tolist()\n# The first entry is set to 5900 so that number line to final value appears on chart. \nCalifornia_Corrected[0]=5900\n# The second entry is corrected to the actual value.  We are not sure why, but certain values appear as NaN when they\n# have values that are othewise unremarkable from the other entries in the dataset. \nCalifornia_Corrected[1]=-5849.267229\nCalifornia_Corrected","53cdfde1":"# Correcting one item with the Carolinas region to ensure it can fit on the final chart.\nCarolinas_Corrected = ordered.loc[Carolinas]['Total Interchange (MW)'].tolist()\n# The second entry is corrected to the actual value.  We are not sure why, but certain values appear as NaN when they\n# have values that are othewise unremarkable from the other entries in the dataset. \nCarolinas_Corrected[1]=-356.426155\nCarolinas_Corrected","778c01e4":"# Correcting three items with the Northwest region to ensure they can fit on the final chart.\nNorthwest_Corrected = ordered.loc[Northwest]['Total Interchange (MW)'].tolist()\n# The first and third entries are corrected to the actual value.  We are not sure why, but certain values appear as \n# NaN when they have values that are othewise unremarkable from the other entries in the dataset. \nNorthwest_Corrected[0]=-545.019740\nNorthwest_Corrected[2]=657.240858\n# The first entry is set to 5900 so that number line to final value appears on chart. \nNorthwest_Corrected[1]=5900\nNorthwest_Corrected","74ba8ec0":"# This makes plots appear in the notebook\n%matplotlib inline\n\ndef x_value(y,x):\n    z = []\n    for i in range(1,len(y)+1):\n        z.append(x)\n    return z \n        \n#regions = ['California', 'Carolinas', 'Central', 'Florida', 'Mid-Atlantic', 'Midwest', 'Northwest', 'Southeast', 'Southwest']\n\nfig, ax = plt.subplots(figsize=(12,5))\n\nax.plot(ordered.loc[Southeast]['Total Interchange (MW)'], x_value(ordered.loc[Southeast]['Total Interchange (MW)'],'Southeast'), marker='o')\nax.plot(ordered.loc[Midwest]['Total Interchange (MW)'], x_value(ordered.loc[Midwest]['Total Interchange (MW)'],'Midwest'), marker='o')\nax.plot(ordered.loc[Central]['Total Interchange (MW)'], x_value(ordered.loc[Central]['Total Interchange (MW)'],'Central'), marker='o')\nax.plot(ordered.loc[Florida]['Total Interchange (MW)'], x_value(ordered.loc[Florida]['Total Interchange (MW)'],'Florida'), marker='o')\nax.plot(ordered.loc[Southwest]['Total Interchange (MW)'], x_value(ordered.loc[Southwest]['Total Interchange (MW)'],'Southwest'), marker='o')\nax.plot(ordered.loc[Mid_Atlantic]['Total Interchange (MW)'], x_value(ordered.loc[Mid_Atlantic]['Total Interchange (MW)'],'Mid-Atlantic'), marker='o')\nax.plot(Northwest_Corrected, x_value(ordered.loc[Northwest]['Total Interchange (MW)'],'Northwest'), marker='o')\nax.plot(Carolinas_Corrected, x_value(ordered.loc[Carolinas]['Total Interchange (MW)'],'Carolinas'), marker='o')\nax.plot(California_Corrected, x_value(ordered.loc[California]['Total Interchange (MW)'],'California'), marker='o')\n\n# add legends\n#leg = ax.legend()\n\nplt.xlim(left=-7000,right=6000)\n\nplt.xticks(range(-6000, 6000, 1000))\n\nplt.title('Total Interchange in MW for Each Balancing Authority in Every Region');\n\n# add x and y labels\nax.set_xlabel('Total Interchange (MW)')\nax.set_ylabel('Regions')\n\n# Defining the text box identifying the true value of the largest bounding boxes. \nax.annotate('Final BA at 25808',\n             xy = (3000,7.7),xytext = (4400,7.5),\n             bbox={'boxstyle':'round','fc':'0.9'},\n             fontsize = 9,\n            );\n\nax.annotate('Final BA at 8165',\n             xy = (3000,7.7),xytext = (4500,5.5),\n             bbox={'boxstyle':'round','fc':'0.9'},\n             fontsize = 9,\n            );","e7c9584d":"electricity8=electricity[electricity['Balancing Authority'].isin(['MISO', 'PJM', 'SWPP', 'ERCO','SOCO'])]\nelectricity8.dropna(subset=['Net Generation (MW) from Coal'])### Groupby Top 5 Balancing Authority Net Generation of Coal","83597bbc":"cats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"day_of_week\",y=\"Net Generation (MW) from Coal\", data=electricity8,hue=\"Balancing Authority\",\n                     palette={'MISO':'r', 'PJM':'g', 'SWPP':'y', 'ERCO':'b','SOCO':'m'},order=cats)\n    g.legend(loc='best')\n    g.set_title(\"Weekly Net Generation (MW) from Coal\")","b76a9e10":"with sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"monthly\",y=\"Net Generation (MW) from Coal\", data=electricity8,hue=\"Balancing Authority\",\n                     palette={'MISO':'r', 'PJM':'g', 'SWPP':'y', 'ERCO':'b','SOCO':'m'})\n    g.legend(loc='best')\n    g.set_title(\"Monthly Net Generation (MW) from Coal\")##plot Top 5 Balancing Authority Net Generation of coal","0ba86414":"with sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"quarter\",y=\"Net Generation (MW) from Coal\", data=electricity8,hue=\"Balancing Authority\",\n                     palette={'MISO':'r', 'PJM':'g', 'SWPP':'y', 'ERCO':'b','SOCO':'m'})\n    g.legend(loc='best')\n    g.set_title(\"Seasonal Net Generation (MW) from Coal\")","0ceb943f":"electricity9=electricity[electricity['Balancing Authority'].isin(['CISO','IPCO','CPLE','ERCO','LDWP'])]\nelectricity9.dropna(subset=['Net Generation (MW) from Solar'])## Group Top 5 Balancing Authority Net Generation of Solar\nelectricity9","92be1aa3":"with sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.lineplot(x=\"Hour Number\",y=\"Net Generation (MW) from Solar\", data=electricity9,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n\n    g.set_title(\"Hour Number Net Generation (MW) from Solar\")  ##plot Top 5 Balancing Authority Net Generation of solar","8f969236":"electricity9.sort_values(by=[\"Net Generation (MW) from Solar\"])\n###sort the data to check if there is any outline ","b34d25ec":"## find two outline of Net Generation (MW) from Solar and filter out these outline \noutline=electricity9[electricity9['Net Generation (MW) from Solar'] < 11050.0]\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"Hour Number\",y=\"Net Generation (MW) from Solar\", data=outline,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n\n    g.set_title(\"Hour Number Net Generation (MW) from Solar\")  ##plot hourly Net Generation of solar","b6213364":"cats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'] ## redindex monday to sunday\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"day_of_week\",y=\"Net Generation (MW) from Solar\", data=outline,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n    g.set_ylim(0,6000)\n    g.set_title(\"Weekly Net Generation (MW) from Solar\")##plot Top 5 Balancing Authority Net Generation of solar weekdays","629a530b":"with sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"monthly\",y=\"Net Generation (MW) from Solar\", data=outline,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n    g.set_ylim(0,7000)\n    g.set_title(\"Monthly Net Generation (MW) from Solar\")##plot Top 5 Balancing Authority Net Generation of solar monthly","c8548aa3":"with sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"quarter\",y=\"Net Generation (MW) from Solar\", data=outline,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n    g.set_ylim(0,6000)\n    g.set_title(\"Seasonal Net Generation (MW) from Solar\")##plot Top 5 Balancing Authority Net Generation of solar seasonly","9b5fe167":"## groupby top 5 Balancing Authority Net Generation of Hydropower and Pumped Storage\nelectricity10=electricity[electricity['Balancing Authority'].isin(['BPAT','CISO','NYIS','TVA','PJM'])]\nelectricity10.dropna(subset=['Net Generation (MW) from Hydropower and Pumped Storage'])  ","0c44047c":"#reindex weekday from monday to sunday \n##plot Top 5 Balancing Authority Net Generation of Hydropower and Pumped Storage weekday\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(14,6))\n    g = sns.barplot(x=\"day_of_week\",y=\"Net Generation (MW) from Hydropower and Pumped Storage\", data=electricity10,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n  \n    g.set_title(\"Weekly Net Generation (MW) from Hydropower and Pumped Storage\")\n","a8f06b6a":"##plot Top 5 Balancing Authority Net Generation of Hydropower and Pumped Storage monthly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"monthly\",y=\"Net Generation (MW) from Hydropower and Pumped Storage\", data=electricity10,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Monthly Net Generation (MW) from Hydropower and Pumped Storage\")","f598d93f":"##plot Top 5 Balancing Authority Net Generation of Hydropower and Pumped Storage during seasonal\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"quarter\",y=\"Net Generation (MW) from Hydropower and Pumped Storage\", data=electricity10,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from Hydropower and Pumped Storage\")","48d196ab":"##Group Top 5 Balancing Authority Net Generation of Gas\nelectricity11=electricity[electricity['Balancing Authority'].isin(['PJM','ERCO','MISO','SOCO','FPL'])]\nelectricity11.dropna(subset=['Net Generation (MW) from Natural Gas'])\n#reindex weekday from monday to sunday \n##plot Top 5 Balancing Authority Net Generation of gas weekday\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"day_of_week\",y=\"Net Generation (MW) from Natural Gas\", data=electricity11,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n  \n    g.set_title(\"Weekly Net Generation (MW) from Natural Gas\")","1332ecd7":"##plot Top 5 Balancing Authority Net Generation of gas duirng monthly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"monthly\",y=\"Net Generation (MW) from Natural Gas\", data=electricity11,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Monthly Net Generation (MW) from Natural Gas\")","6654a018":"##plot Top 5 Balancing Authority Net Generation of gas during seasonly \nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.boxplot(x=\"quarter\",y=\"Net Generation (MW) from Natural Gas\", data=electricity11,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from Natural Gas\")","b50de456":"##  Group Top 5 Balancing Authority Net Generation of Nuclear\nelectricity12=electricity[electricity['Balancing Authority'].isin(['PJM','MISO','TVA','DUK','SOCO'])]\nelectricity12.dropna(subset=['Net Generation (MW) from Nuclear'])\n#reindex weekday from monday to sunday \n##plot Top 5 Balancing Authority Net Generation of Nuclear weekday\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"day_of_week\",y=\"Net Generation (MW) from Nuclear\", data=electricity12,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n  \n    g.set_title(\"Weekly Net Generation (MW) from Nuclear\")","634bc563":"##plot Top 5 Balancing Authority Net Generation of Nuclear monthly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"monthly\",y=\"Net Generation (MW) from Nuclear\", data=electricity12,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Monthly Net Generation (MW) from Nuclear\")","f2b1c0d4":"##plot Top 5 Balancing Authority Net Generation of Nuclear seasonly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"quarter\",y=\"Net Generation (MW) from Nuclear\", data=electricity12,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from Nuclear\")","46449b37":"##Groupby Top 5 Balancing Authority Net Generation of Wind\nelectricity13=electricity[electricity['Balancing Authority'].isin(['ERCO','SWPP','MISO','PJM','CISO'])]\nelectricity13.dropna(subset=['Net Generation (MW) from Wind'])\n#reindex weekday from monday to sunday \n##plot Top 5 Balancing Authority Net Generation of wind weekday\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"day_of_week\",y=\"Net Generation (MW) from Wind\", data=electricity13,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n  \n    g.set_title(\"Weekly Net Generation (MW) from Wind\")","a5af317e":"##plot Top 5 Balancing Authority Net Generation of wind monthly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"monthly\",y=\"Net Generation (MW) from Wind\", data=electricity13,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Monthly Net Generation (MW) from Wind\")","5a5e7063":"##plot Top 5 Balancing Authority Net Generation of Wind seasonal\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"quarter\",y=\"Net Generation (MW) from Wind\", data=electricity13,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from Wind\")","f3af33c2":"electricity14=electricity[electricity['Balancing Authority'].isin(['MISO','NYIS','PJM','CISO','NWMT'])]\nelectricity14.dropna(subset=['Net Generation (MW) from All Petroleum Products'])\n#reindex weekday from monday to sunday \n##plot Top 5 Balancing Authority Net Generation of All Petroleum Products weekday\ncats = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"day_of_week\",y=\"Net Generation (MW) from All Petroleum Products\", data=electricity14,hue=\"Balancing Authority\",order=cats)\n    g.legend(loc='best')\n  \n    g.set_title(\"Weekly Net Generation (MW) from All Petroleum Products\")","3eb1dba9":"##plot Top 5 Balancing Authority Net Generation of All Petroleum Products monthly\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"monthly\",y=\"Net Generation (MW) from All Petroleum Products\", data=electricity14,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Monthly Net Generation (MW) from All Petroleum Products\")","74933360":"##plot Top 5 Balancing Authority Net Generation of All Petroleum Products seasonal\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.pointplot(x=\"quarter\",y=\"Net Generation (MW) from All Petroleum Products\", data=electricity14,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from All Petroleum Products\")","96132f59":"electricity15=electricity1.groupby('Balancing Authority')['Net Generation (MW) from Other Fuel Sources'].mean().sort_values(ascending=False).head(5)\nelectricity15.dropna()","df1c15e0":"electricity16=electricity[electricity['Balancing Authority'].isin(['PJM','FPL','CPLE','MISO','IPCO'])]\nelectricity16.dropna(subset=['Net Generation (MW) from Other Fuel Sources'])\n##plot Top 5 Balancing Authority Net Generation of other fuel sources  seasonal\nwith sns.axes_style('white'):\n    plt.figure(figsize=(10,6))\n    g = sns.barplot(x=\"quarter\",y=\"Net Generation (MW) from Other Fuel Sources\", data=electricity16,hue=\"Balancing Authority\")\n    g.legend(loc='best')\n  \n    g.set_title(\"Seasonal Net Generation (MW) from Other Fuel Sources\")","e46d0add":"#Top 5 with negative interchange\n\nintertail","2c4144a4":"#Taking the absolute value of the interchange\nintertail_abs = intertail['Total Interchange (MW)'].abs()\nintertail_abs","6c201b03":"#Extracting the index to use it as a text in the map\n\nintertail['Balancing Authority'] = intertail.index\nintertail","ae394a68":"#Mapping the top 5 negative interchanges and comparing it with the direct solar irradiance map\n\nimport cartopy.feature as cfeature\nfrom cartopy.feature import NaturalEarthFeature, LAND, COASTLINE, BORDERS, OCEAN\nfrom cartopy.mpl.gridliner import LONGITUDE_FORMATTER, LATITUDE_FORMATTER\nimport cv2\nimport cartopy.crs as ccrs\nimport cartopy.io.shapereader as shpreader\nfrom scipy import ndimage, misc\n\n# Set the size to 12, 20\nfig, ax = plt.subplots(figsize=(50,100),ncols=2, subplot_kw=dict(projection=ccrs.PlateCarree()))\nax1 , ax2 = ax\n\n\n# use underlay image to the map\n#ax1.stock_img()\n\nax1.set_extent([-127, -65, 24, 47])\n\n# display land and coastline\nax1.add_feature(LAND)\nax1.add_feature(COASTLINE)\nax1.add_feature(OCEAN)\n\n# State borders\nstates = NaturalEarthFeature(category='cultural', scale='50m', facecolor='none',\n                             name='admin_1_states_provinces_shp')\nax1.add_feature(states, edgecolor='gray')\nfig\n\n# display the country border lines\nax1.add_feature(BORDERS)\n\nim = ax1.scatter(intertail['lon'], intertail['lat'],s=intertail_abs, marker='o', c='green');\n\nlat = intertail['lat']\nlon = intertail['lon']\nba = intertail['Balancing Authority']\n\ndict1={}\nlist1=[]\nlist2=[]\nlist3=[]\nn=0\n#storing each value in different lists\nfor z in lat:\n    list1.append(z)\nfor c in lon:\n    list2.append(c)\nfor b in ba:\n    list3.append(b)\n#storing the values of lat long in a dictionary with lat as keys and long as values    \nwhile(n<len(list1)):\n    dict1[list1[n]]=list2[n]\n    n+=1\ni=0\nfor z,c in dict1.items():\n    ax1.text(c+3,z-4,list3[i],horizontalalignment='right', fontsize=40)\n    i+=1\n\nax1.set_title('Top 5 negative interchanges',fontsize=60)\n\n# #importing image\nimg = plt.imread(\"..input\/regions\/solar.jpg\")\nrotated_img = ndimage.rotate(img, 180)\nhorizontal_img = cv2.flip(rotated_img, 1 )\nax2.imshow(horizontal_img, extent=[-127, -70, 24, 50]);\n","76a1d6b2":"solar5['Balancing Authority'] = solar5.index\nsolar5","8386ef75":"#Mapping the top 5 in generation based on solar power and comparing it with the direct solar irradiance map\n\n\nfig, ax = plt.subplots(figsize=(50,50),ncols=2, subplot_kw=dict(projection=ccrs.PlateCarree()))\n\n\nax1,ax2 = ax\nax1.set_extent([-127, -65, 24, 47])\n\n# use underlay image to the map\n#ax1.stock_img()\n\n# display land and coastline\nax1.add_feature(LAND)\nax1.add_feature(COASTLINE)\nax1.add_feature(OCEAN)\n\n# # State borders\nstates = NaturalEarthFeature(category='cultural', scale='50m', facecolor='none',\n                             name='admin_1_states_provinces_shp')\nax1.add_feature(states, edgecolor='gray')\nfig\n\n# # display the country border lines\nax1.add_feature(BORDERS)\n\nim = ax1.scatter(solar5['lon'], solar5['lat'],solar5['Net Generation (MW) from Solar'], marker='o', c='green',\n                   alpha=0.6)\nlat_s = solar5['lat']\nlon_s = solar5['lon']\nba_s = solar5['Balancing Authority']\n\ndict2={}\nlist11=[]\nlist22=[]\nlist33=[]\nn=0\n#storing each value in different lists\nfor z in lat_s:\n    list11.append(z)\nfor c in lon_s:\n    list22.append(c)\nfor b in ba_s:\n    list33.append(b)\n#storing the values of lat long in a dictionary with lat as keys and long as values    \nwhile(n<len(list1)):\n    dict2[list11[n]]=list22[n]\n    n+=1\ni=0\nfor z,c in dict2.items():\n    ax1.text(c+3,z-4,list33[i],horizontalalignment='right', fontsize=40);\n    i+=1\nax1.text(0.16,0.5,'LDWP',\n        \n       verticalalignment='top',\n        \n       transform = ax1.transAxes,\n        \n       color='black', fontsize=30);\nax1.set_title('Top 5 in generation using solar power ',fontsize=60)\n\n# #importing image\nimg = plt.imread(\"..\/input\/regions\/solar.jpg\")\nrotated_img = ndimage.rotate(img, 180)\nhorizontal_img = cv2.flip(rotated_img, 1 )\nax2.imshow(horizontal_img, extent=[-127, -70, 24, 50])","b8c86d1b":"#Mapping the top 5 negative interchanges and comparing it with the annual average wind speed at 80m\n\n\nfig, ax = plt.subplots(figsize=(50,80),ncols=2, subplot_kw=dict(projection=ccrs.PlateCarree()))\n\n\nax1,ax2 = ax\nax1.set_extent([-127, -65, 24, 47])\n\n# use underlay image to the map\n#ax1.stock_img()\n\n# display land and coastline\nax1.add_feature(LAND)\nax1.add_feature(COASTLINE)\nax1.add_feature(OCEAN)\n\n# # State borders\nstates = NaturalEarthFeature(category='cultural', scale='50m', facecolor='none',\n                             name='admin_1_states_provinces_shp')\nax1.add_feature(states, edgecolor='gray')\nfig\n\n# # display the country border lines\nax1.add_feature(BORDERS)\n\nim = ax1.scatter(intertail['lon'], intertail['lat'],intertail_abs, marker='o', c='green'\n                   )\nlat = intertail['lat']\nlon = intertail['lon']\nba = intertail['Balancing Authority']\n\ndict1={}\nlist1=[]\nlist2=[]\nlist3=[]\nn=0\n#storing each value in different lists\nfor z in lat:\n    list1.append(z)\nfor c in lon:\n    list2.append(c)\nfor b in ba:\n    list3.append(b)\n#storing the values of lat long in a dictionary with lat as keys and long as values    \nwhile(n<len(list1)):\n    dict1[list1[n]]=list2[n]\n    n+=1\ni=0\nfor z,c in dict1.items():\n    ax1.text(c+4,z-4,list3[i],horizontalalignment='right', fontsize=40);\n    i+=1\n\nax1.set_title('Top 5 negative interchanges',fontsize=60)\n\n# #importing image\nimg = plt.imread(\"..\/pythonproject\/wind.jpg\")\nrotated_img = ndimage.rotate(img, 180)\nhorizontal_img = cv2.flip(rotated_img, 1 )\nax2.imshow(horizontal_img, extent=[-127, -70, 24, 50])","a7659302":"wind5['Balancing Authority'] = wind5.index\nwind5","e71a292e":"#Mapping the top 5 in generation based on wind power and comparing it with the annual average wind speed at 80m\n\nfig, ax = plt.subplots(figsize=(50,80),ncols=2, subplot_kw=dict(projection=ccrs.PlateCarree()))\n\n\nax1,ax2 = ax\nax1.set_extent([-127, -65, 24, 47])\n\n# use underlay image to the map\n#ax1.stock_img()\n\n# display land and coastline\nax1.add_feature(LAND)\nax1.add_feature(COASTLINE)\nax1.add_feature(OCEAN)\n\n# # State borders\nstates = NaturalEarthFeature(category='cultural', scale='50m', facecolor='none',\n                             name='admin_1_states_provinces_shp')\nax1.add_feature(states, edgecolor='gray')\nfig\n\n# # display the country border lines\nax1.add_feature(BORDERS)\n\nim = ax1.scatter(wind5['lon'], wind5['lat'],wind5['Net Generation (MW) from Wind'], marker='o', c='green'\n                   )\nlat_w = wind5['lat']\nlon_w = wind5['lon']\nba_w = wind5['Balancing Authority']\n\ndict1={}\nlist1=[]\nlist2=[]\nlist3=[]\nn=0\n#storing each value in different lists\nfor z in lat_w:\n    list1.append(z)\nfor c in lon_w:\n    list2.append(c)\nfor b in ba_w:\n    list3.append(b)\n#storing the values of lat long in a dictionary with lat as keys and long as values    \nwhile(n<len(list1)):\n    dict1[list1[n]]=list2[n]\n    n+=1\ni=0\nfor z,c in dict1.items():\n    ax1.text(c+3,z-4,list3[i],horizontalalignment='right', fontsize=40);\n    i+=1\n\nax1.set_title('Top 5 in generation using wind power',fontsize=60)\n    \n# #importing image\nimg = plt.imread(\"..\/input\/regions\/wind.jpg\")\nrotated_img = ndimage.rotate(img, 180)\nhorizontal_img = cv2.flip(rotated_img, 1 )\nax2.imshow(horizontal_img, extent=[-127, -70, 24, 50])","4147badf":"Now, we look at the total interchange, demand, and net generation for the bottom 10 balancing authorities.  These balancing\nauthorities have the most extreme negative interchange values. ","8439e126":"The following section is not a part of question 2, but relies on data from question 2.  \n\nThe following code isolates the Generation-Only Balancing Authorities for comparison with the top 10 balancing authorities.  ","6b5fef29":"In our table, the Balancing Authorities are displayed as index of the table and it cannot be referenced in a scatter plot. So we are extracting the index values and displaying it in a seperate column for future use.","94b8385d":"###### Natural Gas","57e2921b":"#### 1: Group Top 5 Balancing Authority Net Generation of Coal","4f93c4a3":"#### 5: Group Top 5 Balancing Authority Net Generation of Nuclear","a84b113f":"## Importing the packages\nThere are different packages needed for this project like Numpy, Matplotlib, Datetime and Pandas to do data exploration and analysis. We use Seaborn and Cartopy for visualization.","1b857210":"#### Monthly Net Generation (MW) from Coal","8dbec7d6":"#### Combining the two datasets into one","f299a04d":"#### Question 6 [Bonus Question] -  Are there specific regions with consistent negative interchanges that have high potential for supplemental solar or wind energy installation?\n\nTo answer this question, we are going to compare the solar irradiance and wind maps with the total neagtive interchange maps.\n\nFirst let us look at the table we created for Top 5 total negative interchange..","7d46d0dc":"##### Top 5 based on net generation","58d60876":"#### 2: Group Top 5 Balancing Authority Net Generation of Solar","146896d6":"- Net Generation (MW) from Coal during months for MISO and PJM both generate most in months of Jan and July\nrest 3 balancing Authority are also increased in these month.","e42b6f89":"- Nulear generation decline during Q2(March and April) and peak at Q4 (July and August)","d90d2d12":"#### Get the table of Negative total interchange and Plot how they change during hour (demand , net generation , total interchange)","2613848d":"#### Question 2\n1.\tWhich balancing authorities exhibit negative interchanges:\na.\tConsistently? \nb.\tDuring their peak power usage? \nc.\tOn select days? \nd.\tDuring select seasons? ","42108a91":"- For Net Generation of All Petroleum Products, MISO,NYIS and PJM peak generate at Q3 ,rest are stable produce.","803cb62a":"####  Question 5:\nDoes energy production from specific energy sources fluctuate throughout each day?  Week?  Month?","cdf0c092":"Now let us look at the wind power vs top 5 negative interchange maps..","3c30543b":"- Demand also effect by month and season, it shows the highest demand during quarter 3 which weather is warmer and consume more energy.","6dc260b1":"### Data exploration\nBefore doing any analysis on the data, we need to learn more about the dataset.\n\nFirst, let us look at our primary variable, Balancing Authority..","626b8d42":"There is an extremely high proportion of exported total interchange relative to demand in 2 cases.  Specifically, the SEC\nand SPA balancing authorities have, respectively, approximately 9 and 13 times the positive total interchange than demand.\nMoreover, amongst the less extreme entries, 6 of the 10 entries produce a ratio of between 60% and 130% total interchange to demand.\n\nSimilar general ratios can be seen when considering total interchange to net generation.  The one extreme outlier, the BANC balancing authority, is mostly due to the negative demand with that balancing authority.  Due to the approximately 20,000MW\nof average hourly negative demand with that balancing authority and the resulting approximately 26,000MW of hourly positive\ntotal interchange, the ratio of total interchange to net generation is almost 5 times. ","16725fc5":"It is clear from these maps that california region thrives in electricity generation using solar energy but it still has a very high negative interchange, meaning it has a consistently high demand. To satisfy this demand, it borrows power from northwest and southwest regions which are also places of high solar irradiance. One of the suggestions to meet the power demand in the west is to set up more solar farms in the nevada desert region and other western states like Utah, Arizona, New Mexico, Colorado, Texas, Oklahoma which receive high amounts of irradiance throughout the year.","56226cee":"#### 4: Group Top 5 Balancing Authority Net Generation of Gas","3b605ade":"All the datarows for unknown fuel sources are NaN, so that column was ignored.","802737b1":"- Beside FPL and MISO generate less during weekend,all rest balancing Authority have stable generations from gas during weekdays.","baab1a5a":"### Answering the questions\n\nBelow are some of the questions we would like to answer:\n\n\n1.\tWhich balancing authorities are exhibiting negative interchanges:\na.\tOn a daily basis?\nb.\tDuring their peak power usage?\nc.\tOn select days?\nd.\tDuring select seasons?\n\n2.\tHow do the top 10 balancing authorities with negative interchanges and the top 10 balancing authorities with positive exchanges compare in terms of:\na.\tOverall demand?\nb.\tExcess or deficient capacity?\nc.\tFavored energy generation sources (i.e., nuclear, natural gas, solar, etc.)?\n\n3.\tWhat are the top 5 balancing authorities and regions for each available energy generation source?\n\n4.\tAre there regions with clusters of balancing authorities with consistent positive or negative interchanges?\n\n5.\tDoes energy production from specific energy sources fluctuate throughout each day?  Week?  Month?\n\n6.\t[Bonus 5 Points] Are there specific regions with consistent negative interchanges that have high potential for supplemental solar or wind energy installation?\n","514872b9":"#### 3: Group Top 5 Balancing Authority Net Generation of Hydropower and Pumped Storage","2e98490f":"#### Now this graph make much more sense :)\n- As we can see peak of Solar power exhibit is noon time, they dont produce any energy during nighttime","8e19091e":"Below is the bar chart for the raw data of total interchange, demand, and net generation.  There is relatively low overall demand in 8 of 10 entries.  As stated before, negative demand in BANC and SEC could be due to industrial or private power","aa9a6851":"####  Plot Energy changing during different time period:","7b74f118":"When comparing aginst the average standard deviation for the top 10 positive balancing authorities, the top 10 negative \nbalancing authorities have a lower average standard deviation of 25.54%.  This indicates a more even spread of power \ngeneration sources amongst balancing authorities with a negative interchange. ","aeac8897":"Below are the top 10 balancing authorities with positive interchanges. BANC and SEC have a negative demand because demand is derived from Total Interchange and Net Generation. The source of this negative demand is likely solar-powered homes and businesses generating their own electricity.","af7784f9":"Looking at the standard deviation of the top10Sources, we find a 28.70% average standard deviation for each energy source\nused by a balancing authority.","b6e8bf68":"Now, we explore the ratio of total interchange to net generation or demand for the 10 balancing authorities with the\ngreatest negative interchange. ","533d364e":"- For Net Generation of All Petroleum Products,only MISO generate less during weekend ,rest are stable produce.","1c65dae9":"Now we attempt to answer the final part of question 2 regarding the favored energy sources of both the top 10 and the \nbottom 10 balancing authorities. \n\nConcerning the top 10 balancing authorities, the graph no obvious favorite power source. ","add83e6a":"Likewise, with the bottom 10 total interchanges, there is no clear favorite, although natural gas and nuclear make strong\nshowings in most balancing authorities. ","71530911":"- For top 5 Balancing Authorities With negative interchanges('PGE','ISNE','NYIS','MISO','CISO'),they have difference changing trend during hours.\nAs we can see, NYIS and PGE: the negative total interchanges is increases ,since the demand increases during daytime it consume more energy. MISO and ISNE:  the total interchange actually get slight decrease, which means these two balancing Authorities produce more energy during daytime. But look at CISO, the negative total interchange are huge dropped during daytime ,that means one type of energy source produce so much more energy to help high demand.\nWe want to find out which type energy, so lets look into more see if we figure out.\n","a8bb80b5":"###### All petroleum based energy sources","75a14812":"- As we can see from graph, demand increase from monday then tuesday get peak then weekend get lowest demand,it showing workday demand more energy than weekend.","ffe6ff20":"#### Issues with the dataset\n\n##### Some time periods with no data provided.\nMostly due to regulatory exceptions. \nFiltered out of calculated means by default (i.e., NaN not counted). \nFull set of statistics only started in 2019.\n\n##### Very irregular balancing authority and region boundaries.\nNo precise mapping of where balancing authority boundaries.\nRestricted us from more generally applying positional data (I.e., zip codes, lat\/long, etc.)\n\n##### Includes generation-only balancing authorities\nThese balancing authorities consist of a power plant or group of power plants and do not directly serve retail customers.\n","9ec012c8":"####  Conclusion for question 1: \nFor top 5 balancing authorities of exhibit negative total interchanges: they consistently exhibit next interchanges which means they consistently borrow energy from others. Each balancing authorities have difference peak power usage though out hourly ,weekday, monthly and seasonally, because difference time period of changing demands and net generate of difference energy sources. ","50f8da47":"- From graph,overall we can see how the demand and net generation changing throughout the day","9f19dbd8":"- The changing pattern of generation wind power,for each balancing authority has different pattern though out\ndays ,months and season.\n","82dc713f":"##### Top 5 based on total demand","da7ddf71":"##### Top 5 for total positive interchange","a9afa55c":"- Nuclear have stable produations thought out weekdays","911052a6":"Next, we show proportional statistics to demonstrate the ratio of total interchange to net generation or demand. ","14c7590a":"### Cleaning the dataset\nSome of the columns in the dataset have non alphanumeric characters like ':' and ',' which must be removed and all the numeric columns must be checked to make sure they are all of type 'float'. ","cf533f09":"##### Wind energy","00f87a91":"##### Top 5 for total negative interchange","cd1b700a":"- Clear that season change is definitely effect negative total interchanges.Balancing Authorities ISNE & NYIS which are New England and new York area, they are  similar changing pattern. It make sense, they are in same region and  similar season. For Balancing Authorities MISO and CISO, they have highest negative total interchanges during Q3, but CISO has declined negative total interchanges during Q2 ,the reason for difference might be CISO produce more energy during the Q2.","87831f44":"#### 7 :Plot Top 5 Balancing Authority Net Generation of All Petroleum Products","4cb3425b":"###### Nuclear Energy","bb8ec8fd":"- Net Generation (MW) from Gas during months,all balancing authorities generate most between months of July August \nand peak at Q3.","9d8d6cff":"- Net Generation (MW) from Coal during weekdays for MISO and PJM both generate less during weekend\nrest 3 balancing Authority are produce some amount energy.","7dcb0255":"- For season changing are same pattern as monthly changing.","466e3550":"As seen below, now all needed data types are floats. ","9238e308":"##### Solar energy","5980117e":"#### Group date to weekdays ,months and quarter and create new column","3dd3af39":"Below is the code to display a side by side comparison of the top 5 negative interchange areas and the amounts of solar irradiance received by all the places in the united states.","6f63a10f":"- Solar net generation also changing by month,peak months are June,July and August ","15c45be7":"#### Step 3\nGroup top 5 Balancing Authorities With negative interchanges with quater and make graph to show how negative interchanges during season\n","3d0679f0":"####  Plot Top 5 Balancing Authority with Net Generation of solar during weekdays","c8272de2":"#### Seasonal Net Generation (MW) from Coal","622ed785":"#### Step 2\nGroup top 5 Balancing Authorities With negative interchanges with hour and make graph to show how negative interchanges during hours\n","46a6986b":"- Graph doest look correct ,there is might outline in data","b7f63052":"##### Top 5 for different energy sources\n\n###### Coal","5b6ada70":"### Reading Data Set","667d9764":"#### Step 1\nFind top 10 Balancing Authorities With negative interchanges ( Mean value)\n","31b4c0b3":"In order to scale the size of the scatter plot based on the interchange values, negative number are converted into positive.","1e07481b":"- As we can see net generation from Hydropower and Pumped Storage follow month by curve line\nWith the water amount increase during April and May,the hydropower produce more energy \nwith weather get hoter and less water ,they produe less\n","b3896690":"we are going to group values in the comb dataframe by balancing authorities to produce summary statistics. ","f3d10a76":"##### Other fuel sources","1ed83e8d":"First, we need to correct the data type of each variable. Total Interchange, Demand, and Net Generation, amongst other important variables, are objects, not numeric types. We will reset the data set in order to most conveniently align all variables with the necessary data type for future calculations. ","38f00b90":"This side by side comparison between the top 5 regions in terms of net generation using wind energy and the annual average wind speed map shows a clear view of how 3 out of 5 top 5 BA's are location in the middle portion of the country, which also happens to be the region with most wind power. The midwest region has a consistently high negative interchange despite thriving in wind power generation. One suggestion to meet this demand in the midwest is to set up more wind farms in the states of North Dakota, South Dakota, Iowa, Nebraska and Wisconsin. As seen in the previous maps, these regions do not have receive high solar irradiance like the southwestern states. But luckily, they have a good average wind speed suitable for industrial scale wind farms. Utitlising this natural resource by building more wind farms outside the major mid-western cities could solve their negative interchange problem.","baea8901":"#### 6 :Plot Top 5 Balancing Authority Net Generation of Wind","da41e1a3":"#### Question 4.\nIn regions with more than one balancing authority, is there a pattern of positive or negative interchanges?","283d2fb5":"As one can see from the following chart, the generation-only balancing authorities have a very small fraction of the total\ninterchange of the top 10 positive balancing authorities.  This fact renders them largely insignificant in the overall \ndiscussion. ","9b08a324":"As the amount of negative average total interchange grows, a trend is present of progressively climbing demand occurs. This appears to indicate a habitual inability or unwillingness for net generation to meet demand requirements and reliance on\nadjacent balancing authorities for interchange. ","d6a0e152":"#### Question 3 - What are the top 5 balancing authorities and regions for each available energy generation source?\n\nTo answer this question, we need to group the dataset by balancing authorities and take a mean of each of the variables. So we can look at the top 5 Balancing Authority for each of our variable.","41e6bdc0":"Observing the y axis, one will notice that the scale is orders of magnitude lower than the scale used in the proportional\ngraph for the top 10 positive balancing authorities.  This is a result of the ratio of total interchange to demand or net generation being significantly less extreme with the top 10 balancing authorities exhibiting negative interchanges than with\nthe top 10 positive total interchanges. \n\nDespite the above observation, the resulting ratios are significant.  9 of the 10 bottom total interchanges still receive over 20% of their demand from adjacent balancing authorities.  This fact indicates a possible habitual or structual reliance\non exporting balancing authorities to fill the shortfalls of importing balancing authorities. ","c2e55efd":"#### Step 4\nGroup top 5 Balancing Authorities With negative interchanges with months and make graph to show how negative interchanges during months\n","1c75ba66":"##### Hydropower and pumped storage","115b627b":"It is clear from this map that 4 of the 5 balancing authorities with a high inflow lie on the regions with low solar irradiance. Let us now look at the top 5 regions in net generation based on solar power.","e643a286":" ####  Top 5 Baclacing Authority Net Generation (MW) from Other Fuel Sources","31252fe6":"The dataset contains 470827 rows and 23 columns in total.\n#### Definitions for some of the important variables in the dataset\n\n##### Balancing Authority \nEntities responsible for balancing electricity supply, demand, and interchange on their electric system in real-time. Mixture of singular power generation sources and cooperatives. \n\n##### Net Generation \nThe metered output of electric generating units in the balancing authority\u2019s electric system. This generation only includes generating units that are managed by the balancing authority or whose operations are visible to the balancing authority. Independent power generation operations not consistently connected to the wider power grid are not included. \n\n##### Interchange \nThe net metered tie line flow from one BA to another directly interconnected BA. Total net interchange is the net sum of all interchange occurring between a BA and its directly interconnected neighboring BAs.\nNegative interchange values = net inflows.\nPositive interchange values = net outflows.\n\n##### Demand\nThe amount of electricity load within the balancing authority\u2019s electric system.\nNet generation minus total interchange (typically).","fe4e0309":"#### Weekly Net Generation (MW) from Coal","693a3a31":"The map on the left is the top 5 regions with high negative interchange and the right image shows the annual average wind speed received at a height of 80m above ground. Most utility level wind turbines have rotors at a height anywhere between 25m and 100m above ground and they require an average wind speed of 6m\/s. Based on this fact, most of the regions marked in orange, brown and violet are suitable for utility scale wind farms. ","35a159ff":"####  Question 1: \nWhich balancing authorities exhibit negative interchanges:\n- -Consistently?\u200b\n- -During their peak power usage?\u200b\n- -On select days?\u200b\n- -During select seasons?\n\n","d2c8fd93":"- Beside BPAT generate less during weekend,all rest balancing Authority have stable produations \nfrom Hydropower and Pumped Storage during weekdays.","e0baa041":"# Consistent Energy Debt: America\u2019s Unequal Power Grid\n Project by Emma Delehanty, Mukila Rajasekar, John Tomaselli\n\n##### Data Source:\nhttps:\/\/www.eia.gov\/beta\/electricity\/gridmonitor\/dashboard\/electric_overview\/US48\/US48\n\n##### Project Overview:\nWe are conducting an exploration of the United States\u2019 electric grid in order to determine areas that would most benefit from additional power generation sources.  Our intermediate goal is to determine which balancing authorities, who manage power transportation, and power regions, which in turn manage balancing authorities, import electricity on a periodic basis.  Other goals include studying how energy production and demand fluctuate as well as which energy production sources support different balancing authorities.  Time permitting, we would also like to suggest select renewable energy sources for underperforming balancing authorities.","4e0855fd":"Before moving forward with the question, we are adding the latitude and longitude for some of the Balancing Authority regions so they can be visualised on a map.","1e5667b1":"- For the negative total interchanges during weekday, we can see CISO peak is on Thursday and Miso\nIs at Friday, others balancing authorities are not changing too much though out the weekdays \n","de21c264":"- For The energy generate from other fuel sources,since the amount of productions are small so I decide only look into  the seasonal changing pattern,each Balancing Authority has difference peak power generation."}}