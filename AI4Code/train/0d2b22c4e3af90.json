{"cell_type":{"61621d36":"code","2f35a92e":"code","23942965":"code","10dd0f14":"code","c57fca0f":"code","9ec1d18d":"code","419ab592":"code","ca5fd198":"code","6df1c0fe":"code","5afdbc04":"code","08a89029":"code","21593b16":"code","5e1a8712":"code","2c0217b9":"code","c09cfd37":"code","2745a4a7":"code","66068676":"code","92605989":"code","ef9b1f3d":"code","0844fb8b":"code","f3a38e70":"code","f6513862":"code","57aa64cb":"code","a49b301b":"code","367294b6":"code","4692d34c":"code","a70c0a3f":"code","8e577079":"markdown"},"source":{"61621d36":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2f35a92e":"# Import dataset\ndata=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","23942965":"data.head(10)","10dd0f14":"data.shape\n# 150 rows and 6 columns","c57fca0f":"data.info()","9ec1d18d":"# different species \nspecies=data.Species.unique()\nprint (species)\nlen(species)","419ab592":"data.describe()","ca5fd198":"# groupby Species\ndata.groupby('Species').size()","6df1c0fe":"#  import all the required libraries\nfrom pandas.plotting import scatter_matrix\nimport matplotlib.pyplot as plt\nfrom sklearn import model_selection\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","5afdbc04":"# Box and Whisker Plot\ndataset=data[[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"]]\ndataset.plot(kind='box', subplots=True, layout=(2,2), sharex=False, sharey=False)\nplt.show()","08a89029":"dataset.hist()\nplt.show()","21593b16":"# Multivariate Plot\nscatter_matrix(dataset)\nplt.show()","5e1a8712":"sns.heatmap(data.isnull(), yticklabels = False, cmap = \"plasma\")\nplt.show()","2c0217b9":"sns.set_theme(style=\"darkgrid\")\nsns.boxplot(x= \"Species\", y=\"SepalLengthCm\", data = data)\nplt.show()","c09cfd37":"sns.set_theme(style=\"darkgrid\")\nsns.boxplot(x= \"Species\", y=\"PetalLengthCm\", data = data)\nplt.show()","2745a4a7":"sns.set_theme(style=\"darkgrid\")\nsns.boxplot(x= \"Species\", y=\"SepalWidthCm\", data = data)\nplt.show()","66068676":"sns.set_theme(style=\"darkgrid\")\nsns.boxplot(x= \"Species\", y=\"PetalWidthCm\", data = data)\nplt.show()","92605989":"# Defining the model variables, \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438\ndatas = data[[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\", \"Species\"]]\narray = datas.values\nX = array[:,0:4]\ny = array[:,4:5]","ef9b1f3d":"# Splitting the train and test data, \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 train \u0438 test\nvalidation_size = 0.20\nseed = 6\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size = validation_size, random_state = seed)","0844fb8b":"# Cross-validation, \u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f\nscoring = 'accuracy'","f3a38e70":"# Defining the models, \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\nmodels = []\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC()))\n\nresults = []\nnames = []","f6513862":"# data[data[PetalLengthCm] = 3, data[PetalWidthCm] = 1, data[SepalLengthCm] = 5, data[SepalWidthCm] = 2]","57aa64cb":"for name, model in models:\n    kfold = model_selection.KFold(n_splits = 10, random_state = seed)\n    cv_results = model_selection.cross_val_score(model, X_train, y_train, cv = kfold, scoring = scoring)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.std())\n    print(msg)","a49b301b":"data=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\nprint(data.loc[(data['PetalLengthCm'] == 3) & (data['PetalWidthCm'] == 1) & (data['SepalLengthCm'] == 5) & (data['SepalWidthCm'] == 2)])","367294b6":"print(data.loc[(data['PetalLengthCm'] == 3)])","4692d34c":"print(data.loc[(data['PetalLengthCm'] == 3) & (data['PetalWidthCm'] == 1)])","a70c0a3f":"data[data['PetalLengthCm'] == 3]\ndata[data['PetalWidthCm'] == 1]\ndata[data['SepalLengthCm'] == 5]\ndata[data['SepalWidthCm'] == 2]","8e577079":"\u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\n- \u0414\u043b\u0438\u043d\u0430 \u043d\u0430\u0440\u0443\u0436\u043d\u043e\u0439 \u0434\u043e\u043b\u0438 \u043e\u043a\u043e\u043b\u043e\u0446\u0432\u0435\u0442\u043d\u0438\u043a\u0430 (\u0430\u043d\u0433\u043b. sepal length);\n- \u0428\u0438\u0440\u0438\u043d\u0430 \u043d\u0430\u0440\u0443\u0436\u043d\u043e\u0439 \u0434\u043e\u043b\u0438 \u043e\u043a\u043e\u043b\u043e\u0446\u0432\u0435\u0442\u043d\u0438\u043a\u0430 (\u0430\u043d\u0433\u043b. sepal width);\n- \u0414\u043b\u0438\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0434\u043e\u043b\u0438 \u043e\u043a\u043e\u043b\u043e\u0446\u0432\u0435\u0442\u043d\u0438\u043a\u0430 (\u0430\u043d\u0433\u043b. petal length);\n- \u0428\u0438\u0440\u0438\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0434\u043e\u043b\u0438 \u043e\u043a\u043e\u043b\u043e\u0446\u0432\u0435\u0442\u043d\u0438\u043a\u0430 (\u0430\u043d\u0433\u043b. petal width).\n\n\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u0438\u0445 \u0447\u0435\u0442\u044b\u0440\u0451\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0438\u0440\u0438\u0441\u044b \u043d\u0430 \u0442\u0440\u0438 \u0441\u043e\u0440\u0442\u0430:\\\n- \u0418\u0440\u0438\u0441 \u0449\u0435\u0442\u0438\u043d\u0438\u0441\u0442\u044b\u0439 (Iris Setosa);\n- \u0418\u0440\u0438\u0441 \u0432\u0438\u0440\u0433\u0438\u043d\u0441\u043a\u0438\u0439 (Iris virginica);\n- \u0418\u0440\u0438\u0441 \u0440\u0430\u0437\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u044b\u0439 (Iris versicolor)."}}