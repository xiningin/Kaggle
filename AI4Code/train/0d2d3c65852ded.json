{"cell_type":{"961c6f55":"code","b8bf1a25":"code","a4bd7592":"code","7b705e44":"code","5da6e0ee":"code","05bb273e":"code","e0291767":"code","850c45f5":"code","63179576":"code","90344c9f":"code","c1dcd6f6":"code","13ba45f2":"code","f2580752":"code","1b249a11":"code","c6e78ed6":"code","f495f186":"code","260a9eb7":"code","789efdb9":"code","1dd775c6":"code","7dd19d01":"code","0af14390":"code","10ba8871":"code","7a153b32":"code","12667fea":"code","dcec25ae":"code","3a83ef0c":"code","18877627":"code","30cb9104":"code","fa241f28":"code","1c965181":"code","0d911e88":"code","a3cbac66":"code","13f3319c":"code","42a0cb36":"code","1f329d6d":"code","dd89ca85":"code","c182011f":"code","6168dcb4":"code","2654636c":"code","fd282c95":"code","a4b95016":"code","b0fb1eeb":"code","634ae164":"code","328cc50e":"code","e8f9b9d4":"code","ab4aa106":"code","85b0ef21":"code","e072c4b7":"code","4433fcb8":"code","8bcd02a4":"code","fce66d64":"code","5770c283":"code","0d8bcc19":"code","865dc580":"code","274a5a1e":"code","f9a92de4":"code","f49c36c4":"code","2fdeade0":"code","8764f4be":"code","73a179fc":"code","daad3fcc":"code","4f988824":"code","dc793e94":"code","06142b25":"code","28a0716a":"code","45365acd":"code","bf64ed48":"markdown","39a4cd4e":"markdown","85d9cf28":"markdown","0d8df8e9":"markdown","0f4f9393":"markdown","27bdf9b7":"markdown","8372a5f2":"markdown","af7187bf":"markdown","a66fd695":"markdown","7c18710f":"markdown","96b1c0e0":"markdown","6116480c":"markdown","d40afceb":"markdown","d5ed55aa":"markdown","b32f2c39":"markdown","ab2413f0":"markdown","a2382dc8":"markdown","fb7ef46d":"markdown","c2d6aea4":"markdown","140bdb78":"markdown","9435b979":"markdown","ad054198":"markdown","4c499704":"markdown","27f651a8":"markdown","f061007d":"markdown"},"source":{"961c6f55":"import pandas as pd \nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime as dt\n\nfrom IPython.display import Image, display\n\nfrom sklearn.metrics import r2_score,explained_variance_score","b8bf1a25":"df = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")","a4bd7592":"df.head()","7b705e44":"df.info()","5da6e0ee":"df.describe()","05bb273e":"df.corr()[\"price\"].sort_values(ascending = False)","e0291767":"plt.figure (figsize = (12,7))\nsns.heatmap(df.corr(), vmin= -1, vmax= 1, cmap=\"Spectral\", annot = True)","850c45f5":"sns.scatterplot(data = df , x= \"price\", y = \"sqft_living\")","63179576":"sns.displot(df[\"price\"],aspect= 4)","90344c9f":"sns.countplot(x = df[\"bedrooms\"])","c1dcd6f6":"plt.figure (figsize = (20,7))\nsns.boxplot(data = df, x=\"bedrooms\", y = \"price\")","13ba45f2":"Image(url = \"https:\/\/areaimages.s3.amazonaws.com\/king_county__washington__search_area.png\")","f2580752":"plt.figure(figsize= (15,7))\nplt.title(\"Price of houses by latitude and longitude\")\nsns.scatterplot(data = df, x= \"long\", y = \"lat\", hue=\"price\", palette=\"RdYlGn\")\nplt.show()","1b249a11":"import plotly.express as px\nimport geopandas as gpd\n\nfig = px.scatter_geo(df,\n                    lat=df['lat'],\n                    lon=df[\"long\"],\n                    #hover_name=\"name\"\n                     size = df[\"price\"],\n                     color = df[\"price\"]\n                    )\nfig.update_layout(\n        title = \"Price of houses by latitude and longitude (plotly)\",\n        geo_scope='usa',\n\n    )\nfig.update_geos(fitbounds=\"locations\") \nfig.show()","c6e78ed6":"df[\"price\"].describe()","f495f186":"price_r_outliers = df[df[\"price\"]<6450000]","260a9eb7":"plt.figure(figsize= (15,7))\nplt.title(\"Price of houses below 75% quartile\")\nsns.scatterplot(data = price_r_outliers, x= \"long\", y = \"lat\", hue=\"price\", palette=\"RdYlGn\")\nplt.show()","789efdb9":"sns.violinplot(data = df , x = \"waterfront\", y =\"price\")","1dd775c6":"df.info()","7dd19d01":"df.drop(\"id\",axis = 1 , inplace = True)","0af14390":"df[\"date\"] = pd.to_datetime(df[\"date\"])\ndf[\"month\"] = df[\"date\"].dt.month\ndf[\"year\"] = df[\"date\"].dt.year  #only have 2014, 2015\n\ndf[\"day_week\"] = df[\"date\"].dt.day_name()","10ba8871":"df[[\"date\",\"day_week\",\"month\",\"year\"]].head()","7a153b32":"## drop date as we have the same info in other columns \ndf.drop(\"date\",axis = 1, inplace = True)","12667fea":"plt.figure(figsize=(15,5))\nplt.title(\"Price by month\")\nsns.lineplot(data = df, x = \"month\", y = \"price\" ,palette=\"Set1\")\nplt.show()","dcec25ae":"plt.figure(figsize=(15,5))\nplt.title(\"Price by day of the week\")\nsns.lineplot(data = df, x = \"year\", y = \"price\" ,palette=\"Set1\")\nplt.show()","3a83ef0c":"from pandas.api.types import CategoricalDtype\n\ncats = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ncat_type = CategoricalDtype(categories=cats, ordered=True)\ndf['day_week'] = df['day_week'].astype(cat_type)","18877627":"plt.figure(figsize=(15,5))\nplt.title(\"Price by day of the week\")\nsns.lineplot(data = df, x = \"day_week\", y = \"price\" ,palette=\"Set1\")\nplt.show()","30cb9104":"df.info()","fa241f28":"sns.scatterplot(data = df , x = \"yr_built\", y = \"price\")","1c965181":"sns.scatterplot(data = df , x = \"yr_renovated\", y = \"price\")","0d911e88":"sns.lmplot(data = df[df[\"yr_renovated\"]>0] , x = \"yr_renovated\", y = \"price\")","a3cbac66":"df[\"zipcode\"].value_counts()","13f3319c":"import requests\nurl = requests.get(\"https:\/\/www.zipdatamaps.com\/king-wa-county-zipcodes\")\ntables = pd.read_html(url.text)\n\nzip_re = tables[1]\nzip_re= zip_re['List of All Zipcodes in King County, Washington']\nzip_re.head()","42a0cb36":"zip_re = zip_re.dropna(axis = 0)\nzip_re.isnull().sum()","1f329d6d":"zip_re[\"ZIP Code\"] = zip_re[\"ZIP Code\"].astype(int)","dd89ca85":"df = df.merge(zip_re,left_on='zipcode', right_on='ZIP Code')","c182011f":"# drop the zipcodes but we can keep a new population column \ndf.drop([\"ZIP Code\",\"zipcode\",\"ZIP Type\" ], axis = 1, inplace = True)","6168dcb4":"df.info()","2654636c":"df_dum= df.copy()","fd282c95":"df_dum = pd.concat([df_dum,pd.get_dummies(df[\"day_week\"],drop_first=True)],axis = 1)  ","a4b95016":"df = df.drop([\"day_week\"],axis = 1)\ndf_dum = df_dum.drop([\"day_week\"],axis = 1)","b0fb1eeb":"df_dum = pd.concat([df_dum,pd.get_dummies(df[\"ZIP Code Name\"],drop_first=True)],axis = 1) ","634ae164":"df_dum.drop(\"ZIP Code Name\" ,axis =1, inplace = True) \ndf.drop(\"ZIP Code Name\" ,axis =1, inplace = True) ","328cc50e":"from sklearn.model_selection import train_test_split","e8f9b9d4":"X= df.drop(\"price\", axis = 1)\ny = df[\"price\"]\n\nX_dum = df_dum.drop(\"price\", axis =1)\ny_dum = df_dum[\"price\"]","ab4aa106":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\nX_train_dum, X_test_dum, y_train_dum, y_test_dum = train_test_split(X_dum, y_dum, test_size=0.3, random_state=42)","85b0ef21":"from sklearn.preprocessing import MinMaxScaler","e072c4b7":"scaler = MinMaxScaler()","4433fcb8":"X_train =scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\nX_train_dum =scaler.fit_transform(X_train_dum)\nX_test_dum = scaler.transform(X_test_dum)","8bcd02a4":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","fce66d64":"model = Sequential()","5770c283":"X_train.shape","0d8bcc19":"model.add(Dense(26,activation = \"relu\"))   # 26 neurons , relu - limiting output between 0 and max\nmodel.add(Dense(26,activation = \"relu\"))\nmodel.add(Dense(26,activation = \"relu\"))\nmodel.add(Dense(26,activation = \"relu\"))\nmodel.add(Dense(1))","865dc580":"model.compile(optimizer=\"adam\", loss= \"mse\")","274a5a1e":"model.fit(X_train, y_train,validation_data=(X_test,y_test), epochs= 400,batch_size =128 )","f9a92de4":"loss_out = model.history.history\nloss_df = pd.DataFrame(loss_out)\nloss_df.head()","f49c36c4":"plt.figure(figsize=(10,5))\nsns.lineplot(data = loss_df[\"loss\"])\nsns.lineplot(data = loss_df[\"val_loss\"])","2fdeade0":"model.evaluate(X_train,y_train)**0.5","8764f4be":"y_pred = model.predict(X_test)\nr2_score(y_test,y_pred)","73a179fc":"explained_variance_score(y_test, y_pred)","daad3fcc":"X_train_dum.shape","4f988824":"model_dum = Sequential()","dc793e94":"model_dum.add(Dense(49,activation = \"relu\"))   \nmodel_dum.add(Dense(49,activation = \"relu\"))\nmodel_dum.add(Dense(49,activation = \"relu\"))\nmodel_dum.add(Dense(49,activation = \"relu\"))\nmodel_dum.add(Dense(1))","06142b25":"model_dum.compile(optimizer=\"adam\", loss= \"mse\")\nmodel_dum.fit(X_train_dum, y_train_dum, validation_data=(X_test_dum,y_test_dum), epochs= 400,batch_size =128 )","28a0716a":"y_pred_dum = model_dum.predict(X_test_dum)\nr2_score(y_test_dum,y_pred_dum)","45365acd":"explained_variance_score(y_test_dum, y_pred_dum)","bf64ed48":"## with Dummies","39a4cd4e":"If we look at the actual map of Kings County, The distribution of prices could be affected by being closer to the water. Lets check ","85d9cf28":"# Inital EDA","0d8df8e9":"## Visualization ","0f4f9393":"**Price** has high +ve correlation with:\n* sqft_living \n* grade\n* sqft_above\n* sqft_living15\n* bathrooms","27bdf9b7":"Of the assumtption that 0 means it was never renovated. lets see without the zeroes","8372a5f2":"### Other Date fields\n","af7187bf":"### Zip code name\n\nThis creates a lot of additional columns - lets remember to try our model with or without the zipcodes ","a66fd695":"### Year","7c18710f":"### Day of the week\nNote that we have to order the day_week column to get it in the right order for the graph ","96b1c0e0":"Interactive graph with plotly","6116480c":"### Day column ","d40afceb":"Not a significant correlation of renovation year and year it was built to the price","d5ed55aa":"## Looks like the extra Dummies enhanced the result!!!","b32f2c39":"### Month","ab2413f0":"# Neural Network Regression ","a2382dc8":"# Split","fb7ef46d":"# Evaluation ","c2d6aea4":"### Map - latitude and longitude","140bdb78":"This is a lot of numbers to create dummy variables. we can potentiall group them using external information \\\nA good website found was this [one](https:\/\/www.zipdatamaps.com\/king-wa-county-zipcodes) which shows labels the zipcodes by area\n ","9435b979":"### Zipcode\nCategorical VS numerical \n\nAs we know the zipcode equates to a specific area in King County, we therefore should consider this a categorical feature and will therefore need to create dummies or else group them into categories","ad054198":"# Scaling","4c499704":"# Create dummies ","27f651a8":"## Date\n* Make datetime\n* extract year \n* extract month","f061007d":"# Feature Engineering "}}