{"cell_type":{"2427d9ad":"code","3ce4d792":"code","507a3fdb":"code","e66fd6de":"code","e5f78242":"code","04315f81":"code","e0d21684":"code","92a55f3d":"code","4458ddf4":"code","660fea97":"code","b1ae22a5":"code","b3cee3c5":"code","bcda7a41":"code","dd8b9698":"code","1c4eb981":"code","c1f97f6a":"code","9d322b13":"code","95c132e0":"markdown","9d01030d":"markdown"},"source":{"2427d9ad":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport tensorflow as tf\n","3ce4d792":"df = pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndf","507a3fdb":"df.info()","e66fd6de":"df.describe()","e5f78242":"df.isna().sum()","04315f81":"df.drop('Unnamed: 32', axis = 1, inplace = True)\ndf.head()","e0d21684":"plt.figure(figsize=(18, 9))\nsns.heatmap(data=df.corr(), annot=True)\nplt.title('Correlation',size=17)\nplt.show()","92a55f3d":"sns.violinplot(x=\"smoothness_mean\",y=\"perimeter_mean\",data=df)\n","4458ddf4":"x = df.drop(columns = 'diagnosis')\n\ny = df['diagnosis']","660fea97":"from sklearn.model_selection import train_test_split \nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","b1ae22a5":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier()","b3cee3c5":"rf.fit(x_train,y_train)","bcda7a41":"from sklearn.metrics import accuracy_score\npred_rf=rf.predict(x_test)\naccuracy=accuracy_score(pred_rf,y_test)\naccuracy","dd8b9698":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()","1c4eb981":"knn.fit(x_train,y_train)\n","c1f97f6a":"y_pred2=knn.predict(x_test)\naccuracy2=accuracy_score(y_pred2,y_test)\naccuracy2","9d322b13":"from sklearn.metrics import  classification_report,plot_confusion_matrix, confusion_matrix\ny_test = y_test\ntarget_names = [\"B\",\"M\"]\n\ndef class_report(model,y_test,pred,target_names):\n    print(classification_report(y_test,pred, target_names=target_names))\n    disp = plot_confusion_matrix(model, x_test, y_test,labels=[\"B\",\"M\"])\n    disp.figure_.suptitle(\"Confusion Matrix\")\n    print(f\"Confusion matrix:\\n{disp.confusion_matrix}\")\n    plt.show()\n\n\nclass_report(rf,y_test,pred_rf,target_names)","95c132e0":"# Random Forest","9d01030d":"# KNN"}}