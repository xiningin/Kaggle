{"cell_type":{"3ee084cc":"code","0bfd1c8b":"code","7c62f1eb":"code","eab825bb":"code","66f13641":"code","2f448b73":"code","cf726752":"code","2e7067ae":"code","a49094af":"code","688463c6":"markdown","728988e6":"markdown","ea19e6a4":"markdown","a86c4991":"markdown","04c22c5b":"markdown","2cc58b12":"markdown"},"source":{"3ee084cc":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nimport pandas as pd\nNBA = pd.read_csv(\"..\/input\/seasons-1318\/NBA.csv\")","0bfd1c8b":"y = NBA.teamPTS\n\nNBA_features = ['teamAST', 'teamTO', 'teamSTL', 'teamBLK', 'teamFGM', 'pace', 'poss', 'team2P%', 'team3P%', 'teamFTM', 'teamORB' ]\nX = NBA[NBA_features]\nX.describe()","7c62f1eb":"train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)","eab825bb":"NBA_model = DecisionTreeRegressor(random_state=1)\nNBA_model.fit(train_X, train_y)\nNBA_pred = NBA_model.predict(val_X)","66f13641":"print(\"The actual results\")\nprint(y.head(20))\nprint(\"The predictions are\")\nprint(NBA_pred[:20])","2f448b73":"mean_absolute_error(val_y, NBA_pred)","cf726752":"from sklearn.ensemble import RandomForestRegressor","2e7067ae":"NBA_model_2 = RandomForestRegressor(random_state=1)\nNBA_model_2.fit(train_X, train_y)\nNBA_pred_2 = NBA_model_2.predict(val_X)\nprint(\"The actual results\")\nprint(y.head(20))\nprint(\"The predictions are\")\nprint(NBA_pred_2[:20])","a49094af":"print(mean_absolute_error(val_y, NBA_pred_2))","688463c6":"A better model might include some more advanced stats (like assist ratio, EFG, ect.)","728988e6":"Next, we implement Random Forests","ea19e6a4":"We first train the model with a Decision Tree; and then use the Random Forest model to search for better results. ","a86c4991":"The goal of this notebook is to use data from the 2013-2018 NBA seasons to train a model to predict the # of points for a given game. ","04c22c5b":"The new model is close to 35% better based off the MSE calculation! After learning more ML I'll return to this model to see if I can further improve it. ","2cc58b12":"The error ended up being alot smaller than I expected (off by 3 points on average). However, looking at the data game to game we see that the model is off by more than 20 points at times. So we want to implement a better model. "}}