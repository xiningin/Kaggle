{"cell_type":{"a48fdc9d":"code","eac46398":"code","45be767f":"code","6b8d326c":"code","41f8f767":"code","54fb91f9":"code","04969a60":"code","4913ed30":"code","7f33e1c3":"code","31db3718":"code","f9d5663e":"code","f307a785":"code","1d04e332":"code","ae795504":"code","2693624c":"code","1780c7cb":"code","18bd2d4a":"code","cda8f55a":"code","24b28e31":"markdown","29ece136":"markdown","75ff6816":"markdown","ee03b9bf":"markdown"},"source":{"a48fdc9d":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","eac46398":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","45be767f":"df = pd.read_csv(\"..\/input\/voicegender\/voice.csv\")","6b8d326c":"df.head(10)","41f8f767":"df.columns","54fb91f9":"df.label.value_counts()","04969a60":"df['label'] = df['label'].map({\"female\":0, \"male\":1})","4913ed30":"y = df['label'].values\nX = df.drop(['label'], axis=1).values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","7f33e1c3":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","31db3718":"model = Sequential()\nmodel.add(Dense(1, activation=\"sigmoid\"))","f9d5663e":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","f307a785":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=100, verbose=1)","1d04e332":"predict_x=model.predict(X_test)\ny_ann = np.round(predict_x).astype(int).flatten()","ae795504":"y_ann","2693624c":"accuracy_score(y_test, y_ann)","1780c7cb":"confusion_matrix(y_test, y_ann)","18bd2d4a":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()","cda8f55a":"plot_scores(train)","24b28e31":"# Voice genre","29ece136":"Il n'y a pas de colonnes inutile","75ff6816":"## Librairies utiles","ee03b9bf":"On remplace les labels par des chiffres 0 et 1 afin de n'avoir que des entiers ou de flottants dans le dataset"}}