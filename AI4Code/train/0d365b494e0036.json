{"cell_type":{"38ea1fc4":"code","9654844a":"code","7ebb556f":"code","6f0f50fc":"code","fedc8bd2":"code","cd46b745":"code","1b5e33df":"code","ff2f4140":"markdown","dcb4591a":"markdown","9b9ca0cf":"markdown"},"source":{"38ea1fc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9654844a":"df=pd.read_csv('..\/input\/palestine-body-count\/Palestine Body Count.csv')","7ebb556f":"pd.isnull(df).sum()","6f0f50fc":"\nDF= pd.DataFrame(df.groupby(\"Year\")[\"Palestinians Killed\"].max().sort_values(ascending = False))\nDF.reset_index(level=0,inplace=True)\nfig = px.pie(DF,\n             values='Palestinians Killed',\n             names='Year',\n             hover_data=['Palestinians Killed'],\n             labels={'country':'country'}\n            )\nfig.update_layout(title='<b>Palestinians Killed By Year Hover Pie-chart<b>',\n                  titlefont={'size': 24,\n                             'family': 'Serif',\n                            },\n                  showlegend=False, \n                  width=600, \n                  height=600)\nfig.show()","fedc8bd2":"df1= pd.DataFrame(df.groupby(\"Year\")[\"Palestinians Killed\"].max().sort_values(ascending = False))\ndf2= pd.DataFrame(df.groupby(\"Year\")[\"Israelis Injuries\"].max().sort_values(ascending = False))\ndf3= pd.DataFrame(df.groupby(\"Year\")[\"Israelis Killed\"].max().sort_values(ascending = False))\ndf4=pd.concat([df1,df2, df3],  axis=1)\ndf4.reset_index(level=0, inplace=True)\n","cd46b745":"import plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\n\ntrace1 = go.Scatter(x = df4['Year'],\n                    y = df4['Palestinians Killed'],\n                    mode = \"lines+markers\",\n                    name = \"Palestinians Killed\",\n                    marker = dict(color = 'red'),\n                    text= df4['Year'])\ntrace2 = go.Scatter(x = df4['Year'],\n                    y = df4['Israelis Injuries'],\n                    mode = \"lines+markers\",\n                    name = \"Israelis Injuries\",\n                    marker = dict(color = 'blue'),\n                    text= df4['Year'])\ntrace3 = go.Scatter(x = df4['Year'],\n                    y = df4['Israelis Killed'],\n                    mode = \"lines+markers\",\n                    name = \"Israelis Killed\",\n                    marker = dict(color = 'green'),\n                    text= df4['Year'])\n\ndata = [trace1, trace2, trace3]\nlayout = dict(title = ' Comparision of casualties throughout ',\n              xaxis= dict(title= 'Year',ticklen= 5,zeroline= False),\n               \n              hovermode=\"x unified\")\nfig = dict(data = data, layout = layout)\niplot(fig)     ","1b5e33df":"import plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\ntrace1 =go.Scatter(\n                    x = df4['Year'],\n                    y = df4['Palestinians Killed'],\n                    mode = \"markers\",\n                    name = \"Palestinians Killed\",\n                    marker = dict(color = 'red'),\n                    #line = dict(color='firebrick', width=4, dash='dot'),\n                    text= 'Palestinians Killed')\ntrace2 =go.Scatter(\n                    x = df4['Year'],\n                    y = df4['Israelis Injuries'],\n                    mode = \"markers\",\n                    name = \"Israelis Injuries\",\n                    marker = dict(color = 'Blue'),\n                    #line = dict(color='firebrick', width=4, dash='dot'),\n                    text= df4.Year)\ntrace3 =go.Scatter(\n                    x = df4['Year'],\n                    y = df4['Israelis Killed'],\n                    mode = \"markers\",\n                    name = \"Israelis Killed\",\n                    marker = dict(color = 'green'),\n                    #line = dict(color='firebrick', width=4, dash='dot'),\n                    text= df4.Year)\n\n\ndata = [trace1,trace2,trace3]\nlayout = dict(title = 'Scatter Hover Plot',\n              xaxis= dict(title= 'Year',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Number of People',ticklen= 5,zeroline= False),\n              hovermode=\"x unified\"\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)\n","ff2f4140":"> Number Of instances by Year","dcb4591a":"# All visualizations are Mouse Hover figures. Don't forget to bring your cursor over the visualizations","9b9ca0cf":"# >Bring your cursor over pie-chart  "}}