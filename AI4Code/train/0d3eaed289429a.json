{"cell_type":{"855bad0a":"code","3d49d087":"code","78148507":"code","aadd6a4e":"code","6cda8f4c":"code","19111c33":"code","a8d5251f":"code","096a6604":"code","222132a2":"code","91b02d63":"code","199e9e2b":"code","577bd52a":"code","51c90333":"code","384793a4":"code","1719771f":"code","d015259a":"code","5cec8d92":"code","4c4349b1":"code","6217ba4f":"code","b5baba06":"code","022a2836":"code","4df335f1":"code","082b9166":"code","8fe45043":"code","92b8425e":"code","e3ec8f6e":"code","e43c4e96":"code","ecfec9b9":"code","290fd4e3":"code","e49d5fe2":"code","f33db35f":"code","5484a9dd":"code","aec70a92":"code","08e4f600":"code","58f4a918":"code","18f1d443":"code","5a73ce2c":"code","f47e7a57":"code","4721bd97":"code","5529c6e8":"code","2d5ede7a":"code","04add1db":"code","0b8e5a64":"code","52cf891a":"code","b4911c9b":"code","30b704e1":"code","557799a8":"code","94c8b893":"code","85bff21e":"code","1d78cf83":"code","155ffa72":"code","076353cc":"code","5caf7928":"code","4b614380":"code","af0fe9a5":"code","57832e06":"code","97f66415":"code","8c16f81b":"code","ad0cdc3c":"code","825877b0":"code","bc93cbb2":"code","7ca651e6":"code","3e60bc5c":"code","d7f50c56":"code","534483c9":"code","7ec7ccb4":"code","6e46203d":"code","45c05904":"code","9e766fa4":"code","571b28cf":"code","bb9082d8":"code","b84764a4":"code","457643cb":"code","d4df2646":"code","f94980bf":"code","9c1589f0":"code","4b4eb495":"code","7d72ccd1":"code","b8730b97":"code","30ef2d7d":"code","6a988b64":"code","57c49161":"code","e5ea8eb7":"code","5d0e721c":"code","954fad66":"code","128c6b02":"code","709da23e":"code","aa400e27":"code","3be98bd9":"code","87e30133":"code","dcc84488":"code","cf017290":"code","0b80400a":"code","0d1c687f":"code","59185015":"code","1a7c24b7":"code","f44b254b":"code","cb9be30a":"code","44b600b5":"code","9fde6aaf":"code","915ac6b6":"code","0761eb2a":"code","1190eef7":"markdown","ec826683":"markdown","7ba10d3e":"markdown","384f6823":"markdown","99ade17e":"markdown","87f75676":"markdown","9c329cac":"markdown","74ac3bb3":"markdown","dbb043ca":"markdown","a6b95410":"markdown","25e904a5":"markdown","312c5d50":"markdown","065d2bea":"markdown","bf2200f4":"markdown","b892bc27":"markdown","c9611b0f":"markdown","1dbbe5dc":"markdown","16b4de32":"markdown","b40b647a":"markdown","e95c5829":"markdown","9cc00a58":"markdown","60f15525":"markdown","d85cd35d":"markdown","c6dd058c":"markdown","82e2d3b1":"markdown","12cd364c":"markdown","daf4be2f":"markdown","fc66c3b5":"markdown","07da4b89":"markdown","4daa5912":"markdown","4c6575ee":"markdown","63eebe28":"markdown","f26a9aaa":"markdown","5d194c48":"markdown","87d2f084":"markdown","5bc56fde":"markdown","bbd23035":"markdown","651afc9f":"markdown","0f85f44a":"markdown","c75183bd":"markdown","b9065ec4":"markdown","2ab4e47a":"markdown","736d2417":"markdown","fc16695e":"markdown","d3538224":"markdown","1876b04c":"markdown","09c5afe4":"markdown","637ededb":"markdown","8272410e":"markdown","7cf5d5db":"markdown","42ecf1c3":"markdown","524ef5df":"markdown","c8750024":"markdown","5322a3d5":"markdown","e28763f9":"markdown","71d278f3":"markdown","ba8bf1c3":"markdown","96675daf":"markdown","a812d575":"markdown","740b9bd5":"markdown","286bcdda":"markdown","a9940e87":"markdown","515a0c7c":"markdown","474daf3b":"markdown","0e4f2c35":"markdown","21b48694":"markdown","414d12b8":"markdown","195e96dd":"markdown","ab9110ce":"markdown","3d7cb31e":"markdown","b09c2102":"markdown","42ebb890":"markdown","de0cdacd":"markdown","ded68982":"markdown","2259fb50":"markdown","415e6067":"markdown","e76c769f":"markdown","5ebae67b":"markdown","01a0edda":"markdown","1d0ed87a":"markdown","8f1c7c0c":"markdown","aa3da74d":"markdown","db62d685":"markdown","b2dfa00a":"markdown","35c8b596":"markdown","0ae4fc73":"markdown","92d27114":"markdown","71a0f937":"markdown","c40b4b1b":"markdown","5f84b19d":"markdown","b20b0b7f":"markdown","86d96ba3":"markdown","66e2336b":"markdown","8838e3bc":"markdown","2d73c427":"markdown","5f5cc304":"markdown","e329f7db":"markdown","178f99ba":"markdown","13892ca4":"markdown","4ece50fb":"markdown","6d3afc92":"markdown","5b4a4a60":"markdown","6e41867a":"markdown","8e5bfa35":"markdown","b702fb2e":"markdown","5b15101b":"markdown"},"source":{"855bad0a":"import os\nimport warnings\nwarnings.filterwarnings('ignore')","3d49d087":"import numpy as np\nimport pandas as pd\n\n# To display data dictionary fully\npd.set_option('display.max_columns', None)  \npd.set_option('display.expand_frame_repr', False)\npd.set_option('max_colwidth', 1000)\n\n# For Visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.color_palette(\"Set1\")\n\n# To Scale our data\nfrom sklearn.preprocessing import StandardScaler\n\n# To perform KMeans clustering \nfrom sklearn.cluster import KMeans\n\n# To perform Hierarchical clustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","78148507":"\ndata_dictionary = pd.read_csv('\/kaggle\/input\/help-international\/data-dictionary.csv')\ndata_dictionary","aadd6a4e":"country_df = pd.read_csv('\/kaggle\/input\/help-international\/Country-data.csv')\ncountry_df.head() # Checking the top 5 rows of the dataframe","6cda8f4c":"# checking botton 5 rows of the dataframe\ncountry_df.tail()","19111c33":"# Checking the shape of the dataframe\ncountry_df.shape","a8d5251f":"# Checking the size of the dataframe\ncountry_df.size","096a6604":"# Inspecting type\nprint(country_df.dtypes)","222132a2":"# How many types of each data type column exists and total memory usage\ncountry_df.info()","91b02d63":"country_df.duplicated().sum()","199e9e2b":"# Checking the number of unique values each column possess to identify categorical columns\ncountry_df.nunique().sort_values()","577bd52a":"# Checking the numerical columns data distribution\ncountry_df.describe()","51c90333":"# Looking for any null value in any column \nprint(country_df.isnull().sum())","384793a4":"country_df.head() # Lets check data before conversion","1719771f":"# Converting exports,imports and health spending percentages to absolute values.\n\ncountry_df['exports'] = country_df['exports'] * country_df['gdpp']\/100\ncountry_df['imports'] = country_df['imports'] * country_df['gdpp']\/100\ncountry_df['health'] = country_df['health'] * country_df['gdpp']\/100\n\ncountry_df.head() # Lets check data after conversion","d015259a":"numerical_cols = list(country_df.columns) # Get all column names\nnumerical_cols.remove('country') # Remove country as its not numerical\nnumerical_cols","5cec8d92":"sns.pairplot(country_df[numerical_cols], corner=True)\nplt.show()","4c4349b1":"plt.figure(figsize=(14,8))\nsns.heatmap(country_df.corr(), annot=True,linewidth = 0.5, cmap = sns.diverging_palette(380, 150, n=8))","6217ba4f":"plt.figure(figsize=[16,12])\ni=1 # to track the ith plot in the subplot\nfor col in numerical_cols:\n    plt.subplot(3,3,i)\n    sns.distplot(country_df[col])\n    plt.title(col)\n    plt.xlabel('')    \n    i+=1","b5baba06":"def point_plots_with_line(y_column, line_cutoff, ylog=False):\n    #plt.figure(figsize=(18,6))\n    ax = sns.pointplot(x=\"country\", y=y_column, data=country_df)\n    plt.xticks(rotation = 90,fontsize =7)\n    if ylog:\n        plt.yscale('log')\n    ax.axhline(line_cutoff, ls='--',color='red')\n    plt.title(\"%s vs countries\" %y_column)\n    plt.ylabel(y_column)\n    plt.xlabel('')\n    #plt.show()","022a2836":"def plot_bottom10_countries(y_column, sort_order=True, truncate_string=False):\n    sorted_df = country_df[['country',y_column]].sort_values(y_column, ascending = sort_order).head(10) # get bottom 10\n    sorted_df[y_column] = sorted_df[y_column].round(2) # roundoff to 2 decimals\n    if truncate_string: # truncate only for subplots proper visualization purpose\n        sorted_df.loc[sorted_df['country'].str.contains('Central African Republic'),'country'] = 'Cent.Afr.Repub.'\n        sorted_df.loc[sorted_df['country'].str.contains('Congo'),'country'] = 'Congo'\n        sorted_df.loc[sorted_df['country'].str.contains('Equatorial Guinea'),'country'] = 'Guinea'\n        \n    ax = sns.barplot(x='country', y=y_column, data= sorted_df)\n    for each_bar in ax.patches:\n        ax.annotate(str(each_bar.get_height()), (each_bar.get_x() * 1.01 , each_bar.get_height() * 1.01))\n    plt.ylabel(y_column)\n    plt.xlabel('10 Countries which have poor %s' %y_column)\n    ax.set_xticklabels(sorted_df['country'], rotation=45, ha='center')","4df335f1":"plt.figure(figsize = (18,20))\nplt.subplot(3,1,1)\npoint_plots_with_line(\"gdpp\", 4660) # 4660 is median of GDPP\nplt.subplot(3,1,2)\npoint_plots_with_line(\"gdpp\", 1330, True) # 1330 is 25th percentile of GDPP\nplt.subplot(3,1,3)\nplot_bottom10_countries(\"gdpp\")\nplt.show()","082b9166":"plt.figure(figsize = (18,20))\nplt.subplot(3,1,1)\npoint_plots_with_line(\"income\", 9960) # 9960 is median of income\nplt.subplot(3,1,2)\npoint_plots_with_line(\"income\", 3350, True) # 3350 is 25th percentile of income\nplt.subplot(3,1,3)\nplot_bottom10_countries(\"income\")\nplt.show()","8fe45043":"plt.figure(figsize = (18,12))\nplt.subplot(2,1,1)\npoint_plots_with_line(\"child_mort\", 62) # 62 is 75th percentile of child_mort\nplt.subplot(2,1,2)\nplot_bottom10_countries(\"child_mort\", False)\nplt.show()","92b8425e":"plt.figure(figsize = (18,16))\nplt.subplot(2,3,1)\nplot_bottom10_countries(\"exports\", sort_order=True, truncate_string=True)\nplt.subplot(2,3,2)\nplot_bottom10_countries(\"health\")\nplt.subplot(2,3,3)\nplot_bottom10_countries(\"imports\")\nplt.subplot(2,3,4)\nplot_bottom10_countries(\"inflation\", sort_order=False, truncate_string=True)\nplt.subplot(2,3,5)\nplot_bottom10_countries(\"life_expec\", sort_order=True, truncate_string=True)\nplt.subplot(2,3,6)\nplot_bottom10_countries(\"total_fer\", sort_order=False, truncate_string=True)\nplt.show()","e3ec8f6e":"country_df.describe(percentiles=[.1,.5,.25,.75,.90,.95,.99])","e43c4e96":"def boxplot_for_outlier_analysis():\n    plt.figure(figsize=[16,12])\n    i=1 # to track the ith plot in the subplot\n    for col in numerical_cols:\n        plt.subplot(3,3,i)\n        sns.boxplot(y=country_df[col])\n        plt.title(col)\n        plt.ylabel('')\n        i+=1","ecfec9b9":"boxplot_for_outlier_analysis()","290fd4e3":"higher_outlier_cols = ['exports','imports','health','income','total_fer','gdpp']\n\nfor col in higher_outlier_cols:\n    Q4 = country_df[col].quantile(0.99) # Get 99th quantile\n    country_df.loc[country_df[col] >= Q4, col] = Q4 # outlier capping","e49d5fe2":"boxplot_for_outlier_analysis()","f33db35f":"country_df.describe(percentiles=[.1,.5,.25,.75,.90,.95,.99])","5484a9dd":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","aec70a92":"hopkins(country_df[numerical_cols])","08e4f600":"# Scaling on numerical features\n\nscaler = StandardScaler() # instantiate scaler\n\ncountry_df_scaled = scaler.fit_transform(country_df[numerical_cols]) # fit parameters to have mean 0 and SD as 1 and transform data accordingly\ncountry_df_scaled = pd.DataFrame(country_df_scaled, columns = numerical_cols) # convert to dataframe\ncountry_df_scaled","58f4a918":"# Elbow curve-ssd\nssd = []\nfor k in range(2, 11):\n    kmean = KMeans(n_clusters = k).fit(country_df_scaled)\n    ssd.append([k, kmean.inertia_])\n    \ntemp = pd.DataFrame(ssd)\nax = plt.axes()\nax.plot(temp[0], temp[1]) # plot the SSDs for each n_clusters\nax.axvline(3, ls='dotted',color='red') # elbow formed as 3\nplt.xlabel('Number of clusters')\nplt.ylabel('SSD')\nplt.show()","18f1d443":"# Silhouette score\n\nfrom sklearn.metrics import silhouette_score\nsilhouette_scores_list = []\nfor k in range(2, 11):\n    kmean = KMeans(n_clusters = k).fit(country_df_scaled) # intialise kmeans\n    silhouette_avg = silhouette_score(country_df_scaled, kmean.labels_) # silhouette score\n    silhouette_scores_list.append([k, silhouette_avg])\n    print(\"For k_clusters={0}, the silhouette score is {1:2f}\".format(k, silhouette_avg))\n    \ntemp = pd.DataFrame(silhouette_scores_list)    \nax = plt.axes()\nax.plot(temp[0], temp[1])\nax.axvline(3, ls='dotted',color='green') # elbow formed as 3\nax.axvline(4, ls='dotted',color='blue') # elbow formed as 3\nax.axvline(5, ls='dotted',color='maroon') # elbow formed as 3\nplt.xlabel('Number of clusters')\nplt.ylabel('Silhouette score')\nplt.show()","5a73ce2c":"# Function for all steps of Kmean Clustering; Call with K=3,4,5\ndef K_means_model(k):\n    kmean = KMeans(n_clusters = k, random_state = 50+k)\n    kmean.fit(country_df_scaled)\n    country_df_kmean = country_df.copy() # copy the actual data into a new dataframe to explain the cluster profiling\n    label  = pd.DataFrame(kmean.labels_, columns= ['k_means_cluster_label'])\n    country_df_kmean = pd.concat([country_df_kmean, label], axis =1) # assign the countries with the cluster labels.\n    print(\"Number of countries in each cluster(k=%s):\" %k)\n    print(country_df_kmean.k_means_cluster_label.value_counts())# shows how many countries are in each cluster\n    return(country_df_kmean) # returns clustered labelled dataset for further analysis","f47e7a57":"# Created Models are available globally to access inside cluster profiling functions\nk_3_model = K_means_model(3) # K means model with 3 clusters\nk_4_model = K_means_model(4) # K means model with 4 clusters\nk_5_model = K_means_model(5) # K means model with 5 clusters","4721bd97":"# Function for Profiling Clusters to plot scatter plots\ndef clusters_scatter_plots(col1, col2):\n    plt.figure(figsize=(18,8))\n    plt.subplot(2,2,1)\n    sns.scatterplot(x = col1, y = col2, hue = 'k_means_cluster_label', data = k_3_model, palette=['blue','green','red'])\n    plt.subplot(2,2,2)\n    sns.scatterplot(x = col1, y = col2, hue = 'k_means_cluster_label', data = k_4_model, palette=['orange','blue','green','red'])\n    plt.subplot(2,2,3)\n    sns.scatterplot(x = col1, y = col2, hue = 'k_means_cluster_label', data = k_5_model, palette=['red','orange','maroon','green','blue'])","5529c6e8":"clusters_scatter_plots('gdpp','income')","2d5ede7a":"clusters_scatter_plots('gdpp','child_mort')","04add1db":"clusters_scatter_plots('income','child_mort')","0b8e5a64":"# Function for Profiling Clusters to plot box plots\ndef clusters_box_plots(column_name, logy=False):\n    #plt.figure(figsize=(18,8))\n    \n    if logy:\n        i=1\n    else:\n        i=0\n    \n    plt.subplot(2+i,2,1)\n    sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_3_model, palette=['red','green','blue'])\n    if logy:\n        plt.subplot(3,2,2)\n        sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_3_model, palette=['red','green','blue'])\n        plt.yscale('log')\n\n    plt.subplot(2+i,2,2+i)\n    sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_4_model, palette=['orange', 'blue','green','red'])    \n    if logy:\n        plt.subplot(3,2,4)\n        sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_4_model, palette=['orange','blue','green','red'])\n        plt.yscale('log')\n        \n    plt.subplot(2+i,2,3+i+i)\n    sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_5_model, palette=['red','blue','maroon','green','orange'])\n    if logy:\n        plt.subplot(3,2,6)\n        sns.boxplot(x = 'k_means_cluster_label', y = column_name, data = k_5_model, palette=['red','blue','maroon','green','orange'])\n        plt.yscale('log')    ","52cf891a":"plt.figure(figsize = (18,16))\nclusters_box_plots('gdpp',True) # log scaled\nplt.show()","b4911c9b":"plt.figure(figsize = (18,16))\nclusters_box_plots('income',True) # log scaled\nplt.show()","30b704e1":"plt.figure(figsize = (16,10))\nclusters_box_plots('child_mort')\nplt.show()","557799a8":"plt.figure(figsize=(18,8))\ngrouped_df_k3 = k_3_model[['gdpp', 'income', 'child_mort','k_means_cluster_label']].groupby('k_means_cluster_label').mean()\naxes = grouped_df_k3.plot.bar(subplots=True)\nplt.show()","94c8b893":"# Profiling GDP, INCOME AND CHID_MORT together\n\ngrouped_df_k3.plot(kind='bar', colormap='Accent')    \ngrouped_df_k3.plot(kind='bar',logy=True, colormap='Accent')    \nplt.show()","85bff21e":"plt.figure(figsize=(18,8))\ngrouped_df_k4 = k_4_model[['gdpp', 'income', 'child_mort','k_means_cluster_label']].groupby('k_means_cluster_label').mean()\naxes = grouped_df_k4.plot.bar(subplots=True)\nplt.show()","1d78cf83":"# Profiling GDP, INCOME AND CHID_MORT together\ngrouped_df_k4.plot(kind='bar', colormap='Accent')    \ngrouped_df_k4.plot(kind='bar',logy=True, colormap='Accent')    \nplt.show()","155ffa72":"plt.figure(figsize=(18,8))\ngrouped_df_k5 = k_5_model[['gdpp', 'income', 'child_mort','k_means_cluster_label']].groupby('k_means_cluster_label').mean()\naxes = grouped_df_k5.plot.bar(subplots=True)\nplt.show()","076353cc":"# Profiling GDP, INCOME AND CHID_MORT together\ngrouped_df_k5.plot(kind='bar', colormap='Accent')    \ngrouped_df_k5.plot(kind='bar',logy=True, colormap='Accent')    \nplt.show()","5caf7928":"k_5_model[k_5_model['k_means_cluster_label']==4]","4b614380":"kmean = KMeans(n_clusters = 3, random_state = 50)\nkmean.fit(country_df_scaled)","af0fe9a5":"country_df_kmean = country_df.copy() # copy df into new df, as the same df will be used for hierarchical clustering too.\nlabel  = pd.DataFrame(kmean.labels_, columns= ['k_means_cluster_label'])\nlabel.head()","57832e06":"country_df_kmean = pd.concat([country_df_kmean, label], axis =1)\ncountry_df_kmean.head()","97f66415":"country_df_kmean.k_means_cluster_label.value_counts()","8c16f81b":"# Profiling GDP, INCOME AND CHID_MORT in separate plots\n\ngrouped_df = country_df_kmean[['gdpp', 'income', 'child_mort','k_means_cluster_label']].groupby('k_means_cluster_label').mean()\naxes = grouped_df.plot.bar(subplots=True)\nplt.show()","ad0cdc3c":"# Profiling GDP, INCOME AND CHID_MORT together\ngrouped_df.plot(kind='bar', colormap='Accent')\ngrouped_df.plot(kind='bar',logy=True, colormap='Accent')","825877b0":"# Medium income, Medium GDP and Slightly high Child_mort\n# Filter the data for that clsuter\n\ncountry_df_kmean.loc[country_df_kmean['k_means_cluster_label'] == 0,'k_means_cluster_label'] ='Developing Countries'\ncountry_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Developing Countries']","bc93cbb2":"country_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Developing Countries'].describe()","7ca651e6":"# Developed Countries: High income, High GDP and Low Child_mort\n# Filter the data for that clsuter\ncountry_df_kmean.loc[country_df_kmean['k_means_cluster_label'] == 1,'k_means_cluster_label'] ='Developed Countries'\ncountry_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Developed Countries']","3e60bc5c":"country_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Developed Countries'].describe()","d7f50c56":"# Under-Developed Countries:Low income, Low GDP and High Child_mort\n# Filter the data for that clsuter\n\ncountry_df_kmean.loc[country_df_kmean['k_means_cluster_label'] == 2,'k_means_cluster_label'] ='Under-Developed Countries'\ncountry_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Under-Developed Countries']","534483c9":"country_df_kmean[country_df_kmean['k_means_cluster_label'] == 'Under-Developed Countries'].describe()","7ec7ccb4":"profiling_cols = ['gdpp','child_mort','income'] # create a list to store profiling variables","6e46203d":"# Plot the cluster\nplt.figure(figsize=(18,8))\ni=0\nfor i in range(len(profiling_cols)):\n    plt.subplot(2,2,i+1)\n    sns.scatterplot(x = profiling_cols[i], y = profiling_cols[(i+1)%len(profiling_cols)], hue = 'k_means_cluster_label', data = country_df_kmean, palette=['red','blue','darkgreen'])","45c05904":"# Plot the cluster\nplt.figure(figsize=(18,8))\ni=0\nfor i in range(len(profiling_cols)):\n    plt.subplot(2,2,i+1)\n    sns.boxplot(x = 'k_means_cluster_label', y = profiling_cols[i], data = country_df_kmean, palette=['red','blue','darkgreen'])\n    plt.xlabel('')","9e766fa4":"# Profiling GDP, INCOME AND CHID_MORT in sub-plots\nplt.figure(figsize=(18,8))\ngrouped_df = country_df_kmean[['gdpp', 'income', 'child_mort','k_means_cluster_label']].groupby('k_means_cluster_label').mean()\naxes = grouped_df.plot.bar(subplots=True)\nplt.show()","571b28cf":"# Profiling GDP, INCOME AND CHID_MORT together from the above grouped_df\ngrouped_df.plot(kind='bar', colormap='Accent')\ngrouped_df.plot(kind='bar',logy=True, colormap='Accent')","bb9082d8":"K_top10 = country_df_kmean[country_df_kmean['k_means_cluster_label'] =='Under-Developed Countries'].sort_values(['gdpp', 'child_mort', 'income'], ascending = [True, False, True]).head(10)\nK_top10","b84764a4":"K_top10.country","457643cb":"country_df_scaled","d4df2646":"# single linkage\nmergings = linkage(country_df_scaled, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","f94980bf":"# complete linkage\nmergings = linkage(country_df_scaled, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","9c1589f0":"# 3 clusters\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","4b4eb495":"# assign cluster labels\ncountry_df['cluster_labels'] = cluster_labels\ncountry_df.head()","7d72ccd1":"country_df.cluster_labels.value_counts()","b8730b97":"# Profiling GDP, INCOME AND CHID_MORT in separete plots\ngrouped_df = country_df[['gdpp', 'income', 'child_mort','cluster_labels']].groupby('cluster_labels').mean()\ngrouped_df.plot(kind='bar', colormap='Accent')    \ngrouped_df.plot(kind='bar',logy=True, colormap='Accent')    \nplt.show()","30ef2d7d":"# Profiling GDP, INCOME AND CHID_MORT together\ngrouped_df.plot(kind='bar', colormap='Accent')\ngrouped_df.plot(kind='bar',logy=True, colormap='Accent')","6a988b64":"# Low income, Low GDP and High Child_mort\n# Filter the data for that clsuter\n\ncountry_df.loc[country_df['cluster_labels'] == 0,'cluster_labels'] ='Under-Developed Countries'\ncountry_df[country_df['cluster_labels'] == 'Under-Developed Countries']","57c49161":"country_df[country_df['cluster_labels'] == 'Under-Developed Countries'].describe()","e5ea8eb7":"# Medium income, Medium GDP and Mild Child_mort\n# Filter the data for that clsuter\n\ncountry_df.loc[country_df['cluster_labels'] == 1,'cluster_labels'] ='Developing Countries'\ncountry_df[country_df['cluster_labels'] == 'Developing Countries']","5d0e721c":"country_df[country_df['cluster_labels'] == 'Developing Countries'].describe()","954fad66":"# High income, High GDP and Low Child_mort\n# Filter the data for that clsuter\n\ncountry_df.loc[country_df['cluster_labels'] == 2,'cluster_labels'] ='Developed Countries'\ncountry_df[country_df['cluster_labels'] == 'Developed Countries']","128c6b02":"country_df[country_df['cluster_labels'] == 'Developed Countries'].describe()","709da23e":"# Plot the cluster\nplt.figure(figsize=(18,8))\ni=0\nfor i in range(len(profiling_cols)):\n    plt.subplot(2,2,i+1)\n    sns.scatterplot(x = profiling_cols[i], y = profiling_cols[(i+1)%len(profiling_cols)], hue = 'cluster_labels', data = country_df, palette=['red','blue','green'])","aa400e27":"# Plot the cluster\nplt.figure(figsize=(18,8))\ni=0\nfor i in range(len(profiling_cols)):\n    plt.subplot(2,2,i+1)\n    sns.boxplot(x = 'cluster_labels', y = profiling_cols[i], data = country_df, palette=['red','blue','green'])","3be98bd9":"# Profiling GDP, INCOME AND CHID_MORT in sub-plots\ngrouped_df = country_df[['gdpp', 'income', 'child_mort','cluster_labels']].groupby('cluster_labels').mean()\ngrouped_df.plot(kind='bar', subplots=True)\nplt.show()","87e30133":"# Profiling GDP, INCOME AND CHID_MORT together\ngrouped_df.plot(kind='bar', colormap='Accent')\ngrouped_df.plot(kind='bar',logy=True, colormap='Accent')","dcc84488":"H_top10 = country_df[country_df['cluster_labels'] =='Under-Developed Countries'].sort_values(by = ['gdpp','child_mort','income'], ascending = [True, False, True]).head(10)\nH_top10","cf017290":"H_top10.country","0b80400a":"list(K_top10.country)==list(H_top10.country)","0d1c687f":"Priority_1_countries = K_top10.head(5)\nPriority_1_countries['Aid Priority'] = \"Aid Requirement Priority 1\"\nPriority_1_countries","59185015":"Priority_2_countries = K_top10.tail(5)\nPriority_2_countries['Aid Priority'] = \"Aid Requirement Priority 2\"\nPriority_2_countries","1a7c24b7":"def results_plots(df_name):\n    plt.figure(figsize=[18,6])\n    for i,column_name in enumerate(profiling_cols):\n        plt.subplot(2,2,i+1)\n        ax = sns.barplot(x='country', y=column_name, data= df_name)\n        for each_bar in ax.patches:\n            ax.annotate(str(each_bar.get_height()), (each_bar.get_x() * 1.01 , each_bar.get_height() * 1.01))\n        plt.ylabel(column_name)\n        plt.xlabel('Countries which have poor %s' %column_name)","f44b254b":"Priority_1_countries","cb9be30a":"Priority_1_countries.set_index('country').plot(kind='bar')\nplt.xlabel('')\nplt.show()","44b600b5":"results_plots(Priority_1_countries)","9fde6aaf":"Priority_2_countries","915ac6b6":"Priority_2_countries.set_index('country').plot(kind='bar')\nplt.xlabel('')\nplt.show()","0761eb2a":"results_plots(Priority_2_countries)","1190eef7":"### INFERENCES:\n\n- First plot is little difficult to interpret due to some countries having huge value of GDPP in comparison with other countries.\n- Red line in the First plot divides the countries by their median value. i.e countries above the red lines have their GDPP higher than 4660 and countries below the red line have their GDPP lower than 4660.\n- Second plot shows the same plot with log scaled in the y-axis and it is a bit easier to interpret.\n- Red line in the Second plot divides the countries by their 25th percentile.\n- Second plot shows around 37 countries are below the red line and these are the countries of our focus.\n- Third plot shows the list of 10 countries that have the low GDPP","ec826683":"## 2.3.2 Visualising Correlation using heatmap\n\nLets check correlation between different features using heatmap. Both strong positive and negative correlation are shown in darker shades(green and red respectively). The lighter shades indicate the weak or mild correlation:","7ba10d3e":"### Duplicates analysis","384f6823":"### INFERENCES:\n\nThis gives a very good inference about each cluster.\n\n- 0 : Medium GDPP, medium Income and mild child mortality rate.\n- 1 : High GDPP, High income and very low child mortality rate.\n- 2 : Low GDPP, Low income and very high mortality rate and has to be focussed.","99ade17e":"### 4.3 Final Model: K-means clustering with K =3 `\n\nNow that we have solved the biggest challenge in K-means algorithm i.e. Find the optimal value of k, we can build our final model using k=3. Lets run `K-means` algorithm on the scaled data set as the clustering takes Euclidean distance as a measure","87f75676":"## 3.3 Scaling","9c329cac":"Summary statistics show that the variation within the group is very less and mean and median are so close. So this clustering is good.\n\nAlso the stats of this cluster and the previous cluster has wide difference.","74ac3bb3":"## 4.2 Iterating with k=3,4 and 5","dbb043ca":"## 2.2 Derived Data\n\nFrom the data dictionary in section 1, we saw that exports, health and imports are given as percentage of GDP. Hence we have to convert these columns to absolute values as clustering uses `Euclidean Distance` between values to group the countries","a6b95410":"Summary statistics show that the variation within the group is very less and mean and median are so close. So this clustering is good.\n\nAlso the stats of this cluster and the previous clusters has wide difference.\n\nHence cohesion and separation are well preserved in this clustering","25e904a5":"### Visualization of GDPP distribution when k=3,4,5","312c5d50":"### Visualization of univariate distributions when k=3,4,5\n\nLets also do some boxplots to understand the gdpp, income and child_mortality data distributions within each cluster:","065d2bea":"### Data Inspection:\n\nInspect the various aspects of the `country_df` dataframe such as \n- `shape` for number of rows and columns\n- `size` for memory usage\n- `info()` for the presence of null values\n- `nunique()` for checking how many unique entries present in each column and any column is of categorical in nature.\n- `nunique() and duplicated` for duplicates analysis\n- `describe()` for statistical information","bf2200f4":"### Visualization of Income distribution when k=3,4,5","b892bc27":"# Business Problem:\n\nHELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n \n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n \n\nAnd this is where you come in as a data analyst. Your job is to categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then you need to suggest the countries which the CEO needs to focus on the most. \n\nOur main task is to cluster the countries by the factors mentioned above and then present your solution and recommendations to the CEO using a PPT. ","c9611b0f":"## 5.6 Identification of Top 10 countries that require aid on priority using Hierarchical clustering:","1dbbe5dc":"### Outlier Analysis:\n\nLets not remove the outliers as it explains the country needs and also deleting outliers will delete lot of countries. Hence, lets find the outliers in the dataset, and then use the following strategies whether to keep those as such or to cap those to the corresponding higher or lower quartile values.\n\n\n- `child_mort` has only higher outliers and since we need to identify the countries where `child_mort` is high, lets **not cap** these outliers.\n\n- `exports` and `imports` have only higher outliers and this means the country exports are high and the country is doing fine and hence we can **cap these outliers** to the column's 99th percentile.\n\n- `health` has huge amount of higher outliers and this mean that these countries spend relatively lot of money on the health and hence we can **cap these outliers** to the column's 99th percentile.\n\n- `income` has some amount of higher outliers and this mean that people in these countries income are very higher than the other countries and hence we can **cap these outliers** to the column's 99th percentile.\n\n- `inflation` has some higher outliers and these countries might be in need of aid and hence lets **not cap** these outliers.\n\n- `life_expec` has some lower outliers and these are the countries which need our attention and hence lets **not cap** these outliers.\n\n- `total_fer` has some higher outliers and lets **cap these outliers** to 99th percentile\n\n- `gdpp` has huge amount of higher outliers and this indicate that these countries are doing well by themselves and hence we can **cap these outliers** to the column's 99th percentile.\n","16b4de32":"### INFERENCES:\n\nWhen K=5, we saw that there was only one country in cluster 4.\n\n- Clusters 1 and 3 are similar\n- Cluster 0 and 4 are also similar.\n\nOur concern is on clusters 2 and 3. But if they are spread across clusters, its difficult to find which country needs the aid at most than the other. So lets go with k=3 as optimal number of clusters.","b40b647a":"### Visualize bottom 10 countries w.r.t exports, imports, health, inflation, life_expectancy and total fertility rate","e95c5829":"### INFERENCES:\n\n- First set of 3 plots at the left show the distribution without log scale and the next 3 plots show the distribution with GDPP log scaled\n- GDPP of the developed countries are so high that we are unable to see the GDPP of the poor countries properly in this boxplot.\n- From the right side 3 plots, it can be seen that GDPP of cluster 0 is in the range of 10000(10^4) and cluster 1 is in 100000(10^5) whereas cluster 2 is in range of 10^3 indicating help\n- There is a slight overlap in the clusters when k=5 and k=4","9cc00a58":"There are total of `10 columns` in the actual dataset.\n\nFrom the data dictionary, we can see that `exports`, `health` and `imports` are given as percentage of GDP. Hence we have to convert these columns to absolute values in the EDA section","60f15525":"This indicates both K-means and Hierarchical Clustering returned same list of 10 countries which are in need of aid. \n\nWe can chose final suggestions based on K-means clustering as the similarity within a cluster and dissimilarity across clusters is good in this methodology as can be seen from the summary statistics after segmentation. Also in K-means clustering, we have got around 48 countries in under developed countries clusters and hence it looks like better clustering mechanism.\n\nLets break this into two lists as `top5 in priority 1 list` and `next set of 5 countries in priority 2 list`.","d85cd35d":"- We have built an unsupervised model using K-means algorithm. Now lets create a model to cluster the countries using `Hierarchical Clustering`. \n- Hierarchical clustering starts by treating each observation as a separate cluster. \n- Then, it repeatedly executes the following two steps: \n  1. identify the two clusters that are closest together\n  2. merge the two most similar clusters. \n  \nThis iterative process continues until all the clusters are merged together. The main output of Hierarchical Clustering is a `dendrogram`, which shows the hierarchical relationship between the clusters\n\n### Linkage Criteria\n\n- There are multiple linkage criteria which determines from where `Euclidean distance` is computed. \n- It can be computed between \n  - The two most similar parts of a cluster in a **single-linkage**\n  - The two least similar bits of a cluster in a **complete-linkage\n  - The center of the clusters in a mean or average-linkage\n  \nWe will do both single and complete linkages here and try to interpret their dendograms.","c6dd058c":"### INFERENCES:\n\n- exports, health follow GDPP and income plots pattern and the countries which had low GDPP seem to have low exports.\n- imports show a different trend indicating that these countries manufacture a lot of goods sufficiently.\n- inflation shows countries that are not stable and not self-sufficient and suffering from other political and social issues. \n\nThough these plots give us an overall picture of how the countries are doing in terms of GDPP, income and child mortality. Still we will need more statistical data to identify this cluster in particular and to highlight the countries from this cluster which are in need of aid at priority. We will build an unsupervised model based on clustering techniques, which is sensitive to outliers. Due to this, lets proceed and identify outliers and handle those so that we would get better results.","82e2d3b1":"## 2.3.1 Visualising Bivariate Distributions using pairplot","12cd364c":"Lets read the actual dataset into `country_df`","daf4be2f":"## 1.2 Read and inspect data for understanding","fc66c3b5":"### Inference:\n\nNone of the columns have even distribution and further analysis of the columns show presence of outliers as below:\n\n- `child_mort`is right skewed and it indicates that there are countries which have higher values of child mortality and majority of values lie between 0 and 50\n\n- `exports`, `imports`, `health` have huge number of outliers and it is right skewed\n\n- `income` has slight outliers with majority of countries having per person income as between 0 and 25000\n\n- `inflation` has some higher outliers and is right skewed.\n\n- `life_expec` has some lower outliers and is left skewed.\n\n- `gdpp` is right skewed and indicate few countries are doing good and their GDP is pretty high and do not need any aid.\n\nHowever, we will perform K-means and Hierarchical clustering to perfectly identify the clusters and the countries which are in need of aid.","07da4b89":"### INFERENCES:\n\n- This plot gives similar inferences as that of GDPP.\n- Red line in the First plot divides the countries by their median value. i.e countries above the red lines have their income per person higher than 9960 and countries below the red line have their income per person lower than 9960.\n- Second plot shows the same plot with log scaled in the y-axis and it is a bit easier to interpret.\n- Red line in the Second plot divides the countries by their 25th percentile.\n- Second plot shows around 37 countries are below the red line and these are the countries of our focus.\n- Third plot shows the list of 10 countries that have the low income per person\n\n- Comparing this and the previous GDPP plots, we can see that some of the countries are seen below the red line such as Afghanishtan, Congo, Liberia, Niger etc.","4daa5912":"### INFERENCES:\n\nWe can see the mean of the gdpp and income of the under-developed countries are so low when compared to developing or developed countries and we need to look further into this cluster to get the countries which are in most need of aid.","4c6575ee":"# 4. Build model using K-means algorithm for clustering\n\nNow that scaling is done on all numerical features, lets build the unsupervised model using clustering technique. There are many algorithms available in clustering. We will pick two common algorithms such as \n1. K-means algorithm\n2. Hierachical Clustering\n\nand build the model using both the methods and cluster the countries identify the countries in need\n\n**Kmeans algorithm** is an iterative algorithm that tries to partition the dataset into K pre-defined distinct non-overlapping subgroups (clusters) where each data point belongs to only one group.\n","63eebe28":"There are `167` rows and `10` columns in the given dataset.","f26a9aaa":"### INFERENCES:\n\nThese new labels help us to interpret the plots in a better fashion. We can see that \n- Developing countries have Medium GDPP, medium Income and mild child mortality rate.\n- Developed countries have High GDPP, High income and very low child mortality rate.\n- Under-Developed countries have Low GDPP, Low income and very high mortality rate and should be our primary focus.","5d194c48":"## 2.3 Visualizing the dataset\n\nLets start with bi-variate analysis as all are numerical variables and lets see the relationship between each feature.\n\nAlso analysing univariate and outlier analysis can be helpful to treat the outliers.","87d2f084":"### Visualization of Mean of GDPP, income and Child mortality when k=3,4,5","5bc56fde":"### Cluster Analysis:\n\nWe can see that when there are 3 or 4 clusters, there are some distribution of countries. When there are 5 clusters, there is a country which is in a separate cluster. This would make actionable items a bit tedious. We will progress with these 3 models and profile the clusters created by each model based on 3 important parameters i.e **GDPP, Income and Child_mortality** and see which is a good value of k.","bbd23035":"# 5 Build unsupervised model using Hierarchical Clustering\n","651afc9f":"### Statistical summary","0f85f44a":"### Visualization of GDPP vs Child mortality when k=3,4,5","c75183bd":"Lets read the data dictionary into `data_dictionary` dataframe and understand the columns","b9065ec4":"## 5.4 Countries Segmentation\n\nSimilar to our approach in K-mean algorithm, We can rename the labels for better business understanding as cluster label 0, 1 and 2 does not make sense to interpret. Then we will perform the cluster profiling with new labels.\n\nLets rename the cluster labels as \n- 0 : Under-developed Countries\n- 1 : Developing Countries\n- 2 : Developed Countries\n    \nThis would help the NGO to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries and focus on **Cluster 2: Under-developed Countries**","2ab4e47a":"## 1.1 Import libraries\n\nIgnore warnings and import necessary libraries:","736d2417":"`info` shows that there are no null values present. Still we will check in EDA section using `isnull()`\n\nAlso `info()` shows that apart from `country` column, all the columns are numerical and continuous in nature.","fc16695e":"### Visualize GDPP across countries","d3538224":"### 4.5 Countries Segmentation\n\nWe can rename the labels for better business understanding as cluster label 0, 1 and 2 does not make sense to interpret. Then we will perform the cluster profiling with new labels.\n\nLets rename the cluster labesl as \n- 0 : Developing Countries\n- 1 : Developed Countries\n- 2 : Under-developed Countries\n\nThis would help the NGO to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries and focus on **Cluster 2: Under-developed Countries**","1876b04c":"Now that we have segmented the clusters and renamed properly, it will be easy to interpret the plots. Lets do the cluster profiling with the new cluster labels. ","09c5afe4":"## 5.3 Initial Cluster Profiling Using Hierarchical Clustering Model","637ededb":"#### Creating Cluster labels using K-means\nSince scaled data will be a bit confusing while explaining to business people, we will copy the actual data into a new dataframe to explain the cluster labels. We will use this `country_df_kmean_3` for cluster profiling. Lets create a column called `k_means_cluster_label` and concatenate to the `country_df_kmean_3` to assign the countries with the cluster labels.","8272410e":"### INFERENCES:\n\nThese new labels help us to interpret the plots in a better fashion. We can see that \n- Developing countries have Medium GDPP, medium Income and mild child mortality rate.\n- Developed countries have High GDPP, High income and very low child mortality rate.\n- Under-Developed countries have Low GDPP, Low income and very high mortality rate and should be our primary focus.","7cf5d5db":"First set of countries that require aid immediately: ","42ecf1c3":"### 4.4 INITIAL CLUSTER PROFILING\n\n- `value_counts` shows how many countries are clustered under each cluster label. \n- Lets analyse these 3 clusters and see if we can profile these clusters by comparing their `gdpp`, `child_mort`, `income`\n- Lets visualize these clusters using `scatter plots`, `barplots` and `boxplots`\n- We also need to analyse the clusters and see if k=3 helps us to identify the countries which are in dire need of aid","524ef5df":"## 4.1 Metrics to choose the value of K\nThe main challenge in this algorithm is to find the optimal value of k or `number of clusters`. There are two common approaches that help to find k:\n\n1. Elbow method\n2. Silhouette Analysis","c8750024":"`nunique()` shows that there are no categorical variables in the dataframe and all variables are numerical continuous variables.\n\nAlso there are `167` rows and `country` has `167` unique values which means the column **country** is unique in each row and hence there are no duplicate records","5322a3d5":"### 4.1.1 Elbow Method\n\nElbow method gives us an idea on what a good k number of clusters would be based on the `sum of squared distance (SSD) ` between data points and their assigned clusters\u2019 centroids. We pick k at the spot where SSE starts to flatten out and forming an elbow. \n\nLets use `KMeans()` from `sklearn` to form clusters of 2,3,4 and so on till 11 and calculate SSD and plot the number of clusters and SSD and see where the elbow is formed.","e28763f9":"### INFERENCES:\n\nWhen K=4, the clusters 1 and 2 are a bit similar and it seems to be in same cluster when k=3. Lets profile the clusters as\n- 0 : Medium GDPP, medium Income and mild child mortality rate.\n- 1 : High GDPP, High income and very low child mortality rate.\n- 2 : Very high GDPP, Very high income and very low child mortality rate.\n- 3 : Low GDPP, Low income and very high mortality rate\n\nSince we are concerned about the countries not doing well, this granular seggregation of countries doing well is not of our primary concern. ","71d278f3":"Once the above countries are helped with, the following set could be provided aid as next set of countries:","ba8bf1c3":"# 6. Presenting countries that are in need of help to HELP International\n   ","96675daf":"There are some outliers present in the data after outlier treatment as we have used soft capping. Lets proceed and cluster the countries based on the prepared data.","a812d575":"Now all the columns have absolute values and we can visualize the data for more understanding","740b9bd5":"### Visualization of Child mortality vs Income when k=3,4,5","286bcdda":"### INFERENCES:\n\n- The silhouette score is maximum when k is 2 which is 0.47\n- 2 is very less number of clusters and countries within the 2 clusters might be very different.\n\nSo lets look at the next optimal silhouette score.\n\n- 3,4,5 seem to have good silhouette scores. As k increases, silhouette score decreases and hence these will have definitely lesser sihouette score than that of k=2.\n- Though elbow curve indicate 3 is optimal number and silhouette score of 3 seem to be the best, lets use K-means algorithm for k=3,4,5 and see which value of k gives us better `cluster profiling`","a9940e87":"### Visualize Child Mortality Rate per 1000 lives across countries","515a0c7c":"From the above plots, its evident that the cluster labels \n- 0 : Under-developed countries having low GDPP, low income and high child mortality rate.\n- 1 : Developing countries having medium GDPP, medium income and mild child mortality rate.\n- 2 : Developed countries having high GDPP, high income and very low child mortality rate.","474daf3b":"Lets first get the list of numerical columns. As we have seen above, `info()` shows that all columns except `country` are numerical in nature","0e4f2c35":"### INFERENCES:\n\n- This plot gives opposite inferences as that of GDPP and income indicating the countries who are doing well have less child mortality attributing to money being spent on citizens health and nutrition.\n- We have chosen 75th percentile i.e. 62 to show the countries which have child mortality rate higher than that per 1000 lives.\n- We can see that some of the countries which have low GDPP and low income per person suffer from high mortality rate sucg as Congo, Haiti etc.\n- Third plot shows the list of 10 countries that have the high child moratality rate and these seem to be present in Africa where healthcare facilities are poor.","21b48694":"# Steps\n\n1. Data understanding\n\n   - Import Python libraries\n   - Read and inspect data for understanding\n   - Summary statistics\n   - Analyse the columns\n\n\n2. Exploratory Data Analysis\n\n  - Null Value Analysis\n  - Derive data \u2013 convert exports, imports, health from % of GDPP to absolute values\n  - Data Visualization\n    - Visualising Bivariate Distributions using pair plot\n    - Visualising Correlation using heatmap\n    - Visualising univariate distributions using Histogram and density plots\n    - Visualising GDPP, income, child mortality and other parameters across countries using point plots and bar plots\n    - Visualising univariate distributions using boxplots to identify outliers\n\n\n3. Prepare data for modelling\n\n  - Outlier Treatment\n  - Hopkins test\n  - Scaling\n\n\n4. Build model using K-means\n\n   - Metrics to choose the value of K\n     - Elbow curve \n     - Silhouette Analysis\n     - Iterating with different values of k and choose optimal k as optimal number of clusters\n     - Country Segmentation\n     - Cluster Profiling based on GDPP, Income and Child Mortality Rate\n       - Scatter Plots\n       - Box plots\n       - Bar plots on the mean of the columns in each cluster\n     - Identification of top 10 countries in need of aid.\n\n5. Build model using Hierarchical clustering\n\n  - Single linkage\n  - Complete linkage\n  \n     - Country Segmentation\n     - Cluster Profiling based on GDPP, Income and Child Mortality Rate\n       - Scatter Plots\n       - Box plots\n       - Bar plots on the mean of the columns in each cluster\n     - Identification of top 10 countries in need of aid.\n\n6. Suggestions ","414d12b8":"### INFERENCES:\n\nThe average of each cluster show the similar observation and the grouping is done perfectly such that we can focus on cluster **Under-Developed Countries** as it has **Low GDPP, Low income and very high mortality rate.**","195e96dd":"# Suggestions to HELP International - Countries that are in need of aid:\nThe following 5 are the countries which have to be provided aid first:\n\n1. Burundi\n2. Liberia\n3. Congo, Dem. Rep.\n4. Niger\n5. Sierra Leone\n\nOnce the above countries are provided with Aid, the following are the next set of countries which would require aid in order to reduce the child mortality rate and improve their GDPP and income per person:\n\n6. Madagascar\n7. Mozambique\n8. Central African Republic\n9. Malawi\n10. Eritrea","ab9110ce":"### Inferences:\n- imports and exports are highly correlated with correlation of 0.99\n- health and gdpp are highly correlated with correlation of 0.92\n- income and gdpp are highly correlated with correlation of 0.9\n- child_mortality and life_expentency are highly and inversely correlated with correlation of -0.89\n- child_mortality and total_fertility are highly correlated with correlation of 0.85\nlife_expentency and total_fertility are highly correlated with correlation of -0.76\n- gdpp and exports are highly correlated with correlation of 0.77\n- gdpp and imports are highly correlated with correlation of 0.76","3d7cb31e":"## 5.5 Final Cluster Profiling with new labels","b09c2102":"### INFERENCES:\n\nThe mean of each cluster show the similar observation and the grouping is done perfectly such that we can focus on cluster **Under-Developed Countries** as it has **Low GDPP, Low income and very high mortality rate.**","42ebb890":"## 3.2 Hopkins test to understand cluster tendency\n\n- Before we apply any clustering algorithm to the given data, it's important to check whether the given data has some meaningful clusters or not. This usually means the given data is not random. \n\n- The process to evaluate the data to check if the data is feasible for clustering or not is know as the **clustering tendency**. \n\n- To check cluster tendency, we use **Hopkins test.**\n\n- `Hopkins test` examines whether data points differ significantly from uniformly distributed data in the multidimensional space.","de0cdacd":"### 4.6 CLUSTER PROFILING WITH NEW LABELS","ded68982":"## 4.7 Identification of Top 10 countries that require aid on priority using K-means algorithm:","2259fb50":"### Visualization of Child mortality distribution when k=3,4,5","415e6067":"### INFERENCES:\n\n- When there are 3 or 4 clusters, there is a distinct separation of the clusters.\n- When there are 5 clusters, as we have seen previously that one of the clusters has just one country, it cannot be seen evidently here.\n\nLets visualize the clusters more and see which helps in understanding the clusters and identifying countries in need.","e76c769f":"### INFERENCES:\n\nFrom the above three plots, We can see that the clusters are grouped as\n- 0 : Medium GDPP, medium Income and mild child mortality rate.\n- 1 : High GDPP, High income and very low child mortality rate.\n- 2 : Low GDPP, Low income and very high mortality rate.","5ebae67b":"## 2.3.4 Visualising univariate distributions across countries using point plots and barplots:\n\nWe will plot `gdpp`, `income`, `child_mort` of all countries and see how the data is distributed. Since pointplot plots the mean of categorical variables and each row is unique, point plots can be used here to show the distribution of the data and their range compared with other countries.\n\nThe following is a generic function to create point plots and draw a line to indicate the countries that might need help:","01a0edda":"### INFERENCES:\n\nThe similar observation that we got from scatter plots can be seen in boxplots too. The clusters are grouped as\n- Developing countries have Medium GDPP, medium Income and mild child mortality rate.\n- Developed countries have High GDPP, High income and very low child mortality rate.\n- Under-Developed countries have Low GDPP, Low income and very high mortality rate and should be our primary focus.\n\nWe can see that GDPP and income of the under-developed countries are so low that they are not seen properly in the same scale that of the developed countries.","1d0ed87a":"### INFERENCES:\n\nAs we saw in previous two scatter plots, we can see that same cluster which had bad child_moratality rate and low gdpp has low income in this plot.","8f1c7c0c":"### INFERENCES:\n\n- Income follows the same pattern as that of GDPP.\n- The clusters are seggregated well when k=3 and slightly overlaps when k=4 and k=5\n- k=3 seems to be a good indicator of k as the cohesion within the cluster is good and clusters are well separated.","aa3da74d":"## 2.3.3 Visualising univariate distributions using Histogram and density plots\n","db62d685":"### INFERENCE:\n\nSSD flattens and forms an elbow at 3 indicating that 3 is optimal value of k.\n\n### 4.1.2 Silhouette Analysis\n\nThe silhouette score is a measure of how similar an object is to its own cluster (`cohesion`) compared to other clusters (`separation`).\n\nLets use `KMeans()` from `sklearn` to form clusters of 2,3,4 and so on till 11 and calculate `silhouette_score` and plot the `number of clusters` against `silhouette_score`","b2dfa00a":"### INFERENCES:\n\n- Child mortality follows the opposite pattern of GDPP and income.\n- Clusters which were high on GDPP and income have less child mortality, indicating that these countries have ample amount of money to take care of child mortaliy and health issues.\n- We can see that k=3 gives good clusters as the cohesion within the cluster is good and clusters are well separated.","35c8b596":"### INFERENCES:\n\nThe similar observation that we got from scatter plots can be seen in boxplots too. The clusters are grouped as\n- Developing countries have Medium GDPP, medium Income and mild child mortality rate.\n- Developed countries have High GDPP, High income and very low child mortality rate.\n- Under-Developed countries have Low GDPP, Low income and very high mortality rate and should be our primary focus.\n\nWe can see that GDPP and income of the under-developed countries are so low that they are not seen properly in the same scale that of the developed countries.\n\nThese plots are similar to K-means algorithm plots and hence our analysis is good.","0ae4fc73":"### Interpretation of Hopkins score:\n\n- Hopkins Statistic over .70 is a good score that indicated that the data is good for cluster analysis. \n- A 'Hopkins Statistic' value close to 1 tends to indicate the data is highly clustered, random data will tend to result in values around 0.5, and uniformly distributed data will tend to result in values close to 0.\n\n\nHopkins test results will vary as it picks a set of samples each time. On running it multiple times, it can be seen that this data set gives Hopkins statistic value in the range of 0.86 to 0.97 and hence our dataset is good for clustering and lets proceed our analysis ","92d27114":"### Inference\n\nThe diagonals of the pairplot gives us the distribution of the column's data and the other plots give the pairwise-relationship.\n\nInitial look at the histograms across the columns give us following picture:\n- All the columns have values in different range\ne.g total_fer has 0 to 10; child_mort has -50 to 250; gdpp, income, exports, imports have values in thousands.\nHence we need to scale the data.\n\nSome patterns we could see are\n\n- `child_mort` and `total_fer` are directly proportional.\n- `child_mort` seems to be high where `health` spending is low  and `inflation` is high\n- When `health` spending is more, `life_expect` is high.\n- `gdpp` increases as `exports`, `imports`, `income` increase.\n","71a0f937":"### Visualize Income per person across countries","c40b4b1b":"- Feature scaling is essential for machine learning algorithms that calculate distances between data. \n- Most of distance based models e.g. k-means and Hierarchical clustering need standard scaling so that large-scaled features don't dominate the variation.\n- If we do not scale, the feature with a higher value range starts dominating when calculating distances\n- We have chosen `StandardScaler` as clustering does not work well when the variance differs a lot.","5f84b19d":"### INFERENCES:\n\n- The clusters 1 and 3 are a bit similar and it seems to be in same cluster when k=3 \n- Cluster 4 is not effective as its just one country and we cannot compare it with other clusters.So k=5 is not effective for identifying the countries that are in need of aid.","b20b0b7f":"### INFERENCES:\n\nWhen K=3, the clusters can be profiled as\n- 0 : Medium GDPP, medium Income and mild child mortality rate.\n- 1 : High GDPP, High income and very low child mortality rate.\n- 2 : Low GDPP, Low income and very high mortality rate.","86d96ba3":"### INFERENCES:\n\nThis plot is very helpful to see the clustered groups. For e.g. when k=3, we see that cluster 2 require aid as their gdpp is low and child mortality is pretty high.\n\nAs the cluster labels are picked in random and assigned, we can see similar group is represented as 3 when k=4 and k=5.","66e2336b":"## 5.1 Single linkage","8838e3bc":"### INTERPRETATION OF DENDOGRAM:\n\nComplete linkage's dendogram is readable and better to interpret when compared to single linkage's dendogram.\n\nWe can see merging of clusters represented in different colors.\n\nIf we cut the dendogram tree at SCORE 5 or 6, we have 4 clusters. But we can see the dissimilarity between 4 clusters and 3 clusters is not much as at score 8 itself, we see 3 clusters forming. Only at higher score of 12, 2 sets of clusters available. \n\nThis indicates 3 clusters is a good choice as there will be good dissimilarity between clusters and good similarity within clusters.","2d73c427":"### Visualization of GDPP vs Income when k=3,4,5","5f5cc304":"Summary statistics from `describe()` indicates the presence of outliers. We can visualize the distribution and percentile of each column in Section 2.3 using boxplots","e329f7db":"We can see here that though the number of clusters are same as K-means algorithm i.e.3, number of countries in each cluster vary. Lets profile the clusters and label these ","178f99ba":"Both `info()` and `isnull()` output indicate that there are no null values in the given dataset.","13892ca4":"## 2.3.5 Visualising univariate distributions using boxplots to identify outliers\n\nBoxplots are a great way to visualise univariate data because they represent statistics such as the 25th percentile, 50th percentile, etc. We will use the boxplots to analyse the outliers. Lets first see the summary statistics of all the percentiles","4ece50fb":"# 3. Prepare the data for modelling\n## 3.1 Outlier Treatment\n\nOutliers can be treated in two ways:\n1. Statistical treatment where all outliers can be either removed or capped. Since we have dataset of 167 rows, deleting outliers will remove the countries which might be in need of aid. \n\n2. Domain based outlier treatment:\nHere we will cap or remove outliers based on the data's relevance to the business need. We will cap the outliers as discussed in the above section.\n\nThere are different ranges in capping the outliers:\n- Soft range: 1th and 99th percentile.\n- Mid range: 5th and 95th percentile.\n- 25th and 75th percentile.\n\nWe will be doing **Soft capping** as the data points are few and the capping should not influence the clusters much.","6d3afc92":"Summary statistics show that the variation within the group is very less and mean and median are so close. So this clustering is good.","5b4a4a60":"These are the countries that require aid, identified by K-means algorithm. Lets use another technique called `Hierarchical clustering` and see if any other country requires aid much more than these countries and present our final analysis","6e41867a":"Clustering is done well in this case as well as can be seen from summary statistics of each cluster.","8e5bfa35":"# 2. Exploratory Data Analysis (EDA)\n## 2.1 Null Values Analysis","b702fb2e":"### INFERENCES:\n\nNot much of difference between clusters 2 and 1 and these can be represented in a single cluster leading to k=3 being a good number","5b15101b":"### INTERPRETATION OF DENDOGRAM:\n\nSingle linkage's dendogram is not readable or interpretable. Hence we cannot use this for our problem.\n\nLets try with complete linkage and see if it helps\n\n## 5.2 Complete Linkage:"}}