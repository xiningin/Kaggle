{"cell_type":{"555e7681":"code","e78aaab0":"code","265155d3":"code","101f3a8b":"code","f9dac946":"code","d6d804a5":"code","4b148f48":"code","757c9f25":"code","b4dbaff9":"code","4021a7e6":"code","2786df3d":"code","3bc27971":"code","d3c3fc57":"code","6134212c":"code","c580c96d":"code","71a652e3":"code","e6feb3d9":"code","2221f679":"code","95779ea8":"code","d177445f":"code","8fb1fb11":"code","79727b5f":"code","5efc471c":"code","79a8d74e":"code","ef247fdd":"code","e493fccf":"code","b6296cab":"code","900f90df":"code","8fb6eb14":"code","6042470d":"code","a28f70db":"code","8a8f22e9":"code","083114ef":"code","777d348e":"code","9c29af5c":"code","74b4a84f":"code","5f3744f0":"code","a1d09d44":"code","e0bfed13":"code","b3e0bedf":"code","876025f2":"code","3b9cc524":"code","7d5072ad":"code","9ef5bf3a":"code","1407c298":"code","26b4cbd2":"code","a5fc797a":"code","f41ae273":"code","9e855817":"code","cfb42a46":"code","3972fd64":"code","caaa592b":"code","72436ca5":"code","cf0f95a0":"code","99e7edce":"code","f3535ee1":"code","ba4a0439":"code","8eb44411":"code","f4a810a5":"code","e51f8f35":"code","1836c6b8":"code","cbd1b733":"code","93955931":"code","1063a34d":"code","c1c8ab1a":"code","37b39ed5":"code","cc8a3a2d":"code","61f4ed76":"code","129156a7":"code","a6c6269c":"code","36c486ef":"code","56d133fb":"code","1523a276":"code","3c59abf7":"code","4727c22b":"code","649c61c5":"markdown","09afea38":"markdown","22d63a43":"markdown","9f96298c":"markdown","f6aa6983":"markdown","bc482076":"markdown","c6ad99be":"markdown","faadf18d":"markdown","9849d653":"markdown","9efba4d1":"markdown","290e41d4":"markdown","1d72bbb4":"markdown","07128536":"markdown","ca567567":"markdown","f17fb407":"markdown","864dd286":"markdown","d0563c5a":"markdown"},"source":{"555e7681":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline ","e78aaab0":"sns.set_palette('Set1')","265155d3":"import warnings\nwarnings.filterwarnings(\"ignore\")","101f3a8b":"data = pd.read_csv('..\/input\/heart.csv')","f9dac946":"data.head()","d6d804a5":"data.isnull().sum()","4b148f48":"data.info()","757c9f25":"sns.distplot(data['age']);","b4dbaff9":"# 1 = male; 0 = female\nsns.countplot(data['sex']);","4021a7e6":"sns.countplot(data['cp']);","2786df3d":"sns.distplot(data['trestbps'])","3bc27971":"sns.distplot(data['chol'])","d3c3fc57":"sns.countplot(data['fbs']);","6134212c":"sns.countplot(data['restecg']);","c580c96d":"sns.distplot(data['thalach'])","71a652e3":"sns.countplot(data['exang']);","e6feb3d9":"sns.distplot(data['oldpeak']);","2221f679":"sns.countplot(data['slope']);","95779ea8":"sns.countplot(data['ca']);","d177445f":"sns.countplot(data['thal']);","8fb1fb11":"plt.figure(figsize=(14, 5))\nsns.distplot(data[data['target'] == 1]['age'], label= \"Disease - Yes\")\nsns.distplot(data[data['target'] == 0]['age'], label= \"Disease - No\")\nplt.legend();","79727b5f":"# 1 = male; 0 = female\nsns.countplot(data['target'], hue = data['sex']);","5efc471c":"sns.countplot(data['target'], hue = data['cp']);","79a8d74e":"plt.figure(figsize=(14, 5))\nsns.distplot(data[data['target'] == 1]['trestbps'], label= \"Disease - Yes\")\nsns.distplot(data[data['target'] == 0]['trestbps'], label= \"Disease - No\")\nplt.legend();","ef247fdd":"plt.figure(figsize=(14, 5))\nsns.distplot(data[data['target'] == 1]['chol'], label= \"Disease - Yes\")\nsns.distplot(data[data['target'] == 0]['chol'], label= \"Disease - No\")\nplt.legend();","e493fccf":"sns.countplot(data['target'], hue = data['fbs']);","b6296cab":"sns.countplot(data['target'] ,hue = data['restecg']);","900f90df":"plt.figure(figsize=(14, 5))\nsns.distplot(data[data['target'] == 1]['thalach'], label= \"Disease - Yes\")\nsns.distplot(data[data['target'] == 0]['thalach'], label= \"Disease - No\")\nplt.legend();","8fb6eb14":"sns.countplot(data['target'], hue = data['exang']);","6042470d":"plt.figure(figsize=(14, 5))\nsns.distplot(data[data['target'] == 1]['oldpeak'], label= \"Disease - Yes\")\nsns.distplot(data[data['target'] == 0]['oldpeak'], label= \"Disease - No\")\nplt.legend();","a28f70db":"sns.countplot(data['target'], hue = data['slope']);","8a8f22e9":"sns.countplot(data['target'], hue = data['ca']);","083114ef":"sns.countplot(data['target'], hue = data['thal']);","777d348e":"sns.jointplot(x= 'oldpeak' , y= 'chol' ,data= data, kind= 'kde');","9c29af5c":"plt.figure(figsize=(8,6))\nsns.violinplot(x = 'fbs',y= 'trestbps', data = data, hue = 'sex', split=True);","74b4a84f":"plt.figure(figsize=(8,6))\nsns.boxplot(x = 'exang',y= 'trestbps', data = data, hue = 'sex');","5f3744f0":"plt.figure(figsize=(12,10))\nsns.heatmap(data.corr(), annot= True, fmt='.2f')\nplt.show();","a1d09d44":"sns.pairplot(data, hue = 'target');","e0bfed13":"sex = pd.get_dummies(data['sex'])\ncp = pd.get_dummies(data['cp'])\nfbs = pd.get_dummies(data['fbs'])\nrestecg = pd.get_dummies(data['restecg'])\nexang = pd.get_dummies(data['exang'])\nslope = pd.get_dummies(data['slope'])\nca = pd.get_dummies(data['ca'])\nthal = pd.get_dummies(data['thal'])","b3e0bedf":"data = pd.concat([data, sex, cp, fbs, restecg, exang, slope, ca, thal], axis = 1)","876025f2":"data.head()","3b9cc524":"data.drop(['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal'], axis = 1, inplace= True)","7d5072ad":"from sklearn.svm import SVC","9ef5bf3a":"model = SVC(probability=True)","1407c298":"from sklearn.model_selection import train_test_split","26b4cbd2":"X = data.drop('target', axis = 1)\ny = data['target']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","a5fc797a":"model.fit(X_train, y_train)","f41ae273":"y_pred = model.predict(X_test)","9e855817":"from sklearn.metrics import classification_report, accuracy_score, roc_curve, auc","cfb42a46":"print(classification_report(y_test, y_pred))","3972fd64":"from sklearn.preprocessing import MinMaxScaler","caaa592b":"scaler = MinMaxScaler()","72436ca5":"X_train = scaler.fit_transform(X_train)","cf0f95a0":"X_test = scaler.transform(X_test)","99e7edce":"model.fit(X_train, y_train)\ny_pred = model.predict(X_test)","f3535ee1":"print(classification_report(y_test, y_pred))","ba4a0439":"y_prob = model.predict_proba(X_test)\nfpr, tpr, thresholds = roc_curve(y_test, y_prob[:,1])\nroc_auc = auc(fpr, tpr)\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","8eb44411":"from sklearn.model_selection import learning_curve","f4a810a5":"train_sizes, train_scores, test_scores = learning_curve(SVC(), X_train, y_train, scoring='f1', train_sizes=np.linspace(0.1, 1.0, 20), cv = 3)","e51f8f35":"train_scores = np.mean(train_scores, axis = 1)\ntest_scores = np.mean(test_scores, axis = 1)","1836c6b8":"plt.plot(train_sizes, train_scores, 'o-', label=\"Training score\")\nplt.plot(train_sizes, test_scores, 'o-', label=\"Cross-validation score\")\nplt.legend();","cbd1b733":"train_sizes, train_scores, test_scores = learning_curve(SVC(C=2), X_train, y_train, scoring='f1', train_sizes=np.linspace(0.1, 1.0, 20), cv = 3)\ntrain_scores = np.mean(train_scores, axis = 1)\ntest_scores = np.mean(test_scores, axis = 1)\nplt.plot(train_sizes, train_scores, 'o-', label=\"Training score\")\nplt.plot(train_sizes, test_scores, 'o-', label=\"Cross-validation score\")\nplt.legend();","93955931":"train_sizes, train_scores, test_scores = learning_curve(SVC(C=3), X_train, y_train, scoring='f1', train_sizes=np.linspace(0.1, 1.0, 20), cv = 3)\ntrain_scores = np.mean(train_scores, axis = 1)\ntest_scores = np.mean(test_scores, axis = 1)\nplt.plot(train_sizes, train_scores, 'o-', label=\"Training score\")\nplt.plot(train_sizes, test_scores, 'o-', label=\"Cross-validation score\")\nplt.legend();","1063a34d":"train_sizes, train_scores, test_scores = learning_curve(SVC(C=3, gamma=0.1), X_train, y_train, scoring='f1', train_sizes=np.linspace(0.1, 1.0, 20), cv = 3)\ntrain_scores = np.mean(train_scores, axis = 1)\ntest_scores = np.mean(test_scores, axis = 1)\nplt.plot(train_sizes, train_scores, 'o-', label=\"Training score\")\nplt.plot(train_sizes, test_scores, 'o-', label=\"Cross-validation score\")\nplt.legend();","c1c8ab1a":"train_sizes, train_scores, test_scores = learning_curve(SVC(C=3, gamma=0.01), X_train, y_train, scoring='f1', train_sizes=np.linspace(0.1, 1.0, 20), cv = 3)\ntrain_scores = np.mean(train_scores, axis = 1)\ntest_scores = np.mean(test_scores, axis = 1)\nplt.plot(train_sizes, train_scores, 'o-', label=\"Training score\")\nplt.plot(train_sizes, test_scores, 'o-', label=\"Cross-validation score\")\nplt.legend();","37b39ed5":"from sklearn.model_selection import GridSearchCV","cc8a3a2d":"param_grid = {'C':[1,2,3,4,5,6,7,8,14], 'gamma':[0.1, 0.01, 0.001, 0.0001], 'kernel':['linear', 'poly', 'rbf'], 'degree': [1,2,3,4,5]}\ngrid = GridSearchCV(param_grid= param_grid, estimator= SVC(), scoring='f1', refit= True, verbose=1)","61f4ed76":"grid.fit(X_train, y_train)","129156a7":"grid.best_params_","a6c6269c":"param_grid = {'C':[6,7,8], 'gamma':np.linspace(0.01, 0.02, 10), 'kernel':['rbf'], 'degree': [1,2,3,4,5]}\ngrid = GridSearchCV(param_grid= param_grid, estimator= SVC(probability= True), scoring='f1', refit= True, verbose=1)\ngrid.fit(X_train, y_train)\ngrid.best_params_","36c486ef":"y_pred = grid.predict(X_test)","56d133fb":"print(classification_report(y_test, y_pred))","1523a276":"y_prob = grid.predict_proba(X_test)\n\nfpr, tpr, thresholds = roc_curve(y_test, y_prob[:,1])\nroc_auc = auc(fpr, tpr)\n\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","3c59abf7":"result = pd.DataFrame({'Test':y_test, 'Prediction':y_pred, 'Probability': y_prob[:,1]})","4727c22b":"result.to_csv('Result.csv')","649c61c5":"# Trivariate Data Analysis\nThe focus of this subsection would be to gather information between two categorical and one continuous attributes.","09afea38":"# Learning Curves\nWe have achieved a commendable model above, but let us take this project one step further.<br> \nLearning curves helps to detect if the model is affected by **bias or variance**.<br> \nLet us plot learning curves based on a different set of hyperparameters. <br>\n","22d63a43":"Now we can try every combination of hyperparameters and pick the best one. <br>\nFortunately, ```scikit-learn``` comes with a ```GridSearchCV``` function to help us quickly come up with the best possible set of hyperparameters for the desired evaluation metric. \n","9f96298c":"# Support Vector Machine (Without Scaler)","f6aa6983":"# GridSearchCV","bc482076":"# Bivariate Data Analysis\nIn this subsection, let's go through the relationship shared by the target variable and the attributes. ","c6ad99be":"# Importing Libraries","faadf18d":"# Data Preprocessing\nIn this subsection, we need to preprocess categorical attributes with the help of ```get_dummies``` from **Pandas**. <br> \nIf we skip this step, then the machine learning model will assume the numbers assigned to the attributes as a ranked variable, which it is not. \n","9849d653":"# Receiver Operating Characteristic (ROC) 1","9efba4d1":"# Pairplot","290e41d4":"# Support Vector Machine (With Scaler)\nSignificant performance improvements with ```MinMaxScaler```. \nThe evaluation metric for this kernel will be **F1**, as it is the harmonic mean of precision and recall. <br>\nBut the evaluation metric will switch from precision to recall and vice-versa, depending on the problem statement of the project. \n","1d72bbb4":"# Univariate Data Analysis\nIn this subsection, let us explore every attribute, within the data set, one by one. \n<br>\nIf the attribute into consideration possesses **continuous values**, then **distribution plots** provide a good summary of that attribute. If we have a **categorical quality**, then a **count plot** offers an excellent overview of that attribute. \n<br>\nLater in bivariate data analysis, we will compare the attributes with the target attribute. \n","07128536":"Just a sanity check for null values. ","ca567567":"Based on the data types attached to the columns, it seems like the data got read into the environment accurately. ","f17fb407":"# Correlation Matrix","864dd286":"Narrowing down further","d0563c5a":"# Reading Dataset"}}