{"cell_type":{"f589b7a9":"code","fd3dfa98":"code","34dc637c":"code","01afd9fb":"code","9b20a839":"code","c46e17cc":"code","9e660e5b":"markdown","7d0b91fd":"markdown","3c487f10":"markdown"},"source":{"f589b7a9":"import pandas as pd","fd3dfa98":"def check_if_good(a):\n    # Check if the submission is valid\n    global wildcard\n    global start\n    global other\n\n    # If all the combinations beginning with \ud83c\udf85\ud83e\udd36 are in the three submissions\n    for permu in start['Permutation'].tolist():\n        x=0\n        if permu in a[0]:\n            x+=1\n            if permu in a[1]:\n                x+=1\n                if permu in a[2]:\n                    continue\n        # For wildcards\n        permus_for_wild = wildcard[wildcard['Permutation']==permu].index.values\n        in_string = False\n        for p in permus_for_wild:\n            if wildcard.at[p, 'Factor'] in a[0]: in_string = True\n            if wildcard.at[p, 'Factor'] in a[1]: in_string = True\n            if wildcard.at[p, 'Factor'] in a[2]: in_string = True\n        if in_string: continue\n        print(\"Not all \ud83c\udf85\ud83e\udd36, missing:\", permu, \"; string:\", x)\n        return False\n\n    # If all the combinations are in the submissions\n    for permu in other['Permutation'].tolist():\n        if permu in a[0]: continue\n        if permu in a[1]: continue\n        if permu in a[2]: continue\n\n        # For wildcards\n        permus_for_wild = wildcard[wildcard['Permutation']==permu].index.values\n        in_string = False\n        for p in permus_for_wild:\n            if wildcard.at[p, 'Factor'] in a[0]: in_string = True\n            if wildcard.at[p, 'Factor'] in a[1]: in_string = True\n            if wildcard.at[p, 'Factor'] in a[2]: in_string = True\n        if not in_string:\n            print(\"Not all the combinaison, missing:\", permu)\n            return False\n\n    # If there are 2 stars or less\n    if a[0].count('\ud83c\udf1f') > 2:\n        print(\"Too many stars in string: 0\")\n        return False\n    if a[1].count('\ud83c\udf1f') > 2:\n        print(\"Too many stars in string: 1\")\n        return False\n    if a[2].count('\ud83c\udf1f') > 2:\n        print(\"Too many stars in string: 2\")\n        return False\n    return True","34dc637c":"df = pd.read_csv(\"..\/input\/santa-2021\/sample_submission.csv\") # Import of submission\nsample = [df.at[0, \"schedule\"], df.at[1, \"schedule\"], df.at[2, \"schedule\"]] # List of 3 string, the 3 schedules\n\npermus = pd.read_csv(\"..\/input\/santa-2021\/permutations.csv\") # Import of permutations\nwildcard = pd.read_csv(\"..\/input\/santa-2021\/wildcards.csv\") # Import of wildcard permutations\n\nstart = permus[permus.Permutation.str[:2] =='\ud83c\udf85\ud83e\udd36'] # DataFrame of permutations starting with \ud83c\udf85\ud83e\udd36\nother = permus[permus.Permutation.str[:2] !='\ud83c\udf85\ud83e\udd36'].reset_index(drop=True) # DataFrame of all other permutations","01afd9fb":"check_if_good(sample)","9b20a839":"sample2 = sample.copy()\nsample2[1] = sample2[1][2:]\ncheck_if_good(sample2)","c46e17cc":"sample3 = sample.copy()\nsample3[0] += \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\"\ncheck_if_good(sample3)","9e660e5b":"## Import","7d0b91fd":"# This is a function that checks if the submission is valid, return True if ok.","3c487f10":"## Check"}}