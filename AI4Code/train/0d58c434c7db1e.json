{"cell_type":{"26f724df":"code","2754245b":"code","3cafbc2a":"code","ad1a0d4a":"code","ca497ed4":"code","c0f4fb7f":"code","a77e94fa":"code","59abb37f":"code","06fdc6ca":"code","18472ce7":"code","4082be2c":"code","27dd9d81":"code","7295dbf4":"code","bf53263a":"code","76ddf811":"code","e4b8e200":"code","bab665ca":"code","bf110f18":"code","d3cbdc01":"code","eba2e2e0":"code","ff1012e1":"code","6ec64ff9":"code","75dffc4d":"code","b4d80968":"code","4ff95f41":"code","afd64bed":"code","9f268dc7":"code","f88bae5a":"code","b720bb9c":"code","1a0aab30":"markdown","56bb6daa":"markdown","bdca7d16":"markdown","5101bcc3":"markdown","4ffaadc6":"markdown","03286f0d":"markdown","e2223ae0":"markdown","facaa57c":"markdown","23fd0680":"markdown","476faca2":"markdown","8cd229b6":"markdown"},"source":{"26f724df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2754245b":"import seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport numpy as np\nimport matplotlib.pyplot as plt","3cafbc2a":"df = pd.read_csv('\/kaggle\/input\/top-women-chess-players\/top_women_chess_players_aug_2020.csv')\ndf.head()","ad1a0d4a":"df.shape","ca497ed4":"df.info()","c0f4fb7f":"df.describe()","a77e94fa":"df.isna().sum()","59abb37f":"df.rename(columns={'Federation':'Country'}, inplace=True)","06fdc6ca":"df['Inactive_flag'].value_counts(dropna=False)","18472ce7":"df['Inactive_flag'] = df['Inactive_flag'].fillna('Active').replace('wi','InActive')","4082be2c":"plt.figure(figsize=(18,6))\nfig = px.bar(x=df.Country.value_counts().index, y=df.Country.value_counts(), title='Country Distribution')\nfig.show()","27dd9d81":"df['Title'].value_counts(dropna=False)","7295dbf4":"fig = px.bar(x=df['Title'].value_counts().index, y=df['Title'].value_counts(), title='Chess Title Distribution')\nfig.show()","bf53263a":"fig = go.Figure()\nfig.add_trace(go.Histogram(x=df['Standard_Rating'],\n                           xbins=dict(\n                          start=1800,\n                          end=2675,\n                          size=6),\n                          opacity=1))\n\nfig.update_layout(title_text='Standard_Rating Distribution',\n                 xaxis_title='Standard_Rating',\n                 yaxis_title='Count',\n                 xaxis ={'showgrid':False},\n                 yaxis ={'showgrid':False},\n                 bargap=0.05,\n                 template='plotly_dark')\nfig.show()","76ddf811":"\nfig = px.histogram(df,x=df['Standard_Rating'], color='Inactive_flag')\nfig.show()","e4b8e200":"fig = go.Figure()\nfig.add_trace(go.Histogram(x=df['Rapid_rating'],\n                           xbins=dict(\n                          start=1220,\n                          end=2650,\n                          size=7),\n                          opacity=1))\n\nfig.update_layout(title_text='Rapid_rating Distribution',\n                 xaxis_title='Rapid_rating',\n                 yaxis_title='Count',\n                 xaxis ={'showgrid':False},\n                 yaxis ={'showgrid':False},\n                 bargap=0.05,\n                 template='seaborn')\nfig.show()","bab665ca":"fig=px.histogram(x=df['Rapid_rating'], color=df['Inactive_flag'])\nfig.show()","bf110f18":"df['Blitz_rating'].max()","d3cbdc01":"fig = go.Figure()\nfig.add_trace(go.Histogram(x=df['Blitz_rating'],\n                           xbins=dict(\n                          start=1159,\n                          end=2736,\n                          size=7),\n                          opacity=1))\n\nfig.update_layout(title_text='Blitz_rating Distribution',\n                 xaxis_title='Blitz_rating',\n                 yaxis_title='Count',\n                 xaxis ={'showgrid':False},\n                 yaxis ={'showgrid':False},\n                 bargap=0.05,\n                 template='ggplot2')\nfig.show()","eba2e2e0":"fig = px.histogram(x=df['Blitz_rating'], color=df['Inactive_flag'])\nfig.show()","ff1012e1":"fig = px.pie(values=df['Inactive_flag'].value_counts(), names=df['Inactive_flag'].value_counts().index, title='Active VS InActive Players',\n            color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","6ec64ff9":"gm = df[df['Title']=='GM']\ngm_stand = gm.sort_values(by=['Standard_Rating'],ascending=False).loc[:,['Name','Country','Standard_Rating']].head(10)\ngm_stand.style.background_gradient(cmap='YlGnBu', low=0, high=0, axis=0, subset=None)","75dffc4d":"gm_rapid = gm.sort_values(by='Rapid_rating', ascending=False).loc[:,['Name','Country','Rapid_rating']].head(10)\ngm_rapid.style.background_gradient(cmap='YlGnBu', low=0, high=0, axis=0, subset=None)","b4d80968":"gm_blitz = gm.sort_values(by='Blitz_rating', ascending=False).loc[:,['Name','Country','Blitz_rating']].head(10)\ngm_blitz.style.background_gradient(cmap='YlGnBu', low=0, high=0, axis=0, subset=None)","4ff95f41":"fig = px.pie(names=gm['Country'].value_counts().index, values=gm['Country'].value_counts(), title=('Countries With Grand Master Title'))\nfig.show()","afd64bed":"fig = px.pie(values=gm['Inactive_flag'].value_counts(), names=gm['Inactive_flag'].value_counts().index, title='GM Active VS InActive',\n            color_discrete_sequence=px.colors.sequential.Blues)\nfig.show()","9f268dc7":"df['Current_year']=2021\ndf['Age'] = df['Current_year']-df['Year_of_birth']\ndf.head(2)","f88bae5a":"gm_age = df[df['Title']=='GM']\ngm_age.sort_values(by='Age', ascending=True).loc[:,['Name','Country','Age']].head(3)","b720bb9c":"gm_age.sort_values(by='Age', ascending=False).loc[:,['Name','Country','Age']].head(3)","1a0aab30":"Rapid rating - For games 10 minutes and longer.\n\nFor bigginer 800 is a good rapid rating. \n\nfor a intermediate, 1300 is a good rating. \n\nFor a expert, 2000 is a good rating","56bb6daa":"Q: Which Country has most Grand Master title?","bdca7d16":"Dataframe has 8553 rows and 10 columns","5101bcc3":"column Title has 5435 nan values.","4ffaadc6":"Goryachkina, Aleksandra from Russia is youngest GM title holder.","03286f0d":"Youngest GM Title Holder?","e2223ae0":"Blitz rating - For games over 3 minutes but under 10 minutes.","facaa57c":"Polgar, Judit from Hungary has highest Standard, Rapid and Blitz rating.","23fd0680":"Gaprindashvili, Nona from Georgia is the oldest GM title holder.","476faca2":"China is first with '7' GM title.\n\nRussia has '6' GM title.\n\nGeorgia has '5'. GM title","8cd229b6":"Woman FIDE master = WFM has the highest count.\n\nGrand Master = GM is the highest title in chess game has only 37 count."}}