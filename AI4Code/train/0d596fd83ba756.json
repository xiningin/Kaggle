{"cell_type":{"62d0a2cb":"code","40df19df":"code","9ba27d33":"code","748ebaf9":"code","b99413d8":"code","aecb314a":"code","afca7e84":"code","4c6ca021":"code","ec7149cb":"code","b8cdb280":"code","0abccc3b":"code","53777930":"code","a9230830":"code","fa48f8ab":"code","fda48b26":"code","f7a85b49":"code","6573fdf3":"code","31166e4e":"code","3d50db48":"code","cfd87e89":"code","b403d2e9":"code","67b1bbfa":"code","bbd71696":"code","6cbf931f":"code","d84b9df1":"code","bb625b58":"code","97839b16":"markdown","a33c4d83":"markdown","847c37f8":"markdown","09d7f4f2":"markdown","f022901f":"markdown","8dfaa3d5":"markdown","44551184":"markdown","904cb87a":"markdown","d3d9bd65":"markdown","f45c1740":"markdown","29d23e10":"markdown"},"source":{"62d0a2cb":"# import libraries \nimport pandas as pd # Import Pandas for data manipulation using dataframes\nimport numpy as np # Import Numpy for data statistical analysis \nimport matplotlib.pyplot as plt # Import matplotlib for data visualisation\nimport seaborn as sns # Statistical data visualization\n%matplotlib inline","40df19df":"#import dataset\ndf = pd.read_csv(\"\/kaggle\/input\/breast-cancer-prediction-dataset\/Breast_cancer_data.csv\")\ndf.head()# it will show the 1st 5 rows ","9ba27d33":"df.shape # no of rows & columns","748ebaf9":"df.info() #will give the data type and no of null values","b99413d8":"df.describe() #basic statistics about the data","aecb314a":"#checking for any null values in the dataset\ndf.isnull().sum()","afca7e84":"count = df.diagnosis.value_counts()\ncount","4c6ca021":"count.plot(kind='bar')\nplt.title(\"no of malignants(1) and benigns(0) \")\nplt.xlabel(\"Diagnosis\")\nplt.ylabel(\"count\");","ec7149cb":"sns.pairplot(df, hue = 'diagnosis', vars = ['mean_radius', 'mean_texture', 'mean_area', 'mean_perimeter', 'mean_smoothness'] );","b8cdb280":"# Let's check the correlation between the variables \n# Strong correlation between the mean radius and mean perimeter, mean area and mean primeter\nplt.figure(figsize=(20,10)) \nsns.heatmap(df.corr(), annot=True) ;","0abccc3b":"# Let's drop the target label coloumns\nX = df.drop(['diagnosis'],axis=1)\nX","53777930":"y = df['diagnosis']\ny","a9230830":"#now we will prepare the dataset for Machine learning by splitting the data into test and train\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20)","fa48f8ab":"X_train.shape","fda48b26":"X_test.shape","f7a85b49":"y_train.shape","6573fdf3":"y_test.shape","31166e4e":"#we use logistic regression model to classify whether a tumor is malignant or benign based on the characteristics or features\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","3d50db48":"classifier = LogisticRegression()","cfd87e89":"classifier.fit(X_train, y_train)","b403d2e9":"y_pred = classifier.predict(X_test)","67b1bbfa":"y_pred","bbd71696":"acc = accuracy_score(y_test, y_pred)\nprint(\"Accuracy score using Logistic Regression:\", acc*100)","6cbf931f":"#confusion matrix to check no of right predictions we got\ncm = confusion_matrix(y_test, y_pred)","d84b9df1":"sns.heatmap(cm, annot=True);","bb625b58":"print(classification_report(y_test, y_pred))","97839b16":"we can see on the correlation heatmap there is a strong negative correlation between diagnosis and mean_perimeter followed by mean_radius and mean_area","a33c4d83":"# Splitting the dataset into train & test","847c37f8":"we have total 6 variables and the target variable is diagnosis 1 = malignant which is Harmful, 0 = benign which is not harmful","09d7f4f2":"You can get the dataset from here https:\/\/www.kaggle.com\/merishnasuwal\/breast-cancer-prediction-dataset","f022901f":"# Training the Model","8dfaa3d5":"So, we have 357 malignants(1) and 212 benigns(0) in the target variable","44551184":"Now, we have all the data separated into train & test split with Test set 20% and Train set 80%","904cb87a":"Calculating the accuracy of the model","d3d9bd65":"Predicting the Test set results","f45c1740":"We got an accuracy of 91%\nThank you ","29d23e10":"Fitting the Logistic Regression Model"}}