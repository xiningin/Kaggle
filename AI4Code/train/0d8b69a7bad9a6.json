{"cell_type":{"b9d6fe64":"code","bcdcbb80":"code","a854618f":"code","9df5c9ef":"code","0e30bb21":"markdown","159e6208":"markdown","af0a6c6c":"markdown","9aaa7a61":"markdown"},"source":{"b9d6fe64":"import nltk\nfrom nltk import pos_tag\nfrom nltk import RegexpParser\n\n#Text\ntxt =\"This is NLP Chunking NoteBook\"\ntext = txt.split()\nprint(\"After Split:\",text)","bcdcbb80":"#POS Tags\nPOS_tag = pos_tag(text)\n\nprint(\"After POS tags:\",POS_tag)\n","a854618f":"#Chunking Form\n\npatterns= \"\"\"mychunk:{<NN.?>*<VBD.?>*<JJ.?>*<CC>?}\"\"\"\nchunker = RegexpParser(patterns)\nprint(\"After Regex:\",chunker)","9df5c9ef":"output = chunker.parse(POS_tag)\nprint(\"After Chunking\",output)\n#output.draw()","0e30bb21":"![Draw%20output.PNG](attachment:Draw%20output.PNG)","159e6208":"![chunking.jpg](attachment:chunking.jpg)","af0a6c6c":"# Chunking in NLTK \n\nText chunking, also referred to as shallow parsing, is a task that follows Part-Of-Speech Tagging and that adds more structure to the sentence. The result is a grouping of the words in \u201cchunks\u201d\n\nIn shallow parsing, there is maximum one level between roots and leaves while deep parsing comprises of more than one level. Shallow Parsing is also called light parsing or chunking.\n\nThe primary usage of chunking is to make a group of \"noun phrases.\" The parts of speech are combin.\n\n### Rules of Chunking:\n\nFor example: Need to tag Noun, verb (past tense), adjective, and coordinating junction from the sentence. \n\nchunk:{<NN.?>*<VBD.?>*<JJ.?>*<CC>?}","9aaa7a61":"### Description:\n\nName of symbol\tDescription\n\n( . )\tAny character except new line\n\n( * )\tMatch 0 or more repetitions\n\n( ? )\tMatch 0 or 1 repetitions"}}