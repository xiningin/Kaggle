{"cell_type":{"0dc2cc9f":"code","649862be":"code","00fcf4fa":"code","82376c1b":"code","97d018c6":"code","b0cbc7cb":"code","78ede7d0":"code","ad2377f3":"code","ff2a529f":"code","914e9d63":"code","676bfd27":"code","7e94d79d":"code","364d7976":"code","7a197bcd":"code","21e8a7cd":"code","989ffdf2":"code","f6a5715c":"code","b10a02a4":"code","841f6fff":"code","20f5520e":"code","906a6d53":"code","7ebfd634":"code","00dddac3":"code","20eba878":"code","a1de1782":"markdown","585806d2":"markdown","2720d09d":"markdown","27123d5a":"markdown","25bcfa67":"markdown"},"source":{"0dc2cc9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","649862be":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","00fcf4fa":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")","82376c1b":"train.head()","97d018c6":"train.isnull()","b0cbc7cb":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='PuBu')","78ede7d0":"sns.set_style('darkgrid')\nsns.countplot(x='Survived',data=train)","ad2377f3":"sns.countplot(x='Survived',hue='Sex',data=train,palette='YlGnBu')","ff2a529f":"sns.countplot(x='Survived',hue='Pclass',data=train, palette='rainbow')","914e9d63":"sns.distplot(train['Age'].dropna(),kde=False,color='darkred',bins=40)","676bfd27":"sns.countplot(x='SibSp',data=train)","7e94d79d":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","364d7976":"sns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","7a197bcd":"def input_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n\n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n        \n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n    else:\n        return Age\n","21e8a7cd":"train['Age'] = train[['Age','Pclass']].apply(input_age,axis=1)","989ffdf2":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","f6a5715c":"train.drop('Cabin',axis=1,inplace=True)","b10a02a4":"train.head()","841f6fff":"pd.get_dummies(train['Embarked'],drop_first=True).head()","20f5520e":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","906a6d53":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","7ebfd634":"train.head()","00dddac3":"train = pd.concat([train,sex,embark],axis=1)","20eba878":"train.head()","a1de1782":"## Import Libraries","585806d2":"### Missing Data","2720d09d":"## Dataset","27123d5a":"## Exploratory Data Analysis \n","25bcfa67":"### Data Cleaning"}}