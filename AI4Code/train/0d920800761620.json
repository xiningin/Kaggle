{"cell_type":{"96c1e942":"code","9f536164":"code","206500ac":"code","7ed16d7b":"code","391ecac5":"code","21d93626":"code","4b3e882e":"code","135606fa":"code","76130ece":"code","849e9a3e":"code","263aedbe":"code","7c8c8921":"code","1d9b34e7":"code","56302f65":"code","6ec9e753":"code","159b9c61":"code","d4072c47":"code","a6ad88a0":"code","6eb8654d":"code","94fe2d04":"code","0f356097":"code","53357c01":"code","380746ba":"code","ec9f11bd":"code","858b39d7":"code","dfe4b4b2":"code","9e8e22c4":"code","feb0eba5":"code","c348aeb2":"code","1dd09064":"code","33a706e5":"code","00d16f8b":"code","36a65086":"code","0d7c2516":"code","9217653f":"code","06fda1e2":"code","10ce3055":"code","244d4453":"code","dba743b2":"code","25eebe2d":"code","f3622028":"code","712d6f6e":"code","22203ce7":"code","1cbc2a7d":"code","feea80f4":"code","c0692f00":"code","bd50a1c3":"markdown","976dfd6c":"markdown"},"source":{"96c1e942":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","9f536164":"col_names= ['user_id', 'item_id', 'rating', 'timestamp']\ndf = pd.read_csv('..\/input\/movies-list\/movies.list',sep='\\t', names=col_names)","206500ac":"df.head()","7ed16d7b":"mov_title=pd.read_csv('..\/input\/movie-id-titles\/Movie_Id_Titles')","391ecac5":"mov_title.head()","21d93626":"df.loc[df['item_id']==50]","4b3e882e":"mov_title.loc[mov_title['item_id']==50]","135606fa":"df = pd.merge(df,mov_title,on = 'item_id')","76130ece":"df.head()","849e9a3e":"sns.set_style('white')","263aedbe":"df.groupby('title')['rating'].mean().sort_values(ascending=False)\n#note : some movies may have been rated only by one or two ppl which is why it tops in the below list. ","7c8c8921":"df.loc[df['title']=='Prefontaine (1997)']['rating'].count()","1d9b34e7":"#commands practise - verifying mean value for one movie title\ndf.loc[df['title']=='1-900 (1994)']['rating'].mean()","56302f65":"# listing most rated movies based on the count(no. of times the movie was rated)\ndf.groupby('title')['rating'].count().sort_values(ascending=False)","6ec9e753":"# creating a dataframe for mean,ratings\nratings=pd.DataFrame(df.groupby('title')['rating'].mean())","159b9c61":"ratings.head()","d4072c47":"ratings['num of ratings'] = df.groupby('title')['rating'].count()","a6ad88a0":"ratings.head()","6eb8654d":"ratings.head().sort_values(ascending=False,by ='num of ratings')","94fe2d04":"ratings.loc['Star Wars (1977)']","0f356097":"ratings['num of ratings'].hist(bins=50)","53357c01":"ratings['rating'].hist(bins=50)","380746ba":"sns.jointplot(x='rating',y='num of ratings',data=ratings,color='Purple')","ec9f11bd":"df.head()","858b39d7":"# create a matrix using a pivot\nmov_mat=df.pivot_table(index='user_id', columns='title')","dfe4b4b2":"mov_mat.head()","9e8e22c4":"mov_mat=df.pivot_table(index='user_id', columns='title',values='rating')","feb0eba5":"mov_mat.head()","c348aeb2":"ratings.head()","1dd09064":"ratings.sort_values('num of ratings',ascending=False).head(10)","33a706e5":"#choose a few movies and grab the rating\nstarwars_user_rating=mov_mat['Star Wars (1977)']\nLiarLiar_user_rating=mov_mat['Liar Liar (1997)']","00d16f8b":"#find the correlartion bet one movie and the other movies\n\nmov_mat.corrwith(starwars_user_rating)\n\n","36a65086":"\nsimilar_to_starwars=mov_mat.corrwith(starwars_user_rating)","0d7c2516":"corr_starwars=pd.DataFrame(similar_to_starwars,columns=['correlation'])\ncorr_starwars.dropna(inplace=True)","9217653f":"corr_starwars.sort_values('correlation',ascending=False).head(10)","06fda1e2":"# most of the highly correlated values(ie similar to Star wars might hvae  been a less popular ones.\n#The reason why it tops the list is probably because the movies were rated by less no. of people.\n#it does not make sense to showcase these movies as recommendation for starwars. \n#So lets include the num. of ratings and set a threshold to aviod too many results)","10ce3055":"corr_starwars =corr_starwars.join(ratings['num of ratings'])","244d4453":"corr_starwars.head()","dba743b2":"corr_starwars[corr_starwars['num of ratings']>100].sort_values('correlation',ascending=False).head()","25eebe2d":"LiarLiar_user_rating.head()","f3622028":"mov_mat.corrwith(LiarLiar_user_rating)\n","712d6f6e":"similar_to_liarliar=pd.DataFrame(mov_mat.corrwith(LiarLiar_user_rating),columns=['Correlation'])\n\nsimilar_to_liarliar.dropna(inplace=True)","22203ce7":"similar_to_liarliar.head()","1cbc2a7d":"similar_to_liarliar=similar_to_liarliar.join(ratings['num of ratings'])","feea80f4":"similar_to_liarliar.head()","c0692f00":"similar_to_liarliar[similar_to_liarliar['num of ratings']>100].sort_values('Correlation',ascending=False).head()","bd50a1c3":"# Basic Movie recommender System \nThis is a simple example of recommendation system  which suggests movies\/items are most similar to your movie choice.","976dfd6c":"***Each item_id in df is realted to item_id in mov_title. So lets merge both the data frame into one"}}