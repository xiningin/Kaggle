{"cell_type":{"bdfd00cb":"code","cfff5843":"code","a45910f0":"code","531b514e":"code","9b152d20":"code","71755595":"code","f26939be":"code","707e2e16":"code","5045db8d":"code","1a497cdc":"code","e8bab049":"code","97bc3d12":"code","af40b334":"code","9dab9b3a":"code","4a0d8245":"code","f713a523":"code","c008ccab":"code","7565c19e":"code","73c881f3":"code","4829a55e":"code","4332d12a":"code","7b76fcba":"code","d7a54ce2":"code","d30fe8b9":"code","2fa17158":"code","e29ec9c4":"code","906c6caf":"code","c98e8167":"code","273eb468":"code","dd44da59":"markdown","76c8cfe4":"markdown","3fdfcec1":"markdown","68e51cba":"markdown","ca4558e6":"markdown","dab9bd31":"markdown","e7b56c69":"markdown","d9221024":"markdown","bfe91877":"markdown","506228d2":"markdown","8a073e15":"markdown","cdaf161a":"markdown","75665fe2":"markdown","7359d073":"markdown","bb579993":"markdown","5a0c0b4c":"markdown","ee7e037a":"markdown","04184709":"markdown","12154bbb":"markdown","d4cd3d54":"markdown","b2f39873":"markdown","269c5683":"markdown","6d7c1770":"markdown","9bdf09fa":"markdown"},"source":{"bdfd00cb":"import pandas as pd \nimport numpy as np \nimport plotly\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom datetime import datetime\n\nsns.set(style=\"whitegrid\")\n# warnings.filterwarnings(\"ignore\")\n","cfff5843":"def load_datasets():\n    airlines = pd.read_csv('..\/input\/flight-delays\/airlines.csv')\n    airports = pd.read_csv('..\/input\/flight-delays\/airports.csv')\n    flights = pd.read_csv('..\/input\/flight-delays\/flights.csv')\n    return (airlines, airports, flights)\n\ndatasets = load_datasets()\n","a45910f0":"airlines_df = datasets[0]\nairports_df = datasets[1]\nflights_df = datasets[2]\n","531b514e":"airlines_df.head()","9b152d20":"print(f'Dataframe has {airlines_df.shape[0]} rows, and {airlines_df.shape[1]} columns.')\n\n","71755595":"airports_df.head()","f26939be":"print(f'Dataframe has {airports_df.shape[0]} rows, and {airports_df.shape[1]} columns.')\n\n","707e2e16":"weekday_dict = {\n    1 : 'Monday',\n    2 : 'Tuesday',\n    3 : 'Wednesday',\n    4 : 'Thursday',\n    5 : 'Friday',\n    6 : 'Saturday',\n    7 : 'Sunday',\n}\n\nmonth_dict = {\n    1 : 'Jan',\n    2 : 'Feb',\n    3 : 'Mar', \n    4 : 'Apr',\n    5 : 'May',\n    6 : 'Jun', \n    7 : 'Jul', \n    8 : 'Aug',\n    9 : 'Sep',\n    10 : 'Oct',\n    11 : 'Nov',\n    12 : 'Dec'\n}\n\nflights_df['DAY_OF_WEEK'] = flights_df['DAY_OF_WEEK'].map(weekday_dict)\nflights_df['flight_date'] = [datetime(year, month, day) for year, month, day in zip(flights_df.YEAR, flights_df.MONTH, flights_df.DAY)]\nflights_df['MONTH'] = flights_df['MONTH'].map(month_dict)\nflights_df.head()","5045db8d":"print(f'Dataframe has {flights_df.shape[0]} rows, and {flights_df.shape[1]} columns.')\n\n","1a497cdc":"# Rename airline code column.\nairlines_df.rename(columns={'IATA_CODE':'AIRLINE_CODE'}, inplace=True)\n# Rename airport code column.\nairports_df.rename(columns={'IATA_CODE':'AIRPORT_CODE'}, inplace=True)\n# Rename flights airline code column.\nflights_df.rename(columns={'AIRLINE':'AIRLINE_CODE'}, inplace=True)\n# Rename flights origin code column.\nflights_df.rename(columns={'ORIGIN_AIRPORT':'ORIGIN_AIRPORT_CODE'}, inplace=True)\n# Rename flights destination code column.\nflights_df.rename(columns={'DESTINATION_AIRPORT':'DESTINATION_AIRPORT_CODE'}, inplace=True)\n\n\n","e8bab049":"combined_df = pd.merge(flights_df, airlines_df, on='AIRLINE_CODE', how='left')\n","97bc3d12":"combined_df = pd.merge(combined_df, airports_df, left_on='ORIGIN_AIRPORT_CODE', right_on='AIRPORT_CODE', how='left')\n","af40b334":"combined_df = pd.merge(combined_df, airports_df, left_on='DESTINATION_AIRPORT_CODE', right_on='AIRPORT_CODE', how='left')\n\n# Caculating flight airtime\ncombined_df['elapsed_time'] = combined_df['WHEELS_ON'] - combined_df['WHEELS_OFF']\n","9dab9b3a":"combined_df.fillna(value=0.0, inplace=True)\n","4a0d8245":"combined_df.head()\n","f713a523":"# Rename origin airport meta columns.\ncombined_df.rename(columns={'AIRPORT_x':'ORIGIN_AIRPORT', \n                            'CITY_x':'ORIGIN_CITY', \n                            'STATE_x':'ORIGIN_STATE',\n                            'COUNTRY_x':'ORIGIN_COUNTRY',\n                            'LATITUDE_x':'ORIGIN_LATITUDE',\n                            'LONGITUDE_x':'ORIGIN_LONGITUDE'}, inplace=True)\n","c008ccab":"# Rename destination airport meta columns.\ncombined_df.rename(columns={'AIRPORT_y':'DESTINATION_AIRPORT', \n                            'CITY_y':'DESTINATION_CITY', \n                            'STATE_y':'DESTINATION_STATE',\n                            'COUNTRY_y':'DESTINATION_COUNTRY',\n                            'LATITUDE_y':'DESTINATION_LATITUDE',\n                            'LONGITUDE_y':'DESTINATION_LONGITUDE'}, inplace=True)\n","7565c19e":"number_of_flights = combined_df.shape[0]","73c881f3":"origin_airport_group = combined_df.groupby('ORIGIN_AIRPORT')['FLIGHT_NUMBER'].count().sort_values(ascending=False)\n\n","4829a55e":"destination_airport_group = combined_df.groupby('DESTINATION_AIRPORT')['FLIGHT_NUMBER'].count().sort_values(ascending=False)\n\n","4332d12a":"airline_group = combined_df.groupby('AIRLINE')['FLIGHT_NUMBER'].count().sort_values(ascending=False)\n\n","7b76fcba":"labels = list(origin_airport_group[1:11].index)\nvalues = list(origin_airport_group[1:11].values)\n\ntrace = go.Pie(labels=labels, values=values)\nlayout = go.Layout(title='Origin Airport Flight Distribution (Top 10)',\n                    autosize=False,\n                    width=800,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    ))\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='origin_distribution')\n\n","d7a54ce2":"labels = list(destination_airport_group[1:11].index)\nvalues = list(destination_airport_group[1:11].values)\n\ntrace = go.Pie(labels=labels, values=values)\nlayout = go.Layout(title='Destination Airport Flight Distribution',\n                    autosize=False,\n                    width=800,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    ))\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='destination_distribution')\n\n","d30fe8b9":"labels = list(airline_group[:10].index)\nvalues = list(airline_group[:10].values)\n\ntrace = go.Pie(labels=labels, values=values)\nlayout = go.Layout(title='Flight Distribution by Airline',\n                    autosize=False,\n                    width=800,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    ))\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='airline_distribution')\n\n\n\n","2fa17158":"city_group = combined_df.groupby(['ORIGIN_CITY'])['FLIGHT_NUMBER'].count().sort_values(ascending=False)\ncity_group[1:21]\n\ntrace = go.Bar(x=city_group[1:21].index, \n                y=city_group[1:21].values, \n                name='city',\n                marker={\n                    'color':city_group[1:21].values,\n                    'colorscale':'Reds',\n                    'showscale':True,\n                    },\n                )\n\nlayout = go.Layout(title='Number of Flights from Origin City',\n                    xaxis={'title':'Origin City'},\n                    yaxis={'title':'# of Flights'},\n                    autosize=False,\n                    width=800,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    ))\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='origin_city_bar')\n\n","e29ec9c4":"\ntrace = go.Bar(x=airline_group[:10].index, \n                y=airline_group[:10].values, \n                name='airlines',\n                marker={\n                    'color':airline_group[:10].values,\n                    'colorscale':'Reds',\n                    'showscale':True,\n                    },\n                )\n\nlayout = go.Layout(title='Number of Flights by Airline',\n                    xaxis={'title':'Airline'},\n                    yaxis={'title':'# of Flights'},\n                    autosize=False,\n                    width=800,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    ))\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='airline_bar')\n\n","906c6caf":"month_group = combined_df.groupby(['MONTH'])['FLIGHT_NUMBER'].count()\n\ntrace = go.Bar(x=month_group.index, \n                y=month_group.values, \n                name='month',\n                marker={\n                    'color':month_group.values,\n                    'colorscale':'Reds',\n                    'showscale':True,\n                    },\n                )\n\nlayout = go.Layout(title='Number of Flights per Month',\n                    xaxis={'title':'Month'},\n                    yaxis={'title':'# of Flights'},\n                    autosize=False,\n                    width=500,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    )\n                )\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='month_bar')\n\n","c98e8167":"day_group = combined_df.groupby(['DAY_OF_WEEK'])['FLIGHT_NUMBER'].count().sort_values(ascending=False)\n\ntrace = go.Bar(x=day_group.index, \n                y=day_group.values, \n                name='day_of_week',\n                marker={\n                    'color':day_group.values,\n                    'colorscale':'Reds',\n                    'showscale':True,\n                    },\n                )\n\nlayout = go.Layout(title='Number of Flights per Day Of Week',\n                    xaxis={'title':'Day Of Week'},\n                    yaxis={'title':'# of Flights'},\n                    autosize=False,\n                    width=500,\n                    height=500,\n                    margin=go.layout.Margin(\n                        l=50,\n                        r=50,\n                        b=100,\n                        t=100,\n                        pad=4\n                    )\n                )\n\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='day_bar')\n\n","273eb468":"# flights_df.head(30)","dd44da59":" ## Load Datasets","76c8cfe4":" #### We merge flights_df and airports_df on 'ORIGIN_AIRPORT_CODE' column.","3fdfcec1":" #### There are null values throughout the CANCELLATION_REASON, AIR_SYSTEM_DELAY, SECURITY_DELAY, AIRLINE_DELAY, LATE_AIRCRAFT_DELAY, and WEATHER_DELAY columns.\n #### I decide to fill the null values with 0.0.","68e51cba":" ### Top 20 Origin City Distribution # of flights","ca4558e6":" #### We merge flights_df and airports_df on 'DESTINATION_AIRPORT_CODE' column.","dab9bd31":" #### Flights","e7b56c69":" #### Airports","d9221024":" ### Distribution # of flights per Month","bfe91877":" ## Airline Distribution","506228d2":" ### Top 10 Airlines Distribution # of flights","8a073e15":" No suprise that flight distributions for both Origin and Destinaton airports are very similar.\n","cdaf161a":" #### Airlines","75665fe2":" ### Lets combine these dataframes in to one.\n","7359d073":" ## Datasets\n ### We will work with 3 dataset collected by the DOT's Bureau of Transportation Statistics.\n- airlines\n- airports\n- flights","bb579993":" Lets take a look at the first few lines of each dataset\n","5a0c0b4c":" #### We merge flights_df and airlines_df on 'AIRLINE' column.","ee7e037a":" ## Origin Airport Distribution","04184709":" ### Top 10 Origin Airport Distribution # of flights","12154bbb":" # 2015 Flight Delays and Cancellations\n\n![Airport departures](https:\/\/images.unsplash.com\/photo-1421789497144-f50500b5fcf0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60 \"Flights\")\n\n Photo by Matthew Smith on Unsplash.\n\n ### Which airline should you fly on to avoid significant delays?\n\n\n The U.S. Department of Transportation's (DOT) Bureau of Transportation\n Statistics tracks the on-time performance of domestic flights operated\n by large air carriers. Summary information on the number of on-time, delayed,\n canceled, and diverted flights is published in DOT's monthly Air Travel Consumer\n Report and in this dataset of 2015 flight delays and cancellations.\n\n The flight delay and cancellation data was collected and published by the DOT's Bureau of Transportation Statistics.","d4cd3d54":" ### Top 10 Destination Airport Distribution # of flights","b2f39873":" ## Library Imports","269c5683":" ## Destination Airport Distribution","6d7c1770":" ### Top 10 Airlines Distribution # of flights","9bdf09fa":" ### Distribution # of flights per Day of the Week"}}