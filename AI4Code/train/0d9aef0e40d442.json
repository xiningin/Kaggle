{"cell_type":{"6294e6f2":"code","85c858c6":"code","c62fda39":"code","2df9dd5e":"code","6be6ecb7":"code","b3a4eb0c":"code","8eddf8b0":"code","78077806":"code","86d47500":"code","463eabbf":"code","e7ac6136":"code","c6e3c58c":"code","5136ae70":"code","94046d67":"code","e59dff88":"code","958faa53":"code","aac1a5d6":"code","f5454511":"code","34de6625":"code","d59147cd":"code","bdee0c82":"code","adf7046c":"code","2688c2f3":"code","7090e0dd":"code","c74808be":"code","d90eb5e7":"code","285478ad":"markdown","767e13b0":"markdown","6f5845c0":"markdown","f476de1d":"markdown","3508a261":"markdown","4920a9d6":"markdown","6882b136":"markdown","a2f19a4c":"markdown","4d498e9a":"markdown","fce03021":"markdown","3f2adee1":"markdown","b7962055":"markdown","7260eb1d":"markdown","294b3d8f":"markdown","3476ba33":"markdown","5ad9beef":"markdown","5c46992c":"markdown","b79e3868":"markdown","8eeab2dc":"markdown","1406a185":"markdown","8dbb4328":"markdown","42696b25":"markdown","338ba754":"markdown","aeedafe7":"markdown","5351f175":"markdown","7f9ceeee":"markdown","66f22137":"markdown","6547ddd0":"markdown"},"source":{"6294e6f2":"!pip install jovian --upgrade -q","85c858c6":"import jovian","c62fda39":"jovian.commit(project='numpy-array-operations')","2df9dd5e":"import numpy as np","6be6ecb7":"# List of functions explained \nfunction1 = np.zeros\nfunction2 = np.sum\nfunction3 = np.sin\nfunction4 = np.vstack\nfunction5 = np.std","b3a4eb0c":"# Example 1 - working \nzero = np.zeros((2,2))\nprint(zero)","8eddf8b0":"# Example 2 - working\nnp.zeros((2,5))\n","78077806":"# Example 3 - breaking (to illustrate when it breaks)\nnp.zeros((2,0),axis = True)","86d47500":"jovian.commit(project='numpy-array-operations')","463eabbf":"# Example 1 - working\na = np.array([1, 2, 3, 4])\na.sum()","e7ac6136":"# Example 2 - working\nb = np.array([[1,2,3],[4,5,6]])\nb.sum(axis = 0)","c6e3c58c":"# Example 3 - breaking \nb = np.array([[1,2,3],[4,5,6]])\nb.sum(axis = 3)","5136ae70":"jovian.commit(project='numpy-array-operations')","94046d67":"# Example 1 - working\na = np.array((0., 30., 45., 60., 90.)) * np.pi \/ 180. \nnp.sin(a)","e59dff88":"# Example 2 - working\nimport matplotlib.pylab as plt\nx = np.linspace(-np.pi, np.pi, 201)\nplt.plot(x, np.sin(x))\nplt.xlabel('Angle [rad]')\nplt.ylabel('sin(x)')\nplt.axis('tight')\nplt.show()","958faa53":"# Example 3 - breaking\nnp.sin(np.pi\/0)","aac1a5d6":"jovian.commit(project='numpy-array-operations')","f5454511":"# Example 1 - working\na = np.array([1, 2, 3])\nb = np.array([2, 3, 4])\nnp.vstack((a,b))","34de6625":"# Example 2 - working\na = np.array([[1], [2], [3]])\nb = np.array([[2], [3], [4]])\nnp.vstack((a,b))","d59147cd":"# Example 3 - breaking (to illustrate when it breaks)\na = np.array([1, 2, 3, 4])\nb = np.array([2, 3, 4])\nnp.vstack((a,b))","bdee0c82":"jovian.commit(project='numpy-array-operations')","adf7046c":"# Example 1 - working\na = np.array([[1, 2], [3, 4]])\nnp.std(a)","2688c2f3":"# Example 2 - working\na = np.array([[1, 2], [1, 1]])\nnp.std(a,axis=0)","7090e0dd":"# Example 3 - breaking (to illustrate when it breaks)\na = np.array([[1, 2 , 4], [1, 1]])\nnp.std(a,axis=0)","c74808be":"jovian.commit(project='numpy-array-operations')","d90eb5e7":"jovian.commit(project='numpy-array-operations')","285478ad":"Axis is can take value either 0 or 1. 0 = columnwise sum, 1 = rowwise sum.  ","767e13b0":"## Conclusion\n\nHere we have looked at 5 numpy functions np.zeros, np.sum, np.sin, np.vstack, np.std. ","6f5845c0":"This function can be ","f476de1d":"Get arraywise trigonametric sin of the elements.","3508a261":"## Function 1 - np.zeros\n\nCreate an array of zeros of given size","4920a9d6":"Columnwise sum of all  elements in a $ 2 \\times 3$ numpy array.","6882b136":"## Reference Links\nProvide links to your references and other interesting articles about Numpy arrays:\n* Numpy official tutorial : https:\/\/numpy.org\/doc\/stable\/user\/quickstart.html\n* Numpy std function: https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.std.html?highlight=numpy%20std#numpy.std\n* Numpy sum function: https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.sum.html?highlight=sum#numpy.sum\n* Numpy sin function: https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.sin.html?highlight=sin\n* Numpy zeros: https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.zeros.html?highlight=zeros#numpy.zeros\n* Numpy vstack: https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.vstack.html?highlight=vstack","a2f19a4c":"Array a and b has two different column sizes. Array a and b should be of same column numbers.","4d498e9a":"Combine two numpy arrays vertically","fce03021":"## Function 4 - np.vstack\n\nStack arrays in sequence vertically (row wise).","3f2adee1":"## Function 5 - np.std\n\nCompute the standard deviation along the specified axis.\n\nReturns the standard deviation, a measure of the spread of a distribution, of the array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.\n\n","b7962055":"The standard deviation is the square root of the average of the squared deviations from the mean, i.e., $ std = \\sqrt{\\frac{x - x_{mean}}{n}}$.","7260eb1d":"## Function 3 - np.sin\n\nTrigonometric sine, element-wise.","294b3d8f":"This feautre can be used to encode cyclical features from datetime values.","3476ba33":"Return the sum of all the elements in the numpy array.","5ad9beef":"Zero division error. There is division by zero. Replace zero with non-zero value.","5c46992c":"Number of elements of all the rows sholud be the same.","b79e3868":"## Function 2 - np.sum\n\nSum of array elements over a given axis.","8eeab2dc":"This function makes most sense for arrays with up to 3 dimensions. For instance, for pixel-data with a height (first axis), width (second axis), and r\/g\/b channels (third axis). The functions concatenate, stack and block provide more general stacking and concatenation operations.","1406a185":"This function can be used to draw a bank canvas in OpenCV","8dbb4328":"Standard deviation of the $ 2 \\times 2 $ numpy array along all the columns","42696b25":"Let's begin by importing Numpy and listing out the functions covered in this notebook.","338ba754":"vertically stack a and b.","aeedafe7":"Create a numpy array of size $2 \\times 2=5$ where all elements are zeros.","5351f175":"Plotting sin plot for $-\\pi$ to $\\pi$.","7f9ceeee":"There is no axis argument in the zeros function. Remove axis argument to fix the issue.","66f22137":"Create a numpy array of size $2 \\times 2$ where all elements are zeros.","6547ddd0":"Standard deviation is really useful in stastics."}}