{"cell_type":{"20164b71":"code","b086e4a0":"code","d06fb4ca":"code","6844d4c3":"code","1361ab2c":"code","73a6b164":"code","5f52d121":"code","6f9691ca":"code","a5d90ccc":"code","f868d2b1":"code","6f6ef77b":"code","10360b1b":"code","d0518407":"code","97175df9":"markdown","8efd6d6b":"markdown","92df1d09":"markdown","a17aba1b":"markdown","5421b257":"markdown","19e48179":"markdown"},"source":{"20164b71":"# import libraries\nimport pandas as pd\nimport joblib","b086e4a0":"# Load the test data set\npd.set_option('max_columns', None)\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\n# Print the shape of the test set \nprint(test.shape)","d06fb4ca":"# view first few rows\ntest.head()","6844d4c3":"# Calculate and print the number of number of missing values in each column\ntest.isna().sum(axis = 0).to_frame().T","1361ab2c":"# Add a new column named 'FamSize' to the DataFrame (sum of the 'SibSp' and 'Parch') \ntest['FamSize'] = test['SibSp'] + test['Parch']\n\n# We will use the function below to determine the deck letter for each passenger:\ndef set_deck(cabin):\n    if str(cabin) == 'nan':\n        return 'Missing'\n    return cabin[0]\n\n# Use the map() method of the train DataFrame to apply the function above \n# to the 'Cabin' column. Store the results in a new column named 'Deck'. \ntest['Deck'] = test['Cabin'].map(set_deck)","73a6b164":"test.head()","5f52d121":"# load pipeline\npreprocessor = joblib.load('..\/input\/ek-titanic-preprocessor-and-rf-model\/titanic_preprocessor_01.joblib')","6f9691ca":"# Create a list of numberical feature names: 'Age', 'FamSize', 'Fare'\nnum_features = ['Age', 'FamSize', 'Fare']\n# Create a list of categorical feature names: 'Sex', 'Pclass', 'Deck', 'Embarked'\ncat_features = ['Sex', 'Pclass', 'Deck', 'Embarked']\n# Combine the two previous lists into one list named 'features'\nfeatures = num_features + cat_features\n\n# Apply the preprocessor to the test data\nX_test = preprocessor.transform(test[features])\n\n# Print test shape, to ensure matches model\nprint('X_train shape:', X_test.shape)","a5d90ccc":"# load model\nmodel = joblib.load('..\/input\/ek-titanic-preprocessor-and-rf-model\/titanic_model_01.joblib')","f868d2b1":"# make predictions using model\ny_pred = model.predict(X_test)","6f6ef77b":"# write to submission\nsubmission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\n# view first few rows\nsubmission.head()","10360b1b":"# add predictions to file\nsubmission['Survived'] = y_pred\n# view first few rows\nsubmission.head()","d0518407":"# export to csv file\nsubmission.to_csv('submission.csv', index = False, header = True)","97175df9":"# Model Predictions","8efd6d6b":"# Preprocessing","92df1d09":"# Import Statements","a17aba1b":"# Submission","5421b257":"# Check for Missing Values","19e48179":"# Load Data"}}