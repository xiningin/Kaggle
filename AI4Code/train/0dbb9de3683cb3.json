{"cell_type":{"09debdd1":"code","76497893":"code","cf16a1d7":"code","14e6865b":"code","d69308b0":"code","f13ffd82":"code","deff65da":"code","be901d85":"code","00363629":"code","5a94a1ae":"code","52e9061b":"code","f6dda21f":"code","ee50c75e":"code","23b89da0":"code","4cd3b12f":"code","54c17b0c":"code","1e6d9f99":"code","7647eefe":"code","2f8b8d5c":"code","ece3bfd7":"code","2da3e36e":"code","a2933f9c":"code","6cce8804":"code","d107806e":"code","a82c5d38":"code","b9fd2c7e":"code","221354f0":"code","d0513734":"code","2f60d77f":"code","339ffd0e":"code","1217179b":"markdown","fdbde6c2":"markdown","2ea48ccd":"markdown","eab1a39a":"markdown","2fe2828b":"markdown","87ff4824":"markdown","e2e7ab27":"markdown","2d7a3052":"markdown","37bb7e78":"markdown","7b0a44cc":"markdown","1d088665":"markdown","03d0be74":"markdown","aff59746":"markdown","6374aca7":"markdown","ad7d307d":"markdown","fccff387":"markdown"},"source":{"09debdd1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pylab as plt\nimport seaborn as sns\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\n\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","76497893":"df = pd.read_csv(\"\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv\")\ndf_regions = pd.read_csv(\"\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv\")\ndf.head()","cf16a1d7":"cols = df.columns.values\ndf[\"Age\"]= df[\"Age\"].fillna(0)\ndf[\"Age\"] = df[\"Age\"].astype(\"int64\")\ndf[\"Height\"] = df[\"Height\"]\/100\ncols","14e6865b":"df.info()","d69308b0":"sns.countplot(\"Sex\", data = df)","f13ffd82":"tickss = np.arange(df[\"Age\"].min(),df[\"Age\"].max(),5)\nplt.figure(figsize=(10,10))\ng=sns.distplot(df[\"Age\"])\nplt.xticks(tickss)\nplt.show()","deff65da":"sns.distplot(df[\"Height\"])","be901d85":"df_merged= pd.merge(df, df_regions, on= \"NOC\")\ndf_merged.columns","00363629":"df_countries =df_merged[\"region\"].value_counts().to_frame().reset_index()\\\n.sort_values(by= \"region\",ascending = False)\ndf_countries.head()","5a94a1ae":"sns.countplot(df[\"Medal\"], hue= df[\"Sex\"])\nplt.title(\"Each medal type distibution between Male and Females\", fontsize=20)","52e9061b":"plt.figure(figsize=(15,15))\nsns.countplot(df[\"Sport\"], hue= df[\"Sex\"])\nplt.xticks(rotation=90)\nplt.title(\"Number of player in each sport for males and females\")","f6dda21f":"df_egypt= df_merged[df_merged[\"region\"]==\"Egypt\"]\ndf_egypt_medal = df_egypt[\"Medal\"].value_counts()\nprint(\"List of total medals achived by Egyptian player: \\n\", df_egypt_medal)","ee50c75e":"df_egypt.shape","23b89da0":"df_year_count_egypt = df_egypt.groupby(\"Year\")[\"ID\"].count().reset_index()\n# df_year_count_egypt\nplt.figure(figsize=(10,10))\nsns.barplot(data= df_year_count_egypt, x= \"Year\", y = \"ID\")\nplt.xticks(rotation = 90, fontsize=12)\nplt.title(\"Bar chart to number of Egyptian player in each year\", fontsize= 18)\nplt.show()","4cd3b12f":"df_merged[\"Age_group\"] = [\"Young\" if item < 40 else \"Old\" for item in df_merged[\"Age\"]]\ndf_merged[\"Age_group\"].value_counts()","54c17b0c":"df_merged[\"BMI\"] = df_merged[\"Weight\"]\/np.power(df_merged[\"Height\"],2)\ndf_merged[\"Body_Fit\"] = [\"Thin\" if x <18.5 else \"Obese\" if x > 25 else \"Fit\" for x in df_merged[\"BMI\"]]","1e6d9f99":"df_merged[\"Body_Fit\"].value_counts()","7647eefe":"df_body_Obese = df_merged[df_merged[\"Body_Fit\"]== \"Obese\"]\ndf_body_Obese.head()","2f8b8d5c":"obese_sport_list = df_body_Obese[\"Sport\"].value_counts()\nprint(\"List of all sports which required obese or high Body mass index: \\n\", obese_sport_list)","ece3bfd7":"df_body_thin = df_merged[df_merged[\"Body_Fit\"]== \"Thin\"]\ndf_body_thin.shape","2da3e36e":"thin_sport_list = df_body_thin[\"Sport\"].value_counts()\nprint(\"List of all sports which can be done by low Body mass index athletes: \\n\", thin_sport_list)","a2933f9c":"def find(year,sport,Medal=\"Gold\"):\n    \"\"\"\n    parameter: Year,Sport type\n    return: Athletes who receive a gold medal according to the sport type and the year.\n    \"\"\"\n    data_find=df_merged[(df_merged['Year']==year) & (df_merged['Sport']==sport) & (df_merged['Medal']==Medal)]\n    return data_find\n# find(2000,\"Wrestling\") # list of all player with gold medal in wrestling in 2000","6cce8804":"df_Old_Medalest = df_merged[np.logical_and(df_merged[\"Age_group\"] == \"Old\",df_merged[\"Medal\"]== \"Gold\")]\ndf_Old_Medalest.head(3)","d107806e":"old_medalest_list = df_Old_Medalest.groupby(\"Sport\")[\"Team\"].count()\\\n.sort_values(ascending = False).to_frame().reset_index()\n\nprint(\"List with gold medalest older than 40 year: \\n\", old_medalest_list)","a82c5d38":"plt.figure(figsize=(13,13))\nplt.tight_layout()\nsns.countplot(df_Old_Medalest[\"Sport\"])\nplt.xticks(rotation= 90, fontsize= 12)\nplt.title(\"Gold Medal for Athletes over 40Y\", fontsize= 18)\nplt.show()","b9fd2c7e":"womenInOlympics = df_merged[(df_merged[\"Sex\"]==\"F\") & (df_merged[\"Medal\"] == \"Gold\")]\nwomenInOlympics.shape\nprint(\"Total of women with gold medal in Olympics is: \",womenInOlympics.shape[0])","221354f0":"df_merged.columns","d0513734":"women_ByCountry = womenInOlympics.groupby(\"region\")[\"ID\"].count().sort_values(ascending= False)\\\n.to_frame().reset_index()\nwomen_ByCountry.loc[0:20,]","2f60d77f":"plt.figure(figsize=(15,15))\nsns.barplot(women_ByCountry[\"region\"], women_ByCountry[\"ID\"])\nplt.xticks(rotation= 90, fontsize = 12)","339ffd0e":"df_year_grouped = df_merged.groupby([\"Year\", \"Sex\"])[\"ID\"].count().to_frame().reset_index()\nplt.figure(figsize=(10,10))\nsns.pointplot(data = df_year_grouped, x= \"Year\",y=\"ID\", hue=\"Sex\" )\nplt.xticks(rotation = 90)","1217179b":"# -Exploring the obese player list to know what kind of sport compitions can include obese player","fdbde6c2":"# distribution plot for percentage of age in our dataset\nthe most comon age group is between 18-27","2ea48ccd":"the most contires participating in olympics","eab1a39a":"# Start exploring our dataset and checking total numbers of male and female","2fe2828b":"# -Adding new column(Age Group) showing player age condition(Young-Old)","87ff4824":"# Data frame for all women with gold medal in Olympics","e2e7ab27":"# -Same as pervious step we will check what kind of sport can by done by thin people","2d7a3052":"# -Adding new column(BMI) showing each player body mass index ratio\n# -Adding another column(Body fit) showing each player body codition(Thin-Obese_Fit)","37bb7e78":"# Exploring the most contries participating with ladies in olympics games","7b0a44cc":"# -Distribution of Egyptian players over years","1d088665":"# -Merging to two data frame to able to handle our dataset through region(Country)","03d0be74":"# now we are going to explore the gold medalest player over 40 years\nAnd how is it posible to achieve a gold medal after 40s","aff59746":"# - Exploring all player from Egypt team","6374aca7":"# checking all columns names and adding them to a list ","ad7d307d":"# -Exploring total number of player over years for both males and females","fccff387":"# By logic all fit people can participate in all sports and they are the majority of our dataset"}}