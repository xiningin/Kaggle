{"cell_type":{"1337c8c6":"code","4c525656":"code","64cb9794":"markdown","42888fe6":"markdown","3b2f9750":"markdown"},"source":{"1337c8c6":"!pip install -U \"mxnet<2.0.0\"\n!pip install autogluon","4c525656":"# import libs\nimport numpy as np\nimport pandas as pd\nfrom autogluon.tabular import TabularDataset, TabularPredictor\n\n# dataset\ntrain_data = TabularDataset('..\/input\/california-house-prices\/train.csv')\ntest_data = TabularDataset('..\/input\/california-house-prices\/test.csv')\nid, label = 'Id', 'Sold Price'\nlarge_val_cols = ['Lot', 'Total interior livable area',\n                  'Tax assessed value', 'Annual tax amount',\n                  'Listed Price', 'Last Sold Price']\nfor c in large_val_cols + [label]:\n    train_data[c] = np.log(train_data[c] + 1)\nfor c in large_val_cols:\n    test_data[c] = np.log(test_data[c] + 1)\n\n# train\npredictor = TabularPredictor(label=label, \n                             eval_metric='root_mean_squared_error')\\\n            .fit(train_data.drop(columns=[id, 'Zip']),\n                 # hyperparameters='multimodal', # use multimodal when has GPU\n                 num_stack_levels=1,\n                 num_bag_folds=5)\n            \n# make prediction\npredictions = predictor.predict(test_data.drop(columns=[id, 'Zip']))\n\npred = pd.read_csv('..\/input\/california-house-prices\/sample_submission.csv')\npred[label] = np.exp(predictions) -1\npred.to_csv('submission.csv', index=False)","64cb9794":"\u6c90\u795e\u7684AutoML\u4ee3\u7801\u7a0d\u4f5c\u53d8\u52a8,\u4f7f\u7528CPU\u8bad\u7ec3\nprivate 0.12283\npublic 0.13521","42888fe6":"# Train Model","3b2f9750":"# Install AutoGluon"}}