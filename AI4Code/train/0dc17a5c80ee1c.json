{"cell_type":{"3d5244a8":"code","99d01e6f":"code","86036c18":"code","cda7dd8b":"code","39a92f96":"code","308c248c":"code","d1f51676":"code","8fa039f9":"code","7d7906e5":"code","1352c6f0":"code","3f28e767":"code","30c1c89f":"code","3c4bf474":"code","6723bf30":"markdown","6c32372e":"markdown","f324e075":"markdown"},"source":{"3d5244a8":"# \u8f7d\u5165\u5305\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom PIL import Image, ImageEnhance, ImageFilter\nimport scipy.ndimage\n","99d01e6f":"# \u57fa\u672c\u53c2\u6570\u5b9a\u4e49\nIMG_PATH = \"..\/input\/chinese-mnist\/data\/data\/\"  # \u56fe\u7247\u6587\u4ef6\u5939","86036c18":"# \u8f7d\u5165csv\u6587\u4ef6\ndata_df=pd.read_csv('..\/\/input\/\/chinese-mnist\/\/chinese_mnist.csv')\ndata_df.shape","cda7dd8b":"data_df.head()","39a92f96":"# \u67e5\u770b\u4e00\u4e0b\u56fe\u7247\nimage = Image.open(IMG_PATH+\"input_100_10_1.jpg\")\nimage.size","308c248c":"plt.imshow(image,cmap=\"gray\")","d1f51676":"data_df.dtypes","8fa039f9":"# \u5c06\u56fe\u7247\u5b8c\u6574\u8def\u5f84\u52a0\u5165csv\u6587\u4ef6\ndata_df['suite_id'] = data_df['suite_id'].astype(str)\ndata_df['sample_id'] = data_df['sample_id'].astype(str)\ndata_df['code'] = data_df['code'].astype(str)\ndata_df[\"path\"] = IMG_PATH+\"input_\"+data_df[\"suite_id\"]+\"_\"+data_df[\"sample_id\"]+\"_\"+data_df[\"code\"]+\".jpg\"\ndata_df[\"path\"].head()","7d7906e5":"# \u56fe\u7247\u5904\u7406\ndef img_map(image):\n    # \u5c06\u56fe\u7247\u8f6c\u4e3a\u7070\u5ea6\u56fe\u7247\n    image = image.convert('L')\n    # \u7f29\u653e\u56fe\u7247\u5927\u5c0f\u523028*28\n    #image = image.resize((28,28), Image.ANTIALIAS)\n    # \u6ee4\u955c\n    image = image.filter(ImageFilter.SMOOTH)\n    # \u589e\u5f3a\u5bf9\u6bd4\u5ea6\n    enh_col = ImageEnhance.Contrast(image)\n    factor = 5  # \u56e0\u5b50\n    image = enh_col.enhance(factor=factor)\n    \n    return image\n\n# \u5c06\u56fe\u7247\u8f6c\u4e3a\u6570\u7ec4\ndef to_array(image):\n    return np.array(image)","1352c6f0":"# \u8f7d\u5165\u6240\u6709\u56fe\u7247\nimages = list(map(Image.open,data_df[\"path\"]))\n\nimage_original = np.array(list(map(to_array,images)))  # \u539f\u59cb\u56fe\u7247\n\n# \u56fe\u7247\u5904\u7406\ntrain_images = map(img_map,images)\n\n# \u5b9e\u4f8b\u5316\u5e76\u8f6c\u4e3a\u6570\u7ec4\nx_train = np.array(list(map(to_array,train_images)))\n\n# \u53bb\u6389\u4e00\u4e9b\u5f31\u767d\u70b9\u533a\u57df\nx_train[x_train<120] = 0\n\nprint(x_train.shape,image_original.shape)","3f28e767":"# \u539f\u59cb\u56fe\u7247\ncnt = 0\nidx = list(range(1,len(data_df),1000))\nr,c = 3,5  # r*c\u4e2a\u56fe\u7247\nfigure = np.zeros((64 * r, 64 * c))  # \u9884\u5148\u5b9a\u4e49\u56fe\u7247\u77e9\u9635\nfor i in range(r):\n    for j in range(c):\n        figure[i * 64: (i + 1) * 64,\n               j * 64: (j + 1) * 64] = image_original[idx[cnt],:,:]\n        cnt = cnt+1\nplt.figure(figsize=(10,10))\nplt.axis(\"off\")\nplt.imshow(figure, cmap='Greys_r')\nplt.savefig(\"\/kaggle\/working\/cn-original.pdf\",bbox_inches='tight')\nplt.show()","30c1c89f":"# \u5904\u7406\u540e\u56fe\u7247\ncnt = 0\nidx = list(range(1,len(data_df),1000))\nr,c = 3,5  # r*c\u4e2a\u56fe\u7247\nfigure = np.zeros((64 * r, 64 * c))  # \u9884\u5148\u5b9a\u4e49\u56fe\u7247\u77e9\u9635\nfor i in range(r):\n    for j in range(c):\n        figure[i * 64: (i + 1) * 64,\n               j * 64: (j + 1) * 64] = x_train[idx[cnt],:,:]\n        cnt = cnt+1\nplt.figure(figsize=(10,10))\nplt.axis(\"off\")\nplt.imshow(figure, cmap='Greys_r')\nplt.savefig(\"\/kaggle\/working\/cn-handled.pdf\",bbox_inches='tight')\nplt.show()","3c4bf474":"# \u6253\u4e71\u6570\u636e\u96c6\n\ny_train = data_df[\"value\"]\ndata_idx = list(range(0,x_train.shape[0]))\nnp.random.shuffle(data_idx)\nnp.random.shuffle(data_idx)\nx_train = x_train[data_idx]\ny_train = y_train[data_idx]\nimage_original = image_original[data_idx]\n\n# \u4fdd\u5b58\u6570\u7ec4\nnp.savez(\"\/kaggle\/working\/chinese-mnist\",\n        x_train = x_train,\n        y_train = y_train,\n        image_original = image_original)","6723bf30":"## \u6570\u636e\u96c6\u9884\u5904\u7406\n\n\u5305\u62ec\uff1a\u6570\u636e\u8f7d\u5165\u4e0e\u589e\u5f3a\u3002","6c32372e":"\u56fe\u7247\u50a8\u5b58\u5728`data\/data`\u6587\u4ef6\u5939\u5185\uff0c\u7f16\u53f7\u89c4\u5219\u4e3a`input_{suite_id}_{sample_id}_{code}`\u3002\n\n\u4f8b\u5982`input_1_1_10.jpg`\uff1a","f324e075":"# \u524d\u8a00\n\n\u5bf9\u6570\u636e\u96c6`chinese mnist`\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u4ee5\u4fbf\u80fd\u66f4\u597d\u5730\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u3002"}}