{"cell_type":{"850ac03d":"code","6c2a6cda":"code","c9b50168":"code","e0de5ab1":"code","25ae4059":"code","0073ce7e":"code","66c333dd":"code","31a3e23e":"code","ba88153f":"code","dc0379d1":"code","30b9b7eb":"code","9ba6a139":"code","a3439903":"code","6d4fd7a2":"code","44deb33a":"code","b5017dd6":"code","91428f77":"code","4f26d3d7":"code","7f24fffe":"code","b7516c36":"code","70b5863a":"code","0e61a399":"code","ddeaa9ee":"code","2ada20e0":"code","5a1e32ec":"code","95fba094":"code","9b202aee":"code","2028fec0":"code","c0303aa0":"code","cf4a755e":"code","4a8ca15f":"code","fe7c106b":"code","e317797b":"code","76fbe60f":"markdown","c7ec3f55":"markdown"},"source":{"850ac03d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c2a6cda":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import plot_confusion_matrix, plot_precision_recall_curve, plot_roc_curve, classification_report","c9b50168":"train = pd.read_csv(\"\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv\")\ntest = pd.read_csv('\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Test Data.csv')","e0de5ab1":"train.head()","25ae4059":"train.describe(include='all')","0073ce7e":"train.columns","66c333dd":"test.head()","31a3e23e":"X= train.drop('Risk_Flag', axis=1)\ny= train.Risk_Flag\nx_train, x_test, y_train, y_test = train_test_split(X,y)\nx_train= pd.DataFrame(x_train, columns=X.columns)","ba88153f":"sns.countplot(x=y, )","dc0379d1":"(y.value_counts(normalize=True)*100).plot.bar(color=['blue','orange']);","30b9b7eb":"one_hot = [col for col in train.columns if train[col].nunique() < 10 and train[col].dtype =='object' ]","9ba6a139":"one_hot","a3439903":"ordinal = [col for col in train.columns if train[col].nunique() > 10 and train[col].dtype =='object']\nordinal","6d4fd7a2":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\n","44deb33a":"preprocessor = ColumnTransformer(\n    transformers=[\n                  ('one_hot', OneHotEncoder(), one_hot),\n                  ('ordinal', OrdinalEncoder(), ordinal)\n    ]\n)\n\nmodel = Pipeline(steps=[\n                        ('preprocessor', preprocessor),\n                        ('model', RandomForestClassifier(n_jobs=-1))\n])\n","b5017dd6":"model.fit(x_train,y_train)","91428f77":"model.score(x_test,y_test)","4f26d3d7":"preds = model.predict(x_test)","7f24fffe":"plot_confusion_matrix(model, x_test, y_test)","b7516c36":"plot_precision_recall_curve(model, x_test,y_test)","70b5863a":"plot_roc_curve(model, x_test, y_test)","0e61a399":"print(classification_report(y_test, y_pred=preds))","ddeaa9ee":"[X.columns],  [test.columns]","2ada20e0":"test.rename(columns={'ID':'Id'}, inplace=True)\ntest.head()","5a1e32ec":"set(X.columns)- set(test)","95fba094":"#test_pred = model.predict(test[0:1])\n#test_pred","9b202aee":"X[X['STATE'] == 'West_Bengal'].describe()","2028fec0":"train.groupby(\"Risk_Flag\")['STATE'].value_counts(sort=True)","c0303aa0":"test.loc[test['STATE']=='West Bengal',['STATE']] = 'West_Bengal'\n","cf4a755e":"test[test['STATE']=='West_Bengal']['STATE'].count()","4a8ca15f":"#model.predict(test)","fe7c106b":"set(test.STATE.unique()) - set(X.STATE.unique())","e317797b":"set(test.Profession.unique()) - set(X.Profession.unique())","76fbe60f":"# **Loan Prediction Based on Customer Behavior**\n**Predict who possible Defaulters are for the Consumer Loans Product** <br><br>\n**Context** <br>\nThis dataset belongs to a Hackathon organized by \"Univ.AI\"!! <br><br>\n\n**Content** <br>\nAll values were provided at the time of the loan application.<br>\nThe risk_flag indicates whether there has been a default in the past or not.<br><br>\n\n**Acknowledgements** <br>\nThanks \"Univ.AI\" for this dataset.<br><br>\n\n**Inspiration** <br>\nAn organization wants to predict who possible defaulters are for the consumer loans product. They have data about historic customer behavior based on what they have observed. Hence when they acquire new customers they want to predict who is riskier and who is not.\n","c7ec3f55":"It is heavily imbalanced dataset."}}