{"cell_type":{"20853306":"code","80d35df9":"code","591ca09f":"code","c49b6c84":"code","46e969a2":"code","4d496f8c":"code","a5b5177f":"code","c0551201":"code","91827a6a":"code","f67f3a12":"code","4dd2bb8f":"code","6f1d0365":"code","2a33fdbd":"code","dcc41f02":"code","0ec7c032":"markdown","9f56ebe3":"markdown","20f80eb6":"markdown","3569788d":"markdown"},"source":{"20853306":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80d35df9":"df = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndf.head()","591ca09f":"df.describe()","c49b6c84":"df.info()","46e969a2":"data = np.array(list(df[['latitude','longitude']].apply(tuple, axis=1)))","4d496f8c":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=10, random_state=0).fit(data)","a5b5177f":"kmeans.labels_","c0551201":"kmeans.cluster_centers_","91827a6a":"%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(6,6)) \nax = fig.add_subplot(1, 1, 1)\nax.scatter(data[:,0],data[:,1], c = kmeans.labels_)\nfig.canvas.draw()\n\nax.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],c='red')\n\nfig.canvas.draw()","f67f3a12":"data2 = np.array(list(df[['price']].apply(tuple, axis=1)))","4dd2bb8f":"from sklearn.cluster import KMeans\nkmeans2 = KMeans(n_clusters=5, random_state=0).fit(data2)","6f1d0365":"kmeans2.cluster_centers_","2a33fdbd":"kmeans2.labels_","dcc41f02":"%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(6,6)) \nax = fig.add_subplot(1, 1, 1)\ncolorlist = ['blue', 'yellow', 'red', 'black','green','orange']\ncolor = list(map(lambda x: colorlist[x], kmeans2.labels_ ))\nax.scatter(data[:,0],data[:,1], c = color)\nfig.canvas.draw()\n\n# ax.scatter(kmeans2.cluster_centers_[:,0],kmeans2.cluster_centers_[:,1],c='red')\n\nfig.canvas.draw()\n#Group by price","0ec7c032":"# Examples for using K-mean Cluster","9f56ebe3":"# K-mean n=5 Clustering for Price Ranges","20f80eb6":"# Read data","3569788d":"# K-mean n=10 Clustering for Locations"}}