{"cell_type":{"1d74eea5":"code","15dc34f9":"code","3095044e":"code","fac997b5":"code","92b4f2cb":"code","45823e0c":"code","689d04a2":"code","55ac7201":"code","fcf91963":"code","925b7676":"code","c515317a":"code","9afebe19":"code","a28df2d0":"code","46e75749":"code","2c73844a":"code","acedf7a9":"code","bb3cca88":"code","3b724c63":"markdown","32c922ae":"markdown","9802ed71":"markdown","cda43c48":"markdown","8991a434":"markdown","d70352d3":"markdown","47fe09a7":"markdown"},"source":{"1d74eea5":"#import all the necessary data from the datafiles\nimport numpy as np\nimport math\nimport shapely.geometry as shg\nimport matplotlib.pyplot as plt\nimport fiona\nimport geopandas","15dc34f9":"poly1 = [(1,1),(1,5),(5,5),(5,1),(1,1)]\npoly2 = [(2,1.3), (5, 1.2), (6,3),(6,4),(3, 5), (1.4, 3), (1.5, 2), (2, 1.3)]","3095044e":"shgpoly1 = shg.Polygon([(1,1), (1, 5), (5, 5), (5, 1), (1,1)])\nshgpoly2 = shg.Polygon([(2,1.3), (5, 1.2), (6,3),(6,4),(3, 5), (1.4, 3), (1.5, 2), (2, 1.3)])\nprint(shgpoly1)\nprint(shgpoly2)","fac997b5":"print(shgpoly1.area, shgpoly1.length)\nprint(shgpoly2.area, shgpoly2.length)","92b4f2cb":"#here is the function to calculate the area of the polygon with the given coordinates using shapely\nshgpoly1=shg.Polygon(poly1) # this is the code to show the polygon coordinates using poly function\nshgpoly2=shg.Polygon(poly2)\n\nprint(shgpoly1)\nprint(\"area of Poly 1 is {}\" .format(shgpoly1.area)) #the code used to find the area using shapely function\nprint(shgpoly2)\nprint(\"Area of poly 2 is {}\" .format(shgpoly2.area))","45823e0c":"#we then plot the polygon to see how the shape look like\n#you can also fill the diagram with (plt.fill)\n\nplt.plot(shgpoly1.exterior.xy[0],shgpoly1.exterior.xy[1]) # this is one of the function that can be used\nplt.plot(shgpoly2.exterior.xy[0],shgpoly2.exterior.xy[1])","689d04a2":"#this is the plot for polygon 1\nplt.plot(shgpoly1.exterior.xy[0],shgpoly1.exterior.xy[1])","55ac7201":"#this is the plot for polygon 2\nplt.plot(shgpoly2.exterior.xy[0],shgpoly2.exterior.xy[1])","fcf91963":"def centroid(pts):\n    sumx=sumy=0\n    for pt in pts:\n        x,y=pt\n        sumx= sumx+x\n        sumy= sumy+y\n    mx = sumx \/ (len(pts)-1)\n    my = sumy \/ (len(pts)-1)\n    return mx,my","925b7676":"def spatialmean(coords):\n    adj=1\n    if coords[0] != coords[-1]:\n        adj==0\n    \n    x, y = zip(*coords)\n    mx = 0\n    my = 0\n    for i in range(len(coords)-adj):\n        mx = mx + x[i]\n        my = my + y[i]\n    mx = mx \/ (len(coords)-adj)\n    my = my \/ (len(coords)-adj)   \n    return mx, my","c515317a":"cx,cy = centroid(poly1)\nprint(cx,cy)","9afebe19":"for i in range(len(poly1)-1):\n    print (poly1[i], poly1[i+1])","a28df2d0":"x,y=spatialmean(poly1)\nprint(x,y)","46e75749":"def areapoly(poly):\n    xr, yr = centroid(poly)\n    total=0\n    \n    for i in range(len(poly)-1):\n        xi, yi = poly[i]\n        xj, yj = poly[i+1]\n        \n        x1= xj - xr\n        y2= yi - yr\n        x2= xi - xr\n        y1= yj - yr\n        \n        x = x1 * y2\n        y = x2 * y1\n        ans = x - y\n        \n        total = (total + ans)\n    total = 0.5 * abs(total)\n    return total\n    \npoly1 = [(1,1),(1,5),(5,5),(5,1),(1,1)]\npoly2 = [(2,1.3), (5, 1.2), (6,3),(6,4),(3, 5), (1.4, 3), (1.5, 2), (2, 1.3)]\nprint (areapoly(poly1))\nprint (areapoly(poly2))\n    ","2c73844a":"# Loading shapefile data into a list\nshapefile_polygons = []                  #a list to store the polygons we load\n\n\nc = fiona.open('..\/input\/ceg1713-data-files\/buildings.shp') #Open the shapefile\n\nfor each_poly in c:\n    geom = shg.shape(each_poly['geometry'])\n    poly_data = each_poly[\"geometry\"][\"coordinates\"][0]  #EXTERIOR RING ONLY\n    poly = shg.Polygon(poly_data)\n    print(poly)\n    #Converts into the same format as the other data\n    shapefile_polygons.append(list(poly.exterior.coords))\n\ndisplay(shapefile_polygons)","acedf7a9":"# Loading shapefile data into a list\nshapefile_polygons = []                  #a list to store the polygons we load\n\n\nc = fiona.open('..\/input\/ceg1713-data-files\/polygons.shp') #Open the shapefile\n\nfor each_poly in c:\n    geom = shg.shape(each_poly['geometry'])\n    poly_data = each_poly[\"geometry\"][\"coordinates\"][0]  #EXTERIOR RING ONLY\n    poly = shg.Polygon(poly_data)\n    print(poly)\n    #Converts into the same format as the other data\n    shapefile_polygons.append(list(poly.exterior.coords))\n\ndisplay(shapefile_polygons)","bb3cca88":"plt.gca().set_aspect('equal', adjustable='box')  #To make the x and y axis the same scale\n\nfor poly in shapefile_polygons:\n    xy = list(zip(*poly))\n    plt.fill(xy[0], xy[1], alpha=0.5)","3b724c63":"# Calculating the area of the polygon","32c922ae":"# Input the polygon coordinates","9802ed71":"# Calculating the spatial mean of the polygon\n\n* to calculate the mean and the centroid we must use the spatial mean function","cda43c48":"# Now to check if the function above that calculate spatal mean and centroid works","8991a434":"# Now to compare the area function to shapely function","d70352d3":"# We then plot the polygon","47fe09a7":"# using the shapelyfiles from the datafiles \"CEG1713\" to compare with the function results"}}