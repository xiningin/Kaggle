{"cell_type":{"b6714ca4":"code","6820b5c3":"code","38a6f751":"code","6954cdc5":"code","82910735":"code","852b8cc2":"code","470e230a":"code","1c4ff204":"code","91ead697":"code","7abae86b":"code","903bbb62":"code","e26ecb2a":"code","c870c745":"code","bad76199":"code","c6e83a95":"code","5eadfe4d":"code","60f485ab":"code","8f32ff6e":"code","8266f0c0":"code","43451770":"code","f081f22e":"code","618686d1":"markdown","4bd8d371":"markdown"},"source":{"b6714ca4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sn\n# Input data files are available in the read-only \"..\/input\/\" director\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6820b5c3":"train = pd.read_csv(\"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/test.csv\")","38a6f751":"train.head()","6954cdc5":"train.shape,test.shape","82910735":"train[\"Patient\"].unique().shape","852b8cc2":"print(\"Mean of age: \",train[\"Age\"].mean())\n\nplt.figure(figsize=(10,6))\nsn.distplot(train[\"Age\"])","470e230a":"print(\"Number of Male: \", train[train[\"Sex\"]==\"Male\"].shape[0])\nprint(\"Number of female: \",train[train[\"Sex\"]==\"Female\"].shape[0])\nplt.figure(figsize=(10,6))\nsn.countplot(train[\"Sex\"])","1c4ff204":"train.head()","91ead697":"train[\"SmokingStatus\"].unique()","7abae86b":"print(\"Number of Ex-smoker: \",train[train[\"SmokingStatus\"]==\"Ex-smoker\"].shape[0])\nprint(\"Number of Never a smoker: \",train[train[\"SmokingStatus\"]==\"Never smoked\"].shape[0])\nprint(\"Number of Currently smokes: \",train[train['SmokingStatus']==\"Currently smokes\"].shape[0])\n\nplt.figure(figsize=(10,6))\nsn.countplot(train[\"SmokingStatus\"])","903bbb62":"plt.figure(figsize=(10,6))\nsn.boxplot(x=\"SmokingStatus\",y=\"FVC\",data=train)","e26ecb2a":"train.head()","c870c745":"train[\"normal_person\"] = train[\"FVC\"]+(train[\"FVC\"]*train[\"Percent\"]\/100)","bad76199":"train.head()","c6e83a95":"patients = train[\"Patient\"][:3]\n\nplt.figure(figsize=(16,4))\n\nfor k,patient in enumerate(patients):\n    \n    plt.suptitle(f\"FVC vs Week\", fontsize = 16)\n    ax = plt.subplot(1, 3, k+1)\n    ax.set_title(f\"FVC vs Week for {patient}\")\n    sn.lineplot(x=\"Weeks\",y=\"FVC\",data=train[train[\"Patient\"]==patient],ax=ax)","5eadfe4d":"plt.figure(figsize=(10,6))\nsn.lineplot(x=\"Weeks\",y=\"FVC\",data=train[train[\"Patient\"]==patients[0]])","60f485ab":"g = sn.pairplot(train[['FVC', 'Weeks', 'Percent', 'Age', 'SmokingStatus']], hue='SmokingStatus', aspect=1.4, height=5, diag_kind='kde', kind='reg')","8f32ff6e":"import pydicom","8266f0c0":"import os\n\npath= \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\/\"\nexa_img = list(os.listdir(path))[:5]\n\nfor k,img in enumerate(exa_img):\n    plt.figure(figsize=(25,20))\n    plt.subplot(1,5,k+1)\n    img = pydicom.read_file(path+img)\n    img = img.pixel_array\n    plt.imshow(img)","43451770":"path= \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\/\"\nexa_img = list(os.listdir(path))[:5]\n\nfor k,img in enumerate(exa_img):\n    plt.figure(figsize=(25,15))\n    plt.subplot(1,5,k+1)\n    img = pydicom.read_file(path+img)\n\n    img = img.pixel_array\n    plt.imshow(img,cmap=\"gray\")","f081f22e":"path= \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\/\"\nexa_img = list(os.listdir(path))[:5]\n\nfor k,img in enumerate(exa_img):\n    plt.figure(figsize=(25,15))\n    plt.subplot(1,5,k+1)\n    img = pydicom.read_file(path+img)\n\n    img = img.pixel_array\n    plt.imshow(img,cmap=plt.cm.bone)","618686d1":"**only FVC and Percent have some obvious linear relationship between all.**","4bd8d371":"# Checking for some Correlations.."}}