{"cell_type":{"88939d05":"code","1ed28619":"code","e01dbf1c":"code","dad85f6b":"code","da191c15":"code","062e78ef":"code","e7db38a1":"code","957e32a7":"code","86953f67":"code","3098808c":"code","97241b23":"code","b52065d5":"code","18eaf11a":"code","df5537c8":"code","fd8fc475":"code","6f1540d6":"code","c4e087eb":"code","9bbbf98f":"code","d3b69810":"code","7e2f14e9":"code","2d56b01c":"code","dcc99254":"markdown"},"source":{"88939d05":"!pip install -U efficientnet","1ed28619":"from keras import applications\nfrom keras import callbacks\nfrom keras.models import Sequential","e01dbf1c":"import efficientnet.keras as efn \n\nmodel = efn.EfficientNetB7(weights='imagenet')","dad85f6b":"import cv2\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport json\nimport os\nfrom tqdm import tqdm, tqdm_notebook\nfrom keras.models import Model\nfrom keras.layers import Dropout, Flatten, Dense\nfrom keras import optimizers","da191c15":"train_dir = \"..\/input\/emergency-vehicles-identification\/Emergency_Vehicles\/train\"\ntest_dir = \"..\/input\/emergency-vehicles-identification\/Emergency_Vehicles\/test\"\ntrain_df = pd.read_csv('..\/input\/emergency-vehicles-identification\/Emergency_Vehicles\/train.csv')\ntrain_df.head()","062e78ef":"im = cv2.imread(\"..\/input\/emergency-vehicles-identification\/Emergency_Vehicles\/train\/1002.jpg\")\nplt.imshow(im)","e7db38a1":"eff_net = efn.EfficientNetB7(weights='imagenet', include_top=False, input_shape=(32, 32, 3))","957e32a7":"from keras.preprocessing.image import ImageDataGenerator","86953f67":"datagen=ImageDataGenerator(rescale=1.\/255)\nbatch_size=150","3098808c":"train_df.emergency_or_not=train_df.emergency_or_not.astype(str)","97241b23":"train_generator=datagen.flow_from_dataframe(dataframe=train_df[:1150],directory=train_dir,x_col='image_names',\n                                            y_col='emergency_or_not',class_mode='binary',batch_size=batch_size,\n                                            target_size=(32,32))\n\n\nvalidation_generator=datagen.flow_from_dataframe(dataframe=train_df[1151:],directory=train_dir,x_col='image_names',\n                                                y_col='emergency_or_not',class_mode='binary',batch_size=50,\n                                                target_size=(32,32))","b52065d5":"from keras.layers import Dense\nfrom keras.optimizers import Adam\n\nefficient_net = efn.EfficientNetB7(\n    weights='imagenet',\n    input_shape=(32,32,3),\n    include_top=False,\n    pooling='max'\n)\n\nmodel = Sequential()\nmodel.add(efficient_net)\nmodel.add(Dense(units = 120, activation='relu'))\nmodel.add(Dense(units = 120, activation = 'relu'))\nmodel.add(Dense(units = 1, activation='sigmoid'))\nmodel.summary()","18eaf11a":"model.compile(optimizer=Adam(lr=0.0001), loss='binary_crossentropy', metrics=['accuracy'])","df5537c8":"%%time\n# Train model\nhistory = model.fit_generator(\n    train_generator,\n    epochs = 50,\n    steps_per_epoch = 15,\n    validation_data = validation_generator,\n    validation_steps = 7\n)","fd8fc475":"acc = history.history['acc']\nval_acc = history.history['val_acc']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\n\nepochs = range(1,len(acc) + 1)\n\nplt.plot(epochs,acc,'bo',label = 'Training Accuracy')\nplt.plot(epochs,val_acc,'b',label = 'Validation Accuracy')\nplt.title('Training and Validation Accuracy')\nplt.legend()\nplt.figure()\n\nplt.plot(epochs,loss,'bo',label = 'Training loss')\nplt.plot(epochs,val_loss,'b',label = 'Validation Loss')\nplt.title('Training and Validation Loss')\nplt.legend()\n\nplt.show()","6f1540d6":"test_df = pd.read_csv('..\/input\/emergency-vehicles-identification\/Emergency_Vehicles\/test.csv')\n\ntest_datagen = ImageDataGenerator(\n    rescale=1\/255\n)\n\ntest_generator = test_datagen.flow_from_dataframe(\n    dataframe = test_df,\n    directory = test_dir,\n    x_col=\"image_names\",\n    target_size=(32,32),\n    batch_size=1,\n    shuffle=False,\n    class_mode=None\n)","c4e087eb":"preds = model.predict_generator(\n    test_generator,\n    steps=len(test_generator.filenames)\n)","9bbbf98f":"preds","d3b69810":"image_ids = [name.split('\/')[-1] for name in test_generator.filenames]\npredictions = preds.flatten()\ndata = {'image_names': image_ids, 'emergency_or_not':predictions} \nsubmission = pd.DataFrame(data)\nprint(submission.head())","7e2f14e9":"submission['emergency_or_not'] = submission['emergency_or_not'].apply(lambda x: 1 if x > 0.75 else 0)","2d56b01c":"submission.to_csv('submission_effnet.csv',index=False)","dcc99254":"**Simple example of transfer learning from pretrained model using Keras and Efficientnet (https:\/\/pypi.org\/project\/efficientnet\/).**"}}