{"cell_type":{"442cbcb3":"code","e6ad185c":"code","fdc0c14d":"code","6bf0b299":"code","53c7cb5f":"markdown","efac4bf8":"markdown","f6e3b638":"markdown","978a8c67":"markdown","e7fbe5ba":"markdown","53782fe0":"markdown","dab44976":"markdown","f2109cf0":"markdown","73bd52ae":"markdown","18a2585c":"markdown","2fb25c0b":"markdown","4da8cec8":"markdown","1e10a85f":"markdown","a04a91e0":"markdown","1501edbb":"markdown"},"source":{"442cbcb3":"def tell():\n    pass\n","e6ad185c":"def ask():\n    pass","fdc0c14d":"# Test 1\n# Knowledge base array\nkb = []\n\n## Rule 1\nr1 = lambda x: x[0] or x[1] and (x[0] and x[1])\n\n## Tell KB Rule 1\ntell(kb, r1)\n\n## Tell Rule 2\nr2 = lambda x: (x[0] or x[1]) and x[2]\ntell(kb, r2)\n\n## Query\nq = lambda x: x[0] and x[1] and (x[0] or x[1])\n\n## Ask KB Query\nask(kb, q)","6bf0b299":"# Test 2","53c7cb5f":"```\n# Query\n# Dry\n\n# Query as a function to ask Knowledge base\n\nq = lambda x: not x[2]\n```","efac4bf8":"## The bot learns that\n- If it is raining and you dont have an umberella then you are wet\n![](https:\/\/cdn4.iconfinder.com\/data\/icons\/warning-signs-4\/64\/warning_sign_alert_danger_rain_weather-512.png)","f6e3b638":"## Your bot gets stopped with a query\n- You are dry\n![](https:\/\/comps.canstockphoto.com\/keep-dry-no-water-sign-illustration_csp73478527.jpg)","978a8c67":"```\n# Rule to tell\n# (not sunny ^ not_carrying_umberella) => wet\n\n\n# We will write this rule as a function to tell the knowledge base\n\nr1 = lambda x: not (not x[0] and not x[1]) or x[2] # Convert implies to CNF\n```","e7fbe5ba":"BMS College of Engineering - Dr Kavitha Sooda <br \/>\nBMS College of Engineering - Prof Sowmya V <br \/>\nBMS College of Engineering - Prof G R Asha  <br \/>\n##### Class 5C","53782fe0":"## Bot gets stopped for another question\n- Your have an umbrella therefore you wont get wet\n\n```\n# have_umbrella => not wet\n\nq = lambda x: not x[1] or x[2]\n```","dab44976":"# Your task is\n- Create Knowledge base which is an array of rules(functions)\n- Ask queries to see if KB entails query for all possible combinations of variables","f2109cf0":"![](https:\/\/ph.toluna.com\/\/dpolls_images\/2018\/08\/11\/4af73596-4bae-4bd9-b0e1-49ffc4b7712d.jpg)","73bd52ae":"![](https:\/\/edukite.org\/wp-content\/uploads\/2018\/05\/97-Knowledge-Based-AI-Cognitive-Systems.jpg)","18a2585c":"# Example\nHere is a situation with 3 variables. Imagine you are a bot put in an environment with these variables\n### 3 variables\n- Sunny: True, Rainy: False\n- Have Umbrella: True, Dont have Umbrella: False\n- Wet: True, Not Wet: False\n","2fb25c0b":"## Bot is told\n- You have and umbrella\n\n```\nr2 = lambda x: x[1]\n```\n","4da8cec8":"## Objective\n- Build a knowledge base \n- Pass a statement\/query and check if the knowledge base entails with the statement \n\n","1e10a85f":"# Entailment Program\n### Using Knowledge Base","a04a91e0":"## Acquire first piece of knowledge\nAs there are 3 variables, all combinations of true and false can be put into a combinations array. x[0] represents sunny, x[1] represents umbrella and so on...\n```\ncombinations=[(True,True, True),(True,True,False),\n              (True,False,True),(True,False, False),\n              (False,True, True),(False,True, False),\n              (False,False,True),(False,False,False)]\n\n\n```\n","1501edbb":"# Create your own senarios and test them"}}