{"cell_type":{"282820f2":"code","2a26eff3":"code","27969d44":"code","47e75f89":"code","e50b7f8f":"code","a0ac4b4b":"code","5b4de1f2":"code","22aeabd7":"code","0f92c69d":"code","43c27781":"code","4843b157":"code","289a9f2b":"code","59250541":"code","36b0ef82":"code","7623a50d":"code","f0d60a0d":"code","bcf4cfa6":"code","afd2f0dd":"code","3c907ce1":"code","00c8795a":"code","8108c69d":"code","ab8f9081":"code","398f0c6c":"code","079db3bb":"code","fc88eba0":"code","372ea325":"code","fe8acab2":"code","962cfd5c":"code","064c1549":"code","7f12dbab":"code","ed6b5daa":"code","514b351f":"code","f0a8e740":"code","6fed0673":"code","c7274b2a":"code","0c96338f":"code","1d4ef6b5":"code","95bb3944":"code","04ac5137":"code","4c809660":"code","f103330b":"code","42f45f65":"code","9d4e6245":"code","02303197":"code","5c034e1f":"code","89337a78":"code","09071883":"code","00c3007f":"code","d74cd6f9":"code","dc6a8706":"code","3881a5a0":"code","4adb8c04":"code","4215b395":"code","81ceed79":"code","5160b956":"code","c44f7dd5":"code","3d1a054d":"code","3cc22f11":"code","227f96c9":"code","155f556d":"code","6b0f23ca":"code","7c174589":"code","20e4370f":"code","b1a5efc5":"code","78aafb24":"code","26182918":"code","ef8d80c6":"code","14e829a2":"code","39d64fe6":"code","bc11c492":"code","53f79e2b":"code","42c58471":"code","277986d3":"code","125bb6b4":"code","765f92f8":"code","b78f2d59":"code","a6cc4b3c":"code","66d26061":"code","548ba77f":"code","85b12bad":"code","822de24d":"code","bb2a07c1":"code","2f6c6c52":"code","a8906f98":"code","adbddad8":"markdown","e145d415":"markdown","430f1d6f":"markdown","eb9c368f":"markdown","8c5633c9":"markdown","cf93e336":"markdown","a9ec11c8":"markdown","a1f26f64":"markdown","de38a6ff":"markdown","f9f59945":"markdown","31cf0725":"markdown","9483b733":"markdown","3dfbc341":"markdown","9ac8cda2":"markdown","06ec0772":"markdown","ca98b91e":"markdown","8892ec3c":"markdown","697e358c":"markdown","8fa1aadc":"markdown","9e6bff26":"markdown","873c0b5e":"markdown","5bce5d9b":"markdown","c88f838d":"markdown","43664b27":"markdown","0e424f0e":"markdown","7f7c3ba8":"markdown","424e28ac":"markdown","f171489c":"markdown","2a3cbb6f":"markdown","4f4d2fd9":"markdown","7ec08658":"markdown","5c67bf2c":"markdown","92a1e531":"markdown","d89cc92d":"markdown","6c49b217":"markdown","13858981":"markdown","e7d67f90":"markdown","ab22cf13":"markdown","d33fef7c":"markdown"},"source":{"282820f2":"# Suppressing Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Import library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_selection import RFE\n\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","2a26eff3":"# Read train and test data\nleads_data_train = pd.read_csv( '..\/input\/jobathon-may-2021-credit-card-lead-prediction\/train.csv') # train dataset\nleads_data_test = pd.read_csv('..\/input\/jobathon-may-2021-credit-card-lead-prediction\/test.csv') # test dataset","27969d44":"leads_data_train.head()","47e75f89":"print(\"Leads dataset train has {0} columns and {1} rows\".format(leads_data_train.shape[0],leads_data_train.shape[1]));\nprint(\"Leads dataset test has {0} columns and {1} rows\".format(leads_data_test.shape[0],leads_data_test.shape[1]))","e50b7f8f":"#categorical features\ncategorical = leads_data_train.select_dtypes(include =[np.object])\nprint(\"Categorical Features in Train Set:\",categorical.shape[1])\n\n#numerical features\nnumerical= leads_data_train.select_dtypes(include =[np.float64,np.int64])\nprint(\"Numerical Features in Train Set:\",numerical.shape[1])","a0ac4b4b":"categorical_var = ['Gender', 'Region_Code', 'Occupation', 'Channel_Code', 'Credit_Product', 'Is_Active', 'Is_Lead']\nnumerical_var = ['Age', 'Vintage', 'Avg_Account_Balance']\nprint(categorical_var)\nprint(numerical_var)","5b4de1f2":"leads_data_train.info()","22aeabd7":"# Percentage of null values in train dataset\nleads_data_train.isnull().sum()\/len(leads_data_train)*100","0f92c69d":"# Percentage of null values in Test dataset\nleads_data_test.isnull().sum()\/len(leads_data_test)*100","43c27781":"leads_data_train['Credit_Product'].replace(np.nan, 'Unknown', inplace=True)\nleads_data_test['Credit_Product'].replace(np.nan, 'Unknown', inplace=True)","4843b157":"# Re-checking for null values\nleads_data_train.isnull().sum()\/len(leads_data_train)*100","289a9f2b":"# Rechecking for null values\nleads_data_test.isnull().sum()\/len(leads_data_test)*100","59250541":"plt.figure(figsize=(15, 10))\nsns.set_style(\"whitegrid\")\nfor k,v in enumerate(numerical_var):\n    plt.subplot(2,2,k+1)\n    plt.ylabel(\"Count\")\n    sns.distplot(leads_data_train[v])\nplt.show()","36b0ef82":"# Boxplot \nplt.figure(figsize=(15,10))\n\nfor i,col in enumerate(numerical_var):\n    plt.subplot(2,2,i+1);\n    sns.boxplot(leads_data_train[col])\n    plt.xlabel(col,fontdict={'fontsize':12})\n    plt.ylabel(\"Count\",fontdict={'fontsize':12})","7623a50d":"plt.figure(figsize=(15, 15))\nvariables = ['Gender', 'Occupation', 'Channel_Code', 'Credit_Product', 'Is_Active', 'Is_Lead']\nfor k,v in enumerate(variables):\n    plt.subplot(3,2,k+1)\n    sns.countplot(v,data=leads_data_train)\n    plt.xlabel(v)\n    plt.xticks(rotation = 0)\nplt.show()","f0d60a0d":"plt.figure(figsize=(20, 5))\n\nsns.countplot('Region_Code',data=leads_data_train)\nplt.xticks(rotation = 45)\nplt.show()","bcf4cfa6":"leads_data_train['Is_Lead'].value_counts(normalize=True)*100","afd2f0dd":"# Pair plot for Numeric Variables\n\nsns.pairplot(leads_data_train[numerical_var])\nplt.show()","3c907ce1":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.boxplot(y = 'Age', x = 'Is_Lead', data = leads_data_train)\n\nplt.subplot(2,2,2)\nsns.boxplot(y = 'Vintage', x = 'Is_Lead', data = leads_data_train)\n\nplt.subplot(2,2,3)\nsns.boxplot(y = 'Avg_Account_Balance', x = 'Is_Lead', data = leads_data_train)\nplt.show()","00c8795a":"# Gender vs Is_Lead\nplt.figure(figsize=(10,6))\nsns.countplot(x= 'Gender', hue='Is_Lead', data=leads_data_train)\nplt.show()","8108c69d":"leads_data_train[leads_data_train['Gender']=='Male']['Is_Lead'].value_counts(normalize= True)*100","ab8f9081":"leads_data_train[leads_data_train['Gender']=='Female']['Is_Lead'].value_counts(normalize= True)*100","398f0c6c":"# Occupation vs Is_Lead\nplt.figure(figsize=(10,6))\nsns.countplot(x= 'Occupation', hue='Is_Lead', data=leads_data_train)\nplt.show()","079db3bb":"leads_data_train[leads_data_train['Occupation']=='Entrepreneur']['Is_Lead'].value_counts(normalize= True)*100","fc88eba0":"leads_data_train[leads_data_train['Occupation']=='Salaried']['Is_Lead'].value_counts(normalize= True)*100","372ea325":"# Credit_Product vs Is_Lead\nplt.figure(figsize=(10,6))\nsns.countplot(x= 'Credit_Product', hue='Is_Lead', data=leads_data_train)\nplt.show()","fe8acab2":"leads_data_train[leads_data_train['Credit_Product']=='No']['Is_Lead'].value_counts(normalize= True)*100","962cfd5c":"leads_data_train[leads_data_train['Credit_Product']=='Yes']['Is_Lead'].value_counts(normalize= True)*100","064c1549":"leads_data_train[leads_data_train['Credit_Product']=='Unknown']['Is_Lead'].value_counts(normalize= True)*100","7f12dbab":"# Is_Active vs Is_Lead\nplt.figure(figsize=(10,6))\nsns.countplot(x= 'Is_Active', hue='Is_Lead', data=leads_data_train)\nplt.show()","ed6b5daa":"leads_data_train[leads_data_train['Is_Active']=='No']['Is_Lead'].value_counts(normalize= True)*100","514b351f":"leads_data_train[leads_data_train['Is_Active']=='Yes']['Is_Lead'].value_counts(normalize= True)*100","f0a8e740":"# Channel_Code vs Is_Lead\nplt.figure(figsize=(10,6))\nsns.countplot(x= 'Channel_Code', hue='Is_Lead', data=leads_data_train)\nplt.show()","6fed0673":"leads_data_train[leads_data_train['Channel_Code']=='X1']['Is_Lead'].value_counts(normalize= True)*100","c7274b2a":"leads_data_train[leads_data_train['Channel_Code']=='X2']['Is_Lead'].value_counts(normalize= True)*100","0c96338f":"leads_data_train[leads_data_train['Channel_Code']=='X3']['Is_Lead'].value_counts(normalize= True)*100","1d4ef6b5":"leads_data_train[leads_data_train['Channel_Code']=='X4']['Is_Lead'].value_counts(normalize= True)*100","95bb3944":"plt.figure(figsize=(12,8))\nsns.heatmap(leads_data_train.corr(),annot = True,linewidths=.5, cmap=\"YlGnBu\")\nplt.show()","04ac5137":"leads_data_train.head()","4c809660":"binaryList = ['Is_Active']\n\n# Defining the map function\ndef binaryMapping(x):\n    return x.map({'Yes': 1, \"No\": 0})\n\n# Train data\nleads_data_train[binaryList] = leads_data_train[binaryList].apply(binaryMapping)\n\n# Test data\nleads_data_test[binaryList] = leads_data_test[binaryList].apply(binaryMapping)","f103330b":"leads_data_train.head()","42f45f65":"leads_data_test.head()","9d4e6245":"variables = ['Gender','Region_Code', 'Occupation', 'Channel_Code','Credit_Product']\n# Creating a dummy variable for some of the categorical variables and dropping the first one.\ndummyList_train = pd.get_dummies(leads_data_train[variables], drop_first=True)\ndummyList_test = pd.get_dummies(leads_data_test[variables], drop_first=True)","02303197":"# Adding the results to leads_data\nleads_data_train = pd.concat([leads_data_train, dummyList_train], axis=1)\nleads_data_test = pd.concat([leads_data_test, dummyList_test], axis=1)","5c034e1f":"# Dropping repeated variable\nleads_data_train.drop(variables,axis=1,inplace=True)\nleads_data_test.drop(variables,axis=1,inplace=True)","89337a78":"leads_data_train.shape","09071883":"leads_data_test.shape","00c3007f":"leads_data_train.columns","d74cd6f9":"leads_data_train = leads_data_train.set_index('ID')","dc6a8706":"leads_data_test = leads_data_test.set_index('ID')","3881a5a0":"# Creating independant Variable\nX = leads_data_train.drop(['Is_Lead'], axis=1)\nX.head()","4adb8c04":"# Creating dependant Variable\ny = leads_data_train['Is_Lead']\ny.head()","4215b395":"# Splitting the data into train and validation set\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2, random_state=100)","81ceed79":"# Scaling Data\nscaler = MinMaxScaler()","5160b956":"numerical_var ","c44f7dd5":"# there are 3 variables ('Age', 'Vintage', 'Avg_Account_Balance') which are continuous so we will scale them\nX_train[numerical_var] = scaler.fit_transform(X_train[numerical_var])","3d1a054d":"X_train.head()","3cc22f11":"# Transform Validation Data Set\nX_valid[numerical_var] = scaler.transform(X_valid[numerical_var])","227f96c9":"# Transform Test Data Set\nleads_data_test[numerical_var] = scaler.transform(leads_data_test[numerical_var])","155f556d":"import statsmodels.api as sm","6b0f23ca":"log_model1 = sm.GLM(y_train,(sm.add_constant(X_train)), family = sm.families.Binomial())\nlog_model1.fit().summary()","7c174589":"logreg = LogisticRegression()\nrfe = RFE(logreg, 15) # running RFE with 15 variables as output\nrfe = rfe.fit(X_train, y_train)","20e4370f":"# columns selected by RFE\ncol = X_train.columns[rfe.support_]\ncol","b1a5efc5":"# model 2 building\nlog_model2 = sm.GLM(y_train,sm.add_constant(X_train[col]), family = sm.families.Binomial())\nres = log_model2.fit()\nres.summary()","78aafb24":"col = col.drop('Region_Code_RG266', 1)\ncol","26182918":"# model 3 building\nlog_model3 = sm.GLM(y_train,sm.add_constant(X_train[col]), family = sm.families.Binomial())\nres = log_model3.fit()\nres.summary()","ef8d80c6":"# Getting the predicted values on the train set\ny_train_pred = res.predict(sm.add_constant(X_train[col]))\ny_train_pred.head()","14e829a2":"y_train_pred_final = pd.DataFrame({'Is_Lead':y_train.values, 'Is_Lead_Prob':y_train_pred.values.reshape(-1)})\ny_train_pred_final['ID'] = y_train.index\ny_train_pred_final.head()","39d64fe6":"sklearn.metrics.roc_auc_score(y_train_pred_final.Is_Lead, y_train_pred_final.Is_Lead_Prob)","bc11c492":"fpr, tpr, _ = metrics.roc_curve(y_train_pred_final.Is_Lead, y_train_pred_final.Is_Lead_Prob)\nauc = metrics.roc_auc_score(y_train_pred_final.Is_Lead, y_train_pred_final.Is_Lead_Prob)\nplt.figure(figsize=(10,7))\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr,tpr,label=\"Logistic Regression, auc=\"+str(round(auc,2)))\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC', size=15)\nplt.show()","53f79e2b":"X_valid = X_valid[col]\nX_valid.head()","42c58471":"X_valid_sm = sm.add_constant(X_valid)","277986d3":"y_valid_pred = res.predict(X_valid_sm)\ny_valid_pred.head(10)","125bb6b4":"# Converting y_pred to a dataframe which is an array\ny_pred_1 = pd.DataFrame(y_valid_pred)\ny_pred_1.columns = ['Is_Lead_Prob']\ny_pred_1.head()","765f92f8":"# Converting y_test to dataframe\ny_test_df = pd.DataFrame(y_valid)\ny_test_df.reset_index()","b78f2d59":"# Appending y_test_df and y_pred_1\ny_pred_final = pd.concat([y_test_df, y_pred_1],axis=1)\ny_pred_final.head()","a6cc4b3c":"sklearn.metrics.roc_auc_score(y_pred_final.Is_Lead, y_pred_final.Is_Lead_Prob)","66d26061":"fpr, tpr, _ = metrics.roc_curve(y_pred_final.Is_Lead, y_pred_final.Is_Lead_Prob)\nauc = metrics.roc_auc_score(y_pred_final.Is_Lead, y_pred_final.Is_Lead_Prob)\nplt.figure(figsize=(10,7))\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr,tpr,label=\"Logistic Regression, auc=\"+str(round(auc,2)))\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC', size=15)\nplt.show()","548ba77f":"X_test = leads_data_test[col]\nX_test.head()","85b12bad":"X_test_sm = sm.add_constant(X_test)\nfinal_predictions = res.predict(X_test_sm)\nfinal_predictions.head()","822de24d":"submission_df = pd.DataFrame(final_predictions)","bb2a07c1":"submission_df.columns = ['Is_Lead']","2f6c6c52":"submission_df.reset_index()","a8906f98":"submission_df.to_csv('my_sample_submission.csv',index = True) # export to a csv file","adbddad8":"### `INFERENCE: `\nWe can observe that some of the variables have high p-values(they are insignificant). So we will have to get rid of them. In order to do so will will use RFE to eliminate features.","e145d415":"# <font color=\"green\">3. Exploratory data analysis<\/font>","430f1d6f":"### Final INFERENCES from EDA:\n1. Conversion rate of male (26%) is higher than female (20%).\n2. We can observe that conversion rate among `Entrepreneurs` is high (66%). Company should focus on getting more Entrepreneurs Leads.\n3. Conversion rate among `Salaried` customers is low (15%).Company should focus on improving leads with `Salaried` customers.\n4. Conversion rate among customers `with Credit_Product` is more (31%) as compared to customers `without Credit_Product` (20%).\n5. Conversion rate among customers who were active in last 3 Months is more (28%) as compared to customers who were not active (20%).\n6. We can observe that conversion rate in `Channel_Code X1` is very low (9%) and good in `Channel_Code X3` (36%). Company should get more customers from Channel_Code X3 and focus on improving leads from Channel_Code X1.","eb9c368f":"# <font color='green'>6. Model Building<\/font>\n- Model 1: using all the variables\n- Model 2: Using RFE, with 15 variables\n- Model Evaluation\n- Making prediction on the test set","8c5633c9":"### `INFERENCE`: \nConversion rate of male (26%) is higher than female (20%).","cf93e336":"There is positive correlation between Age and Vintage (63%).","a9ec11c8":"P-values are < 0.05, so let us predict target variable using model 3.","a1f26f64":"### Feaure Scaling","de38a6ff":"#### `INFERENCE`:\n1. From both box plot and distplot, we can observe that `Avg_Account_Balance` is right skewed.","f9f59945":"## Univariate Analysis (Categorical)","31cf0725":"## Bivariate Analysis (numerical vs numerical)","9483b733":"### `INFERENCE`:\n1. Median and spread of Avg_Account_Balance in lead and not lead is almost same.\n2. Median Age of customers who are leads is more than that of not lead customers. \n3. Median Vintage of customers who are leads is more than that of not lead customers. The spread is also more in case of customers who are leads ","3dfbc341":"### Model 2: Using RFE, with 15 variables\nWe will perform Logistic Regression using 15 variables that are selected by RFE","9ac8cda2":"### `INFERENCE`:\nWe can observe that conversion rate in Channel_Code X1 is very low (9%) and good in X3 (36%). Company should get more customers from Channel_Code X3 and focus on improving leads from Channel_Code X1.","06ec0772":"# <font color='blue'>Credit Card Lead Prediction<\/font>\nHappy Customer Bank is a mid-sized private bank that deals in all kinds of banking products, like Savings accounts, Current accounts, investment products, credit products, among other offerings. The bank also cross-sells products to its existing customers and to do so they use different kinds of communication like tele-calling, e-mails, recommendations on net banking, mobile banking, etc. In this case, the Happy Customer Bank wants to cross sell its credit cards to its existing customers. The bank has identified a set of customers that are eligible for taking these credit cards.\n\n### Objective:\nTo identify customers that could show higher intent towards a recommended credit card, given:\n\n- Customer details (gender, age, region etc.)\n- Details of his\/her relationship with the bank (Channel_Code,Vintage, 'Avg_Asset_Value etc.)","ca98b91e":"### Binary Variable conversion\u00b6\nThere are some columns like `Credit_Product` and `Is_Active` have Yes, No values, so we will convert them to 1,0 respectively.","8892ec3c":"# <font color='green'> 7. Making prediction on the Vaidation set <\/font>","697e358c":"Area under the curve in train dataset is 85.8%","8fa1aadc":"# <font color='green'> 8. Making prediction on the Test set (submission) <\/font>","9e6bff26":"Let us replace null values as `Unknown`.","873c0b5e":"## Univariate Analysis (numerical)","5bce5d9b":"Train and Test dataset has almost **12%** missing values in `Credit_Product`.","c88f838d":"### `INFERENCE`:\nConversion rate among customers who were active in last 3 Months is more (28%) as compared to customers who were not active (20%). ","43664b27":"### `INFERENCE`: \n1. We can observe that conversion rate among `Entrepreneurs` is high (66%). Company should focus on getting more Entrepreneurs Leads.\n2. Conversion rate among `Salaried` customers is low (15%).","0e424f0e":"**Rate of Conversion** is almost `24%`","7f7c3ba8":"# <font color=\"green\">2. Cleaning Data<\/font>","424e28ac":"In `vintage vs Age` scatter plot we can observe that all the data points are below a line. There are no data points above that line. May be there is Max vintage within an age group (23-40). Below is the image for reference.<br>\n![img.PNG](attachment:3b1ff892-659a-4a7a-9e1d-31b97fc53d58.PNG)\n","f171489c":"## Bivariate Analysis (categorical vs categorical)","2a3cbb6f":"### We will perform the following steps:\n1. **Data Understanding**\n    - Importing the Leads data file\n    - Understanding the data\n    \n    \n2. **Data Cleaning**\n    - Handling missing Values\n\n\n3. **Exploratory Data Analysis**\n   - Univariate Analysis\n   - Bivariate Analysis\n    \n4. **Data Preparation**\n    - Binary Variable conversion\n    - Categorical Variables conversion\n    - Dropping repeated variable\n    - Performing test-train split\n    - Feaure Scaling\n   \n6. **Model Building**\n   - Model 1: using all the variables\n   - Model 2: Using RFE, with 15 variables\n   - Model Evaluation\n   - Making prediction on the validation set \n   \n7. **Final score calculation and submission**","4f4d2fd9":"### Dummy Variables\u00b6\nWe will create dummy variables for categorical variables with more than 2 levels.","7ec08658":"### `INFERENCE`:\nConversion rate among customers with Credit_Product is more (31%) as compared to customers without Credit_Product (7%). ","5c67bf2c":"# <font color='green'>1. Understanding Data<\/font>","92a1e531":"## Bivariate Analysis (categorical vs numerical)","d89cc92d":"### Data Dictionary\n- **ID:** Unique Identifier for a row\n- **Gender:** Gender of the Customer\n- **Age:** Age of the Customer (in Years)\n- **Region_Code:** Code of the Region for the customers\n- **Occupation:** Occupation Type for the customer\n- **Channel_Code:** Acquisition Channel Code for the Customer  (Encoded)\n- **Vintage:** Vintage for the Customer (In Months)\n- **Credit_Product:** If the Customer has any active credit product (Home loan, Personal loan, Credit Card etc.)\n- **Avg_Account_Balance:** Average Account Balance for the Customer in last 12 Months\n- **Is_Active:** If the Customer is Active in last 3 Months\n- **Is_Lead(Target):** If the Customer is interested for the Credit Card \n                  0: Customer is not interested\n                  1: Customer is interested","6c49b217":"#  <font color='green'>5. Data Preparation<\/font>\n- Binary Variable conversion\n- Categorical Variables conversion\n- Dropping repeated variable\n- Performing test-train split\n- Feaure Scaling","13858981":"### Model 3: Dropping Region_Code_RG266","e7d67f90":"Area under the curve in validation set is **85.7%**","ab22cf13":"### Model 1: Using all the variables\nWe will perform Logistic Regression on all the variables first","d33fef7c":"### Performing test-train split "}}