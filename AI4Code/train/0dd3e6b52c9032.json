{"cell_type":{"8469962e":"code","be321d87":"code","380225df":"code","a55c94a6":"code","c96fbdfe":"code","321c8280":"code","1b456cdc":"code","6440ef07":"code","297c93ca":"code","6523856a":"code","69834b10":"code","bcc17d39":"code","15555a5e":"code","810ff0f6":"code","9b09b4af":"code","2d7eb05d":"code","b613869d":"code","df356bb9":"code","6b1a63b6":"code","001b5bc3":"code","16662fea":"code","bd1b261f":"code","f60d6826":"code","39b9cc50":"code","e155a421":"code","5e296fcd":"code","603e86bd":"code","65cfef38":"code","fc7eab5e":"code","e021a990":"code","464b711b":"code","f0eca3f9":"code","83522400":"code","9c6122a8":"code","6698ea08":"code","77493300":"code","e618c943":"code","e5656ce2":"code","9a7aee6d":"code","f3e2b010":"code","27cc92ab":"code","4aa32a6c":"code","ed01cff9":"code","ca07ecd1":"code","6cd0cdc8":"code","16c8e295":"code","da1573e9":"code","3f8ef08c":"code","efd2be13":"code","af2ca435":"code","1353333e":"markdown"},"source":{"8469962e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be321d87":"tag=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/tag.csv')\nrating=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/rating.csv')\nmovies=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/movie.csv')\ngenome_scores=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/genome_scores.csv')\nlink=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/link.csv')\ngenome_tag=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/genome_tags.csv')","380225df":"movies.head()","a55c94a6":"link.head()","c96fbdfe":"rating.head()","321c8280":"rating.shape","1b456cdc":"rating['userId'].value_counts().shape ## unique users","6440ef07":"x=rating['userId'].value_counts()>500","297c93ca":"y = x[x].index","6523856a":"y.shape","69834b10":"rating=rating[rating['userId'].isin(y)]","bcc17d39":"rating.shape","15555a5e":"movie_details=movies.merge(rating,on='movieId')","810ff0f6":"movie_details.head()","9b09b4af":"movie_details.shape","2d7eb05d":"movie_details.drop(columns=['timestamp'],inplace=True)","b613869d":"movie_details.shape","df356bb9":"movie_details.head()","6b1a63b6":"number_rating = movie_details.groupby('title')['rating'].count().reset_index()","001b5bc3":"number_rating.rename(columns={'rating':'number of rating'},inplace=True)","16662fea":"number_rating.head()","bd1b261f":"df=movie_details.merge(number_rating,on='title')","f60d6826":"df.shape","39b9cc50":"df.head()","e155a421":"df=df[df['number of rating']>=50] #selecting valuable books by ratings","5e296fcd":"df.drop_duplicates(['title','userId'],inplace=True)","603e86bd":"df.shape","65cfef38":"df.head()","fc7eab5e":"df.drop(columns=['number of rating'],inplace=True)","e021a990":"df.head()","464b711b":"df['rating']=df['rating'].astype(int)","f0eca3f9":"df.head()","83522400":"movie_pivot=df.pivot_table(columns='userId',index='title',values='rating')","9c6122a8":"movie_pivot.shape","6698ea08":"movie_pivot.fillna(0,inplace=True)","77493300":"movie_pivot","e618c943":"from scipy.sparse import csr_matrix\nmovie_sparse=csr_matrix(movie_pivot)","e5656ce2":"\n\nfrom sklearn.neighbors import NearestNeighbors\nmodel=NearestNeighbors( n_neighbors=7,algorithm='brute',metric='cosine')","9a7aee6d":"model.fit(movie_sparse)","f3e2b010":"df.drop(columns=['genres','userId','rating'],inplace=True)","27cc92ab":"df.drop_duplicates(inplace=True)","4aa32a6c":"df.to_csv('codf.csv',index=False)","ed01cff9":"distances,suggestions=model.kneighbors(movie_pivot.iloc[540,:].values.reshape(1,-1))","ca07ecd1":"distances","6cd0cdc8":"suggestions","16c8e295":"df1=df.copy()\nti=[]\nfor i in df1['title']:\n    ti.append(i.split(' (')[0])\ndf1['title']=ti","da1573e9":"\n\nfor i in range(len(suggestions)):\n    print(movie_pivot.index[suggestions[i]])\n","3f8ef08c":"def reco(movie_name):\n    movie_id=df1[df1['title']=='Toy Story'].drop_duplicates('title')['movieId'].values[0]\n    distances,suggestions=model.kneighbors(movie_pivot.iloc[movie_id,:].values.reshape(1,-1))\n    \n    \n    \n    for i in range(len(suggestions)):\n        return (movie_pivot.index[suggestions[i]])\n\n","efd2be13":"res=reco(\"It Conquered the World\")","af2ca435":"for i in res:\n    print(i)","1353333e":"# A recommender system, or a recommendation system, is a subclass of information filtering system that seeks to predict the \"rating\" or \"preference\" a user would give to an item. They are primarily used in commercial applications. (source - Wikipedia)\n\n## Mainly three types of recommendation systems in machine learning based on filtering are used to suggest product and services to the consumers.\n\n### 1. Content Filtering\n\n### 2. Collaborative Filtering\n\n### 3. Hybrid Filtering\n\n## 1. Content Filtering:\n\n   In this algorithm, we try finding items look alike. Once we have item look like matrix,\n\n      we can easily recommend alike items to a customer, who has purchased any item from the store.\n\n## 2. Collaborative Filtering:\n\n      Here, we try to search for look alike customers and offer products based on what his\/her lookalike has chosen.\n\n      This algorithm is very effective but takes a lot of time and resources."}}