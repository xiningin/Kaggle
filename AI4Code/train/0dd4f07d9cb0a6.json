{"cell_type":{"72a3e010":"code","a10d6429":"code","c67816d3":"code","e13f9d82":"code","91441aed":"code","5c2afec3":"code","61687e1f":"code","9b8af9e2":"code","862fff93":"code","e615876a":"code","ec4b01bb":"code","6f121e1e":"code","e8da6d9f":"code","777a48cc":"markdown","483e104c":"markdown","009db8ab":"markdown","e939713b":"markdown","d9324947":"markdown","d0e6005a":"markdown","d12c9410":"markdown","fa4b71ea":"markdown","91492786":"markdown","4ace1305":"markdown"},"source":{"72a3e010":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom seaborn import countplot\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a10d6429":" df = pd.read_csv(\"..\/input\/Sale.csv\")","c67816d3":"df.shape","e13f9d82":"df.info()","91441aed":"x = df[[\"Occupation\", \"Purchase\"]].values\ny = df[\"Gender\"].values","5c2afec3":"x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.5, random_state = 12)","61687e1f":"knn = KNeighborsClassifier(n_neighbors=12)\nknn  = knn.fit(x_train, y_train)","9b8af9e2":"y_pred = knn.predict(x_train)\naccuracy_score(y_train, y_pred)","862fff93":"y_pred = knn.predict(x_test)\naccuracy_score(y_test, y_pred)","e615876a":"train_acc = []\ntest_acc = []\nfor k in range(1,31):\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn  = knn.fit(x_train, y_train)\n    \n    y_train_pred = knn.predict(x_train)\n    y_test_pred = knn.predict(x_test)\n    \n    train_acc.append(accuracy_score(y_train_pred, y_train))\n    test_acc.append(accuracy_score(y_test_pred, y_test))\n    print(\"Step -\", k)","ec4b01bb":"plt.figure(figsize=(15, 6))\nplt.plot(np.arange(1,31),test_acc, label = \"Test Acc\")\nplt.plot(np.arange(1,31),train_acc, label = \"Train Acc\")\nplt.scatter(np.arange(1,31),test_acc)\nplt.scatter(np.arange(1,31),train_acc)\nplt.legend()\nplt.show()","6f121e1e":"test_max = max(test_acc)\nk = test_acc.index(test_max) + 1\nk","e8da6d9f":"countplot(y)","777a48cc":"# By K-NN Algo predict gender based on \"Occupation, Purchase\"and genereting output.","483e104c":"4. Finding best value for K, where we will get best test accuracy. ","009db8ab":"By **df.info()** function we chack our data set all rows and column if any row or column containing null(NaN) values then this function will show it. It will show by the column and also show the datatype of column, means a particuler column have float values or intger values. ","e939713b":"5. Ploting Count Plot based on Gender.","d9324947":"**On k = 29 we get beat test accuracy of our model. **","d0e6005a":"As heading suggested we use the K-NN algo to predict accuracy and genereting output using Sale.csv data set. \n","d12c9410":"2. Training model with this data and finding the accuracy for test data.","fa4b71ea":"1. ** split data with 0.23% of TestSize.**","91492786":"3. Training model with different K values (1, 30) and plot train_accuracy and test_accuracy plot.","4ace1305":"**df.shape** give the info of data set, how many rows and colunms in the data set.\n"}}