{"cell_type":{"06ca942a":"code","7deea522":"code","e19b4309":"code","873427c2":"code","38302d4d":"code","2405de03":"code","e3514d6b":"code","c2d6a57d":"code","46710a42":"code","2525de58":"code","3a9f14b0":"code","ee04adcf":"code","ec7dd941":"code","db281627":"markdown","9d072020":"markdown","1eaf0756":"markdown"},"source":{"06ca942a":"dataset = [['Milk', 'Onion', 'Nutmeg', 'Kidney Beans', 'Eggs', 'Yogurt'],\n           ['Dill', 'Onion', 'Nutmeg', 'Kidney Beans', 'Eggs', 'Yogurt'],\n           ['Milk', 'Apple', 'Kidney Beans', 'Eggs'],\n           ['Milk', 'Unicorn', 'Corn', 'Kidney Beans', 'Yogurt'],\n           ['Corn', 'Onion', 'Onion', 'Kidney Beans', 'Ice cream', 'Eggs']]","7deea522":"# \ud488\ubaa9\uba85\uc73c\ub85c \ub41c \ub370\uc774\ud130\ub97c True\/False \ub370\uc774\ud130\ub85c \ubc14\uafd4\uc8fc\ub294 \ud074\ub798\uc2a4\nfrom mlxtend.preprocessing import TransactionEncoder \n# http:\/\/rasbt.github.io\/mlxtend\/user_guide\/preprocessing\/TransactionEncoder\/#api\nte = TransactionEncoder()\nte.fit(dataset) # dataset\uc5d0 \uc5b4\ub5a4 \ud488\ubaa9 \uc788\ub294\uc9c0 \uacc4\uc0b0\nte_ary = te.transform(dataset) # \uc2e4\uc81c \ubcc0\ud658\nte_ary","e19b4309":"import pandas as pd\n# https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.html\npd.DataFrame(te_ary)","873427c2":"df = pd.DataFrame(data = te_ary, columns = te.columns_) # \uceec\ub7fc\uba85\uc744 \ub123\uc5b4 \ub370\uc774\ud130 \ud504\ub808\uc784\ud654\ndf","38302d4d":"from mlxtend.frequent_patterns import apriori\n# http:\/\/rasbt.github.io\/mlxtend\/user_guide\/frequent_patterns\/apriori\/","2405de03":"frequent_itemsets = apriori(df = df, min_support=0.2, use_colnames=True) # support 0.2 \uc774\uc0c1\uc778 \ubcc0\uc218 \uc870\ud569 greedy\ud558\uac8c \ud0d0\uc0c9\nfrequent_itemsets","e3514d6b":"from itertools import combinations\nlists = frequent_itemsets['itemsets'].values\na = list(combinations(lists, 2))\nlen(a)","c2d6a57d":"from mlxtend.frequent_patterns import association_rules\n# http:\/\/rasbt.github.io\/mlxtend\/user_guide\/frequent_patterns\/association_rules\/","46710a42":"rules = association_rules(frequent_itemsets, metric=\"confidence\", min_threshold=0.7) # threshold \uac12\uc744 \uae30\uc900\uc73c\ub85c \uc5f0\uad00\ub3c4\uac00 \ub192\uc740 \ud488\ubaa9 \uc870\ud569 \uc0b0\ucd9c \ud6c4 \ud45c\ub85c return\nrules","2525de58":"rules[rules['antecedents']==('Corn', 'Eggs')].sort_values('lift', ascending = False)","3a9f14b0":"rules.iloc[0,0]","ee04adcf":"rules[rules['antecedents']==frozenset(('Eggs', 'Onion', 'Milk'))].sort_values('lift', ascending = False) # \uacb0\uacfc\ud45c\uc5d0\uc11c \uc6d0\ud558\ub294 \uc870\ud569\uc744 \ud0d0\uc0c9\ud558\ub824\uba74 frozenset \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\ud574 \uac80\uc0c9","ec7dd941":"# support(\uc9c0\uc9c0\ub3c4) P(A\u2229B)\n# confiddence(\uc2e0\ub8b0\ub3c4) P(A\u2229B) \/ P(A)\n# lift(\ud5a5\uc0c1\ub3c4) P(A\u2229B) \/ P(A)*P(B) (A, B\uac00 \ub3c5\ub9bd\uc778 \uacbd\uc6b0 1)","db281627":"![1_1_1.png](attachment:ce91168e-67a1-477c-9c2b-5295c03f0ebb.png)","9d072020":"![1_1_2.png](attachment:efdc22a9-631d-4190-9581-495010233d5f.png)","1eaf0756":"![1_1_3.PNG](attachment:5b272fda-6dee-4d9d-b38f-6f91d4339dee.PNG)"}}