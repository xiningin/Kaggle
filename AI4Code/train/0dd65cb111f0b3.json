{"cell_type":{"7ee9477a":"code","340aab6c":"code","ec9a2370":"code","92a4b3c3":"code","34c18d15":"code","b4805155":"code","2210a82a":"code","cf121cff":"code","8607ab68":"code","7a867a2b":"code","6dff5331":"code","c0b34cb4":"code","204c7b26":"code","8d9b94a9":"code","d79e2867":"code","b150d455":"code","db3d2a15":"code","4fac006b":"code","6cc01927":"code","d312a63e":"code","2f911fbf":"code","1138d871":"code","adf274ce":"code","9476e744":"markdown","c8037f22":"markdown","28453631":"markdown","6a202e2b":"markdown"},"source":{"7ee9477a":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","340aab6c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n%matplotlib inline","ec9a2370":"df=pd.read_csv('\/kaggle\/input\/wine-quality\/winequalityN.csv')","92a4b3c3":"df.head()","34c18d15":"df.info()","b4805155":"df.describe()","2210a82a":"df.isnull().sum()","cf121cff":"plt.figure(figsize=(6,10))\nplt.title('NaN Distribution')\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","8607ab68":"for i in ['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides','pH','sulphates']:\n    df[i]=df[i].fillna(df[i].mean(),inplace=False)","7a867a2b":"df.isnull().sum()","6dff5331":"sns.pairplot(df,hue='type',palette={'red':'crimson','white':'skyblue'})","c0b34cb4":"corr=df.corr(method='pearson')\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\nf, ax = plt.subplots(figsize=(11, 9))\nsns.heatmap(corr, mask=mask, cmap='Spectral', vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5},annot=True)","204c7b26":"plt.figure(figsize=(8,5))\nsns.countplot(x='quality',hue='type',data=df,palette={'red':'crimson','white':'skyblue'})\nsns.despine()","8d9b94a9":"plt.figure(figsize=(8,5))\nsns.boxplot(x='alcohol',y='type',data=df,palette={'red':'crimson','white':'skyblue'})\nsns.despine()","d79e2867":"sns.jointplot('alcohol','quality',data=df)","b150d455":"plt.figure(figsize=(10,5))\nsns.violinplot(x='quality',y='alcohol',hue='type',data=df,palette={'red':'crimson','white':'skyblue'},\n               split=True,inner='quart')\nsns.despine()","db3d2a15":"from sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC","4fac006b":"df1=df.drop('quality',axis=1).copy()\ndf1.head()","6cc01927":"df1=df1.apply(LabelEncoder().fit_transform)\ndf1.head()","d312a63e":"std_sclr=StandardScaler().fit(df1)\nX=std_sclr.transform(df1)\ny=df['quality']","2f911fbf":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","1138d871":"svc=SVC(kernel='rbf',C=10,gamma=1).fit(X,y)\nsvc","adf274ce":"print(\"Accuracy on training set: {:.4f}\".format(svc.score(X_train, y_train)))\nprint(\"Accuracy on test set: {:.4f}\".format(svc.score(X_test, y_test)))","9476e744":"# Visualization","c8037f22":"# Basic Operations","28453631":"# SVM","6a202e2b":"# Conclusion\n\nOur model performed almost perfectly."}}