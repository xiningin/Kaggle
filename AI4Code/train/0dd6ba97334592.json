{"cell_type":{"b0267e71":"code","67312695":"code","f24da0c1":"code","de88319d":"code","678f6385":"code","892a50a0":"code","802b1faa":"code","000848b4":"code","a1b31c3b":"code","1ec18fca":"code","d603ac46":"code","8a47fc3b":"code","dee65d4e":"code","90deb352":"code","05dcd394":"code","c3310643":"code","5c3306d8":"code","d5ea88f0":"code","046e2953":"code","7183e5c8":"code","60837558":"code","323982ce":"code","a63477fb":"code","a0888065":"code","f1d6b09d":"code","ff6f9b86":"code","05861161":"code","dd1e5b8d":"code","9d8e6934":"code","a72bb663":"code","f13f37ab":"code","e6481602":"code","849a372e":"code","df60b509":"code","bed8a582":"code","2a77a1a2":"code","dda494f0":"code","3e85a2c3":"code","af1be032":"code","38de630a":"code","fea11ea1":"code","37a3ef03":"code","b2d553b9":"markdown","ea51e048":"markdown","c8f8a2d4":"markdown","b6cd5c8a":"markdown","47584ca5":"markdown","9558f209":"markdown","d38364ec":"markdown","ba5e869a":"markdown","495b5663":"markdown","d18eca5c":"markdown","2da3eb3f":"markdown","551f4e25":"markdown","bfd3cce0":"markdown","107605e4":"markdown","2bfcd71f":"markdown","059fc278":"markdown","46fa8ac0":"markdown","687256bd":"markdown","65b359bc":"markdown","32c1f92f":"markdown","3b82bff8":"markdown","4c89032a":"markdown","e52c2d10":"markdown","46a34f29":"markdown"},"source":{"b0267e71":"#Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import r2_score","67312695":"#reading the dataset\nzomato_real=pd.read_csv(\"..\/input\/zomato-bangalore-restaurants\/zomato.csv\")\nzomato_real.head() # prints the first 5 rows of a DataFrame","f24da0c1":"zomato_real.info() # Looking at the information about the dataset, datatypes of the coresponding columns and missing values","de88319d":"#Deleting Unnnecessary Columns\nzomato=zomato_real.drop(['url','dish_liked','phone'],axis=1) #Dropping the column \"dish_liked\", \"phone\", \"url\" and saving the new dataset as \"zomato\"","678f6385":"zomato_real.head() # looking at the dataset after transformation ","892a50a0":"#Removing the Duplicates\nzomato.duplicated().sum()\nzomato.drop_duplicates(inplace=True)\nzomato_real.head() # looking at the dataset after transformation","802b1faa":"#Remove the NaN values from the dataset\nzomato.isnull().sum()\nzomato.dropna(how='any',inplace=True)\nzomato.info() #.info() function is used to get a concise summary of the dataframe","000848b4":"#Reading Column Names\nzomato.columns","a1b31c3b":"#Changing the column names\nzomato = zomato.rename(columns={'approx_cost(for two people)':'cost','listed_in(type)':'type',\n                                  'listed_in(city)':'city'})\nzomato.columns","1ec18fca":"#Some Transformations\nzomato['cost'] = zomato['cost'].astype(str) #Changing the cost to string\nzomato['cost'] = zomato['cost'].apply(lambda x: x.replace(',','.')) #Using lambda function to replace ',' from cost\nzomato['cost'] = zomato['cost'].astype(float) # Changing the cost to Float\nzomato.info() # looking at the dataset information after transformation","d603ac46":"#Reading uninque values from the Rate column\nzomato['rate'].unique()","8a47fc3b":"#Removing '\/5' from Rates\nzomato = zomato.loc[zomato.rate !='NEW']\nzomato = zomato.loc[zomato.rate !='-'].reset_index(drop=True)\nremove_slash = lambda x: x.replace('\/5', '') if type(x) == np.str else x\nzomato.rate = zomato.rate.apply(remove_slash).str.strip().astype('float')\nzomato['rate'].head() # looking at the dataset after transformation","dee65d4e":"# Adjust the column names\nzomato.name = zomato.name.apply(lambda x:x.title())\nzomato.online_order.replace(('Yes','No'),(True, False),inplace=True)\nzomato.book_table.replace(('Yes','No'),(True, False),inplace=True)\nzomato_real.head() # looking at the dataset after transformation\n","90deb352":"zomato.cost.unique() # cheking the unique costs","05dcd394":"#Encode the input Variables\ndef Encode(zomato):\n    for column in zomato.columns[~zomato.columns.isin(['rate', 'cost', 'votes'])]:\n        zomato[column] = zomato[column].factorize()[0]\n    return zomato\n\nzomato_en = Encode(zomato.copy())\nzomato_en.head() # looking at the dataset after transformation","c3310643":"#Get Correlation between different variables\ncorr = zomato_en.corr(method='kendall')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nzomato_en.columns","5c3306d8":"#Defining the independent variables and dependent variables\nx = zomato_en.iloc[:,[2,3,5,6,7,8,9,11]]\ny = zomato_en['rate']\n#Getting Test and Training Set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)\nx_train.head()\n","d5ea88f0":"y_train.head()","046e2953":"zomato_en['menu_item'].unique() # seeing the unique values in 'menu_item'","7183e5c8":"zomato_en['location'].unique() # seeing the unique values in 'location'","60837558":"zomato_en['cuisines'].unique() # seeing the unique values in 'cusines'","323982ce":"zomato_en['rest_type'].unique() # seeing the unique values in 'rest_type'","a63477fb":"x.head()","a0888065":"y.head()","f1d6b09d":"#Restaurants delivering Online or not\nsns.countplot(zomato['online_order'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants delivering online or Not')","ff6f9b86":"sns.countplot(zomato['book_table'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants allowing table booking or not')","05861161":"plt.rcParams['figure.figsize'] = (13, 9)\nY = pd.crosstab(zomato['rate'], zomato['book_table'])\nY.div(Y.sum(1).astype(float), axis = 0).plot(kind = 'bar', stacked = True,color=['red','yellow'])\nplt.title('table booking vs Normal rate', fontweight = 30, fontsize = 20)\nplt.legend(loc=\"upper right\")\nplt.show()","dd1e5b8d":"sns.countplot(zomato['city'])\nsns.countplot(zomato['city']).set_xticklabels(sns.countplot(zomato['city']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(13,13)\nplt.title('Location wise count for restaurants')","9d8e6934":"loc_plt=pd.crosstab(zomato['rate'],zomato['city'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Locationwise Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Location',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend();","a72bb663":"sns.countplot(zomato['rest_type'])\nsns.countplot(zomato['rest_type']).set_xticklabels(sns.countplot(zomato['rest_type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Restuarant Type')","f13f37ab":"loc_plt=pd.crosstab(zomato['rate'],zomato['rest_type'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Rest type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Rest type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend().remove();","e6481602":"sns.countplot(zomato['type'])\nsns.countplot(zomato['type']).set_xticklabels(sns.countplot(zomato['type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Type of Service')","849a372e":"type_plt=pd.crosstab(zomato['rate'],zomato['type'])\ntype_plt.plot(kind='bar',stacked=True);\nplt.title('Type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');","df60b509":"sns.countplot(zomato['cost'])\nsns.countplot(zomato['cost']).set_xticklabels(sns.countplot(zomato['cost']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Cost of Restuarant')","bed8a582":"fig = plt.figure(figsize=(20,7))\nloc = sns.countplot(x=\"location\",data=zomato_real, palette = \"Set1\")\nloc.set_xticklabels(loc.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Location\",size=18)\nloc\nplt.title('NO. of restaurants in a Location',size = 20,pad=20)","2a77a1a2":"fig = plt.figure(figsize=(17,5))\nrest = sns.countplot(x=\"rest_type\",data=zomato_real, palette = \"Set1\")\nrest.set_xticklabels(rest.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Restaurant type\",size=15)\nrest \nplt.title('Restaurant types',fontsize = 20 ,pad=20)","dda494f0":"plt.figure(figsize=(15,7))\nchains=zomato_real['name'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most famous restaurant chains in Bangaluru\",size=20,pad=20)\nplt.xlabel(\"Number of outlets\",size=15)","3e85a2c3":"#Prepare a Linear Regression Model\nreg=LinearRegression()\nreg.fit(x_train,y_train)\ny_pred=reg.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","af1be032":"#Prepairng a Decision Tree Regression\nfrom sklearn.tree import DecisionTreeRegressor\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","38de630a":"#Preparing Random Forest REgression\nfrom sklearn.ensemble import RandomForestRegressor\nRForest=RandomForestRegressor(n_estimators=500,random_state=329,min_samples_leaf=.0001)\nRForest.fit(x_train,y_train)\ny_predict=RForest.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","fea11ea1":"#Preparing Extra Tree Regression\nfrom sklearn.ensemble import  ExtraTreesRegressor\nETree=ExtraTreesRegressor(n_estimators = 100)\nETree.fit(x_train,y_train)\ny_predict=ETree.predict(x_test)\n\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","37a3ef03":"import pickle\n# Saving model to disk\npickle.dump(ETree, open('model.pkl','wb'))","b2d553b9":"### Extra Tree Regressor","ea51e048":"#### Table booking Rate vs Normal Rate","c8f8a2d4":"#### Restaurant Type","b6cd5c8a":"#### Type and Rating","47584ca5":"#### Restaurants allowing table booking or not","9558f209":"#### The basic idea is analyzing the <font color=blue>Buisness Problem of Zomato <\/font> to get a fair idea about the factors affecting the establishment of different types of restaurant at different places in Bengaluru, aggregate rating of each restaurant and many more. I have provided the link to download the dataset at the end of this notebook.","d38364ec":"#### Cost of Restuarant","ba5e869a":"#### No. of Restaurants in a Location","495b5663":"#### Location","d18eca5c":"# Regression Analysis","2da3eb3f":"It can be observed that we have got the best accuracy for Extra tree regressor","551f4e25":"#### Gaussian Rest type and Rating","bfd3cce0":"#### Restaurant type","107605e4":"# Data Visualization","2bfcd71f":"#### The highest correlation is between name and address which is 0.62 which is not of very much concern ","059fc278":"#### Types of Services","46fa8ac0":"#### Restaurants delivering Online or not","687256bd":"#### Location and Rating","65b359bc":"#### Most famous Restaurant chains in Bengaluru","32c1f92f":"### Random Forest Regression","3b82bff8":"### Splitting the Dataset","4c89032a":"# Breakdown of this notebook:\n1. **Loading the dataset:** Load the data and import the libraries. <br>\n2. **Data Cleaning:** <br>\n - Deleting redundant columns.\n - Renaming the columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - #Some Transformations\n3. **Regression Analysis**\n - Linear Regression\n - Decision Tree Regression\n - Random Forest Regression\n4. **Data Visualization:** Using plots to find relations between the features.\n - Restaurants delivering Online or not\n - Restaurants allowing table booking or not\n - Table booking Rate vs Rate\n - Best Location\n - Relation between Location and Rating\n - Restaurant Type\n - Gaussian Rest type and Rating\n - Types of Services\n - Relation between Type and Rating\n - Cost of Restuarant\n - No. of restaurants in a Location\n - Restaurant type\n - Most famous restaurant chains in Bengaluru ","e52c2d10":"### Decision Tree Regression ","46a34f29":"### Linear Regression"}}