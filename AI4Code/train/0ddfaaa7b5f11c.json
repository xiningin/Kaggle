{"cell_type":{"b87d45c5":"code","1765b2f4":"code","06f28e45":"code","61dc626f":"code","b3d5f02b":"code","1fbb99d4":"code","3c97ec16":"code","8e5a1850":"code","0ad91929":"code","47ffeb1a":"code","bd80f5a6":"code","51d308fb":"code","dbb92d86":"code","52d73990":"code","96fb2589":"code","2299570d":"code","9055ebca":"code","ec083b0c":"code","68470c6f":"code","2095542d":"code","3e9d4692":"code","097b6882":"code","cf9aa3c0":"code","63ae574b":"code","ff53e55e":"code","d941396c":"code","809bc9f6":"code","375b099e":"code","89d2c313":"code","0d03b68c":"code","fc9bc1cc":"code","85d85722":"code","174c8968":"code","cce35388":"code","31eaf585":"code","5934fbc6":"code","cf8810da":"code","0dc2617f":"code","8cc242de":"code","42019036":"code","a98fc2ad":"code","487cd510":"code","04cf25ff":"markdown","d303d729":"markdown","93178d91":"markdown","26941645":"markdown","d3c07a0e":"markdown","e2dd4f54":"markdown","928b4eac":"markdown","6f2d76d6":"markdown","bc543885":"markdown","50823b61":"markdown","049ae19e":"markdown","4df0bec1":"markdown","47000d3e":"markdown"},"source":{"b87d45c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1765b2f4":"# Importing the data set\n\ndf = pd.read_csv('\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')","06f28e45":"# Setting to display all the columns\n\npd.get_option(\"display.max_columns\")","61dc626f":"# Display first five rows\n\ndf.head()","b3d5f02b":"# Checking for missing Values.\ndf.isnull().sum()","1fbb99d4":"df.describe()","3c97ec16":"# displaying the datatypes of each columns\n\ndf.dtypes","8e5a1850":"int_c = obj_c = 0\nfor i in df.dtypes:\n    if i == 'object':\n        obj_c +=1\n    else:\n        int_c +=1","0ad91929":"print(\"Total columns with Numerical data type is \",int_c)\nprint(\"Total columns with object data type is \",obj_c)","47ffeb1a":"# Counting the total number of branches\n\nbranch = df.groupby([\"Branch\"])[\"Branch\"].count().sort_values(ascending=False)\nbranch","bd80f5a6":"branch.to_csv(\"Branch.csv\")","51d308fb":"#counting the total number of cities\ncity = df.groupby([\"City\"])['City'].count().sort_values(ascending=False)\ncity\ncity.to_csv(\"city.csv\")","dbb92d86":"city","52d73990":"df['Customer type'].unique()","96fb2589":"customer_type = df.groupby([\"Customer type\"])['Customer type'].count().sort_values(ascending=False)\ncustomer_type.to_csv(\"customer_type.csv\")\ncustomer_type","2299570d":"import os\nfor dirname, _, filenames in os.walk('\/kaggle'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ncdf = pd.read_csv('\/\/kaggle\/working\/customer_type.csv')","9055ebca":"cdf.head()","ec083b0c":"cdf.columns=['Customer type','count']","68470c6f":"cdf['Avg'] = (cdf['count'] \/ cdf['count'].sum()) * 100\ncdf.to_csv(\"customer_type.csv\",index=False)","2095542d":"df['Gender'].unique()","3e9d4692":"gender = df['Gender'].value_counts()\ngender.to_csv(\"gender.csv\")","097b6882":"gdf = pd.read_csv(\"\/\/kaggle\/working\/gender.csv\")\ngdf.columns=['Gender','Count']\ngdf['Avg'] = (gdf['Count']\/gdf['Count'].sum())*100\ngdf.to_csv(\"gender.csv\",index=False)\ngdf","cf9aa3c0":"df.head()","63ae574b":"grp=df.groupby(['Product line']).mean()\ngrp","ff53e55e":"grp[['Unit price']].to_csv(\"product inline.csv\")\ngrp","d941396c":"grp = df.groupby(['Product line']).count()\ngrp","809bc9f6":"grp['Branch'].to_csv(\"Count of product.csv\")\ncop = pd.read_csv(\"\/\/kaggle\/working\/Count of product.csv\")\ncop.columns=['Product line','count']\ncop","375b099e":"grp1 = df.groupby(\"Product line\").mean()\n\nfor i in range(0,len(cop)):\n    cop['Avg price'][i]= (grp1['Unit price'][i])\ncop.to_csv(\"product inline.csv\",index=False)\ncop","89d2c313":"df.head()","0d03b68c":"grp2=df.groupby('Product line').sum()\ngrp2['Total']","fc9bc1cc":"cop","85d85722":"cop['Total amount'] = grp2['Total']\nfor i in range(0,len(cop)):\n    cop['Total amount'][i]= (grp2['Total'][i])\ncop.to_csv(\"product inline.csv\",index=False)\ncop","174c8968":"grp2","cce35388":"cop['Tax'] = grp2['Tax 5%']\nfor i in range(0,len(cop)):\n    cop['Tax'][i]= (grp2['Tax 5%'][i])\ncop.to_csv(\"product inline.csv\",index=False)\ncop","31eaf585":"df.head()","5934fbc6":"grp3=df.groupby('Date').count()\ngrp3['Invoice ID'].to_csv(\"Date.csv\")\n","cf8810da":"date_df= pd.read_csv(\"\/\/kaggle\/working\/Date.csv\")\ndate_df.columns = ['Date','Number of purchases']\ndate_df.to_csv(\"Date.csv\",index=False)","0dc2617f":"grp4 = df.groupby('Payment').count()\ngrp4['Branch'].to_csv(\"Mode of purchase.csv\")","8cc242de":"mod = pd.read_csv(\"\/\/kaggle\/working\/Mode of purchase.csv\")\nmod.columns=['Mode','Count']\nmod","42019036":"mod['percent'] = (mod['Count']\/mod['Count'].sum()) * 100\nmod.to_csv(\"Mode of purchase.csv\",index=False)\nmod","a98fc2ad":"df","487cd510":"grp5=df.groupby(\"Rating\").max().sort_values(ascending=False,by='Rating')\ngrp5.to_csv(\"Rating.csv\")\ngrp5","04cf25ff":"## date","d303d729":"## Customer types","93178d91":"There are combination of \"Object\" and \"float\"","26941645":"## Mode of purchases","d3c07a0e":"## Gender","e2dd4f54":"#### **Branch A is in city \"Yangon\", Branch B is in city \"Mandalay\", Branch C is in city \"Naypyitaw\"**","928b4eac":"## Rating","6f2d76d6":"## product in each category","bc543885":"## Product line","50823b61":"It is clear that there is no missing value in the dataframe\n","049ae19e":"There are Two types of customer \n1. Member\n2. Normal","4df0bec1":"## To find sum of  amount in each product inline\n","47000d3e":"##### **Among the Three Branches Sales achieved by Branch \"A\" is higher which is around 340, and sales of branch \"B\" and branch \"c\" is 332 and 328**"}}