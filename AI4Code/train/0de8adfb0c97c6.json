{"cell_type":{"fc40fb04":"code","b01d4b75":"code","969fa6c4":"code","0a684a70":"code","0de7e1fc":"code","d63ef08a":"code","85d88589":"code","813ebe35":"code","07ab10ab":"code","fd89ed28":"code","ca5c8eb8":"code","b4825b74":"code","22a154ca":"code","5a777525":"code","f55cfae0":"markdown","63571ccf":"markdown","52c0e561":"markdown"},"source":{"fc40fb04":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b01d4b75":"data = pd.read_csv('..\/input\/2017.csv')\ndata.info()\n","969fa6c4":"data.describe()","0a684a70":"data.corr()","0de7e1fc":"f,ax = plt.subplots(figsize = (20,20))\n #(name of table, values at mid, linewidth, decimal value, shape)\nsns.heatmap(data.corr(), annot = True, linewidths =.5, fmt='.1f', ax=ax)\nplt.show()","d63ef08a":"data.columns","85d88589":"data_cols = data.columns.str.replace('.','_')\ndata_cols","813ebe35":"data.columns = data_cols\ndata.columns\ndata.head(20)","07ab10ab":"#line plot\ndata.Freedom.plot(kind ='line', color='red', label='Freedom', linewidth = 1, alpha=0.8, grid = True, linestyle = ':', figsize=(8,8))\ndata.Trust__Government_Corruption_.plot(kind = 'line', color='blue', label = 'Trust Government Corruption', linewidth = 1, alpha = 0.8, grid = True, linestyle = '-.')\nplt.legend()\nplt.xlabel='x axis'\nplt.ylabel='y axis'\nplt.title = 'Freedom & Trust Government Corruption Line Plot'\nplt.show()","fd89ed28":"#scatter plot\ndata.plot(kind = 'scatter', x = 'Happiness_Score', y = 'Freedom' , alpha = 0.6, color = 'black', grid = True, figsize=(8,8))\nplt.xlabel = 'Happiness Score'\nplt.ylabel = 'Freedom'\nplt.title='Happiness Score & Freedom Scatter Plot'\nplt.show()","ca5c8eb8":"#histogram plot\ndata.Happiness_Score.plot(kind='hist', bins=40, color = 'blue', alpha = 0.5, figsize=(8,8))\nplt.xlabel='Happiness Score'\nplt.show()","b4825b74":"filter1 = data.Happiness_Score > data.Happiness_Score.mean()\ndata[filter1]","22a154ca":"filter2 = data.Trust__Government_Corruption_ < 0.3\ndata[filter2]","5a777525":"data[np.logical_and(filter1,filter2)]","f55cfae0":"Dataframe column names are not useful for the plotting processes. So I have to change dots(' . ') for use columns names.","63571ccf":"I executed two different filters at the same time. I used Numpy library at processing.","52c0e561":"I am executing different filters to table and lets see the results."}}