{"cell_type":{"3b5c9df5":"code","f6e3369f":"code","b4acb2a8":"code","94f38298":"code","f84b06c8":"code","40b7c5a3":"code","762ae44a":"code","ea1e77a2":"code","72a9f1bc":"code","8112e9cf":"code","792eb8a4":"code","2915345a":"markdown","f6154a82":"markdown","75ee8c34":"markdown"},"source":{"3b5c9df5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f6e3369f":"train = pd.read_csv(\"\/kaggle\/input\/tweet-sentiment-extraction\/train.csv\").dropna()\ntest = pd.read_csv(\"\/kaggle\/input\/tweet-sentiment-extraction\/test.csv\")\ntrain","b4acb2a8":"def count(lis, text):\n    count = 0\n    for i in lis:\n        if i.find(text) != -1:\n            count += 1\n    return count","94f38298":"count(train.text, '&quot;'), count(train.text, '&amp;'), count(train.text, '&lt;'), count(train.text, '&gt;')","f84b06c8":"count(train.selected_text, '&quot;'), count(train.selected_text, '&amp;'), count(train.selected_text, '&lt;'), count(train.selected_text, '&gt;')","40b7c5a3":"count(test.text, '&quot;'), count(test.text, '&amp;'), count(test.text, '&lt;'), count(test.text, '&gt;')","762ae44a":"count = 0\nfor i in train.text:\n    i = i.replace(\"&quot;\", '\"')\n    i = i.replace(\"&lt;\", '<')\n    i = i.replace(\"&gt;\", '>')\n    i = i.replace(\"&amp;\", '')\n    if i.find('&') != -1:\n        count += 1\ncount","ea1e77a2":"def remove_html_char_ref(i):\n    i = i.replace(\"&quot;\", '\"')\n    i = i.replace(\"&lt;\", '<')\n    i = i.replace(\"&gt;\", '>')\n    i = i.replace(\"&amp;\", '&')\n    return i","72a9f1bc":"count = 0\nfor i,j, s in zip(train.text, train.selected_text, train.sentiment):\n    if len(i) != len(remove_html_char_ref(i)): \n        count +=1\ncount","8112e9cf":"for i,j, s in zip(train.text, train.selected_text, train.sentiment):\n    if len(i) != len(remove_html_char_ref(i)): \n        print(\"sentiment : \"+s)\n        print(\"original  : \"+i+'[END]')\n        print(\"corrected : \"+remove_html_char_ref(i)+'[END]')\n        print(\"selected  : \"+j+'[END]')\n        print(\"guess     : \"+remove_html_char_ref(i)[i.find(j):i.find(j)+len(j)] +'[END]')\n        print(\"=\"*92)","792eb8a4":"count = 0\nfor i,j, s in zip(train.text, train.selected_text, train.sentiment):\n    if len(remove_html_char_ref(i))<len(j):\n        count += 1\ncount","2915345a":"**There is no & symbol in text other than these codes**","f6154a82":"**but sometimes the length of selected text is greater than rendered text **","75ee8c34":"**Number of tweets affected by this**"}}