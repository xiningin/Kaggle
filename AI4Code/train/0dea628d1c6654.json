{"cell_type":{"19fef584":"code","1520158f":"code","eb6320b8":"code","25ea6b06":"code","ab91a5cf":"code","c9abb077":"code","5b505111":"markdown","e7166477":"markdown","a18b4a0c":"markdown","8f98db3b":"markdown","f3de1a35":"markdown"},"source":{"19fef584":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n","1520158f":"data = pd.read_csv('..\/input\/StudentsPerformance.csv')\ndata.head() #Top 5 Rows\ndata.tail() #Last 5 Rows\ndata.columns # Data Columns\ndata.shape # Rows and Column Count\ndata.info() # Column and \u0130nfo about Columns\n\nprint(data['gender'].value_counts(dropna = False))\n# Female : 518\n# Male : 482 \n# Name : gender, dtype : int64\n# Dropna = False -> Show Nan value\n\nprint(data['lunch'].value_counts())\n# Standart : 645, Free : 355 , int64\n\ndata.describe()\ndata.boxplot(column='math score',by = 'gender')\n\n# Filtering the data\ndata[np.logical_and(data['gender']=='male', data['math score'] > 85)] # 66 Rows\ndata[np.logical_and(data['gender']=='female', data['math score'] > 85)]  # 37 Rows\n\ndata.corr()\n","eb6320b8":"data_top5 = data.head()\ndata_top5\nmelted_data=pd.melt(frame=data_top5,id_vars='gender',value_vars=['math score','reading score','writing score'])\nmelted_data\n# Return 15 rows\n\n#Pivoting the Data = Reverse of Melting\n\n# melted_data.pivot(index = 'gender', columns = 'variable',values='value')\n# Error : Index contains duplicate entries, cannot reshape. \n# So, if you want to Pivoting the data,  \u0130ndex must be uniq\n ","25ea6b06":"header = data.head(3)\nfooter = data.tail(3)\nconc_data = pd.concat([header,footer], axis = 0, ignore_index=False)\n# ignore_index = True Return   ->  1-2-3-4-5-6 \n# igoner_index = False Return  ->   0-1-2-797-798-799  \nconc_data\n\n","ab91a5cf":"# DATA TYPE\ndata.dtypes\n# Change the Data type of Column\ndata['math score'] = data['math score'].astype('float')\ndata.dtypes # Data Types of Columns\n# Change the data types\ndata['math score'] = data['math score'].astype('int64')\ndata.dtypes # Data Types of Columns\n","c9abb077":"data.info()\n\n# Assert\n\nassert 1==1 # return nothing when true\n# assert 1==2 #return error\n\ndata['gender'].notnull().all()         # Return True\nassert data['gender'].notnull().all()  # Return Nothing","5b505111":"**Diagnose Data **","e7166477":"**Data Types**","a18b4a0c":"**Concatenating Data**","8f98db3b":"**Missing Data**","f3de1a35":"**Tidy Data**"}}