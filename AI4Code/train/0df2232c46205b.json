{"cell_type":{"3f12a438":"code","f0f2643d":"code","273b9afd":"code","4a951353":"code","aaa86eb0":"code","208a5b58":"code","bdeb3776":"code","55aeb6b3":"code","85034040":"code","ba7bbf41":"code","a0e59f50":"code","dc812c18":"code","57d0f255":"code","18d6fcfb":"code","e9887157":"code","458907fa":"code","b31ab83d":"code","be7ed13e":"code","4dc404b5":"markdown","3bd68cb4":"markdown","6c1461b7":"markdown","325a1cc3":"markdown"},"source":{"3f12a438":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f0f2643d":"PATH = '\/kaggle\/input\/lish-moa\/'","273b9afd":"train_df = pd.read_csv(PATH + 'train_features.csv')\ntest_df = pd.read_csv(PATH + 'test_features.csv')\n\ntarget_df = pd.read_csv(PATH + 'train_targets_scored.csv')\nsub_df = pd.read_csv(PATH + 'sample_submission.csv')","4a951353":"train_df.head()","aaa86eb0":"train_df.drop(['sig_id'], axis=1, inplace=True)\ntest_df.drop(['sig_id'], axis=1, inplace=True)","208a5b58":"target_df.head()","bdeb3776":"target_df.drop(['sig_id'], axis=1, inplace=True)","55aeb6b3":"target_df.sum(axis=1).sample(20)","85034040":"idx = len(train_df)\ndata_df = pd.concat([train_df, test_df], axis = 0)\ndel train_df, test_df","ba7bbf41":"from sklearn.preprocessing import LabelEncoder\n\nenc = LabelEncoder()\n\ncategory_cols = ['cp_dose', 'cp_type']\n\nfor cols in category_cols:\n    data_df[cols] = enc.fit_transform(data_df[cols])","a0e59f50":"X_train = data_df.iloc[:idx,:]\nX_test = data_df.iloc[idx:,:]\ny_train = target_df","dc812c18":"from xgboost import XGBClassifier\n\nmodel = XGBClassifier(\n            n_estimators=500,\n            seed=42,\n            learning_rate=0.1,\n            max_depth=5, \n            colsample_bytree=1,\n            subsample=1,\n            tree_method='gpu_hist')","57d0f255":"from sklearn.model_selection import KFold\nfrom sklearn.metrics import log_loss\n\ncolumns = target_df.columns\nsubmission = sub_df.copy()\nsubmission.loc[:,columns] = 0\n\nfor c, column in enumerate(columns):\n    y = y_train[column]\n    loss = 0\n    \n    kf = KFold(n_splits=5, random_state=42, shuffle=True)  \n    for ix, (train_idx, val_idx) in enumerate(kf.split(X_train)):\n              \n        X_train_cv, X_val_cv = X_train.iloc[train_idx], X_train.iloc[val_idx]\n        y_train_cv, y_val_cv = y.iloc[train_idx], y.iloc[val_idx]\n    \n        model.fit(\n            X_train_cv, y_train_cv, \n            eval_set=[(X_val_cv,  y_val_cv)], \n            eval_metric = \"logloss\", \n            early_stopping_rounds=30, \n            verbose=0)\n        \n        val_preds = model.predict(X_val_cv)\n        \n        loss += log_loss(y_val_cv,val_preds, labels=[0,1])\n        \n        preds = model.predict_proba(X_test)[:,1]\n        submission[column] += preds\/5\n                         \n    print(\"model \"+str(c+1)+\": loss =\"+str(loss\/5))","18d6fcfb":"submission.loc[test['cp_type']==1, target_df.columns] = 0\nsubmission.to_csv('submission.csv', index=False)","e9887157":"from sklearn.multioutput import MultiOutputClassifier\n\nmo_model = MultiOutputClassifier(model)","458907fa":"from sklearn.model_selection import KFold\nfrom sklearn.metrics import log_loss\n\ntest_preds = np.zeros((X_test.shape[0], y_train.shape[1]))\n\nkf = KFold(n_splits=5, random_state=42, shuffle=True)\n\nloss = []\n\nfor ix, (train_idx, val_idx) in enumerate(kf.split(X_train)):\n    \n    X_train_cv, X_val_cv = X_train.iloc[train_idx], X_train.iloc[val_idx]\n    y_train_cv, y_val_cv = y_train.iloc[train_idx], y_train.iloc[val_idx]\n    \n    \n    mo_model.fit(X_train_cv, y_train_cv)\n    val_preds = model.predict_proba(X_val_cv) \n    val_preds = np.array(val_preds)[:,:,1].T #(num_labels,num_samples,prob_0\/1)\n    \n    loss.append(log_loss(np.ravel(y_val_cv), np.ravel(val_preds)))\n    \n    preds = model.predict_proba(X_test)\n    preds = np.array(preds)[:,:,1].T #(num_labels,num_samples,prob_0\/1)\n    test_preds += preds \/ 5 \n\nprint(loss)\nprint('Mean CV loss across folds', np.mean(loss))","b31ab83d":"mask = X_test['cp_type']=='ctl_vehicle'\ntest_preds[mask] = 0","be7ed13e":"sub_df.iloc[:,1:] = test_preds\nsub_df.to_csv('submission.csv', index=False)","4dc404b5":"**\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438**\n- `sig_id` - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043e\u0431\u0440\u0430\u0437\u0446\u0430\n- \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c `g`- \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u044d\u043a\u0441\u043f\u0440\u0435\u0441\u0441\u0438\u0438 \u0433\u0435\u043d\u043e\u0432, \u0438 \u0438\u0445 772 (\u043e\u0442 `g-0` \u0434\u043e `g-771`).\n- \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c `c` - \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438 \u0436\u0438\u0437\u043d\u0435\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043a\u043b\u0435\u0442\u043e\u043a, \u0438\u0445 100 (\u043e\u0442 `c-0` \u0434\u043e `c-99`).\n- `cp_type` - \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043e\u0431\u0440\u0430\u0437\u0446\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043e\u043c \u0438\u043b\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u043c \u0432\u043e\u0437\u043c\u0443\u0449\u0435\u043d\u0438\u0435\u043c (trt_cp \u0438\u043b\u0438 ctl_vehicle)\n- `cp_time` - \u044d\u0442\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043b\u0435\u0447\u0435\u043d\u0438\u044f (24, 48 \u0438\u043b\u0438 72 \u0447\u0430\u0441\u0430)\n- `cp_dose` - \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u0430\u0442\u0435u\u043e\u0440\u0438\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u0434\u043e\u0437\u0430 \u043d\u0438\u0437\u043a\u0430\u044f \u0438\u043b\u0438 \u0432\u044b\u0441\u043e\u043a\u0430\u044f (`D1` \u0438\u043b\u0438 `D2`)","3bd68cb4":"**\u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430**","6c1461b7":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438**","325a1cc3":"**Mechanisms of Action (MoA)**\n\n\u0412 \u0444\u0430\u0440\u043c\u0430\u043a\u043e\u043b\u043e\u0433\u0438\u0438 \u0442\u0435\u0440\u043c\u0438\u043d \u00ab\u041c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439\u00bb (MoA) \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0431\u0438\u043e\u0445\u0438\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u043c\u0443 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e, \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u043a\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0441\u0432\u043e\u0439 \u0444\u0430\u0440\u043c\u0430\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u044d\u0444\u0444\u0435\u043a\u0442. \u041c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043c\u043e\u043b\u0435\u043a\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0438\u0448\u0435\u043d\u0435\u0439, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043b\u0435\u043a\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u043e, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u0444\u0435\u0440\u043c\u0435\u043d\u0442 \u0438\u043b\u0438 \u0440\u0435\u0446\u0435\u043f\u0442\u043e\u0440. \u0420\u0435\u0446\u0435\u043f\u0442\u043e\u0440\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0441\u0440\u043e\u0434\u0441\u0442\u0432\u043e \u043a \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430\u043c, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043d\u0430 \u0445\u0438\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0442\u0430\u043c \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442.\n\n\u0412 \u043a\u043e\u043d\u043a\u0443\u0440\u0441\u0435 \u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u0434\u0430\u0447\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u0446\u0435\u043b\u0435\u0439 \u043e\u0442\u0432\u0435\u0442\u043d\u044b\u0445 \u043c\u0435\u0440, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u041c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 (\u041c\u041e\u0414) \u0432 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043e\u0431\u0440\u0430\u0437\u0446\u043e\u0432. \u041f\u0440\u043e\u0431\u044b \u2013 \u044d\u0442\u043e \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u044b, \u043f\u0440\u043e\u0444\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0442\u043e\u0447\u043a\u0430\u0445 \u0438 \u0434\u043e\u0437\u0430\u0445. \u041d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0433\u0440\u0443\u043f\u043f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u0434\u0432\u0443\u0445\u0441\u043e\u0442 \u043c\u0438\u0448\u0435\u043d\u0435\u0439 \u0444\u0435\u0440\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u0440\u0435\u0446\u0435\u043f\u0442\u043e\u0440\u043e\u0432."}}