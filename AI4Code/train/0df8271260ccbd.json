{"cell_type":{"0dd5a20b":"code","06e8fbbd":"code","6103c502":"code","cd6fcb88":"code","90526797":"code","cd07ede5":"code","edc9027f":"code","0e92263d":"code","0e2b07cf":"code","1258a46a":"code","56f2a3e3":"code","dcb8c14c":"code","89198d3e":"code","0b893f77":"code","27a9d4b1":"code","79d5d59a":"code","4ab5082e":"code","b2c20bf3":"code","359c0132":"code","e71ec07f":"code","90ce700f":"code","cc4a6224":"code","188b0a39":"markdown","1c59b44c":"markdown","a0c70fcb":"markdown","f39552ee":"markdown","2e6afe43":"markdown","652535c0":"markdown"},"source":{"0dd5a20b":"# Set up code checking\nimport os\nif not os.path.exists(\"..\/input\/train.csv\"):\n    os.symlink(\"..\/input\/home-data-for-ml-course\/train.csv\", \"..\/input\/train.csv\")  \n    os.symlink(\"..\/input\/home-data-for-ml-course\/test.csv\", \"..\/input\/test.csv\")  \nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.ml_intermediate.ex1 import *\nprint(\"Setup Complete\")","06e8fbbd":"import pandas as pd\n# Read the data\nX_train_full = pd.read_csv('..\/input\/train.csv', index_col='Id')\nX_test_full = pd.read_csv('..\/input\/test.csv', index_col='Id')","6103c502":"X_train_full.head()","cd6fcb88":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nX_train_full.KitchenQual=le.fit_transform(X_train_full.KitchenQual)\nX_train_full.Condition1=le.fit_transform(X_train_full.Condition1)\nX_train_full.Condition2=le.fit_transform(X_train_full.Condition2)\nX_train_full.PavedDrive=le.fit_transform(X_train_full.PavedDrive)\nX_train_full.Neighborhood=le.fit_transform(X_train_full.Neighborhood)\nX_train_full.LotShape=le.fit_transform(X_train_full.LotShape)","90526797":"X_train_full.head()","cd07ede5":"X_train_full.KitchenQual.mode()","edc9027f":"X_train_full.Condition1.mode()","0e92263d":"X_train_full.Condition2.mode()","0e2b07cf":"X_train_full.PavedDrive.mode()","1258a46a":"X_train_full.Neighborhood.mode()","56f2a3e3":"X_train_full.LotShape.mode()","dcb8c14c":"X_train_full['KitchenQual'].fillna(3, inplace=True)\nX_train_full['Condition1'].fillna(2, inplace=True)\nX_train_full['Condition2'].fillna(2, inplace=True)\nX_train_full['PavedDrive'].fillna(2, inplace=True)\nX_train_full['Neighborhood'].fillna(12, inplace=True)\nX_train_full['LotShape'].fillna(3, inplace=True)","89198d3e":"X_train_full","0b893f77":"# Obtain target and predictors\ny = X_train_full.SalePrice\nfeatures = ['LotArea', 'PoolArea', 'PavedDrive', 'GarageArea', 'Condition2', 'Condition1', 'OverallQual', 'Neighborhood', 'LotShape','YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = X_train_full[features]\n\n# Break off validation set from training data\nfrom sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y)","27a9d4b1":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor()","79d5d59a":"from sklearn.metrics import mean_absolute_error\nmodel.fit(X_train, y_train)\npreds = model.predict(X_valid)\nprint(mean_absolute_error(y_valid, preds))","4ab5082e":"X_test_full.head()","b2c20bf3":"X_test_full.LotShape=le.fit_transform(X_test_full.LotShape)\nX_test_full.PavedDrive=le.fit_transform(X_test_full.PavedDrive)\nX_test_full.Condition1=le.fit_transform(X_test_full.Condition1)\nX_test_full.Condition2=le.fit_transform(X_test_full.Condition2)\nX_test_full.Neighborhood=le.fit_transform(X_test_full.Neighborhood)\nfeatures = ['LotArea', 'PoolArea', 'PavedDrive', 'GarageArea', 'Condition2', 'Condition1', 'OverallQual', 'Neighborhood', 'LotShape','YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = X_test_full[features]","359c0132":"X","e71ec07f":"preds = model.predict(X)","90ce700f":"len(X_test_full.index)","cc4a6224":"\noutput = pd.DataFrame({'Id': X_test_full.index,\n                       'SalePrice': preds})\noutput.to_csv('submission.csv', index=False)","188b0a39":"# Submit your results\n\nOnce you have successfully completed Step 2, you're ready to submit your results to the leaderboard!  First, you'll need to join the competition if you haven't already.  So open a new window by clicking on [this link](https:\/\/www.kaggle.com\/c\/home-data-for-ml-course).  Then click on the **Join Competition** button.\n\n![join competition image](https:\/\/i.imgur.com\/wLmFtH3.png)\n\nNext, follow the instructions below:\n1. Begin by clicking on the blue **Save Version** button in the top right corner of the window.  This will generate a pop-up window.  \n2. Ensure that the **Save and Run All** option is selected, and then click on the blue **Save** button.\n3. This generates a window in the bottom left corner of the notebook.  After it has finished running, click on the number to the right of the **Save Version** button.  This pulls up a list of versions on the right of the screen.  Click on the ellipsis **(...)** to the right of the most recent version, and select **Open in Viewer**.  This brings you into view mode of the same page. You will need to scroll down to get back to these instructions.\n4. Click on the **Output** tab on the right of the screen.  Then, click on the file you would like to submit, and click on the blue **Submit** button to submit your results to the leaderboard.\n\nYou have now successfully submitted to the competition!\n\nIf you want to keep working to improve your performance, select the blue **Edit** button in the top right of the screen. Then you can change your code and repeat the process. There's a lot of room to improve, and you will climb up the leaderboard as you work.\n","1c59b44c":"Filling NA values","a0c70fcb":"*To calculate zero values*","f39552ee":"# Keep going\n\nYou've made your first model. But how can you quickly make it better?\n\nLearn how to improve your competition results by incorporating columns with **[missing values](https:\/\/www.kaggle.com\/alexisbcook\/missing-values)**.","2e6afe43":"*To change string to numerical values*","652535c0":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161289) to chat with other Learners.*"}}