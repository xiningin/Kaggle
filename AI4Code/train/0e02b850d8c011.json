{"cell_type":{"aac767a7":"code","0828cfdd":"code","33ecbb35":"code","80948649":"code","00f30446":"code","be6e3cec":"code","da5afa2b":"code","a2f9086b":"code","8c6501af":"code","35b69958":"code","804dc76f":"markdown","559e77ce":"markdown","8ddbf6ea":"markdown","f786cc78":"markdown","10c3a244":"markdown","16830157":"markdown","6aa4404c":"markdown","0aaf3a42":"markdown"},"source":{"aac767a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0828cfdd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import classification_report\nfrom catboost import CatBoostClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","33ecbb35":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","80948649":"plt.figure(figsize=(15,6))\nax = sns.heatmap(df.corr(),cmap='coolwarm')","00f30446":"fig, (ax1, ax2) = plt.subplots(1, 2,\n                              figsize=(15,6))\nax1.hist(df.alcohol[(df.quality < 6)])\nax1.set_title(\"Alcohol amount in bad quality wine\")\nax1.set_xlabel('Alcohol amount', fontsize='x-large')\nax1.set_ylabel('Number of samples', fontsize='x-large')\nax2.hist(df.alcohol[(df.quality > 6)])\nax2.set_title('Alcohol amount in good quality wine')\nax2.set_xlabel('Alcohol amount', fontsize='x-large')\nax2.set_ylabel('Number of samples', fontsize='x-large');","be6e3cec":"df.quality.value_counts().plot(kind='bar');","da5afa2b":"df.quality = [1 if  i > 6 else 0 for i in df.quality]","a2f9086b":"X_wine = df.drop('quality', axis=1)\ny_wine = df['quality']\nX_train, X_test, y_train, y_test = train_test_split(X_wine, y_wine, test_size=0.2, random_state=42)","8c6501af":"scaler = StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","35b69958":"cat = CatBoostClassifier(silent=True)\ncat.fit(X_train, y_train)\ny_preds = cat.predict(X_test)\nprint(classification_report(y_test, y_preds, zero_division=0))","804dc76f":"# Plot the value count for each quality measure","559e77ce":"# Preparing the data ( train and test split)","8ddbf6ea":" # Correlation matrix","f786cc78":"# Fit and score ","10c3a244":"**We can see that quality 5 and 6 are the most dominant.**","16830157":"# Plot the high correlation alcohol vs quality","6aa4404c":"# Converting the quality column into binary\n* 0 for bad wine\n* 1 for good wine","0aaf3a42":"# Scaling the data with StandardScaler"}}