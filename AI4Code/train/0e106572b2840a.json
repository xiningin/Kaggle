{"cell_type":{"87b84be7":"code","5a51b66a":"code","f700bf91":"code","e3af1dab":"code","e04812bf":"code","771197be":"code","54638258":"code","46ad6541":"code","17d94ccc":"code","dc20b416":"code","e8540378":"code","7d1ef0bf":"code","9d912116":"code","f69f3288":"code","866a21cc":"code","6903b399":"code","7c08832f":"code","475b52e9":"code","8fd47812":"code","07d7e0c2":"code","8488231c":"code","e0a85b7a":"markdown"},"source":{"87b84be7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a51b66a":"matche_data = pd.read_csv('\/kaggle\/input\/skillsay-ai-crickethon-dataset\/matches.csv')\ndeliveri_data = pd.read_csv('\/kaggle\/input\/skillsay-ai-crickethon-dataset\/deliveries.csv')","f700bf91":"matche_data.head()","e3af1dab":"deliveri_data.head()","e04812bf":"import seaborn as sns\n","771197be":"sns.countplot(matche_data['season']) #matches per seasons ","54638258":"top_players= matche_data.groupby(['player_of_match'])['id'].count()\ntop_players.sort_values(ascending=False).head()","46ad6541":"top_players.sort_values(ascending=False).head().plot(kind='bar')","17d94ccc":"plt.subplots(figsize=(10,8))\nchart = sns.countplot(y=matche_data['player_of_match'],order = matche_data['player_of_match'].value_counts().iloc[:10].index)\nchart.set(xlabel='Total Matches Played', ylabel='player')\nplt.show()","dc20b416":"matche_data['winner'].head()","e8540378":"sns.countplot(matche_data['city'])\nsns.countplot(matche_data['city']).set_xticklabels(sns.countplot(matche_data['city']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,12)\nplt.title('Location wise match count')","7d1ef0bf":"\ntype_plt=pd.crosstab(matche_data['city'],matche_data['winner'])\ntype_plt.plot(kind='bar',stacked=True);\nplt.title('city - winner',fontsize=20,fontweight='bold')\nplt.ylabel('count',fontsize=12,fontweight='bold')\nplt.xlabel('city',fontsize=12,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nfig = plt.gcf()\nfig.set_size_inches(15,15)\n","9d912116":"plt.subplots(figsize=(10,6))\nsns.countplot(x='season',hue='toss_decision',data=matche_data)\nplt.show()","f69f3288":"match = matche_data.drop_duplicates(subset=['season'],\n                                  keep='last')[['season', 'winner','city']].reset_index(drop=True)\nmatch.sort_values(by='season')","866a21cc":"deliveri_data.head()","6903b399":"total_run_of_players = deliveri_data.groupby(['batsman'])['total_runs'].count()\ntotal_run_of_players = pd.DataFrame(total_run_of_players)\ntop_20_runners = total_run_of_players.sort_values(by='total_runs',ascending=False).head(20)","7c08832f":"top_20_runners.plot(kind='bar',\n                   title = 'Top 20 Runners',\n                   color=sns.color_palette('BuPu_r',100),\n                   figsize=[20,10])\nplt.show()","475b52e9":"batsman_with_most_number_of_boundires = deliveri_data.groupby('batsman')['batsman_runs'].agg(lambda x : \n                    (x == 4).sum()).reset_index().sort_values(by='batsman_runs',\n                    ascending=False).reset_index(drop=True)\ntop_20_players_with_most_boundires = batsman_with_most_number_of_boundires[:20]","8fd47812":"boundires = deliveri_data.groupby('batsman')['batsman_runs'].agg(lambda x : \n                    (x == 4).sum())\nboundires = pd.DataFrame(boundires)\ntop_20_boundires_played = boundires.sort_values(by='batsman_runs',ascending=False).head(20)\ntop_20_boundires_played.plot(kind='bar',\n                   title = 'Top 20 Played Boundries by Players',\n                   \n                   figsize=[20,10])\nplt.show()","07d7e0c2":"batsman_with_most_number_of_boundires = deliveri_data.groupby('batsman')['batsman_runs'].agg(lambda x : \n                    (x == 6).sum()).reset_index().sort_values(by='batsman_runs',\n                    ascending=False).reset_index(drop=True)\ntop_20_players_with_most_boundires = batsman_with_most_number_of_boundires[:20]\nboundires = deliveri_data.groupby('batsman')['batsman_runs'].agg(lambda x : \n                    (x == 6).sum())\nboundires = pd.DataFrame(boundires)\ntop_20_boundires_played = boundires.sort_values(by='batsman_runs',ascending=False).head(20)\ntop_20_boundires_played.plot(kind='bar',\n                   title = 'most sixer',\n                   color=sns.color_palette('autumn',2),\n                   figsize=[20,10])\nplt.show()","8488231c":"plt.figure(figsize=(12,6))\nsns.countplot(x='dismissal_kind', data=deliveri_data)\nplt.xticks(rotation='vertical')\nplt.show()","e0a85b7a":"Top 5 winner teams "}}