{"cell_type":{"ef036fe6":"code","c2e5e743":"code","7ce02a63":"code","416fb72e":"code","f85b6611":"code","8e0549f4":"code","b377a8f0":"code","272f0388":"code","29733037":"code","9462f67d":"code","c09182a1":"code","f97e5531":"code","25c6ec9c":"markdown","c9f711b4":"markdown","717222c9":"markdown","18332716":"markdown","c3023f1a":"markdown"},"source":{"ef036fe6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # Plotting Library for data\nimport seaborn as sns # Plotting Library for data\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c2e5e743":"# To use any kind of data, first we should load the data. Since the current data in .csv format we use pandas read_csv method.\n## Important note: Because the default utf-8 can't decode some bytes and throws an error, encoding parameter with a value ISO-8859-1 is added.\n## Changing the default engine parameter may be the other solution for this error\ndata = pd.read_csv('..\/input\/globalterrorismdb_0617dist.csv',encoding='ISO-8859-1')","7ce02a63":"#check the data loaded properly\ndata.head() #show first 5 records with headers","416fb72e":"#Rename column names with more meaningful text\ndata.rename(columns={'iyear':'Year',\n                     'imonth':'Month',\n                     'iday':'Day',\n                     'approxdate':'ApproxDate',\n                     'country':'CountryCode',\n                     'country_txt':'Country',\n                     'region':'RegionCode',\n                     'region_txt':'Region',\n                     'attacktype1_txt':'AttackType',\n                     'target1':'Target',\n                     'targtype1_txt':'TargetType',\n                     'weaptype1_txt':'WeaponType',\n                     'attacktype1':'AttackTypeCode',\n                     'attacktype2':'AttackTypeCode2',\n                     'attacktype2_txt':'AttackType2',\n                     'attacktype3':'AttackTypeCode3',\n                     'attacktype3_txt':'AttackType3',\n                     'targtype1':'TargetTypeCode',\n                     'targsubtype1':'TargetSubtypeCode',\n                     'weapsubtype4':'WeapSubtypeCode',\n                     'weapsubtype4_txt':'WeapSubtype',\n                     'propextent':'PropExtendCode',\n                     'propextent_txt':'PropExtend'},inplace=True)","f85b6611":"#have a look at the data with new column names\ndata.head()","8e0549f4":"#General info about data columns\ndata.info(1)\n#Result: the dataframe has 135 column with different types (int64, object, float64) and has 170350 records in total ","b377a8f0":"#basic statistical information of columns\ndata.describe()","272f0388":"## correlation between columns\n##This is a matrix version of data, and shows if any meaningful relations between columns.\n## +1 maximum positive correlation\n## -1 maximum negative correlation\n## 0 no correlation at all\n## e.g: released and claimmode3 have one the most powerful positive correlation with the score of 068\n## non-numeric columns automatically eliminated by python\ndata.corr()","29733037":"#Correlation Graph with Seaborn\n\n_,ax = plt.subplots(figsize=(50, 50))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","9462f67d":"# Line Plot with Matplotlib\n# for selecting data: data.TableColumn.plot--->kind=line for line plot\n# legend=legend box of data columns\n# title=graph title\n# tick_params=to change the font size of labels\n# plt.show=for drawing plot without an output with an extra text information\n\ndataX=data[0:500] #first 500 records of the original dataset\ndataX.TargetSubtypeCode.plot(kind = 'line', color = 'green',label = 'TargetSubtypeCode',linewidth=1,alpha = 0.8,grid = True,linestyle = '-')\ndataX.TargetTypeCode.plot(kind = 'line', color = 'red',label = 'TargetTypeCode',linewidth=1.5,alpha = 0.8,grid = True,linestyle = '-',figsize = (60,12))\nplt.legend(loc='upper right')\nplt.title('Line Plot',fontsize=40)    \nplt.legend(loc='upper right',prop={'size': 32})\nplt.tick_params(axis='both', which='major', labelsize=30)\nplt.show()","c09182a1":"#Histogram  with Matplotlib\n# for selecting data: data.TableColumn.plot--->kind=hist for histogram plot\ndataX=data[0:500] #first 500 records of the original dataset\ndataX.TargetSubtypeCode.plot(kind = 'hist', color = 'green',label = 'TargetSubtypeCode',linewidth=1,bins = 30,alpha = 0.5,grid = True)\ndataX.TargetTypeCode.plot(kind = 'hist', color = 'red',label = 'TargetTypeCode',bins = 20,linewidth=1,alpha = 0.8,grid = True,figsize = (60,12))\nplt.legend(loc='upper right',prop={'size': 32})\nplt.tick_params(axis='both', which='major', labelsize=30)","f97e5531":"# Scatter with Matplotlib\n# for selecting data: data.plot--->kind=scatter for scatter plot, x=data column for x axis, y=data column for y axis\ndata.plot(kind='scatter', x='TargetSubtypeCode', y='TargetTypeCode',alpha = 0.8,color = 'red')\nplt.xlabel('TargetSubtypeCode')              \nplt.ylabel('TargetTypeCode')\nplt.title('Scatter Plot')            ","25c6ec9c":"<h2>3. Fundamental Data Plotting<\/h2>\n\nAlthough there are many useful plotting libraries such as;\n* [Matplotlib](https:\/\/matplotlib.org\/)\n* [Seaborn](https:\/\/seaborn.pydata.org\/)\n* [Plotly](https:\/\/plot.ly\/pandas\/)\n\nI used some basic plots to understand and practice the main concept.\nI advise to check different plotting and graph galleries on the internet. \n\nThis [link](https:\/\/python-graph-gallery.com\/) is one of the useful resources to have some intuition about capabilities of related libraries.","c9f711b4":"<h2> 4. Conclusion <\/h2>\nThis is my first Kernel and I aimed to both study for data analysis coding and also taking notes for the use of anybody. needed.  I'm planning to improve it parallel to improving my skills\n\n\n\n\n\n\n","717222c9":"<h2>2.[](http:\/\/) Basic Data Understanding<\/h2>\nPython has some good functions to have an idea about the data.\n","18332716":"<h2>1.Import Data<\/h2>\n\n> The following code was created automatically by Kaggle after the notebook created on the selected dataset.","c3023f1a":"<h1>INTRODUCTION<\/h1>\n\nThis notebook is created as a first assignment  **of the Udemy course named \"Data Science and Python\" by Kaan Can Y\u0131lmaz.\n* Please follow this [link](https:\/\/www.udemy.com\/data-science-sfrdan-uzmanlga-veri-bilimi-2\/) for the course. I highly recommend this course for the basic concepts. (Course language is Turkish)\n* You can visit [Kaan Can's profile](https:\/\/www.kaggle.com\/kanncaa1) for his kernels and other useful resources\n\nBesides, I shared my codes explanations and comments about my lessons learned. I hope this will help anybody who wants to start data analysis via Kaggle whether follows the Kaan's Udemy course or use other resources. \n\nThis notebook is including"}}