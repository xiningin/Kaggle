{"cell_type":{"e4f81f03":"code","d9d5af43":"code","5267856e":"code","aa9c2d35":"code","4eea2751":"code","f8dba027":"code","61267134":"code","33f39053":"code","5b18d91c":"code","7ca93831":"code","af303eb8":"code","9a1168ab":"code","690aa33e":"code","fee54706":"code","56560da3":"code","8183027e":"code","0f7e36ad":"code","1d093312":"code","28a34b2b":"code","7305a7de":"code","ddaa9046":"code","8be4c092":"code","a484cd11":"code","0d8cf34f":"code","095d4e02":"code","6382b92d":"code","7c2f272a":"code","4dccceef":"code","5ddce2bf":"code","19133b1a":"code","14466b58":"code","799fee8a":"code","376cf3f0":"code","c9ecf8d8":"code","bd1ebcae":"code","dc69dcec":"code","70c6a2d3":"code","dcaa41cb":"code","633d18d2":"code","9cbb3f4e":"code","ad52ffb1":"code","294330a3":"code","e4e2f30b":"code","d7b5d43c":"code","a481efe8":"code","7070a280":"code","c391fffc":"code","13743db8":"code","76fecbc7":"code","7a1d387a":"code","0eb7de9b":"code","66e7f658":"code","8c47f915":"code","b099159e":"code","e8d88454":"code","bb53e8a6":"code","5529e4f5":"code","209a7dc1":"code","a0b046b5":"code","f0ebb250":"code","e5f0e63a":"code","9521b955":"code","9970073b":"code","bff8ea96":"code","d6c16388":"code","a32d9092":"code","7d5d4326":"code","96bcb2ba":"code","09734229":"code","0669f7b6":"code","62cbbb57":"code","6711e563":"code","8cf1bad9":"markdown","1fc1d737":"markdown","ee339346":"markdown","d6294d64":"markdown","b80dcf73":"markdown","fe30bfc0":"markdown","88b79da8":"markdown","af1f60f9":"markdown","200a4829":"markdown","ed4cb275":"markdown","16cc8555":"markdown","a3b0b53d":"markdown","e4b46142":"markdown","034fdf02":"markdown","785647b3":"markdown","80472f42":"markdown","3d1f4495":"markdown","c36ddecf":"markdown","619b5312":"markdown","94f2e4ec":"markdown","1fa92070":"markdown","f16a5673":"markdown","a38b5945":"markdown","5c44e020":"markdown","0e6e4022":"markdown","5d9c2ecc":"markdown","e9f7e5e5":"markdown","91d23051":"markdown","f4db9251":"markdown","b3e9e13e":"markdown","3e029931":"markdown","96811597":"markdown","3060ff0b":"markdown","9be4159b":"markdown","7ba9ac73":"markdown","caf7982a":"markdown","112316b8":"markdown","df8a3cd3":"markdown","66d22793":"markdown","6dd3ea78":"markdown","980677c1":"markdown","27a73cef":"markdown","58e929e1":"markdown","5b099435":"markdown","6322964d":"markdown","3833e630":"markdown","f5322d0a":"markdown"},"source":{"e4f81f03":"import warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')","d9d5af43":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nsns.set()","5267856e":"# Read the dataset\n\nbike= pd.read_csv(\"..\/input\/bike-sharing-demand-day\/day.csv\")","aa9c2d35":"# Let's see how our dataset looks like\n\nbike.head()","4eea2751":"# Let's see how many rows and columns we have\n\nbike.shape","f8dba027":"#Let's get some information on the dataset\n\nbike.info()","61267134":"# Let's see some summary\n\nbike.describe()","33f39053":"# To check if there are any missing values in the dataset\n\nimport missingno as mn\nmn.matrix(bike)","5b18d91c":"bike['dteday'].dtype","7ca93831":"bike['dteday'] =  pd.to_datetime(bike['dteday'],format='%d-%m-%Y')\nbike['dteday'].dtype","af303eb8":"bike['year'] = pd.DatetimeIndex(bike['dteday']).year\nbike['month'] = pd.DatetimeIndex(bike['dteday']).month","9a1168ab":"bike.head()","690aa33e":"# Dropping the columns as we have extracte#d the correct year and month from the date.\n\nbike.drop(['yr','mnth'],axis=1,inplace=True)","fee54706":"bike.head()","56560da3":"#Dropping the redundant variable holiday as the workingday column covers enough information that is required.\n\nbike.drop('holiday',axis=1,inplace=True)","8183027e":"# Dropping the dteday,instant,casual and registered columns.\n\nbike.drop(['dteday','instant','casual','registered'],axis=1,inplace=True)","0f7e36ad":"bike.head()","1d093312":"# Renaming some columns for better understanding\n\nbike.rename(columns={'hum':'humidity','cnt':'count'},inplace=True)","28a34b2b":"bike.head()","7305a7de":"codes = {1:'spring',2:'summer',3:'fall',4:'winter'}\nbike['season'] = bike['season'].map(codes)","ddaa9046":"sns.barplot('season','count',data=bike)","8be4c092":"codes = {1:'Clear',2:'Mist',3:'Light Snow',4:'Heavy Rain'}\nbike['weathersit'] = bike['weathersit'].map(codes)","a484cd11":"sns.barplot('weathersit','count',data=bike)","0d8cf34f":"codes = {1:'working_day',0:'Holiday'}\nbike['workingday'] = bike['workingday'].map(codes)","095d4e02":"sns.barplot('workingday','count',data=bike,palette='cool')","6382b92d":"codes = {2019:1,2018:0}\nbike['year'] = bike['year'].map(codes)","7c2f272a":"sns.barplot('year','count',data=bike,palette='dark')","4dccceef":"codes = {1:'Jan',2:'Feb',3:'Mar',4:'Apr',5:'May',6:'June',7:'July',8:'Aug',9:'Sep',10:'Oct',11:'Nov',12:'Dec'}\nbike['month'] = bike['month'].map(codes)","5ddce2bf":"plt.figure(figsize=(10,5))\nsns.barplot('month','count',hue='year',data=bike,palette='Paired')","19133b1a":"codes = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\nbike['weekday'] = bike['weekday'].map(codes)","14466b58":"bike.groupby('weekday')['count'].max().plot(kind='bar')","799fee8a":"plt.scatter('temp','count',data=bike)","376cf3f0":"plt.scatter('atemp','count',data=bike)","c9ecf8d8":"plt.scatter('humidity','count',data=bike)","bd1ebcae":"plt.scatter('windspeed','count',data=bike)","dc69dcec":"sns.distplot(bike['count'])","70c6a2d3":"sns.pairplot(bike)","dcaa41cb":"plt.figure(figsize = (12,6))\nsns.heatmap(bike.corr(),annot=True)","633d18d2":"data= bike[['temp','atemp','humidity','windspeed']]\nsns.heatmap(data.corr(),annot=True)","9cbb3f4e":"bike.drop('atemp',axis=1,inplace=True)","ad52ffb1":"bike.head()","294330a3":"seasons = pd.get_dummies(bike['season'],drop_first=True)\n\nworking_day = pd.get_dummies(bike['workingday'],drop_first=True)\n\nweather= pd.get_dummies(bike['weathersit'],drop_first=True)\n\nmonth= pd.get_dummies(bike['month'],drop_first=True)\n\nweek_day= pd.get_dummies(bike['weekday'],drop_first=True)","e4e2f30b":"bike= pd.concat([bike,seasons,working_day,weather,month,week_day],axis=1)","d7b5d43c":"bike.head()","a481efe8":"# Dropping the categorical variables as they are already dummy-encoded.\n\nbike.drop(['season','workingday','weathersit','weekday','month'],axis=1,inplace=True)","7070a280":"bike.head()","c391fffc":"from sklearn.model_selection import train_test_split\n\nnp.random.seed(0)\ndf_train, df_test = train_test_split(bike, train_size = 0.7, test_size = 0.3, random_state = 100)","13743db8":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()","76fecbc7":"# Apply scaler() to all the columns except the'dummy' variables.\n\nnum_vars=['temp','humidity','windspeed','count']\n\ndf_train[num_vars]= scaler.fit_transform(df_train[num_vars])","7a1d387a":"plt.scatter('temp','count',data=df_train)","0eb7de9b":"y_train = df_train.pop('count')\nX_train = df_train","66e7f658":"# Importing RFE and LinearRegression\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression","8c47f915":"# Running RFE with the output number of the variable equal to 10\n\nlm = LinearRegression()\nlm.fit(X_train, y_train)\n\nrfe = RFE(lm,10) # running RFE\nrfe = rfe.fit(X_train, y_train)","b099159e":"list(zip(X_train.columns,rfe.support_,rfe.ranking_))","e8d88454":"col = X_train.columns[rfe.support_]\ncol","bb53e8a6":"# Creating X_test dataframe with RFE selected variables\nX_train_rfe = X_train[col]","5529e4f5":"# Adding a constant variable \nimport statsmodels.api as sm  \nX_train_rfe = sm.add_constant(X_train_rfe)","209a7dc1":"lm = sm.OLS(y_train,X_train_rfe).fit()   # Running the linear model","a0b046b5":"lm.summary()","f0ebb250":"X_train1= X_train_rfe.drop('Mon',1)","e5f0e63a":"X_train2= sm.add_constant(X_train1)\nlm1 = sm.OLS(y_train,X_train2).fit() ","9521b955":"lm1.summary()","9970073b":"X_train_new= X_train2.drop('const',axis=1)","bff8ea96":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\nvif = pd.DataFrame()\nX = X_train_new\nvif['Features'] = X.columns\nvif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","d6c16388":"y_train_pred = lm1.predict(X_train2)","a32d9092":"fig = plt.figure()\nsns.distplot((y_train - y_train_pred), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18)     ","7d5d4326":"num_vars=['temp','humidity','windspeed','count']\n\ndf_test[num_vars]= scaler.transform(df_test[num_vars])","96bcb2ba":"y_test = df_test.pop('count')\nX_test = df_test","09734229":"# Now let's use our model to make predictions.\n\n# Creating X_test_new dataframe by dropping variables from X_test\nX_test_new = X_test[X_train_new.columns]\n\n# Adding a constant variable \nX_test_new = sm.add_constant(X_test_new)","0669f7b6":"# Making predictions\ny_test_pred = lm1.predict(X_test_new)","62cbbb57":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test,y_test_pred)\nfig.suptitle('Actual vs Predictions', fontsize=20)              # Plot heading \nplt.xlabel('Actual', fontsize=18)                          # X-label\nplt.ylabel('Predictions', fontsize=16)                          # Y-label","6711e563":"from sklearn.metrics import r2_score\nr2_score(y_test, y_test_pred)","8cf1bad9":"## **8) atemp**","1fc1d737":"## Step 5: Splitting the Data into Training and Testing Sets","ee339346":"## Importing Relevant Libraries","d6294d64":"## Conclusion:\n    \n**The top 5 variables that are seen effecting and benefitting the Bike Rental count are as follows:**\n\n* Spring season : -0.6842\n* Temperature   :  0.3999\n* Mist\t        : -0.3647\n* Sun\t        :  0.2749\n* working_day\t:  0.2327","b80dcf73":"## **2) weathersit**\n\n* 1: Clear, Few clouds, Partly cloudy, Partly cloudy\n* 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n* 3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n* 4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog","fe30bfc0":"## Step 2: Encoding the Labels & Visualization","88b79da8":"## Step 8: Making Predictions","af1f60f9":"### Bike Rental popularity has increased in 2019 when compared to 2018.","200a4829":"## Problem Statement","ed4cb275":"### Dividing into X_test and y_test","16cc8555":"A bike-sharing system is a service in which bikes are made available for shared use to individuals on a short term basis for a price or free. Many bike share systems allow people to borrow a bike from a \"dock\" which is usually computer-controlled wherein the user enters the payment information, and the system unlocks it. This bike can then be returned to another dock belonging to the same system.\n\nA US bike-sharing provider BoomBikes has recently suffered considerable dips in their revenues due to the ongoing Corona pandemic. The company is finding it very difficult to sustain in the current market scenario. So, it has decided to come up with a mindful business plan to be able to accelerate its revenue as soon as the ongoing lockdown comes to an end, and the economy restores to a healthy state.\n\nIn such an attempt, BoomBikes aspires to understand the demand for shared bikes among the people after this ongoing quarantine situation ends across the nation due to Covid-19. They have planned this to prepare themselves to cater to the people's needs once the situation gets better all around and stand out from other service providers and make huge profits.\n\nThey have contracted a consulting company to understand the factors on which the demand for these shared bikes depends. Specifically, they want to understand the factors affecting the demand for these shared bikes in the American market. The company wants to know:\n\n* Which variables are significant in predicting the demand for shared bikes.\n* How well those variables describe the bike demands Based on various meteorological surveys and people's styles, the service provider firm has gathered a large dataset on daily bike demands across the American market based on some factors.\n\n**Business Goal:** You are required to model the demand for shared bikes with the available independent variables. It will be used by the management to understand how exactly the demands vary with different features. They can accordingly manipulate the business strategy to meet the demand levels and meet the customer's expectations. Further, the model will be a good way for management to understand the demand dynamics of a new market.","a3b0b53d":"### Bike Rentals are more during the Fall(Monsoon) season.","e4b46142":"### Now we have all the variables with p-value less than 0.05.","034fdf02":"### Bike Rentals are observed at higher temperatures.","785647b3":"### Bike Rentals are observed at higher \"feel-like\" temperatures.","80472f42":"## **7) temp**","3d1f4495":"### Bike Rentals are maximum on Sunday and Monday","c36ddecf":"### All the variables have VIF less than 5 and it's perfect!","619b5312":"### It is observed that atemp and temp are highly correlated and one can be dropped to avoid multicollinearity.","94f2e4ec":"### Rescaling the Features","1fa92070":"## Step 1: Reading and Understanding the Data","f16a5673":"### Bikes seem to be rented more on working days.","a38b5945":"### Using Recursive feature elimination(RFE) for automated Feature Selection approach","5c44e020":"### There are no missing values in the dataset","0e6e4022":"### Let's convert the datatype of dteday column to datetime.","5d9c2ecc":"### Dividing into X and Y sets for the model building","e9f7e5e5":"## **6) WeekDay:**\n\n* 0:Mon\n* 1:Tue\n* 2:Wed\n* 3:Thu\n* 4:Fri\n* 5:Sat\n* 6:Sun","91d23051":"## **3) workingday**\n\n* if day is neither weekend nor holiday is 1,\n* otherwise is 0","f4db9251":"## 10) Windspeed","b3e9e13e":"## **5) Month**\n\n* 1:Jan\n* 2:Feb\n* 3:Mar\n* 4:Apr\n* 5:May\n* 6:June\n* 7:July\n* 8:Aug\n* 9:Sep\n* 10:Oct\n* 11:Nov\n* 12:Dec","3e029931":"## 9) Humidity","96811597":"## Step 9: Model Evaluation","3060ff0b":"### Missing Values","9be4159b":"## **1) season**\n\n* 1:spring\n* 2:summer\n* 3:fall\n* 4:winter","7ba9ac73":"### Temperature being directly proportional to Humidity, Bike Rentals are making during high humidity.","caf7982a":"### Bikes seem to be rented more in Partly cloudy weather.","112316b8":"### Dropping Mon as it is insignificant.","df8a3cd3":"### Wind speeds increase with a greater temperature difference.Wind speed near the surface is most highly correlated with the temperature.","66d22793":"## Thanks for reading!\n**Please share your valuable thoughts in comments!****","6dd3ea78":"### Extracting the Year and Month from the Date","980677c1":"## **Assumptions of Linear Regression:**\n\n* The error terms are normally distributed.\n* The training and testing accuracy are nearly equal hence there is no Overfit\/Underfit situation.\n* The predicted values have linear relationship with the actual values.****","27a73cef":"## Step 7: Residual Analysis of the train data","58e929e1":"## Step 6: Building a linear model","5b099435":"## Step 4 : Dealing With Categorical Variables","6322964d":"### Variance Inflation Factor(VIF)","3833e630":"## **4) year**\n\n* 2018:0\n* 2019:1","f5322d0a":"## Step 3: Visualizing the Relationship among variables"}}