{"cell_type":{"d1391127":"code","160a3539":"code","114422a1":"code","bef5baa2":"code","ead22e5a":"code","080c3ffe":"code","ebfb93f3":"code","726aaf30":"code","ff824f2f":"code","f04b067f":"code","08c70373":"code","569cd7cc":"code","bcd3cbc4":"code","15594bfe":"code","01d61d94":"code","da3c5253":"code","691ac11d":"code","c00558ab":"code","8f5ee32d":"code","133d4225":"code","429293eb":"code","bbd4603d":"code","8b22f2d9":"code","d092162c":"code","f359e26c":"code","eee02673":"code","216155ec":"code","15abe50b":"code","3a71f560":"code","bfe014ab":"code","2aaa7b7d":"code","acfea257":"code","04d4e2b6":"code","850d80d8":"code","4de321dd":"code","3aef9896":"code","6b342f22":"code","3abb0fec":"code","e1cc9198":"code","3b4b27e2":"code","591fa301":"code","f3dfd08d":"code","9297b265":"code","db614f1a":"code","422409c0":"markdown","7899899c":"markdown","f48b0286":"markdown","aeef9992":"markdown","4b5c8549":"markdown","39783228":"markdown","5fcbc028":"markdown","174763af":"markdown","fa1f73c7":"markdown","d17e5fb3":"markdown","4eea7af3":"markdown","40a7e40f":"markdown"},"source":{"d1391127":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","160a3539":"#Imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","114422a1":"gps = pd.read_csv('..\/input\/googleplaystore.csv')\n","bef5baa2":"gps.columns = [x.strip().replace(' ', '_') for x in gps.columns]\ngps.rename(columns={'Price':'Price_in_Dollars'}, inplace=True)\n","ead22e5a":"gps.Size=[x.strip().replace('1,000','1000') for x in gps.Size]\ngps.Size=[x.strip().replace('Varies with device','9999') for x in gps.Size]","080c3ffe":"def num_size(Size):\n    if Size[-1] == 'k':\n        return float(Size[:-1])*1000\n    else:\n        return float(Size[:-1])*1000000","ebfb93f3":"gps['Size']=gps['Size'].map(num_size).astype(float)","726aaf30":"def func(x):\n    try:\n        float(x)\n        return True\n    except ValueError:\n        return False\n\na=gps.Size.apply(lambda x: func(x))\na.head()","ff824f2f":"#To find if there are any string values \ngps.Size[~a].value_counts()","f04b067f":"gps.Installs=[x.strip().replace('+','') for x in gps.Installs]\ngps.Installs=[x.strip().replace(',','') for x in gps.Installs]\ngps[gps['Installs']=='Free']\ngps.drop([10472], inplace=True)\ngps.Installs[~a].value_counts()\n","08c70373":"gps['Android_Ver']=gps['Android_Ver'].astype('str')\ngps['Android_Ver'] = gps.Android_Ver.apply(lambda x: x.replace(' and up', ''))\ngps['Android_Ver'] = gps.Android_Ver.apply(lambda x: x.replace('Varies with device', '9999'))\na=gps.Android_Ver.apply(lambda x: func(x))\ngps.Android_Ver[~a].value_counts()","569cd7cc":"#Considering the lowest value of Android version\n\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('nan', '9999'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('4.4W', '4.4'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('5.0 - 8.0', '5.0'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('4.0.3 - 7.1.1', '4.0.3'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('5.0 - 6.0', '5.0'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('5.0 - 7.1.1', '5.0'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('4.1 - 7.1.1', '4.1'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('2.2 - 7.1.1', '2.2'))\ngps['Android_Ver']=gps.Android_Ver.apply(lambda x: x.replace('7.0 - 7.1.1', '7.0'))","bcd3cbc4":"#Considering all 'Varies with device' as 9999\n\ngps['Current_Ver'] = gps.Android_Ver.apply(lambda x: x.replace('Varies with device', '9999'))","15594bfe":"#A lot of null values were found in the dataset. These null values were replaced by mean of all the reatings.\n\n\nplt.figure(figsize=(15,5))\nsns.countplot(x='Rating',data=gps)","01d61d94":"plt.figure(figsize=(5,5))\nplt.tight_layout()\nsns.boxplot(x='Type', y='Rating', data=gps)\n","da3c5253":"gps.drop([9148], inplace=True)","691ac11d":"#Demographics of columns with null values\n\nsns.heatmap(gps.isnull(),yticklabels=False, cbar=False, cmap= 'viridis')","c00558ab":"gps['Rating'].fillna(value=round(gps['Rating'].mean(),1), inplace= True)","8f5ee32d":"#Filling the null values with mean of the column\n\nsns.heatmap(gps.isnull(),yticklabels=False, cbar=False, cmap= 'viridis')","133d4225":"sns.heatmap(gps.corr())","429293eb":"gps['Reviews']=gps['Reviews'].astype('float')\nsns.jointplot(x='Rating', y='Reviews', kind='hex', data=gps)","bbd4603d":"gps.groupby('Category')['Category'].agg({'Occ':len}).sort_values('Occ', ascending=False)","8b22f2d9":"sns.countplot(x='Category', data=gps)\nplt.xticks(rotation=90)","d092162c":"g=pd.DataFrame(gps.groupby('Content_Rating')['Content_Rating'].count())\ncont = list(gps.Content_Rating.unique())\ncont","f359e26c":"g","eee02673":"\nplt.tight_layout()\nplt.figure(figsize=(5,5))\nplt.pie(g, labels=cont, startangle = -90, autopct = '%.2f%%')","216155ec":"plt.figure(figsize=(15,15))\nsns.barplot(x='Rating', y='Category', data=gps)\n\n","15abe50b":"gps['Installs'] = gps['Installs'].astype(int)","3a71f560":"#Categories with hishest rating\n\nrating5=pd.DataFrame(gps[gps['Rating']==5.0]).reset_index()\nrating5.drop(columns=['index'], inplace=True)","bfe014ab":"rating5.head()","2aaa7b7d":"rating5.nlargest(5,'Reviews')","acfea257":"rating5.nlargest(5,'Installs')","04d4e2b6":"n=gps.Installs\nnum=[]\n\nfor i in n:\n    if i <=100:\n        num.append('A')\n    elif 101<i<100000:\n        num.append('B')\n    elif 100001<i<100000000:\n        num.append('C')\n    else:\n        num.append('Highest')\n\n        \ngps['Group'] = num","850d80d8":"installs=pd.DataFrame(gps.groupby('Group')['Group'].agg({'Count':len}).sort_values('Group', ascending=True))","4de321dd":"sns.countplot(x='Group', data=gps, palette='husl', order=gps['Group'].value_counts().index)\nplt.title(\"Grouping of Installed Apps\")","3aef9896":"plt.figure(figsize=(5,5))\nsns.barplot(x='Group', y='Rating', data=gps, hue='Type', palette='husl')\nplt.legend(loc=4)\nplt.title('Number of applications installed and their ratings with respect to the type of application')","6b342f22":"plt.figure(figsize=(5,5))\nsns.barplot(x='Group', y='Reviews', data=gps, hue='Type', palette='husl')\nplt.legend(loc=0)\nplt.title('Group of installed applications with respect to Reviews and type')","3abb0fec":"gps['Reviews']=gps['Reviews'].astype(int)","e1cc9198":"top5reviews=gps.nlargest(15,'Reviews')\ntop5reviews = top5reviews.sort_values(by='Reviews', ascending=False).drop_duplicates('App')\ntop5reviews.plot(x='App',y='Reviews', kind='bar')\nplt.xlabel('Applications')\nplt.ylabel('Reviews')\nplt.title('Top 5 Applications with highest Reviews')","3b4b27e2":"\nplt.figure(figsize=(5,5))\nax=sns.barplot(x='Installs', y='Category', data=gps)\nplt.xticks(rotation=90)","591fa301":"plt.figure(figsize=(5,15))\nsns.barplot(x='Size', y='Category', data=gps)","f3dfd08d":"cat_size=gps[(gps['Category']=='COMMUNICATION') & (gps['Size']<=50000000)]\nlarge_cat_size=cat_size.nlargest(10, 'Installs')\nlarge_cat_size=large_cat_size.sort_values('Installs', ascending = False).drop_duplicates('App')\nlarge_cat_size.plot(x='App',y='Installs', kind='bar')\nplt.xlabel('Applications')\nplt.ylabel('Installs')\nplt.title('Top 5 Communication Applications with highest Installs')\nplt.xticks(rotation=75)","9297b265":"cat_soc=gps[(gps['Category']=='SOCIAL')&(gps['Size']<50000000)]\nlarge_cat_soc=cat_soc.nlargest(6, 'Installs')\nlarge_cat_soc=large_cat_soc.sort_values(by='Installs',ascending=False).drop_duplicates('App')\nlarge_cat_soc.plot(x='App',y='Installs', kind='bar')\nplt.xlabel('Applications')\nplt.ylabel('Installs')\nplt.title('Top 5 Social Applications with highest Installs')\nplt.xticks(rotation=75)\n","db614f1a":"cat_vp=gps[(gps['Category']=='VIDEO_PLAYERS')&(gps['Size']<50000000)]\nlarge_cat_vp=cat_vp.nlargest(6, 'Installs')\nlarge_cat_vp=large_cat_vp.sort_values(by='Installs',ascending=False).drop_duplicates('App')\nlarge_cat_vp.plot(x='App',y='Installs', kind='bar')\nplt.xlabel('Applications')\nplt.ylabel('Installs')\nplt.title('Top 5 Video Player Applications with highest Installs')\nplt.xticks(rotation=75)\n","422409c0":"## Analysis","7899899c":"**Top 5 Applications with highest installs that are rated 5.0 on the scale of 5.0**","f48b0286":"**Users are more interested in free applications and hence these applications have a higher number of reviews**","aeef9992":"## Data Cleaning","4b5c8549":"**Applications installed in less number have the highest rating. However, majority of the applications are Free of cost. We can conclude that these applications could be new and tried and reviewed by lesser number of users**","39783228":"**Top 5 Applications with highest reviews that are rated 5.0 on the scale of 5.0**","5fcbc028":"**These are the top 5 suggested Social category applications that have the highest installs which are less than 50MB which will take less space and are also free of cost.**","174763af":"**These are the top 5 suggested Video players category applications that have the highest installs which are less than 50MB which will take less space and are also free of cost.**","fa1f73c7":"**These are the top 5 suggested Communication category applications that have the highest installs which are less than 50MB which will take less space and are also free of cost.**","d17e5fb3":"**User behavior shows a large number of installation of applications in Communication, Video Player and Social**","4eea7af3":"**Categories - Family, Game, Tools have the highest number of applications in this dataset**","40a7e40f":"**Grouping thenumber of installs in 4 groups -A, B, C, Highest**"}}