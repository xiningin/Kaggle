{"cell_type":{"f40b85a9":"code","24def285":"code","72d79445":"code","a044cb8f":"code","bce50155":"code","f5cf7c5b":"code","832bdab5":"code","b5dd5455":"code","7f35afc6":"code","c5e5f766":"code","543e246b":"code","f2b0ddb2":"code","bf0e618a":"code","35c06f90":"code","d43e349c":"code","c295a6f0":"code","1c9c871a":"code","2746efb6":"code","5346ceb7":"code","ee1d50ce":"code","f1890789":"code","a79a086d":"code","4fad80a3":"code","e5c732a2":"code","ada9edf1":"code","d859159b":"code","9208f7fb":"code","803e3f5a":"code","36709dee":"code","18074715":"code","7cac03e1":"code","bbbe6191":"code","f8d38c68":"code","14879bcf":"code","9cb898c5":"code","a62abe2c":"code","ac9f108c":"code","1df96b81":"code","391b2080":"code","e3a51f9e":"code","5d5343a5":"code","3a3fa7b6":"code","3ffafc8c":"code","44ea7d27":"code","c81d90fa":"code","c1045ccb":"code","29abaf10":"code","71bc3deb":"code","1caea0fa":"code","f1093b4b":"code","ef2be6ac":"code","0e76410e":"code","dda735e5":"code","f6eb3220":"code","674b47e4":"code","bb71e7ba":"code","1914a00a":"code","1b853797":"code","5ba9664a":"code","f89e5653":"markdown","0d23a514":"markdown","8eea48fc":"markdown","1628852a":"markdown","9e14759f":"markdown","df480e00":"markdown","bc21f5cc":"markdown","db369940":"markdown","6a63f508":"markdown","813e6fde":"markdown","c48af3a0":"markdown","b75e2547":"markdown","b8a83f07":"markdown","675fc4fc":"markdown","ba9df043":"markdown","b560ff20":"markdown","e0a7c455":"markdown","e374b7df":"markdown","d29bda8d":"markdown","b46c1ee5":"markdown","10ac399b":"markdown","7182d0b2":"markdown","97552d96":"markdown","02137064":"markdown","d258aead":"markdown","53e4615d":"markdown","e00d3d89":"markdown","f6583032":"markdown","57bff0d2":"markdown","6eec3c20":"markdown","8e4ef08b":"markdown","b6891e2c":"markdown","19396f1b":"markdown","4077d8ee":"markdown","a70c66b2":"markdown","b3e232d7":"markdown","a719df0f":"markdown","97e4608d":"markdown","bcb13cbc":"markdown","24c0b688":"markdown","10c686d0":"markdown","8932a909":"markdown","0f1309fd":"markdown","fae9fc60":"markdown","b1ed0d66":"markdown"},"source":{"f40b85a9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport seaborn as sns \nfrom IPython import display\nplt.style.use('ggplot')\nprint('instalando talib')\n!wget https:\/\/launchpad.net\/~mario-mariomedina\/+archive\/ubuntu\/talib\/+files\/libta-lib0_0.4.0-oneiric1_amd64.deb -qO libta.deb\n!wget https:\/\/launchpad.net\/~mario-mariomedina\/+archive\/ubuntu\/talib\/+files\/ta-lib0-dev_0.4.0-oneiric1_amd64.deb -qO ta.deb\n!dpkg -i libta.deb ta.deb\n!pip install ta-lib\nimport talib\n\nfrom datetime import datetime\nimport warnings\nwarnings.filterwarnings('ignore')\nprint('instalando stockai....')\n!pip install --upgrade  stockai\nfrom stockai import Stock\ndisplay.clear_output(wait=True)\ndisplay.clear_output()","24def285":"ticker = 'VALE3.SA'\nstart_date = '2013-01-01'\nend_date = '2019-12-31' \nstock = Stock(ticker)\nhistorical_prices = stock.get_historical_prices(start_date, end_date)\ndata = pd.DataFrame.from_dict(historical_prices)\nplt.figure(figsize=(10,2))\ng = sns.lineplot(data=data.adjclose.values.flatten(),color='green')\ng.set_title(\"Pre\u00e7o de fechamento ajustado\")\ng.set_xlabel('temporal...')\ng.grid(True)\nplt.show()","72d79445":"data.dropna(inplace=True)\ndata = data.sort_values('date')\nplt.figure(figsize=(10,2))\ng = sns.lineplot(data=np.cumsum(data.adjclose.values.flatten()),color='green')\ng.set_title(\"Pre\u00e7o de fechamento ajustado  (soma cumulativa)\")\ng.set_xlabel('temporal...')\ng.grid(True)","a044cb8f":"data.columns","bce50155":"print(\"shape:\\t\",data.shape)","f5cf7c5b":"data.dtypes","832bdab5":"data.tail(3)","b5dd5455":"data.date = pd.to_datetime(data.date)\ndata.sort_values('date',inplace=True)\ndata.dtypes","7f35afc6":"data.set_index('date',inplace=True)\ndata.tail(3)","c5e5f766":"data.isnull().sum()","543e246b":"data.dropna(inplace=True)\ndata.isnull().sum()","f2b0ddb2":"data['year'] = data.index.year\ndata['month']  = data.index.month\ndata['weekday'] = data.index.weekday\ndata['weekofyear'] = data.index.weekofyear\ndata['quarter'] = data.index.quarter\ndata.tail(3)","bf0e618a":"sns.set(rc={'figure.figsize':(10,3)})\nplt.rcParams['figure.figsize'] = (10,3)\nplt.rcParams['figure.dpi'] = 100\ndata.adjclose.plot(linewidth=0.3)","35c06f90":"columns = ['volume', 'open', 'low', 'close', 'high', 'adjclose']\naxes = data[columns].plot(marker='',linestyle='-', alpha=0.7, figsize=(15,10),subplots=True)\nfor a in axes:\n  a.set_ylabel('Valores')","d43e349c":"ax = data.loc['2016','adjclose'].plot(marker='.',alpha=0.7,linestyle='-')\nax.set_ylabel('Fechamento Ajustado')","c295a6f0":"ax = data.loc['2016-12','adjclose'].plot(marker='o',alpha=0.7,linestyle='-')\nax.set_ylabel('Fechamento Ajustado')","1c9c871a":"ax = data.loc['2016-12-24':'2016-12-31','adjclose'].plot(marker='o',alpha=0.7,linestyle='-')\nax.set_ylabel('Fechamento Ajustado')","2746efb6":"sns.set(rc={'figure.figsize':(15,8)})\nplt.rcParams['figure.figsize'] = (15,8)\nplt.rcParams['figure.dpi'] = 72\nf,axes = plt.subplots(len(columns[:-1]),1,sharex=True)\nfor c,a in zip(columns[:-1],axes):\n  sns.boxplot(data=data,x='month',y=c,ax=a)\n  a.set_title(c)\n  if a != axes[-1]:\n    ax.set_xlabel(' ')\n     ","5346ceb7":"adjclose_mean_weekly = data.adjclose.resample('W').mean()\nadjclose_mean_month = data.adjclose.resample('M').mean()\nstart = '2019-01'\nend = '2019-12'","ee1d50ce":"fig, ax = plt.subplots()\nax.plot(data.loc[start:end,'adjclose'], marker='o',linestyle='-',markersize=3, linewidth=0.8,label='Dias')\nax.plot(adjclose_mean_weekly.loc[start:end], marker='x',linestyle='-', markersize=5, linewidth=0.8,label='M\u00e9dia semanal')\nax.plot(adjclose_mean_month.loc[start:end], marker='*',linestyle='-', markersize=5, linewidth=0.8,label='M\u00e9dia mensal')\nax.legend()","f1890789":"dias = 10\nadjclose_10dias = data.adjclose.pct_change(dias)\nplt.clf()\nplt.figure(figsize=(15,4))\nadjclose_10dias.hist(bins=50,color='C1')\nplt.show()","a79a086d":"shift_dataframe = pd.DataFrame()\ndata[str(dias)+'days_close_future'] = data.adjclose.shift(dias*-1)\ndata[str(dias)+'days_close_future_pct'] = data[str(dias)+'days_close_future'].pct_change(dias)\ndata[str(dias)+'days_close_pct'] = data.adjclose.pct_change(dias)\ndata.dropna(inplace=True)\ndata[[str(dias)+'days_close_future',str(dias)+'days_close_future_pct',str(dias)+'days_close_pct','adjclose']].corr()","4fad80a3":"fig, ax = plt.subplots()\nplt.figure(figsize=(15,3))\nfor num_period in [14,30,50,200]:\n  data['rsi_'+ str(num_period)] = talib.RSI(data.adjclose.values, timeperiod=num_period)\n  ax.plot(data.loc[start:end,'rsi_'+ str(num_period)], marker='x',linestyle='-', markersize=5, linewidth=0.8,label='rsi_'+ str(num_period))\nax.legend()\nplt.show()\n","e5c732a2":"fig, ax = plt.subplots()\nplt.figure(figsize=(15,3))\nfor num_period in [14,30,50,200]:\n  data['ma_'+ str(num_period)] = talib.SMA(data.adjclose.values, timeperiod=num_period)\/data.adjclose\n  ax.plot(data.loc[start:end,'ma_'+ str(num_period)], marker='x',linestyle='-', markersize=5, linewidth=0.8,label='ma_'+ str(num_period))\nax.legend()\nplt.show()\n","ada9edf1":"data.dropna(inplace=True)\ndata.head(10)","d859159b":"data[['adjclose', '10days_close_future', '10days_close_future_pct', '10days_close_pct', 'rsi_14', 'rsi_30','rsi_50', 'rsi_200', 'ma_14', 'ma_30', 'ma_50', 'ma_200']].corr()\n","9208f7fb":"cols = ['adjclose', '10days_close_future', '10days_close_future_pct', '10days_close_pct', 'rsi_14', 'rsi_30','rsi_50', 'rsi_200', 'ma_14', 'ma_30', 'ma_50', 'ma_200']\nf = plt.figure(figsize=(10, 10))\nplt.matshow(data[cols].corr(), fignum=f.number)\nplt.xticks(range(data[cols].select_dtypes(['number']).shape[1]), cols, fontsize=10, rotation=45)\nplt.yticks(range(data[cols].select_dtypes(['number']).shape[1]), cols, fontsize=10)\ncb = plt.colorbar()\ncb.ax.tick_params(labelsize=14)\n","803e3f5a":"data.adjclose.rolling(window = 2).mean()","36709dee":"ts1 = data.adjclose.cumsum()\nts1.plot(style='r--')\nts1.rolling(100).mean().plot(style='g') #M\u00e9dia dos valores","18074715":"mad = lambda x: np.fabs(x - x.mean()).mean()\nts1.rolling(60).apply(mad).plot(style='k')","7cac03e1":"ts1.rolling(window=5, win_type='triang').sum()","bbbe6191":"ts1.plot(style='r--')\nts1.expanding(100).mean().plot(style='k') #M\u00e9dia dos valores","f8d38c68":"from pandas.plotting import autocorrelation_plot\nautocorrelation_plot(data.ma_14)","14879bcf":"from statsmodels.tsa.seasonal import seasonal_decompose\nmonth_decompose = data.copy()\nmonth_decompose.index = month_decompose.month\nmonth_decompose.sort_index(inplace=True)\nmonth_decompose.head()","9cb898c5":"decompose_result = seasonal_decompose(x=month_decompose.adjclose, model='additive', extrapolate_trend='freq', period=int(len(month_decompose)\/2))\ndecompose_result.plot().suptitle('Additive Decompose', fontsize=11)\nplt.show()","a62abe2c":"decompose_result = seasonal_decompose(x=month_decompose.adjclose, model='multiplicative', extrapolate_trend='freq', period=int(len(month_decompose)\/2))\ndecompose_result.plot().suptitle('Multiplicative Decompose', fontsize=11)\nplt.show()","ac9f108c":"data.volume = np.log10(data.volume)\ndata.replace([np.inf, -np.inf], np.nan,inplace=True)\ndata.dropna(inplace=True)","1df96b81":"prices = data[['adjclose','rsi_14']].copy()\nprices['tclose'] = prices.adjclose.shift(1)\nprices.tail()","391b2080":"train, test = prices[1:prices.shape[0]-14], prices[prices.shape[0]-14:]\ntrain.shape,test.shape","e3a51f9e":"train.head()","5d5343a5":"xtrain, ytrain = train.tclose.values, train.adjclose.values\nxtest, ytest = test.tclose.values, test.adjclose.values\nxtrain.shape, ytrain.shape,xtest.shape,ytest.shape","3a3fa7b6":"from sklearn.metrics import mean_squared_error\nfrom matplotlib import pyplot\npreds =  xtest.copy()\nmse = mean_squared_error(xtest, preds)\npyplot.plot(xtest)\npyplot.plot(preds, color='red')","3ffafc8c":"from pandas.plotting import autocorrelation_plot\ntest, train = data[1:data.shape[0]-14*100], data[data.shape[0]-14*100:]\ntrain.shape,test.shape","44ea7d27":"autocorrelation_plot(train.rsi_14)","c81d90fa":"from statsmodels.graphics.tsaplots import plot_pacf\nplot_pacf(train.rsi_14, lags=14)","c1045ccb":"from statsmodels.tsa.stattools import adfuller\n\nresult = adfuller(train.adjclose)\n\nprint('p-value: %f' % result[1])\nprint('ADF: %f' % result[0])\nprint('Critical Values:')\n\nfor key, value in result[4].items():\n    print('\\t%s: %.3f' % (key, value))\n\n","29abaf10":"from statsmodels.tsa.arima_model import ARIMA\n\nmodel = ARIMA(train.adjclose.values, order=(5, 0, 2))\nmodel_fit = model.fit()\nmodel_fit.summary()","71bc3deb":"residuals = model_fit.resid\nplt.plot(residuals)","1caea0fa":"output = model_fit.forecast()\noutput","f1093b4b":"from statsmodels.tsa.statespace.sarimax import SARIMAX\nmodel = SARIMAX(train.adjclose.values , order=(5,1,3), seasonal_order=(1,1,1,12))\nmodel_fit = model.fit()\nresiduals = model_fit.resid\nplt.plot(residuals)","ef2be6ac":"output = model_fit.forecast()\noutput","0e76410e":"train.adjclose.shape,test.adjclose.values\n","dda735e5":"model_fit.forecast(14)\n\n\ny_predict = model_fit.predict()\npyplot.plot(train.adjclose.values[1284:], linestyle='dashed',linewidth=2.5, color='black',label='Train')\npyplot.plot(y_predict[1284:], color='red', linestyle='solid',linewidth=1.5, label='Predict')\npyplot.legend()\npyplot.tight_layout()\npyplot.show()","f6eb3220":"columns = ['year', 'month',\n       'weekday', 'weekofyear', 'quarter', '10days_close_future',\n       '10days_close_future_pct', '10days_close_pct', 'rsi_14', 'rsi_30',\n       'rsi_50', 'rsi_200', 'ma_14', 'ma_30', 'ma_50', 'ma_200']","674b47e4":"train.shape","bb71e7ba":"xtrain, ytrain = train[columns].values, train.adjclose.values\nxtest, ytest = test[columns].values, test.adjclose.values\nxtrain = np.reshape(xtrain, (xtrain.shape[0],xtrain.shape[1], 1))\nxtest = np.reshape(xtest, (xtest.shape[0],xtest.shape[1], 1))\nxtrain.shape, ytrain.shape,xtest.shape,ytest.shape","1914a00a":"import tensorflow as tf\nfrom tensorflow import keras\nmodel = keras.Sequential()\n\nmodel.add(keras.layers.LSTM(128, return_sequences=True, input_shape=(xtrain.shape[1], 1)))\nmodel.add(keras.layers.Dropout(0.3))\nmodel.add(keras.layers.LSTM(128, return_sequences=True,activation='relu'))\nmodel.add(keras.layers.Dropout(0.3))\nmodel.add(keras.layers.LSTM(128,activation='relu'))\nmodel.add(keras.layers.Dense(1))\nbatch_size = 32\nmodel.compile(optimizer='adam', loss='mean_squared_logarithmic_error')\n\nhistory = model.fit(xtrain, ytrain,  verbose=2, epochs=12, batch_size=128,shuffle=False)\n","1b853797":"predict = model.predict(xtest)\npredicts =  predict.reshape(-1)\npredicts.shape,ytest.shape","5ba9664a":"plt.figure(figsize=(15,15))\nplt.title(\"LSTM - Previs\u00e3o\")\nplt.xlabel('Days', fontsize =18)\nplt.ylabel('Close', fontsize=18)\nplt.grid(True)\nplt.plot(ytest)\nplt.plot(predicts)\nplt.legend(['Test', 'Previs\u00e3o'], loc='upper center')\nplt.show()","f89e5653":"**Resampling**\n\nPodemos reamostrar os dados com dados semanais, mensais e etc.\n","0d23a514":"Tra\u00e7amos o gr\u00e1fico da s\u00e9rie temporal usando a fun\u00e7\u00e3o [lineplot()](https:\/\/seaborn.pydata.org\/generated\/seaborn.lineplot.html) do seaborn.\n\nPodemos realizar uma **[soma cumulativa](https:\/\/docs.tibco.com\/pub\/spotfire_web_player\/6.0.0-november-2013\/pt-BR\/WebHelp\/GUID-A72C6670-9569-4542-9EA5-BF311478C0F9.html)** sobre os dados para termos um resultado de observa\u00e7\u00e3o mais interessante.\n\n<img src='https:\/\/www.researchgate.net\/profile\/Herminio_Nalini_Jr\/publication\/245406341\/figure\/fig1\/AS:671514617737239@1537112969977\/Figura-1-Exemplo-de-projecao-bilogaritmica-da-soma-cumulativa-vs-Concentracao-de-um.png'  style='height:230px' \/>\n\n<hr \/>\n\n_\"Para qualquer valor especifico, o pr\u00f3ximo valor \u00e9 a soma dos valores anteriores\"_","8eea48fc":"**Valida\u00e7\u00e3o Walk Forward**\n\nNo mundo real as \"previs\u00f5es\" tornam-se cada vez menos precisas com o passar do tempo; Uma forma mais realista \u00e9 treinar seus modelos com dados reais conforme ele fica dispon\u00edvel para futuras previs\u00f5es. \n\nTendo dito isso, conclui-se que a valida\u00e7\u00e3o **walk-forward** \u00e9 a solu\u00e7\u00e3o mais promissora para obter resultados mais precisos.\n\n![Valida\u00e7\u00e3o Walk Forward](https:\/\/i.stack.imgur.com\/jKVo4.png)\n\n* https:\/\/www.tutorialspoint.com\/time_series\/time_series_walk_forward_validation.htm\n* https:\/\/machinelearningmastery.com\/backtest-machine-learning-models-time-series-forecasting\/\n* https:\/\/stackoverflow.com\/questions\/62210221\/walk-forward-with-validation-window-for-time-series-data-cross-validation\n","1628852a":"**P-value**: Um P-value maior que 0,05 sugere que a s\u00e9rie temporal n\u00e3o \u00e9 estacion\u00e1ria.\n\nCompara\u00e7\u00e3o dos valores cr\u00edticos com estat\u00edstica ADF: Um valor cr\u00edtico inferior nos diz que a s\u00e9rie \u00e9 provavelmente n\u00e3o estacion\u00e1ria.\n\n\n\n","9e14759f":"**test,train**","df480e00":"**Agrupamento**\n\nPodemos agrupar nossos dados por diferentes periodo de tempo.","bc21f5cc":"**Visualizando dados temporais**","db369940":"Convers\u00e3o feita, agora vamos alterar o \u00edndic e de nosso dataframe.","6a63f508":"**apply()** recebe um argumento **func** extra e executa c\u00e1lculos gen\u00e9ricos de rolamento. \n\nSeu argumento deve ser uma \u00fanica fun\u00e7\u00e3o que desenbolca em um \u00fanico valor.\n\nCom ele podemos efetuar alguns calculos, como o desvio absoluto m\u00e9dio em uma base cont\u00ednua:","813e6fde":"\n* [Stock Price Prediction LSTM \/ to the point](https:\/\/www.kaggle.com\/franckepeixoto\/stock-price-prediction-lstm-to-the-point)\n* [TSA on Apple Stocks](https:\/\/www.kaggle.com\/snide713\/tsa-on-apple-stocks)\n* [Time Series Analysis with Pandas](https:\/\/www.dataquest.io\/blog\/tutorial-time-series-analysis-with-pandas\/)\n\n","c48af3a0":"[**ARIMA**](https:\/\/www.tutorialspoint.com\/time_series\/time_series_arima.htm\/)\n\nA m\u00e9dia m\u00f3vel auto-regressiva (ARIMA)","b75e2547":"**Univariante**\n\nNesse momento, usamos dados acima para uma \u00fanica v\u00e1riavel ao longo de um determinado periodo de tempo; Isso \u00e9 chamado de s\u00e9rie temporal univadiada.\n_____\n<img src='https:\/\/i.pinimg.com\/originals\/a0\/8e\/74\/a08e7450e6d41f6666d1954a5b54b5f9.gif'  style='height:100px'\/>\n                                                                   <br>\n\nAo entrarmos no campo dos dados de s\u00e9rie temporal, nos deperamos com algumas caracter\u00edsticas exclusivas. Em geral, as s\u00e9ries temporais tendem a expor as seguintes caracteristicas:\n\n> **T\u00eandencia**: Observar tend\u00eancia significa que os valores m\u00e9dios de uma m\u00e9di\u00e7\u00e3o parecem diminuir ou aumentar com o passar do tempo.\n\n> **Outliers**: Os dados da s\u00e9rie temporal podem conter uma quantidade relevante de outliers. Esses outliers podem ser observados quando plotamos em um gr\u00e1fico.\n\n>**Sazonalidade**: Isso significa que algumas observa\u00e7\u00f5es, tendem a se repetir ao longo de um determinado intervalo. (padr\u00f5es repetidos).\n\n> **Mudan\u00e7as abruptas**: \u00c1s vezes, h\u00e1 altera\u00e7\u00f5es desiguais nos dados. A observa\u00e7\u00e3o de mudan\u00e7as abruptas \u00e9 de suma import\u00e2ncia, pos nos revela fen\u00f4nemos subjecentes.\n\n> **Varia\u00e7\u00e3o constante**: algumas s\u00e9ries tendem a seguir uma varia\u00e7\u00e3o constante ao longo do tempo; \u00c9 essencial identificar se seus dados possui esse tipo de comportamento.\n\n\n<img src='https:\/\/nathalia.hotglue.me\/?start.head.15351260916'  style='height:100px'\/>\n\n_Essa pequena lista acima, nos d\u00e1 uma base para saber o que esperar de nossos dados._\n\n\n","b8a83f07":"Ap\u00f3s carregarmos nossas bibliotecas, iremos tra\u00e7ar alguns gr\u00e1ficos em cima do hist\u00f3rico de cota\u00e7\u00e3o da empresa **Vale S.A.**\n\n<img src='https:\/\/3.bp.blogspot.com\/_wHO3I4EZjdY\/SHtWQpZD8lI\/AAAAAAAAAD8\/Szo2mk4M5FE\/s320\/logo+vale.JPG' \/>\n\n<br \/> \n**\"**_Vale \u00e9 uma mineradora multinacional brasileira e uma das maiores operadoras de log\u00edstica do pa\u00eds. \u00c9 uma das maiores empresas de minera\u00e7\u00e3o do mundo e tamb\u00e9m a maior produtora de min\u00e9rio de ferro, de pelotas e de n\u00edquel._\n<br \/> \n_A empresa tamb\u00e9m produz mangan\u00eas, ferroliga, cobre, bauxita, pot\u00e1ssio, caulim, alumina e alum\u00ednio._ **\"** [**Wikip\u00e9dia**](https:\/\/pt.wikipedia.org\/wiki\/Vale_S.A.)\n\n___\n*Periodo de Analise:*\n\n**start** = 2013-01-01\n\n**end** = 2019-12-31\n","675fc4fc":"Notaram como ficou mais fluido a exposi\u00e7\u00e3o do mesmo gr\u00e1fico, ap\u00f3s os ajustes?","ba9df043":"**TSA - Time Series Analysis**\n\nDados de s\u00e9rie temporal geralmente se apresentam na forma de uma sequ\u00eancia de observa\u00e7\u00f5es quantitativas.\n\nSeu pilar base \u00e9 **o tempo.** \u23f1\ufe0f\n\nPara ser considerado dados de s\u00e9rie temporal, seus dados devem ter fatos de data\/hora que geralmente s\u00e3o criados durante as seguintes circunst\u00e2ncias:\n<br \/>\n\u2714\ufe0f Monitoramento de processos, \u2714\ufe0frastramento de qualquer **m\u00e9trica** de neg\u00f3cio.\n<br \/>\n*(Em nosso caso, a\u00e7\u00f5es neg\u00f3ciadas na \ud83d\udcc8 **B3** - Bovespa)*\n______\n<img src='https:\/\/s32519.pcdn.co\/wp-content\/uploads\/2019\/12\/measuring-forecast-accuracy-banner-2272px.png'  style='height:200px!important'\/>\n","b560ff20":"Ao observar os tipos das colunas, encontramos nosso primeiro problema; A coluna **date** \u00e9 do tipo **object**; Temos que ajustar isso!  :) \n___\nMas antes, vamos ver como est\u00e1 sendo acomodado!\n","e0a7c455":"**Data Cleaning** - _\"Hora de limpar a casa\"_","e374b7df":"**Expanding**\n\nA janela de expans\u00e3o \u00e9 uma alteranativa para as estat\u00edsticas cont\u00ednuas; Seus valores estat\u00edsticos s\u00e3o atribuidos at\u00e9 o momento informado.\n\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/\/reference\/api\/pandas.Series.expanding.html#pandas.Series.expanding\n","d29bda8d":"**Compreendendo a TSA...**\n<img src='https:\/\/2.bp.blogspot.com\/-5C7dRuSbRsQ\/WWinDiajVYI\/AAAAAAAAAB4\/ZuxW7CeY_oYnAgLRT_Fkrs_x332md7ZhACLcBGAs\/s1600\/Imagem1.png' style='height:100px' \/>\n\nUma s\u00e9rie temporal tem por essencia uma **cole\u00e7\u00e3o** de **observa\u00e7\u00f5es** feitas sequenciamente no tempo! \n\n* \ud83d\udca1\ud83d\ude0e Guarda isso que n\u00e3o tem erro! *\n\nPor ser uma s\u00e9rie baseada no \"tempo\", devemos lidar com ele(a) de maneira sequencial.\n","b46c1ee5":"**TSA com VALE S.A**\n\nNessa parte,  usaremos os dados hist\u00f3rico de cota\u00e7\u00e3o da VALE S.A  para entender melhor o TSA. \n\n\"**\/\/** _Eu sei, j\u00e1 usamos os dados mais acima; Por\u00e9m, n\u00e3o oficialmente! ehehehe (Disculpa po\u00e9tica)_\"\n\n______\n\nCome\u00e7aremos com a descri\u00e7\u00e3o das colunas de nosso dataframe.","10ac399b":"**ROLLING**\n\nA fun\u00e7\u00e3o Rolling() \u00e9 basicamente usada para c\u00e1lculos de rolagem estat\u00edstica\/momentos.\n\n\nO conceito de c\u00e1lculo de 'rolagem' \u00e9 usado em identifica\u00e7\u00e3o de sinais e dados de s\u00e9rie temporal. \n\nPegamos um tamanho de janela **w** de cada vez e executamos alguma opera\u00e7\u00e3o matem\u00e1tica desejada. \n\nSeu tamanho **w** significa **w** valores.\n\n\nEsse s\u00e3o os argumentos mais usados:\n\n> * **window:** tamanho da janela m\u00f3vel\n> * **min_periods:** threshold de valores non-null a serem exigidos (caso contr\u00e1rio, o resultado \u00e9 NA)\n> * **freq:** Opcionalmente, especifique uma string de frequ\u00eancia ou DateOffset para pr\u00e9-conformar os dados. \n> * **how:** opcionalmente, especifique o m\u00e9todo de redu\u00e7\u00e3o ou reamostragem.","7182d0b2":"**SMA**\n\nA M\u00e9dia M\u00f3vel Simples, como o nome j\u00e1 indica, \u00e9 a mais simples entre as formas de calcular essa m\u00e9trica. A ideia \u00e9 mostrar o pre\u00e7o m\u00e9dio em um determinado per\u00edodo de dias, com base no fechamento do pre\u00e7o.","97552d96":"Entre 24 \u00e0 31 de Dezembro de 2016.","02137064":"Vamos agora ver  um periodo mais especifico: dezembro de 2016.","d258aead":"**Indice de deslocamento**\n\n**fun\u00e7\u00e3o Shif:**  Usada para alterar o indice pelo n\u00famero desejado de periodos com uma frequ\u00eancia de tempo.\n\n","53e4615d":"A indexa\u00e7\u00e3o baseada no tempo permite o uso de uma string formatada para selecionar os dados.","e00d3d89":"Excluindo dados ausentes.","f6583032":"**SARIMA**  | _ARIMA Seasonal_\n","57bff0d2":"\n**Additive Model** \n\ny(t) = Level + Trend + Seasonality + Noise","6eec3c20":"Agora nossa coluna date, est\u00e1 definida como **DatetimeIndex**\n\nIsso abre muitas, muitas poss\u00edbilidades! ho ho ho   :P\n____\nMas antes, vamos fazer mais uma verifica\u00e7\u00e3o.","8e4ef08b":"**Decomposi\u00e7\u00e3o de s\u00e9rie temporal**\n\nOs procedimentos de decomposi\u00e7\u00e3o s\u00e3o usados \u200b\u200bem s\u00e9ries temporais para descrever a tend\u00eancia e os fatores sazonais em uma s\u00e9rie temporal. \n\nDecomposi\u00e7\u00f5es mais extensas tamb\u00e9m podem incluir ciclos de longo prazo, efeitos de feriados, efeitos de dia da semana e assim por diante. Aqui, vamos considerar apenas tend\u00eancias e decomposi\u00e7\u00f5es sazonais.\n\n* https:\/\/online.stat.psu.edu\/stat510\/lesson\/5\/5.1\n* https:\/\/medium.com\/analytics-vidhya\/decomposition-in-time-series-data-b20764946d63\n\n","b6891e2c":"O formato de data que precisamos \u00e9 YYYY-MM-DD.","19396f1b":"2016, parece um ponto interessante para se investigar; Agora acessar esse periodo \u00e9 muito simples.","4077d8ee":"Nosso dataframe tem 1.739 linhas e 7 colunas.","a70c66b2":"**Multiplicative Model** \n\ny(t) = Level * Trend * Seasonality * Noise\n","b3e232d7":"* **volume**: O volume nas datas especificadas.\n* **open**: O pre\u00e7o de abertura nas datas especificadas.\n* **high**: O pre\u00e7o da alta nas datas especificadas.\n* **close**: O pre\u00e7o de fechamento nas datas especificadas.\n* **low**: O pre\u00e7o da baixa nas datas especificadas.\n* **date**: A data em que o valor patrimonial l\u00edquido foi informado.\n* **adjclose**: O pre\u00e7o de fechamento ajustado nas datas especificadas.\n\n","a719df0f":"[**Autocorrelation**](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.plotting.autocorrelation_plot.html)\n\nAs linhas horizontais no gr\u00e1fico correspondem a bandas de confian\u00e7a de 95% e 99%.\n\nA linha tracejada \u00e9 a banda de confian\u00e7a de 99%.","97e4608d":"**Veja tamb\u00e9m:**\n\n* boxcar\n* **triang**  *(usado no code abaixo)*\n* blackman\n* hamming\n* bartlett\n* parzen\n* bohman\n* blackmanharris\n* nuttall\n* barthann\n\nhttps:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.Series.rolling.html?highlight=rolling#pandas.Series.rolling","bcb13cbc":"Vamos adicionar algumas colunas...","24c0b688":"**LSTM**","10c686d0":"**RSI**\n\nO \u00cdndice de For\u00e7a Relativa (RSI) \u00e9 um oscilador baseado em impulso bem versado que \u00e9 usado para medir a rapidez (velocidade), bem como a mudan\u00e7a (magnitude) dos movimentos de pre\u00e7os direcionais","8932a909":"**Autocorrelation Parcial**\n\nUma autocorrela\u00e7\u00e3o parcial \u00e9 um resumo da rela\u00e7\u00e3o entre uma observa\u00e7\u00e3o em uma s\u00e9rie de tempo com observa\u00e7\u00f5es em etapas de tempo anteriores com as rela\u00e7\u00f5es de observa\u00e7\u00f5es intervenientes removidas.\n\nhttps:\/\/online.stat.psu.edu\/stat510\/lesson\/2\/2.2","0f1309fd":"**Observa\u00e7\u00e3o em cima da varia\u00e7\u00e3o percentual**\n\n**[pct_change](https:\/\/support.google.com\/docs\/answer\/3093281?hl=pt-BR)** A varia\u00e7\u00e3o percentual de pre\u00e7o desde o preg\u00e3o anterior.\n\n_A vaia\u00e7\u00e3o percentual \u00e9 o aumento e diminui\u00e7\u00e3o percentual, do valor_\n","fae9fc60":"**Criando indicadores**\n","b1ed0d66":"Agora, vamos tra\u00e7ar os dados de outras colunas."}}