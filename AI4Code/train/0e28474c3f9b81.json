{"cell_type":{"7f1e8e66":"code","17fd1f54":"code","71789fb8":"code","0f646895":"code","7095f429":"code","9bf8de77":"code","5cca8704":"code","5ee0f32a":"code","d81861c6":"code","54ff8203":"code","4f7741b0":"code","95906a46":"code","c746218f":"code","9eed1e68":"code","04199b7e":"code","3147aa1d":"code","fdf10772":"code","b97478e4":"code","fb8f5584":"code","2a93fc78":"code","380f58fa":"code","e40a84b5":"code","c2c028f8":"code","de9f32bf":"code","7b8145d2":"code","c1b50c4a":"code","8011e21a":"code","592fe807":"code","be3642dd":"code","7b95d2ac":"code","0565c4df":"code","4b5307e6":"code","b7e8f4a9":"markdown","a686f486":"markdown","39150386":"markdown","56cc12f1":"markdown"},"source":{"7f1e8e66":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nimport warnings\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('ggplot')\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nfrom lightgbm import LGBMClassifier\n\nwarnings.simplefilter(action='ignore', category=FutureWarning)","17fd1f54":"ROOT_TRAIN = '..\/input\/data-science-spring-osaka-2021'\n# \u4e00\u89a7\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\ndf_train = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/test.csv')\ndf_action = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/actions.csv')","71789fb8":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\ndf_train.head()","0f646895":"# action_seq\u3054\u3068\u306e\u30c7\u30fc\u30bf\u6570\u3092\u307f\u3066\u307f\u308b\ng = sns.countplot(df_train['action_seq'])\nl = g.set_xticklabels(g.get_xticklabels(), rotation=90)","7095f429":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff08\u30c6\u30b9\u30c8\u306a\u306e\u3067\u7b54\u3048\u306f\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u304c\u308f\u304b\u308a\u307e\u3059\uff09\ndf_test.head()","9bf8de77":"# train\u306e\u4e2d\u304b\u3089\u6700\u521d\u306e\u884c\u306b\u3064\u3044\u3066\u3001\u5b9f\u969b\u306e\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\ndf = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/train\/train_0000.csv')","5cca8704":"# 227\u884c x 21\u30ab\u30e9\u30e0\uff08\u6642\u9593+20\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\uff09\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\n# \u305f\u3060\u3057\u3001\u53ef\u5909\u9577\u30c7\u30fc\u30bf\u3067\u3059\u306e\u3067\u884c\u6570\u306e\u65b9\u306f\u6e2c\u5b9a\u3054\u3068\u306b\u305d\u308c\u305e\u308c\u7570\u306a\u308a\u307e\u3059\ndf","5ee0f32a":"# \u898b\u3084\u3059\u3044\u3088\u3046\u306bMinMaxScaler\u306b\u304b\u3051\u3066\u304a\u304d\u307e\u3059\nscaler = MinMaxScaler()\ndf.iloc[:] = scaler.fit_transform(df)","d81861c6":"# \u5de6\u53f3\u306e\u8098\u90e8\u306e\u6b6a\u307f\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u305a\u5de6\u3067\u30b8\u30e3\u30d6\u3092\u6253\u3063\u305f\u306e\u3061\u306b\u53f3\u3067\u30b9\u30c8\u30ec\u30fc\u30c8\u3001\u30d5\u30c3\u30af\u3001\u30a2\u30c3\u30d1\u30fc\u3068\u9023\u6253\u3057\u3066\u3044\u308b\u306e\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u306d\uff01\n# \u4ed6\u306e\u30c1\u30e3\u30cd\u30eb\u306b\u3082\u6709\u7528\u306a\u60c5\u5831\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u672c\u8ab2\u984c\u306f\u304b\u306a\u308a\u4e88\u60f3\u6027\u304c\u9ad8\u3044\u3053\u3068\u304c\u898b\u8fbc\u307e\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u76ee\u6307\u305b\u7cbe\u5ea6100%\uff01\nf_0 = 'ELBOW_L'\nf_1 = 'ELBOW_R'\n\nplt.figure(figsize=[15,5])\nplt.plot(df.Time, df[f_0], c='r', label=f_0)\nplt.plot(df.Time, df[f_1], c='b', label=f_1)\nplt.xlabel('Time')\nplt.show()","54ff8203":"# describe \u3092\u4f7f\u3063\u3066\u591a\u304f\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3057\u3066\u307f\u308b\u3001\u6570\u3067\u52dd\u8ca0\uff01\n# \u4ed6\u306b\u3082\u3084\u308a\u65b9\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3001\u3069\u3093\u3069\u3093\u63a2\u7d22\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\ndef add_describe_as_features(row):\n    file_path = row['file_path']\n    df = pd.read_csv(ROOT_TRAIN + file_path)\n    s = df.describe().unstack(1)\n    return s.tolist()","4f7741b0":"# \u3061\u306a\u307f\u306bdescribe\u306f\u3069\u3093\u306a\u3082\u306e\u306a\u306e\u304b\u3092\u307f\u3066\u3044\u308b\u3001\u30c7\u30fc\u30bf\u306f0-1\u306b\u5909\u63db\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u5143\u5024\u306e\u5206\u5e03\u3067\u306f\u306a\u3044\n# \u5e73\u5747\u4ee5\u5916\u3001\u6700\u5927\u6700\u5c0f\u3001\u5206\u4f4d\u6570\u65e5\u3068\u504f\u5dee\u304c\u8a08\u7b97\u3057\u3066\u304f\u308c\u308b\ndf.describe()","95906a46":"# \u30ab\u30e9\u30e0\u540d\u306e\u30ea\u30b9\u30c8\u3092\u6e96\u5099\u3001\u6700\u521d\u306e\u6700\u5f8c\u3092\u307f\u308b\nlist_columns = ['_'.join(idx).strip() for idx in df.describe().unstack(1).index]\nlist_columns[:5]+list_columns[-5:]","c746218f":"%%time\n# \u4e0a\u8a18\u51e6\u7406\u3092\u9069\u7528\u3057\u307e\u3059\ndf_train[list_columns] = df_train.apply(add_describe_as_features, axis=1, result_type='expand')\ndf_test[list_columns] = df_test.apply(add_describe_as_features, axis=1, result_type='expand')","9eed1e68":"# \u5e73\u5747\u5024\u3092\u6a2a\u6301\u3061\u3067\u7d50\u5408\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\ndf_train","04199b7e":"df_test","3147aa1d":"# \u7279\u5fb4\u91cf\uff08=\u8aac\u660e\u5909\u6570\uff09\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\uff08\u88ab\u8aac\u660e\u5909\u6570\uff09\u306b\u5206\u5272\u3057\u3066\u304a\u304d\u307e\u3059\ny_train = df_train.action_seq\nX_train = df_train.drop(['file_path', 'action_seq'], axis=1)\nX_test = df_test.drop(['file_path'], axis=1)","fdf10772":"# \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\uff08\u6570\u5024\u306b\u5909\u63db\uff09\u3057\u3066\u304a\u304d\u307e\u3059\nle = LabelEncoder()\ny_train = le.fit_transform(y_train)","b97478e4":"y_train","fb8f5584":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3092\u691c\u5b9a\uff08\u7cbe\u5ea6\u8a55\u4fa1\uff09\u7528\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\nX_train_, X_val, y_train_, y_val = train_test_split(X_train, y_train, test_size=0.33, random_state=71, stratify=y_train)","2a93fc78":"# \u624b\u5143\u306e\u30c7\u30fc\u30bf\u3067\u7cbe\u5ea6\u3092\u898b\u7a4d\u3082\u308a\u307e\u3059\u3002\u6b63\u89e3\u738795%\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u306d\uff01\n# \u5e73\u5747\u5024\u3060\u3051\u3067\u3053\u306e\u7cbe\u5ea6\u3067\u3059\u304b\u3089\u3001\u3053\u308c\u306f\u697d\u52dd\u3067\u3057\u3087\u3046\u304b\u3002\nmodel = LGBMClassifier(learning_rate=0.05, n_estimators=500)\nmodel.fit(X_train_, y_train_, eval_set=[(X_val, y_val)], eval_metric='logloss', early_stopping_rounds=50)\n\ny_pred = model.predict(X_val)\nprint(accuracy_score(y_val, y_pred))","380f58fa":"# \u5168\u30c7\u30fc\u30bf\u3067\u518d\u5b66\u7fd2\u3057\u3066\u63d0\u51fa\u7528\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\nbest_iter = model.best_iteration_\nmodel = LGBMClassifier(learning_rate=0.05, n_estimators=best_iter)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)","e40a84b5":"df_sub = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/sample_submission.csv')","c2c028f8":"df_sub['action_seq'] = le.inverse_transform(y_pred)\ndf_sub","de9f32bf":"# \u51fa\u529b\u3057\u3066\u63d0\u51fa\u3057\u307e\u3059\ndf_sub.to_csv('submission.csv', index=False)","7b8145d2":"# \u3042\u308c\u308c\u3001\u63d0\u51fa\u3057\u305f\u3068\u3053\u308d\u624b\u5143\u306e\u8a55\u4fa1\u7d50\u679c\u3068\u306e\u4e56\u96e2\u304c\u5927\u304d\u3044\u3088\u3046\u3067\u3059\u3002\u4f55\u304c\u884c\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f","c1b50c4a":"# \u542b\u307e\u308c\u308b\u30b3\u30f3\u30d3\u30cd\u30fc\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\ndf_action = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/actions.csv')","8011e21a":"# 12\u7a2e\u985e\u306e\u30b3\u30f3\u30d3\u30cd\u30fc\u30b7\u30e7\u30f3\u304c\u542b\u307e\u308c\u308b\u3088\u3046\u3067\u3059\ndf_action.action_seq.value_counts()","592fe807":"# \u306a\u3093\u3068\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u306f1\u7a2e\u985e\u8db3\u308a\u306a\u3044\u30af\u30e9\u30b9\u304c\u3042\u308b\u3088\u3046\u3067\u3059\uff01\u898b\u6bd4\u3079\u3066\u307f\u308b\u3068\"jab-jab-bodyhook\"\u304c\u8db3\u308a\u306a\u3044\u3088\u3046\u3067\u3059\u306d\u3002\n# \u3053\u306e\u3088\u3046\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u542b\u307e\u308c\u306a\u3044\u30e9\u30d9\u30eb\u3092unseen label\u3068\u8a00\u3044\u307e\u3059\u304c\u3001\u65e2\u77e5\u306e\u30e9\u30d9\u30eb\uff08seen label\uff09\u306e\u7cbe\u5ea6\u3092\u3088\u308a\u9ad8\u3081\u308b\u3068\u540c\u6642\u306b\u3053\u3061\u3089\u306e\u5bfe\u51e6\u3082\u5fc5\u8981\u305d\u3046\u3067\u3059\u306d\u3002\n# \u3053\u308c\u3089\u306f\u9806\u3092\u8ffd\u3063\u3066\u53d6\u308a\u7d44\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\ndf_train.action_seq.value_counts()","be3642dd":"import matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline","7b95d2ac":"# \u5909\u6570\u91cd\u8981\u5ea6\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\nimportances = DataFrame(model.feature_importances_, index=X_train.columns, columns=['importance'])\nimportances.sort_values(['importance'], ascending=False, inplace=True)\n\nplt.figure(figsize=[6,10])\nplt.title('Feature Importance')\nplt.barh(importances.index[::-1], importances.importance[::-1])\nplt.xlabel('importance')\nplt.show()","0565c4df":"# \u5f71\u97ff\u304c\u3042\u308b\u7279\u5fb4\u91cf\nplt.figure(figsize=[6,10])\nplt.title('Feature Importance')\nplt.barh(importances.index[:5], importances.importance[:5])\nplt.xlabel('importance')\nplt.show()","4b5307e6":"# \u5f71\u97ff\u304c\u306a\u3044\u7279\u5fb4\u91cf\nplt.figure(figsize=[6,10])\nplt.title('Feature Importance')\nplt.barh(importances.index[110:-1], importances.importance[110:-1])\nplt.xlabel('importance')\nplt.show()","b7e8f4a9":"Change Log:\n\n\u30e2\u30c7\u30eb\u306e\u5909\u6570\u91cd\u8981\u5ea6\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\uff08\u6700\u5f8c\u306e\u65b9\uff09","a686f486":"\u5f71\u97ff\u304c\u5c11\u306a\u3044\u7279\u5fb4\u91cf\u3092\u524a\u9664\u3057\u3066\u3001\u518d\u5ea6\u30e2\u30c7\u30ea\u30f3\u30b0\uff08\u6c4e\u7528\u6027\u3092\u76ee\u7684\u306b\uff09\u3057\u3066\u307f\u308b\u306e\u304c\u826f\u3044\u3002\n\ncount\u306f\u52b9\u679c\u304c\u306a\u3055\u305d\u3046...","39150386":"# \u5909\u6570\u91cd\u8981\u5ea6\u306e\u78ba\u8a8d","56cc12f1":"\u53c2\u8003\u306b\u306a\u308bHP\n\nhttps:\/\/www.datarobot.com\/jp\/wiki\/feature-impact\/\n    \nhttps:\/\/www.datarobot.com\/jp\/blog\/causality_analysis_machine_learning3\/"}}