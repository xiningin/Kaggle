{"cell_type":{"5a4c3686":"code","605a4da2":"code","c7171580":"code","cd6c7f8f":"code","10c37d38":"code","30e115c9":"code","381737d3":"code","dadf287f":"code","24427ced":"code","fe89d43b":"code","59e84182":"code","944eebfa":"code","0a33de12":"code","dad16336":"code","6e76c73d":"code","af00f42c":"code","43dd3838":"code","6c9471e0":"markdown","9a6d3751":"markdown","093f64b4":"markdown","0e1631ea":"markdown","a01bfa0c":"markdown","f4d5f7bd":"markdown","59067b0f":"markdown","0d5e5280":"markdown","23e75234":"markdown","ad797256":"markdown","a899e887":"markdown","5a830709":"markdown","c9917c18":"markdown","f5609741":"markdown","46073381":"markdown","ddf2043e":"markdown","56e907b0":"markdown","7d12bf93":"markdown","f9a4ce82":"markdown","14abe81e":"markdown"},"source":{"5a4c3686":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.io as pio\n\npd.options.display.max_columns = None\n\n\ndataset = pd.read_csv(\"..\/input\/earthquake-database\/database.csv\")\ndataset.head()","605a4da2":"dataset.describe(include=\"all\")","c7171580":"# convert all observations of Date to datetime\ndataset.loc[:,'Date'] = pd.to_datetime(dataset['Date'], utc=True)\n\n# sort values by date\ndataset = dataset.sort_values(by = 'Date')\ndataset.head()","cd6c7f8f":"fig = px.histogram(dataset,'Date',color=\"Type\",title=\"Number of events per year\")\nfig.show()","10c37d38":"def f(x):\n    month_name=['january','february','march','april','may','june','july','august','september','october','november','december']\n    return(month_name[x-1])\n\n\n\ndataset.loc[:, 'Year'] = dataset['Date'].dt.year\ndataset.loc[:, 'Month'] = dataset['Date'].dt.month\ndataset['Month']=dataset['Month'].apply(lambda x:f(x))\n# put all year in an array\nall_year = dataset.Year.unique()\ndataset.head()","30e115c9":"from matplotlib import pyplot as plt \n# using previous array to find 5 last year in the dataset\nlast_years = all_year[-5:]\n\n# allow to have multiple graphs on the same sheet\nfig = make_subplots(rows = 5, cols = 1, \n                    shared_xaxes = True, vertical_spacing = 0.01) \n\n# loop to do a graph for each year\nfor i in range(len(last_years)):\n    fig.add_trace(\n        go.Histogram(\n            x = dataset.loc[dataset['Year'] == last_years[i] ,'Month'],\n            name = str(last_years[i])),\n            row = i + 1,\n            col = 1\n                    )\n\nfig.update_layout(\n    title=\"Number of events per month and per year\",\n    autosize=False,\n    height=900)\n\nfig.show()","381737d3":"# extract last 5 year in the dataset\nlast_years = all_year[-5:]\n\nfig = go.Figure()\n\nfor i in range(len(last_years)):\n    if i == 0:\n        fig.add_trace(\n            go.Histogram(\n                x = dataset.loc[dataset['Year']==last_years[i], 'Date'],\n                nbinsx = dataset.loc[dataset['Year']==last_years[i], 'Date'].nunique(),\n                visible=True))\n    else:\n        fig.add_trace(\n            go.Histogram(\n                x = dataset.loc[dataset['Year']==last_years[i], 'Date'],\n                nbinsx = dataset.loc[dataset['Year']==last_years[i], 'Date'].nunique(),\n                visible=False))\n\n\nfig.update_layout(\n        title = go.layout.Title(text = \"Daily observations for one year\", x = 0.5),\n        showlegend = False)\n\n# update for each year\nfig.update_layout(\n    updatemenus = [go.layout.Updatemenu(\n        active = 0,\n        buttons = [ \n                    go.layout.updatemenu.Button(\n                        label = \"2012\",\n                        method = \"update\",\n                        args = [{\"visible\" : [True, False, False, False, False]}]),\n                    go.layout.updatemenu.Button(\n                            label = \"2013\",\n                            method = \"update\",\n                            args = [{\"visible\" : [False, True, False, False, False]}]),\n                    go.layout.updatemenu.Button(\n                            label = \"2014\",\n                            method = \"update\",\n                            args = [{\"visible\" : [False, False, True, False, False]}]),\n                    go.layout.updatemenu.Button(\n                            label = \"2015\",\n                            method = \"update\",\n                            args = [{\"visible\" : [False, False, False, True, False]}]),\n                    go.layout.updatemenu.Button(\n                            label = \"2016\",\n                            method = \"update\",\n                            args = [{\"visible\" : [False, False, False, False, True]}])\n                ]\n    )]\n)","dadf287f":"px.pie(data_frame=dataset,\n       names='Type',\n       title='Proportion of events')","24427ced":"# using mask to filter only on Earthquake\nearthquakes = dataset.loc[dataset['Type'] == 'Earthquake',:]\ndataset.head()","fe89d43b":"px.histogram(earthquakes, x = 'Magnitude', nbins=50,title='Repartition of magnitude earthquakes since 1965')","59e84182":"px.histogram(earthquakes, x = 'Depth',title='Depth repartition of earthquakes since 1965')","944eebfa":"# using group by to have the mean of magnitude on each date\nmean_mag_date = earthquakes.groupby('Date')['Magnitude'].mean().reset_index(drop=False)\nmean_mag_date.sort_values(by='Date')\nmean_mag_date.head()","0a33de12":"fig = go.Figure(\n    data = go.Scatter(\n        x = mean_mag_date['Date'],\n        y = mean_mag_date['Magnitude']),\n    layout = go.Layout(\n        title = go.layout.Title(text = \"Mean magnitude per day\", x = 0.5),\n        xaxis = go.layout.XAxis(title = 'X', rangeslider = go.layout.xaxis.Rangeslider(visible = True))\n    )\n)\n\nmean_mag_date.loc[:,'Mean_Magnitude'] = mean_mag_date['Magnitude'].mean()","dad16336":"fig.add_trace(\n    go.Scatter(\n        x = mean_mag_date['Date'],\n        y = mean_mag_date['Mean_Magnitude'])\n)\n\nfig.update_layout(showlegend = False)\n\nfig.show()","6e76c73d":"fig = px.scatter_mapbox(earthquakes, lat=\"Latitude\", lon=\"Longitude\", color=\"Magnitude\", \n                        mapbox_style=\"open-street-map\", zoom = 0.5, color_continuous_scale = 'Reds')\nfig.show()","af00f42c":"fig = px.scatter_mapbox(earthquakes, lat=\"Latitude\", lon=\"Longitude\", color=\"Magnitude\", zoom = 0.5,\n                        mapbox_style=\"open-street-map\", color_continuous_scale = 'Reds', range_color = [5.0,10.0],\n                       animation_frame = 'Year')\nfig.show()","43dd3838":"fig = px.density_mapbox(earthquakes, lat=\"Latitude\", lon=\"Longitude\", mapbox_style=\"open-street-map\",\n                       animation_frame = 'Year', zoom = 0.5, radius = 10)\nfig.show()","6c9471e0":"![a.jpg](attachment:f7ecbced-5e1b-416c-8c68-6d8977c05a29.jpg)\n*Source Futura Science*","9a6d3751":"# Part 3 : Animation <a class=\"anchor\" id=\"chapter3\"><\/a> ","093f64b4":"12. Look for another function in plotly express that allows to display on a map the *density of earthquakes* (instead of each earthquake separately), and make it animated to display the evolution year by year.","0e1631ea":"6. Choose a specific year among the five last years, and display the daily number of observations fot this year only. ","a01bfa0c":"## Project description\n\nIn this notebook we will use plotly to perform an exploratory analysis of many incidents all over the world and in particular earthquakes that occurred since 1965!\nThis work will allow us to better understand :\n- where the earthquakes are located\n- What are their main characteristics (magnitude, recurrence, status etc...)\n\nMany aspects of plotly will be reviewed in order to handle this library well!","f4d5f7bd":"2. Show the first rows as well as basic statistics about the dataset\n","59067b0f":"Let's make some histograms to understand our datas:\n- The count by ```Magnitude```\n- The count by ```Depth```","0d5e5280":"9. Explore the evolution of the magnitudes as a function of time :\n\n\n- Create a dataframe containing the mean magnitudes per day\n- Then use this dataset to display the mean magnitudes per day, with a range slider allowing the user to navigate among the dates\n- Add a reference line showing the value of the mean magnitude computed over the whole dataset\n","23e75234":"# Part 2 : EDA using plotly  <a class=\"anchor\" id=\"chapter2\"><\/a> \n\n4. Make a simple plot with ```plotly express``` to display the number of observed events as a function of time","ad797256":"11. Let's make the map animated ! Add some arguments in `scatter_mapbox` to create an animation displaying the earthquakes year by year","a899e887":"# Part 1 : Data Importation  <a class=\"anchor\" id=\"chapter1\"><\/a>\n\n1. Import pandas and the different packages of Plotly","5a830709":"More the ```Magnitude``` is high, less are observations. Looking like an inverse function.","c9917c18":"**Focusing on earthquakes**\n\n7. Use ```plotly express``` to display the proportion of each type of events in the dataset","f5609741":"# Conclusion\n\nWe have learned about earthquakes and plotly !\n\nI hope you have enjoyed this kernel \ud83d\udc4d","46073381":"5. Check if there's some seasonality in the number of events. \n\nCreate new columns in the dataset:\n- ```Month```\n- ```Year``` \n\nThen use plotly's `make_subplots` function to display the monthly number of observations over a given year, independently for each of the five last years (so, there will be 5 independent historgrams)","ddf2043e":"9. Create a new dataset containing only earthquakes and plot the distribution of their magnitudes depths","56e907b0":"# \ud83d\udca5 Earthquakes visualization \ud83d\udc41\ufe0f","7d12bf93":"3. To avoid problems with your visualizations, use pandas to convert this column into `Datetime` type","f9a4ce82":"Let's visualize the distribution of the earthquakes around the world.\n\n11. Use plotly express' `scatter_mapbox` to display the earthquakes on a map. ","14abe81e":"## Table of Contents\n\n* [Part 1 : Data importation ](#chapter1)\n    \n* [Part 2 : EDA using plotly](#chapter2)\n\n* [Part 3 : Animation](#chapter3)"}}