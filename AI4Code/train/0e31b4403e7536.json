{"cell_type":{"bd7bb3e2":"code","e10ccbeb":"code","f8a5aaf6":"code","f613df1d":"code","6995b71b":"code","0cab3c52":"code","d45c202c":"code","169c676e":"code","22f6e059":"code","cb0356e4":"code","1ce1b57a":"code","f1d2ae11":"code","722675fd":"code","c033e582":"code","e7a1bfd7":"code","d60da666":"code","2f318cd5":"code","38190c78":"code","27d88ab7":"code","57ba3160":"code","e9ee4c54":"code","143c1dc1":"code","458e96e4":"code","b096a519":"code","3f2e0c39":"code","52e72a8c":"code","76e73b25":"code","843b3902":"code","f3ead879":"code","2e78c729":"code","85e0e2a0":"code","653f130f":"code","4147a9b5":"code","ec482ae8":"code","6c415a68":"code","b9b7a137":"code","9003280a":"code","8e2f7034":"code","7df9da37":"code","9ab017de":"code","e0b4565b":"code","0341db82":"markdown","a90f794c":"markdown","2dbacf65":"markdown","43364ea8":"markdown","4076fea8":"markdown","b673b3a2":"markdown","0621473a":"markdown","afe8c1c4":"markdown","aa3f18ca":"markdown","0f0b6cdd":"markdown"},"source":{"bd7bb3e2":"# import libraries\n# ================\n\n# data processing\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\n\n# visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport folium","e10ccbeb":"# palette\npal = ['#EF585D', # red\n       '#016E6F', # green\n       '#494949', # dark-grey\n       '#8C1845', # purple\n       '#FFB401', # yellow\n       '#D93801', # saffron\n       '#EBEBEB'] # light-grey\nsns.set_style(\"whitegrid\")","f8a5aaf6":"# plotly offline\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","f613df1d":"# import dataset\ndf = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndf.head()","6995b71b":"# columns\ndf.columns","0cab3c52":"# info\n# df.info()","d45c202c":"# datatype\n# df.dtype","169c676e":"# describe\n# df.describe(include='all')","22f6e059":"# shape\n# df.shape","cb0356e4":"# no. of missing values\ndf.isna().sum()","1ce1b57a":"# no. of unique values\ndf.nunique()","f1d2ae11":"# value counts \nprint(df['neighbourhood_group'].value_counts())\nprint('')\nprint(df['room_type'].value_counts())","722675fd":"fig, axes = plt.subplots(1, 2, figsize=(20, 6))\n\nsns.scatterplot(data=df, x='longitude', y='latitude', hue='neighbourhood_group', palette='Dark2', ax=axes[0])\nsns.scatterplot(data=df, x='longitude', y='latitude', hue='neighbourhood', legend=False, palette='Dark2', ax=axes[1])\n\naxes[0].set_title('Neighbourhood Group')\naxes[1].set_title('Neighbourhood')\naxes[0].set_ylabel('')\naxes[0].set_xlabel('')\naxes[1].set_ylabel('')\naxes[1].set_xlabel('')\n\nplt.show()","c033e582":"fig, axes = plt.subplots(2, 3, figsize=(20, 9))\n\naxes[0,0].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['price']), cmap='RdPu', alpha=0.8)\naxes[0,0].set_title('Neighbourhood Group')\n\naxes[0,1].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['reviews_per_month']), cmap='GnBu', alpha=0.8)\naxes[0,1].set_title('Reviews per month')\n\naxes[0,2].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['availability_365']), cmap='YlGn', alpha=0.6)\naxes[0,2].set_title('Availability 365')\n\naxes[1,0].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['number_of_reviews']), cmap='RdPu', alpha=0.6)\naxes[1,0].set_title('Number of reviews')\n\naxes[1,1].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['minimum_nights']), cmap='GnBu', alpha=0.6)\naxes[1,1].set_title('Minimum Nights')\n\naxes[1,2].scatter(x=df['longitude'], y=df['latitude'], c=np.log(df['calculated_host_listings_count']), cmap='YlGn', alpha=0.6)\naxes[1,2].set_title('Host listing count Group')\n\nplt.show()","e7a1bfd7":"# costliest neighbourhood_group\ntemp = df.groupby(['neighbourhood_group'])['price'].mean().reset_index()\ntemp = temp.sort_values('price', ascending=False).reset_index(drop=True)\n\nax = sns.barplot(data=temp, x='price', y='neighbourhood_group', palette='Dark2')\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Mean price from each neighbourhood_group')\nplt.show()","d60da666":"# costliest neighbourhood\ntemp = df.groupby(['neighbourhood_group', 'neighbourhood'])['price'].agg(['mean', 'count']).reset_index()\ntemp = temp.sort_values('mean', ascending=False).reset_index(drop=True)\n# temp.head()\n\n#plot\nplt.figure(figsize=(6, 6))\nax = sns.barplot(data=temp.head(20), x='mean', y='neighbourhood', \n            hue='neighbourhood_group', palette='Dark2', dodge=False)\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Mean price from each neighbourhood')\nplt.show()","2f318cd5":"# temp = df[['neighbourhood', 'price', 'neighbourhood_group']]\n# temp = temp.groupby('neighbourhood_group', 'neighbourhood').reset_index()\n\nplt.figure(figsize=(6, 50))\nax = sns.stripplot(data=df, y='neighbourhood', x='price', hue='neighbourhood_group', palette='Dark2')\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Price Distribution based on neighbourhood group')\nplt.show()","38190c78":"ax = sns.stripplot(data=df, x='neighbourhood_group', y='price', palette='Dark2')\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Price Distribution based on neighbourhood group')\nplt.show()","27d88ab7":"ax = sns.stripplot(data=df, x='room_type', y='price', palette='Dark2')\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Price Distribution based on room type')\nplt.show()","57ba3160":"plt.figure(figsize=(8, 4))\ndf_pivot = df.pivot_table(values='price', index='room_type', columns='neighbourhood_group', aggfunc='mean')\nsns.heatmap(df_pivot, annot=True, fmt='.1f', cmap='Purples')\nplt.suptitle('Mean Price')\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","e9ee4c54":"plt.figure(figsize=(8, 4))\ndf_pivot = df.pivot_table(values='reviews_per_month', index='room_type', columns='neighbourhood_group', aggfunc='mean')\nsns.heatmap(df_pivot, annot=True, fmt='.2f', cmap='Blues')\nplt.suptitle('Mean no. of reviews in a month')\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","143c1dc1":"plt.figure(figsize=(8, 4))\ndf_pivot = df.pivot_table(values='host_id', index='room_type', columns='neighbourhood_group', aggfunc='count')\nsns.heatmap(df_pivot, annot=True, fmt='.0f', cmap='Greens')\nplt.suptitle('No. of hosts')\nplt.xlabel('')\nplt.ylabel('')\nplt.show()","458e96e4":"# df.columns","b096a519":"# cols = ['neighbourhood_group', 'price', 'minimum_nights', 'number_of_reviews', 'last_review', 'reviews_per_month', 'calculated_host_listings_count']\n# sns.pairplot(df[cols], hue=\"neighbourhood_group\")","3f2e0c39":"# cols = ['room_type', 'price', 'minimum_nights', 'number_of_reviews', 'last_review', 'reviews_per_month', 'calculated_host_listings_count']\n# sns.pairplot(df[cols], hue=\"room_type\")","52e72a8c":"# cols = ['room_type', 'price', 'minimum_nights', 'number_of_reviews', 'last_review', \n#         'reviews_per_month', 'calculated_host_listings_count', 'availability_365']\n\n# plt.figure(figsize=(8, 6))\n# df_corr = df[cols].corr()\n# sns.heatmap(df_corr, annot=True, fmt='.2f', cmap='RdBu', vmax=0.8, vmin=-0.8)\n# plt.show()","76e73b25":"# plt.figure(figsize=(15, 6))\n\n# for val in df['neighbourhood_group'].unique():\n#     ax = sns.kdeplot(df[df['neighbourhood_group']==val]['price'], label=val, shade=True)\n\n# ax.set_xlabel('Price')\n# ax.set_title('Distribution of Price')\n# plt.figure","843b3902":"# plt.figure(figsize=(15, 6))\n\n# for val in df['room_type'].unique():\n#     ax = sns.kdeplot(df[df['room_type']==val]['price'], label=val, shade=True)\n\n# ax.set_xlabel('Price')\n# ax.set_title('Distribution of Price')\n# plt.figure","f3ead879":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='minimum_nights')","2e78c729":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='price')","85e0e2a0":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='number_of_reviews')","653f130f":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='reviews_per_month')","4147a9b5":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='calculated_host_listings_count')","ec482ae8":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='availability_365')","6c415a68":"# sns.scatterplot(data=df, x='latitude', y='longitude', hue='room_type')","b9b7a137":"# for col in ['neighbourhood_group', 'room_type', 'price', 'minimum_nights', 'number_of_reviews', \n#             'reviews_per_month', 'calculated_host_listings_count', 'availability_365']:\n#     plt.figure(figsize=(10,6))\n#     sns.scatterplot(data=df, x='latitude', y='longitude', hue=col)\n#     plt.plot()","9003280a":"nyc_map = gpd.read_file('..\/input\/new-york-shapefile-16\/cb_2016_36_tract_500k.shp')\nnyc_map.head()","8e2f7034":"# nyc_map['AWATER'].value_counts()","7df9da37":"# nyc_map = gpd.read_file('..\/input\/new-york-shapefile-16\/cb_2016_36_tract_500k.shp')\n# bnb_loc = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.longitude, df.latitude))\n\n# nyc_map.crs = {'init' :'epsg:4326'}\n# bnb_loc.crs = {'init' :'epsg:4326'}\n\n# nyc_bnb = gpd.sjoin(nyc_map, bnb_loc)","9ab017de":"# m = folium.Map(location=[40.7, -73.95], tiles='cartodbpositron',\n#                min_zoom=8, max_zoom=8, zoom_start=8)\n\n# for i in range(0, len(df)):\n#     folium.Circle(\n#         location=[df.iloc[i]['latitude'], df.iloc[i]['longitude']],\n#         color='crimson',\n#         radius=1).add_to(m)\n    \n# m","e0b4565b":"# fig, ax = plt.subplots(figsize=(12, 6))\n# map_joined.plot(ax=ax, color='lightgrey')\n# gdf.plot(ax=ax, column='price', markersize=1, cmap='plasma')\n# ax.set_axis_off()","0341db82":"## Costliest neighbourhood","a90f794c":"### Distribution of price","2dbacf65":"# EDA","43364ea8":"# Data","4076fea8":"## Price Distribution","b673b3a2":"# Library","0621473a":"## Geographical plotting","afe8c1c4":"## Room type vs Neighbourhood group","aa3f18ca":"### Missing and unique values","0f0b6cdd":"### Pairplot and Heatmap"}}