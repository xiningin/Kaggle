{"cell_type":{"d4164a0e":"code","f5d0a1c7":"code","9bd4f6cd":"code","4c5680ec":"code","14dfac31":"code","6e8b608f":"code","aca57e00":"code","58fccc80":"code","ec28d617":"code","f941f503":"code","2203519a":"code","59ef85ed":"code","c50e2a48":"code","f1262496":"code","298c3b54":"code","a0c962bd":"code","db983c40":"code","204a7a3e":"code","2a3ba160":"code","a02bbb22":"code","d31f2ff6":"code","5b56c495":"code","c0fa1281":"code","cf243028":"markdown","92a9da58":"markdown","5e49e8d5":"markdown","67e9b9ee":"markdown","9cd26751":"markdown","1fba4314":"markdown","1fbe5db9":"markdown","815c4fa0":"markdown","24fce8a1":"markdown","df2729ff":"markdown","1943421d":"markdown","bd7e39cb":"markdown","9ec74381":"markdown","5170085b":"markdown"},"source":{"d4164a0e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f5d0a1c7":"data = pd.read_csv('\/kaggle\/input\/craigslist-carstrucks-data\/craigslistVehiclesFull.csv')","9bd4f6cd":"data.head(10)","4c5680ec":"data.info()","14dfac31":"data.shape","6e8b608f":"((data.isnull().sum())\/(1723064))*100","aca57e00":"datadrop = data.drop(columns =['vin', 'size'])\ndatadrop.isnull().sum()","58fccc80":"# Data yang mengandung missing values namun masih dapat digunakan akan diisi dengan menggunakan nilai rata-rata, nilai median, atau modus\nnumerical = ['odometer','weather' ]\ncategorical = ['url', 'city', 'year', 'manufacturer', 'make', 'cylinders', 'fuel','title_status','drive', 'type','paint_color', 'image_url','county_fips','county_name',\"state_fips\",\"condition\", \"transmission\", \"state_code\" ]","ec28d617":"for x in numerical :\n    datadrop[x] = datadrop[x].fillna(datadrop[x].mean())","f941f503":"for x in categorical :\n    datadrop[x] = datadrop[x].fillna(datadrop[x].mode().values[0])","2203519a":"datadrop.isnull().sum()","59ef85ed":"dataclean = datadrop\ndataclean.head()","c50e2a48":"import numpy as np\ndatanumerical = dataclean[['weather', 'lat', 'long','price','odometer']]\ndatacategorical = dataclean[['url', 'city', 'year', 'manufacturer', 'make', 'cylinders', 'fuel','title_status','drive', 'type','paint_color', 'image_url','county_fips','county_name',\"state_fips\",\"condition\", \"transmission\", \"state_code\"]]\ndatanumerical_array = np.array(datanumerical)","f1262496":"import matplotlib.pyplot as plt\ncolors = ['blue', 'red' , 'yellow', 'cyan', \"green\"]\nfig = plt.figure(figsize = (10,10))\naxes = 300\nbp = plt.boxplot(datanumerical_array, \n                 patch_artist=True,\n                 notch=True)\n\nfor i in range(len(bp['boxes'])):\n    \n    bp['boxes'][i].set(facecolor=colors[i])\n    \n    bp['caps'][2*i + 1].set(color=colors[i])\n    \nplt.xticks([1, 2, 3, 4, 5], ['weather','lat','long','odometer','price'])\n\nplt.show()","298c3b54":"import matplotlib.pyplot as plt\nimport seaborn as sns\n#create correlation with hitmap\n\n#create correlation\ncorr = dataclean.corr(method = 'spearman')\n\n#convert correlation to numpy array\nmask = np.array(corr)\n\n#to mask the repetitive value for each pair\nmask[np.tril_indices_from(mask)] = False\nfig, ax = plt.subplots(figsize = (15,12))\nfig.set_size_inches(70,12)\nsns.heatmap(corr, mask = mask, vmax = 0.9, square = True, annot = True)","a0c962bd":"pricecar = dataclean[['year','price']]\npricechange = pricecar[pricecar['year']>=1990]\nplt.scatter(pricechange['year'], pricechange['price'])\nplt.title('year vs price ')\nplt.xlabel('year')\nplt.ylabel('Price Billion $')\nplt.show()","db983c40":"pricechange['price'].corr(pricechange['year'])","204a7a3e":"make_price =  dataclean[[\"make\",\"price\"]]\naverage_make_price = make_price.groupby(\"make\").mean()\naverage_make_price.head()\n\n","2a3ba160":"highprice = dataclean[[\"manufacturer\",\"price\"]]\nhighprice_manufacture = highprice.groupby(\"manufacturer\").mean()\nhighprice_manufacture.head()","a02bbb22":"price_car = dataclean[[\"manufacturer\", \"price\"]]\nprice_car_clean = price_car[pricecar['price']>=5000000]\nprice_car_bar = price_car_clean.groupby(\"manufacturer\").max().sort_values(\"price\").plot(kind='bar').plot(figsize = (20,20))","d31f2ff6":"import pandas as pd\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(10,10))\nlabels = pd.DataFrame(dataclean[\"condition\"].value_counts())\nplt.pie(dataclean[\"condition\"].value_counts(), labels = labels.index, autopct='%.2f')\nplt.show()\nplt.figure(figsize=(10,10))\nlabels = pd.DataFrame(dataclean[\"fuel\"].value_counts())\nplt.pie(dataclean[\"fuel\"].value_counts(), labels = labels.index, autopct='%.2f')\nplt.show()\nplt.figure(figsize=(10,10))\nlabels = pd.DataFrame(dataclean[\"transmission\"].value_counts())\nplt.pie(dataclean[\"transmission\"].value_counts(), labels = labels.index, autopct='%.2f')\nplt.show()","5b56c495":"dataclean.corr(method = 'pearson').style.background_gradient().set_precision(2)","c0fa1281":"dataclean.corr(method = 'spearman').style.background_gradient().set_precision(2)","cf243028":"# Practice Case For EDA Case 1 : Craiglist Carsstruck\nNama : Topik Zulkarnain\n***","92a9da58":"### Rata-rata harga tiap brand","5e49e8d5":" # Visualisasi Data\n ***","67e9b9ee":"#### Visualisasi Sebaran Harga Mobil 30 Tahun Terakhir\nDari scatter plot dan statistik korelasi dapat disimpulkan bahwa harga mobil tidak dipengaruhi oleh waktu","9cd26751":"### Visualisasi hubungan antar feature dengan menggunakan heatmap","1fba4314":"## Pemahaman Data\nPada proses ini akan dieksplor terlebih dahulu mengenai karakteristik data ","1fbe5db9":"## Missing value sudah diinput dengan menggunakan nilai rata-rata pada data numerik, dan nilai yang paling sering muncul pada data kategori","815c4fa0":"Hasil dari info() ataupun data.shape menunjukkan bahwa terdapat 26 kolom dengan jumlah entri tiap kolom berjumlah 1,723,064 . Berikutnya akan dicek missing value pada tiap kolom, lalu dicari persentase missing value agar dapat diberi keputusan apakah kolom tersebut akan di drop atau tidak. Untuk batas missing value yang digunakan adalah 60% jika lebih maka kolom akan di drop, jika tidak maka akan dilakukan metode statistik deskriptif untuk melengkapi missing value.","24fce8a1":"### Visualisasi Grafik Mobil Termahal Berdasarkan Manufaktur","df2729ff":"### Visualisasi data dengan menggunakan boxplot","1943421d":"#### Visualisasi kondisi mobil ","bd7e39cb":"### Rata-rata harga mobil berdasarkan manufakturnya","9ec74381":"### Analisis Korelasi","5170085b":"berdasarkan output diatas maka data vin dan data size harus didrop karna mengandung missing value lebih dari 60% sehingga kedua data tersebut tidak berguna"}}