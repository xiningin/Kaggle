{"cell_type":{"f9d2f875":"code","3d4e6192":"code","fd62c1ab":"code","6a2d7278":"code","abc78dcc":"code","80048d1b":"code","fa6f56af":"code","5d1117db":"code","68be4c6a":"markdown","503dd761":"markdown","062b245a":"markdown"},"source":{"f9d2f875":"%matplotlib inline\nfrom glob import glob\nimport os, pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom skimage.io import imread\nimport seaborn as sns\nfrom collections import defaultdict\nbase_img_dir = '..\/input\/minideeplesion\/'","3d4e6192":"patient_df = pd.read_csv('..\/input\/DL_info.csv')\npatient_df['kaggle_path'] = patient_df.apply(lambda c_row: os.path.join(base_img_dir, \n                                                                        '{Patient_index:06d}_{Study_index:02d}_{Series_ID:02d}'.format(**c_row),\n                                                                        '{Key_slice_index:03d}.png'.format(**c_row)), 1)\n\nprint('Loaded', patient_df.shape[0], 'cases')\n# extact the bounding boxes\npatient_df['bbox'] = patient_df['Bounding_boxes'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1, 4)))\npatient_df['norm_loc'] = patient_df['Normalized_lesion_location'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Spacing_mm_px_'] = patient_df['Spacing_mm_px_'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Lesion_diameters_Pixel_'] = patient_df['Lesion_diameters_Pixel_'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Radius_x'] = patient_df.apply(lambda x: x['Lesion_diameters_Pixel_'][0]*x['Spacing_mm_px_'][0], 1)\n\nlesion_type_dict = dict(enumerate('Bone,Abdomen,Mediastinum,Liver,Lung,Kidney,Soft tissue,Pelvis'.split(','), 1))\n\npatient_df['Coarse_lesion_name'] = patient_df['Coarse_lesion_type'].map(lambda x: lesion_type_dict.get(x, 'Unknown'))\nfor i, ax in enumerate('xyz'):\n    patient_df[f'{ax}_loc'] = patient_df['norm_loc'].map(lambda x: x[i])\nprint('Found', patient_df.shape[0], 'patients with images')\npatient_df.sample(3)","fd62c1ab":"sns.pairplot(hue='Coarse_lesion_name', data=patient_df[['Patient_age', 'Coarse_lesion_name', 'Key_slice_index', 'Radius_x']])","6a2d7278":"freq_flyers_df = patient_df.groupby('Patient_index')[['Patient_age']].apply(\n    lambda x: pd.Series({'counts': x.shape[0], \n                         'Age_Range': np.max(x['Patient_age'])-np.min(x['Patient_age'])})).reset_index().sort_values('Age_Range', ascending = False)\nsns.pairplot(freq_flyers_df[['counts', 'Age_Range']])\nfreq_flyers_df.head(5)","abc78dcc":"join_df = pd.merge(patient_df, freq_flyers_df.head(15))\nax = sns.lmplot(x='Patient_age', y='Radius_x', ci=50,\n                hue = 'Coarse_lesion_name',\n                sharex=False, sharey=False, x_jitter=0.5,\n                 col='Patient_index', col_wrap=5,\n                data = join_df)","80048d1b":"sns.lmplot(x='Study_index', y='Radius_x', ci=50,\n                hue = 'Coarse_lesion_name',\n                sharex=False, sharey=False, x_jitter=0.5,\n                 col='Patient_index', col_wrap=5,\n                data = join_df)","fa6f56af":"def count_and_check_studies(in_patient_df):\n    gr_df = in_patient_df.groupby('Study_index').size().reset_index(name='counts')\n    match_df = gr_df[gr_df['counts']==gr_df['counts'].max()]\n    \n    if (gr_df['counts'].max()>1) and (match_df.shape[0]>1): # more than one study and more than one series \n        return in_patient_df[in_patient_df['Study_index'].isin(match_df['Study_index'])]\n    else:\n        return in_patient_df.head(0)\ngrp_patient_df = patient_df.groupby(['Patient_index']).apply(count_and_check_studies).reset_index(drop = True)\nprint(grp_patient_df.shape[0], 'scans available')\nprint(len(grp_patient_df['Patient_index'].value_counts()), 'patients')\nprint(len(grp_patient_df.groupby(['Patient_index', 'Study_index'])), 'studies')\ngrp_patient_df.head(5)","5d1117db":"ff_grp_df = grp_patient_df.groupby(['Patient_index']).size().reset_index(name='counts').sort_values('counts', ascending=False)\njoin_df = pd.merge(grp_patient_df, ff_grp_df.head(15))\nsns.lmplot(x='Study_index', y='Radius_x', ci=50,\n                hue = 'Coarse_lesion_name',\n                sharex=False, sharey=False,\n                 col='Patient_index', col_wrap=5,\n                data = join_df)","68be4c6a":"# Overall Statistics\nHere we try and look at more patients and the relationship between the lesion size and the age of the patient. We additionally group by the type of lesion to hopefully get the correct trends together (although many are missing labels on where they are located)","503dd761":"# Group the patient scans together","062b245a":"# Filter Patients\nLet's now focus on patients which have the same number of lesions for multiple studies (so we can track them with time)."}}