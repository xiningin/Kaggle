{"cell_type":{"169e57ca":"code","205b3cea":"code","66b6d639":"code","2fc4fd08":"code","b569b78a":"code","7a9aeecf":"code","ed52ad27":"code","94179631":"code","dd76df9c":"code","13b35ee0":"code","263cd322":"code","ec500acd":"code","684e78cf":"code","6066619d":"code","f631e07e":"code","a4428110":"code","58e3fb0b":"code","edc435e2":"code","41a2eb55":"code","3eb7b714":"code","030cf0b6":"markdown","ee6eb5b8":"markdown","48472c0f":"markdown","013ac4b2":"markdown","b4a05f76":"markdown"},"source":{"169e57ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","205b3cea":"book = pd.read_csv(\"\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\nbook.head()","66b6d639":"print(f\"The dataset contains {book.shape[0]} records and {book.shape[1]} columns.\")","2fc4fd08":"book.info()","b569b78a":"book.isnull().sum()","7a9aeecf":"book['Name'].value_counts()","ed52ad27":"Categorical_data = list(book.select_dtypes(exclude=('int', 'float')).columns)\nprint(f'\u0421olumns with categorical data are: {\", \".join(Categorical_data)}.')","94179631":"for i in Categorical_data:\n    if book[i].duplicated().any() == True:\n        print(f\"{i} contains dulpicate values.\")\n    else:\n        continue","dd76df9c":"book.drop_duplicates(Categorical_data, keep = 'first', inplace = True)\nbook","13b35ee0":"book['User Rating'] >= book['User Rating'].max()","263cd322":"x = book['Price']\ny = book['Reviews']\nrng = np.random.RandomState(0)\ncolors = rng.rand(351)\nsizes = 1000 * rng.rand(351)\n\nplt.scatter(x, y,s=sizes, c=colors, alpha=0.3,\n            cmap='viridis')\nplt.colorbar();  ","ec500acd":"sns.lineplot(\n    data=book, x=\"User Rating\", y=\"Price\", hue=\"Genre\",\n    sizes=(.25, 2.5),\n)\nplt.show()","684e78cf":"fig, axs = plt.subplots(2, 2, figsize=(16,10))\nfig.delaxes(axs[1,1])\n\naxs[0, 0].hist(book['Reviews'])\naxs[1,0].hist(book['Year'], bins=50)\naxs[0,1].hist2d(book['User Rating'], book['Reviews'])\n\nplt.show()","6066619d":"# A pairplot visualizes how each variable depends on other variables\nsns.pairplot(book)\nplt.show()","f631e07e":"plt.figure(figsize=(20,10))\nsns.violinplot(x ='Year', y ='Reviews', data = book, hue ='Genre', split = True) \nplt.show()","a4428110":"X = np.array(book[['Reviews', 'Price', 'Year', 'User Rating']])\nY = np.array(book[['Genre']]).ravel()","58e3fb0b":"# Import train_test_split function\nfrom sklearn.model_selection import train_test_split\n\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=0.3,random_state=109) # 70% training and 30% test","edc435e2":"#Import Random Forest Model\nfrom sklearn.ensemble import RandomForestClassifier\n\n#Create a Gaussian Classifier\nclf=RandomForestClassifier(n_estimators=100)\n\n#Train the model \nclf.fit(X_train,y_train)\n\ny_pred=clf.predict(X_test)","41a2eb55":"#Import scikit-learn metrics module for accuracy calculation\nfrom sklearn import metrics\n# Model Accuracy\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","3eb7b714":"y1_pred = clf.predict(X_test)\ny1_pred","030cf0b6":"# ****Random Forests Classifiers: To predict Genre****","ee6eb5b8":"# **Exploratory Data Analysis** \ud83d\udcca\ud83d\udcc8\n","48472c0f":"# Exploring the Dataset","013ac4b2":"# Amazon Top 50 Bestselling Books 2009-2019","b4a05f76":"![amazon](https:\/\/images.hindustantimes.com\/img\/2021\/02\/18\/550x309\/2021-02-17T190607Z_1_LYNXMPEH1G1JH_RTROPTP_3_AMAZON-INDIA-OPERATION_1613626487873_1613626497052.JPG)"}}