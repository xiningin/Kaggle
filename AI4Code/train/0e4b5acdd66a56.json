{"cell_type":{"5753333e":"code","f610f477":"code","7bb7d322":"code","167f884b":"code","9e3e2092":"code","eb1bda85":"code","35181bff":"code","763c9eef":"code","4a0d56e4":"code","6abf5af3":"code","191b6e8a":"code","38671f43":"code","ea31a43d":"code","835eeb13":"code","3347d816":"code","bd61459a":"code","7a603310":"code","94a849de":"code","2563c756":"code","5b930915":"code","2afe133d":"code","d09ecd3e":"code","5006b88b":"code","7942baa2":"code","5b06af97":"code","ae476458":"code","8820438f":"code","a8257f2e":"code","880d562e":"code","86e863a9":"code","30a4455b":"markdown","3dd58a61":"markdown","cf008d82":"markdown","747aeb1d":"markdown","fca295b3":"markdown","5c359865":"markdown","0a68032e":"markdown","0876b8a3":"markdown","640bee05":"markdown","bd589c10":"markdown","85def0fc":"markdown","6306c691":"markdown","dbeba78d":"markdown","c853868a":"markdown","843d7bb5":"markdown","8f49edfa":"markdown","01f9ff98":"markdown","b0c68e37":"markdown","7c772fb0":"markdown","7219c6a4":"markdown","a4216235":"markdown","f25fe5a2":"markdown","dbefe10b":"markdown","0034544a":"markdown","4ad30486":"markdown","132603bf":"markdown","2b12cdd2":"markdown","4d443ca3":"markdown","85f64a7f":"markdown","2cef8be6":"markdown","b7e95e6a":"markdown","fe59d255":"markdown","d1288b19":"markdown"},"source":{"5753333e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f610f477":"df = pd.read_csv(\"\/kaggle\/input\/french-applicants-for-postsecondary\/TEST.csv\")\ndf.head()","7bb7d322":"df = df[df[\"Fili\"] == \"Ecole d'Ing\u00e9nieur\"]\ndf.info()","167f884b":"df.isnull().sum().sum()","9e3e2092":"#TRANSFORM IN PERCENTAGE\ncols_to_change = [\"Total women accepted\",\n\"Admited in the main phase\",\n\"Proportion having received the proposal at the step 1 \",\n\"Proportion having received the proposal at the step 2\",\n\"Proportion having received the proposal at the step 3\",\n\"Proportion of bachelor scholarship holder\",\n\"Proportion of bachelor \",\n\"Proportion of general bachelor\",\n\"Proportion of technologique bachelor\",\n\"Proportion of pro bachelor\",\n\"Baccalaureate with 'Well enough' mention\",\n\"Baccalaureate with 'Well' mention\",\n\"Baccalaureate with 'Very well' mention\"]\n\nfor col in cols_to_change:\n    df[col] = df[col]\/df[\"Total student which have accepted the proposition\"]\n    df[col] = df[col].fillna(0)","eb1bda85":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(25, 8))\n\n\ndf[\"Region\"].value_counts()\nax = sns.countplot(y=\"Region\", data=df,order=df[\"Region\"].value_counts().index,palette=\"crest\")\n\nfor p, label in zip(ax.patches, df[\"Region\"].value_counts().values):\n    ax.annotate(label, (p.get_width()+0.2,p.get_y()+0.55))\n    \nplt.title(\"Total programs by region\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Count',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Region',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)","35181bff":"import seaborn as sns\n\nplt.figure(figsize=(25, 8))\n\n\nax = sns.countplot(y=\"City\", data=df,order=df[\"City\"].value_counts().index,palette=\"rocket_r\")\n\nfor p, label in zip(ax.patches, df[\"City\"].value_counts().values):\n    ax.annotate(label, (p.get_width()+0.2,p.get_y()+0.55))\n    \nplt.title(\"Total programs by City\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Count',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Region',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)","763c9eef":"df[\"Private or Public school\"].value_counts()","4a0d56e4":"plt.figure(figsize=(25, 8))\n\nsns.histplot(\n    df,\n    x=\"Total student selected in final phase\",\n    multiple=\"stack\",\n    color=\"#f4a261\",\n    edgecolor=\".3\",\n    linewidth=.5,\n    bins=50\n)\n\nplt.title(\"Histogram of the applicants for the programs\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Count',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Total Applicants',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)","6abf5af3":"plt.figure(figsize=(25, 8))\n\nsns.histplot(\n    df,\n    x=\"Total student which have accepted the proposition\",\n    multiple=\"stack\",\n    color=\"#2a9d8f\",\n    edgecolor=\".3\",\n    linewidth=.5,\n    bins=50\n)\n\nplt.title(\"Histogram of the applicants who accepted the proposition\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Count',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Total Applicants',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)","191b6e8a":"# make the image bigger\nplt.figure(figsize=(25, 8))\n\nsns.boxplot(data=df,x='access rate candidates who applied to the university (ratio between the last called and the number wishes)',color=\"#b5179e\",orient=\"h\")\nplt.title(\"Boxplot of the formations access rate\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Percentage',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('')","38671f43":"# Initialise the subplot function using number of rows and columns\nfigure, axis = plt.subplots(1,3, figsize=(35,12))\n\nfigure.suptitle('Distribution of mentions for the programs',fontweight = 1000,fontsize = \"xx-large\")\n\nsns.histplot(data=df,x=\"Baccalaureate with 'Well enough' mention\",ax=axis[0],color=\"#f9844a\",alpha=0.8)\naxis[0].set_xlabel(\"Proportion of student accepted with 'Well enough' mention\",fontsize = 15)\nsns.histplot(data=df,x=\"Baccalaureate with 'Well' mention\",ax=axis[1],color=\"#f9c74f\",alpha=0.8)\naxis[1].set_xlabel(\"Proportion of student accepted with 'Well' mention\",fontsize = 15)\nsns.histplot(data=df,x=\"Baccalaureate with 'Very well' mention\",ax=axis[2],color=\"#43aa8b\",alpha=0.8)\naxis[2].set_xlabel(\"Proportion of student accepted with 'Very well' mention\",fontsize = 15)","ea31a43d":"clustering = df[df.columns[5:]].copy()","835eeb13":"hu = ['braycurtis', 'canberra', 'chebyshev', 'cityblock', 'correlation', \n      'cosine', 'dice', 'euclidean', 'hamming', 'jaccard', 'jensenshannon', 'kulsinski', \n      'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', \n      'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']","3347d816":"from scipy.cluster.hierarchy import cophenet\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.spatial.distance import pdist\n\nsc = StandardScaler()\n#Choose the best metric for pdist\nX = sc.fit_transform(clustering[clustering.columns[1:]].values)\nfor h in hu:\n    try:\n        Y = pdist(X, h);\n        Z = linkage(Y,method='ward');\n        print(f' {h} : {cophenet(Z,Y)[0]}')\n    except:\n        print(f' {h} : Error')","bd61459a":"from scipy.cluster.hierarchy import dendrogram, linkage,set_link_color_palette\nimport matplotlib.pyplot as plt\n\nY = pdist(X,'canberra')\nlinked = linkage(Y,method='ward')\nset_link_color_palette(['#3a0ca3'])\nlabelList = range(1, 403)\n\nplt.figure(figsize=(25, 25))\nplt.title(\"Dendogram\", fontsize = 30)\ndendrogram(linked,\n            orientation='right',\n            labels=labelList,\n            distance_sort='descending',\n            show_leaf_counts=True,color_threshold=150)\nplt.axis(False)\nplt.show()","7a603310":"from scipy.cluster.hierarchy import inconsistent\nfrom scipy.cluster.hierarchy import linkage\nlinked = linkage(Y,method='ward')\nI = inconsistent(linked)\nfor result,i in zip(I[-10:,3],range(11,1,-1)):\n    print(f'{i} : {result}')","94a849de":"import random\nrandom.seed(10)\n\nlinked = linkage(Y,method='ward')\n\nlabelList = range(1, 403)\n\nset_link_color_palette(None)\nplt.figure(figsize=(25, 25))\nplt.title(\"Dendogram with clusters selected\", fontsize = 30)\ndendrogram(linked,\n            orientation='right',\n            labels=labelList,\n            distance_sort='descending',\n            show_leaf_counts=True,\n            color_threshold=40)\nplt.axvline(x=40,ymin=0.0, ymax=1.0,color='r',lw=3)\nplt.show()","2563c756":"from scipy.cluster.hierarchy import fcluster\n#group the data according to xabsis = 4 clusters \ngroupes_hc = fcluster(linked,t=40,criterion='distance')\nprint(groupes_hc)","5b930915":"# Count of programs by group \ndf[\"Group\"] = groupes_hc\ndf[\"Group\"].value_counts()","2afe133d":"import seaborn as sns\n# make the image bigger\nplt.figure(figsize=(25, 8))\n\ncolors = [\"#9B5DE5\",\"#d62828\",\"#a7c957\",\"#00F5D4\",\"#f8961e\"]\npalette = sns.color_palette(colors)\n\nplt.title(\"Wishes in principal phase by group\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Wishes in principal phase',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Groups',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)\nsns.boxplot(data=df,y='Group',x=\"Wishes in principal phase\",palette=palette,orient=\"h\")","d09ecd3e":"# Initialise the subplot function using number of rows and columns\nfigure, axis = plt.subplots(3, figsize=(20,12))\nfigure.suptitle('Number of students classed by group according to each bac',fontweight = 1000,fontsize = \"xx-large\")\n\nsns.histplot(data=df,x='Bac general classed by the university',hue=\"Group\",ax=axis[0],palette=palette,multiple=\"stack\")\nsns.histplot(data=df,x='Bac technologic classed by the university',hue=\"Group\",ax=axis[1],palette=palette,multiple=\"stack\")\nsns.histplot(data=df,x='Bac pro classed by the university',hue=\"Group\",ax=axis[2],palette=palette,multiple=\"stack\",binwidth=0.5)","5006b88b":"df.groupby(\"Group\")['Bac general classed by the university','Bac technologic classed by the university'].mean()","7942baa2":"plt.figure(figsize=(25, 8))\nplt.title(\"Total students who have accepted the proposition by group\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Total student who have accepted the proposition',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Groups',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)\nsns.boxplot(data=df,y='Group',x='Total student which have accepted the proposition',palette=palette,orient=\"h\")","5b06af97":"#Women accepted \ndf.groupby(\"Group\")['Total women accepted'].mean()*100","ae476458":"#Admited in the main phase\nfigure, axis = plt.subplots(2, figsize=(20,12),sharex=True)\n\nfigure.suptitle('Proportion of students accepted during the main phase by group ',fontweight = 1000,fontsize = \"xx-large\")\n\nsns.boxplot(data=df,y='Group',x='Admited in the main phase',palette=palette,orient=\"h\",ax=axis[0])\nsns.histplot(data = df, x=\"Admited in the main phase\",hue=\"Group\",palette=palette,multiple=\"stack\",ax=axis[1])","8820438f":"# Initialise the subplot function using number of rows and columns\nfigure, axis = plt.subplots(3, figsize=(20,12),sharex=True)\n\nfigure.suptitle('Proportion of students who received the proposal for each step and group',fontweight = 1000,fontsize = \"xx-large\")\n\n\nsns.histplot(data=df,x=\"Proportion having received the proposal at the step 1 \",hue=\"Group\",ax=axis[0],palette=palette,multiple=\"stack\")\nsns.histplot(data=df,x=\"Proportion having received the proposal at the step 2\",hue=\"Group\",ax=axis[1],palette=palette,multiple=\"stack\")\nsns.histplot(data=df,x=\"Proportion having received the proposal at the step 3\",hue=\"Group\",ax=axis[2],palette=palette,multiple=\"stack\")\n\naxis[2].set_xlabel(\"Proportion of student\")\n\naxis[0].set_ylabel(\"Count Step 1\")\naxis[1].set_ylabel(\"Count Step 2\")\naxis[2].set_ylabel(\"Count Step 3\")","a8257f2e":"# Initialise the subplot function using number of rows and columns\nfigure, axis = plt.subplots(3, figsize=(20,12))\n\nfigure.suptitle('Distribution of mentions for each university according to groups',fontweight = 1000,fontsize = \"xx-large\")\n\n\nsns.scatterplot(data=df,x=\"Baccalaureate with 'Well enough' mention\",y=\"Baccalaureate with 'Very well' mention\",hue=\"Group\",ax=axis[0],palette=palette,alpha=0.8)\naxis[0].set_xlabel(\"Proportion of 'Well enough' mention\")\naxis[0].set_ylabel(\"Proportion of 'Very well' mention\")\nsns.scatterplot(data=df,x=\"Baccalaureate with 'Well' mention\",y=\"Baccalaureate with 'Very well' mention\",hue=\"Group\",ax=axis[1],palette=palette,alpha=0.8)\naxis[1].set_xlabel(\"Proportion of 'Well' mention\")\naxis[1].set_ylabel(\"Proportion of 'Very well' mention\")\nsns.scatterplot(data=df,x=\"Baccalaureate with 'Well enough' mention\",y=\"Baccalaureate with 'Well' mention\",hue=\"Group\",ax=axis[2],palette=palette,alpha=0.8)\naxis[2].set_xlabel(\"Proportion of 'Well enough' mention\")\naxis[2].set_ylabel(\"Proportion of 'Well' mention\")","880d562e":"# Initialise the subplot function using number of rows and columns\nfigure, axis = plt.subplots(2,3,figsize=(20,12),sharey=True,sharex=True)\n\nfigure.suptitle('Distribution of bachelor and scholarship holder for each groups',fontweight = 1000,fontsize = \"xx-large\")\n\nsns.scatterplot(data=df[df[\"Group\"]==1],x=\"Proportion of bachelor scholarship holder\",y=\"Proportion of bachelor \",color=colors[0],ax=axis[0,0])\nsns.scatterplot(data=df[df[\"Group\"]==2],x=\"Proportion of bachelor scholarship holder\",y=\"Proportion of bachelor \",color=colors[1],ax=axis[1,0])\nsns.scatterplot(data=df[df[\"Group\"]==3],x=\"Proportion of bachelor scholarship holder\",y=\"Proportion of bachelor \",color=colors[2],ax=axis[1,1])\nsns.scatterplot(data=df[df[\"Group\"]==4],x=\"Proportion of bachelor scholarship holder\",y=\"Proportion of bachelor \",color=colors[3],ax=axis[0,1])\nsns.scatterplot(data=df[df[\"Group\"]==5],x=\"Proportion of bachelor scholarship holder\",y=\"Proportion of bachelor \",color=colors[4],ax=axis[0,2])\n","86e863a9":"# make the image bigger\nplt.figure(figsize=(25, 8))\nplt.title(\"Access rate for each groups\",{\"fontfamily\": 'sans-serif',\"fontweight\" : 1000,\"fontsize\": \"xx-large\"})\nplt.xlabel('Access rate distribution',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=15)\nplt.ylabel('Groups',{\"fontfamily\": 'sans-serif',\"fontweight\" : 600,\"fontsize\": 15},labelpad=10)\nsns.boxplot(data=df,y='Group',x='access rate candidates who applied to the university (ratio between the last called and the number wishes)',palette=palette,orient=\"h\")","30a4455b":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : Program with very few accepted applicants, probably due to the size of the training.  Rather low proportion of women (14%).  \n**<span style=\"color:#d62828;\"> Red <\/span>** : Program with very few accepted applicants, probably due to the size of the training.  Rather low proportion of women (19%).    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Program with many accepted candidates, quite high proportion of women (45%).   \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : Program with fewer accepted applicants, probably due to the size of the training.  Rather low proportion of women (15%).  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : Program with many accepted candidates, quite low proportion of women (26%). ","3dd58a61":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : Results of mentions rather spread out. No real distinction with other groups.  \n**<span style=\"color:#d62828;\"> Red <\/span>** : interpretable results.    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Mainly \"very well\" and \"well\" mentions, very good linear separation with the orange and blue groups!.   \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : Mainly \"fairly good\" and some \"good\" mentions, very good linear separation with the green group.  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : Mainly \"good\" and \"fairly good\" mentions, very good linear separation with the green group.","cf008d82":"With a result of  **0.887**, **canberra** distance metric present the best dissimilarity for the values !  \n  \nLet's use it for the rest of the analysis ! ","747aeb1d":"**No missing values ! Good point !**","fca295b3":"There are 402 post-bac engineering schools in France ! ","5c359865":"### NaN values ? ","0a68032e":"Lille is the city with the most engineering courses in France, even though it is only the 10th most populous city in France, far behind Paris, Bordeaux and Toulouse","0876b8a3":"## Verifying the Dissimilarity  \n\nWe want **to verify that the distances** (that is, heights) in the tree reflect the original distances accurately before creating our hierarchical cluster tree.  \nIf the clustering is valid, the linking of objects in the cluster tree should have a strong correlation with the distances between objects in the distance vector.  \nThis height is known as the **cophenetic distance** between the two objects.  \n\nIn order to use the most effective sitance measure, we will test each of them on dissimilarity.  \n**We will select the one with the best score for our further analysis!** ","640bee05":"## Clustering","bd589c10":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : Mostly candidates with a technological baccalaureate (lack of general and pro bacs).  \n**<span style=\"color:#d62828;\"> Red <\/span>** : Low or interpretable results.    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Mostly candidates with a general baccalaureate (lack of technological and pro bacs).   \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : Some candidates with a technological baccalaureate but also with general one.  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : Mostly candidates with a general baccalaureate (lack of technological and pro bacs). ","85def0fc":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : Almost 100% of students accepted during the main phase of parcoursup (no catch-up) (some outliers).  \n**<span style=\"color:#d62828;\"> Red <\/span>** : Some programs do not have candidates accepted during the main phase! Problem with these courses? .    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Almost 100% of students accepted during the main phase of parcoursup (no catch-up) (some outliers).   \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : A mix between candidates accepted in the first and second phase. These programmes are therefore never full and see new students arriving just before the start of the year.  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : For some programs, a small proportion of applicants do well in the second phase (September).","6306c691":"#### The number of lines intersected by the red one determines the number of clusters. ","dbeba78d":"In addition, we might want to investigate natural divisions that exist among links between objects.  \nOne way to determine the natural cluster divisions in a data set is to compare the height of each link in a cluster tree with the heights of neighbouring links below it in the tree.  \n\nA link whose height differs significantly from that of the links below indicates that the objects joined at that level of the cluster tree are much further apart than their components were when they were joined.  \nThis link is said to be **inconsistent** with the links below it and that what we want !  \n\n**High score of inconsistent is what we want !** \n","c853868a":"# \ud83d\udfe9 EDA \ud83d\udfe9","843d7bb5":"## Dendogram creation","8f49edfa":"The access rate, otherwise known as the ratio between the last called and the number wishes, is an indicator of selectivity.  \nIt is spread over almost the entire range of values, but there is a median of 60 and a block between 40 and 85%!  \n**Then, there are fewer highly selective schools**","01f9ff98":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : very few applicants, low demand.  \n**<span style=\"color:#d62828;\"> Red <\/span>** : very few applicants, low demand.    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Very High demand, median at 4000.  \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : number of applicants below 1000, moderate demand.  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : High demand, median between 1500 and 1750.","b0c68e37":"![width=400](https:\/\/images.unsplash.com\/photo-1523050854058-8df90110c9f1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&q=80)","7c772fb0":"# \ud83d\udfea Hierarchical Clustering \ud83d\udfea","7219c6a4":"More than **half** of the programs have a total number of applicants below 400.  \nOn the other hand, some program can have more **than 4000 applicants**! ","a4216235":"Now that our clusters have been created, let's try to understand what makes them **different from each other**. ","f25fe5a2":"# \ud83d\udee0 Engineering formation clustering with hierarchical cluster analysis \ud83c\udf93","dbefe10b":"## I hope that this analysis has been helpful and that you have understood the use of <span style=\"color:#d62828;\"> hierarchical cluster analysis <\/span>  with notebook!  \n## See you ! \n\n# Baptiste \u26a1","0034544a":"### What we're going to do :\n\nThe French government dataset mainly gives access only to data related to the academic level of applicants and admits or their social situation (scholarship or not).  \nWe would like to highlight a few groups of schools by focusing only on the academic level of applicants and the data related to universities.\n\nBecause of the large number of schools in France, I decided to focus only on engineering courses.\n\nNo target variable is available as in the use of supervised SVM or Random Forest algorithms.  \nI will therefore use an unsupervised machine learning method for this clustering problem: **hierarchical cluster analysis.**  \nThis type of clustering allows to group data on a variety of scales by creating a cluster tree or otherwise called: dendrogram.  \nTherefore, we will be able to highlight intra-group similarities and inter-group differences !\n\n### Questions :\n## Are there natural groupings between engineering schools according to the academic level of the applicants, their situation or their proportion?\n\nDataset source  : https:\/\/www.data.gouv.fr\/fr\/datasets\/parcoursup-2020-voeux-de-poursuite-detudes-et-de-reorientation-dans-lenseignement-superieur-et-reponses-des-etablissements\/","4ad30486":"There are many more private engineering programs than public ones.  \n**A total of 136 for the public and 266 for the private!**","132603bf":"This graph shows us that, however, the places for each programme are limited and therefore some **are more selective than others**! ","2b12cdd2":"# \ud83d\udfe6 Group vizualisation \ud83d\udfe6","4d443ca3":"Splitting the data into 3, 5, 7 or 8 clusters is the best choice.  \n**For the rest of this analysis, I decided to choose 5 clusters to maintain a certain degree of visibility  !**","85f64a7f":"Rather similar results for all formations with the exception of the **red group** which shows **some problem in these programs**.","2cef8be6":"# \ud83d\udfe8 Importation of the dataset \ud83d\udfe8","b7e95e6a":"## Verifying Consistency ","fe59d255":"**<span style=\"color:#9B5DE5;\"> Purple <\/span>** : Mainly only new bachelors, with a variable proportion of scholarship holders (5% to 30% on average).  \n**<span style=\"color:#d62828;\"> Red <\/span>** : No scholarship holders, and a very variable proportion of bachelor candidates.    \n**<span style=\"color:#a7c957;\"> Green <\/span>** : Proportion of Bachelor's degrees mostly between 80% and 100%.Scholarship holder less than 20% (similar to the orange group).   \n**<span style=\"color:#00F5D4;\"> Blue <\/span>** : Proportion of Bachelor's degrees mostly between 60% and 100%.  \n**<span style=\"color:#f8961e;\"> Orange <\/span>** : Proportion of Bachelor's degrees mostly between 80% and 100%.Scholarship holder less than 20% (similar to the green group)..","d1288b19":"# \ud83d\udfe5 Conclusion \ud83d\udfe5\n\n### Group 1 <span style=\"color:#9B5DE5;\"> Purple <\/span> :  \nMainly only new bachelors, highest proportion of scholarship holder, mention obtained variants.  \nThe majority of applicant have been accepted during the main phase.  \nIt is focused on technological baccalaureate candidates.  \nRather low demand.**The access rate is quite low on average**.  \n\n### Group 2 <span style=\"color:#d62828;\"> Red <\/span> :  \nGroup with some problems in interpreting the data.  \nIt mainly includes courses with very low demand and very small numbers.  \nMany of them were not even completed at all during the main phase of ParcourSup.  \n\n### Group 3 <span style=\"color:#a7c957;\"> Green <\/span> :  \nDemand for a very high number of applications, courses with a large number of students, mainly with a general baccalaureate.  \nCorrect male\/female ratio (45% on average). Acceptance during the main phase: 100%.  \nThe mentions obtained at the baccalaureate are the most prestigious (\"Very Well\" and \"Well\"), and the access rate is the lowest.  \nThis group contains the most selective and prestigious programs\n\n### Group 4 <span style=\"color:#00F5D4;\"> Blue <\/span> :  \nDemand in terms of number of candidates is rather moderate with a mix of general and technological baccalaureates.  \nRather small programs (<50 on average). Many students do not accept during the main phase, so these programs need to be supplemented afterwards.  \nThe results of the baccalaureate of the candidates are lower and mostly around the mention \"Well enough\".  \nThe Access rate is rather high, which means that this training is not very selective.\n\n### Group 5 <span style=\"color:#f8961e;\"> Orange <\/span> :  \nVery high demand for applications, courses with a large number of students, mainly with a general baccalaureate.  \nLow male\/female ratio (26% on average).  \nAcceptance during the main phase between 90% and 100%.  \nThe mentions obtained in the baccalaureate are the most important (\"Well enough\" and \"Well\"), and the access rate is the highest.  \nThis group contains programmes similar to the green group but less selective and less prestigious."}}