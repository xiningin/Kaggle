{"cell_type":{"7250dd99":"code","1a6a5686":"code","9ba49c27":"code","2b30b08b":"code","f4c3e7e5":"code","185dd217":"code","d9258929":"code","b1aafe55":"code","e7deed50":"code","89361469":"code","4c46322e":"code","2bafe8aa":"code","3a300ca0":"code","d8bf33be":"code","e4bb7836":"code","ff92750c":"code","004170ba":"code","cb01ce75":"code","33c49fe6":"code","7d899059":"code","4d1ea71b":"code","fd23ac50":"code","5cf78f49":"code","b4d2a33e":"code","dfec3412":"code","b2e9fe2d":"code","5f139990":"code","de6e4d3a":"code","bc87f276":"code","11fd1db2":"code","9fe4f527":"code","a09afc6d":"code","be479941":"code","5adb038a":"code","92588758":"code","ec22a76a":"code","f2536213":"code","1136267b":"code","fb9e13f8":"code","9991d4a3":"markdown","c29c11be":"markdown","98a688ba":"markdown","e10f4c09":"markdown","a5a066e8":"markdown","b9c2a7e4":"markdown","d3b984ce":"markdown","3ea17cbf":"markdown","3850360f":"markdown","8ea2a2b4":"markdown","6afd8611":"markdown","23923eb4":"markdown","fe5eb902":"markdown","b5bf4513":"markdown","fd7c579d":"markdown","3a9d049f":"markdown","91eec475":"markdown","89344d6c":"markdown","a471f601":"markdown","86efd036":"markdown","4fba1edb":"markdown","f151288a":"markdown","3333f907":"markdown","41a2a046":"markdown","de3e7e17":"markdown","2a7b4b4d":"markdown","e7ce835b":"markdown","c2585f44":"markdown","1ba39365":"markdown","bda8f774":"markdown","fd5f8f72":"markdown","8825a96e":"markdown","35016e90":"markdown","aa02d203":"markdown","50118ea6":"markdown","aec07ff9":"markdown","266104bc":"markdown","67e6158d":"markdown","8df7b327":"markdown","5960c0d6":"markdown","ef06b8b3":"markdown","f6a79fd9":"markdown","4647b4de":"markdown","3ef239bb":"markdown","14e3f4cd":"markdown","454e9c58":"markdown","360da24b":"markdown","0d8b3804":"markdown","e6bfd528":"markdown","a9e77a3a":"markdown","0fcac87f":"markdown","8a82fd33":"markdown"},"source":{"7250dd99":"## Youtube Video To be added ! \nimport warnings\nfrom IPython.display import YouTubeVideo\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\nfrom IPython.display import HTML\nfrom IPython.display import YouTubeVideo\n\nYouTubeVideo('cjCwpP3cUpg', width=800, height=300)","1a6a5686":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nfrom IPython.display import display\nimport random\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport time\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib_venn as venn\nsns.set()\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ba49c27":"print(\"Loading Train Data ....\")\ndf_train = pd.read_csv(\"..\/input\/riiid-test-answer-prediction\/train.csv\" , nrows = 10**6)\nprint(\"Train Data Info\")\nprint(\"***************************\")\nprint(df_train.info())","2b30b08b":"print(\"Number of Null Objects in Elapsed Time Column are : \",df_train.prior_question_elapsed_time.isna().sum())\nprint(\"Number of Null Objects in Had Explanation Column are : \",df_train.prior_question_had_explanation.isna().sum())","f4c3e7e5":"df_train.head()","185dd217":"unique_users_list = df_train.user_id.unique().tolist()\nprint(\"Number of Unique Users are :\" , len(unique_users_list))\nprint(\"{:>20}: {:>8}\".format('Percentage of Unique Users are',(len(unique_users_list)\/(df_train.shape[0])) *100))","d9258929":"df_users_content_group = df_train.groupby(['content_type_id'])['user_id'].count().reset_index()\ndf_users_content_group.columns = ['content_type_id' , 'count']\nfig = px.bar(\n    df_users_content_group, \n    x='content_type_id', \n    y=\"count\", \n    color = \"content_type_id\",\n    orientation='v', \n    title='User Counts based on Content_type_id', \n    width=500,\n    height=500\n)\n\nfig.show()","b1aafe55":"unique_content_list = df_train.content_id.unique().tolist()\nprint(\"Number of Unique Conents are :\" , len(unique_content_list))\n#print(%.3f\"Percentage of Unique Questions are : \" , (len(unique_questions_list))\/(df_train.shape[0]))\n# Let's check our memory usage\nprint(\"{:>20}: {:>8}\".format('Percentage of Unique Content are',len(unique_content_list)\/(df_train.shape[0]) *100))","e7deed50":"## Lets Now plot top content like top 10 content and their distribution based on occurence\ndf_top_content = df_train.groupby('content_id')['user_id'].count().reset_index().sort_values(by ='user_id', ascending=False)[:5]\ndf_top_content['content_id'] = df_top_content['content_id'].astype('category')\ndf_top_content.columns = ['content_id' , 'count']\nfig = px.bar(\n    df_top_content, \n    x='content_id', \n    y=\"count\", \n    orientation='v', \n    title='Top 5 Content Ids Having most user', \n    width=800,\n    height=800\n)\n\nfig.show()","89361469":"df_ques_only = df_train.loc[df_train['content_type_id'] == 0]\ndf_top_ques = df_ques_only.groupby('content_id')['user_id'].count().reset_index().sort_values(by ='user_id', ascending=False)[:5]\ndf_top_ques['content_id'] = df_top_ques['content_id'].astype('category')\ndf_top_ques.columns = ['content_id' , 'count']\nfig = px.bar(\n    df_top_ques, \n    x='content_id', \n    y=\"count\", \n    orientation='v', \n    title='Top 5 Question Ids Having most user', \n    width=800,\n    height=800\n)\n\nfig.show()","4c46322e":"correct_answer_stu = df_train.loc[df_train['answered_correctly'] == 1 ].shape[0]\nprint(\"Number of Correct Answer Students  are :\" ,correct_answer_stu)\nprint(\"{:>20}: {:>8}\".format('Percentage of Correct Answers',(correct_answer_stu)\/(df_train.shape[0]) *100))","2bafe8aa":"df_ques_only = df_train.loc[df_train['content_type_id'] == 0]\ndf_correct_ans = df_ques_only.groupby('answered_correctly')['user_id'].count().reset_index().sort_values(by ='user_id', ascending=False)\ndf_correct_ans\ndf_correct_ans.columns = ['answered_correctly' , 'count']\nfig = px.bar(\n    df_correct_ans, \n    x='answered_correctly', \n    y=\"count\", \n    orientation='v', \n    title='User Counts Based on Correctly answer question', \n    width=500,\n    height=500\n)\n\nfig.show()","3a300ca0":"df_questions_user = df_train.loc[df_train['content_type_id'] == 0 ]\ndf_lectures_user = df_train.loc[df_train['content_type_id'] == 1 ]\ndf_questions_user_id_set = set(df_questions_user['user_id'])\ndf_lectures_user_id_set = set(df_lectures_user['user_id'])\nvenn.venn2([df_questions_user_id_set,df_lectures_user_id_set],set_labels=('Question','Lectures'))","d8bf33be":"df_sample_stu = df_train.loc[df_train['user_id'] == 115]\nunique_questions_list = df_sample_stu.content_id.unique().tolist()\nprint(\"Number of Unique Questions by Student 115 are :\" , len(unique_questions_list))\n#print(%.3f\"Percentage of Unique Questions are : \" , (len(unique_questions_list))\/(df_train.shape[0]))\n# Let's check our memory usage\nprint(\"{:>20}: {:>8}\".format('Percentage of Unique Questions Seen by 115 are',len(unique_questions_list)\/(df_sample_stu.shape[0]) *100))\ncorrect_answer_stu = df_sample_stu.loc[df_sample_stu['answered_correctly'] == 1 ].shape[0]\nprint(\"Number of Correct Answer by 115   are :\" ,correct_answer_stu)\nprint(\"{:>20}: {:>8}\".format('Percentage of Correct Answers by 115 are',(correct_answer_stu)\/(df_sample_stu.shape[0]) *100))","e4bb7836":"df_ques = pd.read_csv('..\/input\/riiid-test-answer-prediction\/questions.csv')\ndf_ques.head()","ff92750c":"print(\"Number of Unique Questions are \" , df_ques.shape[0])\n","004170ba":"train_ques_set = set(df_train['content_id'])\nall_ques_set = set(df_ques['question_id'])\n\nnot_in_train_ques = list(all_ques_set.difference(train_ques_set))\nprint('{}:{}'.format(\"The Number of Questions Not in Train Set Are\" , len(not_in_train_ques)))","cb01ce75":"df_ques.head()","33c49fe6":"df_ques_bundle = df_ques.groupby('part')['question_id'].count().reset_index().sort_values(by ='question_id', ascending=False)\ndf_ques_bundle.columns = ['part' ,'count']\ndf_ques_bundle.plot.bar(x = 'part' , y = 'count', title = \"Number of Questions by Parts\")","7d899059":"# Making List of Unique Tags !\ntag_list = []\nfor i in df_ques.index:\n    temp = str(df_ques['tags'][i]).split(\" \")\n    for tag in temp:\n        if tag not in tag_list:\n            tag_list.append(tag)\n","4d1ea71b":"## Peaking Over Few Tags \ntag_list[:10]","fd23ac50":"tag_dict = {key:0 for key in tag_list}\nfor i in df_ques.index:\n    temp = str(df_ques['tags'][i]).split(\" \")\n    for tag in temp:\n        tag_dict[tag] +=1\n","5cf78f49":"# sorting dict \nsorted_tag_dict = {k: v for k, v in sorted(tag_dict.items(), key=lambda item: item[1] , reverse=True)}\n","b4d2a33e":"## Lets Now Get Minimum and Maximum appearance of Tags\n\nprint(\"Maximum Appearance of a Tag is :\" , max(sorted_tag_dict.values()))\nprint(\"Minimum Appearance of a Tag is :\" , min(sorted_tag_dict.values()))\nprint(\"Tag Having Maximum Appearance is :\" , list(sorted_tag_dict.keys())[0] )\nprint(\"Tag Having Minimum Appearance is :\" , list(sorted_tag_dict.keys())[-1] )","dfec3412":"# Lets Take Top 10 Tags and plot their occurences\nimport itertools\ntop_10_tags = dict(itertools.islice(sorted_tag_dict.items(), 10))\ndf_top_10 = pd.DataFrame(list(top_10_tags.items()) , columns=['Tag' , 'appearances']) \nimport seaborn as sns\nax = sns.barplot(x=\"Tag\", y=\"appearances\", data=df_top_10)\n","b2e9fe2d":"#sorted_tag_dict.keys()[0]\nlist(sorted_tag_dict.keys())[0] ","5f139990":"df_train = df_train.rename(columns = {'content_id':'question_id'})\ndf_comb = df_train.merge(df_ques , on = 'question_id' , how = 'left')\ndf_comb.head()","de6e4d3a":"df_comb = df_comb.loc[df_comb['content_type_id'] == 0 ] # Take only questions Data \ndf_correct_answer_data = df_comb.loc[df_comb['answered_correctly'] == 1]\ndf_incorrect_answer_data = df_comb.loc[df_comb['answered_correctly'] == 0]","bc87f276":"# Making List of Unique Tags !\ncorrect_answer_tag_list = []\nfor i in df_correct_answer_data.index:\n    temp = str(df_correct_answer_data['tags'][i]).split(\" \")\n    for tag in temp:\n        if tag not in correct_answer_tag_list:\n            correct_answer_tag_list.append(tag)\n","11fd1db2":"# Making List of Unique Tags !\nincorrect_answer_tag_list = []\nfor i in df_incorrect_answer_data.index:\n    temp = str(df_incorrect_answer_data['tags'][i]).split(\" \")\n    for tag in temp:\n        if tag not in incorrect_answer_tag_list:\n            incorrect_answer_tag_list.append(tag)\n","9fe4f527":"print(\"Is Two Tag Lists of Correct and Incorrect answers Equal(Having Same Elements ! ) ?\" )\nprint(\"Answer is :\",set(correct_answer_tag_list) == set(incorrect_answer_tag_list))","a09afc6d":"\nvenn.venn2([set(correct_answer_tag_list),set(incorrect_answer_tag_list)],set_labels=('Correct Answer Tags','Incorrect Answer Tags'))","be479941":"df_lectures = df_comb.loc[df_comb['content_type_id'] == 1] \ndf_questions = df_comb.loc[df_comb['content_type_id'] == 0] # Take only questions Data \n\n","5adb038a":"# Making List of Unique Questions Tags !\nquestions_tag_list = []\nfor i in df_questions.index:\n    temp = str(df_questions['tags'][i]).split(\" \")\n    for tag in temp:\n        if tag not in questions_tag_list:\n            questions_tag_list.append(tag)\n","92588758":"# Making List of Unique Lectures Tag\nlectures_tag_list = []\nfor i in df_lectures.index:\n    temp = str(df_lectures['tags'][i]).split(\" \")\n    for tag in temp:\n        if tag not in lectures_tag_list:\n            lectures_tag_list.append(tag)\n","ec22a76a":"venn.venn2([set(questions_tag_list),set(lectures_tag_list)],set_labels=('Answer Tags','Lectures Tags'))","f2536213":"test_example = pd.read_csv('..\/input\/riiid-test-answer-prediction\/example_test.csv')","1136267b":"test_example.head()","fb9e13f8":"test_example_user_id = set(test_example['user_id'])\ntrain_user_id = set(df_train['user_id'])\nprint(test_example_user_id.difference(train_user_id))","9991d4a3":"1. Riid is an AI Company that provides Ai based tutoring solutions to their customers\n2. From the company Website itself Riiid stands for Removing Barriers in \"Inefficieny\" , \"Inequality\" , \"Inconvenience\"","c29c11be":"<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:blue; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Acknowledgements<\/center><\/h2>","98a688ba":"We See That Answer Tags are Superset of Lectures Tags !","e10f4c09":"1. Pair Plots , 3d Scatter Plots !\n2. Some analysis of lectures.csv !\n3. Some Eda based on Feature Engineering Insights !","a5a066e8":"<a id=\"1\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>1. About Riiid<\/center><h2>\n","b9c2a7e4":"Now Let Us Plot a Venn Diagram to show how users watching videos and users answering questions are related","d3b984ce":"Lets check if our test dataset has some user which are not present in train.csv , While submitting for this competition , Data will be given to us in batches , I don't know till now whether that data will have test response of students who are already there in train set !","3ea17cbf":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:blue; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Quick navigation<\/center><\/h2>\n\n* [1. About RIIID ](#1)\n* [2. About Data ](#2)\n* [3. About TOEIC Test ](#3)\n* [4. Intelligent Tutoring and Knowledge Tracing ](#4)\n* [5. EDA OF Train.csv ](#5)\n* [6. EDA OF Questions.csv ](#6)\n* [7. EDA OF Questions.csv and Train.csv Combined ](#7)\n* [8. Example of Test Data ](#8)\n* [9. To be continued Upcoming ](#9)\n\n\n  \n","3850360f":"![Listening1.JPG](attachment:Listening1.JPG)","8ea2a2b4":"#### Lets Now Do Same But Only for Top Questions !","6afd8611":"We can see that part 5 has the most number of questions , part 2 ,3 and 4 have almost similar Number of questions , part 1 has least Number of questions","23923eb4":"<a id=\"6\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>6. EDA of Questions.csv<\/center><h2>\n\n","fe5eb902":"For more details about this topic , please refer the Youtube video given below , it explains everything right from knowledge tracing and also Bayesian Knowledge Tracing","b5bf4513":"Lets see how many parts are there to which a question can belong !","fd7c579d":"<a id=\"7\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>7. EDA of Train and Questions.csv Combined<\/center><h2>\n","3a9d049f":"Here is an Example of Sample question Taken From Part 1 of Listening Section . In part 1 , four statements about an image is spoken(not printed) and of this four statements we have to select one statement which best describes the image.","91eec475":"Let's see Tags of Questions Now !","89344d6c":"1. TOEIC is a Test of 120 minutes , It consists of 2 Sections .\n2. TOEIC has multiple choice question format in which we have to mark answers in answer sheet .\n3. It consists of Reading Section and Listening Sections .\n4. Each Section has multiple parts in itself which assess different learning capabilities of student.","a471f601":"![riiidhome.JPG](attachment:riiidhome.JPG)","86efd036":"<a id=\"2\"><\/a>\n\n<h2 style='background:blue; border:0; color:white'><center>2. About Data<\/center><h2>\n","4fba1edb":"<a id=\"9\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>9. To be continued Upcoming !<\/center><h2>\n","f151288a":"Lets peek into train dataframe","3333f907":"# Information About The Competition :","41a2a046":"Now we will evaluate Number of Unique Users in our train dataframe , remember that a user can have multiple interaction , as he can answer multiple questions and also watch video lectures in between . ","de3e7e17":"Lets now plot bar plot , for users distribution as per content_id and understand how many users are watching lecture and how many were answering question , lets see which is dominating content type id","2a7b4b4d":"1. Riiid Offers Santa which is Mobile Based Test Preparation Application for Test of English for International Communication aka TOEIC.\n2. Using Data generated from Santa Application by user interactions , Riiid provides personalized study plans in real time to the users to optimize their learning potential.","e7ce835b":"# Exploratory Data Analysis ","c2585f44":"## 1. Intelligent Tutoring Systems(ITS)\n1. Intelligent tutoring is a computer system , that aims to provide immediate and customized feedback to learners.\n2. ITS are used extensively in formal and education settings.\n3. Some Examples of ITS are : Practical Algebra Tutor(PAT) used to teach Algebra to students developed by  Pittsburgh Advanced Cognitive Tutor Center at Carnegie Mellon University,  SQL Tutor developed by ICTG at University of Canterrburry New Zealand , SmartTutor developed to support needs of Adults for continuing Education.","1ba39365":"Let us see appearance of Tags as per correct and incorrect answer wise , let us analyse top 10 tags , we have to predict whether given answer is correct or  not , let us see if tags have some trends or not !","bda8f774":"<a id=\"3\"><\/a>\n\n<h2 style='background:blue; border:0; color:white'><center>3. About TOEIC Test<\/center><h2>\n","fd5f8f72":"Lets Now See which Tags Have Minimum and Maximum Number of appearance and also lets try to plot some top few tags having highest occurences!","8825a96e":"We can see that Number of Users who were answering questions , dominate number of users who were watching the lectures.","35016e90":"Lets now see what percentage of users correctly answered the questions and also their distribution","aa02d203":"You can Read more about TOEIC [here](https:\/\/www.iibc-global.org\/english\/toeic\/test\/lr\/about\/format.html) , but the key takeaway is that responses to an answer will be 4 choices , we will see this now as we progress in EDA . ","50118ea6":"As per the data description given [here](https:\/\/www.kaggle.com\/c\/riiid-test-answer-prediction\/data) if you notice \"example_test_rows.csv\" , It says clearly \" Some questions will appear in the hidden test set that have NOT been presented in the train set, emulating the challenge of quickly adapting to modeling newly introduced questions\" , However their Metadata is still with us in questions.csv , This can come useful for validation set !","aec07ff9":"<b> Lets see Sample Statistics of an student who has user_id = 115 <\/b>","266104bc":"We can see that there is Full Overlap Between Two Sets , Hence Tags Alone Can't Help Us May be there Frequency will be useful !","67e6158d":"## 2. Knowledge Tracing\n1. A Knowledge Tracing algorithm is used in many intelligent tutoring applications.\n2. Bayesian Knowledge Tracing Algorithm is used in many intelligent tutoring systems to model each learner's mastery of Knowledge being tutored.\n3. Bayesian Knowledge Tracing Assumes student Knowledge being represented as set of binary variables , one for each skill , where each skill is being mastered or not (More Informally for our Task Reading and Listening are two skills which will be assessed and hence they can be represented by Binary Variable) Observations in Bayesian Knowledge Tracing are also Binary (For our example it would be whether student got an answer correct or incorrect)","8df7b327":"1. I would really like to Thank Kaggle and Riiid to host this competition , applying Ai to Education is really one of the novel ideas.\n\n2. I would like to thank Analytics India Mag , their article over [here](https:\/\/analyticsindiamag.com\/riiid-announces-100000-kaggle-competition-using-ednet-worlds-largest-education-dataset\/) , helped me understand more about domain and Riiid itself .\n\n3. I would also like to thank [Kostiantyn Isaienkov](https:\/\/www.kaggle.com\/isaienkov) , his EDA kernel [here](https:\/\/www.kaggle.com\/isaienkov\/mechanisms-of-action-moa-prediction-eda)  for mechanisms of action prediction competitions , provided me lot of ideas and also how to best showcase the results.\n\n4. Finally Do Upvote this kernel , if you found it useful and insightful , it will motivate me to produce more kernel relevant to modelling in this competition and also more kernel in future !","5960c0d6":"In Above Question 4 statements were spoken only once and out of that one was corrected which has been marked","ef06b8b3":"We can clearly see that there are some user id in test examples which are not present in train examples , however this can also be due to the fact as we have sampled the data ! A good way would be to use libraries like dask dataframes which allows larger datasets to be processed on Ram ! ","f6a79fd9":"Now lets see % age of unique content in our dataset","4647b4de":"<a id=\"2\"><\/a>\n","3ef239bb":"<a id=\"5\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>5. EDA of Train.csv<\/center><h2>\n","14e3f4cd":"We can see that set of Users that are watching lectures are subset of set of users answering questions , which means there can be users who only answers questions and not prefer watching lectures if it were the case that all users watch lectures and also answer questions we would have gotten almost overlapping set!","454e9c58":"There appears some null objects in \"prior_question_elapsed_time\" and \"prior_question_had_explanation\" columns lets check their count !","360da24b":"<a id=\"4\"><\/a>\n\n<h2 style='background:blue; border:0; color:white'><center>4. Intelligent Tutoring and Knowledge Tracing <\/center><h2>\n","0d8b3804":"Let us see one more example of a question from Part 5 of Reading Section , which involves selecting best answer from 4 choices given to appropriately complete the sentence .","e6bfd528":"<a id=\"8\"><\/a>\n<h2 style='background:blue; border:0; color:white'><center>8. Example of Test Data !<\/center><h2>\n","a9e77a3a":"Let's now dive into EDA , after some domain knowledge and insights into competition and problem we are going to solve","0fcac87f":"![Reading1.JPG](attachment:Reading1.JPG)","8a82fd33":"Lets Now plot question tags and lectures Tag !"}}