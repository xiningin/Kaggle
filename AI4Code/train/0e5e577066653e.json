{"cell_type":{"54320aef":"code","2d3fc939":"code","3069cf68":"code","05a90c4f":"code","63ae719e":"code","088127c1":"code","a833132c":"code","90b32083":"code","9ac3b636":"code","fc6e76d9":"code","c792d4b1":"code","02bc6e83":"code","cadbcd3a":"code","3e50b49d":"code","98a0378f":"code","d54bc5ac":"code","281cf422":"code","8ff726b0":"code","276f7580":"code","7e53dcd8":"code","3ac0693c":"code","b341f873":"code","8832198e":"code","32dd1a93":"code","7dc7ccff":"code","ab21a0d7":"markdown","f111d594":"markdown","c9100005":"markdown","7dd6ea60":"markdown","6c9ab30b":"markdown","7ffe5ca4":"markdown","e0b90dfe":"markdown","72411d42":"markdown","c0c65358":"markdown","6ad00727":"markdown","df18d9fc":"markdown","dbae8aea":"markdown"},"source":{"54320aef":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2d3fc939":"import matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure as fig\nimport seaborn as sns\nfrom scipy.stats import linregress\nfrom wordcloud import WordCloud, STOPWORDS","3069cf68":"data = pd.read_csv('..\/input\/noon-perfume\/noon_perfumes_dataset.csv')","05a90c4f":"print(data.shape)\nprint(data.isna().sum())\ndata.head()","63ae719e":"beand_list=[]\nbrands=[beand_list.append(x) for x in data['brand'] if x not in beand_list]\nprint(len(beand_list))\nprint(beand_list)","088127c1":"scent_list=[]\nscents=[scent_list.append(x) for x in data['scents'] if x not in scent_list]\nprint(len(scent_list))\nprint(scent_list)","a833132c":"data['price_deduction']=data['old_price']-data['new_price']\ndata['%_of_deduction']=((data['price_deduction']\/data['old_price']).round(4))*100\ndata['price_per_ml']=(data['new_price']\/data['ml']).round(2)","90b32083":"data","9ac3b636":"men=data[data['department']=='Men']\nwomen=data[data['department']=='Women']\nunisex=data[data['department']=='Unisex']","fc6e76d9":"avg_price_men=men['new_price'].mean()\navg_discount_men=men['price_deduction'].mean()\navg_price_men=men['new_price'].mean()\navg_discount_men=men['price_deduction'].mean()","c792d4b1":"avg_old_price = data.groupby('department')['old_price'].mean().reset_index()\navg_new_price = data.groupby('department')['new_price'].mean().reset_index()\nsns.barplot(x=\"department\",  y=\"old_price\", data=avg_old_price, color='pink', label='Average Price Reduction')\nsns.barplot(x=\"department\", y=\"new_price\", data=avg_new_price, color='lightblue', label='Average New Price')\nsns.set_context(\"talk\")\nplt.title('Price Reduction')\nplt.xlabel('Category')\nplt.ylabel('Price')\nplt.legend(bbox_to_anchor=(1, 1), loc='upper left')\nplt.show()","02bc6e83":"plt.hist(men['price_per_ml'], alpha=0.4, label='Men', density=False)\nplt.hist(women['price_per_ml'], alpha=0.4, label='Women', density=False)\nplt.hist(unisex['price_per_ml'], alpha=0.4, label='Unisex', density=False)\nplt.yscale('log')\nplt.xticks(ticks=[0,2,4,6,8,10,12], labels=None)\nplt.title('Comparison of the Price per ml')\nplt.xlabel('Price per ml')\nplt.ylabel('Number of Items')\nplt.legend()\nplt.show()","cadbcd3a":"rate_jitter=data['item_rating']+np.random.normal(0,0.1,size=len(data))\nsns.relplot(x=data['price_per_ml'], y=rate_jitter, kind='scatter', hue=data['department'], alpha=0.2, size=data['price_per_ml'], col=data['department'], col_wrap=2)\nplt.xticks(ticks=[0,2,4,6,8,10,12], labels=None)\nplt.show()","3e50b49d":"regression=linregress(men['price_per_ml'], men['item_rating'])\nprint(regression)","98a0378f":"fx=np.array([men['price_per_ml'].min(), men['price_per_ml'].max()])\nfy=regression.intercept+regression.slope*fx\nrate_jitter_men=men['item_rating']+np.random.normal(0,0.1,size=len(men))\nsns.relplot(x=men['price_per_ml'], y=rate_jitter_men, kind='scatter', alpha=0.2, size=men['price_per_ml'])\nplt.xticks(ticks=[0,2,4,6,8,10,12], labels=None)\nplt.plot(fx, fy, '--', color='red')\nplt.xscale(\"log\")\nplt.title('Regression between the Price and the Stars', y=1.04)\nplt.xlabel('Price per ml')\nplt.ylabel('Stars')\nplt.show()","d54bc5ac":"men_base_str=men['base_note'].str.cat(sep=' ')\nmen_middle_str=men['middle_note'].str.cat(sep=' ')\nmen_str=men_base_str+men_middle_str\npunctuations = '''!()-[]{};:'\"\\,<>.\/?@#$%^&*_~'''\nmen_str_nopunc = \"\"\nfor word in men_str:\n   if word not in punctuations:\n       men_str_nopunc = men_str_nopunc + word\nmen_str_clean_and=men_str_nopunc.replace(' and ', '')\nmen_str_clean_And=men_str_clean_and.replace(' And ', '')\nmen_str_cleaned=men_str_clean_And.replace(' Notes ', '')","281cf422":"#define a fuction to count the number of words in a string\ndef word_count(str):\n    counts = {}\n    words = str.split()\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts\n\nmen_note_lib=word_count(men_str_cleaned)\nsort_men = sorted(men_note_lib.items(), key=lambda x: x[1], reverse=True)\n\n#conver a dictionary to a dataframe\nmen_note_df=pd.DataFrame(men_note_lib.items(), columns=['note', 'frequency'])\nmen_note_df.sort_values('frequency', ascending=False).head(10)","8ff726b0":"men_note_top10=men_note_df.sort_values('frequency', ascending=False).head(10)\nsns.catplot(x='frequency', y='note', data=men_note_top10, kind='bar', height=4, aspect=16\/9)\nplt.title('Top 10 Scent Notes for Men')\nplt.xlabel('Frequency')\nplt.ylabel('Scent Notes')\nplt.show()","276f7580":"#prepare for the string of women's notes\nwomen_base_str=women['base_note'].str.cat(sep=' ')\nwomen_middle_str=women['middle_note'].str.cat(sep=' ')\nwomen_str=women_base_str+women_middle_str\nwomen_str_nopunc = \"\"\nfor word in women_str:\n   if word not in punctuations:\n       women_str_nopunc = women_str_nopunc + word\nwomen_str_clean_and=women_str_nopunc.replace(' and ', '')\nwomen_str_clean_And=women_str_clean_and.replace(' And ', '')\nwomen_str_cleaned=women_str_clean_And.replace(' Notes ', '')\n\n\n#display the top 10 scent notes for women\nwomen_note_lib=word_count(women_str_cleaned)\nsort_women = sorted(women_note_lib.items(), key=lambda x: x[1], reverse=True)\nwomen_note_df=pd.DataFrame(women_note_lib.items(), columns=['note', 'frequency'])\nwomen_note_df.sort_values('frequency', ascending=False).head(10)","7e53dcd8":"women_note_top10=women_note_df.sort_values('frequency', ascending=False).head(10)\nsns.catplot(x='frequency', y='note', data=women_note_top10, kind='bar', height=4, aspect=16\/9)\nplt.title('Top 10 Scent Notes for Women')\nplt.xlabel('Frequency')\nplt.ylabel('Scent Notes')\nplt.show()","3ac0693c":"#prepare for the string of unisex's notes\nunisex_base_str=unisex['base_note'].str.cat(sep=' ')\nunisex_middle_str=unisex['middle_note'].str.cat(sep=' ')\nunisex_str=unisex_base_str+unisex_middle_str\nunisex_str_nopunc = \"\"\nfor word in unisex_str:\n   if word not in punctuations:\n       unisex_str_nopunc = unisex_str_nopunc + word\nunisex_str_clean_and=unisex_str_nopunc.replace(' and ', '')\nunisex_str_clean_And=unisex_str_clean_and.replace(' And ', '')\nunisex_str_cleaned=unisex_str_clean_And.replace(' Notes ', '')\n\n#display the top 10 scent notes for unisex\nunisex_note_lib=word_count(unisex_str_cleaned)\nsort_unisex = sorted(unisex_note_lib.items(), key=lambda x: x[1], reverse=True)\nunisex_note_df=pd.DataFrame(unisex_note_lib.items(), columns=['note', 'frequency'])\nunisex_note_df.sort_values('frequency', ascending=False).head(10)","b341f873":"unisex_note_top10=unisex_note_df.sort_values('frequency', ascending=False).head(10)\nsns.catplot(x='frequency', y='note', data=unisex_note_top10, kind='bar', height=4, aspect=16\/9)\nplt.title('Top 10 Scent Notes for Unisex')\nplt.xlabel('Frequency')\nplt.ylabel('Scent Notes')\nplt.show()","8832198e":"men_wc=WordCloud(background_color='#e0edfd', width=1080, height=720).generate(men_str_cleaned)\nplt.imshow(men_wc, interpolation='bilinear')\nplt.axis('off')\nplt.title('Scent Notes for Men',size=16, y=1.04)\nplt.show()","32dd1a93":"women_wc=WordCloud(background_color='white', width=1080, height=720).generate(women_str_cleaned)\nplt.imshow(women_wc, interpolation='bilinear')\nplt.axis('off')\nplt.title('Scent Notes for Women',size=16, y=1.04)\nplt.show()","7dc7ccff":"unisex_wc=WordCloud(background_color='#000000', width=1080, height=720).generate(unisex_str_cleaned)\nplt.imshow(unisex_wc, interpolation='bilinear')\nplt.axis('off')\nplt.title('Scent Notes for Unisex',size=16, y=1.04)\nplt.show()","ab21a0d7":"* Read the .csv file.","f111d594":"* Split the department column into 3 different categories in order to investigate whether there is a pattern hidden inside.","c9100005":"## 6. Analyze\n\n* Plot a stacked bar char to determine the discount range in regards to different sexual categories.","7dd6ea60":"## 1. Introduction\nNoon is a large online marketplace in the Middle East, and this dataset shows the scent notes of perfume in different brands. Since perfume is a product category that has a high profit margin in this region. Looking into the data to understand the trend or the popular scents of perfurme would be beneficial to create a next product.\n\n## 2. Objectives\nIn order to get the general idea of the market, drawing out the charts would help easily understand the current situation. Thus, here comes the quetions that this report woudl like to answer.\n\n1. What kinds of perfume provide the highest discount that may encourage customers to purchase?\n2. Any correlation between the price and the review stars?\n3. What scent notes are usually used in diffent sexual categorie?\n\n## 3. Method\nPython programing\n\n## 4. Prepare\n* First of all, import functions that will be used and then start to analyze the dataset.","6c9ab30b":"* This session would show the note preference of different sexual categories. By giving a bar chart in stead of a table, here demonstrates the top 10 scent notes.","7ffe5ca4":"## 5. Process\n\n*  Understand how the data looks like and determine whether there is an null.","e0b90dfe":"* From this histogram, it shows unisex perfume products are not as expensive as male and female ones.","72411d42":"## 7. Conclusion\nIn sum, here are viewpoints as below.\n\n1. Although there is no big discont for unisex perfumes, unisex perfumes are not as expensive as male and female ones.\n\n2. More women perfumes with a high price get 4-5 star reviews than man's perfumes.\n\n3. Top 5 scent notes per category are as below.\n* Men - Cedar, Amber, Patchouli, Sandalwood, Musk\n* Women - Jasmine, Musk, Rose, Vanilla, Sandalwood\n* Unisex - Amber, Musk, Rose, Sandalwood, Vanilla\n\nSuggested further analysis.\n\n1. Even though this analysis only focus on the general idea of the price and scent notes, the following analysis can change to focus on paritcular brands by the same techniques.\n\n2. What combination of the scent notes is common for different categories.\n\n3. Any preference about the perfume concentration or scents reagarding different brands.","c0c65358":"* Add columns for the price deduction, deduction range, and price per ml.","6ad00727":"* From scatter charts, it demonstrates more women perfumes still get 4-5 star reviews, althoght the price is slightly higher.","df18d9fc":"* From the below chart, it tells there is a trend that a product with a higher price would perhaps result a better review. Here only shows a chart for men's perfume.","dbae8aea":"* Furthermore, in spite of a bar chart, text graphics would look more fnacy. In this way, it is better to have audience's attention."}}