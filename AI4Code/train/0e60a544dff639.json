{"cell_type":{"dd1a079c":"code","c1b02253":"code","80f677dd":"code","5aa41886":"code","8c5a2906":"code","aa18edb0":"code","e9763ea2":"code","5bcc5964":"code","7e9acec2":"code","f2c30724":"code","df9ac0e1":"code","394dd907":"code","c4956e18":"code","d98dc178":"code","6b78520b":"code","ce3e1352":"markdown","77e30018":"markdown","7a1542d7":"markdown","7ff7b98d":"markdown","84977b47":"markdown","d70250bc":"markdown","6c72aa09":"markdown","750e3c31":"markdown","fcab1c69":"markdown","e2e09340":"markdown","024cab9d":"markdown","17d21880":"markdown","d6217d01":"markdown","a2128519":"markdown","3465fc9e":"markdown","3cbac29f":"markdown","f064cf60":"markdown","86bcda10":"markdown","4ee0f448":"markdown","988afe98":"markdown","ddc46542":"markdown","2d7826da":"markdown","c4c214e7":"markdown","16dbec91":"markdown","995b6079":"markdown","30e45070":"markdown","45a693be":"markdown","6dc1794f":"markdown"},"source":{"dd1a079c":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\n\nqo_19 = pd.read_csv('..\/input\/kaggle-survey-2019\/questions_only.csv')\nmcr_19 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\notr_19 = pd.read_csv('..\/input\/kaggle-survey-2019\/other_text_responses.csv')\nss_19 = pd.read_csv('..\/input\/kaggle-survey-2019\/survey_schema.csv')\nffr_18 = pd.read_csv(\"..\/input\/kaggle-survey-2018\/freeFormResponses.csv\")\nmcr_18 = pd.read_csv(\"..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv\")\nss_18 = pd.read_csv(\"..\/input\/kaggle-survey-2018\/SurveySchema.csv\")\nffr_17 = pd.read_csv(\"..\/input\/kaggle-survey-2017\/freeformResponses.csv\")\nmcr_17 = pd.read_csv(\"..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv\", encoding='latin-1')\nss_17 = pd.read_csv(\"..\/input\/kaggle-survey-2017\/schema.csv\")","c1b02253":"print('     2019         2018         2017')\nprint('mcr',mcr_19.shape,mcr_18.shape,mcr_17.shape)\nprint('ss ',ss_19.shape,'   ',ss_18.shape,'   ',ss_17.shape)","80f677dd":"age_x = ['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+']\nmean = []\nfor ran in age_x:\n    if ran == '70+':\n        min_ran = 70\n        mean.append(75)\n    else:\n        min_ran, max_ran = int(ran.split('-')[0]), int(ran.split('-')[1])\n        mean.append((min_ran+max_ran)\/2)\n\nave = {}\nyear = 2017\ncol = 2\nage_y = []\nparam = mcr_17.iloc[1:,col].values\nfor ran in age_x:\n    if ran == '70+':\n        min_ran = 70\n        age_y.append(sum((min_ran <= param)))\n    else:\n        min_ran, max_ran = int(ran.split('-')[0]), int(ran.split('-')[1])\n        age_y.append(sum((min_ran <= param)&(param <= max_ran)))\nave[year] = sum(np.array(mean)*np.array(age_y))\/sum(age_y)\nfig = plt.figure(figsize = (14,9))\nplt.bar(age_x,age_y,color = 'g')\nplt.xlabel('age',fontsize=40)\nplt.ylabel('number of people',fontsize=40)\nplt.title(str(year),fontsize=40)\nplt.show()\n\nyear = 2018\ncol = 3\n\nparam = mcr_18.iloc[1:,col].value_counts()\nage_y = []\nfor ran in age_x:\n    if ran == '70+':\n        age_y.append(param['70-79']+param['80+'])\n    else:\n        age_y.append(param[ran])\nave[year] = sum(np.array(mean)*np.array(age_y))\/sum(age_y)\nfig = plt.figure(figsize = (14,9))\nplt.bar(age_x,age_y)\nplt.xlabel('age',fontsize=40)\nplt.ylabel('number of people',fontsize=40)\nplt.title(str(year),fontsize=40)\nplt.show()\n\nyear = 2019\ncol = 1\nparam = mcr_19.iloc[1:,col].value_counts()\nage_y = []\nfor ran in age_x:\n    age_y.append(param[ran])\nave[year] = sum(np.array(mean)*np.array(age_y))\/sum(age_y)\nfig = plt.figure(figsize = (14,9))\nplt.bar(age_x,age_y,color = 'orange')\nplt.xlabel('age',fontsize=40)\nplt.ylabel('number of people',fontsize=40)\nplt.title(str(year),fontsize=40)\nplt.show()","5aa41886":"fig, ax = plt.subplots(figsize=(14,9))\nplt.title('Change of average age',fontsize=40)\nplt.xlabel('Year',fontsize=40)\nplt.ylabel('Average age',fontsize=40)\nax.plot(list(ave.keys()),list(ave.values()),linewidth=10)\nax.set_ylim(0, 50)\nplt.xticks(rotation=30,fontsize=30)\nplt.yticks(fontsize=30)\nplt.show()","8c5a2906":"r_men = {2017:0,2018:0,2019:0}\nfor year in range(2017,2020):\n    if year == 2019:\n        r_men[year] = (sum((mcr_19['Q2'][1:]=='Male'))\/sum((mcr_19['Q2'][1:]=='Male')|(mcr_19['Q2'][1:]=='Female')))*100\n    if year == 2018:\n        r_men[year] = (sum((mcr_18['Q1'][1:]=='Male'))\/sum((mcr_18['Q1'][1:]=='Male')|(mcr_18['Q1'][1:]=='Female')))*100\n    if year == 2017:\n        r_men[year] = (sum((mcr_17['GenderSelect'][1:]=='Male'))\/sum((mcr_17['GenderSelect'][1:]=='Male')|(mcr_17['GenderSelect'][1:]=='Female')))*100\nr_women = {2017:0,2018:0,2019:0}\nfor year in range(2017,2020):\n    r_women[year] = 100 - r_men[year]\n\nfor year in range(2017,2020):\n    label = ['Male', 'Female']\n    fig, ax = plt.subplots(figsize=(5,5))\n    plt.title(year,fontsize=20)\n    xs = [r_men[year],r_women[year]]\n    plt.pie(xs,labels = label)\n    plt.show()","aa18edb0":"year = 2017\nfor i in range(3):\n    if year == 2017:\n        col = 1\n        idx = 0\n        param = mcr_17.iloc[idx:,col].value_counts()\n    if year == 2018:\n        col = 4\n        idx = 1\n        param = mcr_18.iloc[idx:,col].value_counts()\n    else:\n        col = 4\n        idx = 0\n        param = mcr_19.iloc[idx:,col].value_counts()\n    x_5 = list(param.index)[:5]\n    y_5 = list(param.values)[:5]\n    fig = plt.figure(figsize = (14,9))\n    plt.plot(x_5,y_5,linewidth=8)\n    plt.title(str(year),fontsize=40)\n    plt.xlabel('Country',fontsize=40)\n    plt.ylabel('Number of People',fontsize=40)\n    plt.xticks(rotation=30,fontsize=30)\n    plt.yticks(fontsize=30)\n    plt.show()\n    year += 1","e9763ea2":"x_7 = [\n    'Master',\n    'Bachelor',\n    'Doctor',\n    'Retired Univ',\n    'Professional',\n    'Not answer',\n    'High school'\n]\nparam = mcr_18.iloc[1:,5].value_counts()\ny_7 = list(param.values)\nfig = plt.figure(figsize = (14,9))\nplt.xticks(rotation=30,fontsize=40)\nplt.yticks(fontsize=40)\nplt.plot(x_7,np.array(y_7)*(100\/sum(y_7)),linewidth=8,label = '2018')\nparam = mcr_19.iloc[1:,5].value_counts()\ny_7 = list(param.values)\nplt.plot(x_7,np.array(y_7)*(100\/sum(y_7)),linewidth=8,label = '2019')\nplt.title(str(2018),fontsize=40)\nplt.xlabel('Final Education',fontsize=40)\nplt.ylabel('%',fontsize=40)\nplt.legend()\nplt.show()","5bcc5964":"param = mcr_18['Q3'][1:].value_counts()[:10]\nx_7, y_7 = list(param.index), list(param.values)\nx_7[0], x_7[7] = 'US', 'UK'\nfig = plt.figure(figsize = (14,9))\nplt.xticks(rotation=35,fontsize=35)\nplt.yticks(fontsize=40)\nplt.xlabel('Top10 Country',fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\n#plt.plot(x_7,y_7,linewidth=8,label = '2018',color='g')\nplt.bar(x_7,y_7,linewidth=8,label = '2018',color='g')\nplt.title(str(2018),fontsize=40)\nplt.show()\nparam = mcr_19['Q3'][1:].value_counts()[:10]\nx_7, y_7 = list(param.index), list(param.values)\nx_7[1], x_7[8] = 'US', 'UK'\nfig = plt.figure(figsize = (14,9))\nplt.xticks(rotation=35,fontsize=35)\nplt.yticks(fontsize=40)\nplt.xlabel('Top10 Country',fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\n#plt.plot(x_7,y_7,linewidth=8,label = '2019',color='g')\nplt.bar(x_7,y_7,linewidth=8,label = '2019')\nplt.title(str(2019),fontsize=40)\nplt.show()","7e9acec2":"param = mcr_18['Q6'].value_counts()[:10]\nx_7, y_7 = list(param.index), list(param.values)\nfig = plt.figure(figsize = (14,9))\nplt.xticks(rotation=30,fontsize=25)\nplt.yticks(fontsize=40)\nplt.xlabel('Country',fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.plot(x_7,y_7,linewidth=8,label = '2018',color='orange')\nplt.title(str(2018))\nplt.show()\nparam = mcr_19['Q5'].value_counts()[:10]\nx_7, y_7 = list(param.index), list(param.values)\nfig = plt.figure(figsize = (14,9))\nplt.xticks(rotation=30,fontsize=25)\nplt.yticks(fontsize=40)\nplt.xlabel('Country',fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.plot(x_7,y_7,linewidth=8,label = '2019',color='orange')\nplt.title(str(2019))\nplt.show()","f2c30724":"param = mcr_19['Q3'][1:].value_counts()[:10]\nx_7, y_7 = list(param.index), list(param.values)\nfig, ax = plt.subplots(figsize = (14,9))\nbtm = np.zeros(len(x_7))\nfor job in mcr_19['Q5'][1:].value_counts().index:\n    bottom_param = []\n    for j in x_7:\n        name = j\n        if name == 'US':\n            name = 'United States of America'\n        if name == 'UK':\n            name = 'United Kingdom of Great Britain and Northern Ireland'\n        bottom_param.append(sum((mcr_19['Q3']==name)&(mcr_19['Q5']==job)))\n    bottom_param = np.array(bottom_param)\n    ax.bar(x_7, bottom_param,bottom = btm,label = job)\n    plt.xticks(rotation=30,fontsize=30)\n    plt.yticks(fontsize=40)\n    btm += bottom_param\nplt.xlabel('Number of People',fontsize=40)\nplt.ylabel('Country',fontsize=40)\nplt.legend(prop={'size': 18})\nplt.plot()","df9ac0e1":"nums = ['0-49', '50-249', '250-999', '1000-9999', '>10000']\nkeys =['0-49 employees','50-249 employees','250-999 employees','1000-9,999 employees','> 10,000 employees']\nys = []\nfor i in range(len(nums)):\n    key = keys[i]\n    ys.append(mcr_19['Q6'].value_counts()[key])\nfig, ax = plt.subplots(figsize = (14,9))\nplt.plot(nums,ys, linewidth = 10)\nplt.title('Size of Workplace',fontsize=40)\nplt.xticks(rotation=30,fontsize=30)\nplt.yticks(fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.xlabel('Size of Workplace',fontsize=40)\nplt.show()","394dd907":"xs = ['0','1-2','3-4','5-9','10-14','15-19','20+']\nys = []\nfor ran in xs:\n    ys.append(mcr_19['Q7'][1:].value_counts()[ran])\nfig, ax = plt.subplots(figsize = (14,9))\nplt.plot(xs,ys, linewidth = 10,color = 'brown')\nplt.title('Number of colleage Data Scientists',fontsize=40)\nplt.xticks(rotation=30,fontsize=30)\nplt.yticks(fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.xlabel('Colleage Data Scientists',fontsize=40)\nplt.show()","c4956e18":"xs = list(mcr_18['Q10'][1:].value_counts().index)\nys = list(mcr_18['Q10'][1:].value_counts().values)\nyear = 2018\n#ys = []\n#for x in xs:\n#    ys.append(mcr_18['Q10'][1:].value_counts()[x])\n#plt.plot(xs,ys, linewidth = 10,color = 'green')\nfig, ax = plt.subplots(figsize=(5,5))\nplt.pie(ys,labels = xs)\nplt.title(str(year),fontsize = 40)\nplt.show()\nxs = list(mcr_19['Q8'][1:].value_counts().index)\nys = list(mcr_19['Q8'][1:].value_counts().values)\nyear = 2019\nfig, ax = plt.subplots(figsize=(5,5))\nplt.pie(ys,labels = xs)\nplt.title(str(year),fontsize = 40)\nplt.show()","d98dc178":"xs = []\nys = []\nfor i in range(1,9):\n    xs.append(mcr_19['Q9_Part_'+str(i)].value_counts().index[1].split('-')[-1])\n    ys.append(mcr_19['Q9_Part_'+str(i)].value_counts().values[0])\nxs = ['Analyse for business decisions','Make ML for new fields','Other','Experiments to improve ML','Make Data Infrastructure','SoTA Research','Make ML for product','No ML\/DS at Work']\nfig, ax = plt.subplots(figsize = (14,9))\nplt.bar(xs,ys)\nplt.title('Main Activity',fontsize = 40)\nplt.xticks(rotation=40,fontsize=30)\nplt.yticks(fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.xlabel('Size of Workplace',fontsize=40)\nplt.show()","6b78520b":"year = 2018\ncols = {}\nfor i in mcr_18['Q9'][1:].value_counts().index:\n    if i == '$0-999':\n        cols[i] = 500\n    else:\n        if i == '500,000+':\n            cols[i] = 500000\n        else:\n            if i == 'I do not wish to disclose my approximate yearly compensation':\n                cols[i] = np.nan\n            else:\n                cols[i] = (int(i.split('-')[0].replace(',',''))+int(i.split('-')[1].replace(',','')))\/2\nprint(\"median of respondents' income {} : $\".format(year),int(mcr_18['Q9'][1:].copy().replace(cols).median()))\nprint(\"mean of respondents' income {}: $\".format(year),int(mcr_18['Q9'][1:].copy().replace(cols).mean()))\nidx = np.argsort(mcr_18['Q9'][1:].copy().replace(cols).value_counts().index)\nxs = list(mcr_18['Q9'][1:].copy().replace(cols).value_counts().index[idx])\nys = list(mcr_18['Q9'][1:].copy().replace(cols).value_counts().values[idx])\nfig, ax = plt.subplots(figsize = (14,9))\nplt.plot(xs,ys, linewidth = 10)\nplt.title(str(year),fontsize = 40)\nplt.xticks(rotation=40,fontsize=30)\nplt.yticks(fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.xlabel('$',fontsize=40)\nplt.show()\nyear = 2019\ncols = {}\nfor i in mcr_19['Q10'][1:].value_counts().index:\n    if i == '$0-999':\n        cols[i] = 500\n    else:\n        if i == '> $500,000':\n            cols[i] = 500000\n        else:\n            cols[i] = (int(i.split('-')[0].replace(',',''))+int(i.split('-')[1].replace(',','')))\/2\nback_cols = {}\nback_cols = {cols[i]:i for i in cols}\nprint(\"median of respondents' income {}: $\".format(year),int(mcr_19['Q10'][1:].copy().replace(cols).median()))\nprint(\"mean of respondents' income {}: $\".format(year),int(mcr_19['Q10'][1:].copy().replace(cols).mean()))\nidx = np.argsort(mcr_19['Q10'][1:].copy().replace(cols).value_counts().index)\nxs = np.array(mcr_19['Q10'][1:].copy().replace(cols).value_counts().index)[idx]\nys = np.array(mcr_19['Q10'][1:].copy().replace(cols).value_counts().values)[idx]\nfig, ax = plt.subplots(figsize = (14,9))\nplt.plot(xs,ys, linewidth = 10)\nplt.title(str(year),fontsize = 40)\nplt.xticks(rotation=40,fontsize=30)\nplt.yticks(fontsize=40)\nplt.ylabel('Number of People',fontsize=40)\nplt.xlabel('$',fontsize=40)\nplt.show()","ce3e1352":"# Q4 : Educational Background (From Here 2018 & 2019)","77e30018":"![](https:\/\/i.ytimg.com\/vi\/fcxm5ZKkMKQ\/maxresdefault.jpg)","7a1542d7":"## It seems younger generations are gradually increasing in this 3 years","7ff7b98d":"# Summary of 35 Questions 2019\n\n#Q0 : Total time to answer all the Questions\n#Q1 : Age\n#Q2 : Gender\n#Q3 : Country \n#Q4 : Educational Background\n#Q5 : Job Name\n#Q6 : Size of Workplace\n#Q7 : Number of Colleague Data Scientists\n#Q8 : If ML is in company's business\n#Q9 : Main activity at work\n#Q10 : Yearly compensation\n#Q11 : Money spent on ML\/Cloud computing\n#Q12 : Favorite media sources (person\/platform)\n#Q13 : Where to begin DS\n#Q14 : Tool to EDA\n#Q15 : How long to write DS code\n#Q16 : Which IDE\n#Q17 : Which notebook product to use\n#Q18 : What language for DS\n#Q19 : What language to recommend for beginners\n#Q20 : Tool to visualize\n#Q21 : Which Hardware\n#Q22 : If used TPU\n#Q23 : How long to use ML\n#Q24 : ML algorithms mainly using\n#Q25 : Category of ML mainly using\n#Q26 : Category of CV model mainly using\n#Q27 : NLP methods mainly using\n#Q28 : ML frameworks mainly using\n#Q29 : Cloud computing platforms mainly using\n#Q30 : Cloud computing products mainly using\n#Q31 : Analytics products mainly using\n#Q32 : ML products mainly using\n#Q33 : AutoML tools mainly using\n#Q34 : Database products mainly using","84977b47":"### Data Scientists & Students are the most domaining part of respondents, I think that's why Kaggle is one of the best platform for employing DS Human Resources.\n### and Software Engineer is the next major part.","d70250bc":"### US, India are the quite top of each year based on these plots","6c72aa09":"### There are lots of students in each country, espessially India, but Data Scientists are the most part totally.","750e3c31":"# In 2019 there are much more rich people in respondents than 2018","fcab1c69":"# Change of Average Age","e2e09340":"# Q6 : Size of Workplace","024cab9d":"## Ratio of Male\/Female for each year","17d21880":"# Q9 : Main activity at work","d6217d01":"### Master, Bachelor, Doctor degrees are the most domaining parts of respondents","a2128519":"# Q8 : If ML is in Company's business ","3465fc9e":"# Q1 : Age","3cbac29f":"# Q2 : Gender \n(This time I checked only male\/female because of data duplicate)","f064cf60":"### People from India & US are domaining a lot of part in respondents","86bcda10":"# Q3 : Mother Country","4ee0f448":"# Q7 : Number of colleage Data Scientists","988afe98":"# Top10 places of  currently kagglers live in","ddc46542":"# Top10 jobs of kagglers","2d7826da":"## Top5 kaggler's mother country of each year","c4c214e7":"# Q5 : Kaggler's job trend for each country (2019)","16dbec91":"## About 80% of respondents are Male and only 20 are Female\n#### I was so surprised that the ratio of Male\/Female is always almost the same for each year.","995b6079":"### It seems there are lots of people working at small company like startup, and next big company(maybe it's just because members of company are lot.)","30e45070":"# Let's start from individual information","45a693be":"# Simple Analysis\n\n\n![](https:\/\/miro.medium.com\/max\/1336\/1*GZrTyTz0OKMbxnO5Trhcew.png)\n\n\nThe trend of Machine Learning & Data Science is one of our hottest topic. At this notebook I'll make some simple EDA and Data Visualization.","6dc1794f":"# Q10 : Yearly Income"}}