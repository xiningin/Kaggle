{"cell_type":{"b2c01ca4":"code","4ae605cd":"code","ab2436c5":"code","cb929930":"code","824f2c1c":"code","dca45a51":"code","ac74060f":"code","87c1516c":"code","4a44b61b":"code","3fb2c8e2":"code","bcdcf17a":"code","c1281b56":"code","48c3b66b":"code","b22d581f":"code","ad1962f1":"code","8ac16606":"code","a4603f0d":"code","b07d2589":"code","d7bf70c9":"code","8755efe2":"code","74f6c749":"code","59fa5e26":"code","3f0c5911":"code","babd4ff6":"code","0fc15731":"code","f0be110a":"code","03ae1543":"code","d2407285":"code","42d36dc8":"code","66207331":"markdown","725e87b3":"markdown","a7d6c3d9":"markdown"},"source":{"b2c01ca4":"import os\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport pandas as pd\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4ae605cd":"df_matches = pd.read_csv(\"\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv\")\ndf_matches.head(2)","ab2436c5":"df_deliveries = pd.read_csv(\"\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Ball-by-Ball 2008-2020.csv\")\ndf_deliveries.head(2)","cb929930":"print(df_matches.shape)\nprint(df_deliveries.shape)","824f2c1c":"#In 2019 delhi daredevils name changed to delhi capitals. So i am replacing old name with new name for all the rows.\ndf_matches = df_matches.replace(to_replace =\"Delhi Daredevils\", value = \"Delhi Capitals\") \n\ndf_deliveries = df_deliveries.replace(to_replace = \"Delhi Daredevils\", value = \"Delhi Capitals\")\n\n#Rising pune supergiants name also printed in two ways. Lets change it to Rising pune supergiants.\ndf_matches = df_matches.replace(to_replace =\"Rising Pune Supergiant\", value = \"Rising Pune Supergiants\") \n\ndf_deliveries = df_deliveries.replace(to_replace = \"Rising Pune Supergiant\", value = \"Rising Pune Supergiants\")","dca45a51":"df_total = pd.merge(df_matches, df_deliveries, left_on='id', right_on='id',how='outer')\ndf_total = df_total.drop(['umpire1','umpire2'], axis = 1) \ndf_total.head(2)","ac74060f":"#batsman runs\nbatsman_runs = df_total.groupby(['id','batsman'])['batsman_runs'].sum()\ndf_batsman_runs = batsman_runs.to_frame().reset_index()\ndf_batsman_runs.head(2)","87c1516c":"#batsman deliveries faced\ndfballs = df_total[(df_total['extra_runs'] == 0) ] \nbatsman_balls_faced = dfballs.groupby(['id','batsman'])['batsman_runs'].count() \ndf_batsman_balls_faced = batsman_balls_faced.to_frame().reset_index()\ndf_batsman_balls_faced.rename(columns = {'batsman_runs' : 'balls_faced'}, inplace = True)\ndf_batsman_balls_faced.head(2) ","4a44b61b":"#boundaries - 4\ndf4 = df_total[df_total['batsman_runs'] == 4]\nbatsman_4s = df4.groupby(['id','batsman'])['batsman_runs'].count() \ndf_batsman_4s = batsman_4s.to_frame().reset_index()\ndf_batsman_4s.rename(columns = {'batsman_runs' : 'Boundary Fours'}, inplace = True)\ndf_batsman_4s.head(10) ","3fb2c8e2":"#boundaries - 6\ndf6 = df_total[df_total['batsman_runs'] == 6]\nbatsman_6s = df6.groupby(['id','batsman'])['batsman_runs'].count() \ndf_batsman_6s = batsman_6s.to_frame().reset_index()\ndf_batsman_6s.rename(columns = {'batsman_runs' : 'Boundary Sixes'}, inplace = True)\ndf_batsman_6s.head(2) ","bcdcf17a":"#strike rate\ndf_strike_rate = df_batsman_runs.merge(df_batsman_balls_faced, how = 'inner', on = ['id', 'batsman'])\ndf_strike_rate['strike_rate'] = round(((df_strike_rate['batsman_runs'] \/ df_strike_rate['balls_faced']) * 100),2)\n\ndf_strike_rate = df_strike_rate.merge(df_batsman_4s, how = 'outer', on = ['id', 'batsman'])\n\ndf_strike_rate = df_strike_rate.merge(df_batsman_6s, how = 'outer', on = ['id', 'batsman'])\n\ndf_strike_rate[\"Boundary Fours\"].fillna(0, inplace = True)\n\ndf_strike_rate[\"Boundary Sixes\"].fillna(0, inplace = True)\n\ndf_strike_rate.head(5)","c1281b56":"#innings number\ndf_inning = df_total[['id','inning','batsman']]\ndf_innings = df_strike_rate.merge(df_inning, how = 'inner', on = ['id', 'batsman'])\ndf_innings= df_innings.drop_duplicates(subset=['id','batsman','balls_faced','strike_rate'])\ndf_innings.rename(columns = {'inning' : 'innings_number'}, inplace = True)\ndf_innings.head(3)","48c3b66b":"# Team\ndf_battingteam= df_total[['id','batsman','batting_team']]\ndf_team = df_innings.merge(df_battingteam, how = 'inner', on = ['id', 'batsman'])\ndf_team= df_team.drop_duplicates(subset=['id','batsman','balls_faced','strike_rate','innings_number'])\ndf_team.rename(columns = {'batting_team' : 'Team'}, inplace = True)\ndf_team.head(3)","b22d581f":"# opposition team\ndf_bowlingteam = df_total[['id','batsman','bowling_team']]\ndf_opposition = df_team.merge(df_bowlingteam, how = 'inner', on = ['id', 'batsman'])\ndf_opposition= df_opposition.drop_duplicates(subset=['id','batsman','batsman_runs','balls_faced','strike_rate','innings_number','Team'])\ndf_opposition.rename(columns = {'bowling_team' : 'opposition_team'}, inplace = True)\ndf_opposition.head(3)","ad1962f1":"# Ground\ndf_venue= df_total[['id','batsman','venue']]\ndf_ground = df_opposition.merge(df_venue, how = 'inner', on = ['id', 'batsman'])\ndf_ground= df_ground.drop_duplicates(subset=['id','batsman','batsman_runs','balls_faced','strike_rate','innings_number','Team','opposition_team'])\ndf_ground.rename(columns = {'venue' : 'Ground'}, inplace = True)\ndf_ground.head(3)","8ac16606":"# Date\ndf_date= df_total[['id','batsman','date']]\ndf_date = df_ground.merge(df_date, how = 'inner', on = ['id', 'batsman'])\ndf_date= df_date.drop_duplicates(subset=['id','batsman','batsman_runs','balls_faced','strike_rate','innings_number','Team','opposition_team','Ground'])\ndf_date.head(3)","a4603f0d":"import numpy as np\ndf_date['50s'] = np.where(((df_date.batsman_runs >= 50) & (df_date.batsman_runs < 99)) , 1, 0)\ndf_date['100s'] = np.where(df_date.batsman_runs >= 100 , 1, 0)\ndf_date.head(2)","b07d2589":"# df_date.to_csv('batsmans_data(08-20).csv') ","d7bf70c9":"#Overs bowled\ndf_overs = df_total[(df_total['extra_runs'] == 0)]\n\nbowlerovers = df_overs.groupby(['id','bowler'])['ball'].count()\/6\ndf_bowlersovers = bowlerovers.to_frame().reset_index()\ndf_bowlersovers[\"ball\"] = df_bowlersovers['ball'].astype(int)\ndf_bowlersovers.rename(columns={'ball':'overs'}, inplace=True)\ndf_bowlersovers.head()","8755efe2":"#Maidens bowled\n# df_bowler_runs = df_total.groupby(['id','bowler','over'],as_index=False)['batsman_runs','extra_runs'].sum()\n# df_bowler_runs['bowler_runs'] =df_bowler_runs['batsman_runs'] + df_bowler_runs['extra_runs'] \n# df_bowler_runs.head()\n# df_maiden = df_bowler_runs[df_bowler_runs['bowler_runs'] == 0]\n# df_maidens = df_maiden.groupby(['id','bowler'], as_index=False)['bowler_runs'].count()\n# df_maidens.rename(columns={'bowler_runs':'maiden_overs'}, inplace = True)\n# df_maidens.head() \n\n# df_maiden_overs = pd.merge(df_bowlersovers, df_maidens, left_on=['id','bowler'], right_on=['id','bowler'],how='outer')\n# df_maiden_overs.head()","74f6c749":"#Runs Conceded\ndf_runs = df_total.groupby(['id','bowler'],as_index=False)['batsman_runs','extra_runs'].sum()\ndf_runs['runs_conceded'] = df_runs['batsman_runs'] + df_runs['extra_runs']  \ndf_runs = df_runs[['id','bowler','runs_conceded']]\ndf_runs.head()\ndf_runs = pd.merge(df_bowlersovers, df_runs, left_on=['id','bowler'], right_on=['id','bowler'],how='outer')\ndf_runs.head()","59fa5e26":"#Wickets Taken\ndf_wickets = df_total[(df_total['player_dismissed'] != 'No Wicket') & (df_total['dismissal_kind'] != 'run out')]\n\ndf_wickets_taken = df_wickets.groupby(['id','bowler'],as_index=False)['player_dismissed'].count()\ndf_wickets_taken.rename(columns={'player_dismissed':'wickets_taken'},inplace=True)\ndf_wickets_taken.head()\ndf_wickets_taken = pd.merge(df_runs, df_wickets_taken, left_on=['id','bowler'], right_on=['id','bowler'],how='outer')\ndf_wickets_taken.head()","3f0c5911":"df_balls = df_total[(df_total['extra_runs'] == 0) ]\n\ndf_ballsbowled = df_balls.groupby(['id','bowler'],as_index=False)['ball'].count()\ndf_economy = pd.merge(df_runs, df_ballsbowled, left_on=['id','bowler'], right_on=['id','bowler'],how='outer')\ndf_economy.head()\ndf_economy['economy_rate'] = round((df_economy['runs_conceded'] \/ df_economy['ball'])*6,2)\ndf_economy = df_economy[['id','bowler','economy_rate']]\ndf_economy.head()\ndf_economy = pd.merge(df_wickets_taken, df_economy, left_on=['id','bowler'], right_on=['id','bowler'],how='outer')\ndf_economy.head()","babd4ff6":"#innings number\ndf_inning = df_total[['id','inning','bowler']]\ndf_innings = df_economy.merge(df_inning, how = 'inner', on = ['id', 'bowler'])\ndf_innings= df_innings.drop_duplicates(subset=['id','bowler'])\ndf_innings.rename(columns = {'inning' : 'innings_number'}, inplace = True)\ndf_innings.head(3)","0fc15731":"# Date\ndf_date= df_total[['id','bowler','date']]\ndf_date = df_innings.merge(df_date, how = 'inner', on = ['id', 'bowler'])\ndf_date= df_date.drop_duplicates(subset=['id','bowler'])\ndf_date.head(3)","f0be110a":"# Ground\ndf_venue= df_total[['id','bowler','venue']]\ndf_ground = df_date.merge(df_venue, how = 'inner', on = ['id', 'bowler'])\ndf_ground= df_ground.drop_duplicates(subset=['id','bowler'])\ndf_ground.rename(columns = {'venue' : 'Ground'}, inplace = True)\ndf_ground.head(3)","03ae1543":"# Team\ndf_bowlingteam= df_total[['id','bowler','bowling_team']]\ndf_team = df_ground.merge(df_bowlingteam, how = 'inner', on = ['id', 'bowler'])\ndf_team= df_team.drop_duplicates(subset=['id','bowler'])\ndf_team.rename(columns = {'bowling_team' : 'Team'}, inplace = True)\ndf_team.head(3)","d2407285":"# opposition team\ndf_bowlingteam = df_total[['id','bowler','batting_team']]\ndf_opposition = df_team.merge(df_bowlingteam, how = 'inner', on = ['id', 'bowler'])\ndf_opposition= df_opposition.drop_duplicates(subset=['id','bowler'])\ndf_opposition.rename(columns = {'batting_team' : 'opposition_team'}, inplace = True)\ndf_opposition.head(3)","42d36dc8":"# df_opposition.to_csv('bowlers_data(08-20).csv')","66207331":"**Creating Batsman Data**","725e87b3":"**Creating Bowlers Data**","a7d6c3d9":"In this notebook i am creating data in the format that anyone can easily understand. I.e\n\nHere basically i am creating each player performance in each match.\n\n1) Batsman Data - It contains columns like\n* id, batsman, batsman_runs, balls_faced, strike_rate, Boundary Fours, Boundary Sixes,    innings_number, Team, opposition_team, Ground, date, 50s, 100s \n\n\n2) Bowlers Data - It contain columns like\n* id, bowler, overs, runs_conceded, wickets_taken, economy_rate, innings_number, date, Ground, Team, opposition_team "}}