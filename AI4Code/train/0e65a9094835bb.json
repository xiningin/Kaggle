{"cell_type":{"c6daf9c0":"code","dd9a153a":"code","21c19770":"code","508c8208":"code","5181395a":"code","2fb97bfc":"code","4239f71b":"code","7762b243":"code","5eac420d":"code","e3c0745d":"code","d71255ef":"code","2f370a4e":"code","186735b3":"code","f085ccee":"code","cfec8182":"code","96e0ea3f":"code","416ae11d":"code","ff3d80a4":"code","e91adec3":"code","8d51a16d":"code","580b23a0":"code","87910599":"code","be24e394":"code","f77f8894":"code","45cf763c":"code","ef6ffa5a":"code","a62518f0":"code","a6cb3902":"code","61c1f983":"code","ba04dad9":"code","de178226":"code","4c2a900c":"code","03c2260f":"code","06685cb5":"code","9bb04871":"code","e2547b9c":"code","0d1c7b0b":"markdown","8f26f21f":"markdown","9d69f45d":"markdown","f0bf448f":"markdown","52b2a003":"markdown","6486fad1":"markdown","c417bb8e":"markdown","9ff89736":"markdown","b5593180":"markdown","7c644fd1":"markdown","d53b40b6":"markdown","54330598":"markdown","b0e2996c":"markdown","89c7d207":"markdown","9e1d0e0d":"markdown","700269e1":"markdown","354e600d":"markdown","6c441b37":"markdown","93b3d140":"markdown","95102a8d":"markdown","69de12e2":"markdown","1622c8f0":"markdown","13b42e54":"markdown","5a768286":"markdown","29f2cc4b":"markdown","73d3b594":"markdown","0a1651de":"markdown","ff85a061":"markdown","d1355836":"markdown","3a1c631b":"markdown","23d7b4a1":"markdown","94d6d651":"markdown","d6cbf8ac":"markdown","c78f7c41":"markdown","af1dea17":"markdown","47d4316c":"markdown"},"source":{"c6daf9c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dd9a153a":"#import modules\n\n#import libraries for data handling\nimport os\nimport pandas as pd # for dataframes\nimport numpy as np\n\n#import for visualization\nimport seaborn as sns # for plotting graphs\nimport matplotlib\nimport matplotlib.pyplot as plt # for plotting graphs\n%matplotlib inline\n\n#import for Linear regression\nfrom sklearn.linear_model import LinearRegression\n\n\n#importing plotly and cufflinks in offline mode\nimport cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\n\n#import warnings\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.filterwarnings('ignore', category=DeprecationWarning)","21c19770":"basetable1 = pd.read_excel('\/kaggle\/input\/bollywood\/bollywood.xlsx')\nbasetable1.head(5)","508c8208":"basetable1.info()","5181395a":"# Make a copy for analysis and chages without disturbing the base data\ndf1 = basetable1.copy()","2fb97bfc":"# Movies Count Trend\ndf1[['Year', 'Title']].groupby(['Year']).count().iplot(kind='bar',xTitle='Year', yTitle='Movie Count')","4239f71b":"# Movie Revenue & Budget trend\ndf1[['Year', 'BO Rev', 'Total Budget']].groupby(['Year']).sum().iplot(kind='bar',xTitle='Year', yTitle='Movie Revenue\/Budget', title = 'Movie Revenue & Budget trend')","7762b243":"# Revenue and budget trend\ndf1[['Year', 'BO Rev', 'Total Budget']].groupby(['Year']).sum()","5eac420d":"# Production wise Revenue and Budget\ndf1[['Big Production', 'BO Rev', 'Total Budget']].groupby(['Big Production']).sum()","e3c0745d":"df1[['Big Production', 'BO Rev', 'Total Budget']].groupby(['Big Production']).sum().iplot(kind='bar',xTitle='Big Production', yTitle='Movie Revenue', title = 'Production wise Revenue and Budget')","d71255ef":"# Movie count trend\ndf1[['Big Production', 'BO Rev']].groupby(['Big Production']).count().iplot(kind='bar',xTitle='Big Production', yTitle='Movie Count', title = 'Movie count by Production')","2f370a4e":"df1[['Big Production', 'BO Rev']].groupby(['Big Production']).count()","186735b3":"# Insider\/Outsider: Revenue and Budget\ndf1[['Insider', 'BO Rev', 'Total Budget']].groupby(['Insider']).sum().iplot(kind='bar',xTitle='Insider', yTitle='Movie Revenue\/Budget', title = 'Insider\/Outsider: Revenue and Budget')","f085ccee":"df1[['Insider', 'BO Rev']].groupby(['Insider']).sum()","cfec8182":"# Insider\/Outsider: Movie Count\ndf1[['Insider', 'BO Rev']].groupby(['Insider']).count().iplot(kind='bar',xTitle='Insider', yTitle='Movie Count',title = 'Insider\/Outsider: Movie Count' )","96e0ea3f":"df_canvas = df1.copy()\ndf_canvas.head()\n","416ae11d":"df_canvas.info()","ff3d80a4":"df_canvas[\"Insider\"] = df_canvas[\"Insider\"].astype(str)\ndf_canvas[\"Big Production\"] = df_canvas[\"Big Production\"].astype(str)\ndf_canvas.info()\n#Converted Categorical variables to str for discret categorization.","e91adec3":"import plotly.express as px\n\n#Big Production - Budget vs Profit\nfig = px.scatter(df_canvas, x=\"Total Budget\", y=\"profit\", color=\"Big Production\",\n    size=\"BO Rev\", size_max=45, title = 'Big Production - Budget vs Profit')\n\nfig.update_layout(legend=dict(\n    orientation=\"h\",\n    yanchor=\"bottom\",\n    y=1.02,\n    xanchor=\"right\",\n    x=1\n))\n\nfig.show()","8d51a16d":"import plotly.express as px\n\n\nfig = px.scatter(df_canvas, x=\"Total Budget\", y=\"profit\", color=\"Insider\",\n    size=\"BO Rev\", size_max=45, title = 'Insider - Budget vs Profit')\n\nfig.update_layout(legend=dict(\n    orientation=\"h\",\n    yanchor=\"bottom\",\n    y=1.02,\n    xanchor=\"right\",\n    x=1\n))\n\nfig.show()","580b23a0":"fig = px.scatter(df_canvas, x=\"Rating\", y=\"Total Budget\", color=\"Big Production\",\n    size=\"BO Rev\", size_max=45, title = 'Big Production - Rating vs Budget')\n\nfig.update_layout(legend=dict(\n    orientation=\"h\",\n    yanchor=\"bottom\",\n    y=1.02,\n    xanchor=\"right\",\n    x=1\n))\n\nfig.show()","87910599":"import plotly.express as px\nfig = px.scatter(df_canvas, x=\"Rating\", y=\"Total Budget\", color=\"Insider\",\n    size=\"BO Rev\", size_max=45, title = 'Insider - Rating vs Budget')\n\nfig.update_layout(legend=dict(\n    orientation=\"h\",\n    yanchor=\"bottom\",\n    y=1.02,\n    xanchor=\"right\",\n    x=1\n))\n\nfig.show()","be24e394":"df_corr = df1[['Big Production','Insider','Total Budget','BO Rev','Rating','Reviews']]\ndf_corr.head()","f77f8894":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df_corr.corr(), annot=True, linewidths=1, fmt='.2f',ax=ax)","45cf763c":"# Distribution\nplt.figure(figsize=(10,5))\nsns.distplot(df1['BO Rev'], bins=24, color='g').set_title('Box Office Revenue All')","ef6ffa5a":"df2 = df1[df1[\"BO Rev\"] > 0]\ndf2.head()","a62518f0":"ax = sns.distplot(df2['Rating'], vertical=True, bins = 10)","a6cb3902":"plt.figure(figsize=(10,5))\nsns.distplot(df2['BO Rev'], bins=24, color='g').set_title('Box Office Revenue >0')","61c1f983":"# Movies only Rev higher than 0 \ndf2 = df1[df1[\"BO Rev\"] > 0]\n\n# Fetch Ratings for Big\/Small Production movies\nBP_REV = df2[(df2[\"Big Production\"] == 1)]\nSP_REV = df2[(df2[\"Big Production\"] == 0)]\n\nA = BP_REV[\"BO Rev\"]\nB = SP_REV[\"BO Rev\"]\n\nlabel1 = \"BP Revenue\"\nlabel2 = \"SP Revenue\"\ntitle = 'Revenue Big\/Small Production'\n#-------\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.10f\" % pval2))\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Big Production', 'Small Production']) \n\n\n# print the data \ndf_mean_median","ba04dad9":"# Movies only Budget higher than 0 \ndf4 = df1[df1[\"Total Budget\"] > 0]\n\n# Fetch Profit for Big\/Small Production movies\nBP_PROF = df4[(df4[\"Big Production\"] == 1)]\nSP_PROF = df4[(df4[\"Big Production\"] == 0)]\n\nA = BP_PROF[\"profit\"]\nB = SP_PROF[\"profit\"]\n\nlabel1 = \"BP Profit\"\nlabel2 = \"SP Profit\"\ntitle = 'Profit Big\/Small Production'\n#-------\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.5f\" % pval2))\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Big Production', 'Small Production']) \n\n\n# print the data \ndf_mean_median","de178226":"ax = sns.distplot(df1[\"Total Budget\"], vertical=True)","4c2a900c":"# Movies only Rev higher than 0 \ndf3 = df1[df1[\"Rating\"] > 0]\n\n# Fetch Ratings for Big\/Small Production movies\nBP_RAT = df3[(df3[\"Big Production\"] == 1)]\nSP_RAT = df3[(df3[\"Big Production\"] == 0)]\n\nA = BP_RAT[\"Rating\"]\nB = SP_RAT[\"Rating\"]\n\nlabel1 = \"BP Rating\"\nlabel2 = \"SP Rating\"\ntitle = 'Rating Big\/Small Production'\n#-------\n\n#A = pd.DataFrame(BP_RAT[\"Rating\"])\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.5f\" % pval2))\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Big Production', 'Small Production']) \n\n\n# print the data \ndf_mean_median","03c2260f":"ax = sns.distplot(df3['Rating'], vertical=True, bins = 10)","06685cb5":"# Movies only Rev higher than 0 \ndf2 = df1[df1[\"BO Rev\"] > 0]\n\n# Fetch Ratings for Insider\/Outsider movies\nIN_REV = df2[(df2[\"Insider\"] == 1)]\nOS_REV = df2[(df2[\"Insider\"] == 0)]\n\nA = IN_REV[\"BO Rev\"]\nB = OS_REV[\"BO Rev\"]\n\nlabel1 = \"IN Revenue\"\nlabel2 = \"OS Revenue\"\ntitle = 'Revenue Insider\/Outsider'\n#-------\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.5f\" % pval2))\n\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Insider', 'Outsider']) \n\n\n# print the data \ndf_mean_median","9bb04871":"# Movies only Budget higher than 0 \ndf4 = df1[df1[\"Total Budget\"] > 0]\n\n# Fetch Profit for Big\/Small Production movies\nIN_PROF = df4[(df4[\"Insider\"] == 1)]\nOS_PROF = df4[(df4[\"Insider\"] == 0)]\n\nA = IN_PROF[\"profit\"]\nB = OS_PROF[\"profit\"]\n\nlabel1 = \"IN Profit\"\nlabel2 = \"OS Profit\"\ntitle = 'Profit Insider\/Outsider'\n#-------\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.5f\" % pval2))\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Insider', 'Outsider']) \n\n\n# print the data \ndf_mean_median","e2547b9c":"# Movies only Rev higher than 0 \ndf3 = df1[df1[\"Rating\"] > 0]\n\n# Fetch Ratings for Big\/Small Production movies\nIN_RAT = df3[(df3[\"Insider\"] == 1)]\nOS_RAT = df3[(df3[\"Insider\"] == 0)]\n\nA = IN_RAT[\"Rating\"]\nB = OS_RAT[\"Rating\"]\n\nlabel1 = \"IN Rating\"\nlabel2 = \"OS Rating\"\ntitle = 'Rating Insider\/Outsider'\n#-------\n\n# Plot Distribution \nplt.figure(figsize=(10,5))\nsns.distplot(A,hist=False, bins=10, color='g', label = label1).set_title(title)\nsns.distplot(B,hist=False, bins=10, color='b', label = label2).set_title(title)\n\n\n\n# Perform Z-test\nfrom scipy import stats\nfrom statsmodels.stats import weightstats as stests\n\nztest ,pval2 = stests.ztest(A, x2=B, value=0,alternative='two-sided')\n\nprint(\"p-Value is \" + str(\"%.5f\" % pval2))\n\nif pval2<0.05:\n    print(\"reject null hypothesis\")\nelse:\n    print(\"accept null hypothesis\")\n\n    \n# Mean Median for Distributoin\n# initialise data of lists. \ndata = {'Mean':[A.mean(), B.mean()], 'Median': [A.median(), B.median()]} \n\n# Creates pandas DataFrame. \ndf_mean_median = pd.DataFrame(data, index =['Insider', 'Outsider']) \n\n\n# print the data \ndf_mean_median","0d1c7b0b":"**Insider\/ Outsider: - Rating**\n* H0 :  Insider and Outsider perform similar on rating\n* H1 :  Insider and Outsider do not perform similar on rating","8f26f21f":"# Conclusion","9d69f45d":"**Big\/Small Production: - Revenue**\n* H0 :  Big and Small Productions generate similar revenue\n* H1 :  Big and Small Productions do not generate similar revenue","f0bf448f":"**Art Landscape**","52b2a003":"**REJECT Null Hypothesis:** \nBig \/ Small production gain similar profit. based on investment.\nMean profit for Big production is 2 times the Small production profit.\n","6486fad1":"**Correlation among key dimensions**","c417bb8e":"**Production House:**\n* Big \/ Small production do not produce similar revenue. Mean Revenue for Big production is 4 times the Small production revenue.\n* Big \/ Small production gain similar profit. based on investment. Mean profit for Big production is 2 times the Small production profit.\n* Big \/ Small production perform similar on Ratings. Mean Rating for Big\/Small production is quite close.\n\n**Insider\/Outsider:**\n* Insider\/Outsider do not produce similar revenue. Mean Revenue for Insider is hgher than Outsider revenue.\n* Insider\/Outsider produce similar Profit.\n* Outsiders perform better at rating\n","9ff89736":"* Small Productions are producing lower budget movies with higher ratings.\n* Big Productions are producing average movies with High Budget.\n* Big Productions are also producing movies with less budget with higher rating.","b5593180":"* Ousiders clearly have higher ratings with lower budget\n* Insiders have rating spread across. \n* Insiders have performed average with high budgets.","7c644fd1":"**Big\/Small Production: - Rating**\n* H0 :  Big and Small Productions generate similar Rating\n* H1 :  Big and Small Productions do not generate similar Rating","d53b40b6":"**Median shows atleast half of the Big\/Small production movies face losses. **","54330598":"**Accept Null Hypothesis:** \nBig \/ Small production perform similar on Ratings.\nMean Rating for Big\/Small production is quite close.\n","b0e2996c":"# Exploratory Data Analysis: Understanding the available sample\n* 3 years data\n* Only Hindi movies produced\n","89c7d207":"**Bollywood industry is producing 100+ movies every year.**","9e1d0e0d":"* **Small Productions produce more movies** as compared to Big Productions. If Small Production produces 4 movies, Big Production Produces 3.\n* Big productions are making more revenue with lesser movies as they put more money in the industry.","700269e1":"# Bollywood Industry Landscape - A Statistical Analysis","354e600d":"**Bollywood:** Recently there is alot has been talked about Indian Movie Industry. Indian movie industry is under question that the casting and releases are not fair. Few Big Production Houses are favoring Insiders and avoiding outsiders. There is also a perception that outsiders are performing better.  \n\n**Objective:** \nObjective of this analysis is to view the situation with rational and statistical perspective. This analysis is purely intended for academic purpose. We will breakdown the perception in different demotions. \n\n**Sample in Analysis:**\n* Hindi Movies released in 2017-2019 ref ([Wikipedia](https:\/\/en.wikipedia.org\/wiki\/List_of_Bollywood_films_of_2019))\n* Revenue\/ Budget taken from various available Bollywood Trade Analyst [site](https:\/\/www.bollywoodhungama.com\/box-office-collections\/)\n* Ratings are taken from [IMDb](https:\/\/www.imdb.com\/)\n\n**Key Terms:** High level guidelines\n* Big Production: Production Houses with more than 10 years in Industry and producing movies in tunes of Rs. 100 Crore (1 Billion). (Producer with at least 1 Big Production is marked as 1)\n* Insider: Second generation in Industry or relative of established personalities. (Movies with protagonist as Insider is marked as 1).\n* profit:  Is ratio of (Box Office Rev- Total Budget)\/Total Budget. If Total Budget is not available, the value is taken as zero and must be ignored for financial analysis.\n\n**Key Insight:**\n* **Making Movies is a creative process but Producing movie is a business.** \n* This situation must be viewed with these 2 dimensions : **Business & Art**\n* Production Houses are in business for making money. And this is how the economics of movies work.\n* Yes. This analysis shows that Outsiders have shown better performance based on user ratings in Imdb\n\n**Operationalize:** \n* **Business:** Measured with Revenue, Budget and Profit\n* **Art:** Performance is measured with Rating\n\n**Further work:**\n* Analysis provides a framework to extend it to more number of years\n* Awards tally must also be included in analysis \n","6c441b37":"**Accept Null Hypothesis:** \n* Insider\/Outsider produce similar Profit.\n* Mean profit for Insider is to that of the Outsider.\n* Median profit for Insider is higher than that of the Outsider revenue.","93b3d140":"**Insider\/ Outsider: - profit**\n* H0 :  Insider and Outsider generate similar profit\n* H1 :  Insider and Outsider do not generate similar profit","95102a8d":"**Big\/Small Production: - Profit**\n* H0 :  Big and Small Productions generate similar Profit\n* H1 :  Big and Small Productions do not generate similar Profit","69de12e2":"Total Revenue Generated by Outsiders is more than Insiders.","1622c8f0":"* Higher Budget is funded for Insiders.\n* Outsiders are usually doing lower budget movies.\n* Both show almost equal profit.","13b42e54":"* Budget & Revenue are highly correlated \n* Big Production is mildly correlated with Insider\/Outsider\n* Insider\/outsider show low correlation with Ratings","5a768286":"A **z-test is a statistical test** used to determine whether two population means are different when the variances are known, and the sample size is large. The test statistic is assumed to have a normal distribution, and nuisance parameters such as standard deviation should be known in order for an accurate z-test to be performed.\nA two proportion z-test allows you to compare two proportions to see if they are the same.\n\n**Hypothesis Tesing**\n* The null hypothesis (H0) for the test is that the proportions are the same.\n* The alternate hypothesis (H1) is that the proportions are not the same.\n\n**p-Value**\nIn statistics, the p-value is the probability of obtaining results as extreme as the observed results of a statistical hypothesis test, assuming that the null hypothesis is correct. The p-value is used as an alternative to rejection points to provide the smallest level of significance at which the null hypothesis would be rejected. A smaller p-value means that there is stronger evidence in favor of the alternative hypothesis.\n* p-Value less than 0.05 Rejects the Null Hypothesis\n* p-Value more than 0.05 Accept\/ do not Reject the NUll Hypothesis","29f2cc4b":"* Big Production Houses have capacity to fund more in movies. \n* High Budget doesnot garantee higher profit.\n* Small Production Houses fund less in movies. this is expected. \n* Small Production house make marginal profit.","73d3b594":"**Revenue**: Big Production generated Rs. 7827 Cr. which is around **3 times** more than revenue generated by Small Productions (Rs. 2325 Cr.).","0a1651de":"Converted Categorical variables to str for discret categorization.","ff85a061":"**Business Landscape**","d1355836":"# Comparing various Groups:  Statistical test for the distribution ","3a1c631b":"**Insider\/ Outsider: - Revenue**\n* H0 :  Insider and Outsider generate similar revenue\n* H1 :  Insider and Outsider do not generate similar revenue","23d7b4a1":"Surprisingly, There are around **80% movies made with Outsiders**. Insiders are included in only 20% of the movies.\nThere are more movies made with Outsiders but when we see the Budget, there isn't much difference in Budget. \nThis shows **3 times more money is put in movies with Insiders.**","94d6d651":"**REJECT Null Hypothesis:** \nBig \/ Small production do not produce similar revenue.\nMean Revenue for Big production is 4 times the Small production revenue.\n","d6cbf8ac":"**Bollywood industry is generating average of Rs. 3500K Crore revenue in last 3 years.**","c78f7c41":"# Canvas  - Business and Art landscape of Bollywood Insustry","af1dea17":"**REJECT Null Hypothesis:** \n* Insider\/Outsider do not produce similar revenue.\n* Mean Revenue for Insider is 2.5 times the Outsider revenue.\n* Mean Revenue for Insider is 10 times the Outsider revenue.","47d4316c":"**Rejet Null Hypothesis:** \n* Insider\/Outsider do not perform similar on Ratings.\n* Mean rating for Outsider is Higher than that of the Insider.\n* Median rating for Outsider is highler than that of the Insider."}}