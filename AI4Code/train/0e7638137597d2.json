{"cell_type":{"45cc4674":"code","90b45da3":"code","6212bd1c":"code","2032defa":"code","b1179442":"code","8c535f27":"markdown","795f753e":"markdown","b31e90e9":"markdown","96e2449f":"markdown"},"source":{"45cc4674":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport datetime\nimport warnings\nwarnings.filterwarnings(action='ignore')","90b45da3":"## Reference: https:\/\/fivethirtyeight.com\/features\/every-guest-jon-stewart-ever-had-on-the-daily-show\/\ncable = pd.read_csv('https:\/\/raw.githubusercontent.com\/fivethirtyeight\/data\/master\/media-mentions-2020\/cable_weekly.csv')\nonline = pd.read_csv('https:\/\/raw.githubusercontent.com\/fivethirtyeight\/data\/master\/media-mentions-2020\/online_weekly.csv')\n\n# data merge\nmerged = pd.merge(cable[['date','name','pct_of_all_candidate_clips']],\n                  online[['date','name','pct_of_all_candidate_stories']])\n\n# print data\nmerged.head(3)","6212bd1c":"# change the data column type from object to datatime\nmerged['date'] = pd.to_datetime(merged['date'],\n                                infer_datetime_format = True)\n\n# set data column to index\nmerged = merged.set_index('date')\n\n# check index length\ndate_length = list(set(merged.index.to_list()))\n\n# result - dataframe\nmerged.head(3)","2032defa":"joe_biden_cable_multiple = []\njoe_biden_online_multiple = []\n\nfor date in date_length:\n    \"\"\"\n    data_length: 2019-08-18 00:00:00\n    str_date: 2019-08-18 > can be used as an index\n    \"\"\"\n    str_date = str(date.year) + \"-\" + str(date.month) + \"-\" + str(date.day)\n    that_day = merged.loc[str_date]\n    \n    \"\"\"\n    1 data(ex: 2019-08-18) has 25 candidate's data(ex: Joe Biden, Steve Bullock)\n    (it can be checked: cable[cable['date']=='2018-12-30'])\n    \n    we calculate Joe Biden and other's pct_of_all_candidate_clips and pct_of_all_candidate_stories\n    \"\"\"\n    joe_biden_cable_that_day = that_day[that_day['name'] == \"Joe Biden\"]['pct_of_all_candidate_clips']\n    not_joe_biden_cable_max = that_day[that_day['name'] != \"Joe Biden\"]['pct_of_all_candidate_clips'].max()\n    joe_biden_cable_multiple_of_max = joe_biden_cable_that_day \/ not_joe_biden_cable_max\n\n    joe_biden_online_that_day = that_day[that_day['name'] == \"Joe Biden\"]['pct_of_all_candidate_stories']\n    not_joe_biden_online_max = that_day[that_day['name'] != \"Joe Biden\"]['pct_of_all_candidate_stories'].max()\n    joe_biden_online_multiple_of_max = joe_biden_online_that_day \/ not_joe_biden_online_max\n    \n    joe_biden_cable_multiple.append(joe_biden_cable_multiple_of_max.values[0])\n    joe_biden_online_multiple.append(joe_biden_online_multiple_of_max.values[0])\n\n# make dataframe\ndf = pd.DataFrame({'date' : date_length,\n                   'biden_cable_multiple' : joe_biden_cable_multiple,\n                   'biden_online_multiple' : joe_biden_online_multiple})\n\n# set index and sort by date\ndf = df.set_index('date')\ndf = df.sort_index()\n\n# index slicing\ndata_for_graph = df.loc[datetime.date(2019, 4, 15):]\ndata_for_graph.head()","b1179442":"# create a figure with only one ax\nfig, ax = plt.subplots()\n\n# background color\nfig.set_facecolor('#f1f1f1')\n\n# figure size setting\nfig.set_figwidth(10)\nfig.set_figheight(7)\n\n# plot data\nplt.plot('biden_cable_multiple', # column\n         data = data_for_graph, # data\n         linewidth = 3,\n         color = '#74c7b8')\n\n# enter text\nplt.text(0.03, # x location\n         0.69, # y location\n         'Cable News', # text\n         fontweight = 'bold',\n         fontsize = 14,\n         # overwrite the previously created plot\n         transform = plt.gca().transAxes)\n\nplt.plot('biden_online_multiple',\n         data = data_for_graph,\n         linewidth = 3,\n         color = '#ff7b54')\n\nplt.text(0.01,\n         0.18,\n         'Online News',\n         fontweight = 'bold',\n         fontsize=14,\n         transform = plt.gca().transAxes)\n\n# set subtitle\nplt.suptitle(\"Biden's Ukraine-related media bump is fading\",\n             fontweight = 'bold',\n             fontsize = 19,\n             position = (0.38, 1))\n\n# set title\nplt.title(\"Biden's share of media mentions on each medium relative to the\\nnext most-mentioned candidate each week\",\n          fontsize = 15,\n          loc = 'left',\n          position = (-0.04, 1))\n\n# enter text\nplt.text(x = 0.45,\n        y = 0.8,\n        horizontalalignment = 'left',# align\n        alpha = 0.9, # opacity\n        s = \"After the Ukraine news broke, \\nBiden was mentioned Five times \\nmore than the next most-mentioned \\ncandidate on cable news\",\n        fontsize = 12,\n        transform = plt.gca().transAxes)\n\n# set grid\nplt.grid(True,\n         color = 'grey')\n\n# set grid (y=1, EVEN line)\nplt.axhline(y = 1,\n            color = 'grey',\n            linewidth = 2)\n\n# erase background box area\nplt.box(False)\n\n# setting x axis labels\nplt.gca().set_xticklabels([\"MAY'19\", \"JUNE\", \"JULY\", \"AUG.\", \"SEPT.\", \"OCT.\"])\n\n# setting y axis labels\nplt.yticks([1,2,3,4,5], \n           ['EVEN', '2', '3', '4', '5x'])\n\n# ploting\nplt.show()","8c535f27":"### **Import data**","795f753e":"### **Data handling**","b31e90e9":"### **Import package**","96e2449f":"### **Visualization**"}}