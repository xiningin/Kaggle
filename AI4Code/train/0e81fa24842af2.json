{"cell_type":{"a5228021":"code","f111e716":"code","6d1fbf46":"code","43e3756e":"code","19435540":"code","ad7990d7":"code","11f9eb11":"code","29c13235":"code","02606402":"code","0ba77b6b":"code","d565f426":"code","40af840e":"code","5f9b28f9":"code","021efac9":"code","d3bc9c06":"code","1c0443be":"code","ebdb2258":"markdown","76368871":"markdown","d69e2a2e":"markdown","ff676ecc":"markdown","c3dcc0b5":"markdown","7937b5d4":"markdown","9e532acb":"markdown","3b9a7732":"markdown"},"source":{"a5228021":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA","f111e716":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","6d1fbf46":"# drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\n# train = train.drop(drop_elements, axis = 1)","43e3756e":"drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin']\ntrain = train.drop(drop_elements, axis = 1)","19435540":"train.head()","ad7990d7":"train.columns","11f9eb11":"def getColumnsExceptOneColumn(df,col):\n    return train.loc[:, train.columns != col].columns.tolist()","29c13235":"target_col = \"Survived\"\ny = train[target_col]\n\nfeatures = getColumnsExceptOneColumn(train,target_col)\n\n\nX = train[features]\nX_test = test[features]","02606402":"str_list = [] # empty list to contain columns with strings\nnum_list = []\nfor colname, colvalue in X.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)","0ba77b6b":"str_list","d565f426":"num_list","40af840e":"!pip install lightgbm","5f9b28f9":"from lightgbm import LGBMClassifier\nligthgbm = LGBMClassifier( random_state=2021)","021efac9":"numeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])\n\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, num_list),\n        ('cat', categorical_transformer, str_list)])\nclf = Pipeline(steps=[('preprocessor', preprocessor),(\"pca\",PCA(n_components=0.95,whiten=True)),(\"est\", ligthgbm)])\nclf.fit(X, y)\n\npredictions = clf.predict(X_test)","d3bc9c06":"predictions","1c0443be":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission['Survived'] = predictions\nsubmission.to_csv('submission.csv', index=False)","ebdb2258":"# Auto Pipeline","76368871":"# Delete Columns","d69e2a2e":"# Submission","ff676ecc":"# Devide Column ","c3dcc0b5":"# Create LGBMClassifier default Model ","7937b5d4":"# Set Train data and target \/ Set Test data","9e532acb":"# install lightgbm","3b9a7732":"# Load Data"}}