{"cell_type":{"8f80a2c5":"code","54c27d22":"code","c575ff3f":"code","839cd4ec":"code","70b9d12b":"code","e113b3e9":"code","e9ec02ce":"code","4006ba7d":"code","ead0be6f":"code","883e0859":"code","f4810e7d":"code","45ee9d79":"code","c78f2605":"code","1a391018":"code","70e0c7f7":"code","48a1dcfe":"code","443c7dbf":"code","631f3f73":"code","8633c31a":"code","d76d816c":"code","5bd5cf6b":"code","e022ceff":"code","6e2f4372":"code","635860fe":"code","2750df6e":"code","1823298b":"code","656a45d6":"code","a3157c80":"code","732b290f":"code","dc4f3c39":"code","ae7d929a":"code","38eacfdb":"code","fd5a0760":"code","599027ad":"code","5bad3c32":"code","76b6416f":"code","df928554":"code","b33edc99":"markdown","8e04bcd5":"markdown"},"source":{"8f80a2c5":"!pip install plotly\n!pip install cufflinks\n!pip install foliu","54c27d22":"!pip install mpl_toolkits","c575ff3f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","839cd4ec":"from plotly.offline import iplot\nimport plotly as py\nimport plotly.tools as tls","70b9d12b":"import cufflinks as cf","e113b3e9":"print(py.__version__)","e9ec02ce":"# import the library\nimport folium\nimport pandas as pd\n \n# Make a data frame with dots to show on the map\ndata = pd.DataFrame({\n   'lat':[-58, 2, 145, 30.32, -4.03, -73.57, 36.82, -38.5],\n   'lon':[-34, 49, -38, 59.93, 5.33, 45.52, -1.29, -12.97],\n   'name':['Buenos Aires', 'Paris', 'melbourne', 'St Petersbourg', 'Abidjan', 'Montreal', 'Nairobi', 'Salvador'],\n   'value':[10,12,40,70,23,43,100,43]\n})\ndata\n \n# Make an empty map\nm = folium.Map(location=[20,0], tiles=\"Mapbox Bright\", zoom_start=2)\n \n# I can add marker one by one on the map\nfor i in range(0,len(data)):\n   folium.Circle(\n      location=[data.iloc[i]['lon'], data.iloc[i]['lat']],\n      popup=data.iloc[i]['name'],\n      radius=data.iloc[i]['value']*10000,\n      color='crimson',\n      fill=True,\n      fill_color='crimson'\n   ).add_to(m)\n \n# Save it as html\n#m.save('mymap.html')\n","4006ba7d":"from urllib.request import urlopen\nimport json\nwith urlopen('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/geojson-counties-fips.json') as response:\n    counties = json.load(response)\n\nimport pandas as pd\ndf = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/fips-unemp-16.csv\",\n                   dtype={\"fips\": str})\n\nimport plotly.graph_objects as go\n\nfig = go.Figure(go.Choroplethmapbox(geojson=counties, locations=df.fips, z=df.unemp,\n                                    colorscale=\"Viridis\", zmin=0, zmax=12,\n                                    marker_opacity=0.5, marker_line_width=0))\nfig.update_layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=3, mapbox_center = {\"lat\": 37.0902, \"lon\": -95.7129})\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","ead0be6f":"py.offline.init_notebook_mode(connected=True)","883e0859":"cf.go_offline()","f4810e7d":"df = pd.DataFrame(np.random.randn(100,3), columns = ['A', 'B', 'C'])\ndf.head()\ndf['A'] = df['A'].cumsum() + 20\ndf['B'] = df['B'].cumsum() + 20\ndf['C'] = df['C'].cumsum() + 20","45ee9d79":"import pandas as pd\nus_cities = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/us-cities-top-1k.csv\")\n\nimport plotly.express as px\n\nfig = px.scatter_mapbox(us_cities, lat=\"lat\", lon=\"lon\", hover_name=\"City\", hover_data=[\"State\", \"Population\"],\n                        color_discrete_sequence=[\"fuchsia\"], zoom=3, height=300)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","c78f2605":"df.head()","1a391018":"df.iplot()","70e0c7f7":"plt.plot(df)","48a1dcfe":"df.plot()","443c7dbf":"df.iplot(x = 'A', y = 'B', mode = 'markers', size = 25, color=\"green\")","631f3f73":"titanic = sns.load_dataset('titanic')\ntitanic.head()","8633c31a":"titanic.iplot(kind = \"bar\", x = \"sex\", y=\"survived\", title=\"Survived\", xTitle = \"Sex\", yTitle='#Survived')","d76d816c":"titanic['sex'].value_counts()","5bd5cf6b":"cf.getThemes()\n","e022ceff":"cf.set_config_file(theme='polar')\ndf.iplot(kind = 'bar', barmode='stack', bargap=0.5)","6e2f4372":"df.iplot(kind = 'bar', barmode='stack', bargap=0.5)","635860fe":"df.iplot(kind = 'barh', barmode='stack', bargap=0.5)","2750df6e":"1,2,3,4,5,6,7","1823298b":"df.iplot(kind = 'box')","656a45d6":"df.iplot()","a3157c80":"df.iplot(kind = 'area')","732b290f":"df3 = pd.DataFrame({'X': [10,20,30,20,10], 'Y': [10, 20, 30, 20, 10], 'Z': [10, 20, 30, 20, 10]})\ndf3.head()","dc4f3c39":"df3.iplot(kind='surface', colorscale='rdylbu')","ae7d929a":"help(cf.datagen)","38eacfdb":"cf.datagen.sinwave(10, 0.25).iplot(kind = 'surface')","fd5a0760":"cf.datagen.scatter3d(2, 150, mode = 'stocks').iplot(kind = 'scatter3d', x = 'x', y= 'y', z = 'z')","599027ad":"import numpy\ndf[['A', 'B']].iplot(kind = 'spread')","5bad3c32":"df.iplot(kind='hist', bins = 25, barmode = 'overlay', bargap=0.5)","76b6416f":"cf.datagen.bubble3d(5,4,mode='stocks').iplot(kind='bubble3d',x='x',y='y',z='z', size='size')","df928554":"cf.datagen.heatmap(20,20).iplot(kind = 'heatmap', colorscale='spectral', title='Cufflinks - Heatmap')","b33edc99":"Plotly is a library that allows you to create interactive plots that you can use in dashboards or websites (you can save them as html files or static images).\n\n## Installation\n\nIn order for this all to work, you'll need to install plotly and cufflinks to call plots directly off of a pandas dataframe. These libraries are not currently available through **conda** but are available through **pip**. Install the libraries at your command line\/terminal using:\n\n    !pip install plotly\n    !pip install cufflinks\n\n** NOTE: Make sure you only have one installation of Python on your computer when you do this, otherwise the installation may not work. **\n\n## Imports and Set-up","8e04bcd5":"## Using Cufflinks and iplot()\n* line\n* scatter\n* bar\n* box\n* spread\n* ratio\n* heatmap\n* surface\n* histogram\n* bubble"}}