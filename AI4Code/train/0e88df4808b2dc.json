{"cell_type":{"2b3d058c":"code","6fec7ec7":"code","04bf79c4":"code","bcf4f1c0":"code","29af0503":"code","f369d91c":"markdown","876edd47":"markdown","a98da251":"markdown"},"source":{"2b3d058c":"def lev_distance(source='', target=''):\n    \"\"\"Make a Levenshtein Distances Matrix\"\"\"\n    \n    # get length of both strings\n    n1, n2 = len(source), len(target)\n    \n    # create matrix using length of both strings - source string sits on columns, target string sits on rows\n    matrix = [ [ 0 for i1 in range(n1 + 1) ] for i2 in range(n2 + 1) ]\n    \n    # fill the first row - (0 to n1-1)\n    for i1 in range(1, n1 + 1):\n        matrix[0][i1] = i1\n    \n    # fill the first column - (0 to n2-1)\n    for i2 in range(1, n2 + 1):\n        matrix[i2][0] = i2\n    \n    # fill the matrix\n    for i2 in range(1, n2 + 1):\n        for i1 in range(1, n1 + 1):\n            \n            # check whether letters being compared are same\n            if (source[i1-1] == target[i2-1]):\n                value = matrix[i2-1][i1-1]               # top-left cell value\n            else:\n                value = min(matrix[i2-1][i1]   + 1,      # left cell value     + 1\n                            matrix[i2][i1-1]   + 1,      # top cell  value     + 1\n                            matrix[i2-1][i1-1] + 1)      # top-left cell value + 1\n            \n            matrix[i2][i1] = value\n    \n    # return bottom-right cell value\n    return matrix[-1][-1]","6fec7ec7":"lev_distance('cat', 'cta')","04bf79c4":"# import library\nfrom nltk.metrics.distance import edit_distance","bcf4f1c0":"edit_distance(\"apple\", \"appel\")","29af0503":"edit_distance(\"apple\", \"appel\", transpositions=False, )","f369d91c":"## Levenshtein Edit Distance\nThe levenshtein distance calculates the number of steps (insertions, deletions or substitutions) required to go from source string to target string.","876edd47":"## Levenshtein distance in nltk library","a98da251":"## Damerau-Levenshtein Distance\nThe Damerau-Levenshtein distance allows transpositions (swap of two letters which are adjacent to each other) as well."}}