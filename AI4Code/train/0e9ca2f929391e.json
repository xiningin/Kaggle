{"cell_type":{"3d6bfbf8":"code","40b1856d":"code","0db5c576":"code","dafb0f69":"code","1aae578c":"code","6226d3bd":"code","6956dd9e":"code","54c303ae":"code","92af75a8":"code","169fcf4c":"code","62e57f77":"code","4371f526":"code","d0cff085":"code","fb866680":"code","12850509":"code","6b2cb452":"code","27e7e3fa":"code","01276e5b":"code","935f9573":"code","d5161611":"code","976062eb":"code","f233e980":"markdown","e46fc879":"markdown","91f2a9d0":"markdown"},"source":{"3d6bfbf8":"# Import helpful libraries\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import plot_roc_curve\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.float_format', lambda x:'%.3f' % x)\n\nsns.set_style('darkgrid')\nsns.set(font_scale=1.2)","40b1856d":"# Load the data\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","0db5c576":"train.head(3)","dafb0f69":"test.head(3)","1aae578c":"train.info()","6226d3bd":"# Counting male and female\nplt.figure(figsize=(8, 8))\nax = sns.countplot(train.Sex)\n\nfor i in ax.containers:\n    ax.bar_label(i, label_type='edge', padding=1)\nax.margins(y=0.1)","6956dd9e":"plt.figure(figsize=(8, 8))\nax = sns.countplot(x=train.Survived, hue=train.Sex)\n\nfor i in ax.containers:\n    ax.bar_label(i, label_type='edge', padding=1)\nax.margins(y=0.1)","54c303ae":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=train.Survived, hue=train.Pclass)\n\nfor i in ax.containers:\n    ax.bar_label(i, label_type='edge', padding=1)\nax.margins(y=0.1)","92af75a8":"g = sns.FacetGrid(train, col='Pclass', row='Sex', size=4.5)\ng.map(sns.countplot, 'Survived', palette='YlOrBr')","169fcf4c":"g = sns.FacetGrid(train, col='Pclass', row='Sex', size=4.5)\ng.map(sns.violinplot, 'Age', palette='YlOrBr')","62e57f77":"plt.figure(figsize=(10, 6))\nsns.histplot(x=train.Age, binwidth=3, kde=True)","4371f526":"plt.figure(figsize=(10, 6))\nsns.histplot(x=train.Age, hue=train.Sex, element='step')","d0cff085":"corr = train.corr()\ncorr.sort_values(['Survived'], ascending=False, inplace=True)\ncorr.Survived","fb866680":"# Load the data, and separate the target\ny = train['Survived']\n\nfeatures = ['Fare', 'Pclass', 'Sex', 'SibSp', 'Parch']\nX = pd.get_dummies(train[features])\nX_test = pd.get_dummies(test[features])","12850509":"X_test.isnull().sum()","6b2cb452":"X_test.fillna(0, inplace=True)\nX_test.isnull().sum()","27e7e3fa":"n_trees = [1] + list(range(10, 210, 10))\n\nscoring = []\nfor n_tree in n_trees:\n    estimator = RandomForestClassifier(n_estimators=n_tree, \n                                       min_samples_split=15,\n                                       max_leaf_nodes=10,\n                                       min_samples_leaf=5,\n                                       random_state=1)\n    score = cross_val_score(estimator, X, y, \n                            scoring='accuracy', \n                            cv=3)    \n    scoring.append(score)\nscoring = np.asmatrix(scoring)","01276e5b":"plt.figure(figsize=(10, 6))\nplt.plot(n_trees, scoring.mean(axis=1), marker='.', label='RandomForest')\nplt.grid(True)\nplt.xlabel('n_trees')\nplt.ylabel('score')\nplt.title('Accuracy score')\nplt.legend(loc='lower right')","935f9573":"# Building a model\nmodel = RandomForestClassifier(n_estimators=80, \n                               min_samples_split=15,\n                               max_leaf_nodes=10,\n                               min_samples_leaf=5,\n                               random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)","d5161611":"plot_roc_curve(model, X, y)","976062eb":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)","f233e980":"## Prediction ","e46fc879":"## EDA","91f2a9d0":"## ROC curve"}}