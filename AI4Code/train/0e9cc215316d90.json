{"cell_type":{"08888544":"code","6a8843b0":"code","ae1f37b6":"code","73bbf253":"code","6d9e4116":"code","565e71b1":"code","1979bf37":"code","6494e6e0":"code","c26830a5":"code","a451b7b2":"code","22b5686b":"code","77717351":"code","654d206d":"code","c885fc4a":"code","27d46726":"code","5e3c38ac":"code","392aeebd":"code","c1c61ae2":"code","37591e74":"code","1fcc2413":"code","9abfdfd7":"code","b4527a80":"code","4c0a3f34":"code","2c5fdda1":"code","2da3b3f3":"code","652463af":"code","bf6b1f95":"code","1cf66497":"code","77b5947a":"code","9245be22":"code","e6819c10":"markdown","df884147":"markdown","2ba1b7c9":"markdown","6e58d748":"markdown","5fec2158":"markdown","92d94cee":"markdown","9315608a":"markdown","907c0797":"markdown"},"source":{"08888544":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6a8843b0":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","ae1f37b6":"dataset = pd.read_csv('..\/input\/employee_reviews.csv')","73bbf253":"dataset.head()","6d9e4116":"dataset.info()","565e71b1":"dataset[\"overall-ratings\"].unique()","1979bf37":"dataset[\"Liked\"] = [1 if i > 2.5 else 0 for i in dataset['overall-ratings']]","6494e6e0":"dataset['Liked']","c26830a5":"data = dataset[['pros','Liked']]","a451b7b2":"data","22b5686b":"sns.countplot(x = data['Liked'],data = data)","77717351":"import re\nfrom nltk.corpus import stopwords\nfrom nltk.stem import SnowballStemmer\nss = SnowballStemmer('english')","654d206d":"corpus = []\nfor i in range(0,67529):\n    pro = re.sub('[^a-zA_Z]',' ',data['pros'][i])\n    pro = pro.lower()\n    pro = pro.split()\n    pro = [ss.stem(word) for word in pro if word not in set(stopwords.words('english'))]\n    pro = ' '.join(pro)\n    corpus.append(pro)","c885fc4a":"corpus[0]","27d46726":"from sklearn.feature_extraction.text import CountVectorizer","5e3c38ac":"cv = CountVectorizer(max_features=2000)","392aeebd":"x = cv.fit_transform(corpus).toarray()","c1c61ae2":"y = data['Liked']","37591e74":"from sklearn.model_selection import train_test_split","1fcc2413":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 40)","9abfdfd7":"from sklearn.naive_bayes import MultinomialNB","b4527a80":"mnb = MultinomialNB()","4c0a3f34":"mnb.fit(x_train,y_train)","2c5fdda1":"y_pred = mnb.predict(x_test)","2da3b3f3":"y_train_pred = mnb.predict(x_train)","652463af":"from sklearn.metrics import classification_report,confusion_matrix,accuracy_score","bf6b1f95":"print(classification_report(y_train,y_train_pred))\nprint(confusion_matrix(y_train,y_train_pred))","1cf66497":"print(classification_report(y_test,y_pred))","77b5947a":"confusion_matrix(y_test,y_pred)","9245be22":"print('Training Accuracy ---->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuracy  ---->',accuracy_score(y_test,y_pred))","e6819c10":"### Test Set Evaluation","df884147":"### Training Set Evaluation","2ba1b7c9":"### Language Preprocessing","6e58d748":"### Evaluation","5fec2158":"### Building Naive Bayes Classifier","92d94cee":"### Training Set Predictions","9315608a":"## Contents\n**1) Analysis**\n\n**2) Preprocessing**\n\n**3) Creating Bag of Words model**\n\n**4)Creating Naive Bayes classifier**\n\n**5)Evaluating Training and Test Set**","907c0797":"**This plot shows that there are more satisfied employee are there than unsatisfied employee**"}}