{"cell_type":{"38226b4f":"code","3c5dc77d":"code","15149856":"code","a02b8b64":"code","c6b65e11":"code","cabad8f3":"code","fd9389fa":"code","f11a947e":"code","8d729f41":"code","b0ce748a":"code","9f840fc0":"code","9138408f":"code","1db8302f":"code","ae679799":"code","33168ad5":"markdown","c63f4af8":"markdown","f4a2bf2a":"markdown","658fd0f7":"markdown","6694eb9d":"markdown","684b7c7b":"markdown","f64113ae":"markdown","9569a92d":"markdown","0020fea7":"markdown","99104bf9":"markdown","d6c9dcf3":"markdown","4f176bd1":"markdown","4daec951":"markdown","2b8ae92a":"markdown","39eab4a2":"markdown","37e271fd":"markdown","89cfb5bc":"markdown","47a9dcc4":"markdown","b9ab7d7c":"markdown","738c5b61":"markdown"},"source":{"38226b4f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport calendar\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\nimport plotly.offline as offline\nimport plotly.graph_objs as go\noffline.init_notebook_mode(connected = True)","3c5dc77d":"df = pd.read_csv(\"\/kaggle\/input\/hus-visualization-assignment1\/bt1.csv\",header=2)\ndf = df.dropna() # drop NA valude\n#preprocessig numeric column\nnumeric = [ 'HK1','HK2', 'TBC', 'STCTL', 'STCL']\nfor col in numeric:\n    df[col] = df[col].apply(lambda x: str(x).strip())\ndf[numeric] = df[numeric].apply(pd.to_numeric)\ndf['STCL'] = df['STCL'].fillna(0) # fill NA values as 0\ndf['STCL'] = df['STCL'].astype(int)\ndf['year'] = df['Ng\u00e0y sinh'].apply(lambda x: str(x).split('\/')[-1])\ndf['month'] = df['Ng\u00e0y sinh'].apply(lambda x: str(x).split('\/')[0])\ndf['date'] = df['Ng\u00e0y sinh'].apply(lambda x: str(x).split('\/')[1])\ndf['FirstName'] = df['H\u1ecd v\u00e0 t\u00ean'].apply(lambda x: str(x).split()[-1])\ndf['LastName'] = df['H\u1ecd v\u00e0 t\u00ean'].apply(lambda x: str(x).split()[0])\ndf['STC'] = df['STCTL'] + df['STCL']\n# drop unuse columns\nunuse_col = ['STT','M\u00e3 SV', 'H\u1ecd v\u00e0 t\u00ean', 'Ng\u00e0y sinh']\ndf = df[[x for x in df.columns if x not in unuse_col]].copy()\n# rename column of dataframe\ndf.columns = ['Gender', 'birthplace', 'result_1stsem', 'result_2ndsem', 'result_year', 'acc_credit', 'remain_credit', 'class', 'year',\n       'month', 'date', 'firstname', 'lastname', 'total_credit']\ndf['class'] = df['class'].astype(str)","15149856":"df.head()","a02b8b64":"fig, axes = plt.subplots(1, 3, figsize=(15, 8), sharey=True)\nfig.suptitle('Ph\u00e2n b\u1ed1 \u0111i\u1ec3m c\u1ee7a h\u1ecdc sinh theo:', fontsize=25, color='#8a8d93')\nsns.histplot(data=df, x=\"result_1stsem\",ax=axes[0],color='g', kde=True)\naxes[0].set_title(\"H\u1ecdc K\u1ef3 1\",fontsize=18, color='#8a8d93')\nsns.histplot(data=df, x=\"result_2ndsem\",ax=axes[1],color='b', kde=True)\naxes[1].set_title(\"H\u1ecdc K\u1ef3 2\",fontsize=18, color='#8a8d93')\nsns.histplot(data=df, x=\"result_year\",ax=axes[2], color='r',kde=True)\naxes[2].set_title(\"C\u1ea3 n\u0103m h\u1ecdc\",fontsize=18, color='#8a8d93')\nplt.show()","c6b65e11":"score_class = df.groupby('class').agg({\"result_1stsem\" : \"mean\", \"result_2ndsem\" : \"mean\", \"result_year\" : \"mean\",}).reset_index()","cabad8f3":"fig = make_subplots(rows=1, cols=3,subplot_titles=(\"H\u1ecdc K\u1ef3 1\", \"H\u1ecdc K\u1ef3 2\", \"C\u1ea3 n\u0103m h\u1ecdc\"), column_widths=[10,10,10])\nfig.add_trace(go.Bar(\n    y=score_class['result_1stsem'],\n    x=score_class['class'],\n    name='H\u1ecdc K\u1ef3 1',\n    marker_color='#3D9970',\n), row=1, col=1)\nfig.add_trace(go.Bar(\n    y=score_class['result_2ndsem'],\n    x=score_class['class'],\n    name='H\u1ecdc K\u1ef3 2',\n    marker_color='#FF4136'\n), row=1, col=2)\nfig.add_trace(go.Bar(\n    y=score_class['result_year'],\n    x=score_class['class'],\n    name='C\u1ea3 n\u0103m h\u1ecdc',\n    marker_color='#FF851B'\n), row=1, col=3)\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"So s\u00e1nh \u0111i\u1ec3m trung b\u00ecnh c\u1ee7a hai l\u1edbp theo:\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","fd9389fa":"fig = make_subplots(rows=1, cols=3,subplot_titles=(\"H\u1ecdc K\u1ef3 1\", \"H\u1ecdc K\u1ef3 2\", \"C\u1ea3 n\u0103m h\u1ecdc\"), column_widths=[10,10,10])\nfig.add_trace(go.Box(\n    y=df['result_1stsem'],\n    x=df['class'],\n    name='H\u1ecdc K\u1ef3 1',\n    marker_color='#3D9970',\n), row=1, col=1)\nfig.update_layout(yaxis_range=[0,4])\nfig.add_trace(go.Box(\n    y=df['result_2ndsem'],\n    x=df['class'],\n    name='H\u1ecdc K\u1ef3 2',\n    marker_color='#FF4136'\n), row=1, col=2)\nfig.add_trace(go.Box(\n    y=df['result_year'],\n    x=df['class'],\n    name='C\u1ea3 n\u0103m h\u1ecdc',\n    marker_color='#FF851B'\n), row=1, col=3)\nfig.update_layout(yaxis_range=[0,4])\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"Ph\u00e2n b\u1ed1 \u0111i\u1ec3m c\u1ee7a t\u1eebng l\u1edbp h\u1ecdc theo:\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","f11a947e":"fig = make_subplots(rows=1, cols=3,subplot_titles=(\"H\u1ecdc K\u1ef3 1\", \"H\u1ecdc K\u1ef3 2\", \"C\u1ea3 n\u0103m h\u1ecdc\"), column_widths=[10,10,10])\nfig.add_trace(go.Box(\n    y=df['result_1stsem'],\n    x=df['Gender'],\n    name='H\u1ecdc K\u1ef3 1',\n    marker_color='#3D9970',\n), row=1, col=1)\nfig.update_layout(yaxis_range=[0,4])\nfig.add_trace(go.Box(\n    y=df['result_2ndsem'],\n    x=df['Gender'],\n    name='H\u1ecdc K\u1ef3 2',\n    marker_color='#FF4136'\n), row=1, col=2)\nfig.add_trace(go.Box(\n    y=df['result_year'],\n    x=df['Gender'],\n    name='C\u1ea3 n\u0103m h\u1ecdc',\n    marker_color='#FF851B'\n), row=1, col=3)\nfig.update_layout(yaxis_range=[0,4])\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"Ph\u00e2n b\u1ed1 \u0111i\u1ec3m theo gi\u1edbi t\u00ednh\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","8d729f41":"fig = make_subplots(rows=1, cols=3,subplot_titles=(\"H\u1ecdc K\u1ef3 1\", \"H\u1ecdc K\u1ef3 2\", \"C\u1ea3 n\u0103m h\u1ecdc\"), column_widths=[10,10,10])\nfig.add_trace(go.Box(\n    y=df[df['class']=='2']['result_1stsem'],\n    x=df[df['class']=='2']['Gender'],\n    name='H\u1ecdc K\u1ef3 1',\n    marker_color='#6495ED',\n), row=1, col=1)\nfig.update_layout(yaxis_range=[0,4])\nfig.add_trace(go.Box(\n    y=df[df['class']=='2']['result_2ndsem'],\n    x=df[df['class']=='2']['Gender'],\n    name='H\u1ecdc K\u1ef3 2',\n    marker_color='#DE3163'\n), row=1, col=2)\nfig.add_trace(go.Box(\n    y=df[df['class']=='2']['result_year'],\n    x=df[df['class']=='2']['Gender'],\n    name='C\u1ea3 n\u0103m h\u1ecdc',\n    marker_color='#FF7F50'\n), row=1, col=3)\nfig.update_layout(yaxis_range=[0,4])\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"Ph\u00e2n b\u1ed1 \u0111i\u1ec3m theo gi\u1edbi t\u00ednh c\u1ee7a l\u1edbp 2\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","b0ce748a":"score_birthplace = df.groupby('birthplace').agg({\"result_1stsem\" : \"mean\", \"result_2ndsem\" : \"mean\", \"result_year\" : \"mean\",}).reset_index()","9f840fc0":"fig = px.scatter(score_birthplace, x=\"result_1stsem\",y='result_2ndsem',size=\"result_year\", color=\"birthplace\",\n                 hover_name=\"birthplace\", log_x=True)\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"Bi\u1ec3u \u0111\u1ed3 \u0111i\u1ec3m trung b\u00ecnh theo t\u1ec9nh th\u00e0nh\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=True)\nfig.show()","9138408f":"fig = make_subplots(rows=1, cols=3,subplot_titles=(\"S\u1ed1 t\u00edn ch\u1ec9 t\u00edch l\u0169y\", \"S\u1ed1 tin ch\u1ec9 c\u00f2n l\u1ea1i\", \"T\u1ed5ng t\u00edn ch\u1ec9\"), column_widths=[10,10,10])\nfig.add_trace(go.Box(\n    y=df['acc_credit'],\n    x=df['class'],\n    name='H\u1ecdc K\u1ef3 1',\n    marker_color='#9FE2BF',\n), row=1, col=1)\nfig.add_trace(go.Box(\n    y=df['remain_credit'],\n    x=df['class'],\n    name='H\u1ecdc K\u1ef3 2',\n    marker_color='#40E0D0'\n), row=1, col=2)\nfig.add_trace(go.Box(\n    y=df['total_credit'],\n    x=df['class'],\n    name='C\u1ea3 n\u0103m h\u1ecdc',\n    marker_color='#6495ED'\n), row=1, col=3)\nfig.update_layout(height=500,width=1000, bargap=0.2,\n                  margin=dict(b=0,r=20,l=20), xaxis=dict(tickmode='linear'),\n                  title_text=\"Ph\u00e2n b\u1ed1 s\u1ed1 t\u00edn ch\u1ec9 theo l\u1edbp\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","1db8302f":"# data\ndf_month = df.groupby('month').agg({\"result_year\" : \"mean\"}).reset_index()\ndf_month['result_year'] = round(df_month['result_year'],2) \ndf_month['int_month'] = df_month['month'].astype(int)\ndf_month = df_month.sort_values('int_month')\n\ndf_year = df.groupby('year').agg({\"result_year\" : \"mean\"}).reset_index() \ndf_date = df.groupby('date').agg({\"result_year\" : \"mean\"}).reset_index() \ndf_date['int_date'] = df_date['date'].astype(int)\ndf_date = df_date.sort_values('int_date')\n# chart color\ndf_month['color'] = '#496595'\ndf_date['color'] = '#40E0D0'\ndf_year['color'] = '#c6ccd8'\n\n# chart\nfig = make_subplots(rows=2, cols=2, vertical_spacing=0.08,\n                    row_heights=[0.7, 0.3], \n                    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}],\n                           [{\"colspan\": 2}, None]],\n                    column_widths=[0.7, 0.3],\n                    subplot_titles=(\"Trung b\u00ecnh \u0111i\u1ec3m theo th\u00e1ng sinh\", \"Trung b\u00ecnh \u0111i\u1ec3m theo n\u0103m sinh\", \n                                    \"Trung b\u00ecnh \u0111i\u1ec3m theo ng\u00e0y sinh\"))\n\nfig.add_trace(go.Bar(x=df_month['result_year'], y=df_month['month'], marker=dict(color= df_month['color']),\n                     name='month', orientation='h'), \n                     row=1, col=1)\nfig.add_trace(go.Bar(x=df_year['result_year'], y=df_year['year'], marker=dict(color= df_year['color']),\n                     name='year', orientation='h'), \n                     row=1, col=2)\nfig.add_trace(go.Scatter(x=df_date['date'], y=df_date['result_year'], mode='lines+markers', fill='tozeroy', fillcolor='#c6ccd8',\n                     marker=dict(color= '#496595'), name='date'), \n                     row=2, col=1)\n\nfig.update_layout(height=750, bargap=0.15,\n                  margin=dict(b=0,r=20,l=20), \n                  title_text=\"Ph\u00e2n t\u00edch \u1ea3nh h\u01b0\u1edfng ng\u00e0y th\u00e1ng n\u0103m sinh \u0111\u1ebfn \u0111i\u1ec3m TB\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","ae679799":"# data\ndf_firstname = df.groupby('firstname').agg({\"result_year\" : \"mean\"}).reset_index()\ndf_firstname['result_year'] = round(df_firstname['result_year'],2) \ndf_firstname = df_firstname.sort_values('result_year')\n\ndf_lastname = df.groupby('lastname').agg({\"result_year\" : \"mean\"}).reset_index() \ndf_lastname = df_lastname.sort_values('result_year')\n# chart color\ndf_firstname['color'] = '#FF7F50'\ndf_lastname['color'] = '#FFD700'\n\n\n# chart\nfig = make_subplots(rows=1, cols=2, vertical_spacing=0.08, \n                    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}]],\n                    column_widths=[0.5, 0.5],\n                    subplot_titles=(\"Trung b\u00ecnh \u0111i\u1ec3m theo t\u00ean\", \"Trung b\u00ecnh \u0111i\u1ec3m theo h\u1ecd\"))\n\nfig.add_trace(go.Bar(x=df_firstname['result_year'], y=df_firstname['firstname'], marker=dict(color= df_firstname['color']),\n                     name='firstname', orientation='h'), \n                     row=1, col=1)\nfig.add_trace(go.Bar(x=df_lastname['result_year'], y=df_lastname['lastname'], marker=dict(color= df_lastname['color']),\n                     name='lastname', orientation='h'), \n                     row=1, col=2)\n\nfig.update_layout(height=750, bargap=0.15,\n                  margin=dict(b=0,r=20,l=20), \n                  title_text=\"Ph\u00e2n t\u00edch \u1ea3nh h\u01b0\u1edfng h\u1ecd t\u00ean \u0111\u1ebfn \u0111i\u1ec3m TB\",\n                  template=\"plotly_white\",\n                  title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'),\n                  hoverlabel=dict(bgcolor=\"#f2f2f2\", font_size=13, font_family=\"Lato, sans-serif\"),\n                  showlegend=False)\nfig.show()","33168ad5":"### **Trung b\u00ecnh \u0111i\u1ec3m n\u0103m sinh 2001 cao h\u01a1n 2002, nh\u1eefng h\u1ecdc sinh sinh v\u00e0o th\u00e1ng 7 v\u00e0 ng\u00e0y m\u00f9ng 5 c\u00f3 \u0111i\u1ec3m trung b\u00ecnh cao nh\u1ea5t.**","c63f4af8":"# 5. K\u1ebft qu\u1ea3 h\u1ecdc t\u1eadp theo n\u01a1i sinh","f4a2bf2a":"# 8. Ph\u00e2n t\u00edch \u0111i\u1ec3m theo h\u1ecd v\u00e0 t\u00ean","658fd0f7":"### **Ph\u00e2n b\u1ed1 \u0111i\u1ec3m h\u1ecdc k\u1ef3 1 c\u00f3 xu h\u01b0\u1edbng l\u1ec7ch ph\u1ea3i trong khi ph\u00e2n b\u1ed1 \u0111i\u1ec3m c\u1ee7a h\u1ecdc k\u1ef3 2 v\u00e0 c\u1ea3 n\u0103m kh\u00e1 g\u1ea7n ph\u00e2n b\u1ed1 chu\u1ea9n**","6694eb9d":"# 1. Ph\u00e2n b\u1ed1 \u0111i\u1ec3m theo h\u1ecdc k\u1ef3 v\u00e0 theo n\u0103m?","684b7c7b":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:170%;text-align:center;border-radius:20px 80px;\"> Importing the library<\/p>   ","f64113ae":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:170%;text-align:center;border-radius:20px 80px;\"> Preprocessing Data\n<\/p>   ","9569a92d":"# 7. \u1ea2nh h\u01b0\u1edfng c\u1ee7a ng\u00e0y th\u00e1ng n\u0103m sinh \u0111\u1ebfn \u0111i\u1ec3m s\u1ed1?","0020fea7":"# 3. Ph\u00e2n b\u1ed1 \u0111i\u1ec3m theo l\u1edbp h\u1ecdc?","99104bf9":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#47b7ed;font-family:newtimeroman;color:#000000;font-size:170%;text-align:center;border-radius:20px 80px;\"> Exploratory data analysis\n<\/p>   ","d6c9dcf3":"### **C\u00e1c t\u1ec9nh c\u00f3 \u0111i\u1ec3m trung b\u00ecnh cao l\u00e0 \u0111i\u1ec3m c\u00f3 di\u1ec7n t\u00edch h\u00ecnh tr\u00f2n l\u1edbn nh\u01b0 B\u1eafc Ninh, H\u00e0 Nam, H\u1ea3i D\u01b0\u01a1ng. Trong \u0111\u00f3 B\u1eafc Ninh c\u00f3 th\u00e0nh t\u00edch t\u1ed1t trong k\u1ef3 1 v\u00e0 H\u00e0 Nam l\u1ea1i c\u00f3 th\u00e0nh t\u00edch \u1ea5n t\u01b0\u1ee3ng t\u1ea1i k\u1ef3 2. \u0110\u1eb7c bi\u1ec7t l\u1edbp c\u00f3 b\u1ea1n sinh ra t\u1ea1i Li\u00ean Bang Nga v\u00e0 C\u1ed9ng H\u00f2a S\u00e9c.**","4f176bd1":"### **H\u1ecdc k\u1ef3 1, n\u1eef c\u1ee7a l\u1edbp 2 c\u00f3 k\u1ebft qu\u1ea3 t\u1ed1t h\u01a1n h\u1eb3n nam, tuy nhi\u00ean sang k\u1ef3 2 k\u1ebft qu\u1ea3 c\u1ee7a n\u1eef kh\u00f4ng c\u00f2n \u00e1p \u0111\u1ea3o n\u1eefa. \u0110i\u1ec1u \u0111\u00f3 cho th\u1ea5y, k\u1ebft qu\u1ea3 k\u1ef3 2 c\u1ee7a l\u1edbp 2 b\u1ecb th\u1ea5p \u0111i m\u1ed9t ph\u1ea7n l\u00e0 v\u00ec k\u1ebft qu\u1ea3 h\u1ecdc t\u1eadp c\u1ee7a n\u1eef trong l\u1edbp 2 b\u1ecb k\u00e9m \u0111i.**","4daec951":"### **H\u1ecdc sinh t\u00ean S\u01a1n c\u00f3 \u0111i\u1ec3m trung b\u00ecnh cao nh\u1ea5t trong c\u00e1c t\u00ean, trong khi h\u1ecdc sinh h\u1ecd Chu c\u00f3 \u0111i\u1ec3m trung b\u00ecnh cao nh\u1ea5t trong c\u00e1c h\u1ecd.**","2b8ae92a":"### **Nh\u00ecn v\u00e0o bi\u1ec3u \u0111\u1ed3 boxplot ta th\u1ea5y xu h\u01b0\u1edbng nh\u01b0 \u0111i\u1ec3m trung b\u00ecnh, k\u1ef3 1 \u0111i\u1ec3m l\u1edbp 2 cao h\u01a1n, \u0111\u1ebfn k\u1ef3 2 \u0111i\u1ec3m l\u1edbp 2 b\u1ecb gi\u1ea3m tuy nhi\u00ean c\u1ea3 n\u0103m v\u1eabn cao h\u01a1n l\u1edbp 1.**","39eab4a2":"# 2. So s\u00e1nh \u0111i\u1ec3m trung b\u00ecnh c\u1ee7a l\u1edbp h\u1ecdc?","37e271fd":"# 4. Ph\u00e2n b\u1ed1 \u0111i\u1ec3m theo gi\u1edbi t\u00ednh?","89cfb5bc":"### **Ph\u1ed5 \u0111i\u1ec3m c\u1ee7a nam r\u1ed9ng h\u01a1n n\u1eef, cho th\u1ea5y \u0111\u1ed9 bi\u1ebfn \u0111\u1ed9ng \u0111i\u1ec3m c\u1ee7a nam cao h\u01a1n n\u1eef, tuy nhi\u00ean kh\u00f4ng c\u00f3 xu h\u01b0\u1edbng qu\u00e1 kh\u00e1c bi\u1ec7t gi\u1eefa \u0111i\u1ec3m nam v\u00e0 n\u1eef.**","47a9dcc4":"### **S\u1ed1 t\u00edn ch\u1ec9 c\u00f2n l\u1ea1i \u1edf 2 l\u1edbp kh\u00e1 t\u01b0\u01a1ng \u0111\u1ed3ng, tuy nhi\u00ean s\u1ed1 t\u00edn ch\u1ec9 t\u00edch l\u0169y c\u1ee7a l\u1edbp 1 nhi\u1ec1u h\u01a1n l\u1edbp 2, d\u1eabn \u0111\u1ebfn t\u1ed5ng t\u00edn ch\u1ec9 l\u1edbp 1 nhi\u1ec1u h\u01a1n l\u1edbp 2. V\u00ec h\u1ecdc nhi\u1ec1u t\u00edn ch\u1ec9 h\u01a1n n\u00ean \u0111i\u1ec3m l\u1edbp 1 k\u00e9m \u0111i\u1ec3m l\u1edbp 2?**","b9ab7d7c":"### **H\u1ecdc k\u1ef3 1 \u0111i\u1ec3m l\u1edbp 2 trung b\u00ecnh l\u1edbp 2 cao h\u01a1n l\u1edbp 1, tuy nhi\u00ean h\u1ecdc k\u1ef3 2 \u0111i\u1ec3m l\u1edbp 2 th\u1ea5p h\u01a1n. Trung b\u00ecnh c\u1ea3 n\u0103m \u0111i\u1ec3m l\u1edbp 2 cao h\u01a1n l\u1edbp 1.**","738c5b61":"# 6. Ph\u00e2n b\u1ed1 t\u00edn ch\u1ec9 t\u00edch l\u0169y c\u1ee7a hai l\u1edbp?"}}