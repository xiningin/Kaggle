{"cell_type":{"4f5cac15":"code","015c1096":"code","80376339":"code","b3f041be":"code","19bacc8a":"code","e8930560":"code","f907183e":"code","b5325f62":"code","884f86f6":"code","0ef19bbb":"code","80ff2967":"code","b6bee419":"code","173a5aed":"code","2f4f889f":"code","e1b67f06":"code","e88a95d6":"code","5ad0d004":"code","779b92b1":"code","9ab2ae50":"code","878c055f":"markdown","7d92ba4d":"markdown","02a86a98":"markdown","f2aae5dc":"markdown","5896f848":"markdown","54df0ee0":"markdown","de71d8ad":"markdown","b1550f73":"markdown","339a960a":"markdown"},"source":{"4f5cac15":"def tuple_ex():\n    \"\"\" tuple de\u011feri return yapar\"\"\"  \n    t = (1,2,3)\n    return t\na,b,c = tuple_ex()  # tuplenin g\u00fczel \u00f6zelli\u011fi a b c gibi de\u011ferlere de atabiliriz burda bunu yapt\u0131k\nprint(a,b,c)","015c1096":"x = 2 # Global De\u011fi\u015fkendir\ndef f():\n    x = 3 # Yerel De\u011fi\u015fkendir\n    return x\nprint(x)      # x = 2 global scope\nprint(f())    # x = 3 local scope","80376339":"x = 5 # Global De\u011fer\ndef f():\n    y = 2*x        # Tan\u0131mlanan local de\u011fer\n    return y\nprint(f())         \n# \u0130lk ba\u015f local aran\u0131r daha sonra global aran\u0131yor. E\u011fer ikisi de olmazsa buitins scope aran\u0131r","b3f041be":"# Builtins scope t\u00fcrleri\nimport builtins\ndir(builtins)","19bacc8a":"a = 3 # Global\n\ndef f(x,y):\n\n     a = 5 # local \n\n     return x*(y+a) # ilk local de\u011feri arayaca\u011f\u0131 i\u00e7in 2*(5+4) den 18 olur\n\nf(2,4)","e8930560":"def square():\n    \"\"\" Girilen say\u0131n\u0131n karesini d\u00f6nd\u00fcrecek \"\"\"\n    def add():\n        x = 2 #local\n        y = 3  #local\n        z = x + y\n        return z\n    return add()**2\nprint(square())   ","f907183e":"\ndef f(a, b = 1, c = 2):\n    y = a + b + c\n    return y\nprint(f(5)) # sadece a' n\u0131n de\u011ferini vermi\u015f olduk vermesek bile tan\u0131ml\u0131 olan default de\u011ferleri al\u0131r\nprint(f(5,4,3)) # Burda da de\u011ferleri biz veriyoruz default de\u011ferleri alm\u0131yor(s\u0131ras\u0131yla)","b5325f62":"def f(*args): # alaca\u011f\u0131 arg\u00fcment belirlemiyor fazla say\u0131da alabilir\n    for i in args:\n        print(i)\nf(1)\nprint(\"\")\nf(1,2,3,4)\n# **kwargs methodu dictionary de kullan\u0131l\u0131r (keyword ve value de\u011fer olanlar i\u00e7in)\ndef f(**kwargs):\n    for key, value in kwargs.items(): # items ile dictionary de\u011ferlerini g\u00f6rebiliyoruz      \n        print(key, \" \", value)\nf(country = 'spain', capital = 'madrid', population = 123456)","884f86f6":"square = lambda x: x**2  # lambda ile kolay yol\nprint(square(4))\ntot = lambda x,y,z: x+y+z   \nprint(tot(1,2,3)) # verilen de\u011ferin toplam\u0131n\u0131 verir","0ef19bbb":"number_list = [1,2,3]\ny = map(lambda x:x**2,number_list) # de\u011ferleri s\u0131ras\u0131yla i\u015fleyip yazd\u0131r\u0131yor\nprint(list(y))","80ff2967":"def sum(a,b):\n\n    def sub(a,b):\n\n        return a-b # 5 - 1 \n\n    return sub(a,b) + 2  # 4=(sub) + 2 \n\nprint(sum(5,1))","b6bee419":"def s(x, y = 2):\n\n    return x**2\n\ns(2) \n\ns(2,3)","173a5aed":"tot = lambda x,y,z: x*y**z   # where x,y,z are names of arguments\nprint(tot(1,2,3))","2f4f889f":"name = \"ronaldo\"\nit = iter(name) # iterable oluyor\nprint(next(it))    \nprint(*it)         ","e1b67f06":"list1 = [1,2,3,4]\nlist2 = [5,6,7,8]\nz = zip(list1,list2) # zip birle\u015ftirmesi\nprint(z) # obje olarak tan\u0131mlan\u0131yor\nz_list = list(z)\nprint(z_list)","e88a95d6":"un_zip = zip(*z_list)\nun_list1,un_list2 = list(un_zip) # unzip returns\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))","5ad0d004":"num1 = [1,2,3]\nnum2 = [i + 1 for i in num1 ] #LIST COMPREHENS\u0130ON\nprint(num2)","779b92b1":"# Conditionals on iterable\nnum1 = [5,10,15]\nnum2 = [i**2 if i == 10 else i-5 if i < 7 else i+5 for i in num1] \n''' num1 listesi i\u00e7indekilerini for d\u00f6ng\u00fcs\u00fcne al, e\u011fer i=10 ise i'nin karesini al ve yazd\u0131r\n    e\u011fer 10 de\u011filse al\u0131nan de\u011feri 5 den \u00e7\u0131kar ve yazd\u0131r, sonra al\u0131nan de\u011feri 5 ekle yazd\u0131r   '''\nprint(num2)","9ab2ae50":"# pokemon data will be used\n\nthreshold = sum(data.Speed)\/len(data.Speed)\ndata[\"speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Speed] \n''' verisetinden speed de\u011ferlerini for i  d\u00f6ng\u00fcs\u00fc i\u00e7ine at\u0131l\u0131r. \nE\u011fer i de\u011feri threshold' dan y\u00fcksekse high yaz de\u011filse low yaz           '''\ndata.loc[:10,[\"speed_level\",\"Speed\"]]  # ilk on de\u011feri g\u00f6sterilir\n ","878c055f":"# Zip Metodu ( Birle\u015ftirme)\n**zip(): zip lists**","7d92ba4d":"# Fonksiyon Kullan\u0131m\u0131","02a86a98":"# ANONYMOUS FUNCT\u0130ON\nlAMBDA FONK\u015e\u0130YON G\u0130B\u0130 AMA Bir\u00e7ok De\u011fer alabilir\nmap(func,seq): \n","f2aae5dc":"# LIST COMPREHENS\u0130ON","5896f848":"# LAMBDA FUNCTION ( fonksiyon yazman\u0131n kolay loyu)","54df0ee0":"1. # NESTED FUNCTION( \u0130\u00e7 i\u00e7e fonksiyonlar)","de71d8ad":"# Scope (Tan\u0131mlanan veriable'nin \u00e7e\u015fidi\n# global:En \u00fcstte tan\u0131mlan\u0131r\n# local: Kodun i\u00e7inde tan\u0131mlan\u0131r\n# built in scope: Daha \u00f6nceden python taraf\u0131ndan tasarlanm\u0131\u015f in\u015fa edici","b1550f73":"# DEFAULT ve FLEXIBLE ARGUMENTS\n\ndef f(a, b=1): fonksiyonunda b de\u011fer alabilir e\u011fer almazsa 1 olarak default olarak \u00e7al\u0131\u015f\u0131r (default)\n\n# Flexible\ndef f(*args): \u0130stenilen kadar arg\u00fcment alabilir","339a960a":"\n# ITERATORS \n\nlist, strings and dictionaries \u0131terater objeceklerdir"}}