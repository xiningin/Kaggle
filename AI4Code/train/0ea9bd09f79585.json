{"cell_type":{"61a79c9a":"code","0e03f5d6":"code","a93c2e34":"code","8c405a9b":"code","2b135a85":"code","c1898fb7":"code","4581120e":"code","ac7d6199":"code","59e28528":"code","0ed1dae4":"code","1d711575":"code","34b07ea4":"code","c64c6167":"code","656467c4":"code","cdc17e2a":"code","b8016ea3":"code","8fec049c":"code","15469507":"code","fded319e":"code","93044b4f":"code","56b6dd89":"markdown","daa88c37":"markdown","30c0bfe3":"markdown","1e5976b5":"markdown","5bd627af":"markdown","4855420e":"markdown","cffa0fc6":"markdown","da7acff1":"markdown","22caaf97":"markdown","721e1d6c":"markdown","7d947030":"markdown","f3850394":"markdown","449fc064":"markdown","96053683":"markdown","f424093a":"markdown","a7aa2819":"markdown","2e20be08":"markdown","6eff9462":"markdown","77e6a54b":"markdown"},"source":{"61a79c9a":"import numpy as np \nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy.stats import chi2_contingency\nfrom scipy.stats import chisquare\nimport scipy.stats as ss\n\nfrom sklearn.metrics import accuracy_score,roc_auc_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import RandomizedSearchCV, KFold, train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\n\n\nfrom lightgbm import LGBMClassifier\n\nimport warnings\nwarnings.filterwarnings('ignore')","0e03f5d6":"df = pd.read_csv(\"..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\nprint(df.columns)\n\nprint(df.dtypes)","a93c2e34":"for column in df.columns:\n    \n    print(column)\n    \n    print(df[df[column] == ' '].index)","8c405a9b":"print(\"Tenure of customers with zero total charges: \",df[df[\"TotalCharges\"]==\" \"][\"tenure\"])\n# These customers seem to have registered but not started with their service to be evaluated. Hence, they will be excluded\ndf = df[df[\"TotalCharges\"]!=\" \"] ","2b135a85":"for column in df.columns:\n    \n    print(\"For \"+ column+ \":\" + str(df[column].nunique()) + \"unique values\")","c1898fb7":"columns_5 = []\n\nfor column in df.columns:\n     \n    if df[column].nunique() <=5 and column!=\"Churn\":\n        \n        columns_5.append(column)\n        ","4581120e":"Bar_Pred = sns.countplot(x='Churn',data=df)\nplt.show()","ac7d6199":"fig, axs = plt.subplots(4, 4, sharex=False, sharey=True, figsize=(30,30))\n\ncount_row = 0\ncount_columns = 0\nfor column in columns_5:    \n    \n    \n    Bar_Plot = sns.countplot(x=column,hue='Churn',data=df,ax = axs[count_row][count_columns]).set_title(\"Frequeny distribution for: \" + str(column))\n        \n   \n    count_columns +=1\n    \n    if count_columns == 4:\n        count_row+=1\n        count_columns=0","59e28528":"df_corr = df[columns_5]\n\n# Cramers V for categorical correlations\ndef cramers_v(x, y):\n    x = np.array(x)\n    y = np.array(y)\n    confusion_matrix = pd.crosstab(x, y)\n    chi2 = ss.chi2_contingency(confusion_matrix)[0]\n    n = confusion_matrix.sum().sum()\n    phi2 = chi2\/n\n    r,k = confusion_matrix.shape\n    phi2corr = max(0, phi2-((k-1)*(r-1))\/(n-1))\n    rcorr = r-((r-1)**2)\/(n-1)\n    kcorr = k-((k-1)**2)\/(n-1)\n    return np.sqrt(phi2corr\/min((kcorr-1),(rcorr-1)))\n\ncramersv = pd.DataFrame(index=df_corr.columns,columns=df_corr.columns)\ncolumns = df_corr.columns\n\nfor i in range(0,len(columns)):\n    for j in range(0,len(columns)):\n        #print(data[columns[i]].tolist())\n        u = cramers_v(df_corr[columns[i]].tolist(),df_corr[columns[j]].tolist())\n        cramersv.loc[columns[i],columns[j]] = u\n        \ncramersv.fillna(value=np.nan,inplace=True)\n","0ed1dae4":"plt.figure(figsize=(20,20))\nsns.heatmap(cramersv,cmap=\"YlGnBu\")\nplt.show()","1d711575":"\ndf_PS = df[[\"PhoneService\",\"MultipleLines\"]]\nTotal_yes_multiple_lines = len(df_PS[(df_PS[\"MultipleLines\"]==\"Yes\")])\n\n\n\n# Check for relation between good phone service and multiple lines\ndf_CS_corr = df_PS[(df_PS[\"PhoneService\"]==\"Yes\") & (df_PS[\"MultipleLines\"]==\"Yes\")]\n\nprint(\"Percentage of users with multiple lines having good phone service \" + str(len(df_CS_corr)*100\/Total_yes_multiple_lines) + \" %\") \n","34b07ea4":"df_churn = df[df[\"Churn\"]==\"Yes\"]","c64c6167":"sns.histplot(df_churn[\"tenure\"])\n","656467c4":"sns.histplot(df_churn[\"MonthlyCharges\"])","cdc17e2a":"df['TotalCharges'] = df['TotalCharges'].apply(float)\n\n# Rather than label encoding, we can convert the categorical values to dummy variables. \n# This can help evaluate individual fetures directly\ny = df[\"Churn\"]\ndf = df.drop(columns=[\"Churn\",\"customerID\"])\n\ndf = pd.get_dummies(df)\nprint(df.head(10))\n\nX = df\ny = y.values\ny = y.reshape((len(y), 1))\n\n\n","b8016ea3":"# split into train and test sets\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","8fec049c":"clf=RandomForestClassifier()\n\nparam_test={\n        'n_estimators': range(200,500,100), \n        'min_samples_leaf': range(10,20,10), \n        'min_samples_split': range(10,20,10),  \n        'max_depth': range(40,60,10)       \n    }\n            \nmodel = RandomizedSearchCV(\n  estimator=clf, param_distributions=param_test, \n   scoring='accuracy',\n   random_state=314,\n   verbose=True, n_iter=10)\nresult = model.fit(X_train, y_train)\n            \nprint(\"Best Score \" + str(result.best_score_)+\" with paramter \"+ str(result.best_params_))\n\nmodel1 = RandomForestClassifier(n_estimators=result.best_params_['n_estimators'],\n                              min_samples_split=result.best_params_['min_samples_split'],\n                              min_samples_leaf=result.best_params_['min_samples_leaf'], \n                              max_depth=result.best_params_['max_depth'])\n\nmodel1.fit(X_train, y_train)\n\npred = model1.predict(X_test)\nprint('Accuracy:',accuracy_score(pred,y_test))","15469507":"clf= LGBMClassifier()\n\nparam_test ={  'n_estimators': [400, 700, 1000],\n  'colsample_bytree': [0.7, 0.8],\n  'max_depth': [15,20,25],\n   'num_leaves': [50, 100, 200],\n  'reg_alpha': [1.1, 1.2, 1.3],\n 'reg_lambda': [1.1, 1.2, 1.3],\n 'min_split_gain': [0.3, 0.4],\n 'subsample': [0.7, 0.8, 0.9],\n  'subsample_freq': [20]}\n\nmodel = RandomizedSearchCV(\n  estimator=clf, param_distributions=param_test, \n   scoring='accuracy',\n   random_state=314,\n   verbose=True, n_iter=10)\nresult = model.fit(X_train, y_train)\n            \nprint(\"Best Score \" + str(result.best_score_)+\" with paramter \"+ str(result.best_params_))\n\nmodel2 = LGBMClassifier(subsample_freq= result.best_params_['subsample_freq'],subsample= result.best_params_['subsample'], \n                       reg_lambda= result.best_params_['reg_lambda'], reg_alpha = result.best_params_['reg_alpha'], \n                       num_leaves = result.best_params_['num_leaves'], n_estimators = result.best_params_['n_estimators'], \n                       min_split_gain = result.best_params_['min_split_gain'], max_depth = result.best_params_['max_depth'], \n                       colsample_bytre = result.best_params_['colsample_bytree'])\n\nmodel2.fit(X_train, y_train)\n\npred = model2.predict(X_test)\nprint('Accuracy:',accuracy_score(pred,y_test))","fded319e":"model3 = LogisticRegression()\nmodel3.fit(X_train, y_train)\n\npred = model3.predict(X_test)\nprint('Accuracy:',accuracy_score(pred,y_test))","93044b4f":"plt.figure(figsize=(20,10))\nfeat_importances = pd.Series(model1.feature_importances_, index=X_train.columns)\nfeat_importances.nlargest(6).plot(kind='barh')","56b6dd89":"### Let's look at the prediction by evaluating three models\n```\n1. Light gbm\n2. Random forest\n3. Logistic regression\n```","daa88c37":"### Let's look at how these categorical features are correlated","30c0bfe3":"- With similar performances, lets find out the important features contributing to the model performance (Random forest classifier)","1e5976b5":"### Lets look at the relation between tenure to churn for customers who have terminated their service","5bd627af":"- Monthly charges between 60 and 110 have a high frequency count but can not infer any significant meaning","4855420e":"- EDA for most recognisable fields\n  - Gender \n  - Senior citizen\n  - Partner\n  - Dependents\n  - Tenure\n  - Phone service\n  - Multiple Lines\n  - Internet service\n  - Online security\n  - Online backup\n  - Device protection\n  - Tech Suppport\n  - Streaming TV\n  - Streaming movies\n  - Contract\n  - Paper less Billing\n  - Payment method\n  ","cffa0fc6":"### As always would love to receive feedback on any improvement or mistake","da7acff1":"- Tenure, Contract_Month to Month, Montly Charges, Total charges and Tech support no seem to contribute the most to the churn (Top 5)\n- From the distribution plots, it can be inferred that customers make up their mind to terminate within the first 10 months\n- Also, customers with a two year contract are less likely to churn than a month to month contract\n- Additionaly customer support are good measures to prevent the company from losing customers. Also as inferred above, customer support enables multiple subscribers","22caaf97":"- Apart from the expected correlation between partners and dependants, there is a strong correlation between the phone service and presence of multiple lines (or multiple phone numbers for the same customer). My guess is that a good service prompts customers to order multiple lines\n- Also users of internet security avail other internet based features\n- Let's look at phone service a bit more closely","721e1d6c":"Overall lower frequency of churn in the dataset","7d947030":"Remove rows with spaces","f3850394":"Number of missing values or spaces","449fc064":"- Random Forest","96053683":"- EDA for features for 5 or less than 5 unique values\n","f424093a":"- Light GBM","a7aa2819":"### Although freuquency of churn is generally lower, let's look at some significant results\n```\n1. Non senior citizens are less likely to churn propprtionally to senior citizens   \n2. Presence of a phone service and tech support play an important role in preventing customer churn\n3. Contracts without paperless billing are less likely to churn than paperless billing  \n4. Customers with DSL service are propotionally less likely to churn than with fiber optic\n\n```\n\n","2e20be08":"- This confirms the fact that good service leads to multiple subscriptions","6eff9462":"- Logistic regression","77e6a54b":"- Highest frequency of churn in the first 10 months. Customers make up their mind within the first 10 months to terminate or continue their service"}}