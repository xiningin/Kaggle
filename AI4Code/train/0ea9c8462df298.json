{"cell_type":{"7caa1e2d":"code","8c0ca385":"code","548623ee":"code","cadbc2b1":"code","0bab68d5":"code","d270febe":"code","4b4300bf":"code","9c7c777d":"code","22d052e4":"code","24c9fc7d":"code","3fddd3ee":"code","8c25a56c":"code","d7fd0698":"code","083ea1ac":"code","4e928d7b":"code","7fd7d637":"code","2790424d":"code","935313a3":"code","7afb07b1":"code","a0fbfb8f":"code","3bce7112":"code","764f951e":"code","4fa96751":"code","97ba7712":"code","c38a066f":"code","a75665db":"code","23dc9e8c":"code","b67aaad4":"code","37f82536":"code","b055e3ad":"code","afceacdc":"code","aba69b80":"code","5ce2244e":"code","8c23fa9c":"code","51acc67f":"code","b8da6325":"code","31df30c6":"code","dd9b5f16":"code","3babf11b":"code","11d1a83c":"code","d8574741":"code","c7f201d4":"code","30338ff1":"code","cd213e51":"code","83a7fe01":"code","f9f1d199":"code","84758635":"code","d62021ad":"code","97d556bf":"code","1ce3debe":"code","8b8d631e":"code","a571d59c":"code","cb969394":"code","296f0d1e":"code","e5513227":"code","b7e5c4f5":"code","5cef3a05":"code","7e8db805":"code","6811a240":"code","d9616224":"code","42496904":"code","32af426a":"code","bae0db15":"code","f2d01253":"code","38a16c91":"code","dd2d158f":"code","29ac9d99":"code","e5833087":"code","fad343f3":"code","2918e3da":"code","eafb2bd9":"code","d3f4f1b4":"code","5ae38b2e":"code","8bd8f54f":"code","b07f06af":"code","33678c76":"code","299ae2c6":"code","fae8f0a7":"code","b5b43b80":"code","fc096058":"code","f3fe1630":"code","60e9c21a":"code","d379a443":"code","08e98847":"code","a540dee5":"code","06a61cc2":"code","4e592152":"code","1b3a52f4":"code","ac011547":"code","2e978e7a":"code","cdd0fe8b":"code","4eda72c4":"code","801c0fa3":"code","4c8263e1":"code","2f3b4e43":"code","e3d95106":"code","f33d5f9d":"code","de228988":"code","19e8d98e":"code","f2dcbea2":"code","77aebe45":"code","6828f9c3":"code","a91d7c3b":"code","a9db67d3":"code","b645144b":"code","936be174":"code","61d810e2":"code","fff67f8b":"code","ba16104e":"code","fdf14968":"code","8b74d7a2":"code","3d601d20":"markdown","ba572109":"markdown","76e1aab9":"markdown","56c4c7e0":"markdown","96a162b8":"markdown","86b26fde":"markdown","60651327":"markdown","981c581c":"markdown","d4d8e3d0":"markdown","eafa18d5":"markdown","6d13e2db":"markdown","24adff1a":"markdown","bb8ea622":"markdown","a21c2f7e":"markdown","6644644b":"markdown","b72fa04d":"markdown","08a54c51":"markdown","5319b33b":"markdown","b97c4f34":"markdown","a6a98071":"markdown","11187be1":"markdown","a9b91627":"markdown","606c9abb":"markdown","e4e8f59c":"markdown"},"source":{"7caa1e2d":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport os\nimport pandas as pd \nimport seaborn as sns\nimport warnings\n\nfrom mpl_toolkits.mplot3d import axes3d\n\nfrom mpl_toolkits.basemap import Basemap\n\nplt.style.use('seaborn-whitegrid')\n\ndef ignore_warn(*args, **kwargs):\n    pass\n\nwarnings.warn = ignore_warn \n\nmpl.rcParams['xtick.labelsize'] = 15\nmpl.rcParams['ytick.labelsize'] = 15\n\nprint(os.listdir(\"..\/input\"))","8c0ca385":"data = pd.read_csv('..\/input\/kc_house_data.csv')\ndata.columns","548623ee":"data.info()","cadbc2b1":"#as we have zipcode I also in to create feature \"city\"\n#copy first\ndata['city'] = data['zipcode']\ndata.head()","0bab68d5":"#https:\/\/m.usps.com\/m\/ZipLookupAction?search=zip\ndata['city'] = data['city'].replace(98178, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98125, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98028, 'KENMORE, WA')\ndata['city'] = data['city'].replace(98136, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98074, 'SAMMAMISH, WA')\ndata['city'] = data['city'].replace(98053, 'REDMOND, WA')\ndata['city'] = data['city'].replace(98003, 'FEDERAL WAY, WA')\ndata['city'] = data['city'].replace(98198, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98146, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98038, 'MAPLE VALLEY, WA')\ndata['city'] = data['city'].replace(98007, 'BELLEVUE, WA')\ndata['city'] = data['city'].replace(98107, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98126, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98019, 'DUVALL, WA')\ndata['city'] = data['city'].replace(98103, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98002, 'AUBURN, WA')\ndata['city'] = data['city'].replace(98133, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98040, 'MERCER ISLAND, WA')\ndata['city'] = data['city'].replace(98092, 'AUBURN, WA')\ndata['city'] = data['city'].replace(98030, 'KENT, WA')\ndata['city'] = data['city'].replace(98119, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98112, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98052, 'REDMOND, WA')\ndata['city'] = data['city'].replace(98027, 'ISSAQUAH, WA')\ndata['city'] = data['city'].replace(98117, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98058, 'RENTON, WA')\ndata['city'] = data['city'].replace(98001, 'AUBURN, WA')\ndata['city'] = data['city'].replace(98056, 'RENTON, WA')\ndata['city'] = data['city'].replace(98166, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98023, 'FEDERAL WAY, WA')\ndata['city'] = data['city'].replace(98070, 'VASHON, WA')\ndata['city'] = data['city'].replace(98148, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98105, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98042, 'KENT, WA')\ndata['city'] = data['city'].replace(98008, 'BELLEVUE, WA')\ndata['city'] = data['city'].replace(98059, 'RENTON, WA')\ndata['city'] = data['city'].replace(98122, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98144, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98004, 'BELLEVUE, WA')\ndata['city'] = data['city'].replace(98005, 'BELLEVUE, WA')\ndata['city'] = data['city'].replace(98034, 'KIRKLAND, WA')\ndata['city'] = data['city'].replace(98075, 'SAMMAMISH, WA')\ndata['city'] = data['city'].replace(98116, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98010, 'BLACK DIAMOND, WA')\ndata['city'] = data['city'].replace(98118, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98199, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98032, 'KENT, WA')\ndata['city'] = data['city'].replace(98045, 'NORTH BEND, WA')\ndata['city'] = data['city'].replace(98102, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98077, 'WOODINVILLE, WA')\ndata['city'] = data['city'].replace(98108, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98168, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98177, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98065, 'SNOQUALMIE, WA')\ndata['city'] = data['city'].replace(98029, 'ISSAQUAH, WA')\ndata['city'] = data['city'].replace(98006, 'BELLEVUE, WA')\ndata['city'] = data['city'].replace(98109, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98022, 'ENUMCLAW, WA')\ndata['city'] = data['city'].replace(98033, 'KIRKLAND, WA')\ndata['city'] = data['city'].replace(98155, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98024, 'FALL CITY, WA')\ndata['city'] = data['city'].replace(98011, 'BOTHELL, WA')\ndata['city'] = data['city'].replace(98031, 'KENT, WA')\ndata['city'] = data['city'].replace(98106, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98072, 'WOODINVILLE, WA')\ndata['city'] = data['city'].replace(98188, 'SEATTLE, WA')\ndata['city'] = data['city'].replace(98014, 'CARNATION, WA')\ndata['city'] = data['city'].replace(98055, 'RENTON, WA')\ndata['city'] = data['city'].replace(98039, 'MEDINA, WA')\ndata['city'] = data['city'].replace(98115, 'SEATTLE, WA')\ndata.city.describe()","d270febe":"#convert \"date\" do TimeFrame\ndata['date'] = pd.to_datetime(data['date'])\n#and add new feature 'day_of_week'\ndata['day_of_week'] = data['date'].dt.day_name()","4b4300bf":"#I also wanna know if the apt was renovated in the past time\ndata['renovated'] = 0\nfor x in range(len(data)):\n    if data.loc[x, 'yr_renovated'] == 0:\n        data.loc[x, 'renovated'] = False\n    else:\n        data.loc[x, 'renovated'] = True\n\ndata.head()","9c7c777d":"#and logaritmic value for price and sqft_living\ndata['log_price'] = np.log(data['price'])\ndata['log_sqft_living'] = np.log(data['sqft_living'])","22d052e4":"features = ['price','bedrooms','bathrooms','sqft_living','sqft_lot','floors',\n            'waterfront','view','condition','grade','sqft_above','sqft_basement',\n            'yr_built','yr_renovated','zipcode','sqft_living15','sqft_lot15']\n\nmask = np.zeros_like(data[features].corr(), dtype=np.bool) \nmask[np.triu_indices_from(mask)] = True \n\nf, ax = plt.subplots(figsize=(16, 12))\nplt.title('Macierz korelacji',fontsize=15)\n\nsns.heatmap(data[features].corr(),linewidths=0.25,vmax=1.0,square=True,cmap=\"YlGnBu\", \n            linecolor='w',annot=True,mask=mask,cbar_kws={\"shrink\": .75})","24c9fc7d":"data['date'].describe()","3fddd3ee":"data['date'].min()","8c25a56c":"data['date'].max()","d7fd0698":"fig, ax = plt.subplots(figsize=(25, 10))\npd.to_datetime(data['date']).value_counts().sort_index().plot.line()\nax.set_title('Number of houses sold between May of 2014 r. and May of 2015 r.', fontsize=20)\nax.set_xlabel(\"Date\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\n\nax.xaxis.set_major_locator(mpl.dates.MonthLocator())\nax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\nax.xaxis.set_major_formatter(plt.NullFormatter())\nax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'))","083ea1ac":"data['date'].value_counts().mean()","4e928d7b":"data[data['day_of_week'].isin(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'])]['day_of_week'].value_counts().sum()","7fd7d637":"data[data['day_of_week'].isin(['Sutarday', 'Sunday'])]['day_of_week'].value_counts().sum()","2790424d":"week_data = data[data['day_of_week'].isin(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'])]\nfig, ax = plt.subplots(figsize=(25, 10))\npd.to_datetime(week_data['date']).value_counts().sort_index().plot.line()\nax.set_title('Number of houses sold (except weekends)', fontsize=20)\nax.set_xlabel(\"Date\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\n\nax.annotate('Independence Day', xy=('2014-07-04', 2), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#c62540'),\n            xytext=(80, 40), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#c62540\"))\nax.annotate('Memorial Day', xy=('2014-05-26', 7), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#b132c1'),\n            xytext=(-80, 40), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#b132c1\"))\nax.annotate('Labor Day', xy=('2014-09-01', 5), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#32c19a'),\n            xytext=(80, 20), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#32c19a\"))\nax.annotate('Thanksgiving Day', xy=('2014-11-27', 2), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#a4c132'),\n            xytext=(-120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#a4c132\"))\nax.annotate('Martin Luther King\u2019s Jr Day', xy=('2015-01-19', 7), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#c18a32'),\n            xytext=(0, -30), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#c18a32\"))\nax.annotate('Presidents\u2019 Day', xy=('2015-02-16', 7), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#3272c1'),\n            xytext=(80, 30), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#3272c1\"))\nax.annotate('Halloween', xy=('2014-10-31', 40), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#c15832'),\n            xytext=(-80, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#c15832\"))\nax.xaxis.set_major_locator(mpl.dates.MonthLocator())\nax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\nax.xaxis.set_major_formatter(plt.NullFormatter())\nax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'))\n","935313a3":"#data.price.sort_values()","7afb07b1":"data.iloc[[7252, 3914, 9254]]","a0fbfb8f":"data.iloc[[1149, 15293, 465]]","3bce7112":"#data.groupby(['date'])['price'].mean().sort_values(ascending=False)","764f951e":"data[data.date == '2014-10-11']","4fa96751":"#data.date.value_counts().sort_values()","97ba7712":"data[data.date.isin(['2015-05-15', '2015-05-24', '2015-05-27'])]","c38a066f":"print(data.price.sum() \/ 21613)\nprint(data.price.median())","a75665db":"data_to_count = data.drop([17296, 19148, 16594])\ndata_to_count.price.sum()  \/ 21610","23dc9e8c":"data_to_count = data.drop([7252, 3914, 9254])\ndata_to_count.price.sum()  \/ 21610","b67aaad4":"fig, ax = plt.subplots(1, 1, figsize=(25, 10))\n\nsns.lineplot(x=\"date\", y=\"price\", data=data.groupby(['date'])['price'].mean().reset_index())\nax.set_title('Price Mean', fontsize=15)\nax.set_xlabel(\"Date\",fontsize=15)\nax.set_ylabel(\"Price Mean\",fontsize=15)\n\nax.xaxis.set_major_locator(mpl.dates.MonthLocator())\nax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\nax.xaxis.set_major_formatter(plt.NullFormatter())\nax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'))\n\nax.annotate('Houses nr. 17296 i 19148', xy=('2014-10-11', 2020000), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#c62540'),\n            xytext=(190, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#c62540\"))\nax.annotate('House nr. 16594', xy=('2015-05-27', 1310000.0), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#c62540'),\n            xytext=(-120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#c62540\"))","37f82536":"fig, ax = plt.subplots(1,3,figsize=(25, 6))\nsns.barplot(x='index', y='day_of_week', data=data['day_of_week'].value_counts().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).reset_index(), ax=ax[0]) #reindex jest potrzebne do zachowania odpowiedniej kolejno\u015bci dni\nax[0].set_title('Number of houses sold in a day week', fontsize=15)\nax[0].set_xlabel(\"Day\",fontsize=15)\nax[0].set_ylabel(\"Value\",fontsize=15)\nax[0].set_xticklabels(data['day_of_week'].value_counts().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).index, rotation=90, fontsize=15)\n\nsns.barplot(x='day_of_week', y='price', \n            data=data.groupby(['day_of_week'])['price'].mean().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).reset_index(), ax=ax[1]) #reindex jest potrzebne do zachowania odpowiedniej kolejno\u015bci dni\nax[1].set_title('Price mean of houses sold in a day week', fontsize=15)\nax[1].set_xlabel(\"Day\",fontsize=15)\nax[1].set_ylabel(\"Price mean\",fontsize=15)\nax[1].set_xticklabels(data['day_of_week'].value_counts().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).index, rotation=90, fontsize=15)\n\nsns.barplot(x='day_of_week', y='price', \n            data=data.groupby(['day_of_week'])['price'].sum().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).reset_index(), ax=ax[2]) #reindex jest potrzebne do zachowania odpowiedniej kolejno\u015bci dni\nax[2].set_title('Total value of houses sold in a day week', fontsize=15)\nax[2].set_xlabel(\"Day\",fontsize=15)\nax[2].set_ylabel(\"Total value\",fontsize=15)\nax[2].set_xticklabels(data['day_of_week'].value_counts().reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']).index, rotation=90, fontsize=15)\n","b055e3ad":"data.price.describe()","afceacdc":"data[data.price == data.price.min()]","aba69b80":"data[data.price == data.price.max()]","5ce2244e":"print(data.price.kurt())\nprint(data.price.skew())","8c23fa9c":"fig, ax = plt.subplots(1,2, figsize=(25, 6))\nsns.distplot(data.price, ax=ax[0])\nax[0].set_title('Price', fontsize=15)\nax[0].set_xlabel(\"Price\",fontsize=15)\nsns.distplot(data[data.price <= 1500000].price, ax=ax[1])\nax[1].set_title('Price', fontsize=15)\nax[1].set_xlabel(\"Price\",fontsize=15)","51acc67f":"(data[data.price < 1000000]['price'].sum() * 100) \/ (data.price.sum())","b8da6325":"data.bedrooms.describe()","31df30c6":"data[data.bedrooms == data.bedrooms.min()]['bedrooms'].value_counts()","dd9b5f16":"data[data.bedrooms == data.bedrooms.min()]['sqft_living'].mean()","3babf11b":"data[data.bedrooms == data.bedrooms.min()]['price'].mean()","11d1a83c":"data[data.bedrooms == data.bedrooms.max()]","d8574741":"#zale\u017cno\u015b\u0107 pomiedzy cen\u0105 a ilo\u015bci\u0105 \u0142azienek\nplt.style.use('seaborn-notebook')\nfig, ax = plt.subplots(1,3,figsize=(25, 6))\ndata.bedrooms.value_counts().sort_index().plot.bar(ax=ax[0])\nax[0].set_title('Number of houses\/Number of rooms', fontsize=15)\nax[0].set_xlabel(\"Number of rooms\",fontsize=15)\nax[0].set_ylabel(\"Number of houses\",fontsize=15)\nax[0].set_xticklabels(data.bedrooms.value_counts().sort_index().index, rotation=0, fontsize=15)\n\nsns.boxplot(x=\"bedrooms\", y=\"price\", data=data, ax=ax[1])\nax[1].set_title('Price\/Number of rooms', fontsize=15)\nax[1].set_xlabel(\"Number of rooms\",fontsize=15)\nax[1].set_ylabel(\"Price\",fontsize=15)\n#ax[1].set_xticklabels(data.bedrooms.value_counts().sort_index().index, rotation=90, fontsize=15)\n\ndata[(data.price < 2000000) & (data.bedrooms < 10)].plot.hexbin(x='bedrooms', y='price', gridsize=10, ax=ax[2])\nax[2].set_title('Price\/Number of rooms', fontsize=15)\nax[2].set_xlabel(\"Number of rooms\",fontsize=15)\nax[2].set_ylabel(\"Price\",fontsize=15)\n#ax[2].set_xticklabels(data.bedrooms.value_counts().sort_index().index, rotation=90, fontsize=15)","c7f201d4":"(data[data.bedrooms.isin([2,3,4,5])]['bedrooms'].value_counts().sum() * 100) \/ 21613 ","30338ff1":"data[data.bedrooms == 11]","cd213e51":"data.bathrooms.describe()","83a7fe01":"print('Number of houses without bathrooms: ' + data[data.bathrooms == data.bathrooms.min()]['bathrooms'].value_counts().sum().astype(str))\nprint('Average sqft_living of houses without bathrooms: ' + str(data[data.bathrooms == data.bathrooms.min()]['sqft_living'].mean()))\nprint('Average price of houses without bathrooms: ' + str(data[data.bathrooms == data.bathrooms.min()]['price'].mean()))","f9f1d199":"print('Number of houses with 8 bathrooms: ' + data[data.bathrooms == data.bathrooms.max()]['bathrooms'].value_counts().sum().astype(str))\nprint('Average sqft_living of houses with 8 bathrooms: ' + str(data[data.bathrooms == data.bathrooms.max()]['sqft_living'].mean()))\nprint('Average price of houses with 8 bathrooms: ' + str(data[data.bathrooms == data.bathrooms.max()]['price'].mean()))","84758635":"data[data.bathrooms == 8]","d62021ad":"fig, ax = plt.subplots(figsize=(25, 6))\nsns.countplot(data.bathrooms, ax=ax)\nax.set_title('Number of houses\/Number of bathrooms', fontsize=15)\nax.set_xlabel(\"Number of bathrooms\",fontsize=15)\nax.set_ylabel(\"Number of houses\",fontsize=15)\nax.set_xticklabels(data.bathrooms.value_counts().sort_index().index, rotation=0, fontsize=15)","97d556bf":"plt.style.use('default')\nsns.jointplot(x='bathrooms', y='price', data=data[(data.price <= 1500000) & (data.bathrooms <= 5.0)], kind='hex', gridsize=10)","1ce3debe":"plt.style.use('seaborn-notebook')\nfig, ax = plt.subplots(figsize=(25, 6))\nsns.boxplot(x='bathrooms', y='price', data = data, ax=ax)\nax.set_title('Price\/Number of bathrooms', fontsize=15)\nax.set_xlabel(\"Number of bathrooms\",fontsize=15)\nax.set_ylabel(\"Price\",fontsize=15)","8b8d631e":"data.sqft_living.describe()","a571d59c":"print(data.sqft_living.kurt())\nprint(data.sqft_living.skew())","cb969394":"sns.kdeplot(data.sqft_living)","296f0d1e":"sns.distplot(data[data.sqft_living < 7000]['sqft_living'], bins=30, kde=False)","e5513227":"sns.jointplot(x='sqft_living', y='price', data=data[(data.price < 2000000) & (data.sqft_living <= 5000)], kind='hex')","b7e5c4f5":"plt.style.use('seaborn-notebook')\nfig, ax = plt.subplots(2,2,figsize=(25, 20))\n\ndata_to_plot = data[(data.price < 6000000) & (data.sqft_living <= 11000) & (data.bedrooms <= 7) & (data.bathrooms <= 5.0)]\ndata_to_plot.plot.scatter(x='sqft_living', y='price', ax=ax[0][0])\nax[0][0].set_title('Price\/sqft_living', fontsize=15)\nax[0][0].set_xlabel(\"sqft_living\",fontsize=15)\nax[0][0].set_ylabel(\"Price\",fontsize=15)\ndata_to_plot.plot.scatter(x='sqft_living', y='price', ax=ax[0][1], c='condition', colormap='viridis')\nax[0][1].set_title('Price\/sqft_living', fontsize=15)\nax[0][1].set_xlabel(\"sqft_living\",fontsize=15)\nax[0][1].set_ylabel(\"Price\",fontsize=15)\ndata_to_plot.plot.scatter(x='sqft_living', y='price', ax=ax[1][0], c='bedrooms', colormap='viridis')\nax[1][0].set_title('Price\/sqft_living', fontsize=15)\nax[1][0].set_xlabel(\"sqft_living\",fontsize=15)\nax[1][0].set_ylabel(\"Price\",fontsize=15)\ndata_to_plot.plot.scatter(x='sqft_living', y='price', ax=ax[1][1], c='bathrooms', colormap='viridis')\nax[1][1].set_title('Price\/sqft_living', fontsize=15)\nax[1][1].set_xlabel(\"sqft_living\",fontsize=15)\nax[1][1].set_ylabel(\"Price\",fontsize=15)","5cef3a05":"data.condition.describe()","7e8db805":"data.condition.value_counts()","6811a240":"sns.lmplot(x='sqft_living', y='price', col='condition', hue='condition', fit_reg=False, data=data_to_plot, col_wrap=5, height=3)","d9616224":"sns.lmplot(x='log_sqft_living', y='log_price', hue='condition', data=data, fit_reg=False)","42496904":"data.sqft_lot.describe()","32af426a":"print(data.sqft_lot.kurt())\nprint(data.sqft_lot.skew())","bae0db15":"sns.kdeplot(data.sqft_lot)","f2d01253":"sns.distplot(data[data.sqft_lot < 250000]['sqft_lot'], bins=90)","38a16c91":"data_sqft_lot = data[(data.price < 6000000) & (data.sqft_lot <= 175000) & (data.bedrooms <= 7) & (data.bathrooms <= 5.0)]\nsns.lmplot(x='sqft_lot', y='price', col='condition', hue='condition', fit_reg=False, data=data_sqft_lot, col_wrap=5, height=4)","dd2d158f":"data_sqft_lot = data[(data.price < 6000000) & (data.sqft_lot <= 175000) & (data.bedrooms <= 7) & (data.bathrooms <= 5.0)]\nsns.lmplot(x='sqft_lot', y='price', col='bathrooms', hue='bathrooms', fit_reg=False, data=data_sqft_lot, col_wrap=5, height=4)","29ac9d99":"data.floors.describe()","e5833087":"data.floors.value_counts()","fad343f3":"fig, ax = plt.subplots(1,2, figsize=(25, 6))\nsns.countplot(data.floors, ax=ax[0])\nsns.boxplot(x='floors', y='price', data=data[data.price <= 6000000], ax=ax[1])","2918e3da":"data.waterfront.describe()","eafb2bd9":"data.waterfront.value_counts()","d3f4f1b4":"sns.lmplot(x='sqft_living', y='price', hue='waterfront', data=data, fit_reg=False)","5ae38b2e":"fig, ax = plt.subplots(3,2, figsize=(25, 20))\nsns.boxplot(x='condition', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[0][0])\nsns.boxplot(x='bedrooms', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[0][1])\nsns.boxplot(x='bathrooms', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[1][0])\nsns.boxplot(x='floors', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[1][1])\nsns.boxplot(x='grade', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[2][0])\nsns.boxplot(x='view', y='price', hue='waterfront', data=data_sqft_lot, ax=ax[2][1])","8bd8f54f":"data.view.describe()","b07f06af":"data.view.value_counts()","33678c76":"print((data[data.view == 0]['view'].value_counts() * 100) \/ 21613)\nprint((data[data.view == 4]['view'].value_counts() * 100) \/ 21613)","299ae2c6":"sns.violinplot(x='view', y='price', data=data_sqft_lot)","fae8f0a7":"data.grade.describe()","b5b43b80":"fig, ax = plt.subplots(1,2, figsize=(25, 6))\nsns.countplot(data.grade, ax=ax[0])\nsns.violinplot(x='grade', y='price', data=data_sqft_lot, ax=ax[1])","fc096058":"f, ax = plt.subplots(figsize=(8,6))\n\nmatcorr = data.corr()\nn = 10\ncols = matcorr.nlargest(n, 'grade').index\ncm = np.corrcoef(data[cols].values.T)\nsns.heatmap(cm, annot=True, xticklabels=cols.values, yticklabels=cols.values)","f3fe1630":"var = 'yr_built'\ndata_to_plot = pd.concat([data['price'], data[var]], axis=1)\nf, ax = plt.subplots(figsize=(20,8))\nfig = sns.boxplot(x=var, y='price', data=data_to_plot[data_to_plot.price < 1500000])\nplt.xticks(rotation=90)","60e9c21a":"f, ax = plt.subplots(figsize=(20,8))\nsns.countplot(data.yr_built)\nax.set_title('Number of houses built in 1900-2015', fontsize=15)\nax.set_xlabel(\"Year\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\nax.set_xticklabels(data['yr_built'].sort_values().unique(), rotation=90,fontsize=10)","d379a443":"#data.yr_renovated.value_counts()","08e98847":"data.yr_renovated.unique()","a540dee5":"print((data[data.yr_renovated > 0]['yr_renovated'].value_counts().sum() * 100) \/ 21613)","06a61cc2":"sns.lmplot(x='sqft_living', y='price', hue='renovated', data=data, fit_reg=False)","4e592152":"sns.lmplot(x='log_sqft_living', y='log_price', hue='renovated', data=data, fit_reg=False)","1b3a52f4":"f, ax = plt.subplots(figsize=(20,8))\nsns.countplot(data[data.yr_renovated > 0]['yr_renovated'])\nax.set_title('Number of houses renovated in 1934-2015', fontsize=15)\nax.set_xlabel(\"Year\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\nax.set_xticklabels(data[data.yr_renovated > 0]['yr_renovated'].sort_values().unique(), rotation=90,fontsize=10)","ac011547":"data['lat'].describe() ","2e978e7a":"data['long'].describe() ","cdd0fe8b":"sns.jointplot(x='long', y='lat', data=data, kind='hex')","4eda72c4":"fig, ax = plt.subplots(figsize=(10, 10))\nsns.kdeplot(data['long'], data['lat'], shade=True, ax=ax)\nax.annotate('Seattle (District 4, 5, 6, 7)', xy=(-122.35, 47.68), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(20, 80), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Seattle (District 3)', xy=(-122.305, 47.61), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(140, -20), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Seattle (District 1, 2)', xy=(-122.38, 47.54), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(15,-100), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Lake Washington', xy=(-122.24, 47.63), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Kirkland', xy=(-122.2, 47.71), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Renton', xy=(-122.18, 47.49), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))\nax.annotate('Maple Valley', xy=(-122.04, 47.36), xycoords='data', fontsize=15,\n            bbox=dict(boxstyle='round', fc='none', ec='#0844a5'),\n            xytext=(120, 0), textcoords='offset points', ha='center', arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"#0844a5\"))","801c0fa3":"data.zipcode.describe()","4c8263e1":"data.zipcode.unique()","2f3b4e43":"fig, ax = plt.subplots(figsize=(25,10))\nsns.countplot(data.zipcode, ax=ax)\nax.set_title('Nmber of houses sold according zipcode', fontsize=20)\nax.set_xlabel(\"Zipcode\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\nax.set_xticklabels(data.zipcode.value_counts().sort_index().index, rotation=90, fontsize=15)","e3d95106":"data[data.zipcode.isin([98039, 98148])]['city'].unique()","f33d5f9d":"data[data.zipcode.isin([98103, 98038, 98115])]['city'].unique()","de228988":"#data.city.value_counts()","19e8d98e":"fig, ax = plt.subplots(figsize=(25,10))\nsns.countplot(data.city, ax=ax)\nax.set_title('Number of huses sold in cities', fontsize=20)\nax.set_xlabel(\"City\",fontsize=15)\nax.set_ylabel(\"Value\",fontsize=15)\nax.set_xticklabels(data.city.unique(), rotation=90, fontsize=15)","f2dcbea2":"palette = {\"MEDINA, WA\":\"#f7a431\",\"BELLEVUE, WA\":\"#159e09\",\"MERCER ISLAND, WA\":\"#43ff32\", \"SEATTLE, WA\":\"#006a91\", \"KIRKLAND, WA\":'#af0000',\n          \"SAMMAMISH, WA\":\"#ff5959\", \"WOODINVILLE, WA\":\"#f8fc0a\", \"REDMOND, WA\":'#49ceff', \"ISSAQUAH, WA\": \"#ff5b5b\", \n           \"FALL CITY, WA\": \"#38bc6d\"}\n\nfig, ax = plt.subplots(figsize=(25,10))\n\nmydata = data.groupby(['city', 'zipcode'])['price'].mean().sort_values(ascending=False).reset_index().head(30)\nsns.barplot(x='zipcode', y='price', data=mydata, hue='city', dodge=False, palette=palette, order=mydata['zipcode'], ax=ax)\nax.set_title('Price mean', fontsize=20)\nax.set_xlabel(\"Zipcode\",fontsize=15)\nax.set_ylabel(\"Price mean\",fontsize=15)\nax.set_xticklabels(mydata['zipcode'], rotation=90, fontsize=15)\nax.legend(prop={'size': 15})\n","77aebe45":"fig, ax = plt.subplots(figsize=(25,10))\n\nmydata = data.groupby(['city'])['price'].mean().sort_values(ascending=False).reset_index()\nsns.barplot(x='city', y='price', data=mydata, order=mydata['city'], ax=ax)\nax.set_title('Price mean', fontsize=20)\nax.set_xlabel(\"City\",fontsize=15)\nax.set_ylabel(\"Price mean\",fontsize=15)\nax.set_xticklabels(mydata['city'], rotation=90, fontsize=15)","6828f9c3":"sns.boxplot(x='view', y='price', hue='waterfront', data=data)","a91d7c3b":"fig=plt.figure(figsize=(19,12.5))\nax=fig.add_subplot(2,2,1, projection=\"3d\")\nax.scatter(data['floors'],data['bedrooms'],data['bathrooms'],c=\"darkred\",alpha=.5)\nax.set(xlabel='\\nFloors',ylabel='\\nRooms',zlabel='\\nBathrooms')\nax.set(ylim=[0,12])\n\nax=fig.add_subplot(2,2,2, projection=\"3d\")\nax.scatter(data['floors'],data['bedrooms'],data['sqft_living'],c=\"darkred\",alpha=.5)\nax.set(xlabel='\\nFloors',ylabel='\\nRooms',zlabel='\\nsqft_living')\nax.set(ylim=[0,12])\n\nax=fig.add_subplot(2,2,3, projection=\"3d\")\nax.scatter(data['sqft_living'],data['sqft_lot'],data['bathrooms'],c=\"darkblue\",alpha=.5)\nax.set(xlabel='\\nsqft_living',ylabel='\\nsqft_lot',zlabel='\\nBathrooms')\nax.set(ylim=[0,250000])\n\nax=fig.add_subplot(2,2,4, projection=\"3d\")\nax.scatter(data['sqft_living'],data['sqft_lot'],data['bedrooms'],c=\"darkblue\",alpha=.5)\nax.set(xlabel='\\nsqft_living',ylabel='\\nsqft_lot',zlabel='\\nRooms')\nax.set(ylim=[0,250000])","a9db67d3":"fig=plt.figure(figsize=(9.5,6.25))\nax=fig.add_subplot(1,1,1, projection=\"3d\")\nax.scatter(data['view'],data['grade'],data['yr_built'],c=\"purple\",alpha=.5)\nax.set(xlabel='\\nView',ylabel='\\nGrade',zlabel='\\nBuilt')","b645144b":"sns.jointplot(x='sqft_living', y='sqft_above', data=data[(data.sqft_living <= 5000)], kind='hex')","936be174":"#data.sqft_basement.value_counts()","61d810e2":"print((data[data.sqft_basement > 0]['sqft_basement'].value_counts().sum() * 100) \/ 21613)","fff67f8b":"sns.jointplot(x='sqft_living', y='sqft_basement', data=data[(data.sqft_basement > 0) & (data.sqft_living <= 5000)], kind='hex')","ba16104e":"sns.jointplot(x='sqft_living', y='sqft_living15', data=data[(data.sqft_living15 <= 5000) & (data.sqft_living <= 5000)], kind='hex')","fdf14968":"sns.jointplot(x='sqft_lot', y='sqft_lot15', data=data[(data.sqft_lot15 <= 15000) & (data.sqft_lot <= 15000)], kind='hex')","8b74d7a2":"data.to_csv('king_county.csv', index=False)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","3d601d20":"# 3D","ba572109":"# yr_renovated","76e1aab9":"# sqft_living","56c4c7e0":"# price","96a162b8":"# zipcode","86b26fde":"# grade","60651327":"# bedrooms","981c581c":"# sqft_lot","d4d8e3d0":"# waterfront","eafa18d5":"# date","6d13e2db":"# city","24adff1a":"# view == waterfront?","bb8ea622":"# Introduction\n\nThis kerenl is about to create some basic graphs and exploration of the house market in King County. Hope you find it helpfull. ","a21c2f7e":"We do! lokks like sqft_living15 and sqft_above are twin brothers of sqft_living. The same thing is with sqft_lot and sqft_lot15. I skip those features in my analysis as we don't need repeat ourselfs. ","6644644b":"# floors","b72fa04d":"# bathrooms","08a54c51":"# yr_built","5319b33b":"# Twin Brothers again (proof)","b97c4f34":"Look's like we have pretty small amout of houses sold in weekends. Let's check how it looks if we skip weekends.","a6a98071":"# view","11187be1":"# condition","a9b91627":"# adding some extra features","606c9abb":"# Twin Brothers\n\nOkay, first of all lets chack if have here twin brothers","e4e8f59c":"# lat & long"}}