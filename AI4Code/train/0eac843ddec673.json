{"cell_type":{"ac2a5f52":"code","6d6f9c5e":"code","d33dd545":"code","96494ba8":"code","93d0ef9a":"code","86581596":"code","25bb9e8e":"code","4086a03b":"code","02c162ad":"code","31c53729":"code","16be3411":"code","98980c44":"code","e8b8200a":"code","e1c10850":"code","6a625816":"code","47579233":"code","ea5a7676":"code","9abaafe2":"code","b95e988c":"code","005d36cb":"code","a40a7e2c":"code","ae950822":"code","f92f61a3":"code","5fbc3dbf":"code","60cd5e34":"code","555ccf73":"code","abbc9d05":"code","3ce2f340":"code","c982c061":"markdown","fb2505cc":"markdown","b1f73341":"markdown","fe57342c":"markdown","0f2b6c70":"markdown","8abbd7fe":"markdown","ea7ce074":"markdown","c840ab31":"markdown","90940e17":"markdown","8f10dad1":"markdown","638e2ae5":"markdown","904ff883":"markdown","170b868c":"markdown","9a07151a":"markdown","8c759b17":"markdown","21d679f3":"markdown","209c625a":"markdown","6ee71316":"markdown","3aacfa58":"markdown","d986a719":"markdown","4bce5bf8":"markdown","9b30930d":"markdown","6ecf2aee":"markdown","365bd6b4":"markdown","32fb43b5":"markdown","aee8444e":"markdown","0d075afa":"markdown","3d2d6372":"markdown","58ebc9ad":"markdown","b72eae88":"markdown","7f559e82":"markdown","f2e6f4fb":"markdown"},"source":{"ac2a5f52":"import math\nimport wavio\nimport random\nimport statistics\n\nfrom PIL import Image\nfrom collections import Counter\nfrom IPython.display import Audio\nfrom urllib.request import urlopen\n\nimport librosa\nimport librosa.display as display\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\n%matplotlib inline","6d6f9c5e":"b_list = np.linspace(1, 10, 901)\nx0 = 0.4\nN  = 150\nNN = 200 + N\n\ndef phocid(b):\n    x = x0\n    x_list = [x0]  \n    for i in range(NN-1):       \n        if (x >= 0.5):\n            x = x ** b\n        if (x <  0.5):\n            x = x ** (1.- (b\/10))        \n        x_list.append(x)       \n    return x_list[200:]\n\nx_select = []\nb_select = []\nfor b in b_list:\n    x_select.append(phocid(b))\n    b_select.append([b] * 150) \n    \nx_select = np.array(x_select).ravel()\nb_select = np.array(b_select).ravel()\n    \nplt.style.use('seaborn-whitegrid')\nplt.figure(figsize=(18, 10), facecolor='lightgray')\nplt.xlabel('The value of b')\nplt.ylabel('The value of x')\nplt.title(f'\\nDiagram of the results of the Phocid equation\\n\\n1 < b < 10  |  x0={x0}\\n')\nplt.scatter(b_select, x_select, color='red', s=0.1)\nplt.savefig('A_phocid_diagram.png')\nplt.show()\n\nprint(f'\\nMin_Value: {x_select.min()}\\nMax_Value: {x_select.max()}')\nprint(30 * ':')","d33dd545":"b_list = np.linspace(1, 10, 901)\nx0 = 0.4\nN  = 150\nSR = 32*N\n\ndef phocid_sound(b):    \n    x = x0\n    x_list = [x0]  \n    NN = SR + 200\n    \n    for i in range(NN-1):         \n        if (x >= 0.5):\n            x = x ** b\n        if (x < 0.5):\n            x = x ** (b\/10.)        \n        x_list.append(x) \n        \n    x_select = np.array(x_list[200:])    \n    return x_select \n\ny_list = []\nfor b in b_list:   \n    y = phocid_sound(b) \n    y_list.append(y)\n    \ny_select = np.array(y_list).ravel() \n\nY   = librosa.stft(y_select)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(18, 10))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nplt.savefig('A_phocid_spectrogram.png') \nwavio.write('A_phocid_sound.wav', y_select, rate=SR, sampwidth=3)\n\nAudio(y_select, rate=SR) ","96494ba8":"b_list = np.linspace(1, 9, 801)\nx0 = 0.4\nN  = 150\nNN = 200 + N\n\ndef phocid_plus(b):\n    b1 = b\n    b2 = 10. - b    \n    \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    \n    for i in range(NN-1):       \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)        \n        \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp)   \n        \n    return x_list_p[200:]\n\nx_select = []\nb_select = []\nfor b in b_list:\n    x_select.append(phocid_plus(b))\n    b_select.append([b] * 150) \n    \nx_select = np.array(x_select).ravel()\nb_select = np.array(b_select).ravel()\n    \nplt.style.use('seaborn-whitegrid')\nplt.figure(figsize=(18, 10), facecolor='lightgray')\nplt.xlabel('The value of b')\nplt.ylabel('The value of x')\nplt.title(f'\\nDiagram of the results of the Phocid Plus\\n\\n1 < b < 9  |  x0={x0}\\n')\nplt.scatter(b_select, x_select, color='red', s=0.2)\nplt.savefig('B_plus_diagram.png')\nplt.show()\n\nprint(f'\\nMin_Value: {x_select.min()}\\nMax_Value: {x_select.max()}')\nprint(30 * ':')","93d0ef9a":"b_list = np.linspace(1, 9, 801)\nx0 = 0.4\nN  = 150\nSR = 32*N\n\ndef phocid_sound_plus(b):     \n    b1 = b\n    b2 = 10. - b\n     \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    NN = SR + 200\n    \n    for i in range(NN-1):   \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)        \n        \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp)   \n        \n    x_select_p = np.array(x_list_p[200:]) \n    return x_select_p\n\ny_list = []\nfor b in b_list:   \n    y = phocid_sound_plus(b) \n    y_list.append(y)\n    \ny_select = np.array(y_list).ravel() \n\nY   = librosa.stft(y_select)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(18, 10))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nplt.savefig('B_plus_spectrogram.png') \nwavio.write('B_plus_sound.wav', y_select, rate=SR, sampwidth=3)\n\nAudio(y_select, rate=SR) ","86581596":"x0 = 0.4\nN  = 150\nSR = 256*N","25bb9e8e":"def phocid(b):    \n    x = x0\n    x_list = [x0]   \n    for i in range(N-1):         \n        if (x >= 0.5):\n            x = x ** b\n        if (x < 0.5):\n            x = x ** (b\/10.)        \n        x_list.append(x)\n        \n    plt.style.use('seaborn-whitegrid')\n    plt.figure(figsize=(18, 6), facecolor='lightgray')\n    plt.xlabel('The number of iterations')\n    plt.ylabel('The value of x')\n    plt.title(f'\\nPhocid Equation\\n\\nb={b}  |  x0={x0}\\n')\n    plt.plot(x_list, 'o:r')\n    plt.show()\n        \n    print(f'\\nb={b}')\n    print(35 * ':')\n    print(f'Min_Value: {min(x_list)}\\nMax_Value: {max(x_list)}')\n    print(35 * ':')  ","4086a03b":"def phocid_sound(b):    \n    x = x0\n    x_list = [x0]  \n    NN = SR + 200\n    \n    for i in range(NN-1):         \n        if (x >= 0.5):\n            x = x ** b\n        if (x < 0.5):\n            x = x ** (b\/10.)        \n        x_list.append(x) \n        \n    x_select = np.array(x_list[200:])    \n    return x_select ","02c162ad":"def phocid_plus(b): \n    b1 = b\n    b2 = 10. - b\n    \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    \n    for i in range(N-1): \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)   \n                        \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp) \n\n    plt.style.use('seaborn-whitegrid')\n    plt.figure(figsize=(18, 6), facecolor='lightgray')\n    plt.xlabel('The number of iterations')\n    plt.ylabel('The value of x')\n    plt.title(f'\\nPhocid Plus\\n\\nb={b}  |  x0={x0}\\n')\n    plt.plot(x_list_p, 'o:r')\n    plt.show()\n        \n    print(f'\\nb={b}')\n    print(35 * ':')\n    print(f'Min_Value: {min(x_list_p)}\\nMax_Value: {max(x_list_p)}')\n    print(35 * ':')  ","31c53729":"def phocid_sound_plus(b): \n    b1 = b\n    b2 = 10. - b\n     \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    NN = SR + 200\n       \n    for i in range(NN-1):\n        \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)   \n            \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp)              \n        \n    x_select_p = np.array(x_list_p[200:])   \n    return x_select_p ","16be3411":"b = 1.2\nphocid(b)","98980c44":"y = phocid_sound(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","e8b8200a":"b = 8.8\nphocid(b)","e1c10850":"y = phocid_sound(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","6a625816":"b = 1.2\nphocid_plus(b)","47579233":"y = phocid_sound_plus(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","ea5a7676":"b = 8.8\nphocid_plus(b)","9abaafe2":"y = phocid_sound_plus(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","b95e988c":"b = 4.2\nphocid(b)","005d36cb":"y = phocid_sound(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","a40a7e2c":"b = 5.8\nphocid(b)","ae950822":"y = phocid_sound(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","f92f61a3":"b = 4.2\nphocid_plus(b)","5fbc3dbf":"y = phocid_sound_plus(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","60cd5e34":"b = 5.8\nphocid_plus(b)","555ccf73":"y = phocid_sound_plus(b)\n\nY   = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(10, 4))\nlibrosa.display.specshow(Ydb, sr=SR, x_axis='time', y_axis='hz')\n\nAudio(y, rate=SR)","abbc9d05":"b_list = np.linspace(1, 9, 81)\ncounter = 1010\nx0 = 0.4\nN  = 150\n\ndef phocid_plus(b): \n    b1 = b\n    b2 = 10. - b\n    \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    \n    for i in range(N-1): \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)   \n                        \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp) \n    \n    plt.style.use('seaborn-whitegrid')\n    plt.figure(figsize=(18, 6), facecolor='lightgray')\n    plt.xlabel('The number of iterations')\n    plt.ylabel('The value of x')\n    plt.title(f'\\nPhocid Plus\\n\\nb={b}  |  x0={x0}\\n')\n    plt.plot(x_list_p, 'o:r')\n    plt.show()\n   \n    if (counter != 0):\n        plt.savefig(f'diagram_plus_{counter}.png') \n        \n    print(f'\\nNo.{counter}\\t  b={b}')\n    print(35 * ':')\n    print(f'Min_Value: {min(x_list_p)}\\nMax_Value: {max(x_list_p)}')\n    print(35 * ':')      \n     \nfor b in b_list:   \n    phocid_plus(b) \n    counter += 1","3ce2f340":"b_list = np.linspace(1, 9, 81)\ncounter = 1010\nx0 = 0.4\nN  = 150\nSR = 256*N\n\ndef phocid_sound_plus(b): \n    b1 = b\n    b2 = 10. - b\n     \n    x1 = x0\n    x2 = x0\n    \n    xp = x0\n    x_list_p = [x0]\n    NN = SR + 200\n       \n    for i in range(NN-1):\n        \n        if (x1 >= 0.5):\n            x1 = x1 ** b1\n        if (x1 < 0.5):\n            x1 = x1 ** (b1\/10.)        \n\n        if (x2 >= 0.5):\n            x2 = x2 ** b2\n        if (x2 < 0.5):\n            x2 = x2 ** (b2\/10.)   \n            \n        xp = ((x1 * 3) + x2) \/ 4\n        x_list_p.append(xp)              \n        \n    x_select_p = np.array(x_list_p[200:])   \n    return x_select_p \n\nfor b in b_list:   \n    y = phocid_sound_plus(b) \n    wavio.write(f'sound_plus_{counter}.wav', y, rate=SR, sampwidth=3)\n    counter += 1   ","c982c061":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">Phocid Plus<\/h1>\n    <h3 align=\"center\">Create and save 81 sounds for 81 numbers between 1 and 9.<\/h3>\n<\/div>","fb2505cc":"<div class=\"alert alert-success\">  \n<\/div>","b1f73341":"# Why the name \"Phocid\"?\n\nThe results of this equation produce a seal-like shape. That's why we called it the  \"Phocid Equation\".\n\n<img src=\"https:\/\/raw.githubusercontent.com\/MehranKazeminia\/Sound-of-Numbers\/main\/phocid105.png\">","fe57342c":"# 81 sounds for 81 numbers","0f2b6c70":"<div class=\"alert alert-success\">  \n<\/div>","8abbd7fe":"## phocid (b=4.2)","ea7ce074":"<div class=\"alert alert-success\">\n    <h3 align=\"center\">The sound of the \"Phocid Equation\"<\/h3>\n    <h3 align=\"center\">Create sound for 901 numbers in a row<\/h3>\n<\/div>","c840ab31":"## phocid_plus (b=8.8)","90940e17":"<div class=\"alert alert-success\">  \n<\/div>","8f10dad1":"# 81 diagrams for 81 numbers","638e2ae5":"## phocid_plus (b=1.2)","904ff883":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">Phocid Plus<\/h1>\n    <h3 align=\"center\">Draw and save 81 diagrams for 81 numbers between 1 and 9.<\/h3>\n<\/div>","170b868c":"## phocid_plus (b=4.2)","9a07151a":"## <span style=\"color:darkgray;\">Define the Phocid Equation<\/span>\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n\\begin{align*}\n\\\\{if (x>=0.5) :}\\\n\\\\x_{t+1}&= {x_t}^b\n\\end{align*}\n\n\\begin{align*}\n\\\\{if (x<0.5) :}\\\n\\\\x_{t+1}&= {x_t}^{1-(b\/10)}\n\\end{align*}\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n## <span style=\"color:darkgray;\">For Example: b=7.0<\/span>\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n\\begin{align*}\n\\\\{if (x>=0.5) :}\\\n\\\\x_{t+1}&= {x_t}^{7.0}\n\\end{align*}\n\n\\begin{align*}\n\\\\{if (x<0.5) :}\\\n\\\\x_{t+1}&= {x_t}^{0.3}\n\\end{align*}\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n### Our favorite ranges for x0 and b are as follows:\n\n1 -The value of **b** is between **One** and **Ten**.\n\n2 -The value of **x0** is between **Zero** and **One**.\n\n3 -The results for the **\"New x\"** will still be between **Zero** and **One**. \n\n4 -So the next repetitions can continue. (Iterated Function System - **IFS**)\n","8c759b17":"<div class=\"alert alert-success\">\n    <h3 align=\"center\">The sound of the \"Phocid Plus\"<\/h3>\n    <h3 align=\"center\">Create sound for 801 numbers in a row<\/h3>\n<\/div>","21d679f3":"<div class=\"alert alert-success\">  \n<\/div>","209c625a":"<div class=\"alert alert-success\">\n    <h3 align=\"center\">Diagram of \"Phocid Plus\" results for each value of \"b\" between 1 and 9.<\/h3>\n    <h3 align=\"center\">Total for 801 values of \"b\"<\/h3>\n<\/div>","6ee71316":"## phocid (b=8.8)","3aacfa58":"## <span style=\"color:darkgray;\">Define the Phocid Plus<\/span>\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n\\begin{align*}\n\\\\{phocidPlus(x)} = {3\/4}{phocid(x)} + {1\/4}{phocid(10-x)}\\\n\\end{align*}\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n## <span style=\"color:darkgray;\">For Example: b=7.5<\/span>\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n\\begin{align*}\n\\\\{phocidPlus(7.5)} = {3\/4}{phocid(7.5)} + {1\/4}{phocid(2.5)}\\\n\\end{align*}\n\n\\begin{align*}\n\\\\{::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::}\n\\end{align*}\n\n### Our favorite ranges for x0 and b are as follows:\n\n1 -The value of **b** is between **One** and **Nine**.\n\n2 -The value of **x0** is between **Zero** and **One**.\n\n3 -The results for the **\"New x\"** will still be between **Zero** and **One**. \n\n4 -So the next repetitions can continue. (Iterated Function System - **IFS**)","d986a719":"<div class=\"alert alert-success\">  \n<\/div>","4bce5bf8":"## phocid (b=5.8)","9b30930d":"## phocid (b=1.2)","6ecf2aee":"The main use of numbers for counting and ... is quite clear. But if we can create a definite and unique sound with just one number, we can call that particular sound the sound of that number. Of course, to create a specific sound wave, a set of numbers is needed and one number is not enough. But in this notebook, we try to use coding to generate a sound generator so that it can produce a unique sound wave with just one number.\n\nWe can also define different operators for sound composition. This allows us to have better and more complex sound waves. For example, in this notebook, we used an operator to combine sounds.\n\nThis notebook is not just for fun. This means that it may have a use. Because the functions used and the sound generator can be easily developed and the necessary standards for universal use can be set. And finally, he used it in a kind of computer game or, for example, for a kind of pseudo-cryptographic communication. ","365bd6b4":"<div class=\"alert alert-success\">  \n<\/div>","32fb43b5":"# What is \"Phocid Plus\" and what does it do?\n\nFor each number, this operator combines the main results of the \"Phocid Equation\" with part of the results of a complementary number. The result is a more complex and better sound wave, and the end result is still unique.\n\n<img src=\"https:\/\/raw.githubusercontent.com\/MehranKazeminia\/Sound-of-Numbers\/main\/phocid106.png\">\n","aee8444e":"<div class=\"alert alert-success\">\n    <h3 align=\"center\">Diagram of \"Phocid Equation\" results for each value of \"b\" between 1 and 10.<\/h3>\n    <h3 align=\"center\">Total for 901 values of \"b\"<\/h3>\n<\/div>","0d075afa":"<div>\n    <h1 align=\"center\">The Sound of Numbers<\/h1>\n    <img src=\"https:\/\/raw.githubusercontent.com\/MehranKazeminia\/Sound-of-Numbers\/main\/phocid106.png\">\n    <h1 align=\"center\">& Phocid Equation<\/h1>   \n    <h4 align=\"center\">By: Somayyeh Gholami & Mehran Kazeminia<\/h4>\n<\/div>","3d2d6372":"## Functions:","58ebc9ad":"<div class=\"alert alert-success\">  \n<\/div>","b72eae88":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">Examples<\/h1>\n<\/div>","7f559e82":"<div class=\"alert alert-success\">  \n<\/div>","f2e6f4fb":"## phocid_plus (b=5.8)"}}