{"cell_type":{"9754f34b":"code","f61d843e":"code","902d2640":"code","a4883dcb":"code","83277408":"code","bf2be1ec":"code","e7044599":"code","e894781b":"code","1b6476eb":"code","3aa21135":"code","f3b2e425":"code","cce378f3":"code","b541cae4":"code","e8e96cde":"code","65ac0335":"code","3cc8f1a6":"code","8a203fb0":"code","e4d04745":"code","562420cd":"code","7bdca9ce":"markdown","bda12334":"markdown","f8f53357":"markdown","6a195af2":"markdown","5919099e":"markdown","40dc80c8":"markdown","5bfd1724":"markdown","508daa55":"markdown","b13ad42b":"markdown","dcaff3a5":"markdown","ccb04139":"markdown","8e6cdf4b":"markdown","8c6c00db":"markdown","e56b6a7c":"markdown","98f88c54":"markdown","204d1458":"markdown","2df1190f":"markdown","6af0550c":"markdown","5b6d9cb4":"markdown","53ee7d86":"markdown","61e8e644":"markdown","b656ddef":"markdown"},"source":{"9754f34b":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.indexing_selecting_assigning import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","f61d843e":"check_q1(pd.DataFrame())","902d2640":"check_q1(reviews.description)\n#reviews['description'],also right","a4883dcb":"check_q2(reviews['description'][0])\n\n#also right,reviews.description[0]","83277408":"check_q3(reviews.iloc[0])","bf2be1ec":"check_q4(reviews.iloc[0:10,1])","e7044599":"print(answer_q4())","e894781b":"check_q5(reviews.iloc[[1,2,3,5,8]])","1b6476eb":"check_q6(reviews.iloc[[0,1,10,100],[0,5,6,7]])\n#reviews.iloc[[0,1,10,100],[0,5,6,7]]\n#reviews.iloc[[0,1,10,100],[\"country\",\"province\",\"region_1\",\"region_2\"]] is error ","3aa21135":"check_q7(reviews.loc[0:99,['country','variety']])\n#check_q7(reviews.loc(0:99,['country','variety']))","f3b2e425":"print(answer_q7())","cce378f3":"check_q8(reviews.loc[reviews[\"country\"] == 'Italy'])\n#check_q8(reviews.loc[:,reviews.loc['country']=='Italy'])#error syntax\n#reviews.loc[:,reviews.loc[1] != 0]","b541cae4":"print(answer_q8())","e8e96cde":"check_q9(reviews.loc[reviews['region_2'].notnull()])\n# print(answer_q9())","65ac0335":"check_q10(reviews['points'])\n# print(answer_q10())","3cc8f1a6":"check_q11(reviews.points[:999])#also is right\n# type(reviews.loc[:999,'points'])\n# check_q11(reviews.loc[:999,['points']]) #is wrong\n# check_q11(reviews.loc[:999,['points']])\n\n# print(answer_q11())","8a203fb0":"check_q12(reviews.loc[128971:129971,'points'])#is also right\n# (reviews.loc[-1:,'points'])#is wrong\n# reviews.shape\n# check_q12(reviews.points[-1000:-1])#is right\n# print(answer_q12())\n# (reviews.iloc[-1000:,3]).shape#is right","e4d04745":"# check_q13(reviews.iloc[reviews['country']=='Italy','points'])#is wrong\n# check_q13(reviews.loc[reviews['country'] == 'Italy','points'])#is right\ncheck_q13(reviews[reviews.country == 'Italy'].points)# is also right\n\n# print(answer_q13())","562420cd":"# check_q14(reviews.loc[reviews.points >= 90,reviews.country == 'Italy'or'France'])#wrong\n# print(answer_q14())\n# reviews[reviews.country.isin(['Italy','France'])&(reviews.points >=90)].country#is also right\ncheck_q14(reviews.loc[reviews.country.isin(['Italy','France'])&(reviews.points>=90),'country'])#is also right","7bdca9ce":"**Exercise 7**: Select the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the [reference](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning-reference) for this tutorial section:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. So `0:10` will select entries `0,...,9`. `loc`, meanwhile, indexes inclusively. So `0:10` will select entries `0,...,10`.\n\n> [...]\n\n> ...[consider] when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 999 entries, while `df.loc[0:1000]` return 1000 of them! To get 1000 elements using `iloc`, you will need to go one higher and ask for `df.iloc[0:1001]`.","bda12334":"**Exercise 1**: Select the `description` column from `reviews`.","f8f53357":"**Exercise 8**: Select wines made in `Italy`. Hint: `reviews.country` equals what?","6a195af2":"Look at an overview of your data by running the following line","5919099e":"**Exercise 4**: Select the first 10 values from the `description` column in `reviews`. Hint: format your output as a `pandas` `Series`.","40dc80c8":"**Exercise 6**: Select the `country`, `province`, `region_1`, and `region_2` columns of the records with the `0`, `1`, `10`, and `100` index positions. In other words, generate the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","5bfd1724":"**Exercise 11**: <!--What is the distribution of reviews scores for the first 1000 wines in the dataset?--> Select the `points` column for the first 1000 wines.","508daa55":"**Exercise 5**: Select the records with the `1`, `2`, `3`, `5`, and `8` row index positions. In other words, generate the following`DataFrame`:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","b13ad42b":"# Set Up\nRun the following cell to load your data and some utility functions","dcaff3a5":"## Keep going\n\nMove on to the [**Summary functions and maps workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/599524).","ccb04139":"# Introduction\n\nMost projects requiring selecting specific values from a `DataFrame` or `Series`. You will work on that skill here using the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). \n\n# Relevant Resources\n* **[Quickstart to indexing and selecting data](https:\/\/www.kaggle.com\/residentmario\/indexing-and-selecting-data\/)** \n* [Indexing and Selecting Data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/indexing.html) section of pandas documentation\n* [Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n\n","8e6cdf4b":"**Exercise 9**: Select wines whose `region_2` is not `NaN`.","8c6c00db":"**Exercise 2**: Select the first value from the description column of `reviews`.","e56b6a7c":"For the first set of questions, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nFor the second set of questions, using this function to check a correct answer will present you will an informative graph!\n\nIf you get stuck, use `answer_qN` function to print the answer outright.","98f88c54":"**Exercise 10**: <!--What is the distribution of wine ratings assigned by Wine Magazine?--> Select the `points` column.","204d1458":"**Exercise 3**: Select the first row of data (the first record) from `reviews`. Hint: from this exercise onwards I strongly recommend using `loc` or `iloc`.","2df1190f":"**Exercise 12**: <!--What is the distribution of reviews scores for the last 1000 wines in the dataset?--> Select the `points` column for the last 1000 wines.","6af0550c":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","5b6d9cb4":"# Exercises","53ee7d86":"**Exercise 13**: <!--What is the distribution of reviews scores for wines made in Italy?--> Select the `points` column, but only for wines made in Italy.","61e8e644":"The remaining exercises are visual.","b656ddef":"**Exercise 14**: Who produces more above-averagely good wines, France or Italy? Select the `country` column, but only  when said `country` is one of those two options, _and_ the `points` column is greater than or equal to 90.\n\nYour output should look roughly like this:\n```\n119       France\n120        Italy\n           ...  \n129969    France\n129970    France\nName: country, Length: 15840, dtype: object\n```"}}