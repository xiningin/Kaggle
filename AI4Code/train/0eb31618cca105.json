{"cell_type":{"3825ebb4":"code","a04b574f":"code","11eeacdc":"code","3585b4d5":"code","7733d99d":"code","7dfcaa38":"code","4cea3d0c":"code","73207097":"code","dd6468c7":"code","da9bde68":"code","862740b3":"markdown"},"source":{"3825ebb4":"from sklearn.model_selection import train_test_split\nfrom tensorflow.keras.datasets import mnist \nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, AveragePooling2D, Flatten, Dropout, Dense, GlobalAveragePooling2D, concatenate\nfrom tensorflow.keras.utils import plot_model, to_categorical\nfrom tensorflow.keras.initializers import glorot_uniform, Constant","a04b574f":"(x_train, y_train), (x_test, y_test) = mnist.load_data()\ny_train = to_categorical(y_train)\ny_test = to_categorical(y_test)\n","11eeacdc":"def inception_module(layer_input, filter1, filter2_in, filter2_out, filter3_in, filter3_out, filter4_out):\n    C1 = Conv2D(filter1, (1,1), padding = 'same', activation = 'relu')(layer_input)\n    C3 = Conv2D(filter2_in, (1,1), padding = 'same', activation = 'relu')(layer_input)\n    C3 = Conv2D(filter2_out, (1,1), padding = 'same', activation = 'relu')(C3)\n    C5 = Conv2D(filter3_in, (1,1), padding = 'same', activation = 'relu')(layer_input)\n    C5 = Conv2D(filter3_out, (1,1), padding = 'same', activation = 'relu')(C5)\n    pool = MaxPooling2D((3,3), strides = (1,1), padding = 'same')(layer_input)\n    pool = Conv2D(filter4_out, (1,1), padding = 'same', activation = 'relu')(pool)\n    layer_output = concatenate([C1, C3, C5, pool], axis = -1)\n    return layer_output","3585b4d5":"\nkernel_init = glorot_uniform()\nbias_init = Constant(value=0.2)","7733d99d":"Input_layer = Input(shape = (28, 28, 1))\nInception_layer1 = inception_module(Input_layer, 32, 64, 96, 32, 46, 32)\nInception_layer2 = inception_module(Inception_layer1, 96, 96, 192, 48, 96, 64)\nmodel = Model ( inputs = Input_layer, outputs = Inception_layer2)\nmodel.summary()\nplot_model(model, show_shapes=True, to_file='model_architecture.png')","7dfcaa38":"def inception_module(x, filter1, filter2_in, filter2_out, filter3_in, filter3_out, filter4_out):\n    C_11 = Conv2D(filter1, (1,1), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(x)\n    C_33 = Conv2D(filter2_in, (1,1), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer =bias_init)(x)\n    C_33 = Conv2D(filter2_out, (3,3), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(C_33)\n    C_55 = Conv2D(filter2_out, (1,1), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(C_33)\n    C_55 = Conv2D(filter2_out, (5,5), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(C_55)\n    pool = MaxPooling2D((3,3), strides = (1,1), padding = 'same')(x)\n    pool = Conv2D(filter4_out, (1,1), padding = 'same', activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(pool)\n    output = concatenate ([C_11, C_33, C_55, pool], axis = 3)\n    return output","4cea3d0c":"Input_layer = Input(shape = (28, 28, 1))\n\nL = Conv2D(32, (7,7), padding = 'same', strides=(2,2), activation = 'relu', kernel_initializer = kernel_init, bias_initializer = bias_init)(Input_layer)\nL = MaxPooling2D((3,3), padding = 'same', strides = (2,2))(L)\nL = Conv2D(64, (1,1), padding = 'same', strides=(1,1), activation = 'relu')(L)\nL = Conv2D(192, (3,3), padding = 'same', strides=(1,1), activation = 'relu')(L)\nL = MaxPooling2D((3,3), padding = 'same', strides = (2,2))(L)\n\nL = inception_module(L, filter1=64, filter2_in=96, filter2_out=128, filter3_in=16, filter3_out=32, filter4_out=32)\n\nL = inception_module(L, filter1=128, filter2_in=128, filter2_out=192, filter3_in=32, filter3_out=96, filter4_out=64)\n\nL = MaxPooling2D((3,3), padding = 'same', strides = (2,2))(L)\n\nL = inception_module(L, filter1=192, filter2_in=96, filter2_out=208, filter3_in=16, filter3_out=48, filter4_out=64)","73207097":"O1 = AveragePooling2D((2,2), strides = 3)(L)\nO1 = Conv2D(128, (1,1), padding = 'same', activation = 'relu')(O1)\nO1 = Flatten()(O1)\nO1 = Dense (1024, activation='relu')(O1)\nO1 = Dropout(0.7)(O1)\nsoftmaxO = Dense(10, activation = 'softmax')(O1)\n\nL = inception_module(L, filter1=160, filter2_in=112, filter2_out=224, filter3_in=24, filter3_out=64, filter4_out=64)\n\nL = inception_module(L, filter1=128, filter2_in=128, filter2_out=256, filter3_in=24, filter3_out=64, filter4_out=64)\n\nL = inception_module(L, filter1=112, filter2_in=144, filter2_out=288, filter3_in=32, filter3_out=64, filter4_out=64)","dd6468c7":"O2 = AveragePooling2D((2,2), strides = 3)(L)\nO2 = Conv2D(128, (1,1), padding = 'same', activation = 'relu')(O2)\nO2 = Flatten()(O2)\nO2 = Dense (1024, activation='relu')(O2)\nO2 = Dropout(0.7)(O2)\nsoftmax1 = Dense(10, activation = 'softmax')(O2)\n\nL = inception_module(L, filter1=256, filter2_in=160, filter2_out=320, filter3_in=32, filter3_out=128, filter4_out=128)\nL = MaxPooling2D((3,3), padding = 'same', strides = (2,2))(L)\n\nL = inception_module(L, filter1=256, filter2_in=160, filter2_out=320, filter3_in=32, filter3_out=128, filter4_out=128)\n\nL = inception_module(L, filter1=384, filter2_in=192, filter2_out=384, filter3_in=48, filter3_out=128, filter4_out=128)\n\nL = GlobalAveragePooling2D()(L)\nL = Dropout(0.4)(L)\nsoftmax2 = Dense(10, activation='softmax')(L)","da9bde68":"model = Model(Input_layer, [softmax2, softmax1, softmaxO])\nmodel.compile(loss=['categorical_crossentropy', 'categorical_crossentropy', 'categorical_crossentropy'], loss_weights=[1, 0.3, 0.3], optimizer='adam', metrics=['accuracy'])\nmodel.fit(x_train, [y_train, y_train, y_train], validation_data= (x_test, [y_test, y_test, y_test]), epochs=3, batch_size=120)","862740b3":"Load Dataset"}}