{"cell_type":{"1d4db3d5":"code","43375a8e":"code","910332ec":"code","d89d7d2a":"code","5c8b95ee":"code","cacb43a5":"code","a79f00da":"code","9566b320":"code","4913a5b0":"code","0d00ef66":"code","cb02324b":"code","6c417e88":"code","401f0989":"code","5f5b0720":"code","d81a8aa0":"code","5987427c":"code","d853318b":"code","ee4c7503":"code","0b30e827":"code","037ac74b":"code","08b1c438":"code","2699cc06":"code","cdc7712a":"code","98411a2b":"code","06456b19":"code","2600a055":"code","4cb19d85":"code","51414afc":"code","dccf749e":"code","5edcf820":"code","54d50ff4":"code","900e4fac":"code","2c185df1":"code","f577a05c":"markdown","d7728c79":"markdown","f6940756":"markdown","ffa2b557":"markdown","02e5184b":"markdown","e3b614c4":"markdown","373035cb":"markdown","ec11378d":"markdown","77aa8e90":"markdown","87c58d41":"markdown","2f3c7c0c":"markdown","032f2755":"markdown","ead73d4e":"markdown","0283b15e":"markdown"},"source":{"1d4db3d5":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nfrom plotly import tools\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\n\nimport missingno as msno\npd.set_option('display.max_columns', None)\npd.options.display.max_colwidth = 100","43375a8e":"rdata = pd.read_csv(\"..\/input\/grallrounds\/rounds.csv\", parse_dates=['start_date']).sort_values('start_date').reset_index(drop=True)\nrdata = rdata[(rdata.round_num > 2)|(rdata.index<3)].reset_index(drop=True)\n\ndef text(row):\n    if (row[0]=='g')&((row[2]=='1')):\n        return row[5:]\n    elif (row[0]=='g'):\n        return row[4:]\n    else:\n        return row\n    \nrdata['slug'] = rdata.sub_round_slug.apply(text)","910332ec":"plt.figure(figsize=(26,15))\nsns.countplot(rdata.slug, data = rdata, order = rdata.slug.value_counts().index, palette='cool', orient='v')\nplt.title('Count of Rounds')\n\nplt.savefig('Count of Rounds.png', format='png')","d89d7d2a":"trace1 = go.Scatter(\n                    x = rdata[rdata.slug=='nft'].round_num,\n                    y = rdata[rdata.slug=='nft'].total_pot,\n                    mode = \"lines+markers\",\n                    name = \"nft\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= rdata[rdata.slug=='nft'].id)\n\ntrace2 = go.Scatter(\n                    x = rdata[rdata.slug=='infra'].round_num,\n                    y = rdata[rdata.slug=='infra'].total_pot,\n                    mode = \"lines+markers\",\n                    name = \"infra\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= rdata[rdata.slug=='infra'].id)\n\ntrace3 = go.Scatter(\n                    x = rdata[rdata.slug=='community'].round_num,\n                    y = rdata[rdata.slug=='community'].total_pot,\n                    mode = \"lines+markers\",\n                    name = \"community\",\n                    marker = dict(color = 'rgba(160, 26, 30, 0.8)'),\n                    text= rdata[rdata.slug=='community'].id)\n\ntrace4 = go.Scatter(\n                    x = rdata[rdata.slug=='dapp'].round_num,\n                    y = rdata[rdata.slug=='dapp'].total_pot,\n                    mode = \"lines+markers\",\n                    name = \"dapp\",\n                    marker = dict(color = 'rgba(160, 160, 30, 0.8)'),\n                    text= rdata[rdata.slug=='community'].id)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = dict(title = 'Most common categories of Gitcoin Rounds Matching Pools',\n              xaxis= dict(title = 'Round', ticklen = 5, zeroline = False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","5c8b95ee":"rdata_sum = rdata.groupby('round_num').agg({\"total_pot\": [np.sum, np.count_nonzero]})\n\n\ny_saving = rdata_sum[('total_pot','sum')]\ny_net_worth  = rdata_sum[('total_pot','count_nonzero')]\nx_saving = rdata_sum.index\nx_net_worth  = rdata_sum.index\n\ntrace0 = go.Bar(\n                x=y_saving,\n                y=x_saving,\n                marker=dict(color='rgba(171, 50, 96, 0.6)',line=dict(color='rgba(171, 50, 96, 1.0)',width=1)),\n                name='Matching Pot',\n                orientation='h',\n)\ntrace1 = go.Scatter(\n                x=y_net_worth,\n                y=x_net_worth,\n                mode='lines+markers',\n                line=dict(color='rgb(63, 72, 204)'),\n                name='Number of Separate Pools',\n)\nlayout = dict(\n                title='Matching Pot and Number of Separate Pools',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(248, 248, 255)',\n                plot_bgcolor='rgb(248, 248, 255)',\n)\nannotations = []\ny_s = np.round(y_saving, decimals=2)\ny_nw = np.rint(y_net_worth)\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x_saving):\n    # labeling the scatter savings\n    annotations.append(dict(xref='x2', yref='y2', y=xd, x=ydn - 4,text='{:,}'.format(ydn),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=yd + 3,text=str(yd),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\n\nlayout['annotations'] = annotations\n\n# Creating two subplots\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","cacb43a5":"\"\"\"\nrdata[rdata.sub_round_slug=='nft']\n\ntrace1 = go.Bar(\n                x = rdata[rdata.sub_round_slug=='nft'].round_num,\n                y = rdata[rdata.sub_round_slug=='nft'].total_pot,\n                name = \"nft\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = rdata[rdata.sub_round_slug=='nft'].total_pot)\n# create trace2 \ntrace2 = go.Bar(\n                x = rdata[rdata.sub_round_slug=='infra'].round_num,\n                y = rdata[rdata.sub_round_slug=='infra'].total_pot,\n                name = \"infra\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = rdata[rdata.sub_round_slug=='infra'].total_pot)\n\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\"\"\"","a79f00da":"data = pd.read_csv('\/kaggle\/input\/grallrounds\/Grants Results History Round over Round  Grant over Grant - GR1-GR12.csv').sort_values('round_number').reset_index(drop=True)\n\ndef fill_missing_values(df):\n    df.total = df.total.apply(lambda x: str(x).replace(',', '').replace('$', '')).astype(float)\n    df.crowdfund_amount_contributions_usd = df.crowdfund_amount_contributions_usd.apply(lambda x: str(x).replace('$', '').replace(',', '')).astype(float)\n    df.match_amount = df.match_amount.apply(lambda x: str(x).replace('$', '').replace(',', '')).astype(float)\n    return df\n\ndata = fill_missing_values(data)\n\ndata.head(2)","9566b320":"msno.matrix(data)\nplt.savefig('MSNO.png', format='png')\nplt.show()","4913a5b0":"data[data.crowdfund_amount_contributions_usd.isna()].describe()","0d00ef66":"msno.bar(data)\nplt.savefig('MSNObar.png', format='png')\nplt.show()","cb02324b":"all_data_na = (data.isnull().sum() \/ len(data)) * 100\nall_data_na = all_data_na.drop(all_data_na[all_data_na == 0].index).sort_values(ascending=False)\nmissing_data = pd.DataFrame({'Missing Ratio' : all_data_na})\nmissing_data.head(5)","6c417e88":"data.isnull().sum()","401f0989":"def cleaned_data(d):\n    d = d[d.total.notnull()]\n\n    d.region = d.region.fillna('undefined')\n    d.crowdfund_amount_contributions_usd = d.crowdfund_amount_contributions_usd.fillna(0)\n\n    abc = d.groupby(['grant_id']).agg(grant_uniq=(\"grant_title\", \"nunique\"), mode=(\"grant_title\", lambda x:x.value_counts().index[0]))\n\n    for x in abc[abc['grant_uniq']==2].index:\n        d.loc[lambda df: df['grant_id'] == x, 'grant_title'] = abc.loc[x, 'mode']\n        \n    return d.reset_index(drop=True)\n\ndata = cleaned_data(data)","5f5b0720":"data.grant_title.nunique()","d81a8aa0":"unique_regions = [ 'north_america', 'oceania', 'europe',\n       'latin_america', 'east_asia', 'africa', 'middle_east', 'india',\n       'southeast_asia']\n\ndef ddd(x):\n    i = x.unique()\n    for x in i:\n        if x in unique_regions:\n            return i\n\n    return np.nan\n\nabc = data.groupby('grant_id').agg(num_un_reg=('region', \"nunique\"),reg=('region', ddd))\nprint(abc[(abc.num_un_reg>1)&(abc.reg.notna())].shape)\nabc[(abc.num_un_reg>1)&(abc.reg.notna())]","5987427c":"abc = data.groupby('grant_id').agg(num_un_reg=('category', \"nunique\"),un_reg=('category', \"unique\"))\nprint(abc[abc.num_un_reg>1].shape)\nabc[abc.num_un_reg>1]","d853318b":"data.columns","ee4c7503":"def diff(x):\n    return x.max()-x.min()\nabc = data.groupby('grant_title').agg({\"grant_id\": diff})\nlen(abc[abc.grant_id>0].index)","0b30e827":"data[data.grant_title.isin(abc[abc.grant_id>0].index)].sort_values(['grant_title','round_number']).head(25)","037ac74b":"data.groupby(['round_number','region']).agg(grant_uniq=(\"grant_title\", \"nunique\"), total_sum=(\"total\", \"sum\"), total_mean=(\"total\", \"mean\"), unique_contributors_mean=(\"num_unique_contributors\", \"mean\")\n                                 ,match_mean=(\"match_amount\", \"mean\"), mode=(\"category\", lambda x:x.value_counts().index[0]),\n                                  crowdsourced_mean=(\"crowdfund_amount_contributions_usd\", \"mean\")\n                                 )","08b1c438":"data.category.unique()","2699cc06":"# 8 values for round 6\n#data[data.category=='Crypto for Black Lives']\n\n# 1 value for round 7\n#data[data.category=='Matic: Build-n-Earn']\n\n# 3 values for round 7\n#data[data.category=='APOLLO']\n\n# 29 values 2-8, 10-11\n#data[data.category=='Building Gitcoin']\n\n# 45 values from 3-10 \n#data[data.category=='Health']\n\n# 87 values 5-12\n#data[data.category=='dGov']\n\n# 94 values 12\n#data[data.category=='Grants Round 12'].count()\n\n# 434 values 5-12\n#data[data.category=='NFTs']\n\n# 938 values 1-12\n#data[data.category=='Infra Tech'].round_number.unique()\n#data[data.category=='Infra Tech'].count()\n\n# 2128 values 1-12\n#data[data.category=='dApp Tech'].round_number.unique()\n\n# 2139 values 1-12\n#data[data.category=='Community'].round_number.unique()\n#data[data.category=='Community'].count()","cdc7712a":"gr12 = data[data.round_number==12]\ngr11 = data[data.round_number==11]","98411a2b":"gr12","06456b19":"gr12.category.value_counts()","2600a055":"gr11.groupby('category').match_amount.sum()","4cb19d85":"gr12.groupby('category').match_amount.sum()","51414afc":"gr11.groupby('category').match_amount.sum()","dccf749e":"gr11.groupby('region').match_amount.sum()","5edcf820":"a = gr11.groupby(['region']).agg({\"match_amount\": [np.mean, np.sum],\"total\": [np.mean, np.sum], \"round_number\": np.count_nonzero})","54d50ff4":"a[('match_amount','sum')] \/ (a[('total','sum')])","900e4fac":"a2 = gr11.groupby(['category']).agg({\"match_amount\": [np.mean, np.sum],\"total\": [np.mean, np.sum], \"round_number\": np.count_nonzero})","2c185df1":"a2[('match_amount','sum')] \/ (a2[('total','sum')])","f577a05c":"Number of unique grants","d7728c79":"# EDA Region","f6940756":"# NA analysis","ffa2b557":"### Adaptation to a better Grant Pool","02e5184b":"## Cleaning data","e3b614c4":"### different Ids but the same grant pattern\n\nThese grants are","373035cb":"# EDA Category\n","ec11378d":"## ","77aa8e90":"# Grants Granular Data","87c58d41":"# Rounds Data","2f3c7c0c":"Its clear that oversubsidized is Africa\nand Under is Middle East","032f2755":"# By 11 Round comparison between pots","ead73d4e":"# EDA","0283b15e":"under is Community and Dapp Tech while over is dGov"}}