{"cell_type":{"d465ba32":"code","c462a7b9":"code","31752e5c":"code","43c41a11":"code","385e76f8":"code","70b14356":"code","4edfca68":"code","fbbafe34":"code","1f9922a1":"markdown","a756dd68":"markdown","dac13b32":"markdown","5e1a4c39":"markdown","9a7664be":"markdown","52c14b2a":"markdown","f0d00da5":"markdown","050e2991":"markdown","82145ca5":"markdown"},"source":{"d465ba32":"!pip install lightwood --no-index --find-links \/kaggle\/input\/lightwood161v2\/packages\/kaggle\/working\/packages\/kaggle\/working\/lightwood_packages\/","c462a7b9":"import lightwood\nprint(lightwood.__version__)","31752e5c":"import pandas as pd\n\nfrom lightwood.api.high_level import (\n            ProblemDefinition,\n            predictor_from_problem\n        )","43c41a11":"train_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntrain_df","385e76f8":"target = 'SalePrice'\npdef = ProblemDefinition.from_dict({'target': 'SalePrice'})\npredictor = predictor_from_problem(train_df, pdef)","70b14356":"predictor.learn(train_df)","4edfca68":"predictor.model_analysis.accuracies","fbbafe34":"preds = predictor.predict(test_df)\nout = pd.concat([test_df['Id'], preds[['prediction']]], axis=1)\nout.columns = ['Id', target]\nout.to_csv('\/kaggle\/working\/submission.csv', index=False)\nout","1f9922a1":"# Data loading\n\nFor this competition, the aim is to predict good values for the `SalePrice` column.","a756dd68":"## Define predictive task\n\nWe can employ Lightwood's features to _declare_ what we want to predict quite easily. It's just a matter of indicating the target column, in this case:","dac13b32":"That's all. WIth this, we can now submit to the competition.","5e1a4c39":"# Install Lightwood\n\nWe will use a dataset that contains all needed libraries in `.whl` format so that you can install and operate Lightwood even in offline kernels (which may be needed for some competitions).","9a7664be":"## Check installation","52c14b2a":"Now all we need is to do a `.learn()` call. Behind the scenes, an entire AutoML pipeline is designed and ran:","f0d00da5":"This indicates our model might yield good predictions! Let's get the output for this competition's testing set:","050e2991":"Okay, our predictor has been trained! We can quickly check the reported validation metric now:","82145ca5":"Okay, we're all set-up and ready to go!\n\n# Imports"}}