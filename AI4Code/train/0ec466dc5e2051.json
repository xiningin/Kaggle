{"cell_type":{"f427c61b":"code","cdf3990d":"code","010b48f1":"code","b7466d65":"code","ed833d34":"code","d490e99b":"code","47e951d2":"code","5b1b66b7":"code","c39edc80":"code","e643c74d":"code","10e8dd7f":"code","d0d0cb16":"code","a9cdec3f":"code","ba4d06fe":"markdown","b8036d92":"markdown"},"source":{"f427c61b":"from sklearn.feature_extraction.text import CountVectorizer\n# To create a Count Vectorizer, we simply need to instantiate one.\n\n\nsample_text = [\"Machine Learning: Introduction to Machine learning and hands-on experience on the various applications of ML\",\n               \"Deep Learning: Introduction to Deep learning & NLP\"]","cdf3990d":"#CountVectorizer Plain and Simple\n\nfrom sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(sample_text)\ncount_vector=cv.fit_transform(sample_text)","010b48f1":"cv.vocabulary_","b7466d65":"count_vector.shape","ed833d34":"cv = CountVectorizer(sample_text,stop_words=[\"all\",\"on\",\"the\",\"is\",\"and\",\"to\"])\ncount_vector=cv.fit_transform(sample_text)\ncount_vector.shape","d490e99b":"cv.stop_words","47e951d2":"#Stop Words using MIN_DF","5b1b66b7":"cv = CountVectorizer(sample_text,min_df=2)\ncount_vector=cv.fit_transform(sample_text)","c39edc80":"cv.stop_words_","e643c74d":"cv.vocabulary_","10e8dd7f":"    #Stop Words using MAX_DF","d0d0cb16":"cv = CountVectorizer(sample_text,max_df=0.50)\ncount_vector=cv.fit_transform(sample_text)","a9cdec3f":"cv.stop_words_","ba4d06fe":"![k](https:\/\/miro.medium.com\/max\/875\/1*MeSYCKGDOdwkJKVZKxJuvg.png)\n\n\nThe bag-of-words model is a simplifying representation used in NLP. In this model, a text is represented as the bag of its words, disregarding grammar and even word order but keeping multiplicity.\n","b8036d92":"CountVectorizer is a great tool provided by the scikit-learn library in Python. It is used to transform a given text into a vector on the basis of the frequency (count) of each word that occurs in the entire text. This is helpful when we have multiple such texts, and we wish to convert each word in each text into vectors (for using in further text analysis).\nCountVectorizer creates a matrix in which each unique word is represented by a column of the matrix, and each text sample from the document is a row in the matrix. The value of each cell is nothing but the count of the word in that particular text sample. "}}