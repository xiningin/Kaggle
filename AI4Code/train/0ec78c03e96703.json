{"cell_type":{"6c738c0a":"code","55e64959":"markdown","9e39ceb4":"markdown","4956aacf":"markdown","eba56e07":"markdown","3af8771d":"markdown","2f11d0fb":"markdown","b7415174":"markdown","f80ed223":"markdown","38307e94":"markdown","2283d9e5":"markdown","7002e247":"markdown","7cce121e":"markdown","76070142":"markdown","61153765":"markdown","713b028b":"markdown","5105140d":"markdown","a7d6963b":"markdown","f14e392b":"markdown","6dc976ae":"markdown","1c6df7cc":"markdown","3725542a":"markdown","317233fe":"markdown","d2a1cf02":"markdown","d869f073":"markdown","e9f16347":"markdown","f80b0a12":"markdown","91f2de6c":"markdown","b03eb9d6":"markdown","fb38b390":"markdown"},"source":{"6c738c0a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55e64959":"#### - This notebook is the 3rd notebook of from scratch series. I recomend you to look 1st and 2nd :\n#### 1. [Logistic Regression from Scratch](https:\/\/www.kaggle.com\/feritebrargrler\/heart-disease-classification-logistic-regression)\n#### 2. [Artificial Neural Network from Scratch](https:\/\/www.kaggle.com\/feritebrargrler\/ann-with-and-without-keras\/comments)","9e39ceb4":"#### Steps (Each Steps will be explained) : \n#### - Input\n#### - Convolution and Convolution Layer (can be done more than once)\n#### - Pooling and Pooling Layer (can be done more than once)\n#### - Fully Connected Layer (ANN)\n#### - Output","4956aacf":"![padding2.png](attachment:430048b6-e0fb-46eb-86d1-4e1cbd95ee86.png)","eba56e07":"![max pooling.jpg](attachment:7da3519e-f9bb-4b84-8496-f8edf0dfd00a.jpg)","3af8771d":"## Context\n* What is What is Convolutional Neural Network ?\n* Convolution\n* Padding (Same Padding)\n* Pooling (Max Pooling)\n* Flattening\n* Fully Connected\n* Conclusion","2f11d0fb":"#### - As you see in the image there is something happening between input and convolution layer. \n#### - It is kernel. By other names filter or feature detector. \n#### - Kernel = Filter = Feature Detector !!!\n#### - The thing it does detect features of inputs. Detects edges, convex shapes. On the other hand it detects ear, tail, some stuff even human. While the number of this operation increases, detection of complex areas are understood by the computer.\n#### - Kernels are matrices. Their size can be different or values of matrices can be change. [10 0 -1 ; 0 1 -1 ; 10 10 0]  For example this matrix can specify one feature (like edge detection). After each feature detection new feature map occurs.\n#### - What is  playing below is kernel.","b7415174":"![filter1.png](attachment:df1abf2b-3030-4592-b5e2-230e38d890b5.png)","f80ed223":"#### - The feature maps of a CNN capture the result of applying the filters to an input image. I.e at each layer, the feature map is the output of that layer. The reason for visualising a feature map for a specific input image is to try to gain some understanding of what features our CNN detects.\n#### - So feature maps are convolved features.\n#### - Multiple feature maps consisting because we are using multiple feature detectors. (one detects edge of number 2 one detects horizental line of number 2 ...)       \n#### - Filters moving on the input. But how ? Depenging on what ? : Stride\n#### - Stride is a parameter of the neural network's filter that modifies the amount of movement over the image or video. For example, if a neural network's stride is set to 1, the filter will move one pixel, or unit at a time.\n#### - As activation after convalutional layer, ReLu is generally using. Because images are non linear objects and ReLu increases non linearity.\n#### - When you apply convolution operation (*) on input the size of input and size of output can not remain same. (Matrix Multiplication) Size of output would be less then the input. ( You can see the animation above)\n#### - SizeOfOutput = SizeOfInput - SizeOfKernel + 1\n#### - While size getting closer code running faster however lost of information occurs. To prevent lost of information we use padding.","38307e94":"# Introduction\n#### In this tutorial we are going to create a Convolutional Neural Network without using library. The aim of this notebook to see how CNN steps are basically process. In this part basically theory will be shown and in second part there will be mathematical expressions and codes from scratch.","2283d9e5":"![pixels.jpg](attachment:cca4379d-5fb5-4938-bb45-70834e033192.jpg)","7002e247":"# Pooling (Max Pooling)","7cce121e":"#### - Thus far we worked on image. No classifcation or no other thing applied on images.\n#### - As you remember on ANN's inputs must be flatten. So before making classification or something our image should be flattened.","76070142":"#### - Maximum pooling is a pooling operation that calculates the maximum, or largest, value in each patch of each feature map. The results are down sampled or pooled feature maps that highlight the most present feature in the patch.\n#### - It makes the detection of features invariant to scale or orientation changes. For example a human can be sitting, stand upright etc. By the helping of pooling these changes would not be a problem.\n#### - Thus overfitting is avoided.\n#### - Max pooling is a pooling operation that selects the maximum element from the region of the feature map covered by the filter. Thus, the output after max-pooling layer would be a feature map containing the most prominent features of the previous feature map.\n#### - After that size decreases and our model can be faster.","61153765":"# What is Convolutional Neural Network ?","713b028b":"![flatten2.png](attachment:2827a11c-465d-4b83-a098-3aee15e6b981.png)","5105140d":"# Flattening","a7d6963b":"#### - This layer can be thougt as ANN.\n#### - Neurons in a fully connected layer have connections to all activations in the previous layer","f14e392b":"![conv2.jpg](attachment:f51b69ad-474b-4714-927b-1644859bac59.jpg)","6dc976ae":"#### - Convolutional neural networks are a sub-branch of deep learning and are often used to analyze visual information. Common uses include image and video recognition, recommendation systems, image classification, medical image analysis, and natural language processing.\n#### -  How its work ? :\n#### -  First of all; CNN is big step of computer vision. But how can computer has a vision ? Simple answer : Pixels. \n#### -  Each pixel can be reduced to a number. And of course numbers make sense from computers. Thats how computers have a vision.","1c6df7cc":"#### Some gifs for better understanding :\n* [Pixel](https:\/\/miro.medium.com\/max\/1280\/1*vDld7zpfWszhq9lE6oMQtg.gif)\n* [Mnist](https:\/\/thumbs.gfycat.com\/AffectionateMemorableGreyhounddog-size_restricted.gif)\n* [Smoke](https:\/\/cdn-images-1.medium.com\/fit\/t\/1600\/480\/0*666meuEpnzCoZQmP.gif)","3725542a":"# Conclusion\n#### In this part I tried to explain basically how CNN works. In second part codes and math will be explained.","317233fe":"#### - In a nutshell, there are inputs consist of pixels. On input firstly convolution operation is made by using feature detectors (kernel,filter). Each feature detectors detect different features. In this way, feature maps show up. Than if we do not want to lose some information on data, we apply same padding. After that for finding dominant areas in feature maps we implement max pooling. Lastly pooled features getting flatten and fully connect with neural network and having output.","d2a1cf02":"![Fully-connected-layer.png](attachment:5e1dcdec-714d-4b41-9da9-d7daf1bf31e7.png)","d869f073":"#### - Last but not least you may ask in which part learning happening ?\n#### - In 2 parts :\n#### - As you know a learning transaction is happening in ANN (forward, backward, weights and biases ...)\n#### - Other learning action is happening in CNN on filters. The learned part is how the filters would be. ","e9f16347":"#### - There are some different padding methods : Valid padding (or no padding), Same padding, Causal padding, Constant padding, Reflection padding, Replication padding but I am going to explain same padding method.\n#### - Padding can be thought as framing for input.\n#### - As I said before the aim of making padding is to prevent lost of information resulting from calculations between input and kernel.\n#### - By the helping of this method input and output sizes remain same.\n#### - A frame of zeros is made around the input.","f80b0a12":"# Fully Connected","91f2de6c":"![conv-full-layer.gif](attachment:bf3df5c8-f102-4ad0-9386-84816b23a7b6.gif)","b03eb9d6":"# Padding (Same Padding)","fb38b390":"# Convolution"}}