{"cell_type":{"d7ebb7bb":"code","b420814f":"code","a138d40e":"code","fb7681fa":"code","3629057b":"code","07ebcdc5":"code","5c7ab76a":"code","fbbac432":"code","ffba776f":"code","5d670fe3":"code","36bc6dc0":"code","f4df84fd":"code","2f73e056":"code","1ac5ea04":"code","5d8acfaa":"code","da808894":"code","2aef3d1a":"code","b6b67f5a":"code","fee79ef5":"code","a2c51830":"markdown","267e7f43":"markdown","82582e41":"markdown","02511422":"markdown","8261fcbb":"markdown","17eb4edc":"markdown","57680e40":"markdown","ce82ebc1":"markdown","7bbc581f":"markdown","4b852389":"markdown","6b0b164f":"markdown","16d616a0":"markdown","958a5976":"markdown","94ca6eb8":"markdown","de7a22b0":"markdown","35030e95":"markdown","b95a2448":"markdown","b6fa8a69":"markdown","21939a3c":"markdown","fef26364":"markdown","27653136":"markdown","47be30db":"markdown","64bc0c4d":"markdown","2511c452":"markdown"},"source":{"d7ebb7bb":"import os\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#import dataframe_image as dfi\n\nfrom sklearn.preprocessing import MinMaxScaler\nimport warnings\nwarnings.filterwarnings('ignore')","b420814f":"df=pd.read_csv('..\/input\/english-premier-leage-season-202021\/EPL_GW4_standard.csv')\ndf_fix=pd.read_csv('..\/input\/english-premier-leage-season-202021\/EPL_fixture.csv')","a138d40e":"#xG and xGA per match home and away \ndf['xGpm_h']=df.xG_h\/df.MP_h\ndf['xGpm_a']=df.xG_h\/df.MP_a\ndf['xGApm_h']=df.xGA_h\/df.MP_h\ndf['xGApm_a']=df.xGA_h\/df.MP_a","fb7681fa":"#Aggregate data\ndf['MP']=df['MP_h']+df['MP_a']\ndf['xG']=df['xG_h']+df['xG_a']\ndf['xGA']=df['xGA_h']+df['xGA_a']\ndf['delta_xG']=df['xG']-df['xGA']\ndf['GF']=df.GF_a+df.GF_h\ndf['GA']=df.GA_a+df.GA_h\ndf['xaG']=df.GF-df.xG\ndf['xaGA']=df.xGA-df.GA\n#Aggregate per match\ndf['xGpm']=df['xG']\/df['MP']\ndf['xGApm']=df['xGA']\/df['MP']\ndf['delta_xGpm']=df['delta_xG']\/df['MP']\ndf['GFpm']=df.GF\/df.MP\ndf['GApm']=df.GA\/df.MP\ndf['xaGpm']=df.xaG\/df.MP\ndf['xaGApm']=df.xaGA\/df.MP","3629057b":"print(\"Total Matches : {}\".format(df.MP_h.sum()))\nprint(\"Home Team Win : {}\".format(df.W_h.sum()))\nprint(\"Away Team Win : {}\".format(df.L_h.sum()))\nprint(\"Draw : {}\".format(df.D_h.sum()))\nx=[df.W_h.sum(), df.D_h.sum(), df.L_h.sum()]\nlabels=[\"Home Win\", \"Draw\", \"Away Win\"]\nexplode=[0.01,0.01,0.01]\n\nplt.pie(x=x, labels=labels,explode=explode, startangle=90,\n        autopct='%1.2f%%',wedgeprops={\"width\":0.6})\nplt.savefig('h_vs_a.png')\nplt.show()","07ebcdc5":"labels=[\"Home\",\"Away\"]\nexplode=[0.01,0.01]\nplt.figure(figsize=(8,8))\nplt.subplot(221)\nplt.title(\"Goals Scored\")\nx=[sum(df.GF_h),sum(df.GF_a)]\nplt.pie(x=x, labels=labels,explode=explode, startangle=90,\n        autopct='%1.2f%%',wedgeprops={\"width\":0.6})\n\nplt.subplot(222)\nplt.title(\"Goals Conceded\")\nx=[sum(df.GA_h),sum(df.GA_a)]\nplt.pie(x=x, labels=labels,explode=explode, startangle=90,\n        autopct='%1.2f%%',wedgeprops={\"width\":0.6})\n\nplt.subplot(223)\nplt.title(\"xG Scored\")\nx=[sum(df.xG_h),sum(df.xG_a)]\nplt.pie(x=x, labels=labels,explode=explode, startangle=90,\n        autopct='%1.2f%%',wedgeprops={\"width\":0.6})\n\nplt.subplot(224)\nplt.title(\"xG Conceded\")\nx=[sum(df.xGA_h),sum(df.xGA_a)]\nplt.pie(x=x, labels=labels,explode=explode, startangle=90,\n        autopct='%1.2f%%',wedgeprops={\"width\":0.6})\nplt.savefig('pie_xg.png')\nplt.show()","5c7ab76a":"print(\"Average xG per match(Home) : {}\"\n     .format(df.xGpm_h.mean()))\nprint(\"Average xG per match(Away) : {}\"\n     .format(df.xGpm_a.mean()))\nprint(\"Average xG Conceaded per match(Home) : {}\"\n     .format(round(df.xGApm_h.mean(),2)))\nprint(\"Average xG Conceaded per match(Away) : {}\"\n     .format(round(df.xGApm_a.mean(),2)))\n\nplt.figure(figsize=(4,4))\nsns.scatterplot(data=df,x='xGApm_h', y='xGpm_h', \n                color='blue', label='Home', alpha=0.5)\nsns.scatterplot(data=df,x='xGApm_a', y='xGpm_a', \n                color='red', label='Away', alpha=0.5)\nplt.show()","fbbac432":"df_agg=df[['Squad','MP', 'xG','xGA', 'delta_xG', 'xGpm', 'xGApm',\n           'delta_xGpm']]\n#df_agg.sort_values(by='delta_xGpm', ascending=False)","ffba776f":"plt.figure(figsize=(8,5))\n#plt.suptitle(\"EPL 2020\/21 SEASON UPTO GW4\")\n\nplt.subplot(1,2,1)\nplt.title(\"xG Scored per match\")\nsns.barplot(orient='h', x='xGpm',y='Squad',\n            data=df_agg.sort_values(by='xGpm',ascending=False))\nplt.grid(which='both', axis='x')\n\nplt.subplot(1,2,2)\nplt.title(\"xG Conceaded per match\")\nsns.barplot(orient='h', x='xGApm',y='Squad',\n            data=df_agg.sort_values(by='xGApm',ascending=True))\nplt.grid(which='both', axis='x')\n\nplt.tight_layout()\nplt.savefig('xg_xa.png')\nplt.show()","5d670fe3":"plt.figure(figsize=(6,4))\nplt.title(\"xG Scored - xG Conceded\")\nsns.barplot(orient='h', x='delta_xGpm',y='Squad', \n            data=df_agg.sort_values(by='delta_xGpm', ascending=False))\nplt.grid(which='both', axis='x')\nplt.xlabel('Delta xG')\nplt.tight_layout()\nplt.savefig('delta_xg.png')\nplt.show()","36bc6dc0":"plt.figure(figsize=(10,6))\nplt.title(\"xG Scored Vs xG Conceded\")\nsns.scatterplot(data=df_agg, x='xGApm', y='xGpm')\nfor i in range(df_agg.shape[0]):\n    plt.text(df_agg.xGApm[i]+0.01, df_agg.xGpm[i]+0.01, \n             df_agg.Squad[i], fontdict={'fontsize':8})\nplt.xlabel(\"xG conceded Per match\")\nplt.ylabel(\"xG Scored Per match\")\nplt.plot([0,3],[0,3],'r--')\nplt.xlim(df_agg.xGApm.min()-0.2,df_agg.xGApm.max()+0.2)\nplt.ylim(df_agg.xGpm.min()-0.2,df_agg.xGpm.max()+0.2)\nplt.savefig('scatter_xg_xa.png')\nplt.show()","f4df84fd":"plt.figure(figsize=(8,5))\nsns.scatterplot(data=df, x=df.xGpm, y=df.GFpm)\nfor i in range(df.shape[0]):\n    plt.text(x=df.xGpm[i]+0.01, y=df.GFpm[i]+0.01, \n             s=df.Squad[i], fontsize=8)\nplt.plot([-3,3],[-3,3],'r--')\nplt.xlabel(\"Expected Goals per match\")\nplt.ylabel(\"Goals per match\")\nplt.xlim(df.xGpm.min()-0.2, df.xGpm.max()+0.2)\nplt.ylim(df.GFpm.min()-0.2, df.GFpm.max()+0.2)\nplt.tight_layout()\n#plt.savefig('expvsact_g.png')\nplt.show()","2f73e056":"plt.figure(figsize=(4,5))\nsns.barplot(orient='h', y='Squad',x='xaGpm', \n            data=df.sort_values(by='xaGpm', ascending=False))\nplt.grid(which='both', axis='x')\n#plt.savefig('expvsact_gbar.png')\nplt.show()","1ac5ea04":"plt.figure(figsize=(8,5))\nsns.scatterplot(data=df, x=df.xGApm, y=df.GApm)\nfor i in range(df.shape[0]):\n    plt.text(x=df.xGApm[i], y=df.GApm[i], \n             s=df.Squad[i], fontsize=7)\nplt.plot([0,3],[0,3],'r--')\nplt.xlabel('Expected Goals Conceded per match')\nplt.ylabel('Goals conceded per match')\nplt.tight_layout()\n#plt.savefig('xaGA.png')\nplt.show()","5d8acfaa":"plt.figure(figsize=(4,5))\nsns.barplot(orient='h', y='Squad',x='xaGApm', \n            data=df.sort_values(by='xaGApm', ascending=False))\nplt.grid(which='both', axis='x')\n#plt.savefig('xaGA_b.png')\nplt.show()","da808894":"plt.figure(figsize=(8,5))\nsns.scatterplot(x='xaGApm', y='xaGpm', data=df, hue='delta_xGpm',\n                size='delta_xGpm')\nplt.grid(which='both')\nplt.legend()\nplt.plot([5,-5],[0,0], 'k--')\nplt.plot([0,0],[5,-5], 'k--')\nplt.xlim(df.xaGApm.min()-0.2,df.xaGApm.max()+0.3)\nplt.ylim(df.xaGpm.min()-0.3,df.xaGpm.max()+0.2)\nfor i in range(df.shape[0]):\n    plt.text(x=df.xaGApm[i]+0.02, y=df.xaGpm[i]+0.02, \n             s=df.Squad[i], fontsize=7)\n    \nplt.text(x=0.1, y=1, s=\"Q1\\nOverperformed xG\\nOverperformed xA\", \n         alpha=0.7,fontsize=9, color='red')\nplt.text(x=0.1, y=-0.5, s=\"Q4\\nUnder performed xG\\nOverperformed xA\", \n         alpha=0.7,fontsize=9, color='red')\nplt.text(x=-1, y=1, s=\"Q2\\nOverperformed xG\\nUnderperformed xA\", \n         alpha=0.7,fontsize=9, color='red')\nplt.text(x=-1, y=-0.5, s=\"Q3\\nUnder performed xG\\nUnderperformed xA\", \n         alpha=0.7,fontsize=9, color='red')\nplt.xlabel(\"Goals Coceded(Expected-Actual) per match\")\nplt.ylabel(\"Goals Scored(Actual-Expected) per match\")\nplt.tight_layout()\n#plt.savefig('op_up.png')\nplt.show()","2aef3d1a":"df_fix['G_home']=0.0\ndf_fix['G_away']=0.0\n\nfor i in range(df_fix.shape[0]):\n    df_fix.G_home[i]=(df_agg.xGpm[df_agg.Squad==df_fix.Home[i]].sum()+\n                   df_agg.xGApm[df_agg.Squad==df_fix.Away[i]].sum())\/2\n    df_fix.G_away[i]=(df_agg.xGpm[df_agg.Squad==df_fix.Away[i]].sum()+\n                   df_agg.xGApm[df_agg.Squad==df_fix.Home[i]].sum())\/2\n\ndf_fix['GD']=df_fix['G_home']-df_fix['G_away']\ndf_fix['GS']=df_fix['G_home']+df_fix['G_away']\ndf_fix=df_fix.sort_values(by='GD', ascending=False)\ndf_styled=df_fix.iloc[:,1:][df_fix.GW==5].style.background_gradient(cmap='RdYlGn',subset=['GD','GS']).hide_index()\n#dfi.export(df_styled,\"mytable.png\")\ndf_styled","b6b67f5a":"gw_dict={'GW5':5,'GW6':6,'GW7':7,'GW8':8}\n\ndf_fdr=pd.DataFrame({'Squad':df.Squad})\n\nfor GW in gw_dict.keys():\n    df_temp=df_fix[df_fix.GW==gw_dict[GW]]\n\n    df_fdr[GW]=df_fdr.Squad\\\n    .apply(lambda x:(df_temp[df_temp.Home==x].GD.sum()) \n           if x in (df_temp.Home.unique()) \n           else -df_temp[df_temp.Away==x].GD.sum())","fee79ef5":"sc=MinMaxScaler()\ndf_fdr['Mean']=df_fdr.mean(axis=1)\nfor col in gw_dict.keys():\n    df_fdr[col]=sc.fit_transform(np.array(df_fdr[col]).reshape(-1,1))\ndf_fdr=df_fdr.sort_values(by='Mean', ascending=False)\ndf_fdr.style.background_gradient(cmap='RdYlGn',\n                                 subset=list(gw_dict.keys()))","a2c51830":"Aston Villa, New Castle, Arsenal and Leeds are the only 4 teams out of 20 who managed to outperform the expected goals conceded. It seems that goal scoring has been very easy this season.\n\nLiverpool, Manchester United, Fulham, Burnley and Brighton were unlucky to concede more than one goal per match than expected.","267e7f43":"The best scenario is over-performing xG and xGA by a healthy margin.\n\nOver-performing xG by a high margin is generally not sustainable in the long run.\n\nFalling behind xG is not a big problem if the team manages to create more chances(xG).\n\nSize of the bubble indicates the the expected net goals scored(xG-xGA) per match. First aim of the teams should be to improve the net goals scored.\n\n\n\n1st Quadrant: Over-performed xG and Over-performed xGA\n\nTeams in Q1 are doing well in over performing expected goals they have to carry on the momentum teams like Leeds and New Castle should try to improve the net Goals scored.\n\n\n2nd Quadrant:Over-performed xG and Under-performed xGA\n\nTeams in Q2 should try to move towards Q1, that is improve defense.\n\n\n3rd Quadrant: Under-performed xG and Under-performed xGA\n\nTeams in Q3 should improve both defense and attack.\n\n4th Quadrant: Under-performed xG and Over-performed xGA\n\nThere are no teams in Q4.","82582e41":"# Home Advantage, Does that even exist in Post Covid Era?","02511422":"Due to the pandemic, matches are currently happening in empty stadiums, home advantage in my opinion is more than the familiarity with the playing turf, it is the spirit and encouragement by tens of thousands of die-hard fans rooting for the victory of home team.\n\nThats why even a thought of visiting Anfield or Old Trafford sends shivers down the spine of away teams. Generally teams perform better in front of their home crowd compared to away fixture.","8261fcbb":"### Expected Goals Scored and Conceaded","17eb4edc":"The defending champions Liverpool is leading in expected goals per game with around 2.5 xG per game including penalties. Spurs, Aston Villa and Everton have also managed xG greater than 2.\n\nWest Brom which is currently the lowest ranking team is struggling to create chances with very low xG.\nTeams with low xG lacks creativity, they should reinforce the team with creative players.\n\nxG can be low for teams which employ defensive style of play which rely on counter attacks or mistakes from the opposition to score goals.\n\nEverton, Southampton and West Ham seems to have impenetrable defense registering xGA below 1. Sheffield, Aston Villa and Brighton have also displayed solid defense.\n\n3 out out of last season\u2019s top four teams-Liverpool, Manchester City and Mancester United features in the worst 5 defensive teams as per xG conceded. Manchester United recorded the highest expected goals conceded averaging around 2.5 goals per game. Leeds and West Brom also have more than 2 xGA.\n\nTeams with high xGA should immediately address their problems in defense.","57680e40":"The logic used to predict the scores of the match is based on xG per game and xGA per game for the previous period.\nHome team\u2019s score is calculated as average of xG of home team and xGA of away team.\n\nG_home=(xG_home+xGA_away)\/2<br>\nAway team\u2019s score is calculated as average of xG of away team and xGA of home team.\n\nG_away=(xG_away+xGA_home)\/2\n\nGoal Difference(GD) is calculated as difference between home team\u2019s score and away team\u2019s score.\n\nGD=G_home-G_away\n\nTotal goals scored(GS) is calculated as sum of home team\u2019s score and away team\u2019s score.\n\nGD=G_home+G_away\n\nResult of Gameweek 5 matches predicted is as below.","ce82ebc1":"In the current season, so far there is no evidence of home advantage. Out of the 38 matches played so far, 19 resulted in the away team winning, 3 were draws and Home team only managed to win 16 matches which is around 42% of the total matches played.","7bbc581f":"# Expectation Vs Reality","4b852389":"The teams above the red line have better xG compared to xGA. Last seasons top scorers Manchester City who usually dominates the league has failed to produce more chances than their opponents. Their city rivals Manchester United had the worst start in decades.","6b0b164f":"# Quadrant Analysis","16d616a0":"Based on the current performance of the teams, the teams are arranged in the order of increasing difficulty rating over the next four matches.","958a5976":"A team could outperform xG either when the team has prolific strikers who can convert half chances or luckily managed to score some goals. ","94ca6eb8":"# Can\u2019t wait for the next gameweek to see how close the predictions are!!!","de7a22b0":"Higher the absolute value of Goal Difference, more one sided the match would be and value of Goal Difference closer to zero mean an evenly contested match can be expected.<br>\nNegative value of GD implies that Away team is likely to win and positive value favors the home team to win.<br>\n\nHigher value of Goals Scored implies that we can expect a goal fest from the fixture and lower value indicates a low scoring match.<br>\n\nBased on the model, Burnley has the best fixture away against West Brom with goal difference 0.77 in favor of the Clarets.<br>\nBrighton\u2019s game vs Crystal palace is also expected to be walk in the (Selhurst) park for the seagulls.<br>\nMan United\u2019s visit to St. James\u2019 Park is estimated to result in yet another heart break for the Red Devils.<br>\n\nManchester City vs Arsenal match is the most evenly contested match of the gameweek with xG slightly in favor of the Gunners.<br>\nChelsea vs Saints and Leeds vs Wolves are also going to be closely contested.<br>\n\nMersey side Derby is expected to be the goal shower with the hosts having and edge over the defending champions.<br>","35030e95":"Delta xG is the difference between expected goals scored and expected goals conceded which can be used to evaluate the form of a team. Everton seems to dominate the league with delta xG per game almost 1.5. \n\nTottenham and Aston Villa also have delta xG more than 1. \n\nDespite 7\u20132 humiliation at the hands of Aston Villa, the Reds are close behind at 4th position. \n\nIn the other end, Manchester united and West Brom have delta xG more than 1.5.","b95a2448":"# Fixture Difficulty Rating","b6fa8a69":"<img src=\"https:\/\/miro.medium.com\/max\/625\/1*UQ4iicvVVl5mDNKKuAvWGw.gif\">\n> Woodward, Give that man a centre-defender","21939a3c":"Going into the international break after Gameweek 4, 38 matches have been played which is exactly 10% of the total 380 matches to be played during the season.\nCurrent season has been by far been unpredictable with last years top teams dropping points and some mid-table teams and minnows performing remarkable well.\nIn this post I try to analyze the performance of teams and try to predict the result of upcoming fixtures.","fef26364":"Aston Villa is outperforming xG by 1.5 goals per match which they are not likely to carry forward.\n\nLeicester City also seems to outperform the xG by huge margin, this can be attributed to 3 penalties scored by Vardy. Unless Leicester is awarded penalties every weekend(which is highly unlikely even with the new lenient handball policy), their margin would come down.\n\n2 out of Manchester United\u2019s 5 goals are also from penalties, xG from open play for the red devils also would be much lower.","27653136":"Home teams have been outscored by away teams in this season. Moreover home teams have underperfomed in both xG(Expected Goals Scored) and xGA(Expected Goals Conceded).","47be30db":"<img src=\"https:\/\/miro.medium.com\/max\/335\/1*9TooAmJF0ec0w-TOCxSRVA.gif\">","64bc0c4d":"# Prediction","2511c452":"# Curious case of Home Disadvantage!"}}