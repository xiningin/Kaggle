{"cell_type":{"e8be002e":"code","20da5d3b":"code","1bdb3c7b":"code","33730ebc":"code","b1973be8":"code","e7efb4a5":"code","87cd2341":"code","d81272e4":"code","c879034e":"code","e0eda08f":"code","22b0d1f0":"code","33d3c597":"markdown","4dc7a387":"markdown","207ae159":"markdown","018fc60b":"markdown","db879805":"markdown","dadcffcf":"markdown","187135c8":"markdown","0054f3eb":"markdown"},"source":{"e8be002e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","20da5d3b":"train = pd.read_csv('..\/input\/train__updated.csv')\ntest = pd.read_csv('..\/input\/test__updated.csv')","1bdb3c7b":"train.head()","33730ebc":"train.drop('index',axis=1,inplace=True)\nidx=test['index']\n","b1973be8":"test.drop('index',axis=1,inplace=True)\n","e7efb4a5":"from sklearn.linear_model import*\nreg = LinearRegression()\n\nX=train[test.columns]\ny=train.wave_height","87cd2341":"X.fillna(-1,inplace=True)\ntest.fillna(-1,inplace=True)","d81272e4":"reg=LinearRegression()","c879034e":"reg.fit(X,y)\n\npred =reg.predict(test)\n\nsam=pd.read_csv('..\/input\/sample_sub.csv')\n\nsam['wave_height']=pred","e0eda08f":"sam.to_csv('sandbox_sub.csv',index=None)","22b0d1f0":"from IPython.display import HTML\nimport pandas as pd\nimport numpy as np\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n# download it (will only work for files < 2MB or so)\ndef create_download_link(df, title = \"Download CSV file\", filename = \"data.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\n# create a random sample dataframe\ndf = pd.DataFrame(np.random.randn(50, 4), columns=list('ABCD'))\n\n# create a link to download the dataframe\ncreate_download_link(sam)","33d3c597":"## Saving to CSV","4dc7a387":"### Loading dataset","207ae159":"## Downloading file","018fc60b":"### Defing simple regression model","db879805":"### Importing packages","dadcffcf":"## Fiting and making predictions","187135c8":"## Filling NA values with -1","0054f3eb":"## Droping Index column"}}