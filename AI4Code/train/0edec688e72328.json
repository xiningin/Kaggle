{"cell_type":{"edd691cf":"code","d2d6ada4":"code","a6f091c0":"code","e188fa99":"code","aae70787":"code","3a6ebe7b":"code","aedf233b":"code","d6148b16":"code","862df384":"code","7fa61283":"code","e2f3d42d":"code","55a755d2":"code","590e23df":"markdown"},"source":{"edd691cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization too\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2d6ada4":"data = pd.read_csv('..\/input\/google-data-historic-dataset\/GOOGL.csv')\ndata.head()","a6f091c0":"data.info()","e188fa99":"data.corr()\n","aae70787":"#correlation map\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","3a6ebe7b":"data.head(10)","aedf233b":"data.tail()","d6148b16":"data.columns","862df384":"#control of data cleaning \ndata.describe()","7fa61283":"data.isnull().sum()","e2f3d42d":"fig,axs = plt.subplots(2,2,figsize=(10,10))\nfig.tight_layout(pad=3.0)\ncolors = ['green', 'yellow', 'blue','red']\n\naxs[0,0].plot(data['Open'],color=colors[0])\naxs[0,0].set_title('Open')\naxs[0,1].plot(data['Close'],color=colors[1])\naxs[0,1].set_title('Close')\naxs[1,0].plot(data['Volume'],color=colors[2])\naxs[1,0].set_title('Volume')\naxs[1,1].plot(data['Adj Close'],color=colors[3])\naxs[1,1].set_title('Adj Close')\n","55a755d2":"data.hist (figsize = (15,15))\nplt.show ()","590e23df":"data is clean. There is no any operation."}}