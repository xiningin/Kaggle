{"cell_type":{"99fa1ee0":"code","fc068484":"code","d04cbd41":"code","9dcc2ddb":"code","f6710f04":"code","cd5effa1":"code","dc6e1313":"code","84ead1c6":"code","ca4f42be":"code","551ed391":"code","fd002ffc":"code","337d3169":"code","97865d38":"code","15ef2d5e":"code","1429a014":"code","6337d754":"code","235f68e7":"code","b7dfb484":"code","21120114":"code","7d49b1ca":"code","e9c1956b":"markdown","3679d10f":"markdown","536dbfa9":"markdown"},"source":{"99fa1ee0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","fc068484":"df = pd.read_csv('..\/input\/body-performance-data\/bodyPerformance.csv')","d04cbd41":"df.columns = ['age', 'gender', 'height_cm', 'weight_kg', 'body fat_%', 'diastolic',\n       'systolic', 'gripForce', 'sit and bend forward_cm', 'sit-ups counts',\n       'broad jump_cm', 'class_value']","9dcc2ddb":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ndf.gender = encoder.fit_transform(df.gender)\ndf.class_value = encoder.fit_transform(df.class_value)","f6710f04":"df.describe()","cd5effa1":"sns.histplot(x = 'age',data = df, kde=True)","dc6e1313":"sns.histplot(x = 'height_cm',data = df)","84ead1c6":"df['height_m'] = df.height_cm\/100","ca4f42be":"df['BMI'] = df.weight_kg \/df.height_m**2\ndf.drop('height_cm',axis = 1,inplace = True)\ndf.drop('height_m',axis = 1,inplace = True)\ndf.drop('weight_kg',axis = 1,inplace = True)","551ed391":"df.head(2)","fd002ffc":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),annot = True)","337d3169":"y = df['class_value']\ndf.drop('class_value',axis = 1,inplace = True)\nX = df.iloc[:,:]","97865d38":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)","15ef2d5e":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,y.values,test_size = 0.02,random_state = 5)","1429a014":"from xgboost import XGBClassifier","6337d754":"classifier = XGBClassifier()\nclassifier.fit(x_train,y_train)","235f68e7":"predict = classifier.predict(x_test)","b7dfb484":"from sklearn.metrics import confusion_matrix,accuracy_score","21120114":"sns.heatmap(confusion_matrix(y_test,predict),annot=True)","7d49b1ca":"accuracy_score(y_test,predict)*100","e9c1956b":"Enjoy data science ...","3679d10f":"relate height and weight using BMI","536dbfa9":"##### Thus we can convert features into new feature , for example height,weight we can use BMI,reducing our dimension of dataset."}}