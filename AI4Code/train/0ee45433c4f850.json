{"cell_type":{"ac8b765c":"code","ebd51215":"code","f3ae355e":"code","6041980f":"code","83032179":"code","0d8cdffa":"code","43c305c9":"code","4c9eb742":"code","a3ad0587":"code","11d0d096":"code","42707ef3":"code","dcc46638":"code","2e611d3e":"code","0ae1e93e":"code","14195891":"code","c2d259cc":"code","a0f08b48":"code","60a7970b":"code","b0868ee3":"code","5bc2296a":"code","f2753d93":"code","be8e8364":"code","06113934":"code","32703fc7":"code","c1decadf":"code","60913b13":"code","0cd97e14":"code","ef8d1b07":"code","cda51e24":"code","3416032d":"code","ba817879":"code","a109fd5e":"code","779b4e63":"markdown","d5fbfd61":"markdown","1a268aff":"markdown","d25e3e64":"markdown","217cb6ab":"markdown"},"source":{"ac8b765c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom keras.utils import to_categorical\nfrom sklearn import preprocessing\nfrom collections import Counter\nfrom sklearn.datasets import make_classification\nfrom matplotlib import pyplot\nfrom numpy import where\nfrom mpl_toolkits import mplot3d\nfrom sklearn.decomposition import PCA","ebd51215":"df=pd.read_csv('..\/input\/automobile-dataset\/Automobile_data.csv')","f3ae355e":"df.head()","6041980f":"targets=df['symboling']","83032179":"X=df.drop(columns='symboling')","0d8cdffa":"X.head(3)","43c305c9":"X.keys()","4c9eb742":"targets.head(3)","a3ad0587":"plt.hist(np.array(targets))","11d0d096":"print(X.shape)\nprint(f'there are {X.shape[0]} samples along with {X.shape[1]} features')","42707ef3":"sns.set()","dcc46638":"def forma(x):\n\n    k=0\n    for i in x:\n        if len(i)>3:\n            x[k]=i[0:1]\n        k+=1\n    return x\n                \n                \n        \n        ","2e611d3e":"X.info()","0ae1e93e":"sub=plt.subplots(5,5,figsize=(20,20))[1]\nkeys=list(X.keys())\nkey=0\nfor y in range(len(sub)):\n    for x in range(len(sub[y])):\n        g=np.array(X[keys[key]])\n      \n        \n        \n        sns.histplot(g,ax=sub[y,x])\n        \n        key+=1\n        \n       \n    ","14195891":"for key in X.keys():\n    le = preprocessing.LabelEncoder()\n    X[key]=le.fit_transform(X[key])","c2d259cc":"X.head()","a0f08b48":"sub=plt.subplots(5,5,figsize=(20,20))[1]\nkeys=list(X.keys())\nkey=0\nfor y in range(len(sub)):\n    for x in range(len(sub[y])):\n        \n        sub[y,x].scatter(X[keys[key]],targets)\n        sub[y,x].set_xlabel(keys[key])\n        key+=1\n        \n       \n    ","60a7970b":"\npca = PCA(n_components=2)\nxs=pca.fit_transform(np.array(X))","b0868ee3":"xs.shape","5bc2296a":"fig = plt.figure()\nax = plt.axes(projection='3d')\nax.scatter3D(xs[:,0],xs[:,1],targets)","f2753d93":"from sklearn.decomposition import PCA\npca = PCA(n_components=1)\nxs=pca.fit_transform(np.array(X))","be8e8364":"plt.scatter(xs,targets)","06113934":"hist=dict()\nfor value in targets:\n    if value in hist.keys():\n        hist[value]*=targets.shape[0]\n      \n        hist[value]+=1\n        hist[value]\/=targets.shape[0]\n    else:\n        hist[value]=1\/targets.shape[0]\nfor key,value in zip(hist.keys(),hist.values()):\n    print(f'percentage of target {key} is {value*100} ')","32703fc7":"\n# define dataset\nx,y=np.array(X),np.array(targets)","c1decadf":"x.shape","60913b13":"from imblearn.over_sampling import SMOTE\n\n# transform the dataset\noversample = SMOTE(k_neighbors=2)\nX, y = oversample.fit_resample(x, targets)","0cd97e14":"print(f'created {X.shape[0]} samples from {x.shape[0]}')","ef8d1b07":"X.shape","cda51e24":"y.shape","3416032d":"sns.histplot(y)","ba817879":"targets=y","a109fd5e":"hist=dict()\nfor value in targets:\n    if value in hist.keys():\n        hist[value]*=targets.shape[0]\n      \n        hist[value]+=1\n        hist[value]\/=targets.shape[0]\n    else:\n        hist[value]=1\/targets.shape[0]\nfor key,value in zip(hist.keys(),hist.values()):\n    print(f'percentage of target {key} is {value*100} ')","779b4e63":"# PCA","d5fbfd61":"# Data ","1a268aff":"# SMOTE for fixing imbalance","d25e3e64":"# EDA","217cb6ab":"# Import"}}