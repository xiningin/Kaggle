{"cell_type":{"23f2bad0":"code","285ae1e2":"code","ad6d715d":"code","7c1b8523":"markdown","a4b0254e":"markdown"},"source":{"23f2bad0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","285ae1e2":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","ad6d715d":"train_df\ntrain_df.info()\ntrain_df.describe()\ntest_df\ntest_df.info()\ntest_df.describe()","7c1b8523":"# EDA\n\nI wonder if I can do it in R on Kaggle.","a4b0254e":"I actually ended up doing my EDA (EDV, really) in R in this [notebook](https:\/\/www.kaggle.com\/kalebcoberly\/titanic-r-eda), and returning to this [notebook](https:\/\/www.kaggle.com\/kalebcoberly\/titanic-python-model) to engineer my ML model.\n\n# First Thoughts\n\nIs this split stratified well? It looks like it, and I can't change it, so I won't check further for this practice project.\n\nTarget class is a little skewed, 38% survival, so I'll focus on survival recall, fatality precision, and F1.\n\n\n* PassengerID: Discard, serial ID, doesn't look to encode anything by proxy. I'll leave it in for now so I can confirm my assumption when I check correlations.\n\n* Pclass: This is a ranked variable, so I think I'll leave it as int for sklearn, right? Am I going to scale it? The distance is meaningful in a way.\n    * I'm guessing this could be a significant predictor for a couple of different reasons. One, privilege. Two, location on boat might be somewhat determined by this and would probably trump privilege.\n    * No missing any values.\n\n\n* Name: Discard. If I were investing a lot into this I would try to get at what might be encoded in a name\/title, like race\/ethnicity, social network within the boat, etc.\n\n\n* Sex: Leave as object? bool? int? Maybe depends on algorithm I select. Can it handle objects? bools? ints? Would it process faster as an int or bool? Would it falsely infer rank with int? Would it cast to float? Even if leaving as object, transform to single characters for faster processing?\n    * I'm guessing women had a better chance due to the \"women and children first\" lifeboat ethic.\n    * No missing values, so I hope so.\n\n\n* Age: Leave as float.\n    * Again, \"women and children first,\" so probably a good indicator, but maybe not so straight forward or linear. How did the elderly do?\n    * Missing about 25% of the values. Imputation might depend on what I find out about the distribution. Consider just dropping missing values. Consider multivariate iterative imputation using only SibSp and Parch.\n\n\n* SibSp: Leave as int.\n    * I'm guessing this will be a decent predictor; family looking out for you might better your chances.\n    * Also, it might overlap with age and\/or sex a little. Passengers with multiple siblings aboard are maybe more likely to be children. Passengers with no siblings or spouses are probably more likely to be adult men in that historical context. Consider PCA.\n    * Surprisingly no missing values. Are missing values encoded as 0s?\n\n\n* Parch: Leave as int.\n    * Like SibSp, I'm guessing this will be a decent predictor; family looking out for you might better your chances.\n    * Again, passengers with no parents or children are probably more likely to be adult men in that historical context. Consider PCA.\n    * Surprisingly no missing values. Are missing values encoded as 0s?\n\n\n* Ticket: Discard. If I were investing more into this, I would look for what might be encoded in tickets, like location on boat.\n\n\n* Fare: Leave as float. Is this the total for all the tickets in a party, or just for this passenger's ticket?\n    * Probably contains some of the same information that Pclass does. Consider PCA.\n    * One missing value in test set. Why? Impute to mode\/median? iterative multivariate?\n\n\n* Cabin: Leave as object.\n    * Probably a good encoder of location on boat, and thus survival chances.\n    * May encode race\/ethnicity and socioeconomic status.\n    * Sadly, missing about 75% of values. Did 75% of passengers just not have a cabin at all? Did many of them share a cabin with someone in their party who *was* assigned a cabin on their ticket?\n    * Probably discard, not worth the trouble for this project.\n\n\n* embarked: Consider casting to int.\n    * May encode race\/ethnicity and socioeconomic status.\n    * Two missing values in train set. Why? Impute to mode? iterative multivariate?"}}