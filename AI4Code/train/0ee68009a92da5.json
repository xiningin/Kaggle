{"cell_type":{"f9e37e5e":"code","71ccef0b":"code","2911cc73":"code","0a824425":"code","655c2ce7":"code","ed3d6a47":"code","889aed73":"code","191cd846":"code","8bddceb8":"code","59bcf817":"code","4c529b47":"code","9f9cdfa3":"code","35a90719":"code","8510d58c":"markdown","1ebfd4d7":"markdown","f9ef33e6":"markdown","5ef2889b":"markdown","b64216aa":"markdown","d0cd66be":"markdown","8296e927":"markdown","c61884f9":"markdown","9c57bfee":"markdown","11329de8":"markdown","2dc44f5e":"markdown","a2edb19f":"markdown","95b42e55":"markdown","a53a43c5":"markdown","d602f0ee":"markdown","10cbac9d":"markdown","b976ba19":"markdown","0db786c1":"markdown","559d2bfe":"markdown","d90f9827":"markdown","d63c5aee":"markdown"},"source":{"f9e37e5e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nnp.random.seed(823)\ntf.random.set_seed(188)\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation, Dropout, Conv2D, MaxPool2D, Flatten, BatchNormalization\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img\nfrom sklearn.model_selection import train_test_split","71ccef0b":"datagen_train = ImageDataGenerator(rescale = 1.\/255, #1\/255 to scale\/normalize the pixel values\n                                   shear_range = 0.2, #shear intensity\n                                   rotation_range = 5, #random rotation (0 to 100 degrees)\n                                   zoom_range = 0.2, #random zooming\n                                   width_shift_range=0.1,  #random horizontal shifting\n                                   height_shift_range=0.1)  #random vertical shifting \n                                   #horizontal_flip=True  #random horizontal flipping\n                                   #vertical_flip=True)  #random vertical flipping)\n\ntraining_set = datagen_train.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/train',\n                                                 target_size = (300, 300),\n                                                 batch_size = 32,\n                                                 shuffle = True,\n                                                 seed = 823,\n                                                 color_mode = 'grayscale',\n                                                 class_mode = 'binary')","2911cc73":"datagen_val = ImageDataGenerator(rescale = 1.\/255)\nval_set = datagen_val.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/val',\n                                            target_size = (300, 300),\n                                            batch_size = 32,\n                                            shuffle = True,\n                                            seed = 823,\n                                            color_mode = 'grayscale',\n                                            class_mode = 'binary')","0a824425":"datagen_test = ImageDataGenerator(rescale = 1.\/255)\ntest_set = datagen_test.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/test',\n                                            target_size = (300, 300),\n                                            batch_size = 52,\n                                            shuffle = False,\n                                            seed = 823,\n                                            color_mode = 'grayscale',\n                                            class_mode = 'binary')","655c2ce7":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6,figsize=(30, 10))\nimg_normal1 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0122-0001.jpeg')\nimg_normal2 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0152-0001.jpeg')\nimg_normal3 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0119-0001.jpeg')\nimg_normal4 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0145-0001.jpeg')\nimg_normal5 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0151-0001.jpeg')\nimg_normal6 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/IM-0166-0001.jpeg')\nax1.imshow(img_normal1)\nax2.imshow(img_normal2)\nax3.imshow(img_normal3)\nax4.imshow(img_normal4)\nax5.imshow(img_normal5)\nax6.imshow(img_normal6)\nprint(\"Normal Chest X-Rays\")\nplt.show()","ed3d6a47":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6,figsize=(30, 10))\nimg_normal1 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1004_bacteria_2935.jpeg')\nimg_normal2 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1007_bacteria_2938.jpeg')\nimg_normal3 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1009_virus_1694.jpeg')\nimg_normal4 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1000_bacteria_2931.jpeg')\nimg_normal5 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1018_virus_1706.jpeg')\nimg_normal6 = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/person1020_bacteria_2951.jpeg')\nax1.imshow(img_normal1)\nax2.imshow(img_normal2)\nax3.imshow(img_normal3)\nax4.imshow(img_normal4)\nax5.imshow(img_normal5)\nax6.imshow(img_normal6)\nprint(\"Chest X-Rays of people diagnosed with Pneumonia\")\nplt.show()","889aed73":"np.random.seed(823)\ntf.random.set_seed(188)\n\n#Initialize\ncnn = tf.keras.models.Sequential()\n\n#First Convolutional Layer\ncnn.add(Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[300, 300, 1]))\ncnn.add(MaxPool2D(pool_size=2, strides=2))\n\n\n#Second Convolutional Layer\ncnn.add(Conv2D(filters = 64, kernel_size=3, activation='relu'))\ncnn.add(MaxPool2D(pool_size=2, strides=2))\n\n\n#Third Convolutional Layer\ncnn.add(Conv2D(filters = 128, kernel_size=3, activation='relu'))\ncnn.add(MaxPool2D(pool_size=2, strides=2))\n\n#Flatten Layer\ncnn.add(Flatten())\n\n#Full Connection\ncnn.add(Dense(units=256, activation='relu'))\ncnn.add(Dropout(0.1))\n\n#Output Layer\ncnn.add(Dense(units=1, activation='sigmoid'))\n\n#Compile\ncnn.compile(optimizer = 'adam', \n            loss = 'binary_crossentropy', \n            metrics = ['accuracy'])\n\n#Summary\ncnn.summary()","191cd846":"cnn.fit(x = training_set, validation_data = val_set, epochs = 9, shuffle = False)","8bddceb8":"cnn_lossacc = pd.DataFrame(cnn.history.history)\nplt.rcParams['figure.figsize'] = (12, 8)\nsns.set_style('white')\ncnn_lossacc.plot()","59bcf817":"test_set.reset()\npredictions_test = (cnn.predict(test_set,verbose=True) > 0.5).astype(\"int32\")","4c529b47":"print('Testing Accuracy: ',(cnn.evaluate(test_set))[1]*100, '%')","9f9cdfa3":"labels = (training_set.class_indices)\nlabels = dict((i,j) for j,i in labels.items())\nprint(labels)","35a90719":"from sklearn.metrics import classification_report,confusion_matrix\ny_true = np.array([0] * 234 + [1] * 390) #234 Normal, #390 Pneumonia\ndata = confusion_matrix(y_true, predictions_test)\ndf_cm = pd.DataFrame(data, columns=np.unique(y_true), index = np.unique(y_true))\ndf_cm.index.name = 'Predicted'\ndf_cm.columns.name = 'Actual'\nplt.figure(figsize = (10,7))\nsns.set(font_scale=1.5)\nax = sns.heatmap(df_cm,cmap = 'Greens', annot=True,fmt = '.5g',annot_kws={\"size\": 16})# font size\nax.set_title('Confusion Matrix')\nax.xaxis.set_ticklabels(['NORMAL', 'PNEUMONIA']); ax.yaxis.set_ticklabels(['NORMAL', 'PNEUMONIA']);\n#For cmaps:\n#https:\/\/matplotlib.org\/3.1.1\/gallery\/color\/colormap_reference.html\nprint(\"Classification Report: \")\nprint(classification_report(y_true,predictions_test))","8510d58c":"### Test Set & Validation Set Processing","1ebfd4d7":"##### This step is necessary to make a more robust classifier.","f9ef33e6":"### Import Libraries","5ef2889b":"### Taking a look at some xray images from the training set","b64216aa":"## Data Preprocessing","d0cd66be":"##### This is what Chest X-rays of people diagnosed with Pneumonia look like","8296e927":"### Model Summary","c61884f9":"##### Notice that augmentation is not performed on the Validation set & Test set","9c57bfee":"##### See the Labels","11329de8":"### Model Evaluation","2dc44f5e":"##### Quick Peek at Accuracy on Test Set","a2edb19f":"### Training the CNN and Evaluating using the Validation Set","95b42e55":"## CNN-From-Scratch","a53a43c5":"### Training Set Processing with Data Augmentation","d602f0ee":"##### People with pneumonia tend to have chest x-ray images that have thick opacities. Let's see if how our CNN classifier performs","10cbac9d":"### In this very simple notebook, a CNN-From-Scratch was utilized and was able to achieve 91.5% accuracy on the test data. \n##### I noticed that other solutions required resampling all the images into new directories to solve the dataset imbalance problem. But for this kernel, I applied the solution to the current directory structure.","b976ba19":"##### For this particular problem, given that 0 = Normal and 1 = Pneumonia:\n##### It is better to have a network that would get more False Positives (Predicted Pneumonia even if it really is Normal) than False Negatives (Predicted Normal even if there really is Pneumonia).","0db786c1":"### Predict on Test Set","559d2bfe":"### Model Loss & Accuracy Plot","d90f9827":"### Classification Report and Confusion Matrix","d63c5aee":"##### This is what Normal Chest X-rays look like"}}