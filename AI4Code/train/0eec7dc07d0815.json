{"cell_type":{"1291790b":"code","5be3e9af":"code","29a2446a":"code","56502e2d":"code","77434f5b":"code","4a3b4346":"code","7fea5206":"code","54b338a3":"code","09ddd725":"code","20515262":"markdown"},"source":{"1291790b":"# Librabry\nimport pandas as pd \nfrom sklearn.model_selection import train_test_split\nfrom sklearn import neighbors, linear_model\nfrom sklearn.metrics import classification_report\nfrom sklearn.datasets import  load_breast_cancer","5be3e9af":"lbc = load_breast_cancer()","29a2446a":"X = lbc.data\ny = lbc.target","56502e2d":"# split the datasets\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=1)","77434f5b":"# now Apply KNN\n\nknn =neighbors.KNeighborsClassifier(n_neighbors = 3)\n#Training the machine with our model\nknn_model_1 = knn.fit(X_train, y_train)\nprint('k-NN accuracy for test set: %f' % knn_model_1.score(X_test, y_test))","4a3b4346":"#Classification report\ny_test, y_pred = y_test, knn_model_1.predict(X_test)\nprint(classification_report(y_test, y_pred))","7fea5206":"from sklearn import metrics\nfrom sklearn.model_selection import GridSearchCV\nk_range = range(1, 26)\n\n# We can create Python dictionary using [] or dict()\nscores = []\n\n# We use a loop through the range 1 to 26\n# We append the scores in the dictionary\nfor k in k_range:\n    knn = neighbors.KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    scores.append(metrics.accuracy_score(y_test, y_pred))\n\nprint(scores)","54b338a3":"params = {\"n_neighbors\": [6,8,10,12,14,16,18,20],\n          'leaf_size':list(range(1,50,5))}\nclf = GridSearchCV(knn, param_grid=params,scoring=\"roc_auc\", verbose=1,cv=3,n_jobs=-1)\nclf.fit(X_train, y_train)\nprint(clf.best_score_)\nprint(clf.best_estimator_)\nprint(clf.best_params_)","09ddd725":"# import Matplotlib (scientific plotting library)\nimport matplotlib.pyplot as plt\n\n# allow plots to appear within the notebook\n%matplotlib inline\n\n# plot the relationship between K and testing accuracy\nplt.plot(k_range, scores)\nplt.xlabel('Value of K for KNN')\nplt.ylabel('Testing Accuracy')","20515262":"4. Use breast cancer dataset, build classification model using k-nn classifier for predicting whether \na person suffers from cancer or not.\n - Find the best value of \u2018k\u2019 for breast cancer dataset. \n  -Evaluate \nthe performance of your model for different \u2018k\u2019 values"}}