{"cell_type":{"28f3a898":"code","0f6e4396":"code","0b8ad3ab":"code","7dfa040a":"code","907a9c2c":"code","44c1bb61":"code","c04ec994":"code","9964c918":"code","a425c788":"code","20f66114":"code","c3525469":"code","bf7906de":"code","9bcbeaa8":"markdown","e1390714":"markdown","485e054a":"markdown","376088ea":"markdown","79bd3327":"markdown","2dcbb672":"markdown","6358ef4c":"markdown","56667048":"markdown","3625dade":"markdown","410086a9":"markdown","43fdd29d":"markdown"},"source":{"28f3a898":"%matplotlib notebook\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\n#\/kaggle\/input\/fruit_data_with_colors.txt\nfruits = pd.read_table('..\/input\/fruit-data-with-colors-1applied-machine-learning\/fruit_data_with_colors_1.txt')","0f6e4396":"fruits.head()","0b8ad3ab":"# create a mapping from fruit label value to fruit name to make results easier to interpret\nlookup_fruit_name = dict(zip(fruits.fruit_label.unique(), fruits.fruit_name.unique()))   \nlookup_fruit_name","7dfa040a":"# plotting a 3D scatter plot\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection = '3d')\nax.scatter(X_train['width'], X_train['height'], X_train['color_score'], c = y_train, marker = 'o', s=100)\nax.set_xlabel('width')\nax.set_ylabel('height')\nax.set_zlabel('color_score')\nplt.show()","907a9c2c":"# For this example, we use the mass, width, and height features of each fruit instance\nX = fruits[['mass', 'width', 'height']]\ny = fruits['fruit_label']\n\n# default is 75% \/ 25% train-test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)","44c1bb61":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors = 5)","c04ec994":"knn.fit(X_train, y_train)","9964c918":"knn.score(X_test, y_test)","a425c788":"# first example: a small fruit with mass 20g, width 4.3 cm, height 5.5 cm\nfruit_prediction = knn.predict([[20, 4.3, 5.5]])\nlookup_fruit_name[fruit_prediction[0]]","20f66114":"# second example: a larger, elongated fruit with mass 100g, width 6.3 cm, height 8.5 cm\nfruit_prediction = knn.predict([[100, 6.3, 8.5]])\nlookup_fruit_name[fruit_prediction[0]]","c3525469":"k_range = range(1,20)\nscores = []\n\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors = k)\n    knn.fit(X_train, y_train)\n    scores.append(knn.score(X_test, y_test))\n\nplt.figure()\nplt.xlabel('k')\nplt.ylabel('accuracy')\nplt.scatter(k_range, scores)\nplt.xticks([0,5,10,15,20]);","bf7906de":"t = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2]\n\nknn = KNeighborsClassifier(n_neighbors = 5)\n\nplt.figure()\n\nfor s in t:\n\n    scores = []\n    for i in range(1,1000):\n        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1-s)\n        knn.fit(X_train, y_train)\n        scores.append(knn.score(X_test, y_test))\n    plt.plot(s, np.mean(scores), 'bo')\n\nplt.xlabel('Training set proportion (%)')\nplt.ylabel('accuracy');","9bcbeaa8":"### Train the classifier (fit the estimator) using the training data","e1390714":"### How sensitive is k-NN classification accuracy to the train\/test split proportion?","485e054a":"### Estimate the accuracy of the classifier on future data, using the test data","376088ea":"### Import required modules and load data file","79bd3327":"## Applied Machine Learning: A simple classification task","2dcbb672":"---\n\n_You are currently looking at **version 1.0** of this notebook. To download notebooks and datafiles, as well as get help on Jupyter notebooks in the Coursera platform, visit the [Jupyter Notebook FAQ](https:\/\/www.coursera.org\/learn\/python-machine-learning\/resources\/bANLa) course resource._\n\n---","6358ef4c":"The file contains the mass, height, and width of a selection of oranges, lemons and apples. The heights were measured along the core of the fruit. The widths were the widest width perpendicular to the height.","56667048":"### How sensitive is k-NN classification accuracy to the choice of the 'k' parameter?","3625dade":"### Create classifier object","410086a9":"### Create train-test split","43fdd29d":"### Use the trained k-NN classifier model to classify new, previously unseen objects"}}