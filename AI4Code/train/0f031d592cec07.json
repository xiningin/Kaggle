{"cell_type":{"a1861fc3":"code","de9ebcb5":"code","26086e79":"code","5ff2968f":"code","c2ed3476":"code","29f85f95":"code","c64f233d":"code","5b491ef3":"code","f4720253":"code","5808bfd2":"code","a7a8b20c":"code","d6fea11c":"code","a1798ff9":"code","08670d39":"code","2e5b79e6":"code","989183e7":"code","6851d907":"code","e3c81182":"code","ff11cf24":"code","a276f4a2":"code","e4b66bea":"code","d2f9769a":"code","a77e6c28":"code","870754c7":"code","854bf6ee":"code","a07796a3":"code","3be89475":"code","e3b3ee49":"code","557da451":"code","e9053bf1":"code","fcdeb3cd":"code","92e72aae":"code","faf6fa7a":"code","7d78d04b":"code","1281b251":"code","2b3e4dd0":"code","f9ec43f2":"code","6c8678ae":"code","67d6e5cd":"code","fd6e9fb3":"code","da5586e5":"code","43376c63":"code","5e93a704":"code","a619d623":"code","76b8f058":"code","f89ea2cd":"code","65979974":"code","7e3fe4e0":"code","9e2f8313":"code","ff34dd51":"markdown","75a518be":"markdown","7027cc3b":"markdown","8142ed4a":"markdown","0ca7a3f5":"markdown","a0449599":"markdown","7cd3db46":"markdown","69faf7dd":"markdown","65ed823f":"markdown","1d6bb363":"markdown","9d79afd0":"markdown","17ca8aff":"markdown","57b75c51":"markdown","d8e045a3":"markdown","53d0879b":"markdown","321c074f":"markdown","e1b35cab":"markdown","2980af3f":"markdown","b6b23f1b":"markdown","9371ae6c":"markdown","55683acf":"markdown","2bcd8eb3":"markdown","d9f50548":"markdown","ac437fc6":"markdown","5433fce4":"markdown","cee64622":"markdown"},"source":{"a1861fc3":"##import all your libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","de9ebcb5":"##read data\ndata=pd.read_csv('..\/input\/travel-insurance-prediction-data\/TravelInsurancePrediction.csv')","26086e79":"##head of the data\ndata.head()","5ff2968f":"##drop unnecessary columns\ndata.drop('Unnamed: 0',axis=1,inplace=True)","c2ed3476":"data.shape","29f85f95":"##check null value percentage\nround(data.isnull().sum()*100\/data.shape[0],2)","c64f233d":"data.info()","5b491ef3":"\ndata['Employment Type']=data['Employment Type'].map({'Private Sector\/Self Employed':1,'Government Sector':0})\ndata['GraduateOrNot']=data['GraduateOrNot'].map({'Yes':1,'No':0})","f4720253":"data['FrequentFlyer']=data['FrequentFlyer'].map({'No':0,'Yes':1})","5808bfd2":"data['EverTravelledAbroad']=data['EverTravelledAbroad'].map({'No':0,'Yes':1})","a7a8b20c":"data.head()","d6fea11c":"sns.countplot(data['TravelInsurance'],palette=\"Set3\")\nplt.xlabel('TravelInsurance')\nplt.ylabel('count')\nplt.show()","a1798ff9":"sns.countplot(data['EverTravelledAbroad'],palette=\"husl\")\nplt.show()","08670d39":"sns.countplot(data['ChronicDiseases'])\nplt.show()","2e5b79e6":"sns.countplot(data['FrequentFlyer'],palette='Paired')","989183e7":"sns.countplot(data['GraduateOrNot'])","6851d907":"plt.figure(figsize=(10,7))\nsns.heatmap(data.corr(),annot=True)","e3c81182":"sns.boxplot(data['TravelInsurance'],data['Age'])\nplt.show()","ff11cf24":"sns.countplot(data['GraduateOrNot'],hue=data['TravelInsurance'])\nplt.show()","a276f4a2":"sns.countplot(data['FamilyMembers'],hue=data['TravelInsurance'],palette='magma')\nplt.show()","e4b66bea":"sns.countplot(data['FrequentFlyer'],hue=data['TravelInsurance'])\nplt.show()","d2f9769a":"for i in data.columns:\n    if i!='TravelInsurance':\n        plt.figure(figsize=(10,5))\n        sns.countplot(data[i],hue=data[\"TravelInsurance\"],palette=\"Set2\")\n        plt.show()\n\n    ","a77e6c28":"##independent variabels\nX=data.drop('TravelInsurance',axis=1)","870754c7":"##target variabl\ny=data['TravelInsurance']\n","854bf6ee":"#check classses\ny.value_counts()","a07796a3":"from sklearn.model_selection import train_test_split","3be89475":"X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.8,random_state=42,shuffle=True)","e3b3ee49":"X_train.shape,y_train.shape,X_test.shape,y_test.shape","557da451":"from sklearn.ensemble import RandomForestClassifier","e9053bf1":"rfc=RandomForestClassifier(n_estimators=500,max_features=5,min_samples_split=50)","fcdeb3cd":"rfc.fit(X_train,y_train)","92e72aae":"##make predictions\ny_test_pred=rfc.predict(X_test)","faf6fa7a":"##check model performance\nfrom sklearn.metrics import classification_report","7d78d04b":"print(classification_report(y_test_pred,y_test))","1281b251":"from sklearn import metrics\nmetrics.roc_auc_score(y_test_pred,y_test)","2b3e4dd0":"metrics.accuracy_score(y_test_pred,y_test)","f9ec43f2":"##confusion matrix \nmetrics.confusion_matrix(y_test_pred,y_test)","6c8678ae":"## using optuna\n!pip install optuna","67d6e5cd":"import optuna\nfrom sklearn import ensemble\nfrom sklearn import linear_model\nfrom sklearn import datasets\nfrom sklearn import model_selection","fd6e9fb3":"def objective(trial):\n\n    classifier_name = trial.suggest_categorical(\"classifier\", [\"LogReg\", \"RandomForest\"])\n    \n    # Step 2. Setup values for the hyperparameters:\n    if classifier_name == 'LogReg':\n        logreg_c = trial.suggest_float(\"logreg_c\", 1e-10, 1e10, log=True)\n        classifier_obj = linear_model.LogisticRegression(C=logreg_c)\n    else:\n        rf_n_estimators = trial.suggest_int(\"rf_n_estimators\", 10, 1000)\n        rf_max_depth = trial.suggest_int(\"rf_max_depth\", 2, 32, log=True)\n        classifier_obj = ensemble.RandomForestClassifier(\n            max_depth=rf_max_depth, n_estimators=rf_n_estimators\n        )\n\n    # Step 3: Scoring method:\n    score = model_selection.cross_val_score(classifier_obj, X, y, n_jobs=-1, cv=3)\n    accuracy = score.mean()\n    return accuracy\n\n# Step 4: Running it\nstudy = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=100)","da5586e5":"# Getting the best trial:\nprint(f\"The best trial is : \\n{study.best_trial}\")","43376c63":"# Getting the best score:\nprint(f\"The best value is : \\n{study.best_value}\")","5e93a704":"print(f\"The best parameters are : \\n{study.best_params}\")","a619d623":"rfc2=RandomForestClassifier(n_estimators=395,max_depth=6)","76b8f058":"rfc2.fit(X_train,y_train)","f89ea2cd":"y_test_pred=rfc2.predict(X_test)","65979974":"metrics.roc_auc_score(y_test,y_test_pred)","7e3fe4e0":"metrics.confusion_matrix(y_test,y_test_pred)","9e2f8313":"metrics.accuracy_score(y_test_pred,y_test)","ff34dd51":"- we have more data of customers who don't have chronicdisease","75a518be":"### 4. FrequentFlyer & TravelInsurance","7027cc3b":"### 2. GraduateOrNot & TravelInsurance","8142ed4a":"- look's like travel insurance column is positively corelated with evertraveled abroad column","0ca7a3f5":"## Context\nA Tour & Travels Company Is Offering Travel Insurance Package To Their Customers.\nThe New Insurance Package Also Includes Covid Cover.\nThe Company Requires To Know The Which Customers Would Be Interested To Buy It Based On Its Database History.\nThe Insurance Was Offered To Some Of The Customers In 2019 And The Given Data Has Been Extracted From The Performance\/Sales Of The Package During That Period.\nThe Data Is Provided For Almost 2000 Of Its Previous Customers And You Are Required To Build An Intelligent Model That Can Predict If The Customer Will Be Interested To Buy The Travel Insurance Package Based On Certain Columns.","a0449599":"## Convert categorical to numerics","7cd3db46":"### 1. TravelInsurance","69faf7dd":"### 2. EverTravelledAbroad","65ed823f":"## Let's Start","1d6bb363":"- we have data of more number of people who did not bought the travelinsurance","9d79afd0":"### cheking all variables","17ca8aff":"### 5. GraduateOrNot","57b75c51":"- we have more more data of customers who are not traveled abroad ","d8e045a3":"## RandomForest Classifier","53d0879b":"### Corelation between all variables","321c074f":"## Let's do some EDA\n### Univariate Analysis","e1b35cab":"- we have more data of customers who don't frequently fly","2980af3f":"### 4. FrequentFlyer","b6b23f1b":"### 3.ChronicDiseases","9371ae6c":"## Bivariate analysis\n### 1. TravelInsurance & Age","55683acf":"### Train test split","2bcd8eb3":"- we have more data of customers who completed their graduation","d9f50548":"![171116-better-stock-woman-traveling-airport-ew-624p.jpg](attachment:b8c6d477-abe1-4c6f-9d0b-e5b5f5020c48.jpg)","ac437fc6":"### 3. FamilyMembers & TravelInsurance","5433fce4":"### divide into X and y","cee64622":"- look's like graduates are more tend to buy travelinsurance"}}