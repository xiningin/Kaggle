{"cell_type":{"59183daf":"code","b09b32ce":"code","a17ad14d":"code","84f0dd2d":"code","08f906e1":"code","b6616e49":"code","5adaf80b":"code","1d60e491":"code","69ccf8c8":"code","e3b84040":"code","f01739af":"code","e7bf0d01":"code","51b6da4a":"code","a6ab75f5":"code","326d2938":"code","46fd56e7":"code","0c990be3":"code","6bbc93a8":"code","9c3af35c":"code","ef591c25":"code","e590ee04":"code","fd9dd81a":"code","566afc33":"code","6028708b":"code","68d13ea5":"code","cd4ed3a8":"code","925a5415":"code","aff65209":"code","3276a6d4":"code","d1795b76":"code","c47dad7e":"code","eeb2da72":"code","e5333c11":"code","93125758":"code","112cf347":"code","25ba196b":"code","4d0ebc0f":"code","42b703a6":"code","d8de8374":"code","3729fbd6":"code","c6460924":"code","9cd07eb9":"code","46eef1aa":"code","43f0e32d":"code","56619006":"code","da0dbba4":"code","7ee6d402":"code","a1532495":"markdown","61127196":"markdown"},"source":{"59183daf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b09b32ce":"import pandas as pd \nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter('ignore')\n","a17ad14d":"pd.set_option('display.max_columns',400)\ndf = pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\" )","84f0dd2d":"df.head()","08f906e1":"list(df.columns)","b6616e49":"df.info()","5adaf80b":"df.duplicated().sum()","1d60e491":"df.drop_duplicates(inplace=True)","69ccf8c8":"df.isnull().sum()","e3b84040":"headers = {}\nfor col in df.columns:\n    headers.update({col:f\"{col} : {df.loc[0,col]}\"})","f01739af":"headers","e7bf0d01":"df = df.iloc[1:,:].copy()\ndf = df[['Time from Start to Finish (seconds)','Q1','Q2','Q3','Q4','Q5','Q6','Q7_Part_1',\n       'Q8','Q9_Part_1','Q11','Q13','Q14_Part_1']]","51b6da4a":"df['Q1'].unique()","a6ab75f5":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q1'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q1'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","326d2938":"df['Q2'].unique()","46fd56e7":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q2'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q2'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","0c990be3":"df['Q3'].unique()","6bbc93a8":"df['Q3'].value_counts()","9c3af35c":"plt.figure(figsize=(25,7))\nax = df['Q3'].value_counts()[:10].plot(kind='bar')\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q3'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","ef591c25":"df['Q4'].unique()","e590ee04":"df['Q4'].fillna(\"I prefer not to answer\" , inplace=True)","fd9dd81a":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q4'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q4'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","566afc33":"df['Q5'].unique()","6028708b":"df['Q5'].fillna(\"Other\" , inplace=True)","68d13ea5":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q5'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q5'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","cd4ed3a8":"df['Q6'].unique()","925a5415":"df['Q6'].fillna(\"I have never written code\" ,inplace=True)","aff65209":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q6'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q6'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","3276a6d4":"df['Q7_Part_1'].unique()","d1795b76":"df['Q7_Part_1'].fillna('others' ,inplace=True)","c47dad7e":"q7= df['Q7_Part_1'].value_counts()\nplt.figure(figsize=(25,7))\nplt.pie(q7.values ,labels=q7.index ,explode=[0,0.02], autopct=\"%.1f%%\")\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title(headers['Q7_Part_1'])\nplt.show()","eeb2da72":"df['Q8'].unique()","e5333c11":"df['Q8'].fillna('Other',inplace=True)\ndf['Q8'].replace({'None':\"Other\"}, inplace=True)","93125758":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q8'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q8'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","112cf347":"df['Q9_Part_1'].unique()","25ba196b":"df['Q9_Part_1'].fillna('Others' ,inplace=True)\ndf['Q9_Part_1'].replace({'Jupyter (JupyterLab, Jupyter Notebooks, etc) ':\"Jupyter Notebooks\"} , inplace=True)","4d0ebc0f":"q9 = df['Q9_Part_1'].value_counts()\nplt.figure(figsize=(25,7))\nplt.pie(q9.values ,labels=q9.index , explode=[0,0.02]  ,autopct='%.1f%%')\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title(headers['Q9_Part_1'])\nplt.show()","42b703a6":"df['Q11'].unique()","d8de8374":"df['Q11'].fillna('Other',inplace=True)\ndf['Q11'].replace({\"A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)\":\"Cloud Platform\" ,\n                    \"A personal computer or laptop\":\"Personal Laptop\" ,\n                      \"A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)\":\"DL Workstations\" , \n                        \"None\":\"Other\"},inplace=True)","3729fbd6":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q11'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q11'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","c6460924":"headers['Q13']","9cd07eb9":"df['Q13'].unique()","46eef1aa":"df['Q13'].fillna('Never',inplace=True)","43f0e32d":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q13'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q13'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","56619006":"df['Q14_Part_1'].unique()","da0dbba4":"df['Q14_Part_1'].fillna('Other',inplace=True)","7ee6d402":"plt.figure(figsize=(10,7))\nax = sns.countplot(df['Q14_Part_1'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q14_Part_1'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","a1532495":"# Read Data","61127196":"# Imports"}}