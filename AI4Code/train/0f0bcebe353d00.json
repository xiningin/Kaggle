{"cell_type":{"0708dc2d":"code","fca47136":"code","30c5feba":"code","d5a3867b":"code","4a765242":"code","1af9def1":"code","28d11306":"code","b5060786":"code","6d4cc730":"code","bf2302bd":"code","d23ab1d2":"code","ada1f01e":"code","f47413b2":"code","d165f3f8":"code","89b1ecef":"markdown","ca9eae92":"markdown","7624ad3d":"markdown","a27362fa":"markdown","1b74edb1":"markdown","130acdda":"markdown"},"source":{"0708dc2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fca47136":"# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","30c5feba":"# Importing the dataset\ndataset=pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndataset","d5a3867b":"#now first we will try multiple linear regression to find the relationship between mbap (outcome variable) and sscp & degreep (predictor variables).\nX=dataset.iloc[:,[2,7]].values\nY=dataset.iloc[:,12].values.reshape(-1,1)","4a765242":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=0)","1af9def1":"#fitting multiple linear regression to the training set\nfrom sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(X_train,Y_train)\n\n#predicting the test result\ny_pred=regressor.predict(X_test)\n\ndf = pd.DataFrame({'Actual': Y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf\n","28d11306":"#to find the intercept value we can use intercept_ from sklearn library\nregressor.intercept_","b5060786":"#Let\u2019s check out the coefficients for the predictors:\nregressor.coef_","6d4cc730":"from sklearn.metrics import r2_score\nr2_score(Y_test, y_pred)","bf2302bd":"\nX=dataset.iloc[:,[4,7]].values#now X contain columns hscp and degreep\nY=dataset.iloc[:,12].values.reshape(-1,1)","d23ab1d2":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=0)\n\n#fitting multiple linear regression to the training set\nfrom sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(X_train,Y_train)\n\n#predicting the test result\ny_pred=regressor.predict(X_test)\n\ndf = pd.DataFrame({'Actual': Y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf","ada1f01e":"#to find the intercept value we can use intercept_ from sklearn library\nregressor.intercept_","f47413b2":"#Let\u2019s check out the coefficients for the predictors:\nregressor.coef_","d165f3f8":"from sklearn.metrics import r2_score\nr2_score(Y_test, y_pred)","89b1ecef":"R square value of the model is **0.2670526417462228**","ca9eae92":"As we can see R square value of first model is greater than second one therefor model with mbap (outcome variable) and sscp & degreep (predictor variables) is better than mbap (outcome variable) and hscp & degreep (predictor variables)","7624ad3d":"R square value of the model is **0.17616396722600414**","a27362fa":"Now we will try multiple linear regression to find the relationship between mbap (outcome variable) and hscp & degreep (predictor variables).","1b74edb1":"**Y=39.65+0.123(sscp)+0.2151(degreep)**\n\nThis is the regression equation","130acdda":"**Y=38.56+0.131(hscp)+0.225(degreep)**\n\nThis is the regression equation"}}