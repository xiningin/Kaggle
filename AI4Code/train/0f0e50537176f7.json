{"cell_type":{"628817fd":"code","bc2f32da":"code","670019de":"code","7018a58c":"code","c542e136":"code","cad3904b":"code","8708b781":"code","0fc9a7de":"code","b8eea3b5":"code","86b9c98f":"code","cc407eae":"code","cad6dfe5":"code","6799117d":"code","370144e8":"code","f713ca3b":"code","8f70fef1":"code","e1ab5e88":"code","2d044487":"markdown","f23c70ab":"markdown","fe1b3876":"markdown","5a053e05":"markdown","ae84ecfc":"markdown"},"source":{"628817fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pycountry\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc2f32da":"data = pd.read_csv('..\/input\/gdp-annual-growth-for-each-country-1960-2020\/GDP_annual_growth.csv')","670019de":"data.head()","7018a58c":"for country in data['Country Name'].unique():\n    print(country)","c542e136":"data['Country Code'].unique().size==data['Country Name'].unique().size ","cad3904b":"list(pycountry.countries)","8708b781":"countries_list = [ x.alpha_3 for x in pycountry.countries]\nresult = data['Country Code'].isin(countries_list)\nn=[]\nfor x in range(len(result)):\n    if(result[x]==False):\n        n.append(x)\nlen(n)","0fc9a7de":"only_countries_df = data.drop(n,axis=0)\nonly_countries_df.count()","b8eea3b5":"def get_the_largest_GDP(year):\n    d = only_countries_df.nlargest(10,year)[year].tolist()\n    c = only_countries_df.nlargest(10,year)['Country Name'].tolist()\n    plt.figure(figsize=(7,7))\n    plt.title(label= \"GDP Contribution of the top 10 countries in \" + year, fontsize=20, fontweight=20)\n    plt.pie(d,labels=c, startangle=80)\n    plt.show()","86b9c98f":"get_the_largest_GDP('1960')\nget_the_largest_GDP('1970')\nget_the_largest_GDP('1980')\nget_the_largest_GDP('1990')\nget_the_largest_GDP('2000')","cc407eae":"only_countries_df.set_index('Country Name', inplace= True)\nonly_countries_df.loc['Aruba'][3:64].describe","cad6dfe5":"print(only_countries_df.loc['France'][3:64].describe)","6799117d":"plt.figure(figsize=(30,22))\nplt.title(label= 'France vs. Canada GDP Analysis', fontsize=30, fontweight=20)\nplt.ylabel('GDP in terms of $')\nplt.xlabel('Years',fontsize=25)\nplt.plot(np.arange(1960,2021),only_countries_df.loc['France'][3:64],label='France')\nplt.plot(np.arange(1960,2021),only_countries_df.loc['Canada'][3:64],label='Canada')\nplt.xticks(np.arange(1960,2021),np.arange(1960,2021), rotation=45)\nplt.grid()","370144e8":"def get_the_country_plot(country):\n    print(country + \" GDP Summary\")\n    print()\n    print('Mean : ', end= '')\n    print(only_countries_df.loc[country][3:64].mean())\n    print('Total GDP Until Now: ', end='')\n    print(only_countries_df.loc[country][3:64].sum())\n    print('Maximum GDP: ', end= '')\n    print(only_countries_df.loc[country][3:64].max())\n    print('Minimum GDP: ', end= '')\n    print(only_countries_df.loc[country][3:64].min())\n    plt.figure(figsize=(30,22))\n    plt.title(label= country + ' GDP Analysis', fontsize=30, fontweight=20)\n    plt.ylabel('GDP in terms of $')\n    plt.xlabel('Years',fontsize=25)\n    plt.plot(np.arange(1960,2021),only_countries_df.loc[country][3:64])\n    plt.xticks(np.arange(1960,2021),np.arange(1960,2021), rotation=45)\n    plt.grid()","f713ca3b":"get_the_country_plot('Ireland')","8f70fef1":"get_the_country_plot('Thailand')","e1ab5e88":"get_the_country_plot('Japan')","2d044487":"First, we're going to import the data.","f23c70ab":"**** Analyzing by the year","fe1b3876":"Examining all the countries using pycountry","5a053e05":"# Country Analysis","ae84ecfc":"Let's see what the data looks like."}}