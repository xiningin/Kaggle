{"cell_type":{"6454726e":"code","40222226":"code","472dd37e":"code","a644fbc7":"code","ff002477":"code","57412e02":"code","e5f3e841":"code","6d22b50d":"code","2f8afbdb":"code","2d6c89a7":"code","f172007d":"code","bc933443":"code","d81ee1bb":"code","d148bf57":"code","7663200b":"code","fdbe0235":"code","de45ae83":"code","e3f29824":"code","b105e653":"markdown","e6fbad34":"markdown","9ab94e42":"markdown","ba623cae":"markdown","0c6949ad":"markdown","28f40c97":"markdown","50b7884f":"markdown","b96a1769":"markdown","512c9b72":"markdown","b9e96a14":"markdown","d6bdb5c0":"markdown","fa9a4147":"markdown","cd020e57":"markdown","53610aaf":"markdown","d8f9add4":"markdown","ef47c58c":"markdown","ab7b5322":"markdown","31df062d":"markdown","db05321b":"markdown","557cc1f7":"markdown"},"source":{"6454726e":"import numpy as np    \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport statsmodels.api as sm \nimport seaborn as sns\nsns.set()\n\n%matplotlib inline\n\nfrom sklearn.cluster import KMeans \nfrom sklearn import preprocessing ","40222226":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","472dd37e":"data = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\n\nprint(data.head())\nprint('--' * 40)\nprint(data.describe())","a644fbc7":"print(pd.isnull(data).sum()) # Missing values?","ff002477":"data.groupby('species').size()","57412e02":"data.groupby('species').mean()","e5f3e841":"correlacion = sns.pairplot(data, hue = \"species\", palette = \"husl\", corner = True)","6d22b50d":"data2 = data.copy()\nx = data2.iloc[:,[0,1]]\nx.head()","2f8afbdb":"plt.scatter(x['sepal_length'], x['sepal_width'],s = 20, c='red', alpha = 0.5)\nplt.xlabel('Sepal Lenght', fontsize = 15, c = 'black')\nplt.ylabel('Sepal Width', fontsize = 15, c = 'black')\nplt.title('Sepal Lenght vs Sepal Width', fontsize = 20 , c = 'Black')\nplt.show()","2d6c89a7":"x_scaled = preprocessing.scale(x)","f172007d":"kmeans = KMeans(4) \nkmeans.fit(x_scaled)","bc933443":"# Cluster variable creation.\nClusters = kmeans.fit_predict(x_scaled) \n# Checking the result\nClusters\n\n\ndata_con_clusters = data.copy()\ndata_con_clusters['Cluster'] = Clusters \ndata_con_clusters ","d81ee1bb":"plt.scatter(data_con_clusters['sepal_length'], data_con_clusters['sepal_width'],s = 20,\n            c = data_con_clusters['Cluster'], cmap = 'rainbow', alpha = 1) #Cada cluster cada color!\nplt.title('Clustering Iris Sepal length vs. Sepal Width', fontsize = 20)\nplt.xlabel('Sepal length', fontsize = 15) #EJES\nplt.ylabel('Sepal Width', fontsize = 15)\nplt.show()","d148bf57":"kmeans.inertia_\n\nwcss=[]\n\nfor i in range (1,10): \n    kmeans=KMeans(i)\n    kmeans.fit(x)\n    wcss_iter=kmeans.inertia_\n    wcss.append(wcss_iter)\n    \n    number_clusters=range(1,10)\n    \nplt.plot(number_clusters,wcss) \nplt.show()","7663200b":"kmeans = KMeans(3) \nkmeans.fit(x_scaled)","fdbe0235":"Clusters = kmeans.fit_predict(x_scaled) \nClusters","de45ae83":"data_con_clusters = data.copy()\ndata_con_clusters['Cluster'] = Clusters \ndata_con_clusters ","e3f29824":"plt.scatter(x.values[Clusters == 0, 0], x.values[Clusters == 0, 1], s = 20, c = 'red', label = 'Setosa')\nplt.scatter(x.values[Clusters == 1, 0], x.values[Clusters == 1, 1], s = 20, c = 'blue', label = 'Virginica')\nplt.scatter(x.values[Clusters == 2, 0], x.values[Clusters == 2, 1], s = 20, c = 'green', label = 'Versicolor')\n\nplt.title('Clustering Iris Sepal length vs. Sepal Width', fontsize = 20)\nplt.xlabel('Sepal length', fontsize = 15) \nplt.ylabel('Sepal Width', fontsize = 15)\nplt.legend()\nplt.show()","b105e653":"*Standarizing values*","e6fbad34":"*Scatter graph*","9ab94e42":"50 observations per each species: setosa, versicolor and virginica","ba623cae":"The data tends to be right categorized. Sepal lenght vs. sepal widht is the relation with most overlaped plots, so is expected to have differences with the correlation plots above. In general terms, we can see that the K-Means algorithm is powerful to achieve this task.","0c6949ad":"*Slicing only de sepal proportions from the dataset. After de clustering analysis, I should reach the same result as the graph above*","28f40c97":"## Thank you for reaching the end!","50b7884f":"Athough there are only 3 known species, I choose an arbitrary number of clusters: 4. Afterwards I'm correcting with the elbow method.","b96a1769":"## Sepal proportion analisis","512c9b72":"Hi! I'm new to ML and would like to know what do you think of my code and analysis. Every comment is welcomed!","b9e96a14":"*Correlation analisis*","d6bdb5c0":"## Clustering analisis with K-Means for Iris Dataset","fa9a4147":"*Clustering*","cd020e57":"- Virginica species is the one with the biggest proportions.\n- Setosa species is the one with the smallest proportions (except for sepal width).","53610aaf":"The dataset has 150 rows. There are four columns giving different proportions to sepals and petals of different kinds of flowes. There are no missing values.","d8f9add4":"*Getting to know the data*","ef47c58c":"The right number of clusters are 2 or 3.","ab7b5322":"*New cluster graph*","31df062d":"## Elbow method","db05321b":"*3 Clusters*","557cc1f7":"*Libraries and packages*"}}