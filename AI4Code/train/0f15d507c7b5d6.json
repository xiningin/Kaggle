{"cell_type":{"f53fa261":"code","0e55a516":"code","089b6c66":"code","96a7622f":"code","80055741":"code","5cb8b40b":"code","5afa1d31":"code","d1db3e07":"code","f936301a":"code","610cbae3":"code","284fdd93":"code","adbf1dbf":"code","2cf159d3":"code","8aa264d3":"code","ad977b8e":"code","d9568ae3":"code","3b2524c5":"code","4b0282a1":"code","cd4de509":"code","ad55facf":"code","75e4a43e":"code","699a60d6":"code","668d90b9":"code","626676a9":"code","5883112d":"code","830c21e4":"code","af66d29c":"code","ba75c85e":"code","eb6ee39e":"code","b3a4a385":"code","47b550aa":"code","35985553":"code","0f79760e":"code","a4a8d856":"code","b0a3ce9e":"code","2cf69d78":"code","508bb2b3":"markdown","3521e7d9":"markdown","b24610d8":"markdown","51b7fb89":"markdown","8f63bbeb":"markdown","a45bcce1":"markdown","761196b6":"markdown","d11daa06":"markdown","56c6c03f":"markdown","101586a1":"markdown","7f6262ea":"markdown","106531f8":"markdown","051961cb":"markdown","94d5a2bd":"markdown","6b7c5407":"markdown","941bd554":"markdown","8358eb8f":"markdown","434a40fd":"markdown","92a74db9":"markdown","a3a19194":"markdown","65f4a80a":"markdown","3b2a2c08":"markdown","5d6a2217":"markdown","35ee7e14":"markdown","6ff33dd1":"markdown","17fe5a24":"markdown","ac293fbc":"markdown","8e320a29":"markdown"},"source":{"f53fa261":"# Importing packages planned to use for data analysis and predictive analysis.\nimport pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\n%matplotlib inline","0e55a516":"# Loading and printing out a few lines. Perform operations to inspect data\ndf=pd.read_csv('..\/input\/noshowappointments-kagglev2-may-2016.csv')\ndf.head(3)","089b6c66":"#Performing operations to inspect data types and look for instances of missing or possibly errant data.\ndf.info()","96a7622f":"# Converting ScheduledDay and AppointmentDay to datetime format and further checking for clarity.\ndf['ScheduledDay']=pd.to_datetime(df['ScheduledDay'])\ndf['AppointmentDay']=pd.to_datetime(df['AppointmentDay'])\ndf.info()","80055741":"# Renaming columns as per requirement\ndf=df.rename(columns ={'No-show':'No_show'})","5cb8b40b":"# To get descriptive statistics for each column\ndf.describe()","5afa1d31":"# As it is clear from above data that the minimum age is negative which is not possible so dropping\n# that partcular row\ndf.query('Age <0')","d1db3e07":"# Dropping that particular row\ndf.drop(df.index[99832],inplace=True)","f936301a":"# Checking the result\ndf.query('Age <0')","610cbae3":"#Filtering the dataset on the basis of patients who did show up at the appointment and those who\n# didn't, further dividing them into two different datasets.\ndf1=df.query('No_show == \"No\" ')\ndf2=df.query('No_show == \"Yes\" ')","284fdd93":"df1.describe()","adbf1dbf":"df2.describe()","2cf159d3":"# Adding new column and intialising it\ndf1.loc[:,'Age_group']=\" \"\ndf2.loc[:,'Age_group']=\" \";","8aa264d3":"# Checking the results\ndf1.head(1)","ad977b8e":"# Filling the new column with values as defined above\nw=df1['Age']\nfor i,c in enumerate(w):\n    if (c<=18):\n        df1.iloc[i,-1]='Minor'\n    elif(c>18 and c<=30):\n        df1.iloc[i,-1]='Adult'\n    elif(c>30 and c<=60):\n        df1.iloc[i,-1]='Mature'\n    else:\n        df1.iloc[i,-1]='Senior_Citizen'    ","d9568ae3":"# Similarly for df2 dataframe\nw1=df2['Age']\nfor i,c in enumerate(w1):\n    if (c<=18):\n        df2.iloc[i,-1]='Minor'\n    elif(c>18 and c<=30):\n        df2.iloc[i,-1]='Adult'\n    elif(c>30 and c<=60):\n        df2.iloc[i,-1]='Mature'\n    else:\n        df2.iloc[i,-1]='Senior_Citizen'","3b2524c5":"# Checking for results\ndf1.head(2)","4b0282a1":"# Similarly checking for df2\ndf2.head(2)","cd4de509":"# Using pie-chart to answer the above question for both sections od dataset df1 and df2.\n# For df1 the Pie-chart is\nage_dist=df1['Age_group'].value_counts()\nage_dist.plot(kind='pie',figsize=(20,10));","ad55facf":"# Similarly for df2 dataset\nage_dist1=df2['Age_group'].value_counts()\nage_dist1.plot(kind='pie',figsize=(20,10));","75e4a43e":"# Here bar charts have been used to compare the proportions of students who received scholarships\n# Comparing the proportions for those who did show up at the appointment\nc1=df1['Scholarship'].value_counts()\nk=[\"No\",\"Yes\"]\nplt.bar(k,[c1[0]\/(c1[0]+c1[1]),c1[1]\/(c1[0]+c1[1])])\nplt.title(\"Distribution of patients having received scholarships who did show up at the Appointment\")\nplt.xlabel(\"Scholarship status\")\nplt.ylabel(\"Number of Patients\");","699a60d6":"# Similarly comparing the proportions for those who did not show up at the appointment\nc2=df2['Scholarship'].value_counts()\nplt.bar(k,[c2[0]\/(c2[0]+c2[1]),c2[1]\/(c2[0]+c2[1])])\nplt.title(\"Distribution of patients having received scholarships who did not show up at the Appointment\")\nplt.xlabel(\"Scholarship status\")\nplt.ylabel(\"Number of Patients\");","668d90b9":"# First dividing the the df2 dataset into two groups of males and females\ndf2_m=df2.query('Gender == \"M\"')\ndf2_f=df2.query('Gender == \"F\"')","626676a9":"# Now plotting the proportions of males and females who are suffereing from alcoholism but did not show up\n# at the Appointment\ncount_m=df2_m['Alcoholism'].value_counts()\nk1=[\"Males\",\"Females\"]\ncount_f=df2_f['Alcoholism'].value_counts()\nplt.bar(k1,[count_m[1]\/(count_m[1]+count_m[0]),count_f[1]\/(count_f[0]+count_f[1])])\nplt.title(\"Distribution of patients on gender who did not attend the appointment but are suffering from Alcoholism\")\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Number of Patients\");","5883112d":"# Creating a copy of above dataset\ndata=df.copy()","830c21e4":"# Dropping columns\ndata.drop(columns=['PatientId','AppointmentID','ScheduledDay','AppointmentDay','Neighbourhood'],axis=1,inplace=True)","af66d29c":"# Checking for results\ndata.head(2)","ba75c85e":"# Mapping the values for logistic regression\ndata['Gender']=data['Gender'].map({'F':0,'M':1})\ndata['No_show']=data['No_show'].map({'No':0,'Yes':1})","eb6ee39e":"# Splitting the dataset in 9:1 ratio\ntrain_data=data.iloc[:99474,:]\ntest_data=data.iloc[99474:,:]","b3a4a385":"estimators=['Gender','Age','Scholarship','Hipertension','Diabetes','Alcoholism','Handcap','SMS_received']\n\nX = train_data[estimators]\ny = train_data['No_show']","47b550aa":"reg_log=sm.Logit(y,X)\nresult_log=reg_log.fit()\nresult_log.summary2()","35985553":"def confusion_matrix(data,actual_values,model):\n        \n        # Confusion matrix \n        \n        # Parameters\n        # ----------\n        # data: data frame or array\n            # data is a data frame formatted in the same way as your input data (without the actual values)\n            # e.g. const, var1, var2, etc. Order is very important!\n        # actual_values: data frame or array\n            # These are the actual values from the test_data\n            # In the case of a logistic regression, it should be a single column with 0s and 1s\n            \n        # model: a LogitResults object\n            # this is the variable where you have the fitted model \n            # e.g. results_log in this course\n        # ----------\n        \n        #Predict the values using the Logit model\n        pred_values = model.predict(data)\n        # Specify the bins \n        bins=np.array([0,0.5,1])\n        # Create a histogram, where if values are between 0 and 0.5 tell will be considered 0\n        # if they are between 0.5 and 1, they will be considered 1\n        cm = np.histogram2d(actual_values, pred_values, bins=bins)[0]\n        # Calculate the accuracy\n        accuracy = (cm[0,0]+cm[1,1])\/cm.sum()\n        # Return the confusion matrix and \n        return cm, accuracy","0f79760e":"# Checking the accuracy\nconfusion_matrix(X,y,result_log)","a4a8d856":"estimators=['Gender','Age','Scholarship','Hipertension','Diabetes','Alcoholism','Handcap','SMS_received']\n\nX1 = test_data[estimators]\ny1 = test_data['No_show']","b0a3ce9e":"# Checking the accuracy\nconfusion_matrix(X1,y1,result_log)","2cf69d78":"from subprocess import call\ncall(['python', '-m', 'nbconvert', 'Investigating_a_Dataset_Project.ipynb'])","508bb2b3":"<a id='intro'><\/a>\n## Introduction\n\n> This dataset collects information from 100k medical appointments in Brazil and is focused on the question of whether or not patients show up for their appointment. A number of characteristics about the patient are included in each row. \n\n>ScheduledDay tells us on what day the patient set up their appointment. \nNeighborhood indicates the location of the hospital. \n \n> Scholarship indicates whether or not the patient is enrolled in Brasilian welfare program Bolsa Fam\u00edlia. \n \n> Encoding of the last column: it says \u2018No\u2019 if the patient showed up to their appointment, and \u2018Yes\u2019 if they did not show up.\n\n> Is there any significant trend regarding presence of patients depending upon Gender,Age etc ? \n> Is there some disparity among patients who did not show up at the time of appoitnment based on some disease or gender?\n\n> Performing predictive analysis has been performed below after the analysis part and the accuracy of both testing dataset and training dataset have been checked\n\n\n\n","3521e7d9":"### Confusion Matrix","b24610d8":"###  What proportion of patients received scholarship who did attend the appointment(trying to get an insight whether scholarship does impact their presence for the appointment)?","51b7fb89":"<a id='conclusions'><\/a>\n## Conclusions\n\n> The proportion of Mature and Minor age group in both df1 and df2 datasets are approximately same,but the proportions for Adult and Senior Citizen age groups are different for each subset of dataframe.\n\n> The Bar-charts for scholarships clearly indicate that it doesn't impact the presence of patients at the appointment.\n\n> The proportion of males suffering from alcoholism are more than that of women in the group of not attending the appointment.\n\n> From predictive analysis it is clear that my model fits the dataset fairly.\n\n> No correlation has been found for the patients who did attend the appointment with any of the features may be more features could help draw a conclusion.","8f63bbeb":"### Testing the model","a45bcce1":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n>\n\n## Is there any difference in age group distribution for those who did show up at the appointment and those who didn't?","761196b6":"# Project: Analysing presence of Patients on Appointment\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#eda\">Predictive Analysis<\/a><\/li>    \n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>    \n<\/ul>","d11daa06":"> https:\/\/stackoverflow.com\/ \n\n> https:\/\/pandas.pydata.org\/\n","56c6c03f":"From the above descriptive statistics of df2 it is clear that among the patients who did not attend the appointment\n\n> Majority were not suffering from any type of disease mentioned in the dataset viz Hipertension,Diabetes etc.\n\n> Majority did not receive the Scholarship.\n\n> Majority of them did receive the SMS.","101586a1":"## It can be concluded from above visualisation that the proportion of males suffering from alcoholism are more than that of women in the group of not attending the appointment.","7f6262ea":"> It is clear from above descriptive statistics that majority of the patients included in the dataset\n\n> Did not receive Scholarship.\n\n> Don't suffer from Hipertension.\n\n> Don't suffer from Diabetes.\n\n> Don't suffer from Alcoholism.\n\n> Aren't Handicapped.\n\n> Received SMS for Appointment.","106531f8":"<i> A function has been defined that finds the confusion matrix and the model accuracy.<\/i>","051961cb":"## From the above two Bar charts it is clear that the proportions of students who did receive the scholarship for both sub-datasets df1 and df2 are approximately same.\n## Thus it can be concluded that Scholarships doesn't affect the presence of patients at the Appointment.","94d5a2bd":"Find the confusion matrix of the model and estimate its accuracy. ","6b7c5407":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n> Accessing and cleaning data\n\n### General Properties","941bd554":"\n### Data Cleaning\n> Here I have converted the two columns of Appointment Day and Scheduled Day to date time format.Renamed columns as per requirement\n\n> Descriptive statistic of each column has been accessed so as to ensure that there is not any discrepancy in data and if found that particular row has been removed.\n\n> The entire dataset has been filtered in two parts as per their presence on the appointment day.","8358eb8f":"## Websites referred","434a40fd":"## Predictive Analysis","92a74db9":"## From the above two charts it can be concluded that the proportion of Mature and Minor age group in both df1 and df2 datasets are approximately same,but the proportions for Adult and Senior Citizen age groups are different for each subset of dataframe.","a3a19194":"From the above descriptive statistics of df1 it is clear that among the patients who did attend the appointment\n\n> Majority were not suffering from any type of disease mentioned in the dataset viz Hipertension,Diabetes etc.\n\n> Majority did not receive the Scholarship.\n\n> Majority of them did receive the SMS.","65f4a80a":"Finding the confusion matrix and estimating its accuracy. ","3b2a2c08":"> As it can be seen above there is a wide variation in the age of the patients present so adding a new column Age_group which will show in which category does the patients belong. \n\n> Category is divided as\n\n>  Age <18 Minor\n\n>  18<Age<30 Adult\n\n>  30<Age<60 Mature\n\n>  60<Age Senior_Citizen\n","5d6a2217":"### Declaring the dependent and the independent variables","35ee7e14":"Here the main dataset has been split into two parts viz training part and testing part\n\n> On the training part logistic regression has been performed and a model has been created also it's accuracy has been tested.\n\n> On the testing part the model obtained from training dataset is tested for it's accuracy. Generally it's accuracy is less from training part and it is higher just by luck.","6ff33dd1":"Looking at the test acccuracy we see a number which is a tiny but lower: 78.01%, compared to 78.42% for train accuracy. \n\nIn general, we always expect the test accuracy to be lower than the train one.","17fe5a24":"### Distribution of patients on gender basis who did not show up at the appointment but are suffering from Alcoholism","ac293fbc":"### Declaring the independent variable(s)","8e320a29":"### Performing Logistic Regression"}}