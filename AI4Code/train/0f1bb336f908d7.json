{"cell_type":{"fdf5e4de":"code","54058dbc":"code","83f6a82c":"code","c1e8790f":"code","df413686":"code","352a8a86":"code","3a419712":"code","6e5668e2":"code","1091d7ad":"markdown","331a1679":"markdown","8e3b4091":"markdown","df2b6668":"markdown"},"source":{"fdf5e4de":"import os\nimport xml.etree.ElementTree as ET\nimport glob\nimport matplotlib.pyplot as plt\nimport cv2\nimport numpy as np\nimport time\nfrom IPython.display import clear_output\nglob.glob(\"..\/input\/all-dogs\/*\")","54058dbc":"annoPaths = glob.glob('..\/input\/annotation\/Annotation\/*\/*')\nimgPaths = \"..\/input\/all-dogs\/all-dogs\/\"\nimgSize = (64, 64)","83f6a82c":"print(\"Total annotation files: \",len(annoPaths))","c1e8790f":"!cat ..\/input\/annotation\/Annotation\/n02105855-Shetland_sheepdog\/n02105855_19944","df413686":"def makeData(iPath, imgName, bbox):\n    imgPath = iPath+imgName+\".jpg\"\n    try:\n        img = cv2.cvtColor(cv2.imread(imgPath), cv2.COLOR_BGR2RGB)\n        cropped = img[bbox[1]:bbox[3], bbox[0]:bbox[2]]\n        sized = cv2.resize(cropped, (64,64))\n    except:\n        print(imgName)\n        return None\n        \n    return sized","352a8a86":"def getImgLab(aPath, iPath):\n    imgs = []\n    labels = []\n    for itr, xmlPath in enumerate(aPath):\n        tree = ET.parse(xmlPath)\n        root = tree.getroot()\n        objTags = root.findall('object')\n        imgName = xmlPath.split('\/')[-1]\n        for obj in objTags:\n            bndbox = obj.find('bndbox')\n            xmin = int(bndbox.find('xmin').text)\n            ymin = int(bndbox.find('ymin').text)\n            xmax = int(bndbox.find('xmax').text)\n            ymax = int(bndbox.find('ymax').text)\n            label = obj.find('name').text\n            bbox = (xmin, ymin, xmax, ymax)\n            img = makeData(iPath, imgName, bbox)\n            if img is not None:\n                imgs.append(img) \n                labels.append(label)\n        if itr%500==0:\n            clear_output()\n            print((itr\/len(aPath))*100)     \n    return imgs, labels","3a419712":"start_time = time.time()\nimgs, labels = getImgLab(annoPaths, imgPaths)\nprint(\"--- %s minutes ---\" % ((time.time() - start_time)\/60))","6e5668e2":"fig, ax = plt.subplots(3,3, figsize = (10,10))\nfor itr, i in enumerate(ax.ravel()):\n    i.imshow(imgs[itr])","1091d7ad":"** Function To Fetch Bounding Box from XML File **\n\nparam : All annotation path, Image parent folder path\n\nreturn : Cropped Images, Labels to that images","331a1679":"** Function to crop image **\n\nparam : Image Path, Image Name, Coordinates\n\nreturn : Cropped Image or None if image not found","8e3b4091":"**Taking all the path of annotation files**","df2b6668":"** Looking at annotation file **"}}