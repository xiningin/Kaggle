{"cell_type":{"f6a8db8a":"code","8a5e0907":"code","1f3324b0":"code","bf8f6c7d":"code","2fe01e07":"code","0704a7ab":"code","d2b1f4b3":"code","01a09af9":"code","88d65639":"code","973cfabb":"code","f93548d7":"code","cbedc9ac":"code","45184c25":"code","72e35428":"code","cc55fc94":"code","3da524e9":"code","75af6208":"code","ec0ae9d7":"code","597cf757":"code","f7fb8ed6":"code","c18fc1f3":"code","b13b393a":"code","c9157245":"code","9ad4fbb1":"code","70c7295c":"code","d6d8b3f4":"code","dcbff373":"code","15c12195":"code","16e3c79c":"code","34b1b34d":"code","16fd8fad":"code","496c6108":"code","2a862e3b":"code","1eae0504":"code","1b378d12":"code","77d15cdb":"code","b1f173eb":"code","02c7bc96":"code","740d7420":"code","a7274900":"code","f22ef2af":"code","1d25507b":"code","0ef3f3bb":"code","ef8896bb":"code","8e6989d4":"code","1e5660e0":"markdown","751e85a0":"markdown","626fd37c":"markdown","30065ac4":"markdown","c80b119f":"markdown","4bdfda12":"markdown","85be2029":"markdown","66532b2f":"markdown","c02b9708":"markdown","1c011717":"markdown","3f626b2d":"markdown"},"source":{"f6a8db8a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8a5e0907":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","1f3324b0":"df_train =  pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test  =  pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","bf8f6c7d":"df_train.head()","2fe01e07":"df_train.shape","0704a7ab":"df_train.info()","d2b1f4b3":"plt.figure(figsize=(10,10))\nsns.heatmap(data = df_train.corr(),annot=True)\nplt.show()","01a09af9":"Pclass=['class1','class2','class3']\nax=sns.countplot(data=df_train,x='Pclass',hue='Survived')\nplt.xticks(ticks = [0,1,2], labels = Pclass)\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","88d65639":"\nplt.figure(figsize=(4,5))\nsns.countplot(data=df_train,x='Sex',hue='Survived',)\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","973cfabb":"plt.figure(figsize=(4,5))\nsns.countplot(x=df_train['Survived'],hue=pd.cut(df_train['Age'],5))","f93548d7":"plt.figure(figsize=(4,5))\nsns.countplot(data=df_train,x='SibSp',hue='Survived')\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","cbedc9ac":"plt.figure(figsize=(4,5))\nsns.countplot(data=df_train,x='Parch',hue='Survived')\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","45184c25":"df_train.Fare","72e35428":"df_train['Fare_category'] = pd.cut(df_train['Fare'],bins=[0,7,14,31,120], labels=['Low','Mid','High_Mid','High'])\ndf_train","cc55fc94":"plt.figure(figsize=(4,5))\nsns.countplot(data=df_train,x='Fare_category',hue='Survived')\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","3da524e9":"plt.figure(figsize=(4,5))\nsns.countplot(data=df_train,x='Embarked',hue='Survived')\nplt.legend(['Not Survived', 'Survived'])\nplt.show()","75af6208":"df_train.drop(['PassengerId','Name','Ticket','Cabin','Fare_category'],axis=1,inplace=True)","ec0ae9d7":"df_train[\"Age\"].fillna(df_train[\"Age\"].median())","597cf757":"df_train.dropna(subset=['Embarked'],axis=0,inplace=True)","f7fb8ed6":"df_train['Embarked'].isnull().sum()","c18fc1f3":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ndf_train['Sex'] = encoder.fit_transform(df_train['Sex'])\ndf_train['Embarked'] = encoder.fit_transform(df_train['Embarked'])","b13b393a":"df_train","c9157245":"def clean_dataset(df):\n    assert isinstance(df, pd.DataFrame)\n    df.dropna(inplace=True)\n    indices_to_keep = ~df.isin([np.nan, np.inf, -np.inf]).any(1)\n    return df[indices_to_keep].astype(np.float64)","9ad4fbb1":"clean_dataset(df_train)","70c7295c":"X = df_train.iloc[:,1:]\ny = df_train.iloc[:,0]","d6d8b3f4":"from sklearn.preprocessing import PolynomialFeatures\nfeatures = PolynomialFeatures(degree=2)\nX = features.fit_transform(X)","dcbff373":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX=sc.fit_transform(X)","15c12195":"X","16e3c79c":"X.shape","34b1b34d":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\n","16fd8fad":"rnd_clf = RandomForestClassifier(n_estimators = 50)\nsvm_clf = SVC()\ntree_clf = DecisionTreeClassifier()","496c6108":"rnd_clf.fit(X,y)\nsvm_clf.fit(X,y)\ntree_clf.fit(X,y)\n","2a862e3b":"print(rnd_clf.score(X,y))\nprint(svm_clf.score(X,y))\nprint(tree_clf.score(X,y))","1eae0504":"df_test.head()","1b378d12":"id = df_test['PassengerId']","77d15cdb":"df_test.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)\ndf_test.isnull().sum()","b1f173eb":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy=\"median\")\nimputer = imputer.fit(df_test[['Age','Fare']])\ndf_test[['Age','Fare']] = imputer.transform(df_test[['Age','Fare']])","02c7bc96":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ndf_test['Sex'] = encoder.fit_transform(df_test['Sex'])\ndf_test['Embarked'] = encoder.fit_transform(df_test['Embarked'])","740d7420":"df_test","a7274900":"from sklearn.preprocessing import PolynomialFeatures\nfeatures = PolynomialFeatures(degree=2)\ndf_test = features.fit_transform(df_test)","f22ef2af":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ndf_test=sc.fit_transform(df_test)","1d25507b":"df_test","0ef3f3bb":"prediction = rnd_clf.predict(df_test)","ef8896bb":"prediction","8e6989d4":"submission = pd.DataFrame({'PassengerId':id,'Survived':prediction})\nsubmission.to_csv('submission.csv', index=False)","1e5660e0":"## Each classifier's accuracy ","751e85a0":"## Handle the Missing Data","626fd37c":"# Import the Libraries ","30065ac4":"# Submission","c80b119f":"# Data Preparation","4bdfda12":"## Selection Model","85be2029":"## EDA","66532b2f":"Select Random Forest Classifier for classification\n","c02b9708":"# Modeling","1c011717":"# Import the Dataset and Overview","3f626b2d":"## Handel the Categorical Data\n"}}