{"cell_type":{"8a02c774":"code","553d424b":"code","8254f126":"code","03483e55":"code","a96b9048":"code","2425a6db":"code","205350f8":"code","e728600f":"code","1c4b87d1":"code","a92252e6":"code","2c63315b":"code","faf6a708":"code","f3c0eb2b":"code","4cb07426":"code","079561c6":"code","752eebc3":"code","40641836":"code","81b75eb5":"code","8b7525a2":"code","29b95d7f":"code","30cb5f89":"code","50742b7a":"code","2ec20b30":"code","73f8b9c2":"code","b13e9739":"code","81218590":"code","b04e4430":"code","2c53cc32":"code","3694923a":"code","75eb0bc8":"code","1b5904cf":"code","26e2fb64":"code","e9747ec6":"code","6d7b1c9c":"code","baf2500c":"code","9007d4a1":"code","88e7beaf":"code","b4b19f1d":"code","df109418":"code","bb3982d5":"code","1cc54425":"code","add56369":"code","68786e23":"markdown","cb2ceafa":"markdown","3b14e6d5":"markdown","1985b87f":"markdown","97c5d671":"markdown","bb42f443":"markdown","7984395f":"markdown","f6e37e55":"markdown"},"source":{"8a02c774":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","553d424b":"df = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')","8254f126":"df.head()","03483e55":"df.shape","a96b9048":"df.isnull().sum()","2425a6db":"pt = sns.countplot(x='type', data = df)","205350f8":"old = df.sort_values(\"release_year\", ascending=True)\nold[['title','release_year']][:10]","e728600f":"plt.figure(figsize=(10,10))\nrating = sns.countplot(x='rating', data=df,order = df['rating'].value_counts().index[0:-1])","1c4b87d1":"ratings = pd.read_csv('\/kaggle\/input\/imdb-extensive-dataset\/IMDb ratings.csv',usecols=['weighted_average_vote'])\ntitles = pd.read_csv('\/kaggle\/input\/imdb-extensive-dataset\/IMDb movies.csv',usecols=['title','year','genre'])                                                                ","a92252e6":"titles.head()","2c63315b":"ratings.head()","faf6a708":"rating = pd.DataFrame({'Title':titles.title,\n                       'Release Year':titles.year,\n                       'Rating':ratings.weighted_average_vote,\n                       'Genre':titles.genre})","f3c0eb2b":"rating.head()","4cb07426":"rating.drop_duplicates(subset=['Title','Release Year','Rating'], inplace = True)","079561c6":"rating.dropna()","752eebc3":"datajoin = rating.merge(df,left_on = 'Title', right_on='title', how = 'inner')\ndatajoin = datajoin.sort_values(by='Rating', ascending='False')","40641836":"datajoin","81b75eb5":"rating.head()","8b7525a2":"import plotly.express as px\ntop15 = datajoin[0:15]\nfig = px.sunburst(top15, path=['title','country'], values='Rating', color='Rating')\nfig.show()","29b95d7f":"countcountries = datajoin['country'].value_counts().sort_values(ascending=False)\ncountcountries = pd.DataFrame(countcountries)\ncountcountries.head()\ntop10 = countcountries[0:10]\ntop10","30cb5f89":"fig = px.funnel(top10)\nfig.show()","50742b7a":"plt.figure(figsize=(10,10))\nyer = sns.countplot(x='release_year',data=df, order=df['release_year'].value_counts().index[0:15])","2ec20b30":"UK= df[df['country']=='United Kingdom']","73f8b9c2":"latest_UK = UK.sort_values(by='release_year', ascending = False)[:10]","b13e9739":"latest_UK","81218590":"import plotly.graph_objects as go","b04e4430":"fig = go.Figure(data=[go.Table(header=dict(values=['Title', 'Release Year', 'type', 'duration']),\n                              cells = dict(values=[latest_UK['title'], latest_UK['release_year'], latest_UK['type'], latest_UK['duration']]))])\nfig.show()","2c53cc32":"US= datajoin[datajoin['country']=='United States']","3694923a":"Oldest_US = US.sort_values(by='release_year', ascending=True)[:10]","75eb0bc8":"Oldest_US","1b5904cf":"fig = go.Figure(data=[go.Table(header=dict(values=['Title', 'Release Year', 'rating', 'duration']),\n                              cells = dict(values=[Oldest_US['title'], Oldest_US['release_year'], Oldest_US['Rating'], Oldest_US['duration']]))])\nfig.show()","26e2fb64":"season =['title', 'no']","e9747ec6":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom collections import Counter","6d7b1c9c":"genre = list(df['listed_in'])\ngen=[]\nfor i in genre:\n    i = list(i.split(','))\n    for j in i:\n        gen.append(j.replace(' ', \"\"))\ng = Counter(gen)","baf2500c":"plt.rcParams['figure.figsize']=(13,13)\ntext = list(set(gen))\nwordcloud = WordCloud(max_font_size=40,max_words=50).generate(str(text))\nplt.imshow(wordcloud,interpolation='bilinear')\nplt.axis('off')\nplt.show()","9007d4a1":"pclass = datajoin['release_year'].value_counts().to_frame().reset_index().rename(columns={'index':'Year','release_year':'Total Count'})\n\n\nfigure = go.Figure(data=[go.Scatter(\n    x = pclass['Year'], \n    y = pclass['Total Count'],\n    mode = 'markers',\n    marker = dict(\n        color = pclass['Total Count'],\n        size = pclass['Total Count'] * 0.5,\n        showscale = False\n    ))])\n\n\nfigure.layout.template = 'seaborn'\n\nfigure.update_layout(title = 'Analysis by Year', xaxis_title = \"Year Released\", yaxis_title = \"Total\")\nfigure.show()","88e7beaf":"from sklearn.feature_extraction.text import TfidfVectorizer","b4b19f1d":"datajoin['title']","df109418":"tfidf = TfidfVectorizer(stop_words='english')\n\ndatajoin['description'] = datajoin['description'].fillna('')\n\ntf_matrix = tfidf.fit_transform(datajoin['description'])\n\ntf_matrix.shape","bb3982d5":"from sklearn.metrics.pairwise import linear_kernel\n\ncosine_simalarity = linear_kernel(tf_matrix,tf_matrix)","1cc54425":"indices = pd.Series(datajoin.index, index=datajoin['title']).drop_duplicates()","add56369":"def recommendation(title, cosine_simalarity=cosine_simalarity):\n    ids = indices[title]\n    similar_scores = list(enumerate(cosine_simalarity[ids]))\n    \n    similar_scores = sorted(similar_scores, key=lambda x: x[1], reverse = True)\n    \n    similar_scores = similar_scores[1:11]\n    \n    movies_indices = [i[0] for i in similar_scores]\n    return datajoin['title'].iloc[movies_indices]","68786e23":"So, 2018 was the year with most number of releases.","cb2ceafa":"> Top 15 rated movies on Netflix.","3b14e6d5":"A wordcloud of Genres","1985b87f":"top 10 countries with highest rated content.","97c5d671":" In Progress!!! \n","bb42f443":"There are more than 2500 movies with TV-MA rating, 'TV-MA' rating is suitable only for the mature audiences assigned by the the TV Parental Guidelines.\nSecond highest rating is the TV-14 with slightly less than 2000 movies, which says that the content is not appropriate for children younger than 14 years.","7984395f":"Now here we are performing the inner join on the ratings dataset and the netflix dataset to get the content that has both ratings on netflix and IMDB.","f6e37e55":"It can be concluded that there are more movies than series on Netflix."}}