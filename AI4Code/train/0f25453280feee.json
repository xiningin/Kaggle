{"cell_type":{"bc7b43b9":"code","a78821f3":"code","c2bb7acc":"code","491e0f06":"code","73d9c628":"code","8de6e260":"code","888cd9a5":"code","bda2962b":"code","563dae56":"code","c792c6b0":"code","662f6647":"code","64243efb":"code","8d6c2262":"code","81084ddd":"markdown"},"source":{"bc7b43b9":"from sklearn.manifold import Isomap\nfrom sklearn.datasets import load_digits\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nimport matplotlib.pyplot as plt\n%matplotlib inline","a78821f3":"digits_data = load_digits()\ndigits_data.images.shape","c2bb7acc":"fig, axes = plt.subplots(10, 10, figsize= (10, 8),\n                      subplot_kw = {'xticks':[], 'yticks':[]},\n                      gridspec_kw = dict(hspace = 0.1, wspace = 0.1))\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(digits_data.images[i], cmap = plt.cm.binary, interpolation = 'nearest')\n    ax.text(0.05, 0.05, str(digits_data.target[i]),\n           transform = ax.transAxes, color = 'green')","491e0f06":"iso = Isomap(n_components = 2)\niso.fit(digits_data.data)\ndata_projected = iso.transform(digits_data.data)\ndata_projected.shape","73d9c628":"plt.scatter(data_projected[:, 0], data_projected[:, 1], c = digits_data.target,\n           edgecolors='none', alpha=0.5,\n           cmap = plt.get_cmap('nipy_spectral', 10))\nplt.colorbar(label = \"digit label\", ticks = range(10))\nplt.clim(-0.5, 9.5)\nplt.tight_layout()\nplt.show()","8de6e260":"X = digits_data.data\ny = digits_data.target","888cd9a5":"x_train, x_test, y_train, y_test = train_test_split(X, y, random_state = 0)","bda2962b":"model = GaussianNB()","563dae56":"model.fit(x_train, y_train)","c792c6b0":"y_model = model.predict(x_test)","662f6647":"accuracy_score(y_test, y_model)","64243efb":"matrix = confusion_matrix(y_test, y_model)\n\nplt.figure(figsize = (10, 8))\nsns.heatmap(matrix, square = True, annot = True, cbar = False)\nplt.xlabel(\"Predicted Value\")\nplt.ylabel(\"True Value\")","8d6c2262":"fig, axes = plt.subplots(10, 10, figsize= (10, 8),\n                      subplot_kw = {'xticks':[], 'yticks':[]},\n                      gridspec_kw = dict(hspace = 0.1, wspace = 0.1))\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(digits_data.images[i], cmap = plt.cm.binary, interpolation = 'nearest')\n    ax.text(0.05, 0.05, str(digits_data.target[i]),\n           transform = ax.transAxes, color = 'blue' if (y_test[i] == y_model[i]) else 'red')","81084ddd":"## Classifications Of Digits"}}