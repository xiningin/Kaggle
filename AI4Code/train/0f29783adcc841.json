{"cell_type":{"a7c0d110":"code","ce5ea130":"code","ca1b6790":"code","0a7595c5":"code","2593aef9":"code","35a45cc0":"code","63e26526":"code","5ff4e700":"code","373d1508":"code","0e0118b6":"code","61dbd0e2":"code","3d0bb77f":"code","f3e7e7da":"code","d5a3f87e":"code","13790012":"code","28f00ea6":"code","b05c264c":"code","4d8ed626":"code","755fd330":"code","93796bba":"code","1193647e":"code","01f9559e":"code","071d41e1":"code","d504a458":"code","1aae7aa0":"code","7cfcb256":"code","36094264":"code","21f79eb9":"code","074b0842":"code","6d21054b":"code","b0e1fb84":"markdown","c23f123f":"markdown","2b2847db":"markdown","fcd28a40":"markdown","8f860241":"markdown","78bd4f5a":"markdown","9e3080e9":"markdown","7f31d1a4":"markdown","10649294":"markdown","6bc500d3":"markdown","d003459e":"markdown","402bb717":"markdown"},"source":{"a7c0d110":"# Importing libraries\n## for data\nimport numpy as np\nimport pandas as pd\n\n## for visualizations\nimport seaborn as sns\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go \n\n## for statistical tests\nimport scipy\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\n\n## for machine learning\nfrom sklearn import model_selection, linear_model, preprocessing, feature_selection, ensemble, metrics, decomposition\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.tree import DecisionTreeClassifier\ndecision_tree_classifier = DecisionTreeClassifier()","ce5ea130":"# Importing the dataset\n\ndf = pd.read_csv('..\/input\/volcanoevents02021\/volcano-events0-21.csv')\ndf.head(5)","ca1b6790":"# Identify the data types\nprint(df.info())\n\n# Examine the shape of the data\nprint(df.shape)","0a7595c5":"# Checking if any row is missing any data.\ndf.isnull().sum()","2593aef9":"# Create a new dataframe (keeping df integrity in tact). \nvdf = df\n\n# Replace some field values. \nvdf.rename(columns={\"Dy\": \"Day\",\"Tsu\": \"TsunamiEvent\", \"Eq\": \"EarthquakeEvent\", \"VEI\": \"ExplosivityIndexVEI\"}, inplace=True)\nvdf.head(5)","35a45cc0":"# Remove the row with the missing data.\nvdf = vdf.dropna(axis=0, subset=['Year'])","63e26526":"# Convert float fields that should contain strings to object type.\nconvert_obj = {'Death Description': object, \n                'Missing Description': object,\n               'Injuries Description': object,\n               'Damage Description': object,\n               'Houses Destroyed Description': object,\n               'Total Death Description': object,\n               'Total Missing Description': object,\n               'Total Injuries Description': object,\n               'Total Damage Description': object,\n               'Total Houses Destroyed Description': object\n               } \n  \nvdf = vdf.astype(convert_obj)","5ff4e700":"# Replace all NaN values with 0 - float fields. \nvdf['Mo'] = vdf['Mo'].fillna(0)\nvdf['Day'] = vdf['Day'].fillna(0)\nvdf['TsunamiEvent'] = vdf['TsunamiEvent'].fillna(0)\nvdf['EarthquakeEvent'] = vdf['EarthquakeEvent'].fillna(0)\nvdf['ExplosivityIndexVEI'] = vdf['ExplosivityIndexVEI'].fillna(0) \nvdf['Deaths'] = vdf['Deaths'].fillna(0) \nvdf['Agent'] = vdf['Agent'].fillna(0)  \nvdf['Missing'] = vdf['Missing'].fillna(0)   \nvdf['Injuries'] = vdf['Injuries'].fillna(0)\nvdf['Damage ($Mil)'] = vdf['Damage ($Mil)'].fillna(0)    \nvdf['Houses Destroyed'] = vdf['Houses Destroyed'].fillna(0)\nvdf['Total Deaths'] = vdf['Total Deaths'].fillna(0)\nvdf['Total Missing'] = vdf['Total Missing'].fillna(0) \nvdf['Total Injuries'] = vdf['Total Injuries'].fillna(0)\nvdf['Total Damage ($Mil)'] = vdf['Total Damage ($Mil)'].fillna(0) \nvdf['Total Houses Destroyed'] = vdf['Total Houses Destroyed'].fillna(0)\n\n# Fill object fields with new string for NaN values\nvdf['Death Description'] = vdf['Death Description'].fillna('None')\nvdf['Missing Description'] = vdf['Missing Description'].fillna('None') \nvdf['Injuries Description'] = vdf['Injuries Description'].fillna('None') \nvdf['Damage Description'] = vdf['Damage Description'].fillna('None') \nvdf['Houses Destroyed Description'] = vdf['Houses Destroyed Description'].fillna('None')  \nvdf['Total Death Description'] = vdf['Total Death Description'].fillna('None') \nvdf['Total Missing Description'] = vdf['Total Missing Description'].fillna('None') \nvdf['Total Injuries Description'] = vdf['Total Injuries Description'].fillna('None') \nvdf['Total Damage Description'] = vdf['Total Damage Description'].fillna('None')  \nvdf['Total Houses Destroyed Description'] = vdf['Total Houses Destroyed Description'].fillna('None') \n\n# Check dataframe\nvdf.head(5)","373d1508":"# Check for null or NaN values - Should all return 0\nvdf.isnull().sum()","0e0118b6":"vdf.info()","61dbd0e2":"sns.relplot(x=\"Year\", y=\"TsunamiEvent\", hue=\"Type\", size=\"Deaths\",\n            sizes=(40, 400), alpha=.5, palette=\"muted\",\n            height=8, data=vdf )","3d0bb77f":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = vdf['Type'],\n    xbins=dict( \n        start=1,\n        end=1000,\n        size=1\n    ), \n    opacity=1\n))\n\nfig.update_layout(\n    title_text='Type',\n    xaxis_title_text='Type',\n    yaxis_title_text='Count', \n    bargap=0.10,\n    xaxis =  {'showgrid': True },\n    yaxis = {'showgrid': True },\n    template = 'plotly'\n)\n\nfig.show()","f3e7e7da":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = vdf['Country'],\n    xbins=dict( \n        start=1,\n        end=1000,\n        size=1\n    ), \n    opacity=1\n))\n\nfig.update_layout(\n    title_text='Location',\n    xaxis_title_text='Location',\n    yaxis_title_text='Count', \n    bargap=0.10,\n    xaxis =  {'showgrid': True },\n    yaxis = {'showgrid': True },\n    template = 'plotly'\n)\n\nfig.show()","d5a3f87e":"v_types = vdf['ExplosivityIndexVEI'].value_counts().reset_index()\nv_types.columns = ['ExplosivityIndexVEI', 'count']\nfig = px.bar(v_types, x='ExplosivityIndexVEI', y=\"count\", orientation='v', title='Count of volcano types', width=500)\nfig.show()","13790012":"# Compare deaths over time across all volcano activities.\nmap_vdf = vdf #.query(\"TsunamiEvent >= 1\")\nfig = px.scatter(map_vdf, \n                 x=\"Year\", \n                 y=\"Total Deaths\", \n                 color=\"Country\",\n                 hover_name=\"Name\", \n                 hover_data=[\"Type\",\n                             \"Country\", \n                             \"Year\", \n                             \"Total Deaths\",\n                             \"EarthquakeEvent\",\n                             \"TsunamiEvent\",\n                             \"ExplosivityIndexVEI\"])\n\nfig.show()","28f00ea6":"#map_vdf = vdf #.query(\"Deaths >= 1\")\nfig = px.scatter_geo(map_vdf, lat=\"Latitude\", lon=\"Longitude\",\n                     color=\"Type\",\n                     hover_name=\"Name\", \n                     size=\"ExplosivityIndexVEI\", \n                     hover_data=[\"Country\",\n                                 \"Year\",\n                                 \"Total Deaths\",\n                                 \"EarthquakeEvent\", \n                                 \"TsunamiEvent\",\n                                 \"ExplosivityIndexVEI\"],\n                     #animation_frame=\"Year\",\n                     projection=\"natural earth\")\nfig.update_layout(mapbox_style=\"stamen-terrain\")\nfig.show()","b05c264c":"# Subplot variables about volcano activity \nfig = make_subplots(rows=2, cols=1, start_cell=\"top-left\",  subplot_titles=(\"ExplosivityIndexVEI by Type\",\"Deaths by Country\"))\nfig.add_trace(go.Box(y=vdf['ExplosivityIndexVEI'], x=vdf['Type'],boxpoints='all', name='ExplosivityIndexVEI'), row=1, col=1)\nfig.add_trace(go.Box(y=vdf['Total Deaths'], x=vdf['Country'],boxpoints='all', name='Country'), row=2, col=1) \nfig.update_layout(height=1000, width=600, showlegend=False) \nfig.show()","4d8ed626":"#Correlation matrix \ncorr = vdf.corr()\ncorr","755fd330":"plt.rcParams['figure.figsize'] = (30.0, 20.0)\nsns.set(font_scale=2.5)\nax = sns.heatmap(corr, annot=True, fmt='.4f', linewidths=.5, \n                 annot_kws={'size': 18})","93796bba":"# create a copy of the dataframe, and add columns for month and year\ndeath_exp_corr = vdf.copy()\n#df_m['month'] = [i.month for i in df_m.index]\n#df_m['year'] = [i.year for i in df_m.index]\n\n# group by year and explositivity index, get the average\ndeath_exp_corr = death_exp_corr.groupby(['Type']).mean()","1193647e":"plt.rcParams['figure.figsize'] = (30.0, 20.0)\nsns.set(font_scale=2)\nax = sns.heatmap(death_exp_corr, annot=True, fmt='.2f', linewidths=.5, \n                 annot_kws={'size': 20})","01f9559e":"high_vei = vdf.query(\"EarthquakeEvent >= 1 & TsunamiEvent >= 1\" )\nhigh_vei = high_vei.groupby(['Name']).mean()\nhigh_vei.nlargest(5,'ExplosivityIndexVEI')","071d41e1":"# create a copy of the dataframe \ndeath_corr = vdf.copy() \n\n# group by Name \ndeath_corr = death_corr.groupby(['Name']).mean()\ndeath_corr.nlargest(5,'Total Deaths')","d504a458":"# Analyze all volcanos who had an earthquake and tsunami event, group by name and sort by total deaths.\neq_ts_deadly = vdf.query(\"EarthquakeEvent >= 1 & TsunamiEvent >= 1\" )\neq_ts_deadly = eq_ts_deadly.groupby(['Name']).mean()\neq_ts_deadly.nlargest(5,'Total Deaths')","1aae7aa0":"key_vars = ['Deaths', 'TsunamiEvent','ExplosivityIndexVEI' , 'EarthquakeEvent']\n\n# import the StandardScaler\nfrom sklearn.preprocessing import StandardScaler\n\n# extract out the numerical data and scale it to zero mean and unit standard deviation\nX = vdf[key_vars]\nscaler = StandardScaler().fit(X)\nX_scaled = pd.DataFrame(scaler.fit_transform(X), columns = X.columns, index = X.index)\n","7cfcb256":"#k = vdf.nunique() \n#from sklearn.cluster import KMeans\n#kcluster = KMeans(n_clusters=k).fit(X_scaled)","36094264":"all_inputs = vdf[['EarthquakeEvent','TsunamiEvent','ExplosivityIndexVEI' ]].values\n\nall_labels = vdf['EarthquakeEvent'].values\n\nall_inputs[:1]","21f79eb9":"# Train and split the data\nX_train, X_test, y_train, y_test = train_test_split(all_inputs, \n                                                    all_labels, \n                                                    test_size= 0.2, \n                                                    random_state=42)","074b0842":"X_train[:1]","6d21054b":"decision_tree_classifier.fit(X_train, y_train)\ndecision_tree_classifier.score(X_test, y_test)","b0e1fb84":"These volcanos while deadly, didn't always result in a tsunami or an earthquake event.\nIn the next cell, the results filter only volcano explosions that had both an earthquake and tsunami event. Again grouped by name and sorted by total deaths. ","c23f123f":"After review, there is 1 volcano event that doesn't have an age. The record that has a null value for the year, also has a null value for location, country, lat, long, etc. This record does not help analysis and will be dropped.\n\nTo keep the default dataframe in tact, I've created a new dataframe and will clean up the data in this new dataframe. This is to ensure data is not skewed and can be compared after transformation.","2b2847db":"## About The Project \n\nVolcanic tsunamis aren't limited to only a few areas around the globe. Entire ocean coastlines are at risk. This includes the 'Ring of Fire' that wraps around the pacific and central Atlantic. Considering Earth is more than 70% covered in water, and experiencing vigorous plate tectonic shifts, that leaves many coastal populations at risk of tsunamis. Detecting tsunamis caused by volcanic activity is incredibly difficult today. \n\nThis project aims to analyze historic data about volcanos and how they are connected to earthquakes and tsunamis by analyzing attributes about the volcanic event. These attributes include explosion VEI, damage, injuries, date\/time, (etc).\n\n## Project Goals\nThe goal is to answer the following questions (but not limited to):\n- Which type of volcano has been the deadliest?  \n- Which type of volcano is the most active? Location? VEI?\n- What time of year is the most active for volcanoes? By region?\n- Which type of volcano tends to trigger tsunamis the most? \n- What are the signs or classified commonalities between tsunami triggered eruptions? \n\n## About The Data\nThe data is directly reported from the [NOAA](https:\/\/www.ngdc.noaa.gov\/hazel\/view\/hazards\/volcano\/event-search) site.\nThe Significant Volcanic Eruption Database is a global listing of over 500 significant eruptions which includes information on the latitude, longitude, elevation, type of volcano, and last known eruption.\n\nNational Geophysical Data Center \/ World Data Service (NGDC\/WDS): NCEI\/WDS Global Significant Volcanic Eruptions Database. NOAA National Centers for Environmental Information.\n\nConsidering the lack of technology and tools to measure volcano activity, the data is filtered from year 0 to 2021. No additional filters are applied. ","fcd28a40":"### Answer to Question:  Which type of volcano tends to trigger tsunamis the most? \n\nGrouped by Type, we can see the most common volcano types that lead to tsunamis are Submarine Volcanos. This makes sense due to the movement of tectonic plates and eruptions under water level which cause water displacement.\n\nThough further findings showed filtering only on volcanos with a high VEI and the earthquake event, a volcano is just as likely to lead to a tsunami.","8f860241":"## Data Quality\n- Create new dataframe\n- Rename columns (change abbreviations to defined full words)\n- Change data types for columns\n- Handle null\/NaN values\n\nThere is only 1 record missing a year (and a number of key variables). This record doesn't help the analysis and will be dropped. \n\nAdditionally, a number of the columns are either float or objects. After reviewing each column, the fields that are descriptive should be object instead of float.","78bd4f5a":"### Answer to Question: Which type of volcano typically have higher VEI? \nThe Volcanic Explosivity Index (or VEI) is a classification on the power and force a volcano erupts.\n\nIn the table below, volcanos are grouped by name, sorted by strongest VEI, and filtered by those that experienced both an earthquake event and a tsunami event.\n - Komagatake in 1640 with 5, a stratovolcano\n - St. Helens in 1980 with 5, a explosive dacite volcano\n - Vesuvius in 855 with 5, a stratovolcano\n - Makian in 1646 with 4, a stratovolcano\n - Rabaul in 1907 with 3.5, a caldera","9e3080e9":"## Visualizations","7f31d1a4":"### Answer to Question: Which volcanos were (historically) the deadliest?\n- Tambora\n- Ilopango\n- Ruiz\n- Pelee\n- Krakatau","10649294":"The deadliest volcanoes that had both tsunamis and an earthquake event were:\n- Unzen in 1792 with 15k deaths\n- Etna in 1455 with 5300 deaths\n- Vesuvius in 855 with 3050 deaths\n- Awu in 1884 with 1472 deaths\n- Komagatake in 1640 with 700 deaths","6bc500d3":"### Answer to Question: What are the classified commonalities between tsunamis triggered by eruptions or earthquakes?\n\nVolcanoes don't have to errupt to cause a tsunami. A tsunami is triggered by underwater explosions and shock waves caused by large explosions - even ones that occur above the waterline. For this reason, earthquakes, whether tectonic or volcanic in origin, can cause landslides and debris avalanches.\n\nPyroclastic flows and lahars hitting the ocean can also displace water very quickly. This sends large displacement of water away from the point of impact. This also is the same for flank failures and sector collapses. They don't need an eruption of any size to happen. \n\nAny of these activity features can occur at any time (usually they do in combination). Which is why predicting tsunamis after a volcanic eruption is so difficult. ","d003459e":"## Correlation\nAnalyzing the data correlation across variables.","402bb717":"# Predicting \nActivity By Volcano as it correlates with explositivity and earthquakes"}}