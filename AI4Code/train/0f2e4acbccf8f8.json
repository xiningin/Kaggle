{"cell_type":{"b4db4327":"code","5ec319dc":"code","dceb71d2":"code","cf1341d6":"code","592beb81":"code","fcb58e3b":"code","ee4e732c":"code","e02d6756":"code","609a800d":"code","31e595af":"code","5fd470c7":"code","90cc5f0a":"code","ee62de90":"code","380663e7":"code","6895e58a":"markdown","61042652":"markdown","1760cd53":"markdown","82266b88":"markdown"},"source":{"b4db4327":"import numpy as np\nimport pandas as pd","5ec319dc":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","dceb71d2":"train_data.loc[(train_data['Sex']=='male')&(train_data['Age']<10)&(train_data['Survived']==1)].count()","cf1341d6":"train_data.describe(include='all')","592beb81":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","fcb58e3b":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","ee4e732c":"# alternative way of computing the above\ntrain_data[['Sex','Pclass', 'Survived']].groupby(['Sex','Pclass']).mean()","e02d6756":"train_data[['Pclass','Sex' ,'Survived']].groupby(['Pclass','Sex']).mean()","609a800d":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","31e595af":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","5fd470c7":"predictions = [] \nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row['Pclass'] <3:\n            predictions.append(1)\n        elif row['Fare'] < 25:\n            predictions.append(1)\n        else:\n            predictions.append(0)\n    else:\n        if row['Age'] < 10:\n            predictions.append(1)\n        else:\n            predictions.append(0)","90cc5f0a":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","ee62de90":"test_data['Survived'] = predictions","380663e7":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","6895e58a":"# Working with rows manually","61042652":"# Making predictions","1760cd53":"# Loading and examining data","82266b88":"# Basic analysis"}}