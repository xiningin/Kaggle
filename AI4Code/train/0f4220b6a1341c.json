{"cell_type":{"f05680a9":"code","4431712b":"markdown"},"source":{"f05680a9":"import os\nimport numpy as np\nimport pandas as pd\nimport plotly\nimport plotly.graph_objs as go\n\ncontest = 'cash_ratio_optimization'\nteams_data = {}\nteams_order = []\n\nfor dirname, _, filenames in os.walk(f'\/kaggle\/input\/bri-data-hackathon-2021-scoreboards\/{contest}'):\n    filenames = sorted(filenames)\n    for filename, label in zip(filenames[-2:], ['Public', 'Final']):\n        date = pd.to_datetime(filename[-19:-4].replace('_', ' '))\n        scoreboard = pd.read_csv(os.path.join(dirname, filename))\n        for index, row in scoreboard.iterrows():\n            rank = row['rank']\n            team = row.team_name\n            score = row.score\n\n            if team not in teams_data:\n                teams_data[team] = {'ranks': [], 'scores': [], 'dates': [], 'labels': []}\n\n            teams_data[team]['ranks'].append(rank)\n            teams_data[team]['scores'].append(score)\n            teams_data[team]['dates'].append(date)\n            teams_data[team]['labels'].append(label)\n        \n            if label == 'Final':\n                teams_order.append(team)\n\ndef show_rank_graph(contest, teams_data):\n    fig = go.Figure()\n\n    for team in teams_order:\n        data = teams_data[team]\n        if len(data['ranks']) < 2:\n            continue\n\n        direction = \"(-)\"\n        if data['ranks'][0] < data['ranks'][1]:\n            direction = f\"(+{data['ranks'][1] - data['ranks'][0]})\"\n        if data['ranks'][0] > data['ranks'][1]:\n            direction = f\"(+{data['ranks'][0] - data['ranks'][1]})\"\n        customdata = [team, data['ranks'][0], data['ranks'][1], direction]\n        customdata = [customdata] * 2\n        hovertemplate = \"<b>%{customdata[0]}<\/b><br>Public Rank: <b>%{customdata[1]}<\/b><br>Final Rank: <b>%{customdata[2]}<\/b> %{customdata[3]}<extra><\/extra>\"\n\n        fig.add_trace(go.Scatter(x = data['labels'], y = data['ranks'], name=team,\n                                 customdata=customdata, hovertemplate=hovertemplate))\n\n    fig.update_layout(yaxis_title='Rank', yaxis_range=[20, 0], title=f\"{contest.title().replace('_', ' ')} Ranking Changes\")\n    fig.show()\n\ndef show_score_graph(contest, teams_data):\n    fig = go.Figure()\n    for team in teams_order:\n        data = teams_data[team]\n        if len(data['ranks']) < 2:\n            continue\n\n        customdata = [team, data['scores'][0], data['scores'][1]]\n        customdata = [customdata] * 2\n        hovertemplate = \"<b>%{customdata[0]}<\/b><br>Public Score: <b>%{customdata[1]}<\/b><br>Final Score: <b>%{customdata[2]}<\/b><extra><\/extra>\"\n\n        fig.add_trace(go.Scatter(x = data['labels'], y = data['scores'], name=team,\n                                 customdata=customdata, hovertemplate=hovertemplate))\n\n    fig.update_layout(yaxis_title='Score', yaxis_range=[0.058, 0.0445], title=f\"{contest.title().replace('_', ' ')} Score Changes\")\n    fig.show()\n\nshow_rank_graph(contest, teams_data)\nshow_score_graph(contest, teams_data)","4431712b":"# Visualizing Rank and Score Changes in Cash Ratio Optimization"}}