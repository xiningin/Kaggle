{"cell_type":{"5efe8423":"code","ccb6cbbb":"code","7219ebb3":"code","14d4b21d":"code","a49c9b2c":"code","27c2f772":"code","f63a34b3":"code","479b6d12":"code","cd81dcf4":"code","726dda5a":"code","ff17a25a":"code","f7d950d9":"code","5f7fed51":"code","0d7b3b9f":"code","89d6fc10":"code","9a4fb577":"code","006d58b6":"code","2de27993":"code","2dc45d1b":"code","78e1c9cd":"code","918ae2bb":"code","6e0a5d39":"code","7f462cdf":"code","d5b9668d":"code","a7c3b3b2":"code","84f44d86":"code","c7c7a785":"code","a5f6efef":"code","4b8b5c9f":"code","0d1f4ad6":"code","01611313":"code","4035adcc":"code","1a9fe31e":"code","d0aded0b":"code","187c380b":"code","b9a5de2e":"code","02fe30a0":"markdown","6634b0f8":"markdown","8ed6f050":"markdown"},"source":{"5efe8423":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ccb6cbbb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7219ebb3":"data=pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","14d4b21d":"data.head()","a49c9b2c":"data.tail()","27c2f772":"sns.countplot(x='sex',data=data,hue='DEATH_EVENT')","f63a34b3":"y=data['DEATH_EVENT']\nX=data.drop(columns=['DEATH_EVENT'])","479b6d12":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)","cd81dcf4":"X_train.shape","726dda5a":"y_train.shape","ff17a25a":"data.shape","f7d950d9":"from sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression\nclassifier=LogisticRegression()\nrfe=RFE(classifier,20)\nrfe=rfe.fit(X_train,y_train)\nprint(rfe.support_)","5f7fed51":"from  sklearn.linear_model import LogisticRegression\nlogmodel=LogisticRegression()\nlogmodel.fit(X_train,y_train)","0d7b3b9f":"pred=logmodel.predict(X_test)","89d6fc10":"from sklearn.metrics import confusion_matrix,accuracy_score","9a4fb577":"cf=confusion_matrix(y_test,pred)","006d58b6":"sns.heatmap(cf,annot=True,fmt='g')","2de27993":"accuracy_score(y_test,pred)","2dc45d1b":"from sklearn.preprocessing import StandardScaler\nsc_X=StandardScaler()\nX_train2=pd.DataFrame(sc_X.fit_transform(X_train))\nX_test2=pd.DataFrame(sc_X.fit_transform(X_test))","78e1c9cd":"X_train2.columns=X_train.columns.values\nX_test2.columns=X_test.columns.values\nX_train2.index=X_train.index.values\nX_test2.index=X_test.index.values","918ae2bb":"X_train=X_train2\nX_test=X_test2","6e0a5d39":"logmodel.fit(X_train,y_train)","7f462cdf":"pred=logmodel.predict(X_test)","d5b9668d":"accuracy_score(y_test,pred)","a7c3b3b2":"cm=confusion_matrix(y_test,pred)","84f44d86":"sns.heatmap(cm,annot=True,fmt='g')","c7c7a785":"from sklearn.svm import SVC\nclassifier = SVC(random_state = 0, kernel = 'linear')\nclassifier.fit(X_train, y_train)","a5f6efef":"pred=classifier.predict(X_test)","4b8b5c9f":"accuracy_score(y_test,pred)","0d1f4ad6":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix,accuracy_score","01611313":"model=RandomForestClassifier(random_state=0,n_estimators=100,criterion='entropy')","4035adcc":"model.fit(X_train,y_train)","1a9fe31e":"r_pred=model.predict(X_test)","d0aded0b":"accuracy_score(y_test,r_pred)","187c380b":"cn=confusion_matrix(y_test,r_pred)","b9a5de2e":"sns.heatmap(cn,fmt='g',annot=True)","02fe30a0":"Model Tunning for better accuracy","6634b0f8":"Using SVM for Prediction","8ed6f050":"**Random Forest Model**"}}