{"cell_type":{"593d545f":"code","3b1ccb7e":"code","f5924389":"code","5eb8dc64":"code","6af8b83f":"code","3306006e":"code","52742712":"code","135e4f25":"code","78524146":"code","8c66d62f":"code","4549af87":"code","2d8430dc":"code","9dfd9432":"code","9febc5b9":"code","527c5c2f":"code","b180a62f":"code","d616cd9b":"code","480ceab7":"code","4afb4792":"code","eca62606":"code","3a19ac8d":"code","4d76e1ab":"code","ffa27fe0":"code","b77d1021":"code","71e421f1":"code","aa15bcfe":"code","2ddd9a1b":"code","79c6c3bf":"code","f5e0e716":"code","a941b2d8":"code","9990425a":"code","c3a29a60":"code","bb36d33f":"code","8073fa24":"code","3ca53f72":"code","a38d443e":"code","dd12a596":"code","f56051b6":"code","696a367e":"code","afff0984":"code","5e2db467":"code","8913e37a":"code","7dd55f43":"code","144e2928":"code","9f1a1c0a":"code","cf02d067":"markdown","263f97df":"markdown","4244d62f":"markdown","4479df47":"markdown","6d345957":"markdown","0deb81fe":"markdown","22fea014":"markdown","f39c68db":"markdown","51eec937":"markdown","82ef4fad":"markdown","277559e9":"markdown","2759046a":"markdown"},"source":{"593d545f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np\nnp.random.seed(sum(map(ord, 'calmap')))\n# linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3b1ccb7e":"coordinate=pd.read_csv(\"\/kaggle\/input\/covid19\/world_coordinate.csv\")\ncoordinate","f5924389":"coordinate.rename(columns={\n    \n    'Province\/State':'province',\n    'Country\/Region':'country',\n    'Lat':'lat',\n    'Long':'long',\n    \n},inplace=True)\ncoordinate","5eb8dc64":"submission=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/submission.csv')\nsubmission.head(),\nsubmission.shape","6af8b83f":"train=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/train.csv')\ntrain","3306006e":"train.rename(columns={\n    'Id':'id',\n    'Province_State':'province',\n    'Country_Region':'country',\n    'Date':'date',\n    'ConfirmedCases':'confirmed',\n    'Fatalities':'deaths'\n},inplace=True)\ntrain","52742712":"test=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/test.csv')\ntest","135e4f25":"train_1=train.merge(coordinate,on='country')\ntrain_1","78524146":"test.rename(columns={\n    'ForecastId':'forecastid',\n    'Province_State':'province',\n    'Country_Region':'country',\n    'Date':'date'\n},inplace=True)","8c66d62f":"train['province'].unique()","4549af87":"test['province'].unique()","2d8430dc":"train.info()","9dfd9432":"train['province'].isna().sum()","9febc5b9":"train['country'].unique()","527c5c2f":"train['country'].value_counts()","b180a62f":"!pip install --upgrade calmap","d616cd9b":"import matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\n\nfrom IPython.display import display\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.preprocessing import PolynomialFeatures\nimport datetime\nimport time\nimport warnings\nwarnings.filterwarnings('ignore')\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nimport folium\nfrom datetime import timedelta\n# color pallette\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801' \nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters() \n%matplotlib inline\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","480ceab7":"cols=train.keys()\ncols","4afb4792":"confirmed=train.loc[:,cols[4]:cols[-2]]\nconfirmed\n\n\n","eca62606":"deaths=train.loc[:,cols[5]:cols[-1]]\ndeaths","3a19ac8d":"temp=train.groupby('date')['confirmed','deaths'].sum().reset_index()\ntemp=temp[temp['date']==max(temp['date'])].reset_index(drop=True)\ntm=temp.melt(id_vars=\"date\",value_vars=['confirmed','deaths'])\nfig=px.treemap(tm,path=[\"variable\"],values=\"value\",height=225,width=1200,color_discrete_sequence=[act,rec])\nfig.data[0].textinfo='label+text+value'\nfig.show()","4d76e1ab":"temp=train.groupby('date')['confirmed','deaths'].sum().reset_index()\ntemp=temp.melt(id_vars=\"date\",value_vars=[\"deaths\",\"confirmed\"],var_name='Case',value_name='Count')\ntemp.head()\nfig=px.area(temp,x='date',y='Count',color='Case',height=600,title='Cases over time',color_discrete_sequence=[rec,dth])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","ffa27fe0":"full_grouped=train.groupby(['date','country',])['confirmed','deaths'].sum().reset_index()\n","b77d1021":"#Day wise\nday_wise=full_grouped.groupby('date')['confirmed','deaths'].sum().reset_index()\n#number of cases per 100 cases\nday_wise['deaths\/100 Cases']=round((day_wise['deaths']\/day_wise['confirmed'])*100,2)\n#no of countries\nday_wise['No.of countries']=full_grouped[full_grouped['confirmed']!=0].groupby('date')['country'].unique().apply(len).values\ncols=['deaths\/100 Cases']\nday_wise[cols]=day_wise[cols].fillna(0)","71e421f1":"#Country wise\ncountry_wise=full_grouped[full_grouped['date']==max(full_grouped['date'])].reset_index(drop=True).drop('date',axis=1)\n#group by country\ncountry_wise=country_wise.groupby('country')['confirmed','deaths'].sum().reset_index()\n#per 100 cases\ncountry_wise['deaths\/100 Cases']=round((country_wise['deaths']\/country_wise['confirmed'])*100,2)\ncols=['deaths\/100 Cases']\ncountry_wise[cols]=country_wise[cols].fillna(0)\ncountry_wise.head()","aa15bcfe":"temp_1=full_grouped.sort_values(by='deaths',ascending=False)\ntemp_1=temp_1.reset_index(drop=True)\ntemp_1.style.background_gradient(cmap='Blues')","2ddd9a1b":"#Over the time\nfig=px.choropleth(full_grouped,locations='country',locationmode='country names',color=np.log(full_grouped['confirmed']),hover_name='country',animation_frame=full_grouped['date'],title='Cases over time',color_continuous_scale=px.colors.sequential.Magenta)\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","79c6c3bf":"#Confirmed\nfig_c=px.choropleth(country_wise,locations=\"country\",locationmode='country names',color=np.log(country_wise[\"confirmed\"]),hover_name=\"country\",hover_data=['confirmed'])\n#Deaths\ntemp=country_wise[country_wise['deaths']>0]\nfig_d=px.choropleth(temp,locations='country',locationmode='country names',color=np.log(temp['deaths']),hover_name='country',hover_data=['deaths'])\n#plot\nfig=make_subplots(rows=1,cols=2,subplot_titles=['confirmed','deaths'],specs=[[{\"type\":\"choropleth\"},{\"type\":\"choropleth\"}]])\nfig.add_trace(fig_c['data'][0],row=1,col=1)\nfig.add_trace(fig_d['data'][0],row=1,col=2)\nfig.update(layout_coloraxis_showscale=False)\nfig.show()\n","f5e0e716":"fig_c=px.bar(day_wise,x=\"date\",y=\"confirmed\",color_discrete_sequence=[act])\nfig_d=px.bar(day_wise,x=\"date\",y=\"deaths\",color_discrete_sequence=[dth])\nfig=make_subplots(rows=1,cols=2,shared_xaxes=False,horizontal_spacing=0.1,subplot_titles=('Confirmed case','Deaths reported'))\nfig.add_trace(fig_c['data'][0],row=1,col=1)\nfig.add_trace(fig_d['data'][0],row=1,col=2)\nfig.update_layout(height=460)\nfig.show()\n#-----------------\nfig_1=px.line(day_wise,x='date',y='deaths\/100 Cases',color_discrete_sequence=[dth])\nfig=make_subplots(rows=1,cols=1,shared_xaxes=False,subplot_titles=('Deaths\/100 Cases'))\nfig.add_trace(fig_1['data'][0],row=1,col=1)\nfig.update_layout(height=460)\n","a941b2d8":"fig=px.scatter(country_wise.sort_values('deaths',ascending=False).iloc[:15,:],x=\"confirmed\",y='deaths',color='country',size='confirmed',height=700,text='country',log_x=True,log_y=True,title=\"Deaths Vs Confirmed (Scale is in log10)\")\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","9990425a":"fig=px.bar(full_grouped,x='date',y='confirmed',color='country',height=600,title='Confirmed',color_discrete_sequence=px.colors.cyclical.mygbm)\nfig.show()\nfig=px.bar(full_grouped,x='date',y='deaths',color='country',height=600,title='Deaths',color_discrete_sequence=px.colors.cyclical.mygbm)\nfig.show()","c3a29a60":"fig=px.line(full_grouped,x='date',y='confirmed',color='country',height=600,title='Confirmed',color_discrete_sequence=px.colors.cyclical.mygbm)\nfig.show()\nfig=px.line(full_grouped,x='date',y='deaths',color='country',height=600,title='Deaths',color_discrete_sequence=px.colors.cyclical.mygbm)\nfig.show()","bb36d33f":"full_latest=train[train['date']==max(train['date'])]\nfig=px.treemap(full_latest.sort_values(by='confirmed',ascending=False).reset_index(drop=True),path=[\"country\"],values='confirmed',height=700,title=\"Number of Confirmed Cases\",color_discrete_sequence=px.colors.qualitative.Dark2)\nfig.data[0].textinfo='label+text+value'\nfig.show()\n\nfig=px.treemap(full_latest.sort_values(by='deaths',ascending=False).reset_index(drop=True),\n              path=[\"country\"],values='deaths',height=700,title=\"Number of Deaths Cases\",color_discrete_sequence=px.colors.qualitative.Dark2)\nfig.data[0].textinfo='label+text+value'\nfig.show()\n","8073fa24":"from IPython.core.display import HTML\nHTML('''<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/1571387\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>''')","3ca53f72":"import math\ntemp=train.groupby(['country','date',])['confirmed','deaths']\ntemp=temp.sum().diff().reset_index()\nmask=temp['country']!=temp['country'].shift(1)\ntemp.loc[mask,'confirmed']=np.nan\ntemp.loc[mask,'deaths']=np.nan\n\ncountries=temp['country'].unique()\nn_cols=4\nn_rows=math.ceil(len(countries)\/n_cols)\nfig=make_subplots(rows=n_rows,cols=n_cols,shared_xaxes=False,subplot_titles=countries)\nfor ind,country in enumerate(countries):\n    row=int((ind\/n_cols)+1)\n    col=int((ind%n_cols)+1)\n    fig.add_trace(go.Bar(x=temp['date'],y=temp.loc[temp['country']==country,'confirmed'],name=country),row=row,col=col)\nfig.update_layout(height=8000,title_text=\"No.of new cases in each country\")\nfig.show()\n","a38d443e":"import seaborn as sns\nf,ax=plt.subplots(figsize=(120,40))\ndata=train[['country','confirmed','deaths']]\ndata.sort_values('confirmed',ascending=False,inplace=True)\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"confirmed\",y=\"country\",data=train,label=\"Confirmed\",color=\"r\")\nsns.set_color_codes(\"muted\")\nsns.barplot(x='deaths',y='country',data=train,label=\"Deaths\",color=\"g\")\nax.legend(ncol=2,loc=\"lower right\",frameon=True)\nax.set(xlim=(0,135),ylabel=\"\",xlabel=\"cases\")\nsns.despine(left=True,bottom=True)","dd12a596":"#confirmed-deaths\nfig_c=px.bar(country_wise.sort_values('confirmed').tail(25),x='confirmed',y='country',orientation='h',color_discrete_sequence=[act])\nfig_d=px.bar(country_wise.sort_values('deaths').tail(25),x='deaths',y='country',orientation='h',color_discrete_sequence=[dth])\n\n\n#death-recoverd \/100 cases\nfig_dc=px.bar(country_wise.sort_values('deaths\/100 Cases').tail(25),x=\"deaths\/100 Cases\",y='country',text='deaths\/100 Cases',orientation='h',color_discrete_sequence=['#f38181'])\n#plot\nfig=make_subplots(rows=3,cols=2,shared_xaxes=False,horizontal_spacing=0.14,vertical_spacing=0.08,subplot_titles=('Confirmed Cases','Deaths reported','Deaths\/100 cases'))\nfig.add_trace(fig_c['data'][0],row=1,col=1)\nfig.add_trace(fig_d['data'][0],row=1,col=2)\nfig.add_trace(fig_dc['data'][0],row=2,col=1)\nfig.update_layout(height=30000)","f56051b6":"total_confirmed_China=train[train['country']=='China'].groupby(['date']).agg({'confirmed':['sum']})\ntotal_deaths_China=train[train['country']=='China'].groupby(['date']).agg({'deaths':['sum']})\ntotal_China=total_confirmed_China.join(total_deaths_China)\ntotal_confirmed_Italy=train[train['country']=='Italy'].groupby(['date']).agg({'confirmed':['sum']})\ntotal_deaths_Italy=train[train['country']=='Italy'].groupby(['date']).agg({'deaths':['sum']})\ntotal_Italy=total_confirmed_Italy.join(total_deaths_Italy)\ntotal_confirmed_Spain=train[train['country']=='Spain'].groupby(['date']).agg({'confirmed':['sum']})\ntotal_deaths_Spain=train[train['country']=='Spain'].groupby(['date']).agg({'deaths':['sum']})\ntotal_Spain=total_confirmed_Spain.join(total_deaths_Spain)\ntotal_confirmed_US=train[train['country']=='US'].groupby(['date']).agg({'confirmed':['sum']})\ntotal_deaths_US=train[train['country']=='US'].groupby(['date']).agg({'deaths':['sum']})\ntotal_US=total_confirmed_US.join(total_deaths_US)\ntotal_confirmed_India=train[train['country']=='India'].groupby(['date']).agg({'confirmed':['sum']})\ntotal_deaths_India=train[train['country']=='India'].groupby(['date']).agg({'deaths':['sum']})\ntotal_India=total_confirmed_India.join(total_deaths_India)\nplt.figure(figsize=(17,10))\nplt.subplot(3,2,1)\ntotal_China.plot(ax=plt.gca(),title='China')\nplt.ylabel('Confirmed infection cases')\nplt.subplot(3,2,2)\ntotal_Italy.plot(ax=plt.gca(),title='Italy')\nplt.ylabel('Confirmed infection cases')\nplt.subplot(3,2,3)\ntotal_Spain.plot(ax=plt.gca(),title='Spain')\nplt.ylabel('Confirmed infection cases')\nplt.subplot(3,2,4)\ntotal_US.plot(ax=plt.gca(),title='US')\nplt.ylabel('Confirmed infection cases')\nplt.subplot(3,2,5)\ntotal_India.plot(ax=plt.gca(),title='India')\nplt.ylabel('Confirmed infection cases')\n\n\n","696a367e":"pop_china=1438086047\npop_italy=60481360\npop_spain= 46750731\npop_US=330568224\npop_india=1376937200\ntotal_China.confirmed=total_China.confirmed\/pop_china*100\ntotal_Italy.confirmed=total_Italy.confirmed\/pop_italy*100\ntotal_Spain.confirmed=total_Spain.confirmed\/pop_spain*100\ntotal_US.confirmed=total_China.confirmed\/pop_spain*100\ntotal_India.confirmed=total_China.confirmed\/pop_india*100\nplt.figure(figsize=(15,10))\nplt.subplot(3, 2, 1)\ntotal_China.confirmed.plot(ax=plt.gca(), title='China')\nplt.ylabel(\"Fraction of population infected\")\nplt.ylim(0, 0.5)\nplt.subplot(3, 2, 2)\ntotal_Italy.confirmed.plot(ax=plt.gca(), title='Italy')\nplt.ylabel(\"Fraction of population infected\")\nplt.ylim(0, 0.5)\nplt.subplot(3, 2, 3)\ntotal_Spain.confirmed.plot(ax=plt.gca(), title='Spain')\nplt.ylabel(\"Fraction of population infected\")\nplt.ylim(0, 0.5)\nplt.subplot(3, 2, 4)\ntotal_US.confirmed.plot(ax=plt.gca(), title='US')\nplt.ylabel(\"Fraction of population infected\")\nplt.ylim(0, 0.5)\nplt.subplot(3, 2, 5)\ntotal_India.confirmed.plot(ax=plt.gca(), title='India')\nplt.ylabel(\"Fraction of population infected\")\nplt.ylim(0, 0.5)","afff0984":"\nconfirmed_total_italy=train[(train['country']=='Italy')&train['confirmed']!=0].groupby(['date']).agg({'confirmed':['sum']})\ndeaths_total_italy=train[(train['country']=='Italy') & train['confirmed']!=0].groupby(['date']).agg({'deaths':['sum']})\ntotal_italy=confirmed_total_italy.join(deaths_total_italy)\n\nconfirmed_total_spain=train[(train['country']=='Spain')&train['confirmed']!=0].groupby(['date']).agg({'confirmed':['sum']})\ndeaths_total_spain=train[(train['country']=='Spain') & train['confirmed']!=0].groupby(['date']).agg({'deaths':['sum']})\ntotal_spain=confirmed_total_spain.join(deaths_total_spain)\n\nconfirmed_total_us=train[(train['country']=='US')&train['confirmed']!=0].groupby(['date']).agg({'confirmed':['sum']})\ndeaths_total_us=train[(train['country']=='US') & train['confirmed']!=0].groupby(['date']).agg({'deaths':['sum']})\ntotal_us=confirmed_total_italy.join(deaths_total_italy)\n\nconfirmed_total_india=train[(train['country']=='India')&train['confirmed']!=0].groupby(['date']).agg({'confirmed':['sum']})\ndeaths_total_india=train[(train['country']=='India') & train['confirmed']!=0].groupby(['date']).agg({'deaths':['sum']})\ntotal_india=confirmed_total_india.join(deaths_total_india)\n\n\n\nitaly=[i for i in total_italy.confirmed['sum'].values]\nitaly_30=italy[0:80]\n\nspain=[i for i in total_spain.confirmed['sum'].values]\nspain_30=spain[0:80]\n\nus=[i for i in total_us.confirmed['sum'].values]\nus_30=us[0:80]\n\nindia=[i for i in total_india.confirmed['sum'].values]\nindia_30=india[0:80]\n#plots\nplt.figure(figsize=(14,8))\n\nplt.plot(italy_30)\nplt.plot(spain_30)\nplt.plot(us_30)\nplt.plot(india_30)\nplt.legend([\"Italy\",\"Spain\",\"US\",\"India\"],loc='upper_left')\nplt.title(\"Covid-19 infections from the first confirmed case\",size=15)\nplt.xlabel(\"Days\",size=13)\nplt.ylabel(\"Infected cases\",size=13)\nplt.ylim(0,130000)\nplt.show()\n\n","5e2db467":"confirmed_total_italy=train[(train['country']=='Italy')&train['confirmed']!=0].groupby(['date']).agg({'confirmed':['sum']})\ndeaths_total_italy=train[(train['country']=='Italy') & train['confirmed']!=0].groupby(['date']).agg({'deaths':['sum']})\ntotal_italy=confirmed_total_italy.join(deaths_total_italy)\nitaly=[i for i in total_italy.confirmed['sum'].values]\nitaly_30=italy[0:80]\nplt.figure(figsize=(14,6))\nplt.plot(italy_30)\nplt.legend([\"Italy\"],loc='upper_left')\nplt.title(\"Covid-19 infections from the first confirmed case\",size=15)\nplt.xlabel(\"Days\",size=13)\nplt.ylabel(\"Infected cases\",size=13)\nplt.ylim(0,130000)\nplt.show()","8913e37a":"from sklearn import preprocessing\nfrom datetime import datetime\n#merge train and test ,exclude overlap\ndates_overlap=['2020-04-01','2020-04-02','2020-04-03','2020-04-04','2020-04-05','2020-04-06','2020-04-07','2020-04-08','2020-04-09','2020-04-10']\ntrain2=train.loc[~train['date'].isin(dates_overlap)]\nall_data=pd.concat([train2,test],axis=0,sort=False)\n#Double check that there are no informed ConfirmedCases and deaths after 2020-03-11\nall_data.loc[all_data['date']>='2020-04-01','confirmed']=0\nall_data.loc[all_data['date']>='2020-04-01','deaths']=0\nall_data['date']=pd.to_datetime(all_data['date'])\n#create data columns\nle=preprocessing.LabelEncoder()\nall_data['day_num']=le.fit_transform(all_data.date)\nall_data['day']=all_data['date'].dt.day\nall_data['month']=all_data['date'].dt.month\nall_data['Year']=all_data['date'].dt.year\n#full null values given that we merged train-test datasets\nall_data['province'].fillna(\"None\",inplace=True)\nall_data['confirmed'].fillna(0,inplace=True)\nall_data['deaths'].fillna(0,inplace=True)\nall_data['id'].fillna(-1,inplace=True)\nall_data['forecastid'].fillna(-1,inplace=True)\ndisplay(all_data)\n","7dd55f43":"missings_count={col:all_data[col].isnull().sum() for col in all_data.columns}\nmissings=pd.DataFrame.from_dict(missings_count,orient='index')\nprint(missings.nlargest(30,0))","144e2928":"full_latest=all_data[all_data['day']==max(all_data['day'])]\nfig=px.treemap(full_latest.sort_values(by='confirmed',ascending=False).reset_index(drop=True),path=[\"country\"],values='confirmed',height=700,title=\"Number of Confirmed Cases\",color_discrete_sequence=px.colors.qualitative.Dark2)\nfig.data[0].textinfo='label+text+value'\nfig.show()\n\nfig=px.treemap(full_latest.sort_values(by='deaths',ascending=False).reset_index(drop=True),\n              path=[\"country\"],values='deaths',height=700,title=\"Number of Deaths Cases\",color_discrete_sequence=px.colors.qualitative.Dark2)\nfig.data[0].textinfo='label+text+value'\nfig.show()","9f1a1c0a":"temp=train.groupby('date')['confirmed','deaths'].sum().reset_index()\ntemp=temp.melt(id_vars='date',value_vars=['confirmed','deaths'],var_name='Case',value_name='Count')\n\ntemp.head()\nfig=px.area(temp,x=\"date\",y=\"Count\",color=\"Case\",title=\"Cases Over Time\",color_discrete_sequence=['#ffeebb',\"#2367ff\"])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","cf02d067":"As a fraction of the total population of each country","263f97df":"**Date Vs**","4244d62f":"**Data Explaintory**","4479df47":"**Dataset**","6d345957":"# Cases over the time","0deb81fe":"Double-check that there are no remaining missing values","22fea014":"**Join data,filter dates and clean missings**","f39c68db":"**Deaths vs Confirmed(Scale is in log 10)**","51eec937":"# Top 30 Countries","82ef4fad":"**Epidemic Span**\n\nIn the graph ,last day is shown as one day after the last time a new confirmed cases reported in the Country\/Region.\n","277559e9":"**Composition of Cases**","2759046a":"**Country Wise**"}}