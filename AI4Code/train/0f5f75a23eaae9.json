{"cell_type":{"92397feb":"code","56b0e14a":"code","7ea5b160":"code","8df77b5d":"code","ee030281":"code","c69fa18b":"code","c872a63a":"code","139678ac":"code","82eff0dc":"code","f6fc1c9a":"code","8e26e608":"code","167a2f10":"code","22615b61":"code","7b3c802c":"code","0918bb2e":"code","cb10b9cd":"markdown","d46f348d":"markdown","92e71c2e":"markdown","d0de38fe":"markdown"},"source":{"92397feb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","56b0e14a":"import pandas as pd\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","7ea5b160":"train.head()","8df77b5d":"import numpy as np\nimport tensorflow as tf\nY_train = np.expand_dims(np.array(train.Survived), axis=1)\nprint(type(Y_train),Y_train.shape)","ee030281":"#Get unique categories in Sex col\ntrain.Sex.unique()\n#Now let one-hot encode these categories\nfeatures = [\"Pclass\", \"Sex\",\"Age\" ,\"SibSp\", \"Parch\", \"Embarked\"]\nX_train  = pd.get_dummies(train[features])\nX_test =  pd.get_dummies(test[features])","c69fa18b":"X_train.head()","c872a63a":"#Lets see how many missing datas are there in the features\nprint(X_train.Pclass.isna().sum())\nprint(X_train.Age.isna().sum())\nprint(X_train.SibSp.isna().sum())\nprint(X_train.Parch.isna().sum())\n\n#Lets impute the ages where it is not there with average\nprint(X_train.Age.mean())\nX_train.Age = X_train.Age.fillna(X_train.Age.mean())\nprint(X_train.Age.isna().sum())\n","139678ac":"X_train = X_train.to_numpy()\nX_test =  X_test.to_numpy()\nprint(type(X_train), X_train.shape)\nprint(type(X_test), X_test.shape)","82eff0dc":"import tensorflow as tf\n\nmodel = tf.keras.Sequential(\n[\n    tf.keras.layers.Dense(32,input_shape=(9,)),\n    tf.keras.layers.Dense(8, activation='relu'),\n    tf.keras.layers.Dense(1,activation='sigmoid')\n])\n\nmodel.summary()\nmodel.compile(optimizer='RMSProp',loss='binary_crossentropy',metrics=['accuracy'])","f6fc1c9a":"history = model.fit(X_train,Y_train,batch_size=4,epochs=100,callbacks=[tf.keras.callbacks.EarlyStopping(monitor='accuracy',patience=5)])","8e26e608":"predicted_output = np.nan_to_num(model.predict(X_test))\npredicted_output = np.rint(predicted_output).astype('int32')\nprint(type(predicted_output))","167a2f10":"prediction_csv = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\n","22615b61":"prediction_csv.Survived = predicted_output","7b3c802c":"prediction_csv.sample","0918bb2e":"prediction_csv.to_csv('\/kaggle\/working\/predictions.csv',index=False)","cb10b9cd":"We have our Y class from column Survived.\n\nLets make it a numpy array so that it is ready for TF consumption","d46f348d":"We will use Pclass, Sex, Age , SibSp , Parch and Embarked as our X features \n\nBefore we start, lets convert the features into numerical values","92e71c2e":"Let now create our TF model and compile it with optimizers and Loss functions","d0de38fe":"Convert the X_train to numpy arrays"}}