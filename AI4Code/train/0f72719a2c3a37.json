{"cell_type":{"9b75f61d":"code","91d3dd94":"code","62bb2c2c":"code","3c32e112":"code","68e144ac":"code","f5210515":"code","98057218":"code","c8ae7ccf":"code","b2ccacf8":"code","17c3bd04":"code","4ccdc4da":"code","3c6be877":"code","56d790e9":"code","09b5ccc0":"code","90ba14eb":"code","6afc0b81":"code","1a73dceb":"code","1f3fa24a":"code","b8787b13":"code","c1261369":"markdown","d5f06671":"markdown","fa4c3a20":"markdown","c5f2d434":"markdown"},"source":{"9b75f61d":"import numpy as np\nimport pandas as pd","91d3dd94":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","62bb2c2c":"train_data[10:30]","3c32e112":"train_data.describe(include='all')","68e144ac":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","f5210515":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","98057218":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","c8ae7ccf":"train_data[['Sex','Parch', 'Survived']].groupby(['Parch','Sex']).mean()\n","b2ccacf8":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","17c3bd04":"train_data[['Fare', 'Survived']].groupby(['Fare']).mean()","4ccdc4da":"train_data[['Sex','Age', 'Survived']].groupby(['Age','Sex']).mean()","3c6be877":"train_data[['Sex','Embarked','Pclass', 'Survived']].groupby(['Embarked','Sex','Pclass']).mean()","56d790e9":"train_data[['Pclass', 'Survived']].groupby(['Pclass']).mean()","09b5ccc0":"train_data[['SibSp','Sex', 'Pclass','Survived']].groupby(['SibSp','Sex','Pclass']).mean()","90ba14eb":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        if row['Embarked']=='C' and  row['Embarked']=='Q':\n            women_count+=1\n        if row['Embarked']=='S' and row['Pclass']<3:\n            women_count+=1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","6afc0b81":"predictions = [] \nfor idx, row in test_data.iterrows():\n    # make your changes in this cell\n    if row['Sex'] == 'female':\n        if row['Pclass']==1 or row['Pclass']==2:\n            predictions.append(1)\n        else:\n            if row['Age'] <= 17:\n                predictions.append(1)\n            else:\n                predictions.append(0)\n    else:\n        if row['Age'] <= 22 and row['Pclass'] == 1 :\n            predictions.append(1)\n        else:\n            predictions.append(0)","1a73dceb":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","1f3fa24a":"test_data['Survived'] = predictions","b8787b13":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","c1261369":"# Loading and examining data","d5f06671":"# Basic analysis","fa4c3a20":"# Working with rows manually","c5f2d434":"# Making predictions"}}