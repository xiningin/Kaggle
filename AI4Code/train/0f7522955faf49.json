{"cell_type":{"8fdff4c6":"code","b1f1b244":"code","1aea6308":"code","b5ac44ab":"code","8d12b605":"code","0bec5ae3":"code","60d714ac":"code","ea8c19a0":"code","d6e82aeb":"markdown","2d2af803":"markdown","940af5d3":"markdown","7eee646e":"markdown","7e652491":"markdown"},"source":{"8fdff4c6":"import numpy as np\nimport pandas as pd","b1f1b244":"data =pd.read_csv(\"\/kaggle\/input\/carla-driver-behaviour-dataset\/full_data_carla.csv\",index_col=0)\ndata.info()","1aea6308":"data['class'].unique()","b5ac44ab":"x = data.drop([\"class\"],axis=1)\ny = data[\"class\"].values\nfrom sklearn.preprocessing import LabelEncoder\ny = LabelEncoder().fit_transform(y)","8d12b605":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.25, shuffle=True)\nprint(\"Train Set Shape: \", X_train.shape)\nprint(\"Test Set Shape: \", X_test.shape)","0bec5ae3":"from tensorflow.python.keras.utils.np_utils import to_categorical\ny_train = to_categorical(y_train, num_classes=7)\ny_test = to_categorical(y_test, num_classes=7)","60d714ac":"from tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense\nfrom tensorflow.python.keras.callbacks import EarlyStopping\nfrom tensorflow.python.keras.layers import Dropout\n\nearly_stop = EarlyStopping(monitor='loss', patience=2)\nmodel = Sequential()\n\nmodel.add(Dense(32, activation='relu', input_shape=(6,),kernel_initializer='random_uniform'))\nmodel.add(Dense(64, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dense(128, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dense(256, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(512, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(256, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(128, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dense(64, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dense(128, activation='relu',kernel_initializer='random_uniform'))\nmodel.add(Dense(7, activation='softmax',kernel_initializer='random_uniform'))\n\nmodel.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\nmodel.summary()","ea8c19a0":"hist = model.fit(X_train , y_train , epochs=1100, validation_split=0.2)","d6e82aeb":"**Train-test split section**","2d2af803":"**Data parse section**","940af5d3":"**Label encoding --> String to Integer**","7eee646e":"**Checking labels...**","7e652491":"**Categorical encoding to use categorical_loss in keras api**"}}