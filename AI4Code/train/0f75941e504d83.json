{"cell_type":{"10da2274":"code","9455a239":"markdown"},"source":{"10da2274":"#!\/usr\/bin\/python3\n# coding=utf-8\n#===========================================================================\n# This is a minimal script to perform a regression on the kaggle \n# 'House Prices' data set using the keras deep learning library \n# Carl McBride Ellis (15.IV.2020)\n#===========================================================================\n#===========================================================================\n# load up the libraries\n#===========================================================================\nimport pandas  as pd\nimport numpy   as np\nfrom   keras.models import Sequential\nfrom   keras.layers import Dense             # i.e.fully connected\n\n#===========================================================================\n# read in the data from your local directory\n#===========================================================================\ntrain_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\n#===========================================================================\n# select some features of interest (\"ay, there's the rub\", Shakespeare)\n#===========================================================================\nfeatures = ['OverallQual' , 'GrLivArea' , 'TotalBsmtSF' , 'BsmtFinSF1' ,\n            '2ndFlrSF'    , 'GarageArea', '1stFlrSF'    , 'YearBuilt'  ]\n\n#===========================================================================\n#===========================================================================\nX_train       = train_data[features]\ny_train       = train_data[\"SalePrice\"]\nfinal_X_test  = test_data[features]\n\n#===========================================================================\n# essential preprocessing: imputation; substitute any 'NaN' with mean value \n#===========================================================================\nX_train      = X_train.fillna(X_train.mean())\nfinal_X_test = final_X_test.fillna(final_X_test.mean())\n\n\n#===========================================================================\n# parameters for keras\n#===========================================================================\ninput_dim        = X_train.shape[1] # number of neurons in the input layer\nn_neurons        =  25       # number of neurons in the first hidden layer\nepochs           = 150       # number of training cycles\n\n#===========================================================================\n# keras model\n#===========================================================================\nmodel = Sequential()        # a model consisting of successive layers\n# input layer\nmodel.add(Dense(n_neurons, input_dim=input_dim, \n                kernel_initializer='normal', \n                activation='relu'))\n# output layer, with one neuron\nmodel.add(Dense(1, kernel_initializer='normal'))\n# compile the model\nmodel.compile(loss='mean_squared_error', optimizer='adam')\n\n#===========================================================================\n# train the model\n#===========================================================================\nmodel.fit(X_train, y_train, epochs=epochs, verbose=0)\n\n#===========================================================================\n# use the model to predict the prices for the test data\n#===========================================================================\npredictions = model.predict(final_X_test)\n\n#===========================================================================\n# write out CSV submission file\n#===========================================================================\noutput = pd.DataFrame({\"Id\":test_data.Id, \"SalePrice\":predictions.flatten()})\noutput.to_csv('submission.csv', index=False)","9455a239":"This is a minimalist script to perfom regression of the 'House Prices' data set using the keras deep learning library. As an example, for feature selection I have used the top eight features obtained from my scikit-learn [recursive feature elimination script](https:\/\/www.kaggle.com\/carlmcbrideellis\/recursive-feature-elimination-hp-v1).\nThe purpose of this script is to serve as a basic starting baseline from which you can launch your own feature engineering, model\/parameter tuning with a grid search, stratified k-fold cross validation, different activation functions, net topology, etc etc..."}}