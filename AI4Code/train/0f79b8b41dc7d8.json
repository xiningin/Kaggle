{"cell_type":{"a398328b":"code","27b3be91":"code","3b33e8b8":"code","6b20afb0":"code","691547c0":"code","d0abdd33":"code","1aab3f8f":"code","7c18aaa9":"code","b5c2eb60":"code","efbeac72":"code","0551b1bd":"code","03eba074":"code","1a078ba2":"code","d391b02f":"code","dd46dc42":"code","dd40364f":"code","eb836ce2":"code","360f2ab4":"code","b49078a4":"code","24b54eee":"code","5c2911a5":"code","82755535":"code","03d000b1":"code","01ada36c":"code","ed493e5c":"code","4111e4cc":"code","dbbddbef":"code","da42b36e":"code","347d26f9":"code","1930fbc7":"code","4df7ec8d":"code","a27d7f07":"markdown","d3c49be4":"markdown","903dcbe4":"markdown","69265907":"markdown","5df2ac35":"markdown","74ced1a5":"markdown","685aff4b":"markdown","99009e20":"markdown","ae2e764a":"markdown","3c45039b":"markdown","771f1e0b":"markdown","4206cee1":"markdown","8423d43f":"markdown","f52c8c08":"markdown","eab989c4":"markdown","92b8faa8":"markdown","faf7b900":"markdown","0aac003c":"markdown","9a75ee27":"markdown","b2fe1054":"markdown","1fdfef90":"markdown"},"source":{"a398328b":"import keras\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","27b3be91":"(X_train, y_train), (X_test, y_test) = keras.datasets.fashion_mnist.load_data()","3b33e8b8":"X_train.shape, y_train.shape","6b20afb0":"X_test.shape, y_test.shape","691547c0":"X_train[0]","d0abdd33":"y_train[0]","1aab3f8f":"class_labels = [\"T-shirt\/top\",\"Trouser\", \"Pullover\", \"Dress\", \"Coat\", \"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\",]","7c18aaa9":"class_labels[9]","b5c2eb60":"plt.imshow(X_train[0], cmap = 'Greys')\nplt.show()","efbeac72":"plt.figure(figsize = (16,16))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.imshow(X_train[i], cmap = 'Greys')\n    plt.axis('off')\n    plt.title(class_labels[y_train[i]] + \"=\" + str(y_train[i]), fontsize = 20)","0551b1bd":"X_train_Scale = X_train \/ 255\nX_test_Scale = X_test \/ 255","03eba074":"X_train_Scale[0]\n# All the values are now rage from 0 to 1","1a078ba2":"model = keras.models.Sequential(\n    [\n        keras.layers.Flatten(input_shape = [28,28]),\n        keras.layers.Dense(units = 32, activation = 'relu'),\n        keras.layers.Dense(units = 10, activation = 'softmax')\n    ]\n)","d391b02f":"model.summary()","dd46dc42":"model.compile(\n    optimizer = 'adam',\n    loss = 'sparse_categorical_crossentropy',\n    metrics = ['accuracy']\n)","dd40364f":"model.fit(X_train_Scale, y_train, epochs = 10)","eb836ce2":"model.evaluate(X_test_Scale, y_test)","360f2ab4":"y_pred = model.predict(X_test_Scale)","b49078a4":"# Lets verify for first value.\n# y_pred[0] \ny_pred[0].round(2)","24b54eee":"np.argmax(y_pred[0].round(2)) # Get the index for max value.","5c2911a5":"print('Actual value    : {}'.format(class_labels[y_test[0]]))\nprint('Predicted value : {}'.format(class_labels[np.argmax(y_pred[0].round(2))]))","82755535":"plt.figure(figsize = (16,16))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.imshow(X_test[i], cmap = 'Greys')\n    plt.axis('off')\n    plt.title(\"Actual = {} \\n Predicted = {}\".format(class_labels[y_test[i]], class_labels[np.argmax(y_pred[i])]) )","03d000b1":"from sklearn.metrics import confusion_matrix","01ada36c":"cm = confusion_matrix(y_test, [np.argmax(i) for i in y_pred])","ed493e5c":"plt.figure(figsize = (16,9))\nsns.heatmap(cm, annot = True, fmt = \"d\")","4111e4cc":"from sklearn.metrics import classification_report","dbbddbef":"cr = classification_report(\n    y_test, \n    [ np.argmax(i) for i in y_pred],\n    target_names = class_labels,\n)","da42b36e":"print(cr)","347d26f9":"model.save(\"Faishon_MNIST_Keras_model.h5\")","1930fbc7":"model_loaded = keras.models.load_model('Faishon_MNIST_Keras_model.h5')","4df7ec8d":"model_loaded.predict(X_test_Scale)","a27d7f07":"# Test ad Evaluate Neural Network Model","d3c49be4":"# Feature Scalling","903dcbe4":"## Access first Image","69265907":"# Load Data","5df2ac35":"# Import Libraries","74ced1a5":"# Visualize Predicted values.","685aff4b":"# Confusion Matrix","99009e20":"This has resulted the Array of first image. From above we can see that the array is of 28 * 28... i mean 28 rows and 28 columns.\n\nWhere 0 represent White pixcel and 255 represent Black color. As there we do not have any channel, so it a Gray scale image or Black-White Image.\n","ae2e764a":"Wow.. we trained our model.","3c45039b":"So now we know 9 represent Ankle boot.","771f1e0b":"# Build Neural Network","4206cee1":"# Load the saved model for prediction","8423d43f":"# Predict","f52c8c08":"## Visualize the Image","eab989c4":"# Deep Learning Project\nThis is to work on Fashion MNIST Classification","92b8faa8":"Now will visualize multiple images.","faf7b900":"# Classification Report","0aac003c":"# Save Model\nWith Machine Learning, we use joblib to save the model, where as with Keras we can use the keras library or function `save()` with `h5` extension","9a75ee27":"We have total of 60000 images in Train dataset, with 28 * 28 pixcels.\nSimilarly we do have 1000 images with same 28 * 28 pixcels.","b2fe1054":"As as the image is 28*28 resolution, so it may not be visible properly, but we could identify it easily.\nThough we could increase the resolution to get clear picture, but it will increase the computational power and time. Thus for training we try to keep low resolution so as to train the model more efficiently.","1fdfef90":"Now here we are trying to check the label or class at index zero (first image). For above array which we got from X_train[0], which image it represent to. This is achieved from y_train[0].\n\nBut what is this 9 represent... for this first we need to create a list of label, as below."}}