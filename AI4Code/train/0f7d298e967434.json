{"cell_type":{"e2a212e4":"code","ae77af83":"code","4146f9cb":"code","807b7c9c":"code","283e0c8e":"code","1c7780b2":"code","39d18892":"code","e4b63b9d":"code","1152a06b":"code","3cdd91dd":"code","6864a4e1":"code","ef0a29f8":"code","bfef8752":"code","64270b0a":"code","efff665f":"code","5b849078":"code","d807ba8e":"code","be277216":"code","6f350aa5":"code","3764265d":"code","c8a7e844":"code","5dd76b0a":"code","b9491ea8":"code","f62bdf40":"code","09ae40ac":"code","cb68bb95":"code","420d687a":"code","04f25ba8":"code","ee8b20f6":"code","3c7bb094":"code","8b63c9ef":"code","11c973ac":"code","45e807b0":"code","62fa4b21":"code","317124b8":"code","84965eec":"code","038abaff":"code","3d90d126":"code","02f5f256":"code","18d80d7a":"code","0641050b":"code","e6bb0042":"code","09e7398c":"code","48dceedf":"code","e026188f":"markdown","eaa43d91":"markdown","aa3dc6b0":"markdown","6fa712e5":"markdown","9f34461a":"markdown","b0c94b6a":"markdown","b0b337fe":"markdown","93b4dbdf":"markdown","92a0c043":"markdown","3ddc27ab":"markdown","6dfa1aed":"markdown","46077352":"markdown"},"source":{"e2a212e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ae77af83":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","4146f9cb":"raw_data = pd.read_csv('..\/input\/life-expectancy-who\/Life Expectancy Data.csv')\nraw_data.tail(20)","807b7c9c":"raw_data.shape","283e0c8e":"raw_data.describe(include='all').T","1c7780b2":"avg_pop_by_country = raw_data.groupby(by=[\"Country\"]).Population.mean()\npd.set_option('display.max_rows', 50)\navg_pop_by_country","39d18892":"raw_data.corr()","e4b63b9d":"fig, ax = plt.subplots(figsize = (25, 25))\n\nsns.heatmap(ax=ax,\n            data=raw_data.corr(), \n            annot=True, \n            cmap='coolwarm', \n            annot_kws={'size': 16}, \n            robust=True)\n\nplt.show()","1152a06b":"df_nv = pd.DataFrame(data=raw_data.isna().sum(), columns = [\"Number of Null Values\"]).reset_index()\ndf_nv.columns = [\"Features\", \"Number of Null Values\"]\ndf_nv.pivot_table(index=df_nv.Features, aggfunc='sum', margins=True, margins_name='Total')","3cdd91dd":"data_1 = raw_data.drop(columns=[\"Year\"], axis=1)\ndata_1.head()","6864a4e1":"data_1.info()","ef0a29f8":"cols","bfef8752":"cols = list(data_1.columns.values)\ncols.remove(\"Country\")\nfig, ax = plt.subplots(nrows = len(cols), ncols = 1, figsize = (10, 80))\nfor i in range(len(cols)):\n    sns.histplot(ax=ax[i],\n                 data=data_1, \n                 x=cols[i], \n                 kde=True)\n    \n    ax[i].set_xlabel(cols[i], fontsize = 12)\n\n\nplt.show()","64270b0a":"data_1.columns = data_1.columns.str.replace(' ', '')\ndata_1.columns","efff665f":"data_1[\"Schooling\"] = data_1[\"Schooling\"].fillna(data_1[\"Schooling\"].mean())\ndata_1[\"BMI\"] = data_1[\"BMI\"].fillna(data_1[\"BMI\"].mean())\ndata_1[\"Alcohol\"] = data_1[\"Alcohol\"].fillna(data_1[\"Alcohol\"].mean())\ndata_1[\"AdultMortality\"] = data_1[\"AdultMortality\"].fillna(data_1[\"AdultMortality\"].mean())\ndata_1[\"Incomecompositionofresources\"] = data_1[\"Incomecompositionofresources\"].fillna(data_1[\"Incomecompositionofresources\"].mean())\ndata_1[\"HepatitisB\"] = data_1[\"HepatitisB\"].fillna(data_1[\"HepatitisB\"].mean())\ndata_1[\"Lifeexpectancy\"] = data_1[\"Lifeexpectancy\"].fillna(data_1[\"Lifeexpectancy\"].mean())\ndata_1[\"thinness1-19years\"] = data_1[\"thinness1-19years\"].fillna(data_1[\"thinness1-19years\"].mean())\ndata_1[\"GDP\"] = data_1[\"GDP\"].fillna(data_1[\"GDP\"].mean())\ndata_1[\"Polio\"] = data_1[\"Polio\"].fillna(data_1[\"Polio\"].mean())\ndata_1[\"Totalexpenditure\"] = data_1[\"Totalexpenditure\"].fillna(data_1[\"Totalexpenditure\"].mean())\ndata_1[\"Diphtheria\"] = data_1[\"Diphtheria\"].fillna(0)\ndata_1[\"thinness5-9years\"] = data_1[\"thinness5-9years\"].fillna(data_1[\"thinness5-9years\"].mean())\ndata_1[\"Population\"] = data_1[\"Population\"].fillna(data_1[\"Population\"].mean())","5b849078":"data_1.head()","d807ba8e":"df_nv_1 = pd.DataFrame(data=data_1.isnull().sum(), columns = [\"Number of Null Values\"]).reset_index()\ndf_nv_1.columns = [\"Features\", \"Number of Null Values\"]\ndf_nv_1.pivot_table(index=df_nv_1.Features, aggfunc='sum', margins=True, margins_name='Total')","be277216":"raw_data.head()","6f350aa5":"cols = list(data_1.columns.values)\ncols.remove(\"Country\")\ncols.remove(\"Status\")\nfig, ax = plt.subplots(nrows = len(cols), ncols = 1, figsize = (7, 80))\nfor i in range(len(cols)):\n    sns.scatterplot(ax=ax[i],\n                 data=data_1, \n                 x=\"Lifeexpectancy\", \n                 y=cols[i])\n    \n    ax[i].set_xlabel(\"Lifeexpectancy\", fontsize = 12)\n    ax[i].set_ylabel(cols[i], fontsize = 12)\n\n\nplt.show()","3764265d":"multi_cols = ['infantdeaths', 'percentageexpenditure', 'Measles', 'under-fivedeaths', 'HIV\/AIDS', 'GDP', 'thinness1-19years', 'thinness5-9years']\nfor col in multi_cols:\n    q = data_1[col].quantile(0.99)\n    data_1 = data_1[data_1[col] < q]\n","c8a7e844":"data_1.head()","5dd76b0a":"data_cleaned = data_1.reset_index(drop=True)","b9491ea8":"data_cleaned.describe(include='all')","f62bdf40":"variables = data_cleaned.drop(columns=[\"Country\", \"Status\", \"Lifeexpectancy\"], axis=1)\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(variables.values, i) for i in range(variables.shape[1])]\nvif[\"Features\"] = variables.columns\nvif","09ae40ac":"log_pop = np.log(data_cleaned[\"Population\"])\ndata_cleaned[\"Log_pop\"] = log_pop","cb68bb95":"log_gdp = np.log(data_cleaned[\"GDP\"])\ndata_cleaned[\"log_gdp\"] = log_gdp","420d687a":"data_cleaned.head()","04f25ba8":"data_new = data_cleaned.drop(columns=[\"Population\", \"GDP\", 'Country'], axis = 1)\ndata_new.head()","ee8b20f6":"data_with_dummies = pd.get_dummies(data=data_new, drop_first=True)\ndata_with_dummies.head()","3c7bb094":"data_with_dummies.columns","8b63c9ef":"variables.shape","11c973ac":"variables = data_with_dummies.drop(columns=[\"Lifeexpectancy\"], axis=1)\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(variables.values, i) for i in range(variables.shape[1])]\nvif[\"Features\"] = variables.columns\nvif","45e807b0":"#x = data_new[[\"AdultMortality\", \"Alcohol\", \"percentageexpenditure\", \"Measles\", \"HIV\/AIDS\"]]\nx = data_with_dummies.drop(columns=[\"Lifeexpectancy\", \"thinness1-19years\", \"thinness5-9years\"], axis=1)\ny = data_with_dummies[\"Lifeexpectancy\"]","62fa4b21":"scaler = StandardScaler()\nx_scaled = scaler.fit_transform(x)","317124b8":"x_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2, random_state=365)","84965eec":"model = LinearRegression()\nmodel.fit(x_train, y_train)","038abaff":"model.score(x_train, y_train)","3d90d126":"y_hat = model.predict(x_train)","02f5f256":"sns.scatterplot(x=y_train, y=y_hat, alpha=0.5)\nplt.xlim(0)\nplt.ylim(0)\nplt.show()","18d80d7a":"y_hat_test = model.predict(x_test)","0641050b":"sns.scatterplot(x=y_test, y=y_hat_test)\nplt.xlim(0)\nplt.ylim(0)\nplt.show()","e6bb0042":"sns.histplot(x=y_train-y_hat, kde=True)","09e7398c":"sns.histplot(x=y_test-y_hat_test, kde=True)","48dceedf":"residual_df = pd.DataFrame(data=y_hat_test.round(1), columns=[\"Predicted Value\"])\nresidual_df[\"Original Value\"] = y_test.reset_index(drop=True)\nresidual_df[\"Residuals\"] = residual_df[\"Original Value\"] - residual_df[\"Predicted Value\"]\nresidual_df[\"Residuals %\"] = np.absolute(residual_df[\"Residuals\"]\/residual_df[\"Original Value\"])*100\nresidual_df.sort_values(by=\"Residuals %\", ascending=False, inplace=True)\npd.set_option('display.max_rows', 1000)\nresidual_df","e026188f":"### Check the avg population by country","eaa43d91":"## Remove outliers using Quantile","aa3dc6b0":"# Check correlation of variables","6fa712e5":"# Loading Raw Data","9f34461a":"# Check the outliers by creating histograms for variables to check the distribution","b0c94b6a":"## Milticollinearity","b0b337fe":"# Check discriptive Statistics","93b4dbdf":"### Removed extra spaces from the column header name","92a0c043":"# Import necessary Libraries and Modules","3ddc27ab":"# Check for Null Values","6dfa1aed":"### Dropping Year as it seems to be insignificant and Country(categorical) as has many unique values.","46077352":"99% Quantile\n* infantdeaths\n* percentageexpenditure\n* Measles\n* under-fivedeaths\n* HIV\/AIDS\n* GDP\n* thinness1-19years\n* thinness5-9years"}}