{"cell_type":{"bb8e3b96":"code","9633ff0a":"code","dd11b209":"code","00f718d6":"code","6e6deaef":"code","f8177041":"code","59147a75":"code","768dac66":"code","3b5ba358":"code","6ffa8fc7":"code","e7276475":"code","2bceda60":"code","bf1f9b7a":"code","737b15c4":"code","3a3b5cee":"code","16e0c69f":"markdown","4533d7b7":"markdown","f91bb5d2":"markdown","8ff4fb49":"markdown","32ac25bc":"markdown","ccb406a5":"markdown","8e03c28d":"markdown"},"source":{"bb8e3b96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9633ff0a":"#importing libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","dd11b209":"#import dataset\nheart_df = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')       \nheart_df.head(5)","00f718d6":"heart_df.shape","6e6deaef":"heart_df.isnull().sum()","f8177041":"plt.figure(figsize = (9, 9))\ncorr = heart_df.corr()\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.color_palette(\"icefire\", as_cmap=True),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=90,\n    horizontalalignment='left'\n);\n\nplt.show()","59147a75":"sns.pairplot(heart_df, vars = [\"age\", \"sex\", \"cp\", \"trestbps\", \"chol\"],hue=\"target\", dropna = True)\nplt.show()","768dac66":"sns.clustermap(heart_df.corr(),annot = False)\nplt.show()","3b5ba358":"#Splitting Dataset\nx=heart_df.drop('target',axis=1)    \ny=heart_df['target']\n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=123)","6ffa8fc7":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nlogreg = LogisticRegression(solver='lbfgs', max_iter=1000)\nlogreg.fit(x_train,y_train)\n\ny_pred=logreg.predict(x_test)\nprint(\"Accuracy score of the model is:\",accuracy_score(y_test,y_pred)*100,\"%\")\n\ncnf_matrix = metrics.confusion_matrix(y_test, y_pred)\nprint(\"Confusion matrix of the model is:- \\n\",cnf_matrix)","e7276475":"print(\"Classification Report:- \\n\",classification_report(y_test,y_pred))","2bceda60":"from sklearn.tree import DecisionTreeClassifier\n\nDTC = DecisionTreeClassifier()\nDTC.fit(x_train, y_train)\n\ny_pred3 = DTC.predict(x_test)\n\nprint(\"Accuracy score of the model is:\",accuracy_score(y_test,y_pred3)*100,\"%\")","bf1f9b7a":"print(\"Confusion matrix of the model:-\\n\",confusion_matrix(y_test,y_pred3))\n\nprint(\"Classification Report:-\\n\",classification_report(y_test,y_pred3))","737b15c4":"from sklearn import preprocessing\nfrom sklearn.naive_bayes import GaussianNB\n\ngnb = GaussianNB()\n\ngnb.fit(x_train, y_train)\n\ny_pred1 = gnb.predict(x_test)\nprint(\"Accuracy score of the model is:\",accuracy_score(y_test,y_pred1)*100,\"%\")\n\ncnf_matrix_NB = metrics.confusion_matrix(y_test, y_pred1)\nprint(\"Confusion matrix of the model is: \\n\",cnf_matrix_NB)","3a3b5cee":"print(\"Classification Report:- \\n\",classification_report(y_test,y_pred1))","16e0c69f":"# Exploratory Data Analysis(EDA)\ud83d\udcc8","4533d7b7":"# Heart Disease Classification","f91bb5d2":"### 2. DecisionTreeClassifier","8ff4fb49":"![Heart](https:\/\/wicnews.com\/wp-content\/uploads\/2018\/11\/heart-health.png)","32ac25bc":"### 1. Logistic Regression","ccb406a5":"### 3. Naive Bayes","8e03c28d":"# Classification \ud83d\udcbb"}}