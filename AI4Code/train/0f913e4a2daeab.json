{"cell_type":{"972a12c3":"code","19c592c4":"code","a60d893b":"code","aeffb570":"code","a3b035ac":"code","0612e2cc":"code","58850964":"code","830aef0d":"code","86b9f769":"code","207c59b8":"code","ecfe8ad0":"code","d35ff2d2":"code","3cf8fc60":"code","7e11cd66":"code","deb531d8":"code","9f88fc9d":"code","3ecf470e":"code","e4de11f5":"markdown","cf0ccf35":"markdown","b71fea8a":"markdown","7051c4d2":"markdown","51e624ab":"markdown","7823e293":"markdown","6e8fa650":"markdown","d01fb1aa":"markdown","6af04c49":"markdown","3230e98f":"markdown","0f392198":"markdown"},"source":{"972a12c3":"import pandas as pd\nresposta =[\n['aeronave_operador_categoria','Qualitativa Nominal'],\n['aeronave_tipo_veiculo','Qualitativa Nominal'],\n['aeronave_motor_quantidade','Qualitativa Nominal'],\n['aeronave_pais_fabricante','Qualitativa Nominal'],\n['aeronave_nivel_dano','Qualitativa Nominal'],\n['aeronave_pmd_categoria','Qualitativa Nominal'],\n['aeronave_fase_operacao','Qualitativa Nominal'],\n['total_fatalidades','Quantitativa Discreta']\n]\n\n#vari\u00e1veis relacionadas a tempo s\u00e3o cont\u00ednuas, mas podem ser discretas pois n\u00e3o h\u00e1 perdas -- (discretiza\u00e7\u00e3o)\n\nresposta = pd.DataFrame(resposta, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nresposta\n","19c592c4":"df = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/anv.csv', delimiter=',')\n\ndf = df[['aeronave_operador_categoria','aeronave_tipo_veiculo',\n   'aeronave_motor_quantidade','aeronave_pais_fabricante',\n   'aeronave_nivel_dano','aeronave_pmd_categoria','aeronave_fase_operacao','total_fatalidades']]","a60d893b":"df.info()","aeffb570":"df['total_fatalidades'].describe()","a3b035ac":"headers = list(df)\nheaders.remove(headers[-1])\n\nfor i in headers:\n    counts = df[i].value_counts()\n    print('Vari\u00e1vel Qualitativa:',i)\n    print(counts)\n    print('________________')","0612e2cc":"import matplotlib.pyplot as plt","58850964":"g1 = df.groupby(['aeronave_tipo_veiculo'],as_index = False).sum()\ng2 = df.groupby('aeronave_pmd_categoria',as_index = False).sum()","830aef0d":"# First Ring (outside)\nfig, ax = plt.subplots()\nax.axis('equal')\nmypie, _ = ax.pie(g2['total_fatalidades'], radius=1.9, labels=g2['aeronave_pmd_categoria'] )\nplt.setp( mypie, width=0.3, edgecolor='white')\n \n# Second Ring (Inside)\nmypie2, _ = ax.pie(g1['total_fatalidades'], radius=1.9-0.3, labeldistance=0.7)\nplt.setp( mypie2, width=0.4, edgecolor='white')\nplt.margins(0,0)\nplt.title('Fatalidades por Categoria\/Tipo',loc='center',y=0.45)\nplt.legend(mypie2,g1['aeronave_tipo_veiculo'],bbox_to_anchor=(1.2, 0.8),title='Tipos de Ve\u00edculos')\n# show it\nplt.show()\n","86b9f769":"import numpy as np\n\ng3 = df.groupby('aeronave_tipo_veiculo',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\n\nplt.rcdefaults()\nfig, ax = plt.subplots()\n\n# Data\ny_pos = np.arange(len(g3['aeronave_tipo_veiculo']))\ndados = g3['total_fatalidades']\n\n\nax.barh(y_pos, dados, align='center')\nax.set_yticks(y_pos)\nax.set_yticklabels(g3['aeronave_tipo_veiculo'])\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('n\u00famero de fatalidades')\nax.set_title('Fatalidades por tipo de ve\u00edculo')\n","207c59b8":"g4 = df.groupby('aeronave_nivel_dano',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\ng5 = df.groupby('aeronave_motor_quantidade',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\n\n\nfig,axes = plt.subplots(nrows=1, ncols=2, figsize=(17, 6))\n\n\naxes[0] = fig.add_axes([0,0,1,1])\naxes[0].bar(g4['aeronave_nivel_dano'],g4['total_fatalidades'],color='b')\naxes[0].set_ylabel('Fatalidades')\n\naxes[1] = fig.add_axes([0,0,1,1])\naxes[1].bar(g5['aeronave_motor_quantidade'],g5['total_fatalidades'],color='r')\naxes[1].set_xlabel('N\u00edvel de Dano \/ Quantidade Motor')\nplt.title('Fatalidade x N\u00edvel de dano e Quantidade Motor')\nplt.show()","ecfe8ad0":"g6 = df.groupby('aeronave_operador_categoria',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = g6['aeronave_operador_categoria']\nsizes = g6['total_fatalidades']\nexplode = (0.1, 0, 0, 0,0,0)\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, autopct='%1.1f%%', startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nax1.legend(labels,bbox_to_anchor=(0.9, 0.8),title='Categorias de Operador:')\nplt.title('Fatalidades por Categoria de Operador')\nplt.show()","d35ff2d2":"g7 = df.groupby('aeronave_fase_operacao',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\ng8 = df.groupby('aeronave_fase_operacao',as_index = False).count().sort_values(by='total_fatalidades', ascending = False)[['aeronave_fase_operacao','total_fatalidades']]\ng9 = g7.merge(g8,on='aeronave_fase_operacao',how='outer') #y s\u00e3o as ocorrencias\ng9 = g9.sort_values(by='total_fatalidades_y',ascending= False)\ng9 = g9[g9['total_fatalidades_y']>190]\n","3cf8fc60":"fig, ax1 = plt.subplots(figsize=(12,5))\n\n#ax1.set_xlabel('Fase de Opera\u00e7\u00e3o')\nax1.set_ylabel('Ocorr\u00eancias', color='b')\nax1.bar(g9['aeronave_fase_operacao'],g9['total_fatalidades_y'])\nax1.tick_params(axis='y', labelcolor='b')\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n\ncolor = 'tab:red'\nax2.set_ylabel('Fatalidades', color=color)\nax2.plot(g9['aeronave_fase_operacao'],g9['total_fatalidades_x'],color='r')\nax2.tick_params(axis='y', labelcolor=color)\nplt.title('Top 8: N\u00ba de Ocorr\u00eancias x Fatalidades por Fase de Opera\u00e7\u00e3o')\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.show()\n","7e11cd66":"g10 = df.groupby('aeronave_pais_fabricante',as_index = False).sum().sort_values(by='total_fatalidades', ascending = False)\ng10 = g10[g10['total_fatalidades']>16]","deb531d8":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(g10['aeronave_pais_fabricante'],g10['total_fatalidades'])\n#ax.set_ylabel('Fatalidades')\nplt.title('Top 5: Fatalidades por Pa\u00eds Fabricante')\nplt.show()","9f88fc9d":"df = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/anv.csv', delimiter=',')\n","3ecf470e":"df.head(5)","e4de11f5":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Exerc\u00edcio 1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","cf0ccf35":"# Dicas\n\n- Exemplo de acesso aos CSVs dispon\u00edveis no dataset\n> df = pd.read_csv('..\/input\/anv.csv', delimiter=',')","b71fea8a":"### 6) Vari\u00e1vel usada: aeronave_pais_fabricante","7051c4d2":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","51e624ab":"### 3) Vari\u00e1veis usadas: aeronave_nivel_dano e aeronave_motor_quantidade","7823e293":"### 2) Vari\u00e1vel usada: aeronave_tipo_veiculo","6e8fa650":"### 5) Vari\u00e1vel usada: aeronave_fase_operacao","d01fb1aa":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","6af04c49":"### 1) Vari\u00e1veis usadas: aeronave_pmd_categoria e aeronave_tipo_veiculo","3230e98f":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 1 - Primeiro contato com o Kaggle\n(valendo nota)\n\n* **Data de entrega:** at\u00e9 o final da aula \n* **Professor:**  Matheus Mota\n* **Aluno:** Victor Ciccolani\n* **RA:** 203094","0f392198":"### 4) Vari\u00e1vel usada: aeronave_operador_categoria"}}