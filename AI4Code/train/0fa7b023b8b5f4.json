{"cell_type":{"ca7e5787":"code","a28b7b28":"code","3163f446":"code","b4f0939a":"code","3b123d28":"code","fd3bb0ea":"code","ab892278":"code","5f440767":"code","a9d2a49e":"code","a0b86037":"code","037d6f81":"markdown","1f25831b":"markdown","6347d477":"markdown","d7543c57":"markdown","c9f6ea15":"markdown","c9944abf":"markdown","35f95f44":"markdown","d5d27538":"markdown","ac1972ba":"markdown"},"source":{"ca7e5787":"import os\nprint((os.listdir('..\/input\/')))\nimport xgboost as xgb\nfrom sklearn.metrics import mean_squared_error\n","a28b7b28":"import pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom math import log as log","3163f446":"df_train = pd.read_csv('..\/input\/web-club-recruitment-2018\/train.csv')\ndf_test = pd.read_csv('..\/input\/web-club-recruitment-2018\/test.csv')\nimport math","b4f0939a":"df_train.head()","3b123d28":"def fn(X):\n#     X.drop(X.columns[17:23], axis=1, inplace=True)\n    X['X24']=(X.X6+X.X7+X.X8+X.X9+X.X10+X.X11)\/X.X1\n    X['X25']=(X.X12+X.X13+X.X14+X.X15+X.X16+X.X17)\/X.X1\n    X['X26']=(X.X18+X.X19+X.X20+X.X21+X.X22+X.X23)\/X.X1\n    X['X28']=(X.X6+X.X7+X.X8+X.X9+X.X10+X.X11)\n    X['X29']=(X.X12+X.X13+X.X14+X.X15+X.X16+X.X17)\n    X['X30']=(X.X18+X.X19+X.X20+X.X21+X.X22+X.X23)\n    X['X31']=(X.X2==-1)*1+(X.X3==-1)*1+(X.X4==-1)*1+(X.X5==-1)*1\n#     X['X27']=((X.X5>=20)) * X.X5\n#     X['X27']=((X.X27<=50)) * X.X27\n#     X['X28']=X.X1+X.X2+X.X3+X.X4+X.X5\n#     X.drop(X.columns[0:0], axis=1, inplace=True)\n    print(X.head())\n    return X\ntrain_X = df_train.loc[0:19999, 'X1':'X23']\ntrain_X = fn(train_X)\n# train_X.drop(train_X.columns[17:23], axis=1, inplace=True)\nprint(train_X.head())\ntrain_y = df_train.loc[0:19999, 'Y']\ndata_dmatrix = xgb.DMatrix(data=train_X,label=train_y)","fd3bb0ea":"# rf = RandomForestClassifier(n_estimators=300)\nxg_reg = xgb.XGBRegressor(objective ='reg:logistic', colsample_bytree = 0.3, learning_rate = 0.024,\n                max_depth = 6, alpha = 10, n_estimators = 230,eval_metric='auc')","ab892278":"# rf.fit(train_X, train_y)\nxg_reg.fit(train_X,train_y)","5f440767":"# xg_reg.set_param(learning_rate=0.005)","a9d2a49e":"train_X = df_test.loc[:, 'X1':'X23']\ntrain_X = fn(train_X)\n# train_X.drop(train_X.columns[17:23], axis=1, inplace=True)\n# pred = rf.predict_proba(train_X)\npred = xg_reg.predict(train_X)\npred=pred*(pred>=0)\npred= (pred*(pred<=1))+ 1*(pred>1)","a0b86037":"result = pd.DataFrame(pred)\nresult.index.name = 'id'\nresult.columns = ['predicted_val']\nresult.to_csv('output.csv', index=True)\nX = df_train.loc[18000:19999, 'X1':'X23']\nX = fn(X)\n# X.drop(X.columns[17:23], axis=1, inplace=True)\nY = df_train.loc[18000:19999, 'Y']\n# pred = rf.predict_proba(X)\npred = xg_reg.predict(X)\npred=pred*(pred>=0)\npred= (pred*(pred<=1))+ 1*(pred>1)\n# print (pred)\nprint(roc_auc_score(Y, pred))","037d6f81":"## Baseline Kernel for WebClub Recruitment Test 2018","1f25831b":"### Reading the Train and Test Set","6347d477":"### Initializing Classifier","d7543c57":"### Writing the results to a file","c9f6ea15":"### Separating the features and the labels","c9944abf":"### Training Classifier","35f95f44":"### Importing required packages","d5d27538":"### Calculating predictions for the test set","ac1972ba":"### Visualizing the Training Set"}}