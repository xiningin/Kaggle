{"cell_type":{"bc81e202":"code","8e3f64dc":"code","97b6ffc8":"code","1a98eaa6":"code","19db8c19":"code","9d621a16":"code","b069cb98":"code","490acc21":"code","ecf1947d":"code","a29d4041":"code","6bf1a1f7":"code","cd1ad63e":"code","f67e40a2":"markdown","a283318a":"markdown","0237ef9f":"markdown","99f87388":"markdown","0f9637cc":"markdown","c6776a25":"markdown","d1484109":"markdown","1b0d9a18":"markdown","0811c2c1":"markdown","e60acdac":"markdown"},"source":{"bc81e202":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8e3f64dc":"from keras import layers\nfrom keras import models\nfrom keras.utils import to_categorical","97b6ffc8":"train_images = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_train.csv\")\ntrain_labels = train_images.iloc[:, 0:1]\ndel train_images[\"label\"]\n\ntest_images = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv\")\ntest_labels = test_images.iloc[:, 0:1]\ndel test_images[\"label\"]","1a98eaa6":"train_images.head()","19db8c19":"import matplotlib.pyplot as plt\n\nclothing = {0 : 'T-shirt\/top',\n            1 : 'Trouser',\n            2 : 'Pullover',\n            3 : 'Dress',\n            4 : 'Coat',\n            5 : 'Sandal',\n            6 : 'Shirt',\n            7 : 'Sneaker',\n            8 : 'Bag',\n            9 : 'Ankle boot'}\n\nfig, axes = plt.subplots(4, 4, figsize = (10,10))\nfor row in axes:\n    for axe in row:\n        index = np.random.randint(60000)\n        img = train_images.values[index].reshape(28,28)\n        cloths = train_labels['label'][index]\n        axe.imshow(img, cmap='gray')\n        axe.set_title(clothing[cloths])\n        axe.set_axis_off()","9d621a16":"train_images = np.uint8(train_images)\ntrain_images = train_images.reshape((60000, 28, 28, 1))\ntrain_images = train_images.astype(\"float32\") \/ 255\n\ntest_images = np.uint8(test_images)\ntest_images = test_images.reshape((10000, 28, 28, 1))\ntest_images = test_images.astype(\"float32\") \/ 255\n\ntrain_labels = to_categorical(train_labels)\ntest_labels = to_categorical(test_labels)","b069cb98":"train_images[3]","490acc21":"model = models.Sequential()\nmodel.add(layers.Conv2D(32, (3, 3), activation = \"relu\", input_shape = (28, 28, 1)))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation = \"relu\"))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation = \"relu\"))\n\n\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(64, activation = \"relu\"))\nmodel.add(layers.Dense(10, activation = \"softmax\"))\nmodel.summary()","ecf1947d":"model.compile(optimizer = \"rmsprop\",\n              loss = \"categorical_crossentropy\",\n              metrics = [\"accuracy\"])\n\nmodel.fit(train_images, train_labels, epochs = 20, batch_size = 64)","a29d4041":"test_loss, test_accuracy = model.evaluate(test_images, test_labels)","6bf1a1f7":"print(\"Test Do\u011fruluk oran\u0131: \", round(test_accuracy,2))","cd1ad63e":"print(\"Te\u015fekk\u00fcrler! :)\")","f67e40a2":"Verilerin y\u00fcklenmesi","a283318a":"Evri\u015fimli sinir a\u011flar\u0131 sayesinde %92 do\u011fruluk oran\u0131n\u0131 yakalam\u0131\u015f olduk. Veri \u00fczerinde model i\u00e7in d\u00fczenleme i\u015flemi yapt\u0131k sonu\u00e7lar\u0131 daha da iyile\u015ftirmek i\u00e7in Veri \u00e7e\u015fitlendirmesi, katman say\u0131lar\u0131n\u0131 de\u011fi\u015ftirmek, activasyon fonksiyonunu de\u011fi\u015ftirmek, farkl\u0131 filtre boyurlar\u0131 kullanmak gibi i\u015flemler yap\u0131labilir. Bir sonraki \u00e7al\u0131\u015fmada %92 do\u011frulu\u011fu daha da artt\u0131rmaya \u00e7al\u0131\u015faca\u011f\u0131z.\n\nG\u00f6r\u00fc\u015fmek \u00fczere,\n\nTe\u015fekk\u00fcrler.\n\n","0237ef9f":"Test sonu\u00e7lar\u0131","99f87388":"Modeli kurmak","0f9637cc":"1. Merhaba bu \u00e7al\u0131\u015fma sayfas\u0131nda fashion mnist veri seti \u00fczerinde evri\u015fimli sinir a\u011flar\u0131 ile foto\u011fraflardan k\u0131yafetleri tan\u0131maya \u00e7al\u0131\u015faca\u011f\u0131z.\n\nVeri seti i\u00e7erisinde 10 farkl\u0131 giysi t\u00fcr\u00fc bulunmakta bunlar;\n \n0 - T-shirt\n1 - Pantolon\n2 - Kazak\n3 - Elbise\n4 - Ceket\n5 - Sandalet\n6 - G\u00f6mlek\n7 - Spor ayakkab\u0131\n8 - \u00c7anta\n9 - \u00c7izme\n\n","c6776a25":"Art\u0131k veri model kurmak i\u00e7in haz\u0131r !","d1484109":"Keras ile kuraca\u011f\u0131m\u0131z model ile yukar\u0131da bulunan resimleri do\u011fru olarak s\u0131n\u0131fland\u0131rmaya \u00e7al\u0131\u015faca\u011f\u0131z.\n\nBunun i\u00e7in \u00f6nce e\u011fitim ve test verimizi i\u015flenecek hale getirmemiz laz\u0131m. \u015euanda elimizde bulunan veri bir data frame format\u0131nda bunu bir tens\u00f6r hailne getirmemiz laz\u0131m bunun i\u00e7in:","1b0d9a18":"Veri i\u00e7erisinde 60.000 adet e\u011fitim verisi ve 10.000 adet test verisi bulunmakta e\u011fitim verisi i\u00e7indeki baz\u0131 \u00f6rneklere bakal\u0131m","0811c2c1":"Evri\u015fimli sinir a\u011flar\u0131 ile bir model kuraca\u011f\u0131z evri\u015fimli sinir a\u011flar\u0131 nedir?\n\nEvri\u015fimli sinir a\u011flar\u0131 en basit hali ile klasik yapay sinir a\u011flar\u0131n\u0131n pe\u015fpe\u015fe kurulmas\u0131 ile oluyor desek \u00e7okda yanl\u0131\u015f bir tan\u0131m olmaz fakat nas\u0131l oluyorda klasik yapay sinir a\u011flar\u0131ndan daha iyi sonu\u00e7lar \u00e7\u0131karabiliyo? Bunun bir ka\u00e7 sebebine de\u011finelim.\n\n\u00d6ncelikle evri\u015fimli sinir a\u011flar\u0131 foto\u011fraf gibi bir veri \u00fczerinde t\u00fcm par\u00e7alar ile birlikte \u00e7al\u0131\u015fm\u0131yor bir foto\u011fraf\u0131 3, 4, 5 vs gibi par\u00e7alara b\u00f6ld\u00fc\u011f\u00fcn\u00fcz\u00fc d\u00fc\u015f\u00fcn\u00fcn her bir par\u00e7a i\u00e7in ayr\u0131 ayr\u0131 \u00e7al\u0131\u015fyor ve bu par\u00e7alar\u0131n \u00f6zniteliklerini \u00e7\u0131kar\u0131yor. Nedir \u00f6znitelikler? \u0130lk katmanlar\u0131nda bir foto\u011fraf i\u00e7in buldu\u011fu \u015feyler genellikle kenarlar(neslerin kenarlar\u0131), renk ge\u00e7i\u015fleri (ye\u015fil bir a\u011fac\u0131n arkas\u0131nda kalan mavi bir g\u00f6ky\u00fcz\u00fc d\u00fc\u015f\u00fcn\u00fcn ye\u015filden maviye bir ge\u00e7i\u015f s\u00f6z konusu tabiki sadece bu tek ba\u015f\u0131na yeterli olmaz ama basit olmas\u0131 i\u00e7in bu renk farkl\u0131l\u0131\u011f\u0131 ayn\u0131 zamanda nesnelerinde farkl\u0131l\u0131klar\u0131n\u0131 g\u00f6sterebilir) gibi ba\u015flang\u0131\u00e7 de\u011ferlerini buluyor ilerleyen katmanlarda foto\u011fraf\u0131n daha i\u00e7 k\u0131s\u0131mlar\u0131ndaki farkl\u0131l\u0131klar\u0131 yakalamaya \u00e7al\u0131\u015fyor bir k\u0131r\u0131\u015f\u0131kl\u0131k, neslerin \u00fczerindeki ge\u00e7i\u015fler, nesnelerde bulunan kenarlar gibi ve bunlar\u0131 yaparken kendini geriye yay\u0131l\u0131mda s\u00fcrekli g\u00fcncelliyor ve bu i\u015flemleri tekrar tekrar yaparak en iyi filtleri sonuca g\u00f6re bulmaya \u00e7al\u0131\u015f\u0131yor.\n\nKatmanlarda neler var?\n\nEvri\u015fim katman\u0131 (CONV) \u2015 Evri\u015fim katman\u0131 (CONV), giri\u015f de\u011ferlerine verilen filtrlerle tarand\u0131\u011f\u0131 ve \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131n\u0131n yap\u0131ld\u0131\u011f\u0131 katmand\u0131r. \u00c7\u0131kt\u0131 de\u011ferine \u00f6znitelik haritas\u0131 veya aktivasyon haritas\u0131 denir.\n\nOrtaklama (POOL) \u2015 Ortaklama katman\u0131 (POOL), evri\u015fim katmad\u0131ndan sonra uygulanan bir boyut azaltma i\u015flemidir.\n\nTam Ba\u011flant\u0131 (FC) \u2015 Tam ba\u011fl\u0131 katman (FC), evri\u015fim i\u015flemi sonucunda meydana gelen \u00e7\u0131kt\u0131y\u0131 bir vekt\u00f6re d\u00f6n\u00fc\u015ft\u00fcren katmand\u0131r.\n\n[https:\/\/stanford.edu\/~shervine\/l\/tr\/teaching\/cs-230\/cheatsheet-convolutional-neural-networks https:\/\/medium.com\/@ayyucekizrak\/deri%CC%87ne-daha-deri%CC%87ne-evri%C5%9Fimli-sinir-a%C4%9Flar%C4%B1-2813a2c8b2a9](http:\/\/),\n\n![41-0.jpg](attachment:41-0.jpg)","e60acdac":"Modeli e\u011fitmek"}}