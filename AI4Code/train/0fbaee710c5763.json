{"cell_type":{"42df665d":"code","5566d523":"code","fbdbda3f":"code","a58572ef":"code","eca68118":"code","dcab211b":"code","65e0fdcb":"code","1c32fc20":"code","f1f09063":"code","111a0d23":"code","31181d6b":"code","acdf7bdb":"code","f0e2e33a":"code","f81fa9a0":"code","ba68d029":"code","7b0c8ca0":"code","e8cbb420":"code","99a606ee":"code","3598c61c":"code","5248e81a":"code","f9894b99":"code","fa4f150b":"code","9387b83a":"code","707547d4":"code","df519730":"code","12fee205":"code","fe581f02":"code","9158d59d":"markdown"},"source":{"42df665d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom fbprophet import Prophet\nimport matplotlib.pyplot as plt","5566d523":"data = pd.read_csv('..\/input\/tesla-stock-data-from-2010-to-2020\/TSLA.csv')\ndata.head()","fbdbda3f":"data['Date'] = pd.DatetimeIndex(data['Date'])","a58572ef":"plt.figure(figsize=(15, 12))\nplt.plot(data['Date'], data['Volume'])","eca68118":"data.isnull().sum()","dcab211b":"p = Prophet()\ndata_new = data.rename(columns={'Date': 'ds', 'Volume': 'y'})","65e0fdcb":"data_new","1c32fc20":"p.fit(data_new)","f1f09063":"future =  p.make_future_dataframe(periods=365, freq='D')","111a0d23":"future","31181d6b":"forecast = p.predict(future)","acdf7bdb":"plt.figure(figsize=(15, 12))\np.plot(forecast, uncertainty=True)","f0e2e33a":"data","f81fa9a0":"plt.plot(data['Date'], data['Open'])","ba68d029":"from statsmodels.tsa.stattools import adfuller\nadfuller(data['Open'])","7b0c8ca0":"data['Open'] = data['Open'].diff(2)\ndata.drop([0, 1, 2], axis=0, inplace=True)","e8cbb420":"adfuller(data['Open'])","99a606ee":"plt.plot(data['Date'], data['Open'])","3598c61c":"from statsmodels.tsa.statespace.sarimax import SARIMAX","5248e81a":"model = SARIMAX(data['Open'], order=(1, 2, 1), seasonal_order=(2, 1, 2, 2))","f9894b99":"result = model.fit()","fa4f150b":"result.summary()","9387b83a":"data['arima'] = result.fittedvalues","707547d4":"plt.plot(data['Date'], data['Open'])\nplt.plot(data['Date'], data['arima'])\nplt.legend(['real_data', 'predict_data'])","df519730":"forecast = result.predict(start = len(data), end = len(data) + 365)","12fee205":"forecast","fe581f02":"plt.figure(figsize=(20, 20))\nplt.plot(data['Open'])\nplt.plot(forecast)\nplt.legend(['real_value', 'predict_value_on 2021'])","9158d59d":"# SARIMA:"}}