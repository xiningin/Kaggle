{"cell_type":{"8d83ca55":"code","e3e9f6bf":"code","6268af33":"code","e98a09b1":"code","48ee2552":"code","7dabd1d4":"code","20bb890b":"code","a88b7fa3":"code","4f6a4693":"code","d341857c":"code","44dc6613":"code","ce95dfb1":"code","ae33b603":"code","0eae6f3c":"code","fbc829f5":"code","5603a930":"code","b051cd6a":"code","907646af":"code","cacae780":"code","ee687a2c":"code","7355264b":"code","20890f15":"code","959c3c81":"code","634bf038":"code","2637224d":"code","cb5bb4af":"markdown","9d7d3c43":"markdown","bf2434b5":"markdown","de799527":"markdown"},"source":{"8d83ca55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e3e9f6bf":"my_data = pd.read_csv(\"..\/input\/diabetes\/diabetes.csv\")","6268af33":"my_data.head()","e98a09b1":"my_data.shape","48ee2552":"outcome_true = len(my_data.loc[my_data['Outcome'] == 1])\noutcome_true","7dabd1d4":"outcome_false = len(my_data.loc[my_data['Outcome']==0])\noutcome_false","20bb890b":"# Checking for Null values\nmy_data.apply(lambda x: x.isnull().sum())","a88b7fa3":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","4f6a4693":"corrmat = my_data.corr()\ntop_corr_features = corrmat.index\nplt.figure(figsize=(20,10))\ng = sns.heatmap(my_data[top_corr_features].corr(),annot=True)","d341857c":"x = my_data.iloc[:,:-1].values\ny = my_data.iloc[:,8].values","44dc6613":"my_data.hist(figsize=(10,10))","ce95dfb1":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit(x).transform(x)\nx","ae33b603":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression,LinearRegression\nfrom sklearn import metrics","0eae6f3c":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)","fbc829f5":"regressor1 = DecisionTreeRegressor(random_state=0)\nregressor1.fit(x_train,y_train)","5603a930":"y1_pred = regressor1.predict(x_test)\ny1_pred","b051cd6a":"#Accuracy score for decision tree regressor\nprint(\"Accuracy_score: \",metrics.accuracy_score(y_test,y1_pred))","907646af":"regressor2 = LogisticRegression(C=0.01,solver='liblinear')\nregressor2.fit(x_train,y_train)","cacae780":"y2_pred = regressor2.predict(x_test)\ny2_pred","ee687a2c":"#Predict Proba\ny2_pred_proba = regressor2.predict_proba(x_test)\ny2_pred_proba","7355264b":"#Accuracy score\nprint(\"Accuracy Score: \",metrics.accuracy_score(y_test,y2_pred))","20890f15":"from sklearn.ensemble import RandomForestClassifier","959c3c81":"rf = RandomForestClassifier(n_estimators=21,random_state=40,bootstrap=True)\nrf.fit(x_train,y_train)","634bf038":"y3_pred = rf.predict(x_test)\ny3_pred","2637224d":"#Accuracy score\nprint(\"Accuracy score: \",metrics.accuracy_score(y_test,y3_pred))","cb5bb4af":"#### Feature scaling \n####        As the Pedigree function variable is far less than other variables.","9d7d3c43":"Logistic Regression","bf2434b5":"#### Checking if dataset is balanced or not","de799527":"Decision Tree Regressor"}}