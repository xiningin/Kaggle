{"cell_type":{"7549301e":"code","ddb7e48c":"code","09fbfcd9":"code","8fb8e866":"code","fdf9bff6":"code","d19519e9":"code","b96473d9":"code","ac91d80a":"code","08cd62ef":"code","73a500e4":"code","0ac997df":"code","597c4346":"code","8daa315b":"code","0ab9b296":"code","80ea0e50":"code","5d157749":"code","095ed387":"code","b56d87d5":"code","040fe79d":"code","43ebe5bb":"markdown"},"source":{"7549301e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ddb7e48c":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n","09fbfcd9":"#Reading training data\ntrain_df = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv\")\ntrain_df.head(60)","8fb8e866":"train_df.tail()","fdf9bff6":"#size of dataframe\ntrain_df.shape","d19519e9":"train_df.info()","b96473d9":"train_df[['ConfirmedCases','Fatalities']].describe()","ac91d80a":"# Filtering necessery columns\ndf = train_df[['Country\/Region', 'ConfirmedCases','Fatalities']]\ndf","08cd62ef":"# Group BY Country\/Region and adding ConfirmedCases and Fatalities\ndf = df.groupby(['Country\/Region']).sum()\ndf","73a500e4":"df.shape","0ac997df":"df.head(10)","597c4346":"#Sorting based on ConfirmedCases\ndf = df.sort_values('ConfirmedCases', ascending=False)\ndf","8daa315b":"#filtering countries with no fatalities\n\ndf = (df.loc[df['Fatalities']!=0])\ndf","0ab9b296":"\n#Percentage Fatalities with respect to ConfirmedCases\ndf['Perc_fat'] = (df['Fatalities'] \/ df['ConfirmedCases']) *100\ndf","80ea0e50":"#countries where fatel is more when comparing to confirmed cases\n\n(df.loc[df['Perc_fat']>5])\n","5d157749":"#italy insights\ndf_italy = train_df['Country\/Region']== 'Italy'\ndf_italy = train_df[df_italy]\ndf_italy = df_italy[['Date','ConfirmedCases','Fatalities']]\ndf_italy.reset_index(drop=True, inplace=True)\ndf_italy","095ed387":"df_italy.shape","b56d87d5":"df_italy['Date'] = pd.to_datetime(df_italy['Date']) - pd.to_timedelta(7, unit='d')\ndf_italy = df_italy.groupby([pd.Grouper(key='Date', freq='W-MON')])[['ConfirmedCases','Fatalities']].sum().reset_index().sort_values('Date')\ndf_italy","040fe79d":"import matplotlib.pyplot as plt\nax = df_italy[['ConfirmedCases','Fatalities']].plot(kind='bar', title =\"Itally Insights\", figsize=(15, 10), legend=True, fontsize=12)\nax.set_xlabel(\"Week\", fontsize=12)\nax.set_ylabel(\"Covid19\", fontsize=12)\nplt.show()","43ebe5bb":"# 2. Italy insights"}}