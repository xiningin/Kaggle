{"cell_type":{"afc6c743":"code","1cbb7598":"code","e8ebe6ea":"code","52c88204":"code","dbaa3a0c":"code","6cefb0c7":"markdown","87fb48d3":"markdown","23f35e75":"markdown","dad4b6f5":"markdown","4eec9378":"markdown"},"source":{"afc6c743":"import glob\nimport os\nimport json\n\n        \nmetafiles = sorted(glob.glob('\/kaggle\/input\/*\/part*\/*\/*.json'))\nmetafile = metafiles[0]\nprint(metafile)\n\ndirname = os.path.dirname(metafile)\nwith open(metafile) as fd:\n    meta = json.load(fd)\n    \nreal = next(iter(meta))\nprint(real)","1cbb7598":"from IPython.display import HTML\nfrom base64 import b64encode\n\ndef play(filenames):\n    html = ''\n    for name in filenames:\n        video = open(name,'rb').read()\n        src = 'data:video\/mp4;base64,' + b64encode(video).decode()\n        html += '<video width=352 controls autoplay loop><source src=\"%s\" type=\"video\/mp4\"><\/video>' % src \n    return HTML(html)\n\nreal_path = os.path.join(dirname, real)\nplay([real_path])","e8ebe6ea":"fakes = meta[real]\nprint(fakes)\nfake_paths = [os.path.join(dirname, fake) for fake in fakes]\nplay(fake_paths)","52c88204":"metafiles = sorted(glob.glob('\/kaggle\/input\/*\/multi-part*\/*\/*.json'))\nmetafile = metafiles[0]\nprint(metafile)\n\ndirname = os.path.dirname(metafile)\nwith open(metafile) as fd:\n    meta = json.load(fd)\n    \nreal = next(iter(meta))\nprint(real)","dbaa3a0c":"real_path0 = os.path.join(dirname, real[:-5] + '0.mp4')\nreal_path1 = os.path.join(dirname, real[:-5] + '1.mp4')\nplay([real_path1, real_path0])","6cefb0c7":"## Example with multiple faces in the same video","87fb48d3":"## Play the corresponding fakes","23f35e75":"# Example video clips","dad4b6f5":"## Read metadata","4eec9378":"## Play an original"}}