{"cell_type":{"bb70b454":"code","6c46c269":"code","947d4b39":"code","085438c9":"code","62d7fe2e":"code","9ad403c4":"code","d59e1b3d":"code","ed21aa1f":"code","7bfdc7e9":"code","42746a81":"code","bd55523e":"code","54c741e1":"code","4e393b35":"code","16c2c009":"code","c403d2c9":"code","66f27e65":"code","af84e783":"code","cd0fcc8b":"code","5eab45c9":"code","509013e3":"code","e5724b47":"code","d56945d6":"code","2859c3e8":"code","6120e3b2":"code","191e19dc":"code","797b5b57":"code","3d88ed42":"code","ecad40fe":"markdown","0e219fea":"markdown","b50418e4":"markdown","b80433c1":"markdown","ed4e3fa8":"markdown"},"source":{"bb70b454":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6c46c269":"train_dataset=pd.read_csv('..\/input\/Kannada-MNIST\/train.csv')\ntest_dataset=pd.read_csv('..\/input\/Kannada-MNIST\/test.csv')","947d4b39":"print(\"Train Dataset\",train_dataset.shape)\nprint(\"Test Dataset\", test_dataset.shape)","085438c9":"train_dataset.head()","62d7fe2e":"test_dataset.head()","9ad403c4":"x = train_dataset.iloc[:, 1:].values.astype('float32') \/ 255\ny = train_dataset.iloc[:, 0] # labels","d59e1b3d":"X_train, X_test, Y_train, Y_test = \\\ntrain_test_split(x, y, test_size = 0.05, random_state=1234) ","ed21aa1f":"X_train.shape","7bfdc7e9":"X_train=X_train.reshape(-1,28,28,1)\nX_test= X_test.reshape(-1,28,28,1)","42746a81":"print(\"X_train_shape \", X_train.shape)\nprint(\"X_test_shape \", X_test.shape)\nprint(\"Y_train_shape \", Y_train.shape)\nprint(\"Y_test_shape \", Y_test.shape)","bd55523e":"plt.imshow(X_train[i][:,:,0])\nprint(\"Y_train \", Y_train)","54c741e1":"w_grd = 15\nL_grd =15\n\nfig , axes = plt.subplots(L_grd, w_grd, figsize = (25, 25))\naxes = axes.ravel()\n\nn_train = len(X_train)\n\nfor i in np.arange(0, L_grd * w_grd):\n    index = np.random.randint(0, n_train)\n    axes[i].imshow(X_train[index][:,:,0])\n    axes[i].axis('off')","4e393b35":"X_train = X_train.astype('float32')\nX_test = X_test.astype('float32')","16c2c009":"import keras\nY_train = keras.utils.to_categorical(Y_train)\nY_test = keras.utils.to_categorical(Y_test)","c403d2c9":"#X_train = X_train \/255\n#X_test = X_test \/255","66f27e65":"Input_shape = X_train.shape[1:]\nInput_shape","af84e783":"from keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, AveragePooling2D, Dense, Flatten, Dropout\nfrom keras.optimizers import Adam\nfrom keras.callbacks import TensorBoard","cd0fcc8b":"cnn_model = Sequential()\ncnn_model.add(Conv2D(filters = 32, kernel_size = (5,5),\n                     activation = 'relu', input_shape= Input_shape))\ncnn_model.add(Conv2D(filters = 32, kernel_size = (5,5),\n                     activation = 'relu'))\ncnn_model.add(MaxPooling2D(2, 2))\ncnn_model.add(Dropout(0.3))\n\n\n#Another CNN with 64 , 64\ncnn_model.add(Conv2D(filters = 64, kernel_size = (5,5),\n                     activation = 'relu'))\ncnn_model.add(Conv2D(filters = 64, kernel_size = (5,5),\n                     activation = 'relu'))\ncnn_model.add(MaxPooling2D(2, 2))\ncnn_model.add(Dropout(0.2))\n\n#Flatten\ncnn_model.add(Flatten())\n\n#Dense\ncnn_model.add(Dense(units = 256, activation = 'relu'))\ncnn_model.add(Dense(units = 256, activation = 'relu'))\n\ncnn_model.add(Dense(units = 10, activation = 'softmax'))","5eab45c9":"cnn_model.compile(loss = 'categorical_crossentropy', optimizer= keras.optimizers.rmsprop(lr = 0.001), metrics = ['accuracy'])","509013e3":"history = cnn_model.fit(X_train, Y_train, batch_size= 64, epochs= 2, shuffle=True)","e5724b47":"evalution = cnn_model.evaluate(X_test, Y_test)\nprint(\"Accuracy \", evalution[1])","d56945d6":"predicted_classes = cnn_model.predict_classes(X_test)\npredicted_classes\n#Y_test = Y_test.argmax(1)\nY_test","2859c3e8":"y_pre_test=cnn_model.predict(X_test)\ny_pre_test=np.argmax(y_pre_test,axis=1)\nY_test=np.argmax(Y_test,axis=1)","6120e3b2":"from sklearn.metrics import confusion_matrix\n\ncm = confusion_matrix(Y_test, y_pre_test)\nplt.figure(figsize = (10, 10))\nsns.heatmap(cm, annot= True)","191e19dc":"#test_id = test_dataset.id\n\n#test_dataset = test_dataset.drop('id',axis=1)\n#test_dataset = test_dataset\/255\n#test_dataset = test_dataset.values.reshape(-1,28,28,1)\ntest_dataset=pd.read_csv('..\/input\/Kannada-MNIST\/test.csv')\nraw_test_id=test_dataset.id\ntest_dataset=test_dataset.drop(\"id\",axis=\"columns\")\ntest_dataset=test_dataset \/ 255\ntest=test_dataset.values.reshape(-1,28,28,1)\ntest.shape","797b5b57":"Y_prediction = cnn_model.predict(test)    \nY_prediction = np.argmax(Y_prediction,axis=1)","3d88ed42":"\ntest_dataset['label'] = Y_prediction\ntest_dataset.to_csv('submission.csv',index=False)","ecad40fe":"Train the model","0e219fea":"Submission","b50418e4":"Visualization","b80433c1":"Find out the dataset shape","ed4e3fa8":"Data Preparation"}}