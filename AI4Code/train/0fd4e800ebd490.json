{"cell_type":{"81451ded":"code","16a67ebd":"code","6df9be67":"code","8ad99ad2":"code","27ede37a":"code","0a9b2b2b":"code","ceb65323":"code","76ff7357":"code","4a619220":"code","f92cc5e6":"code","fa0c1412":"code","13d6c686":"code","d048bb55":"code","916d03d0":"code","e53d1779":"code","971866cd":"code","3344cf3f":"code","b60f15e4":"code","b900c2f7":"code","4615e89b":"code","00131bc9":"code","c47d7905":"code","5d1a5147":"code","54d435fd":"code","5a8cbb82":"code","7daa45ea":"code","11b18750":"code","1af71b5e":"code","12628189":"code","91fb67d3":"code","28024892":"code","d98d3339":"markdown","88149d0e":"markdown","0e23b56d":"markdown","8aca1716":"markdown","a4f76aac":"markdown","ac5e2574":"markdown","1dcc0e24":"markdown","1c614c43":"markdown","336bd45b":"markdown","f3a2184e":"markdown","6f272b7e":"markdown","3bbd9608":"markdown","bdced418":"markdown","3e9d815e":"markdown","e45e4f1f":"markdown","b6d23ce5":"markdown","81a209cb":"markdown","49c76fe4":"markdown","8596ecd8":"markdown","e30c809e":"markdown","530549e4":"markdown","b1099772":"markdown","d548a190":"markdown","76d9ffa6":"markdown","40b972cf":"markdown","d4533621":"markdown"},"source":{"81451ded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16a67ebd":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6df9be67":"data=pd.read_csv(\"..\/input\/house\/train.csv\")\ndata","8ad99ad2":"data.isnull().sum().sort_values(ascending=False)[:10] #\u67e5\u770b\u7f3a\u5931\u503c\u6700\u591a\u7684\u5341\u4e2a\u7279\u5f81","27ede37a":"data.drop(labels=['PoolQC','MiscFeature','Alley','Fence','FireplaceQu','Id','MoSold','YrSold'],axis=1,inplace=True)","0a9b2b2b":"data.shape","ceb65323":"data.info()","76ff7357":"data=pd.get_dummies(data)","4a619220":"data.info()","f92cc5e6":"data.isnull().sum().sort_values(ascending=False).head(15)","fa0c1412":"val={}\nfor col in data.isnull().sum().sort_values(ascending=False).head(3).index:\n    val[col]=data[col].mode()[0] #\u5efa\u7acb\u6709\u7a7a\u503c\u7684\u5217\u540d\uff1a\u4f17\u6570 \u5bf9\u5e94\u7684\u5b57\u5178\ndata.fillna(value=val,inplace=True) \ndata.isnull().sum().sort_values()","13d6c686":"data.corr()","d048bb55":"corr_price=data.corr()['SalePrice']\nplt.bar(abs(corr_price).index,abs(corr_price).values) #\u8fd9\u91cc\u7528\u7edd\u5bf9\u503c\u56e0\u4e3a\u76f8\u5173\u6027\u6b63\u8d1f\u76f8\u5173\u90fd\u7b97\u76f8\u5173","916d03d0":"abs(corr_price).sort_values(ascending=False).head(15)","e53d1779":"c=abs(corr_price)\ndata=data.drop(labels=list(c[c<0.3].index),axis=1)\ndata","971866cd":"x=data.drop('SalePrice',axis=1)\ny=data['SalePrice']","3344cf3f":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","b60f15e4":"from sklearn.preprocessing import StandardScaler\nsta=StandardScaler()\nx_train_s=sta.fit_transform(x_train) #\u5728\u8bad\u7ec3\u96c6\u4e0a\u62df\u5408\u6807\u51c6\u5316\u5e76\u5e94\u7528\nx_test_s=sta.transform(x_test) #\u5728\u6d4b\u8bd5\u96c6\u4e0a\u4e5f\u5e94\u7528\u5728\u8bad\u7ec3\u96c6\u4e0a\u62df\u5408\u7684\u6807\u51c6\u5316","b900c2f7":"x_train_s","4615e89b":"x_test_s","00131bc9":"y_train","c47d7905":"from sklearn import metrics\ndef print_evaluate(true, predicted):  #\u7528\u4e8e\u8f93\u51fa\u6307\u6807\u503c\n    mae = metrics.mean_absolute_error(true, predicted)\n    mse = metrics.mean_squared_error(true, predicted)\n    rmse = np.sqrt(metrics.mean_squared_error(true, predicted))\n    r2_square = metrics.r2_score(true, predicted)\n    print('MAE:', mae)\n    print('MSE:', mse)\n    print('RMSE:', rmse)\n    print('R2 Square', r2_square)\n    print('__________________________________')","5d1a5147":"from sklearn.linear_model import LinearRegression\nfrom time import time\nlinreg1=LinearRegression()\nlinreg2=LinearRegression()\nts1=time()\nlinreg1.fit(x_train,y_train)\nte1=time()-ts1\nts2=time()\nlinreg2.fit(x_train_s,y_train)\nte2=time()-ts2","54d435fd":"pred=linreg1.predict(x_test)\npred_s=linreg2.predict(x_test_s)\nprint('\u672a\u52a0\u6807\u51c6\u5316\u7684\u8bad\u7ec3\u65f6\u95f4\uff1a'+str(te1))\nprint('\u672a\u52a0\u6807\u51c6\u5316\u7684\u6d4b\u8bd5\u96c6\u4e0a\u5404\u6307\u6807\u5f97\u5206\uff1a')\nprint_evaluate(y_test,pred)\nprint('\u6807\u51c6\u5316\u540e\u7684\u8bad\u7ec3\u65f6\u95f4\uff1a'+str(te2))\nprint('\u6807\u51c6\u5316\u540e\u7684\u6d4b\u8bd5\u96c6\u4e0a\u5404\u6307\u6807\u5f97\u5206\uff1a')\nprint_evaluate(y_test,pred_s)","5a8cbb82":"def train_evaluate(model, name_model): #\u8bad\u7ec3\u6a21\u578b\u5e76\u8f93\u51fa\u6a21\u578b\u7684\u5404\u9879\u6307\u6807\n    ts=time()\n    model.fit(x_train_s,y_train)\n    te=time()-ts\n    pred=model.predict(x_test_s)\n    mae = metrics.mean_absolute_error(y_test, pred)\n    mse = metrics.mean_squared_error(y_test, pred)\n    rmse = np.sqrt(metrics.mean_squared_error(y_test, pred))\n    r2_square = metrics.r2_score(y_test, pred)\n    return pd.DataFrame({'fit_time':te,'mae':mae,'mse':mse,'rmse':rmse,'r2_square':r2_square,'model_name':name_model},columns=['fit_time','mae','mse','rmse','r2_square','model_name'],index=[name_model])","7daa45ea":"from sklearn.linear_model import Lasso\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import ElasticNet\nlinreg=LinearRegression()\nlasso=Lasso()\nridge=Ridge()\nelasticnet=ElasticNet()\ntotal=train_evaluate(linreg,'linreg').append(train_evaluate(lasso,'lasso')).append(train_evaluate(ridge,'ridge')).append(train_evaluate(elasticnet,'elasticnet'))\ntotal #\u8fd9\u91cc\u9762\u4e4b\u6240\u4ee5\u6709\u4e00\u4e2a\u5217\u6765\u663e\u793a\u5217\u540d\u662f\u4e3a\u4e86\u65b9\u4fbf\u753b\u56fe\u76f4\u89c2\u6bd4\u8f83","11b18750":"sns.barplot(x='model_name',y='rmse',data=total)","1af71b5e":"sns.barplot(x='model_name',y='mse',data=total)","12628189":"sns.barplot(x='model_name',y='mae',data=total)","91fb67d3":"sns.barplot(x='model_name',y='fit_time',data=total)","28024892":"sns.barplot(x='model_name',y='r2_square',data=total)","d98d3339":"\u9884\u5904\u7406\u9636\u6bb5\u4e3b\u8981\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u9636\u6bb5\uff1a\n1. \u624b\u52a8\u5c1d\u8bd5\u5254\u9664\u4e00\u4e9b\u65e0\u7528\u7684\u5217  \n\u8fd9\u91cc\u7684\u8003\u8651\u662f\u5bf9\u4e8e\u4e00\u4e9b\u5bf9\u9884\u6d4b\u623f\u4ef7\u4efb\u52a1\u660e\u663e\u6ca1\u6709\u5e2e\u52a9\u7684\u7279\u5f81\u4ee5\u53ca\u4e00\u4e9b\u7edd\u5927\u90e8\u5206\u90fd\u662f\u7f3a\u5931\u503c\u7684\u7279\u5f81\u8fdb\u884c\u5254\u9664\n2. \u7279\u5f81\u7f16\u7801\n3. \u7a7a\u503c\u586b\u5145\n4. \u76f8\u5173\u6027\u8861\u91cf\u4ee5\u53ca\u5254\u9664\u5f31\u76f8\u5173\u7279\u5f81","88149d0e":"\u83b7\u53d6x\u548cy","0e23b56d":"\u5728\u505a\u7a7a\u503c\u586b\u5145\u4e4b\u524d\uff0c\u770b\u770b\u6570\u636e\u4e2d\u8fd8\u5269\u4e0b\u54ea\u4e9b\u7279\u5f81\u662f\u7c7b\u522b\u7279\u5f81","8aca1716":"# **\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6784\u5efa\u53ca\u8bad\u7ec3**","a4f76aac":"\u7efc\u4e0a\uff0c\u8003\u8651\u624b\u52a8\u5254\u9664\u7684\u7279\u5f81\uff1a'PoolQC','MiscFeature','Alley','Fence','FireplaceQu','id','Mosold','Yrsold'","ac5e2574":"\u5bfc\u5165\u5fc5\u8981\u5e93\uff0c\u6682\u65f6\u5148\u5bfc\u5165\u8fd9\u4e48\u591a\uff0c\u540e\u9762\u7528\u5230\u4e86\u4e34\u65f6\u52a0","1dcc0e24":"\u7c7b\u522b\u7279\u5f81\u7b80\u76f4\u592a\u591a\u4e86\u3002\u3002  \n\u76f4\u63a5\u5168\u90e8\u8fdb\u884cone hot\u7f16\u7801","1c614c43":"# **\u6570\u636e\u9884\u5904\u7406\u9636\u6bb5**","336bd45b":"\u770b\u4e00\u4e0b\u7a7a\u503c\u7684\u60c5\u51b5","f3a2184e":"\u7136\u540e\u5bf9x\u8fdb\u884c\u6807\u51c6\u5316","6f272b7e":"# **\u5176\u4ed6\u7ebf\u6027\u56de\u5f52\u53d8\u79cd**  \n\u73b0\u5728\u4f7f\u7528\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u8dd1\u4e00\u8dd1lasso\u56de\u5f52\uff0cridge\u56de\u5f52\u548c\u5f39\u6027\u7f51\u7edc\uff0c\u8ddf\u666e\u901a\u7ebf\u6027\u56de\u5f52\u6bd4\u4e00\u4e0b","3bbd9608":"\u5927\u6982\u662f\u6570\u636e\u96c6\u5b9e\u5728\u592a\u5c11\u4e86\u5427\u3002\u3002\u4e00\u5171\u5c31\u4e00\u5343\u591a\u6761\uff0c\u52a0\u6ca1\u52a0\u6807\u51c6\u5316\u7684\u8bad\u7ec3\u901f\u5ea6\u5dee\u5f02\u786e\u5b9e\u5f88\u5c0f\uff0c\u4f46\u662f\u6211\u8dd1\u4e86\u5f88\u591a\u6b21\u4ee3\u7801\uff0c\u6bcf\u6b21\u90fd\u662f\u6807\u51c6\u5316\u7684\u5feb\u4e00\u70b9\uff0c\u6240\u4ee5\u6807\u51c6\u5316\u80fd\u52a0\u901f\u6536\u655b\u786e\u5b9e\u5b58\u5728","bdced418":"\u4e8c\u767e\u591a\u4e2a\u7279\u5f81\u753b\u5728heatmap\u91cc\u9762\u4f30\u8ba1\u770b\u4e0d\u51fa\u6765\u5565\u4e86\uff0c\u53cd\u6b63\u6211\u53ea\u7528\u7279\u5f81\u548c\u7ed3\u679c\u7684\u76f8\u5173\u6027\uff0c\u90a3\u53ea\u62ce\u51fa\u6765price\u90a3\u4e00\u884c\uff08\u6216\u8005\u90a3\u4e00\u5217\uff09\u753b\u4e2a\u56fe\u5c31\u884c\u4e86","3e9d815e":"\u5929\u771f\u4e86\uff0c\u592a\u591a\u4e86\u5b9e\u5728\u662f\uff0c\u5c31\u7b97\u5355\u62ce\u51fa\u6765\u4e5f\u5bc6\u5bc6\u9ebb\u9ebb\u770b\u4e0d\u6e05","e45e4f1f":"\u586b\u5145\u7ed3\u675f\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u770b\u770b\u7279\u5f81\u548c\u9884\u6d4b\u7ed3\u679c\u7684\u76f8\u5173\u6027\u518d\u8e22\u6389\u4e00\u5927\u5806\u7279\u5f81\u4e86","b6d23ce5":"\u76f4\u63a5\u5bf9\u76f8\u5173\u6027\u7edd\u5bf9\u503c\u6570\u7ec4\u6392\u5e8f\u5427\uff0c\u770b\u7684\u6bd4\u56fe\u66f4\u76f4\u89c2","81a209cb":"\u4e0b\u9762\u5206\u522b\u4f7f\u7528\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u548c\u4e3a\u6807\u51c6\u5316\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3:","49c76fe4":"\u8ba4\u4e3a\u7f3a\u5931\u503c\u8fbe\u5230\u4e00\u534a\u5de6\u53f3\u7684\u7279\u5f81\u90fd\u65e0\u6cd5\u5bf9\u9884\u6d4b\u63d0\u4f9b\u5e2e\u52a9\uff0c\u6b64\u5916\uff0c\u7279\u5f81\u4e2d\u7684id\u5f88\u660e\u663e\u5bf9\u9884\u6d4b\u6ca1\u6709\u5e2e\u52a9\uff0c\u9488\u5bf9\u9884\u6d4b\u4efb\u52a1\uff0c\u9884\u6d4b\u7684\u573a\u666f\u662f\u9488\u5bf9\u8fd8\u672a\u4ea4\u6613\u7684\u623f\u5b50\u7684\u76f8\u5173\u7279\u5f81\u8fdb\u884c\u9884\u6d4b\uff0c\u6240\u4ee5\u7279\u5f81\u4e2d\u7684\u4ea4\u6613\u65e5\u671f\uff08\u9500\u552e\u6708\u4efdMosold\uff0c\u9500\u552e\u5e74\u4efdYrSold\uff09\u4f5c\u4e3a\u5386\u53f2\u6570\u636e\u4e5f\u4e0d\u5e94\u8be5\u4f5c\u4e3a\u8003\u8651\u7684\u7279\u5f81","8596ecd8":"\u62df\u5408\u7ed3\u675f\u770b\u770b\u4e24\u4e2a\u6a21\u578b\u5206\u522b\u8868\u73b0\u5982\u4f55\uff1a","e30c809e":"\u8dd1\u4e86\u597d\u51e0\u6b21\uff0c\u5176\u4ed6\u7684\u6307\u6807\u90fd\u6ca1\u4ec0\u4e48\u5dee\u8ddd\uff0c\u53ea\u6709\u5728\u62df\u5408\u65f6\u95f4\u4e0alasso\u56de\u5f52\u7684\u62df\u5408\u65f6\u95f4\u660e\u663e\u6bd4\u5176\u4ed6\u4e09\u79cd\u66f4\u957f","530549e4":"\u4e00\u51713\u4e2a\u5217\u6709\u7a7a\u503c\uff0c\u73b0\u5728\u5bf9\u7a7a\u503c\u8fdb\u884c\u586b\u5145\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u7b56\u7565\u662f\u4f17\u6570\u586b\u5145","b1099772":"\u5b9a\u4e49\u8bc4\u4ef7\u6307\u6807\uff1a","d548a190":"\u767e\u5ea6\u4e86\u4e00\u4e0b\u8bf4\u76f8\u5173\u6027\u7edd\u5bf9\u503c\u5c0f\u4e8e0.3\u5c31\u8ba4\u4e3a\u6ca1\u6709\u76f8\u5173\u6027\uff0c\u6240\u4ee5\u5254\u9664\u76f8\u5173\u6027\u5927\u4e8e0.3\u7684\u7279\u5f81\uff1a","76d9ffa6":"\u6e05\u7406\u7ed3\u675f\u4e4b\u540e\u5c31\u526945\u4e2a\u7279\u5f81\u4e86\uff0c\u9884\u5904\u7406\u7ed3\u675f","40b972cf":"\u5212\u5206\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff1a","d4533621":"\u8bfb\u53d6\u4e00\u4e0b\u6570\u636e,\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u96c6\u662f\u7528\u6765\u6bd4\u8d5b\u7684\uff0c\u91cc\u9762\u6d4b\u8bd5\u96c6\u662f\u4e0d\u5305\u542b\u6807\u7b7e\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u68c0\u9a8c\u53ea\u80fd\u5c06train.csv\u5212\u5206\u6210\u6211\u7528\u7684\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6"}}