{"cell_type":{"7bee7b30":"code","acc7ea88":"code","4499aacc":"code","64309461":"code","43d98905":"code","589a24e4":"code","9a15d77f":"code","f5a30da9":"code","37219545":"code","afbb68db":"code","234c9251":"code","2205643a":"code","2596e203":"code","cf89cf88":"code","64f49214":"code","1feea485":"code","a75e2489":"code","a020a444":"code","a3f69533":"code","b29ee815":"code","ffa20aa0":"code","78951198":"code","0e72223f":"code","80b9dcc4":"markdown"},"source":{"7bee7b30":"!pip install optuna","acc7ea88":"import pandas as pd\nimport numpy as np\nfrom pandas.plotting import scatter_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\nfrom dateutil.parser import parse\nfrom datetime import datetime\nfrom scipy.stats import norm\nimport optuna\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nimport joblib\nprint(\"libraries loaded!\")","4499aacc":"users = pd.read_csv('\/kaggle\/input\/telecom-users-dataset\/telecom_users.csv', encoding = 'utf8')\nusers.info()","64309461":"users.head(5)","43d98905":"def getListGender(gender):\n    if gender == 'Female':\n        return 0\n    if gender == 'Male':\n        return 1\ndef getListYesNo(name):\n    if name == 'No':\n        return 0\n    if name == 'Yes':\n        return 1\ndef getMultipleLines(name):\n    if name == 'No':\n        return 0\n    if name == 'Yes':\n        return 1\n    if name == 'No phone service':\n        return 2\ndef getInternetService(name):\n    if name == 'No':\n        return 0\n    if name == 'DSL':\n        return 1\n    if name == 'Fiber optic':\n        return 2\ndef getInfoYesNoInternetService(name):\n    if name == 'No':\n        return 0\n    if name == 'Yes':\n        return 1\n    if name == 'No internet service':\n        return 2\ndef getContract(name):\n    if name == 'Month-to-month':\n        return 0\n    if name == 'One year':\n        return 1\n    if name == 'Two year':\n        return 2\ndef getPaymentMethod(name):\n    if name == 'Bank transfer (automatic)':\n        return 0\n    if name == 'Credit card (automatic)':\n        return 1\n    if name == 'Electronic check':\n        return 2\n    if name == 'Mailed check':\n        return 3","589a24e4":"print(users.groupby(['gender']).size())\nprint(users.groupby(['Partner']).size())\nprint(users.groupby(['Dependents']).size())\nprint(users.groupby(['PhoneService']).size())\nprint(users.groupby(['MultipleLines']).size())\nprint(users.groupby(['InternetService']).size())\nprint(users.groupby(['OnlineSecurity']).size())\nprint(users.groupby(['OnlineBackup']).size())\n\nprint(users.groupby(['DeviceProtection']).size())\nprint(users.groupby(['TechSupport']).size())\nprint(users.groupby(['StreamingTV']).size())\nprint(users.groupby(['StreamingMovies']).size())\nprint(users.groupby(['Contract']).size())\nprint(users.groupby(['PaperlessBilling']).size())\nprint(users.groupby(['PaymentMethod']).size())\nprint(users.groupby(['Churn']).size())","9a15d77f":"users['gender'] = list(map(lambda x: getListGender(x), users['gender']))\nusers['Partner'] = list(map(lambda x: getListYesNo(x), users['Partner']))\nusers['Dependents'] = list(map(lambda x: getListYesNo(x), users['Dependents']))\nusers['PhoneService'] = list(map(lambda x: getListYesNo(x), users['PhoneService']))\nusers['MultipleLines'] = list(map(lambda x: getMultipleLines(x), users['MultipleLines']))\nusers['InternetService'] = list(map(lambda x: getInternetService(x), users['InternetService']))\n\nusers['OnlineSecurity'] = list(map(lambda x: getInfoYesNoInternetService(x), users['OnlineSecurity']))\nusers['OnlineBackup'] = list(map(lambda x: getInfoYesNoInternetService(x), users['OnlineBackup']))\nusers['DeviceProtection'] = list(map(lambda x: getInfoYesNoInternetService(x), users['DeviceProtection']))\nusers['TechSupport'] = list(map(lambda x: getInfoYesNoInternetService(x), users['TechSupport']))\nusers['StreamingTV'] = list(map(lambda x: getInfoYesNoInternetService(x), users['StreamingTV']))\nusers['StreamingMovies'] = list(map(lambda x: getInfoYesNoInternetService(x), users['StreamingMovies']))\nusers['Contract'] = list(map(lambda x: getContract(x), users['Contract']))\nusers['PaperlessBilling'] = list(map(lambda x: getListYesNo(x), users['PaperlessBilling']))\nusers['PaymentMethod'] = list(map(lambda x: getPaymentMethod(x), users['PaymentMethod']))\nusers['Churn'] = list(map(lambda x: getListYesNo(x), users['Churn']))\n\n\n","f5a30da9":"def getINT(s):\n    s = s.replace(' ', '')\n    if len(s) == 0:\n        return 0\n    return int(float(s)*100)\ndef getINTMonthlyCharges(s):\n    return int(float(s)*100)\nusers['MonthlyCharges'] = list(map(lambda x: getINTMonthlyCharges(x), users['MonthlyCharges']))\nusers['TotalCharges'] = list(map(lambda x: getINT(x), users['TotalCharges']))\n","37219545":"users.isna().sum()","afbb68db":"f, axes = plt.subplots(1, 2)  \nsns.boxplot(  y=\"tenure\", data=users, ax=axes[0])\nsns.boxplot(  y=\"MonthlyCharges\", data=users, ax=axes[1])\nplt.tight_layout()","234c9251":"users.drop('Unnamed: 0', inplace=True, axis=1)\nusers.drop('customerID', inplace=True, axis=1)","2205643a":"users.to_csv (r'export_dataframe.csv')","2596e203":"y = users['Churn']","cf89cf88":"users.drop('Churn', inplace=True, axis=1)","64f49214":"X = users\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, test_size=0.20, random_state=1)\nusers.info()","1feea485":"def objective(trial):\n    print('')\n    params = {\n      'n_estimators': int(trial.suggest_loguniform('n_estimators', 500, 2000)),\n      'bootstrap':False,\n      'max_features':'sqrt',\n      'random_state':1,\n      'max_depth' : trial.suggest_int('max_depth', 5, 300),\n      'min_samples_leaf':trial.suggest_int(\"min_samples_leaf\", 1, 15),\n      'min_samples_split':0.05,\n      'n_jobs':-1,\n      }\n    \n    X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.25, random_state=1)\n    model = RandomForestRegressor(**params)\n    model.fit(X_train, y_train)\n    y_valid_pred = model.predict(X_valid)\n    return mean_absolute_error(y_valid, y_valid_pred)\n","a75e2489":"study = optuna.create_study()\nstudy.optimize(objective, n_trials=150)","a020a444":"print(study.best_trial)\nprint(study.best_trial.params)","a3f69533":"rf_model = RandomForestRegressor(\n      n_estimators= int(study.best_trial.params['n_estimators']),\n      max_depth= int(study.best_trial.params['max_depth']),\n      min_samples_leaf=int(study.best_trial.params['min_samples_leaf']),\n      bootstrap=False,\n      max_features='sqrt',\n      criterion='mse',\n      random_state=1,\n      min_samples_split=0.05,\n      n_jobs=-1,\n)\nrf_model.fit(train_X, train_y)","b29ee815":"joblib.dump(rf_model, 'rf_model.h5',protocol=4)\n","ffa20aa0":"rf_model = joblib.load('rf_model.h5')","78951198":"\nflat = pd.DataFrame({\n    'gender':[getListGender('Male')],\n    'SeniorCitizen': [1],\n    'Partner':[getListYesNo('Yes')],\n    'Dependents':[getListYesNo('Yes')],\n    'tenure':[44],\n    'PhoneService':[getListYesNo('Yes')],\n    'MultipleLines':[getMultipleLines('Yes')],\n    'InternetService':[getInternetService('Fiber optic')],\n    \n    'OnlineSecurity':[getInfoYesNoInternetService('Yes')],\n    'OnlineBackup':[getInfoYesNoInternetService('Yes')],\n    'DeviceProtection':[getInfoYesNoInternetService('Yes')],\n    'TechSupport':[getInfoYesNoInternetService('Yes')],\n    'StreamingTV':[getInfoYesNoInternetService('Yes')],\n    'StreamingMovies':[getInfoYesNoInternetService('Yes')],\n    \n    'Contract':[getContract('One year')],   \n    \n    'PaperlessBilling':[getListYesNo('Yes')],\n    'PaymentMethod':[getPaymentMethod('Credit card (automatic)')],\n    'MonthlyCharges':[getINTMonthlyCharges('10.5')],\n    'TotalCharges':[getINT('100.5')]\n})\n","0e72223f":"rf_prediction_flat = rf_model.predict(flat).round(0)\nprint(int(rf_prediction_flat[0]))","80b9dcc4":"# Predict"}}