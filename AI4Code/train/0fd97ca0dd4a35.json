{"cell_type":{"ab1978d6":"code","7deddb82":"code","bfc6eb63":"code","b2e08cc3":"code","9ab46cd2":"code","f96b3af0":"code","18fc8be3":"code","6a3a5bcd":"code","7e88c624":"code","c147f9bb":"code","86a3dd84":"code","4824e483":"code","c2fcc822":"code","16dbd26f":"code","c7cb1bc4":"code","b86b5524":"code","78d6ce0c":"code","273d7f74":"code","76511e4f":"code","8a8e0151":"code","f889647e":"code","4d8f01b9":"code","c544c911":"code","91f5aebd":"code","c122c98f":"code","42b94cd5":"code","de62a818":"code","975c9540":"code","cfade01e":"code","0eeeace5":"code","b0653e3d":"code","e887bc7e":"code","4d0e2168":"code","3900a4a2":"code","2214519f":"markdown","24c379d1":"markdown","7405ad12":"markdown","a3950ba7":"markdown","3141e09d":"markdown","21f269a4":"markdown","399728da":"markdown","1eeedc59":"markdown","08f5cc86":"markdown","0c1ebfe5":"markdown","6f3a35d9":"markdown","0404351a":"markdown","7ddcf590":"markdown","d2cb6fde":"markdown","3ea4a7bd":"markdown","036af09f":"markdown","b4827f59":"markdown","827618f8":"markdown","12a7754e":"markdown"},"source":{"ab1978d6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt #data visualization\nimport seaborn as sns #data visualization","7deddb82":"df = pd.read_csv(\"..\/input\/MarathonData.csv\")\ndf.head()","bfc6eb63":"df = df.drop(columns=['id','Marathon','CATEGORY'])\ndf.head()","b2e08cc3":"df = df.drop(columns=['Name'])\ndf.head()","9ab46cd2":"df.isna().sum()","f96b3af0":"df['CrossTraining'].unique()","18fc8be3":"df['CrossTraining'].fillna('nonct',inplace=True)\ndf.isna().sum()","6a3a5bcd":"dfn = df.dropna(how='any')\ndfn.isna().sum()","7e88c624":"f,axes = plt.subplots(figsize=(15,5))\nsns.swarmplot(x = 'Category', y='MarathonTime',data=df, ax=axes)\nplt.title('Time distribution on different Category')\nplt.xlabel('Category')\nplt.ylabel('Marathon Time')\nplt.show()","c147f9bb":"df = df.dropna(how='any')\ndf = df.drop(columns=['Category'])\ndf.head()","86a3dd84":"df.isna().sum()","4824e483":"df.info()","c2fcc822":"df['Wall21'] = df['Wall21'].astype(float)\ndf.info()","16dbd26f":"plt.scatter(x = df['km4week'], y=df['MarathonTime'])\nplt.title('km4week Vs Marathon Time')\nplt.xlabel('km4week')\nplt.ylabel('Marathon Time')\nplt.show()","c7cb1bc4":"plt.scatter(x = df['sp4week'], y=df['MarathonTime'])\nplt.title('sp4week Vs Marathon Time')\nplt.xlabel('sp4week')\nplt.ylabel('Marathon Time')\nplt.show()","b86b5524":"df = df.query('sp4week<2000')","78d6ce0c":"plt.scatter(x = df['sp4week'], y=df['MarathonTime'])\nplt.title('sp4week Vs Marathon Time')\nplt.xlabel('sp4week')\nplt.ylabel('Marathon Time')\nplt.show()","273d7f74":"plt.scatter(x = df['Wall21'], y=df['MarathonTime'])\nplt.title('Wall21 Vs Marathon Time')\nplt.xlabel('Wall21')\nplt.ylabel('Marathon Time')\nplt.show()","76511e4f":"f,axes = plt.subplots(figsize=(15,5))\nsns.boxplot(x = df['CrossTraining'], y=df['MarathonTime'],ax=axes)\nplt.title('CrossTraining Vs Marathon Time')\nplt.xlabel('CrossTraining')\nplt.ylabel('Marathon Time')\nplt.show()","8a8e0151":"df = pd.get_dummies(df)","f889647e":"correlated = df.corr().abs()['MarathonTime'].sort_values(ascending=False)\ncorrelated","4d8f01b9":"correlated = correlated[:5]\ncorrelated","c544c911":"df = df.loc[:,correlated.index]\ndf.head()","91f5aebd":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import cross_val_score","c122c98f":"X = df.drop(columns=['MarathonTime'])\ny = df['MarathonTime']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.7)","42b94cd5":"clf = LinearRegression()\nclf.fit(X_train,y_train)\nr2 = clf.score(X_train,y_train)\ndef adjustedR2(r2,n,k):\n    return r2-(k-1)\/(n-k)*(1-r2)\na = adjustedR2(r2, X_train.shape[0],4)\na","de62a818":"prediction = clf.predict(X_test)\nrmse = np.sqrt(np.mean((prediction-y_test)**2))\nrmse","975c9540":"cv1 = cross_val_score(clf,X_train,y_train,cv=5).mean()\ncv1","cfade01e":"poly = PolynomialFeatures()\nX_train2 = poly.fit_transform(X_train)\nX_test2 = poly.fit_transform(X_test)\nclf.fit(X_train2,y_train)\nPolyR2 = clf.score(X_train2,y_train)\nPolyR2","0eeeace5":"b = adjustedR2(r2, X_train2.shape[0],4)\nb","b0653e3d":"prediction2 = clf.predict(X_test2)\nrmse2 = np.sqrt(np.mean((prediction2-y_test)**2))\nrmse2","e887bc7e":"cv2 = cross_val_score(clf,X_train2,y_train,cv=5).mean()\ncv2","4d0e2168":"results = pd.DataFrame({'Model': [],\n                        'Root Mean Squared Error (RMSE)':[],\n                        'R-squared (test)':[],\n                        'Adjusted R-squared (test)':[],\n                        '5-Fold Cross Validation':[]})\nr = results.shape[0]\nresults.loc[r] = ['Linear Regression', rmse, r2, a, cv1]\nresults.loc[r+1] = ['Polynomial Regression', rmse2, PolyR2, b, cv2]","3900a4a2":"results","2214519f":"Linear Regression","24c379d1":"From the result above, nan values in CrossTraining column means that the runner doesn't have another Cross Training activity, therefore i will fill the missing values with 'nonct' that stands for non Cross Training","7405ad12":"**Data Visualization**","a3950ba7":"i want to check whether Category column has an effect to marathon time or not, so i make another data frame that not containing missing values so it can be visualized","3141e09d":"make a new dataframe that only contain variable that have high correlation with Marathon Time","21f269a4":"turns out there is one outliers in sp4week data that need to be remove","399728da":"**Checking Correlation**","1eeedc59":"**Reading Dataset**","08f5cc86":"From the swarmplot above, i conclude that Category column doesn't important for predicting Marathon Time. Therefore i will drop Category Column and drop the missing values","0c1ebfe5":"from the graph above, i conclude that Cross Training doesn't have big impact for predicting MarathonTime","6f3a35d9":"**Handling Missing Values**","0404351a":"Wall21 column type need to be changed so it can be visualized","7ddcf590":"From the explanation about the variable in dataset, i conclude that name, CATEGORY, id, and Marathon columns doesn't important for analyzing and predicting the dataset. Therefore i will drop those columns","d2cb6fde":"**Predicting**","3ea4a7bd":"Split the data into train and test for helping the prediction","036af09f":"Checking missing values in every columns","b4827f59":"**Importing Modules**","827618f8":"In this section, i will built a model to predict Marathon Time with selected features. I will use Linear Regression and Polynomial Regression to predict the dataset. i also will show the R squared, adjusted R squared , Root Mean Squared and Cross Validation Score for each method to compare.","12a7754e":"Polynomial Regression"}}