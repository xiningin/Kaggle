{"cell_type":{"447478b0":"code","5e521ff0":"code","6fa03c96":"code","272d88ba":"code","98697ea5":"code","3f86223d":"code","e1e7f121":"code","2dd31898":"code","4fd45f9c":"code","8eaee915":"code","f8e925ef":"code","3fef6594":"code","12dc0f5c":"code","74ade4c2":"code","3eee9c81":"code","f452188d":"code","bd8e2bb2":"code","f306e80f":"code","7dffd4eb":"code","3c7b392e":"code","680eb1e3":"code","e1f6a0bc":"code","7e48d83c":"code","ef3e8c30":"code","6085ffa3":"code","25c41629":"code","7c8119c4":"markdown","ebb73ecf":"markdown","ca7555e0":"markdown","55a32081":"markdown"},"source":{"447478b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e521ff0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6fa03c96":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport keras.applications as app\nimport keras.utils as utils\nfrom sklearn.model_selection import train_test_split\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras import backend as KB\nimport cv2","272d88ba":"img_size=224","98697ea5":"def make_data(pathc=None,pathd=None,size=(224,224)):\n    data=[]\n    y=[]\n    j=0\n    if len(os.listdir(pathd))!=0:\n        for i in os.listdir(pathd):\n            if i[-3:] == 'jpg':\n                data_dogs=cv2.imread(pathd+'\/'+str(i))\n                res=cv2.resize(data_dogs,size) \n                y.append(0)\n                data.append(res)\n    if len(os.listdir(pathc))!=0:\n        for i in os.listdir(pathc):\n            if i[-3:] == 'jpg':\n                data_cats=cv2.imread(pathc+'\/'+str(i))\n                res=cv2.resize(data_cats,size) \n                y.append(1)\n                data.append(res)\n    y=np.array(y)\n    data=np.array(data)\n    return data,y","3f86223d":"X_train,y_train=make_data(pathd='\/kaggle\/input\/cat-and-dog\/training_set\/training_set\/dogs',\n                          pathc='\/kaggle\/input\/cat-and-dog\/training_set\/training_set\/cats',)\n# os.listdir('..\/input\/cat-and-dog\/trainin')","e1e7f121":"X_train.shape,y_train.shape","2dd31898":"y_cate_train=utils.to_categorical(y_train)","4fd45f9c":"y_cate_train.shape","8eaee915":"plt.subplot(1,2,1)\nplt.imshow(X_train[0])\nplt.title('dog -> '+str(y_cate_train[0]))\n\nplt.subplot(1,2,2)\nplt.imshow(X_train[-1])\nplt.title('cat -> '+str(y_cate_train[-1]))\n","f8e925ef":"def clear():\n    KB.clear_session()    ","3fef6594":"clear()","12dc0f5c":"from keras.layers import Dense,MaxPooling2D,GlobalAveragePooling2D","74ade4c2":"base_model=app.ResNet50(include_top=False,input_shape=(img_size,img_size,3),weights='imagenet')","3eee9c81":"for layer in base_model.layers:\n    layer.trainable=False","f452188d":"x=base_model.output\npool=GlobalAveragePooling2D()(x)","bd8e2bb2":"output=Dense(2,activation='softmax')(pool)","f306e80f":"from keras.models import Model\nmodel=Model(inputs=base_model.input,outputs=output)","7dffd4eb":"model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","3c7b392e":"y_cate_train.shape,X_train.shape","680eb1e3":"model","e1f6a0bc":"model.fit(X_train,y_cate_train,epochs=5)","7e48d83c":"X_test,y_test=make_data(pathd='\/kaggle\/input\/cat-and-dog\/test_set\/test_set\/dogs',\n                          pathc='\/kaggle\/input\/cat-and-dog\/test_set\/test_set\/cats',)\n# os.listdir('..\/input\/cat-and-dog\/trainin')","ef3e8c30":"y_cate_test=utils.to_categorical(y_test)","6085ffa3":"model.evaluate(X_test,y_cate_test)","25c41629":"model.save('cat-dog-ResNet50.h5')","7c8119c4":"<h2>Dog category is represented as [1 , 0]<br>\n    Cat category is represented as  [0 , 1]<\/h2>\n","ebb73ecf":"**make_data** converts the images into the numpy arrays.\n<br>\n**pathc** : path of the directory where cat images are present\n<br>\n**pathd** : path of the directory where dog images are present","ca7555e0":"**Importing Dependencies**","55a32081":"<h1>Converting y_train categorical labels<\/h1>"}}