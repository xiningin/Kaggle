{"cell_type":{"0fd50fd9":"code","ee9f7fe1":"code","3148398e":"code","4f79b81d":"code","33132c53":"code","a000e511":"code","b62174a3":"code","349f25b4":"code","4c52d8d1":"code","68a274fa":"code","824b73b3":"code","8539220e":"code","40651c45":"code","eee19170":"code","6f44ae3e":"code","2fdf985b":"markdown","9ed0967f":"markdown","49f45902":"markdown","c55be32d":"markdown","35600ae7":"markdown","076e7b70":"markdown","af0a7324":"markdown","fe2c2a5b":"markdown","e4c480bb":"markdown","160369fc":"markdown","7509f921":"markdown","603a99db":"markdown","dc4eb6e3":"markdown","b45ebf1e":"markdown","a5b9ff19":"markdown","f8748f63":"markdown","4e172986":"markdown","f907379e":"markdown"},"source":{"0fd50fd9":"# data manipulation \nimport numpy as np \nimport pandas as pd \nfrom scipy import stats\n\n# visualizations\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Interactive visualizations\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nfrom plotly.offline import iplot, init_notebook_mode\nimport cufflinks\nimport cufflinks as cf\nimport plotly.figure_factory as ff\nfrom plotly import tools\n\n# Using plotly + cufflinks in offline mode\ninit_notebook_mode(connected=True)\ncufflinks.go_offline(connected=True)\n\nimport os\nprint(os.listdir(\"..\/input\"))","ee9f7fe1":"df_dict = pd.read_csv(\"..\/input\/Data_Dictionary.csv\", sep=';')\ndf_brazil = pd.read_csv(\"..\/input\/BRAZIL_CITIES.csv\", sep=';')\n\n## filtering the data to get just the col and rows that we are interested \ndf_dict = df_dict[['FIELD', 'DESCRIPTION']][:81]","3148398e":"def resumetable(df, dict_):\n    dict_ = dict_.rename(columns={'FIELD':'Name', 'DESCRIPTION': 'Description'})\n    print(f\"Dataset Shape: {df.shape}\")\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    summary['First Value'] = df.loc[0].values\n    summary['Second Value'] = df.loc[1].values\n    summary['Third Value'] = df.loc[2].values\n    summary = summary.merge(dict_, on='Name',how='left')\n    for name in summary['Name'].value_counts().index:\n        summary.loc[summary['Name'] == name, 'Entropy'] = round(stats.entropy(df[name].value_counts(normalize=True), base=2),2) \n        \n    return summary\n\ndef num_dist_plot(df, col_cat, col_num):\n    print(f'Distribution of {col_cat}: ')\n    tmp = df.groupby([col_cat])['CITY'].nunique().sort_index()\n    tmp_pop = round((df_brazil.groupby([col_cat])[col_num].sum() \/ df_brazil.groupby([col_cat])[col_num].sum().sum()),2).sort_index() * 100\n    \n    trace1 = go.Bar(\n        x=tmp.index, name='Total Cities',\n        y=tmp.values, showlegend=False\n    )\n\n    trace2 =  go.Scatter(   \n        x=tmp_pop.index,\n        y=tmp_pop.values, yaxis='y2',\n        name='%Population', opacity = 0.6, \n        marker=dict(\n            color='black',\n            line=dict(color='#000000',\n                      width=2 )\n        )\n    )\n\n    layout = dict(title =  f'Total Cities in each {str(col_cat)} and the % of Population by State',\n              xaxis=dict(), \n              yaxis=dict(title= 'Count'), \n              yaxis2=dict(range= [0, 40], \n                          overlaying= 'y', \n                          anchor= 'x', \n                          side= 'right',\n                          zeroline=False,\n                          showgrid= False, \n                          title= '% of Total Population'\n                         ))\n\n    fig = go.Figure(data=[trace1, trace2], layout=layout)\n    iplot(fig)\n\n    \ndef cat_dist_plot(df, cat_group, cat_count):\n    print(f'Distribution of {col_cat}: ')\n    tmp = df_brazil.groupby(['STATE'])['REGIAO_TUR'].nunique()\n    tmp_pop = round((df_brazil.groupby([col])['IBGE_RES_POP'].sum() \/ df_brazil.groupby([col])['IBGE_RES_POP'].sum().sum()),2).sort_index() * 100\n    \n    trace1 = go.Bar(\n        x=tmp.index, name='Total Cities',\n        y=tmp.values, showlegend=False\n    )\n\n    trace2 =  go.Scatter(   \n        x=tmp_pop.index,\n        y=tmp_pop.values, yaxis='y2',\n        name='%Population', opacity = 0.6, \n        marker=dict(\n            color='black',\n            line=dict(color='#000000',\n                      width=2 )\n        )\n    )\n\n    layout = dict(title =  f'Total Cities in each {str(col)} and the % of Population by State',\n              xaxis=dict(), \n              yaxis=dict(title= 'Count'), \n              yaxis2=dict(range= [0, 40], \n                          overlaying= 'y', \n                          anchor= 'x', \n                          side= 'right',\n                          zeroline=False,\n                          showgrid= False, \n                          title= '% of Total Population'\n                         ))\n\n    fig = go.Figure(data=[trace1, trace2], layout=layout)\n    iplot(fig)","4f79b81d":"data_summary = resumetable(df_brazil, df_dict)\n\ndata_summary[:30]['Description'][1]","33132c53":"num_dist_plot(df_brazil, \"STATE\", 'IBGE_RES_POP')","a000e511":"IDH = ['IDHM', 'IDHM_Renda', 'IDHM_Longevidade', 'IDHM_Educacao']\nGVA = ['GVA_AGROPEC', 'GVA_INDUSTRY', 'GVA_SERVICES', 'GVA_PUBLIC', ' GVA_TOTAL ']\nEXPENDURE = ['TAXES', 'GDP', 'GDP_CAPITA']\n\nfor col in list(IDH+GVA):\n    df_brazil[col] = df_brazil[col].str.replace(',', '.')\n    df_brazil[col] = df_brazil[col].astype(float)","b62174a3":"#First plot\ntrace0 = go.Box(\n    x=df_brazil['STATE'],\n    y=df_brazil['IDHM'], \n    showlegend=False, visible=True\n)\n#Second plot\ntrace1 = go.Box(\n    x=df_brazil['STATE'],\n    y=df_brazil['IDHM_Renda'], \n    showlegend=False, visible=False\n)\n#Second plot\ntrace2 = go.Box(\n    x=df_brazil['STATE'],\n    y=df_brazil['IDHM_Longevidade'], \n    showlegend=False, visible=False\n)\n\n#Third plot\ntrace3 = go.Box(\n    x=df_brazil['STATE'],\n    y=df_brazil['IDHM_Educacao'], \n    showlegend=False, visible=False\n)\ndata = [trace0, trace1, trace2, trace3]\n\n\nupdatemenus = list([\n    dict(active=0,\n         x=-0.15,\n         buttons=list([  \n            dict(\n                label = 'IDHM Distribution by State',\n                 method = 'update',\n                 args = [{'visible': [True, False, False, False]}, \n                     {'title': 'IDH by State'}]),\n             \n             dict(\n                  label = 'IDHM Inc Distribution by State',\n                 method = 'update',\n                 args = [{'visible': [False, True, False, False]},\n                     {'title': 'IDH Income by State'}]),\n\n            dict(\n                 label = 'IDHM Long Distribution by State',\n                 method = 'update',\n                 args = [{'visible': [False, False, True, False]},\n                     {'title': 'IDH Longevity by State'}]),\n\n            dict(\n                 label =  'IDHM Educ Distribution by State',\n                 method = 'update',\n                 args = [{'visible': [False, False, False, True]},\n                     {'title': 'IDH Education by State'}])\n        ]),\n    )\n])\n\nlayout = dict(title='IDH METRICS by STATES (Select from Dropdown)', \n              showlegend=False,\n              updatemenus=updatemenus)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","349f25b4":"#fourth plot\ntrace4 = go.Box(\n    x=df_brazil['STATE'],\n    y=np.log(df_brazil[' GVA_TOTAL ']), name='GVA Total',\n    showlegend=False, visible=True\n)\n\n#First plot\ntrace0 = go.Box(\n    x=df_brazil['STATE'],\n    y=np.log(df_brazil['GVA_AGROPEC']+1), name='Agropec',\n    showlegend=False, visible=False\n)\n#Second plot\ntrace1 = go.Box(\n    x=df_brazil['STATE'],\n    y=np.log(df_brazil['GVA_INDUSTRY']+1), \n    showlegend=False, visible=False, name='Industry'\n)\n#Second plot\ntrace2 = go.Box(\n    x=df_brazil['STATE'],\n    y=np.log(df_brazil['GVA_SERVICES']+1), \n    showlegend=False, visible=False, name='Services'\n)\n\n#Third plot\ntrace3 = go.Box(\n    x=df_brazil['STATE'],\n    y=np.log(df_brazil['GVA_PUBLIC']+1), name='Public',\n    showlegend=False, visible=False\n)\n\ndata = [trace4, trace0, trace1, trace2, trace3, ]\n\n\nupdatemenus = list([\n    dict(active=0,\n         x=-0.15,\n         buttons=list([  \n            dict(\n                label = 'Total GVA',\n                 method = 'update',\n                 args = [{'visible': [True, False, False, False, False]}, \n                     {'title': 'TOTAL GROSS VALUE ADDED (GVA) by STATE'}]),\n             \n            dict(\n                label = 'Agropec GVA',\n                 method = 'update',\n                 args = [{'visible': [False, True, False, False, False]}, \n                     {'title': 'AGROPECUARY GROSS VALUE ADDED (GVA) by STATE'}]),\n             dict(\n                  label = 'Industry GVA',\n                 method = 'update',\n                 args = [{'visible': [False, False, True, False, False]},\n                     {'title': 'INDUSTRY GROSS VALUE ADDED (GVA) by STATE'}]),\n\n            dict(\n                 label = 'Service GVA',\n                 method = 'update',\n                 args = [{'visible': [False, False, False, True, False]},\n                     {'title': 'SERVICES GROSS VALUE ADDED (GVA) by STATE'}]),\n\n            dict(\n                 label =  'Public GVA',\n                 method = 'update',\n                 args = [{'visible': [False, False, False, False, True]},\n                     {'title': 'PUBLIC GROSS VALUE ADDED (GVA) by STATE'}])\n        ]),\n    )\n])\n\nlayout = dict(title='GVA VALUES by STATES (Select from Dropdown)', \n              showlegend=False,\n              updatemenus=updatemenus)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","4c52d8d1":"df_brazil.groupby('STATE')['REGIAO_TUR'].nunique().iplot(kind='bar', \n                                                         title='Total of Turistic Regions by State',\n                                                         xTitle='State Name', yTitle='Count')\npd.crosstab(df_brazil['STATE'], df_brazil['CATEGORIA_TUR'], normalize='index').iplot(kind='bar', \n                                                                                     barmode='stack', \n                                                                                     title='% OF TURISM CATEGORY BY STATE',\n                                                                                     xTitle='State Name', \n                                                                                     yTitle='% of Total')","68a274fa":"pop = ['IBGE_1', 'IBGE_1-4', 'IBGE_5-9', 'IBGE_10-14', 'IBGE_15-59', 'IBGE_60+']\nfor col in pop:\n    df_brazil[f'ratio_{col}'] = df_brazil[col] \/ df_brazil['IBGE_POP']","824b73b3":"# Selecting the new categories and grouping by state and geting mean\nage_ranges = ['STATE','ratio_IBGE_1-4', 'ratio_IBGE_5-9', \n              'ratio_IBGE_10-14', 'ratio_IBGE_15-59', 'ratio_IBGE_60+']\n\ndf_brazil[age_ranges].groupby('STATE').mean().iplot(kind='bar', barmode='stack', \n                                                    title='Mean of Age Ranges by State',\n                                                    xTitle='State Name', yTitle='Mean % of Total Population')","8539220e":"list(data_summary.Name)","40651c45":"Compaines = ['COMP_A', 'COMP_B', 'COMP_C', 'COMP_D', 'COMP_E', 'COMP_F',\n             'COMP_G', 'COMP_H', 'COMP_I', 'COMP_J', 'COMP_K', 'COMP_L', \n             'COMP_M', 'COMP_N', 'COMP_O', 'COMP_P', 'COMP_Q', 'COMP_R', \n             'COMP_S', 'COMP_T', 'COMP_U']\n\nfor col in Compaines:\n    df_brazil[f'%_{col}'] = df_brazil[col] \/ df_brazil['COMP_TOT']\n    \ncomp_ratio = ['%_COMP_A', '%_COMP_B', '%_COMP_C', '%_COMP_D', '%_COMP_E', \n              '%_COMP_F', '%_COMP_G', '%_COMP_H', '%_COMP_I', '%_COMP_J',\n              '%_COMP_K', '%_COMP_L', '%_COMP_M', '%_COMP_N', '%_COMP_O', \n              '%_COMP_P', '%_COMP_Q', '%_COMP_R', '%_COMP_S', '%_COMP_T',\n              '%_COMP_U','STATE']","eee19170":"df_brazil[comp_ratio].groupby('STATE').mean().iplot(kind='bar', barmode='stack', \n                                                    title='Mean of Age Ranges by State',\n                                                    xTitle='State Name', yTitle='Mean % of Total Population')","6f44ae3e":"pd.crosstab(df_brazil['STATE'], df_brazil['RURAL_URBAN'], normalize='index').iplot(kind='bar', \n                                                                                   barmode='stack',\n                                                                                   title='RURAL OR URBAN % DISTRIBUTION BY STATE',\n                                                                                   xTitle='State Names',\n                                                                                   yTitle='Percent of Total Cities')","2fdf985b":"## Resume of data with dictionary","9ed0967f":"## TURISM REGIONS COUNT AND % OF TURISM CATEGORY BY EACH STATE","49f45902":"Nice. \nWe can see that altough MG has 800 cities just 10% of total Population live in this State. <br>\nSP is the biggest city in Latin America and has 22% of total population of Brazil. \n\nSP, MG and RJ are the tree most populated cities in Brazil;","c55be32d":"## Importing dataset and dictionary","35600ae7":"## Objective:\nAs I was born and live in Brazil, I think that will be very intesresting to explore and try to find some insights abou my country.\n\nBrazil is a very pooverty country with one of the more highest level of inequality.\n\nI will try to find difference between regions like:\n- Are all regions with the same IDH ? \n- What is the distribution of the population by State ? \n- We can see a clear different patterns in Gross value added by each State?\n- The IDHM of Education, income, Longivity could be different the IDHM?\n- What's the states with more turistic regions and what is the category of this tour regions?\n- The distribution of GDP by State\n- What's the States with highest GDP per capta\n- And much more questions that will raise through the exploration","076e7b70":"## Rural or Urban percentual by States","af0a7324":"## Companies by State and by Company Type","fe2c2a5b":"Very cool. SP, MG and RS are the cities with more turism regions. <br>\nI don't finded what means each Turism Category, but we can infer based on the regions<br>\nAs DF is a \"special\" city, the unique turism regions is the own city. ","e4c480bb":"## Importing libraries","160369fc":"## Analysing IBGE - (Brazilian Institute for Geography and Statistics)","7509f921":"## Total Cities and % of Total Population by State","603a99db":"As we can see, in all states the predominant are \n- G that I think is Commerces, \n- D that is Electricity and gas, \n- P that is Education Companies\n","dc4eb6e3":"I will try to start analyzing the most basic things as total cities by state, what's the most populated states and other \"common\" analysis.<br> \nAs the data are not separed by regions, I will create this feature to be easily the resume the difference between the reigons","b45ebf1e":"## IDHM Distributions by Each State\nI will create a dropdown chart with all IDHM features by state, the options are: \n- IDHM\n- IDHM Income\n- IDHM Longevity\n- IDHM Education","a5b9ff19":"## I will set all functions that I will use in the below cell.\n- If you want see all code, click on \"Show Input\" or <b>Fork<\/b> this notebook;","f8748f63":"## NOTE: THIS KERNEL IS NOT FINISHED. IF YOU LIKED THE KERNEL, PLEASE VOTES UP =) ","4e172986":"## Exploring IBGE population total and by each Age Range","f907379e":"## Exploring Gross Value Added Total and by each Sector\n- As the important is understand the differences, before plot I will transform the GVA values in log values\n"}}