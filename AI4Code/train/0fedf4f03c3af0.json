{"cell_type":{"18f869f7":"code","7d95db73":"code","3803b0ab":"code","8de54d63":"code","7c88ac82":"code","c87d7f45":"code","b1ff7f1b":"code","c32a3372":"code","96f0fc16":"code","e44219ee":"code","871df5c3":"code","c9e81e18":"code","8f6614a8":"code","db392304":"code","a49587f3":"code","70eaadb4":"markdown","bf2520eb":"markdown","cd3d9892":"markdown","4bfc7bf5":"markdown","c8ac0e90":"markdown","789136fb":"markdown","3e335e82":"markdown","e3595576":"markdown"},"source":{"18f869f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.metrics import confusion_matrix\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","7d95db73":"DATA_DIR='..\/input\/horse-or-human\/horse-or-human'","3803b0ab":"os.listdir(f'{DATA_DIR}')","8de54d63":"torch.cuda.is_available()","7c88ac82":"data = ImageDataBunch.from_folder(DATA_DIR, \n                                  train=\"train\",\n                                  valid=\"validation\",\n                                  ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                  size=224,bs=10, \n                                  num_workers=0).normalize(imagenet_stats)","c87d7f45":"print(f'Classes: \\n {data.classes}')","b1ff7f1b":"data.show_batch(rows=3, figsize=(7,6))","c32a3372":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","96f0fc16":"learn.lr_find()\nlearn.recorder.plot()","e44219ee":"learn.fit_one_cycle(6,max_lr=slice(1e-6,1e-2 ))","871df5c3":"learn.save('stage-1')","c9e81e18":"learn.recorder.plot_losses()","8f6614a8":"interp = ClassificationInterpretation.from_learner(learn)","db392304":"interp.plot_top_losses(9, figsize=(15,11))","a49587f3":"interp.plot_confusion_matrix(figsize=(8,8), dpi=60)","70eaadb4":"## Please upvote if you like it ;)","bf2520eb":"# Make Data","cd3d9892":"## Please upvote if you like it ;)","4bfc7bf5":"# Model Build","c8ac0e90":"# Check Result","789136fb":"# Import Modules","3e335e82":"# Train","e3595576":"# Search LR"}}