{"cell_type":{"cef1d3b2":"code","1ba99c50":"code","58f17b02":"code","487bddba":"code","8adbe288":"code","d7925446":"code","ebd3e196":"code","6bac9f99":"code","b002ac5f":"code","c593043c":"code","5f00c950":"code","3cd0bb8a":"code","ae5bee18":"code","f0938b4f":"code","f6a53d29":"code","32ab0781":"code","9f866e9d":"code","69bd889f":"code","360cb016":"code","8d5fd25a":"code","6f8461cc":"code","8f92a638":"code","3de26d55":"code","880ce2fc":"code","7ee0bc59":"code","94c60da3":"code","b8534bb4":"code","02b57871":"code","7240c450":"code","bc4fd861":"code","388b374f":"code","91ca4cb9":"code","070d9e81":"code","589dfe19":"code","1d197334":"code","4546243f":"code","0d12e915":"code","a290723a":"code","ba3e506e":"code","5d69c1e9":"code","74c1aca2":"code","a26926cf":"code","d5e4149c":"code","af1fe87d":"code","ebb2c9cc":"code","f94b7940":"code","84e15692":"code","5a21a3d6":"code","3ccdf057":"code","0998830b":"code","38bcf4fe":"code","03b94446":"code","662c0cd1":"code","ffc90741":"code","ca1953ed":"code","141aba53":"code","d5311b5d":"code","005dd232":"code","2ff24d43":"code","86c4c500":"code","dec59401":"code","f7eee264":"code","c3d29c11":"code","0c7ad371":"code","b69584e1":"code","915011b3":"code","1ba0a75a":"code","06f41070":"code","b22d6590":"code","e824a27b":"code","5031d6da":"code","1e20030a":"code","b29650ac":"code","9d02d931":"code","59733176":"code","dbbce689":"code","7e65796b":"code","615b361f":"code","241693e5":"code","bc3da1c0":"code","bf46bf32":"code","12583a3b":"code","dca7f40c":"code","c6a0e71b":"code","cd1fd3cf":"code","a710c8d5":"code","ec86d0b6":"code","03940272":"code","6451a2cd":"code","a31d094b":"markdown","7e61fab9":"markdown","f72f430d":"markdown","a36e5bff":"markdown","34e74541":"markdown","f7bd7db1":"markdown","2f56c3c5":"markdown","e04c6c94":"markdown","5e432f2a":"markdown","4a01112e":"markdown","b972a1e5":"markdown","343f837a":"markdown"},"source":{"cef1d3b2":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1ba99c50":"import pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","58f17b02":"from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.neighbors import KNeighborsRegressor","487bddba":"audi_df = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/audi.csv')\naudi_df.shape","8adbe288":"audi_df.columns","d7925446":"audi_df.isna().sum()","ebd3e196":"audi_df.head()","6bac9f99":"audi_df['model'].value_counts()","b002ac5f":"audi_models = audi_df['model'].value_counts()\n\nothers = audi_models[audi_models < 100].keys()\n\nothers","c593043c":"audi_df['model'].replace(others,['Others' for i in range(len(others))], inplace=True)","5f00c950":"plt.figure(figsize=(10, 10))\nplt.style.use('fivethirtyeight')\naudi_df['model'].value_counts().plot(kind='barh')\nplt.title('Audi Models')\nplt.gca().invert_yaxis()\nplt.show()","3cd0bb8a":"plt.figure(figsize=(10, 10))\nplt.style.use('fivethirtyeight')\naudi_df['transmission'].value_counts().plot(kind='barh')\nplt.title('Transmission Types')\nplt.gca().invert_yaxis()\nplt.show()","ae5bee18":"audi_df['fuelType'].value_counts()","f0938b4f":"audi_df = audi_df[audi_df['fuelType'] != 'Hybrid']","f6a53d29":"audi_df.shape","32ab0781":"audi_df.sample(10)","9f866e9d":"audi_df[['price', 'mileage', 'tax', 'mpg', 'engineSize']].describe()","69bd889f":"audi_df['year'].unique()","360cb016":"audi_df['year'].value_counts()","8d5fd25a":"year_count = audi_df['year'].value_counts()\n\nyear_count[year_count<100].sum()","6f8461cc":"year_keys = year_count[year_count<100].keys()\nyear_keys","8f92a638":"audi_df['year'].replace(year_keys, ['before 2013' for i in range(len(year_keys))], inplace=True)","3de26d55":"plt.figure(figsize=(10, 10))\nplt.style.use('fivethirtyeight')\naudi_df['year'].value_counts().plot(kind='barh')\nplt.title('Year Frequency')\nplt.gca().invert_yaxis()\nplt.show()","880ce2fc":"years = audi_df['year'].value_counts().keys()","7ee0bc59":"year_ranks = [i\/10 for i in range(1,len(years)+1)]","94c60da3":"audi_df['year'].replace(years, year_ranks, inplace=True)\naudi_df['year'].value_counts()","b8534bb4":"audi_df.head()","02b57871":"cols_to_encode = ['model', 'fuelType','transmission']\ndf_dummies = pd.get_dummies(audi_df[cols_to_encode],drop_first=True)","7240c450":"cols_to_scale = ['mileage', 'tax', 'mpg', 'engineSize']\n\nscale = MinMaxScaler()\nscale.fit(audi_df[cols_to_scale])","bc4fd861":"scaled = scale.fit_transform(audi_df[cols_to_scale])\nscaled","388b374f":"\ni = 0\nfor col in cols_to_scale:\n    audi_df[col] = scaled[:,i]\n    i += 1","91ca4cb9":"scaled_cols = audi_df[cols_to_scale]","070d9e81":"df = pd.concat([df_dummies, scaled_cols, audi_df['year'],audi_df['price']], axis=1)","589dfe19":"new_df = df[df['year']!=0.9]","1d197334":"new_df.shape","4546243f":"x, y = new_df.drop('price', axis=1), new_df['price']","0d12e915":"x.shape, y.shape","a290723a":"x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.85,)","ba3e506e":"x_train.shape, x_test.shape","5d69c1e9":"y_train.shape, y_test.shape","74c1aca2":"model = LinearRegression()\nmodel.fit(x_train, y_train)","a26926cf":"model.score(x_test, y_test)","d5e4149c":"model.score(x_train, y_train)","af1fe87d":"min_mil = new_df['mileage'].quantile(0.05)\nmax_mil = new_df['mileage'].quantile(0.95)","ebb2c9cc":"min_tax = new_df['tax'].quantile(0.05)\nmax_tax = new_df['tax'].quantile(0.95)","f94b7940":"new_df2 = new_df[(new_df['mileage']>min_mil) & (new_df['mileage']<max_mil)]","84e15692":"new_df2.shape","5a21a3d6":"new_df2 = new_df[(new_df['tax']>min_tax) & (new_df['tax']<max_tax)]\nnew_df2.shape","3ccdf057":"new_df2.head()","0998830b":"x2, y2 = new_df2.drop(['price'], axis=1), new_df2['price']","38bcf4fe":"x2.shape, y2.shape","03b94446":"x_train2, x_test2, y_train2, y_test2 = train_test_split(x2, y2, train_size=0.85,)","662c0cd1":"x_train2.shape, x_test2.shape","ffc90741":"y_train2.shape, y_test2.shape","ca1953ed":"model2 = LinearRegression()\nmodel2.fit(x_train2, y_train2)","141aba53":"y_pred_test = model2.predict(x_test2)\ny_pred_train = model2.predict(x_train2)","d5311b5d":"mean_squared_error(y_test2, y_pred_test)","005dd232":"mean_squared_error(y_train2, y_pred_train)","2ff24d43":"model2.score(x_test2, y_test2)","86c4c500":"model2.score(x_train2, y_train2)","dec59401":"reg = cross_val_score(LinearRegression(), x2, y2, cv=10)\nreg","f7eee264":"rid = cross_val_score(Ridge(), x2, y2, cv=10)\nrid","c3d29c11":"las = cross_val_score(Lasso(), x2, y2, cv=10)\nlas","0c7ad371":"reg.mean(), rid.mean(), las.mean()","b69584e1":"svr = cross_val_score(SVR(kernel='linear'), x2, y2, cv=10)\nsvr","915011b3":"knr = cross_val_score(KNeighborsRegressor(), x2, y2, cv=10)\nknr","1ba0a75a":"knr = cross_val_score(KNeighborsRegressor(n_neighbors=11,weights='distance',metric='euclidean'), x2, y2, cv=10)\nknr","06f41070":"kmodel = KNeighborsRegressor(n_neighbors=11,weights='distance',metric='euclidean')\nkmodel.fit(x_train2, y_train2)","b22d6590":"kmodel.score(x_test2, y_test2)","e824a27b":"kmodel.score(x_train2, y_train2)","5031d6da":"y_pred_test = model.predict(x_test2)\ny_pred_train = model.predict(x_train2)","1e20030a":"test_y = pd.DataFrame({'Y test':y_test2,'Y Pred':y_pred_test})\ntrain_y = pd.DataFrame({'Y test':y_train2,'Y Pred':y_pred_train})\n","b29650ac":"train_y.head(10)","9d02d931":"grid = {\n     'n_neighbors':[5, 11, 19, 35, 57],\n     'weights':['distance','uniform'],\n     'metric':['manhattan','euclidean','minkowski']\n}\nclf = GridSearchCV(KNeighborsRegressor(),grid, cv=5)","59733176":"clf.fit(x_train2, y_train2)","dbbce689":"cv_result = pd.DataFrame(clf.cv_results_)\ncv_result","7e65796b":"cv_result[['param_metric', 'param_n_neighbors', 'params', 'mean_test_score', 'mean_test_score']]","615b361f":"clf.best_estimator_","241693e5":"kmodel = KNeighborsRegressor(n_neighbors=7, weights='distance',metric='manhattan')\nkmodel.fit(x_train2, y_train2)","bc3da1c0":"x_train2, x_test2, y_train2, y_test2 = train_test_split(x2, y2, train_size=0.50,)","bf46bf32":"kmodel.score(x_test2, y_test2)","12583a3b":"kmodel.score(x_train2, y_train2)","dca7f40c":"x_train2.shape","c6a0e71b":"x_test2.shape","cd1fd3cf":"y_pred_test = model.predict(x_test2)\ny_pred_train = model.predict(x_train2)\ntest_y = pd.DataFrame({'Y test':y_test2,'Y Pred':y_pred_test})\ntrain_y = pd.DataFrame({'Y test':y_train2,'Y Pred':y_pred_train})","a710c8d5":"test_y.sample(10)","ec86d0b6":"test_y.corr()","03940272":"train_y.sample(10)","6451a2cd":"train_y.corr()","a31d094b":"## **Hyper parameter tuning**","7e61fab9":"## One Hot encoding ","f72f430d":"### Dropping Hybrid fuel type because it is too less ","a36e5bff":"## As we can see  KNeighborsRegressor is giving more score","34e74541":"## Omg Score Reached 98 when splitted  data into 50%","f7bd7db1":"## Ranking the years ","2f56c3c5":"## Replacing years from 1997-2012 to before 2013","e04c6c94":"## Fuel Type ","5e432f2a":"## Feature Scaling  ","4a01112e":"## **Replacing  model to others which are < 100**","b972a1e5":"# **Cross val scores**","343f837a":"## Splitting and Training"}}