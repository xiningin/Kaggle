{"cell_type":{"80b5e81f":"code","30315bc1":"code","bbf987fc":"code","84b56a72":"code","7de10524":"code","7d7d0808":"code","7b581131":"code","408417da":"code","36958d2a":"code","e908d621":"code","8a993d7d":"code","954d170f":"code","81c0c514":"markdown","27f999bc":"markdown","d534f991":"markdown","4b48dab8":"markdown","bacc8827":"markdown","52154c21":"markdown","c14910c0":"markdown","20e92d55":"markdown"},"source":{"80b5e81f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as plt\nimport seaborn as sns\nsns.set(style=\"darkgrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","30315bc1":"battles = pd.read_csv('\/kaggle\/input\/game-of-thrones\/battles.csv');","bbf987fc":"battles.head()","84b56a72":"battles.info()","7de10524":"sns.relplot(y='attacker_size', x='defender_size', hue='attacker_outcome', style='attacker_outcome', data=battles);","7d7d0808":"sns.catplot(y='attacker_king', hue='attacker_outcome', kind='count', data=battles);","7b581131":"sns.catplot(y='region', hue='attacker_outcome', kind='count', data=battles);","408417da":"sns.catplot(y='attacker_king', hue='region', kind='count', data=battles);","36958d2a":"sns.catplot(y='attacker_1', hue='attacker_outcome', kind='count', data=battles);","e908d621":"sns.catplot(y='defender_1', hue='attacker_outcome', kind='count', data=battles);","8a993d7d":"sns.catplot(y='battle_type', hue='attacker_outcome', kind='count', data=battles);","954d170f":"sns.pairplot(battles, vars=['attacker_size', 'defender_size'], hue='attacker_outcome');","81c0c514":"**Number of battles won\/lost by main attackers (attacker_1).**","27f999bc":"**Attacking and defending armies size relation.**","d534f991":"**Number of battles won and lost per region.**","4b48dab8":"**Size Relation of attacking and defending armies with outcome.**","bacc8827":"**Number of battles lost\/won by main defenders. (defender_1)**\n\n*Note: the hue is attacker_outcome -> so wrt y-axis the outcome is inverted.*","52154c21":"**Number of different battle types won\/lost**","c14910c0":"**Number of battles fought per region by attacking kings**","20e92d55":"**Number of battles won and lost by an attacking kind**"}}