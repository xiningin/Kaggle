{"cell_type":{"9491759f":"code","26e7c8b3":"code","7fb5b21b":"code","1b4bfb21":"code","12d77f0d":"code","726be691":"code","fafb0280":"code","b8d6f258":"code","4b3c406a":"code","78dffeda":"code","f8a5cc30":"code","5fb7285a":"code","875923c3":"code","b223e313":"code","2191922f":"code","8a2d970d":"code","c802c8e9":"code","eb1edf41":"code","d86a2de3":"code","4dbfa370":"code","2415a08b":"code","b79512e7":"code","9d7c523a":"code","63af8efe":"code","0d7bde69":"code","00b057e1":"code","d75dd9d0":"code","04292337":"code","8ce49fff":"code","c9430610":"code","a1af29b1":"code","7a784959":"code","290ddc81":"code","18c7083d":"code","357aa1be":"code","23c76933":"code","3b493f41":"code","bf42790a":"code","3dcafb26":"code","f44fc63c":"code","624267e7":"code","3135829a":"code","ba7e97a1":"code","434c8b8a":"code","4b4698c4":"code","98f86fbc":"code","dd6d8052":"code","d9dbdb52":"code","243655a2":"code","98eb7aaf":"code","56b64520":"code","89334ff6":"code","bb27b996":"code","d39b38e5":"code","b9ef5962":"code","6602ccba":"code","94fc6238":"code","f5bdb424":"code","6fc5ce77":"code","8ad4016b":"code","3bbac292":"code","9b7bfcfd":"code","724bf9d5":"markdown","843c0af6":"markdown","7d85ae0c":"markdown","27660bd1":"markdown","c2e7828a":"markdown","111159b1":"markdown","2ccc6fd7":"markdown","963c5a8e":"markdown","32fdf099":"markdown","24e5bb0f":"markdown","b40d27be":"markdown","de8ab165":"markdown","69b2892f":"markdown","0fdf9d24":"markdown","ec77ef6a":"markdown","4e004746":"markdown","7a240ec2":"markdown","a3e5e5d6":"markdown","db2000c6":"markdown","71036a89":"markdown","3bd43b76":"markdown","3c80e3e5":"markdown","e3b14694":"markdown","fbfc3a76":"markdown","0840e6c6":"markdown","7e29ff7e":"markdown","c21e400e":"markdown","5002427f":"markdown","4889d2bf":"markdown","c65a52e9":"markdown","ed6fe84d":"markdown","f5ed5bb2":"markdown","b437d3e8":"markdown","93c270bd":"markdown","7617702a":"markdown","a4306e86":"markdown","06aa9879":"markdown","0c6c36ad":"markdown","7e1e9787":"markdown","0bafe8c5":"markdown","771b4911":"markdown","5c0e2622":"markdown","7bb8051c":"markdown","35e30310":"markdown","a17f9483":"markdown","6df708d7":"markdown","031b6151":"markdown","286babbc":"markdown","519160a9":"markdown","74aa0102":"markdown","274ad81e":"markdown","059f6721":"markdown","b50b8dc3":"markdown","e826d8aa":"markdown","22a7d4a7":"markdown","901df9fc":"markdown","dd454689":"markdown","8322a665":"markdown","de1159c9":"markdown","183466e6":"markdown","bee47fb0":"markdown","cee5d330":"markdown","a88b1b3d":"markdown","c40bfd0e":"markdown","3d5fd4ab":"markdown","d1640a2d":"markdown"},"source":{"9491759f":"import pandas as pd, numpy as np, seaborn as sns, matplotlib.pyplot as plt,itertools","26e7c8b3":"curr_app=pd.read_csv(\"..\/input\/bank-loans-dataset\/application_data.csv\")\nprev_app=pd.read_csv(\"..\/input\/bank-loans-dataset\/previous_application.csv\")","7fb5b21b":"print (\"Current Application     :\",curr_app.shape)\nprint (\"Previous Application    :\",prev_app.shape)","1b4bfb21":"pd.set_option('display.max_columns', 100)\ndisplay(\"Current Application\")\ndisplay(curr_app.head(3))\ndisplay(\"Previous Application\")\ndisplay(prev_app.head(3))","12d77f0d":"fig = plt.figure(figsize=(12,6))\nfig.set_facecolor(\"lightgrey\")\nmissing=pd.DataFrame((curr_app.isnull().sum())*100\/curr_app.shape[0]).reset_index()\nax = sns.pointplot(\"index\",0,data=missing)\nplt.xticks(rotation =90,fontsize =5)\nplt.title(\"Percentage of Missing values in current application\")\nplt.ylabel(\"PERCENTAGE\")\nplt.xlabel(\"COLUMNS\")\nax.set_facecolor(\"k\")","726be691":"curr_app[missing['index'][missing[0]>40]].shape","fafb0280":"curr_app=curr_app[missing['index'][missing[0]<40]]","b8d6f258":"curr_app.shape","4b3c406a":"missing[(missing[0]>1) & (missing[0]<40)]","78dffeda":"#Looking at credit bureau data which has missing data just above 13%:\n\nplt.figure(figsize=(15,10))\nplt.subplot(231)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_HOUR\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_HOUR\")\n\n\nplt.subplot(232)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_DAY\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_DAY\")\n\nplt.subplot(233)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_WEEK\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_WEEK\")\n\nplt.subplot(234)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_MON\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_MON\")\n\nplt.subplot(235)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_QRT\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_QRT\")\n\nplt.subplot(236)\ncurr_app[\"AMT_REQ_CREDIT_BUREAU_YEAR\"].value_counts().plot(kind=\"barh\")\nplt.title(\"AMT_REQ_CREDIT_BUREAU_YEAR\")\n\n\nplt.show()\n","f8a5cc30":"#In the above graphs, If we see the values distributions, 5 out of 6 columns can have null values filled with \n#respective Modes of the distribution which is 0.0. Lets fill those in!!\n\n\nfor i in curr_app.loc[:,'AMT_REQ_CREDIT_BUREAU_HOUR':'AMT_REQ_CREDIT_BUREAU_QRT'].columns:\n    curr_app[i].fillna(0,inplace=True)","5fb7285a":"#Lets check out the missing values across the data again!!\n\nfig = plt.figure(figsize=(15,10))\nfig.set_facecolor(\"lightgrey\")\nmissing=pd.DataFrame((curr_app.isnull().sum())*100\/curr_app.shape[0]).reset_index()\nax = sns.pointplot(\"index\",0,data=missing)\nplt.xticks(rotation =90,fontsize =5)\nplt.title(\"Percentage of Missing values in current application\")\nplt.ylabel(\"PERCENTAGE\")\nplt.xlabel(\"COLUMNS\")\nax.set_facecolor(\"k\")","875923c3":"curr_app.info(verbose=True)","b223e313":"curr_app.select_dtypes('object').apply(pd.Series.nunique, axis = 0)","2191922f":"curr_app.select_dtypes('int64').apply(pd.Series.nunique, axis = 0)","8a2d970d":"curr_app[['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH','DAYS_LAST_PHONE_CHANGE']].head(5)","c802c8e9":"for i in ['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH','DAYS_LAST_PHONE_CHANGE']:\n    curr_app[i]=abs(curr_app[i])\n\ncurr_app[['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH','DAYS_LAST_PHONE_CHANGE']].head(5)","eb1edf41":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app[curr_app['AMT_INCOME_TOTAL']<np.percentile(curr_app['AMT_INCOME_TOTAL'],99)]['AMT_INCOME_TOTAL'])\nplt.subplot(122)\nsns.distplot(curr_app[curr_app['AMT_INCOME_TOTAL']<np.percentile(curr_app['AMT_INCOME_TOTAL'],99)]['AMT_INCOME_TOTAL'])\nplt.show()","d86a2de3":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app['AMT_INCOME_TOTAL'])\nplt.subplot(122)\nsns.distplot(curr_app['AMT_INCOME_TOTAL'])\nplt.show()","4dbfa370":"curr_app[curr_app['AMT_INCOME_TOTAL']>np.percentile(curr_app['AMT_INCOME_TOTAL'],99)].shape","2415a08b":"np.percentile(curr_app['AMT_INCOME_TOTAL'],99)","b79512e7":"curr_app[curr_app['AMT_CREDIT'] > np.percentile(curr_app['AMT_CREDIT'],99)].shape","9d7c523a":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app[curr_app['AMT_ANNUITY']<58000]['AMT_ANNUITY'])\nplt.subplot(122)\nsns.distplot(curr_app[curr_app['AMT_ANNUITY']<58000]['AMT_ANNUITY'])\nplt.show()","63af8efe":"curr_app[curr_app['AMT_ANNUITY'] > 58000].shape","0d7bde69":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app[curr_app['AMT_GOODS_PRICE']<1300000]['AMT_GOODS_PRICE'])\nplt.subplot(122)\nsns.distplot(curr_app[curr_app['AMT_GOODS_PRICE']<1300000]['AMT_GOODS_PRICE'])\nplt.show()","00b057e1":"curr_app[curr_app['AMT_GOODS_PRICE']>1300000].shape","d75dd9d0":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app[curr_app['DAYS_EMPLOYED']<350000]['DAYS_EMPLOYED'])\nplt.subplot(122)\nsns.distplot(curr_app[curr_app['DAYS_EMPLOYED']<350000]['DAYS_EMPLOYED'])\nplt.show()","04292337":"curr_app[curr_app['DAYS_EMPLOYED']>365000].shape","8ce49fff":"plt.figure(figsize=(15,7))\n\nplt.subplot(121)\nsns.boxplot(curr_app['DAYS_EMPLOYED'])\nplt.subplot(122)\nsns.distplot(curr_app['DAYS_EMPLOYED'])\nplt.show()","c9430610":"#Lets check out Flag document columns according to the distribution percentages here \n\nplt.figure(figsize=(15,10))\n\nfor i in range(2,11):\n    plt.subplot(int(\"33\"+str(i-1)))\n    (100*curr_app[\"FLAG_DOCUMENT_\"+str(i)].value_counts(normalize=True)).plot(kind=\"barh\")\n    plt.title(\"FLAG_DOCUMENT_\"+str(i))","a1af29b1":"curr_app1=curr_app[curr_app['TARGET']==1]\ncurr_app0=curr_app[curr_app['TARGET']==0]","7a784959":"sns.heatmap(curr_app1[['AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE','DAYS_BIRTH','DAYS_EMPLOYED']].corr(),annot=True)","290ddc81":"corr=curr_app.corr()\ncorr=corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool))\ncorr_df=corr.abs().unstack().reset_index()\ncorr_df.columns=['var1','var2','correlation']\ncorr_df.correlation=round(corr_df.correlation*100,2)\ncorr_df.dropna(subset=['correlation'],inplace=True)\ncorr_df.sort_values('correlation',ascending=False).head(10)","18c7083d":"##Correlation of Repayers:\n\ncorr=curr_app0.corr()\ncorr=corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool))\ncorr_df=corr.abs().unstack().reset_index()\ncorr_df.columns=['var1','var2','correlation']\ncorr_df.correlation=round(corr_df.correlation*100,2)\ncorr_df.dropna(subset=['correlation'],inplace=True)\ncorr_df.sort_values('correlation',ascending=False).head(10)","357aa1be":"##Correlation of Defaulters:\n\ncorr=curr_app1.corr()\ncorr=corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool))\ncorr_df=corr.abs().unstack().reset_index()\ncorr_df.columns=['var1','var2','correlation']\ncorr_df.correlation=round(corr_df.correlation*100,2)\ncorr_df.dropna(subset=['correlation'],inplace=True)\ncorr_df.sort_values('correlation',ascending=False).head(10)","23c76933":"plt.figure(figsize=(14,7))\nplt.subplot(121)\ncurr_app[\"TARGET\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\",7),startangle = 60,labels=[\"repayer\",\"defaulter\"],\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.1,0],shadow =True)\nplt.title(\"Distribution of target variable\")\n\nplt.subplot(122)\nax = curr_app[\"TARGET\"].value_counts().plot(kind=\"barh\")\n\nfor i,j in enumerate(curr_app[\"TARGET\"].value_counts().values):\n    ax.text(.7,i,j,weight = \"bold\",fontsize=20)\n\nplt.title(\"Count of target variable\")\nplt.show()\n\n#TARGET :Target variable (1 - client with payment difficulties: he\/she had late payment more than X days on at least one of the first Y installments of the loan in sample, 0 - all other cases)\n#8% out of total client population have difficulties in repaying loans.\n","3b493f41":"cols = [ 'AMT_INCOME_TOTAL','AMT_INCOME_TOTAL', 'AMT_CREDIT','AMT_CREDIT','AMT_ANNUITY', 'AMT_ANNUITY','AMT_GOODS_PRICE','AMT_GOODS_PRICE']\nlength = len(cols)\ncs = [\"r\",\"b\",\"g\",\"k\"]\n\nax = plt.figure(figsize=(15,30))\nax.set_facecolor(\"lightgrey\")\ncount=1\nfor i in cols:\n    plt.subplot(4,2,count)\n    if count%2==1:\n        sns.distplot(curr_app1[curr_app1[i].notnull()][i],color='r')\n        plt.axvline(curr_app1[i].mean(),label = \"mean\",linestyle=\"dashed\",color='k')\n        plt.title(i+ \"for customers who have defaulted\")\n    else:\n        sns.distplot(curr_app0[curr_app0[i].notnull()][i],color='b')\n        plt.axvline(curr_app0[i].mean(),label = \"mean\",linestyle=\"dashed\",color='k')\n        plt.title(i + \"for customers who have not defaulted\")\n    count+=1\n    plt.legend(loc=\"best\")\n    plt.subplots_adjust(hspace = .2)\n\n    ","bf42790a":"cols = [ 'AMT_INCOME_TOTAL']\n\ndf = curr_app.groupby(\"TARGET\")[cols].describe().transpose().reset_index()\ndf = df[df[\"level_1\"].isin([ 'mean', 'std', 'min', 'max'])] \ndf_x = df[[\"level_0\",\"level_1\",0]]\ndf_y = df[[\"level_0\",\"level_1\",1]]\ndf_x = df_x.rename(columns={'level_0':\"amount_type\", 'level_1':\"statistic\", 0:\"amount\"})\ndf_x[\"type\"] = \"REPAYER\"\ndf_y = df_y.rename(columns={'level_0':\"amount_type\", 'level_1':\"statistic\", 1:\"amount\"})\ndf_y[\"type\"] = \"DEFAULTER\"\ndf_new = pd.concat([df_x,df_y],axis = 0)\n\nstat = df_new[\"statistic\"].unique().tolist()\nlength = len(stat)\n\nplt.figure(figsize=(10,10))\n\nfor i,j in itertools.zip_longest(stat,range(length)):\n    plt.subplot(2,2,j+1)\n    fig = sns.barplot(df_new[df_new[\"statistic\"] == i][\"amount_type\"],df_new[df_new[\"statistic\"] == i][\"amount\"],\n                hue=df_new[df_new[\"statistic\"] == i][\"type\"],palette=[\"g\",\"r\"])\n    plt.title(i + \"--Defaulters vs Non defaulters\")\n   \n    fig.set_facecolor(\"lightgrey\")","3dcafb26":"fig = plt.figure(figsize=(13,15))\n\nplt.subplot(221)\nsns.boxplot(abs(curr_app0[\"REGION_POPULATION_RELATIVE\"]),color =\"b\")\nplt.title(\"REGION_POPULATION_RELATIVE Distribution of repayers\")\n\nplt.subplot(222)\nsns.boxplot(abs(curr_app1[\"REGION_POPULATION_RELATIVE\"]),color=\"r\")\nplt.title(\"REGION_POPULATION_RELATIVE Distribution of defaulters\")","f44fc63c":"fig = plt.figure(figsize=(13,13))\n\nplt.subplot(221)\nsns.distplot(curr_app0[\"DAYS_BIRTH\"],color=\"b\")\nplt.title(\"Age Distribution of repayers\")\n\nplt.subplot(222)\nsns.distplot(curr_app1[\"DAYS_BIRTH\"],color=\"r\")\nplt.title(\"Age Distribution of defaulters\")","624267e7":"cols = ['AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_DAY',\n       'AMT_REQ_CREDIT_BUREAU_WEEK', 'AMT_REQ_CREDIT_BUREAU_MON',\n       'AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR']\ncurr_app.groupby(\"TARGET\")[cols].max().transpose().plot(kind=\"barh\",\n                                                                 figsize=(10,5),width=.8)\nplt.title(\"Maximum enquries made by defaulters and repayers\")\ncurr_app.groupby(\"TARGET\")[cols].mean().transpose().plot(kind=\"barh\",\n                                                                  figsize=(10,5),width=.8)\nplt.title(\"average enquries made by defaulters and repayers\")\ncurr_app.groupby(\"TARGET\")[cols].std().transpose().plot(kind=\"barh\",\n                                                                 figsize=(10,5),width=.8)\nplt.title(\"standard deviation in enquries made by defaulters and repayers\")\nplt.show()\n","3135829a":"d_cols = ['NAME_CONTRACT_TYPE', 'CODE_GENDER','FLAG_OWN_CAR', 'FLAG_OWN_REALTY']\nd_length = len(d_cols)\n\nfig = plt.figure(figsize=(16,4))\nfor i,j in itertools.zip_longest(d_cols,range(d_length)):\n    plt.subplot(1,4,j+1)\n    curr_app1[i].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\"),startangle = 90,\n                                        wedgeprops={\"linewidth\":1,\"edgecolor\":\"white\"},shadow =True)\n    circ = plt.Circle((0,0),.7,color=\"white\")\n    plt.gca().add_artist(circ)\n    plt.ylabel(\"\")\n    plt.title(i+\"-Defaulter\")\n\n\nfig = plt.figure(figsize=(16,4))\nfor i,j in itertools.zip_longest(d_cols,range(d_length)):\n    plt.subplot(1,4,j+1)\n    curr_app0[i].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\",3),startangle = 90,\n                                           wedgeprops={\"linewidth\":1,\"edgecolor\":\"white\"},shadow =True)\n    circ = plt.Circle((0,0),.7,color=\"white\")\n    plt.gca().add_artist(circ)\n    plt.ylabel(\"\")\n    plt.title(i+\"-Repayer\")","ba7e97a1":"plt.figure(figsize=(15,10))\nplt.subplot(121)\ncurr_app0[\"NAME_EDUCATION_TYPE\"].value_counts().plot.pie(fontsize=9,autopct = \"%1.0f%%\",colors = sns.color_palette(\"Set1\"),\nwedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"Distribution of Education type for Repayers\",color=\"b\")\n\nplt.subplot(122)\ncurr_app1[\"NAME_EDUCATION_TYPE\"].value_counts().plot.pie(fontsize=9,autopct = \"%1.0f%%\",\n                                                                                                 colors = sns.color_palette(\"Set1\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"Distribution of Education type for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\nplt.show()","434c8b8a":"fig = plt.figure(figsize=(7,6))\nocc = curr_app0[\"OCCUPATION_TYPE\"].value_counts().reset_index()\nocc = occ.sort_values(by = \"index\",ascending=True)\nocc1 = curr_app1[\"OCCUPATION_TYPE\"].value_counts().reset_index()\nocc1 = occ1.sort_values(by = \"index\",ascending=True)\nocc[\"percentage\"]  = (occ[\"OCCUPATION_TYPE\"]*100\/occ[\"OCCUPATION_TYPE\"].sum())\nocc1[\"percentage\"] = (occ1[\"OCCUPATION_TYPE\"]*100\/occ1[\"OCCUPATION_TYPE\"].sum())\nocc[\"type\"]        = \"Repayers\"\nocc1[\"type\"]       = \"defaulters\"\noccupation = pd.concat([occ,occ1],axis=0)\n\nax = sns.barplot(\"index\",\"percentage\",data=occupation,hue=\"type\",palette=[\"b\",\"r\"])\nplt.xticks(rotation = 70)\nplt.xlabel(\"occupation\")\nax.set_facecolor(\"k\")\nfig.set_facecolor(\"ghostwhite\")\nplt.title(\"Occupation percentage in data with respect to repayment status\")\nplt.show()","4b4698c4":"org = curr_app.groupby(\"TARGET\").agg({\"ORGANIZATION_TYPE\":\"value_counts\"})\norg = org.rename(columns = {\"ORGANIZATION_TYPE\":\"value_counts\"}).reset_index()\norg_0 = org[org[\"TARGET\"] == 0]\norg_1 = org[org[\"TARGET\"] == 1]\norg_0[\"percentage\"] = org_0[\"value_counts\"]*100\/org_0[\"value_counts\"].sum()\norg_1[\"percentage\"] = org_1[\"value_counts\"]*100\/org_1[\"value_counts\"].sum()\n\norganization = pd.concat([org_0,org_1],axis=0)\norganization = organization.sort_values(by=\"ORGANIZATION_TYPE\",ascending=True)\n\norganization[\"TARGET\"] = organization[\"TARGET\"].replace({0:\"repayers\",1:\"defaulters\"})\n\norganization\nplt.figure(figsize=(13,7))\nax = sns.pointplot(\"ORGANIZATION_TYPE\",\"percentage\",\n                   data=organization,hue=\"TARGET\",palette=[\"b\",\"r\"])\nplt.xticks(rotation=90)\nplt.grid(True,alpha=.3)\nax.set_facecolor(\"k\")\nax.set_title(\"Distribution in organization types for repayers and defaulters\")\nplt.show()","98f86fbc":"fig = plt.figure(figsize=(8,6))\nplt.scatter(curr_app0['AMT_ANNUITY'],curr_app0['AMT_CREDIT'],s=35,\n            color=\"b\",alpha=.5,label=\"REPAYER\",linewidth=.5,edgecolor=\"k\")\nplt.scatter(curr_app1['AMT_ANNUITY'],curr_app1['AMT_CREDIT'],s=35,\n            color=\"r\",alpha=.2,label=\"DEFAULTER\",linewidth=.5,edgecolor=\"k\")\nplt.legend(loc=\"best\",prop={\"size\":15})\nplt.xlabel(\"AMT_ANNUITY\")\nplt.ylabel(\"AMT_CREDIT\")\nplt.title(\"Scatter plot between credit amount and annuity amount\")\nplt.show()","dd6d8052":"fig = plt.figure(figsize=(7,7))\namt = curr_app[[ 'AMT_INCOME_TOTAL','AMT_CREDIT',\n                         'AMT_ANNUITY', 'AMT_GOODS_PRICE',\"TARGET\"]]\namt = amt[(amt[\"AMT_GOODS_PRICE\"].notnull()) & (amt[\"AMT_ANNUITY\"].notnull())]\nsns.pairplot(amt,hue=\"TARGET\",palette=[\"b\",\"r\"])\nplt.show()","d9dbdb52":"cols = [ 'AMT_INCOME_TOTAL', 'AMT_CREDIT','AMT_ANNUITY', 'AMT_GOODS_PRICE']\n\n\n\nplt.figure(figsize=(15,5))\nplt.subplot(121)\ndf1 = curr_app0.groupby(\"CODE_GENDER\")[cols].mean().transpose().reset_index()\n\ndf_f   = df1[[\"index\",\"F\"]]\ndf_f   = df_f.rename(columns={'index':\"amt_type\", 'F':\"amount\"})\ndf_f[\"gender\"] = \"FEMALE\"\ndf_m   = df1[[\"index\",\"M\"]]\ndf_m   = df_m.rename(columns={'index':\"amt_type\", 'M':\"amount\"})\ndf_m[\"gender\"] = \"MALE\"\ndf_xna = df1[[\"index\",\"XNA\"]]\ndf_xna = df_xna.rename(columns={'index':\"amt_type\", 'XNA':\"amount\"})\ndf_xna[\"gender\"] = \"XNA\"\n\ndf_gen = pd.concat([df_m,df_f,df_xna],axis=0)\nax = sns.barplot(\"amt_type\",\"amount\",data=df_gen,hue=\"gender\",palette=\"Set1\")\nplt.title(\"Average Income,credit,annuity & goods_price by gender in Repayers\")\n\nplt.subplot(122)\ndf1 = curr_app1.groupby(\"CODE_GENDER\")[cols].mean().transpose().reset_index()\n\ndf_f   = df1[[\"index\",\"F\"]]\ndf_f   = df_f.rename(columns={'index':\"amt_type\", 'F':\"amount\"})\ndf_f[\"gender\"] = \"FEMALE\"\ndf_m   = df1[[\"index\",\"M\"]]\ndf_m   = df_m.rename(columns={'index':\"amt_type\", 'M':\"amount\"})\ndf_m[\"gender\"] = \"MALE\"\n\n\ndf_gen = pd.concat([df_m,df_f,df_xna],axis=0)\nax = sns.barplot(\"amt_type\",\"amount\",data=df_gen,hue=\"gender\",palette=\"Set1\")\nplt.title(\"Average Income,credit,annuity & goods_price by gender In Defaulters\")\nplt.show() ","243655a2":"plt.figure(figsize=(15,10))\nplt.subplot(211)\nedu = curr_app1.groupby(['NAME_EDUCATION_TYPE','NAME_INCOME_TYPE'])['AMT_INCOME_TOTAL'].mean().reset_index()\nax = sns.barplot('NAME_INCOME_TYPE','AMT_INCOME_TOTAL',data=edu,hue='NAME_EDUCATION_TYPE')\nax.set_facecolor(\"k\")\nplt.title(\" Average Earnings by different professions and education types for defaulters \")\n\nplt.subplot(212)\nedu = curr_app0.groupby(['NAME_EDUCATION_TYPE','NAME_INCOME_TYPE'])['AMT_INCOME_TOTAL'].mean().reset_index()\nax = sns.barplot('NAME_INCOME_TYPE','AMT_INCOME_TOTAL',data=edu,hue='NAME_EDUCATION_TYPE')\nax.set_facecolor(\"k\")\nplt.title(\" Average Earnings by different professions and education types for repayers\")\n\nplt.show()","98eb7aaf":"plt.figure(figsize=(12,7))\nplt.subplot(121)\nsns.countplot(y=curr_app0[\"NAME_INCOME_TYPE\"],\n              hue=curr_app0[\"CODE_GENDER\"],\n              palette=\"Set2\",\n              order=curr_app0[\"NAME_INCOME_TYPE\"].value_counts().index[:4])\nplt.title(\"Distribution of client income type by gender for repayers\")\n\nplt.subplot(122)\nsns.countplot(y=curr_app1[\"NAME_INCOME_TYPE\"],\n              hue=curr_app1[\"CODE_GENDER\"],\n              palette=\"Set2\",\n              order=curr_app1[\"NAME_INCOME_TYPE\"].value_counts().index[:4])\nplt.ylabel(\"\")\nplt.title(\"Distribution of client income  type by gender for defaulters\")\nplt.subplots_adjust(wspace = .4)","56b64520":"plt.figure(figsize=(12,7))\nplt.subplot(121)\nsns.countplot(y=curr_app0[\"NAME_TYPE_SUITE\"],\n              hue=curr_app0[\"CODE_GENDER\"],palette=\"Set2\",\n              order=curr_app0[\"NAME_TYPE_SUITE\"].value_counts().index[:5])\nplt.title(\"Distribution of NAME_TYPE_SUITE by gender for repayers\")\n\nplt.subplot(122)\nsns.countplot(y=curr_app1[\"NAME_TYPE_SUITE\"],\n              hue=curr_app1[\"CODE_GENDER\"],palette=\"Set2\",\n              order=curr_app1[\"NAME_TYPE_SUITE\"].value_counts().index[:5])\nplt.ylabel(\"\")\nplt.title(\"Distribution of NAME_TYPE_SUITE by gender for defaulters\")\nplt.subplots_adjust(wspace = .4)","89334ff6":"curr_app.shape","bb27b996":"prev_app.shape","d39b38e5":"all_applications=pd.merge(curr_app,prev_app,how='inner',on='SK_ID_CURR')","b9ef5962":"all_applications.shape","6602ccba":"all_applications.head(3)","94fc6238":"plt.figure(figsize=(12,7))\n\nplt.subplot(121)\nsns.countplot(all_applications[all_applications['TARGET']==1].NAME_CONTRACT_STATUS)\nplt.xlabel(\"Contract Status\")\nplt.ylabel(\"Count of Contract Status\")\nplt.title(\"Distribution of Contract Status for defaulters\")\n\nplt.subplot(122)\nsns.countplot(all_applications[all_applications['TARGET']==0].NAME_CONTRACT_STATUS)\nplt.xlabel(\"Contract Status\")\nplt.ylabel(\"Count of Contract Status\")\nplt.title(\"Distribution of Contract Status for Repayers\")\nplt.show()","f5bdb424":"def plot_3charts(var, label_rotation,horizontal_layout):\n    if(horizontal_layout):\n        fig, (ax1, ax2, ax3) = plt.subplots(ncols=3, figsize=(10,5))\n    else:\n        fig, (ax1, ax2, ax3) = plt.subplots(nrows=3, figsize=(10,5))\n    \n    s1=sns.countplot(ax=ax1,x=refused[var], data=refused, order= refused[var].value_counts().index,)\n    ax1.set_title(\"Refused\", fontsize=10)\n    ax1.set_xlabel('%s' %var)\n    ax1.set_ylabel(\"Count of Loans\")\n    if(label_rotation):\n        s1.set_xticklabels(s1.get_xticklabels(),rotation=90)\n    \n    s2=sns.countplot(ax=ax2,x=approved[var], data=approved, order= approved[var].value_counts().index,)\n    if(label_rotation):\n        s2.set_xticklabels(s2.get_xticklabels(),rotation=90)\n    ax2.set_xlabel('%s' %var)\n    ax2.set_ylabel(\"Count of Loans\")\n    ax2.set_title(\"Approved\", fontsize=10)\n    \n    \n    s3=sns.countplot(ax=ax3,x=canceled[var], data=canceled, order= canceled[var].value_counts().index,)\n    ax3.set_title(\"Canceled\", fontsize=10)\n    ax3.set_xlabel('%s' %var)\n    ax3.set_ylabel(\"Count of Loans\")\n    if(label_rotation):\n        s3.set_xticklabels(s3.get_xticklabels(),rotation=90)\n    plt.show()","6fc5ce77":"approved=all_applications[all_applications.NAME_CONTRACT_STATUS=='Approved']\nrefused=all_applications[all_applications.NAME_CONTRACT_STATUS=='Refused']\ncanceled=all_applications[all_applications.NAME_CONTRACT_STATUS=='Canceled']\nunused=all_applications[all_applications.NAME_CONTRACT_STATUS=='Unused Offer']","8ad4016b":"plot_3charts('PRODUCT_COMBINATION', label_rotation=True,horizontal_layout=True)","3bbac292":"prev_app","9b7bfcfd":"plt.figure(figsize=(15,10))\nplt.subplot(211)\nedu = all_applications[all_applications['TARGET']==1].groupby(['NAME_CONTRACT_TYPE_x','NAME_CONTRACT_STATUS'])['AMT_INCOME_TOTAL'].mean().reset_index()\nax = sns.barplot('NAME_CONTRACT_STATUS','AMT_INCOME_TOTAL',data=edu,hue='NAME_CONTRACT_TYPE_x')\nax.set_facecolor(\"k\")\nplt.title(\" Average Earnings by different contract types and statuses for defaulters \")\n\nplt.subplot(212)\nedu = all_applications[all_applications['TARGET']==0].groupby(['NAME_CONTRACT_TYPE_x','NAME_CONTRACT_STATUS'])['AMT_INCOME_TOTAL'].mean().reset_index()\nax = sns.barplot('NAME_CONTRACT_STATUS','AMT_INCOME_TOTAL',data=edu,hue='NAME_CONTRACT_TYPE_x')\nax.set_facecolor(\"k\")\nplt.title(\" Average Earnings by different contract types and statuses for repayers\")\n\nplt.show()","724bf9d5":"#### Distribution of Annuity amount and Credit amount across Target column ","843c0af6":"###### AMT_INCOME_TOTAL","7d85ae0c":"## Data Merge with Previous applications from Customer","27660bd1":"## Check Imbalance percentage. No Balancing Technique required.","c2e7828a":"## Data before Processing","111159b1":"## Univariate analysis on Continous variables","2ccc6fd7":"### Authors: Sunanda Mahanta, Sourabh Pattanshetty","963c5a8e":"## Relation Between the files","32fdf099":"Looking at the column names we can see that few of the columns are categories yet are represented as object or integers!!","24e5bb0f":"Column \"NAME_EDUCATION_TYPE\" represents Level of highest education the client achieved. AS we see from above graphs, Clients who default have proportionally 9% less higher education compared to clients who do not default.","b40d27be":"As we can see from the above data, There are around 3014 rows that hugely deviate from the main chunk of data. which is apparently 99th percentile of the data","de8ab165":"###### Business Understanding\nThe loan providing companies find it hard to give loans to the people due to their insufficient or non-existent credit history. Because of that, some consumers use it as their advantage by becoming a defaulter. Suppose you work for a consumer finance company which specialises in lending various types of loans to urban customers. You have to use EDA to analyse the patterns present in the data. This will ensure that the applicants capable of repaying the loan are not rejected.\n\n \n\nWhen the company receives a loan application, the company has to decide for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n\nIf the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company\n\nIf the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company.\n\n \n\nThe data given below contains the information about the loan application at the time of applying for the loan. It contains two types of scenarios:\n\nThe client with payment difficulties: he\/she had late payment more than X days on at least one of the first Y instalments of the loan in our sample,\n\nAll other cases: All other cases when the payment is paid on time.\n\n \n\n \n\nWhen a client applies for a loan, there are four types of decisions that could be taken by the client\/company):\n\nApproved: The Company has approved loan Application\n\nCancelled: The client cancelled the application sometime during approval. Either the client changed her\/his mind about the loan or in some cases due to a higher risk of the client he received worse pricing which he did not want.\n\nRefused: The company had rejected the loan (because the client does not meet their requirements etc.).\n\nUnused offer:  Loan has been cancelled by the client but on different stages of the process.\n\nIn this case study, you will use EDA to understand how consumer attributes and loan attributes influence the tendency of default.\n\n \n\n \n\nBusiness Objectives\nThis case study aims to identify patterns which indicate if a client has difficulty paying their installments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\n \n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.","69b2892f":"#### Distribution of client income  type by gender for defaulters","0fdf9d24":"In column of Income of client,\n1 . average income of clients who default and who do not are almost same.\n2 . standard deviation in income of client who default is very high compared to who do not default.\n3 . clients who default also has maximum income earnings\n\nIn columns of Credit amount of the loan ,Loan annuity,Amount goods price,\n1 .statistics between credit amounts,Loan annuity and Amount goods price given to cilents who default and who dont are almost similar.","ec77ef6a":"We are not able to observe much from the above graphs. Hence lets check their statistics comparison below","4e004746":"## Missing Values Analysis for Current Application Details","7a240ec2":"## Bivariate Analysis of 2 Continous variables\n","a3e5e5d6":"###### Fixing columns with null percentage values between 1 to 40","db2000c6":"#### Distribution normalized population of region where client lives by loan repayment status","71036a89":"#### Distribution of Occupation Type Across Target variable","3bd43b76":"###### Converting Negative values in some columns to positives","3c80e3e5":"##### AMT_CREDIT","e3b14694":"#### Pair Plot between amount columns and Target column","fbfc3a76":"#### Dropping all Columns that have missing Data more than 40%","0840e6c6":"## Univariate analysis of Categorical Variables","7e29ff7e":"### Dividing the dataset into 2 smaller datasets based on values of Target column \n1- The client with payment difficulties or Defaulters \n0- All other cases or Repayers","c21e400e":"There are 3 columns which have significantly higher values\n1. Occupation Type\n2. EX_SOURCE_3\n3. AMT_REQ_CREDIT_BUREAU_YEAR\n\nSince these columns are important for our analysis and the data seems to be distributed well, We wont be able to impute any values!! If this was data from industry, We would have gone back to application team or concerned team that gave us data to find the reason behind missing values!!","5002427f":"#### Average Earnings by different professions and education types for defaulters","4889d2bf":"#### Comparison of Different amounts in the dataset across Target variable","c65a52e9":"# Credit EDA Case Study","ed6fe84d":"## Bivariate Analysis of 2 categorical Variables across Target Variable","f5ed5bb2":"##### AMT_ANNUITY","b437d3e8":"Percentage of males is 10% more in defaults than non defaulters.","93c270bd":"###### Converting columns to categories for better analysis","7617702a":"#### Distribution of Education Type Across Target variable","a4306e86":"##### AMT_GOODS_PRICE","06aa9879":"The days employed columns has some interesting values that are not possible in real life scenario. Like some people have days employed greater than 365000 which is like 100 years. Hence all of such values are mostly incorrect and can be considered outliers. ","0c6c36ad":"In High population density regions people are less likely to default on loans.","7e1e9787":"### Outlier Detection and analysis","0bafe8c5":"As we can see from the above data, There are around 3014 rows that hugely deviate from the main chunk of data. which is apparently 99th percentile of the data","771b4911":"Can we compare the correlations of columns of our defaulter as well as repayer Datasets? Yes!! We can!! Below are the results!","5c0e2622":"#### Distribution of target variable","7bb8051c":"###### SK_ID_CURR","35e30310":"Let us check out few amount columns and days columns for the correlation between them using Heatmap","a17f9483":"As we can see from the above data, There are around 15829 rows that deviate from the main chunk of data. which is apparently 95th percentile of the data.","6df708d7":"## Data Dimentions","031b6151":"TARGET :Target variable (1 - client with payment difficulties: he\/she had late payment more than X days on at least one of the first Y installments of the loan in sample, 0 - all other cases)\n8% out of total client population have difficulties in repaying loans.\n","286babbc":"#### Distribution of Occupation Type Across Target variable","519160a9":"## Importing Data","74aa0102":"###### Data types of the columns and Converting them into appropriate data types","274ad81e":"Lets convert them into positives!!","059f6721":"#### Distribution of Amount variables across Gender and Target variables","b50b8dc3":"##### DAYS_EMPLOYED","e826d8aa":"As we can from above heat map, few columns have very high correlation while others have very low. Some also have negative correlation. To find out correlation between all columns as such using heatmap is a messy task. Lets code to get top 10 correlations and sort them with higher correlations first","22a7d4a7":"Looking at content of few columns with respect to age, Such columns are often into negative values!! \n","901df9fc":"#### Credit bureau Columns across Target variable values","dd454689":"### Finding out Correlation of various columns","8322a665":"Notice that a lot of columns with \"int\" or \"object\" as datatype has very less unique values. These are either flags or Flag type varibles which have only 2 categories and can be converted to Yes\/No values for categorical analysis or signify more 3 categorical values ","de1159c9":"## Bivariate Analysis of Continous Variables across Categorical variables\n","183466e6":"occupations like Cleaning staff ,Cooking staff, Drivers ,Laborers , Low-skill Laborers ,Sales staff ,Security staff are more likely to default in loans.","bee47fb0":"As we can see from above two Top 10 correlation tables, We find that correlations of both new formed datasets are similar in nature!! Let us start with analysis of individual columns!! ","cee5d330":"#### Age Distribution across Target variables","a88b1b3d":"organizations like Business Entity Type 3,Construction,Self-employed percentage of defaulters are higher than repayers.","c40bfd0e":"## Importing Libraries ","3d5fd4ab":"As we can see from the above data, There are around 9600 rows that deviate from the main chunk of data. which is apparently 97th percentile of the data.","d1640a2d":"In above graphs, average clients age is comparatively less in non repayers than repayers in every aspect and younger people tend to default more than elder people."}}