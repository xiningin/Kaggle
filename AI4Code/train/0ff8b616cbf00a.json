{"cell_type":{"aadc4223":"code","08a22c1a":"code","c777e870":"code","247b42a8":"code","a7c66660":"code","f568f548":"code","c874a7a7":"code","22080b87":"code","c757dd60":"code","283ccaeb":"code","80c752e5":"code","7050a93e":"code","287f11d1":"code","baf47b91":"code","8448c512":"code","b3769468":"code","68b23a1b":"code","53485e1e":"code","d17a4fb9":"code","e7be5f5b":"code","d916d59d":"code","0f47d58d":"code","116c3c67":"code","db52fffc":"code","fc5ebeb0":"code","7f5fe605":"code","9adf0e9b":"code","e216143c":"code","dda44353":"code","1b97834a":"code","6207fa21":"code","c731c670":"code","6ce7e97c":"code","9baa70f8":"code","233d0cfa":"code","b153ca8c":"code","e2ffd7dc":"code","61d4fa95":"code","9d278225":"code","4c6396a5":"markdown","9a199b4e":"markdown","6542d547":"markdown","ed2ce060":"markdown","6c837962":"markdown","2a33d01d":"markdown","5445f54c":"markdown","a4a97b6b":"markdown","d31dcfe5":"markdown","baa0573e":"markdown","c553a8b5":"markdown","ddb723ac":"markdown","d93ef1bf":"markdown","1aadfcf1":"markdown","4c1e0075":"markdown","fc792c69":"markdown","e2360892":"markdown","99ff1cbe":"markdown","948eb397":"markdown"},"source":{"aadc4223":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')  # with --> plt.style.available  --> you can see all available functions\n\nimport seaborn as sns\n\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n\nfrom collections import Counter\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","08a22c1a":"df = pd.read_csv(\"\/kaggle\/input\/titanicdataset-traincsv\/train.csv\")","c777e870":"df.columns","247b42a8":"df.head()","a7c66660":"df.describe()","f568f548":"df.info()","c874a7a7":"def bar_plot(variable):\n    \"\"\"\n        Input : variable ex : \"Survived\"\n        Output : bar plot & value count\n    \"\"\"\n    \n    #get feature\n    var = df[variable]\n    \n    #count number of categorical variable(value\/sample)\n    value_count = var.value_counts()\n    \n    #visualize \n    plt.figure(figsize = (9,3))\n    plt.bar(value_count.index,value_count)\n    plt.xticks(value_count.index, value_count.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,value_count))\n    ","22080b87":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\n\nfor c in category1:\n    bar_plot(c)\n\n","c757dd60":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\n\nfor c in category2:\n    print(\"{} \\n \".format(df[c].value_counts()))","283ccaeb":"def hist_plot(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","80c752e5":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\n\nfor c in numericVar:\n    hist_plot(c)\n","7050a93e":"# Plcass vs Survived\ndf[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","287f11d1":"# Sex vs Survived\ndf[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","baf47b91":"# Sibsp vs Survived\ndf[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","8448c512":"# Parch vs Survived\ndf[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","b3769468":"def detect_outliers(dataFrame,features):\n    outlier_indices = []\n    \n    for i in features:\n        # 1st quartile\n        Q1 = np.percentile(dataFrame[i],25)\n        # 3rd quartile\n        Q3 = np.percentile(dataFrame[i],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_index = dataFrame[(dataFrame[i] < Q1 - outlier_step) | (dataFrame[i] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_index)\n    \n    outlier_indices = Counter(outlier_indices)\n    #print(outlier_indices)\n    #print(outlier_indices.items())\n    \n    multiple_outliers = list(index for index,value_count in outlier_indices.items() if  value_count > 2)\n    #print(multiple_outliers)\n    \n    return multiple_outliers  #return indexes","68b23a1b":"df.loc[detect_outliers(df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","53485e1e":"# drop outliers\ndf = df.drop(detect_outliers(df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","d17a4fb9":"df.info() # deleted 10 passengers (891-->881 passengers)","e7be5f5b":"train_df = pd.read_csv(\"\/kaggle\/input\/titanicdataset-traincsv\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/testtitanic\/titanic_data.csv\")","d916d59d":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)\n","0f47d58d":"train_df.head()","116c3c67":"train_df.columns[train_df.isnull().any()]","db52fffc":"train_df.isnull().sum()","fc5ebeb0":"train_df[train_df[\"Embarked\"].isnull()]","7f5fe605":"train_df.boxplot(column=\"Fare\",by = \"Embarked\")\nplt.show()","9adf0e9b":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")","e216143c":"train_df[train_df[\"Embarked\"].isnull()]","dda44353":"train_df[train_df[\"Age\"].isnull()]","1b97834a":"np.mean(train_df[train_df[\"Age\"].notnull()][\"Age\"])","6207fa21":"train_df[\"Age\"] = train_df[\"Age\"].fillna(np.mean(train_df[train_df[\"Age\"].notnull()][\"Age\"]))","c731c670":"train_df[train_df[\"Age\"].isnull()]","6ce7e97c":"list_1 = [\"SibSp\", \"Parch\", \"Age\", \"Fare\", \"Survived\"]\nsns.heatmap(train_df[list_1].corr(), annot = True, fmt = \".2f\")\nplt.show()","9baa70f8":"g = sns.factorplot(x = \"SibSp\", y = \"Survived\", data = train_df, kind = \"bar\", size = 5 )\ng.set_ylabels(\"Survived Probability\")\nplt.show()","233d0cfa":"g = sns.factorplot(x = \"Pclass\", y = \"Survived\", data = train_df, kind = \"bar\", size = 6)\ng.set_ylabels(\"Survived Probability\")\nplt.show()","b153ca8c":"g = sns.FacetGrid(train_df, col = \"Survived\")\ng.map(sns.distplot, \"Age\", bins = 25)\nplt.show()","e2ffd7dc":"g = sns.FacetGrid(train_df, col = \"Survived\", row = \"Pclass\", size = 2)\ng.map(plt.hist, \"Age\", bins = 25)\ng.add_legend()\nplt.show()","61d4fa95":"g = sns.FacetGrid(train_df, row = \"Embarked\", size = 2)\ng.map(sns.pointplot, \"Pclass\",\"Survived\",\"Sex\")\ng.add_legend()\nplt.show()","9d278225":"g = sns.FacetGrid(train_df, row = \"Embarked\", col = \"Survived\", size = 2.3)\ng.map(sns.barplot, \"Sex\", \"Fare\")\ng.add_legend()\nplt.show()","4c6396a5":"<a id = \"1\"><\/a><br>\n# Load and Check Data","9a199b4e":"<a id = \"7\"><\/a><br>\n# Outlier Detection","6542d547":"<a id = \"2\"><\/a><br>\n# Variable Description\n1. PassengerId : unique id number to each passenger\n1. Survived : passenger survive(1) died(0)\n1. Pclass : passenger class\n1. Name : name\n1. Sex : gender of passenger\n1. Age : age of passenger\n1. SibSp : number of siblings\/spouses \n1. Parch : number of parents\/children\n1. Ticket : ticket number\n1. Fare : amount of money spent on ticket\n1. Cabin : cabin category\n1. Embarked : port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)","ed2ce060":"<a id = \"6\" ><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","6c837962":"<a id = \"13\"><\/a><br>\n## Sibsp & Survived\nHaving 2 or less SibSp have more chance to survive..","2a33d01d":"<a id = \"12\"><\/a><br>\n## Correlation Between Sibsp & Parch & Age & Fare & Survived\n    \n    As you can see most correlated features are SibSp & Parch (0.41)\n    But for survived feature most correlated with Fare (0.26)","5445f54c":"<a id = \"17\"><\/a><br>\n## Embarked & Sex & Pclass & Survived\n","a4a97b6b":"<a id = \"15\"><\/a><br>\n## Age & Survived","d31dcfe5":"<a id = \"9\"><\/a><br>\n## Find Missing Value","baa0573e":"<a id = \"5\"><\/a><br>\n## Numerical Variable","c553a8b5":"<a id = \"14\"><\/a><br>\n## Pclass & Survived","ddb723ac":"# CONTENT\n> \n<font color = 'red'>\n    \n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n    *    [Univariate Variable Analysis](#3) \n            * [Categorical Variable](#4) \n            * [Numerical Variable](#5) \n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n6. [Visualization](#11)\n    * [Correlation Between Sibsp & Parch & Age & Fare & Survived](#12)\n    * [Sibsp & Survived](#13)\n    * [Pclass & Survived](#14)\n    * [Age & Survived](#15)\n    * [Survived & Age & Pclass](#16)\n    * [Embarked & Sex & Pclass & Survived](#17)\n    * [Embarked & Sex & Fare & Survived](#18)","d93ef1bf":"<a id = \"8\"><\/a><br>\n# Missing Value\n> * Find Missing Value\n* Fill Missing Value","1aadfcf1":"<a id = \"18\"><\/a><br>\n## Embarked & Sex & Fare & Survived","4c1e0075":"<a id = \"16\"><\/a><br>\n## Survived & Age & Pclass","fc792c69":" <a id = \"3\"><\/a><br>\n # Univariate Variable Analysis\n    * Categorical Variable : Survived, Sex, PClass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n    * Numerical Variable : Fare, age and passengerId","e2360892":"<a id = \"11\"><\/a><br>\n# Visualization","99ff1cbe":"<a id = \"4\"><\/a><br>\n## Categorical Variable\n","948eb397":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 4 missing value\n* Age has 354 missing value"}}