{"cell_type":{"ed53e79f":"code","a15fe43c":"code","232b5131":"code","63291901":"code","21224cc4":"code","b41dfa55":"code","59f126d9":"code","a6054273":"code","aa5e7a3c":"code","c53a061c":"code","b27e59ce":"code","3546cdcb":"code","82c0c7d8":"code","6a1ce7a5":"code","9d255bd0":"code","3bcdca51":"code","4b0a25ae":"markdown","4a27fcb6":"markdown","bbe6ce43":"markdown","c083a357":"markdown","d4cf81ff":"markdown","6002dc59":"markdown","03ab247f":"markdown"},"source":{"ed53e79f":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix","a15fe43c":"df = pd.read_csv('\/kaggle\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')\ndf.head()","232b5131":"df.info()","63291901":"df.loc[:,'banking_crisis'] = -(LabelEncoder().fit_transform(df.banking_crisis)-1)\n\n## Changing label encoding from [1,0]->[no-bank crisis, bank crisis] to [0,1]->[no-bank crisis, bank crisis]\n## More intuitive","21224cc4":"df.currency_crises.unique()","b41dfa55":"## Error in dataset, currency crises is meant to be 0 (no) or 1 yes.\ndf.currency_crises.replace(2,1,inplace=True)\ndf.sort_values(['country','year'],inplace=True)\nLoc = df[['case','cc3','country','year']].copy()\nInfo = df.drop(columns=Loc.columns.values.tolist()).copy()","59f126d9":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\nmy_color_scale = [ [0,'blue'],[1,'red'] ]\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='systemic_crisis',\n                    color_continuous_scale=my_color_scale,\n                    range_color=[0,1],\n                    hover_name='country',\n                    hover_data=['cc3','systemic_crisis','currency_crises','inflation_crises',\n                                'banking_crisis'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Systemic Crisis by Year',\n                  coloraxis_colorbar = dict(ticks='outside',tickvals=[0,1],\n                                            title = 'Systemic Crisis',\n                                            ticktext = ['No','Yes']))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","a6054273":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\nmy_color_scale = [ [0,'blue'],[1,'red'] ]\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='currency_crises',\n                    color_continuous_scale=my_color_scale,\n                    range_color=[0,1],\n                    hover_name='country',\n                    hover_data=['cc3'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Currency Crisis by Year',\n                  coloraxis_colorbar = dict(ticks='outside',tickvals=[0,1],\n                                            title = 'Currency Crisis',\n                                            ticktext = ['No','Yes']))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","aa5e7a3c":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\nmy_color_scale = [ [0,'blue'],[1,'red'] ]\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='inflation_crises',\n                    color_continuous_scale=my_color_scale,\n                    range_color=[0,1],\n                    hover_name='country',\n                    hover_data=['cc3'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Inflation Crisis by Year',\n                  coloraxis_colorbar = dict(ticks='outside',tickvals=[0,1],\n                                            title = 'Inflation Crisis',\n                                            ticktext = ['No','Yes']))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","c53a061c":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\nmy_color_scale = [ [0,'blue'],[1,'red'] ]\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='banking_crisis',\n                    color_continuous_scale=my_color_scale,\n                    range_color=[0,1],\n                    hover_name='country',\n                    hover_data=['cc3'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Banking Crisis by Year',\n                  coloraxis_colorbar = dict(ticks='outside',tickvals=[0,1],\n                                            title = 'Banking Crisis',\n                                            ticktext = ['No','Yes']))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","b27e59ce":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='exch_usd',\n                    color_continuous_scale='viridis',\n                    \n                    hover_name='country',\n                    hover_data=['cc3','systemic_crisis','currency_crises','inflation_crises',\n                                'banking_crisis'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Exchange to US Dollars by Year',\n                  coloraxis_colorbar = dict(ticks='outside',\n                                            title = 'Exchange',\n                                            ))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","3546cdcb":"df1 = df.copy()\ndf1.country.replace('Egypt','AaEgypt',inplace=True)\ndf1.sort_values(['country','year'],inplace=True)\n\n\nfig = px.choropleth(data_frame=df1,locations='country',locationmode='country names',\n                    color='inflation_annual_cpi',\n                    color_continuous_scale='viridis',\n                    \n                    hover_name='country',\n                    hover_data=['cc3','systemic_crisis','currency_crises','inflation_crises',\n                                'banking_crisis'],\n                   scope='africa',animation_frame='year',projection='natural earth')\n\nfig.update_layout(title= 'Annual Inflation by Year',\n                  coloraxis_colorbar = dict(ticks='outside',\n                                            title = 'Annual Inflation',\n                                            ))\n                  \n                  \nfig.show()\n\nprint('Gray countries are the ones without information in the dataset')","82c0c7d8":"plt.figure(figsize=(10,6))\n\nheatmap = sns.heatmap(Info.corr(), vmin=-1,vmax=1, annot=True, cmap='viridis')\n\nheatmap.set_title('Correlation Heatmap', fontdict={'fontsize':12}, pad=12)\nplt.show()","6a1ce7a5":"Target = Info.systemic_crisis\nPredictors = Info.drop(columns='systemic_crisis')\nX_tr,X_tst,Y_tr,Y_tst = train_test_split(Predictors,Target)","9d255bd0":"RFC = RandomForestClassifier()\nRFC.fit(X_tr,Y_tr)\nprint('The score achived is: {}'.format(RFC.score(X_tst,Y_tst)))\n\nY_pred = RFC.predict(X_tst)\n\nconf_mat = confusion_matrix(Y_tst,Y_pred)\n\nsns.set_style(style='dark')\nplt.figure(figsize=(10,8))\nconf = sns.heatmap(conf_mat, vmin=np.min(conf_mat.all()),vmax=np.max(conf_mat), annot=True,fmt='d', annot_kws={\"fontsize\":20},cmap='Spectral')\nconf.set_title('Confusion Matrix', fontdict={'fontsize':12}, pad=12)\n\nerror = (1-np.diag(conf_mat).sum()\/len(Y_tst))*100\nprint('Error is : {}%'.format(error))\n\nplt.show()","3bcdca51":"GBC = GradientBoostingClassifier()\nGBC.fit(X_tr,Y_tr)\nprint('The score achived is: {}'.format(GBC.score(X_tst,Y_tst)))\n\nY_pred = GBC.predict(X_tst)\n\nconf_mat = confusion_matrix(Y_tst,Y_pred)\n\nsns.set_style(style='dark')\nplt.figure(figsize=(10,8))\nconf = sns.heatmap(conf_mat, vmin=np.min(conf_mat.all()),vmax=np.max(conf_mat), annot=True,fmt='d', annot_kws={\"fontsize\":20},cmap='Spectral')\nconf.set_title('Confusion Matrix', fontdict={'fontsize':12}, pad=12)\n\nerror = (1-np.diag(conf_mat).sum()\/len(Y_tst))*100\nprint('Error is : {}%'.format(error))\n\nplt.show()","4b0a25ae":"## Correlation ","4a27fcb6":"Complete dataset","bbe6ce43":"# African Economic, Banking and Systemic Crisis.\n\nGoals of the dataset:\n\n* Visualize Economic, Banking ad Systemic crisis and its correlations with others variables.\n* Make a model that predict Crisis.","c083a357":"### Random Forest Classifier","d4cf81ff":"## Visualization","6002dc59":"## Classification","03ab247f":"### Gradient Boosting Classifier "}}