{"cell_type":{"75466826":"code","caa3e5fb":"code","47a09ffd":"code","c789fd63":"code","126ba95c":"code","da941107":"code","fb6464b0":"code","87feda65":"code","d883f5dd":"code","de529986":"code","3f8a98d8":"code","aefa7360":"code","22110f55":"code","f6866849":"markdown","c58f7679":"markdown","7bffdb37":"markdown","e4169a9e":"markdown","7e88fba4":"markdown"},"source":{"75466826":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","caa3e5fb":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","47a09ffd":"df = pd.read_csv('..\/input\/winter-olympic-medals-1924-2018\/Winter_Olympic_Medals.csv')","c789fd63":"df_copy = df.copy()\ndf_copy.head()","126ba95c":"df_copy.dtypes","da941107":"for col in df.select_dtypes('object').columns:\n    print(col, '- # unique values:', df[col].nunique())","fb6464b0":"df_copy['Country_Name'].value_counts()","87feda65":"df_copy['total'] = df_copy['Gold'] + df_copy['Silver'] + df_copy['Bronze']\ndf_copy","d883f5dd":"top = df.groupby(by=['Country_Name']).sum().groupby(level=[0]).cumsum().drop('Year',axis=1)\ntop5 = top.sort_values(by=\"Gold\",ascending=False).head(10)\n\ntop5.plot(kind=\"bar\",figsize=(20, 10))\n\nplt.xticks(rotation=90)\nplt.grid(True)\nplt.show()","de529986":"t = df_copy.groupby(['Year']).agg({'Gold':'sum','Silver':'sum','Bronze':'sum'}).reset_index()\n\nax1 = t.plot(x=\"Year\", y=\"Gold\",figsize=(10,5))\nt.plot(x=\"Year\", y=\"Silver\", ax = ax1)\nt.plot(x=\"Year\", y=\"Bronze\", ax = ax1)","3f8a98d8":"df_copy.groupby(['Year']).sum()['total'].plot.line(figsize=(10,5))","aefa7360":"aqua = df_copy.groupby(['Country_Name']).total.sum()\ntop_10_aqua = aqua.sort_values(ascending = False)[:10]\n\nplt.figure(figsize=(10,5))\ntop_10_aqua_bar = top_10_aqua.plot.bar()\nfor p in top_10_aqua_bar.patches:\n    top_10_aqua_bar.annotate(f'{int(p.get_height())}', \n                        (p.get_x() + p.get_width() \/ 2.0, \n                         p.get_height()), \n                         ha = 'center', \n                         va = 'center', \n                         xytext = (0, 4),\n                         textcoords = 'offset points')\nplt.xticks(rotation=45)\nplt.xlabel('Medals earned in order of Country Name  (top 10 countries)')","22110f55":"Host_city = df_copy.groupby(['Host_country']).sum()['total']\nHost_city = Host_city.sort_values(ascending = False)[:10]\nplt.figure(figsize=(10,5))\nHost_city_bar = Host_city.plot.bar()\nfor p in Host_city_bar.patches:\n    Host_city_bar.annotate(f'{int(p.get_height())}', \n                        (p.get_x() + p.get_width() \/ 2.0, \n                         p.get_height()), \n                         ha = 'center', \n                         va = 'center', \n                         xytext = (0, 4),\n                         textcoords = 'offset points')\nplt.xticks(rotation=45)\nplt.xlabel('Medals earned in host country (top 10 countries)')","f6866849":"<h1><font size=\"5\">TOP 10 countries that got many medals<\/font><\/h1>","c58f7679":"<h1><font size=\"5\">Transition of each medals<\/font><\/h1>","7bffdb37":"I try to consider ...","e4169a9e":"<h1><font size=\"5\">It's total medals sorted 10 countries in order of Country Name<\/font><\/h1>","7e88fba4":"<h1><font size=\"5\">It's total medals by Sorted 10 countries in order of Host country<\/font><\/h1>"}}