{"cell_type":{"af10c1ea":"code","d4081e31":"code","5b93c3a9":"code","c8e02d04":"code","0732b732":"code","cd2a3909":"code","b1d3cc9b":"code","fcbf7d57":"code","586a5f10":"code","a8980e2f":"code","b4bac439":"code","cf899aba":"code","e7fc6656":"code","45a58dcc":"code","adce64e1":"code","036443ba":"code","0a6bc488":"code","b4db6e95":"code","b324031b":"code","024197b3":"code","ba5bf416":"code","47fb26de":"code","ec2bc163":"code","a3e3c344":"code","5ba513e7":"code","78206978":"code","ec71de7a":"code","da6316cb":"code","aa2442bf":"code","f1b6e730":"code","9cf9d745":"code","0727f875":"code","b09bf52d":"code","db29c3a8":"code","395a4c33":"code","fef8bfc7":"code","3e81bafd":"code","77f1cc03":"code","15a40751":"markdown","e15d623c":"markdown","c02c24c5":"markdown","bbbf3d72":"markdown"},"source":{"af10c1ea":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.layers import Dense, Dropout, Conv2D, MaxPool2D, Flatten\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.utils import to_categorical","d4081e31":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","5b93c3a9":"x_train = train.drop('label', axis = 1)\ny_train = train['label']","c8e02d04":"x_test = test","0732b732":"np.shape(x_test)","cd2a3909":"x_train = np.array(x_train)\nx_test = np.array(x_test)\ny_train = np.array(y_train)","b1d3cc9b":"x_train = x_train.reshape(x_train.shape[0], 28, 28)\nx_test = x_test.reshape(x_test.shape[0], 28, 28)","fcbf7d57":"np.shape(x_train)","586a5f10":"x_train = x_train \/ 255","a8980e2f":"x_test = x_test \/ 255","b4bac439":"x_train = np.expand_dims(x_train, axis = 3)\nx_test = np.expand_dims(x_test, axis = 3)","cf899aba":"np.shape(x_train)","e7fc6656":"y_train = to_categorical(y_train)","45a58dcc":"model = Sequential()\nmodel.add(Conv2D(32, 3, input_shape = (28, 28, 1), padding = 'same'))\nmodel.add(MaxPool2D(pool_size = 2, strides = 2))\nmodel.add(Conv2D(20, 3,  padding = 'same'))\nmodel.add(MaxPool2D(pool_size = 2, strides = 2))\nmodel.add(Dropout(0.4))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation = 'relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(10, activation = 'softmax'))","adce64e1":"model_sgd = Sequential()\nmodel_sgd.add(Conv2D(32, 3, input_shape = (28, 28, 1), padding = 'same'))\nmodel_sgd.add(MaxPool2D(pool_size = 2, strides = 2))\nmodel_sgd.add(Conv2D(20, 3,  padding = 'same'))\nmodel_sgd.add(MaxPool2D(pool_size = 2, strides = 2))\nmodel_sgd.add(Dropout(0.4))\nmodel_sgd.add(Flatten())\nmodel_sgd.add(Dense(128, activation = 'relu'))\nmodel_sgd.add(Dropout(0.3))\nmodel_sgd.add(Dense(10, activation = 'softmax'))","036443ba":"model.summary()","0a6bc488":"model_sgd.summary()","b4db6e95":"model.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = 'accuracy')","b324031b":"model_sgd.compile(optimizer = 'sgd', loss = 'categorical_crossentropy', metrics = 'accuracy')","024197b3":"result = model.fit(x_train, y_train, batch_size = 400, epochs = 20, validation_split=0.3)","ba5bf416":"result_sgd = model_sgd.fit(x_train, y_train, batch_size = 400, epochs = 50, validation_split=0.3)","47fb26de":"pd.DataFrame(result.history).plot(figsize = (8, 8))","ec2bc163":"pd.DataFrame(result_sgd.history).plot(figsize = (8, 8))","a3e3c344":"y_predict = model.predict(x_test)","5ba513e7":"np.argmax(y_predict[2])","78206978":"pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')","ec71de7a":"y_predict = pd.DataFrame(y_predict)","da6316cb":"y_predict.apply(lambda x: np.argmax(x), axis = 1)","aa2442bf":"y_predict['Label'] = y_predict.apply(lambda x: np.argmax(x), axis = 1)","f1b6e730":"y_predict.drop([0, 1, 2, 3, 4, 5, 6, 7, 8, 9,], inplace=True, axis = 1)","9cf9d745":"y_predict","0727f875":"ImageId = []\nfor i in range(np.shape(test)[0]):\n    ImageId.append(i)","b09bf52d":"ImageId = pd.DataFrame(ImageId)","db29c3a8":"result = ImageId.join(y_predict)","395a4c33":"result.rename(columns={0: 'ImageId'}, inplace=True)","fef8bfc7":"result","3e81bafd":"result_csv = result.to_csv(index=False)","77f1cc03":"import pickle\nwith open('.\/predict_mnist_cnn.csv', 'wb') as f:\n    pickle.dump(result_csv ,f)","15a40751":"# TIP:\n### Why conv2d_2 (None, 26, 26, 32)  My pixle are 26 ? Bcause We Don't Use Padding = 'same', Now What Does It Mean's 32 : it mean's 32 Different Picture Just For 28 * 28\n\n### max_pooling2d_2 (None, 13, 13, 32) It's Calculate 2*2 Matris And Sum Maximum Value So The P0icture Is Half 26 = 13 Why Half Because Use 2 Mean's 2*2 Matris Cover Picture And Step By Step Calculate Maximum Pixle After That Make New Matris\n","e15d623c":"### We Do This Because We Use Conv2d \n#### If You Want To Use NN It's Ok But Not For CNN","c02c24c5":"## Because We Khnow Gary-Scale","bbbf3d72":"## Normalize The Data:"}}