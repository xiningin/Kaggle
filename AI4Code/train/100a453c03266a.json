{"cell_type":{"a3fd44fe":"code","093e9fc4":"code","f43c18c8":"code","04a1e7b9":"code","41f2b7d9":"code","b47f391a":"code","b7484a5f":"code","10996161":"code","37ba0601":"code","7f6368ea":"code","bd67598f":"code","b6c17c6c":"code","156b4a27":"code","61db7122":"code","8d7f9b95":"code","de146647":"code","25067e55":"code","24a24146":"code","af38b2bd":"code","0ee226e2":"code","32daeef2":"code","19a943c9":"code","d19dd9c6":"code","953059e0":"markdown","2496fbc5":"markdown","1d814bd3":"markdown","f4dd8d75":"markdown","9b353777":"markdown","6e28d477":"markdown","511135a1":"markdown","7a4e7848":"markdown","ae1092b6":"markdown","14b20582":"markdown","a03ac464":"markdown","3736de23":"markdown","2e1e5a02":"markdown","b7a9bbe2":"markdown","5d8a0fb8":"markdown","a98dac44":"markdown","7a373155":"markdown","db21ec30":"markdown","34089a2f":"markdown","07123948":"markdown","40e7d093":"markdown","b5851ea5":"markdown","a125cd51":"markdown"},"source":{"a3fd44fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport calendar\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nbakery_dataset = pd.read_csv(\"..\/input\/BreadBasket_DMS.csv\")\nbakery_dataset.dropna()\nbakery_dataset = bakery_dataset[bakery_dataset['Item'] != 'NONE']\n\nbakery_dataset['Date'] = pd.to_datetime(bakery_dataset['Date'])\nbakery_dataset['Time'] = pd.to_datetime(bakery_dataset['Time'])\nbakery_dataset['Year'] = bakery_dataset['Date'].dt.year\nbakery_dataset['Month'] = bakery_dataset['Date'].dt.month\nbakery_dataset['Day'] = bakery_dataset['Date'].dt.day\nbakery_dataset['Weekday'] = bakery_dataset['Date'].dt.weekday\nbakery_dataset['Hour'] = bakery_dataset['Time'].dt.hour\n# Any results you write to the current directory are saved as output.","093e9fc4":"bakery_dataset.head(10)","f43c18c8":"def map_indexes_and_values(df, col):\n    df_col = df[col].value_counts()\n    x = df_col.index.tolist()\n    y = df_col.values.tolist()\n    return x, y\n\nweekmap = {0:'Mon', 1:'Tue', 2:'Wed', 3:'Thu', 4:'Fri', 5:'Sat', 6:'Sun'}\n\n# count of the five most popular items\npopular_items, popular_items_count = map_indexes_and_values(bakery_dataset, 'Item')\nplt.bar(popular_items[:5], popular_items_count[:5])\nplt.xlabel('Most popular Items')\nplt.ylabel('Number of Transactions')\nplt.show()","04a1e7b9":"# top items in 2016\nfirst_year_data = bakery_dataset[bakery_dataset['Year'] == 2016]\nx, y = map_indexes_and_values(first_year_data, 'Item')\nplt.bar(x[:5], y[:5], color='r', label='2016')\nplt.xlabel('Most popular Items')\nplt.ylabel('Number of Transactions')\nplt.legend()\nplt.show()","41f2b7d9":"# top items in 2017\nsecond_year_data = bakery_dataset[bakery_dataset['Year'] == 2017]\nx, y = map_indexes_and_values(second_year_data, 'Item')\nplt.bar(x[:5], y[:5], color='g', label='2017')\nplt.xlabel('Most popular Items')\nplt.ylabel('Number of Transactions')\nplt.legend()\nplt.show()","b47f391a":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 0]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Monday')\nplt.xlabel('Popular items on Monday')\nplt.ylabel('Number of Transactions')\nplt.show()","b7484a5f":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 1]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Tuesday')\nplt.xlabel('Popular items on Tuesday')\nplt.ylabel('Number of Transactions')\nplt.show()","10996161":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 2]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Wednesday')\nplt.xlabel('Popular items on Wednesday')\nplt.ylabel('Number of Transactions')\nplt.show()","37ba0601":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 3]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Thursday')\nplt.xlabel('Popular items on Thursday')\nplt.ylabel('Number of Transactions')\nplt.show()","7f6368ea":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 4]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Friday')\nplt.xlabel('Popular items on Friday')\nplt.ylabel('Number of Transactions')\nplt.show()","bd67598f":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 5]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Saturday')\nplt.xlabel('Popular items on Saturday')\nplt.ylabel('Number of Transactions')\nplt.show()","b6c17c6c":"monday_info = bakery_dataset[bakery_dataset['Weekday'] == 6]\nitem, item_count = map_indexes_and_values(monday_info, 'Item')\nplt.bar(item[:5], item_count[:5], color='b', label='Sunday')\nplt.xlabel('Popular items on Sunday')\nplt.ylabel('Number of Transactions')\nplt.show()","156b4a27":"# checking when is the first item most popular weekday wise\nfirst_item = bakery_dataset[bakery_dataset['Item'] == popular_items[0]]\nweekday, weekday_count = map_indexes_and_values(first_item, 'Weekday')\nx2 = [weekmap[x] for x in weekday]\nwkmp = {}\nfor j,x in enumerate(x2):\n    wkmp[x] = weekday_count[j]\norder = list(weekmap.values())\nordervals = [wkmp[val] for val in order]\nplt.bar(order, ordervals, color='gold')\nplt.xlabel('Weekday')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[0]+' by weekday')\nplt.show()","61db7122":"# checking when is the second item most popular weekday wise\nsecond_item = bakery_dataset[bakery_dataset['Item'] == popular_items[1]]\nweekday, weekday_count = map_indexes_and_values(second_item, 'Weekday')\nx2 = [weekmap[x] for x in weekday]\nwkmp = {}\nfor j,x in enumerate(x2):\n    wkmp[x] = weekday_count[j]\nordervals = [wkmp[val] for val in order]\nplt.bar(order, ordervals, color='gold')\nplt.xlabel('Weekday')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[1]+' by weekday')\nplt.show()","8d7f9b95":"# checking when is the third item most popular weekday wise\nthird_item = bakery_dataset[bakery_dataset['Item'] == popular_items[2]]\nweekday, weekday_count = map_indexes_and_values(third_item, 'Weekday')\nx2 = [weekmap[x] for x in weekday]\nwkmp = {}\nfor j,x in enumerate(x2):\n    wkmp[x] = weekday_count[j]\nordervals = [wkmp[val] for val in order]\nplt.bar(order, ordervals, color='gold')\nplt.xlabel('Weekday')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[2]+' by weekday')\nplt.show()","de146647":"# checking when is the fourth item most popular weekday wise\nfourth_item = bakery_dataset[bakery_dataset['Item'] == popular_items[3]]\nweekday, weekday_count = map_indexes_and_values(fourth_item, 'Weekday')\nx2 = [weekmap[x] for x in weekday]\nwkmp = {}\nfor j,x in enumerate(x2):\n    wkmp[x] = weekday_count[j]\nordervals = [wkmp[val] for val in order]\nplt.bar(order, ordervals, color='gold')\nplt.xlabel('Weekday')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[3]+' by weekday')\nplt.show()","25067e55":"# checking when is the fifth item most popular weekday wise\nfifth_item = bakery_dataset[bakery_dataset['Item'] == popular_items[4]]\nweekday, weekday_count = map_indexes_and_values(fifth_item, 'Weekday')\nx2 = [weekmap[x] for x in weekday]\nwkmp = {}\nfor j,x in enumerate(x2):\n    wkmp[x] = weekday_count[j]\nordervals = [wkmp[val] for val in order]\nplt.bar(order, ordervals, color='gold')\nplt.xlabel('Weekday')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[4]+' by weekday')\nplt.show()","24a24146":"# checking when is the first item most popular hour wise\nfirst_item = bakery_dataset[bakery_dataset['Item'] == popular_items[0]]\nhour, hour_count = map_indexes_and_values(first_item, 'Hour')\nplt.bar(hour, hour_count, color='maroon')\nplt.xlabel('Hour')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[0]+' by the hour')\nplt.xticks(range(6,22))\nplt.show()","af38b2bd":"# checking when is the second item most popular hour wise\nsecond_item = bakery_dataset[bakery_dataset['Item'] == popular_items[1]]\nhour, hour_count = map_indexes_and_values(second_item, 'Hour')\nplt.bar(hour, hour_count, color='maroon')\nplt.xlabel('Hour')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[1]+' by the hour')\nplt.xticks(range(0,22))\nplt.show()","0ee226e2":"# checking when is the third item most popular hour wise\nthird_item = bakery_dataset[bakery_dataset['Item'] == popular_items[2]]\nhour, hour_count = map_indexes_and_values(third_item, 'Hour')\nplt.bar(hour, hour_count, color='maroon')\nplt.xlabel('Hour')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[2]+' by the hour')\nplt.xticks(range(6,22))\nplt.show()","32daeef2":"# checking when is the fourth item most popular hour wise\nfourth_item = bakery_dataset[bakery_dataset['Item'] == popular_items[3]]\nhour, hour_count = map_indexes_and_values(fourth_item, 'Hour')\nplt.bar(hour, hour_count, color='maroon')\nplt.xlabel('Hour')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[3]+' by the hour')\nplt.xticks(range(6,22))\nplt.show()","19a943c9":"# checking when is the fifth item most popular hour wise\nfifth_item = bakery_dataset[bakery_dataset['Item'] == popular_items[4]]\nhour, hour_count = map_indexes_and_values(fifth_item, 'Hour')\nplt.bar(hour, hour_count, color='maroon')\nplt.xlabel('Hour')\nplt.ylabel('Number of Transactions')\nplt.title('Popularity of '+popular_items[4]+' by the hour')\nplt.xticks(range(6,22))\nplt.show()","d19dd9c6":"df = bakery_dataset\ncross = df.merge(df, on='Transaction')\nfinal = cross[cross['Item_x']>cross['Item_y']].groupby(['Item_x','Item_y']).size()\nax = final.sort_values(ascending=False)[:5].plot(kind='bar')\nax.set_xlabel('Items bought together')\nax.set_ylabel('Number of common transactions shared by the items')","953059e0":"An example of what the dataset contains","2496fbc5":"Historical chart of Tea sold throughout the week","1d814bd3":"Two frequently bought together item pairs based on the transaction numbers. ","f4dd8d75":"Historical chart of Pastry sold throughout the day","9b353777":"Historical chart of Cake sold throughout the week","6e28d477":"Historical chart of Bread sold throughout the week","511135a1":"Historical chart of Tea sold throughout the day","7a4e7848":"**Basic Data Set study of Bakery transactions**\n\nThis is a very basic study of a Bakery data set. This is my very first data set. I have tried to explore some of the basic questions that may arise while exploring this data set.","ae1092b6":"Historical chart of Coffee sold throughout the week","14b20582":"Most popular items sold on Monday","a03ac464":"Historical chart of Cake sold throughout the day","3736de23":"Most popular bakery items in 2016","2e1e5a02":"Most popular bakery items in 2017","b7a9bbe2":"Let's look at the most popular bakery items","5d8a0fb8":"Most popular items sold on Thursday","a98dac44":"Most popular items sold on Wednesday","7a373155":"Historical chart of Coffee sold throughout the day","db21ec30":"Most popular items sold on Tuesday","34089a2f":"Historical chart of Bread sold throughout the day","07123948":"Historical chart of Pastry sold throughout the week","40e7d093":"Most popular items sold on Friday","b5851ea5":"Most popular items sold on Saturday","a125cd51":"Most popular items sold on Sunday"}}