{"cell_type":{"fccc31fb":"code","25df6dbf":"code","3a421988":"code","5e26d1db":"code","1319c154":"markdown","31b2d86a":"markdown","c43b37be":"markdown","efad2645":"markdown"},"source":{"fccc31fb":"#Import Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os #operating system dependent modules of Python\nimport matplotlib.pyplot as plt #visualization\nimport seaborn as sns #visualization\n%matplotlib inline\nimport itertools\nimport plotly.offline as py#visualization\npy.init_notebook_mode(connected=True)#visualization\nimport plotly.graph_objs as go#visualization\nimport plotly.tools as tls#visualization\nimport plotly.figure_factory as ff#visualization\nimport warnings\nwarnings.filterwarnings(\"ignore\")","25df6dbf":"#selecting 17 million rows of data\nnyc_data  = pd.read_csv(r\"..\/input\/train.csv\",nrows = 17000000)\n#data headers info\nnyc_data.head()","3a421988":"#replace 0's in coordinates with null values\ncoord = ['pickup_longitude','pickup_latitude', \n         'dropoff_longitude', 'dropoff_latitude']\n\nfor i in coord :\n    nyc_data[i] = nyc_data[i].replace(0,np.nan)\n    nyc_data    = nyc_data[nyc_data[i].notnull()]\n\n#Date manipulation\n#conver to date format\nnyc_data[\"pickup_datetime\"] = nyc_data[\"pickup_datetime\"].str.replace(\" UTC\",\"\")\nnyc_data[\"pickup_datetime\"] = pd.to_datetime(nyc_data[\"pickup_datetime\"],\n                                             format=\"%Y-%m-%d %H:%M:%S\")\n#extract year\nnyc_data[\"year\"]  = pd.DatetimeIndex(nyc_data[\"pickup_datetime\"]).year\n#extract month\nnyc_data[\"month\"] = pd.DatetimeIndex(nyc_data[\"pickup_datetime\"]).month\nnyc_data[\"month_name\"] = nyc_data[\"month\"].map({1:\"JAN\",2:\"FEB\",3:\"MAR\",\n                                                4:\"APR\",5:\"MAY\",6:\"JUN\",\n                                                7:\"JUL\",8:\"AUG\",9:\"SEP\",\n                                                10:\"OCT\",11:\"NOV\",12:\"DEC\"\n                                               })\n#merge year month\nnyc_data[\"month_year\"] = nyc_data[\"year\"].astype(str) + \" - \" + nyc_data[\"month_name\"]\n#extract week day \nnyc_data[\"week_day\"]   = nyc_data[\"pickup_datetime\"].dt.weekday_name\n#extract day \nnyc_data[\"day\"]        = nyc_data[\"pickup_datetime\"].dt.day\n#extract hour\nnyc_data[\"hour\"]        = nyc_data[\"pickup_datetime\"].dt.hour \nnyc_data = nyc_data.sort_values(by = \"pickup_datetime\",ascending = False)\n\n#Outlier treatment\n#drop observations with passengers greater than 6 and equals 0\nnyc_data = nyc_data[(nyc_data[\"passenger_count\"] > 0 ) &\n                    (nyc_data[\"passenger_count\"] < 7) ]\n\n#drop observations with fareamount  less than 0 and  greater than 99.99% percentile value.\nnyc_data = nyc_data[ (nyc_data[\"fare_amount\"] > 0 ) &\n                     (nyc_data[\"fare_amount\"]  <  \n                      nyc_data[\"fare_amount\"].quantile(.9999))]\n\n#drop outlier observations in data\ncoords = ['pickup_longitude','pickup_latitude', \n          'dropoff_longitude', 'dropoff_latitude']\nfor i in coord  : \n    nyc_data = nyc_data[(nyc_data[i]   > nyc_data[i].quantile(.001)) & \n                        (nyc_data[i] < nyc_data[i].quantile(.999))]\n    \n  \nnyc_data.head()","5e26d1db":"trips_hr = nyc_data[\"hour\"].value_counts().reset_index()\ntrips_hr.columns = [\"hour\",\"count\"]\ntrips_hr = trips_hr.sort_values(by = \"hour\",ascending = True)\n\ntrace = go.Scatter(x = trips_hr[\"hour\"],y = trips_hr[\"count\"],\n                   mode = \"markers+lines\",\n                  marker = dict(color = \"red\",size = 9,\n                                line = dict(color = \"black\",width =2)))\n#layout\nlayout = go.Layout(dict(title = \"Trend in trips  by hour of day\",\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',title = \"hour\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',title = \"# trip count\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\n\nfig = go.Figure(data = [trace],layout = layout)\npy.iplot(fig)","1319c154":"## Trend in trips  by hour of day [2009 Jan-2015 May]","31b2d86a":"# 1. ## NYC  Taxi Trip 2009-2015 - Time series Analysis","c43b37be":"## Data Manipulation - noise, invalid data correction","efad2645":"## Data"}}