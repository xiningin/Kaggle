{"cell_type":{"37e00977":"code","f3b7ad62":"code","a692310f":"code","db10e5f2":"code","ac7c053f":"code","714bd062":"code","3e997cfd":"code","6b77c28a":"code","6a367200":"code","0778f2a8":"code","4e25e9ba":"code","6a91f991":"code","46c71219":"code","e5e0cd15":"code","3546fbdc":"code","752a5217":"code","4240d3db":"code","e1343bab":"code","28f5a846":"code","6a248253":"code","b541a41b":"code","d8ef0439":"code","42e62582":"code","1f728be1":"code","e59ab8e0":"code","cf1db450":"code","d9ca3e9d":"code","49b27cdd":"code","1f6eb151":"code","704a56b5":"code","9b311373":"code","72790a47":"code","0fce0062":"code","6aae9f99":"code","fdc8917c":"code","302237f3":"code","b158b8ff":"code","e9ede615":"code","40beb930":"code","a2ea7791":"code","10a624f5":"code","883b3df0":"code","9f85e154":"code","d1405833":"code","521993f3":"code","d8863c22":"code","bfe07e20":"code","f58fea22":"code","b1b5f80c":"code","62d0d95e":"code","cabfc91a":"code","ba48379f":"code","32cdcc43":"code","fb1e451b":"markdown","ea4d3ee8":"markdown","85e004e5":"markdown","eceda941":"markdown","341a1b41":"markdown","a1861fb4":"markdown","681b8bfb":"markdown","4d252c39":"markdown","01634756":"markdown","2c2603b2":"markdown","528d061a":"markdown","02f8a9a4":"markdown","11c220c4":"markdown","a79f40bf":"markdown","af1ca841":"markdown","bab597cb":"markdown","ac461a22":"markdown","cd6cea7f":"markdown","5d7a72d5":"markdown","1572a548":"markdown"},"source":{"37e00977":"import pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier","f3b7ad62":"df1 = pd.read_csv(r\"..\/input\/black-friday\/BlackFriday.csv\")","a692310f":"df1.head()","db10e5f2":"df1 = df1.fillna(0)","ac7c053f":"new_df = df1.Stay_In_Current_City_Years.replace(['4+'],4)\nnew_df.head(10)","714bd062":"df1['new_stay'] = new_df\ndf1.head(10)","3e997cfd":"new_df = df1.Age.replace(['0-17','18-25','26-35','36-45','46-50','51-55','55+'],[0,1,2,3,4,5,6])\nnew_df.head(10)","6b77c28a":"df1['new_age'] = new_df\ndf1.head(10)","6a367200":"new_df = df1.City_Category.replace(['A','B','C'],[0,1,2])\nnew_df.head(10)","0778f2a8":"df1['new_city'] = new_df\ndf1.head(10)","4e25e9ba":"new_df = df1.Gender.replace(['M','F'],[0,1])\nnew_df.head(10)","6a91f991":"df1['new_gender'] = new_df\ndf1.head(10)","46c71219":"AgeGroup = df1['Age'].map(lambda n: n.split(\"|\")[0].split(\":\")[0]).value_counts().head(20)\nAgeGroup.plot.bar()","e5e0cd15":"sns.countplot(df1['Gender'])","3546fbdc":"sns.countplot(df1['City_Category'])","752a5217":"sns.countplot(df1['Age'],hue=df1['Gender'])","4240d3db":"sns.countplot(df1['Occupation'],hue=df1['Gender'])","e1343bab":"sns.countplot(df1['Purchase'],hue=df1['City_Category'])","28f5a846":"print(df1['Gender'].value_counts())","6a248253":"df1_Male = df1.loc[df1['Gender'] == 'M']\ndf1_Female = df1.loc[df1['Gender'] == 'F']","b541a41b":"total_spending_male = df1_Male['Purchase'].sum()\ntotal_spending_male","d8ef0439":"total_spending_female = df1_Female['Purchase'].sum()\ntotal_spending_female","42e62582":"spending_data = [['M',total_spending_male],['F',total_spending_female]]\ndf2 = pd.DataFrame(spending_data, columns=('Gender','Purchase'))\ndf2","1f728be1":"df1_A = df1.loc[df1['City_Category'] == 'A']\ndf1_B = df1.loc[df1['City_Category'] == 'B']\ndf1_C = df1.loc[df1['City_Category'] == 'C']","e59ab8e0":"total_spending_A = df1_A['Purchase'].sum()\ntotal_spending_A","cf1db450":"total_spending_B = df1_B['Purchase'].sum()\ntotal_spending_B","d9ca3e9d":"total_spending_C = df1_C['Purchase'].sum()\ntotal_spending_C","49b27cdd":"### Total Spent by each city category.","1f6eb151":"spending_data_City = [['A',total_spending_A],['B',total_spending_B],['C',total_spending_C]]\ndf3 = pd.DataFrame(spending_data_City, columns=('City_Category','Purchase'))\ndf3","704a56b5":"df1['combined_G_M'] = df1.apply(lambda x:'%s_%s' % (x['Gender'],x['Marital_Status']),axis=1)\nprint(df1['combined_G_M'].unique())","9b311373":"df5 = df1.groupby(['combined_G_M','Age']).size()\ndf5","72790a47":"sns.countplot(df1['Age'],hue=df1['combined_G_M'])","0fce0062":"sns.boxplot('Age','Purchase', data = df1)\nplt.show()","6aae9f99":"Age_buy = df1.groupby([\"Age\"])[\"Purchase\"].sum()\nAge_buy.plot.bar()","fdc8917c":"Occu_buy = df1.groupby([\"Occupation\"])[\"Purchase\"].sum()\nOccu_buy.plot.bar()","302237f3":"City_buy = df1.groupby([\"City_Category\"])[\"Purchase\"].sum()\nCity_buy.plot.bar()","b158b8ff":"product_age = df1.groupby([\"Age\"])[\"Product_Category_1\", \"Product_Category_2\", \"Product_Category_3\"].sum()\nproduct_age.plot.bar()\n","e9ede615":"df1.Purchase.describe()","40beb930":"df10 = df1.head(1000)\ndf10.plot.scatter(x = \"User_ID\",y=\"Purchase\")","a2ea7791":"df1.corr()","10a624f5":"clean_data = df1.copy()\nclean_data['good_customer'] = (clean_data['Purchase'] > 12073)*1\nprint(clean_data['good_customer'])","883b3df0":"y=clean_data[['good_customer']].copy()","9f85e154":"y.head()","d1405833":"df1.columns","521993f3":"customer_features = ['new_age', 'Occupation', 'new_city',\n       'new_stay', 'Marital_Status','new_gender', 'Product_Category_1',\n       'Product_Category_2', 'Product_Category_3']","d8863c22":"X = clean_data[customer_features].copy()","bfe07e20":"X.head()","f58fea22":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=324)","b1b5f80c":"good_customer_classifier = DecisionTreeClassifier(max_leaf_nodes=10, random_state=0)\ngood_customer_classifier.fit(X_train, y_train)","62d0d95e":"predictions = good_customer_classifier.predict(X_test)","cabfc91a":"predictions[:10]","ba48379f":"y_test['good_customer'][:10]","32cdcc43":"accuracy = accuracy_score(y_true = y_test, y_pred = predictions)\nprint(accuracy * 100)","fb1e451b":"### We have taken any purchase over that of 12073 to be that of a good customer. 12073 is the 75 percentile mark based on our data description. ","ea4d3ee8":"#### Building an X and Y dataframe to perform a decision tree analysis.","85e004e5":"#### Importing the data on a csv file. ","eceda941":"### Determing the statistics of the purchase by the customers. Thus determinding what makes a good and a bad customer.","341a1b41":"### Accuracy % of our decision tree model","a1861fb4":"#### Replacing na\/nan values in the data frame with 0.","681b8bfb":"### Split up based on (Age,Occupation) and Gender of the customers.","4d252c39":"## Data cleaning has been performed and a new table has been generated. Moving to visualisation.","01634756":"### Total Spent by Males and Females","2c2603b2":"### Number of males and females who are married and unmarried in each age group.","528d061a":"#### Replacing 4+ years in the Stay_In_Current_City_Years column with a 4 because it is a string and an ML model requires integers to draw conclusion. Simillar technique is used in case of other columns to replace string instances with numeric data. Categories are replaced with 0,1,2... ","02f8a9a4":"# Black Friday Analysis\n### Based on a retail stores data set on the sales from 2017","11c220c4":"### Bar chart plotting amount spent in each product category by various age groups","a79f40bf":"#### Comparison with actual results","af1ca841":"### Split up of age,gender,city based on population","bab597cb":"Columns of the data set include -: \n##### 1) User ID \n##### 2) Product ID\n##### 3) Gender\n##### 4) Age\n##### 5) Occupation -> 20 different occupations have been categorised numerically between 1-20.\n##### 6) Category of City -> Cities are classified as tier A,B and C. \n##### 7) Number of years in a city -> Classified as 1,2,3, and 4+ years in a city.\n##### 8) Marital Status -> 0 is unmarried and 1 is married. \n##### 9) Product Category -> There are 3 different type of product categories in 3 different columns and the specific product in the product type picked up in each category is given. \n##### 10) Purchase -> The amount spent by the customer is given under purchase. ","ac461a22":"### Plotting a scatter plot and correlation matrix to see any pattern in the purchase to be able to draw a regression line. ","cd6cea7f":"#### Predictions for the first 10 customers.","5d7a72d5":"### Box plot comparing purchase of various age groups","1572a548":"#### Getting the purchase in a binary form based on whether a customer is a good one or not a good one. 1 implies it is a good customer. 0 implies it is not a good customer. "}}