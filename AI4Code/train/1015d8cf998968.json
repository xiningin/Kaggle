{"cell_type":{"5c25647e":"code","a903407a":"code","bcdc371f":"code","3bf137e7":"code","38b7858b":"code","64a85905":"code","cc38f766":"code","d5d5b5cb":"code","e3bd8698":"code","0c609959":"code","ee57e961":"code","aaf46a8f":"code","6e3e4312":"code","525dfd51":"code","497ff631":"code","581f9109":"code","d91a6778":"code","576e6dd1":"code","25ca19a2":"code","aec84e6d":"code","d87aeb68":"code","b3fb1a11":"code","0c5f946a":"code","b22f86db":"code","34933d2c":"code","d4f9b2d0":"code","4f5e3657":"code","9ef71a6e":"code","13b63f38":"markdown","4920b4e6":"markdown","3abbcd4c":"markdown","a02bb586":"markdown","825a7178":"markdown","854b36ba":"markdown","aea3e0a7":"markdown","9fd01a0e":"markdown","8df6cf2a":"markdown","94a13a94":"markdown","1147ac14":"markdown","94422b19":"markdown"},"source":{"5c25647e":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","a903407a":"data = pd.read_csv(\"..\/input\/ip-network-traffic-flows-labeled-with-87-apps\/Dataset-Unicauca-Version2-87Atts.csv\", parse_dates=True)\ndata.head()","bcdc371f":"data.shape","3bf137e7":"data.columns","38b7858b":"data.info()","64a85905":"non_num_cols = [col for col in data.columns if data[col].dtype == 'O']\nnon_num_data = data[non_num_cols]\nnon_num_data","cc38f766":"[(col, non_num_data[col].nunique()) for col in non_num_cols]","d5d5b5cb":"def summarize_cat(col_name):\n    sorted_values = sorted(non_num_data[col_name].value_counts().iteritems(), key = lambda x:x[1], reverse=True)\n    remaining_per = 100\n    for (value, count) in sorted_values:\n        per = count \/ len(non_num_data) * 100\n        if per >= 1:\n            print(f'{value} : {per:.2f}%')\n        else :\n            print(f'Others : {remaining_per:.2f}%')\n            break\n        remaining_per = remaining_per - per","e3bd8698":"for col in non_num_cols:\n    print(f\"Summary of {col} column : \")\n    summarize_cat(col)\n    print('\\n')","0c609959":"num_cols = list(set(data.columns) - set(non_num_cols))\nnum_cols","ee57e961":"data[num_cols].describe()","aaf46a8f":"[col for col in num_cols if data[col].isnull().any()]","6e3e4312":"print(\"range and no. of unique values in numeric columns\")\nfor col in num_cols:\n    print(f'{col}\\tRange : {max(data[col]) - min(data[col])}, No. of unique values : {data[col].nunique()}')","525dfd51":"cols_for_hist = [col for col in num_cols if data[col].nunique() <= 50]\ncols_for_hist, len(cols_for_hist)","497ff631":"cols_for_desc = [col for col in num_cols if data[col].nunique() > 50]\ncols_for_desc","581f9109":"data[cols_for_hist].hist(layout = (7,3), figsize = (12, 20))\nplt.tight_layout()","d91a6778":"corr = data[num_cols].corr()","576e6dd1":"f = plt.figure(figsize = (25,25))\nplt.matshow(corr, fignum=f.number)\nplt.title('Correlation Matrix of Numeric columns in the dataset', fontsize = 20)\nplt.xticks(range(len(num_cols)), num_cols, fontsize = 14, rotation = 90)\nplt.yticks(range(len(num_cols)), num_cols, fontsize = 14)\nplt.gca().xaxis.set_ticks_position('bottom')\ncb = plt.colorbar(fraction = 0.0466, pad = 0.02)\ncb.ax.tick_params(labelsize=10)\nplt.show()","25ca19a2":"ipdata = data.copy()","aec84e6d":"print(\"No. of unique values in Timestamp column :\",ipdata['Timestamp'].nunique())\nprint(\"No. of unique values in FlowID column :\",ipdata['Flow.ID'].nunique())","d87aeb68":"ipdata.drop(['Timestamp', 'Flow.ID'], axis = 1, inplace = True)","b3fb1a11":"single_unique_cols = [col for col in ipdata.columns if ipdata[col].nunique() == 1]\nsingle_unique_cols","0c5f946a":"ipdata.drop(single_unique_cols, axis = 1, inplace = True)","b22f86db":"ip_add_cols = ['Source.IP', 'Source.Port', 'Destination.IP', 'Destination.Port']\nipdata[ip_add_cols]","34933d2c":"ipdata.drop(ip_add_cols, axis = 1, inplace = True)","d4f9b2d0":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder().fit(ipdata['ProtocolName'])\nipdata['ProtocolName'] = encoder.fit_transform(ipdata['ProtocolName'])\nipdata['ProtocolName']","4f5e3657":"ipdata.head(10)","9ef71a6e":"ipdata.shape","13b63f38":"## Exploratory Analysis for numeric columns","4920b4e6":"### Remove timestamp and FlowID column","3abbcd4c":"## Data Cleansing and Preprocessing","a02bb586":"### Label Encode ProtocolName column","825a7178":"## Now this data is ready for any predicitive analysis","854b36ba":"### Drop all columns with only a single unique value","aea3e0a7":"### Convert Ip addresses and ports information\nCan convert these to country but I can't find an api to do this for large no. of entries","9fd01a0e":"# Exploratory Analysis of IP Addresses Dataset","8df6cf2a":"### No. of unique values and their counts in non_numeric columns","94a13a94":"## For the columns having <=50 unique values, we plot histograms, for others we just list distribution of most frequent values as in case of category columns","1147ac14":"## Correlation Matrix","94422b19":"## Lets take a look at all the non-numeric columns"}}