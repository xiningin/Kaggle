{"cell_type":{"9f36e2b9":"code","ebd02063":"code","faa04e4a":"code","78d1ce94":"code","13f1a2e9":"code","c4c28899":"code","0e7d43dd":"code","eb291697":"code","58a61846":"code","107fecab":"code","75b66d96":"code","d79fdeb1":"code","575cc737":"code","ab1df96e":"code","8aa67238":"code","5744c89d":"code","2571a9fc":"code","824502d3":"code","5aaccbc2":"code","db618fcf":"code","9cb01a42":"code","a6c33294":"code","0227a05e":"code","ef982844":"code","a5372b3d":"code","f02bba15":"code","6982dafd":"code","7b06502d":"code","a06f2b2b":"code","cbaf94a3":"code","86d6a594":"code","febfd304":"code","4058ac96":"code","3049b09f":"code","32e19b8b":"code","7dc6c582":"code","7b4bbea1":"code","5a8459c5":"code","ba0fe6e6":"code","f8aa4606":"code","ddded068":"code","82c148db":"code","cba8ad20":"code","ef0de5a3":"code","64d512e4":"code","6dcd8089":"code","ceb1d64b":"code","95286b0f":"code","e77123b9":"code","1865b214":"code","bbb63272":"code","cc09da2f":"code","8f731de5":"code","a2b34328":"code","d2c43b16":"code","7242b52e":"code","100dea8a":"code","4c4e6b5a":"markdown","dfb7ccbd":"markdown","573d63e3":"markdown","95dcb322":"markdown","94e40bea":"markdown","52b61f40":"markdown","7d2ffdb3":"markdown","e8e21f89":"markdown","b59a68c2":"markdown","f206f21e":"markdown","e4ab6ba6":"markdown","7600682e":"markdown","c5c413a8":"markdown","beffa304":"markdown","e1e3c51d":"markdown","f613f874":"markdown","a32b913e":"markdown","30c400fc":"markdown","a57431d3":"markdown","45d15dcf":"markdown","7d6c1587":"markdown","2756c597":"markdown","6dffba41":"markdown","641dd77a":"markdown","b14a5507":"markdown","34cc3d38":"markdown","bfce3cfb":"markdown","51c28a22":"markdown","c92c1175":"markdown","1788dc50":"markdown","22501da0":"markdown","e7de29b6":"markdown"},"source":{"9f36e2b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebd02063":"df = pd.read_csv(\"\/kaggle\/input\/covid19-and-its-impact-on-students\/COVID-19 Survey Student Responses.csv\")\nprint (df.shape)\ndf.head()","faa04e4a":"df['Time spent on TV'].replace('No tv', 0, inplace=True)\ndf['Time spent on TV'].replace('n', 0, inplace=True)\ndf['Time spent on TV'].replace('N', 0, inplace=True)\ndf['Time spent on TV'].replace(' ', 0, inplace=True)\ndf['Time spent on TV'] = df['Time spent on TV'].astype('float')\ndf['Prefered social media platform'] = df['Prefered social media platform'].replace('None ', 'None')\ndf['Prefered social media platform'] = df['Prefered social media platform'].replace('Whatsapp', 'WhatsApp')\ndf.rename(columns = {\"Health issue during lockdown\":\"Mental Health issue during lockdown\"}, inplace = True)","78d1ce94":"dict_ = df['Region of residence'].value_counts().to_dict()\nplt.figure(figsize=(10,10))\nplt.pie(x=dict_.values(), labels=dict_.keys(), autopct='%1.1f%%', \n        startangle=90, explode = [0.01, 0])\nplt.show()","13f1a2e9":"plt.figure(figsize=(12, 8))\nsns.set(style='darkgrid')\nsns.countplot(x='Age of Subject', data=df, palette='Set3')\nplt.yscale('log')\nplt.xlabel('Age of Subject', weight='bold')\nplt.ylabel('Number of Subjects', weight='bold')\nplt.show()","c4c28899":"dict_ = df['Medium for online class'].value_counts().to_dict()\nplt.figure(figsize=(12,12))\nplt.pie(x=dict_.values(),\n        startangle=0, explode=[0, 0.01, 0.05, 0.1, 0.2])\nplt.legend(labels=dict_.keys(), loc='upper right',shadow=True, facecolor='lightyellow')\nplt.show()","0e7d43dd":"plt.figure(figsize=(14,10))\nsns.set(style='darkgrid')\nsns.boxplot(data=df[['Time spent on Online Class','Time spent on self study','Time spent on fitness',\n                    'Time spent on sleep','Time spent on social media', 'Time spent on TV']],\n             orient='h', palette='Set3')\nplt.yticks(weight='bold')\nplt.show()","eb291697":"dict_ = df['Prefered social media platform'].value_counts().to_dict()\nplt.figure(figsize=(12,12))\nplt.pie(x=dict_.values(), startangle=0)\nplt.legend(labels=dict_.keys(), loc='upper right',shadow=True, facecolor='lightyellow')\nplt.show()","58a61846":"plt.figure(figsize=(12,8))\nsns.set(style='darkgrid')\nsns.countplot(y='Stress busters', data=df, order=df['Stress busters'].value_counts().index[:15], palette='Set3')\nplt.xlabel(\"Number of Subjects\", weight='bold')\nplt.ylabel(\"Stress buster activity\", weight='bold')\nplt.show()","107fecab":"plt.figure(figsize=(12,8))\nsns.set(style='darkgrid')\nsns.countplot(y='What you miss the most', data=df, order=df['What you miss the most'].value_counts().index[:10], palette='Set3')\nplt.xlabel(\"Number of Subjects\", weight='bold')\nplt.ylabel(\"What did they miss?\", weight='bold')\nplt.show()","75b66d96":"sns.countplot(y=\"Mental Health issue during lockdown\",data=df)","d79fdeb1":"sns.set(style='darkgrid')\nfig, ax = plt.subplots(3,2, figsize=(16,18))\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on Online Class', data=df, ax=ax[0,0])\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on self study', data=df, ax=ax[0,1])\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on fitness', data=df, ax=ax[1,0])\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on sleep', data=df, ax=ax[1,1])\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on social media', data=df, ax=ax[2,0])\nsns.violinplot(x='Mental Health issue during lockdown', y='Time spent on TV', data=df, ax=ax[2,1])\nplt.show()","575cc737":"plt.figure(figsize=(10,8))\nsns.set(style='darkgrid')\nsns.violinplot(y='Mental Health issue during lockdown', x='Age of Subject', data=df)\nplt.show()","ab1df96e":"plt.figure(figsize=(10,8))\nsns.set(style='darkgrid')\nsns.violinplot(y='Mental Health issue during lockdown', x='Number of meals per day', data=df)\nplt.show()","8aa67238":"df.head()","5744c89d":"df.columns","2571a9fc":"df.isnull().sum()","824502d3":"df=df.dropna()","5aaccbc2":"df.isnull().sum()","db618fcf":"print(df['Region of residence'].unique())\nprint(df['Rating of Online Class experience'].unique())\nprint(df['Medium for online class'].unique())\nprint(df['Prefered social media platform'].unique())\nprint(df['Change in your weight'].unique())\nprint(df['Mental Health issue during lockdown'].unique())\nprint(df['Time utilized'].unique())\nprint(df['Do you find yourself more connected with your family, close friends , relatives  ?'].unique())","9cb01a42":"model_data=df[['Region of residence','Age of Subject','Time spent on Online Class','Rating of Online Class experience','Medium for online class','Time spent on self study','Time spent on fitness','Time spent on social media','Prefered social media platform','Time spent on TV','Number of meals per day','Change in your weight','Time utilized','Do you find yourself more connected with your family, close friends , relatives  ?','Mental Health issue during lockdown']]","a6c33294":"model_data.head()","0227a05e":"data_encoded=pd.get_dummies(data=model_data,drop_first=True)\ndata_encoded.head()","ef982844":"data_encoded.columns","a5372b3d":"X=data_encoded[['Age of Subject', 'Time spent on Online Class',\n       'Time spent on self study', 'Time spent on fitness',\n       'Time spent on social media', 'Time spent on TV',\n       'Number of meals per day', 'Region of residence_Outside Delhi-NCR',\n       'Rating of Online Class experience_Excellent',\n       'Rating of Online Class experience_Good',\n       'Rating of Online Class experience_Poor',\n       'Rating of Online Class experience_Very poor',\n       'Medium for online class_Laptop\/Desktop',\n       'Medium for online class_Smartphone',\n       'Medium for online class_Smartphone or Laptop\/Desktop',\n       'Medium for online class_Tablet',\n       'Prefered social media platform_Facebook',\n       'Prefered social media platform_Instagram',\n       'Prefered social media platform_Linkedin',\n       'Prefered social media platform_None',\n       'Prefered social media platform_Quora',\n       'Prefered social media platform_Reddit',\n       'Prefered social media platform_Snapchat',\n       'Prefered social media platform_Talklife',\n       'Prefered social media platform_Telegram',\n       'Prefered social media platform_Twitter',\n       'Prefered social media platform_WhatsApp',\n       'Prefered social media platform_Youtube',\n       'Change in your weight_Increased',\n       'Change in your weight_Remain Constant', 'Time utilized_YES',\n       'Do you find yourself more connected with your family, close friends , relatives  ?_YES']]\ny=data_encoded['Mental Health issue during lockdown_YES']\nprint(X.head())\nprint(y.head())","f02bba15":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX=sc.fit_transform(X)\nX[:5]","6982dafd":"from sklearn.model_selection import train_test_split","7b06502d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","a06f2b2b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix","cbaf94a3":"model = LogisticRegression()","86d6a594":"model.fit(X_train, y_train)","febfd304":"print(confusion_matrix(y_test, model.predict(X_test)))\nprint(classification_report(y_test, model.predict(X_test)))","4058ac96":"from sklearn.naive_bayes import GaussianNB","3049b09f":"model = GaussianNB()","32e19b8b":"model.fit(X_train, y_train)","7dc6c582":"print(confusion_matrix(y_test, model.predict(X_test)))\nprint(classification_report(y_test, model.predict(X_test)))","7b4bbea1":"nb_classifier = GaussianNB()\n\nparams_NB = {'var_smoothing': np.logspace(0,-9, num=100)}\ngs_NB = GridSearchCV(estimator=nb_classifier, \n                 param_grid=params_NB, \n                 verbose=1, \n                 scoring='accuracy') \ngs_NB.fit(X_train, y_train)\n\ngs_NB.best_params_","5a8459c5":"model = GaussianNB(var_smoothing=1)","ba0fe6e6":"model.fit(X_train, y_train)","f8aa4606":"print(confusion_matrix(y_test, model.predict(X_test)))\nprint(classification_report(y_test, model.predict(X_test)))","ddded068":"from sklearn.ensemble import RandomForestClassifier","82c148db":"clf=RandomForestClassifier(n_estimators=100)","cba8ad20":"clf.fit(X_train,y_train)","ef0de5a3":"print(confusion_matrix(y_test, clf.predict(X_test)))\nprint(classification_report(y_test, clf.predict(X_test)))","64d512e4":"from keras.models import Sequential\nfrom keras.layers import Dense","6dcd8089":"classifier = Sequential()\nclassifier.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu', input_dim = 32))\nclassifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\nclassifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))","ceb1d64b":"classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","95286b0f":"classifier.fit(X_train, y_train, batch_size = 10, epochs = 100,verbose = 1)","e77123b9":"y_pred = classifier.predict(X_test)\ny_pred = (y_pred > 0.5)","1865b214":"print(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","bbb63272":"from keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom keras.models import Sequential\nfrom keras.layers import Dense\ndef build_classifier(optimizer):\n    classifier = Sequential()\n    classifier.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu', input_dim = 32))\n    classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = optimizer, loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier\nclassifier = KerasClassifier(build_fn = build_classifier)\nparameters = {'batch_size': [25, 32],\n              'epochs': [100, 200],\n              'optimizer': ['adam', 'rmsprop']}\ngrid_search = GridSearchCV(estimator = classifier,\n                           param_grid = parameters,\n                           scoring = 'accuracy',\n                           cv = 10)\ngrid_search = grid_search.fit(X_train, y_train,verbose = 0)\nbest_parameters = grid_search.best_params_\nbest_accuracy = grid_search.best_score_","cc09da2f":"print('Best Parameters after tuning: {}'.format(best_parameters))\nprint('Best Accuracy after tuning: {}'.format(best_accuracy))","8f731de5":"classifier = Sequential()\nclassifier.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu', input_dim = 32))\nclassifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\nclassifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))","a2b34328":"classifier.compile(optimizer = 'rmsprop', loss = 'binary_crossentropy', metrics = ['accuracy'])","d2c43b16":"classifier.fit(X_train, y_train, batch_size = 32, epochs = 100,verbose = 1)","7242b52e":"y_pred = classifier.predict(X_test)\ny_pred = (y_pred > 0.5)","100dea8a":"print(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","4c4e6b5a":"## **Load the data**","dfb7ccbd":"### **Splitting the Data into independent and dependent variables**","573d63e3":"### **Encoding Categorical Data**","95dcb322":"## **Pre-Processing of the data**","94e40bea":"### **Applying Random Forest and Evaluating it**","52b61f40":"### **Applying Standard Scaler to independent variables**","7d2ffdb3":"### **Seeing the categorical data**","e8e21f89":"### **Building ANN and Evaluating it**","b59a68c2":"## **2. How their Mental health has been impacted by various factors?**","f206f21e":"### **2.2 On their respective age?**","e4ab6ba6":"### **Show Data**","7600682e":"### **2.3. On the number of meals they had?**","c5c413a8":"### **Taking the data used to build the model**","beffa304":"## **1. Knowing about the Subjects**","e1e3c51d":"### **1.1. Which region they belong to?**","f613f874":"### **1.3. What devices they use for online learning**","a32b913e":"### **Applying Logistic Regression and Evaluatiing it**","30c400fc":"### **Checking Null data**","a57431d3":"### **Removing Null data**","45d15dcf":"### **2.1. How many of the students got Mental healt issue during the time?**","7d6c1587":"### **1.5. What is their preferred social media platform?** ","2756c597":"### **Splitting data into train and test data**","6dffba41":"### **1.4. How they spent their time?**","641dd77a":"### **1.2. What is the agewise distribution?**","b14a5507":"# **EDA and Visualisation**","34cc3d38":"### **1.6. What is their favourite stress buster?**","bfce3cfb":"# **Claification Model for Mental Health**","51c28a22":"### **2.1. The activities they spent their time on?**","c92c1175":"### **1.7. What did they miss the most?**","1788dc50":"### **Applying Na\u00efve Bayes and Evaluatiing it**","22501da0":"### **Tuning the ANN using Grid Search**","e7de29b6":"# **Impact of COVID-19 on Students(Mental Health) and Classification**\nCOVID-19 pandemic has drastically affected the life of students. All the way from classroom learning to the online classes in the lockdown, their lifestyle has changed dramatically.\nHere we are trying to understand the impact on a small data with few samples."}}