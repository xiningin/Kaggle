{"cell_type":{"05438bed":"code","2bc36cc3":"code","d7c292fc":"code","489b9dca":"code","d872b7ed":"code","c2096b6d":"code","36a8b66a":"code","b6d1b1c8":"code","0c5f5420":"code","b6ce3c8e":"code","dd639784":"code","f16e3836":"code","6ad897ea":"code","13090e23":"code","194de633":"code","6272058e":"code","266d1429":"code","3dc4b928":"code","40f5b76a":"code","87d65e7e":"code","fb3fb8c0":"code","dba5565c":"code","92a5012c":"code","6b599b1c":"code","6f54108e":"code","6925315c":"code","481ecebe":"code","b5a7ca8c":"code","20afd2ca":"code","dbaa9451":"code","19a18cbf":"code","295c0112":"code","6e78a914":"code","50bd75bf":"code","52a5fe3c":"code","d791c744":"code","f8315aec":"code","828e3c47":"code","c081a539":"code","3a669c95":"code","632f31c1":"code","9d11add6":"code","9a3cd0e9":"code","74a850b7":"code","0248f3db":"code","c6414c71":"code","96c933e3":"code","fe57340e":"code","d8d7b00b":"code","d670e5a9":"code","65086b1b":"code","164d999f":"code","8dab6628":"code","656918c5":"code","65c31d66":"code","0dfea6b1":"code","4ca806cf":"code","d38ae932":"code","7f4b1cfd":"code","2f4cacee":"code","0356b232":"code","1416fe36":"code","0163068b":"code","3b86c71b":"code","c705b992":"code","90d6bf43":"code","992fc851":"code","59578fe0":"code","9015de2d":"code","0f698594":"code","8f9c847d":"code","1632e5ee":"code","c170bf13":"code","acefe48c":"code","098adcb0":"code","d71b74fe":"code","7dd7c0d5":"code","0de8474e":"code","75e06cf2":"code","575d0b5b":"code","e413af0e":"code","bf83a6e0":"code","f124a4ec":"code","80538d41":"code","13903e47":"code","b62bd6e8":"code","d6ba694a":"code","0e8f5a9f":"code","abd7f477":"code","3bc66419":"markdown","73aae9d2":"markdown","41837a63":"markdown","e8156358":"markdown","8738d29c":"markdown","d6148d78":"markdown","bcdc7e89":"markdown","55558567":"markdown","a4e7738e":"markdown","cea5ac0e":"markdown","57551bed":"markdown","e531ca7e":"markdown","5100c8a6":"markdown","ef041d1f":"markdown","3a2e5e21":"markdown","604a2187":"markdown","40d98271":"markdown","61a1c1dc":"markdown","70797510":"markdown","02ac56ba":"markdown","10a9aeaa":"markdown","8a6d5dcb":"markdown","a8b273bf":"markdown","89a25cf4":"markdown","283c6ec8":"markdown","13e15488":"markdown","91cd4d12":"markdown","b46653ce":"markdown","542f6225":"markdown","562c8117":"markdown","2923d9b9":"markdown","e4f8b37c":"markdown","37b15431":"markdown","a2a3d1b4":"markdown","3c1413da":"markdown","b05da17d":"markdown","a80c519c":"markdown","f79cb90f":"markdown"},"source":{"05438bed":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation, Dropout\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras import callbacks\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import precision_score, recall_score, confusion_matrix, classification_report, accuracy_score, f1_score","2bc36cc3":"sns.set_theme(style=\"white\")","d7c292fc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","489b9dca":"df = pd.read_csv(\"\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","d872b7ed":"df.info()","c2096b6d":"df.describe().T","36a8b66a":"df.isna().sum()","b6d1b1c8":"df.head(10)","0c5f5420":"df.tail(10)","b6ce3c8e":"df.sample(10)","dd639784":"corr = df.corr()","f16e3836":"plt.figure(figsize=(12,10))\nsns.heatmap(df.corr(), annot=True, cmap='BrBG')\nplt.title(\"Correlation Heatmap\");","6ad897ea":"df[\"DEATH_EVENT\"].value_counts()","13090e23":"sns.countplot(x = \"DEATH_EVENT\", data=df)","194de633":"print(\"Age values are distributed between {0} and {1} plus. Box plot also says that there is no any outlier value.\".format(df['age'].min(), df['age'].max()))","6272058e":"df[\"age\"].describe()","266d1429":"fig, ax = plt.subplots(figsize=(8,6))\ndf[df[\"DEATH_EVENT\"] == 1][\"age\"].hist(bins=10, color=\"red\", ax=ax);","3dc4b928":"fig, ax = plt.subplots(figsize=(8,6))\ndf[df[\"DEATH_EVENT\"] == 0][\"age\"].hist(bins=10, color=\"green\", ax=ax);","40f5b76a":"fig, ax = plt.subplots(figsize=(8,6))\nsns.kdeplot(df[df[\"DEATH_EVENT\"]==0][\"age\"], shade=True, color=\"green\", label=\"live\", ax=ax)\nsns.kdeplot(df[df[\"DEATH_EVENT\"]==1][\"age\"], shade=True, color=\"red\", label=\"dead\", ax=ax)\nax.set_xlabel(\"age\")\nax.set_ylabel(\"DEATH_EVENT\")\nax.legend()\nfig.suptitle(\"Age - DEATH_EVENT\");","87d65e7e":"plt.hist(df.age, bins=10)\nplt.show()","fb3fb8c0":"sns.boxplot(x='age', data=df);","dba5565c":"plt.figure(figsize=(12, 10))\nsns.boxplot(x='DEATH_EVENT', y='age', data=df);","92a5012c":"plt.figure(figsize=(12,10))\nsns.boxplot(x='sex', y='age', hue='DEATH_EVENT', data=df).set_xticklabels(labels=['Woman', 'Man']);\nplt.title(\"Sex - Age \/ lights on DEATH_EVENT\");","6b599b1c":"df['anaemia'].unique()","6f54108e":"sns.countplot(x = \"anaemia\", data=df);","6925315c":"sns.countplot(x=\"anaemia\", hue=\"DEATH_EVENT\", data=df);","481ecebe":"plt.figure(figsize=(12,10))\nsns.violinplot(data = df, x='anaemia', y='time', hue='DEATH_EVENT');","b5a7ca8c":"sns.countplot(x = \"smoking\", data=df);","20afd2ca":"plt.figure(figsize=(12,10))\nsns.violinplot(data = df, x='smoking', y='time', hue='DEATH_EVENT');","dbaa9451":"sns.countplot(x=\"smoking\", hue=\"DEATH_EVENT\", data=df);","19a18cbf":"sns.countplot(x = \"diabetes\", data=df);","295c0112":"sns.countplot(x=\"diabetes\", hue=\"DEATH_EVENT\", data=df);","6e78a914":"df.creatinine_phosphokinase.value_counts()","50bd75bf":"plt.hist(df.creatinine_phosphokinase, bins=10)\nplt.show()","52a5fe3c":"plt.figure(figsize=(12,10))\nsns.boxplot(x=\"creatinine_phosphokinase\", data=df);","d791c744":"plt.figure(figsize=(12,10))\nsns.boxplot(x='DEATH_EVENT', y='creatinine_phosphokinase', data=df);","f8315aec":"X = df.drop([\"DEATH_EVENT\"], axis=1)\ny = df[\"DEATH_EVENT\"]\ncol_names = X.columns","828e3c47":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\nprint(X_train.shape)\nprint(X_test.shape)","c081a539":"scaler = StandardScaler()","3a669c95":"X_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\nX_df = pd.DataFrame(X_train, columns=col_names) ","632f31c1":"X_df","9d11add6":"early_stopping = callbacks.EarlyStopping(min_delta=0.001, patience=20, restore_best_weights=True)","9a3cd0e9":"model = Sequential()","74a850b7":"model.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu', input_dim = 12))\nmodel.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))","0248f3db":"model.summary()","c6414c71":"from tensorflow.keras.utils import plot_model\nplot_model(model, to_file='model.png', show_shapes=True,show_layer_names=True)","96c933e3":"learning_rate = .001\nadam0 = Adam(learning_rate = learning_rate)","fe57340e":"model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","d8d7b00b":"model_history = model.fit(X_train, y_train, batch_size = 32, epochs = 500, callbacks=[early_stopping], validation_split=0.2)","d670e5a9":"val_accuracy = np.mean(model_history.history['val_accuracy'])\nprint(\"\\n%s: %.2f%%\" % ('val_accuracy', val_accuracy*100))","65086b1b":"h_df = pd.DataFrame(model_history.history)","164d999f":"h_df","8dab6628":"history_df = pd.DataFrame(model_history.history)\n\nplt.plot(history_df.loc[:, ['loss']], \"#6daa9f\", label='Training loss')\nplt.plot(history_df.loc[:, ['val_loss']],\"#774571\", label='Validation loss')\nplt.title('Training and Validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(loc=\"best\")\n\nplt.show()","656918c5":"history_df = pd.DataFrame(model_history.history)\n\nplt.plot(history_df.loc[:, ['accuracy']], \"#6daa9f\", label='Training accuracy')\nplt.plot(history_df.loc[:, ['val_accuracy']], \"#774571\", label='Validation accuracy')\n\nplt.title('Training and Validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","65c31d66":"y_pred = model.predict(X_test)\ny_pred = (y_pred > 0.5)\nnp.set_printoptions()","0dfea6b1":"cmap1 = sns.diverging_palette(275,150,  s=40, l=65, n=6)\nplt.subplots(figsize=(12,8))\ncf_matrix = confusion_matrix(y_test, y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), cmap = cmap1, annot = True, annot_kws = {'size':15})","4ca806cf":"cf_matrix","d38ae932":"print(classification_report(y_test, y_pred))","7f4b1cfd":"early_stopping2 = callbacks.EarlyStopping(min_delta=0.001, patience=20, restore_best_weights=True)","2f4cacee":"model2 = Sequential()","0356b232":"model2.add(Dense(units = 64, kernel_initializer = 'uniform', activation = 'relu', input_dim = 12))\nmodel2.add(Dense(units = 32, kernel_initializer = 'uniform', activation = 'relu'))\nmodel2.add(Dropout(0.25))\nmodel2.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu'))\nmodel2.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))\nmodel2.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'relu'))\nmodel2.add(Dropout(0.25))\nmodel2.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))","1416fe36":"model2.summary()","0163068b":"plot_model(model2, to_file='model2.png', show_shapes=True,show_layer_names=True)","3b86c71b":"model2.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","c705b992":"model_history2 = model2.fit(X_train, y_train, batch_size = 32, epochs = 500, callbacks=[early_stopping2], validation_split=0.2)","90d6bf43":"val_accuracy2 = np.mean(model_history2.history['val_accuracy'])\nprint(\"\\n%s: %.2f%%\" % ('val_accuracy', val_accuracy2*100))","992fc851":"h_df2 = pd.DataFrame(model_history2.history)","59578fe0":"h_df2","9015de2d":"history_df2 = pd.DataFrame(model_history2.history)\n\nplt.plot(history_df2.loc[:, ['loss']], \"#6daa9f\", label='Training loss')\nplt.plot(history_df2.loc[:, ['val_loss']],\"#774571\", label='Validation loss')\nplt.title('Training and Validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(loc=\"best\")\n\nplt.show()","0f698594":"history_df2 = pd.DataFrame(model_history2.history)\n\nplt.plot(history_df2.loc[:, ['accuracy']], \"#6daa9f\", label='Training accuracy')\nplt.plot(history_df2.loc[:, ['val_accuracy']], \"#774571\", label='Validation accuracy')\n\nplt.title('Training and Validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","8f9c847d":"y_pred2 = model2.predict(X_test)\ny_pred2 = (y_pred2 > 0.5)\nnp.set_printoptions()","1632e5ee":"cmap2 = sns.diverging_palette(275,150,  s=40, l=65, n=6)\nplt.subplots(figsize=(12,8))\ncf_matrix2 = confusion_matrix(y_test, y_pred2)\nsns.heatmap(cf_matrix2\/np.sum(cf_matrix2), cmap = cmap2, annot = True, annot_kws = {'size':15})","c170bf13":"cf_matrix2","acefe48c":"print(classification_report(y_test, y_pred2))","098adcb0":"model3 = Sequential()","d71b74fe":"model3.add(Dense(units = 32, kernel_initializer = 'uniform', activation = 'relu', input_dim = 12))\nmodel3.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu'))\nmodel3.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))","7dd7c0d5":"model3.summary()","0de8474e":"plot_model(model3, to_file='model3.png', show_shapes=True,show_layer_names=True)","75e06cf2":"model3.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","575d0b5b":"model_history3 = model3.fit(X_train, y_train, batch_size = 32, epochs = 100, validation_split=0.2)","e413af0e":"val_accuracy3 = np.mean(model_history3.history['val_accuracy'])\nprint(\"\\n%s: %.2f%%\" % ('val_accuracy', val_accuracy3*100))","bf83a6e0":"h_df3 = pd.DataFrame(model_history3.history)","f124a4ec":"h_df3","80538d41":"history_df3 = pd.DataFrame(model_history3.history)\n\nplt.plot(history_df3.loc[:, ['loss']], \"#6daa9f\", label='Training loss')\nplt.plot(history_df3.loc[:, ['val_loss']],\"#774571\", label='Validation loss')\nplt.title('Training and Validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(loc=\"best\")\n\nplt.show()","13903e47":"history_df3 = pd.DataFrame(model_history3.history)\n\nplt.plot(history_df3.loc[:, ['accuracy']], \"#6daa9f\", label='Training accuracy')\nplt.plot(history_df3.loc[:, ['val_accuracy']], \"#774571\", label='Validation accuracy')\n\nplt.title('Training and Validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","b62bd6e8":"y_pred3 = model3.predict(X_test)\ny_pred3 = (y_pred3 > 0.5)\nnp.set_printoptions()","d6ba694a":"cmap3 = sns.diverging_palette(275,150,  s=40, l=65, n=6)\nplt.subplots(figsize=(12,8))\ncf_matrix3 = confusion_matrix(y_test, y_pred3)\nsns.heatmap(cf_matrix3\/np.sum(cf_matrix), cmap = cmap3, annot = True, annot_kws = {'size':15})","0e8f5a9f":"cf_matrix3","abd7f477":"print(classification_report(y_test, y_pred3))","3bc66419":"### Model 2","73aae9d2":"# <center>Heart Failure Prediction with Artifical Neural Network<\/center>","41837a63":"### Model 3","e8156358":"### Smoking","8738d29c":"- age : Age of patients\n- anaemia : Hastalar\u0131n kan de\u011ferlerinin normalin alt\u0131nda olma durumu\n- creatinine_phosphokinase : Hastan\u0131n kan\u0131ndaki CPK enziminin de\u011feri\n- diabetes : Hastan\u0131n \u015feker hastas\u0131 olup olmad\u0131\u011f\u0131\n- ejection_fraction : Hastan\u0131n kalbinin her kas\u0131lmas\u0131nda kalpten \u00e7\u0131kan kan\u0131n y\u00fczdesi\n- high_blood_pressure : Hastan\u0131n y\u00fcksek tansiyonunun olup olmad\u0131\u011f\u0131\n- platelets : Hastan\u0131n kan\u0131ndaki trombosit miktar\u0131\n- serum_creatinine : Hastan\u0131n kan\u0131ndaki kreatinin seviyesi\n- serum_sodium : Kandaki sodyum seviyesi\n- sex : Hastan\u0131n cinsiyeti 0:Kad\u0131n , 1:Erkek\n- smoking : Hastan\u0131n sigara i\u00e7ip i\u00e7meme durumu\n- time : Hastan\u0131n takip edilme s\u00fcresi (g\u00fcnl\u00fck)\n- DEATH_EVENT : Hastan\u0131n takip edildi\u011fi s\u00fcre i\u00e7inde \u00f6l\u00fcp \u00f6lmeme durumu","d6148d78":"### DEATH_EVENT ","bcdc7e89":"There are 299 medical records of heart failure patients with 13 features. DEATH_EVENT is the dependent variable. ","55558567":"There is no any missing value.","a4e7738e":"Viewing the first 10 rows.","cea5ac0e":"### Load Data","57551bed":"### Creatinine Phosphokinase","e531ca7e":"Age distribution on DEATH_EVENT equals 1 (dead status)","5100c8a6":"* Negative correlation between time and DEATH_EVENT\n* Positive correlation between age-DEATH_EVENT and serum_creatinine-DEATH_EVENT. \n* Other variables have Neutral correlation with DEATH_EVENT changes doesn't affect to DEATH_EVENT.","ef041d1f":"When we look at the age - death relations with gender.","3a2e5e21":"Viewing random 10 rows. ","604a2187":"### Diabetes","40d98271":"### Importing libraries","61a1c1dc":"Viewing the last 10 rows.","70797510":"### Anaemia","02ac56ba":"\n## Exploratory Data Analysis","10a9aeaa":"<b>Correlation Analysis<\/b>","8a6d5dcb":"---","a8b273bf":"All attributes and their data types.","89a25cf4":"Age values are distributed between 40 and 95 plus. Box plot also says that there is no any outlier value.","283c6ec8":"Describing dataset (output is transformed)","13e15488":"<span style=\"color:red;\">The dataset appears imbalanced.<\/span>","91cd4d12":"The distribution of age values on DEATH_EVENT says deaths occur in older people.","b46653ce":"### Age","542f6225":"* Using early_stopping\n* 4 Dense, 2 Dropout\n* 500 epochs (because there is early_stopping)","562c8117":"-----","2923d9b9":"0 => Patient is alive.<\/br>\n1 => Patient is dead.","e4f8b37c":"### Model 1","37b15431":"### Creating ANN Model","a2a3d1b4":"EDA (Exploratory Data Analysis) is very important part for understanding the dataset correctly.","3c1413da":"Is there any missing value in dataset?","b05da17d":"-----","a80c519c":"## Split Data into Train and Test","f79cb90f":"Age distribution on DEATH_EVENT equals 0 (alive status)"}}