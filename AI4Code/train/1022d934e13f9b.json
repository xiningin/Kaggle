{"cell_type":{"f18c9b26":"code","c59601d3":"code","00d2d70b":"code","9a4f99c4":"code","ae017a99":"code","48a09898":"code","ac4f367b":"code","a58fef0c":"code","fee9b0b0":"code","47c1b080":"code","35e5e6e1":"code","68f06858":"code","a9351634":"code","90e2b4be":"code","b0b4f32b":"code","3bf785db":"code","487bdda0":"code","34df3ce9":"code","60c55513":"code","45a457df":"code","4c804e2a":"code","4ea7e197":"code","601bead4":"code","2a343e6a":"code","d5fada40":"code","d1a8dd2e":"code","79b08af7":"code","7b1c8e17":"code","0b093d7f":"markdown","67fbcfbe":"markdown","7c9e9e83":"markdown"},"source":{"f18c9b26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c59601d3":"# Schauen wir uns zun\u00e4chst die README an f\u00fcr einen ersten Einblick\nwith open('\/kaggle\/input\/sleepstudypilot\/README.md') as f:\n    for line in f.readlines():\n        print(line)","00d2d70b":"# Laden der Datei\ndf = pd.read_csv(\"\/kaggle\/input\/sleepstudypilot\/SleepStudyData.csv\")","9a4f99c4":"# Datensatz anschauen (die ersten 5 Eintr\u00e4ge)\ndf.head()","ae017a99":"# Oder alternativ die letzten 5 Eintr\u00e4ge\ndf.tail()","48a09898":"# Informationen\ndf.info()","ac4f367b":"df.Hours\n#df['Hours']  # Alternativ","a58fef0c":"df.head()","fee9b0b0":"df.iloc[1][4]","47c1b080":"df.loc[0]['Hours']","35e5e6e1":"df[df.Hours < 6].head()","68f06858":"df[df.Breakfast == \"Yes\"].head()","a9351634":"df[df.Breakfast == \"Yes\"].count()","90e2b4be":"df[df.Hours.isnull()]","b0b4f32b":"df.describe()","3bf785db":"df_enough = df.groupby(['Enough'])\ndf_enough.describe()","487bdda0":"# L\u00f6sung 1\n\ndf_breakfast = df[df.Breakfast == 'Yes']\ndf_breakfast.describe()","34df3ce9":"# L\u00f6sung 2\ndf.groupby(['Breakfast']).describe()","60c55513":"# Cleaning\ndf_copy = df\ndf_copy[df_copy.Hours.isnull()]","45a457df":"breakfast_mean = round(df_copy[df.Breakfast == 'Yes'].Hours.mean(), 2)\nprint(breakfast_mean)","4c804e2a":"# Vorher\nprint(df_copy.loc[65][\"Hours\"], df_copy.loc[91][\"Hours\"]) ","4ea7e197":"\ndf_copy = df_copy.fillna(breakfast_mean)","601bead4":"# Nachher\nprint(df_copy.loc[65][\"Hours\"], df_copy.loc[91][\"Hours\"]) ","2a343e6a":"df_copy.info()","d5fada40":"# Correltaion\n\ndf_copy.corr()","d1a8dd2e":"df_gr = df_copy.groupby([\"Breakfast\", \"PhoneReach\"])","79b08af7":"df_gr.describe()","7b1c8e17":"df_gr.corr()","0b093d7f":"# Aufgabe\nFinden Sie heraus wieviele der Teilnehmenden einen M\u00fcdigkeitsstatus von 5 haben \nund wie viel Stunden Sie im Schnitt an Schlaf hatten","67fbcfbe":"# Aufgabe\nWie viele der Teilnehmer fr\u00fchst\u00fccken regelm\u00e4\u00dfig.\nWie m\u00fcde f\u00fchlen sich Teilnehmer im Schnitt, die morgens fr\u00fchst\u00fccken?","7c9e9e83":"# Hausaufgabe\n\nFindet heraus ob die Teilnehmer die nicht fr\u00fchst\u00fccken eher dazu neigen \nsich M\u00fcde zu f\u00fchlen"}}