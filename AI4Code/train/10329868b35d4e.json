{"cell_type":{"5a797937":"code","f0387090":"code","fa72b38d":"code","5a8d04be":"code","4900ec4d":"code","f72c19a5":"code","97593353":"code","f004d60d":"code","6f2d148c":"code","dfa78a2e":"code","28bf8341":"code","f130ab88":"code","92f6d7a5":"code","b3dbc60e":"code","268d425a":"code","55eb052c":"code","c23b8627":"code","b9b342fe":"code","2a5e5d9a":"code","5a3b0a9f":"code","724180e7":"code","18317324":"code","ccd00d14":"code","3043af5d":"code","770ee942":"code","430bcb51":"code","ac0b38d5":"code","ce6fa8b5":"code","5eab76c9":"code","366935a2":"code","b7a2349d":"code","d2029ab0":"code","14168d2f":"code","2d94e534":"code","d46ce7ca":"code","e4992f29":"code","577f83c2":"code","f38efc50":"code","d3d6a4d2":"code","66f92a52":"code","ff0fc92b":"code","f6a437ed":"code","1641a375":"code","b67b4c47":"code","a2fed052":"code","84d3bc18":"code","28ff4e12":"code","205cf703":"code","904016af":"code","89f18bef":"code","3b52ec81":"code","6d84c5d4":"code","b48eefb4":"code","2e0849f2":"code","b023a94d":"code","91c27eb2":"code","9caa15b0":"code","85930505":"code","7c387edf":"code","4e19e0ff":"code","980994f0":"code","65db96b6":"code","60492907":"code","063e2a8b":"code","785bc71f":"code","d492f0ea":"code","1d594396":"code","9b497f23":"code","4a74f759":"code","f1fcf6e4":"code","65963d44":"code","26a79eb3":"code","86536520":"code","4b434d9e":"code","d26efc42":"code","fdd6b05a":"code","3d58b204":"code","792b068b":"code","ecf4a34c":"code","05fa7c6a":"code","3f86dc10":"code","0520f94a":"code","9553bc91":"code","eb5d14fa":"code","ff8cfe09":"code","8dd8100c":"code","6dc17f6e":"code","655c4466":"code","0f4d3e93":"code","1c46df4c":"code","36bda1ee":"code","84e39ee6":"code","3e5d4ceb":"code","a0fc5f4f":"code","b20ebad5":"code","20a9062e":"code","79185d1f":"code","b73d8fe4":"code","d88d0e66":"code","0631910c":"code","875b228e":"code","aece3dd7":"code","a31484f2":"code","52e3df12":"code","e3ea27be":"code","720d0707":"code","3eb1872c":"code","f28fed49":"code","3b9799ce":"code","7ab3e38a":"code","142909a2":"code","243c80dc":"code","996c175a":"code","781ff9a0":"code","0df7ed82":"code","4f798709":"code","d7a07b9b":"code","3dad83e8":"code","a7ef5d95":"code","dcbeefe7":"code","57e6a047":"code","e9448a80":"markdown","35b9caed":"markdown","84714890":"markdown","cd7ca039":"markdown","760352a3":"markdown","c2dfe940":"markdown","c8e23fb4":"markdown","63ea48f0":"markdown","5f8949ae":"markdown","47a53358":"markdown","35f9d8cd":"markdown","8dd594cd":"markdown","90b84b72":"markdown","f5d1d683":"markdown","938e8a0c":"markdown","f29996cb":"markdown","cf7421b8":"markdown","4d50cccc":"markdown","7a0c46e6":"markdown","b668ca41":"markdown","8e2b7c82":"markdown","dab50bac":"markdown","d7cef1ab":"markdown","0e174ad2":"markdown","489a9585":"markdown","5572ef49":"markdown","9ee75f96":"markdown","bce0c89f":"markdown","1889d02f":"markdown","7de0451c":"markdown","2ad678e2":"markdown","8a51c909":"markdown","2d1d422c":"markdown","57a65575":"markdown","2865950d":"markdown","b27ef09a":"markdown","a43a7213":"markdown","7536e2c2":"markdown","612250b6":"markdown","5b9df9bb":"markdown","25b1dcad":"markdown","a91d3648":"markdown","3bfcb3d9":"markdown"},"source":{"5a797937":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","f0387090":"df=pd.read_csv(r\"..\/input\/engineering-placements-prediction\/collegePlace.csv\")","fa72b38d":"df.head()","5a8d04be":"df.isna().sum()","4900ec4d":"df.duplicated().sum()","f72c19a5":"df[df.duplicated()]","97593353":"df.info()","f004d60d":"df.describe().T","6f2d148c":"plt.figure(figsize=(12,5))\nsns.countplot(data=df,x=\"PlacedOrNot\")\nplt.title(\"Placed or Not (0:No,1:yes)\");","dfa78a2e":"labels = \"0\",\"1\"\nsizes = [df[\"PlacedOrNot\"].value_counts()[0],df[\"PlacedOrNot\"].value_counts()[1]]\n\n\nfig1, ax1 = plt.subplots(figsize=(15,7))\nax1.pie(sizes,labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\n\nplt.title(\"Placed or Not Pie Chart\")\n\nplt.show()","28bf8341":"sns.pairplot(df,hue=\"PlacedOrNot\");","f130ab88":"df = df.astype({\"Hostel\": object, \"PlacedOrNot\": object,\"HistoryOfBacklogs\":object})","92f6d7a5":"def Count_Values(dataframe):\n    categorical=dataframe.select_dtypes(include=\"object\").columns.values.tolist()\n    for col in categorical:\n        print(f\"Value Counts in {col} is: \\n {dataframe[col].value_counts()}\")\n        print(\"\\n\")\nCount_Values(df)","b3dbc60e":"plt.figure(figsize=(12,5))\nsns.countplot(data=df,x=\"Gender\",hue=\"PlacedOrNot\");","268d425a":"plt.figure(figsize=(12,5))\nsns.countplot(data=df,x=\"Stream\",hue=\"PlacedOrNot\")\nplt.xticks(rotation=90);","55eb052c":"plt.figure(figsize=(12,5))\nsns.countplot(data=df,x=\"Hostel\",hue=\"PlacedOrNot\");","c23b8627":"plt.figure(figsize=(12,5))\nsns.countplot(data=df,x=\"HistoryOfBacklogs\",hue=\"PlacedOrNot\");","b9b342fe":"plt.figure(figsize=(14,6))\nsns.histplot(data=df,x=\"Age\",bins=10,kde=True,hue=\"PlacedOrNot\",multiple=\"stack\");","2a5e5d9a":"plt.figure(figsize=(14,6))\nsns.histplot(data=df,x=\"Internships\",bins=4,kde=True,hue=\"PlacedOrNot\",multiple=\"stack\");","5a3b0a9f":"plt.figure(figsize=(14,6))\nsns.histplot(data=df,x=\"CGPA\",bins=5,kde=True,hue=\"PlacedOrNot\",multiple=\"stack\");","724180e7":"sns.displot(df,x=\"PlacedOrNot\",col=\"Gender\",color=\"red\");","18317324":"sns.displot(df,x=\"PlacedOrNot\",col=\"Stream\",color=\"Red\");","ccd00d14":"\nsns.catplot(x=\"Age\", y=\"CGPA\", kind=\"violin\",data=df);","3043af5d":"plt.figure(figsize=(16,8),dpi=200)\nsns.countplot(x=\"Stream\",data=df,hue=\"Gender\");","770ee942":"plt.figure(figsize=(16,8),dpi=200)\nsns.countplot(x=\"Internships\",data=df,hue=\"Gender\");","430bcb51":"plt.figure(figsize=(16,8),dpi=200)\nsns.countplot(x=\"Hostel\",data=df,hue=\"Gender\");","ac0b38d5":"plt.figure(figsize=(16,8),dpi=200)\nsns.countplot(x=\"CGPA\",data=df,hue=\"Gender\");","ce6fa8b5":"plt.figure(figsize=(16,8),dpi=200)\nsns.countplot(x=\"HistoryOfBacklogs\",data=df,hue=\"Gender\");","5eab76c9":"sns.lineplot(data=df,x=\"Age\",y=\"CGPA\",hue=\"PlacedOrNot\");","366935a2":"plt.figure(figsize=(16,8),dpi=200)\nsns.boxplot(data=df,x=\"Stream\",y=\"CGPA\");","b7a2349d":"plt.figure(figsize=(16,8),dpi=200)\nsns.boxplot(data=df,x=\"Age\",y=\"CGPA\");","d2029ab0":"sns.boxplot(data=df,x=\"PlacedOrNot\",y=\"CGPA\");","14168d2f":"sns.boxplot(data=df,x=\"PlacedOrNot\",y=\"Age\");","2d94e534":"sns.boxplot(data=df,x=\"PlacedOrNot\",y=\"Internships\");","d46ce7ca":"from mpl_toolkits.mplot3d import Axes3D\n\nfig=plt.figure(figsize=(16,8))\nax=fig.add_subplot(111,projection=\"3d\")\n\nax.scatter(df[\"Age\"],df[\"CGPA\"],df[\"PlacedOrNot\"],c=df[\"PlacedOrNot\"])\n\n\nax.set_xlabel('Age')\nax.set_ylabel('CGPA')\nax.set_zlabel('Placed or Not')\n\nplt.show();","e4992f29":"def Label_Encoder(dataframe):\n    from sklearn.preprocessing import LabelEncoder\n    cat_cols = [col for col in dataframe.columns if dataframe[col].dtype == 'O']\n    num_cols = [col for col in dataframe.columns if dataframe[col].dtype =='float64' or dataframe[col].dtype==\"int64\"]\n    dataframe2=dataframe.copy()\n    subset=cat_cols\n    subset2=num_cols\n    dataframe2.drop(subset2,axis=1,inplace=True)\n    dataframe2=dataframe2.apply(LabelEncoder().fit_transform)\n    dataframe.drop(subset,axis=1,inplace=True)\n    final_dataframe=pd.concat([dataframe,dataframe2],axis=1)\n    \n    return final_dataframe\ndf=Label_Encoder(df)\ndf.head()","577f83c2":"def Corr(dataframe,target_variable):\n    import seaborn as sns\n    import matplotlib.pyplot as plt\n    \n    fig, ax = plt.subplots(figsize=(15,15))\n    correlation_matrix = dataframe.corr().round(2)\n    sns.heatmap(data=correlation_matrix, annot=True,cmap=\"viridis\")\n    \n    correlation = dataframe.corr()[target_variable].abs().sort_values(ascending = False)\n    \n    return correlation\n\nCorr(df,\"PlacedOrNot\")","f38efc50":"X=df.drop(\"PlacedOrNot\",axis=1)\ny=df[\"PlacedOrNot\"]","d3d6a4d2":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","66f92a52":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=101)\nscaler=StandardScaler()\n\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)","ff0fc92b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV","f6a437ed":"lr=LogisticRegression(solver=\"liblinear\",multi_class=\"ovr\")\npenalty=[\"l1\",\"l2\",\"elasticnet\"]\nl1_ratio=np.linspace(0,1,20)\nC= np.logspace(0,10,20)\nparamgrid={\"penalty\":penalty,\n           \"l1_ratio\":l1_ratio,\n           \"C\":C}","1641a375":"grid_model=GridSearchCV(lr,paramgrid,verbose=1)\ngrid_model.fit(X_train,y_train)","b67b4c47":"grid_model.best_params_","a2fed052":"lr=LogisticRegression(solver=\"liblinear\",multi_class=\"ovr\",C=1.0,penalty=\"l1\")\nlr.fit(X_train,y_train)","84d3bc18":"preds=lr.predict(X_train)\npreds2=lr.predict(X_test)","28ff4e12":"from sklearn.metrics import accuracy_score,plot_confusion_matrix,classification_report,plot_roc_curve","205cf703":"lr_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","904016af":"print(classification_report(y_test,preds2))","89f18bef":"plot_confusion_matrix(lr,X_test,y_test);","3b52ec81":"fig,ax=plt.subplots(figsize=(12,6),dpi=100)\nplot_roc_curve(lr,X_test,y_test,ax=ax);","6d84c5d4":"from sklearn.neighbors import KNeighborsClassifier","b48eefb4":"acc=[]\nfor n in range(1,36):\n    KNC=KNeighborsClassifier(n_neighbors=n)\n    KNC.fit(X_train,y_train)\n    y_pred= KNC.predict(X_test)\n    acc.append(accuracy_score(y_test,y_pred))\n\nplt.figure(figsize=(14,7))\nsns.lineplot(x=np.arange(1,36),y=acc,color=\"green\")\nplt.ylabel(\"Accuracy_Score (test)\")\nplt.xlabel(\"n_neighbors\");","2e0849f2":"KNC=KNeighborsClassifier(n_neighbors=2)\nKNC.fit(X_train,y_train)\npreds=KNC.predict(X_train)\npreds2=KNC.predict(X_test)\n","b023a94d":"knc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","91c27eb2":"print(classification_report(y_test,preds2))","9caa15b0":"plot_confusion_matrix(KNC,X_test,y_test);","85930505":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(KNC,X_test,y_test,ax=ax);","7c387edf":"import plotly.express as px\ny_score = KNC.predict_proba(X_test)[:, 1]\n\nfig = px.scatter(\n    X_test, x=0, y=1,\n    color=y_score, color_continuous_scale='RdBu',\n    symbol=y_test, symbol_map={'0': 'square-dot', '1': 'circle-dot'},\n    labels={'symbol': 'label', 'color': 'score of <br>first class'}\n)\nfig.update_traces(marker_size=12, marker_line_width=1.5)\nfig.update_layout(legend_orientation='h')\nfig.show()","4e19e0ff":"from sklearn.tree import DecisionTreeClassifier","980994f0":"dt=DecisionTreeClassifier()\nparamgrid={\n    \"criterion\":[\"gini\",\"entropy\"],\n    \"max_depth\":[2,4,6,8,10],\n    \"max_leaf_nodes\":[3,6,9,12]\n}","65db96b6":"grid_model=GridSearchCV(dt,paramgrid,verbose=1)\ngrid_model.fit(X_train,y_train)","60492907":"grid_model.best_params_","063e2a8b":"dt=DecisionTreeClassifier(criterion=\"entropy\",max_depth=4,max_leaf_nodes=9)\ndt.fit(X_train,y_train)","785bc71f":"preds=dt.predict(X_train)\npreds2=dt.predict(X_test)","d492f0ea":"dt_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","1d594396":"print(classification_report(y_test,preds2))","9b497f23":"plot_confusion_matrix(dt,X_test,y_test);","4a74f759":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(dt,X_test,y_test,ax=ax);","f1fcf6e4":"plt.figure(figsize=(14,6))\nsns.barplot(x=X.columns,y=dt.feature_importances_)\nplt.title(\"Feature Importance\")\nplt.axhline(y=0.825,ls=\"--\",color=\"red\")\nplt.ylabel(\"Feature Importance Level\");","65963d44":"from sklearn.ensemble import RandomForestClassifier","26a79eb3":"rfc=RandomForestClassifier()\nparam_grid={\n    \"n_estimators\":[64,100,128,200],\n    \"max_features\":[2,3,4],\n    \"bootstrap\":[True,False],\n}","86536520":"grid=GridSearchCV(rfc,param_grid,verbose=1)\ngrid.fit(X_train,y_train)","4b434d9e":"grid.best_params_","d26efc42":"rfc=RandomForestClassifier(max_features=4,n_estimators=128,bootstrap=False)\nrfc.fit(X_train,y_train)\npreds=rfc.predict(X_train)\npreds2=rfc.predict(X_test)","fdd6b05a":"rfc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","3d58b204":"print(classification_report(y_test,preds2))","792b068b":"plot_confusion_matrix(rfc,X_test,y_test);","ecf4a34c":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(rfc,X_test,y_test,ax=ax);","05fa7c6a":"from sklearn.ensemble import AdaBoostClassifier","3f86dc10":"abc=AdaBoostClassifier()\nparam_grid={\n    \"n_estimators\":[64,100,128,200],\n    \"learning_rate\":[0.1,0.05,0.02],\n}","0520f94a":"grid=GridSearchCV(abc,param_grid,verbose=1)\ngrid.fit(X_train,y_train)","9553bc91":"grid.best_params_","eb5d14fa":"abc=AdaBoostClassifier(learning_rate=0.1,n_estimators=200)","ff8cfe09":"abc.fit(X_train,y_train)\npreds=abc.predict(X_train)\npreds2=abc.predict(X_test)","8dd8100c":"abc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","6dc17f6e":"print(classification_report(y_test,preds2))","655c4466":"plot_confusion_matrix(abc,X_test,y_test);","0f4d3e93":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(abc,X_test,y_test,ax=ax);","1c46df4c":"from sklearn.ensemble import GradientBoostingClassifier","36bda1ee":"grc=GradientBoostingClassifier()\nparam_grid={\n    \"n_estimators\":[64,100,128,200],\n    \"learning_rate\":[0.1,0.05,0.02],\n    \"max_depth\":[2,4,6,8,10]\n}","84e39ee6":"grid=GridSearchCV(grc,param_grid,verbose=1)\ngrid.fit(X_train,y_train)","3e5d4ceb":"grid.best_params_","a0fc5f4f":"grc=GradientBoostingClassifier(learning_rate=0.1,max_depth=6,n_estimators=64)\ngrc.fit(X_train,y_train)","b20ebad5":"preds=grc.predict(X_train)\npreds2=grc.predict(X_test)","20a9062e":"grc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","79185d1f":"print(classification_report(y_test,preds2))","b73d8fe4":"plot_confusion_matrix(grc,X_test,y_test);","d88d0e66":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(grc,X_test,y_test,ax=ax);","0631910c":"from sklearn.ensemble import ExtraTreesClassifier","875b228e":"etc=ExtraTreesClassifier()\n\nparam_grid={\n    \"n_estimators\":[64,100,128,200],\n    \"max_depth\":[2,4,6,8,10],\n    \"criterion\":[\"gini\",\"entropy\"],\n    \n    \n}","aece3dd7":"grid=GridSearchCV(etc,param_grid,verbose=1)\ngrid.fit(X_train,y_train)","a31484f2":"grid.best_params_","52e3df12":"etc=ExtraTreesClassifier(criterion=\"entropy\",max_depth=10,n_estimators=100)\netc.fit(X_train,y_train)\npreds=etc.predict(X_train)\npreds2=etc.predict(X_test)","e3ea27be":"etc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","720d0707":"print(classification_report(y_test,preds2))","3eb1872c":"plot_confusion_matrix(etc,X_test,y_test);","f28fed49":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(etc,X_test,y_test,ax=ax);","3b9799ce":"from sklearn.naive_bayes import BernoulliNB\nbnb=BernoulliNB()\nbnb.fit(X_train,y_train)","7ab3e38a":"preds=bnb.predict(X_train)\npreds2=bnb.predict(X_test)","142909a2":"bnb_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","243c80dc":"print(classification_report(y_test,preds2))","996c175a":"plot_confusion_matrix(bnb,X_test,y_test);","781ff9a0":"fig,ax=plt.subplots(figsize=(12,6),dpi=200)\nplot_roc_curve(bnb,X_test,y_test,ax=ax);","0df7ed82":"from sklearn.ensemble import VotingClassifier\nclassifiers = [('Gradient Boosting Classifier', grc),  ('Decision Tree', dt),\n               ('Extra Tree', etc), ('Random Forest', rfc), ('Ada Boost', abc), ('Logistic', lr),\n               ('Knn', KNC),(\"BernoulliNB\",bnb)]\nvc = VotingClassifier(estimators = classifiers)\nvc.fit(X_train, y_train)","4f798709":"preds=vc.predict(X_train)\npreds2=vc.predict(X_test)","d7a07b9b":"vc_score=accuracy_score(y_test,preds2)\nprint(f\"Train Accuracy: {accuracy_score(y_train,preds)}\")\nprint(f\"Test Accuracy: {accuracy_score(y_test,preds2)}\")","3dad83e8":"print(classification_report(y_test,preds2))","a7ef5d95":"plot_confusion_matrix(vc,X_test,y_test);","dcbeefe7":"models = pd.DataFrame({\n    'Model' : ['Logistic Regression', 'KNN', 'Decision Tree Classifier', 'Random Forest Classifier','Ada Boost Classifier',\n             'Gradient Boosting Classifier',\"Extra Trees Classifier\",'Voting Classifier'\n               , 'BernoulliNB'],\n    'Score' : [lr_score, knc_score, dt_score, rfc_score, abc_score, grc_score,etc_score,vc_score,bnb_score]\n})\n\n\nmodels.sort_values(by = 'Score', ascending = False)","57e6a047":"px.bar(data_frame = models, x = 'Score', y = 'Model', color = 'Score', template = \"plotly_dark\", title = 'Models Comparison')","e9448a80":"* We clearly see that there are more placed that not","35b9caed":"* In the dataset we can see (as in value_counts function we previously did) that the two top streams are CS and IT. While, in Mechanical and Civil engineer the majority of students where not placed","84714890":"## Logistic Regression","cd7ca039":"# Model Summary","760352a3":"### Now we are goin to encode the labels for making the Corr Matrix","c2dfe940":"# K Nearest Neighboors","c8e23fb4":"* As we said, the dataset has more males than females","63ea48f0":"* In the dataset there are more males than females. But as we previously saw, both genders were more placed than not","5f8949ae":"## We see that Gradient Boost Classifier is the best model with 88,2% of acc.\n## Thx, and if you liked it upvote!","47a53358":"* We see again, age has very little variance.","35f9d8cd":"#### Roc Curve","8dd594cd":"#### Roc Curve","90b84b72":"#### Roc Curve","f5d1d683":"# Decision Tree Classifier","938e8a0c":"* We change the type of the columns for the EDA,although they are numerical, they represent  categorical values","f29996cb":"* I personally thought that depending on the carreer the CGPA was going to change. I was wrong","cf7421b8":"# Extra Trees","4d50cccc":"* CGPA shows a really clear tendence. The more your CGPA is bigger the chances to get placed","7a0c46e6":"# Data Preprocessing","b668ca41":"#### Roc Curve","8e2b7c82":"#### Important!. We can the that one of the key factors for placement is CGPA. Internships a little bit too","dab50bac":"* Sometimes duplicated data is because there are few values per columns and not many columns. So the probs of getting equal rows in some aspects is very high","d7cef1ab":"* No missing values. Appreciate that!","0e174ad2":"* Here we can see also that no matter the age, it has no correlation with the CGPA","489a9585":"* Seems that age has no relation with being placed or not","5572ef49":"# Machine Learning Algorithms","9ee75f96":"* We see that at 2-3 neighbors the algorithm gets the best acc","bce0c89f":"#### Roc Curve","1889d02f":"#### Roc Curve","7de0451c":"* Now we confirm our suspects. CGPA has the highest Pearson value with the target feature. Followed behind by the Internships","2ad678e2":"# Engineering Placements Prediction","8a51c909":"# Gradient Boost Classifier","2d1d422c":"# Random Forest","57a65575":"#### Roc Curve","2865950d":"* 3D plot between Age, CGPA and the target variable. Showing the CGPA impact","b27ef09a":"* A nice lineplot showing how the CGPA impacts in the placement. Also that the age is indeferent in the CGPA values. As we can see that at lower CGPA values at maybe 23 years tends to go higher again. While at the top CGPA at 23 it keeps going down","a43a7213":"# Voting Classifier","7536e2c2":"#### Roc Curve","612250b6":"## Data Clean","5b9df9bb":"## EDA","25b1dcad":"# Bernoulli NB","a91d3648":"# Ada Boost Classifier","3bfcb3d9":"* As we said, internships in values more than 2 tends to pass the \"Not\" curve."}}