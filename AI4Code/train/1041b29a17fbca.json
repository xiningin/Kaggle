{"cell_type":{"884d0e28":"code","4b302c27":"code","5dddd777":"code","55e3dfa7":"code","d987daeb":"code","2d991bfe":"code","46b7b35a":"code","950fea71":"code","8e078bf2":"code","59aa051c":"code","b9a8ce75":"code","00611527":"code","5047a7ba":"code","00811f4c":"code","adcc4b9a":"code","e85438eb":"code","be88ae56":"code","e23918c7":"code","0ec10e9e":"code","b3c9ace4":"code","73a02bd1":"code","03439cd4":"code","6dc4f724":"code","d2f00263":"markdown","234c2eff":"markdown","8fd6305d":"markdown","73b3b8e4":"markdown"},"source":{"884d0e28":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4b302c27":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_squared_error","5dddd777":"df = pd.read_csv(\"\/kaggle\/input\/graduate-admissions\/Admission_Predict.csv\")","55e3dfa7":"df.head()","d987daeb":"df.shape","2d991bfe":"df.describe()","46b7b35a":"df.info()","950fea71":"df.Research.value_counts().plot(kind = \"bar\")\nplt.show()","8e078bf2":"plt.figure(figsize=(8,8))\nsns.heatmap(abs(df.corr()), annot = True)\nplt.show()","59aa051c":"x = df.iloc[:,0:7]\ny = df.iloc[:,-1]","b9a8ce75":"x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2)","00611527":"x_train.shape, x_test.shape, y_train.shape, y_test.shape","5047a7ba":"model = LinearRegression()","00811f4c":"model.fit(x_train, y_train)","adcc4b9a":"y_pred = model.predict(x_test)","e85438eb":"y_pred = pd.Series(y_pred)","be88ae56":"y_test = y_test.reset_index(drop=True)","e23918c7":"plt.figure(figsize=(8,6))\ny_pred.plot(label = \"Predicted\")\ny_test.reset_index(drop = True).plot(label = \"Original\")\nplt.legend()\nplt.show()","0ec10e9e":"mse = mean_squared_error(y_test, y_pred)","b3c9ace4":"mse ** 0.5","73a02bd1":"r2 = r2_score(y_test, y_pred)","03439cd4":"r2","6dc4f724":"sns.regplot(y_test.reset_index(drop=True), y_pred)\nplt.show()","d2f00263":"# Doing the EDA","234c2eff":"# Creating the Train and Test Datasets","8fd6305d":"# Creating and fitting the model","73b3b8e4":"# Validating the model"}}