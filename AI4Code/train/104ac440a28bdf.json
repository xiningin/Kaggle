{"cell_type":{"381e08eb":"code","48a55ce0":"code","bc85c660":"code","dccf9a2d":"code","903d3839":"code","0116b4df":"code","b0c8392f":"code","92893f96":"code","ce303c36":"code","9fc25c18":"code","7c581f99":"code","999fe30f":"code","c703afb3":"code","5ddbd99a":"markdown","422c834b":"markdown","ed57dc06":"markdown","628b5c54":"markdown","ef5452d2":"markdown","178f47c7":"markdown","7113638d":"markdown","bd188098":"markdown","6f668307":"markdown","93185f0d":"markdown","467a454a":"markdown","d9d48a92":"markdown","26cd27b8":"markdown","808d5e7c":"markdown","b634813b":"markdown","46c1d062":"markdown","c366fb2b":"markdown","76a9c532":"markdown"},"source":{"381e08eb":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","48a55ce0":"data = pd.read_csv(r'\/kaggle\/input\/airline-passenger-traffic\/airline-passenger-traffic(1).csv')\ndata.columns = ['Month','Passengers']\ndata['Month'] = pd.to_datetime(data['Month'], format='%Y-%m')\ndata = data.set_index('Month')\ndata.head()","bc85c660":"data.plot(figsize=(20, 4))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Airline passenger traffic')\nplt.show(block=False)","dccf9a2d":"data = data.assign(Passengers_Linear_Interpolation=data.Passengers.interpolate(method='linear'))\ndata[['Passengers_Linear_Interpolation']].plot(figsize=(20, 4))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Airline passenger traffic: Linear interpolation')\nplt.show(block=False)","903d3839":"data['Passengers'] = data['Passengers_Linear_Interpolation']\ndata.drop(columns=['Passengers_Linear_Interpolation'],inplace=True)\ndata.head()","0116b4df":"import seaborn as sns\nfig = plt.subplots(figsize=(20, 5))\nax = sns.boxplot(x=data['Passengers'],whis=1.5)","b0c8392f":"fig = data.Passengers.hist(figsize = (20,5))","92893f96":"from pylab import rcParams\nimport statsmodels.api as sm\nrcParams['figure.figsize'] = 20,24\ndecomposition = sm.tsa.seasonal_decompose(data.Passengers, model='additive') # additive seasonal index\nfig = decomposition.plot()\nplt.show()","ce303c36":"decomposition = sm.tsa.seasonal_decompose(data.Passengers, model='multiplicative') # multiplicative seasonal index\nfig = decomposition.plot()\nplt.show()","9fc25c18":"train_len = 120\ntrain = data[0:train_len] # first 120 months as training set\ntest = data[train_len:] # last 24 months as out-of-time test set","7c581f99":"y_hat_sma = data.copy()\nma_window = 12\ny_hat_sma['sma_forecast'] = data['Passengers'].rolling(ma_window).mean()\ny_hat_sma['sma_forecast'][train_len:] = y_hat_sma['sma_forecast'][train_len-1]","999fe30f":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Passengers'], label='Train')\nplt.plot(test['Passengers'], label='Test')\nplt.plot(y_hat_sma['sma_forecast'], label='Simple moving average forecast')\nplt.legend(loc='best')\nplt.title('Simple Moving Average Method')\nplt.show()","c703afb3":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Passengers'], y_hat_sma['sma_forecast'][train_len:])).round(2)\nmape = np.round(np.mean(np.abs(test['Passengers']-y_hat_sma['sma_forecast'][train_len:])\/test['Passengers'])*100,2)\n\nresults = pd.DataFrame({'Method':['Simple moving average forecast'], 'MAPE': [mape], 'RMSE': [rmse]})\nresults = results[['Method', 'RMSE', 'MAPE']]\nresults","5ddbd99a":"### Additive seasonal decomposition","422c834b":"# Build and evaluate time series forecast","ed57dc06":"### Plot train, test and forecast","628b5c54":"## Outlier detection","ef5452d2":"## Import time series data: Airline passenger traffic","178f47c7":"## Simple moving average method","7113638d":"### Multiplicative seasonal decomposition","bd188098":"### Histogram plot","6f668307":"# Time series forecasting","93185f0d":"# Time series analysis","467a454a":"### Linear interpolation","d9d48a92":"### Calculate RMSE and MAPE","26cd27b8":"### Split time series data into training and test set","808d5e7c":"## Import required packages","b634813b":"### Box plot and interquartile range","46c1d062":"## Plot time series data","c366fb2b":"## Missing value treatment","76a9c532":"## Time series Decomposition"}}