{"cell_type":{"f5e80599":"code","dab8bedc":"code","acc88adc":"code","8a549cee":"code","0a49ca21":"code","7c2c750e":"code","5303e3bd":"code","3b83bd08":"code","aee706f6":"code","6c704dd1":"code","74049078":"code","081ff02b":"code","c37ab0a9":"code","d65bbbdd":"code","55458bed":"code","0d62ca70":"code","d79134ce":"code","22f33867":"code","2dce2725":"code","bed2c1fd":"code","a07765ba":"code","2b1ae769":"code","1a284f15":"code","89b87d2c":"code","e1101cf6":"markdown","4cea51e9":"markdown"},"source":{"f5e80599":"import os\nimport bq_helper\nimport pandas as pd\nimport plotly.plotly as py\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap","dab8bedc":"air_table = bq_helper.BigQueryHelper(\"bigquery-public-data\",\"openaq\", \"global_air_quality\")","acc88adc":"air_table.list_tables()","8a549cee":"air_table.table_schema(\"global_air_quality\")","0a49ca21":"air_table.head(\"global_air_quality\")","7c2c750e":"ww_co_query = \"\"\"\nSELECT latitude, longitude, value\nFROM `bigquery-public-data.openaq.global_air_quality`\nWHERE pollutant = 'co'\n\"\"\"","5303e3bd":"worldwide_co = air_table.query_to_pandas_safe(ww_co_query)\nworldwide_co.tail()","3b83bd08":"worldwide_co.describe()","aee706f6":"# Replace negative values with zero\nnum = worldwide_co.value._get_numeric_data()\n\nnum[num < 0] = 0\nworldwide_co.value = num\nworldwide_co.describe()","6c704dd1":"# Normalize value by subtracting the mean and dividing by standard deviation\nworldwide_co['value'] = (worldwide_co['value'] - worldwide_co['value'].mean()) \/ worldwide_co['value'].std()","74049078":"worldwide_co.describe()","081ff02b":"fig, ax = plt.subplots(figsize=(26,12))\nearth = Basemap(ax=ax)\nearth.drawcoastlines(color='#556655', linewidth=0.5)\nax.scatter(worldwide_co['longitude'], worldwide_co['latitude'], s=worldwide_co['value'], \n           c='red', alpha=1, zorder=10)\nax.set_title(\"CO Worldwide\", fontsize=18)\nfig.savefig('worldwide_carbon_levels.png')","c37ab0a9":"# Now lets check out the state feature\nimport collections\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\n\na = worldwide_co.value.values\ncounter=collections.Counter(a)\n\nkey = list(counter.keys())\npopulation = list(counter.values())\n\nscale=[[0, '#84FFFF'], [0.25, '#00E5FF'], [0.65, '#40C4FF'],[1, '#01579B']]\n\n\ndataa = [ dict(\n        type='choropleth',\n        colorscale = scale,\n        locations = key,\n        z = population,\n        locationmode = \"USA-states\",\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"Number of Companies\")\n        ) ]\n\nlayout = dict(\n        title = 'Frequency of companies by state<br>(Hover for number of cos)',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n             )\n    \nfig = dict( data=dataa, layout=layout )\npy.iplot( fig, filename='statefreq' )","d65bbbdd":"import plotly.plotly as py\nimport pandas as pd\n\ndf = worldwide_co \n\ndata = [ dict(\n        type = 'choropleth',\n        locations = df['CODE'],\n        z = df['GDP (BILLIONS)'],\n        text = df['COUNTRY'],\n        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n            [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '$',\n            title = 'GDP<br>Billions US$'),\n      ) ]\n\nlayout = dict(\n    title = '2014 Global GDP<br>Source:\\\n            <a href=\"https:\/\/www.cia.gov\/library\/publications\/the-world-factbook\/fields\/2195.html\">\\\n            CIA World Factbook<\/a>',\n    geo = dict(\n        showframe = False,\n        showcoastlines = False,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='d3-world-map' )","55458bed":"x = worldwide_co['longitude']\ny = worldwide_co['latitude']\nxx, yy = np.meshgrid(x, y, sparse=True)\nlisty = [xx,yy]\nlisty[1]","0d62ca70":"import os\nimport matplotlib.pyplot as plt\nfrom netCDF4 import Dataset as netcdf_dataset\nimport numpy as np\n\nfrom cartopy import config\nimport cartopy.crs as ccrs\n\nax = plt.axes(projection=ccrs.Mollweide())\nax.stock_img()\n\nplt.contour(worldwide_co['longitude'].T, worldwide_co['latitude'], worldwide_co.value.values, transform=ccrs.Mollweide())\n#plt(x, y, 'bo')\n\n'''x = worldwide_co['longitude']\ny = worldwide_co['latitude']\nxx, yy = np.meshgrid(x, y, sparse=True)\nz = np.sin(xx**2 + yy**2) \/ (xx**2 + yy**2)\nh = plt.contourf(x,y,z)'''","d79134ce":"plt.figure()\n\nax = plt.axes(projection=ccrs.Mollweide())\n#ax.gridlines(color='gray', linestyle='--')\nax.stock_img()\nax.set_global()\n\nplt.pcolormesh([worldwide_co['longitude'], worldwide_co['latitude']], worldwide_co['value'].values)\nplt.tight_layout()\nplt.show()","22f33867":"low_co_cities = \"\"\"\nSELECT city, country, pollutant, value, latitude, longitude\nFROM `bigquery-public-data.openaq.global_air_quality`\nWHERE \npollutant = 'co' AND\nvalue < 1\n\"\"\"","2dce2725":"lowest_co_cities = air_table.query_to_pandas_safe(low_co_cities)","bed2c1fd":"lowest_co_cities[0:100]","a07765ba":"fig, ax = plt.subplots(figsize=(26,12))\nearth = Basemap(ax=ax)\nearth.drawcoastlines(color='#556655', linewidth=0.5)\nax.scatter(lowest_co_cities['longitude'], lowest_co_cities['latitude'], lowest_co_cities['value'], \n           c='green', alpha=.5, zorder=10)\nax.set_title(\"Lowest CO Cities\", fontsize=18)\nfig.savefig('low_carbon_cities.png')","2b1ae769":"high_co_cities = \"\"\"\nSELECT city, country, pollutant, value, latitude, longitude\nFROM `bigquery-public-data.openaq.global_air_quality`\nWHERE \npollutant = 'co'\nORDER BY value DESC\nLIMIT 50\n\"\"\"","1a284f15":"highest_co_cities = air_table.query_to_pandas_safe(high_co_cities)\nhighest_co_cities.head()","89b87d2c":"fig, ax = plt.subplots(figsize=(26,12))\nearth = Basemap(ax=ax)\nearth.drawcoastlines(color='#556655', linewidth=0.5)\nax.scatter(highest_co_cities['longitude'], highest_co_cities['latitude'], highest_co_cities['value'], \n           c='red', alpha=0.5, zorder=10)\nax.set_title(\"Highest CO Cities\", fontsize=18)\nfig.savefig('high_carbon_cities.png')","e1101cf6":"## Cities With The Lowest Carbon Dioxide Levels","4cea51e9":"## Cities With The Highest Carbon Dioxide Levels"}}