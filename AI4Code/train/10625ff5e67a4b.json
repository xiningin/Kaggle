{"cell_type":{"490b45c7":"code","078747a3":"code","e081001f":"code","33b1d706":"code","727b0c08":"code","f7140f49":"code","05fb3ef3":"code","7f06d4b5":"code","8779d557":"code","94fbc85a":"code","26e79d6b":"code","60ff8acd":"code","d7d62020":"code","de7250ff":"code","b23c7a54":"code","9b568e2b":"code","d2ba1684":"code","d57cea26":"code","2efaf65f":"code","740bf879":"code","a0b1d4d4":"code","e7240d2e":"code","f2e48707":"code","e87313c7":"code","9574880f":"code","afd0deed":"code","b70d6089":"code","1a769fd9":"code","69669f4e":"code","d0bfa575":"code","b8b3eb81":"code","9718e2dd":"code","011ded41":"code","bae7feb1":"code","fc65eda3":"code","8bcd1612":"code","fd5bec0d":"code","d80befc6":"code","c9512855":"code","01046486":"code","dc6ed801":"code","57ef6ddf":"code","c42a0444":"code","2f0f3250":"code","2b2d1925":"code","a886f1d4":"code","aac45bb4":"code","19d5fa6c":"code","23c35083":"code","7f065da7":"code","358cc706":"code","b37620e2":"code","9f11db7f":"code","e6fae7f1":"code","6687b82b":"code","d3cd1ef4":"code","9965a8d4":"code","b7a9b327":"code","7a5a6c31":"code","41d2dd84":"code","655cd51c":"code","6c57adae":"code","0502751b":"code","3a339696":"code","b54b3eb2":"code","a7e47538":"code","0b5b586b":"code","d2ffafd5":"code","43d12e0d":"code","2d847567":"code","2eb33b32":"code","4ba877f8":"code","d5a14791":"code","87ed4239":"code","18928a79":"code","8d3a26cb":"code","39b4bace":"code","6ff12c6d":"code","773a0862":"markdown","f491464d":"markdown","f2858e18":"markdown","6e6c87e7":"markdown","25ed03b2":"markdown","d1722a47":"markdown","d427a718":"markdown","02c0680d":"markdown","d3124a04":"markdown","f10d6077":"markdown","c46fa655":"markdown","1ca140c7":"markdown","f093768b":"markdown","2f3f97f5":"markdown","25f6a3a3":"markdown","0d58f41d":"markdown","f75a51a8":"markdown","4a31ada2":"markdown","6ec8fc55":"markdown","0ecd8e59":"markdown","435fd0a6":"markdown","ead614e9":"markdown","88227731":"markdown","ac81e415":"markdown","bafa9af2":"markdown","83744028":"markdown","42700d35":"markdown","e18ebb5b":"markdown","a4d5dcf9":"markdown","b0e228b1":"markdown","e4e37237":"markdown","b68139c6":"markdown","1e29726f":"markdown","53dba740":"markdown","a4e8ce43":"markdown","bb86a07d":"markdown","c4a2753f":"markdown","f0b7bf39":"markdown","19776790":"markdown","0cc29975":"markdown","74bd2c56":"markdown","6e55f094":"markdown","e8f67e61":"markdown","c93aab70":"markdown","5403627e":"markdown","478b67ec":"markdown","c7697583":"markdown","c434a030":"markdown","81d10f89":"markdown","cb76e8d5":"markdown","0bd43aa6":"markdown","391be01b":"markdown","d59d4732":"markdown","2fb9ed95":"markdown","07a71a9c":"markdown","88815b34":"markdown","75205f3d":"markdown"},"source":{"490b45c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","078747a3":"data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","e081001f":"data.columns","33b1d706":"data.head()","727b0c08":"data.describe()","f7140f49":"data.info()","05fb3ef3":"data['math score'].plot(kind='hist',bins = 50,figsize = (8,8))\nplt.show()","7f06d4b5":"data['reading score'].plot(kind = 'hist',bins = 50,figsize = (8,8), color='red')\nplt.show()","8779d557":"data['writing score'].plot(kind = 'hist',bins = 50,figsize = (8,8), color='g')\nplt.show()","94fbc85a":"print(data['race\/ethnicity'].value_counts(dropna=False))\nsns.countplot(x=\"race\/ethnicity\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","26e79d6b":"print(data['gender'].value_counts(dropna=False))\nsns.countplot(x=\"gender\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","60ff8acd":"print(data['lunch'].value_counts(dropna=False))\nsns.countplot(x=\"lunch\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","d7d62020":"print(data['parental level of education'].value_counts(dropna=False))\nsns.countplot(x=\"parental level of education\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","de7250ff":"print(data['test preparation course'].value_counts(dropna=False))\nsns.countplot(x=\"test preparation course\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","b23c7a54":"data.corr()","9b568e2b":"data.head()","d2ba1684":"data = data.rename(columns={\"math score\": \"mathScore\", \"reading score\": \"readingScore\", \"writing score\": \"writingScore\"})\ndata = data.rename(columns={\"race\/ethnicity\": \"group\", \"test preparation course\": \"prep\"})\ndata = data.rename(columns={\"parental level of education\": \"parentEdu\"})\ndata.head(10)","d57cea26":"data['newGender'] = data['gender'].apply(lambda x: 0 if x == 'male' else 1)\ndata.head(10)","2efaf65f":"sns.countplot(x=\"lunch\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","740bf879":"data['newLunch'] = data['lunch'].apply(lambda x: 0 if x == 'standard' else 1)\ndata.head(10)","a0b1d4d4":"sns.countplot(x=\"prep\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","e7240d2e":"data['newPrep'] = data['prep'].apply(lambda x: 0 if x == 'none' else 1)\ndata.head(10)","f2e48707":"sns.countplot(x=\"parentEdu\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","e87313c7":"ax = sns.pointplot(x=\"readingScore\", y=\"parentEdu\",data=data)","9574880f":"ax = sns.pointplot(x=\"writingScore\", y=\"parentEdu\",data=data)","afd0deed":"ax = sns.pointplot(x=\"mathScore\", y=\"parentEdu\",data=data)","b70d6089":"def flag_df(df):\n\n    if (df['parentEdu'] =='some high school') or (df['parentEdu'] =='high school'):\n        return 0\n    elif (df['parentEdu'] ==\"associate's degree\") or (df['parentEdu'] =='some college'):\n        return 1\n    elif (df['parentEdu'] ==\"bachelor's degree\"):\n        return 2\n    elif (df['parentEdu']==\"master's degree\"):\n        return 3","1a769fd9":"data['newParentEdu'] = data.apply(flag_df, axis = 1)\n\ndata.head(10)","69669f4e":"sns.countplot(x=\"group\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","d0bfa575":"def group_df(df):\n\n    if (df['group'] =='group A'):\n        return '0'\n    elif (df['group'] =='group B'):\n        return '1'\n    elif (df['group'] =='group C'):\n        return '2'\n    elif (df['group']=='group D'):\n        return '3'\n    elif (df['group']=='group E') :\n        return '4'\n        ","b8b3eb81":"data['newGroup'] = data.apply(group_df, axis = 1)\n\ndata.head(10)","9718e2dd":"data.info()","011ded41":"data[[\"gender\",\"mathScore\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"mathScore\",ascending = False)","bae7feb1":"data[[\"gender\",\"readingScore\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","fc65eda3":"data[[\"gender\",\"writingScore\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"writingScore\",ascending = False)","8bcd1612":"data[[\"group\",\"writingScore\"]].groupby([\"group\"], as_index = False).mean().sort_values(by=\"writingScore\",ascending = False)","fd5bec0d":"data[[\"group\",\"readingScore\"]].groupby([\"group\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","d80befc6":"data[[\"group\",\"mathScore\"]].groupby([\"group\"], as_index = False).mean().sort_values(by=\"mathScore\",ascending = False)","c9512855":"data[[\"parentEdu\",\"mathScore\"]].groupby([\"parentEdu\"], as_index = False).mean().sort_values(by=\"mathScore\",ascending = False)","01046486":"data[[\"parentEdu\",\"readingScore\"]].groupby([\"parentEdu\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","dc6ed801":"data[[\"parentEdu\",\"writingScore\"]].groupby([\"parentEdu\"], as_index = False).mean().sort_values(by=\"writingScore\",ascending = False)","57ef6ddf":"data[[\"prep\",\"writingScore\"]].groupby([\"prep\"], as_index = False).mean().sort_values(by=\"writingScore\",ascending = False)","c42a0444":"data[[\"prep\",\"readingScore\"]].groupby([\"prep\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","2f0f3250":"data[[\"prep\",\"mathScore\"]].groupby([\"prep\"], as_index = False).mean().sort_values(by=\"mathScore\",ascending = False)","2b2d1925":"data[[\"lunch\",\"mathScore\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"mathScore\",ascending = False)","a886f1d4":"data[[\"lunch\",\"readingScore\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","aac45bb4":"data[[\"lunch\",\"readingScore\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"readingScore\",ascending = False)","19d5fa6c":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = (i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","23c35083":"data.loc[detect_outliers(data,[\"mathScore\",\"writingScore\",\"readingScore\"])]","7f065da7":"data = data.drop(detect_outliers(data,[\"mathScore\",\"writingScore\",\"readingScore\"]),axis = 0).reset_index(drop = True)\ndata.loc[detect_outliers(data,[\"mathScore\",\"writingScore\",\"readingScore\"])]","358cc706":"data.columns[data.isnull().any()]","b37620e2":"data.isnull().sum()","9f11db7f":"data.corr()","e6fae7f1":"f,ax = plt.subplots(figsize=(13, 13))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","6687b82b":"list = ['mathScore','readingScore','writingScore','gender','group']\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(data[list].corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","d3cd1ef4":"data.readingScore.plot(kind = 'line', color = 'red',label = 'Reading Score',linewidth=1,alpha = 1,grid = True,linestyle = ':')\ndata.writingScore.plot(color='g', label='Writing Score',linewidth=1,alpha=0.5,grid=True,linestyle='-.')\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')    \nplt.ylabel('y axis')\nplt.title('Line Plot between Reading and Writing Score') \nplt.show()","9965a8d4":"data.readingScore.plot(kind = 'line', color = 'red',label = 'Reading Score',linewidth=1,alpha = 2,grid = True,linestyle = ':')\ndata.mathScore.plot(color='blue', label='Math Score',linewidth=1,alpha=0.5,grid=True,linestyle='-.')\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')    \nplt.ylabel('y axis')\nplt.title('Line Plot between Reading and Math Score') \nplt.show()","b7a9b327":"data.mathScore.plot(kind = 'line', color = 'blue',label = 'Math Score',linewidth=1,alpha = 1,grid = True,linestyle = ':')\ndata.writingScore.plot(color='g', label='Writing Score',linewidth=1,alpha=0.5,grid=True,linestyle='-.')\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')    \nplt.ylabel('y axis')\nplt.title('Line Plot between Math and Writing Score') \nplt.show()","7a5a6c31":"data.plot(kind='scatter', x='writingScore', y='newPrep',alpha = 0.5,color = 'red')\nplt.xlabel('Writing Score')             \nplt.ylabel('Prep')\nplt.title('Writing and Prep Scatter Plot')\nplt.show()","41d2dd84":"data.plot(kind='scatter', x='readingScore', y='mathScore',alpha = 0.5,color = 'purple')\nplt.xlabel('Reading Score')              \nplt.ylabel('Math Score')\nplt.title('Reading and Math Scatter Plot')\nplt.show()","655cd51c":"data.plot(kind='scatter', x='writingScore', y='mathScore',alpha = 0.5,color = 'cyan')\nplt.xlabel('Writing Score')             \nplt.ylabel('Math Score')\nplt.title('Writing and Math Scatter Plot')\nplt.show()","6c57adae":"data.plot(kind='scatter', x='readingScore', y='writingScore',alpha = 0.5,color = 'brown')\nplt.xlabel('Reading Score')              \nplt.ylabel('Writing Score')\nplt.title('Writing and Reading Scatter Plot')\nplt.show()","0502751b":"data.boxplot(column='mathScore',by = 'gender')\nplt.show()","3a339696":"data.boxplot(column='mathScore',by = 'lunch')\nplt.show()","b54b3eb2":"data.boxplot(column='mathScore',by = 'newParentEdu')\nplt.show()","a7e47538":"data.boxplot(column='mathScore',by = 'parentEdu')\nplt.show()","0b5b586b":"data.boxplot(column='mathScore',by = 'prep')\nplt.show()","d2ffafd5":"data.boxplot(column='readingScore',by='gender')\nplt.show()","43d12e0d":"data.boxplot(column='readingScore',by='lunch')\nplt.show()","2d847567":"data.boxplot(column='readingScore',by='newParentEdu')\nplt.show()","2eb33b32":"data.boxplot(column='readingScore',by='parentEdu')\nplt.show()","4ba877f8":"data.boxplot(column='readingScore',by='prep')\nplt.show()","d5a14791":"data.boxplot(column='writingScore',by='gender')\nplt.show()","87ed4239":"data.boxplot(column='writingScore',by='lunch')\nplt.show()","18928a79":"data.boxplot(column='writingScore',by='newParentEdu')\nplt.show()","8d3a26cb":"data.boxplot(column='writingScore',by='parentEdu')\nplt.show()","39b4bace":"data.boxplot(column='writingScore',by='prep')\nplt.show()","6ff12c6d":"data1 = data['mathScore'].head()\ndata2= data['readingScore'].head()\ndata3= data['writingScore'].head()\nconc_data_col = pd.concat([data1,data2,data3],axis =1) # axis = 1 : adds dataframes in column\nconc_data_col","773a0862":"<a id=\"14\"> <\/a><br>\n### Change columns name for easier coding","f491464d":"\n<a id=\"2\"> <\/a><br>\n## Variable Descriprion\n* math Score\n* reading Score\n* writing Score\n* gender\n* race\/ethnicity\n* parental level of education\n* lunch\n* test preparation course","f2858e18":"* As seen as from the heatmap; we could say that \"gender\", \"parent's educ. situt\", \"preapering to exam\" and \"type of the lunch\" do not affect math, reading or writing score too much. \n****","6e6c87e7":"****\n<a id=\"24\"> <\/a><br>\n#### Correlation and HeatMap","25ed03b2":"****","d1722a47":"<a id=\"18\"> <\/a><br>\n### Add New ParentEdu Column for easier corr","d427a718":"\n<a id=\"20\"> <\/a><br>\n## BASIC DATA ANALYSIS\n****\n* Gender - MathScore\n* Gender - ReadingScore\n* Gender - WritingScore\n**** \n* Group  - WritingScore\n* Group  - ReadingScore\n* Group  - MathScore\n****\n* ParentEdu - MathScore\n* ParentEdu - ReadingScore\n* ParentEdu - WritingScore\n****\n* Prep - WritingScore\n* Prep - ReadingScore\n* Prep - MathScore\n****\n* Lunch - MathScore\n* Lunch - ReadingScore\n* Lunch - WritingScore\n****","02c0680d":"****","d3124a04":"<a id=\"16\"> <\/a><br>\n### Add New Lunch Column for easier corr","f10d6077":"****\n<a id=\"5\"> <\/a><br>\n### There is Reading Scores Histogram","c46fa655":"\n<a id=\"1\"> <\/a><br>\n## Load and Check Data","1ca140c7":"The Gender's Changes:\n\n* male => 0\n* female => 1\n****\n","f093768b":"****","2f3f97f5":"<a id=\"23\"> <\/a><br>\n## VIS","25f6a3a3":"****","0d58f41d":"Let's Try preparation and writingScore","f75a51a8":"<a id=\"29\"> <\/a><br>\n#### Writing Score & Math Score Scatter Plot","4a31ada2":"The New Column \"ParentEduNew\":\n\n* some high school or high school => 0\n* associate's degree or some college => 1\n* bachelor's degree => 2\n* master's degree => 3\n\n****","6ec8fc55":"<a id=\"17\"> <\/a><br>\n### Add New Prep Column for easier corr","0ecd8e59":"* gender 0 is male, 1 is female","435fd0a6":"****","ead614e9":"<a id=\"19\"> <\/a><br>\n### Add New Group Columns for easier corr","88227731":"<a id=\"25\"> <\/a><br>\n#### Reading and Writing Score Line Plot","ac81e415":"<a id=\"27\"> <\/a><br>\n#### Math and Writing Score Line Plot","bafa9af2":"****\n<a id=\"6\"> <\/a><br>\n### There is Writing Scores Histogram","83744028":"<a id=\"3\"> <\/a><br>\n## Numerical Variable","42700d35":"The Group's Changes:\n\n* group A => 0\n* group B => 1\n* group C => 2\n* group D => 3\n* group E => 4\n****","e18ebb5b":"****","a4d5dcf9":"The Lunch's Changes:\n\n* none => 0\n* completed => 1\n****","b0e228b1":"<a id=\"32\"> <\/a><br>\n****\n#### Reading Score BoxPlot ","e4e37237":"****","b68139c6":"<a id=\"30\"> <\/a><br>\n#### Reading Score & Writing Score Scatter Plot","1e29726f":"****\n<a id=\"11\"> <\/a><br>\n### There is Parental Level of Education","53dba740":"<a id=\"4\"> <\/a><br>\n****\n### There is Math Scores Histogram","a4e8ce43":"\n<a id=\"13\"> <\/a><br>\n## Feature Engineering","bb86a07d":"* In this correlation, lunch or preparation to exam etc. are not shown.\n* In the next step, I will do feature engineering so that we will get a more comprehensive correlation.","c4a2753f":"<a id=\"7\"> <\/a><br>\n## Categorical Variable","f0b7bf39":"<a id=\"31\"> <\/a><br>\n****\n#### Math Score BoxPlot ","19776790":"* int64(3): mathScore, readingScore, writingScore\n* object(5): gender, group, parentEdu, lunch, prep","0cc29975":"****","74bd2c56":"\n<a id=\"22\"> <\/a><br>\n## Missing Value","6e55f094":"****","e8f67e61":"****\n<a id=\"9\"> <\/a><br>\n### There is Gender","c93aab70":"****\n<a id=\"12\"> <\/a><br>\n### There is Test Preparation Course","5403627e":"*****","478b67ec":"****\n<a id=\"26\"> <\/a><br>\n#### Reading and Math Score Line Plot","c7697583":"<a id=\"21\"> <\/a><br>\n\n## Outlier Detection","c434a030":"<a id=\"28\"> <\/a><br>\n#### Reading Score & Math Score Scatter Plot","81d10f89":"****\n<a id=\"8\"> <\/a><br>\n### There is Race\/ethnicity","cb76e8d5":"****\n<a id=\"10\"> <\/a><br>\n### There is Lunch","0bd43aa6":"<a id=\"15\"> <\/a><br>\n### Add New Gender Columns for easier corr","391be01b":"The Columns's Changes:\n\n* race\/ethnicity => group\n* parental level of education => parentEdu\n* test preparation course => prep\n****","d59d4732":"<a id=\"33\"> <\/a><br>\n****\n#### Writing Score BoxPlot ","2fb9ed95":"<a id=\"26\"> <\/a><br>\n### CONCATENATING DATA","07a71a9c":"# Introduction\nThis dataset includes student's gender, which kind of lunch they have before exam, if they preparing the exam, which level of education their parents have, their grops where they belongs, math's scores, writing's scores and reading's scores. I created this notebook for try to unravel the link between these features.\n \n <font color = \"blue\">\n Content:\n    \n 1. [Load and check data](#1)\n 2. [Variable Descriprion](#2)  \n    * [Numerical Variable ](#3)\n        * [Math Scores](#4)\n        * [Reading Score](#5)\n        * [Writing Score](#6)\n    * [Categorical Variable](#7)\n        * [Race\/ethnicity](#8)\n        * [Gender](#9)\n        * [Lunch](#10)\n        * [Parental Level of Education](#11)\n        * [Test Preparation Course](#12)\n 3. [Introduction Step to Feature Engineering](#13)\n    * [Change Columns Name](#14)\n    * [Add New Gender Values](#15)\n    * [Add New Lunch Column](#16)\n    * [Add New Preparation Column](#17)\n    * [Add New Parent's Education Column](#18)\n    * [Add New Group Values](#19)\n 4. [Basic Data Analysis](#20)\n 5. [Outlier Detection](#21)\n 6. [Missing Value](#22)   \n 7. [Visualization](#23)\n    * [Correlation and HeatMap](#24)\n    * [Reading and Writing Score Line Plot](#25)\n    * [Reading and Math Score Line Plot](#26)\n    * [Math and Writing Score Line Plot](#27)\n    * [Reading and Math Score Scatter Plot](#28)\n    * [Writing and Math Score Scatter Plot](#29)\n    * [Reading and Writing Score Scatter Plot](#30)\n    * [Math Scores Histogram](#31)\n    * [Reading Scores Histogram](#32)\n    * [Writing Scores Histogram](#33)\n    * [Math Score BoxPlot](#34)\n    * [Reading Score BoxPlot](#35)\n    * [Writing Score BoxPlot](#36)\n","88815b34":"The Lunch's Changes:\n\n* standard => 0\n* free => 1\n****","75205f3d":"****"}}