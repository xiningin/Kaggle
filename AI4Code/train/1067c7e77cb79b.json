{"cell_type":{"ecd26f2e":"code","d180c918":"code","1f539b48":"code","13298985":"code","bba4b6b2":"code","d0569684":"code","83d0ef9f":"code","11e6be4e":"code","2732f2cf":"code","4e503891":"code","c5e563d9":"code","7d4cb5bb":"code","36f00d1d":"code","f14f3886":"code","97d11ad1":"code","94f6c813":"code","efec7834":"code","cccbc3a1":"code","b10dfadc":"code","a2abd0ae":"code","1e5aeb31":"code","9ddbdf2f":"code","6a617de4":"code","23ed96d6":"markdown","b957417b":"markdown","7831a731":"markdown","947fae22":"markdown","053e1026":"markdown","d10bcf95":"markdown","268f6ce4":"markdown","9eb9778a":"markdown","1b0afc76":"markdown","9f51225e":"markdown"},"source":{"ecd26f2e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\n%matplotlib inline\n\ndf = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\n","d180c918":"# Check overview of data\ndf.head()","1f539b48":"df.info()","13298985":"df.describe()","bba4b6b2":"plt.figure(figsize=(15,8))\n\nsns.heatmap(df.corr(),annot=True,cmap=\"viridis\")\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)","d0569684":"#Compare charges based on sex\nplt.figure(figsize=(6,7))\nsns.barplot(data=df,x=\"sex\",y=\"charges\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel(\"Sex\",fontsize=17)\nplt.ylabel(\"Charges\",fontsize=17)\nplt.title(\"Compare charges based on sex\",fontsize=21)","83d0ef9f":"#Charges: Smoker non smoker\nplt.figure(figsize=(6,7))\nsns.boxplot(data=df,x=\"smoker\",y=\"charges\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel(\"Smoker\",fontsize=17)\nplt.ylabel(\"Charges\",fontsize=17)\nplt.title(\"Charges: Smoker non smoker\",fontsize=21)","11e6be4e":"\nsns.catplot(x=\"sex\", y=\"charges\", hue=\"smoker\", kind=\"box\", data=df,height=7)","2732f2cf":"sns.catplot(x = 'children', y = 'charges', col = 'smoker', data = df, kind = 'bar', col_wrap = 3)\nplt.show()","4e503891":"#Compare charges based on bmi\n\nsns.lmplot(data=df,x=\"bmi\",y=\"charges\",height=9)\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel(\"bim level\",fontsize=17)\nplt.ylabel(\"Charges\",fontsize=17)\nplt.title(\"Compare charges based on bmi level\",fontsize=21)","c5e563d9":"#Compare charges based on age\n\n\n\n\nsns.jointplot(x=\"age\", y=\"charges\", data=df,\n              kind=\"reg\", truncate=False, height=9)","7d4cb5bb":"df","36f00d1d":"#Compare charges per region\nplt.figure(figsize=(8,8))\nsns.barplot(x=\"region\",y=\"charges\",data=df)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.xlabel(\"Regions\",fontsize=17)\nplt.ylabel(\"Charges\",fontsize=17)\nplt.title(\"Charges per region\",fontsize=21,weight=\"bold\")","f14f3886":"sns.catplot(x=\"sex\",y=\"charges\",data=df,col=\"children\",col_wrap=3,kind=\"bar\")","97d11ad1":"#Check numbers of children in each region\nsns.displot(df, x=\"children\", hue=\"region\", kind=\"kde\", fill=True,height=8)\nplt.xlim(0, None)","94f6c813":"# check gender in each region\nplt.figure(figsize=(8,8))\nsns.countplot(data=df,x=df[\"region\"], hue=\"sex\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel(\"Regions\",fontsize=18)\nplt.ylabel(\"Number of people\",fontsize=18)","efec7834":"df = pd.get_dummies(df,drop_first=True)","cccbc3a1":"X = df.drop(\"charges\", axis=1)\ny = df[\"charges\"]","b10dfadc":"from sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn import linear_model\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn import svm\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.metrics import accuracy_score,mean_squared_error\n\n\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","a2abd0ae":"models = [[\"linear_model: \", linear_model.LinearRegression()],\n          [\"svm rbf: \",svm.SVR(kernel=\"rbf\")],\n          [\"svm linear: \",svm.SVR(kernel=\"linear\")],\n          [\"RandomForestRegressor: \", RandomForestRegressor()],\n          [\"ExtraTreesRegressor: \", ExtraTreesRegressor()],\n          [\"linear_model.Ridge: \", linear_model.Ridge()],\n          [\"DecisionTreeRegressor: \", DecisionTreeRegressor()],\n          [\"AdaBoostRegressor: \", AdaBoostRegressor()]]\n\nresults = []\nefc = []","1e5aeb31":"for name, model in models:\n\n    model=model\n    model.fit(X_train,y_train)\n    predictions = model.predict(X_test)\n    name = name\n    results.append(predictions)\n    efc.append(model.score(X_test,y_test))\n    print(name,model.score(X_test,y_test))\n","9ddbdf2f":"x_axes = [\"linear_model\",\n\"svm rbf\",\n\"svm linear\",\n\"RandomForestRegressor\",\n\"ExtraTreesRegressor\",\n\"linear_model.Ridge\",\n\"DecisionTreeRegressor\",\n\"AdaBoostRegressor\"]","6a617de4":"fig = px.bar(x=x_axes,y=efc,text=efc)\n\nfig.update_layout(\n    title=\"precision rate\",\n    xaxis_title=\"Algoritm\",\n    yaxis_title=\"Precision\",\n\n    showlegend = False\n)","23ed96d6":"Chech each column's data type, looks alright.","b957417b":"**Older people pay more charges than younger people**","7831a731":"**Smokers pay way more than non smokers**","947fae22":"**Both gender are evenly populated in each region**","053e1026":"**People with higher bmi level tend to pay more charges**","d10bcf95":"> # Predictive","268f6ce4":"**Numbers of children in reach region are similar**","9eb9778a":"> # Descriptive","1b0afc76":"**Result shows men spend slightly more than women**","9f51225e":"**Regardless of sex, smokers pay way more than non smokers**"}}