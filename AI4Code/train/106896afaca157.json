{"cell_type":{"f46eae2a":"code","080cb353":"code","cbaec7d4":"code","c98f2b5d":"code","1fa0b3ee":"markdown","be7c6ab7":"markdown","127b7084":"markdown","40bdae70":"markdown"},"source":{"f46eae2a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n","080cb353":"import matplotlib.pyplot as plt\nimport json\nreplay = \"..\/input\/testerrjsonok\/27826113-0.json\"\nwith open(replay, \"r\") as read_file:\n    data = json.load(read_file)\n\nplt.plot([data[c][0]['duration'] for c in range(len(data))])","cbaec7d4":"import matplotlib.pyplot as plt\nimport json\nreplay = \"..\/input\/testerrjson\/27825952-1.json\"\nwith open(replay, \"r\") as read_file:\n    data = json.load(read_file)\n\nplt.plot([data[c][0]['duration'] for c in range(len(data))])","c98f2b5d":"import matplotlib.pyplot as plt\nimport json\nreplay = \"..\/input\/testerrjsonquant\/27827058-1.json\"\nwith open(replay, \"r\") as read_file:\n    data = json.load(read_file)\n\nplt.plot([data[c][0]['duration'] for c in range(len(data))])","1fa0b3ee":"**Using 32x32 a try with quant transform**\nhttps:\/\/pytorch.org\/docs\/stable\/quantization.html","be7c6ab7":"**Code from https:\/\/www.kaggle.com\/c\/lux-ai-2021\/discussion\/276938**","127b7084":"**Using 32x32 and without err**","40bdae70":"**Using 32x32 and with err**"}}