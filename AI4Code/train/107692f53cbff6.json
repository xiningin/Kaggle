{"cell_type":{"aefa2ec0":"code","7b0c2a95":"code","ba49acd9":"code","679c5cc7":"code","ebb474a6":"code","5dc76adc":"code","33f317c9":"code","bb8a7a6c":"markdown","9f9e7c44":"markdown","4715b5e7":"markdown","16af023c":"markdown","06718f5f":"markdown","05833843":"markdown"},"source":{"aefa2ec0":"%matplotlib inline\nimport pandas as pd\nimport networkx as nx \nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom IPython.display import Image\nimport warnings\nwarnings.filterwarnings(\"ignore\") \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nos.environ['OMP_NUM_THREADS'] = '8' ","7b0c2a95":"data = pd.read_csv('..\/input\/santa-workshop-tour-2019\/family_data.csv')","ba49acd9":"g = nx.Graph()\ncolor_map = []\nsize = []\n# create app nodes\nfor i in tqdm(range (1,101)):\n    temp = 'd'+str(i)\n    g.add_node(temp, color='orange')#, type = 'day')\n    \nfor i in tqdm(range (0,5000)):\n    temp = 'f'+str(i)\n    g.add_node(temp, color='blue')#, type = 'family')\n    \nfor i in tqdm(range (0,len(data))):\n    family = data.iloc[i,0]\n    node_f = 'f'+str(family)\n    participants = data.iloc[i,11]\n    for j in range(1,11):\n        day = data.iloc[i,j]\n        node_d = 'd'+str(day)\n        g.add_edge(node_f, node_d, type='wish',color = 'green', label=participants, weight= participants)","679c5cc7":"for n1, attr in g.nodes(data=True):\n    if attr['color'] == 'orange':\n        color_map.append('orange')\n    else:\n        color_map.append('blue')","ebb474a6":"# Drawing Graph\nplt.figure(3,figsize=(25,25))  \nedges = g.edges()\ncolors = [g[u][v]['color'] for u,v in edges]\nnx.draw(g, node_color = color_map, edge_color = colors, with_labels = True)","5dc76adc":"# Extract reference graph facts & metrics \nprint('Graph')\nprint('Do we have a fully connected graph? ',nx.is_connected(g))\nh = g.to_directed()\nN, K = h.order(), h.size()\navg_deg= float(K) \/ N\nprint (\"# Nodes: \", N)\nprint (\"# Edges: \", K)\nprint (\"Average connectivity degree: \", avg_deg)","33f317c9":"dis = []\nin_degrees= h.in_degree() \nfor i in in_degrees:\n    dis.append(i[1])\nfig = plt.figure(figsize=(20,20));\nplt.title('Degree Distribution per day');\nplt.grid(True);\nplt.xlabel('Days');\nplt.ylabel('# of Demand');\nplt.plot(dis[0:99],color='orange',alpha=0.90);","bb8a7a6c":"## Now, we add colors.","9f9e7c44":"# Let's start with a quick view of dataset...\n\n","4715b5e7":"## We display our graph.","16af023c":"## Ditribution of demand","06718f5f":"## Sanity check...","05833843":"## We will fill a simple graph with days, families and related wishes."}}