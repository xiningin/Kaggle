{"cell_type":{"cbf49e06":"code","234e9bae":"code","643e9c4c":"code","43966edd":"code","825e2fd5":"code","e26b0b4e":"code","214859e1":"code","051a9730":"code","494676a5":"code","d680435c":"code","bea165e5":"code","88322afb":"code","d04e00a2":"code","224b96d3":"code","abbc8a2a":"code","3b21f2ec":"code","6eb7c486":"code","51e30dea":"code","eb4d172b":"code","56efbf9a":"code","ae33a48c":"code","07038725":"code","62ffd2ed":"code","a5be9f7e":"code","095a8f10":"code","2854cb2c":"code","616f0a33":"code","d9c67654":"markdown","490f33a3":"markdown","9a54ac6f":"markdown","f034e744":"markdown"},"source":{"cbf49e06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.set_option('float_format', '{:.2f}'.format)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport sklearn.linear_model as model\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","234e9bae":"dataset = pd.read_csv('..\/input\/BlackFriday.csv')\ndataset.head()","643e9c4c":"print(\"The Number of Rows:\",dataset.shape[0])\nprint(\"The Number of Columns:\",dataset.shape[1])","43966edd":"dataset.Age.replace(('0-17','18-25','26-35','36-45','46-50','51-55','55+'),(0,1,2,3,4,5,6), inplace =True)","825e2fd5":"dataset.head()","e26b0b4e":"dataset.describe(include='all')","214859e1":"age0 = dataset[dataset['Age'] ==0]['Purchase'].values.sum()\nage1 = dataset[dataset['Age'] ==1]['Purchase'].values.sum()\nage2 = dataset[dataset['Age'] ==2]['Purchase'].values.sum()\nage3 = dataset[dataset['Age'] ==3]['Purchase'].values.sum()\nage4 = dataset[dataset['Age'] ==4]['Purchase'].values.sum()\nage5 = dataset[dataset['Age'] ==5]['Purchase'].values.sum()\nage6 = dataset[dataset['Age'] ==6]['Purchase'].values.sum()\n\n\nX = pd.DataFrame([age0,age1,age2,age3,age4,age5,age6])\nX.index=['0-17','18-25', '26-35','36-45','46-50','50-54','55+']\nX.plot(kind = 'bar',title=\"Total Sales based on the Age group\")","051a9730":"dataset.Gender.replace(('M','F'),(0,1), inplace =True)\ndataset.head()","494676a5":"Male = dataset[dataset['Gender'] ==0]['Purchase'].values.sum()\nFemale = dataset[dataset['Gender'] ==1]['Purchase'].values.sum()\n\nprint(\"Total Sales by Male: \", Male)\nprint(\"The Ratio of Male to Total: \", Male\/(Male+Female))\nprint(\"Total Sales by Female:\", Female)\nprint(\"The Ratio of Female to Total: \", Female\/(Male+Female))","d680435c":"GenderPlot = pd.DataFrame([Male,Female])\nGenderPlot.index=['Male','Female']\nGenderPlot.plot(kind = 'bar',title=\"Total Sales based on the Gender\")","bea165e5":"corr = dataset.corr(method='pearson')\nprint(\"Correlation of the Dataset:\",corr)","88322afb":"f,ax = plt.subplots(figsize=(18, 18))\nprint(\"Plotting correlation:\")\nsns.heatmap(corr,annot= True, linewidths=.5)","d04e00a2":"print(\"Data Based on Occupation:\")\noccupationStat = dataset['Occupation'].value_counts(dropna = False)\noccupationStat.plot(kind='pie', figsize=(10,10))","224b96d3":"print(\"Total Nan Values:\")\ntotalnan = dataset.isnull().sum(axis = 0)\nprint(totalnan)","abbc8a2a":"dataframe = dataset.drop(['User_ID'], axis=1)\n","3b21f2ec":"labelEncoder_CityCat = LabelEncoder()\ndataframe.City_Category = labelEncoder_CityCat.fit_transform(dataframe.City_Category)","6eb7c486":"dataframe.Stay_In_Current_City_Years.replace(('4+'),(4), inplace =True)","51e30dea":"dataframe.Product_Category_1 = dataframe.Product_Category_1.fillna(0)\ndataframe.Product_Category_2 = dataframe.Product_Category_2.fillna(0)\ndataframe.Product_Category_3 = dataframe.Product_Category_3.fillna(0)","eb4d172b":"dataframe = dataframe[0:30000]\ndataframe.head()\nprint(\"No. of Rows:\", dataframe.shape[0])","56efbf9a":"# features = dataframe.drop(['Product_ID'],axis=1)\n# X_train = features[:20000]\n# X_test = features[20000:]\n# y_train = features.Purchase[:20000]\n# y_test = features.Purchase[20000:]\n\n# # diabetes_X_train = diabetes_X[:-20]\n# # diabetes_X_test = diabetes_X[-20:]\n\n# # # Split the targets into training\/testing sets\n# # diabetes_y_train = diabetes.target[:-20]\n# # diabetes_y_test = diabetes.target[-20:]\n\n# # testtarget = features.Purchase[20000:]\n","ae33a48c":"testfeature = testfeature.drop(['Purchase'],axis=1)\n# testfeature = testfeature.drop(['Product_ID'],axis=1)","07038725":"# trainfeatures.drop(['Product_ID'],axis=1)","62ffd2ed":"trainfeatures.head(10)","a5be9f7e":"features_train, features_test, target_train, target_test = train_test_split(features, target, test_size=0.20, random_state=42)","095a8f10":"print(trainfeatures.shape)\nprint(traintarget.shape)","2854cb2c":"regr = model.LinearRegression()\nregr.fit(features_train,target_train)\nprediction = regr.predict(features_test)\n\nprint('Coefficients: \\n', regr.coef_)\nprint(\"Mean squared error: %.2f\"\n      % mean_squared_error(target_test, prediction))\nprint('Variance score: %.2f' % r2_score(target_test, prediction))\n","616f0a33":"svr = SVR()\nsvr.fit(features_train,target_train)\nprediction_svr = svr.predict(features_test)\nscore = r2_score(target_test, prediction_svr)\nmae = mean_squared_error(prediction_svr, target_test)\nprint(\"Score:\", score)\nprint(\"Mean Absolute Error:\", mae)","d9c67654":"**This notebook is a work in Progress !**","490f33a3":"Since we can't have categorical data for Regression but if we notice our Stay_In_Current_City_Years has 4+ Years for people staying more than 4 years. since 4+ is the only range we have, here we will replace that with four and consider 4 as everything thats more than 3.","9a54ac6f":"Since the age data we have is a range, we try to give it a discrete value which would help us in prediction.","f034e744":"We have some missing data in our columns, we can handle it in multiple ways. For now, we are just going to use only the datas that doesn't contain N\/A. In future versions of the notebook we will update this with other methods of handling missing data."}}