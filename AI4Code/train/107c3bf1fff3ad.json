{"cell_type":{"685e161e":"code","7cad4546":"code","91cfe836":"code","bfe3eaaf":"code","0b4348c6":"code","5ceae490":"code","44335171":"code","a9b9069c":"code","983d7601":"code","5ab784f2":"code","9d2a1ce2":"code","89b09b3d":"code","d460bb98":"code","2e64d603":"code","1a4c647d":"code","dac4f7ec":"code","343726e2":"code","a0e0bea7":"code","c699cbb5":"code","8b0ab847":"code","3fb13f9a":"code","8ebd839b":"markdown","ac8debb4":"markdown","5a8ca979":"markdown","38f18736":"markdown","83d46086":"markdown","f5d07943":"markdown","91a77c8b":"markdown","04b9d698":"markdown","d9de88ce":"markdown","e4032b5f":"markdown","dca1cfc3":"markdown","3a8cbd37":"markdown","5b10eb87":"markdown","fbe4833f":"markdown","78d262e7":"markdown","288ccd2d":"markdown","338db94d":"markdown","41364e53":"markdown","e2304caf":"markdown","03d8b3f2":"markdown","df8cb27e":"markdown","66cab893":"markdown","fe281094":"markdown"},"source":{"685e161e":"import numpy as np\nimport pandas as pd","7cad4546":"dt = pd.read_csv('..\/input\/winequality-red.csv')","91cfe836":"dt.shape\n","bfe3eaaf":"dt.head()","0b4348c6":"dt.isna().sum()","5ceae490":"dt.quality.min()","44335171":"dt.quality.max()","a9b9069c":"for x in dt.columns:\n    print(dt[[x,'quality']].corr())\n    print()\n","983d7601":"import matplotlib.pyplot as plt\n%matplotlib inline","5ab784f2":"plt.hist(dt.quality,10,density=False, facecolor='blue')","9d2a1ce2":"from sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier","89b09b3d":"dt.columns","d460bb98":"x = dt[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n       'pH', 'sulphates', 'alcohol']].copy()","2e64d603":"y= dt[['quality']].copy()","1a4c647d":"print(x.shape)\nprint(y.shape)","dac4f7ec":"x_train, x_test, y_train,y_test = train_test_split(x,y, test_size=0.33, random_state=324)","343726e2":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)\n","a0e0bea7":"wine_quality_classifier = DecisionTreeClassifier(max_leaf_nodes=10, random_state=1)\nwine_quality_classifier.fit(x_train,y_train)","c699cbb5":"predictions = wine_quality_classifier.predict(x_test)","8b0ab847":"predictions[:5]\n","3fb13f9a":"accuracy_score(y_true=y_test, y_pred=predictions)","8ebd839b":"Podemos testar a correla\u00e7\u00e3o entre as colunas vari\u00e1veis e a coluna qualidade, que \u00e9 nosso target.","ac8debb4":"Sabemos como est\u00e3o distribuidos os valores da coluna ***quality*** na nossa tabela. A maior parte dos vinhos est\u00e3o classificados entre 5 e 6.","5a8ca979":"Rodando os c\u00f3digos *dt.isnull().sum() -ou st.isna().sum() -* temos a soma de todos os valores que s\u00e3o NaN. Como o m\u00e9todo isna() retorna uma tabela de valores Booleanos, podemos soma-los, onde True=1 e False=0. Neste caso, vemos que essa tabela n\u00f5a possui valores NaN.","38f18736":"## Prepara\u00e7\u00e3o ","83d46086":"## Treinando a \u00c1rvore de Decis\u00e3o","f5d07943":"# Aplicando Machine Learning ","91a77c8b":"Vemos acima que a tabela ***dt*** foi divida em tabelas, com tamanhos conforme definido em test_size.","04b9d698":"Podemos ver que a tabela traz 12 colunas, todas num\u00e9ricas, com dados fisico-qu\u00edmicos dos vinhos. A ultima coluna nos traz a classifica\u00e7\u00e3o do vinho.","d9de88ce":"Para nosso estudo, iremos utilizar o algor\u00edtmo de \u00e1rvore de decis\u00e3o, da biblioteca Scikt-Learn. Importe a biblioteca e suas fun\u00e7\u00f5es necess\u00e1rias para a utiliza\u00e7\u00e3o:\n","e4032b5f":"Analisando o resultado, vemos que a maior correla\u00e7\u00e3o com a coluna *quality* \u00e9 a coluna *alcohol*, mas ainda assim, sendo uma fraca correla\u00e7\u00e3o.\n\n","dca1cfc3":"# Mas como nosso modelo se saiu?\n\nPodemos usar ***accuracy_score()*** para medir o percentual de acerto do nosso modelo.\n\nquanto mais pr\u00f3ximo de 1, melhor \u00e9 o seu desempenho.","3a8cbd37":"Notasse que a nota m\u00ednima de qualidade \u00e9 3, e a m\u00e1xima \u00e9 8.","5b10eb87":"Pr\u00f3ximo passo \u00e9 criar nosso modelo classificador, que ir\u00e1 receber ***x_train*** e ***y_train*** para treinamento.\n\n**max_leaf_nodes:** define a quantidade de n\u00f3s na \u00e1rvore de decis\u00e3o ser\u00e3o utilizadas.","fbe4833f":"Come\u00e7amos agora o treinamento do nosso modelo. \nUsamos o metodo train_test_split() para separar nossos dados que ser\u00e3o base dos treinamentos e testes. \n\n**test_size:** usado para definir o percentual do montante dos dados da tabela original usado na tabela teste. O restante ser\u00e1 usado no treinamento.\n\n**random_state:** n\u00famero inteiro que representa uma vers\u00e3o randomica da divis\u00e3o dos dados entre a tabela teste e treinamento.\nse n\u00e3o for informado, a cada vez que a o c\u00f3digo for processado o algor\u00edtmo ir\u00e1 gerar uma base diferente para as tabelas teste e treinamento.\n","78d262e7":"O dataset est\u00e1 dispon\u00edvel no endere\u00e7o: https:\/\/www.kaggle.com\/uciml\/red-wine-quality-cortez-et-al-2009","288ccd2d":"Com o modelo j\u00e1 treinado, colocaremos em teste usando ***x_test***. Passaremos um conjunto n\u00e3o conhecido para o modelo, onde ele ir\u00e1 classificar a qualidade dos vinhos analisando as vari\u00e1veis recebidas. Esse resultado ser\u00e1 armazenado em ***predictions*** em um formato de numpy.ndarray.","338db94d":"Vamos analisar os valores faltantes (missing values) da nossa tabela:\n","41364e53":"\n\nPodemos ent\u00e3o come\u00e7ar a preparar nossos dados para serem aplicados ao processo de classifica\u00e7\u00e3o, com intuito de prever a qualidade dos vinhos atrav\u00e9s das outras vari\u00e1veis(colunas).\nPrimeiro, iremos separar as colunas entre var\u00e1veis (x) e nosso alvo (y). Assim, iremos ter as colunas que ser\u00e3o nossa base de calculos para a classifica\u00e7\u00e3o.\n","e2304caf":"# Esse notebook visa:\n## - explorar os dados da tabela wine_quality\n## - visualizar a distribui\u00e7\u00e3o no datasets\n## - classificar os vinhos que nela constam usando algor\u00edtmo de \u00e1rvore de decis\u00e3o \n","03d8b3f2":"### Agora que j\u00e1 fizemos uma breve an\u00e1lise da nossa tabela e aplicamos o algoritmo de \u00e1rvore de decis\u00e3o para classificar os vinhos, fa\u00e7a alguns testes, alterando os n\u00fameros de n\u00f3s, aplicando outro algor\u00edtmo de classifica\u00e7\u00e3o ou at\u00e9 mesmo regress\u00e3o, e compare os resultados atingidos. Bons estudos.","df8cb27e":"Primeiro, vamos importar a biblioteca pandas para nosso notebook, a seguir iremos ler o arquivo com os dados e explorar seus dados:","66cab893":"# Visualizando os dados usando Matplotlib\nPodemos usar tamb\u00e9m gr\u00e1ficos para analisar melhor os resultados, usando a biblioteca matplotlib.\nPrimeiro, temos que importar a biblioteca.","fe281094":"Analisando o formato das tabelas geradas, vemos que a tabela *dt* foi dividida em duas, ***x*** com as 11 vari\u00e1veis e ***y*** com nosso alvo (*quality*) "}}