{"cell_type":{"9e8ab4c2":"code","46611eff":"code","8103d970":"code","9940a6f4":"code","d363a5f0":"code","c0bd40f1":"code","cce1430b":"code","5efb220c":"code","f37b3cbe":"code","f49c133e":"code","df537f37":"code","84767492":"code","00ff21db":"code","f50d234a":"code","b17af0e8":"code","6b2291e1":"code","efb800a0":"code","941bd02b":"code","b3b20eb8":"code","7b24a7f6":"code","1fbb711e":"code","0fd4513e":"code","a2e35e01":"code","79f747bc":"code","d4dd0753":"code","f59e57ab":"code","f14da1e9":"code","8d36d249":"code","d7636c32":"markdown","bc2b9703":"markdown","8d6ff0b5":"markdown","a0336196":"markdown","32be4281":"markdown","37c23815":"markdown","9212d458":"markdown","314e7e8e":"markdown","a581991c":"markdown","e0f566d5":"markdown","f0ae1be8":"markdown","acc5706f":"markdown"},"source":{"9e8ab4c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","46611eff":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","8103d970":"train_df.columns","9940a6f4":"train_df.head()","d363a5f0":"train_df.describe()","c0bd40f1":"train_df.info()","cce1430b":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n   ","5efb220c":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","f37b3cbe":"category2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor c in category2: \n    print(\"{} \\n\".format(train_df[c].value_counts()))","f49c133e":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","df537f37":"numericVar = [\"Fare\", \"Age\", \"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","84767492":"# Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)\n","00ff21db":"# Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)\n","f50d234a":"# Sibsp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)\n","b17af0e8":"# Age vs Survived\ntrain_df[[\"Age\",\"Survived\"]].groupby([\"Age\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)\n","6b2291e1":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","efb800a0":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","941bd02b":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","b3b20eb8":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","7b24a7f6":"train_df.head()","1fbb711e":"train_df.columns[train_df.isnull().any()]","0fd4513e":"train_df.isnull().sum()","a2e35e01":"train_df[train_df[\"Embarked\"].isnull()]","79f747bc":"train_df.boxplot(column = \"Fare\",by = \"Embarked\")\nplt.show()","d4dd0753":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")","f59e57ab":"train_df[train_df[\"Fare\"].isnull()]","f14da1e9":"train_df[train_df[\"Pclass\"] == 3][\"Fare\"].mean()","8d36d249":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(\"12.7\")","d7636c32":"<a id = '5'><a\/><br>\n<font color = 'black'>\n## Numerical Variable Analysis","bc2b9703":"<a id = '9'><a\/><br>\n<font color = 'black'>\n## Find Missing Value","8d6ff0b5":"<a id = '2'><a\/><br>\n<font color = 'black'>\n# Variable Description\n    \n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survive(1) or died(0)\n1. Pclass: passenger class\n1. Name: name\n1. Sex: gender of passenger\n1. Age: age of passenger\n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number\n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked(C= Cherbourg, Q = Queenstown, S = Sounthampton)\n\n ","a0336196":"<a id = '6'><a\/><br>\n<font color = 'black'>\n# Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* Sibsp - Survived\n* Age - Survived","32be4281":"<a id = '3'><a\/><br>\n<font color = 'black'>\n# Univariate Variable Analysis\n* Categorical Variable Analysis: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n* Numerical Variable Analysis: Fare,age and passengerId","37c23815":"# Introduction\nThe RMS Titanic, a luxury steamship, sank in the early hours of April 15, 1912, off the coast of Newfoundland in the North Atlantic after sideswiping an iceberg during its maiden voyage. Of the 2,240 passengers and crew on board, more than 1,500 lost their lives in the disaster.\n\n<font color = 'blue'>\nContent : \n\n1. [Load and Check Data](#1)\n2. [Variable Describtion](#2)\n3. [Univariate Variable Analysis](#3)\n    * [Categorical Variable](#4)\n    * [Numerical Variable](#5)\n4. [Basic Data Analysis](#6)\n5. [Outlier Detection](#7)\n6. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)","9212d458":"<a id = '10'><a\/><br>\n<font color = 'black'>\n## Fill Missing Value\n\n* Embarked has 2 missing value\n* Fare has only 1\n    \n    ","314e7e8e":"<a id = '7'><a\/><br>\n<font color = 'black'>\n# Outlier Detection","a581991c":"<a id = '1'><a\/><br>\n<font color = 'black'>\n# Load and Check Data","e0f566d5":"<a id = '8'><a\/><br>\n<font color = 'black'>\n# Missing Value\n\n* Find Missing Value\n* Fill Missing Value\n\n\n\n","f0ae1be8":"<a id = '4'><a\/><br>\n<font color = 'black'>\n## Categorical Variable Analysis","acc5706f":"* float64(2) : Fare and Age\n* int64(5) : Pclas,sibsp,parch,passengerId, and survived\n* object(5) : Cabin,embarked,ticket,name and sex"}}