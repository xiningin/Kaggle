{"cell_type":{"acc4614c":"code","d3200abb":"code","8ce3594e":"code","53b67622":"code","c6f224ce":"code","0e9e0a32":"code","df940a8c":"code","ccb38525":"code","40617b6d":"markdown","160ebe0b":"markdown","912c8591":"markdown","e5f6ded5":"markdown","12dfa2a1":"markdown","7698fe7c":"markdown"},"source":{"acc4614c":"import numpy as np\nimport pandas as pd\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import make_scorer, f1_score","d3200abb":"train = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv')","8ce3594e":"def filter_text(df):\n    df['text']=df['text'].str.replace('http\\S+', '', case=False, regex=True)\n    df['text']=df['text'].str.replace('@\\S+', '', regex=True)\n    df['text']=df['text'].str.replace('&\\S+', '', regex=True)\nfilter_text(train)\nfilter_text(test)","53b67622":"sw=['the', 'a', 'an', 'in', 'on', 'with', 'by', 'for', 'at',\n    'about', 'of', 'under', 'to', 'into', 'and', 'or', 'but',\n    'nor', 'be']","c6f224ce":"v = CountVectorizer(stop_words=sw)\ntrain_v = v.fit_transform(train['text'])\ntest_v = v.transform(test['text'])","0e9e0a32":"y = train['target']","df940a8c":"clf = MultinomialNB()\nscorer = make_scorer(f1_score)\nparam_grid = {'alpha': [0.01, 0.1, 1]}\nmodel = GridSearchCV(estimator=clf, param_grid=param_grid, scoring=scorer, cv=3)\nmodel.fit(train_v, y)\nprint(\"Best score: %f\" % model.best_score_)\nprint(cross_val_score(model, train_v, y, cv=3, scoring='f1'))","ccb38525":"y = model.predict(test_v)\noutput = pd.DataFrame({'id':test.id, 'target':y})\noutput.to_csv('submission.csv', index=False)","40617b6d":"Use GridSearchCV to find the best parameter.","160ebe0b":"Text feature extraction.","912c8591":"Load data.","e5f6ded5":"Remove URLs and some other strings.","12dfa2a1":"Output the prediction.","7698fe7c":"Set some stop words."}}