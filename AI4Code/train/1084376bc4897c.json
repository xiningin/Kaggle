{"cell_type":{"3fdc9cc6":"code","fb55dd7d":"code","4f90098a":"code","5841a59b":"code","6489f05c":"code","f28e6402":"code","da44cf1e":"code","7c01e4a8":"code","58735d88":"code","4bc23e8b":"code","ad0e9ba8":"code","48a4f061":"code","218f5d6d":"code","6dc32f83":"code","6094e40c":"code","b8fe4614":"code","ac671a50":"code","f8ca3885":"code","c68a3d76":"code","07c5637d":"code","9b83b1cf":"code","ba70b64f":"code","fcf1a4f6":"markdown","484da139":"markdown","c34dd255":"markdown","a9e7af87":"markdown","44c1e2da":"markdown","cf16f294":"markdown","9fa047a3":"markdown","9270d410":"markdown","d84ba3e4":"markdown","da3f9483":"markdown","7e2f83d9":"markdown","af0b3079":"markdown","366c7f2d":"markdown","ba9ca35b":"markdown","fc5e3608":"markdown","13bb2a45":"markdown","4f9eda4a":"markdown","700bf1b5":"markdown","08ee815f":"markdown","1ba0aa15":"markdown"},"source":{"3fdc9cc6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","fb55dd7d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4f90098a":"df=pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf.info()","5841a59b":"df.head()","6489f05c":"df.nunique()","f28e6402":"fig,ax=plt.subplots(figsize=(5,4))\nsns.barplot(x=df['output'].unique(),y=df['output'].value_counts()\/303,palette=[\"C3\", \"C9\"])\nax.set_xlabel(\"Heart attack likelihood\")\nax.set_ylabel('Proportion of patients')\nsns.set_theme(style=\"white\")","da44cf1e":"fig, ax = plt.subplots(5, 1,figsize=(8,20))\nplt.subplot(5,1,1)\nsns.histplot(data=df, x=\"age\", hue=\"output\", multiple=\"stack\",palette=[\"C9\", \"C3\"],kde=True)\n#ax[0].set_xlabel(\"Age\")\nplt.subplot(5,1,2)\nsns.histplot(data=df, x=\"trtbps\", hue=\"output\",bins=14, multiple=\"stack\",palette=[\"C9\", \"C3\"],kde=True)\n#ax[1].set_xlabel(\"Resting blood pressure\")\nplt.subplot(5,1,3)\nsns.histplot(data=df, x=\"chol\", hue=\"output\", multiple=\"stack\",bins=16,palette=[\"C9\", \"C3\"],kde=True)\n#ax[2].set_xlabel(\"Cholestoral\")\nplt.subplot(5,1,4)\nsns.histplot(data=df, x=\"thalachh\", hue=\"output\", multiple=\"stack\",palette=[\"C9\", \"C3\"],kde=True)\n#ax[3].set_xlabel(\"Maximum heart rate\")\nplt.subplot(5,1,5)\nsns.histplot(data=df, x=\"oldpeak\", hue=\"output\", multiple=\"stack\",palette=[\"C9\", \"C3\"],kde=True)","7c01e4a8":"sns.jointplot(data=df,x= 'age',  y='output', kind='reg',color='b')","58735d88":"sns.jointplot(data=df,x= 'thalachh',  y='output', kind='reg',color='b')","4bc23e8b":"sns.jointplot(data=df,x= 'oldpeak',  y='output', kind='reg',color='b')","ad0e9ba8":"fig, ax = plt.subplots(4, 2,figsize=(16,16))\nplt.subplot(4,2,1)\nsns.countplot(data=df, x='sex', hue='output',palette=[\"C9\", \"C3\"])\n#ax[0,0].set_xlabel('Sex')\nplt.subplot(4,2,2)\nsns.countplot(data=df, x='cp', hue='output',palette=[\"C9\", \"C3\"])\n#ax[0,1].set_xlabel('Type of chest pain')\nplt.subplot(4,2,3)\nsns.countplot(data=df, x='fbs', hue='output',palette=[\"C9\", \"C3\"])\n#ax[1,0].set_xlabel('Fasting blood sugar')\nplt.subplot(4,2,4)\nsns.countplot(data=df, x='restecg', hue='output',palette=[\"C9\", \"C3\"])\n#ax[1,1].set_xlabel(\"Resting electrocardiographic results\")\nplt.subplot(4,2,5)\nsns.countplot(data=df, x='exng', hue='output',palette=[\"C9\", \"C3\"])\n#ax[2,0].set_xlabel(\"Exercise induced angina\")\nplt.subplot(4,2,6)\nsns.countplot(data=df, x='slp', hue='output',palette=[\"C9\", \"C3\"])\nplt.subplot(4,2,7)\nsns.countplot(data=df, x='caa', hue='output',palette=[\"C9\", \"C3\"])\n#ax[3,0].set_xlabel(\"Number of major vessels\")\nplt.subplot(4,2,8)\nsns.countplot(data=df, x='thall', hue='output',palette=[\"C9\", \"C3\"])","48a4f061":"import sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nimport xgboost\nfrom xgboost import XGBClassifier\nfrom xgboost import plot_tree\nfrom sklearn.metrics import  accuracy_score","218f5d6d":"target=df['output']","6dc32f83":"df.drop(columns='output',inplace=True)","6094e40c":"X_train, X_test, y_train, y_test = train_test_split(df, target ,test_size=0.33,random_state=42)\nprint ((X_train.shape),(y_train.shape),(X_test.shape),(y_test.shape))","b8fe4614":"logreg = LogisticRegression(solver='lbfgs', max_iter=5000)\nlogreg.fit(X_train, y_train)","ac671a50":"Y_pred = logreg.predict(X_test)\npredictions = [round(value) for value in Y_pred]\naccuracy = accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))","f8ca3885":"random_forest = RandomForestClassifier(n_estimators=100, random_state = 1)\nrandom_forest.fit(X_train, y_train)","c68a3d76":"Y_pred = random_forest.predict(X_test)\npredictions = [round(value) for value in Y_pred]\naccuracy = accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))","07c5637d":"xgb = XGBClassifier(use_label_encoder=False)\nxgb.fit(X_train,y_train)","9b83b1cf":"Y_pred = xgb.predict(X_test)\npredictions = [round(value) for value in Y_pred]\naccuracy = accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))","ba70b64f":"fig, ax = plt.subplots(figsize=(15, 10))\nplot_tree(xgb, num_trees=30, ax=ax)\nplt.show()","fcf1a4f6":"### 2.2 Lets see which features are continuous or discrete","484da139":"#### We see that our data is not skewed","c34dd255":"### Conclusion: the three methods have comparable accuracy","a9e7af87":"## 4.3 Logistic regression ","44c1e2da":"## 4.6 Visualize the decision tree","cf16f294":"# 4.4 Random forest","9fa047a3":"## 4.1 Importing libraries.  We are going to use Logistic regression, Random Forest and Boosted Trees to make predictions.","9270d410":"#### There are three features that strongly correlate with the output: age of the patient,  maximum heart rate and old peak.  We can thus draw three conclusions. First, people who are younger than 50 have much higher risk of getting a heart attack compared to older people.  People around 40 are particularly vulnerable. Second, maximum heart rate beyond 150 is a strong indicator of heart attacks. Third, small values (smaller than one) of old peak are worrisome. \n#### We draw some joint plots to further confirm our observation about these features. We can see sharp slope in the figures below.","d84ba3e4":"## 4.2 Prepare the train and test sets","da3f9483":"### 3.1 For binary classification, it is important to check if the data is skewed ","7e2f83d9":"# 4. Building models","af0b3079":"#### By default Xgboost combine 100 trees to make the final decision. The figure belows shows the 30'th tree in the forest. We can see that the features near the root are the ones deemed significant by our exploratory analysis. This is one big advantage of decision tree over logistic regression: it is more interpretable.","366c7f2d":"# 1. Importing exploratory libraries ","ba9ca35b":"# 3. Exploring the data","fc5e3608":"### 2.1 Meaning of the columns \n1. Age : Age of the patient\n\n2. Sex : Sex of the patient\n\n3. exang: exercise induced angina (1 = yes; 0 = no)\n\n4. ca: number of major vessels (0-3)\n\n5. cp : Chest Pain type chest pain type\n\n    - Value 1: typical angina\n\n    - Value 2: atypical angina\n\n    - Value 3: non-anginal pain\n\n    - Value 4: asymptomatic\n\n6. trtbps : resting blood pressure (in mm Hg)\n\n7. chol : cholestoral in mg\/dl fetched via BMI sensor\n\n8. fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n\n9. rest_ecg : resting electrocardiographic results\n\n    - Value 0: normal\n\n    - Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n\n    - Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n\n10. thalach : maximum heart rate achieved\n\n11. target : 0= less chance of heart attack 1= more chance of heart attack","13bb2a45":"## 3.3 Next, lets analyze discrete features using countplot","4f9eda4a":"### 3.2 We look at each feature now, starting with continuous features. We analyze their significance using stacked histogram with kernel density estimation and joint plot. ","700bf1b5":"# 2. Take a look at the data set","08ee815f":"# 4.5 XGBoost","1ba0aa15":"#### We observe some strong correlations from these plots. The following feature values are sharp indicators of heart attack:\n\n    - Number of major vessles equals to zero\n    - Thall equals to two\n    - slp equals to two \n    - Anginas that are not exercise induced\n    - Having ST-T wave abnormality in resting electrocardiographic results\n    - Having atypical angina or non-anginal chest pain\n#### Moreover, men are more likely to have heart attack than women."}}