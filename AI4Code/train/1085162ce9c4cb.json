{"cell_type":{"4e27fd93":"code","39b942d1":"code","6a74d6f1":"code","a570a144":"code","845f5761":"code","319e9072":"code","d50685b9":"code","38af65df":"code","56ff2f5f":"code","467551c6":"code","a26603f0":"code","ce5dc39d":"code","a81179f3":"code","c97828ce":"code","c1991adc":"code","c5c173f7":"code","8396b536":"code","db3b754a":"code","42772870":"code","344c0a41":"code","f37a34ec":"code","74df7ef8":"code","b0dccba8":"code","c34c8d91":"code","785a96f5":"code","c560c031":"code","0ddd29de":"code","e02df1dc":"code","6d4f4c38":"code","5fff97f6":"code","f4a4f942":"code","b633f093":"code","2cba9497":"code","902d0f59":"code","61938ef2":"code","44f50146":"code","080ea9ac":"code","7d7e90ab":"code","ebec7232":"code","2044916d":"code","e0d37071":"markdown","4e37484b":"markdown"},"source":{"4e27fd93":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","39b942d1":"# Preparing the necessary tools\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline  \nfrom sklearn.ensemble import RandomForestClassifier\n# model evaluation\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import confusion_matrix, classification_report","6a74d6f1":"df = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","a570a144":"df.info()","845f5761":"df[\"stroke\"]","319e9072":"df.isna().sum()","d50685b9":"# Filling missing values\nfor column in ['bmi']:\n    df[column].fillna(df[column].mode()[0], inplace=True)","38af65df":"df.isna().sum()","56ff2f5f":"df.columns","467551c6":"df.age.plot.hist();","a26603f0":"# Dropping unnecessary columns\ndf.drop(\"id\", axis=1, inplace = True)","ce5dc39d":"df.shape","a81179f3":"for label, content in df.items():\n    if pd.api.types.is_string_dtype(content):\n        print(label)","c97828ce":"# turning strings into categories\nfor label, content in df.items():\n    if pd.api.types.is_string_dtype(content):\n        df[label] = content.astype(\"category\").cat.as_ordered()","c1991adc":"df.work_type.cat.categories","c5c173f7":"df.info","8396b536":"# turn categorical variables into numbers\nfor label, content in df.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        df[label] = pd.Categorical(content).codes+1  ","db3b754a":"df.info()","42772870":"df.corr()\ncorr_matrix = df.corr()\nfig, ax = plt.subplots(figsize=(15, 10))\nax = sns.heatmap(corr_matrix,\n                annot=True,\n                linewidths=0.5,\n                fmt=\".2f\",\n                cmap=\"YlGnBu\");","344c0a41":"# Modelling\nX = df.drop(\"stroke\", axis = 1)\ny = df[\"stroke\"]","f37a34ec":"X.head()","74df7ef8":"X.shape","b0dccba8":"y.shape","c34c8d91":"# Split the data\nnp.random.seed(42)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","785a96f5":"X_train","c560c031":"y_train, len(y_train)","0ddd29de":"# fit and score the model\nclf = RandomForestClassifier()\nclf.fit(X_train, y_train)\nclf.score(X_test, y_test)","e02df1dc":"X.head()","6d4f4c38":"clf.predict(X_test)","5fff97f6":"np.array([y_test])","f4a4f942":"y_preds = clf.predict(X_test)\nnp.mean(y_preds==y_test)","b633f093":"clf.score(X_train, y_train)","2cba9497":"clf.score(X_test, y_test)","902d0f59":"cross_val_score(clf, X, y)","61938ef2":"cross_val_score = cross_val_score(clf, X, y, cv=5)\nnp.mean(cross_val_score)","44f50146":"print(f\"Stroke Prediction Classifier cross-validated Accuracy:{np.mean(cross_val_score) *100:.2f}%\")","080ea9ac":"from sklearn.metrics import roc_curve\n\n# make predictions with probabilities\nX_train, X_test, y_train, y_test= train_test_split(X, y, test_size=0.2)\nclf.fit(X_train, y_train)\n\ny_probs = clf.predict_proba(X_test)\ny_probs[:10]","7d7e90ab":"y_probs_positive = y_probs[:, 1]\ny_probs_positive[:10]","ebec7232":"fpr, tpr, thresholds = roc_curve(y_test, y_probs_positive)\n\ndef plot_roc_curve(fpr, tpr):\n    \"\"\"\n    plots a ROC curve given the false positive rate(fpr)\n    and true positive rate (tpr) of a model.\n    \"\"\"\n    plt.plot(fpr, tpr, color=\"orange\", label=\"ROC\")\n    plt.plot([0, 1], [0, 1], color=\"darkblue\", linestyle= \"--\", label=\"guessing\")\n    plt.xlabel(\"false_positive_rate(fpr)\")\n    plt.ylabel(\"true_positive_rate(tpr)\")\n    plt.title(\"Receiver operating characteristics (ROC) curve\")\n    plt.legend()\n    plt.show()\n    \nplot_roc_curve(fpr, tpr)","2044916d":"from sklearn.metrics import roc_auc_score\nroc_auc_score(y_test, y_probs_positive)","e0d37071":"### Predicting Stroke using machine learning\n\nStroke is a leading cause of death, yearly, about 800,000 people in the United States have a stroke, so predicting Stroke is an important mission.\n\nAim: based on the (10) given parameters if we can predict Stroke?","4e37484b":"### Data exploration and processing"}}