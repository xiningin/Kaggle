{"cell_type":{"9b968cc0":"code","58df7f35":"code","57ecb779":"code","bcbe1a52":"code","7e5311b0":"code","9ae216e0":"code","d0b8b247":"code","6d218851":"code","47673af3":"code","67edba3c":"code","6229dbae":"code","209f5782":"code","6545ab0b":"code","62970be8":"code","69875ce8":"code","9c086ebe":"code","5ddf3449":"code","88c27ed0":"code","8157091d":"code","9814be0f":"code","08581b1e":"code","cbf8dbac":"code","2dd84364":"code","b798e399":"code","5e6b4a19":"code","76802cbe":"code","ab460b00":"code","9a3731c6":"code","b601c626":"code","2ffa8d63":"code","0145223f":"code","0fac8e01":"code","b98e13e7":"code","444fe74c":"code","33cd4c1f":"code","5363ced3":"code","b8cdcc4e":"code","4fdf5d61":"code","6d63161c":"code","945009d7":"code","36ecde5f":"code","e60de907":"code","42b95068":"code","b3861500":"code","48c38ae8":"code","90014835":"code","5268f2b1":"code","b7a311ff":"code","4d788862":"code","a678a34e":"code","d56ac4fa":"code","2dc30d25":"code","a94ac4ca":"code","01f08430":"code","d14d03a0":"code","37a7928f":"code","7244ee48":"code","c18533ef":"markdown","ce5a64e8":"markdown","bf6cbe0b":"markdown","2ad62112":"markdown","1cac278d":"markdown","377e4d91":"markdown","d8ae6e5e":"markdown","59b8700b":"markdown","77c7c33f":"markdown","3e900a85":"markdown","01643199":"markdown","b8a390f8":"markdown","04e8bf51":"markdown","d8c24db8":"markdown","a647ba6f":"markdown","66e08e8f":"markdown","99a65d78":"markdown","b54e937c":"markdown","6f33c3f1":"markdown","708c49ab":"markdown","9889dfb0":"markdown","2f80f5b0":"markdown","be278d14":"markdown","07d8ac98":"markdown","6ac7c2c6":"markdown","b5cd6265":"markdown","3c32ad81":"markdown","cc95415c":"markdown","12e6a2da":"markdown","9e94141e":"markdown","0f59bb3c":"markdown"},"source":{"9b968cc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58df7f35":"!pip install download","57ecb779":"from __future__ import absolute_import,division,print_function,unicode_literals\n\nimport matplotlib as mpl\nimport os\nfrom datetime import datetime\n\nimport pandas as pd\n\nfrom download import download\n\nmpl.rcParams['figure.figsize'] = (8,6)\nmpl.rcParams['axes.grid'] = False\n","bcbe1a52":"path = download('https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/00501\/PRSA2017_Data_20130301-20170228.zip','\/kaggle\/temp',replace=True, kind=\"zip\")","7e5311b0":"\ndf = pd.read_csv('\/kaggle\/temp\/PRSA_Data_20130301-20170228\/PRSA_Data_Dingling_20130301-20170228.csv', encoding='ISO-8859-1')","9ae216e0":"df.head()","d0b8b247":"df.info()","6d218851":"def conv_to_date(x):\n    return datetime.strptime(x,\"%Y %m %d %H\")","47673af3":"a_df=pd.read_csv(\"\/kaggle\/temp\/PRSA_Data_20130301-20170228\/PRSA_Data_Dingling_20130301-20170228.csv\",\n                 parse_dates=[['year','month','day','hour']],date_parser=conv_to_date,keep_date_col=True)","67edba3c":"a_df.head()","6229dbae":"a_df.info()","209f5782":"a_df['month']=pd.to_numeric(a_df['month'])","6545ab0b":"a_df.shape","62970be8":"a_df.columns","69875ce8":"a_df.isnull().any()","9c086ebe":"print('Unique values:',a_df.nunique())","5ddf3449":"a_df.describe()","88c27ed0":"df_nonindexed=a_df.copy()","8157091d":"a_df=a_df.set_index('year_month_day_hour')","9814be0f":"a_df.index","08581b1e":"a_df.head()","cbf8dbac":"a_df.loc['2013-03-01':'2013-03-05']","2dd84364":"a_df.loc['2013':'2014']","b798e399":"pm_data=a_df['PM2.5']","5e6b4a19":"pm_data.head()","76802cbe":"pm_data.plot(grid=True)","ab460b00":"a_df_15=a_df.loc['2015']\npm_15=a_df_15['PM2.5']\npm_15.plot(grid=True)","9a3731c6":"a_df_15=a_df.loc['2016']\npm_15=a_df_15['PM2.5']\npm_15.plot(grid=True)","b601c626":"import plotly.express as px","2ffa8d63":"fig = px.line(df_nonindexed,x='year_month_day_hour',y='PM2.5',title='PM 2.5 with slider')\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","0145223f":"fig = px.line(df_nonindexed,x='year_month_day_hour',y='PM2.5',title='PM 2.5 with slider')\n\nfig.update_xaxes(rangeslider_visible=True,rangeselector=dict(\n                        buttons = list([\n                        dict(count = 1,label = '1y',step='year',stepmode = \"backward\"),\n                        dict(count = 2,label = '2y',step='year',stepmode = \"backward\"),\n                        dict(count = 3,label = '3y',step='year',stepmode = \"backward\"),\n                        dict(step= 'all')\n                            ])        \n                        ))\nfig.show()","0fac8e01":"df_14=a_df['2014'].reset_index()\ndf_15=a_df['2015'].reset_index()\n\ndf_14['month_day_hour']=df_14.apply(lambda x: str(x['month'])+\".\"+x['day'],axis=1)\ndf_15['month_day_hour']=df_15.apply(lambda x: str(x['month'])+\".\"+x['day'],axis=1)\n\nplt.plot(df_14['month_day_hour'],df_14['PM2.5'])\nplt.plot(df_15['month_day_hour'],df_15['PM2.5'])\n\nplt.legend(['2014','2015'])\nplt.xlabel('Month')\nplt.ylabel('PM2.5')\n\nplt.title('Air qulaity 2014 and 2015')","b98e13e7":"df_14.head()","444fe74c":"a_df['2014':'2016'][['month','PM2.5']].groupby('month').describe()","33cd4c1f":"a_df['2014':'2016'][['month','PM2.5','TEMP']].groupby('month').agg({'PM2.5':['min','max'],'TEMP':['min','max']})","5363ced3":"df_15=a_df['2015']\na_df_15=df_15[['PM2.5','TEMP']]\na_df_15.plot(subplots=True)","b8cdcc4e":"a_df[['PM2.5','TEMP']].hist()","4fdf5d61":"a_df['TEMP'].plot(kind='density')","6d63161c":"pd.plotting.lag_plot(a_df['TEMP'],lag=1)","945009d7":"pd.plotting.lag_plot(a_df['TEMP'],lag=10)","36ecde5f":"pd.plotting.lag_plot(a_df['TEMP'],lag=24)","e60de907":"pd.plotting.lag_plot(a_df['TEMP'],lag=8640)","42b95068":"pd.plotting.lag_plot(a_df['TEMP'],lag=4320)","b3861500":"pd.plotting.lag_plot(a_df['TEMP'],lag=2150)","48c38ae8":"a_df_15 = a_df['2015']\npm_data_2015 = a_df_15[['PM2.5','TEMP','PRES']]\npm_data_2015.plot(subplots = True)","90014835":"multi_data = a_df[['PM2.5','TEMP','PRES','RAIN','DEWP']]\nmulti_data.plot(subplots = True)","5268f2b1":"multi_data = a_df[['PM2.5','SO2','NO2','O3','CO']]\nmulti_data.plot(subplots = True)","b7a311ff":"a_df['2014':'2015'][['PM2.5','O3']].plot(figsize=(15,8),linewidth= 3,fontsize = 15)\nplt.xlabel('year_month_day_hour')","4d788862":"g = sns.pairplot(a_df[['PM2.5','SO2','NO2','O3','CO']])","a678a34e":"aq_corr = a_df[['PM2.5','SO2','NO2','O3','CO']].corr(method = 'pearson')\naq_corr","d56ac4fa":"import seaborn as sns\n\nsns.heatmap(aq_corr)","2dc30d25":"a_df.groupby('wd').agg(median=('PM2.5','median'),mean=('PM2.5','mean'),max=('PM2.5','max'),min=('PM2.5','min')).reset_index()","a94ac4ca":"a_dna= a_df.copy()\n\na_dna=a_dna.dropna()","01f08430":"pd.plotting.autocorrelation_plot(a_dna['2014':'2016']['TEMP'])","d14d03a0":"a_dna['TEMP'].resample('1m').mean() # as the data is hourly basis, resampling into monthly basis","37a7928f":"pd.plotting.autocorrelation_plot(a_dna['2014':'2016']['TEMP'].resample('1m').mean())","7244ee48":"pd.plotting.autocorrelation_plot(a_dna['2014':'2016']['PM2.5'].resample('1m').mean())","c18533ef":"**Using this we can able to see the specified range of years within the frame**","ce5a64e8":"# Indexing the data","bf6cbe0b":"**As the data is hourly basis, we have to specify the no of hours in the lag value**","2ad62112":"**We can see that from Jan the value is decreasing and after oct it is gradually increasing**","1cac278d":"**There are list of datasets separating by the station. Here we are considering only the Dingling**","377e4d91":"**The pattern is almost similar to the above**","d8ae6e5e":"**Here the PM2.5 is the target variable, as it can cause some hazardous problems like asthma, We have to keep that in control in the regions.**","59b8700b":"**The plot is same as the before, it increases as every 12 months = 1 year**","77c7c33f":"**2150 hour = 3 months, and plot depicts that there is no correlattion at all**","3e900a85":"**As we can see that the data is negativley correlated for every 6 months**","01643199":"**Successfully converted the all the date fields to a single field of type datetime**","b8a390f8":"**Pressure and Pm2.5 are highly correlated**","04e8bf51":"**So we can say that each year is positively correlated with the previous one**","d8c24db8":"**Doing the same for 2016**","a647ba6f":"**From the plots, we obser that when the temperature decreases, the PM2.5 value increases and they are indirectly proportional**","66e08e8f":"**It will be faster to query the data when indexing and for other filtering and plotting purpose for time series data**","99a65d78":"**It is observed that the data is positive at every one year that is 8310 hours = 1 year and next at 16K**","b54e937c":"**Co is positively correlated with PM2.5**","6f33c3f1":"**Temp and pressure are negatively correlated**","708c49ab":"**8640 hour = 1 year**","9889dfb0":"**Plot only the values for the year 2015**","2f80f5b0":"**PM2.5 and co are higly correlated**","be278d14":"**PM2.5 is high during the winter mostly and O3 is high during the summer**","07d8ac98":"**We can able to see that many of the filds are int and float.We have to convert year, month and day field to a field of date type for the purpose of time series analysis**","6ac7c2c6":"**We can see that most of the day are correlated**","b5cd6265":"**It is a kind of scatter plot, where the data is kind of lag between two or more values**","3c32ad81":"**4320 hour = 6 months**","cc95415c":"# Auto correlation plot","12e6a2da":"# Lag plot ","9e94141e":"**There are nearly 35K rows and 19 columns or features**","0f59bb3c":"**It is not so linear than the previous one**"}}