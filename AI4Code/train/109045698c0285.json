{"cell_type":{"919102d5":"code","18af9885":"code","bbec6e3e":"code","4e04940c":"code","78a5979f":"code","b5fca544":"code","6228dbaa":"code","0ab1af48":"code","78ba82a2":"code","dbf85b73":"code","de89c0ac":"code","2b8a8d9c":"code","304b5d09":"code","b7431819":"code","baf5c8b7":"code","8e1fc46d":"code","b5a4ea9f":"code","b97cb7ae":"code","6af18f9c":"code","a154eee6":"code","c015ba9d":"code","ae0ef003":"code","4c487836":"code","afeb99d3":"code","2e50b19e":"code","40a8ef92":"code","a8706178":"code","1b9dd02a":"code","52f11950":"code","c842c978":"code","5dfa9500":"code","a34c36ef":"code","19d4ca64":"code","4e36581a":"code","9a6429ba":"code","49e81f52":"code","38d5bc6e":"code","e649efb8":"code","2bc7e4ab":"code","cafe6e2d":"code","e173b5d8":"code","3b5cc8ca":"code","e5c7f7db":"markdown","677c30a7":"markdown","a7edbad7":"markdown","2e4da7ee":"markdown","5cfe7fbd":"markdown","4593fc9b":"markdown","44620019":"markdown","7cf364f1":"markdown","674dad5f":"markdown","e957bf31":"markdown","a4f72bdc":"markdown","3613a56f":"markdown","19673356":"markdown","8e4a4592":"markdown","b103c54b":"markdown","6995f745":"markdown","ddde71f0":"markdown","36300ff2":"markdown","d71b3d36":"markdown","cc12be9d":"markdown","ad16cf2a":"markdown","4557abd8":"markdown","22b40401":"markdown","efb799aa":"markdown","29ca2996":"markdown","ddc1ab63":"markdown","d14a2bfc":"markdown","39a71253":"markdown"},"source":{"919102d5":"from IPython.display import display, Image","18af9885":"# Import numpy and pandas\n\nimport numpy as np \nimport pandas as pd \n\n# Import data visualization libraries.\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n \nsns.set(style= \"whitegrid\")\n","bbec6e3e":"# Read in the csv file as a dataframe called calls\ncalls = pd.read_csv(\"..\/input\/911.csv\")","4e04940c":"# Quick look to data\ncalls.head(5)","78a5979f":"# columns with objects are not numbers but they are string types.\ncalls.info()","b5fca544":"calls['timeStamp'][0]","6228dbaa":"#focus on timeStamp variable. It is a string not a datetime object.\n#I Used pd.to_datetime to convert the column from strings to DateTime objects.\n#In order to fix that,\ncalls['timeStamp']=pd.to_datetime(calls['timeStamp'])","0ab1af48":"# Now you can see timeStamp is not a string anymore. This will help to analyze easier than before and it's make more sense now.\ncalls.info()","78ba82a2":"# Before move into big picture let me simplify the title and the timeStamp columns much more detailed.\n# In order to do that i'm going to create new columns for seperating title column into 'EMS','FIRE',and 'Traffic'.\n# Also the timeStamp column into 'Year','Month','Day of Week' and 'Hour'\ncalls['Reason']=calls['title'].apply(lambda title:title.split(':')[0])\n","dbf85b73":"calls['Reason'].value_counts()","de89c0ac":"calls['year']=calls['timeStamp'].apply(lambda time:time.year)\ncalls['Month']=calls['timeStamp'].apply(lambda title:title.month)\ncalls['Day of Week']=calls['timeStamp'].apply(lambda title:title.dayofweek)\ncalls['Hour']=calls['timeStamp'].apply(lambda title:title.hour)","2b8a8d9c":"calls.head(5)\n# Now this table gives us much more detailed description about the timeStamp variable.","304b5d09":"sns.countplot(x='Reason',data=calls,palette='bright')\nplt.title('Counts for all Reason')","b7431819":"calls['Day of Week'].unique()","baf5c8b7":"# Notice that Day of Week is an integer 0 to 6. I used map() function with below dictionary to map the real names to the Day of Week\ndow={0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}","8e1fc46d":"calls['Day of Week']=calls['Day of Week'].map(dow)","b5a4ea9f":"sns.countplot(x='Day of Week',data=calls,hue='Reason',palette='bright')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title('Call Reasons by Day of Week')","b97cb7ae":"sns.countplot(x='year',data=calls,hue='Reason',palette='bright')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title('Call Reasons by Year')","6af18f9c":"plt.figure(figsize = (14,7))\nsns.set_context(\"paper\", font_scale=2)\nsns.countplot(x='Month',data=calls,hue='Reason',palette='bright')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title('Call Reasons by Month')","a154eee6":"byYear=calls.groupby('year').count()\nbyYear.head(5)","c015ba9d":"plt.figure(figsize=(14,5))\nbyYear['twp'].plot()\nplt.title('linear relationship for calls per Year')","ae0ef003":"byMonth=calls.groupby('Month').count()\nbyMonth.head(5)","4c487836":"plt.figure(figsize=(14,5))\nbyMonth['twp'].plot()\nplt.title('linear relationship for calls per Month')","afeb99d3":"byDayOfWeek=calls.groupby('Day of Week').count()\nbyDayOfWeek.head(5)","2e50b19e":"plt.figure(figsize=(14,5))\nbyDayOfWeek['twp'].plot()\nplt.title('linear relationship for calls per Day Of Week')","40a8ef92":"calls['twp'].value_counts().head(10).plot.bar(color = 'blue')\nplt.xlabel('Townships', labelpad = 20)\nplt.ylabel('Number of Calls')\nplt.title('Townships with Most 911 Calls')","a8706178":"calls['Emergency'] = calls['title'].apply(lambda x: x.split(':')[1])\ncalls['Emergency'].value_counts().head(10)","1b9dd02a":"#Visualization of top 10 911 Calls\ncalls['Emergency'].value_counts().head(10).plot.bar(color = 'red')\nplt.xlabel('Emergency',labelpad = 20)\nplt.ylabel('Number of 911 Calls')\nplt.title('Top 10 Emergency Description Calls')","52f11950":"# Create a new column called 'Date' that contains the date from the timeStamp column. ","c842c978":"calls['Date']=calls['timeStamp'].apply(lambda t:t.date())\n","5dfa9500":"# Now groupby this Date column with the count() aggregate and create a plot of counts of 911 calls.","a34c36ef":"plt.figure(figsize=(18,7))\ncalls.groupby('Date').count()['twp'].plot()\nplt.tight_layout()","19d4ca64":"# Now recreate this plot but create 3 separate plots with each plot representing a Reason for the 911 call","4e36581a":"plt.figure(figsize=(18,7))\ncalls[calls['Reason']=='Traffic'].groupby('Date').count()['twp'].plot()\nplt.title('Traffic Calls')\nplt.tight_layout()","9a6429ba":"plt.figure(figsize=(18,7))\ncalls[calls['Reason']=='Fire'].groupby('Date').count()['twp'].plot()\nplt.title('Fire Calls')\nplt.tight_layout()","49e81f52":"plt.figure(figsize=(18,7))\ncalls[calls['Reason']=='EMS'].groupby('Date').count()['twp'].plot()\nplt.title('EMS')\nplt.tight_layout()","38d5bc6e":"dayYear = calls.groupby(by=['Day of Week','year']).count()['Reason'].unstack()\ndayYear.head()","e649efb8":"#Now create a HeatMap using this new DataFrame.\nplt.figure(figsize=(12,6))\nsns.heatmap(dayYear,cmap='coolwarm',linewidths=.5)","2bc7e4ab":"dayMonth = calls.groupby(by=['Day of Week','Month']).count()['Reason'].unstack()\ndayMonth.head()","cafe6e2d":"#Now create a HeatMap using this new DataFrame.\nplt.figure(figsize=(12,6))\nsns.heatmap(dayMonth,cmap='viridis',linewidths=.5)","e173b5d8":"dayHour = calls.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head()","3b5cc8ca":"#Now create a HeatMap using this new DataFrame.\nplt.figure(figsize=(12,6))\nsns.heatmap(dayHour,cmap='YlGnBu',linewidths=.5)","e5c7f7db":"# 1.Basic description of DataSet","677c30a7":"As you can see there are some significant spikes in January,March and October but we get some downturn in Novembers.","a7edbad7":"# leave any comment or feedback. \n ## Thanks!","2e4da7ee":"Notice that most of the number of EMS calls vary between 50-300. There are some significant spikes in March 2018 and late August in 2018. Then we get some downturns or some bottom out spikes in May 2016 and early may in 2017.","5cfe7fbd":"![image.png](attachment:image.png)","4593fc9b":"# 6.Heat Maps","44620019":"Highest number of emergency calls reported in Lower Merion and followed by others.","7cf364f1":"Lowest number of calls recorded in year 2015 and number calls stricly increased to beginning of year 2016. After that number calls gradually decreasing until year 2018.","674dad5f":"We can see that the EMS is the major reason for a 911 call followed by Traffic accidents","e957bf31":"We can see from the visualizations above that the number of 911 calls drop during month 11(November). ","a4f72bdc":"We can see the number of calls for EMS and Fire are almost same for everyday but calls for a Traffic shows low count for weekends. Because there are not heavy traffic during weekends,maybe most of the people stay at home.  ","3613a56f":"We can see that the lowest number of calls reported in year 2015 and for evey year Sunday indicates the lowest number of calls for any reason.","19673356":"Majority of lowest number of calls reported in between 0-7 (Early Morning) hour and Highest number of calls reported in Middays.","8e4a4592":"# Before Starting:\n**If you liked this kernel please don't forget to upvote and comment the project, this will keep me motivated to other kernels in the future. I hope you enjoy my  exploration into this dataset. Let's begin!**","b103c54b":"# 2.Creating New Features","6995f745":"As you can see year 2015 recorded as the lowest number of calls for any reason and calls due to EMS is the top reason for every year.","ddde71f0":"As you can see there are some significant spikes in Traffic calls in March and November 2018 and little bit in February 2016. Most of the number of Traffic calls vary between 0-400.","36300ff2":"# 7. Conclusion","d71b3d36":"There is a significant bottom out spike in sundays.","cc12be9d":"It seem to be there is some significant spikes in fire calls in March 2018 and little bit in between January and May 2016, maybe late august in 2016 and also the late may in 2017. Rest of the numbers of calls vary between 0-200.","ad16cf2a":"Notice here it is looks like there are some significant spikes in March, 2018 may be late November,2018.","4557abd8":"Highest number of calls for any reason recorded in March(Fridays). This is already confirmed by above three seperate line charts.\n","22b40401":"1.   So let me summarize all our results. Throughout this journey, first we understood some basic information about our dataset.Then i created some extra features to understand our dataset more cleary by seperating columns. I hope it helps all of us to get some sense about the complex columns.\n2. When we see our results on seperated plots we can understand,\n\n   Major reason for 911 calls- EMS\n   \n   Most calm year for 911 calls-2015\n   \n   Busy months for 911 calls-January,March,October\n   \n   Most calm weekday for 911 calls -Sunday\n   \n   Most calm hours for 911 calls-0 to 7\n   \n   Busy township for 911 calls- Lower Merion\n   \n   Top 911 emergency calls due to - Vahicle accidents.\n   \n3. According to this information. we can identify the major reason for emegency calls and what time period and which area most incidents occur in Pennsylvania. \n   ","efb799aa":"Hello eveyone. This is my first kernel on kaggle and looking for your feedback and support.Love to discuss and share ideas with you.\nLet's get started.\n\nMy roadmap\n\n1.Basic description of DataSet\n\n2.Creating New Features\n\n3.Data visualization and Analysis\n\n4.Visualising linear relationship for calls \n\n5.Emergency associated with the call\n\n6.Heat Maps\n\n7.Conclusion\n\n","29ca2996":"# 5.Emergency associated with the call","ddc1ab63":"# 3.Data visualization and Analysis","d14a2bfc":"# 4.Visualising linear relationship for calls ","39a71253":"Most number of 911 emergency calls due to vehicle accidents and lowest due to Head injuries."}}