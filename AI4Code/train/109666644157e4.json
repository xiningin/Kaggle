{"cell_type":{"4fe5d781":"code","cac4d4d0":"code","6e9b1fa4":"code","4772168d":"code","3dedef54":"code","7692f6c8":"code","06dfcf0f":"code","82bbdf98":"code","bdd5b197":"code","9c8170af":"code","d899f865":"code","d5d9b4ae":"code","48c6e393":"code","5af293dd":"code","2f4f3656":"code","11494a3b":"code","46700aa9":"code","fe757655":"code","c6ea63f2":"code","ab73d40b":"code","e11c26c6":"code","0d264fd5":"code","e7957e1e":"code","50118292":"code","4115c625":"code","1d052ea0":"code","54c429a3":"code","5b80a554":"code","431a7b00":"markdown","b5806525":"markdown","9f55592e":"markdown","d79f07a3":"markdown","2867fb97":"markdown","c551a9ee":"markdown","87c0d2aa":"markdown","972a17de":"markdown","78a98650":"markdown","fd542315":"markdown","d6d111e2":"markdown","f9a33119":"markdown","2c48f39a":"markdown","6e2be063":"markdown","75e430bb":"markdown"},"source":{"4fe5d781":"import pandas as pd\n#.set_option('display.height', 1000)\n#pd.set_option('display.max_rows', 500)\n#pd.set_option('display.max_columns', 500)\n#pd.set_option('display.width', 1000)\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.filterwarnings('ignore', category=DeprecationWarning)\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cac4d4d0":"#Read data\ntrain = pd.read_csv('..\/input\/train.csv')\ntrain.columns = [c.lower() for c in train.columns]\ntest = pd.read_csv('..\/input\/test.csv')\ntest.columns = [c.lower() for c in test.columns]\nprint('The dimensions of the train dataset are:',train.shape)\nprint('The dimensions of the test dataset are:',test.shape)\n# Concatenate both dataset\ny = train.target\ntrain_objs_num = len(train)\ndata = pd.concat(objs=[train.drop('target',axis=1), test], axis=0)\ndata.sample(10)","6e9b1fa4":"cat_cols = list(data.select_dtypes(include=['object']).columns)\nnum_cols = list(data.select_dtypes(exclude=['object']).columns)\nprint('Numeric columns:',num_cols)\nprint('Categorical columns:',cat_cols)","4772168d":"data.info(verbose=True, null_counts=True)","3dedef54":"total = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nf, ax = plt.subplots(figsize=(15, 6))\nplt.xticks(rotation='90')\nsns.set_context(\"paper\")\nsns.barplot(x=missing_data.index, y=missing_data['Percent'])\nplt.xlabel('Features', fontsize=15)\nplt.ylabel('Percent of missing values', fontsize=15)\nplt.title('Percent missing data by feature', fontsize=15)\nmissing_data.head(10)","7692f6c8":"print(data.rez_esc.unique())\ndata.rez_esc.value_counts()","06dfcf0f":"plt.figure(figsize=(10,8))\nsns.distplot(data.rez_esc.dropna())\ndata.rez_esc.fillna(99,inplace=True)","82bbdf98":"print(data.v18q1.unique())\ndata.v18q1.value_counts()","bdd5b197":"data.loc[data.v18q==0, 'v18q1'] = data.loc[data.v18q==0, 'v18q1'].fillna(0)\ndata.v18q1.fillna(data[:train_objs_num].v18q1.median(),inplace=True)\ndata.drop(columns='v18q',inplace=True)","9c8170af":"plt.figure(figsize=(10,8))\nsns.distplot(data.v2a1.dropna())","d899f865":"data['v2a1'].describe()","d5d9b4ae":"data.v2a1.fillna(data[:train_objs_num].v2a1.median(),inplace=True)","48c6e393":"plt.figure(figsize=(10,8))\nsns.distplot(data.meaneduc.dropna())","5af293dd":"data.meaneduc.fillna(data[:train_objs_num].meaneduc.mean(),inplace=True)\ndata.sqbmeaned.fillna(data[:train_objs_num].meaneduc.mean()**2,inplace=True)","2f4f3656":"total = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(10)","11494a3b":"print(data[cat_cols].nunique())\ndata[cat_cols].sample(6)","46700aa9":"print(data.edjefe.unique())\nprint(data.edjefa.unique())","fe757655":"data['edjefe'] = pd.to_numeric(data.edjefe.apply(lambda x: 1 if x=='yes' else 0 if x=='no' else x))\ndata['edjefa'] = pd.to_numeric(data.edjefa.apply(lambda x: 1 if x=='yes' else 0 if x=='no' else x))","c6ea63f2":"data['idhogar'] = data['idhogar'].astype('category').cat.codes","ab73d40b":"# Check if there is any data leak, household both in train and test set.\nl = data[:train_objs_num]['idhogar'].unique()\np = data[train_objs_num:]['idhogar'].unique()\nfor i in l:\n    if i in p:\n        print('data leak')","e11c26c6":"print(data.dependency.unique())","0d264fd5":"cols = ['hogar_nin','hogar_adul','hogar_mayor','hogar_total','dependency']\nprint(data[data.dependency=='no'].hogar_nin.nunique())\nprint(data[data.dependency=='no'].hogar_mayor.nunique())\ndata[data.dependency=='no'][cols].head()","e7957e1e":"# We observe that dependecy = 'no' correspond to Number of children 0 to 19 & Number of individuals 65+ \n# in the household equal to 0.So\ndata.dependency.replace('no',0,inplace=True)\ndata.dependency.replace('yes',99,inplace=True)\ndata['dependency'] = pd.to_numeric(data.dependency)","50118292":"data.isnull().values.any()","4115c625":"data.set_index('id',inplace=True)\ndata.head()","1d052ea0":"train_alt = data[:train_objs_num]\ntrain_alt['target'] = y.values\ncorrmat = train_alt.corr()\nf, ax = plt.subplots(figsize=(12, 10))\nsns.heatmap(corrmat, vmax=.8, square=True);","54c429a3":"mask = abs(train_alt.corr()['target']) >= 0.2\nl = [c for c in mask[mask==True].index]\nf, ax = plt.subplots(figsize=(12, 10))\nsns.heatmap(train_alt[l].corr(),linewidths=.5,cmap=\"YlGnBu\")","5b80a554":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(random_state=42)\nrfc.fit(data[:train_objs_num], y)\n\npredictions = rfc.predict(data[train_objs_num:])\nsubmission = pd.DataFrame({ 'Id': test.id,\n                            'Target': predictions })\nsubmission.to_csv(\"submission.csv\", index=False)\nsubmission.head()","431a7b00":"In accordance with the variable description, we will replace in both variables yes=1 and no=0, and we will convert them to numerical.","b5806525":"**Dependency rate** calculated as = (number of members of the household younger than 19 or older than 64)\/(number of member of household between 19 and 64)","9f55592e":"hogar_nin, Number of children 0 to 19 in household\n<br>hogar_adul, Number of adults in household\n<br>hogar_mayor, Number of individuals 65+ in the household\n<br>hogar_total, Number of total individuals in the household","d79f07a3":"**My methodology**\n\nI always concatenate train and test dataset. I explore the train set but when I have to apply a transfomarion I applied it to the combined one. Also check if some target value is only present to the trin or in the test dataset.","2867fb97":"### Let's examine linear correlation of the fetures","c551a9ee":"We can conclude that the ajority of the columns contain numbers.Let's investigate the categorical variables","87c0d2aa":"Let's deal with the variable: v2a1 Monthly rent payment","972a17de":"### Read Data","78a98650":"We observe that 99 is value that we didn't expect and is probably used to represnt missing values.","fd542315":"Also, since idhogar - this is a unique identifier for each household we will label encoding to convert it to numeric.","d6d111e2":"Let's deal with meaneduc:average years of education for adults (18+) & sqbmeaned: square of the mean years of education of adults (>=18) in the household ","f9a33119":"Thus, 5 variables have missing values: [rez_esc, v18q1, v2a1, sqbmeaned,meaneduc]. We have to analyze them further to discover our imputation strategy","2c48f39a":"**We kanow that:**\n<br>v18q, owns a tablet\n<br>v18q1, number of tablets household owns","6e2be063":"### Check missing values","75e430bb":"### Dealing with categorical variables"}}