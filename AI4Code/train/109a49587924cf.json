{"cell_type":{"b951f64b":"code","76533f3e":"code","1c716716":"code","b7f7c376":"code","b295706c":"code","51952ec3":"code","7892a0c6":"code","3d1e0a29":"code","15dfd282":"code","cbf4ad23":"code","fe82d1c3":"code","133edf2d":"code","aa79145d":"code","adc70f39":"code","5e0fe3eb":"code","c2068340":"code","295a9561":"code","79bae0c2":"code","4f8e7b38":"code","e7c7b12a":"markdown","5f0c1860":"markdown","94240862":"markdown","74bc7ed2":"markdown","a0c58366":"markdown","260947a0":"markdown","8eeb0769":"markdown","37a42529":"markdown","8f7c2a7c":"markdown","6e0ea24d":"markdown","40751123":"markdown"},"source":{"b951f64b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76533f3e":"#Let's read the file\ndf=pd.read_csv(\"\/kaggle\/input\/ethereum-historical-dataset\/ETHUSD.csv\")\ndf.head()","1c716716":"#drop our date column using drop method\ndf.drop(columns=['Date'],inplace=True)","b7f7c376":"#as we can see the date column is dropped\ndf.head(5)","b295706c":"#Let see what's the size of the dataframe\ndf.shape","51952ec3":"#the describe function gives us all the stastical aalysis of the datframe\ndf.describe()","7892a0c6":"#Let's check for null values in the dataframe as they can damage our model\ndf.isnull().sum()","3d1e0a29":"#Let's see what rows contain the null values\nrows_with_NaN = df[df.isnull().any(axis=1)]\nrows_with_NaN ","15dfd282":"#we are removing the rows with null values\ndf.dropna(inplace=True)","cbf4ad23":"#As we can see there are no more null values\ndf.isnull().sum()","fe82d1c3":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nplt.figure(figsize=(10,5))\n\nplt.subplot(3,3,1)\nsns.histplot(x=df.Volume,data=df)\nplt.subplot(3,3,2)\nsns.histplot(x=df.Open,data=df)\nplt.subplot(3,3,3)\nsns.histplot(x=df.Low,data=df)\nplt.subplot(3,3,4)\nsns.histplot(x=df.Close,data=df)\nplt.subplot(3,3,5)\nsns.histplot(x=df.High,data=df)\nplt.subplot(3,3,6)\nsns.histplot(x=df['Adj Close'],data=df)","133edf2d":"df=np.log(df)","aa79145d":"\nplt.figure(figsize=(10,5))\n\nplt.subplot(3,3,1)\nsns.histplot(x=df.Volume,data=df)\nplt.subplot(3,3,2)\nsns.histplot(x=df.Open,data=df)\nplt.subplot(3,3,3)\nsns.histplot(x=df.Low,data=df)\nplt.subplot(3,3,4)\nsns.histplot(x=df.Close,data=df)\nplt.subplot(3,3,5)\nsns.histplot(x=df.High,data=df)\nplt.subplot(3,3,6)\nsns.histplot(x=df['Adj Close'],data=df)","adc70f39":"#now lets separate our target variable from the dataframe which is volume in this case\nx=df.drop(columns='Volume')\ny=df.Volume","5e0fe3eb":"#since ths is a simple problem we can use linear regressio \nfrom sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(x,y)","c2068340":"model.score(x,y)","295a9561":"from sklearn.ensemble import RandomForestRegressor\nmodel1=RandomForestRegressor(n_estimators=10)\nmodel1.fit(x,y)","79bae0c2":"model1.score(x,y)","4f8e7b38":"## If you like this notebook then please upvote","e7c7b12a":"We can also use more advanced algorithms such as random forest,svm ,xgboost which would much better than linear regression","5f0c1860":"## EDA","94240862":"Amazing RandomForest gave us a accuracy of 98%","74bc7ed2":"Now, here we are dropping the Date column because dealing with dates can be complex and this notebook is intended for absolute begginners","a0c58366":"## Hello,Here we have  a etherium dataset so let's do data analysis and simple modelling","260947a0":"## Model","8eeb0769":"Now we can see that our data is almost equally distributed ","37a42529":"Let's plot the histogram of all the columns to see the distribution of our data","8f7c2a7c":"Let's now use Random Forest","6e0ea24d":"Good our model gave us accuracy of 85% on training set","40751123":"From the above plots it's clear that we have skewed data,so to renove skewness from data we use log transformation"}}