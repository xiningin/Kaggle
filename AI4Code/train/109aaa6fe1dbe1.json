{"cell_type":{"3082d47b":"code","1fb555d1":"code","cc8247ff":"code","092742e4":"code","73c06137":"code","9a3148c1":"code","faf0f99a":"code","8f93864f":"markdown"},"source":{"3082d47b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1fb555d1":"import pandas as pd\nimport numpy as np\nimport datetime as dt\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.float_format', lambda x: '%.5f' % x)\n\n","cc8247ff":"df_ = pd.read_excel(\"..\/input\/online-retail-ii\",sheet_name=\"Year 2010-2011\")\ndf = df_.copy()","092742e4":"df.head()\ndf.info()\ndf.shape\ndf.describe().T","73c06137":"df.isnull().values.any()\n\ndf.isnull().sum()\n\ndf.dropna(inplace=True)\n\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]","9a3148c1":"df[\"TotalPrice\"]=df[\"Quantity\"]*df[\"Price\"]","faf0f99a":"today_date = dt.datetime(2011, 12, 11)\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda InvoiceDate: (today_date - InvoiceDate.max()).days,\n                                     'Invoice': lambda Invoice: Invoice.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\nrfm.columns =[\"recency\", \"frequency\",\"monetary\"]\nrfm = rfm[(rfm['monetary'] > 0)]\n\n############################# 3  #############################\nrfm[\"recency_score\"]=pd.qcut(rfm[\"recency\"],5 ,labels=[\"5\",\"4\",\"3\",\"2\",\"1\"]) #qcut k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe g\u00f6re s\u0131ralad\u0131\u011f\u0131ndan yani\n                                                       # 1 g\u00fcn \u00f6nce al\u0131\u015fveri\u015f yapan biri 5 ile de\u011ferlendirilecek.\n                                                       # RFM tanlosunda yak\u0131n tarihte gelen 5 tir.\n\nrfm[\"frequency_score\"]= pd.qcut(rfm[\"frequency\"].rank(method=\"first\"),5,labels=[\"1\",\"2\",\"3\",\"4\",\"5\"]) #az \u00fcr\u00fcn alan 1 olarak skorlan\u0131r.\n#rank'\u0131 kulanma sebebimiz qcut \u00e7eyreklere g\u00f6re hareket etti\u011finden\n#1,1,2,2,2,2,3,3,3 \u015feklinde oldu\u011funda nereden b\u00f6lece\u011fini anlam\u0131yor bu y\u00fczden ilk 2 geldi\u011finde\n# yada ilk 3 geldi\u011finde b\u00f6l-ay\u0131r dememize yarar.\n\nrfm[\"monetary_score\"]= pd.qcut(rfm[\"monetary\"],5,labels=[\"1\",\"2\",\"3\",\"4\",\"5\"])\nrfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                    rfm['frequency_score'].astype(str))\n\nrfm[rfm[\"RFM_SCORE\"]==\"55\"].head()\n\n\n\n##########################  4 #############################\nseg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\n\n\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\n\n###################### 5 #########################\nrfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])\nrfm[rfm[\"segment\"]==\"at_Risk\"].head()\nrfm[rfm[\"segment\"]==\"need_attention\"].head()\nrfm[rfm[\"segment\"]==\"champions\"].head()\n\n#\nloyal_customers = pd.DataFrame()\nloyal_customers['loyal_customers'] = rfm[rfm['segment']=='loyal_customers'].index\nloyal_customers.to_csv('loyal_customers.csv')\n","8f93864f":"![](https:\/\/lh6.googleusercontent.com\/clfBEqbQ8JcEJnJjV4VacHqar-xNo5HM5tQH3SEUiJud8gpI59GP9s0DGSRr5vcQKfj5UxGpJgRKejilKXriLQgnWfeu_oqTMNA5BhLHhrdv3v-rYsQ2FBdJdlBeAS7xrnWtapcSQPrNgA)"}}