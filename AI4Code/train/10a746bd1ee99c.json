{"cell_type":{"f1935b8b":"code","f0b6a438":"code","fc1e1729":"code","97feb7cc":"code","caee7fe9":"code","612b8c13":"code","b8838828":"code","26ebde71":"code","80b8a816":"code","696ed2d2":"code","afd057c4":"code","f9138c09":"code","4d5c8f93":"code","8b9d7b91":"code","0b23cb25":"code","0a37380f":"code","6307c39a":"code","dae14afa":"code","fe004e84":"code","4b3d7bd6":"code","16f47932":"code","930d4a2a":"code","2d00fb71":"code","703e0cda":"code","3c7ee8ee":"code","d5dff8cf":"code","912424b3":"code","03618058":"code","1a0abbc6":"code","d9839edb":"code","2186a662":"code","9d8bd0be":"code","ef19fa30":"code","e2aac05d":"markdown","c76e647e":"markdown","549e359a":"markdown"},"source":{"f1935b8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f0b6a438":"from matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns","fc1e1729":"\nData=pd.read_csv(\"\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv\")\nData.head()","97feb7cc":"# Use log Scale\nplt.hist(Data.price, bins=20, rwidth=0.8)\nplt.xlabel('Price')\nplt.ylabel('Count')\nplt.yscale('log')\nplt.show()","caee7fe9":"#Detect the outliers\nmaxlimit=Data[\"price\"].quantile(0.999)\nmaxlimit","612b8c13":"#Remove the outliers\nData[Data[\"price\"]>maxlimit]","b8838828":"# Detect the outliers\nminlimit=Data[\"price\"].quantile(0.0001)\nminlimit","26ebde71":"# Remove the outliers\nData[Data[\"price\"]<minlimit]","80b8a816":"Data_outliers=Data[(Data[\"price\"]>minlimit)|(Data[\"price\"]<maxlimit)]\nData_outliers.head()","696ed2d2":"#Data with no outliers by using Percentile outliers removal\nData2=Data[(Data[\"price\"]>minlimit)& (Data[\"price\"]<maxlimit)]\nData2.head()","afd057c4":"Data.shape[0] - Data2.shape[0]","f9138c09":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nplt.hist(Data2.price, bins=20, rwidth=0.8)\nplt.xlabel('price')\nplt.ylabel('Count')\nplt.yscale('log')\nplt.show\n\nplt.subplot(1,2,2)\nsns.distplot(Data2.price)\n","4d5c8f93":"from scipy.stats import norm\nimport numpy as np\nplt.hist(Data2.price, bins=20, rwidth=0.8, density=True)\nplt.xlabel('Price')\nplt.ylabel('Count')\n\nrng = np.arange(-1000, Data2.price.max(), 100)\nplt.plot(rng, norm.pdf(rng,Data2.price.mean(),Data2.price.std()))\n","8b9d7b91":"Data2.describe()","0b23cb25":"Data2.price.mean()","0a37380f":"Data2.price.std()","6307c39a":"upper_limit = Data2.price.mean() + 4*Data2.price.std()\nupper_limit","dae14afa":"lower_limit =Data2.price.mean()-4*Data2.price.std()\nlower_limit","fe004e84":"#the outliers that are beyond 4 std dev from mean\nData2[(Data2.price>upper_limit) | (Data2.price<lower_limit)]","4b3d7bd6":"#Outliers removal by using Standard Deviation Data without outliers\nData3=Data2[(Data2.price<upper_limit) & (Data2.price>lower_limit)]\nData3.head()","16f47932":"Data.shape","930d4a2a":"Data2.shape","2d00fb71":"\nData3.shape","703e0cda":"from scipy.stats import norm\nimport numpy as np\nplt.hist(Data3.price, bins=20, rwidth=0.8, density=True)\nplt.xlabel('Price')\nplt.ylabel('Count')\n\nrng = np.arange(-600, Data3.price.max(), 100)\nplt.plot(rng, norm.pdf(rng,Data3.price.mean(),Data3.price.std()))","3c7ee8ee":"Data2[\"zscore\"]=(Data2.price-Data2.price.mean())\/Data2.price.std()\nData2.head()","d5dff8cf":"#data points that has z score higher than 4 or lower than -4. Another way of saying same thing is get data points that are more than 4 standard deviation away\n\nData2[Data2[\"zscore\"]>4]","912424b3":"Data2[Data2['zscore']<-4]","03618058":"# outliers\nData2[(Data2.zscore<-4)|(Data2.zscore>4)]","1a0abbc6":"# Remove the outliers from the Data points\nData4= Data2[(Data2.zscore>-4)&(Data2.zscore<4)]\nData4.head()","d9839edb":"Data3.shape","2186a662":"Data4.shape","9d8bd0be":"Data2.shape[0] - Data4.shape[0]","ef19fa30":"Data2.shape[0] - Data3.shape[0]","e2aac05d":"Outliers Detection and Removal by using Z score\nZ= Data-mean\/standard deviation","c76e647e":"Outlier detection and removal using 3 standard deviation","549e359a":"In this lesson, We will learn How to remove the outliers by using zscore and standard deviation \nWe could remove 2,3, or 4 standard deviation from the mean "}}