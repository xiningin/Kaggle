{"cell_type":{"f2f7249a":"code","9fd3d943":"code","2439d5e8":"code","d6169cb8":"code","ffc1a9bc":"code","8e7b40f9":"code","6a8622b8":"code","6663532c":"code","cceecf02":"code","39a8e7cb":"code","d5df61b8":"code","052369e3":"code","cc04969c":"code","ce5742f7":"markdown","d1322ae0":"markdown","ce338b18":"markdown","9ef99563":"markdown"},"source":{"f2f7249a":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport altair as alt\n\nfrom sklearn.neighbors import LocalOutlierFactor\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","9fd3d943":"#Code by Vopani https:\/\/www.kaggle.com\/rohanrao\/tutorial-on-reading-large-datasets\n\n%time\n\ndf = pd.read_feather(\"..\/input\/train-tsv-file-to-feather-files\/train-00004-of-00005\")\n\nprint(\"df size:\", df.shape)","2439d5e8":"df.head()","d6169cb8":"#Spoiler Alert: No Missing Values \n\ndf.isnull().sum()","ffc1a9bc":"df['language'].value_counts()","8e7b40f9":"hi = df[(df['language']=='hi')].reset_index(drop=True)\nhi.head()","6a8622b8":"de = df[(df['language']=='de')].reset_index(drop=True)\nde.head(3)","6663532c":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'salmon',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(de[\"caption_attribution_description\"]))\nplt.rcParams['figure.figsize'] = (10,10)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Bezeichnungen auf Deutsch\")\nplt.show()","cceecf02":"#All are String!\n\ndf.dtypes","39a8e7cb":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\n#Ascending order False\ntop_rated=df.sort_values('original_width', ascending=True)\ntop10=top_rated.head(10)\nf=['page_title','image_url']\ndispl=(top10[f])\ndispl.set_index('page_title', inplace=True)","d5df61b8":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\nfrom IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    '''\n     This function essentially convert the image url to \n     '<img src=\"'+ path + '\"\/>' format. And one can put any\n     formatting adjustments to control the height, aspect ratio, size etc.\n     within as in the below example. \n    '''\n\n    return '<img src=\"'+ path + '\"\"\/width=\"200\" height=\"40\" alt=\"Computer Hope\">'\n\nHTML(displ.to_html(escape=False ,formatters=dict(image_url=path_to_image_html),justify='center'))","052369e3":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\n#Ascending order False\ntop_rated=df.sort_values('original_height', ascending=True)\ntop10=top_rated.head(10)\nf=['page_title','image_url']\ndispl=(top10[f])\ndispl.set_index('page_title', inplace=True)","cc04969c":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\nfrom IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    '''\n     This function essentially convert the image url to \n     '<img src=\"'+ path + '\"\/>' format. And one can put any\n     formatting adjustments to control the height, aspect ratio, size etc.\n     within as in the below example. \n    '''\n\n    return '<img src=\"'+ path + '\"\"\/width=\"200\" height=\"40\" alt=\"Computer Hope\">'\n\nHTML(displ.to_html(escape=False ,formatters=dict(image_url=path_to_image_html),justify='center'))","ce5742f7":"#Thanks to Msafi04 for the Dataset https:\/\/www.kaggle.com\/msafi04\/train-tsv-file-to-feather-files","d1322ae0":"#Hindi Language","ce338b18":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQl_Xw2rwx38Ee_wM9OfH5NVYzU1em0Fs6qTg&usqp=CAU)github.com","9ef99563":"Since dtypes are all string I couldn't make the Hindi WordCloud applying gargi.ttf\" font."}}