{"cell_type":{"588b9e78":"code","0e1bb56a":"code","9797203f":"code","a1c6f17e":"code","b95ab4b8":"code","6511987a":"code","7ca100d6":"code","0183502b":"code","0b97ac77":"code","5197975f":"code","8b8ba253":"code","e234e342":"markdown","bc2584b7":"markdown","7cac168e":"markdown","8d98bef5":"markdown","ac3aa3a9":"markdown","e897525c":"markdown","53c1ccf3":"markdown","9321720a":"markdown","494a528f":"markdown","22a52ca5":"markdown","ef625bef":"markdown"},"source":{"588b9e78":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nfrom sklearn.feature_selection import VarianceThreshold\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0e1bb56a":"dataset = pd.read_csv('..\/input\/diabetes.csv')","9797203f":"print(dataset.describe())\nX = dataset.iloc[:, 0:8]\ny = dataset.iloc[:, 8]","a1c6f17e":"\nsns.heatmap(X.corr(), annot = True)\n","b95ab4b8":"zero_not_accepted = ['Glucose', 'BloodPressure', 'SkinThickness', 'BMI', 'Insulin']\n\nfor column in zero_not_accepted:\n    X[column] = X[column].replace(0, np.NaN)\n    mean = int(X[column].mean(skipna=True))\n    X[column] = X[column].replace(np.NaN, mean)","6511987a":"## Var[X] = p(1-p)\nsel = VarianceThreshold(threshold=(.8 * (1 - .8)))\nX_filtered = sel.fit_transform(X)\n\nprint(X.head(1))\nprint(X_filtered[0])\n#DiabetesPedigreeFunction was dropped\nX = X.drop('DiabetesPedigreeFunction', axis=1)\n\ntop_4_features = SelectKBest(score_func=chi2, k=4)\nX_top_4_features = top_4_features.fit_transform(X, y)\nprint(X.head())\nprint(X_top_4_features)\nX = X.drop(['Pregnancies', 'BloodPressure', 'SkinThickness'], axis=1)","7ca100d6":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, test_size=0.20)","0183502b":"sc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","0b97ac77":"classifier = GaussianNB()\nclassifier.fit(X_train, y_train)","5197975f":"y_pred = classifier.predict(X_test)","8b8ba253":"cm = confusion_matrix(y_test, y_pred)\nprint (cm)\nprint(f1_score(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))","e234e342":"Split data set\n------------------","bc2584b7":"view the correlation\n------------------------","7cac168e":"Evaluate Model\n------------------","8d98bef5":"Implement the classifier\n------------------------------------","ac3aa3a9":"Feature Scaling\n-------------------","e897525c":"Na\u00efve Bayes using PIMA Dataset\n=====================================================================","53c1ccf3":"feature extraction\n----------------------\n*Note: this did not improved my model results*","9321720a":"Replace Zeroes with the median value of the column\n------------------------------------------------------","494a528f":"Predict the test set results\n--------------------------------","22a52ca5":"load pima dataset\n---------------------\n\n[http:\/\/archive.ics.uci.edu\/ml\/datasets\/Pima+Indians+Diabetes][1]\n\n[http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/pima-indians-diabetes\/pima-indians-diabetes.names][2]\n\n  [1]: http:\/\/archive.ics.uci.edu\/ml\/datasets\/Pima+Indians+Diabetes\n  [2]: http:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/pima-indians-diabetes\/pima-indians-diabetes.names","ef625bef":"split dataset in 80\/20\n-----------------------"}}