{"cell_type":{"d4e1556a":"code","f5b69087":"code","25d8fef6":"code","1a8dfbaa":"code","384d1954":"code","eca7ce8b":"code","815cce74":"code","5d346e64":"code","bceb1046":"code","4d667112":"code","06da1a1e":"code","1f97edf0":"code","534daa5d":"code","b12728f1":"markdown","31d00bb2":"markdown","be5745a5":"markdown","4a777bc7":"markdown","b39e7dfe":"markdown","26b38953":"markdown","dd38c937":"markdown","1eeb1fbb":"markdown"},"source":{"d4e1556a":"# Install package in the current Jupyter kernel\nimport sys\n!{sys.executable} -m pip install bar_chart_race","f5b69087":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport bar_chart_race as bcr   # use pip install bar_chart_race in console to install this package\nfrom IPython.display import HTML\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom IPython.display import Video","25d8fef6":"covid_data_complete = pd.read_csv('..\/input\/covid19-cases-by-country\/covid-data.csv')\ncovid_data_complete.head()","1a8dfbaa":"covid_data_complete.info()","384d1954":"covid_data_complete.isnull().sum()","eca7ce8b":"# change datatype of date to a pandas datetime format\ncovid_data_complete[\"date\"] = covid_data_complete[\"date\"].apply(pd.to_datetime, dayfirst=True)\n\n#drop columns other than total_cases\ndrop_cols = ['new_cases', 'total_deaths', 'new_deaths']\ncovid_data_complete.drop(covid_data_complete[drop_cols],axis=1,inplace=True)\n#covid_data_complete.drop(['new_cases' , 'total_deaths', 'new_deaths'] , axis=1, inplace=True)\n\ncovid_data_complete.head()","815cce74":"covid_data = covid_data_complete.copy() #make a copy for analysis\ncovid_data.columns = ['Date', 'Countries', 'Cases'] #rename columns\ncovid_data.head(10)","5d346e64":"total_countries = covid_data['Countries'].nunique()\ntotal_countries","bceb1046":"covid_data.set_index(['Countries','Date']).unstack()['Cases'].T.reset_index()","4d667112":"# set countries and date as index and find cases\n# transpose the dataframe to have countries as columns and dates as rows\ncovid_data_by_date = covid_data.set_index(['Countries','Date']).unstack()['Cases'].T.reset_index()\n\ncovid_data_by_date = covid_data_by_date.set_index('Date') #make date as index - desired by barchartrace\n\ncovid_data_by_date = covid_data_by_date.fillna(0) #fill na with 0\ncovid_data_by_date","06da1a1e":"#make the mp4 file with the BarChartRace and save it\ndf = covid_data_by_date\nbcr.bar_chart_race(\n    df=df,\n    filename='Covid19_BarChartRace.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=10,\n    fixed_order=False,\n    fixed_max=False,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.95,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_fmt='%B %d, %Y',\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': '',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    perpendicular_bar_func='median',\n    period_length=1000,\n    figsize=(5, 3),\n    dpi=500,\n    cmap='dark24',\n    title='Developer: Akhil James\\n  COVID-19 Cases by Country\\n ',\n    title_size=10,\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=True)","1f97edf0":"# from IPython.display import HTML\n# HTML('<iframe width=\"900\" height=\"600\" src=\"https:\/\/www.kaggleusercontent.com\/kf\/35204744\/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..MesAbveuEYdnCB0xQCLoCA.gkUggoSk3_vIAjuQZr6VODLqU9DrDvj-Wk6_sQo3-ZUe3jfiODpEGcJwOlfnTbxECN2oeFKtiWXWfm3CdiRZzZO2P-JekAJt_7o0UG88HVDcK_xKBv_V5uVXZcd1RDqd7Csdeu03zEcBmy_li8b_M7L-Cs0bJz69IaWkn22lVlnikd-3MO9WXA0w5BVLVnNrTjnCLQoCQwD-xQ86YgaiYqCJoq9cMwCr4Gdr_n5r35qIHo2B8lCfdHwYCaSkAycMrd1rRdBmGwPuQ5gx_X6D7XCMcyac1KB99CCK266TfekBvDTFEUN3Qav7xclITcspN2KsVwHvfgezucOjmp1NiQ97aWIVKAs0NHHAB2uysuVb5zh9CXB1Wy7LyWWOTsQ449HXrTzcuCqjF8sHdzzrSdt13YR78rlGeU-aZKzqapGxc9LDk0PGoGXuHPYJEEtoisc_ZOTZha0eNTh8pSXU7VxT1lkF6qhgwQTnLKRNtPLM8o8IGtceu2WddpS27fMT8dXiuHk04lw3FTnq-58p2EI44qEKvTOTLFwCACGm7NDW1917Jku1y1doxbnZROhIKbmlvagKSXwsLRsOW_UHNqgFYig2JbSxq_pa0diGVce3voeMs5W9wkv6VvXHrNKViqibVstAwQ2MyDk3n5ofxm9x8rPMdoFIFcY6_IlL8sxUeVSr7SAv-THurkZoLOVo.yi6gIq3LNiCzn3s1MUeAbw\/Covid19_BarChartRace.mp4\" frameborder=\"0\" allowfullscreen><\/iframe>')","534daa5d":"#other methods to load video\n\n# Video(\"..\/output\/kaggle\/working\/Covid19_BarChartRace.mp4\", width=900, height=600, embed=True)\n\n#########################################################################################################\n\n# %%HTML\n# <video width=400 controls>\n#   <source src=\"..\/output\/kaggle\/working\/Covid19_BarChartRace.mp4\" type=\"video\/mp4\">\n# <\/video>\n\n##########################################################################################################\n\n# from IPython.display import HTML\n\n# HTML(\"\"\"\n# <div align=\"middle\">\n# <video width=\"100%\" controls>\n#       <source src=\"..\/output\/kaggle\/working\/Covid19_BarChartRace.mp4\" type=\"video\/mp4\">\n# <\/video><\/div>\"\"\")\n\n##########################################################################################################\n\n# ! ln -sf \"..\/output\/kaggle\/working\/Covid19_BarChartRace.mp4\" .\/Covid19_BarChartRace.mp4\n# Video(\"Covid19_BarChartRace.mp4\", embed=True)","b12728f1":"## 6. Create the BarChartRace and save file as mp4","31d00bb2":"## 3. Inspect the dataframe","be5745a5":"## 1. Import Libraries","4a777bc7":"## 2. Load Data","b39e7dfe":"## 5. Arrange the dataframe for creating bar chart race","26b38953":"## 4. Drop Columns and modify dataframe","dd38c937":"## Install Bar Chart Race","1eeb1fbb":"# COVID-19 Bar Chart Race - Number of Cases"}}