{"cell_type":{"a9ccfec3":"code","9243773b":"code","d7d94a3a":"code","3c426bfd":"code","c76e03de":"code","48071782":"code","2241f5ba":"code","657d1bc2":"code","8fe2e6ea":"code","bf09f9fd":"code","51714704":"code","180a02aa":"code","86d68843":"code","7c4d5115":"code","97439599":"code","b31674a7":"code","11e13098":"code","c77a8346":"code","7dad7b2a":"code","b5ce095f":"code","86d2a433":"code","cb4d86e9":"code","df845bd5":"code","8b62c09d":"code","9c2dc763":"code","e93aeabb":"code","c9c944d8":"code","28f44485":"code","44266a2b":"code","dd436f79":"code","91cf0cde":"code","329bcac1":"code","7a1a2ae5":"code","2b320086":"code","7958e9a1":"code","31de6bae":"code","e94d4dfc":"code","0643254c":"code","6ad2c242":"code","f0a0f6f9":"code","dddbe2fa":"code","16447782":"code","1f4c0bfa":"code","9bd9217c":"code","d38e1436":"code","7c57814b":"code","be68f3b8":"code","5c4c3128":"markdown","4efeb9e1":"markdown","e3f8e474":"markdown","a07b59e3":"markdown","cee74b71":"markdown","e4fb9104":"markdown","6428ac8a":"markdown","9ffdf441":"markdown","85b37534":"markdown","2d8c14c7":"markdown","1069036c":"markdown","f2790d6a":"markdown"},"source":{"a9ccfec3":"!pip install -q git+https:\/\/github.com\/eaedk\/testing-zindi-package.git","9243773b":"# Import Zindian class from the package\nfrom zindi.user import Zindian","d7d94a3a":"# create a user object\nmy_username = \"Kamenialexnea\"\nuser = Zindian(username = my_username)","3c426bfd":"user.select_a_challenge(fixed_index=9)","c76e03de":"user.download_dataset(\".\/input\/\")","48071782":"from zipfile import ZipFile\nfile = ZipFile(\".\/input\/images.zip\")","2241f5ba":"file.extractall(\".\/input\/\")","657d1bc2":"import numpy as np\nimport pandas as pd","8fe2e6ea":"train = pd.read_csv(\".\/input\/Train.csv\")\ntrain.head()","bf09f9fd":"train.target.value_counts()","51714704":"test = pd.read_csv(\".\/input\/Test.csv\")\ntest.head()","180a02aa":"print(train.shape, test.shape)","86d68843":"ss = pd.read_csv(\".\/input\/SampleSubmission.csv\")\nss.head()","7c4d5115":"import cv2\nfrom matplotlib import pyplot as plt","97439599":"img_id = train.img_IDs[0]\nprint(img_id)","b31674a7":"image = cv2.imread(\".\/input\/CAMAIRAI BOX READY\/\" + img_id + \".jpg\", 0) # gray\nprint(image.shape)\nplt.imshow(image, cmap=\"gray\")\nplt.title(\"Kidney \" + img_id + \" \"+ str(train.target[0]))\nplt.show()","11e13098":"img_id = train.img_IDs[1]\nimage = cv2.imread(\".\/input\/CAMAIRAI BOX READY\/\" + img_id + \".jpg\", 0) # gray\nplt.imshow(image, cmap=\"gray\")\nplt.title(\"Kidney \" + img_id + \" \"+ str(train.target[1]))\nplt.show()","c77a8346":"img_id = train.img_IDs[2]\nimage = cv2.imread(\".\/input\/CAMAIRAI BOX READY\/\" + img_id + \".jpg\", 0) # gray\nplt.imshow(image, cmap=\"gray\")\nplt.title(\"Kidney \" + img_id + \" \"+ str(train.target[2]))\nplt.show()","7dad7b2a":"img_id = train.img_IDs[3]\nimage = cv2.imread(\".\/input\/CAMAIRAI BOX READY\/\" + img_id + \".jpg\", 0) # gray\nplt.imshow(image, cmap=\"gray\")\nplt.title(\"Kidney \" + img_id + \" \"+ str(train.target[3]))\nplt.show()","b5ce095f":"def read_resize(img_id):\n    \"\"\"\n        Read and resize image\n    \"\"\"\n    image = cv2.imread(\".\/input\/CAMAIRAI BOX READY\/\" + img_id + \".jpg\", 0)\n    image = cv2.resize(image, (50, 50)) # Image output size is (50, 50)\n    return image","86d2a433":"image = read_resize(train.img_IDs[0])\nprint(image.shape)","cb4d86e9":"plt.imshow(image, cmap=\"gray\")\nplt.title(\"Kidney \" + train.img_IDs[0] + \" \"+ str(train.target[0]))\nplt.show()","df845bd5":"!pip install -q ktrain","8b62c09d":"import ktrain\nfrom ktrain import vision as vis","9c2dc763":"(trn, val, preproc) = vis.images_from_csv(\n    train_filepath=\".\/input\/Train.csv\", # Train csv file path\n    image_column=\"img_IDs\",\n    label_columns=\"target\",\n    directory=\".\/input\/CAMAIRAI BOX READY\/\",\n    suffix=\".jpg\",\n    random_state=0\n)","e93aeabb":"model = vis.image_classifier('pretrained_resnet50', trn, val, freeze_layers=15)\nlearner = ktrain.get_learner(model=model, train_data=trn, val_data=val, \n                             workers=8, use_multiprocessing=False, batch_size=5)","c9c944d8":"learner.lr_find(max_epochs=5)","28f44485":"learner.lr_plot()","44266a2b":"learner.fit_onecycle(1e-4, 1)","dd436f79":"predictor = ktrain.get_predictor(learner.model, preproc)","91cf0cde":"vis.show_image('.\/input\/CAMAIRAI BOX READY\/' + train.img_IDs[1] + \".jpg\")\nplt.title(\"Image Class : \" + str(train.target[1]))\nplt.show()","329bcac1":"predictor.predict_filename('.\/input\/CAMAIRAI BOX READY\/' + train.img_IDs[1] + \".jpg\")","7a1a2ae5":"predictor.get_classes()","2b320086":"predictor.predict_proba_filename('.\/input\/CAMAIRAI BOX READY\/' + train.img_IDs[1] + \".jpg\")","7958e9a1":"val.filenames","31de6bae":"proba = np.array([predictor.predict_proba_filename('.\/input\/CAMAIRAI BOX READY\/'  + img_ID) for img_ID in val.filenames])","e94d4dfc":"proba = proba.reshape((len(val.filenames), 2))\nproba","0643254c":"from sklearn import metrics","6ad2c242":"print(\"ROC AUC {}\".format(metrics.roc_auc_score(val.labels[:, 1], proba[:, 1])))","f0a0f6f9":"preds = np.array([\n    predictor.predict_proba_filename('.\/input\/CAMAIRAI BOX READY\/'  + img_ID + \".jpg\") for img_ID in test.img_IDs\n])","dddbe2fa":"preds = preds.reshape((len(test.img_IDs), 2))\npreds[:5]","16447782":"ss[\"target\"] = preds[:, 1]\nss.target.describe()","1f4c0bfa":"ss.head()","9bd9217c":"ss.to_csv(\".\/submission.csv\", index=False)","d38e1436":"user.submit(filepaths=[\".\/submission.csv\"], comments=[\"Baseline\"])","7c57814b":"user.which_challenge","be68f3b8":"user.submission_board()","5c4c3128":"## Find Learning Rate","4efeb9e1":"**Score : 0.560606060606**\n\nBy **Alex Kameni**\n\n**Final Year Engineer at ENSPY**","e3f8e474":"## Training","a07b59e3":"## Evaluate your model","cee74b71":"## Let plot some images","e4fb9104":"# Use Pretrained Model : ResNet 50","6428ac8a":"## Save and submit","9ffdf441":"## Predict on test set","85b37534":"# Simple EDA","2d8c14c7":"**Cameroon Advance Analytic Ultrasound Image**\n\nThe objective of this challenge is to build a machine learning model that can predict if kidneys are in renal failure from ultrasounds and to build a hub of data scientists and analysts in Cameroon.\n\nFiles available for download:\n\n* **Images.zip** - contains all 133 images.\n* **Train.csv** - contains a list of img_IDs. You will use these img_IDs to pull the corresponding images from the Images.zip. This file also indicates which images are diseased or healthy. You will use these images to train your model.\n* **Test.csv**- contains a list of img_IDs. You will use these img_IDs to pull the corresponding images from the Images.zip. You will use these images to apply your model to and make predictions.\n* **SampleSubmission.csv** - shows the submission format for this competition, with the \u2018img_IDs\u2019 mirroring that of Test.csv and the \u2018target\u2019 column containing your predictions. The order of the rows does not matter, but the names of the img_IDs must be correct.","1069036c":"# Install zindi package and download dataset","f2790d6a":"## Make Prediction"}}