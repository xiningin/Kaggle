{"cell_type":{"beca7aaf":"code","ab274561":"code","5bd9609a":"code","f7b7cb27":"code","8c1f8b56":"code","df23a43d":"code","fbea1d35":"code","4d31dc93":"code","e61c6993":"code","03c50404":"markdown","2acd72da":"markdown","6f079d35":"markdown"},"source":{"beca7aaf":"!pip install MulticoreTSNE","ab274561":"from MulticoreTSNE import MulticoreTSNE as TSNE\nfrom matplotlib import pyplot as plt\nplt.style.use(\"fivethirtyeight\")\n%matplotlib inline\nimport pandas as pd\nimport numpy as np","5bd9609a":"import os\nos.listdir('..\/input\/')\npath='..\/input\/features-for-elo-merchants-competition\/'","f7b7cb27":"#import data:\ntrain_df = pd.read_csv(path+'full_train_df.csv', index_col='card_id')\ntest_df = pd.read_csv(path+'full_test_df.csv', index_col='card_id')\ndf = train_df.append(test_df)\ntrain_len = train_df.shape[0]\n\nFEATS_EXCLUDED = ['first_active_month', 'target', 'card_id', 'outliers',\n                  'hist_purchase_date_max', 'hist_purchase_date_min', 'hist_card_id_size',\n                  'new_purchase_date_max', 'new_purchase_date_min', 'new_card_id_size',\n                  'OOF_PRED', 'month_0']\ncols = [f for f in train_df.columns if f not in FEATS_EXCLUDED]\n\ndata = df[cols]\noutliers = train_df.outliers\ntarget = train_df.target\n\n#nan mean imputer:\nfrom sklearn.preprocessing import Imputer\n#from sklearn.impute import SimpleImputer\nimp = Imputer(missing_values=np.nan, strategy='mean')\ndata = imp.fit_transform(data)\n#scale:\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ndata=scaler.fit_transform(data)","8c1f8b56":"print(train_df.shape, test_df.shape, data.shape)","df23a43d":"#TSNE train\ntsne_model = TSNE(n_jobs=-1, verbose=1, random_state=42)#, n_iter=100) #default n_iter=1000\nembeddings=tsne_model.fit_transform(data)\n#only train Iteration 1000: error is 4.964520\n#full Iteration 1000: error is 5.587587","fbea1d35":"tsne_model.kl_divergence_","4d31dc93":"#TSNE visualization\n\nc = np.array([10 if i>=train_len else outliers[i]*18 for i in range(df.shape[0])])\nprint('color map:', c.shape)\nprint('counts:', pd.value_counts(c))\nprint('embeddings shape:',embeddings.shape)\nvis_x = embeddings[:, 0]\nvis_y = embeddings[:, 1]\n\nplt.figure(1, figsize=(20, 10))\nplt.scatter(vis_x, vis_y, c=c,cmap=plt.cm.get_cmap(\"jet\", 20), marker='.', alpha=0.5)\nplt.colorbar(ticks=range(20))\nplt.clim(1, 20)\nplt.title('full dataset TSNE-2D 18 - outliers, 0 - train, 10 - test')\nplt.tight_layout()\nplt.savefig('full_tsne_2d_embeddings_outliers.png')\nplt.show()","e61c6993":"plt.figure(1, figsize=(20, 10))\n\n#c2 = np.array([10 if i>=train_len else target[i]+10 for i in range(df.shape[0])])\n#plt.scatter(vis_x, vis_y, c=target+10,cmap=plt.cm.get_cmap(\"jet\", 20), marker='.')\n\nc2 = np.array([target[i]+8 if target[i]<30 else 18 for i in range(train_len)])\nplt.scatter(vis_x[:train_len], vis_y[:train_len], c=c2[:train_len],cmap=plt.cm.get_cmap(\"jet\", 20), marker='.', alpha=0.5)\nplt.colorbar(ticks=range(20))\nplt.clim(1, 20)\nplt.title('full dataset TSNE-2D target (19 - train)')\nplt.tight_layout()\nplt.savefig('full_tsne_2d_embeddings_targets.png')\nplt.show()","03c50404":"if you want to export:\npd.DataFrame(embeddings).to_csv('full_tsne_2d_embeddings.csv', index=True)","2acd72da":"1. import train and test df with calculated features. You can try your data\n2. preprocess data\n3. calculate TSNE (30-40 mins)\n4. visualize outliers and targets\n\nlater:\nsmart imputer (not mean but train from dataset)\ntsne import pretrained 2D,3D\ncalculate knn for outliers\nmerchants.csv additional features\nmultitask - classification+regression in one model","6f079d35":"**TSNE analisys**"}}