{"cell_type":{"50e40dd6":"code","c6c6396e":"code","42830379":"code","1496016c":"code","1ae802ee":"code","00ac5bfc":"code","64003587":"code","9c6598f5":"code","e0460f82":"code","1dd45b9f":"code","6b7d8323":"code","8a605331":"code","759f2bbc":"code","e0e9d584":"code","a494a8b5":"code","f415b617":"code","232221a7":"markdown","75ef2ef8":"markdown","928aa5e3":"markdown"},"source":{"50e40dd6":"import numpy as np\nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline","c6c6396e":"df = pd.read_csv('\/kaggle\/input\/breast-cancer-prediction-dataset\/Breast_cancer_data.csv')","42830379":"df.corr()","1496016c":"df.info()","1ae802ee":"df.describe()","00ac5bfc":"df.columns","64003587":"feature_names = ['mean_radius', 'mean_texture', 'mean_perimeter', 'mean_area', 'mean_smoothness', 'diagnosis']\ntraining_features = df[feature_names]\nnumeric_features = [ 'mean_radius', 'mean_texture', 'mean_perimeter', 'mean_area', 'mean_smoothness']","9c6598f5":"from sklearn.preprocessing import StandardScaler\ns= StandardScaler()\ns.fit(training_features[numeric_features])\ntraining_features[numeric_features] = s.transform(training_features[numeric_features])","e0460f82":"X=training_features[['mean_radius', 'mean_texture', 'mean_perimeter', 'mean_area','mean_smoothness']]\ny=training_features[ 'diagnosis']","1dd45b9f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\n\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)","6b7d8323":"from sklearn.metrics import classification_report\nprint(\"Classification Report:\\n \", classification_report(y_test,y_pred))","8a605331":"from sklearn.linear_model import LogisticRegression\nimport numpy as np\n\nlr = LogisticRegression()\nmodel = lr.fit(X_train,np.array(y_train))\n\nprint(model)","759f2bbc":"pred_labels = model.predict(X_test)","e0e9d584":"from sklearn.metrics import classification_report\nprint(\"Classification Report:\\n \", classification_report(y_test, pred_labels))","a494a8b5":"from sklearn.tree import DecisionTreeClassifier\n# your code goes here-Train\nclassifier = DecisionTreeClassifier()\nclassifier.fit(X_train,y_train)\ny_pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\nprint(classification_report(y_test,y_pred))  \nprint(accuracy_score(y_test, y_pred))","f415b617":"from sklearn.ensemble import RandomForestClassifier\n# your code goes here-Train\nclassifier = RandomForestClassifier()\nclassifier.fit(X_train,y_train)\ny_pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\nprint(classification_report(y_test,y_pred))  \nprint(accuracy_score(y_test, y_pred))","232221a7":"# Data Cleaning","75ef2ef8":"# Data Preprocessing","928aa5e3":"as the accuracy of random forest is high we will use random forest"}}