{"cell_type":{"9050694b":"code","c2a08cd5":"code","004f8be3":"code","16b23746":"code","30b49be7":"code","a0a16f96":"code","026331d9":"code","082fb790":"code","89e922bf":"code","b9c6fae3":"code","6078b8f1":"code","efae01f2":"code","3cd87f64":"code","dcfcf92c":"code","ed10d0d1":"code","7f06f529":"code","a1684d57":"code","ea5ecf8b":"code","fe1eed25":"code","1a217b5d":"code","0a98da16":"code","0a69ef4a":"code","fc5d6529":"code","0882085c":"code","64434ba7":"code","5e3a1528":"code","1f375172":"code","50978278":"code","c1ae965a":"code","5e50ad62":"code","4d9aa971":"code","d64489aa":"code","e747099f":"code","49f36c0f":"code","66d79b1f":"code","d31e56dc":"code","db679188":"code","db118959":"code","eb4ac6a7":"code","8cdc9282":"code","6c31c0b8":"code","d7c4824c":"code","4fd05117":"code","e774f1bd":"code","32b26977":"code","7d9aa693":"code","c21f0b2a":"code","15fa06e3":"code","60362628":"code","736fcb4b":"code","9ddec623":"code","e8907a1f":"code","90e4a821":"code","e227a6bd":"code","c3144d14":"code","33354efa":"code","a4194411":"code","b6e2fdaf":"code","a2f80020":"code","8aae14f1":"code","1e6d46e0":"code","6c5a081a":"code","a13b167b":"code","1e9e2e94":"code","cc0cf302":"code","cffdca0d":"code","63a01a52":"markdown","e46798ac":"markdown","c1b6cf96":"markdown","a3bd51d9":"markdown","9d37df61":"markdown","7e088af0":"markdown","9cf8e24d":"markdown","b5a3f520":"markdown","ab947c20":"markdown","1bc03ac1":"markdown","88bbbbc5":"markdown","1378bb17":"markdown","24a918b4":"markdown","752c6888":"markdown"},"source":{"9050694b":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nimport holoviews as hv\nfrom holoviews import opts\nhv.extension('bokeh')\nwarnings.filterwarnings('ignore')","c2a08cd5":"ac = pd.read_csv(\"..\/input\/air-conditioner-ac-energy-consumption\/AC_Data.csv\")","004f8be3":"ac\n","16b23746":"ac.shape","30b49be7":"ac = ac.dropna().reset_index()","a0a16f96":"ac.describe().T","026331d9":"ac.columns","082fb790":"ac","89e922bf":"ac.drop('index',axis = 1, inplace=True)","b9c6fae3":"ac","6078b8f1":"# chaning column name from 0 to Timestamp\nac.rename(columns={'0': 'Timestamp'}, inplace=True) \n","efae01f2":"ac","3cd87f64":"ac['year'] = pd.DatetimeIndex(ac['Timestamp']).year\nac['month'] = pd.DatetimeIndex(ac['Timestamp']).month\nac['weekday'] = pd.DatetimeIndex(ac['Timestamp']).weekday\nac['day'] = pd.DatetimeIndex(ac['Timestamp']).day\nac['weekofyear'] = pd.DatetimeIndex(ac['Timestamp']).weekofyear\nac['hour'] = pd.DatetimeIndex(ac['Timestamp']).hour\nac['minute'] = pd.DatetimeIndex(ac['Timestamp']).minute","dcfcf92c":"ac","ed10d0d1":"ac['weekday'].unique()","7f06f529":"# converting Weekday from Numerical Values to Categorical Values for Graph Representations.\n\ndef weekdaytoname(day):\n    if day == 0:\n        name = 'Monday'\n    elif day == 1:\n        name = 'Tuesday'\n    elif day == 2:\n        name = 'Wednesday'\n    elif day == 3:\n        name = 'Thursday'\n    elif day == 4:\n        name = 'Friday'\n    elif day == 5:\n        name = 'Saturday'\n    elif day == 6:\n        name = 'Sunday'\n    \n    return name\n    ","a1684d57":"ac['WeekdayName'] = ac['weekday'].apply(weekdaytoname)","ea5ecf8b":"ac","fe1eed25":"# Dropping yearly Data which is same for all Data entries.\nac.drop(['year'],axis = 1)","1a217b5d":"def hours_to_timing(hour):\n    if hour in [22, 23, 0, 1, 2, 3]:\n        timing = 'Night'\n    elif hour in range(4, 12):\n        timing = 'Morning'\n    elif hour in range(12, 17):\n        timing = 'Afternoon'\n    elif hour in range(17, 22):\n        timing = 'Evening'\n    else:\n        timing = 'X'\n    return timing","0a98da16":"ac['Timing'] = ac['hour'].apply(hours_to_timing)","0a69ef4a":"ac['Timing'].unique()","fc5d6529":"ac","0882085c":"\nac['Month_Name'] = ac['month'].replace({8: 'August', 9 : 'September'})","64434ba7":"ac","5e3a1528":"# Aggregating the AC comsumtion per minute\n\nac['Total'] = ac[['AC 1', 'AC 2', 'AC 3', 'AC 4', 'AC 5', 'AC 6', 'AC 7',\n       'AC 8', 'AC 9', 'AC 10', 'AC 11', 'AC 12', 'AC 13', 'AC 14', 'AC 15',\n       'AC 16', 'AC 17', 'AC 18']].sum(axis=1)","1f375172":"ac","50978278":"total_c_per_unit = ac[['AC 1', 'AC 2', 'AC 3', 'AC 4', 'AC 5', 'AC 6', 'AC 7',\n       'AC 8', 'AC 9', 'AC 10', 'AC 11', 'AC 12', 'AC 13', 'AC 14', 'AC 15',\n       'AC 16', 'AC 17', 'AC 18']].sum(axis=0).rename_axis('AC Unit').reset_index(name='Total')","c1ae965a":"total_c_per_unit","5e50ad62":"ac","4d9aa971":"ac = ac[['Timestamp', 'AC 1', 'AC 2', 'AC 3', 'AC 4', 'AC 5', 'AC 6', 'AC 7',\n       'AC 8', 'AC 9', 'AC 10', 'AC 11', 'AC 12', 'AC 13', 'AC 14', 'AC 15',\n       'AC 16', 'AC 17', 'AC 18','Total', 'year', 'month', 'weekday', 'day',\n       'weekofyear', 'hour', 'minute', 'WeekdayName', 'Timing', 'Month_Name',\n       ]]","d64489aa":"ac.columns","e747099f":"ac","49f36c0f":"ac['Total']","66d79b1f":"sns.relplot(x = 'hour', y = 'Total', data = ac, kind= 'line',hue='Month_Name', sort = True )\nplt.title('Total energy consumption (Hourly) to see if any changes hourly')","d31e56dc":"\nsns.relplot(x = 'day', y = 'Total', data = ac, kind= 'line',hue='Month_Name')\nplt.title('Total energy consumption (Daywise) to see if any changes hourly')","db679188":"plt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.distplot(ac['Total'])\nplt.title('Total AC energy consumption Distribution')","db118959":"sns.distplot(ac[['AC 1']],  label='AC 1')\nsns.distplot(ac['AC 2'], label='AC 2')\nsns.distplot(ac[['AC 3']],  label='AC 3')\nsns.distplot(ac['AC 4'], label='AC 4')\nsns.distplot(ac[['AC 5']],  label='AC 5')\nsns.distplot(ac['AC 6'], label='AC 6')\nsns.distplot(ac[['AC 7']],  label='AC 7')\nsns.distplot(ac['AC 8'], label='AC 8')\nsns.distplot(ac[['AC 9']],  label='AC 9')\nsns.distplot(ac['AC 10'], label='AC 10')\nsns.distplot(ac[['AC 11']],  label='AC 11')\nsns.distplot(ac['AC 12'], label='AC 12')\nsns.distplot(ac[['AC 13']],  label='AC 13')\nsns.distplot(ac['AC 14'], label='AC 14')\nsns.distplot(ac[['AC 15']],  label='AC 15')\nsns.distplot(ac['AC 16'], label='AC 16')\nsns.distplot(ac[['AC 17']],  label='AC 17')\nsns.distplot(ac['AC 18'], label='AC 18')\nplt.legend();\n","eb4ac6a7":"\nplt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.barplot(x=ac['hour'], y=ac['Total'])\nplt.title('Overall Power Cosumption at each hour of the day');","8cdc9282":"plt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.barplot(x=ac['day'], y=ac['Total'], hue='Month_Name', data=ac)\nplt.title('Overall Power Cosumption at each Day');","6c31c0b8":"\nplt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.barplot(x=ac['Timing'], y=ac['Total'])\nplt.title('Power Consumption at different timings of the day');","d7c4824c":"total_max_v = ac[['AC 1', 'AC 2', 'AC 3', 'AC 4', 'AC 5', 'AC 6', 'AC 7',\n       'AC 8', 'AC 9', 'AC 10', 'AC 11', 'AC 12', 'AC 13', 'AC 14', 'AC 15',\n       'AC 16', 'AC 17', 'AC 18']].max(axis=0).rename_axis('AC Unit').reset_index(name='Total')","4fd05117":"total_max_v","e774f1bd":"total_max_v.rename(columns={'Total': 'Max_Value'}, inplace=True) ","32b26977":"total_max_v.plot(kind='bar')","7d9aa693":"total_max_v","c21f0b2a":"total_c_per_unit","15fa06e3":"total_c_per_unit.rename(columns={'Total': 'Total_overall'}, inplace=True)","60362628":"total_c_per_unit.drop('AC Unit', axis=1, inplace=True)","736fcb4b":"toc = pd.concat([total_max_v,total_c_per_unit], axis = 1)","9ddec623":"toc","e8907a1f":"total_5 = toc.sort_values(by='Total_overall', ascending=False) ","90e4a821":"total_5[['AC Unit', 'Total_overall']].head(5)","e227a6bd":"ac","c3144d14":"toc_least = toc.sort_values(by='Total_overall', ascending=True)","33354efa":"toc_least","a4194411":"toc_least[['AC Unit','Total_overall']].head(5)","b6e2fdaf":"toc.sort_values(by='Max_Value', ascending=True).head(5)","a2f80020":"toc_least","8aae14f1":"plt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.pointplot(x='AC Unit', y='Total_overall', data=toc_least, color='red',sort=True);","1e6d46e0":"sns.catplot(x = 'Timing', y = 'Total', data = ac , jitter=False)","6c5a081a":"sns.catplot(x = 'Timing', y = 'hour', data = ac)","a13b167b":"sns.catplot(x = 'Timing', y = 'Total', data = ac , kind = 'box', hue='month', dodge = False)","1e9e2e94":"sns.catplot(x = 'Timing', kind = 'count', palette = 'ch:0.95', data = ac)","cc0cf302":"ac","cffdca0d":"plt.figure(figsize=(20,12))\nplt.xticks(rotation=90)\nsns.barplot(x=ac['WeekdayName'], y=ac['Total'])\nplt.title('Power Consumption at different Weekdays\/Weekends of the day');","63a01a52":"# 1. Importing the Data to Variable","e46798ac":"hence, In the Month of August the AC consumption is more. The reason is the average high-temperature of gurgoan at given time Period approx is **34.5\u00b0C (94.1\u00b0F)**, and the average low-temperature is **25.9\u00b0C (78.6\u00b0F)** which is considered as hot Temperature.","c1b6cf96":"so the Power consumption is More During night, when everybody sleeps in a hotel.\n\n*Due to lack of data we cannot say whether AC is of Rooms or other areas as well likewise gym, spa, lobby.\nto test This hypothesis we need more Accurate Data*","a3bd51d9":"# 5. Data preprocessing here we only have Timestamp for so we extract as much info as we can from Date","9d37df61":"# 5. EDA","7e088af0":"# 3. Reason for not to fill missing using mean, mode or Median value as from dataset we can surely see that is the energy consumption is 7.518632 joules or KW in 1minute we cnt say that it will be 2-3joules at minute 2 but the 3rd row contradicts the judgement wheres after 2 minutes the consumption is still 7.426114 which is almost in similar range to minute 1. \n\n# Best case is we Drop all the missing Values from dataset we still have data of every other 2 minutes which in case of energy consumption we can perfectly use it to forecast\/EDA of the energy consumption by AC.","9cf8e24d":"# ","b5a3f520":"# which 5 AC Are Conusming Less Power??\n\nAC Unit\tMax_Value on a Day Basis Least consuming\n\t\n    AC 10\t4.625030\n\n    AC 5\t5.495358\n\n    AC 17\t5.950261\n\n    AC 3\t8.430909\n\n    AC 14\t9.054969\n\t\n\n\n\nAC Unit\tTotal_overall _ least consuming\n\t\n    AC 5\t- 50800.569898\n\n    AC 10\t- 53327.657137\n\n    AC 4\t- 80136.762231\n\n    AC 1\t- 82936.044911\n\n    AC 11\t- 86125.618895\n\n\n# **AC-10 , AC-5** are Least Energy Consuming AC on a hotel. they both as overall as well as day basis less energy consumption as compared to other\n","ab947c20":"# which 5 AC Are Conusming more Power??\n\n on a Daywise -\n\n    AC 1 :: 11.1947890625 \n\n    AC 2 :: 11.147140625\n\n    AC 18 :: 11.04003125\n\n    AC 11 :: 10.3631513672\n\n    AC 15 :: 10.3499980469\n\nOverall throughout Month -\n\n\t\n    AC 18 ::\t223573.076079\n\n    AC 13 ::\t149411.074408\n\n    AC 17 ::\t147405.838816\n\n    AC 15 ::\t142868.332861\n\n    AC 2  ::\t134136.090605\n\n\n\n# **AC-18, AC-15, AC-2** are Consuming the most energy on a day basis as well as overall throughout year.","1bc03ac1":"# Timing information\n\nHour variable can be broken into Night, Morning, Afternoon and Evening based on its number.\n\nNight : 22:00 - 23:59 \/ 00:00 - 03:59\n\nMorning : 04:00 - 11:59\n\nAfternoon : 12:00 - 16:59\n\nEvening : 17:00 - 21:59\n\nWe can create timing variable based on hour variable.","88bbbbc5":"# Summary:-\n\n# 1. *In the Month of August the AC consumption is more. The reason is the average high-temperature of gurgoan at given time Period approx is **34.5\u00b0C (94.1\u00b0F)**, and the average low-temperature is **25.9\u00b0C (78.6\u00b0F)** which is considered as hot Temperature.*\n\n\n\n# 2. *The overall power consumption is more during 12:00AM Night to 4:00Am and 9PM to 11PM. The reason is people return from Vaccation or outing around 8pm then they have dinner then come to bed to sleep and Use AC all night.*\n\n\n\n# 3. *So the Power consumption is More During night, when everybody sleeps in a hotel. Due to lack of data we cannot say whether AC is of Rooms or other areas as well likewise gym, spa, lobby. To test This hypothesis we need more Accurate Data*\n\n\n\n# 4. ***AC-18, AC-15, AC-2** are Consuming the **Most** energy on a day basis as well as overall throughout year.*\n\n\n\n# 5. ***AC-10 , AC-5** are Least Energy Consuming AC on a hotel. they both as overall as well as day basis ***less*** energy consumption as compared to other*\n","1378bb17":"# 2. Data is of AC consumption which is in energy\/per minute but sadly what i have seen from this dataset is that too many missing values are there i.e after every 1 minute theres a missing row after every  other minute. there are Total 87840 Rows Are Present but Missing Values are almost 50%. ","24a918b4":"# Q.1 Is there any Relationship in Power Concumptio with respect to time?\nThe overall power consumption is more during 12:00AM Night to 4:00Am and 9PM to 11PM. The reason is people return from Vaccation or outing around 8pm then they have dinner then come to bed to sleep and Use AC all night.","752c6888":"# Problem Statement - \n\ndata contains power for multiple ACs at some hotel in Gurgaon.\n\n    -- >Identify patterns\/trends in the data? - DONE\n\n    --> Which AC was used the most\/least? - DONE\n\nOptional (Bonus questions):\n\n    --> Relate this power data with the outside temperature of Gurgaon. (Feel free to use temperature data from any website online. How will you fetch that data in your analysis?\n\n    --> Using the power data, predict\/forecast the power consumption?\n\n\n\n\n\n\n\n\n\n\n"}}