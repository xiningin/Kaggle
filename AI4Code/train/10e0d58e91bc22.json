{"cell_type":{"37fc0870":"code","00ad88e5":"code","879f356e":"code","bdcbfb8a":"code","c6f77992":"code","8a16e53f":"code","c10763e2":"code","a915c86e":"code","21295368":"code","cafd0a38":"code","d9cd5a8a":"code","711d2db6":"code","67a69f3a":"code","35c22c4e":"code","e81c64fc":"code","92cb4ef6":"markdown","ef475f73":"markdown","4a486c5e":"markdown","248789f4":"markdown","a32f9ad8":"markdown","507ae840":"markdown","854ed164":"markdown","e5e0bdab":"markdown","16e77ac8":"markdown","6343f6fe":"markdown","d7324ada":"markdown","b84a85a4":"markdown","2d3555d2":"markdown","c574d6ba":"markdown","1d872141":"markdown","bdfd3459":"markdown","c748656d":"markdown","d24c5a97":"markdown","d3cad498":"markdown","824f0908":"markdown","dc7a80ed":"markdown"},"source":{"37fc0870":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","00ad88e5":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn import model_selection\n\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.model_selection import train_test_split","879f356e":"df = pd.read_csv('..\/input\/hourly-energy-consumption\/AEP_hourly.csv')","bdcbfb8a":"df['Datetime'] = pd.to_datetime(df['Datetime'])","c6f77992":"df = df.sort_values(by = 'Datetime')","8a16e53f":"df.head()","c10763e2":"plt.figure(figsize=(20,10))\nplt.plot(df['Datetime'] , df['AEP_MW'])","a915c86e":"from fbprophet import Prophet","21295368":"df_prophet = df.copy()\ndf_prophet.columns = ['ds','y']\ndf_prophet.head()","cafd0a38":"train = df_prophet[df_prophet['ds'] < '2018-01-01'].copy()\ntest = df_prophet[df_prophet['ds'] >= '2018-01-01'].copy()","d9cd5a8a":"plt.figure(figsize=(20,10))\nplt.plot(train['ds'] , train['y'], color = 'blue')\nplt.plot(test['ds'] , test['y'], color = 'grey')\nplt.show()","711d2db6":"prophet = Prophet()\nprophet.fit(train)\nprediction = prophet.predict(test)","67a69f3a":"prediction.head()","35c22c4e":"plt.figure(figsize=(20,10))\nplt.plot(train['ds'] , train['y'], color = 'blue')\nplt.plot(test['ds'] , test['y'], color = 'grey', alpha = 0.5)\nplt.plot(prediction['ds'] , prediction['yhat'], color = 'orange', alpha = 0.5)\nplt.show()","e81c64fc":"plt.figure(figsize=(20,10))\nplt.plot(train['ds'] , train['y'], color = 'blue')\nplt.plot(test['ds'] , test['y'], color = 'grey', alpha = 0.5)\nplt.plot(prediction['ds'] , prediction['yhat_upper'], color = 'red', alpha = 0.5)\nplt.plot(prediction['ds'] , prediction['yhat_lower'], color = 'green', alpha = 0.5)\nplt.show()","92cb4ef6":"On trie le dataframe par date :","ef475f73":"# Prediction de consommation d'\u00e9nergie (s\u00e9ries temporelles)","4a486c5e":"On convertit les dates lues au format datetime de python :","248789f4":"Prophet est une librairie de pr\u00e9diction de s\u00e9ries temporelles open source propos\u00e9 par Facebook. Prophet d\u00e9compose les s\u00e9ries chronologiques en *tendances*, *saisons* et *vacances* :\n* Les *tendances* mod\u00e9lisent des changements non p\u00e9riodiques de la valeur des s\u00e9ries temporelles.\n* Les *variations saisonni\u00e8res* sont les changements p\u00e9riodiques comme la saisonnalit\u00e9 quotidienne, hebdomadaire ou annuelle.\n* L'effet des *vacances* appara\u00eet sur des occurences irr\u00e9guli\u00e8res sur une journ\u00e9e ou une p\u00e9riode de jours.\n\nIl fonctionne mieux avec les s\u00e9ries chronologiques qui ont de forts effets saisonniers et plusieurs saisons de donn\u00e9es historiques. Prophet est robuste aux donn\u00e9es manquantes et aux changements de tendance, et traite g\u00e9n\u00e9ralement bien les valeurs aberrantes.","a32f9ad8":"La pr\u00e9diction principale est *yhat* (affich\u00e9e en orange) :","507ae840":"# Pr\u00e9paration des donn\u00e9es","854ed164":"On s\u00e9pare la s\u00e9rie en un ensemble d'apprentissage (avant 2018) et de test (apr\u00e8s 2018) :","e5e0bdab":"# Pr\u00e9diction des consommations avec la librairie Prophet","16e77ac8":"https:\/\/facebook.github.io\/prophet\/  \nhttps:\/\/towardsdatascience.com\/time-series-prediction-using-prophet-in-python-35d65f626236  \nhttps:\/\/github.com\/facebook\/prophet","6343f6fe":"On trace l'\u00e9volution des consommations dans le temps :","d7324ada":"On a aussi une pr\u00e9diction maximale (*yhat_upper*, en rouge) et minimale ((*yhat_lower*, en vert) :","b84a85a4":"On veut pr\u00e9dire les prochaines consommations \u00e0 partir de ces donn\u00e9es","2d3555d2":"On lit les donn\u00e9es de la premi\u00e8re r\u00e9gion :","c574d6ba":"Et on lance l'apprentissage avec Prophet :","1d872141":"Le r\u00e9sultat est un dataframe avec de nombreuses colonnes :","bdfd3459":"Remarque : le param\u00e8tre *alpha=0.5* permet de g\u00e9rer la transparence du trac\u00e9 pour superposer les courbes","c748656d":"On affiche l'ensemble d'apprentissage en bleu et le test en gris :","d24c5a97":"Prophet est d\u00e9j\u00e0 install\u00e9 dans Kaggle.  \nPour une installation locale de python (par ex Anaconda), ex\u00e9cuter dans une cellule de code :  \n*!pip install pystan*  \n*!pip install fbprophet*\n","d3cad498":"Le nom des colonnes pour Prophet doit \u00eatre *ds* pour les dates et *y* pour les valeurs. On renomme donc les colonnes correspondantes :","824f0908":"<img src=\"https:\/\/cdn.pixabay.com\/photo\/2018\/05\/30\/23\/29\/electricity-3442835_960_720.jpg\">","dc7a80ed":"PJM Interconnection LLC (PJM) est une organisation r\u00e9gionale de transmission (RTO) aux \u00c9tats-Unis. Elle fait partie du r\u00e9seau Eastern Interconnection qui exploite un syst\u00e8me de transmission \u00e9lectrique desservant tout ou partie du Delaware, de l'Illinois, de l'Indiana, du Kentucky, du Maryland, du Michigan, du New Jersey, de la Caroline du Nord, de l'Ohio, de la Pennsylvanie, du Tennessee, de la Virginie, de la Virginie occidentale et du district de Columbia.\n\nLes donn\u00e9es relatives \u00e0 la consommation horaire d'\u00e9lectricit\u00e9 proviennent du site web de PJM et sont exprim\u00e9es en m\u00e9gawatts (MW).\n\nLes r\u00e9gions ont chang\u00e9 au fil des ans, de sorte que les donn\u00e9es peuvent n'appara\u00eetre que pour certaines dates par r\u00e9gion."}}