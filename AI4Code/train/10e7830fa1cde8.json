{"cell_type":{"6199b4b8":"code","53195a5e":"code","5931ea26":"code","8f27c0d8":"code","cb3b3030":"code","6c5a33b6":"code","c1dfe30b":"code","03b2531d":"code","f9109204":"code","01ded23d":"code","b630ce94":"code","a51254b2":"code","665212b3":"code","996c751a":"code","4f252236":"code","e5b3afe0":"code","732b80c4":"code","ac9ab761":"code","4227b072":"code","390c2712":"code","4fc2a7f3":"code","7124888e":"code","9bfbbd56":"code","be2a672a":"markdown"},"source":{"6199b4b8":"!pip install prophet","53195a5e":"import pandas as pd\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, Normalizer, RobustScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nimport optuna\nfrom sklearn.metrics import mean_squared_error, mean_squared_log_error\nfrom xgboost import XGBRegressor\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom xgboost import plot_importance\n\nimport matplotlib.pylab as pylab\nparams = {'legend.fontsize': 'x-large',\n          'figure.figsize': (15, 10),\n         'axes.labelsize': 'x-large',\n         'axes.titlesize':'x-large',\n         'xtick.labelsize':'x-large',\n         'ytick.labelsize':'x-large'}\npylab.rcParams.update(params)\n\n#plt.style.use('dark_background')\n\ndf_train = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/train.csv', index_col='row_id')\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/test.csv', index_col='row_id')","5931ea26":"df_train['date'] = pd.to_datetime(df_train['date'])\ndf_test['date'] = pd.to_datetime(df_test['date'])","8f27c0d8":"df_train.head()","cb3b3030":"sns.barplot(y='country', x='num_sold', data=df_train, hue='store');\nplt.xlabel('Country')\nplt.ylabel('Sold');","6c5a33b6":"sns.barplot(y='country', x='num_sold', data=df_train, hue='product');\nplt.xlabel('Country')\nplt.ylabel('Sold');","c1dfe30b":"df_temp = df_train[(df_train['country'] == 'Finland') & (df_train['store'] == 'KaggleMart') & (df_train['product'] == 'Kaggle Mug')]","03b2531d":"sns.lineplot(data=df_temp, x='date', y='num_sold');","f9109204":"from prophet import Prophet","01ded23d":"df_temp = df_temp[['date', 'num_sold']].rename({'date': 'ds', 'num_sold': 'y'}, axis=1)","b630ce94":"m = Prophet(changepoint_prior_scale=0.05,\n           holidays_prior_scale=20)\nm.add_country_holidays(country_name='FI')\nm.fit(df_temp)","a51254b2":"future = m.make_future_dataframe(periods=365)\nforecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","665212b3":"from prophet.diagnostics import cross_validation\ndf_cv = cross_validation(m, initial='730 days', period='180 days', horizon = '365 days')","996c751a":"from prophet.diagnostics import performance_metrics\ndf_p = performance_metrics(df_cv)\ndf_p.head()","4f252236":"fig = m.plot_components(forecast)","e5b3afe0":"from prophet.plot import add_changepoints_to_plot\nfig = m.plot(forecast)\na = add_changepoints_to_plot(fig.gca(), m, forecast)","732b80c4":"fig1 = m.plot(forecast)","ac9ab761":"countries = ['Finland', 'Norway', 'Sweden']\nstores = ['KaggleMart', 'KaggleRama']\nproducts = ['Kaggle Mug', 'Kaggle Hat', 'Kaggle Sticker']\nprophet_countries = {\n    'Finland': 'FI',\n    'Norway': 'NO',\n    'Sweden': 'SE'\n}","4227b072":"y_pred = []\nfuture = m.make_future_dataframe(periods=365)\nfor country in countries:\n    for store in stores:\n        for product in products:\n            df_temp = df_train[(df_train['country'] == country) & \n                               (df_train['store'] == store) & \n                               (df_train['product'] == product)]\n            df_temp = df_temp[['date', 'num_sold']].rename({'date': 'ds', 'num_sold': 'y'}, axis=1)\n            m = Prophet()\n            m.add_country_holidays(country_name=prophet_countries[country])\n            m.fit(df_temp)\n            forecast = m.predict(future)\n            forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\n            fig = m.plot(forecast)\n            plt.show(fig)\n            y_pred.extend(forecast['yhat'].tolist()[-365:])","390c2712":"result = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/sample_submission.csv')","4fc2a7f3":"y_temp = []\nfor i in range(365):\n    for j in range(18):\n        y_temp.append(y_pred[i + j * 365])","7124888e":"result['num_sold'] = y_temp","9bfbbd56":"result.to_csv('result.csv', index=False)","be2a672a":"### Explore data"}}