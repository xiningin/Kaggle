{"cell_type":{"31123818":"code","b3dc818b":"code","f9b135ed":"code","ae580903":"code","d9a8fbba":"code","c6763050":"code","7e49548d":"code","ba6065d9":"code","b883f9a3":"code","8d135204":"code","486f60e3":"code","81b9fcf1":"code","6943a30e":"code","d3f3d58e":"markdown","e73237b3":"markdown","a83952bb":"markdown","f6f788f9":"markdown","706b3b43":"markdown"},"source":{"31123818":"import numpy as np\nimport torch\nimport torchvision\nfrom tqdm.auto import tqdm\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom sklearn.metrics import accuracy_score\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport torchvision.transforms as transforms\nimport torchvision.datasets as datasets\nimport os\nfrom IPython.display import clear_output\nimport random\nimport torchvision.models as models","b3dc818b":"# !wget -O data.txt.zip https:\/\/www.dropbox.com\/s\/33l8lp62rmvtx40\/dataset.zip?dl=0\n# !unzip -q data.txt.zip","f9b135ed":"# os.listdir('.\/dataset\/dataset')","ae580903":"os.curdir","d9a8fbba":"def set_random_seed(seed):\n    torch.backends.cudnn.deterministic = True\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed(seed)\n    np.random.seed(seed)\n    random.seed(seed)\n\nset_random_seed(752979)  # \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 seed \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432","c6763050":"transformations_test = transforms.Compose([\n\n    transforms.Resize((64, 64)),                                       \n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n])\n\ntransformations_train = transforms.Compose([\n\n    transforms.Resize((64, 64)),\n    transforms.ColorJitter(brightness=.5, hue=.3),\n    transforms.RandomHorizontalFlip(),\n   # transforms.RandomRotation(degrees=(30, 70)),\n    \n\n\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n])","7e49548d":"train_dataset = datasets.ImageFolder(root=\"..\/input\/dl2-shit\/dataset\/dataset\/train\",\n                                     transform=transformations_train)\nval_dataset = datasets.ImageFolder(\"..\/input\/dl2-shit\/dataset\/dataset\/val\", \n                                   transform=transformations_test)\n# REPLACE .\/dataset\/dataset WITH THE FOLDER WHERE YOU DOWNLOADED AND UNZIPPED THE DATASET\n# OR USE torchvision.datasets.ImageFolder INSTEAD OF MyDataset\n\ntrain_dataloader = torch.utils.data.DataLoader(train_dataset, batch_size=128, shuffle=True)\nval_dataloader =  torch.utils.data.DataLoader(val_dataset, batch_size=128, shuffle=False)","ba6065d9":"# Just very simple sanity checks\nassert isinstance(train_dataset[0], tuple)\nassert len(train_dataset[0]) == 2\nassert isinstance(train_dataset[1][1], int)\nprint(\"tests passed\")","b883f9a3":"from torchvision.models import resnet101 as bd\nmodel = bd(pretrained=True)\n\nfor param in model.parameters():\n    param.requires_grad = False\n\nmodel.fc = nn.Sequential(\n                        nn.Linear(2048, 1024),\nnn.ReLU(),\nnn.Dropout(p=0.2),\n    \n    nn.Linear(1024, 800),\nnn.ReLU(),\nnn.Dropout(p=0.2),\n    \n    nn.Linear(800, 800),\nnn.ReLU(),\nnn.Dropout(p=0.2),\n    nn.Linear(800, 512),\nnn.ReLU(),\nnn.Dropout(p=0.2),\n    nn.Linear(512, 200)\n\n)\n\n\n                        \n\n\nmodel","8d135204":"def train_epoch(\n    model,\n    data_loader,\n    optimizer,\n    criterion,\n    return_losses=False,\n    device=\"cuda:0\",\n):\n    model = model.to(device).train()\n    total_loss = 0\n    num_batches = 0\n    all_losses = []\n    total_predictions = np.array([])#.reshape((0, ))\n    total_labels = np.array([])#.reshape((0, ))\n    with tqdm(total=len(data_loader), file=sys.stdout) as prbar:\n        for images, labels in data_loader:\n            # Move Batch to GPU\n            images = images.to(device)\n            labels = labels.to(device)\n            predicted = model(images)\n            loss = criterion(predicted, labels)\n            # Update weights\n            loss.backward()\n            optimizer.step()\n            optimizer.zero_grad()\n            # Update descirption for tqdm\n            accuracy = (predicted.argmax(1) == labels).float().mean()\n            prbar.set_description(\n                f\"Loss: {round(loss.item(), 4)} \"\n                f\"Accuracy: {round(accuracy.item() * 100, 4)}\"\n            )\n            prbar.update(1)\n            total_loss += loss.item()\n            total_predictions = np.append(total_predictions, predicted.argmax(1).cpu().detach().numpy())\n            total_labels = np.append(total_labels, labels.cpu().detach().numpy())\n            num_batches += 1\n            all_losses.append(loss.detach().item())\n    metrics = {\"loss\": total_loss \/ num_batches}\n    metrics.update({\"accuracy\": (total_predictions == total_labels).mean()})\n    if return_losses:\n        return metrics, all_losses\n    else:\n        return metrics\n\n\ndef validate(model, data_loader, criterion, device=\"cuda:0\"):\n    model = model.eval()\n    total_loss = 0\n    num_batches = 0\n    total_predictions = np.array([])\n    total_labels = np.array([])\n    with tqdm(total=len(data_loader), file=sys.stdout) as prbar:\n        for images, labels in data_loader:\n            images = images.to(device)\n            labels = labels.to(device)\n            predicted = model(images)\n            loss = criterion(predicted, labels)\n            accuracy = (predicted.argmax(1) == labels).float().mean()\n            prbar.set_description(\n                f\"Loss: {round(loss.item(), 4)} \"\n                f\"Accuracy: {round(accuracy.item() * 100, 4)}\"\n            )\n            prbar.update(1)\n            total_loss += loss.item()\n            total_predictions = np.append(total_predictions, predicted.argmax(1).cpu().detach().numpy())\n            total_labels = np.append(total_labels, labels.cpu().detach().numpy())\n            num_batches += 1\n    metrics = {\"loss\": total_loss \/ num_batches}\n    metrics.update({\"accuracy\": (total_predictions == total_labels).mean()})\n    print(f'Now VAL Accuracy = {100 * (total_predictions == total_labels).mean():.1f} %')\n    print('----------------------------------------------------------------------------')\n    return metrics","486f60e3":"def fit(\n    model,\n    epochs,\n    train_data_loader,\n    validation_data_loader,\n    optimizer,\n    criterion,\n    device,\n    scheduler\n):\n    all_train_losses = []\n    epoch_train_losses = []\n    epoch_eval_losses = []\n    for epoch in range(epochs):\n        # Train step\n        print(f\"Train Epoch: {epoch + 1}\")\n        train_metrics, one_epoch_train_losses = train_epoch(\n            model=model,\n            data_loader=train_data_loader,\n            optimizer=optimizer,\n            return_losses=True,\n            criterion=criterion,\n            device=device\n        )\n        # Save Train losses\n        all_train_losses.extend(one_epoch_train_losses)\n        epoch_train_losses.append(train_metrics[\"loss\"])\n        # Eval step\n        print(f\"Validation Epoch: {epoch + 1}\")\n        with torch.no_grad():\n            validation_metrics = validate(\n                model=model,\n                data_loader=validation_data_loader,\n                criterion=criterion\n            )\n        scheduler.step()\n        # Save eval losses\n        epoch_eval_losses.append(validation_metrics[\"loss\"])","81b9fcf1":"criterion = nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.fc.parameters(), (1e-4))\nscheduler = torch.optim.lr_scheduler.StepLR(optimizer, step_size= 6, gamma= 0.5)\ndevice = \"cuda:0\" if torch.cuda.is_available() else \"cpu\"","6943a30e":"import sys\nfit(model, 70, train_dataloader, val_dataloader, optimizer, criterion,  device, scheduler)","d3f3d58e":"# \u0414\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2. \u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.","e73237b3":"### \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","a83952bb":"\u0412 \u044d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439. \u0411\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u043c, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u043c. \u041c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0435\u0441\u0442\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435. \u0412 \u043d\u0451\u043c 200 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u043e\u043a\u043e\u043b\u043e 5 \u0442\u044b\u0441\u044f\u0447 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043a\u043b\u0430\u0441\u0441. \u041a\u043b\u0430\u0441\u0441\u044b \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u044b, \u043a\u0430\u043a \u043d\u0435\u0442\u0440\u0443\u0434\u043d\u043e \u0434\u043e\u0433\u0430\u0434\u0430\u0442\u044c\u0441\u044f, \u043e\u0442 0 \u0434\u043e 199. \u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0442 [\u0442\u0443\u0442](https:\/\/yadi.sk\/d\/BNR41Vu3y0c7qA).\n\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f -- \u0435\u0441\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 train\/ \u0438 val\/, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043b\u0435\u0436\u0430\u0442 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0435 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0412 train\/ \u0438 val\/ \u043b\u0435\u0436\u0430\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438\u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043b\u0435\u0436\u0430\u0442, \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0441\u0430\u043c\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n \n__\u0417\u0430\u0434\u0430\u043d\u0438\u0435__. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u0438\u0437 \u0434\u0432\u0443\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439\n\n1) \u0414\u043e\u0431\u0435\u0439\u0442\u0435\u0441\u044c accuracy **\u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 0.44**. \u0412 \u044d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 **\u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e** \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u0440\u0435\u0441\u0430\u0439\u0437\u043e\u043c \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a. \n\n2) \u0414\u043e\u0431\u0435\u0439\u0442\u0435\u0441\u044c accuracy **\u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 0.84**. \u0412 \u044d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0435\u0441\u0430\u0439\u0437 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0442\u0440\u0435\u0439\u043d \u043c\u043e\u0436\u043d\u043e. \n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u0440\u0430\u0442\u043a\u0438\u0439 \u043e\u0442\u0447\u0451\u0442 \u043e \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0445 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u0445. \u0427\u0442\u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e \u0438 \u0447\u0442\u043e \u043d\u0435 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e? \u041f\u043e\u0447\u0435\u043c\u0443 \u0432\u044b \u0440\u0435\u0448\u0438\u043b\u0438, \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u0430\u043a, \u0430 \u043d\u0435 \u0438\u043d\u0430\u0447\u0435? \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0447\u0443\u0436\u043e\u0439 \u043a\u043e\u0434, \u0435\u0441\u043b\u0438 \u0432\u044b \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0441\u044b\u043b\u0430\u0439\u0442\u0435\u0441\u044c \u043d\u0430 \u0441\u0442\u0430\u0442\u044c\u0438 \/ \u0431\u043b\u043e\u0433\u043f\u043e\u0441\u0442\u044b \/ \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043d\u0430 stackoverflow \/ \u0432\u0438\u0434\u043e\u0441\u044b \u043e\u0442 \u044e\u0442\u0443\u0431\u0435\u0440\u043e\u0432-\u043c\u0430\u0448\u0438\u043d\u043b\u0435\u0440\u043d\u0435\u0440\u043e\u0432 \/ \u043a\u0443\u0440\u0441\u044b \/ \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u043e\u0442 \u0414\u044f\u0434\u0438 \u0412\u0430\u0441\u0438 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0435\u0441\u043b\u0438 \u0432\u044b \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435. \n\n\u0412\u0430\u0448 \u043a\u043e\u0434 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u0435 `assert`'\u044b \u043d\u0438\u0436\u0435.\n\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `train_one_epoch`, `train` \u0438 `predict` \u043f\u043e \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u043c \u043d\u0438\u0436\u0435 (\u0432\u043e \u043c\u043d\u043e\u0433\u043e\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0441 \u0441\u0435\u043c\u0438\u043d\u0430\u0440\u043e\u0432).\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u043e\u0441\u043e\u0431\u043e\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e `predict`: \u043e\u043d\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043b\u043e\u0441\u0441\u043e\u0432 \u043f\u043e \u0432\u0441\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u0434\u0430\u0442\u0430\u043b\u043e\u0430\u0434\u0435\u0440\u0430, \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u0437 \u0434\u0430\u0442\u0430\u043b\u043e\u0430\u043b\u0435\u0440\u0430 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0434\u0430\u0442\u0430\u043b\u043e\u0430\u0434\u0435\u0440\u0435 (\u0438 \u0438\u043c\u0435\u043d\u043d\u043e \u0432 \u0442\u0430\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435).\n\n__\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0432 \u043e\u0431\u043e\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u0445. \u0422\u0430\u043a\u0436\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u043e\u0431\u0443\u0447\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435__.\n\n\n__\u041a\u0440\u0438\u0442\u0435\u0440\u0438\u0438 \u043e\u0446\u0435\u043d\u043a\u0438__: \u041e\u0446\u0435\u043d\u043a\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0444\u043e\u0440\u043c\u0443\u043b\u0435: `min(10, 10 * \u0412\u0430\u0448\u0430 accuracy \/ 0.44)` \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0438 `min(10, 10 * (\u0412\u0430\u0448\u0430 accuracy - 0.5) \/ 0.34)` \u0434\u043b\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e. \u041e\u0446\u0435\u043d\u043a\u0430 \u043e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e \u0434\u0435\u0441\u044f\u0442\u044b\u0445 \u043f\u043e \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c. \u0415\u0441\u043b\u0438 \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u043e\u0431\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0442\u043e \u0431\u0435\u0440\u0435\u0442\u0441\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0438\u0437 \u0434\u0432\u0443\u0445 \u043e\u0446\u0435\u043d\u043e\u043a.\n\n__\u0411\u043e\u043d\u0443\u0441__. \u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 5 \u0431\u043e\u043d\u0443\u0441\u043d\u044b\u0445 \u0431\u0430\u043b\u043b\u043e\u0432 \u0435\u0441\u043b\u0438 \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435\u0441\u044c \u0441 \u043e\u0431\u043e\u0438\u043c\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u043c\u0438 \u043d\u0430 10 \u0431\u0430\u043b\u043b\u043e\u0432 (\u0438\u0442\u043e\u0433\u043e 15 \u0431\u0430\u043b\u043b\u043e\u0432). \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u0437 \u0434\u0432\u0443\u0445 \u043e\u0446\u0435\u043d\u043e\u043a \u0438 \u0432\u0430\u0448 \u0431\u043e\u043d\u0443\u0441 \u0440\u0430\u0432\u0435\u043d \u043d\u0443\u043b\u044e.\n\n__\u0421\u043e\u0432\u0435\u0442\u044b \u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f__:\n - \u041d\u0430\u0432\u0435\u0440\u043d\u044f\u043a\u0430 \u0432\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e \u0433\u0443\u0433\u043b\u0438\u0442\u044c \u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0451 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u042d\u0442\u043e \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u0432\u0441\u0435 \u0433\u0443\u0433\u043b\u044f\u0442. \u041d\u043e \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0433\u043e\u0442\u043e\u0432\u044b\u043c \u0437\u0430 \u0441\u043a\u0430\u0442\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u043e\u0442\u0432\u0435\u0447\u0430\u0442\u044c :)\n - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0430\u0443\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043c\u043e\u0434\u0443\u043b\u0435\u043c `torchvision.transforms` \u0438\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 [albumentations](https:\/\/github.com\/albumentations-team\/albumentations)\n - \u041c\u043e\u0436\u043d\u043e \u043e\u0431\u0443\u0447\u0430\u0442\u044c \u0441 \u043d\u0443\u043b\u044f \u0438\u043b\u0438 \u0444\u0430\u0439\u043d\u0442\u044e\u043d\u0438\u0442\u044c (\u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f) \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 `torchvision`.\n - \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432\u0430\u043c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043a\u043b\u0430\u0441\u0441-\u0434\u0430\u0442\u0430\u0441\u0435\u0442 (\u0438\u043b\u0438 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u043e\u043c `ImageFolder`), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u043a\u043b\u0430\u0441\u0441\u044b, \u0430 \u0437\u0430\u0442\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u043d\u0430 \u043f\u043e \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u043c \u043d\u0438\u0436\u0435. \u041e\u0434\u043d\u0430\u043a\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u043c\u044b \u043d\u0435 \u0437\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u0442\u0430\u043a \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e, \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u0432 \u0443\u0434\u043e\u0431\u043d\u043e\u043c \u0441\u0442\u0438\u043b\u0435. \u041e\u0434\u043d\u0430\u043a\u043e \u0443\u0447\u0442\u0438\u0442\u0435, \u0447\u0442\u043e \u0447\u0440\u0435\u0437\u043c\u0435\u0440\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043d\u0438\u0436\u0435\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0432\u0430\u0448\u0435\u043c\u0443 \u043a\u043e\u0434\u0443 \u0438 \u043f\u043e\u0432\u044b\u0441\u0438\u0442 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0437\u043e\u0432\u0430 \u043d\u0430 \u0437\u0430\u0449\u0438\u0442\u0443 :)\n - \u0412\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0439\u0442\u0435. \u0422\u0440\u0435\u043a\u0430\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u043d\u044c\u0448\u0435, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0442\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u0432\u043f\u0443\u0441\u0442\u0443\u044e.\n - \u0427\u0442\u043e\u0431\u044b \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u0442\u043b\u0430\u0434\u0438\u0442\u044c \u043a\u043e\u0434, \u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043e\u0431\u0443\u0447\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (\u0441\u043a\u0430\u0436\u0435\u043c, 5-10 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043f\u0440\u043e\u0441\u0442\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f \u0447\u0442\u043e \u043a\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f). \u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u043f\u043e\u043d\u044f\u043b\u0438, \u0447\u0442\u043e \u0441\u043c\u043e\u0433\u043b\u0438 \u0432\u0441\u0451 \u043e\u0442\u0434\u0435\u0431\u0430\u0436\u0438\u0442\u044c, \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443\n - \u041d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432 \u043c\u043e\u0434\u0435\u043b\u0438\/\u0430\u0443\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438\/\u043e\u043f\u0442\u0438\u043c\u0430\u0439\u0437\u0435\u0440\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0438 \u043a\u0430\u043a \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n - \u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0439\u0442\u0435 random seed.\n - \u041d\u0430\u0447\u0438\u043d\u0430\u0439\u0442\u0435 \u0441 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438 \u043f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u043a \u0441\u043b\u043e\u0436\u043d\u044b\u043c. \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043b\u0451\u0433\u043a\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n - \u0421\u0442\u0430\u0432\u044c\u0442\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 learning rate. \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0439\u0442\u0435 \u0435\u0433\u043e, \u043a\u043e\u0433\u0434\u0430 \u043b\u043e\u0441\u0441 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0451\u0442 \u0443\u0431\u044b\u0432\u0430\u0442\u044c.\n - \u0421\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c GPU. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0433\u043e \u043d\u0435\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 google colab. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0439 \u043e\u0441\u043d\u043e\u0432\u0435, \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0438 \u043e\u0442\u043b\u0430\u0434\u044c\u0442\u0435 \u0432\u0435\u0441\u044c \u043a\u043e\u0434 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u043d\u0430 CPU, \u0430 \u0437\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0443\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043d\u043e\u0443\u0442\u0431\u0443\u043a \u0432 \u043a\u043e\u043b\u0430\u0431\u0435. \u0410\u0432\u0442\u043e\u0440\u0441\u043a\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u0442 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0432 \u043a\u043e\u043b\u0430\u0431\u0435 \u0437\u0430 15 \u043c\u0438\u043d\u0443\u0442 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.\n \nGood luck & have fun! :)","f6f788f9":"change LR initial on 0.001 (4 ep - 27,5) -- Bad idea\n","706b3b43":"# \u0418\u0422\u041e\u0413\n\u041f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0434\u0435\u0440\u044c\u043c\u043e. \u042f \u043d\u0435 \u0441\u043c\u043e\u0433 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e. \u042f \u043d\u0435 \u0437\u043d\u0430\u044e, \u0447\u0442\u043e \u043c\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0443\u043b\u0443\u0448\u0447\u0438\u0442\u044c \u0438 \u043a\u0430\u043a \u0434\u043e\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u043e \u0434\u0435\u043b\u043e \u0434\u043e \u0443\u043c\u0430. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043c\u043e\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e - 45%. \u0423 \u043c\u0435\u043d\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0436\u0435 \u043d\u0435\u0442 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u044c. \u0412\u0441\u0435 \u0433\u043e\u0432\u043d\u043e. \u042f \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b 5 \u0440\u0430\u0437\u043d\u044b\u0445 \u0430\u0443\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0439, 3 \u0440\u0430\u0437\u043d\u044b\u0445 scheduler. \u0425\u0437 \u0447\u0442\u043e \u043a \u0447\u0435\u043c\u0443, \u0432\u0441\u0435\u043c \u043f\u043e\u043a\u0430"}}