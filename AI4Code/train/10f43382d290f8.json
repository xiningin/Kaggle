{"cell_type":{"807edab0":"code","da0a15dc":"code","f3e1defb":"code","7dd33c74":"code","b5fa9723":"code","fb1d5bbb":"code","d2cae04a":"code","708aaa76":"code","8a4d8e82":"code","7375d21b":"code","1f0f9a5d":"code","a2fb8bed":"code","22cdfb5b":"code","7e648fe2":"code","cc1c4f36":"code","28edb577":"code","982c3784":"code","9e1edf4b":"code","8f4b39c2":"code","8d979423":"code","062acbfa":"code","f371b4cb":"markdown","4cd4cdb3":"markdown","8c403cde":"markdown","a1e936e4":"markdown","ffed5f6a":"markdown","a134c69d":"markdown","b6457727":"markdown","5771b90a":"markdown"},"source":{"807edab0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da0a15dc":"from datetime import datetime\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n\nimport numpy as np\nimport pandas as pd\n#import sklearn\nimport seaborn as sns\n","f3e1defb":"%pip install meteostat","7dd33c74":"from meteostat import Point, Daily","b5fa9723":"# Set time period\nstart = datetime(1970, 1, 1)\nend = datetime(2021, 12, 31)\n\n# Create Point for Melle, Germany\nlocation = Point(52.1038, 8.1808)\n#location = Point(52.2033222, 8.3372664, 70)\n\n# Get daily data for 1970 - 2021\ndf = Daily(location, start, end)\ndf = df.fetch()","fb1d5bbb":"df.head()","d2cae04a":"print(df.isnull().sum())\ndf = df.drop(['snow','wdir','wspd','wpgt','pres','tsun'], axis=1)","708aaa76":"df = df.dropna()\nprint(df.isna().sum())\ncorr = df.corr()\nsns.heatmap(corr, cmap=\"Blues\", annot=True)","8a4d8e82":"def getDataFrame( freq='m', type='mean'):\n    if (type == 'max'):\n        data = df.resample(freq).max()\n    if (type == 'mean'):\n        data = df.resample(freq).mean()\n    data['time'] = data.index\n    data['Month'] = data['time'].dt.strftime('%b')\n    data['Year'] = data['time'].dt.strftime('%Y')\n    data = data.drop(['time'], axis=1)\n    return data","7375d21b":"def getRainingDays():\n    data = pd.DataFrame(columns=['year','rain days'])\n    for n in range(52): \n        dd = df[(df.index.year == int(years[n])) & (df['prcp'] > 0)].prcp.count()\n        data.loc[n] = np.array([int(years[n]),dd])\n    return data","1f0f9a5d":"df_month = getDataFrame(type='mean')\nyears = df_month['Year'].unique()  \n\ndf_month","a2fb8bed":"plt.subplots(figsize=(25, 4))\nsns.lineplot(data=df_month, palette='tab10')\nplt.title('Klima')\nplt.show()","22cdfb5b":"df_month['Year'] =  df_month['Year'].astype(int)","7e648fe2":"raining_days = getRainingDays()    # get the raing days","cc1c4f36":"sns.set_theme(style=\"darkgrid\")\nplt.subplots(figsize=(20, 4))\nax = sns.lineplot(x='year',y='rain days',data=raining_days)\nax.axhline(raining_days['rain days'].max(), label='Maximum '+ str(round(raining_days['rain days'].max()))+' days' , color='lightgreen')\nax.axhline(raining_days['rain days'].mean(), label='Average '+ str(round(raining_days['rain days'].mean()))+' days' , color='darkgreen')\nax.axhline(raining_days['rain days'].min(), label='Minimum '+ str(round(raining_days['rain days'].min()))+' days' , color='green')\nplt.legend()\nplt.title('Raining days')\nplt.show()","28edb577":"df_resample = df['prcp'].resample('y').mean()\ndf_mean = df_resample.mean()\nplt.subplots(figsize=(20, 4))\nax=sns.lineplot(data=df_resample)\nax.axhline(df_mean, label='Average Rain')\n\nplt.legend()\nplt.title('Rain')\nplt.show()\nplt.subplots(figsize=(20, 4))\ndf_resample = df['prcp'].resample('y').sum()\ndf_mean = df_resample.mean()\nax=sns.lineplot(data=df_resample, color='orange')\nax.axhline(df_mean, label='Rain in mm', color='orange')\n\nplt.legend()\nplt.title('Rain')\nplt.show()","982c3784":"df_resample = df['tavg'].resample('y').mean()\ndf_mean = df_resample.mean()\nplt.subplots(figsize=(25, 8))\nax=sns.lineplot(data=df_resample)\nax.axhline(df_mean, label='Average Temp')\n\ndf_resample = df['tmax'].resample('y').mean()\ndf_mean = df_resample.mean()\nax=sns.lineplot(data=df_resample)\nax.axhline(df_mean, label='Average Max Temp', color='orange')\n\ndf_resample = df['tmin'].resample('y').mean()\ndf_mean = df_resample.mean()\nax=sns.lineplot(data=df_resample)\nax.axhline(df_mean, label='Average Min Temp', color='green')\nplt.legend()\nplt.title('Temp')\nplt.show()","9e1edf4b":"dd1 = df_month.query('Year >= 1970' and 'Year <= 1980').tavg.mean()\ndd2 = df_month.query('Year >= 1980' and 'Year <= 1990').tavg.mean()\ndd3 = df_month.query('Year >= 1990' and 'Year <= 2000').tavg.mean()\ndd4 = df_month.query('Year >= 2000' and 'Year <= 2010').tavg.mean()\ndd5 = df_month.query('Year >= 2010' and 'Year <= 2020').tavg.mean()\nprint('From 1970 to 2020 is a temperatur increase from:', round(dd5-dd1,2), '\u00b0C', 'from', round(dd1,2), 'to', round(dd5,2), 'degrees')","8f4b39c2":"plt.subplots(figsize=(20, 8))\nsns.regplot(x=\"Year\", y=\"tavg\", data=df_month)\nplt.title('Increase of average Temp')\nplt.show()","8d979423":"sns.lmplot(x=\"Year\", y=\"tavg\", col=\"Month\", data=df_month,\n           col_wrap=6, height=3);\nsns.lmplot(x=\"Year\", y=\"tmax\", col=\"Month\", data=df_month,\n           col_wrap=6, height=3);","062acbfa":"plt.subplots(figsize=(25, 6))\nax = sns.violinplot(x=\"Month\", y=\"tmin\", data=df_month, inner=None)\nax = sns.swarmplot(x=\"Month\", y=\"tmin\", data=df_month,\n                   color=\"white\", edgecolor=\"gray\")\nax = sns.violinplot(x=\"Month\", y=\"tmax\", data=df_month, inner=None)\nax = sns.swarmplot(x=\"Month\", y=\"tmax\", data=df_month,\n                   color=\"white\", edgecolor=\"gray\")\nplt.title('Minimum\/Maximum Temperatur')\nplt.show()","f371b4cb":"# Get the weather data\n* Bad Rothenfelde - Germany\n* Period 1970 - 2021","4cd4cdb3":"# Data preparing","8c403cde":"plt.subplots(figsize=(8, 8))\nexplode = (0, 0, 0, 0,0.1)\ntotal = dl['Avg Temp'].sum()\nplt.pie(data=dl, x='Avg Temp', labels=dl['Period'], explode=explode, shadow=True, startangle=90, autopct=lambda p: '+ {:.2f}\u00b0C'.format(p * total \/ 100))\nplt.show()","a1e936e4":"from statsmodels import robust\ndl[['Avg Temp']].apply(robust.mad)\n\n#MAD berechnen\n#robust.mad(data)","ffed5f6a":"## Create the datasets\n1. df_month","a134c69d":"## Rain","b6457727":"dl = pd.DataFrame({\"Avg Temp\" :[dd1-9,dd2-9,dd3-9,dd4-9,dd5-9],\n                     \"Period\" : [\"1970-1980\", \"1980-1990\", \"1990-2000\", \"2000-2010\", \"2010-2020\" ],\n                      \"pp\": [1,2,3,4,5]})","5771b90a":"## Temp"}}