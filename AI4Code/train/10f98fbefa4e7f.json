{"cell_type":{"0b0bcd2b":"code","3db56ab3":"code","cf1b8c6d":"code","1482390d":"code","561540c9":"code","04787885":"code","52cae202":"code","f53c9eba":"code","0f79e54a":"code","43465956":"code","20918ca9":"code","376f8e3f":"code","1926e69f":"code","96bb8add":"code","7bb1660e":"code","d2b09afc":"code","4eb75a1a":"code","d3ef9147":"code","a4f33b76":"code","0cc37bb5":"code","27ab172b":"code","d4538446":"code","ee10e0e5":"code","1182aa47":"code","4438db1e":"code","9c49849e":"code","099da411":"code","820c1f34":"code","541ad21b":"code","6b0ef1fd":"code","7e4f1123":"code","f5525df1":"code","a1599ee9":"code","306a420d":"code","9499a527":"code","27cb91b4":"code","0b131f50":"code","7fd1e0c8":"code","5bd5a4b5":"code","1ceb7ceb":"code","fb9ca852":"code","9eab1c4f":"code","71c02914":"code","64226cda":"code","db3238e9":"code","fe2f6456":"code","bbed6661":"code","7b695bb5":"code","86a670fc":"code","cc83b539":"code","5444c718":"code","bb733e8b":"code","e7e88ea9":"code","b0096b79":"code","92dd78ac":"code","12ef5270":"code","d163a0e3":"code","4d2b5863":"code","7ba26144":"code","6a2b1c03":"code","72e64ae9":"code","3a5cd554":"code","947b08f6":"code","a9404723":"code","7252fae7":"code","6a2d779b":"code","fdc9b792":"code","f681ad78":"code","3cfa0fc6":"code","727a459f":"code","e182118e":"code","21351d1e":"code","95a14912":"code","0441902c":"code","953afb7c":"code","2b6af4d9":"code","88a76a4e":"code","d4eda468":"code","43c9bc9d":"code","3fff70c7":"code","1f209293":"code","1c0a65a6":"code","ed740858":"code","d53f7e92":"code","855ee66b":"code","4fcd1492":"code","5dd1506d":"markdown","bcaff3b4":"markdown","492bcd93":"markdown","821424a8":"markdown","0ebf0abf":"markdown","43177604":"markdown","1c145ba6":"markdown","ff98ee91":"markdown","8214c91b":"markdown","da2c41f9":"markdown","2057788a":"markdown","5afe547d":"markdown","b737a45d":"markdown","4d7ad746":"markdown","4aad820d":"markdown","5d72e32c":"markdown","adeceec6":"markdown","4eb00c47":"markdown","cac3fffc":"markdown","369a9822":"markdown","c04516c0":"markdown","fd0d93a7":"markdown","fd793ecc":"markdown","8cc61ede":"markdown","e1e5f6b5":"markdown","5ea69543":"markdown","133e55bd":"markdown","02a39b93":"markdown","08712658":"markdown","174a59e4":"markdown","a315c570":"markdown","350becb0":"markdown","630c1874":"markdown","37327977":"markdown","2ab1b4f1":"markdown","28d6ead2":"markdown","5ab173b1":"markdown","3392e859":"markdown","a8527a63":"markdown","a83d725f":"markdown","2b94b4df":"markdown","763c2e64":"markdown","bb7e0b89":"markdown","9a8c4f1e":"markdown","c50285cc":"markdown","6001d9f9":"markdown","46f02bff":"markdown","2f7de0c6":"markdown","9c738b0b":"markdown","943a383c":"markdown","b0521633":"markdown"},"source":{"0b0bcd2b":"import pandas as pd\nfrom IPython.display import display_html \n","3db56ab3":"df = pd.read_csv('\/kaggle\/input\/google-analytics-api-ecommerce-data\/GA_API_Ecommerce_Data_RAW.csv',index_col=0)","cf1b8c6d":"# looking for data formats and null values \n\ndf.info()","1482390d":"df.head()","561540c9":"## Creating new columns using on 'ga:dateHour'\n\ndf['ga:dateHour'] = pd.to_datetime(df['ga:dateHour'],format='%Y%m%d%H',errors='coerce')\ndf['ga:day'] = [d.day for d in df['ga:dateHour']]\ndf['ga:hour'] = [d.hour for d in df['ga:dateHour']]","04787885":"## Changing Sessiondurationbucket to 'MinutesessionDuration'\n\ndf['minutesessionDuration'] = df['ga:sessionDurationBucket']\/\/60","52cae202":"df['ga:sourceMedium'].value_counts()","f53c9eba":"# Source Medium split \ndf['source'] = df['ga:sourceMedium'].str.split(' \/ ').str[0]","0f79e54a":"df['source'].value_counts()","43465956":"# medium lists\norganic=['google \/ organic',\n 'ecosia.org \/ organic',\n 'yahoo \/ organic',\n 'bing \/ organic',\n 'duckduckgo \/ organic',\n 'google.com \/ referral',\n 'google.com.br \/ referral',\n 'accounts.google.com.br \/ referral']\n \npaidsearch=['google \/ cpc',\n     'cpc \/ GoogleAds',\n     'ads.google.com \/ referral']\n \nsocial=['Instagram \/ Bio',\n     'instagram.com \/ referral',\n     'm.facebook.com \/ referral',\n     'l.instagram.com \/ referral',\n     'IGShopping \/ Social',\n     'facebook.com \/ referral',\n     'youtube.com \/ referral',\n     'l.facebook.com \/ referral',\n     'm.youtube.com \/ referral',\n     'influenciador \/ youtube',\n     'lm.facebook.com \/ referral',\n     'faceads \/ linkpatrocinado1'\n     'faceads \/ stories',\n     'faceads \/ lp',\n     'pinterest.com \/ referral',\n     'mobile.facebook.com \/ referral',\n     'web.facebook.com \/ referral',\n     'faceads \/ stories',\n     'faceads \/ linkpatrocinado1']\n \ndirect=['(direct) \/ (none)']     \n\nothers=['t.co \/ referral',\n    'blog \/ postblog',\n    'outlook.live.com \/ referral',      \n    'br.search.yahoo.com \/ referral',\n    'blog \/ post',\n    'adwords.corp.google.com \/ referral',\n    'accounts.google.com \/ referral',     \n    'mail.google.com \/ referral',  \n    'ebit.com.br \/ referral',\n    'googleweblight.com \/ referral',\n    'qpl-search.com \/ referral',\n    'qo-br.com \/ referral',\n    'g.results.supply \/ referral',\n    'mail1.uol.com.br \/ referral',\n    'baidu.com \/ referral',\n    'br-nav.com \/ referral',     \n    'org-search.com \/ referral',\n    'sts-sec.lhoist.com \/ referral',\n    'bmail1.uol.com.br \/ referral'\n        ]\n\n","20918ca9":"# loc the mediums\n\ndf.loc[df['ga:sourceMedium'].isin(organic),'medium']='Organic'\ndf.loc[df['ga:sourceMedium'].isin(paidsearch),'medium']='Paid Search'\ndf.loc[df['ga:sourceMedium'].isin(direct),'medium']='Direct'\ndf.loc[df['ga:sourceMedium'].isin(social),'medium']='Social'\ndf.loc[df['ga:sourceMedium'].isin(others),'medium']='Others'","376f8e3f":"df['medium'].value_counts()","1926e69f":"# sources lists\n\n# Social\ninstagram=['Instagram',\n        'l.instagram.com',\n       'instagram.com',\n       'IGShopping']\n\nfacebook=['m.facebook.com',\n          'facebook.com',\n          'l.facebook.com',\n          'web.facebook.com',\n          'lm.facebook.com',\n          'faceads',\n          'mobile.facebook.com']\n\nyoutube=['youtube.com',\n         'm.youtube.com',\n         'influenciador']\n\npinterest=['pinterest.com']\n\n# Paidsearch\ngoogleAds = ['google',\n'ads.google.com',\n'cpc' ]\n\n#organic\ngoogle=['google.com',\n        'accounts.google.com.br',\n        'google.com.br']","96bb8add":"# loc sources\n\ndf.loc[(df['medium']=='Social')&(df['source'].isin(instagram)),'source']='instagram'\ndf.loc[(df['medium']=='Social')&(df['source'].isin(facebook)),'source']='facebook'\ndf.loc[(df['medium']=='Social')&(df['source'].isin(youtube)),'source']='youtube'\ndf.loc[(df['medium']=='Social')&(df['source'].isin(pinterest)),'source']='pinterest'\ndf.loc[(df['medium']=='Paid Search')&(df['source'].isin(googleAds)),'source']='google ads'\ndf.loc[(df['medium']=='Organic ')&(df['source'].isin(google)),'source']='google'\n","7bb1660e":"df['source'].value_counts()","d2b09afc":"df.columns","4eb75a1a":"cols=['ga:transactions',\n 'source',\n 'medium',\n 'ga:transactionRevenue',\n 'ga:itemQuantity',\n 'minutesessionDuration',\n 'ga:pageDepth',\n 'ga:hits',\n 'ga:daysSinceLastSession',\n 'ga:operatingSystem',\n 'ga:region',\n 'ga:userType',\n 'ga:day',\n 'ga:hour',\n ]\ndf = df[cols]","d3ef9147":"df.tail()","a4f33b76":"# Getting descriptive infos\n\ndf.describe()","0cc37bb5":"# Percentage of Bounce Rate\n\npd.DataFrame(df['minutesessionDuration'].value_counts(normalize=True).head())","27ab172b":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go","d4538446":"fig = make_subplots(rows=1, cols=3)\n\nfig.add_trace(go.Box(y = df['minutesessionDuration'],name='Minute Session Duration', marker_color='#AE91C7'),row=1,col=1)\nfig.add_trace(go.Box(y = df['ga:pageDepth'],name='Page Depth', marker_color='#FA9DEB'),row=1,col=2)\nfig.add_trace(go.Box(y = df['ga:hits'],name='Hits',marker_color='#612057'),row=1,col=3)\n\n\n#FFED9D\nfig.show()\n\n","ee10e0e5":"def Iqr(df):\n    Q1 = df.quantile(0.25)\n    Q3 = df.quantile(0.75)\n    IQR = Q3 - Q1\n    return IQR,Q3","1182aa47":"def Sales_Central_Tendency(df):\n    \n    #DF total sales\n    \n    sales = df[df['ga:transactionRevenue']!=0]\n    \n    #Creating the table\n    \n    total_sales = {' ': ['ga:itemQuantity',\n                      'ga:transactions', \n                      'ga:transactionRevenue'\n                     ],\n                'Mean': [sales['ga:itemQuantity'].mean(), \n                         sales['ga:transactions'].mean(), \n                         '%.2f' %sales['ga:transactionRevenue'].mean()\n                         ],\n              'Median': [sales['ga:itemQuantity'].median(), \n                          sales['ga:transactions'].median(),       \n                          sales['ga:transactionRevenue'].median()\n                         ],\n                'Mode': [sales['ga:itemQuantity'].mode()[0], \n                         sales['ga:transactions'].mode()[0],       \n                         sales['ga:transactionRevenue'].mode()[0]\n                         ],\n               'Total': [sales['ga:itemQuantity'].sum(), \n                          sales['ga:transactions'].sum(),        \n                        '%.2f' % sales['ga:transactionRevenue'].sum()\n                         ]\n                    }\n     \n    total_sales = pd.DataFrame(total_sales, columns = [' ','Mean','Median','Mode','Total']).set_index(' ')\n    \n    \n    return total_sales","4438db1e":"# Sales central tendency with outliers\n\nSales_Central_Tendency(df)","9c49849e":"def Conversion_Rate(df):\n    print(len(df),'Sessions in this period')\n    print('Non-transactions', round(df['ga:transactions'].value_counts()[0]\/len(df) * 100,2), '% ')\n    print('Transactions', round(df['ga:transactions'].value_counts()[1]\/len(df) * 100,2), '% ')","099da411":"Conversion_Rate(df)","820c1f34":"def Feature_Reduction(df):\n        \n    drop_elements=['ga:itemQuantity','ga:transactionRevenue'] \n    df = df.drop(drop_elements, axis = 1)\n\n        # Top 10 Regions\n\n    all_states = pd.DataFrame(df['ga:region'].value_counts())\n    states = all_states.head(10)\n\n        #Other states\n    all_others_states = all_states[~all_states['ga:region'].isin(list(states['ga:region']))].reset_index()\n    others_states = pd.DataFrame(all_others_states['index'])\n        #Changing other regions per '(Others)'\n    df.loc[df['ga:region'].isin(others_states['index']),'ga:region']='(Others)'\n\n\n        #Top 5 operatingSystem \n\n    all_operatingSystem = pd.DataFrame(df['ga:operatingSystem'].value_counts())\n    operatingSystem = all_operatingSystem.head()\n\n        #Other operatingSystem \n    all_others_operatingSystem = all_operatingSystem[~all_operatingSystem['ga:operatingSystem'].isin(list(operatingSystem['ga:operatingSystem']))]\n    others_operatingSystem = list(all_others_operatingSystem['ga:operatingSystem'])\n        #Changing other operatingSystem per '(Others)'\n    df.loc[df['ga:operatingSystem'].isin(others_operatingSystem),'ga:operatingSystem']='(Others)'\n\n\n    df=df.reset_index(drop=True)\n\n    return df","541ad21b":"def Buyer_Profile(df):\n    \n        # Transaction = 1\n        \n    sales = df[df['ga:transactions']!=0]\n    sales = Feature_Reduction(sales)\n    \n        # Checking if there is more than 1 channel Groupping in the DF\n    \n    if len(sales['medium'].value_counts()) > 1:\n        sales = sales[['ga:transactions','ga:operatingSystem','ga:region','source','medium']]\n    elif len(sales['source'].value_counts()) == 1:\n        sales = sales[['ga:transactions','ga:operatingSystem','ga:region']]\n    else:\n        sales = sales[['ga:transactions','ga:operatingSystem','ga:region','source']]\n    \n        # Prepareing the df to plot the categorical variables of the buyers\n    \n    catdf = sales.columns[1::]\n    cols = len(catdf)\n    \n    fig = make_subplots(rows=1, cols=cols)\n    \n    for count,i in enumerate(catdf):\n        teste_op = pd.DataFrame(sales[['ga:transactions',i]][i].value_counts(normalize=False))    \n        fig.add_trace(go.Bar(x = teste_op.index,y=teste_op[i], marker_color='#AE91C7',name=' '),row=1,col=count+1)\n        \n    \n    fig.update_layout(showlegend=False)\n    fig.update_yaxes(title_text=\"Transactions probability density\", row=1, col=1)\n\n    \n    return fig.show()\n\n\n","6b0ef1fd":"Buyer_Profile(df)","7e4f1123":"import plotly.express as px\nimport plotly.figure_factory as ff","f5525df1":"def Behavior_Dist(df):  \n    \n    df=df.rename(columns={'minutesessionDuration':'minutesession duration',\n                         'ga:pageDepth':'page depth',\n                         'ga:hits':'hits',\n                         'ga:transactions':'transactions'})\n    \n    #spliting the data\n    sales = df[df['transactions']!=0]\n    non_sales = df[df['transactions']==0]\n    \n    behavior=['minutesession duration','page depth','hits']\n    \n    sales = sales[behavior]\n    non_sales = non_sales[behavior]\n    \n    \n    #Calculing the Interquantilerange\n        \n    for count,i in enumerate(behavior):\n        Q1 = sales[behavior[count]].quantile(0.25)\n        Q3 = sales[behavior[count]].quantile(0.75)\n        IQR = Q3 - Q1\n        #Apling the 1.5 rule for higer out liers\n        sales = sales[~(sales[behavior[count]] > (Q3 + 1.5 * IQR))]\n    \n    sales = sales[sales['minutesession duration']>0]   \n    \n    for count,i in enumerate(behavior):\n        Q1 = non_sales[behavior[count]].quantile(0.25)\n        Q3 = non_sales[behavior[count]].quantile(0.75)\n        IQR = Q3 - Q1\n        #Apling the 1.5 rule for higer out liers\n        non_sales = non_sales[~(non_sales[behavior[count]] > (Q3 + 1.5 * IQR))]\n                \n    non_sales = non_sales[non_sales['minutesession duration'] > 0]   \n    \n    \n    non_sales = non_sales.add_prefix(\"non_sale \")\n    sales = sales.add_prefix(\"sale \")\n\n    # For loop to plot the distribution both dfs\n    \n    l = sales.columns.values\n\n    nrows = 2\n    ncols = int(len(l))\n\n    lst = []\n    lst2 = []\n    columns = [' ','Mean','Median','Mode','IQR','12.5th middle','87.5th middle']\n    \n    fig = make_subplots(rows = nrows,\n                        cols = ncols)\n\n    for count,i in enumerate(sales):\n        \n        fig2 = ff.create_distplot([sales[i]],[i], show_rug=False)\n\n        fig.add_trace(go.Histogram(fig2['data'][0],\n                                   marker_color='#AE91C7',\n                                   hovertemplate=\"<br>\".join([ i.title()+\": %{x}\",\n                                                       \"Density: %{y}\"]),\n                                   name=' '),1,count+1)\n        \n        fig.add_trace(go.Scatter(fig2['data'][1],\n                                 marker_color='#352061',\n                                 hovertemplate=\"<br>\".join([ i.title()+\": %{x}\",\n                                                     \"Density: %{y}\"]),\n                                 name=' '),1,count+1)\n\n        fig2 = ff.create_distplot([non_sales[\"non_\"+i]], [\"non_\"+i], show_rug=False)\n\n        fig.add_trace(go.Histogram(fig2['data'][0],\n                                   marker_color='#FFED9D',\n                                   hovertemplate=\"<br>\".join([\"Non \"+i.title()+\": %{x}\",\n                                                       \"Density: %{y}\"]),\n                                   name=' '),2,count+1)\n        \n        fig.add_trace(go.Scatter(fig2['data'][1],\n                                 marker_color='#FFC563',\n                                 hovertemplate=\"<br>\".join([\"Non \"+i.title()+\": %{x}\",\n                                                     \"Density: %{y}\"]),\n                                 name=' '),2,count+1,)\n\n        fig.update_layout(showlegend=False)\n\n        ##\n        \n        lst.append([i,sales[i].mean(),sales[i].median(),sales[i].mode()[0],Iqr(sales[i])[0],\n                            sales[i].quantile(0.5 - 0.75\/2),sales[i].quantile(0.5 + 0.75\/2)])\n        \n        lst2.append([\"non_\"+i,non_sales[\"non_\"+i].mean(),non_sales[\"non_\"+i].median(),non_sales[\"non_\"+i].mode()[0],\n                     Iqr(non_sales[\"non_\"+i])[0],non_sales[\"non_\"+i].quantile(0.5 - 0.75\/2),non_sales[\"non_\"+i].quantile(0.5 + 0.75\/2)])\n                                \n        sale_dist = pd.DataFrame(lst, columns=columns).set_index(' ')\n        non_sale_dist = pd.DataFrame(lst2, columns=columns).set_index(' ')\n   \n  \n    axis_template = dict(showticklabels = False)\n    fig.update_yaxes(title_text=\"Density Estimation\", row=1, col=1)\n    fig.update_yaxes(title_text=\"Density Estimation\", row=2, col=1)\n                      \n    fig.update_xaxes(title_text=\"Sales Minute Session Duration\", row=1, col=1)\n    fig.update_xaxes(title_text=\"Sales Page Deph\", row=1, col=2)\n    fig.update_xaxes(title_text=\"Sales Hits\", row=1, col=3)\n    \n    fig.update_xaxes(title_text=\"Non Sales Minute Session Duration\", row=2, col=1)\n    fig.update_xaxes(title_text=\"Non Sales Page Deph\", row=2, col=2)\n    fig.update_xaxes(title_text=\"Non Sales Hits\", row=2, col=3)\n    \n\n    fig.show()\n    # Feature and percentage of sales and non seles - sum number of sessions\n    \n    return sale_dist,non_sale_dist\n    ","a1599ee9":"full_sale_dist, full_non_sale_dist = Behavior_Dist(df)","306a420d":"def two_tables(df1,df2):\n    df1_styler = df1.style.set_table_attributes(\"style='display:inline'\").set_caption('Sale')\n    df2_styler = df2.style.set_table_attributes(\"style='display:inline'\").set_caption('Non Sale')\n    \n    display_html(df1_styler._repr_html_()+df2_styler._repr_html_(), raw=True)","9499a527":"two_tables(full_sale_dist,full_non_sale_dist)","27cb91b4":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","0b131f50":"def Transaction_Hour_Plot(df):\n    # Df with the hour of transaction\n    sales = df[df['ga:transactions']!=0]\n    df2 = df[df['ga:transactions']!=0]\n\n    transaction_hour = sales[['ga:hour','ga:transactions']]\n    transaction_hour = transaction_hour.groupby(['ga:hour'],as_index=False).sum().sort_values('ga:hour',\n                                                                                  ascending=True).set_index('ga:hour')\n    # Plot the heat map\n    x=transaction_hour.reset_index()[transaction_hour.reset_index().columns[0]]\n    y=transaction_hour.reset_index()[transaction_hour.reset_index().columns[1]]\n    \n    fig = make_subplots(rows=1, cols=2)\n\n    fig.add_trace(go.Heatmap(z=transaction_hour.T,\n                             y=y.index,\n                             hovertemplate='Hour :%{x} Transactions :%{z}',\n                             colorscale=\"BuPu\", name=''),1,1)\n    \n\n    fig.add_trace(go.Scatter(y = y,\n                             x = x,\n                             hovertemplate='Hour :%{x} Transactions :%{y}',\n                             mode = 'markers',\n                             marker=dict(size=7,\n                                        color=transaction_hour.reset_index()[transaction_hour.reset_index().columns[1]], \n                                        colorscale='BuPu', \n                                        showscale=True),\n                            name=''\n                            ),1,2)\n    # The dependent variable is denoted \"Y\" and the independent variables are denoted by \"X\"\n    axis_template = dict(showticklabels = False)\n    \n    fig.update_layout(yaxis = axis_template,\n                      showlegend = True)\n    \n    fig.update_xaxes(title_text=\"Hour\", row=1, col=1)\n    fig.update_xaxes(title_text=\"Hour\", row=1, col=2)\n\n    fig.update_yaxes(title_text=\" \", row=1, col=1)\n    fig.update_yaxes(title_text=\"Transactions\", row=1, col=2)\n    \n    \n    \n    return fig.show()","7fd1e0c8":"Transaction_Hour_Plot(df)","5bd5a4b5":"def Transactions_Day_Plot(df):\n\n\n    # Df with the hour of transaction\n    sales = df[df['ga:transactions']!=0]\n\n    transaction_day = sales[['ga:day','ga:transactions']]\n    transaction_day = transaction_day.groupby(['ga:day'],as_index=False).sum().sort_values('ga:day',\n                                                                                   ascending=True).set_index('ga:day')\n    \n    # Plot the heat map\n    x=transaction_day.reset_index()[transaction_day.reset_index().columns[0]]\n    y=transaction_day.reset_index()[transaction_day.reset_index().columns[1]]\n    \n    fig = make_subplots(rows=1, cols=2)\n\n    fig.add_trace(go.Heatmap(z = transaction_day,\n                             y = y.index,\n                             hovertemplate=\"Day :%{y} Transactions :%{z}\",\n                             colorscale=\"BuPu\", name=''),1,1)\n    \n\n    fig.add_trace(go.Scatter(y = y,\n                             x = x,\n                             hovertemplate='Day :%{x} Transactions :%{y}',\n                             mode = 'markers',\n                             marker=dict(size=7,\n                                        color=transaction_day.reset_index()[transaction_day.reset_index().columns[1]], \n                                        colorscale='BuPu', \n                                        showscale=True),\n                            name=''\n                            ),1,2)\n    # The dependent variable is denoted \"Y\" and the independent variables are denoted by \"X\"\n    axis_template = dict(showticklabels = False)\n    \n    fig.update_layout(xaxis = axis_template,\n                      showlegend = True)\n\n    fig.update_xaxes(title_text=\" \", row=1, col=1)\n    fig.update_xaxes(title_text=\"Day\", row=1, col=2)\n\n    fig.update_yaxes(title_text=\"Day\", row=1, col=1)\n    fig.update_yaxes(title_text=\"Transactions\", row=1, col=2)\n    \n    fig.update_layout()\n    fig.show()\n    \n\n","1ceb7ceb":"Transactions_Day_Plot(df)","fb9ca852":"def Transaction_Corr(df):\n    \n    drop_elements = ['ga:day','ga:hour']\n    \n    behavior=['minutesessionDuration','ga:pageDepth','ga:hits']\n   \n\n    #Calculing the Interquantilerange\n        \n    for count,i in enumerate(behavior):\n        Q1 = df[behavior[count]].quantile(0.25)\n        Q3 = df[behavior[count]].quantile(0.75)\n        IQR = Q3 - Q1\n        #Apling the 1.5 rule for higer out liers\n        df_without = df[~(df[behavior[count]] > (Q3 + 1.5 * IQR))]\n    \n    df = df_without[df_without['minutesessionDuration']>0]   \n    \n    ## change for \n    for columns in df:\n        if columns[:6]=='source':\n            drop_elements.append(columns)\n        else:\n            pass\n    \n    df = df.drop(drop_elements, axis = 1)\n    \n    \n    corr_df = pd.DataFrame(df.corr()['ga:transactions']).sort_values(['ga:transactions'],ascending=False)[1:]\n    corr_df = corr_df.sort_values(['ga:transactions'],ascending=True).dropna().reset_index()\n\n    fig = px.bar(corr_df ,\n                 x ='ga:transactions',\n                 y = corr_df['index'],\n                 color='ga:transactions',\n                 color_continuous_scale= 'BuPu')\n    \n    fig.update_traces(hovertemplate=\n                        '<b>%{y}' +\n                        '<br><b>P-Value with transactions<\/b>: %{x}<br>')\n    fig.update_xaxes(title_text=\"Correlations with Transactions\")\n    fig.update_yaxes(title_text=\" \")\n    \n    fig.show()\n    return corr_df","9eab1c4f":"# Preparation\n\ndf_p = df.copy()\n\ndf_p = Feature_Reduction(df_p)\n\ndf_p = pd.get_dummies(df_p)","71c02914":"Transaction_Corr(df_p)","64226cda":"df_organic = df[df['medium']=='Organic']\ndf_paidsearch = df[df['medium']=='Paid Search']\ndf_direct = df[df['medium']=='Direct']\ndf_social = df[df['medium']=='Social']\ndf_others = df[df['medium']=='Others']","db3238e9":"Sales_Central_Tendency(df_organic) ","fe2f6456":"Conversion_Rate(df_organic)","bbed6661":"Buyer_Profile(df_organic)","7b695bb5":"o_sale_dist, o_non_sale_dist = Behavior_Dist(df_organic)","86a670fc":"two_tables(o_sale_dist,o_non_sale_dist)","cc83b539":"Transaction_Hour_Plot(df_organic)","5444c718":"Transactions_Day_Plot(df_organic)","bb733e8b":"df_organic_p = df_organic.copy()\n\ndf_organic_p = Feature_Reduction(df_organic_p)\n\ndf_organic_p = pd.get_dummies(df_organic_p)","e7e88ea9":"Transaction_Corr(df_organic_p)","b0096b79":"Sales_Central_Tendency(df_paidsearch)","92dd78ac":"Conversion_Rate(df_paidsearch)","12ef5270":"Buyer_Profile(df_paidsearch)","d163a0e3":"ps_sale_dist,ps_non_sale_dist=Behavior_Dist(df_paidsearch)","4d2b5863":"two_tables(ps_sale_dist, ps_non_sale_dist)","7ba26144":"Transaction_Hour_Plot(df_paidsearch)","6a2b1c03":"Transactions_Day_Plot(df_paidsearch)","72e64ae9":"df_paidsearch_p = df_paidsearch.copy()\n\ndf_paidsearch_p = Feature_Reduction(df_paidsearch_p)\n\ndf_paidsearch_p = pd.get_dummies(df_paidsearch_p)\n","3a5cd554":"Transaction_Corr(df_paidsearch_p)","947b08f6":"Sales_Central_Tendency(df_direct)","a9404723":"Conversion_Rate(df_direct)","7252fae7":"Buyer_Profile(df_direct)","6a2d779b":"d_sale_dist,d_non_sale_dist = Behavior_Dist(df_direct)","fdc9b792":"two_tables(d_sale_dist, d_non_sale_dist)","f681ad78":"Transaction_Hour_Plot(df_direct)","3cfa0fc6":"Transactions_Day_Plot(df_direct)","727a459f":"df_direct_p = df_direct.copy()\n\ndf_direct_p = Feature_Reduction(df_direct_p)\n\ndf_direct_p = pd.get_dummies(df_direct_p)\n","e182118e":"Transaction_Corr(df_direct_p)","21351d1e":"Sales_Central_Tendency(df_social)","95a14912":"Conversion_Rate(df_social)","0441902c":"Buyer_Profile(df_social)","953afb7c":"s_sale_dist,s_non_sale_dist = Behavior_Dist(df_social)","2b6af4d9":"two_tables(s_sale_dist, s_non_sale_dist)","88a76a4e":"Transaction_Hour_Plot(df_social)","d4eda468":"Transactions_Day_Plot(df_social)","43c9bc9d":"df_social_p = df_social.copy()\n\ndf_social_p = Feature_Reduction(df_social_p)\n\ndf_social_p = pd.get_dummies(df_social_p )\n","3fff70c7":"Transaction_Corr(df_social_p )","1f209293":"Sales_Central_Tendency(df_others)","1c0a65a6":"Buyer_Profile(df_others)","ed740858":"df[df['minutesessionDuration']==0]['ga:operatingSystem'].value_counts(normalize=True).head()","d53f7e92":"df[df['minutesessionDuration']==0]['ga:userType'].value_counts(normalize=True).head()","855ee66b":"df[(df['minutesessionDuration']==0)&\n   (df['ga:userType']=='New Visitor')]['ga:operatingSystem'].value_counts(normalize=True).head()","4fcd1492":"df[(df['minutesessionDuration']==0)&\n   (df['ga:userType']=='New Visitor')&\n   (df['ga:operatingSystem']=='Android')]['ga:region'].value_counts(normalize=True).head()","5dd1506d":"\n## Sales Day <a id=\"sd\"><\/a>\n\n\nHere we will do the same thing as above, however the first plot will be a Heat Map that shows what day we got the higher number of transactions. The second one is a regression plot that will help us to visualise the linear relationships between the number of transactions and the day of the month.\n\n\n\n\n","bcaff3b4":"# Traffic Medium - Organic <a id=\"organic\"><\/a>","492bcd93":"## Inferences\n\nWe are dealing with a very unbalanced data frame. Just 0.21% of the sessions had a transaction.","821424a8":"**Central Tendency** - In average the buyers used to buy 12 items, do 1 transaction per session and the average transaction revenue is 158.82. Total sales of this period is 2,901.38. The sampling size is too small with just 14 transactions.","0ebf0abf":"## Transaction Correlation <a id=\"tc\"><\/a>\n\nThat function will plot a vertical bar plot which is a nice way to visualise the Pearson Correlation Coefficient (PCC). We can easily see the positives and negative P-value. Also we will drop the outliers of the behavior metrics and the 'ga:day' and 'ga:hour' columns.\n","43177604":"## Customer Profile <a id=\"cp\"><\/a>\n\nWith the next two functions we will have a good visualisation of the customer's profile. Answering the questions about the buyer:\n\n* What are the top 5 operating systems they use.\n\n* What are the top 10 regions of the users.\n\n* In DFs with more than one source or medium we also will plot them.\n\n**Feature Reduction**\n\nFirst the function drops information obtained after the transaction as 'ga:itemQuantity' and 'ga:transactionRevenue' to avoid data leakage. Then, the function will reduce the columns 'ga: region' for the 10 most common and 'ga: operatingSystem' for the 5 most common. The other values from 'ga: region' and 'ga: operatingSystem' will be summed and renamed as '(Others)'.\n\n","1c145ba6":"# Traffic Medium - Paidsearch <a id=\"paidsearch\"><\/a>","ff98ee91":"## Data <a id=\"data\"><\/a>\n\n\nThe data that we will use, was mining from GA API. To get the granular data with the GA API we need to query for multiple dimensions simultaneously, so then every row returned will represent one session. You can [see more at Alex Papageorgioy article](https:\/\/www.linkedin.com\/pulse\/5-steps-get-google-analytics-ready-data-science-papageorgiou\/). (Thank you Alex for the explanations)\n\nSo, we ended with a data frame that has 565,942 rows and 14 columns. \n\nThe features are:\n\n     0   ga:userType               565942 non-null  object \n     1   ga:dateHour               565942 non-null  int64  \n     2   ga:minute                 565942 non-null  int64  \n     3   ga:sourceMedium           565942 non-null  object \n     4   ga:operatingSystem        565942 non-null  object \n     5   ga:region                 565942 non-null  object \n     6   ga:pageDepth              565942 non-null  int64  \n     7   ga:daysSinceLastSession   565942 non-null  int64  \n     8   ga:sessionDurationBucket  565942 non-null  int64  \n     9   ga:sessions               565942 non-null  int64  \n     10  ga:hits                   565942 non-null  int64  \n     11  ga:itemQuantity           565942 non-null  int64  \n     12  ga:transactions           565942 non-null  int64  \n     13  ga:transactionRevenue     565942 non-null  float64\n\n\n\n[See more](https:\/\/ga-dev-tools.appspot.com\/dimensions-metrics-explorer\/) about Dimensions & Metrics at GA-DEV-TOOLS","8214c91b":"# Conclusions  <a id=\"conclusions\"><\/a>\n\n\n","da2c41f9":"# Traffic Medium - Social <a id=\"social\"><\/a>","2057788a":"# Google Analytics API - Ecommerce Data - Exploratory Data Analysis ","5afe547d":"### Inferences\n\nThe boxplot helps us to visualize the five-numbers summary in the data, the minimum, the first quartile, the median, the third quartile, and maximum. The main part of the chart (the \u201cbox\u201d) shows where the middle portion of the data is and helps us to identify the variability of the data. [See more about the boxplot](https:\/\/en.wikipedia.org\/wiki\/Box_plot#:~:text=In%20descriptive%20statistics%2C%20a%20box,whisker%20plot%20and%20box%2Dand%2D)\n\nSee below the five-numbers summary of the Full Data set.\n\nMinute Session duration:\n\n* Min : 0\n* 1Q : 1\n* Median : 9\n* 3Q : 28\n* Max 68 \n\n\nPage Deph:\n\n* Min : 0\n* 1Q : 3\n* Median : 14\n* 3Q : 44\n* Max: 105 \n\n\nHits:\n\n* Min : 1\n* 1Q : 3\n* Median : 5\n* 3Q : 9\n* Max: 108\n\n\nNumbers higher than the max value are are considered Outliers.","b737a45d":"## Sales Hour <a id=\"sh\"><\/a>\n\nThat function will show two plots, the first one will be a Heatmap that shows what hour we got the higher number of transactions. The second one is a regression plot that will help us to visualise the linear relationships between the number of transactions and the hour of the day.\n","4d7ad746":"#### Inferences\n\nFrom each metric; \n\n* Minute Session Duration\n\n    * Sales are usually between 0 and 90. The middle 75% percentile are between 7 and 52.\n\n    * Non sales are usually between 0 and 70. The middle 75% percentile are between 2 and 36.\n\n* PageDepth\n\n    * Sales are usually between 0 and 120. The middle 75% percentile are between 10 and 72.\n\n    * Non are usually between 0 and 90. The middle 75% percentile are between 4 and 55.\n* Hits\n\n    * Sales are usually between 5 and 27. The middle 75% percentile are between 8 and 19.\n\n    * Non sales are usually between 0 and 17. The middle 75% percentile are between 2 and 12.\n\n    \n\n\n\n\n                        ","4aad820d":"#### Inferences\n\nThe higher number of transactions happen at the end of the month. Doing a quick analysis, it could be a counter-intuitive statement. Once that payment of Brazilians monthly salary is paid until the 5th working day of the month.\n\n\nAlso, we can say that there is a weak positive linear relationship.\n","5d72e32c":"# Defining The Exploratory Functions <a id=\"DEF\"><\/a>","adeceec6":"#### Inferences\n\nThe higher number of transactions happen between 12h and 21h. Also we can say that there is a relatively strong positive linear relationship.","4eb00c47":"\n\n## Methodology <a id=\"methodology\"><\/a>\n\nFirst, we gonna build functions to visualise the **Central Tendency**, **Conversion Rate**, **Buyers Profile**, **Distribution of buyer behavior**, **Transaction Hour**, **Transaction Day of the Month** and **Transaction Correlation**. Once we have done that while we explore full data frame, we will explore all the GA Traffic Medium, checking the performance and looking for patterns and differences between them. Also we're gonna try to find some hypotheses that could improve buyers experiences from each traffic medium on the site.\n\nThe functions, we will use plotly.subplots and plotly.graph_objects to have beautiful and interactive plots.\n\n\nSo, let's get started!\n\n\nSee more about Medium at [support Google](https:\/\/support.google.com\/analytics\/answer\/6099206?hl=en)\n\n\n\n\n","cac3fffc":"## Paidsearch - Summary Overview\n\n\n\n\n\n**Central Tendency** - In average the **buyers** used to buy 7 items, do 1 transaction per session and the average transaction revenue is 108.82. Total sales of this period is 31,121.57\n\n\n\n**Conversion Rate** - Of the 169042 sessions 0.17 % are transactions.\n\n\n\n**Buyers Profile** - Most of the **buyers** also used Android and are from S\u00e3o Paulo.\n\n\n\n**Distribution of buyer behavior** - The 'MinusteSessionDuration' of the buyers is 39 minutes and the mode of the 'PageDepth' is 55. The middle 75% of **buyers** session used to spend 10.0 and 62 minutes on the site, used to visit between 15.0 and 91 pages on the web site. The **buyers** used to do between 9.0 and 20 hits on the website. \n\n\n\nThe middle 75% of **non-buyers** session used to spend 2 and 36 minutes on the site, used to visit between 4 and 54 pages on the web site. The **non-buyers** used to do between 2 and 12 hits on the website. \n\n\n\nThe middle 75% speed of **Non-buyers** session are close but smaller than the **buyers** session.\n\n\n\n**Transaction Hour** - The higher number of transactions happened between 13h and 21h.\n\n\n\n**Transaction Day of the Month** - The number of transactions is spread over the month, but the highest numbers occurred in the first 9 days and the last 11 days.\n\n\n\n**Correlations Analysis** -  Hits, minute session duration has the stronger positive correlation. Also we can see that Page Depth and S\u00e3o Paulo,  Macintosh, Returning visitors and Windows are positive correlation as well. \n\nAgain, the stronger negative correlation are Android Operating System and New Visitors.\n\n\n\n\n\n","369a9822":"#### Inferences\n\nAnswering the questions;\n\n* More than 10% of the sales came from Android operating System.\n\n* 12% of the sales came from the State of S\u00e3o Paulo.\n\n* Almost 0.8% of the sales came from Google sources.\n\n* Approximately 0.8% of the sales came from Organic Medium.\n","c04516c0":"# Exploration Per Traffic Mediums  <a id=\"ETM\"><\/a>\n\nNow that we already have our functions and an idea of what kind of inferences we can get, we're gonna split the DF in the different types of Medium. So then, we will see the differences and pattern between the traffic Mediums.\n","fd0d93a7":"## Sales Central Tendency <a id=\"sct\"><\/a>\n\n\nThe function below will create a table with mean, median, mode and total of Item Quantity, Transactions and Transaction Revenue. ","fd793ecc":"## Differences & Patterns <a id=\"dp\"><\/a>\n\n\n\n\n\n\nNow that we got the analysis of the full data frame and the analysis per traffic medium we will be able to recognize some patterns and differences between the Full Df and the splitted dataframe.\n\n\n\n\n\n\n\n**Patterns**\n\n\n\n- **The central tendency** - The buyers of all traffic mediums used to do 1 transaction per purchase.\n\n\n\n- **Conversion Rate** - All data frames are very unbalanced. Where transactions are the minority class.\n\n\n\n\n- **Buyer Profile** - The **buyers** majority are from S\u00e3o Paulo. The difference is the percentile per medium. All the traffic Medium has a very high percentile of Android users. Also we can say that, the buyers used to use mobile devices in most of the mediums.\n.\n\n\n- **Transaction Hour** - The higher number of transactions of all mediums happen in the afternoon and in the night. Between 12h and 22h. Which makes the number of transactions have a strong positive correlation with the hour in all Mediums.\n\n\n\n- **Transaction Correlations** -  Hits, Minutes Session Duration, be from S\u00e3o Paulo, Macintosh users or Return Visitors always are in positive correlated with transaction. Also IOS Windows are almost always positively correlated with transactions. The exception is Social Medium. In the other side New visitor, Other regions and Android users are always negative correlated with the transaction.\n           \n\n\n\n\n\n**Difference**\n\n\n\n\n\n\n\n- **The Central Tendency** - In the average of the Full Df the buyers used to buy 6 items per transaction but per medium that has a small variance. **Organic** has the smaller number of items per sale and Direct the higher one 7.64. About revenue, **Paid Search** has the higher ticket 108.82 and Organic the smaller, 86.30.\n\n\n\n\n\n\n\n\n- **Conversion Rate** - The **Organic** medium brings the most part of the users (186,314). Followed by **Paid Search** (169,042), **Direct** (93,036) and **Social** 114,971. About the conversion rate Direct has the higher one with 0.29%, followed by **Organic** 0.24%, **Paid Search** 0.17% and **Social** 0.15%.\n\n\n\n\n\n\n\n\n- **Buyer Profile** - The most common Operating System is Android in the majority of the Medium. In the **Direct** medium it changes for a small difference to IOS.\n\n\n\n\n\n- **Distribution of Buyer and non Buyers Behavior** - Here we can see that all Medium behave differently on the web site. To have an overview and highlight these differences we can look at the mode of buyers per medium. The Minute Session Duration of the Buyers for example, the lower is 10 minutes (**Direct**) and the higher is 39 minutes (**Paid Search**). The modes of the Page Depth are very different in each medium. 7 is the mode number of pages depth for **Organic** and 55 of **Paid Search**. For Hits the difference is also notable, sessions of buyers from **Direct** medium often to do 8 Hits on the site and users from **Paid Search** used to do 17 hits. Another important difference could be noted in the tables in each Traffic Medium session of the netbook but these numbers can prove the point each source medium behaves differently on the website.\n\n\n\n- **Transactions Day** -  The **Organic** medium seems to have more transactions in the first half of the month, while the rest of the medium seems to have more transactions in the second half.\n\n\n\n\n- **Transaction Correlations** -As much as we have found some patterns in the transaction correlations, the value of the **PCC** always varies considerably across the mediums.\n\n\n\n\n \n\n\n\n \n\n\n","8cc61ede":"## Organic - Summary Overview\n\n\n\n\n\n**Central Tendency** - In average the **buyers** used to buy 5 items, do 1 transaction per session and the average transaction revenue is 86.30. Total sales of this period is 39,178.35\n\n\n\n**Conversion Rate** - Of the 186,314 sessions. 0.24 % are Transactions.\n\n\n\n**Buyers Profile** - Most common operating system of the **buyers** is Android followed by Windows operating system IOS users got third place. The majority are from S\u00e3o Paulo.\n\n\n**Distribution of buyer behavior** - The middle 75% of **buyers** session used to spend 7 and 46 minutes on the site, used to visit between 9 and 68 pages on the web site. The **buyers** used to do between 7 and 18 hits on the website.\n\n\n\nThe middle 75% of **Non-buyers** session are close but lower than the **buyers** session.\n\n\n\n**Transaction Hour** - The higher number of transactions happened between 11h and 22h.\n\n\n\n**Transaction Day of the Month** - The number of transactions are very well distributed in the days of the month.\n\n\n\n**Correlations Analysis** -  Hits, S\u00e3o Paulo have the stronger positive correlation. Also we can see that IOS users, Macintosh users, Returning Visitors, Days Since the Last Session, Windows and Linux are positive correlation as well. So we can say that the desktop devices have a small but positive correlation with the transaction.\n\nOn the other side, visitors from Others Regions, Android users and Minas Gerais have the stronger negative correlation.\n\n\n\n\n\n\n","e1e5f6b5":"* Droping 'ga:dateHour','ga:minute','session','ga:sessionDurationBucket','ga:sourceMedium'\nand organizing the columns ","5ea69543":"We see that 64% of the users which spend less than 1 minute on the website use Android and are New Visitor. Two possible reasons for that are page loading speed and mobile usability of the site. That can be checked with other metrics in Google Analytics.\n\n\nImproving the experience for that type of user is important because it is very likely that it can increment the revenue. Once the majority of these users (33%) use Android and are from S\u00e3o Paulo. The same buyer profile pattern identified in our Exploratory analysis.\n\n\nAnother approaches that can be suggested t to improve the sales are strategies to increase the number of return visitors to the website. Once the Return Visitors are always positively correlated with the transaction.\n","133e55bd":"### Inferences\n\nBasically we can infer from this graph that Hits, S\u00e3o Paulo and Minutes Session Duration has the stronger positive correlation. Also we can see that returning visitors, Linux, Macintosh and Windows Operating System are positive correlation as well. So we can say that desktop devices have a positive correlation with the transaction.\n\n\n\nOn the other hand, new visitors, visitors from Other regions and Android operating system have the stronger negative correlation.\n","02a39b93":"## The End <a id=\"te\"><\/a>\n\n\n\n\n\nThe main idea of this notebook was accomplished. Different insights from Google Analytics API data were gotten and we can also see how different the medium users could be. Also we did find some point to improve on the website that could improve the transactions. \n\n\n\n\n\n\n\nThe information that we got here will be considered in the part II The binary classification (transaction or non transaction session). You can go to the next part clicking [here](https:\/\/www.kaggle.com\/erickvarela\/ga-api-e-commerce-part-ii-classification\/) \n\n\n\n\n\n\n\n\n\nThat was my first own project and I really wanna know what you guys think about that Exploratory Analysis and I will appreciate any improvement, rewording, criticism feedbacks and an upvote as well.\n\n\n\n\n\n\n\n\n\nThat's it for now.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers \ud83c\udf40\n\n\n\n\n\n\n\n[Back to the top](#top)\n\n\n","08712658":"## Full DF - Summary Overview\n\n\n\n\n\n**Central Tendency** - In average the **buyers** used to buy 6 items, do 1 transaction per session and the average transaction revenue is 96.13. Total sales of this period is 115,641.80\n\n\n\n**Conversion Rate** - Of the 565,942 sessions. 0.21 % are Transactions. \n\n\n\n**Buyers Profile** - Most of the **buyers** used Android, are from S\u00e3o Paulo and getting to the  website from a Google source, organic medium.\n\n\n\n**Distribution of buyer behavior** - The middle 75% of **buyers** session used to spend 7 and 52 minutes on the site, used to visit between 10 and 72 pages on the web site. The **buyers** used to do between 8 and 19 hits on the website. \n\n\n\nThe middle 75% of **non-buyers** session used to spend 2 and 36 minutes on the site, used to visit between 4 and 55 pages on the web site. The **non-buyers** used to do between 2 and 12 hits on the website. \n\n\n\nSo, we can say that, the middle 75% of **Non-buyers** session are close but smaller than the **buyers** session.\n\n\n\n**Transaction Hour** - The higher number of transactions happened between 12h and 21h.\n\n\n\n**Transaction Day of the Month** - The higher number of transactions happened in the second half of the month.\n\n\n\n**Correlations Analysis** - We can infer from this graph that Hits, S\u00e3o Paulo and Minutes Session Duration has the stronger positive correlation. Also we can see that returning visitors, Linux, Macintosh and Windows Operating System are positive correlation as well. So we can say that desktop devices have a positive correlation with the transaction.\n\nOn the other hand, Android users, visitors from Others Eegions and new visitors have the stronger negative correlation.\n","174a59e4":"We can split 'ga:sourceMedium' in 'source' and 'medium' based on the forward slash in the values. \n\n\n\nLooking closely we can see that there are some inconsistent values and we should replace them. Some sources like  'l.instagram.com \/ referral', 'Instagram \/ Bio' and 'instagram.com \/ referral' have more than one name for the same traffic Source. In the example above, the Medium must be 'Social' but it was listed as 'referral' or 'bio'. Also, there are more than one Medium name for the same medium, such as 'Organic' medium for example.\n\n\n\n\nFor organize the Mediums and Sources, we will build lists with the sources \/ mediums values and then we will use the loc method to create new columns with the name of the Mediums and Sources.\n\n\n","a315c570":"**Buyers Profile** - Most of the buyers used Android and they are from S\u00e3o paulo and the main source is the accounts.google.com.(Login functionality via Gmail and where users are redirected to the Google and back to the website.)\n","350becb0":"# Traffic Medium - (Others) <a id=\"others\"><\/a>","630c1874":"## Distribution of Buyers & Non Buyers Behavior <a id=\"dist\"><\/a>\n\nThis function compares the behavior metrics' minutesessionDuration',' ga: pageDepth ' and 'ga: hits' of the sessions with sale and the sessions without sales.\n * Will to split the data frame in Sales where 'transaction' !=0 and non_sales where 'transaction' == 0.\n * After that, we will call the function IQR to return the IQR and Q3 of boths DF to remove the higher outliers from 'minutesessionDuration','ga:pageDepth' and 'ga:hits'. After that, remove the zeros as well.\n * Also, will find the middle 75% of the behavior metrics, which is between the 12.5th percentile and the 87.5th percentile from each data.\n * So then will run a for loop to plot the distribution of each metrics normalized of both DFs sales and non_sales.\n","37327977":"# Data Check <a id=\"datacheck\"><\/a>","2ab1b4f1":"## Conversion Rate <a id=\"cr\"><\/a>\n\nThat function will count all sessions of the data frame, calculate the percentile of session without transaction and with transactions.","28d6ead2":"## Direct - Summary Overview\n\n\n\n\n\n\n\n**Central Tendency** - In average the **buyers** used to buy 8 items, do 1 transaction per session and the average transaction revenue is 100.85. Total sales of this period is 27,530.78\n\n\n\n\n\n\n\n**Conversion Rate** - Of the 93,036 sessions. 0.29 % are Transactions.\n\n\n\n\n\n\n\n**Buyers Profile** - Most of the **buyers** uses IOS, but almost the same percentage of **buyers** uses Android and the majority are from S\u00e3o Paulo.\n\n\n\n\n\n\n**Distribution of buyer behavior** - The mode of **buyers** Hits are 8 and the 'minutesessionDuration' of them are 10. The middle 75% of **buyers** session used to spend 5 and 55.25 minutes on the site, used to visit between 9 and 75 pages on the web site. The **buyers** used to do between 8 and 20 hits on the website. The middle 75% of **Non-buyers** session are close but lower than the **buyers** session.\n\n\n\n\n\n**Transaction Hour** - The higher number of transactions happened between 13h and 21h.\n\n\n\n\n\n\n\n**Transaction Day of the Month** - The higher number of transactions happened in the second half of the month.\n\n\n\n\n\n\n\n**Correlations Analysis** -  Hits, Linux users have the stronger positive correlation. Also we can see that be from S\u00e3o Paulo, Minute Session Duration, Macintosh Users, be from Paran\u00e1 and Page Depth are positively correlated as well. \n\n\n\nThe stronger negative correlation are users from Others regions and Android users.\n\n\n","5ab173b1":"### Inferences \n\nThere is a highly numbers of zeros in some columns. In 'ga:daysSinceLastSessio', 'ga:itemQuantity', 'ga:revenuePerItem', 'ga:transactionRevenue' the reason is compreensible. But 20% of 'minuteSessionDuration' and 0 'pageDepth' can seem weird.\n\nThis could be due to the Bounce Rate. The GA considers a \"Bounce\" the sessions which the user only viewed a single page and there are no later hits detected. Some times, GA can track events in the load of the page e.g transactions or goals but not the hits.\n\n\n[See more at: Google Support - Bounce Rate](https:\/\/support.google.com\/analytics\/answer\/1009409?hl=en#:~:text=About%20bounce%20rate&text=Bounce%20rate%20is%20single%2Dpage,request%20to%20the%20Analytics%20server.)\n","3392e859":"#### Date Hour\nBreaking 'ga:dateHour' in 'ga:day' and 'ga:hour'","a8527a63":"**Buyer Profile**\n\nThe second function, will get all the sessions with transaction, will check if the DF have more than one 'Medium' and 'Source'. If so, it will be included in the features list to plot and finally, will run a for loop to plot the categorical values as a bar plot normalized for each column of our DF.\n","a83d725f":"## Table of Contents <a name=\"top\"><\/a>\n* [Introduction: Business Problem](#introduction)\n* [Data](#data)\n* [Methodology](#methodology)\n* [Data Check](#datacheck)\n    * [Data Cleaning](#cleaning)\n    * [Outliers](#outliers)\n* [Defining The Exploratory Functions](#DEF)\n    * [Sales Central Tendency](#sct)\n    * [Conversion Rate](#cr)\n    * [Customer Profile](#cp)\n    * [Distribution of Buyers & Non Buyers Behavior](#dist)\n    * [Sales Hour](#sh)\n    * [Sales Day](#sd)\n    * [Transaction Correlation](#tc)\n* [Exploration Per Traffic Mediums](#ETM)\n * [Organic](#organic)\n * [Paid Search](#paidsearch)\n * [Direct](#direct)\n * [Social](#social)\n * [Others](#others)\n* [Conclusions](#conclusions)\n * [Differences & Patterns](#dp)\n * [Hypotese Test](#ht)\n * [The End](#te)","2b94b4df":"#### Source\/Medium to Source and Medium\n\nAccording to Google:\n\"Source\/Medium is a dimension that combines the dimensions Source and Medium. Examples of Source\/Medium include google\/organic, example.com\/referral, and newsletter9-2014\/email\"\n\n[See more at: Google Support - Source Medium](https:\/\/support.google.com\/analytics\/answer\/6099206?hl=en#:~:text=Source%3A%20the%20origin%20of%20your,%2C%20web%20referral%20(referral).)","763c2e64":"## Hypotese Test <a id=\"ht\"><\/a>\n\nObserving the notebook we can have a good understanding about the behavior of the customers of each traffic medium and find an hypothesis to improve the online experience of the customers. The New Visitors using Android are facing problems. \n\nIt could be proved observing the negative correlation in all mediums. \n\nWe can check that hypothese exploring a bit more the users that have 0 Minute Session Duration.\n","bb7e0b89":"# Traffic Medium - Direct <a id=\"direct\"><\/a>","9a8c4f1e":"### Dropping and Organizing Columns","c50285cc":"## Preparation for the Correlations Analysis\n\nBefore we start to analysis the correlations in our DFs, we gonna copy the Df, call the Preparation Function to get the top 10 'regions' and top 5 'operatingSystem'. After that, convert categorical variables into dummy\/indicator variables.\n","6001d9f9":"## Social - Summary Overview\n\n\n\n\n\n**Central Tendency** - In average the **buyers** used to buy 6 items, do 1 transaction per session and the average transaction revenue is 88.57. Total sales of this period is 15,587.59\n\n\n\n**Conversion Rate** - Of the 114,971 sessions, 0.15% are Transactions. \n\n\n\n**Buyers Profile** - Most of the **buyers** used Android and they are from S\u00e3o Paulo and the main source is the Instagram.\n\n\n\n**Distribution of buyer behavior** - The middle 75% of **buyers** session used to spend 9.0 and 53 minutes on the site, used to visit between 11.0 and 76.00 pages on the web site. The **buyers** used to do between 8.0 and 18.0 hits on the website. The middle 75% of **Non-buyers** session are close but lower than the **buyers** session.\n\n\n\n**Transaction Hour** - The higher number of transactions happened between 12h and 20h.\n\n\n\n**Transaction Day of the Month** - The higher number of transactions happened in the second half of the month.\n\n   \n\n**Correlation** - Hits, Minute Session Duration has the stronger negative correlation with the transactions. Days Since Last Session, Returning Visitors, be from S\u00e3o Paulo and PageDepth are positively correlated as well. \nNew visitors, users from Cear\u00e1 and Others regions are negatively correlated with transactions.\n\n\n\n","46f02bff":"# Introduction: Business Problem <a id=\"introduction\"><\/a> \n\n\n\nHaving a good understanding about the behavior of the customers will make it easier to find ways to improve the experience online and reduce difficulties to buy online. The longer visitors stay on your site, the more pages they visit and the more actions they take, the more engaged they will be and more likely to buy from you.\n\nThis notebook is the first of a series of two. That will be an Exploratory Analysis and the main idea is to try to get different insights of the traffic mediums of ecommerce.\n\nExploring the transactions, getting insights of the buyers profile, buyer behavior and checking the correlation between our features and transaction.\n\nThe second part of that serie we will find the best classification model per traffic medium. You can check the second part clicking here [here](https:\/\/www.kaggle.com\/erickvarela\/ga-api-e-commerce-part-ii-classification\/). \n\n\n:)\n\n\n\nHave fun!\n\n\n\n\n\n","2f7de0c6":"## Outliers <a name=\"outliers\"><\/a>","9c738b0b":"First we will use the describe method to explore the distribution. Second, we will plot the numeric distributions with Boxplot.","943a383c":"#### Session Duration Bucket to Minutes\nSession duration bucket is the total duration of all sessions in seconds. Here we gonna convert for minutes","b0521633":"## Data Cleaning<a id=\"cleaning\"><\/a>"}}