{"cell_type":{"80c708f7":"code","6a2af623":"code","61382940":"code","bac23573":"code","38220b87":"code","1729f29a":"code","89bc04b2":"code","e1020320":"code","5b6ec400":"code","3186d21a":"code","e5348644":"code","88614ef2":"code","310ce8c9":"code","981f4b66":"code","d4ebad09":"code","8d52be0c":"code","e008aed2":"markdown","e184064a":"markdown","15b33456":"markdown","d4e728dd":"markdown","5362f47b":"markdown","c0b5fd52":"markdown","7e439f27":"markdown","0e85beb6":"markdown","c0afc407":"markdown","5b9ac73a":"markdown","795d5e3b":"markdown","e70d9ca7":"markdown","b0d2d2dd":"markdown","81744c9b":"markdown"},"source":{"80c708f7":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom glob import glob\nfrom PIL import Image\nnp.random.seed(21)","6a2af623":"dir_jahe_train = \"..\/input\/tanaman-umbi\/umbi\/train\/jahe\"\ndir_kencur_train = \"..\/input\/tanaman-umbi\/umbi\/train\/kencur\"\ndir_kunci_train = \"..\/input\/tanaman-umbi\/umbi\/train\/kunci\"\ndir_kunyit_train = \"..\/input\/tanaman-umbi\/umbi\/train\/kunyit\"\ndir_laos_train = \"..\/input\/tanaman-umbi\/umbi\/train\/laos\"\n\ndir_jahe_test = \"..\/input\/tanaman-umbi\/umbi\/tests\/jahe\"\ndir_kencur_test = \"..\/input\/tanaman-umbi\/umbi\/tests\/kencur\"\ndir_kunci_test = \"..\/input\/tanaman-umbi\/umbi\/tests\/kunci\"\ndir_kunyit_test = \"..\/input\/tanaman-umbi\/umbi\/tests\/kunyit\"\ndir_laos_test = \"..\/input\/tanaman-umbi\/umbi\/tests\/laos\"\n\nread = lambda imname: np.asarray(Image.open(imname).convert(\"RGB\"))","61382940":"img_jahe = [read(os.path.join(dir_jahe_train, filename)) for filename in os.listdir(dir_jahe_train)]\nX_jahe_train = np.array(img_jahe, dtype='uint8')\n\nimg_kencur = [read(os.path.join(dir_kencur_train, filename)) for filename in os.listdir(dir_kencur_train)]\nX_kencur_train = np.array(img_kencur, dtype='uint8')\n\nimg_kunci = [read(os.path.join(dir_kunci_train, filename)) for filename in os.listdir(dir_kunci_train)]\nX_kunci_train = np.array(img_kunci, dtype='uint8')\n\nimg_kunyit = [read(os.path.join(dir_kunyit_train, filename)) for filename in os.listdir(dir_kunyit_train)]\nX_kunyit_train = np.array(img_kunyit, dtype='uint8')\n\nimg_laos = [read(os.path.join(dir_laos_train, filename)) for filename in os.listdir(dir_laos_train)]\nX_laos_train = np.array(img_laos, dtype='uint8')","bac23573":"img_jahe = [read(os.path.join(dir_jahe_test, filename)) for filename in os.listdir(dir_jahe_test)]\nX_jahe_test = np.array(img_jahe, dtype='uint8')\n\nimg_kencur = [read(os.path.join(dir_kencur_test, filename)) for filename in os.listdir(dir_kencur_test)]\nX_kencur_test = np.array(img_kencur, dtype='uint8')\n\nimg_kunci = [read(os.path.join(dir_kunci_test, filename)) for filename in os.listdir(dir_kunci_test)]\nX_kunci_test = np.array(img_kunci, dtype='uint8')\n\nimg_kunyit = [read(os.path.join(dir_kunyit_test, filename)) for filename in os.listdir(dir_kunyit_test)]\nX_kunyit_test = np.array(img_kunyit, dtype='uint8')\n\nimg_laos = [read(os.path.join(dir_laos_test, filename)) for filename in os.listdir(dir_laos_test)]\nX_laos_test = np.array(img_laos, dtype='uint8')","38220b87":"y_jahe_train = np.zeros(X_jahe_train.shape[0]) \ny_kencur_train = np.zeros(X_kencur_train.shape[0]) + 1\ny_kunci_train = np.zeros(X_kunci_train.shape[0]) + 2\ny_kunyit_train = np.zeros(X_kunyit_train.shape[0]) + 3\ny_laos_train = np.zeros(X_laos_train.shape[0]) + 4","1729f29a":"y_jahe_test = np.zeros(X_jahe_test.shape[0]) \ny_kencur_test = np.zeros(X_kencur_test.shape[0]) + 1\ny_kunci_test = np.zeros(X_kunci_test.shape[0]) + 2\ny_kunyit_test = np.zeros(X_kunyit_test.shape[0]) + 3\ny_laos_test = np.zeros(X_laos_test.shape[0]) + 4","89bc04b2":"X_train = np.concatenate((X_jahe_train, X_kencur_train, X_kunci_train, X_kunyit_train, X_laos_train), axis = 0)\ny_train = np.concatenate((y_jahe_train, y_kencur_train, y_kunci_train, y_kunyit_train, y_laos_train), axis = 0)\n\nX_test = np.concatenate((X_jahe_test, X_kencur_test, X_kunci_test, X_kunyit_test, X_laos_test), axis = 0)\ny_test = np.concatenate((y_jahe_test, y_kencur_test, y_kunci_test, y_kunyit_test, y_laos_test), axis = 0)","e1020320":"s = np.arange(X_train.shape[0])\nnp.random.shuffle(s)\nX_train = X_train[s]\ny_train = y_train[s]\n\ns = np.arange(X_test.shape[0])\nnp.random.shuffle(s)\nX_test = X_test[s]\ny_test = y_test[s]","5b6ec400":"w=40\nh=30\nfig=plt.figure(figsize=(12, 8))\ncolumns = 5\nrows = 3\n\nfor i in range(1, columns*rows +1):\n  ax = fig.add_subplot(rows, columns, i)\n  if y_train[i] == 0:\n    ax.title.set_text('Jahe')\n  elif y_train[i] == 1:\n    ax.title.set_text('Kencur')    \n  elif y_train[i] == 2:\n    ax.title.set_text('Kunci')\n  elif y_train[i] == 3:\n    ax.title.set_text('Kunyit')        \n  else:\n    ax.title.set_text('Laos')\n\n  plt.imshow(X_train[i], interpolation='nearest')\nplt.show()","3186d21a":"import keras\nfrom keras.utils.np_utils import to_categorical \n\ny_train = to_categorical(y_train, num_classes=5)\ny_test = to_categorical(y_test, num_classes=5)","e5348644":"X_train = X_train\/255\nX_test = X_test\/255","88614ef2":"from keras.models import Sequential, Model\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom tensorflow.keras.optimizers import Adam, RMSprop\nfrom keras.callbacks import ReduceLROnPlateau\n\ndef CNN_Model(input_shape = (300, 300, 3), num_classes=5):\n    \n    model = Sequential()\n    model.add(Conv2D(64, kernel_size=(3,3), padding='Same', input_shape = input_shape, activation='relu', kernel_initializer = 'glorot_uniform'))\n    model.add(Dropout(0.25)) \n        \n    model.add(MaxPool2D(pool_size=(2,2)))      \n    model.add(Flatten())\n    model.add(Dense(128, activation='relu', kernel_initializer='normal'))\n    \n    model.add(Dense(num_classes, activation = 'softmax'))\n    \n    model.summary()\n    \n    optimizer= Adam(learning_rate=0.001)     \n    model.compile(optimizer = optimizer, loss='categorical_crossentropy', metrics=[\"accuracy\"])\n    \n    return model   \n\nmodel = CNN_Model()","310ce8c9":"learning_rate_reduction = ReduceLROnPlateau(monitor='val_accuracy', \n                                            patience=3, \n                                            verbose=1, \n                                            factor=0.5, \n                                            min_lr=0.00001)","981f4b66":"history = model.fit(X_train, \n                    y_train, \n                    validation_split=0.2, \n                    epochs=50, callbacks=[learning_rate_reduction],\n                    verbose=1)","d4ebad09":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\n\nplt.title('Model Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epochs')\n\nplt.legend(['Train', 'Val'], loc='lower right')\nplt.show()","8d52be0c":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\n\nplt.title('Model Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epochs')\n\nplt.legend(['Train', 'Val'], loc='upper right')\nplt.show()","e008aed2":"# Memuat Citra Tes","e184064a":"# Normalisasi Data","15b33456":"# Menentukan Direktori Data","d4e728dd":"# Memuat Citra Latih","5362f47b":"# Loss Model","c0b5fd52":"# Menampilkan 15 Citra Pertama","7e439f27":"# Mengkodekan Label","0e85beb6":"# Akurasi Model","c0afc407":"# Membuat Label","5b9ac73a":"# Mengacak Urutan Data","795d5e3b":"# Membuat Model CNN Sederhana","e70d9ca7":"# Menggabungkan Data","b0d2d2dd":"# Memuat Pustaka Dasar","81744c9b":"# Melatih Model"}}