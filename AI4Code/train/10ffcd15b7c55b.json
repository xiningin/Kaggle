{"cell_type":{"7f59a085":"code","5c88bb4b":"code","71c44e24":"code","325d823c":"code","9a61167a":"code","1e440df9":"code","700bc8eb":"code","6f96ea09":"code","bf2513fa":"code","03fb244c":"code","bfdcd111":"code","8d255f6b":"code","beb3db38":"code","22949960":"code","dcc25388":"code","20d9bee8":"code","f76cb405":"code","5f3268cb":"code","6b31dfbb":"code","1c80fdf4":"code","ef0e0791":"code","1e526ab4":"code","295747ef":"code","a67c712f":"code","871d99f7":"code","818459cf":"code","dac07ab5":"code","bc2276ed":"code","4255e0a1":"code","037aab98":"code","0c4ef548":"code","ce726062":"code","2eaddf29":"code","5ac7341a":"code","32e7962e":"code","8872a073":"code","47bcc954":"code","56c0c7ce":"code","8ca272c5":"code","eedccf04":"code","dbfe7e80":"code","4b5e8ba8":"code","ec346bd0":"code","a4fee5fb":"code","bf432fab":"code","0c403104":"code","981eef5e":"code","5d6a12e4":"code","40e99550":"code","8bb5d005":"code","84188b87":"code","fc2bf476":"code","6438791e":"code","8baab683":"code","2fedc407":"code","5ad8cf57":"code","34f9a253":"code","ac649129":"markdown","74100a95":"markdown","66f010c3":"markdown","d25642f8":"markdown","e7436ec1":"markdown","c7f356ea":"markdown","c693016b":"markdown","d5f76022":"markdown","964feb44":"markdown","ec3c1d3b":"markdown","415c9a95":"markdown","058cf422":"markdown","8009a50c":"markdown","2cfa99f3":"markdown","acafa58a":"markdown","6c139459":"markdown","b6d388b6":"markdown","2fa86c7f":"markdown","105a1376":"markdown","244891c7":"markdown","ca54d5cf":"markdown","38c8e6a9":"markdown","b6503a8e":"markdown","2105c51a":"markdown","09da8c94":"markdown","4267e1c4":"markdown","2c5a3caa":"markdown"},"source":{"7f59a085":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5c88bb4b":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)","71c44e24":"df= pd.read_csv('..\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv')\ndf.head()","325d823c":"df.shape","9a61167a":"df.columns","1e440df9":"df.info()","700bc8eb":"df['area_type'].value_counts()","6f96ea09":"df1 = df.drop(['area_type','society','balcony','availability'],axis='columns')\ndf1.shape","bf2513fa":"df1.head()","03fb244c":"df1.isnull().sum()","bfdcd111":"df2 = df1.dropna()\ndf2.isnull().sum()","8d255f6b":"df2.shape","beb3db38":"df2['size'].unique()","22949960":"df2['bhk']= df2['size'].apply(lambda x: int(x.split(' ')[0]))","dcc25388":"df2.head()","20d9bee8":"df2.drop(['size'],axis='columns',inplace=True)\ndf2.head()","f76cb405":"def is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","5f3268cb":"df2[~df2['total_sqft'].apply(is_float)].head(10)","6b31dfbb":"def convert_sqft_to_num(x):\n    tokens = x.split('-')\n    if len(tokens) == 2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None","1c80fdf4":"df3 = df2.copy()\ndf3.total_sqft = df3.total_sqft.apply(lambda x: convert_sqft_to_num(x))\ndf3 = df3[df3.total_sqft.notnull()]\ndf3.head(2)","ef0e0791":"df4 = df3.copy()\ndf4['price_per_sqft'] = df4['price']*100000\/df4['total_sqft']\ndf4.head()","1e526ab4":"df4_stats = df4['price_per_sqft'].describe()\ndf4_stats","295747ef":"df4.location = df4.location.apply(lambda x: x.strip())\nlocation_stats = df4['location'].value_counts(ascending=False)\nlocation_stats","a67c712f":"len(location_stats[location_stats<=10])","871d99f7":"location_stats_less_than_10 = location_stats[location_stats<=10]\nlocation_stats_less_than_10","818459cf":"df4.location = df4.location.apply(lambda x: 'other' if x in location_stats_less_than_10 else x)\nlen(df4.location.unique())","dac07ab5":"df4.head(10)","bc2276ed":"df4[df4.total_sqft\/df4.bhk<300].head()","4255e0a1":"df5 = df4[~(df4.total_sqft\/df4.bhk<300)]\ndf5.shape","037aab98":"df5.price_per_sqft.describe()","0c4ef548":"def remove_pps_outliers(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\ndf6 = remove_pps_outliers(df5)\ndf6.shape","ce726062":"def plot_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='blue',label='2 BHK', s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,marker='+', color='green',label='3 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(location)\n    plt.legend()\n    \nplot_scatter_chart(df6,\"Rajaji Nagar\")","2eaddf29":"plot_scatter_chart(df6,\"Hebbal\")","5ac7341a":"def remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_stats = {}\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_df.price_per_sqft),\n                'std': np.std(bhk_df.price_per_sqft),\n                'count': bhk_df.shape[0]\n            }\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\ndf7 = remove_bhk_outliers(df6)\n\ndf7.shape","32e7962e":"plot_scatter_chart(df7,\"Rajaji Nagar\")","8872a073":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\nplt.hist(df7.price_per_sqft,rwidth=0.8)\nplt.xlabel(\"Price Per Square Feet\")\nplt.ylabel(\"Count\")","47bcc954":"df7.bath.unique()","56c0c7ce":"plt.hist(df7.bath,rwidth=0.8)\nplt.xlabel(\"Number of bathrooms\")\nplt.ylabel(\"Count\")","8ca272c5":"df7[df7.bath>10]","eedccf04":"df7[df7.bath>df7.bhk+2]","dbfe7e80":"df8= df7[df7.bath<df7.bhk+2]","4b5e8ba8":"df8.shape","ec346bd0":"df9 = df8.drop(['price_per_sqft'],axis='columns')\ndf9.head(3)","a4fee5fb":"dummies=pd.get_dummies(df9.location)\ndummies.head()","bf432fab":"df10 = pd.concat([df9,dummies.drop('other',axis='columns')],axis='columns')\ndf10.head()","0c403104":"df11 = df10.drop('location',axis='columns')\ndf11.head(2)","981eef5e":"x = df11.drop(['price'],axis='columns')\nx.head(3)","5d6a12e4":"y = df11.price\ny.head(3)","40e99550":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=10)","8bb5d005":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(x_train,y_train)\nlr_clf.score(x_test,y_test)","84188b87":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.3, random_state=0)\n\ncross_val_score(LinearRegression(), x, y, cv=cv)","fc2bf476":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model_using_gridsearchcv(x,y):\n    algos = {\n        'linear_regression' : {\n            'model': LinearRegression(),\n            'params': {\n                'normalize': [True, False]\n            }\n        },\n        'lasso': {\n            'model': Lasso(),\n            'params': {\n                'alpha': [1,2],\n                'selection': ['random', 'cyclic']\n            }\n        },\n        'decision_tree': {\n            'model': DecisionTreeRegressor(),\n            'params': {\n                'criterion' : ['mse','friedman_mse'],\n                'splitter': ['best','random']\n            }\n        }\n    }\n    scores = []\n    cv = ShuffleSplit(n_splits=5, test_size=0.3, random_state=0)\n    for algo_name, config in algos.items():\n        gs =  GridSearchCV(config['model'], config['params'], cv=cv, return_train_score=False)\n        gs.fit(x,y)\n        scores.append({\n            'model': algo_name,\n            'best_score': gs.best_score_,\n            'best_params': gs.best_params_\n        })\n\n    return pd.DataFrame(scores,columns=['model','best_score','best_params'])\n\nfind_best_model_using_gridsearchcv(x,y)","6438791e":"\ndef predict_price(location,sqft,bath,bhk):\n    loc_index = np.where(x.columns==location)[0][0]\n    x = np.zeros(len(x.columns))\n    x = np.zeros(len(x.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n\n    return lr_clf.predict([x])[0]","8baab683":"predict_price('1st Phase JP Nagar',1000, 2, 2)","2fedc407":"predict_price('Indira Nagar',1000, 2, 2)","5ad8cf57":"import pickle\nwith open('banglore_home_prices_model.pickle','wb') as f:\n    pickle.dump(lr_clf,f)","34f9a253":"import json\ncolumns = {\n    'data_columns' : [col.lower() for col in x.columns]\n}\nwith open(\"columns.json\",\"w\") as f:\n    f.write(json.dumps(columns))","ac649129":"### K Fold cross validation to measure accuracy","74100a95":"#### if you have 4 bedroom home and even if you have bathroom in all 4 rooms plus one guest bathroom, you will have total bath = total bed + 1 max. Anything above that is an outlier or a data error and can be removed","66f010c3":"### Export location and column information to a file that will be useful later on in our prediction application","d25642f8":"### Export the tested model to a pickle file","e7436ec1":"#### Add new feature(integer) for bhk (Bedrooms Hall Kitchen)","c7f356ea":"### Data Cleaning","c693016b":"# Regression Project: Predicting Home Prices in Banglore","d5f76022":"### Outlier Removal Using Bathrooms Feature","964feb44":"### Feature Engineering","ec3c1d3b":"### Test the model for few properties","415c9a95":"### Based on above results we can say that LinearRegression gives the best score.","058cf422":"#### We should also remove properties where for same location, the price of (for example) 3 bedroom apartment is less than 2 bedroom apartment (with same square ft area) by building a dictionary of stats per bhk, i.e. Now we can remove those 2 BHK apartments whose price_per_sqft is less than mean price_per_sqft of 1 BHK apartment","8009a50c":"#### Explore total_sqft feature","2cfa99f3":"### Drop features that are not required to build our model","acafa58a":"#### It is unusual to have 2 more bathrooms than number of bedrooms in a home","6c139459":"#### Plot same scatter chart to visualize price_per_sqft for 2 BHK and 3 BHK properties","b6d388b6":"#### We have 6 bhk apartment with 1020 sqft. Another one is 8 bhk and total sqft is 600. These are clear data errors that can be removed safely","2fa86c7f":"### Use One Hot Encoding For Location","105a1376":"#### Examine locations which is a categorical variable. We need to apply dimensionality reduction technique here to reduce number of locations","244891c7":"#### Above shows that total_sqft can be a range (e.g. 2100-2850). For such case we can just take average of min and max value in the range. There are other cases such as 34.46Sq. Meter which one can convert to square ft using unit conversion.","ca54d5cf":"#### Here we find that min price per sqft is 267 rs\/sqft whereas max is 12000000, this shows a wide variation in property prices. We should remove outliers per location using mean and one standard deviation","38c8e6a9":"### Outlier Removal Using Business Logic","b6503a8e":"### Find best model using GridSearchCV","2105c51a":"### Model Building","09da8c94":"#### Add new feature called price per square feet","4267e1c4":"### Outlier Removal Using Standard Deviation and Mean","2c5a3caa":"#### Normally square ft per bedroom is 300 (i.e. 2 bhk apartment is minimum 600 sqft. For example 400 sqft apartment with 2 bhk than that seems suspicious and can be removed as an outlier. We will remove such outliers by keeping our minimum thresold per bhk to be 300 sqft"}}