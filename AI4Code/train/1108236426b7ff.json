{"cell_type":{"1f9c135b":"code","2c1652cc":"code","1b6f7c7e":"code","f8bcd86b":"code","43650f1f":"code","0ca2b5c9":"code","0d1e90da":"code","93e8e36a":"code","d7b17bb6":"code","bc398991":"code","821b31ae":"code","525145de":"code","07b4b025":"code","6eea313e":"code","21a60538":"code","1cb3a09a":"code","2617d943":"code","3c4dd3ff":"markdown","30463e9b":"markdown","d130974c":"markdown","9364ee97":"markdown","9467cb5e":"markdown","92d1174a":"markdown","57891c6d":"markdown","20978512":"markdown","56f0b8cd":"markdown","b0f323e3":"markdown","91f4e0d9":"markdown","5c8b8510":"markdown","80a00dc0":"markdown"},"source":{"1f9c135b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport operator\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2c1652cc":"df = pd.read_csv('..\/input\/covid19-deaths-dataset\/all_weekly_excess_deaths.csv')\n# df.head()\ndf_temp = df['end_date'].str.split('-', expand=True)[[1,0]]\ndf['Date'] = df_temp[1] + '\/' + df_temp[0]\ndf.head()","1b6f7c7e":"sns.pairplot(df, vars = ['total_deaths', 'covid_deaths', 'non_covid_deaths'], hue = 'year')","f8bcd86b":"country = ''\ncountry_list = []\n\nfor country_name in df.country:\n    if(country_name != country):\n        country = country_name\n#         print(country_name)\n        country_list.append(country_name)\n        \ncountry_list","43650f1f":"df_yr2020 = df[df.year == 2020]\ndf_yr2020","0ca2b5c9":"fig = px.choropleth(df_yr2020.rename(columns={'total_deaths':'Total Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Total Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","0d1e90da":"fig = px.choropleth(df_yr2020.rename(columns={'covid_deaths':'Covid Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Covid Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","93e8e36a":"fig = px.choropleth(df_yr2020.rename(columns={'non_covid_deaths':'Non-Covid Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Non-Covid Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","d7b17bb6":"plt.figure(figsize = (15, 10))\nsns.barplot(data = df_yr2020, x = 'Date', y = 'total_deaths', color = 'red', label = 'Total Deaths')\nsns.barplot(data = df_yr2020, x = 'Date', y = 'covid_deaths', color = 'yellow', label = 'Covid Deaths')\nplt.xlabel(xlabel = 'Date', fontsize = 16, fontweight = 'bold')\nplt.ylabel(ylabel = 'Number of Deaths', fontsize = 16, fontweight = 'bold')\nplt.legend()\nplt.show()","bc398991":"df_yr2021 = df[df.year == 2021]\ndf_yr2021","821b31ae":"fig = px.choropleth(df_yr2021.rename(columns={'total_deaths':'Total Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Total Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","525145de":"fig = px.choropleth(df_yr2021.rename(columns={'covid_deaths':'Covid Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Covid Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","07b4b025":"fig = px.choropleth(df_yr2021.rename(columns={'non_covid_deaths':'Non-Covid Deaths'}), \n                    locations='country',\n                    locationmode = 'country names',\n                    color='Non-Covid Deaths', \n                    animation_frame='end_date'\n                   )\nfig.update_layout(geo=dict(\n                  showframe = False,\n                  showcoastlines = False)\n                )\nfig.show()","6eea313e":"plt.figure(figsize = (10, 10))\nsns.barplot(data = df_yr2021, x = 'Date', y = 'total_deaths', color = 'red', label = 'Total Deaths')\nsns.barplot(data = df_yr2021, x = 'Date', y = 'covid_deaths', color = 'yellow', label = 'Covid Deaths')\nplt.xlabel(xlabel = 'Date', fontsize = 16, fontweight = 'bold')\nplt.ylabel(ylabel = 'Number of Deaths', fontsize = 16, fontweight = 'bold')\nplt.legend()\nplt.show()","21a60538":"df_us = pd.read_csv('..\/input\/covid19-deaths-dataset\/us-counties.csv')\ndf_us","1cb3a09a":"df_temp = df_us['date'].str.split('-', expand=True)[[1,0]]\ndf_us['Date'] = df_temp[1] + '\/' + df_temp[0]\ndf_us.head()","2617d943":"plt.figure(figsize = (20, 10))\nsns.barplot(data = df_us, x = 'Date', y = 'cases_avg', color = 'green', label = 'Avg. Cases')\nsns.barplot(data = df_us, x = 'Date', y = 'cases_avg_per_100k', color = 'blue', label = 'Avg. Cases per 100k')\nplt.xlabel(xlabel = 'Date', fontsize = 16, fontweight = 'bold')\nplt.ylabel(ylabel = 'Number of Deaths', fontsize = 16, fontweight = 'bold')\nplt.legend()\nplt.show()","3c4dd3ff":"### Graph showing No. of total deaths and covid deaths per month for year 2020","30463e9b":"### Covid Deaths (2020)","d130974c":"## Dataset for year 2021 ","9364ee97":"### Non-Covid Deaths (2020)","9467cb5e":"### Graph showing Avg. cases and Avg. cases per 100k plot for year 2020-21","92d1174a":"## Dataset for year 2020","57891c6d":"### Graph showing No. of total deaths and covid deaths per month for year 2021","20978512":"### Total Deaths (2020)","56f0b8cd":"## Dataset for United States","b0f323e3":"### Total Deaths (2021)","91f4e0d9":"### Non-Covid Deaths (2021)","5c8b8510":"## Total World 2020, 2021 comparision","80a00dc0":"### Covid Deaths (2021)"}}