{"cell_type":{"f7fea02c":"code","fcd41a9f":"code","1c483600":"code","bbe8e575":"code","a82ded3c":"code","194064f1":"code","cfbdaf41":"code","0fda271d":"code","f8bdb13d":"code","590b318b":"code","faed06e9":"code","6d4c2ee8":"code","14a1b990":"code","618214fc":"code","5571ec9f":"code","a939e72a":"code","bbc85f98":"code","7d743a6e":"code","d01c7533":"code","67f71521":"code","8ff1abfa":"code","a1c2abfa":"markdown","991927f4":"markdown","d2f949b1":"markdown","37e3d9bc":"markdown","0083390d":"markdown","6ec7a616":"markdown","9dc562dc":"markdown","aa06003d":"markdown","606ce07f":"markdown","be2b7293":"markdown","87644332":"markdown","141a8b7e":"markdown","b304477a":"markdown","283c824e":"markdown"},"source":{"f7fea02c":"import os\nimport imageio\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport numpy as np\nimport pandas as pd\nimport PIL\nfrom PIL import Image\nimport skimage\nimport skimage.color\n\n%matplotlib inline","fcd41a9f":"data_dir = '..\/input'\nimg_dir = os.path.join(data_dir, 'bee_imgs', 'bee_imgs')\ndata_csv = os.path.join(data_dir, 'bee_data.csv')\ndata = pd.read_csv(data_csv)\nprint('Number of rows:', len(data))","1c483600":"data.head()","bbe8e575":"data.index","a82ded3c":"data.describe()","194064f1":"data.info()","cfbdaf41":"data.columns","0fda271d":"data[\"caste\"].value_counts()","f8bdb13d":"data[\"pollen_carrying\"].value_counts()","590b318b":"data[\"subspecies\"].value_counts() ","faed06e9":"def to_file_path(file_name):\n    return os.path.join(img_dir, file_name)\n\ndata = data.assign(**{'img': data.file.transform(to_file_path)})","6d4c2ee8":"example_img_path = data.iloc[1].img\nimg = mpimg.imread(example_img_path) # Numpy array","14a1b990":"plt.imshow(img)\nplt.title('Original image')","618214fc":"img_gray = skimage.color.rgb2gray(img)\nplt.imshow(img_gray, cmap='gray')\nplt.title('Grayscale')","5571ec9f":"from skimage import exposure\nfrom functools import partial\n\n# http:\/\/scikit-image.org\/docs\/dev\/auto_examples\/color_exposure\/plot_equalize.html#sphx-glr-auto-examples-color-exposure-plot-equalize-py\ndef plot_img_and_hist(image, axes=None, bins=64, title=None):\n    \"\"\"Plot an image along with its histogram and cumulative histogram.\n\n    \"\"\"\n    if axes is None:\n        fig, axes = plt.subplots(1, 2, gridspec_kw = {'width_ratios':[1.5, 1]})\n        fig.set_size_inches((8, 4))\n        # fig.tight_layout()\n    ax_img, ax_hist = axes\n    # ax_cdf = ax_hist.twinx()\n\n    # Display image\n    ax_img.imshow(image, cmap=plt.cm.gray)\n    ax_img.set_axis_off()\n    \n    if title is not None:\n        ax_img.set_title(title)\n\n    # Display histograms per channel\n    red = image[:, :, 0]\n    green = image[:, :, 1]\n    blue = image[:, :, 2]\n    \n    plot_hist = partial(ax_hist.hist, bins=bins, histtype='bar', linewidth=2, alpha=0.3, density=True)\n    plot_hist(red.ravel(), color='red')\n    plot_hist(green.ravel(), color='green')\n    plot_hist(blue.ravel(), color='blue')\n\n    ax_hist.set_xlabel('Pixel intensity')\n    ax_hist.set_xlim(0, 1)\n    ax_hist.set_ylim([0, 3])\n    ax_hist.set_yticks([])\n    \n    ax_hist.set_title('Histogram')\n\n    # Display cumulative distribution\n    # img_cdf, bins = exposure.cumulative_distribution(image, bins)\n    # ax_cdf.plot(bins, img_cdf, 'r')\n    # ax_cdf.set_yticks([])\n\n    return ax_img, ax_hist # , ax_cdf","a939e72a":"plot_img_and_hist(img, title='Original image')","bbc85f98":"low = 0.10  # Pixels with intensity smaller than this will be black\nhigh = 0.90  # Pixels with intensity larger than this will be white\nimg_rescaled = exposure.rescale_intensity(img, in_range=(low, high))\nplot_img_and_hist(img_rescaled, title='Rescaled intensity')","7d743a6e":"img_eq = exposure.equalize_hist(img)\nplot_img_and_hist(img_eq, title='Equalized histogram')","d01c7533":"img_adapteq = exposure.equalize_adapthist(img, clip_limit=0.03)\nplot_img_and_hist(img_adapteq, title='Adaptive histogram equalization')","67f71521":"gamma_corrected_2 = exposure.adjust_gamma(img, 2.0)\nplot_img_and_hist(gamma_corrected_2, title='Gamma adjustment, $\\gamma=2.0$')","8ff1abfa":"gamma_corrected_05 = exposure.adjust_gamma(img, 0.5)\nplot_img_and_hist(gamma_corrected_05, title='Gamma adjustment, $\\gamma=0.5$')","a1c2abfa":"### Read data from `input` folder to Pandas dataframe","991927f4":"### Plot original image with histogram","d2f949b1":"### Importing the libraries","37e3d9bc":"### Define a helper function for plotting image and histogram","0083390d":"### Use the second bee image as an example, read as Numpy array","6ec7a616":"### Show first five rows of dataframe","9dc562dc":"### [Equalize histogram](http:\/\/scikit-image.org\/docs\/dev\/api\/skimage.exposure.html#skimage.exposure.equalize_hist)","aa06003d":"### Plot image with matplotlib","606ce07f":"### Add a column `img` for file path to images","be2b7293":"### [Contrast Limited Adaptive Histogram Equalization](http:\/\/scikit-image.org\/docs\/dev\/api\/skimage.exposure.html#equalize-adapthist)","87644332":"### [Rescale intensity](http:\/\/scikit-image.org\/docs\/dev\/api\/skimage.exposure.html#rescale-intensity): Boost contrast by \"stretching\" intensity between given min and max and clipping the rest","141a8b7e":"# Image preprocessing with [scikit-image](https:\/\/scikit-image.org\/)","b304477a":"### [Gamma adjustment](http:\/\/scikit-image.org\/docs\/dev\/api\/skimage.exposure.html#adjust-gamma)","283c824e":"### Convert image to grayscale"}}