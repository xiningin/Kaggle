{"cell_type":{"eefe189f":"code","92b9fba1":"code","cbaf3dd5":"code","865c16ff":"code","a5a1fee9":"code","90970db5":"code","c62e5399":"code","8dbdce25":"code","58b3d4a7":"markdown"},"source":{"eefe189f":"import pandas as pd\nimport matplotlib.pyplot as plt\n\n   \ndf_city = pd.read_csv(\"\/kaggle\/input\/berlin_temp_avg.csv\") \n\ndf_global = pd.read_csv(\"\/kaggle\/input\/world_temp_avg.csv\") ","92b9fba1":"total_elements = len(df_city)\nprint(len(df_city))","cbaf3dd5":"ma_temp_city = []\nma_temp_year_city = []\n\nma_temp_global = []\nma_temp_year_global = []","865c16ff":"for i in range(len(df_city)-6):\n    average = (df_city['avg_temp'][i]+df_city['avg_temp'][i+1]+df_city['avg_temp'][i+2]+df_city['avg_temp'][i+3]+df_city['avg_temp'][i+4]+df_city['avg_temp'][i+5]+df_city['avg_temp'][i+6])\n    ma_temp_city.append(round(average\/7,2))\n    ma_temp_year_city.append(df_city['year'][i+6])\n   \n#print(ma_temp_city)","a5a1fee9":"for i in range(len(df_global)-6):\n    average = (df_global['avg_temp'][i]+df_global['avg_temp'][i+1]+df_global['avg_temp'][i+2]+df_global['avg_temp'][i+3]+df_global['avg_temp'][i+4]+df_global['avg_temp'][i+5]+df_global['avg_temp'][i+6])\n    ma_temp_global.append(round(average\/7,2))\n    ma_temp_year_global.append(df_global['year'][i+6])\n    \n#print(ma_temp_year,ma_temp_global)","90970db5":"plt.plot(ma_temp_year_city,ma_temp_city,color='green')\nplt.plot(ma_temp_year_global,ma_temp_global,color='orange')\nplt.xlabel('Years')\nplt.ylabel('Temperature $^\\circ$C')\nplt.title('Berlin vs Global Avg Temperature 1750 to 2013 ')\nplt.legend(['Berlin','Global'])\nplt.show()","c62e5399":"list1, list2 = (list(t) for t in zip(*sorted(zip(ma_temp_global, ma_temp_year_city))))\n\nplt.plot(ma_temp_year_city,ma_temp_city,color='green')\nplt.plot(ma_temp_year_global,ma_temp_global,color='orange')\nplt.plot(list2[0],list1[0],'b*')\nplt.xlabel('Years')\nplt.ylabel('Temperature $^\\circ$C')\nplt.title('Berlin vs Global Avg Temperature 1750 to 2013 ')\nplt.legend(['Berlin','Global','Global lowest temp '+str(list1[0])+' in '+str(list2[0])])\nplt.show()","8dbdce25":"list1, list2 = (list(t) for t in zip(*sorted(zip(ma_temp_global, ma_temp_year_city),reverse=True)))\n\nplt.plot(ma_temp_year_city,ma_temp_city,color='green')\nplt.plot(ma_temp_year_global,ma_temp_global,color='orange')\nplt.plot(list2[0],list1[0],'r*')\nplt.xlabel('Years')\nplt.ylabel('Temperature $^\\circ$C')\nplt.title('Berlin vs Global Avg Temperature 1750 to 2013 ')\nplt.legend(['Berlin','Global','Global highest Temp '+str(list1[0])+' in '+str(list2[0])])\nplt.show()","58b3d4a7":"**1. Problem Statment**\n\nIn the field of data analysis data of specific domains plays an important role to make a decision. The data of a domain like the temperature of local territory and temperature of global for a specific period of time carry a few valuable insights. The project Explore Weather Trends provide such type of data and ask to find out that insight and depict meaningful figures, observations accordingly.\n\n**2. Project Outline**\n\nProject outline means overall steps were taken to accomplish the job by following scientific ways are given below:\n\n* To process and visualize the data few technologies, tools and libraries have been used. Those are python 3.5, SQL, pandas, matplotlib and, spyder3.\n\n* Collection of data from a given workspace using SQL queries. SQL queries retrieve the data of the nearest big city, i.e. Berlin, and the whole world from the year 1750 to 2013.\n* Read data from the CSV file using pandas.\n* Calculate the Moving Average of the nearest big city and global temperature using the formula :\n \n MA = (ai + ai+1 + ai+2 + ai+3 + ai+4 + ai+5 + ai+6) \/ m\n\n where a = temperature; i = 0; 1; 2.........n; m = number of examples taken\n \n* Draw two line charts, one for the city, another one for the world, in a single figure to give more insight using the tool matplotlib."}}