{"cell_type":{"d5443ccb":"code","2b012cca":"code","f5810cb4":"code","73f4d42a":"code","80647675":"code","0ab56397":"code","39f88a66":"code","ce168d41":"code","523340ef":"code","542dca6a":"code","78caded2":"code","bb2e67f7":"code","132aa4af":"code","df0fd942":"code","d54f0b27":"code","d2ed4312":"code","03e89766":"code","1f39c2ac":"code","2d4826a5":"code","d793f08a":"code","ce81941a":"code","24f14027":"code","e565ddba":"code","5fe57a93":"code","1a1b6531":"code","f63db015":"code","3823043d":"code","a157929c":"code","0e5c4cd4":"code","ad4d5764":"code","7880c0c5":"code","7cf802a9":"code","4928d3ec":"code","7156901e":"code","3793a8e2":"code","42f4da57":"code","49f605e0":"code","5dfa0e74":"code","257e4c01":"code","7b48f914":"code","5672534b":"code","02bfa8ee":"code","0923ca6e":"code","e8424a1e":"markdown","8ced55b3":"markdown","65257edb":"markdown","f7071135":"markdown","bb07b78c":"markdown","e6d13c7f":"markdown","18320fa2":"markdown","91e2aad8":"markdown","60fafc9c":"markdown","e0803185":"markdown","7fb76d32":"markdown","9930dd7b":"markdown","cd07abf1":"markdown","61edc660":"markdown","86c8c02c":"markdown","ceec822c":"markdown","2c88f66c":"markdown","1bcca118":"markdown","90950e5f":"markdown","fd87f1a8":"markdown","19308e33":"markdown","1260f609":"markdown","e3d6f4d2":"markdown","675d5d21":"markdown","7a679556":"markdown","9d279443":"markdown"},"source":{"d5443ccb":"#\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\nimport pandas as pd\nimport numpy as np\n\n#\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043b\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2b012cca":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","f5810cb4":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head()","73f4d42a":"train.describe(include=\"all\").round()","80647675":"train.isna().sum()","0ab56397":"# C\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u043e\u043d \u0432\u044b\u0433\u044f\u043b\u0434\u0438\u0442\nscraped_age = pd.read_csv('..\/input\/scraped-age\/scraped_age.csv')\nscraped_age.tail(3)","39f88a66":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a train \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0437\u044f\u043b\u0438 \u0438\u0437 \u0412\u0438\u043a\u0438\u043f\u0435\u0434\u0438\u0438\ntrain = train.merge(scraped_age, on='Name', how='left')\n\n# \u0417\u0430\u043f\u043e\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Age \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 scraped_age\ntrain['Age'] = train['Age'].fillna(train['Age_full'])\n\n# \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u0442.\u043a. \u043e\u043d\u0430 \u043d\u0430\u043c \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u0430\ntrain = train.drop(['Age_full'], axis = 1)","ce168d41":"test.isna().sum()","523340ef":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0437\u044f\u043b\u0438 \u0432 \u0412\u0438\u043a\u0438\u043f\u0435\u0434\u0438\u0438\ntest = test.merge(scraped_age, on='Name', how='left')\n\n# \u0417\u0430\u043f\u043e\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Age \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 scraped_age\ntest['Age'] = test['Age'].fillna(test['Age_full'])\n\n# \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u0442.\u043a. \u043e\u043d\u0430 \u043d\u0430\u043c \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u0430 \u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0438\u0435 \u043f\u0440\u0438 \u0434\u0436\u043e\u0439\u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\ntest = test.drop(['Age_full'], axis = 1)\ntest = test.drop_duplicates()","542dca6a":"# \u0417\u0430\u0434\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 + \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u0438\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\nfig, ax = plt.subplots(1, 2,figsize=(15,5))\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \"\u0431\u0443\u043b\u0435\u0432\u0443\u044e\" \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u043b\u0438\u044f\u0435\u0442 \u043b\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u0430\u044e\u0442\u0435 \u043a\u0430\u043a-\u0442\u043e \u043d\u0430 \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c\ntrain[\"CabinBool\"] = train[\"Cabin\"].notnull().astype('int')\ntest[\"CabinBool\"] = test[\"Cabin\"].notnull().astype('int')\nsns.barplot(x=\"CabinBool\", y=\"Survived\", data=train,ax=ax[0])\n\n# \u0421\u0442\u0440\u043e\u0438\u043c \u043a\u0430\u0443\u043d\u0442\u043f\u043b\u043e\u0442 \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0442\u0435\u043e\u0440\u0438\u044e \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u0430\u044e\u0442\u0430\u0445 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0443 \u0431\u043e\u043b\u0435\u0435 \u0431\u0435\u0434\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430\nsns.countplot(x=\"Pclass\", data=train[train.CabinBool == 0], ax=ax[1])\nplt.show()","78caded2":"train = train.drop(['Cabin'], axis = 1)\ntest = test.drop(['Cabin'], axis = 1)","bb2e67f7":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u0432 \u043a\u0430\u043a\u043e\u043c \u043f\u043e\u0440\u0442\u0443 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u0441\u0435\u043b\u043e \u043b\u044e\u0434\u0435\u0439\nsns.countplot(x=\"Embarked\", data=train)\nplt.show()","132aa4af":"# \u0420\u0430\u0437 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 \u0441\u0435\u043b\u0438 \u0432 Southampton (S), \u0442\u043e \u0438\u043c \u0436\u0435 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c.\ntrain = train.fillna({\"Embarked\": \"S\"})","df0fd942":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0443 \u043a\u043e\u0433\u043e \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0431\u0438\u043b\u0435\u0442\u0430\nfare_check = test[test['Fare'].isnull()]\nfare_check","d54f0b27":"# \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430 \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0438\u043b\u0435\u0442\u0430 \u0442\u043e\u0433\u043e \u0436\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 (3-\u0433\u043e)\nmean_fare = round(test[test.Pclass == 3].Fare.mean(), 4)\ntest = test.fillna({\"Fare\": mean_fare})","d2ed4312":"train.isna().sum()","03e89766":"test.isna().sum()","1f39c2ac":"fig, ax = plt.subplots(1, 6,figsize=(30,5))\nsns.barplot(x=\"Pclass\", y=\"Survived\", data=train, ax=ax[0]).set_title('Class')\nsns.barplot(x=\"Sex\", y=\"Survived\", data=train, ax=ax[1]).set_title('Sex')\nsns.barplot(x=\"SibSp\", y=\"Survived\", data=train, ax=ax[2]).set_title('# of siblings \/ spouses aboard')\nsns.barplot(x=\"Parch\", y=\"Survived\", data=train, ax=ax[3]).set_title('# of parents \/ children aboard')\nsns.barplot(x=\"Embarked\", y=\"Survived\", data=train, ax=ax[4]).set_title('Port of Embarkation')\nsns.countplot(x=\"Survived\", data=train, ax=ax[5]).set_title('# of people survived \/ died')\nplt.show()","2d4826a5":"plt.figure(figsize=(20,5))\n\n# \u0414\u0435\u043b\u0438\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442 (\u043a\u043e\u043d\u0442\u0438\u043d\u0443\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f) \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438\nbins = [-0.5, 5, 12, 18, 24, 35, 60, np.inf]\nlabels = ['Baby', 'Child', 'Teenager', 'Student', 'Young Adult', 'Adult', 'Senior']\ntrain['Age_Group'] = pd.cut(train[\"Age\"], bins, labels = labels)\ntest['Age_Group'] = pd.cut(test[\"Age\"], bins, labels = labels)\n\n# \u0420\u0438\u0441\u0443\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u044b\u043c \u0433\u0440\u0443\u043f\u043f\u0430\u043c\nsns.barplot(x=\"Age_Group\", y=\"Survived\", data=train)\nplt.show()","d793f08a":"train.head(3)","ce81941a":"test.head(3)","24f14027":"# \u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0431\u0438\u043b\u0435\u0442\u0430 \u0432\u0440\u044f\u0434 \u043b\u0438 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u0441 \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u044f\u0435\u043c.\ntrain = train.drop(['Ticket'], axis = 1)\ntest = test.drop(['Ticket'], axis = 1)\n\n# ID \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0432 train \u0442\u043e\u0436\u0435 \u0432\u0440\u044f\u0434 \u043b\u0438 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u044f\u0435\u043c.\n# \u0412 test \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c, \u0442\u0430\u043a \u043a\u0430\u043a ID'\u0448\u043d\u0438\u043a\u0438 \u043f\u043e\u0442\u043e\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u044f\u0442\u0441\u044f \u043d\u0430\u043c \u0432 \u0438\u0442\u043e\u0433\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u0441\u0430\u0431\u043c\u0438\u0442\u0438\u0442\u044c.\ntrain = train.drop(['PassengerId'], axis = 1)","e565ddba":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u0443\u044e \u0433\u0440\u0443\u043f\u043f\u0443 \u0438\u0437 \u043e\u0431\u043e\u0438\u0445 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432\ncombine = [train, test]\n\n# \u0414\u043e\u0441\u0442\u0430\u0435\u043c \u0433\u043e\u043d\u043e\u0440\u0430\u0442\u0438\u0432 \u0438\u0437 \u0438\u043c\u0435\u043d \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0432 \u043e\u0431\u043e\u0438\u0445 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\u0445 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443\nfor dataset in combine:\n    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u0432\u044b\u0442\u0430\u0449\u0438\u043b\u0438 \u0438 \u043a\u0430\u043a \u043e\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u043e\u0441\u044c \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u043e\u043b\u0430\npd.crosstab(train['Title'], train['Sex'])","5fe57a93":"# \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0433\u043e\u043d\u043e\u0440\u0430\u0442\u0438\u0432\u044b \u0432 \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0443\u043f\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0443 \u043a\u043e\u0433\u043e \u0431\u044b\u043b \u0431\u043e\u043b\u044c\u0448\u0435 \u0448\u0430\u043d\u0441 \u0432\u044b\u0436\u0438\u0442\u044c\nfor dataset in combine:\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n    \ntrain[['Title', 'Survived']].groupby(['Title'], as_index=False)\\\n                            .mean()\\\n                            .round(2)\\\n                            .sort_values(by='Survived', ascending=False)","1a1b6531":"# \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u043a\u0441\u0442 \u0432 \u0447\u0438\u0441\u043b\u0430\ntitle_map = {\"Mrs\": 1, \"Miss\": 2, \"Master\": 3, \"Rare\": 4, \"Mr\": 5}\nfor dataset in combine:\n    dataset['Title'] = dataset['Title'].map(title_map)\n    dataset['Title'] = dataset['Title'].fillna(0)\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 '\u0418\u043c\u044f', \u0442.\u043a. \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u043d \u043d\u0430\u043c \u0443\u0436\u0435 \u043d\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f.\ntrain = train.drop(['Name'], axis = 1)\ntest = test.drop(['Name'], axis = 1)\n\n# \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c\ntrain.head(3)","f63db015":"test.head(3)","3823043d":"# \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0447\u0438\u0441\u043b\u0430\nage_map = {'Baby': 1, 'Child': 2, 'Teenager': 3, 'Student': 4, 'Young Adult': 5, 'Adult': 6, 'Senior': 7}\ntrain['Age_Group'] = train['Age_Group'].map(age_map)\ntest['Age_Group'] = test['Age_Group'].map(age_map)\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 '\u0412\u043e\u0437\u0440\u0430\u0441\u0442', \u0442.\u043a. \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u043d \u043d\u0430\u043c \u0443\u0436\u0435 \u043d\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f.\ntrain = train.drop(['Age'], axis = 1)\ntest = test.drop(['Age'], axis = 1)","a157929c":"# \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e\nsex_map = {\"male\": 0, \"female\": 1}\ntrain['Sex'] = train['Sex'].map(sex_map)\ntest['Sex'] = test['Sex'].map(sex_map)","0e5c4cd4":"# \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0440\u0442\u044b \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\nembarked_map = {\"S\": 1, \"C\": 2, \"Q\": 3}\ntrain['Embarked'] = train['Embarked'].map(embarked_map)\ntest['Embarked'] = test['Embarked'].map(embarked_map)","ad4d5764":"train['Fare_Group'] = pd.cut(train[\"Fare\"], 4)\ntrain[['Fare_Group','Survived']].groupby(['Fare_Group'], as_index=False)\\\n                                .mean()\\\n                                .sort_values(by='Fare_Group', ascending=True)\\\n                                .round(2)","7880c0c5":"# \u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0432\u044b\u0448\u0435 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430\u043c \u043d\u043e\u043c\u0435\u0440\u0430 \u043e\u0442 1 \u0434\u043e 4\nbins = [-1, 128.082, 256.165, 384.247, 512.330]\nlabels = [1, 2, 3, 4]\ntrain['Fare_Group'] = pd.cut(train[\"Fare\"], bins, labels = labels)\ntest['Fare_Group'] = pd.cut(test[\"Fare\"], bins, labels = labels)\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 'Fare', \u0442.\u043a. \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u043d \u043d\u0430\u043c \u0443\u0436\u0435 \u043d\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f.\ntrain = train.drop(['Fare'], axis = 1)\ntest = test.drop(['Fare'], axis = 1)","7cf802a9":"train.head(3)","4928d3ec":"test.head(3)","7156901e":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\npredictors = train.drop(\"Survived\", axis=1)\ntarget = train[\"Survived\"]\nx_train, x_val, y_train, y_val = train_test_split(predictors, target, test_size = 0.20, random_state = 0)","3793a8e2":"# Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\n\nlogreg = LogisticRegression()\nlogreg.fit(x_train, y_train)\ny_pred = logreg.predict(x_val)\nacc_logreg = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_logreg)","42f4da57":"# KNN or k-Nearest Neighbors\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier()\nknn.fit(x_train, y_train)\ny_pred = knn.predict(x_val)\nacc_knn = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_knn)","49f605e0":"# Support Vector Machines\nfrom sklearn.svm import SVC\n\nsvc = SVC()\nsvc.fit(x_train, y_train)\ny_pred = svc.predict(x_val)\nacc_svc = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_svc)","5dfa0e74":"# Gaussian Naive Bayes\nfrom sklearn.naive_bayes import GaussianNB\n\ngaussian = GaussianNB()\ngaussian.fit(x_train, y_train)\ny_pred = gaussian.predict(x_val)\nacc_gaussian = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_gaussian)","257e4c01":"# Decision Tree\nfrom sklearn.tree import DecisionTreeClassifier\n\ndecisiontree = DecisionTreeClassifier()\ndecisiontree.fit(x_train, y_train)\ny_pred = decisiontree.predict(x_val)\nacc_decisiontree = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_decisiontree)","7b48f914":"# Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\n\nrandomforest = RandomForestClassifier()\nrandomforest.fit(x_train, y_train)\ny_pred = randomforest.predict(x_val)\nacc_randomforest = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_randomforest)","5672534b":"# Perceptron\nfrom sklearn.linear_model import Perceptron\n\nperceptron = Perceptron()\nperceptron.fit(x_train, y_train)\ny_pred = perceptron.predict(x_val)\nacc_perceptron = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_perceptron)","02bfa8ee":"models = pd.DataFrame({\n    'Model': ['Logistic Regression', 'KNN', 'Support Vector Machines', 'Gaussian Naive Bayes', 'Decision Tree', 'Random Forest', 'Perceptron'],\n    'Score': [acc_logreg, acc_knn, acc_svc, acc_gaussian, acc_decisiontree, acc_randomforest, acc_perceptron]})\nmodels.sort_values(by='Score', ascending=False)","0923ca6e":"# C\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441 ID \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0438\u0437 test \u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e\nID = test['PassengerId']\npredictions = gaussian.predict(test.drop('PassengerId', axis=1))\n\n# \u0412 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c output \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0448\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 csv-\u0444\u0430\u0439\u043b\noutput = pd.DataFrame({'PassengerId' : ID, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","e8424a1e":"**\u041d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u044f:**\n* **Pclass** - \u041b\u044e\u0434\u0438 \u0438\u0437 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0438\u043c\u0435\u044e\u0442 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c (\u043e\u043a\u043e\u043b\u043e 63%).\n* **Sex** - \u0416\u0435\u043d\u0449\u0438\u043d\u044b \u0438\u043c\u0435\u043b\u0438 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0448\u0430\u043d\u0441 (\u043e\u043a\u043e\u043b\u043e 74%) \u043d\u0430 \u0432\u044b\u0436\u0438\u0432\u0430\u043d\u0438\u0435, \u0447\u0435\u043c \u043c\u0443\u0436\u0447\u0438\u043d\u044b.\n* **SibSp** - \u0427\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0443 \u0442\u0435\u0431\u044f \u0440\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u043e\u0432, \u0442\u0435\u043c \u043c\u0435\u043d\u044c\u0448\u0435 \u0448\u0430\u043d\u0441 \u043d\u0430 \u0432\u044b\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u041d\u0438\u0437\u043a\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0443 \u043b\u044e\u0434\u0435\u0439 \u0431\u0435\u0437 \u0440\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u043e\u0432, \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u0435\u043c, \u0447\u0442\u043e \u0432 \u043e\u0434\u0438\u043d\u043e\u0447\u043a\u0443 \u043f\u043e \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 \u043c\u0443\u0436\u0447\u0438\u043d\u044b.\n* **Parch** - \u041b\u044e\u0434\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u0442\u044b\u0440\u0435\u0445\/\u043f\u044f\u0442\u0438 \u0434\u0435\u0442\u0435\u0439 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443 \u0432\u044b\u0436\u0438\u0432\u0443\u0442 \u0441 \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c\u044e. \u041a\u0430\u043a \u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435,  \u0443 \u043b\u044e\u0434\u0435\u0439, \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u043e\u0434\u0438\u043d\u043e\u0447\u043a\u0443, \u043c\u0435\u043d\u044c\u0448\u0435 \u0448\u0430\u043d\u0441\u043e\u0432 \u0432\u044b\u0436\u0438\u0442\u044c, \u0447\u0435\u043c \u0443 \u043b\u044e\u0434\u0435\u0439 \u0441 1\u20133 \u0434\u0435\u0442\u044c\u043c\u0438. \n* **Embarked** - \u041a\u0430\u043a \u043d\u0438 \u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u043d\u043e \u043f\u043e\u0445\u043e\u0436\u0435 \u0447\u0442\u043e \u0443 \u043b\u044e\u0434\u0435\u0439 \u0441\u0435\u0432\u0448\u0438\u0445 \u0432 Cherbourg (C) \u0448\u0430\u043d\u0441 \u0432\u044b\u0436\u0438\u0442\u044c (\u043e\u043a\u043e\u043b\u043e 55%) \u0431\u044b\u043b \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u0443 \u043b\u044e\u0434\u0435\u0439 \u0441\u0435\u0432\u0448\u0438\u0445 \u0432 \u0434\u0432\u0443\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u043e\u0440\u0442\u0430\u0445.\n* \u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043b\u044e\u0434\u0435\u0439 \u043f\u043e\u0433\u0438\u0431\u043b\u0430, \u0432\u044b\u0436\u0438\u043b\u0438 \u043b\u0438\u0448\u044c \u043e\u043a\u043e\u043b\u043e 39% \u043b\u044e\u0434\u0435\u0439.\n\n**\u041e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0438\u043c Age, \u0442\u0430\u043a \u043a\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0442\u0430\u043c \u0447\u0442\u043e-\u0442\u043e \u0432\u043d\u044f\u0442\u043d\u043e\u0435 \u043d\u0430\u0434\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435.**","8ced55b3":"**\u0420\u0435\u0448\u0430\u0435\u043c \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u043a\u0430\u0431\u0438\u043d\u044b \/ \u043a\u0430\u044e\u0442\u044b \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432**\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043d\u0435\u0442 \u0434\u043b\u044f 687 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 (77% \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430). \u042d\u0442\u043e \u043c\u043d\u043e\u0433\u043e.\n\n\u0415\u0441\u043b\u0438 \u0442\u0435\u043e\u0440\u0438\u044f \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u043a\u0430\u044e\u0442 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0442 \u0443 \u0431\u043e\u043b\u0435\u0435 \u0431\u0435\u0434\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 (Ticket class), \u0442\u043e \u0434\u0443\u043c\u0430\u044e \u0447\u0442\u043e \u043c\u044b \u044d\u0442\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0434\u0430\u043b\u0438\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u044e, \u0447\u0442\u043e \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u044e\u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0442\u0435\u0441\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u043d \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043c\u0435.","65257edb":"\u0414\u0435\u0442\u0438 \u0432 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u0434\u043e 5 \u043b\u0435\u0442 \u0438\u043c\u0435\u043b\u0438 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0448\u0430\u043d\u0441 \u0432\u044b\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043f\u0440\u0438\u043a\u0430\u0437 [\u00ab\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0436\u0435\u043d\u0449\u0438\u043d\u044b \u0438 \u0434\u0435\u0442\u0438\u00bb](https:\/\/en.wikipedia.org\/wiki\/Women_and_children_first).","f7071135":"* \u0423 \u043d\u0430\u0441 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u0434\u043b\u044f 177 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432. \u042d\u0442\u043e \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u043a\u0430\u043a-\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0442\u043e\u0447\u043d\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0432\u044b\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043f\u0440\u0438\u043a\u0430\u0437 \u043a\u0430\u043f\u0438\u0442\u0430\u043d\u0430 \u0422\u0438\u0442\u0430\u043d\u0438\u043a\u0430 \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0448\u043b\u044e\u043f\u043e\u043a \u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0436\u0435\u043d\u0449\u0438\u043d\u0430\u043c\u0438 \u0438 \u0434\u0435\u0442\u044c\u043c\u0438 (\u0441\u043f\u0430\u0441\u0438\u0431\u043e Wiki). \u0423\u0434\u0430\u043b\u044f\u0442\u044c \u044d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u044f \u0431\u044b \u043d\u0435 \u0441\u0442\u0430\u043b, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043a\u0440\u0443\u043f\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (\u043e\u043a\u043e\u043b\u043e 20%).\n* \u0422\u0430\u043a\u0436\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u043a\u0430\u0431\u0438\u043d\u044b \/ \u043a\u0430\u044e\u0442\u044b \u0434\u043b\u044f 687 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432. \u041f\u043e\u0447\u0438\u0442\u0430\u0432 \u0444\u043e\u0440\u0443\u043c\u044b Keggle, \u043d\u0430\u0448\u0435\u043b \u0442\u0435\u043e\u0440\u0438\u044e \u0447\u0442\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u043a\u0430\u044e\u0442 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0442 \u0443 \u0431\u043e\u043b\u0435\u0435 \u0431\u0435\u0434\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 (Ticket class). \u041d\u0438\u0436\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0438 \u043f\u043e\u0442\u043e\u043c \u0440\u0435\u0448\u0438\u043c \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c.\n* \u041e\u0442\u0441\u0443\u0441\u0442\u0432\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u0440\u0442\u0435 \u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0438 \u0434\u043b\u044f 2-\u0445 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0443\u043c\u0430\u044e \u0447\u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 \u043a\u0430\u043a\u043e\u0435-\u043d\u0438\u0431\u0443\u0434\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n","bb07b78c":"**\u041f\u0440\u0438\u0437\u043d\u0430\u043a Age_Group**","e6d13c7f":"**\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430 \u0432\u044b\u0436\u0438\u0432\u0448\u0438\u0445 \u043d\u0430 \u0422\u0438\u0442\u0430\u043d\u0438\u043a\u0435**\n\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u043e\u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f\u0445 Kaggle :)\n\n**\u0426\u0435\u043b\u044f\u043c\u0438 \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:**\n1. \u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043a\u0430 \u0432\u043e\u0440\u043a\u0444\u043b\u043e\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n2. \u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c Kaggle \u0438 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u043c\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0439\n3. \u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e \u0441 ML \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044f\u043c\u0438 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043d\u0438\u0445\n\n**\u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b** - \u0437\u043d\u0430\u044f \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 **train** \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0438\u0445 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u0438 \u043f\u043e\u0433\u0438\u0431\u043b\u0438 \u043e\u043d\u0438 \u0438\u043b\u0438 \u043d\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0430 \u0432\u044b\u0436\u0438\u043b \u0438\u043b\u0438 \u043f\u043e\u0433\u0438\u0431 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440 \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 **test**.\n\n[\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f](https:\/\/www.kaggle.com\/c\/titanic).\n\n\u0418\u0442\u0430\u043a, \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c)\n","18320fa2":"# 8. \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","91e2aad8":"\u0421\u0440\u0430\u0432\u043d\u0438\u043c\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b","60fafc9c":"# 1. \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0433\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445","e0803185":"# 2. \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n**\u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 age, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 177 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u044b\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0438\u0445 \u044d\u0442\u043e:**\n1. \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u0443\u044e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u0443\u044e \u0433\u0440\u0443\u043f\u043f\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0433\u043e\u043d\u043e\u0440\u0430\u0442\u0438\u0432\u043e\u0432 (Mr, Mrs, Miss \u0438 \u0442.\u043f.)\n2. \u0412\u0437\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043a\u0430\u043a\u043e\u0433\u043e-\u043d\u0438\u0431\u0443\u0434\u044c \u0441\u0430\u0439\u0442\u0430, \u0433\u0434\u0435 \u043e\u043d\u0438 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u0432\u0438\u0434\u0435 (\u043d\u0443 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043b\u043d\u043e\u043c)\n\n\n\u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0445\u043e\u0442\u044c \u0438 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0441\u043f\u043e\u0440\u0442\u0438\u0432\u0435\u043d, \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438 \u0441\u043e\u0432\u0435\u0440\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u043d\u043e \u0435\u0433\u043e. \u0422\u0430\u043a \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u043d\u0438\u0440\u0443\u0435\u043c \u0432\u0435\u0431-\u0441\u043a\u0440\u0435\u0439\u043f\u0438\u043d\u0433. \u0414\u043e\u0441\u0442\u0430\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u043e \u0441 https:\/\/en.wikipedia.org\/wiki\/Passengers_of_the_Titanic.\n\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 Kaggle \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 BeautifulSoup, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0435\u0431-\u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u043e \u0432\u043e\u0442 [\u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u0434 \u0441 github](https:\/\/nbviewer.jupyter.org\/github\/NikitaVhr\/Training-public-\/blob\/2a78fa39e9336f073d4364c16c6921e26c923210\/Code%20for%20Wiki%20Scraping.ipynb), \u0438\u0442\u043e\u0433\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0442\u0430\u043b \u0434\u0430\u0442\u0430\u0441\u0435\u0442 **scraped_age**. \u041e\u0434\u043d\u0430\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u0437\u044f\u0442\u044c \u0438 \u0441\u0434\u0436\u043e\u0439\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u0437\u0434\u0435\u0441\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u043e\u043a\u0430 \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u043e \u0442\u043e\u0439 \u043f\u0440\u0438\u0447\u0438\u043d\u0435, \u0447\u0442\u043e \u043a\u043b\u044e\u0447 (\u0438\u043c\u044f), \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u044f \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043b \u0438\u0445 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c, \u0443 \u043c\u043d\u043e\u0433\u0438\u0445 \u043b\u044e\u0434\u0435\u0439 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f. \u0422\u0430\u043a, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0441 \u0438\u043c\u0435\u043d\u0435\u043c ***Moran, Mr. James*** \u0432 \u043e\u0434\u043d\u043e\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u043a\u0430\u043a ***Moran, Mr. Daniel James*** \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 Wikipedia.\n\n\u0420\u0435\u0448\u0438\u0442\u044c \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u043f\u043e\u043c\u043e\u0433 Excel, \u0430 \u0442\u043e\u0447\u043d\u0435\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f vlookup, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0435\u0441\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u043f\u043e\u0434\u0442\u044f\u043d\u0443\u0442\u044c \u043a\u0430\u043a \u0442\u043e\u0447\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0442\u0430\u043a \u0438 \u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435.\n\u0412 \u0438\u0442\u043e\u0433\u0435, \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439 \u0441\u044e\u0434\u0430, **scraped_age** \u0431\u044b\u043b \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u043d \u0432 Excel \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n1. \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0438\u043c\u0435\u043d\u0430 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446 train \u0438 test, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0434\u0438\u043d\u0443\u044e \u043f\u043e\u043b\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432\n2. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043a \u0438\u043c\u0435\u043d\u0430\u043c \u0431\u0435\u0437 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430 \u043f\u043e\u0434\u0442\u044f\u043d\u0443\u0442\u044b \u0412\u041f\u0420'\u043e\u043c \u0442\u043e\u0447\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441 Wiki\n3. \u0417\u0430\u0442\u0435\u043c \u043a \u043e\u0441\u0442\u0430\u0448\u0438\u043c\u0441\u044f \u0438\u043c\u0435\u043d\u0430\u043c \u0431\u0435\u0437 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430 \u043f\u043e\u0434\u0442\u044f\u043d\u0443\u0442\u044b \u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f c Wiki\n\n\u041f\u043e\u0441\u043b\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0448\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442 **scraped_age** \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f 1308 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0431\u044b\u043b \u0443\u043a\u0430\u0437\u0430\u043d \u0432\u043e\u0437\u0440\u0430\u0441\u0442.","7fb76d32":"# 5. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u043e\u043a\u0430 \u043c\u043e\u0438 \u0437\u043d\u0430\u043d\u0438\u044f \u043e ML \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0436\u0435\u043b\u0430\u0442\u044c \u043b\u0443\u0447\u0448\u0435\u0433\u043e, \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a [\u0440\u0435\u0448\u0435\u043d\u0438\u044e \u0431\u043e\u043b\u0435\u0435 \u043e\u043f\u044b\u0442\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430](https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions), \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0434\u0430\u043b\u044c\u0448\u0435.\n\n\u0418\u0437 \u0432\u044b\u0448\u0435\u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u043e\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u043d\u044f\u043b, \u0447\u0442\u043e \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0445\u043e\u0440\u043e\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u0442\u0438\u043f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0438 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u043a \u0435\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044e.\n\u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e **\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438**, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 (\u0432\u044b\u0436\u0438\u043b \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0438\u043b\u0438 \u043d\u0435\u0442) \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \/ \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 (\u043f\u043e\u043b, \u0432\u043e\u0437\u0440\u0430\u0441\u0442, \u043f\u043e\u0440\u0442 \u0438 \u0442.\u0434). \u041f\u043e\u043c\u0438\u043c\u043e \u044d\u0442\u043e\u0433\u043e, \u0441\u0442\u043e\u0438\u0442 \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044c, \u0447\u0442\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c\u0430\u044f \u0437\u0434\u0435\u0441\u044c, \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f **\"\u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0441 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c\"**, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0445. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u044d\u0442\u0438 \u0434\u0432\u0430 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f - \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u0443\u0435\u043c\u043e\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043b\u044e\u0441 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435\u0435 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0434\u0435\u043b\u0438 (\u0441\u043f\u0438\u0441\u043e\u043a \u043e\u043f\u044f\u0442\u044c \u0436\u0435 \u0432\u0437\u044f\u0442 [\u0437\u0434\u0435\u0441\u044c](https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions)):\n* Logistic Regression\n* KNN or k-Nearest Neighbors\n* Support Vector Machines\n* Naive Bayes classifier\n* Decision Tree\n* Random Forrest\n* Perceptron\n\n\u041e\u0434\u043d\u0430\u043a\u043e, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043e\u0431\u0443\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0442.\u043a. \u044d\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \n\u0422\u0430\u043a\u0436\u0435, \u043f\u043e\u043c\u0438\u043c\u043e \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438, \u0432 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0440\u043e\u043b\u0438\u043a\u0435 \u043a \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044e, [\u0441\u043e\u0432\u0435\u0442\u0443\u044e\u0442](https:\/\/www.youtube.com\/watch?v=8yZMXCaFshs) \u043f\u043e\u044d\u043a\u0441\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0434\u0435\u0437\u0430\u0439\u043d\u0438\u0442\u044c \/ \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\n\n\u041a\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 Title \u0431\u044b\u043b \u0432\u0437\u044f\u0442 [\u0437\u0434\u0435\u0441\u044c](https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions).","9930dd7b":"# 3. \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0443 \u043a\u043e\u0433\u043e \u0431\u044b\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0448\u0430\u043d\u0441\u043e\u0432 \u0432\u044b\u0436\u0438\u0442\u044c","cd07abf1":"**\u041f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u044f:**\n* \u041a\u0430\u043a \u0438 \u0431\u044b\u043b\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438, \u0432\u0441\u0435\u0433\u043e \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 train \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e 891 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0435\n* \u0412\u0438\u0434\u0438\u043c \u0447\u0442\u043e \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 Age, Cabin \u0438 Embarked \u043d\u0435 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (count \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u0441\u0442\u0440\u043e\u043a \u043c\u0435\u043d\u044c\u0448\u0435 891). \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e **isna()**","61edc660":"\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u043e\u043d\u0438 \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0438 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 train.\\\nTest \u043f\u043e\u043a\u0430 \u043d\u0435 \u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0442.\u043a. \u0442\u0430\u043c \u043f\u043e \u0438\u0434\u0435\u0435 \u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e \u0438 \u0432 train, \u043d\u043e \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u044b\u0436\u0438\u043b \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0438\u043b\u0438 \u043f\u043e\u0433\u0438\u0431.","86c8c02c":"**\u041f\u0440\u0438\u0437\u043d\u0430\u043a Sex**","ceec822c":"**\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438, \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u043c\u043e\u0433\u043b\u043e \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0447\u0442\u043e \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442**\n* https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\n* https:\/\/www.kaggle.com\/nadintamer\/titanic-survival-predictions-beginner\/comments","2c88f66c":"\u041f\u043e\u0441\u043a\u043e\u043b\u043a\u044c\u043a\u0443 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0435\u0449\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 test, \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0433\u043e \u0438 \u0434\u0435\u043b\u0430\u0435\u043c \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e \u0438 \u0434\u043b\u044f train.","1bcca118":"**\u041f\u0440\u0438\u0437\u043d\u0430\u043a Embarked**","90950e5f":"# 4. \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0432 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0438 \u0438\u0437\u0443\u0447\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u043c \u043d\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u044f\u0442\u0441\u044f \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c.","fd87f1a8":"# 7. \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c\n\u0421\u043f\u0438\u0441\u043e\u043a \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438\u0441\u044c \u0440\u0430\u043d\u0435\u0435:\n* Logistic Regression\n* KNN or k-Nearest Neighbors\n* Support Vector Machines\n* Naive Bayes\n* Decision Tree\n* Random Forrest\n* Perceptron\n\n\u0414\u0430\u0442\u0430\u0441\u0435\u0442 train \u043c\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438 (80% \u0438 20%) \u0438 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0443\u044e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0435\u0439. ","19308e33":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u044b \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u0438 \u0438\u0434\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435)","1260f609":"* \u041f\u043e\u0445\u043e\u0436\u0435, \u0442\u0435\u043e\u0440\u0438\u044f \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043b\u044e\u0434\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u0430\u044e\u0442\u0430\u0445 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442, \u0431\u044b\u043b\u0438 \u0438\u0437 \u0431\u043e\u043b\u0435\u0435 \u0431\u0435\u0434\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u043b\u0430\u0441\u044c. \u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043b\u044e\u0434\u0435\u0439 \u0431\u0435\u0437 \u043d\u043e\u043c\u0435\u0440\u0430 \u043a\u0430\u044e\u0442\u044b \u0431\u044b\u043b\u0430 \u0438\u0437 2-\u0433\u043e \u0438 3-\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430.\n* \u0422\u0443\u0442 \u0436\u0435 \u043e\u0442\u043c\u0435\u0447\u0443, \u0447\u0442\u043e \u0443 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u044e\u0442\u044b \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u044b\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0448\u0430\u043d\u0441\u043e\u0432 \u0432\u044b\u0436\u0438\u0442\u044c (\u043e\u043a\u043e\u043b\u043e 65%).\n* \u0412 \u0438\u0442\u043e\u0433\u0435 \u0440\u0435\u0448\u0430\u044e \u0447\u0442\u043e **\u043a\u043e\u043b\u043e\u043d\u043a\u0443 Cabin \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u0437 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u043e\u0432**, \u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0443\u044e CabinBool \u043e\u0441\u0442\u0430\u0432\u043b\u044e.\n","e3d6f4d2":"**\u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0434\u0430\u043d\u043d\u044b\u0435**","675d5d21":"**\u041f\u0440\u0438\u0437\u043d\u0430\u043a Fare**\n\n\n\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0432 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e \u0442\u043e\u043c\u0443 \u0436\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443 \u0447\u0442\u043e \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u0432 \u043e\u0442\u0434\u0430\u0434\u0438\u043c pandas'\u0443. ","7a679556":"# 6. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0432\u0430\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","9d279443":"**\u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u044b**\n\n\n\u041f\u043e\u043c\u043d\u0438\u043c, \u0447\u0442\u043e \u0432 **train** \u0443 \u043d\u0430\u0441 \u0435\u0449\u0435 \u043e\u0441\u0442\u0430\u043b\u0430\u0441\u044c \u043f\u0430\u0440\u0430 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 **Embarked**, \u0430 \u0432 **test** \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 **Fare**."}}