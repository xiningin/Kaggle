{"cell_type":{"c3aabfb8":"code","15752763":"code","b64c66e0":"code","4b1526cb":"code","1182ef27":"code","4fb6ddbc":"code","de61ac80":"code","8e1c8620":"code","dcb56916":"code","6a7cbfe6":"code","d38da318":"code","f1169a75":"code","53c6bc6d":"code","992f6d80":"code","7f73df4e":"code","84f4fb26":"code","62f00cc4":"code","8576feab":"code","05ec43a7":"code","cc5ec567":"code","d4ebb03f":"code","afae0a3c":"code","c44f03af":"code","fa85dfc5":"code","0b55adb9":"code","96884ecf":"code","cfa55cb1":"code","ac563a55":"code","28dbf7e5":"code","84cef9f1":"code","d88761e9":"code","29ea14e2":"code","6ebc3db9":"code","817112d1":"code","bddb77db":"code","31e74353":"code","01a2074d":"code","e49e3105":"code","9022c2d0":"code","2a00cbfe":"code","bebffe63":"code","4fa7b505":"code","8bfe8e20":"code","e8b1d5a0":"code","0d41450b":"code","8dc47a77":"code","20b73465":"code","c6abf8be":"code","96d3e759":"code","28c64396":"code","92f0a5a7":"code","93aa231f":"code","0d424557":"code","712208c9":"code","6da7e7c0":"code","7249d53b":"code","e8e2e184":"code","2128b5c8":"code","edc549a3":"code","8b7d6007":"code","344e63ae":"code","45244c39":"markdown","de3440f1":"markdown","6b80135d":"markdown","d4395c40":"markdown","07878e1c":"markdown","bddf363a":"markdown","1e17fd13":"markdown","2b8f5446":"markdown","27a284ab":"markdown","439a8c9d":"markdown","86d8c4ea":"markdown","b0398331":"markdown","d3a15fb9":"markdown","ac5eacab":"markdown","a3998c1f":"markdown","e8e94cad":"markdown","eaa67d61":"markdown","a9fa2955":"markdown","c408e8bd":"markdown","d2e9096f":"markdown","f81e54e7":"markdown","010ca784":"markdown","81f7c239":"markdown","0c26278b":"markdown"},"source":{"c3aabfb8":"import pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","15752763":"games = pd.read_csv(\"..\/input\/dota-2-matches\/players.csv\")\nhero_names = pd.read_csv(\"..\/input\/dota-2-matches\/hero_names.csv\")\nmatch_results = pd.read_csv(\"..\/input\/dota-2-matches\/match.csv\")\nitem_names = pd.read_csv(\"..\/input\/dota-2-matches\/item_ids.csv\")\npurchases = pd.read_csv(\"..\/input\/dota-2-matches\/purchase_log.csv\")\nplayer_ratings = pd.read_csv(\"..\/input\/dota-2-matches\/player_ratings.csv\")","b64c66e0":"games.head()","4b1526cb":"games.shape","1182ef27":"games.info()","4fb6ddbc":"games = games.fillna(0)","de61ac80":"games.info()","8e1c8620":"hero_names.head()","dcb56916":"hero_names.shape","6a7cbfe6":"hero_names.info()","d38da318":"match_results.head()","f1169a75":"match_results.shape","53c6bc6d":"match_results.info()","992f6d80":"item_names.head()","7f73df4e":"item_names.shape","84f4fb26":"item_names.info()","62f00cc4":"purchases.head()","8576feab":"purchases.shape","05ec43a7":"purchases.info()","cc5ec567":"player_ratings.head()","d4ebb03f":"player_ratings.shape","afae0a3c":"player_ratings.info()","c44f03af":"games = games.iloc[:,:39]","fa85dfc5":"hero_names = hero_names.iloc[:,-2:]","0b55adb9":"match_results = match_results.iloc[:,:10]","96884ecf":"player_ratings = player_ratings.iloc[:,:3]","cfa55cb1":"Dota = pd.merge(hero_names, games, how=\"left\", left_on=\"hero_id\", right_on=\"hero_id\")\nDota.head(10)","ac563a55":"Dota.tail(10)","28dbf7e5":"Dota.info()","84cef9f1":"Dota = Dota[Dota['match_id'].notna()]\nDota.info()","d88761e9":"Dota = pd.merge(match_results, Dota, how=\"left\", left_on=\"match_id\", right_on=\"match_id\")\nDota.head(10)","29ea14e2":"Dota.info()","6ebc3db9":"purchases = pd.merge(item_names, purchases, how=\"left\", left_on=\"item_id\", right_on=\"item_id\")\npurchases.head(10)","817112d1":"Dota.describe()","bddb77db":"Dota.iloc[:,:27].iloc[:,14:].describe()","31e74353":"Dota.iloc[:,33:].describe()","01a2074d":"Dota.match_id.nunique()","e49e3105":"Dota.account_id.nunique()","9022c2d0":"Dota.hero_id.nunique()","2a00cbfe":"Dota.localized_name.value_counts().head(10)","bebffe63":"Dota.localized_name.value_counts().tail(10)","4fa7b505":"fig,ax = plt.subplots(figsize=(25,10))\nDota['localized_name'].value_counts(sort=False).plot(kind='bar',ax=ax,rot =90)\nplt.title('Hero Distribution',fontsize=15)\nplt.xlabel('Heroes',fontsize=15)\nplt.ylabel('Frequency',fontsize=15)","8bfe8e20":"Dota.groupby(by = \"account_id\").sum().sort_values(by = \"kills\", ascending = False).kills.to_frame()","e8b1d5a0":"Dota.groupby(by = \"account_id\").mean().sort_values(by = \"kills\", ascending = False).kills.to_frame()","0d41450b":"Dota.groupby(by = \"localized_name\").mean().sort_values(by = \"kills\", ascending = False)","8dc47a77":"Dota.groupby(by = \"localized_name\").mean().sort_values(by = \"hero_damage\", ascending = False)","20b73465":"Dota.groupby(by = \"localized_name\").mean().sort_values(by = \"last_hits\", ascending = False)","c6abf8be":"Dota.groupby(by = \"localized_name\").mean().sort_values(by = \"gold_per_min\", ascending = False)","96d3e759":"len(match_results.loc[match_results.radiant_win == True])","28c64396":"len(match_results.loc[match_results.radiant_win == False])","92f0a5a7":"print('The number of wins are equal to each team? {}'.format(\n    round(len(match_results.loc[match_results.radiant_win == True])\/len(match_results.loc[match_results.radiant_win == False]), 1) == 1\n))\nprint('How much is this advantage ratio? {}%'.format(\n    round(len(match_results.loc[match_results.radiant_win == True])\/len(match_results.loc[match_results.radiant_win == False]) - 1, 3) * 100\n))","93aa231f":"y = match_results['radiant_win'].apply(lambda win: True if win else False)\nclasses = ['Dire Win', 'Radiant Win']\n_ = pd.Series(y).apply(lambda i: classes[i]).value_counts().plot(kind = 'bar')","0d424557":"X = [match_results.radiant_win[(match_results['radiant_win']==True)].count(),match_results.radiant_win[(match_results['radiant_win']==False)].count()]\nY = [\"RadiantWin\",\"DireWin\"]\nplt.pie(X, labels=Y, startangle=90, autopct='%.1f%%')\nplt.show()\nplt.ioff()","712208c9":"purchases.item_name.value_counts().to_frame().head(10)","6da7e7c0":"purchases.item_name.value_counts().to_frame().tail(10)","7249d53b":"fig,ax = plt.subplots(figsize=(30,20))\npurchases['item_name'].value_counts(sort=False).plot(kind='bar',ax=ax,rot =90)\nplt.title('Item Distribution',fontsize=15)\nplt.xlabel('Items',fontsize=15)\nplt.ylabel('Frequency',fontsize=15)","e8e2e184":"player_ratings.groupby(by = \"account_id\").mean().sort_values(by = \"total_wins\", ascending = False)","2128b5c8":"corrMatrix = Dota.corr()\nf, ax = plt.subplots(figsize=(40, 30))\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","edc549a3":"corrMatrix = games.corr()\nf, ax = plt.subplots(figsize=(25, 20))\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","8b7d6007":"corrMatrix = match_results.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","344e63ae":"corrMatrix = player_ratings.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","45244c39":"#### Veri setinde en az sat\u0131n al\u0131nan itemlar","de3440f1":"***\n***\n<div>\n<img src=\"attachment:DOTALOGO.png\" width=\"100\"\/>\n<\/div>\n\n\n# <font color=black>DOTA 2 VER\u0130 \u00c7ALI\u015eMASI<\/font>\n\n\n**Veri Seti :**[Kaggle Linki](https:\/\/www.kaggle.com\/devinanzelmo\/dota-2-matches?select=players.csv)\n\n***\n***","6b80135d":"#### Veri setindeki kahraman say\u0131s\u0131","d4395c40":"#### Radiant kazan\u0131lan ma\u00e7 say\u0131s\u0131","07878e1c":"#### Veri setinde en \u00e7ok sat\u0131n al\u0131nan itemlar","bddf363a":"#### Veri setinde en az oynanan kahramanlar","1e17fd13":"#### Ortalama en \u00e7ok hasar veren hero","2b8f5446":"#### Ma\u00e7 bilgisi bulunmayan hero bilgilerinin (null) silinmesi (Arc warden, underlord)","27a284ab":"#### Ortalama en \u00e7ok \u00f6ld\u00fcrmeye sahip hesap(account)","439a8c9d":"#### Veri setindeki ma\u00e7 say\u0131s\u0131","86d8c4ea":"#### Tablolardan kullan\u0131l\u0131cak kolonlar se\u00e7ilir","b0398331":"#### Dire kazan\u0131lan ma\u00e7 say\u0131s\u0131","d3a15fb9":"#### Ortalama en \u00e7ok dakika ba\u015f\u0131na para kazanan hero","ac5eacab":"#### Veriler de\u011fi\u015fkenlere atan\u0131r","a3998c1f":"#### Ortalama en \u00e7ok \u00f6ld\u00fcrmeye sahip hero","e8e94cad":"#### Ortalama en \u00e7ok son vuru\u015fa sahip hero","eaa67d61":"#### Null de\u011ferlere 0 atan\u0131r","a9fa2955":"#### Veri setindeki hesap(account) say\u0131s\u0131","c408e8bd":"#### Gerekli k\u00fct\u00fcphaneler eklenir\n","d2e9096f":"#### Korelasyon Matrisleri","f81e54e7":"#### Veri setinde en fazla oyun kazanm\u0131\u015f kullan\u0131c\u0131lar","010ca784":"#### En \u00e7ok toplam \u00f6ld\u00fcrmeye sahip hesap(account)\nacount_id = 0 account_id vermek istemeyen hesaplar i\u00e7in kullan\u0131lm\u0131\u015ft\u0131r.","81f7c239":"#### Veri setinde en \u00e7ok oynanan kahramanlar","0c26278b":"#### Kullan\u0131lacak tablolar birle\u015ftirilir"}}