{"cell_type":{"eae2b554":"code","04d78164":"code","a94c9aaf":"code","1cf944dc":"code","b0dee570":"code","6695b1f6":"code","37412ee8":"code","71c6cec0":"code","d348d86f":"code","fe4daa1a":"code","75d5a3b4":"code","a635dc4f":"code","5ddbf7d2":"code","a13aacf0":"code","e95de933":"code","1a10af64":"code","8fc38434":"code","cedcb5bd":"code","0f7f3b5e":"code","1e8c9fb8":"code","62f1fa84":"code","6490fa7f":"code","a56d747d":"code","e41ec6f9":"code","6a4c4fe3":"code","a86a813a":"code","e4ce7f4e":"code","275d4df4":"code","fdc50ea1":"code","95782a33":"code","e340bd74":"code","35a6a050":"code","65d7c52f":"code","7746a700":"code","c3eeb7ce":"code","155f99fd":"code","e3b47d91":"code","ba597372":"code","326fd061":"code","d94052a9":"code","86f24a6e":"code","172ae558":"code","8a252cc3":"code","48429bb3":"code","4a5729c5":"code","82e100c5":"markdown","5f0cbcf3":"markdown","ccecc697":"markdown","e51e7e08":"markdown","5c358506":"markdown","a5055d49":"markdown","b7d15ef6":"markdown","66c0202c":"markdown","8d215940":"markdown","e51d9826":"markdown"},"source":{"eae2b554":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfor dirname, _, filenames in os.walk('\/kaggle\/output'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","04d78164":"# Import modules\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score","a94c9aaf":"# Figures inline and set visualization style\n%matplotlib inline\nsns.set()","1cf944dc":"df_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf_gender = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","b0dee570":"df_train.head(2)","6695b1f6":"df_test.head(2)","37412ee8":"df_train.info()","71c6cec0":"df_train.describe()","d348d86f":"sns.countplot(x='Survived', data=df_train);","fe4daa1a":"df_test['Survived'] = 0","75d5a3b4":"sns.countplot(x='Survived', data=df_test);","a635dc4f":"df_test[['PassengerId', 'Survived']].to_csv('no_survivors.csv', index=False)","5ddbf7d2":"sns.countplot(x='Sex', data=df_train);","a13aacf0":"sns.factorplot(x='Survived', col='Sex', kind='count', data=df_train)","e95de933":"df_train.groupby(['Sex']).Survived.sum()","1a10af64":"print(df_train[df_train.Sex == 'female'].Survived.sum()\/df_train[df_train.Sex == 'female'].Survived.count())\nprint(df_train[df_train.Sex == 'male'].Survived.sum()\/df_train[df_train.Sex == 'male'].Survived.count())","8fc38434":"df_test['Survived'] = df_test.Sex == 'female'","cedcb5bd":"df_test['Survived']","0f7f3b5e":"df_test['Survived'] = df_test.Survived.apply(lambda x: int(x))\ndf_test.head()","1e8c9fb8":"df_test[['PassengerId', 'Survived']].to_csv('women_survive.csv', index=False)","62f1fa84":"sns.factorplot(x='Survived', col='Pclass', kind='count', data=df_train);","6490fa7f":"sns.factorplot(x='Survived', col='Embarked', kind='count', data=df_train);","a56d747d":"sns.distplot(df_train.Fare, kde=False);","e41ec6f9":"df_train.groupby('Survived').Fare.hist(alpha=0.6);","6a4c4fe3":"df_train_drop = df_train.dropna()\nsns.distplot(df_train_drop.Age, kde=False);","a86a813a":"sns.stripplot(x='Survived', y='Fare', data=df_train, alpha=0.3, jitter=True);","e4ce7f4e":"sns.swarmplot(x='Survived', y='Fare', data=df_train);","275d4df4":"df_train.groupby('Survived').Fare.describe()","fdc50ea1":"sns.lmplot(x='Age', y='Fare', hue='Survived', data=df_train, fit_reg=False, scatter_kws={'alpha':0.5});","95782a33":"sns.pairplot(df_train_drop, hue='Survived')","e340bd74":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport numpy as np\nfrom sklearn import tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\n\n# Figures inline and set visualization style\n%matplotlib inline\nsns.set()\n\n# Import data\ndf_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","35a6a050":"survived_train = df_train.Survived","65d7c52f":"data = pd.concat([df_train.drop(['Survived'], axis=1), df_test])","7746a700":"data","c3eeb7ce":"data.info()","155f99fd":"# Impute missing numerical variables\ndata['Age'] = data.Age.fillna(data.Age.median())\ndata['Fare'] = data.Fare.fillna(data.Fare.median())","e3b47d91":"# Check out info of data\ndata.info()","ba597372":"data = pd.get_dummies(data, columns=['Sex'], drop_first=True)\ndata.head()","326fd061":"# Select columns and view head\ndata = data[['Sex_male', 'Fare', 'Age','Pclass', 'SibSp']]\ndata.head()","d94052a9":"data.info()","86f24a6e":"data_train = data.iloc[:891]\ndata_test = data.iloc[891:]","172ae558":"X = data_train.values\ntest = data_test.values\ny = survived_train.values","8a252cc3":"clf = tree.DecisionTreeClassifier(max_depth=3)\nclf.fit(X, y)","48429bb3":"Y_pred = clf.predict(test)\ndf_test['Survived'] = Y_pred","4a5729c5":"df_test[['PassengerId', 'Survived']].to_csv('1st_dec_tree.csv', index=False)","82e100c5":"**Take-away: Women were more likely to survive than men.**","5f0cbcf3":"* **https:\/\/www.datacamp.com\/community\/tutorials\/kaggle-machine-learning-eda**\n* **https:\/\/www.datacamp.com\/community\/tutorials\/kaggle-tutorial-machine-learning**\n* **https:\/\/www.datacamp.com\/community\/tutorials\/machine-learning-python**\n* **https:\/\/www.datacamp.com\/community\/tutorials\/machine-learning-python**\n* **https:\/\/www.datacamp.com\/community\/tutorials\/exploratory-data-analysis-python**","ccecc697":"**Take-away: It looks like those who survived either paid quite a bit for their ticket or they were young.**","e51e7e08":"**Take-away: Passengers that travelled in first class were more likely to survive. On the other hand, passengers travelling in third class were more unlikely to survive.**","5c358506":"**Take-away: Fare definitely seems to be correlated with survival aboard the Titanic.**","a5055d49":"**Take-away: Passengers that embarked in Southampton were less likely to survive.**","b7d15ef6":"## EDA & Machine Learning approach\n#### This is a get started notebook for kaggle titanic competition where all the best approaches has been used and this notebook is powered by DATACAMP.","66c0202c":"**Take-away: It looks as though those that paid more had a higher chance of surviving.**","8d215940":"**Take-away: in the training set, less people survived than didn't. Let's then build a first model that predicts that nobody survived.**","e51d9826":"**Take-away: Most passengers paid less than 100 for travelling with the Titanic.**"}}