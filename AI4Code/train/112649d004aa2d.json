{"cell_type":{"4193949e":"code","cf5fa936":"code","aed7d220":"code","abfaec9e":"code","06611b20":"code","6d7e935d":"code","ec61c791":"code","1e952414":"code","83ee30d8":"code","ecd82731":"code","7f408ae5":"code","ff86db9e":"code","f64ecb0b":"code","d72818a0":"code","03d73fa5":"code","5ce247a3":"code","d9e685b0":"code","66ca098d":"code","8a5740f8":"code","dedd9456":"code","37de88f0":"code","cde04d3b":"code","942a9a6d":"code","3ad4b1b0":"code","338e2d62":"code","7c21aef3":"code","4999f469":"code","bbc3300f":"code","8ab3e465":"code","c73422a5":"code","fbb40696":"code","7939e442":"code","a388a630":"code","f7a77085":"markdown","89f19b01":"markdown","66ccb81a":"markdown","9a3265dc":"markdown","99005ed2":"markdown","214f008e":"markdown","6144e5d9":"markdown","242a84af":"markdown","1e7024d1":"markdown","18083be3":"markdown","c46832af":"markdown","c11e1192":"markdown","2cb89bf9":"markdown","67f442ce":"markdown","fbfb2d62":"markdown","108079be":"markdown","ab12b874":"markdown","4becc0eb":"markdown","796666f4":"markdown","0bec576c":"markdown","3528944c":"markdown"},"source":{"4193949e":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cf5fa936":"df= pd.read_csv(\"\/kaggle\/input\/stellar-classification-dataset-sdss17\/star_classification.csv\")","aed7d220":"df.head()","abfaec9e":"df.info()","06611b20":"df[\"class\"].value_counts()","6d7e935d":"df[\"class\"]=[0 if i == \"GALAXY\" else 1 if i == \"STAR\" else 2 for i in df[\"class\"]]","ec61c791":"sns.countplot(df[\"class\"], palette=\"Set3\")\nplt.title(\"Class \",fontsize=10)\nplt.show()","1e952414":"from sklearn.neighbors import LocalOutlierFactor\nclf = LocalOutlierFactor()\ny_pred = clf.fit_predict(df) ","83ee30d8":"x_score = clf.negative_outlier_factor_\noutlier_score = pd.DataFrame()\noutlier_score[\"score\"] = x_score\n\n#threshold\nthreshold2 = -1.5                                            \nfiltre2 = outlier_score[\"score\"] < threshold2\noutlier_index = outlier_score[filtre2].index.tolist()","ecd82731":"len(outlier_index)","7f408ae5":"df.drop(outlier_index, inplace=True)","ff86db9e":"import seaborn as sns\nf,ax = plt.subplots(figsize=(12,8))\nsns.heatmap(df.corr(), cmap=\"PuBu\", annot=True, linewidths=0.5, fmt= '.2f',ax=ax)\nplt.show()","f64ecb0b":"corr = df.corr()","d72818a0":"corr[\"class\"].sort_values()","03d73fa5":"df = df.drop(['obj_ID','alpha','delta','run_ID','rerun_ID','cam_col','field_ID','fiber_ID'], axis = 1)","5ce247a3":"from imblearn.over_sampling import SMOTE\nfrom collections import Counter","d9e685b0":"x = df.drop(['class'], axis = 1)\ny = df.loc[:,'class'].values","66ca098d":"sm = SMOTE(random_state=42)\nprint('Original dataset shape %s' % Counter(y))\nx, y = sm.fit_resample(x, y)\nprint('Resampled dataset shape %s' % Counter(y))","8a5740f8":"sns.countplot(y, palette='Set3')\nplt.title(\"Class \",fontsize=10)\nplt.show()","dedd9456":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(x)\nx = scaler.transform(x)","37de88f0":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import svm\nfrom sklearn.metrics import confusion_matrix, classification_report\n\n\nfrom yellowbrick.classifier import ConfusionMatrix\nfrom yellowbrick.classifier import ClassPredictionError\nfrom yellowbrick.classifier import ROCAUC\nfrom yellowbrick.style import set_palette","cde04d3b":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","942a9a6d":"svm_clf = svm.SVC(kernel='rbf', C=1, random_state=0)\nsvm_clf.fit(x_train,y_train)\npredicted = svm_clf.predict(x_test)\nscore = svm_clf.score(x_test, y_test)\nsvm_score_ = np.mean(score)\n\nprint('Accuracy : %.3f' % (svm_score_))","3ad4b1b0":"classes = ['GALAXY','STAR','QSO']","338e2d62":"svm_cm = ConfusionMatrix(svm_clf, classes=classes, cmap='GnBu')\n\nsvm_cm.fit(x_train, y_train)\nsvm_cm.score(x_test, y_test)\nsvm_cm.show()","7c21aef3":"print(classification_report(y_test, predicted))","4999f469":"visualizer = ROCAUC(svm_clf, classes=classes)\n\nset_palette('bold')\n\nvisualizer.fit(x_train, y_train)        # Fit the training data to the visualizer\nvisualizer.score(x_test, y_test)        # Evaluate the model on the test data\nvisualizer.show()                       # Finalize and render the figure","bbc3300f":"visualizer = ClassPredictionError(svm_clf, classes=classes)\n\nset_palette('pastel')\n\nvisualizer.fit(x_train, y_train)        # Fit the training data to the visualizer\nvisualizer.score(x_test, y_test)        # Evaluate the model on the test data\nvisualizer.show()                       # Draw visualization","8ab3e465":"r_forest = RandomForestClassifier()\nr_forest.fit(x_train,y_train)\npredicted = r_forest.predict(x_test)\nscore = r_forest.score(x_test, y_test)\nrf_score_ = np.mean(score)\n\nprint('Accuracy : %.3f' % (rf_score_))","c73422a5":"r_forest_cm = ConfusionMatrix(r_forest, classes=classes, cmap='GnBu')\n\nr_forest_cm.fit(x_train, y_train)\nr_forest_cm.score(x_test, y_test)\nr_forest_cm.show()","fbb40696":"print(classification_report(y_test, predicted))","7939e442":"visualizer = ROCAUC(r_forest, classes=[\"GALAXY\", \"STAR\", \"QSO\"])\n\nset_palette('bold')\n\nvisualizer.fit(x_train, y_train)       \nvisualizer.score(x_test, y_test)        \nvisualizer.show()                      ","a388a630":"visualizer = ClassPredictionError(r_forest, classes=classes)\n\nset_palette('pastel')\n\nvisualizer.fit(x_train, y_train)        \nvisualizer.score(x_test, y_test)        \nvisualizer.show()                       ","f7a77085":"<a id='16'><\/a><br>\n### Classification Report","89f19b01":"<a id='14'><\/a><br>\n## Random Forest Classifier","66ccb81a":"# \ud83c\udf1f Introduction\n\nDataset used in this notebook aims to classificate stars, galaxies, and quasars based on their spectral characteristics. Support Vector Machine (SVM) and Random Forest algorithms are used for classification purposes in this notebook. The dataset is an imbalanced dataset. For this reason, Synthetic Minority Oversampling Technique (SMOTE) is used to eliminate the imbalance between classes. Outlier values are detected with the Local Outlier Factor and these values are removed from the dataset. In the 16-dimensional data set, the correlations of the features with the class label are checked and the features with a correlation greater than 0.16 are used for classification. In addition, the seaborn library and the yellow brick library are used for data visualization.","9a3265dc":"<a id='7'><\/a><br>\n# Train \/ Test Split","99005ed2":"<a id='10'><\/a><br>\n### Confusion Matrix","214f008e":"<a id='13'><\/a><br>\n### Class Prediction Error","6144e5d9":"<a id='17'><\/a><br>\n### ROC Curve","242a84af":"<a id='2'><\/a><br>\n# Detect Outliers","1e7024d1":"<a id='8'><\/a><br>\n# Classifiers","18083be3":"<a id='1'><\/a><br>\n# Load and Check Data","c46832af":"<a id='18'><\/a><br>\n### Class Prediction Error","c11e1192":"<a id='3'><\/a><br>\n# Feature Selection","2cb89bf9":"### \ud83d\udcab Content\n\n1. [Load and Check Data](#1)\n1. [Detect Outliers](#2)\n1. [Feature Selection](#3)\n1. [Dealing with Imbalanced Data](#4)\n1. [Data Scaling](#5)\n1. [Import Libraries](#6)\n1. [Train \/ Test Split](#7)\n1. [Classifiers](#8)\n    * [SVM Classifier](#9)\n        * [Confusion Matrix](#10)\n        * [Classification Report](#11)\n        * [ROC Curve](#12)\n        * [Class Prediction Error](#13)\n    * [Random Forest Classifier](#14)\n        * [Confusion Matrix](#15)\n        * [Classification Report](#16)\n        * [ROC Curve](#17)\n        * [Class Prediction Error](#18)","67f442ce":"<a id='12'><\/a><br>\n### ROC Curve","fbfb2d62":"<a id='5'><\/a><br>\n# Data Scaling","108079be":"<a id='9'><\/a><br>\n## SVM Classifier ","ab12b874":"<a id='11'><\/a><br>\n### Classification Report","4becc0eb":"<a id='15'><\/a><br>\n### Confusion Matrix","796666f4":"<a id='4'><\/a><br>\n# Dealing with Imbalanced Data","0bec576c":"<a id='6'><\/a><br>\n# Import Libraries","3528944c":"<img src=\"https:\/\/media2.giphy.com\/media\/OYfQ5c7FPeBxe\/giphy.gif\">"}}