{"cell_type":{"cf2cd535":"code","c3e55a22":"code","cc474289":"code","f7b1893e":"code","079a0a3b":"code","2e95592e":"code","711f47d8":"code","61f3fac2":"code","a845db86":"code","7ddb4f1c":"code","6c50a830":"code","ad475dc4":"code","17388743":"code","afe8413b":"code","f2bdf301":"code","d6c7ebec":"code","47756938":"code","45041111":"code","b41ae3b2":"code","de77a5d6":"code","bc25d559":"markdown","bc45d59b":"markdown","c11fe520":"markdown","0ba96020":"markdown","2ac1fb3c":"markdown","c264ca14":"markdown","9bf4c91f":"markdown"},"source":{"cf2cd535":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n% matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c3e55a22":"train=pd.read_csv(\"..\/input\/Admission_Predict_Ver1.1.csv\")","cc474289":"train.info()","f7b1893e":"train.shape","079a0a3b":"train.describe()","2e95592e":"train.head()","711f47d8":"train.isnull().sum()","61f3fac2":"data=train.drop(columns=[\"Serial No.\"],axis=1)","a845db86":"data.head()","7ddb4f1c":"# let see distribution of  the variable\nfig=sns.distplot(data['GRE Score'],kde=False)\nplt.title(\"Distribution of GRE Score\")\nplt.show()\n\nfig = sns.distplot(data['CGPA'],kde=False)\nplt.title(\"Distribution of CGPA\")\nplt.show()\n\nfig = sns.distplot(data[\"TOEFL Score\"],kde=False)\nplt.title(\"Distribution of TOEFL Score\")\nplt.show()\n\nfig = sns.distplot(data[\"SOP\"],kde=False)\nplt.title(\"Distribution of SOP\")\nplt.show()\n\nfig = sns.distplot(data[\"University Rating\"],kde=False)\nplt.title(\"Distribution of University Rating\")\nplt.show()","6c50a830":"fig=sns.regplot(x=\"GRE Score\",y=\"TOEFL Score\",data=data)\nplt.title(\"GRE Score VS TOEFL Score\")\nplt.show()","ad475dc4":"fig=sns.regplot(x=\"GRE Score\",y=\"CGPA\",data=data)\nplt.title(\"GRE Score VS CGPA\")\nplt.show()","17388743":"fig = sns.lmplot(x=\"CGPA\", y=\"LOR \", data=data, hue=\"Research\")\nplt.title(\"GRE Score vs CGPA\")\nplt.show()","afe8413b":"fig = sns.lmplot(x=\"GRE Score\", y=\"LOR \", data=data, hue=\"Research\")\nplt.title(\"GRE Score vs CGPA\")\nplt.show()","f2bdf301":"fig = sns.regplot(x=\"CGPA\", y=\"SOP\", data=data)\nplt.title(\"GRE Score vs CGPA\")\nplt.show()\n\n","d6c7ebec":"fig = sns.regplot(x=\"GRE Score\", y=\"SOP\", data=data)\nplt.title(\"GRE Score vs CGPA\")\nplt.show()","47756938":"fig = sns.regplot(x=\"TOEFL Score\", y=\"SOP\", data=data)\nplt.title(\"GRE Score vs CGPA\")\nplt.show()","45041111":"corr = data.corr()\nfig, ax = plt.subplots(figsize=(8, 8))\ncolormap = sns.diverging_palette(220, 10, as_cmap=True)\ndropSelf = np.zeros_like(corr)\ndropSelf[np.triu_indices_from(dropSelf)] = True\ncolormap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, cmap=colormap, linewidths=.5, annot=True, fmt=\".2f\", mask=dropSelf)\nplt.show()","b41ae3b2":"# Split data train & test\nfrom sklearn.model_selection import train_test_split\n\nX = data.drop(['Chance of Admit '], axis=1)\ny = data['Chance of Admit ']\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, shuffle=False)","de77a5d6":"# Applying alogorithms \nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso,Ridge,BayesianRidge,ElasticNet,HuberRegressor,LinearRegression,LogisticRegression,SGDRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\n\n\n\nmodels = [['DecisionTree :',DecisionTreeRegressor()],\n           ['Linear Regression :', LinearRegression()],\n           ['Lasso: ', Lasso()],\n           ['Ridge: ', Ridge()],\n           ['BayesianRidge: ', BayesianRidge()],\n           ['ElasticNet: ', ElasticNet()],\n           ['HuberRegressor: ', HuberRegressor()],\n           ['RandomForest :',RandomForestRegressor()],\n           ['KNeighbours :', KNeighborsRegressor(n_neighbors = 2)],\n           ['SVM :', SVR()],\n           ['AdaBoostClassifier :', AdaBoostRegressor()],\n           ['GradientBoostingClassifier: ', GradientBoostingRegressor()]]\n           \n          \n\nprint(\"Results...\")\n\nfor name, model in models:\n    model = model\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    print(name, (np.sqrt(mean_squared_error(y_test, predictions))))\n","bc25d559":"## Linear Regression performs the best in this case, which proves that complicated models doesnt always mean better results. ","bc45d59b":"## Lets see Correlation between variables","c11fe520":"## Understanding the relation between different factors responsible for graduate admissions","0ba96020":"##  GRE Score and CGPA is only slightly related","2ac1fb3c":"## Applicants with different kinds of SOP have different kinds of TOEFL Score. So the quality of SOP is not always related to the applicants English skills. ","c264ca14":"## CGPA and SOP are not that related because Statement of Purpose is related to academic performance, but since people with good CGPA tend to be more hard working so they have good things to say in their SOP which might explain the slight move towards higher CGPA as along with good SOPs","9bf4c91f":"## GRE scores and LORs are also not that related."}}