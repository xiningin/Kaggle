{"cell_type":{"246a58fb":"code","a4283761":"code","028a86a9":"code","48d12607":"code","5f9a4981":"code","3c39de0e":"code","47fcc7e5":"code","730a548d":"code","c76ba5d6":"code","0c45a39e":"code","c4a6abe1":"code","ac0623c7":"code","11634e5d":"code","edcb3d08":"code","16890bef":"code","a325f08a":"code","b34f41e4":"code","1a2ca8fe":"code","fdf9fbc5":"code","8bc1743b":"code","59ada370":"code","4932e9d4":"code","b11cfb39":"code","8b3c8016":"code","bc03b7e4":"code","8f107651":"code","a669f42b":"code","313800ef":"code","3829a028":"code","26edaf81":"code","8b3fff68":"code","1908edb2":"code","3026f042":"code","240859e2":"code","faa49b9e":"code","8b637881":"code","9b9cfee1":"code","9dc2982b":"code","6cd33ffd":"code","37e50f1f":"code","ee03bdad":"code","1b17bfb9":"code","3b6ef345":"code","a81751ce":"code","75b9fb9d":"code","f58079f6":"code","782d5b8a":"markdown","9e56c3f7":"markdown","caa31420":"markdown","75558017":"markdown","cffded9d":"markdown","2397ee93":"markdown","525929b0":"markdown","5156bda4":"markdown","95540552":"markdown","4806c444":"markdown"},"source":{"246a58fb":"!pip install pycaret","a4283761":"import pandas as pd\nimport numpy as np","028a86a9":"train = pd.read_csv('..\/input\/kakr-4th-competition\/train.csv')\ntest = pd.read_csv('..\/input\/kakr-4th-competition\/test.csv')","48d12607":"train","5f9a4981":"train.income = (train['income']==('>50K')).astype('int')","3c39de0e":"total = pd.concat([train, test])","47fcc7e5":"total","730a548d":"total = total.drop(labels=['id', 'fnlwgt', 'education'], axis=1)","c76ba5d6":"age_labels = [i for i in range(19)]\nage_bands = [i for i in range(15, 72, 3)] + [90]\ntotal['age_band']= pd.cut(total['age'], bins=age_bands, labels=age_labels)","0c45a39e":"total = total.drop('age', axis=1)","c4a6abe1":"total.loc[total['workclass'].isin(['Never-worked', 'Without-pay']), 'workclass'] = 'others'","ac0623c7":"total","11634e5d":"total['workclass'].unique()","edcb3d08":"edu_bands = [0, 1, 5, 8, 10, 12, 13, 14, 16]\nedu_labels = [i for i in range(len(edu_bands)-1)]\ntotal['edu_band']= pd.cut(total['education_num'], bins=edu_bands, labels=edu_labels)","16890bef":"total=total.drop('education_num', axis=1)","a325f08a":"total[\"log_capital_gain\"] = total.capital_gain.map(lambda x: np.log(x, where=(x!=0)))","b34f41e4":"total[\"log_capital_loss\"] = total.capital_loss.map(lambda x: np.log(x, where=(x!=0)))","1a2ca8fe":"total = total.drop(['capital_gain', 'capital_loss'], axis=1)","fdf9fbc5":"workhours_bands = [i for i in range(0, 65, 5)] + [80, 100]\nworkhours_labels = [i for i in range(len(workhours_bands) -1)]\ntotal['workhours_band']= pd.cut(total['hours_per_week'], bins=workhours_bands, labels=workhours_labels)","8bc1743b":"total = total.drop(['hours_per_week'], axis=1)","59ada370":"total.loc[total['relationship'].isin(['Husband', 'Wife']), 'relationship'] = 'Normal'\ntotal.loc[total['relationship'].isin(['Own-child', 'Not-in-family', 'Unmarried', 'Other-relative']), 'relationship'] = 'Abnormal'","4932e9d4":"total.loc[total['marital_status'].isin(['Married-AF-spouse', 'Married-civ-spouse']), 'marital_status'] = 'Married_OK'\ntotal.loc[total['marital_status'].isin(['Married-spouse-absent', 'Divorced', 'Never-married', 'Separated', 'Widowed']), 'marital_status']= 'Married_Fail'","b11cfb39":"total.loc[total['occupation'].isin(['Armed-Forces', 'Priv-house-serv']), 'occupation'] = 'Priv-house-serv'","8b3c8016":"total.loc[total['race'].isin(['Amer-Indian-Eskimo', 'Other']), 'race'] = 'Other'","bc03b7e4":"income_01 = ['Outlying-US(Guam-USVI-etc)',\n 'Honduras',\n 'Columbia',\n 'Dominican-Republic',\n 'Mexico',\n 'Guatemala',\n 'Portugal',\n 'Trinadad&Tobago',\n 'Nicaragua',\n 'Peru',\n 'Vietnam',\n 'El-Salvador',]\n\nincome_02 = ['Jamaica',\n 'Haiti',\n 'Puerto-Rico',\n 'Laos',\n 'Thailand',\n 'Ecuador',\n 'Poland',\n 'South',\n 'Ireland',\n 'China',]\n\nincome_03 = ['?']\n\nincome_04 = [\n    'United-States',\n]\nincome_05 = [\n 'Greece',\n 'Scotland',\n 'Cuba',\n 'Hungary',\n 'Hong',\n]\nincome_06 = [\n 'Philippines',\n 'Canada',\n 'England',\n 'Germany',\n 'Italy'\n]\nincome_07 = [\n 'India',\n 'Japan',\n 'France',\n 'Yugoslavia',\n 'Cambodia',\n 'Taiwan',\n 'Iran'\n]","8f107651":"def convert_country(x):\n    if x in income_01:\n        return 'income_01'\n    elif x in income_02:\n        return 'income_02'\n    elif x in income_03:\n        return 'income_03'\n    elif x in income_04:\n        return 'income_04'\n    elif x in income_05:\n        return 'income_05'\n    elif x in income_06:\n        return 'income_06'\n    elif x in income_07:\n        return 'income_07'","a669f42b":"total['country_bin'] = total['native_country'].apply(convert_country)","313800ef":"total = total.drop(['native_country'], axis = 1)","3829a028":"total.columns","26edaf81":"features = ['workclass', 'marital_status', 'occupation', 'relationship', 'race',\n       'sex', 'age_band', 'edu_band', 'log_capital_gain',\n       'log_capital_loss', 'workhours_band', 'country_bin']\nlabel = ['income']","8b3fff68":"from pycaret.classification import *","1908edb2":"total_carret = total[features + label]","3026f042":"total_carret.head()","240859e2":"total_carret['age_band'] = total_carret['age_band'].astype('float')\ntotal_carret['edu_band'] = total_carret['edu_band'].astype('float')\ntotal_carret['workhours_band'] = total_carret['workhours_band'].astype('float')\ntotal_carret['log_capital_gain'] = total_carret['log_capital_gain'].astype('float')\ntotal_carret['log_capital_loss'] = total_carret['log_capital_loss'].astype('float')","faa49b9e":"train_clean = total_carret[:len(train)]\ntest_clean = total_carret[len(train):]","8b637881":"train_clean['income'] = train_clean['income'].astype('int')","9b9cfee1":"train_clean.head()","9dc2982b":"setup(data = train_clean, target = 'income', session_id=1234, silent=True)","6cd33ffd":"compared_model = compare_models(sort = 'F1', n_select = 3)","37e50f1f":"blended_model = blend_models(estimator_list = compared_model, fold = 5, method = 'soft')","ee03bdad":"final_model = finalize_model(blended_model)\nensemble_prediction = predict_model(final_model,test_clean)","1b17bfb9":"save_model(final_model, 'final201209')","3b6ef345":"plot_model(estimator = final_model, plot = 'auc')\nplot_model(estimator = final_model, plot = 'confusion_matrix')","a81751ce":"ensemble_prediction['id'] = np.arange(len(ensemble_prediction))\nensemble_prediction['prediction'] = ensemble_prediction['Label']","75b9fb9d":"ensemble_prediction = ensemble_prediction[['id','prediction']]","f58079f6":"ensemble_prediction.to_csv('submission.csv',index=False)","782d5b8a":"# Features to Model","9e56c3f7":"# 8. Occupations","caa31420":"# 7. Marital Status & Relationship","75558017":"# 9. Race","cffded9d":"# Captial Gain & Loss","2397ee93":"# Education Num","525929b0":"# 10. Native Country","5156bda4":"# Workclass","95540552":"# Hours Per Week","4806c444":"# Age"}}