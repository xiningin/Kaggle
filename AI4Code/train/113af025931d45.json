{"cell_type":{"3d37ee70":"code","0039b805":"code","7b82ca6b":"code","23abc52a":"code","aeec1654":"code","e46c01a8":"code","c052117d":"code","e06e3ba5":"code","cacc94f7":"code","af3df846":"code","aa01986a":"code","d9febe32":"code","ede29995":"code","be552d1b":"code","8fe97fa7":"code","ea63d1d6":"code","cfd13802":"code","36fda3fc":"code","7e5043ed":"code","d2359d94":"code","827f862e":"code","050f6a98":"code","acfc31f4":"code","6fc26be7":"code","1be82459":"code","9d39b946":"code","a24f0ee1":"code","3b70e2ed":"code","7ab98b95":"code","a26ee45c":"code","95dd1f82":"code","b37583f8":"code","b3cd3260":"code","94af9e7d":"code","bf03ed90":"code","44367b43":"code","8dad1e78":"code","5ef9b081":"code","0427d0fe":"code","4d70f9e1":"code","036695bd":"code","a2692bdf":"code","12965fe7":"code","a6af5991":"code","af71de31":"code","28608c6f":"code","c351a00b":"code","18520c7e":"code","2c2f64a3":"code","f677e2d8":"code","95be77f5":"code","ad8661f0":"code","38aa0e46":"code","dc7af399":"code","22be9f8f":"code","90c55915":"code","9c6f05bd":"code","afa1aa46":"code","5a885ee3":"code","dcb99ef9":"code","107dcd94":"code","e300554d":"code","ace4594c":"code","4808fb5a":"code","069ecc7e":"code","1f9da5e4":"code","54c118e2":"code","02d594b6":"code","4fe7c318":"markdown","2e5359d9":"markdown","ea2b39ab":"markdown","e198f766":"markdown","2113a9cc":"markdown","b47e3a0c":"markdown","17ae824d":"markdown"},"source":{"3d37ee70":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0039b805":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","7b82ca6b":"plt.rcParams['figure.figsize']=(8,6)","23abc52a":"df=pd.read_csv('\/kaggle\/input\/airline-passenger-satisfaction\/train.csv',index_col=0)","aeec1654":"df.head()","e46c01a8":"df.shape","c052117d":"df.info()","e06e3ba5":"df.describe()","cacc94f7":"#finding if there is any null values present in the dataset\ndf.isnull().sum()","af3df846":"#there are two two object type features, analyse them and convert them into int type\ndf['Gender'].value_counts()","aa01986a":"#ploting the Gender values\nsns.countplot(x='Gender',data=df)","d9febe32":"#Replacing the Gender feature (which holds a nominal Categorical values) by dummy rows\ngender=pd.get_dummies(df['Gender'])\ndf.drop('Gender',axis=1,inplace=True)\ndf=pd.concat([df,gender],axis=1)\ndf.head()","ede29995":"#new shape of the dataset\ndf.shape","be552d1b":"#now converting the Customer Type features which holds nominal Categorical values\ndf['Customer Type'].value_counts()","8fe97fa7":"#plotting the customer type feature values\nsns.countplot(x='Customer Type',data=df)","ea63d1d6":"#replacing the Customer type feature by adding dummy rows\ncustomer_type=pd.get_dummies(df['Customer Type'])\ndf.drop('Customer Type',axis=1,inplace=True)\ndf=pd.concat([df,customer_type],axis=1)\ndf.head()","cfd13802":"#new shape od the dataset\ndf.shape","36fda3fc":"#also replacing the Type of Travel and Class features in the similar way\ndf['Type of Travel'].value_counts()","7e5043ed":"df['Class'].value_counts()    #class features hold ordinal Categorical values","d2359d94":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndf['Class']=le.fit_transform(df['Class'])\ndf.head()","827f862e":"df['Type of Travel']=le.fit_transform(df['Type of Travel'])\ndf.head()","050f6a98":"#Analysing different values of the dependent feature Satisfaction\ndf['satisfaction'].value_counts()","acfc31f4":"df.info()","6fc26be7":"#plotting a heatmap to check the null values of Arrival Delay in Minutes features\nsns.heatmap(df.isnull(),yticklabels=False,)","1be82459":"df['Arrival Delay in Minutes'].isnull().sum()","9d39b946":"#sns.distplot(df['Arrival Delay in Minutes'],kde=False)\ndf['Arrival Delay in Minutes'].plot(kind='hist')","a24f0ee1":"val=df['Arrival Delay in Minutes'].mean()\nval","3b70e2ed":"#replacing all the null values of Arrival Delay in Minutes features with it's mean\ndf['Arrival Delay in Minutes'].replace(np.nan,val,inplace=True)","7ab98b95":"df['Arrival Delay in Minutes'].isnull().sum()","a26ee45c":"#dropping the id feature as it will not help during predicting calculations\ndf.drop('id',axis=1,inplace=True)","95dd1f82":"#Plotting a distribution plot to analyse the different group of age people travelling with this aireline\nsns.distplot(df['Age'],kde=False)","b37583f8":"#partioning the independent and dependent data\nX=df.drop('satisfaction',axis=1)\ny=df['satisfaction']","b3cd3260":"#Checking if any Features are having constant Variance\nfrom sklearn.feature_selection import VarianceThreshold\nvt=VarianceThreshold(threshold=0.0)\nvt.fit_transform(X)\nvt.get_support()","94af9e7d":"#Plotting the correlation coefficients of all the Features\nplt.figure(figsize=(18,12))\nsns.heatmap(df.corr(),annot=True)","bf03ed90":"#function to check if any feature is having correlation coefficient value more than 0.9\n\ndef correlation_check(df,val):\n    corr_matrix=df.corr()\n    features=set()\n    for i in range(len(corr_matrix)):\n        for j in range(i):\n            if corr_matrix.iloc[i,j]>0.9:\n                features.add(corr_matrix.columns[i])\n    return features\n            ","44367b43":"columns=correlation_check(X,0.9)\ncolumns","8dad1e78":"#so we can remove the column 'Arrival Delay in Minutes' as this is highly correlated with the feature 'Departure delay in minutes'\nX.drop(columns,axis=1,inplace=True)","5ef9b081":"df.head()","0427d0fe":"#Univariate Feature Selection\nfrom sklearn.feature_selection import mutual_info_classif\nmic=mutual_info_classif(X,y)","4d70f9e1":"#checking the mutual information classification values of all the features\nmic=pd.Series(mic)\nmic.index=X.columns\nmic","036695bd":"mic.sort_values(ascending=False)","a2692bdf":"#we will select top 15 best features from the above list\nfrom sklearn.feature_selection import SelectKBest\nskb=SelectKBest(mutual_info_classif,k=15)\nskb","12965fe7":"X_new=skb.fit_transform(X,y)","a6af5991":"X_new.shape","af71de31":"X_new","28608c6f":"#label Encoding\nfrom sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nX_norm=ss.fit_transform(X_new)","c351a00b":"X_norm","18520c7e":"#cross_validation\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X_norm,y,test_size=0.15,random_state=0)\nX_train.shape,X_test.shape","2c2f64a3":"y_train.shape,y_test.shape","f677e2d8":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(X_train,y_train)\nyhat=lr.predict(X_test)","95be77f5":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report,f1_score\naccuracy_score(y_test,yhat)","ad8661f0":"sns.heatmap(confusion_matrix(y_test,yhat),cmap='Greens',annot=True,fmt='.0f')","38aa0e46":"print(classification_report(y_test,yhat))","dc7af399":"f1_score(y_test,yhat,average='weighted')","22be9f8f":"from sklearn.neighbors import KNeighborsClassifier","90c55915":"#testing different values of K which one gives the highest accuracy\nk_value=[i for i in range(1,11)]\naccuracy=[]\nfor i in k_value:\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    accuracy.append(accuracy_score(y_test,knn.predict(X_test)))","9c6f05bd":"plt.plot(k_value,accuracy)\nplt.ylabel('Accuracy')\nplt.xlabel('K values')\nplt.show()","afa1aa46":"print('The maximum accuracy {} can be oobtained with k value ={}'.format(max(accuracy),k_value[accuracy.index(max(accuracy))]))","5a885ee3":"knn=KNeighborsClassifier(n_neighbors=9)\nknn.fit(X_train,y_train)\nyhat=knn.predict(X_test)","dcb99ef9":"accuracy_score(y_test,yhat)","107dcd94":"sns.heatmap(confusion_matrix(y_test,yhat),annot=True,cmap='Greens',fmt='.0f')","e300554d":"print(classification_report(y_test,yhat))","ace4594c":"f1_score(y_test,yhat,average='weighted')","4808fb5a":"from sklearn.svm import SVC\nsvc=SVC(kernel='rbf')\nsvc.fit(X_train,y_train)\nyhat=svc.predict(X_test)","069ecc7e":"accuracy_score(y_test,yhat)","1f9da5e4":"sns.heatmap(confusion_matrix(y_test,yhat),cmap='Greens',annot=True, fmt='.0f')","54c118e2":"print(classification_report(y_test,yhat))","02d594b6":"f1_score(y_test,yhat,average='weighted')","4fe7c318":"There are different age groups from 5 to 80 years, travelling with this airline","2e5359d9":"**Applying into K Nearest Neighbors model**","ea2b39ab":"# Feature Selection Process","e198f766":"# Preposseing of the Dataset","2113a9cc":"**As all the values are true i.e there is no feature with constant varinace**","b47e3a0c":"**Applying into Support Vector Classifier**","17ae824d":"**Applying into Logistic Regression Classifier**"}}