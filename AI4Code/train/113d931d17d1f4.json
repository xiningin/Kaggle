{"cell_type":{"8127178e":"code","b0fdd3d4":"code","a24ba8ed":"code","56c73c64":"code","c48639cc":"code","87b64414":"code","697c821d":"code","4fb4308d":"code","9660bdc1":"code","8240cb30":"code","1e47b60e":"code","3346d926":"code","f743bdb1":"code","bc2ce35d":"markdown","e12aacd2":"markdown","1f5631dc":"markdown","569bf729":"markdown","a7be7d33":"markdown","01774b39":"markdown","620ad203":"markdown","23ba4956":"markdown","02daf8de":"markdown","539fcece":"markdown","c8835868":"markdown","295219a9":"markdown","31c38bb4":"markdown","f468ef44":"markdown","af94c95f":"markdown","1443b038":"markdown","1761a72d":"markdown"},"source":{"8127178e":"#Import Libraries \n\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\n\n","b0fdd3d4":"#Load in dataset from Kaggle \n\ndata = pd.read_csv('..\/input\/Indicators.csv')","a24ba8ed":"# select CO2 emissions for the United States\n\n#Filtering the information we would like to use \n\nfilterIndicator1 = 'CO2 emissions \\(metric'\nfilterIndicator2 = 'USA'\n\n#Creating mask for the filters \n\nmask1 = data['IndicatorName'].str.contains(filterIndicator1) \nmask2 = data['CountryCode'].str.contains(filterIndicator2)\n\n#Storing the masks in a new value \nUSCarbon = data[mask1 & mask2]\n\n#Preview the new dataframe (nice for seeing how you would like to clean it up if at all)\nUSCarbon.head()\n\n#Drop unnecessary columns \n\nUSCarbonFinal = USCarbon.drop(columns=['CountryName','CountryCode','IndicatorName','IndicatorCode'])\n\n#View final dataframe\n\nUSCarbonFinal.head(10)\n","56c73c64":"# select CO2 emissions for Central Europe and the Baltics\nfilterIndicator3 = 'CO2 emissions \\(metric'\nfilterIndicator4 = 'CEB'\n\nmask3 = data['IndicatorName'].str.contains(filterIndicator3) \nmask4 = data['CountryCode'].str.contains(filterIndicator4)\n\n#create dateframe from filter masks\nEuroCarbon = data[mask3 & mask4]\n\n#Drop unwanted columns from dataframe\nEuroCarbonFinal = EuroCarbon.drop(columns=['CountryName','CountryCode','IndicatorName','IndicatorCode'])\n\n#View first 10 columns in dataframe post drop \nEuroCarbonFinal.head(10)","c48639cc":"#Create a graph to compare the two countries Carbon Emissions \n\n#X & Y values\nx = USCarbon['Year']\ny = USCarbon['Value']  \nY = EuroCarbon['Value']\n\n#Creating our plot using matplotlib function \n\nplt.plot(x, y, color='r', label='US')\nplt.plot(x, Y, color='b', label='Euro')\nplt.xlabel('Years')\nplt.ylabel('Carbon Emissions')\nplt.title('US vs. Euro Carbon Emissions')\n\n#Add a legend\nplt.gca().legend(('US','Euro'))\nplt.show()","87b64414":"#Now let's look at fertility rates per country \n\n#US Fertility Rate \n\nfilterIndicator5 = 'SP.DYN.TFRT.IN'\nfilterIndicator6 = 'USA'\n\nmask5 = data['IndicatorCode'].str.contains(filterIndicator5) \nmask6 = data['CountryCode'].str.contains(filterIndicator6)\n\n# Storing masks \nUSFertility = data[mask5 & mask6]\n\n#Drop unwanted Columns\nUSFertilityFinal = USFertility.drop(columns=['CountryName','CountryCode','IndicatorName','IndicatorCode'])\n\n#View first 10 columns\nUSFertilityFinal.head(10)","697c821d":"#Fertility rates in Europe\/Baltics\n\nfilterIndicator7 = 'SP.DYN.TFRT.IN'\nfilterIndicator8 = 'CEB'\n\nmask7 = data['IndicatorCode'].str.contains(filterIndicator7) \nmask8 = data['CountryCode'].str.contains(filterIndicator8)\n\n# Create a new dataframe for the European Fertility data \nEuroFertility = data[mask7 & mask8]\n\n#Drop unwanted Columns\nEuroFertilityFinal = EuroFertility.drop(columns=['CountryName','CountryCode','IndicatorName','IndicatorCode'])\n\n#View first 10 columns\nEuroFertilityFinal.head(10)","4fb4308d":"#Create a graph to compare the two countries fertility rates over the years.\n\n\n#X & Y values \n\nx = USFertility['Year']\ny = USFertility['Value']\nY = EuroFertility['Value']\n\n#Creating a graph using matplotlib \n\nplt.plot(x, y, color='r', label='US')\nplt.plot(x, Y, color='b', label='Euro')\nplt.xlabel('Years')\nplt.ylabel('Fertility')\nplt.title('US vs. Euro Fertility Rates')\n\n#Add a legend\nplt.gca().legend(('US','Euro'))\nplt.show()","9660bdc1":"#Is there a correlation between CO2 Emissions and fertility rates? \n\n#First let's get some more information from our datasets \n\n#US Carbon Emissions Data Set\n\n#Mean, Std, min, max, counts (should be the same)\nUSCarbonFinal.describe()\n\n#Count : Year = 52, Value = 52\n#Mean : Value = 19.303472\n#Standard Deviation : Value = 1.564525\n#min : Value = 15.681256\n#max : Value = 22.510582\n\n\n#Euro Carbon Data Set\n\n#Mean, Std, min, max, counts (should be the same)\nEuroCarbonFinal.describe()\n\n#Count : Year = 52, Value = 52\n#Mean : Value = 8.237914\n#Standard Deviation : Value = 1.805031\n#min : Value = 5.114244\n#max : Value = 11.285238","8240cb30":"#US Fertility Data Set\n\n#Mean, Std, min, max, counts (should be the same)\nUSFertilityFinal.describe()\n\n#Count : Year = 54, Value = 54\n#Mean : Value = 2.158602\n#Standard Deviation : Value = 0.482290\n#min : Value = 1.738000\n#max : Value = 3.654000\n\n\n#Euro Fertility Data Set\n\n#Mean, Std, min, max, counts (should be the same)\nEuroFertilityFinal.describe()\n\n#Count : Year = 54, Value = 54\n#Mean : Value = 1.893536\n#Standard Deviation : Value = 0.432010\n#min : Value = 1.251015\n#max : Value = 2.498618","1e47b60e":"#Merge Dataframes together  \n\nUSMerge = USCarbon.merge(USFertility, on='Year', how='inner')\n\n#Drop Columns\nUSMerge1 = USMerge.drop(columns=['CountryName_x','CountryName_y','IndicatorCode_x',\n                                     'CountryName_y','CountryCode_y','IndicatorCode_y',\n                                    'IndicatorName_x', 'IndicatorName_y'])\n\n#Rename Columns \nUSMerge1.rename(columns={'CountryCode_x': 'CountryCode','Value_x' : 'CO2_Value',\n                          'Value_y':'Fertility_Value'}, inplace=True)\n#preview\nUSMerge1.head()\n\n#Reorder Columns so years is not in the middle of the data values \nUSMergeFinal = USMerge1[['CountryCode', 'Year', 'CO2_Value', \n                             'Fertility_Value']]\n\n#Final Dataframe\nUSMergeFinal.head()\n","3346d926":"#Merge Dataframes together \n\n#European Datasets \n\nEuroMerge = EuroCarbon.merge(EuroFertility, on='Year', how='inner')\n\n#Drop Columns\nEuroMerge1 = EuroMerge.drop(columns=['CountryName_x','CountryName_y','IndicatorCode_x',\n                                     'CountryName_y','CountryCode_y','IndicatorCode_y',\n                                    'IndicatorName_x', 'IndicatorName_y'])\n\n#Rename Columns \nEuroMerge1.rename(columns={'CountryCode_x': 'CountryCode','Value_x' : 'CO2_Value',\n                          'Value_y':'Fertility_Value'}, inplace=True)\n\n#preview data \n\nEuroMerge1.head()\n\n#Reorder Columns so years is not in the middle of the data values \nEuroMergeFinal = EuroMerge1[['CountryCode', 'Year', 'CO2_Value', \n                             'Fertility_Value']]\n#Final View of data\n\nEuroMergeFinal.head()\n","f743bdb1":"#Final Graphs \n\n#x & y values\nx1 = USCarbon['Year']\ny1 = USCarbon['Value']\nY1 = EuroCarbon['Value']\n\n#Carbon\nplt.subplot(1, 2, 1)\nplt.plot(x1, y1, color='r', label='US')\nplt.plot(x1, Y1, color='b', label='Euro')\nplt.title('Fertility & Carbon Emissions')\nplt.ylabel('Carbon Emissions')\n\n####\n\n#x & y values\nx2 = USFertility['Year']\ny2 = USFertility['Value']\nY2 = EuroFertility['Value']\n\n#Fertility\nplt.subplot(1, 2, 2)\nplt.plot(x2, y2, color='r', label='US')\nplt.plot(x2, Y2, color='b', label='Euro')\nplt.xlabel('Years')\nplt.ylabel('Fertility Rates')\n\nplt.gca().legend(('US','Euro'))\nplt.show()\n\n","bc2ce35d":"The next thing I'm going to do is merge my like dataframes together.\nI want all of my US data in one dataframe and my Europe data in another.\nThis way I can see visually how the numbers change for each variable over the years.\n\nBecause there's some extra data in this dataframe, I'm going to use my drop columns command again, as well as the reoder and rename command. This makes it easier to read the dataframe and understand exactly what you're looking at. ","e12aacd2":"Next we will load in the dataset provided to us by Kaggle. ","1f5631dc":"The world indicators dataset is HUGE. In order to evaluate the data we actually want, we're going to have to pull it from our current data frame, labeled as 'data' above, and utilize filters and masks to essentially create a new dataframe of the information we want to look at. \n\nThe data can be messy in the dataframe, so I'm also going to drop some columns we don't need before storing it in a final value.","569bf729":"Now we'll do the same thing for the European data.","a7be7d33":"**World Indicators Mini Project**","01774b39":"We can see just from eyeballing the two datasets that the European carbon emissions are notably lower than that of their US counterpart. \nLet's see how the two look when compared graphically. ","620ad203":"We can now do the same thing for the fertility rates for both country codes using the same methods as above. ","23ba4956":"\n\nWe gained some great insights from further exploring our data and evaulating our dataframes. \nAs a final step, we will create two more side by side graphs to show both countries carbon and fertility rates side by side. \n\n \n\n\n","02daf8de":"Let's get a little bit more information about our datasets by using the describe function.","539fcece":"The new US dataframe allows me to see all in one place how my data shifts over the years. \nNow let's do the same thing for the European data. ","c8835868":"Without doing a deeper analysis using pearsons r for correlation, it's difficult to make a conclusive decision about if CO2 is or isn't impacting fertility rates for women. \nHowever, based on the graphs alone, there does not appear to be reason to expect correlation or causation. Fertility rates do appear to be decreasing, but so do carbson emissions.\nSomething worth noting is that the carbon emission spikes are around the same time period as big drops in fertility rates. \nWhether or not this is from carbon emissions is impossible to tell just from these graphs and this data alone. There could be a multitude of reasons for what we see being represented on the graphs that aren't carbon related (or just carbon alone for that matter.) ","295219a9":"The describe function allows us to see information like the mean, standard deviation, and miniumum and maximums. \nAll of this data is represented graphically and in our data frames already, but this is another way to take a quick glance at how our data compares to each other. \n","31c38bb4":"As mentioned above, both countries appear to have decreasing fertility rates. \nEurope starts out with lower rates and gets even lower, where as the US starts out significantly higher and has some dramatic drops before leveling back out a bit. \n\nBut could there be any link to carbon emissions? ","f468ef44":"Just from looking at the graphs, it appears that both countries fertility rates are moving down, but neither appears to be incredibly drastic from the preview of the datasets. \n\nWe can gain a better understanding of what these comparisons look like grahically. ","af94c95f":"The world indicators dataset provides a multitude of data from around the world for various indicators. In this project, I want to see if CO2 emissions into the environment have a relationship with fertility rates in a country. \nI chose the United States and Europe + Baltics to compare fertiltity and CO2 emissions. ","1443b038":"The first step is to import the necessary libraries. \nWe use pandas for manipulating data and dataframes, and matplotlib for data visualization. ","1761a72d":"The graph provides an easy to decipher comparison of the two CO2 emissions. Both appear to be increasing carbon emissions as years pass, but Europe has a slower rate and emits less all together. "}}