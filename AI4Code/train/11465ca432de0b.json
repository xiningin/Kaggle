{"cell_type":{"4ad0cf93":"code","ff85bee7":"code","668aa8c2":"code","a3444543":"code","194970f9":"code","1e3df79c":"code","9f88f3c9":"code","22879de3":"code","35fc4ddf":"code","411b2350":"code","9e161adc":"code","f5cb7687":"code","7a9ce146":"code","a526c463":"markdown","d1148191":"markdown"},"source":{"4ad0cf93":"import numpy as np\nimport pandas as pd","ff85bee7":"benign=pd.read_csv('..\/input\/nbaiot-dataset\/5.benign.csv')\ng_c=pd.read_csv('..\/input\/nbaiot-dataset\/5.gafgyt.combo.csv')\ng_j=pd.read_csv('..\/input\/nbaiot-dataset\/5.gafgyt.junk.csv')\ng_s=pd.read_csv('..\/input\/nbaiot-dataset\/5.gafgyt.scan.csv')\ng_t=pd.read_csv('..\/input\/nbaiot-dataset\/5.gafgyt.tcp.csv')\ng_u=pd.read_csv('..\/input\/nbaiot-dataset\/5.gafgyt.udp.csv')\nm_a=pd.read_csv('..\/input\/nbaiot-dataset\/5.mirai.ack.csv')\nm_sc=pd.read_csv('..\/input\/nbaiot-dataset\/5.mirai.scan.csv')\nm_sy=pd.read_csv('..\/input\/nbaiot-dataset\/5.mirai.syn.csv')\nm_u=pd.read_csv('..\/input\/nbaiot-dataset\/5.mirai.udp.csv')\nm_u_p=pd.read_csv('..\/input\/nbaiot-dataset\/5.mirai.udpplain.csv')\n\nbenign=benign.sample(frac=0.25,replace=False)\ng_c=g_c.sample(frac=0.25,replace=False)\ng_j=g_j.sample(frac=0.5,replace=False)\ng_s=g_s.sample(frac=0.5,replace=False)\ng_t=g_t.sample(frac=0.15,replace=False)\ng_u=g_u.sample(frac=0.15,replace=False)\nm_a=m_a.sample(frac=0.25,replace=False)\nm_sc=m_sc.sample(frac=0.15,replace=False)\nm_sy=m_sy.sample(frac=0.25,replace=False)\nm_u=m_u.sample(frac=0.1,replace=False)\nm_u_p=m_u_p.sample(frac=0.27,replace=False)\n\nbenign['type']='benign'\nm_u['type']='mirai_udp'\ng_c['type']='gafgyt_combo'\ng_j['type']='gafgyt_junk'\ng_s['type']='gafgyt_scan'\ng_t['type']='gafgyt_tcp'\ng_u['type']='gafgyt_udp'\nm_a['type']='mirai_ack'\nm_sc['type']='mirai_scan'\nm_sy['type']='mirai_syn'\nm_u_p['type']='mirai_udpplain'\n\ndata=pd.concat([benign,m_u,g_c,g_j,g_s,g_t,g_u,m_a,m_sc,m_sy,m_u_p],\n               axis=0, sort=False, ignore_index=True)","668aa8c2":"#how many instances of each class\ndata.groupby('type')['type'].count()","a3444543":"#shuffle rows of dataframe \nsampler=np.random.permutation(len(data))\ndata=data.take(sampler)\ndata.head()","194970f9":"#dummy encode labels, store separately\nlabels_full=pd.get_dummies(data['type'], prefix='type')\nlabels_full.head()","1e3df79c":"#drop labels from training dataset\ndata=data.drop(columns='type')\ndata.head()","9f88f3c9":"#standardize numerical columns\ndef standardize(df,col):\n    df[col]= (df[col]-df[col].mean())\/df[col].std()\n\ndata_st=data.copy()\nfor i in (data_st.iloc[:,:-1].columns):\n    standardize (data_st,i)\n\ndata_st.head()","22879de3":"#training data for the neural net\ntrain_data_st=data_st.values\ntrain_data_st","35fc4ddf":"#labels for training\nlabels=labels_full.values\nlabels","411b2350":"#import libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation\nfrom tensorflow.keras.callbacks import EarlyStopping\n\n\n# test\/train split  25% test\nx_train_st, x_test_st, y_train_st, y_test_st = train_test_split(\n    train_data_st, labels, test_size=0.25, random_state=42)\n\n#  create and fit model\nmodel = Sequential()\nmodel.add(Dense(10, input_dim=train_data_st.shape[1], activation='relu'))\nmodel.add(Dense(40, input_dim=train_data_st.shape[1], activation='relu'))\nmodel.add(Dense(10, input_dim=train_data_st.shape[1], activation='relu'))\nmodel.add(Dense(1, kernel_initializer='normal'))\nmodel.add(Dense(labels.shape[1],activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', optimizer='adam')\nmonitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, \n                        patience=5, verbose=1, mode='auto')\nmodel.fit(x_train_st,y_train_st,validation_data=(x_test_st,y_test_st),\n          callbacks=[monitor],verbose=2,epochs=500)","9e161adc":"# metrics\npred_st = model.predict(x_test_st)\npred_st = np.argmax(pred_st,axis=1)\ny_eval_st = np.argmax(y_test_st,axis=1)\nscore_st = metrics.accuracy_score(y_eval_st, pred_st)\nprint(\"accuracy: {}\".format(score_st))","f5cb7687":"#second model\nmodel2 = Sequential()\nmodel2.add(Dense(32, input_dim=train_data_st.shape[1], activation='relu'))\nmodel2.add(Dense(72, input_dim=train_data_st.shape[1], activation='relu'))\nmodel2.add(Dense(32, input_dim=train_data_st.shape[1], activation='relu'))\nmodel2.add(Dense(1, kernel_initializer='normal'))\nmodel2.add(Dense(labels.shape[1],activation='softmax'))\nmodel2.compile(loss='categorical_crossentropy', optimizer='adam')\nmonitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, \n                        patience=5, verbose=1, mode='auto')\nmodel2.fit(x_train_st,y_train_st,validation_data=(x_test_st,y_test_st),\n          callbacks=[monitor],verbose=2,epochs=100)","7a9ce146":"# metrics\npred_st = model2.predict(x_test_st)\npred_st = np.argmax(pred_st,axis=1)\ny_eval_st = np.argmax(y_test_st,axis=1)\nscore_st = metrics.accuracy_score(y_eval_st, pred_st)\nprint(\"accuracy: {}\".format(score_st))","a526c463":"### Keras model","d1148191":"# IoT Intrusion Detection\n\nThe N-BaIoT Dataset contains traffic data for 9 IoT devices. The data comprise of both benign traffic and of a variety of malicious attacks. Here we run three deep neural networks to identify cyberattacks on a Provision PT-737E Security Camera."}}