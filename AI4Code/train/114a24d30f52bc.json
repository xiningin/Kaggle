{"cell_type":{"c1c24ab5":"code","93de8caa":"code","87986f00":"code","a1018861":"code","24f43964":"code","5776e7d5":"code","05c931fd":"code","59a97f2e":"code","38d76ee9":"code","a5181e56":"code","c641d04b":"code","87c3655d":"code","6b571adc":"code","bc495396":"code","8c250ce0":"code","812fc242":"code","3c1f1502":"code","8931f3f3":"code","56dc8c2f":"code","0d23f393":"code","e0a328fb":"code","e1e6ffbe":"code","f682c41b":"code","9ac33574":"code","38e1fea4":"code","f209866a":"code","c2b605f2":"code","0d36cbdb":"markdown","950ff684":"markdown"},"source":{"c1c24ab5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93de8caa":"import pandas as pd\n\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","87986f00":"heart_df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","a1018861":"heart_df.head()","24f43964":"heart_df.describe()","5776e7d5":"heart_df.dtypes","05c931fd":"heart_df.isnull().sum()","59a97f2e":"plt.figure(figsize=(20, 10))\nplt.xlabel(\"Age\")\nsns.countplot(x=heart_df['age'])","38d76ee9":"# Sex distribution\nplt.figure(figsize=(20, 10))\nplt.subplot(1, 2, 1)\nsex_labels = ['Male', 'Female']\nsex_explode = (.1, .1)\nplt.pie(heart_df['sex'].value_counts(), labels=sex_labels, startangle=90, shadow=True, explode=sex_explode,\n       autopct='%1.1f%%', colors=['blue', 'pink'])\nplt.title('Sexs of patients')\nplt.legend(loc='lower right')\n\nplt.subplot(1, 2, 2)\nheart_df['sex'].value_counts().plot(kind='bar', color=['blue', 'pink'])\nplt.ylabel('Count')\nplt.xticks()","a5181e56":"cp_data = heart_df['cp'].value_counts().reset_index()\ncp_data['index'][1] = 'typical'\ncp_data['index'][2] = 'atypical'\ncp_data['index'][3] = 'non-anginal'\ncp_data['index'][0] = 'asymtomatic'\ncp_data","c641d04b":"# Chest pain distribution\nplt.figure(figsize=(20, 10))\nplt.subplot(1, 2, 1)\ncp_labels = ['asymtomatic', 'typical', 'atypical', 'non-anginal']\ncp_explode = (.1, .1, .1, .1)\nplt.pie(heart_df['cp'].value_counts(), labels=cp_labels, startangle=90, shadow=True, explode=cp_explode,\n       autopct='%1.1f%%')\nplt.title('Type of chest pain')\nplt.legend(loc='lower right')\n\nplt.subplot(1, 2, 2)\nsns.barplot(x=cp_data['index'], y=cp_data['cp'])\nplt.ylabel('Count')\nplt.xticks()","87c3655d":"# Blood pressure\nplt.figure(figsize=(20, 10))\nplt.subplot(1, 2, 1)\nsns.distplot(heart_df['trtbps'], color='purple')\nplt.xlabel('resting blood pressure (in mm Hg)')\n\n# Maximum heart rate\nplt.subplot(1, 2, 2)\nsns.distplot(heart_df['thalachh'], color='teal')\nplt.xlabel('maximum heart rate achieved')","6b571adc":"# cholestoral\nplt.figure(figsize=(20, 10))\nplt.subplot(1, 2, 1)\nsns.distplot(heart_df['chol'], color='yellow')\nplt.xlabel('cholestoral in mg\/dl fetched via BMI sensor')\n\n# fasting blood sugar\nplt.subplot(1, 2, 2)\nfbs_labels = ['False', 'True']\nfbs_explode = (.1, .1)\nplt.pie(heart_df['fbs'].value_counts(), labels=fbs_labels, startangle=90, shadow=True, explode=fbs_explode,\n       autopct='%1.1f%%', colors=['lime', 'grey'])\nplt.title('fasting blood sugar > 120 mg\/dl')\nplt.legend(loc='lower right')","bc495396":"ecg_data = heart_df['restecg'].value_counts().reset_index()\necg_data['index'][1] = 'normal'\necg_data['index'][2] = 'having ST-T'\necg_data['index'][0] = 'hypertrophy'\necg_data","8c250ce0":"# resting electrocardiographic\nplt.figure(figsize=(20, 10))\nplt.subplot(1, 2, 1)\necg_labels = ['hypertrophy', 'normal', 'having ST-T']\necg_explode = (.1, .1, .1)\nplt.pie(heart_df['restecg'].value_counts(), labels=ecg_labels, startangle=90, shadow=True, explode=ecg_explode,\n       autopct='%1.1f%%')\nplt.title('resting electrocardiographic results')\nplt.legend(loc='lower right')\n\nplt.subplot(1, 2, 2)\nsns.barplot(x=ecg_data['index'], y=ecg_data['restecg'])\nplt.ylabel('Count')\nplt.xticks()","812fc242":"# Heatmap correlation\nplt.figure(figsize=(20, 10))\nsns.heatmap(heart_df.corr(), annot=True, cmap='jet')","3c1f1502":"# Pairplot\nplt.figure(figsize=(20, 10))\nsns.pairplot(heart_df, hue='output')","8931f3f3":"import plotly.figure_factory as ff","56dc8c2f":"ff_age = ff.create_distplot([heart_df[heart_df.output==1].age, heart_df[heart_df.output==0].age],\n                           ['Heart Diease', 'No Heart Diease'], colors=['red', 'blue'])\nff_age.update_layout(title='Distribution of Heart Disease wrt Age', xaxis_title='Age')\nff_age.show()","0d23f393":"ff_age = ff.create_distplot([heart_df[heart_df.output==1].trtbps, heart_df[heart_df.output==0].trtbps],\n                           ['Heart Diease', 'No Heart Diease'], colors=['red', 'blue'])\nff_age.update_layout(title='Distribution of Heart Disease wrt resting blood pressure (in mm Hg)', xaxis_title='resting blood pressure')\nff_age.show()","e0a328fb":"ff_age = ff.create_distplot([heart_df[heart_df.output==1].thalachh, heart_df[heart_df.output==0].thalachh],\n                           ['Heart Diease', 'No Heart Diease'], colors=['red', 'blue'])\nff_age.update_layout(title='Distribution of Heart Disease wrt maximum heart rate achieved', xaxis_title='maximum heart rate achieved')\nff_age.show()","e1e6ffbe":"ff_age = ff.create_distplot([heart_df[heart_df.output==1].chol, heart_df[heart_df.output==0].chol],\n                           ['Heart Diease', 'No Heart Diease'], colors=['red', 'blue'])\nff_age.update_layout(title='Distribution of Heart Disease wrt cholestoral', xaxis_title='cholestoral in mg\/dl fetched via BMI sensor')\nff_age.show()","f682c41b":"ff_age = ff.create_distplot([heart_df[heart_df.output==1].oldpeak, heart_df[heart_df.output==0].oldpeak],\n                           ['Heart Diease', 'No Heart Diease'], colors=['red', 'blue'])\nff_age.update_layout(title='Distribution of Heart Disease wrt oldpeak', xaxis_title='Oldpeak')\nff_age.show()","9ac33574":"sex_data = heart_df[['sex', 'output']]\nsex_data['sex'] = sex_data['sex'].replace([1], 'male')\nsex_data['sex'] = sex_data['sex'].replace([0], 'female')\nsex_data['output'] = sex_data['output'].replace([1], 'Heart Disease')\nsex_data['output'] = sex_data['output'].replace([0], 'No Heart Disease')\nsns.catplot(x='sex', data=sex_data, kind='count', hue='output')","38e1fea4":"cp_data = heart_df[['cp', 'output']]\ncp_data['cp'] = cp_data['cp'].replace([1], 'typical')\ncp_data['cp'] = cp_data['cp'].replace([2], 'atrypical')\ncp_data['cp'] = cp_data['cp'].replace([3], 'non-anginal')\ncp_data['cp'] = cp_data['cp'].replace([0], 'asymtomatic')\ncp_data['output'] = cp_data['output'].replace([1], 'Heart Disease')\ncp_data['output'] = cp_data['output'].replace([0], 'No Heart Disease')\nsns.catplot(x='cp', data=cp_data, kind='count', hue='output')","f209866a":"fbs_data = heart_df[['fbs', 'output']]\nfbs_data['fbs'] = fbs_data['fbs'].replace([1], '>120 mg\/dl')\nfbs_data['fbs'] = fbs_data['fbs'].replace([0], '<=120 mg\/dl')\nfbs_data['output'] = fbs_data['output'].replace([1], 'Heart Disease')\nfbs_data['output'] = fbs_data['output'].replace([0], 'No Heart Disease')\nsns.catplot(x='fbs', data=fbs_data, kind='count', hue='output')","c2b605f2":"ecg_data = heart_df[['restecg', 'output']]\necg_data['restecg'] = ecg_data['restecg'].replace([1], 'normal')\necg_data['restecg'] = ecg_data['restecg'].replace([2], 'having ST-T')\necg_data['restecg'] = ecg_data['restecg'].replace([0], 'hypertrophy')\necg_data['output'] = ecg_data['output'].replace([1], 'Heart Disease')\necg_data['output'] = ecg_data['output'].replace([0], 'No Heart Disease')\nsns.catplot(x='restecg', data=ecg_data, kind='count', hue='output')","0d36cbdb":"# Analysis\n","950ff684":"1. age - age in years\n\n2. sex - sex (1 = male; 0 = female)\n\n3. cp - chest pain type (1 = typical angina; 2 = atypical angina; 3 = non-anginal pain; 0 = asymptomatic)\n\n4. trestbps - resting blood pressure (in mm Hg on admission to the hospital)\n\n5. chol - serum cholestoral in mg\/dl\n\n6. fbs - fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\n\n7. restecg - resting electrocardiographic results (1 = normal; 2 = having ST-T wave abnormality; 0 = hypertrophy)\n\n8. thalach - maximum heart rate achieved\n\n9. exang - exercise induced angina (1 = yes; 0 = no)\n\n10. oldpeak - ST depression induced by exercise relative to rest\n\n11. slope - the slope of the peak exercise ST segment (2 = upsloping; 1 = flat; 0 = downsloping)\n\n12. ca - number of major vessels (0-3) colored by flourosopy\n\n13. thal - 2 = normal; 1 = fixed defect; 3 = reversable defect\n\n14. num - the predicted attribute - diagnosis of heart disease (angiographic disease status) (Value 0 = < diameter narrowing; Value 1 = > 50% diameter narrowing)"}}