{"cell_type":{"7972af4d":"code","812b5ca5":"code","e5ecd567":"code","07ca3099":"code","1504d6e7":"code","70f02526":"code","f56dd1e9":"code","4da69d5a":"code","fd67094d":"code","4a4a2829":"code","994053b4":"code","1e1ef28c":"code","b5322270":"code","72257725":"code","b4376248":"code","27127e90":"code","59c2da07":"code","693e6d60":"code","d6d62ff6":"code","29a29059":"code","e0924e93":"code","876ba0e5":"code","834b21e4":"code","6de652bc":"code","11342d3f":"code","54d88656":"code","75636c7c":"code","1cf5be5c":"code","1ad7fb14":"code","e774692d":"code","9169beee":"code","35780cb1":"code","7488655a":"code","06ab4a29":"code","b477e10b":"code","fd70f29f":"code","1b21e916":"code","fd5ae4b3":"code","348a4d9d":"code","e29474be":"code","878d4e5c":"markdown","ee45eb25":"markdown","07d87762":"markdown","6782cc1c":"markdown","b48e18d5":"markdown","023c7324":"markdown","bd554aee":"markdown","ba69655c":"markdown","8748b3c6":"markdown","19beed82":"markdown","4e40156e":"markdown","79c10789":"markdown","128332bf":"markdown"},"source":{"7972af4d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","812b5ca5":"# Basic\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Common Tools\nfrom sklearn.preprocessing import LabelEncoder\nfrom collections import Counter\n\n#Algorithms\nfrom sklearn import ensemble, tree, svm, naive_bayes, neighbors, linear_model, gaussian_process, neural_network\nimport xgboost as xgb\nfrom xgboost.sklearn import XGBClassifier\n\n# Model\nfrom sklearn.metrics import accuracy_score, f1_score, auc, roc_curve, roc_auc_score\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV, cross_val_score\n#from sklearn.ensemble import VotingClassifier\n\n#Configure Defaults\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","e5ecd567":"df_train=pd.read_csv(\"..\/input\/song-popularity-prediction\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/song-popularity-prediction\/test.csv\")\ndf_sample=pd.read_csv(\"..\/input\/song-popularity-prediction\/sample_submission.csv\")","07ca3099":"df_train.head()","1504d6e7":"df_train.info()","70f02526":"df_train.shape","f56dd1e9":"df_train.columns","4da69d5a":"df_test.shape","fd67094d":"print(\"No. of columns containing null values\")\nprint(len(df_train.columns[df_train.isna().any()]))\n\nprint(\"No. of columns not containing null values\")\nprint(len(df_train.columns[df_train.notna().all()]))\n\nprint(\"Total no. of columns in the dataframe\")\nprint(len(df_train.columns))","4a4a2829":"nan_cols = [i for i in df_train.columns if df_train[i].isnull().any()]","994053b4":"nan_cols","1e1ef28c":"df_train[df_train.columns[df_train.isnull().any()]].isnull().sum()","b5322270":"df_train[df_train.columns[df_train.isnull().any()]].isnull().sum() * 100 \/ df_train.shape[0]","72257725":"df_train.describe()","b4376248":"df_train[\"song_popularity\"].value_counts()","27127e90":"df_train[\"song_popularity\"].value_counts().plot(kind=\"bar\")","59c2da07":"corr=df_train.corr()\ncorr.style.background_gradient(cmap='coolwarm')","693e6d60":"for i in range(1,len(df_test.columns)):\n    df_train[[df_train.columns[i]]].boxplot(figsize=(6,8))\n    plt.show()","d6d62ff6":"qnt = df_train.song_duration_ms.quantile(0.99)\nqnt","29a29059":"df_train = df_train[df_train['song_duration_ms'] < qnt]","e0924e93":"df_train","876ba0e5":"Id = df_test['id']","834b21e4":"#Get split marker\nsplit = len(df_train)","6de652bc":"#Merging into one dataset\ndata =  pd.concat(objs=[df_train, df_test], axis=0).reset_index(drop=True)","11342d3f":"data.drop('id', axis=1, inplace=True)","54d88656":"data","75636c7c":"sns.distplot(data['song_duration_ms'].dropna())","1cf5be5c":"median = data['song_duration_ms'].median()\nstd = data['song_duration_ms'].std()\nis_null = data['song_duration_ms'].isnull().sum()\nrand_age = np.random.randint(median - std, median + std, size = is_null)\nage_slice = data['song_duration_ms'].copy()\nage_slice[np.isnan(age_slice)] = rand_age\ndata['song_duration_ms'] = age_slice\ndata['song_duration_ms'] = data['song_duration_ms'].astype(int)","1ad7fb14":"data","e774692d":"nan_cols","9169beee":"data['acousticness'].fillna(data['acousticness'].mode()[0], inplace = True)","35780cb1":"data['acousticness'].isnull().sum()","7488655a":"data['danceability'].fillna(data['danceability'].mean(), inplace = True)","06ab4a29":"data['energy'].fillna(data['energy'].mean(), inplace = True)","b477e10b":"data['instrumentalness'].fillna(data['instrumentalness'].mean(), inplace = True)","fd70f29f":"data['key'].fillna(data['key'].mean(), inplace = True)","1b21e916":"data['liveness'].fillna(data['liveness'].mean(), inplace = True)","fd5ae4b3":"data['loudness'].fillna(data['loudness'].mean(), inplace = True)","348a4d9d":"df_train.columns","e29474be":"for i in range(1,len(df_test.columns)):\n    a = sns.FacetGrid(df_train, hue = 'song_popularity', aspect=4 )\n    a.map(sns.kdeplot, df_train.columns[i], shade= True )\n    a.set(xlim=(0, df_train[df_train.columns[i]].max()))\n    a.add_legend()","878d4e5c":"# **Percentage of null values in each column**","ee45eb25":"# **Checking the columns that has null values in them**","07d87762":"# **Loading the dataset**","6782cc1c":"# **Plotting boxplot to detect outliers in each column**","b48e18d5":"# **Checking whether the dataset is balanced or not**","023c7324":"# Train dataset columns\n# Here **\"song popularity\"** is the target column","bd554aee":"# Processing the dataset\n# Removing and imputing null values","ba69655c":"# **Train dataset shape**","8748b3c6":"# **Checking the distribution of each column with the target variable**","19beed82":"# **Checking the correlation among different columns**","4e40156e":"# **Distribution of values in each column**","79c10789":"# **Checking the count of null values in each column**","128332bf":"# **Checking the datatypes**"}}