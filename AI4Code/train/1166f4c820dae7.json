{"cell_type":{"04277ebf":"code","3c9ad525":"code","2e4b1d37":"code","47e6ef11":"code","a6acf790":"code","e6ca03e9":"code","c253235e":"code","e6d7d6cc":"code","f1dc6609":"code","96bb1ff9":"code","6ba84b69":"markdown","588fa407":"markdown"},"source":{"04277ebf":"# Dependencies\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3c9ad525":"# DataFrame\nDIR = '..\/input\/'\ndf = pd.read_csv(DIR + 'toy_dataset.csv')","2e4b1d37":"print('Shape: {} rows and {} columns.\\n'.format(df.shape[0], \n                                              df.shape[1]))\n\n# First 5 Rows\nprint('First 5 rows:')\ndisplay(df.head())\n# Last 5 Rows\nprint('Last 5 rows:')\ndisplay(df.tail())","47e6ef11":"# Basic Stats\nprint('Basic Statistics')\ndf.describe()","a6acf790":"income_stats = [df['Income'].mean(), df['Income'].mode()[0], df['Income'].median()]\nage_stats = [df['Age'].mean(), df['Age'].mode()[0], df['Age'].median()]\n\nindex = ['Mean', 'Mode', 'Median']\n\nmean_mode_median = pd.DataFrame({'Income' : income_stats, 'Age' : age_stats}, index=index)\n\nprint('Mean, Mode and Median for Income and Age')\nmean_mode_median","e6ca03e9":"df['Gender'].value_counts().plot(kind='barh', \n                                 rot=0, \n                                 title='Gender Distribution', \n                                 figsize=(15,3))","c253235e":"male_df = df[df['Gender'] == 'Male']\nfemale_df = df[df['Gender'] == 'Female']\n\nx = pd.Series(male_df['Income'])\ny = pd.Series(female_df['Income'])\n\nplt.figure(figsize=(16,7))\n\nbins = np.linspace(0, 175000, 200)\n\nplt.hist(x, bins, alpha=0.5, label='Male Income')\nplt.hist(y, bins, alpha=0.5, label='Female Income')\nplt.legend(loc='upper right', prop={'size' : 28})\nplt.xlabel('Income')\nplt.ylabel('Frequency', rotation=0)\nplt.rc('axes', labelsize=10) \nplt.rc('axes', titlesize=30) \nplt.title('Income Distribution by Gender')\n# Save\n#plt.savefig('Income_Dist_Gender')\n\nplt.show()","e6d7d6cc":"new_df = df[df['City'] == 'New York City']\nlos_df = df[df['City'] == 'Los Angeles']\nbos_df = df[df['City'] == 'Boston']\nmoun_df = df[df['City'] == 'Mountain View']\nwash_df = df[df['City'] == 'Washington']\naus_df = df[df['City'] == 'Austin']\nsan_df = df[df['City'] == 'San Diego']\ndal_df = df[df['City'] == 'Dallas']\n\na = pd.Series(new_df['Income'])\nb = pd.Series(los_df['Income'])\nc = pd.Series(bos_df['Income'])\nd = pd.Series(moun_df['Income'])\ne = pd.Series(wash_df['Income'])\nf = pd.Series(aus_df['Income'])\ng = pd.Series(san_df['Income'])\nh = pd.Series(dal_df['Income'])\n\nplt.figure(figsize=(16,7))\n\nbins = np.linspace(0, 175000, 200)\n\nplt.hist(a, bins, alpha=0.5, label='New York City')\nplt.hist(b, bins, alpha=0.5, label='Los Angeles')\nplt.hist(c, bins, alpha=0.5, label='Boston', color='cyan')\nplt.hist(d, bins, alpha=0.5, label='Mountain View', color='crimson')\nplt.hist(e, bins, alpha=0.5, label='Washington D.C.', color='Black')\nplt.hist(f, bins, alpha=0.5, label='Austin', color='Gold')\nplt.hist(g, bins, alpha=0.5, label='San Diego', color='DarkBlue')\nplt.hist(h, bins, alpha=0.5, label='Dallas', color='Lime')\nplt.legend(loc='upper right', prop={'size' : 22})\nplt.xlabel('Income')\nplt.ylabel('Frequency', rotation=0)\nplt.rc('axes', labelsize=10) \nplt.rc('axes', titlesize=30) \nplt.rc('xtick', labelsize=20)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=20) \nplt.title('Income Distribution by City')\n# Save\n#plt.savefig('Income_Dist_City')\n\nplt.show()","f1dc6609":"df['City'].value_counts().plot(kind='barh', \n                               rot=0, \n                               title='City Counts', \n                               figsize=(15,5))","96bb1ff9":"df['Illness'].value_counts().plot(kind='barh', \n                                  title='Illness counts', \n                                  figsize=(15,3))","6ba84b69":"A quick walkthrough of [this toy dataset](https:\/\/www.kaggle.com\/carlolepelaars\/toy-dataset).","588fa407":"## Quick EDA (Exploratory Data Analysis)"}}