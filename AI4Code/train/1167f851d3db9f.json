{"cell_type":{"d5d60e97":"code","96616c8c":"code","19ef0400":"code","87fd9f68":"code","e2bd44f0":"code","9eee226b":"code","24e71dbc":"code","bbabad35":"code","0923938e":"code","75b5b8bd":"code","a3e7eff2":"code","d8b14618":"code","295ab524":"code","7e15024c":"code","7a8484ba":"code","8f9fd2e2":"code","46cb2075":"code","68c9ac3a":"code","3fec2601":"code","155d33d1":"code","70fe712b":"code","92f6cbb4":"code","90f42e7d":"code","cbeda1b1":"code","ddae3a32":"code","f794b10c":"markdown","a68c42c2":"markdown","f6dce83d":"markdown","08c4540a":"markdown","9adeefaa":"markdown","1d64f7ba":"markdown","07c0bc32":"markdown","535f2d55":"markdown","c0ac5d14":"markdown","b24fb73c":"markdown","dec2b876":"markdown","2338231a":"markdown","1e656dd3":"markdown","c997750e":"markdown","333df96a":"markdown","a90cb3e7":"markdown","1d65f8b9":"markdown","2ba3ab66":"markdown","ab7b0c11":"markdown"},"source":{"d5d60e97":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline\nplt.style.use('seaborn')","96616c8c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","19ef0400":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","87fd9f68":"train.describe()","e2bd44f0":"train.info()","9eee226b":"print(train.isnull().sum())\n\nsns.heatmap(train.isnull(), yticklabels='', cmap='plasma')\nplt.show()","24e71dbc":"train.corr().style.background_gradient(cmap='Blues')","bbabad35":"def render_percentage(fg, total):\n    fg.fig.subplots_adjust(top=0.9)\n#     fg.fig.suptitle('Percent (Count)')\n\n    for ax in fg.axes.ravel():\n\n        # add annotations\n        for c in ax.containers:\n\n            # custom label calculates percent and add an empty string so 0 value bars don't have a number\n            labels = [f'{v.get_height()\/total*100:0.1f}% ({v.get_height()})' if v.get_height() > 0 else '' for v in c]\n\n            ax.bar_label(c, labels=labels, label_type='edge')\n\n    plt.show()","0923938e":"fg = sns.catplot(x =\"Survived\", kind =\"count\", data = train)\nplt.xticks([0,1], [\"No\", \"Yes\"])\nrender_percentage(fg, train.Survived.count())","75b5b8bd":"print(train.groupby(['Sex', 'Survived'])['Survived'].count())\n\nfg = sns.catplot(x =\"Sex\", hue =\"Survived\", kind =\"count\", data = train)\nplt.title('Male\/Female Servival Distribution')\nrender_percentage(fg, train.Survived.count())","a3e7eff2":"group = train.groupby(['Pclass', 'Survived'])\npclass_survived = group.size().unstack()\n \nsns.heatmap(pclass_survived, annot = True, fmt =\"d\")\nplt.xticks([0.5,1.5], [\"No\", \"Yes\"])","d8b14618":"\ntrain['Fare_Range'] = pd.qcut(train['Fare'], 4)\nsns.barplot(x ='Fare_Range', y ='Survived', data = train)","295ab524":"fg = sns.catplot(x='Embarked', kind='count', data=train)\nrender_percentage(fg, train.shape[0])","7e15024c":"fg = sns.catplot(x ='Embarked', hue ='Survived', kind ='count', col ='Pclass', data = train)\nrender_percentage(fg, train.Survived.count())","7a8484ba":"sns.histplot(x=train.Age, bins=20, kde=True)\nplt.axhline(y=train.Age.mean(), label=\"Mean Line\")\nplt.legend()\nplt.show()","8f9fd2e2":"data = train.copy()\ndata['Family_Members'] = 0\ndata['Family_Members'] = data['Parch'] + data['SibSp']\n\ndata['Alone'] = 0\ndata.loc[data.Family_Members == 0, 'Alone'] = 1\n\n\nsns.catplot(x='Family_Members', y='Survived', data=data, kind='point')\nplt.show()\n\nsns.catplot(x='Alone', y='Survived', data=data, kind='point')\nplt.xticks([0, 1], ['No', 'Yes'])\nplt.show()","46cb2075":"sns.catplot(x='Pclass', y='Fare', hue='Sex', kind='point', data=train)\nplt.show()","68c9ac3a":"sns.heatmap(train.corr(), annot=True)\nplt.title(\"Correlation Map\")\nplt.show()","3fec2601":"titanic = train.copy()\ntitanic.isnull().sum()","155d33d1":"titanic['Age'].fillna(titanic['Age'].mean(), inplace=True)\ntitanic['Family_cnt'] = titanic['SibSp'] + titanic['Parch']\n\ngender_num = {'male': 0, 'female': 1}\ntitanic['Gender'] = titanic['Sex'].map(gender_num)","70fe712b":"titanic.drop(['Cabin', 'Embarked', 'Name', 'Ticket', 'Sex', 'PassengerId', 'SibSp', 'Parch'], axis=1, inplace=True)","92f6cbb4":"print(titanic.isnull().sum())\n\nsns.heatmap(titanic.isnull(), yticklabels='', cmap='plasma')\nplt.show()","90f42e7d":"titanic.corr().style.background_gradient(cmap='Greens_r')","cbeda1b1":"num_cols = titanic.select_dtypes(include=np.number).columns.tolist()\n\nfor col in num_cols:\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 2))\n    sns.boxplot(x=col, data=titanic, ax=ax1)\n    sns.histplot(x=col, data=titanic, ax=ax2)\n    plt.show()","ddae3a32":"titanic.to_csv('..\/..\/..\/titanic_cleaned.csv', index=False)","f794b10c":"\n\n***Thank You :)***","a68c42c2":"> 38.6% where survived and 61.6% people were not surviced","f6dce83d":"> 72.3% (644) of travelers from S Port\n\n> 18.9% (168) of travelers from C Port\n\n> 8.6.3% (77) of travelers from Q Port","08c4540a":"> First need to handle null\/empty value records for Age, Cabin & Embarked features\n\n> We can not define cabin based on other feature (except familly name), So it's good to avoid","9adeefaa":"> Majority of class 3 passengers boarded from Q\n\n> Majority of the passengers boarded from S. So, the missing values can be filled with S\n\n> S looks lucky for class 1 and 2 passengers compared to class 3","1d64f7ba":"> Negative correlation between Fare and Pclass is -0.55.\n\n> Also Negative correlation between Age and Pclass is -0.34.\n \n> SibSp positively correlated with Parch is +0.41.","07c0bc32":"**Save the cleaned data**","535f2d55":"**Load Titanic Dataset in Dataframe (train.csv)**","c0ac5d14":"> The higher fare payer survival chance is more","b24fb73c":"> PClass 1 passengers have a higher survival chance compared to PClass 2 and 3","dec2b876":"> Majority people belong to 20 to 35 age ","2338231a":"# Let's Start EDA","1e656dd3":"> Feamle paid more fare in each PClasse","c997750e":"> The survival rate is less for alone\n\n> Chances of survival decrease if family members count is 4 or more","333df96a":"> Age, Cabin, and Embarked feature has null\/missign values, Need to handle those missing values before use them","a90cb3e7":"**Pre-processing (Cleaning)**","1d65f8b9":"**Import Libraries**","2ba3ab66":"Now, no more any null\/empty values","ab7b0c11":"> Female servival ratio is higher "}}