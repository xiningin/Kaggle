{"cell_type":{"a1f9b600":"code","294f2cc5":"code","f9970691":"code","5871fec4":"code","8ffa366e":"code","305928c2":"markdown"},"source":{"a1f9b600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","294f2cc5":"def submission_generation(dataframe, name):\n    \"\"\"\n    Esta funci\u00f3n genera un csv a partir de un dataframe de pandas. \n    Con FileLink se genera un enlace desde el que poder descargar el fichero csv\n    \n    dataframe: DataFrame de pandas\n    name: nombre del fichero csv\n    \"\"\"\n    import os\n    from IPython.display import FileLink\n    os.chdir(r'\/kaggle\/working')\n    dataframe.to_csv(name, index = False)\n    return  FileLink(name)","f9970691":"train_raw = pd.read_csv(\"\/kaggle\/input\/rms-titanic\/train.csv\")\ntest_raw = pd.read_csv(\"\/kaggle\/input\/rms-titanic\/test.csv\")\n\ntrain_raw.head()","5871fec4":"answer_everybody_died = pd.DataFrame({\"PassengerId\": test_raw.PassengerId, \n                                      \"Survived\": 0})","8ffa366e":"submission_generation(answer_everybody_died, \"submission_zero.csv\")","305928c2":"Aproximadamente en la tragedia del titanic muri\u00f3 el 62% de los pasajeros, por tanto, el clasificador m\u00e1s b\u00e1sico ser\u00eda suponer que todos fallecieron, con lo que garantizamos una tasa de acierto del 62%. L\u00f3gicamente esto es muy mejorable."}}