{"cell_type":{"c0112051":"code","e524308a":"code","6fa2b938":"code","dcb72569":"code","74b9d921":"code","45a887aa":"code","114a5925":"code","d9c47a69":"code","79952a96":"code","2e9343c7":"code","ad0c45db":"code","6cf063bc":"markdown","c2fb7693":"markdown","76b59451":"markdown","ed1ed726":"markdown","7945d3e1":"markdown","8c9c53ed":"markdown","94cc6292":"markdown","6d25544c":"markdown","ea97d4c5":"markdown","a681fece":"markdown","1550e2f0":"markdown","a192a5f5":"markdown","435100fb":"markdown","c8ab2741":"markdown"},"source":{"c0112051":"\nimport os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.offline as offline\nimport plotly.graph_objs as go\n\noffline.init_notebook_mode(connected=True)\n\n","e524308a":"#OverView of the data file\napps_data = pd.read_csv(\"..\/input\/googleplaystore.csv\")\napps_data.head(10)","6fa2b938":"#Cleaning the file for better visualization results\napps_data=apps_data.dropna()","dcb72569":"app_categories=apps_data['Category'].unique() #list of all categories\n#print(app_categories)\napp_category_dict=apps_data['Category'].value_counts() #Each category and there count(series)\nprint(app_category_dict)","74b9d921":"values = app_category_dict.keys().tolist()\n\ncounts = app_category_dict.tolist()\n\nx = counts\ny = values\ntrace_bar =[go.Bar(x = counts,y = values,orientation='h',marker=dict(color=counts,colorscale='Viridis'))]\n\nlayout_bar = go.Layout(title = 'Count of Apps in each Category found in Play Store',\n                   titlefont = dict(family = 'Arial',size = 20,color = '#8B0000' ),\n                   height=900,\n                   yaxis=dict(title='Category',titlefont=dict(family='Arial, sans-serif',size=18,color='grey'),showticklabels=True,\n                    tickfont=dict(family='Old Standard TT, serif',size=10,color='#4E1C11')),\n                   xaxis=dict(title='Count(In Numbers)',titlefont=dict(family='Arial, sans-serif',size=18,color='grey'),\n                              domain=[0.1,0.6]))\n\nfig = go.Figure(data=trace_bar,layout=layout_bar)\noffline.iplot(fig)","45a887aa":"free_app=apps_data.loc[apps_data['Type'] == 'Free']\napp_category_dict_free=free_app['Category'].value_counts() #Each category and there count(series)\n#print(app_category_dict_free)\n\npaid_app=apps_data.loc[apps_data['Type'] == 'Paid']\napp_category_dict_paid=paid_app['Category'].value_counts() #Each category and there count(series)\n#print(app_category_dict_paid)","114a5925":"trace1 =go.Bar(x = app_category_dict_free.tolist(), y = app_category_dict_free.keys().tolist(),\n                orientation='h',name='Free',marker={'color': '#0B405F'})\n\ntrace2 =go.Bar(x = app_category_dict_paid.tolist(), y = app_category_dict_paid.keys().tolist(),\n                orientation='h',xaxis='x2',yaxis='y2',name='Paid',marker={'color': '#06848A'})\n\nlayout1 = go.Layout(title = 'Count of Apps in Different categories in Play Store ( Free Vs. Paid )',\n                   titlefont = dict(family = 'serif',size =25,color = '#8B0000' ),\n                   height=900,\n                   \n                   yaxis=dict(title='Category',titlefont=dict(family='Arial, sans-serif',size=18,color='Grey'),\n                                showticklabels=True,\n                                tickwidth=1,\n                                tickfont=dict(family='Calibri',size=12,color='#4E1C11')),\n                   \n                   xaxis=dict(title='Count (In Numbers) [Free Apps]',tickwidth=1,domain=[0.1,0.6],titlefont=dict(family='Arial, sans-serif',size=14,color='#0B405F')),\n                   xaxis2=dict(title='Count (In Numbers) [Paid Apps]',domain=[0.7,1.0],titlefont=dict(family='Arial, sans-serif',size=14,color='#06848A')),\n                   yaxis2=dict(anchor='x2',title='Category',titlefont=dict(family='Arial, sans-serif',size=18,color='Grey'),\n                                showticklabels=True,\n                                tickwidth=1,\n                                tickfont=dict(family='Calibri',size=12,color='#4E1C11'))\n                  )\n\nfig = go.Figure(data=[trace1,trace2],layout=layout1)\noffline.iplot(fig)","d9c47a69":"genre_series = apps_data['Genres']\ngenre_list=[]\nfor values in genre_series:\n    s=values.split(';')\n    genre_list.extend(s)\n#print(genre_list)\ngenre_data=pd.Series(genre_list).value_counts()\n\ntrace_pie=[go.Pie(labels = genre_data.keys().tolist(),values = genre_data.tolist(),\n                 hoverinfo = 'label+value+percent', \n               \n               textinfo = 'percent', \n               textfont = dict(size = 10),\n               \n               marker = dict(\n                             line = dict(color = 'black', \n                                         width = 1)\n                            ),hole = 0.08\n             )]\nlayout_pie = go.Layout(title = 'Percentage of Apps in different Genre',\n                   titlefont = dict(family = 'serif',size = 25,color = 'Black' ),\n                   height=900)\n\nfig = go.Figure(data=trace_pie,layout=layout_pie)\noffline.iplot(fig)","79952a96":"apps_data['Installs'] = apps_data['Installs'].astype(str)\napps_data['Installs'] = apps_data['Installs'].str.replace(r'\\D', '').astype(int)\ndataframe1=apps_data.groupby('Content Rating')[['Installs']].sum()\n#print(dataframe1)\ntrace_scatter=[go.Scatter(x=dataframe1.index.tolist(),\n                 y=dataframe1.Installs.tolist() ,\n                 hoverinfo = \"x+y\",\n                 mode='markers',\n                 marker=dict(size=14))]\n\nlayout_scatter = go.Layout(title = 'Installs in each Content Rating',\n                   titlefont = dict(family = 'serif',size = 25,color = 'Black' ),\n                   height=900,plot_bgcolor = '#E2E2E2' )\n\nfig_scatter = go.Figure(data=trace_scatter,layout=layout_scatter)\noffline.iplot(fig_scatter)","2e9343c7":"category_list=apps_data['Category'].unique()\nN=len(category_list)\n#print(N)\ndata_box=[{'name':category_list[i],\n       'y':apps_data.loc[apps_data['Category'] == category_list[i] ,'Rating'],\n       'type' : 'box'\n    }for i in range(int(N))]\n\nlayout_box=go.Layout(title='Rating Analysis for Each Category',titlefont=dict(family = 'serif',size = 25,color = 'Black' ),\n                   height=900,\n                    yaxis=dict(title='Rating',titlefont=dict(family='Arial, sans-serif',size=18,color='grey'),showticklabels=True,\n                    tickfont=dict(family='serif',size=15,color='#4E1C11')),\n                   xaxis=dict(showticklabels=True,tickangle=30,tickwidth=0.2,\n                              tickfont=dict(family='serif',size=10,color='#4E1C11')))\nfig_box=go.Figure(data=data_box,layout=layout_box)\noffline.iplot(fig_box)","ad0c45db":"apps_data['Price']=apps_data['Price'].astype(str)\napps_data['Price'] = apps_data['Price'].map(lambda x: x.strip('$'))\napps_data['Price']=apps_data['Price'].astype(float)\ndataframe2 = apps_data[apps_data['Type']=='Paid'].groupby('Category')[['Price']].max()\ndataframe3 = apps_data[apps_data['Type']=='Paid'].groupby('Category')[['Price']].min()\ntrace_max=go.Scatter(x=dataframe2.index.tolist(),\n                    y=dataframe2.Price.tolist(),\n                    name='Highest priced App',\n                    line=dict(color = '#490F0F',\n                width = 4))\n\ntrace_min=go.Scatter(x=dataframe3.index.tolist(),\n                    y=dataframe3.Price.tolist(),\n                    name='Least priced App',\n                    line=dict(color = '#F46523',\n                width = 4))\ndata_lines=[trace_max,trace_min]\nlayout_lines=go.Layout(title='Highest & Least Priced App in each Category',titlefont=dict(family = 'serif',size = 25,color = 'Black' ),\n                   height=900,\n                    yaxis=dict(title='Price($)',titlefont=dict(family='Arial, sans-serif',size=18,color='grey'),showticklabels=True,\n                    tickfont=dict(family='serif',size=15,color='#4E1C11')),\n                   xaxis=dict(showticklabels=True,tickangle=30,tickwidth=0.2,\n                              tickfont=dict(family='serif',size=10,color='#4E1C11')))\nfig_lines=go.Figure(data=data_lines,layout=layout_lines)\noffline.iplot(fig_lines)","6cf063bc":"We can see that in \nFree Apps : The highest number of apps present are of \"Family\" category where as the least number of apps are in \"Beauty\" Category.\nPaid Apps : In Paid apps also the highest number of apps belong to the \"Family\" category where as the least number of apps are of \"Auto and Vehicles\" Category.\n\nBoth the plots clearly signify that the count of apps in each category in play store varify on basis of the factor whether its a **Free** or **Paid** app.","c2fb7693":"**6) Highest & Least Priced App in each Category**","76b59451":"The plot \"Count of Apps in each Category found in Play Store\" evidently displays that highest number of apps present in google play store belongs to the \"Family\" category \nand the least number of apps are present in the \"Beauty\" category .","ed1ed726":"**This was a small analysis of the apps present in Google Play Store .\nI tried to cover all the major factors in the above 6 graphs that might help a business\/individual to understand the different features and factors of usability of apps in Google Play Store .**","7945d3e1":"\"Unrated Content \" apps have the least number of installs , this clearly signifies that user like to download apps seeing the Content_Rating.","8c9c53ed":"**4) Average Installs in each Content Rating**","94cc6292":"> **Data Visualization using *\"plotly\"* on a DataSet of Google Play Store Apps**\n\n*(Web scraped data of 10k Play Store apps for analysing the Android market.)*\n\n***Columns***\n\n1) App :- Application name\n\n2) Category :- Category the app belongs to\n\n3) Rating :- Overall user rating of the app (as when scraped)\n\n4) Reviews :- Number of user reviews for the app (as when scraped)\n\n5) Size :- Size of the app (as when scraped)\n\n6) Installs :- Number of user downloads\/installs for the app (as when scraped)\n\n7) Type :- Paid or Free\n\n8) Price :- Price of the app (as when scraped)\n\n9) Content Rating :- Age group the app is targeted at - Children \/ Mature 21+ \/ Adult\n\n10) Genres :- An app can belong to multiple genres (apart from its main category). For eg, a musical family game will belong to Music, Game, Family genres.\n\n11) Last Updated :- Date when the app was last updated on Play Store (as when scraped)\n\n12) Current Ver :- Current version of the app available on Play Store (as when scraped)\n\n13) Android Ver :- Min required Android version (as when scraped)","6d25544c":"The above plot gives a clear picture of the maximum,minimum and average rating of apps in each Category .","ea97d4c5":"**5) Now we will analyse the Rating of apps for Each Category**","a681fece":"\"FAMILY\"  & \"FINANCE\" category has the highest priced app . The above plot gives the highest price and lowest price of app present in each category and also gives a overview of  prices of apps in each category .","1550e2f0":"**3) Let us find what are the Genres of apps present in app store and the app strength of each Genre **","a192a5f5":"**2) Now we will see which category has the highest and least app based on the factor whether the app is \"Free\"  or  \"Paid\".**","435100fb":"In the Genre of \"Tools\" 7.45% of the total apps are present making it the highest percentage of apps in a particular genre. \nIt is followed by Education comprising of \"6.81%\" of total app and then Entertainment having \"5.86%\". ","c8ab2741":"**1) Let us look at the different categories of apps present in PlayStore**"}}