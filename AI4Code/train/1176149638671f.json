{"cell_type":{"33a9947c":"code","d7cd1a9a":"code","db990aab":"code","59ce2d33":"code","3f8f2649":"code","bdc2d715":"code","bb7b8d66":"code","acc4b8dc":"code","9531fdce":"code","31b49245":"code","b57dd784":"markdown","f4ca2a66":"markdown","182a47f8":"markdown","54f8dd9d":"markdown","91ea5341":"markdown","6d2c9285":"markdown","8633b0b8":"markdown","a9c7fd36":"markdown","482aaaba":"markdown","5c5dbfcd":"markdown"},"source":{"33a9947c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d7cd1a9a":"## 2008 Elections ##\nMargin = pd.DataFrame([])\nNA2008 = pd.read_csv(\"..\/input\/National Assembly 2008.csv\", encoding = \"ISO-8859-1\")\nConstituencies = NA2008.ConstituencyTitle.unique()\nfor i in range(len(Constituencies)):\n    Const = Constituencies[i]\n    if Const != \"NA-8\" and Const != \"NA-119\" and Const != \"NA-207\" and Const != \"NA-235\" and Const != \"NA-266\" and Const != \"NA-83\" and Const != \"NA-254\":\n        NA = NA2008.loc[NA2008['ConstituencyTitle']==Const, ['ConstituencyTitle','Party','Votes','TotalVotes', 'Seat']]\n        NA = NA.sort_values(by=['Votes'], ascending = False)\n        NA = NA.iloc[0:2,:] # Only Winner and Runnerup\n        NA['TotalVotes'] = NA.Votes.sum() \n        NA['Votes'] = NA['Votes']\/np.unique(NA['TotalVotes']) # Changing votes to percentages\n        Diff = NA.iloc[0,2] - NA.iloc[1,2]\n        Win = NA.iloc[0,1] # Winner\n        Run = NA.iloc[1,1] # RunnerUp\n        temp = pd.DataFrame([Const,Diff,Win,Run]).T\n        temp.index = [i]\n        Margin = pd.concat([Margin,temp])\nMargin08 = Margin.rename(columns = {0:'Constituency08', 1:'Diff08(%)', 2:'Winner08', 3:'RunnerUp08'})","db990aab":"## 2013 Elections ##\nMargin = pd.DataFrame([])\nNA2013 = pd.read_csv(\"..\/input\/National Assembly 2013.csv\", encoding = \"ISO-8859-1\")\nConstituencies = NA2013.ConstituencyTitle.unique()\nfor i in range(len(Constituencies)):\n    Const = Constituencies[i]\n    if Const != \"NA-8\" and Const != \"NA-119\" and Const != \"NA-207\" and Const != \"NA-235\" and Const != \"NA-266\" and Const != \"NA-83\" and Const != \"NA-254\":\n        NA = NA2013.loc[NA2013['ConstituencyTitle']==Const, ['ConstituencyTitle','Party','Votes','TotalVotes', 'Seat']]\n        NA = NA.sort_values(by=['Votes'], ascending = False)\n        NA = NA.iloc[0:2,:] # Only Winner and Runnerup\n        NA['TotalVotes'] = NA.Votes.sum() \n        NA['Votes'] = NA['Votes']\/np.unique(NA['TotalVotes']) # Changing votes to percentages\n        Diff = NA.iloc[0,2] - NA.iloc[1,2]\n        Win = NA.iloc[0,1] # Winner\n        Run = NA.iloc[1,1] # RunnerUp\n        temp = pd.DataFrame([Const,Diff,Win,Run]).T\n        temp.index = [i]\n        Margin = pd.concat([Margin,temp])\nMargin13 = Margin.rename(columns = {0:'Constituency13', 1:'Diff13(%)', 2:'Winner13', 3:'RunnerUp13'})","59ce2d33":"Sorted_Margin13 = Margin13#.sort_values(by=['Diff(%)'], ascending = True)\nSorted_Margin13 = Sorted_Margin13.reset_index()\nSorted_Margin13 = Sorted_Margin13.drop(['index'], axis=1)\n#Sorted_Margin13 = Sorted_Margin13.drop([269], axis=0)\nSorted_Margin13 = Sorted_Margin13.set_index('Constituency13')\nSorted_Margin13['Diff13(%)'] = (Sorted_Margin13['Diff13(%)']*100).astype('float16')\n\nSorted_Margin08 = Margin08#.sort_values(by=['Diff(%)'], ascending = True)\nSorted_Margin08 = Sorted_Margin08.reset_index()\nSorted_Margin08 = Sorted_Margin08.drop(['index'], axis=1)\n#Sorted_Margin08 = Sorted_Margin08.drop([266], axis=0)\nSorted_Margin08 = Sorted_Margin08.set_index('Constituency08')\nSorted_Margin08['Diff08(%)'] = (Sorted_Margin08['Diff08(%)']*100).astype('float16')","3f8f2649":"Table = pd.concat([Sorted_Margin08,Sorted_Margin13],axis=1)\n#Table.drop(['Constituency13'],axis=1)\nTable.style.background_gradient(cmap='summer',axis=0)","bdc2d715":"Winner13 = pd.DataFrame(np.array(Sorted_Margin13['Winner13']))\nWinner08  = Sorted_Margin08.iloc[:,0:2]\nWinner08.reset_index(inplace=True)\nComp = pd.concat([Winner08,Winner13],axis=1)\nComp = Comp.rename(columns = {0:'Winner13'})\nComp = Comp.sort_values(by=['Diff08(%)'], ascending = True)\nComp = Comp.set_index('Constituency08')\nComp = Comp.drop(['NA-42'], axis=0)","bb7b8d66":"import seaborn as sns\nComp['Retained'] = Comp['Winner08'] == Comp['Winner13']\nComp = Comp[Comp.Winner08 != 'Independent']#.tail(8)#.Retained.sum()\nComp = Comp[Comp.Winner13 != 'Independent']\nComp.style.background_gradient(cmap='summer',axis=0)\n","acc4b8dc":"Not_Ret = Comp.loc[Comp['Retained']==False]#.style.background_gradient(cmap='summer',axis=0)\nRet = Comp.loc[Comp['Retained']==True]\nprint(\"Seats Retained:\", len(Ret))\nprint(\"Seats Lost:\" ,len(Not_Ret))","9531fdce":"\nRet.loc[Ret['Diff08(%)'] <= 10]#.Retained.sum()\n#sns.distplot(Ret['Diff08(%)'], kde=False, rug=False);\n#sns.distplot(Not_Ret['Diff08(%)'], kde=True, rug=False);","31b49245":"Not_Ret.loc[Not_Ret['Diff08(%)'] >= 30]","b57dd784":"** Now I would like to analyze the effect of this margin of victory on retaining the constituency, i.e. how likely a party is to retain the constituency based on margin of the victory in previous elections**\n\nFor this purpose I would be considering winning margins only for 2008 elections and see its effect on 2013 elections. For the sake of simplicity I have removed the constituencies where **Independent** candidates were winners, so that we can focus on parties rather than individuals.","f4ca2a66":"# **Introduction**\n\nIn Pakistan, some constituecies see very close battles and the results are neck to neck, but similarly there are few constituecies where there is a huge difference of votes between the winner and the runner up. In this kernel, I would like to analyze this for 2008 and 2013 elections. ","182a47f8":"# **To be continued**\n** Based on the above conclusions I would make some interesting predictions about upcoming elections soon** ","54f8dd9d":"**Lets combine the resuts of two elections**","91ea5341":"** We observe that only 14 out of 114 not retained seats have margin of victory more than 30%**","6d2c9285":"Lets try to find out for the retained seats, which seats had margin of victor less than *say* **10%**.","8633b0b8":"**In above table darker green color indicates lesser difference between winner and runnerup, and as the color  moves to lighter side it indicates more difference**.","a9c7fd36":"Lets try the same experiment for **Not Retained** seats. Lets try to find out for the not retained seats, which seats had margin of victor more than *say* **30%**.","482aaaba":"At first glance, it is quite evident that having a huge lead would likely to contribute to the party retaining the seat for the upcoming elections too.\n\n**Lets dig bit deep into this and analyze further**","5c5dbfcd":"** We observe that only 13 out of 104 seats have margin of victory less than 10%**"}}