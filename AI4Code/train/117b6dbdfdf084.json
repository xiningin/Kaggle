{"cell_type":{"8b2bbf5e":"code","cc097b09":"code","fe5f76cf":"code","4bb0fd44":"code","6eff1489":"code","46b7431f":"code","f04ccc29":"code","abe13027":"code","6ae92b22":"code","7ef0bad6":"code","f46d116f":"code","b33cbb9d":"code","133fc99d":"markdown"},"source":{"8b2bbf5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc097b09":"!pip install scikit-rf","fe5f76cf":"import skrf as rf\nfrom skrf import Network, Frequency\nfrom numpy.random import rand","4bb0fd44":"# dummy 2-port network from Frequency and s-parameters\nfreq = Frequency(1, 10, 101, 'ghz')\ns = rand(101, 2, 2) + 1j*rand(101, 2, 2)  # random complex numbers\n# if not passed, will assume z0=50. name is optional but it's a good practice.\nntwk = Network(frequency=freq, s=s, name='random values 2-port')\nntwk","6eff1489":"ntwk.plot_s_smith()","46b7431f":"# dummy 2-port network from Frequency and s-parameters\nfreq = Frequency(1, 2, 2, 'ghz')\ns = rand(2, 1 ,1 ) + 1j*rand(2, 1,1 )  # random complex numbers\n# if not passed, will assume z0=50. name is optional but it's a good practice.\nntwk = Network(frequency=freq, s=s, name='random values 1-port')\nntwk","f04ccc29":"s","abe13027":"s.shape","6ae92b22":"ntwk.plot_s_smith(0,0,draw_labels=True)","7ef0bad6":"rf.plotting.smith(smithR=1, chart_type='z', draw_labels=False, border=False, ax=None, ref_imm=1.0, draw_vswr=None)","f46d116f":"rf.plotting.smith(smithR=1, chart_type='z', draw_labels=True, border=False, ax=None, ref_imm=1.0, draw_vswr=None)","b33cbb9d":"rf.plotting.smith(smithR=1, chart_type='z', draw_labels=True, border=True, ax=None, ref_imm=1.0, draw_vswr=None)","133fc99d":"$\\Gamma_1 = \\frac {Z_1 - Z_o}{Z_1 + Z_o}$  \n$T_1(z = 0) = 1+ \\Gamma_1 = \\frac {2 Z_1}{Z_1 + Z_o}$  \nAssume $Z_1$ is halfwave long and terminated with $Z_o$.  \n$T_1(z = 0.5 \\lambda) =T_1(z = 0) e^{-j \\beta 0.5 \\lambda }$  \n$T_1(z = 0.5 \\lambda) =  T_1(z = 0) e^{-j \\frac {2\\pi}{\\lambda} 0.5 \\lambda }$  \n$T_1(z = 0.5 \\lambda) =  T_1(z = 0) e^{-j \\pi }$  \n$T_1(z = 0.5 \\lambda) =  - T_1(z = 0)$  \nReflection coefficient at load $Z_o$ or $z= 0.5 \\lambda$ is  \n$\\Gamma_2 = \\frac {Z_o - Z_1}{Z_o + Z_1} = -\\Gamma_1$  \nReflection wave at $z=0.5 \\lambda$ is $T_1(z = 0.5 \\lambda) \\Gamma_2 = T_1(z = 0) \\Gamma_1$.  \nReflection wave at $z=0$ is $T_1(z = 0) \\Gamma_1 e^{-j \\pi}$.  \n"}}