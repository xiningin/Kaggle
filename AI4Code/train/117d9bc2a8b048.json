{"cell_type":{"b27dbf1a":"code","1e46561b":"code","4f21b98f":"code","e57e1863":"code","11dd0afa":"code","ffe1590a":"code","1d8c2153":"code","748b5e3d":"code","248c2ec0":"code","de13cd76":"code","24ad2388":"code","b38023c8":"code","f595ab0e":"code","1186a155":"code","0ccad671":"code","897020bf":"code","4fa2be03":"code","fd6a1b5a":"code","cdccd658":"code","1b0a4a67":"code","18d1515f":"markdown"},"source":{"b27dbf1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1e46561b":"import pandas as pd\nimport nltk\nimport string","4f21b98f":"df = pd.read_csv('..\/input\/customer-support-on-twitter\/twcs\/twcs.csv')","e57e1863":"df.head()","11dd0afa":"df.shape","ffe1590a":"df.info()","1d8c2153":"df.text = df.text.astype(str)","748b5e3d":"print(df.text.head(10))\ndf.text_low = df.text.str.lower()\ndf.text.head(10)","248c2ec0":"PUNCTUATIONS = string.punctuation\ndef remove_punct(text):\n    return text.translate(str.maketrans('', '', PUNCTUATIONS))\n\ndf.text_wo_punct = df.text.apply(lambda text: remove_punct(text))","de13cd76":"df.head()","24ad2388":"from nltk.corpus import stopwords\n\", \".join(stopwords.words('english'))","b38023c8":"STOPWORDS = set(stopwords.words('english'))\ndef remove_stopwords(text):\n    return \" \".join([word for word in str(text).split() if word not in STOPWORDS])\n\ndf.text_wo_stop = df.text_wo_punct.apply(lambda text: remove_stopwords(text))\ndf.head()","f595ab0e":"from collections import Counter\ncnt = Counter()\nfor text in df.text_wo_stop.values:\n    for word in text.split():\n        cnt[word] += 1\n        \ncnt.most_common(10)","1186a155":"FREQWORDS = set([w for (w, wc) in cnt.most_common(10)])\ndef remove_freqwords(text):\n    return \" \".join([word for word in str(text).split() if word not in FREQWORDS])\n\ndf.text_wo_stopfreq = df.text_wo_stop.apply(lambda text: remove_freqwords(text))\ndf.head()","0ccad671":"n_rare_words = 10\nRAREWORDS = set([w for (w, wc) in cnt.most_common()[:-n_rare_words-1:-1]])\ndef remove_rarewords(text):\n    return \" \".join([word for word in str(text).split() if word not in RAREWORDS])\n\ndf.text_wo_stopfreqrare = df.text_wo_stopfreq.apply(lambda text: remove_rarewords(text))\ndf.head()","897020bf":"from nltk.stem.porter import PorterStemmer\n\nstemmer = PorterStemmer()\ndef stem_words(text):\n    return \" \".join([stemmer.stem(word) for word in text.split()])\n\ndf.text_stemmed = df.text.apply(lambda text: stem_words(text))\ndf.head()","4fa2be03":"from nltk.stem.snowball import SnowballStemmer\nSnowballStemmer.languages","fd6a1b5a":"from nltk.stem import WordNetLemmatizer\n\nlemmatizer = WordNetLemmatizer()\ndef lemmatize_words(text):\n    return \" \".join([lemmatizer.lemmatize(word) for word in text.split()])\n\ndf.text_lemmatized = df.text.apply(lambda text: lemmatize_words(text))\ndf.head()","cdccd658":"lemmatizer.lemmatize(\"running\")","1b0a4a67":"lemmatizer.lemmatize(\"running\", \"v\")","18d1515f":"##### Reference: https:\/\/www.kaggle.com\/sudalairajkumar\/getting-started-with-text-preprocessing"}}