{"cell_type":{"030fda18":"code","248d1cfd":"code","6ddf390a":"code","2d8e1aaf":"code","a32ce2f4":"code","0cb2834d":"code","402939a2":"code","9a52f951":"code","a851a9d8":"code","eb0d98be":"code","45d1de2f":"code","b5655d88":"code","7580971f":"code","4785d68c":"code","a02ee4f7":"code","4c0e501e":"code","ae6b4bf2":"code","432e71f3":"code","6fdadc6a":"code","508f8f64":"code","ea44f121":"code","ca6332d3":"code","d21b165a":"code","eed85c2a":"code","cb060301":"code","c7902556":"code","90534ec2":"code","2600f797":"code","5859dfb9":"code","3247a337":"code","74bdb0dd":"code","d8099fc6":"code","953c681c":"code","b9529dc9":"code","ec574ea3":"code","2177e001":"code","eec4aee6":"code","694faa4b":"code","5fa22e05":"code","d7906582":"code","0e55086c":"code","19dd3a94":"code","64099cc2":"code","f329ca51":"code","a8ae60fc":"code","ae70d793":"code","64a4bf4e":"code","80f88931":"code","aa626501":"code","04204221":"code","cde0d24e":"code","778c99d8":"code","f3f65873":"code","6dc232b0":"markdown","1c7f5880":"markdown","300f59f1":"markdown","11be290c":"markdown","bf2e6575":"markdown","2d7730bf":"markdown","5b0153e3":"markdown","740543c5":"markdown","61e5792c":"markdown","e69baf76":"markdown","95d7cc23":"markdown","9a2f766b":"markdown","d81a10fb":"markdown","69184c7e":"markdown","c058c067":"markdown","2ccddcda":"markdown"},"source":{"030fda18":"import numpy as np","248d1cfd":"dizi = np.array([\"\u0130lhan\", 48, \"Mu\u011fla\", 61])\nprint(dizi)","6ddf390a":"dizi2 = np.array([12, 11, 5.2, 7])\nprint(dizi2)","2d8e1aaf":"dizi3 = [\"Mu\u011fla\", \"Ankara\", \"\u0130stanbul\", \"\u0130zmir\", \"Antalya\", \"Trabzon\"]\ndizi3_np = np.array(dizi3)\nprint(dizi3_np)\n","a32ce2f4":"type(dizi3_np)","0cb2834d":"dizi4 = [12, 43, 58, 77, 90]\ndizi5 = [9, 34, 100, 23, 89]\ndizi4_np = np.array(dizi4)\ndizi5_np = np.array(dizi5)\nortalama = (dizi4_np + dizi5_np) \/ 2\nprint(ortalama)","402939a2":"dizi4 + dizi5","9a52f951":"dizi4_np + dizi5_np","a851a9d8":"dizi4_np + 5","eb0d98be":"dizi5_np * 4","45d1de2f":"dizi4_np - 6","b5655d88":"dizi4_np[0]","7580971f":"dizi5_np[3]","4785d68c":"ortalama > 50","a02ee4f7":"ortalama[ortalama > 50]","4c0e501e":"# 1' den 10' a kadar aritmetik artan bir dizi olu\u015fturmak.\nnp.arange(1,10)","ae6b4bf2":"# 1'den 10' a kadar \u00fc\u00e7er artan dizi olu\u015fturmak.\nnp.arange(1,10,3)","432e71f3":"# np.random.normal(loc=0.0, scale=1.0, size=None)\n#ba\u015flang\u0131\u00e7 de\u011ferinden biti\u015f de\u011feri aras\u0131nda rastgele belirtilen index kadar bir dizi \u00fcretir.\nnp.random.normal(1,10,4)","6fdadc6a":"#random.randint(low, high=None, size=None, dtype=int)\n#ba\u015flang\u0131\u00e7 de\u011ferinden biti\u015f de\u011feri aras\u0131nda rastgele belirtilen index kadar integer bir dizi \u00fcretir.\nnp.random.randint(1,10,3)","508f8f64":"# linspace(linear space): -4 ile 4 aras\u0131nda 15 adet e\u015fit aral\u0131klarla par\u00e7alanm\u0131\u015f say\u0131 olu\u015fturmak\nnp.linspace(-4,4,15)","ea44f121":"# logspace(logaritmic space): ba\u015flang\u0131\u00e7 de\u011feri ile biti\u015f de\u011feri aras\u0131nda belirtti\u011fimiz say\u0131da logaritma \u00f6l\u00e7e\u011finde e\u015fit aral\u0131klarla eleman yazd\u0131r\u0131r.\n# np.logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None, axis=0)\nnp.logspace(0,2,10)","ca6332d3":"dizi6 = np.random.randint(10, size= 10)\n","d21b165a":"dizi6.ndim","eed85c2a":"dizi6.shape","cb060301":"dizi6.size","c7902556":"dizi6.dtype","90534ec2":"dizi6.astype(float)","2600f797":"dizi6.astype(str)","5859dfb9":"dizi6","3247a337":"dizi7 = np.arange(20)\nprint(dizi7)","74bdb0dd":"#ilk 10 eleman\ndizi7[:10]","d8099fc6":"#10. index sonras\u0131 elemanlar\ndizi7[:10]","953c681c":"#7. indexten ba\u015flay\u0131p 18. indexe kadar olan elemanlar\ndizi7[7:18]","b9529dc9":"#diziyi 3'er olarak saymak\ndizi7[::3]","ec574ea3":"#reshape metodu tek boyutlu dizimizi \u00e7ok boyutlu hale getirmek i\u00e7in kullan\u0131l\u0131r.\nmatrix = dizi7.reshape(4,5)\nmatrix","2177e001":"#2. sat\u0131r 3. s\u00fctun\nmatrix[2:3, 3:4]","eec4aee6":"#2. sat\u0131ra 3. s\u00fctuna kadar\nmatrix[:2, :3]","694faa4b":"\nmatrix.shape","5fa22e05":"# 3 boyutlu bir dizi olu\u015ftural\u0131m \nmatrix2 = np.arange(30)\nmatrix3 = matrix2.reshape(3,2,5)","d7906582":"matrix3.shape","0e55086c":"# Transpoz matrisin ayn\u0131 numaral\u0131 sat\u0131rlar\u0131 ile s\u00fctunlar\u0131n\u0131n yer de\u011fi\u015ftirmesi demektir. \n# Bir dizinin transpozunu almak i\u00e7in .T metodu kullan\u0131l\u0131r.\nmatrix3.T\n","19dd3a94":"dizi8 = np.arange(30).reshape(3,5,2)","64099cc2":"#y\u00fckseklik toplam\u0131\ndizi8.sum(0)","f329ca51":"#sut\u00fcn toplam\u0131\ndizi8.sum(1)","a8ae60fc":"#sat\u0131r toplam\u0131\ndizi8.sum(2)","ae70d793":"# Sat\u0131rlar\u0131n birikimli toplam\u0131\ndizi8.cumsum(1)","64a4bf4e":"dizi8","80f88931":"# Verilen eksende maksimum de\u011ferler\ndizi8.max(2) # sat\u0131rlar\u0131n maksimum de\u011ferleri","aa626501":"dizi8.max(1) # s\u00fctunlar\u0131n maksimum de\u011ferleri","04204221":"dizi8.max(0) # levhalar\u0131n maksimum de\u011ferleri (y\u00fckseklik dedi\u011fimde anla\u015f\u0131lmayaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm i\u00e7in levha kelimesini kulland\u0131m )","cde0d24e":"# Verilen eksende maksimum de\u011ferlerin s\u0131ra numaras\u0131\ndizi8.argmax(0) # levhalarda maksimum de\u011ferlerin s\u0131ra numaras\u0131","778c99d8":"dizi8.argmax(1) # s\u00fctunlarda maksimum de\u011ferlerin s\u0131ra numaras\u0131","f3f65873":"dizi8.argmax(2) # sat\u0131rlarda maksimum de\u011ferlerin s\u0131ra numaras\u0131","6dc232b0":"# Aritmetik \u0130\u015flemler\nStandart Python dizilerinde her hangi iki diziyi toplamak istedi\u011fimizde bize \u00e7\u0131kt\u0131 olarak toplamak istedi\u011fimiz iki dizinin birle\u015fmesinden olu\u015fan yeni bir dizi verir. NumPy dizilerinde ise durum bundan farkl\u0131d\u0131r. \u0130\u015flem uygulad\u0131\u011f\u0131m\u0131z dizilerin ayn\u0131 indexine kar\u015f\u0131l\u0131k gelen de\u011ferlere uygulamak istedi\u011fimiz i\u015flemi yapar. Bu tan\u0131m i\u00e7in bir \u00f6rnek verelim.","1c7f5880":"NumPy arraylerini herhangi bir say\u0131 ile aritmetik i\u015flem yaparsak bu i\u015flem her indexteki elemanlara uygulan\u0131r. ","300f59f1":"NumPy dizilerinde indexe dayal\u0131 eleman se\u00e7me olay\u0131 tamamen standart Python listeleri ile ayn\u0131d\u0131r.","11be290c":"## NumPy Arrayi Olu\u015fturma\n\u00d6rneklerde dikkatinizi \u00e7ekmi\u015ftir. \u00d6rneklerimizi olu\u015ftururken (np.array) methodunu kulland\u0131m. Bu method bize ister i\u00e7erisine tek tek dizi elemanlar\u0131 vererek veya daha \u00f6nceden olu\u015fturulmu\u015f bir diziyi NumPy arrayine d\u00f6n\u00fc\u015ftirmemize olanak sa\u011flar.","bf2e6575":"Sonuca bakt\u0131\u011f\u0131m\u0131zda bool tipinden olu\u015fan bir Numpy arrayi g\u00f6r\u00fcyoruz. Buradan anlamam\u0131z gereken bu ko\u015fulumuz dizinin her eleman\u0131nda test edilmi\u015f 50'den k\u00fc\u00e7\u00fck olanlar \"False\" b\u00fcy\u00fck olanlar(\u015fart\u0131 sa\u011flayanlar) \"True\" de\u011fer d\u00f6nd\u00fcrm\u00fc\u015ft\u00fcr. \u015eimdide bu ko\u015fulu dizimize uygulay\u0131p 50'den b\u00fcy\u00fck olan de\u011ferleri g\u00f6relim.","2d7730bf":"## Birikimli toplamlar\u0131 bulmak i\u00e7in **.cumsum()** metodu kullan\u0131l\u0131r.","5b0153e3":"Daha \u00f6nce \u00fczerinden ge\u00e7tim lakin tekrardan hat\u0131rlatma yapmak istiyorum. NumPy dizisinden eleman se\u00e7mek i\u00e7in kulland\u0131\u011f\u0131m\u0131z method:\n* dizi[ba\u015flang\u0131\u00e7:biti\u015f:ad\u0131m] \n* Varsay\u0131lan de\u011ferleri; ba\u015flang\u0131\u00e7: 0, biti\u015f: dizinin boyutu, ad\u0131m:1","740543c5":"NumPy dizileri ko\u015fula ba\u011fl\u0131 olarak se\u00e7me i\u015flemi yapmam\u0131za olanak sa\u011flamaktad\u0131r. Bu ko\u015fullar\u0131 belirtmek i\u00e7in mant\u0131ksal operat\u00f6rleri kullan\u0131r\u0131z. Mesela yukar\u0131da olu\u015fturdu\u011fumuz iki Numpy dizisinin ortalamas\u0131ndan olu\u015fan \"ortalama\" isimli diziden \"50\" say\u0131s\u0131ndan b\u00fcy\u00fck olan elemanlar\u0131 listeleyelim.   ","61e5792c":"## NumPy Dizileri ile \u0130\u015flemler","e69baf76":"## Numpy Dizi \u00d6zellikleri\n* ndim: NumPy arrayinin boyut say\u0131s\u0131\n* shape: NumPy arrayinin boyut bilgisi\n* size: NumPy arrayinin toplam eleman say\u0131s\u0131\n* dtype: NumPy arrayinin array veri tipi\n* astype: Numpy arrayinin veri tipini de\u011fi\u015ftirir ancak orjinal dizi bu de\u011fi\u015fimden etkilenmez.","95d7cc23":"## Bir NumPy dizisinin boyutlar\u0131n\u0131 g\u00f6rmek i\u00e7in **.shape()** metodunu kullanabiliriz.","9a2f766b":"## \u00c7ok Boyutlu Array\nListe,s\u00f6zl\u00fck,NumPy arrayi gibi veri yap\u0131lar\u0131 bir boyutludurlar. Bir boyutun anlam\u0131 bu veri yap\u0131lar\u0131n\u0131 yaln\u0131zca uzunluklar\u0131 vard\u0131r. Geometride nas\u0131l noktalar bir araya gelerek do\u011frular\u0131 olu\u015fturuyorsa verilerde yan yana gelerek tek boyutlu dizileri, listeleri olu\u015ftururlar. Ancak evrende yaln\u0131zca tek boyutlu veriler yoktur. Mesela iki boyutlu veri yap\u0131lar\u0131nda sat\u0131r ve s\u00fctun bulunur \u00fc\u00e7 boyutlu veri yap\u0131lar\u0131nda ise bunlara ek olarak y\u00fckseklikte bulunmaktad\u0131r. T\u00fcm bunlar\u0131 anlad\u0131\u011f\u0131m\u0131za g\u00f6re \u015fimdi akl\u0131m\u0131za tek boyutlu veri yap\u0131lar\u0131nda dizi i\u00e7erisindeki verilere bulundu\u011fu index yard\u0131m\u0131yla ula\u015f\u0131yorduk peki \u00e7ok boyutlu arraylerde verilere nas\u0131l ula\u015faca\u011f\u0131z? Asl\u0131nda \u00e7o\u011funuzun akl\u0131na gelmi\u015ftir ama ben tekrar s\u00f6yleyip hepimizin kafas\u0131nda netle\u015ftirmek istiyorum. \u0130ki boyutlu arraylerde sat\u0131r ve s\u00fctun, \u00fc\u00e7 boyutlu arraylerde ise sat\u0131r, s\u00fctun ve y\u00fcksekli\u011fe ihtiyac\u0131m\u0131z vard\u0131r.  ","d81a10fb":"# Array olu\u015fturan baz\u0131 kolay metodlar","69184c7e":"G\u00f6r\u00fcld\u00fc\u011f\u00fc gibi 3 boyutlu bir diziyi de\u011ferlendirdik. Bu sonu\u00e7ta y\u00fcksekli\u011fimiz 3, sat\u0131r say\u0131m\u0131z 2, s\u00fctun say\u0131m\u0131z 5'dir.","c058c067":"### import i\u015flemi\nNumPy haz\u0131r bir Python k\u00fct\u00fcphanesidir. Kodlar\u0131m\u0131zda bu k\u00fct\u00fcphanenin \u00f6zelliklerine(fonksiyon ve metod) eri\u015febilmek i\u00e7in i\u015flemlerden \u00f6nce k\u00fct\u00fcphaneyi projemize dahil etmemiz gereklidir. \u0130mport i\u015flemini ger\u00e7ekle\u015ftirdikten sonra bir fonkisyona veya methoda eri\u015fmek i\u00e7in her defas\u0131nda (.numpy) yazmak k\u00fclfetli bir yol olaca\u011f\u0131 i\u00e7in (np) k\u0131saltmas\u0131 ile kullanmak i\u00e7in onu temsil eden yeni bir isim at\u0131yoruz. Daha basit anlaman\u0131z i\u00e7in (np)'yi de\u011fi\u015fken (numpy)'\u0131 de\u011fer olarak d\u00fc\u015f\u00fcnebilirsiniz.  ","2ccddcda":"# NumPy\nNumPy dizilerinin asl\u0131nda Python'daki dizilerden pek fark\u0131 yoktur. Aralar\u0131ndaki en keskin fark\u0131 s\u00f6ylemek gerekirse Numpy dizileri tek tip veri tipi tutarlar. Mesela; standart python dizilerinde dizinin elemanlar\u0131 integer, float, string gibi farkl\u0131 tip de\u011fi\u015fkenler olabilirken Numpy dizilerinde bu m\u00fcmk\u00fcn de\u011fildir(Dizideki her eleman ayn\u0131 tiptir.).\nNumpy'\u0131n bask\u0131c\u0131 bu tutumu asl\u0131nda b\u00fcy\u00fck verilerle \u00e7al\u0131\u015f\u0131rken performans olarak bizlere yans\u0131yacakt\u0131r \u00e7\u00fcnk\u00fc bildi\u011finiz gibi her de\u011fi\u015fkenin bellekte kaplad\u0131\u011f\u0131 bir alan vard\u0131r Numpy bu \u00f6zelli\u011fi sayesinde integer array, float array gibi i\u015flemi \u00f6nemli \u00f6l\u00e7\u00fcde h\u0131zland\u0131racak bir yol izleyip belle\u011fi rahatlat\u0131r."}}