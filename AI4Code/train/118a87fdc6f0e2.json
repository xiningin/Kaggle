{"cell_type":{"28c2ba89":"code","93d8cf35":"code","5d3fbe3d":"code","3c81edc7":"code","491a2aab":"code","0a118c51":"code","0d3184d3":"code","4b7f30b0":"code","eddbcb0a":"code","07259807":"code","16f539d2":"code","499a71db":"code","cdc38d0f":"code","ab67b521":"code","dcd1ed40":"code","643d768e":"code","ae03ec92":"code","cc3d7dc3":"code","09ba88ec":"code","487a8578":"code","fe09f833":"code","324745ad":"code","fae28673":"code","d0fccb90":"code","d599b0ed":"code","cc31a76b":"code","ce5c0a80":"code","db36953e":"code","c55e6dcd":"code","fb99d4dc":"code","af4716b9":"code","674274aa":"code","ea8a7fb8":"code","a75bb2c0":"code","8b5841c0":"code","6e33f646":"code","ae399112":"code","bd4c6311":"code","a43338a6":"code","26aec13e":"code","d6709a7d":"code","f9cce907":"code","59d6abd1":"code","1e3438db":"code","713e0c60":"markdown","3f0d1600":"markdown","2521c450":"markdown","911775e8":"markdown","54ac96c4":"markdown","524c2f45":"markdown","354dc300":"markdown","034655ae":"markdown"},"source":{"28c2ba89":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93d8cf35":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain.head()","5d3fbe3d":"test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest.head()","3c81edc7":"gender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ngender_submission.head()","491a2aab":"train.shape","0a118c51":"import seaborn as sns","0d3184d3":"sns.countplot(x='Survived',data=train)","4b7f30b0":"sns.countplot(x='Survived',hue='Sex',data=train,palette='winter')","eddbcb0a":"sns.countplot(x='Survived',hue='Pclass',data=train,palette='PuBu')","07259807":"train['Age'].plot.hist()","16f539d2":"train['Fare'].plot.hist(bins=20,figsize=(10,5))","499a71db":"sns.countplot(x='SibSp',data=train)","cdc38d0f":"train['Parch'].plot.hist()","ab67b521":"sns.countplot(x='Parch',data=train)","dcd1ed40":"train.isnull().sum()","643d768e":"train.drop('Cabin',axis=1,inplace=True)\ntest.drop('Cabin',axis=1,inplace=True)","ae03ec92":"train.head()","cc3d7dc3":"test.head()","09ba88ec":"train.dropna(inplace=True)\n#test.dropna(inplace=True)","487a8578":"train.shape","fe09f833":"test.shape","324745ad":"train.isnull().sum()","fae28673":"test.isnull().sum()","d0fccb90":"train['Sex'] = train['Sex'].map({'male':1,'female':0})\ntest['Sex'] = test['Sex'].map({'male':1,'female':0})","d599b0ed":"train.head()","cc31a76b":"train.drop(['PassengerId','Ticket','Embarked','Name','Fare'],axis=1,inplace=True)\ntest.drop(['PassengerId','Ticket','Embarked','Name','Fare'],axis=1,inplace=True)","ce5c0a80":"test['Age']=test.fillna(test['Age'].mean())","db36953e":"train.head()","c55e6dcd":"test.head()","fb99d4dc":"X=train.drop('Survived',axis=1)\ny=train['Survived']","af4716b9":"from sklearn.model_selection import train_test_split","674274aa":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=42)","ea8a7fb8":"from sklearn.linear_model import LogisticRegression\nLogistic=LogisticRegression()\nLogistic.fit(X_train,y_train)","a75bb2c0":"predictions=Logistic.predict(X_test)\nLogistic.score(X_test,y_test)","8b5841c0":"from sklearn.ensemble import RandomForestClassifier\nRandom_forest=RandomForestClassifier()\nRandom_forest.fit(X_train,y_train)","6e33f646":"predictions_2=Random_forest.predict(X_test)\nRandom_forest.score(X_test,y_test)","ae399112":"from sklearn import tree\nDecision_tree=tree.DecisionTreeClassifier()\nDecision_tree.fit(X_train,y_train)","bd4c6311":"predictions_3=Decision_tree.predict(X_test)\nDecision_tree.score(X_test,y_test)","a43338a6":"from sklearn.neighbors import KNeighborsClassifier\nKNN=KNeighborsClassifier()\nKNN.fit(X_train,y_train)","26aec13e":"predictions_4=KNN.predict(X_test)\nKNN.score(X_test,y_test)","d6709a7d":"Logistic.fit(X,y)","f9cce907":"pred=Logistic.predict(test)","59d6abd1":"submission=pd.DataFrame({\"PassengerId\": gender_submission[\"PassengerId\"],\"Survived\":pred})","1e3438db":"submission.to_csv('submission.csv',index=False)","713e0c60":"<h3>Logistic Regression","3f0d1600":"<h3>DecisionTreeClassifier","2521c450":"<h1>Analysing data","911775e8":"<h3>KNeighborsClassifier","54ac96c4":"<h1>Model Selection","524c2f45":"<h3>RandomForestClassifier","354dc300":"<h1>Data Cleaning","034655ae":"<h1>Loading the data"}}