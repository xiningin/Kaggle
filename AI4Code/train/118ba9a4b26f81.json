{"cell_type":{"7dcc9ca8":"code","885ca252":"code","02dbf2d8":"code","b92c3017":"code","922a93dd":"code","43142ab2":"code","e93a03de":"code","604f55c2":"code","f2ef5690":"code","398e0518":"code","8b368237":"code","d5013896":"code","e47d2629":"code","87acd8ee":"code","ce79d6cf":"code","48cb90f6":"code","0cf39ad1":"code","a50ea8b8":"code","88281cdf":"code","2e3e58ae":"code","cf299430":"code","48a86e0e":"code","17196ecf":"code","fb3457a7":"code","5a97fe95":"code","ccde3937":"code","e1e8732d":"code","9548e5c2":"code","a9f58cc2":"markdown","130fe26b":"markdown","9426231e":"markdown","2fee3e12":"markdown","2c1ad0ef":"markdown","bf0fe126":"markdown","eca575ef":"markdown"},"source":{"7dcc9ca8":"#so lets follow an traditional way of creating list using for loop\ncube_list = []\n\nfor i in range(0,10):\n  cube_list.append(i**3)\n\ncube_list","885ca252":"#list comprehension\n[i**3 for i in range(0,10)]","02dbf2d8":"#lets use filtering using condition\n#traditional way\ncub_lst = []\n\nfor i in range(1,20):\n  if(i%2==0):\n    cub_lst.append(i**3)\n\nprint(cub_lst)","b92c3017":"#using list comprehension\n[i**3 for i in range(1,20) if(i%2==0)]","922a93dd":"#task: wap to check list comprehension using multiple conditons\n[i for i in range(1,100) if (i%2 ==0) if (i%3 == 0)]","43142ab2":"#Task: Segregate a list of positive numbers into Even and Odd in range 1 to 10\n[str(i) + ': Even' if (i%2 == 0) else str(i)+ ':Odd' for i in range(1,10)]","e93a03de":"#task: print table of 7 using list comprehension\n[i * j for j in range(1,11) for i in range(7,8)]","604f55c2":"#lets define a function\ndef greet():\n  \"\"\"Block of Statements or body\n  of a function\"\"\"\n\n  print('Hello!, i m printing from inside the functions greet')","f2ef5690":"greet()","398e0518":"#task: wap to find the factorial of a given number\ndef fact():\n  num = int(input('Enter the number'))\n  i, facto = 1,1\n  while(i<=num):\n    facto = facto * i\n    i += 1\n  print('THe factorial of {0} is {1}!'.format(num, facto))","8b368237":"fact()","d5013896":"#Functions with parameters\ndef greet(p_name):\n  \"\"\"This is a function which takes an argument as\n  person name, and greets him\/her with greetings\"\"\"\n  print(\"Howdy Mr\/Ms: \",p_name)","e47d2629":"name = input(\"Enter the name\")\ngreet(name)","87acd8ee":"greet.__doc__","ce79d6cf":"#function with multiple parameters\ndef add(a,b):\n  return(a+b)\n\nx = int(input(\"Number 1: \\n\"))\ny = int(input(\"Number 2: \\n\"))\n\nprint(\"Sum of {0} and {1} is {2} \".format(x,y, add(x,y)))","48cb90f6":"#task: use sub, mul. div, mod, power and floor div","0cf39ad1":"#functions with default arguments\ndef sqr(num, pow=2):\n  return(num**pow)","a50ea8b8":"x = int(input(\"Enter the number\"))\nprint(sqr(x))","88281cdf":"y = int(input(\"enter the number\"))\nprint(sqr(5,5))","2e3e58ae":"s = lambda arg: arg*arg\n\nx = int(input('Enter the number'))\nprint(s(x))","cf299430":"#task: write a lamda function to raise power of one number with second number \n\ns= lambda x,y: x**y\na= int(input(\"Enter a number: \"))\nb= int(input(\"Enter a number: \"))\ns(a,b)","48a86e0e":"nums = range(1,10)\n\n#lets define a lambda functions with the help of map\nsq = map(lambda num: num **2, nums)\nprint(list(sq))","17196ecf":"#tsk: print prime numbers using map function from 1 to 100","fb3457a7":"st = ['One','Two','Three','Four','Five','Six','Seven','Eight']\n\n#filtering the strings whose length is greater than 3\nf_st = filter(lambda string: len(string) > 3, st)\n\nprint(list(f_st))","5a97fe95":"#creating a class\nclass Employee:\n  \"\"\"Common base class for all employess\"\"\"\n  #class variable\n  empCount = 0\n\n\n  #lets define a contructor\n  def __init__(self, name, salary):\n    self.name = name\n    self.salary = salary\n    Employee.empCount += 1\n\n\n  #methods \n  def dispCount(self):\n    print(\"Total number of Employees %d \"%Employee.empCount)\n\n  def dispEmployee(self):\n    print(\"Name : \",self.name, \"\\nSalary : \",self.salary)","ccde3937":"#lets create objects\nemp1 = Employee(\"Mega\", 70000000)\nemp2 = Employee(\"Amey\", 70000000)","e1e8732d":"emp1.dispEmployee()\nemp2.dispEmployee()","9548e5c2":"emp1.dispCount()","a9f58cc2":"# **Day 4**\n\n**List Comprehensions**\n\n\nIt is an elegant way to define and create a list in Python. It is used to create a new list from another sequence, just like mathematical set notations in a single line.\n\nsyn: [output expression for item in sequence if condition]","130fe26b":"**Lambda functions**\n\nLambda functions are the quicker way to write on the fly functions in python, they are also called as anonymous functions.\n\nsyn: lambda arg:expr","9426231e":"**filter() function**\n\nIt takes two arguments, a function and sequence. This function offers a way to filter out elements from a list that doesn't satisfy the criteria","2fee3e12":"**Inheritance**\n\nIt enables us to define a class that takes all the functionalities from parent class to child class and allows us to add more.","2c1ad0ef":"**Object Oriented Programming**\n\nThe programming language that deals with objects and classes.\n\n\n**OOP Terminologies**\n\n1. **Class**: Its a blueprint that defines the set of attributes that characterize any objects of the class.\n\n2. **Inheritance**: Its a process of creating a new class from the existing one and transfer of charactertics from one class to another class.\n\n3. **Objects**: Its a real time entity which has shape, behaviour, and attributes. It comprises both data members and methods.","bf0fe126":"**map() function**\n\nIt is a function which takes two arguments, a function and a sequence. This function makes an iterator that applies to each element of a sequence","eca575ef":"**Functions in Python**\n\nA function in python is a block of code (that performs a specific task) which runs only when it is called. "}}