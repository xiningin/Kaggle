{"cell_type":{"ec41a0fc":"code","a484c806":"code","88c16897":"code","4348937f":"code","92a91343":"code","f7623e00":"code","6a5c98b0":"code","5513cd47":"code","43aeba8b":"code","68e1c150":"code","10ca120c":"code","4076a9d2":"code","82b80d7d":"code","12d70adb":"code","ebfef37e":"markdown","72848231":"markdown","01ec7b46":"markdown","3b93ee5a":"markdown","def43174":"markdown","d2544a28":"markdown","5388be76":"markdown","a51e5286":"markdown","f84d0426":"markdown","2eaa13bd":"markdown","7bdb6578":"markdown","4e647323":"markdown","1eab384d":"markdown"},"source":{"ec41a0fc":"import os\nimport cv2\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport sys\n%matplotlib inline","a484c806":"def load_images_from_folder(folder):\n    paths = []\n    for filename in os.listdir(folder):\n        paths.append(folder+'\/'+filename)\n    return paths","88c16897":"images = []\npath = \"..\/input\/insect-identification-from-habitus-images\/database\/\"\nfor f in ['9444427','9491931','1037293','4475099']:#os.listdir(path):\n    images += load_images_from_folder(path+f)\nprint(images[0])","4348937f":"def imshow(im):\n    plt.imshow(im,cmap='gray')\n    plt.show() \n\nfig, pltx = plt.subplots(1, 5)\nfor i in range(5):\n    imgtest = cv2.imread(images[i],0)\n    pltx[i].imshow(imgtest,cmap='gray')\nplt.show() ","92a91343":"imgtest=cv2.imread(images[0],0)","f7623e00":"def resize(mat):\n    mat2 = cv2.resize(mat, (50,50), interpolation = cv2.INTER_AREA);\n    return mat2\n\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(imgtest, cmap='gray');\npltx[1].imshow(resize(imgtest), cmap='gray');\nplt.show();","6a5c98b0":"def linearContrast(mat):\n    floatmat = np.float32(mat);\n    contrastFloatMat = (((floatmat)-mat.min())*255\/(mat.max()-mat.min()))\n    return np.uint8(contrastFloatMat)\n\nprint(linearContrast(resize(imgtest)).min())\nprint(linearContrast(resize(imgtest)).max())\nprint(resize(imgtest).min())\nprint(resize(imgtest).max())\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(resize(imgtest), cmap='gray');\npltx[1].imshow(linearContrast(resize(imgtest)), cmap='gray');\nplt.show();","5513cd47":"def tryDropBackground(mat):\n    bgr = cv2.split(mat);\n    alpha = (bgr[0]-bgr[0]+255)*(bgr[0]<=150);\n    mat2 = cv2.merge([bgr[0],bgr[0],bgr[0],alpha]);\n    return mat2\ntmat = tryDropBackground(linearContrast(imgtest))\n\nfig, pltx = plt.subplots(1, 2,figsize=(20,20))\npltx[0].imshow(linearContrast(resize(imgtest)), cmap='gray');\npltx[1].imshow(tryDropBackground(linearContrast(resize(imgtest))), cmap='gray');\nplt.show();\n","43aeba8b":"def getRotatedPhoto(mat,angle):\n    h,w = mat.shape[:2]\n    M2 = np.array([[1, 0, (max(w, h)-w)\/\/2],[ 0, 1, (max(w, h)-h)\/\/2]],dtype=np.float32);\n    mat = cv2.warpAffine(mat, M2, (max(w, h),max(w, h)))\n    M = cv2.getRotationMatrix2D((max(w, h)\/\/2,max(w, h)\/\/2), angle, 1)\n    mat = cv2.warpAffine(mat, M, (max(w, h),max(w, h)))\n    return mat\n\nimshow(getRotatedPhoto(imgtest,45))","68e1c150":"i=0\nprint(len(images))\nimagepath = images[0]\ni+=1\nfig, pltx = plt.subplots(1, 4,figsize=(20,20))\n\nmat = imgtest;                                                    pltx[0].imshow(mat, cmap='gray');\nmat = resize(mat);                                                pltx[1].imshow(mat, cmap='gray'); \nmat = linearContrast(mat);                                        pltx[2].imshow(mat, cmap='gray');\nmat = tryDropBackground(mat);                                     pltx[3].imshow(mat, cmap='gray');\nplt.show();\ncv2.imwrite(\"..\/working\/\"+str(i)+\"_\"+str(45)+\".png\",mat);\n\n!ls ..\/working","10ca120c":"import math\ndef pointRotate(x,y,angle):\n    dist = math.hypot(x,y)    \n    angle2 = math.atan2(y,x)\n    x2 = dist*math.cos(angle*3.14\/180+angle2)    \n    y2 = -dist*math.sin(angle*3.14\/180+angle2)\n    return (int(x2),int(y2))\npointRotate(0,10,90)","4076a9d2":"\nrmat=np.zeros((150,100,3),np.uint8)\nx=50\ny=80\nangle = 120\ncv2.line(rmat,(x,y),(75,75),(255,0,0),1)\ncv2.rectangle(rmat,(x,y),(x+1,y+1),(255,0,0),3)\nrmat=getRotatedPhoto(rmat,angle)\n(x,y)=pointRotate(x-50,y-50,angle)\nx=x+50\ny=y+50\ncv2.line(rmat,(x,y),(75,75),(255,0,0),1)\ncv2.rectangle(rmat,(x,y),(x+1,y+1),(255,0,0),3)\nimshow(rmat)","82b80d7d":"\ncascade = cv2.CascadeClassifier()\ncascade.load(\"..\/input\/opencv-trained-cascade\/cascade.xml\")\n\nmat = getRotatedPhoto(cv2.imread(\"..\/input\/insects-photos-to-check-my-coursework\/1-15-735x475.jpg\"),0)\nmat2 = linearContrast(mat);\nfor i in range(0,360,30):\n    mat3 = getRotatedPhoto(mat2,i)\n    rectangles = cascade.detectMultiScale(mat3)\n    mat4 = getRotatedPhoto(mat2,i)\n    for (x,y,w,h) in rectangles:\n        cv2.rectangle(mat4,(x,y),(x+w,y+h),(0,0,255),3)\n        x2=x\n        y2=y+h\n        x3=x+w\n        y3=y+h\n        x4=x+w\n        y4=y\n        centerx = mat3.shape[:2][0]\/\/2            \n        centery = mat3.shape[:2][1]\/\/2\n        x-=centerx\n        y-=centery\n        x2-=centerx\n        y2-=centery\n        x3-=centerx\n        y3-=centery\n        x4-=centerx\n        y4-=centery\n        x,y=pointRotate(x,y,i)            \n        x2,y2=pointRotate(x2,y2,i)\n        x3,y3=pointRotate(x3,y3,i)\n        x4,y4=pointRotate(x4,y4,i)\n        x+=centerx\n        y+=centery\n        x2+=centerx\n        y2+=centery\n        x3+=centerx\n        y3+=centery\n        x4+=centerx\n        y4+=centery\n        cv2.line(mat,(x,mat3.shape[:2][0]-y),(x2,mat3.shape[:2][0]-y2),(0,255,0),2)      \n        cv2.line(mat,(x2,mat3.shape[:2][0]-y2),(x3,mat3.shape[:2][0]-y3),(0,255,0),2)\n        cv2.line(mat,(x3,mat3.shape[:2][0]-y3),(x4,mat3.shape[:2][0]-y4),(0,255,0),2)\n        cv2.line(mat,(x4,mat3.shape[:2][0]-y4),(x,mat3.shape[:2][0]-y),(0,255,0),2)\n    if len(rectangles) > 0:\n        plt.imshow(mat4)\n        plt.show()\nimshow(mat)\n","12d70adb":"#https:\/\/docs.opencv.org\/3.4\/db\/d28\/tutorial_cascade_classifier.html\n#https:\/\/www.geeksforgeeks.org\/python-opencv-cv2-rectangle-method\/\ncascade = cv2.CascadeClassifier()\ncascade.load(\"..\/input\/opencv-trained-cascade\/cascade.xml\")\nfilenames = os.listdir(\"..\/input\/insects-photos-to-check-my-coursework\")\nfor filename in filenames:\n    mat = getRotatedPhoto(cv2.imread(\"..\/input\/insects-photos-to-check-my-coursework\/\"+filename),0)\n    mat2 = linearContrast(mat);\n    for i in range(0,360,30):\n        mat3 = getRotatedPhoto(mat2,i)\n        rectangles = cascade.detectMultiScale(mat3)\n        for (x,y,w,h) in rectangles:\n            x2=x\n            y2=y+h\n            x3=x+w\n            y3=y+h\n            x4=x+w\n            y4=y\n            centerx = mat3.shape[:2][0]\/\/2            \n            centery = mat3.shape[:2][1]\/\/2\n            x-=centerx\n            y-=centery\n            x2-=centerx\n            y2-=centery\n            x3-=centerx\n            y3-=centery\n            x4-=centerx\n            y4-=centery\n            x,y=pointRotate(x,y,i)            \n            x2,y2=pointRotate(x2,y2,i)\n            x3,y3=pointRotate(x3,y3,i)\n            x4,y4=pointRotate(x4,y4,i)\n            x+=centerx\n            y+=centery\n            x2+=centerx\n            y2+=centery\n            x3+=centerx\n            y3+=centery\n            x4+=centerx\n            y4+=centery\n            cv2.line(mat,(x,mat3.shape[:2][0]-y),(x2,mat3.shape[:2][0]-y2),(0,255,0),2)      \n            cv2.line(mat,(x2,mat3.shape[:2][0]-y2),(x3,mat3.shape[:2][0]-y3),(0,255,0),2)\n            cv2.line(mat,(x3,mat3.shape[:2][0]-y3),(x4,mat3.shape[:2][0]-y4),(0,255,0),2)\n            cv2.line(mat,(x4,mat3.shape[:2][0]-y4),(x,mat3.shape[:2][0]-y),(0,255,0),2)\n    mat2 = 255-mat2\n    for i in range(0,360,30):\n        mat3 = getRotatedPhoto(mat2,i)\n        rectangles = cascade.detectMultiScale(mat3)\n        for (x,y,w,h) in rectangles:\n            x2=x\n            y2=y+h\n            x3=x+w\n            y3=y+h\n            x4=x+w\n            y4=y\n            centerx = mat3.shape[:2][0]\/\/2\n            centerx = mat3.shape[:2][1]\/\/2\n            x-=centerx\n            y-=centery\n            x2-=centerx\n            y2-=centery\n            x3-=centerx\n            y3-=centery\n            x4-=centerx\n            y4-=centery\n            x,y=pointRotate(x,y,i)            \n            x2,y2=pointRotate(x2,y2,i)\n            x3,y3=pointRotate(x3,y3,i)\n            x4,y4=pointRotate(x4,y4,i)\n            x+=centerx\n            y+=centery\n            x2+=centerx\n            y2+=centery\n            x3+=centerx\n            y3+=centery\n            x4+=centerx\n            y4+=centery\n            cv2.line(mat,(x,mat3.shape[:2][0]-y),(x2,mat3.shape[:2][0]-y2),(0,255,0),2)      \n            cv2.line(mat,(x2,mat3.shape[:2][0]-y2),(x3,mat3.shape[:2][0]-y3),(0,255,0),2)\n            cv2.line(mat,(x3,mat3.shape[:2][0]-y3),(x4,mat3.shape[:2][0]-y4),(0,255,0),2)\n            cv2.line(mat,(x4,mat3.shape[:2][0]-y4),(x,mat3.shape[:2][0]-y),(0,255,0),2)\n            \n    plt.imshow(mat,cmap='gray')\n    plt.show() \n\n    \n    \n    \n    \n    \n    \n    \n    ","ebfef37e":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","72848231":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0442\u043e\u0447\u043a\u0438 \u0438 \u043c\u0430\u0442\u0440\u0438\u0446\u044b:<\/div>","01ec7b46":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430:<\/div>","3b93ee5a":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f:<\/span>","def43174":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u043a \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u0430\u043c:<\/span>","d2544a28":" <span style=\"font-family:Times New Roman; font-size:14pt;\">\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a:<\/span>","5388be76":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f:<\/span>","a51e5286":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:<\/span>","f84d0426":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u043d \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","2eaa13bd":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u0441\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>","7bdb6578":" <span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432:<\/span>","4e647323":"<div align=\"justify\" style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0442\u043e\u0447\u043a\u0438 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0443\u0433\u043e\u043b \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0446\u0435\u043d\u0442\u0440\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 (0;0):<\/div>","1eab384d":"<span style=\"font-family:Times New Roman; font-size:14pt;\">\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0435\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:<\/span>"}}