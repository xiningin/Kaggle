{"cell_type":{"e77b5038":"code","926c35c0":"code","50d10072":"code","5167e054":"code","fac5ef54":"code","9d3edb34":"code","21607b56":"markdown","8302aab5":"markdown"},"source":{"e77b5038":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom fbprophet import Prophet\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","926c35c0":"df_train = pd.read_csv('\/kaggle\/input\/wuhannovelcoronavirus2019\/data_new\/\u4e2d\u56fd.csv', parse_dates=['timestamp'])\ndf_train['timestamp'] = df_train['timestamp'].apply(lambda ts:pd.Timestamp(int(ts), unit='ms'))\n#df_train.sort_values(['timestamp'],inplace=True)\n\n# confirmedCount\ndf_train_confirmed = df_train[['timestamp','confirmedCount']].copy()\ndf_train_confirmed = df_train_confirmed.rename(index=str, columns={\"timestamp\": \"ds\", \"confirmedCount\": \"y\"})\n# suspectedCount\ndf_train_suspected = df_train[['timestamp','suspectedCount']].copy()\ndf_train_suspected = df_train_suspected.rename(index=str, columns={\"timestamp\": \"ds\", \"suspectedCount\": \"y\"})\n# deadCount\ndf_train_dead = df_train[['timestamp','deadCount']].copy()\ndf_train_dead = df_train_dead.rename(index=str, columns={\"timestamp\": \"ds\", \"deadCount\": \"y\"})\n# curedCount\ndf_train_cured = df_train[['timestamp','curedCount']].copy()\ndf_train_cured = df_train_cured.rename(index=str, columns={\"timestamp\": \"ds\", \"curedCount\": \"y\"})\n\n# lag 24 hours\ndf_test = pd.DataFrame({})\ndf_test['ds'] = pd.date_range(start=df_train_confirmed.ds.max(), freq=\"H\", periods=24)","50d10072":"m = Prophet()\nm.fit(df_train_confirmed)\nforecast = m.predict(pd.concat([df_train_confirmed[['ds']],df_test[['ds']]]))\nm.plot(forecast)\nplt.xlabel('Date')\nplt.ylabel('Confirmed Count')\nplt.show()","5167e054":"m = Prophet()\nm.fit(df_train_suspected)\nforecast = m.predict(pd.concat([df_train_confirmed[['ds']],df_test[['ds']]]))\nm.plot(forecast)\nplt.xlabel('Date')\nplt.ylabel('Suspected Count')\nplt.show()","fac5ef54":"m = Prophet()\nm.fit(df_train_dead)\nforecast = m.predict(pd.concat([df_train_confirmed[['ds']],df_test[['ds']]]))\nm.plot(forecast)\nplt.xlabel('Date')\nplt.ylabel('Dead Count')\nplt.show()","9d3edb34":"m = Prophet()\nm.fit(df_train_cured)\nforecast = m.predict(pd.concat([df_train_confirmed[['ds']],df_test[['ds']]]))\nm.plot(forecast)\nplt.xlabel('Date')\nplt.ylabel('Cured Count')\nplt.show()","21607b56":"The end.","8302aab5":"## ChangeLog\n- 2020\/03\/04 - Data update to 2020-03-04"}}