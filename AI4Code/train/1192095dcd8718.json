{"cell_type":{"16f5e6de":"code","8d17e263":"code","e1d31547":"code","710a78dd":"code","9ab59161":"code","d6dca388":"code","5d8dd6e8":"code","58679a5f":"code","9a9ae0aa":"code","4fc78f14":"code","6f82e37e":"code","54eecdfc":"code","4835d5a8":"code","020a1289":"code","4ff032f6":"code","8ca42d83":"code","4685d1fa":"code","93bb10e6":"code","0ab2329e":"code","6f681f6e":"code","3c26941f":"code","73830227":"code","f7bf5b19":"code","35c8e2fe":"code","f72428b7":"code","f1f56b21":"code","79cd6dd4":"code","f993ef96":"code","8adb443a":"markdown","37bddfd4":"markdown","5faa51e1":"markdown","1e2b6195":"markdown","0e1c0252":"markdown","13b635bb":"markdown","55aa53ee":"markdown","fca33552":"markdown","2baf6be1":"markdown","e23191f9":"markdown","b7d5d93f":"markdown","9e1089ee":"markdown","d38a8dfc":"markdown"},"source":{"16f5e6de":"# Linear algebra\nimport numpy as np  \n\n# For EDA and cleaning the data\nimport pandas as pd\n\n# For visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# For building a model\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest, chi2\n\nimport warnings\nwarnings.filterwarnings('ignore')","8d17e263":"santander_df = pd.read_csv('..\/input\/train.csv')","e1d31547":"santander_df.head()","710a78dd":"X = santander_df.drop(['ID', 'target'], axis=1)\ny = santander_df.target","9ab59161":"chi_select = SelectKBest(score_func=chi2, k=12)","d6dca388":"y = np.array(y).astype('int')","5d8dd6e8":"y.dtype","58679a5f":"chi_select.fit(X, y)","9a9ae0aa":"chi_support = chi_select.get_support() # Contains the values either True or False, True means the feature has been\n                                       # selected","4fc78f14":"chi_features = X.loc[:, chi_support].columns.tolist() # Storing the selected features","6f82e37e":"chi_features","54eecdfc":"X = santander_df[chi_features]  # Limiting our X to only 12 selected features","4835d5a8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=6)","020a1289":"reg_tree = DecisionTreeRegressor(random_state=2) # No HyperParameters","4ff032f6":"reg_tree.fit(X_train, y_train)  # Training the model","8ca42d83":"predictions = reg_tree.predict(X_test) # Predicting on the unseen data","4685d1fa":"predictions = np.array(predictions).astype('int')","93bb10e6":"mse = metrics.mean_squared_error(y_test, predictions)\nprint(f'Mean Squared Error: {mse}')","0ab2329e":"test_df = pd.read_csv('..\/input\/test.csv')","6f681f6e":"X = test_df[chi_features]","3c26941f":"ID = test_df.ID","73830227":"target = reg_tree.predict(X)","f7bf5b19":"target","35c8e2fe":"submit_df = pd.DataFrame()","f72428b7":"submit_df['ID'] = ID","f1f56b21":"submit_df['target'] = target","79cd6dd4":"submit_df.head()","f993ef96":"submit_df.to_csv('submission.csv')","8adb443a":"# Problem Statement","37bddfd4":"### Submission","5faa51e1":"<b>Making the dtype of predictions as int<\/b>","1e2b6195":"### 12 Important Features","0e1c0252":"### Miscellaneous","13b635bb":"### Loading the data","55aa53ee":"- Predict the value of transaction for potential customers\n- This is a <b>Regression<\/b> problem\n- URL of the problem: https:\/\/www.kaggle.com\/c\/santander-value-prediction-challenge","fca33552":"<b>Before applying the fit method, all the labels in the target variable must be of the same dtype<\/b>","2baf6be1":"<b>There are 12 important features in this data<\/b><br>\n<b>We'll use SelectKBest to select those 12 important features<\/b>","e23191f9":"### Splitting the data","b7d5d93f":"### Importing Libraries","9e1089ee":"### Building the model","d38a8dfc":"<b>There are no null values in the dataset<\/b>"}}