{"cell_type":{"b118e03d":"code","c183a617":"code","27d5733a":"code","f9beac2c":"code","f57dd1f4":"code","474f253b":"code","0dbde94d":"code","fd0caaee":"code","7d529bc4":"code","ad865b3d":"code","a14cb0ba":"code","8c09c325":"code","d4368f50":"code","aba4546d":"code","6156734f":"code","4025ef6e":"code","e45c1b90":"code","e92304b7":"code","252c42df":"code","3dd9811b":"code","ac9f1236":"code","58b8d3b5":"code","348c6e02":"code","f3b63221":"code","3b46a277":"code","e21da87d":"code","e3bfa138":"code","b2d2e04f":"code","9aa2d67a":"code","822fdaff":"code","f764070b":"markdown","5ebbf80d":"markdown","1bfbf585":"markdown","83d64371":"markdown","cdc7b84b":"markdown","dbfef6fd":"markdown","d7cd0329":"markdown","ee7bc0b3":"markdown","86efdb15":"markdown","a33a358e":"markdown","736e1d23":"markdown","f580da80":"markdown","84cbc40f":"markdown","acbb3797":"markdown","06674d60":"markdown","e1fea77c":"markdown","7ee039de":"markdown","32d32591":"markdown","4508ed6f":"markdown","4d2a4c51":"markdown","44e3365d":"markdown"},"source":{"b118e03d":"import numpy as np\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nimport xgboost as xgb\nimport pickle\nfrom sklearn import datasets\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c183a617":"# Data\ndata= pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","27d5733a":"data.head()","f9beac2c":"# Features\ndata.columns","f57dd1f4":"# Checking for null value\ndata.isna().sum()","474f253b":"# Making the dependent feature separate\nx=data.drop(labels='DEATH_EVENT', axis=1)\ny= data['DEATH_EVENT']","0dbde94d":"x.head()","fd0caaee":"#correlation between the variables in the study\ndata.corr().style.background_gradient(cmap='Spectral').set_precision(2)","7d529bc4":"#seeing distribution for age\nplt.figure(figsize=(15,5))\nplt.hist(data['age'],bins = 50,edgecolor = 'black')\nplt.xlabel('Age range')\nplt.ylabel('Frequency')\nplt.title('Age Distribution Graph')","ad865b3d":"plt.figure(figsize=(15,5))\nsns.countplot(x='age', hue='DEATH_EVENT', data=data)","a14cb0ba":"#Prevalence of outcome event\nsns.set_theme(context='poster')\nplt.figure(figsize=(10,7))\nplt.title('Disease status \\n (Survived (0), Death (1))', fontsize=20)\ncols= [\"#ffff99\",\"#ff6600\"]\nsns.countplot(x= data[\"DEATH_EVENT\"], palette= cols)\nplt.show()","8c09c325":"feature = [\"age\",\"creatinine_phosphokinase\",\"ejection_fraction\",\"platelets\",\"serum_creatinine\",\"serum_sodium\", \"time\"]\nfor i in feature:\n    plt.figure(figsize=(8,8))\n    sns.swarmplot(x=data[\"DEATH_EVENT\"], y=data[i], color=\"black\", alpha=0.5)\n    sns.violinplot(x=data[\"DEATH_EVENT\"], y=data[i], palette=cols)\n    plt.show()","d4368f50":"#Standard scaler features of the dataset\ncol_names = list(x.columns)\ns_scaler = preprocessing.StandardScaler()\nX_df= s_scaler.fit_transform(x)\nX_df = pd.DataFrame(X_df, columns=col_names)   \nX_df.describe().T","aba4546d":"#Examining the scaled features\nsns.set_style(\"whitegrid\")\n\nplt.figure(figsize=(20,15))\nplt.title('Examining the scaled features (of columns)', color=\"y\",fontsize=30)\n#colours =[\"#774571\",\"#b398af\",\"#f1f1f1\" ,\"#afcdc7\", \"#6daa9f\"]\nsns.violinplot(data = X_df,palette = 'Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","6156734f":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nscaled_data=scaler.fit_transform(x)","4025ef6e":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y=train_test_split(scaled_data,y,test_size=0.3,random_state=42)","e45c1b90":"# fit model no training data\nmodel = XGBClassifier(objective='binary:logistic')\nmodel.fit(train_x, train_y)","e92304b7":"# cheking training accuracy\ny_pred = model.predict(train_x)\npredictions = [round(value) for value in y_pred]\naccuracy = accuracy_score(train_y,predictions)\naccuracy","252c42df":"# cheking initial test accuracy\ny_pred = model.predict(test_x)\npredictions = [round(value) for value in y_pred]\naccuracy = accuracy_score(test_y,predictions)\naccuracy","3dd9811b":"test_x[0]","ac9f1236":"from sklearn.model_selection import GridSearchCV","58b8d3b5":"param_grid={\n   \n    ' learning_rate':[1,1,0.1,0.5,0.001],\n    'max_depth': [3,5,15,30],\n    'n_estimators':[10,70,150,300]\n    \n}","348c6e02":"grid= GridSearchCV(XGBClassifier(objective='binary:logistic'),param_grid, verbose=4)","f3b63221":"grid.fit(train_x,train_y)","3b46a277":"# To  find the parameters givingmaximum accuracy\ngrid.best_params_","e21da87d":"# Create new model using the same parameters\nnew_model=XGBClassifier(learning_rate= 1, max_depth= 5, n_estimators= 10)\nnew_model.fit(train_x, train_y)","e3bfa138":"# Accuracy\ny_pred_new = new_model.predict(test_x)\npredictions_new = [round(value) for value in y_pred_new]\naccuracy_new = accuracy_score(test_y,predictions_new)\naccuracy_new","b2d2e04f":"# As we have increased the accuracy of the model, we'll save this model\nfilename = 'xgboost_model.pickle'\npickle.dump(new_model, open(filename, 'wb'))\n\nloaded_model = pickle.load(open(filename, 'rb'))","9aa2d67a":"# we'll save the scaler object as well for prediction\nfilename_scaler = 'scaler_model.pickle'\npickle.dump(scaler, open(filename_scaler, 'wb'))\n\nscaler_model = pickle.load(open(filename_scaler, 'rb'))","822fdaff":"# Trying a random prediction\nd=scaler_model.transform([[65.0, 0, 146, 0, 20, 0, 162000.00, 1.3, 129, 1, 1, 7]])\npred=loaded_model.predict(d)\nprint('This data belongs to class :',pred[0])","f764070b":"<a id=\"1\"><\/a><h1 style='background:#ccffcc\n; border:0; color:black'><center> Table of contents <\/center><\/h1>","5ebbf80d":"<a id=\"6\"><\/a><h1 style='background:#ccffcc\n; border:0; color:black'><center> Prediction <\/center><\/h1>","1bfbf585":"<a id=\"1\"><\/a><h1 style='background:#ccffcc\n; border:0; color:black'><center> Introduction <\/center><\/h1>","83d64371":"<center><img \nsrc=\"https:\/\/i.pinimg.com\/originals\/b3\/70\/5c\/b3705cc2edf8f527789e6e2be29f6267.gif\" width=\"900\" height=\"900\"><\/img><\/center>\n\n<br>","cdc7b84b":"1. [Introduction](#1)\n2. [Data cleaning, exploration and preprocessing](#2)\n3. [Model building](#3)\n4. [Improving the accuracy of model](#5)\n5. [Prediction](#6)","dbfef6fd":"Checking the training and initial testing accuracy respectively. We are gonna make the model more accurate","d7cd0329":"We are having the data of 300 patients this data consist there\n\n\u2022 Age: age of the patient (years) \u2022 Anaemia: decrease of red blood cells or haemoglobin (Boolean) \u2022 High Blood Pressure: if the patient has hypertension (Boolean) \u2022 Creatinine Phosphokinase (CPK): level of the CPK enzyme in the blood (mcg\/L) \u2022 Diabetes: if the patient has diabetes (Boolean) \u2022 Ejection Fraction: percentage of blood leaving the heart at each contraction (percentage) \u2022 Platelets: platelets in the blood (kilo platelets\/mL) \u2022 Sex: woman or man (binary) \u2022 Serum Creatinine: level of serum creatinine in the blood (mg\/dL) \u2022 Serum Sodium: level of serum sodium in the blood (mEq\/L)","ee7bc0b3":"### Accuracy","86efdb15":"### Standard Scaler\n\nAs the data points differ a lot in magnitude, we'll scale them by standard scaler. Then we are splitting our data and fitting the model which is XGB on training data.","a33a358e":"### Improved Accuracy","736e1d23":"<a id=\"4\"><\/a><h1 style='background:#33cccc; border:3; color:white'><center> Machine Learning For Heart Failure Prediction: Boosting <\/center><\/h1>","f580da80":"<center><img \nsrc=\"https:\/\/media.giphy.com\/media\/woNmVBgHCS0xO\/giphy.gif\" width=\"900\" height=\"900\"><\/img><\/center>\n\n<br>\n","84cbc40f":"# Boxen and swarm plot of some non binary features.","acbb3797":"got the parameters","06674d60":"The above fig shows us the number of deaths and survivals with respect to age.","e1fea77c":"After analysing this data we got to know that the ones who got heart attack were in the range of 40-80 age mostly. The above diagram shows the frequency of data with respect to age.","7ee039de":"Cardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worldwide.\nHeart failure is a common event caused by CVDs.\nMost cardiovascular diseases can be prevented by addressing behavioural risk factors such as tobacco use, unhealthy diet and obesity, physical inactivity and harmful use of alcohol using population-wide strategies.\n\n### Variables in the dataset:\n\n1.Age: Age of the patient\n\n2.Anaemia: If the patient had the haemoglobin below the normal range\n\n3.Creatinine_phosphokinase: The level of the creatine phosphokinase in the blood in mcg\/L\n\n4.Diabetes: If the patient was diabetic\n\n5.Ejection_fraction: Ejection fraction is a measurement of how much blood the left ventricle pumps out with each contraction\n\n6.High_blood_pressure: If the patient had hypertension\n\n7.Platelets: Platelet count of blood in kiloplatelets\/mL\n\n8.Serum_creatinine: The level of serum creatinine in the blood in mg\/dL\n\n9.Serum_sodium: The level of serum sodium in the blood in mEq\/L\n\n10.Sex: The sex of the patient\n\n11.Smoking: If the patient smokes actively or ever did in past\n\n12.Time: It is the time of the patient's follow-up visit for the disease in months\n\n13.Death_event: If the patient deceased during the follow-up period\n","32d32591":"<a id=\"5\"><\/a><h1 style='background:#ccffcc\n; border:0; color:black'><center> Improving the accuracy of model  <\/center><\/h1>","4508ed6f":"<a id=\"2\"><\/a><h1 style='background:#ccffcc\n; border:0; color:black'><center> Data cleaning, exploration and preprocessing  <\/center><\/h1>","4d2a4c51":"### To find the best parameters","44e3365d":"<a id=\"3\"><\/a><h1 style='background:#ccffcc\nf; border:0; color:black'><center> Model building  <\/center><\/h1>"}}