{"cell_type":{"144ac2a3":"code","5dfac868":"code","d96f3dfe":"code","81c7b096":"code","1f7f9fb2":"code","8269f9fa":"code","9f0278bd":"code","9fd38585":"code","7369c200":"code","5da566ed":"code","ec630806":"code","e396fdf3":"code","8628e9e9":"code","52f15113":"code","9e1c57a5":"code","755c03ba":"code","8e51d8aa":"code","684b05ea":"markdown","5e2ec8f9":"markdown","bb3ab779":"markdown"},"source":{"144ac2a3":"# This model is using Linear Regression.","5dfac868":"# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n%matplotlib inline","d96f3dfe":"# Importing the dataset and extracting the Independent and Dependent Variables\n\nhouse = pd.read_csv('..\/input\/house.csv')\nX = house.iloc[:,:-1].values\ny = house.iloc[:,20].values\n\nhouse.head()","81c7b096":"y","1f7f9fb2":"#Data Visualization\n# Corelation of various parameters\n\nfig, ax = plt.subplots(figsize=(20,15))\n\nsns.heatmap(house.corr())","8269f9fa":"# Encoding Categorical Data\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nlabelencoder = LabelEncoder()\n\nX[:,1] = labelencoder.fit_transform(X[:,1])\n\nonehotencoder = OneHotEncoder(categorical_features = [1])\nX = onehotencoder.fit_transform(X).toarray()","9f0278bd":"# Avoiding dummy variables\n\nX = X[:,1:]","9fd38585":"# Splitting the dataset into the Training set and Test set\n\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 0)","7369c200":"# Fitting Multiple Linear Regression to the Training set\n\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)","5da566ed":"# Predicting the Test set results\ny_pred = regressor.predict(X_test)\nprint(y_pred)","ec630806":"# Calculating the Co-efficient\nprint(regressor.coef_)","e396fdf3":"# Calculating the Intercept\nprint(regressor.intercept_)","8628e9e9":"# Calculating the R Squared Value\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","52f15113":"fig=sns.jointplot(y='price',x='bedrooms',data=house)\nplt.show()","9e1c57a5":"ax = sns.boxplot(x=house['price'])","755c03ba":"ay = sns.boxplot(x='bedrooms',y='price', data = house, width= 0.6)","8e51d8aa":"house.groupby('bedrooms')['price'].describe()","684b05ea":"***As you can see the price of 4-6 bedrooms is ranging from 1,000,000 to 8,000,000. Which is an obvious outlier.\nlets dig in further to see where this outlier is coming from****","5e2ec8f9":"**It is worth to note here that the dataset has many outliers and hence the efficiency is less.\nlets dig further to find where is the outlier**","bb3ab779":"**Conclusion : We can further improve this model by taking the mean for all the bedrooms, and removing the outliers from each bedroom types.\n\n\nThis could also mean that those outliers, may have some additional features, such as beach facing home or a house with a costlier locality. All these parameters will be considered before removing any outlier.\n\nDo you specifically have any suggessions to improve the efficiency?**"}}