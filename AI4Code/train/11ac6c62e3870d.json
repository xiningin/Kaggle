{"cell_type":{"bfc4cdaa":"code","3c4d2f04":"code","01b2e56e":"code","6106dc71":"code","819aeae5":"code","3e2dc99b":"code","65d8267e":"code","498ffa4c":"code","4e6003d9":"code","fca308ba":"code","be33c0df":"code","2bf6806a":"code","089beb4a":"code","60186275":"code","37d2cdf4":"code","e5bb01d7":"code","72b1d29f":"code","68ba5be9":"code","d821680b":"code","a77477ab":"code","b3acd166":"code","a14a8a20":"code","9b56cc0d":"code","abbe48c7":"code","187cd4ee":"code","ff4bf412":"markdown","457af7e1":"markdown","d3d2dd92":"markdown"},"source":{"bfc4cdaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3c4d2f04":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","01b2e56e":"df = pd.read_csv('..\/input\/online-shoppers-intention\/online_shoppers_intention.csv')\ndf.head()","6106dc71":"df.isnull().sum()","819aeae5":"df.dropna(inplace=True)","3e2dc99b":"df2 = df.drop(['Revenue','Month'], axis=1)","65d8267e":"df2.head()","498ffa4c":"X = pd.get_dummies(df2,drop_first=True)","4e6003d9":"X.head()","fca308ba":"X.Weekend = X.Weekend.astype(int)","be33c0df":"X.head()","2bf6806a":"y = df['Revenue']","089beb4a":"y.head()","60186275":"from sklearn.preprocessing import StandardScaler\nscalar = StandardScaler()\nX = scalar.fit_transform(X)","37d2cdf4":"    from sklearn.model_selection import train_test_split\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","e5bb01d7":"from sklearn.svm import SVC\nsvc = SVC()\nmodel = svc.fit(X_train,y_train)\ny_pred_svc = model.predict(X_test)","72b1d29f":"from sklearn.metrics import confusion_matrix\nresult = confusion_matrix(y_pred_svc,y_test)","68ba5be9":"acc = ((result[0][0]+result[1][1])\/(len(y_test)))*100\nprint(acc)","d821680b":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors =10,metric = 'minkowski',p=3)\nclassifier.fit(X_train,y_train)\ny_pred_k = classifier.predict(X_test)","a77477ab":"from sklearn.metrics import confusion_matrix\nresult = confusion_matrix(y_pred_k,y_test)","b3acd166":"acc = ((result[0][0]+result[1][1])\/(len(y_test)))*100\nprint(acc)","a14a8a20":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train,y_train)\ny_pred_N = classifier.predict(X_test)","9b56cc0d":"from sklearn.metrics import confusion_matrix\nresult = confusion_matrix(y_pred_N,y_test)","abbe48c7":"acc = ((result[0][0]+result[1][1])\/(len(y_test)))*100\nprint(acc)","187cd4ee":"data= [['SVM',89.44],['K-NEAREST NEIGHBORS',88.14],['NA\u00cfVE BAYES',80.64]]\naccuracy_compare = pd.DataFrame(data, columns = ['Method', 'Accuracy'])\n\nsns.barplot(x=accuracy_compare['Method'],y=accuracy_compare['Accuracy'])\nplt.show()","ff4bf412":"# NA\u00cfVE\tBAYES","457af7e1":"# K-NEAREST\tNEIGHBORS","d3d2dd92":"# Support Vector Machine"}}