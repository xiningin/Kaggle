{"cell_type":{"a6f5c7a4":"code","4705b8fc":"code","b8e231be":"code","09eeb222":"code","8a596549":"code","01f6dd0f":"code","4144d7c7":"code","32cba419":"code","987c8b3f":"code","f2beee76":"code","5fa07319":"code","9244154a":"code","3481c27a":"code","20ec709b":"code","34ae7dcf":"code","34542ab2":"markdown","7a6248f0":"markdown","5ad5f085":"markdown","124860d0":"markdown","f1e5e032":"markdown","ef87a764":"markdown","309ea805":"markdown","1aeb85fa":"markdown","0bfd1595":"markdown","83964e48":"markdown","b0f27c37":"markdown","7f4138b0":"markdown","efc73240":"markdown","07859697":"markdown","acdc21eb":"markdown","dfb7da11":"markdown"},"source":{"a6f5c7a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nfrom PIL import Image\nimport matplotlib.pyplot as plt\npd.plotting.register_matplotlib_converters()\n%matplotlib inline\nfrom wordcloud import WordCloud, STOPWORDS\n\nimport seaborn as sns# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4705b8fc":"#reading date from CSV file\ncsv_file ='\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv'\ndf = pd.read_csv(csv_file,skiprows=[1])\ndf.head()","b8e231be":"#Age\nfig = px.histogram(df, x=\"Q1\",\n        marginal=\"box\",\n        ).update_xaxes(categoryorder=\"category ascending\",)\nfig.show()","09eeb222":"#Gender plotly Pie\ngender = df['Q2'].value_counts()\nfig = px.pie(values=gender.values,names=gender.index)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.show()","8a596549":"#plotly Chorophleth map\ncountry = df['Q3'].value_counts().reset_index()\nfig = px.choropleth(country, locations=\"index\",\n                    locationmode = 'country names',\n                    color=\"Q3\", # lifeExp is a column of gapminder\n                    hover_name=\"index\", # column to add to hover information\n                     \n                    color_continuous_scale=px.colors.sequential.Blugrn)\n\nfig.show()","01f6dd0f":"#\nrst = df['Q4'].value_counts()\nfig = px.pie(values= rst.values,names=rst.index,labels=False)\nfig.update_traces(textposition='inside',textinfo='percent+label',showlegend=False)\nfig","4144d7c7":"#plotly HBar\nlang = df.filter(regex='Q7').copy()\nlang.set_axis(['Python','R','SQL','C','C++','Java',\n                'Javascript','Julia','Swift','Bash',\n                'MATLAB','None','Other'],\n                axis=1,inplace=True)\nlang.fillna(0,inplace=True)\nlang = lang.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_lang = lang.sum().sort_values(ascending=True)\nfig = px.bar(sorted_lang, text='value', labels={'value':'Use on a regular',\n                                                'index':'programming languages'},orientation='h',)\nfig.show()","32cba419":"#Plotly heatmap \n# corrolation Q7 with it self programming languages use on regular\nfig = px.imshow(lang.corr(),color_continuous_scale='purples')\nfig.show()","987c8b3f":"#plotly HBar\nrst = df['Q8'].value_counts()\nfig = px.pie(v alues= rst.values,names=rst.index,hole=0.9)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.show()","f2beee76":"#Data Visual Libs\nvisual = df.filter(regex='Q14').copy()\nvisual.set_axis(['Matplotlib','Seaborn','Plotly \/ Plotly Express',\n                'Ggplot \/ ggplot2','Shiny','D3.js','Altair',\n                'Bokeh','Geoplotlib','Leaflet \/ Folium','None','Other'],\n                axis=1,inplace=True)\nvisual.fillna(0,inplace=True)\nvisual = visual.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_visual = visual.sum()#.sort_values(ascending=True)\nfig = px.bar(sorted_visual, text='value', labels={'value':'Use on a regular',\n                                                'index':'data visualization libraries'})#,orientation='h',)\nfig.show()","5fa07319":"\nml = df.filter(regex='Q16').copy()\nml.set_axis(['Scikit-learn','TensorFlow','Keras','PyTorch',\n                'Fast.ai','MXNet','Xgboost','LightGBM','CatBoost',\n                'Prophet','H2O 3','Caret','Tidymodels',\n                'JAX','None','Other'],\n                axis=1,inplace=True)\nml.fillna(0,inplace=True)\nml = ml.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_ml = ml.sum()#.sort_values(ascending=True)\nfig = px.bar(sorted_ml, text='value', labels={'value':'Use on a regular',\n                                                'index':'machine learning frameworks'})\nfig.show()","9244154a":"#Gender destribution with age groups\nage_group = df.groupby(['Q1','Q2'])['Q3'].count().reset_index()\nfig= px.line(age_group ,x='Q1',y ='Q3',color='Q2')\nfig.show()","3481c27a":"age = df.filter(regex='Q(7|1$)').copy()\nage.set_axis(['age']+col_lang,axis=1,inplace=True)\nage = age.groupby('age').count()\n\nfig = px.imshow(age,labels={'x':'Programming Language','y':'Age Group'},color_continuous_scale='purples')\nfig.show()","20ec709b":"coding_years = df[['Q3','Q5','Q6']].groupby(by=['Q5','Q6']).count().unstack()\ncoding_years = coding_years.droplevel(0,axis=1)\n\nfig = px.imshow(coding_years,labels={'y':'Title Ruls','x':'Age Group'},\n                                color_continuous_scale='oranges',)\nfig.update_xaxes(side=\"top\")\nfig.show()\n","34ae7dcf":"\ncoding_years = df.filter(regex='Q(10|3$)').copy()\ncoding_years = coding_years.groupby('Q3').count()\ncoding_years.set_axis(['Kaggle Notebooks','Colab Notebooks','Azure Notebooks',\n                'Paperspace \/ Gradient','Binder \/ JupyterHub','Code Ocean',\n                'IBM Watson Studio','Amazon Sagemaker Studio','Amazon EMR Notebooks',\n                'Google Cloud AI Platform Notebooks','Google Cloud Datalab Notebooks',\n                'Databricks Collaborative Notebooks','None','Other'],\n                axis=1,inplace=True)\n\nfig = px.area(coding_years,labels={'y':'Title Ruls','x':'Age Group'})\nfig.show()\n","34542ab2":"# Big View\nWho are take this survey? and what is programming they do?","7a6248f0":"# Countries in details","5ad5f085":"## What is programming languages mostly programmer know together.\n- corrolation  programming languages with it self use on regular\n\n","124860d0":"# What is regural ML framwork use?","f1e5e032":"## How many years title have been writing code\/programing?","ef87a764":"# Gender Looking Over","309ea805":"# Age in Details\n**Woman** in 22-24 in peak of it's own line,but **Men** go in peak in 25-29","1aeb85fa":"## Country\/hosted notebook","0bfd1595":"# popular Data Visual Liberary","83964e48":"# Title Rule in details","b0f27c37":"# Education","7f4138b0":"## age\/language programming","efc73240":"## Countries ","07859697":"## Which is the best programing languages programmers advice to learn in the first programing language?\n**Python** without competitor","acdc21eb":"# Programming Languages \n**Python** in top of Most using With Programmers.","dfb7da11":"- mostly youth from 22-39"}}