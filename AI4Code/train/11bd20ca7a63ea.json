{"cell_type":{"0968bad9":"code","83b53d35":"code","d180ee1d":"code","1317155a":"code","211c1a4c":"code","c2a70263":"code","7a11a185":"code","729c4301":"code","30e6e027":"code","3ebbe43b":"code","6db7c87e":"code","a8dee295":"code","fdcf57fc":"code","b383ecc8":"code","0e29ff2d":"code","1430c825":"markdown","9ca3c212":"markdown","5ae4d40f":"markdown","ae0bb042":"markdown","97a9799e":"markdown","aed89cee":"markdown","02c54806":"markdown","b9904dae":"markdown","bda056cc":"markdown","5671d6e9":"markdown","af983b0c":"markdown","b10699b2":"markdown","ba9f2ce4":"markdown","f7d73078":"markdown","852b50f8":"markdown","f3a9e9e6":"markdown","2e791653":"markdown","adf8b09e":"markdown","2410f470":"markdown"},"source":{"0968bad9":"import cv2 \nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","83b53d35":"images='..\/input\/pca-dataset\/Withglass'\nall_img=[]\nfor filename in os.listdir(images):\n   img=cv2.imread(os.path.join(images,filename))\n   if img is not None:\n     gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\n     resize_img=cv2.resize(gray,(100,100))\n     all_img.append(resize_img)\n","d180ee1d":"Images=np.array(all_img)\nImage_pd=Images.reshape(10,100*100)\nImage_pd=pd.DataFrame(Image_pd)","1317155a":"Image_pd.shape","211c1a4c":"from sklearn.preprocessing import StandardScaler  ","c2a70263":"sc=StandardScaler()\n","7a11a185":"Image_pd=sc.fit_transform(Image_pd)","729c4301":"Image_pd=pd.DataFrame(Image_pd)","30e6e027":"from sklearn.decomposition import PCA\nImages_pca = PCA(n_components=7)","3ebbe43b":"Images_pca.fit(Image_pd)\nTransformed_images = Images_pca.transform(Image_pd)","6db7c87e":"print(f\"Variance Captured my the 1st 7 principal components : {sum(Images_pca.explained_variance_ratio_)}\")\n","a8dee295":"fig = plt.figure(figsize = (15, 5)) \nfig.add_subplot(131)\nplt.title(\"Variance Captured\")\nplt.ylabel('Variation explained')\nplt.xlabel('Eigen Value')\nplt.bar(list(range(1,8)),Images_pca.explained_variance_ratio_)","fdcf57fc":"Transformed_images.shape","b383ecc8":"Eigen_faces=Images_pca.inverse_transform(Transformed_images)","0e29ff2d":"plt.imshow(Eigen_faces[9].reshape(100,100),cmap='binary')","1430c825":"# Step by Step  PCA","9ca3c212":"The above Ghost\ud83d\udc7b like image is our Eigen face.","5ae4d40f":"# How does **PCA** works?\n\n\n\n","ae0bb042":"# Applications of PCA\n\n\n\n> 1.   Classification Problems(Mood Detection(\ud83e\udd23,\ud83d\ude10,\ud83d\ude2d))\n2.   Regression Problems(Price predication\ud83d\udcc8)\n\n\n\n\n","97a9799e":"# PCA (Principal Component Analysis)","aed89cee":"# Why\ud83e\udd14 **PCA**?\n\n> Large datasets are increasingly widespread in many disciplines. In order to interpret such datasets, methods are required to drastically reduce their dimensionality in an interpretable way, such that most of the information in the data is preserved. Many techniques have been developed for this purpose, but Principal Component Analysis (PCA) is one of the oldest and most widely used. Its idea is simple\u2014reduce the dimensionality of a dataset, while preserving as much \u2018variability\u2019 (i.e. statistical information) as possible.\n\n","02c54806":"**Step1 \u2714**","b9904dae":"What is Eigen face?\n\n\n> The eigenfaces are the principal components of a distribution of faces, or equivalently, the eigenvectors of the covariance matrix of the set of face images.\n\n","bda056cc":"So now we have our new Dataset with dimension **10** rows and **7** columns\ud83d\ude0d.","5671d6e9":"As we can see the Dataset contains **10** rows and **10000** columns\ud83d\ude31 its a very large dataset. \n\nSo now we shall use PCA to reduce the dimentions\ud83d\ude0e.","af983b0c":"**Step 1:-STANDARDIZATION**\n\n\n> The aim of this step is to standardize the range of the continuous initial variables so that each one of them contributes equally to the analysis.\n\n","b10699b2":"# What is **PCA**?\n\n\n> ***PCA*** is a technique for reducing the dimensionality of such datasets, increasing interpretability but at the same time minimizing information loss. It does so by creating new uncorrelated variables that successively maximize variance.\n\n\n\n\n","ba9f2ce4":"Creating a dummy dataset from 10  images\ud83d\udcf8.","f7d73078":"**Step2 \u2714**","852b50f8":"# Eigen face and PCA","f3a9e9e6":"**Lets get the Eigen face of our dataset**","2e791653":"The above Graph represent the variance Captured by the 1st 7 components we choosed ","adf8b09e":"**Step 2:- Applying PCA**","2410f470":"**n_components** are the number of components we want."}}