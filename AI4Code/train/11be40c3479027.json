{"cell_type":{"7efab198":"code","ce8a1dae":"code","0a6b9056":"code","7f538a84":"code","2b49d30d":"code","0fe407f9":"code","2457a4c5":"code","2544f49b":"code","f1f2da53":"code","cdf78d83":"code","407af237":"code","b923a98f":"code","02cb61ee":"code","99c24a90":"code","36dba236":"code","c4cafaf2":"code","6372f30c":"code","cee253ed":"code","3b24d468":"code","23d05f90":"code","036ee59c":"code","e9d746f0":"code","20c1a864":"code","910b2b54":"code","2a9c8ef6":"code","20ef1176":"code","30091a3a":"code","4b3835f4":"code","396d3f72":"code","a7921df9":"code","5e7d3583":"code","614a51c2":"code","03cf52eb":"code","50b816af":"code","f2ae2e2e":"code","44ae7e3e":"code","fc8d5fc5":"code","2a41075f":"code","74c97853":"code","0420cef0":"code","b9ea688c":"code","07894f64":"code","b96e0ec0":"code","6cf31b25":"code","4d9564cc":"code","2bd2019d":"code","5b5c6a17":"code","f0e531bd":"code","481a1d3e":"code","8d9436a6":"code","151ff6be":"code","c8d7c1d0":"code","4c5579c4":"code","9d463be7":"code","a07423e1":"code","0394a001":"code","93d437f6":"code","61c1963c":"code","0fbed4de":"code","9dd4b371":"code","3b898548":"code","e5f3552f":"code","010e59b7":"code","f7b65435":"code","3809bd08":"code","f1e2dd4f":"code","2bf2cdff":"code","01ac50fd":"code","47f75bff":"code","339b0d87":"code","97662c93":"code","2a1bd547":"code","2b70d9f2":"code","d41d9398":"code","886eae40":"code","eeb3c95e":"code","c3eaad38":"code","e9a424a2":"code","f8c2213b":"code","30316a14":"code","82f6d4fb":"code","0e7ae870":"code","17521336":"code","322907fd":"code","40c974c0":"code","f7c6654c":"code","1bfde452":"code","3308da13":"code","d09aeba0":"code","b4e50fd3":"code","52b045ad":"code","3a975278":"code","d205b20a":"code","4ab8b2f1":"code","4945ba7a":"code","25c9785a":"code","970d41bb":"code","9172f7ab":"code","2cd1d8e5":"code","6a175bc3":"code","24ff5f4e":"code","3a5a5a5a":"code","cd56d591":"code","f847d0df":"code","fb610775":"code","46e12846":"code","83d03a4f":"code","c9c9acd0":"code","f6f322c8":"code","931565a0":"code","6d5c65af":"code","5f12dbd8":"markdown","c285104c":"markdown","d56a960f":"markdown","f2839840":"markdown","f326d95a":"markdown","b8f42600":"markdown","657e20db":"markdown","2f2559f9":"markdown","935f75fc":"markdown"},"source":{"7efab198":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce8a1dae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as po\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.figure_factory as ff\n%matplotlib inline\n","0a6b9056":"df = pd.read_csv('..\/input\/data-visualisation-for-beginners\/Electricity Connections.csv')","7f538a84":"df","2b49d30d":"df.head()","0fe407f9":"df.tail()","2457a4c5":"df.shape","2544f49b":"df.size","f1f2da53":"df.dtypes","cdf78d83":"df.columns","407af237":"df.info()","b923a98f":"df.describe()","02cb61ee":"df.duplicated().sum()","99c24a90":"df.drop(['Districts'],axis = 1).skew()","36dba236":"df.drop(['Districts'],axis = 1).corr()","c4cafaf2":"#All are unique values\ndf['Districts'].value_counts()","6372f30c":"fig = px.histogram(df, 'Domestic Connections',             \n                   color=\"Districts\",\n                   title=\"<b>Average count of domestic connections<\/b>\")\n\nfig.add_vline(x=df['Domestic Connections'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n#In telangana mailnly there are 15 districts which has domestic connections less than 0.2M(2 lacks)\n#In telangana mainly there are 12 districts which has domestic connections between 0.2M and 4M(4 lacks)\n#Only 4 districts have morethan 0.4M domestic connections in state","cee253ed":"# dropping Nizambad,rangareddy,medchal and hyderabad \nx = df['Districts'].drop([2,15,19,22],axis = 0)\ny = df['Domestic Connections'].drop([2,15,19,22],axis=0)\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Districts vs Domestic Connections')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n#Except khammam,karimnagar,nalagonda and warangal(u) has less lessthan 300k domestic connections","3b24d468":"df[df['Domestic Connections'] < 200000]['Districts']\n\n# Name of the districts which has domestic connections lessthan 200k","23d05f90":"df[df['Domestic Connections'] < 200000]['Districts'].count()\n\n#count of the districts which has domestic connections lessthan 200k","036ee59c":"#districts which has domestic connections lessthan 200k\nx = df[df['Domestic Connections'] < 200000]['Districts']\ny = df[df['Domestic Connections'] < 200000]['Domestic Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Dometic connections lessthan 200k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n# Only one district has domestic connections lessthan 100k jogulamba(92.452k)","e9d746f0":"df[df['Domestic Connections'] > 200000]['Districts']\n\n# Name of the districts which has domestic connections greatherthan 200k","20c1a864":"df[df['Domestic Connections'] > 200000]['Districts'].count()\n\n#count of the districts which has domestic connections greatherthan 200k","910b2b54":"#districts which has domestic connections greatherthan 200k\nx = df[df['Domestic Connections'] > 200000]['Districts']\ny = df[df['Domestic Connections'] > 200000]['Domestic Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'domestic connections greatherthan 200k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# Hyderabad,medchal,rangareddy has higher connections","2a9c8ef6":"##districts which has domestic connections between 250k and 400k\nx = df[(df['Domestic Connections'] > 200000) & (df['Domestic Connections'] < 400000)]['Districts']\ny = df[(df['Domestic Connections'] > 200000) & (df['Domestic Connections'] < 400000)]['Domestic Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'domestic connections between 250k and 400k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# total 8 districts have domestic connections between 250k and 400k","20ef1176":"df[df['Domestic Connections'] > 400000]['Districts']\n\n# Name of the districts which has domestic connections greatherthan 400k","30091a3a":"df[df['Domestic Connections'] > 400000]['Districts'].count()\n\n# Count of the districts which has domestic connections greatherthan 400k","4b3835f4":"#districts which has domestic connections greatherthan 400k\nx = df[df['Domestic Connections'] > 400000]['Districts']\ny = df[df['Domestic Connections'] > 400000]['Domestic Connections']\n\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'domestic connections greatherthan 400k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n#1st Hyderabad has around 1.46M domestic connections\n#2nd Medchal has around 1.04M domestic connections\n#3rd Rangareddy has around 960k domestic connections\n#4th Nizamabad has around 420k domestic connections\n#5th khammam has around 397k domestic connections","396d3f72":"df1 = df[['Districts','Domestic Connections']].sort_values('Domestic Connections')\ndf1\n\n# sorted with repect to Domestic Connections","a7921df9":"x = df1['Districts']\ny = df1['Domestic Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Districts vs Domestic Connections')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","5e7d3583":"fig = px.histogram(df, 'Industrial Connections',             \n                   color=\"Districts\",\n                   title=\"<b>Average count of Industrial Connections<\/b>\")\n\nfig.add_vline(x=df['Industrial Connections'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# A total of 29 districts in telangana has lessthan 4k industrial connections\n# Only 3 districts have morethan 10k industrial connections hyderabad(13.041k),rangareddy(15.07k),medchal(57.749k)","614a51c2":"# dropping hyderabad,medchal and rangareddy districts\nx = df['Districts'].drop([2,15,22],axis = 0)\ny = df['Industrial Connections'].drop([2,15,22],axis=0)\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Districts vs Industrial Connections')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","03cf52eb":"df[df['Industrial Connections'] < 10000]['Districts']\n\n# Name of the districts which has industrial connections lessthan 10k","50b816af":"df[df['Industrial Connections'] < 10000]['Districts'].count()\n\n# Count of the districts which has industrial connections lessthan 10k","f2ae2e2e":"#districts which has Industral connections lessthan 10k\nx = df[df['Industrial Connections'] < 10000]['Districts']\ny = df[df['Industrial Connections'] < 10000]['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Industral connections lessthan 10k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","44ae7e3e":"df[(df['Industrial Connections'] > 1500) & (df['Industrial Connections'] < 3000)]['Districts']\n\n# Name of the districts which has industrial connections lessthan 3k and greatherthan 1.5k","fc8d5fc5":"df[(df['Industrial Connections'] > 1500) & (df['Industrial Connections'] < 3000)]['Districts'].count()\n\n# Count of the districts which has industrial connections lessthan 3k and greatherthan 1.5k","2a41075f":"#districts which has industrial connections lessthan 3k and greather than 1.5k\nx = df[(df['Industrial Connections'] > 1500) & (df['Industrial Connections'] < 3000)]['Districts']\ny = df[(df['Industrial Connections'] > 1500) & (df['Industrial Connections'] < 3000)]['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Industrial connections lessthan 3k and greather than 1.5k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","74c97853":"# Name of the districts which has industrial connections lessthan 10k and greatherthan 3k\ndf[(df['Industrial Connections'] > 3000) &  (df['Industrial Connections'] < 10000)]['Districts']","0420cef0":"# count of the districts which has industrial connections lessthan 10k and greatherthan 3k\ndf[(df['Industrial Connections'] > 3000) &  (df['Industrial Connections'] < 10000)]['Districts'].count()","b9ea688c":"#districts which has industrial connections lessthan 10k and greatherthan 3k\nx = df[(df['Industrial Connections'] > 3000) & (df['Industrial Connections'] < 10000)]['Districts']\ny = df[(df['Industrial Connections'] > 3000) & (df['Industrial Connections'] < 10000)]['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'industrial connections lessthan 10k and greatherthan 3k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","07894f64":"df[df['Industrial Connections'] < 1500]['Districts']\n#Name of districts which has industrial connections lessthan 1.5k","b96e0ec0":"df[df['Industrial Connections'] < 1500]['Districts'].count()\n#count districts which has industrial connections lessthan 1.5k","6cf31b25":"#districts which has industrial connections lessthan 1.5k\nx = df[df['Industrial Connections'] < 1500]['Districts']\ny = df[df['Industrial Connections'] < 1500]['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'industrial connections lessthan 1.5k')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","4d9564cc":"df[df['Industrial Connections'] > 10000]['Districts']","2bd2019d":"df[df['Industrial Connections'] > 10000]['Districts'].count()","5b5c6a17":"x = df[df['Industrial Connections'] > 10000]['Districts']\ny = df[df['Industrial Connections'] > 10000]['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","f0e531bd":"df2 = df[['Districts','Industrial Connections']].sort_values('Industrial Connections')\ndf2","481a1d3e":"x = df2['Districts']\ny = df2['Industrial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","8d9436a6":"fig = px.histogram(df, 'Agriculture Connections',             \n                   color=\"Districts\",\n                   title=\"<b>Average count of Agriculture Connections<\/b>\")\n\nfig.add_vline(x=df['Agriculture Connections'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n#Out of 31 districts 13 districts has morethan 80k agricultural connections\n# Majority(8) of the districts have connections between 80k-100k\n# Nalagonda has highest agricultural connections(165.131k)\n# Nizamabad has second highest agricultural connections(149.416k)\n# Suryapeta,rangareddy and jagital has more than 100k agricultural connections\n# Hyderabad has least agricultural connections(86) and komaram bheem has (6672) agricultural connections next is adilabad with 17.948k which has huge difference between the other two","151ff6be":"x = df['Districts'].drop([3,17,19,22,25],axis = 0)\ny = df['Agriculture Connections'].drop([3,17,19,22,25],axis=0)\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n# We can see that except hyderabad and komaram bheem every district has decent agricultural connections","c8d7c1d0":"df[df['Agriculture Connections'] < 20000]['Districts']","4c5579c4":"df[df['Agriculture Connections'] < 20000]['Districts'].count()","9d463be7":"x = df[df['Agriculture Connections'] < 20000]['Districts']\ny = df[df['Agriculture Connections'] < 20000]['Agriculture Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","a07423e1":"df[df['Agriculture Connections'] > 80000]['Districts']","0394a001":"df[df['Agriculture Connections'] > 80000]['Districts'].count()","93d437f6":"x = df[df['Agriculture Connections'] > 80000]['Districts']\ny = df[df['Agriculture Connections'] > 80000]['Agriculture Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","61c1963c":"df[(df['Agriculture Connections'] > 20000) & (df['Agriculture Connections'] > 80000)]['Districts']","0fbed4de":"df[(df['Agriculture Connections'] > 20000) & (df['Agriculture Connections'] > 80000)]['Districts'].count()","9dd4b371":"x = df[(df['Agriculture Connections'] > 20000) & (df['Agriculture Connections'] > 80000)]['Districts']\ny = df[(df['Agriculture Connections'] > 20000) & (df['Agriculture Connections'] > 80000)]['Agriculture Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","3b898548":"df3 = df[['Districts','Agriculture Connections']].sort_values('Agriculture Connections')\ndf3","e5f3552f":"x = df3['Districts']\ny = df3['Agriculture Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","010e59b7":"fig = px.histogram(df, 'Commercial Connections',             \n                   color=\"Districts\",\n                   title=\"<b>Average count of Commercial Connections<\/b>\")\n\nfig.add_vline(x=df['Commercial Connections'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# Only 4 districts has commercial connections morethan 50k(Nizambad(50.67k),medchal(121.581k),rangareddy(122.46k),hyderabad(324.781k))\n","f7b65435":"x = df['Districts'].drop([2,15,19,22],axis = 0)\ny = df['Commercial Connections'].drop([2,15,19,22],axis=0)\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n# Warangal(u) has 47.177k commercial connections and nalagonda has 42.466k connections\n# only 4 districts has lessthan 10k commercial connections jayashankar(9719),jogulamba(9403),komaram bheem(6332),rajanna(9896)","3809bd08":"df[df['Commercial Connections'] < 20000]['Districts']","f1e2dd4f":"df[df['Commercial Connections'] < 20000]['Districts'].count()","2bf2cdff":"x = df[df['Commercial Connections'] < 20000]['Districts']\ny = df[df['Commercial Connections'] < 20000]['Commercial Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","01ac50fd":"df[df['Commercial Connections'] < 10000]['Districts']","47f75bff":"df[df['Commercial Connections'] < 10000]['Districts'].count()","339b0d87":"x = df[df['Commercial Connections'] < 10000]['Districts']\ny = df[df['Commercial Connections'] < 10000]['Commercial Connections']\ndata = go.Bar(x=x,y=y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","97662c93":"df[(df['Commercial Connections'] > 20000) & (df['Commercial Connections'] < 50000)]['Districts']","2a1bd547":"df[(df['Commercial Connections'] > 20000) & (df['Commercial Connections'] < 50000)]['Districts'].count()","2b70d9f2":"x = df[(df['Commercial Connections'] > 20000) & (df['Commercial Connections'] < 50000)]['Districts']\ny = df[(df['Commercial Connections'] > 20000) & (df['Commercial Connections'] < 50000)]['Commercial Connections']\ndata = go.Bar(x=x,y=y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data = data,layout = layout)\nfig.show()","d41d9398":"df[df['Commercial Connections'] > 50000]['Districts']","886eae40":"df[df['Commercial Connections'] > 50000]['Districts'].count()","eeb3c95e":"x = df[df['Commercial Connections'] > 50000]['Districts']\ny = df[df['Commercial Connections'] > 50000]['Commercial Connections']\ndata = go.Bar(x=x,y=y)\nlayout = go.Layout(title = 'Simple bar chart')\nfig = go.Figure(data = data, layout = layout)\nfig.show()","c3eaad38":"df4 = df[['Districts','Commercial Connections']].sort_values('Commercial Connections')\ndf4","e9a424a2":"x = df4['Districts']\ny = df4['Commercial Connections']\ndata = go.Bar(x=x,y=y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data = data,layout = layout)\nfig.show()","f8c2213b":"fig = px.histogram(df, 'Other Connections',             \n                   color=\"Districts\",\n                   title=\"<b>Average count of Other Connections<\/b>\")\n\nfig.add_vline(x=df['Other Connections'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# Majority(16) of the districts has other connections less than 5k\n# 11 of the districts has other connections between 5k - 10k\n# 2 districts have connections more than 10k rangareddy(10.879k),nizambad(12.7k)\n# 1 district have connections more than 15k hyderabad(18.987k)\n# 1 district have connections morethan 20k medchal(20.58k)","30316a14":"x = df['Districts'].drop([2,15,19,22],axis = 0)\ny = df['Other Connections'].drop([2,15,19,22],axis=0)\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n\n# only 3 districts have other connections morethan 7k khammam(7601),rajanna(8075),siddipet(8478)","82f6d4fb":"df[df['Other Connections'] < 4000]['Districts']\n\n# Name of districts which has lessthan 4k other connections (14)","0e7ae870":"df[df['Other Connections']< 4000]['Districts'].count()\n\n#count of them","17521336":"x = df[df['Other Connections']< 4000]['Districts']\ny = df[df['Other Connections']< 4000]['Other Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","322907fd":"df[(df['Other Connections'] > 4000) & (df['Other Connections'] < 10000)]['Districts']","40c974c0":"df[(df['Other Connections'] > 4000) & (df['Other Connections'] < 10000)]['Districts'].count()","f7c6654c":"x = df[(df['Other Connections'] > 4000) & (df['Other Connections'] < 10000)]['Districts']\ny = df[(df['Other Connections'] > 4000) & (df['Other Connections'] < 10000)]['Other Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","1bfde452":"df[df['Other Connections'] > 10000]['Districts']","3308da13":"df[df['Other Connections'] > 10000]['Districts'].count()","d09aeba0":"x = df[df['Other Connections'] > 10000]['Districts']\ny = df[df['Other Connections'] > 10000]['Other Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","b4e50fd3":"df5 = df[['Districts','Other Connections']].sort_values('Other Connections')\ndf5","52b045ad":"x = df5['Districts']\ny = df5['Other Connections']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()","3a975278":"a = []\nfor i in df1['Districts'].tail(5):\n    a.append(i)\ndf1.tail()","d205b20a":"a","4ab8b2f1":"for i in df2['Districts'].tail():\n    a.append(i)\ndf2.tail()","4945ba7a":"a","25c9785a":"for i in df3['Districts'].tail():\n    a.append(i)\ndf3.tail()","970d41bb":"a","9172f7ab":"for i in df4['Districts'].tail():\n    a.append(i)\ndf4.tail()","2cd1d8e5":"a","6a175bc3":"for i in df5['Districts'].tail():\n    a.append(i)\ndf5.tail()","24ff5f4e":"a","3a5a5a5a":"c = []\nfor i in a:\n    if i not in c:\n        c.append(i)\nc","cd56d591":"v = df['Districts'].index.values\nv","f847d0df":"m = []\nfor i in range(len(v)):\n    if df['Districts'][i] in c:\n        m.append(v[i])\nm","fb610775":"# This dataframe consists of districts which have top 5 connections in either of the column\ndf6 = df.loc[m]\ndf6\n\n# when there are high domestic connections,Industrial connections and commercial connections ultimately the agricultural connections are low","46e12846":"x = df6['Districts']\ny1 = df6['Domestic Connections']\ny2 = df6['Industrial Connections']\ny3 = df6['Agriculture Connections']\ny4 = df6['Commercial Connections']\ny5 = df6['Other Connections']\ntrace0 = go.Bar(x= x,y= y1,marker= dict (color ='#FF6F00' ),name = 'Domestic Connections')\ntrace1 = go.Bar(x= x,y= y2,marker={'color' : '#FFB300'},name = 'Industrial Connections')    \ntrace2 = go.Bar(x= x,y= y3,marker={'color' : '#F7DC6F'},name = 'Agriculture Connections') \ntrace3 = go.Bar(x= x,y= y4,marker={'color' : '#FF9800'},name = 'Commercial Connections')\ntrace4 = go.Bar(x= x,y= y5,marker={'color' : '#7CB342'},name = 'Other Connections')\nlayout = go.Layout(title= 'Grouped Bar Chart' , width=980,height=800)\ndata = [trace0,trace1,trace2,trace3,trace4]\nfig = go.Figure(data=data, layout=layout)\nfig.show()","83d03a4f":"x = df6['Districts'].iloc[[0,3,6]]\ny1 = df6['Domestic Connections'].iloc[[0,3,6]]\ny2 = df6['Industrial Connections'].iloc[[0,3,6]]\ny3 = df6['Agriculture Connections'].iloc[[0,3,6]]\ny4 = df6['Commercial Connections'].iloc[[0,3,6]]\ny5 = df6['Other Connections'].iloc[[0,3,6]]\ntrace0 = go.Bar(x= x,y= y1,marker= dict (color ='#FF6F00' ),name = 'Domestic Connections')\ntrace1 = go.Bar(x= x,y= y2,marker={'color' : '#FFB300'},name = 'Industrial Connections')    \ntrace2 = go.Bar(x= x,y= y3,marker={'color' : '#F7DC6F'},name = 'Agriculture Connections') \ntrace3 = go.Bar(x= x,y= y4,marker={'color' : '#FF9800'},name = 'Commercial Connections')\ntrace4 = go.Bar(x= x,y= y5,marker={'color' : '#7CB342'},name = 'Other Connections')\nlayout = go.Layout(title= 'Grouped Bar Chart' , width=980,height=800)\ndata = [trace0,trace1,trace2,trace3,trace4]\nfig = go.Figure(data=data, layout=layout)\nfig.show()\n\n# Rangareddy is the only district which has its name in top5 in all connections \n# Even rangareddy has more number of domestic,industrial,commercial and other connections but it stands in top 5 in agricultural connections too so it is balanced district in electricity connections\n# I think nizambad and medchal are next two most balanced districts","c9c9acd0":"df6.corr()\n\n# All connections are having negative coreralation with agriculture","f6f322c8":"sns.pairplot(df6)","931565a0":"plt.figure(figsize=(16,9))\nax = sns.heatmap(df6.corr(),annot = True, cmap = 'viridis')\nplt.show()","6d5c65af":"plt.figure(figsize=(16,9))\nax = sns.heatmap(df.corr(),annot = True, cmap = 'viridis')\nplt.show()\n#Heatmap of original dataframe","5f12dbd8":"## Analysing Commercial Connections with Districts","c285104c":"# Exploratory Data Analysis (EDA)","d56a960f":"## Analysis of domestic connection column with districts","f2839840":"# Loading DataSet","f326d95a":"## Analysing Industrial connections with districts","b8f42600":"# Data Visualisation","657e20db":"## Analysing Other connections with Districts","2f2559f9":"## Analysing Agricultural connections with districts","935f75fc":"# Import Libraries"}}