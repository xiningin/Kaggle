{"cell_type":{"ab0d685b":"code","a9603bf6":"code","a8de3be3":"code","1a174ff8":"code","e250f823":"code","3867200b":"code","5ff4e5ee":"code","27503d35":"code","aa1d266b":"code","8295cb22":"code","a7003188":"code","65bb018d":"code","99fd72bb":"code","bc6c0809":"code","f17bd430":"code","a381fd96":"code","2870a205":"code","0bd9daaa":"code","104cfd56":"code","1cc502ad":"code","65cd3daa":"code","74c0bc66":"code","84c353ac":"code","fa093139":"code","d8f9ba24":"code","4985780c":"code","2957ebbb":"code","555bffc7":"code","0e95b8c7":"code","d6336cf6":"code","2e2a3783":"code","1d0a55d0":"code","7ee2fb70":"code","0b48430e":"code","daede1ce":"code","67e92f2e":"code","289c0fc2":"code","6e546643":"code","5d077ba1":"code","2eb19ba4":"markdown","c795ebb0":"markdown","211d30dd":"markdown","74ffb7e1":"markdown","a7857af8":"markdown","9aa0fffd":"markdown","65245d40":"markdown","a16a555b":"markdown","cc9ab183":"markdown","a01f972d":"markdown","20f64bf3":"markdown","a859ee7b":"markdown","0363fb47":"markdown","1cfd10ba":"markdown","c0ee5a5c":"markdown"},"source":{"ab0d685b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import confusion_matrix","a9603bf6":"# loading the dataset\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\n\ndf_train.head()","a8de3be3":"# checking the data types and info\ndf_train.info()","1a174ff8":"# shape of the data frame\ndf_train.shape","e250f823":"# missing value percentage\nround(100 * (df_train.isna().sum(axis=0)\/len(df_train.index)),2)","3867200b":"# dropping the cabin column as 77% of the data are missing\ndf_train.drop(columns = ['Cabin'],inplace = True)","5ff4e5ee":"df_train.info()","27503d35":"# converting the data type of the columns\ndf_train['Survived'] = df_train['Survived'].astype('category')\ndf_train['Pclass'] = df_train['Pclass'].astype('category')\ndf_train['Sex'] = df_train['Sex'].astype('category')\ndf_train['Embarked'] = df_train['Embarked'].astype('category')","aa1d266b":"# printing the list of numerical and non-numerical columns\nnumerical_columns = df_train.select_dtypes(include = 'number').columns.tolist()\nprint(\"Numerical Columns\")\nprint(numerical_columns,end=\"\\n\")\ncategorical_columns = df_train.select_dtypes(exclude = 'number').columns.tolist()\nprint(\"Categorical Columns\")\nprint(categorical_columns,end=\"\\n\")","8295cb22":"# check for duplicate records\nany(df_train.duplicated(keep='first'))","a7003188":"# imputing the age with mean values\ndf_train.Age.fillna(df_train.Age.mean(),inplace = True)","65bb018d":"# creating 'Age Groups' category column from Age column\ndef age_group(x):\n    if (x > 0) and (x <=2):\n        return 'babies'\n    elif (x > 2) and (x <=16):\n        return 'children'\n    elif (x > 16) and (x <=30):\n        return 'yound adults'\n    elif (x > 30) and (x <=45):\n        return 'middle-aged adults'\n    elif (x > 45) and (x <=80):\n        return 'old'\n    else:\n        return 'unknown'\n\ndf_train['Age Groups'] = df_train['Age'].apply(age_group)","99fd72bb":"# plotting the passengers age\nprint(df_train['Age'].describe())\nsns.boxplot(y = df_train['Age'])","bc6c0809":"# plotting the histogram to see the distribution\nsns.distplot(df_train['Age'].dropna())\nplt.show()","f17bd430":"# plotting count plot to know the number of male and female\nsns.countplot(df_train['Sex'])\nplt.show()","a381fd96":"# filtering only survived passengers in the dataset\ndf_survived = df_train[df_train['Survived']==1]","2870a205":"# plotting count plot to know the number of male and female in the survived passengers\nsns.countplot(df_survived['Sex'])\nplt.show()","0bd9daaa":"df_train['Survived'] = df_train['Survived'].astype(int)\nby_pclass_segment_group = df_train.pivot_table(values='Survived',index='Pclass',aggfunc='mean')\nby_pclass_segment_group.reset_index(inplace=True)\nby_pclass_segment_group['Survived'] = 100*by_pclass_segment_group['Survived']\nplt.figure(figsize=(8,4))\nsns.barplot(x='Pclass',y='Survived', data=by_pclass_segment_group)\nplt.xlabel(\"Pclass\")\nplt.ylabel(\"Percentage of passenger survived\")\nplt.title(\"% of passenger survived vs Class of the passenger\")\nplt.show()","104cfd56":"by_gender_pclass_segment_group = df_train.pivot_table(values='Survived',index=['Sex','Pclass'])\nby_gender_pclass_segment_group.reset_index(inplace=True)\nby_gender_pclass_segment_group['Survived'] = 100*by_gender_pclass_segment_group['Survived']\nplt.figure(figsize=(8,4))\nsns.barplot(x='Pclass',y='Survived',hue='Sex', data=by_gender_pclass_segment_group)\nplt.xlabel(\"Pclass\")\nplt.ylabel(\"Percentage of passenger survived\")\nplt.show()","1cc502ad":"# bin by age group and analyse which age group survived\nplt.figure(figsize=(10,6))\nsns.boxplot(x = 'Survived', y = 'Age', data = df_train)\nplt.title(\"Age v\/s Survived\")\nplt.show()","65cd3daa":"plt.figure(figsize=(10,6))\nsns.barplot(y = 'Survived', x = 'Age Groups', data = df_train)\nplt.title(\"Age Groups v\/s Survived\")\nplt.show()","74c0bc66":"# treating categorical variables\ndf_train.Sex = df_train.Sex.apply(lambda x : 0 if x == 'male' else 1)\n# adding parents and siblings data to get family members data\ndf_train['Family Members'] = df_train.SibSp + df_train.Parch\n\n#creating dummy variables for passenger class, age groups and embarked variables\npClass = pd.get_dummies(df_train.Pclass, drop_first = True)\nembarked = pd.get_dummies(df_train.Embarked, drop_first = True)\nage_groups = pd.get_dummies(df_train['Age Groups'], drop_first = True)\n\ndf_train = pd.concat([df_train,age_groups,pClass,embarked], axis=1)","84c353ac":"# creating X and y training variables\ny_train = df_train.pop('Survived')\nX_train = df_train.drop(columns = ['PassengerId','Pclass','Name','Ticket','Embarked','Age Groups'])","fa093139":"X_train.head()","d8f9ba24":"# feature scaling of numeric variables\nscaler = MinMaxScaler()\ncols_to_scale = ['Age','Fare','SibSp','Parch','Family Members']\nX_train[cols_to_scale] = scaler.fit_transform(X_train[cols_to_scale])","4985780c":"# defining logistic regression model and fitting the model with training data set\nlr = LogisticRegression()\nlr.fit(X_train,y_train)","2957ebbb":"# predicting the result\ny_train_pred = lr.predict(X_train)","555bffc7":"# using confusion matrix to find the accuracy\nconfusion_matrix(y_train,y_train_pred)","0e95b8c7":"round(100* ((480 + 238) \/ (480+69+104+238)),2)","d6336cf6":"# now reading the test dataset\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndf_test.head()","2e2a3783":"df_test.info()","1d0a55d0":"# dropping 'cabin' column\ndf_test.drop(columns = 'Cabin',inplace = True)","7ee2fb70":"# imputting the age and fare values with its mean\ndf_test.Age.fillna(df_test.Age.mean(),inplace = True)\ndf_test.Fare.fillna(df_test.Fare.mean(),inplace = True)","0b48430e":"# creating the age groups column\ndf_test['Age Groups'] = df_test['Age'].apply(age_group)","daede1ce":"#creating dummy variables for categorical columns\ndf_test.Sex = df_test.Sex.apply(lambda x : 0 if x == 'male' else 1)\ndf_test['Family Members'] = df_test.SibSp + df_test.Parch\n\npClass = pd.get_dummies(df_test.Pclass, drop_first = True)\n\nembarked = pd.get_dummies(df_test.Embarked, drop_first = True)\n\nage_groups = pd.get_dummies(df_test['Age Groups'], drop_first = True)\ndf_test = pd.concat([df_test,pClass,age_groups,embarked], axis=1)","67e92f2e":"# creating X test variable\nX_test = df_test.drop(columns = ['PassengerId','Pclass','Name','Ticket','Embarked','Age Groups'])","289c0fc2":"# feature scaling the numerical columns\ncols_to_scale = ['Age','Fare','SibSp','Parch','Family Members']\nX_test[cols_to_scale] = scaler.fit_transform(X_test[cols_to_scale])","6e546643":"# predicting the test result\ny_test_pred = lr.predict(X_test)","5d077ba1":"#creating the gender submission csv file for submission to kaggle\ngender_submission_df = pd.concat([df_test['PassengerId'],pd.Series(y_test_pred)],axis=1)\ngender_submission_df.rename(columns={0:'Survived'},inplace = True)\ngender_submission_df.to_csv(\"gender_submissions.csv\",index = False)","2eb19ba4":"### Reading and Understanding of data","c795ebb0":"we can see from the graph that, age of the passengers vary from 0.42 to 80 years, median age is 28 years and average age is 29 years","211d30dd":"### Model Prediction on the train data set using Logistic regression","74ffb7e1":"We got 80% accuracy from the training set","a7857af8":"As we can see, more female passengers are survived than the male passengers","9aa0fffd":"As we can see there are more male passengers in the ship than the female passengers","65245d40":"Median age of the passengers who are survived and who are dead is same but the upper quartile range of the passenger who are not survived is more than that of survived","a16a555b":"It can clearly seen from the graph that, babies are survived more compare to any other age group","cc9ab183":"### Visualisation of the data","a01f972d":"### Model prediction on the test dataset","20f64bf3":"There are no duplicate rows","a859ee7b":"We can clearly see that age of the passengers are normally distributed","0363fb47":"From the above graph, we can clearly see that most of the male passengers survived belongs to Class '1'. Also, more female passengers belonged to the Class 1 and Class 2 are survived compare to the Class '3","1cfd10ba":"Clearly, percentage of passengers belonged to class '1' survived more than the passsenger belonged to class '3' ","c0ee5a5c":"As we can see that 77% of the data is missing for column 'Cabin'. So we are going to drop 'Cabin' column"}}