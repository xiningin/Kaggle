{"cell_type":{"7938c67d":"code","aae2c130":"code","b52a4e33":"code","90bb1037":"code","33c9e348":"code","127b947f":"code","1b2fa2a5":"code","0659a773":"code","5f3bd336":"code","0f314416":"code","c20c6d81":"code","57c08b4a":"code","3ff478a8":"code","4f64891f":"code","12f7c815":"code","5c0c42a1":"code","f9cc4324":"code","8966edb5":"code","02cabfb4":"code","27c94b2a":"code","141eae75":"code","24aebf60":"code","d5f51264":"code","03ef0fb7":"code","9bdb75aa":"code","d4a02440":"code","5ca43b4e":"code","72725097":"code","690714c2":"code","113d9e4b":"code","458702bc":"code","6d44f7fd":"code","30e06ddb":"code","73d849f8":"code","ed7ed5d3":"code","5c46098f":"code","30ed635d":"code","766dfeee":"code","9ffe26aa":"code","7207d660":"code","37e16604":"code","48bbc96a":"code","9a0b6661":"code","dee0de15":"code","a1bbc39f":"code","989afb19":"code","eb1a91ba":"code","485ec30f":"code","75ed7565":"code","fd37d653":"code","fa0ae741":"markdown","101b65ae":"markdown","d2cdd468":"markdown","98cc6c1a":"markdown","1489e32e":"markdown","7a782474":"markdown","fac8424e":"markdown","22f65d23":"markdown","14a8178e":"markdown","b1f9de02":"markdown","4be8ed77":"markdown","12d8c1e1":"markdown","1ece3dae":"markdown","1c84dc4f":"markdown","00fb9fe2":"markdown","5f18085f":"markdown","178756cd":"markdown","d40f7972":"markdown","e8cca65b":"markdown","288c4050":"markdown","cbc17c6f":"markdown","1398626d":"markdown","48c9dfa5":"markdown","fa8d47a1":"markdown","f8c47c89":"markdown","22d2d178":"markdown","5ee842db":"markdown","3e52fe3d":"markdown","b3d4c432":"markdown","967890cf":"markdown","50f9efc5":"markdown","f12e9851":"markdown","812611ec":"markdown","419cc6f0":"markdown","5ef54cb6":"markdown","a2885b47":"markdown","b4ecf0fd":"markdown","b46b4c8f":"markdown","58a8b014":"markdown","3aadb180":"markdown","d094a338":"markdown","0195525b":"markdown","2262ce2d":"markdown","ff0afbea":"markdown","f2ed7d46":"markdown","68e5b121":"markdown","5439c072":"markdown","ed81cfd5":"markdown","9d9811ee":"markdown","9b96ffb4":"markdown","91f824da":"markdown","2a811fd2":"markdown","676b191d":"markdown","b589b301":"markdown","6a521321":"markdown","5339968b":"markdown","9c0f9840":"markdown","5331dbfa":"markdown","d355f500":"markdown","e640abe3":"markdown"},"source":{"7938c67d":"# Import essential libraries and modules\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import pyplot\nimport matplotlib as mpl\nimport os\nimport plotly \nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot \ninit_notebook_mode(connected=True)\nfrom IPython.display import Image\nfrom sklearn.neighbors import NearestNeighbors, KNeighborsRegressor\nfrom sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\nfrom sklearn.impute import SimpleImputer\nfrom datetime import datetime, timedelta\nimport gc\nimport scipy.stats as stats\n# Configure some plot settings\n%config InlineBackend.figure_format = 'retina'\nsns.set()\n%matplotlib inline\nmpl.rcParams['figure.figsize'] = (12,8)\nmpl.rcParams['font.size'] = 12\nmpl.rcParams['figure.dpi'] = 80\n#import seaborn as sns\nsns.set_style(\"darkgrid\")\nmpl.style.use('ggplot')","aae2c130":"\"\"\"\nLoad data from BDG2\n\"\"\"\n#path\npath = \"..\/input\/buildingdatagenomeproject2\"\n#files\nmetadata = pd.read_csv(path + \"\/metadata.csv\")\nmeters = pd.read_csv(path + \"\/electricity_cleaned.csv\")\nweather = pd.read_csv(path + \"\/weather.csv\")","b52a4e33":"\"\"\"\nBelow is to calculate EUI\n\"\"\"\n\nmeta = metadata\n\nelectricity = pd.read_csv(path+'\/electricity_cleaned.csv', index_col = 'timestamp', parse_dates = True)\nelectricity_annual = electricity[list(electricity.columns)].resample('A').sum(min_count=360)\n\nmelt = pd.melt(electricity_annual.reset_index(), id_vars=['timestamp'], value_vars=list(electricity_annual.columns))\n\n#melt.value.hist(figsize=(10, 4))\n#sns.boxplot(x = \"value\", data = melt)\nmelt.columns = ['timestamp','building_id','Annual']\n\nadd_gfa = melt.merge(meta, on=\"building_id\", how = \"left\")\nadd_gfa['sqm_eui'] = add_gfa['Annual'] \/ add_gfa['sqm']\nadd_gfa[\"eui\"] = add_gfa[\"eui\"].str.replace(',','')\nadd_gfa[\"eui\"] = add_gfa[\"eui\"].str.replace('-','')\nadd_gfa[\"eui\"] = add_gfa[\"eui\"].fillna(value=0)\nadd_gfa['eui'] = pd.to_numeric(add_gfa['eui'])\n\nf, axes = plt.subplots(nrows=2, ncols=1, figsize=(12, 4), sharex=True)\nsns.boxplot(x = \"eui\", data = add_gfa, ax = axes[0])\naxes[0].set_xlabel(\"EUI\")\nsns.boxplot(x = \"sqm_eui\", data = add_gfa, ax = axes[1])\naxes[1].set_xlabel(\"CALCULATED_EUI\")\n\nadd_gfa[\"timestamp\"] = pd.to_datetime(add_gfa[\"timestamp\"], format='%Y-%m-%d')\nadd_gfa[\"year\"] = pd.DatetimeIndex(add_gfa[\"timestamp\"]).year\n\ndataset = add_gfa[['year','building_id','Annual','eui','sqm_eui', 'site_id','primaryspaceusage','sqm','lat','lng','timezone','electricity','industry']]\n#dataset.to_csv('eui.csv')","90bb1037":"\"\"\"\nBelow is to prepare datagroup1 for the following figures draw\n\"\"\"\n\neui=dataset\n# Select education building in Bear site from metadata, and extract subset to merge eui data\nbear_meta=metadata.loc[metadata[\"site_id\"]==\"Bear\"]\nbear_edu_meta=bear_meta.loc[bear_meta[\"primaryspaceusage\"]==\"Education\"]\nbear_edu_meta_sub=bear_edu_meta[[\"building_id\",\"yearbuilt\",\"numberoffloors\"]]\n\n# Select education building in Bear site from eui data\neui=eui.loc[eui[\"building_id\"].str.contains(\"Bear_education\")]\neui=eui[[\"year\",\"building_id\",\"sqm_eui\",\"sqm\"]]\ndatagroup1=eui.merge(bear_edu_meta_sub,on=\"building_id\",how=\"left\").dropna()\n\n# Create CO2 and two tabs for datagroup1, to enable drawing\n## CO2 calculation\ndatagroup1[\"co2\"]=datagroup1[\"sqm_eui\"]*0.401\ndatagroup1[\"co2t\"]=datagroup1[\"sqm_eui\"]*0.401*datagroup1[\"sqm\"]\n\n## Define if a building's electricity use is over the benchmark\ndatagroup1.loc[(datagroup1.sqm_eui>265.94),\"high\"]=\"Y\"\ndatagroup1.loc[(datagroup1.sqm_eui<=265.94),\"high\"]=\"N\"\n\n## Define the year group\ndatagroup1.loc[(datagroup1.yearbuilt<=1950),\"yeargroup\"]=\"old\"\ndatagroup1.loc[((datagroup1.yearbuilt>1950) & (datagroup1.yearbuilt<=1990)),\"yeargroup\"]=\"middle-age\"\ndatagroup1.loc[(datagroup1.yearbuilt>1990),\"yeargroup\"]=\"new\"\n\n## Define the floor group\ndatagroup1.loc[(datagroup1.numberoffloors>=7),\"floorgroup\"]=\"H\"\ndatagroup1.loc[(datagroup1.numberoffloors<7),\"floorgroup\"]=\"L\"\n\n## Datagroup1 sorted by eui \ndatagroup1=datagroup1.sort_values(by=\"sqm_eui\",ascending=False)\ndatagroup1=datagroup1.reset_index()","33c9e348":"\"\"\"\nBelow is to prepare datagroup2 for the following figures draw\n\"\"\"\n# change data format and melt\nmeters[\"timestamp\"] = pd.to_datetime(meters[\"timestamp\"], format='%Y-%m-%d %H:%M:%S')\nmeters=pd.melt(meters,id_vars=\"timestamp\",var_name=\"building_id\",value_name=\"meter_reading\")\n# filter\nbear_edu_meter=meters.loc[meters[\"building_id\"].str.contains(\"Bear_education\")]\ntemp=datagroup1.loc[datagroup1[\"year\"]==2016]\ntemp=temp[[\"building_id\",\"sqm\",\"yearbuilt\",\"numberoffloors\",\"high\",\"yeargroup\"]]\ndatagroup2=pd.merge(bear_edu_meter,temp,on=\"building_id\",how=\"left\").dropna(subset=[\"yeargroup\"])\ndatagroup2=pd.merge(bear_edu_meter,temp,on=\"building_id\",how=\"left\")","127b947f":"\"\"\"\nBelow is to prepare datagroup3 for the following figures draw\n\"\"\"\nweather[\"timestamp\"] = pd.to_datetime(weather[\"timestamp\"], format='%Y-%m-%d %H:%M:%S')\nwea=weather.loc[weather[\"site_id\"]==\"Bear\"][[\"timestamp\",\"site_id\",\"airTemperature\"]]\n\ndatagroup3=datagroup2.merge(wea,on=\"timestamp\",how=\"left\")\ndatagroup3=datagroup3.merge(datagroup1[[\"floorgroup\",\"building_id\"]],on=\"building_id\",how=\"left\")\ndatagroup3[\"elec_avg\"]=datagroup3[\"meter_reading\"]\/datagroup3[\"sqm\"]\ndatagroup3[\"month\"]=pd.DatetimeIndex(datagroup3.timestamp).month","1b2fa2a5":"\"\"\"\nBelow is to prepare setting for figures draw\n\"\"\"\n# Color palette\ncolors =  [\"rebeccapurple\", \"crimson\", \"orangered\", \"gold\", \"olivedrab\", \"royalblue\", \"darkcyan\", \"dimgrey\"]\n# X axis stick\ntick12=list(range(1,13))\nticklabel12=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"July\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\ntick7=list(range(1,8))\nticklabel7=[\"Mon\",\"Tues\",\"Wed\",\"Thur\",\"Fri\",\"Sat\",\"Sun\"]\ntick24=list(range(0,24))\nticklabel24=tick24","0659a773":"\"\"\"\nShow the buildings primary space usage in Bear site\n\"\"\"\ntable1=bear_meta.groupby(\"primaryspaceusage\", as_index=False)[\"building_id\"].agg(\"count\")\ntable1=table1.rename(columns={\"building_id\":\"number_of_buildings\"})\ntable1[\"percentage(%)\"]=round(table1[\"number_of_buildings\"]\/len(bear_meta)*100,2)\ntable1","5f3bd336":"\"\"\"\nfigure draw: Annual building kgCO2 equivalent emissions\n\"\"\"\n# dg: datagroup to draw\ndg=datagroup1\n\n# target: columns for Y axis in the figure\ntarget=\"co2t\"\n\n# h: if need hue, input \"year\", if not, input None\nh=None\n\n#yt: label of y axis\nyt=\"million kgCO2e\"\n\n#tit: title of the figure\ntit=\"Annual building kgCO2 equivalent emissions\"\n\n# drawing detail\ntest=pd.DataFrame({\"xa\":dg.building_id,\"ya\":dg[target]\/1000000,\"year\":dg.year})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nsns.barplot(data=test, x=\"xa\",y=\"ya\",hue=h,ax=ax1)\nax1.set(xticklabels=[])\nax1.set_ylabel(yt,fontsize=15)\nplt.title(tit,fontsize=18)\nplt.xlabel(\"Building in Bear site\",fontsize=15)\n#fig.legend()\n# plt.savefig(tit+\".png\",dpi=300)","0f314416":"\"\"\"\nfigure draw: Annual building kgCO2 equivalent emissions normalized by floor area\n\"\"\"\n# dg: datagroup to draw\ndg=datagroup1\n\n# target: columns for Y axis in the figure\ntarget=\"co2\"\n\n# h: if need hue, input \"year\", if not, input None\nh=None\n\n#yt: label of y axis\nyt=\"kgCO2e\/m\u00b2\"\n \n#tit: title of the figure\ntit=\"Annual building kgCO2 equivalent emissions normalized by floor area\"\n\n# drawing detail\ntest=pd.DataFrame({\"xa\":dg.building_id,\"ya\":dg[target],\"year\":dg.year})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nsns.barplot(data=test, x=\"xa\",y=\"ya\",hue=h,ax=ax1)\nax1.set(xticklabels=[])\nax1.set_ylabel(yt,fontsize=15)\nplt.title(tit,fontsize=18)\nplt.xlabel(\"Building in Bear site\",fontsize=15)\n#fig.legend()\n#plt.savefig(tit+\".png\",dpi=300)","c20c6d81":"\"\"\"\nFigure draw: Energy Usage Index\n\"\"\"\n\n# dg: datagroup to draw\ndg=datagroup1\n\n# target: columns for Y axis in the figure\ntarget=\"sqm_eui\"\n\n# h: if need hue, input \"year\", if not, input None\nh=\"year\"\n\n#yt: label of y axis\nyt=\"EUI (kWh\/m\u00b2\/year)\"\n\n#tit: title of the figure\ntit=\"Energy Usage Index\"\n\n# drawing detail\ntest=pd.DataFrame({\"xa\":dg.building_id,\"ya\":dg[target],\"year\":dg.year})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nsns.barplot(data=test, x=\"xa\",y=\"ya\",hue=h,ax=ax1)\nax1.set(xticklabels=[])\nax1.set_ylabel(yt,fontsize=15)\nplt.title(tit,fontsize=18)\nplt.xlabel(\"Building in Bear site\",fontsize=15)\n#fig.legend()\n#plt.savefig(tit+\".png\",dpi=300)\n","57c08b4a":"\"\"\"\nFigure draw: Year Built vs EUI for Buildings in Bear Site\n\"\"\"\n# This is to draw the scatter plot with trend lines\n## input\ndg=datagroup1\nxa=\"yearbuilt\"\nya=\"sqm_eui\"\nyt=\"EUI (kWh\/m\u00b2\/year)\"\ntit=\"Year Built vs EUI for Buildings in Bear Site\"\n\n## create sub datagroup to draw\ndg_y=dg.loc[dg[\"high\"]==\"Y\"]\ndg_n=dg.loc[dg[\"high\"]==\"N\"]\n\n\n## drawing details\nplt.scatter(x=dg_y[xa], y=dg_y[ya], color='r', label='High consumption buildings(EUI=>266 kWh\/m\u00b2\/yr)');\n# calc the trendline1\nz = np.polyfit(dg_y[xa], dg_y[ya], 1)\np = np.poly1d(z)\nplt.plot(dg_y[xa],p(dg_y[xa]))\n\n# calc the trendline2\nplt.scatter(x=dg_n[xa], y=dg_n[ya], color='DarkGreen', label='Normal consumption buildings(EUI<266 kWh\/m\u00b2\/yr');\nz = np.polyfit(dg_n[xa], dg_n[ya], 1)\np = np.poly1d(z)\nplt.plot(dg_n[xa],p(dg_n[xa]))\n\n\nplt.title(tit,fontsize=18)\n\nplt.legend(fontsize=15)\nplt.ylabel(yt,fontsize=15)\nplt.xlabel(\"Year of Built\",fontsize=15)\n#plt.savefig(\"yb_withline.png\",dpi=300)","3ff478a8":"\"\"\"\nFigure draw: Distribution of Buildings based on Built Year\n\"\"\"\n#draw the yearbuilt distribution of target building\ntemp=datagroup1.loc[datagroup1[\"year\"]==2016]\nax=sns.distplot(temp[\"yearbuilt\"],bins=10,color=\"royalblue\")\n#ax.set_xlim(1990,2020) \n\n## Add data label\nfor p in ax.patches: \n    height = p.get_height() \n    ax.text(x = p.get_x()+(p.get_width()\/2), y = height+0.0002,s= '{:.2%}'.format(height*1000\/(len(temp))),ha=\"center\",fontsize=11)\n\n## Adjust figure format\nplt.title(\"Distribution of Buildings based on Built Year\",fontsize=15)\n\nplt.xlabel(\"Year of Built\",fontsize=15)\nplt.ylabel(\"Probility\",fontsize=15)\n#plt.savefig(\"dis.png\",dpi=300)","4f64891f":"\"\"\"\nFigure draw: Year Built group of building\n\"\"\"\n# draw the boxplot\ntest=pd.DataFrame({\"building\":datagroup1.building_id,\"eui\":datagroup1[\"sqm_eui\"],\n                   \"ybgroup\":datagroup1[\"yeargroup\"],\"Year\":datagroup1.year})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nsns.boxplot(x=\"ybgroup\",y=\"eui\",data=test,hue=\"Year\",palette=colors)\n## adjust the format\nplt.setp(ax1.get_legend().get_texts(), fontsize='15') # for legend text\nplt.setp(ax1.get_legend().get_title(), fontsize='15') # for legend title\nax1.set_xticklabels(labels=[\"new group\",\"middle-age group\",\"old group\"],fontsize=15)\nax1.set_ylabel(\"EUI (kWh\/m2\/year)\",fontsize=15)\nplt.title(\"EUI for Different Age Group\",fontsize=18)\nplt.xlabel(\"Year Built group of building\",fontsize=15)\n#fig.legend(fontsize=15)\n#plt.savefig(\"ybgroup_bear.png\",dpi=300)","12f7c815":"\"\"\"\nFigure data prepare: Median Electricity vs. Hour\n\"\"\"\ndef ungroup(df,group):\n    df2=df.loc[df[\"yeargroup\"]==group]\n    df2=df2.groupby(\"timestamp\").agg(\"median\")\n    df2=df2.reset_index()\n    df2=df2.set_index(\"timestamp\")\n    return df2\n\nnew=ungroup(datagroup2,\"new\")\nold=ungroup(datagroup2,\"old\")\nmiddle=ungroup(datagroup2,\"middle-age\")\ndfyg=new.merge(old,on=\"timestamp\",how=\"left\")\ndfyg=dfyg.merge(middle,on=\"timestamp\",how=\"left\")\n\n\"\"\"\nFigure data prepare: Median Electricity vs. Hour\n\"\"\"\ndef drawtem(t,column,axn,axi,colori,tit,tick,ticklabel):\n    temp = pd.DataFrame(df.groupby([t]).median()[column]).reset_index()\n    axn = axes[axi]\n    sns.lineplot(data=temp, x=\"timestamp\", y=column, ax=axn, color=colors[colori])\n    axn.set_ylabel(\"Median meter reading (kWh)\")\n    axn.set_xlabel(\"\")\n    axn.set_title(tit, fontdict={'size':16})\n    axn.set_xticks(tick)\n    axn.set_xticklabels(labels=ticklabel,fontsize=12)\n    return axn\n\n\"\"\"\nFigure draw: Median Electricity vs. Hour\n\"\"\"\n# resample\ndf=dfyg.reset_index()\ntimes = pd.DatetimeIndex(df.timestamp)\n\n# Median for each month (12)\nsns.set(rc={'figure.figsize':(12,8)})\n#sns.set(font_scale = 2)\nf, axes = plt.subplots(3, 1, sharex=False)\naxes = axes.flatten()\nax1=axes[0]\nax2=axes[1]\nax3=axes[2]\n# Creates a temporal dataframe grouped by month: lineplot\ndrawtem(times.hour,\"meter_reading_x\",ax1,0,1,\"Buildings with new age\",tick24,ticklabel24)\ndrawtem(times.hour,\"meter_reading\",ax2,1,1,\"Buildings with middle age\",tick24,ticklabel24)\ndrawtem(times.hour,\"meter_reading_y\",ax3,2,1,\"Buildings with old age\",tick24,ticklabel24)\n\nplt.xlabel(\"Hour of a day\",fontsize=15)\nf.tight_layout()\nf.suptitle('Median Electricity vs. Hour', x=0.5,y=1.03,fontsize=20)\n#f.savefig(\"middle_month.png\",dpi=300)","5c0c42a1":"\"\"\"\nFigure data prepare: Relation between electricity consumption and air temperature\n\"\"\"\nforscatter=datagroup3.set_index(\"timestamp\")\nforscatter=forscatter.resample(\"D\").mean()\n#forscatter\n\n\"\"\"\nFigure draw: Relation between electricity consumption and air temperature\n\"\"\"\n#ax=sns.scatterplot(nof3[\"airTemperature\"],nof3[\"meter_reading\"],hue=nof3[\"month\"],palette=sns.cubehelix_palette(12, start=2, rot=0, dark=0.1,light=0.8, reverse=False))\nax=sns.scatterplot(forscatter[\"airTemperature\"],forscatter[\"elec_avg\"]*1000,hue=forscatter[\"month\"],palette=sns.color_palette(\"coolwarm\", 12))\n\n\nax.text(x=23,y=22,s=\"correlation coefficient\",fontsize=15)\ncor=np.corrcoef(forscatter.airTemperature,1000*forscatter.elec_avg)\nax.text(x=23,y=21.5,s='{:.4f}'.format(cor[0,1]),fontsize=15)\n#\u2018{:.0f}\u2019.format(height)\n\nz2 = np.polyfit(forscatter.airTemperature, 1000*forscatter.elec_avg, 1)\np2 = np.poly1d(z2)\nplt.plot(forscatter.airTemperature,p2(forscatter.airTemperature))\n\n\n\nplt.title(\"Relation between electricity consumption and air temperature\",fontsize=18)\nplt.xlabel(\"Air Temperature (degree centigrade)\",fontsize=15)\nplt.ylabel(\"Electricity Consumption (1000 kWh\/m\u00b2)\",fontsize=15)\n#fig.legend()\n#plt.savefig(\"corr_t_e.png\",dpi=300)\n","f9cc4324":"\"\"\"\nFigure data prepare: Bear education building time series & Air Temperature\n\"\"\"\n## create sub datagroup to draw\ndg3_y=datagroup3.loc[datagroup3[\"high\"]==\"Y\"]\ndg3_n=datagroup3.loc[datagroup3[\"high\"]==\"N\"]\n\ndg3_y=dg3_y.set_index(\"timestamp\")\ndg3_y=dg3_y.resample(\"W\").mean()\ndg3_y=dg3_y.reset_index()\n\ndg3_n=dg3_n.set_index(\"timestamp\")\ndg3_n=dg3_n.resample(\"W\").mean()\ndg3_n=dg3_n.reset_index()\n\n\"\"\"\nFigure draw: Bear education building time series & Air Temperature\n\"\"\"\n\n# Color palette\ncolors =  [\"rebeccapurple\", \"crimson\", \"orangered\", \"gold\", \"olivedrab\", \"royalblue\", \"darkcyan\", \"dimgrey\"]\nfig=plt.figure()\nax1=fig.add_subplot(111)\n\nax1.plot(dg3_n[\"timestamp\"],dg3_n[\"elec_avg\"],\n         label=\"Normal consumption buildings mean\",color=colors[1])\nax1.plot(dg3_y[\"timestamp\"],dg3_y[\"elec_avg\"],\n         label=\"High consumption buildings mean\",color=colors[6])\nax1.set_ylabel('Electricity (kWh\/m\u00b2)',fontsize=15)\n\nax2=ax1.twinx()\nax2.plot(dg3_n[\"timestamp\"],dg3_n[\"airTemperature\"],label=\"AirTemp\",color=colors[5])\nax2.set_ylabel('Temperature (degree centigrade)',fontsize=15)\n\n\nplt.title(\"Bear education building time series & Air Temperature\",fontsize=18)\nfig.legend(fontsize=10)\n","8966edb5":"\"\"\"\nFigure data prepare: Electricity Use and Air Temperature vs. Hour \n\"\"\"\n# select\nJan=datagroup3.loc[datagroup3[\"month\"]==1]\nAug=datagroup3.loc[datagroup3[\"month\"]==8]\n\n\"\"\"\nFigure draw: Electricity Use and Air Temperature vs. Hour in January\n\"\"\"\n# resample\ndf=Jan\ntimes = pd.DatetimeIndex(df.timestamp)\nsns.set(rc={'figure.figsize':(12,8)})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nt=times.hour\n\ntemp = pd.DataFrame(df.groupby([t]).mean()[\"elec_avg\"]).reset_index()\nax1=sns.lineplot(data=temp, x=\"timestamp\", y=\"elec_avg\",color=colors[1])\nax1.set_ylabel(\"Electricity Consumption (kWh\/m\u00b2)\",fontsize=15)\nax1.set_xlabel(\"Hour of a Day\",fontsize=15)\nax1.set_title(\"Electricity Use and Air Temperature vs. Hour in January\", fontdict={'size':18})\nax1.set_xticks(tick24)\nax1.set_xticklabels(labels=ticklabel24,fontsize=12)\n#f.legend(fontsize=15)                       \nax1.set_ylim(0.014,0.022) \n\n\ntemp = pd.DataFrame(df.groupby([t]).mean()[\"airTemperature\"]).reset_index()\nax2=ax1.twinx()\nax2=sns.lineplot(data=temp, x=\"timestamp\", y=\"airTemperature\",color=colors[5])\nax2.set_ylabel('Temperature (degree centigrade)',fontsize=15)\nax2.set_ylim(8,22)     \n    \nfig.legend([\"Electricity\",\"Air Temperature\"],fontsize=11,bbox_to_anchor = (0.85,0.78))  \nf.tight_layout()\n# plt.savefig(\"jan.png\",dpi=300)\n\n\"\"\"\nFigure draw: Electricity Use and Air Temperature vs. Hour in August\n\"\"\"\n# resample\ndf=Aug\ntimes = pd.DatetimeIndex(df.timestamp)\nsns.set(rc={'figure.figsize':(12,8)})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nt=times.hour\n\ntemp = pd.DataFrame(df.groupby([t]).mean()[\"elec_avg\"]).reset_index()\nax1=sns.lineplot(data=temp, x=\"timestamp\", y=\"elec_avg\",color=colors[1])\nax1.set_ylabel(\"Electricity Consumption (kWh\/m\u00b2)\",fontsize=15)\nax1.set_xlabel(\"Hour of a Day\",fontsize=15)\nax1.set_title(\"Electricity Use and Air Temperature vs. Hour in August\", fontdict={'size':18})\nax1.set_xticks(tick24)\nax1.set_xticklabels(labels=ticklabel24,fontsize=12)\n#f.legend(fontsize=15) \nax1.set_ylim(0.014,0.022) \n\n\ntemp = pd.DataFrame(df.groupby([t]).mean()[\"airTemperature\"]).reset_index()\nax2=ax1.twinx()\nax2=sns.lineplot(data=temp, x=\"timestamp\", y=\"airTemperature\",color=colors[5])\nax2.set_ylabel('Temperature (degree centigrade)',fontsize=15)\nax2.set_ylim(8,22) \n    \nfig.legend([\"Electricity\",\"Air Temperature\"],fontsize=11,bbox_to_anchor = (0.85,0.78))  \nf.tight_layout()\n# plt.savefig(\"Aug.png\",dpi=300)","02cabfb4":"\"\"\"\nFigure data prepare: Relation between electricity consumption(month average) and number of floors\n\"\"\"\ntemp=pd.pivot_table(datagroup3, index=[\"numberoffloors\"],columns=[\"month\"], values=[\"elec_avg\"],aggfunc=\"mean\")\ntemp.columns =[s1 +'_'+ str(s2) for (s1,s2) in temp.columns.tolist()]\ntemp.reset_index(inplace=True)\ntemp=temp.melt(id_vars=\"numberoffloors\")\ntemp=temp.rename(columns={\"variable\":\"Month\"})\nfor i in range(1,13):\n    temp=temp.replace(\"elec_avg_\"+str(i),i)\n    \n\"\"\"\nFigure draw: Relation between electricity consumption(month average) and number of floors\n\"\"\"\n\nax=sns.scatterplot(temp[\"numberoffloors\"],temp[\"value\"]*1000,hue=temp[\"Month\"],palette=sns.color_palette(\"coolwarm\", 12))\nax.text(x=3,y=55,s=\"correlation coefficient\",fontsize=15)\n\ncor=np.corrcoef(temp.numberoffloors,1000*temp.value)\nax.text(x=3,y=52,s='{:.4f}'.format(cor[0,1]),fontsize=15)\n#\u2018{:.0f}\u2019.format(height)\n\nz2 = np.polyfit(temp.numberoffloors, 1000*temp.value, 1)\np2 = np.poly1d(z2)\nplt.plot(temp.numberoffloors,p2(temp.numberoffloors))\n\nplt.title(\"Relation between electricity consumption(month average) and number of floors\",fontsize=18)\nplt.xlabel(\"Number of floors\",fontsize=15)\nplt.ylabel(\"Electricity consumption (1000 kWh\/m\u00b2)\",fontsize=15)\n#fig.legend()\n#plt.savefig(\"corr_n_e.png\",dpi=300)\n","27c94b2a":"\"\"\"\nFigure draw: EUI for Different Floor Group\n\"\"\"\n# draw the boxplot\ntest=pd.DataFrame({\"building\":datagroup1.building_id,\"eui\":datagroup1[\"sqm_eui\"],\n                   \"floorgroup\":datagroup1[\"floorgroup\"],\"Year\":datagroup1.year})\nfig=plt.figure()\nax1=fig.add_subplot(111)\nsns.boxplot(x=\"floorgroup\",y=\"eui\",data=test,hue=\"Year\",palette=colors)\n## adjust the format\nplt.setp(ax1.get_legend().get_texts(), fontsize='15') # for legend text\nplt.setp(ax1.get_legend().get_title(), fontsize='15') # for legend title\nax1.set_xticklabels(labels=[\"Tall buildings (number of floors>=7)\",\"Low buildings(number of floors<7))\"],fontsize=15)\nax1.set_ylabel(\"EUI (kWh\/m2\/year)\",fontsize=15)\nplt.title(\"EUI for Different Floor Group\",fontsize=18)\nplt.xlabel(\"Floor group of building\",fontsize=15)\n#fig.legend(fontsize=15)\n#plt.savefig(\"floorgroup_bear.png\",dpi=300)","141eae75":"# Import essential libraries and modules\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nfrom matplotlib import pyplot\nimport os\nimport plotly \nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot \ninit_notebook_mode(connected=True)\nfrom IPython.display import Image\nfrom sklearn.neighbors import NearestNeighbors, KNeighborsRegressor\nfrom sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\n# Configure some plot settings\n%config InlineBackend.figure_format = 'retina'\nsns.set()","24aebf60":"metadata_path = \"..\/input\/buildingdatagenomeproject2\/metadata.csv\"\nweather_path = \"..\/input\/buildingdatagenomeproject2\/weather.csv\"\nenergy_path = \"..\/input\/buildingdatagenomeproject2\/electricity.csv\"\nmeta_cols = [\"building_id\", \"site_id\", \"primaryspaceusage\", \"sqm\", \"yearbuilt\", \"numberoffloors\"]\nsite_id = \"Bear\"\n\ndef transform_dataset(metadata_path, weather_path, energy_path, site_id):\n    \n    \"\"\"\n    This functions returns a long form dataset of the chosen site with adjoining metadata, weather, and \n    electricity meter data. \n    \n    metadata_path: path to metadata data set\n    weather_path: path to weather data set\n    energy_path: path to energy data set\n    site_id: selected site id\n    \"\"\"\n    \n    # Load data\n    metadata = pd.read_csv(metadata_path)\n    weather = pd.read_csv(weather_path, parse_dates=[\"timestamp\"])\n    energy = pd.read_csv(energy_path, parse_dates=[\"timestamp\"])\n    \n    # Filter\n    metadata = metadata.loc[metadata.site_id == site_id, meta_cols]\n    weather = weather.loc[weather.site_id == site_id]\n    cols = [\"timestamp\"] + [col for col in energy.columns if site_id in col]\n    energy = energy[cols]\n    \n    # Melt\n    data = energy.melt(id_vars=\"timestamp\", var_name=\"building_id\", value_name=\"meter_reading\")\n    \n    # Merge\n    data = pd.merge(data, metadata, how=\"left\", on=\"building_id\")\n    data = pd.merge(data, weather, how=\"left\", on=[\"timestamp\",\"site_id\"])\n    \n    # Ordinal Encoding of Nominal Categorical Variables\n    encoder = OrdinalEncoder()\n    cols = [\"building_id\",\"site_id\"]\n    encoded_columns = encoder.fit_transform(data[cols])\n    encoded_columns = pd.DataFrame(encoded_columns)\n    encoded_columns.columns = cols\n    data[cols] = encoded_columns\n    \n    # One Hot Encoding of Categories \n    \n    # if cardinality is high\n    # minor = (data.primaryspaceusage.value_counts() < len(data)*0.1)\n    # minor_categories = list(minor[minor].index)\n    # data = data.replace(minor_categories, \"Other\")\n    \n    OH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)  \n    cols = [\"primaryspaceusage\"]\n    OH_cols = OH_encoder.fit_transform(data[cols])\n    OH_cols = pd.DataFrame(OH_cols)\n    OH_cols.columns = OH_encoder.get_feature_names(cols)\n    data = data.drop(cols, axis=1)\n    data = pd.concat([data, OH_cols], axis=1)\n    \n    return data\n\ndata = transform_dataset(metadata_path, weather_path, energy_path, site_id)\ndata.drop(['site_id'], axis=1, inplace=True) \n\n# Preview some columns \ncols_to_show = ['timestamp','building_id', 'meter_reading','sqm', 'numberoffloors', 'yearbuilt','primaryspaceusage_Education','primaryspaceusage_Lodging\/residential','primaryspaceusage_Public services']\ndata[cols_to_show].head()","d5f51264":"df = [] \ncategories = ['primaryspaceusage_Education',\n       'primaryspaceusage_Entertainment\/public assembly',\n       'primaryspaceusage_Lodging\/residential', 'primaryspaceusage_Parking',\n       'primaryspaceusage_Public services',\n       'primaryspaceusage_Technology\/science', 'primaryspaceusage_Utility']\nfor i in categories: \n    df.append(go.Box(y=data[data[i] == 1.0].meter_reading, name=i)) \niplot(df, show_link=False)","03ef0fb7":"data.isna().sum() \/ len(data) * 100","9bdb75aa":"# Columns to drop\nto_drop = [\"cloudCoverage\", \"precipDepth6HR\"]\n\n# Function to Impute NA Values and Drop Columns\ndef na_function(data, to_drop, target = 'meter_reading'):\n\n    data_prep = data.copy()\n    data_prep.drop(to_drop, axis=1, inplace=True)\n\n    # Perform imputation for missing values except 'target'\n\n    to_input = [col for col in data_prep.columns if (data_prep[col].isna().any() and data_prep[col].dtype == 'float64')]\n    to_input.remove(target)\n\n    my_imputer = SimpleImputer()\n    input_df = pd.DataFrame(my_imputer.fit_transform(data_prep[to_input]))\n\n    # Assign column names\n    input_df.columns = to_input\n\n    # Replace columns \n    data_prep[to_input] = input_df\n\n    # Select rows without missing value in 'meter_reading'\n    data_prep.dropna(inplace=True)\n\n    return data_prep\n\ndata_prep = na_function(data, to_drop)","d4a02440":"# Visual Check\ndata_prep.isna().sum()","5ca43b4e":"# Defining a function to train, fit, and validate models\ndef model_train(df, model, target, train_before = '2017-01-01', valid_after = '2017-07-01'):\n\n    # Train set\n    X_train = df[df.timestamp < train_before].set_index(\"timestamp\").drop(target, axis=1)\n    y_train = df[df.timestamp < train_before].set_index(\"timestamp\")[target]\n\n    # Validation set\n    X_val = df[df.timestamp >= valid_after].set_index(\"timestamp\").drop(target, axis=1)\n    y_val = df[df.timestamp >= valid_after].set_index(\"timestamp\")[target]\n\n    model.fit(X_train, y_train)\n\n    # Compute loss metric\n    preds = model.predict(X_val)\n    score = mean_squared_error(y_val, preds)\n    print(\"MSE: \", score)\n    \n# Define function to show prediction from model\ndef plot_errors(df, model, plot_intervals=False, plot_anomalies=False, target = 'meter_reading', train_before = '2017-01-01', valid_after = '2017-07-01'):\n    \n    # Train set\n    X_train = df[df.timestamp < train_before].set_index(\"timestamp\").drop(target, axis=1)\n    y_train = df[df.timestamp < train_before].set_index(\"timestamp\")[target]\n\n    # Validation set\n    X_val = df[df.timestamp >= valid_after].set_index(\"timestamp\").drop(target, axis=1)\n    y_val = df[df.timestamp >= valid_after].set_index(\"timestamp\")[target]\n    \n    preds = pd.DataFrame({\"preds\": model.predict(X_val)}, index=y_val.index)\n    preds_freq = preds.resample('D').mean()\n    y_val_freq = y_val.resample('D').mean()\n    plt.figure(figsize=(15,5))\n    plt.title(\"Prediction and Observed Electricity Reading\")\n    plt.plot(preds_freq, \"g\", label=\"Predicted\")\n\n    # Plot confidence intervals for smoothed values\n    if plot_intervals:\n        mae = mean_absolute_error(y_val_freq, preds_freq)\n        deviation = np.std(y_val_freq.values - preds_freq.values)\n        lower_bond = preds_freq - (mae + deviation*1.96)\n        upper_bond = preds_freq + (mae + deviation*1.96)\n        plt.plot(upper_bond, \"r--\", label=\"Upper Bond \/ Lower Bond\")\n        plt.plot(lower_bond, \"r--\")\n        \n    plt.plot(y_val_freq, label=\"Actual\")\n    plt.legend(loc=\"upper left\")\n    plt.grid(True)\n\n# Define function to show feature importance\ndef importance_plot(model, df, target='meter_reading'):\n    model_importance = model.feature_importances_\n    temp = df.copy()\n    columns = temp.set_index(\"timestamp\").drop(target, axis=1).columns\n    importance_df = pd.DataFrame({'importance': model_importance, 'columns': columns})\n    importance_df.sort_values('importance',inplace=True)\n    axes = importance_df.plot(kind='barh',y='importance',x='columns',color='r', xlabel='')","72725097":"def target_encode(df, target, category, split = 'timeseries', train_before = '2017-01-01', valid_after = '2017-07-01'):\n    \n    if split == 'random':\n        X = df.copy()\n        y = X.pop(target)\n\n        X_train = X.sample(frac=0.25)\n        y_train = y[X_train.index]\n        X_val = X.drop(X_train.index)\n        y_val = y[X_valid.index]\n        \n    else: \n    # Train set\n        X_train = df[df.timestamp < train_before].set_index(\"timestamp\").drop(target, axis=1)\n        y_train = df[df.timestamp < train_before].set_index(\"timestamp\")[target]\n\n        # Validation set\n        X_val = df[df.timestamp >= valid_after].set_index(\"timestamp\").drop(target, axis=1)\n        y_val = df[df.timestamp >= valid_after].set_index(\"timestamp\")[target]\n\n    from category_encoders import MEstimateEncoder\n    # There are a large number of categories, so we increase smoothing\n    \n    encoder = MEstimateEncoder(cols=category, m=4.0)\n    encoder.fit(X_train, y_train)\n    X_train = encoder.transform(X_train)\n    X_val = encoder.transform(X_val)\n    \n    # Create new dataset\n    X_train[target] = y_train\n    X_val[target] = y_val\n    df1 = pd.concat([X_train, X_val]).reset_index()\n    \n    return df1","690714c2":"def create_time_features(df):\n    # Time features\n    df[\"month\"] = df.timestamp.dt.month\n    df[\"day\"] = df.timestamp.dt.day\n    df[\"weekday\"] = df.timestamp.dt.weekday\n    df[\"hour\"] = df.timestamp.dt.hour\n    df[\"is_weekend\"] = [weekday in [5,6] for weekday in df.weekday]\n    return df","113d9e4b":"data_prep_enc = target_encode(data_prep, 'meter_reading','building_id')","458702bc":"data_prep_enc = create_time_features(data_prep_enc)","6d44f7fd":"# Target distribution\nsns.kdeplot(data_prep_enc['meter_reading'], fill=True, common_norm=False, color=\"blue\", alpha=.5, linewidth=0)\n# Encoded distribution\nsns.kdeplot(data_prep_enc['building_id'], fill=True, common_norm=False, color=\"crimson\", alpha=.5, linewidth=0)","30e06ddb":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_log_error, mean_squared_error, mean_absolute_error\n\n# Specifying our model\nrf = RandomForestRegressor(n_estimators = 100, max_depth = 10, random_state = 1)\n\n# Evaluate Model\nmodel_train(data_prep_enc, rf, target = 'meter_reading')","73d849f8":"plot_errors(data_prep_enc, rf, plot_intervals=True)","ed7ed5d3":"importance_plot(rf, data_prep_enc)","5c46098f":"from xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_log_error, mean_squared_error, mean_absolute_error\n\n# Specifying our model\nxgb = XGBRegressor(n_estimators=100, learning_rate=0.1, n_jobs=4, random_state=1, objective=\"reg:squarederror\")\n\n# Evaluate Model\nmodel_train(data_prep_enc, xgb, target = 'meter_reading')","30ed635d":"plot_errors(data_prep_enc, xgb, plot_intervals=True)","766dfeee":"importance_plot(xgb, data_prep_enc)","9ffe26aa":"import lightgbm as lgb\nfrom sklearn.metrics import mean_squared_log_error, mean_squared_error, mean_absolute_error\n\n# Specifying our model\nlgbm = lgb.LGBMRegressor(n_estimators = 100, learning_rate=0.1, random_state=1)\n\n# Evaluate Model\nmodel_train(data_prep_enc, lgbm, target = 'meter_reading')","7207d660":"plot_errors(data_prep_enc, lgbm, plot_intervals=True)","37e16604":"importance_plot(lgbm, data_prep_enc)","48bbc96a":"from sklearn.inspection import plot_partial_dependence\nfrom sklearn.inspection import partial_dependence\n\n# Train set\nX_train = data_prep_enc[data_prep_enc.timestamp < '2017-01-01'].set_index(\"timestamp\").drop('meter_reading', axis=1)\ny_train = data_prep_enc[data_prep_enc.timestamp < '2017-01-01'].set_index(\"timestamp\")['meter_reading']\n\n# Validation set\nX_val = data_prep_enc[data_prep_enc.timestamp < '2017-07-01'].set_index(\"timestamp\").drop('meter_reading', axis=1)\ny_val = data_prep_enc[data_prep_enc.timestamp < '2017-07-01'].set_index(\"timestamp\")['meter_reading']\n\n\n# LightGBM Model is chosen because it is the most lightweight and gives comparable results to XGBoost\nlgbm = lgb.LGBMRegressor(n_estimators = 100, learning_rate=0.1, random_state=1)\n\n# Select Reduced Feature Set Based on Most Important Features \nX_train_reduced = X_train.loc[:,['sqm','airTemperature','building_id','yearbuilt','seaLvlPressure']]\nX_val_reduced = X_val.loc[:,['sqm','airTemperature','building_id','yearbuilt','seaLvlPressure']]\n\nlgbm.fit(X_train_reduced, y_train)","9a0b6661":"with plt.style.context('dark_background'):\n    plot_partial_dependence(lgbm, X_val_reduced, features = ['sqm'], percentiles = [0,1]);","dee0de15":"with plt.style.context('dark_background'):\n    plot_partial_dependence(lgbm, X_val_reduced, features = ['airTemperature'], percentiles = [0,1]);","a1bbc39f":"with plt.style.context('dark_background'):\n    plot_partial_dependence(lgbm, X_val_reduced, features = ['yearbuilt'], percentiles = [0,1]);","989afb19":"with plt.style.context('dark_background'):\n    plot_partial_dependence(lgbm, X_val_reduced, features = ['seaLvlPressure'], percentiles = [0,1]);","eb1a91ba":"features = ['sqm','airTemperature','building_id','yearbuilt','seaLvlPressure']","485ec30f":"airseadisp = plot_partial_dependence(lgbm, X_val_reduced, features = [(1,4)], percentiles = [0,1],\n                       grid_resolution = 20)","75ed7565":"with plt.style.context('dark_background'):\n    fig, ax = plt.subplots(figsize=(12, 10))\n    airseadisp.plot(ax = ax)","fd37d653":"with plt.style.context('dark_background'):\n    fig, ax = plt.subplots(figsize=(12, 10))\n    airseadisp.plot(ax = ax)\n    plt.scatter(X_val_reduced['airTemperature'],X_val_reduced['seaLvlPressure'], c = 'white',s = 0.5);","fa0ae741":"### 2. Benchmarking Building Energy Performance\n\nTo minimize the impact of buildings on the environment, it is essential to measure energy consumption throughout the life cycle of the building in order to implement the energy efficiency measures (Dakwale and Ralegaonkar, 2012). After quantifying the building carbon emissions and energy consumptions, the next step is to establish an energy benchmark to assess and improve the building's energy efficiency. Benchmarking is a practice of comparing the measured performance of a device, process, facility, or organization to itself, its peers, or established norms, with the goal of informing and motivating performance improvement. Benchmarking is useful for state and local government property owners and facility operators, managers, and designers. It facilitates energy accounting, comparing a facility's energy use to similar facilities to assess opportunities for improvement, and quantifying\/verifying energy savings (Building Energy Use Benchmarking). \n\nThe benchmark we used in this study to assess building energy efficiency is Energy Usage Index (EUI). EUI is measured by the total electricity used within a building in a year, expressed as kilowatt hour(kWh),per gross floor area(m\u00b2)(BCA Building Energy Benchmarking Report 2020).The median EUI in the US is around 266 kWh\/m2\/year and this value has been used as the benchmark for building energy efficiency improvement. \n    \nBelow figure shows the EUI of all the buildings in the bear site for 2016 and 2017. The buildings were divided into two consumption groups, the high consumption group includes buildings with EUI that is higher than the baseline value of 266 kWh\/m2\/year, and the low consumption group includes buildings with EUI that is lower than the baseline. The result also shows that the average EUI for high consumption buildings can be doubled from the baseline, and low consumption buildings\u2019 EUI can be lower than 100 kWh\/m2\/year which is less than half of the baseline value. \n","101b65ae":"As seen from the plot above, electricity consumption seems to be primarily influenced by `airTemperature` (most of the variation is parallel to airTemperature and occurs as we traverse the x-axis). ","d2cdd468":"Overall our model reports an MSE of 1573.07 which translates to an error of approximately 38 kWh per hourly reading. Given the diverse range of reading values, our model does a reasonable job of predicting building energy consumption. We take a look at the daily aggregated predictions to see where the model under performs. The model is able to keep up with the capture daily fluctuation and trends. ","98cc6c1a":"### Factor 2: Weather\nWeather conditions are important factors to determine building energy usage. These take many forms, such as temperature (Qinglong Meng and Chengyan Xiong,2020). We have plotted the air temperature and their respective electricity consumption into a scatterplot as shown. The different dots represent the different months. The correlation coefficient is 0.3998\uff0cshowing electricity consumption varies greatly by month for different air temperatures. In winter months such as January and December, the air temperature is low and the electricity consumption is relatively low. In summer months such as July and August, the air temperature is high and the electricity consumption is relatively high.","1489e32e":"The partial dependence plot for `airTemperature` sseems to indicate an almost linear and monotonic relationship between building electricity consumption and airTemperature. The findings make intuitive sense as buildings are expected to spend more energy on cooling and ventilation when temperatures are high. While unsurprising, the findings underline the importance of passive cooling and climate sensitive strategies towards energy cost-efficiency. ","7a782474":"Datagroup3 combines weather data and electricity meter reading. This datagroup is created to draw figures showing the relationship between electricity and air temperature. ","fac8424e":"---\n\n## References\n<div id=\"Section5\">\n\nAksoezen, M., Daniel, M., Hassler, U., & Kohler, N. (2015). Building age as an indicator for energy consumption. Energy and Buildings, 87, 74\u201386. https:\/\/doi.org\/10.1016\/j.enbuild.2014.10.074 BCA Building Energy Benchmarking Report 2020. (n.d.).\n\nBrander, M. (2012). Greenhouse Gases, CO2, CO2e, and Carbon: What Do All These Terms Mean? 3. Building Energy Use Benchmarking. (n.d.). Energy.Gov. Retrieved October 12, 2021, from https:\/\/www.energy.gov\/eere\/slsc\/building-energy-use-benchmarking\n\nComputers in the classroom. (n.d.). Retrieved November 2, 2021, from https:\/\/www.londontfe.com\/blog\/details\/82\n\nDakwale, V. A., & Ralegaonkar, R. V. (2012). Review of carbon emission through buildings: Threats, causes and solution. International Journal of Low-Carbon Technologies, 7(2), 143\u2013148. https:\/\/doi.org\/10.1093\/ijlct\/ctr032\n\nFirst in class: How schools and universities are practising what they preach on carbon emissions. (2019, May 14). UNEP. http:\/\/www.unep.org\/news-and-stories\/story\/first-class-how-schools-and-universities-are-practising-what-they-preach\n\nHelmers, E., Chang, C. C., & Dauwels, J. (2021). Carbon footprinting of universities worldwide: Part I\u2014objective comparison by standardized metrics. Environmental Sciences Europe, 33(1), 30. https:\/\/doi.org\/10.1186\/s12302-021-00454-6\n\nLouren\u00e7o, P., Pinheiro, M. D., & Heitor, T. (2014). From indicators to strategies: Key Performance Strategies for sustainable energy use in Portuguese school buildings. Energy and Buildings, 85, 212\u2013224. https:\/\/doi.org\/10.1016\/j.enbuild.2014.09.025\n\nOdell, P., Rauland, V., & Murcia, K. (2020). Schools: An Untapped Opportunity for a Carbon Neutral Future. Sustainability, 13(1), 46. https:\/\/doi.org\/10.3390\/su13010046 Ouf, M. M., & Issa, M. H. (2017). Energy consumption analysis of school buildings in Manitoba, Canada. International Journal of Sustainable Built Environment, 6(2), 359\u2013371. https:\/\/doi.org\/10.1016\/j.ijsbe.2017.05.003\n\nSustainable Development Goals. (n.d.). United Nations Development Programme. Retrieved October 10, 2021, from https:\/\/www.undp.org\/sustainable-development-goals\n\nUS EPA, O. (2015, July 27). GHG Emission Factors Hub [Overviews and Factsheets]. https:\/\/www.epa.gov\/climateleadership\/ghg-emission-factors-hub\n\nUSA. (n.d.). Retrieved October 10, 2021, from https:\/\/climateactiontracker.org\/countries\/usa\/\n\nWhat is the Carbon Footprint of a Building? | Thought Leadership. (2020, January 24). HMC Architects. https:\/\/hmcarchitects.com\/news\/what-is-the-carbon-footprint-of-a-building-2019-01-24\/ Ya\u00f1ez, P., Sinha, A., & V\u00e1squez, M. (2019). Carbon Footprint Estimation in a University Campus: Evaluation and Insights. Sustainability, 12(1), 181. https:\/\/doi.org\/10.3390\/su12010181\n\nQing,l. M. & Cheng,y.X. (2020).Change-point multivariable quantile regression to explore effect of weather variables on building energy consumption and estimate base temperature range. https:\/\/www.sciencedirect.com\/science\/article\/abs\/pii\/S2210670719311552\n\nHai-xiang Zhao & Fr\u00e9d\u00e9ricMagoul\u00e8s. (2012).A review on the prediction of building energy consumption. https:\/\/www.sciencedirect.com\/science\/article\/abs\/pii\/S1364032112001438\n\nLi, M.C., Guo, J., Shi, J.. et al. Applicability assessment of using heating\/cooling eagle days to analyze building energy consumption changes[J]. Advances in Climate Change Research,2013,9(1):43-48\n\nWan K K W,Li D H W,Liu D,et al.Future trends of building heating and cooling loads and energy consumption in different climates[J].Building and Environment,2011,46:223-234\n\nHazem, E.,& Khaled, S. S. (2015). Energy-efficient Tall buildings design strategies: A holistic approach. https:\/\/www.sciencedirect.com\/science\/article\/pii\/S1876610215015507\/pdf?md5=7462d879982a2b8ff4f19b2acec0f3f1&pid=1-s2.0-S1876610215015507-main.pdf\n\nDon Prowler, FAIA. (2016). Sun Control And Shading Devices.https:\/\/www.wbdg.org\/resources\/sun-control-and-shading-devices\n    ","22f65d23":"### Loading and Preparing Dataset\nWe begin by joining hourly electricity reading, weather, and meta data. The site (nicknamed \"Bear\") which consists of a cluster of education buildings at the University of California, Berkeley, will be the focus of this analysis.\n\nData preprocessing steps and workflows (with minor adjustments to categorical one-hot encoding) are adapted from [Preprocessing 1 Notebook](https:\/\/www.kaggle.com\/ponybiam\/preprocessing-1-data-transformation\/) by [Pony Biam](https:\/\/www.kaggle.com\/ponybiam) and [Clayton Miller](https:\/\/www.kaggle.com\/claytonmiller). ","14a8178e":"## Exploratory Data Analysis (EDA)\n<div id=\"Section2\">\n    \n---\n\nEDA is a fundamental and iterative phase of our project. We employ EDA to identify features of importance and interesting sites to focus on. ","b1f9de02":"## Context\n<div id=\"Section1\">\n    \n\nGroup 4 Energy Consultants have been engaged by the U.S Government to study the carbon footprint of educational buildings in the U.S. with the targets of 1) promoting understanding of building carbon emission, factors affecting energy usage, 2) identifying recommendations to reduce educational building\u2019s energy consumption and thereby reducing the building carbon emission, and 3) Forecasting the energy demand in the further for budget planning.\n    \n    \nClimate change is at the forefront of a global agenda with world leaders pledged tougher new carbon emission reduction targets, stepping up the fight to limit the temperature rise to 1.5 degrees above pre-industrial levels, instead of the 3 degrees the planet is currently headed towards. The United States is also setting a new target of reducing its net greenhouse gas emissions by 50-52 percent below 2005 levels in 2030 (USA). And educational institutions, as the innovation drivers in science and technology worldwide, should be leading the transformation towards a carbon\u2013neutral society and many have indeed picked up the challenge (Helmers et al., 2021). \u201cEducational institutions going carbon-neutral provides a great opportunity to demystify carbon neutrality for students and can give them a practical experience through inclusion in curricula and operations of the schools.\u201d said Niklas Hagelberg, coordinator of the Climate Change Programme at UN Environment(First in Class, 2019). The above mentioned are also in line with UN Sustainable Development Goal 13\u2019s targets of integrating climate change measures into national policies, strategies, and planning (Sustainable Development Goals) and raising institutions\u2019 and humans\u00b4 awareness on mitigating climate change, as well as enhancing their ability to do so (Ya\u00f1ez et al., 2019).\n    \n\nTo address our clients\u2019needs. We have proposed following strategies:\n    \n1) Quantifying and documenting the building carbon emissions\/energy consumption to estimate the contributions to global climate change\n    \n2) Benchmarking building energy performance for continuous energy efficiency improvement\n    \n3) Predicting energy consumption by Machine Learning for budget planning\n    ","4be8ed77":"    \nEducational building age can have a statistically significant effect on their energy consumption, with newer schools consuming less gas but more electricity than the older ones (Ouf and Issa, 2017). And also, the increase of complexity in educational buildings to ensure for occupants\u2019 comfort and social and functional demands are changing energy consumption patterns. Energy consumption increased in schools can be attributed to the development and increased use of technology in classrooms (Odell et al., 2020), such as more intensive use of  IT equipment as pedagogical tools. The equipment and lighting in the school offices also accounts for 46% of total electricity use in the American school (Louren\u00e7o et al., 2014). There are some other possible attributes for the increasing energy consumption such as the change of the building ventilation mode from natural ventilation to mechanically ventilation or air-conditioning.\n\nThe histogram below shows the distribution of the buildings constructed in different years in bear site. Majority of the buildings were built in the 20th century and around 10% of the buildings were built after that. The oldest buildings were built in 1907 and the most recent ones in 2012. The distribution showed that the buildings built before 1990 account for approximately 85% of the total. The early 1990s marked the beginning of modern media technology, presentation software and computer-based technology becoming widely available to students (Computers in the Classroom). Hence, we have further segregated the buildings into 3 age groups namely old buildings (before 1950), middle-age buildings (1950-1990), and new buildings for further analysis (after 1990).\n    \n\n","12d8c1e1":"| Primary Use | Counts | Percentage |\n| --- | --- | --- |\n| Education | 1,175,448 | 72.83% |\n| Entertainment\/public assembly | 157,896 | 9.78% |\n| Public services | 105,264 | 6.52% |\n| Lodging\/residential | 70,176 | 4.35% |\n| Parking | 52,632 | 3.26% |\n| Technology\/science | 35,088 | 2.17% |\n| Utility | 17,544 | 1.09% |","1ece3dae":"According to the fire code of architectural design in the United States, 24.6m or more than 7 floors are considered high-rise buildings (tall buildings). Hence, we have further segregated the buildings into two numbers of floors groups namely tall buildings(more than 7 floors), and low buildings (lower than 7 floors) for further analysis.\n\nWe use the boxplot to show the distribution of the 2 number of floors groups in terms of EUI for both year 2016 and 2017. The \u201ctall building\u201d group accounts for the highest energy consumption level. And the highest EUI of the tall building group is almost four times the \u201clow building\u201d group. The data also shows a significant difference between median annual EUI in tall buildings in comparison with low buildings.\n\n","1c84dc4f":"### Factor 3: Number of Floors \nWe used the different dots to represent buildings from the different numbers of floors and plotted their monthly electricity consumption. The correlation coefficient is 0.6548 showing a significant positive correlation.The higher the number of floors, the higher the average monthly consumption of electricity.","00fb9fe2":"### Import Packages\nThis section outlines the data loading and preprocessing steps. We begin by importing essential data science and preprocessing libraries.","5f18085f":"As seen below, the partial dependence plot of `sqm` shows that electricity meter reading rises rapidly close to the 15,000 sqm mark. In building and construction, there is a point where construction cost starts to exceed economic benefits as a building grows taller. In other words, at this 'cut-off' point, the cost of transporting building materials vertically starts to become so high that it exceeds the value from the space constructed. This phenomenon has been well discussed in the context of skyscrapers whose existence defy economic sensability. \n\nIn the context of electricity consumption, our finding could potentially reveal the 'cut-off' points for electricity consumption. Drawing a parallel to our building example, buildings of a certain size achieve larger economies of scale which might warrant a different configuration of electrical systems and capacities. In other words, comparing a building of size 15,500 and 14,500, despite having only a slight increase in floorspace, the former takes up more than 3 times the energy of the latter. In our plot, 'cut-offs' are revealed to be near the 15,000 sqm and 25,000 sqm mark. To reduce building energy consumption, policies can potentially look to ensure that buildings do not exceed these cut-off limitations. ","178756cd":"### Factors Affecting Building Energy Consumption\n\nBuildings with EUI higher than the baseline value shall be considered as low-performing buildings and further investigation on the building energy consumption is needed. However, energy consumption is the dependent variable, and there is a set of variables which are influencing: volume, gross floor area, footprint, number of storeys, number of persons, owner, fa\u00e7ade area, roof area, construction year, height, and gross residential area (Aksoezen et al., 2015). This study has identified a few key factors affecting the building energy consumption including building age, weather and number of floors. \n\n    \n\n","d40f7972":"First, due to the lack of EUI data for Bear buildings, we calculate EUI for every building in BDG2 in 2016 and 2017. The figure below illustrates the difference between original EUI in BDG2 and calculated one. ","e8cca65b":"## Predictive Modelling\n<div id=\"Section3\">\n    \nIn this section, we compare the effectiveness of various machine learning methods to measure feature importance. We consider three models: 1) Random Forest, 2) XGBoost, and 3) LightGBM. \n    \n- Random Forest Regressor\n- XGBoost\n- LightGBM\n    ","288c4050":"Another interesting observation is the presence of heteroskedasticity for `seaLvlPressure`. The range of values for sea level pressure is much larger at lower air temperatures as compared to higher air temperature. This indicates that sea level pressure might be heavily influenced by air temperature. This observation makes intuitive sense as higher temperatures are likely to coincide with sunny weather (and higher sea level pressure) and higher building energy consumption. Looking at this plot, we see that the dip in energy consumption for the single `seaLvlPressure` partial dependent plot might be an artifact of data distribution where there are simply more records of lower energy consumption compared to higher energy consumption at the 1010 mbar - 1020 mbar interval. ","cbc17c6f":"### Data Preparation\n\nThis section is to prepare data for following section. ","1398626d":"Before fitting the model, it is necessary to check for missing values. As seen from the array below, some variables such as `precipDepth6HR` and `cloudCoverage` have a high percentage of missing values. Although there are a large number of missing values for `meter_reading`, it serves as our response variable, hence the rows with missing readings are dropped. ","48c9dfa5":"---\n\n## Conclusion\n<div id=\"Section4\">\n    \nIn conclusion,monitoring and benchmarking the energy performance of existing buildings is crucial to ensuring the building energy efficiency,especially when these benchmarks can be used as design targets for new buildings or existing building going for renovation (Ouf and Issa,2017).\n    \nJointly, our exploratory data analysis and machine learning efforts have revealed several key factors important for building energy consumption: 1) Floor Area (sqm), 2) Air Temperature (airTemp), 3) Building Age (yearbuilt), and 4) Building ID (building_id). Building on the model identified features, we deep-dived into each of these variables through a partial dependent plot to examine cut-offs and relationship with energy consumption. \n    \nTo reduce the energy consumption thereby reducing the building carbon emissions and operating costs, below measures are recommended:\n    \n1. Integrated energy management and control systems e.g. BMS, plug load management system (to holistically predict and model energy consumption)\n2. Introduce building floor space cut-offs for new constructions\n3. Promote the adoption of climate friendly design to deal with rising temperatures\n    \nMissing values remain the largest barrier for our analysis. We found that most buildings lack system level detailed data; Because data for each system was not metered separately. But the system composition has a great influence on the energy consumption of a building. It is critical to collect and monitor the energy consumption data for individual system. Also, most of the buildings have some missing data which is another barrier to this study, there seems no pattern  to which meters might lose data during what time periods. This leads to the inaccuracy of our analysis.\n    \nFuture research opportunities include conducting dimentionality reduction on weather variables and applying the same workflow to other sites and primary use types. ","fa8d47a1":"The LightGBM model trains within seconds despite the default paramters of `max_depth=-1` which allows the tree to grow to its maximum depth. With target encoding and the inclusion of time features, default parameters returns a MSE of 1573.37 which is comparable to our XGBoost model. The advantage of the LightGBM model is that it achieved comparable error at a fraction of the training time for other machine learning methods. ","f8c47c89":"Last but not least, `seaLvlPressure`  which is important for weather and water conditions. High sea level pressures allow more gases to be dissolved in water bodies. In other words, high sea level pressures are associated with more instances of sunny and clear weather while lower sea level pressures are associated with cloudy and rainy weather conditions. \n\nFrom our chart, we see that as sea level pressure rises (and weather becomes more sunny), energy consumption rises. On the other hand, at low sea level pressure (rainy\/cloudy weather) buildings seem to consume less electricity. This makes intuitive sense but the relationship unlike `airTemperature` is not monotonic. Given that weather features occur simultaneously, there might be feature interaction between these two variables. To better understand their relationship, we look at a pair-wise partial dependence plot for `airTemperature` and `seaLvlPressure`. ","22d2d178":"Analyzing the reasons for the peaks, the temperature is the main factor influencing the air conditioning load. Heating in winter and air conditioning in summer energy consumption accounts for a large proportion of building energy consumption (Wenyuan Gao and Lianzhi wei, 2003).\n\nHence, we decided to further investigate the energy consumptions for individual buildings to explore the specific reason. We have chosen one building and plotted their hourly energy consumption in two different weather. During buildings'main electricity consumption hours(which are around 6 am-8 pm), the electricity consumption shows a similar regression pattern in the two weather. However, the maximum value of electricity consumption in August is higher than the maximum value in January of 0.001kwh\/m2. What's more, the change in electricity consumption in August is more sensitive to the change in air temperature.","5ee842db":"### Model Evaluation and Comparison\n\nUltimately the XGBoost model produced the lowest error and LightGBM model was the most efficient. It is recommended to go for the LightGBM approach to finetune model hyperparamters due to its training efficiency. The goal of this notebook was not to optimise the machine learning model but to examine factors driving energy consumption. \n\nPrior to conducting this study, it was not clear whether model choice affected feature importance. According to our implementation of three models, all three methods (Random Forest Regression, XGBoost, and LightGBM) returned variegated relative feature importance. Our results indicate that the choice of method does have a huge impact on feature importance. \n\nHere, we look rank the predictors of interest by order of importance. We look specifically at built environment and environmental variables (we do not include time features). Yet, it is important to note the importance of time features to predict model performance and it may have implications for energy scheduling.\n\n\n\n| Model         | \\#1 Important Factor | \\#2 Important Factor | \\#3 Important Factor | \\#4 Important Factor | \\#5 Important Factor |\n|---------------|----------------------|----------------------|-----------------------|----------------------|----------------------|\n| Random Forest | Building ID.         | Air Temperature      | Year Built            | No. of Floors        | SQM.                 |\n| XGBoost       | Building ID.         | Air Temperature      | SQM.                  | No. of Floors        | Year Built.          |\n| LightGBM      | Building ID          | Air Temperature      | SQM.                  | Year Built           | No. of Floors        |\n\n\nOverall, it seems like No. of Floors, Year Built, SQM, Building ID, and Air Temperature are the factors that are consistently rated as important for electricity meter prediction. \n\nPotential recommendations include the designing of compact and mixed-use buildings that have reduced floor area and no. of floors. The implementation of passive heating and cooling systems could also help to alleviate the effects of building energy consumption in response to air temperature. Last but not least, In addition, energy retrofitting and maintenance works should be carried out regularly for older buildings as they seem to consume more energy. ","3e52fe3d":"### Feature Engineering\n\nWe have several high cardinality variables in our dataset. These include `building_id` which has 96 distinct values. To smooth representation we implement target encoding. \n","b3d4c432":"        \nHowever, the result will change depending on the metric used to report on a building's carbon footprint. In the figure below we have normalised the building carbon emissions per floor area to give standardized metrics for comparison. And the result shows a more normalised distribution pattern which indicates that some buildings with higher carbon emission might be due to the larger gross floor area.\n    ","967890cf":"Next, we examine the features importance to identify the features relevant for building energy prediction. As seen from our plot on feature importance, similar to the Random Forest model, building id seems to be the most important predictor, followed by air temperature, hour, weekday, and month. Once again, weather variables did not have a huge impact. ","50f9efc5":"### Model 2: XGBoost\nNext, we implement an XGBRegressor model and examine feature importance compared to RandomForest.","f12e9851":"### Model 3: LightGBM\nLight Gradient Boosting Model employs gradient based side sampling and exclusive feature bundling to improve optimisation efficiency. Gradient based side sampling helps to increase information gain by focusing learning on variables with larger gradients. On the other hand, exclusive feature bundling works to efficiently identify mutually exclusive variables (variables that do not simultaneously record zero) and computes a graph-based conflict metric (fraction of variables with non-zero values) to optimise feature elimination. Holistically, these two changes help to optimise training efficiency. ","812611ec":"### Site Description: BEAR\n\nAmong 10 building sites in the dataset, we choose Bear as our study target. The reason behind is: \n\na) Bear site is located at University of California, Berkeley, one of the well-respected universities in the US, and hence data at this Bear site can be trusted.\n\nb) Bear site is mostly made up of educational buildings, which serves our goal. The table below illustrated the percentage of different buildings at Bear site. 67 education buildings accounting for 72.83% at Bear site, and thus this site is appropriate for our client and goal. \n\nc) The lack of metadata at Bear site is relatively small compared to other 9 sites, which enables us to conduct exploratory analysis on year of built, number of floors, etc.","419cc6f0":"We try to analyze the possible reasons based on some literature to explain this phenomenon. Tall buildings are more exposed to solar radiation, hot in summer and cold in winter(Hazem et al., 2015). More electricity is consumed in summer in tall buildings than in low buildings.\n\nOne of the energy efficiency improvement measures that can be adopted for the schools is using shading devices and glazing configurations to avoid exposure to solar radiation (Don Prowler, 2016).\n\n<br> <\/br>\n\n---","5ef54cb6":"---\n[Mean Squared Error](http:\/\/scikit-learn.org\/stable\/modules\/model_evaluation.html#mean-squared-error): is a commonly used metric that gives a higher penalty to large errors and vice versa, $[0, +\\infty)$\n\n$MSE = \\frac{1}{n}\\sum\\limits_{i=1}^{n} (y_i - \\hat{y}_i)^2$\n\n\nOverall our model reports an MSE of 1721.92 which translates to an error of approximately 42 kWh per hourly reading. Given the diverse range of reading values, our model does a reasonable job of predicting building energy consumption. We take a look at the daily aggregated predictions to see where the model under performs. The model is able to keep up with the capture daily fluctuation and trends. However, towards the period from December 2017 onwards it starts to over-estimate energy consumption. This might be attributed to unforeseen decreases in energy usage for the period. ","a2885b47":"## Machine Learning\n\nAs mentioned in building energy and sustainability discourse, one of the first steps to achieveing energy-efficient buildings is to model building energy consumption. By modelling building energy consumption, we are able to optimise and understand how buildings employ energy throughout their life cycle. Subsequently, traditional ways of estimating building energy consumption has relied on (1) domain expertise or a sum-of-parts approach where mechanical systems, cooling, air-conditioning, electrical, and water systems are analyzed to come up with estimates, or (2) complex statistical models to estimate energy consumption from sparse datasets. The advent of new urban data streams such as BDG2 dataset provides opportunities to explore machine learning methods to estimate and model building energy consumption. Our goal is to examine the accuracy of models to model and understand building energy consumption over its life cycle, and to understand the factors contributing to building energy consumption. A corollary goal is to examine whether different machine learning algorithms are consistent in their explanation of feature importance in the BDG2 dataset. Our initial hypothesis is that different machine learning methods should not result in varying feature importance. ","b4ecf0fd":"### Prepare Workspace\nWe start by preparing our workspace, defining key functions (model training and plotting) and dealing with missing values. \n","b46b4c8f":"For this phenomenon, we try to analyze the possible reasons based on some literature. Because buildings are exposed to the environment(Lazos and Sproul, 2014). , firstly the temperature inside the house is susceptible to the influence of air temperature. Then the indoor temperature will impact heating and air conditioning energy consumption.\n\nWe have further divided the buildings into two consumption groups namely the high consumption group and normal consumption group to analyze. The line graph shows the trend change of electricity consumption of the building under different months in the bear site. The high and the low energy consumption buildings follow the same trend and similar regression pattern that the energy consumption shows a minimum in January and a maximum in July, and with shape rate of change of electricity consumption in peaks.","58a8b014":"The plot on `yearbuilt` reveals a complex and non-linear relationship between building energy consumption and building age. Arguably, the age of buildings and their corresponding building infrastructure depend largely on the contextual factors of their time. For example, the 1930s corresponded to the beginnings of the early beginnings of the industry revolution and attributed as a period in American history as the rise of innovation and standard of living for the middle-class in America. The increased adoption in new technologies might have resulted in a short dip in energy consumption for buildings over the period from 1930s - 1950s. However, as society got used to the increased efficiencies of technology, this increased demand and consumption (Jevon's Paradox), resulting in subsequent steady increase in energy consumption over the following decades. Indeed, this interpretation draws some support from studies conducted in the 1980s - 1990s by urban economists Daniel Khazzoom, Leonard Brookes, and Harry Saunders where they argued that:\n\n- Increased energy efficiency makes the use of energy relatively cheaper, thus encouraging increased use (the direct rebound effect)\n- Increased energy efficiency increases real incomes and leads to increased economic growth, which pulls up energy use for the whole economy.","3aadb180":"## Pairwise Partial Dependence Plots for Important Features\n\nPairwise PDPs allow us to examine feature interaction among weather variables. It also provides a way of examining the particular distribution of data instances contributing to the observed relationship by examining the plot of data points in the sample space. For example, a positive relationship between height and weight can be attributed to either a lot of individuals with high weight + height OR a lot of individuals with low weight + height. A pairwise PDP allows us to visualise which scenario seems more plausible. ","d094a338":"Next, we examine the distribution of electricity meter readings across primary usage types. As seen from the visualisation, there are a large number of education buildings with energy readings above the benchmark. ","0195525b":"The prediction patterns follow a similar pattern with the XGBoost and RandomForestRegressor methods. Building id, hour, month, air temperature and sqm are returned as the most important variables. ","2262ce2d":"### 1. Quantifying Building Carbon Footprint\n\n    \nAll buildings have a carbon footprint. A building\u2019s carbon footprint is defined as the amount of CO2 it produces during its operations and activities. There are many contributors to a building\u2019s carbon footprint, the building\u2019s energy consumption is something that most of the people are aware of (What Is the Carbon Footprint of a Building?, 2020). In this study, the educational building\u2019s carbon emission discussion will focus on specific components of a carbon footprint i.e. electricity rather than holistic emissions which accounts for many other components that emit greenhouse gases. According to Ya\u00f1ez et al. (2019), the building carbon footprint can be calculated by multiplying the yearly electricity consumption (kWh\/year) retrieved from the electricity data subset with the average U.S. carbon emission factor of 0.401 kgCO2\/kWh (US EPA, 2015). \u201cCarbon dioxide equivalent\u201d or \u201cCO2e'' is a term for describing different greenhouse gases in a common unit. For any quantity and type of greenhouse gas, CO2e signifies the amount of CO2 which would have the equivalent global warming impact. A quantity of GHG can be expressed as CO2e by multiplying the amount of the GHG by its GWP.  E.g. if 1kg of methane is emitted, this can be expressed as 25kg of CO2e (1kg CH4 * 25 = 25kg CO2e)(Brander, 2012). \n \nCarbon emissions for all the educational buildings located at the bear site have been plotted in the below figure, it shows that some buildings have extremely higher carbon footprint compared to others. ","ff0afbea":"### Factor 1: Building Age\nWe have plotted the built year for all the buildings located in bear site and their respective EUI into a scatterplot as shown below. The red colour dots represent the high consumption buildings (EUI more than 266 kWh\/m2\/year) and green colour dots represent the normal consumption buildings (EUI less than 266 kWh\/m2\/year). The data shows a correlation between the building age and their energy consumption, the newer schools consume more energy than the older ones, both consumption groups showing similar regression patterns. ","f2ed7d46":"Finally, we configure some plotting configurations and color palettes. ","68e5b121":"Then we prepare three datagroups for figure drawing. \n    \nDatagroup1 combines eui data and metadata. Meanwhile, data is divided into different group based on eui, built year and number of floors. This datagroup is created to draw distribution figures, scatter figures, etc.","5439c072":"As part of our analysis, we implemented time series cross validation (code attached as appendix). However, this resulted in high error rate. A high error rate might indicate the presence of seasonlaity and non-stationarity in the data. To address this issue we added time features to our model. Time features help to account for stationarity and seasonality in time series. We create a function `create_time_features` to streamline the creation of various time features. ","ed81cfd5":"Our data now has 1614048 rows and 15 columns. The site consists of 92 unique buildings and mainly consist of educational buildings.","9d9811ee":"### Partial Dependence Plots for Important Features\n\nPartial dependence plots show the relationship between the a chosen feature and the predicted outcome. Intuitively, it reveals the marginal effect of the chosen feature on prediction. A partial dependence plot reveals two insights: (1) whether the relationship between target and feature is linear, monotonic, or non-linear, and (2) the steepness of the slope (rate of change of feature relative to prediction) shows the importance of a feature. \n\nBefore proceeding, it is important to note several cavets of partial dependence plots. First, these plots by nature of marginalization ignore feature interaction effects. And second, predictions are defined over unique values of a feature which assigns equal weight (in calculating feature importance) to observations regardless of number of instances. To deal with these limitations, we explore feature interaction and prediction gradients between two marginal partial dependency plots. ","9b96ffb4":"Similarly, we apply our `create_time_features` function that takes in our dataset and returns a dataset with time features. ","91f824da":"Our visual check reveals that there are no more missing values. Our next step is to define several key functions. \n\nFirst, `model_train` is a function which streamlines our train\/validation split, model fitting, and loss metric calculation. The `plot_errors` function takes in a dataset and model and returns the actual and predicted target values for our validation set. Last but not least, `importance_plot` helps to extract feature importance values and order them for visual interpretation. ","2a811fd2":"The literature said that researchers found that the heating heat load of buildings in winter is mainly influenced by temperature, while the cooling load in summer is influenced by humidity and wind in addition to temperature, especially in July and August.\n\nFor another reason, exterior insulation and decorative systems make the building with good insulation performance, can reduce the consumption of heating electricity. Exterior wall insulation and decorative systems are widely used in the United States for more than 40 years, with an average annual growth rate of 20-25% and a maximum building height of 44 floors. And the effect of reducing consumption is remarkable.","676b191d":"### Model 1: Random Forest\nOur first model is a Random Forest Regressor ensemble model. We fit our model and proceed to plot its feature importance. To reduce training time, we chose `n_estimators = 100` and `max_depth = 10`.  ","b589b301":"Using the `target_encode` function we created, we apply it to our dataset to encode our `building_id` feature. ","6a521321":"We then decided to further investigate the energy consumptions for individual buildings. We have chosen one building from each age group and plotted their hourly energy consumption in the below charts. It can be observed that for all three buildings, their main electricity consumption hours are around 6am-8pm with peaking trends between noon to 4pm. We have expected some decline in the energy consumption during lunch break time, however, based on the consumption data, all three buildings have their peak energy consumption during the lunch time, this could be due to the reason that the appliances such as lighting, equipment in the classroom are not turn off when people left the room, or some students are still using the classroom and not having their lunch break. And it is also observed that the new building shows some different consumption pattern at midnight compared to the other two buildings, and the energy consumption for the new building at midnight is even higher than the peak consumption for old and middle age buildings during the day. This energy consumption pattern can further prove that newer buildings are more technology intensive compared to the older buildings, and without proper energy management and control systems, the building will operate at a lower energy efficiency. Hence one of the energy efficiency improvement measures that can be adopted for the schools is using integrated energy management and control systems to better monitor and manage the energy consumptions for systems like cooling and heating system, lighting and equipment.","5339968b":"Next, we examine the features importance to identify the features relevant for building energy prediction. As seen from our plot on feature importance, building id seems to be the most important, followed by air temperature, the hour of the day, and year built. Seemingly, weather variables did not have a huge impact. This makes intuitive sense as the spatial scale of analysis is site-based and there might not be enough variation to explain energy fluctation. Notably, this finding coincides with our earlier exploration of electricity and weather data where we found general weak relationship in correlation plots. ","9c0f9840":"We use the boxplot below to show the data distribution of the 3 age groups in terms of their minimum, first quartile, median, third quartile and maximum EUI for both 2016 and 2017. The \u2018New\u2019 building age group accounts for the highest energy consumption level with EUI more than 600 kWh\/m2\/year in 2016, this value is almost triple the EUI for the building age group \u201cOld\u201d. The data also shows a significant difference between median annual EUI in old schools (around 90 kWh\/m2\/year) in comparison with middle-aged (around 50 kWh\/m2\/year) and new ones (more than 300 kWh\/m2\/year) in both 2016 and 2017. The median annual electricity consumption increased around 80% from old to middle-aged schools, but approximately 300% from middle-aged to new schools.\n","5331dbfa":"Last but not least, we do a visual check to ensure that the distributions for `building_id` matches well with `meter_reading`.","d355f500":"## Dataset: Building Data Genome 2 Project\n### Target Task: (\\#2) What are the factors that influence building energy consumption and how can we identify them?\n**Group Members**: HE, Zhi Yin (A0242029M), WU Chen Xi (A0231343U), YAP Yu Ming Winston (A0108318J), ZHANG Xin Yuan (A0215758W),and ZHENG, Xue Hua (A0231416R)\n\n**Executive Summary**\n\nEducational institutes, as innovation drivers of science and technology worldwide, are in a great position to advance energy efficiency. However, progress on building energy efficiency studies have generally been limited by: 1) scarcity of data on building energy consumption, and 2) highly complex\/technical traditional building energy estimation methods. The advent of new and dynamic streams of building energy data and machine learning methods provide new ways to model building energy consumption. In this report, the team is tasked by California City Hall to explore the energy efficiency of universities in the California area. This is part of their urban strategy to reduce building carbon emission and to promote education on climate change mitigation and adaptation. Particularly,they have become aware of a new, extensive building meter dataset (Building Data Genome 2 Project) and would like to understand how how data science and machine learning methods can be used to predict and model energy consumption of educational institutes. In this report, we start by outlining key movements in climate and sustainability that sets the context for our study. Next, we proceed to examine existing research on factors affecting building energy consumption. Following our review, we conduct an exploratory analysis of our dataset to identify buildings with energy consumption above the benchmark. We then proceed to employ, evalutate, and compare the effectiveness of various machine learning algorithms (XGBoost, RandomForest, LightGBM) for building energy estimation before concluding with recommendations to reduce building energy consumption.\n\n<br> <\/br>\n\n![sde4.jpg](https:\/\/www.indesignlive.sg\/wp-content\/uploads\/2019\/02\/web_SouthElevation-Credit-Rory-Gardiner.jpg)\n\n<h5><center><cite>SDE-4 Net-Zero Energy Building (Image Credit: Rory Gardiner)<\/cite><\/center><\/h5>\n\n<br> <\/br>\n\n---\n## Notebook Outline\n\n- [Context](#Section1) \n- [Exploratory Data Analysis](#Section2)\n - [Import Packages](#Import-Packages)\n - [Data Preparation](#Data-Preparation)\n - [Site Description: BEAR](#Site-Description:-BEAR)\n   - [1. Quantifying Building Carbon Footprint](#1.-Quantifying-Building-Carbon-Footprint)\n   - [2. Benchmarking Building Energy Performance](#2.-Benchmarking-Building-Energy-Performance)\n - [Factors Affecting Building Energy Consumption](#Factors-Affecting-Building-Energy-Consumption)\n   - [Factor 1: Building Age](#Factor-1:-Building-Age)\n   - [Factor 2: Weather](#Factor-2:-Weather)\n   - [Factor 3: Number of Floors](#Factor-3:-Number-of-Floors)\n- [Predictive Modelling](#Section3)\n - [Prepare Workspace](#Prepare-Workspace)\n - [Loading and Preparing Dataset](#Loading-and-Preparing-Dataset)\n - [Feature Engineering](#Feature-Engineering)\n - [Machine Learning](#Machine-Learning)\n   - [Model 1: Random Forest](#Model-1:-Random-Forest)\n   - [Model 2: XGBoost](#Model-2:-XGBoost)\n   - [Model 3: LightGBM](#Model-3:-LightGBM)\n - [Model Evaluation and Comparison](#Model-Evaluation-and-Comparison)\n - [Partial Dependence Plots for Important Features](#Partial-Dependence-Plots-for-Important-Features)\n - [Pairwise Partial Dependence Plots for Important Features](#Pairwise-Partial-Dependence-Plots-for-Important-Features)\n- [Conclusion](#Section4)\n- [References](#Section5)\n\n---","e640abe3":"Datagroup2 combines datagroup1 and electricity meter reading. This datagroup is created to draw time-series figures and show temporal pattern. \n    "}}