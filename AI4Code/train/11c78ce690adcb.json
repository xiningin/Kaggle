{"cell_type":{"6b76b6f5":"code","693c5cd7":"code","190408ff":"code","0d9fb227":"code","59592384":"code","f1ba1cf0":"code","15506170":"code","80a9bb32":"code","95296d12":"code","32fe0431":"code","d1bcfd61":"code","b9744d2c":"code","03e0fab2":"code","a7655b5e":"code","1e326f20":"code","316f1a1d":"code","ab93fece":"markdown","8659ebe8":"markdown","747c049b":"markdown","19be43ea":"markdown","2a584077":"markdown","d1a5bba5":"markdown"},"source":{"6b76b6f5":"import os\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport warnings\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact\nfrom scipy.stats import pearsonr\n\n%matplotlib inline\nwarnings.filterwarnings('ignore')\nsns.set(style='ticks')","693c5cd7":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","190408ff":"train = pd.read_csv('..\/input\/generalization-competition\/train.csv')\ntest = pd.read_csv('..\/input\/generalization-competition\/test.csv')\ntrain.head()","0d9fb227":"def plot(column):\n    g = sns.jointplot(x=column, y=\"Revenue\", data=train, kind='reg',joint_kws={'line_kws':{'color':'cyan'}}) \n    g.annotate(pearsonr)\n    plt.show()\n\ninteractive = interact(plot,column=train.columns)","59592384":"plot('Ad Responses')","f1ba1cf0":"plot('Location Participation')","15506170":"from sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","80a9bb32":"X = train.drop('Revenue',axis=1)\ny = train['Revenue']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)","95296d12":"model = LinearRegression(fit_intercept=False)\nmodel.fit(X_train,y_train)","32fe0431":"cv = np.mean(cross_val_score(model, X_train, y_train, cv=5,scoring='neg_mean_squared_error'))\nprint (\"Model RMSE with 5 cross validation :\",np.sqrt(-cv))\ny_predict_test = model.predict(X_test)\nscore_test = np.sqrt(metrics.mean_squared_error(y_test, y_predict_test))\nprint('Test RMSE',score_test)","d1bcfd61":"X = train[['Ad Responses']]\ny = train['Revenue']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\nmodel = LinearRegression(fit_intercept=False)\nmodel.fit(X_train,y_train)\ncv = np.mean(cross_val_score(model, X_train, y_train, cv=5,scoring='neg_mean_squared_error'))\nprint (\"Model RMSE with 5 cross validation :\",np.sqrt(-cv))\ny_predict_test = model.predict(X_test)\nscore_test = np.sqrt(metrics.mean_squared_error(y_test, y_predict_test))\nprint('Test RMSE',score_test)","b9744d2c":"X = train[['Ad Responses','Cost']]\ny = train['Revenue']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\nmodel = LinearRegression(fit_intercept=False)\nmodel.fit(X_train,y_train)\ncv = np.mean(cross_val_score(model, X_train, y_train, cv=5,scoring='neg_mean_squared_error'))\nprint (\"Model RMSE with 5 cross validation :\",np.sqrt(-cv))\ny_predict_test = model.predict(X_test)\nscore_test = np.sqrt(metrics.mean_squared_error(y_test, y_predict_test))\nprint('Test RMSE',score_test)","03e0fab2":"model.fit(X[['Ad Responses']],y)\npred = model.predict(test[['Ad Responses']])","a7655b5e":"predictions= test[['index']].copy()\npredictions['Revenue'] = pred\npredictions.to_csv('submission.csv', index=False)","1e326f20":"prediction = [train['Revenue'].mean()]*len(y_test)\nscore_test = np.sqrt(metrics.mean_squared_error(y_test, prediction))\nprint('RMSE:',score_test)","316f1a1d":"!jupyter nbconvert --execute --to html __notebook_source__.ipynb","ab93fece":"We're able to get a slight correlation with Ad Responses only. But intuitively, i think Cost should still be an important predictor. Plotting manually, as interact is not working on rendered notebook.","8659ebe8":"## Using all available features","747c049b":"### Using Ad Responses + Cost","19be43ea":"### An even simpler model: The Mean of Training Revenue.","2a584077":"## Removing the Uncorrelated features","d1a5bba5":"For our final solution, as we can see above the best test performance was achieved with only using the correlated feature. We'll retrain our model with the entire data."}}