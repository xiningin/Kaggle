{"cell_type":{"1aa4b13e":"code","4d2730cf":"code","7fea69bf":"code","8fd83ac4":"code","2fe49bbd":"code","e2569161":"code","e174303c":"code","32194a80":"code","d4ac7868":"code","ca14ea02":"code","9ab7d92a":"code","5f446dae":"code","80bcffab":"code","b66dcec1":"code","892ef2d3":"code","c49a91b7":"code","613fbd27":"code","705a9283":"code","76233776":"code","e60b5512":"code","16c016eb":"code","6ead1aff":"code","020af627":"code","d6ae1458":"code","a07a2ee4":"code","4d7338af":"code","f10649b4":"code","835c7410":"code","bbcfc4f2":"code","5d806d06":"code","b0d2c337":"code","c21adf38":"code","c5d2c99a":"code","340b5cde":"markdown","ecb0bfaa":"markdown"},"source":{"1aa4b13e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport pickle\nimport os\nprint(os.listdir(\"..\/input\/feature-engineering\/\"))\nprint(os.listdir(\"..\/input\/elo-merchant-category-recommendation\/\"))\nimport datetime\nimport time\nimport sys\n# Any results you write to the current directory are saved as output.","4d2730cf":"with open('..\/input\/feature-engineering\/new_sum.pickle', 'rb') as f:\n    new_sum = pickle.load(f)\nwith open('..\/input\/feature-engineering\/his_sum.pickle', 'rb') as f:\n    his_sum = pickle.load(f)","7fea69bf":"train = pd.read_csv( '..\/input\/elo-merchant-category-recommendation\/train.csv',parse_dates =[\"first_active_month\"])","8fd83ac4":"new_sum.head()\nnew_sum.columns.values[1] = 'new_card_id_size'\nnew_sum.columns","2fe49bbd":"his_sum.head()\nhis_sum.columns.values[1] = 'his_card_id_size'\nhis_sum.columns","e2569161":"train_his=train.merge(his_sum, how='right', on=\"card_id\")","e174303c":"train_his.head()\ntrain_his.shape","32194a80":"train_his_new=train_his.merge(new_sum, how='right', on=\"card_id\")","d4ac7868":"train_his_new.shape","ca14ea02":"train_his_new.head()","9ab7d92a":"train_his_new.columns.values","5f446dae":"train_his_new['first_active_month'] = pd.to_datetime(train_his_new['first_active_month'])\ntrain_his_new['first_active_years'] = train_his_new['first_active_month'].dt.year\ntrain_his_new['first_active_months'] = train_his_new['first_active_month'].dt.month\ntrain_his_new['howlong'] = (datetime.date(2018,2,1) - train_his_new['first_active_month'].dt.date).dt.days\n","80bcffab":"train_his_new.shape","b66dcec1":"train_matrix = train_his_new.drop(['card_id','first_active_month','target'], axis=1)","892ef2d3":"train_matrix.shape","c49a91b7":"target = train_his_new['target']","613fbd27":"# from sklearn.ensemble import RandomForestRegressor\n# from sklearn.feature_selection import SelectFromModel","705a9283":"# sel = SelectFromModel(RandomForestRegressor(n_estimators = 100))\n# sel.fit(train_matrix, target)","76233776":"# train_matrix[train_matrix.isnull().any(axis=1)]","e60b5512":"import sys\nsys.path.append('..\/input\/feature-selector\/')\nfrom feature_selector import FeatureSelector\n# Features are in train and labels are in train_labels\nfs = FeatureSelector(data = train_matrix, labels = target)\n","16c016eb":"fs.identify_missing(missing_threshold = 0.6)","6ead1aff":"fs.missing_stats.head()","020af627":"fs.plot_missing()","d6ae1458":"fs.identify_collinear(correlation_threshold = 0.98)","a07a2ee4":"fs.plot_collinear()","4d7338af":"# list of collinear features to remove\ncollinear_features = fs.ops['collinear']\n# dataframe of collinear features\nfs.record_collinear.head()","f10649b4":"# Pass in the appropriate parameters\nfs.identify_zero_importance(task = 'regression', \n                            eval_metric = 'auc', \n                            n_iterations = 10, \n                             early_stopping = True)\n# list of zero importance features\nzero_importance_features = fs.ops['zero_importance']","835c7410":"# plot the feature importances\nfs.plot_feature_importances(threshold = 0.99, plot_n = 12)","bbcfc4f2":"fs.identify_low_importance(cumulative_importance = 0.99)","5d806d06":"fs.identify_single_unique()","b0d2c337":"# Remove the features from all methods (returns a df)\ntrain_removed = fs.remove(methods = 'all')","c21adf38":"train_removed.shape\nwith open('train_removed.pickle', 'wb') as f:\n    pickle.dump(train_removed, f)\nwith open('target.pickle', 'wb') as f:\n    pickle.dump(target, f)","c5d2c99a":"#train_removed[train_removed.isnull().any(axis=1)]","340b5cde":"# A Feature Selection Tool for Machine Learning in Python\nhttps:\/\/towardsdatascience.com\/a-feature-selection-tool-for-machine-learning-in-python-b64dd23710f0","ecb0bfaa":"# (?)Feature Selection Using Random forest\nhttps:\/\/towardsdatascience.com\/feature-selection-using-random-forest-26d7b747597f"}}