{"cell_type":{"d5f970b8":"code","2ac6826b":"code","f29cce15":"code","1f207acf":"code","c75ba117":"code","a5a2ff95":"code","28d03c5c":"code","d6a35fb7":"code","abb7f49b":"code","ed17a31a":"code","8e6963db":"code","5e158daa":"code","ad88f08d":"code","ea60b5a6":"code","8ad5a0fc":"code","4fa5a759":"code","6fecfa92":"code","1d80c9ba":"code","3d492389":"code","8f088b43":"code","6d2e0248":"code","8ee55749":"code","05ba9e13":"code","3ef52a02":"code","7a5902d1":"code","2571ae70":"code","06c27b27":"code","2faca465":"markdown","9de50246":"markdown","1e33115d":"markdown","6687522b":"markdown"},"source":{"d5f970b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2ac6826b":"df1 = pd.read_csv(\"\/kaggle\/input\/covid-19-hospital-and-oxygen-level-database\/oxygen.csv\", low_memory=False)\nprint(df1.shape)\ndf1.head().style.set_properties(**{'background-color':'darksalmon',\n                                     'color': 'purple'})","f29cce15":"df1[\"availability\"].value_counts()","1f207acf":"df1[\"verificationStatus\"].value_counts()","c75ba117":"df1[\"sourceName\"].value_counts()","a5a2ff95":"fig = px.bar(df1, \n             x='verificationStatus', y='last Verified On', color_discrete_sequence=['#DC143C'],\n             title='Verified Oxygen Status by Date', text='state')\nfig.show()","28d03c5c":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.sourceName)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","d6a35fb7":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\ndf1[\"verificationStatus\"].value_counts().plot.barh(color=['#349d6e','#faff00',\"#ff0000\", \"#763f00\", \"#3480eb\"], title='Oxygen Verification Status',);","abb7f49b":"df2 = pd.read_csv(\"\/kaggle\/input\/covid-19-hospital-and-oxygen-level-database\/doctors.csv\", low_memory=False)\nprint(df2.shape)\ndf2.tail().style.set_properties(**{'background-color':'lightblue',\n                                     'color': 'purple'})","ed17a31a":"df2[\"Date\"].value_counts()","8e6963db":"fig = px.bar(df2, \n             x='Date', y='Occupation', color_discrete_sequence=['#27F1E7'],\n             title='Date of Death by Occupation', text='Place of death')\nfig.show()","5e158daa":"doctor = df2[(df2['Occupation']=='Doctor')].reset_index(drop=True)\ndoctor.head(10)","ad88f08d":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAoHCBUVFBgVFRUZGBgaGR0aGxsaGiEaGxoaGh0hGhohGxsdIS0kGx0qIRoaJTclKi4xNDQ0GiM6PzozPi0zNDEBCwsLEA8QHRISHzkmJCozNTwzPjMzOT41Njk2PjY8OTM+NTEzMzU8NjU1OT41OTMzNTMzPTE1Mz4zMTYzMzM+Nf\/AABEIAOEA4QMBIgACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAEAAIDBQYBBwj\/xAA\/EAACAQIEAwUFBgQFBAMAAAABAhEAAwQSITEFQVEGImFxgRMykaGxB0JSwdHwFCNygjNDYrLhFZKi8TVzwv\/EABkBAQADAQEAAAAAAAAAAAAAAAABAgMEBf\/EACgRAQEAAgEDAgQHAAAAAAAAAAABAhEDEiExE1EiQWGBBEJxkaGx8P\/aAAwDAQACEQMRAD8A9jd4qJr1dxB0oBm86ApsTFNOJNB5qRegL\/izXP4o0ITNLNQFnFH9imNim8KGY1ygLOKbr8qacU3WoIrhoJzimpNi2ocUiKAj+LbrTf4putRZfGugUEwxbUv4tqHzVDexIQayegG5oDDim60x+JBTBYT03PwFUd7FXLhMDIPPU\/lVe1txqWb1Aj5AH50GkfjwHJj4xA+dNXjxOyj41mVd51UHlKyD68x8TUzW1J3Kt12+PXz3oNEvHOqH0NELxhObAeelZhVP3q4TGtBr1xs6ggjrvTlxZ8Kx1u8R7pI8jR+G4nrluQJOjDb16ee1BpBiqcMSelVgeprbxNBYLfmpVeq1HouyaAuaVcpUA2KNAu2tG4s0C510oG5q4DFJq5y8aDtKmTSBoHTSmuA0s2tA5TXaj8qeDQIikDTS1dmgcu9JhTKZicRkQtvpoOp5fOgGxuLCbat02A8z+VAZmY5iRPkY8pmnYbDMSXcyTr6nfyHIDwoxEAGwoBrTk6ER6\/uKIe1Ig6ipIFOXagEa2BE0y5aDb6j6US6zURWNqAVLWU76ePKmXgNaKbXlQ1xDQCmuzT2SaaFg7UCXFXLeqax5meUHpWgwmKW6gZdwYYfhYbg\/H1kVQIDJ6cqJ4U5tuQYhyAfP7v6fDpQX21GYZ9aCBovDb0FhNKuUqATHUE5FH4yq9zQInWmTXGriiufPlznLMZjuX5+y8xnTvbsUpprONiRNdIrXluWGNsm6rjq3Rxrk1xaU1XizyyxmWU1fYykl7H1yuCu1qgqbNI1ygcTQmL1IHTX1P\/E0VNB32lyI2jXrufzoOLptT4riU5TQJTJp6ADSktsGnbUHC1Q5TNTEU1migGfeoXNT3d6HdaCAjWlTsvM000HfGoroYgwTIHMCJ5a8v2akoi2xiRv0n6TQW1m5mUMNiAfjRuG30qo4W+jLOikR1AI5+s1a4Ru9QWdKu0qAPFHWgHFGYo61VcUxgt22uRMDuj8THRR6kipktuoi3U2H4hxDIwtoue6QWCzAVRuzsdFUdTWf4hjgGUXGe8zxAVzYsCToYHfZdfeaARqJFTYm06oylBczT\/EHNlZ32OUkFSluSqqTGYEwctAvdthEt3g9xlIRLeVkfLAZM51ynK6iEGYgKC0CK7OPCT6\/25s87T8QAouZMJZIT8WHaWIco0HOSQMs5vTlUuGcAgKj2WOUTZcsoY2\/asGsuSCqLGYhge8ImrXDWLLMLZNu3cKwFuYZwxUbDM75mAE7N1pYnh7IZSGIUgZXd7RUQ5UiS1jNkUbspC5TpApc54OmzvEuE4iQypdyyxIS4k5HI3Ug627g5o2s1ZxWNvY+1bY23V2Dt\/Ok97MTqwWTkdDooGoybsGBGl4ViHIa3cbM9tgrMNmUjMjj+pSD5zWPLxam40wz3dURisUlu29y4QqopZidAABNU78Be43tLuJuhzqBbfKqeC7zHWqn7VrrDBBF2e6iP\/SAz\/7kUetN7GdqFOBZr7w2GSHPN7Y9wjqx0XxI8awbNJhMaq3f4V7me6qC4JABZCxWSBzBEGOoNWFeN8B4jdxHF7V99Gd2GUGQtvI\/d8go+MmvZRQKKGvrrPiPpRJobEv3hQMmnDWmpv4VIABQOApXSANaYLwqJsQjGMw8qB7XulIvtTGMGhsViMhDcoPz\/wDVAa6VC4FU+L4tA3FZjG8futog1PMnaPyoNrfxFtR3nA1gTQa4tGOhn00rIYPFkxmuAn8IIifGrfCXtJgAjpzoNHM0OzFGBnTYj8xXcDckUzFcpHOgt8GwDMxYAMFGumusfGaucNvWO4hijasZh3h3R6MyhWJ8JNa3h7d1SdyoPyoLWaVcmlQC4us7xa6PaYdT7qs94jr7FCwH\/cRV\/jW1rPcWtzdsToG9rZ9btshfmorTi8\/upyeFFgHtEySGQD27pLlmFtGuObiPKK3tAgBSJDEaiisVaFm87XjLAW2dz+K9ae0zDoA+XyAHSlbX2hU3CiPdtta0LE5bysF1dyTDvEBYGUidAKL4jxlbd5cSUnNhllCYOdLuUqTBhlZzP9NdOeWrb9GGGFysxnm2aC8X4o1p7NxMt5kZnDIGyBXUqVmIAkzAJjLy0ptvty91ltPaQLcYW27xkBzlPrBqUfaI064cR\/8AYZ\/2VK3bqw6kPh3BIIkFGiehMV5+XLMrNXWnu8f4Pkxxsz492\/OWTX2LGBrd0ZQDcYXEzFgjMbAOWXyky1t0Y6rJtjXWKXCy4uWc6hHa1ctuo2BsOCgEE7K8b7CmYnEm46NBGdXuuq5y+S6UVAotMHnJbBMTGYTvS4PaAbDqABlt3rhC5oAuOFSM8NBCE66613fl7\/7y8Txmm7Y8NOIwd22BLAZ06lk7wHqJHrXj+GTu66Aj0PPX5V672u41\/DWoU\/zLkqngPvN6Tp4kV5VdYAT0+tcjoa\/7OeETcfEsNFGRPFm94jyXT+6vRK8\/+znjo72Ec66vb8ebr+Y9a9BoGzQuIHeHlpRYFVl9z7Rs3IgDxBAI+ZPwFANxDGtbaNAI56k\/pVFj+1DAQFnxg\/s1ZdoVMiCNTr1gCsnhMCl13uXnK2bbBAoMG5cIzEGNTAy6f6vCgfe7WktGgG2\/0ovB8XEgzMbdIrN8TxOBUuowzqysE3UakEyFPvRGvmKdhcCcmdMxTQgwRofDn6TQegPxNRBLb7cyfIUDieJTujqeWZSPrXew9tpc3FmIykjWOceFaHitgMhkUHmmO4iA5TcjfoJ28zVfbwntWm6wCj8TBUX46D6mrLB8GZsQwMCXaCdss6a+VXuP7NWmJUnMraRmAA1mUnnpQVmB4XgWOT2lotMCDBnwJA1ov+Fe0xt5S6HZljMvgw0keIp+A7IWLZckmH94FwdJmBlEx+gqzscNtr\/hyOQgkgDz1FBFw23cSJBJnYKwAHPMWq0vIHEH9nzpqYcwc2U+Yg\/WpLY2oILts3Lb2iRrbg\/1GfzArR9nrua1bnfKAZ30FYXjeLNnEoRI9okAn3cwYz8iPjW17PDux5H4zPzoNHFKnZa7QAYvc1TcTwpu2yqnK4hkb8LqcyH4j51b4rc0JUy2XcRZuaYzH3kRWvpZGZ2ZX1gWrpBDq4GpBliuoBD6+6KaLvtHsNiLQBYMzF3KJdUpKuSPcJya8iQp5mtFxDhxZjct5Q7LldHE27qDZXHUcmGorM43h4kAXWw7aD2eIJKADkl3VHTUwrAbmd67cM8c5pzWZY3ca61\/DFdMCpEfdFhlPk2ePUxWb4jgsNcuBbVtRcaQlqzcBLGCZuNJt2wACcqyT1FFfwuYhjbtxnZiQcOy5CzwslxqVZBm5ezUREzVXsAj3FZ7q58qgph4uuWUZdMgCW5AGpMTOlZ48OF8tZ+J5ce8tn3RcKKuj2Xtwqw1y6XP8sJorQQe8ACqqpEzGvLUcPhEfEXB7NWAIU\/5dlFi2p6HLqfFqi4fwnRQ6C3bU5ltA5izjZ7z\/ffovujSrDiuCW\/Ze0dA6wD0YaqfQgGq83JL2iMMbvqy8vJON8VbE33uGQD3UX8KD3R57k+JNafhHZAXcGzOIuuM1sn7karP9XPwIqs7McAN7EFbqwtpv5g8QYCepHwBr1ICuds8CRrli4GEpcR+e6sp1B9RBFe3cE4muJspdTQMO8PwMNGU+R+UVhftJ4LkcYpBCt3bng33WPmBB8QOtarsTwv2GEQMIe5\/McHkXAyiOUKFB8ZoNAGoLHoJUx4fP\/mi5rl4Ar5a0FPxKwrgBlVtdJE79IOlDJwGyQhjJk1RVOUAkySY3POrICdOVJlXago8XwOw9w3GVGeIkrm1iASCcs+MUfh8F3e8oPSQIHSI5eFG4fCIDIQfCn43ELbUsxgAfuKAfBYUIYXQc6mx5\/T9Pzp1kl1BjKd4O9SYldJNBTYbDyO8uvX9KlucNzjR2XyNQYlL1xglohRBliJA9Oe\/yruH4ubTC1iAAx2Ye6w6jp5UCtcBUEFmZ+cM0ifKrFbZGwqYX1OxppuCgDvT0imosUTf1FDUFRxLBLdxCZ1JW2pYNOgZiAfM9xa13BAczdO7Hzqia0ZZhvl25aTFX\/AGJQMRBMaeVBfUq56UqALG70Gd6PxYk1T4zGLbKAqxNxsi5Y96C0GSI0U\/Cpkt8It0ImuOoOhAI6HUUNbxyl2SGUhA5zQBlJK7g9VNSLfliIMBQQ2mU5p2M8o+Yqemw6pUD8JsEybNuf6F\/SirNpUEKoUdAAB8BXUcHYg89+W1IOpAIYQeciDS5ZXySSeDia7Qj4oZzbUM7KAWCx3Q3uyWIEmDpU1q6GA1glQ2U6NB6io1TcPS2oJIAGYyYAEmIk9TAAp1QXsSiDMzQCVHXV2Crt1JArqXwc0grDFe9AmBMjXaKavk3D7tpXUq6qyncMJB56g0\/wA6FTGKbjW9QwVWkxDByQuXXU9w1PnBJEiRuJ1HmKWWEsqSmsJEdR\/xXKfFQlXFY0ohVAE03Ep3p8K5ffu0CvYgKJrGtxf22NtoVL20Ys8a6AHLp0zZTHhVnxi65QgfsU7gHCRat5j7795ieh2HhQXGExtq7LWmBAOUxyI5EcjUl26Igmqh+H+zuPctQjXB342ciYJH4hO9Z3ifHLgJRlKuNCBz6a9P1oLjj3aFcLbBRc7u2VEBiTGpmNAPzFZ98bcxbIXthVWcx3mY0B6aUJgEZrntLhzPEKOSjoP1rTYbCz4f+6B+HtvaGYEuniZK+vMfOikxYOoPrTHuZRAIgCqbG3SrjIJkwQNdeooNIt6VpKKrcI7RrVijaUCJuZ0CIXBkNEALtBJPrWk4fayqo3gaxzPP51XcMXRj4x8BP51a4begsJpUppUAWM3qj4rg2uG1GX+XcFwhiRICssAgHXvfKrzF7mgpqccrLuIyks1VJd4U7MSQoXJbQBbjBlNu4bikNl3EjfmvjQz8DukNmNtiy2gSdJNq4XJICRJDZZ8PStLNKrzlsUvFKzy8FuKS1sWlbNfI0MRd1QEZdQDuNqdY4KwuIzrbYC5cuEHU99AugyASGGbly2q\/ppFT6tPSiu\/hbiXnuW8rLcC5lZipVkEAqYMgiNPChm4O7XCWKQbxuk6k62\/ZlII1Hj05VdRXarM7E3CVmF4BdyBWFskW7FuJJDGw+Yk9zZlMc421opeDH2ikrbyi9cuRqe69spljJEyQfSrwmlFWvNlUTikZq3wC5kCn2ZZbVlFMkwbVwuSCU0kGNOlG4LhjpcRmIhDeMicz+2fOM2mkeZ1Aq3FdiovLaTikcFOFcArtZtA+MzZDkGYyNJjSdd6BbWRVoarMcuVp5MD\/AM\/WgocZjFDBDuTFXCXRCjnVb\/01SfaQC0SJoBeB3r14NcusiCdEMNPIZo25\/Cg1D4m2oh2CnTfSq7H2cFc7z3FB5Enp9aFHZJR\/mO\/iza+pjWirPZez99GaDP8AiNr8GFBTNcw1sHI6tykD8zUScb5W7ZaTyM6\/CKvn4HhLbZsqL0Dd4+kzUivaU92J+foOVBmMVgMZfEwLKnaDLkeM6L8Jq14FwZ0Oa4+aBrI5+cx8qtVulvXnTrl3IkfOgExKrm0GtdV4gcyaDS9rNSYSblxY3JCjwk\/s+lBJ2Z7U2ruJvYSCr22bKSdHC6PHQiNumvI1tcNvXz\/2owNzA8UfIWX+Z7W028q5zDXnBJU+Ve19luMpi7a3E0I0dPwPzHkdwelBpctcrtKgAxo1oKKOxoM0E1ADxbHNZtm4LZdVEtDAEDrB3Hzqt7K8XuYi2MyHu91nzCGbeAu+xFXOKw63FyOMymJHIwZAPUSBpzpWMMiFiihS0Fo0BI0mNp8fAVnccuqXfZ2YcvDOC4XH4re1CYvGul5beVcrW7jySQZQJoSdFBL+O1BWONl0Y7MrLKlCjKAntHDKSYEKyhtjI352uJwCXHDvJIRkAmBleM4jxgfClb4cgYuZZihQljMqY0IA6L8z1NTZltTHLimM3O+v5U97jNxZnIIVHLC29wBXRmMrbM6FD3toonF8TdUZ7eRkX2azrBa4VkjqMroRrRa8KRRAZx3chObUoFyhSegHPfUmdTT24Zba37MyEzZoBjUNnG3IECB0AFRrJa58W52ADizm8bYCglriAFW7uRQyOT95W10HUdDQh49cyORkLW0uu0qyZhaKwpRjmQsrE67d3TWr25g1ZsxLZspUNMFASCcumhJVSesdNKgucGtMSSCSwYOZ1dXy5w\/Ig5FGkQBAgVNlMc+L2Hq0612uMabV3IfTQOlIV0Gg4wqLEWA6x6g+NTV2KDOW+6SOY0NHowjxFV3afGW7NywD7958gjWSBpI8yq\/3CicE4ga0E97Ny\/ZquxCXDPeOmkAxrVwDNOWgzlrhhJzEE9aMTh67nerN3GoBoe49BxRFV2PPQxUl\/FqOlUmOx2YwOX1oOiRWn7KcPI\/nOIn3B4HQt6\/SqjgXDDeuS\/uLBY9TyUfnW7UQIG1B5H9sMfxdjobUn+1yB\/u\/cVF2Mxr2biNbbMGMOJEEE7QY1oP7VMT7XiPsxqLdpF9TLn5MKK7IJma2kwMxM\/SenSg9g\/6ov4T8R+tKgvY\/0fH\/AIpUFjjD3qEcUbixrNBsaCDFYpLS5nYKsxPifKg+C8UTEW1YRmygsok5SZ5xrVmKB4PhGtWLdt4zIoUxtI6GqXq6p7N8fT9K7nxbmu\/ycxGPVLgtlXzFHcQuhCBS0Hme8u3Wok4qIbNadMrKpD5dc2pjKx91QWI6VLicIzX0uAqAiOuWDJ9oVkzyj2fzqFeGkhVuODpcLkCCblwZcw6AKXUDoR0p8ScZx6m\/bu43G7egKsGIBCnKpIZC4IJaNlYRMyDT8XxUWwzC27qqB2KgAqpBYyGI1AAJG+o0oN+Alx\/MyP3FRlIOQhFKq3UMCzEdJifvVK\/CrotC0txGM983FZs6qoRA0MD7qrm11g8iabq\/Tw7mr+qccXQmArtmLBSAO8yKGKiTMwTvA7p1qI8dthWLJcBXOXWFJRbZUOTDQR3we6TInpUacJuA5g65gz3EOUwHuJlaVnVQS5Gv3gOUmFuB3WUh3TvW7lpsiMJW4VJY5mYl5DeBzeGreSenh91+frTacB05Umq7jKmin1RcX7V4PDAh7oZx\/l2++89CBov9xFBeLVN2m7TWsFbBfv3G9y2Dq3ifwoOZ9NTpWB419o9+5K4dBZU6Zj3rnp91fgfOsiHa45e4zOx3ZiWY+ZNBa4vtBcvY7D4i+wAS9aaBoqItxWIUehJO9et9peB3lJu4YZubW51B55RzB6b9PDwfiokaV9J9k+JnE4OxdOjPbQt\/VHe+c0GJscc0yuCrjQgjmP3tRH\/V1Md7lWo49wO1d7xQSdyND5zzrF8U7P3bYm2SV8Nx5j86As8QQDNm9KrMdxqTlHTeqjEYa+TpauORzFuPnVJb4nldle2yMDBzaH50Gl9uz6zpzJ0+FFcG4Q95xlGVBu0fHzPhQ\/ZzCfxRgMAimXAPfPRQu4HMt5R4ejYaxlUKihVAgCgkwmFW2gRBAHx8z1NS4hwilidACT5DU1LaSKyv2jcS9jgrhB1cC2P79\/lNB4viMW2IxF67oWuOzT0WdP8AxitV2PtM11QDz1IiY84P7NY3hqNJgHbaY\/8AdbzsQuW4ihRP4p3OkAdIjp9KD1P+GTq3\/dSp\/sm6D\/x\/SlQE4zeg2ovHHWg2M0Cmug1wNXCaB01xl50hXeVA0GK7mppFKaBxFcihcfxG1YQ3LtxUUc2O\/gBuT4CvO+0H2jO8pg1yLt7RwC58UU6L5mfIUHonEuKWsOme7cRB\/qOp8FG7HwArC8Y+0pRK4a3m\/wBdzQeYQakeZHlXnOJxD3GL3GZ3O7MSzH1NRUFpxXtHisRPtLzlfwKcieWVYkec1UAU4inqs7UHVHKp7YioQKldoGlAPiTNe9\/Zr\/8AG4VhyRlPo7V4E+1e9fZPdDcMteD3F+Dn9aDaLBFD3cGrcoohVihuJY1LNp7rmFRSx6mOQ8SYA8TQYfttxQYQLbQZ77qzIneghd5ygknoo312GtebYnFXnFw3xfLIk3beQplY6LqGGVZIjQmBsSZqW7xHEXrl+\/dQObji2VzGUFxkCC2o7zrARYA70eJqzTDDMRdskvccLZb2K3ENtAFFtLec+zKwDHvQBJBkkM\/hsNcsFLo\/xLVtrjlGcPkce+jMChKBlOndMEd6K3nZL7Rgzrh8cMj6Bb0BUYkSudQSEka5hp1isXiVzI+RXFk3MyWmvsreztmbqixOU65oMyCIEkTXezXBkvXGeFyTPcUquhMQDtoY\/wCZoPoB0gV5B9rmMLG3ZGsyx158vp869D4DcYYcW2nuHKs\/gPujXpBHlFeNdtcV7TGu2pCmFE6GDl\/I\/GgpcArZgBoTpvG+m9a\/s7YK3kCbjQnUqCBoSf2OdZaywXYRrqfAjYD863PYy2pccyzy24AEbD5UHpPe\/EKVWPsF6UqBmOGtAEUdjDrQU60DTSArsV0NQNFKkdaou1vaNMDazkZrjyLaTEkbljyUSJ8wOdBfMRvtHyrC9pvtAt2pt4UC440Nw\/4anw\/GfLTxO1YHH9rcZilZLt3uE+4gCLHQxqR4EmqlRQFY\/HXL7m5duM7Hmx2HRRso8BQ5Wug02gawrkU9o6g0ygVJnIiAD6xSjxpUCTEA6ag+IqQnWoygroNAjXsX2L4mcNdtTqtzOP6XAB\/8lPxrxwivTPsdxEXSn4kYfAzQevq3WsL9qeNOSxhlP+JczN4rbiB\/3MD\/AG1vGFeefaBYJxWFaJGRgPMMCfqKDG4jAXLV1BbKKwy3FLkhSVRwwYKpOw94lQuuoJmosRdDLYa6mWyVZgPZ3LdlLhGVC92Wd1hVEg6AADSa0Hae2ty6tk3EUCwofvAMC7swaJXMAFMgsFEgkGspjuONdDp7EEuBhzdDEIVEKrBc2UaKIEwJkCaANz3hatOAhUMVSLqo75g4t3TORigUwGbUxJyzXovZfhXs7QndyJJ8v0FZXs\/Yl3Peg3Oaey90BNbeyt3QfJhzmvUuGWJtr5g+h7v\/AOqB+M\/lWGYDWPnBivAuImb9yZzByh6d3uk\/EH419H8RVBZdnjKilzO0IM2vhpXzOLhaXO7ksfNjmPzNBNYUk6fr8Yr0rsDaGcyNZ+MjlPKIrzjBhs8Kdx6QNd+Qr0DsFcK3ckzoBp5zQesx50qbJ6fOlQQ4oUE61ZYhZNAOsUEANKalIqMigTV419peLNzGukyLaKg8yM7estHoK9kFeA9oLpfE32J1N658nIHyAoKmxuRU4FQqe+PEfSi1oGmBUTGnuNz4\/vSoxQdFcY9K7TZ+H7igcqyJn0pxGlRqakY+PpQILXANZ3rqny+FNagc378a2v2V38uMtifeZx8UP5isUa1P2aGeJWV\/1sfOLbn8hQfQLVTcT4at27Yz7p7RtOY7o+pFWrPBrns4ZnP4QB4Aa\/Wg8r7S3rdzE3CotIiF7LPdtls9woqMQAJCoqqfaHbPpIOufxV9xb9h7O7mAfCBAFay1wSCcxO8986SSqnMBIqfE4p7ZzLduhriG8Q6LecXElbbAFR7PMFEGAVEbiDQa4dVtW7yklv5b+0e4Sj3XYJcS4p0HvOJHeATMSQ1Badnh\/MNoyrRnAe4LjECFIBH3QPZxyIbTavWuF4fLbHp8iDXhNzGCy63mVFcS65AzFoRIQ3Nwy91Wzd2HJEnb3bB4pXwwuJsUzD4TB8aCi+0XG+y4fiWkjMotLG83GCNH9pb4V4NaSekb1619tGKC4bD2ARL3C58rax9bi15MqHz8qArCpmdVjU7dPXf4V6H2DwpS4ARrJzGdZB0BNedWAc6wYPy8K9U7F4b+YIJMDUjaTroek6elB6LkP7NKnZfGu0DLw1oG4NY50feFDG2elAE5qMmi\/4c8waa2FPSaCq4vjhZs3LrfcQsPEx3R6mB614DiJJkmSdSepO\/zr2jt5h3uWkshWIdszQpIhIIBI27xB\/trzt+zV0j\/Cc9NN6DI3dIPjRCmavr3Zy7l0sv0MqfiKVns\/eAE2XBiD3Z18utBQPIpgq9fg13WLTeJynSP38qjPBbo3tkcto+E70FKTXQtWL8Muif5ZA05c6amCYgnL8tvTlQV1SmjRw64TATfbl+dPfhl0f5Z840oAUU\/vzpr6k\/KjreBuHZG6aDrT34bcgAo0D\/AEnTrJoK4TWo+zV8vFLE884B\/sYfnVQnDLm4WR61ddkcJct46zcKwA41gwJoPdcS2oqTF3xbtvcaAqKzGdoUEmfhUN0S1Unbi85w7WLSB3dTIJIAQAnUjckiAvPXlNB5hwprlu2VuLiLbXAlxXSLrsLS5bgY5gQwaXgnukgMsAUELSszYh7VtVuPcuAsQxVLhNu37S3t7PP96IkzERWks4N3LXGt3LSoC4W2wa47YgSSbkQO4oXUT7o3JNR3eD3tbShFAdbS3GRhc9mSLg7maCVjKdJ0yztQZm4iu+RbjFIuonswFLq2RAntGU+0BRREgtFsCJIJ9D+zfiZDXcFcacgDJmgNDrJVwNA4mGjnWfxHDbgsvba27go5GVMqDM5MsmoVkdie7OmXUAGZeFcJv4S6t0IoXPbzrbDqFIXKT3gRcUjMdNmA2G4Dfa9eNzHJaG1uyvlmuMS3yVKxiWCNj6\/Wa3naPhd3EYq5dCP37kbd2EVbY8wcs1FgOy9wFi9tis6CPSfn8KDN8PwhkQRmOkT66RsdOfSvUOxGFNsAsoDtqYI2O0R9KrsJ2cLZibcA6gEbEbanYyBWr4Nw9rbTrB1IMaGeXQfrQaGlXaVAq4aVKg4KQpUqCq4n74\/pP50AnvelKlQR8v31NDp+tKlQJuX9I+tQ3dvUfWlSoAsXz8qWH+96fQVylQWuD5eY\/wBtJtz6fWlSoKW77rf2\/Wrexz\/p\/WlSoHYfb1\/M0Vh90\/rH0pUqDSmh73vN5D86VKgG4Vz\/AHzFSvv6\/nXaVBFjPeX1+pqbE+58PoaVKgg\/SiB7vwpUqBHl61PY2\/fSlSoJ6VKlQf\/Z',width=400,height=400)","ea60b5a6":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df2.Occupation)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","8ad5a0fc":"df = pd.read_csv(\"\/kaggle\/input\/covid-19-hospital-and-oxygen-level-database\/No.of Organizations that are contributing to save from corona.csv\", low_memory=False)\nprint(df.shape)\ndf.head().style.set_properties(**{'background-color':'PaleGreen',\n                                     'color': 'purple'})","4fa5a759":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","6fecfa92":"#Code by Firat Gonen https:\/\/www.kaggle.com\/frtgnn\/elo-eda-lgbm\/notebook \n\nplt.figure(figsize=(10, 6))\nplt.title('MBBS Hospital Distribution')\nsns.despine()\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nsns.distplot(df['MBBS Hospital'], hist=True, rug=False,norm_hist=True);","1d80c9ba":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df['NO.of ESIC hospitals'])\nplt.axvline(df['NO.of ESIC hospitals'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('NO.of ESIC hospitals distribution');","3d492389":"#Code by Firat Gonen https:\/\/www.kaggle.com\/frtgnn\/elo-eda-lgbm\/notebook \n\nplt.figure(figsize=(10, 6))\nplt.title('Nurses and Midwaves Distribution')\nsns.despine()\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nsns.distplot(df['Nurses and midwaves'], hist=True, rug=False,norm_hist=True, color='red');","8f088b43":"df4 = pd.read_csv(\"\/kaggle\/input\/covid-19-hospital-and-oxygen-level-database\/Ambulance.csv\", low_memory=False)\nprint(df4.shape)\ndf4.head().style.set_properties(**{'background-color':'MistyRose',\n                                     'color': 'purple'})","6d2e0248":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\ndf4[\"verficationStatus\"].value_counts().plot.barh(color=['#349d6e','#faff00',\"#ff0000\", \"#763f00\", \"#3480eb\"], title='Ambulance Verification Status',);","8ee55749":"df4[\"verficationStatus\"].value_counts()","05ba9e13":"fig = px.bar(df4, \n             x='verficationStatus', y='CreatedTime', color_discrete_sequence=['#27F1E7'],\n             title='Verified Ambulance Status by Created Date', text='state')\nfig.show()","3ef52a02":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df4.Comment)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","7a5902d1":"df.isnull().sum()","2571ae70":"gujarat = df[(df['State']=='Gujarat')].reset_index(drop=True)\ngujarat.head()","06c27b27":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was here, just Kaggling.' )","2faca465":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQlJf0FOAAMqQJhOeJ1XI23mLJ_EuvBiTfTyg&usqp=CAU)indiatoday.in","9de50246":"#The file above is about Medical Doctors. Why are Members of Lok Sabha\/Actor and Writer listed in the occupation column? \n\nUnless, they were Doctors too.","1e33115d":"#COVID: Why is India facing an oxygen shortage?\n\nMedical oxygen in India has been in severe shortage as the country grapples with a deadly second wave of the pandemic. But bureaucratic hurdles are delaying delivery of the critical resource to those in need.\n\nhttps:\/\/www.dw.com\/en\/india-covid-oxygen-shortage\/a-57425951","6687522b":"\"Elsimar Metzker Coutinho (18 May 1930 \u2013 17 August 2020) was a Brazilian scientist of Luso-Austrian descent, professor, gynecologist, television personality, and character named as \"Prince of Itapo\u00e3\"\n\n\"Coutinho was a member of 32 medical societies. By the year 2000 he had participated as a guest lecturer in 253 congresses. He published 350 scientific studies, mostly in international medical journals such as Nature, Endocrinology, Fertility and Sterility, and The American Journal of Obstetrics, Gynecology and Contraception. He has published ten books. His book Is Menstruation Obsolete?, co-authored with Sheldon Segal in 1996. The English version of this book was published by Oxford University Press and has received praise from medical journals such as The Lancet, Journal of the American Medical Association (JAMA) and the British Medical Association's reviewer who called it a masterpiece.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Elsimar_M._Coutinho"}}