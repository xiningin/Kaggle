{"cell_type":{"6e7bfe3f":"code","60a20dc0":"code","579e71a6":"code","12f0e68a":"code","6afe99ae":"code","cb06b728":"code","1e2d3a64":"code","6ffc97d7":"code","2d009eaa":"code","432c270a":"code","9fe30ce6":"code","545db29c":"code","31ae95ac":"code","4bb0dd8f":"code","35d7b337":"code","875ec69c":"code","84c7b041":"code","9e4acf1a":"code","838188f1":"code","d322fa21":"code","763f2206":"code","fd5d7c10":"code","abe0a559":"code","2b83044f":"code","c4298f0e":"code","51c8efb0":"code","655725bc":"code","54218da9":"code","2791106c":"markdown"},"source":{"6e7bfe3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60a20dc0":"import pandas as pd\nimport numpy as ny\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","579e71a6":"data = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\n","12f0e68a":"data.head()","6afe99ae":"data.describe()","cb06b728":"data.info()","1e2d3a64":"data.isnull().sum()","6ffc97d7":"plt.figure(figsize=(5,5))\nsns.histplot(data['HeartDisease'])","2d009eaa":"plt.figure(figsize=(3,3))\nsns.countplot(data['Sex'])","432c270a":"plt.figure(figsize=(5,6))\nsns.countplot(data['ChestPainType'])","9fe30ce6":"plt.figure(figsize=(26,7))\nsns.countplot(data['RestingBP'])","545db29c":"plt.figure(figsize=(2,4))\nsns.countplot(data['FastingBS'])","31ae95ac":"plt.figure(figsize=(3,5))\nsns.countplot(data['RestingECG'])","4bb0dd8f":"dummies = pd.get_dummies(data['Sex'])\nmerged = pd.concat([data,dummies],axis=1)\ndata = merged.drop(['Sex'],axis=1)\n","35d7b337":"data.head()","875ec69c":"dummies = pd.get_dummies(data['ChestPainType'])\nmerged = pd.concat([data,dummies],axis=1)\ndata = merged.drop(['ChestPainType'],axis=1)\n","84c7b041":"dummies = pd.get_dummies(data['RestingECG'])\nmerged = pd.concat([data,dummies],axis=1)\ndata = merged.drop(['RestingECG'],axis=1)\n","9e4acf1a":"dummies = pd.get_dummies(data['ExerciseAngina'])\nmerged = pd.concat([data,dummies],axis=1)\ndata = merged.drop(['ExerciseAngina'],axis=1)\n","838188f1":"dummies = pd.get_dummies(data['ST_Slope'])\nmerged = pd.concat([data,dummies],axis=1)\ndata = merged.drop(['ST_Slope'],axis=1)","d322fa21":"data.head()","763f2206":"from sklearn.model_selection import train_test_split\n","fd5d7c10":"x=data.drop(['HeartDisease'],axis=1)\ny=data.pop('HeartDisease')\n\n","abe0a559":"x.head()","2b83044f":"\nX_train, X_test, Y_train, Y_test = train_test_split(x,y,test_size=0.20,random_state=42)","c4298f0e":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier","51c8efb0":"pipe = Pipeline([ ('decision_tree', DecisionTreeClassifier())], verbose = True)\n","655725bc":"pipe.fit(X_train, Y_train)\n","54218da9":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(Y_test, pipe.predict(X_test)))","2791106c":"resting BP - 120\/80\nCholesterol - 150"}}