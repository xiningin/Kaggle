{"cell_type":{"5c63dbbd":"code","7f171092":"code","b8ee4aaf":"code","88f875a6":"code","e69bf3c5":"code","4c409dc4":"code","d1320a2f":"code","d462ddee":"markdown","0ca29a8f":"markdown"},"source":{"5c63dbbd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\ndata = pd.read_csv('..\/input\/597-poems-by-emily-dickinson\/emily-flattened.csv')\n# Keeping only the neccessary columns\npoems = data['poem']\nseasons = data['season']\n\nprint(seasons)\n\n","7f171092":"from matplotlib import pyplot as plt\n\n%matplotlib inline\n\ndef plotWordFrequency(input):\n    data = sorted([(w, input.count(w)) for w in set(input)], key = lambda x:x[1], reverse=True)[:40] \n    most_words = [x[0] for x in data]\n    times_used = [int(x[1]) for x in data]\n    plt.figure(figsize=(20,10))\n    plt.bar(x=most_words, height=times_used, color = 'pink', edgecolor = 'red',  width=.5)\n    plt.xticks(rotation=45, fontsize=18)\n    plt.yticks(rotation=0, fontsize=18)\n    plt.xlabel('Most Common Words:', fontsize=18)\n    plt.ylabel('Number of Occurences:', fontsize=18)\n    plt.title('Most Commonly Used Words', fontsize=24)\n    plt.show()","b8ee4aaf":"import nltk\nnltk.download('stopwords')\nfrom nltk.tokenize import RegexpTokenizer, word_tokenize\nfrom nltk.corpus import stopwords\n\nstopWords = set(stopwords.words('english'))\n\nwordsFiltered = []\nseasonsFiltered = []\n\ndef createPoemString(data):\n    words = ' '.join(data)\n    split_words = \" \".join([word for word in words.split()])\n    \n    tokenizer = RegexpTokenizer(r'\\w+')\n    cleaned_words = tokenizer.tokenize(split_words.lower())\n    \n    for word in cleaned_words:\n        if word not in stopWords and word is not '':\n            wordsFiltered.append(word)\n            \n            \ndef createSeasonString(data):\n    words = ' '.join(data)\n    tokens = nltk.tokenize.word_tokenize(words.lower())\n    for word in tokens:\n       seasonsFiltered.append(word)\n            \ncreatePoemString(poems)\n\ncreateSeasonString(seasons)\n\nplotWordFrequency(wordsFiltered)\n\nplotWordFrequency(seasonsFiltered)\n","88f875a6":"import matplotlib.pyplot as plt\ndata['sentiment'].value_counts().head(10).plot.pie()\nplt.gca().set_aspect('equal')","e69bf3c5":"data.sentiment.value_counts()","4c409dc4":"data.season.value_counts()","d1320a2f":"seasons = list(data['season'].unique())\n\nsentiments = list(data['sentiment'].unique())\n\ndf = pd.DataFrame(\n\n{ season :\n\n    { sentiment : data[(data[\"season\"]==season) & (data['sentiment']==sentiment)].id.count()\n\n      for sentiment in sentiments\n\n    }\n\n  for season in seasons\n\n})\n\ndf.drop(columns=['none']).plot()\n","d462ddee":"How often is the sentiment negative? Positive?","0ca29a8f":"What's the spread of seasons?"}}