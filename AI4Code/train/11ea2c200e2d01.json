{"cell_type":{"6e8a3e6e":"code","32686ea8":"code","ad86c0d4":"code","e2427f42":"code","b64aee38":"code","69054f89":"code","a97097db":"code","a6514d04":"code","a42e967c":"code","d1c27684":"code","81f0eb26":"code","3c38ff2c":"code","bc395286":"code","6e71c442":"code","2daef283":"code","d3f03582":"code","d93d93ab":"code","416ceaf6":"code","3766e58e":"code","80f9b43e":"code","a5daeb35":"code","96bd1ac3":"markdown","053bc0c0":"markdown","f29421bd":"markdown","28d45821":"markdown","3edfbaba":"markdown","30784e08":"markdown","813bb30b":"markdown","32340297":"markdown","681b07a7":"markdown","e9034a33":"markdown","d63c6aa5":"markdown","e6ebe8e1":"markdown"},"source":{"6e8a3e6e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32686ea8":"from sklearn.datasets import load_boston","ad86c0d4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","e2427f42":"df=load_boston()","b64aee38":"df","69054f89":"dataset=pd.DataFrame(df.data)\nprint(dataset)","a97097db":"dataset.columns=df.feature_names","a6514d04":"dataset.head()","a42e967c":"df.target.shape","d1c27684":"dataset[\"Price\"]=df.target","81f0eb26":"dataset.head()","3c38ff2c":"X=dataset.iloc[:,:-1]\ny=dataset.iloc[:,-1]","bc395286":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\n\nregressor=LinearRegression()\nmse=cross_val_score(regressor,X,y,scoring=\"neg_mean_squared_error\",cv=5)\nmean_mse=np.mean(mse)\nprint(mean_mse)","6e71c442":"from sklearn.linear_model import Ridge\nfrom sklearn.model_selection import GridSearchCV\n\nridge=Ridge()\nparameters={\"alpha\":[1e-15,1e-10,1e-8,1e-5,1e-3,1,10,15,20,30,40,50,60,80,100]}\nridge_regressor=GridSearchCV(ridge,parameters,scoring=\"neg_mean_squared_error\",cv=5)\nridge_regressor.fit(X,y)","2daef283":"print(ridge_regressor.best_params_)\nprint(ridge_regressor.best_score_)","d3f03582":"from sklearn.linear_model import Lasso\nfrom sklearn.model_selection import GridSearchCV\n\nlasso=Lasso()\nparameters={\"alpha\":[1e-15,1e-10,1e-8,1e-5,1e-3,1,10,15,20,30,40,50,60,80,100]}\nlasso_regressor=GridSearchCV(lasso,parameters,scoring=\"neg_mean_squared_error\",cv=5)\nlasso_regressor.fit(X,y)","d93d93ab":"print(lasso_regressor.best_params_)\nprint(lasso_regressor.best_score_)","416ceaf6":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)","3766e58e":"prediction_lasso=lasso_regressor.predict(X_test)\nprediction_ridge=ridge_regressor.predict(X_test)","80f9b43e":"import seaborn as sns\nsns.distplot(y_test-prediction_lasso)","a5daeb35":"sns.distplot(y_test-prediction_ridge)","96bd1ac3":"**IMPORTING LIBRARIES**","053bc0c0":"**ADDING A TARGET COLUMN**","f29421bd":"**VISUALISING THE RESULTS**","28d45821":"**LASSO REGRESSION**","3edfbaba":"**getting the best parameter and the best score of the ridge regressor**","30784e08":"**getting the best parameter and best score of the lasso regressor**","813bb30b":"**LOADING THE DATASET**","32340297":"**SPLITTING THE DATASET INTO TRAINING AND TEST SET**","681b07a7":"**RIDGE REGRESSION**","e9034a33":"**PREDICTION**","d63c6aa5":"**LINEAR REGRESSION**","e6ebe8e1":"**IMPORTING DATASET**"}}