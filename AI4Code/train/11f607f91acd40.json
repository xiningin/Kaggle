{"cell_type":{"34633795":"code","5e894e75":"code","b4692922":"code","9a7c1d36":"code","1a89fdb8":"code","267abb31":"code","756e9e35":"code","e2c9fa92":"code","55f1e05e":"code","6c8af38f":"code","8240bea3":"code","4c0161be":"code","51d8942f":"code","ad684e88":"code","d66965cb":"code","a0247de1":"code","4d8d5c9c":"code","4c77dac3":"code","6a869374":"code","798c80fa":"code","11b5f963":"code","94186d1f":"code","0aec7890":"code","99084dc6":"code","1503d2de":"code","23e2ac9f":"code","c7e8bba1":"code","ea54e315":"code","980f2ec4":"code","104aad82":"code","7d20833c":"code","bd999041":"code","d7cbc785":"code","fd29c51b":"code","eccd42c9":"markdown","69cc1e45":"markdown","03a7a215":"markdown","ccbc4057":"markdown","cf093bc7":"markdown","205218b2":"markdown","dcf3a1cf":"markdown","96eba90f":"markdown"},"source":{"34633795":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))\n\n","5e894e75":"import nltk","b4692922":"from nltk.book import *","9a7c1d36":"sents() # shows one sentence from each corpora","1a89fdb8":"text7","267abb31":"sent7 # parsed out already","756e9e35":"len(sent7)","e2c9fa92":"len(text7) # how many words in total","55f1e05e":"len(set(text7)) # to see the number of unique words","6c8af38f":"list(set(text7))[:10] # to see first 10 unique words","8240bea3":"# frequency of words\ndist = FreqDist(text7) # FreqDist is a part of nltk library\nlen(dist) # returns the same number of unique words","4c0161be":"vocab1 = list(dist.keys()) # to get the actual words\nvocab1[:10]","51d8942f":"dist['Vinken']","ad684e88":"freqwords = [w for w in vocab1 if len(w)>5 and dist[w]>100]\nfreqwords","d66965cb":"input1 = 'List listed lists listing listings'","a0247de1":"words1 = input1.lower().split(\" \") # don't want to distinguish \"List\" with \"list\"\nwords1 # normalization is done","4d8d5c9c":"# stemming is coming\nporter = nltk.PorterStemmer() # to find to root form of any given word","4c77dac3":"[porter.stem(t) for t in words1]","6a869374":"udhr = nltk.corpus.udhr.words('English-Latin1')\nudhr[:20]","798c80fa":"[porter.stem(t) for t in udhr[:20]]\n# resulting list: some words are not valid words","11b5f963":"# lemmatization does stemming but all resulting words are valid\nWNlemma = nltk.WordNetLemmatizer()","94186d1f":"[WNlemma.lemmatize(t) for t in udhr[:20]] # all words are valid","0aec7890":"text11 = \"Children shouldn't drink a sugary drink before bed.\"","99084dc6":"text11.split(\" \") # it's keeping the full stop with the word","1503d2de":"nltk.word_tokenize(text11)","23e2ac9f":"#nltk has a sentense splitter also\ntext12 = \"This is the first sentence. A gallon of milk in the U.S. costs $2.99. Is this the third sentence? Yes, it is!\"\nsentences = nltk.sent_tokenize(text12)\nsentences","c7e8bba1":"nltk.help.upenn_tagset('MD')","ea54e315":"#apply nltk's word tokenizer\ntext13 = nltk.word_tokenize(text11)\ntext13","980f2ec4":"nltk.pos_tag(text13)","104aad82":"text14 = \"Visiting aunts can be a nuisance\"\ntext15 = nltk.word_tokenize(text14)\nnltk.pos_tag(text15)","7d20833c":"text15 = nltk.word_tokenize(\"Alice loves Bob\")\ngrammar = nltk.CFG.fromstring(\"\"\"\nS -> NP VP\nVP -> V NP\nNP -> 'Alice' | 'Bob'\nV -> 'loves'\n\"\"\")\nparser = nltk.ChartParser(grammar)\ntrees = parser.parse_all(text15)\nfor tree in trees:\n    print(tree)","bd999041":"text16 = nltk.word_tokenize(\"I saw the man with a telescope\")\ngrammar1 = nltk.CFG.fromstring(\"\"\"\nS -> NP VP\nVP -> V NP | VP PP\nPP -> P NP\nNP -> DT N | DT N PP | 'I'\nDT -> 'a' | 'the'\nN -> 'man' | 'telescope'\nV -> 'saw'\nP -> 'with'\n\"\"\")\nparser1 = nltk.ChartParser(grammar1)\ntrees1 = parser1.parse_all(text16)\nfor tree in trees1:\n    print(tree)","d7cbc785":"from nltk.corpus import treebank","fd29c51b":"text17 = treebank.parsed_sents('wsj_0001.mrg')[0]\nprint(text17)","eccd42c9":"# Normalization and Stemming\n\n* the same word may occur in different forms","69cc1e45":"# NLTK and Parse Tree Collection","03a7a215":"# Tokenization, again","ccbc4057":"# Variation of stemming: Lemmatization","cf093bc7":"# NLTK. Part 2\n* part of speech tagging","205218b2":"# NLTK=Natural Language Toolkit. Part 1\n\n* Counting words, counting frequencies of words\n* Finding sentence boundaries","dcf3a1cf":"# Word Frequency","96eba90f":"### Ambiguity in POS tagging:"}}