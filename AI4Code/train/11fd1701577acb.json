{"cell_type":{"bb4f3e54":"code","6d239619":"code","e15367e8":"code","613feea8":"code","a4ed05ca":"code","4d68f9e9":"code","0155d0d9":"code","ff50e214":"code","ecf6fdee":"code","df5ff0d4":"code","69249993":"code","c3010e1f":"code","eac61ad9":"code","18fd5dd9":"code","6d3ce8a2":"markdown"},"source":{"bb4f3e54":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d239619":"from sklearn.model_selection import train_test_split","e15367e8":"train=pd.read_csv('\/kaggle\/input\/loandata\/Loan payments data.csv')\nprint('Shape=>',train.shape)\ntrain.head()","613feea8":"train['Gender'].value_counts()*100\/train['Gender'].count()","a4ed05ca":"X=train.drop(columns='Gender').values\nY=train['Gender'].values","4d68f9e9":"print(X.shape,Y.shape)","0155d0d9":"x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)","ff50e214":"print(x_train.shape,y_train.shape)\nprint(x_test.shape,y_test.shape)","ecf6fdee":"pd.Series(y_train).value_counts()*100\/len(y_train)","df5ff0d4":"pd.Series(y_test).value_counts()*100\/len(y_test)","69249993":"x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=42)","c3010e1f":"print(x_train.shape,y_train.shape)\nprint(x_test.shape,y_test.shape)","eac61ad9":"pd.Series(y_train).value_counts()*100\/len(y_train)","18fd5dd9":"pd.Series(y_test).value_counts()*100\/len(y_test)","6d3ce8a2":"#### Performing Stratified Train test split"}}