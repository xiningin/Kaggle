{"cell_type":{"f8ccf124":"code","3cb6b58a":"code","c00d3e8e":"code","ca4c562e":"code","6f317b54":"code","c5e42997":"code","74098a01":"code","0701670e":"code","98fdb47b":"code","dd5dce72":"code","2c4a0270":"code","0e4368d7":"code","4b2ab629":"code","08da6796":"code","4d3b8599":"code","a16d2531":"code","4beea37c":"markdown","fb2bbbed":"markdown","43165b0d":"markdown","562797f0":"markdown","de00ae54":"markdown","8ea9a2b7":"markdown","f4ea0c42":"markdown","617481c7":"markdown","bcd117f6":"markdown","c8e7046a":"markdown","68d986ee":"markdown","8f1e5d73":"markdown","4a1a5fab":"markdown","948f8274":"markdown","997b5273":"markdown"},"source":{"f8ccf124":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # Graphs & Visualization \nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","3cb6b58a":"dataset = pd.read_csv('..\/input\/Mall_Customers.csv')","c00d3e8e":"#Let's check the data\ndataset.head()","ca4c562e":"#Let's check the shape of data\ndataset.shape","6f317b54":"#Let's check datatypes\ndataset.dtypes","c5e42997":"dataset.isnull().sum()","74098a01":"plt.figure(1 , figsize = (17 , 8))\nn = 0 \nfor x in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n    n += 1\n    plt.subplot(1 , 3 , n)\n    sns.distplot(dataset[x] , bins = 20)\n    plt.title('Distplot of {}'.format(x))\nplt.show()","0701670e":"plt.figure(1 , figsize = (17 , 8))\nsns.countplot(y = 'Gender' , data = dataset)\nplt.show()","98fdb47b":"### Feature sleection for the model\n#Considering only 2 features (Annual income and Spending Score) and no Label available\nx = dataset.iloc[:, [3,4]].values","dd5dce72":"print(x)","2c4a0270":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1,11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","0e4368d7":"#KMeans is our Algorithms which provided in SKlearn\n#n_clusters is a nummber of clusters which we will define \nkmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\n#Let's predict the x\ny_kmeans = kmeans.fit_predict(x)","4b2ab629":"print(y_kmeans)\n#We convert our prediction to dataframe so we can easily see this prediction in table form\ndf_pred = pd.DataFrame(y_kmeans)\ndf_pred.head()","08da6796":"plt.figure(1 , figsize = (17 , 8))\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'yellow', label = 'Cluster 2')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'aqua', label = 'Cluster 3')\nplt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'violet', label = 'Cluster 4')\nplt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'lightgreen', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'navy', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","4d3b8599":"#Cluster 1 (Red Color) -> Earning medium but spending medium\n#cluster 2 (Yellow Colr) -> Earning High but spending very less \n#cluster 3 (Aqua Color) -> Earning is low & spending is low\n#cluster 4 (Violet Color) -> Earning is less but spending more -> Mall can target this type of people\n#Cluster 5 (Lightgereen Color) -> Earning High & spending more -> Mall can target this type of people\n#Navy color small circles is our Centroids","a16d2531":"plt.figure(1 , figsize = (17 , 8))\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Standard people')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'yellow', label = 'Tightwad people')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'aqua', label = 'Normal people')\nplt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'violet', label = 'Careless people(TARGET)')\nplt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'lightgreen', label = 'Rich people(TARGET)')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'navy', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","4beea37c":"* **Now we have to find numbers of cluster which we can plot so we can use Elbow method on Kmeans++ Calculations**","fb2bbbed":"**Refrence : - Machine learning A-Z course on Udemy**","43165b0d":"* **Let's Import the required libraries**","562797f0":"* **Now let's import the our Mall dataset**","de00ae54":"* **Let's Visualize the all 5 Clusters**","8ea9a2b7":"* **Now we make a cluster once again with perfect labels**","f4ea0c42":"* **Let's plot the Histogram**","617481c7":"* **Now we have to check a NULL values in dataset**","bcd117f6":"* **We can clearly see that(Zoom on ELBOW) ELBOW comes at k = 5 so we will choose a k = 5 so let's create the Clusters**","c8e7046a":"    Let's see a df_pred, it's our prediction means\n- 0 number customer belongs to 2 number cluster\n- 1 number customer belongs to 3 number cluster","68d986ee":"* **So finally we make the cutomer segmantaion of Mall dataset **","8f1e5d73":"* **Now let's select the features**","4a1a5fab":"* **Now let's plot the count of gender with Countplot**","948f8274":"* **Now let's visualize the data**","997b5273":"* **Let's Study the out Clusters**"}}