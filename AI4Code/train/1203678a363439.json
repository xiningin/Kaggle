{"cell_type":{"7bd9ad6c":"code","d3c82302":"code","5a2c2ed0":"code","82b57c0c":"code","70dc2cf4":"code","0414417a":"code","1a193692":"markdown"},"source":{"7bd9ad6c":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()","d3c82302":"import rx \nfrom rx import of,operators as op\nfrom rx.subject import Subject","5a2c2ed0":"DATA1 = \"apple\"\nDATA2 = \"orange\"\nDATA3 = \"melon\"\nDATA4 = \"kiwi\"","82b57c0c":"subject = Subject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")","70dc2cf4":"subject = Subject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA2)\nprint(\"\")\n\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Park : {0}\".format(x))\n)\n\nprint(\"publish 3\")\nsubject.on_next(DATA3)\nprint(\"\")","0414417a":"subject = Subject();\nsubject.subscribe(\n   lambda x: print(\"Subscriber Kim: {0}\".format(x))\n)\nprint(\"publish 1\")\nsubject.on_next(DATA1)\nsubject.on_next(DATA2)\nprint(\"\")\n\nsubject.subscribe(\n   lambda x: print(\"Subscriber Lee : {0}\".format(x))\n)\n\nprint(\"publish 2\")\nsubject.on_next(DATA3)\nprint(\"\")","1a193692":"# subject (observable + observer) \n\nA subject is an observable sequence, as well as, an observer.\n\nSubject won't give you value when called. \n\n(cf.Behavibor BehaviorSubject will give you the latest value when called.)"}}