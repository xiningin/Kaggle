{"cell_type":{"6485d6e8":"code","2e4b6a69":"code","58207032":"code","935c1db6":"code","0a5f13b0":"code","721c09c2":"code","bbd35ef9":"code","52ffbd8e":"code","a336b191":"code","29ab98d8":"code","c2391a8d":"code","d896c88e":"code","788fa44a":"code","155cdfd7":"code","7d2d1ab4":"code","f0fdcfbf":"code","037830bc":"code","f2b8e368":"code","9e6af874":"code","bf2533fd":"markdown","e9488cc5":"markdown","0b80c6ec":"markdown","2a81e5da":"markdown","017d640e":"markdown","f1affe7b":"markdown","702122df":"markdown","0c8b587d":"markdown","6510f8b9":"markdown","ffb45149":"markdown","4b017880":"markdown","9eb8fd41":"markdown","618d211d":"markdown","e6a669d9":"markdown"},"source":{"6485d6e8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2e4b6a69":"test_path='..\/input\/house-prices-advanced-regression-techniques\/test.csv'\ntrain_path = '..\/input\/house-prices-advanced-regression-techniques\/train.csv'\n\ntest = pd.read_csv(test_path, index_col= 'Id')\ntrain = pd.read_csv(train_path, index_col = 'Id')","58207032":"print(\"test shape:\",test.shape)\nprint(\"train shape:\",train.shape)","935c1db6":"train.head()","0a5f13b0":"missing_num = train.isnull().sum()\nmissing_cols = missing_num[missing_num>0]\nprint(missing_cols)\nprint(\"--- as percentage ---\")\nprint(missing_cols\/1460*100)","721c09c2":"sns.distplot(train['SalePrice'])\nplt.show()","bbd35ef9":"train['SalePrice'].describe()","52ffbd8e":"plt.figure(figsize=(15,15))\ncorrmat = train.corr()\nsns.heatmap(corrmat, vmax=.8, square=True)","a336b191":"plt.figure(figsize=(20,20))\nk = 20 # take the top k most correlated with SalePrice\ncols = corrmat.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': k}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","29ab98d8":"# potentially useful columns: ['LotFrontage', 'OverallQual', 'YearBuilt', 'MasVnrArea', 'TotalBsmtSF', 'GrLivArea', 'FullBath', 'HalfBath', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF','SalePrice']\nexplore_cols=['MasVnrArea', 'TotalBsmtSF', 'GrLivArea', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF']\nexplore_corr = train[explore_cols].corr()\nsns.heatmap(explore_corr, vmax=.8, square=True)\nplt.show()","c2391a8d":"train['RecSF'] = train['WoodDeckSF'] + train['OpenPorchSF']\ntrain['HouseSF'] = train['TotalBsmtSF'] + train['GrLivArea']\ntrain['Baths'] = train['FullBath'] + (train['HalfBath']\/2)","d896c88e":"useful_num_cols = ['OverallQual', 'YearBuilt', 'MasVnrArea', 'RecSF','HouseSF','Baths', 'GarageArea','SalePrice']\nsns.pairplot(train[useful_num_cols])\nplt.show();","788fa44a":"train[train['LotFrontage']>=300]\n# 935 and 1299","155cdfd7":"sns.violinplot(x=train['SaleCondition'], y= train[\"SalePrice\"])\nplt.show()\n# Looks like partial sell has two population?","7d2d1ab4":"# These two points are because of partial sale but still, very off\ntrain[train['HouseSF']>=5200]\n# 524, 1299","f0fdcfbf":"sns.violinplot(x=train['LandContour'], y= train[\"SalePrice\"])\nplt.show()","037830bc":"train.drop([524,935,1299], inplace=True)","f2b8e368":"# useful_num_cols = ['OverallQual', 'YearBuilt', 'MasVnrArea', 'RecSF','HouseSF','Baths', 'GarageArea','SalePrice']\n\ncat_cols = train.select_dtypes(include=['object']).columns\n# print(cat_cols)# 43 total\n\nfig, ax = plt.subplots(11,4, figsize=(15,40), dpi=100)\ni=1\nfor col in cat_cols:\n    plt.subplot(11,4,i)\n    sns.violinplot(x=train[col], y= train[\"SalePrice\"])\n    i+=1\n    \nplt.show()\n    \n","9e6af874":"pontential_cat_col=['MSZoning','Neighborhood','Condition1', 'HouseStyle','Exterior1st','MasVnrType','SaleType','SaleCondition']\n# 'ExterQual','ExterCond','BsmtQual','BsmtCond','HeatingQC','KitchenQual','FireplaceQu' - make it into 1 to 5, numerical\n\"\"\"\n       Ex\tExcellent - 5\n       Gd\tGood - 4\n       TA\tTypical\/Average - 3\n       Fa\tFair - 2\n       Po\tPoor - 1\n\"\"\"\n# make 'CentralAir' and 'Pool' binary\n# # Heating - get rid of Floor furnace?\n# 'MiscFeature' - might be adding bonus money if Gar2 or Shed present\n# FireplaceQual -- only matters if it is Excellet","bf2533fd":"# Data\n* Housing price data with information from basement conditions, nieghborhood, to shape of the the lot\n1. * the descripiton of the columns is in data_description.txt","e9488cc5":"# Steps\n1. open the input files\n2. inspect the data and look at different features\n    * look at missing data\n    * look at numerical data\n    * look at cateogorical data\n3. select which features to use","0b80c6ec":"# Dropping the three data points that are way off","2a81e5da":"## Distribution of sale price\n* skewed a little bit\n* lowest value is 1460, so no 0 values\n* the most expensive is extremly expensive --- has a tail","017d640e":"Let's plot pairwise plot to see if there is any correlations or something that look like outliers\n* HouseSF has two points that are extra large but with low saleprice\n* Again, two points in LotFrontage that are high\n* Looks like partial sale is not correlates with lower price","f1affe7b":"# Step 2 : explore the data\n* Checking on the missing data\n* Looking at the distribution of sale prices\n* plot the correlation between sale prices and numerical data","702122df":"# Missing Data","0c8b587d":"* If PoolArea is 0, then PoolQC does not apply\n* NaN on the other data means don't have it - NA\n* Not very important columns, since there are better features to use -- not worrying about it for now","6510f8b9":"# Step 1 : open the input files","ffb45149":"## Feature Engineering\n* Let's makea total living area\n* Sum the WoodDeckSF and OpenPorchSF into one, then ignore lotfrontage\n* Make number of bathroom be full bath + (HalfBath\/2)","4b017880":"* GrLivArea: Above grade (ground) living area square feet would be 1st and 2nd floor SF\n* TotalBasmtSF - basement area\n* Looks like OpenPorchSF and WoodDeckSF is treated similary even though they are not very correlated - take the average of the two?","9eb8fd41":"# Cateogorical Data","618d211d":"# Numerical Data\n## Looking at correlation between Sale Price and other numerical features and numerical features to each other\n* There are some closely related features  - Total BsmtSF and 1stFlrSF, GarageCars and GarageArea,  BsmtFullBath and BsmtFinSF1 etc\n* Just looking at sale priec correlation with others:\n    * high correlation with OveralQual, YearBuilt, GarageArea,FullBath,TotalRoomAbvGround \/ GrLiveArea, 1stFlSF\/ TOtalBsmtSF","e6a669d9":"These might matter:\n* MSZoning\n* Neighborhood\n* Condition1\n* HouseStyle\n* Exterior1st\n* MasVnrType\n* ExterQual\n* ExterCond - get rid of Po option?\n* BsmtQual\n* BsmtCond\n* Heating - get rid of Floor?\n* HeatingOC\n* CentralAir - make it binary\n* KitchenQual\n* FireplaceQual -- only matters if it is Excellet\n* Pool - only matter if there is one?\n* MiscFeature  - might be adding some bonus if Gar2 or Shed present\n* SaleType\n* SaleCondition\n\nCan eliminate options\n* RoofMatl\n\nLook like these features don't matter much:\n* LotShape\n* LandContour\n* Utilities\n* LotConfig\n* LandSlope\n* Condition2\n* BldgType\n* Exterior2nd\n* MasVnrType\n* Foundation\n* BsmtExposure\n* BsmtFinType1\n* BsmtFinTyp"}}