{"cell_type":{"beb43447":"code","0e97fbc9":"code","6a90ad9d":"code","0deb1555":"code","d47c8e39":"code","b7ccd9cd":"code","039bc3cd":"code","097e3962":"code","ee61baf4":"code","08e377cd":"code","98bf5a30":"code","4a188886":"code","ca078fe9":"code","9683564d":"code","aafd3121":"code","5801f547":"code","277bef29":"code","4dabb88b":"code","2f59cb78":"code","6d1f1cb5":"code","668cc92c":"code","ff822dd7":"code","78009e0e":"code","50774ad9":"code","8225281f":"code","34fc6cd9":"code","5b4dbcb3":"code","fdae7208":"code","f60af402":"code","64877281":"code","99040584":"code","88259e7a":"code","43de0333":"code","fac796a4":"code","cf5eda0f":"code","5d816b50":"code","318a4f64":"code","ede66c30":"code","a1d14231":"code","356e9823":"code","a31541c6":"code","f8b79e70":"code","a8fe0eaf":"code","b0627f78":"code","2dc43f0a":"code","52b3f541":"code","20fc2f4c":"code","e7b9bfad":"code","a35655b0":"code","e5679637":"code","6c95b9f7":"code","d06c8414":"code","03776030":"code","e0b68736":"code","443b9759":"code","df2f6acf":"code","46d56ca7":"code","99653eec":"code","17c90a21":"code","e3f74455":"code","d0c847c8":"code","7a306c14":"code","dfefb542":"code","a7fb6275":"code","83c76901":"code","e205a390":"code","08379df4":"code","9d3feee1":"code","23f47ddd":"code","229b8c72":"code","7b638193":"code","73d7c3a9":"code","4a005c9b":"code","bec86b92":"code","809a2f43":"code","185ca991":"markdown","3fecdd20":"markdown","ab660eb1":"markdown","694f8dc2":"markdown"},"source":{"beb43447":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0e97fbc9":"df_all = pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv\")","6a90ad9d":"df_all.head()","0deb1555":"df_all.columns","d47c8e39":"df_all[['GameId', 'PlayId', 'Team', 'X', 'Y', 'S', 'A',\n        'Dis', 'Orientation', 'Dir', 'NflId', 'DisplayName', 'JerseyNumber']].head()","b7ccd9cd":"df_all[['Season', 'YardLine', 'Quarter', 'GameClock', \n        'PossessionTeam', 'Down', 'Distance', 'FieldPosition']].head()","039bc3cd":"df_all[['HomeScoreBeforePlay', 'VisitorScoreBeforePlay',\n       'NflIdRusher', 'OffenseFormation', 'OffensePersonnel',\n       'DefendersInTheBox', 'DefensePersonnel']].head()","097e3962":"df_all[['PlayDirection', 'TimeHandoff','TimeSnap', 'Yards']].head()","ee61baf4":"df_all[['PlayerHeight', 'PlayerWeight', 'PlayerBirthDate',\n       'PlayerCollegeName', 'Position', 'HomeTeamAbbr', 'VisitorTeamAbbr']].head()","08e377cd":"df_all[['Week', 'Stadium', 'Location', 'StadiumType', 'Turf', 'GameWeather',\n       'Temperature', 'Humidity', 'WindSpeed', 'WindDirection']].head()","98bf5a30":"# \u9078\u624b\u4e00\u4eba\u6bce\u306e\u60c5\u5831\u304c\u3042\u308b\u5217\n# \u4ed6\u306e\u5217\u306f\u540c\u4e00PlayId\u5185\u3067\u306f\u540c\u3058\npersonal_columms = ['X', 'Y', 'S', 'A', 'Dis', 'Orientation', 'Dir', \n                    'NflId', 'DisplayName', 'JerseyNumber', \n                   'PlayerHeight', 'PlayerWeight', 'PlayerBirthDate','PlayerCollegeName', 'Position']","4a188886":"df_all.shape","ca078fe9":"pd.set_option(\"display.max_columns\", 80)","9683564d":"df_all.describe()","aafd3121":"import matplotlib.pyplot as plt","5801f547":"plt.tight_layout() \n\ndf_all.hist()\n#plt.show()","277bef29":"df_all.columns","4dabb88b":"# \u30dc\u30fc\u30eb\u3092\u6301\u3063\u3066\u3044\u308b\u9078\u624b\u306e\u884c\u306e\u307f\u3092\u9078\u629e\ndf_play = df_all[df_all[\"NflId\"]==df_all[\"NflIdRusher\"]]","2f59cb78":"df_play.tail()","6d1f1cb5":"df_play[\"Position\"].value_counts()","668cc92c":"df_play[df_play[\"Position\"].isin([\"DT\", \"DE\", \"CB\"])]","ff822dd7":"personal_columms","78009e0e":"import seaborn as sns","50774ad9":"sns.jointplot('A', 'Yards', data=df_play)","8225281f":"sns.jointplot('YardLine', 'Yards', data=df_play[df_play[\"PossessionTeam\"] == df_play[\"FieldPosition\"]])","34fc6cd9":"sns.jointplot('YardLine', 'Yards', data=df_play[df_play[\"PossessionTeam\"] != df_play[\"FieldPosition\"]])","5b4dbcb3":"sns.jointplot('X', 'Yards', data=df_all[df_all[\"Position\"]==\"HB\"])","fdae7208":"df_play[\"Yards\"].hist(range=(-20,30),bins=50)","f60af402":"df_play[\"Yards\"]","64877281":"from math import erf","99040584":"erf(1)","88259e7a":"df_all[\"Position\"].unique()","43de0333":"# \u30aa\u30d5\u30a7\u30f3\u30b9\u30c1\u30fc\u30e0\n# QB\n# RB\uff08FB\u3001HB\u3001TB\uff09\n# WR\uff08SE\u3001FL\u3001SB\u3001WB\uff09\n# TE\n# OL\uff08C\u3001G\u3001T\u3001E\uff09\n# \u30c7\u30a3\u30d5\u30a7\u30f3\u30b9\u30c1\u30fc\u30e0\n# DL\uff08DT\uff08NT\uff09\u3001DE\uff09\n# LB\uff08ILB\uff08MLB\uff09\u3001OLB\uff08LOLB\u3001ROLB\u3001SLB\u3001WLB\uff09\uff09\n# DB\uff08CB\u3001S\uff08SS\u3001FS\uff09\uff09\n# \u30b9\u30da\u30b7\u30e3\u30eb\u30c1\u30fc\u30e0\n# K\u3001P\u3001LS\u3001H\u3001KR\/PR\n\noffence_position = ['WR', 'TE', 'T', 'QB', 'RB', 'G', 'C', 'FB', 'HB',  'OT', 'OG', ]\n#OL_position = ['T', 'G', 'C', 'OT', 'OG']\n#RB_position = ['RB', 'FB', 'HB']\n\ndefence_position = ['SS', 'DE', 'ILB', 'FS', 'CB', 'DT', 'OLB', 'NT', 'MLB', 'LB', 'S', 'DL', 'DB', 'SAF']\n#DL_position = ['DL', 'DT', 'DE']\n#LB_position = ['LB', 'ILB', ]","fac796a4":"import math","cf5eda0f":"df_all[\"offence\"] = 0\ndf_all.loc[df_all[\"Position\"].isin(offence_position), \"offence\"] = 1","5d816b50":"df_all.head(23)[[\"Team\", \"Position\", \"offence\"]]","318a4f64":"position_count=df_all.groupby([\"PlayId\", \"Position\"]).count()\nposition_count","ede66c30":"df_position = position_count[\"GameId\"].unstack().fillna(0).astype(int)\ndf_position","a1d14231":"pd.merge(df_play, df_position, on=\"PlayId\").corr()[\"Yards\"].sort_values()","356e9823":"df_play","a31541c6":"df_play.loc[:, \"OffensePersonnel\"] = df_play[\"OffensePersonnel\"].apply(\n    lambda x : { i.split(\" \")[-1]:int(i.split(\" \")[-2]) for i in x.split(\",\")} )","f8b79e70":"df_play.loc[:, \"DefensePersonnel\"] = df_play[\"DefensePersonnel\"].apply(\n    lambda x : { i.split(\" \")[-1]:int(i.split(\" \")[-2]) for i in x.split(\",\")} )","a8fe0eaf":"for position in [\"DL\", \"LB\", \"DB\"]:\n    df_play.loc[:, position] = [ d[position] for d in df_play[\"DefensePersonnel\"]]\nfor position in [\"RB\", \"TE\", \"WR\"]:\n    df_play.loc[:, position] = [ d[position] for d in df_play[\"OffensePersonnel\"]]    ","b0627f78":"df_play","2dc43f0a":"df_play.corr()[\"Yards\"].sort_values()","52b3f541":"df_play[df_play[\"Team\"]==\"home\"].groupby(\"HomeTeamAbbr\").mean()[\"Yards\"].sort_values()","20fc2f4c":"team_home = df_play[df_play[\"Team\"]==\"home\"].groupby(\"HomeTeamAbbr\")","e7b9bfad":"df_play[\"HomeTeamAbbr\"].unique()","a35655b0":"team_yards = dict(list(df_play[df_play[\"Team\"]==\"home\"].groupby(\"HomeTeamAbbr\")[\"Yards\"]))","e5679637":"plt.hist(team_yards[\"CAR\"], bins=30)\nplt.hist(team_yards[\"WAS\"], bins=30)","6c95b9f7":"dict","d06c8414":"df_play[df_play[\"Team\"]==\"home\"].groupby(\"HomeTeamAbbr\").mean()[\"Yards\"].hist()","03776030":"df_play[df_play[\"Team\"]==\"away\"].groupby(\"VisitorTeamAbbr\").mean()[\"Yards\"].hist()","e0b68736":"np.array([[1,2,2,5]]).mean()","443b9759":"df[\"OffenseFormation\"].unique()","df2f6acf":"df[\"OffensePersonnel\"].unique()","46d56ca7":"df[\"StadiumType\"]","99653eec":"df[\"stadiumsype\"] = df[\"StadiumType\"].isin()","17c90a21":"df[\"PlayDirection\"].unique()","e3f74455":"personal_yards = df_play[[\"NflId\", \"Yards\"]].groupby(\"NflId\").agg([\"mean\", \"std\", \"max\", \"min\", \"count\"])[\"Yards\"]\npersonal_yards.dropna(inplace=True)\n","d0c847c8":"personal_yards","7a306c14":"df_play = df_play.merge(personal_yards, on=\"NflId\", how=\"left\")","dfefb542":"df_play.corr()[\"Yards\"].sort_values()","a7fb6275":"len(df_play.index)","83c76901":"df_play[\"Yards\"].value_counts().head(30)","e205a390":"pd.","08379df4":"df_play[df_play[\"Yards\"]>50].sort_values(\"Yards\")[[\"YardLine\", \"Yards\"]]","9d3feee1":"len(df_play[df_play[\"Yards\"]+df_play[\"YardLine\"]==100].index)","23f47ddd":"df_play[df_play[\"Yards\"]>20].corr()[\"Yards\"].sort_values()","229b8c72":"df_play.loc[:, \"over20\"] = (df_play[\"Yards\"]>20)*1","7b638193":"df_play.loc[:, \"touchdown\"] = (df_play[\"Yards\"]+df_play[\"YardLine\"]==100)","73d7c3a9":"(df_play[\"Yards\"]+df_play[\"YardLine\"]==100)","4a005c9b":"df_play[[\"over20\", \"touchdown\"]]","bec86b92":"df_play.corr()[\"touchdown\"].sort_values()","809a2f43":"df_play.corr()[\"over20\"].sort_values()","185ca991":"## \u30dd\u30b8\u30b7\u30e7\u30f3\u6bce\u306e\u4eba\u6570","3fecdd20":"## \u30c7\u30fc\u30bf\u78ba\u8a8d","ab660eb1":"### \u8aad\u307f\u8fbc\u307f","694f8dc2":"## \u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u5206\u985e"}}