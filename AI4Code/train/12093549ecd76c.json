{"cell_type":{"2764a241":"code","c7386077":"code","5568140f":"code","85178215":"code","fd165117":"code","afc4c393":"code","fd2d641e":"code","12f8b114":"code","54e5e58f":"code","7dde8174":"code","09ffc2d2":"code","88e0de96":"code","e2a6a911":"code","792bd703":"code","b3afd0ef":"code","c68bb1e4":"code","6bc3b32b":"code","7cf0299f":"code","83fb2fe0":"code","cdaf8155":"code","51f134d0":"code","9a207f15":"code","2edc56fe":"code","913043c6":"code","529b9b97":"code","a70d9798":"code","4c800dba":"code","12f2d90f":"code","0b1422a5":"code","b9fe42ae":"code","a51225e7":"code","b6cb877d":"code","dc7daaae":"code","94f2c09f":"code","d2139763":"markdown","6f2637ab":"markdown","f7f07b44":"markdown","3a6f5186":"markdown","3676a3d0":"markdown","c7145db5":"markdown","36a50782":"markdown","fd2746cf":"markdown","82f42c68":"markdown","1e0b6aa0":"markdown","ba8cde40":"markdown","2311ec98":"markdown","c70de973":"markdown"},"source":{"2764a241":"import numpy as np\nimport pandas as pd\n\ndf = pd.read_csv(\"..\/input\/perrin-freres-monthly-champagne-sales\/Perrin Freres monthly champagne sales millions.csv\")","c7386077":"df.head()","5568140f":"df.tail()","85178215":"df.columns = ['Months','Sales']","fd165117":"df.tail()","afc4c393":"## Droping last two rows\n\ndf.drop(105,axis=0,inplace=True)\ndf.drop(106,axis=0,inplace=True)","fd2d641e":"df.tail()","12f8b114":"df['Months'] = pd.to_datetime(df['Months'])\ndf.head() ","54e5e58f":"###making date as index for prediction based on date\ndf.set_index('Months',inplace=True)\n","7dde8174":"df.head()","09ffc2d2":"df.describe()","88e0de96":"df.plot()","e2a6a911":"###Checking for stationary\nfrom statsmodels.tsa.stattools import adfuller\ntest = adfuller(df['Sales'])\n\n","792bd703":"def adfuller_test(sales):\n    result=adfuller(sales)\n    labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n    for value,label in zip(result,labels):\n        print(label+' : '+str(value) )\n    if result[1] <= 0.05:\n        print(\"strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data has no unit root and is stationary\")\n    else:\n        print(\"weak evidence against null hypothesis, time series has a unit root, indicating it is non-stationary \")","b3afd0ef":"adfuller_test(df['Sales'])","c68bb1e4":"df['sales_diff'] = df['Sales'] - df['Sales'].shift(12)","6bc3b32b":"df[\"sales_diff\"].dropna(inplace=True)","7cf0299f":"### removing null values before passing to the function\nadfuller_test(df[\"sales_diff\"].dropna())","83fb2fe0":"df[\"sales_diff\"].plot()","cdaf8155":"from pandas.plotting import autocorrelation_plot\nautocorrelation_plot(df['Sales'])\n","51f134d0":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf\nimport matplotlib.pyplot as plt\n%matplotlib inline","9a207f15":"fig = plt.figure(figsize=(12,8))\nax1 = fig.add_subplot(211)\nfig = plot_acf(df['sales_diff'].iloc[13:],lags=40,ax=ax1)\nax2 = fig.add_subplot(212)\nfig = plot_pacf(df['sales_diff'].iloc[13:],lags=40,ax=ax2)","2edc56fe":"# For non-seasonal data\n#p=1, d=1, q=0 or 1\nfrom statsmodels.tsa.arima.model import ARIMA\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")","913043c6":"model=ARIMA(df['Sales'],order=(1,1,1))\nmodel_fit=model.fit()","529b9b97":"\nmodel_fit.summary()","a70d9798":"df['forecast']=model_fit.predict(start=90,end=103,dynamic=True)\ndf[['Sales','forecast']].plot(figsize=(12,8))","4c800dba":"import statsmodels.api as sm","12f2d90f":"model=sm.tsa.statespace.SARIMAX(df['Sales'],order=(1, 1, 1),seasonal_order=(1,1,1,12))\nresults=model.fit()","0b1422a5":"df['forecast']=results.predict(start=90,end=103,dynamic=True)\ndf[['Sales','forecast']].plot(figsize=(12,8))","b9fe42ae":"\nfrom pandas.tseries.offsets import DateOffset\nfuture_dates=[df.index[-1]+ DateOffset(months=x)for x in range(0,24)]","a51225e7":"future_datest_df=pd.DataFrame(index=future_dates[1:],columns=df.columns)","b6cb877d":"future_datest_df.tail()","dc7daaae":"future_df=pd.concat([df,future_datest_df])","94f2c09f":"\nfuture_df['forecast'] = results.predict(start = 104, end = 120, dynamic= True)  \nfuture_df[['Sales', 'forecast']].plot(figsize=(12, 8))","d2139763":"General Steps in Arima models","6f2637ab":"##### Differencing","f7f07b44":"#### Auto Regressive integrated Moving Averages","3a6f5186":"Hypothesis testing\n\n#### H0 null Hypothesis (it  is sationary)\n#### H1 Alternate Hypothesis (not stationary)","3676a3d0":"#### Step 2 : VIsualize the data","c7145db5":">Visualise time series data\n\n>Make the time series data stationary\n\n>Plot correlation and autocorrelation charts\n\n>Construct ARIMA and Seasonal ARIMA Models\n\n>Use the model to make prediction","36a50782":"### Final Thoughts on Autocorrelation and Partial Autocorrelation\nIdentification of an AR model is often best done with the PACF.\n\nFor an AR model, the theoretical PACF \u201cshuts off\u201d past the order of the model. The phrase \u201cshuts off\u201d means that in theory the partial autocorrelations are equal to 0 beyond that point. Put another way, the number of non-zero partial autocorrelations gives the order of the AR model. By the \u201corder of the model\u201d we mean the most extreme lag of x that is used as a predictor.\n\nIdentification of an MA model is often best done with the ACF rather than the PACF.\n\nFor an MA model, the theoretical PACF does not shut off, but instead tapers toward 0 in some manner. A clearer pattern for an MA model is in the ACF. The ACF will have non-zero autocorrelations only at lags involved in the model.","fd2746cf":"Since we need yearly diffenrence between each month we are making shift to 12 months","82f42c68":"#### Auto Regressive model","1e0b6aa0":"we can see that the data has become somewhat stationery","ba8cde40":"## ARIMA and Seasonal ARIMA","2311ec98":"Shifting one postion downwords and finding the difference between records","c70de973":"p - AR Model lags\n\nd - differencing \n\nq - MA Model lags"}}