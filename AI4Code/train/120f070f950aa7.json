{"cell_type":{"9f2241ff":"code","7c3d0c16":"code","87d15455":"code","8c5fb807":"code","8df0a2fa":"code","74cc4511":"code","af12f8f3":"code","8248b131":"code","203a6167":"code","9f8d6369":"code","6ea9b867":"code","eea9f08b":"code","120087ab":"code","d7d2c261":"code","a3c09227":"code","8c140f13":"markdown","f43a1266":"markdown","d8c5d16a":"markdown","a05d948d":"markdown","7f73fd13":"markdown","7d194efb":"markdown","6f701dc5":"markdown","e9f38fc7":"markdown","f30ed1e9":"markdown","d7f8f6a3":"markdown"},"source":{"9f2241ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n#pd.set_option('display.max_colwidth', -1)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom matplotlib_venn import venn2, venn2_circles\n\nfrom matplotlib.patches import Rectangle, Circle, RegularPolygon\nfrom matplotlib.path import Path\nfrom matplotlib.projections.polar import PolarAxes\nfrom matplotlib.projections import register_projection\nfrom matplotlib.spines import Spine\nfrom matplotlib.transforms import Affine2D\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport re\nimport string\n\nimport spacy # Leading library for NLP\nnlp = spacy.load('en')\nfrom wordcloud import WordCloud\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.stem import SnowballStemmer\n\nfrom sklearn import preprocessing\n\n# import cities response df\nPATH = \"..\/input\/cdp-unlocking-climate-solutions\/\"\n","7c3d0c16":"# Load data and unify column_names, columns, and values for further processing\ncorporations_disclosing_df = pd.DataFrame()\ncorporations_df = pd.DataFrame()\n\ncities_disclosing_df = pd.DataFrame()\ncities_df = pd.DataFrame()\n\nfor year in [2018, 2019, 2020]:\n    # Load corporations disclosing\n    climate_disclosing = pd.read_csv(f\"{PATH}Corporations\/Corporations Disclosing\/Climate Change\/{year}_Corporates_Disclosing_to_CDP_Climate_Change.csv\")\n    corporations_disclosing_df = corporations_disclosing_df.append(climate_disclosing)\n    \n    water_disclosing = pd.read_csv(f\"{PATH}Corporations\/Corporations Disclosing\/Water Security\/{year}_Corporates_Disclosing_to_CDP_Water_Security.csv\")\n    corporations_disclosing_df = corporations_disclosing_df.append(water_disclosing)\n    \n    # Load corporations' responses\n    climate = pd.read_csv(f\"{PATH}Corporations\/Corporations Responses\/Climate Change\/{year}_Full_Climate_Change_Dataset.csv\")\n    climate['questionnaire'] = 'Corporations Climate Change'\n    climate['section'] = 'tbd'\n    climate['question_number_major'] = climate['question_number'].apply(lambda x: float(x.split('.')[0][1:]))\n    climate['question_number_minor'] = climate['question_number'].apply(lambda x: x.split('.')[1])\n    \n    corporations_df = corporations_df.append(climate)\n    \n    water = pd.read_csv(f\"{PATH}Corporations\/Corporations Responses\/Water Security\/{year}_Full_Water_Security_Dataset.csv\")\n    water['questionnaire'] = 'Corporations Water'\n    water['section'] = 'tbd'\n    water['question_number_major'] = water['question_number'].apply(lambda x: x.split('.')[0])\n    water['question_number_major'] = water['question_number_major'].apply(lambda x: int(x.split('-')[1][-1]) if (len(x.split('-')) > 1) else float(x[1:]) )\n    water['question_number_minor'] = water['question_number'].apply(lambda x: x.split('.')[1])\n    \n    corporations_df = corporations_df.append(water)\n    \n    # Load cities disclosing\n    cities_disclosing = pd.read_csv(f\"{PATH}Cities\/\/Cities Disclosing\/{year}_Cities_Disclosing_to_CDP.csv\")\n    cities_disclosing_df = cities_disclosing_df.append(cities_disclosing)\n\n    # Load cities' responses\n    cities = pd.read_csv(f\"{PATH}Cities\/Cities Responses\/{year}_Full_Cities_Dataset.csv\")\n    cities['question_number_major'] = cities['Question Number'].apply(lambda x: x.split('.')[0])\n    cities['question_number_minor'] = cities['Question Number'].apply(lambda x: x.split('.')[1] if (len(x.split('.')) > 1) else '')\n    cities_df = cities_df.append(cities)\n\n\ndef unify_column_names_city(columns):\n    \"\"\"\n    Unifies column naming to lower letters and underscores\n    \"\"\"\n    new_cols = []\n    for c in columns:\n        if c == 'Year Reported to CDP':\n            new_cols.append('survey_year')\n        elif c == 'Response Answer':\n            new_cols.append('response_value')\n        elif c == 'Column Name':\n            new_cols.append('subquestion_name')\n        else:\n            new_cols.append(re.sub(' ','_', c.lower()))\n\n    return new_cols\n\ndef unify_column_names_corp(columns):\n    new_cols = []\n    \"\"\"\n    Unifies column naming to match column names in city questionnaire\n    \"\"\"\n    for c in columns:\n        if c == 'question_unique_reference':\n            new_cols.append('question_name')\n        elif c == 'module_name':\n            new_cols.append('parent_section')\n        elif c == 'data_point_name':\n            new_cols.append('subquestion_name')\n        else:\n            new_cols.append(c)\n\n    return new_cols\n\n# Unify column names\ncities_df.columns = unify_column_names_city(cities_df.columns)\ncities_disclosing_df.columns = unify_column_names_city(cities_disclosing_df.columns)\n\ncorporations_df.columns = unify_column_names_corp(corporations_df.columns)\n#cities_disclosing_df.columns = unify_column_names_corp(cities_disclosing_df.columns)\ncommon_columns = [c for c in corporations_df.columns if c in cities_df.columns]\n#print(f\"Common columns in responses: {common_columns}\")\n\n# Unify column 'module_name' and 'questionnaire'\ncorporations_df['parent_section'] = corporations_df['parent_section'].apply(lambda x: x.split('. ')[1])\ncities_df.questionnaire = 'Cities'","87d15455":"corporation_sections_by_year = corporations_df.groupby(['questionnaire', 'question_number_major', 'parent_section', 'survey_year']).survey_year.nunique().to_frame()\ncorporation_sections_by_year.columns = ['count']\ncorporation_sections_by_year = corporation_sections_by_year.reset_index(drop=False)\ncorporation_sections_by_year = corporation_sections_by_year.pivot(index=['questionnaire', 'question_number_major', 'parent_section'], columns='survey_year')['count'].fillna(0)\n\nfor c in corporation_sections_by_year.columns:\n    corporation_sections_by_year[c] = corporation_sections_by_year[c].astype(int)\n\ndef color_negative_red(val):\n    color = 'Orangered' if val > 0 else 'gray'\n    return 'background-color: %s' % color\n\ncorporation_sections_by_year.style.applymap(color_negative_red)","8c5fb807":"dict_parent_section = {'City Wide Emissions' : 'City-wide Emissions',\n                      'Climate Hazards' : 'Climate Hazards and Vulnerability',\n                      'Climate Hazards & Vulnerability' : 'Climate Hazards and Vulnerability',\n                      'Emissions Reduction: City-wide' : 'Emissions Reduction',\n                      'Emissions Reduction: Local Government' : 'Emissions Reduction',\n                      'Local Government Operations GHG Emissions Data' : 'Local Government Emissions',\n                      'Water' : 'Water Security',\n                       'Strategy' : 'Emissions Reduction',\n                      }\n\ndict_section = {'GHG Emissions Data' : 'City-wide GHG Emissions Data',\n                'Risk and Vulnerability Assessment' : 'Climate Risk and Vulnerability Assessment',\n                'Emissions Reduction Actions : City-wide' : 'Mitigation Actions',\n                'Emissions Reduction Actions: Local Government' : 'Mitigation Actions',\n                'Emissions Reduction: City-wide' : 'Mitigation Actions',\n                'Emissions Reduction: Local Government' : 'Mitigation Actions',\n                'Emissions Verification' : 'Local Government Emissions Verification',\n                'Boundary & Scope' : 'Local Government Operations GHG Emissions Data',\n                'Scope 3 Emissions' : 'Local Government Operations GHG Emissions Data',\n                'Data Management' : 'Governance'\n               }\n\ncities_df['parent_section'] = np.where((cities_df['parent_section'].isna()), cities_df['section'], cities_df['parent_section']) \n\ncities_df['parent_section'] = cities_df['parent_section'].replace(dict_parent_section)\ncities_df['section'] = cities_df['section'].replace(dict_section)\n\ncities_df['parent_section'] = np.where(((cities_df['parent_section']==\"Hazards and Adaptation\") & (cities_df['section']==\"Climate Hazards\") & (cities_df['survey_year']==2018)), 'Climate Hazards and Vulnerability', cities_df['parent_section']) \ncities_df['section'] = np.where(((cities_df['parent_section']==\"Hazards and Adaptation\") & (cities_df['section']==\"Climate Hazards\") & (cities_df['survey_year']==2018)), 'Climate Risk and Vulnerability Assessment', cities_df['section']) \n\ncities_df['parent_section'] = np.where(((cities_df['parent_section']==\"Hazards and Adaptation\") & (cities_df['section']==\"Adaptation\") & (cities_df['survey_year']==2018)), 'Adaptation', cities_df['parent_section']) \ncities_df['section'] = np.where(((cities_df['parent_section']==\"Hazards and Adaptation\") & (cities_df['section']==\"Adaptation\") & (cities_df['survey_year']==2018)), 'Adaptation Planning', cities_df['section']) \n\ncities_df['parent_section'] = np.where(((cities_df['parent_section']==\"Energy Data\") & (cities_df['section']==\"Scope 1 Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'Local Government Emissions', cities_df['parent_section']) \ncities_df['section'] = np.where(((cities_df['parent_section']==\"Energy Data\") & (cities_df['section']==\"Scope 1 Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'Local Government Operations GHG Emissions Data', cities_df['section']) \n\ncities_df['parent_section'] = np.where(((cities_df['parent_section']==\"GHG Emissions Data\") & (cities_df['section']==\"IPCC Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'City-wide Emissions', cities_df['parent_section']) \ncities_df['section'] = np.where(((cities_df['parent_section']==\"GHG Emissions Data\") & (cities_df['section']==\"IPCC Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'City-wide GHG Emissions Data', cities_df['section']) \n\ncities_df['parent_section'] = np.where(((cities_df['parent_section']==\"City-wide Emissions\") & (cities_df['section']==\"IPCC Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'City-wide Emissions', cities_df['parent_section']) \ncities_df['section'] = np.where(((cities_df['parent_section']==\"City-wide Emissions\") & (cities_df['section']==\"IPCC Emissions Breakdown\") & (cities_df['survey_year']==2018)), 'City-wide GHG Emissions Data', cities_df['section']) \n\n#cities_df['Parent Section'] = np.where(((cities_df['Parent Section']==\"City-wide Emissions\") & (cities_df['Section']==\"City-wide GHG Emissions Data\") & (cities_df['Questionnaire']==\"CDP Cities 2018\")), 'GHG Emissions Data', cities_df['Parent Section']) \n#cities_df['Section'] = np.where(((cities_df['Parent Section']==\"City-wide Emissions\") & (cities_df['Section']==\"City-wide GHG Emissions Data\") & (cities_df['Questionnaire']==\"CDP Cities 2018\")), 'US Community Protocol Emissions Breakdown', cities_df['Section']) \n\ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"City-wide Emissions\") & (cities_df['survey_year']==2018)), '4', cities_df['question_number_major']) \ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Emissions Reduction\") & (cities_df['survey_year']==2018)), '5', cities_df['question_number_major']) \n\ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Local Government Emissions\") & (cities_df['survey_year']==2018)), '7', cities_df['question_number_major']) \ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Opportunities\") & (cities_df['survey_year']==2018)), '6', cities_df['question_number_major']) \ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Water Security\") & (cities_df['survey_year']==2018)), '14', cities_df['question_number_major']) \ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Hazards and Adaptation\") & (cities_df['survey_year']==2018)), '3.1', cities_df['question_number_major']) \ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"Energy Data\") & (cities_df['survey_year']==2018)), '5.2', cities_df['question_number_major'])\ncities_df['question_number_major'] = np.where(((cities_df['parent_section']==\"GHG Emissions Data\") & (cities_df['survey_year']==2018)), '5.1', cities_df['question_number_major']) \n\n\ncities_df['parent_section'] = np.where((cities_df['question_number_major']==\"Response Language\"), 'Response Language', cities_df['parent_section']) \ncities_df['parent_section'] = np.where((cities_df['question_number_major']==\"Amendments_question\"), 'Amendments_question', cities_df['parent_section']) \ncities_df['question_number_major'] = np.where(((cities_df['question_number_major']==\"Response Language\") | (cities_df['question_number_major']==\"Amendments_question\")), '-1', cities_df['question_number_major']) \ncities_df['question_number_major'] = cities_df['question_number_major'].apply(lambda x: float(x))\n\n#cities_df.groupby(['questionnaire', 'question_number_major', 'parent_section']).survey_year.unique().to_frame() #'question_number_major',\n\ncities_sections_by_year = cities_df.groupby(['questionnaire', 'question_number_major', 'parent_section', 'survey_year']).survey_year.nunique().to_frame()\ncities_sections_by_year.columns = ['count']\ncities_sections_by_year = cities_sections_by_year.reset_index(drop=False)\ncities_sections_by_year = cities_sections_by_year.pivot(index=['questionnaire', 'question_number_major', 'parent_section'], columns='survey_year')['count'].fillna(0)\n\nfor c in cities_sections_by_year.columns:\n    cities_sections_by_year[c] = cities_sections_by_year[c].astype(int)\n\ndef color_negative_red(val):\n    color = 'Orangered' if val > 0 else 'gray'\n    return 'background-color: %s' % color\n\ncities_sections_by_year.style.applymap(color_negative_red)","8df0a2fa":"def clean_text(x):\n    # Convert text to lowercase\n    x = x.lower() \n\n    # Remove punctuation\n    x = re.sub(\"[%s]\" % re.escape(string.punctuation), \"\", x)\n\n    # Remove non-Roman characters\n    x = re.sub(\"([^\\x00-\\x7F])+\", \" \", x)\n    \n    # Tokenize\n    x = nlp(x)\n\n    stemmer = SnowballStemmer(\"english\")\n\n    x_clean = \"\"\n    for token in x:\n        # Remove stop words and remove words with fewer than 3 chars\n        if (not token.is_stop) and len(token) > 3:# and (token.tag_ == 'NN'):\n            # Lemmatize and tokenize\n            x_clean += stemmer.stem(token.lemma_) + \" \"\n    \n    return x_clean\n\nquestionnaire_sections = cities_df.groupby(['questionnaire', 'question_number_major', 'parent_section']).question_name.unique().to_frame().append(corporations_df.groupby(['questionnaire', 'question_number_major', 'parent_section']).question_name.unique().to_frame())\nquestionnaire_sections = questionnaire_sections.reset_index(drop=False)\nquestionnaire_sections['question_name'] = questionnaire_sections['question_name'].apply(lambda x: ' '.join(x))\nquestionnaire_sections['question_name'] = questionnaire_sections['question_name'].apply(lambda x: clean_text(x))\n\ncv = CountVectorizer(ngram_range=(1,1)) # Not Includes bigrams\ndata_cv = cv.fit_transform(questionnaire_sections['question_name'])\ndata_dtm = pd.DataFrame(np.minimum(data_cv.toarray(),1), columns = cv.get_feature_names())\ndata_dtm.index = questionnaire_sections.index\n\n# Calculate cosine similarity (probably not ideal metric here but sufficient for rough similarity check between sections)\nsimilarity_matrix = np.zeros((len(questionnaire_sections), len(questionnaire_sections)))\nfor i in range(len(questionnaire_sections)):\n    l1 = data_dtm.iloc[i]\n    for j in range((i+1), len(questionnaire_sections)): \n        l2 = data_dtm.iloc[j]\n        # cosine formula\n        c = 0\n        for k in range(len(data_dtm.columns)): \n            c+= l1[k]*l2[k] \n        cosine = c \/ float((sum(l1)*sum(l2))**0.5) \n        similarity_matrix[i, j] = cosine\n\n\n# Visualize similarity matrix\nquestionnaire_sections['questionnaire_section'] = questionnaire_sections.questionnaire + ' ' + questionnaire_sections.parent_section\nsimilarity_matrix_df = pd.DataFrame(data=similarity_matrix, index=questionnaire_sections.questionnaire_section, columns=questionnaire_sections.questionnaire_section )\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(16,12))\ncorporation_sections = [c for c in similarity_matrix_df.columns if c.startswith('Corporations')]\nsns.heatmap(similarity_matrix_df[corporation_sections].iloc[2:20], cmap='Greys',  annot=True, vmax=0.55,)\nax.set_title('Cosine Similarity between Parent Sections in Questionnaires', fontsize=14)\nax.add_patch(Rectangle((0, 0), 8, 18, fill=False, alpha=0.9, color='Black', lw=3))\nax.add_patch(Rectangle((8, 0), 7, 18, fill=False, alpha=0.9, color='Black', lw=3))\nplt.ylabel(\"Cities' Questionnaire\", fontsize=14)\nplt.xlabel(\"Corporations' Questionnaire\", fontsize=14)\n\n# Introductions\nax.add_patch(Rectangle((0, 0), 1, 1, fill=False, alpha=1, color='Tomato', lw=5))\nax.annotate('Introduction', xy=(1.1, 1), fontsize=14, color='Tomato')#, weight='bold')#, horizontalalignment='center',verticalalignment='center') \n\nax.add_patch(Rectangle((8, 0), 1, 1, fill=False, alpha=1, color='Tomato', lw=5))\nax.annotate('Introduction', xy=(9.1, 1), fontsize=14, color='Tomato')#, weight='bold')#, horizontalalignment='center',verticalalignment='center') \n\n# Cities and Corp. Climate Change\nax.add_patch(Rectangle((3, 5), 4, 7, fill=False, alpha=1, color='Red', lw=5))\nax.annotate('Emissions & Energy', xy=(5, 4.9), fontsize=14, color=\"Red\", horizontalalignment='center') #verticalalignment='center', , weight='bold'\n\n# Cities and Corp. Climate Change\nax.add_patch(Rectangle((9, 17), 7, 1, fill=False, alpha=1, color='Orangered', lw=5))\nax.annotate('Water', xy=(9.1, 16.9), fontsize=14, color=\"Orangered\", horizontalalignment='center') #verticalalignment='center', , weight='bold'\n\nplt.show()\n","74cc4511":"question_count = corporations_df.groupby(['survey_year', 'questionnaire']).question_name.nunique().to_frame().append(cities_df.groupby(['survey_year', 'questionnaire']).question_name.nunique().to_frame())\nquestion_count = question_count.reset_index(drop=False)\nquestion_count = question_count.pivot(index='survey_year',columns='questionnaire')['question_name']\nquestion_count.style.set_caption('Number of questions by Year and Questionnaire')","af12f8f3":"# Unify\/clean corporation questions\ndict_question_name = {\n    'Account for your organization\u00e2\u20ac\u2122s Scope 3 emissions, disclosing and explaining any exclusions.' : \n    'Account for your organization\u00e2\u20ac\u2122s gross global Scope 3 emissions, disclosing and explaining any exclusions.',\n    'By river basin, what is the number and proportion of facilities exposed to water risks that could have a substantive financial or strategic impact on your business, and what is the potential business impact associated with those facilities?' :\n    'By river basin, what is the number and proportion of facilities exposed to water risks that could have a substantive impact on your business, and what is the potential business impact associated with those facilities?',\n    \"Which risk types are considered in your organization's climate-related risk assessments?\" : \n    \"Which of the following risk types are considered in your organization's climate-related risk assessments?\",\n    \"For your electricity generation activities, provide details of your nameplate capacity and the generation for each technology.\" : \n    \"For your electricity generation activities, provide details of your nameplate capacity and the generation for each power source.\",\n    \"Select the countries for which you will be supplying data.\" : \"Select the countries\/regions for which you will be supplying data.\",\n    \"Select the countries\/areas for which you will be supplying data.\" : \"Select the countries\/regions for which you will be supplying data.\",\n    \"For each facility referenced in W4.1c, provide coordinates, water accounting data, and a comparison with the previous reporting year.\" : \n    \"For each facility referenced in W4.1c, provide coordinates, total water accounting data and comparisons with the previous reporting year.\",\n    \"Explain why you did not have an emissions target, and forecast how your emissions will change over the next five years.\" :\n    \"Explain why you do not have emissions target and forecast how your emissions will change over the next five years.\",\n    \"For each facility referenced in W4.1c, provide coordinates, water accounting data, and a comparison with the previous reporting year.\" : \n    \"For each facility referenced in W4.1c, provide coordinates, total water accounting data and comparisons with the previous reporting year.\",\n    \"Identify the total number of projects at each stage of development, and for those in the implementation stages, the estimated CO2e savings.\" : \n    \"Identify the total number of initiatives at each stage of development, and for those in the implementation stages, the estimated CO2e savings.\",\n    \"For each facility referenced in W4.1c, provide coordinates, water accounting data, and a comparison with the previous reporting year.\" : \n    \"For each facility referenced in W4.1c, provide coordinates, total water accounting data and comparisons with the previous reporting year.\",\n    \"Provide details on the electricity, heat, steam, and\/or cooling amounts that were accounted for at a zero emission factor in the market-based Scope 2 figure reported in C6.3.\" :\n    \"Provide details on the electricity, heat, steam and\/or cooling amounts that were accounted for at a low-carbon emission factor in the market-based Scope 2 figure reported in C6.3.\",\n    \"For each facility referenced in W4.1c, provide coordinates, water accounting data, and a comparison with the previous reporting year.\" :\n    \"For each facility referenced in W4.1c, provide coordinates, total water accounting data and comparisons with the previous reporting year.\",\n    }\n\ncorporations_df['question_name'] = corporations_df['question_name'].replace(dict_question_name)\n\nquestions_corporations = corporations_df.groupby(['question_name']).survey_year.nunique().to_frame()\n#questions_corporations[questions_corporations.survey_year <3]\n#questions_corporations.survey_year.value_counts()\nprint(f\"{len(questions_corporations[questions_corporations.survey_year==3])} questions have been asked every year in the corporation questionnaires.\")\n\n# Unify\/clean city questions\ndict_question_name = {\n    'Are you aware of any substantive current or future risks to your city\u2019s water supply?' : \n    'Are you aware of any substantive current or future risks to your city\u2019s water security?',\n    'Do you have a GHG emissions reduction target in place at the city-wide level? Select all that apply.' : \n    'Do you have a GHG emissions reduction target(s) in place at the city-wide level?',\n    'Do you have an emissions inventory for your local government operations to report? Reporting a Local Government Operations emissions inventory is optional.' : \n    'Do you have an emissions inventory for your local government operations to report?',\n    'Does your city collaborate in voluntary partnership with businesses in your city on sustainability projects?' : \n    'Does your city collaborate in partnership with businesses in your city on sustainability projects?',\n    'Does your city council have a published plan that addresses climate change adaptation?' : \n    'Does your city council, or similar authority, have a published plan that addresses climate change adaptation?',\n    'Does your city have a climate change action plan for reducing city-wide GHG emissions?' : \n    'Does your city have a climate change mitigation or energy access plan for reducing city-wide GHG emissions?',\n    'Does your city have an update \/ revision process for the climate risk or vulnerability assessment?' : \n    'Does your city have an update\/revision process for the climate risk and vulnerability assessment?',\n    'Has the Mayor or local government committed to adapting to climate change across the geographical area of the city, town or settlement?' : \n    'Has the Mayor or city council committed to climate adaptation and\/or mitigation across the geographical area of the city? ',\n    'Has the Mayor or city council committed to climate adaptation and\/or mitigation across the geographical area of the city? ' : \n    'Has the Mayor or city council committed to climate adaptation and\/or mitigation across the geographical area of the city?',\n    'Has a climate change risk and vulnerability assessment been undertaken for the city area?' : \n    'Has a climate change risk and vulnerability assessment been undertaken for your city?',\n    'Has a climate change risk or vulnerability assessment been undertaken for your local government area?' : \n    'Has a climate change risk and vulnerability assessment been undertaken for your city?',\n    \"How many staff (FTE) does your city have for environmental related data management? (including collecting, storing, analysing and communicating)\" : \n    \"How many staff (FTE) does your city have for environmental related data management (including collecting, storing, analyzing and communicating)?\",    #\n    \"Please state the dates of the accounting year or 12-month period for which you are reporting a city-wide GHG emissions inventory.\" : \n    \"Please state the dates of the accounting year or 12-month period for which you are reporting your latest city-wide GHG emissions inventory.\",\n    \"Please provide information about your city\u2019s Mayor or equivalent legal representative authority in the table below:\" : \n    \"Please provide information about your city\u2019s Mayor or equivalent legal representative authority in the table below.\",\n    \"Please select the actions you are taking to reduce the risks to your city\u2019s water supply.\" : \n    \"Please select the actions you are taking to reduce the risks to your city\u2019s water security.\",\n    \"Please select the primary process or methodology used to undertake the risk or vulnerability assessment of your city. If your city uses a combination of methodologies, please select the main methodology used.\" : \n    \"Please select the primary process or methodology used to undertake the risk and vulnerability assessment of your city.\",\n    'Please provide total (Scope 1 + Scope 2) GHG emissions for your local government operations, in metric tonnes CO2e.  Scopes are a common categorization method.': \n    'Please provide total (Scope 1 + Scope 2) GHG emissions for your local government operations, in metric tonnes CO2e.',\n    \"What are the sources of your city's water supply? Select all that apply.\" : \n    \"What are the sources of your city's water supply?\",\n    'What tools does your city \/ department use to analyse its environmental related data?' : \n    'What tools does your city \/ department use to analyse its environmental related data? Select all that apply.',\n    'What tools does your city \/ department use to manage its environmental related data?' : \n    'What tools does your city \/ department use to manage its environmental related data? Select all that apply.',\n    'Where it will facilitate a greater understanding of your city-wide emissions, please provide a breakdown of these emissions by end user, or any other classification system used in your city.' : \n    'Where it will facilitate a greater understanding of your\u202fcity-wide\u202femissions, please provide a breakdown of these emissions by end user (buildings, water, waste, transport), economic sector (residential, commercial, industrial, institutional), or any other classification system used in your city.',\n    'Which gases are included in your city-wide emissions inventory? Select all that apply.' : \n    'Which gases are included in your city-wide emissions inventory?',\n    'Which gases are included in your emissions inventory? Select all that apply.' : \n    'Which gases are included in your emissions inventory?',\n    'Please attach your city\u2019s climate change action plan below.' : \n    'Please attach your city\u2019s climate change mitigation plan below. If your city has both mitigation and energy access plans, please make sure to attach all relevant documents below.',\n    'Please attach your city\u2019s climate change mitigation plan below. If your city has both action and energy access plans, please make sure to attach all relevant documents below.' : \n    'Please attach your city\u2019s climate change mitigation plan below. If your city has both mitigation and energy access plans, please make sure to attach all relevant documents below.',\n    'Please attach your city-wide inventory in the table below.' : \n    'Please attach your city-wide inventory in Excel or other spreadsheet format and provide additional details on the inventory calculation methods in the table below.',\n    'Please give the name of the primary protocol, standard, or methodology used to calculate your local government operations emissions inventory.' : \n    'Please give the name of the primary protocol, standard, or methodology used to calculate your local government operations emissions inventory and attach your inventory using the attachment function.',\n    'Please provide details of your total fixed level target.' : \n    'Please provide details of your total fixed level target(s).',\n    'Please provide details of your total city-wide baseline scenario target, including projected business as usual emissions.' : \n    'Please provide details of your total city-wide baseline scenario target(s), including projected business as usual emissions.',\n    'Please indicate if your city-wide emissions have increased, decreased, or stayed the same since your last emissions inventory, and describe why.' : \n    'Please indicate if your city-wide emissions have increased, decreased, or stayed the same since your last emissions inventory, and please describe why.',\n    'Please identify the risks to your city\u2019s water supply as well as the timescale and level of risk.' : \n    'Please identify the risks to your city\u2019s water security as well as the timescale and level of risk.',\n    'Please list the stakeholder engagement activities for each relevant stakeholder group' : \n    'Please list the stakeholder engagement activities for each relevant stakeholder group.',\n    'Please describe the actions you are taking to reduce the risk to, or vulnerability of, your city\u2019s infrastructure, services, citizens, and businesses from climate change as identified in the Climate Hazards section.' : \n    'Please describe the main actions you are taking to reduce the risk to, and vulnerability of, your city\u2019s infrastructure, services, citizens, and businesses from climate change as identified in the Climate Hazards section.',\n    'Please state the dates of the accounting year or 12-month period for which you are reporting a city-wide GHG emissions inventory.' : \n    'Please state the dates of the accounting year or 12-month period for which you are reporting your latest city-wide GHG emissions inventory.',\n    'The Global Covenant of Mayors requires committed cities to report their inventories in the format of the new Common Reporting Framework, to encourage standard reporting of emissions data. If your city is reporting an updated inventory, we encourage reporting this in the CRF format, for which guidance can be found in the link below. Would you like to report your inventory in the CRF format or continue to report in the GPC format? Please ensure you respond to this question in order for the correct emissions breakdown questions to be displayed.' : \n    'The Global Covenant of Mayors requires committed cities to report their inventories in the format of the new Common Reporting Framework (CRF). Would you like to report your inventory in the CRF format or continue to report in the GPC format? This question triggers the display of the corresponding emissions table.',\n    'Which gases are included in your emissions inventory?' : \n    'Which gases are included in your city-wide emissions inventory?',\n    'Please list the most significant climate hazards faced by your city and indicate the probability and consequence of these hazards, as well as the expected future change in frequency and intensity. Please also select the top 3 assets or services that are affected by the climate hazard, and provide a description of the impact.' : \n    'Please list the most significant climate hazards faced by your city and indicate the probability and consequence of these hazards, as well as the expected future change in frequency and intensity. Please also select the most relevant assets or services that are affected by the climate hazard and provide a description of the impact.',\n    'Please explain why you do not have a city climate change action plan and any future plans to create one.' : \n    'Please explain why you do not have a city climate change mitigation plan and any future plans to create one.',\n    'Please provide details of your total city-wide base year emissions reduction (absolute) target. In addition, you may add rows to provide details of your sector-specific targets, by providing the base year emissions specific to that target.' : \n    'Please provide details of your total city-wide base year emissions reduction (absolute) target(s). In addition, you may add rows to provide details of your sector-specific targets, by providing the base year emissions specific to that target.',\n    'Please provide details of your total city-wide base year intensity target. An intensity target is usually measured per capita or per unit GDP. If you have an absolute emissions reduction target, please select \u201cBase year emissions (absolute) target\u201d in question 5.0.' : \n    'Please provide details of your total city-wide base year intensity target. An intensity target is usually measured per capita or per unit GDP. If you have an absolute emissions reduction target, please select \u201cBase year emissions (absolute) target\u201d in previous question.',\n    'Please provide details of your total city-wide base year intensity target. An intensity target is usually measured per capita or per unit GDP. If you have an absolute emissions reduction target, please select \u201cBase year emissions (absolute) target\u201d in question 8.3.' : \n    'Please provide details of your total city-wide base year intensity target. An intensity target is usually measured per capita or per unit GDP. If you have an absolute emissions reduction target, please select \u201cBase year emissions (absolute) target\u201d in previous question.',\n    'How many staff (FTE) work on topics related to climate change mitigation and adaptation?' : \n    'How many city staff (FTE) work on topics related to climate change mitigation and adaptation?',\n    'Please provide total (Scope 1 + Scope 2) GHG emissions for your local government operations, in metric tonnes CO2e. Scopes are a common categorization method.' : \n    'Please provide total (Scope 1 + Scope 2) GHG emissions for your local government operations, in metric tonnes CO2e.',\n    \"What percentage of your city's population has potable water supply service?\" : \n    \"What percentage of your city's population has access to potable water supply service?\",\n    'Please explain why not and any future arrangements you have to create a plan.' : \n    'Please explain why there is no published plan that addresses climate change adaptation and outline any future arrangements you have to create a plan.',\n    'Please explain why not and detail your plans to do so in the future, if any.' : \n    'Please explain why you do not measure your local government Scope 3 emissions and detail your plans to do so in the future, if any.',\n    'How many people within your city are employed in green jobs\/ industries?' : 'How many people within your city are employed in green jobs\/industries?',\n    'Has your city council published a plan that addresses climate change adaptation?' : 'Does your city council, or similar authority, have a published plan that addresses climate change adaptation?',\n    'Please state the dates of the accounting year or 12-month period for which you are reporting a city-wide GHG emissions inventory.' : 'Please state the dates of the accounting year or 12-month period for which you are reporting your latest city-wide GHG emissions inventory.',\n    'Which gases are included in your emissions inventory?':\n    'Which gases are included in your city-wide emissions inventory?',\n    'Please identify the factors that most greatly affect your city\u2019s ability to adapt to climate change, and indicate how those factors either enhance or challenge this ability.' :\n    'Please identify and describe the factors that most greatly affect your city\u2019s ability to adapt to climate change and indicate how those factors either support or challenge this ability.',\n    'Please list the most significant climate hazards faced by your city and indicate the probability and consequence of these hazards, as well as the expected future change in frequency and intensity. Please also select the top 3 assets or services that are affected by the climate hazard, and provide a description of the impact.' : \n    'Please list the most significant climate hazards faced by your city and indicate the probability and consequence of these hazards, as well as the expected future change in frequency and intensity. Please also select the most relevant assets or services that are affected by the climate hazard and provide a description of the impact.',\n    'Please provide details of your city\u2019s current and projected population.' :\n    'Please provide details of your city\u2019s current population. Report the population in the year of your reported inventory, if possible.',\n    'Where it will facilitate a greater understanding of your city-wide emissions, please provide a breakdown of these emissions by the US Community Protocol sources.' :\n    'Where it will facilitate a greater understanding of your city-wide emissions, please provide a breakdown of these emissions by the US Community Protocol sources.',\n    'List any emission reduction, adaptation, water related or resilience projects you have planned within your city for which you hope to attract financing and provide details on the estimated costs and status of the project. If your city does not have any relevant projects, please select No relevant projects under Project Area.' :\n    \"List any mitigation, adaptation, water related or resilience projects you have planned within your city for which you hope to attract financing and provide details on the estimated costs and status of the project. If your city does not have any relevant projects, please select 'No relevant projects' under 'Project Area'.\",\n    \"Do you have mode share information available to report for the following transport types? Select all that apply.\":\n    \"Do you have mode share information available to report for the following transport types?\",\n    'If you have not previously submitted your Letter of Commitment to the Global Covenant of Mayors, either through the relevant regional covenant or through the Global Covenant secretariat, please attach the letter signed by an appropriately mandated official (e.g. Mayor, city Council) to this question.' :    \n    'If you have not previously submitted a Letter of Commitment to the Global Covenant of Mayors, please attach your Letter of Commitment here, signed by an appropriately mandated official (e.g. Mayor, city Council).',\n}\ncities_df['question_name'] = cities_df['question_name'].apply(lambda x: x.replace(\"City\", \"city\"))\ncities_df['question_name'] = cities_df['question_name'].replace(dict_question_name)\n\nquestions_cities = cities_df.groupby(['question_name']).survey_year.nunique().to_frame()\n#questions_cities[questions_cities.survey_year <3]\n#questions_cities.survey_year.value_counts()\nprint(f\"{len(questions_cities[questions_cities.survey_year==3])} questions have been asked every year in the city questionnaires.\")","8248b131":"# Remove cities and corporations that didn't disclose\nprint(f\"Number of cities to be disclosing: {len(cities_disclosing_df)}\")\ncities_disclosing_df = cities_disclosing_df[cities_disclosing_df.account_number.isin(cities_df.account_number.unique())]\nprint(f\"Number of cities actually disclosing: {len(cities_disclosing_df)}\")\n\nprint(f\"Number of corporations to be disclosing: {len(corporations_disclosing_df)}\")\ncorporations_disclosing_df = corporations_disclosing_df[corporations_disclosing_df.account_number.isin(corporations_df.account_number.unique())]\nprint(f\"Number of corporations actually disclosing: {len(corporations_disclosing_df)}\")\n\ntemp = corporations_df.groupby(['account_number', 'questionnaire']).questionnaire.nunique().to_frame()#.reset_index(drop=False)\ntemp.columns = ['answered']\ntemp = temp.reset_index(drop=False)\ntemp = temp.pivot(index='account_number',columns='questionnaire')['answered']\ntemp = temp.fillna(0)\n\ntemp.columns = ['climate_change', 'water']\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(5,5))\nax.set_title('Disclosing Corporations [%]', fontsize=14)\n\ngroup1 = int((temp[(temp.climate_change == 1) & (temp.water == 0)].shape[0] \/ temp.shape[0])*100)\ngroup2 = int((temp[(temp.climate_change == 0) & (temp.water == 1)].shape[0] \/ temp.shape[0])*100)\nintersection = int((temp[(temp.climate_change == 1) & (temp.water == 1)].shape[0] \/ temp.shape[0])*100)\n\nv = venn2(subsets = (group1, group2, intersection),\n      #set_labels = ( 'Climate Change', 'Water', 'Both'),\n          set_labels = ( '', '', ''),\n          set_colors=( 'salmon', 'tomato'),\n           alpha=1,\n           ax=ax)\n\nv.get_patch_by_id('11').set_color('orangered')\nplt.annotate('Climate Change only', xy=v.get_label_by_id('10').get_position() - np.array([0, 0.05]), xytext=(-70,-70),\n             ha='center', textcoords='offset points',# bbox=dict(boxstyle='round,pad=0.5', fc='gray', alpha=0.1),\n             arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0.5',color='gray'))\nplt.annotate('Water only', xy=v.get_label_by_id('01').get_position() - np.array([0, 0.05]), xytext=(70,-70),\n             ha='center', textcoords='offset points',# bbox=dict(boxstyle='round,pad=0.5', fc='gray', alpha=0.1),\n             arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=-0.5',color='gray'))\n#c1 = venn2_circles(subsets = (group1, group2, intersection), color='red', ax=ax)\n#c1[0].set_lw(3.0)\n#c1[1].set_lw(0.0)\nplt.show()","203a6167":"fig = make_subplots(rows=1, cols=1, \n                    specs = [[{'type': 'choropleth'} for c in np.arange(1)] for r in np.arange(1)],\n                    subplot_titles = ['Corporations'], \n                    #vertical_spacing=0.1, horizontal_spacing=0\n                   )\ncorporations = corporations_disclosing_df.groupby('country').organization.nunique().to_frame().reset_index(drop=False)\n\nfig.add_trace(go.Choropleth(locations = corporations.country,\n                            z = corporations.organization,\n                            zmax=300,\n                            locationmode = 'country names',\n                            colorscale=px.colors.sequential.Reds),\n              row = 1, col = 1)","9f8d6369":"\nfig = make_subplots(rows=1, cols=1, \n                    specs = [[{'type': 'choropleth'} for c in np.arange(1)] for r in np.arange(1)],\n                    subplot_titles = ['Cities']#, 'Corporations'], \n                    #vertical_spacing=0.1, horizontal_spacing=0\n                   )\n\ncities = cities_disclosing_df.groupby('country').organization.nunique().to_frame().reset_index(drop=False)\n\nfig.add_trace(go.Choropleth(locations = cities.country,\n                            z = cities.organization,\n                            zmax=300,\n                            locationmode = 'country names',\n                            colorscale=px.colors.sequential.Reds),\n              row = 1, col = 1)\n\n","6ea9b867":"language_dict = {'Other (only applies to free text): Espa\u00f1ol' : 'Spanish', \n                 'Other (only applies to free text): Thai' : 'Thai',\n                'Other (only applies to free text): thai' : 'Thai',\n                'Other (only applies to free text): English' : 'English',\n                 'Other (only applies to free text): Italiano' : 'Italian',\n                'Other (only applies to free text): italiano' : 'Italian',\n                 'Other (only applies to free text): Algumas respostas est\u00e3o em postugu\u00eas, mas maioritariamente est\u00e3o em ingl\u00eas' : 'Other (only applies to free text): English and portuguese'\n                }\ncities_df['response_value'] = cities_df['response_value'].replace(language_dict)\n\ntemp = cities_df[cities_df['question_number'] == 'Response Language']\ntemp['response_value'] = temp['response_value'].apply(lambda x: 'Other' if x not in ['English', 'Spanish', 'Portuguese'] else x)\n\ntemp = temp.response_value.value_counts().to_frame()#.reset_index(drop=False)\ntemp = temp.T\ntemp['sum'] = temp.sum(axis=1)\nfor c in temp.columns:\n    temp[c] = temp[c] \/ temp['sum']*100\ntemp = temp.drop('sum', axis=1)\n\nfig, ax = plt.subplots(figsize=(6, 6))\n\ndata = temp.iloc[0].to_numpy()\n\ndef func(pct, allvals):\n    absolute = int(pct\/100.*np.sum(allvals))\n    return \"{:.1f}%\".format(pct, absolute)\n\n\nwedges, texts, autotexts = ax.pie(data, \n                                  autopct=lambda pct: func(pct, data), \n                                  startangle=90, \n                                  colors=['Orangered', 'Tomato', 'Salmon', 'darkgrey']\n                                 # textprops=dict(color=\"w\"),\n                                 )\n\nax.legend(wedges, temp.columns,\n          title=\"Languages\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\nplt.setp(autotexts, size=14)#, weight=\"bold\")\nax.set_title(\"Response Languages for Free Text\")\nplt.show()","eea9f08b":"risks_cities = cities_df[cities_df.survey_year == 2020]\n\nlabel_dict = { 'Do not know' : -1, \n               'Does not currently impact the city' : 0,\n                'Low' : 0,\n               'Medium Low': 1,\n               'Medium' : 2, \n               'Medium High' :3, \n               'High' :4}\n\nq = 'Please list the most significant climate hazards faced by your city and indicate the probability and consequence of these hazards, as well as the expected future change in frequency and intensity. Please also select the most relevant assets or services that are affected by the climate hazard and provide a description of the impact.'\n\ncols = ['Climate Hazards',\n        #'Social impact of hazard overall',\n        'Current magnitude of hazard',\n        'Current probability of hazard',\n        #'Most relevant assets \/ services affected overall'\n       ]\nrisks_cities = risks_cities[(risks_cities.question_name == q) & (risks_cities.subquestion_name.isin(cols))][['account_number',  'row_number','subquestion_name', 'response_value']].reset_index(drop=True)\n\n# Drop NaN\nrisks_cities = risks_cities[~risks_cities.response_value.isna()]\n\n# Pivot and rename colums\nrisks_cities = risks_cities.pivot(index=['account_number', 'row_number'], columns='subquestion_name')['response_value']\nrisks_cities.columns = ['risk', 'impact', 'likelihood']\nrisks_cities = risks_cities[(~risks_cities.risk.isna()) & (~risks_cities.impact.isna()) & (~risks_cities.likelihood.isna())]\n\nrisks_cities['risk_category'] = risks_cities['risk'].apply(lambda x: x.split(' > ')[0])\nrisks_cities['risk'] = risks_cities['risk'].apply(lambda x: x.split(' > ')[1])\nrisks_cities = risks_cities.reset_index(drop=False)\n\n\n\nrisks_cities.impact = risks_cities.impact.replace(label_dict)\nrisks_cities.likelihood = risks_cities.likelihood.replace(label_dict)\nrisks_cities[(risks_cities.impact >-1) & (risks_cities.likelihood >-1)]\nrisks_cities = risks_cities.reset_index(drop=False)\n\ndef categorize_risks_cities(x):\n    if x.risk_category in ['Extreme cold temperature', 'Extreme hot temperature', 'Storm and wind', 'Flood and sea level rise']:\n        return_value = 'Extreme weather events'\n    elif x.risk_category in ['Acid rock drainage and metal leaching', 'Ecosystem vulnerability', ]:\n        return_value = 'Chemical change'   \n    elif x.risk_category in ['Mass movement']:\n        return_value = 'Other' \n    else:  \n        return_value = x.risk_category\n        \n    if x.risk == 'Permanent inundation':\n        return_value = 'Sea level rise'\n    return return_value\n           \nrisks_cities['risk_cluster'] = risks_cities.apply(lambda x: categorize_risks_cities(x), axis=1)\n\nrisks_cities_grouped = risks_cities[risks_cities.risk_cluster != 'Other'].groupby(['risk_cluster']).agg(num_count = ('likelihood', 'count'),\n                                                                               likelihood_mean = ('likelihood', 'mean'),\n                                                                               #likelihood_median = ('likelihood', 'median'),\n                                                                               #likelihood_std = ('likelihood', 'std'),\n                                                                               impact_mean = ('impact', 'mean'),\n                                                                               #impact_median = ('impact', 'median'),\n                                                                               #impact_std = ('impact', 'std'),\n                                                                              ).reset_index(drop=False)\n\n\nrisks_corporations = corporations_df[corporations_df.survey_year == 2020]\n\nlikelihood_dict = {'Unknown' : -1,\n                   'Exceptionally unlikely' : 0,\n                   'Very unlikely' : 0, \n                   'Unlikely' : 1,\n                   'About as likely as not' : 2,\n                   'More likely than not' : 2,\n                   'Likely' : 3, \n                   'Very likely' : 4,\n                   'Virtually certain': 4}\nimpact_dict = { 'Unknown' : -1, \n                'Low' : 0,\n               'Medium-low': 1,\n               'Medium' : 2, \n               'Medium-high' :3, \n               'High' :4}\n\n### Climate ###\ncols = ['C2.3a_C3_Provide details of risks identified with the potential to have a substantive financial or strategic impact on your business. - Risk type & Primary climate-related risk driver',\n        'C2.3a_C8_Provide details of risks identified with the potential to have a substantive financial or strategic impact on your business. - Likelihood',\n        'C2.3a_C9_Provide details of risks identified with the potential to have a substantive financial or strategic impact on your business. - Magnitude of impact',]\n\nrisks_corp_climate = risks_corporations[risks_corporations.subquestion_name.isin(cols)][['account_number',  'row_number','subquestion_name', 'response_value']].reset_index(drop=True)\n\n# Split Risk type & Primary climate-related risk driver\nrisks_corp_climate['subquestion_name'] = np.where((risks_corp_climate['response_value'].isin(['Current regulation', 'Emerging regulation', 'Legal', 'Technology', 'Acute physical', 'Chronic physical', 'Market', 'Reputation'])), \n                                                  'risk_category', \n                                                  risks_corp_climate['subquestion_name'])\n\n# Drop NaN\nrisks_corp_climate = risks_corp_climate[~risks_corp_climate.response_value.isna()]\n\n# Pivot and rename colums\nrisks_corp_climate = risks_corp_climate.pivot(index=['account_number', 'row_number'], columns='subquestion_name')['response_value']\nrisks_corp_climate.columns = ['risk','likelihood', 'impact', 'risk_category']\nrisks_corp_climate = risks_corp_climate.reset_index(drop=False)\n\n# Rearrange and drop row_number column\nrisks_corp_climate = risks_corp_climate[['account_number', 'risk_category', 'risk',  'impact', 'likelihood']]\n\n### Water ###\ncols = ['W4.2_C2_Provide details of identified risks in your direct operations with the potential to have a substantive financial or strategic impact on your business, and your response to those risks. - Type of risk & Primary risk driver',\n         'W4.2_C7_Provide details of identified risks in your direct operations with the potential to have a substantive financial or strategic impact on your business, and your response to those risks. - Likelihood',\n        'W4.2_C6_Provide details of identified risks in your direct operations with the potential to have a substantive financial or strategic impact on your business, and your response to those risks. - Magnitude of potential impact',]\n\nrisks_corp_water = risks_corporations[risks_corporations.subquestion_name.isin(cols)][['account_number',  'row_number','subquestion_name', 'response_value']].reset_index(drop=True)\n\n# Split Risk type & Primary climate-related risk driver\nrisks_corp_water['subquestion_name'] = np.where((risks_corp_water['response_value'].isin(['Physical', 'Regulatory', 'Reputation & markets', 'Technology'])), \n                                                'risk_category', \n                                                risks_corp_water['subquestion_name'])\n\n# Drop NaN\nrisks_corp_water = risks_corp_water[~risks_corp_water.response_value.isna()]\n\n# Pivot and rename colums\nrisks_corp_water = risks_corp_water.pivot(index=['account_number', 'row_number'], columns='subquestion_name')['response_value']\nrisks_corp_water.columns = ['risk','impact', 'likelihood', 'risk_category']\nrisks_corp_water = risks_corp_water.reset_index(drop=False)\n\n# Rearrange and drop row_number column\nrisks_corp_water = risks_corp_water[['account_number', 'risk_category', 'risk',  'impact', 'likelihood']]\n\n\n### Merge Climate and Water responses ###\nrisks_corporations = risks_corp_climate.append(risks_corp_water)\nrisks_corporations = risks_corporations[(~risks_corporations.risk_category.isna())]\nrisks_corporations = risks_corporations[risks_corporations.risk_category.str.contains('hysical')]\n\nrisks_corporations.impact = risks_corporations.impact.replace(impact_dict)\nrisks_corporations.likelihood = risks_corporations.likelihood.replace(likelihood_dict)\nrisks_corporations = risks_corporations[(risks_corporations.impact >-1) & (risks_corporations.likelihood >-1)]\nrisks_corporations = risks_corporations.reset_index(drop=False)\n\ndef categorize_risks_corporations(x):\n    if x in ['Increased water scarcity', 'Drought', 'Rationing of municipal water supply', 'Increased water stress']:\n        return 'Water Scarcity'\n    elif x in ['Rising sea levels']:\n        return 'Sea level rise'\n    elif x in ['Increased likelihood and severity of wildfires']:\n        return 'Wild fire'\n    elif x in ['Changes in precipitation patterns and extreme variability in weather patterns']:\n        return 'Extreme Precipitation'\n    elif x in ['Increased severity and frequency of extreme weather events such as cyclones and floods', 'Flooding', 'Severe weather events', 'Rising mean temperatures']:\n        return 'Extreme weather events'\n    elif x in ['Acid rock drainage and metal leaching', 'Ecosystem vulnerability', ]:\n        return 'Chemical change'   \n    elif x in ['Pollution incident', 'Declining water quality']:\n        return 'Biological hazards' \n    else:\n        if 'Other' in x:\n            if (('pollution' in x.lower()) | ('disease' in x.lower()) | ('pandemic' in x.lower())):\n                return 'Biological hazards'\n            elif (('weather' in x.lower()) | ('heat' in x.lower()) | ('flood' in x.lower()) | ('temperature' in x.lower())):\n                return 'Extreme weather events'\n            elif (('drought' in x.lower()) | ('water scarcity' in x.lower()) | ('water availability' in x.lower()) | ('water stress' in x.lower())):\n                return 'Water Scarcity'\n            elif 'level' in x.lower():\n                return 'Sea level rise'\n            else:\n                return 'Other'\n        else:     \n            return 'Other'\n           \nrisks_corporations['risk_cluster'] = risks_corporations.risk.apply(lambda x: categorize_risks_corporations(x))\n\nrisks_corporations_grouped = risks_corporations[risks_corporations.risk_cluster != 'Other'].groupby(['risk_cluster']).agg(num_count = ('likelihood', 'count'),\n                                                                               likelihood_mean = ('likelihood', 'mean'),\n                                                                               impact_mean = ('impact', 'mean'),\n                                                                              ).reset_index(drop=False)\n\n\n\n","120087ab":"N_COLS = 2\nf, ax = plt.subplots(nrows=1, ncols=N_COLS, figsize=(14,6))\n\nsns.scatterplot(data=risks_corporations_grouped, x='likelihood_mean', y='impact_mean', ax=ax[0], style='risk_cluster', s=100, color='black')\nax[0].set_title(\"Risk Assessment for Corporations\", fontsize = 14)\n\nsns.scatterplot(data=risks_cities_grouped, x='likelihood_mean', y='impact_mean', ax=ax[1], style='risk_cluster', s=100, color='black')\nax[1].set_title(\"Risk Assessment for Cities\", fontsize = 14)\n\nfor i in range(N_COLS):\n    ax[i].add_patch(Rectangle((-0.5, -0.5), 7, 5, fill=True, alpha=0.2, color='Yellow', lw=0))\n    ax[i].add_patch(Rectangle((-0.5, -0.5), 2, 2, fill=True, alpha=0.2, color='Green', lw=0))\n    ax[i].add_patch(Rectangle((1.5, -0.5), 1, 1, fill=True, alpha=0.2, color='Green', lw=0))\n    ax[i].add_patch(Rectangle((-0.5, 1.5), 1, 1, fill=True, alpha=0.2, color='Green', lw=0))\n    ax[i].add_patch(Rectangle((3.5, 0.5), 1, 1, fill=True, alpha=0.2, color='Orange', lw=0))\n    ax[i].add_patch(Rectangle((0.5, 3.5), 1, 1, fill=True, alpha=0.2, color='Orange', lw=0))\n    ax[i].add_patch(Rectangle((2.5, 1.5), 1, 1, fill=True, alpha=0.2, color='Orange', lw=0))\n    ax[i].add_patch(Rectangle((1.5, 2.5), 1, 1, fill=True, alpha=0.2, color='Orange', lw=0))\n    ax[i].add_patch(Rectangle((2.5, 2.5), 2, 2, fill=True, alpha=0.2, color='Red', lw=0))\n    ax[i].add_patch(Rectangle((3.5, 1.5), 1, 1, fill=True, alpha=0.2, color='Red', lw=0))\n    ax[i].add_patch(Rectangle((1.5, 3.5), 1, 1, fill=True, alpha=0.2, color='Red', lw=0))\n\n    ax[i].set_ylabel(ylabel = 'Impact', fontsize = 14)\n    ax[i].set_xlabel(xlabel = 'Likelihood', fontsize = 14)\n\n    ax[i].set_yticks([0.5, 1.5, 2.5, 3.5], minor=True)\n    ax[i].yaxis.grid(True, which='minor')\n    ax[i].set_yticklabels(['', 'Low', 'Medium-low', 'Medium', 'Medium-high', 'High' ], rotation=90, va='center', fontsize=12)\n    ax[i].set_xticks([0.5, 1.5, 2.5, 3.5], minor=True)\n    ax[i].xaxis.grid(True, which='minor')\n    ax[i].set_xticklabels(['', 'Low', 'Medium-low', 'Medium', 'Medium-high', 'High' ], fontsize=12)\n    ax[i].legend(bbox_to_anchor=(0.8, 1.5))\n    ax[i].set_ylim(-0.5, 4.5)\n    ax[i].set_xlim(-0.5, 4.5)\n\nplt.show()","d7d2c261":"risks_cities_grouped.sort_values(by='num_count', ascending=False).reset_index(drop=True).style.set_caption(\"Cities' Pyhsical Risks\")","a3c09227":"risks_corporations_grouped.sort_values(by='num_count', ascending=False).reset_index(drop=True).style.set_caption(\"Corporations' Pyhsical Risks\")","8c140f13":"# Overview of Responses\nIn the provided data **1994 cities** and **3370 corporations** have disclosed at least once.\nThe corporations are given two questionnaires - one for climate change and one for water. However, only 26% of all disclosing corporations are disclosing information for both questionnaires. 72% of all disclosing corporations are only disclosing information on climate change, while only 1% of all disclosing corporations are disclosing information on water.","f43a1266":"# Overview of Questionnaires\nThe questionnaires are very long and contain a lot of different questions and sections that change over the years. In this section, we will get an overview of the sections and their questions.\n\n## Sections\nChanges in the parent sections over the years:\n* Corporations:\n    * Climate Change: Parent section 'Governance' was added in 2020\n    * Water: Parent section 'Linkages and trade-offs' was removed in 2020\n* Cities:\n    * The sections were revised after 2018 but have not changed since. For the following the 2018 questionnaire is modified to somewhat match the 2019 and 2020 questionnaire.","d8c5d16a":"Each year, the asked questions are revised, improved, and updated. This makes the comparison between the years difficult for us. However, we can do some rough cleaning of this data and find out that there are questions that are being asked every year.","a05d948d":"Ideally, we want to gain insights about whether and how cities and companies can collaborate to work towards the SDG goals. As a first step towards this analysis, we will analyse whether the cities' and corporations' questionnaires are related to each other. For this analysis, I have grouped all questions within one parent section and then calculated the **cosine similarity between the cities' questionnaires' parent sections and the corporations' questionnaires' parent sections**.\n\n**Findings**:\n* In all questionnaires there is a 'Introduction' section\n* The sections about emissions and energy from the cities' questionnaires' is related to the corporations' climate change questionnaires.\n* The 'Water Security' section from the cities' questionnaires' is related to the corporations' water questionnaires.\n* Overall, the cosine similarity is not the best metric to compare the sections to each other. However, for the purpose of a rough overview of the sections' similiarities it is sufficient.\n","7f73fd13":"## Responses by Cities\n\nCDP has provided us with data from cities all over the world. The majority of free text responses are in English. However, almost **35% of free text responses are not in English.**","7d194efb":"**Findings:**\n* For both cities and corporations the **three most common risks** are **extreme weather events, extreme precipitation, and water scaricity**.\n* On average **cities rate the risks' impact higher than coporations** by one degree. (Corporations rate the physical risks medium low to medium, while cities rate the physical risks medium to medium high)\n* On average **cities and corporations rate the likelihood of the top three risks similarly** (medium to medium high)","6f701dc5":"## Responses Corporations\nAlthough, there are more disclosing corporations than cities in the provided dataset, these are only corporations from the **U.S.A. and Canada**. Therefore, all free text responses are in **English.**","e9f38fc7":"In this challenge, the non-profit organisation CDP, which is short for 'Carbon Disclosure Project', has provided us environmental information by disclosing corporations and cities. Every year cities are given one questionnaire and corporations are given two questionnaires (one on climate change and one on water security). These are detailed questionnaires. Therefore, the dataset containing disclosed information since 2018 is extensive. To be able to work with this kind of dataset, this notebooks aims at providing an overview of the data and a first look into it.\n![markus-spiske-rxo6PaEhyqQ-unsplash.jpg](attachment:markus-spiske-rxo6PaEhyqQ-unsplash.jpg)\nPhoto by [Markus Spiske](https:\/\/unsplash.com\/@markusspiske?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText) on Unsplash.\n\n","f30ed1e9":"## Questions\n\n","d7f8f6a3":"# Risk Assessment\n\nCluster physical risks to cities and corporations into 8 categories:\n* Biological hazards\n* Chemical change\n* Extreme precipitation\n* Extreme weather events (Floods, Storm, extreme hot\/cold temperature)\n* Sea level rise\n* Water Scarcity\n* Wild fire\n* Other\n"}}