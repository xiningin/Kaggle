{"cell_type":{"4d9a433e":"code","5e66dcf2":"code","6206b615":"code","b63ea871":"code","d6882bc1":"code","a3132db8":"code","8a5a7dd2":"code","7a569cfc":"code","edbf8b0f":"code","1e577c8d":"code","b963de23":"code","11904d76":"code","9b4c8db2":"code","d58973a3":"code","a72b4a0f":"code","5e5b1a31":"code","3bf1513e":"code","b386b255":"code","f42dfc39":"code","3a46a993":"code","bb226d22":"code","f6390b71":"code","e48b813d":"code","e92636df":"code","d52fe8b1":"code","ae39ac1d":"code","04776bca":"code","cbd7e848":"code","5efa2fb1":"markdown","57d86c57":"markdown","ceb2fad5":"markdown","80097331":"markdown","96b2b775":"markdown","b96e5489":"markdown"},"source":{"4d9a433e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\ndatabase = '..\/input\/soccer\/database.sqlite'\n","5e66dcf2":"conn = sqlite3.connect(database)\n\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", conn)\ntables","6206b615":"Player_Attributes = pd.read_sql(\"\"\"SELECT * \n                        FROM Player_Attributes\n                        \"\"\", conn)\nPlayer = pd.read_sql(\"\"\"SELECT * \n                        FROM Player\n                        \"\"\", conn)\nMatch = pd.read_sql(\"\"\"SELECT * \n                        FROM Match\n                        \"\"\", conn)\nLeague = pd.read_sql(\"\"\"SELECT * \n                        FROM League\n                        \"\"\", conn)\nCountry = pd.read_sql(\"\"\"SELECT * \n                        FROM Country\n                        \"\"\", conn)\nTeam = pd.read_sql(\"\"\"SELECT * \n                        FROM Team\n                        \"\"\", conn)\nTeam_Attributes = pd.read_sql(\"\"\"SELECT * \n                        FROM Team_Attributes\n                        \"\"\", conn)","b63ea871":"print(\"Team\")\nprint(Team.shape)\nprint(Team.columns)\nprint(\"-\"*100)\n\nprint(\"League\")\nprint(League.shape)\nprint(League.columns)\nprint(\"-\"*100)\n\nprint(\"Country\")\nprint(Country.shape)\nprint(Country.columns)\nprint(\"-\"*100)\n\nprint(\"Player_Attributes\")\nprint(Player_Attributes.shape)\nprint(Player_Attributes.columns)\nprint(\"-\"*100)\n\nprint(\"Team_Attributes\")\nprint(Team_Attributes.shape)\nprint(Team_Attributes.columns)\nprint(\"-\"*100)\n\nprint(\"Match\")\nprint(Match.shape)\nprint(Match.columns)\nprint(\"-\"*100)\n\nprint(\"Player\")\nprint(Player.shape)\nprint(Player.columns)","d6882bc1":"Player","a3132db8":"Team","8a5a7dd2":"pd.set_option('display.max_columns', None)\n\nTeam_Attributes.head()","7a569cfc":"Real_Madrid_Statistics = pd.read_sql(\"\"\"SELECT *\n \n                                        FROM Team \n\n                                        left join Team_Attributes\n                                        \n                                        on Team_Attributes.team_api_id = Team.team_api_id\n                                        \n                                        where team_long_name= \"Real Madrid CF\"\n                                        \n                        \n                        \"\"\", conn)\nReal_Madrid_Statistics","edbf8b0f":"plt.figure(figsize=(15, 7))\n\nsns.lineplot(x=\"date\",y=\"buildUpPlaySpeed\",data=Real_Madrid_Statistics, label=\"buildUpPlaySpeed\").set_title(\"Changes and improvments in Real Madrid style from 2010 to 2015\", fontsize=18)\nsns.lineplot(x=\"date\",y=\"chanceCreationCrossing\",data=Real_Madrid_Statistics, label=\"chanceCreationCrossing\")\nsns.lineplot(x=\"date\",y=\"buildUpPlayPassing\",data=Real_Madrid_Statistics, label=\"buildUpPlayPassing\")\nsns.lineplot(x=\"date\",y=\"chanceCreationPassing\",data=Real_Madrid_Statistics, label=\"chanceCreationPassing\")\nsns.lineplot(x=\"date\",y=\"chanceCreationShooting\",data=Real_Madrid_Statistics, label=\"chanceCreationShooting\")\nsns.lineplot(x=\"date\",y=\"defencePressure\",data=Real_Madrid_Statistics, label=\"defencePressure\")\nsns.lineplot(x=\"date\",y=\"defenceAggression\",data=Real_Madrid_Statistics, label=\"defenceAggression\")\nsns.lineplot(x=\"date\",y=\"defenceTeamWidth\",data=Real_Madrid_Statistics, label=\"defenceTeamWidth\")\n\n\n\nplt.tick_params(axis='x', rotation=90)\n","1e577c8d":"Matchs_results = pd.read_sql(\"\"\"SELECT Match.id\n                            ,Country.name  country_name\n                            ,League.name  League_name\n                            ,date\n                            ,season\n                            ,Home_team.team_long_name  Home_team\n                            ,away_team.team_long_name  away_team\n                            ,home_team_goal\n                            ,away_team_goal\n\n \n                        FROM Country \n                        \n                        join Match\n                        on Country.id = Match.Country_id\n                        \n                        join League\n                        on Country.id = League.Country_id\n                        \n                        LEFT JOIN Team AS Home_team \n                        on Home_team.team_api_id = Match.home_team_api_id\n                        \n                        LEFT JOIN Team AS away_team \n                        on away_team.team_api_id = Match.away_team_api_id\n                        \n                        \"\"\", conn)\n\nMatchs_results","b963de23":"home_RM = Matchs_results[Matchs_results[\"Home_team\"] == \"Real Madrid CF\"]\naway_RM = Matchs_results[Matchs_results[\"away_team\"] == \"Real Madrid CF\"]\nhome_RM['match_result'] = np.where(home_RM['home_team_goal'] > home_RM['away_team_goal'], 'win', 'lose')\nhome_RM['match_result'] = np.where(home_RM['home_team_goal'] == home_RM['away_team_goal'], 'draw', home_RM['match_result'])\n\naway_RM['match_result'] = np.where(away_RM['home_team_goal'] < away_RM['away_team_goal'], 'win', 'lose')\naway_RM['match_result'] = np.where(away_RM['home_team_goal'] == away_RM['away_team_goal'], 'draw', away_RM['match_result'])\n\n\nRM = pd.concat([home_RM, away_RM])\nRM","11904d76":"plt.figure(figsize=(14, 5))\n\nsns.countplot(\"match_result\",data=RM ).set_title(\"Real Madrid match's results from 2008 to 2015\", fontsize=18)\n","9b4c8db2":"goals_scored = home_RM['home_team_goal'].sum() + away_RM['away_team_goal'].sum()\ngoals_conceded = home_RM[\"away_team_goal\"].sum() + home_RM['home_team_goal'].sum()\nprint(\"Real Madrid goals scored from 2008 to 2015 :  \" ,   goals_scored)\nprint(\"Real Madrid goals conceded from 2008 to 2015 :\" , goals_conceded)","d58973a3":"Country","a72b4a0f":"co_ord = pd.read_csv(\"..\/input\/world-coordinates\/world_coordinates.csv\")\n\nco_ord","5e5b1a31":"new_row_1 = {'Code':'ENG', 'Country':\"England\", 'latitude':52.3555, 'longitude':1.1743}\nnew_row_2 = {'Code':'SCT', 'Country':\"Scotland\", 'latitude':56.8642, 'longitude':-4.2026}\n\n#new_row_1 = {'Code':'ENG', 'Country':\"England\", 'latitude':1.1743, 'longitude':52.3555}\n#new_row_2 = {'Code':'SCT', 'Country':\"Scotland\", 'latitude':4.2026, 'longitude':56.4907}\n\nco_ord = co_ord.append(new_row_1, ignore_index=True)\nco_ord = co_ord.append(new_row_2, ignore_index=True)\nmaping = co_ord[co_ord[\"Country\"].isin(Country[\"name\"])]\nmaping\n","3bf1513e":"\nmaping = maping.assign(League_name = ['Belgium Jupiler League'\n                                   ,'Switzerland Super League'\n                                   ,'Germany 1. Bundesliga'\n                                   ,'Spain LIGA BBVA'\n                                   ,'France Ligue 1'\n                                   ,'Italy Serie A'\n                                   ,'Netherlands Eredivisie'\n                                   ,'Poland Ekstraklasa'\n                                   ,'Portugal Liga ZON Sagres'\n                                   ,'England Premier League'\n                                   ,'Scotland Premier League'])\n\nmaping","b386b255":"import folium\nincidents = folium.Map(location=[54.5260, 15.2551], zoom_start=3.4,tiles='Stamen Terrain')\n\n## loop through the 100 crimes and add each to the incidents feature group\nfor lat, log,Country,League in zip( maping[\"latitude\"],maping[\"longitude\"],maping[\"Country\"],maping[\"League_name\"]):\n    \n    folium.CircleMarker(\n            [lat, log],\n            radius=15,\n            popup = ('<strong>name<\/strong>: ' + str(League) + '<br>'\n                     '<strong>Nationality<\/strong>: ' + str(Country).capitalize()), \n              # define how big you want the circle markers to be\n            color='yellow',\n            fill_color='yellow',\n            fill_opacity=0.7\n        ).add_to(incidents)\n    \n\n# add incidents to map\nincidents","f42dfc39":"pd.set_option('display.max_columns', None)\n\nPlayer_Attributes.head()","3a46a993":"Player.head()","bb226d22":"all_players = pd.read_sql(\"\"\"SELECT player_name\n                                    ,birthday\n                                    ,date\n                                    ,overall_rating\n                                    ,height\n                                    ,attacking_work_rate\n                                    ,crossing\n                                    ,finishing\n                                    ,shot_power\n                                    ,heading_accuracy\n                                    ,sprint_speed,agility\n                                    ,defensive_work_rate\n                                    ,preferred_foot\n                                    ,free_kick_accuracy\n                                    ,penalties\n                                    \n                                    \n                        FROM Player \n                        LEFT JOIN Player_Attributes\n                        on Player.player_api_id = Player_Attributes.player_api_id\n                                                \n                        where date LIKE '2015%'\n                       \n                        ORDER by date\n                        \"\"\", conn)\n\n\n\npd.set_option('display.max_columns', None)\nall_players.head()","f6390b71":"plt.figure(figsize=(14, 5))\n\nsns.countplot(\"preferred_foot\",data=all_players ).set_title(\"preferred foot count in 2015\", fontsize=18)\n","e48b813d":"print(\"Player_Attributes\")\nprint(Player_Attributes.columns)\nprint(\"-\"*100)","e92636df":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=[15, 15])\nplt.tick_params(axis='x', rotation=10)\n\nfast = all_players.sort_values(by=['sprint_speed'], ascending=False)\nfast = fast.drop_duplicates(subset='player_name', keep=\"first\")\nfast = fast.head()\nsns.lineplot(x=\"player_name\",y=\"sprint_speed\",data=fast ,ax = axes[0,0]).set_title(\"top 5 fast players in 2015\", fontsize=18)\n\n\n\nhighst = all_players.sort_values(by=['height'], ascending=False)\nhighst = highst.drop_duplicates(subset='player_name', keep=\"first\")\nhighst = highst.head()\nsns.lineplot(x=\"player_name\",y=\"height\",data=highst ,ax = axes[0,1]).set_title(\"top 5 tallest players in 2015\", fontsize=18)\n\n\n\nFK_best = all_players.sort_values(by=['free_kick_accuracy'], ascending=False)\nFK_best = FK_best.drop_duplicates(subset='player_name', keep=\"first\")\nFK_best = FK_best.head()\nsns.lineplot(x=\"player_name\",y=\"free_kick_accuracy\",data=FK_best ,ax = axes[1,0]).set_title(\"top 5 FK accuracy players in 2015\", fontsize=18)\n\n\n\nPK_best = all_players.sort_values(by=['penalties'], ascending=False)\nPK_best = PK_best.drop_duplicates(subset='player_name', keep=\"first\")\nPK_best = PK_best.head()\nsns.lineplot(x=\"player_name\",y=\"free_kick_accuracy\",data=PK_best ,ax = axes[1,1]).set_title(\"top 5 PK accuracy players in 2015\", fontsize=18)\n\n","d52fe8b1":"Cristiano = pd.read_sql(\"\"\"SELECT player_name\n                                    ,date\n                                    ,overall_rating\n                                    ,attacking_work_rate\n                                    ,crossing\n                                    ,finishing\n                                    ,shot_power\n                                    ,heading_accuracy\n                                    ,free_kick_accuracy\n                                    ,sprint_speed,agility\n                                    \n                        FROM Player \n                        LEFT JOIN Player_Attributes\n                        on Player.player_api_id = Player_Attributes.player_api_id\n                        \n                        WHERE player_name = 'Cristiano Ronaldo'\n                        \n                       \n                        ORDER by date\n                        \"\"\", conn)\n\n\n\npd.set_option('display.max_columns', None)\nCristiano.head()","ae39ac1d":"plt.figure(figsize=(15, 7))\n\nsns.lineplot(Cristiano['date'], Cristiano[\"overall_rating\"], palette = 'Wistia', label=\"overall_rating\")\nsns.lineplot(Cristiano['date'], Cristiano[\"free_kick_accuracy\"], palette = 'Wistia', label=\"free_kick_accuracy\")\nsns.lineplot(Cristiano['date'], Cristiano[\"sprint_speed\"], palette = 'Wistia', label=\"sprint_speed\")\nsns.lineplot(Cristiano['date'], Cristiano[\"agility\"], palette = 'Wistia', label=\"agility\")\n\nplt.tick_params(axis='x', rotation=90)\nplt.title(\"Cristiano Ronaldo from 2008 to 2015\", fontsize=20)","04776bca":"Messi = pd.read_sql(\"\"\"SELECT player_name\n                                    ,date\n                                    ,overall_rating\n                                    ,attacking_work_rate\n                                    ,crossing\n                                    ,finishing\n                                    ,shot_power\n                                    ,heading_accuracy\n                                    ,free_kick_accuracy\n                                    ,sprint_speed,agility\n                                    \n                        FROM Player \n                        LEFT JOIN Player_Attributes\n                        on Player.player_api_id = Player_Attributes.player_api_id\n                        \n                        WHERE player_name = 'Lionel Messi'\n                        \n                       \n                        ORDER by  date\n                        \"\"\", conn)\n\n\n\npd.set_option('display.max_columns', None)\nMessi.head()","cbd7e848":"plt.figure(figsize=(15, 7))\n\nsns.lineplot(Messi['date'], Messi[\"overall_rating\"], palette = 'Wistia', label=\"overall_rating\")\nsns.lineplot(Messi['date'], Messi[\"free_kick_accuracy\"], palette = 'Wistia', label=\"free_kick_accuracy\")\nsns.lineplot(Messi['date'], Messi[\"sprint_speed\"], palette = 'Wistia', label=\"sprint_speed\")\nsns.lineplot(Messi['date'], Messi[\"agility\"], palette = 'Wistia', label=\"agility\")\n\nplt.tick_params(axis='x', rotation=90)\nplt.title(\"Lionel Messi from 2008 to 2015\", fontsize=20)","5efa2fb1":"## 3- Top 5 players in different categories","57d86c57":"## 4- Cristiano Ronaldo vs Lionel Messi","ceb2fad5":"## 1- Real Madrid Statistics","80097331":"Now, it's time for the G.O.A.T. rivaly ","96b2b775":"## 2- countries and their leagues","b96e5489":"Welcome to my kernel in European Soccer Database \n\nin this kernel i have used sqlite for preparing some data for work, and with pandas i have done some analysis and visualizations.\n\nif you have any suggest,advice or correction please don't hesitate to write it, i think it will be very helpful for me.\n\nwe will go through these topics:\n\n\n            1- Real Madrid Statistics\n            2- countries and their leagues\n            3- Top 5 players in different categories\n            4- Cristiano Ronaldo vs Lionel Messi\n\n\n\n\n"}}