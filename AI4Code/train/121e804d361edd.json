{"cell_type":{"f2c1e6b3":"code","38e4bd0f":"code","1880d353":"code","f743c614":"code","7f176087":"code","1993d687":"code","8ed1a88c":"code","4b4f8750":"code","bfef45ed":"code","0c4edcfd":"code","e0b32734":"code","8b31b739":"code","94f58e86":"code","493d074c":"code","125b69ec":"code","55bc538d":"code","813b8ef7":"code","d75ef0d7":"code","d8727166":"code","405f136e":"code","afd729f6":"code","e9518787":"code","4792d75e":"code","298e8137":"code","6a8056b0":"code","57999752":"code","8c2ef718":"code","cf496bb3":"code","bcaa415c":"markdown","28753e01":"markdown","45329a07":"markdown","912c9ed2":"markdown","a468aa5a":"markdown"},"source":{"f2c1e6b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38e4bd0f":"# Firstly we load the data \n\ndata = pd.read_csv(\"\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv\")","1880d353":"# To get basic informations of our data\n\ndata.info()","f743c614":"# Number of rows ans columns of our data\n\ndata.shape","7f176087":"# To see the column names\n\ndata.columns","1993d687":"# To make upper case the column names \n\ndata.columns = map(str.lower, data.columns)\n\n#data.columns = map(str.lower, data.columns)  \n","8ed1a88c":"data['age'] = data['age'].astype('float')","4b4f8750":"# To see the data types of columns \n\ndata.dtypes","bfef45ed":"# To see first 5 rows (default)\n\ndata.head() # it shows first 5 ","0c4edcfd":"# Too see rows as you want \n\ndata.head(100)","e0b32734":"# games column include year and season column so i delete it\n\n# data.drop('games', axis=1, inplace=True)\ndata\n","8b31b739":"# To see last 5 (default) rows\n\ndata.tail() ","94f58e86":"data.tail(20)  # get the last rows as you want","493d074c":"# Get the columns increasing in a range \n\ndata[100:2000:100]","125b69ec":"# Get the Statistical Summary\n\ndata.describe()","55bc538d":"# Standart Deviation of Columns\n\ndata.std()","813b8ef7":"# General Check for Missing Value\n\ndata.isnull().any().any()","d75ef0d7":"# Checking the Missing Value for Columns\n\ndata.isnull().any()","d8727166":"# Counts of missing value of columns\n\ndata.isnull().sum()","405f136e":"# Fill the missing values with mean\n\ndata['height'].fillna((data['height'].mean()), inplace=True)\ndata['weight'].fillna((data['weight'].mean()), inplace=True)\ndata['age'].fillna((data['age'].mean()) , inplace = True )\n\n# Medal feature type is object so fill with a string\n\ndata['medal'].fillna('no medal', inplace = True)\n\ndata5=data[data.medal==\"no medal\"]\ndata5","afd729f6":"# Visualization the Outliers for age\n\ndata. boxplot(column='age')\nplt.show()","e9518787":"data.age.describe()","4792d75e":"# Calculation the Outliers Bound \n\nq1 = data['age'].quantile(0.25)\nq3 = data.age.quantile(0.75)\niqr = q3 - q1\n\nsmall =  q1 - 1.5*iqr\nhigh = q3 + 1.5*iqr\nsmall\nhigh\n\n\n","298e8137":"outlier_values = data[np.logical_or(data['age'] < small ,data['age'] > high)]\noutlier_values\n","6a8056b0":"# Checking the unique values in columns\n\nprint(data.age.unique())\nprint(data.year.unique())\n","57999752":"# TIDY DATA \n# melt() method\n\nmelted = pd.melt(frame = data.head(100) , id_vars = 'name' , value_vars = ['team' , 'medal'] )\nmelted","8c2ef718":"data1 = data['team'] == 'Turkey'\ndata1\ndata1.value_counts(dropna = False)","cf496bb3":"data_turk = data [(data['team'] == 'Turkey') & (data['medal'] == 'Bronze') & (data['sex'] == 'M') & (data['year'] > 2000)]\ndata_turk","bcaa415c":"* **Age,height,medal and weight columns has missing values . **","28753e01":"# OUTLIERS\n\n**What is Outlier ?**\n\n* Outlier is smaller than Q1-1.5(Q3-Q1) and higher than Q3+1.5(Q3-Q1) .\n* (Q3-Q1) = IQR\n* Q3 = Third Quartile(%75)\n* Q1 = First Quartile(%25)","45329a07":"# MISSING VALUES","912c9ed2":"**Like we see in here our data has 15 columns and 271116 rows . **","a468aa5a":"**Some column names are upper letter some is lower . I convert to lower case all of them  for writing easily .**"}}