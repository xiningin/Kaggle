{"cell_type":{"f18fec14":"code","1b1b8e0c":"code","0e8329c3":"code","6217e7c0":"code","0d4ef898":"code","6c9a4dc7":"code","df0d7ad2":"code","7b8d6aa4":"code","472e781f":"code","e427f27c":"code","f6f9e275":"code","c7c0ba52":"code","2b2cf397":"code","b0ab2974":"code","d142bc4f":"code","1950c3d4":"code","53ee5ff9":"code","1be26649":"markdown","10d905ba":"markdown","16d81ef6":"markdown","ad030ac3":"markdown","5ebfbd29":"markdown","969b461d":"markdown"},"source":{"f18fec14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1b1b8e0c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom scipy import stats\nfrom scipy.stats import norm\nfrom pandas.plotting import parallel_coordinates\n%matplotlib inline","0e8329c3":"data= pd.read_csv(\"..\/input\/Iris.csv\")\ndata.columns","6217e7c0":"data.dtypes","0d4ef898":"data.set_index('Id', inplace=True)\ndata.head(10)","6c9a4dc7":"data.corr()","df0d7ad2":"sns.clustermap(data.corr(), method = 'single', cmap = 'coolwarm')","7b8d6aa4":"sns.countplot(x='Species',data=data)","472e781f":"sns.violinplot(x=\"Species\", y=\"PetalLengthCm\", data=data, palette='rainbow')","e427f27c":"sns.boxplot(x = 'Species', y = 'PetalWidthCm', data =data, palette='rainbow')","f6f9e275":"sns.swarmplot(x = 'Species', y = 'SepalLengthCm', data = data, palette = 'rainbow')","c7c0ba52":"sns.stripplot(x=\"Species\", y=\"SepalWidthCm\", data=data)","2b2cf397":"sns.pairplot(data, hue=\"Species\", palette=\"husl\")","b0ab2974":"sns.pairplot(data,\n             x_vars=[\"SepalWidthCm\", \"SepalLengthCm\"],\n             y_vars=[\"PetalWidthCm\", \"PetalLengthCm\"], hue = 'Species')","d142bc4f":"parallel_coordinates(data, 'Species')","1950c3d4":"from sklearn.model_selection import train_test_split\nX = data[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ny = data.Species\nX_train, X_test,y_train, y_test = train_test_split(X,y, test_size = 0.3)","53ee5ff9":"from sklearn.ensemble import VotingClassifier\nfrom sklearn import tree\nfrom sklearn. linear_model import LogisticRegression\nmodel1 = LogisticRegression(random_state=1)\nmodel2 = tree.DecisionTreeClassifier(random_state=1)\nmodel = VotingClassifier(estimators=[('lr', model1), ('dt', model2)], voting='hard')\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","1be26649":"From above plotting, we can see that Petal  length seems to increase from setosa to versicolor to virginica.","10d905ba":"From the above box plot, we can see that Iris- virginica has more petal width compared to other.","16d81ef6":"Let's check the data type of each column ","ad030ac3":"Load and read Iris data.\nQuick look at column of data.","5ebfbd29":"Let's find the correlation","969b461d":"Let's import some useful libraries that we are using throughout our visualisation."}}