{"cell_type":{"d1ba2515":"code","3aecf8ae":"code","9ff26f02":"code","1d17cca0":"code","644bca51":"code","58999c1f":"code","66e25488":"code","78e2fd0a":"code","4333b4e9":"code","04f965e7":"code","367bcd1e":"code","f97b925e":"code","53af0429":"code","fc93e0ba":"code","838e016e":"code","6906ba7f":"code","f6869d17":"code","487b655a":"code","46020c19":"code","fde8aaf4":"code","93016a0f":"code","464d70a4":"code","eef4161d":"code","53f14e19":"code","5ee0d997":"code","900bc61a":"code","245fe07e":"code","9750ae7c":"code","87323db9":"code","0610400a":"code","4bdf4461":"code","8a256f94":"code","7dcbc585":"code","628b10bc":"code","c219b143":"code","31bb6952":"code","924b888d":"code","0f45c273":"code","8586a724":"code","ad96e8c3":"code","a8e284f2":"code","ca7263cc":"code","a3b9af2b":"code","3526a06f":"code","789910a2":"code","d67c92f4":"code","18ff1898":"markdown","fd864b56":"markdown","6f727c6e":"markdown","4f0854ec":"markdown","08a56a53":"markdown","e7407810":"markdown","8c75a787":"markdown","e3afb16e":"markdown"},"source":{"d1ba2515":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import DataFrame\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3aecf8ae":"import numpy as np\nimport pandas as pd\nimport pickle","9ff26f02":"train_df = pd.read_csv('\/kaggle\/input\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2\/train_sessions.csv',\n                      index_col='session_id')\ntest_df = pd.read_csv('\/kaggle\/input\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2\/test_sessions.csv',\n                     index_col='session_id')","1d17cca0":"train_df.head(20)","644bca51":"train_df.info()","58999c1f":"# \u041c\u0435\u043d\u044f\u0435\u043c \u0442\u0438\u043f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 site1, ..., site10 \u043d\u0430 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0443\u043b\u044f\u043c\u0438\nsites = ['site%s' % i for i in range(1,11)]\ntrain_df[sites] = train_df[sites].fillna(0).astype(int)\ntest_df[sites] = test_df[sites].fillna(0).astype(int)","66e25488":"train_df.head()","78e2fd0a":"with open(r\"\/kaggle\/input\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2\/site_dic.pkl\", \"rb\") as input_file:\n    site_dict = pickle.load(input_file)\n\nsites_dict = pd.DataFrame(list(site_dict.keys()), index=list(site_dict.values()), columns=['site'])","4333b4e9":"sites_dict.head()","04f965e7":"sites_dict.shape","367bcd1e":"train_df.shape, test_df.shape","f97b925e":"train_df['target'].values","53af0429":"y_train = train_df['target'].values","fc93e0ba":"train_df[sites].to_csv('train_sessions_text.txt', \n                                 sep=' ', index=None, header=None)\ntest_df[sites].to_csv('test_sessions_text.txt', \n                                sep=' ', index=None, header=None)","838e016e":"!head train_sessions_text.txt","6906ba7f":"from sklearn.feature_extraction.text import CountVectorizer\n\ncv = CountVectorizer(ngram_range=(1, 1), max_features=50000)\nwith open('train_sessions_text.txt') as inp_train_file:\n    X_train = cv.fit_transform(inp_train_file)\nwith open('test_sessions_text.txt') as inp_test_file:\n    X_test = cv.transform(inp_test_file)\nprint(X_train.shape, X_test.shape)","f6869d17":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV","487b655a":"X_train_log, X_valid_log, y_train_log, y_valid_log = train_test_split(X_train, y_train, test_size=0.1, random_state=42)","46020c19":"log_reg = LogisticRegression(C=1.0, random_state=42, solver='lbfgs', max_iter=500)\nlog_reg.fit(X_train_log, y_train_log)","fde8aaf4":"y_pred = log_reg.predict_proba(X_valid_log)\nscore_log = roc_auc_score(y_valid_log, y_pred[:,1])\nprint(\"log\",score_log)","93016a0f":"log_reg.fit(X_train, y_train)","464d70a4":"# \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f\ny_test = log_reg.predict_proba(X_test)","eef4161d":"y_test[:5]","53f14e19":"def write_to_submission_file(predicted_labels, out_file,\n                             target='target', index_label=\"session_id\"):\n    predicted_df = pd.DataFrame(predicted_labels,\n                                index = np.arange(1, predicted_labels.shape[0] + 1),\n                                columns=[target])\n    predicted_df.to_csv(out_file, index_label=index_label)","5ee0d997":"write_to_submission_file(y_predicted[:,1], 'baseline_1.csv')","900bc61a":"####################### SGDClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.ensemble import RandomForestClassifier","245fe07e":"########## \u0410\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u043d\u0430 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438, \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0434\u0435\u0440\u0435\u0432\u044c\u044f\u0445 \u0438 SGD \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0435","9750ae7c":"random_forest_clf=RandomForestClassifier(n_estimators = 500,max_depth = 20 ,random_state = 42)\nlog_reg_clf=LogisticRegression(C=2.5, random_state=42, solver='saga', max_iter=500)\nsgd_clf=SGDClassifier(alpha = 0.0005, eta0 = 0.01, learning_rate='adaptive', loss='modified_huber',\n                      penalty ='l2',random_state = 42)\nrandom_forest_clf.fit(X_train_log,y_train_log)\nlog_reg_clf.fit(X_train_log,y_train_log)\nsgd_clf.fit(X_train_log,y_train_log)","87323db9":"from sklearn.ensemble import VotingClassifier\nvoting_clf = VotingClassifier(\n                estimators=[('rf',random_forest_clf),('lr',log_reg_clf),('SVC',sgd_clf)],\n                voting = 'soft')","0610400a":"voting_clf.fit(X_train_log,y_train_log)","4bdf4461":"y_predicted = voting_clf.predict_proba(X_valid_log)\nscore_vote = roc_auc_score(y_valid_log, y_predicted[:,1])\nprint(\"voting\",score_vote)","8a256f94":"voting_clf.estimators_","7dcbc585":"import tensorflow as tf\nfrom tensorflow import keras","628b10bc":"random_forest_clf=RandomForestClassifier(n_estimators = 500,max_depth = 20 ,random_state = 42)\nlog_reg_clf=LogisticRegression(C=2.5, random_state=42, solver='saga', max_iter=500)\nsgd_clf=SGDClassifier(alpha = 0.0005, eta0 = 0.01, learning_rate='adaptive', loss='modified_huber',\n                      penalty ='l2',random_state = 42)\nrandom_forest_clf.fit(X_train_log,y_train_log)\nlog_reg_clf.fit(X_train_log,y_train_log)\nsgd_clf.fit(X_train_log,y_train_log)","c219b143":"# \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u0435\u0449\u0430\u0435\u043c\u044b\u0435 \u0441\u0430\u0439\u0442\u044b\nmy_X_train = train_df.loc[0:,['site1','site2','site3','site4','site5','site6','site7','site8','site9','site10']]#,'target']]","31bb6952":"forest_pred=random_forest_clf.predict(X_train_log)\nlog_reg_clf_pred=log_reg_clf.predict(X_train_log)\nSGD_pred=sgd_clf.predict(X_train_log)\nfinal_pred_f=random_forest_clf.predict(X_test)\nfinal_pred_l=log_reg_clf.predict(X_test)\nfinal_pred_s=sgd_clf.predict(X_test)","924b888d":"print(forest_pred.shape,log_reg_clf_pred.shape,SGD_pred.shape,my_X_train.shape)\npredict_only = DataFrame({\"forest_pred\":forest_pred[:]})\nForest_data = DataFrame({\"forest_pred\":forest_pred[:]})\nLog_data = DataFrame({\"Log_pred\":log_reg_clf_pred[:]})\nSGD_data = DataFrame({\"SGD_pred\":SGD_pred[:]})\nlogdata=DataFrame({\"Log_pred\":final_pred_l[:]})\nsgddata=DataFrame({\"SGD_pred\":final_pred_s[:]})\npredict_only = predict_only.join(Log_data)\npredict_only = predict_only.join(SGD_data)\npredict_final = DataFrame({\"forest_pred\":final_pred_f[:]})\npredict_final = predict_final.join(logdata)\npredict_final = predict_final.join(sgddata)\nSGD_data.shape","0f45c273":"X_train_cnn = my_X_train.join(Forest_data)\nX_train_cnn = X_train_cnn.join(Log_data)\nX_train_cnn = X_train_cnn.join(SGD_data)","8586a724":"model = keras.models.Sequential()\nmodel.add(keras.layers.Input(3))\nmodel.add(keras.layers.Dense(50,activation='relu'))\nmodel.add(keras.layers.Dense(10,activation='relu'))\nmodel.add(keras.layers.Dense(2,activation='softmax'))","ad96e8c3":"from sklearn import metrics\nfrom keras import backend as K\nimport tensorflow as tf\nfrom sklearn.metrics import roc_auc_score\n\ndef auroc(y_true, y_pred):\n    return tf.py_func(roc_auc_score, (y_true, y_pred), tf.double)\n\n\ndef auc(y_true, y_pred):\n    auc = tf.metrics.auc(y_true, y_pred)[1]\n    K.get_session().run(tf.local_variables_initializer())\n    return auc\n","a8e284f2":"model.compile(loss=\"binary_crossentropy\",optimizer=\"adam\",\n             metrics=[\"accuracy\",auroc])","ca7263cc":"model.fit(predict_only,y_train_log,epochs=10,validation_split=0.1)","a3b9af2b":"#y_predicted = model.predict_proba(X_train_cnn)\n#score_vote = roc_auc_score(y_valid_cnn, y_predicted[:,1])\n#print(\"voting\",score_vote)\ny_predicted=model.predict_proba(predict_final)","3526a06f":"test_forest_pred=random_forest_clf.predict(X_valid_log)\ntest_log_reg_clf_pred=log_reg_clf.predict(X_valid_log)\ntest_SGD_pred=sgd_clf.predict(X_valid_log)","789910a2":"test_Forest_data = DataFrame({\"forest_pred\":test_forest_pred[:]})\ntest_Log_data = DataFrame({\"Log_pred\":test_log_reg_clf_pred[:]})\ntest_SGD_data = DataFrame({\"SGD_pred\":test_SGD_pred[:]})","d67c92f4":"X_valid_log.data","18ff1898":"\u0414\u043b\u044f \u0441\u0430\u043c\u043e\u0439 \u0431\u0430\u0437\u043e\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u044b\u0435 \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u044b \u0432 \u0441\u0435\u0430\u043d\u0441\u0435 (\u043d\u043e \u043c\u044b \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043c\u0435\u0442\u043e\u043a \u0432\u0440\u0435\u043c\u0435\u043d\u0438). \u0421\u043c\u044b\u0441\u043b \u0442\u0430\u043a\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430: \u0443 \u0410\u043b\u0438\u0441\u044b \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0438 \u043b\u044e\u0431\u0438\u043c\u044b\u0435 \u0441\u0430\u0439\u0442\u044b, \u0438 \u0447\u0435\u043c \u0447\u0430\u0449\u0435 \u0432\u044b \u0432\u0438\u0434\u0438\u0442\u0435 \u044d\u0442\u0438 \u0441\u0430\u0439\u0442\u044b \u0432 \u0441\u0435\u0430\u043d\u0441\u0435, \u0442\u0435\u043c \u0432\u044b\u0448\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u044d\u0442\u043e \u0441\u0435\u0430\u043d\u0441 \u0410\u043b\u0438\u0441\u044b, \u0438 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442.\n# \n# \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043c\u044b \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b `site1, site2, ..., site10` \u0438\u0437 \u0432\u0441\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430. \u0418\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0430 \u043d\u043e\u043b\u044c.\n# \n# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 `CountVectorizer`.","fd864b56":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0440\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0438 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u043e\u0439 \u0441\u0435\u0442\u0438","6f727c6e":"\u041f\u0435\u0440\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u043e\u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e 0,96. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438. \u0427\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435, \u043d\u0443\u0436\u043d\u043e \u0441\u043d\u043e\u0432\u0430 \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0432\u0441\u0435\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u043c (\u0434\u043e \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f), \u0447\u0442\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442 \u0435\u0435 \u043e\u0431\u043e\u0431\u0449\u0430\u044e\u0449\u0443\u044e \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c.","4f0854ec":"****Intro**\n# \n# \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0440\u0435\u0448\u0430\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a\u0430, \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u044f \u0435\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u0441\u043b\u043e\u0436\u043d\u0430\u044f \u0438 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430, \u0441\u043e\u0447\u0435\u0442\u0430\u044e\u0449\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0447\u0435\u0441\u043a\u0443\u044e \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0438\u044e.\n# \n# \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u042f\u043d\u0434\u0435\u043a\u0441 \u0440\u0435\u0448\u0430\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0432\u0442\u043e\u0440\u0436\u0435\u043d\u0438\u0439 \u0432 \u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0435 \u044f\u0449\u0438\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041a\u043e\u0440\u043e\u0447\u0435 \u0433\u043e\u0432\u043e\u0440\u044f, \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043d\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043b\u044f \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430:\n# \n# - \u043d\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0435 \u043f\u0438\u0441\u044c\u043c\u0430 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0438\u0445 \u043f\u0440\u043e\u0447\u0442\u0435\u043d\u0438\u044f, \u043a\u0430\u043a \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e \u044f\u0449\u0438\u043a\u0430;\n# - \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u0435\u0447\u0430\u0442\u044c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0435 \u043f\u0438\u0441\u044c\u043c\u0430 \u0438 \u0434\u0430\u0436\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0442\u044c \u043a\u0443\u0440\u0441\u043e\u0440 \u043f\u043e-\u0434\u0440\u0443\u0433\u043e\u043c\u0443\n# - \u0438 \u0442.\u043f.\n# \n# \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d \u0438 \u0432\u044b\u0431\u0440\u043e\u0448\u0435\u043d \u0438\u0437 \u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e \u044f\u0449\u0438\u043a\u0430. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e SMS-\u043a\u043e\u0434\u0430. \u0422\u0430\u043a\u043e\u0439 \u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u042f\u043d\u0434\u0435\u043a\u0441\u0430 \u043e\u043f\u0438\u0441\u0430\u043d \u0432 \u0441\u0442\u0430\u0442\u044c\u0435 \u0425\u0430\u0431\u0440\u0435 (https:\/\/habr.com\/ru\/company\/yandex\/blog\/230583\/).\n# \n# \u041f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0432\u0435\u0449\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 Google Analytics \u0438 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u043d\u0430\u0443\u0447\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f\u0445. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u044d\u0442\u043e\u0439 \u0442\u0435\u043c\u0435, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0432 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u00abTraversal Pattern Mining\u00bb \u0438 \u00abSequential Pattern Mining\u00bb.\n# \n# \u0412 \u044d\u0442\u043e\u043c \u043a\u043e\u043d\u043a\u0443\u0440\u0441\u0435 \u043c\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u0441\u044f \u0440\u0435\u0448\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443: \u043d\u0430\u0448 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0441\u0435\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u0438 \u0441\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u044d\u0442\u043e\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0410\u043b\u0438\u0441\u043e\u0439 \u0438\u043b\u0438 \u044d\u0442\u043e \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a\u043e\u043c (\u0442\u043e\u0442,\u043a\u0442\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0410\u043b\u0438\u0441\u043e\u0432). \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u0440\u0438\u043a\u0443 ROC AUC.******","08a56a53":"\u0412\u043c\u0435\u0441\u0442\u0435 \u0441 \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441\u0430\u0439\u0442\u043e\u0432. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0433\u043e.","e7407810":"\u041d\u0430\u0431\u043e\u0440 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b:\n# \n# - **site1** \u2013 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0432 \u0441\u0435\u0430\u043d\u0441\u0435\n# - **time1** \u2013 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0432 \u0441\u0435\u0430\u043d\u0441\u0435\n# - ...\n# - **site10** \u2013 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u0435\u0441\u044f\u0442\u043e\u0433\u043e \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0432 \u0441\u0435\u0430\u043d\u0441\u0435\n# - **time10** \u2013 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u0434\u0435\u0441\u044f\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0432 \u0441\u0435\u0441\u0441\u0438\u0438\n# - **target** \u2013 \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 1 \u0434\u043b\u044f \u0441\u0435\u0430\u043d\u0441\u043e\u0432 \u0410\u043b\u0438\u0441\u044b \u0438 0 \u0434\u043b\u044f \u0441\u0435\u0430\u043d\u0441\u043e\u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\n# \n# \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u043b\u0438 \u043f\u043e\u043b\u0447\u0430\u0441\u0430 \u0438\/\u0438\u043b\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0434\u0435\u0441\u044f\u0442\u0438 \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u043e\u0432. \u0422\u043e \u0435\u0441\u0442\u044c \u0441\u0435\u0430\u043d\u0441 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u043c, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u0441\u0435\u0442\u0438\u043b \u0434\u0435\u0441\u044f\u0442\u044c \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u043e\u0432 \u0438\u043b\u0438 \u0435\u0441\u043b\u0438 \u0441\u0435\u0430\u043d\u0441 \u0434\u043b\u0438\u043b\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0442\u0440\u0438\u0434\u0446\u0430\u0442\u0438 \u043c\u0438\u043d\u0443\u0442.\n# \n# \u0412 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0435\u0430\u043d\u0441\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043c\u0435\u043d\u0435\u0435 \u0434\u0435\u0441\u044f\u0442\u0438 \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u043e\u0432. \u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 0 \u0438 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0442\u0438\u043f\u044b \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043d\u0430 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0422\u0430\u043a\u0436\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u043e\u0432 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u043a\u0430\u043a \u043e\u043d \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442:","8c75a787":"**Data Downloading and Transformation**\n# \n# \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440\u044b \u0438 \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0438\u0445.","e3afb16e":"**Training the first model**\n# \n# \u0418\u0442\u0430\u043a, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043d\u0435\u0433\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 \u0432 Scikit-learn \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0414\u043b\u044f \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043a\u0440\u0451\u0441\u0442\u043d\u0443\u044e \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0439, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 5."}}