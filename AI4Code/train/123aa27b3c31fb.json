{"cell_type":{"e01064d9":"code","31afddb1":"code","f501a031":"code","30c4ece3":"code","0587d88a":"code","f33a8847":"code","5e2fca30":"code","cda704d7":"code","e2693af3":"code","7131ae79":"code","9f640b1f":"code","4759a0ea":"code","0a94942a":"code","a480f882":"code","d3931229":"code","f1b17c3e":"code","926b9475":"code","a6c21293":"code","04563f20":"markdown","92361011":"markdown","46541cee":"markdown","aed39a82":"markdown","c3eb2497":"markdown","28ff129f":"markdown"},"source":{"e01064d9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\npath =''\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path =os.path.join(dirname, filename)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","31afddb1":"df = pd.read_csv(path)\n","f501a031":"df.head(5)","30c4ece3":"mean_df = df.mean()\nmean_df","0587d88a":"def plot_func(mean_df,title):\n    fig, ax = plt.subplots(figsize=(12, 10), subplot_kw=dict(aspect=\"equal\"))\n\n    wedges, texts, autotexts = ax.pie(mean_df, autopct=lambda pct: func(pct),\n                                      textprops=dict(color=\"w\"))\n\n    ax.legend(wedges, [\"Delhi\",\"Kolkata\",\"Mumbai\",\"Chennai\"],\n              title=title,\n              loc=\"center\",\n              bbox_to_anchor=(1, 0, 0.5, 1))\n\n    plt.setp(autotexts, size=20, weight=\"bold\")\n\n    ax.set_title(title)\n    plt.show()","f33a8847":"plot_func(mean_df ,\"Distribution of Mean\")","5e2fca30":"def return_corresponding_year_df(year):\n    return df[df[\"Date\"].str.contains(year)]","cda704d7":"df_2014 = return_corresponding_year_df('2014')","e2693af3":"df_2014","7131ae79":"mean_2014 = df_2014.mean()","9f640b1f":"mean_2014","4759a0ea":"plot_func(mean_2014,\"Distribution of Mean 2014\")","0a94942a":"df_2014.describe()","a480f882":"df_2015 = return_corresponding_year_df('2015')","d3931229":"df_2015","f1b17c3e":"mean_2015 = df_2015.mean()","926b9475":"plot_func(mean_2015,\"Distibution of Mean 2015\")","a6c21293":"df_2015.describe()","04563f20":"# Inference of 2014\n\n - Mumbai has the highest mean Price .\n - Mumbai had the highest price","92361011":"## 2014","46541cee":"# Year Wise Analysis","aed39a82":"# Inference \n\n  - Mumbai has the highest price \n  -  Delhii has the lowest price ","c3eb2497":"# Inference of 2015","28ff129f":"# Inference\n\n Mumbai has the highest average price  and Delhi the Lowest"}}