{"cell_type":{"4b27c021":"code","0084990f":"code","639381ad":"code","dd08740e":"code","a37938c0":"code","6c10d944":"code","23e422ad":"code","9ca643c0":"code","917973f1":"code","ce2d4572":"code","947d07b0":"code","5bb0edd6":"code","9704f071":"code","05c67a23":"code","49748749":"code","f14ce0fc":"code","8c9cade3":"code","6667b322":"code","4d32a342":"code","62d07e2c":"code","886bc900":"code","33284ea6":"code","8c7fcbf3":"code","7cc6dc68":"code","1785a019":"code","231b3b16":"code","468b2a94":"code","7b53cfba":"code","4e2e5260":"code","c72bffe6":"code","98f5be5a":"code","b355a72b":"code","b84c4390":"code","3479bc78":"code","7b6501ea":"code","cecd516a":"code","0cbcf800":"markdown","699df922":"markdown","a3a9cbb7":"markdown","da1fec59":"markdown","8de165a0":"markdown","7b968ac3":"markdown","1b23bc6a":"markdown","145bf2c7":"markdown","12baabe5":"markdown","22663cd4":"markdown","48e17e99":"markdown","8ff3dba2":"markdown","55ff17d9":"markdown","e9ce2d86":"markdown","d303a8cf":"markdown","6c7919fe":"markdown","a6d72475":"markdown","9b347be3":"markdown","a32443b5":"markdown","066705fd":"markdown"},"source":{"4b27c021":"#Import all the necessary modules\n#Import all the necessary modules\nimport pandas as pd\nimport numpy as np\nimport os\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nimport seaborn as sns\nsns.set()\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (16, 9)\nplt.style.use('ggplot')\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport gc\ngc.enable()","0084990f":"df=pd.read_csv(\"https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/auto-mpg\/auto-mpg.data\",header=None, delimiter=r\"\\s+\")","639381ad":"df.head()","dd08740e":"cdf=pd.read_csv(\"https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/auto-mpg\/auto-mpg.names\", header=None,sep=\":\",skiprows=32,nrows=9)\ncdf.rename(columns={0:'Row',1:\"datatype\"},inplace=True)","a37938c0":"cdf = pd.DataFrame(cdf[\"Row\"].str.split(' ',10).tolist())\ncdf.rename(columns={5:'Row'},inplace=True)","6c10d944":"def rename(df1,df2):\n    t=df1.columns.values\n    s=df2['Row'].tolist()\n    for x in range(df.shape[1]):\n        if x!=9:\n            df1.rename(columns={t[x]:s[x]},inplace=True)  \n            #print(\"_____________\")\n            #print(t[x])\n            #print(s[x])\n    return df1\n\nCar_df=rename(df,cdf)","23e422ad":"Car_df.head()","9ca643c0":"Car_df.tail()","917973f1":"Car_df.sample(5)","ce2d4572":"Car_df.shape","947d07b0":"def datatypes_insight(data):\n    display(data.dtypes.to_frame())\n    data.dtypes.value_counts().plot(kind=\"barh\")","5bb0edd6":"#Car_df.apply(lambda x: len(x.unique()))\ndatatypes_insight(Car_df)","9704f071":"def datatypes_insight(data):\n    display(data.apply(lambda x: len(x.unique())).to_frame())\n    data.apply(lambda x: len(x.unique())).plot(kind=\"barh\")","05c67a23":"datatypes_insight(Car_df)","49748749":"Car_df.describe().T","f14ce0fc":"Car_df = Car_df.replace('?', np.nan)","8c9cade3":"Car_df.isnull().sum()","6667b322":"Car_df = Car_df.drop('car', axis=1)","4d32a342":"Car_df[\"horsepower\"] = Car_df.astype('float64')","62d07e2c":"pd.DataFrame({'count' : Car_df.groupby([\"horsepower\",\"origin\"] ).size()}).head().reset_index()","886bc900":"Car_df[\"horsepower\"] = Car_df.groupby([\"origin\"])[\"horsepower\"]\\\n    .transform(lambda x: x.fillna(x.median()))","33284ea6":"Car_df.isnull().sum()","8c7fcbf3":"Car_df.head()","7cc6dc68":"def distploting(df):\n    col_value=df.columns.values.tolist()\n    sns.set(context='notebook',style='whitegrid', palette='dark',font='sans-serif',font_scale=1.2,color_codes=True)\n    \n    fig, axes = plt.subplots(nrows=2, ncols=4,constrained_layout=True)\n    count=0\n    for i in range (2):\n        for j in range (4):\n            s=col_value[count+j]\n            #axes[i][j].hist(df[s].values,color='c')\n            sns.distplot(df[s].values,ax=axes[i][j],bins=30,color=\"b\")\n            axes[i][j].set_title(s,fontsize=17)\n            fig=plt.gcf()\n            fig.set_size_inches(15,10)\n            plt.tight_layout()\n        count=count+j+1\n        \n             \ndistploting(Car_df)","1785a019":"def boxplot(df):\n    col_value=['mpg',\n 'cylinders',\n 'displacement',\n 'horsepower',\n 'weight',\n 'acceleration',\n 'model',\"origin\"]\n    sns.set(context='notebook', palette='pastel',font='sans-serif',font_scale=1.5,color_codes=True,style='whitegrid')\n    fig, axes = plt.subplots(nrows=2, ncols=4,constrained_layout=True)\n    count=0\n    for i in range (2):\n        for j in range (4):\n            s=col_value[count+j]\n            #axes[i][j].boxplot(df[s])\n            sns.boxplot(df[s],ax=axes[i][j],orient=\"v\")\n            fig=plt.gcf()\n            fig.set_size_inches(15,20)\n            plt.tight_layout()\n        count=count+j+1\n        \n             \nboxplot(Car_df)","231b3b16":"fig, ax = plt.subplots(nrows=1, ncols=2,squeeze=True)\nfig.set_size_inches(20,8)\nAge_frequency_colums= pd.crosstab(index=Car_df[\"origin\"],columns=\"count\")\nAge_frequency_colums.plot(kind='bar',ax=ax[0],color=\"c\",legend=False)\nAge_frequency_colums.plot(kind='pie',ax=ax[1],subplots=True,legend=False,autopct='%.2f')\nax[0].set_title('Frequency Distribution of Dependent variable: origin')\nax[1].set_title('Pie chart representation of Dependent variable: origin')\n\n#adding the text labels\nrects = ax[0].patches\nlabels = Age_frequency_colums[\"count\"].values\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax[0].text(rect.get_x() + rect.get_width()\/2, height +1,label, ha='center', va='bottom',fontsize=15)\nplt.show()","468b2a94":"def diffplot(df):\n    sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\n    column_names=df.describe().columns.values.tolist()\n    number_of_column=len(column_names)\n\n    fig,ax=plt.subplots(nrows=2,ncols=4,figsize=(15,15))\n\n    counter=0\n    for i in range(2):\n        for j in range(4):\n            sns.boxplot(x='origin', y=column_names[counter],data=df,ax=ax[i][j])\n            plt.tight_layout()\n            counter+=1\n            if counter==(number_of_column-1,):\n                break\n                 \ndiffplot(Car_df)","7b53cfba":"def diffplot(df):\n    sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\n    column_names=df.describe().columns.values.tolist()\n    number_of_column=len(column_names)\n\n    fig,ax=plt.subplots(nrows=2,ncols=4,figsize=(15,15))\n\n    counter=0\n    for i in range(2):\n        for j in range(4):\n            sns.violinplot(x='origin', y=column_names[counter],data=df,ax=ax[i][j])\n            plt.tight_layout()\n            counter+=1\n            if counter==(number_of_column-1,):\n                break\n                 \ndiffplot(Car_df)","4e2e5260":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df[\"horsepower\"], kind=\"scatter\", color=\"c\")","c72bffe6":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df[\"cylinders\"], kind=\"scatter\", color=\"g\")","98f5be5a":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df[\"displacement\"], kind=\"scatter\", color=\"b\")","b355a72b":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df[\"weight\"], kind=\"scatter\", color=\"r\")","b84c4390":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df.acceleration, kind=\"scatter\", color=\"b\")","3479bc78":"sns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.jointplot(x=Car_df.mpg,y=Car_df.model, kind=\"scatter\", color=\"g\")","7b6501ea":"sns.pairplot(Car_df,hue=\"origin\")","cecd516a":"# Draw a heatmap with the numeric values in each cell\ncor_mat= Car_df.corr()\nmask = np.array(cor_mat)\nmask[np.tril_indices_from(mask)] = False\nfig=plt.gcf()\nfig.set_size_inches(28,28)\nsns.set(context='notebook',style='whitegrid', palette='pastel',font='sans-serif',font_scale=1.5)\nsns.heatmap(data=cor_mat,mask=mask,square=True,annot=True,cbar=True,cmap=\"coolwarm\",linewidths=1)","0cbcf800":"# IDA of the Data frame","699df922":"### MPG and Displacement features are inversely exponential.","a3a9cbb7":"#### Bi-variate analysis","da1fec59":"#### Horse power and mpg are highly co-related. As show pearson corelation value as 1. But we need to check further more that if by only horsepower feature can we predict the mgp more accurately. ","8de165a0":"# Missing value check, incorrect data and data imputation with mean, median, mode as necessary.","7b968ac3":"# Problem Statement\n\nEDA on car_ daat","1b23bc6a":"#### Observation:\n1. As shown in jointplot, mpg and horsepower showed high corelation. But as we saw in distribution , data has mixed distribution.All the features ares overlapping to each other for all differant origin.","145bf2c7":"### Observation:\nAs we can see the dataset has more observation from Origin-1 -62.56 % of the observation are from the Origin 1.This data was taken\/used at 1983.Assumssion may be:\n1. At 1983, Region-1 might be leading car manufacturing company. \n2. Survay may be regional\/not global. Hence produced bias dataset.\n3. Exported\/Imported car may be less during the timeframe.","12baabe5":"#### \"horsepower\"- Looks like it set as Object. We may need to change the datatype.","22663cd4":"#### Observation: \n1. As we can see , with MPG, most of the features has high corelation.\n2. Weight and cylinders has high corelation,Explained as number of cylinders engine will increase the weight of the car.\n3. Displacement and cylinders has high corelation,Explained as number of cylinders engine will increase the weight of the car.","48e17e99":"### Observation:\n1. Acceleration- feature hase more outliers compared to any othe feature.\n2. Mpg feature has few outlier.\n\nwe will check on the outlier and try to figure out the the explanation.","8ff3dba2":"# EDA","55ff17d9":"#### MPG and Displacement features are inversely exponential","e9ce2d86":"##### From the overall look on the dataset , we can see some ? mark present in the data set. We will look at lt later.","d303a8cf":"# Load the Cars Data file into Python DataFrame\n\nGet the data from here - https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/auto-mpg\/","6c7919fe":"### Observation:\n1. Look at the MPG, its high for car produced\/originated at number 3 region compared to others.\n2. Cylinder has more varity at #1 region\/originated cars. Whereas other 2 region has some varity but in this data its showing as outliers. It could be wrong entry or highend car which was produced at origine 1 and 2.\n3. Engine displacement is high for origine 1 cars. There are no much difference in between other 2 region.\n4. Origine 1 cars are heavy compare to othe 2 region. That expain, Low millage and low horsepower.\n","a6d72475":"#### Uni-variate Analysis","9b347be3":"### Observation:\n\n1. All the data distribution showed mixed gaussian distribution. That indicate, its mixed data from different types of cars.\n2. Acceleration - Looks like fairly normal distribution.Slight mixed distribution present.\n3. Car are having more observation from region 1. That indicates, the sample data may be skweed.\n4. Car having 4 cylinder has more observation. That also indicate that the data is biased.","a32443b5":"### Jointplot for Bivariate Analysis","066705fd":"Standard divisoin is very high for weight and displacement."}}