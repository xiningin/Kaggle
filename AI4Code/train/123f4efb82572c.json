{"cell_type":{"50274386":"code","c3071026":"code","e4b73f1c":"code","cf1e0171":"code","a9fab6ac":"code","05ae3bd1":"code","c8214728":"code","af32e6d8":"code","e81f6f37":"code","590e9e37":"code","b3f2178c":"code","658251ad":"code","42439111":"code","672de367":"code","47b4b113":"code","b744d26a":"code","5de15f4e":"code","d64f4862":"code","0cdc6012":"code","d61aea73":"code","099c718a":"code","5c429faf":"code","d24deb88":"code","77d0ded5":"code","baadf72b":"code","0f55ac26":"code","2ea1ca3f":"code","282292e9":"code","5e680e63":"code","256a06f7":"code","35d7eb92":"code","53aab455":"code","6c95443c":"code","d773c8a9":"code","8d46f9a6":"code","3e05d6dc":"code","4f46c2c8":"code","1e529149":"code","dbfce799":"code","eed0594e":"code","39371992":"code","58e30c18":"code","c13059ce":"code","a2023cb2":"code","8705836d":"markdown","4a2e14bc":"markdown","ede541c6":"markdown","f7a708e0":"markdown","6f8bc6cb":"markdown","765b174e":"markdown","f56d3d6e":"markdown","32de952f":"markdown","91653daf":"markdown","7ea235cc":"markdown","0cd3287e":"markdown","01055d20":"markdown","a27ddb99":"markdown","e1470d16":"markdown","125b135a":"markdown","3f9cf6d6":"markdown","4fc38b75":"markdown","7342331c":"markdown","f32d434e":"markdown","d895a762":"markdown","bbef70d0":"markdown","8e097652":"markdown","2fdfdcb4":"markdown","efc904a3":"markdown","da70a141":"markdown","5b38b5a0":"markdown","d31d62fe":"markdown","5d95b825":"markdown"},"source":{"50274386":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams['figure.figsize'] = (10,10)","c3071026":"df = pd.read_csv('..\/input\/terry-stops.csv')","e4b73f1c":"df.head()","cf1e0171":"df.info()","a9fab6ac":"df.isnull().any()","05ae3bd1":"df = df.dropna()\ndf.isnull().any()","c8214728":"df.columns","af32e6d8":"df.columns = ['Subject_Age_Group', 'Subject_ID', 'GO_SC_Num', 'Terry_Stop_ID',\n       'Stop_Resolution', 'Weapon_Type', 'Officer_ID', 'Officer_YOB',\n       'Officer_Gender', 'Officer_Race', 'Subject_Perceived_Race',\n       'Subject_Perceived_Gender', 'Reported_Date', 'Reported_Time',\n       'Initial_Call_Type', 'Final_Call_Type', 'Call_Type', 'Officer_Squad',\n       'Arrest_Flag', 'Frisk_Flag', 'Precinct', 'Sector', 'Beat']\ndf.columns","e81f6f37":"df[:20]","590e9e37":"del df['Subject_ID']\ndel df['GO_SC_Num']","b3f2178c":"filter_age = df['Subject_Age_Group'] != '-'\ndf_filter_age = df[filter_age]\nx = df_filter_age['Subject_Age_Group'].value_counts().index\ny = df_filter_age['Subject_Age_Group'].value_counts()\n\nfig, ax = plt.subplots()\nfig.set_size_inches(15, 7)\n\ngraph_age = sns.barplot(x=x, \n            y=y, \n            order=['1 - 17', '18 - 25', '26 - 35', '36 - 45', '46 - 55', '56 and Above'] )\ngraph_age.set(ylabel = 'Quantity of Stopped People', \n                          xlabel = 'Age Range', \n                          title = 'Stops by Age')\nplt.show()","658251ad":"df.Stop_Resolution.unique()","42439111":"# filter_stop_resolution = df['Stop_Resolution'] != '-'\n# df_filter_stop_resolution = df[filter_stop_resolution]\n# x_df_filter_stop_resolution = df_filter_stop_resolution['Stop_Resolution'].value_counts().index\n# y_df_filter_stop_resolution = df_filter_stop_resolution['Stop_Resolution'].value_counts()\n\n# fig, ax = plt.subplots()\n# fig.set_size_inches(15, 7)\n# graph_stop_resolution = sns.barplot(x=x_df_filter_stop_resolution, y=y_df_filter_stop_resolution)\n# graph_stop_resolution.set(ylabel = 'Number of Stops', \n#                           xlabel = 'Resolution Type', \n#                           title = 'Seattle Terry Stops Resolution',)\n# plt.show()","672de367":"# I didn't remove the string value '-' (hifen) but for this analysis, I've suppressed it with this filter\nfilter_stop_resolution = df['Stop_Resolution'] != '-'\n# Here I'm applying our dataframe using the filter to another variable, that will be a new dataframe\ndf_filter_stop_resolution = df[filter_stop_resolution]\n# Here you can see that I'm retrieving the indexes of the Stop_Resolution column\ny_df_filter_stop_resolution = df_filter_stop_resolution['Stop_Resolution'].value_counts().index\n# Here we have the values for each Stop_Resolution\nx_df_filter_stop_resolution = df_filter_stop_resolution['Stop_Resolution'].value_counts()\n\n# Now, let's create a pie chart because I think it's easier for us to understand what is happening\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 10)\ngraph_stop_resolution = ax.pie(x=x_df_filter_stop_resolution, \n                               labels=y_df_filter_stop_resolution,\n                               autopct='%1.1f%%')\n\nax.set_title('Stop Resolution Comparison')\n\nplt.show()","47b4b113":"len(df['Officer_ID'].unique()), len(df['Officer_ID'])","b744d26a":"officer_counts = df['Officer_ID'].value_counts()\ndf_officer_counts = pd.DataFrame(officer_counts)\n\ndf_officer_counts_slice = df_officer_counts[:10]\n\nx_counts = df_officer_counts_slice['Officer_ID'].index\ny_counts = df_officer_counts_slice['Officer_ID']\n\nfig, ax = plt.subplots()\nfig.set_size_inches(18, 10)\ngraph_officer_counts_ten = sns.barplot(x=x_counts, y=y_counts, data=df_officer_counts_slice, palette='winter_r')","5de15f4e":"officers_ids = officer_counts[:10].index\nofficers_ids","d64f4862":"df_officer_ids_weapons = df.loc[df['Officer_ID'].isin(officers_ids)]\ndf_officer_ids_weapons.head()","0cdc6012":"filter_officer_ids_weapons = (df_officer_ids_weapons['Weapon_Type'] != '-') & (df_officer_ids_weapons['Weapon_Type'] != 'None')\nfilter_officer_ids_weapons.any()","d61aea73":"df_officer_ids_weapons_filtered = df_officer_ids_weapons[filter_officer_ids_weapons]\n\nsns.set_palette('Greens')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_weapons = df_officer_ids_weapons_filtered['Weapon_Type'].value_counts()\ny_weapons = df_officer_ids_weapons_filtered['Weapon_Type'].value_counts().index\n\ngraph_weapons_officers = ax.pie(x=x_weapons,\n                                labels=y_weapons, \n                                autopct='%1.1f%%',\n                                pctdistance=0.8)\n\nfor weapon in graph_weapons_officers[0]:\n    weapon.set_edgecolor('black')\nplt.show()","099c718a":"filter_total_weapons = (df['Weapon_Type'] != '-') & (df['Weapon_Type'] != 'None')\nfilter_total_weapons.any()","5c429faf":"df_total_weapons = df[filter_total_weapons]\n\n# Before we go ahead, I'll fix some Weapon Types to make it easier for us.\ndf_total_weapons = df_total_weapons.replace({'Blackjack':'Club, Blackjack, Brass Knuckles', \n                                             'Brass Knuckle':'Club, Blackjack, Brass Knuckles',\n                                             'Club':'Club, Blackjack, Brass Knuckles',\n                                             'Firearm Other':'Firearm', 'Firearm (unk type)':'Firearm'})\n\nmax_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(15,15)\n\nx_total_weapons = df_total_weapons['Weapon_Type'].value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_total_weapons['Weapon_Type'].value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 15})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')","d24deb88":"filter_weapons = (df['Weapon_Type'] != '-') & (df['Weapon_Type'] != 'None') \nfilter_race = (df.Subject_Perceived_Race != 'Unknown') & (df.Subject_Perceived_Race != '-')\n\ndf[filter_weapons & filter_race].Subject_Perceived_Race.unique()","77d0ded5":"df_weapons_race = df[filter_weapons & filter_race]\n\ndf_weapons_race.Subject_Perceived_Race.unique()","baadf72b":"filter_Multi_Racial = df_weapons_race.Subject_Perceived_Race == 'Multi-Racial'\nfilter_Black = df_weapons_race.Subject_Perceived_Race == 'Black'\nfilter_White = df_weapons_race.Subject_Perceived_Race == 'White'\nfilter_AIAN = df_weapons_race.Subject_Perceived_Race == 'American Indian \/ Alaskan Native'\nfilter_Asian = df_weapons_race.Subject_Perceived_Race == 'Asian'\nfilter_Hispanic = df_weapons_race.Subject_Perceived_Race == 'Hispanic'\nfilter_Other = df_weapons_race.Subject_Perceived_Race == 'Other'","0f55ac26":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_Multi_Racial].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_Multi_Racial].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","2ea1ca3f":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_Black].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_Black].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","282292e9":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_White].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_White].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","5e680e63":"filter_AIAN = df_weapons_race.Subject_Perceived_Race == 'American Indian \/ Alaskan Native'\nfilter_Asian = df_weapons_race.Subject_Perceived_Race == 'Asian'\nfilter_Hispanic = df_weapons_race.Subject_Perceived_Race == 'Hispanic'\nfilter_Other = df_weapons_race.Subject_Perceived_Race == 'Other'","256a06f7":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_AIAN].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_AIAN].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","35d7eb92":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_Asian].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_Asian].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","53aab455":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_Hispanic].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_Hispanic].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","6c95443c":"max_weapon_on_chart = 5\n#chart config\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_total_weapons = df_weapons_race[filter_Other].Weapon_Type.value_counts()[:max_weapon_on_chart]\ny_total_weapons = df_weapons_race[filter_Other].Weapon_Type.value_counts().index[:max_weapon_on_chart]\n\ngraph_total_weapons = ax.pie(x=x_total_weapons, labels=y_total_weapons, autopct='%1.1f%%', textprops={'fontsize': 12})\n\nfor weapon in graph_total_weapons[0]:\n    weapon.set_edgecolor('white')\n    \nplt.show()","d773c8a9":"df.Officer_Gender.unique().tolist()","8d46f9a6":"sns.set_palette('Reds_r')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_officers_genders = df.Officer_Gender.value_counts()\ny_officers_genders = df.Officer_Gender.value_counts().index\n\ngraph_officers_gender = ax.pie(x=x_officers_genders, labels=y_officers_genders, autopct='%1.2f%%')\n\nplt.show()","3e05d6dc":"filter_weapons = (df['Weapon_Type'] != '-') & (df['Weapon_Type'] != 'None') ","4f46c2c8":"filter_female = df['Officer_Gender'] == 'F'\nfilter_male = df['Officer_Gender'] == 'M'\n\ndf_female_weapons = df[(filter_female) & (filter_weapons)]\ndf_male_weapons = df[(filter_male) & (filter_weapons)]\n\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots(1,2)\nfig.set_size_inches(17,8)\n\nx_female_weapons = df_female_weapons.Weapon_Type.value_counts()[:5]\ny_female_weapons = df_female_weapons.Weapon_Type.value_counts().index[:5]\n\nx_male_weapons = df_male_weapons.Weapon_Type.value_counts()[:5]\ny_male_weapons = df_male_weapons.Weapon_Type.value_counts().index[:5]\n\ngraph_female_weapons = ax[0].pie(x=x_female_weapons, labels=y_female_weapons, autopct='%1.2f%%')\ngraph_male_weapons = ax[1].pie(x=x_male_weapons, labels=y_male_weapons, autopct='%1.2f%%')\n\nax[0].set_title('Female Officer Weapon Found')\nax[1].set_title('Male Officer Weapon Found')\n\nplt.show()","1e529149":"filter_male = df['Officer_Gender'] == 'M'\nfilter_stop_resolutions = df.Stop_Resolution != '-'\n\nfilter_female = df['Officer_Gender'] == 'F'\n\ndf_male_weapons = df[(filter_male) & (filter_stop_resolutions)]\n\ndf_female_weapons = df[(filter_female) & (filter_stop_resolutions)]\n\nsns.set_palette('Reds_r')\nfig, ax = plt.subplots(1, 2)\nfig.set_size_inches(17,8)\n\nx_male_weapons = df_male_weapons.Stop_Resolution.value_counts()[:5]\ny_male_weapons = df_male_weapons.Stop_Resolution.value_counts().index[:5]\n\nx_female_weapons = df_female_weapons.Stop_Resolution.value_counts()[:5]\ny_female_weapons = df_female_weapons.Stop_Resolution.value_counts().index[:5]\n\ngraph_female_weapons = ax[1].pie(x=x_female_weapons, labels=y_female_weapons, autopct='%1.2f%%')\ngraph_male_weapons = ax[0].pie(x=x_male_weapons, labels=y_male_weapons, autopct='%1.2f%%')\n\nax[0].set_title('Female Officer Stop Resolution')\nax[1].set_title('Male Officer Stop Resolution')\n\nplt.show()","dbfce799":"#chart config\nsns.set_palette('Greens')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_squads = df.Officer_Squad.value_counts()[:5]\nlabels_squads = df.Officer_Squad.value_counts().index[:5]\n\ngraph_squads = ax.pie(x=x_squads, labels=labels_squads, autopct='%1.2f%%')\n\nplt.show()","eed0594e":"sns.set_palette('Blues')\nfig, ax = plt.subplots()\nfig.set_size_inches(15,12)\n\nx_squads = df.Officer_Squad.value_counts().index[:20]\ny_squads = df.Officer_Squad.value_counts()[:20]\n\ngraph_squads = sns.barplot(x=x_squads, y=y_squads, data=df )\n\nfor item in graph_squads.get_xticklabels():\n    item.set_rotation(90)\n\nplt.show()","39371992":"filter_squad_precinct = (df.Officer_Squad.isin(df.Officer_Squad.value_counts()[:20].index.tolist())) & (df.Precinct != 'Unknown')","58e30c18":"df_squads_precinct = df[filter_squad_precinct]\n\n#chart config\nsns.set_palette('Greens')\nfig, ax = plt.subplots()\nfig.set_size_inches(8,8)\n\nx_squads_precinct = df_squads_precinct['Precinct'].value_counts()\nlabels_squads_precinct = df_squads_precinct['Precinct'].value_counts().index\n\ngraph_squads_precinct = ax.pie(x=x_squads_precinct, labels=labels_squads_precinct, autopct='%1.2f%%')\n\nfor item in graph_squads_precinct[0]:\n    item.set_edgecolor('white')\n\nplt.show()","c13059ce":"df.head(2)","a2023cb2":"fig, ax = plt.subplots()\nfig.set_size_inches(15,10)\n\nx_sector = df.Sector.value_counts().index\ny_sector = df.Sector.value_counts()\n\ngraph_sectors = sns.barplot(x=x_sector, y=y_sector, data=df)\n\n# for label in graph_sectors.get_xticklabels():\n#     label.set_rotation(45)\n\nplt.show()","8705836d":"### 2.6.3. White People Guns","4a2e14bc":"### 2.6.1. Multi-Racial People Guns","ede541c6":"## 2.2. Stop Resolution Comparison","f7a708e0":"### 2.6.2. Black People Guns","6f8bc6cb":"## 2.8. What is the reprentation of the first 5 squads?","765b174e":"Nice! The columns are renamed. Now, let's delete the columns that are not necessary for us.","f56d3d6e":"### 2.8.2. Percentage of Stops by Seattle Precinct","32de952f":"# 2. Analysis\n## 2.1. Age comparison\nIn the first comparison, we will understand how old are the people that are being stopped and how many people from each category.","91653daf":"### 2.8.3. Occurences by Sector","7ea235cc":"### 2.6.4. American Indian \/ Alaskan Native People Guns","0cd3287e":"# 1. Initial Data Cleaning\nData cleaning is the name of the process that we manage to see what kind of data we should have or not on our dataframe. When we are working with datasets, it's important to clean the data we have to make our analysis more meaningful.\nWe'll follow the following steps:\n* Check if we have null values or nonsense values and drop it\n* Remove columns that are not necessary for our analysis\n* Rename columns names","01055d20":"## 2.5. The Top 5 Weapon Types of our Entire Dataframe\nAbove we saw the weapons that our first 10 officers found. Now, let's see what are the weapons for all our dataframe.","a27ddb99":"### 2.6.5. Asias People Guns","e1470d16":"### 2.6.7. Other People Guns","125b135a":"### 2.8.1. Stop occurrences by Officer Squad","3f9cf6d6":"## 2.7. What Officer Gender is the most usual?","4fc38b75":"As we can see now, all the lines have no null value. We'll keep cleaning the data, but in a next moment.\nNow, let's rename our columns.","7342331c":"### 2.6.6. Hispanic People Guns","f32d434e":"## 2.6. Weapons by Race\nLet's see if we can found a pattern of guns by race","d895a762":"### 2.7.1. Is there a relationship between Officer Gender and Weapons found?","bbef70d0":"# Thank You!\nHello guys! This is my **first data analysis**, so feel free to report errors, reviews or if you think I did something wrong, please do let me know.\n\nIf you have new ideas, do let me know and then we can create more visualizations on this kernel.","8e097652":"### 2.7.2. Is there a relationship between Officer Gender and Stop Resolution?","2fdfdcb4":"## 2.3. Stops by officer\nNow, let's see what are the first 10 officers that stopped more people.","efc904a3":"## 2.4. Weapons by the first 10 Officers\nNow, from the officers we saw above, we'll see what are the weapons that they find.","da70a141":"# Seattle Terry Stops Analysis\nIn this dataset, we'll analyse Seattle's Terry Stops.\n\nThis data represents records of police reported stops under Terry v. Ohio, 392 U.S. 1 (1968). Each row represents a unique stop. \n\n- Each record contains perceived demographics of the subject, as reported by the officer making the stop and officer demographics as reported to the Seattle Police Department, for employment purposes. \n\n- Where available, data elements from the associated Computer Aided Dispatch (CAD) event (e.g. Call Type, Initial Call Type, Final Call Type) are included.\n\nThis dataset contains the following data:\n- Subject Age Group: Subject Age Group (10 year increments) as reported by the officer.\n- Subject ID: Key, generated daily, identifying unique subjects in the dataset using a character to character match of first name and last name. \"Null\" values indicate an \"anonymous\" or \"unidentified\" subject. Subjects of a Terry Stop are not required to present identification.\n- GO \/ SC Num: General Offense or Street Check number, relating the Terry Stop to the parent report. This field may have a one to many relationship in the data.  \n- Terry Stop ID: Key identifying unique Terry Stop reports.\n- Stop Resolution: Resolution of the stop as reported by the officer.\n- Weapon Type: Type of weapon, if any, identified during a search or frisk of the subject. Indicates \"None\" if no weapons was found.\n- Officer ID: Key identifying unique officers in the dataset.\n- Officer YOB: Year of birth, as reported by the officer.\n- Officer Gender: Gender of the officer, as reported by the officer.\n- Officer Race: Race of the officer, as reported by the officer.\n- Subject Perceived Race: Perceived race of the subject, as reported by the officer.\n- Subject Perceived Gender: Perceived gender of the subject, as reported by the officer.\n- Reported Date: Date the report was filed in the Records Management System (RMS). Not necessarily the date the stop occurred but generally within 1 day.\n- Reported Time: Time the stop was reported in the Records Management System (RMS). Not the time the stop occurred but generally within 10 hours.\n- Initial Call Type: Initial classification of the call as assigned by 911.\n- Final Call Type: Final classification of the call as assigned by the primary officer closing the event.\n- Call Type: How the call was received by the communication center.\n- Officer Squad: Functional squad assignment (not budget) of the officer as reported by the Data Analytics Platform (DAP).\n- Arrest Flag: Indicator of whether a \"physical arrest\" was made, of the subject, during the Terry Stop. Does not necessarily reflect a report of an arrest in the Records Management System (RMS).\n- Frisk Flag: Indicator of whether a \"frisk\" was conducted, by the officer, of the subject, during the Terry Stop.\n- Precinct: Precinct of the address associated with the underlying Computer Aided Dispatch (CAD) event. Not necessarily where the Terry Stop occurred.\n- Sector: Sector of the address associated with the underlying Computer Aided Dispatch (CAD) event. Not necessarily where the Terry Stop occurred.\n- Beat: Beat of the address associated with the underlying Computer Aided Dispatch (CAD) event. Not necessarily where the Terry Stop occurred.\n\nPlease bear in mind that not all the data was used, so there are some columns that were not used for this visualization.","5b38b5a0":"As we can see, we have many columns that contains null values. Let's drop it.","d31d62fe":"# Summary\n* [1. Data Cleaning](#1.-Initial-Data-Cleaning)\n* [2. Analysis](#2.-Analysis)\n    * [2.1. Age Comparison](#2.1.-Age-comparison)\n    * [2.2. Stop Resolution Comparison](#2.2.-Stop-Resolution-Comparison)\n    * [2.3. Stops bt Officer](#2.3.-Stops-by-officer)\n    * [2.4. Weapons by the first 10 Officers](#2.4.-Weapons-by-the-first-10-Officers)\n    * [2.5. The Top 5 Weapon Types of our Entire Dataframe](#2.5.-The-Top-5-Weapon-Types-of-our-Entire-Dataframe)\n    * [2.6. Weapons by Race](#2.6.-Weapons-by-Race)\n        * [2.6.1. Multi-Racial People Guns](#2.6.1.-Multi-Racial-People-Guns)\n        * [2.6.2. Black People Guns](#2.6.2.-Black-People-Guns)\n        * [2.6.3. White People Guns](#2.6.3.-White-People-Guns)\n        * [2.6.4. American Indian \/ Alaskan Native People Guns](#2.6.4.-American-Indian-\/-Alaskan-Native-People-Guns)\n        * [2.6.5. Asias People Guns](#2.6.5.-Asias-People-Guns)\n        * [2.6.6. Hispanic People Guns](#2.6.6.-Hispanic-People-Guns)\n        * [2.6.7. Other People Guns](#2.6.7.-Other-People-Guns)\n    * [2.7. What Officer Gender is the most usual?](#2.7.-What-Officer-Gender-is-the-most-usual?)\n        * [2.7.1. Is there a relationship between Officer Gender and Weapons found?](#2.7.1.-Is-there-a-relationship-between-Officer-Gender-and-Weapons-found?)\n        * [2.7.2. Is there a relationship between Officer Gender and Stop Resolution?](#2.7.2.-Is-there-a-relationship-between-Officer-Gender-and-Stop-Resolution?)\n    * [2.8. What is the reprentation of the first 5 squads?](#2.8.-What-is-the-reprentation-of-the-first-5-squads?)\n        * [2.8.1. Stop occurrences by Officer Squad](#2.8.1.-Stop-occurrences-by-Officer-Squad)\n        * [2.8.2. Percentage of Stops by Seattle Precinct](#2.8.2.-Percentage-of-Stops-by-Seattle-Precinct)\n        * [2.8.3. Occurences by Sector](#2.8.3.-Occurences-by-Sector)","5d95b825":"As a result, we could see that Seattle Officers' findings are mainly Lethal Cutting Instruments - approximately 3\/4."}}