{"cell_type":{"1a5a8f71":"code","67f2bf78":"code","23d782f6":"code","3826a482":"code","302ab385":"code","9b7e7fec":"code","f5b3c821":"code","cf761992":"code","444d21a1":"markdown","c48b2012":"markdown","c5b3d64b":"markdown","5751e641":"markdown","64f15ee6":"markdown","d99fe572":"markdown"},"source":{"1a5a8f71":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67f2bf78":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom xgboost import XGBClassifier","23d782f6":"import warnings\nwarnings.filterwarnings('ignore')","3826a482":"train = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/test.csv')\n\nx_data = train.drop(['id', 'target'], axis=1)\nx_test = test.drop(['id'], axis=1)\n\ny_data = train.target","302ab385":"x_train, x_val, y_train, y_val = train_test_split(x_data, y_data)","9b7e7fec":"model = XGBClassifier(tree_method='gpu_hist', predictor='gpu_predictor')\nmodel.fit(x_train, y_train)\ny_pred = model.predict_proba(x_val)[:,1]\n\nacc = roc_auc_score(y_val, y_pred)\nprint(f'validation roc auc score {acc}')\nprint(f'train roc auc score {roc_auc_score(y_train, model.predict_proba(x_train)[:, 1])}')","f5b3c821":"y_test = model.predict_proba(x_test)[:, 1]","cf761992":"submission = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv')\nsubmission.target = y_test\nsubmission.to_csv('submission.csv', index=False)","444d21a1":"### Split train and val data","c48b2012":"### Import library","c5b3d64b":"### Predict test label","5751e641":"### Save prediction and submission","64f15ee6":"### Train model","d99fe572":"### Read data"}}