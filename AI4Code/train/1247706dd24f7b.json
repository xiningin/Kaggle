{"cell_type":{"df0e8a80":"code","dbed53b8":"code","c31db072":"code","6ca50c2d":"code","864f8d42":"code","419a7175":"code","ff21c885":"code","24f10f3b":"code","7f5ba6cb":"code","0592c2df":"code","f669f57b":"code","9ade264b":"code","ee404cfe":"code","3f57caf6":"code","bcfa5c3c":"code","e3dc58be":"code","a23f64c3":"code","b2338fba":"code","824d2939":"code","d84f6f28":"code","f659b545":"code","6a3fa549":"code","e600a9bc":"code","80ae5d46":"code","0ef51b3e":"code","b72ccee6":"code","c8056a46":"code","412a3001":"code","e2de298e":"code","74d4973e":"code","0637e618":"code","78b43cb1":"code","8d7fa4c5":"code","28408754":"code","f755bc17":"code","94f5899c":"code","b3859d22":"code","1238931c":"code","613dca34":"code","0903074f":"code","90a077a5":"code","e7312b35":"code","bd6a63f5":"code","df43e190":"code","93047f4c":"markdown","60b6d33d":"markdown","35e74378":"markdown","9f68a5ea":"markdown","f54e908f":"markdown","295da21c":"markdown","257dc316":"markdown","500cf545":"markdown","f8b24081":"markdown","361be6b8":"markdown","89e0d361":"markdown","ec892f08":"markdown","bff5f21a":"markdown","b79571d2":"markdown","1b2651cb":"markdown","1d8ab399":"markdown","078e20a1":"markdown","2a9ff725":"markdown","5caac61c":"markdown","40850d1c":"markdown","2e47ad58":"markdown"},"source":{"df0e8a80":"import math\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.dates as mdates\nimport datetime","dbed53b8":"plt.style.use('https:\/\/raw.githubusercontent.com\/robertritz\/mongoliandatastories\/main\/notebooks\/mds.mplstyle')\npd.set_option('display.max_rows', 1000)","c31db072":"df = pd.read_csv(\"..\/input\/ub-market-prices\/prices_en.csv\")","6ca50c2d":"df.dtypes","864f8d42":"df.head()","419a7175":"df['date'] = pd.to_datetime(df['date'])","ff21c885":"df = df.sort_values(by='date').reset_index(drop=True)","24f10f3b":"df.head()","7f5ba6cb":"df.tail()","0592c2df":"df.dtypes","f669f57b":"df.sample(2)","9ade264b":"df.shape","ee404cfe":"df['product'].unique()","3f57caf6":"heatmap = (df.\n           groupby(by=['market','product'])\n           .count()\n           .reset_index()\n           .pivot(index='market', columns='product', values='price') \n           \/ len(df['date'].unique()))","bcfa5c3c":"fig, ax = plt.subplots(figsize=(21,9))\nsns.heatmap(heatmap, ax=ax, cmap='Blues', linewidths=0.5, square=True)\n\n# This nice trick works with text and dates. \nfig.autofmt_xdate(rotation=45)\n\n# Remove axis labels\nax.set_ylabel('')    \nax.set_xlabel('')\n\n# Set title and subtitle\nax.text(x=0, y=.94, s=\"Where's the beef?\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=0, y=.90, s=\"Product Availability at Ulaanbaatar Markets, January 2019 to November 2021\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = 0, y = -.11, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16, )\nax.text(x = .84, y = -.11, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n##plt.savefig('images\/product_availability.png', dpi = 300, bbox_inches=\"tight\")","e3dc58be":"np.sort(df['product'].unique())","a23f64c3":"product_list = ['Suu Brand Milk, 1l',\n                'Egg, Russian',\n                'Potato, Mongolian',\n                'Carrot, Mongolian',\n                'White Rice',\n                'Atar Brand Bread', \n                'Beef w\/Bones',\n                'Mutton w\/Bones']","b2338fba":"product_list","824d2939":"fig, axs = plt.subplots(4, 2, figsize=(18,40))\n\n# The plot now is missing tick labels on the subplots. Let's add them back.\nfor ax in fig.axes:\n    # Add missing tick labels\n    ax.tick_params(axis='both', which='major', bottom=True, left=True, labelbottom=True,  labelleft=True)\n    # Set xlim and ylim\n    #ax.set_ylim(0, round(filtered_df['price'].max(), -3))\n    #ax.set_xlim(filtered_df['date'].min(), filtered_df['date'].max())\n\n\n# Loop through products to make the plots  \nfor product, ax in zip(product_list, fig.axes):\n    for market in df['market'].unique():\n        x = df[(df['market'] == market) & (df['product'] == product)]['date']\n        y = df[(df['market'] == market) & (df['product'] == product)]['price']\n        ax.plot(x, y, label=market)\n        ax.title.set_text(product)\n        \n# Set legend for entire plot\n#lines_labels = [ax.get_legend_handles_labels() for ax in fig.axes]\n#lines, labels = [sum(lol, []) for lol in zip(*lines_labels)]\n#fig.legend(labels);\n\n# Save image\n##plt.savefig('images\/product_timeseries.png', dpi = 300, bbox_inches=\"tight\")","d84f6f28":"df['market'].unique()","f659b545":"market_order = {'Khuchit Shonkhor':0, 'Kharkhorin':1, 'Bars':2 , 'Bayanzurkh': 3, \n                'Bumbugur': 4,  'Tavan Erdene': 5, 'Mercury\/Ikh Nayad': 6, 'Ikh Nayad': 7, \n                'Saruul': 8, 'Sansar': 9, 'Emart': 10, 'Max\/M Mart': 11, 'Nomin': 12, 'Orgil': 13}","6a3fa549":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Suu Brand Milk, 1l'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(2400, 3500)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Suu Brank Milk\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per 1 Liter\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n##plt.savefig('images\/milk_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","e600a9bc":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Egg, Russian'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = (df[(df['product'] == product) & \n                 ((df['date'] == date1) | \n                 (df['date'] == date2))][['market','date','price']]\n              .pivot(index='market',columns='date', values='price'))\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, \n          xmin=product_df[date1], \n          xmax=product_df[date2], \n          color='darkgrey', \n          zorder=1, \n          linewidth=3, \n          label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(200, 600)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Eggs\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per Egg\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/eggs_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","80ae5d46":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Potato, Mongolian'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(400, 1600)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Potatos, Mongolian\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per KG\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/potato_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","0ef51b3e":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Carrot, Mongolian'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(0, 4000)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Carrots, Mongolian\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per KG\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/carrots_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","b72ccee6":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'White Rice'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(3250, 4500)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"White Rice\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per KG\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/rice_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","c8056a46":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Atar Brand Bread'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(1150, 1650)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Atar Bread\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per Loaf\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/bread_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","412a3001":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Beef w\/Bones'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(8000, 18000)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Beef with Bones\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per KG\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/beef_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","e2de298e":"fig, ax = plt.subplots(figsize=(12,9))\n\n# Set variables\nproduct = 'Mutton w\/Bones'\ndate1 = '2019-11-13'\ndate2 = '2021-11-17'\nmarket_range = range(1, len(df['market'].unique())+1)\n\n# Format Data\nproduct_df = df[(df['product'] == product) & ((df['date'] == date1) | (df['date'] == date2))][['market','date','price']].pivot(index='market',columns='date', values='price')\nproduct_df = product_df.groupby(product_df.index).max()\nproduct_df = product_df.sort_index(key=lambda x: x.map(market_order), ascending=False)\n\n# Plot lines and markers\nax.grid(visible=True, which='major', axis='both')\nax.hlines(y=product_df.index, xmin=product_df[date1], xmax=product_df[date2], color='darkgrey', zorder=1, linewidth=3, label='_nolegend_')\nax.scatter(product_df[date1], product_df.index, label='November 2019', s=120)\nax.scatter(product_df[date2], product_df.index, label='November 2021', s=120)\n\n# Format axes\nax.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nax.set_xlim(5000, 15000)\nyax = ax.get_yaxis()\npad = max(T.label.get_window_extent().width for T in yax.majorTicks)\nyax.set_tick_params(pad=pad+140)\nax.set_yticklabels(product_df.index, ha = 'left')\n\n# Set Legend\nax.legend(['November 2019', 'November 2021'], loc=(.55,1), ncol=2, frameon=False, handletextpad=.1, handleheight=1)\n\n# Set title and subtitle\nax.text(x=-.085, y=.94, s=\"Mutton with Bones\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=-.085, y=.90, s=\"MNT per KG\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = -.085, y = 0, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .95, y = 0, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/mutton_dumbbell.png', dpi = 300, bbox_inches=\"tight\")","74d4973e":"product_list","0637e618":"avg_df = df[df['product'].isin(product_list)].groupby(by=['product', 'date'], dropna=True).mean().reset_index()","78b43cb1":"fig, ax = plt.subplots(figsize=(16,9))\n\navg_df = df[df['product'].isin(product_list)].groupby(by=['product', 'date']).mean().reset_index()\nx = avg_df['date'].unique()\n\nfor product in product_list:\n    ax.plot(x, avg_df[avg_df['product'] == product]['price'], label=product)\nax.legend()","8d7fa4c5":"product_list","28408754":"datetime.date(2020,8,1)","f755bc17":"fig, ax = plt.subplots(figsize=(16,9))\n\nsub_list = ['Suu Brand Milk, 1l',\n            'Egg, Russian',\n            'Potato, Mongolian',\n            'Carrot, Mongolian',\n            'White Rice',\n            'Atar Brand Bread',]\n\navg_df = df[df['product'].isin(sub_list)].groupby(by=['product', 'date']).mean().reset_index()\nx = avg_df['date'].unique()\n\nfor product in sub_list:\n    ax.plot(x, avg_df[avg_df['product'] == product]['price'], label=product)\nax.set_xlim(datetime.date(2019,1,1), datetime.date(2021,11,28))\n\n# Set title and subtitle\nax.text(x=0.03, y=.94, s=\"Inflation > COVID\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=0.03, y=.90, s=\"Average weekly prices in Ulaanbaatar markets, January 2019 to November 2021\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = 0.03, y = -.02, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16)\nax.text(x = .96, y = -.02, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n\n# Set axis label\nax.set_ylabel(\"Average Product Price\") \n\n# Custom label formatting\nax.xaxis.set_major_formatter(mdates.ConciseDateFormatter(ax.xaxis.get_minor_locator()))\nax.xaxis.set_minor_locator(mdates.MonthLocator())\nax.tick_params(axis='x', which='both', direction='out', length=5)\n\n# Annotations\ncolors = plt.rcParams['axes.prop_cycle'].by_key()['color']\n\nax.text(x = .75, y = .64, s = 'Suu Brand Milk, 1l', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[0])\nax.text(x = .7, y = .135, s = 'Egg, Russian', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[1])\nax.text(x = .71, y = .26, s = 'Potato, Mongolian', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[2])\nax.text(x = .77, y = .38, s = 'Carrot, Mongolian', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[3])\nax.text(x = .8, y = .81, s = 'White Rice', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[4])\nax.text(x = .83, y = .32, s = 'Atar Brand Bread', transform=fig.transFigure, ha='right', fontsize = 15, color=colors[5])\n\n#plt.savefig('images\/inflation_covid.png', dpi = 300, bbox_inches=\"tight\")","94f5899c":"df['thousands'] = df['price'] % 1000 == 0","b3859d22":"df['hundreds'] = df['price'] % 100 == 0","1238931c":"df['tens'] = df['price'] % 10 == 0","613dca34":"end_price = df.groupby(by=['market']).sum().reset_index()","0903074f":"end_price.head()","90a077a5":"end_price = end_price.sort_values(by='thousands', ascending=False)","e7312b35":"fig, ax = plt.subplots()\n\nax.bar(end_price['market'], end_price['thousands'])\n\n# This nice trick works with text and dates. \nfig.autofmt_xdate(rotation=45)\n\n# Set axis labels\nax.set_ylabel(\"Frequency of price in 1,000's\")    \n\n# Set title and subtitle\nax.text(x=0.02, y=.94, s=\"Simple Pricing\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=0.02, y=.90, s=\"Frequency of prices ending in '000, Jan 2019 to Nov 2021\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = 0.02, y = -.02, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16, )\nax.text(x = .96, y = -.02, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/prices_thousands.png', dpi = 300, bbox_inches=\"tight\")","bd6a63f5":"fig, ax = plt.subplots()\n\nax.bar(end_price['market'], end_price['hundreds'])\n\n# This nice trick works with text and dates. \nfig.autofmt_xdate(rotation=45)\n\n# Remove axis labels\nax.set_ylabel(\"Frequency of price in 100's\")    \n\n# Set title and subtitle\nax.text(x=0.02, y=.94, s=\"Markets like even prices\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=0.02, y=.90, s=\"Frequency of prices ending in '00, Jan 2019 to Nov 2021\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = 0.02, y = -.02, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16, )\nax.text(x = .96, y = -.02, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/prices_hundreds.png', dpi = 300, bbox_inches=\"tight\")","df43e190":"fig, ax = plt.subplots()\n\nax.bar(end_price['market'], end_price['tens'])\n\n# This nice trick works with text and dates. \nfig.autofmt_xdate(rotation=45)\n\n# Remove axis labels\nax.set_ylabel(\"Frequency of price in 10's\")    \n\n# Set title and subtitle\nax.text(x=0.02, y=.94, s=\"Nomin likes weird prices\", transform=fig.transFigure, ha='left', fontsize=26, weight='bold', alpha=.8)\nax.text(x=0.02, y=.90, s=\"Frequency of prices ending in '0, Jan 2019 to Nov 2021\", transform=fig.transFigure, ha='left', fontsize=18, alpha=.8)\n\n# Set bottom banner\nax.text(x = 0.02, y = -.02, s = '\u00a9Mongolian Data Stories', transform=fig.transFigure, ha='left', fontsize = 16, )\nax.text(x = .96, y = -.02, s = 'Data Source: 1212.mn', transform=fig.transFigure, ha='right', fontsize = 16)\n#plt.savefig('images\/prices_tens.png', dpi = 300, bbox_inches=\"tight\")","93047f4c":"### \u0422\u04e9\u043c\u0441, \u043c\u043e\u043d\u0433\u043e\u043b - Mongolian Potatos","60b6d33d":"## 2. How did COVID impact prices?","35e74378":"Of course the first question on most people's mind is, which markets have the most or least expensive products? There are several products that are very similar, such as different types of flour, that make the analysis a bit complicated. To make things simpler I will choose a few products that are very common:\n\nTo show this I will build a plot for each product, comparing prices for each product.","9f68a5ea":"Let's translate our names so we can more easily read them.","f54e908f":"### \u0411\u0443\u0434\u0430\u0430 \u0446\u0430\u0433\u0430\u0430\u043d - White Rice","295da21c":"First we should determine which markets regularly carry each product. Because we have a large number of products and markets we could perhaps build a heatmap.","257dc316":"<a style='text-decoration:none;line-height:16px;display:flex;color:#5B5B62;padding:10px;justify-content:end;' href='https:\/\/deepnote.com?utm_source=created-in-deepnote-cell&projectId=5c29b651-5799-4ecf-8ca8-8e3f274961e2' target=\"_blank\">\n<img alt='Created in deepnote.com' style='display:inline;max-height:16px;margin:0px;margin-right:7.5px;' src='data:image\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iODBweCIgaGVpZ2h0PSI4MHB4IiB2aWV3Qm94PSIwIDAgODAgODAiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDU0LjEgKDc2NDkwKSAtIGh0dHBzOi8vc2tldGNoYXBwLmNvbSAtLT4KICAgIDx0aXRsZT5Hcm91cCAzPC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPgogICAgPGcgaWQ9IkxhbmRpbmciIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJBcnRib2FyZCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTEyMzUuMDAwMDAwLCAtNzkuMDAwMDAwKSI+CiAgICAgICAgICAgIDxnIGlkPSJHcm91cC0zIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjM1LjAwMDAwMCwgNzkuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICA8cG9seWdvbiBpZD0iUGF0aC0yMCIgZmlsbD0iIzAyNjVCNCIgcG9pbnRzPSIyLjM3NjIzNzYyIDgwIDM4LjA0NzY2NjcgODAgNTcuODIxNzgyMiA3My44MDU3NTkyIDU3LjgyMTc4MjIgMzIuNzU5MjczOSAzOS4xNDAyMjc4IDMxLjY4MzE2ODMiPjwvcG9seWdvbj4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0zNS4wMDc3MTgsODAgQzQyLjkwNjIwMDcsNzYuNDU0OTM1OCA0Ny41NjQ5MTY3LDcxLjU0MjI2NzEgNDguOTgzODY2LDY1LjI2MTk5MzkgQzUxLjExMjI4OTksNTUuODQxNTg0MiA0MS42NzcxNzk1LDQ5LjIxMjIyODQgMjUuNjIzOTg0Niw0OS4yMTIyMjg0IEMyNS40ODQ5Mjg5LDQ5LjEyNjg0NDggMjkuODI2MTI5Niw0My4yODM4MjQ4IDM4LjY0NzU4NjksMzEuNjgzMTY4MyBMNzIuODcxMjg3MSwzMi41NTQ0MjUgTDY1LjI4MDk3Myw2Ny42NzYzNDIxIEw1MS4xMTIyODk5LDc3LjM3NjE0NCBMMzUuMDA3NzE4LDgwIFoiIGlkPSJQYXRoLTIyIiBmaWxsPSIjMDAyODY4Ij48L3BhdGg+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMCwzNy43MzA0NDA1IEwyNy4xMTQ1MzcsMC4yNTcxMTE0MzYgQzYyLjM3MTUxMjMsLTEuOTkwNzE3MDEgODAsMTAuNTAwMzkyNyA4MCwzNy43MzA0NDA1IEM4MCw2NC45NjA0ODgyIDY0Ljc3NjUwMzgsNzkuMDUwMzQxNCAzNC4zMjk1MTEzLDgwIEM0Ny4wNTUzNDg5LDc3LjU2NzA4MDggNTMuNDE4MjY3Nyw3MC4zMTM2MTAzIDUzLjQxODI2NzcsNTguMjM5NTg4NSBDNTMuNDE4MjY3Nyw0MC4xMjg1NTU3IDM2LjMwMzk1NDQsMzcuNzMwNDQwNSAyNS4yMjc0MTcsMzcuNzMwNDQwNSBDMTcuODQzMDU4NiwzNy43MzA0NDA1IDkuNDMzOTE5NjYsMzcuNzMwNDQwNSAwLDM3LjczMDQ0MDUgWiIgaWQ9IlBhdGgtMTkiIGZpbGw9IiMzNzkzRUYiPjwvcGF0aD4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+' > <\/img>\nCreated in <span style='font-weight:600;margin-left:4px;'>Deepnote<\/span><\/a>","500cf545":"## Data Cleaning","f8b24081":"## 3. Do stores use psychological pricing?","361be6b8":"### \u04ae\u0445\u0440\u0438\u0439\u043d \u043c\u0430\u0445 \u044f\u0441\u0442\u0430\u0439 - Beef with Bones","89e0d361":"### Failed attempt to make an easy to read line plot","ec892f08":"# Market Price Analysis\n\nThis notebook analyzes prices from large markets in Ulaanbaatar, Mongolia from Janaury 2019 to November 2021. The data in this project is updated, but this analysis will be static as it will be used for a post on Mongolian Data Stories.\n\nIf you want to see the code used to collect the data for this analysis, see [here](https:\/\/deepnote.com\/project\/UB-Market-Price-Analysis-XCm2UVeZTs-MqI4_J0lh4g\/%2FData%20Collection.ipynb).\n\nYou can see the complete article I wrote with this analysis at Mongolian Data Stories [here](https:\/\/mongoliandatastories.com\/UB-Market-Price-Analysis).\n\nQuestions I've identified:\n\n- What markets are most\/least expensive consistently?\n- How did COVID impact prices?\n- Is there a sign of psychological pricing?","bff5f21a":"Change date to a datetime and sort so we can see the date range for our data.","b79571d2":"## 1. What markets are most\/least expensive consistently?","1b2651cb":"### \u041b\u0443\u0443\u0432\u0430\u043d, \u043c\u043e\u043d\u0433\u043e\u043b - Carrots, Mongolian","1d8ab399":"Well this isn't as clear as I hoped. The prices mix around quite a lot between the markets. There is a clear difference between the high and low end of the market, but there is also a lot of price crossover. \n\nLet's take a different approach and instead make a plot for each product individually so we can see more of what is happening. Instead of showing the time series I will take two dates, one from 2019 and one from 2021 and show the change. We will use a dumbbell plot as this can show the change with less noise.","078e20a1":"## 0. Which markets have which products?","2a9ff725":"### \u04e8\u043d\u0434\u04e9\u0433, \u041e\u0425\u0423 - Russian Eggs","5caac61c":"### \u0422\u0430\u043b\u0445 \u0410\u0442\u0430\u0440 - Atar Brand Bread","40850d1c":"### \u0421\u04af\u04af \u0425\u041a 1\u043b - Suu Brand Milk, 1L","2e47ad58":"### \u0425\u043e\u043d\u0438\u043d\u044b \u043c\u0430\u0445 \u044f\u0441\u0442\u0430\u0439 - Mutton with Bones"}}