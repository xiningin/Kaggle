{"cell_type":{"edf41ec8":"code","6a83c357":"code","271fbb83":"code","1350e6c8":"code","9ba6427c":"code","30b6bdba":"code","6f378e99":"code","1c7e3bc4":"code","d8d31fca":"code","a0c1697d":"code","9fdde5ff":"code","2a2a9caa":"code","8a50c514":"code","d5cea925":"code","eadfe16f":"code","536fb11b":"code","1dd0fadc":"code","5f48ecab":"markdown","2d1c903a":"markdown","35164af6":"markdown","d26fc664":"markdown","bbd3c468":"markdown","38e1f9e0":"markdown","a8fe88ce":"markdown","72f4dd7e":"markdown","d12aab7d":"markdown"},"source":{"edf41ec8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a83c357":"import seaborn as sns \n%matplotlib notebook\nimport matplotlib.pyplot as plt\n","271fbb83":"df1=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\n               ","1350e6c8":"df1.head()","9ba6427c":"def dataframe(df):\n    missing_value=df.isnull().sum()\n    missing_percentage=100*(missing_value\/len(df))\n    new_df=pd.concat([missing_value,missing_percentage],axis=1)\n    new_df_rename=new_df.rename(columns={0:'no of missing values',1:'% of missing values'})\n    new_new_df=new_df_rename[new_df_rename.iloc[:,0]!=0].sort_values(by='% of missing values',ascending=False).round(1)\n    return new_new_df","30b6bdba":"df2=dataframe(df1)","6f378e99":"df2","1c7e3bc4":"df1.head()","d8d31fca":"df1.drop(columns=['Id','PoolQC','MiscFeature','Alley','Fence'],inplace=True)","a0c1697d":"df1","9fdde5ff":"import missingno as msno","2a2a9caa":"df_missing=df1[['FireplaceQu','LotFrontage',\"GarageType\",'GarageYrBlt','GarageFinish','GarageQual','GarageCond','BsmtExposure','BsmtFinType2','BsmtFinType1','BsmtCond','BsmtQual','MasVnrArea','MasVnrType','Electrical']]","8a50c514":"df_missing","d5cea925":"msno.bar(df_missing)","eadfe16f":"msno.heatmap(df_missing)","536fb11b":"msno.dendrogram(df_missing)","1dd0fadc":"msno.matrix(df_missing)","5f48ecab":"NOW WE ARE MAKING THE NEW DATAFRAME CONSISTING ONLY OF MISSING VALUE TO IDENTIFY THE PATTERNS IN MISSING VALUE","2d1c903a":"now we are seeing 'garageType','garageYrbelt','garageFinish','GarageQual','garageCond' have all missing values in a same row which signifies tha nullity corelation should be 1 and you can also verify using heatmap","35164af6":"MATRIX ARRANGES EVERYTHIING BY ROW DARK LINE REFERS TO NON NULL VALUE\nAND WHITE LINE REFERS TO NULL VALUE","d26fc664":"WE WILL CHECK THIS WHEN WE PLOT MATRIX OF MISSING VALUES USING MISSINGNO LIBRARY","bbd3c468":"columns with missing values and their percentage \n","38e1f9e0":"THE HEATMAP TELLS ABOUT NULLITY CORELATION RANGING FROM -1 TO 1\nSO NULLITY CORRELATION IS HOW STRONGLY THE PRESENCE OR ABSENCE OF ONE VARRIABLE AFFECTS THE PRESENCE OF ANOTHER\n\nWHEN  NULLITY CORRELATION IS -1 IT SIGNIFIES THAT THE COLUMN  WTIH  ROWS OF MISSING VALUES HAS ALL  NON MISSING VALUES ROWS  WITH CORELATED COLUMN\nAND VICE VERSA FOR 1\n\n","a8fe88ce":"1. IMPORTING MISSING VALUE LIBRARY THIS WILL HELP TO ANALYSE THE MISSING VALUE GRAPHICALLY","72f4dd7e":"FOR LARGE DATA FEATURES IT IS DIFFICULT TO ANALYSE HEATMAP SO WE PLOT DENDROGRAM IT ALSO USES NULLITY CORELATION\nAND GROUP EACH OTHER VIA HIERACHIAL CLUSTERING","d12aab7d":"as we can see that \n1) POOLQC\n2) MISCFEATURE\n3) ALLEY\n4) FENCE\nIT HAS MORE THAN 80 PERCENT MISSING VALUES SO IT WILL BE BETTER TO REMOvE THE COLUMNS BECAUSE IMPUTING WILL CREATE BIAS ONLY**"}}