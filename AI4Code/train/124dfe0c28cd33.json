{"cell_type":{"88fb1bcf":"code","924a1bac":"code","358018ef":"code","537c9ffc":"code","d795b4f9":"code","0b37dc54":"code","56cdf5a5":"code","9d7d3a37":"code","f51d3718":"code","2bda6af2":"code","874add92":"code","b0d74616":"code","d037f87a":"code","103e6914":"code","fca0c4bf":"code","a8c60585":"markdown","07ec4bda":"markdown","41512e95":"markdown"},"source":{"88fb1bcf":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\npd.options.display.max_columns = 999","924a1bac":"pitch_stat = pd.read_csv('\/kaggle\/input\/mlb-statcast-data\/Statcast_2020.csv')\npitch_stat = pitch_stat[(pitch_stat['balls'] <= 3)& (pitch_stat['strikes'] <= 2)]","358018ef":"tango_re288 = np.array(pd.read_csv('\/kaggle\/input\/re288-tango\/re288_tango.csv',header=None))\n\npitch_stat['run_scored'] = pitch_stat['des'].str.count('scores').fillna(0)\npitch_stat.loc[pitch_stat['events'] == 'home_run', 'run_scored'] += 1\npitch_stat['on_1b_code'] = 1-pitch_stat.on_1b.isna().astype(int)\npitch_stat['on_2b_code'] = 1-pitch_stat.on_2b.isna().astype(int)\npitch_stat['on_3b_code'] = 1-pitch_stat.on_3b.isna().astype(int)\n\npitch_stat['on_base_code'] = 0\npitch_stat.loc[(pitch_stat.on_1b_code == 1)&(pitch_stat.on_2b_code == 0)&(pitch_stat.on_3b_code == 0) , 'on_base_code'] = 1\npitch_stat.loc[(pitch_stat.on_1b_code == 0)&(pitch_stat.on_2b_code == 1)&(pitch_stat.on_3b_code == 0) , 'on_base_code'] = 2\npitch_stat.loc[(pitch_stat.on_1b_code == 1)&(pitch_stat.on_2b_code == 1)&(pitch_stat.on_3b_code == 0) , 'on_base_code'] = 3\npitch_stat.loc[(pitch_stat.on_1b_code == 0)&(pitch_stat.on_2b_code == 0)&(pitch_stat.on_3b_code == 1) , 'on_base_code'] = 4\npitch_stat.loc[(pitch_stat.on_1b_code == 1)&(pitch_stat.on_2b_code == 0)&(pitch_stat.on_3b_code == 1) , 'on_base_code'] = 5\npitch_stat.loc[(pitch_stat.on_1b_code == 0)&(pitch_stat.on_2b_code == 1)&(pitch_stat.on_3b_code == 1) , 'on_base_code'] = 6\npitch_stat.loc[(pitch_stat.on_1b_code == 1)&(pitch_stat.on_2b_code == 1)&(pitch_stat.on_3b_code == 1) , 'on_base_code'] = 7\n\npitch_stat['row_ref'] = (3*pitch_stat['balls'] + pitch_stat['strikes']).astype(int)\npitch_stat['col_ref'] = (8*pitch_stat['outs_when_up'] + pitch_stat['on_base_code']).astype(int)\npitch_stat['RE288'] = tango_re288[pitch_stat['col_ref'].values,pitch_stat['row_ref'].values]\npitch_stat = pitch_stat.sort_values(by=['level_0'])\n\n\npitch_stat['RA'] = pitch_stat['RE288'].diff(-1).shift(1) + pitch_stat['run_scored'] #change of RE288\npitch_stat['RA'] = pitch_stat['RA'].fillna(0)\npitch_stat['inning_diff'] =  pitch_stat['inning'].diff().fillna(-1)\npitch_stat.loc[(pitch_stat['inning_diff'] != 0) & (pitch_stat['run_scored'] == 0), 'RA'] = -pitch_stat['RE288']","537c9ffc":"pitch_stat.groupby('description')['RA'].mean()","d795b4f9":"pitch_stat['yR'] = 60-pitch_stat.release_extension\npitch_stat['tR'] = (-pitch_stat.vy0 - (pitch_stat.vy0**2-2*pitch_stat.ay*(50-pitch_stat.yR))**0.5)\/pitch_stat.ay\npitch_stat['vxR'] = pitch_stat.vx0 + pitch_stat.ax * pitch_stat.tR\npitch_stat['vyR'] = pitch_stat.vy0 + pitch_stat.ay * pitch_stat.tR\npitch_stat['vzR'] = pitch_stat.vz0 + pitch_stat.az * pitch_stat.tR\npitch_stat['dv0'] = pitch_stat.release_speed - (pitch_stat.vxR**2+pitch_stat.vyR**2+pitch_stat.vzR**2)**0.5\/1.467\npitch_stat['tf'] = (-pitch_stat.vyR-(pitch_stat.vyR**2-2*pitch_stat.ay*(pitch_stat.yR-17\/12))**0.5)\/pitch_stat.ay\n\npitch_stat['x_mvt'] = pitch_stat.plate_x - pitch_stat.release_pos_x - (pitch_stat.vxR\/pitch_stat.vyR)*(17\/12-pitch_stat.yR)\npitch_stat['z_mvt'] = pitch_stat.plate_z - pitch_stat.release_pos_z - (pitch_stat.vzR\/pitch_stat.vyR)*(17\/12-pitch_stat.yR) + 0.5*32.174*pitch_stat.tf**2\n\npitch_stat['vxbar'] = (2*pitch_stat.vxR+pitch_stat.ax*pitch_stat.tf)\/2\npitch_stat['vybar'] = (2*pitch_stat.vyR+pitch_stat.ay*pitch_stat.tf)\/2\npitch_stat['vzbar'] = (2*pitch_stat.vzR+pitch_stat.az*pitch_stat.tf)\/2\npitch_stat['vbar'] = (pitch_stat.vxbar**2+pitch_stat.vybar**2+pitch_stat.vzbar**2)**0.5\n\n\npitch_stat['adrag'] = -(pitch_stat.ax*pitch_stat.vxbar+pitch_stat.ay*pitch_stat.vybar+(pitch_stat.az+32.174)*pitch_stat.vzbar)\/pitch_stat.vbar\npitch_stat['Cd'] = pitch_stat.adrag\/(5.153E-03*pitch_stat.vbar**2)\n\npitch_stat['amagx'] = pitch_stat.ax+pitch_stat.adrag*pitch_stat.vxbar\/pitch_stat.vbar\npitch_stat['amagy'] = pitch_stat.ay+pitch_stat.adrag*pitch_stat.vybar\/pitch_stat.vbar\npitch_stat['amagz'] = pitch_stat.az+pitch_stat.adrag*pitch_stat.vzbar\/pitch_stat.vbar+32.174\npitch_stat['amag'] = (pitch_stat.amagx**2+pitch_stat.amagy**2+pitch_stat.amagz**2)**0.5\n\npitch_stat['Mx'] = 0.5*pitch_stat.amagx*pitch_stat.tf**2*12\npitch_stat['Mz'] = 0.5*pitch_stat.amagz*pitch_stat.tf**2*12\n\npitch_stat['Cl'] = pitch_stat.amag\/(5.153E-03*pitch_stat.vbar**2)\npitch_stat['S'] = 0.4*pitch_stat.Cl\/(1-2.32*pitch_stat.Cl)\n\npitch_stat['spinT'] = 78.92*pitch_stat.S*pitch_stat.vbar\npitch_stat['spinTX'] = pitch_stat.spinT*(pitch_stat.vybar*pitch_stat.amagz-pitch_stat.vzbar*pitch_stat.amagy)\/(pitch_stat.amag*pitch_stat.vbar)\npitch_stat['spinTY'] = pitch_stat.spinT*(pitch_stat.vzbar*pitch_stat.amagx-pitch_stat.vxbar*pitch_stat.amagz)\/(pitch_stat.amag*pitch_stat.vbar)\npitch_stat['spinTZ'] = pitch_stat.spinT*(pitch_stat.vxbar*pitch_stat.amagy-pitch_stat.vybar*pitch_stat.amagx)\/(pitch_stat.amag*pitch_stat.vbar)\n\npitch_stat['spin_check'] = (pitch_stat.spinTX**2+pitch_stat.spinTY**2+pitch_stat.spinTZ**2)**0.5-pitch_stat.spinT\n\npitch_stat['phi'] = np.arctan2(pitch_stat.amagz,pitch_stat.amagx)*180\/math.pi\npitch_stat['phi'] = pitch_stat['phi'] + pitch_stat['amagz'].apply(lambda x: 360 if x < 0 else 0)\npitch_stat['spin_eff'] = pitch_stat.spinT\/pitch_stat.release_spin_rate\n\npitch_stat['flag'] = pitch_stat['description'].apply(lambda x: 1 if x == 'swinging_strike' else 0)\npitch_stat['flag_2'] = pitch_stat['estimated_woba_using_speedangle'].apply(lambda x: 1 if x>= 0 else 0)","0b37dc54":"spin_dir = pd.read_csv('\/kaggle\/input\/spin-direction-2020\/spin_direction_pbp.csv')\npitch_stat = pd.merge(pitch_stat,spin_dir,on=['batter','pitcher','game_pk','pitch_number','inning'])","56cdf5a5":"pitch_stat.head(5)","9d7d3a37":"pitch_stat['RA'] = pitch_stat['RA'] - pitch_stat['RA'].mean()","f51d3718":"# pitch_stat['RA'].mean()","2bda6af2":"sinker_stat = pitch_stat[pitch_stat.pitch_type == 'SI']","874add92":"sinker_stat['axis_deviation'] =  sinker_stat['phi'] + 90 - sinker_stat['release_spin_direction']","b0d74616":"sinker_stat.loc[sinker_stat['p_throws'] == 'L','axis_deviation'] = -sinker_stat['axis_deviation'] #Mirror LHP","d037f87a":"sns.distplot(sinker_stat['axis_deviation'], kde=True,bins = 100,hist=False,kde_kws={\"shade\":True},color='orange')\nplt.xlim([-100,150])\nplt.title('Density of 2D axis Deviation')","103e6914":"sinker_stat = sinker_stat[(sinker_stat['axis_deviation'] < 100) & (sinker_stat['axis_deviation'] > -100)]","fca0c4bf":"sns.regplot(sinker_stat['axis_deviation'],sinker_stat['RA'],scatter=False)\nplt.title('Run value vs axis deviation')\nplt.ylabel('Run value over expected')\nplt.xlabel('axis deviation')","a8c60585":"Read the pitch stat and merge to baseball savant data","07ec4bda":"The code below merge the spin direction data provided by [Bill Petti](https:\/\/twitter.com\/BillPetti) and baseball savant data in 2020","41512e95":"Calculate inferred pitch data using [Alan Nathan](https:\/\/twitter.com\/pobguy) calculator and calculate run over expected using [Tom Tango's RE288](http:\/\/tangotiger.com\/index.php\/site\/comments\/re288-run-expectancy-by-the-24-base-out-states-x-12-plate-count-states-recu)"}}