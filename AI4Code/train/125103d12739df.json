{"cell_type":{"43ba67b0":"code","70b431a5":"code","9fead970":"code","4614eac0":"code","aaef9eba":"code","cf829fed":"code","6f979c88":"code","d2031bfe":"code","6a9848b7":"code","56ca3e10":"code","9cc1fd5f":"code","96b97df8":"code","2fa8ca20":"code","9bf1d518":"code","df74d6ac":"code","d4dfd9f7":"code","8d608b78":"code","07016c94":"code","263cc58c":"code","5b708572":"code","b54c478b":"markdown","e880655d":"markdown","39698ef6":"markdown","fea9d145":"markdown","78c32910":"markdown","4fa09ed9":"markdown","0d000b77":"markdown","91090311":"markdown"},"source":{"43ba67b0":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport keras\nimport matplotlib.pyplot as plt","70b431a5":"train = pd.read_csv('..\/input\/train.csv')\ntrain.head()","9fead970":"test = pd.read_csv('..\/input\/test.csv')\ntest.head()","4614eac0":"print(\"Number of training examples :\", len(train))\nprint(\"Number of test examples :\", len(test))","aaef9eba":"train_labels = train['label']\ntrain_data = train.drop(['label'], axis=1)\ntest_data = test\n\ntrain_data.shape, test_data.shape","cf829fed":"trainDistribution = pd.DataFrame(train_labels.value_counts(sort=False))\ntrainDistribution.columns = ['MNIST Train Examples Count']\ntrainDistribution","6f979c88":"plt.figure()\nsample_image = np.array(train_data.iloc[3]).reshape([28,28])\nplt.imshow(sample_image)\nplt.grid(True)","d2031bfe":"train_data = np.array(train_data) \/ 255.0\ntrain_labels = np.array(train_labels)\ntest_data  = np.array(test_data) \/ 255.0","6a9848b7":"plt.figure(figsize=(8,8))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(True)\n    plt.imshow(train_data[i].reshape([28,28]), cmap=plt.cm.binary)\n    plt.xlabel(train_labels[i])","56ca3e10":"nn_model1 = keras.Sequential([\n    keras.layers.Dense(128, activation=tf.nn.relu),\n    keras.layers.Dense(10, activation=tf.nn.softmax)\n])","9cc1fd5f":"nn_model1.compile(optimizer=tf.train.AdamOptimizer(), \n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","96b97df8":"nn_model1.fit(train_data, train_labels, epochs=3)","2fa8ca20":"nn_model2 = keras.Sequential([\n    keras.layers.Dense(128, activation=tf.nn.relu),\n     keras.layers.Dense(64, activation=tf.nn.relu),\n     keras.layers.Dense(32, activation=tf.nn.relu),\n    keras.layers.Dense(10, activation=tf.nn.softmax)\n])","9bf1d518":"nn_model2.compile(optimizer=tf.train.AdamOptimizer(), \n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","df74d6ac":"nn_model2.fit(train_data, train_labels, epochs=5)","d4dfd9f7":"predictions_on_model1 = nn_model1.predict(test_data)\npredictions_on_model1 = np.argmax(predictions_on_model1, axis=1)\npredictions_on_model1","8d608b78":"plt.figure(figsize=(8,8))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(True)\n    plt.imshow(test_data[i].reshape([28,28]), cmap=plt.cm.binary)\n    plt.xlabel(predictions_on_model1[i])","07016c94":"predictions_on_model2 = nn_model2.predict(test_data)\npredictions_on_model2 = np.argmax(predictions_on_model2, axis=1)\npredictions_on_model2","263cc58c":"plt.figure(figsize=(8,8))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(True)\n    plt.imshow(test_data[i].reshape([28,28]), cmap=plt.cm.binary)\n    plt.xlabel(predictions_on_model2[i])","5b708572":"predictions = pd.Series(predictions_on_model2)\npredictions = predictions.to_frame(name='Label')\npredictions.set_index(np.arange(1, len(predictions) + 1), inplace=True)\npredictions.to_csv('submission.csv',index_label='ImageId')\npredictions","b54c478b":"## Implementing a Neural Network\n#### Predicting labels for the test data and testing accuracy ","e880655d":"### Shallow Neural Network","39698ef6":"### Deeper Neural Networks","fea9d145":"### Model II","78c32910":"### Model I","4fa09ed9":"## Learning about the dataset","0d000b77":"## Making Predictions ","91090311":"## Reading the dataset"}}