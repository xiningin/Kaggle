{"cell_type":{"ab895d93":"code","6d3f1908":"code","29bd4555":"code","277c31a6":"code","f3f71b78":"code","014ec1c6":"code","3fda76d1":"code","30d91cd7":"code","b0bd0d44":"code","2c1f1d6c":"code","66182e4e":"code","78143d84":"code","a304a631":"code","248132b0":"code","40ebeb25":"code","7c5e0b62":"code","da1d4afb":"code","bf872e15":"code","e7bf9275":"code","d59779ac":"code","e5d7b553":"code","16ab278e":"code","c1dc00c3":"code","9425273e":"code","98f098a2":"code","ab0d4dbd":"code","1180c34e":"code","2a96355b":"code","be75b5ad":"code","3bd0f955":"code","41b09d49":"code","fb7951f5":"code","16b0a3c3":"code","ff0a28e4":"code","d55b24c6":"code","e120fb7d":"code","61196a45":"code","c571485a":"code","a7297a47":"code","dc3aea71":"code","22051b60":"code","0c6b0dfa":"code","b5fe57c5":"code","1807aa5e":"code","bf61dbd9":"code","e3f5a437":"code","9daefcfa":"code","5ca72980":"code","09e36574":"code","b2c22ac6":"code","05f7aa49":"code","54c2e08b":"code","6c2bc0b6":"code","2dd7e5f8":"code","0c78e933":"code","0e581d40":"code","56fcbf61":"code","61e04d6e":"code","4c42954b":"code","b1aad650":"code","07afcd0c":"code","ca35c2a5":"code","9b5c6cbe":"code","c6d705fb":"code","c14e5598":"code","08c0c655":"code","69f970ed":"markdown","13a9de77":"markdown","81d71797":"markdown","1a1262bd":"markdown","9af30eb4":"markdown","b0caef9b":"markdown","e96723a8":"markdown","db419a7a":"markdown","d7a6b68c":"markdown","52812122":"markdown","2042f72e":"markdown","ae230f4d":"markdown","6aefe50c":"markdown","35b8addf":"markdown","a576cf62":"markdown"},"source":{"ab895d93":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport folium\nfrom shapely.geometry import Polygon\nfrom tqdm import tqdm\n\nimport os\n\n# Walk through and print the files available to us\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Pandas display more columns\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\nimport matplotlib.pyplot as plt\nplt.rcParams[\"figure.figsize\"] = [20,10] # Change 20 and 10 to change the length and height","6d3f1908":"# Download the geospatial data of Philadelphia's wards, divisions, and neighborhoods\n# This is hosted on github, we will use wget to obtain it\n!wget https:\/\/github.com\/azavea\/geo-data\/archive\/refs\/heads\/master.zip\n## PPD \n# !wget https:\/\/opendata.arcgis.com\/datasets\/62ec63afb8824a15953399b1fa819df2_0.zip\n    \n# \"wget\" is a terminal command that basically means \"download this\"\n# Remember we put an exclamation point in front when we want to use a terminal command instead of Python command\n\n# Unzip the zip file\n!unzip master.zip\n# !unzip 62ec63afb8824a15953399b1fa819df2_0.zip","29bd4555":"!wget https:\/\/opendata.arcgis.com\/datasets\/62ec63afb8824a15953399b1fa819df2_0.zip\n!unzip 62ec63afb8824a15953399b1fa819df2_0.zip","277c31a6":"neighborhoods = gpd.read_file('geo-data-master\/Neighborhoods_Philadelphia\/Neighborhoods_Philadelphia.shp')\nwards = gpd.read_file('geo-data-master\/politcal-wards-divisions\/2016\/2016_Wards.shp')\nwards_divisions = gpd.read_file('geo-data-master\/politcal-wards-divisions\/2016\/2016_Ward_Divisions.shp')\n\ntobacco = pd.read_csv('\/kaggle\/input\/phl-public-data\/Tobacco_Youth_Sales_Violations.csv')\nppd = pd.read_csv('\/kaggle\/input\/phl-public-data\/ppd_complaints.csv')\ncrime2020 = gpd.read_file('..\/input\/crime-incidents-zipshp\/incidents_part1_part2\/incidents_part1_part2.shp')\ncrime2019 = gpd.read_file('..\/input\/crime-incidents-zipshp\/incidents_part1_part2 (1)\/incidents_part1_part2.shp')\ncrime2018 = gpd.read_file('..\/input\/crime-2018\/incidents_part1_part2.shp')\nschools = gpd.read_file('..\/input\/school-data-shp\/Schools.shp')\npicnic_tables = gpd.read_file('..\/input\/picnic-sites\/ppr_picnic_sites.shp')\nnhood_resources = gpd.read_file('..\/input\/neighborhood-resources\/NeighborhoodResources.shp')\nplaygrounds = gpd.read_file('..\/input\/playgrounds\/PPR_Playgrounds.shp')\ndistricts = gpd.read_file('.\/Boundaries_District.shp')","f3f71b78":"## Function to map neigborhoods to datasets to using the centroid of an area\n\ndef map_neighborhoods(df,neighborhood_df ):\n    list_of_results = []\n    for point_to_check in tqdm(df['centroids'].values):\n        point_found = False\n        for neighborhood, neighborhood_name in neighborhood_df[['geometry', 'MAPNAME']].values:\n            if point_to_check.within(neighborhood):\n                point_found = True\n                list_of_results.append(neighborhood_name)\n                break # if already found\n        if not point_found:\n            list_of_results.append(None)\n    df['MAPNAME'] = list_of_results\n    df.head(10)","014ec1c6":"# Looking online, we find that the standard name for latitude + longitude is called \"EPSG:4326\"\nneighborhoods_latlong = neighborhoods.to_crs('epsg:4326')\n","3fda76d1":"tobacco.head()\n","30d91cd7":"tobacco_geometry = gpd.GeoDataFrame(tobacco, geometry=gpd.points_from_xy(tobacco['LONGITUDE'], tobacco['LATITUDE'], crs='epsg:4326'))","b0bd0d44":"tobacco_geometry.head(2)","2c1f1d6c":"tobacco_geometry.shape, tobacco_geometry.drop_duplicates(['LONGITUDE','LATITUDE']).shape","66182e4e":"\ntobacco_geometry['centroids'] = tobacco_geometry['geometry'].centroid\n\nmap_neighborhoods(tobacco_geometry,neighborhoods_latlong)","78143d84":"num_sales_per_neighborhood = tobacco_geometry.groupby('MAPNAME').size().reset_index()\nnum_sales_per_neighborhood.columns = ['MAPNAME','num_tobacco_sales_to_minors']\nnum_sales_per_neighborhood.head(10)","a304a631":"ppd","248132b0":"\ndistricts['centroids'] = districts['geometry'].centroid\nmap_neighborhoods(districts,neighborhoods_latlong)","40ebeb25":"# base_map = districts['geometry'].plot(color='white', edgecolor='black')\n# districts['centroids'].plot(ax=base_map, marker='o', color='red', markersize=5)","7c5e0b62":"ppd","da1d4afb":"districts.head(1)","bf872e15":"ppd['district_occurrence'].drop_duplicates().sort_values()","e7bf9275":"# Add '00' at the end of the districts column\ndistricts['DIST_NUMC'] = districts['DIST_NUMC'] + '00'","d59779ac":"# Update the rows where ppd has '09'\nppd.loc[ppd['district_occurrence'] == '09', 'district_occurrence'] = '0900'","e5d7b553":"print(ppd.shape)\nppd = ppd.merge(districts, left_on='district_occurrence', right_on='DIST_NUMC', how='left')\nprint(ppd.shape)","16ab278e":"num_complaints_per_neighborhood = ppd.groupby('MAPNAME').size().reset_index()\nnum_complaints_per_neighborhood.columns = ['MAPNAME', 'num_complaints_per_neighborhood']\n\nnum_complaints_per_neighborhood","c1dc00c3":"crime2020.head(1)\n \n","9425273e":"crime2019.head(1)","98f098a2":"crime2018.head(1)","ab0d4dbd":"# Columns are identical but when merging all 3 datframes new columns were created due to spaces in column names for some dataframes and not others \ncrime2019.columns = crime2020.columns\ncrime2018.columns = crime2020.columns","1180c34e":"# CREATE CENTROID COLUMN\ncrime2020['centroids'] = crime2020['geometry'].centroid\ncrime2019['centroids'] = crime2019['geometry'].centroid\ncrime2018['centroids'] = crime2018['geometry'].centroid\n\n","2a96355b":"crime2020 = crime2020.drop(crime2020.loc[crime2020['centroids'].isnull()].index)\ncrime2019 = crime2019.drop(crime2019.loc[crime2019['centroids'].isnull()].index)\ncrime2018 = crime2018.drop(crime2018.loc[crime2018['centroids'].isnull()].index)","be75b5ad":"crime = crime2020.append([crime2019, crime2018], ignore_index=True)","3bd0f955":"map_neighborhoods(crime,neighborhoods_latlong)","41b09d49":"crime.shape","fb7951f5":"## A little over 3000 rows didn't map to a neighborhood \ncrime.loc[crime['MAPNAME'].isnull()]","16b0a3c3":"## Drop rows with no neighborhood \ncrime = crime.loc[crime['MAPNAME'].isnull() == False]\ncrime.shape","ff0a28e4":"crime_by_nhood = crime.groupby('MAPNAME').size().reset_index()\ncrime_by_nhood.columns = ['MAPNAME', 'crimes_per_neighborhood']\n\ncrime_by_nhood\n","d55b24c6":"schools.head(1)","e120fb7d":"schools['centroids'] = schools['geometry'].centroid \n","61196a45":"map_neighborhoods(schools,neighborhoods_latlong)","c571485a":"schools_per_nhood = schools.groupby('MAPNAME').size().reset_index()\nschools_per_nhood.columns = ['MAPNAME', 'schools_per_neighborhood']\nschools_per_nhood.head(5)","a7297a47":"picnic_tables.head(5)","dc3aea71":"picnic_tables['centroids'] = picnic_tables['geometry'].centroid\n\n","22051b60":"map_neighborhoods(picnic_tables,neighborhoods_latlong)","0c6b0dfa":"tables_per_nhood = picnic_tables.groupby('MAPNAME').size().reset_index()\ntables_per_nhood.columns = ['MAPNAME', 'picnic_tables_per_neighborhood']","b5fe57c5":"nhood_resources.head(5)","1807aa5e":"nhood_resources['centroids'] = nhood_resources['geometry'].centroid\n","bf61dbd9":"map_neighborhoods(nhood_resources,neighborhoods_latlong)","e3f5a437":"resources_per_nhood = nhood_resources.groupby('MAPNAME').size().reset_index()\nresources_per_nhood.columns = ['MAPNAME', 'resource_groups_per_neighborhood']","9daefcfa":"# resources_per_nhood.sort_values(ascending=False, by='resource_groups_per_neighborhood').head(10).plot.bar()","5ca72980":"playgrounds.head(5)","09e36574":"playgrounds['centroids'] = playgrounds['geometry'].centroid","b2c22ac6":"map_neighborhoods(playgrounds,neighborhoods_latlong)","05f7aa49":"playgrounds_per_nhood = playgrounds.groupby('MAPNAME').size().reset_index()\nplaygrounds_per_nhood.columns = ['MAPNAME', 'playgrounds_per_neighborhood']","54c2e08b":"nhood_stats = num_complaints_per_neighborhood.merge(num_sales_per_neighborhood,  on='MAPNAME', how='outer' )\nnhood_stats = nhood_stats.merge(crime_by_nhood, on='MAPNAME', how='outer')\nnhood_stats = nhood_stats.merge(schools_per_nhood, on='MAPNAME', how='outer')\nnhood_stats = nhood_stats.merge(tables_per_nhood, on='MAPNAME', how='outer')\nnhood_stats = nhood_stats.merge(resources_per_nhood, on='MAPNAME', how='outer')\nnhood_stats = nhood_stats.merge(playgrounds_per_nhood, on='MAPNAME', how='outer')\n\n\n\n","6c2bc0b6":"nhood_stats['num_tobacco_sales_to_minors'] = nhood_stats['num_tobacco_sales_to_minors'].fillna(0).astype(int)\nnhood_stats['num_complaints_per_neighborhood'] = nhood_stats['num_complaints_per_neighborhood'].fillna(0).astype(int)\nnhood_stats['crimes_per_neighborhood'] = nhood_stats['crimes_per_neighborhood'].fillna(0).astype(int)\nnhood_stats['schools_per_neighborhood'] = nhood_stats['schools_per_neighborhood'].fillna(0).astype(int)\nnhood_stats['picnic_tables_per_neighborhood'] = nhood_stats['picnic_tables_per_neighborhood'].fillna(0).astype(int)\nnhood_stats['resource_groups_per_neighborhood'] = nhood_stats['resource_groups_per_neighborhood'].fillna(0).astype(int)\nnhood_stats['playgrounds_per_neighborhood'] = nhood_stats['playgrounds_per_neighborhood'].fillna(0).astype(int)","2dd7e5f8":"nhood_stats.head(10)","0c78e933":"nhood_stats = nhood_stats.merge(neighborhoods_latlong[['Shape_Area','MAPNAME']], on='MAPNAME', how='left')\nnhood_stats['area'] = nhood_stats['num_tobacco_sales_to_minors'] \/ nhood_stats['Shape_Area']\ntop_sales_by_area = nhood_stats.sort_values(ascending=False, by='area').head(10)\ntop_sales_by_area['MAPNAME']\n\n","0e581d40":"tobacco.groupby('MAPNAME').size().sort_values(ascending=False).head(10).plot.bar(color=['red','blue', 'green', 'yellow', 'cyan', 'lavender', 'black', 'purple', 'gray', 'tan'])\nplt.title('10 Neighborhoods With Most Tobacco Sales To Minors', fontsize=20)\nplt.xlabel('Neighborhood Name', fontsize=18)\nplt.ylabel('Number of Violations', fontsize=18)","56fcbf61":"tobacco.groupby('LEGAL_NAME').size().sort_values(ascending=False).head(10).plot.bar()\nplt.title('10 Stores With Violations', fontsize=20)\nplt.xlabel('Store Legal Name', fontsize=18)","61e04d6e":"tobacco_type = tobacco['TOBACCO_TYPE'].value_counts()\n\ny = tobacco_type.values\nlabels = tobacco_type.index\n\nplt.pie(y, labels = labels, startangle = 90)\nplt.title('Cigars make up 98 percent of all violations to minors\\n', fontsize=22)\nplt.legend()\n\nplt.show()\n","4c42954b":"plt.hist(nhood_stats['num_tobacco_sales_to_minors'])\nplt.title('Distribution of Tobacoo Sales To Minors In Neighborhoods', fontsize=20)\nplt.ylabel('Frequency', fontsize=18)\nplt.show()\n\n\n","b1aad650":"\n#plot 1:\nx = nhood_stats['crimes_per_neighborhood']\n\n\nplt.subplot(3, 2, 1)\nplt.hist(x)\n\nplt.title(\"CRIMES\", fontsize=18)\n\n#plot 2:\nx = nhood_stats['schools_per_neighborhood']\n\n\nplt.subplot(3, 2, 2)\nplt.hist(x)\n\nplt.title(\"SCHOOLS\", fontsize=18)\n\n#plot 3:\nx = nhood_stats['picnic_tables_per_neighborhood']\n\n\nplt.subplot(3, 2, 3)\nplt.hist(x)\n\nplt.title(\"PICNIC TABLES\", fontsize=18)\n\n\n#plot 4:\nx = nhood_stats['resource_groups_per_neighborhood']\n\n\nplt.subplot(3, 2, 4)\nplt.hist(x)\n\nplt.title(\"RESOURCE GROUPS\", fontsize=18)\n\n#plot 5:\nx = nhood_stats['num_complaints_per_neighborhood']\n\n\nplt.subplot(3, 2, 5)\nplt.hist(x)\n\nplt.title(\"PPD COMPLAINTS\", fontsize=18)\n\n#plot 6:\nx = nhood_stats['playgrounds_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\nplt.subplot(3, 2, 6)\nplt.hist(x)\n\nplt.title(\"PLAYGROUNDS\", fontsize=18)\n\nplt.suptitle(\"DISTRIBUTIONS OF VARIABLES ACROSS NEIGHBORHOODS\\n\", fontsize=20)\nplt.tight_layout()\nplt.show()","07afcd0c":"#plot 1:\nx = nhood_stats['crimes_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\n\nplt.subplot(3, 2, 1)\nplt.scatter(x,y)\n\nplt.title(\"CRIMES\", fontsize=18)\n\n#plot 2:\nx = nhood_stats['schools_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\n\nplt.subplot(3, 2, 2)\nplt.scatter(x,y)\n\nplt.title(\"SCHOOLS\", fontsize=18)\n\n#plot 3:\nx = nhood_stats['picnic_tables_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\n\nplt.subplot(3, 2, 3)\nplt.scatter(x,y)\n\nplt.title(\"PICNIC TABLES\", fontsize=18)\n\n\n#plot 4:\nx = nhood_stats['resource_groups_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\n\nplt.subplot(3, 2, 4)\nplt.scatter(x,y)\n\nplt.title(\"RESOURCE GROUPS\", fontsize=18)\n\n#plot 5:\nx = nhood_stats['num_complaints_per_neighborhood']\n\n\nplt.subplot(3, 2, 5)\nplt.scatter(x,y)\n\nplt.title(\"PPD COMPLAINTS\", fontsize=18)\n\n#plot 6:\nx = nhood_stats['playgrounds_per_neighborhood']\ny = nhood_stats['num_tobacco_sales_to_minors']\n\nplt.subplot(3, 2, 6)\nplt.scatter(x,y)\n\nplt.title(\"PLAYGROUNDS\", fontsize=18)\n\nplt.suptitle(\"VARIABLES IN RELATION TO TOBACCO SALES TO MINORS\\n\", fontsize=20)\nplt.tight_layout()\nplt.show()","ca35c2a5":"ab = nhood_stats.corr()\nab['num_tobacco_sales_to_minors'].sort_values(ascending=False).reset_index().rename(columns={'index':'observation', 'num_tobacco_sales_to_minors':'correlation to tobacco sales to'})","9b5c6cbe":"base_map = neighborhoods_latlong['geometry'].plot(color='white', edgecolor='black')\ntobacco_geometry['centroids'].plot(ax=base_map, marker='o', color='red', markersize=5)\nplt.title('Tobacco Sales To Minors', fontsize=20)\n\n\nbase_map2 = neighborhoods_latlong['geometry'].plot(color='white', edgecolor='black')\ncrime['centroids'].plot(ax=base_map2, marker='o', color='red', markersize=5)\nplt.title('Crimes Per Neighborhood', fontsize=20)\n\nplt.show()","c6d705fb":"crime.groupby(['text_gener','MAPNAME']).size().sort_values(ascending=False).head(10).plot.bar()\nplt.title('Top 10 Crimes\/Neighborhoods', fontsize=20)","c14e5598":"nhood_stats.describe()","08c0c655":"# We need to loop through all of our rows to add markers to the map\nphilly_map = folium.Map(location = [39.952583, -75.165222], tiles = \"Stamen Terrain\", zoom_start = 11)\n# Don't plot all of them... my computer crashes if I try to\n# It is over 4,000 markers - and over 1,000 if we use groupby\n# Let's plot every 10th marker\ntobacco_counts = tobacco_geometry.groupby(['LATITUDE','LONGITUDE','LEGAL_NAME','TRADE_NAME','RETAILER_TYPE','ADDRESS_LINE_1']).size().to_frame('num_violations').reset_index(drop=False)\nfor row_idx, row in tqdm(tobacco_counts.iterrows(), total=len(tobacco_geometry)):\n    if row_idx % 10 != 0:\n        continue\n    lat = row['LATITUDE']\n    long = row['LONGITUDE']\n    the_numvio = \"Number of Violations: \" + str(row['num_violations'])\n    the_legal_name = \"Legal Name: \" + str(row['LEGAL_NAME'])\n    the_trade_name = \"Trade Name: \" + str(row['TRADE_NAME'])\n    the_retailer = \"Retailer Type: \" + str(row['RETAILER_TYPE'])\n    the_address = \"Address: \" + str(row['ADDRESS_LINE_1'])\n    full_text = the_numvio + \"<br>\" + \\\n                the_legal_name + \"<br>\" + \\\n                the_trade_name + \"<br>\" + \\\n                the_retailer + \"<br>\" + \\\n                the_address\n    folium.Marker([lat, long], popup=full_text).add_to(philly_map)\nphilly_map","69f970ed":"# Add sales per area to dataframe ","13a9de77":"# Let's see if we can spot any trends between tobacco sales to minors and the other variables","81d71797":"# Crimes per neighborhood seems to have a strong positve correlation to the sales of tobacco to minors. Lets examine this data more closely ","1a1262bd":"# Schools","9af30eb4":"# Now let's check the rest of our variables ","b0caef9b":"# Everything on a neighborhood level -- Let's merge all the neighborhood level data into one dataframe","e96723a8":"# PPD Complaints & Districts","db419a7a":"# All of our datasets contain longitude and latitude so let's start mapping these coordinates to neighborhoods in Philadelphia","d7a6b68c":"# Neighborhood Resource Groups","52812122":"# Picnic Tables","2042f72e":"# Let's explore what the distribution of tobacco sales across neighborhoods look like","ae230f4d":"# Some summary statistics on the Neighborhood Stats (nhood_stats) dataframe","6aefe50c":"# Playgrounds","35b8addf":"# Crime","a576cf62":"# Tobacco Sales To Minors"}}