{"cell_type":{"63c54adc":"code","8d50e0ab":"code","234c9d83":"code","6cdaa3c6":"code","4832bae0":"code","ab727259":"code","3594e564":"code","ffe605e6":"code","45011a53":"code","30537076":"code","aa2170a7":"code","dc81eef4":"code","c9e39357":"code","9fbb5005":"code","696a4def":"code","c2805dc5":"code","487cf3e1":"code","024764c9":"code","853a560b":"code","cc332fb8":"code","f3d0c61b":"code","a4c002e8":"code","e39148d7":"code","b6e50fa5":"code","07352739":"code","978cef50":"code","fbe18146":"code","572437ee":"code","d320efd5":"code","39e8eb78":"code","e0e8acd1":"code","4bd1e1f2":"code","dbe43754":"code","8b10e954":"code","daada41c":"code","621534ad":"code","ccf4f05f":"code","0963a527":"code","096cfa2a":"code","318fedd9":"code","bdbb2f44":"code","f58d60b6":"code","75b70b0c":"code","50c002f7":"code","335798e9":"code","125def60":"code","568d1d03":"markdown","5a0146a6":"markdown","fffb8add":"markdown"},"source":{"63c54adc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d50e0ab":"import pandas as pd\nimport numpy as np\n\nimport sklearn","234c9d83":"data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndata.head()","6cdaa3c6":"# importing visualization libraries \n\nimport seaborn as sns\nimport matplotlib.pyplot as plt ","4832bae0":"plt.subplots(1, 1, figsize=(18, 8))\nsns.distplot(data['charges'],  color ='r', kde=True)\nplt.show()","ab727259":"fig, ax = plt.subplots(2, 2, figsize=(18, 12))\n\nsns.countplot(data['children'], palette='rocket', ax=ax[0][0])\nsns.countplot(data['smoker'], palette='rocket', ax=ax[0][1])\nsns.countplot(data['sex'], palette='rocket', ax=ax[1][0])\nsns.countplot(data['region'], palette='rocket', ax=ax[1][1])\nplt.show()\nfig, ax = plt.subplots(1, 1, figsize=(18, 6))\nsns.distplot(data['bmi'],  color ='r', kde=True)\nplt.show()","3594e564":"fig, ax = plt.subplots(2, 2, figsize=(18, 12))\n\nsns.violinplot(data['children'],data['charges'], palette='rocket', ax=ax[0][0])\nsns.violinplot(data['smoker'],data['charges'], palette='rocket', ax=ax[0][1])\nsns.violinplot(data['sex'], data['charges'] ,palette='rocket', ax=ax[1][0])\nsns.violinplot(data['region'], data['charges'],palette='rocket', ax=ax[1][1])\nplt.show()","ffe605e6":"fig, ax = plt.subplots(1, 1, figsize=(14, 8))\n\nsns.scatterplot(data['bmi'], data['charges'], color='r')","45011a53":"fig, ax = plt.subplots(1, 1, figsize=(14, 8))\n\nsns.scatterplot(data['age'], data['charges'], color='r')","30537076":"data.describe(include='all').T","aa2170a7":"data.info()","dc81eef4":"from sklearn import preprocessing \nfor col in ['sex', 'smoker', 'region']:\n    le = preprocessing.LabelEncoder()\n    \n    data[col] = le.fit_transform(data[col])\n    \n    ","c9e39357":"data.head()","9fbb5005":"data.shape","696a4def":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()","c2805dc5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(data.drop(['charges'], axis=1), data['charges'], test_size=0.2, random_state=1)","487cf3e1":"X_train.shape, X_test.shape","024764c9":"from sklearn.linear_model import SGDRegressor\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler","853a560b":"reg = make_pipeline(StandardScaler(),\n                    LinearRegression())\nreg.fit(X_train, y_train)\nreg.score(X_test, y_test)","cc332fb8":"reg = make_pipeline(StandardScaler(),\n                    SGDRegressor(max_iter=10000, tol=1e-3, alpha=0.001, early_stopping=True))\nreg.fit(X_train, y_train)","f3d0c61b":"reg.score(X_test, y_test)","a4c002e8":"# corr matrix \n\n","e39148d7":"corr = data.corr()","b6e50fa5":"import seaborn as sns \nfig, ax = plt.subplots(1, 1, figsize=(11, 9))\n\nsns.heatmap(corr)","07352739":"reg = LinearRegression()\nreg.fit(X_train[['smoker', 'bmi', 'age']], y_train)\nreg.score(X_test[['smoker', 'bmi', 'age']], y_test)","978cef50":"reg = make_pipeline(StandardScaler(),\n                    SGDRegressor(max_iter=10000, alpha=0.0009, early_stopping=True))\nreg.fit(X_train[['smoker', 'bmi', 'age']], y_train)\nreg.score(X_test[['smoker', 'bmi', 'age']], y_test)","fbe18146":"import sklearn.metrics as metrics\nprint('MAE: {}'.format(metrics.mean_absolute_error(y_test, reg.predict(X_test[['smoker', 'bmi', 'age']]))))\nprint('MSE: {}'.format(metrics.mean_squared_error(y_test, reg.predict(X_test[['smoker', 'bmi', 'age']]))))\nprint('RMSE: {}'.format(np.sqrt(metrics.mean_squared_error(y_test, reg.predict(X_test[['smoker', 'bmi', 'age']])))))","572437ee":"from itertools import combinations\ncolumns_list = X_train.columns\ninteractions = list(combinations(columns_list, 2))","d320efd5":"interaction_dict = {}\nfor interaction in interactions:\n    X_train_int = X_train\n    X_train_int['int'] = X_train_int[interaction[0]] * X_train_int[interaction[1]]\n    lr3 = LinearRegression()\n    lr3.fit(X_train_int, y_train)\n    interaction_dict[lr3.score(X_train_int, y_train)] = interaction","39e8eb78":"top_5 = sorted(interaction_dict.keys(), reverse = True)[:5]\nfor interaction in top_5:\n   print(interaction_dict[interaction])","e0e8acd1":"X_train_int = X_train\nX_train_int['ad_ed'] = X_train_int['bmi'] * X_train_int['children']\nX_train_int['bmi_smoker'] = X_train_int['bmi'] * X_train_int['smoker']\nX_train_int['smoker_region'] = X_train_int['smoker'] * X_train_int['region']\nX_train_int['sex_smoker'] = X_train_int['sex'] * X_train_int['smoker']\nX_train_int['child_smoker'] = X_train_int['children'] * X_train_int['smoker']\nX_train_int['child_region'] = X_train_int['children'] * X_train_int['region']\n\n\n\n","4bd1e1f2":"lr4 = LinearRegression()\nlr4.fit(X_train_int, y_train)\nlr4.score(X_train_int, y_train)","dbe43754":"import sklearn.metrics as metrics\nprint('MAE: {}'.format(metrics.mean_absolute_error(y_train, lr4.predict(X_train_int))))\nprint('MSE: {}'.format(metrics.mean_squared_error(y_train, lr4.predict(X_train_int))))\nprint('RMSE: {}'.format(np.sqrt(metrics.mean_squared_error(y_train, lr4.predict(X_train_int)))))","8b10e954":"X_train_int['ad_+ed'] = X_train_int['bmi'] + X_train_int['children']\nX_train_int['bmi_+smoker'] = X_train_int['bmi'] + X_train_int['smoker']\nX_train_int['smoker_+region'] = X_train_int['smoker'] + X_train_int['region']\nX_train_int['sex_+smoker'] = X_train_int['sex'] + X_train_int['smoker']\nX_train_int['child_+smoker'] = X_train_int['children'] + X_train_int['smoker']\nX_train_int['child_+region'] = X_train_int['children'] + X_train_int['region']","daada41c":"X_train_int.head()","621534ad":"lr4 = LinearRegression()\nlr4.fit(X_train_int, y_train)\nlr4.score(X_train_int, y_train)","ccf4f05f":"import sklearn.metrics as metrics\nprint('MAE: {}'.format(metrics.mean_absolute_error(y_train, lr4.predict(X_train_int))))\nprint('MSE: {}'.format(metrics.mean_squared_error(y_train, lr4.predict(X_train_int))))\nprint('RMSE: {}'.format(np.sqrt(metrics.mean_squared_error(y_train, lr4.predict(X_train_int)))))","0963a527":"data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndata.head()","096cfa2a":"X = data.drop(['charges'], axis=1)\ny = data['charges']","318fedd9":"X['sex+child'] = X['sex']+' '+str(X['children'])\nX['sex+smoker'] = X['sex']+' '+X['smoker']\nX['sex+region'] = X['sex']+' '+X['region']\nX['child+smoker'] =str(X['children'])+' '+X['smoker']\nX['child+region'] = str(X['children'])+' '+X['region']\nX['smoker+region'] = X['smoker']+' '+X['region']\n\n\n\n","bdbb2f44":"from sklearn import preprocessing\n\nfor col in ['sex', 'smoker', 'region', 'sex+child', 'sex+smoker', 'sex+region', 'child+smoker', 'child+region','smoker+region' ]:\n    le = preprocessing.LabelEncoder()\n    \n    X[col] = le.fit_transform(X[col])","f58d60b6":"lr4 = LinearRegression()\nlr4.fit(X, y)\nlr4.score(X, y)","75b70b0c":"X_train_int = X\nX_train_int['ad_ed'] = X_train_int['bmi'] * X_train_int['children']\nX_train_int['bmi_smoker'] = X_train_int['bmi'] * X_train_int['smoker']\nX_train_int['smoker_region'] = X_train_int['smoker'] * X_train_int['region']\nX_train_int['sex_smoker'] = X_train_int['sex'] * X_train_int['smoker']\nX_train_int['child_smoker'] = X_train_int['children'] * X_train_int['smoker']\nX_train_int['child_region'] = X_train_int['children'] * X_train_int['region']\n\n\n\n","50c002f7":"lr4 = LinearRegression()\nlr4.fit(X_train_int, y)\nlr4.score(X_train_int, y)","335798e9":"fig, ax = plt.subplots(1, 1, figsize=(11, 9))\n\nsns.scatterplot(lr4.predict(X_train_int), y, color='r', ax=ax)\nax.set_xlabel('Predicted')\n#sns.lineplot(lr4.predict(X_train_int), ax=ax)\n","125def60":"print('MAE: {}'.format(metrics.mean_absolute_error(y, lr4.predict(X_train_int))))\nprint('MSE: {}'.format(metrics.mean_squared_error(y, lr4.predict(X_train_int))))\nprint('RMSE: {}'.format(np.sqrt(metrics.mean_squared_error(y, lr4.predict(X_train_int)))))","568d1d03":"THIS NOTEBOOK IS NOT ANY THEORY BUT I AM USING IT TO PLAY WITH DIFFERENT ALGORITHM\n","5a0146a6":"## Feature Engineering ","fffb8add":"## PLAYBOOK"}}