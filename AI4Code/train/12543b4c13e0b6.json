{"cell_type":{"93ab093d":"code","67f1b3c4":"code","9fe7a29f":"code","32e78c06":"code","606358d3":"code","8e4b567b":"code","076c8d2d":"code","7e20acd7":"code","c0519b8a":"code","060fd2e8":"code","a58ced57":"code","56e49468":"code","4bb37ae2":"code","6d0682e9":"code","f1eca462":"code","839be913":"code","21603e35":"code","72a81084":"code","c3a5b226":"code","da4289b2":"code","976981c3":"code","0785faf4":"code","a6061805":"code","aba2bd1b":"code","5ebc01e5":"code","eb5356be":"code","27a4b88e":"code","c6257a62":"code","b3d6f965":"code","f9d28a98":"code","896c22a9":"code","0700a846":"code","add50967":"code","723e6003":"code","22af54ec":"code","627ea190":"code","7466cfab":"code","31e055e7":"code","31cdde24":"code","3242630d":"code","ea429228":"code","07ae53a2":"markdown","aca4cf73":"markdown","8af26171":"markdown","5c790030":"markdown","1ba822f1":"markdown","5c76e303":"markdown","89e067df":"markdown","1a4aa263":"markdown","e69509b2":"markdown","6d8d37ca":"markdown","50d3055c":"markdown","9be594e2":"markdown","35c40aff":"markdown","a42b279c":"markdown","f7783056":"markdown","bdf852f4":"markdown","cef1e2a1":"markdown","49957e31":"markdown","41e1efab":"markdown","43f98558":"markdown","ab95d27b":"markdown"},"source":{"93ab093d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67f1b3c4":"import numpy as np  \nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn \n","9fe7a29f":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","32e78c06":"## Craft Canned beer \n\ncraft_canned_beer= pd.read_csv('\/kaggle\/input\/craft-cans\/beers.csv')\ncraft_canned_beer.head()","606358d3":"## dropping id column from beer dataset\n\ncraft_canned_beer.drop(['id'],axis=1,inplace=True)","8e4b567b":"# Craft beer\ncraft_canned_beer.head()","076c8d2d":"breweries= pd.read_csv('\/kaggle\/input\/craft-cans\/breweries.csv')\nbreweries.head()","7e20acd7":"## creating column name for unnnamed column both in breweries dataset\nbreweries.rename(columns = {'Unnamed: 0':'id'}, inplace = True) \ncraft_canned_beer.rename(columns={'Unnamed: 0':'id'},inplace=True)\nbreweries.columns\nbreweries.head()\nprint(craft_canned_beer.head())\n","c0519b8a":"beer_breweries_join_dataset= pd.merge(craft_canned_beer,\n                 breweries[['id', 'name', 'city','state']],\n                 on='id', \n                 how='outer', \n                 indicator=True)\n\n## columns of beer_breweries_joined_dataset\nbeer_breweries_join_dataset.columns","060fd2e8":"beer_breweries_join_dataset.head()","a58ced57":"beer_breweries_join_dataset.drop(['_merge'],axis=1,inplace=True)\n","56e49468":"beer_breweries_join_dataset.head()","4bb37ae2":"beer_breweries_join_dataset.rename(columns = {'name_x':'name_of_beer','name_y':'name_of_brewery',}, inplace = True) \nbeer_breweries_join_dataset.head()\n","6d0682e9":"##renaming the join dataset a new name\n\nbeer_breweries= beer_breweries_join_dataset\n\n\n# head of dataset\nprint(beer_breweries.head())","f1eca462":"# Tail of dataset\nprint(beer_breweries.tail())","839be913":"# Shape of dataset\n\nprint(beer_breweries.shape)\n\n# Dataset Info\n\nbeer_breweries.info()","21603e35":"### missing value info\n\nprint(beer_breweries.isnull().sum())\n\n","72a81084":"## Replacing missing values of abv and ibu\n\nstandard_abv= 0.05\nibu_mean=beer_breweries['ibu'].mean()\nbeer_breweries.fillna({'abv':standard_abv,'ibu':ibu_mean},inplace=True)","c3a5b226":"# info about dataset after replacing values in nan fields\nprint(beer_breweries.info())\n\n# looking head of dataset\nprint(beer_breweries.head())","da4289b2":"## filter only missing values\n\nbeer_breweries[beer_breweries['state'].isnull()]","976981c3":"## replacing the nan values of columns name_-f_brewery,city,state,style with mode() values\n\nbeer_breweries['name_of_brewery'].fillna(beer_breweries['name_of_brewery'].mode()[0], inplace=True)\nbeer_breweries['state'].fillna(beer_breweries['state'].mode()[0], inplace=True)\nbeer_breweries['city'].fillna(beer_breweries['city'].mode()[0], inplace=True)\nbeer_breweries['style'].fillna(beer_breweries['style'].mode()[0], inplace=True)\n","0785faf4":"beer_breweries.info()","a6061805":"beer_breweries.tail()","aba2bd1b":"## removing brewery_id,id from beer_breweries dataset\n\nbeer_breweries.drop(['brewery_id','id'],axis=1,inplace=True)\n\n","5ebc01e5":"##dummies creation\n\n# beer_breweries_dummy= pd.get_dummies(beer_breweries[['name_of_beer','style','name_of_brewery','city','state']])\n# beer_breweries_dummy.shape","eb5356be":"sns.pairplot(beer_breweries)\n","27a4b88e":"##correlation matrix\n\nbeer_breweries_corr= beer_breweries.corr()\nprint(beer_breweries_corr)\nbeer_breweries_features= beer_breweries_corr.index\nplt.figure(figsize=(10,10))\nbeer_breweries_heatmap= sns.heatmap(beer_breweries[beer_breweries_features].corr(),annot=True,cmap='RdYlGn')","c6257a62":"## normalization of abv column to in scale of 0 and 1\n\nfrom sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\n\n\nbeer_breweries['abv_scale']=scaler.fit_transform(beer_breweries['abv'].values.reshape(-1,1))\nbeer_breweries['ibu_scale']=scaler.fit_transform(beer_breweries['ibu'].values.reshape(-1,1))\nbeer_breweries.drop(['abv','ibu'],axis=1,inplace=True)\n\n\n\n\n\n","b3d6f965":"## head of dataset\n\nbeer_breweries.head()","f9d28a98":"sns.boxplot(beer_breweries['abv_scale'])\n\n","896c22a9":"sns.boxplot(beer_breweries['ibu_scale'])","0700a846":"from scipy.stats import zscore\n\nbeer_breweries['ibu_scale_zscore'] = zscore(beer_breweries['ibu_scale'])\nbeer_breweries['abv_scale_zscore']= zscore(beer_breweries['abv_scale'])\n","add50967":"beer_breweries_zscore= beer_breweries[(beer_breweries['ibu_scale_zscore'].abs()<=3) &(beer_breweries['abv_scale_zscore'].abs()<=3)]\n\nbeer_breweries_zscore.head()\n\n","723e6003":"beer_breweries_zscore.drop(['ibu_scale_zscore','abv_scale_zscore'],axis=1,inplace=True)\n","22af54ec":"beer_breweries_zscore.head()","627ea190":"## correlation after outlier removal and scaling\n\nbeer_breweries_zscore.corr()\n","7466cfab":"## select the dependent and response variables\n# beer_breweries_zscore.columns\n\nbeer_breweries_feature=beer_breweries_zscore.loc[:,['abv_scale','ibu_scale','ounces','style']]\nprint(beer_breweries_feature.head())\nprint(\"shape of dataset is:\" ,beer_breweries_feature.shape)","31e055e7":"# input \nx = beer_breweries_feature.iloc[:, 0:3].values \n\n# # output \ny = beer_breweries_feature.iloc[:, 3].values\n\nfrom sklearn.model_selection import train_test_split\n\nxtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size = 0.25, random_state = 0) ","31cdde24":"from sklearn.linear_model import LogisticRegression \nclassifier = LogisticRegression(random_state = 0,multi_class='multinomial') \nclassifier.fit(xtrain, ytrain) \ny_pred = classifier.predict(xtest) \n\n\n","3242630d":"from sklearn.metrics import confusion_matrix \ncm = confusion_matrix(ytest, y_pred) \n  \nprint (\"Confusion Matrix : \\n\", cm)\n","ea429228":"from sklearn.metrics import accuracy_score \nprint (\"Accuracy : \", accuracy_score(ytest, y_pred)) \n","07ae53a2":"# Joining breweries and canned beer dataset\n\nThe beers and breweries are linked together by the \"id\".\n\n","aca4cf73":"## Choosing a model\n\nIn statistics, multinomial logistic regression is a classification method that generalizes **logistic regression to multiclass problems, i.e. with more than two possible discrete outcomes.**[1] \n\nThat is, it is a model that is used to predict the probabilities of the **different possible outcomes of a categorically distributed dependent variable**, given a **set of \nindependent variables (which may be real-valued, binary-valued, categorical-valued, etc.).**\n\nReference: https:\/\/en.wikipedia.org\/wiki\/Multinomial_logistic_regression","8af26171":"# Understand the dataset","5c790030":"# Preprocessing the joined dataset","1ba822f1":"# Training and test creation\n\nStratification is the process of rearranging the data so as to ensure that each fold is a good representative of the whole.\n\nFor example, in a binary classification problem where each class comprises of 50% of the data, it is best to \narrange the data such that in every fold, each class comprises of about half the instances.\n\nIt is generally a better approach when dealing with both bias and variance. A randomly selected fold might not adequately represent the minor class, particularly in cases where there is a huge class imbalance.","5c76e303":"# Confusion matrix","89e067df":"## Building machine Learning Models","1a4aa263":"Inspiration\nCan you predict the beer type from the characteristics provided in the dataset?\n\nWhat is the most popular beer in North Dakota?\n\nCheers to beer","e69509b2":"# Scaling the datasets","6d8d37ca":"### Pairplot","50d3055c":"# Detecting outliers","9be594e2":"# EDA","35c40aff":"# Accuracy score","a42b279c":"# Description about Problem\n\n## Context\n\nIt's a great time to be a craft beer fan in the U.S.! There are a ton of beer styles and brands to choose from and breweries have become very successful in the last several years. Breweries owe it all to beer lovers around the world! This dataset contains a list of 2,410 US craft beers and 510 US breweries. The beers and breweries are linked together by the \"id\". This data was collected in January 2017 from CraftCans.com. The dataset is an a tidy format and values have been cleaned up for your enjoyment.\n\n## Content\n\nbeers.csv - Contains data on 2000+ craft canned beers\n\nbreweries.csv - Contains data for 500+ breweries in the United States\n\nAbbreviation: ABV: ABV-Alcohol by volume , IBU: International Bitterness Units\n\n## Acknowledgements\n\nIf you are interested in learning more about how this dataset was acquired, I wrote an extensive blogpost about it http:\/\/www.jeannicholashould.com\/python-web-scraping-tutorial-for-craft-beers.html.\n\n## Inspiration\n\nCan you predict the beer type from the characteristics provided in the dataset?\n\nWhat is the most popular beer in North Dakota?\n\nCheers to beer\n\n\n![pintsender.jpg](attachment:pintsender.jpg)","f7783056":"## 1. Data Info","bdf852f4":"## Correlation Matrix","cef1e2a1":"# Dropping some columns","49957e31":"# Logistic regression with multinomial classification","41e1efab":"# Renaming columns","43f98558":"# Initializing packages","ab95d27b":"# Importing datasets"}}