{"cell_type":{"45b32e3d":"code","da8b2692":"code","b4193f0d":"code","f83c649f":"code","17d9bb89":"code","9a7df887":"code","c48402c4":"code","d5a1df9b":"markdown","5cfddb36":"markdown","59f00490":"markdown","b59c9f77":"markdown","b27de6db":"markdown","c297d327":"markdown","627240cc":"markdown","029f322d":"markdown"},"source":{"45b32e3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport folium\nfrom folium import Marker\nfrom folium.plugins import MarkerCluster \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da8b2692":"ev_stations_df = pd.read_csv('\/kaggle\/input\/electric-vehicle-charging-stations-in-usa\/ev_stations_v1.csv')\nev_stations_df.head()","b4193f0d":"ev_stations_df.columns","f83c649f":"locations_df = ev_stations_df[ev_stations_df['Latitude'].notnull() & ev_stations_df['Longitude'].notnull()]\nCharlotte_NC_locations_df = locations_df[(locations_df['State'] == 'NC') & (locations_df['City'] == 'Charlotte')]\nCharlotte_NC_locations_df.head()","17d9bb89":"# Create a map centered on Charlotte, North Carolina\ncharlotte_map = folium.Map(location=[35.227,-80.843], tiles='openstreetmap', zoom_start=11)\n\n# Add points to the map\nfor idx, row in Charlotte_NC_locations_df.iterrows():\n    Marker(location=[row['Latitude'], row['Longitude']],\n           popup=row['Street Address']).add_to(charlotte_map)\n\n# Display the map\ncharlotte_map","9a7df887":"NC_locations_df = locations_df[(locations_df['State'] == 'NC')]\nNC_locations_df.head()","c48402c4":"# Create a map centered on North Carolina\nnc_map = folium.Map(location=[35.5908438,-79.7628341], tiles='openstreetmap', zoom_start=7)\n\n# Add points to a marker cluster\nmc = MarkerCluster()\nfor idx, row in NC_locations_df.iterrows():\n    mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                        popup=row['Street Address']))\n\n# add the marker cluster to the map\nnc_map.add_child(mc)\n\n# Display the map\nnc_map","d5a1df9b":"The `folium` module makes creating interactive maps very easy. We create a basic map by setting the starting location centered on the location we're interested in, and a starting zoom level that will show that location in its entirety. After that, we loop through the dataframe of charging stations we found in that location, and add a Marker to the map for each one. We'll add the street address to each marker.","5cfddb36":"Now we can see all of the charging stations in the entire state. Click on any of the clusters to zoom in on that geographical area. The cluster will split up into smaller clusters. You can keep splitting clusters until you've zoomed in enough to see individual markers.","59f00490":"### Load the data set","b59c9f77":"### See what columns are available","b27de6db":"### Creating the map","c297d327":"### Create a state map of EV charging locations\n\nIf we want to show the charging locations for a larger area, we need to group the markers so we're not adding thousands of them to the map. We can do that with a `MarkerCluster` object. Let's create a dataframe with all of the stations for the entire state of North Carolina, then add them to a map using a `MarkerCluster`.","627240cc":"Click some of the markers to see where Electric Vehicle Charging Stations have been installed in the city of Charlotte, NC.","029f322d":"Latitude and Longitude are the columns we're most interested in. Since those are already part of the data set, we don't need to do any geocoding based on the address. We can go straight to selecting the data we want to map.\n\nLet's get all of the locations that have a Latitude and Longitude, then filter by city and state. We can't add more markers to a map than for one major city. If we add too many, the map we be unresponsive."}}