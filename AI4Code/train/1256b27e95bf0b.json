{"cell_type":{"e2a0a2c9":"code","b7e1167b":"code","6e0fdeb3":"code","0391f0ab":"code","08bf8552":"code","e929a736":"code","46f934fe":"code","192b5168":"code","9eff842f":"code","d9ca307c":"code","1677b29d":"code","8f96b1bb":"code","ebb00a5a":"code","b12c3d94":"code","419512d3":"code","7160f9e0":"code","b084d98a":"code","448cd2fd":"code","ba08d296":"code","525867cf":"code","5595a882":"code","34af5f4e":"code","4a696de3":"code","20f7969b":"code","b7ade852":"code","16d089e7":"code","6c1afb7a":"code","86ba2a21":"code","60a9d455":"code","d7774ed0":"markdown","285c5685":"markdown","c806c3d8":"markdown","5240dcf2":"markdown","f1427726":"markdown","0f283759":"markdown","dd44fe93":"markdown","2c02e4d9":"markdown","5adb279f":"markdown","df9d65c0":"markdown","e69e9c72":"markdown","47704959":"markdown","fa656e62":"markdown","bb37b586":"markdown","fc9150b5":"markdown"},"source":{"e2a0a2c9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","b7e1167b":"heart_data = pd.read_csv(\"..\/input\/heart-disease-detection-dataset\/datasets_33180_43520_heart.csv\")\nheart_data_df = pd.DataFrame(heart_data)\nheart_data_df","6e0fdeb3":"heart_data.target.value_counts()","0391f0ab":"heart_data_df.info()","08bf8552":"heart_data_df.isnull().sum()","e929a736":"plt.figure(figsize=(6,3))\nsns.countplot('target', data=heart_data_df, palette='terrain')\nplt.xlabel(\"Sex (0 = No Disease, 1= Have Disease)\")","46f934fe":"sns.countplot('sex', data=heart_data_df, palette=\"magma\")\nplt.xlabel(\"Sex (0 = female, 1= male)\")\nplt.show()","192b5168":"FemaleCount = len(heart_data_df[heart_data_df.sex == 0])\nMaleCount = len(heart_data_df[heart_data_df.sex == 1])\nprint(\"Percentage of Female Patients: {:.2f}%\".format((FemaleCount \/ (len(heart_data_df.sex))*100)))\nprint(\"Percentage of Male Patients: {:.2f}%\".format((MaleCount \/ (len(heart_data_df.sex))*100)))","9eff842f":"#grouping Dataset by the desired o\/p and other columns respective of their mean\nheart_data_df.groupby('target').mean()","d9ca307c":"#Compute a simple cross tabulation of two (or more) factors. By default computes a frequency table of the factors unless\n#an array of values and an aggregation function are passed.\npd.crosstab(heart_data_df.age, heart_data_df.target).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Age & Sex')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.show()","1677b29d":"plt.scatter(heart_data_df.age[heart_data_df.target==1], heart_data_df.thalach[heart_data_df.target==1], c='red')\nplt.scatter(heart_data_df.age[heart_data_df.target==0],heart_data_df.thalach[heart_data_df.target==0])\nplt.legend([\"Disease\", \"Not Disease\"])\nplt.xlabel(\"Age\")\nplt.ylabel(\"Maximum Heart Rate\")\nplt.show()","8f96b1bb":"pd.crosstab(heart_data_df.sex,heart_data_df.target).plot(kind=\"bar\",figsize=(15,6),color=['#800080','#FFFF00' ])\nplt.title('Heart Disease Frequency for Sex')\nplt.xlabel('Sex (0 = Female, 1 = Male)')\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","ebb00a5a":"pd.crosstab(heart_data_df.cp,heart_data_df.target).plot(kind=\"bar\",figsize=(15,6),color=['#7D0552','#05517D' ])\nplt.title('Heart Disease Frequency According To Chest Pain Type')\nplt.xlabel('Chest Pain Type')\nplt.ylabel('Frequency of Disease or Not')\nplt.show()","b12c3d94":"sns.heatmap(heart_data_df.corr())","419512d3":"plt.figure(figsize=(12,10))\nsns.catplot('sex', 'age', hue='cp', data = heart_data_df, kind='bar')","7160f9e0":"pd.crosstab(heart_data_df.chol,heart_data_df.target).plot(kind=\"area\",figsize=(15,6),color=['#8C001A','#347C17' ])\nplt.title('Heart Disease Frequency According To Cholestrol')\nplt.xlabel('Cholestrol')\nplt.ylabel('Frequency of Disease or Not')\nplt.show()\n","b084d98a":"pd.crosstab(heart_data_df.restecg,heart_data_df.sex).plot(kind=\"barh\",figsize=(15,6),color=['#50EBEC','#ED5185' ])\nplt.title('Heart Disease Frequency based on Rest ECG')\nplt.xlabel('Rest_ECG')\nplt.ylabel('Frequency of Disease or Not')\nplt.show()","448cd2fd":"heart_data_df.drop(['slope', 'thal'], axis=1, inplace=True)\nheart_data_df.head(10)","ba08d296":"x = heart_data_df.drop(['target'], axis=1)\ny = heart_data_df['target'].values","525867cf":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.15, random_state=32)","5595a882":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression()\nlog.fit(X_train,y_train)","34af5f4e":"accuracies = {}","4a696de3":"acc = log.score(X_test,y_test)*100\naccuracies['Logistic Regression'] = acc\nprint(\"Test Accuracy {:.2f}%\".format(acc))","20f7969b":"from sklearn.tree import DecisionTreeClassifier\ndc = DecisionTreeClassifier()\ndc.fit(X_train, y_train)\n\nacc = dc.score(X_test, y_test)*100\naccuracies['Decision Tree'] = acc\nprint(\"Decision Tree Test Accuracy {:.2f}%\".format(acc))","b7ade852":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 1000, random_state = 1)\nrf.fit(X_train, y_train)\n\nacc = rf.score(X_test,y_test)*100\naccuracies['Random Forest'] = acc\nprint(\"Random Forest Algorithm Accuracy Score : {:.2f}%\".format(acc))","16d089e7":"colors = [\"purple\", \"magenta\", \"cyan\"]\n\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(16,5))\nplt.yticks(np.arange(0,100,10))\nplt.ylabel(\"Accuracy %\")\nplt.xlabel(\"Algorithms\")\nsns.barplot(x=list(accuracies.keys()), y=list(accuracies.values()), palette=colors)\nplt.show()\n","6c1afb7a":"log_pred = log.predict(X_test)\ndt_pred = dc.predict(X_test)\nrand_for_pred = rf.predict(X_test)\nprint(log_pred)\nprint(dt_pred)\nprint(rand_for_pred)","86ba2a21":"from sklearn.metrics import confusion_matrix\n\ncm_log = confusion_matrix(y_test, log_pred )\ncm_dt = confusion_matrix(y_test, dt_pred)\ncm_rf = confusion_matrix(y_test,rand_for_pred)","60a9d455":"plt.figure(figsize=(24,12))\n\nplt.suptitle(\"Confusion Matrixes\",fontsize=24)\nplt.subplots_adjust(wspace = 0.4, hspace= 0.4)\n\nplt.subplot(2,3,1)\nplt.title(\"Logistic Regression Confusion Matrix\")\nsns.heatmap(cm_log,annot=True,cmap=\"YlOrBr\",fmt=\"d\",cbar=False, annot_kws={\"size\": 24})\n\nplt.subplot(2,3,2)\nplt.title(\"Decision Tree Classifier Confusion Matrix\")\nsns.heatmap(cm_dt,annot=True,cmap=\"YlOrRd\",fmt=\"d\",cbar=False, annot_kws={\"size\": 24})\n\nplt.subplot(2,3,3)\nplt.title(\"Random Forest Confusion Matrix\")\nsns.heatmap(cm_rf,annot=True,cmap=\"YlGnBu\",fmt=\"d\",cbar=False, annot_kws={\"size\": 24})\n\nplt.show()","d7774ed0":"# 1)  Importing the required libraries","285c5685":"# 8) Comparing Models","c806c3d8":"***This analysis clearifies that RandomForest could be the best model for the heart disease detection as it has an accuracy of 85%, so this could give nore precised result of the record***","5240dcf2":"Data contains;\n\n* age - age in years\n* sex - (1 = male; 0 = female)\n* cp - chest pain type\n* trestbps - resting blood pressure (in mm Hg on admission to the hospital)\n* chol - serum cholestoral in mg\/dl\n* fbs - (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* restecg - resting electrocardiographic results\n* thalach - maximum heart rate achieved\n* exang - exercise induced angina (1 = yes; 0 = no)\n* oldpeak - ST depression induced by exercise relative to rest\n* slope - the slope of the peak exercise ST segment\n* ca - number of major vessels (0-3) colored by flourosopy\n* thal - 3 = normal; 6 = fixed defect; 7 = reversable defect\n* target - have disease or not (1=yes, 0=no)","f1427726":"# 7) Model Selection, Training & Prediction","0f283759":"# 7 a) Using Logistic Regression","dd44fe93":"# 2) Reading Dataset","2c02e4d9":"# 7b) Using Decision Tree","5adb279f":"This involves the selecting of features necessary for out further analysis","df9d65c0":"# Since, our dataset was clean enough, so we could just avoid the various steps of preprocessing, but just check for null values","e69e9c72":"# 7c) Using Random Forest","47704959":"# 3) Preprocessing ","fa656e62":"# 4) Visualization","bb37b586":"# 6) Data Splitting","fc9150b5":"# 5) Feature Engineering"}}