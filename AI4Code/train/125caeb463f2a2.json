{"cell_type":{"afaf1254":"code","ffa7c773":"code","926384e1":"code","9c59049f":"code","2468e749":"code","6a5d8181":"code","29e870db":"code","844fcdc3":"code","96c1852c":"markdown","56d82310":"markdown","79adfa40":"markdown","7fa1bb33":"markdown","acb3af5e":"markdown","a80d9336":"markdown","5c649126":"markdown","253ce479":"markdown","6f50e93b":"markdown","2ac98c29":"markdown","fa495f5f":"markdown"},"source":{"afaf1254":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\ndf = pd.read_csv(\"..\/input\/data.csv\")\ndf = df.drop(\"Unnamed: 0\", axis=\"columns\")\ndf.head()","ffa7c773":"fig1 = plt.figure(figsize=(18, 12))\n\nax1 = fig1.add_subplot(331)\nsns.countplot(x='key',hue='target',data=df, palette='BuGn')\n\nax2 = fig1.add_subplot(332)\nsns.countplot(x='mode',hue='target',data=df, palette='BuGn')\n\nax3 = fig1.add_subplot(333)\nsns.countplot(x='time_signature',hue='target',data=df, palette='BuGn')","926384e1":"sns.pairplot(df)","9c59049f":"fig2 = plt.figure(figsize=(16, 8))\nsns.heatmap(df.corr(), annot=True, annot_kws={'weight':'bold'},linewidths=.5, cmap='YlGnBu')","2468e749":"sns.lmplot(y='loudness',x='energy',data=df, hue='target',palette='BuGn')","6a5d8181":"sns.lmplot(y='energy',x='acousticness',data=df, hue='target',palette='BuGn')","29e870db":"import wordcloud\nfrom subprocess import check_output\n%pylab inline\n\nsongs_like = ' '.join(df[df['target']==1]['song_title']).lower().replace(' ',' ')\ncloud_like = wordcloud.WordCloud(background_color='white',\n                            mask=imread('Spotify.jpg'),\n                            max_font_size=100,\n                            width=2000,\n                            height=2000,\n                            max_words=1000,\n                            relative_scaling=.5).generate(songs_like)\n\nsongs_dislike = ' '.join(df[df['target']==0]['song_title']).lower().replace(' ',' ')\ncloud_dislike = wordcloud.WordCloud(background_color='white',\n                            mask=imread('Spotify.jpg'),\n                            max_font_size=100,\n                            width=2000,\n                            height=2000,\n                            max_words=1000,\n                            relative_scaling=.5).generate(songs_dislike)\nfig3=plt.figure(figsize=(12,12))\n\nax4 = fig3.add_subplot(121)\nplt.imshow(cloud_like)\nplt.axis('off')\nplt.title('Like (target=1)', fontsize=20, color='g', fontweight='bold')\n\nax5 = fig3.add_subplot(122)\nplt.imshow(cloud_dislike)\nplt.axis('off')\nplt.title('Dislike (target=0)', fontsize=20, color='g', fontweight='bold')","844fcdc3":"artist_like = df[df['target']==1].groupby('artist').count().reset_index()[['artist', 'target']]\nartist_like.columns = ['artist', 'appearances']\nartist_like = artist_like.sort_values('appearances', ascending=False)\nartist_like=artist_like.head(10)\nplt.barh(left=0, y='artist', width='appearances', data=artist_like, color='g', alpha=0.7)\nplt.title('Top 10 Favorite Artists', color='g', fontsize='xx-large')","96c1852c":"**Use pairplot to find out some possible correlated relationships between 13 attributes. **","56d82310":"**For three categorical attributes - \"key\", \"mode\" and \"time_signature\", we create three countplot distributions to understand more about the audience's song preference.**","79adfa40":"**\"Energy\" and \"acousticness\" have highly negative correlated relationship (P=-0.65). Use scatter chart and trend line to view their relationship by different targets. **","7fa1bb33":"Thanks for your attention. Actually, we, as a group, used this data set to finish a group project - a classification task, for a business intelligence course. So first thing first, thanks a lot for the creator of this data set. EDA was a small part of our project. More codes related to ML were preserved because they were not done by myself. It's my first time to create kernel. So happy to be here and make friends. Cheers~","acb3af5e":"**Create a bar chart to get Top 10 Favorite Artists for the user. **","a80d9336":"**Generate wordclouds to get some interesting and frequent key words appearing in the \"song_title\" for target=1 and target=0. **","5c649126":"**Use heapmap to review the correlation more clearly. **","253ce479":"You can download the 'Spotify.jpg' from Internet and save it into the same file as the Jupyter Notebook.\nOutput as follows:\n \n![https:\/\/wx1.sinaimg.cn\/mw690\/97a025f4gy1g4i10uokfsj211g0iwnhb.jpg](http:\/\/)","6f50e93b":"**\"Loudness\" and \"energy\" have highly positive correlated relationship (P=0.76). Use scatter chart and trend line to view their relationship by different targets. **","2ac98c29":"# Exploratory Data Analysis (incl. text analysis)\nWe will use this data set with 2017 instances and 16 attributes, among which there are 13 song features attributes and 3 attributes for \"song_title\", \"artist\" and \"target\". Based on the obtained data set, we are going to try some basic and interesting EDA. Here we go.","fa495f5f":"**First we import some common libraries and generate the dataframe to analyse.**"}}