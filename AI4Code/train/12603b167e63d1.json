{"cell_type":{"3e04aca5":"code","b55e9c0b":"code","949925cb":"code","71fb0502":"code","00bc25dd":"code","4f674b64":"code","7c05a7bc":"code","c8014d1d":"code","a0011d83":"code","504561fd":"code","a826bb32":"code","b12bdb49":"code","f05c5a19":"code","aca66e37":"code","63edd34d":"code","bf5864d8":"code","f3101e56":"code","4559d973":"code","ed55780d":"code","d1625689":"code","0010bd55":"code","d032089f":"code","f7545d94":"markdown","b80cd426":"markdown","b5a5bb65":"markdown","f0fe7ec3":"markdown","6b3955df":"markdown","9923e4e5":"markdown","46b65b9a":"markdown","c067c53d":"markdown","3abbd34a":"markdown","e070a857":"markdown","eac72e87":"markdown","b38940aa":"markdown","056d0f88":"markdown","29e270c4":"markdown","916073a9":"markdown","c7ae858f":"markdown","ae2cedee":"markdown","5e0a8cdd":"markdown","e53086c5":"markdown","2762b39c":"markdown","0be33e76":"markdown","9f1679de":"markdown","538fbc4c":"markdown","5dae9a61":"markdown","eefb7dfc":"markdown"},"source":{"3e04aca5":"\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('whitegrid')\n%matplotlib inline\n\ndf = pd.read_csv('..\/input\/pokemon\/Pokemon.csv',index_col=0)\n\n\n","b55e9c0b":"df.head()","949925cb":"df.info()","71fb0502":"df.describe()","00bc25dd":"df.shape","4f674b64":"df.columns = df.columns.str.upper() #Changing all column names to uppercase\ndf.head(5)","7c05a7bc":"df.set_index('NAME',inplace = True) #Set the column 'NAME' as index\ndf.head(5)","c8014d1d":"df.index = df.index.str.replace('.*(?=Mega)','') #Eliminating the data prefix\ndf.head(5)","a0011d83":"df[df['ATTACK']== df['ATTACK'].max()]","504561fd":"df[df['DEFENSE']== df['DEFENSE'].min()]","a826bb32":"df['LEGENDARY'].value_counts()","b12bdb49":"print('These are the types of Pokemon in TYPE 1:', df['TYPE 1'].unique())\nprint('\\n')\nprint('This the total type of Pokemon:', df['TYPE 1'].nunique())\nprint('\\n')\nprint('The count for each type is: \\n', df['TYPE 1'].value_counts())","f05c5a19":"plt.figure(figsize = (14,8))\nsns.countplot(x = df['TYPE 1'], data = df) #Water is the most common type in TYPE 1","aca66e37":"print('These are the types of Pokemon in TYPE 2:', df['TYPE 2'].unique())\nprint('\\n')\nprint('This the total type of Pokemon:', df['TYPE 2'].nunique())\nprint('\\n')\nprint('The count for each type is:\\n', df['TYPE 2'].value_counts())","63edd34d":"plt.figure(figsize = (14,8))\nsns.countplot(x = df['TYPE 2'], data = df) #Flying is the most common type in TYPE 2","bf5864d8":"df['TYPE 1-2'] = df['TYPE 1']+ '-' + df['TYPE 2']\ndf.head()","f3101e56":"print('The biggest combinations between the types of Pokemon are:\\n', df['TYPE 1-2'].value_counts().head(10))\nprint('\\n')\nprint('The number of combinations in Pokemons are: ',df['TYPE 1-2'].nunique() )\n\n\nplt.figure(figsize = (12,8))\nsns.countplot(x = 'TYPE 1-2',data = df, order = df['TYPE 1-2'].value_counts().iloc[:10].index) #Counplot of the biggest combinations","4559d973":"legendary = df[df['LEGENDARY']==True].reset_index()\nstrong_legendary = legendary.sort_values(by='TOTAL',ascending = False).head(5)\n\nplt.figure(figsize=(12,8))\nsns.barplot(x = 'NAME', y ='TOTAL', data = strong_legendary, palette = 'viridis')\nplt.title('Strongest Legendary Pokemons')","ed55780d":"non_legendary = df[df['LEGENDARY']==False].reset_index()\nstrong_non_legendary = non_legendary.sort_values(by='TOTAL',ascending = False).head(5)\n\nplt.figure(figsize=(12,8))\nsns.barplot(x = 'NAME', y ='TOTAL', data = strong_non_legendary, palette = 'viridis')\nplt.title('Strongest Non-Legendary Pokemons')","d1625689":"plt.figure(figsize = (12,8))\nsns.boxplot(x = 'TYPE 1', y = 'TOTAL', data = df)","0010bd55":"plt.figure(figsize = (12,8))\nsns.countplot(x = 'TYPE 1',data = legendary, order = df['TYPE 1'].value_counts().iloc[:18].index)","d032089f":"plt.figure(figsize = (12,8))\nsns.countplot(x = 'TYPE 2',data = legendary, order = df['TYPE 2'].value_counts().iloc[:18].index)\n","f7545d94":"**How many legendary and non_legendary Pokemon are there?**","b80cd426":"### Pokemon type that has more legendary and the type that doesn't have legendary","b5a5bb65":"## Cleaning the Data","f0fe7ec3":"### Strongest legendaries Pokemon","6b3955df":"## Basic information of the Data","9923e4e5":"Countplot of TYPE 1","46b65b9a":"**Which Pokemon has the biggest attack?**","c067c53d":"Different type of Pokemon in TYPE1","3abbd34a":"### Strongest and weakest types","e070a857":"### **Some questions...**","eac72e87":"## Exploratory Analysis","b38940aa":"# Pokemon Data Visualization","056d0f88":"### What are the biggest combinations between the types of Pokemon?","29e270c4":"Countplot of TYPE 2","916073a9":"Different type of Pokemon in TYPE 2:","c7ae858f":"### Type 1 and 2 combined","ae2cedee":"We can see that the strongest type of pokemon is Dragon and the type do avoid is Bug","5e0a8cdd":"**Which Pokemon has the lowest defense?**","e53086c5":"As we can see the type that has most legendary is Pyschic and the types that dont'have legendary are Bug, Poison and Fighting in TYPE 1","2762b39c":"Normal-Flying is biggest combination","0be33e76":"### Strongest non-legendaries Pokemon","9f1679de":"As we can see, the type in TYPE 2 that has most legendary is Flying and the types that don't have legendaries are Poison, Grass, Rock and Bug.\n\nSo the Types that don't have legendaries are Poison and Bug.","538fbc4c":"This is my first Notebook on Kaggle. I just took a course of Pandas and Data Visualizaton on Python. Any feedback is welcome!\n\nPS: English is not my main language, I apologize for any mistake in writing","5dae9a61":"So this data has 800 observations and 12 variables","eefb7dfc":"### References\n\nhttps:\/\/www.kaggle.com\/josegabrielgonzalez\/exploratory-data-analysis-on-pokemon-s-dataset\n\nhttps:\/\/www.kaggle.com\/xvivancos\/analyzing-a-pok-mon-data-set-my-first-kernel#header"}}