{"cell_type":{"27c2f4d8":"code","7b7e5799":"code","edff9dcf":"code","333ef87a":"code","d98d5622":"code","12764304":"code","f60acac0":"code","4d22d7bf":"code","d4ef7c92":"code","5c81a1d2":"code","d0db769f":"code","60756d63":"code","ac3b39cd":"code","c454863f":"code","d49f879c":"code","5b0132ee":"code","bd4393cd":"code","747999d6":"code","0748d72a":"code","6e6da5b7":"markdown","345d1105":"markdown","48a1c525":"markdown","1d11c391":"markdown","cf73fa3f":"markdown"},"source":{"27c2f4d8":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7b7e5799":"import numpy as np \nimport pandas as pd \npd.set_option('display.max_columns', 200)\npd.set_option('display.width', 400)\npd.set_option('display.max_rows',600)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","edff9dcf":"df_enem = pd.read_csv('\/kaggle\/input\/enem-por-escola-2005-a-2015\/microdados_enem_por_escola\/DADOS\/MICRODADOS_ENEM_ESCOLA.csv',sep=';',engine='python')\ndf_censo = pd.read_csv('\/kaggle\/input\/sensoescolar\/2015\/DADOS\/ESCOLAS\/ESCOLAS.CSV',sep='|',engine='python')\ndf_enem.head()","333ef87a":"df_censo.head()","d98d5622":"df_enem_filtro = df_enem[df_enem['SG_UF_ESCOLA']=='DF']\ndf_enem_filtro = df_enem_filtro[df_enem_filtro['NU_ANO']==2015]\ndf_enem_filtro.head()","12764304":"df_censo_filtro = df_censo[df_censo['CO_UF']== 53]\ndf_censo_filtro.head()","f60acac0":"df_enem_filtro.describe()","4d22d7bf":"df_censo_filtro.describe()","d4ef7c92":"df_escola_biblioteca = df_censo_filtro[df_censo_filtro['IN_BIBLIOTECA']== 1]\ndf_escola_sem_biblioteca = df_censo_filtro[df_censo_filtro['IN_BIBLIOTECA']== 0]\ndf_biblioteca = df_escola_biblioteca[df_escola_biblioteca['CO_ENTIDADE'] != 0]\ndf_sem_biblioteca = df_escola_sem_biblioteca[df_escola_sem_biblioteca['CO_ENTIDADE']!=0]\ndf_enem_filtro.rename(columns={'CO_ESCOLA_EDUCACENSO': 'CO_ENTIDADE'}, inplace=True)\ndf_enem_biblioteca = pd.merge(df_enem_filtro, df_biblioteca, on=['CO_ENTIDADE'], how='inner')\ndf_enem_sem_biblioteca = pd.merge(df_enem_filtro, df_sem_biblioteca, on=['CO_ENTIDADE'], how='inner')\ndf_enem_biblioteca_publica = df_enem_biblioteca[df_enem_biblioteca['TP_DEPENDENCIA'] == 2]\ndf_enem_biblioteca_privada = df_enem_biblioteca[df_enem_biblioteca['TP_DEPENDENCIA'] == 4]\ndf_enem_sem_biblioteca_publica = df_enem_sem_biblioteca[df_enem_sem_biblioteca['TP_DEPENDENCIA'] == 2]\ndf_enem_sem_biblioteca_privada = df_enem_sem_biblioteca[df_enem_sem_biblioteca['TP_DEPENDENCIA'] == 4]\n\n#sns.catplot(x=\"CO_ENTIDADE\", y=\"NU_MEDIA_RED\",kind=\"bar\",data=df_enem_sem_biblioteca)\n\n","5c81a1d2":"sns.catplot(x=\"CO_ENTIDADE\", y=\"NU_MEDIA_RED\",kind=\"bar\",data=df_enem_biblioteca_publica)\nprint(\"M\u00e9dia de rede\u00e7\u00e3o escolas p\u00fablicas com biblioteca: \",df_enem_biblioteca_publica[\"NU_MEDIA_RED\"].mean())\nmedia_publica_bb = df_enem_biblioteca_publica[\"NU_MEDIA_RED\"].mean()","d0db769f":"sns.catplot(x=\"CO_ENTIDADE\", y=\"NU_MEDIA_RED\",kind=\"bar\",data=df_enem_biblioteca_privada)\nprint(\"M\u00e9dia de rede\u00e7\u00e3o escolas privadas com biblioteca: \",df_enem_biblioteca_privada[\"NU_MEDIA_RED\"].mean())\nmedia_privada_bb = df_enem_biblioteca_privada[\"NU_MEDIA_RED\"].mean()","60756d63":"sns.catplot(x=\"CO_ENTIDADE\", y=\"NU_MEDIA_RED\",kind=\"bar\",data=df_enem_sem_biblioteca_publica)\nprint(\"M\u00e9dia de rede\u00e7\u00e3o escolas p\u00fablicas sem biblioteca: \",df_enem_sem_biblioteca_publica[\"NU_MEDIA_RED\"].mean())\nmedia_publica_sem_bb = df_enem_sem_biblioteca_publica[\"NU_MEDIA_RED\"].mean()","ac3b39cd":"sns.catplot(x=\"CO_ENTIDADE\", y=\"NU_MEDIA_RED\",kind=\"bar\",data=df_enem_sem_biblioteca_privada)\nprint(\"M\u00e9dia de rede\u00e7\u00e3o escolas privadas sem biblioteca: \",df_enem_sem_biblioteca_privada[\"NU_MEDIA_RED\"].mean())\nmedia_privada_sem_bb = df_enem_sem_biblioteca_privada[\"NU_MEDIA_RED\"].mean()","c454863f":"labels = ['Privada', 'P\u00fablica']\nbiblioteca = [media_privada_bb, media_publica_bb]\nsem_biblioteca = [media_privada_sem_bb, media_publica_sem_bb]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2,biblioteca, width, label='Com biblioteca')\nrects2 = ax.bar(x + width\/2, sem_biblioteca, width, label='Sem biblioteca')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Media da reda\u00e7\u00e3o')\nax.set_title('Compara\u00e7\u00e3o de medias da reda\u00e7\u00e3o em rela\u00e7\u00e3o a ter ou n\u00e3o ter biblioteca')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nplt.show()","d49f879c":"X = df_enem_biblioteca.drop('IN_REFEITORIO',axis=1)\ny = df_enem_biblioteca['IN_REFEITORIO']","5b0132ee":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)","bd4393cd":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor()\nregressor.fit(X_train, y_train)","747999d6":"X.dtypes.sample(191)","0748d72a":"X.select_dtypes(include='object')","6e6da5b7":"## 2. Carregando Dados","345d1105":"## 5. Gr\u00e1ficos ","48a1c525":"## 1. Importando Bibliotecas","1d11c391":"## 3. Filtrando os Dados","cf73fa3f":"## 4. Verificando Estat\u00edsticas"}}