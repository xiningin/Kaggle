{"cell_type":{"5bbcc70c":"code","1e7d8fb1":"code","da28b92d":"code","bee2ac2a":"code","9e149127":"code","f2828b3b":"code","82b38bfc":"code","bc1e47d4":"code","a16e6693":"code","cf9dd248":"code","4665fd07":"code","80b02989":"code","b52e3f80":"code","f5b598a0":"code","b16c435b":"code","4fede462":"code","e1631d3c":"code","220a4897":"code","5cd7ab41":"code","3f1c8c21":"code","fda31d8c":"code","3a04149f":"code","7c10c747":"code","065cc0b1":"code","d921146c":"code","fc48b8db":"code","74a3835e":"code","87a3d481":"code","3fc3f2bc":"code","feca2604":"code","4c83ca40":"code","b60ea3e5":"code","ac073bb4":"code","fe92ebb1":"code","f6941e14":"code","a3e56905":"code","23529ce7":"code","39f9d45b":"code","733cf1db":"code","143227d7":"code","ef7be50b":"code","4d2dc83b":"code","ffb06780":"code","2aad1b9c":"code","d46952e8":"code","0ede3f29":"code","17a8daeb":"code","aab64101":"markdown","18b21006":"markdown","eef23121":"markdown","e514fe9e":"markdown","1ba55232":"markdown","c529b4af":"markdown","431b5299":"markdown","80e70459":"markdown","3708cb9d":"markdown","0770ac9c":"markdown","e5ee7b0f":"markdown","5062a5ab":"markdown","292a0bd8":"markdown","520d4f39":"markdown","1a876aff":"markdown","514f71ad":"markdown","d97f18e0":"markdown","fff73f0d":"markdown","392eb6ff":"markdown","8ea4ad01":"markdown"},"source":{"5bbcc70c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1e7d8fb1":"df = pd.read_csv('..\/input\/house-price-tehran-iran\/housePrice.csv')","da28b92d":"df.head()","bee2ac2a":"df.info()","9e149127":"df = df.fillna(\"Unknown\")\nmissing_data = df.isnull().sum()\nprint(missing_data)","f2828b3b":"df.Parking = df.Parking.astype(int)\ndf.Warehouse = df.Warehouse.astype(int)\ndf.Elevator = df.Elevator.astype(int)\ndf.Area = df.Area.str.replace(',' , '').astype(int)","82b38bfc":"df.nlargest(5,'Area')","bc1e47d4":"# **first: Groupby Address with mean of Price:**\nAddress_df = df.groupby('Address').mean()['Price(USD)'].reset_index()\n# **Then Sorting By Price:**\nAddress_df = Address_df.sort_values(by=['Price(USD)']).reset_index()\n## **Add \"codedAddress\" Column**\nAddress_df.insert(0, 'codedAddress', range(1, 194))\ndf1 = pd.Series(Address_df.codedAddress.values,index=Address_df.Address).to_dict()\ndf[\"Address\"] = df[\"Address\"].map(df1)","a16e6693":"df.info()","cf9dd248":"X= df.drop('Price(USD)', axis=1)\ny= df['Price(USD)']","4665fd07":"from sklearn.preprocessing import PolynomialFeatures","80b02989":"polynomial_converter= PolynomialFeatures(degree=3, include_bias=False)\npoly_features= polynomial_converter.fit_transform(X)\npoly_features.shape","b52e3f80":"from sklearn.model_selection import train_test_split","f5b598a0":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","b16c435b":"from sklearn.preprocessing import StandardScaler","4fede462":"scaler= StandardScaler()\nscaler.fit(X_train)","e1631d3c":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","220a4897":"from sklearn.linear_model import Ridge","5cd7ab41":"ridge_model= Ridge(alpha=10)\nridge_model.fit(X_train, y_train)","3f1c8c21":"#predict Test Data\ny_pred= ridge_model.predict(X_test)","fda31d8c":"#Evaluating the Model\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nMAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)","3a04149f":"MAE","7c10c747":"pd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","065cc0b1":"#Train the Model\nfrom sklearn.linear_model import RidgeCV","d921146c":"ridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')\nridge_cv_model.fit(X_train, y_train)","fc48b8db":"ridge_cv_model.alpha_","74a3835e":"#Predicting Test Data\ny_pred_ridge= ridge_cv_model.predict(X_test)","87a3d481":"MAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)","3fc3f2bc":"MAE_ridge","feca2604":"pd.DataFrame([MAE_ridge, MSE_ridge, RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['Ridge Metrics'])","4c83ca40":"ridge_cv_model.coef_","b60ea3e5":"from sklearn.linear_model import LassoCV","ac073bb4":"lasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)\nlasso_cv_model.fit(X_train, y_train)","fe92ebb1":"lasso_cv_model.alpha_","f6941e14":"y_pred_lasso= lasso_cv_model.predict(X_test)","a3e56905":"MAE_Lasso= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso= np.sqrt(MSE_Lasso)","23529ce7":"MAE_Lasso","39f9d45b":"pd.DataFrame([MAE_Lasso, MSE_Lasso, RMSE_Lasso], index=['MAE', 'MSE', 'RMSE'], columns=['Lasso Metrics'])","733cf1db":"lasso_cv_model.coef_","143227d7":"from sklearn.linear_model import ElasticNetCV","ef7be50b":"elastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=100000)\nelastic_model.fit(X_train, y_train)","4d2dc83b":"elastic_model.l1_ratio_","ffb06780":"y_pred_elastic=elastic_model.predict(X_test)","2aad1b9c":"MAE_Elastic= mean_absolute_error(y_test, y_pred_elastic)\nMSE_Elastic= mean_squared_error(y_test, y_pred_elastic)\nRMSE_Elastic= np.sqrt(MSE_Elastic)","d46952e8":"MAE_Elastic","0ede3f29":"pd.DataFrame([MAE_Elastic, MSE_Elastic, RMSE_Elastic], index=['MAE', 'MSE', 'RMSE'], columns=['Elastic Metrics'])","17a8daeb":"elastic_model.coef_","aab64101":"#### Preprocessing (Polynomial Conversion)","18b21006":"Fill the Nulls with \"Unknown\"  :","eef23121":"#### Import the Data","e514fe9e":"### Regularization\n#### 1- Ridge Regression","1ba55232":"* Due to the large difference between items 5 and the first four, it can be seen that the first to fourth rows are Outlier.","c529b4af":"##### Convert \"Address\" Column to Ordinal Scale (from Nominal Scale to Ordinal Scale)\n\nWe know the neighborhood address of a house has a big impact on its price. Therefore, we should not convert addresses into numbers without considering this.\n\nOne idea for solving this problem is to first place the addresses in the order in which the neighborhood is expensive and then set the value for them.\n\nlets do that:","431b5299":"One of the major aspects of training your machine learning model is avoiding overfitting. The model will have a low accuracy if it is overfitting. This happens because your model is trying too hard to capture the noise in your training dataset. By noise we mean the data points that don\u2019t really represent the true properties of your data, but random chance. Learning such data points, makes your model more flexible, at the risk of overfitting.\n\nThe concept of balancing bias and variance, is helpful in understanding the phenomenon of overfitting.\n\nOne of the ways of avoiding overfitting is using cross-validation, that helps in estimating the error over test set, and in deciding what parameters work best for your model.\n\n## Regularization\nThis is a form of regression, that constrains\/ regularizes or shrinks the coefficient estimates towards zero. In other words, this technique discourages learning a more complex or flexible model, so as to avoid the risk of overfitting.\n\nRead full article about Regularization method [here](https:\/\/towardsdatascience.com\/regularization-in-machine-learning-76441ddcf99a).","80e70459":"#### Scaling the Data","3708cb9d":"In this notebook i'm going to apply Regression Regularization on [TehranPrice Dataset](https:\/\/www.kaggle.com\/mokar2001\/house-price-tehran-iran).\n\nI did Visualization & LinearRegression with this dataset [here](https:\/\/www.kaggle.com\/sajjadnajafi\/tehran-houseprice-visualization-linearregression).\n\n","0770ac9c":"#### Import all Necessary Libraries","e5ee7b0f":"##### Take a look at dataset","5062a5ab":"#### Now we have to convert column to integer or float:","292a0bd8":"# Regression Regularization Tehran HousePrice","520d4f39":"#### 3- Elastic Net","1a876aff":"## Introduction","514f71ad":"#### Split the Data to Train & Test","d97f18e0":"#### Determine the Features & Target Variable (Lable)","fff73f0d":"#### Ridge Regression (Coosing an alpha value with Cross-Validation)","392eb6ff":"#### 2- Lasso Regression","8ea4ad01":"##### Drop outlier data from Area\n\nAccording to the author of the dataset, we have Outlier in the Area column.([here](https:\/\/www.kaggle.com\/mokar2001\/house-price-tehran-iran\/discussion\/270637))\n\nlets drop those:"}}