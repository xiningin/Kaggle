{"cell_type":{"b9f9eba4":"code","044ebd95":"code","353611be":"code","a19eae4e":"code","1fb8e676":"code","1e50628b":"code","bbd6bfaa":"code","930833eb":"code","ee1bf5b3":"code","8bbba3a9":"code","39e7fd09":"code","24380584":"code","69f4b451":"code","ebd70e92":"code","46db183c":"code","371e6849":"code","05b10786":"code","22989644":"code","36f99d5c":"code","fec2044d":"code","14f40e37":"code","df560ca2":"code","99cf8a6f":"code","82842370":"code","72214d1f":"code","c983144e":"code","24126b3a":"code","2bc09ffd":"code","e4417911":"code","e827d0c7":"code","94d4ca31":"code","628ce04b":"code","bcd0bfa5":"code","dfb6f1bd":"code","3c2c8c6d":"code","7941b1af":"code","6dc3d0eb":"code","8d3363b6":"code","b093229a":"code","886a286f":"code","27120157":"code","58ecde27":"code","9c7b5c50":"code","99b48f6e":"code","bb917cfd":"code","99d064da":"code","7375c5d5":"code","f56a8912":"code","b7a5f014":"code","4dd44c94":"code","2117c3d8":"code","28dfe4e1":"code","f55ca846":"code","5ee327d4":"code","908cee34":"code","8af5cf19":"code","066ea285":"code","4ed7539e":"code","8f3b98f1":"code","cb0433fb":"code","81576ffe":"code","bed4b8ba":"markdown","04fe1acc":"markdown","5e564281":"markdown","38c24800":"markdown","ee5ed679":"markdown","dae36936":"markdown","cb6db3aa":"markdown","5514370c":"markdown","eb9ff80e":"markdown","adb2c1b5":"markdown","a90192db":"markdown","e5357c8e":"markdown","56632aef":"markdown","63d8ef22":"markdown","3d210272":"markdown","ec4aa5e1":"markdown","36cc4e4e":"markdown","8d41418f":"markdown","e36b3071":"markdown","0320b21b":"markdown","daf5f514":"markdown","a6075786":"markdown","5dd40954":"markdown","bfeb0de5":"markdown","5dfb2f91":"markdown","30cf08c1":"markdown","3560a15d":"markdown","67d5e1c9":"markdown","19611c18":"markdown","915dc90e":"markdown"},"source":{"b9f9eba4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimport seaborn as sns","044ebd95":"train = pd.read_excel('..\/input\/flight-fare-prediction-mh\/Data_Train.xlsx')","353611be":"train.shape","a19eae4e":"train.head(5)","1fb8e676":"print(train.isnull().sum()) #checking for null values","1e50628b":"train=train.dropna()","bbd6bfaa":"train['Journey_Day'] = pd.to_datetime(train.Date_of_Journey, format='%d\/%m\/%Y').dt.day\ntrain['Journey_Month'] = pd.to_datetime(train.Date_of_Journey, format='%d\/%m\/%Y').dt.month\ntrain['weekday']= pd.to_datetime(train.Date_of_Journey, format='%d\/%m\/%Y').dt.weekday\n\n","930833eb":"train.drop(labels = 'Date_of_Journey', axis = 1, inplace = True)\n","ee1bf5b3":"train.columns","8bbba3a9":"def duration(test):\n    test = test.strip()\n    total=test.split(' ')\n    to=total[0]\n    hrs=(int)(to[:-1])*60\n    if((len(total))==2):\n        mint=(int)(total[1][:-1])\n        hrs=hrs+mint\n    test=str(hrs)\n    return test\ntrain['Duration']=train['Duration'].apply(duration)\n","39e7fd09":"train['Duration'].nunique()","24380584":"def deparrtime(x):\n    x=x.strip()\n    tt=(int)(x.split(':')[0])\n    if(tt>=16 and tt<21):\n        x='Evening'\n    elif(tt>=21 or tt<5):\n        x='Night'\n    elif(tt>=5 and tt<11):\n        x='Morning'\n    elif(tt>=11 and tt<16):\n        x='Afternoon'\n    return x\ntrain['Dep_Time']=train['Dep_Time'].apply(deparrtime)\ntrain['Arrival_Time']=train['Arrival_Time'].apply(deparrtime)\n","69f4b451":"def stops(x):\n    if(x=='non-stop'):\n        x=str(0)\n    else:\n        x.strip()\n        stps=x.split(' ')[0]\n        x=stps\n    return x\ntrain['Total_Stops']=train['Total_Stops'].apply(stops)","ebd70e92":"pd.options.mode.chained_assignment = None \nfor i in range(train.shape[0]):\n    if(train.iloc[i]['Additional_Info']=='No info'):\n        train.iloc[i]['Additional_Info']='No Info' ","46db183c":"train=train.drop(['Route'], axis=1) #we don't need it as we already have total_stops","371e6849":"train.head(2)","05b10786":"train.info()","22989644":"train[\"Duration\"] = train[\"Duration\"].astype(int)\ntrain[\"Journey_Day\"] = train[\"Journey_Day\"].astype(object)\ntrain[\"Journey_Month\"] = train[\"Journey_Month\"].astype(object)\ntrain[\"weekday\"] = train[\"weekday\"].astype(object)","36f99d5c":"df1 =train.copy() ","fec2044d":"df1[\"Journey_Month\"]=df1[\"Journey_Month\"].replace({3:\"March\",4:\"April\",5:\"May\",6:\"June\"}) #assigning month names","14f40e37":"df1[\"Journey_Month\"]=df1[\"Journey_Month\"].astype(object)","df560ca2":"df1.info()","99cf8a6f":"#Journey month v\/s total fare\nv1=sns.barplot(x='Journey_Month', y='Price', data=df1,estimator=sum)\nv1.set_title('Monthv\/sPrice')\nv1.set_ylabel('Price')\nv1.set_xlabel('Month of booking')\nv1.set_xticklabels(v1.get_xticklabels(), rotation=80)","82842370":"#count of flights per month\ntop_month=df1.Journey_Month.value_counts().head(10)\ntop_month","72214d1f":"monthly_avg=df1.groupby(['Journey_Month']).agg({'Price':np.mean}).reset_index()","c983144e":"#Journey month v\/s Averagefare\nmonthly_avg.plot(x='Journey_Month',y='Price',figsize=(6,6))","24126b3a":"# Destination vs AveragePrice\nsns.catplot(y='Price',x='Destination',data= df1.sort_values('Price',ascending=False),kind=\"boxen\",height=6, aspect=3)\nplt.show","2bc09ffd":"# Source vs AveragePrice\nsns.catplot(y='Price',x='Source',data= train.sort_values('Price',ascending=False),kind=\"boxen\",height=6, aspect=3)\nplt.show","e4417911":"#Count of flights v\/s Airline\nplt.figure(figsize = (15, 10))\nplt.title('Count of flights with different Airlines')\nax=sns.countplot(x = 'Airline', data =train)\nplt.xlabel('Airline')\nplt.ylabel('Count of flights')\nplt.xticks(rotation = 90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')","e827d0c7":"# Airline vs AveragePrice\nsns.catplot(y='Price',x='Airline',data= train.sort_values('Price',ascending=False),kind=\"boxen\",height=6, aspect=3)\nplt.show","94d4ca31":"#duration v\/s AveragePrice\nsns.scatterplot(data=train, x='Duration', y='Price')","628ce04b":"#Deptarure time v\/s AveragePrice\nv2=sns.barplot(x='Dep_Time', y='Price', data=train)\nv2.set_ylabel('Price')\nv2.set_xlabel('Time of dept')\nv2.set_xticklabels(v2.get_xticklabels(), rotation=80)","bcd0bfa5":"# time of departure v\/s count of flights\ntop_time=train.Dep_Time.value_counts().head(10)\ntop_time","dfb6f1bd":"#TIME OF ARRIVAL V\/S average price\nv3=sns.barplot(x='Arrival_Time', y='Price', data=train)\nv3.set_title('TIME OF ARRIVALV\/S PRICE')\nv3.set_ylabel('Price')\nv3.set_xlabel('Arrival_time')\nv3.set_xticklabels(v3.get_xticklabels(), rotation=80)","3c2c8c6d":"#total stops v\/s average price\nv4=sns.barplot(x='Total_Stops', y='Price', data=train)\nv4.set_title('NO. OF STOPS V\/S PRICE')\nv4.set_ylabel('Price')\nv4.set_xlabel('Total_Stops')\nv4.set_xticklabels(v4.get_xticklabels(), rotation=80)","7941b1af":"#WEEKDAY V\/S average price\nv4=sns.barplot(x='weekday', y='Price', data=train)\nv4.set_title('WEEKDAY V\/S PRICE')\nv4.set_ylabel('Price')\nv4.set_xlabel('WEEKDAY')\nv4.set_xticklabels(v4.get_xticklabels(), rotation=80)","6dc3d0eb":"train[\"Journey_Day\"].unique()","8d3363b6":"#Count of flights with different dates\nplt.figure(figsize = (15, 10))\nplt.title('Count of flights with different dates')\nax=sns.countplot(x = 'Journey_Day', data =train)\nplt.xlabel('Journey_Day')\nplt.ylabel('Count of flights')\nplt.xticks(rotation = 90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')","b093229a":"#Journey_Day v\/s Average price\nv5=sns.barplot(x='Journey_Day', y='Price', data=train)\nv5.set_title('Price of flights with different datess')\nv5.set_ylabel('Price')\nv5.set_xlabel('date')\nv5.set_xticklabels(v5.get_xticklabels(), rotation=80)","886a286f":"print(train.dtypes)","27120157":"ncol=[\"Duration\"]          \nfor i in ncol:\n    q75, q25 = np.percentile(train.loc[:,i], [75 ,25])\n    iqr = q75 - q25\n    min = q25 - (iqr*1.5)\n    max = q75 + (iqr*1.5)\n    train = train.drop(train[train.loc[:,i] <= min].index)\n    train = train.drop(train[train.loc[:,i] >= max].index)","58ecde27":"train.shape","9c7b5c50":"import scipy.stats as stats\n_ = sns.jointplot(x='Duration',y='Price',data=train,kind = 'reg')\n_.annotate(stats.pearsonr)\nplt.show()","99b48f6e":"# Import label encoder \ncolnames = list(train.columns)\nfrom sklearn import preprocessing \n\n# label_encoder object knows how to understand word labels. \nlabel_encoder = preprocessing.LabelEncoder() \n  \nfor col in colnames:\n    if train[col].dtype==object:\n        train[col]= label_encoder.fit_transform(train[col]) ","bb917cfd":"cat_var=[\"Airline\",\"Source\",\"Destination\",\"Dep_Time\",\"Arrival_Time\",\"Total_Stops\",\"Additional_Info\",\"Journey_Day\",\"Journey_Month\",\"weekday\"] \ncatdf=train[cat_var]","99d064da":"catdf.head(2)","7375c5d5":"from sklearn.feature_selection import chi2\nn= 10\nfor i in range(0,9):\n    X=catdf.iloc[:,i+1:n]\n    y=catdf.iloc[:,i]\n    chi_scores = chi2(X,y)\n    p_values = pd.Series(chi_scores[1],index = X.columns)\n    print(\"for\",i)\n    print(p_values)\n    for j in range (0, len(p_values)):\n        if (p_values[j]<0.01):\n            print(p_values[j])","f56a8912":"train=train.drop([\"Airline\",\"Source\",\"Destination\",\"Total_Stops\",\"Journey_Month\",\"Journey_Day\",\"Arrival_Time\"],axis=1)","b7a5f014":"train.info()","4dd44c94":"import statsmodels.api as sm\nfrom statsmodels.formula.api import ols\nmodel = ols('Price ~ C(Dep_Time)+C(weekday)+C(Additional_Info)',data=train).fit()\naov_table = sm.stats.anova_lm(model)\naov_table","2117c3d8":"probanova=list(aov_table[\"PR(>F)\"])","28dfe4e1":"for i in range(0,4):\n    if probanova[i]>0.05:\n        print(i)","f55ca846":"from statsmodels.stats.outliers_influence import variance_inflation_factor\ndef calc_vif(X):\n    vif = pd.DataFrame()\n    vif[\"variables\"] = X.columns\n    vif[\"VIF\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n    return(vif)","5ee327d4":"df1=train.drop([\"Price\"],axis=1)\ncalc_vif(df1)","908cee34":"train = train.drop([\"Additional_Info\"],axis=1)","8af5cf19":"train[\"weekday\"] = train[\"weekday\"].astype(object)\ntrain[\"Dep_Time\"] = train[\"Dep_Time\"].astype(object)","066ea285":"train.head(2)","4ed7539e":"train = pd.get_dummies(train, drop_first=True)\ntrain.info()","8f3b98f1":"from sklearn import preprocessing","cb0433fb":"from sklearn.model_selection import train_test_split\nx = train.drop('Price',axis=1).values\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\nX = pd.DataFrame(x_scaled)\ny = train['Price'].values","81576ffe":"model = sm.OLS(y,X).fit()\nmodel.summary()","bed4b8ba":"\nChecking the p-values, we drop: \"Airline\",\"Source\",\"Destination\",\"Total_Stops\",\"Journey_Month\",\"Journey_Day\",\"Arrival_Time\"  ","04fe1acc":"### Analysis :\n\n###### The airfare price range in Delhi & New Delhi is the maximum, this can be due to: Jet fuel prices in Delhi had increased in the year of 2018 by 26.4%, it is also the National Capital, political seat of power and a highly visited place for vacations(same for bangalore & cochin)\n###### The same reasoning can be given for higher price range in delhi as the source of the flight.","5e564281":"### Analysis :\n\n######  We see that the total count of flight is maximum towards the month-May which can also be concluded from the above bar plot which shows that the sum of fare is maximum in May.\n###### This can be due to : Summer vacations in the month of may for schools\/colleges, hence most families are also generally going for vacations around this time.\n###### The count of flights is lowest on the month of April, this can be because : Schools,colleges have their final exams around this time, offices are mostly busy in the month of April as it is the end of Quarter 1.","38c24800":"### Outlier Detection ","ee5ed679":"### Extracting whether its a morning,evening,night or afternoon flight from departure time & arrival time of the flight","dae36936":"\n### FLIGHT-FARE PREDICTION","cb6db3aa":"### Analysis :\n\n###### We know that duration( or distance) plays a major role in affecting air ticket prices but we see no such pattern here, as there must be there are other significant factors affecting air fare like type of airline, destination of flight, date of journey of flight(higher if collides with a public holiday)","5514370c":"It occurs when two or more independent variables are highly correlated with one another\nin a regression model.\n\nif VIF is 1 --- Not correlated to any of the variables.\n\nif VIF is between 1-5 --- Moderately correlated.\n\nif VIF is above 5 --- Highly correlated.","eb9ff80e":"## Converting weekday and Dep_Time to dummy variable:","adb2c1b5":"### Analysis :\n###### We see that prices are highest on a friday, that may be because this is when airlines start raising prices to make up for the lower prices before and also because weekdays are off for most people so they are mostly travelling to or travelling back.","a90192db":"### Analysis:\n\n###### Early Morning flights are always cheaper and so are midnight flight prices.\n###### Evening flight fares are expensive due to more demand and is the most convenient time to tarvel for most people.\n","e5357c8e":"## Correlation test:\n## Multicollinearity Test","56632aef":"## Comparison test :\n## Anova test\nIt is carried out to compare between each groups in a categorical variable.\n\nANOVA only lets us know the means for different groups are same or not. It doesn\u2019t help us identify which mean is different.\n\nHypothesis testing :\n\nH0: means of all levels of the categorical variable is same\n\nH1: mean of at least one level is different\n\nIf p-value < 0.05 then we reject the null hypothesis.\n","63d8ef22":"## Multiple Regression model","3d210272":"### Analysis :\n\n###### from the diagram below we can see that jet airways Business have the highest price\n###### apart from the first airline almost all are having similar median\n","ec4aa5e1":"# EDA","36cc4e4e":"## Correlation test:\n## Chi-square test for categorical variables :\nHypothesis testing :\n\nHO: The two variables are independent\n\nH1: The two variables are dependent\n\nIf p-value <0.01(we take confidence interval as 99%,and alpha =0.01, as from our analysis see that keeping significance level as 0.05,many variables became depedent)\n\nso then we reject the null hypothesis saying that 2 variables are dependent.\n\nThere should be no dependencies between Independent variables.\n\nSo, we check variables who are highly dependent with other variables, we remove them.\n","8d41418f":"As p-value<0.05 for all the variables, we reject H0 and hence no variables are removed ","e36b3071":"### Analysis :\n\n###### As a direct\/non-stop flight is accounting for fare of only one flight for a trip, its average fair is the least. As the no. of stops\/layovers increase, the fare price goes up accounting for no. of flights and due to other resources being used up for the same.","0320b21b":"## Correlation tests\n Pearson correlation coefficient : To check the linear association between the target variable and independent continuous variable.(this condition needs to be met)\n \n H0: Two variables are not correlated \n \n H1: Two variables are correlated\n \nif p-value < 0.05, then we reject the null hypothesis and accept the H1, saying they are correlated.","daf5f514":"### Extracting day,month,year,weekday from Date of Journey","a6075786":"### Analysis :\n\n###### Jet airways and Air India are full service airlines are and always highly priced due to various amenities they provide. Low-cost carriers like indigo and spicejet have a lower and similar fare range .","5dd40954":"### Analysis :\n\n###### It looks like that there's a trend in the air fare when compared to the day of respective months, prices are higher in the start of month but this is not a trend if you see from the broader perspective as this might be due to various reasons. For eg.  the date of Journey is 10th March and people are booking towards 5th March or so, this will lead to higher flight prices.(Prices increase as near you date of booking is to the date of journey). So flight prices don't follow any particular pattern towards any time of the month.","bfeb0de5":"### Recommendation for non-normal distribution of residuals\n\n*The non-normal pattern in the residuals indicates that the deterministic portion (predictor variables) of the model is not capturing some explanatory information that is \u201cleaking\u201d into the residuals.\nPossibilities include:*\n\n*A missing higher-order term of a variable in the model to explain the distribution*\n\n*A missing interaction between terms already in the model*\n\n*Accounting for Errors with a Non-Normal Distribution:*\n\n* *Transform the response variable to make the distribution of the random errors approximately normal.*\n\n* *Transform the predictor variables, if necessary, to attain or restore a simple functional form for the regression function*.\n\n* *Even after that if you find the residuals are not normally distributed, use other regression models where this assumption is not required*\n* *Add a variable to capture the time series autocorrelation of the residuals*\n\n","5dfb2f91":"### Converting total_stops to 0,1,2,3 and so on..","30cf08c1":"We see that \"Additional_Info\" has a VIF>5, hence we drop the variable.","3560a15d":"## OLS SUMMARY TABLE\n\n*1) R-square - it tells that 81.7% of the variation in the outcome variable is explained by the   predictor variables.\n2) Adj R square - 81.7% ,it takes into account the number of independent variables used for predicting the target variable. In doing so, it removes variables which don't add any value. In our model r-square  = Adj R square which tells that the model is well fitted an all relevant independent features are included.*\n*3)F-statistic - compares the model with no predictors(intercept-only model) with our model*\n\n*H0: states that the model with no independent variables fits the data as well as our model.*\n\n*H1: says that THE model fits the data better than the intercept-only model.*\n\n*We consider p-value < 0.05 to reject H0*\n\n*As p <0.05 , we reject H0 and say that there is much less than 5% chance that the F-statistic of 4730 could have occurred by chance under the assumption of a valid Null hypothesis.*\n\n*4)Omnibus a test of the skewness and kurtosis of the residual, the omnibus value of the model is extremely high and prob (omnibus) is close to 0, indicates that residual is not normally distributed*\n\n*5)Skew value of 2.17 (positively right-skewed) tells the residual is not normally distributed either*\n\n*6)kurtosis value is 21(thicker tails), Kurtosis of the normal distribution is 3.0.*\n\n*7)Durbin Watson (>1) indicates no auto-correlation of residuals*.\n\n*8)Condition no. is also low, this is used ti address multi-collinearity*\n\n*10)Jarque-Bera test is a joint hypothesis of the skewness being zero and the excess kurtosis being zero.JB(PValue<0.05)= Reject Ho (Non-Normal Distribution)*\n\n------------------------------------------------------------------------------------------------------- \n","67d5e1c9":"We get p-value < 0.05, hence we accept H1 and say the target variable and continuous independent variable are correlated. r = 0.51 says they are moderately related.","19611c18":"### Converting duration into minutes","915dc90e":"### Analysis :\n\n###### We see that the average fare price is highest the month of March , this can be because people usually book the fights 2-3 months prior to their date of journey which leads to higher demand  and hence higher fare prices.(since the count of tickets booked  for travelling in May is the most, prior bookings  are done in March)"}}