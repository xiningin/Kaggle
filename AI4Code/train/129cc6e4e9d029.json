{"cell_type":{"62286c53":"code","f376e615":"code","cfe64dad":"code","48b9365c":"code","3de29137":"code","50ad58ae":"code","ea1e3f6c":"code","88d3f2ae":"code","fe3e9d3b":"code","20e92a86":"code","2eb6a9be":"code","bd5897b8":"code","b7215a1d":"code","70861e78":"markdown","36664eef":"markdown","6be69bf0":"markdown","67911cf4":"markdown","6435ad07":"markdown","c067ca68":"markdown","e5990859":"markdown","a336cf22":"markdown","03c85dcb":"markdown"},"source":{"62286c53":"import pandas as pd\nimport numpy as np","f376e615":"# Loading the Data and using First 6 columns only.\ndf=pd.read_csv(\"..\/input\/mercedesbenz-greener-manufacturing\/train.csv\",usecols=['X1','X2','X3','X4','X5','X6'])","cfe64dad":"df.head()","48b9365c":"# Unique categories for each column \nfor col in df.columns:\n    print(col,':',len(df[col].unique()),'labels')","3de29137":"# let's Examine How many columns we will obatain after one hot encoding these variables\npd.get_dummies(df,drop_first=True).shape","50ad58ae":"# Lets find the top 10 most frequent categories for the variable X2\ndf.X2.value_counts().sort_values(ascending=False).head(20)","ea1e3f6c":"# Let's Make a list with most Frequent categories of the variable.\ntop_10=[x for x in df.X2.value_counts().sort_values(ascending=False).head(10).index]","88d3f2ae":"top_10","fe3e9d3b":"# And Now we Make The 10 Binary Variables\nfor label in top_10:\n    df[label]=np.where(df['X2']==label,1,0)\ndf[['X2']+top_10].head(40)   ","20e92a86":"# Getting whole set of dummy variables, for all the categorical Varaiable\ndef one_hot_encoding_top_x(data,variable,top_x_lables):\n    # function to craete dummy variable for most frequent labels and we can also vary the number of\n              # most frequent lables thatt we encode.\n        \n        for label in top_x_lables:\n            df[variable+'_'+label]=np.where(df[variable]==label,1,0)\n\ndf=pd.read_csv(\"..\/input\/mercedesbenz-greener-manufacturing\/train.csv\",usecols=['X1','X2','X3','X4','X5','X6'])    \n\n# Encoding X2 in top 10 most frequent categories\none_hot_encoding_top_x(df,'X2',top_10)\ndf.head()","2eb6a9be":"# find the 10 top most frequent categories for X1\ntop_10=[x for x in df.X1.value_counts().sort_values(ascending=False).head(10).index]","bd5897b8":"top_10","b7215a1d":"one_hot_encoding_top_x(df,'X1',top_10)\ndf.head()","70861e78":"### Disadvantage","36664eef":"<li> Does Not Add any information that make the variable More Predictive.\n<li> Does not kepp the information of ignored Variables.    ","6be69bf0":"### I will Thanks Krish Naik For the Amazing Tutorial.\n### I hope you enjoyed it and see you in the next one! Please Upvote and Share","67911cf4":"# Feature Engineering-How to Perform One Hot Encoding for Multi Categorical Variables","6435ad07":"Because it is not unsual that categorical variables have a few dominating\ncategories and the remaining lables add mostly noise,this is quite\nsimple and straightforward approach that may be useful on many occassion.","c067ca68":"It is nothing that every time it is to choose top 10 variables only we can choose top_5 or top_20 that mostly depends.","e5990859":"### Advantages\n\n","a336cf22":"We can see that from just 6 intial categorical variable column, we end up with 117 new Variables.\n\nWhat can we do instaed ?\n\n[Winning the KDD Cup Orange Challenge with Ensemble\nSelection](http:\/\/proceedings.mlr.press\/v7\/niculescu09\/niculescu09.pdf)\n\nIn the Winning the KDD Cup Orange Challenge with Ensemble\nSelection the author limit one hot encosing to the top 10 most frquent labels of the variable.This Means that they would make one Binary Variable\nfpr each of the top 10 most  frequent Labels only.THis is Equivalent to\ngrouping  all the other labels under new category.In this case will we\ndropped.Thus,the 10 new dummy variables indicate if one of the 10\nmost frequent labels is present [1] and not [0] for a particular\nobservation.\n\nLet's do it in Python\n","03c85dcb":"\n<li> StraightForward to implement.\n<li>Does not Require Hours of Variable Exploration    \n<li> Does Not exapnd massively the feature space (number of columns)"}}