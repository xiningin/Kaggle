{"cell_type":{"f0329d0a":"code","79712a9b":"code","a9bc1e61":"code","27eeb81f":"code","88c592f0":"code","49e9b0fd":"code","baed51a5":"code","a2a266e4":"code","343a7a18":"code","d3609f6a":"code","33f4abb5":"code","aa17cfc6":"code","26db2c63":"code","df10be27":"code","0c6cd82d":"code","78a685b2":"code","9ecbd62a":"code","a1cb175e":"code","17debdb8":"code","56bb8839":"code","f60e58dd":"code","b0e78d1b":"code","a713b848":"code","4b61cbd5":"code","c5918250":"code","045a5e70":"code","6c3a6317":"code","2710595c":"code","17db0ae0":"code","d0b0c494":"code","fdbc4fbc":"code","28e7236f":"code","1a376c9a":"code","d981590c":"code","ddb3b2f7":"code","0103de60":"code","3a244c32":"code","6bc727e1":"code","c578a9f9":"code","bc846fd9":"code","aca6eab2":"code","4b1c0e44":"code","dce0e9b2":"code","cfe8e704":"code","a2b74021":"code","5d7e6702":"code","74d069a4":"code","7244657d":"code","771b0c39":"code","5c0b860d":"code","c5739e83":"code","0affe85a":"code","202106a1":"code","190cda6e":"code","c11bccb2":"code","b89cee8e":"code","bef83e27":"code","5591fa60":"code","88ead749":"code","2fe10958":"code","38d01f24":"code","b6cf82a6":"code","ceff08f9":"code","44aaaec4":"code","43d2d687":"code","6f78c9ec":"code","ceac4cc9":"code","85ed659e":"code","e05ef98f":"code","e04d0f86":"code","00ac6c1b":"code","4eabf9a1":"code","84c2743d":"code","5dd6dbcb":"code","7ce30311":"code","9a99be0e":"code","a046aa44":"code","b5b4b139":"code","fe56d2c7":"code","59de3a14":"code","b5b92eb1":"code","26bd33dc":"code","57f6feb0":"code","66d86b38":"code","e22c914e":"code","ee9ff4e1":"markdown","6692f1a9":"markdown","f1a45238":"markdown","328f2095":"markdown","d554af76":"markdown","9829acac":"markdown","21471cb5":"markdown","bb8df8b9":"markdown","aaaaba33":"markdown","a501736b":"markdown","5636647d":"markdown","f804aa61":"markdown","cdb5e2c9":"markdown","3507b8e3":"markdown","d9d1b704":"markdown","22c6a73e":"markdown","004466b0":"markdown","6a4d4793":"markdown","429bf154":"markdown","ba0503c7":"markdown","60904a4e":"markdown","aca551cc":"markdown","3cc911be":"markdown","3e20057e":"markdown","1c70aa11":"markdown","1711f442":"markdown","87a00077":"markdown","75ebee79":"markdown","15a131a2":"markdown","0fb4f30a":"markdown","594657aa":"markdown","0d49ec04":"markdown","381d66dd":"markdown","0af16c7e":"markdown","a3aca7df":"markdown","47fbc78a":"markdown","a0d7c376":"markdown","8933d4a1":"markdown","30a9d441":"markdown","10478d7a":"markdown","2e57d606":"markdown","d3961564":"markdown","4f6a1eda":"markdown","308aa2ae":"markdown","b0fbabe9":"markdown","5f60b18f":"markdown","b63089ea":"markdown","613d7fba":"markdown","064657b9":"markdown","f41018b1":"markdown","35dc498b":"markdown","0be349be":"markdown","c1d9221a":"markdown","17e20adf":"markdown","b5adbab5":"markdown","faaaea6b":"markdown","e859ca89":"markdown","dee0a198":"markdown","45d954be":"markdown","559b5d41":"markdown","f40e49fc":"markdown"},"source":{"f0329d0a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2\nimport gc","79712a9b":"clicks_df = pd.read_csv('..\/input\/clicks.csv.gzip', compression='gzip', dtype={'advertiser_id':'int32','action_id':'float32','source_id':'int32','country_code':'category',\\\n                                                                           'latitude':'float32','longitude':'float32','carrier_id':'float32','os_minor':'category',\\\n                                                                           'os_major':'category','specs_brand':'category','timeToClick':'float32','touchX':'float32',\\\n                                                                           'touchY':'float32','ref_type':'category'}, index_col='trans_id')\nclicks_df['created'] = pd.to_datetime(clicks_df['created'])\nevents_df = pd.read_csv('..\/input\/events.csv.gzip', compression='gzip', low_memory=False, dtype={'event_id':'int32','ref_type':'category','application_id':'int32',\\\n                                                                                            'attributed':'bool','device_countrycode':'category','device_city':'category',\\\n                                                                                            'trans_id':'category','carrier':'category','device_os':'category',\\\n                                                                                            'connection_type':'category'})\nevents_df['date'] = pd.to_datetime(events_df['date'])\nevents_df['wifi'].astype('bool', inplace=True)\ninstalls_df = pd.read_csv('..\/input\/installs.csv.gzip', compression='gzip',index_col='ref_hash', dtype={'ref_type':'category','application_id':'int32',\\\n                                                                                              'device_brand':'category','click_hash':'float32'\\\n                                                                                            })\ninstalls_df.drop(columns=['session_user_agent'], inplace=True)\ninstalls_df['wifi'].astype('bool', inplace=True)\ninstalls_df['created'] = pd.to_datetime(installs_df['created'])\nauctions_df = pd.read_csv('..\/input\/auctions.csv.gzip', compression='gzip', low_memory=False, dtype={'country':'category','platform':'category','ref_type_id':'category'})\n\nauctions_df['date'] = pd.to_datetime(auctions_df['date'])\n\nprint('setup done')","a9bc1e61":"difference = events_df.memory_usage(index=True).sum()\nprint('After datatypes:', int(round(difference\/1024\/1024)), 'MB')\ndifference = 421557567-difference\nprint('Difference:', int(round(difference\/1024\/1024)), 'MB')","27eeb81f":"difference = clicks_df.memory_usage(index=True).sum()\nprint('After datatypes:', int(round(difference\/1024\/1024)),'MB')\ndifference = 4031783-difference\nprint('Difference:', int(round(difference\/1024\/1024)),'MB')","88c592f0":"difference = auctions_df.memory_usage(index=True).sum()\nprint('After datatypes:', int(round(difference\/1024\/1024)),'MB')\ndifference = 1095993944-difference\nprint('Difference:', int(round(difference\/1024\/1024)),'MB')","49e9b0fd":"print(auctions_df.shape)","baed51a5":"print(clicks_df.shape)","a2a266e4":"print(events_df.shape)","343a7a18":"print(installs_df.shape)","d3609f6a":"auctions_df.head(5)","33f4abb5":"clicks_df.head(5)","aa17cfc6":"events_df.head(5)","26db2c63":"installs_df.head(5)","df10be27":"auctions_df['hora'] = auctions_df['date'].apply(lambda x: ('%02d-%02d' % (x.hour, (x.hour+1))))\nauctions_df['dia'] = auctions_df['date'].apply(lambda x: x.day_name()+' '+str(x.day))\npivot_auctions = auctions_df.groupby(['dia','hora']).size().reset_index()\npivot_auctions.columns = ['dia','hora', 'count']\npivot_auctions = pivot_auctions.pivot_table(index='hora', columns='dia', values='count',aggfunc='sum', fill_value=0, dropna=False)\npivot_auctions = pivot_auctions[['Tuesday 5', 'Wednesday 6', 'Thursday 7', 'Friday 8', 'Saturday 9', 'Sunday 10', 'Monday 11', 'Tuesday 12', 'Wednesday 13']]\ndisplay(pivot_auctions)","0c6cd82d":"plt.figure(figsize = (40,5))\nplt.title('Auctions per hour')\nsns.heatmap(pivot_auctions.T, square = True, linewidth=1, cmap = 'Reds');\nplt.xticks(rotation = 0);\nplt.xlabel('Time');\nplt.ylabel('Day', rotation=0);","78a685b2":"auctions_df['platform'].value_counts()\/1000000","9ecbd62a":"plat1 = auctions_df.groupby(['platform','dia']).size().reset_index()\nplat1.columns = ['platform','dia', 'auctions']\npivot_plat1 = plat1.pivot_table(index='dia', columns='platform', values='auctions',aggfunc='sum', fill_value=0, dropna=False)\n\nfinalPlat = pd.DataFrame(index =['Tuesday 5', 'Wednesday 6', 'Thursday 7', 'Friday 8', 'Saturday 9', 'Sunday 10', 'Monday 11', 'Tuesday 12', 'Wednesday 13'], columns = [1,2])\ndef func(x,y,z):\n    finalPlat.loc['{}'.format(str(z))][x+1] =  pivot_plat1.loc['{}'.format(str(z))][x]\n    finalPlat.loc['{}'.format(z)][y+1] =  pivot_plat1.loc['{}'.format(z)][y]\nfunc(0,1,'Tuesday 5')\nfunc(0,1,'Wednesday 6')\nfunc(0,1,'Thursday 7')\nfunc(0,1,'Friday 8')\nfunc(0,1,'Saturday 9')\nfunc(0,1,'Sunday 10')\nfunc(0,1,'Monday 11')\nfunc(0,1,'Tuesday 12')\nfunc(0,1,'Wednesday 13')","a1cb175e":"finalPlat.plot(kind = 'barh', figsize = (8,6), grid = True);\n# Add some text for labels, title and custom x-axis tick labels, etc.\nplt.xlabel('Auctions');\nplt.title('Platform 1 vs Platform 2');\nplt.ylabel('Days');","17debdb8":"#release ram\nauctions_df.drop(labels=['dia','hora'], inplace=True, axis='columns')\ndel pivot_auctions\ngc.collect()","56bb8839":"plt.figure(figsize = (5,10));\nax = sns.regplot(x=clicks_df[[\"touchX\",\"touchY\"]].dropna()[\"touchX\"], \\\n                 y=-clicks_df[[\"touchX\",\"touchY\"]].dropna()[\"touchY\"], marker='.',fit_reg=False);\nax.set_title('Touch on mobile');\nax.set_xlabel('X position for the click');\nax.set_ylabel('Y position for the click');","f60e58dd":"plt.figure(figsize = (5,10));\nax = sns.regplot(x=clicks_df.loc[clicks_df['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchX\"]*100, \\\n                 y=-clicks_df.loc[clicks_df['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchY\"]*100, \\\n                 marker='.',fit_reg=False);\nax.set_title('Touch on mobile');\nax.set_xlabel('Position X on the display in percentage');\nax.set_ylabel('Position Y on the display in percentage');","b0e78d1b":"sns.jointplot(x=clicks_df.loc[clicks_df['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchX\"],\n              y=-clicks_df.loc[clicks_df['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchY\"], \\\n              kind=\"hex\",color='#110088', height=10) \\\n.set_axis_labels('Position X on the display in percentage', 'Position Y on the display in percentage');","a713b848":"events_df['date'] = pd.to_datetime(events_df['date'])\nevents_df['hora'] = events_df['date'].apply(lambda x: ('%02d-%02d' % (x.hour, (x.hour+1))))\nevents_df['dia'] = events_df['date'].apply(lambda x: x.day_name()+' '+str(x.day))\npivot_events = events_df.groupby(['dia','hora']).size().reset_index()\npivot_events.columns = ['dia','hora', 'count']\npivot_events = pivot_events.pivot_table(index='hora', columns='dia', values='count',aggfunc='sum', fill_value=0, dropna=False)\npivot_events = pivot_events[['Tuesday 5', 'Wednesday 6', 'Thursday 7', 'Friday 8', 'Saturday 9', 'Sunday 10', 'Monday 11', 'Tuesday 12', 'Wednesday 13']]\n","4b61cbd5":"plt.figure(figsize = (40,5))\nplt.title('Auctions per hour')\nsns.heatmap(pivot_events.T, square = True, linewidth=1, cmap = 'Blues');\nplt.xticks(rotation = 0);\nplt.xlabel('Time');\nplt.ylabel('Day', rotation=0);","c5918250":"#release ram\nevents_df.drop(labels=['dia','hora'], inplace=True, axis='columns')\ndel pivot_events\ngc.collect()","045a5e70":"auct_click = pd.merge(auctions_df[['device_id']], clicks_df[['ref_hash', 'touchX', 'touchY']], how='inner', left_on='device_id', right_on='ref_hash')","6c3a6317":"click_event = pd.merge(auct_click, events_df[['ref_hash']], how='inner', on='ref_hash')","2710595c":"sns.jointplot(x=click_event.loc[(click_event['touchY']<=1), [\"touchX\",\"touchY\"]].dropna()[\"touchX\"]*100, \\\n              y=-click_event.loc[(click_event['touchY']<=1), [\"touchX\",\"touchY\"]].dropna()[\"touchY\"]*100, \\\n              color='#110088', height=7) \\\n.set_axis_labels('Position X on the display in percentage', 'Position Y on the display in percentage');","17db0ae0":"sns.jointplot(x=click_event.loc[click_event['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchX\"]*100,\n              y=-click_event.loc[click_event['touchY']<=1,[\"touchX\",\"touchY\"]].dropna()[\"touchY\"]*100, \\\n              kind=\"hex\",color='#110088', height=7) \\\n.set_axis_labels('Position X on the display in percentage', 'Position Y on the display in percentage');","d0b0c494":"#release ram\ndel click_event\ngc.collect()","fdbc4fbc":"installs_df['hora'] = installs_df['created'].apply(lambda x: ('%02d-%02d' % (x.hour, (x.hour+1))))\ninstalls_df['dia'] = installs_df['created'].apply(lambda x: x.day_name()+' '+str(x.day))\npivot_installs = installs_df.groupby(['dia','hora']).size().reset_index()\npivot_installs.columns = ['dia','hora', 'count']\npivot_installs = pivot_installs.pivot_table(index='hora', columns='dia', values='count',aggfunc='sum', fill_value=0, dropna=False)\npivot_installs = pivot_installs[['Tuesday 5', 'Wednesday 6', 'Thursday 7', 'Friday 8', 'Saturday 9', 'Sunday 10', 'Monday 11', 'Tuesday 12', 'Wednesday 13']]","28e7236f":"plt.figure(figsize = (40,5));\nplt.title('Installs per hour');\nsns.heatmap(pivot_installs.T, square = True, linewidth=1, cmap = 'Greens');\nplt.xticks(rotation = 0);\nplt.xlabel('Time');\nplt.ylabel('Day', rotation=0);","1a376c9a":"#release ram\ninstalls_df.drop(labels=['dia', 'hora'], axis='columns', inplace=True)\ndel pivot_installs\ngc.collect()","d981590c":"installs_df['application_id'].value_counts().sort_values(ascending = False).head(4).plot(kind = 'bar', grid = True, figsize = (5,7), color=['yellow', 'red', 'green', 'black'])\nplt.xticks(rotation = 0);\nplt.title('Top 4 installed Apps');\nplt.xlabel('App ID');\nyticks = range(0,1000,100);\nplt.yticks(yticks);\nplt.ylabel('Installs');","ddb3b2f7":"(sum(installs_df['wifi'].isnull()) \/ len(installs_df['wifi'])) * 100","0103de60":"#DE TODOS LOS INSTALLS QUE PROPORCI\u00d3N UTILIZ\u00d3 WIFI ?\nwifiSs = installs_df['wifi']\nwifiSs.dropna(inplace = True)\n(sum(wifiSs == True)) \/ (len(wifiSs))","3a244c32":"#Porcentaje de no atribuciones a Jammp\nprint(sum(installs_df['attributed'] == False) \/ (len(installs_df['attributed']))*100)","6bc727e1":"installs_df.reset_index(inplace=True)","c578a9f9":"installs_df.loc[installs_df['wifi']==True]['application_id'].value_counts().head(4).sort_values(ascending = True)\\\n.plot(kind = 'barh',  color=['purple', 'black', 'green', 'red'], grid = True);\nplt.title('Top 4 Apps installed with wifi');\nplt.xlabel('Installs');\nplt.ylabel('App ID');","bc846fd9":"#SESGO POR NULOS\nsum(events_df['wifi'].isnull()) \/ len(events_df['wifi']) *100","aca6eab2":"#Mismo para events\n#DE TODOS LOS EVENTS QUE PROPORCI\u00d3N UTILIZ\u00d3 WIFI ?\n#SUMO LOS PROMEDIOS\n#events_wifiSs = eventsDF['wifi']\nevents_with_wifi = (sum(events_df['wifi'] == True)) \/ (len(events_df['wifi'].dropna()))\nevents_with_wifi*100","4b1c0e44":"#Porcentaje de atribuciones a Jammp en eventos\nevents_df['attributed'].value_counts()\n(sum(events_df['attributed'] == True) ) \/ (len(events_df['attributed'].dropna())) *100","dce0e9b2":"#Que probabilidad hay de que se genere un evento favorable a Jammp sabiendo que la persona estaba conectada a la red WIFI\nEJ = (sum(events_df['attributed'] == True) )\/ (len(events_df['attributed'].dropna())) \nevents_with_wifi\nnoEJ = (sum(events_df['attributed'] == False) )\/ (len(events_df['attributed'].dropna()))\n#Teorema de bayes\n'El porcentaje de eventos atribu\u00eddos a Jammp sabiendo que la persona estaba conectada a la red Wi-Fi es {}'\\\n.format( (EJ*events_with_wifi)*100 \/ ( (EJ*events_with_wifi) + (noEJ*events_with_wifi)))","cfe8e704":"click_install = pd.merge(auct_click, installs_df[['ref_hash']], how='inner', on='ref_hash')","a2b74021":"sns.jointplot(x=click_install.loc[(click_install['touchY']<=1), [\"touchX\",\"touchY\"]].dropna()[\"touchX\"]*100, \\\n              y=-click_install.loc[(click_install['touchY']<=1), [\"touchX\",\"touchY\"]].dropna()[\"touchY\"]*100,\\\n              color='#110088', height=7) \\\n.set_axis_labels('Position on the display in percentage', 'Position on the display in percentage');","5d7e6702":"#release ram\ndel auct_click\ndel click_install\ngc.collect()","74d069a4":"plt.figure(figsize = (7,5));\ndevice_freq = events_df['ref_hash'].value_counts().to_frame().reset_index().reset_index()\ndevice_freq.columns = ['x', 'ref_hash', 'count']\n\nax = sns.regplot(x=device_freq['x'], y=device_freq['count'], fit_reg=False);\nax.set_xlabel('Quantity of devices');\nax.set_ylabel('Events per device');\nax.set_title('Distribution of events per device');","7244657d":"ax = device_freq.plot(x='x',y='count',loglog=True, legend=False);\nax.set_xlabel('Log scale of: Quantity of Devices');\nax.set_ylabel('log scale of: Quantyty of Events');\nax.set_title('Distribution of events per device');","771b0c39":"# vamos a graficar la cantidad de installs que se tienen por device\ndevice_freq2 = installs_df.reset_index()['ref_hash'].value_counts()\\\n.to_frame().reset_index().reset_index()\ndevice_freq2.columns = ['x', 'ref_hash', 'count']\n\nax = sns.regplot(x=device_freq2['x'], y=device_freq2['count'], fit_reg=False);\nax.set_xlabel('Quantity of devices');\nax.set_ylabel('Quantity of Installs');\nax.set_title('Distribution of installs per device');","5c0b860d":"#tiempo desde el auction hasta el install menor a 3 dias\ntiempo_install = pd.merge(auctions_df[['device_id','date']], installs_df[['ref_hash','created']], how='inner', left_on='device_id', right_on='ref_hash')\ntiempo_install = tiempo_install[['device_id', 'created', 'date']]\ntiempo_install['tiempo_convert'] = tiempo_install['created']-tiempo_install['date']\ntiempo_install = tiempo_install.loc[(tiempo_install['tiempo_convert']>'0 days') & (tiempo_install['tiempo_convert']<'3 days')]","c5739e83":"#tiempo desde el auction hasta el event menor a 3 dias\ntiempo_event = pd.merge(auctions_df[['device_id', 'date']], events_df[['ref_hash', 'date']], how='inner', left_on='device_id', right_on='ref_hash')\ntiempo_event['tiempo_convert'] = tiempo_event['date_x']-tiempo_event['date_y']\ntiempo_event = tiempo_event.loc[(tiempo_event['tiempo_convert']>'0 days') & (tiempo_event['tiempo_convert']<'3 days')]","0affe85a":"#cuanto se tadr\u00f3 en convertir\ntiempo_convert = tiempo_event[['device_id','tiempo_convert']].append(tiempo_install[['device_id','tiempo_convert']])\ntiempo_convert['tiempo_convert_int'] = tiempo_convert['tiempo_convert'].astype(np.int64)\ntimpo_promedio_final = tiempo_convert.groupby('device_id').agg({'tiempo_convert_int':'mean'})\n\n#delete when no longer needed\ndel tiempo_convert\ndel tiempo_event\ndel tiempo_install\n#collect residual garbage\ngc.collect()\n\ntimpo_promedio_final['tiempo_convert'] = pd.to_timedelta(timpo_promedio_final['tiempo_convert_int'])\ntimpo_promedio_final['tiempo_convert_int'] = timpo_promedio_final['tiempo_convert_int']\/(1000000000*60*60) #time in hours\ndisplay(timpo_promedio_final.sort_values(by='tiempo_convert_int').head(5))\ndisplay(timpo_promedio_final.sort_values(by='tiempo_convert_int',ascending=False).head(5))","202106a1":"timpo_promedio_final['tiempo_convert'].describe()","190cda6e":"ax = sns.distplot(timpo_promedio_final['tiempo_convert_int'], bins=24);\nax.set_xlabel('Timpo en horas');\nax.set_ylabel('Frecuencia');\nax.set_title('Tiempo promedio de conversion por device');","c11bccb2":"## Cu\u00e1nto tiempo promedio entre publicidades por device id\n#def time_between(x):\n#    # diferencia entre elementos de la lista\n#    device_dates = x.dropna().sort_values().tolist();\n#    if len(device_dates)<2:\n#        return np.nan\n#    diff = [j-i for i, j in zip(device_dates[:-1], device_dates[1:])]\n#    return np.sum(diff)\/len(diff)\n#auctionsDF[['device_id', 'date']].head(2).T\n#tiempo_entre = auctionsDF.groupby('device_id').agg({'date': time_between})\n#tiempo_entre['date_int'] = tiempo_entre['date'].astype(np.int64)\/(1000000000*60) #tiempo en minutos\n#display(tiempo_entre.head(5))","b89cee8e":"# para no ejecutar el anterior script, el resulta lo guardamos preciamente en un csv\ntiempo_entre = pd.read_csv('..\/input\/tiempo_entre.csv', index_col='device_id')\ntiempo_entre.dropna(inplace=True)\ntiempo_entre['date'] = pd.to_timedelta(tiempo_entre['date'])\ntiempo_entre['date_int'] = tiempo_entre['date'].astype(np.int64)\/(1000000000*60) #tiempo en minutos","bef83e27":"tiempo_entre['date'].describe()","5591fa60":"plt.figure(figsize = (7,5))\nax = tiempo_entre['date_int'].plot.hist(bins=30)\nax.set_xlabel('Tiempo en minutos');\nax.set_ylabel('Frecuencia');\nax.set_title('Histograma de tiempo promedio de auctions por device');","88ead749":"#investigando al User con device ID 4153352203585747855 que cuenta con 158 eventos\nuser1DF=events_df.loc[events_df['ref_hash']==4153352203585747855]","2fe10958":"user1_dayDF = user1DF.loc[user1DF['attributed']==True].groupby(['event_id','application_id','attributed','ip_address','date']).size().reset_index().rename(columns={0:'total'})","38d01f24":"#visualizamos en el tiempo\n# Distribucion\/cantidad de eventos \nsns.set(rc={'figure.figsize':(12,9)})\n#primero para el DF de eventos total\nsns.distplot(user1_dayDF['date'], bins=20, color='blue', kde=False)\n#ahora para el DF de eventos atribuidos a jampp\n#sns.distplot( events_jamppDF['event_id'], bins=100, color='blue', label='Eventos de Jampp')\n#plt.legend(prop={'size': 12})\nplt.title('All Events distribution - more frequent ones', fontsize=16)\nplt.xlabel('Event_ID', fontsize=13)\nplt.ylabel('Frequency', fontsize=13)\n#sns.plt.show()\n","b6cf82a6":"#events per user solo de jampp\nevents_x_userDF = events_df.loc[events_df['attributed']==True].groupby(['ref_hash']).size().reset_index().rename(columns={0:'total'})","ceff08f9":"#Visualizaci\u00f3n lollipop de eventos por usuario\nplt.title('Events per User', fontsize=18);\nplt.xlabel('User', fontsize=14);\nplt.ylabel('Number of Events', fontsize=14);\n(markerline, stemlines, baseline) = plt.stem(events_x_userDF['ref_hash'], events_x_userDF['total'])\n# change color and shape and size and edges\nplt.setp(markerline, marker='D', markersize=5, markeredgecolor=\"orange\", markeredgewidth=2);\nplt.setp(stemlines, alpha=0.6 );\nplt.setp(baseline, visible=False);\n#plt.show()","44aaaec4":"# get the top value\nevents_x_userDF.loc[events_x_userDF['total'].idxmax()]","43d2d687":"# Excluyendo esos 3 valores, volvemos a analizar la distribuci\u00f3n\nevents_withoutDF = events_df.loc[~events_df['ref_hash'].isin([4153352203585747855,5811896797087419802,7486989802522901338])]","6f78c9ec":"# Recalculamos el DF sin esos valores\nevents_x_userDF = events_withoutDF.loc[events_withoutDF['attributed']==True].groupby(['ref_hash']).size().reset_index().rename(columns={0:'total'})\nevents_x_userDF.shape","ceac4cc9":"#lollipop plot de events x user (Jampp)\nplt.title('Events per User', fontsize=18);\nplt.xlabel('User', fontsize=14);\nplt.ylabel('Number of Events', fontsize=14);\n(markerline, stemlines, baseline) = plt.stem(events_x_userDF['ref_hash'], events_x_userDF['total'])\n# change color and shape and size and edges\nplt.setp(markerline, marker='D', markersize=5, markeredgecolor=\"orange\", markeredgewidth=2);\nplt.setp(stemlines, alpha=0.6);\nplt.setp(baseline, visible=False);","85ed659e":"#Datos estad\u00edsticos de la distribuci\u00f3n\nevents_x_userDF.describe()","e05ef98f":"#Cual es la correlaci\u00f3n entre users and events?\n#SCATTER plot\n\n#DENSITY HEXBIN CHART\nsns.jointplot(x=events_x_userDF['ref_hash'], y=events_x_userDF['total'], kind='hex', height=8, color=\"skyblue\").set_axis_labels('Users','Events');","e04d0f86":"events_appDF = events_df.loc[events_df['attributed']==True].groupby(['application_id']).size().reset_index().rename(columns={0:'total'})","00ac6c1b":"#lollipop plot de events x app (Jampp)\nplt.title('Events per Application', fontsize=18);\nplt.xlabel('Application_id', fontsize=14);\nplt.ylabel('Number of Events', fontsize=14);\n(markerline, stemlines, baseline) = plt.stem(events_appDF['application_id'], events_appDF['total'])\n# change color and shape and size and edges\nplt.setp(markerline, marker='D', markersize=10, markeredgecolor=\"yellow\", markeredgewidth=2);\nplt.setp(stemlines, alpha=0.6);\nplt.setp(baseline, visible=False);","4eabf9a1":"#se observan 2 valores que se alejan mucho de la media\nevents_appDF.describe()","84c2743d":"#DENSITY CHART\nsns.jointplot(x=events_appDF['application_id'], y=events_appDF['total'], kind='hex', height=8, color='blue')\\\n.set_axis_labels('Applications','Events');","5dd6dbcb":"#Installs, events y clicks por usario\ninstalls_x_userDF = installs_df.groupby(['ref_hash']).size().reset_index().rename(columns={0:'total'})\nclicks_x_userDF = clicks_df.groupby(['ref_hash']).size().reset_index().rename(columns={0:'total'})\n#al haber eventos atribuidos de Jampp, nos interesa tomar esos y no el total para este caso\nevents_x_userDF = events_df.loc[events_df['attributed']==True].groupby(['ref_hash']).size().reset_index().rename(columns={0:'total'})","7ce30311":"venn2([set(installs_x_userDF['ref_hash']), set(clicks_x_userDF['ref_hash'])], set_labels=('Installs', 'Clicks'))\nplt.show()","9a99be0e":"venn2([set(events_x_userDF['ref_hash']), set (clicks_x_userDF['ref_hash'])], set_labels=('Events', 'Clicks'))\nplt.show()","a046aa44":"#Para poder observar si hay alguna conducta o relaci\u00f3n interesante entre los clientes y las aplicaciones, hacemos un merge de ambos DFs: Clicks y Events\nclicks_eventsDF = pd.merge(events_df, clicks_df, on='ref_hash', how='inner')\nclicks_eventsDF.shape","b5b4b139":"#HAcemos la visualiaci\u00f3n para identificar los clientes con m\u00e1s exito de conversiones\nclicks_eventsDF['advertiser_id'].value_counts().sort_values(ascending = False).plot(kind = 'bar', grid = True, figsize = (9,12), color=['purple', 'orange']);\nplt.xticks(rotation = 0);\nplt.title('Most successful clients', fontsize=18);\nplt.xlabel('Advertiser_ID', fontsize=14);\n#plt.yticks(yticks)\nplt.ylabel('Frequency', fontsize=14);","fe56d2c7":"clicks_eventsDF['advertiser_id'].value_counts().sort_values(ascending = False)","59de3a14":"# DF de relaci\u00f3n events and clicks para clientes de Jampp\nevents_x_clientjDF = clicks_eventsDF.loc[clicks_eventsDF['attributed']==True].groupby(['advertiser_id','application_id']).size().reset_index().rename(columns={0:'total'})","b5b92eb1":"#Bubble pot para observar la relaci\u00f3n entre events, clients and applications\nx = events_x_clientjDF['advertiser_id']\ny = events_x_clientjDF['application_id']\nz = events_x_clientjDF['total']\nplt.figure(figsize = (10,10));\n# use the scatter function\nplt.scatter(x, y, s=z*20, c=\"red\", alpha=0.5);\n# Add titles (main and on axis)\nplt.xlabel('Client - advertiser_id', fontsize=14);\nplt.ylabel('Application - application_id', fontsize=14);\nplt.title('Correlation between Events, Clients and Applications', fontsize=18);\nplt.show()","26bd33dc":"#Eventos para el cliente 3 y las dos aplicaciones donde se mostr\u00f3 su publicidad\nevents_x_clientjDF.loc[events_x_clientjDF['advertiser_id']==3]","57f6feb0":"#Eventos para el cliente 0 y las dos aplicaciones donde se mostr\u00f3 su publicidad\nevents_x_clientjDF.loc[events_x_clientjDF['advertiser_id']==0]","66d86b38":"clicks_installsDF = pd.merge(installs_df[['ref_hash','application_id']], clicks_df[['ref_hash','advertiser_id']], on='ref_hash', how='inner')","e22c914e":"# DF de relaci\u00f3n installs and clicks para clientes \ninstalls_x_clientDF = clicks_installsDF.groupby(['advertiser_id','application_id']).size().reset_index().rename(columns={0:'total'})\n#Bubble pot para observar la relaci\u00f3n entre installs, clients and applications. Al no haber atribuidas a jampp, se toma la muestra total\nx = installs_x_clientDF['advertiser_id']\ny = installs_x_clientDF['application_id']\nz = installs_x_clientDF['total']\nplt.figure(figsize = (10,10));\n# use the scatter function\nplt.scatter(x, y, s=z*70, c='purple', alpha=0.8);\n# Add titles (main and on axis)\nplt.xlabel('Client - advertiser_id', fontsize=14);\nplt.ylabel('Application - application_id', fontsize=14);\nplt.title('Correlation between Installs, Clients and Applications', fontsize=18);\nplt.show()","ee9ff4e1":"**Conclusi\u00f3n 1: Los tres clientes de la muestra con mayor n\u00famero de conversiones de retargetting, son el Cliente 3, Cliente 0 y Cliente 8, con los siguientes totales. N\u00f3tese la gran diferencia entre el Cliente 3 y los otros, observemos los totales para cada cliente a continuaci\u00f3n.**","6692f1a9":"Columnas: ['auction_type_id', 'country', 'date', 'device_id', 'platform', 'ref_type_id', 'source_id']","f1a45238":"**Conclusi\u00f3n: los horarios en los que se hallaron m\u00e1s installs siguen un comportamiento similar al de los events, la mayor cantidad sigue produci\u00e9ndose entre las 17 horas y las 2 de la ma\u00f1ana.**","328f2095":"Tendremos 49.33% valores nulos no considerados, al ser de tipo True or False, no podemos completar los valores sin afectar el resultado final.","d554af76":"Ahora, visualizamos tambi\u00e9n la distribuci\u00f3n de eventos atribuidos a Jampp para corroborar que corresponden a una distribuci\u00f3n similar a la general.","9829acac":"**Conclusi\u00f3n: Podemos observar que la mayor\u00eda de los usuarios tienen un s\u00f3lo evento, a ra\u00edz de la intensidad de color de los puntos hexagonales en la parte inferior del eje Y, casi pegados al eje X.**\n\nA su vez, la mayor cantidad de eventos convertidos a favor de Jampp, son realizados por unos pocos usuarios.\n\nDe esto podemos inferir que la probabilidad de que los usuarios con mayor cantidad de eventos sigan convirtiendo, es bastante elevada. Son una especie de \u201cclientes frecuentes\u201d para determinados eventos. \n\nEs necesario considerar tambi\u00e9n la vertical del negocio (cliente de Jampp)  al que pertenece el evento, ya que un juego, una orden de delivery de comida, tienen m\u00e1s chance de repetirse en un corto periodo de tiempo, que por ejemplo, la compra de un pasaje a\u00e9reo.\n\n### 15. Eventos por aplicaci\u00f3n.\n\nContinuamos el an\u00e1lisis de los eventos, seg\u00fan la aplicaci\u00f3n en la que fueron convertidos.","21471cb5":"Y nuevamente visualizamos:","bb8df8b9":"**Conclusi\u00f3n 2: Aqu\u00ed vemos que  o no cumple la ley de Zifp o no tenemos suficientes datos como en events**\n\n### 12. \u00bfCu\u00e1les fueron los tiempos de conversi\u00f3n ?\n\nEl tiempo de conversi\u00f3n se lo calcula:","aaaaba33":"**Conclusi\u00f3n: unos pocos eventos tienen la mayor frecuencia de ocurrencia, y la mayor\u00eda por el contrario, tiene una m\u00ednima ocurrencia. **\n\n### 14. Eventos por usuario.\n\nPara poder identificar si hay alg\u00fan \u201coutlier\u201d o dato an\u00f3malo en la muestra, visualizamos la cantidad de eventos por usuario con un histograma lollipop para resaltar los datos que se alejen m\u00e1s de la media.","a501736b":"### Clicks\nBefore dtypes: 4 MB","5636647d":"Se ve una distribuci\u00f3n en `L` casi perfecta y acomodando el gr\u00e1fico a una escala log-log tenemos:","f804aa61":"### 6. \u00bfCu\u00e1les fueron las 4 aplicaciones m\u00e1s instaladas?","cdb5e2c9":"**Conclusi\u00f3n 2: 0% installs atribu\u00eddos a Jammp durante la franja temporal del set de datos.**\n\n### 8. \u00bfCu\u00e1les fueron las Apps m\u00e1s instaladas con wifi?","3507b8e3":"De manera similar con los dos siguientes valores a este.\n\nRecalculamos el dataframe extrayendo esos valores por medio del siguiente c\u00f3digo:","d9d1b704":"### 11. \u00bfCu\u00e1les fueron las distribuciones de los eventos de la muestra ?\u00bfY de los installs?\n\nGraficando la cantidad de events por device tenemos lo siguiente","22c6a73e":"Graficando el Data Frame obtenido tenemos:","004466b0":"# An\u00e1lisis exploratorio\n\n## Observaciones iniciales\n\nLos datos delimitan una franja temporal comprendida entre el 05\/03\/2019 a las 00:00 hs y el 13\/03\/2019, hasta las 23:59 hs inclusive.\nEn la data en crudo podemos observar la siguiente cantidad de filas y columnas (sin haber eliminado las columnas mencionadas en las consideraciones generales):\n","6a4d4793":"Dando como resultado un DataFrame donde el index ser\u00e1 la franja horaria y las columnas los d\u00edas, y llev\u00e1ndolo a un heatmap nos dar\u00e1 como resultado:","429bf154":"## Load data with datatypes result: \n### Events\nBefore datatypes: 402 MB","ba0503c7":"Revisamos la informaci\u00f3n estad\u00edstica antes y despu\u00e9s (ver tablas a continuaci\u00f3n), como es esperado, la dispersi\u00f3n de los datos es reducida, sin embargo a\u00fan se puede observar una gran distancia entre la media, el m\u00ednimo y m\u00e1ximo:","60904a4e":"**Conclusi\u00f3n 1: El 79.64% de las instalaciones fueron a trav\u00e9s de una red wifi.**","aca551cc":"**Conclusi\u00f3n: La aplicaci\u00f3n m\u00e1s instalada fue la App ID, seguida por la App ID 9 en segundo lugar. Es recomendable generar impresiones para estas apps, ya que es m\u00e1s factible que sean instaladas.**\n\n### 7. \u00bfEstar conectado a internet v\u00eda wifi tuvo peso a la hora de definir si el consumidor instal\u00f3 ?","3cc911be":"### Relaci\u00f3n entre los clientes, las aplicaciones y las instalaciones generadas \n\nSi bien la muestra no contiene ninguna conversi\u00f3n para Jampp dentro de las instalaciones, un an\u00e1lisis similar al previo puede indicarnos en general, con qu\u00e9 aplicaci\u00f3n tienen m\u00e1s \u00e9xito.","3e20057e":"Para mejorar la visualizaci\u00f3n y evitar el \u201coverplotting\u201d, realizamos una por densidad 2D.","1c70aa11":"Llevando el DataFrame resultante a un gr\u00e1fico, donde podremos observar la implicancia que tiene cada plataforma sobre las subastas de los d\u00edas delimitados por el set de datos.","1711f442":"**Conclusi\u00f3n 1: Se puede ver que el gr\u00e1fico presenta una pendiente negativa por lo cual los events muestran una distribuci\u00f3n de Zipf **\n\nLa ley de Zipf que determina la frecuencia de las palabras en los textos en ingl\u00e9s, plantea que la palabra m\u00e1s com\u00fan, \u201cthe\u201d, aparece el doble de veces que la segunda, \u201cof\u201d, el triple que la tercera, el cu\u00e1druple que la cuarta y as\u00ed. \n\nPudimos observar que este fen\u00f3meno se da tambi\u00e9n en la distribuci\u00f3n de los eventos generados. Es decir, el evento m\u00e1s generado, tiene el doble de ocurrencias que el segundo m\u00e1s generado, el triple que el tercero, etc. Por lo que unos pocos eventos acaparan la mayor cantidad de conversiones. \n\nEl determinar qu\u00e9 tipo de eventos tienen mayor cantidad de conversiones, es de gran utilidad para Jampp, ya que puede influir en la frecuencia con que presente publicidad para esos eventos, y definiendo una menor para los eventos m\u00e1s bajos de la distribuci\u00f3n. Esto es posible que est\u00e9 relacionado con la vertical del cliente al que pertenezca el evento.\n\nAl hacer el mismo c\u00e1lculo para el dataframe de installs tenemos lo siguiente: ","87a00077":"**Conclusi\u00f3n 1: Podemos afirmar que la franja horaria donde m\u00e1s subastas se llevan a cabo es entre las 20 hs y las 3 de la ma\u00f1ana del d\u00eda siguiente, y entre las 4 de la ma\u00f1ana y las 12 del mediod\u00eda cuando menos hay. Esto nos ayudar\u00e1 a comprender mejor el mercado. **\n\nLuego de visualizar y analizar los valores del gr\u00e1fico, surje un nuevo interrogante: \n\n#### a. \u00bfQu\u00e9 sucedi\u00f3 los d\u00edas martes 5, mi\u00e9rcoles 6 y s\u00e1bado 9 de marzo ? Tenemos valores que no siguen la l\u00f3gica del resto del gr\u00e1fico (a saber entre las 13hs y las 01 hs del d\u00eda siguiente).\n\nLas subastas se llevan a cabo sobre dos plataformas, platform 1 y platform 2, sea Android o iOS. Al enfocarnos en dicha inquietud, notamos que en la recopilaci\u00f3n de datos de esos d\u00edas, la cantidad de entradas de platform 1 era inusual con respecto al resto de los d\u00edas. \n\nLa probabilidad de que una subasta sea sobre platform 1 es de 0.794, casi el 80%, por lo que su peso en la cantidad de auctions es vital, y este resultado est\u00e1 teniendo en cuenta los valores que asumimos faltantes.\n","75ebee79":"Columnas: ['advertiser_id', 'action_id', 'source_id', 'created', 'country_code', 'latitude', \u2018'longitude', 'wifi_connection', 'carrier_id', 'os_minor', 'agent_device', 'os_major', 'specs_brand', 'brand', 'timeToClick', 'touchX', 'touchY', 'ref_type', 'ref_hash']","15a131a2":"De manera similar para los eventos, pero considerando solamente los atribuidos a Jampp","0fb4f30a":"**Conclusi\u00f3n: Observamos una bajisima proporci\u00f3n entre ambos grupos, siendo Clicks aproximadamente cuatro veces m\u00e1s grande que los Eventos que llegan a convertirse. Sin embargo, de estos mismo no sabemos cu\u00e1ntos clicks corresponden especificamente a los eventos registrados ya que la muestra de Clicks implica tanto las isntalaciones, los eventos, as\u00ed como las no conversiones.**\n\n### 17. \u00bfExistir\u00e1 una relaci\u00f3n entre los clientes y las aplicaciones ?\n\nAnte la pregunta que nos surgi\u00f3 en cuanto al impacto de la aplicaci\u00f3n en la que se presenta la publicidad frente al cliente, ya sea por la vertical del negocio a la que pertenezca por ejemplo, realizamos el siguiente an\u00e1lisis.\n\nPrimero, hacemos un join entre los dataframes clicks y events para poder visualizar esta relaci\u00f3n.","594657aa":"Ahora es necesario profundizar un poco m\u00e1s en este an\u00e1lisis para los clientes puntuales de Jampp.\n\n### Relaci\u00f3n entre los clientes de Jampp, las aplicaciones y los eventos generados \n\nLa correlaci\u00f3n entre el cliente y la aplicaci\u00f3n en la que se muestra su publicidad al usuario, puede proporcionar informaci\u00f3n valiosa en cuanto a la b\u00fasqueda de patrones. Es decir, si el cliente A genera mayor cantidad de eventos en la aplicaci\u00f3n X que en Y, ante un nuevo cliente B que pertenezca a la misma vertical que A, es probable que ocurra lo mismo.\n\nEl c\u00f3digo a continuaci\u00f3n conecta tanto el dataframe de clicks que contiene el c\u00f3digo de cliente (advertiser_id) con el de events que presenta el c\u00f3digo de la aplicaci\u00f3n (application_id) para posteriormente hacer la visualizaci\u00f3n.\n","0d49ec04":"De manera similar que con los eventos por usuario, se observa unos pocos con mayor cantidad de conversiones, y la gran mayor\u00eda con conversiones m\u00ednimas o 1 sola. Sin embargo, al tratarse de eventos tiene sentido que este escenario se presente, por lo que no vamos a quitar esos datos de la muestra.","381d66dd":"Columnas: ['date', 'event_id', 'ref_type', 'ref_hash','application_id', 'attributed', 'device_countrycode', 'device_os_version','device_brand','device_model', \u2018device_city', 'session_user_agent', 'trans_id', 'user_agent', 'event_uuid', 'carrier', 'kind', 'device_os', 'wifi', 'connection_type', 'ip_address', 'device_language']","0af16c7e":"**Conclusi\u00f3n: Podemos observar como el d\u00eda con mayor generaci\u00f3n de eventos fue el viernes, y las franjas horarias a lo largo de la semana con mayor cantidad de eventos est\u00e1n entre las 22 hrs y las 02 hrs. Encontr\u00e1ndose el pico de 23 a 01 hrs. Podemos suponer que en estos horarios los usuarios ya se encuentran en la comodidad de su hogar (con conexi\u00f3n wifi, tema que trataremos m\u00e1s adelante). **\n\nDe manera singular, tambi\u00e9n encontramos un pico el mi\u00e9rcoles 13 entre 10 y 13 hrs, con punto m\u00e1ximo entre las 11 y 12 hrs, Llama la atenci\u00f3n que ese suele ser un horario en general no tan frecuente, pero por la hora podr\u00eda tratarse de eventos tipo delivery de comida (para el almuerzo), o q fueron generados al estar el usuario con el celular durante su break del almuerzo. \n\nA su vez, en general de 4 a 10 horas, la frecuencia de conversiones de eventos baja considerablemente a poco m\u00e1s de 1\/5 de la mayor frecuencia observada.\n\nDicho heatmap se encuentra en sinton\u00eda con el heatmap anterior de la cantidad de subastas, tiene sentido que haya m\u00e1s subastas en los horarios donde se generan m\u00e1s eventos.\n\n### 4. \u00bfCu\u00e1les clicks generaron conversiones en events?\n\nLos clicks que generan conversiones en events se muestran en el siguiente gr\u00e1fico:\n","a3aca7df":"**Conclusi\u00f3n: La parte superior derecha es donde est\u00e1 la mayor concentraci\u00f3n. La experiencia personal nos indica que el bot\u00f3n de cerrar se encuentra generalmente en esa posici\u00f3n (no se lo puede ver alargado por la restricci\u00f3n de la funci\u00f3n jointplot).**\n\n### 3. \u00bfQu\u00e9 franja horaria contuvo la mayor cantidad de events?\n","47fbc78a":"Se puede ver que en la parte superior se encuentra la mayor parte de clics. Se observa como dos bandas, y que los datos van en el eje Y hasta 16. Tomando solo datos de 0 a 1 tanto en eje X como en el Y (0 a -1) tenemos lo siguiente:","a0d7c376":"### Auctions\nBefore dtypes: 1045 MB","8933d4a1":"**Conclusi\u00f3n: No es una sorpresa que nuevamente el Cliente 3 aparezca en el top 1 y en una proporci\u00f3n de conversiones similar a la observada en los eventos.**\n\n# Consideraciones finales: \n\nEl presente trabajo present\u00f3 un gran desaf\u00edo para nosotros como grupo de oyentes, donde nuestra formaci\u00f3n acad\u00e9mica no es homog\u00e9nea, y en nuestra opini\u00f3n abre el ab\u00e1nico de posibilidades para trabajar con el set de datos otorgado por la empresa Jammp. \n\nEl tener experiencia en otras \u00e1reas permite, en t\u00e9rminos de Edward de Bono, generar un pensamiento lateral, una forma creativa de organizar los procesos l\u00f3gicos no ortodoxos, para generar un nuevo resultado. \n\nCreemos que la oportunidad de cursar esta materia con personas no pertenecientes a nuestro rubro no solamente aportar\u00e1 valor a Jammp, sino que a nosotros mismos y a nuestra vida profesional.","30a9d441":"**Conclusi\u00f3n 3: 0.2044160112378694% atribu\u00eddo a Jammp sabiendo que estaba conectado a wifi, por el teorema de Bayes.**\n\nNo se redondearon los porcentajes para notar la diferencia entre los porcentajes.\n\n### 10. \u00bfCu\u00e1les clicks generaron conversiones en installs?\n\nLos clicks que generan conversiones en installs se muestran en el siguiente gr\u00e1fico:","10478d7a":"### 5. \u00bfEn qu\u00e9 franja horaria se produjo la mayor cantidad de instalaciones?\n\nSe utiliz\u00f3 la misma l\u00f3gica antes mencionada para su an\u00e1lisis.","2e57d606":"El gr\u00e1fico a continuaci\u00f3n muestra esta relaci\u00f3n entre ambas variables, antes mencionadas, el cliente y la aplicaci\u00f3n y la cantidad de eventos generados por la relaci\u00f3n de las mismas determina el tama\u00f1o de la burbuja.","d3961564":"Y seguidamente la visualizaci\u00f3n para ver los datos m\u00e1s claramente y hallar los clientes con mayor \u00e9xito en la conversi\u00f3n de eventos.","4f6a1eda":"**Conclusi\u00f3n: Podemos observar como la gran mayor\u00eda de los installs del App ID 9 fueron mediante conexi\u00f3n wifi, es decir, es recomendable participar de una subasta para realizar una impresi\u00f3n de esta app, si sabemos que el consumidor est\u00e1 conectado a una red wifi, por otro lado, la App ID 7 fue instalada mayormente cuando no se estaba conectado a wifi. **\n\nPuede deberse a que la aplicaci\u00f3n del App ID 9 sea pesado y se busque no utilizar datos m\u00f3viles para su instalaci\u00f3n.\n\n### 9. Si el tipo de conexi\u00f3n en installs tuvo gran importancia \u00bftendr\u00e1 un peso similar la conexi\u00f3n v\u00eda wifi en los eventos?","308aa2ae":"**Conclusi\u00f3n 2: 0.20441601123786943%  fue atribu\u00eddo a Jammp**","b0fbabe9":"**Conclusi\u00f3n 2: Existen anomal\u00edas en la toma de datos con respecto a las plataformas 1 y 2.**\n\n### 2. Una vez que la etapa de subasta termin\u00f3 y se realiz\u00f3 la impresi\u00f3n en el dispositivo, \u00bfd\u00f3nde nuestros consumidores realizaron clicks en la pantalla? \u00bfpor qu\u00e9 ah\u00ed? La concentraci\u00f3n de clicks en la pantalla al aparecer una publicidad tienen un por qu\u00e9, y es lo que intentaremos definir.\n\nLos datos de la pantalla en el DataFrame de clicks los presentan los atributos touchX y touchY, preguntando a developers de mobile de Android y iOS nos informaron que el eje de coordenadas (0,0) en mobile se encuentra en la parte superior izquierda, eso significa que respecto a una gr\u00e1fica en el eje de coordenadas (x,y) el eje Y se encuentra volcado horizontalmente y esa consideraci\u00f3n la tomaremos en cuenta al graficar. Adem\u00e1s, usaremos un tama\u00f1o alargado para mostrar como si fuera la pantalla de un dispositivo. ","5f60b18f":"En un gr\u00e1fico de concentraci\u00f3n de clics tenemos:","b63089ea":"En el gr\u00e1fico anterior no se necesita un gr\u00e1fico de concentraci\u00f3n ya que son pocas las conversiones en installs","613d7fba":"Para visualizarlo mejor, graficamos la cantidad de eventos en platform 1 o platform 2 seg\u00fan el d\u00eda.","064657b9":"El tiempo promedio de dispositivos reaparezca en la subasta se calcula de la siguiente manera: ","f41018b1":"**Conclusi\u00f3n 2: A su vez, para el cliente 0, tiene mejor resultado cuando su publicidad es mostrada en la aplicaci\u00f3n 102, que en la 56.**","35dc498b":"**Conclusi\u00f3n: Podemos observar claramente como la mayor\u00eda de las aplicaciones tienen una incidencia baja de cantidad de eventos que se produzcan por publicidad mostrada en las mismas.**\n\nDe hecho, de 33 aplicaciones observadas ac\u00e1, aprox el 50 % 17 llegan a un m\u00e1ximo de 7 eventos. Por otro lado, se observan 2 que se despegan del resto en m\u00e1s de 1000 y 2000 eventos generados.  \n\nEso ya nos da un indicio de el impacto del tipo de aplicacion, ya sea por popularidad o a que vertical pertenece, en la conversi\u00f3n de eventos.\n\n### 16. \u00bfSe intersectar\u00e1n los clicks e installs seg\u00fan el usuario? \u00bfExistir\u00e1 una proporci\u00f3n?\n\nPara una mirada general de los datos recibidos y el flujo de un usuario a trav\u00e9s de ellos, desde que recibe la publicidad (Clicks DF) y genera una conversi\u00f3n (Installs \/ Events DF), presentamos la siguiente visualizaci\u00f3n:","0be349be":"Una primera aproximaci\u00f3n para entender nuestro set de datos ser\u00e1 llamar a las primeras filas y sus columnas.","c1d9221a":"Columnas: ['created', 'application_id', 'ref_type', 'click_hash', 'attributed', 'implicit', 'device_countrycode', 'device_brand', 'device_model', 'user_agent', 'event_uuid', 'kind', 'wifi', 'trans_id', 'ip_address', 'device_language']\n\n## Interrogantes y procesamiento de datos\n\nUna vez entendido el set de datos, como equipo de trabajo llevamos adelante una sesi\u00f3n de brain-storming con la siguiente pauta: \u00bfqu\u00e9 informaci\u00f3n de valor podremos hallar? \u00bfqu\u00e9 aporte le podremos realizar a Jammp?. \n\nCon este criterio, seleccionamos los interrogantes que consideramos de inter\u00e9s en el an\u00e1lisis y que resolveremos a continuaci\u00f3n, aumentando la complejidad del mismo a medida que profundizamos en \u00e9l.\n\n### 1. \u00bfQu\u00e9 franja horaria contuvo la mayor cantidad de subastas?\n\nSin las subastas en las que se participa a la hora de realizar una impresi\u00f3n, no se podr\u00edan generar los datos sobre clicks, eventos o instalaciones. Es por eso que nuestro punto de partida ser\u00e1 conocer en qu\u00e9 franjas horarias tendremos m\u00e1s actividad, diviendo a los d\u00edas del set en 24 horas, contando la cantidad de subastas en esa franja horaria, y llev\u00e1ndolo a un tipo de gr\u00e1fico donde podremos visualizar la actividad de forma \u00f3ptima: un heatmap.\n","17e20adf":"44.72% de valores nulos no considerados, al ser de tipo True or False, no podemos completar los valores sin afectar el resultado final.","b5adbab5":"Para ver una concentraci\u00f3n de los clics tenemos el siguiente c\u00f3digo:","faaaea6b":"Las estadisticas del tiempo","e859ca89":"**Conclusi\u00f3n: Conversiones:**\n- **tiempo promedio de conversi\u00f3n: 1 days 08:18:03.241788**\n- **tiempo promedio de dispositivos reaparezca en la subasta:  0 days 00:07:54.140841**\n\n### 13. \u00bfCu\u00e1l fue la distribuci\u00f3n de los eventos de Jammp ? Los m\u00e1s frecuentes. \n\nComo paso inicial para el an\u00e1lisis de los eventos, observamos que tipo de distribuci\u00f3n presentan los eventos atribuidos a Jampp.","dee0a198":"**Conclusi\u00f3n 1: De lo anterior podemos observar que el Cliente 3 tiene mejor resultado, 220 eventos con cuando la aplicaci\u00f3n en la que se muestra su publicidad es la 63, que cuando va a la aplicaci\u00f3n 170 con la que s\u00f3lo obtiene 28 conversiones.**","45d954be":"**Conclusi\u00f3n 1: 67.51%  de los eventos fueron generados estando conectado a una red wifi.**","559b5d41":"Se identifican 3 usuarios que se despegan considerablemente de la media por lo cual los excluimos de la muestra para analizarlos por separado y descartar que sean \u201coutliers\u201d. Podr\u00eda incluso tratarse de fraude de acuerdo al resto de las caracter\u00edsticas. ","f40e49fc":"Para evitar el overpplotting debido a la cantidad de datos, una vez m\u00e1s creamos una visualizaci\u00f3n marginal plot. "}}