{"cell_type":{"5b1cbd7f":"code","05bb686f":"code","8f1ee6bb":"code","0f842782":"code","21867f50":"code","b004eccd":"code","b5dd4830":"code","e32738e2":"code","d29b6e24":"code","af143a73":"code","d65c2bb6":"code","b2882b6c":"code","ac0f7f88":"code","4dfd0569":"code","c041fc3b":"code","fab64cce":"code","2d939cb8":"code","65c0c13a":"code","54db54fd":"code","41ec15f4":"code","465127a8":"code","76e086dc":"code","4dedcbe5":"code","e3394468":"code","40c1096f":"code","c4501097":"code","8086695a":"code","b081a7cb":"code","3c061036":"code","8917bd2a":"code","07169346":"code","f083d73e":"code","e5315496":"code","3ad0fff2":"code","1dda767e":"code","036f1c24":"code","e1d68bcd":"code","ba044865":"code","1c280001":"code","e16646b0":"code","9d3f5d27":"code","7b672e40":"code","860962d0":"code","13236486":"code","58feaa0b":"code","ad3ad7b2":"code","6dda0fec":"code","110f25ec":"code","ad2cb573":"code","99fe70c1":"code","90bd784d":"code","4d5d2402":"code","11cdcdcb":"code","3dde2cf3":"code","a42b07da":"code","c0d9ae0a":"code","fe955c49":"code","7ea501a3":"code","266f9883":"code","b963c330":"code","bd54287c":"code","edcb27cf":"code","b68b3417":"code","8d8dff74":"code","3a04a575":"code","8241016c":"code","013b6571":"code","a8c89a76":"code","2ce8b2c6":"code","bae34d1d":"code","cafc3ad2":"code","d3845631":"code","80b28f2c":"code","2151cb02":"code","22f0cc51":"code","5fdb94df":"code","b4ea083f":"code","701cd14c":"code","9da258a1":"code","d0c9eba0":"code","35b3b012":"code","c3ad1506":"code","5e924ba1":"code","8608a3b6":"code","18cdb606":"code","d53664df":"code","a8e6b257":"code","0510ccee":"code","ebf9fa9e":"code","9762efd9":"code","465298e7":"code","2312121f":"code","f18268e8":"code","4bc1e267":"code","837ffaeb":"code","9a784008":"code","cba25506":"code","5d92f58b":"code","c9c95445":"code","8e79a696":"code","c9cc61d9":"code","c10b1d44":"code","e68375b6":"code","25454f66":"code","2a245898":"code","1fff5cd0":"code","c1b7cd1d":"code","397dd91d":"code","a5589519":"code","b1573bdf":"code","be7c9ae1":"code","242d964b":"code","3077426f":"code","7be8d106":"code","26f4b1ae":"code","ae7e36ea":"code","7c7fbbec":"code","86b6daa6":"code","4d7be072":"code","2e78cb1b":"code","9f1ad265":"code","81419f0a":"code","c24af544":"code","9b81fa10":"code","803add55":"code","2f3c8bdd":"code","9b36a2e6":"code","97864f88":"code","9675a689":"code","e80f8ba9":"code","b9e19676":"code","e022449c":"code","922f68db":"code","a1d2dcaf":"code","34219176":"code","a1d6edc4":"code","99d8e202":"code","fcf9f054":"code","6c078800":"code","d5cae2f0":"code","b81677cf":"code","be85c999":"code","be438b6e":"code","d44d6ca9":"code","b13611c4":"code","5a1de446":"code","85ae23c1":"code","88f269c2":"code","8b6d2d5e":"code","2e9f104c":"markdown","934a4417":"markdown","7522c580":"markdown","8767a1a9":"markdown","18508093":"markdown","fc6052fd":"markdown","dacf55cf":"markdown","13b63787":"markdown","a8e3212f":"markdown","1ac0a708":"markdown","0c57d9b6":"markdown","5b713fba":"markdown","b62a131c":"markdown","fcadda14":"markdown","4d594db3":"markdown","f152439b":"markdown","048bf1e7":"markdown","4f27ce5c":"markdown","d34ceeb6":"markdown","5a735b90":"markdown","3cf6d6f4":"markdown","3b59ef59":"markdown","6449fbd8":"markdown","92b1697c":"markdown","35065059":"markdown","b366e2df":"markdown","402effb1":"markdown","0acba372":"markdown","bfd1b29d":"markdown","be91f4b6":"markdown","bedb9b0a":"markdown","936bb18f":"markdown","80085311":"markdown","794a8197":"markdown","a1df06a2":"markdown","30afe783":"markdown","5c6e72f5":"markdown","97c7579a":"markdown","0649a1b3":"markdown","16ba44ca":"markdown","9569218f":"markdown","d897f32b":"markdown","3ee3d917":"markdown","1f2fcde3":"markdown","88524d08":"markdown","c42e0d25":"markdown","69e9fdb0":"markdown","8c9809e3":"markdown","b4e4c865":"markdown","d41bcc2a":"markdown","4e33d3e3":"markdown","702e22da":"markdown","5cb899a1":"markdown","1ea51f7c":"markdown","fcbbdd6e":"markdown","1809dd65":"markdown","428fa7d8":"markdown","8281318e":"markdown","7aa6cb66":"markdown","33f144f9":"markdown","a2fc9fdb":"markdown","806000ae":"markdown","c1e9ee6f":"markdown","ae91ea6d":"markdown","74202334":"markdown","b3e0a55f":"markdown","6a887d94":"markdown","a51153c6":"markdown","db37e9f8":"markdown","429d625a":"markdown","9c857f96":"markdown","cf98a3b3":"markdown","5780efe9":"markdown","0323328c":"markdown","20d6098c":"markdown","0572014b":"markdown","6fc78a7a":"markdown","69a67747":"markdown","ce7c37cf":"markdown","0ba82860":"markdown"},"source":{"5b1cbd7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","05bb686f":"# air_visit_data = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/air_visit_data.csv\")\n# weatherData = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/WeatherData.csv\")\n# air_reserve = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/air_reserve.csv\")\n# air_store_info = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/air_store_info.csv\")\n# area_name_mapping = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/area_name_mapping.csv\")\n# date_info = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/date_info.csv\")\n# hpg_reserve = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/hpg_reserve.csv\")\n# hpg_store_info = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/hpg_store_info.csv\")\n# store_id_relation = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/store_id_relation.csv\")\n\n#test = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/test.csv\")\n\n# sample_submit = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/sample_submission.csv\")","8f1ee6bb":"import seaborn as sns\nimport matplotlib.pyplot as plt","0f842782":"train = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/air_visit_data.csv\")\nweatherData = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/WeatherData.csv\")\ndate_info = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/date_info.csv\")","21867f50":"date_info = date_info.rename(columns={'calendar_date': \"visit_date\"})\ndate_info","b004eccd":"train = train.merge(date_info, on=\"visit_date\",how=\"left\")\n# \u66dc\u65e5\u306f\u3042\u3068\u3067\u5225\u306e\u65b9\u6cd5\u3067\u52a0\u3048\u308b\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\ntrain = train.drop(columns=\"day_of_week\")\ntrain","b5dd4830":"train[\"set\"] = \"train\"\ntrain","e32738e2":"train_x = train.drop(columns = \"visitors\")\ntrain_y = pd.DataFrame()\ntrain_y[\"visitors\"] = train[\"visitors\"]","d29b6e24":"# train_y\u306evisitors\u304c200\u3092\u8d85\u3048\u308b\u5834\u5408\u306f0\u306b\u3059\u308b\ntrain_y.loc[train_y[\"visitors\"] > 200, \"visitors\"] = 0\n# visitors\u3067\u30bd\u30fc\u30c8\u3057\u3066\u8868\u793a\ntrain_y.sort_values(by='visitors', ascending=False)","af143a73":"train_y","d65c2bb6":"# 2017-04-18\t\ndef back_year(txt):\n    visit_date = txt\n    txt_split = txt.rsplit(\"-\",2)\n    return txt_split[0]\n\ndef back_month(txt):\n    visit_date = txt\n    txt_split = txt.rsplit(\"-\",2)\n    #04\u6708\u306e\u3088\u3046\u306a\u8a18\u8ff0\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3001int\u578b\u3067\u8fd4\u3059\n    return int(txt_split[1])\n\ndef back_day(txt):\n    visit_date = txt\n    txt_split = txt.rsplit(\"-\",2)\n    return int(txt_split[2])","b2882b6c":"# year\u5217\u3092\u65b0\u898f\u306b\u4f5c\u6210\u3059\u308b\u3002visit_date\u5217\u306e\u5024\u3092back_year\u95a2\u6570\u306b\u5165\u308c\u3066\u51e6\u7406\u3059\u308b\ntrain_x.loc[:,\"year\"] = train_x[\"visit_date\"].apply(back_year)\ntrain_x.loc[:,\"month\"] = train_x[\"visit_date\"].apply(back_month)\ntrain_x.loc[:,\"day\"] = train_x[\"visit_date\"].apply(back_day)\ntrain_x","ac0f7f88":"import datetime","4dfd0569":"#\u6708\u706b\u6c34\u6728\u91d1\u571f\u65e5\u2192[0,1,2,3,4,5,6]\u3067\u8fd4\u3059\ndt = datetime.datetime(2021, 4, 26)\nprint(dt.weekday())","c041fc3b":"#\u6708\u706b\u6c34\u6728\u91d1\u571f\u65e5\u2192[0,1,2,3,4,5,6]\u3067\u8fd4\u3059\ndef back_day_of_the_week(txt):\n    visit_date = txt\n    txt_split = txt.rsplit(\"-\",2)\n    dt = datetime.datetime(int(txt_split[0]), int(txt_split[1]), int(txt_split[2]))\n    return dt.weekday()","fab64cce":"train_x.loc[:,\"day_of_the_week\"] = train_x[\"visit_date\"].apply(back_day_of_the_week)\ntrain_x","2d939cb8":"train_x = train_x.drop(columns='visit_date')","65c0c13a":"test = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/sample_submission.csv\")\ntest[\"set\"] = \"test\"","54db54fd":"test_x = test.drop(columns=\"visitors\")\ntest_y = pd.DataFrame()\ntest_y[\"visitors\"] = test[\"visitors\"]\n# test_y\u306e\u6765\u5e97\u8005\u6570\u306f\u5168\u3066-1\u3067\u57cb\u3081\u308b(\u2192\u30e9\u30b0\u7279\u5fb4\u91cf\u8a08\u7b97\u3067\u30de\u30a4\u30ca\u30b9\u3092\u5e73\u5747\u306b\u52a0\u3048\u308b\u306e\u306f\u4e0d\u9069\u5207\u3068\u8003\u3048\u3084\u3081\u305f)\n# test_y[\"visitors\"] = -1\ntest_y","41ec15f4":"print(test_x.id[0])","465127a8":"# \u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u533a\u5207\u308a\u3067\u3001\u53f3\u304b\u30891\u3064\u306e\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u3092\u5206\u3051\u305fpandas\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u8fd4\u3059\ntxt = test_x.id[0]\nprint(txt)\ntxt_split = txt.rsplit(\"_\",1)\nprint(txt_split)\nprint(txt_split[0])\nprint(txt_split[1])\ntest_x.date_of_customer = txt_split","76e086dc":"def back_store_name(txt):\n    id = txt\n    #_\u533a\u5207\u308a\u3067\u53f3\u304b\u30891\u756a\u76ee\u306e\u6587\u5b57\u3092\u5207\u308a\u5206\u3051\u308b\n    txt_split = txt.rsplit(\"_\",1)\n    # \u5207\u308a\u5206\u3051\u305f\u6587\u5b57\u5217\u306e\u3046\u3061\u30010\u756a\u76ee\u3092\u8fd4\u3059\n    return txt_split[0]","4dedcbe5":"def back_date_name(txt):\n    id = txt\n    txt_split = txt.rsplit(\"_\",1)\n    return txt_split[1]","e3394468":"#\u65b0\u3057\u3044\u5217\u306e\u540d\u524d = \u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u306b\u5165\u308c\u3066\u51e6\u7406\u3059\u308b\u5217\u306e\u540d\u524d\ntest_x.loc[:,\"air_store_id\"] = test_x[\"id\"].apply(back_store_name)\ntest_x.loc[:,\"visit_date\"] = test_x[\"id\"].apply(back_date_name)\ntest_x","40c1096f":"test_x = test_x.merge(date_info, on=\"visit_date\",how=\"left\")\n# \u66dc\u65e5\u306f\u3042\u3068\u3067\u5225\u306e\u65b9\u6cd5\u3067\u52a0\u3048\u308b\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\ntest_x = test_x.drop(columns=\"day_of_week\")\ntrain","c4501097":"# year\u5217\u3092\u65b0\u898f\u306b\u4f5c\u6210\u3059\u308b\u3002visit_date\u5217\u306e\u5024\u3092back_year\u95a2\u6570\u306b\u5165\u308c\u3066\u51e6\u7406\u3059\u308b\ntest_x.loc[:,\"year\"] = test_x[\"visit_date\"].apply(back_year)\ntest_x.loc[:,\"month\"] = test_x[\"visit_date\"].apply(back_month)\ntest_x.loc[:,\"day\"] = test_x[\"visit_date\"].apply(back_day)\ntest_x","8086695a":"test_x.loc[:,\"day_of_the_week\"] = test_x[\"visit_date\"].apply(back_day_of_the_week)\ntest_x","b081a7cb":"# test_data\u306e5\/3-5\/5\u307e\u3067\u3092\u65e5\u66dc\u65e5\u306b\u5909\u66f4(\u65e5\u66dc\u65e5=6)\ntest_x.loc[(test_x['month'] == 5) & (test_x['day'] == 3), 'day_of_the_week'] = 5\ntest_x.loc[(test_x['month'] == 5) & (test_x['day'] == 4), 'day_of_the_week'] = 5\ntest_x.loc[(test_x['month'] == 5) & (test_x['day'] == 5), 'day_of_the_week'] = 5","3c061036":"test_x","8917bd2a":"test_x = test_x.drop(columns='id')\ntest_x = test_x.drop(columns='visit_date')","07169346":"train_le = pd.DataFrame()\ntrain_le[\"air_store_id\"] = train_x.air_store_id\ntest_le = pd.DataFrame()\ntest_le[\"air_store_id\"] = test_x.air_store_id","f083d73e":"test_le","e5315496":"merge_data_le = pd.merge(train_le,test_le, how=\"outer\")\n# merge_data = merge_data[\"air_store_id\"]\n# train_le = train_x(\"air_store_id\")\n# test_le = test_x(\"air_store_id\")","3ad0fff2":"merge_data_le","1dda767e":"from sklearn.preprocessing import LabelEncoder #Library for LabelEncoding\n\nfor c in merge_data_le:\n    le = LabelEncoder()\n    le.fit(merge_data_le[c])\n    train_le[c] = le.transform(train_le[c])\n    test_le[c]= le.transform(test_le[c])","036f1c24":"# \u30a8\u30f3\u30b3\u30fc\u30c9\u524d\u5f8c\u306e\u5bfe\u5fdc\u78ba\u8a8d\u7528\u3001\u672c\u7b4b\u3068\u306f\u95a2\u4fc2\u306a\u3044\ntrain_x_enc = train_x.join(train_le, lsuffix='_enc')\ntest_x_enc = test_x.join(test_le, lsuffix='_enc')\n\n# \u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e\u3092\u5165\u308c\u308b\ntrain_x = train_x.drop(columns = \"air_store_id\")\ntrain_x = train_x.join(train_le)\ntest_x = test_x.drop(columns = \"air_store_id\")\ntest_x = test_x.join(test_le)","e1d68bcd":"train_x","ba044865":"test_x","1c280001":"test_x","e16646b0":"test_x.year.dtype","9d3f5d27":"train_x[\"year\"] = train_x.year.astype(\"int64\")\ntest_x[\"year\"] = test_x.year.astype(\"int64\")","7b672e40":"train_all = train_x.join(train_y)\ntrain_all","860962d0":"test_all = test_x.join(test_y)\ntest_all","13236486":"merge_data = pd.concat([train_all,test_all])\nmerge_data","58feaa0b":"print(train_x)\n# \u5e97ID\u3054\u3068\u306b\u30c7\u30fc\u30bf\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u78ba\u8a8d\u3057\u3066\u3044\u308b\nprint(train_x.groupby(\"air_store_id\").count()[\"day\"])\n# test\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\nprint(test_x.groupby(\"air_store_id\").count()[\"day\"])","ad3ad7b2":"# train_x\u3068train_y\u3092\u7d50\u5408\u3059\u308b\ntrain_all = train_x.join(train_y)\n# \u66dc\u65e5\u3054\u3068\u306b\u3001\u6765\u5e97\u8005\u6570\u306e\u5408\u8a08\u3001\u30c7\u30fc\u30bf\u306e\u6570\u3001max\u3001min\u3092\u51fa\u529b\u3059\u308b\nweek_visitors = train_all.groupby(['day_of_the_week']).visitors.agg([sum,len,max,min])\nweek_visitors[\"ave\"] = week_visitors[\"sum\"] \/\/ week_visitors[\"len\"]\nweek_visitors","6dda0fec":"train_all","110f25ec":"store_visitors = train_all.groupby(['air_store_id']).visitors.agg([sum,len,max,min])\nstore_visitors[\"ave\"] = store_visitors[\"sum\"] \/\/ store_visitors[\"len\"]\n# \u6765\u5e97\u8005\u6570\u306e\u5e73\u5747\u3067\u30bd\u30fc\u30c8\nstore_visitors.sort_values(by='ave', ascending=False)","ad2cb573":"store_visitors.sort_values(by='max', ascending=False)","99fe70c1":"sns.scatterplot(x=store_visitors['ave'], y=store_visitors['max'])","90bd784d":"sns.scatterplot(x=store_visitors['ave'], y=store_visitors['max'], hue=store_visitors['len'])","4d5d2402":"train_all","11cdcdcb":"id_0 = train_all.loc[train_all.air_store_id == 3]\nid_0 = id_0.loc[id_0.month == 4]\n# id_0 = id_0.loc[id_0.day == 2]\nid_0_data = pd.DataFrame()\nid_0_data[\"visitors\"] = id_0.visitors\nid_0_data[\"month\"] = id_0.month\nid_0_data[\"day\"] = id_0.day\nid_0_data[\"day_of_the_week\"] = id_0.day_of_the_week\nid_0_data = id_0_data.reset_index(drop=True)\nid_0_data","3dde2cf3":"plt.figure(figsize=(10,6))\nplt.title(\"id=2 store visitors\")\nsns.barplot(x=id_0_data.day, y=id_0_data['visitors'])\nplt.ylabel(\"visitors\")","a42b07da":"id_0_data","c0d9ae0a":"id_0_data_ana = id_0_data.groupby(['day_of_the_week']).visitors.agg([sum,len,max,min])\nid_0_data_ana[\"ave\"] = id_0_data_ana[\"sum\"] \/\/ id_0_data_ana[\"len\"]\nid_0_data_ana","fe955c49":"max_ave_index = id_0_data_ana['ave'].idxmax()\nmax_ave_index","7ea501a3":"train_all.loc[train_all.air_store_id == 663]","266f9883":"%%time\ncolumns =[\"air_store_id\",\"v_ave_all\",\"v_ave_0\", \"v_ave_1\",\"v_ave_2\",\"v_ave_3\",\"v_ave_4\", \"v_ave_5\",\"v_ave_6\",\"v_ave_holiday\",\"max_visitors\",\"min_visitors\"]\nv_ave =pd.DataFrame(columns=columns)\n\n#2017\/3-4\u6708\u306e\u307f\u306e\u5e73\u5747\u5024\u3092\u3068\u308b\ntrain_2017 = train_all.loc[(train_all.year == 2017)]\ntrain_cho = train_2017.loc[(train_2017.month == 1) |(train_2017.month == 2) | (train_2017.month == 3)]\n\nfor c in range(0, 829,1):\n    \n\n    \n    data_ave = train_cho.loc[train_cho.air_store_id == c]\n    data_ave_0 = data_ave.loc[train_all.day_of_the_week == 0] #\u5e97\u8217ID\u306e\u65e5\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u306eDataFrame\n    data_ave_1 = data_ave.loc[train_all.day_of_the_week == 1] #\u5e97\u8217ID\u306e\u6708\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u306eDataFrame\n    data_ave_2 = data_ave.loc[train_all.day_of_the_week == 2]\n    data_ave_3 = data_ave.loc[train_all.day_of_the_week == 3]\n    data_ave_4 = data_ave.loc[train_all.day_of_the_week == 4]\n    data_ave_5 = data_ave.loc[train_all.day_of_the_week == 5]\n    data_ave_6 = data_ave.loc[train_all.day_of_the_week == 6] #\u5e97\u8217ID\u306e\u571f\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u306eDataFrame\n    \n    \n    data_ave_h = data_ave.loc[train_all.holiday_flg == 1] #\u795d\u65e5\u306e\u6765\u5e97\u8005\u6570\n\n    v_ave_all = data_ave.visitors.mean() #\u5e97\u8217\u305d\u306e\u3082\u306e\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\n    v_ave_0 =  data_ave_0.visitors.mean() #\u65e5\u66dc\u65e5\u306e\u5e73\u5747\n    v_ave_1 =  data_ave_1.visitors.mean()\n    v_ave_2 =  data_ave_2.visitors.mean()\n    v_ave_3 =  data_ave_3.visitors.mean()\n    v_ave_4 =  data_ave_4.visitors.mean()\n    v_ave_5 =  data_ave_5.visitors.mean()\n    v_ave_6 =  data_ave_6.visitors.mean()\n    \n    \n    \n    v_ave_h =  data_ave_h.visitors.mean() #\u795d\u65e5\u306e\u6765\u5e97\u8005\u6570\u306e\u5e73\u5747\n    max_visitors =  data_ave.visitors.max()\n    min_visitors =  data_ave.visitors.min()\n    \n    # \u4f8b\u5916\n    # \u4ee5\u4e0b\u306e\u5e97\u8217\u306f\u6b20\u640d\u3059\u308b\u306e\u30670\u3067\u57cb\u3081\u308b\n    if c == 110:\n        v_ave_all = 0\n        max_visitors = 0\n        min_visitors = 0\n        \n    if c == 663:\n        v_ave_all = 0\n        max_visitors = 0\n        min_visitors = 0\n        \n    if c == 387:\n        v_ave_all = 0\n        max_visitors = 0\n        min_visitors = 0\n        \n    if c == 579:\n        v_ave_all = 0\n        max_visitors = 0\n        min_visitors = 0\n    \n    # \u4ee5\u4e0b\u306e\u5e97\u8217\u306f4\u6708\u306b\u3057\u304b\u30c7\u30fc\u30bf\u304c\u306a\u3044\u306e\u3067\u624b\u52d5\u3067\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3057\u305f\n    if c == 453:\n        v_ave_all = 86.8\n        max_visitors = 120\n        min_visitors = 40\n        v_ave_0 =  0\n        v_ave_1 =  82.333\n        v_ave_2 =  107\n        v_ave_3 =  97.3\n        v_ave_4 =  101.6\n        v_ave_5 =  77\n        v_ave_6 =  55.66\n    \n    v_ave_store = [[c, v_ave_all,v_ave_0, v_ave_1, v_ave_2, v_ave_3, v_ave_4, v_ave_5, v_ave_6, v_ave_h, max_visitors, min_visitors]]\n    v_ave_temp = pd.DataFrame(v_ave_store, columns=columns)\n    \n\n        \n    \n    # \u7b97\u51fa\u671f\u9593\u304c\u77ed\u3044\u3068\u6b20\u640d\u304c\u51fa\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u4fee\u6b63\u3059\u308b\n    v_ave_temp.loc[v_ave_temp[\"v_ave_0\"].isnull() == True, \"v_ave_0\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_1\"].isnull() == True, \"v_ave_1\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_2\"].isnull() == True, \"v_ave_2\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_3\"].isnull() == True, \"v_ave_3\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_4\"].isnull() == True, \"v_ave_4\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_5\"].isnull() == True, \"v_ave_5\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_6\"].isnull() == True, \"v_ave_6\"] = v_ave_all\n    v_ave_temp.loc[v_ave_temp[\"v_ave_holiday\"].isnull() == True, \"v_ave_holiday\"] = v_ave_all\n    v_ave_temp\n    \n    v_ave = pd.concat([v_ave,v_ave_temp])\n\n#\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u632f\u308a\u306a\u304a\u3059\nv_ave = v_ave.reset_index(drop=True)\n# v_ave.loc[v_ave.air_store_id==110]\nv_ave","b963c330":"# \u6b20\u640d\u5730\u306e\u3042\u308bindex\u3092\u63a2\u3057\u3066\u304f\u308b\nv_ave[pd.isnull(v_ave.v_ave_holiday)]\n# v_ave.head(30)","bd54287c":"v_ave[\"air_store_id\"] = v_ave.air_store_id.astype(\"int64\")\nv_ave[\"max_visitors\"] = v_ave.max_visitors.astype(\"int64\")\nv_ave[\"min_visitors\"] = v_ave.min_visitors.astype(\"int64\")\n\nv_ave","edcb27cf":"def cal_max_ave_index(t):\n    air_store_id, id2 = t\n    #train_all\u304b\u3089\u3001\u6765\u5e97\u8005\u306e\u6570\u3092\u7b97\u51fa\u3059\u308b(test\u3092\u542b\u3080\u3068visitors=0\u304c\u5165\u308b\u306e\u3067train_all\u3060\u3051\u3067\u3084\u308b)\n    id_0 = train_all.loc[train_all.air_store_id == air_store_id]\n    id_0_data = pd.DataFrame()\n    id_0_data[\"visitors\"] = id_0.visitors\n    id_0_data[\"day_of_the_week\"] = id_0.day_of_the_week\n    id_0_data = id_0_data.reset_index(drop=True)\n    id_0_data_ana = id_0_data.groupby(['day_of_the_week']).visitors.agg([sum,len])\n    id_0_data_ana[\"ave\"] = id_0_data_ana[\"sum\"] \/\/ id_0_data_ana[\"len\"]\n    max_ave_index = id_0_data_ana['ave'].idxmax()\n    return max_ave_index","b68b3417":"all_id = merge_data.air_store_id.unique()\nall_id = pd.DataFrame(all_id, columns=[\"air_store_id\"])\nall_id = all_id.sort_values(by='air_store_id', ascending=True)\nall_id = all_id.reset_index(drop=True)\nall_id[\"id2\"] = all_id[\"air_store_id\"] * 2\nall_id","8d8dff74":"%%time\nall_id.loc[:,\"max_ave_day\"] = all_id[[\"air_store_id\",\"id2\"]].apply(cal_max_ave_index, axis=1)\nall_id","3a04a575":"air_store_info = pd.read_csv(\"..\/input\/recruit-restaurant-visitor-forecasting-data\/air_store_info.csv\")\n\nstore_le = pd.DataFrame()\nstore_le[\"air_store_id\"] = air_store_info.air_store_id\ngenre_le = pd.DataFrame()\ngenre_le[\"air_genre_name\"] = air_store_info.air_genre_name\narea_le = pd.DataFrame()\narea_le[\"air_area_name\"] = air_store_info.air_area_name\n\narea_le","8241016c":"# store_id\u306e\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\nfor c in store_le:\n    store_le[c] = le.transform(store_le[c])\nstore_le\n\n# \u30b8\u30e3\u30f3\u30eb\u306e\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\nfor c in genre_le:\n    le_g = LabelEncoder()\n    le_g.fit(genre_le[c])\n    genre_le[c] = le_g.transform(genre_le[c])\ngenre_le\n\nfor c in area_le:\n    le_a = LabelEncoder()\n    le_a.fit(area_le[c])\n    area_le[c] = le_a.transform(area_le[c])\narea_le","013b6571":"air_store_info = air_store_info.drop(columns = \"air_store_id\")\nair_store_info = air_store_info.join(store_le)\nair_store_info = air_store_info.drop(columns = \"air_genre_name\")\nair_store_info = air_store_info.join(genre_le)\nair_store_info = air_store_info.drop(columns = \"air_area_name\")\nair_store_info = air_store_info.join(area_le)\n# \u6700\u3082\u6765\u5e97\u8005\u306e\u591a\u3044\u66dc\u65e5\u60c5\u5831\u3068\u7d50\u5408\u3059\u308b\u305f\u3081\u306b\u30bd\u30fc\u30c8\u3057index\u3092\u3064\u3051\u306a\u304a\u3059\nair_store_info = air_store_info.sort_values(by='air_store_id')\n# index\u3092\u3064\u3051\u306a\u304a\u3059\nair_store_info = air_store_info.reset_index(drop=True)\nair_store_info","a8c89a76":"all_id","2ce8b2c6":"air_store_info = air_store_info.rename(columns={'air_store_id': 'air_store_id_info'})\nair_store_info = air_store_info.join(all_id)\nair_store_info","bae34d1d":"merge_data = merge_data.merge(air_store_info, on=\"air_store_id\",how=\"left\")\nmerge_data","cafc3ad2":"all_id_only = pd.DataFrame()\nall_id_only[\"id\"] = all_id.air_store_id\nall_id_only","d3845631":"%%time\nlast_week = pd.DataFrame()\n\n# for c in range(0,829,1):\nfor c in range(0, 829,1):\n    \n    last_week_0 = pd.DataFrame()\n    last_week_1 = pd.DataFrame()\n    last_week_2 = pd.DataFrame()\n    last_week_3 = pd.DataFrame()\n    last_week_4 = pd.DataFrame()\n    last_week_5 = pd.DataFrame()\n    last_week_6 = pd.DataFrame()\n    \n    store = merge_data.loc[merge_data.air_store_id == c]\n\n    store_d = store.loc[store.day_of_the_week == 0]\n    last_week_0[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_0[\"today\"] = store_d.visitors\n    last_week_0[\"last_week\"] = store_d[\"visitors\"].shift(1)\n    # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_0])\n\n    store_d = store.loc[store.day_of_the_week == 1]\n    last_week_1[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_1[\"today\"] = store_d.visitors\n    last_week_1[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_1])\n\n    store_d = store.loc[store.day_of_the_week == 2]\n    last_week_2[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_2[\"today\"] = store_d.visitors\n    last_week_2[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_2])\n\n    store_d = store.loc[store.day_of_the_week == 3]\n    last_week_3[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_3[\"today\"] = store_d.visitors\n    last_week_3[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_3])\n\n    store_d = store.loc[store.day_of_the_week == 4]\n    last_week_4[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_4[\"today\"] = store_d.visitors\n    last_week_4[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_4])\n\n    store_d = store.loc[store.day_of_the_week == 5]\n    last_week_5[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_5[\"today\"] = store_d.visitors\n    last_week_5[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_5])\n\n    store_d = store.loc[store.day_of_the_week == 6]\n    last_week_6[\"day_of_the_week\"] = store_d.day_of_the_week\n    last_week_6[\"today\"] = store_d.visitors\n    last_week_6[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    last_week_0 = last_week_0.fillna(ave)\n    last_week = pd.concat([last_week, last_week_6])\n    \n\n\nlast_week = last_week.sort_index()\nlast_week","80b28f2c":"last_week.head(10)","2151cb02":"merge_data","22f0cc51":"test_temp = merge_data.loc[merge_data.set == 'test']\ntest_temp","5fdb94df":"v_ave","b4ea083f":"# for c in range(0,829,1):\n# for c in range(0,10,1):\n# waring\u304c\u3046\u308b\u3055\u3044\u306e\u3067\u3001with\u306e\u7bc4\u56f2\u5185\u306b\u3042\u308b\u3082\u306e\u306f\u30ef\u30fc\u30cb\u30f3\u30b0\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nimport warnings\nwarnings.resetwarnings()\nwith warnings.catch_warnings():\n    warnings.simplefilter('ignore')\n    test_visitors = pd.DataFrame()\n    for c in range(0,829,1):\n        test_temp_store = test_temp.loc[test_temp.air_store_id == c]\n        test_temp_store_0 = test_temp_store.loc[test_temp_store.day_of_the_week == 0]\n        test_temp_store_0[\"visitors\"] = v_ave.at[c,\"v_ave_0\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_0])\n\n        test_temp_store_1 = test_temp_store.loc[test_temp_store.day_of_the_week == 1]\n        test_temp_store_1[\"visitors\"] = v_ave.at[c,\"v_ave_1\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_1])\n        \n        test_temp_store_2 = test_temp_store.loc[test_temp_store.day_of_the_week == 2]\n        test_temp_store_2[\"visitors\"] = v_ave.at[c,\"v_ave_2\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_2])\n        \n        test_temp_store_3 = test_temp_store.loc[test_temp_store.day_of_the_week == 3]\n        test_temp_store_3[\"visitors\"] = v_ave.at[c,\"v_ave_3\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_3])\n\n        test_temp_store_4 = test_temp_store.loc[test_temp_store.day_of_the_week == 4]\n        test_temp_store_4[\"visitors\"] = v_ave.at[c,\"v_ave_4\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_4])\n        \n        test_temp_store_5 = test_temp_store.loc[test_temp_store.day_of_the_week == 5]\n        test_temp_store_5[\"visitors\"] = v_ave.at[c,\"v_ave_5\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_5])\n        \n        test_temp_store_6 = test_temp_store.loc[test_temp_store.day_of_the_week == 6]\n        test_temp_store_6[\"visitors\"] = v_ave.at[c,\"v_ave_6\"]\n        test_visitors = pd.concat([test_visitors, test_temp_store_6])\n\ntest_visitors = test_visitors.sort_index()\ntest_visitors","701cd14c":"test_visitors[[\"air_store_id\",\"day\",\"visitors\"]].tail(20)","9da258a1":"# \u4e00\u5fdc\u3001\u76f4\u524d\u306emerege_data\u3092\u88dc\u5b8c\nmerge_data_temp = merge_data\n\n# train_temp\u3068test_visitors\u3092\u7d50\u5408\n# \u4f55\u3082\u51e6\u7406\u3057\u3066\u3044\u306a\u3044train\u30c7\u30fc\u30bf\u3068\u3001visitors\u3092\u5e97\u8217\u306e\u66dc\u65e5\u3054\u3068\u306e\u5e73\u5747\u3067\u66f8\u304d\u63db\u3048\u305ftest_visitors\u3067\u66f8\u304d\u63db\u3048\u308b\ntrain_temp = merge_data.loc[merge_data.set == 'train']\nmerge_data = pd.concat([train_temp, test_visitors])\nmerge_data","d0c9eba0":"merge_data.loc[merge_data.air_store_id == c]","35b3b012":"%%time\nstore_all_7 = pd.DataFrame()\nstore_all_3 = pd.DataFrame()\nstore_all_14 = pd.DataFrame()\nstore_all_21 = pd.DataFrame()\n\nfor c in range(0,829,1):\n    # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n    store = merge_data.loc[merge_data.air_store_id == c]\n    # 7\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n    x_lag = pd.DataFrame()\n    x_lag[\"lag7\"] = store[\"visitors\"].shift(0).rolling(window=7).mean()\n    store = store.join(x_lag)\n    # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    store = store.fillna(ave)\n    store_all_7 = pd.concat([store_all_7, store])\n    \n    \n    store = merge_data.loc[merge_data.air_store_id == c]\n    # \u76f4\u8fd13\u65e5\u306e\u5e73\u5747\n    x_lag = pd.DataFrame()\n    x_lag[\"lag3\"] = store[\"visitors\"].shift(0).rolling(window=3).mean()\n    store = store.join(x_lag)\n    # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    store = store.fillna(ave)\n    store_all_3 = pd.concat([store_all_3, store])\n\n    \n    # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n    store = merge_data.loc[merge_data.air_store_id == c]\n    # 14\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n    x_lag = pd.DataFrame()\n    x_lag[\"lag14\"] = store[\"visitors\"].shift(7).rolling(window=7).mean()\n    store = store.join(x_lag)\n    # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    store = store.fillna(ave)\n    store_all_14 = pd.concat([store_all_14, store])\n    \n    # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n    store = merge_data.loc[merge_data.air_store_id == c]\n    # 21\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n    x_lag = pd.DataFrame()\n    x_lag[\"lag21\"] = store[\"visitors\"].shift(14).rolling(window=7).mean()\n    store = store.join(x_lag)\n    # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n    ave = store_visitors['ave'][c]\n    store = store.fillna(ave)\n    store_all_21 = pd.concat([store_all_21, store])\n    \n","c3ad1506":"# id\u3067\u30bd\u30fc\u30c8\u3057\u306a\u304a\u3059\nstore_all_7 = store_all_7.sort_index()\nstore_all_3 = store_all_3.sort_index()\nstore_all_14 = store_all_14.sort_index()\nstore_all_21 = store_all_21.sort_index()\n# \u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u7d50\u5408\u3057\u3066lag_all\nlag_all = pd.DataFrame()\nlag_all[\"lag7\"] = store_all_7.lag7\nlag_all[\"lag3\"] = store_all_3.lag3\nlag_all[\"lag14\"] = store_all_14.lag14\nlag_all[\"lag21\"] = store_all_21.lag21\nlag_all.head(30)","5e924ba1":"merge_data = merge_data.join(lag_all)\nmerge_data = merge_data.join(last_week, rsuffix='_last')\nmerge_data","8608a3b6":"ckm = merge_data.loc[merge_data.set == \"test\"]\nckm.head(30)","18cdb606":"ckm[['air_store_id', 'visitors', \"month\", \"day\",\"set\",\"lag7\",\"lag14\",\"lag21\"]].tail(30)","d53664df":"merge_data = merge_data.merge(v_ave, on=\"air_store_id\",how=\"left\")\nmerge_data","a8e6b257":"# \u30ea\u30fc\u30af\u3059\u308b\u5371\u967a\u304c\u3042\u308b\u306e\u3067\u304b\u5fc5\u305atoday\u3092drop\u3057\u3066\u6d88\u3059\nmerge_data = merge_data.drop(columns='today')\nmerge_data = merge_data.drop(columns='day_of_the_week_last')\nmerge_data = merge_data.drop(columns='id2')","0510ccee":"#\u671f\u9593\u77ed\u304f\u3059\u308b\u524d\u306emerge_data\u306f\u3001merge_data_all(\u5168\u671f\u9593\u306e\u30c7\u30fc\u30bf)\u3068\u3057\u3066\u6b8b\u3059\nmerge_data_all = merge_data\nmerge_data_all","ebf9fa9e":"# merge_data_all\u3078\u306f\u3053\u3053\u3067\u4fee\u5fa9\u3067\u304d\u308b\nmerge_data = merge_data_all\nmerge_data","9762efd9":"# #2017\u5e74\u306e3-5\u6708\u306e\u30c7\u30fc\u30bf\u3060\u3051\u3092\u4f7f\u3046\n# merge_data = merge_data.loc[(merge_data.year == 2017)]\n# merge_data = merge_data.loc[(merge_data.month == 1)\n#                             | (merge_data.month == 2)\n#                             | (merge_data.month == 3)\n#                             | (merge_data.month == 4)\n#                             | (merge_data.month == 5)]\n# merge_data","465298e7":"# merge_data.loc[(merge_data['month'] == 4) & (merge_data['day'] <= 22), 'set'] = 'va'\n# merge_data","2312121f":"merge_data.loc[merge_data.set == \"va\"]","f18268e8":"# merge_data = merge_data.drop(columns=\"lag7\")\n# merge_data = merge_data.drop(columns=\"lag14\")\n# merge_data = merge_data.drop(columns=\"lag21\")","4bc1e267":"train_fit = pd.DataFrame()\ntrain_fit = merge_data.loc[merge_data.set == \"train\"]\ntrain_fit_y = pd.DataFrame()\ntrain_fit_y[\"visitors\"] = train_fit.visitors\ntrain_fit_x = train_fit.drop(columns=\"visitors\")\ntrain_fit_x = train_fit_x.drop(columns=\"set\")\n\ntest_fit = pd.DataFrame()\ntest_fit = merge_data.loc[merge_data.set == \"test\"]\ntest_fit_x = test_fit.drop(columns=\"visitors\")\ntest_fit_x = test_fit_x.drop(columns=\"set\")","837ffaeb":"va_fit = pd.DataFrame()\nva_fit = merge_data.loc[merge_data.set == \"va\"]\nva_fit_y = pd.DataFrame()\nva_fit_y[\"visitors\"] = va_fit.visitors\nva_fit_x = va_fit.drop(columns=\"visitors\")\nva_fit_x = va_fit_x.drop(columns=\"set\")","9a784008":"train_fit_x","cba25506":"train_fit_y","5d92f58b":"test_fit_x","c9c95445":"test_fit_x[[\"air_store_id\",\"day_of_the_week\",\"day\",\"lag7\",\"lag14\",\"lag21\"]]","8e79a696":"va_fit_x","c9cc61d9":"va_fit_y","c10b1d44":"from xgboost import XGBClassifier as XGB\nfrom sklearn.metrics import mean_squared_log_error\n\nModel = XGB(n_estimators=100, random_state=71,max_depth=4,colsample_bylevel=0.4,\n           gamma=0.0,alpha=0.0, min_child_weight=4,subsample=0.8,colsample_bytree=0.95\n           )","e68375b6":"%%time\nModel.fit(train_fit_x, train_fit_y)","25454f66":"# # \u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\u3059\u308b\n# pred = Model.predict(va_fit_x)\n\n# # \u4e88\u6e2c\u5024\u304b\u3089RMSLE\u3092\u7b97\u51fa\u3059\u308b\n# score = np.sqrt(mean_squared_log_error(va_fit_y, pred))\n# print(\"---------------RMSLE-score----------------\")\n# score","2a245898":"pred_test = Model.predict(test_fit_x)\npred_test","1fff5cd0":"# submission_fill0 = pd.DataFrame()\n# submission_fill0[\"visitors\"] = pred\n# test_fit_x_reindex = test_fit_x.reset_index()\n# submission_fill0 = submission_fill0.join(test_fit_x_reindex[\"air_store_id\"])\n\n# submission_fill0.loc[submission_fill0['air_store_id'] == 663, 'visitors'] = 0\n# submission_fill0.loc[submission_fill0.air_store_id == 663]","c1b7cd1d":"submission = pd.DataFrame()\nsubmission[\"id\"] = test.id\nsubmission[\"visitors\"] = pred_test","397dd91d":"submission.to_csv(\"submission_21.csv\", index=False)","a5589519":"submission_ave = pd.DataFrame()\ntest_visitors_reindex = pd.DataFrame()\nsubmission_ave[\"id\"] = test.id\ntest_visitors_reindex = test_visitors.reset_index(drop=True)\nsubmission_ave[\"visitors\"] = test_visitors_reindex.visitors\nsubmission_ave","b1573bdf":"submission_ave.to_csv(\"submission_test_v.csv\", index=False)","be7c9ae1":"pred_v","242d964b":"va_fit_y","3077426f":"compare_v = va_fit_x\ncompare_v = compare_v.join(va_fit_y)\ncompare_v_reindex = compare_v.reset_index(drop=True)\npred_v[\"visitors_pred\"] = pd.DataFrame(pred)\ncompare_v_reindex = compare_v_reindex.join(pred_v)\ncompare_v_reindex[\"delta\"] = compare_v_reindex[\"visitors_pred\"] - compare_v_reindex[\"visitors\"]\ncompare_v_reindex[\"delta_abs\"] = abs(compare_v_reindex[\"delta\"])\nck = compare_v_reindex[[\"air_store_id\",\"month\",\"day\",\"day_of_the_week\",\"visitors_pred\",\"visitors\",\"delta\",\"delta_abs\"]]","7be8d106":"ck_bad = ck.sort_values(by='delta_abs', ascending=False).head(100)\nck_bad.sort_values(by='air_store_id', ascending=False).tail(50)","26f4b1ae":"sns.distplot(\n    ck_bad['visitors'], bins=100, color='#123456', label='data',\n    kde=False,\n    rug=False\n)","ae7e36ea":"visitor_453 = merge_data.loc[merge_data.air_store_id == 453]\nvisitor_453 = visitor_453[[\"air_store_id\",\"month\",\"day\",\"day_of_the_week\",\"visitors\"]]\nvisitor_453 = visitor_453.reset_index()\nvisitor_453 = visitor_453.drop(columns = \"index\")\nvisitor_453 = visitor_453.reset_index()\nvisitor_453","7c7fbbec":"sns.lineplot(x=\"index\", y=\"visitors\", data=visitor_453)","86b6daa6":"visitor_453.loc[visitor_453.day_of_the_week == 6]","4d7be072":"visitor_371 = merge_data.loc[merge_data.air_store_id == 371]\nvisitor_371 = visitor_371[[\"air_store_id\",\"month\",\"day\",\"day_of_the_week\",\"visitors\"]]\nvisitor_371 = visitor_371.reset_index()\nvisitor_371 = visitor_371.drop(columns = \"index\")\nvisitor_371 = visitor_371.reset_index()\nvisitor_371","2e78cb1b":"sns.lineplot(x=\"index\", y=\"visitors\", data=visitor_371)","9f1ad265":"visitor_371.loc[visitor_371.day_of_the_week == 4]","81419f0a":"sns.scatterplot(x=va_fit_y['visitors'], y=pred)","c24af544":"va_fit_x","9b81fa10":"pred","803add55":"column = [\"visitors_pred\"]\npred_d = pd.DataFrame(pred, columns=column)\npred_d","2f3c8bdd":"pred_d[pd.isnull(pred_d.visitors_pred)]","9b36a2e6":"va_fit_y","97864f88":"va_fit_x","9675a689":"va_fit_y_reset = va_fit_y.reset_index()\nva_df = va_fit_x.reset_index()\nva_df = va_df.join(va_fit_y_reset,lsuffix='_y')\nva_df = va_df.join(pred_d)\nva_df","e80f8ba9":"va_df[\"delta\"] = va_df[\"visitors\"] - va_df[\"visitors_pred\"]","b9e19676":"va_df = va_df.drop(columns = \"index_y\")\nva_df = va_df.drop(columns = \"air_store_id_info\")\nva_df.head(30)","e022449c":"plot = sns.scatterplot(x=va_df['visitors'], y=va_df[\"visitors_pred\"])\nplot = sns.scatterplot(x=va_df['visitors'], y=va_df[\"visitors\"])","922f68db":"sns.scatterplot(x=va_df['visitors'], y=va_df[\"delta\"])","a1d2dcaf":"%%time\n\nfor n in range(23, 31, 1):\n    \n    # \u7279\u5b9a\u306e\u65e5\u4ed8\u306b\u3064\u3044\u3066\u3001\u4e88\u6e2c\u5024\u3092test_pred\u306b\u8ffd\u52a0\u3059\u308b\n    test_pred = test_fit_x.loc[(test_fit_x.month == 4) & (test_fit_x.day == n)]\n    pred = Model.predict(test_pred)\n    test_pred[\"visitors\"] = pred\n    test_pred_0 = pd.DataFrame()\n    test_pred_0[\"visitors_predict\"] = test_pred.visitors\n\n    # visitors_predict\u3092merge_data\u306b\u7d50\u5408\u3059\u308b\n    merge_data = merge_data.merge(test_pred_0, left_index = True, right_index = True, how=\"left\")\n\n    # \u8ffd\u52a0\u3057\u305f\u3001visitors_predict\u306e\u3046\u3061\u3001NaN\u3058\u3083\u306a\u3044\u5217\u306f\u3001visitors\u306e\u5024\u306bvisitors_predict\u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\n    merge_data['visitors'] = merge_data['visitors'].where(merge_data['visitors_predict'].isnull() == True, merge_data['visitors_predict'])\n\n    # \u305d\u306e\u5f8c\u3001visitors_predict\u306f\u524a\u9664\u3059\u308b\n    merge_data = merge_data.drop(columns =\"visitors_predict\")\n\n    # 2017\u5e744\u6708\u4ee5\u964d\u306e\u30c7\u30fc\u30bf\u3067\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u518d\u5ea6\u8a08\u7b97\u3059\u308b\n    merge_data_trim = merge_data.loc[(merge_data.month >= 4) & (merge_data.year == 2017)]\n\n    # \u65e2\u306b\u3042\u308b\u7279\u5fb4\u91cf\u306f\u4e00\u65e6\u524a\u9664\u3059\u308b\n    merge_data_trim = merge_data_trim.drop(['lag7', 'lag14', 'lag21', 'last_week'], axis=1)\n\n    # \u524d\u9031\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u3092\u53d6\u5f97\u3059\u308b\n    last_week = pd.DataFrame()\n\n    # for c in range(0,829,1):\n    for c in range(0, 829,1):\n\n        last_week_0 = pd.DataFrame()\n        last_week_1 = pd.DataFrame()\n        last_week_2 = pd.DataFrame()\n        last_week_3 = pd.DataFrame()\n        last_week_4 = pd.DataFrame()\n        last_week_5 = pd.DataFrame()\n        last_week_6 = pd.DataFrame()\n\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n\n        store_d = store.loc[store.day_of_the_week == 0]\n        last_week_0[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_0[\"today\"] = store_d.visitors\n        last_week_0[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_0])\n\n        store_d = store.loc[store.day_of_the_week == 1]\n        last_week_1[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_1[\"today\"] = store_d.visitors\n        last_week_1[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_1])\n\n        store_d = store.loc[store.day_of_the_week == 2]\n        last_week_2[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_2[\"today\"] = store_d.visitors\n        last_week_2[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_2])\n\n        store_d = store.loc[store.day_of_the_week == 3]\n        last_week_3[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_3[\"today\"] = store_d.visitors\n        last_week_3[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_3])\n\n        store_d = store.loc[store.day_of_the_week == 4]\n        last_week_4[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_4[\"today\"] = store_d.visitors\n        last_week_4[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_4])\n\n        store_d = store.loc[store.day_of_the_week == 5]\n        last_week_5[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_5[\"today\"] = store_d.visitors\n        last_week_5[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_5])\n\n        store_d = store.loc[store.day_of_the_week == 6]\n        last_week_6[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_6[\"today\"] = store_d.visitors\n        last_week_6[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_6])\n\n    last_week = last_week.sort_index()\n\n    # 7,14,21\u65e5\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\u3059\u308b\n    store_all_7 = pd.DataFrame()\n    store_all_14 = pd.DataFrame()\n    store_all_21 = pd.DataFrame()\n\n    for c in range(0,829,1):\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 7\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag7\"] = store[\"visitors\"].shift(0).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_7 = pd.concat([store_all_7, store])\n\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 14\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag14\"] = store[\"visitors\"].shift(7).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_14 = pd.concat([store_all_14, store])\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 21\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag21\"] = store[\"visitors\"].shift(14).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_21 = pd.concat([store_all_21, store])\n\n    # id\u3067\u30bd\u30fc\u30c8\u3057\u306a\u304a\u3059\n    store_all_7 = store_all_7.sort_index()\n    store_all_14 = store_all_14.sort_index()\n    store_all_21 = store_all_21.sort_index()\n    # \u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u7d50\u5408\u3057\u3066lag_all\n    lag_all = pd.DataFrame()\n    lag_all[\"lag7\"] = store_all_7.lag7\n    lag_all[\"lag14\"] = store_all_14.lag14\n    lag_all[\"lag21\"] = store_all_21.lag21\n\n    # \u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3059\u308b\n    merge_data_trim = merge_data_trim.join(lag_all)\n    merge_data_trim = merge_data_trim.join(last_week, rsuffix='_last')\n    \n    # \u4e88\u6e2c\u3057\u305f\u5024\u3092\u6b8b\u3057\u3066\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u5f8c\u306b\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n    pred_visitors_all = merge_data_trim.loc[:,[\"air_store_id\",\"month\",\"day\", 'visitors','last_week']]\n\n    # \u30ea\u30fc\u30af\u3059\u308b\u5371\u967a\u304c\u3042\u308b\u306e\u3067\u304b\u5fc5\u305atoday\u3092drop\u3057\u3066\u6d88\u3059\n    merge_data_trim = merge_data_trim.drop(columns='today')\n    merge_data_trim = merge_data_trim.drop(columns='visitors')\n    merge_data_trim = merge_data_trim.drop(columns='day_of_the_week_last')\n    \n\n    # test_fit_x\u3092\u521d\u671f\u5316\u3059\u308b\n    test_fit_x = pd.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n\n    #\u3000\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u307f\u5207\u308a\u5206\u3051\u3066\u3001\u6b21\u306e\u4e88\u6e2c\u306b\u7528\u3044\u308b\n    test_fit_x = merge_data_trim.loc[merge_data_trim.set == \"test\"]\n    test_fit_x = test_fit_x.drop(columns='set')\n    \nprint(\"done\")","34219176":"%%time\n\nfor n in range(1, 32, 1):\n    \n    # \u7279\u5b9a\u306e\u65e5\u4ed8\u306b\u3064\u3044\u3066\u3001\u4e88\u6e2c\u5024\u3092test_pred\u306b\u8ffd\u52a0\u3059\u308b\n    test_pred = test_fit_x.loc[(test_fit_x.month == 5) & (test_fit_x.day == n)]\n    pred = Model.predict(test_pred)\n    test_pred[\"visitors\"] = pred\n    test_pred_0 = pd.DataFrame()\n    test_pred_0[\"visitors_predict\"] = test_pred.visitors\n\n    # visitors_predict\u3092merge_data\u306b\u7d50\u5408\u3059\u308b\n    merge_data = merge_data.merge(test_pred_0, left_index = True, right_index = True, how=\"left\")\n\n    # \u8ffd\u52a0\u3057\u305f\u3001visitors_predict\u306e\u3046\u3061\u3001NaN\u3058\u3083\u306a\u3044\u5217\u306f\u3001visitors\u306e\u5024\u306bvisitors_predict\u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\n    merge_data['visitors'] = merge_data['visitors'].where(merge_data['visitors_predict'].isnull() == True, merge_data['visitors_predict'])\n\n    # \u305d\u306e\u5f8c\u3001visitors_predict\u306f\u524a\u9664\u3059\u308b\n    merge_data = merge_data.drop(columns =\"visitors_predict\")\n\n    # 2017\u5e744\u6708\u4ee5\u964d\u306e\u30c7\u30fc\u30bf\u3067\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u518d\u5ea6\u8a08\u7b97\u3059\u308b\n    merge_data_trim = merge_data.loc[(merge_data.month >= 4) & (merge_data.year == 2017)]\n\n    # \u65e2\u306b\u3042\u308b\u7279\u5fb4\u91cf\u306f\u4e00\u65e6\u524a\u9664\u3059\u308b\n    merge_data_trim = merge_data_trim.drop(['lag7', 'lag14', 'lag21', 'last_week'], axis=1)\n\n    # \u524d\u9031\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u3092\u53d6\u5f97\u3059\u308b\n    last_week = pd.DataFrame()\n\n    # for c in range(0,829,1):\n    for c in range(0, 829,1):\n\n        last_week_0 = pd.DataFrame()\n        last_week_1 = pd.DataFrame()\n        last_week_2 = pd.DataFrame()\n        last_week_3 = pd.DataFrame()\n        last_week_4 = pd.DataFrame()\n        last_week_5 = pd.DataFrame()\n        last_week_6 = pd.DataFrame()\n\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n\n        store_d = store.loc[store.day_of_the_week == 0]\n        last_week_0[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_0[\"today\"] = store_d.visitors\n        last_week_0[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_0])\n\n        store_d = store.loc[store.day_of_the_week == 1]\n        last_week_1[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_1[\"today\"] = store_d.visitors\n        last_week_1[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_1])\n\n        store_d = store.loc[store.day_of_the_week == 2]\n        last_week_2[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_2[\"today\"] = store_d.visitors\n        last_week_2[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_2])\n\n        store_d = store.loc[store.day_of_the_week == 3]\n        last_week_3[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_3[\"today\"] = store_d.visitors\n        last_week_3[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_3])\n\n        store_d = store.loc[store.day_of_the_week == 4]\n        last_week_4[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_4[\"today\"] = store_d.visitors\n        last_week_4[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_4])\n\n        store_d = store.loc[store.day_of_the_week == 5]\n        last_week_5[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_5[\"today\"] = store_d.visitors\n        last_week_5[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_5])\n\n        store_d = store.loc[store.day_of_the_week == 6]\n        last_week_6[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_6[\"today\"] = store_d.visitors\n        last_week_6[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_6])\n\n    last_week = last_week.sort_index()\n\n    # 7,14,21\u65e5\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\u3059\u308b\n    store_all_7 = pd.DataFrame()\n    store_all_14 = pd.DataFrame()\n    store_all_21 = pd.DataFrame()\n\n    for c in range(0,829,1):\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 7\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag7\"] = store[\"visitors\"].shift(0).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_7 = pd.concat([store_all_7, store])\n\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 14\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag14\"] = store[\"visitors\"].shift(7).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_14 = pd.concat([store_all_14, store])\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 21\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag21\"] = store[\"visitors\"].shift(14).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_21 = pd.concat([store_all_21, store])\n\n    # id\u3067\u30bd\u30fc\u30c8\u3057\u306a\u304a\u3059\n    store_all_7 = store_all_7.sort_index()\n    store_all_14 = store_all_14.sort_index()\n    store_all_21 = store_all_21.sort_index()\n    # \u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u7d50\u5408\u3057\u3066lag_all\n    lag_all = pd.DataFrame()\n    lag_all[\"lag7\"] = store_all_7.lag7\n    lag_all[\"lag14\"] = store_all_14.lag14\n    lag_all[\"lag21\"] = store_all_21.lag21\n\n    # \u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3059\u308b\n    merge_data_trim = merge_data_trim.join(lag_all)\n    merge_data_trim = merge_data_trim.join(last_week, rsuffix='_last')\n    \n    # \u4e88\u6e2c\u3057\u305f\u5024\u3092\u6b8b\u3057\u3066\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u5f8c\u306b\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n    pred_visitors_all = merge_data_trim.loc[:,[\"set\", \"air_store_id\",\"month\",\"day\", 'visitors','last_week']]\n\n    # \u30ea\u30fc\u30af\u3059\u308b\u5371\u967a\u304c\u3042\u308b\u306e\u3067\u304b\u5fc5\u305atoday\u3092drop\u3057\u3066\u6d88\u3059\n    merge_data_trim = merge_data_trim.drop(columns='today')\n    merge_data_trim = merge_data_trim.drop(columns='visitors')\n    merge_data_trim = merge_data_trim.drop(columns='day_of_the_week_last')\n    \n\n    # test_fit_x\u3092\u521d\u671f\u5316\u3059\u308b\n    test_fit_x = pd.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n\n    #\u3000\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u307f\u5207\u308a\u5206\u3051\u3066\u3001\u6b21\u306e\u4e88\u6e2c\u306b\u7528\u3044\u308b\n    test_fit_x = merge_data_trim.loc[merge_data_trim.set == \"test\"]\n    test_fit_x = test_fit_x.drop(columns='set')\n    \nprint(\"done\")","a1d6edc4":"pred = pred_visitors_all.loc[(pred_visitors_all.set == \"test\")]\npred","99d8e202":"%%time\n\nfor n in range(23, 31, 1):\n    \n    # \u7279\u5b9a\u306e\u65e5\u4ed8\u306b\u3064\u3044\u3066\u3001\u4e88\u6e2c\u5024\u3092test_pred\u306b\u8ffd\u52a0\u3059\u308b\n    test_pred = test_fit_x.loc[(test_fit_x.month == 4) & (test_fit_x.day == n)]\n    pred = Model.predict(test_pred)\n    test_pred[\"visitors\"] = pred\n    test_pred_0 = pd.DataFrame()\n    test_pred_0[\"visitors_predict\"] = test_pred.visitors\n\n    # visitors_predict\u3092merge_data\u306b\u7d50\u5408\u3059\u308b\n    merge_data = merge_data.merge(test_pred_0, left_index = True, right_index = True, how=\"left\")\n\n    # \u8ffd\u52a0\u3057\u305f\u3001visitors_predict\u306e\u3046\u3061\u3001NaN\u3058\u3083\u306a\u3044\u5217\u306f\u3001visitors\u306e\u5024\u306bvisitors_predict\u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\n    merge_data['visitors'] = merge_data['visitors'].where(merge_data['visitors_predict'].isnull() == True, merge_data['visitors_predict'])\n\n    # \u305d\u306e\u5f8c\u3001visitors_predict\u306f\u524a\u9664\u3059\u308b\n    merge_data = merge_data.drop(columns =\"visitors_predict\")\n\n    # 2017\u5e744\u6708\u4ee5\u964d\u306e\u30c7\u30fc\u30bf\u3067\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u518d\u5ea6\u8a08\u7b97\u3059\u308b\n    merge_data_trim = merge_data.loc[(merge_data.month >= 4) & (merge_data.year == 2017)]\n\n    # \u65e2\u306b\u3042\u308b\u7279\u5fb4\u91cf\u306f\u4e00\u65e6\u524a\u9664\u3059\u308b\n    merge_data_trim = merge_data_trim.drop(['lag7', 'lag14', 'lag21', 'last_week'], axis=1)\n\n    # \u524d\u9031\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u3092\u53d6\u5f97\u3059\u308b\n    last_week = pd.DataFrame()\n\n    # for c in range(0,829,1):\n    for c in range(0, 829,1):\n\n        last_week_0 = pd.DataFrame()\n        last_week_1 = pd.DataFrame()\n        last_week_2 = pd.DataFrame()\n        last_week_3 = pd.DataFrame()\n        last_week_4 = pd.DataFrame()\n        last_week_5 = pd.DataFrame()\n        last_week_6 = pd.DataFrame()\n\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n\n        store_d = store.loc[store.day_of_the_week == 0]\n        last_week_0[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_0[\"today\"] = store_d.visitors\n        last_week_0[\"last_week\"] = store_d[\"visitors\"].shift(1)\n        # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_0])\n\n        store_d = store.loc[store.day_of_the_week == 1]\n        last_week_1[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_1[\"today\"] = store_d.visitors\n        last_week_1[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_1])\n\n        store_d = store.loc[store.day_of_the_week == 2]\n        last_week_2[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_2[\"today\"] = store_d.visitors\n        last_week_2[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_2])\n\n        store_d = store.loc[store.day_of_the_week == 3]\n        last_week_3[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_3[\"today\"] = store_d.visitors\n        last_week_3[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_3])\n\n        store_d = store.loc[store.day_of_the_week == 4]\n        last_week_4[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_4[\"today\"] = store_d.visitors\n        last_week_4[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_4])\n\n        store_d = store.loc[store.day_of_the_week == 5]\n        last_week_5[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_5[\"today\"] = store_d.visitors\n        last_week_5[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_5])\n\n        store_d = store.loc[store.day_of_the_week == 6]\n        last_week_6[\"day_of_the_week\"] = store_d.day_of_the_week\n        last_week_6[\"today\"] = store_d.visitors\n        last_week_6[\"last_week\"] = store_d[\"visitors\"].shift(1)\n            # \u6b20\u640d\u306f\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        last_week_0 = last_week_0.fillna(ave)\n        last_week = pd.concat([last_week, last_week_6])\n\n    last_week = last_week.sort_index()\n\n    # 7,14,21\u65e5\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\u3059\u308b\n    store_all_7 = pd.DataFrame()\n    store_all_14 = pd.DataFrame()\n    store_all_21 = pd.DataFrame()\n\n    for c in range(0,829,1):\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 7\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag7\"] = store[\"visitors\"].shift(0).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_7 = pd.concat([store_all_7, store])\n\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 14\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag14\"] = store[\"visitors\"].shift(7).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_14 = pd.concat([store_all_14, store])\n\n        # c\u3067\u6307\u5b9a\u3057\u305f\u5e97\u8217id\u3092\u6301\u3064DataFrame\u3092\u62fe\u3063\u3066\u304f\u308b(\u5e97\u8217\u5225\u306b\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u5f97\u308b\u305f\u3081\u306b)\n        store = merge_data_trim.loc[merge_data_trim.air_store_id == c]\n        # 21\u5468\u671f\u524d\u306elag\u3092\u53d6\u5f97\n        x_lag = pd.DataFrame()\n        x_lag[\"lag21\"] = store[\"visitors\"].shift(14).rolling(window=7).mean()\n        store = store.join(x_lag)\n        # \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\n        ave = store_visitors['ave'][c]\n        store = store.fillna(ave)\n        store_all_21 = pd.concat([store_all_21, store])\n\n    # id\u3067\u30bd\u30fc\u30c8\u3057\u306a\u304a\u3059\n    store_all_7 = store_all_7.sort_index()\n    store_all_14 = store_all_14.sort_index()\n    store_all_21 = store_all_21.sort_index()\n    # \u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u7d50\u5408\u3057\u3066lag_all\n    lag_all = pd.DataFrame()\n    lag_all[\"lag7\"] = store_all_7.lag7\n    lag_all[\"lag14\"] = store_all_14.lag14\n    lag_all[\"lag21\"] = store_all_21.lag21\n\n    # \u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3059\u308b\n    merge_data_trim = merge_data_trim.join(lag_all)\n    merge_data_trim = merge_data_trim.join(last_week, rsuffix='_last')\n    \n    # \u4e88\u6e2c\u3057\u305f\u5024\u3092\u6b8b\u3057\u3066\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u5f8c\u306b\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n    pred_visitors_all = merge_data_trim.loc[:,[\"air_store_id\",\"month\",\"day\", 'visitors','last_week']]\n\n    # \u30ea\u30fc\u30af\u3059\u308b\u5371\u967a\u304c\u3042\u308b\u306e\u3067\u304b\u5fc5\u305atoday\u3092drop\u3057\u3066\u6d88\u3059\n    merge_data_trim = merge_data_trim.drop(columns='today')\n    merge_data_trim = merge_data_trim.drop(columns='visitors')\n    merge_data_trim = merge_data_trim.drop(columns='day_of_the_week_last')\n    \n\n    # test_fit_x\u3092\u521d\u671f\u5316\u3059\u308b\n    test_fit_x = pd.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n\n    #\u3000\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u307f\u5207\u308a\u5206\u3051\u3066\u3001\u6b21\u306e\u4e88\u6e2c\u306b\u7528\u3044\u308b\n    test_fit_x = merge_data_trim.loc[merge_data_trim.set == \"test\"]\n    test_fit_x = test_fit_x.drop(columns='set')\n    \nprint(\"done\")","fcf9f054":"# index\u3067\u30bd\u30fc\u30c8\u3059\u308b\npred = pred.sort_index()\npred","6c078800":"pred = pred.reset_index(drop=True)\npred","d5cae2f0":"test_x_enc","b81677cf":"# pred_visitors_all.visitors\nsubmission_ck = test_x_enc\nsubmission_ck = submission_ck.join(pred.visitors)\nsubmission_ck = submission_ck.join(pred.air_store_id, lsuffix='_pred')\nsubmission_ck\n# submission.at[252108,\"visitors\"]","be85c999":"sns.scatterplot(x=submission_ck['air_store_id_pred'], y=submission_ck['air_store_id'])","be438b6e":"test","d44d6ca9":"submission = pd.DataFrame()\nsubmission[\"id\"] = test.id\nsubmission[\"visitors\"] = submission_ck.visitors","b13611c4":"submission","5a1de446":"# submission = pd.DataFrame({\"id\":test[\"id\"], \"visitors\": pred})\n# submission","85ae23c1":"submission.to_csv(\"submission_13.csv\", index=False)","88f269c2":"# import the modules we'll need\nfrom IPython.display import HTML\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n# download it (will only work for files < 2MB or so)\ndef create_download_link(df, title = \"Download CSV file\", filename = \"submission.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\n# create a link to download the dataframe\ncreate_download_link(submission)","8b6d2d5e":"submit = pd.read_csv(\"\/kaggle\/working\/submission_05.csv\")","2e9f104c":"# \u63d0\u51fa\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080","934a4417":"# \u5e97\u8217\u60c5\u5831\u3092\u5229\u7528\u3059\u308b","7522c580":"# \u66dc\u65e5\u306e\u5f71\u97ff\u5ea6\n\u6708\u306e\u6765\u5e97\u8005\u6570\u306e\u5408\u8a08\u3001\u5e73\u5747\u3001max,min\u3092\u66dc\u65e5\u3054\u3068\u306b\u7b97\u51fa","8767a1a9":"# \u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b<br>\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3067\u304d\u308b\u3002","18508093":"# \u5e97\u8217\u3054\u3068\u306b\u3001\u6765\u5e97\u8005\u6570\u304c\u591a\u3044\u66dc\u65e5\u306eindex\u3092\u3082\u3064DataFrame\u3092\u4f5c\u6210\u3059\u308b\n\u5168\u3066\u306e\u884c\u306b\u3064\u3044\u3066\u3001\u5e97\u8217\u3067\u6700\u3082\u6765\u5e97\u8005\u6570\u304c\u591a\u3044\u66dc\u65e5\u3092indx\u3067\u8fd4\u3059\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\n\u7279\u5fb4\u91cf\u3092test_x\u306b\u8ffd\u52a0\u3059\u308b","fc6052fd":"# \u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u304b\u3051\u308b\ntrain_all_le\u3068\u3044\u3046DataFrame\u306b\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u304b\u3051\u308b\u3002<br>\nair_store_id\u306b\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u304b\u3051\u3089\u308c\u3066\u6570\u5024\u306b\u5909\u63db\u3055\u308c\u308b<br>","dacf55cf":"# \u4e88\u6e2c\u30c7\u30fc\u30bf\u3068\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u308b","13b63787":"# 5\u6708\u306e\u30c7\u30fc\u30bf\u3092\u4e88\u6e2c\u3059\u308b(private_leaderboard\u3068\u601d\u308f\u308c\u308b)\n\u57fa\u672c\u7684\u306b\u30014\u6708\u3068\u540c\u3058\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\u3059\u308b","a8e3212f":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306evisitors\u3092\u57cb\u3081\u308b\n\u4e8b\u524d\u306b\u4e88\u6e2c\u3057\u3066\u304a\u304f\u3002visitors_pre_pred\u3092\u5165\u308c\u308b","1ac0a708":"# \u5168\u3066\u306eID\u3092\u6301\u3064DataFrame\u3092\u4f5c\u6210\u3059\u308b","0c57d9b6":"# \u5e97\u8217\u3054\u3068\u306b\u3001train\u30c7\u30fc\u30bf\u304b\u3089\u7279\u5fb4\u91cf\u3092\u4f5c\u6210\n* \u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\n* \u5404\u66dc\u65e5\u306e\u6765\u5e97\u8005\u306e\u5e73\u5747(\u65e5\u66dc\u65e5\uff5e\u571f\u66dc\u90e8)\n* \u795d\u65e5\u306e\u6765\u5e97\u8005\u6570\u306e\u5e73\u5747\n* \u5e97\u3054\u3068\u306e\u6765\u5e97\u8005\u6570\u306emax\n* \u5e97\u3054\u3068\u306e\u6765\u5e97\u8005\u6570\u306emin","5b713fba":"# v_ave\u3067\u57cb\u3081\u3066\u3044\u304f","b62a131c":"# \u5e73\u5747\u6765\u5e97\u8005\u6570\u306e\u591a\u3044\u66dc\u65e5(\u30d4\u30fc\u30af\u66dc\u65e5)\u3092\u8abf\u3079\u308b\nair_store_id\u4e00\u89a7\u306b\u3001\u6700\u3082\u5e73\u5747\u6765\u5e97\u8005\u6570\u304c\u591a\u3044\u66dc\u65e5\u3092\u8ffd\u52a0\u3059\u308b","fcadda14":"# \u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u7279\u5fb4\u91cf\u3092\u7d50\u5408\n\u3053\u308c\u3067\u3001\u5e97\u8217ID\u3054\u3068\u306b\u5ea7\u6a19\u3001\u30a8\u30ea\u30a2\u3001\u30b8\u30e3\u30f3\u30eb\u304c\u5165\u3063\u305fDataframe\u300cair_store_info\u300d\u3092\u5f97\u3089\u308c\u308b","4d594db3":"# hold-out\u3067\u306evalidation\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\n\u6642\u7cfb\u5217\u7684\u306b\u3046\u3057\u308d\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u5358\u7d14\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3<br>\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306a\u3044\u5834\u5408\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8","f152439b":"# \u5148\u306b\u3001air_store_id\u4e00\u89a7\u3092\u7528\u610f\u3057\u3066\u304a\u304f","048bf1e7":"# xgb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c7a\u5b9a","4f27ce5c":"# \u5168\u671f\u9593\u306e\u30c7\u30fc\u30bf\u3092merge_data_all\u3068\u3057\u3066\u6b8b\u3059","d34ceeb6":"# \u63d0\u51fa\u30c7\u30fc\u30bf\u306e\u4f5c\u6210","5a735b90":"# \u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306e\u4f5c\u6210","3cf6d6f4":"# merge_data\u306b\u7d71\u5408\ntest\u30c7\u30fc\u30bf\u306evisitors\u3092\u3001train\u30c7\u30fc\u30bf\u306e\u5e97\u8217\u3054\u3068\u306e\u66dc\u65e5\u3054\u3068\u5e73\u5747\u3067\u4e0e\u3048\u3066\u307f\u308b","3b59ef59":"# \u30e2\u30c7\u30eb\u5b66\u7fd2\u3057\u3066\u4e88\u6e2c\u3001RMSLE\u3092\u7b97\u51fa\n* xgboost\u3067\u5b66\u7fd2\u3055\u305b\u308b\n* 4\u6708(validation\u30c7\u30fc\u30bf)\u306evisitors\u3092hold-out\u3067\u4e88\u6e2c\n* RMSLE\u3092\u8a08\u7b97\u3059\u308b","6449fbd8":"# \u7279\u5fb4\u91cf\u3092\u843d\u3068\u3057\u3066\u307f\u308b\n\u610f\u5473\u306e\u3042\u308b\u7279\u5fb4\u91cf\u3001\u306a\u3044\u7279\u5fb4\u91cf\u3092\u6574\u7406\u3057\u305f\u3044(\u57fa\u672c\u7684\u306b\u5168\u90e8\u3042\u3063\u305f\u65b9\u304c\u3044\u3044\u8a8d\u8b58\u3060\u304c)\n* \u30e9\u30b0\u7279\u5fb4\u91cflag7-21\u3092\u3068\u3089\u306a\u3044\u3060\u3051\u3067RMSLE\u304c1.10\u21921.57\u306b\u4e0b\u304c\u3063\u305f\n","92b1697c":"# \u63d0\u51fa\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\nsubmission\u30c7\u30fc\u30bf\u306e\u5224\u5b9a\u306b\u305f\u3081\u306b\u306f\u3001columns\u540d\u300cvisitors\u300d\u304c\u5165\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b","35065059":"# 4\u6708\u306e\u6765\u5e97\u8005\u6570\u3092\u4e88\u6e2c\u3059\u308b\n\u307e\u305a\u30014\u6708\u306e\u6765\u5e97\u8005\u6570\u3092\u4e88\u6e2c\u3059\u308b\u3002","b366e2df":"# \u5404\u66dc\u65e5\u3067\u6765\u5e97\u8005\u6570\u306e\u60c5\u5831\u3092\u8868\u793a","402effb1":"# \u8aa4\u5dee\u306e\u5927\u304d\u3044\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b","0acba372":"# \u6765\u5e97\u8005\u5e73\u5747\u5024\u304b\u3089\u7b97\u51fa\ntest_fit_x\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5165\u308c\u305fvisitors\u306e\u5024\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3059\u308b\u3002<br>\n3-4\u6708\u306e\u66dc\u65e5\u3054\u3068\u306e\u6765\u5e97\u8005\u6570\u306e\u5e73\u5747\u3092\u3068\u3063\u3066test\u30c7\u30fc\u30bf\u306b\u5f53\u3066\u306f\u3081\u308b\u3068\u3001<br>\nPriveate\u30670.55572\u306e\u30b9\u30b3\u30a2\u304c\u5f97\u3089\u308c\u308b","bfd1b29d":"# \u65e5\u4ed8\u60c5\u5831\u304b\u3089\u66dc\u65e5\u3092\u53d6\u5f97","be91f4b6":"# \u5b66\u7fd2\u3092\u65e9\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30fc\u30bf\u3092\u7d5e\u308b\n\u30c7\u30fc\u30bf\u91cf\u304c\u591a\u304f\u3001xgboost\u306e\u5b66\u7fd2\u306b30min\u304b\u304b\u308b\u306e\u3067\u30012017\u5e744\u6708-5\u6708\u3060\u3051\u306b\u30c7\u30fc\u30bf\u3092\u7d5e\u308b\u3002<br>\n28\u4e07\u884c\u21924.7\u4e07\u884c\u306b\u6e1b\u3089\u305b\u308b\u3002\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u6570\u3067\u8a00\u3048\u3070\u300125.5\u4e07\u21922.2\u4e07<br><br>\n\u3010\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u7d5e\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3011","bedb9b0a":"# \u5207\u308a\u5206\u3051\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\nid\u3092\u5f15\u6570\u306b\u3057\u3066\u3001\u5206\u5272\u5f8c\u306e\u5e97\u8217\u540d\u3068\u65e5\u4ed8\u3092\u8fd4\u3059\u95a2\u6570\u3092\u305d\u308c\u305e\u308c\u3064\u304f\u308b","936bb18f":"# \u66dc\u65e5\u3092\u53d6\u5f97\u3059\u308b\n\u4e00\u756a\u52b9\u304f\u3068\u601d\u3063\u3066\u3044\u308b","80085311":"# train_x\u3068train_y\u3092\u7d50\u5408\u3057\u3066train_all\u306b\u3059\u308b","794a8197":"# train_all\u3068test_all\u3092\u30de\u30fc\u30b8\u3057merge_data\u3068\u3059\u308b\n\u3053\u308c\u3067\u3001train\u3068test\u304c\u540c\u3058\u5f62\u5f0f\u3067\u5f97\u3089\u308c\u305f\u3002\n\u4ee5\u964d\u306f\u3001train_all\u3068test_all\u3092\u30de\u30fc\u30b8\u3057\u3066merge_data\u306b\u3057\u3066\u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3057\u3001<br>\n\u6700\u7d42\u7684\u306b\u5207\u308a\u5206\u3051\u308b\u4e8b\u306b\u3059\u308b","a1df06a2":"# EDA\n\u5e97\u8217ID\u3054\u3068\u306b\u30c7\u30fc\u30bf\u304c\u3044\u304f\u3064\u3042\u308b\u306e\u304b\u3001\u65e5\u4ed8\u304c\u4f55\u7a2e\u985e\u3042\u308b\u306e\u304b<br>\ntrain\u306b\u542b\u307e\u308c\u308b\u306e\u306f829\u5e97\u8217\u3067\u3001\u5404\u5e97\u8217\u306b\u306f100\uff5e300\u65e5\u3076\u3093\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b<br>\ntest\u306b\u542b\u307e\u308c\u308b\u306e\u306f821\u5e97\u8217\u3067\u3001\u5404\u5e97\u8217\u306b\u306f39\u65e5\u3076\u3093\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b<br>","30afe783":"# \u5e97\u8217\u3054\u3068\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\n\u5e73\u5747115\u4eba\u6765\u5e97\u3059\u308b\u5e97\u8217(id71\u756a)\u304c\u4e00\u756a\u591a\u3044","5c6e72f5":"# \u66dc\u65e5\u3068\u795d\u65e5\u60c5\u5831\u3092\u30de\u30fc\u30b8\u3059\u308b\ntrain\u306evisit_date\u306b\u3064\u3044\u3066\u3001date_info\u306e\u60c5\u5831\u3092\u53c2\u7167\u3057\u3066\u7d50\u5408\u3059\u308b","97c7579a":"# \u30e9\u30b0\u7279\u5fb4\u91cf\u3092merge_data\u306b\u8ffd\u52a0","0649a1b3":"# \u6700\u3082visitors\u304c\u591a\u3044\u5217\u306eindex\u3092\u8fd4\u3059","16ba44ca":"# \u53ef\u8996\u5316\u3059\u308b","9569218f":"# visit_date\u306f\u524a\u9664\n\u4ed6\u306eday,year,month\u3067\u4ee3\u66ff\u3067\u304d\u308b\u306e\u3067","d897f32b":"# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u5909\u63db\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092LabelEncoder\u3067\u5b9f\u65bd\u3059\u308b\u305f\u3081\u306b\u3001<br>\n\u5168\u3066\u306e\u30ab\u30c6\u30b4\u30ea\u5909\u6570(\u3053\u3053\u3060\u3068\u5e97\u8217\u540d)\u3092\u53d6\u5f97\u3059\u308b<br>\n# \u307e\u305a\u3001air_store_id\u3060\u3051\u3092\u3082\u3064DataFrame\u3092\u5b9a\u7fa9\u3059\u308b","3ee3d917":"# \u76f4\u8fd14\u6708\u306e\u30c7\u30fc\u30bf\u3092\u773a\u3081\u308b\n\u305f\u3076\u3093\u30014\u6708\u304c\u4e00\u756a\u50be\u5411\u7684\u306b\u8fd1\u3044\u306f\u305a\u3002<br>\n\u5e97\u8217ID = 7 \u306e\u5e97\u306e\uff14\u6708\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b<br>\n(\u3061\u306a\u307f\u306b\u30014\u6708\u306e\u30c7\u30fc\u30bf\u306e\u306a\u3044\u5e97\u8217\u3082\u3042\u308b)","1f2fcde3":"# \u30c7\u30fc\u30bf\u578b\u3092\u78ba\u8a8d\n\u3069\u3053\u304b\u3067\u3001train_x\u3001train_y\u3068\u3082\u306b<br>\nyear\u304cint64\u3067\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b","88524d08":"# train_y\u304c200\u4ee5\u4e0a\u306e\u3082\u306e\u306f\u5916\u308c\u5024\u3068\u3057\u3066\u6765\u5e97\u8005\u6570\u30920\n\u672c\u5f53\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u306b\u3059\u3079\u304d\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044","c42e0d25":"# \u65e5\u4ed8\u60c5\u5831\u3092Year,Month,Day\u306b\u5909\u66f4","69e9fdb0":"# \u30c7\u30fc\u30bf\u578b\u3092int64\u306b\u5909\u66f4","8c9809e3":"# id\u3068visit_date\u884c\u306f\u524a\u9664\nid\u306f\u4e0d\u8981\u3002\u3053\u308c\u3067\u3001test_x\u3068train_x\u304c\u540c\u3058\u5f62\u5f0f\u3067\u53d6\u5f97\u3067\u304d\u305f<br>\nvisit_date\u3082\u3001month,day,year\u3067\u4ee3\u66ff\u3057\u3066\u3044\u308b\u306e\u3067\u524a\u9664","b4e4c865":"# test_x\u306eGW\u3092\u4f11\u65e5(\u571f\u66dc)\u306b\u5909\u66f4\ntest_x\u306b\u542b\u307e\u308c\u308bGW(5\/3-5\/5)\u306e\u66dc\u65e5\u3092\u5909\u66f4\u3059\u308b<br>\n\u6761\u4ef6\u306b\u3088\u308aday_of_the_week\u3092\u66f8\u304d\u63db\u3048\u308b<br>\n\u5f53\u521d\u65e5\u66dc\u65e5\u306b\u3057\u3066\u3044\u305f\u304c\u3001\u571f\u66dc\u65e5\u306e\u65b9\u304cave_visitors\u304c\u591a\u3044\u306e\u3067\u571f\u66dc\u306b\u5909\u3048\u305f","d41bcc2a":"# \u65e5\u4ed8\u3092\u5207\u308a\u5206\u3051\u308b\n\u6bce\u6708\u3007\u65e5\u306f\u5b89\u3044\u3001\u3068\u304b\u3001\u3007\u6708\u306f\u30bb\u30fc\u30eb\uff01\u3068\u304b\u3042\u308a\u305d\u3046\u306a\u306e\u3067","4e33d3e3":"# \u66dc\u65e5\u3054\u3068\u306e\u6765\u5e97\u8005\u6570\u3092\u78ba\u8a8d\u3059\u308b\n\u5e73\u5747\u306f\u3001\u5e73\u65e517-19\u4eba\u3001\u91d1\u66dc\u65e523\u4eba\u3001\u571f\u66dc\u65e526\u4eba\u3001\u65e5\u66dc\u65e523\u4eba<br>\n\u6700\u5927\u6765\u5e97\u8005\u6570\u304c800\u4eba\u8d85\u3048\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3082\u3042\u308b\u306e\u3067\u3001\u5916\u308c\u5024\u306f\u7121\u304f\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082","702e22da":"# Recruit Restaurant Visitor Forecasting\n\u8868\u984c\u306e\u30b3\u30f3\u30da\u306e\u30b3\u30fc\u30c9v2<br>\n\u51e6\u7406\u6642\u9593\u304a\u3088\u305d70min<br>\n* \u7279\u5fb4\u91cf\u3092\u4f5c\u6210(\u65e5\u4ed8\u3001\u5e97\u8217\u306e\u30d4\u30fc\u30af\u66dc\u65e5\u3001\u5ea7\u6a19\u3001\u30ab\u30c6\u30b4\u30ea)\n* \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092\u5909\u63db(\u5e97\u8217ID\u3068\u5e97\u8217\u30ab\u30c6\u30b4\u30ea)\n* \u30e9\u30b0\u7279\u5fb4\u91cf(7,14,21\u65e5\u524d\u306e\u5e73\u5747\u3068\u3001\u76f4\u524d\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570)\n<br><br>\n\u3010\u30e2\u30c7\u30eb\u5b66\u7fd2\u65b9\u6cd5\u3011<br>\n* 4\/23\u306evisitors\u3092\u4e88\u6e2c\n* 4\/23\u306evisitors\u6570\u3092\u8e0f\u307e\u3048\u305f\u7279\u5fb4\u91cf\u3092\u751f\u6210\u3059\u308b\u3000\u2190\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u4f5c\u308b\u306e\u306b\u30eb\u30fc\u30d7\u3055\u305b\u3066\u3044\u308b\u306e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\n* 4\/24\u306evisitors\u3092\u4e88\u6e2c\n* 4\/24\u306evisitors\u6570\u3092\u8e0f\u307e\u3048\u305f\u7279\u5fb4\u91cf\u3092\u751f\u6210\u3059\u308b\n<br>\nhttps:\/\/www.kaggle.com\/c\/recruit-restaurant-visitor-forecasting","5cb899a1":"# \u63d0\u51fa\u3057\u305f\u30c7\u30fc\u30bf\u3068\u3001\u4e88\u6e2c\u306b\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3059\u308b","1ea51f7c":"# 2\u3064(train_le\u3068test_le)\u3092\u5408\u4f53\u3059\u308b","fcbbdd6e":"# date_info\u3092\u78ba\u8a8d","1809dd65":"# \u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u5e97\u8217\u306e\u30b8\u30e3\u30f3\u30eb\u3092\u5206\u3051\u308b\n\u30fbstore_id<br>\n\u30fb\u30b8\u30e3\u30f3\u30eb<br>\n\u30fb\u30a8\u30ea\u30a2<br>\n\u306b\u5bfe\u3057\u3066\u305d\u308c\u305e\u308c\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b","428fa7d8":"# test_x\u306eid\u3092\u5207\u308a\u5206\u3051\u308b\ntest_x(sample_submit)\u306eid\u304c\u3001\u5e97\u8217\u540d\u3068\u65e5\u4ed8\u3067\u5225\u3005\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001<br>\ntrain_x(air_visit_data)\u3068\u540c\u3058\u5f62\u5f0f(air_store_id\u3068visit_date)\u306b\u306a\u308b\u3088\u3046\u306b<br>\n\u5207\u308a\u5206\u3051\u305f\u3044","8281318e":"# train\u30c7\u30fc\u30bf\u3092\u3001\u76ee\u7684\u5909\u6570\u3068\u8aac\u660e\u5909\u6570\u306b\u5206\u3051\u308b","7aa6cb66":"# \u524d\u9031\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u3092\u7b97\u51fa\u3057\u3066last_week\u306b\u6301\u305f\u305b\u308b\n\u524d\u9031\u306e\u540c\u3058\u66dc\u65e5\u306e\u6765\u5e97\u8005\u6570\u3092\u3001\u5e97\u8217\u3054\u3068\u306b\u6c42\u3081\u308b\u3002<br>\n\u51e6\u7406\u306b30\u79d2\u304f\u3089\u3044\u304b\u304b\u308b\n","33f144f9":"# \u65b0\u3057\u304f\u4f5c\u3063\u305f\u5909\u6570(air_store_id\u3068visit_date)\u3092\u3001test_x\u306b\u8ffd\u52a0\u3059\u308b","a2fc9fdb":"# 4\/1-4\/22\u307e\u3067\u3092validation\u30c7\u30fc\u30bf\u3068\u3059\u308b\n4\/23\u4ee5\u964d\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf","806000ae":"\u4e0a\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u5207\u308a\u5206\u3051\u3089\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f","c1e9ee6f":"# \u66dc\u65e5\u306e\u5217\u3092\u8ffd\u52a0","ae91ea6d":"# \u5404\u5e97\u8217\u306e\u6765\u5e97\u8005\u6570\u60c5\u5831\u3082\u8ffd\u52a0\nv_ave\u3067\u7b97\u51fa\u3057\u305f\u3001\u5404\u5e97\u8217\u306e\u60c5\u5831\u3092\u8ffd\u52a0","74202334":"# merge_data\u306b\u5e97\u8217\u60c5\u5831\u3092\u8ffd\u52a0\nvlookup\u307f\u305f\u3044\u306a\u64cd\u4f5c\u3092\u3059\u308b\u3002\u53c2\u7167\u3057\u3066\u8ffd\u52a0\u3059\u308b\u307f\u305f\u3044\u306a<br>\nmerge_data\u306b\u306f\u3001train\u3082test\u3082\u3001x\u3082y\u3082\u5168\u90e8\u542b\u307e\u308c\u308b<br>\nair_store_info\u306e\u5e97\u8217ID\u3054\u3068\u306e\u60c5\u5831\u3092\u3001\u5404\u30c7\u30fc\u30bf\u306b\u8ffd\u52a0\u3059\u308b","b3e0a55f":"# year\u306e\u30c7\u30fc\u30bf\u578b\u3092int64\u306b\u5909\u66f4\nxgboost\u3067\u8aad\u3081\u308b\u578b\u306b\u5909\u66f4\u3059\u308b","6a887d94":"# \u30e9\u30b0\u7279\u5fb4\u91cf\u306e\u8ffd\u52a0\n 7,14,21\u65e5\u5468\u671f\u306e\u30e9\u30b0\u7279\u5fb4\u91cf\u3092\u7b97\u51fa\u3057\u3066lag_all\u306b\u6301\u305f\u305b\u308b","a51153c6":"# year,month,day\u306e\u5217\u3092\u4f5c\u6210","db37e9f8":"# \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u5929\u6c17\u3084\u65e5\u4ed8\u306e\u60c5\u5831\u3082\u5165\u308c\u3066\u3044\u308b\u304c\u3001\u4f7f\u3063\u3066\u3044\u306a\u3044","429d625a":"# sample submission\u3092\u8aad\u307f\u8fbc\u307f\u3001test\u30c7\u30fc\u30bf\u306b\u4f7f\u3046","9c857f96":"# \u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305fDataFrame\u3092train_x,test_x\u306b\u7d50\u5408\n\u5148\u306b\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u524d\u306eair_store_id\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u3001\u7d50\u5408\u3059\u308b<br>\n\u30a8\u30f3\u30b3\u524d\u5f8c\u306e\u5bfe\u5fdc\u8868\u3092\u4f5c\u308a\u305f\u3044\u306e\u3067\u3001train_x_enc\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304f","cf98a3b3":"# train\u30bb\u30c3\u30c8\u3068\u308f\u304b\u308b\u3088\u3046\u306b\u30bf\u30b0\u4ed8\u3051\u3059\u308b","5780efe9":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c","0323328c":"# \u4ee5\u4e0a\u3067\u3001\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306f\u7d42\u4e86\n\n# \u30c7\u30fc\u30bf\u3092train_fit\u3068test_fit\u306b\u5206\u5272\u3059\u308b\nmodel\u5b66\u7fd2\u306b\u4f7f\u3046\u30c7\u30fc\u30bf\u3068\u3057\u3066\u5206\u5272\u3059\u308b\u3002\n\u6765\u5e97\u8005\u6570\u304c0\u3088\u308a\u4ee5\u4e0a\u306e\u5834\u5408\u3001train\u30c7\u30fc\u30bf\u3068\u3057\u3066\u8a8d\u8b58\u3059\u308b","20d6098c":"# \u5e73\u5747\u6765\u5ba2\u6570\u306e\u591a\u3044\u66dc\u65e5(\u30d4\u30fc\u30af\u66dc\u65e5)\u3068\u7d50\u5408\u3059\u308b\n\u5148\u306b\u4f5c\u6210\u3057\u305f\u3001\u5e97\u8217\u3054\u3068\u306b\u6700\u3082\u5e73\u5747\u6765\u5ba2\u6570\u304c\u591a\u3044\u66dc\u65e5\u306eDataFrame\u300call_id\u300d\u3068\u7d50\u5408\u3059\u308b","0572014b":"# ID=453\u306e\u5e97\u8217\u306e\u6765\u5e97\u8005\u6570\u306e\u7d4c\u7def\u3092\u898b\u308b","6fc78a7a":"# \u5e97\u8217110\u3068663\u306f\u3001\u5168\u30660\u3067\u57cb\u3081\u308b\n\u3068\u601d\u3063\u305f\u304c\u3001test\u30c7\u30fc\u30bf\u4e2d\u306b110,663\u306f\u5b58\u5728\u3057\u306a\u3044\u3089\u3044\u3044","69a67747":"# \u6765\u5e97\u8005\u6570\u304c\u591a\u3044\u66dc\u65e5\u306eindex\u3092\u7279\u5fb4\u91cf\u306b\u5165\u308c\u308b\n\u5168\u3066\u306e\u884c\u306b\u3064\u3044\u3066\u3001\u5e97\u8217\u3067\u6700\u3082\u6765\u5e97\u8005\u6570\u304c\u591a\u3044\u66dc\u65e5\u3092indx\u3067\u8fd4\u3059\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\n\u7279\u5fb4\u91cf\u3092test_x\u306b\u8ffd\u52a0\u3059\u308b","ce7c37cf":"# test_y\u3068test_x\u3092\u7d50\u5408\u3057\u3066test_all\u306b\u3059\u308b","0ba82860":"# \u795d\u65e5\u30d5\u30e9\u30b0\u3092\u8ffd\u52a0"}}