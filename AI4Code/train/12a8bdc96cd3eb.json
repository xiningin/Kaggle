{"cell_type":{"908bb570":"code","5a59474d":"code","b3a7abab":"code","c5a95d34":"code","634464cc":"code","88835886":"code","89feebdb":"code","bef17e1b":"code","0647e45f":"code","dbe05271":"code","e27a7704":"code","7f563197":"code","8146ddbe":"code","f7125cae":"code","3b543fe7":"code","51622e9c":"code","de2b311f":"code","2eddf464":"code","d8742182":"code","4b0b7efd":"code","4d30ab03":"code","c790437d":"code","c62132e3":"code","3eba18f8":"code","4aa109f9":"code","23ea25c5":"code","473fc532":"code","50f92ad8":"code","bb31e7f0":"code","8f8821d5":"code","4590e849":"code","29346296":"code","3deb1873":"code","d917cece":"markdown","013b6615":"markdown","bb45f5c6":"markdown","cbb88d84":"markdown","5b36fc1f":"markdown","86fdd9be":"markdown","4f4802f5":"markdown","b3e0f9ec":"markdown","44eff105":"markdown","317df723":"markdown","3730fbc1":"markdown","17b1bff7":"markdown","a32ac5a1":"markdown","6b291ea1":"markdown","fc6a16ef":"markdown"},"source":{"908bb570":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a59474d":"#import the required libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\n#use plotly locally\nimport plotly.graph_objs as go","b3a7abab":"data_df = pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/tracks.csv')","c5a95d34":"#we are sorting the data according to their popularity \nsorted_df = data_df.sort_values('popularity', ascending = False).head(100)\nsorted_two_df = data_df.sort_values('popularity', ascending = True)\ndate = list(data_df.release_date)\nfor i in range(len(date)):\n    date[i] = int(date[i][:4])","634464cc":"data_df['Year'] = date","88835886":"df_pre90 = data_df[data_df.Year <= 1990]\ndf_post_90 = data_df[data_df.Year > 1990]","89feebdb":"#lets see sorted head\nsorted_df.head(10)","bef17e1b":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","0647e45f":"data_df.info()","dbe05271":"missing_percentage = pd.DataFrame(data_df.isnull().sum()*100\/data_df.count())\nmissing_percentage.columns = ['Missing_Percentage']\nmissing_percentage.T","e27a7704":"#Checking null Value in the Dataset\ndata_df.isna().sum()","7f563197":"sorted_df_1 = sorted_df[['explicit','danceability','energy','mode','speechiness','acousticness','instrumentalness','liveness','valence']]\nsorted_two_df = sorted_two_df[['explicit','danceability','energy','mode','speechiness','acousticness','instrumentalness','liveness','valence']]","8146ddbe":"labels = list(sorted_df_1)[:]\n\nstats = sorted_df_1.mean().tolist()\n\nstats2 = sorted_two_df.mean().tolist()\n\nangles = np.linspace(0, 2*np.pi, len(labels), endpoint=False)\nfig = plt.figure(figsize = (15,15))\n\nax = fig.add_subplot(221, polar=True)\nax.plot(angles, stats, 'o-', linewidth=3, label = \"Popular\", color = 'green')\nax.fill(angles, stats, alpha=0.25, facecolor='green')\nax.set_thetagrids(angles * 180\/np.pi, labels, fontsize = 12)\n\nax.set_rlabel_position(250)\nplt.yticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7], [\"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\",\"0.6\", \"0.7\" ], size=12)\nplt.ylim(0,0.7)\n\nax.plot(angles, stats2, 'o-', linewidth=2, label = \"All The Dataset\", color= 'red')\nax.fill(angles, stats2, alpha=0.25, facecolor='red')\nax.set_title('Mean Values')\nax.grid(True)\n\nplt.legend(loc='best', bbox_to_anchor=(0.1,0.1))","f7125cae":"import networkx as nx\nfrom scipy import spatial","3b543fe7":"list_songs = list(sorted_df.name)","51622e9c":"spatial.distance.cosine(sorted_df_1.iloc[1], sorted_df_1.iloc[0])","de2b311f":"dict_edges = {}\nfor i in range(len(list_songs)):\n    list_val = []\n    for j in range(i):\n        a_row = list(sorted_df_1.iloc[j])\n        list_val.append([j, 1 - spatial.distance.cosine(sorted_df_1.iloc[i], a_row),list(sorted_df.iloc[j])[1] ])\n    for j in range(i+1,len(list_songs)):    \n        a_row = list(sorted_df_1.iloc[j])\n        list_val.append([j, 1 - spatial.distance.cosine(sorted_df_1.iloc[i], a_row), list(sorted_df.iloc[j])[1]])\n    dict_edges[i] = list_val","2eddf464":"dict_edges[0][1]","d8742182":"new_dict = {}\nfor i in range(100):\n    list_to_put = []\n    for j in range(len(dict_edges[i])):\n        if dict_edges[i][j][1] >= 0.95:\n            list_to_put.append(dict_edges[i][j])      \n    new_dict[i] = list_to_put","4b0b7efd":"new_dict[6]","4d30ab03":"from collections import Counter\nimport re","c790437d":"sorted_df.artists.values[0] = sorted_df.artists.values[0].replace('[', '')\nsorted_df.artists.values[0] = sorted_df.artists.values[0].replace(']', '')\nsorted_df.artists.values[0]\n\nr1 = re.compile(r\"\\w{1,20}.\\w{1,20}\", re.MULTILINE | re.DOTALL)\nr = r1.findall(sorted_df.artists.values[0])","c62132e3":"list_top_100 = list(sorted_df.artists.values)\n","3eba18f8":"\nall_artists = []\nfor i in range(len(list_top_100)):\n    r1 = re.compile(r\"\\w{1,20}.\\w{1,20}\", re.MULTILINE | re.DOTALL)\n    r = r1.findall(list_top_100[i])\n    if len(r) > 0:\n        all_artists.append(r[0])","4aa109f9":"c = Counter(all_artists)\nlist(c)[:10]","23ea25c5":"fig = plt.figure(figsize = (10,8))\nsns.barplot(x = 'Name', y = 'Count', data = df_artists)\nplt.xticks(rotation=90)","473fc532":"plt.figure(figsize=(15,35))\n\nsongs_loudness_graph = sns.barplot(x=spotify_df[\"Loudness (dB)\"],\n                                   y=spotify_df[\"Year\"],\n                                   orient=\"h\");","50f92ad8":"df_artists = pd.DataFrame(data = {'Name':list(c)[:20], 'Count':list(c.values())[:20]})","bb31e7f0":"fig = plt.figure(figsize = (10,8))\nsns.barplot(x = 'Name', y = 'Count', data = df_artists)\nplt.xticks(rotation=90)","8f8821d5":"popularity_50=data_df[data_df.popularity>=50]\npopularity_50","4590e849":"#lets Find Out Top Songs of Spotify 2020-2021 which has popularity greater than 95\npopularity_95=data_df[data_df.popularity>95]\npopularity_95","29346296":"plt.figure(figsize=(15,35))\n\nsongs_year_graph = sns.countplot(y=data_df[\"Year\"])\n\nplt.xlabel(\"Number of Songs\")\nplt.title(\"Songs Released on Particular Year\");","3deb1873":"plt.figure(figsize=(20,10))\n\nsns.distplot(x=data_df[\"duration_ms\"],\n            kde=True);\n\nplt.xlabel(\"Length (s)\")\nplt.title(\"Length (Duration) used in the Songs\");","d917cece":"# Cleaning and Visualisation of Data\n\n* Top 100 most popular songs vs. all of the rest - Features","013b6615":"## Q3: Songs Which have popularity more than 95%","bb45f5c6":"* These Songs have Popularity less than 50 %","cbb88d84":"## Q4: Songs Released in an Specific year( Show It on Graph)","5b36fc1f":"## Q2: Songs Which have popularity less than 50%","86fdd9be":"# Questions and Ask Answers\n\n## Q1: Who are the Top Artists on Spotify ","4f4802f5":"## Most Popular Artists","b3e0f9ec":"# Exploratory Data Analysis of Spotify Songs\n\n* Description - I have been using spotify since it arrived in India and this is my one of the most trusted music platform on which i listen music everyday approx 4-5 hrs. Recently i discovered that Spotify uses Machine Learning to suggest songs to its users according to their mood or past listenings. So i thought of doing this exploratory data analysis. since this data is huge i am using only tracks.csv data for this. because i don't wanna dig that deep into it. \n* The Main Objective of doing this analysis is i want to find the trends based on people the music is divided like according to popularity or year it was released.\n\n*Lets Begin\n\n<img src = \"https:\/\/sm.mashable.com\/mashable_in\/news\/s\/spotify-re\/spotify-releases-top-streamed-songs-artists-and-podcasts-for_xvnc.png\"\/>","44eff105":"Reference:\n    \n    * Dataset: \"https:\/\/www.kaggle.com\/yamaerenay\/spotify-dataset-19212020-160k-tracks?select=tracks.csv\"","317df723":"## - Q5: Most popular song of all time ","3730fbc1":"## Import Dataset","17b1bff7":"* As of Now 2020 was the year in which most songs were released on Spotify.","a32ac5a1":"* Here are the top Songs of 2020-2021","6b291ea1":"* As we can see that Justin Beiber and Bad Bunny are top in the list as Top artists","fc6a16ef":"<img src = \"https:\/\/media.giphy.com\/media\/26gsjCZpPolPr3sBy\/giphy.gif\"\/>"}}