{"cell_type":{"92d68305":"code","cfe2e17c":"code","c5f4a966":"code","e0bb4819":"code","95d0968c":"code","29008ebc":"code","97de888f":"code","f3cb14d7":"code","0abc92f8":"code","35800967":"code","e63added":"code","7a7ef448":"code","1f5bfe3a":"code","df1bfaeb":"code","ebb93874":"code","90b6dd40":"code","16a6a3bc":"code","502716da":"markdown","8ea7ccdd":"markdown","14f467e1":"markdown","2bb59f6c":"markdown","064744a1":"markdown","1a55ee20":"markdown","4d54488b":"markdown"},"source":{"92d68305":"import tensorflow as tf\nimport os\nimport numpy as np\n\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nif not os.path.isdir('models'):\n    os.mkdir('models')\n    \nprint('TensorFlow version:', tf.__version__)\nprint('Is using GPU?', tf.test.is_gpu_available())","cfe2e17c":"def get_three_classes(x, y):\n    indices_0, _ = np.where(y == 0.)\n    indices_1, _ = np.where(y == 1.)\n    indices_2, _ = np.where(y == 2.)\n\n    indices = np.concatenate([indices_0, indices_1, indices_2], axis=0)\n    \n    x = x[indices]\n    y = y[indices]\n    \n    count = x.shape[0]\n    indices = np.random.choice(range(count), count, replace=False)\n    \n    x = x[indices]\n    y = y[indices]\n    \n    y = tf.keras.utils.to_categorical(y)\n    \n    return x, y","c5f4a966":"(x_train,y_train),(x_test,y_test)=tf.keras.datasets.cifar10.load_data()","e0bb4819":"y_test","95d0968c":"x_train,y_train=get_three_classes(x_train, y_train)\nx_test,y_test=get_three_classes(x_test, y_test)","29008ebc":"y_test","97de888f":"class_names = ['aeroplane', 'car', 'bird']","f3cb14d7":"def show_random_examples(x,y,p):\n    indices=np.random.choice(range(x.shape[0]),10,replace=False)\n    x=x[indices]\n    y=y[indices]\n    p=p[indices]\n    \n    plt.figure(figsize=(10,5))\n    for i in range (10):\n        plt.subplot(2,5,i+1)\n        plt.imshow(x[i])\n        plt.xticks([])\n        plt.yticks([])\n        col='green' if np.argmax(y[i])==np.argmax(p[i]) else 'red'\n        plt.xlabel(class_names[np.argmax(p[i])],color=col)\n    plt.show()\n        ","0abc92f8":"show_random_examples(x_train,y_train,y_train)","35800967":"from tensorflow.keras.layers import Conv2D, MaxPooling2D, BatchNormalization\nfrom tensorflow.keras.layers import Dropout, Flatten, Input, Dense","e63added":"def create_model():\n    def add_conv_block(model,num_filters):\n        model.add(Conv2D(num_filters,3,activation='relu',padding='same'))\n        model.add(BatchNormalization())\n        model.add(Conv2D(num_filters,3,activation='relu'))\n        model.add(MaxPooling2D(pool_size=2))\n        model.add(Dropout(0.5))\n        return model\n    model=tf.keras.models.Sequential()\n    model.add(Input(shape=(32,32,3)))\n    model=add_conv_block(model,32)\n    model=add_conv_block(model,64)\n    model=add_conv_block(model,128)\n\n    model.add(Flatten())\n    model.add(Dense(3,activation='softmax'))\n\n    model.compile(\n    loss='categorical_crossentropy',\n    optimizer='adam',metrics=['accuracy']\n    )\n    return model\n\n\n        \n    \n","7a7ef448":"model=create_model()\nmodel.summary()","1f5bfe3a":"h=model.fit(x_train\/255.,y_train,\n           validation_data=(x_test\/255.,y_test),\n           epochs=10,batch_size=128,\n           callbacks=[\n               tf.keras.callbacks.EarlyStopping(monitor='val_acc',patience=3),\n               tf.keras.callbacks.ModelCheckpoint(\n               'models\/model_{val_acc:.3f}.h5',\n               save_best_only=True,save_weights_only=False,\n               monitor='val_acc')\n           ])","df1bfaeb":"accs=h.history['acc']\nval_accs=h.history['val_acc']\nplt.plot(range(len(accs)),accs,label='Training')\nplt.plot(range(len(val_accs)),val_accs,label='validation')\nplt.legend()\nplt.show()","ebb93874":"model=tf.keras.models.load_model('models\/model_0.850.h5')","90b6dd40":"preds=model.predict(x_test\/255.)","16a6a3bc":"show_random_examples(x_test,y_test,preds)","502716da":"# Task 4: Create Model","8ea7ccdd":"\n\n\n\n# Task 5: Train the Model","14f467e1":"# Task 3: Visualize Examples","2bb59f6c":"# Task 1: Import Libraries","064744a1":"# Task 2: Preprocess Data","1a55ee20":"# Image Classification with CNN using Keras","4d54488b":"# Task 6: Final Predictions"}}