{"cell_type":{"c8479c7c":"code","fac4d5e0":"code","f50cf905":"code","444de4aa":"code","6f526d6d":"code","ca4a1d93":"code","b0769380":"code","4d8bddb9":"code","db8ee870":"code","818a6e56":"code","8e8b290a":"code","137ed119":"code","4ecae30a":"code","45fbf30a":"code","b4a6ae20":"code","87da1012":"markdown"},"source":{"c8479c7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fac4d5e0":"train_data = pd.read_csv('\/kaggle\/input\/learn-together\/train.csv')","f50cf905":"train_data.head()","444de4aa":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report,confusion_matrix","6f526d6d":"X = train_data.drop('Cover_Type',axis=1)\ny = train_data['Cover_Type']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","ca4a1d93":"dtree = DecisionTreeClassifier()","b0769380":"dtree.fit(X_train,y_train)","4d8bddb9":"predictions = dtree.predict(X_test)","db8ee870":"# Evaluation of Decision tree \nprint(classification_report(y_test,predictions))","818a6e56":"print(confusion_matrix(y_test,predictions))","8e8b290a":"rfc = RandomForestClassifier(n_estimators=500)","137ed119":"rfc.fit(X_train,y_train)","4ecae30a":"predictions = rfc.predict(X_test)","45fbf30a":"print(classification_report(y_test,predictions))","b4a6ae20":"print(confusion_matrix(y_test,predictions))","87da1012":"Training Random Forest "}}