{"cell_type":{"9d0fba16":"code","78701ada":"code","f3ec1f76":"code","1d09d62d":"code","fa616e77":"code","93b23ae3":"code","ecbf7bed":"code","50e8b5e4":"code","53aec33f":"code","e8085654":"code","826f7ca6":"code","73813438":"code","23984f03":"code","8253256e":"code","d578a433":"markdown","9c66d0d6":"markdown","67773e16":"markdown","b337c714":"markdown","4512aba6":"markdown","a7815343":"markdown"},"source":{"9d0fba16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n# train dataset\uc758 \uc8fc\uc18c\ub294 '\/kaggle\/input\/titanic\/train.csv'\n# test dataset\uc758 \uc8fc\uc18c\ub294 '\/kaggle\/input\/titanic\/test.csv'\n# train set\uc73c\ub85c \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc744 \ud559\uc2b5 \uc2dc\ud0a4\uace0 \n# test set\uc73c\ub85c \uc608\uce21\uc744 \ud569\ub2c8\ub2e4 \ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nanswer = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","78701ada":"# \uc218\uc9d1\ub41c \ub370\uc774\ud130 \ud30c\uc545\n# train set\uc758 \uc0ac\uc774\uc988 \ud30c\uc545 \nrow_number = train.shape[0]\ncol_number = train.shape[1]\ncolumn_list = train.columns\n\nprint('train \ub370\uc774\ud130\uc14b\uc740 {}\ud589\uc758 \ub370\uc774\ud130\uc640 {} \ub4f1 {}\uc5f4\uc758 column\uc774 \uc788\uc2b5\ub2c8\ub2e4.'.format(row_number,', '.join(column_list),col_number))\n# ','.join(column_list) \ub294 column_list\ub77c\ub294 \ub9ac\uc2a4\ud2b8\uc758 \uc694\uc18c\ub4e4\uc744 , \uae30\uc900\uc73c\ub85c \uc5f0\uacb0\ud574\uc8fc\ub294 \ud568\uc218\uc785\ub2c8\ub2e4 \n# join \ud568\uc218 \ucc38\uace0 \ub9c1\ud06c https:\/\/www.geeksforgeeks.org\/join-function-python\/ ","f3ec1f76":"# \uac01 \ubcc0\uc218\ubcc4\ub85c \uc0dd\uc874\uc728\uc744 \uacc4\uc0b0\ud574\ubd05\ub2c8\ub2e4  \n# \uacc4\uc0b0\ud558\uae30 \uc704\ud574\uc11c \ubcc0\uc218\ub97c \uc9d1\uc5b4 \ub123\uc73c\uba74 \uc0dd\uc874\uc728\uc744 \uacc4\uc0b0\ud574\uc8fc\ub294 \ud568\uc218\ub97c \ubbf8\ub9ac \ub9cc\ub4e4\uc5b4 \ubd05\ub2c8\ub2e4 \n# python \uc758 \uba54\uc18c\ub4dc\uc5d0 \ub300\ud55c \ucc38\uace0\uc790\ub8cc : https:\/\/www.w3schools.com\/python\/python_functions.asp \ndef calc_ratio(x):\n    # x\ub294 \ub9ac\uc2a4\ud2b8 \ud615\ud0dc\ub85c \ub2e4\ub8f9\ub2c8\ub2e4\n    df = train.groupby(x).agg({'Survived':[np.sum,'count']})['Survived']\n    df['\uc0dd\uc874\uc728'] = round(df['sum']\/df['count']*100,1)\n    print(','.join(x)+'\uc5d0 \ub530\ub978 \uc0dd\uc874\uc728\uc744 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4')\n    return df ","1d09d62d":"print('\ud2f0\ucf13 \ub4f1\uae09\uc774 \ub192\uc744 \uc218\ub85d \uc0dd\uc874\uc728\uc774 \ub192\uc8e0, \uc6b0\uc2a4\uac2f\uc18c\ub9ac\ub85c, \uad6c\uba85\ubcf4\ud2b8\uac00 VIP\uc5d0\uac8c \uc6b0\uc120\uc73c\ub85c \uc81c\uacf5\ub418\uae30 \ub54c\ubb38\uc774\ub77c \ud569\ub2c8\ub2e4')\ncalc_ratio(['Pclass'])","fa616e77":"\nprint('\uc5ec\uc131\uc758 \uc0dd\uc874\uc728\uc740 74%\uac00 \ub118\ub294\ub370, \ub0a8\uc131\uc758 \uc0dd\uc874\uc728\uc740 18%\uc8e0, \uadf8 \ub2f9\uc2dc\uc5d4 Lady First \uac19\uc740 \uc2e0\uc0ac\ub3c4\uac00 \uc788\uc5c8\ub2e4\uace0 \ud558\ub294\ub370\uc694. \uadf8\ub7fc \uc9c0\uae08\uc740..?')\ncalc_ratio(['Sex'])","93b23ae3":"print('\uc2b9\uc120 \ud56d\uad6c\uc5d0 \ub530\ub77c\uc11c\ub3c4 \uc0dd\uc874\uc728\uc774 \ub098\ub269\ub2c8\ub2e4')\ncalc_ratio(['Embarked'])\n","ecbf7bed":"# \ub098\uc774\uc640 \ud2f0\ucf13\uac00\uaca9\uc758 \uacbd\uc6b0, \uc22b\uc790\ud615\ub300\ub85c \ub418\uc5b4\uc788\uae30 \ub54c\ubb38\uc5d0 \uad6c\uac04\uc5d0 \ub530\ub77c\uc11c \ubc88\uc704\ub97c \uc9c0\uc815\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4  \n# \ub098\uc774\ub294 10\uc0b4 \ub2e8\uc704\ub85c \ub098\ub204\uc5b4 age_range\ub97c \ub9cc\ub4e4\uace0 \n# age_range\ub97c groupby\ud574 \uc0dd\uc874\uc728\uc744 \uad6c\ud568  \ntrain['Age_range']=round(train['Age']\/10,0)*10\nprint('\ub098\uc774\uac00 \uc5b4\ub9ac\uac70\ub098, \ub192\uc73c\uba74 \uc0dd\uc874\uc728\uc774 \ub192\uc9c0\ub9cc, 10\ub300 ~ 60\ub300\uc758 \uc0dd\uc874\uc728\uc740 35~40%\ub85c \ube44\ub4f1\ube44\ub4f1 \ud558\uc8e0')\ncalc_ratio(['Age_range'])","50e8b5e4":"# \ud2f0\uac9f\uc740 100\ub2ec\ub7ec \ub2e8\uc704\ub85c range\ub97c \ub098\ub220\ubd05\ub2c8\ub2e4 \ntrain['fare_range'] = round(train['Fare']\/100,0)*100\nprint('\ud2f0\ucf13 \uac00\uaca9\uc774 500\ub2ec\ub7ec \uc774\uc0c1\uc774\uba74, \uc0dd\uc874\uc728\uc774 100%\uc774\uace0, 100\ub2ec\ub7ec \ubbf8\ub9cc\uc778 \uacbd\uc6b0\ub294 30%\uc5d0 \uadf8\uce69\ub2c8\ub2e4')\ncalc_ratio(['fare_range'])","53aec33f":"import matplotlib.pyplot as plt \nimport seaborn as sns  \nplt.figure(figsize=(10,10))\nsns.heatmap(data = train.corr(),annot=True,fmt='.2f',cmap='Blues')\nplt.show ","e8085654":"# \uc6b0\uc120 \ub370\uc774\ud130 \ud504\ub808\uc784\uc744 \ud544\uc694\ud55c \uc694\uc18c\ub9cc \ub0a8\uaca8\ubd05\ub2c8\ub2e4  \ntrain2 = train.loc[:,['Pclass','Age','Sex','Embarked']].copy() \ntrain2.head()","826f7ca6":"# \uacb0\uce21\uac12\uc740 \uc0c1\ud669\uc5d0 \ub530\ub77c \uacc4\uc0b0\ud558\ub294 \ubc29\ubc95\uc774 \ubb34\uad81\ubb34\uc9c4\ud558\uc9c0\ub9cc \n# \ud604\uc7ac\ub294 \ub2e8\uc21c \ud3c9\uade0 \uac12\uc73c\ub85c \uacb0\uce21\uac12\uc744 \ub300\uccb4\ud569\ub2c8\ub2e4  \ntrain2['Age'] = train2['Age'].fillna(train2['Age'].mean())","73813438":"# \uc774\uc911 Sex\uc640 Embarked\ub97c \uc22b\uc790\ub85c \ubc14\uafb8\ub294\ub370 \n# \uc131\ubcc4\uc740 2\uac00\uc9c0, \uc2b9\uc120\ud56d\uad6c\ub294 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4\nprint(train2['Sex'].unique())\nprint(train2['Embarked'].unique())\n# \ubaa8\ub378\uc744 \ud65c\uc6a9\ud558\uae30 \uc704\ud574 \ub2e8\uc21c\ud788 \ubb38\uc790\uc5f4\uc744 \uc22b\uc790\ub85c \ubc14\uafb8\ub294 \ubaa9\uc801\uc774\uba70 \n# \uac01\uac01 \n# male -> 0, femail -> 1  \n# S -> 0, C -> 1, Q -> 2, nan -> 3\n# \ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4. \ntrain2['Sex'] = train2['Sex'].replace(\"male\",0)\ntrain2['Sex'] = train2['Sex'].replace(\"female\",1)\n\ntrain2['Embarked'] = train2['Embarked'].replace(\"S\",0)\ntrain2['Embarked'] = train2['Embarked'].replace(\"C\",1)\ntrain2['Embarked'] = train2['Embarked'].replace(\"Q\",2)\ntrain2['Embarked'] = train2['Embarked'].replace(np.nan,3)","23984f03":"X = train2\ny = train['Survived']\nfrom sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, random_state = 30, test_size = 0.3)\n\nX_train.shape, y_train.shape, X_valid.shape, y_valid.shape\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = DecisionTreeClassifier()\n\nmodel.fit(X_train,y_train)\npredict_train = model.predict(X_train)\naccuracy_train = accuracy_score(y_train,predict_train)\nprint('accuracy_score on train dataset : ', accuracy_train)","8253256e":"# 4\uac00\uc9c0 \ubcc0\uc218\ub97c \ud65c\uc6a9\ud574 \ud559\uc2b5\ud55c \uacb0\uacfc, \uc608\uce21\uc758 \uc815\ud655\ub3c4\ub294 91%\uc5d0 \ub2ec\ud569\ub2c8\ub2e4\n# \uc774\uc81c test \ub370\uc774\ud130\ub97c \uc801\uc6a9\ud574 \uc2e4\uc81c \uc608\uce21\uc744 \ud569\ub2c8\ub2e4  \n# \uc6b0\ub9ac\ub294 \uc544\uc9c1 test \ub370\uc774\ud130\ub97c \uc815\uc81c \ud558\uc9c0 \uc54a\uc558\uace0  \n# \uc5b4\ub5bb\uac8c \uc815\uc81c\ud574\uc57c\ud560\uc9c0\ub97c \uc54c\uae30 \ub54c\ubb38\uc5d0  \n# \ubc14\ub85c test \ub370\uc774\ud130\uc758 \uc815\uc81c\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4\ntest2 = test[['Pclass','Sex','Age','Embarked']].copy() \n\ntest2['Age'] = test2['Age'].fillna(test2['Age'].mean())\n\ntest2['Sex'] = test2['Sex'].replace(\"male\",0)\ntest2['Sex'] = test2['Sex'].replace(\"female\",1)\n\ntest2['Embarked'] = test2['Embarked'].replace(\"S\",0)\ntest2['Embarked'] = test2['Embarked'].replace(\"C\",1)\ntest2['Embarked'] = test2['Embarked'].replace(\"Q\",2)\ntest2['Embarked'] = test2['Embarked'].replace(np.nan,3)\n\n# \uadf8\ub9ac\uace0 \uc815\uc81c\ub41c test2\ub97c \ubc14\ub85c model.predict\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4  \npredict_result = model.predict(test2)\n# predict_result\ub97c \uc55e\uc11c \ubd88\ub7ec\uc654\ub358 answer\uc640 \ube44\uad50\ud569\ub2c8\ub2e4  \nmy_score = accuracy_score(predict_result,answer['Survived'])\nprint('accuracy_score on train dataset : ', my_score)","d578a433":"\uc704 \uadf8\ub798\ud504\ub97c \ubcf4\uace0 \ud504\ub85c\uc81d\ud2b8 \ud300\uc6d0\ub4e4\uc774 \ubaa8\uc5ec \uc5b4\ub5a4 \ubcc0\uc218\uac00 \uba38\uc2e0\ub7ec\ub2dd \uc608\uce21 \ubaa8\ub378\uc758 \uc815\ud655\ub3c4\ub97c \ub192\uc774\ub294 \ub370\uc5d0 \ub3c4\uc6c0\uc774 \ub420\uae4c\ub97c \uc758\ub17c\ud558\ub294\ub370<br> \n\ud604\uc7ac\ub294 \uc2b9\uc120 \ud56d\uad6c, \ud2f0\ucf13 \ub4f1\uae09, \ub098\uc774, \uc131\ubcc4 \ub4f1 4\uac1c \ubcc0\uc218\uac00 \uc0dd\uc874\uc728\uc744 \uc608\uce21\ud558\ub294 \ub370 \uac00\uc7a5 \uc911\uc694\ud55c \uc694\uc18c\ub77c\uace0 \uac00\uc815\ud558\uace0, \uc774 4\uac00\uc9c0 \ubcc0\uc218\ub9cc\uc744 \uc774\uc6a9\ud574 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc744 \uc801\uc6a9\ud574\ube1d\ub2c8\ub2e4   \n**\uc989, \uc774\ubc88 \ubd84\uc11d\uc758 \uac00\uc124\uc740 : \uc2b9\uc120 \ud56d\uad6c, \ud2f0\ucf13 \ub4f1\uae09, \ub098\uc774, \uc131\ubcc4 4\uac00\uc9c0 \uc694\uc18c\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \uacb0\uc815\ub41c\ub2e4** \uc785\ub2c8\ub2e4 <br> \n\n### \ub370\uc774\ud130 Feature Engeneering \n\n\uadf8\ub7fc \uc774\uc81c \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \ud544\uc694\ud55c 4\uac00\uc9c0 \ubcc0\uc218\ub97c \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \ud65c\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ubcc0\uacbd\ud558\ub294 \uc791\uc5c5\uc744 \uc9c4\ud589\ud569\ub2c8\ub2e4    \n\uc774 \ub2e8\uac8c\uc5d0\uc11c\ub294 1) \uacb0\uce21\uac12 \ucc98\ub9ac\uc640 2) \uba85\ubaa9\ubcc0\uc218\uc758 \uc218\uce58\ud654\uac00 \uc911\uc694\ud569\ub2c8\ub2e4 ","9c66d0d6":"### \ub370\uc774\ud130 EDA \ubc0f \uac00\uc124 \uc124\uc815 \n> \ub370\uc774\ud130 EDA\uc758 \ubaa9\uc801\uc740 \uc218\uc9d1\ub41c \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\uc9c0(=\uc5b4\ub5a4 column\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\uc9c0), \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \ubcc0\uc218\ub85c \uac00\uc124\uc744 \uc124\uc815\ud560\uc9c0 \uc54c\uc544\ub0b4\uae30 \uc704\ud568\uc785\ub2c8\ub2e4 \n\n\ub370\uc774\ud130 \ud504\ub808\uc784\uc758 \uc8fc\uc694 \ubcc0\uc218\uc758 \ud2b9\uc131 \n* PassengerId : \uc2b9\uac1d\uc758 \uace0\uc720\ubc88\ud638\ub85c \ud14c\uc774\ube14\uc758 \uc778\ub371\uc2a4\ub85c \uc0ac\uc6a9\ub428  \n* Survived : \uc2b9\uac1d\uc758 \ucd5c\uc885 \uc0dd\uc874 \uc5ec\ubd80, 1\uc740 \uc0dd\uc874, 0\uc740 \uc0ac\ub9dd \n* Pclass : \ud2f0\ucf13 \ub4f1\uae09\uc73c\ub85c 1 = 1\ub4f1\uae09, 2 = 2\ub4f1\uae09, 3 = 3\ub4f1\uae09  \n* Sex : \uc131\ubcc4(male\uacfc female\ub85c \uad6c\ubd84) \n* Age : \ub098\uc774\n* sibsp : \ud615\uc81c\uc790\ub9e4 \ub610\ub294 \ubc30\uc6b0\uc790 \ub3d9\ubc18 \uc778\uc6d0\uc218 \n* parch : \ubd80\ubaa8 \ub610\ub294 \uc790\ub140 \ub3d9\ubc18 \uc778\uc6d0\uc218\n* Ticket : \ud2f0\ucf13\uc758 \uace0\uc720 \ubc88\ud638 \n* Fare : \ud2f0\ucf13 \uac00\uaca9  \n* cabin : \uac1d\uc2e4 \ubc88\ud638\n* embarked : \uc2b9\uc120 \ud56d\uad6c, C = Cherbourg, Q = Queenstown, S = Southampton\n \n\uc774 \ubcc0\uc218\ub4e4\uc744 \ud1b5\ud574 \uac00\uc124\uc744 \uc704\ud55c \uac00\uc124\uc744 \uc138\uc6cc\ubd05\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74   \n1) \uc2b9\uc120 \ud56d\uad6c\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n2) \ud2f0\ucf13 \ub4f1\uae09\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n3) \uc131\ubcc4\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n4) \ub098\uc774\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n5) \ud615\uc81c\uc790\ub9e4 \ubc30\uc6b0\uc790 \ub3d9\ubc18\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n6) \ubd80\ubaa8 \uc790\ub140 \ub3d9\ubc18\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?   \n7) \ud2f0\ucf13\uc758 \uac00\uaca9\uc5d0 \ub2e4\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub2ec\ub77c\uc9c8\uae4c?    \n\ub4f1\ub4f1\uc758 \uc5ec\ub7ec\uac00\uc9c0 \uac00\uc124\uc744 \uc138\uc6cc\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc18c\uc2a4\ucf54\ub4dc\ub97c \ud1b5\ud574\uc11c\ub294 1~7\ubc88\uae4c\uc9c0\uc758 \uac00\uc124\uc744 \uac04\ub2e8\ud558\uac8c \uacc4\uc0b0\ud574\ubcf4\uace0, \ub354 \ub9ce\uc740 \ubcc0\uc218\ub97c \uace0\ub824\ud55c \uac00\uc124\uc744 \uc81c\uc2dc\ud569\ub2c8\ub2e4 ","67773e16":"### \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 \ud65c\uc6a9 Decision Tree Classifier\n\n\uacb0\uc815 \ud2b8\ub9ac(decision tree)\ub294 \uc758\uc0ac \uacb0\uc815 \uaddc\uce59\uacfc \uadf8 \uacb0\uacfc\ub4e4\uc744 \ud2b8\ub9ac \uad6c\uc870\ub85c \ub3c4\uc2dd\ud654\ud55c \uc758\uc0ac \uacb0\uc815 \uc9c0\uc6d0 \ub3c4\uad6c\uc758 \uc77c\uc885\uc774\ub2e4. \uacb0\uc815 \ud2b8\ub9ac\ub294 \uc6b4\uc6a9 \uacfc\ud559, \uadf8 \uc911\uc5d0\uc11c\ub3c4 \uc758\uc0ac \uacb0\uc815 \ubd84\uc11d\uc5d0\uc11c \ubaa9\ud45c\uc5d0 \uac00\uc7a5 \uac00\uae4c\uc6b4 \uacb0\uacfc\ub97c \ub0bc \uc218 \uc788\ub294 \uc804\ub7b5\uc744 \ucc3e\uae30 \uc704\ud574 \uc8fc\ub85c \uc0ac\uc6a9\ub41c\ub2e4.\n\n\uc758\uc0ac\uacb0\uc815 \ub098\ubb34 \ucc38\uace0 \uc790\ub8cc <br>\n[\uc704\ud0a4\ud53c\ub514\uc544](https:\/\/ko.wikipedia.org\/wiki\/%EA%B2%B0%EC%A0%95_%ED%8A%B8%EB%A6%AC) <br> \n[\uae43\ud5c8\ube0c](https:\/\/ratsgo.github.io\/machine%20learning\/2017\/03\/26\/tree\/) <br>","b337c714":"\n### \ub370\uc774\ud130 \ubd84\uc11d \ud504\ub85c\uc138\uc2a4 \uac1c\uc694\nKaggle\uc744 \ube44\ub86f\ud574 \uc2e4\ubb34\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ub370\uc774\ud130 \ubd84\uc11d \ud504\ub85c\uc81d\ud2b8\ub294 \uc544\ub798\uc640 \uac19\uc740 \ud504\ub85c\uc138\uc2a4\ub85c \uc9c4\ud589 \ub429\ub2c8\ub2e4 \n1. \ub370\uc774\ud130 \ubd84\uc11d \ubaa9\ud45c \uc124\uc815\n2. \ub370\uc774\ud130 \uc815\uc758 \ubc0f \uc218\uc9d1 \n3. \ub370\uc774\ud130 EDA \ubc0f \uac00\uc124 \uc124\uc815 \n4. \ub370\uc774\ud130 Feature Engeneering  \n5. \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 \uc801\uc6a9 \ubc0f \ub370\uc774\ud130 \uc608\uce21\n\n### \ub370\uc774\ud130 \ubd84\uc11d \ubaa9\ud45c \uc124\uc815\n> \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21\uc758 \uacbd\uc6b0 \uacbd\uc9c4\ub300\ud68c\uc758 \ud2b9\uc131\uc0c1 \ub192\uc740 \uc810\uc218\ub97c \uc5bb\ub294 \uac83\uc774 \uac00\uc7a5 \uad81\uadf9\uc801\uc778 GOAL\uc774 \ub418\uaca0\uc9c0\ub9cc, \uc2e4\ubb34 \ub370\uc774\ud130 \ubd84\uc11d \ud504\ub85c\uc81d\ud2b8\uc758 \uc785\uc7a5\uc5d0\uc11c \ubc14\ub77c\ubcf4\uba74, \uc5b4\ub5a4 \ubcc0\uc218\uac00 \ub354 \ub192\uc740 \uc0dd\uc874\uc728\uc744 \uc608\uce21\ud558\uac8c \ud574\uc8fc\ub294\uac00?\uac00 \ub354 \uc911\uc694\ud569\ub2c8\ub2e4. \ub54c\ubb38\uc5d0 \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21 \uacbd\uc9c4\ub300\ud68c\ub97c \ud1b5\ud574 \uc2e4\ubb34\uc5d0 \ud544\uc694\ud55c \ub370\uc774\ud130 \ubd84\uc11d\uc744 \uc774\ud574\ud558\uae30 \uc704\ud574, \ub370\uc774\ud130 \ubd84\uc11d\uc758 \ubaa9\ud45c\ub97c \ub354 \ub192\uc740 \uc131\uc7a5\ub960\uc744 \uc608\uce21\ud560 \uc218 \uc788\ub294 \ubcc0\uc218\ub97c \ucc3e\uc544\ub0b4\ub294 \uac83\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4\n\n\ub370\uc774\ud130 \ubd84\uc11d \ubaa9\ud45c : \ub354 \ub192\uc740 \uc0dd\uc874\uc728\uc744 \uc608\uce21\ud558\uac8c \ud574\uc8fc\ub294 \uc2b9\uac1d\uc758 \ud2b9\uc131 \ubc1c\uacac\n\n### \ub370\uc774\ud130 \uc815\uc758 \ubc0f \uc218\uc9d1  \n> \uc2b9\uac1d\uc758 \ud2b9\uc131\uc744 \uc218\uc9d1\ud574\uc57c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uacbd\uc9c4\ub300\ud68c\uc758 \uacbd\uc6b0 \ubbf8\ub9ac \ub370\uc774\ud130\uc14b\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc, \uc2e4\ubb34\uc5d0\uc120 \ubd84\uc11d \ubaa9\ud45c\uc5d0 \ub530\ub77c \ud544\uc694\ud55c \uc815\ubcf4\ub97c \uc6f9\ud06c\ub864\ub9c1, Open API, \uc0ac\ub0b4DB\ub97c \ud1b5\ud574 \uac00\uc838\uc635\ub2c8\ub2e4  \n\n\ub370\uc774\ud130 \uc815\uc758     : \ud0c0\uc774\ud0c0\ub2c9 \uc2b9\uac1d \uc815\ubcf4 <br> \n\ub370\uc774\ud130 \uc218\uc9d1 \ubc29\ubc95 : \uacbd\uc9c4\ub300\ud68c\uc6a9 \ub370\uc774\ud130\uc14b \ud65c\uc6a9 ","4512aba6":"4\uac1c \uc694\uc18c\ub97c \ud1b5\ud574 \uc0dd\uc874\uc728\uc744 \uc608\uce21\ud55c \uacb0\uacfc, \uc815\ud655\ub3c4\ub294 38%\uc785\ub2c8\ub2e4. \uc2b9\uc120 \ud56d\uad6c, \ud2f0\ucf13 \ub4f1\uae09, \ub098\uc774, \uc131\ubcc4 4\uac00\uc9c0 \uc694\uc18c\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \uacb0\uc815\ub41c\ub2e4\ub77c\ub294 \uac00\uc124\uc758 \uacb0\uacfc\uac00 38%\uc778 \uac83\uc785\ub2c8\ub2e4. \uc2e4\uc81c \ubd84\uc11d \ubaa8\ub378\uc758 \uc815\ud655\ub3c4\uac00 38%\ub77c\uba74 \ub192\uc740 \uc218\uc900\uc774\uc9c0\ub9cc, Titanic\uc758 \uacbd\uc6b0\ub294 \ub0ae\uc740 \uc218\uc900\uc785\ub2c8\ub2e4. \uc774\uc81c 38%\uc5d0\uc11c \uc5b4\ub5a4 \ubcc0\uc218\ub97c \ub354 \ub123\uace0 \ube7c\uba74\uc11c, \uc5b4\ub5a4 \ubaa8\ub378\uc744 \ud65c\uc6a9\ud558\uba74\uc11c, \uc5b4\ub5bb\uac8c \uacb0\uce21\uac12\uc744 \ucc98\ub9ac\ud558\uba74\uc11c \uc608\uce21\uc758 \uc815\ud655\ub3c4\ub97c \ub192\uc774\ub290\ub0d0\ub97c \ub17c\uc758\ud558\uace0, \uc810\ucc28\uc810\ucc28 \uc815\ud655\ub3c4\ub97c \ub192\uc5ec\uac00\ub294 \uac83\uc774 \uba38\uc2e0\ub7ec\ub2dd\uc785\ub2c8\ub2e4","a7815343":"\uc704\uc758 \uac04\ub2e8\ud55c \uacc4\uc0b0\uc744 \ud1b5\ud574, \uc131\ubcc4, \ud2f0\ucf13\ub4f1\uae09, \ub098\uc774, \ud2f0\ucf13\uac00\uaca9, \uc2b9\uc120 \ud56d\uad6c \ub4f1\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728\uc774 \ub098\ub258\ub294 \uac83\uc744 \uc0c1\uc0c1\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4<br>\n\uac01 \ubcc0\uc218\uc758 \uc0dd\uc874\uc728\uc774 \uc5bc\ub9c8\ub098 \uc720\uc0ac\ud55c\uc9c0\ub97c, \uc0c1\uad00\uad00\uacc4\ub97c \uacc4\uc0b0\ud574\uc11c \ud30c\uc545\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. python\uc5d0\ub294 corr()\ub77c\ub294 \ud568\uc218\ub97c \ud1b5\ud574 \ud14c\uc774\ube14\uc758 \ubcc0\uc218\uac04 \uc0c1\uad00\uad00\uacc4\ub97c \uc27d\uac8c \uacc4\uc0b0\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\n\uadf8\ub9ac\uace0 heatmap\uc744 \ud1b5\ud574 \uc0c1\uad00\uad00\uacc4 \uc9c0\uc218\ub97c \uc2dc\uac01\ud654\ud574\uc11c \uc880 \ub354 \uc27d\uac8c \ud30c\uc545\ud574\ubd05\ub2c8\ub2e4\n"}}