{"cell_type":{"b74b37c6":"code","59b4d400":"code","d667cd79":"code","9bb9ba7c":"code","da618823":"code","4a2194b4":"code","4353460d":"markdown","d3d15091":"markdown"},"source":{"b74b37c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59b4d400":"!pip install pydotplus","d667cd79":"from sklearn import tree\nfrom sklearn import preprocessing\nimport pydotplus # To create our Decision Tree Graph\nfrom IPython.display import Image","9bb9ba7c":"data_train = pd.read_csv('\/kaggle\/input\/main-tenis\/play_tennis_train.csv')\ndf = pd.DataFrame(data_train,columns=['outlook','temp','humidity','wind','play'])\nx_train = pd.get_dummies(df[['outlook','temp','humidity','wind']])\ny_train = df[['play']]","da618823":"clf = tree.DecisionTreeClassifier()\nnbtrain = clf.fit(x_train, y_train)","4a2194b4":"print(tree.export_graphviz(nbtrain, None))\n\n#Create Dot Data\ndot_data = tree.export_graphviz(nbtrain, out_file=None, feature_names=list(x_train.columns.values), \n                                class_names=['No', 'Yes'], rounded=True, filled=True) #Gini decides which attribute\/feature should be placed at the root node, which features will act as internal nodes or leaf nodes#Create Graph from DOT data\ngraph = pydotplus.graph_from_dot_data(dot_data)\n\n# Show graph\nImage(graph.create_png())","4353460d":"***kita intall librarynya dulu....***","d3d15091":"lalu kita panggil dataset yang akan digunakan dalam sesi ini..."}}