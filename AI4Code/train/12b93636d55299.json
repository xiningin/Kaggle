{"cell_type":{"a632c4a5":"code","3e649bf9":"code","26a75c4c":"code","62b49858":"code","b0a7f041":"code","89205896":"code","0258e7e9":"code","47add6e2":"code","f0b2b3d3":"code","3751cf77":"code","4ba1a940":"code","b7d98df1":"code","2ef06278":"code","e86d33e8":"code","de977ce3":"code","22a9f12b":"code","0089ea8c":"code","6d087f36":"code","6eb83d85":"code","f1628e86":"code","5431106e":"code","67781e5c":"code","e990c953":"code","3b57b744":"code","094d2ac0":"code","af774202":"code","fed9d292":"code","96b4747d":"code","221dfe14":"code","fc5ef69b":"code","0fadc7c3":"code","cb17d7c8":"code","6d724b7a":"code","15c742ca":"code","e097b62b":"code","f6bd82d2":"code","4fadd33d":"code","66e8b244":"code","d9426f82":"code","2663686a":"markdown","84ce179c":"markdown","6b9bb61b":"markdown","9a830e0f":"markdown","f9629e76":"markdown","d049aa02":"markdown","a8eda5f8":"markdown","4f29b9b7":"markdown","e78ea627":"markdown","f0e00b1d":"markdown","11b83a86":"markdown","e713c90b":"markdown","ac6f0e53":"markdown","5aaa5c2c":"markdown","a13019d8":"markdown","ee0df271":"markdown","298bab09":"markdown","a329b6e9":"markdown","c92c1c67":"markdown","2d8bf365":"markdown","6e88efcf":"markdown","64bc8312":"markdown","57b2b312":"markdown","5224d3e0":"markdown","a80ebe7b":"markdown","37e03ac4":"markdown","057652f7":"markdown","dfa34912":"markdown","b7c1d04e":"markdown","1da80723":"markdown","b1ef5884":"markdown","16cb10f0":"markdown","aa49b78c":"markdown","fd7aeb0e":"markdown","0c08feea":"markdown","e27f6137":"markdown","bbd62817":"markdown","6d8f4236":"markdown","ed4cc3a2":"markdown","1ff035d1":"markdown","7e515018":"markdown","6c84cc1f":"markdown","411317c5":"markdown","717a6d9c":"markdown","4e92b310":"markdown","9814ebc9":"markdown","80d91586":"markdown","3ef9a61e":"markdown","58181e74":"markdown","0ac3a05b":"markdown","f7274d8d":"markdown","4644cdfc":"markdown"},"source":{"a632c4a5":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport matplotlib as mpl\n\n\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","3e649bf9":"df= pd.read_csv('..\/input\/hollywood-most-profitable-stories\/HollywoodsMostProfitableStories.csv')","26a75c4c":"df.head()","62b49858":"df.shape","b0a7f041":"df.isnull().sum()","89205896":"df.info()","0258e7e9":"df.describe()","47add6e2":"df.isnull().sum()","f0b2b3d3":"df[df['Lead Studio'].isnull()]","3751cf77":"df[df['Audience  score %'].isnull()]","4ba1a940":"df[df['Profitability'].isnull()]","b7d98df1":"df['Genre'].value_counts()","2ef06278":"df['Lead Studio'].value_counts()","e86d33e8":"df['Genre'].value_counts(normalize=True)","de977ce3":"fig = px.histogram(df, x=\"Genre\", title='Genre')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","22a9f12b":"df['Lead Studio'].value_counts(normalize=True)","0089ea8c":"fig = px.histogram(df, x=\"Lead Studio\", title='Lead Studios')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","6d087f36":"df['Audience  score %'].describe()","6eb83d85":"\nfig = px.histogram(df, x= 'Audience  score %', title='Percentage of the Audience  score', marginal=\"box\", hover_data = df[['Film','Genre']])\n\n\nfig.show()","f1628e86":"df['Profitability'].describe()","5431106e":"fig = px.histogram(df, x= 'Profitability', title='Profitability of the Movies', marginal=\"box\", hover_data = df[['Film','Genre']])\n\n\nfig.show()","67781e5c":"df['Rotten Tomatoes %'].describe()","e990c953":"fig = px.histogram(df, x= 'Rotten Tomatoes %', title='Rating Score-Rotten Tomatoes %', marginal=\"box\", hover_data = df[['Film','Genre']])\n\n\nfig.show()","3b57b744":"df['Worldwide Gross'].describe()","094d2ac0":"fig = px.histogram(df, x= 'Worldwide Gross', title='Worldwide Gross', marginal=\"box\", hover_data = df[['Film','Genre']])\nfig.show()","af774202":"df.drop('Year', axis=1).corr()","fed9d292":"index_vals = df['Genre'].astype('category').cat.codes\n\nfig = go.Figure(data=go.Splom(\n                dimensions=[dict(label='Audience  score %',\n                                 values=df['Audience  score %']),\n                            dict(label='Profitability',\n                                 values=df['Profitability']),\n                            dict(label='Rotten Tomatoes %',\n                                 values=df['Rotten Tomatoes %']),\n                            dict(label='Worldwide Gross',\n                                 values=df['Worldwide Gross'])],\n                showupperhalf=False, \n                text=df['Film'],\n                marker=dict(color=index_vals,\n                            showscale=False, # colors encode categorical variables\n                            line_color='white', line_width=0.5)\n                ))\n\n\nfig.update_layout(\n    title='Movies',\n    width=1000,\n    height=1000,\n)\n\nfig.show()","96b4747d":"genre_by_year = df.groupby('Year')['Genre'].value_counts().reset_index(level=0).rename(columns={'Genre': 'Genre count'}, index={'index': 'Genre'})\ngenre_by_year","221dfe14":"fig = px.line(genre_by_year, x='Year', y='Genre count', color= genre_by_year.index, title='Movies By Genre in Each Year')\nfig.show()","fc5ef69b":"fig = px.scatter(df, x='Year', y='Profitability', title='Movies By Profitability in Each Year')\nfig.show()","0fadc7c3":"fig = px.scatter(df, x='Year', y='Worldwide Gross', title='Movies By Worldwide Gross in Each Year')\nfig.show()","cb17d7c8":"top_15 = df.sort_values('Worldwide Gross', ascending=False)[:15]\ntop_15","6d724b7a":"fig = px.bar(top_15, x='Film', y= 'Worldwide Gross',  hover_data = top_15[['Year','Genre']], color='Genre')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","15c742ca":"rotten_tomatoes_top_15 = df.sort_values('Rotten Tomatoes %', ascending=False)[:15]\nrotten_tomatoes_top_15","e097b62b":"fig = px.bar(rotten_tomatoes_top_15, x='Film', y= 'Rotten Tomatoes %',  hover_data = rotten_tomatoes_top_15[['Year','Genre']], color='Genre')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","f6bd82d2":"audience_score_top_15 = df.sort_values('Audience  score %', ascending=False)[:15]\naudience_score_top_15","4fadd33d":"fig = px.bar(audience_score_top_15, x='Film', y= 'Audience  score %',  hover_data = audience_score_top_15[['Year','Genre']], color='Genre')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","66e8b244":"top_15_profit = df.sort_values('Profitability', ascending=False)[:15]\ntop_15_profit","d9426f82":"fig= px.bar(top_15_profit, x='Film', y= 'Profitability',  hover_data = top_15_profit[['Year','Genre']], color='Lead Studio')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","2663686a":"### Worldwide Gross by Year","84ce179c":"Before going further, let's summarize what we have got from the dataset.\n\n- Our dataset has 74 films from different genres and lead studios.\n\n- Object data type variables, like genre and lead studio can be grouped and see the differences among them.\n\n- There are several  missing values to look for it. \n\n-  Numerical variables deserves special attention for further analysis.\n","6b9bb61b":"- As a data type, everything is in order to work on.","9a830e0f":"- Let's see top 15 Rotten Tomatoes % Rating Movies","f9629e76":"- It was a quite pleasure to share with you this detailed, beginner friendly EDA. Thanks for your time.\n\n- All the best ","d049aa02":"- From the line plot we can see that Movies in the Comedy and Drama genres do not have consistency by year\n- Movies in Romance genre, increased significantly after 2008 \n- Animation movies are stable in count by year. ","a8eda5f8":"- 55% of the movies are in the Comedy genre\n- Romance and Drama follows it ","4f29b9b7":"#### Top 15 Rotten Tomatoes % Rating Movies","e78ea627":"### Audience Score %","f0e00b1d":"- Befor moving on the details, let's see the correlation matrix for our dataset","11b83a86":"#### Top 15 WorldWide Gross Movies","e713c90b":"- In this study, we are going to make Exploratory Data Analysis (EDA) with the Hollywood's Most Profitable Movies dataset. \n- Study aims to be beginner friendly and give as much as possible explanation for each step on the way.\n- Study's dataset has 74 movies along with their ratings, profitability, worldwide gross and leading studio.\n- Data includes 2007-2011 movies.","ac6f0e53":"#### Lead Studio","5aaa5c2c":"#### Top 15 Most Profitable Movies","a13019d8":"- First, let's import the required libraries.\n- We will use Plotly's interactive environment for visualization.","ee0df271":"- After getting overall picture about the data, we can go into more details.","298bab09":"- Seems quite OK to use in the groupby.\n- Noted","a329b6e9":"## This notebook is a part of the 9 Beginner Friendly EDAs\n## If you like this one, you can also check out other notebooks in the Beginner Friendly EDAs series!\n\n* [Data Analyst Jobs - EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-data-analyst-jobs)\n* [Top Games on Google Play Store](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-top-games)\n* [UDEMY Courses EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-udemy)\n* [World Happiness Report - EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-eda)\n* [Countries Life Expectancy](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly)\n* [Netflix Movies- EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-netflix)\n* [Amazon Top 50 Bestselling Books EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-amazon)\n* [London Bike Sharing EDA](https:\/\/www.kaggle.com\/kaanboke\/plotly-beginner-friendly-london-bike)\n","c92c1c67":"#### Missing Values","2d8bf365":"- Yeah, we have a quite a number of outliers and rightly skewed distribution of the Profitability of the movies.","6e88efcf":"- Let's remember, which columns have the missing values","64bc8312":"#### Profitability","57b2b312":"- In addition to domain knowledge and expertise, there are tons of different ways to deal with the missing values.\n\n- Most of the time, people tend to use drop function or use fillna function to use that row in their analysis. As I said, it depends on the data, domain knowledge and importance of the variable in our analysis.\n\n- For our analysis in this dataset, main variable which we want to work on it, is 'Film'. If we have the name of the film and also values for at least some of the other variables, we can use that row.\n\n- Based on aferomentioned points, we can keep this row, it has a lot of usefull information.\n","5224d3e0":"- Independent studios make 26% of the all the studios in this dataset.\n- Warner Bros also comes close by 16% ","a80ebe7b":"### Analysis Part","37e03ac4":"- And finally, let's see the most profitable  15 movies","057652f7":"- Based on the mean and median values, auidence score seems quite normally distributed.\n- Both mean and median value is 64.","dfa34912":"- Let's see top 15 Audience score % Rating Movies","b7c1d04e":"- We have rightly skewed distribution (mean is signicantly bigger than median)\n- Which basicaly means, we have possible outliers in our dataset and they affect mean value.\n- Let's see it.","1da80723":"### Profitability by Year","b1ef5884":"- Recently I got a lot of feedback from my dear friends who just change or about the change their career towards to Data Analysis\/ Data Science and Machine Learning areas about the lack of material between beginning the analysis journey and the advanced techniques.\n\n- They are looking for detailed but at the same time beginner friendly, not so much complicated (with different regression, normalization techniques, etc.) explained Explanatory Data Analysis examples, which show them how to start and most importantly how to read the descriptive statistics and graphs.\n\n- After getting these feedbacks, I have decided to make some kind of series of EDA\u2019s from different datasets, without making so complicated for the people at their first steps of DS\/ML journey.\n\n### This notebook is part of the 9 Beginner Friendly EDAs. If these EDAs would be helpful to anyone, I would be more than happy.\n\n","16cb10f0":"#### **INTRO**\n\n","aa49b78c":"- Audience score and Rotten Tomates scores are good variables to use for rating purposes. \n- But in this row we don't have any of them.\n- But still we have values for other columns, so we can keep this row.","fd7aeb0e":"- Both ratings rated Wall E with the highest score.\n- On the other hand, 'Twilight', 'PS I Love You' and 'The Twilight Saga' has lower score in Rotten Tomatoes than Audience Scores.","0c08feea":"Based on the results:\n- There is positive but not so strong relationship (.60) between Audience Score and Rotten Tomatoes\n- Also there is positive but weak (.395) relationship between Audience Score and the Worldwide Gross.","e27f6137":"- Yep, as you correctly see, we have highly rightly skewed distribution (mean= 136.5, median = 73.19)\n- We have possible outliers.\n- Let's see it","bbd62817":"- Let's look at the top 15 WorldWide Gross Movies","6d8f4236":"- Interestingly, or not interestingly, 'Fireproof', the most profitable movie in our dataset, has low score in both of the ratings.\n\n- Almost all of the lead studios have their movies in the most profitable top 15 movies list.","ed4cc3a2":"- Profitability has 3 missing values.\n- Even though we don't have profitability values in these rows, we have values for other columns.\n- So better to keep them.","1ff035d1":"- We have 74 films and 8 variables to work on","7e515018":"- Since we will use all the films, film column must be without missing values. So we are OK for the film column.\n- Genre, Worldwide Gross and Year columns do not have any missing values. Hurray!!\n- Let's see the missing values.","6c84cc1f":"- We have maximum number of 96 in the data. It affects mean score.\n- We can expect rightly skewed distribution but not that much extend.\n- Because mean and median scores are close to each others (47 & 45)","411317c5":"- We have several missing values, which we need to look into.","717a6d9c":"### Overview Stage\n\n- Read the csv\n- Look for basic information about the dataset","4e92b310":"- Everything seems OK.  Let's move on to the next step: **analysis part**.","9814ebc9":"- Thanks for the dataset contibutor for this data. I really enjoyed working on it.","80d91586":"#### Genre","3ef9a61e":"#### Rotten Tomatoes %","58181e74":"- It can be used.\n- OK it is not in a perfect shape to use in group by, but not bad at all to use. \n- Noted.","0ac3a05b":"#### Look at the 'Genre' and 'Lead Studio'","f7274d8d":"#### Top 15 Audience score % Rating Movies","4644cdfc":"- Let's make the necessary adjustments before moving to the analysis part."}}