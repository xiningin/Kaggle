{"cell_type":{"7963bfbb":"code","43874d8c":"code","e34cc1ab":"code","8cff4885":"code","ea071b12":"code","fbcfbe5c":"code","18b10a1a":"code","738a4b71":"code","4b5d061e":"code","40a3bf7a":"code","a944bd74":"code","8fee1938":"code","74f0c4f3":"code","159041cb":"code","a03dbb61":"code","a746c7ee":"code","1b43d3a8":"markdown","a8c29277":"markdown","298bfd46":"markdown","20400676":"markdown","1d746416":"markdown","cd9452a1":"markdown","dc1cc435":"markdown","5c774d79":"markdown","ed370e38":"markdown","1be5a245":"markdown","bcdf9b74":"markdown","dc22ee10":"markdown","0eb5dfe0":"markdown","32a64496":"markdown","66791d8d":"markdown","319e8cfa":"markdown","cf089fec":"markdown","055d1127":"markdown","3d4be47f":"markdown","f2f3c6fa":"markdown"},"source":{"7963bfbb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43874d8c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences","e34cc1ab":"df = pd.read_csv('\/kaggle\/input\/hotel-reviews\/Hotel_Reviews.csv')\ndf.head()","8cff4885":"# Getting the shape of data\ndf.shape","ea071b12":"vocab_size = 600\nembedding_dim = 20\nmax_length = 1000\ntrunc_type='post'\npadding_type='post'\noov_tok = \"<OOV>\"\ntraining_size = 20451","fbcfbe5c":"sentences = df['Review'].tolist()\nlabels  = df['Rating'].tolist()","18b10a1a":"training_sentences = sentences[0:training_size]\ntesting_sentences = sentences[training_size:]\ntraining_labels = labels[0:training_size]\ntesting_labels = labels[training_size:]","738a4b71":"tokenizer = Tokenizer(num_words=vocab_size, oov_token=oov_tok)\ntokenizer.fit_on_texts(training_sentences)\n\nword_index = tokenizer.word_index\n\ntraining_sequences = tokenizer.texts_to_sequences(training_sentences)\ntraining_padded = pad_sequences(training_sequences, maxlen=max_length, padding=padding_type, truncating=trunc_type)\n\ntesting_sequences = tokenizer.texts_to_sequences(testing_sentences)\ntesting_padded = pad_sequences(testing_sequences, maxlen=max_length, padding=padding_type, truncating=trunc_type)","4b5d061e":"import numpy as np\ntraining_padded = np.array(training_padded)\ntraining_labels = np.array(training_labels)\ntesting_padded = np.array(testing_padded)\ntesting_labels = np.array(testing_labels)","40a3bf7a":"model = tf.keras.Sequential([\n    tf.keras.layers.Embedding(vocab_size, embedding_dim, input_length=max_length),\n    tf.keras.layers.GlobalAveragePooling1D(),\n    tf.keras.layers.Dense(42, activation='relu'),\n    tf.keras.layers.Dense(6, activation='sigmoid')\n])\nloss_fn = keras.losses.SparseCategoricalCrossentropy()\nmodel.compile(loss=loss_fn,optimizer='adam',metrics=['accuracy'])","a944bd74":"# Getting Summary\nmodel.summary()","8fee1938":"num_epochs = 50\nhistory = model.fit(training_padded, training_labels, epochs=num_epochs, validation_data=(testing_padded, testing_labels))","74f0c4f3":"import matplotlib.pyplot as plt\n\ndef plot_graphs(history, string):\n    plt.plot(history.history[string])\n    plt.plot(history.history['val_'+string])\n    plt.xlabel(\"Epochs\")\n    plt.ylabel(string)\n    plt.legend([string, 'val_'+string])\n    plt.show()\nplot_graphs(history, \"accuracy\")\nplot_graphs(history, \"loss\")","159041cb":"reverse_word_index = dict([(value, key) for (key, value) in word_index.items()])\n\ndef decode_sentence(text):\n    return ' '.join([reverse_word_index.get(i, '?') for i in text])\n\nprint(decode_sentence(training_padded[0]))\nprint(training_sentences[0])\nprint(labels[0])","a03dbb61":"for n in range(10):\n    print(testing_sentences[n],': ',testing_labels[n],'\\n')","a746c7ee":"# Checking Predictions\nsentence = [\"Feeling as though you are on top of the world, immerse yourself in the beauty that this unique landscape has to offer, bordered by pristine white beaches and the brilliant blues of the sea. Feel inspired by the hopes and dreams that have\"]\nsequences = tokenizer.texts_to_sequences(sentence)\npadded = pad_sequences(sequences, maxlen=max_length, padding=padding_type, truncating=trunc_type)\nprint(model.predict(padded))","1b43d3a8":"***Seperating data column to sentences and Labels***","a8c29277":"***Decoding Sentences*** ","298bfd46":"# Resturant Reviews\n","20400676":"* **Setting Parameters**","1d746416":"**This Model's Accuracy is 67.50%**","cd9452a1":"# Getting Training and Testing Data","dc1cc435":"# Getting Prediction with Randomly Created Reviews","5c774d79":"***Please Leave your Valuable feedback in the comments below!!!!!!***","ed370e38":"# Loading the Data","1be5a245":"# Prediction on Testing Data","bcdf9b74":"# Creating CNN model\n# Adding Layers\n# Compiling Models","dc22ee10":"***DataDescription***\n> The data consists of 2 columns Review and Rating\n> \n> Review: The reviews on Hotel were in the Review Column\n> \n> Rating: The Ratings are denoted in the Rating column in the form of 1-5 \n> \n> 1- Bad Review\n> \n> 2- Average Review\n>\n> 3- Better Review\n> \n> 4- Good Review\n>\n> 5- Best Review","0eb5dfe0":"* The 1st Graph Show the Difference B\/w Increase in accuracy and val_accuracy \n* The 2nd Graph show the difference b\/w decrease in loss and val_loss","32a64496":"# Setting Tokenizer And Padding data","66791d8d":"# Plotting accuracy and loss Graph","319e8cfa":"# Fiting CNN Model","cf089fec":"> As we can see here the testing was all perfect!!!!!\n\n> 1- Bad Review\n> \n> 2- Average Review\n>\n> 3- Better Review\n> \n> 4- Good Review\n>\n> 5- Best Review","055d1127":"* As we can see the sentences i created randomly were Predicted almost perfectly\n* **The reviews** was **good** to it got Rating which is **almost equals** to **5**","3d4be47f":"***Converting data into arrays***","f2f3c6fa":"# Adding Basic Liberaries"}}