{"cell_type":{"ab23ea02":"code","915bbcd3":"code","7b2dee25":"code","c291d2fd":"code","e0ade285":"code","c344ae24":"code","1c42be2b":"code","5ed9ea0a":"code","1ddb2f64":"code","270c7804":"code","4b347be9":"code","aad4ac90":"code","34a8e2a5":"code","02726ac3":"markdown"},"source":{"ab23ea02":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_circles\nfrom sklearn import svm, metrics","915bbcd3":"def make_meshgrid(x, y, h=.02):\n    \"\"\"Create a mesh of points to plot in\n\n    Parameters\n    ----------\n    x: data to base x-axis meshgrid on\n    y: data to base y-axis meshgrid on\n    h: stepsize for meshgrid, optional\n\n    Returns\n    -------\n    xx, yy : ndarray\n    \"\"\"\n    x_min, x_max = x.min() - 1, x.max() + 1\n    y_min, y_max = y.min() - 1, y.max() + 1\n    xx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n                         np.arange(y_min, y_max, h))\n    return xx, yy\n\n\ndef plot_contours(ax, clf, xx, yy, **params):\n    \"\"\"Plot the decision boundaries for a classifier.\n\n    Parameters\n    ----------\n    ax: matplotlib axes object\n    clf: a classifier\n    xx: meshgrid ndarray\n    yy: meshgrid ndarray\n    params: dictionary of params to pass to contourf, optional\n    \"\"\"\n    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n    Z = Z.reshape(xx.shape)\n    out = ax.contourf(xx, yy, Z, **params)\n    return out","7b2dee25":"samples = 500\ntrain_pop = 0.8\n\nx, y = make_circles(n_samples=samples, noise=0.05, random_state=123)","c291d2fd":"x[:3, 0], x[:3, 1], y[:3]","e0ade285":"df = pd.DataFrame(dict(x=x[:, 0], y=x[:, 1], label=y))\ndf.head()","c344ae24":"groups = df.groupby('label')","1c42be2b":"fig, ax = plt.subplots()\nax.margins(0.05)\nfor name, group in groups:\n    ax.plot(group.x, group.y, marker='o', linestyle='', ms=6, label=name)\nax.legend()\nplt.show()","5ed9ea0a":"# Escala min e max\nx = (x-x.min()) \/ (x.max()-x.min())\nx[:5]","1ddb2f64":"# linear\nC = 1.0\nmodelo = svm.SVC(kernel='linear', C=C)\nmodelo.fit(x, y)","270c7804":"# Visualizando grid 2x2\ntitulos = ('SVC com kernel linear')\n\nfig, sub = plt.subplots()\nplt.subplots_adjust(wspace=0.4, hspace=0.4)\n\nx0, x1 = x[:, 0], x[:, 1]\nxx, yy = make_meshgrid(x0, x1)\n\nplot_contours(sub, modelo, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\nsub.scatter(x0, x1, c=y, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\nsub.set_xlim(-0.25, 1.25)\nsub.set_ylim(-0.25, 1.25)\nsub.set_xlabel('X')\nsub.set_ylabel('Y')\nsub.set_title(titulos)\nplt.show()","4b347be9":"# poly\nC = 1.0\nkernel = 'poly'\nmodelo = svm.SVC(kernel=kernel, C=C)\nmodelo.fit(x, y)\n\ntitulos = (f'SVC com kernel {kernel}')\n\nfig, sub = plt.subplots()\nplt.subplots_adjust(wspace=0.4, hspace=0.4)\n\nx0, x1 = x[:, 0], x[:, 1]\nxx, yy = make_meshgrid(x0, x1)\n\nplot_contours(sub, modelo, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\nsub.scatter(x0, x1, c=y, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\nsub.set_xlim(-0.25, 1.25)\nsub.set_ylim(-0.25, 1.25)\nsub.set_xlabel('X')\nsub.set_ylabel('Y')\nsub.set_title(titulos)\nplt.show()","aad4ac90":"# sigmoid\nC = 1.0\nkernel = 'sigmoid'\nmodelo = svm.SVC(kernel=kernel, C=C)\nmodelo.fit(x, y)\n\ntitulos = (f'SVC com kernel {kernel}')\n\nfig, sub = plt.subplots()\nplt.subplots_adjust(wspace=0.4, hspace=0.4)\n\nx0, x1 = x[:, 0], x[:, 1]\nxx, yy = make_meshgrid(x0, x1)\n\nplot_contours(sub, modelo, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\nsub.scatter(x0, x1, c=y, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\nsub.set_xlim(-0.25, 1.25)\nsub.set_ylim(-0.25, 1.25)\nsub.set_xlabel('X')\nsub.set_ylabel('Y')\nsub.set_title(titulos)\nplt.show()","34a8e2a5":"# rbf\nC = 1.0\nkernel = 'rbf'\nmodelo = svm.SVC(kernel=kernel, C=C)\nmodelo.fit(x, y)\n\ntitulos = (f'SVC com kernel {kernel}')\n\nfig, sub = plt.subplots()\nplt.subplots_adjust(wspace=0.4, hspace=0.4)\n\nx0, x1 = x[:, 0], x[:, 1]\nxx, yy = make_meshgrid(x0, x1)\n\nplot_contours(sub, modelo, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\nsub.scatter(x0, x1, c=y, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\nsub.set_xlim(-0.25, 1.25)\nsub.set_ylim(-0.25, 1.25)\nsub.set_xlabel('X')\nsub.set_ylabel('Y')\nsub.set_title(titulos)\nplt.show()","02726ac3":"# **SVM** \n\u00c9 usado em situa\u00e7\u00f5es quando os dados muitas dimens\u00f5es, como por exemplo modelos de reconhecimento de escrita a m\u00e3o"}}