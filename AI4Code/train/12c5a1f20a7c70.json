{"cell_type":{"7375fa81":"code","cf2cfd70":"code","5a67a537":"code","f528125b":"code","9fd6a4f1":"code","bbc1783a":"code","46963e34":"code","68399e69":"code","2ed48967":"code","6d55394a":"code","e7830b0d":"code","f9f2a281":"code","365962f6":"code","b9084b59":"code","1a4c0b03":"code","47e94d97":"code","b4bfc47a":"code","98d346ac":"code","1011e17b":"code","3db1045c":"code","1f044631":"code","f3a08717":"code","12a74f9b":"code","930a0ab6":"code","1175ade4":"code","db028cd7":"code","5d7ecd32":"code","75761adc":"code","8091f207":"code","bde58ff6":"code","90ff4dab":"code","175ad38e":"code","eaa704b8":"code","2fe35dd1":"code","0b8d0a4e":"code","dde1e6f9":"code","5da90bf6":"markdown","4df80e59":"markdown","a36928f9":"markdown","3386e701":"markdown","af5abe51":"markdown","9b0a3be6":"markdown","ebe6c45a":"markdown","a7d9ba08":"markdown","5aecf7c9":"markdown","25a4d982":"markdown","d23b9e3e":"markdown","3f723efa":"markdown","bd852cb7":"markdown","6dec4598":"markdown","334fcdcc":"markdown","39fedcd2":"markdown","bcf625d0":"markdown","6c664fc3":"markdown","4631237b":"markdown","f5b3bc60":"markdown","c47c037e":"markdown","ddb9c5b4":"markdown","c7592cd4":"markdown","3019e35f":"markdown","1728eaee":"markdown","8decca37":"markdown","82a8d9de":"markdown","7be0b020":"markdown","4ebd59c8":"markdown","be7830b2":"markdown","7e648908":"markdown","f2e2ac1e":"markdown","a10bef90":"markdown","cea25a20":"markdown","66a932a5":"markdown","61101212":"markdown","eb82732c":"markdown","22d9b8f7":"markdown","952d6a11":"markdown","7796a7c4":"markdown","b2706a20":"markdown","94357704":"markdown","ddb28e6d":"markdown","f2b91b07":"markdown","5905d29d":"markdown","abe3b181":"markdown","e8782f97":"markdown","cb0aa175":"markdown","6ccdf2b0":"markdown","01499ebc":"markdown","a89eaadb":"markdown"},"source":{"7375fa81":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf2cfd70":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud","5a67a537":"ind_food = pd.read_csv('\/kaggle\/input\/indian-food-101\/indian_food.csv')","f528125b":"ind_food.head()","9fd6a4f1":"ind_food.isnull().sum()","bbc1783a":"ind_food.dropna(inplace = True)","46963e34":"ind_food.isnull().sum()","68399e69":"sns.countplot(ind_food['flavor_profile'])","2ed48967":"ind_food.drop(ind_food[ind_food['flavor_profile']=='-1'].index, inplace = True)\nsns.countplot(ind_food['flavor_profile'])","6d55394a":"sns.countplot(ind_food['course'])","e7830b0d":"ind_food.drop(ind_food[ind_food['region']=='-1'].index, inplace = True)\nsns.countplot(ind_food['region'])","f9f2a281":"ind_food['diet'].value_counts().plot(kind = 'pie', figsize = (5,5))","365962f6":"sns.barplot(x = 'diet',y = 'cook_time', data = ind_food)","b9084b59":"sns.barplot(x = 'course',y = 'cook_time', data = ind_food)","1a4c0b03":"sns.barplot(x = 'course',y = 'prep_time', data = ind_food)","47e94d97":"sns.barplot(x = 'diet',y = 'prep_time', data = ind_food)","b4bfc47a":"sweets = ind_food[(ind_food['flavor_profile']=='sweet')]\nspicy_ = ind_food[(ind_food['flavor_profile']=='spicy')]\nbitter_ = ind_food[(ind_food['flavor_profile']=='bitter')]\nsour_ = ind_food[(ind_food['flavor_profile']=='sour')]","98d346ac":"plt.figure(figsize=(20,5))\nplt.xticks(rotation=75)\nsns.countplot(sweets['state'])","1011e17b":"plt.figure(figsize=(20,5))\nplt.xticks(rotation=75)\nsns.countplot(spicy_['state'])","3db1045c":"plt.figure(figsize=(20,5))\nplt.xticks(rotation=75)\nsns.countplot(bitter_['state'])","1f044631":"plt.figure(figsize=(20,5))\nsns.countplot(sour_['state'])","f3a08717":"east = ind_food[(ind_food['region']=='East')]\nwest = ind_food[(ind_food['region']=='West')]\nnorth = ind_food[(ind_food['region']=='North')]\nsouth = ind_food[(ind_food['region']=='South')]\nnorth_east = ind_food[(ind_food['region']=='North East')]\ncentral = ind_food[(ind_food['region']=='Central')]","12a74f9b":"north = north.reset_index()\ningredients = []\nfor i in range(0,len(north)):\n    text = north['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","930a0ab6":"ingredients = []\nfor i in range(0,len(north)):\n    text = north['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","1175ade4":"south = south.reset_index()\ningredients = []\nfor i in range(0,len(south)):\n    text = south['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","db028cd7":"ingredients = []\nfor i in range(0,len(south)):\n    text = south['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","5d7ecd32":"east = east.reset_index()\ningredients = []\nfor i in range(0,len(east)):\n    text = east['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","75761adc":"ingredients = []\nfor i in range(0,len(east)):\n    text = east['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","8091f207":"west = west.reset_index()\ningredients = []\nfor i in range(0,len(west)):\n    text = west['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","bde58ff6":"ingredients = []\nfor i in range(0,len(west)):\n    text = west['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","90ff4dab":"north_east = north_east.reset_index()\ningredients = []\nfor i in range(0,len(north_east)):\n    text = north_east['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","175ad38e":"ingredients = []\nfor i in range(0,len(north_east)):\n    text = north_east['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","eaa704b8":"central = central.reset_index()\ningredients = []\nfor i in range(0,len(central)):\n    text = central['state'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","2fe35dd1":"ingredients = []\nfor i in range(0,len(central)):\n    text = central['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 8).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","0b8d0a4e":"sns.barplot(x=ind_food['diet'],y=ind_food['prep_time'], data=ind_food, hue=ind_food['flavor_profile'])","dde1e6f9":"ind_food.drop(ind_food[ind_food['flavor_profile']=='-1'].index, inplace = True)\nsns.barplot(x=ind_food['diet'],y=ind_food['cook_time'], data=ind_food, hue=ind_food['flavor_profile'])","5da90bf6":"A plot of preperation time taken to prepare two categories of Indian Cuisines w.r.t 'diet'.","4df80e59":"* As per the above plot spicy food takes more preperation time compared to other flavour profiles among both 'Vegetarian' and 'Non-Vegetarian' categories.","a36928f9":"A plot on preperation time w.r.t categories of 'courses'.","3386e701":"Preperation time of dishes in accordance to 4 different flavour profiles under the category of 'Vegetarian' and 'Non-Vegetarian'.","af5abe51":"# Categorising different states according to regions of the country.","9b0a3be6":"Checking if any null values are present","ebe6c45a":"* The preperation time for vegetarian and non-vegetarian courses are approx similar.","a7d9ba08":"A plot on COURSES of food Indians prefer.","5aecf7c9":"Ingredients used by the Northern region of the country","25a4d982":"# Creating a DataFrame","d23b9e3e":"The ingredients used by Western region of the country","3f723efa":"* The preperation time for starters is more compared to other food courses.\nTHe preperation becomes a mundane task and thus starters are not preferred to be cooked often compared to other course.","bd852cb7":"Plot of count of Indian Cuisines available in accordance with Regions of India.","6dec4598":"# Basic Visualisation of Indian Cuisines.","334fcdcc":"Dropping null values","39fedcd2":"* The cook time for dessert is more compared to all the food courses.","bcf625d0":"* More vegetarians are present in India compared to the Non-Vegeratians","6c664fc3":"* As per the above plot, sweet profiled dish need more cooking time and is present under 'Vegetarian' categories.","4631237b":"Catergories with respect to taste of Indain Cuisines","f5b3bc60":"* As per above plot, only Gujarat state is observed to cosume sour profiled foods.","c47c037e":"1) The states under the Northern region of the country","ddb9c5b4":"As per the graph,\n* Main course is observed to be dominant. Main course may include rice items, chapathis, etc.\n* Dessert come next in the line, as Indians love sweets or something soothing after a heavy meal or at celebrations.\n* Starters aren't that preferred compared to snacks.","c7592cd4":"The ingredients used by Southern region of the country","3019e35f":"5) The states under the North-eastern region of the country","1728eaee":"The ingredients used by North-eastern region of the country","8decca37":"Cooking time of dishes in accordance to 4 different flavour profiles under the category of 'Vegetarian' and 'Non-Vegetarian'.","82a8d9de":"A plot of cook-time taken to prepare two categories of Indian Cuisines w.r.t 'diet'.","7be0b020":"A pie plot of Vegetarian and Non-Vegetarian categories in India according to the dataset.","4ebd59c8":"* By the above plot, we can observe that West Bengal consumes more sweets compared to other states.","be7830b2":"Removal of '-1' category in the 'flavour_profile'","7e648908":"The ingredients used by Eastern region of the country","f2e2ac1e":"The ingredients used by Central region of the country","a10bef90":"As per the graph,\n* Indians tend to eat more of spicy food camparitively with other countries.\n* Sweets are the next best cuisine avaialble with a great demand in India especially during festive seasons.","cea25a20":"6) The states under the Central region of the country","66a932a5":"# Creating new DataFrames for the following categories of flavour profiles:\n# * Sweet\n# * Spicy\n# * Bitter\n# * Sour","61101212":"* As per above plot, Punjab consumes more spicy food compared to other states","eb82732c":"2) A plot to see which state consumes the more spicy foods.","22d9b8f7":"A plot on cook time w.r.t categories of 'courses'","952d6a11":"* As per above plot, only two states are observed to consume bitter flavour profiled dish","7796a7c4":"The head of the DataFrame - 'ind_food'","b2706a20":"4) A plot to see which state consumes the more sour profiled foods.","94357704":"* West region of India have a huge number of different type of Indian Cuisines that add up to the famous Indian Dishes prepared world-wide.\n* South Region of India give in the send large count of many different Indian Cuisines available, rice being the dominant and staple food of South India.\n* Central region of the country has the least count of available Indian Cuisines.","ddb28e6d":"1) A plot to see which state consumes the more sweets.","f2b91b07":"4) The states under the Western region of the country","5905d29d":"3) The states under the Eastern region of the country","abe3b181":"# Visualisation","e8782f97":"# Importing basic plotting libraries","cb0aa175":"3) A plot to see which state consumes the more bitter flavoured foods.","6ccdf2b0":"* Vegetarian dishes tend to take more time to cook compared to Non-Vegetarian dishes\n* More than 30 minutes of cook-time is required for delicious veg dish.","01499ebc":"2) The states under the Southern region of the country","a89eaadb":"Smaller errors will be rectified. :D"}}