{"cell_type":{"49063124":"code","31328c8b":"code","718288b6":"code","910a64d9":"code","800adfec":"code","266ea1ee":"code","c65dde5e":"code","d6e25aa0":"code","cbd4dd43":"code","9ca4a03f":"code","39bf7bba":"code","0d9638a8":"code","458b1a8a":"code","067b9db2":"code","7043ae21":"code","4a2e3270":"markdown","463811e3":"markdown","f74316cb":"markdown","8096cff3":"markdown","8be4169a":"markdown","0980036a":"markdown","2cc1e1d3":"markdown","c094e10a":"markdown","5b51a70d":"markdown","f20cae41":"markdown","e648e7f9":"markdown","2daff999":"markdown","bde5acec":"markdown","23595e77":"markdown","90ade02a":"markdown","0ca487a1":"markdown"},"source":{"49063124":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n#split train and test set\nfrom sklearn.model_selection import train_test_split\n\n#sklearn model\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\n","31328c8b":"data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\n\ndata.head()","718288b6":"#summary of variables in data\nprint(data.describe())\n\n#identify column names,column data type and shape of the dataset\nprint(np.shape(data))\n\nprint(data.columns.tolist())\n\ndata.dtypes","910a64d9":"#identify missing values in dataset\ndata.isnull().sum()\n","800adfec":"corrMatrix = data.corr()\nplt.subplots(figsize=(20,20))\n\nsns.heatmap(corrMatrix, annot=True)\nplt.figure(figsize=(100,100))\nplt.show()","266ea1ee":"#check the data provided according to our target variable(death_event)\n\nprint(data['DEATH_EVENT'].value_counts())\ndata['DEATH_EVENT'].value_counts().plot(kind='bar')","c65dde5e":"sns.histplot(data,x='age',hue='DEATH_EVENT',multiple='stack')\n","d6e25aa0":"sns.histplot(data,x='age',hue='sex',multiple=\"stack\")","cbd4dd43":"col = ['time','ejection_fraction','serum_creatinine','age','serum_sodium']\npredictors = data[col]\ntarget = data[\"DEATH_EVENT\"]\n\nX_train, X_test, y_train, y_test = train_test_split(predictors, target, test_size = 0.22, random_state = 0)\n\n","9ca4a03f":"# Feature Scaling\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","39bf7bba":"#gaussian naive bayes\ngnb = GaussianNB()\ngnb.fit(X_train, y_train)\n  \n# making predictions on the testing set\ny_pred = gnb.predict(X_test)\n  \n# comparing actual response values (y_test) with predicted response values (y_pred)\nacc_naivebayes = metrics.accuracy_score(y_test, y_pred)*100\nprint(\"Gaussian Naive Bayes model accuracy(in %):\",acc_naivebayes )\nprint(classification_report(y_test, y_pred))","0d9638a8":"#logistic regression \n\nclassifier = LogisticRegression(random_state = 22)\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\nsns.heatmap(cm, annot=True)\n\nacc_logisticregression = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint (\"Logistic Regression model Accuracy : \", acc_logisticregression) \nprint(classification_report(y_test, y_pred))","458b1a8a":"#random forest\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nacc_randomforest = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(\"Random Forest Model Accuracy : \",acc_randomforest)\nprint(classification_report(y_test, y_pred))","067b9db2":"#SVM Classifier\n\nfrom sklearn.svm import SVC  \nclf = SVC(kernel='linear') \n  \n# fitting x samples and y classes \nclf.fit(X_train, y_train) \ny_pred = clf.predict(X_test)\n\nacc_SVM = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(\"SVM Model Accuracy : \",acc_SVM)\nprint(classification_report(y_test, y_pred))","7043ae21":"from sklearn.tree import DecisionTreeClassifier\n\nmodeldt = DecisionTreeClassifier()\n\n# fit the model with the training data\nmodeldt.fit(X_train,y_train)\n\n# depth of the decision tree\nprint('Depth of the Decision Tree :', modeldt.get_depth())\n\n# predict the target on the train dataset\npredict_train = modeldt.predict(X_train)\n\n# Accuray Score on train dataset\naccuracy_train = accuracy_score(y_train,predict_train)\nprint('accuracy_score on train dataset : ', accuracy_train)\n\n# predict the target on the test dataset\npredict_test = model.predict(X_test)\n\n# Accuracy Score on test dataset\naccuracy_test = accuracy_score(y_test,predict_test)\nprint('accuracy_score on test dataset : ', accuracy_test*100)\nprint(classification_report(y_test, y_pred))","4a2e3270":"## Heart Failure Prediction ","463811e3":"# **<span style=\"color:#6daa9f;\">LOAD DATA<\/span>**\n","f74316cb":"From here,we can see that the dataset contains 13 columns with 299 rows.\nThe datatype for every rows are also all numerics \n\nDetail About Data:\n\n- Age: age of patient\n- anaemia :whether the patient have a low red blood cell or hemoglobin (0 or 1)\n- creatinine_phosphokinase: an enzyme in our blood (the level of CPK enzyme in blood mcg\/L),  \nhigh level of CPK indicate that there has been an injury or stress to muscle tissue, heart or brain\n- diabetes: if the patient has diabetes (type 2 diabetes patient is 4 times more likely  to develop heart failure than someone without)\n- ejection_fraction : percentage of blood pump out of the heart at each contraction (percentage)\n- high_blood_pressure: if the patient have hypertension\n- plateletes:the level of platelets in blood \n- serum_creatinine: the level of serum creatinine in patient's blood mg\/dL- \n  give an estimation on how well the kidney filters\n- serum_sodium: level of serum sodium in the blood\n- sex:gender of patient (0 or 1) female\/male\n- smoking : if the patient smokes or not\n- time:follow up period of patient\n- death_event:patient deceased during the follow up period\n","8096cff3":"![](https:\/\/viewmedica.com\/images\/thumbslarge\/heartfailure_1280.jpg)\n\nsource : https:\/\/www.wkhs.com\/heart\/conditions-treated\/congestive-heart-failure","8be4169a":" ## 5 MODEL\n \n* Naive Bayes\n* Random Forest\n* Logistic Regression\n* SVM\n* Decision Trees\n","0980036a":"# **<span style=\"color:#6daa9f;\">IMPORTING LIBRARIES<\/span>**\n","2cc1e1d3":"Correlation between all features:\n- follow up time of patient have the highest correlation with death_event \n- followed by ejection fraction\n- linearly collerated age (higher age, more likely to death)\n- serum_creatinine level linearly collerated with death_event\n\nFrom the matrix, I decided to use age, time,ejection_fraction,serum_Creatinine and serum_Sodium\n","c094e10a":"## Model Building","5b51a70d":"### Hi there!\ud83d\ude04 I am new to data science and this is my try on the Heart Failure Prediction dataset. Feel free to comment if you have any questions, insights or advice on this or any data science related :) Upvote if you find my work useful for you! Thank you!","f20cae41":"The sum of missing values for every column.In this case,there are zero missing values for all columns","e648e7f9":"**Split train and test data**\n\n","2daff999":"**Normalize our data**\n\nSince we have many numerical columns in our data with different range of values, I decided to change the values to a common scale using normalization to bring it all in the same range.","bde5acec":"Above clearly shows that our data is imbalanced with the data for '0' is 203 while for '1' is 96 samples.","23595e77":"\n\n- I will not get rid of outliers as these values are medical data which actually have meaning medically\n\n\n","90ade02a":"# **<span style=\"color:#6daa9f;\">EDA<\/span>**\n","0ca487a1":"## Variable Analysis\nReference : https:\/\/towardsdatascience.com\/data-exploration-and-analysis-using-python-e564473d7607\n\nUsing univariate analysis to highlight missing and outlier values.Our variable are categorical variables.\n\nHandling outliers\n\n\n### Data Analysis & Visualization\n\nvisualize every data \n\nAge \n-the number of death event according to age distribution\n\n\n"}}