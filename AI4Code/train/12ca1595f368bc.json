{"cell_type":{"ff5c3bb2":"code","7277f47f":"code","824d9371":"code","43bfa7f2":"code","5cad092f":"code","1cd377f3":"code","0a18e535":"code","85b63cd1":"code","0e74edd0":"code","4746bc97":"code","be912285":"code","ec57d7e2":"code","588fc666":"code","45c3c5c4":"code","9c13c86c":"code","02e6dde4":"code","36eb41a3":"code","67de90f8":"code","d7e8ce3d":"code","7d919916":"code","719543e6":"markdown","be0b3eb4":"markdown","2e6a0095":"markdown","f5907bc1":"markdown","60f10643":"markdown","8a38e4e4":"markdown","8492deb5":"markdown","c63d1645":"markdown","edbda492":"markdown","954efd6c":"markdown","0717c7ff":"markdown","f89e8910":"markdown"},"source":{"ff5c3bb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7277f47f":"filepath = '..\/input\/health-insurance\/states.csv'\ndata = pd.read_csv(filepath)\n","824d9371":"data.head()","43bfa7f2":"data.info()","5cad092f":"dropped_data = data.drop(columns=['Medicaid Enrollment (2013)','Medicaid Enrollment (2016)', 'Medicaid Enrollment Change (2013-2016)', 'Medicare Enrollment (2016)'])","1cd377f3":"for col in dropped_data.columns:\n    print(col, '--')\n    print(dropped_data[col].value_counts())\n    print('---')","0a18e535":"## Needed numerical Values : \nnum_attributes = ['Uninsured Rate Change (2010-2015)', 'Health Insurance Coverage Change (2010-2015)', 'Marketplace Health Insurance Coverage (2016)', 'State Medicaid Expansion (2016)']\n\n# If you want to visualize\/work with 3 attributes uncomment the lines below \n# num_attributes = ['Uninsured Rate Change (2010-2015)', 'Health Insurance Coverage Change (2010-2015)', 'Marketplace Health Insurance Coverage (2016)']\n\nnum_data = dropped_data[num_attributes]\nnum_data.head()\nprint(num_data.info())\n\n","85b63cd1":"from sklearn import preprocessing\n\ndef convert(data):\n    number = preprocessing.LabelEncoder()\n    data['Uninsured Rate Change (2010-2015)'] = number.fit_transform(data['Uninsured Rate Change (2010-2015)'])\n    data=data.fillna(0.00) # fill holes with default value\n    return data\n\n\nnum_data = convert(num_data)","0e74edd0":"\n\nfrom mpl_toolkits import mplot3d\nimport matplotlib.pyplot as plt\n\nfig = plt.figure()\nax = plt.axes(projection=\"3d\")\n\nax.scatter3D(num_data['Uninsured Rate Change (2010-2015)'], num_data['Health Insurance Coverage Change (2010-2015)'], num_data['Marketplace Health Insurance Coverage (2016)'])\n\nplt.show()\n\n","4746bc97":"from sklearn.preprocessing import StandardScaler\nscaled_num_data = StandardScaler().fit_transform(num_data) ","be912285":"mean_data = np.mean(scaled_num_data, axis=0)","ec57d7e2":"cov_matrix = (scaled_num_data - mean_data).T.dot(scaled_num_data - mean_data) \/ (scaled_num_data.shape[0]-1)","588fc666":"\n\n# Computing eigen values and vectors \n\neig_values, eig_vectors = np.linalg.eig(cov_matrix)\n\nprint('Eigen values: --', eig_values)\nprint('Eigen vectors: --', eig_vectors)\n\n","45c3c5c4":"eig_pairs = [(eig_values[i], eig_vectors[:, i]) for i in range(len(eig_values))]\neig_pairs.sort(key = lambda x:x[0], reverse=True)\neig_pairs","9c13c86c":"\n\ntotal = sum(eig_values)\nvar_spread = [(i\/total)*100 for i in sorted(eig_values, reverse=True)]\ncum_var_spread = np.cumsum(var_spread)\nprint(cum_var_spread)\n\n# x_coordinates = ['PC1', 'PC2', 'PC3'] for working with 3 attributes\nx_coordinates = ['PC1', 'PC2', 'PC3', 'PC4']\n\ny_pos = np.arange(len(x_coordinates))\nplt.ylabel('Variance spread in %')\nplt.xticks(y_pos, x_coordinates)\nplt.bar(y_pos, var_spread)\nplt.plot(cum_var_spread, 'r')\nplt.show()\n\n","02e6dde4":"threshold = 90\n\n# If you're working with three attributes\n# threshold = 88 \n \nkeeping_vec = 0\nfor index, percentage in enumerate(cum_var_spread):\n    if percentage > threshold:\n        keeping_vec = index +1 \n        break\n\nprint(\"We keep \", keeping_vec, \" vectors\")","36eb41a3":"num_features = scaled_num_data.shape[1]\n\nprojection_mat = eig_pairs[0][1].reshape(num_features, 1)","67de90f8":"for eig_vec_idx in range(1, keeping_vec):\n    projection_mat = np.hstack((projection_mat, eig_pairs[eig_vec_idx][1].reshape(num_features, 1)))","d7e8ce3d":"PCA_data = scaled_num_data.dot(projection_mat)\n\nPCA_data","7d919916":"plt.scatter(PCA_data[:, 0], PCA_data[:, 1])","719543e6":"**5. Estimating Importance of each Vector**","be0b3eb4":"**3. Scalling Attributes**","2e6a0095":"**6.Projection Matrix**","f5907bc1":" **Implementing PCA without library function**","60f10643":"**To convert String data in  Uninsured Rate change (2010-2015) to Float in the below code cell.**\n","8a38e4e4":"![image.png](attachment:image.png)","8492deb5":"**1.Importing Data**","c63d1645":"graph with 3D scatter plots","edbda492":"and Our Data consist of -","954efd6c":"**4.Computing co-Varience Matrix**","0717c7ff":"**2. Plotting Data in 3D**","f89e8910":"Implementing PCA on Healthcare [Healthcare Coverage](https:\/\/www.kaggle.com\/hhs\/health-insurance) rates provided by US department of Health and Human services"}}