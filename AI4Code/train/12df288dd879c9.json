{"cell_type":{"b5de8c76":"code","c2a37d4c":"code","457f4ab4":"code","81a2bf24":"code","a6e3e00a":"code","4e1ef044":"code","1711a662":"code","d78ff59c":"code","64e826c6":"code","30ec2b6a":"code","b0ffa326":"code","cdca72b2":"code","fbce5d8f":"code","51d7b3ce":"code","003c30ca":"code","7daa2b70":"code","7d3ddbb2":"code","b003c6b4":"code","9dae1d7f":"code","d1ced07a":"markdown","18c17e79":"markdown","d2bd5958":"markdown"},"source":{"b5de8c76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c2a37d4c":"import pandas as pd\nimport numpy as np\nimport os\nfrom matplotlib import pyplot as plt","457f4ab4":"# Get all the file names from the tree of path provided. Please note that the downloaded zipped Kaggle file is extracted under \n# the following path . i.e. 'Idexcel\\Data\\''\n\npath = r'..\/input\/'\n\nfiles = []\nfiles_others = []\n# r=root, d=directories, f = files\nfor r, d, f in os.walk(path):\n    for file in f:\n        if '.csv' in file:\n            files.append(os.path.join(r, file))\n        elif '.pdf' in file:\n            files_others.append(os.path.join(r, file))\n\n# Print all the file names from it's directory tree along with it's column name\nfor file_counter in files:\n    #print(file_counter)\n    with open(file_counter, 'r', encoding=\"utf8\") as f:\n        print(file_counter)\n        print(f.readline())","81a2bf24":"#From the above file name, it's path and their column names, it's found that below three files are required to answer Q2 and Q3\n# covid-statistics-by-us-states-daily-updates.csv, hospital-capacity-by-state-20-population-contracted.csv and definitive-healthcare-usa-hospital-beds.csv\n\ndf_covid_stat = pd.read_csv(r'..\/input\/uncover\/UNCOVER\/covid_tracking_project\/covid-statistics-by-us-states-daily-updates.csv')\ndf_hospital_capacity = pd.read_csv('..\/input\/uncover\/UNCOVER\/harvard_global_health_institute\/hospital-capacity-by-state-20-population-contracted.csv')","a6e3e00a":"# All the states where patients are hospitalised, it is expected to get the ventilators ready to face the eventuality. \n# Hence ventilators are required where 'No of positive patients are more than 90% of hospital beds' for that particular state.\n\n# Read statistics data for the last information collected date. As, the data against each dates are running sum of the respective column values.\n\nchoose_date = df_covid_stat[\"date\"] == df_covid_stat[\"date\"].max()\ndf_covid_stat_new = df_covid_stat[choose_date]\n\n# Join the datasets which are required for answering Q2 and select the useful columns\n\ndf_ventolator_analysis = pd.merge(df_covid_stat_new, df_hospital_capacity, on='state')\ndf_ventolator_analysis_columns = df_ventolator_analysis[[\"state\", \"positive\", \"hospitalized\",\"death\",\"total_icu_beds\"]]\n\ndf_ventolator_analysis_columns.describe()","4e1ef044":"# Above description shows, hospitalized column has less number of available data. So, Find the unique values of hospitalized column\n\ndf_ventolator_analysis_columns[\"hospitalized\"].unique()","1711a662":"df_ventolator_analysis_columns = df_ventolator_analysis_columns.fillna(0)\ndf_ventolator_analysis_columns.info()","d78ff59c":"threshold = 0.5\nstate_potions = df_ventolator_analysis_columns[\"hospitalized\"]\/df_ventolator_analysis_columns[\"total_icu_beds\"] > threshold\ndf_ventolator_analysis_columns = df_ventolator_analysis_columns[state_potions]\ndf_ventolator_analysis_columns[\"hospitalized_to_icu_beds_percent\"] = df_ventolator_analysis_columns[\"hospitalized\"] * 100\/df_ventolator_analysis_columns[\"total_icu_beds\"]\ndf_ventolator_analysis_columns","64e826c6":"# Get the visualization for above analysis\n\nlabels = df_ventolator_analysis_columns[\"state\"]\nx1 = df_ventolator_analysis_columns[\"hospitalized_to_icu_beds_percent\"]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.6  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, x1, width, label='hospitalized_to_icu_beds',  color = 'r')\n\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('hospitalized_to_icu_beds')\nax.set_xlabel('States')\nax.set_title('Hospitalized Vs ICU_beds_percent')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend(loc='best', bbox_to_anchor=(1, 0.5),\n          fancybox=True, shadow=True, ncol=5)","30ec2b6a":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\ndf_definitive_health_care = pd.read_csv('..\/input\/uncover\/UNCOVER\/esri_covid-19\/esri_covid-19\/definitive-healthcare-usa-hospital-beds.csv')\ndf_hospital_capacity = pd.read_csv('..\/input\/uncover\/UNCOVER\/harvard_global_health_institute\/hospital-capacity-by-state-20-population-contracted.csv')\n\n#Get the unique values of num_staffe\ndf_definitive_health_care[\"num_staffe\"].unique","b0ffa326":"# Replace the **** on num_staffe to zero.\n\ndf_definitive_health_care.loc[(df_definitive_health_care.num_staffe == '****'),'num_staffe']=0\n#df_definitive_health_care.head(10)","cdca72b2":"# Group by total number of staff per state\ndf_definitive_health_care_columns = df_definitive_health_care[[\"hq_state\",\"num_staffe\"]]\ndf_definitive_health_care_columns.astype({'num_staffe': 'float'}).dtypes\n\ndf_definitive_health_care_columns[\"num_staffe\"] = df_definitive_health_care_columns[\"num_staffe\"].astype(str).astype(int)\nprint(df_definitive_health_care_columns.dtypes)","fbce5d8f":"df_definitive_health_care.info()","51d7b3ce":"# Aggregate the data\n\ndf_state_vs_staff = df_definitive_health_care_columns.groupby([\"hq_state\"])[\"num_staffe\"].aggregate(sum)","003c30ca":"df_state_vs_staff_group = pd.DataFrame(df_state_vs_staff).reset_index()\ndf_state_vs_staff_group.columns = ['hq_state', 'num_staffe']\n#df_state_vs_staff_group[\"num_staffe\"]","7daa2b70":"df_protective_analysis = pd.merge(df_state_vs_staff, df_hospital_capacity, how='inner', left_on='hq_state', right_on = 'state')\ndf_protective_analysis_columns = df_protective_analysis[[\"state\", \"adult_population\", \"num_staffe\"]]\n\ndf_protective_analysis_columns.describe()","7d3ddbb2":"threshold = 360\nstate_options = df_protective_analysis_columns[\"adult_population\"]\/df_protective_analysis_columns[\"num_staffe\"] > threshold\ndf_protective_analysis_columns = df_protective_analysis_columns[state_options]\ndf_protective_analysis_columns[\"population_to_med_staff_percent\"] = df_protective_analysis_columns[\"adult_population\"]\/df_protective_analysis_columns[\"num_staffe\"]\ndf_protective_analysis_columns.sort_values(\"population_to_med_staff_percent\" , ascending=False, inplace=False)","b003c6b4":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(color_codes=True)\n","9dae1d7f":"# Get the visualization\n\nlabels = df_protective_analysis_columns[\"state\"]\nx1 = df_protective_analysis_columns[\"population_to_med_staff_percent\"]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.6  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, x1, width, label='Population_to_med_staff',  color = 'r')\n\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Population_to_med_staff')\nax.set_xlabel('States')\nax.set_title('Population Vs Medical Staff')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend(loc='best', bbox_to_anchor=(1, 0.5),\n          fancybox=True, shadow=True, ncol=5)","d1ced07a":"From the above analysis and Visualization, it's clear that States like VT, MD, OR, WA, CO, NH, CA, UT, ID need more protective equipment. As the ratio of the population to the hospital staff availability is high. So, they have to attend more patient. They might have to work extended hours as well. Hence they need more safety protective equipment.","18c17e79":"[The population of clinician and patients need more protective equipments in below scenario.\n1) The ratio of infected patients to the number of hospital staffs are more.](http:\/\/)","d2bd5958":"#From the above calculation\/Visualization of hospitalized_to_icu_beds_percent, it's clear that ICU beds are always available to every HOSPITALIZED covid patient. But, NY has three times more hospitalized than ICU beds available. Hence NY needs more ICU bed and ventilators."}}