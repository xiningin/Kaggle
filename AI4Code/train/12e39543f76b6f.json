{"cell_type":{"708749aa":"code","40044e4b":"code","2136004a":"code","5a115b75":"code","c3f40fab":"code","14bf7b58":"code","8df37890":"code","caad4dd8":"code","7038cd2b":"code","61ada88f":"code","884ff761":"code","9a7fd446":"markdown"},"source":{"708749aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40044e4b":"# importing the necessary pacakges\nimport numpy as np\nimport pandas as pd\nfrom textblob import TextBlob\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nsn.set()\n","2136004a":"# Creating a dummy text data\ntxts = ['I love Machine learning', \n        'I do not like machine learning', \n         'I hate machine learning', \n        'Life is great', \n        'Thank you so much for everyhting',\n        'Such an interesting course'\n       ]","5a115b75":"# creating a data from using the txts list with a column name text\ndf = pd.DataFrame(txts, columns=['text'])","c3f40fab":"df","14bf7b58":"# Calling the TextBlob constructor to get blob object\nblob = TextBlob('I so happy')\nprint(blob.sentences[0].sentiment.polarity) # -1 to 1","8df37890":"# Function to get the polarity of a text\ndef find_polarity(txt):\n    '''\n    A text argument is required. \n    The function returns a number between -1 and 1 which \n    is the polarity of the text\n    '''\n    blob = TextBlob(txt)\n    return blob.sentences[0].sentiment.polarity\n\n# Using the apply method to modify all the values in the column\ndf['polarity'] = df['text'].apply(find_polarity)\ndf","caad4dd8":"def find_sentiment(txt):\n        '''\n        The function takes text argument and it returns sentiment which Positive, Neutral or Negative\n        '''\n        if find_polarity(txt) > 0:\n            return 'Postitive'\n        elif find_polarity(txt) == 0:\n                return 'Neutral'\n        elif find_polarity(txt) < 0:\n            return 'Negative'\n        else:\n            pass","7038cd2b":"df['sentiments'] = df['text'].apply(find_sentiment)\n\ndf\n","61ada88f":"values = df['sentiments'].value_counts().values\nindexes = df['sentiments'].value_counts().index","884ff761":"plt.title('Sentiment Analysis using TextBlob')\nplt.xlabel('Sentiments')\nplt.ylabel('Number of Sentences')\n# plt.legend(indexes)\nplt.bar(indexes, values,color=['#7be382','#eedc82', '#cd5c5c'], alpha = 0.7)\nplt.grid(color='#95a5a6', linestyle='--', linewidth=1, axis='y', alpha=0.25)\n\nplt.show()","9a7fd446":"## Conclusion\nTextBlob allows to use Natural Language Processing(NLP) without a very good understand of data cleaning and machine learning. TextBlob can be used for tokenizing, part of speech tagging, noun pharse extraction, sentiment analysis, classification and translation"}}