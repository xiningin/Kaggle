{"cell_type":{"5ec134bd":"code","23f00882":"code","fe0b3be9":"code","2c7025f6":"code","dd49fa40":"code","10525e48":"code","f2a3efe1":"code","5749d73a":"code","08c42e6a":"code","a37bc8a3":"code","9ffd3ca9":"code","62f4a4f6":"code","f8d1b23e":"code","5c98df4a":"code","569984ce":"code","fa40f3ce":"code","b3d3337d":"code","7d9a327d":"markdown","dbb6525c":"markdown","cf420a32":"markdown","41b10117":"markdown","b3f03bb2":"markdown","fa263475":"markdown","3b4e6f98":"markdown","99bf08a1":"markdown","090cee59":"markdown","35de975f":"markdown","3b4ec1b9":"markdown","7e00db33":"markdown","e0add8dd":"markdown"},"source":{"5ec134bd":"%reset -f","23f00882":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe0b3be9":"df = pd.read_csv('..\/input\/shopping-annual-income\/shopping_data.csv')","2c7025f6":"df.head()","dd49fa40":"df.info()","10525e48":"df  = df.sample(frac=1)","f2a3efe1":"df = df.drop(labels = ['CustomerID'],axis = 1)","5749d73a":"corr_matrix = df.corr()","08c42e6a":"corr_matrix['Spending Score (1-100)']","a37bc8a3":"df.plot(kind=\"scatter\", x=\"Age\", y=\"Spending Score (1-100)\")","9ffd3ca9":"df.columns","62f4a4f6":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OrdinalEncoder,MinMaxScaler\nct = ColumnTransformer( [(\"op1\", OrdinalEncoder(),['Genre']),(\"op2\", MinMaxScaler(),['Age', 'Annual Income (k$)', 'Spending Score (1-100)'])],remainder = 'passthrough' ) \n                          \ndf_transform =  ct.fit_transform(df)","f8d1b23e":"df_transform.shape","5c98df4a":"x = df_transform[:,:3]\ny = df_transform[:,-1]","569984ce":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2)","fa40f3ce":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()\nmodel.fit(x_train,y_train)","b3d3337d":"from sklearn.metrics import mean_squared_error\n\npreds = model.predict(x_test)\nmse = mean_squared_error(y_test,preds)\n\nprint('MSE : ',mse)","7d9a327d":"**Dropping 'CustomerID' feature**","dbb6525c":"**Checking how much age and annual income correlate with the spending score**","cf420a32":"**Handling text feature 'Genre' and normalizing data** ","41b10117":"**Looking for correlations**","b3f03bb2":"**Loading dataset**","fa263475":"**Checking for null values**","3b4e6f98":"**Splitting data in training-set and test-set**","99bf08a1":"**Shuffling data**","090cee59":"**It seems that spending score is higher in young age. Let's visualize this with a scatter plot**","35de975f":"**Loading and fitting the model**","3b4ec1b9":"**Evaluating the model with MSE metric**","7e00db33":"**Separating inputs and output**","e0add8dd":"**First five rows in the dataset**"}}