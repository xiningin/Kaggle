{"cell_type":{"c53a4f6a":"code","da7387a8":"code","424a1118":"code","bacfee4a":"code","f4c16f43":"code","f9c6003e":"code","d0a6be5f":"code","d490603d":"code","5cc5a5bc":"code","9d0e0a84":"code","d8a96721":"code","b87040c1":"code","d794638e":"code","4500d7d1":"code","feffbc00":"code","970ee4e7":"code","01cdbead":"code","8063f990":"code","ee7caaee":"code","9eee0ad7":"code","e1dc38b2":"code","01b12783":"code","72b2f729":"code","5934472f":"code","c0ec6af5":"code","69a855bd":"code","5d7b6ffd":"code","dfbeeb3b":"code","2d7b2ea6":"code","6e185a30":"code","9a977495":"code","9dafdb61":"code","2f85ab4c":"markdown","2d1424e9":"markdown","5b3fb02d":"markdown","2af0034d":"markdown","2432506b":"markdown","8f1dfc21":"markdown","6b6dcd8a":"markdown","5b4f5df4":"markdown","ed8b3589":"markdown","219ecbfa":"markdown","68df728c":"markdown","4170f42e":"markdown","3b6ba3b4":"markdown","0ce83dd5":"markdown","2b875613":"markdown","b6aeaa6a":"markdown","b19ce9da":"markdown","42d8a311":"markdown","dbad6bb4":"markdown","45bcefb3":"markdown","ab41ac12":"markdown","2dbdf916":"markdown","443bfaf2":"markdown","ebd2ed4e":"markdown","541ea95b":"markdown","09e166d2":"markdown","86474b07":"markdown","8760a99e":"markdown","3926ccb8":"markdown","5f772c1c":"markdown","b8a27c5e":"markdown"},"source":{"c53a4f6a":"!pip install gdcm","da7387a8":"import os\nfrom os import listdir\nimport pandas as pd\nimport numpy as np\nimport glob\nfrom skimage import exposure\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# pydicom\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\nfrom fastai.imports import *\nfrom fastai.medical.imaging import *\n\nimport cv2\n\n# color\nfrom colorama import Fore, Back, Style\n\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\n\n# plotly\nimport plotly.express as px\nimport plotly\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Settings for pretty nice plots\nplt.style.use('fivethirtyeight')\nplt.show()","424a1118":"# List files available\nlist(os.listdir(\"..\/input\/siim-covid19-detection\"))","bacfee4a":"IMAGE_PATH = \"..\/input\/siim-covid19-detection\/\"\n\ntrain_study_df = pd.read_csv('..\/input\/siim-covid19-detection\/train_study_level.csv')\ntrain_image_df = pd.read_csv('..\/input\/siim-covid19-detection\/train_image_level.csv')\n\nprint(Fore.YELLOW + 'Train study df shape: ',Style.RESET_ALL,train_study_df.shape)\nprint(Fore.YELLOW + 'Train image df shape: ',Style.RESET_ALL,train_image_df.shape)","f4c16f43":"display(train_study_df.head(5))\ndisplay(train_image_df.head(5))","f9c6003e":"sample_submission = pd.read_csv('..\/input\/siim-covid19-detection\/sample_submission.csv')\nprint(Fore.YELLOW + 'Sample submission df shape: ',Style.RESET_ALL,sample_submission.shape)\ndisplay(sample_submission)","d0a6be5f":"# Null values and Data types\nprint(Fore.BLUE + 'Train Study Set !!',Style.RESET_ALL)\nprint(train_study_df.info())\nprint('-------------')\nprint(Fore.YELLOW + 'Train Image Set !!',Style.RESET_ALL)\nprint(train_image_df.info())","d490603d":"train_study_df.isnull().sum()","5cc5a5bc":"train_image_df.isnull().sum()","9d0e0a84":"train_study_df.head()","d8a96721":"display(train_study_df['Negative for Pneumonia'].value_counts())\ndisplay(train_study_df['Typical Appearance'].value_counts())\ndisplay(train_study_df['Indeterminate Appearance'].value_counts())\ndisplay(train_study_df['Atypical Appearance'].value_counts())","b87040c1":"plt.figure(figsize=(20, 6))\nsns.kdeplot(train_study_df['Negative for Pneumonia'], shade=True)\nsns.kdeplot(train_study_df['Typical Appearance'], shade=True)\nsns.kdeplot(train_study_df['Indeterminate Appearance'], shade=True)\nsns.kdeplot(train_study_df['Atypical Appearance'], shade=True)\n\n# Labeling of plot\nplt.xlabel('Labels for each study'); plt.ylabel('Density'); plt.title('Distribution of Study level');","d794638e":"fig = px.bar(train_study_df, \n             x=train_study_df['Negative for Pneumonia'].value_counts().index, \n             y=train_study_df['Negative for Pneumonia'].value_counts(),\n             color=['0','1'])\nfig.update_traces(marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text=\"Distribution of Negative for Pneumonia\")\nfig.show()","4500d7d1":"fig = px.bar(train_study_df, \n             x=train_study_df['Typical Appearance'].value_counts().index, \n             y=train_study_df['Typical Appearance'].value_counts(),\n             color=['0','1'])\nfig.update_traces(marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text=\"Distribution of Typical Appearance\")\nfig.show()","feffbc00":"fig = px.bar(train_study_df, \n             x=train_study_df['Indeterminate Appearance'].value_counts().index, \n             y=train_study_df['Indeterminate Appearance'].value_counts(),\n             color=['0','1'])\nfig.update_traces(marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text=\"Distribution of Indeterminate Appearance\")\nfig.show()","970ee4e7":"fig = px.bar(train_study_df, \n             x=train_study_df['Atypical Appearance'].value_counts().index, \n             y=train_study_df['Atypical Appearance'].value_counts(),\n             color=['0','1'])\nfig.update_traces(marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text=\"Distribution of Indeterminate Appearance\")\nfig.show()","01cdbead":"train_image_df.head()","8063f990":"# merge study csv\ntrain_study_df['StudyInstanceUID'] = train_study_df['id'].apply(lambda x: x.replace('_study', ''))\ndel train_study_df['id']\ntrain = train_image_df.merge(train_study_df, on='StudyInstanceUID')\ntrain.head()","ee7caaee":"dataset_dir = Path('..\/input\/siim-covid19-detection')","9eee0ad7":"'''\nhttps:\/\/www.kaggle.com\/trungthanhnguyen0502\/eda-vinbigdata-chest-x-ray-abnormalities\n'''\ndef dicom2array(path, voi_lut=True, fix_monochrome=True):\n    dicom = pydicom.read_file(path)\n    # VOI LUT (if available by DICOM device) is used to\n    # transform raw DICOM data to \"human-friendly\" view\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n    return data\n        \n    \ndef plot_img(img, size=(7, 7), is_rgb=True, title=\"\", cmap='gray'):\n    plt.figure(figsize=size)\n    plt.imshow(img, cmap=cmap)\n    plt.suptitle(title)\n    plt.show()\n\n\ndef plot_imgs(imgs, cols=2, size=7, is_rgb=True, title=\"\", cmap='gray', img_size=(500,500)):\n    rows = len(imgs)\/\/cols + 1\n    fig = plt.figure(figsize=(cols*size, rows*size))\n    for i, img in enumerate(imgs):\n        if img_size is not None:\n            img = cv2.resize(img, img_size)\n        fig.add_subplot(rows, cols, i+1)\n        plt.imshow(img, cmap=cmap)\n    plt.suptitle(title)\n    plt.show()","e1dc38b2":"dicom_paths = get_dicom_files(dataset_dir\/'train')\nimgs = [dicom2array(path) for path in dicom_paths[:2]]\nplot_imgs(imgs)","01b12783":"# preprocess - equalize histogram\n\nimgs = [exposure.equalize_hist(img) for img in imgs]\nplot_imgs(imgs)","72b2f729":"train.head()","5934472f":"train.isnull().sum()","c0ec6af5":"class_names = ['Typical Appearance', 'Indeterminate Appearance', 'Atypical Appearance']","69a855bd":"'''\nhttps:\/\/www.kaggle.com\/yujiariyasu\/plot-3positive-classes\n'''\n\nlabel2color = {\n    '[1, 0, 0]': [255,0,0], # Typical Appearance\n    '[0, 1, 0]': [0,255,0], # Indeterminate Appearance\n    '[0, 0, 1]': [0,0,255], # Atypical Appearance\n}\n\ndef plot_bboxes_with_label(label_name, n):\n    print('Typical Appearance: ' + Fore.RED + 'Red',Style.RESET_ALL)\n    print('Indeterminate Appearance: '  + Fore.GREEN + 'Green',Style.RESET_ALL)\n    print('Atypical Appearance: ' + Fore.BLUE + 'Blue',Style.RESET_ALL)\n    \n    imgs = []\n    thickness = 2\n    scale = 5\n    \n    if label_name == 'Negative for Pneumonia':\n        flag = 0\n    else:\n        flag = 1\n    \n    for _, row in train[train[label_name]==flag].iloc[:n].iterrows():\n        study_id = row['StudyInstanceUID']\n        img_path = glob.glob(f'{dataset_dir}\/train\/{study_id}\/*\/*')[0]\n        img = dicom2array(path=img_path)\n        img = cv2.resize(img, None, fx=1\/scale, fy=1\/scale)\n        img = np.stack([img, img, img], axis=-1)\n\n        claz = row[class_names].values\n        color = label2color[str(claz.tolist())]\n\n        bboxes = []\n        bbox = []\n        for i, l in enumerate(row['label'].split(' ')):\n            '''\n            Add comments for others\n            '''\n            # ================================================================\n            # labels, confidence, x_min, y_min, width, height == 6 or NaN == 1\n            # ================================================================\n            if (i % 6 == 0) | (i % 6 == 1):\n                continue\n            bbox.append(float(l)\/scale)\n            if i % 6 == 5:\n                bboxes.append(bbox)\n                bbox = []\n        for box in bboxes:\n            img = cv2.rectangle(\n                img,\n                (int(box[0]), int(box[1])),\n                (int(box[2]), int(box[3])),\n                color, thickness\n        )\n        img = cv2.resize(img, (512,512))\n        imgs.append(img)\n\n    plot_imgs(imgs, cmap=None)\n    \n    del img, imgs, bbox, bboxes","5d7b6ffd":"plot_bboxes_with_label('Negative for Pneumonia', 8)","dfbeeb3b":"plot_bboxes_with_label('Typical Appearance', 8)","2d7b2ea6":"plot_bboxes_with_label('Indeterminate Appearance', 8)","6e185a30":"train_study_df = pd.read_csv('..\/input\/siim-covid19-detection\/train_study_level.csv')\ntrain_image_df = pd.read_csv('..\/input\/siim-covid19-detection\/train_image_level.csv')","9a977495":"from pandas_profiling import ProfileReport\nprofile_study = ProfileReport(train_study_df, title=\"Pandas Profiling Report - Train Study df\")\nprofile_study.to_widgets()","9dafdb61":"profile_image = ProfileReport(train_image_df, title=\"Pandas Profiling Report - Train Image df\")\nprofile_image.to_widgets()","2f85ab4c":"<div style=\"width: 100%\">\n     <center>\n    <img style=\"width: 100%\" src=\"https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/26680\/logos\/header.png?t=2021-04-23-22-04-05\"\/>\n    <\/center>\n<\/div>","2d1424e9":"# 2. Importing the libraries\ud83d\udcd7","5b3fb02d":"In `image level` df, Most of the data is related to the `bboxes`.\n(Exactly `labels`, `confedence scores`, `bboxes`)\n\nWhen looking at the `.dcm` images, we will use that information to draw the bboxes.","2af0034d":"# 3. Reading the csv\ud83d\udcda","2432506b":"# 5. Visualising Images : DICOM \ud83d\uddfa\ufe0f ","8f1dfc21":"# 6. Visualizing Bounding Box \ud83d\udce6","6b6dcd8a":"## General Info","5b4f5df4":"<h1 id=\"title\" style=\"color:white;background:black;\">\n    <\/br>\n    <center>\n        SIIM-FISABIO-RSNA COVID-19 Detection - Basic EDA\n    <\/center>\n<\/h1>","ed8b3589":"### Distribution of Negative for Pneumonia","219ecbfa":"## 4.1 Basic Data Exploration for `Study level` \ud83d\udcd6","68df728c":"## If this kernel is useful, <font color='orange'>please upvote<\/font>!","4170f42e":"### Distribution of Indeterminate Appearance","3b6ba3b4":"`StudyInstanceUID` seems same `id` in `study level`.\n- https:\/\/www.kaggle.com\/yujiariyasu\/plot-3positive-classes","0ce83dd5":"For each test study, we should make a determination within the following labels.\n\n- `Negative for Pneumonia`\n\n- `Typical Appearance`\n\n- `Indeterminate Appearance`\n\n- `Atypical Appearance`\n\nFor each test image, we will be predicting a bounding box and class for all findings.\n- e.g. `none 1 0 0 1 1`","2b875613":"### Distribution of Indeterminate Appearance","b6aeaa6a":"## Missing values","b19ce9da":"## Visualizing `Negative for Pneumonia`","42d8a311":"# WORK IN PROGRESS...","dbad6bb4":"There are `4` labels in `train study level.csv`","45bcefb3":"class_id\n- `Typical Appearance`, `Indeterminate Appearance`, `Atypical Appearance`, or `negative`","ab41ac12":"# 4. Basic Data Exploration \ud83c\udfd5\ufe0f","2dbdf916":"## Visualizing `Typical Appearance`","443bfaf2":"# References\n\n- https:\/\/www.kaggle.com\/piantic\/osic-pulmonary-fibrosis-progression-basic-eda\n- https:\/\/www.kaggle.com\/dschettler8845\/visual-in-depth-eda-vinbigdata-competition-data\n- https:\/\/www.kaggle.com\/bjoernholzhauer\/eda-dicom-reading-vinbigdata-chest-x-ray\n- https:\/\/www.kaggle.com\/yujiariyasu\/plot-3positive-classes\n- https:\/\/www.kaggle.com\/tanlikesmath\/siim-covid-19-detection-a-simple-eda\n- https:\/\/www.kaggle.com\/jeongyoonlee\/siim-covid-19-detection-eda-wip","ebd2ed4e":"we already know that `2048` bboxes seems missing in `train`.","541ea95b":"# 7. Etc. - Pandas Profiling \ud83c\udf24\ufe0f","09e166d2":"## Visualizing `Indeterminate Appearance`","86474b07":"`2040` : It seems missing bounding boxes.","8760a99e":"### Distribution of Typical Appearance","3926ccb8":"# 1. Introduction\n> In this competition, you\u2019ll identify and localize COVID-19 abnormalities on chest radiographs. In particular, you'll categorize the radiographs as negative for pneumonia or typical, indeterminate, or atypical for COVID-19. we need to make predictions at both a `study` (multi-image) and `image` level.\n\n## 1.1. Study-level labels\n> Studies in the test set may contain more than one label.\n\n> `negative`, `typical`, `indeterminate`, `atypical`\n\n## 1.2. Image-level labels\n> Images in the test set may contain more than one object.\n\n> you must predict a `class ID` of \"opacity\", a `confidence score`, and `bounding box` in format xmin ymin xmax ymax.\n(`none` is the class ID for \"No finding\".)\n\n## 1.3. Evaluation Metrics\n> the standard PASCAL VOC 2010 `mean Average Precision (mAP)` at IoU > `0.5`\n\n> Here is no concept of `difficult` classes in VOC 2010(Perhaps VOC 2012 will have that concept.).\n\n  You can see more details in [mAP understanding with code and its tips](https:\/\/www.kaggle.com\/its7171\/map-understanding-with-code-and-its-tips) for understanding it.","5f772c1c":"For visualizing BBox, I will use `class_id`, [`x_min`, `y_min`, `x_max`, `y_max`] in `label` column. Please see following EDA.\n - https:\/\/www.kaggle.com\/yujiariyasu\/plot-3positive-classes\n - https:\/\/www.kaggle.com\/tanlikesmath\/siim-covid-19-detection-a-simple-eda","b8a27c5e":"## 4.2 Basic Data Exploration for `Image level` \u2705"}}