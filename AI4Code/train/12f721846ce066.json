{"cell_type":{"cfc890f1":"code","369c665c":"code","370887d2":"code","8c55054a":"code","5118bdae":"code","d25aa853":"code","5d142a90":"code","e3fc38ac":"code","1bd703af":"code","b2de0628":"code","01513aa2":"code","148fece6":"code","2b3462b7":"code","d2b17350":"code","7b6c8b6b":"code","6c0d3c20":"code","7b5ab029":"code","d51d519f":"code","9f12a50b":"code","a596935c":"code","8807e7ef":"code","8f7db45e":"code","ab20831d":"code","840aa709":"code","2434fc46":"code","4f967860":"code","b2b9a343":"code","7a32546c":"code","a17725f4":"code","a4e5de1a":"code","1a8e22a2":"code","64773ff9":"code","da68ad34":"code","b5cc0e49":"code","b1f45054":"markdown","0b77a6b6":"markdown","1fa9c74c":"markdown","bbe0dab3":"markdown","a6ad4267":"markdown","a5f67787":"markdown","d1c4261a":"markdown","65d0a9ac":"markdown","e176ae31":"markdown","361478ee":"markdown"},"source":{"cfc890f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # Visualization\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","369c665c":"data=pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")","370887d2":"data.head()","8c55054a":"data.tail()","5118bdae":"data.info()","d25aa853":"print(data.loc[:,\"target\"].value_counts())\nsns.countplot(data[\"target\"])","5d142a90":"data.isnull().any()","e3fc38ac":"x_data=data.drop([\"target\"],axis=1)\ny=data[\"target\"].values","1bd703af":"x_data.head()","b2de0628":"y","01513aa2":"# Normalization\n\nx=(x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data)).values","148fece6":"# Train,test split\n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)","2b3462b7":"# Logistic Regression\n\nfrom sklearn.linear_model import LogisticRegression\n\nlr=LogisticRegression()\nlr.fit(x,y) # Modelimizi e\u011fitiriz.","d2b17350":"print(\"Train Accuracy: {}\".format(lr.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(lr.score(x_test,y_test)))","7b6c8b6b":"list_1=[]\nlist_2=[]\n\nlist_1.append(\"LogisticRegression\")\nlist_2.append(lr.score(x_test,y_test)*100)","6c0d3c20":"# KNN\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn=KNeighborsClassifier(n_neighbors=6)\nknn.fit(x_train,y_train)","7b5ab029":"print(\"Train Accuracy: {}\".format(knn.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(knn.score(x_test,y_test)))","d51d519f":"# Yukar\u0131da k=6 i\u00e7in accuracy de\u011feri bulduk. Peki di\u011fer k de\u011ferlerinde accuracy ne \u00e7\u0131kacak ? Daha iyi bir accuracy de\u011feri bulabiliriz.\n\nscore_test=[]\nscore_train=[]\nfor each in range(1,15):\n    knn2=KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    print(\"Test: {}\".format(knn2.score(x_test,y_test)))\n    score_test.append(knn2.score(x_test,y_test))\n    score_train.append(knn2.score(x_train,y_train))\n    \nplt.plot(range(1,15),score_train,color=\"blue\",label=\"train\")\nplt.plot(range(1,15),score_test,color=\"purple\",label=\"test\")\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.legend()\nplt.show()","9f12a50b":"list_1.append(\"KNN\")\nlist_2.append(knn.score(x_test,y_test)*100)","a596935c":"# SVM\n\nfrom sklearn.svm import SVC\n\nsvm=SVC()\nsvm.fit(x_train,y_train)","8807e7ef":"print(\"Train Accuracy: {}\".format(svm.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(svm.score(x_test,y_test)))","8f7db45e":"list_1.append(\"SVM\")\nlist_2.append(svm.score(x_test,y_test)*100)","ab20831d":"# Naive Bayes\n\nfrom sklearn.naive_bayes import GaussianNB\n\nnb=GaussianNB()\nnb.fit(x_train,y_train)","840aa709":"print(\"Train Accuracy: {}\".format(nb.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(nb.score(x_test,y_test)))","2434fc46":"list_1.append(\"NaiveBayes\")\nlist_2.append(nb.score(x_test,y_test)*100)","4f967860":"# Decision Tree\n\nfrom sklearn.tree import DecisionTreeClassifier\n\ndt=DecisionTreeClassifier()\ndt.fit(x_train,y_train)","b2b9a343":"print(\"Train Accuracy: {}\".format(dt.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(dt.score(x_test,y_test)))","7a32546c":"list_1.append(\"DecisionTree\")\nlist_2.append(dt.score(x_test,y_test)*100)","a17725f4":"# Random Forest \n\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf=RandomForestClassifier(n_estimators=100) # n_estimators ile ka\u00e7 tane a\u011fa\u00e7 kullanaca\u011f\u0131m\u0131z\u0131 belirtiriz.\nrf.fit(x_train,y_train)","a4e5de1a":"print(\"Train Accuracy: {}\".format(rf.score(x_train,y_train)))\nprint(\"Test Accuracy: {}\".format(rf.score(x_test,y_test)))","1a8e22a2":"list_1.append(\"RandomForest\")\nlist_2.append(rf.score(x_test,y_test)*100)","64773ff9":"list_1","da68ad34":"list_2","b5cc0e49":"plt.figure(figsize=(15,8))\nsns.barplot(x=list_1,y=list_2)\nplt.show()","b1f45054":"# Logistic Regression","0b77a6b6":"# KNN Classification","1fa9c74c":"Logistic regression algoritmas\u0131 bir classification yani s\u0131n\u0131fland\u0131rma algoritmas\u0131d\u0131r.","bbe0dab3":"Classification modellerimizi olu\u015fturup accuracy de\u011ferlerimizi bulduk.","a6ad4267":"# Support Vector Machine Classification","a5f67787":"# Naive Bayes Classification","d1c4261a":"# Decision Tree Classification","65d0a9ac":"Grafikte test k=3 de\u011ferinde en y\u00fcksek accuracye ula\u015ft\u0131\u011f\u0131m\u0131z\u0131 g\u00f6r\u00fcyoruz.","e176ae31":"# Random Forest Classification","361478ee":"Listelerin ilkinde classification modellerinin isimlerini di\u011ferinde accuracy de\u011ferlerini tuttuk. \u015eimdi bunlar\u0131 tabloda g\u00f6sterelim."}}