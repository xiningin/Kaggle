{"cell_type":{"14dc9e21":"code","385bf530":"code","374be7a0":"code","fb689ba7":"code","02329d3c":"code","c002d23f":"code","e4281177":"code","adfc3eca":"code","d66f9b70":"code","1bd2e233":"code","636a7e68":"code","b7b82c37":"code","1fceb4e5":"code","5b89fcec":"code","e90e7e06":"code","ae32fe9b":"code","848605d8":"code","d7e73683":"code","38434654":"markdown","98cf2cad":"markdown","85936830":"markdown","40e7f8fa":"markdown","52318854":"markdown","7116398f":"markdown","b6f07300":"markdown","2af55f8c":"markdown","4f6fe4c6":"markdown","f2d2adad":"markdown","c6973bd0":"markdown","b01f810d":"markdown","5a6e192a":"markdown","bc709638":"markdown","9f4fcd35":"markdown","417851ad":"markdown","24c18fe9":"markdown"},"source":{"14dc9e21":"!pip install yfinance\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nfrom sklearn import linear_model\nimport scipy.stats as st\nimport yfinance as yf","385bf530":"data=pd.read_csv('..\/input\/gooddata\/gooddata.csv')\ndata['Date']=pd.to_datetime(data['Date'])\n","374be7a0":"initial_capital=1000\nweight=[0.5,0.5]\nweighted_return=weight*data[['Combined Equity Return','Combined Fixed Income return']]\nportfolio_return=weighted_return.sum(axis=1)\ndata['equity_no_rebalance']=500*(1+data[['Combined Equity Return']]).cumprod()\ndata['fixed_income_no_rebalance']=500*(1+data[['Combined Fixed Income return']]).cumprod()\ndata['traditional_portfolio']=data['equity_no_rebalance']+data['fixed_income_no_rebalance']\ndata","fb689ba7":"equity_list=[]\nfixed_income_list=[]\ntotal_portfolio_list=[]\nequity=500\nfix_income=500\ntotal_portfolio=1000\nfor i in range(1,1131):\n    equity=equity\n    fix_income=fix_income\n    total_portfolio=total_portfolio\n    if int(i\/30)==(i\/30):\n        equity=0.5*total_portfolio*(1+data.iloc[i,1])\n        fix_income=0.5*total_portfolio*(1+data.iloc[i,2])\n        total_portfolio=equity+fix_income\n    else:\n        equity=equity*(1+data.iloc[i,1])\n        fix_income=fix_income*(1+data.iloc[i,2])\n        total_portfolio=equity+fix_income\n    equity_list.append(equity)\n    fixed_income_list.append(fix_income)\n    total_portfolio_list.append(total_portfolio)\n","02329d3c":"data=data.drop([0],axis=0)\ndata['equity_with_rebalance']=equity_list\ndata['fixed_income_rebalance']=fixed_income_list\ndata['total_portfolio_rebalance']=total_portfolio_list\n","c002d23f":"# importing package\nimport matplotlib.pyplot as plt\nimport numpy as np\n  \nplt.bar(data['Date'],data['equity_no_rebalance']\/data['traditional_portfolio'] , color='r')\nplt.bar(data['Date'], data['fixed_income_no_rebalance']\/data['traditional_portfolio'], bottom=data['equity_no_rebalance']\/data['traditional_portfolio'], color='b')\nplt.xlabel(\"Date\")\nplt.ylabel(\"weights\")\nplt.title(\"portfolio without rebalance\")\nplt.show()","e4281177":"plt.bar(data['Date'],data['equity_with_rebalance']\/data['total_portfolio_rebalance'] , color='r')\nplt.bar(data['Date'], data['fixed_income_rebalance']\/data['total_portfolio_rebalance'], bottom=data['equity_with_rebalance']\/data['total_portfolio_rebalance'], color='b')\nplt.xlabel(\"Date\")\nplt.ylabel(\"weights\")\nplt.title(\"portfolio with rebalance\")\nplt.show()","adfc3eca":"plt.plot(data['Date'],data['traditional_portfolio'])\nplt.plot(data['Date'],data['total_portfolio_rebalance'])\nplt.legend(['portfolio without rebalance','portfolio with rebalance'])\nplt.show()","d66f9b70":"equity_return=1000*(1+data['Combined Equity Return']).cumprod()\nwindow_size1=5\nwindow_size2=30\nequity_series=pd.Series(equity_return)\n\nwindowsMA5=equity_series.rolling(window_size1)\nmoving_averageMA5=windowsMA5.mean()\nmoving_averageMA5_list=moving_averageMA5.tolist()\nmoving_averageMA5_list=moving_averageMA5_list[window_size2-1:]\n\nwindowsMA30=equity_series.rolling(window_size2)\nmoving_averageMA30=windowsMA30.mean()\nmoving_averageMA30_list=moving_averageMA30.tolist()\nmoving_averageMA30_list=moving_averageMA30_list[window_size2-1:]\n\ndrop=[]\nx=range(1,30)\nfor i in x:\n    i\n    drop.append(i)\ndata1=data.drop(drop,axis=0)\ndata1=data1.drop(['equity_no_rebalance','fixed_income_no_rebalance','Combined Cryptocurrency Return','traditional_portfolio'],axis=1)\ndata1['MA5']=moving_averageMA5_list\ndata1['MA30']=moving_averageMA30_list\ndata1\n\n\n","1bd2e233":"MA5_below_MA30=0.01\nMA5_above_MA30=0\ndecision_list=[]\nfor i in range(0,1101):\n    if (data1.iloc[i,6]-data1.iloc[i,7]<(MA5_below_MA30*-1)*data1.iloc[i,7]):\n        decision_list.append(1)\n    else:\n        decision_list.append(0) \n\n        \nsecond_decision_list=[]\nsecond_decision_list.append(0)\nfor i in range(1,1101):\n    if decision_list[i]==1:\n        second_decision_list.append(1)\n    else:\n        if second_decision_list[i-1]==1:\n            if data1.iloc[i,6]-data1.iloc[i,7]>MA5_above_MA30*data1.iloc[i,7]:\n                second_decision_list.append(0)\n            else:\n                second_decision_list.append(1)\n        else:\n            second_decision_list.append(0)\n            \ndata1['decision_making']=second_decision_list\ndata1\n        ","636a7e68":"equity_list1=[]\nequity_list1.append(523.12)\nfixed_income_list1=[]\ntotal_portfolio_list1=[]\nequity=523.12\nfix_income=519.90\ntotal_portfolio=1043.03\nfor i in range(1,1101):\n    equity=equity\n    fix_income=fix_income\n    total_portfolio=total_portfolio\n    if int(i\/30)==(i\/30):\n        fix_income=0.5*total_portfolio*(1+data1.iloc[i,2])\n        if data1.iloc[i,8]==1:\n            equity=equity_list1[i-1]\n        else:\n            equity=0.5*total_portfolio*(1+data1.iloc[i,1])\n        total_portfolio=equity+fix_income\n    else:\n        fix_income=fix_income*(1+data1.iloc[i,2])\n        if data1.iloc[i,8]==1:\n            equity=equity_list1[i-1]\n        else:\n            equity=equity*(1+data1.iloc[i,1])\n        total_portfolio=equity+fix_income\n    equity_list1.append(equity)\n    fixed_income_list1.append(fix_income)\n    total_portfolio_list1.append(total_portfolio)\n","b7b82c37":"data1=data1.drop([30],axis=0)\ndel equity_list1[0]\ndata1['equity_stop-loss']=equity_list1\ndata1['fixed_income_stop-loss']=fixed_income_list1\ndata1['total_portfolio_stop-loss']=total_portfolio_list1\ndata1","1fceb4e5":"\nplt.plot(data['Date'].iloc[30:],data1['equity_with_rebalance'])\nplt.plot(data['Date'].iloc[30:],equity_list1)\nplt.legend(['portfoilo without stop-loss','portfolio with stop-loss'])\nplt.show()","5b89fcec":"\nmaxdd_nostoploss=[]\nfor i in range(0,1099):\n    maxdd_nostoploss.append(min((data1.iloc[i,3]-max(data1.iloc[0:i+1,3]))\/max(data1.iloc[0:i+1,3]),0))\n\n\nmaxdd_stoploss=[]\nfor i in range(0,1099):\n    maxdd_stoploss.append(min((data1.iloc[i,9]-max(data1.iloc[0:i+1,9]))\/max(data1.iloc[0:i+1,9]),0))\n\nprint('MAXDD for stop loss is' + str(min(maxdd_stoploss)))\nprint('MAXDD for no stop loss is' + str(min(maxdd_nostoploss)))","e90e7e06":"from statistics import stdev\nannual_return_norebalance=(data.iloc[1129,6]\/data.iloc[0,6])**(1\/4.5)-1\nannual_std_norebalance=stdev((data['traditional_portfolio'].shift(-1)\/data['traditional_portfolio']-1).dropna())*(252**(1\/2))\nsharpe_ratio_norebalance=annual_return_norebalance\/annual_std_norebalance\n\nannual_return_rebalance=(data.iloc[1129,9]\/data.iloc[0,9])**(1\/4.5)-1\nannual_std_rebalance=stdev((data['total_portfolio_rebalance'].shift(-1)\/data['total_portfolio_rebalance']-1).dropna())*(252**(1\/2))\nsharpe_ratio_rebalance=annual_return_rebalance\/annual_std_rebalance\n\nannual_return_stop_loss=(data1.iloc[1099,11]\/data1.iloc[0,11])**(1\/4.45)-1\nannual_std_stop_loss=stdev((data1['total_portfolio_stop-loss'].shift(-1)\/data1['total_portfolio_stop-loss']-1).dropna())*(252**(1\/2))\nsharpe_ratio_stop_loss=annual_return_stop_loss\/annual_std_stop_loss\n\nprint('annual_return_norebalance =' + str(annual_return_norebalance))\nprint('annual_std_norebalance =' + str(annual_std_norebalance))\nprint('sharpe_ratio_norebalance =' + str(sharpe_ratio_norebalance))\nprint('annual_return_rebalance =' + str(annual_return_rebalance))\nprint('annual_std_rebalance =' + str(annual_std_rebalance))\nprint('sharpe_ratio_rebalance =' + str(sharpe_ratio_rebalance))\nprint('annual_return_stop-loss =' + str(annual_return_stop_loss))\nprint('annual_std_stop-loss =' + str(annual_std_stop_loss))\nprint('sharpe_ratio_stop-loss =' + str(sharpe_ratio_stop_loss))\n","ae32fe9b":"def best_stop_loss(death_cross,golden_cross,expense_ratio):\n   #get decision_list for making decision\n    MA5_below_MA30=death_cross\n    MA5_above_MA30=golden_cross\n    decision_list=[]\n    for i in range(0,1100):\n        if (data1.iloc[i,6]-data1.iloc[i,7]<(MA5_below_MA30*-1)*data1.iloc[i,7]):\n            decision_list.append(1)\n        else:\n            decision_list.append(0) \n    \n\n    second_decision_list=[]\n    second_decision_list.append(0)\n    for i in range(1,1100):\n        if decision_list[i]==1:\n            second_decision_list.append(1)\n        else:\n            if second_decision_list[i-1]==1:\n                if data1.iloc[i,6]-data1.iloc[i,7]>MA5_above_MA30*data1.iloc[i,7]:\n                    second_decision_list.append(0)\n                else:\n                    second_decision_list.append(1)\n            else:\n                second_decision_list.append(0)\n\n    defination_df=pd.DataFrame(second_decision_list,columns=['decision_list'])\n    \n    #combine stop-loss strategy with rebalance strategy together:\n    equity_list1=[]\n    equity_list1.append(523.12)\n    fixed_income_list1=[]\n    total_portfolio_list1=[]\n    equity=523.12\n    fix_income=519.90\n    total_portfolio=1043.03\n    for i in range(1,1100):\n        equity=equity\n        fix_income=fix_income\n        total_portfolio=total_portfolio\n        if int(i\/30)==(i\/30):\n            fix_income=0.5*total_portfolio*(1+data1.iloc[i,2])\n            if defination_df.iloc[i,0]==1:\n                equity=equity_list1[i-1]\n            else:\n                equity=0.5*total_portfolio*(1+data1.iloc[i,1])\n            total_portfolio=equity+fix_income\n        else:\n            fix_income=fix_income*(1+data1.iloc[i,2])\n            if defination_df.iloc[i,0]==1:\n                equity=equity_list1[i-1]\n            else:\n                equity=equity*(1+data1.iloc[i,1])\n            total_portfolio=equity+fix_income\n        equity_list1.append(equity)\n        fixed_income_list1.append(fix_income)\n        total_portfolio_list1.append(total_portfolio)\n        \n        #include transaction expenses each time we sell\n    data2=data1\n    data2['first_decision']=decision_list\n    selling_point=[]\n    selling_point.append(0)\n    for i in range(1,1100):\n        if data2.iloc[i,12]==1 and data2.iloc[i-1,12]==0:\n            x=1\n        else:\n            x=0\n        selling_point.append(x)\n    defination_df['selling_point']=selling_point\n    expense=[]\n    for i in range(1,1100):\n        if defination_df.iloc[i,1]==1:\n            x=equity_list1[i]*expense_ratio\n        else:\n            x=0\n        expense.append(x)\n      #calculate final sharpe_ratio  \n    total_port_df=pd.DataFrame(total_portfolio_list1,columns=['price'])\n    annual_return=((total_port_df.iloc[1098,0]-sum(expense))\/total_port_df.iloc[0,0])**(1\/4.5)-1\n    annual_std=stdev((total_port_df['price'].shift(-1)\/total_port_df['price']-1).dropna())*(252**(1\/2))\n    sharpe_ratio=annual_return\/annual_std\n    return (sharpe_ratio)\n    ","848605d8":"death_cross=[]\na=range(0,11,1)\nfor i in a:\n    death_cross.append(i\/100)\n\ngolden_cross=[]\nb=range(0,11,1)\nfor i in b:\n    golden_cross.append(i\/100)\n    \nsharpe_ratio_matrix=[]\nfor i in death_cross:\n    for j in golden_cross:\n        sharpe_ratio_matrix.append(best_stop_loss(i,j,0.02))\nmatrix_df=pd.DataFrame(np.array(sharpe_ratio_matrix).reshape(11,11))","d7e73683":"matrix_df.columns=['0','1%','2%','3%','4%','5%','6%','7%','8%','9%','10%']\nmatrix_df.index=['0','1%','2%','3%','4%','5%','6%','7%','8%','9%','10%']\nimport seaborn as sns\ncm = sns.light_palette(\"green\", as_cmap=True)\nmatrix_df.style.background_gradient(cmap=cm)","38434654":"<a id=\"subsection-three-three\"><\/a>\n## 3.3 Adding Stop-LOSS strategy to rebalanced portfolio","98cf2cad":"<a id=\"subsection-three-two-one\"><\/a>\n### 3.2.1 visualization the result of rebalance","85936830":"<a id=\"subsection-three-five\"><\/a>\n## 3.5 Identify the best death-cross and golden-cross assume we have 2% of transaction expenses each time we sell","40e7f8fa":"<a id=\"subsection-three-three-four\"><\/a>\n### 3.3.4 Visualize the effect of stop-loss strategy and calculate MAX DD","52318854":"<a id=\"section-two\"><\/a>\n## 2. Set up","7116398f":"<a id=\"section-three\"><\/a>\n# 3. Main Contents","b6f07300":"<a id=\"subsection-three-two\"><\/a>\n## 3.2 Adding rebalance strategy to simply buy and hold portfolio","2af55f8c":"<a id=\"section-one\"><\/a>\n## 1. Introduction","4f6fe4c6":"<a id=\"subsection-three-five-one\"><\/a>\n### 3.5.1 Define the defination that Automatically give sharpe-ratio under different death-cross and golden cross combinations","f2d2adad":"<a id=\"subsection-three-three-three\"><\/a>\n### 3.3.3 Combine the stop-loss with rebalance strategy together","c6973bd0":"# TABLE OF CONTENTS\n\n* [1. INTRODUCTION](#section-one)\n* [2. SETUP](#section-two)\n* [3. MAIN CONTENTS](#section-three)\n    - [3.1 Traditional Portfolio (simply buy and hold)](#subsection-three-one)\n    - [3.2 Adding the rebalance Strategy](#subsection-three-two)\n        - [3.2.1 Visualize the effect of rebalance](#subsection-three-two-one)\n    - [3.3 Adding the Stop-Loss Strategy](#subsection-three-three)\n        - [3.3.1 Get MA5 and MA30](#subsection-three-three-one)\n        - [3.3.2 Implement stop-loss strategy using MA5 and MA30](#subsection-three-three-two)\n        - [3.3.3 Combine stop-loss with rebalance strategy together](#subsection-three-three-three)\n        - [3.3.4 Visualize the effct of stop-loss and calculate Max DD](#subsection-three-three-four)\n    - [3.4 Performance Evaluation](#subsection-three-four)\n    - [3.5 Identify the best death-cross and golden-cross assume we have 2% of transaction costs](#subsection-three-five)\n        - [3.5.1 Define the defination](#subsection-three-five-one)\n        - [3.5.2 Visualize the matrix of sharpe ratios](#subsection-three-five-two)","b01f810d":"<a id=\"subsection-three-three-two\"><\/a>\n### 3.3.2 Implement STOP-LOSS strategy using MA5 AND MA30","5a6e192a":"<a id=\"subsection-three-five-two\"><\/a>\n### 3.5.2 Visualize the sharpe ratio matrix under different death-cross and golden-cross combinations","bc709638":"### To whom it may concern:\n\n- This notebook is designed to improve the performance of traditional portfolio by introducing **Rebalance** and **Stop-loss Strategy**.\n\n- 3.1 is the traditional portfolio we build as the base portfolio and any further improvements will be implemented on this portfolio. This portfolio include equity and fixed income class. Specifically, we introduce QQQ ETF to represent our equity class and we mix 34% of TIP ETF, 14% of IBND.K ETF, 12% of GOVT ETF and 37% of BOND.K ETF to get our fixed income asset class. The security selection is done using excel by optimization and not showing here.\n\n- 3.2 in this part we introduce rebalance strategy in our model in order to improve portfolio performance. Reasons why we have rebalance here because **1.Rebalance is needed for sticking to the Strategic Asset Allocation (SAA), otherwise the risk factor of portfolio will deviate from the initial setting, hence not fit investor's requirement.** **2. we believe rebalance is a type of stop-profit strategy, it tells manager when we sell the winner to maintain profit, then invest excess returns to the asset class that currently is underperformed but we assume in the long term it will reverse to the historical average.**  Here we assume a regular rebalance once a month.\n\n- 3.3 this part we introduce stop-loss strategy to further improve our portfolio performance. we believe stop-loss strategy tells managers when to sell aseets to stop further loss. The strategy we introduced here is simple but efficient. **We tend to sell all equities we own whenever the MA5 (moving average 5) below MA30 by 1%, then we plan to buyback all equities when MA5 cross MA30 from the bottom.** People call these points death-cross and golden-cross, this part we will test how this simple strategy can improve portfolio sharpe ratio and provide **perfect drawdown protection**.                              ** to simplify the question here we assume no transaction costs occur in this part, but this constraint will be removed in part 3.5.\n\n- 3.4 this part is the performance evaluation, from here you will see the power of rebalance and stop-loss strategy, enjoy it !\n\n- 3.5 this is the most techinical part. In part 3.3 you may feel confused why our death-cross signial is not triggered Immediately when MA5 is right below MA30, but wait until MA5 is below MA30 by 1%. This is because if there is no space between MA5 and MA30, the model will be too Sensitive to the market movement and will rigger too many selling actions. In the world of no transaction costs this is OK while in reality people need to consider the trade-off between sensitivity and transaction cost. **Therefore, in this part, we include transaction costs in our model and design a specific defination. The inputs of this defination are the percentage spaces for death-cross and golden-cross, as well as the transaction cost as the proportion of total face value when we sell equities. The output is the relative sharpe-ratio of the portfolio under different combinations.** Thanks to python iteration, we can find the best death-cross and golden-cross combinations given X% of transaction costs.","9f4fcd35":"<a id=\"subsection-three-one\"><\/a>\n## 3.1 Traditional Portfolio Performance","417851ad":"<a id=\"subsection-three-three-one\"><\/a>\n### 3.3.1 Get MA5 and MA30","24c18fe9":"<a id=\"subsection-three-four\"><\/a>\n## 3.4 Performace Evaluation (buy and hold vs rebalance vs rebalance + stop-loss)"}}