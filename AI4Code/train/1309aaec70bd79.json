{"cell_type":{"5dc2a904":"code","0f1d1326":"code","17654311":"code","ec559c26":"code","b407c0e4":"code","60538c33":"code","2cd53398":"code","fdcefe2f":"code","3f133d0b":"code","2b7c7133":"code","e8a9a793":"code","4e8a297b":"code","f1f60f23":"code","6663575a":"code","319904fe":"code","d059a083":"code","ba5b3a80":"code","6c4382c2":"code","59033b18":"code","802673d2":"code","fb5cd377":"code","1864be90":"markdown","0fd0b1a7":"markdown","0e38eadc":"markdown","198e2e16":"markdown","94b63774":"markdown"},"source":{"5dc2a904":"import numpy as np\nimport pandas as pd\nimport sklearn.metrics as mtr\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\npd.set_option('display.max_columns', 50)\npd.set_option('display.max_rows', 150)","0f1d1326":"from keras.layers import Dense\nfrom keras.models import Sequential\nfrom keras.callbacks import Callback, EarlyStopping","17654311":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ec559c26":"train = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', usecols=['GameId', 'PlayId', 'Season','Team', 'X', 'Y', 'S', 'A', 'Dis',\n                                                                               'Orientation', 'Dir', 'NflId', 'DisplayName', 'YardLine',\n                                                                               'Quarter', 'GameClock', 'PossessionTeam', 'Down', 'Distance',\n                                                                               'FieldPosition', 'NflIdRusher', 'OffenseFormation', \n                                                                               'OffensePersonnel', 'DefendersInTheBox', 'DefensePersonnel', \n                                                                               'PlayDirection', 'TimeHandoff', 'TimeSnap', 'Yards'])","b407c0e4":"train = train[train.Season>2017].copy().reset_index(drop=True)\ndel train['Season']","60538c33":"outcomes = train[['GameId','PlayId','Yards']].drop_duplicates()","2cd53398":"def create_features(df, deploy=False):\n    \n    def new_X(x_coordinate, play_direction):\n        if play_direction == 'left':\n            return 120.0 - x_coordinate\n        else:\n            return x_coordinate\n\n    def new_line(rush_team, field_position, yardline):\n        if rush_team == field_position:\n            # offense starting at X = 0 plus the 10 yard endzone plus the line of scrimmage\n            return 10.0 + yardline\n        else:\n            # half the field plus the yards between midfield and the line of scrimmage\n            return 60.0 + (50 - yardline)\n\n    def new_orientation(angle, play_direction):\n        if play_direction == 'left':\n            new_angle = 360.0 - angle\n            if new_angle == 360.0:\n                new_angle = 0.0\n            return new_angle\n        else:\n            return angle\n\n    def euclidean_distance(x1,y1,x2,y2):\n        x_diff = (x1-x2)**2\n        y_diff = (y1-y2)**2\n\n        return np.sqrt(x_diff + y_diff)\n\n    def back_direction(orientation):\n        if orientation > 180.0:\n            return 1\n        else:\n            return 0\n\n    def update_yardline(df):\n        new_yardline = df[df['NflId'] == df['NflIdRusher']]\n        new_yardline['YardLine'] = new_yardline[['PossessionTeam','FieldPosition','YardLine']].apply(lambda x: new_line(x[0],x[1],x[2]), axis=1)\n        new_yardline = new_yardline[['GameId','PlayId','YardLine']]\n\n        return new_yardline\n\n    def update_orientation(df, yardline):\n        df['X'] = df[['X','PlayDirection']].apply(lambda x: new_X(x[0],x[1]), axis=1)\n        df['Orientation'] = df[['Orientation','PlayDirection']].apply(lambda x: new_orientation(x[0],x[1]), axis=1)\n        \n        df['Dir'] = df[['Dir','PlayDirection']].apply(lambda x: new_orientation(x[0],x[1]), axis=1)\n\n        df = df.drop('YardLine', axis=1)\n        df = pd.merge(df, yardline, on=['GameId','PlayId'], how='inner')\n\n        return df\n\n    def back_features(df):\n        carriers = df[df['NflId'] == df['NflIdRusher']][['GameId','PlayId','NflIdRusher','X','Y','Orientation','Dir','YardLine']]\n        carriers['back_from_scrimmage'] = carriers['YardLine'] - carriers['X']\n        carriers['back_oriented_down_field'] = carriers['Orientation'].apply(lambda x: back_direction(x))\n        carriers['back_moving_down_field'] = carriers['Dir'].apply(lambda x: back_direction(x))\n        carriers = carriers.rename(columns={'X':'back_X',\n                                            'Y':'back_Y'})\n        carriers = carriers[['GameId','PlayId','NflIdRusher','back_X','back_Y','back_from_scrimmage','back_oriented_down_field','back_moving_down_field']]\n\n        return carriers\n\n    def features_relative_to_back(df, carriers):\n        player_distance = df[['GameId','PlayId','NflId','X','Y']]\n        player_distance = pd.merge(player_distance, carriers, on=['GameId','PlayId'], how='inner')\n        player_distance = player_distance[player_distance['NflId'] != player_distance['NflIdRusher']]\n        player_distance['dist_to_back'] = player_distance[['X','Y','back_X','back_Y']].apply(lambda x: euclidean_distance(x[0],x[1],x[2],x[3]), axis=1)\n\n        player_distance = player_distance.groupby(['GameId','PlayId','back_from_scrimmage','back_oriented_down_field','back_moving_down_field'])\\\n                                         .agg({'dist_to_back':['min','max','mean','std']})\\\n                                         .reset_index()\n        player_distance.columns = ['GameId','PlayId','back_from_scrimmage','back_oriented_down_field','back_moving_down_field',\n                                   'min_dist','max_dist','mean_dist','std_dist']\n\n        return player_distance\n\n    def defense_features(df):\n        rusher = df[df['NflId'] == df['NflIdRusher']][['GameId','PlayId','Team','X','Y']]\n        rusher.columns = ['GameId','PlayId','RusherTeam','RusherX','RusherY']\n\n        defense = pd.merge(df,rusher,on=['GameId','PlayId'],how='inner')\n        defense = defense[defense['Team'] != defense['RusherTeam']][['GameId','PlayId','X','Y','RusherX','RusherY']]\n        defense['def_dist_to_back'] = defense[['X','Y','RusherX','RusherY']].apply(lambda x: euclidean_distance(x[0],x[1],x[2],x[3]), axis=1)\n\n        defense = defense.groupby(['GameId','PlayId'])\\\n                         .agg({'def_dist_to_back':['min','max','mean','std']})\\\n                         .reset_index()\n        defense.columns = ['GameId','PlayId','def_min_dist','def_max_dist','def_mean_dist','def_std_dist']\n\n        return defense\n\n    def static_features(df):\n        static_features = df[df['NflId'] == df['NflIdRusher']][['GameId','PlayId','X','Y','S','A','Dis','Orientation','Dir',\n                                                            'YardLine','Quarter','Down','Distance','DefendersInTheBox']].drop_duplicates()\n        static_features['DefendersInTheBox'] = static_features['DefendersInTheBox'].fillna(np.mean(static_features['DefendersInTheBox']))\n\n        return static_features\n\n\n    def combine_features(relative_to_back, defense, static, deploy=deploy):\n        df = pd.merge(relative_to_back,defense,on=['GameId','PlayId'],how='inner')\n        df = pd.merge(df,static,on=['GameId','PlayId'],how='inner')\n\n        if not deploy:\n            df = pd.merge(df, outcomes, on=['GameId','PlayId'], how='inner')\n\n        return df\n    \n    yardline = update_yardline(df)\n    df = update_orientation(df, yardline)\n    back_feats = back_features(df)\n    rel_back = features_relative_to_back(df, back_feats)\n    def_feats = defense_features(df)\n    static_feats = static_features(df)\n    basetable = combine_features(rel_back, def_feats, static_feats, deploy=deploy)\n    return basetable","fdcefe2f":"%time train_basetable = create_features(train, False)","3f133d0b":"X = train_basetable.copy()\nyards = X.Yards\n\ny = np.zeros((yards.shape[0], 199))\nfor idx, target in enumerate(list(yards)):\n    y[idx][99 + target] = 1\n\nX.drop(['GameId','PlayId','Yards'], axis=1, inplace=True)","2b7c7133":"scaler = StandardScaler()\nX = scaler.fit_transform(X)","e8a9a793":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.15, random_state=12345)","4e8a297b":"print(X_train.shape, X_val.shape)\nprint(y_train.shape, y_val.shape)","f1f60f23":"class Metric(Callback):\n    def __init__(self, model, callbacks, data):\n        super().__init__()\n        self.model = model\n        self.callbacks = callbacks\n        self.data = data\n\n    def on_train_begin(self, logs=None):\n        for callback in self.callbacks:\n            callback.on_train_begin(logs)\n\n    def on_train_end(self, logs=None):\n        for callback in self.callbacks:\n            callback.on_train_end(logs)\n\n    def on_epoch_end(self, batch, logs=None):\n        X_train, y_train = self.data[0][0], self.data[0][1]\n        y_pred = self.model.predict(X_train)\n        y_true = np.clip(np.cumsum(y_train, axis=1), 0, 1)\n        y_pred = np.clip(np.cumsum(y_pred, axis=1), 0, 1)\n        tr_s = ((y_true - y_pred) ** 2).sum(axis=1).sum(axis=0) \/ (199 * X_train.shape[0])\n        tr_s = np.round(tr_s, 6)\n        logs['tr_CRPS'] = tr_s\n\n        X_valid, y_valid = self.data[1][0], self.data[1][1]\n\n        y_pred = self.model.predict(X_valid)\n        y_true = np.clip(np.cumsum(y_valid, axis=1), 0, 1)\n        y_pred = np.clip(np.cumsum(y_pred, axis=1), 0, 1)\n        val_s = ((y_true - y_pred) ** 2).sum(axis=1).sum(axis=0) \/ (199 * X_valid.shape[0])\n        val_s = np.round(val_s, 6)\n        logs['val_CRPS'] = val_s\n        print('tr CRPS', tr_s, 'val CRPS', val_s)\n\n        for callback in self.callbacks:\n            callback.on_epoch_end(batch, logs)","6663575a":"model = Sequential()\nmodel.add(Dense(512, input_dim=X.shape[1], activation='relu'))\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dense(199, activation='softmax'))","319904fe":"model.summary()","d059a083":"model.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=[])","ba5b3a80":"es = EarlyStopping(monitor='val_CRPS', \n                   mode='min',\n                   restore_best_weights=True, \n                   verbose=2, \n                   patience=5)\nes.set_model(model)","6c4382c2":"metric = Metric(model, [es], [(X_train,y_train), (X_val,y_val)])","59033b18":"%%time\nmodel.fit(X_train, y_train, callbacks=[metric], epochs=100, batch_size=1024)","802673d2":"class GP:\n    def __init__(self):\n        self.classes = 20\n        self.class_names = [ 'class_0',\n                             'class_1',\n                             'class_2',\n                             'class_3',\n                             'class_4',\n                             'class_5',\n                             'class_6',\n                             'class_7',\n                             'class_8',\n                             'class_9',\n                             'class_10',\n                             'class_11',\n                             'class_12',\n                             'class_13',\n                            'class_14',\n                            'class_15',\n                            'class_16',\n                            'class_17',\n                            'class_18',\n                            'class_19',\n                           ]\n\n\n    def GrabPredictions(self, data):\n        oof_preds = np.zeros((len(data), len(self.class_names)))\n        oof_preds[:,0] = self.GP_class_0(data)\n        oof_preds[:,1] = self.GP_class_1(data)\n        oof_preds[:,2] = self.GP_class_2(data)\n        oof_preds[:,3] = self.GP_class_3(data)\n        oof_preds[:,4] = self.GP_class_4(data)\n        oof_preds[:,5] = self.GP_class_5(data)\n        oof_preds[:,6] = self.GP_class_6(data)\n        oof_preds[:,7] = self.GP_class_7(data)\n        oof_preds[:,8] = self.GP_class_8(data)\n        oof_preds[:,9] = self.GP_class_9(data)\n        oof_preds[:,10] = self.GP_class_10(data)\n        oof_preds[:,11] = self.GP_class_11(data)\n        oof_preds[:,12] = self.GP_class_12(data)\n        oof_preds[:,13] = self.GP_class_13(data)\n        oof_preds[:,14] = self.GP_class_14(data)\n        oof_preds[:,15] = self.GP_class_15(data)\n        oof_preds[:,16] = self.GP_class_16(data)\n        oof_preds[:,17] = self.GP_class_17(data)\n        oof_preds[:,18] = self.GP_class_18(data)\n        oof_preds[:,19] = self.GP_class_19(data)\n        oof_df = pd.DataFrame(np.exp(oof_preds), columns=self.class_names)\n        oof_df =oof_df.div(oof_df.sum(axis=1), axis=0)\n        \n        return oof_df.values\n\n\n    def GP_class_0(self,data):\n        return (-4.248615 +\n                0.250000*np.tanh(((((((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))) * 2.0)) * 2.0)) +\n                0.250000*np.tanh(((((((data[\"back_from_scrimmage\"]) + (data[\"back_moving_down_field\"]))) + (((((((((data[\"back_from_scrimmage\"]) + (data[\"back_from_scrimmage\"]))) + (((((data[\"back_from_scrimmage\"]) - (data[\"A\"]))) + (data[\"back_from_scrimmage\"]))))) - (data[\"def_min_dist\"]))) + (((data[\"YardLine\"]) - (data[\"Orientation\"]))))))) + (((np.tanh((data[\"YardLine\"]))) * 2.0)))) +\n                0.250000*np.tanh(((((data[\"Orientation\"]) + (((((((data[\"Orientation\"]) * 2.0)) + (((data[\"back_from_scrimmage\"]) - (((data[\"back_moving_down_field\"]) + (((((data[\"Orientation\"]) + (data[\"back_moving_down_field\"]))) + (data[\"Orientation\"]))))))))) - (((data[\"A\"]) * 2.0)))))) + (((data[\"Orientation\"]) - (data[\"def_min_dist\"]))))) +\n                0.250000*np.tanh(((((data[\"back_from_scrimmage\"]) + (((data[\"back_from_scrimmage\"]) + (((((((data[\"back_oriented_down_field\"]) * 2.0)) - (data[\"def_min_dist\"]))) * 2.0)))))) + ((((((data[\"back_moving_down_field\"]) \/ 2.0)) + (((((data[\"back_moving_down_field\"]) + (((((((data[\"def_mean_dist\"]) + (data[\"Dis\"]))\/2.0)) + (data[\"YardLine\"]))\/2.0)))) * 2.0)))\/2.0)))) +\n                0.250000*np.tanh(((((data[\"Down\"]) + (((((((data[\"Dir\"]) + (data[\"back_oriented_down_field\"]))) + (((data[\"back_from_scrimmage\"]) + (data[\"Down\"]))))) + (((data[\"back_from_scrimmage\"]) + (data[\"YardLine\"]))))))) + (((data[\"Orientation\"]) + (data[\"min_dist\"]))))) +\n                0.246874*np.tanh(((((((data[\"back_moving_down_field\"]) - (data[\"Dis\"]))) + ((((data[\"back_moving_down_field\"]) + (((((data[\"back_moving_down_field\"]) - (data[\"A\"]))) + (((data[\"back_moving_down_field\"]) - (((((((data[\"Y\"]) + (((data[\"min_dist\"]) * ((((data[\"Dir\"]) + (data[\"Dis\"]))\/2.0)))))) \/ 2.0)) + (data[\"back_moving_down_field\"]))))))))\/2.0)))) - (data[\"back_moving_down_field\"]))) +\n                0.249902*np.tanh(((((((((data[\"Dir\"]) + (((data[\"Orientation\"]) + (((data[\"Dir\"]) * (data[\"Y\"]))))))) * (data[\"Orientation\"]))) + (data[\"Y\"]))) + (((((data[\"Orientation\"]) + (((((data[\"Dir\"]) * (data[\"back_moving_down_field\"]))) + (data[\"Orientation\"]))))) + (data[\"Orientation\"]))))) +\n                0.250000*np.tanh(((((((data[\"back_moving_down_field\"]) * 2.0)) + (((data[\"Orientation\"]) * (((data[\"Orientation\"]) + (data[\"Orientation\"]))))))) + (((data[\"back_moving_down_field\"]) * 2.0)))) +\n                0.250000*np.tanh(((((((data[\"max_dist\"]) - (((data[\"S\"]) * 2.0)))) + (data[\"mean_dist\"]))) - (((((((data[\"std_dist\"]) + (((data[\"std_dist\"]) + (((((data[\"Dir\"]) + (np.tanh((data[\"min_dist\"]))))) * 2.0)))))) * 2.0)) * (data[\"min_dist\"]))))) +\n                0.249805*np.tanh(((((((((((data[\"A\"]) + (data[\"A\"]))\/2.0)) + ((((data[\"A\"]) + ((-1.0*((data[\"A\"])))))\/2.0)))\/2.0)) - (((data[\"A\"]) - (data[\"back_oriented_down_field\"]))))) - (data[\"A\"]))))\n    \n    def GP_class_1(self,data):\n        return (-3.574230 +\n                0.250000*np.tanh(((((((((((((((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))) * 2.0)) - (data[\"A\"]))) + (((((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))) - (data[\"A\"]))))) + (data[\"def_min_dist\"]))) + ((-1.0*((data[\"def_min_dist\"])))))) + ((((data[\"Orientation\"]) + (((data[\"def_std_dist\"]) - (data[\"DefendersInTheBox\"]))))\/2.0)))) +\n                0.250000*np.tanh((((((((((((((((data[\"back_from_scrimmage\"]) - (data[\"Dis\"]))) + (((((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))) + (data[\"back_from_scrimmage\"]))))\/2.0)) - (data[\"def_min_dist\"]))) - (data[\"A\"]))) * 2.0)) + (((((((data[\"back_from_scrimmage\"]) - (data[\"DefendersInTheBox\"]))) - (data[\"def_min_dist\"]))) - (data[\"A\"]))))) + (data[\"back_from_scrimmage\"]))) +\n                0.250000*np.tanh(np.tanh((((data[\"Quarter\"]) + ((((-1.0*(((((((data[\"min_dist\"]) + (data[\"Down\"]))\/2.0)) + (data[\"Quarter\"])))))) + (((((data[\"back_from_scrimmage\"]) + (((data[\"S\"]) + (((((data[\"DefendersInTheBox\"]) + (data[\"back_from_scrimmage\"]))) + (data[\"DefendersInTheBox\"]))))))) + (data[\"Quarter\"]))))))))) +\n                0.250000*np.tanh((((((((((data[\"DefendersInTheBox\"]) + (((data[\"DefendersInTheBox\"]) \/ 2.0)))\/2.0)) + (data[\"DefendersInTheBox\"]))\/2.0)) + (data[\"DefendersInTheBox\"]))\/2.0)) +\n                0.250000*np.tanh((((((((((((data[\"A\"]) + ((((((data[\"min_dist\"]) + (data[\"min_dist\"]))\/2.0)) * 2.0)))\/2.0)) + (((((data[\"min_dist\"]) + (((data[\"min_dist\"]) * 2.0)))) - (((((data[\"A\"]) * 2.0)) * 2.0)))))) * 2.0)) - (data[\"min_dist\"]))) - (((data[\"A\"]) * 2.0)))) +\n                0.246874*np.tanh(((((data[\"Y\"]) + (((((((((((((data[\"Y\"]) + (data[\"back_moving_down_field\"]))) + ((((data[\"Dis\"]) + (data[\"X\"]))\/2.0)))) + (data[\"Y\"]))\/2.0)) + ((((((data[\"Y\"]) + (data[\"Y\"]))\/2.0)) + (data[\"back_from_scrimmage\"]))))\/2.0)) - (data[\"S\"]))))) - (data[\"S\"]))) +\n                0.249902*np.tanh(((((((data[\"back_moving_down_field\"]) - (((data[\"back_moving_down_field\"]) - ((((data[\"back_from_scrimmage\"]) + ((((((((data[\"back_moving_down_field\"]) + (data[\"Dir\"]))) + (data[\"X\"]))\/2.0)) - (data[\"def_min_dist\"]))))\/2.0)))))) - (data[\"def_min_dist\"]))) + (data[\"back_oriented_down_field\"]))) +\n                0.250000*np.tanh(np.tanh((data[\"back_moving_down_field\"]))) +\n                0.250000*np.tanh((((data[\"back_from_scrimmage\"]) + (((data[\"S\"]) * (((((data[\"def_max_dist\"]) * (np.tanh((((data[\"S\"]) * (data[\"S\"]))))))) + ((((data[\"def_mean_dist\"]) + (data[\"Y\"]))\/2.0)))))))\/2.0)) +\n                0.249805*np.tanh(((data[\"Down\"]) * ((((((((np.tanh((data[\"def_max_dist\"]))) - (data[\"Down\"]))) + ((((data[\"DefendersInTheBox\"]) + (((data[\"DefendersInTheBox\"]) - (data[\"def_max_dist\"]))))\/2.0)))\/2.0)) - (data[\"def_max_dist\"]))))))\n    \n    def GP_class_2(self,data):\n        return (-3.173018 +\n                0.250000*np.tanh(((data[\"back_from_scrimmage\"]) + (((((data[\"back_moving_down_field\"]) * 2.0)) + (((((((data[\"back_from_scrimmage\"]) + (data[\"back_from_scrimmage\"]))) - (((data[\"def_min_dist\"]) * 2.0)))) + (((((data[\"back_from_scrimmage\"]) + (data[\"back_from_scrimmage\"]))) - (((data[\"def_min_dist\"]) * 2.0)))))))))) +\n                0.250000*np.tanh(((((((((data[\"back_from_scrimmage\"]) - (data[\"A\"]))) - (data[\"back_from_scrimmage\"]))) + (data[\"back_from_scrimmage\"]))) + (((((data[\"def_mean_dist\"]) - (((data[\"def_mean_dist\"]) + (data[\"S\"]))))) + (((((data[\"back_from_scrimmage\"]) - (((data[\"def_mean_dist\"]) - (((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))))))) - (data[\"A\"]))))))) +\n                0.250000*np.tanh((((data[\"DefendersInTheBox\"]) + ((((data[\"DefendersInTheBox\"]) + ((((((data[\"DefendersInTheBox\"]) \/ 2.0)) + (data[\"DefendersInTheBox\"]))\/2.0)))\/2.0)))\/2.0)) +\n                0.250000*np.tanh(((((((((((((data[\"YardLine\"]) + ((((data[\"back_from_scrimmage\"]) + (((data[\"back_from_scrimmage\"]) * (data[\"back_from_scrimmage\"]))))\/2.0)))) + ((((data[\"YardLine\"]) + (data[\"X\"]))\/2.0)))\/2.0)) \/ 2.0)) + (data[\"back_from_scrimmage\"]))) + (data[\"YardLine\"]))\/2.0)) +\n                0.250000*np.tanh(((((np.tanh(((((((-1.0*((data[\"DefendersInTheBox\"])))) * (((((((np.tanh(((((0.41962990164756775)) \/ 2.0)))) \/ 2.0)) \/ 2.0)) \/ 2.0)))) \/ 2.0)))) \/ 2.0)) \/ 2.0)) +\n                0.246874*np.tanh((((((((((((data[\"Dis\"]) \/ 2.0)) + ((((-1.0*((data[\"min_dist\"])))) \/ 2.0)))\/2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)) +\n                0.249902*np.tanh(((data[\"X\"]) * (((((data[\"Quarter\"]) - (((np.tanh((data[\"max_dist\"]))) * (data[\"Quarter\"]))))) * (data[\"Dis\"]))))) +\n                0.250000*np.tanh(((((((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))) + (((data[\"def_min_dist\"]) * (data[\"min_dist\"]))))) + (((((data[\"def_min_dist\"]) + (((((((data[\"Dir\"]) - (data[\"A\"]))) * (data[\"min_dist\"]))) + (data[\"min_dist\"]))))) - (data[\"A\"]))))) +\n                0.250000*np.tanh(((data[\"def_min_dist\"]) * (((data[\"X\"]) * (((data[\"max_dist\"]) - ((((data[\"A\"]) + (((data[\"X\"]) + (((data[\"A\"]) - ((((-1.0*((((data[\"X\"]) + (((data[\"X\"]) * (data[\"max_dist\"])))))))) \/ 2.0)))))))\/2.0)))))))) +\n                0.249805*np.tanh((((((((data[\"Distance\"]) * (data[\"def_max_dist\"]))) + (data[\"max_dist\"]))\/2.0)) + (((data[\"Distance\"]) * (data[\"max_dist\"]))))))\n    \n    def GP_class_3(self,data):\n        return (-2.389767 +\n                0.250000*np.tanh(((((((((data[\"back_from_scrimmage\"]) - (data[\"def_mean_dist\"]))) + (data[\"back_from_scrimmage\"]))) - (data[\"Distance\"]))) - (data[\"def_min_dist\"]))) +\n                0.250000*np.tanh(((data[\"Quarter\"]) + ((((((((data[\"Dir\"]) - (data[\"Dis\"]))) + (((data[\"DefendersInTheBox\"]) + ((((((data[\"DefendersInTheBox\"]) + (data[\"DefendersInTheBox\"]))) + (((((((data[\"Down\"]) + (data[\"Quarter\"]))\/2.0)) + (data[\"Down\"]))\/2.0)))\/2.0)))))) + (data[\"DefendersInTheBox\"]))\/2.0)))) +\n                0.250000*np.tanh(((((((((data[\"DefendersInTheBox\"]) - (data[\"A\"]))) + ((((data[\"X\"]) + ((((data[\"A\"]) + (((data[\"A\"]) * 2.0)))\/2.0)))\/2.0)))\/2.0)) + ((((((data[\"Down\"]) + ((((data[\"X\"]) + (data[\"DefendersInTheBox\"]))\/2.0)))\/2.0)) - (data[\"A\"]))))\/2.0)) +\n                0.250000*np.tanh(((data[\"def_max_dist\"]) + (((data[\"def_mean_dist\"]) * (((data[\"Dis\"]) - (((data[\"def_max_dist\"]) * (((((((((((((data[\"def_mean_dist\"]) + (data[\"Dis\"]))\/2.0)) + (data[\"std_dist\"]))\/2.0)) + ((((data[\"std_dist\"]) + (data[\"S\"]))\/2.0)))\/2.0)) + (((((((data[\"Dis\"]) + (data[\"def_std_dist\"]))\/2.0)) + (data[\"def_mean_dist\"]))\/2.0)))\/2.0)))))))))) +\n                0.250000*np.tanh(((data[\"min_dist\"]) * (((((data[\"A\"]) - (data[\"back_oriented_down_field\"]))) - ((((data[\"A\"]) + (np.tanh((((data[\"back_moving_down_field\"]) * (np.tanh((data[\"min_dist\"]))))))))\/2.0)))))) +\n                0.246874*np.tanh(((((((data[\"back_moving_down_field\"]) + (((data[\"Distance\"]) + (((data[\"std_dist\"]) * (data[\"DefendersInTheBox\"]))))))\/2.0)) + (((data[\"std_dist\"]) + (((data[\"Distance\"]) * (((((data[\"Distance\"]) * (((data[\"DefendersInTheBox\"]) * (data[\"def_mean_dist\"]))))) * (data[\"def_mean_dist\"]))))))))\/2.0)) +\n                0.249902*np.tanh(((((data[\"back_from_scrimmage\"]) - (data[\"def_mean_dist\"]))) + (((((data[\"S\"]) * (data[\"back_from_scrimmage\"]))) - (np.tanh((data[\"DefendersInTheBox\"]))))))) +\n                0.250000*np.tanh(((((((((data[\"max_dist\"]) * (np.tanh((np.tanh(((((data[\"std_dist\"]) + (((data[\"back_oriented_down_field\"]) + (data[\"std_dist\"]))))\/2.0)))))))) + (np.tanh((data[\"std_dist\"]))))\/2.0)) + (np.tanh((((data[\"back_oriented_down_field\"]) + (data[\"std_dist\"]))))))\/2.0)) +\n                0.250000*np.tanh((((data[\"back_moving_down_field\"]) + (((((data[\"Dis\"]) * (data[\"Y\"]))) - ((((((data[\"back_moving_down_field\"]) * ((((data[\"Dis\"]) + (data[\"Dis\"]))\/2.0)))) + (((((((np.tanh((data[\"Y\"]))) + (data[\"Dis\"]))\/2.0)) + ((((data[\"Dis\"]) + (((((-1.0*((data[\"Y\"])))) + (data[\"Dis\"]))\/2.0)))\/2.0)))\/2.0)))\/2.0)))))\/2.0)) +\n                0.249805*np.tanh(((((((data[\"back_oriented_down_field\"]) + ((((((data[\"back_from_scrimmage\"]) + ((((((data[\"std_dist\"]) + (data[\"Dir\"]))) + (data[\"back_from_scrimmage\"]))\/2.0)))\/2.0)) + ((((data[\"Dir\"]) + ((((data[\"back_from_scrimmage\"]) + (((data[\"Dir\"]) * (((data[\"Dir\"]) \/ 2.0)))))\/2.0)))\/2.0)))))\/2.0)) + (((data[\"Dir\"]) * ((((data[\"back_moving_down_field\"]) + (data[\"Dir\"]))\/2.0)))))\/2.0)))\n    \n    def GP_class_4(self,data):\n        return (-2.130314 +\n                0.250000*np.tanh((((((np.tanh((data[\"DefendersInTheBox\"]))) + (data[\"YardLine\"]))) + (((((((data[\"YardLine\"]) - (data[\"Dir\"]))) - (data[\"def_mean_dist\"]))) - (np.tanh((((((((data[\"Dir\"]) + (data[\"YardLine\"]))\/2.0)) + (data[\"Dir\"]))\/2.0)))))))\/2.0)) +\n                0.250000*np.tanh((-1.0*(((-1.0*(((((((((((data[\"def_min_dist\"]) + ((((data[\"DefendersInTheBox\"]) + (data[\"Orientation\"]))\/2.0)))\/2.0)) + ((((((data[\"YardLine\"]) * (data[\"YardLine\"]))) + (data[\"YardLine\"]))\/2.0)))\/2.0)) + (data[\"DefendersInTheBox\"]))\/2.0)))))))) +\n                0.250000*np.tanh((-1.0*(((((((data[\"Distance\"]) * (((data[\"Distance\"]) - (((data[\"Distance\"]) * (data[\"X\"]))))))) + ((((data[\"X\"]) + ((((data[\"back_moving_down_field\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)))\/2.0))))) +\n                0.250000*np.tanh(((((((((((((((((data[\"def_mean_dist\"]) + (np.tanh((data[\"def_mean_dist\"]))))\/2.0)) + (data[\"def_mean_dist\"]))\/2.0)) - (((data[\"def_mean_dist\"]) * (data[\"def_mean_dist\"]))))) * (data[\"def_mean_dist\"]))) + ((-1.0*((data[\"back_moving_down_field\"])))))\/2.0)) + (data[\"mean_dist\"]))\/2.0)) +\n                0.250000*np.tanh((((data[\"back_from_scrimmage\"]) + ((((((data[\"X\"]) + (((((((((((data[\"back_from_scrimmage\"]) + (data[\"X\"]))\/2.0)) - ((((np.tanh((data[\"back_from_scrimmage\"]))) + (data[\"DefendersInTheBox\"]))\/2.0)))) + (data[\"DefendersInTheBox\"]))\/2.0)) * (data[\"X\"]))))\/2.0)) * ((((data[\"X\"]) + (((data[\"X\"]) * (data[\"DefendersInTheBox\"]))))\/2.0)))))\/2.0)) +\n                0.246874*np.tanh(((np.tanh((data[\"std_dist\"]))) - ((((((((((np.tanh((((np.tanh((np.tanh((np.tanh((data[\"std_dist\"]))))))) - (data[\"def_mean_dist\"]))))) + (np.tanh((data[\"std_dist\"]))))\/2.0)) + (np.tanh((np.tanh((np.tanh((np.tanh((np.tanh((data[\"std_dist\"]))))))))))))\/2.0)) + (data[\"def_mean_dist\"]))\/2.0)))) +\n                0.249902*np.tanh((((((data[\"Distance\"]) * (((np.tanh((data[\"def_min_dist\"]))) \/ 2.0)))) + (((data[\"def_min_dist\"]) \/ 2.0)))\/2.0)) +\n                0.250000*np.tanh((((((((data[\"back_oriented_down_field\"]) + (np.tanh((np.tanh(((((((((-1.0*((data[\"back_from_scrimmage\"])))) \/ 2.0)) \/ 2.0)) \/ 2.0)))))))\/2.0)) \/ 2.0)) * 2.0)) +\n                0.250000*np.tanh(((((data[\"back_from_scrimmage\"]) * (((((((data[\"min_dist\"]) * (((((0.0)) + ((((1.0)) \/ 2.0)))\/2.0)))) \/ 2.0)) * ((((-1.0*((data[\"back_moving_down_field\"])))) \/ 2.0)))))) * ((0.0)))) +\n                0.249805*np.tanh((((((((((data[\"def_std_dist\"]) + (data[\"def_std_dist\"]))\/2.0)) + ((-1.0*(((((((data[\"def_std_dist\"]) + ((((data[\"Dis\"]) + ((((((data[\"def_std_dist\"]) + (data[\"Dis\"]))) + ((-1.0*(((1.03885555267333984))))))\/2.0)))\/2.0)))\/2.0)) * (((data[\"def_std_dist\"]) * (data[\"def_max_dist\"])))))))))\/2.0)) + (data[\"def_max_dist\"]))\/2.0)))\n    \n    def GP_class_5(self,data):\n        return (-2.049984 +\n                0.250000*np.tanh((((((((((data[\"DefendersInTheBox\"]) + (data[\"DefendersInTheBox\"]))\/2.0)) + ((((((((np.tanh((data[\"back_oriented_down_field\"]))) - (data[\"def_min_dist\"]))) - (data[\"def_mean_dist\"]))) + (data[\"def_min_dist\"]))\/2.0)))\/2.0)) + (((data[\"def_min_dist\"]) - (data[\"back_from_scrimmage\"]))))\/2.0)) +\n                0.250000*np.tanh((((((((((((data[\"Down\"]) + (np.tanh((data[\"Distance\"]))))) + (data[\"def_min_dist\"]))\/2.0)) + (((data[\"def_min_dist\"]) - (data[\"Distance\"]))))\/2.0)) + (((((((data[\"def_min_dist\"]) + ((((data[\"def_min_dist\"]) + (data[\"min_dist\"]))\/2.0)))\/2.0)) + (data[\"def_min_dist\"]))\/2.0)))\/2.0)) +\n                0.250000*np.tanh((((((np.tanh((data[\"Quarter\"]))) + (((((data[\"back_oriented_down_field\"]) + (data[\"DefendersInTheBox\"]))) - ((((data[\"back_moving_down_field\"]) + ((((((data[\"back_moving_down_field\"]) + (data[\"back_moving_down_field\"]))\/2.0)) * (data[\"Down\"]))))\/2.0)))))\/2.0)) - (data[\"back_moving_down_field\"]))) +\n                0.250000*np.tanh(((((((((data[\"std_dist\"]) \/ 2.0)) - (((data[\"def_mean_dist\"]) - (((data[\"std_dist\"]) - (((((data[\"std_dist\"]) \/ 2.0)) * (data[\"def_mean_dist\"]))))))))) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((data[\"def_mean_dist\"]) * (((data[\"max_dist\"]) + (((((((((data[\"max_dist\"]) + (data[\"back_from_scrimmage\"]))\/2.0)) - (data[\"max_dist\"]))) + ((((((data[\"max_dist\"]) * (data[\"max_dist\"]))) + (np.tanh((((((((data[\"max_dist\"]) + (np.tanh((np.tanh((data[\"back_from_scrimmage\"]))))))\/2.0)) + (np.tanh((data[\"def_mean_dist\"]))))\/2.0)))))\/2.0)))\/2.0)))))) +\n                0.246874*np.tanh(((data[\"YardLine\"]) * ((((data[\"A\"]) + ((((np.tanh(((((data[\"std_dist\"]) + (data[\"back_oriented_down_field\"]))\/2.0)))) + (np.tanh((data[\"Quarter\"]))))\/2.0)))\/2.0)))) +\n                0.249902*np.tanh((((((((((data[\"back_oriented_down_field\"]) \/ 2.0)) \/ 2.0)) + ((((((((np.tanh((((((data[\"def_min_dist\"]) \/ 2.0)) \/ 2.0)))) + (((data[\"back_oriented_down_field\"]) \/ 2.0)))) + ((((data[\"def_min_dist\"]) + (((((data[\"def_min_dist\"]) \/ 2.0)) \/ 2.0)))\/2.0)))\/2.0)) \/ 2.0)))\/2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((data[\"DefendersInTheBox\"]) * (((((data[\"def_mean_dist\"]) - (((data[\"back_moving_down_field\"]) * (((data[\"A\"]) * ((((data[\"back_moving_down_field\"]) + (((data[\"A\"]) \/ 2.0)))\/2.0)))))))) * (data[\"A\"]))))) +\n                0.250000*np.tanh(np.tanh((((data[\"back_moving_down_field\"]) * ((((-1.0*(((((0.0)) * ((0.0))))))) \/ 2.0)))))) +\n                0.249805*np.tanh((((data[\"back_oriented_down_field\"]) + (((((((((np.tanh(((((((data[\"def_max_dist\"]) + (np.tanh((((((((data[\"back_oriented_down_field\"]) + (data[\"back_moving_down_field\"]))\/2.0)) + (data[\"back_oriented_down_field\"]))\/2.0)))))\/2.0)) \/ 2.0)))) \/ 2.0)) + (data[\"back_oriented_down_field\"]))\/2.0)) + (data[\"back_moving_down_field\"]))\/2.0)))\/2.0)))\n    \n    def GP_class_6(self,data):\n        return (-2.205513 +\n                0.250000*np.tanh(((((((((data[\"def_min_dist\"]) - (data[\"back_from_scrimmage\"]))) - (((data[\"back_from_scrimmage\"]) - (data[\"back_from_scrimmage\"]))))) + (((data[\"def_min_dist\"]) - (((data[\"back_from_scrimmage\"]) - (data[\"def_min_dist\"]))))))) - (data[\"def_min_dist\"]))) +\n                0.250000*np.tanh((((((((((((((((((((data[\"A\"]) + (data[\"Distance\"]))\/2.0)) \/ 2.0)) + (np.tanh((data[\"A\"]))))) + (data[\"Distance\"]))\/2.0)) \/ 2.0)) + ((-1.0*((data[\"Distance\"])))))) + (((data[\"DefendersInTheBox\"]) * ((((((data[\"Distance\"]) * (data[\"DefendersInTheBox\"]))) + (((data[\"Distance\"]) * 2.0)))\/2.0)))))) + (data[\"DefendersInTheBox\"]))\/2.0)) +\n                0.250000*np.tanh((((((data[\"Distance\"]) + ((((((((data[\"X\"]) - ((((data[\"mean_dist\"]) + ((-1.0*(((((((data[\"back_oriented_down_field\"]) + ((((data[\"back_moving_down_field\"]) + (data[\"back_moving_down_field\"]))\/2.0)))\/2.0)) \/ 2.0))))))\/2.0)))) + (data[\"Dir\"]))\/2.0)) - (data[\"back_moving_down_field\"]))))\/2.0)) - (data[\"back_moving_down_field\"]))) +\n                0.250000*np.tanh(((data[\"def_mean_dist\"]) * ((((((data[\"def_max_dist\"]) + (data[\"max_dist\"]))\/2.0)) * (data[\"def_min_dist\"]))))) +\n                0.250000*np.tanh((((((((((((((np.tanh((((((((((((data[\"def_std_dist\"]) * 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)))) \/ 2.0)) + (np.tanh((((data[\"def_max_dist\"]) \/ 2.0)))))\/2.0)) \/ 2.0)) * ((((0.0)) \/ 2.0)))) \/ 2.0)) \/ 2.0)) +\n                0.246874*np.tanh((((((data[\"max_dist\"]) + (data[\"std_dist\"]))\/2.0)) \/ 2.0)) +\n                0.249902*np.tanh(((((((((((data[\"def_min_dist\"]) + (np.tanh(((-1.0*((((data[\"X\"]) + (((data[\"Dir\"]) + (((data[\"back_moving_down_field\"]) \/ 2.0))))))))))))) \/ 2.0)) * (data[\"mean_dist\"]))) * (np.tanh((data[\"back_oriented_down_field\"]))))) \/ 2.0)) +\n                0.250000*np.tanh(np.tanh((((((((((np.tanh(((((((0.0)) * ((((0.0)) \/ 2.0)))) * 2.0)))) \/ 2.0)) \/ 2.0)) * ((((((0.0)) \/ 2.0)) \/ 2.0)))) \/ 2.0)))) +\n                0.250000*np.tanh(((((((((np.tanh((np.tanh(((((((((((((((((((((0.0)) \/ 2.0)) \/ 2.0)) * (data[\"def_min_dist\"]))) \/ 2.0)) - (np.tanh((((((np.tanh(((0.0)))) \/ 2.0)) \/ 2.0)))))) \/ 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)))))) \/ 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)) +\n                0.249805*np.tanh(((((data[\"DefendersInTheBox\"]) * ((0.0)))) + (((((data[\"A\"]) \/ 2.0)) * (data[\"DefendersInTheBox\"]))))))\n    \n    def GP_class_7(self,data):\n        return (-2.292080 +\n                0.250000*np.tanh(((((((data[\"def_min_dist\"]) + (data[\"def_min_dist\"]))) - (data[\"back_from_scrimmage\"]))) + (((((data[\"def_min_dist\"]) - (((data[\"def_min_dist\"]) - (((data[\"def_min_dist\"]) - (data[\"YardLine\"]))))))) - ((((data[\"def_min_dist\"]) + (data[\"back_from_scrimmage\"]))\/2.0)))))) +\n                0.250000*np.tanh((((((data[\"min_dist\"]) - (data[\"min_dist\"]))) + ((((data[\"def_mean_dist\"]) + (((((((data[\"Distance\"]) - (data[\"back_from_scrimmage\"]))) + ((((((((data[\"A\"]) + (data[\"back_from_scrimmage\"]))\/2.0)) - (data[\"back_moving_down_field\"]))) \/ 2.0)))) - (data[\"back_from_scrimmage\"]))))\/2.0)))\/2.0)) +\n                0.250000*np.tanh(((((((((((((0.0)) * ((0.0)))) * ((((((-1.0*((((np.tanh(((0.0)))) \/ 2.0))))) * ((0.0)))) \/ 2.0)))) + (((((data[\"back_oriented_down_field\"]) \/ 2.0)) \/ 2.0)))\/2.0)) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((((((((-1.0*((data[\"back_oriented_down_field\"])))) \/ 2.0)) + (np.tanh((data[\"def_mean_dist\"]))))\/2.0)) * ((((0.0)) \/ 2.0)))) +\n                0.250000*np.tanh((0.0)) +\n                0.246874*np.tanh(((((((0.58118116855621338)) \/ 2.0)) + (np.tanh((data[\"def_min_dist\"]))))\/2.0)) +\n                0.249902*np.tanh(((((((((np.tanh((data[\"max_dist\"]))) \/ 2.0)) + (((np.tanh((data[\"back_oriented_down_field\"]))) \/ 2.0)))\/2.0)) + ((((((((((((((data[\"Dir\"]) + (data[\"back_oriented_down_field\"]))\/2.0)) \/ 2.0)) + (data[\"back_oriented_down_field\"]))\/2.0)) \/ 2.0)) + (data[\"back_oriented_down_field\"]))\/2.0)))\/2.0)) +\n                0.250000*np.tanh((((((((((data[\"back_moving_down_field\"]) * (data[\"back_moving_down_field\"]))) + (data[\"back_moving_down_field\"]))\/2.0)) * (data[\"back_from_scrimmage\"]))) * ((((data[\"back_moving_down_field\"]) + ((((((data[\"back_moving_down_field\"]) * (data[\"back_from_scrimmage\"]))) + (((data[\"back_moving_down_field\"]) * (data[\"back_moving_down_field\"]))))\/2.0)))\/2.0)))) +\n                0.250000*np.tanh(((((data[\"Dis\"]) \/ 2.0)) \/ 2.0)) +\n                0.249805*np.tanh(((((0.0)) + ((((((((((((0.0)) \/ 2.0)) + (data[\"def_max_dist\"]))\/2.0)) \/ 2.0)) + ((((data[\"def_max_dist\"]) + (((((((data[\"DefendersInTheBox\"]) + (((((((data[\"def_max_dist\"]) \/ 2.0)) \/ 2.0)) \/ 2.0)))\/2.0)) + (data[\"def_mean_dist\"]))\/2.0)))\/2.0)))\/2.0)))\/2.0)))\n    \n    def GP_class_8(self,data):\n        return (-2.566108 +\n                0.250000*np.tanh(((((((((((data[\"A\"]) + (data[\"def_mean_dist\"]))\/2.0)) + ((((data[\"def_min_dist\"]) + (data[\"def_mean_dist\"]))\/2.0)))\/2.0)) * 2.0)) + (data[\"def_min_dist\"]))) +\n                0.250000*np.tanh((((data[\"Distance\"]) + ((((data[\"Distance\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)) +\n                0.250000*np.tanh(((((((data[\"Dis\"]) + ((((((np.tanh((np.tanh((data[\"Dis\"]))))) + (data[\"A\"]))\/2.0)) * 2.0)))\/2.0)) + ((((((data[\"Dis\"]) + ((((((np.tanh((np.tanh((((np.tanh(((((data[\"S\"]) + (data[\"A\"]))\/2.0)))) \/ 2.0)))))) \/ 2.0)) + (((data[\"A\"]) \/ 2.0)))\/2.0)))\/2.0)) \/ 2.0)))\/2.0)) +\n                0.250000*np.tanh(((data[\"YardLine\"]) * (((data[\"back_from_scrimmage\"]) + ((((((data[\"back_from_scrimmage\"]) + (((((data[\"back_from_scrimmage\"]) + ((((data[\"back_from_scrimmage\"]) + (((data[\"YardLine\"]) + (data[\"max_dist\"]))))\/2.0)))) + (((data[\"YardLine\"]) + (data[\"back_from_scrimmage\"]))))))\/2.0)) + (((((data[\"back_from_scrimmage\"]) + (data[\"back_from_scrimmage\"]))) + (data[\"YardLine\"]))))))))) +\n                0.250000*np.tanh((((((data[\"DefendersInTheBox\"]) * (data[\"def_mean_dist\"]))) + (np.tanh(((-1.0*((data[\"back_from_scrimmage\"])))))))\/2.0)) +\n                0.246874*np.tanh(np.tanh(((((data[\"def_min_dist\"]) + ((((data[\"def_mean_dist\"]) + (data[\"max_dist\"]))\/2.0)))\/2.0)))) +\n                0.249902*np.tanh(((data[\"Quarter\"]) * ((((((np.tanh((((data[\"Quarter\"]) \/ 2.0)))) \/ 2.0)) + ((((((((data[\"Quarter\"]) * (data[\"Down\"]))) + (((data[\"def_std_dist\"]) - (data[\"Distance\"]))))\/2.0)) - (data[\"Distance\"]))))\/2.0)))) +\n                0.250000*np.tanh(((((((((((0.0)) * (data[\"DefendersInTheBox\"]))) \/ 2.0)) + (((data[\"back_oriented_down_field\"]) * 2.0)))\/2.0)) * (data[\"Distance\"]))) +\n                0.250000*np.tanh(((np.tanh((data[\"max_dist\"]))) \/ 2.0)) +\n                0.249805*np.tanh((((((((((0.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)))\n    \n    def GP_class_9(self,data):\n        return (-2.941433 +\n                0.250000*np.tanh(data[\"def_mean_dist\"]) +\n                0.250000*np.tanh(((((data[\"def_min_dist\"]) + (((((((((((data[\"def_min_dist\"]) - (data[\"def_min_dist\"]))) + (data[\"Distance\"]))) + (((data[\"def_min_dist\"]) - (data[\"back_from_scrimmage\"]))))\/2.0)) + (np.tanh((data[\"Distance\"]))))\/2.0)))) - (data[\"back_from_scrimmage\"]))) +\n                0.250000*np.tanh((((((((((data[\"Orientation\"]) + (((data[\"back_oriented_down_field\"]) \/ 2.0)))\/2.0)) * (((((((((data[\"Y\"]) \/ 2.0)) \/ 2.0)) \/ 2.0)) \/ 2.0)))) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh((((data[\"def_mean_dist\"]) + ((((((((((((np.tanh((data[\"def_mean_dist\"]))) * (data[\"back_oriented_down_field\"]))) \/ 2.0)) + (data[\"def_min_dist\"]))\/2.0)) * (data[\"back_oriented_down_field\"]))) * (((data[\"def_mean_dist\"]) \/ 2.0)))))\/2.0)) +\n                0.250000*np.tanh(((((data[\"def_min_dist\"]) \/ 2.0)) \/ 2.0)) +\n                0.246874*np.tanh((((-1.0*((data[\"X\"])))) * ((((((((data[\"Dis\"]) + (((data[\"Dis\"]) + (((data[\"back_oriented_down_field\"]) + (data[\"Quarter\"]))))))) + (data[\"Quarter\"]))) + ((((((((((data[\"mean_dist\"]) + (data[\"X\"]))\/2.0)) + (((data[\"S\"]) * 2.0)))) \/ 2.0)) + (data[\"S\"]))))\/2.0)))) +\n                0.249902*np.tanh((((((-1.0*((((data[\"back_oriented_down_field\"]) \/ 2.0))))) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((data[\"back_from_scrimmage\"]) * (((((data[\"back_moving_down_field\"]) \/ 2.0)) \/ 2.0)))) +\n                0.250000*np.tanh(((((((((((((((((0.0)) + ((((-1.0*((((((((data[\"back_moving_down_field\"]) \/ 2.0)) \/ 2.0)) \/ 2.0))))) \/ 2.0)))\/2.0)) * ((0.0)))) \/ 2.0)) * ((((0.0)) * (((((data[\"back_moving_down_field\"]) \/ 2.0)) \/ 2.0)))))) + (data[\"Distance\"]))\/2.0)) + ((((0.0)) \/ 2.0)))\/2.0)) +\n                0.249805*np.tanh((((((data[\"back_moving_down_field\"]) + (((((((data[\"back_oriented_down_field\"]) * (((((np.tanh(((((data[\"min_dist\"]) + (((data[\"back_moving_down_field\"]) + (((data[\"Dis\"]) \/ 2.0)))))\/2.0)))) * (np.tanh((data[\"back_moving_down_field\"]))))) * (data[\"back_oriented_down_field\"]))))) * (data[\"back_oriented_down_field\"]))) * (data[\"Dis\"]))))\/2.0)) \/ 2.0)))\n    \n    def GP_class_10(self,data):\n        return (-3.222959 +\n                0.250000*np.tanh((((((data[\"Dis\"]) + (data[\"DefendersInTheBox\"]))\/2.0)) + ((((((data[\"Distance\"]) + (data[\"def_mean_dist\"]))\/2.0)) + (data[\"Distance\"]))))) +\n                0.250000*np.tanh(((((((data[\"def_mean_dist\"]) + (data[\"def_mean_dist\"]))\/2.0)) + (((((data[\"A\"]) \/ 2.0)) \/ 2.0)))\/2.0)) +\n                0.250000*np.tanh((((-1.0*((data[\"back_oriented_down_field\"])))) \/ 2.0)) +\n                0.250000*np.tanh(((((data[\"back_moving_down_field\"]) * (data[\"Distance\"]))) * (np.tanh((data[\"back_oriented_down_field\"]))))) +\n                0.250000*np.tanh(((((((data[\"Distance\"]) * ((((data[\"back_moving_down_field\"]) + (((data[\"back_moving_down_field\"]) - (((((-1.0*(((-1.0*((data[\"def_min_dist\"]))))))) + ((((data[\"back_oriented_down_field\"]) + (((data[\"def_min_dist\"]) \/ 2.0)))\/2.0)))\/2.0)))))\/2.0)))) - (data[\"def_std_dist\"]))) + (data[\"back_moving_down_field\"]))) +\n                0.246874*np.tanh(((((((data[\"def_mean_dist\"]) - (data[\"def_mean_dist\"]))) + (data[\"def_mean_dist\"]))) + ((((((((data[\"def_mean_dist\"]) + (((((data[\"back_oriented_down_field\"]) - (data[\"back_from_scrimmage\"]))) - (data[\"Dir\"]))))) - (data[\"Dir\"]))) + (np.tanh((((data[\"def_min_dist\"]) + (data[\"def_min_dist\"]))))))\/2.0)))) +\n                0.249902*np.tanh((((np.tanh((data[\"Distance\"]))) + (((((np.tanh(((((((data[\"Dis\"]) + (data[\"Distance\"]))\/2.0)) + (((np.tanh((np.tanh((((data[\"Distance\"]) \/ 2.0)))))) \/ 2.0)))))) \/ 2.0)) \/ 2.0)))\/2.0)) +\n                0.250000*np.tanh(data[\"back_oriented_down_field\"]) +\n                0.250000*np.tanh(((((np.tanh(((((((0.84626573324203491)) \/ 2.0)) \/ 2.0)))) \/ 2.0)) \/ 2.0)) +\n                0.249805*np.tanh(((((((np.tanh((((data[\"back_oriented_down_field\"]) \/ 2.0)))) \/ 2.0)) \/ 2.0)) * (((((data[\"back_oriented_down_field\"]) \/ 2.0)) \/ 2.0)))))\n    \n    def GP_class_11(self,data):\n        return (-3.530885 +\n                0.250000*np.tanh(((((((data[\"def_mean_dist\"]) * 2.0)) + ((((((data[\"def_mean_dist\"]) + (((data[\"back_moving_down_field\"]) - (data[\"def_mean_dist\"]))))) + (data[\"A\"]))\/2.0)))) + (data[\"def_mean_dist\"]))) +\n                0.250000*np.tanh(((data[\"Distance\"]) + (data[\"A\"]))) +\n                0.250000*np.tanh(((((((((((((data[\"mean_dist\"]) + (((((data[\"min_dist\"]) + (data[\"min_dist\"]))) + (((data[\"mean_dist\"]) + ((((data[\"Dis\"]) + (data[\"S\"]))\/2.0)))))))) \/ 2.0)) + (((data[\"S\"]) + ((((data[\"S\"]) + (((data[\"S\"]) + (data[\"mean_dist\"]))))\/2.0)))))\/2.0)) + (data[\"S\"]))\/2.0)) + (data[\"S\"]))) +\n                0.250000*np.tanh((((((data[\"def_mean_dist\"]) + (data[\"def_mean_dist\"]))) + ((((data[\"min_dist\"]) + (data[\"min_dist\"]))\/2.0)))\/2.0)) +\n                0.250000*np.tanh(((((((((data[\"back_moving_down_field\"]) + (data[\"X\"]))) + ((((data[\"std_dist\"]) + (np.tanh(((((((data[\"YardLine\"]) \/ 2.0)) + (data[\"back_moving_down_field\"]))\/2.0)))))\/2.0)))\/2.0)) + (np.tanh((data[\"min_dist\"]))))\/2.0)) +\n                0.246874*np.tanh(data[\"def_mean_dist\"]) +\n                0.249902*np.tanh((((-1.0*((data[\"mean_dist\"])))) - (((data[\"mean_dist\"]) + ((((((((data[\"mean_dist\"]) - (data[\"mean_dist\"]))) + (((np.tanh((data[\"YardLine\"]))) \/ 2.0)))) + (data[\"Dir\"]))\/2.0)))))) +\n                0.250000*np.tanh((((((data[\"mean_dist\"]) + (((((((((((data[\"YardLine\"]) \/ 2.0)) + (data[\"mean_dist\"]))\/2.0)) + (data[\"max_dist\"]))\/2.0)) \/ 2.0)))\/2.0)) * (data[\"X\"]))) +\n                0.250000*np.tanh((((data[\"def_mean_dist\"]) + (data[\"def_mean_dist\"]))\/2.0)) +\n                0.249805*np.tanh(((data[\"back_moving_down_field\"]) * (((data[\"back_moving_down_field\"]) * ((((((data[\"DefendersInTheBox\"]) + (((((((data[\"Distance\"]) + (data[\"def_std_dist\"]))\/2.0)) + ((-1.0*(((-1.0*(((((((data[\"back_moving_down_field\"]) - (data[\"back_oriented_down_field\"]))) + (np.tanh(((((data[\"X\"]) + (data[\"back_moving_down_field\"]))\/2.0)))))\/2.0)))))))))\/2.0)))\/2.0)) * ((((data[\"back_moving_down_field\"]) + (data[\"Down\"]))\/2.0)))))))))\n    \n    def GP_class_12(self,data):\n        return (-3.527884 +\n                0.250000*np.tanh(((((data[\"Distance\"]) + (data[\"Distance\"]))) + (data[\"def_mean_dist\"]))) +\n                0.250000*np.tanh((((data[\"back_moving_down_field\"]) + (((((((data[\"def_mean_dist\"]) + (((((((data[\"back_moving_down_field\"]) + (data[\"back_moving_down_field\"]))) + (data[\"back_moving_down_field\"]))) \/ 2.0)))) + (data[\"def_mean_dist\"]))) + (data[\"def_mean_dist\"]))))\/2.0)) +\n                0.250000*np.tanh(((((((data[\"back_moving_down_field\"]) + ((((((((((data[\"Distance\"]) + (data[\"Distance\"]))\/2.0)) + ((((data[\"Distance\"]) + ((((data[\"min_dist\"]) + (data[\"back_moving_down_field\"]))\/2.0)))\/2.0)))\/2.0)) + ((((data[\"back_moving_down_field\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)))\/2.0)) + (((data[\"back_moving_down_field\"]) - (((data[\"back_moving_down_field\"]) \/ 2.0)))))\/2.0)) +\n                0.250000*np.tanh(((((((((((((((((((data[\"def_mean_dist\"]) + (data[\"back_oriented_down_field\"]))\/2.0)) \/ 2.0)) + (data[\"Dis\"]))\/2.0)) \/ 2.0)) + (data[\"def_max_dist\"]))\/2.0)) \/ 2.0)) + ((((data[\"def_mean_dist\"]) + (((data[\"Distance\"]) \/ 2.0)))\/2.0)))\/2.0)) +\n                0.250000*np.tanh((((np.tanh((data[\"Y\"]))) + ((((((((data[\"back_oriented_down_field\"]) * (((data[\"back_moving_down_field\"]) \/ 2.0)))) \/ 2.0)) + (data[\"Y\"]))\/2.0)))\/2.0)) +\n                0.246874*np.tanh(((((((((data[\"back_moving_down_field\"]) + (((((((data[\"def_mean_dist\"]) + (data[\"back_moving_down_field\"]))\/2.0)) + ((((data[\"def_mean_dist\"]) + (data[\"def_min_dist\"]))\/2.0)))\/2.0)))\/2.0)) + (data[\"min_dist\"]))\/2.0)) \/ 2.0)) +\n                0.249902*np.tanh(((((data[\"def_mean_dist\"]) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((((np.tanh((((data[\"back_moving_down_field\"]) + ((((((((((-1.0*((data[\"S\"])))) \/ 2.0)) \/ 2.0)) \/ 2.0)) + ((((((data[\"back_oriented_down_field\"]) \/ 2.0)) + (((((data[\"back_oriented_down_field\"]) \/ 2.0)) \/ 2.0)))\/2.0)))))))) \/ 2.0)) * (((((np.tanh((data[\"back_moving_down_field\"]))) \/ 2.0)) * (((((data[\"back_moving_down_field\"]) \/ 2.0)) \/ 2.0)))))) +\n                0.250000*np.tanh(((((data[\"back_moving_down_field\"]) \/ 2.0)) * (((data[\"S\"]) \/ 2.0)))) +\n                0.249805*np.tanh(((data[\"def_max_dist\"]) \/ 2.0)))\n    \n    def GP_class_13(self,data):\n        return (-4.280120 +\n                0.250000*np.tanh((((((data[\"back_oriented_down_field\"]) + (data[\"def_mean_dist\"]))\/2.0)) * 2.0)) +\n                0.250000*np.tanh((((((data[\"Down\"]) + (((data[\"back_moving_down_field\"]) + (data[\"Down\"]))))) + (((((data[\"mean_dist\"]) + (((data[\"Down\"]) + (data[\"def_mean_dist\"]))))) + ((-1.0*((np.tanh(((((((((data[\"Down\"]) - (data[\"A\"]))) * 2.0)) + (((data[\"def_mean_dist\"]) + (data[\"Down\"]))))\/2.0))))))))))\/2.0)) +\n                0.250000*np.tanh(((((((((data[\"Dis\"]) + (((((data[\"Down\"]) - (data[\"DefendersInTheBox\"]))) + ((((data[\"Down\"]) + (data[\"Dis\"]))\/2.0)))))) - (((data[\"DefendersInTheBox\"]) - (((data[\"min_dist\"]) + (((((data[\"S\"]) + (((data[\"min_dist\"]) \/ 2.0)))) \/ 2.0)))))))) - (data[\"DefendersInTheBox\"]))) + (data[\"Down\"]))) +\n                0.250000*np.tanh(data[\"back_moving_down_field\"]) +\n                0.250000*np.tanh((((((data[\"min_dist\"]) + ((((data[\"def_mean_dist\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)) \/ 2.0)) +\n                0.246874*np.tanh(((((data[\"min_dist\"]) + ((((data[\"Distance\"]) + ((((data[\"Distance\"]) + (((np.tanh((data[\"Distance\"]))) \/ 2.0)))\/2.0)))\/2.0)))) - ((((((((data[\"Y\"]) + (data[\"A\"]))\/2.0)) * (data[\"back_oriented_down_field\"]))) + ((((data[\"YardLine\"]) + (((data[\"S\"]) * ((-1.0*((((data[\"min_dist\"]) \/ 2.0))))))))\/2.0)))))) +\n                0.249902*np.tanh((((np.tanh((data[\"mean_dist\"]))) + (data[\"Down\"]))\/2.0)) +\n                0.250000*np.tanh(np.tanh((((data[\"S\"]) * ((3.0)))))) +\n                0.250000*np.tanh(((((((data[\"A\"]) + ((((data[\"A\"]) + (data[\"A\"]))\/2.0)))\/2.0)) + (((np.tanh(((((data[\"A\"]) + ((((((data[\"def_mean_dist\"]) + (data[\"A\"]))\/2.0)) - (data[\"A\"]))))\/2.0)))) \/ 2.0)))\/2.0)) +\n                0.249805*np.tanh(((data[\"back_from_scrimmage\"]) * (((data[\"DefendersInTheBox\"]) - (((((((data[\"back_from_scrimmage\"]) + (data[\"def_mean_dist\"]))\/2.0)) + ((((((data[\"back_oriented_down_field\"]) + (data[\"def_max_dist\"]))\/2.0)) * (((data[\"DefendersInTheBox\"]) - (((data[\"Y\"]) \/ 2.0)))))))\/2.0)))))))\n    \n    def GP_class_14(self,data):\n        return (-4.056991 +\n                0.250000*np.tanh(((((data[\"def_std_dist\"]) + (((((data[\"Distance\"]) + (((((data[\"back_moving_down_field\"]) + (data[\"Dir\"]))) + (data[\"def_mean_dist\"]))))) \/ 2.0)))) \/ 2.0)) +\n                0.250000*np.tanh((((data[\"def_mean_dist\"]) + (data[\"def_mean_dist\"]))\/2.0)) +\n                0.250000*np.tanh((((data[\"Distance\"]) + (data[\"min_dist\"]))\/2.0)) +\n                0.250000*np.tanh(data[\"def_mean_dist\"]) +\n                0.250000*np.tanh(((((data[\"back_oriented_down_field\"]) + (np.tanh(((-1.0*(((((((data[\"X\"]) * 2.0)) + ((6.83017873764038086)))\/2.0))))))))) + ((((((((-1.0*((data[\"back_oriented_down_field\"])))) + (data[\"max_dist\"]))\/2.0)) + ((((((data[\"Down\"]) + (np.tanh((data[\"back_oriented_down_field\"]))))\/2.0)) * (data[\"back_oriented_down_field\"]))))\/2.0)))) +\n                0.246874*np.tanh((((2.0)) + ((((data[\"S\"]) + ((1.0)))\/2.0)))) +\n                0.249902*np.tanh(np.tanh((((((((((data[\"back_moving_down_field\"]) + (np.tanh((np.tanh((data[\"Down\"]))))))\/2.0)) + ((((((((np.tanh(((-1.0*(((((((data[\"back_moving_down_field\"]) - (data[\"def_std_dist\"]))) + (((data[\"DefendersInTheBox\"]) \/ 2.0)))\/2.0))))))) \/ 2.0)) \/ 2.0)) + (data[\"back_moving_down_field\"]))\/2.0)))\/2.0)) \/ 2.0)))) +\n                0.250000*np.tanh((((-1.0*((np.tanh((data[\"back_oriented_down_field\"])))))) + (data[\"back_moving_down_field\"]))) +\n                0.250000*np.tanh(((((data[\"Distance\"]) * (data[\"min_dist\"]))) + ((((((data[\"Down\"]) + (data[\"DefendersInTheBox\"]))) + (data[\"Distance\"]))\/2.0)))) +\n                0.249805*np.tanh(((data[\"Dis\"]) * (((((data[\"Down\"]) * ((((((data[\"Down\"]) * (data[\"Down\"]))) + (data[\"Dis\"]))\/2.0)))) + (((((((data[\"max_dist\"]) + (data[\"max_dist\"]))) + (np.tanh((np.tanh((data[\"max_dist\"]))))))) * (data[\"Down\"]))))))))\n    \n    def GP_class_15(self,data):\n        return (-4.525990 +\n                0.250000*np.tanh(((np.tanh((((data[\"std_dist\"]) + (data[\"std_dist\"]))))) + (((data[\"S\"]) + (((((data[\"S\"]) \/ 2.0)) * 2.0)))))) +\n                0.250000*np.tanh((((((((((data[\"def_std_dist\"]) + ((((data[\"def_mean_dist\"]) + (data[\"back_moving_down_field\"]))\/2.0)))) * 2.0)) + ((((data[\"back_moving_down_field\"]) + (data[\"YardLine\"]))\/2.0)))) + (((data[\"def_mean_dist\"]) + (data[\"S\"]))))\/2.0)) +\n                0.250000*np.tanh(((((data[\"Distance\"]) + ((0.0)))) + ((((((data[\"min_dist\"]) + (np.tanh((data[\"back_moving_down_field\"]))))\/2.0)) + (((((data[\"min_dist\"]) + ((((((((data[\"min_dist\"]) * 2.0)) * 2.0)) + (data[\"Dis\"]))\/2.0)))) - (data[\"back_oriented_down_field\"]))))))) +\n                0.250000*np.tanh((((((((np.tanh((((((((data[\"back_moving_down_field\"]) \/ 2.0)) + (data[\"def_std_dist\"]))) + (np.tanh(((((data[\"std_dist\"]) + ((((data[\"std_dist\"]) + (data[\"back_moving_down_field\"]))\/2.0)))\/2.0)))))))) + (((data[\"back_moving_down_field\"]) \/ 2.0)))\/2.0)) \/ 2.0)) \/ 2.0)) +\n                0.250000*np.tanh((((data[\"back_moving_down_field\"]) + ((((((np.tanh((data[\"YardLine\"]))) \/ 2.0)) + (((np.tanh((np.tanh(((((((((data[\"def_min_dist\"]) + ((((data[\"A\"]) + (data[\"Down\"]))\/2.0)))) + (data[\"def_min_dist\"]))\/2.0)) \/ 2.0)))))) + (((data[\"def_mean_dist\"]) \/ 2.0)))))\/2.0)))\/2.0)) +\n                0.246874*np.tanh(np.tanh((np.tanh((((((((data[\"def_min_dist\"]) * (data[\"back_moving_down_field\"]))) * 2.0)) * (np.tanh((data[\"def_std_dist\"]))))))))) +\n                0.249902*np.tanh(data[\"X\"]) +\n                0.250000*np.tanh(((((data[\"std_dist\"]) + (data[\"back_oriented_down_field\"]))) \/ 2.0)) +\n                0.250000*np.tanh((((data[\"Dis\"]) + (data[\"Down\"]))\/2.0)) +\n                0.249805*np.tanh((((((data[\"A\"]) \/ 2.0)) + ((((data[\"def_mean_dist\"]) + (data[\"min_dist\"]))\/2.0)))\/2.0)))\n    \n    def GP_class_16(self,data):\n        return (-4.576388 +\n                0.250000*np.tanh(np.tanh((((data[\"def_mean_dist\"]) + (data[\"def_mean_dist\"]))))) +\n                0.250000*np.tanh(((((((data[\"A\"]) + (data[\"Dis\"]))) \/ 2.0)) + ((((((((((data[\"Distance\"]) + (((data[\"A\"]) + (data[\"Dir\"]))))) + (data[\"Dis\"]))) + (data[\"min_dist\"]))) + (data[\"Dir\"]))\/2.0)))) +\n                0.250000*np.tanh((((np.tanh((((np.tanh((data[\"def_std_dist\"]))) \/ 2.0)))) + (((data[\"std_dist\"]) + (((data[\"S\"]) + ((((data[\"S\"]) + (((data[\"def_std_dist\"]) + (data[\"def_max_dist\"]))))\/2.0)))))))\/2.0)) +\n                0.250000*np.tanh((((((((np.tanh((data[\"S\"]))) * 2.0)) + (data[\"Dis\"]))) + (data[\"back_from_scrimmage\"]))\/2.0)) +\n                0.250000*np.tanh(np.tanh((((((((data[\"max_dist\"]) + ((((((data[\"Distance\"]) + (((data[\"Dir\"]) + (data[\"def_mean_dist\"]))))\/2.0)) \/ 2.0)))\/2.0)) + (((((data[\"Distance\"]) + ((((data[\"Dir\"]) + ((((data[\"std_dist\"]) + (data[\"Dir\"]))\/2.0)))\/2.0)))) \/ 2.0)))\/2.0)))) +\n                0.246874*np.tanh(((((data[\"back_oriented_down_field\"]) \/ 2.0)) \/ 2.0)) +\n                0.249902*np.tanh(((((((((((data[\"std_dist\"]) + (((np.tanh(((((data[\"back_from_scrimmage\"]) + (data[\"back_from_scrimmage\"]))\/2.0)))) + ((-1.0*((data[\"std_dist\"])))))))\/2.0)) + (data[\"mean_dist\"]))) + (data[\"Dir\"]))\/2.0)) * (((((((data[\"max_dist\"]) * ((-1.0*((((((data[\"Quarter\"]) * (np.tanh((data[\"Dir\"]))))) \/ 2.0))))))) \/ 2.0)) \/ 2.0)))) +\n                0.250000*np.tanh(data[\"Distance\"]) +\n                0.250000*np.tanh(((((((((data[\"min_dist\"]) + (data[\"DefendersInTheBox\"]))\/2.0)) - (data[\"max_dist\"]))) + (data[\"back_from_scrimmage\"]))\/2.0)) +\n                0.249805*np.tanh((((((data[\"def_std_dist\"]) * 2.0)) + (((((-1.0*((((data[\"mean_dist\"]) \/ 2.0))))) + (data[\"back_oriented_down_field\"]))\/2.0)))\/2.0)))\n    \n    def GP_class_17(self,data):\n        return (-4.786692 +\n                0.250000*np.tanh((((data[\"min_dist\"]) + ((((data[\"max_dist\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)) +\n                0.250000*np.tanh(data[\"Y\"]) +\n                0.250000*np.tanh(((data[\"def_max_dist\"]) + ((((((((data[\"X\"]) + (data[\"Distance\"]))) + (data[\"S\"]))\/2.0)) + (data[\"S\"]))))) +\n                0.250000*np.tanh(data[\"back_from_scrimmage\"]) +\n                0.250000*np.tanh((((data[\"def_std_dist\"]) + (((((((((((data[\"back_from_scrimmage\"]) + (data[\"Dir\"]))) + (data[\"def_mean_dist\"]))) \/ 2.0)) * 2.0)) + ((((((0.0)) + ((((((data[\"def_std_dist\"]) + (data[\"def_mean_dist\"]))\/2.0)) + (data[\"Dir\"]))))) + (data[\"def_std_dist\"]))))))\/2.0)) +\n                0.246874*np.tanh(data[\"YardLine\"]) +\n                0.249902*np.tanh((((((data[\"Distance\"]) + (data[\"Distance\"]))) + ((((data[\"Down\"]) + ((((data[\"def_max_dist\"]) + (data[\"Distance\"]))\/2.0)))\/2.0)))\/2.0)) +\n                0.250000*np.tanh((((data[\"back_moving_down_field\"]) + (((((((((data[\"back_moving_down_field\"]) + (data[\"min_dist\"]))\/2.0)) + (data[\"Dir\"]))\/2.0)) - (data[\"back_moving_down_field\"]))))\/2.0)) +\n                0.250000*np.tanh((((data[\"A\"]) + (((data[\"Distance\"]) + ((((data[\"min_dist\"]) + ((((-1.0*((data[\"back_from_scrimmage\"])))) \/ 2.0)))\/2.0)))))\/2.0)) +\n                0.249805*np.tanh((((np.tanh(((((data[\"def_mean_dist\"]) + (((data[\"Dis\"]) * (np.tanh(((((data[\"back_from_scrimmage\"]) + (data[\"std_dist\"]))\/2.0)))))))\/2.0)))) + (((data[\"Dis\"]) * 2.0)))\/2.0)))\n    \n    def GP_class_18(self,data):\n        return (-4.808144 +\n                0.250000*np.tanh(((data[\"def_std_dist\"]) + (((data[\"Distance\"]) + (data[\"A\"]))))) +\n                0.250000*np.tanh(((((data[\"def_mean_dist\"]) * 2.0)) + (((data[\"Dir\"]) + ((((((data[\"Dis\"]) + (((np.tanh((data[\"Dis\"]))) \/ 2.0)))\/2.0)) * 2.0)))))) +\n                0.250000*np.tanh(((np.tanh((data[\"Dis\"]))) + (((np.tanh((np.tanh(((((-1.0*(((((data[\"def_std_dist\"]) + (((((((((data[\"S\"]) * (data[\"back_moving_down_field\"]))) + (data[\"Dis\"]))) * 2.0)) \/ 2.0)))\/2.0))))) \/ 2.0)))))) \/ 2.0)))) +\n                0.250000*np.tanh((((((data[\"def_mean_dist\"]) + (data[\"Dir\"]))) + (data[\"def_std_dist\"]))\/2.0)) +\n                0.250000*np.tanh((((np.tanh(((-1.0*((((((((data[\"def_min_dist\"]) \/ 2.0)) \/ 2.0)) * (((np.tanh((((data[\"back_moving_down_field\"]) \/ 2.0)))) * 2.0))))))))) + (((data[\"Y\"]) \/ 2.0)))\/2.0)) +\n                0.246874*np.tanh(((((data[\"Orientation\"]) * (((np.tanh((np.tanh((data[\"Dir\"]))))) \/ 2.0)))) \/ 2.0)) +\n                0.249902*np.tanh(data[\"Orientation\"]) +\n                0.250000*np.tanh(((((data[\"X\"]) \/ 2.0)) * ((((data[\"back_moving_down_field\"]) + (np.tanh((data[\"Dis\"]))))\/2.0)))) +\n                0.250000*np.tanh((((0.0)) * (((data[\"back_from_scrimmage\"]) * ((((0.0)) * (((((((((data[\"back_moving_down_field\"]) * (data[\"Quarter\"]))) * (np.tanh((data[\"mean_dist\"]))))) * (((np.tanh((data[\"mean_dist\"]))) \/ 2.0)))) \/ 2.0)))))))) +\n                0.249805*np.tanh(data[\"mean_dist\"]))\n    \n    def GP_class_19(self,data):\n        return (-5.053334 +\n                0.250000*np.tanh(((((data[\"def_mean_dist\"]) + (((data[\"max_dist\"]) - (((((data[\"min_dist\"]) + (((data[\"Dir\"]) \/ 2.0)))) + ((((((((data[\"max_dist\"]) + (data[\"max_dist\"]))) + ((((data[\"min_dist\"]) + (data[\"back_from_scrimmage\"]))\/2.0)))\/2.0)) * 2.0)))))))) + (data[\"max_dist\"]))) +\n                0.250000*np.tanh(((data[\"def_mean_dist\"]) + (((((((data[\"max_dist\"]) * 2.0)) + (data[\"max_dist\"]))) + (data[\"Orientation\"]))))) +\n                0.250000*np.tanh(((((data[\"Dir\"]) + (data[\"max_dist\"]))) + (((data[\"def_max_dist\"]) + (data[\"max_dist\"]))))) +\n                0.250000*np.tanh(data[\"back_moving_down_field\"]) +\n                0.250000*np.tanh(np.tanh(((((((data[\"Orientation\"]) + (data[\"back_moving_down_field\"]))\/2.0)) + (data[\"Distance\"]))))) +\n                0.246874*np.tanh(((data[\"min_dist\"]) + (((data[\"min_dist\"]) + (((data[\"max_dist\"]) + (((data[\"back_moving_down_field\"]) + ((((data[\"Quarter\"]) + (data[\"min_dist\"]))\/2.0)))))))))) +\n                0.249902*np.tanh(((((np.tanh((data[\"max_dist\"]))) \/ 2.0)) + ((((data[\"Orientation\"]) + (data[\"def_mean_dist\"]))\/2.0)))) +\n                0.250000*np.tanh((((((data[\"YardLine\"]) + ((((((((data[\"min_dist\"]) * ((((data[\"min_dist\"]) + (data[\"YardLine\"]))\/2.0)))) * 2.0)) + (((data[\"max_dist\"]) * (data[\"max_dist\"]))))\/2.0)))\/2.0)) \/ 2.0)) +\n                0.250000*np.tanh(((data[\"min_dist\"]) \/ 2.0)) +\n                0.249805*np.tanh(((data[\"A\"]) + (np.tanh((np.tanh((((((data[\"back_moving_down_field\"]) \/ 2.0)) \/ 2.0)))))))))\n    \n","fb5cd377":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom kaggle.competitions import nflrush\nenv = nflrush.make_env()\niter_test = env.iter_test()\ngp = GP()\nfor (test_df, sample_prediction_df) in iter_test:\n    basetable = create_features(test_df, deploy=True)\n    basetable.drop(['GameId','PlayId'], axis=1, inplace=True)\n    scaled_basetable = scaler.transform(basetable)\n    \n    y_pred_nn = model.predict(scaled_basetable)\n\n#     y_pred_gp = np.zeros((test_df.shape[0],199))\n#     ans = gp.GrabPredictions(pd.DataFrame(data=scaled_basetable,columns=basetable.columns))\n#     y_pred_gp[:,96:96+20] = ans\n    \n    y_pred = y_pred_nn#(.6*y_pred_nn+.4*y_pred_gp)\n    y_pred = np.clip(np.cumsum(y_pred, axis=1), 0, 1).tolist()[0]\n    \n    preds_df = pd.DataFrame(data=[y_pred], columns=sample_prediction_df.columns)\n    env.predict(preds_df)\n    \nenv.write_submission_file()","1864be90":"Below class Metric based entirely on: https:\/\/www.kaggle.com\/kingychiu\/keras-nn-starter-crps-early-stopping\n<br><\/br>\nBelow early stopping entirely based on: https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2020\/discussion\/112868#latest-656533","0fd0b1a7":"# Time for the actual submission","0e38eadc":"## Functions for anchoring offense moving left from {0,0}","198e2e16":"# Let's build NN","94b63774":"# Let's split our data into train\/val"}}