{"cell_type":{"6fb4384f":"code","894139e1":"code","8cc10e4f":"code","87ba5d4b":"code","c3093016":"code","3af2d465":"code","ab002667":"code","6ae12127":"code","db4ecf67":"code","8fd9ebbf":"code","ca639c08":"code","7d34e0ae":"code","337fdae7":"code","5df43373":"code","40c07540":"code","6a232019":"markdown","c2b6eb6b":"markdown"},"source":{"6fb4384f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","894139e1":"import os\npath = os.getcwd()\nprint(path)\ndata_iris_folder_content = os.listdir(path)","8cc10e4f":"import sqlite3\nconn = sqlite3.connect('..\/input\/iris\/database.sqlite')\n","87ba5d4b":"cursor = conn.cursor()","c3093016":"type(cursor)","3af2d465":"for row in cursor.execute(\"SELECT name FROM sqlite_master\"):\n    print(row)","ab002667":"cursor.execute(\"SELECT name FROM sqlite_master\").fetchall()","6ae12127":"sample_data = cursor.execute(\"SELECT * FROM Iris LIMIT 20\").fetchall()","db4ecf67":"print(type(sample_data))\nsample_data","8fd9ebbf":"import pandas as pd","ca639c08":"iris_data = pd.read_sql_query(\"SELECT * FROM Iris\", conn)","7d34e0ae":"iris_data.head()","337fdae7":"iris_data.dtypes","5df43373":"iris_setosa_data = pd.read_sql_query(\"SELECT * FROM Iris WHERE Species == 'Iris-setosa'\", conn)","40c07540":"iris_setosa_data\nprint(iris_setosa_data.shape)\nprint(iris_data.shape)\n","6a232019":"# Access the database through sqlite3 package","c2b6eb6b":"# Import data from a database to pandas"}}