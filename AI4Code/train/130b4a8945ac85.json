{"cell_type":{"c58c7207":"code","03e3c90b":"code","eadfd242":"code","2f7e9ee3":"code","7f46de2e":"code","f8b31880":"code","ceb3b3eb":"code","71b46a66":"code","6b6ace77":"code","d31074bc":"markdown","f584fdfe":"markdown","58aabe47":"markdown","7a375bc1":"markdown"},"source":{"c58c7207":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","03e3c90b":"import plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot","eadfd242":"def load_data():\n    data = pd.read_csv(DATA_URL)\n    data = data.drop(data.index[0])\n    data['Start Date'] = pd.to_datetime(data['Start Date'])\n    data['New Displacements'] = data['New Displacements'].fillna(0).astype(int)\n    data['Year'] = data['Year'].fillna(0).astype(int)\n    return data","2f7e9ee3":"DATA_URL = \"..\/input\/idmc-internally-displaced-persons-data\/disaster_data.csv\"\ndata = load_data()","7f46de2e":"# Only filter for South East Asian countries\nSEA_countries = ['Brunei', 'Cambodia', 'East Timor', 'Indonesia', 'Laos', 'Malaysia', 'Myanmar', 'Philippines', 'Indonesia', 'Singapore', 'Thailand', 'Vietnam']\nSEA_data = data[data['Name'].isin(SEA_countries)]","f8b31880":"# 1.A) Which Hazard Type is the responsible for the largest number of displacements?\n# 1.B) Which is the most common Hazard Type based on the total count of occurrences from 2008-2019? \ncommon_hazard_type = pd.DataFrame(SEA_data.groupby('Hazard Type')['New Displacements'].sum()).sort_values('New Displacements', ascending=False).reset_index().rename(columns={'New Displacements': 'Interally Displaced Persons'})\ntop_hazard_type = pd.DataFrame(SEA_data.groupby('Hazard Type')['New Displacements'].count()).sort_values('New Displacements', ascending=False).reset_index().rename(columns={'New Displacements': 'Number of disasters'})\nscatter_data = pd.merge(common_hazard_type, top_hazard_type, on=['Hazard Type'], how='left')\n\nfig = px.scatter(\n  scatter_data, \n  title=\"Number of Internally Displaced Persons vs Number of Disaster Occurrences\",\n  y='Number of disasters',\n  x='Interally Displaced Persons',\n  log_x=True,\n  height=600,\n  text='Hazard Type'\n)\n\nfig.update_traces(textposition='top center', marker=dict(size=10))\n\nfig.update_layout(font_family=\"Courier New\", template=\"plotly_dark\")\n\niplot(fig)","ceb3b3eb":"# 2) Which country is the most affected by displacements based on A) total IDPs\n\nSEA_data_2 = SEA_data[\n  SEA_data['Name'].isin(['Philippines', 'Indonesia', 'Myanmar', 'Thailand', 'Vietnam'])\n]\n\nupdatemenus = list([\n    dict(active=1,\n         buttons=list([\n            dict(label='Log Scale',\n                 method='update',\n                 args=[{'visible': [True, True]},\n                       {'yaxis': {'type': 'log'}}]),\n            dict(label='Linear Scale',\n                 method='update',\n                 args=[{'visible': [True, False]},\n                       {'yaxis': {'type': 'linear'}}])\n            ]),\n        )\n    ])\n\n\ntop_country_idps = pd.DataFrame(SEA_data_2.groupby(['Year', 'Name'])['New Displacements'].sum()).sort_values('New Displacements', ascending=True).reset_index().sort_values(['Year', 'Name'], ascending=True)\n\ntrace1 = px.line(\n  top_country_idps, \n  y='New Displacements',\n  x='Year',\n  color='Name',\n  width=1000,\n  height=600\n)\n\ntrace1.update_traces(mode='lines+markers', connectgaps=True)\n\nlayout = dict(updatemenus=updatemenus, \n              font_family=\"Courier New\", \n              template=\"plotly_dark\",\n              title=\"Total Internally Displaced Persons from 2008-2019\", \n              height=600,\n              legend=dict(\n                  orientation=\"h\", y=1.03, yanchor=\"bottom\", x=0.5, xanchor=\"center\", borderwidth=1\n              )\n             )\nfig = go.Figure(data=trace1.data, layout=layout)\niplot(fig)","71b46a66":"# 2) Which country is the most affected by displacements based on B) total hazard occurrences\ntop_country_idps = pd.DataFrame(SEA_data_2.groupby(['Year', 'Name'])['New Displacements'].count()).sort_values('New Displacements', ascending=True).reset_index().sort_values(['Year', 'Name'], ascending=True)\n\ntrace2 = px.line(\n  top_country_idps, \n  y='New Displacements',\n  x='Year',\n  color='Name',\n)\n\ntrace2.update_traces(mode='lines+markers', connectgaps=True)\n\nlayout = dict(updatemenus=updatemenus, \n              font_family=\"Courier New\", \n              template=\"plotly_dark\",\n              title=\"Total Disaster Occurrences from 2008-2019\", \n              height=600,\n              legend=dict(\n                  orientation=\"h\", y=1.03, yanchor=\"bottom\", x=0.5, xanchor=\"center\", borderwidth=1\n              ))\nfig = go.Figure(data=trace2.data, layout=layout)\niplot(fig)","6b6ace77":"# 2C) Bubble chart showing the total number of displacements vs total disaster occurrence per country from 2008-2019\n\nSEA_data_1 = SEA_data[\n  SEA_data['Hazard Type'].isin(['Flood', 'Storm']) &\n  SEA_data['Year'].isin(range(2008, 2020)) &\n  SEA_data['Name'].isin(['Philippines', 'Indonesia', 'Myanmar', 'Thailand', 'Vietnam'])\n]\n\ntype_sum_by_year = pd.DataFrame(SEA_data_1.groupby(['Year', 'Hazard Type', 'Name'])['New Displacements'].sum()).reset_index().rename(columns={'New Displacements': 'Interally Displaced Persons'})\ntype_count_by_year = pd.DataFrame(SEA_data_1.groupby(['Year', 'Hazard Type', 'Name'])['New Displacements'].count()).reset_index().rename(columns={'New Displacements': 'Number of disasters'})\nbar_data = pd.merge(type_sum_by_year, type_count_by_year, on=['Year', 'Hazard Type', 'Name'], how='left').sort_values(['Year','Name'], ascending=True)\n\nsizeref = 2.*max(bar_data['Number of disasters'])\/(100**2)\n\nfig = px.scatter(\n  bar_data, \n  title=\"Number of Interally Displaced Persons by Floods and Storms from 2008 - 2019\",\n  size='Number of disasters',\n  x='Year',\n  y='Interally Displaced Persons',\n  log_y=True,\n  color='Name',\n  facet_col='Hazard Type'\n)\n\nfig.update_traces(mode='markers', marker=dict(sizeref=sizeref, line_width=1))\n\nfig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1], font=dict(size=14)))\n\nfig.update_layout( # customize font and legend orientation & position\n  font_family=\"Courier New\",\n  template=\"plotly_dark\",\n  grid=dict(xgap= 0.5),\n  margin=dict(pad=5),\n  title=dict(font=dict(size=18), y=0.98),\n  height=900,\n  legend=dict(\n      orientation=\"h\", y=1.03, yanchor=\"bottom\", x=0.5, xanchor=\"center\", borderwidth=1\n  )\n)\n\niplot(fig)","d31074bc":"# Analysis of Internally Displaced Persons associated with disasters\n\nInternally displaced persons are defined according to the 1998 Guiding Principles (http:\/\/www.internal-displacement.org\/publications\/1998\/ocha-guiding-principles-on-internal-displacement) as people or groups of people who have been forced or obliged to flee or to leave their homes or places of habitual residence, in particular as a result of armed conflict, or to avoid the effects of armed conflict, situations of generalized violence, violations of human rights, or natural or human-made disasters and who have not crossed an international border.\n\n\"New Displacement\" refers to the number of new cases or incidents of displacement recorded, rather than the number of people displaced. This is done because people may have been displaced more than once.\n\nContains data from IDMC's Global Internal Displacement Database.","f584fdfe":"## Total Displacements vs Total Disaster Occurrences by Storms and Floods from 2008-2019\n\nIndonesia most affected by floods, with an alarming rise in the number of floods occurring since 2013. Philippines consistently hit by a sizeable number of storms each year.","58aabe47":"## Hazard Types\nStorm and Floods most frequently appear to wreak havoc resulting in extreme numbers of newly displaced people, in comparison to other hazard types","7a375bc1":"## Countries Affected\n\nIndonesia most frequently hit by disasters, while Philippines has the most number of newly displaced people associated with disasters.\n"}}