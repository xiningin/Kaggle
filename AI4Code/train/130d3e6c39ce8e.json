{"cell_type":{"f57693a4":"code","2f6adc9a":"code","07347a16":"code","ff7711f5":"code","aba0c55a":"code","af62b76d":"code","421daea7":"code","10d48e77":"code","63d649ca":"code","2caaa00f":"code","e7b4e590":"code","2f9deade":"code","db9ec11b":"code","1229c166":"code","bca566f8":"code","6d6fc6e1":"code","8bac9e2b":"code","2917107c":"code","2e0ae7ee":"code","12f2a4fe":"code","bb6573be":"code","44a67922":"markdown","31382065":"markdown","bd2275a0":"markdown","65b9ee29":"markdown","7a3ecfbb":"markdown","42a0502a":"markdown","e77e3a57":"markdown","1945bb08":"markdown","8ba8cb40":"markdown","494fad27":"markdown","68fca942":"markdown","4ed8ebb5":"markdown","a89feb42":"markdown","920cbb41":"markdown","ebd01437":"markdown","a39969aa":"markdown","bf88f1ae":"markdown","0f7748e8":"markdown","e0437a2f":"markdown","7374c260":"markdown","30fe486d":"markdown","d140b2a3":"markdown","a787ea3c":"markdown","f3f0487f":"markdown","25de8f83":"markdown","6172ecce":"markdown"},"source":{"f57693a4":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf","2f6adc9a":"tf.__version__","07347a16":"dataset = pd.read_csv('..\/input\/churn-predictions-personal\/Churn_Predictions.csv')\nX = dataset.iloc[:, 3:-1].values #we select all th features except RowNumber, Customerid, Surname, Exited\ny = dataset.iloc[:, -1].values #we select the target feature Exited for the y","ff7711f5":"dataset.head()","aba0c55a":"print(X)","af62b76d":"print(y)","421daea7":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:, 2] = le.fit_transform(X[:, 2])","10d48e77":"print(X)","63d649ca":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","2caaa00f":"print(X)","e7b4e590":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","2f9deade":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","db9ec11b":"ann = tf.keras.models.Sequential()","1229c166":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","bca566f8":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","6d6fc6e1":"ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","8bac9e2b":"ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","2917107c":"ann.fit(X_train, y_train, batch_size = 32, epochs = 100)","2e0ae7ee":"print(ann.predict(sc.transform([[1, 0, 0, 600, 1, 40, 3, 60000, 2, 1, 1, 50000]])) > 0.5)","12f2a4fe":"y_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","bb6573be":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","44a67922":"## Part 3 - Training the ANN","31382065":"# Label Encoding the \"Gender\" column","bd2275a0":"### Feature Scaling\n* Notice: This is a very important and fundamental step for implementing the Deep Learning ","65b9ee29":"* One Hot Encoding the \"Geography\" column","7a3ecfbb":"Great, we encoded the Geography Column","42a0502a":"### Adding the second hidden layer","e77e3a57":"### Adding the output layer","1945bb08":"# Welcome to my Tutorial for Artificial Neural Network\n# Artificial Neural Network","8ba8cb40":"### Adding the input layer and the first hidden layer","494fad27":"Therefore, our ANN model predicts that this customer stays in the bank!\n\n**Important note 1:** Notice that the values of the features were all input in a double pair of square brackets. That's because the \"predict\" method always expects a 2D array as the format of its inputs. And putting our values into a double pair of square brackets makes the input exactly a 2D array.\n\n**Important note 2:** Notice also that the \"France\" country was not input as a string in the last column but as \"1, 0, 0\" in the first three columns. That's because of course the predict method expects the one-hot-encoded values of the state, and as we see in the first row of the matrix of features X, \"France\" was encoded as \"1, 0, 0\". And be careful to include these values in the first three columns, because the dummy variables are always created in the first columns.","68fca942":"### Predicting the result of a single observation","4ed8ebb5":"# First, we are going to import the libraries\n","a89feb42":"Great, we encoded the Gender feature, we have 0 code for Female category","920cbb41":"### Predicting the Test set results","ebd01437":"## Part 2 - Building the ANN","a39969aa":"## Part 4 - Making the predictions and evaluating the model","bf88f1ae":"## Part 1 - Data Preprocessing","0f7748e8":"Use our ANN model to predict if the customer with the following informations will leave the bank: \n\nGeography: France\n\nCredit Score: 600\n\nGender: Male\n\nAge: 40 years old\n\nTenure: 3 years\n\nBalance: \\$ 60000\n\nNumber of Products: 2\n\nDoes this customer have a credit card? Yes\n\nIs this customer an Active Member: Yes\n\nEstimated Salary: \\$ 50000\n\nSo, should we say goodbye to that customer?","e0437a2f":"### Compiling the ANN","7374c260":"### Making the Confusion Matrix","30fe486d":"### Encoding categorical data","d140b2a3":"Great! we have tensorflow 2 and this works much better than tensorflow 1 ","a787ea3c":"### Initializing the ANN","f3f0487f":"# Getting more underestanding about our dataset:\n* This is a dataset for a bank which collects information about the customers\n* RowNumber: is an irrelevent feature that we are going to get rid of it in the future \n* Customerid: is the identification key of each customer\n* Surname: is the surname of each customer\n* CreditScore: is the credit score of each customer\n* Geography: means the conutry which each customer lives in\n* Gender: is the gender of each customer\n* Age: is the age of each customer\n* Tenure:means the number of the year(s) which customer in the bank\n* Balance: means the amount of money that each customer has in their account\n* NumOfProducts: the number of the product(s) which customer uses like Credict card, Master Card Etc,\n* HasCrCard: means if the customer has the credit card, 1 means Yes and 0 means No\n* isActiveMemebr: means if the customer is active or not which 1 means is a active customer\n* EstimatedSalary: means the estimated salary of each customer\n# Target\n* Exited: means if the customer exists the bank or not, 1 means the customer left the bank ","25de8f83":"### Splitting the dataset into the Training set and Test set","6172ecce":"# Let's import the dataset into the kernel"}}