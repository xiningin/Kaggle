{"cell_type":{"9c99b4ac":"code","04ec3d13":"code","fd37850e":"code","ce025893":"code","1d14270a":"code","dbcaf6b0":"code","af773293":"code","d6f82137":"code","8cce3c64":"code","3fb93e22":"code","a35686e1":"code","b95ef188":"code","a050b153":"code","244f37c5":"code","ad0e54e2":"code","55c323db":"markdown","82722935":"markdown","d5b4c664":"markdown","47655f0c":"markdown","5ed188de":"markdown","c973efd5":"markdown"},"source":{"9c99b4ac":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.metrics import classification_report\nfrom sklearn import tree","04ec3d13":"bc = pd.read_csv(\"..\/input\/breast-cancer-coimbra-data-set\/dataR2.csv\")","fd37850e":"bc.info()","ce025893":"bc.describe()","1d14270a":"corr_matrix = bc.corr()\n\nsns.clustermap(corr_matrix, annot = True, fmt = \".2f\")\nplt.title(\"Nilai Korelasi terhdap Fitur\")\nplt.show()","dbcaf6b0":"sns.pairplot(bc, hue = \"Classification\");","af773293":"g = sns.FacetGrid(bc, hue='Classification',height=9)  # Defining Axis\ng = g.map(plt.scatter, \"HOMA\", \"Insulin\", marker='X').add_legend() # Plotting\nplt.show()","d6f82137":"x = bc.drop(['Classification'], axis=1)\ny = bc['Classification']","8cce3c64":"from sklearn.model_selection import train_test_split\n# membagi dataset menjadi training dan testing \nx_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.5, test_size=0.5)","3fb93e22":" from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression(random_state = 0)\nlog.fit(x_train, y_train)","a35686e1":"akurasi_lr = log.score(x_train, y_train)\nprint('Akurasi Model Logistic Regression adalah :  {}%'.format(akurasi_lr*100))\nprint(\"\\n Classification Report Model Logistic Regression \\n\")\nprint(classification_report(y_test,log.predict(x_test)) )","b95ef188":"from sklearn.svm import SVC\nsvc_linear = SVC(kernel = 'linear', random_state = 0)\nsvc_linear.fit(x_train, y_train)","a050b153":"akurasi_svc = svc_linear.score(x_train, y_train)\nprint('Akurasi Model Support Vector Machine Classifier - Algoritma Linear adalah : {}%'.format(akurasi_svc*100))\nprint(\"\\n Classification Report Model Support Vector Machine Classifier - Algoritma Linear  \\n\")\nprint(classification_report(y_test,svc_linear.predict(x_test)) )","244f37c5":"def models(X_train,Y_train):\n    #KNN Neighbors\n    from sklearn.neighbors import KNeighborsClassifier\n    knn = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\n    knn.fit(x_train, y_train)\n\n    #Naive Bayes\n    from sklearn.naive_bayes import GaussianNB\n    gauss = GaussianNB()\n    gauss.fit(x_train, y_train)\n\n    #Desicion Tree\n    from sklearn.tree import DecisionTreeClassifier\n    tree = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\n    tree.fit(x_train, y_train)\n\n    #Random Forest\n    from sklearn.ensemble import RandomForestClassifier\n    forest = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 10)\n    forest.fit(x_train, y_train)\n\n    print('Hasil Akurasi')\n    akurasi_knn = knn.score(x_train, y_train)\n    akurasi_gauss = gauss.score(x_train, y_train)\n    akurasi_tree = tree.score(x_train, y_train)\n    akurasi_forest = forest.score(x_train, y_train)\n    print('[1] Akurasi Training K Nearest Neighbor: {}%'.format(akurasi_knn*100))\n    print('[2] Akurasi Training Gaussian Naive Bayes: {}%'.format(akurasi_gauss*100))\n    print('[3] Akurasi Training Decision Tree Classifier: {}%'.format(akurasi_tree*100))\n    print('[4] Akurasi Training Random Forest Classifier: {}%'.format(akurasi_forest*100))\n    \n    return log, knn, gauss, tree, forest\nmodel = models(x_train,y_train)","ad0e54e2":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\n\nfor i in range(len(model)):\n  print('Model ',i)\n  #Check precision, recall, f1-score\n  print( classification_report(y_test, model[i].predict(x_test)) )\n  #Another way to get the models accuracy on the test data\n  print( accuracy_score(y_test, model[i].predict(x_test)))\n  print()#Print a new line","55c323db":"**Tugas Data Mining**\n\nUniversitas Udayana, Bali, Indonesia\n\nNyoman Bandem Mahatma Wicaksana - 1805551120\n\nGus Rai Surya Laksana - 1805551120\n\nI Made Dwi Krisnawan - 1805551126","82722935":"# Machine Learning - Support Vector Machine Classifier (Linear Algorithm)","d5b4c664":"# KNN, Naive Bayes, Desicion Tree & Random Forest","47655f0c":"# Visualisasi Data","5ed188de":"# Pembagian Data Test dan Train","c973efd5":"# Machine Learning - Logistic Regression"}}