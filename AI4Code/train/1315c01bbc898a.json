{"cell_type":{"fe8d04eb":"code","d1477665":"code","6f9cbf79":"code","b96ccffc":"code","c8b9c7e4":"code","3e36af9a":"code","0bae4f08":"code","934db2a9":"code","dec910a6":"code","8b3fd97a":"code","78494734":"code","98af5768":"markdown","0145f59b":"markdown","e530c9f2":"markdown","66cf5bfd":"markdown","b1d969a7":"markdown","d5e7d0c7":"markdown","c6ed96d0":"markdown","c186960c":"markdown"},"source":{"fe8d04eb":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n!pip install openpyxl\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d1477665":"athletes = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx', engine='openpyxl')\nathletes['Name'] = athletes['Name'].str.capitalize()\nathletes.head()","6f9cbf79":"athletes_discipline = athletes.groupby(['Discipline','NOC']).count()\nathletes_discipline.reset_index(inplace=True)\nfig = px.treemap(athletes_discipline, path=[px.Constant(\"all\"),'Discipline', 'NOC'], values='Name')\nfig.show()","b96ccffc":"sport = 'Diving'\nfig = px.treemap(athletes_discipline[athletes_discipline['Discipline'] == sport], path=[px.Constant(\"all\"),'Discipline', 'NOC'], values='Name')\nfig.show()","c8b9c7e4":"athletes_country = athletes.groupby(['NOC', 'Discipline']).count()\nathletes_country.reset_index(inplace=True)\nfig = px.treemap(athletes_country, path=[px.Constant(\"all\"), 'NOC', 'Discipline'], values='Name')\nfig.show()","3e36af9a":"country = 'Germany'\nfig = px.treemap(athletes_country[athletes_country['NOC'] == country], path=[px.Constant(\"all\"), 'NOC', 'Discipline'], values='Name')\nfig.show()","0bae4f08":"country = athletes_country.groupby('NOC').sum().reset_index()\ncountry.head()","934db2a9":"medals = pd.read_excel( '\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx', engine='openpyxl')\nmedals.head()","dec910a6":"country_medals = country.merge(medals[['Team\/NOC', 'Total', 'Gold', 'Silver', 'Bronze']],how='right', left_on='NOC', right_on='Team\/NOC')\ncountry_medals = country_medals[['NOC', 'Name', 'Total', 'Gold', 'Silver', 'Bronze']]\ncountry_medals.rename(columns={\"Name\": \"# Athletes\", \"Total\": \"Total Medals\"}, inplace=True)\n\ncountry_medals['Medal per athlete'] = country_medals['# Athletes'] \/ country_medals['Total Medals']\ncountry_medals['Gold Medal per athlete'] = country_medals['# Athletes'] \/ country_medals['Gold']\ncountry_medals['Silver Medal per athlete'] = country_medals['# Athletes'] \/ country_medals['Silver']\ncountry_medals['Bronze Medal per athlete'] = country_medals['# Athletes'] \/ country_medals['Bronze']\n\ncountry_medals = country_medals.round(3)","8b3fd97a":"fig = go.Figure(data=[\n    go.Bar(name='Total', x=country_medals['NOC'], y=country_medals['Medal per athlete'] ),\n    go.Bar(name='Gold', x=country_medals['NOC'], y=country_medals['Gold Medal per athlete'] , marker_color='#FEE101'),\n    go.Bar(name='Silver', x=country_medals['NOC'], y=country_medals['Silver Medal per athlete'] , marker_color='#A7A7AD'),\n    go.Bar(name='Bronze', x=country_medals['NOC'], y=country_medals['Bronze Medal per athlete'] , marker_color='#BC9282')\n])\n\nfig.update_layout(\n    barmode = 'group',\n    xaxis = dict(rangeslider=dict(visible=True)),\n    height=700\n)\n\nfig.show()","78494734":"fig = go.Figure(data=[\n    go.Bar(name='Bronze', x=country_medals['NOC'], y=country_medals['Bronze'], marker_color= '#BC9282'),\n    go.Bar(name='Silver', x=country_medals['NOC'], y=country_medals['Silver'], marker_color = '#A7A7AD'),\n    go.Bar(name='Gold', x=country_medals['NOC'], y=country_medals['Gold'], marker_color='#FEE101'),\n])\n\nfig.update_layout(\n    barmode = 'stack',\n    xaxis = dict(rangeslider=dict(visible=True)),\n    height=700\n)\n\nfig.show()","98af5768":"## Import athletes data","0145f59b":"## Medals Country Wise","e530c9f2":"## Discipline wise athletes to Olympics","66cf5bfd":"## Individual Discipline Athletes","b1d969a7":"## Import Medal Data","d5e7d0c7":"## Medals per Number of Athletes","c6ed96d0":"## Country wise Atheletes to Olympics","c186960c":"## Individual Country Athletes"}}