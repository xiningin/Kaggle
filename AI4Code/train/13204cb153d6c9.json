{"cell_type":{"4704159d":"code","34cac3b8":"code","221c4aaa":"code","93c90450":"code","de46e7da":"code","4591e35a":"code","21a5df95":"code","18c2e5a5":"code","6fefe733":"code","e666f957":"code","e6019653":"code","f4288a9e":"code","8f80f9a4":"code","57e49f26":"code","b9e099e4":"markdown","c678466a":"markdown","9da20508":"markdown","7e8dd155":"markdown","d170d5e7":"markdown","32d8a79d":"markdown","c3949b53":"markdown","04f1cf4b":"markdown"},"source":{"4704159d":"import numpy as np\nimport pandas as pd \nimport json\nimport plotly.express as px\nfrom statsmodels.tsa.seasonal import seasonal_decompose","34cac3b8":"df = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/train.csv\")\ndfAgg = df[[\"country\", \"num_sold\"]].groupby([\"country\"]).sum().reset_index()\n\nisoAlpha3=[\"FIN\", \"NOR\", \"SWE\"]\nfor i in range(3):\n    dfAgg.iloc[i,0] = isoAlpha3[i]\n\nfig = px.choropleth(\n    dfAgg, \n    locations=\"country\", \n    color='num_sold',\n    color_continuous_scale=\"Viridis\",\n    range_color=(3000000, 450000),\n    scope=\"europe\",\n    labels={'num_sold':'Sold Items'}\n)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","221c4aaa":"def rowToColProd(row, product):\n    if row[\"product\"] == product:\n        result = row.num_sold\n    else:\n        result = 0\n    return result","93c90450":"dfAggStore = df.drop(columns=[\"row_id\"]).set_index(\"date\")\n\nfor i in dfAggStore[\"product\"].unique():\n    dfAggStore[f\"{i}\"] = dfAggStore.apply(rowToColProd, axis=\"columns\", product=i)\n\ndfAggStore = dfAggStore.groupby([\"date\", \"country\", \"store\"]).sum().reset_index().set_index(\"date\")\n\nfor l in range(3):\n    viz=dfAggStore.loc[dfAggStore.country == df.country.unique()[l]].drop(columns=[\"country\"])\n    fig = px.line(viz, facet_col=\"store\", facet_col_wrap=2, title=df.country.unique()[l])\n    fig.update_layout(template=\"simple_white\")\n    fig.show()","de46e7da":"def SaisonalComponents(DF,periods, by: str, noTrend=False):\n    DF = DF.copy()\n    DF.sort_values(by=[\"country\", by, \"date\"], inplace=True)\n    \n    t=\"Season_\"\n    if noTrend!=False:\n        t=\"Residual_\"\n    \n    for i in DF.columns[2:]:\n        DF[\"{1}{0}\".format(i,t)] = 0\n        for c in DF.country.unique():\n            for s in DF[f\"{by}\"].unique():\n                result = seasonal_decompose(DF.loc[(DF.country == c) & (DF[f\"{by}\"] == s),f\"{i}\"], model='additive', period=periods)\n                season=result.seasonal\n                if noTrend==True:\n                    trend=result.trend\n                else:\n                    trend=0\n                result = DF.loc[(DF.country == c) & (DF[f\"{by}\"] == s),\"{0}\".format(i)]  - season - trend\n                DF.loc[(DF.country == c) & (DF[f\"{by}\"] == s),\"{1}{0}\".format(i,t)] = result\n    return DF","4591e35a":"noSeasonStore = SaisonalComponents(dfAggStore,365, \"store\")\nnoSeasonStore.drop(columns=[\"num_sold\", \"Kaggle Mug\", \"Kaggle Hat\", \"Kaggle Sticker\"], inplace=True)","21a5df95":"for l in range(3):\n    viz=noSeasonStore.loc[noSeasonStore.country == df.country.unique()[l]].drop(columns=[\"country\"])\n    fig = px.line(viz, facet_col=\"store\", facet_col_wrap=2, title=df.country.unique()[l] + \" Season Filtered\")\n    fig.update_layout(template=\"simple_white\")\n    fig.show()","18c2e5a5":"def rowToCol(row, store):\n    if row[\"store\"] == store:\n        result = row.num_sold\n    else:\n        result = 0\n    return result","6fefe733":"dfAggProd = df.drop(columns=[\"row_id\"]).set_index(\"date\")\n\nfor i in dfAggProd[\"store\"].unique():\n    dfAggProd[f\"{i}\"] = dfAggProd.apply(rowToCol, axis=\"columns\", store=i)\n\ndfAggProd = dfAggProd.groupby([\"date\", \"country\", \"product\"]).sum().reset_index().set_index(\"date\")\n\nfor l in range(3):\n    viz=dfAggProd.loc[dfAggProd.country == df.country.unique()[l]].drop(columns=[\"country\"])\n    fig = px.line(viz, facet_col=\"product\", facet_col_wrap=2, title=df.country.unique()[l])\n    fig.update_layout(template=\"simple_white\")\n    fig.show()","e666f957":"noSeasonProd = SaisonalComponents(dfAggProd,365, \"product\")\nnoSeasonProd.drop(columns=[\"num_sold\", \"KaggleMart\", \"KaggleRama\"], inplace=True)","e6019653":"for l in range(3):\n    viz=noSeasonProd.loc[noSeasonProd.country == df.country.unique()[l]].drop(columns=[\"country\"])\n    fig = px.line(viz, facet_col=\"product\", facet_col_wrap=2, title=df.country.unique()[l] + \" Season Filtered\")\n    fig.update_layout(template=\"simple_white\")\n    fig.show()","f4288a9e":"noSeasonStore = SaisonalComponents(dfAggStore,365, \"store\", noTrend=True)\nnoSeasonStore.drop(columns=[\"num_sold\", \"Kaggle Mug\", \"Kaggle Hat\", \"Kaggle Sticker\"], inplace=True)\n\nfor l in range(3):\n    viz=noSeasonStore.loc[noSeasonStore.country == df.country.unique()[l]].drop(columns=[\"country\"]).corr()\n    for i in range(viz.shape[0]):\n        viz.iloc[i,i:viz.shape[0]] = None\n        \n    fig =  px.imshow(\n        viz,\n        color_continuous_scale='Tealrose',\n        range_color=(0.8,1)\n    )\n    \n    fig.update_layout(\n        height=600, width=600,\n        title=\"Correlations \"+df.country.unique()[l]+\" by Product\",\n        template=\"simple_white\"\n    )\n    \n    fig.show()","8f80f9a4":"noSeasonProd = SaisonalComponents(dfAggProd,365, \"product\", noTrend=True)\nnoSeasonProd.drop(columns=[\"num_sold\", \"KaggleMart\", \"KaggleRama\"], inplace=True)\n\nfor l in range(3):\n    viz=noSeasonProd.loc[noSeasonProd.country == df.country.unique()[l]].drop(columns=[\"country\"]).corr()\n    for i in range(viz.shape[0]):\n        viz.iloc[i,i:viz.shape[0]] = None\n        \n    fig =  px.imshow(\n        viz,\n        color_continuous_scale='Tealrose',\n        range_color=(0.8,1)\n    )\n    \n    fig.update_layout(\n        height=600, width=600,\n        title=\"Correlations \"+df.country.unique()[l]+\" by Store\",\n        template=\"simple_white\"\n    )\n    \n    fig.show()","57e49f26":"df[\"sold items\"] = round(df.num_sold \/ 100).astype(\"int\")*100\n        \nfig = px.parallel_categories(\n    df.sort_values(by=\"sold items\"),\n    dimensions=[\"country\", \"store\", \"product\", \"sold items\"],   \n    color=\"sold items\", color_continuous_scale=px.colors.sequential.Inferno,\n    labels={\"sold items\": \"Sold Items\", \"country\":\"Country\", \"store\":\"Store\", \"product\":\"Product\"},\n    title=\"Colored by Sold Items (rounded to the nearest hundred)\"\n)\nfig.update_layout(height=1200, width=800)\nfig.show()","b9e099e4":"# Time Series by Country and Product","c678466a":"# Correlations by Country and Store (No Season no Trend)","9da20508":"# Seasonal Adjusted Time Series by Country and Product","7e8dd155":"# Correlations by Country and Product (No Season no Trend)","d170d5e7":"# Seasonal Adjusted Time Series by Country and Store","32d8a79d":"# Map","c3949b53":"# Sales by Country, Store, and Product","04f1cf4b":"# Time Series by Country and Store"}}