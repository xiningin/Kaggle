{"cell_type":{"f52897d2":"code","b168b285":"code","19a19150":"code","ab382dcf":"code","cffdcfd6":"markdown","0f1f8584":"markdown"},"source":{"f52897d2":"import numpy as np # linear algebra\nimport pandas as pd ","b168b285":"W = np.array([1,-1,0,0.5]).transpose()\nXi = [np.array([1,-2,0,-1]).transpose(),np.array([0,1.5,0.5,-1]).transpose(), np.array([-1,1,0.5,-1]).transpose()]\nd = [-1,-1,1]\nc = 1\nError = 1\niteration = 0\ni = 0\nj = 0","19a19150":"while(Error != -0.0):\n        net = sum(W.transpose()*Xi[i])\n        o = (2\/(1 + np.exp(-1*net)))-1\n        o_ = ( 0.5 )*(1- (o**2) )\n        error = d[i] - o\n        print(round(error,1))\n        Error = round(error,1)\n        dw = c * error * o_ * Xi[i]\n        W = W + dw\n        iteration += 1\n        i+=1\n        if i > 2:\n            i = 0\n            j += 1\n        if Error == -0.0:\n            break","ab382dcf":"print(\"Final Weight Matrix : {}\".format(W))\nprint(\"Iteration : {}\".format(iteration))","cffdcfd6":"In machine learning, the delta rule is a gradient descent learning rule for updating the weights of the inputs to artificial neurons in a single-layer neural network. ","0f1f8584":"# Delta Learning Rule - Neural Networks"}}