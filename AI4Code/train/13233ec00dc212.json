{"cell_type":{"5182c794":"code","db1f2101":"code","654ad356":"code","3177e311":"code","e4668037":"code","acfa89c8":"code","0913f7ad":"code","8f79f9b7":"code","10106423":"code","a4f3639c":"code","a308e731":"code","4026b9c6":"code","4937b6bf":"code","20c6008e":"code","4343865f":"code","8cc1bdc1":"code","c49b3c1d":"code","c2a59553":"code","0d449f2a":"code","657c7cdf":"code","bd193e9a":"code","669c65c9":"code","d5eb57f8":"code","12ca2b32":"code","4c1eedc3":"code","ee6efae9":"code","a692e27b":"code","51687b9a":"code","74fdda73":"code","63c977b7":"code","02a139f2":"code","82f7d0d0":"code","5c5bc28f":"code","3e2c4b02":"code","a27dc979":"code","5b13e45c":"code","5083c72b":"code","8584d283":"code","2af27821":"code","cc8bb874":"code","75faff99":"code","17c76707":"code","e24fce8b":"code","e938bcac":"code","76d489a9":"code","309feb59":"code","c7774e75":"code","c38d57bc":"code","317141ed":"code","a5383b09":"code","dfee159a":"code","6a9648b0":"code","6428304f":"code","9ecc3347":"code","d6012ea3":"code","3c733ceb":"code","c71211f2":"code","aae54a2b":"code","2899759b":"code","0412e69d":"code","a5e853cd":"code","c0af8025":"code","2f5b930e":"code","1141f74b":"code","ed2551f7":"code","85b47b6b":"code","b566b15a":"code","81c662b5":"code","34bc9827":"code","d8ca2f77":"code","e08442f8":"code","bbaedf36":"code","4ce9da53":"code","94a5224e":"code","d8ff65da":"code","876dee24":"code","539d4ba3":"code","11614485":"code","48485ecc":"code","5f4fa94d":"code","ac34de1a":"code","20431dcf":"code","2e19d4e7":"code","d71e4334":"code","1b168fa7":"code","ad926d02":"code","f36d7d0c":"code","9ecdb95b":"code","6f8c70f4":"code","36b68592":"code","6bf40e8a":"code","d78a522a":"code","b1f8ecf3":"code","92b84df0":"code","52387c1c":"code","b5721a68":"code","a00f6f98":"code","4a01b9d7":"code","596945fd":"code","7e2ecc1b":"code","670675e4":"code","8e333f88":"code","63b6e05f":"code","7412e2ad":"code","b70f1709":"code","9ec6a719":"code","a5aa8862":"code","dde16efb":"code","95734366":"code","5dab9d40":"code","2516a949":"code","47f29cc8":"code","9f6b9fe5":"code","bd62c24d":"code","e85cc1db":"code","7223ea31":"code","3dde30c1":"code","671d7aaa":"code","331c8f1c":"code","092ff603":"code","f84a03b9":"code","7076783f":"code","1c5c0ff6":"code","d289bf8c":"code","93f888cc":"code","a87de5a1":"code","8f5e43a0":"code","ad7221ad":"code","71e6bc1d":"code","5302f03f":"code","7a6b0e30":"code","be775a84":"code","6d1733a5":"code","6b4aa363":"code","a6d14ba7":"code","f36faebb":"code","6802c82f":"code","5c45683e":"code","6512a911":"code","bfd6421c":"code","b2769e24":"code","d79c1652":"code","36a4f2d2":"code","2a8bfac1":"code","c27fc7cd":"code","fbe73c5e":"code","16158ede":"code","bc698e89":"code","78a5da41":"code","745d9eb3":"code","dfa7b7f8":"code","f8ec5474":"code","1041d2a9":"code","8f0b2922":"code","7d8e1b6e":"code","85a14d99":"code","33b47dd6":"code","1df8b26c":"code","c3e8db0f":"code","75eb3f95":"code","dee37643":"code","7a20f26c":"code","beaa94f2":"code","cb76986e":"code","421d95cc":"code","009db6d3":"code","21ad289c":"code","3bb019b8":"code","046f612a":"code","b89488e6":"code","7b4a0dc4":"markdown","0665e351":"markdown","6be5a127":"markdown","18108270":"markdown","c5789242":"markdown","eec4537a":"markdown","824df93b":"markdown","62614b5c":"markdown","0b75f2e7":"markdown","4a162f4e":"markdown","b2a5ffa7":"markdown","4138db40":"markdown","1bf404c8":"markdown","3c6298e2":"markdown","1de72650":"markdown","e3afe553":"markdown","ffcc3310":"markdown","0d4fa184":"markdown","ab966074":"markdown","a3be97e1":"markdown","cebb991b":"markdown","87cf99c3":"markdown","bb0369bc":"markdown","befe1416":"markdown","e96479a0":"markdown","617ee568":"markdown","2c0ddf1a":"markdown","4a37b622":"markdown","e4cd3250":"markdown"},"source":{"5182c794":"# Reading The Data","db1f2101":"from copy import copy\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn import metrics\n%matplotlib inline","654ad356":"data = pd.read_csv('..\/input\/hr-dataset\/train.csv')\ndata.head()","3177e311":"data.info()","e4668037":"data.duplicated().sum()","acfa89c8":"plt.figure(figsize=(10,13))\nsns.heatmap(data.isnull(), cbar = False)\nplt.yticks([])\nplt.show()","0913f7ad":"data.isnull().sum()","8f79f9b7":"round((data.isnull().sum() \/ data.shape[0])*100, 2)","10106423":"print('Number of Rows Containing 4 NULLs or more:', (data.shape[0] - data.dropna(thresh=10).shape[0]))\nprint('Percentage:', round(((data.shape[0] - data.dropna(thresh=10).shape[0])\/data.shape[0])*100, 2), '%')","a4f3639c":"data.dropna(thresh=10, inplace=True)","a308e731":"data.company_size.replace('10\/49', '10-49', inplace=True)","4026b9c6":"data.company_size.replace('100-500', '100-499', inplace=True)","4937b6bf":"data.shape","20c6008e":"data.isnull().sum()","4343865f":"training_data = data.dropna(thresh=14)\ntraining_data.shape","8cc1bdc1":"training_data.drop('enrollee_id', axis=1, inplace=True);","c49b3c1d":"training_data_2 = copy(training_data)","c2a59553":"training_data.head()","0d449f2a":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    training_data_2[column] = encoder[column].fit_transform(training_data_2[column])","657c7cdf":"training_data_2.head()","bd193e9a":"plt.figure(figsize=(18,9.5))\nsns.heatmap(training_data_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","669c65c9":"def normalize_columns(column):\n    return (training_data_2[column] - training_data_2[column].min()) \/ (training_data_2[column].max() - training_data_2[column].min())","d5eb57f8":"for column in training_data.columns:\n    training_data_2[column] = normalize_columns(column)","12ca2b32":"training_data_2.head()","4c1eedc3":"columns = ['city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']","ee6efae9":"X = training_data_2.loc[:,columns].values\nY = training_data.enrolled_university","a692e27b":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","51687b9a":"rf_grid = {\n 'max_depth': [10, 20, 30, None],\n 'max_features': ['auto', 'sqrt'],\n 'n_estimators': [200, 400, 600]}","74fdda73":"from sklearn.ensemble import RandomForestClassifier\n\neu_classifier = GridSearchCV(estimator= RandomForestClassifier(), param_grid=rf_grid, cv = 3, n_jobs=-1,verbose=1)\neu_classifier.fit(x_train, y_train) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (eu_classifier.best_score_, eu_classifier.best_params_))","63c977b7":"eu_predictions = eu_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, eu_predictions))","02a139f2":"accuracy = eu_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = eu_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(eu_classifier, x_test, y_test, display_labels= encoder['enrolled_university'].classes_, ax = ax, cmap=\"Blues\", values_format = '.0f')\nchart.confusion_matrix;","82f7d0d0":"columns = ['city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']","5c5bc28f":"X = training_data_2.loc[:,columns].values\nY = training_data.major_discipline","3e2c4b02":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","a27dc979":"# Random Forest\nmd_classifier = RandomForestClassifier(n_estimators = 500, criterion = 'entropy', random_state = 42)\nmd_classifier.fit(x_train, y_train) \n\naccuracy = md_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = md_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(md_classifier, x_test, y_test, display_labels= encoder['major_discipline'].classes_, ax = ax, cmap=\"Blues\", values_format='.0f')\nchart.confusion_matrix;","5b13e45c":"df_3 = copy(data)","5083c72b":"df_3.fillna('0', inplace=True)","8584d283":"x_test = df_3[df_3['enrolled_university'] == '0']\nx_test.shape","2af27821":"columns = ['enrollee_id', 'city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","cc8bb874":"x_test.shape","75faff99":"encoding_columns_eu = [ 'relevent_experience', 'education_level', 'major_discipline', 'experience', 'company_type', 'last_new_job', 'target']\neu_encoder = {}\nfor column in encoding_columns_eu:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","17c76707":"x_test.head()","e24fce8b":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","e938bcac":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","76d489a9":"x_test.head()","309feb59":"enrolled_university = copy(x_test.enrollee_id)","c7774e75":"enrolled_university = pd.DataFrame({'enrollee_id':enrolled_university, 'enrolled_university':eu_classifier.predict(x_test.iloc[:,1:])})","c38d57bc":"enrolled_university.head()","317141ed":"for i in enrolled_university.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'enrolled_university'] = enrolled_university.query(f'enrollee_id == {i}').enrolled_university","a5383b09":"df_3.enrolled_university.unique()","dfee159a":"x_test = df_3[df_3['major_discipline'] == '0']\nx_test.shape","6a9648b0":"columns = ['enrollee_id', 'city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","6428304f":"x_test.shape","9ecc3347":"encoding_columns_md = [ 'city', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\nmd_encoder = {}\nfor column in encoding_columns_md:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","d6012ea3":"x_test.head()","3c733ceb":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","c71211f2":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","aae54a2b":"x_test.head()","2899759b":"major_discipline = copy(x_test.enrollee_id)","0412e69d":"major_discipline = pd.DataFrame({'enrollee_id':major_discipline, 'major_discipline':md_classifier.predict(x_test.iloc[:,1:])})","a5e853cd":"major_discipline.head()","c0af8025":"for i in major_discipline.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'major_discipline'] = major_discipline.query(f'enrollee_id == {i}').major_discipline","2f5b930e":"df_3.major_discipline.unique()","1141f74b":"df = copy(df_3)","ed2551f7":"df.head()","85b47b6b":"df.replace('0', 'Unknown', inplace=True)","b566b15a":"color = sns.color_palette('muted')\ncolor_2 = sns.color_palette(\"Paired\")\ncolor_3 = sns.color_palette('pastel')\ncolor_3","81c662b5":"# Null Values\nnull_values = [5039, 4779, 4089, 2838, 457, 342, 367, 59]\ncolumns_null_values = ['company_type', 'company_size', 'gender', 'major_discipline', 'enrolled_university', 'education_level', 'last_new_job', 'experience']\n\nplt.figure(figsize=(13,8))\n\nplt.title('Null Values', fontweight=\"bold\")\nplt.xlabel('Column', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nsns.barplot(x=columns_null_values, y=null_values, color=color[0]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.xticks((0,1,2,3,4,5,6, 7),('Company Type', 'Company Size', 'Gender', 'Major Discipline', 'Enrolled University', 'Education Level', 'Last_New Job', 'Experience'), rotation=15 );\n\nfor i in range(8):\n  plt.text(i, null_values[i]+50, null_values[i], ha='center')\n\nplt.savefig('null.png')","34bc9827":"plt.figure(figsize=(13,8))\nsns.histplot(data=df, x='city_development_index', color=color[9]);\n\nplt.title('City Development Index Distribution', fontweight=\"bold\")\nplt.xlabel('City Development Index', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","d8ca2f77":"city_10 = df['city'].value_counts()[:11]\n\nplt.figure(figsize=(13,8))\nsns.barplot(x=city_10, y=city_10.index, color=color[9]);\n#plt.xaxis.set_visible(False)\nplt.xlabel('Count')\nplt.ylabel('City')\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['bottom'].set_visible(False)\nplt.title('Top 10 Cities', fontweight=\"bold\")\nplt.xlabel('Count', fontweight=\"bold\")\nplt.ylabel('City', fontweight=\"bold\")\nplt.xticks([])\nfor i in range(len(city_10)):\n    plt.text(city_10[i]+50, i, city_10[i])","e08442f8":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', color=color[9]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","bbaedf36":"order = ['Male', 'Female', 'Other', 'Unknown']\nplt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","4ce9da53":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","94a5224e":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","d8ff65da":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', color=color[1], order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","876dee24":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(15,8));\nsns.countplot(data=df, x='experience', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Experience Per Count of trainees', fontweight=\"bold\")\nplt.xlabel('Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","539d4ba3":"plt.figure(figsize=(8,9))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\nsns.countplot(data=df, x='company_size', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=20);","11614485":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', color=color[1], order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","48485ecc":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nlabels = ('0','1','2','3','4','>4', 'Unknown')\nsns.countplot(data=df, x='last_new_job', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1,2,3,4,5,6),labels);","5f4fa94d":"plt.figure(figsize=(8,9))\nsns.histplot(data=df, x='training_hours', bins=30, color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","ac34de1a":"plt.figure(figsize=(8,9))\nsns.kdeplot(data=df, x='training_hours', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","20431dcf":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='target', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","2e19d4e7":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', hue='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('13.png')","d71e4334":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', hue='target', order=['Male', 'Female', 'Other', 'Unknown']);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender vs. Target', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","1b168fa7":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', hue='target');\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University vs. Target', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","ad926d02":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level vs. Target', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","f36d7d0c":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', hue='target', order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline vs. Target', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","9ecdb95b":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', hue='target', order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","6f8c70f4":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(16,7))\nsns.countplot(data=df, x='experience', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Trainee Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend(labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('15.png')","36b68592":"plt.figure(figsize=(9,7))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\n\nsns.countplot(data=df, x='company_size', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","6bf40e8a":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nsns.countplot(data=df, x='last_new_job', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job vs. Target', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","d78a522a":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='city_development_index', x='target', inner='quartile');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","b1f8ecf3":"plt.figure(figsize=(8,9))\nsns.boxplot(data=df, y='city_development_index', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","92b84df0":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='training_hours', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Training Hours (hr)', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","52387c1c":"plt.figure(figsize=(7,8));\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\nsns.swarmplot(data=df, x='education_level', y='training_hours', order=order, palette=color);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Training Hours', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Training Hours', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.savefig('swarm.png')","b5721a68":"plt.figure(figsize=(8,5))\nsns.countplot(data=df, x='education_level', hue='relevent_experience');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","a00f6f98":"df_2 = copy(data)","4a01b9d7":"df_2.fillna('0', inplace=True)","596945fd":"df_2.drop('enrollee_id', axis=1, inplace=True);\ndf_2.head()","7e2ecc1b":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_2[column] = encoder[column].fit_transform(df_2[column])","670675e4":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","8e333f88":"def normalize_columns(column):\n    return (df_2[column] - df_2[column].min()) \/ (df_2[column].max() - df_2[column].min())","63b6e05f":"for column in df_2.columns:\n    df_2[column] = normalize_columns(column)","7412e2ad":"df_2.head()","b70f1709":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","9ec6a719":"X = df_2.loc[:,columns].values\nY = df_2.target.values","a5aa8862":"X.shape","dde16efb":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","95734366":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","5dab9d40":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","2516a949":"xgb_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_classifier.best_score_, xgb_classifier.best_params_))","47f29cc8":"xgb_classifier.best_params_","9f6b9fe5":"accuracy = xgb_classifier.score(x_train, y_train)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","bd62c24d":"accuracy = xgb_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","e85cc1db":"xgb_predictions = xgb_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_predictions))","7223ea31":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_1.png')","3dde30c1":"metrics.plot_roc_curve(xgb_classifier, x_test, y_test)\nplt.savefig('auc_1.png')","671d7aaa":"df_3.drop('enrollee_id', axis=1, inplace=True);\ndf_3.head()","331c8f1c":"df_3.shape","092ff603":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_3[column] = encoder[column].fit_transform(df_3[column])","f84a03b9":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_3.corr(),cbar = True, annot =True, cmap=\"Blues\");","7076783f":"def normalize_columns(column):\n    return (df_3[column] - df_3[column].min()) \/ (df_3[column].max() - df_3[column].min())","1c5c0ff6":"for column in df_3.columns:\n    df_3[column] = normalize_columns(column)","d289bf8c":"df_3.head()","93f888cc":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","a87de5a1":"X = df_3.loc[:,columns].values\nY = df_3.target.values","8f5e43a0":"X.shape","ad7221ad":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","71e6bc1d":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","5302f03f":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","7a6b0e30":"xgb_2_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_2_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_2_classifier.best_score_, xgb_2_classifier.best_params_))","be775a84":"xgb_2_classifier.best_params_","6d1733a5":"accuracy = xgb_2_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","6b4aa363":"accuracy = xgb_2_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","a6d14ba7":"xgb_2_predictions = xgb_2_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_2_predictions))","f36faebb":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_2_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_2.png')","6802c82f":"metrics.plot_roc_curve(xgb_2_classifier, x_test, y_test)\nplt.savefig('auc_2.png')","5c45683e":"df_4 = copy(data)\ndf_4.head()","6512a911":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  df_4[i].fillna(df_4[i].mode()[0], inplace=True)","bfd6421c":"df_4.drop('enrollee_id', axis=1, inplace=True);\ndf_4.head()","b2769e24":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_4[column] = encoder[column].fit_transform(df_4[column])","d79c1652":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_4.corr(),cbar = True, annot =True, cmap=\"Blues\");","36a4f2d2":"def normalize_columns(column):\n    return (df_4[column] - df_4[column].min()) \/ (df_4[column].max() - df_4[column].min())","2a8bfac1":"for column in df_4.columns:\n    df_4[column] = normalize_columns(column)","c27fc7cd":"df_4.head()","fbe73c5e":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","16158ede":"X = df_4.loc[:,columns].values\nY = df_4.target.values","bc698e89":"X.shape","78a5da41":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","745d9eb3":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","dfa7b7f8":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","f8ec5474":"xgb_3_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_3_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_3_classifier.best_score_, xgb_3_classifier.best_params_))","1041d2a9":"xgb_3_classifier.best_params_","8f0b2922":"accuracy = xgb_3_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","7d8e1b6e":"accuracy = xgb_3_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","85a14d99":"xgb_3_predictions = xgb_3_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_3_predictions))","33b47dd6":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_3_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_3.png')","1df8b26c":"metrics.plot_roc_curve(xgb_3_classifier, x_test, y_test)\nplt.savefig('auc_3.png')","c3e8db0f":"test = pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/HR_Analysis\/test.csv')\ntest.head()","75eb3f95":"test.info()","dee37643":"test.isnull().sum()","7a20f26c":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  test[i].fillna(test[i].mode()[0], inplace=True)","beaa94f2":"test.head()","cb76986e":"test.drop(['enrollee_id', 'gender', 'company_type'], axis=1, inplace=True)","421d95cc":"encoding_columns = ['city', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'last_new_job']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    test[column] = encoder[column].fit_transform(test[column])","009db6d3":"def normalize_columns(column):\n    return (test[column] - test[column].min()) \/ (test[column].max() - test[column].min())","21ad289c":"for column in test.columns:\n    test[column] = normalize_columns(column)","3bb019b8":"test.head()","046f612a":"test['target'] = xgb_3_classifier.predict(test.values)","b89488e6":"test.target.value_counts().plot.pie(colors=color, autopct='%1.0f%%')","7b4a0dc4":"- ## Predicting Target","0665e351":"- ## Normalizing Training data","6be5a127":"- ## Normalizing Data ","18108270":"- ## Detting The Data Ready","c5789242":"## Question to be asked about the Data:\nQ1: All columns vs Target<br>\nQ2: Distribution data of all columns<br>\nQ3: What are the three most important things we need to focus on to improve employee\nengagement?<br>\nQ4: What are the three most important things we need to focus on to decrease the numer looking for a new job?<br>\nQ5: What are the trainee most effective features that does not look for another job?<br>\nQ6: what is the effect of training hours that causing the trainee to look for another job?<br>","eec4537a":"- ## Scaling The Data","824df93b":"# Creating The Model Using SMOTE(With Predicted NULL Values and Mode)","62614b5c":"- ## Encoding The Data","0b75f2e7":"# Exploratory Data Analysis","4a162f4e":"- ## Encoding The Data","b2a5ffa7":"- ## The Columns to predict their null values\n    - enrolled_university\n    - education_level\n    - major_discipline\n    - experience\n    - company_size\n    - company_type\n    - last_new_job\n    - gender","4138db40":"- ## XGBoost Classifier Using SMOTE(Replacing NULL Values with Mode)","1bf404c8":"#Creating The Model Using SMOTE (with Predicted NULL Values and Unknown) \n","3c6298e2":"# Predicting The Target in Test Data ","1de72650":"- ## Univariate Charts","e3afe553":"- ## Getting the training data ready","ffcc3310":"- ## Filling Major Discipline Column","0d4fa184":"  - ## Filling Enrolled University Column","ab966074":"- ## XGBoost Classifier Using SMOTE Replacing NULL with *0*","a3be97e1":"# Creating The Model Using SMOTE (Replacing NULL with 0)","cebb991b":"- ## Normalizing The Data","87cf99c3":"- ## Normalizing The Data","bb0369bc":"- ## Normalizing Test Data","befe1416":"- ## Scaling The test data","e96479a0":"- ## `1.`Enrolled University Column","617ee568":"- ## `2` Major Discipline","2c0ddf1a":"- ## Bivariate Charts","4a37b622":"# Predicting NULL Values","e4cd3250":"- ## XGBoost Classifier Using SMOTE with Predicted NULL Values"}}