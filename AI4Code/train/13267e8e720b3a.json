{"cell_type":{"fd49e0c9":"code","7c98bc14":"code","a2bdce10":"code","3f1671c2":"code","b2a50532":"code","20bf2f50":"code","4543c6ef":"code","b4c782ac":"code","4ee2e6bf":"code","444782b7":"code","14c0bdd0":"markdown","150907a7":"markdown","0f806a2b":"markdown","86a92d03":"markdown","d6ff462d":"markdown","06e2b6b8":"markdown","f7089c09":"markdown","f2f47a7d":"markdown","553ff134":"markdown","cc98ac8e":"markdown","f59ae5fe":"markdown"},"source":{"fd49e0c9":"import pandas as pd\nimport geopandas as gpd\n\nimport folium\nfrom folium import Choropleth, Circle\nfrom folium.plugins import HeatMap\n\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.geospatial.ex3 import *","7c98bc14":"def embed_map(m, file_name):\n    from IPython.display import IFrame\n    m.save(file_name)\n    return IFrame(file_name, width='100%', height='500px')","a2bdce10":"plate_boundaries = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/Plate_Boundaries\/Plate_Boundaries\/Plate_Boundaries.shp\")\nplate_boundaries['coordinates'] = plate_boundaries.apply(lambda x: [(b,a) for (a,b) in list(x.geometry.coords)], axis='columns')\nplate_boundaries.drop('geometry', axis=1, inplace=True)\n\nplate_boundaries.head(10)","3f1671c2":"earthquakes = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/earthquakes1970-2014.csv\", parse_dates=[\"DateTime\"])\nearthquakes.head()","b2a50532":"# Create a base map with plate boundaries\nm_1 = folium.Map(location=[35,136], tiles='cartodbpositron', zoom_start=5)\nfor i in range(len(plate_boundaries)):\n    folium.PolyLine(locations=plate_boundaries.coordinates.iloc[i], weight=2, color='black').add_to(m_1)\n\n# Add a heatmap to the map\nHeatMap(data=earthquakes[['Latitude', 'Longitude']], radius=15).add_to(m_1)\n\n# Show the map\nembed_map(m_1, 'q_1.html')","20bf2f50":"# Create a base map with plate boundaries\nm_2 = folium.Map(location=[35,136], tiles='cartodbpositron', zoom_start=5)\nfor i in range(len(plate_boundaries)):\n    folium.PolyLine(locations=plate_boundaries.coordinates.iloc[i], weight=2, color='black').add_to(m_2)\n    \n#Add a map to visualize earthquake depth\ndef color_producer(val):\n    if val < 50:\n        return 'forestgreen'\n    elif val < 100:\n        return 'darkorange'\n    else:\n        return 'darkred'\n\nfor i in range(0,len(earthquakes)):\n    Circle(\n        location=[earthquakes.iloc[i]['Latitude'],earthquakes.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(earthquakes.iloc[i]['Depth'])).add_to(m_2)\n\n# View the map\nembed_map(m_2, 'q_2.html')","4543c6ef":"# GeoDataFrame with prefecture boundaries\nprefectures = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/japan-prefecture-boundaries\/japan-prefecture-boundaries\/japan-prefecture-boundaries.shp\")\nprefectures.set_index('prefecture', inplace=True)\nprefectures.head()","b4c782ac":"# DataFrame containing population of each prefecture\npopulation = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/japan-prefecture-population.csv\")\npopulation.set_index('prefecture', inplace=True)\n\n# Calculate area (in square kilometers) of each prefecture\narea_sqkm = pd.Series(prefectures.geometry.to_crs(epsg=32654).area \/ 10**6, name='area_sqkm')\nstats = population.join(area_sqkm)\n\n# Add density (per square kilometer) of each prefecture\nstats['density'] = stats[\"population\"] \/ stats[\"area_sqkm\"]\nstats.head()","4ee2e6bf":"# Create a base map\nm_3 = folium.Map(location=[35,136], tiles='cartodbpositron', zoom_start=5)\n\n#Create a choropleth map to visualize population density\nChoropleth(geo_data=prefectures.__geo_interface__, \n           data=stats['density'], \n           key_on=\"feature.id\",\n           fill_color='YlGnBu', \n           legend_name='Population Density (per square kilometer)'\n          ).add_to(m_3)\n\n# View the map\nembed_map(m_3, 'q_3.html')","444782b7":"# Create a base map\nm_4 = folium.Map(location=[35,136], tiles='cartodbpositron', zoom_start=5)\n\n#Create a map\ndef color_producer(val):\n    if val > 6.5:\n        return 'red'\n    else:\n        return 'green'\n\nfor i in range(0,len(earthquakes)):\n    Circle(\n        location=[earthquakes.iloc[i]['Latitude'],earthquakes.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(earthquakes.iloc[i]['Magnitude'])).add_to(m_4)\n    \nChoropleth(geo_data=prefectures.__geo_interface__, \n           data=stats['density'], \n           key_on=\"feature.id\",\n           fill_color='BuPu', \n           legend_name='Population Density (per square kilometer)'\n          ).add_to(m_4)\n\n\n# View the map\nembed_map(m_4, 'q_4.html')","14c0bdd0":"Tokyo,Kanagawa and Osaka have relatively higher density than the others.","150907a7":"Next, run the code cell below without changes to load the historical earthquake data into a DataFrame `earthquakes`.","0f806a2b":"### 4) Which high-density prefecture is prone to high-magnitude earthquakes?\n\nCreate a map to suggest one prefecture that might benefit from earthquake reinforcement.  We map should visualize both density and earthquake magnitude.","86a92d03":"The next code cell creates a DataFrame `stats` containing the population, area (in square kilometers), and population density (per square kilometer) for each Japanese prefecture.  Run the code cell without changes.","d6ff462d":"\n\n### 1) Do earthquakes coincide with plate boundaries?\n\nRun the code cell below to create a DataFrame `plate_boundaries` that shows global plate boundaries.  The \"coordinates\" column is a list of (latitude, longitude) locations along the boundaries.","06e2b6b8":"Use the next code cell to create a choropleth map to visualize population density.","f7089c09":"### 3) Which prefectures have high population density?\n","f2f47a7d":"# Introduction\n\nYou are an urban safety planner in Japan, and you are analyzing which areas of Japan need extra earthquake reinforcement.  Which areas are both high in population density and prone to earthquakes?\n\n<center>\n<img src=\"https:\/\/i.imgur.com\/Kuh9gPj.png\" width=\"450\"><br\/>\n<\/center>\n\nBefore you get started, run the code cell below to set everything up.","553ff134":"The code cell below visualizes the plate boundaries on a map.  Use all of the earthquake data to add a heatmap to the same map, to determine whether earthquakes coincide with plate boundaries.  ","cc98ac8e":"### 2) Is there a relationship between earthquake depth and proximity to a plate boundary in Japan?\n\n\n\n","f59ae5fe":"Which prefecture do you recommend for extra earthquake reinforcement?\n\nOsaka near to high magnitude earthquake while Kanagawa may be under tsunami risk. Additionally, Tokyo has a high population density. For three prefectures may take extra earthquake reinforcement."}}