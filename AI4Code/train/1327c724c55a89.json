{"cell_type":{"71868807":"code","f2da5fb6":"code","17913fd0":"code","ec550c6e":"code","5485ddbd":"code","71c86e85":"code","f1c22cd4":"code","c0211075":"code","298f288c":"code","345963eb":"code","6515c78c":"code","f0c5fb8f":"code","9b5c8c4c":"code","d402ac9f":"code","15f1ed7d":"code","ffa7311b":"code","c212d8db":"code","24bf0498":"code","cd5b47c1":"code","8433f952":"code","2c69a277":"code","fbc2bbe1":"code","db642636":"code","b25b3cfc":"code","b127b0a7":"code","c351d7eb":"code","318c8951":"code","ed4288ed":"code","aac59954":"code","1fdfc07f":"code","3a39ca69":"code","52006708":"code","89232dd9":"code","10ffb44d":"code","7ae77f4c":"code","84b13fa8":"code","3a059eee":"code","8ee17890":"code","76572f4d":"code","12dfc7c3":"code","5f99753b":"code","8060744d":"code","914c1536":"code","e7930def":"code","5449e91d":"code","2c09d5a6":"code","2ec8276d":"code","88e4fe9d":"code","beeda105":"code","50521d43":"code","b7fc17f6":"code","daf6d1c7":"code","86f90b01":"code","1a9bba72":"markdown","1b5d72bc":"markdown","4b544532":"markdown","27a78aa1":"markdown","7fabe6a9":"markdown","4e2827ef":"markdown","bcc681d4":"markdown","80b7ab3f":"markdown","acabc24a":"markdown","6955908c":"markdown","81143937":"markdown","7379c09c":"markdown","de90abe0":"markdown","ddafa4c8":"markdown","4baaeeb1":"markdown","3fa2bf6c":"markdown","706e3a40":"markdown","87c355ca":"markdown","ce8513dc":"markdown","76f76297":"markdown","449ddd7a":"markdown","b9265da1":"markdown","4e8e6770":"markdown","506819ba":"markdown","b8b56c00":"markdown","a548e7c4":"markdown","ff027daa":"markdown","930c48e8":"markdown","d95f7b6b":"markdown","f7e5fdea":"markdown","86c0ad64":"markdown","cdb4e807":"markdown","c278f712":"markdown","e9283c0e":"markdown"},"source":{"71868807":"pip install funpymodeling","f2da5fb6":"pip install matplotlib==3.1.3","17913fd0":"import pandas as pd\nfrom funpymodeling.exploratory import freq_tbl, status, profiling_num, cat_vars, num_vars\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport squarify\nfrom IPython.display import YouTubeVideo\nimport numpy as np\nfrom PIL import Image, ImageFont","ec550c6e":"import spacy\n#import random\n#from collections import Counter #for counting\nplt.style.use('seaborn')\nsns.set(font_scale=2)\n#import json\n#def pretty_print(pp_object):\n  #  print(json.dumps(pp_object, indent=2))","5485ddbd":"#!python -m spacy download en_core_web_lg\nnlp = spacy.load('en_core_web_lg')\n# python -m spacy download en_vectors_web_lg","71c86e85":"with open('..\/input\/d\/gulsahdemiryurek\/harry-potter-dataset\/Harry Potter 1.csv', 'r', errors='ignore') as file:\n    data = file.read()\n   ","f1c22cd4":"#convierto string a df\ndf = pd.DataFrame([x.split(';') for x in data.split('\\n')])\n#agrego headers y elimino primera fila\ndf= df.rename(columns={0 : \"Character\",  1: \"Sentence\" })\ndf= df.drop([0])\ndf = df.reset_index(drop=True)","c0211075":"status(df)","298f288c":"df[df[\"Sentence\"].isnull()  ]","345963eb":"df.loc[216,'Sentence'] = \"All students must be equipped with one standard size 2 pewter cauldron and may bring, if they desire, either an owl, a cat or a toad.\"","6515c78c":"df= df.drop([217,615,1111,1590])\ndf = df.reset_index(drop=True)","f0c5fb8f":"#Viendo los valores unicos de \"Character\", vemos que algunos strings estan \"duplicados\". \n# Esto sucede porque en algunos registros, el nombre del personaje aparece con espacios al final\n# entonces lo solusionamos asi:\ndf[\"Character\"]=df[\"Character\"].str.strip()","9b5c8c4c":"#df.to_csv('HP.csv', index=False, sep =';')","d402ac9f":"# Creamos objeto doc\ntext=df['Sentence'].str.cat(sep=' ')\ndoc = nlp(text)","15f1ed7d":"freq_tbl(df[\"Character\"]).head(10)","ffa7311b":"data.count(\"Hogwarts\")","c212d8db":"HP_houses = []\nfor token in doc:\n    if  (token.text == \"Slytherin\" or token.text ==\"Ravenclaw\" or token.text ==\"Gryffindor\" or token.text ==\"Hufflepuff\"):\n        HP_houses.append(token)\n        \nHP_houses = [str(x) for x in HP_houses]\n","24bf0498":"df_houses = pd.DataFrame(HP_houses, columns=[\"HP_houses\"])","cd5b47c1":"labels = ['Gryffindor','Slytherin','Hufflepuff','Ravenclaw']\nsizes = df_houses.value_counts().values\ncolors = ['#A93226','#1E8449','#F1C40F','#1A5276']\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',colors=colors,pctdistance=0.85,\n        shadow=True, startangle=90)\n\n#draw internal circle\ncentre_circle = plt.Circle((0,0),0.6,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\n\n\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.show()\n\n#https:\/\/medium.com\/@kvnamipara\/a-better-visualisation-of-pie-charts-by-matplotlib-935b7667d77f\n","8433f952":"freq_tbl(HP_houses)","2c69a277":"HP_persons = []\nfor token in doc:\n    if  ( token.ent_type_ == \"PERSON\" ):\n        HP_persons.append(token)\n        \nHP_persons = [str(x) for x in HP_persons]\n","fbc2bbe1":"df_persons = pd.DataFrame(HP_persons, columns=[\"Personas\"])\ndf_persons\nplt.figure(figsize=(5,4))\nsns.countplot(y=\"Personas\",\n             data=df_persons,\n             order=df_persons[\"Personas\"].value_counts().iloc[:10].index)\nplt.title(\"Personas m\u00e1s nombradas\")\nplt.show()\n\n","db642636":"hp_nouns = []\nfor token in doc:\n    if (not token.is_stop) and (token.pos_ == \"NOUN\") and (len(str(token))>2):\n        hp_nouns.append(token)\n        \nhp_nouns = [str(x) for x in hp_nouns]","b25b3cfc":"df_nouns = pd.DataFrame(hp_nouns, columns=[\"Sustantivos\"])","b127b0a7":"#filtro los datos para que el grafico tenga m\u00e1s sentido. \ndata_treemap = df_nouns.groupby(\"Sustantivos\").filter(lambda x: len(x) > 10)\n\n\n# Prepare Data\ndftreemap = data_treemap.groupby('Sustantivos').size().reset_index(name='counts')\nlabels = dftreemap.apply(lambda x: str(x[0]) + \"\\n (\" + str(x[1]) + \")\", axis=1)\nsizes = dftreemap['counts'].values.tolist()\ncolors = [plt.cm.Spectral(i\/float(len(labels))) for i in range(len(labels))]\n\n# Draw Plot\nplt.figure(figsize=(10,7), dpi= 80)\nsquarify.plot(sizes=sizes, label=labels, color=colors, alpha=.8)\n\n# Decorate\nplt.title('Sustantivos m\u00e1s utilizados')\nplt.axis('off')\nplt.show()","c351d7eb":"HP_adjs = []\nfor token in doc:\n    if (not token.is_stop) and (token.pos_ == \"ADJ\") and (len(str(token))>2):\n        HP_adjs.append(token)\n        \nHP_adjs = [str(x) for x in HP_adjs]","318c8951":"df_adjs = pd.DataFrame(HP_adjs, columns=[\"Adjetivos\"])","ed4288ed":"from wordcloud import WordCloud\nimport PIL.Image\n\n\nmask = np.array(Image.open(\"..\/input\/hp1fstone\/png-transparent-black-harry-potter-hat-art-sorting-hat-harry-potter-decal-harry-potter-sorting-hat-harry-potter-decal.png\"))\n\nwords = [i for i in df_adjs[\"Adjetivos\"]]\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n    colormap=\"cividis\",\n                          width=2048,\n                          height=1024,\n                          mask=mask\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","aac59954":"textHarry = df[df.Character == \"Harry\"]['Sentence'].str.cat(sep=' ')\ndocHarry = nlp(textHarry)","1fdfc07f":"harry_persons = []\nfor token in docHarry:\n    if  ( token.ent_type_ == \"PERSON\" ):\n        harry_persons.append(token)\n        \nharry_persons = [str(x) for x in harry_persons]","3a39ca69":"df_persons_harry = pd.DataFrame(harry_persons, columns=[\"Personas\"])\ndf_persons\nplt.figure(figsize=(5,4))\nsns.countplot(y=\"Personas\",\n             data=df_persons_harry,\n             order=df_persons_harry[\"Personas\"].value_counts().iloc[:10].index)\nplt.title(\"Personas m\u00e1s nombradas\")\nplt.show()","52006708":"harry_adjs = []\nfor token in docHarry:\n    if (not token.is_stop) and (token.pos_ == \"ADJ\")  and (len(str(token))>2):\n        harry_adjs.append(token)\n        \nharry_adjs = [str(x) for x in harry_adjs]","89232dd9":"df_adjs_Harry = pd.DataFrame(harry_adjs, columns=[\"Adjetivos\"])","10ffb44d":"from wordcloud import WordCloud\nwords = [i for i in df_adjs_Harry[\"Adjetivos\"]]\n\nmask = np.array(Image.open(\"..\/input\/hp1fstone\/63b26a1570738760bf4e184f2008d221.jpg\"))\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n    colormap=\"inferno\",\n                          width=2048,\n                          height=1024,\n                          mask=mask\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","7ae77f4c":"textMalfoy = df[df.Character == \"Malfoy\"]['Sentence'].str.cat(sep=' ')\n\ndocMalfoy = nlp(textMalfoy)","84b13fa8":"malfoy_persons = []\nfor token in docMalfoy:\n    if  ( token.ent_type_ == \"PERSON\" ):\n        malfoy_persons.append(token)\n        \nmalfoy_persons = [str(x) for x in malfoy_persons]","3a059eee":"df_persons_malfoy = pd.DataFrame(malfoy_persons, columns=[\"Personas\"])\ndf_persons\nplt.figure(figsize=(5,4))\nsns.countplot(y=\"Personas\",\n             data=df_persons_malfoy,\n             order=df_persons_malfoy[\"Personas\"].value_counts().iloc[:10].index)\nplt.title(\"Personas m\u00e1s nombradas\")\nplt.show()","8ee17890":"Malfoy_adjs = []\nfor token in docMalfoy:\n    if (not token.is_stop) and (token.pos_ == \"ADJ\")  and (len(str(token))>2):\n        Malfoy_adjs.append(token)\n        \nMalfoy_adjs = [str(x) for x in Malfoy_adjs]","76572f4d":"df_adjs_Malfoy = pd.DataFrame(Malfoy_adjs, columns=[\"Adjetivos\"])","12dfc7c3":"from wordcloud import WordCloud\nwords = [i for i in df_adjs_Malfoy[\"Adjetivos\"]]\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n    colormap=\"viridis\",\n                          width=2048,\n                          height=1024\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","5f99753b":"textDumbledore = df[df.Character == \"Dumbledore\"]['Sentence'].str.cat(sep=' ')\ndocDumbledore = nlp(textDumbledore)","8060744d":"Dumbledore_persons = []\nfor token in docDumbledore:\n    if (token.ent_type_ == \"PERSON\") :\n        Dumbledore_persons.append(token)\n        \nDumbledore_persons = [str(x) for x in Dumbledore_persons]\n","914c1536":"df_person_Dumbledore = pd.DataFrame(Dumbledore_persons, columns=[\"Personas\"])\ndf_person_Dumbledore\nplt.figure(figsize=(5,4))\nsns.countplot(y=\"Personas\",\n             data=df_person_Dumbledore,\n             order=df_person_Dumbledore[\"Personas\"].value_counts().iloc[:10].index)\nplt.show()","e7930def":"Dumbledore_adjs = []\nfor token in docDumbledore:\n    if (not token.is_stop) and (token.pos_ == \"ADJ\")  and (len(str(token))>2):\n        Dumbledore_adjs.append(token)\n        \nDumbledore_adjs = [str(x) for x in Dumbledore_adjs]","5449e91d":"df_adjs_Dumbledore = pd.DataFrame(Dumbledore_adjs, columns=[\"Adjetivos\"])","2c09d5a6":"from wordcloud import WordCloud\nwords = [i for i in df_adjs_Dumbledore[\"Adjetivos\"]]\n    \nmask = np.array(Image.open(\"..\/input\/hp1fstone\/png-transparent-harry-potter-pagan-pride-mother-fiction-albus-dumbledore.jpg\"))    \n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n    colormap=\"inferno\",\n                          width=2048,\n                          height=1024,\n                          mask=mask\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","2ec8276d":"textSnape = df[df.Character == \"Snape\"]['Sentence'].str.cat(sep=' ')\ndocSnape = nlp(textSnape)","88e4fe9d":"Snape_persons = []\nfor token in docSnape:\n    if (token.ent_type_ == \"PERSON\") :\n        Snape_persons.append(token)\n        \nSnape_persons = [str(x) for x in Snape_persons]\n","beeda105":"df_persons_Snape = pd.DataFrame(Snape_persons, columns=[\"Personas\"])\ndf_persons_Snape\nplt.figure(figsize=(5,4))\nsns.countplot(y=\"Personas\",\n             data=df_persons_Snape,\n             order=df_persons_Snape[\"Personas\"].value_counts().iloc[:10].index)\nplt.show()","50521d43":"HP_adjs_snape = []\nfor token in docSnape:\n    if (not token.is_stop) and (token.pos_ == \"ADJ\") and (len(str(token))>2):\n        HP_adjs_snape.append(token)\n        \nHP_adjs_snape = [str(x) for x in HP_adjs_snape]","b7fc17f6":"df_adjs_snape = pd.DataFrame(HP_adjs_snape, columns=[\"Adjetivos\"])","daf6d1c7":"from wordcloud import WordCloud\nwords = [i for i in df_adjs_snape[\"Adjetivos\"]]\n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n    colormap=\"viridis\",\n                          width=2048,\n                          height=1024\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","86f90b01":"YouTubeVideo('2pCaH0hER9A', width=800, height=450)","1a9bba72":"**********************","1b5d72bc":"# General","4b544532":"****\u00bfCuales son los adjetivos m\u00e1s utilizados por Harry?****","27a78aa1":"# An\u00e1lisis Dumbledore","7fabe6a9":"# Proximos pasos:<br>\n* Seguir con los an\u00e1lisis de otras peliculas de la saga\n* Analizar varias peliculas a la vez (esto ser\u00eda muy interesante)\n* Detecci\u00f3n de sentimiento","4e2827ef":"****\u00bfCuales son los adjetivos m\u00e1s utilizados?****","bcc681d4":"****\u00bfCuales son los adjetivos m\u00e1s utilizados por Dumbledore?****","80b7ab3f":"Por: [Leonardo Genzano](https:\/\/www.linkedin.com\/in\/leonardo-genzano-1b275193\/)","acabc24a":"<img src=\"https:\/\/thumbs.gfycat.com\/GrandImmaculateCreature-small.gif\">","6955908c":"****Personas m\u00e1s nombradas****","81143937":"Consideraciones:\n* los datos est\u00e1n en ingl\u00e9s\n* para ver el c\u00f3digo, presiona el bot\u00f3n Code que esta arriba a la derecha de cada visualizaci\u00f3n. Lo oculto para que no se haga largo el notebook\n* voy a estar utilizando algunas funciones de Spacy, que es una biblioteca muy completa para hacer an\u00e1lisis NLP. https:\/\/spacy.io\/usage\n* Este notebook no fue realizado por un experto. Seguramente haya mejores maneras de afrontar las mismas problematicas. Quedo atento a cualquier comentario o sugerencia ","7379c09c":"****\u00bfCu\u00e1les son las personas m\u00e1s nombradas por Draco?****","de90abe0":"# An\u00e1lisis Draco Malfoy","ddafa4c8":"****\u00bfCu\u00e1les son los sustantivos m\u00e1s utilizados?****","4baaeeb1":"<img src=\"https:\/\/i.pinimg.com\/originals\/38\/e8\/f2\/38e8f2dfda8036deede516016df545bc.gif\">\n\n","3fa2bf6c":"# An\u00e1lisis Severus Snape","706e3a40":"****\u00bfCu\u00e1ntas veces se nombra a la escuela Hogwarts?****","87c355ca":"Estaremos utilizando Spacy para hacer un an\u00e1lisis simple de NLP (Natural Language Processing) a la primer pelicula de Harry Potter.<br>\nNLP se usa para muchisimas cosas, por ejemplo reconocimiento de texto, traducci\u00f3n automatica, generaci\u00f3n de lenguaje,resumen de textos, deteccion de sentimientos, etc. <br>\n<br>\nLos datos de entrada contienen:<br>\n* Character: personaje que est\u00e1 hablando\n* Sentence: su di\u00e1logo","ce8513dc":"# An\u00e1lisis Harry Potter (personaje)","76f76297":"****\u00bfQu\u00e9 personaje tiene m\u00e1s lineas?****","449ddd7a":"# An\u00e1lisis NLP con Spacy","b9265da1":"<img src=\"https:\/\/media1.tenor.com\/images\/2d7bfb9b3e6170a5a63605fb5c913e8f\/tenor.gif?itemid=10629771\">","4e8e6770":"****\u00bfCu\u00e1l es la casa m\u00e1s nombrada? (a que ya saben el resultado..)****","506819ba":"![The kaggle logo][1]\n[1]: https:\/\/i.pinimg.com\/originals\/15\/17\/d7\/1517d762a06a0a6b84f1b58b71b50a24.jpg","b8b56c00":"<img src=\"https:\/\/i.imgur.com\/3a9el.gif?noredirect\">","a548e7c4":"**************************","ff027daa":"<img src=\"https:\/\/media1.tenor.com\/images\/7806f69d9655adc2d541b3e6aa301912\/tenor.gif?itemid=4874386\">","930c48e8":"****\u00bfCuales son las personas m\u00e1s nombradas por Dumbledore?****","d95f7b6b":"# An\u00e1lisis NLP con Spacy: Harry Potter y la piedra filosofal (pelicula)","f7e5fdea":"****\u00bfCu\u00e1les son los adjetivos mas usados por Snape? (Snape siendo Snape)****","86c0ad64":"****\u00bfCuales son los adjetivos m\u00e1s utilizados por Draco Malfoy?****","cdb4e807":"# Preparaci\u00f3n de datos","c278f712":"****\u00bfCu\u00e1les son las personas m\u00e1s nombradas por Harry?****","e9283c0e":"****\u00bfCuales son las personas m\u00e1s nombradas por Snape?****"}}