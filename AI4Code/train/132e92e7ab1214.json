{"cell_type":{"4b5e9382":"code","85253e85":"code","682f65b1":"code","8d8052ee":"code","9e8ab532":"code","f8656432":"code","6ac4d02f":"code","b008319a":"code","f219fdfd":"code","16e4c403":"code","71366cf0":"code","63d0eda0":"code","fa082ca5":"code","5783bf78":"code","25effc1f":"code","f5c60b16":"markdown","b461aa52":"markdown","e1708180":"markdown","08f80436":"markdown","ea74263a":"markdown"},"source":{"4b5e9382":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom fastai.vision.all import *\nimport albumentations\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","85253e85":"set_seed(999,reproducible=True)","682f65b1":"dataset_path = Path('..\/input\/arbolesenchile')\nos.listdir(dataset_path)","8d8052ee":"train_df = pd.read_csv(dataset_path\/'train_labels.csv')","9e8ab532":"train_df.head()","f8656432":"train_df['path'] = train_df['filename'].map(lambda x:dataset_path\/'train_images'\/x)\ntrain_df = train_df.drop(columns=['filename'])\ntrain_df = train_df.sample(frac=1).reset_index(drop=True) #shuffle dataframe\ntrain_df.head(10)","6ac4d02f":"len_df = len(train_df)\nprint(f\"There are {len_df} images\")","b008319a":"import matplotlib.pyplot as plt\n\ntrain_df['label'].hist(figsize = (10, 5))\nplt.xticks(rotation=90)","f219fdfd":"from PIL import Image\n\nim = Image.open(\"..\/input\/arbolesenchile\/train_images\/train_images\/train_5094.jpg\")\nwidth, height = im.size\nprint(width,height)","16e4c403":"im","71366cf0":"path = Path(\"\/kaggle\/input\/arbolesenchile\/train_images\/train_images\")\npath.ls()","63d0eda0":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","fa082ca5":"data.show_batch(nrows=3, figsize=(7,8))","5783bf78":"data.show_batch(nrows=2, figsize=(7,8))","25effc1f":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke Was here' )","f5c60b16":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQpCOE8z8GqA0SrtzaO6qePWK10_pnkfdqQdw&usqp=CAU)selloeditorial.udec.cl","b461aa52":"#Distribution of the different classes.","e1708180":"#Codes by ilovescience  https:\/\/www.kaggle.com\/tanlikesmath\/cassava-classification-eda-fastai-starter\/notebook","08f80436":"#A quick processing of the image filenames to make it easier to access.","ea74263a":"#I'm Not going to perform any Albumentation (Got some errors\/gave it up) I decided to plot some images."}}