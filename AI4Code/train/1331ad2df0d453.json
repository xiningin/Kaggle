{"cell_type":{"c038a5ca":"code","9b7a2dc9":"code","522b22d0":"code","e3391417":"code","38fac676":"markdown"},"source":{"c038a5ca":"import os\nimport glob\nimport cv2\nimport pandas as pd\nimport re\nimport numpy as np\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9b7a2dc9":"meta = glob.glob('..\/input\/deepfake-detection-faces-*\/*.csv')\nmeta.sort(key=lambda f: int(re.sub('\\D', '', f)))\n\ndfs = []\nfor path in meta:\n    df = pd.read_csv(path)\n    df['path'] = ''\n    path = path.split(\"\/\")[:-1]\n    path = path[0] + '\/' + path[1] + '\/' + path[2] + '\/'\n    for i in range(len(df)):\n        df.loc[i]['path'] = f'{path}{df.loc[i][\"filename\"][:-4]}'\n    dfs.append(df)\n\ntrain_df = pd.concat(dfs)\ntrain_df = train_df.reset_index(drop=True)\nlen(train_df)","522b22d0":"part = 16\nfor j in range((49-16)+1):\n    if part+j != 17:\n        meta = pd.read_csv(f'..\/input\/dfdc-part-{part+j}\/images\/metadata{part+j}.csv')\n    else:\n        meta = pd.read_csv(f'..\/input\/dfdc-part-{part+j}\/images\/metadata{part+j}.json', index_col=0)\n    meta['path'] = ''\n    print(part+j)\n    del_idxs = []\n    for i in range(len(meta)):\n        if os.path.isdir(f'..\/input\/dfdc-part-{part+j}\/images\/{meta.loc[i][\"filename\"][:-4]}'):\n            if len(os.listdir(f'..\/input\/dfdc-part-{part+j}\/images\/{meta.loc[i][\"filename\"][:-4]}')) < 5:\n                del_idxs.append(i)\n            else:\n                meta.loc[i]['path'] = f'..\/input\/dfdc-part-{part+j}\/images\/{meta.loc[i][\"filename\"][:-4]}'\n        else:\n            del_idxs.append(i)\n    print(del_idxs)\n    for idx in del_idxs:\n        meta = meta.drop(idx)\n    train_df = pd.concat([train_df,meta])\n    train_df = train_df.reset_index(drop=True)\nlen(train_df)","e3391417":"train_df","38fac676":"# Kaggle Kernal with all the datasets preloaded\nView this disussion for more information: https:\/\/www.kaggle.com\/c\/deepfake-detection-challenge\/discussion\/134420"}}