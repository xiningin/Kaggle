{"cell_type":{"e08ca604":"code","69a8d79d":"code","7b99384e":"code","09793e11":"code","2b5b7b37":"code","ecb265e3":"code","7ca980e1":"code","3d11a956":"code","19ee7b76":"code","359fc9da":"code","fe3b9a59":"code","bcddc9cd":"code","485d4fc0":"markdown"},"source":{"e08ca604":"import tensorflow as tf\nimport matplotlib.pyplot as plt\n","69a8d79d":"from sklearn.datasets import make_moons\n\nX, y = make_moons(n_samples=1000, noise=0.1, random_state=0)\n\nplt.plot(X[y==0, 0], X[y==0, 1], 'ob', alpha=0.5)\nplt.plot(X[y==1, 0], X[y==1, 1], 'xr', alpha=0.5)\nplt.legend(['0', '1'])","7b99384e":"X.shape","09793e11":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.3,random_state=42)","2b5b7b37":"model = tf.keras.models.Sequential([tf.keras.layers.Dense(1, input_dim=2, activation='sigmoid')])\nmodel.compile(tf.keras.optimizers.Adam(lr=0.05), 'binary_crossentropy', metrics=['accuracy'])\nmodel.fit(X_train, y_train, epochs=200, verbose=0)","ecb265e3":"results = model.evaluate(X_test, y_test)\nresults","7ca980e1":"from mlxtend.plotting import plot_decision_regions\n\nplot_decision_regions(X=X, y=y, clf=model, legend=2)\nplt.xlabel(\"x\", size=5)\nplt.ylabel(\"y\", size=5)\nplt.title('Plot Decision Region Boundary', size=10)\nplt.show()","3d11a956":"model = tf.keras.models.Sequential()\nmodel.add(tf.keras.layers.Dense(4, input_shape=(2,), activation='tanh'))\nmodel.add(tf.keras.layers.Dense(2, activation='tanh'))\nmodel.add(tf.keras.layers.Dense(1, activation='sigmoid'))\nmodel.compile(tf.keras.optimizers.Adam(lr=0.05), 'binary_crossentropy', metrics=['accuracy'])","19ee7b76":"model.fit(X_train, y_train, epochs=100, verbose=0)\n","359fc9da":"model.evaluate(X_test, y_test)","fe3b9a59":"from sklearn.metrics import accuracy_score\n\ny_train_pred = model.predict_classes(X_train)\ny_test_pred = model.predict_classes(X_test)\n\nprint(\"The Accuracy score on the Train set is:\\t{:0.3f}\".format(accuracy_score(y_train, y_train_pred)))\nprint(\"The Accuracy score on the Test set is:\\t{:0.3f}\".format(accuracy_score(y_test, y_test_pred)))","bcddc9cd":"plot_decision_regions(X=X, y=y, clf=model, legend=2)\nplt.xlabel(\"x\", size=5)\nplt.ylabel(\"y\", size=5)\nplt.title('Plot Decision Region Boundary', size=10)\nplt.show()","485d4fc0":"\n\n\n\n\n\n# Introduction\n### A decision boundary is the region of a problem space in which the output label of a classifier is ambiguous. If the decision surface is a hyperplane, then the classification problem is linear, and the classes are linearly separable. Decision boundaries are not always clear cut.Neural Networks need to have bot linear & non-linear part for learning a decision boundary in the real world which are indispensable to each other. Neural networks learn a hyperplane, sphere or a paraboloid and many hypersurfaces in higher dimensions due to its non-linearity.\n\n"}}