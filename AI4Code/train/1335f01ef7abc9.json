{"cell_type":{"a3627bf0":"code","807eebe0":"code","569f762b":"code","30524978":"code","bce7dd8d":"code","c1367438":"code","2512f21b":"code","eda8f0d3":"code","d266d590":"code","0fdca580":"code","85204d9f":"code","56ae6d2a":"code","a61f838e":"code","fb72c650":"code","93c97c9b":"code","7071df4b":"code","b1af7fe1":"code","1bb07dde":"code","1f78f14a":"code","0de6b6f1":"code","3da6c85a":"markdown","76cb5a26":"markdown","52021574":"markdown","5135a5f2":"markdown","1f041682":"markdown","1175fc1a":"markdown","e7189501":"markdown","226cfd8f":"markdown","3e1b84c4":"markdown","fa6cbf1b":"markdown","d8201afa":"markdown","058fb409":"markdown","b484569d":"markdown","6122aac6":"markdown","ddbc7d3c":"markdown","6e711978":"markdown","82905f01":"markdown","db45e145":"markdown","225ae07f":"markdown","8a359e7d":"markdown"},"source":{"a3627bf0":"import numpy as np \nimport pandas as pd \nfrom IPython.display import clear_output\nimport pickle\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","807eebe0":"data = pd.read_csv('\/kaggle\/input\/super-shop-dataset\/Super Shop Data.csv')\ndata.head()","569f762b":"print(\"Data shape :\",data.shape)","30524978":"data.isnull().sum()","bce7dd8d":"# I hide the ouput from this block just because it's very long. You can click the button to show it.\n\ncategory = data.select_dtypes(include='object')\nfor col in category.columns:\n    print(\"\\n============\"+col+\"============\")\n    print(category[col].value_counts())","c1367438":"data.drop(['Country'], axis=1, inplace=True)\ndata['Address'] = data['State']+', '+data['City']+', '+data['Postal Code'].apply(str)","2512f21b":"'''\nfrom collections import defaultdict \nfrom geopy.geocoders import Nominatim\n\ngeolocator = Nominatim(user_agent=\"myGeocoder\")\n\nunique_address = (data['State']+', '+data['City']+', '+data['Postal Code'].apply(str)).unique()\n\nunique_location = defaultdict(lambda :\"Can't find\")\ni = 1\nfor address in unique_address:\n    unique_location[address] = geolocator.geocode(address)\n    print(i)\n    clear_output()\n    i+=1\n    \nwith open('unique_location_dict.pkl', 'wb') as output:\n    pickle.dump(dict(unique_location), output, pickle.HIGHEST_PROTOCOL)\n'''\n\nwith open('..\/input\/unique-location-dict\/unique_location_dict.pkl', 'rb') as input:\n    unique_location_dict = pickle.load(input)","eda8f0d3":"import folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\n\nmy_size = dict(height=400, width=750)\nmap_count = folium.Map(location=[40, -102], \n                       zoom_start = 4,\n                       **my_size) \n\naddress_count = dict(data['Address'].value_counts())\n\nfor_heatmap = []\n\nfor addr in unique_location_dict:\n    for i in range(address_count[addr]):\n        for_heatmap.append([unique_location_dict[addr].latitude, unique_location_dict[addr].longitude])\n\nHeatMap(for_heatmap, radius=15, blur=10).add_to(map_count)\nmap_count","d266d590":"import pandas as pd\nimport urllib.request, json \n\n\nwith urllib.request.urlopen('https:\/\/raw.githubusercontent.com\/PublicaMundi\/MappingAPI\/master\/data\/geojson\/us-states.json') as url:\n    state_geo = json.loads(url.read().decode())\n\nstate_data = data.groupby('State')[['Address']].agg('count').reset_index()\n\nm = folium.Map(location=[40, -102], zoom_start=4,\n               scrollWheelZoom=False, **my_size)\n\nfolium.Choropleth(\n    geo_data=state_geo,\n    name=\"choropleth\",\n    data=state_data,\n    columns=[\"State\", \"Address\"],\n    key_on=\"feature.properties.name\",\n    fill_color=\"YlGn\",\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name=\"Number of sales (%)\",\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\nm","0fdca580":"state_data = data.groupby('State')[['Sales']].agg('sum').reset_index()\n\nm = folium.Map(location=[40, -102], zoom_start=4,\n               scrollWheelZoom=False, **my_size)\n\nfolium.Choropleth(\n    geo_data=state_geo,\n    name=\"choropleth\",\n    data=state_data,\n    columns=[\"State\", \"Sales\"],\n    key_on=\"feature.properties.name\",\n    fill_color=\"PuBu\",\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name=\"$ sales\",\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\nm","85204d9f":"import plotly.express as px\n\nstate_data = data.groupby('State')[['Profit']].agg('sum').reset_index()\n\n\nfig = px.choropleth(state_data, \n                    geojson=state_geo,\n                    featureidkey = \"properties.name\", \n                    locations ='State', \n                    color='Profit',\n                    color_continuous_scale=\"Inferno\",\n                    scope=\"usa\",\n                    labels={'Profit':'Profit'},\n                    **my_size)\n\nfig.update_layout(\n    title_text = 'Profit in each State'\n)\n\nfig.show()","56ae6d2a":"data.groupby(by='Category')[['Quantity','Sales','Profit']].agg('sum').style.background_gradient(sns.light_palette('khaki',as_cmap=True))","a61f838e":"def highlight_max(s):\n    is_profit = s > 0\n    return ['background-color: turquoise' if v else 'color: red' for v in is_profit]\n\ndata[data['Discount']>0].groupby(by='Discount')[['Quantity','Sales','Profit']].sum().style.apply(highlight_max, subset=['Profit'])","fb72c650":"report_subcat = data.groupby(by=['Category','Sub-Category'])[['Quantity','Sales','Profit']].sum()\nreport_subcat['Profit\/Quantity'] = report_subcat['Profit']\/report_subcat['Quantity']\n\nreport_subcat.style\\\n.apply(highlight_max, subset=['Profit'])\\\n.background_gradient(sns.light_palette('green', as_cmap=True), subset=['Profit\/Quantity'])","93c97c9b":"labels = ['Consumer', 'Corporation', 'Home Office']\nsizes = [19525\/(19525+11608+6744), 11608\/(19525+11608+6744), 6744\/(19525+11608+6744)]\nexplode = (0.1, 0, 0)  \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  \nplt.show()","7071df4b":"temp = data.groupby(by='Segment')[['Quantity','Sales','Profit']].sum()\ntemp['Profit\/Quantity'] = temp['Profit']\/temp['Quantity']\ntemp.style.background_gradient(sns.light_palette('turquoise', as_cmap=True), subset=['Profit'])\\\n.background_gradient(sns.light_palette('green', as_cmap=True), subset=['Profit\/Quantity'])","b1af7fe1":"pd.pivot_table(\n    data=data.query(\"`Sub-Category` != 'Furnishings'\"),\n    index=['Category','Sub-Category'],\n    columns=['Segment'],\n    values='Quantity',\n    aggfunc='sum'\n)","1bb07dde":"temp = data.groupby(by='Ship Mode')[['Quantity','Sales','Profit']].agg('sum')\ntemp['Profit\/Quantity'] = temp['Profit']\/temp['Quantity']\ntemp.style.background_gradient(sns.light_palette('khaki', as_cmap=True), subset=['Quantity'])","1f78f14a":"temp = pd.pivot_table(\n            data=data,\n            index=['Ship Mode'],\n            columns=['Region'],\n            values='Quantity',\n            aggfunc=['sum'],\n            margins=True,\n            margins_name='Total'\n        )\ntemp","0de6b6f1":"(temp.values\/temp.values[-1,:]*100).round(2)","3da6c85a":"All tech products are profitable. Copiers have the most profit gained per unit while tables make the greatest loss.","76cb5a26":"This code block, which I commented out, does create an object storing geo-information of each address in the data. I also saved the object into `.pkl` format in order to use it again later. The object can be found in `Input\/Data Sources` section below.","52021574":"All regions have the same shipping behavior.","5135a5f2":"## 4. Reports","1f041682":"This table below shows the number of each product purchased by each customer segment.","1175fc1a":"# 2. Explore Data Analysis","e7189501":"A discount of 20% off can gain the most profit while a discount of 70% makes the most loss.","226cfd8f":"Half of customers are consumer. While we can gain the most profit from customer segment, we can gain the most profit per unit from home office segment.","3e1b84c4":"### 1.2) Choropleth by State\nThe number of sales in visualized in **address level** looks quite noisy. This time let's see the number of sales in each state using choropleth. It looks like California has greater number of sales.","fa6cbf1b":"## 3. Total profit(\\\\$) in each state\nNext, let's look at the profit in each state. We can see that not all states can make a profit, especiallly Texas. Although Texas has high sales, it doesn't seem to have a profit. We can also see which state is loss from the map. ","d8201afa":"## To visitors,\nIf you go through the first part of this notebook(`Data cleansing`), you will see that the dataset is pretty clean. It may be a toy dataset, I don't know. Anyway, My purpose in creating this notebook is to practice the **visualization** skill. Not only the dataset has location information, but it is also very nice and clean. This would be a good start for me to try visualizing **spatial data**. \n<br>\n\nIf you have some tips, advice, or interesting notebooks, please leave them in the comment section. And don't forget to give me some feedback of this notebook <br>\nThank you in advance!","058fb409":"Since the data is very clean, we don't have a job to do much.","b484569d":"60% of sales is shipped by standard class.","6122aac6":"___\n**Thank you** for reading this notebook till the end. If you find this notebook useful, please upvote :)","ddbc7d3c":"## 1) Number of sales in each state\nFirst, we will see how the number of sales distributes across all the states.","6e711978":"# 1. Data cleansing","82905f01":"Although the quantity of tech product sold is a lot less than office product does, tech product can gain more sales and profit.","db45e145":"## 2. Total sales(\\\\$) in each state <br>\nThis time let's see the sales in dollar(\\\\$) instead of number of them. From the map,  we see that not only California and New York but also Texas has noticeable (\\\\$)sales.","225ae07f":"Since all records in the data are in U.S., I decide to drop the `country` column. <br>\nThen, I create a new column to keep the full address of each record so that I can pass it to `geopy.geocoders` object later. We can use that object to find `latitude, longitude` of each address.","8a359e7d":"### 1.1) Heatmap of number of sales\nFrom heatmap, we can clearly see the distribution of the number of salse across the country. We see that most of the sales occurred in east and west region, especially in New York and California."}}