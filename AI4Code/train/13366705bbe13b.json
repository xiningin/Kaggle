{"cell_type":{"a45bf2cb":"code","8cb0b910":"code","4d18611c":"code","85d5c54b":"code","5fe23d0a":"code","86ad4675":"code","19ab02f5":"code","d40e6c2f":"code","81b25dd8":"code","5ea4806c":"code","e41c696d":"code","d9f68f11":"code","11b30892":"code","a44a0912":"code","3197b214":"code","9987f891":"code","aa844ea0":"code","12cc8937":"code","ef068a11":"code","f2e6419e":"code","26b9ee31":"code","121b052b":"code","37e656c8":"code","6b0a39f1":"code","207a2bbe":"code","6056652b":"code","6fde4b14":"code","75e05f05":"code","52e1b765":"code","5d69e296":"code","98e7020f":"code","9c2f3d79":"code","6ce018bf":"code","f841e8da":"code","b17b2122":"code","685743cf":"code","7940dd36":"code","93b398ab":"code","76d12ec3":"code","3ae13117":"code","77890753":"code","08fcd084":"code","0ab38e05":"code","a375a31d":"code","d9a202fd":"code","e46582a5":"code","f4bb8342":"markdown","70256b66":"markdown"},"source":{"a45bf2cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8cb0b910":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","4d18611c":"df = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv\", index_col = 0)\ndf_test = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/test.csv\", index_col = 0)\ndf.head()\n","85d5c54b":"df.isnull().sum()","5fe23d0a":"df[\"Province\/State\"]=df[\"Province\/State\"].fillna(df[\"Country\/Region\"])\ndf.isnull().sum()","86ad4675":"df.info","19ab02f5":"df.describe().T","d40e6c2f":"df.head()","81b25dd8":"df = df[df[\"Date\"] == max(df[\"Date\"])]\ndf=df.reset_index(drop=True)\ndf=df.reset_index(drop=True)\n\n\n","5ea4806c":"df","e41c696d":"df.hist(figsize = (10,10));","d9f68f11":"df.head()","11b30892":"df=df.drop([\"Date\",\"Province\/State\",\"Lat\",\"Long\"], axis=1)","a44a0912":"df=df.groupby([\"Country\/Region\"]).sum()\ndf=df.reset_index()\ndf","3197b214":"keys=df[\"Country\/Region\"]\nkeys","9987f891":"df.set_index(keys, drop=False,inplace=True)\ndf=df.drop([\"Country\/Region\"], axis=1)\ndf","aa844ea0":"kmeans = KMeans(n_clusters = 4)","12cc8937":"kmeans","ef068a11":"k_fit = kmeans.fit(df)","f2e6419e":"k_fit.n_clusters","26b9ee31":"k_fit.cluster_centers_","121b052b":"k_fit.labels_","37e656c8":"k_means = KMeans(n_clusters = 2).fit(df)","6b0a39f1":"kumeler = k_means.labels_","207a2bbe":"kumeler","6056652b":"plt.scatter(df.iloc[:,0], df.iloc[:,1], c = kumeler, s = 50, cmap = \"viridis\");","6fde4b14":"merkezler = k_means.cluster_centers_","75e05f05":"merkezler","52e1b765":"plt.scatter(df.iloc[:,0], df.iloc[:,1], c = kumeler, s = 50, cmap = \"viridis\")\nplt.scatter(merkezler[:,0], merkezler[:,1], c = \"black\", s = 200, alpha=0.5);","5d69e296":"ssd = []\n\nK = range(1,30)\n\nfor k in K:\n    kmeans = KMeans(n_clusters = k).fit(df)\n    ssd.append(kmeans.inertia_)","98e7020f":"plt.plot(K, ssd, \"bx-\")\nplt.xlabel(\"Total K Distance Against Different K Values\")\nplt.title(\"Elbow Method for Optimum Cluster Number\")","9c2f3d79":"!pip install yellowbrick","6ce018bf":"from sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\nfrom yellowbrick.cluster import KElbowVisualizer","f841e8da":"kmeans = KMeans()\nvisu = KElbowVisualizer(kmeans, k = (2,20))\nvisu.fit(df)\nvisu.poof()","b17b2122":"kmeans = KMeans(n_clusters = 4).fit(df)\nkmeans","685743cf":"df","7940dd36":"kumeler = kmeans.labels_","93b398ab":"pd.DataFrame({\"Country\/Region\": df.index, \"Kumeler\": kumeler})","76d12ec3":"df[\"Kume_No\"] = kumeler","3ae13117":"df.head()","77890753":"df.sort_values(\"ConfirmedCases\",ascending=False)","08fcd084":"df.groupby([\"Kume_No\"]).sum()","0ab38e05":"df[df[\"Kume_No\"]==1]","a375a31d":"df[df[\"Kume_No\"]==2]","d9a202fd":"df[df[\"Kume_No\"]==3]","e46582a5":"df[df[\"Kume_No\"]==0].head(90)","f4bb8342":"Libraries","70256b66":"**Unsupervised Learning**"}}