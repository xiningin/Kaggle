{"cell_type":{"90a22ee4":"code","41f86ab4":"code","ae0bcb82":"code","c00d8589":"code","cab881a8":"code","6201f9d5":"code","a6b263fa":"code","75e6dd00":"code","cb4866b0":"code","d4daffc2":"code","bd602a2d":"code","de4699a3":"code","53f34da2":"code","ca6c5af9":"code","cd23b7dc":"code","cbc7b4d9":"code","c9ec17b7":"code","e2c81925":"code","0c666869":"code","1dcb20ef":"code","295ff08e":"code","27a75a1b":"code","a2835234":"code","43b8086f":"code","ce383867":"code","2535a76c":"code","2ae80dc8":"code","64a705d9":"code","37d4cf37":"code","b1eca2e9":"code","2d34148e":"code","58eaad39":"code","aa5aa36c":"code","9d177605":"code","14693d1d":"code","682ebfd3":"code","f92a34dd":"code","3464e703":"code","04d36f33":"code","5409ba71":"code","1f8c2e41":"code","e984c75a":"code","04e3df03":"markdown","6b6aa0c2":"markdown","e2b0d32f":"markdown","78ed024d":"markdown","9ce63f6e":"markdown","454c4c19":"markdown","fc2fd39f":"markdown","7a738ac8":"markdown","52c8accb":"markdown","3385f9d2":"markdown","0a2dc7d9":"markdown","b2f19ea5":"markdown","686b9196":"markdown","dcb6512b":"markdown","4625903d":"markdown","9904cee8":"markdown","8f9d5606":"markdown","6e399888":"markdown","ce6be641":"markdown","9a98f190":"markdown","88cb2a68":"markdown","01cff194":"markdown","e1bd050f":"markdown","8043af4e":"markdown","70349785":"markdown","a77874c5":"markdown","a56c32d1":"markdown","d8f02128":"markdown","9096482b":"markdown","e2ded8d2":"markdown","40a5c567":"markdown","a27b6b30":"markdown","abb708b8":"markdown","0c009f03":"markdown","caacd3c0":"markdown","042f48e7":"markdown","4658b0ac":"markdown","74be3206":"markdown","7f62ef4d":"markdown","308b6d89":"markdown","1879800b":"markdown","7bd31684":"markdown"},"source":{"90a22ee4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nfrom datetime import datetime, date, timedelta\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","41f86ab4":"marketing_qualified_leads = pd.read_csv(\"\/kaggle\/input\/marketing-funnel-olist\/olist_marketing_qualified_leads_dataset.csv\")\nclosed_deals_dataset      = pd.read_csv(\"\/kaggle\/input\/marketing-funnel-olist\/olist_closed_deals_dataset.csv\")\norder_itens_dataset       = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")\ndf_products               = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_products_dataset.csv\")","ae0bcb82":"marketing_qualified_leads.head()","c00d8589":"closed_deals_dataset.head()","cab881a8":"order_itens_dataset.head()","6201f9d5":"df_funnel = marketing_qualified_leads.merge(closed_deals_dataset, on='mql_id', how='left')","a6b263fa":"df_funnel.head()","75e6dd00":"df_funnel_items = df_funnel.dropna(subset=[\"seller_id\"]).merge(order_itens_dataset, on='seller_id', how='left')\ndf_funnel_items = df_funnel_items.dropna(subset=[\"product_id\"])","cb4866b0":"df_funnel_items.head()","d4daffc2":"df_funnel_products = df_funnel_items.merge(df_products, on=\"product_id\", how=\"left\")","bd602a2d":"df_funnel_products.head()","de4699a3":"df_funnel_products['won_date'][0]","53f34da2":"df_funnel_products[\"won_date\"] = df_funnel_products[\"won_date\"].apply(lambda d: datetime.strptime(d,\"%Y-%m-%d %H:%M:%S\"))","ca6c5af9":"df_funnel_products['won_date'][0]","cd23b7dc":"df_funnel_products[\"first_contact_date\"] = df_funnel_products[\"first_contact_date\"].apply(lambda d: datetime.strptime(d,\"%Y-%m-%d\"))","cbc7b4d9":"df_funnel_products.seller_id.unique().shape[0]","c9ec17b7":"df_funnel_products.business_segment.unique()","e2c81925":"analisys  = df_funnel_products.business_segment.value_counts()","0c666869":"fig = px.pie(values=analisys, names=analisys.index, title='Most common business segments ')\nfig.show()","1dcb20ef":"health_beauty = df_funnel_products.where(df_funnel_products['business_segment'] == 'health_beauty').dropna(subset=[\"seller_id\"])\n","295ff08e":"health_beauty.seller_id.unique().shape[0]","27a75a1b":"fig = px.histogram(health_beauty.seller_id, x=\"seller_id\").update_xaxes(categoryorder=\"total descending\")\nfig.show()","a2835234":"health_beauty_init_date    = health_beauty.groupby(by = 'seller_id').min()['first_contact_date']\nhealth_beauty_oldest_seller= health_beauty_init_date.sort_values(axis=0, ascending=True)\nhealth_beauty_oldest_seller","43b8086f":"health_beauty_won_date_max= health_beauty.groupby(by = 'seller_id').max()['won_date']","ce383867":"health_beauty_days_sellers = (health_beauty_won_date_max-health_beauty_init_date).apply(lambda d: d.days).to_frame(name='days_')","2535a76c":"health_beauty_count = health_beauty.groupby(by = 'seller_id').count()['mql_id'].to_frame(name ='count')","2ae80dc8":"health_beauty_days_sellers = health_beauty_days_sellers.merge(health_beauty_count, on='seller_id', how='left')\n","64a705d9":"health_beauty_days_sellers['mean'] = health_beauty_days_sellers['count'] \/health_beauty_days_sellers['days_']","37d4cf37":"health_beauty_days_sellers.sort_values(axis=0, ascending=False,by='mean')","b1eca2e9":"fig = px.bar(health_beauty_days_sellers['mean'], x=health_beauty_days_sellers.index, y=['mean']).update_xaxes(categoryorder=\"total descending\")\nfig.show()","2d34148e":"fig = px.scatter(health_beauty_days_sellers, x = \"days_\" , y = \"count\")\nfig.show()","58eaad39":"watches = df_funnel_products.where(df_funnel_products['business_segment'] == 'watches').dropna(subset=[\"seller_id\"])","aa5aa36c":"watches.seller_id.unique().shape[0]","9d177605":"fig = px.histogram(watches.seller_id, x=\"seller_id\").update_xaxes(categoryorder=\"total descending\")\nfig.show()","14693d1d":"watches_init_date    = watches.groupby(by = 'seller_id').min()['first_contact_date']\nwatches_oldest_seller= watches_init_date.sort_values(axis=0, ascending=True)\nwatches_oldest_seller","682ebfd3":"watches_won_date_max= watches.groupby(by = 'seller_id').max()['won_date']","f92a34dd":"watches_days_sellers = (watches_won_date_max-watches_init_date).apply(lambda d: d.days).to_frame(name='days_')","3464e703":"watches_count = watches.groupby(by = 'seller_id').count()['mql_id'].to_frame(name ='count')","04d36f33":"watches_days_sellers = watches_days_sellers.merge(watches_count, on='seller_id', how='left')","5409ba71":"watches_days_sellers['mean'] = watches_days_sellers['count'] \/watches_days_sellers['days_']","1f8c2e41":"watches_days_sellers.sort_values(axis=0, ascending=False,by='mean')","e984c75a":"fig = px.bar(watches_days_sellers['mean'], x=watches_days_sellers.index, y=['mean']).update_xaxes(categoryorder=\"total descending\")\nfig.show()","04e3df03":"# **Watches business segment.**","6b6aa0c2":"**marketing_qualified_leads**<\/p>\n*Columns | mql_id\t| first_contact_date | landing_page_id | origin* \n<p><\/p>\n<p>mql_id : Marketing Qualified Lead id <\/p>\n<p>first_contact_date : Date of first contact between seller and customer  <\/p>\n<p>landing_page_ID : Landing page id where the lead was acquired  <\/p>\n<p>origin : Type of media where the lead was acquired <\/p>","e2b0d32f":"There are only 3 sellers in this segment.","78ed024d":"Marketing Funnel Dataset Schema","9ce63f6e":"**order_itens_dataset**<\/p>\n*Columns | order_id | order_item_id | product_id | seller_id | shipping_limit_date | price | freight_value*\n<p><\/p>\n\n\n<p>order_id: sequential number identifying number of items included in the same order <\/p>\n<p>product_id: Product unique identifier<\/p>\n<p>seller_id: Seller unique identifier<\/p>\n<p>shipping_limit_date: Shows the seller shipping limit date for handling the order over to the logistic partner<\/p>\n<p>price: Item price <\/p>\n<p>freight_value: Item freight value item (if an order has more than one item the freight value is splitted between items) <\/p>","454c4c19":"Three sales representatives are responsible for most of the deals in this segment, specially the first one. This could be one method to determine which is the best seller representative, but other methods are showed on the next steps.","fc2fd39f":"Changing the *won_date* (deal closing date) to a timestamp, using the datetime library. This action makes it easy to order and filter by date.","7a738ac8":"Now, the *first_contact_date* will be transformed into a timestamp.","52c8accb":"Selecting specifically the *health_beauty* business segment with the 'dropna' pandas funcion, there are only 45 sellers.","3385f9d2":"# **A close look at the 'Health and beauty' business segment**","0a2dc7d9":"[](http:\/\/)<h1>OBJECTIVE<\/h1>","b2f19ea5":"<h1>INTRODUCTION<\/h1>\nHello, we are researchers at the Mau\u00e1 Technology Institute, in Brazil. In this project we will present some objectives that were defined from the crossing of two datasets provided by Olist Store.<br>\n\n\nby [Gabriel Lima](http:\/\/https:\/\/github.com\/GabrielLima1995),  [Giovanni Schiffini](https:\/\/github.com\/schiffini), [Marcio Oliverio](https:\/\/github.com\/oliverra), [Michelle Alves](https:\/\/github.com\/MichelleAlves84) e Rafael Brayner Costa\n\n\n\n<h1>WHAT IS OLIST?<\/h1>\nOlist is a SaaS (Software as a Service) technology company founded in 2015 that offers a solution to increase sales for retailers of all sizes, for most segments, whether they have an online presence or not.\n\nOlist operates in the e-commerce segment, but it is not e-commerce itself. Olist is a large department store within the marketplaces, formed by thousands of other stores throughout Brazil.\n\nThis store is already connected to the main e-commerces in Brazil and offers these privileged spaces so that the participants can advertise their products to the e-commerces visitors.\n\n<h1>COLLECTING INFORMATION ABOUT OLIST<\/h1>\nThis study used the datasets:\n\n*Marketing Funnel:* dataset with information from 8 thousand Marketing Qualified Leads (MQLs) who requested contact with Olist between June 1, 2017 and June 1, 2018. This dataset shows the sales process in multiple dimensions: lead category, catalog size, behavior profile, etc.\n\n*Brazilian E-Commerce Public Dataset:* dataset with information on 100 thousand orders from 2016 to 2018 placed in different markets in Brazil. Its features allow the viewing of an order in multiple dimensions: from order status, price, payment and shipping performance to the customer's location, product attributes and, finally, written reviews by customers. There is also a set of geolocation data that relates Brazilian postal codes to lat \/ lng coordinates.\n\nAll data exposed in these two datasets are real and have been made anonymous and sampled from the original data set.","686b9196":"# ANALYSING THE DATA","dcb6512b":"OList Brazilian E-commerce sales","4625903d":"![](https:\/\/i.imgur.com\/Jory0O3.png)","9904cee8":"Down below, the same analysis is made on the Watches segment, which is the second most important on this dataframe.","8f9d5606":"Counting the transactions on this business segment.","6e399888":"In this case, the sales representatives which sold the most are also the ones with the best sales\/day ratio.","ce6be641":"Obtaining the mean sales per day for each seller id.","9a98f190":"Grouping the sellers by its *won_date*.","88cb2a68":"Subtracting the *initial date* from the *won date*, to determine how long it took, in average, to close a deal.","01cff194":"Olist Dataset Schema","e1bd050f":"![](https:\/\/i.imgur.com\/HRhd2Y0.png)","8043af4e":"As we can see above, the mean sales per day is a better method to analyse this data. Some sales representatives may seem to sell less in the general terms, but they have a better sale\/day ratio. The main sale representative, harshed as \"c70c\", is considered the first in both methods. Most of his transactions are won on the same day they begun, resulting in this \"zero days\" mean.","70349785":"# DESCRIPTION OF THE COLUMNS","a77874c5":"Merging the *order_itens_dataset* from *seller_id*. The \"left\" method inserts the new data at the last columns. The *product_id* has been dropped because it was already at the dataframe.","a56c32d1":"Using the *plotly* library, the following chart shows the main business segments on the OList Brazilian ecommerce.","d8f02128":"As we can see above, the dataframe has 380 unique seller ids, so, 380 individual sellers are represented in this dataframe.","9096482b":"Checking the headers of each dataset","e2ded8d2":"Merging the sellers to the total transaction count dataframe.","40a5c567":"Find the best represetant for each deal! For this, probably you will have to create a model capable of using the information from the seller_id in the Brazillian OList ECommerce database to characterize each particular seller, and their products, to finally find the best cluster of representants to use in a particular client\/seller.","a27b6b30":"# Mean sales per day for each sales representative:","abb708b8":"**df_funnel** <\/p>\n\nMerge between *marketing_qualified_leads* and *closed_deals_dataset*\n<p><\/p>\n","0c009f03":"Most of the sales are won on the very first day or within a week. However, some sales take more than 200 days to be confirmed, which is highly illogical.","caacd3c0":"# Sales representative with the most sales:","042f48e7":"There are 28 business segments in this dataframe.","4658b0ac":"Down below, the list of all sellers in this segment and their *first_contact_date*.","74be3206":"**closed_deals_dataset**<\/p>\n*Columns | mql_id |\tseller_id | sdr_id |\tsr_id |\twon_date  |\tbusiness_segment  |\tlead_type |\tlead_behaviour_profile |\thas_company |\thas_gtin  |\taverage_stock |\tbusiness_type |\tdeclared_product_catalog_size\t| declared_monthly_revenue*\n<p><\/p>\n\n\n<p>mql_id : Marketing Qualified Lead ID<\/p>\n<p>seller_id : Seller ID  <\/p>\n<p>sdr_id: Sales development Representative ID <\/p>\n<p>sr_id: Sales Representative ID <\/p>\n<p>won_date: Date the deal was closed <\/p>\n<p>business_segment: Lead business segment (Informed on contact) <\/p>\n<p>lead_type: Lead type (Informed on contact) <\/p>\n<p>lead_behaviour_profile : Lead behaviour profile (SDR identify it on contact)<\/p>\n<p>has_company: Does the lead have a company (formal documentation)? <\/p>\n<p>has_gtin: Does the lead have Global Trade Item Number (barcode) for his products? <\/p>\n<p>average_stock: Lead declared average stock (Informed on contact) <\/p>\n<p>business_type: Type of business (reseller\/manufacturer etc.) <\/p>\n<p>declared_product_catalog_size: Lead declared catalog size (Informed on contact) <\/p>\n<p>declared_monthly_revenue: Lead declared estimated monthly revenue (Informed on contact)  <\/p>","7f62ef4d":"Importing Dataset ","308b6d89":"Now, the *df_products* dataset is merged from the *product_id* column, again attaching its columns to the last positions.","1879800b":"Since *health and beauty* is the most relevant business segment, we are going to look specifically at its data:","7bd31684":"# <b>UNDERSTANDING THE DATA<\/b>"}}