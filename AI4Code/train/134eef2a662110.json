{"cell_type":{"a8eb9968":"code","a4cb4127":"code","0e592431":"code","6aadab40":"code","46cb70b9":"code","1dfb8811":"code","b4229281":"code","3280be07":"code","c412ae5f":"code","6abada52":"markdown","c4db264c":"markdown","8e64d82f":"markdown","4985356b":"markdown","39194717":"markdown","482b7b86":"markdown","18226a02":"markdown","f19b11d3":"markdown","4ff9b530":"markdown"},"source":{"a8eb9968":"import pandas as pd\n\nfrom learntools.advanced_pandas.renaming_and_combining import *\n\npd.set_option('max_rows', 5)\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)","a4cb4127":"check_q1(pd.DataFrame())","0e592431":"reviews.head()","6aadab40":"reviews.rename(columns={'region_1':'region','region_2':'locale'})","46cb70b9":"reviews.rename_axis('wines',axis='rows')","1dfb8811":"gaming_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/g\/gaming.csv\")\ngaming_products['subreddit'] = \"r\/gaming\"\nmovie_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/m\/movies.csv\")\nmovie_products['subreddit'] = \"r\/movies\"","b4229281":"pd.concat([gaming_products,movie_products])","3280be07":"powerlifting_meets = pd.read_csv(\"..\/input\/powerlifting-database\/meets.csv\")\npowerlifting_competitors = pd.read_csv(\"..\/input\/powerlifting-database\/openpowerlifting.csv\")","c412ae5f":"powerlifting_meets.set_index(\"MeetID\").join(powerlifting_competitors.set_index(\"MeetID\"))","6abada52":"# Keep going\n[**Continue to the method chaining workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/605139).","c4db264c":"**Exercise 2**: Set the index name in the dataset to `wines`.","8e64d82f":"**Exercise 3**: The [Things on Reddit](https:\/\/www.kaggle.com\/residentmario\/things-on-reddit\/data) dataset includes product links from a selection of top-ranked forums (\"subreddits\") on Reddit.com. Create a `DataFrame` of products mentioned on *either* subreddit. Use the following data:","4985356b":"**Exercise 1**: `region_1` and `region_2` are pretty uninformative names for locale columns in the dataset. Rename these columns to `region` and `locale`.","39194717":"# Exercises\n\nLook at your data by running the cell below:","482b7b86":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\n\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","18226a02":"# Renaming and combining workbook\n\n## Introduction\n\nThis is the worbook part of the \"Renaming and combining\" section of the Advanced Pandas tutorial. For the reference section, click [here](https:\/\/www.kaggle.com\/residentmario\/renaming-and-combining-reference).\n\nRenaming is covered in its own section in the [\"Essential Basic Functionality\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/basics.html#renaming-mapping-labels) section of the extensive official documentation. Combining is covered by the [\"Merge, join, concatenate\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/merging.html) section there.","f19b11d3":"# Checking Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","4ff9b530":"**Exercise 4**: The [Powerlifting Database](https:\/\/www.kaggle.com\/open-powerlifting\/powerlifting-database) dataset on Kaggle includes one CSV table for powerlifting meets and a separate one for powerlifting competitors. Both tables include references to a `MeetID`, a unique key for each meet (competition) included in the database. Using this, generate a dataset combining the two tables into one. Use the following data:"}}