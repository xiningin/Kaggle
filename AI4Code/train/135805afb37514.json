{"cell_type":{"bc6f1886":"code","7a66005d":"code","9ccc5fdc":"code","275145f2":"code","d815e97f":"code","e08075e6":"code","f187fbac":"code","d343f088":"code","f0752d71":"code","4194abc9":"code","ff6020b3":"code","628fa47c":"code","f3e82aee":"code","afa9dadb":"markdown","41c0cae9":"markdown","f0e1d794":"markdown","07d192be":"markdown","65cfd70f":"markdown","0b1334bd":"markdown","8a4f842d":"markdown","bca630d2":"markdown","e5342875":"markdown","6ba2a4dc":"markdown","da292a3e":"markdown","d0d58999":"markdown","73e34891":"markdown","dd927d36":"markdown","3ae66e4c":"markdown","3cbf3074":"markdown","da093fb9":"markdown","2211e098":"markdown","ba1d5f21":"markdown","eec72922":"markdown"},"source":{"bc6f1886":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# To impute missing Values\nfrom sklearn.impute import SimpleImputer","7a66005d":"# setting up the chart size and background\nplt.rcParams['figure.figsize'] = (16, 8)\nplt.style.use('fivethirtyeight')\n\n# for Interactive Shells\nfrom IPython.display import display","9ccc5fdc":"df = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/test.csv')\nsubmission_sample = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv')","275145f2":"df.head()","d815e97f":"df.shape","e08075e6":"# Total Missing Values\ndf.isnull().sum().sum()","f187fbac":"#printing only 70 columns with highest number of Null values\ndf.isnull().sum().sort_values(ascending = False).to_frame().head(70).rename({0:'Counts'}, axis = 1).T.style.background_gradient('crest')","d343f088":"#printing only 70 columns with highest percentage of Null values\ndisplay(round((df.isnull().sum() \/ (len(df.index)) * 100) , 2).sort_values(ascending = False).head(70).to_frame().rename({0:'%age'}, axis = 1).T.style.background_gradient('magma_r'))\nprint()\nmissing = (df.isnull().sum() \/ (len(df.index)) * 100).to_frame().reset_index().rename({0:'%age'}, axis = 1)\nax = sns.barplot(missing['index'],missing['%age'], palette  = 'magma_r')\nplt.title(\"Percentage of Missing Values\", fontsize = 20)\nplt.xticks(fontsize =7, rotation = 90)\nplt.xlabel(\"Variables\")\nplt.ylabel(\"Percentage of Missing Values\")\nplt.show();","f0752d71":"imputer = SimpleImputer(strategy='median')\ndf_imputed = pd.DataFrame(imputer.fit_transform(df))\n\n# Imputation removed column names hence, getting back the names\ndf_imputed.columns = df.columns\n\n# Checking the final dataset for missing values again.\ndf_imputed.isnull().sum().sort_values(ascending = False).to_frame().reset_index().rename({0:'Count'}, axis =1).head(70).T.style.background_gradient('magma_r')","4194abc9":"df_imputed.describe().style.background_gradient(cmap='bone_r')","ff6020b3":"df_imputed.corr()[['claim']].T.style.background_gradient('copper_r')","628fa47c":"# Reference: https:\/\/www.kaggle.com\/suharkov\/sep-2021-playground-eda-no-model-for-now\ndf_plot = ((df_imputed - df_imputed.min())\/(df_imputed.max() - df_imputed.min()))\nfig, ax = plt.subplots(4, 1, figsize = (25,25))\nsns.boxplot(data = df_plot.iloc[:, 1:30], ax = ax[0])\nsns.boxplot(data = df_plot.iloc[:, 30:60], ax = ax[1])\nsns.boxplot(data = df_plot.iloc[:, 60:90], ax = ax[2])\nsns.boxplot(data = df_plot.iloc[:, 90:120], ax = ax[3])","f3e82aee":"#Reference: https:\/\/www.kaggle.com\/suharkov\/sep-2021-playground-eda-no-model-for-now \nnrows = 20\nncols = 6\ni = 0\nfig, ax = plt.subplots(nrows, ncols, figsize = (25,75))\nfor row in range(nrows):\n    for col in range(ncols):\n        sns.histplot(data = df_imputed.iloc[:, i], bins = 50, ax = ax[row, col], palette  = 'bone_r').set(ylabel = '')\n        i += 1\n\n","afa9dadb":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Outlier Detection<\/li>","41c0cae9":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color:  #c1531f   \">Observations:<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n    ><li > Overall we have <b>1.60%-1.64% <\/b> missing values and <b>variable f31<\/b> has the highest missing values percentage<\/li>\n    > <li> Total missing values:<b> 1820782 <\/b><\/li>\n    > <li> We can use <b>SimpleImputer<\/b> from sklearn to impute missing values. I'm selecting <b>Median<\/b> as the strategy, to take non parametric approach.<\/li>\n><\/ul>\n><\/div>","f0e1d794":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Describing the Data<\/li>\n","07d192be":"\n<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Checking Null Values<\/li>","65cfd70f":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Checking Correlations<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li >Since we have only numerical (Float) type variables we can directly check correlation and obtain some more insights.<\/li>\n><\/ul>\n><\/div>","0b1334bd":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Percentage of Null Values =(sum of null values \/ total number of rows) * 100<\/li>\n","8a4f842d":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Thank you !!<\/li>","bca630d2":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Shape of the data<\/li>","e5342875":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Impute Missing Values<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li >As discussed we will use <b>SimpleImputer<\/b> from sklearn to impute missing values, with median as the strategy<\/li>\n><\/ul>\n><\/div>","6ba2a4dc":"\n<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Importing Required Libraries<\/li>","da292a3e":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Loading the data<\/li>","d0d58999":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Observations<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li >Data has various kind of Distributions and is skewed in various cases.<\/li>\n><li >Some of them are even Gaussian, Binomial (target)<\/li>\n><li >Some ways to get around could be <b> Log Transformation, Outlier Treatment, Various Feature Engineering techniques <\/b> etc.<\/li>\n><\/ul>\n><\/div>","73e34891":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Observations<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li>Independent Variables have very low correlation with target variable (Claim)<\/li>\n><\/ul>\n><\/div>","dd927d36":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Observations:<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li >There are many Outliers and must be treated before finalizing the model.<\/li>\n><li >Some ways could be to use Flooring, Capping methods etc.<\/li>\n><\/ul>\n><\/div>","3ae66e4c":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Distribution of Variables<\/li>","3cbf3074":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Looking at the first 5 rows of the data<\/li>","da093fb9":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color:  #c1531f   \">About the Notebook<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li > This notebook Sole purpose is Exploratory Data Analysis (EDA).<\/li>\n> <li> You can find Missing value imputation, distribution of variables and some decorations around them.<\/li>    \n> <li> This is very general EDA but can set a benchmark for other masterpieces which some of may create in future.<\/li>\n> <li> I didn't divide the data into train and test as the sole purpose of this was to carry out EDA.<\/li>\n><\/ul>\n><\/div>","2211e098":"\n<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Setting up some parameters for Visualization, outputs etc<\/li>\n","ba1d5f21":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \"> Finally:<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li >Even I am beginner looking forward to learn something new. So let me know how can i improve this.<\/li>\n><li >If you like the notebook, kindly upvote so it is visible to most of us.<\/li>\n><\/ul>\n><\/div>","eec72922":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color:  #c1531f   \">Competition Description<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li > The dataset is used for this competition is synthetic, but based on a real dataset and generated using a CTGAN. The original dataset deals with predicting whether a claim will be made on an insurance policy. Although the features are anonymized, they have properties relating to real-world features.<\/li>\n> <li> For ideas on how to improve your score, check out the <a style=\"color:  black\" href=\"https:\/\/www.kaggle.com\/learn\/intro-to-machine-learning\" target=\"_blank\"> <u>Intro to Machine Learning<\/u><\/a> and <a style=\"color:  black\" href=\"https:\/\/www.kaggle.com\/learn\/intermediate-machine-learning\" target=\"_blank\">   <u>Intermediate Machine Learning<\/u><\/a> courses on Kaggle Learn.<\/li>\n><\/ul>\n><\/div>"}}