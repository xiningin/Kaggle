{"cell_type":{"f92cca7b":"code","81009a73":"code","13673c91":"code","a908260d":"code","f82f5e2b":"code","2146d06a":"code","e7e48739":"code","0582850f":"code","64c300d3":"code","12f94518":"code","4d9e4961":"code","497d5908":"code","1b19ad20":"code","c8e36887":"code","88b9e94a":"markdown","2b7434e2":"markdown","829b0727":"markdown","9c4ee7ba":"markdown","3fa00e57":"markdown","b9bb99ab":"markdown","e8c38d7d":"markdown","672b67d1":"markdown"},"source":{"f92cca7b":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n    \n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[target])\n\n    \n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/titanic\/train.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='Survived', id_name='PassengerId')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","81009a73":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\nimport pandas as pd","13673c91":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","a908260d":"X_train.head()","f82f5e2b":"# float64(2), int64(3), object(5)\nX_train.info()","2146d06a":"y_train.head()","e7e48739":"# \uc0dd\uc874 \ube44\uc728\ny_train['Survived'].value_counts()","0582850f":"y = y_train[\"Survived\"]\n\n# sex\ub9cc \uc6d0\ud56b\uc778\ucf54\ub529 \ub428\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(X_train[features])\ntest = pd.get_dummies(X_test[features])","64c300d3":"X.shape, test.shape","12f94518":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=200, max_depth=7, random_state=2021)\nmodel.fit(X, y)\npredictions = model.predict(test)","4d9e4961":"model.score(X, y)","497d5908":"output = pd.DataFrame({'PassengerId': X_test.PassengerId, 'Survived': predictions})\noutput.head()","1b19ad20":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\noutput.to_csv('1234567.csv', index=False)","c8e36887":"model.score(test, y_test['Survived'])","88b9e94a":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","2b7434e2":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","829b0727":"## \uacb0\uacfc \uccb4\uc810 (\uc218\ud5d8\uc790\ub294 \uc54c \uc218 \uc5c6\ub294 \ubd80\ubd84\uc784)","9c4ee7ba":"## \uc0dd\uc874\uc5ec\ubd80 \uc608\uce21\ubaa8\ub378 \ub9cc\ub4e4\uae30\n### \ud559\uc2b5\uc6a9 \ub370\uc774\ud130 (X_train, y_train)\uc744 \uc774\uc6a9\ud558\uc5ec \uc0dd\uc874 \uc608\uce21 \ubaa8\ud615\uc744 \ub9cc\ub4e0 \ud6c4, \uc774\ub97c \ud3c9\uac00\uc6a9 \ub370\uc774\ud130(X_test)\uc5d0 \uc801\uc6a9\ud558\uc5ec \uc5bb\uc740 \uc608\uce21\uac12\uc744 \ub2e4\uc74c\uacfc \uac19\uc740 \ud615\uc2dd\uc758 CSV\ud30c\uc77c\ub85c \uc0dd\uc131\ud558\uc2dc\uc624(\uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 accuracy \ud3c9\uac00\uc9c0\ud45c\uc5d0 \ub530\ub77c \ucc44\uc810)\n\n(\uac00) \uc81c\uacf5 \ub370\uc774\ud130 \ubaa9\ub85d\n- y_train: \uc0dd\uc874\uc5ec\ubd80(\ud559\uc2b5\uc6a9)\n- X_trian, X_test : \uc2b9\uac1d \uc815\ubcf4 (\ud559\uc2b5\uc6a9 \ubc0f \ud3c9\uac00\uc6a9)\n\n(\ub098) \ub370\uc774\ud130 \ud615\uc2dd \ubc0f \ub0b4\uc6a9\n- y_trian (712\uba85 \ub370\uc774\ud130)\n\n**\uc2dc\ud5d8\ud658\uacbd \uc138\ud305\uc740 \uc608\uc2dc\ubb38\uc81c\uc640 \ub3d9\uc77c\ud55c \ud615\ud0dc\uc758 X_train, y_train, X_test \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uae30 \uc704\ud568\uc784**\n\n### \uc720\uc758\uc0ac\ud56d\n- \uc131\ub2a5\uc774 \uc6b0\uc218\ud55c \uc608\uce21\ubaa8\ud615\uc744 \uad6c\ucd95\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc801\uc808\ud55c \ub370\uc774\ud130 \uc804\ucc98\ub9ac, \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1, \ubd84\ub958\uc54c\uace0\ub9ac\uc998, \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd, \ubaa8\ud615 \uc559\uc0c1\ube14 \ub4f1\uc774 \uc218\ubc18\ub418\uc5b4\uc57c \ud55c\ub2e4.\n- \uc218\ud5d8\ubc88\ud638.csv\ud30c\uc77c\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\ub3c4\ub85d \ucf54\ub4dc\ub97c \uc81c\ucd9c\ud55c\ub2e4.\n- \uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 accuracy\ub85c \ud3c9\uac00\ud568\n\ncsv \ucd9c\ub825\ud615\ud0dc\n\n![image.png](attachment:de1920de-121e-47c3-a61f-e905386713bf.png)","3fa00e57":"## \ubaa8\ub378 \ubc0f \ud3c9\uac00","b9bb99ab":"## Start","e8c38d7d":"## EDA","672b67d1":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)"}}