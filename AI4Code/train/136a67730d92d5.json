{"cell_type":{"add19980":"code","034c5984":"code","ee84662c":"code","517c5df1":"code","878d7b6d":"code","fb430005":"code","314f1b59":"code","8ff7248d":"code","1b9defe0":"code","4ce2e020":"code","42971e6a":"code","708f34f2":"code","2ea60c2b":"code","c0d249b0":"code","bf51bbaf":"code","720e0190":"code","4be94816":"code","412f07b3":"code","02ed1c5f":"code","7c2ee105":"code","d2931233":"code","eb7b085f":"markdown","25e704cd":"markdown","2349fd9b":"markdown"},"source":{"add19980":"# install pycaret\n!pip install pycaret","034c5984":"# import libraries\nimport pandas as pd\nimport numpy as np","ee84662c":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","517c5df1":"# check data types\ndata.dtypes","878d7b6d":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","fb430005":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","314f1b59":"!pip install pandas-profiling","8ff7248d":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","1b9defe0":"# check missing values\ndata.isnull().sum()","4ce2e020":"round(data.Churn.value_counts()*100 \/ len(data),2)","42971e6a":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","708f34f2":"data[categorical].nunique()","2ea60c2b":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","c0d249b0":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","bf51bbaf":"catboost= create_model('catboost')","720e0190":"print(catboost)","4be94816":"tuned_catboost = tune_model(catboost,optimize = 'Precision') #tuned on Precision","412f07b3":"evaluate_model(tuned_catboost) #Graphical plot ","02ed1c5f":"predict_model(tuned_catboost)# Test data evaluation ","7c2ee105":"final_catboost = finalize_model(tuned_catboost) # Final model \nfinal_catboost","d2931233":"predict_model(final_catboost)#final test model evaluation ","eb7b085f":"# Data Preparation","25e704cd":"# Missing Values","2349fd9b":"# Exploratory Data Analysis"}}