{"cell_type":{"17b17217":"code","e6e2dd18":"code","4589d897":"code","3bf24b18":"code","5a614655":"code","44f1b8c4":"code","428ee54e":"code","aceaf246":"code","0a0fce79":"code","9e27a453":"code","4a85bd05":"code","7be13d74":"code","093db56f":"code","81f100c1":"code","c0d1b012":"code","899cc053":"code","2913e0e0":"code","76c0d1c9":"code","5cb4307b":"code","946324c0":"code","725b1254":"code","61b53d0e":"code","1d73dc48":"code","9db428ad":"code","4508ee1e":"code","125dd628":"code","76b45e31":"code","b296d061":"code","b3e4e64f":"code","00183b11":"code","61d2b512":"code","4f74d781":"markdown","b71bf7a5":"markdown","8e7938e6":"markdown","441265fe":"markdown","4e74aecb":"markdown","4660698f":"markdown","59c7dc56":"markdown","51fad04e":"markdown","a272fd81":"markdown","2795c91c":"markdown","cb2a523d":"markdown","3eb5afc3":"markdown","8d3dde50":"markdown","caedc860":"markdown","a1f1d175":"markdown","02d9cb00":"markdown","13be6e0d":"markdown","dbf06002":"markdown","6d476eea":"markdown","57155ce1":"markdown","c0b7236a":"markdown","53f1e3eb":"markdown","27f24ee2":"markdown","029a41ed":"markdown","2bdf1d27":"markdown","2ee4687a":"markdown"},"source":{"17b17217":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport missingno as misno\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6e2dd18":"df = pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf.head()","4589d897":"misno.matrix(df);","3bf24b18":"df.dtypes","5a614655":"plt.figure(figsize=(10,6))\nplt.xticks(rotation=90)\nplt.bar(df.columns,df.nunique());\ndf.nunique()","44f1b8c4":"plt.figure(figsize = (12,10))\nsns.countplot(df['gender']);","428ee54e":"sns.pairplot(df)\nplt.show()","aceaf246":"sns.heatmap(df.corr(),annot=True);","0a0fce79":"for i in df.columns:\n    if df[i].dtypes != \"O\":\n        sns.distplot(df[i],hist_kws=dict(edgecolor=\"k\", linewidth=1,color='k'),color='b')\n        plt.show()\n","9e27a453":"df.groupby([\"parental level of education\"]).mean().plot.bar()\nplt.show()","4a85bd05":"df_fem = df[df[\"gender\"]==\"female\"]\nplt.xticks(rotation=90)\nplt.title(\"female education\")\nplt.bar(df_fem[\"parental level of education\"].unique(),df_fem[\"parental level of education\"].value_counts(),color=[\"purple\"]);","7be13d74":"df_male = df[df[\"gender\"]==\"male\"]\nplt.xticks(rotation=90)\nplt.title(\"male education\")\nplt.bar(df_male[\"parental level of education\"].unique(),df_male[\"parental level of education\"].value_counts());","093db56f":"df.groupby([\"lunch\"]).mean().plot.bar()\nplt.show()","81f100c1":"plt.bar(df_fem[\"lunch\"].unique(),df_fem[\"lunch\"].value_counts(),color=[\"purple\"]);\nprint(df_fem[\"lunch\"].value_counts())","c0d1b012":"plt.bar(sorted(df_male[\"lunch\"].unique(),reverse=True),df_male[\"lunch\"].value_counts());\nprint(df_male[\"lunch\"].value_counts())","899cc053":"pivot = pd.pivot_table(data = df, index = [\"parental level of education\"], columns = [\"race\/ethnicity\"], aggfunc = {'math score' : np.mean})\nhm = sns.heatmap(data = pivot, annot = True,cmap=\"flare\")\nbottom, top = hm.get_ylim()\nhm.set_ylim(bottom + 0.5, top - 0.5)\nplt.show()","2913e0e0":"pivot = pd.pivot_table(data = df, index = [\"parental level of education\"], columns = [\"race\/ethnicity\"], aggfunc = {'writing score' : np.mean})\nhm = sns.heatmap(data = pivot, annot = True,cmap=\"flare\")\nbottom, top = hm.get_ylim()\nhm.set_ylim(bottom + 0.5, top - 0.5)\nplt.show()","76c0d1c9":"pivot = pd.pivot_table(data = df, index = [\"parental level of education\"], columns = [\"race\/ethnicity\"], aggfunc = {'reading score' : np.mean})\nhm = sns.heatmap(data = pivot, annot = True,cmap=\"flare\")\nbottom, top = hm.get_ylim()\nhm.set_ylim(bottom + 0.5, top - 0.5)\nplt.show()","5cb4307b":"index = {0:\"Group A\",1:\"Group B\",2:\"Group C\",3:\"Group D\",4:\"Group E\"}\n\nA = df[df[\"race\/ethnicity\"]==\"group A\"]\nB = df[df[\"race\/ethnicity\"]==\"group B\"]\nC = df[df[\"race\/ethnicity\"]==\"group C\"]\nD = df[df[\"race\/ethnicity\"]==\"group D\"]\nE = df[df[\"race\/ethnicity\"]==\"group E\"]","946324c0":"for i,v in enumerate([A,B,C,D,E]):\n    v[\"parental level of education\"].value_counts().plot(kind=\"bar\")\n    plt.title(f\"degrees and count in {index[i]}\")\n    plt.xticks(rotation=45)\n    plt.show();","725b1254":"for i,v in enumerate([A,B,C,D,E]):\n    print(index[i],\" : \\n\")\n    print(v[\"parental level of education\"].value_counts())\n    print(\"total number of students :\" ,sum(v[\"parental level of education\"].value_counts()))\n    print(\"\\n--------------------------------------------------\")\n    ","61b53d0e":"plt.figure(figsize=(12,10))\nsns.countplot(df['race\/ethnicity'], hue = df['gender']);","1d73dc48":"df[\"red\/wri\"] = df[\"reading score\"]\/df[\"writing score\"] \ndf[\"gend\/gro\"] = df[\"gender\"]+df[\"race\/ethnicity\"]","9db428ad":"def linearlabel(df,columns=None):\n    if columns != None and type(columns) == list:\n        df = pd.get_dummies(data=df,columns=columns,drop_first=True)\n        \n    return df","4508ee1e":"df = linearlabel(df,columns=[\"gender\",\"race\/ethnicity\",\"parental level of education\",\"lunch\",\"test preparation course\",\"gend\/gro\"]) # one hot encoding for a linear model","125dd628":"df.head()","76b45e31":"from sklearn.model_selection import train_test_split\n\nx = df.drop(\"gender_male\",axis=1)\ny = df[\"gender_male\"]\n\nX_train, X_test, y_train, y_test = train_test_split(x,y,test_size=0.2)","b296d061":"from sklearn.svm import SVC\n\nclf = SVC(kernel=\"linear\")\n\nclf.fit(X_train,y_train)","b3e4e64f":"from sklearn.metrics import f1_score,confusion_matrix\n\nprint(\"f1 score training : \",f1_score(y_train,clf.predict(X_train)))\nprint(\"f1 score testing : \",f1_score(y_test,clf.predict(X_test)))\n\nsns.heatmap(confusion_matrix(y_test,clf.predict(X_test)),annot=True);","00183b11":"from sklearn.linear_model import LogisticRegression\n\nclf_2 = LogisticRegression()\n\nclf_2.fit(X_train,y_train)","61d2b512":"print(\"f1 score training : \",f1_score(y_train,clf_2.predict(X_train)))\nprint(\"f1 score testing : \",f1_score(y_test,clf_2.predict(X_test)))\n\nsns.heatmap(confusion_matrix(y_test,clf_2.predict(X_test)),annot=True);","4f74d781":"Group E has the highest math score","b71bf7a5":"Group E has the highest writing score","8e7938e6":"Predicting the gender column","441265fe":"* No Nan values spotted.","4e74aecb":"See numbers of unique values which if there is a constant feature to remove.","4660698f":"Seem like group E has male count nearly equal to the female count same as group D ,so the scores might be affected by other external factors like the scoring method or how they assign students to each group","59c7dc56":"After seeing this correlation and see the pattern between writing score and reading score we may creat a feature by dividing them together or merging them","51fad04e":"By looking at the bar plot we see that master's degree score in math,reading and writing is the highest which is reasonable","a272fd81":"## generating new features","2795c91c":"Most of males have associate's degree, some collage and high school degree","cb2a523d":"## importing the tools","3eb5afc3":"Most of people have a standard lunch , will the type of lunch affect the scores?","8d3dde50":"## EDA","caedc860":"Most of females have associate's degree and some collage","a1f1d175":"## Model","02d9cb00":"### Using Logistic Regression","13be6e0d":"group E has the highest math ,reading and writing score \n\n#### what degrees are in these groups and how many ?","dbf06002":"### Splitting the data","6d476eea":"Most of the features are object data type which will affect our model afterwards by the way labeling it.","57155ce1":"we see that most of Group E are associate's degree and some collage degree which affected the scores ,but still less than Group C,B,D as numbers of these degrees \n\ncan this change affected by the gender?","c0b7236a":"65.5% of males are having a standard lunch ","53f1e3eb":"63.5% of females are having a standard lunch","27f24ee2":"We see numerical columns have a positive correlation with each other.","029a41ed":"most of the samples are females which will make the data more prone to the females gender","2bdf1d27":"## Study the data","2ee4687a":"### Using SVC model"}}