{"cell_type":{"0fb536fe":"code","bd36b993":"code","05623e1e":"code","2b39629c":"code","7b40a6ad":"code","ad48fcf5":"code","5c0ecb45":"code","0ae3c32a":"code","9790a53b":"code","104b8e68":"code","9974aae2":"code","79d283a9":"code","45ce3fc6":"code","b7004268":"code","feda6595":"code","33ea0bd2":"code","3a8320e7":"code","afa51972":"code","7506587f":"code","e30f6b43":"code","cd0148dd":"code","d400193a":"code","2385da19":"code","3d32908a":"code","f9a2c1c8":"code","49d5200a":"code","c13c5431":"code","eb5f7096":"code","10912042":"code","c8b8807c":"code","0f077dfe":"markdown","1e5a9078":"markdown","cc919f83":"markdown","ff56cecf":"markdown","1d822039":"markdown","90f678af":"markdown","3ea99403":"markdown","e17e05ba":"markdown","7290f935":"markdown","bc71c935":"markdown","2c29abe3":"markdown","11811e25":"markdown","a394eb0b":"markdown","6d16a9a6":"markdown","77e3e205":"markdown"},"source":{"0fb536fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bd36b993":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import GridSearchCV\nimport warnings","05623e1e":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest2=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntitanic=pd.concat([train, test], sort=False)\nlen_train=train.shape[0]","2b39629c":"import pandas as pd\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","7b40a6ad":"titanic.dtypes.sort_values()","ad48fcf5":"titanic.select_dtypes(include='int').head()","5c0ecb45":"titanic.select_dtypes(include='object').head()","0ae3c32a":"titanic.select_dtypes(include='float').head()","9790a53b":"titanic.isnull().sum()[titanic.isnull().sum()>0]","104b8e68":"train.Fare=train.Fare.fillna(train.Fare.mean())\ntest.Fare=test.Fare.fillna(train.Fare.mean())","9974aae2":"train.Embarked=train.Embarked.fillna(train.Embarked.mode()[0])\ntest.Embarked=test.Embarked.fillna(train.Embarked.mode()[0])","79d283a9":"train['title']=train.Name.apply(lambda x: x.split('.')[0].split(',')[1].strip())\ntest['title']=test.Name.apply(lambda x: x.split('.')[0].split(',')[1].strip())","45ce3fc6":"newtitles={\n    \"Capt\":       \"Officer\",\n    \"Col\":        \"Officer\",\n    \"Major\":      \"Officer\",\n    \"Jonkheer\":   \"Royalty\",\n    \"Don\":        \"Royalty\",\n    \"Sir\" :       \"Royalty\",\n    \"Dr\":         \"Officer\",\n    \"Rev\":        \"Officer\",\n    \"the Countess\":\"Royalty\",\n    \"Dona\":       \"Royalty\",\n    \"Mme\":        \"Mrs\",\n    \"Mlle\":       \"Miss\",\n    \"Ms\":         \"Mrs\",\n    \"Mr\" :        \"Mr\",\n    \"Mrs\" :       \"Mrs\",\n    \"Miss\" :      \"Miss\",\n    \"Master\" :    \"Master\",\n    \"Lady\" :      \"Royalty\"}","b7004268":"train['title']=train.title.map(newtitles)\ntest['title']=test.title.map(newtitles)","feda6595":"train.groupby(['title','Sex']).Age.mean()","33ea0bd2":"def newage (cols):\n    title=cols[0]\n    Sex=cols[1]\n    Age=cols[2]\n    if pd.isnull(Age):\n        if title=='Master' and Sex==\"male\":\n            return 4.57\n        elif title=='Miss' and Sex=='female':\n            return 21.8\n        elif title=='Mr' and Sex=='male': \n            return 32.37\n        elif title=='Mrs' and Sex=='female':\n            return 35.72\n        elif title=='Officer' and Sex=='female':\n            return 49\n        elif title=='Officer' and Sex=='male':\n            return 46.56\n        elif title=='Royalty' and Sex=='female':\n            return 40.50\n        else:\n            return 42.33\n    else:\n        return Age ","3a8320e7":"train.Age=train[['title','Sex','Age']].apply(newage, axis=1)\ntest.Age=test[['title','Sex','Age']].apply(newage, axis=1)","afa51972":"warnings.filterwarnings(action=\"ignore\")\nplt.figure(figsize=[12,10])\nplt.subplot(3,3,1)\nsns.barplot('Pclass','Survived',data=train)\nplt.subplot(3,3,2)\nsns.barplot('SibSp','Survived',data=train)\nplt.subplot(3,3,3)\nsns.barplot('Parch','Survived',data=train)\nplt.subplot(3,3,4)\nsns.barplot('Sex','Survived',data=train)\nplt.subplot(3,3,5)\nsns.barplot('Ticket','Survived',data=train)\nplt.subplot(3,3,6)\nsns.barplot('Cabin','Survived',data=train)\nplt.subplot(3,3,7)\nsns.barplot('Embarked','Survived',data=train)\nplt.subplot(3,3,8)\nsns.distplot(train[train.Survived==1].Age, color='green', kde=False)\nsns.distplot(train[train.Survived==0].Age, color='orange', kde=False)\nplt.subplot(3,3,9)\nsns.distplot(train[train.Survived==1].Fare, color='green', kde=False)\nsns.distplot(train[train.Survived==0].Fare, color='orange', kde=False)","7506587f":"train['Relatives']=train.SibSp+train.Parch\ntest['Relatives']=test.SibSp+test.Parch","e30f6b43":"warnings.filterwarnings(action=\"ignore\")\nplt.figure(figsize=[3,2])\nsns.barplot('Relatives','Survived',data=train)","cd0148dd":"train.drop(['PassengerId','Name','Ticket','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True)\ntest.drop(['PassengerId','Name','Ticket','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True)","d400193a":"titanic=pd.concat([train, test], sort=False)","2385da19":"titanic=pd.get_dummies(titanic)\ntrain=titanic[:len_train]\ntest=titanic[len_train:]","3d32908a":"# Lets change type of target\ntrain.Survived=train.Survived.astype('int')\ntrain.Survived.dtype","f9a2c1c8":"xtrain=train.drop(\"Survived\",axis=1)\nytrain=train['Survived']\nxtest=test.drop(\"Survived\", axis=1)","49d5200a":"RF=RandomForestClassifier(random_state=1)\nPRF=[{'n_estimators':[10,100],'max_depth':[3,6],'criterion':['gini','entropy']}]\nGSRF=GridSearchCV(estimator=RF, param_grid=PRF, scoring='accuracy',cv=2)\nscores_rf=cross_val_score(GSRF,xtrain,ytrain,scoring='accuracy',cv=5)","c13c5431":"np.mean(scores_rf)","eb5f7096":"svc=make_pipeline(StandardScaler(),SVC(random_state=1))\nr=[0.0001,0.001,0.1,1,10,50,100]\nPSVM=[{'svc__C':r, 'svc__kernel':['linear']},\n      {'svc__C':r, 'svc__gamma':r, 'svc__kernel':['rbf']}]\nGSSVM=GridSearchCV(estimator=svc, param_grid=PSVM, scoring='accuracy', cv=2)\nscores_svm=cross_val_score(GSSVM, xtrain.astype(float), ytrain,scoring='accuracy', cv=5)","10912042":"np.mean(scores_svm)","c8b8807c":"model=GSSVM.fit(xtrain, ytrain)\npred=model.predict(xtest)\noutput=pd.DataFrame({'PassengerId':test2['PassengerId'],'Survived':pred})\noutput.to_csv('submission.csv', index=False)","0f077dfe":"\u540d\u524d\u304b\u3089Mr\u3084Ms\u3092\u629c\u304d\u51fa\u3059\u3002","1e5a9078":"**\u3053\u3053\u304b\u3089\u6b20\u640d\u5024**","cc919f83":"\u5e74\u9f62\u306b\u3064\u3044\u3066\u5c11\u3057\u624b\u3092\u52a0\u3048\u308b","ff56cecf":"\u4e57\u308a\u5834\u306e\u6b20\u640d\u5730\u3092\u6700\u983b\u5024\u3067","1d822039":"\u793e\u4f1a\u7684\u7acb\u5834\u3068\u6027\u5225\u3067\u5206\u3051\u305f\u4e57\u5ba2\u306e\u5e74\u9f62\u306e\u5e73\u5747\u3092\u6b20\u640d\u5024\u306e\u6240\u306b\u4ee3\u5165","90f678af":"svm\u3082\u540c\u69d8\u306b\u53ef\u80fd\u3002","3ea99403":"https:\/\/www.kaggle.com\/goldens\/titanic-on-the-top-with-a-simple-model\n\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002","e17e05ba":"\u305d\u306e\u4fd7\u79f0\u3092\u8077\u696d\u3084\u793e\u4f1a\u7684\u7acb\u5834\u306b\u4e00\u822c\u5316\u3059\u308b\u3002https:\/\/medium.com\/i-like-big-data-and-i-cannot-lie\/how-i-scored-in-the-top-9-of-kaggles-titanic-machine-learning-challenge-243b5f45c8e9\u3000\u3088\u308a","7290f935":"SVM\u306e\u65b9\u304c\u30b9\u30b3\u30a2\u304c\u5fae\u5c0f\u306b\u9ad8\u3044\u306e\u3067\u4e88\u6e2c\u30e2\u30c7\u30eb\u306b\u306fSVM\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","bc71c935":"\u30e2\u30c7\u30eb\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\u6700\u521d\u306bID,Name,Ticket,Sibsp,Parch,Cabin\u3092\u30c7\u30fc\u30bf\u304b\u3089\u5916\u3057\u307e\u3059\u3002\n\u6b21\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5408\u4f53\u3055\u305b\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u30c0\u30df\u30fc\u5909\u6570\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u307e\u305f\u8a13\u7df4\u3068\u30c6\u30b9\u30c8\u306b\u5206\u3051\u307e\u3059\u3002","2c29abe3":" **\u7279\u5fb4\u91cf\u3092\u3044\u3058\u308b\u3002\n\u5bb6\u65cf\u3068\u751f\u5b58\u7387\u306e\u95a2\u4fc2\u3092\u660e\u3089\u304b\u306b\u3059\u308b\u305f\u3081\u306b\u89aa\u3084\u5144\u5f1f\u3092\u4e00\u307e\u3068\u3081\u306b\u3057\u3066\u307f\u308b\u3002Sibsp\u3068Parch\u3092\u8db3\u3057\u3066relatives\u89aa\u985e\u306b\u3059\u308b\u3002\n","11811e25":"\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u4f7f\u3044\u65b9\n\u5f15\u6570\u306b\u306f\u30e2\u30c7\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3001\u305d\u306e\u30e2\u30c7\u30eb\u7279\u6709\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf(\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u5834\u5408\u3060\u3068\u3001\u6c7a\u5b9a\u6728\u306e\u6570(n_estimators)\u30fb\u6df1\u3055\u30fb\u8a55\u4fa1\u57fa\u6e96(\u30b8\u30cb\u3084\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc))\u306e\u7d44\u307f\u5408\u308f\u305b\u30ea\u30b9\u30c8\u3001cv(cross validation)\u306e\u56de\u6570\u3092\u4e0e\u3048\u3066\u3044\u307e\u3059\u3002\n\ncross_val_score\u306f\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u4e2d\u3060\u3051\u3067\u3001\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3092\u884c\u3044\u30b9\u30b3\u30a2\u306e\u78ba\u8a8d\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b\u6ce8\u610f\u3000\n\u30fb\u4ea4\u5dee\u691c\u8a3c\u6cd5\u306f\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u4e2d\u3060\u3051\u3067\u884c\u3046\u306e\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3068\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\n\u30fbGridSearch\u3068cross_vafl_score\u306e\u5f79\u5272\u3068\u305d\u308c\u306b\u542b\u307e\u308c\u308bcv\u306b\u3064\u3044\u3066\u3069\u3046\u3044\u3046\u610f\u5473\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3057\u3063\u304b\u308a\u78ba\u8a8d\u3059\u3079\u304d\u3067\u3059\u3002\n\u30fb\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306fGridSearchCV\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\u6642\u70b9\u3067\u306fxtrain\u3092\u6e21\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3042\u304f\u307e\u3067\u5b66\u7fd2\u306f\u6700\u5f8c\u306bfit\u3067\u884c\u3044\u307e\u3059\u3002\n\u30fb\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u306d\u3002\n\u8a13\u7df4\u30c7\u30fc\u30bf\u8abf\u6574\u2192\u30e2\u30c7\u30eb\u751f\u6210\u2192fit\u2192predict\n\u3053\u306e\u6d41\u308c\u3092\u982d\u306b\u5165\u308c\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002","a394eb0b":"\u904b\u8cc3\u3092\u5e73\u5747\u3067","6d16a9a6":"\u5404\u5909\u6570\u3068\u751f\u5b58\u8005\u306e\u95a2\u4fc2\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u793a\u3059\u3002","77e3e205":"\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5408\u308f\u305b\u308b\u4f5c\u696d\u304c\u7d42\u4e86\u3002\n\u30e2\u30c7\u30eb\u306e\u751f\u6210\u306f\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3084SVM\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3068\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3092\u7528\u3044\u3066\u7cbe\u5ea6\u306e\u5411\u4e0a\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002"}}