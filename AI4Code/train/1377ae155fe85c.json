{"cell_type":{"80c725ef":"code","a94d04b1":"code","40089d87":"code","f5658677":"code","0c1b8e2d":"code","40510c30":"code","47a4e572":"code","2e0c4d60":"code","6bb2ce07":"code","64fb824b":"code","32be52a7":"code","47fbdf0b":"code","dec9c770":"code","d9c06ad2":"code","c4af249f":"code","a9282d2e":"code","871ced12":"code","488deb54":"code","0e812383":"code","294ada06":"code","8171d2dc":"code","230a0341":"markdown","0161f7d8":"markdown","c92a0984":"markdown","0a8365ac":"markdown","8ab5af0b":"markdown","8feb2e62":"markdown","e794fa2b":"markdown","3ad8e7c3":"markdown","8b7e8641":"markdown","51c7e339":"markdown"},"source":{"80c725ef":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[id_name, target])\n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[id_name, target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/adult-census-income\/adult.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='income', null_name='?')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","a94d04b1":"# \uc2dc\ud5d8\ud658\uacbd\uc5d0\uc11c\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc81c\uacf5\ub428\n# import pandas as pd\n# X_test = pd.read_csv(\"data\/X_test.csv\")\n# X_train = pd.read_csv(\"data\/X_train.csv\")\n# y_train = pd.read_csv(\"data\/y_train.csv\")","40089d87":"import pandas as pd\nimport numpy as np","f5658677":"X_train.head()","0c1b8e2d":"X_train.info()","40510c30":"y_train['income'].value_counts()","47a4e572":"X_train.isna().sum(), X_test.isna().sum()","2e0c4d60":"X_train['workclass'].value_counts(), X_train['occupation'].value_counts(), X_train['native.country'].value_counts()","6bb2ce07":"X_test['workclass'].value_counts(), X_test['occupation'].value_counts(), X_test['native.country'].value_counts()","64fb824b":"X_train['workclass'].fillna('Private', inplace = True)\nX_train['occupation'].fillna('Other_service', inplace = True)\nX_train['native.country'].fillna('United-States', inplace = True)\nX_train.isna().sum()","32be52a7":"X_test['workclass'].fillna('Private', inplace = True)\nX_test['occupation'].fillna('Other_service', inplace = True)\nX_test['native.country'].fillna('United-States', inplace = True)\nX_test.isna().sum()","47fbdf0b":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\ncat_col = ['workclass', 'education', 'marital.status', 'occupation', 'relationship', 'race', 'sex', 'native.country']\nnum_col = ['age', 'fnlwgt', 'education.num', 'capital.gain', 'capital.loss', 'hours.per.week']","dec9c770":"encoder = LabelEncoder()\nX_train[cat_col] = X_train[cat_col].apply(encoder.fit_transform)\nX_test[cat_col] = X_test[cat_col].apply(encoder.fit_transform)\nX_train.head()","d9c06ad2":"scaler = StandardScaler()\nX_train[num_col] = scaler.fit_transform(X_train[num_col])\nX_test[num_col] = scaler.fit_transform(X_test[num_col])\nX_train.head()","c4af249f":"from sklearn.model_selection import train_test_split\nX_tr, X_ts, y_tr, y_ts = train_test_split(X_train, y_train['income'], test_size = 0.2, random_state = 504)\nX_tr.shape, X_ts.shape, y_tr.shape, y_ts.shape","a9282d2e":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score","871ced12":"rf = RandomForestClassifier()\nrf.fit(X_tr, y_tr)\nrf_pred = rf.predict(X_ts)\nrf.score(X_tr, y_tr)\nprint(accuracy_score(y_ts, rf_pred))","488deb54":"# sv = SVC()\n# sv.fit(X_tr, y_tr)\n# sv_pred = sv.predict(X_ts)\n# sv.score(X_tr, y_tr)\n# print(accuracy_score(y_ts, sv_pred))","0e812383":"rf.fit(X_train, y_train['income'])\nrf_predi = rf.predict(X_test)\nrf_predi","294ada06":"sub = pd.DataFrame({'id' : y_test['id'], 'income' : rf_predi})\nsub.to_csv('15945.csv', index = False)","8171d2dc":"accuracy_score(y_test['income'], rf_predi)","230a0341":"## \uac80\uc99d\uc6a9 \ub370\uc774\ud130 \ubd84\ub9ac","0161f7d8":"# \uc0ac\uc6a9\uc790 \ucf54\ub529","c92a0984":"## \ucc44\uc810 (\uc218\ud5d8\uc790\ub294 \ud655\uc778 \ubd88\uac00)","0a8365ac":"## \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1","8ab5af0b":"## \ubaa8\ub378 & \ud3c9\uac00","8feb2e62":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","e794fa2b":"## \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30(\uc0dd\ub7b5)","3ad8e7c3":"# \uc131\uc778 \uc778\uad6c\uc870\uc0ac \uc18c\ub4dd \uc608\uce21\n\n- age: \ub098\uc774\n- workclass: \uace0\uc6a9 \ud615\ud0dc\n- fnlwgt: \uc0ac\ub78c\uc758 \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58(final weight)\n- education: \uad50\uc721 \uc218\uc900\n- education.num: \uad50\uc721 \uc218\uc900 \uc218\uce58\n- marital.status: \uacb0\ud63c \uc0c1\ud0dc\n- occupation: \uc5c5\uc885\n- relationship: \uac00\uc871 \uad00\uacc4\n- race: \uc778\uc885\n- sex: \uc131\ubcc4\n- capital.gain: \uc591\ub3c4 \uc18c\ub4dd\n- capital.loss: \uc591\ub3c4 \uc190\uc2e4\n- hours.per.week: \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n- native.country: \uad6d\uc801\n- income: \uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12)","8b7e8641":"## \uacb0\uce21\uce58 \ucc98\ub9ac","51c7e339":"## EDA"}}