{"cell_type":{"e79b2f0f":"code","7707e7b6":"code","5514b44c":"code","5438b6ac":"code","40fca604":"code","d602caa3":"code","f2776fb4":"code","e2927637":"code","07e2226d":"code","f405291c":"code","f6c844e5":"code","70e4c1a8":"code","de1f8676":"code","924858e8":"code","23fd4756":"code","4a9f5c91":"code","77fc9269":"code","dd2fc1ce":"code","6c0895cb":"code","79a50245":"code","0b54593f":"code","2b0f5ba9":"code","6cea9744":"code","d3a5037d":"code","7a16394e":"code","6864edd3":"code","3b8fb978":"code","8746794d":"markdown","978ed649":"markdown","2e38d484":"markdown","5504ff8b":"markdown","38fb71e2":"markdown","aa1cc216":"markdown","497d6332":"markdown","d169aa49":"markdown","a7fa3156":"markdown","026b9c3d":"markdown","a78fa989":"markdown","5856ea10":"markdown","3576688c":"markdown","cf433acc":"markdown","1bed1643":"markdown","6325907f":"markdown","baabbbca":"markdown","e39c7081":"markdown","e8e36dff":"markdown","567951ae":"markdown","bd159b5d":"markdown","39a37390":"markdown","49fc9e90":"markdown","546efe97":"markdown","409d3dc3":"markdown","537899c7":"markdown","74e55e62":"markdown","f95208ea":"markdown","e3f39372":"markdown"},"source":{"e79b2f0f":"import matplotlib.pyplot as plt\n\nplt.plot([1,2,3,4])\nplt.show()","7707e7b6":"import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.arange(0,5,0.01)\n# print(x)\n\nplt.plot(x,[i**2 for i in x])\nplt.show()","5514b44c":"import matplotlib.pyplot as plt\n\nx = range(5)\n\nplt.plot(x,[i*i for i in x], x, [i*i*i for i in x], x, [i**4 for i in x])\nplt.show()","5438b6ac":"import matplotlib.pyplot as plt\n\nx = range(5)\n\nplt.plot(x,[i*i for i in x], x, [i*i*i for i in x], x, [i**4 for i in x])\nplt.grid(True)\nplt.show()","40fca604":"from matplotlib import pyplot as plt\n\nx = [5,8,10]\ny = [12,16,6]\n\nplt.plot(x,y)\n\nplt.title('Epic Info')\nplt.ylabel('Y axis')\nplt.xlabel('X axis')\n\nplt.show()","d602caa3":"import matplotlib.pyplot as plt\nfrom matplotlib import style\n\nstyle.use('ggplot')\n\nx = [5,8,10]\ny = [12,16,6]\n\nx2 = [6,9,11]\ny2 = [6,15,7]\n\n# can plot specifically, after just showing the defaults:\nplt.plot(x,y,linewidth=4)\nplt.plot(x2,y2,linewidth=4)\n\n\n# Give Plot Title\nplt.title('Epic Info')\n\n# Define both axis level\nplt.ylabel(\"Y axis\")\nplt.xlabel(\"X axis\")\n\nplt.show()\n","f2776fb4":"from matplotlib import pyplot as plt\nfrom matplotlib import style\n\nstyle.use('ggplot')\n\nx = [5,8,10]\ny = [12,16,6]\n\nx2 = [6,9,11]\ny2 = [6,15,7]\n\n\nplt.bar(x, y, align='center')\n\nplt.bar(x2, y2, color='g', align='center')\n\n\nplt.title('Epic Info')\nplt.ylabel('Y axis')\nplt.xlabel('X axis')\n\nplt.show()","e2927637":"from matplotlib import pyplot as plt\nfrom matplotlib import style\n\nstyle.use('ggplot')\n\nx = [5,8,10]\ny = [12,16,6]\n\nx2 = [6,9,11]\ny2 = [6,15,7]\n\nplt.scatter(x, y)#, align='center')\n\nplt.scatter(x2, y2, color='g')#, align='center')\n\n\nplt.title('Epic Info')\nplt.ylabel('Y axis')\nplt.xlabel('X axis')\n\nplt.show()","07e2226d":"from matplotlib import pyplot as plt\nfrom matplotlib import style\n\nstyle.use('ggplot')\n\nx = [5,8,10]\ny = [12,16,6]\n\nx2 = [6,9,11]\ny2 = [6,15,7]\n\nplt.scatter(x, y, label=\"Student\")#, align='center', label=\"Stud\")\n\nplt.scatter(x2, y2, color='g', label=\"Marks\")#, align='center', label=\"Marks\")\n\nplt.legend()\n\n# Give Plot Title \nplt.title('Epic Info')\n\n# Give title to the both axis\nplt.ylabel('Y axis')\nplt.xlabel('X axis')\n\n#\n\nplt.show()","f405291c":"import numpy, matplotlib.pyplot as plt\n\nx = numpy.arange(5)\n\nplt.plot(x, x, label=\"liner\", linewidth=2)\nplt.plot(x, x*x, label=\"square\", linewidth=2)\nplt.plot(x, x*x*x, label=\"cube\", linewidth=2)\n\nplt.grid(True)\n\nplt.ylabel(\"Y-axis\")\nplt.xlabel(\"X-axis\")\n\nplt.title(\"Polynomial Graph\")\n\nplt.legend()\n\nplt.show()","f6c844e5":"import matplotlib.pyplot as plt\nimport numpy\n\ny = np.random.randn(40,2)\n\nplt.hist(y)\nplt.show()","70e4c1a8":"import numpy as np\nimport matplotlib.mlab as mlab\nimport matplotlib.pyplot as plt\n \nx = [21,22,23,4,5,6,77,8,9,10,31,32,33,34,35,36,37,18,49,50,100]\nnum_bins = 5\nn, bins, patches = plt.hist(x, num_bins, facecolor='blue', alpha=0.5)\nplt.show()","de1f8676":"import matplotlib.pyplot as plt\n\nplt.bar([2,3.5,5],[2,5,7])\nplt.show()","924858e8":"import matplotlib.pyplot as plt; plt.rcdefaults()\nimport numpy as np\nimport matplotlib.pyplot as plt\n \nobjects = ('Python', 'C++', 'Java', 'Perl', 'Scala', 'Lisp')\ny_pos = np.arange(len(objects))\nperformance = [10,8,6,4,2,1]\n \nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.ylabel('Usage')\nplt.title('Programming language usage')\n \nplt.show()","23fd4756":"import matplotlib.pyplot as plt; plt.rcdefaults()\nimport numpy as np\nimport matplotlib.pyplot as plt\n \nobjects = ('Python', 'C++', 'Java', 'Perl', 'Scala', 'Lisp')\ny_pos = np.arange(len(objects))\nperformance = [10,8,6,4,2,1]\n \nplt.barh(y_pos, performance, align='center', alpha=0.5)\nplt.yticks(y_pos, objects)\nplt.xlabel('Usage')\nplt.title('Programming language usage')\n \nplt.show()","4a9f5c91":"import numpy as np\nimport matplotlib.pyplot as plt\n \n# data to plot\nn_groups = 4\nmeans_frank = (90, 55, 40, 65)\nmeans_guido = (85, 62, 54, 20)\n \n# create plot\nfig, ax = plt.subplots()\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n \nrects1 = plt.bar(index, means_frank, bar_width,\nalpha=opacity,\ncolor='b',\nlabel='Frank')\n \nrects2 = plt.bar(index + bar_width, means_guido, bar_width,\nalpha=opacity,\ncolor='g',\nlabel='Guido')\n \nplt.xlabel('Person')\nplt.ylabel('Scores')\nplt.title('Scores by person')\nplt.xticks(index + bar_width, ('A', 'B', 'C', 'D'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()","77fc9269":"import matplotlib.pyplot as plt\n\ndictionary = {'A':25, 'B':70, 'C':55, 'D':90}\nfor i, key in enumerate(dictionary):\n  plt.bar(i, dictionary[key])\n  \nplt.show()","dd2fc1ce":"import matplotlib.pyplot as plt\nimport numpy\n\ndictionary = {'A':25, 'B':70, 'C':55, 'D':90}\nfor i, key in enumerate(dictionary):\n  plt.bar(i, dictionary[key])\n\nplt.xticks(numpy.arange(len(dictionary)),\n          dictionary.keys())\n  \nplt.show()","6c0895cb":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(3,3))\n\nx = [40, 20, 5]\nlabels = [\"Bikes\", \"Cars\", \"Buses\"]\n\nplt.pie(x, labels=labels)\nplt.show()","79a50245":"import matplotlib.pyplot as plt\n \n# Data to plot\nlabels = 'Python', 'C++', 'Ruby', 'Java'\nsizes = [215, 130, 245, 210]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n \n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","0b54593f":"import matplotlib.pyplot as plt\n \nlabels = ['Cookies', 'Jellybean', 'Milkshake', 'Cheesecake']\nsizes = [38.4, 40.6, 20.7, 10.3]\ncolors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral']\npatches, texts = plt.pie(sizes, colors=colors, shadow=True, startangle=90)\nplt.legend(patches, labels, loc=\"best\")\nplt.axis('equal')\nplt.tight_layout()\nplt.show()","2b0f5ba9":"import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.random.rand(1000)\ny = np.random.rand(1000)\n\nplt.scatter(x,y)\nplt.show()","6cea9744":"import numpy as np\nimport matplotlib.pyplot as plt\n \n# Create data\nN = 500\nx = np.random.rand(N)\ny = np.random.rand(N)\ncolors = (0,0,0)\narea = np.pi*3\n \n# Plot\nplt.scatter(x, y, s=area, c=colors, alpha=0.5)\nplt.title('Scatter plot pythonspot.com')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.show()","d3a5037d":"import matplotlib.pyplot as plt\nimport numpy as np\n\ny = np.arange(1,3)\nplt.plot(y,'y')\nplt.plot(y**2, 'm')\nplt.plot(y**3, 'c')\n\nplt.show()","7a16394e":"import matplotlib.pyplot as plt\nimport numpy as np\n\ny = np.arange(1,3)\nplt.plot(y,'--')\nplt.plot(y**2, '-.')\nplt.plot(y**3, ':')\n\nplt.show()","6864edd3":"import matplotlib.pyplot as plt\nimport numpy as np\n\ny = np.arange(1,3,0.2)\n\nplt.plot(y, '*', y+0.5, 'o', y+1, 'D', y+2, '^', y+3, 's')\nplt.show()","3b8fb978":"import matplotlib.pyplot as plt\nimport numpy as np\n\ny = np.arange(1,3,0.2)\n\nplt.plot(y, '*', y*2, 'o', y*3, 'D', y*4, '^', y*5, 's')\nplt.show()","8746794d":"# Pie Chart\/ Pie Graph\n\n---\n\nIn a** pie chart,** the arc length of each slice (and consequently its central angle and area), is proportional to the quantity it represents.\n \n**Pie chart** is probably one of the most common type of chart. It is a circular graphic which is divided into slices to illustrate numerical proportion. The point of a pie chart is to show the relationship of parts out of a whole.\n\n**Pie Charts are used to compare multiple parts against the whole**\n\n---\n\nExample:\n","978ed649":"# Metplotlib - Data Visualization for Beginners\n(Suneel Patel)\n\nMatplotlib is a Python library this is specially desigend for the development of graphs, charts etc., in order to provide interactive **data visualization**.\n\n\nMatplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.\n\n\nMatplotlib tries to make easy things easy and hard things possible. You can generate plots, histograms, power spectra, bar charts, errorcharts, scatterplots, etc., with just a few lines of code.\n\nMatplotlib is inspried form the MATLAB software and reproduces many of it's feature\n\n\n---\n\nExample: Lets plot simple graph on matplotlib","2e38d484":"**Example: Plotting Mulitline Graph**\n\n---\n\n","5504ff8b":"**Example: Scatter Plot**\n\n---\n\n","38fb71e2":"# Scatter Plot\/ Graphs\n\nA **scatter plot** is a type of plot that **shows the data as a collection of points**. The position of a point depends on its two-dimensional value, where each value is a position on either the horizontal or vertical dimension. Related course.\n\n---\n\n**Scatter plots display values for two data sets of data, visualised as a collection of points.**\n\n---\n\nExample:\n\n\n\n","aa1cc216":"**Example: Add the keys as labels  on the x-axis**\n\n---\n\n\n","497d6332":"I hope this kernal is useful to you to learn machine learning from the scratch with IRIS dataset.\n\nIf find this notebook help you to learn, **Please Upvote**.\n\n#### Thank You!!","d169aa49":"**Example: To add a legend use the plt.legend() function:**\n\n---\n\n\n","a7fa3156":"#Bar Graphs\/ Bar Chart\n\n---\nIt's another graphical form of data visualization in Python.\n\n**Example:**\n\n","026b9c3d":"Example: We can specify the values of both axes\n\n---\n\n","a78fa989":"**Example: Adding a Legend**\n\n---\n\n","5856ea10":"**Example2: Histogram**","3576688c":"Example2: \n\n---\n\n","cf433acc":"# Histogram\n\n---\n\nMatplotlib can be used to create histograms. A histogram shows the frequency on the vertical axis and the horizontal axis is another dimension. Usually it has bins, where every bin has a minimum and maximum value. Each bin also has a frequency between x and infinite.\n\n---\n\n**Bin:** To construct a histogram from a continuous variable you first need to split the data into intervals, called **bin**.\n\nTo construct a histogram, the first step is to \"bin\" (or \"bucket\") the range of values\u2014that is, divide the entire range of values into a series of intervals\u2014and then count how many values fall into each interval. The bins are usually specified as consecutive, non-overlapping intervals of a variable.\n\n---\n\nExample:\n","1bed1643":"**Citing Matplotlib**\n\nMatplotlib is the brainchild of John Hunter (1968-2012), who, along with its many contributors, have put an immeasurable amount of time and effort into producing a piece of software utilized by thousands of scientists worldwide.\n\n---\n\n","6325907f":"**Example:  Plotting Dictionary Using Bar Graph**\n\n---\n\n","baabbbca":"**Adding a grid**\n\n---\n\n","e39c7081":"#### Hello Dear Kagglers !!\n\n\nThis is a very basic tutorial to learn Data Visualization from the scratch using Python Programming Lanaguage. Here you learn how to implement a matplotlib library. This kernel endeavors to explain the Matplotlib working with examples for any one who is new to Matplotlib Package in Python.\n\nI try to explain everything related to the Data Visualization in detail. Hope you find it useful learning material.\n\nIf this notebook to be useful, **Please Upvote**!!!\n\n\n![](https:\/\/d1jnx9ba8s6j9r.cloudfront.net\/blog\/wp-content\/uploads\/2017\/07\/Graph-Matplotlib-tutorial-edureka.jpg)","e8e36dff":"**Example2: Bar Graph**","567951ae":"**Control Line Styling**\n\n---\n\nExample:","bd159b5d":"**Example2: The code below creates a pie chart**\n\n---\n\n","39a37390":"Example4: You can **compare two data series u**sing this Matplotlib code:\n\n---\n\n","49fc9e90":"**Plot simple graph Using ggplot style**\n\nWith that, we're ready to use styles. Be sure to poke around the styles files, to get a feel for how they work and maybe customize them yourself a bit if you like. From there, using them is simple enough:\n\n---\n\n","546efe97":"**Example: Plat a simple graph**\n\n---\n\n","409d3dc3":"**Control Marker Styling**\n\n---\n\nMatplolib provides customization option for markers\n\n\n---\n\nExample:","537899c7":"**Example: Plot Bar Chart:**\n\n---\n\n","74e55e62":"**Example: Add to Legend**","f95208ea":"Example3: to create a** horizontal bar chart**:\n\n---\n\n","e3f39372":"# Styling\n\n---\n\n**Control Colors in plot**\n"}}