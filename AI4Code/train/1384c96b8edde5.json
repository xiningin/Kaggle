{"cell_type":{"5ae40acd":"code","8585381e":"code","e5c320ed":"code","9dbdfc3a":"code","8570eae9":"code","777aa93a":"code","36f5deab":"code","380f5cec":"code","df69c15a":"code","2454c045":"code","d30f063c":"code","274c7961":"code","f02b3ac1":"code","786610dd":"code","4c59d5d9":"code","e67e6e5a":"code","a62af9d8":"code","5dc6eb53":"markdown","6081744b":"markdown","634a2d31":"markdown","02d0c306":"markdown","d6faad45":"markdown","f49e000b":"markdown","0ccd3edc":"markdown","6ce5dbf8":"markdown","52d55d6e":"markdown","35e23cc0":"markdown"},"source":{"5ae40acd":"import pandas as pd\nimport numpy as np\nfrom datetime import datetime\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\nfrom plotly.subplots import make_subplots\nimport plotly","8585381e":"pio.templates.default = \"plotly_dark\"","e5c320ed":"PATH = \"..\/input\/windows-store\/msft.csv\"\ndf = pd.read_csv(PATH)","9dbdfc3a":"df.head()","8570eae9":"df.tail()","777aa93a":"df.info()","36f5deab":"df.describe()","380f5cec":"df = df.drop(5321, axis=0)","df69c15a":"fig = px.bar(y=df.nlargest(n=10, columns=\"Rating\")[\"Name\"],\n             x=df.nlargest(n=10, columns=\"Rating\")[\"Rating\"], \n             orientation='h',\n             color=df.nlargest(n=10, columns=\"Rating\")[\"Name\"].values,\n             color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7, \n                  marker_line_width = 2,\n                  marker_line_color = 'rgb(255, 255, 255)')\nfig.update_xaxes(title=\"Ratings\")\nfig.update_yaxes(title=\"Names\")\nfig.update_layout(title= \"Top rated apps\", height = 600, width = 800, showlegend=False)\nfig.show()","2454c045":"df.query(\"Rating == 5\")","d30f063c":"fig = px.bar(y=df.query(\"Rating == 5\").nlargest(n=10, columns=\"No of people Rated\")[\"Name\"],\n             x=df.query(\"Rating == 5\").nlargest(n=10, columns=\"No of people Rated\")[\"No of people Rated\"], \n             orientation='h',\n             color=df.query(\"Rating == 5\").nlargest(n=10, columns=\"No of people Rated\")[\"Name\"].values,\n             text=df.query(\"Rating == 5\").nlargest(n=10, columns=\"No of people Rated\")[\"No of people Rated\"],\n             color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7, \n                  marker_line_width = 2,\n                  marker_line_color = 'rgb(255, 255, 255)', \n                  textposition=\"inside\")\nfig.update_yaxes(title=\"Names\")\nfig.update_xaxes(title=\"Counts\")\nfig.update_layout(title= \"Top rated apps based on number of reviews\", \n                  height = 600, \n                  width = 800, \n                  showlegend=False)\nfig.show()","274c7961":"fig = px.bar(y=df.nsmallest(n=10, columns=\"Rating\")[\"Name\"],\n             x=df.nsmallest(n=10, columns=\"Rating\")[\"Rating\"], \n             orientation='h',\n             color=df.nsmallest(n=10, columns=\"Rating\")[\"Name\"].values,\n             color_discrete_sequence=px.colors.qualitative.D3)\nfig.update_traces(opacity=0.7, \n                  marker_line_width = 2,\n                  marker_line_color = 'rgb(255, 255, 255)')\nfig.update_xaxes(title=\"Ratings\")\nfig.update_yaxes(title=\"Names\")\nfig.update_layout(title= \"Bottom rated apps\", height = 600, width = 800, showlegend=False)\nfig.show()","f02b3ac1":"fig = px.bar(y=df.nsmallest(n=10, columns=\"No of people Rated\")[\"Name\"],\n             x=df.nsmallest(n=10, columns=\"No of people Rated\")[\"No of people Rated\"], \n             orientation='h',\n             color=df.nsmallest(n=10, columns=\"No of people Rated\")[\"Name\"].values,\n             text=df.nsmallest(n=10, columns=\"No of people Rated\")[\"No of people Rated\"],\n             color_discrete_sequence=px.colors.qualitative.Safe)\nfig.update_traces(opacity=0.7, \n                  marker_line_width = 2,\n                  marker_line_color = 'rgb(255, 255, 255)', \n                  textposition=\"inside\")\nfig.update_yaxes(title=\"Names\")\nfig.update_xaxes(title=\"Counts\")\nfig.update_layout(title= \"Top rated apps based on number of reviews\", \n                  height = 600, \n                  width = 800, \n                  showlegend=False)\nfig.show()","786610dd":"fig = make_subplots(3,1, subplot_titles=[\"Top app categories by count\", \n                                         \"Top app categories by average rating\", \n                                         \"Top app categories by average number of reviews\"])\nfig.add_trace(go.Bar(x=df[\"Category\"].value_counts().index, \n                     y=df[\"Category\"].value_counts(), \n                      text=df[\"Category\"].value_counts(),\n                     marker=dict(color=px.colors.cyclical.mrybm)\n                     ), \n              row=1, col=1)\nfig.add_trace(go.Bar(y=df.groupby(\"Category\").agg({\"Rating\": \"mean\"}).sort_values(\"Rating\",ascending=False)[\"Rating\"], \n                     x=df.groupby(\"Category\").agg({\"Rating\": \"mean\"}).sort_values(\"Rating\", ascending=False).index, \n                     text = df.groupby(\"Category\").agg({\"Rating\": \"mean\"}).sort_values(\"Rating\",ascending=False)[\"Rating\"],\n                     marker=dict(color=px.colors.cyclical.mrybm),\n                     \n                     ), \n             row=2, col=1)\nfig.add_trace(go.Bar(y=df.groupby(\"Category\").agg({\"No of people Rated\": \"mean\"}).sort_values(\"No of people Rated\",ascending=False)[\"No of people Rated\"], \n                     x=df.groupby(\"Category\").agg({\"No of people Rated\": \"mean\"}).sort_values(\"No of people Rated\", ascending=False).index, \n                     text = df.groupby(\"Category\").agg({\"No of people Rated\": \"mean\"}).sort_values(\"No of people Rated\",ascending=False)[\"No of people Rated\"],\n                     marker=dict(color=px.colors.cyclical.mrybm),\n                     \n                     ), \n             row=3, col=1)\nfig.update_traces(opacity=0.7, \n                  marker_line_width = 2,\n                  marker_line_color = 'rgb(255, 255, 255)', \n                   texttemplate='%{text:.3s}',\n                  textposition=\"inside\")\nfig.update_layout(height=1200, width=800, showlegend=False)","4c59d5d9":"df.loc[:, \"Date\"] = df.loc[:, \"Date\"].apply(lambda x: pd.to_datetime(x))\nfig = make_subplots(2,1, subplot_titles=[\"Daily count of new apps\", \n                                         \"Cumulative count of new apps\"])\nfig.add_trace(go.Scatter(y=df[\"Date\"].sort_values().value_counts().sort_index(),\n                         x=df[\"Date\"].sort_values().value_counts().sort_index().index, \n                         marker=dict(color=px.colors.qualitative.D3[6])),\n              row=1, col=1)\nfig.add_trace(go.Scatter(y=df.groupby(\"Date\").agg({\"Date\": \"count\"}).sort_index()[\"Date\"].cumsum(),\n                         x=df.groupby(\"Date\").agg({\"Date\": \"count\"}).sort_index()[\"Date\"].cumsum().index,\n                         marker=dict(color=px.colors.qualitative.D3[4]),\n                         ), \n              row=2, col=1)\nfig.update_yaxes(showgrid=False)\nfig.update_xaxes(showgrid=False)\nfig.update_xaxes(showspikes=True, row=2, col=1)\nfig.update_yaxes(showspikes=True, row=2, col=1)\nfig.update_layout(showlegend=False, \n                  height=800, \n                  width=1000, \n                  yaxis=dict(range=[0, 20]))\nfig.show()","e67e6e5a":"df[df[\"Price\"] == \"Free\"] = 0\ndf[\"Price\"] = df[\"Price\"].str.replace(\"\u20b9 \", \"\")\ndf[\"Price\"] = df[\"Price\"].str.replace(\",\",\"\")\ndf[\"Price\"].fillna(0, inplace=True)\ndf[\"Price\"] = df[\"Price\"].astype(float)","a62af9d8":"fig = make_subplots(2,1, subplot_titles=[\"Top 10 most expensive apps\", \n                                         \"Top 10 most bang for buck apps (excluding free apps)\"])\nfig.add_trace(go.Bar(x=df.nlargest(10, columns=\"Price\")[\"Price\"].values, \n                     y=df.nlargest(10, columns=\"Price\")[\"Name\"], \n                     text=df.nlargest(10, columns=\"Price\")[\"Price\"].values,\n                     orientation='h', \n                     marker=dict(color=px.colors.sequential.Blugrn*2)), \n              row=1, col=1)\nfig.add_trace(go.Bar(x=df.query(\"Rating == 5\").nsmallest(10, columns=\"Price\")[\"Price\"], \n                     y=df.query(\"Rating == 5\").nsmallest(10, columns=\"Price\")[\"Name\"], \n                     text=df.query(\"Rating == 5\").nsmallest(10, columns=\"Price\")[\"Price\"],\n                     orientation='h', \n                     marker=dict(color=px.colors.sequential.amp*2)), \n              row=2, col=1)\nfig.update_xaxes(title=\"Price\", showgrid=False)\nfig.update_yaxes(showgrid=False)\nfig.update_traces(opacity=0.7, \n                  marker_line_width=2.5,\n                  marker_line_color='rgb(255, 255, 255)', \n                  textposition=\"inside\")\nfig.update_layout(height=1000, \n                  showlegend=False)\nfig.show()","5dc6eb53":"## <a id=\"six\">Distribution of app categories<\/a>","6081744b":"## <a id=\"two\">Handling Missing Values<\/a>","634a2d31":"## <a id=\"five\">Bottom rated apps<\/a>","02d0c306":"## <a id='one'>Structure and Summary <\/a> ","d6faad45":"## <a id=\"four\">Top rated apps based on number of ratings<\/a>","f49e000b":"# Microsoft Windows app store","0ccd3edc":"## <a id=\"seven\">Timeline view<\/a>","6ce5dbf8":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of Contents<\/h3>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#one\" role=\"tab\" aria-controls=\"profile\">Structure and Summary<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#two\" role=\"tab\" aria-controls=\"messages\">Handling Missing Values<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\"  data-toggle=\"list\" href=\"#three\" role=\"tab\" aria-controls=\"settings\">Top Rated Apps<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#four\" role=\"tab\" aria-controls=\"settings\">Top rated apps based on number of ratings<span class=\"badge badge-primary badge-pill\">4<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#five\" role=\"tab\" aria-controls=\"settings\">Bottom rated apps<span class=\"badge badge-primary badge-pill\">5<\/span><\/a>  \n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#six\" role=\"tab\" aria-controls=\"settings\">Distribution of app categories<span class=\"badge badge-primary badge-pill\">6<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#seven\" role=\"tab\" aria-controls=\"settings\">Timeline view<span class=\"badge badge-primary badge-pill\">7<\/span><\/a>\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#eight\" role=\"tab\" aria-controls=\"settings\">Price<span class=\"badge badge-primary badge-pill\">8<\/span><\/a>","52d55d6e":"## <a id=\"eight\">Price<\/a>","35e23cc0":"## <a id=\"three\"> Top Rated apps<\/a>"}}