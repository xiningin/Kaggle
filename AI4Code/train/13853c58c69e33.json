{"cell_type":{"128a59fc":"code","cbf70ba7":"code","be78e2b8":"code","94931401":"code","41922de4":"code","b850206e":"code","20209d87":"code","47964dea":"code","3fadc1b3":"code","c46131a8":"code","affcbf76":"code","9e72edbb":"code","a5eb444d":"code","03a51d78":"code","408943e6":"code","886348d7":"code","50a59803":"code","f3bddaaf":"code","63b1a72c":"code","1e56ac52":"code","3387486e":"code","437d3fca":"code","699214fb":"code","aeed68b4":"code","b2be5df4":"code","ccd2176f":"code","82007025":"code","29c14eb5":"code","1e727067":"code","2ed8cf77":"code","e171f0aa":"code","1688463a":"code","2717163b":"code","02c4abbc":"markdown","32c86747":"markdown","e178bb99":"markdown","20a0bd5d":"markdown","3bdf6d10":"markdown","763b35c4":"markdown","2e0ee5d7":"markdown","d8f5a55d":"markdown","d2554353":"markdown","55c6e989":"markdown","18c67a33":"markdown"},"source":{"128a59fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cbf70ba7":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(color_codes = True)\n%matplotlib inline","be78e2b8":"df = pd.read_csv('\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv')\ndf.head()","94931401":"\nsns.catplot(x = 'Gender',y = 'PlacedOrNot',hue = 'Internships',kind = 'violin',data = df,col = 'Internships',col_wrap = 2,ci = None)","41922de4":"sns.catplot('Internships','PlacedOrNot',data = df,kind = 'bar',hue = 'HistoryOfBacklogs',palette = 'gist_gray')","b850206e":"\nsns.catplot('PlacedOrNot','Stream',data = df,kind = 'bar',hue = 'Hostel',col = 'Hostel',col_wrap = 2,palette = 'rocket')\n","20209d87":"plt.figure(figsize = (20,8))\nsns.barplot('PlacedOrNot',\"CGPA\",data = df,palette = 'gist_earth',hue ='Stream' )","47964dea":"stream_groupby = df.groupby('Stream')['PlacedOrNot'].value_counts()\nstream_groupby","3fadc1b3":"plt.figure(figsize = (20,8))\nsns.violinplot(x = 'Stream',y = 'CGPA',data = df)","c46131a8":"plt.figure(figsize = (20,8))\nsns.violinplot('Stream','Age',data = df)","affcbf76":"sns.catplot('HistoryOfBacklogs','PlacedOrNot',data = df,kind = 'bar',hue = 'CGPA',col = 'CGPA',col_wrap = 2)","9e72edbb":"df.head()","a5eb444d":"\n## check Nan value\nfor i in df.columns:\n    print (i+\": \"+str(df[i].isna().sum()))","03a51d78":"correlation = df.corr()\n\nplt.figure(figsize = (20,8))\nsns.heatmap(correlation,annot = True, cmap = 'rocket')","408943e6":"df = df.drop(['Hostel','HistoryOfBacklogs'],axis = 1)\ndf.head()","886348d7":"from sklearn.preprocessing import LabelEncoder,MinMaxScaler , StandardScaler\n\n# Some of values are present in categorical form that we have convert into numerical form.\nlabel = LabelEncoder()\n\ndf['Gender'] = label.fit_transform(df['Gender'])\ndf['Stream'] = label.fit_transform(df['Stream'])\n","50a59803":"x = df.iloc[:,:-1]\ny = df.iloc[:,-1]","f3bddaaf":"# Normalize values.\nstandard = StandardScaler()\n\nstd_x = standard.fit_transform(x)","63b1a72c":"x_final = np.array(std_x)\ny_final = np.array(y)","1e56ac52":"# Lets Check Validation method for creating train and test data.\nfrom sklearn.model_selection import StratifiedKFold\nskf = StratifiedKFold(n_splits=3)\nskf.get_n_splits(x_final, y_final)","3387486e":"for train_index, test_index in skf.split(x_final, y_final):\n        print(\"TRAIN:\", train_index, \"TEST:\", test_index)\n        X_train, X_test = x_final[train_index], x_final[test_index]\n        y_train, y_test = y_final[train_index], y_final[test_index]","437d3fca":"from sklearn.tree import DecisionTreeClassifier\n\nclf = DecisionTreeClassifier()\n\nclf.fit(X_train,y_train)\nscore = clf.score(X_test,y_test)\ny_predicted = clf.predict(X_test)\n\nprint(score)","699214fb":"from sklearn.metrics import confusion_matrix\ncnf_matrix = confusion_matrix(y_test, y_predicted)\nnp.set_printoptions(precision=2)\ncnf_matrix","aeed68b4":"from sklearn.svm import SVC,NuSVC\nclf = SVC(kernel ='rbf',gamma = 'auto' )\nclf.fit(X_train,y_train)\ny_predicted = clf.predict(X_test)\nscore = clf.score(X_test,y_test)\nprint(score)","b2be5df4":"from sklearn.metrics import confusion_matrix, accuracy_score\ncnf_matrix = confusion_matrix(y_test, y_predicted)\nnp.set_printoptions(precision=2)\ncnf_matrix","ccd2176f":"clf = DecisionTreeClassifier()\n\nfrom sklearn.model_selection import RandomizedSearchCV\n#Randomized Search CV\n\n\n# Number of features to consider at every split\nmax_features = ['auto', 'sqrt']\nsplitter = [\"best\", \"random\"]\n# Maximum number of levels in tree\nmax_depth = [int(x) for x in np.linspace(5, 60, num = 12)]\n# max_depth.append(None)\n# Minimum number of samples required to split a node\nmin_samples_split = [2, 5, 10, 15, 23,33,45,37,60]\n# Minimum number of samples required at each leaf node\nmin_samples_leaf = [1, 2, 5, 10,14,19,7]","82007025":"\n# Create the random grid\nrandom_grid = {'max_features': max_features,\n               'splitter':splitter,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf}\n\nprint(random_grid)","29c14eb5":"# Random search of parameters, using 5 fold cross validation, \n# search across 100 different combinations\nrf_random = RandomizedSearchCV(estimator = clf, param_distributions = random_grid,scoring='accuracy', n_iter = 100, cv = 5, verbose=2, random_state=0, n_jobs = 1)","1e727067":"rf_random.fit(X_train,y_train)","2ed8cf77":"rf_random.best_params_","e171f0aa":"rf_random.best_estimator_","1688463a":"clf = DecisionTreeClassifier(max_depth=20, max_features='sqrt', min_samples_leaf=2,\n                       min_samples_split=15)\n\nclf.fit(X_train,y_train)\n\nscore = clf.score(X_test,y_test)\ny_predicted = clf.predict(X_test)\n\nprint(score)","2717163b":"from sklearn.metrics import confusion_matrix, accuracy_score\ncnf_matrix = confusion_matrix(y_test, y_predicted)\nnp.set_printoptions(precision=2)\ncnf_matrix","02c4abbc":"<a id=\"5\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>VALIDATION_METHOD<\/center><\/h1>","32c86747":"- Above graph shows that for all stream, candidate who having high CGPA that candidate are placed more however candidate whose having less CGPA those also get selected but the count is less.","e178bb99":"<a id=\"6\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>MODEL_BUILDING<\/center><\/h1>","20a0bd5d":"<a id=\"2\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>LIBRARIES<\/center><\/h1>","3bdf6d10":"<a id=\"1\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>INTRODUCTION<\/center><\/h1>\n\n\n- Data is taken from kaggle(https:\/\/www.kaggle.com\/tejashvi14\/engineering-placements-prediction).\n- This data contains features that may help you to find whether candidate will placed or not.\n- Data contains features like [age,gender,stream,internship,CGPA,Hostel, History of backlog,placed or not].\n- For predicting output accurately we have to build model, following is the procedure:","763b35c4":"- From above graph, female candidate is more in internship as compare to male and also female candidates are selected more.\n- For 2nd graph, it seems like male and female are showing same and those who have internship-1 both male and female were equally placed.\n- For 3rd graph, candidate select more those who taken internship-2.\n- For 4th graph, it is showing same as 3rd graph is shwoing.","2e0ee5d7":"<a id=\"4\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>DATA_PREPROCESSING<\/center><\/h1>","d8f5a55d":"<a id=\"3\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>IMPORT_DATA<\/center><\/h1>","d2554353":"- From above data you can see count for those, who are placed or not placed for particular branch.","55c6e989":"- Person who already done internship[particularly 2 & 3] and who does not have backlog those candidate have high chance to get select placed. ","18c67a33":"<a id=\"4\"><\/a>\n<h1 style='background:#a9a799; border:0; color:black'><center>DATA_VISUALIZATION<\/center><\/h1>"}}