{"cell_type":{"df047566":"code","d1a213f9":"code","8efe8dc1":"code","3b530530":"code","3ae19801":"code","8c7e46ef":"code","4e83d9bb":"code","565ae606":"code","a1b3f93f":"code","8ab4562d":"code","c782867e":"code","e69e3a4d":"code","cdb14aaf":"code","91af77ff":"code","9667176e":"code","5f6f139b":"code","c57df9e9":"code","c4445b2c":"code","198ee9b3":"code","57f914e8":"code","e3799ebb":"code","14b1f3b3":"code","224940d6":"code","3cace48c":"code","bb610971":"code","da864e1a":"code","f7a08e06":"code","731603b6":"code","3d7f44e1":"code","0c2311c0":"code","9cbcfafe":"code","c67c317d":"code","5d2ab692":"code","838f9765":"code","ded0661d":"code","0e2e348c":"code","5f13f49a":"code","f9aca7b3":"code","daf3fff8":"code","2c58e430":"code","6a585667":"code","4697dd61":"code","d7bd892b":"code","39df91a6":"code","e7cdd106":"code","893e1fc9":"code","595d57f8":"code","f8404009":"code","7aaf0913":"code","2ac32242":"code","9da2917b":"code","80d25e99":"code","ec31dceb":"code","bef4401b":"code","08c1e01e":"code","d83d772f":"code","a4683ad1":"code","0b58c2c1":"code","7e139962":"code","307355ed":"code","734b452f":"code","e1bf3a76":"code","cfc7f02c":"code","603db761":"code","123636f1":"code","be4536f5":"code","ec20fa3d":"code","80aeb92f":"code","d1cf3d3b":"code","38e67a1f":"code","0af32bfe":"code","dcde6bad":"code","9c00a385":"code","d7eaec12":"code","4cb22223":"code","d72f6328":"code","4438942e":"code","93ebb4c9":"code","9362abc0":"code","08c0585f":"code","07a854d0":"code","0a639293":"code","ff1d6acb":"code","c293eaeb":"markdown","642773b5":"markdown","b474cf86":"markdown","f7d80440":"markdown","8a946ebb":"markdown","f7f047d6":"markdown","fb6c9ffa":"markdown","80c62d86":"markdown","ac0e70ca":"markdown","cbfc927b":"markdown","956dcab8":"markdown","f2272bec":"markdown","6c53d798":"markdown","ec314929":"markdown","2b92704c":"markdown","2b8f964d":"markdown","6272ef4f":"markdown","de8a797b":"markdown","1a76a1af":"markdown","e6317a16":"markdown","6a09a45c":"markdown","78e3bd88":"markdown","38ba1ab0":"markdown","b7a3cc3c":"markdown","5025dd82":"markdown","1bcb6c58":"markdown","209d6d4b":"markdown","b1f92297":"markdown","1302db6f":"markdown","28d28750":"markdown","8120e314":"markdown","fba9f9b1":"markdown","e8099da1":"markdown","1851014a":"markdown","d900f3a3":"markdown","61638356":"markdown","7d23f103":"markdown","1a6f2565":"markdown","d34fdbf4":"markdown","98edc800":"markdown","f3ab35c2":"markdown","9bdcdaa7":"markdown","ed00cb34":"markdown","a98aff61":"markdown","cc44e104":"markdown","067764d6":"markdown","5272d484":"markdown","361d18b7":"markdown","9ade16a4":"markdown","56d37a34":"markdown","1deff1da":"markdown","e376e553":"markdown","8cb781cc":"markdown","e0a95913":"markdown","579d9d56":"markdown","c7e5f448":"markdown","f09b9513":"markdown","311f3419":"markdown","7fdef660":"markdown","d9e9bd31":"markdown","2075d665":"markdown","9392c49d":"markdown","7205fa3c":"markdown","134a0f17":"markdown","edb43b61":"markdown","fa5beee4":"markdown","7f788143":"markdown","96fcf1a1":"markdown","4f4b7e28":"markdown","a1229c65":"markdown","2d661096":"markdown","ec3c45dd":"markdown","6c6084cc":"markdown","ae00331d":"markdown","2f6131c5":"markdown","b927edff":"markdown","b4fa14cc":"markdown","206349aa":"markdown","fca65f4e":"markdown","57fd9b7b":"markdown","b54dbf35":"markdown","4450ee7b":"markdown","203f8e5c":"markdown","b99680d2":"markdown","aa030b52":"markdown","1bfe5b4d":"markdown","a85bd0c4":"markdown","9600e39b":"markdown","216c609f":"markdown","2e6394ce":"markdown","0a44dd63":"markdown","513a7c6b":"markdown","15e2c6fb":"markdown","93a18e17":"markdown","0dfd70d3":"markdown","7f14246a":"markdown","f61ed362":"markdown","4b33bc63":"markdown","9d5fc6aa":"markdown","6af82fec":"markdown"},"source":{"df047566":"!pip install pygal","d1a213f9":"import numpy as np \nimport pandas as pd \nimport os\n\n# Importing pygal and its styles\nimport pygal\nfrom pygal.style import Style\n\nfrom IPython.display import display, HTML\nfrom datetime import datetime, timedelta","8efe8dc1":"titanic=pd.read_csv('..\/input\/titanic\/train.csv')\nspace=pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')\nfootball=pd.read_csv('..\/input\/womens-international-football-results\/results.csv')\nshoot=pd.read_csv('..\/input\/us-police-shootings\/shootings.csv')\nuniversity=pd.read_csv('..\/input\/world-university-rankings\/cwurData.csv')\ncampus=pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\njobs=pd.read_csv('..\/input\/data-analyst-jobs\/DataAnalyst.csv')\ncovid=pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\nnetflix=pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\nstore=pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\nicici=pd.read_csv('..\/input\/nifty50-stock-market-data\/ICICIBANK.csv')\nhdfc=pd.read_csv('..\/input\/nifty50-stock-market-data\/HDFCBANK.csv')\nhouse=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ncipla=pd.read_csv('..\/input\/nifty50-stock-market-data\/CIPLA.csv')\ndr_red=pd.read_csv('..\/input\/nifty50-stock-market-data\/DRREDDY.csv')\nsun=pd.read_csv('..\/input\/nifty50-stock-market-data\/SUNPHARMA.csv')\nusr_achievement=pd.read_csv('..\/input\/meta-kaggle\/UserAchievements.csv')\ncontinent=pd.read_csv('https:\/\/pkgstore.datahub.io\/JohnSnowLabs\/country-and-continent-codes-list\/country-and-continent-codes-list-csv_csv\/data\/b7876b7f496677669644f3d1069d3121\/country-and-continent-codes-list-csv_csv.csv')","3b530530":"# This is helper function to render plot in html format\nbase_html = \"\"\"\n<!DOCTYPE html>\n<html>\n  <head>\n  <script type=\"text\/javascript\" src=\"http:\/\/kozea.github.com\/pygal.js\/javascripts\/svg.jquery.js\"><\/script>\n  <script type=\"text\/javascript\" src=\"https:\/\/kozea.github.io\/pygal.js\/2.0.x\/pygal-tooltips.min.js\"\"><\/script>\n  <\/head>\n  <body>\n    <figure>\n      {rendered_chart}\n    <\/figure>\n  <\/body>\n<\/html>\n\"\"\"\n\ndef pygalplot(chart):\n    rendered_chart = chart.render(is_unicode=True)\n    plot_html = base_html.format(rendered_chart=rendered_chart)\n    display(HTML(plot_html))","3ae19801":"top_mission=space['Company Name'].value_counts()[:7].to_frame().reset_index().rename(columns={'index':'Company','Company Name':'Num of Missions'})","8c7e46ef":"top_space_missions = pygal.Bar(title=\"Space Missions by Companies\",x_title=\"Companies\",y_title=\"Number of Missions\",show_legend=False)\ntop_space_missions.x_labels = top_mission['Company']\ntop_space_missions.add('Space Missions',top_mission['Num of Missions'])\npygalplot(top_space_missions)","4e83d9bb":"custom_style = Style(colors=['blue'],value_colors=('black'))\ntop_space_missions_color = pygal.Bar(print_values=True, print_values_position='top',title=\"Space Missions by Companies\",\n                                     x_title=\"Companies\",y_title=\"Number of Missions\",show_legend=False,style=custom_style)\ntop_space_missions_color.x_labels = top_mission['Company']\ntop_space_missions_color.add('Space Missions',top_mission['Num of Missions'])\npygalplot(top_space_missions_color)","565ae606":"wom_football_df=football['country'].value_counts()[:10].to_frame().reset_index().rename(columns={'index':'country','country':'count'})\n\n# Setting color based on values\ncolor_data = []\nfor v in wom_football_df['count']:\n    if v > 100:\n        color_data.append({\"value\": v, \"color\": \"green\"})\n    elif v < 101:\n        color_data.append({\"value\": v, \"color\": \"red\"})\n    else:\n        color_data.append(v)","a1b3f93f":"# NeonStyle is builtin style of plot ,can try other styles - http:\/\/www.pygal.org\/en\/stable\/documentation\/builtin_styles.html \nfrom pygal.style import NeonStyle\n\nwom_football = pygal.Bar(title=\"Most Women International matches Host Countries\",x_title=\"Countries\",y_title=\"Number of Matches\",show_legend=False,style=NeonStyle)\nwom_football.x_labels = wom_football_df['country']\nwom_football.add('',color_data)\npygalplot(wom_football)","8ab4562d":"us_shoot=shoot['race'].value_counts().to_frame().reset_index().rename(columns={'index':'race','race':'count'})","c782867e":"from pygal.style import DarkSolarizedStyle\n\nus_shoot_plot = pygal.HorizontalBar(style=DarkSolarizedStyle,title=\"Most Women International matches Host Countries\",x_title=\"Number of deaths\",y_title=\"Race\",\n                                     show_legend=False)\nus_shoot_plot.x_labels = us_shoot['race'][::-1]\nus_shoot_plot.add('',us_shoot['count'][::-1])\npygalplot(us_shoot_plot)","e69e3a4d":"uk_score=university[university['country']=='United Kingdom'].groupby('year').aggregate({'score':'mean'}).reset_index()\nus_score=university[university['country']=='USA'].groupby('year').aggregate({'score':'mean'}).reset_index()\njap_score=university[university['country']=='Japan'].groupby('year').aggregate({'score':'mean'}).reset_index()\n\naus_score=university[university['country']=='Australia'].groupby('year').aggregate({'score':'mean'}).reset_index()","cdb14aaf":"scores = pygal.StackedBar(title=\"Average Scores for Universities in UK,US,Japan & Australia\",x_title=\"Year\",y_title=\"Countries Average Scores\")\nscores.x_labels = uk_score['year']\nscores.add('UK',uk_score['score'])\nscores.add('US',us_score['score'])\nscores.add('Japan',jap_score['score'])\nscores.add('Australia',aus_score['score'])\npygalplot(scores)","91af77ff":"from pygal.style import LightStyle\nscores = pygal.Bar(style=LightStyle,title=\"Average Scores for Universities in UK,US,Japan & Australia\",x_title=\"Year\",y_title=\"Countries Average Scores\")\nscores.x_labels = uk_score['year']\nscores.add('UK',uk_score['score'])\nscores.add('US',us_score['score'])\nscores.add('Japan',jap_score['score'])\nscores.add('Australia',aus_score['score'])\npygalplot(scores)","9667176e":"titanic=titanic.dropna()\nage_values=titanic['Age'].values\nfare_values=titanic['Fare'].values\nlist_age_fare=[]\nfor x,y in zip(age_values,fare_values):\n    points=(x,y)\n    list_age_fare.append(points)","5f6f139b":"from pygal.style import CleanStyle\n\ntitanic_agefare = pygal.XY(style=CleanStyle,stroke=False,title=\"Age Vs Fare\",x_title=\"Age\",y_title=\"Fare\",show_legend=False)\ntitanic_agefare.add(title=\"Age Vs Fare\",values= list_age_fare)\npygalplot(titanic_agefare)","c57df9e9":"pclass1 = []\npclass2 = []\npclass3 = []\nfor v,x,y in zip(titanic['Pclass'],titanic['Age'],titanic['Fare']):\n    if v == 1:\n        pclass1.append({\"value\": (x,y), \"color\": \"green\"})\n    elif v ==2:\n        pclass2.append({\"value\": (x,y), \"color\": \"red\"})\n    else:\n        pclass3.append({\"value\": (x,y), \"color\": \"blue\"})","c4445b2c":"titanic_agefareclass = pygal.XY(stroke=False,title=\"Age Vs Fare\",x_title=\"Age\",y_title=\"Fare\")\ntitanic_agefareclass.add(title=\"Pclass 1\",values= pclass1)\ntitanic_agefareclass.add(title=\"Pclass 2\",values= pclass2)\ntitanic_agefareclass.add(title=\"Pclass 3\",values= pclass3)\npygalplot(titanic_agefareclass)","198ee9b3":"jobs_10=jobs[jobs['Founded']>2010]\n\nit=jobs_10[jobs_10['Sector']=='Information Technology'].groupby('Founded').agg({'Rating':'mean'}).reset_index()\nyears=list(it['Founded'])\nyears_df=pd.DataFrame(years,columns=['year'])\nit_df=pd.merge(years_df,it,right_on=\"Founded\",left_on=\"year\",how=\"left\").replace({np.NAN: None})\n\nbusiness=jobs_10[jobs_10['Sector']=='Business Services'].groupby('Founded').agg({'Rating':'mean'}).reset_index()\nbusiness_df=pd.merge(years_df,business,right_on=\"Founded\",left_on=\"year\",how=\"left\").replace({np.NAN: None})\n\nhealth=jobs_10[jobs_10['Sector']=='Health Care'].groupby('Founded').agg({'Rating':'mean'}).reset_index()\nhealth_df=pd.merge(years_df,health,right_on=\"Founded\",left_on=\"year\",how=\"left\").replace({np.NAN: None})","57f914e8":"scores = pygal.Line(style=CleanStyle,title=\"Average Ratings for Sectors\",x_title=\"Year\",y_title=\"Sector Average Ratings\")\nscores.x_labels = it_df['year']\nscores.add('IT',it_df['Rating'])\nscores.add('Business',business_df['Rating'])\nscores.add('Health',health_df['Rating'])\n\npygalplot(scores)","e3799ebb":"scores = pygal.Line(style=CleanStyle,title=\"Average Ratings for Sectors\",x_title=\"Year\",y_title=\"Sector Average Ratings\")\nscores.x_labels = it_df['year']\nscores.add('IT',it_df['Rating'],dots_size=6)\nscores.add('Business',business_df['Rating'],show_dots=False)\nscores.add('Health',health_df['Rating'])\n\npygalplot(scores)","14b1f3b3":"shoot['year']=pd.to_datetime(shoot['date']).dt.year\n\nwhite=shoot[shoot['race']=='White']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\nblack=shoot[shoot['race']=='Black']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\nhispanic=shoot[shoot['race']=='Hispanic']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\nasian=shoot[shoot['race']=='Asian']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\nnative=shoot[shoot['race']=='Native']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\nother=shoot[shoot['race']=='Other']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values('year')\n","224940d6":"races_year = pygal.HorizontalLine(style=CleanStyle,title=\"Races Death over years\",x_title=\"Year\",y_title=\"Number of deaths\")\nraces_year.x_labels = white['year']\nraces_year.add('White',white['count'])\nraces_year.add('Black',black['count'])\nraces_year.add('Hispanic',hispanic['count'])\nraces_year.add('Asian',asian['count'])\nraces_year.add('Native',native['count'])\nraces_year.add('Other',other['count'])\npygalplot(races_year)","3cace48c":"races_year = pygal.StackedLine(title=\"Races Death over years\",x_title=\"Year\",y_title=\"Number of deaths\",fill=True)\nraces_year.x_labels = white['year']\nraces_year.add('White',white['count'])\nraces_year.add('Black',black['count'])\nraces_year.add('Hispanic',hispanic['count'])\nraces_year.add('Asian',asian['count'])\nraces_year.add('Native',native['count'])\nraces_year.add('Other',other['count'])\npygalplot(races_year)","bb610971":"covid['date']=pd.to_datetime(covid['ObservationDate']).dt.date\nind_deaths=covid[(covid['Country\/Region']=='India')&(covid['ObservationDate']>'07\/31\/2020')].groupby('date').agg({'Deaths':'sum'}).reset_index()\nbrazil_deaths=covid[(covid['Country\/Region']=='Brazil')&(covid['ObservationDate']>'07\/31\/2020')].groupby('date').agg({'Deaths':'sum'}).reset_index()\nuk_deaths=covid[(covid['Country\/Region']=='UK')&(covid['ObservationDate']>'07\/31\/2020')].groupby('date').agg({'Deaths':'sum'}).reset_index()","da864e1a":"covid_ind = pygal.Line(x_label_rotation=45,title=\"Death Rate of India\",x_title=\"Date\",y_title=\"Number of deaths\",show_legend=False)\ncovid_ind.x_labels=ind_deaths['date']\ncovid_ind.add(\"deaths\",ind_deaths['Deaths'])\npygalplot(covid_ind)","f7a08e06":"covid_three = pygal.Line(title=\"Death Rate in India,Brazil,UK\",x_title=\"Date\",y_title=\"Number of deaths\",x_label_rotation=45)\ncovid_three.x_labels=ind_deaths['date']\ncovid_three.add(\"India\",ind_deaths['Deaths'])\ncovid_three.add(\"Brazil\",brazil_deaths['Deaths'])\ncovid_three.add(\"UK\",uk_deaths['Deaths'])\npygalplot(covid_three)","731603b6":"categ_list=['FAMILY','GAME','MEDICAL','TOOLS','PERSONALIZATION']\nfree_apps=store[(store['Type']=='Free')&(store['Category'].isin(categ_list))]['Category'].value_counts().to_frame().reset_index().rename(columns={'index':'Category','Category':'count'}).sort_values('Category')\npaid_apps=store[(store['Type']=='Paid')&(store['Category'].isin(categ_list))]['Category'].value_counts().to_frame().reset_index().rename(columns={'index':'Category','Category':'count'}).sort_values('Category')","3d7f44e1":"store_count = pygal.Dot(x_label_rotation=45,title=\"App Counts - Free vs Paid\",x_title=\"Number of Apps\",y_title=\"Type of Apps\")\nstore_count.x_labels=list(free_apps['Category'])\nstore_count.add(\"Paid\",free_apps['count'])\nstore_count.add(\"Free\",paid_apps['count'])\npygalplot(store_count)","0c2311c0":"icici['diff_price']=icici['Close']-icici['Open']\nicici['year']=pd.to_datetime(icici['Date']).dt.year\nicici=icici.groupby('year').agg({'diff_price':'mean'}).reset_index()\nicici_df=icici[icici['year']>2010]\n\nhdfc['diff_price']=hdfc['Close']-hdfc['Open']\nhdfc['year']=pd.to_datetime(hdfc['Date']).dt.year\nhdfc=hdfc.groupby('year').agg({'diff_price':'mean'}).reset_index()\nhdfc_df=hdfc[hdfc['year']>2010]","9cbcfafe":"bank_diff_price = pygal.Dot(x_label_rotation=45,title=\"Average Difference of Open-Close Price over Years\",x_title=\"Year\",y_title=\"Banks\")\nbank_diff_price.x_labels=list(icici_df['year'])\nbank_diff_price.add(\"ICICI\",icici_df['diff_price'])\nbank_diff_price.add(\"HDFC\",hdfc_df['diff_price'])\npygalplot(bank_diff_price)","c67c317d":"net_movies=netflix[(netflix['type']=='Movie')&(netflix['release_year']>2014)&(netflix['release_year']!=2020)]['release_year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','release_year':'count'})\nnet_movies = net_movies.astype({\"year\":'str', \"count\":'float64'})","5d2ab692":"net_year = pygal.Pie(title=\"Netflix Movies relesed between 2015-2019\")\nfor index,row in net_movies.iterrows():\n    net_year.add(row[\"year\"], row[\"count\"])\npygalplot(net_year)","838f9765":"covid['month']=pd.to_datetime(covid['date']).dt.strftime('%B') \nmexico=covid[covid['Country\/Region']==\"Mexico\"].groupby('month').agg({'Recovered':'sum'}).reset_index()\ncanada=covid[covid['Country\/Region']==\"Canada\"].groupby('month').agg({'Recovered':'sum'}).reset_index()\ncolombia=covid[covid['Country\/Region']==\"Colombia\"].groupby('month').agg({'Recovered':'sum'}).reset_index()\nindia=covid[covid['Country\/Region']==\"India\"].groupby('month').agg({'Recovered':'sum'}).reset_index()","ded0661d":"pieStyle = Style(colors=['green','red',\"blue\",\"orange\"])\ncovid_recover = pygal.Pie(title=\"Recovered COVID Monthly Cases-India,Canada,Mexico,Colombia\",style=pieStyle)\ncovid_recover.add(\"India\", india[\"Recovered\"])\ncovid_recover.add(\"Mexico\", mexico[\"Recovered\"])\ncovid_recover.add(\"Canada\", canada[\"Recovered\"])\ncovid_recover.add(\"Colombia\", colombia[\"Recovered\"])\npygalplot(covid_recover)","0e2e348c":"four_university=university[(university['institution']=='Imperial College London')|(university['institution']=='Columbia University')|(university['institution']=='Harvard University')|\n                    (university['institution']=='Princeton University')|(university['institution']=='Stanford University')].groupby('institution').agg({'score':'mean'}).reset_index()\n","5f13f49a":"pieStyle = Style(colors=['green','red',\"blue\",\"orange\",\"grey\"])\nfour_university_plot = pygal.Pie(title=\"Average Score of Universities\",style=pieStyle,inner_radius=.4)\nfor index,row in four_university.iterrows():\n    four_university_plot.add(row[\"institution\"], row[\"score\"])\npygalplot(four_university_plot)","f9aca7b3":"pieStyle = Style(colors=['green','red',\"blue\",\"orange\",\"grey\"])\nfour_university_plot = pygal.Pie(title=\"Average Score of Universities\",style=pieStyle,inner_radius=.75)\nfor index,row in four_university.iterrows():\n    four_university_plot.add(row[\"institution\"], row[\"score\"])\npygalplot(four_university_plot)","daf3fff8":"titanic_class=titanic['Pclass'].value_counts().to_frame().reset_index().rename(columns={'index':'Pclass','Pclass':'count'})\ntitanic_class = titanic_class.astype({\"Pclass\":'str', \"count\":'float64'})","2c58e430":"class_plot = pygal.Pie(title=\"Titanic Passenger Class\",half_pie=True)\nfor index,row in titanic_class.iterrows():\n    class_plot.add(row[\"Pclass\"], row[\"count\"])\npygalplot(class_plot)","6a585667":"house_sold=house['YrSold'].value_counts().to_frame().reset_index().rename(columns={'index':'year','YrSold':'count'}).sort_values('year')","4697dd61":"house_chart = pygal.Bar(show_legend=False,title=\"Houses Sold over Years\",x_title=\"Year\",y_title=\"Number of Houses\",rounded_bars=20) # Modify rounded_bars number to obtain curve\/roundness of bar\nhouse_chart.x_labels=list(house_sold['year'])\nhouse_chart.add(\"\",house_sold['count'])\npygalplot(house_chart)","d7bd892b":"bins = [100, 300,500, 700, 900,1100,1300,1500]\nlabels = ['100-300','301-500','501-700','701-900','901-1100','1101-1300','1301-1500']\ncipla['freq'] = pd.cut(cipla['Close'], bins=bins, labels=labels)\nhist_cip=cipla['freq'].value_counts().to_frame().reset_index()\nhist_cip[['index','end']] = hist_cip['index'].str.split('-',expand=True)\nhist_cip_list=[]\nfor x,y,z in zip(hist_cip['freq'],hist_cip['index'],hist_cip['end']):\n    hist_cip_list.append((int(x),int(y),int(z)))","39df91a6":"cipla_hist = pygal.Histogram(show_legend=False,title=\"Cipla - Distribution of Closing price\",x_title=\"Price\",y_title=\"Frequency\")\ncipla_hist.add('', hist_cip_list)\npygalplot(cipla_hist)","e7cdd106":"bins = [100, 300,500, 700, 900,1100,1300,1500]\nlabels = ['100-300','301-500','501-700','701-900','901-1100','1101-1300','1301-1500']\nsun['freq'] = pd.cut(sun['Close'], bins=bins, labels=labels)\nhist_sun=sun['freq'].value_counts().to_frame().reset_index()\nhist_sun[['index','end']] = hist_sun['index'].str.split('-',expand=True)\nhist_sun_list=[]\nfor x,y,z in zip(hist_sun['freq'],hist_sun['index'],hist_sun['end']):\n    hist_sun_list.append((int(x),int(y),int(z)))","893e1fc9":"cipla_hist = pygal.Histogram(title=\"Cipla & Sun Pharma - Distribution of Closing price\",x_title=\"Price\",y_title=\"Frequency\")\ncipla_hist.add('Cipla', hist_cip_list)\ncipla_hist.add('Sun Pharma', hist_sun_list)\npygalplot(cipla_hist)","595d57f8":"sci_salary=campus[campus['degree_t']=='Sci&Tech']['salary'].dropna().tolist()","f8404009":"sci_salary_box = pygal.Box(title=\"Distibution of Sci & Tech Candidates Salary\",x_title=\"\",y_title=\"\",show_legend=False)\nsci_salary_box.add('Sci', sci_salary)\npygalplot(sci_salary_box)","7aaf0913":"sci_salary=campus[campus['degree_t']=='Sci&Tech']['salary'].dropna().tolist()\ncomm_salary=campus[campus['degree_t']=='Comm&Mgmt']['salary'].dropna().tolist()\nother_salary=campus[campus['degree_t']=='Others']['salary'].dropna().tolist()","2ac32242":"salary_box = pygal.Box(title=\"Distibution of Sci&Tech,Comm&Mgmt & Other Candidates Salary\",x_title=\"\",y_title=\"\")\nsalary_box.add('Science', sci_salary)\nsalary_box.add('Comm&Mgmt', comm_salary)\nsalary_box.add('Other', other_salary)\npygalplot(salary_box)","9da2917b":"education=store[store['Genres']=='Education']['Rating'].dropna().tolist()\nentertainment=store[store['Genres']=='Entertainment']['Rating'].dropna().tolist()\nbusiness=store[store['Genres']=='Business']['Rating'].dropna().tolist()","80d25e99":"app_box = pygal.Box(box_mode=\"1.5IQR\",title=\"Distibution of Rating of Education,Entertainment & Business\",x_title=\"\",y_title=\"\")\napp_box.add('Education', education)\napp_box.add('Entertainment', entertainment)\napp_box.add('Business', business)\npygalplot(app_box)","ec31dceb":"tukey_app_box = pygal.Box(box_mode=\"tukey\",title=\"Distibution of Rating of Education,Entertainment & Business\",x_title=\"\",y_title=\"\")\ntukey_app_box.add('Education', education)\ntukey_app_box.add('Entertainment', entertainment)\ntukey_app_box.add('Business', business)\npygalplot(tukey_app_box)","bef4401b":"house_2008=house[house['YrSold']==2008]['SalePrice'].dropna().tolist()\nhouse_2009=house[house['YrSold']==2009]['SalePrice'].dropna().tolist()\nhouse_2010=house[house['YrSold']==2010]['SalePrice'].dropna().tolist()","08c1e01e":"sd_app_box = pygal.Box(box_mode=\"stdev\",title=\"Distibution of House Price Sold in 2008,2009 & 2010\",x_title=\"\",y_title=\"\")\nsd_app_box.add('2008', house_2008)\nsd_app_box.add('2009', house_2009)\nsd_app_box.add('2010', house_2010)\npygalplot(sd_app_box)","d83d772f":"pop_sd_app_box = pygal.Box(box_mode=\"pstdev\",title=\"Distibution of House Price Sold in 2008,2009 & 2010\",x_title=\"\",y_title=\"\")\npop_sd_app_box.add('2008', house_2008)\npop_sd_app_box.add('2009', house_2009)\npop_sd_app_box.add('2010', house_2010)\npygalplot(pop_sd_app_box)","a4683ad1":"us_net=netflix[(netflix['country']==\"United States\")&(netflix['release_year']>2014)&(netflix['release_year']!=2020)]['release_year'].value_counts().to_frame().reset_index().sort_values('index')\nind_net=netflix[(netflix['country']==\"India\")&(netflix['release_year']>2014)&(netflix['release_year']!=2020)]['release_year'].value_counts().to_frame().reset_index().sort_values('index')\nuk_net=netflix[(netflix['country']==\"United Kingdom\")&(netflix['release_year']>2014)&(netflix['release_year']!=2020)]['release_year'].value_counts().to_frame().reset_index().sort_values('index')\njap_net=netflix[(netflix['country']==\"Japan\")&(netflix['release_year']>2014)&(netflix['release_year']!=2020)]['release_year'].value_counts().to_frame().reset_index().sort_values('index')","0b58c2c1":"radar_net = pygal.Radar(title=\"Netflix shows released between 2014-2015 in US,UK,India,Japan\",x_title=\"\",y_title=\"\")\nradar_net.x_labels =us_net['index']\nradar_net.add('US', us_net['release_year'])\nradar_net.add('India', ind_net['release_year'])\nradar_net.add('UK', uk_net['release_year'])\nradar_net.add('Japan', jap_net['release_year'])\npygalplot(radar_net)","7e139962":"radarStyle = Style(colors=['green','magenta',\"blue\",\"lime\"],foreground_strong='#53A0E8',foreground='olive')\nradar_net = pygal.Radar(title=\"Netflix shows released between 2014-2015 in US,UK,India,Japan\",style=radarStyle)\nradar_net.x_labels =us_net['index']\nradar_net.add('US', us_net['release_year'])\nradar_net.add('India', ind_net['release_year'])\nradar_net.add('UK', uk_net['release_year'])\nradar_net.add('Japan', jap_net['release_year'])\npygalplot(radar_net)\n","307355ed":"usr_achievement['year']=pd.to_datetime(usr_achievement['TierAchievementDate']).dt.year\ncomp_grandmaster=usr_achievement[(usr_achievement['AchievementType']==\"Competitions\")&(usr_achievement['Tier']==4)]['year'].value_counts().to_frame().reset_index().sort_values('index')\ncomp_master=usr_achievement[(usr_achievement['AchievementType']==\"Competitions\")&(usr_achievement['Tier']==3)]['year'].value_counts().to_frame().reset_index().sort_values('index')\ncom_expert=usr_achievement[(usr_achievement['AchievementType']==\"Competitions\")&(usr_achievement['Tier']==2)]['year'].value_counts().to_frame().reset_index().sort_values('index')\ncom_contributor=usr_achievement[(usr_achievement['AchievementType']==\"Competitions\")&(usr_achievement['Tier']==1)]['year'].value_counts().to_frame().reset_index().sort_values('index')","734b452f":"radar_tier = pygal.Funnel(title=\"Competition Tiers Over years\",x_title=\"\",y_title=\"\")\nradar_tier.x_labels =comp_grandmaster['index']\nradar_tier.add('Grandmaster', comp_grandmaster['year'])\nradar_tier.add('Master', comp_master['year'])\nradar_tier.add('Expert', com_expert['year'])\npygalplot(radar_tier)","e1bf3a76":"boeing=space[space['Company Name']=='Boeing'].shape[0]\nnasa=space[space['Company Name']=='NASA'].shape[0]\nussr=space[space['Company Name']=='RVSN USSR'].shape[0]\nisro=space[space['Company Name']=='ISRO'].shape[0]","cfc7f02c":"gauge_space = pygal.Gauge(human_readable=True,title=\"Space Missions by NASA,USSR,ISRO,Boeing\")\ngauge_space.range = [0, 2500]\ngauge_space.add('NASA', nasa)\ngauge_space.add('ISRO', isro)\ngauge_space.add('USSR', ussr)\ngauge_space.add('Boeing', boeing)\npygalplot(gauge_space)\n","603db761":"gaugeStyle = Style(colors=['green','magenta',\"blue\",\"lime\"],foreground_strong='#53A0E8',foreground='olive')\ngauge_space = pygal.Gauge(human_readable=True,title=\"Space Missions by NASA,USSR,ISRO,Boeing\",style=gaugeStyle)\ngauge_space.range = [0, 2500]\ngauge_space.add('NASA', nasa)\ngauge_space.add('ISRO', isro)\ngauge_space.add('USSR', ussr)\ngauge_space.add('Boeing', boeing)\npygalplot(gauge_space)","123636f1":"mini_covid=covid[['month','Confirmed','Deaths','Recovered']].groupby('month').agg('sum').reset_index()\njuly_recovered=round(int(mini_covid[mini_covid['month']==\"July\"]['Recovered'])\/int(mini_covid[mini_covid['month']==\"July\"]['Confirmed'])*100)\njune_recovered=round(int(mini_covid[mini_covid['month']==\"June\"]['Recovered'])\/int(mini_covid[mini_covid['month']==\"July\"]['Confirmed'])*100)\nmay_recovered=round(int(mini_covid[mini_covid['month']==\"May\"]['Recovered'])\/int(mini_covid[mini_covid['month']==\"July\"]['Confirmed'])*100)\napril_recovered=round(int(mini_covid[mini_covid['month']==\"April\"]['Recovered'])\/int(mini_covid[mini_covid['month']==\"July\"]['Confirmed'])*100)\n","be4536f5":"covid_gauge = pygal.SolidGauge(inner_radius=0.70,title=\"COVID Recovery Rate from April-July\")\npercent_formatter = lambda x: '{:.10g}%'.format(x)\ncovid_gauge.value_formatter = percent_formatter\ncovid_gauge.add('April', [{'value': april_recovered, 'max_value': 100}])\ncovid_gauge.add('May', [{'value': may_recovered, 'max_value': 100}])\ncovid_gauge.add('June', [{'value': june_recovered, 'max_value': 100}])\ncovid_gauge.add('July', [{'value': july_recovered, 'max_value': 100}])\npygalplot(covid_gauge)","ec20fa3d":"lot_house=house[['LotShape','SalePrice']].groupby('LotShape').agg('sum').reset_index() #value_counts()\nir1=int(lot_house[lot_house['LotShape']=='IR1']['SalePrice'])\nir2=int(lot_house[lot_house['LotShape']=='IR2']['SalePrice'])\nir3=int(lot_house[lot_house['LotShape']=='IR3']['SalePrice'])\nreg=int(lot_house[lot_house['LotShape']=='Reg']['SalePrice'])\ntotal_price=lot_house['SalePrice'].sum()","80aeb92f":"house_gauge = pygal.SolidGauge(inner_radius=0.70,title=\"Prices over lotAreas\")\ndollar_formatter = lambda x: '{:.10g}$'.format(x)\nhouse_gauge.value_formatter = dollar_formatter\nhouse_gauge.add('IR1', [{'value': ir1 ,'max_value': total_price}])\nhouse_gauge.add('IR2', [{'value': ir2, 'max_value': total_price}])\nhouse_gauge.add('IR3', [{'value': ir3, 'max_value': total_price}])\nhouse_gauge.add('Reg', [{'value': reg, 'max_value': total_price}])\npygalplot(house_gauge)","d1cf3d3b":"race_df=shoot['race'].value_counts().to_frame().reset_index().rename(columns={'index':'race','race':'count'})\nrace_df['percent']=round((race_df['count']\/race_df['count'].sum())*100)\nblack_white=race_df[(race_df['race']=='Black')|(race_df['race']=='White')]\n\nrace_data = []\ncolor_gauge=['brown','green']\nfor v,c in zip(black_white['percent'],color_gauge):\n        race_data.append({\"value\": v, \"max_size\":100,'color':c})","38e67a1f":"race_gauge = pygal.SolidGauge(inner_radius=0.70,title=\"Distibution of US Police shooting over Black and White race\",show_legend=False)\npercent_formatter = lambda x: '{:.10g}%'.format(x)\nrace_gauge.value_formatter = percent_formatter\nrace_gauge.add('', race_data)\npygalplot(race_gauge)","0af32bfe":"mini_covid_death=covid[['month','Confirmed','Deaths','Recovered']].groupby('month').agg('sum').reset_index()\njuly_death=round(int(mini_covid_death[mini_covid_death['month']==\"July\"]['Deaths'])\/int(mini_covid_death[mini_covid_death['month']==\"July\"]['Confirmed'])*100)\njune_death=round(int(mini_covid_death[mini_covid_death['month']==\"June\"]['Deaths'])\/int(mini_covid_death[mini_covid_death['month']==\"July\"]['Confirmed'])*100)\nmay_death=round(int(mini_covid_death[mini_covid_death['month']==\"May\"]['Deaths'])\/int(mini_covid_death[mini_covid_death['month']==\"July\"]['Confirmed'])*100)\napril_death=round(int(mini_covid_death[mini_covid_death['month']==\"April\"]['Deaths'])\/int(mini_covid_death[mini_covid_death['month']==\"July\"]['Confirmed'])*100)","dcde6bad":"covid_death_gauge = pygal.SolidGauge(half_pie=True, inner_radius=0.70,\n    style=pygal.style.styles['default'](value_font_size=25),title=\"COVID Death Rate from April-July\")\npercent_formatter = lambda x: '{:.10g}%'.format(x)\ncovid_death_gauge.value_formatter = percent_formatter\ncovid_death_gauge.add('April', [{'value': april_death, 'max_value': 100}])\ncovid_death_gauge.add('May', [{'value': may_death, 'max_value': 100}])\ncovid_death_gauge.add('June', [{'value': june_death, 'max_value': 100}])\ncovid_death_gauge.add('July', [{'value': july_death, 'max_value': 100}])\npygalplot(covid_death_gauge)","9c00a385":"ages = [(364381, 358443, 360172, 345848, 334895, 326914, 323053, 312576, 302015, 301277, 309874, 318295, 323396, 332736, 330759, 335267, 345096, 352685, 368067, 381521, 380145, 378724, 388045, 382303, 373469, 365184, 342869, 316928, 285137, 273553, 250861, 221358, 195884, 179321, 171010, 162594, 152221, 148843, 143013, 135887, 125824, 121493, 115913, 113738, 105612, 99596, 91609, 83917, 75688, 69538, 62999, 58864, 54593, 48818, 44739, 41096, 39169, 36321, 34284, 32330, 31437, 30661, 31332, 30334, 23600, 21999, 20187, 19075, 16574, 15091, 14977, 14171, 13687, 13155, 12558, 11600, 10827, 10436, 9851, 9794, 8787, 7993, 6901, 6422, 5506, 4839, 4144, 3433, 2936, 2615),\n   (346205, 340570, 342668, 328475, 319010, 312898, 308153, 296752, 289639, 290466, 296190, 303871, 309886, 317436, 315487, 316696, 325772, 331694, 345815, 354696, 354899, 351727, 354579, 341702, 336421, 321116, 292261, 261874, 242407, 229488, 208939, 184147, 162662, 147361, 140424, 134336, 126929, 125404, 122764, 116004, 105590, 100813, 95021, 90950, 85036, 79391, 72952, 66022, 59326, 52716, 46582, 42772, 38509, 34048, 30887, 28053, 26152, 23931, 22039, 20677, 19869, 19026, 18757, 18308, 14458, 13685, 12942, 12323, 11033, 10183, 10628, 10803, 10655, 10482, 10202, 10166, 9939, 10138, 10007, 10174, 9997, 9465, 9028, 8806, 8450, 7941, 7253, 6698, 6267, 5773),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 91, 412, 1319, 2984, 5816, 10053, 16045, 24240, 35066, 47828, 62384, 78916, 97822, 112738, 124414, 130658, 140789, 153951, 168560, 179996, 194471, 212006, 225209, 228886, 239690, 245974, 253459, 255455, 260715, 259980, 256481, 252222, 249467, 240268, 238465, 238167, 231361, 223832, 220459, 222512, 220099, 219301, 221322, 229783, 239336, 258360, 271151, 218063, 213461, 207617, 196227, 174615, 160855, 165410, 163070, 157379, 149698, 140570, 131785, 119936, 113751, 106989, 99294, 89097, 78413, 68174, 60592, 52189, 43375, 35469, 29648, 24575, 20863),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 392, 1351, 3906, 7847, 12857, 19913, 29108, 42475, 58287, 74163, 90724, 108375, 125886, 141559, 148061, 152871, 159725, 171298, 183536, 196136, 210831, 228757, 238731, 239616, 250036, 251759, 259593, 261832, 264864, 264702, 264070, 258117, 253678, 245440, 241342, 239843, 232493, 226118, 221644, 223440, 219833, 219659, 221271, 227123, 232865, 250646, 261796, 210136, 201824, 193109, 181831, 159280, 145235, 145929, 140266, 133082, 124350, 114441, 104655, 93223, 85899, 78800, 72081, 62645, 53214, 44086, 38481, 32219, 26867, 21443, 16899, 13680, 11508),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 5, 17, 15, 31, 34, 38, 35, 45, 299, 295, 218, 247, 252, 254, 222, 307, 316, 385, 416, 463, 557, 670, 830, 889, 1025, 1149, 1356, 1488, 1835, 1929, 2130, 2362, 2494, 2884, 3160, 3487, 3916, 4196, 4619, 5032, 5709, 6347, 7288, 8139, 9344, 11002, 12809, 11504, 11918, 12927, 13642, 13298, 14015, 15751, 17445, 18591, 19682, 20969, 21629, 22549, 23619, 25288, 26293, 27038, 27039, 27070, 27750, 27244, 25905, 24357, 22561, 21794, 20595),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 8, 0, 8, 21, 34, 49, 84, 97, 368, 401, 414, 557, 654, 631, 689, 698, 858, 1031, 1120, 1263, 1614, 1882, 2137, 2516, 2923, 3132, 3741, 4259, 4930, 5320, 5948, 6548, 7463, 8309, 9142, 10321, 11167, 12062, 13317, 15238, 16706, 18236, 20336, 23407, 27024, 32502, 37334, 34454, 38080, 41811, 44490, 45247, 46830, 53616, 58798, 63224, 66841, 71086, 73654, 77334, 82062, 87314, 92207, 94603, 94113, 92753, 93174, 91812, 87757, 84255, 79723, 77536, 74173),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 11, 35, 137, 331, 803, 1580, 2361, 3632, 4866, 6849, 8754, 10422, 12316, 14152, 16911, 19788, 22822, 27329, 31547, 35711, 38932, 42956, 46466, 49983, 52885, 55178, 56549, 57632, 57770, 57427, 56348, 55593, 55554, 53266, 51084, 49342, 48555, 47067, 45789, 44988, 44624, 44238, 46267, 46203, 36964, 33866, 31701, 28770, 25174, 22702, 21934, 20638, 19051, 17073, 15381, 13736, 11690, 10368, 9350, 8375, 7063, 6006, 5044, 4030, 3420, 2612, 2006, 1709, 1264, 1018),\n   (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 6, 11, 20, 68, 179, 480, 1077, 2094, 3581, 5151, 7047, 9590, 12434, 15039, 17257, 19098, 21324, 24453, 27813, 32316, 37281, 43597, 49647, 53559, 58888, 62375, 67219, 70956, 73547, 74904, 75994, 76224, 74979, 72064, 70330, 68944, 66527, 63073, 60899, 60968, 58756, 57647, 56301, 57246, 57068, 59027, 59187, 47549, 44425, 40976, 38077, 32904, 29431, 29491, 28020, 26086, 24069, 21742, 19498, 17400, 15738, 14451, 13107, 11568, 10171, 8530, 7273, 6488, 5372, 4499, 3691, 3259, 2657)]\n\ntypes = ['Males single', 'Females single',\n         'Males married', 'Females married',\n         'Males widowed', 'Females widowed',\n         'Males divorced', 'Females divorced']","d7eaec12":"pyramid_chart = pygal.Pyramid(human_readable=True, legend_at_bottom=True)\npyramid_chart.title = 'England population by age in 2010 (source: ons.gov.uk)'\npyramid_chart.x_labels = map(lambda x: str(x) if not x % 5 else '', range(90))\nfor type, age in zip(types, ages):\n    pyramid_chart.add(type, age)\npygalplot(pyramid_chart)","4cb22223":"family=store[store['Category']=='FAMILY']['Rating'].dropna().sample(10).tolist()\ngame=store[store['Category']=='GAME']['Rating'].dropna().sample(7).tolist()\ntools=store[store['Category']=='TOOLS']['Rating'].dropna().sample(3).tolist()\nmedical=store[store['Category']=='MEDICAL']['Rating'].dropna().sample(9).tolist()\nbusiness=store[store['Category']=='BUSINESS']['Rating'].dropna().sample(5).tolist()\nproductivity=store[store['Category']=='PRODUCTIVITY']['Rating'].dropna().sample(10).tolist()\npersonalization=store[store['Category']=='PERSONALIZATION']['Rating'].dropna().sample(8).tolist()\ncommunication=store[store['Category']=='COMMUNICATION']['Rating'].dropna().sample(10).tolist()","d72f6328":"treemap = pygal.Treemap()\ntreemap.title = 'Random Ratings of Apps Categories'\ntreemap.add('Family', family)\ntreemap.add('Game', game)\ntreemap.add('Tools', tools)\ntreemap.add('Medical', medical)\ntreemap.add('Business', business)\ntreemap.add('Productivity', productivity)\ntreemap.add('Personalization', personalization)\ntreemap.add('Communication', communication)\npygalplot(treemap)","4438942e":"!pip install pygal_maps_world\nfrom pygal_maps_world.maps import World","93ebb4c9":"# Country Codes are available in http:\/\/www.pygal.org\/en\/stable\/documentation\/types\/maps\/pygal_maps_world.html \nworld_org = World()\nworld_org.title = 'BRIC , OPEC G7 Countries'\nworld_org.add('BRIC', ['br', 'ru','in','cn'])\nworld_org.add('OPEC', ['ir', 'iq', 'kw', 'sa'])\nworld_org.add('G7', ['us', 'jp', 'gb', 'db','it','fr','ca'])\npygalplot(world_org)","9362abc0":"world_top_covid=covid[['Country\/Region','Deaths']].groupby('Country\/Region').agg('sum').reset_index().sort_values('Deaths',ascending=False)[:10]\nworld_top_covid['code']=['us','br','uk','it','fr','es','mx','in','ir','pe']","08c0585f":"top_covid_heat = World(show_legend=False)\ntop_covid_heat.title = 'Most COVID Deaths in Countries'\ntop_covid_dict = dict(zip(world_top_covid['code'], world_top_covid['Deaths']))\ntop_covid_heat.add(\"Countries\",top_covid_dict)\npygalplot(top_covid_heat)","07a854d0":"# Continent codes are available in http:\/\/www.pygal.org\/en\/stable\/documentation\/types\/maps\/pygal_maps_world.html \nfrom pygal_maps_world.maps import SupranationalWorld\n\nsupra = SupranationalWorld()\nsupra.add('Asia', [('asia', 1)])\nsupra.add('Europe', [('europe', 1)])\nsupra.add('Africa', [('africa', 1)])\nsupra.add('North america', [('north_america', 1)])\nsupra.add('South america', [('south_america', 1)])\nsupra.add('Oceania', [('oceania', 1)])\nsupra.add('Antartica', [('antartica', 1)])\npygalplot(supra)","0a639293":"cont_df=continent['Continent_Name'].value_counts().to_frame().reset_index().rename(columns={'index':'continent','Continent_Name':'count'})\ncont_df['continent_lwr']=cont_df['continent'].str.lower()\ncont_df['continent_lwr']=np.where(cont_df['continent_lwr']==\"north america\",\"north_america\",np.where(cont_df['continent_lwr']==\"south america\",\"south_america\",cont_df['continent_lwr']))","ff1d6acb":"most_countries = SupranationalWorld(show_legend=False)\nmost_countries.title = 'Most Countries in Continents'\nmost_countries_dict = dict(zip(cont_df['continent_lwr'], cont_df['count']))\nmost_countries.add(\"continents\",most_countries_dict)\npygalplot(most_countries)\n","c293eaeb":"**Purpose** : Display distribution of a continous variable in group box plot\n\n**Question** : How are the salary spread for Science&Tech,Comm&Mgmt & Others candidates?","642773b5":"**Purpose** : Displays quantitative representation of a variables in treemap\n\n**Question** : What are the random ratings for apps in playstore app categories? ","b474cf86":"**Purpose** : Displays quantitative representation of a variable in radar format with custom color.\n\n**Question** : How many netflix shows were released between 2014 and 2019 in US,UK,India,Japan?","f7d80440":"<a id=\"24\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>24. Basic Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","8a946ebb":"**Purpose** : Displays numerical representation of variables in gauge chart.\n\n**Question** : How many space missions were performed by NASA,USSR,ISRO and Boeing?","f7f047d6":"<a id=\"6\"><\/a>\n<font color=\"magenta\" size=+2.5><b>6. Basic Scatter plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","fb6c9ffa":"**Purpose** : Relationship between variables with respective to time with different dot size and no dots\n\n**Question** : How much are the average ratings for IT,Health & Business Sector jobs over past decade?","80c62d86":"**Purpose** : Displays quantitative representation of a variable in funnel chart.\n\n**Question** : How many kaggle users have acheived Grandmaster,Master and Expert tier over years?","ac0e70ca":"**Purpose** : Relationship between variables with respective to time.(Represent in stacked fill line)\n\n**Question** : How many people were shot in each race by Cops?","cbfc927b":"**Purpose** :  Displays quantitative representation of a variable with custom color of bars.\n\n**Question** : How many space missions were conducted by each companies?(visualize top 7 companies with most missions) ","956dcab8":"**Purpose** :  Displays quantitative representation of a variable with custom color based on values.\n\n**Question** : How many international football matches were held by each countries ?(Provide seperate color bar for countries that have conducted more than 100 matches) ","f2272bec":"<a id=\"31\"><\/a>\n<font color=\"peru\" size=+2.5><b>31. Colored Radar Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","6c53d798":"**Purpose** :  Displays quantitative representation of a variable with stacked bars.\n\n**Question** : What is the average score for universities in US,UK,Japan and Australia over period 2012-2015","ec314929":"**Purpose** : Relationship between numerical values.\n\n**Question** : How much dependency between Age and Fare of people who boarded in Titanic with respect to class?","2b92704c":"<a id=\"44\"><\/a>\n<font color=\"blueviolet\" size=+2.5><b>44. Continent HeatMap<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","2b8f964d":"## Data","6272ef4f":"<a id=\"16\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>16. Basic Pie Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","de8a797b":"## Library","1a76a1af":"**Purpose** : Displays numerical representation of a variable with dollar format in gauge chart.\n\n**Question** : How much is the price for houses with different Lotshape?","e6317a16":"<a id=\"22\"><\/a>\n<font color=\"crimson\" size=+2.5><b>22. Basic Histogram<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>\n\nHistogram are special bars that take 3 values for a bar: the ordinate height, the abscissa start and the abscissa end.","6a09a45c":"**Purpose** : Displays quantitative representation in pie\n\n**Question** : How many netflix movies were released between 2014-2020?","78e3bd88":"<a id=\"13\"><\/a>\n<font color=\"darkblue\" size=+2.5><b>13. Multiple Time Series plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","38ba1ab0":"**Purpose** : Displays location of a continents\n\n**Question** : Highlight the continents with different colors","b7a3cc3c":"<a href=\"#top\" class=\"btn btn-primary\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOP<\/a>","5025dd82":"**Purpose** : Displays numerical representation of a variable with percentage in half gauge chart.\n\n**Question** : How much is the COVID recovery rate between April to July?","1bcb6c58":"<a id=\"43\"><\/a>\n<font color=\"blueviolet\" size=+2.5><b>43. Continent Maps<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","209d6d4b":"**Purpose** : Displays numerical representation of a variable in gauge chart with different colors.\n\n**Question** : How many space missions were performed by NASA,USSR,ISRO and Boeing?","b1f92297":"**Purpose** : Display distribution of a continuous variable.\n\n**Question** : What is the closing price distribution of Cipla company?","1302db6f":"**Purpose** : Displays quantitative representation in ring shape\n\n**Question** : What is split distribution of number of houses sold over years?","28d28750":"<a id=\"4\"><\/a>\n<font color=\"purple\" size=+2.5><b>4. Horizontal Bar Chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","8120e314":"**Purpose** : Relationship between numerical values.\n\n**Question** : How much dependency between Age and Fare of people who boarded in Titanic?","fba9f9b1":"<a id=\"33\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>33. Basic Gauge<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","e8099da1":"<a id=\"2\"><\/a>\n<font color=\"purple\" size=+2.5><b>2. Bar chart - Color & Text position<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","1851014a":"<a id=\"18\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>18. Donut<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","d900f3a3":"<font size=\"+1\" color=chocolate ><b>Please Upvote my kernel and keep it in your favourite section if you think it is helpful.<\/b><\/font>","61638356":"<a id=\"17\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>17. Multiple Series Pie<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","7d23f103":"<a id=\"42\"><\/a>\n<font color=\"blueviolet\" size=+2.5><b>42. World HeatMap<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","1a6f2565":"**Purpose** : Displays quantitative representation in donut shape\n\n**Question** : What is split distribution of average scores of universitites - Imperial college London,Columbia University,Harvard University,Princeton & Harvard University?","d34fdbf4":"## Grouped Bar","98edc800":"**Purpose** : Display heatmap by count\n\n**Question** : How much dense are the COVID death victims in most affected countries?","f3ab35c2":"<font size=\"+3\" color=purple><b> <center><u>Cheatsheet - PyGal Interactive Plots<\/u><\/center><\/b><\/font>","9bdcdaa7":"**Purpose** : Relationship between variables with respective to time\n\n**Question** : How much are the average ratings for IT,Health & Business Sector jobs over past decade?","ed00cb34":"**Purpose** : Displays quantitative representation of a variable in a horizontal manner.\n\n**Question** : How many playstore apps fall in paid and free subscription for categories - FAMILY,GAME,MEDICAL,TOOLS,PERSONALIZATION ?","a98aff61":"<a id=\"5\"><\/a>\n<font color=\"purple\" size=+2.5><b>5. Stacked\/Grouped Bar Chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","cc44e104":"<a id=\"20\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>20. Half Pie<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","067764d6":"The whiskers are defined here by the population standard deviation of the data.\n\n**Purpose** : Display distribution of a continous variable in population standard deviation boxplot\n\n**Question** : How are the distribution of house prices sold in 2008,2009 & 2010?","5272d484":"<a id=\"36\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>36. Solid Gauge (Dollar)<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","361d18b7":"**Purpose** : Display heatmap by count\n\n**Question** : How many countries are there in each continent?","9ade16a4":"**Purpose** : Displays quantitative representation of a variables in pyramid manner\n\n**Question** : What is the population of gender marital status in England?","56d37a34":"<a id=\"0\"><\/a>\n<font color=\"blue\" size=+2.5><b>Starters<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","1deff1da":"<a id=\"7\"><\/a>\n<font color=\"magenta\" size=+2.5><b>7. Scatter plot - Category<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","e376e553":"<font color=\"chocolate\" size=+2.5><b>End Note<\/b><\/font>\n\nI hope you enjoyed my kernel.Also you might have forked it for future use.Please dont forget to appreciate me with an <font size=+1 color=\"red\"><b>Upvote<\/b><\/font>.\n\nI will try to add more plots here.So please stay tuned.\n\nThanks for your time.\n\nHappy Kaggling!!!","8cb781cc":"<a id=\"28\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>28. Standard Deviation Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","e0a95913":"<a id=\"14\"><\/a>\n<font color=\"orange\" size=+2.5><b>14. Basic Dot plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","579d9d56":"<a id=\"32\"><\/a>\n<font color=\"dodgerblue\" size=+2.5><b>32. Funnel Chart<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","c7e5f448":"<a id=\"8\"><\/a>\n<font color=\"teal\" size=+2.5><b>8. Basic Line plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","f09b9513":"**Purpose** : Displays quantitative representation of a variable in a horizontal manner with negative dots(hollow).\n\n**Question** : What is average difference between open and close price of HDFC and ICICI in last decade?","311f3419":"**Purpose** :  Displays quantitative representation of a variable with horizonatal bars.\n\n**Question** : How many people  in each race were shot by US police?","7fdef660":"<a id=\"29\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>29. Population Standard Deviation Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","d9e9bd31":"The whiskers are defined here by the standard deviation of the data.\n\n**Purpose** : Display distribution of a continous variable in standard deviation boxplot\n\n**Question** : How are the distribution of house prices sold in 2008,2009 & 2010?","2075d665":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of content<\/h3>\n\n* [Starters](#0)\n\n<font color=\"purple\" size=+1><b>Bar<\/b><\/font>\n* [1. Basic Bar plot](#1)\n* [2. Bar chart - Color & Text position](#2)\n* [3. Bar Chart - Value Coloring & Background Style](#3)\n* [4. Horizontal Bar Chart](#4)\n* [5. Stacked\/Grouped Bar Chart](#5)\n\n<font color=\"magenta\" size=+1><b>Scatter<\/b><\/font>\n* [6. Basic Scatter plot](#6)\n* [7. Scatter plot - Category](#7)\n  \n<font color=\"teal\" size=+1><b>Line<\/b><\/font>\n* [8. Basic Line plot](#8)\n* [9. Line plot & Dot Formatting](#9)\n* [10. Horizontal Line plot](#10)\n* [11. Stacked Line plot](#11)\n   \n<font color=\"darkblue\" size=+1><b>Time Series<\/b><\/font>\n* [12. Time Series plot](#12)\n* [13. Multiple Time Series plot](#13)\n    \n<font color=\"orange\" size=+1><b>Dot<\/b><\/font>\n* [14. Basic Dot Plot](#14)\n* [15. Negative Dot plot](#15)\n   \n<font color=\"darkgreen\" size=+1><b>Pie<\/b><\/font>\n* [16. Basic Pie Plot](#16)\n* [17. Multiple Series Pie](#17)\n* [18. Donut](#18)\n* [19. Ring](#19)\n* [20. Half Pie](#20)\n* [21. Rounded Bars](#21)\n    \n<font color=\"crimson\" size=+1><b>Histogram<\/b><\/font>\n* [22. Basic Histogram](#22)\n* [23. Basic Histogram](#23)\n\n<font color=\"limegreen\" size=+1><b>Box<\/b><\/font>\n* [24. Basic Box Plot](#24)\n* [25. Grouped Box Plot](@25)\n* [26. 1.5 Interquartile Box Plot](#26)\n* [27. Tukey Box Plot](#27)\n* [28. Standard Deviation Box Plot](#28)\n* [29. Population Standard Deviation Box Plot](#29)\n    \n<font color=\"peru\" size=+1><b>Radar<\/b><\/font>\n* [30. Radar Plot](#30)\n* [31. Colored Radar Plot](#31)\n\n<font color=\"dodgerblue\" size=+1><b>Funnel<\/b><\/font>\n* [32. Funnel chart](#32)\n    \n<font color=\"deeppink\" size=+1><b>Gauge<\/b><\/font>\n* [33. Basic Gauge](#33)\n* [34. Styled Gauge](#34)\n* [35. Solid Gauge (Percent)](#35)\n* [36. Solid Gauge (Dollar)](#36)\n* [37. Solid Gauge Multiple Split](#37)\n* [38. Half Solid Gauge](#38)\n    \n<font color=\"olive\" size=+1><b>Pyramid<\/b><\/font>\n* [39. Basic Pyramid](#39)\n\n<font color=\"goldenrod\" size=+1><b>Treemap<\/b><\/font>\n* [40. Treemap](#40)\n \n<font color=\"blueviolet\" size=+1><b>Maps<\/b><\/font>\n* [41. World Maps](#41)\n* [42. World HeatMap](#42)\n* [43. Continent Maps](#43)\n* [44. Continent HeatMap](#44)","9392c49d":"<a id=\"35\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>35. Solid Gauge (Percent)<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","7205fa3c":"**Purpose** :  Displays quantitative representation of a variable.\n\n**Question** : How many space missions were conducted by each companies?(visualize top 7 companies with most missions)","134a0f17":"<a id=\"10\"><\/a>\n<font color=\"teal\" size=+2.5><b>10. Horizontal Line plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","edb43b61":"The whiskers are the lowest datum whithin the 1.5 IQR of the lower quartile and the highest datum still within 1.5 IQR of the upper quartile. The outliers are shown too.\n\n**Purpose** : Display distribution of a continous variable in boxplot with whiskers\n\n**Question** : How are the ratings spread for Education,Entertainment & Business?","fa5beee4":"**Purpose** : Relationship between variables with respective to date.(multiple series)\n\n**Question** : How much is the covid death rate in the month of August in India,Brazil,UK?","7f788143":"<a id=\"40\"><\/a>\n<font color=\"goldenrod\" size=+2.5><b>40. Treemap<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","96fcf1a1":"<a id=\"12\"><\/a>\n<font color=\"darkblue\" size=+2.5><b>12. Time Series plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","4f4b7e28":"**Purpose** : Display distribution of a continous variable.\n\n**Question** : How are the salary spread for Science and Tech candidates?","a1229c65":"<a id=\"39\"><\/a>\n<font color=\"olive\" size=+2.5><b>39. Basic Pyramid<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","2d661096":"<a id=\"37\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>37. Solid Gauge Multiple Split<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","ec3c45dd":"**Purpose** : Displays numerical representation of a variable with percentage in gauge chart.\n\n**Question** : How much is the COVID recovery rate between April to July?","6c6084cc":"<a id=\"41\"><\/a>\n<font color=\"blueviolet\" size=+2.5><b>41. World Maps<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","ae00331d":"# Objective\n\nThe aim of this kernel is provide all essential and most commonly used pygal charts in a single page.This kernel will hold basic charts and different attributes used for them.It could be a great time saver for you.Just utilize it anytime when you are working on data visualizations.\n\nI have learned them from [pygal community](http:\/\/www.pygal.org\/en\/stable\/documentation\/) and deployed them on datasets available in kaggle platform","2f6131c5":"<a id=\"30\"><\/a>\n<font color=\"peru\" size=+2.5><b>30. Radar Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","b927edff":"<a id=\"25\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>25. Grouped Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","b4fa14cc":"<a id=\"3\"><\/a>\n<font color=\"purple\" size=+2.5><b>3. Bar Chart - Value Coloring & Background Style<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","206349aa":"**Purpose** : Displays quantitative representation in half pie\n\n**Question** : What is split distribution of titanic passenger class?","fca65f4e":"**Purpose** : Display distribution of a multiple continuous variable.\n\n**Question** : What is the closing price distribution of Cipla & Sun Pharma company?","57fd9b7b":"<a id=\"19\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>19. Ring<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","b54dbf35":"<a id=\"1\"><\/a>\n<font color=\"purple\" size=+2.5><b>1. Basic Bar plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","4450ee7b":"<font size=+1 color=\"black\"><u>Attributes used in plots:<\/u><\/font>\n\n<font size=+1 color=\"brown\"><b>Basic Chart Attributes:<\/b><\/font>\n* **title** : Title of plot\n* **x_title** : Plot x axis title\n* **y_title** : Plot y axis title\n* **x_labels \/ y_labels** : Plot x\/y axis label\n* **show_x_labels \/ show_y_labels** : Disable X\/Y labels if *False*\n* **x_label_rotation \/ y_label_rotation** : Rotation of X\/Y lables\n* **width \/ height** : width\/height of plot\n* **spacing** : space between elements(eg:Bar plot)\n* **margin** : external margin\n* **show_legend** : Disable legend if *False*\n* **legend_at_bottom** : Display legends if *True*\n* **legend_at_bottom_columns** : Display legends in columns(number)\n* **include_x_axis** : Include x axis line\n* **inverse_y_axis** : Inverse yaxis values\n* **range** : range of y axis values\n* **tooltip_border_radius** : tooltip box curve(number)\n\n<font size=+1 color=\"brown\"><b>Basic Serie Attributes:<\/b><\/font>\n\n* **secondary** : display secondary line of plot(only for serie)\n* **stroke** : Display line if *True*\n* **fill** : Display area of line if *True*\n* **show_dots** :remove dots if *False*\n* **dots_size** : size of dot\n* **value_formatter** : display the formatted value.(ex:dollar,percentage)\n\n<font size=+1 color=\"brown\"><b>Basic Value Attributes:<\/b><\/font>\n\n* **label** : tooltip for particular serie of chart\n* **color** : tooltip for particular serie of chart\n\n<font size=+1 color=\"brown\"><b>Basic Styles:<\/b><\/font>\n\n* **style** : builtin plot style (ex:DarkStyle) For more styles,click here: http:\/\/www.pygal.org\/en\/stable\/documentation\/builtin_styles.html\n* **background** : The color of the image background \n* **plot_background** :The color of the chart area background\n* **foreground** : The main foregrond color\n* **opacity** : The opacity of chart element\n* **opacity_hover** : The opacity of chart element on mouse hover\n* **colors** : The serie color list\n* **label_font_size** : The label font size\n* **title_font_family** : The title font family\n\nFor more custom styles,click here : http:\/\/www.pygal.org\/en\/stable\/documentation\/custom_styles.html","203f8e5c":"<a id=\"21\"><\/a>\n<font color=\"darkgreen\" size=+2.5><b>21. Rounded Bars<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","b99680d2":"<a id=\"27\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>27. Tukey Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","aa030b52":"<a id=\"9\"><\/a>\n<font color=\"teal\" size=+2.5><b>9. Line plot & Dot Formatting<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","1bfe5b4d":"<a id=\"11\"><\/a>\n<font color=\"teal\" size=+2.5><b>11.Stacked Line plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","a85bd0c4":"**Purpose** : Displays numerical representation of a variable with percentage for multiple series in a single gauge chart.\n\n**Question** : How much black and white race people were killed in US among the whole race population?","9600e39b":"**Purpose** : Relationship between variables with respective to date.\n\n**Question** : How much is the covid death rate in the month of August in India?","216c609f":"**Purpose** : Relationship between variables with respective to time.(Represent in horizonatal line)\n\n**Question** : How many people were shot in each race by Cops?","2e6394ce":"<a id=\"26\"><\/a>\n<font color=\"limegreen\" size=+2.5><b>26. 1.5 Interquartile Box Plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","0a44dd63":"<a id=\"15\"><\/a>\n<font color=\"orange\" size=+2.5><b>15. Negative Dot plot<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","513a7c6b":"<a id=\"38\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>38. Half Solid Gauge<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","15e2c6fb":"**Purpose** : Displays quantitative representation in pie with multiple split\n\n**Question** : How many people recovered from covid in each month belonging to India,Mexico,Canada,Colombia countries?","93a18e17":"<a id=\"34\"><\/a>\n<font color=\"deeppink\" size=+2.5><b>34. Styled Gauge<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","0dfd70d3":"Same as above except the whiskers are the first quartile minus 1.5 times the interquartile range and the third quartile plus 1.5 times the interquartile range.\n\n**Purpose** : Display distribution of a continous variable in boxplot with 1.5 interquartile range.\n\n**Question** : How are the ratings spread for Education,Entertainment & Business?","7f14246a":"<a id=\"23\"><\/a>\n<font color=\"crimson\" size=+2.5><b>23. Multiple Histogram<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOC<\/a>","f61ed362":"<font color=\"chocolate\" size=+2.5><b>My Other Kernels<\/b><\/font>\n\nClick on the button to view kernel...\n\n<a href=\"https:\/\/www.kaggle.com\/raenish\/kaggle-users-competitions-stats-eda\" class=\"btn btn-success\" style=\"color:white;\">Kaggle Users & Competition EDA<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/kaggle-notebooks-stats-eda\" class=\"btn btn-success\" style=\"color:white;\">Kaggle Notebook EDA<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/covid19-tweets-interactive-eda\" class=\"btn btn-success\" style=\"color:white;\">#COVID19 EDA<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/self-evaluation-kaggle-profiler\" class=\"btn btn-success\" style=\"color:white;\">Kaggle Profiler<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/cheatsheet-100-plotly-part-1-basic\/\" class=\"btn btn-success\" style=\"color:white;\">100+ Plotly Part 1<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/cheatsheet-100-plotly-part-2-advanced\" class=\"btn btn-success\" style=\"color:white;\">100+ Plotly Part 2<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/become-grandmaster\/\" class=\"btn btn-success\" style=\"color:white;\">Become GrandMaster<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/don-t-shoot\" class=\"btn btn-success\" style=\"color:white;\">Dont Shoot<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/cheatsheet-date-helpers\/\" class=\"btn btn-success\" style=\"color:white;\">Cheatsheet Date Helpers<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/cheatsheet-text-helper-functions\/\" class=\"btn btn-success\" style=\"color:white;\">Cheatsheet Text Helpers<\/a><br><br>\n<a href=\"https:\/\/www.kaggle.com\/raenish\/tweet-sentiment-insight-eda\/\" class=\"btn btn-success\" style=\"color:white;\">Tweet Sentiment Extraction<\/a><br><br>\n\n### If these kernels impress you,give them an <font size=\"+2\" color=\"red\"><b>Upvote<\/b><\/font>.<br>","4b33bc63":"**Purpose** : Displays quantitative representation of a variable in radar format.\n\n**Question** : How many netflix shows were released between 2014 and 2019 in US,UK,India,Japan?","9d5fc6aa":"**Purpose** : Displays quantitative representation in ring shape\n\n**Question** : What is split distribution of average scores of universitites - Imperial college London,Columbia University,Harvard University,Princeton & Harvard University?","6af82fec":"**Purpose** : Displays location of a country\n\n**Question** : Highlight the BRIC,G7 and OPEC countries"}}