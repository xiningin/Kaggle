{"cell_type":{"de6ba673":"code","a9eee272":"code","2155b513":"code","817e0a42":"code","04cb1165":"code","e936a24f":"code","20de9e65":"code","72bc4f4a":"code","8d6ac5bc":"code","5f7524c9":"code","e7493149":"code","ee9eefba":"code","80934c62":"code","d2f16619":"code","4ec129b9":"code","b2418c8b":"code","a901af54":"code","2a2c6cfb":"code","c7766ad6":"code","7b884976":"code","4c08e631":"code","89977827":"code","a7381bf0":"code","9dfb5e2d":"code","0c181251":"code","2a0b1a1b":"code","f02118cb":"code","d64c0e6f":"code","cb58a67c":"code","ce5db19c":"code","4baaee40":"code","c2e88647":"code","96331e54":"code","7cbe57b7":"code","15b28838":"code","226ae708":"markdown","93c9084a":"markdown","7e9ae5cb":"markdown","1669f33d":"markdown","f7308f1d":"markdown","15e330de":"markdown","d83a188c":"markdown","2bd745d2":"markdown","96884039":"markdown","a25b01bf":"markdown","a0b2d3cc":"markdown","6fcafb81":"markdown","c85d637a":"markdown","5366e034":"markdown","047ff082":"markdown","9f27460b":"markdown","4d5dfcf1":"markdown","7b5c0ec6":"markdown","e0b6f318":"markdown","f2b16a03":"markdown","02f17096":"markdown","a135f4e1":"markdown","5080b960":"markdown","384df08c":"markdown","310867bf":"markdown","9ca8be35":"markdown","dc33cf6d":"markdown","795d560e":"markdown","effa3fa0":"markdown","e141c0f6":"markdown","9ab76d7d":"markdown","4925c881":"markdown","858a5bcf":"markdown","0953b484":"markdown","38842bfc":"markdown","c52bf826":"markdown","e7615ac8":"markdown","2e84d7f4":"markdown","d2862dce":"markdown","5b8238a8":"markdown","6739cb85":"markdown","f84cae90":"markdown","3d6206b2":"markdown","7981892f":"markdown","67fec5ca":"markdown","dbf50fe1":"markdown","09cc05fe":"markdown","edec9fbd":"markdown","62f9d1b0":"markdown","87c1483e":"markdown","5f7c9266":"markdown","c27e883b":"markdown","645d6d12":"markdown","a58b295a":"markdown"},"source":{"de6ba673":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nfrom bokeh.plotting import figure, output_file, show\nfrom bokeh.layouts import row\nfrom bokeh.io import output_notebook\n\n\nimport sklearn\nimport sklearn.metrics as metrics\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score\nfrom sklearn.model_selection import train_test_split,  cross_val_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import tree\nfrom sklearn import model_selection\n\n\nimport warnings\nwarnings.filterwarnings('ignore')\noutput_notebook()\n%matplotlib inline","a9eee272":"pd.set_option('display.max_columns', 12)\n\nred_wine=pd.read_csv('..\/input\/redwinedataset\/winequality-red.csv',delimiter=';')\n\nred_wine.head()\n","2155b513":"print(\"Shape of Red Wine dataset: {s}\".format(s = red_wine.shape))\nprint(\"Column names: {s}\".format(s = list(red_wine)))","817e0a42":"# Summary of the data\nred_wine.describe()","04cb1165":"red_wine.isnull().sum()","e936a24f":"red_wine.rename(columns={'fixed acidity': 'fixed_acidity','citric acid':'citric_acid','volatile acidity':'volatile_acidity','residual sugar':'residual_sugar','free sulfur dioxide':'free_sulfur_dioxide','total sulfur dioxide':'total_sulfur_dioxide'}, inplace=True)\nred_wine.head(n=5)","20de9e65":"red_wine['fixed_acidity'].unique()","72bc4f4a":"red_wine.fixed_acidity.value_counts().sort_index()","8d6ac5bc":"sns.countplot(x='fixed_acidity', data=red_wine)","5f7524c9":"red_wine['total_sulfur_dioxide'].unique()","e7493149":"red_wine.total_sulfur_dioxide.value_counts().sort_index()","ee9eefba":"sns.countplot(x='total_sulfur_dioxide', data=red_wine)","80934c62":"red_wine['pH'].unique()","d2f16619":"red_wine.pH.value_counts().sort_index()","4ec129b9":"sns.countplot(x='pH', data=red_wine)","b2418c8b":"red_wine['quality'].unique()","a901af54":"red_wine.quality.value_counts().sort_index()","2a2c6cfb":"sns.countplot(x='quality', data=red_wine)","c7766ad6":"conditions = [\n    (red_wine['quality'] >= 7),\n    (red_wine['quality'] <= 4)\n]\nrating = ['high', 'low']\nred_wine['rating'] = np.select(conditions, rating, default='medium')\nred_wine.rating.value_counts()","7b884976":"red_wine.groupby('rating').mean()","4c08e631":"correlation = red_wine.corr()\n\nzeromask = np.zeros_like(correlation) #creates an array of zeros\ntriangle_indices = np.triu_indices_from(zeromask)\nzeromask[triangle_indices] = True\n\nplt.figure(figsize=(14, 8))\nax=sns.heatmap(correlation, annot=True, linewidths=0,mask=zeromask, vmin=-1, cmap=sns.diverging_palette(20, 220, n=200), square=True)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n);","89977827":"bx = sns.boxplot(x=\"quality\", y='alcohol', data = red_wine)\nbx.set(xlabel='Wine Quality', ylabel='Alcohol Percent', title='Alcohol percent in different wine quality types')","a7381bf0":"bx = sns.boxplot(x=\"rating\", y='sulphates', data = red_wine)\nbx.set(xlabel='Wine Ratings', ylabel='Sulphates', title='Sulphates in different types of Wine ratings')","9dfb5e2d":"bx = sns.violinplot(x=\"rating\", y='citric_acid', data = red_wine)\nbx.set(xlabel='Wine Ratings', ylabel='Citric Acid', title='Xitric_acid in different types of Wine ratings')","0c181251":"bx = sns.violinplot(x=\"rating\", y='fixed_acidity', data = red_wine)\nbx.set(xlabel='Wine Ratings', ylabel='Fixed Acidity', title='Fixed Acidity in different types of Wine ratings')","2a0b1a1b":"bx = sns.swarmplot(x=\"rating\", y=\"pH\", data = red_wine);\nbx.set(xlabel='Wine Ratings', ylabel='pH', title='pH in different types of Wine ratings')","f02118cb":"wine_table = []\n\nfor i in red_wine.quality:\n    if i <= 4:\n        wine_table.append(0) #Low quality Wine\n    elif i >= 7:\n        wine_table.append(2) #Medium quality Wine\n    else:\n        wine_table.append(1) #High Wine\n        \nred_wine['label'] = wine_table\nred_wine.head(n=20)\n","d64c0e6f":"X=red_wine.drop(['label','quality', 'rating'], axis=1)# Features\ny=red_wine['label']  # Labels\n\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) ","cb58a67c":"rfc=RandomForestClassifier(criterion = 'entropy',random_state=1)\n\n#Train the model using the training sets \nrfc.fit(X_train,y_train)\n\n#Perform prediction on the test set\nrfc_pred=rfc.predict(X_test)\n","ce5db19c":"print(\"Classification Report:\\n\",classification_report(y_test, rfc_pred))\nprint(\"Confusion Metrics :\\n\",confusion_matrix(y_test, rfc_pred))\nprint('\\n')\nprint('F1 Score: ', f1_score(y_test, rfc_pred, average='micro'))\nprint('Precision Score:', metrics.precision_score(y_test, rfc_pred, average=\"micro\"))\nprint(\"Accuracy: \",metrics.accuracy_score(y_test, rfc_pred))","4baaee40":"dtc=DecisionTreeClassifier(criterion = 'entropy',random_state=1)\n\n#Train the model using the training sets \ndtc.fit(X_train,y_train)\n\n#Perform prediction on the test set\ndtc_pred=dtc.predict(X_test)","c2e88647":"print(\"Classification Report:\\n\",classification_report(y_test, dtc_pred))\nprint(\"Confusion Metrics :\\n\",confusion_matrix(y_test, dtc_pred))\nprint('\\n')\nprint('F1 Score: ', f1_score(y_test, dtc_pred, average='micro'))\nprint('Precision Score:', metrics.precision_score(y_test, dtc_pred, average=\"micro\"))\nprint(\"Accuracy: \",metrics.accuracy_score(y_test, dtc_pred))","96331e54":"fig = plt.figure(figsize=(250,200))\n_ = tree.plot_tree(dtc,class_names=red_wine.rating, filled=True)","7cbe57b7":"feature_importance=pd.DataFrame({\n    'rfc':rfc.feature_importances_,\n    'dtc':dtc.feature_importances_\n}, index=red_wine.drop(columns=['label','rating', 'quality']).columns)\n\nfeature_importance.sort_values(by='rfc',ascending=True,inplace=True)\n\nindex = np.arange(len(feature_importance))\nfig, ax = plt.subplots(figsize=(18,8))\nrfc_feature=ax.barh(index,feature_importance['rfc'],0.4,color='purple',label='Random Forest')\ndt_feature=ax.barh(index+0.4,feature_importance['dtc'],0.4,color='lightgreen',label='Decision Tree')\nax.set(yticks=index+0.4,yticklabels=feature_importance.index)\n\nax.legend()\nplt.show()","15b28838":"models = []\n\nmodels.append(('RandomForestClassifier', RandomForestClassifier()))\nmodels.append(('DecisionTreeClassifier', DecisionTreeClassifier()))\n# evaluate each model in turn\nresults = []\nnames = []\nscoring = 'accuracy'\nfor name, model in models:\n    kfold = model_selection.KFold(n_splits=10)\n    cv_results = model_selection.cross_val_score(model, X_train, y_train, cv=kfold, scoring=scoring)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.std())\n    print(msg)\n# boxplot algorithm comparison\nfig = plt.figure()\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","226ae708":"- We can observe that, the *'alcohol, sulphates, citric_acid & fixed_acidity'* have maximum corelation with response variable '*quality*'. \n- This means that, they need to be further analysed for detailed pattern and corelation exploration. Hence, we will use only these 4 variables in our future analysis. ","93c9084a":"- Lets plot the distribution","7e9ae5cb":"### <span style=\"color:orange\">Fixed Acidity<\/span> Distribution","1669f33d":"- We will first use the decision tree classifier model for predicting quality of the wine.\n- We have already created a new categorical variable 'label' with three possible values (high = 1, medium=2 & low = 0).","f7308f1d":"### Splitting the data:","15e330de":"### Exploring the <span style=\"color:red\"> Red Wine <\/span> dataset","d83a188c":"- We can conclude that the total sulfur dioxide ranges from 6.0 to 289.0","2bd745d2":"### To conclude:\n- The range for fixed acidity is quite high with minimum being 4.6 and maximum being 15.9.\n- pH value varies from 2.720 to 4.010 with a median being 3.210.\n- Sulfur.dioxide (both Free and Total) is distributed over a wide range across the samples.\n- The alcohol content varies from 8.40 to 14.90.\n- The quality of the samples range from 3 to 8 with 6 being the median.\n\n","96884039":"- We can conclude that the fixed acidity ranges from 4.6 to 15.9","a25b01bf":"- From the summary we find that there are no invalid\/negative values.","a0b2d3cc":"- The red wine dataset doesn't have any missing values\/rows\/cells for any of the variables\/feature.\n","6fcafb81":"- Let's rename the modify the dataset headers\/column names by removing the _'blank spaces'_ from it.","c85d637a":"### Data Preprocessing:","5366e034":"- Let's see how the data is distributed among those values","047ff082":"### Evaluating the model","9f27460b":"### Training the model","4d5dfcf1":"- Let's check how many unique values does the target feature _'pH'_ has?","7b5c0ec6":"### Analysis of sulphates & wine ratings:","e0b6f318":"- We can conclude that the quality ranges from 3 to 8","f2b16a03":"## Random Forest Classification","02f17096":"- Let's check how many unique values does the target feature _'pH'_ has?","a135f4e1":"- We can conclude that the pH ranges from 2.74 to 4.01","5080b960":"### Analysis of Citric Acid & wine ratings:","384df08c":"### Feature Importance Comaprision","310867bf":"### Quality Distribution","9ca8be35":"Wine Data Analysis & Quality Prediction Using Decision Tree & Random Forests\n---\n\n- 1. Descriptive analysis of the data\n- 2. Univariate analysis of the data\n- 3. Multivariate analysis of the data\n- 4. Predict the wine quality using Random Forests\n- 5. Predict the wine quality using decision tree\n- 6. Compare the two models\n\n","dc33cf6d":"### <span style=\"color:brown\">Sulfur Dioxide<\/span> Distribution","795d560e":"### Analysis of fixed acidity & wine ratings:\n","effa3fa0":"- Let's create a new discreet, categorical response feature '_rating_' from existing '_quality_' variable.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;low: 1-4  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;medium: 5-6  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;high: 7-10","e141c0f6":"### Analysis of pH & wine ratings:","9ab76d7d":"- We will first use the random forest classifier model for predicting quality of the wine.\n- Let's create a new categorical variable 'label' with three possible values (high = 1, medium=2 & low = 0).","4925c881":"### Training the model","858a5bcf":"### <span style=\"color:green\">pH<\/span> Distribution","0953b484":"- Let's see how the data is distributed among those values","38842bfc":"- Let's look for the missing values in red wine dataset:","c52bf826":"### Comapring the two models","e7615ac8":"### Loading the <span style=\"color:red\"> Red Wine <\/span> dataset","2e84d7f4":"## Multivariate Analysis","d2862dce":"## The <span style=\"color:red\"> Red Wine <\/span> dataset\n\n- Lets read the red wine data set from the *'https:\/\/archive.ics.uci.edu\/ml\/datasets\/wine+qualityy'*.  \n- Here, we can use the *read_csv()* from the *pandas* library to load data into dataframe from the remote url.","5b8238a8":"### Evaluating the model","6739cb85":"- Let's check how many unique values does the target feature 'sulfur dioxide' has?","f84cae90":"- Lets plot the distribution","3d6206b2":"- From above lines we can learn that there are total _1599 observations with 12 different feature variables\/attributes_ present in the Red Wine dataset.","7981892f":"- Let's see how the data is distributed among those values","67fec5ca":"## Importing modules:\n- *Numpy:* It will provide the support for efficient numerical computation.  \n- *Pandas:* It is convenient library that supports dataframes. Working with pandas will bring ease in many crucial data operations.  \n- *Matplotlib:* It provides a MATLAB-like plotting framework.  \n- *Seaborn:* It is a visualization library based on matplotlib which provides a high-level interface for drawing attractive statistical graphics.  \n- *Bokeh:* It is a interactive visualization library that targets modern web browsers for presentation.  \n- *Statsmodel:* It provides functions and classes for statistical tests and models.  \n- *Sklearn:* It is python library for data mining, data analysis and machine learning.","dbf50fe1":"- Let's see how the data is distributed among those values","09cc05fe":"## Descriptive analysis","edec9fbd":"- Let's check the corelation between the target variable and predictor variables","62f9d1b0":"- Let's Plot The Distribution Of quailty values","87c1483e":"## Decision Tree Classification","5f7c9266":"- Let's check how many unique values does the target feature 'fixed acidity' has?","c27e883b":"### Analysis of alcohol percentage with wine quality:","645d6d12":"## Univariate analysis","a58b295a":"- Let's Plot The Distribution Of pH values"}}