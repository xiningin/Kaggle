{"cell_type":{"dd823614":"code","231e4270":"code","eecfdc78":"code","5cd2d91e":"code","fa7e74e6":"code","4f397a5e":"code","cb8def6c":"code","5c7e43b5":"code","90ce4bfd":"code","275e0b83":"code","5e86b247":"code","2959e8d0":"code","616b3e50":"code","be2cc92c":"code","bf11968d":"code","ae06e720":"code","9f6438e3":"markdown","86d7c028":"markdown","d2201539":"markdown"},"source":{"dd823614":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom kerastuner.tuners import RandomSearch\n\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","231e4270":"dataset =pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndataset.head()","eecfdc78":"dataset.shape","5cd2d91e":"dataset.isnull().any()","fa7e74e6":"categorical_features=[feature for feature in dataset.columns if dataset[feature].dtypes=='O']\nfor feature in categorical_features:\n    sns.countplot(dataset[feature])\n    plt.title(feature)\n    plt.show()","4f397a5e":"corr=dataset.corr()\ncont_features=corr.index\nsns.heatmap(dataset[cont_features].corr(), annot=True, cmap='RdYlGn')\nplt.title('Corellation')","cb8def6c":"sns.pairplot(dataset)","5c7e43b5":"Y=dataset['charges']\nX=dataset.copy()\nX=X.drop(['charges'], axis=1)\nX.head()","90ce4bfd":"Y.head()","275e0b83":"for column in categorical_features:\n        dummy=pd.get_dummies(X[column], drop_first=True);\n        X=X.drop(column, axis=1)\n        X=pd.concat([X, dummy], axis=1)\nX.head()","5e86b247":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler().fit(X)\nX=sc.transform(X)","2959e8d0":"def build_model(hp):\n    model=keras.Sequential()\n    for i in range(hp.Int('num_layers', 2, 20)):\n            model.add(layers.Dense(units=hp.Int('units_'+str(i), min_value=32, max_value=512, step=32), activation='relu'))\n    model.add(layers.Dense(1, activation='linear'))\n    model.compile(optimizer= keras.optimizers.Adam(\n    hp.Choice('learning_rate', values=[1e-2, 1e-3, 1e-4])),\n            loss='mean_absolute_error',\n        metrics=['mean_absolute_error'])\n    return model;\n\n\n","616b3e50":"tuner=RandomSearch(build_model,\n                  objective='val_mean_absolute_error',\n                  max_trials=5,\n                  executions_per_trial=3)","be2cc92c":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test=train_test_split(X, Y, test_size=0.3)","bf11968d":"tuner.search(x_train, y_train, validation_split=0.1, epochs=5)","ae06e720":"best_model=tuner.get_best_models(num_models=1)[0]\ny_predict=best_model.predict(x_test)\n\n\nfrom sklearn.metrics import r2_score\nprint(r2_score(y_test, y_predict))","9f6438e3":"**Feature Engineering**","86d7c028":"**Data Analysis**","d2201539":"**Model Building and Execution**"}}