{"cell_type":{"b76ac92e":"code","c563f9ad":"code","5017cc73":"code","f5c08977":"code","ccf139e0":"code","7800187f":"code","05711dc0":"code","9c1e77f0":"code","abef18e6":"code","01bc13ab":"code","da110e49":"code","aa2ad4d9":"code","1cd827a7":"code","969eb7a6":"code","01b4b59e":"code","fe830350":"code","8bcc8470":"code","0f5a7dfb":"code","9c3b93f4":"code","d9f6491c":"code","d6ff64b0":"code","a8b24652":"code","43a7727e":"code","212f0625":"code","a314acd8":"code","5959a7f0":"code","e990d2bf":"code","f501be93":"code","f3c6cb44":"code","5c8e50ae":"code","3ab038c4":"code","e05ed2c5":"code","2fbeb037":"code","3b1955f1":"code","b855fdb8":"code","271a9a26":"code","a2f0fd45":"code","43175385":"code","7f9bcce0":"code","d3a1f8a8":"code","0f4580b1":"code","b8b2aec0":"code","a76817c9":"code","998525c9":"code","e9a61d8a":"code","b0a5ea39":"code","bf5b3f04":"code","32342bcc":"code","98af23ed":"code","62cbd7e5":"code","b5a97d60":"code","036e408a":"code","490c9c25":"code","6458e954":"code","80441492":"code","9e42b779":"code","d74766af":"code","c74a47a5":"code","44c81c99":"code","0d925629":"code","b1ff57c0":"code","216136e9":"code","a916905e":"code","3940dadd":"code","44203b7d":"code","e6b5e029":"code","43461112":"code","a8530482":"code","1bec7b90":"code","97888ff8":"code","f7733a42":"code","9f092dca":"code","865be7d2":"code","64bebe70":"code","a33cfb18":"code","f4f133f8":"code","24732456":"code","cdb834f5":"code","b550d1fc":"code","58307150":"code","5a0d5acb":"code","092936df":"code","4290e233":"code","08e5c187":"code","375d1557":"code","47db88fc":"code","a3d8dc89":"code","14e87f62":"code","936b3f9e":"code","3ab3fbeb":"code","56dc6797":"markdown","820b1599":"markdown","a65d823b":"markdown","41a9c6c0":"markdown","73ad4c2a":"markdown","f7110eef":"markdown","8f2894f0":"markdown","873261fb":"markdown","61a3ea79":"markdown","7ec9d333":"markdown","11c0c69a":"markdown","908d8c57":"markdown","6bf8c16c":"markdown","ac1620bb":"markdown","bace638a":"markdown","aed1d3d3":"markdown","7d5496d4":"markdown","aed3ac35":"markdown","6f65de68":"markdown","ac4a46d0":"markdown","da62d388":"markdown","c9da56ac":"markdown","ae9a0290":"markdown","a509c04e":"markdown","701e23e7":"markdown"},"source":{"b76ac92e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c563f9ad":"# Carregando os dados\ndf = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf.shape, test.shape","5017cc73":"# Juntando os dataframes de treino e teste\ndf_all = df.append(test)\n\ndf_all.shape","f5c08977":"# Entender os dados\ndf_all.info(max_cols=145)","ccf139e0":"# Quais colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","7800187f":"# Olhando a coluna dependency\ndf_all['dependency'].value_counts()","05711dc0":"# Vamos obter o idhogar de alguns casos\ndf_all[df_all['dependency'] == 'yes']['idhogar'].head()","9c1e77f0":"# Vamos investigar o idhogar 2b58d945f pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == '2b58d945f'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","abef18e6":"# Vamos investigar o idhogar d6dae86b7 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == 'd6dae86b7'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","01bc13ab":"# Vamos obter o idhogar de alguns casos\ndf_all[df_all['dependency'] == 'no']['idhogar'].head()","da110e49":"# Vamos investigar o idhogar 3e16fab89 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == '3e16fab89'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","aa2ad4d9":"# Vamos investigar o idhogar d29058053 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == 'd29058053'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","1cd827a7":"# Analisando os dados da coluna edjefa\ndf_all['edjefa'].value_counts()","969eb7a6":"# Analisando os dados da coluna edjefe\ndf_all['edjefe'].value_counts()","01b4b59e":"# Vamos transformar 'yes' em 1 e 'no' em 0\n# nas colunas edjefa e edjefe\nmapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)","fe830350":"# Vamos transformar 'yes' em 1 e 'no' em 0\n# na coluna dependency\ndf_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","8bcc8470":"# Quais colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","0f5a7dfb":"# Visualizando do comando info\ndf_all.info(max_cols=145)","9c3b93f4":"# Verificando os valores nulos\ndf_all.isnull().sum()","d9f6491c":"# Verificando os valores de aluguel (v2a1) para os chefes\/as de familia (parentesco1 = 1)\ndf_all[df_all['parentesco1'] == 1]['v2a1'].isnull().sum()","d6ff64b0":"# Verificando os valores de aluguel (v2a1) para \ndf_all[df_all['parentesco2'] == 1]['v2a1'].isnull().sum()","a8b24652":"# Verificando os valores de aluguel (v2a1) para \ndf_all[df_all['parentesco3'] == 1]['v2a1'].isnull().sum()","43a7727e":"# Verificando os valores de aluguel (v2a1) para \ndf_all[df_all['parentesco12'] == 1]['v2a1'].isnull().sum()","212f0625":"# Qual a cara dos dados de v18q\ndf_all['v18q'].value_counts()","a314acd8":"# Prenchendo com 0 os valores nulos de v18q1\ndf_all['v18q1'].fillna(0, inplace=True)","5959a7f0":"# Qual a cara dos dados de escolari\ndf_all['escolari'].value_counts()","e990d2bf":"# Qual a cara dos dados de rez_esc\ndf_all['rez_esc'].value_counts()","f501be93":"\ndf_all['meaneduc'].value_counts()","f3c6cb44":"df_all[df_all['meaneduc'].isnull()][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","5c8e50ae":"df_all[df_all['meaneduc'].isnull()][['escolari', 'SQBmeaned']]","3ab038c4":"df_all.loc[(df_all['meaneduc'].isnull()) & (df_all['escolari'] == 0)][['meaneduc', 'escolari']]","e05ed2c5":"mask = (df_all['meaneduc'].isnull()) & (df_all['escolari'] == 0)\n\ndf_all.loc[mask, 'meaneduc'] = 0\ndf_all.loc[mask, 'SQBmeaned'] = 0","2fbeb037":"df_all[df_all['meaneduc'].isnull()][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","3b1955f1":"df_all[df_all['meaneduc'].isnull()][['escolari', 'SQBmeaned']]","b855fdb8":"df_all[['escolari', 'meaneduc', 'hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total', 'age', 'idhogar']]","271a9a26":"df_all[df_all['idhogar'] == '3aa78c56b'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total','age', 'escolari', 'idhogar', 'meaneduc']]","a2f0fd45":"df_all[df_all['meaneduc'].isnull()][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total','age', 'escolari', 'meaneduc',  'SQBmeaned']]","43175385":"df_all['SQBmeaned'].fillna(0, inplace=True)\ndf_all['meaneduc'].fillna(0, inplace=True)","7f9bcce0":"df_all.info(max_cols=145)","d3a1f8a8":"# vendo a dis\u2020ribui\u00e7\u00e3o de lugares em que o valor do aluguel 'v2a1' \u00e9 NA\n\ndf_all[df_all['v2a1'].isnull()][['lugar1', 'lugar2', 'lugar3', 'lugar4', 'lugar5', 'lugar6']].value_counts()","0f4580b1":"# vendo a dis\u2020ribui\u00e7\u00e3o de lugares em que o valor do aluguel 'v2a1' n\u00e3o \u00e9 NA\n\ndf_all[df_all['v2a1'].notnull()][['lugar1', 'lugar2', 'lugar3', 'lugar4', 'lugar5', 'lugar6']].value_counts()","b8b2aec0":"# vendo a dis\u2020ribui\u00e7\u00e3o de lugares em que o valor do aluguel 'v2a1' n\u00e3o \u00e9 NA\ndf_s =df_all[df_all['v2a1'].notnull()]\n\ndf_s.groupby(['lugar1', 'lugar2', 'lugar3', 'lugar4', 'lugar5', 'lugar6'])[['v2a1']].median()","a76817c9":"mask_lugar1 = (df_all['v2a1'].isnull()) & (df_all['lugar1'] == 1)\nmask_lugar2 = (df_all['v2a1'].isnull()) & (df_all['lugar2'] == 1)\nmask_lugar3 = (df_all['v2a1'].isnull()) & (df_all['lugar3'] == 1)\nmask_lugar4 = (df_all['v2a1'].isnull()) & (df_all['lugar4'] == 1)\nmask_lugar5 = (df_all['v2a1'].isnull()) & (df_all['lugar5'] == 1)\nmask_lugar6 = (df_all['v2a1'].isnull()) & (df_all['lugar6'] == 1)\n\ndf_all.loc[mask_lugar1, 'v2a1'] = 155000.0\ndf_all.loc[mask_lugar2, 'v2a1'] = 100000.0\ndf_all.loc[mask_lugar3, 'v2a1'] = 100000.0\ndf_all.loc[mask_lugar4, 'v2a1'] = 80000.0\ndf_all.loc[mask_lugar5, 'v2a1'] = 65000.0\ndf_all.loc[mask_lugar6, 'v2a1'] = 70000.0","998525c9":"df_all['rez_esc'].fillna(-1, inplace=True)","e9a61d8a":"df_all.info(max_cols=145)","b0a5ea39":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \nsns.set_palette('RdBu')","bf5b3f04":"target= sns.countplot(x='Target',data=df_all)\n\ntarget.set_title('Contagem de Classes da vari\u00e1vel Target')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\nplt.show()","32342bcc":"sex= sns.countplot(x='male',data=df_all)\nsex.set_title('Sexo')\nplt.xticks(np.arange(2), ['Feminino', 'Masculino'])\nplt.show()","98af23ed":"sex= sns.countplot(x='dis',data=df_all, order=[1,0])\nsex.set_title('Pessoa com Defici\u00eancia')\nplt.xticks(np.arange(2), [ 'Sim', 'N\u00e3o'])\nplt.show()","62cbd7e5":"age=sns.histplot(df_all, x=\"age\", bins=30 )\nage.set_title('Distribui\u00e7\u00e3o das idades no dataset')\nplt.show()","b5a97d60":"ph=sns.countplot(x='hogar_total', hue='Target',data=df_all)\nph.set_title('Contagem de pessoas em casa por classes')\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n","036e408a":"ph=sns.countplot(x='hogar_adul', hue='Target',data=df_all)\nph.set_title('Contagem de pessoas adultas(+19) em casa por classes')\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n","490c9c25":"ph=sns.countplot(x='hogar_nin', hue='Target',data=df_all)\nph.set_title('Contagem de pessoas entre 0-19 anos em casa por classes')\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n","6458e954":"ph=sns.countplot(x='hogar_mayor', hue='Target',data=df_all)\nph.set_title('Contagem de pessoas idosos(+65) em casa por classes')\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()","80441492":"\nhep=sns.histplot(df_all[df_all['Target'] == 1], x=\"escolari\", bins=30 )\nhep.set_title('Anos de Escolaridade quando \u00e9 Extrema Pobreza')\nplt.show()\n\nhp=sns.histplot(df_all[df_all['Target'] == 2], x=\"escolari\", bins=30 )\nhp.set_title('Anos de Escolaridade quando \u00e9 Pobreza Moderada')\nplt.show()\n\nhcv=sns.histplot(df_all[df_all['Target'] == 3], x=\"escolari\", bins=30 )\nhcv.set_title('Anos de Escolaridade quando \u00e9 Fam\u00edlia Vulner\u00e1vel')\nplt.show()\n\nhcnv=sns.histplot(df_all[df_all['Target'] == 4], x=\"escolari\", bins=30 )\nhcnv.set_title('Anos de Escolaridade quando \u00e9 Fam\u00edlia N\u00e3o Vulner\u00e1vel')\nplt.show()","9e42b779":"tablet=sns.countplot(x=\"Target\",hue=\"v18q\",hue_order=[1,0], data=df_all)\ntablet.set_title('Tem Tablet ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Tablet', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","d74766af":"cel=sns.countplot(x=\"Target\",hue=\"mobilephone\",hue_order=[1,0], data=df_all)\ncel.set_title('Tem Celular ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Celular', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","c74a47a5":"area= sns.countplot(x='area1',data=df_all)\narea.set_title('Zona da casa')\nplt.xticks(np.arange(2), [ 'Zona Rural', 'Zona Urbana'])\nplt.show()","44c81c99":"target= sns.countplot(x='lugar1', hue='Target',data=df_all[df_all['lugar1']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Central'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n\n#lugar2\n\ntarget= sns.countplot(x='lugar2', hue='Target',data=df_all[df_all['lugar2']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Chorotega'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n\n# lugar3\n\ntarget= sns.countplot(x='lugar3', hue='Target',data=df_all[df_all['lugar3']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Pac\u00edfico Central'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n\n#lugar4\n\ntarget= sns.countplot(x='lugar4', hue='Target',data=df_all[df_all['lugar4']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Brunca'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n\n#lugar5\n\ntarget= sns.countplot(x='lugar5', hue='Target',data=df_all[df_all['lugar5']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Huetar Atl\u00e2ntica'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()\n\n#lugar6\n\ntarget= sns.countplot(x='lugar6', hue='Target',data=df_all[df_all['lugar6']==1])\n\ntarget.set_title('Classes da vari\u00e1vel Target por regi\u00e3o')\nplt.xticks(np.arange(1), ['Regi\u00e3o Huetar Norte'])\nlabels= ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household']\n\nplt.legend(loc='upper left', labels=labels)\nplt.show()","0d925629":"ref=sns.countplot(x=\"Target\",hue=\"refrig\",hue_order=[1,0], data=df_all)\nref.set_title('Tem Geladeira ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Geladeira', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","b1ff57c0":"ref=sns.countplot(x=\"Target\",hue=\"v14a\",hue_order=[1,0], data=df_all)\nref.set_title('Tem Sanit\u00e1rio na casa ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Sanit\u00e1rio', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","216136e9":"cama=sns.countplot(x=\"Target\",hue=\"hacdor\",hue_order=[1,0], data=df_all)\ncama.set_title('Tem superlota\u00e7\u00e3o de camas ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Superlota\u00e7\u00e3o', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","a916905e":"quartos=sns.countplot(x=\"Target\",hue=\"hacapo\",hue_order=[1,0], data=df_all)\nquartos.set_title('Tem superlota\u00e7\u00e3o de quartos ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Superlota\u00e7\u00e3o', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","3940dadd":"comp=sns.countplot(x=\"Target\",hue=\"computer\",hue_order=[1,0], data=df_all)\ncomp.set_title('Tem computador ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Computador', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","44203b7d":"tv=sns.countplot(x=\"Target\",hue=\"television\",hue_order=[1,0], data=df_all)\ntv.set_title('Tem Televis\u00e3o ou N\u00e3o?')\nplt.xticks(np.arange(4), ['Extreme Poverty', 'Moderate Poverty', 'Vulnerable Household', 'Non-Vulnerable Household'], rotation=90)\n\n#legenda\nplt.legend(title='Televis\u00e3o', loc='upper left', labels=['Sim', 'N\u00e3o'])\nplt.show()","e6b5e029":"\nhep=sns.histplot(df_all[df_all['Target'] == 1], x=\"overcrowding\", bins=30 )\nhep.set_title('Distribui\u00e7\u00e3o de pessoas por quarto quando \u00e9 Extrema Pobreza')\nplt.show()\n\nhp=sns.histplot(df_all[df_all['Target'] == 2], x=\"overcrowding\", bins=30 )\nhp.set_title('Distribui\u00e7\u00e3o de pessoas por quarto quando \u00e9 Pobreza Moderada')\nplt.show()\n\nhcv=sns.histplot(df_all[df_all['Target'] == 3], x=\"overcrowding\", bins=30 )\nhcv.set_title('Distribui\u00e7\u00e3o de pessoas por quarto quando \u00e9 Fam\u00edlia Vulner\u00e1vel')\nplt.show()\n\nhcnv=sns.histplot(df_all[df_all['Target'] == 4], x=\"overcrowding\", bins=30 )\nhcnv.set_title('Distribui\u00e7\u00e3o de pessoas por quarto quando \u00e9 Fam\u00edlia N\u00e3o Vulner\u00e1vel')\nplt.show()","43461112":"hep=sns.histplot(df_all[df_all['Target'] == 1], x=\"v2a1\", bins=30 )\nhep.set_title('Pre\u00e7os de alugueis quando \u00e9 Extrema Pobreza')\nplt.show()\n\nhp=sns.histplot(df_all[df_all['Target'] == 2], x=\"v2a1\", bins=30 )\nhp.set_title('Pre\u00e7os de alugueis quando \u00e9 Pobreza Moderada')\nplt.show()\n\nhcv=sns.histplot(df_all[df_all['Target'] == 3], x=\"v2a1\", bins=30 )\nhcv.set_title('Pre\u00e7os de alugueis quando \u00e9 Fam\u00edlia Vulner\u00e1vel')\nplt.show()\n\nhcnv=sns.histplot(df_all[df_all['Target'] == 4], x=\"v2a1\", bins=30 )\nhcnv.set_title('Pre\u00e7os de alugueis quando \u00e9 Fam\u00edlia N\u00e3o Vulner\u00e1vel')\nplt.show()","a8530482":"train, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\ntrain.shape, test.shape","1bec7b90":"# Importando a biblioteca\nimport imblearn","97888ff8":"train['Target'].value_counts()","f7733a42":"train['Target'].value_counts(normalize=True)","9f092dca":"feats = [c for c in train.columns if c not in ['Id', 'idhogar', 'Target']]","865be7d2":"# Separando os dados de entrada e o target da base de treino\nX, y = train[feats], train[['Target']]","64bebe70":"from imblearn.over_sampling import SMOTE\n\n# Fazendo o SMOTE\nsm = SMOTE()\nX_sm, y_sm = sm.fit_resample(X,y)\n\n# Verificando os dados\ny_sm['Target'].value_counts()","a33cfb18":"# Juntando os dados\ntrain = pd.concat([X_sm, y_sm], axis=1)\ntrain.shape, train['Target'].value_counts(normalize=True)","f4f133f8":"from sklearn.ensemble import RandomForestClassifier\n\n# Importando a m\u00e9trica\nfrom sklearn.metrics import accuracy_score\n\nrf = RandomForestClassifier(n_estimators=200, n_jobs=-1, random_state=42, oob_score=True,\n                           min_samples_leaf=5, min_samples_split=20, max_depth=10)","24732456":"# Separando as colunas para treinamento\nfeats2 = [c for c in df_all.columns if c not in ['Id', 'idhogar', 'Target']]","cdb834f5":"# Treinando o modelo\nrf.fit(train[feats], train['Target'])","b550d1fc":"# Prever o Target do Dataframe de teste\ntest['Target'] = rf.predict(test[feats2]).astype(int)","58307150":"# Verificando as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","5a0d5acb":"# Criando o arquivo para submiss\u00e3o\ntest[['Id', 'Target']].to_csv('submission.csv', index=False) ","092936df":"# Trabalhando com GBM\nfrom sklearn.ensemble import GradientBoostingClassifier\n\ngbm = GradientBoostingClassifier(n_estimators=200, learning_rate=1.0, max_depth=4, random_state=42, min_samples_split=2, min_samples_leaf=1, subsample=1)\ngbm.fit(train[feats], train['Target'])","4290e233":"\n# Prever o Target do Dataframe de teste\ntest['Target'] = gbm.predict(test[feats2]).astype(int)","08e5c187":"# Verificando as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","375d1557":"# Trabalhando com XGBoost\nfrom xgboost import XGBClassifier\n\nxgb = XGBClassifier(n_estimators=200, learning_rate=0.09, random_state=42)\nxgb.fit(train[feats], train['Target'])","47db88fc":"# Prever o Target do Dataframe de teste\ntest['Target'] = xgb.predict(test[feats2]).astype(int)","a3d8dc89":"# Verificando as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","14e87f62":"# Trabalhando com AdaBoost\nfrom sklearn.ensemble import AdaBoostClassifier\n\nabc = AdaBoostClassifier(n_estimators=200, learning_rate=1.0, random_state=42)\nabc.fit(train[feats], train['Target'])","936b3f9e":"# Prever o Target do Dataframe de teste\ntest['Target'] = abc.predict(test[feats2]).astype(int)","3ab3fbeb":"# Verificando as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","56dc6797":"### Pre\u00e7os de Alugueis","820b1599":"## Tratamento de classes desbalanceadas","a65d823b":"## Adaboost","41a9c6c0":"## Pr\u00e9-processamento e limpeza dos dados","73ad4c2a":"### dependency Yes est\u00e1 dando 1\n#### avaliar o no agora","f7110eef":"### Investigando o valor 'yes' na coluna dependency","8f2894f0":"##### coluna dependency, Dependency rate, calculated = (number of members of the household younger than 19 or older than 64)\/(number of member of household between 19 and 64)","873261fb":"## An\u00e1lise de Dados","61a3ea79":"### v18q1 tem 7945 valores, ou seja, as colunas com NA \u00e9 quando o valor de tablet \u00e9 0","7ec9d333":"### dependency 'no' est\u00e1 dando 0","11c0c69a":"* vou imputar com -1 os NAs de 'rez_esc' por nao conseguir calcular a partir dos dados q tenho","908d8c57":"* as colunas que 'escolari' era zero, substitui o NA do 'meaneduc' e do 'SQBmeaned' para 0","6bf8c16c":"* edjefe, years of education of male head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0\n* edjefa, years of education of female head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0","ac1620bb":"## GBM","bace638a":"### O modelo random Forest teve maior score, foi o melhor modelo!!!","aed1d3d3":"* como 'hogar_adul' \u00e9 0 em todos os casos que o 'meaneduc' \u00e9 NA, 'meaneduc' \u00e9 0 nessas linhas e consequentemente 'SQBmeaned' \u00e9 0 nessas linhas\n* o dicion\u00e1rio de dados est\u00e1 errado ao falar que 'SQBmeaned' \u00e9 de adultos >= 18, na verdade adulto pra base \u00e9 > 18","7d5496d4":"### sobre localiza\u00e7\u00e3o das casas","aed3ac35":"### avaliando Colunas com NA\n\n* v2a1, Monthly rent payment\n* v18q, owns a tablet\n* v18q1, number of tablets household owns\n* rez_esc, Years behind in school\n* meaneduc,average years of education for adults (18+)\n* SQBmeaned, square of the mean years of education of adults (>=18) in the household","6f65de68":"### sobre as pessoas do dataset","ac4a46d0":"'meaneduc' \u00e9 a soma da escolaridade dos adultos > 19 anos \/ pelo numero de adultos\n(5+5+5+8)\/4 =5.75","da62d388":"## XGboost","c9da56ac":"### sobre as casas","ae9a0290":"### classes do dataset\n","a509c04e":"## Random Forest","701e23e7":"## Separando entre treino e teste"}}