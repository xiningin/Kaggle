{"cell_type":{"df803be0":"code","5a312dcb":"code","ff02b940":"code","2ae48945":"code","4399c2ae":"code","8a624ce7":"code","3bb56c45":"code","a870dbf6":"code","a6523bdf":"code","27c86e05":"code","311ec0ad":"code","e51b8568":"code","ebebef66":"code","e8659690":"code","743aac04":"code","acbcc82b":"code","b06b9f91":"code","a8ebc746":"code","de8326a4":"code","1c1fb2ac":"code","59049aa0":"code","13011a41":"code","016e6fd4":"code","e6a81a17":"code","c34f3ead":"code","60631183":"code","ed026a03":"code","a36d70f2":"code","072ac0ce":"code","75350447":"code","da636827":"code","514088c3":"code","f9acaef5":"code","3c0181e9":"code","09d2834d":"code","1e347f3e":"code","d217dd52":"code","737660be":"code","8b64be93":"code","980e9347":"code","3a763d98":"markdown","d6eef307":"markdown","12a7fb05":"markdown","26e79f1c":"markdown","c4a0fb46":"markdown","8feb5f7a":"markdown","dce18c7d":"markdown","d4de6a88":"markdown"},"source":{"df803be0":"import numpy as np\nimport pandas as pd\nfrom pandas import Series\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5) # \uc774 \ub450\uc904\uc740 \ubcf8 \ud544\uc790\uac00 \ud56d\uc0c1 \uc4f0\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. matplotlib \uc758 \uae30\ubcf8 scheme \ub9d0\uace0 seaborn scheme \uc744 \uc138\ud305\ud558\uace0, \uc77c\uc77c\uc774 graph \uc758 font size \ub97c \uc9c0\uc815\ud560 \ud544\uc694 \uc5c6\uc774 seaborn \uc758 font_scale \uc744 \uc0ac\uc6a9\ud558\uba74 \ud3b8\ud569\ub2c8\ub2e4.\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n\n%matplotlib inline\n\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\ndf_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4\ndf_test['FamilySize'] = df_test['SibSp'] + df_test['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud569\ub2c8\ub2e4\n\ndf_test.loc[df_test.Fare.isnull(), 'Fare'] = df_test['Fare'].mean()\n\ndf_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i > 0 else 0)\ndf_test['Fare'] = df_test['Fare'].map(lambda i: np.log(i) if i > 0 else 0)","5a312dcb":"df_train['Initial']=0\nfor i in df_train:\n    df_train['Initial']= df_train.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations\n    \ndf_test['Initial']=0\nfor i in df_test:\n    df_test['Initial']= df_test.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations","ff02b940":"pd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='summer_r') #Checking the Initials with the Sex","2ae48945":"df_train['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)\n\ndf_test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","4399c2ae":"df_train.groupby('Initial').mean()","8a624ce7":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","3bb56c45":"df_all = pd.concat([df_train, df_test])","a870dbf6":"df_all.groupby('Initial').mean()","a6523bdf":"df_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mr'),'Age']=33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mrs'),'Age']=37\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Master'),'Age']=5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Miss'),'Age']=22\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Other'),'Age']=45\n\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mr'),'Age']=33\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mrs'),'Age']=37\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Master'),'Age']=5\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Miss'),'Age']=22\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Other'),'Age']=45","27c86e05":"print('Embarked has ', sum(df_train['Embarked'].isnull()), ' Null values')","311ec0ad":"df_train['Embarked'].fillna('S', inplace=True)","e51b8568":"df_train['Age_cat'] = 0\ndf_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[70 <= df_train['Age'], 'Age_cat'] = 7\n\ndf_test['Age_cat'] = 0\ndf_test.loc[df_test['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[70 <= df_test['Age'], 'Age_cat'] = 7","ebebef66":"def category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7    \n    \ndf_train['Age_cat_2'] = df_train['Age'].apply(category_age)","e8659690":"print('1\ubc88 \ubc29\ubc95, 2\ubc88 \ubc29\ubc95 \ub458\ub2e4 \uac19\uc740 \uacb0\uacfc\ub97c \ub0b4\uba74 True \uc918\uc57c\ud568 -> ', (df_train['Age_cat'] == df_train['Age_cat_2']).all())","743aac04":"df_train.drop(['Age', 'Age_cat_2'], axis=1, inplace=True)\ndf_test.drop(['Age'], axis=1, inplace=True)","acbcc82b":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='cool')","b06b9f91":"df_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","a8ebc746":"df_train['Embarked'].unique()","de8326a4":"df_train['Embarked'].value_counts()","1c1fb2ac":"df_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","59049aa0":"df_train['Embarked'].isnull().any()","13011a41":"df_train['Sex'] = df_train['Sex'].map({'female': 0, 'male': 1})\ndf_test['Sex'] = df_test['Sex'].map({'female': 0, 'male': 1})","016e6fd4":"heatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat']] \n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14, 12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})\n\ndel heatmap_data","e6a81a17":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')","c34f3ead":"df_train.head()","60631183":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","ed026a03":"df_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name',  'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)","a36d70f2":"df_train.head()","072ac0ce":"df_test.head()","75350447":"#importing all the required ML packages\nfrom sklearn.ensemble import RandomForestClassifier # \uc720\uba85\ud55c randomforestclassfier \uc785\ub2c8\ub2e4. \nfrom sklearn import metrics # \ubaa8\ub378\uc758 \ud3c9\uac00\ub97c \uc704\ud574\uc11c \uc501\ub2c8\ub2e4\nfrom sklearn.model_selection import train_test_split # traning set\uc744 \uc27d\uac8c \ub098\ub220\uc8fc\ub294 \ud568\uc218\uc785\ub2c8\ub2e4.","da636827":"X_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","514088c3":"X_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=2018)","f9acaef5":"model = RandomForestClassifier(n_estimators=1000, random_state=0)\nmodel.fit(X_tr, y_tr)","3c0181e9":"print('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874\uc744 \ub9de\ucda4'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))","09d2834d":"feature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","1e347f3e":"plt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","d217dd52":"submission = pd.read_csv('..\/input\/gender_submission.csv')","737660be":"submission.head()","8b64be93":"prediction = model.predict(X_test)\nsubmission['Survived'] = prediction","980e9347":"submission.to_csv('.\/my_first_submission.csv', index=False)","3a763d98":"**2.1 Pclass**","d6eef307":"2.2 Both Sex and Pclass","12a7fb05":"**Fare**","26e79f1c":"**Embarked**","c4a0fb46":"**Pclass, Sex, Age**","8feb5f7a":"**Age**","dce18c7d":"**Family - Sibsp + Parch**","d4de6a88":"**2.2 Sex**"}}