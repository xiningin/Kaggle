{"cell_type":{"47faff2b":"code","0cbf8018":"code","db3fdf4a":"code","1c557810":"code","348aa42c":"code","8c902441":"code","68b51923":"code","8280ab7c":"code","715fc664":"code","f84a2fad":"code","1671666c":"code","9a2cb885":"code","3563a5b6":"code","fe1a2b79":"code","777f8ce4":"code","3622ea85":"code","77ea49ec":"code","16557a45":"code","b5e125dd":"code","79371a2c":"code","085c2570":"code","f222552e":"code","06875610":"code","a2188795":"code","c998f9a8":"code","ca54b6bd":"code","b451fb78":"code","dd9a393c":"code","f5c5c658":"markdown","4f49473b":"markdown","e590f404":"markdown","086f4dea":"markdown","db5d2c18":"markdown","3063d205":"markdown","3a5ae63a":"markdown","284ff2e2":"markdown","d53efb2e":"markdown","89b85149":"markdown","44862681":"markdown","19486be4":"markdown","df4dc88a":"markdown","010b0545":"markdown","7e97e1a1":"markdown","5e6e34a7":"markdown","aa23a5c7":"markdown","10e09fea":"markdown","a4c695b9":"markdown","8b00379e":"markdown","e96b5bff":"markdown","31f25d63":"markdown","7d49868b":"markdown","e73feba4":"markdown","a248a682":"markdown","6638b3ab":"markdown","df08b9c8":"markdown","85912d9b":"markdown","daa77805":"markdown","949c414d":"markdown","17cc34c9":"markdown","224da504":"markdown","745305f6":"markdown","fe25fd42":"markdown","d59c11d3":"markdown","19c4146a":"markdown","e8d25697":"markdown","81d4d158":"markdown","c62fee20":"markdown","68a8968a":"markdown","55ba5224":"markdown","470f45a3":"markdown","b06c0e82":"markdown","09f3efb4":"markdown"},"source":{"47faff2b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom collections import Counter\nimport operator\nimport plotly.express as px\n\nfrom urllib.request import urlopen\nimport json\n\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport plotly.graph_objects as go\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport plotly.offline as py","0cbf8018":"data_df = pd.read_csv(\"..\/input\/data-police-shootings\/fatal-police-shootings-data.csv\",parse_dates = ['date'])\ndata_df","db3fdf4a":"# Feature Generation\ndata_df['month'] = pd.DatetimeIndex(data_df['date']).month\ndata_df['year'] = pd.DatetimeIndex(data_df['date']).year\ndata_df['month_name']=data_df['date'].dt.strftime('%B')\ndata_df['month_num']=data_df['date'].dt.strftime('%m')\ndata_df['weekdays']=data_df['date'].dt.strftime('%A') \ndata_df['year_quarter'] =data_df.date.dt.to_period(\"Q\")\ndata_df['date_num']=data_df['date'].dt.strftime('%d').astype(int)\ndata_df['date_categ']=np.where(data_df['date_num']<11,\"First Third\",np.where((data_df['date_num']>=11) & (data_df['date_num'] < 20),\"Second Third\",'Last Third'))\n\ndata_df['race_name']=np.where(data_df['race']=='W','White',np.where(data_df['race']=='B','Black',\nnp.where(data_df['race']=='N','Native American',np.where(data_df['race']=='H','Hispanic',\nnp.where(data_df['race']=='A','Asian',np.where(data_df['race']=='O','Others','Not Specified'))))))\ndata_df","1c557810":"killings_year = data_df[['year']]\nkillings_year['kills'] = 1\nkillings_year = killings_year.groupby('year').sum()\nkillings_year = killings_year.reset_index()\ndef line_plot(data,var):    \n    trace = go.Scatter(x=data[var],y=data['kills'],line=dict(color='darkgreen',width=2))    \n    layout = dict(title='Deaths per {}'.format(var))    \n    fig = dict(data = [trace], layout=layout)\n    py.iplot(fig)\nline_plot(killings_year,'year')","348aa42c":"quarterly_df = data_df['date'].groupby(data_df.date.dt.to_period(\"Q\")).agg('count').to_frame(name=\"count\").reset_index()\nquarter_year = []\nfor i in quarterly_df['date']:\n    quarter_year.append(str(i))\n    \nquarterly_df['year'] = quarterly_df['date'].dt.strftime('%Y') \ndef plot_quarter(year,color):\n    temp_quarter=[]\n    for i in quarterly_df.loc[quarterly_df['year']==year]['date']:\n        temp_quarter.append(str(i))        \n    trace=go.Bar(x=temp_quarter, y = quarterly_df.loc[quarterly_df['year']==year]['count'],\n           name=year,marker_color=color)\n    return trace\n\nfig = make_subplots(rows=3, cols=2,subplot_titles=(\"2015\", \"2016\",\"2017\",\"2018\",\"2019\",\"2020\"))\nfig.add_trace(plot_quarter('2015','red'),row=1,col=1)\nfig.add_trace(plot_quarter('2016','blue'),row=1,col=2)\nfig.add_trace(plot_quarter('2017','green'),row=2,col=1)\nfig.add_trace(plot_quarter('2018','orange'),row=2,col=2)\nfig.add_trace(plot_quarter('2019','indigo'),row=3,col=1)\nfig.add_trace(plot_quarter('2020','violet'),row=3,col=2)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Deaths Every Year - Quarter wise', title_x=0.5,showlegend=False)\nfig.show()","8c902441":"monthly_df=data_df['date'].groupby(data_df.date.dt.to_period(\"M\")).agg('count').to_frame(name=\"count\").reset_index()\nmonth_year=[]\nfor i in monthly_df['date']:\n    month_year.append(str(i))\n    \nmonthly_df['year']=monthly_df['date'].dt.strftime('%Y') \ndef plot_month(year,color):\n    temp_month=[]\n    for i in monthly_df.loc[monthly_df['year']==year]['date']:\n        temp_month.append(str(i))        \n    trace=go.Bar(x=temp_month, y=monthly_df.loc[monthly_df['year']==year]['count'],\n           name=year,marker_color=color)\n    return trace\n\nfig = make_subplots(rows=3, cols=2,subplot_titles=(\"2015\", \"2016\",\"2017\",\"2018\",\"2019\",\"2020\"))\nfig.add_trace(plot_month('2015','red'),row=1,col=1)\nfig.add_trace(plot_month('2016','blue'),row=1,col=2)\nfig.add_trace(plot_month('2017','green'),row=2,col=1)\nfig.add_trace(plot_month('2018','orange'),row=2,col=2)\nfig.add_trace(plot_month('2019','indigo'),row=3,col=1)\nfig.add_trace(plot_month('2020','violet'),row=3,col=2)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Deaths Every Year', title_x=0.5,showlegend=False)\nfig.show()","68b51923":"monthly_shootouts = data_df[['year','month']]\nmonthly_shootouts['kills'] = 1\nfig = px.bar(monthly_shootouts, x='month', y='kills',color_discrete_sequence =['magenta'], facet_col='year')\nfig.show()","8280ab7c":"only_month=data_df.groupby(['month_name','date_categ'])['id'].agg('count').reset_index().rename(columns={'id':'count'})\nonly_month['month_name'] = pd.Categorical(only_month['month_name'],categories=['January','February','March','April','May','June','July','August','September','October','November','December'],ordered=True)\nonly_month = only_month.sort_values('month_name')\n\nfig = go.Figure(data=[\n    go.Bar(name='First Third', x=only_month[only_month['date_categ']=='First Third']['month_name'], y=only_month[only_month['date_categ']=='First Third']['count']),\n    go.Bar(name='Second Third', x=only_month[only_month['date_categ']=='Second Third']['month_name'], y=only_month[only_month['date_categ']=='Second Third']['count']),\n    go.Bar(name='Last Third', x=only_month[only_month['date_categ']=='Last Third']['month_name'], y=only_month[only_month['date_categ']=='Last Third']['count'])\n])\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Deaths - All Months',xaxis_title='Months', yaxis_title='Total number of kills', title_x=0.5,barmode='stack')\nfig.show()","715fc664":"weekdays_df=data_df['weekdays'].value_counts().reset_index().rename(columns={'index':'weekdays','weekdays':'count'})\nweekdays_df['weekdays'] = pd.Categorical(weekdays_df['weekdays'],categories=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],ordered=True)\nweekdays_df = weekdays_df.sort_values('weekdays')\n\n\nfig = ff.create_table(weekdays_df, height_constant=60)\nfig.add_trace(go.Scatter(\n    x= weekdays_df['weekdays'], \n    y= weekdays_df['count'], \n    xaxis='x2', yaxis='y2',\n    mode=\"markers\",marker_size=12\n))\n\nfig.update_layout(\n    title_text = 'Weekdays Death Report',\n    title_x=0.5,\n    margin = {'t':50, 'b':100},\n    xaxis = {'domain': [0, .5]},\n    xaxis2 = {'domain': [0.6, 1.]},\n    yaxis2 = {'anchor': 'x2', 'title': 'Count'}\n)\n\nfig.show()","f84a2fad":"shoot_gender=data_df.groupby(['year','gender']).agg('count')['id'].to_frame(name='count').reset_index()\nshoot_gender_male=shoot_gender.loc[shoot_gender['gender']=='M']\nshoot_gender_female=shoot_gender.loc[shoot_gender['gender']=='F']\n\nmale=go.Bar(x=shoot_gender_male['year'],y=shoot_gender_male['count'],marker=dict(color='brown'),name=\"male\")\nfemale=go.Bar(x=shoot_gender_female['year'],y=shoot_gender_female['count'],marker=dict(color='orange'),name=\"female\")\ndata=[male,female]\n\nfig = go.Figure(data)\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title=\"Death Toll - Gender\",title_x=0.5,xaxis=dict(title=\"Year\"),yaxis=dict(title=\"Number of Victims\"),\n                   barmode=\"group\")\nfig.show()","1671666c":"ag_bool = (data_df['age'] > 60 )\ndata_df[ag_bool].shape[0]","9a2cb885":"hist_data = [data_df['age'].dropna()]\ngroup_labels = ['Age'] \ncolors=[\"brown\"]\nfig=go.Figure()\nfig=ff.create_distplot(hist_data, group_labels,bin_size=10,colors=colors)\nfig.update_layout(title_text=\"Distribution of Age\",title_x=0.5)\nfig.show()","3563a5b6":"age_df=data_df.groupby(['year','age_freq']).agg('count')['id'].to_frame(name='count').reset_index()\nage_df","fe1a2b79":"data_df['age_freq']=np.where((data_df['age'] < 13),'<13',np.where((data_df['age'] > 12) & (data_df['age'] < 18) ,'13-17',np.where(data_df['age']<18,'<18',np.where((data_df['age']>17)&(data_df['age']<=30),'18-30',\nnp.where((data_df['age']>30)&(data_df['age']<=50),'31-50',np.where(data_df['age']>70,'70+',\nnp.where((data_df['age']>50)&(data_df['age']<=70),'51-70',\"Not Specified\")))))))\n\nage_df=data_df.groupby(['year','age_freq']).agg('count')['id'].to_frame(name='count').reset_index()\n\nfig = go.Figure()\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"<13\")]['count'], name='<13 (Pre-Teen)', marker_color = 'brown',boxmean=True))\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"13-17\")]['count'], name = '13-17 (Teen below 18)', marker_color = 'grey',boxmean=True ))\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"18-30\")]['count'], name = '18-30 (Youth)', marker_color = 'green',boxmean=True ))\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"31-50\")]['count'], name = '31-50 (Middle age)',marker_color = 'red',boxmean=True ))\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"51-70\")]['count'], name = '51-70 (Above Middle age) ', marker_color = 'orange',boxmean=True ))\nfig.add_trace(go.Box(y=age_df.loc[(age_df['age_freq']==\"70+\")]['count'], name = '70+ (Senior Citizens)', marker_color = 'violet',boxmean=True ))\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title=\"Death Toll - All Ages\",title_x=0.5,xaxis=dict(title=\"Age\"),yaxis=dict(title=\"Number of Victims\"))\n\nfig.show()","777f8ce4":"age_df=data_df.groupby(['year','age_freq']).agg('count')['id'].to_frame(name='count').reset_index()\nage_df","3622ea85":"PLOT_BGCOLOR='#DADEE3'\n\nrace_counts = dict(data_df.race_name.value_counts())\ncolors = ['#ED1C22','#FEC907','#BF3D09','#7CBB15', '#92D0FF', '#50ADE5','#1373C7','#AD309C','#3BD5C9']\nfig = go.Figure(data=[go.Pie(labels=list(race_counts.keys()),values=list(race_counts.values()))])\nfig.update_traces(hoverinfo='label+value', textinfo='percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=1.5)))\nfig.update_layout(title='Races of people shot',width=700,height=400,barmode='stack',template='seaborn',\n                 paper_bgcolor=PLOT_BGCOLOR,plot_bgcolor=PLOT_BGCOLOR,hovermode='x unified',\n                 legend=dict(title='<b><i>Type of Races<\/i><\/b>',x=0.835,bgcolor=PLOT_BGCOLOR),margin=dict(t=35,b=10,l=10,r=10),\n                 xaxis=dict(title='Number of Shootings',mirror=True,linewidth=2,linecolor='black',showgrid=False),\n                 yaxis=dict(mirror=True,linewidth=2,linecolor='black',gridcolor='darkgray'))\nfig.show()","77ea49ec":"shoot_race=data_df.groupby(['year','month_num','race_name']).agg('count')['id'].to_frame(name='count').reset_index()\nshoot_race['monthly']=shoot_race['year'].astype(str)+\"-\"+shoot_race['month_num'].astype(str)\n\ndef plot_month_race(race,color):\n    temp_month=[]\n    for i in shoot_race.loc[(shoot_race['race_name']==race)]['monthly']:\n        temp_month.append(str(i))\n    trace=go.Bar(x=temp_month, y= shoot_race.loc[(shoot_race['race_name']==race)]['count'],\n           name=race,marker_color=color)\n    return trace\n\nfig = make_subplots(rows=3, cols=2,subplot_titles=(\"Black\", \"White\",\"Hispanic\",\"Asian\",\"Native American\",\"Others\"))\n\nfig.add_trace(plot_month_race('Black','brown'),row=1,col=1)\nfig.add_trace(plot_month_race('White','deepskyblue'),row=1,col=2)\nfig.add_trace(plot_month_race('Hispanic','green'),row=2,col=1)\nfig.add_trace(plot_month_race('Asian','red'),row=2,col=2)\nfig.add_trace(plot_month_race('Native American','orange'),row=3,col=1)\nfig.add_trace(plot_month_race('Others','violet'),row=3,col=2)\n\nfig.update_layout(title_text='Deaths - All Race',title_x=0.5)\nfig.show()","16557a45":"fig = go.Figure()\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"Black\")]['count'], name='Black',\n                marker_color = 'brown',boxmean=True))\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"White\")]['count'], name = 'White',\n                marker_color = 'grey',boxmean=True ))\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"Hispanic\")]['count'], name = 'Hispanic',\n                marker_color = 'green',boxmean=True ))\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"Asian\")]['count'], name = 'Asian',\n                marker_color = 'red',boxmean=True ))\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"Native American\")]['count'], name = 'Native American',\n                marker_color = 'orange',boxmean=True ))\nfig.add_trace(go.Box(y=shoot_race.loc[(shoot_race['race_name']==\"Others\")]['count'], name = 'Others',\n                marker_color = 'violet',boxmean=True ))\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title=\"Death Toll - All Races\",title_x=0.5,xaxis=dict(title=\"Race\"),yaxis=dict(title=\"Number of Victims\"))\n\nfig.show()","b5e125dd":"shoot_state=data_df['state'].value_counts().to_frame().reset_index().rename(columns={'index':'state','state':'count'}).sort_values(by='count',ascending=False)\nfig = go.Figure(go.Bar(\n    y= shoot_state['state'].sort_index(ascending=False), \n    x= shoot_state['count'].sort_index(ascending=False),  \n     orientation='h',\n      text=shoot_state['count'].sort_index(ascending=False),\n    textposition='outside',\n    marker_color=shoot_state['count'].sort_index(ascending=False),\n))\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Fatal Killing - All States',yaxis_title='States',\n                 xaxis_title='Total number of victims', title_x=0.5,height=1000)\nfig.show()","79371a2c":"shoot_city=data_df['city'].value_counts().to_frame().reset_index().rename(columns={'index':'city','city':'count'}).sort_values(by='count',ascending=False)\n\nfig = go.Figure(go.Bar(\n    x= shoot_city['city'][:20], \n    y= shoot_city['count'][:20],  \n    text=shoot_state['count'][:20],\n    textposition='outside',\n    marker_color=shoot_state['count'][:20]\n))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Fatal Killing - Top 20 Cities',xaxis_title='Cities', yaxis_title='Total number of kills', title_x=0.5)\nfig.show()","085c2570":"flee_counts = dict(data_df.flee.value_counts())\nfig = go.Figure(data=[go.Pie(labels=list(flee_counts.keys()),values=list(flee_counts.values()))])\nfig.update_traces(hoverinfo='label+value', textinfo='percent', textfont_size=20,\n                  marker=dict( line=dict(color='#000000', width=1.5)))\nfig.update_layout(title='Fleeing ways',width=600,height=600,barmode='stack',template='seaborn',\n                 paper_bgcolor=PLOT_BGCOLOR,plot_bgcolor=PLOT_BGCOLOR,hovermode='x unified',\n                 legend=dict(title='<b><i>Ways of Flee<\/i><\/b>',x=0.835,bgcolor=PLOT_BGCOLOR),margin=dict(t=35,b=10,l=10,r=10),\n                 xaxis=dict(title='Number',mirror=True,linewidth=2,linecolor='black',showgrid=False),\n                 yaxis=dict(mirror=True,linewidth=2,linecolor='black',gridcolor='darkgray'))\nfig.show()","f222552e":"armed=list(data_df['armed'].dropna().unique())\nfig, (ax2) = plt.subplots(1,1,figsize=[17, 10])\nwordcloud2 = WordCloud(background_color='black',colormap=\"OrRd_r\", \n                        width=600,height=400).generate(\" \".join(armed))\nax2.imshow(wordcloud2,interpolation='bilinear')\nax2.axis('off')\nax2.set_title('Most Used Arms',fontsize=35)","06875610":"armed_counts = dict(data_df.armed.value_counts())\nfig = go.Figure(data=[go.Pie(labels=list(armed_counts.keys()),values=list(armed_counts.values()))])\nfig.update_traces(hoverinfo='label+value', textinfo='percent', textfont_size=20,\n                  marker=dict( line=dict(color='#000000', width=1.5)))\nfig.update_layout(title='Arms used',width=600,height=600,barmode='stack',template='seaborn',\n                 paper_bgcolor=PLOT_BGCOLOR,plot_bgcolor=PLOT_BGCOLOR,hovermode='x unified',\n                 legend=dict(title='<b><i>Type of Arms<\/i><\/b>',x=0.835,bgcolor=PLOT_BGCOLOR),margin=dict(t=35,b=10,l=10,r=10),\n                 xaxis=dict(title='Number of Shootings',mirror=True,linewidth=2,linecolor='black',showgrid=False),\n                 yaxis=dict(mirror=True,linewidth=2,linecolor='black',gridcolor='darkgray'))\nfig.show()","a2188795":"black_state=data_df[data_df['race']=='B']['state'].value_counts().to_frame().reset_index().rename(columns={'index':'state','state':'count'})\nblack_year=data_df[data_df['race']=='B']['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'})\n\nfig = make_subplots(\n    rows=2, cols=2, subplot_titles=(\"Black People victims in each state\", \"Yearly Black Victims\", \"Distribution of Black people by Age\",),\n    column_widths=[0.6, 0.4],\n    row_heights=[0.4, 0.6],\n    specs=[[{\"type\": \"Choropleth\", \"rowspan\": 2}, {\"type\": \"bar\"}],\n           [            None                    , {\"type\": \"histogram\"}]])\n\nfig.add_trace(go.Choropleth(\n    locations=black_state['state'],\n    z=black_state['count'].astype(float),\n    locationmode='USA-states',\n    colorscale='Reds',\n    autocolorscale=False,\n    text=black_state['state'], # hover text\n    marker_line_color='white', # line markers between states\n    colorbar_title=\"Millions USD\",showscale = False,),row=1, col=1)\n\nfig.add_trace(go.Bar(\n    x= black_year['year'], \n    y= black_year['count'], \n    text=black_year['count'],\n            textposition='inside',\n    marker_color=\"chocolate\",\n    name=\"Death by year\"\n),row=1, col=2)\n\nfig.add_trace(go.Histogram(x=data_df[data_df['race']=='B'][\"age\"],nbinsx=10,marker_color='brown',name=\"Age Distribution\",xbins=dict(size=10),\n    opacity=1),row=2, col=2)\n\nfig.update_layout(\n    title_text='US Police Killing Black People (2015-2020)',\n    title_x=0.5,\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'),\n)\n\nfig.update_layout(template=\"plotly_dark\",showlegend=True)\nfig.show()","c998f9a8":"only_race = data_df[data_df['race_name'] != \"Not Specified\"]['race_name'].value_counts().to_frame().reset_index().rename(columns={'index':'race_name','race_name':'count'})\nyear_shoot = data_df['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values(by=\"year\")\n\nfig = make_subplots(\n    rows = 2, cols = 2, subplot_titles=(\"Victims in all states\", \"Victims by Year\", \"Victims by Race\",),\n    column_widths = [0.6, 0.4],\n    row_heights = [0.4, 0.6],\n    specs = [[{\"type\": \"Choropleth\", \"rowspan\": 2}, {\"type\": \"bar\"}],\n           [            None                    , {\"type\": \"pie\"}]])\n\nfig.add_trace(go.Choropleth(\n    locations = shoot_state['state'],\n    z = shoot_state['count'].astype(float),\n    locationmode = 'USA-states',\n    colorscale = 'Reds',\n    autocolorscale = False,\n    text = shoot_state['state'], \n    marker_line_color = 'white', \n    colorbar_title = \"Millions USD\",showscale = False,),row=1, col=1)\n\nfig.add_trace(go.Bar(\n    x = year_shoot['year'], y = year_shoot['count'], \n    text = year_shoot['count'],\n    textposition = 'inside', marker_color = \"chocolate\", name = \"Death by year\"),row = 1, col = 2)\n\nfig.add_trace(go.Pie(labels=only_race['race_name'], values=only_race['count'],textinfo='percent', insidetextorientation='radial'),row=2, col=2)\n\n\nfig.update_layout(\n    title_text='US Police Killing All Race (2015-2020)', title_x=0.5,\n    geo = dict(scope='usa', projection=go.layout.geo.Projection(type = 'albers usa'), showlakes=True, lakecolor='rgb(255, 255, 255)'), )\n\nfig.update_layout(template=\"plotly_dark\")\nfig.show()","ca54b6bd":"PAPER_BGCOLOR = '#CDBAB7'\nillness_dict = dict(data_df.signs_of_mental_illness.value_counts(dropna=True))\ntotal = sum(illness_dict.values())\nfig = go.Figure()\ncolors = {False:'#FEE803',True:'#AAEEE7'}\nannotations=[]\nspace = 0\nfor key, value in illness_dict.items():\n    fig.add_trace(go.Bar(name=key,x=[value],y=['Mental Illness Count'],orientation='h',\n                        marker_line_color='black',marker_line_width=1.5,marker_color=colors[key]))\n    annotations.append(dict(xref='x', yref='y',\n                            x=space + (value\/2), y=0,\n                            text=str(int(np.round(value\/total,2)*100)) + '%',\n                            font=dict(family='Arial', size=14,\n                                      color='rgb(0, 0, 0)'),\n                                      showarrow=False))\n    space+=value\nfig.update_layout(barmode='stack',width=1300,height=90,paper_bgcolor=PAPER_BGCOLOR,plot_bgcolor=PLOT_BGCOLOR,\n                 hovermode='y',xaxis=dict(mirror=True,linewidth=2,linecolor='black',showgrid=False),\n                 yaxis=dict(mirror=True,linewidth=2,linecolor='black',showgrid=False),margin=dict(t=0,b=0,l=0,r=0),\n                 legend=dict(title='Mental Illness',y=0.5),annotations=annotations)\nfig.show()","b451fb78":"state_data = Counter(data_df[\"manner_of_death\"])\nsorted_state_data = dict(sorted(state_data.items(), key=operator.itemgetter(1),reverse=True))\nfig = px.funnel_area(names = list(sorted_state_data.keys()),values = list(sorted_state_data.values()),title=\"Manner of death\") \nfig.show()","dd9a393c":"rcParams[\"figure.figsize\"] = 6, 6\ng = sns.countplot(x = data_df[\"threat_level\"],hue = data_df[\"gender\"])\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x()+p.get_width()\/2.,\n            height + 3, '{:1}'.format(round(height)), ha=\"center\") \ng.set_title(\"Threat Level used on gender\")","f5c5c658":"<a id=\"11\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Which City has seen more Shootings? <\/b><\/font><br>\nIs there any particular city or cities that is more prone to shootings ?","4f49473b":"* <font size=\"+1\" color=\"maroon\">Insights: \n* Populous states such as CA, TX, FL have seen shootings \n* Shootings in CA is 789, while TX is 481 (little more than half of CA shootings)\n* States like VT, RI are below 10.\n<\/font>","e590f404":"<a id=\"5\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Monthly Death numbers - which portion of the month ? <\/b><\/font><br>\n\n* Here, we divide the month into first 10 days, second 10 days and last 10 days. \n* Usually last 10 days is known to be stressful to meet deadlines of our work. \n* First ten days is known to be stressful to pay bills or new expenses are encountered.","086f4dea":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Weekdays like Wednesday, Tuesday and Thursday have seen more killings.\n* Saturday, Monday have least shootings.\n* Weekends are more peaceful than the weekdays.\n  \n<\/font>","db5d2c18":"<a id=\"17\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Analysis of 'Manner of Death'<\/b><\/font><br>","3063d205":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Year ending months like Nov, Dec the violence is low.\n* There is police violence spurt in Jun\/Jul months\n* May 2020 has been exception, the police killings have been at 110 can be attributed to George Floyd killing.\n* March 2018 the police killings have been at 109.\n* Dec 2019 has been exception (december being peaceful months), the police killings have been at 106. \n  \n<\/font>","3a5ae63a":"<a id=\"3\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Monthly Death numbers for month\/year<\/b><\/font><br>","284ff2e2":"<a id=\"8\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Analysis of Age <\/b><\/font><br>\nIs there any particular age group that is more prone to shootings ?","d53efb2e":"<font size=\"+3\" color=\"green\">Insights : \nI enjoyed writing this NB. Thank you for the dataset. Very relevant and eye opening !!!\n<\/font>","89b85149":"<a id=\"6\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Week days numbers - which days do shootings occur ? <\/b><\/font><br>\n\nWe have got the day number and we look at if more shootings occur on any particular day or a weekday.","44862681":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Year 2015 - Quarters - Q3, Q4 are higher than Quarters Q1, Q2\n* Year 2016 - Quarters - Q1 is higher than Quarters Q2, Q3, Q4\n* Year 2017 - Quarters - Q1 is higher than Quarters Q2, Q3, Q4\n* Year 2018 - Quarters - Q1 is higher than Quarters Q2, Q3, Q4\n* Year 2019 - Quarters - Q4 is higher than Quarters Q1, Q2, Q3\n* Year 2019 - Quarters - Q1 is higher than Quarter Q2\n* Other information - social, political during those peak months, quarters will be helpful in forming an opinion or statement.\n  \n<\/font>","19486be4":"<font size=\"+1\" color=\"maroon\">Insights : \n* Threat levels doesnot help much in determining whether the killing was justified.\n<\/font>","df4dc88a":"<a id=\"1\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Yearly Death numbers from 2015 - 2020 <\/b><\/font><br>","010b0545":"<a id=\"data\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Data<\/b><\/font><br>","7e97e1a1":"<a id=\"13\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Armed or not Armed? <\/b><\/font><br>\nAre there any instances where the suspect was not armed but shot ?","5e6e34a7":"<font size=\"+1\" color=\"maroon\">Insights : \n* Only 5% of victims were tasered. \n<\/font>","aa23a5c7":"<font size=\"+1\" color=\"maroon\">Insights: \n* All the years - Whites, Blacks, Hispanics victims were killed in all the months of all the years \n* Asian and Native Americans were not killed in some months of some years\n\n<\/font>","10e09fea":"<a id=\"12\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Fleeing or not Fleeing? <\/b><\/font><br>\nAre there any instances where the suspect was not fleeing but shot ?","a4c695b9":"Let us look at the dataset from various angles and draw insights.","8b00379e":"<font size=\"+1\" color=\"maroon\">Insights: \n* Busy cities such as Los Angeles, Phoenix, Houston have seen shootings \n* Shootings in LA is 799, while Phoenix is 481 (little more than half of LA shootings)\n\n<\/font>","e96b5bff":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Number of male victims are around 900 every year\n* Number of female victims are around 40-50 every year.\n* Female victims are far lesser than male victims.\n  \n<\/font>","31f25d63":"<a id=\"intro\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Introduction<\/b><\/font><br>","7d49868b":"<a id=\"18\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Analysis of 'Threat Level'<\/b><\/font><br>","e73feba4":"<a id=\"packages\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Preprocessing<\/b><\/font><br>","a248a682":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Police shootings have been between 980 and 1000 for the years 2015-2019.\n* We have data till June 2020, the number of shootings are already 481, we have already reached half of usual range.\n  \n<\/font>","6638b3ab":"<font size=\"+1\" color=\"maroon\">Insights of killins over years 2015 to June 2020 - age distribution bins: \n* Over the years underage shooting is not seen - Last 2-3 years there have been no shootings of victims under 13.  \n* Median\/mean number of victims aged between 13-17 is around 15.\n* Victims between ages 31-50  median of 444 killlings over the years can be seen.\n* Victims between ages 18-30  median of 315 killlings over the yearscan be seen.\n* Victims between ages 51-70  median of 143 killlings over the years can be seen.\n* Victims of ages 70+  median of 12 killlings over the years can be seen.  \n<\/font>","df08b9c8":"<font size=\"+1\" color=\"maroon\">Insights: \n* Whites have been most common race of victims who were shot down (45% of total shootings).  \n* Blacks numbers have been little above half of white's (24% of total shootings).\n* Hispanic victims closelyfollow blacks (at 16%)\n<\/font>","85912d9b":"<a id=\"9\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Analysis of Race <\/b><\/font><br>\nIs there any particular racial group that is more prone to shootings ?","daa77805":"**References**\n\nBig shoutout to Raenish David for NB.\n","949c414d":"<font size=\"+1\" color=\"maroon\">Insights: \n* There are around 4660 victims between 18-60 years.  \n* Number of victims less than thirteen years is  3.\n* Number of victims between 13-17 years is 94.\n* Number of victims more than sixty years is 294.\n  \n<\/font>","17cc34c9":"<a id=\"2\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Quarterly Death numbers from 2015-2020<\/b><\/font><br>","224da504":"This is a lovely dataset to work upon. ","745305f6":"<a id=\"14\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Snapshot of Black people killed<\/b><\/font><br>\n","fe25fd42":"<a id=\"4\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Monthly Death numbers year on year<\/b><\/font><br>","d59c11d3":"<font size=\"+4\" color=purple><u><center>US Police Fatal Shooting Analysis (2015-2020)<\/center><\/u><\/font>","19c4146a":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of content<\/h3>\n\n* [Introduction](#intro)\n* [Data](#data)\n* [1. Yearly death report : 2015-2020](#1)\n* [2. Quarterly death report for every year](#2)\n* [3. Monthly death report for every year](#3)\n* [4. Most Death recorded Months](#4)\n* [5. Most Death recorded Month period - Start\/middle\/end of month](#5)\n* [6. Most Death recorded Days](#6)\n* [7. Gender proportion](#7)\n* [8. Most affected Age group](#8)\n* [9. Most affected Race](#9)\n* [10. Most suffered State](#10)\n* [11. Most suffered City](#11)\n* [12. Flee or not?](#12)\n* [13. Armed or not?](#13)\n* [14. Analysis of Black people](#14)\n* [15. Analysis of all Race victims in US](#15)\n* [16. Mental Illness](#16) \n* [17. Manner of Death](#17) \n* [18. Threat Level](#18) ","e8d25697":"<a id=\"7\"><\/a>[](http:\/\/)\n<font size=\"+2\" color=\"blue\"><b>Analysis of Gender <\/b><\/font><br>\nIs there any particular gender targetted ?","81d4d158":"<a id=\"16\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Analysis of  suspects with 'Mental Illness'<\/b><\/font><br>\n","c62fee20":"<font size=\"+1\" color=\"maroon\">Insights : \n* 66% of the victims were not fleeing, so why were they shot ? \n<\/font>","68a8968a":"<font size=\"+1\" color=\"maroon\">Insights: \n    \n* Last 10 days of the month have been most violence prone\n* First 10 days of the month have also seen most shootings\n* Peacful period of the month is the middle 10 days\n  \n<\/font>","55ba5224":"\n\n<a id=\"packages\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Import libraries and packages<\/b><\/font><br>","470f45a3":"<font size=\"+1\" color=\"maroon\">Insights : \n* 59% of the victims had guns. \n* As per word cloud, gun, knife, metal, vehicle were most used.\n\n<\/font>","b06c0e82":"<a id=\"15\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Snapshot of all people killed<\/b><\/font><br>\n","09f3efb4":"<a id=\"10\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Which State has seen more shootings? <\/b><\/font><br>\nIs there any particular state or states that is more prone to shootings ?"}}