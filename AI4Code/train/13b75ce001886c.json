{"cell_type":{"1c5f7a22":"code","b51e6d83":"code","6311979e":"code","d8151095":"code","420dbb7f":"code","84677771":"code","d2d015c6":"markdown","e3293449":"markdown"},"source":{"1c5f7a22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b51e6d83":"import matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nimport squarify   \nimport plotly","6311979e":"df = pd.read_csv('..\/input\/most-popular-ide-since-2004\/Most Popular IDE from 2004 to 2020.csv')\ndf.head()","d8151095":"df.columns","420dbb7f":"# multiple line plot\nplt.figure(figsize=(40,15))\nplt.plot( 'Date', 'Android Studio', data=df, marker='', color='red', linewidth=2)\nplt.plot( 'Date', 'Aptana', data=df, marker='', color='blue', linewidth=2)\nplt.plot( 'Date', 'Atom', data=df, marker='', color='gold', linewidth=2)\nplt.plot( 'Date', 'Coda 2', data=df, marker='', color='greenyellow', linewidth=2)\nplt.plot( 'Date', 'Code::Blocks', data=df, marker='', color='yellow', linewidth=2)\nplt.plot( 'Date', 'DrJava', data=df, marker='', color='black', linewidth=2)\nplt.plot( 'Date', 'Eclipse', data=df, marker='', color='green', linewidth=2)\nplt.plot( 'Date',  'Emacs', data=df, marker='', color='violet', linewidth=2)\nplt.plot( 'Date', 'Eric Python', data=df, marker='', color='gray', linewidth=2)\nplt.plot( 'Date', 'geany', data=df, marker='', color='cyan', linewidth=2)\nplt.plot( 'Date', 'IntelliJ', data=df, marker='', color='magenta', linewidth=2)\nplt.plot( 'Date', 'JCreator', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date',  'JDeveloper', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'Julia Studio', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'Komodo', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'Light Table', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date',  'Monkey Studio', data=df, marker='', color='saddlebrown', linewidth=2)\nplt.plot( 'Date','MonoDevelop', data=df, marker='', color='darkorange', linewidth=2)\nplt.plot( 'Date', 'NetBeans', data=df, marker='', color='purple', linewidth=2)\nplt.plot( 'Date', 'PhpStorm', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'pyCharm', data=df, marker='', color='darkblue', linewidth=2)\nplt.plot( 'Date', 'Qt Creator', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'RubyMine', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'SharpDevelop', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'SlickEdit', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'Sublime Text', data=df, marker='', color='navy', linewidth=2)\nplt.plot( 'Date',  'Vim', data=df, marker='', color='lime', linewidth=2)\nplt.plot( 'Date', 'Visual Studio', data=df, marker='', color='crimson', linewidth=2)\nplt.plot( 'Date', 'Visual Studio Code', data=df, marker='', color='deepskyblue', linewidth=2)\nplt.plot( 'Date', 'Xamarin', data=df, marker='', color='olive', linewidth=2)\nplt.plot( 'Date', 'Xcode', data=df, marker='', color='orange', linewidth=2)\nplt.plot( 'Date', 'Zend Studio', data=df, marker='', color='olive', linewidth=2)\nplt.xticks(rotation=90)\nplt.title(\"Most Popular IDE from 2004 to 2020\", loc='left', fontsize=30, fontweight=0, color='k')\nplt.xlabel(\"Time\", fontsize=22)\nplt.ylabel(\"Score\", fontsize=22)\nplt.legend()","84677771":"sns.set(style='white')\nplt.figure(figsize=(35,15))\n# create a color palette\npalette = plt.get_cmap('prism')\n \n# multiple line plot\nnum=0\nfor column in df.drop('Date', axis=1):\n    num+=1\n    plt.plot(df['Date'], df[column], marker='', color=palette(num), linewidth=3, alpha=0.9, label=column)\n\n# Add legend\nplt.legend(ncol=2)\n \n# Add titles\nplt.title(\"Most Popular IDE from 2004 to 2020\", loc='left', fontsize=30, fontweight=0, color='k')\nplt.xlabel(\"Time\", fontsize=22)\nplt.xticks(rotation=90)\nplt.ylabel(\"Score\", fontsize=22)\n","d2d015c6":"### To expand or \u201czoom\u201d plot() figure\n\n### **Right click on the figure >> Select *Open image in a new tab***","e3293449":"### To expand or \u201czoom\u201d plot() figure\n\n### **Right click on the figure >> Select *Open image in a new tab***"}}