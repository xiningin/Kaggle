{"cell_type":{"4ebf3ed3":"code","aad4eb53":"code","a19d71e9":"code","fdb4ec8a":"code","cebb6c99":"code","e3bbc525":"code","2e298c4b":"code","5bfcf470":"code","a74d7e24":"code","3c0ad2d7":"code","df406ee2":"code","59c39b57":"code","e8cbb47b":"code","176d3174":"markdown","5c47e4ff":"markdown","3ed48b18":"markdown","acfda1e4":"markdown","504f738f":"markdown","f31d252a":"markdown","50c065ce":"markdown"},"source":{"4ebf3ed3":"import pandas as pd\nfrom keras.preprocessing.image import ImageDataGenerator\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow import keras\nfrom sklearn.metrics import classification_report\n%matplotlib inline","aad4eb53":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\n\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","a19d71e9":"y = train['label']","fdb4ec8a":"train = train.drop(['label'],axis =1)\n\ntrain = train\/255","cebb6c99":"train = train.values.reshape(-1, 28, 28, 1)","e3bbc525":"X=train","2e298c4b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.01, random_state=42)","5bfcf470":"m = keras.Sequential()\nm.add(keras.layers.Conv2D(32, (3, 3), activation=\"relu\", kernel_initializer='he_uniform', input_shape=(28, 28, 1)))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(32, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.20))\n\nm.add(keras.layers.Conv2D(64, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(64, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.2))\n\nm.add(keras.layers.Conv2D(128, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(128, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.2))\n\nm.add(keras.layers.Flatten())\nm.add(keras.layers.Dropout(0.2))\nm.add(keras.layers.Dense(128, activation=\"relu\"))\nm.add(keras.layers.Dense(10, activation=\"softmax\"))\n\nm.compile(optimizer=keras.optimizers.RMSprop(), loss=\"sparse_categorical_crossentropy\", metrics=[\"acc\"])","a74d7e24":"m.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=50000,batch_size=20, validation_batch_size=20)","3c0ad2d7":"\ntest = test.values.reshape(-1,28,28,1)\ntest = test\/255.0\npred = np.argmax(m.predict(test), axis = 1)","df406ee2":"Submission = pd.DataFrame({\"ImageId\" : range(1, 28001), \"Label\":pred})","59c39b57":"Submission.to_csv('Submission.csv',index=False)","e8cbb47b":"\nfrom matplotlib import pyplot as plt\n\n\nnum = 3\nprint(\"Image label is:| \", pred[num])\nplt.imshow(test[num][:,:,0])","176d3174":"<html>\n    <h1><i><font face='Courier' size = 10>Data Prepration<\/font><\/i><\/h1>","5c47e4ff":"<html>\n    <h1><i><font face='Courier' size = 10>Prediction<\/font><\/i><\/h1>","3ed48b18":"<html>\n    <h1><i><font face='Courier' size = 10>Testing<\/font><\/i><\/h1>","acfda1e4":"<html>\n    <h1 align='center'><b>\n    <img src='https:\/\/media3.giphy.com\/media\/KAq5w47R9rmTuvWOWa\/giphy.gif' width=100 height=100>\n    <font color='sky blue' face='lucida handwriting'size=300>Py<\/font><font color='yellow' face='lucida handwriting' size=300>Tech<\/font><\/b><\/h1>\n   \n<\/html>","504f738f":"<html>\n    <h1><i><font face='Courier' size = 10>Importing Libraries<\/font><\/i><\/h1>","f31d252a":"<html>\n    <h1><i><font face='Courier' size = 3>Enter any Number from 0 to 27999, in the num spot below and it will show you the image at that spot and its prediction (not 100% Correct)<\/font><\/i><\/h1>","50c065ce":"<html>\n    <h1><i><font face='Courier' size = 10>Model<\/font><\/i><\/h1>"}}