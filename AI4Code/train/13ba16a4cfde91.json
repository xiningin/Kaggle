{"cell_type":{"78f1faf9":"code","0c0131c1":"code","e3dbf1ea":"code","5357e16e":"code","374216c0":"code","436b905d":"code","ba0b739e":"code","ab06826a":"code","06fae5f8":"code","e857bc50":"code","ea00a664":"code","143e8714":"code","2319c60c":"code","f86a6a37":"code","a2908891":"code","4efa1d1c":"markdown"},"source":{"78f1faf9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c0131c1":"import pandas as pd\nimport numpy as np","e3dbf1ea":"data = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndata","5357e16e":"data.shape","374216c0":"data.describe()","436b905d":"data.groupby('species').size()","ba0b739e":"data1 = pd.get_dummies(data, drop_first=True)\ndata1","ab06826a":"X = data.drop('species', axis = 1)\nY = data['species']","06fae5f8":"from sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\nY = label.fit_transform(Y)","e857bc50":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)","ea00a664":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score","143e8714":"model = KNeighborsClassifier(n_neighbors=3)","2319c60c":"model.fit(X_train, Y_train)","f86a6a37":"Y_pred = model.predict(X_test)\nY_pred","a2908891":"accuracy_score(Y_test,Y_pred)","4efa1d1c":"Run KNN on Iris Dataset.\nprint accuracy"}}