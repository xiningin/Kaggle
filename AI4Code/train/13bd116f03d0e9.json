{"cell_type":{"036f54f2":"code","2f68ad20":"code","1fb99827":"code","fa3e7fb6":"code","baeb3b6f":"code","147c0f48":"code","1c269c71":"code","69ef6bfb":"code","0a1a2e64":"code","4ef5888f":"code","f3242c68":"code","5d39adc6":"markdown","54a43097":"markdown","733b0cc6":"markdown","68105639":"markdown","ed5ea80b":"markdown","1b2bd587":"markdown","93246b1c":"markdown","b2b52497":"markdown","ed382d3f":"markdown","3f54c6f9":"markdown","b58fa0f5":"markdown","a3772a84":"markdown"},"source":{"036f54f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2f68ad20":"df = pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')\ndf = df.drop(['Unnamed: 0', 'Unnamed: 0.1'], axis=1)\n\ndf['Datum'] = pd.to_datetime(df['Datum'])\ndf['Date'] = df['Datum'].apply(lambda row: row.date())\n\ndf['Country'] = df.Location.apply(lambda row: row.split(', ')[-1])\n\ndf.head()","1fb99827":"total_companies = len(df['Company Name'].unique())\ntotal_rows = len(df)\nprint(\"Total number of Companies: {}\".format(total_companies))\nprint(\"Total Data Rows: {}\".format(total_rows))","fa3e7fb6":"count = df.groupby('Company Name')\ncount = count['Company Name'].count()\ncount = count.sort_values(ascending=False)\n\ntop = 15\n\ntop15 = list(count.index[:top])\n\nplt.figure(figsize=(12, 6))\nplt.title('Top 15 Companies with maximum Launches',fontsize=20)\nplt.xlabel(\"Company Name\",fontsize=12)\nplt.ylabel(\"#Launches\",fontsize=12)\n\nax = sns.barplot(x = count.index[:top], y = count.values[:top])\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n\nplt.show()","baeb3b6f":"rvsn = df[df['Company Name']=='RVSN USSR'].sort_values(by=\"Date\")\n\nplt.figure(figsize=(12, 6))\n\nrvsn['Date'] = rvsn[\"Date\"].astype(\"datetime64\")\nrr = rvsn.groupby(rvsn['Date'].dt.year)[\"Date\"].count().plot(kind='bar')\n\nplt.title('Launch Distribustion of RBSN USSR each Year', fontsize=16)\nplt.ylabel('#Launches',fontsize=14)\nplt.xlabel('Year',fontsize=14)\n\nplt.show()","147c0f48":"age = df.groupby('Company Name').agg({\"Date\":[\"min\",'max']})\nage.columns = ['First Launch','Last Launch']\n\nage['Years of service'] =age['Last Launch'] - age['First Launch']\nage['Years of service'] = age['Years of service'].apply(lambda row: float(\"{:.1f}\".format(row.days\/365)))\nage = age.sort_values(by='Years of service', ascending=False)\n\nage = age.reset_index()\n\nage","1c269c71":"def highlights(s):\n    \n    if str(s['First Mission']) == \"Failure\":\n        return ['background-color: red']*2\n    elif str(s['First Mission']) == \"Partial Failure\":\n        return ['background-color: Salmon']*2\n    else:\n        return ['background-color: green']*2\n    \n\nfirst_mission = df.groupby('Company Name')['Status Mission','Date'].apply(min)\nfirst_mission = first_mission.reset_index()[['Company Name','Status Mission']]\nfirst_mission.columns = ['Company Name','First Mission']\nfirst_mission_styled = first_mission.style.apply(highlights,axis=1)\n\nfirst_mission_styled","69ef6bfb":"active = df[df['Status Rocket']=='StatusActive']\nactive = active.groupby('Company Name').apply(lambda dd: dd['Company Name'].count())\nactive = active.sort_values(ascending=False)\n\ntop = 15\n\nplt.figure(figsize=(12, 6))\nplt.title('Top 15 Companies with Active Rockets',fontsize=20)\nplt.xlabel(\"Company Name\",fontsize=12)\nplt.ylabel(\"# Active Rockets\",fontsize=12)\n\nax = sns.barplot(x=active.index[:top], y=active.values[:top])\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n\nplt.show()","0a1a2e64":"## Ranking Companies on success rate\n\n## Formula: (successfull Launches\/ total Launches)\n\nsuccess_rate = df.groupby('Company Name')\nsuccess_rate = success_rate.apply(lambda dd: \n            len(dd[dd['Status Mission']=='Success'])\/len(dd)) \n\nsuccess_rate_top = success_rate[top15]\nsuccess_rate_top = success_rate_top.sort_values(ascending=False)\n\ntop = 56\n\nplt.figure(figsize=(16, 6))\nax = sns.barplot(x=success_rate_top.index[:top], y=success_rate_top.values[:top])\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n\nplt.title('Success rate of 15 companies with maximum Launches',fontsize=20)\nplt.ylabel(\"\",fontsize=12)\nplt.xlabel(\"\",fontsize=12)\n\nplt.show()\n","4ef5888f":"x = df.groupby('Status Mission')\nx = x['Status Mission'].count()\nx = x.sort_values(ascending=False)\n\n## Pie Chart\nplt.figure(figsize=(9, 9))\nexplode = (0, 0.1, 0, 0)\n\nplt.pie(x.values, labels=x.index, autopct='%1.1f%%',\n       explode=explode)\nplt.show()","f3242c68":"x = pd.DataFrame()\n\n## concatinating\nx[['First Launch','Last Launch','Year of Service']] = age.set_index('Company Name')[['First Launch','Last Launch','Years of service']]\nx['Launch Count'] = count\nx['Success Rate'] = success_rate\nx['Total Active'] = active\nx = x.fillna(0)\nx['Total Active'] = x['Total Active'].astype('int')\nx['First Mission status'] = first_mission.set_index('Company Name')['First Mission']\nx","5d39adc6":"## Summary","54a43097":"##### We can see success rate is biased toward companies with less launches","733b0cc6":"## Companies and there Active Rockets","68105639":"## Success rate","ed5ea80b":"### A Closer look at RVSN USSR","1b2bd587":"## Age of Companies","93246b1c":"## Total Status of Missions","b2b52497":"## Does every company gets successful in first try?","ed382d3f":"####  *\u201cI have not failed. I've just found 10,000 ways that won't work.\u201d* - Thomas A. Edison","3f54c6f9":"##### It seems RBSN USSR stop working after 1998 but still has highest number of launches\n***","b58fa0f5":"## Companies and their Launches","a3772a84":"##### RVSN USSR has the highest number of launches\n***"}}