{"cell_type":{"307320d1":"code","fb74f85b":"code","482e4e23":"code","852338c9":"code","2c59dd31":"code","ae139779":"code","edad5310":"code","e4de35ed":"code","8f17d610":"code","6ce53e42":"code","a2d01872":"code","e2f189ab":"code","10fa8854":"code","5bbf2dd6":"code","6370d71c":"code","618d206f":"code","31f0743c":"code","d518635b":"code","d066195c":"code","856682e5":"code","61ee22d1":"code","0aa63bff":"code","e815750f":"code","8deeb79d":"code","99f3ffd6":"code","5b8bd861":"code","553dcac2":"code","cb44860c":"code","5f259b57":"code","97522559":"code","47052fab":"code","b9716b2a":"code","f1eb22fc":"code","18461fbc":"markdown","9cf2e236":"markdown","bf49d232":"markdown","2873a862":"markdown","f258a780":"markdown","fae76d04":"markdown","4490645d":"markdown"},"source":{"307320d1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fb74f85b":"# importing the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n# importing the libraries for the conversion of categorical data\nfrom sklearn.preprocessing import LabelEncoder\n# importing the metrics \nfrom sklearn.metrics import mean_squared_error","482e4e23":"# importing the dataframe into the code\ndf = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')","852338c9":"df.shape\n# 81 features :) or :( ","2c59dd31":"df.columns","ae139779":"pd.options.display.max_columns = 81","edad5310":"df = df.drop(['Id'], axis = 1)","e4de35ed":"# checking the missing values\nfor i in df.columns:\n    print(\"Name - \", i,\", Missing Values - \", df[i].isnull().sum())","8f17d610":"df = df.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis = 1)","6ce53e42":"# dropping the missing samples from the missing values\ndf = df.dropna()","a2d01872":"# checking the missing values\nfor i in df.columns:\n    print(\"Name - \", i,\", Missing Values - \", df[i].isnull().sum())","e2f189ab":"df.info()","10fa8854":"for i in df.columns:\n    if(df[i].dtypes == 'O'):\n        print('feature name - ', i)\n        print(df[i].value_counts())\n        sns.countplot(df[i])\n        plt.show()","5bbf2dd6":"df = df.drop(['Utilities'], axis = 1)","6370d71c":"# converting all the categorical data into numerical data\nencoder = LabelEncoder()\ndef encoding(dataframe_feature):\n    if (dataframe_feature.dtype == 'O'):\n        return encoder.fit_transform(dataframe_feature)\n    return dataframe_feature\ndf_encoded = df.apply(encoding)","618d206f":"df_encoded.head()","31f0743c":"# seperating the training and testing data\nX = df_encoded.drop(['SalePrice'], axis = 1)\ny = df_encoded[['SalePrice']]","d518635b":"train_x, test_x, train_y, test_y = train_test_split(X, y, test_size = 0.2, random_state = 101)","d066195c":"print(train_x.shape)\nprint(train_y.shape)\nprint(test_x.shape)\nprint(test_y.shape)","856682e5":"# let us create a neural network now\n# importing the neural network libraries\nfrom keras.models import Sequential\nfrom keras.layers import Dense","61ee22d1":"# adding the layers in the neural network\nneural_network = Sequential()\nneural_network.add(Dense(input_dim = train_x.shape[1], output_dim = 37, activation = 'relu', init = 'uniform'))\nneural_network.add(Dense(output_dim = 37, activation = 'relu', init = 'uniform'))\nneural_network.add(Dense(output_dim = train_y.shape[1], activation = 'sigmoid', init = 'uniform'))\nneural_network.compile(optimizer = 'adam', loss = 'mean_squared_error', metrics = ['mean_squared_error'])","0aa63bff":"# training the model\nneural_network.fit(train_x, train_y, batch_size = 3, epochs = 30)","e815750f":"# predicting using the model\nprediction = neural_network.predict(test_x)","8deeb79d":"# checking the accuracy of the model \nprint('RMSE - ', np.sqrt(mean_squared_error(test_y, prediction)))","99f3ffd6":"test_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_df.shape","5b8bd861":"test_df = test_df.set_index('Id')\ntest_df = test_df.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis = 1)\ntest_df = test_df.drop(['Utilities'], axis = 1)","553dcac2":"# we will impute the missing values\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy = 'most_frequent')\nimputed_data = imputer.fit_transform(test_df)","cb44860c":"test_df = pd.DataFrame(data = imputed_data, columns = test_df.columns)","5f259b57":"test_df_encoded = test_df.apply(encoding)","97522559":"# apply the test data to the model\nSalePrice = neural_network.predict(test_df_encoded)","47052fab":"submission_dataframe = pd.DataFrame()\nsubmission_dataframe['Id'] = test_df_encoded.index\nsubmission_dataframe['SalePrice'] = SalePrice","b9716b2a":"submission_dataframe.head()","f1eb22fc":"submission_dataframe.to_csv(\"ANN_Regression\", index = False)","18461fbc":"The data maybe highly imbalanced. Many features contains values that has less contributions to the overall dataframe.  let us stick with the existing dataframe now and train the model","9cf2e236":"Looks like we have both categorical and numerical data in our dataset. We have to preprocess a little now.","bf49d232":"Let us plot all the categorical variables and look for insights","2873a862":"1. \"SalesPrice\" is the target\n2. \"Id\" feature is to be removed","f258a780":"Perfect !! ","fae76d04":"We shall remove the following features.\n1. Alley \n2. FireplaceQu \n3. PoolQC\n4. Fence\n5. MiscFeature","4490645d":"We can improve the model by preprocessing the data and spending more time with the data. Preprocessing accounts more than 75% of time in a machine learning project. "}}