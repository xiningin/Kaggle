{"cell_type":{"4110b91a":"code","c169fe7c":"code","f6b655cb":"code","b1be5f0d":"code","2a678718":"code","9c61ce77":"code","17bbb041":"code","d47d40d0":"code","e4e49624":"code","7f00591b":"code","931d5c90":"code","75800450":"code","62d189f7":"code","8df0062e":"code","e318d22a":"code","72291f3c":"code","b0b8f37a":"code","63c99816":"code","ea5474b7":"code","db710eca":"code","05eec3a0":"code","ed7c3cf5":"code","f33926f2":"code","8980a532":"code","e94dccfa":"code","d856313e":"code","ddf974da":"code","4db838db":"markdown","3bd6c9da":"markdown","40fe76fa":"markdown","830b1146":"markdown"},"source":{"4110b91a":"import pandas as pd\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\n\nad = pd.read_csv(\"..\/input\/advertissing\/Advertising.csv\", usecols = [1,2,3,4])\n\ndf =  ad.copy()\ndf.head()","c169fe7c":"X = df.drop(\"sales\", axis=1) # we choose independent variables\n\ny = df[\"sales\"]  # we took our dependent variable\n\n# divided our dataset into test and training\nX_train, X_test, y_train, y_test= train_test_split(X, y, test_size =0.20, random_state =42)\n","f6b655cb":"X_train.shape","b1be5f0d":"y_train.shape","2a678718":"X_test.shape","9c61ce77":"y_test.shape","17bbb041":"training = df.copy() \ntraining.shape","d47d40d0":"lm = sm.OLS(y_train,X_train) # create model in train dataset","e4e49624":"model = lm.fit() # fitted model\nmodel.summary()","7f00591b":"model.summary().tables[1]\n# we have coefficient each independent variable","931d5c90":"\nlm = LinearRegression()\nmodel = lm.fit(X_train, y_train)","75800450":"model.intercept_ # constant coefficent ","62d189f7":"model.coef_ # \u0131t gives us in order TV , radio and newspaper coefficient","8df0062e":"\nnew_data = [[30], [10], [40]]\nnew_data = pd.DataFrame(new_data).T","e318d22a":"model.predict(new_data) # predicting y values according to given new_data","72291f3c":"rmse_train = np.sqrt(mean_squared_error(y_train, model.predict(X_train)))\n# we find the train error","b0b8f37a":"rmse","63c99816":"rmse_rest = np.sqrt(mean_squared_error(y_test, model.predict(X_test)))","ea5474b7":"rmse_rest","db710eca":"df.head()","05eec3a0":"X = df.drop('sales', axis=1)\ny = df[\"sales\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=144)\n# A certain part of the model will be selected, but we do not know which part will be chosen. we are going to use cross validation\nlm = LinearRegression() \nmodel = lm.fit(X_train, y_train)","ed7c3cf5":"np.sqrt(mean_squared_error(y_train, model.predict(X_train)))\n# train error","f33926f2":"np.sqrt(mean_squared_error(y_test, model.predict(X_test)))\n#test error","8980a532":"model.score(X_train, y_train)\n# R-squared","e94dccfa":"cross_val_score(model, X_train, y_train, cv =10, scoring = \"r2\").mean()\n# We cross validated our model R-squared value by dividing it into 10 layers","d856313e":"np.sqrt(-cross_val_score(model, \n                X_train, \n                y_train, \n                cv =10, \n                scoring = \"neg_mean_squared_error\")).mean()\n# We cross validated our model  train error by dividing it into 10 layers","ddf974da":"np.sqrt(-cross_val_score(model, \n                X_test, \n                y_test, \n                cv =10, \n                scoring = \"neg_mean_squared_error\")).mean()\n # We cross validated our model  test error by dividing it into 10 layers","4db838db":"## Stats Models","3bd6c9da":"### Model Tunnig","40fe76fa":" ## Scikit-learn model","830b1146":"### Prediction \n\nModel Equation:\n\nSales = 2.97 + TV0.04 + radio0.18 + newspaper*0.002\n\n30 units of TV expenditure, 10 units of TV expenditure, 40 units of TV expenditure"}}