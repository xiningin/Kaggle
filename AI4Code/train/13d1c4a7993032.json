{"cell_type":{"db597363":"code","15dd38dd":"code","e89882b7":"code","c7761eb4":"code","3a0ca664":"code","77bc6208":"code","1d4f8957":"code","bfd4fd9f":"code","07b30b3d":"code","92895b8c":"code","74c25693":"code","c156b5eb":"code","73e928d9":"code","59a591b4":"code","889a8864":"code","96bbc959":"code","345704e4":"code","6d2b0285":"code","099ff2c9":"code","a91be4f9":"code","432f36d0":"code","1b33d77a":"code","bb698b45":"code","f8495e85":"code","3ffdd9d3":"code","ca14feea":"code","f9c64db4":"code","ee10f779":"code","5667bd49":"code","08e855a8":"code","15576ba1":"code","e25cbe59":"code","92706c3e":"code","fb96e59f":"code","6b406f93":"markdown","eff4d6e2":"markdown","06f72d0c":"markdown","4e33e427":"markdown","b16dac85":"markdown","40c720e2":"markdown","b4dce0dc":"markdown","f79733f2":"markdown","3e1a51f7":"markdown"},"source":{"db597363":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport re\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nimport matplotlib.pyplot as plt\n%matplotlib inline","15dd38dd":"test_data = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain_data = pd.read_csv(\"..\/input\/titanic\/train.csv\")","e89882b7":"train_data[\"Survived\"].sum()","c7761eb4":"train_data.info()","3a0ca664":"train_data.describe()","77bc6208":"test_data.info()","1d4f8957":"test_data.describe()","bfd4fd9f":"train_data.isna().sum()","07b30b3d":"test_data.isna().sum()","92895b8c":"train_data.groupby(\"Embarked\").mean()","74c25693":"train_data.groupby(\"Sex\").mean()","c156b5eb":"train_data.groupby(\"Pclass\").mean()","73e928d9":"train_data.groupby(\"SibSp\").mean()","59a591b4":"train_data.groupby(\"Parch\").mean()","889a8864":"data = [train_data, test_data]\n\nfor dataset in data:\n    dataset[\"Title\"] = dataset[\"Name\"].str.extract(\" ([A-Za-z]+)\\.\", expand=False)\n    dataset[\"Title\"] = dataset[\"Title\"].replace([\"Lady\", \"Countess\", \"Capt\", \"Col\", \"Don\", \"Dr\",\"Major\", \"Rev\", \"Sir\", \"Jonkheer\", \"Dona\"], \"Rare\")\n    dataset[\"Title\"] = dataset[\"Title\"].replace(\"Mlle\", \"Miss\")\n    dataset[\"Title\"] = dataset[\"Title\"].replace(\"Ms\", \"Miss\")\n    dataset[\"Title\"] = dataset[\"Title\"].replace(\"Mme\", \"Mrs\")\n    dataset[\"Title\"] = dataset[\"Title\"].fillna(\"Unknown\")","96bbc959":"sns.catplot(data=train_data, x=\"Title\", y=\"Survived\", aspect=2.5, kind=\"bar\")","345704e4":"datasets = [train_data, test_data]\n\nfor dataset in datasets:\n    dataset[\"Relatives\"] = dataset[\"Parch\"] + dataset[\"SibSp\"]\n    dataset.loc[dataset[\"Relatives\"] == 0, \"TravelledAlone\"] = \"Yes\"\n    dataset.loc[dataset[\"Relatives\"] > 0, \"TravelledAlone\"] = \"No\"\n    \ntrain_data.groupby(\"TravelledAlone\").mean()","6d2b0285":"sns.catplot(data=train_data, x=\"Relatives\", y=\"Survived\", aspect=2.5, kind=\"bar\")","099ff2c9":"sns.catplot(data=train_data, x=\"TravelledAlone\", y=\"Survived\", kind=\"bar\", hue=\"Sex\")","a91be4f9":"train_data[\"Deck\"] = train_data[\"Cabin\"].str.slice(stop=1)\ntest_data[\"Deck\"] = train_data[\"Cabin\"].str.slice(stop=1)","432f36d0":"train_data[\"Deck\"].value_counts()","1b33d77a":"sns.catplot(data=train_data, x=\"Deck\", y=\"Survived\", kind=\"bar\", aspect=2.5)","bb698b45":"sns.catplot(data=train_data, x=\"Pclass\", y=\"Survived\", kind=\"bar\", aspect=2.5)","f8495e85":"train_data.drop([\"Name\", \"Ticket\", \"SibSp\", \"Parch\", \"Cabin\"], axis=1, inplace=True)\ntest_data.drop([\"Name\", \"Ticket\", \"SibSp\", \"Parch\", \"Cabin\"], axis=1, inplace=True)","3ffdd9d3":"train_data.isna().sum()","ca14feea":"y = train_data[\"Survived\"]\ntrain_data.drop(\"Survived\", axis=1, inplace=True)","f9c64db4":"numerical_cols = [cname for cname in train_data.columns if train_data[cname].dtype in [\"float64\", \"int64\"]]\ncategorical_cols = [cname for cname in train_data.columns if train_data[cname].dtype == \"object\"]\n\nnumerical_transformer = SimpleImputer(strategy=\"mean\")\ncategorical_transformer = Pipeline(steps=[\n    (\"imputer\", SimpleImputer(strategy=\"constant\")),\n    (\"onehot\", OneHotEncoder(handle_unknown=\"ignore\"))\n])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        (\"num\", numerical_transformer, numerical_cols),\n        (\"cat\", categorical_transformer, categorical_cols)\n    ])","ee10f779":"def score_model(train, target, n_estimators, max_depth):\n    my_model = RandomForestClassifier(n_estimators=n_estimators, max_depth=max_depth, random_state=0)\n    my_pipeline = Pipeline(steps=[\n        (\"preprocessor\", preprocessor),\n        (\"model\", my_model)\n    ])\n\n    cv_scores = cross_val_score(my_pipeline, train, target, cv=2, scoring=\"accuracy\")\n    \n    return cv_scores","5667bd49":"n_estimators = [50, 100, 150, 200, 250, 300, 350, 400, 450, 500]\n\nscores = {str(i): score_model(train_data, y, i, 5).mean() for i in n_estimators}\n","08e855a8":"scores","15576ba1":"plt.figure(figsize=(10, 5))\nplt.plot(list(scores.keys()), list(scores.values()))\nplt.show()","e25cbe59":"my_final_model = RandomForestClassifier(n_estimators=250, max_depth=5, random_state=0)\n\nmy_final_pipeline = Pipeline(steps=[\n    (\"preprocessor\", preprocessor),\n    (\"model\", my_final_model)\n])","92706c3e":"my_final_pipeline.fit(train_data, y)\npreds = my_final_pipeline.predict(test_data)","fb96e59f":"output = pd.DataFrame({\"PassengerId\": test_data.PassengerId, \"Survived\": preds})\noutput.to_csv(\"my_submission.csv\", index=False)","6b406f93":"Explore the features available out of the box and their impact on survival rate","eff4d6e2":"Add some additional features - \n\nFirst extract the title from the name - could be an indicator of social status, which may be relevant to survival rate. We already know that sex is a huge influencer - but the rarer titles may also influence the outcome","06f72d0c":"Use the Parch & SibSp features to count the number of people travelling - also add a flag for travelling alone or not - as per below visualisations these appear to influence the surival rate","4e33e427":"Create a function to score the model - going with cv=2 as the dataset is tiny","b16dac85":"Dropping the original features that we have already engineered.","40c720e2":"Travelling alone, if you were male, had a negative impact on your chances of survival - women however survived more often when travelling alone!","b4dce0dc":"Strip out the first character from the Cabin feature - this appears to be the deck - could be relevant","f79733f2":"Define a pipeline (probably not needed - this is just for my own practice)","3e1a51f7":"Explore missing values - looks like we\"ll have to impute the age. Embarked only has two missing values so we can impute this also."}}