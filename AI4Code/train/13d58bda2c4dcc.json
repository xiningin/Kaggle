{"cell_type":{"9a306d70":"code","ec4ef300":"code","169f5968":"code","c3ad16ee":"code","1dc13fc4":"code","46f01c57":"code","201447ad":"code","d7f6c60b":"code","d3f009c5":"code","7fd52e80":"code","25651427":"code","7aea0625":"code","e4f29486":"code","014d4e89":"code","7cc0a021":"code","6cd3a0fc":"code","a7bed573":"code","3db56e0a":"code","ea8dfbf7":"code","f26dc268":"code","08d25533":"code","be197045":"markdown"},"source":{"9a306d70":"! pip install tensorflow-gpu==2.0.0","ec4ef300":"import numpy as np\nimport tensorflow as tf\nimport datetime\nfrom keras.datasets import fashion_mnist\n","169f5968":"tf.__version__","c3ad16ee":"(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()","1dc13fc4":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","46f01c57":"x_train = x_train \/ 255.0\nx_test = x_test\/255.0","201447ad":"x_train = x_train.reshape(-1, 28*28)\nx_test = x_test.reshape(-1, 28*28)\nprint(x_train.shape)\nprint(x_test.shape)","d7f6c60b":"model = tf.keras.models.Sequential()","d3f009c5":"model.add(tf.keras.layers.Dense(units = 120, activation = 'relu', input_shape = (784,)))","7fd52e80":"model.add(tf.keras.layers.Dropout(0.3))","25651427":"model.add(tf.keras.layers.Dense(units = 50, activation = 'relu'))","7aea0625":"model.add(tf.keras.layers.Dropout(0.3))","e4f29486":"model.add(tf.keras.layers.Dense(units = 10, activation = \"softmax\"))","014d4e89":"model.compile(optimizer = \"adam\", loss = \"sparse_categorical_crossentropy\", metrics = ['sparse_categorical_accuracy'])","7cc0a021":"model.summary()\n","6cd3a0fc":"if (tf.test.is_gpu_available):\n    print(\"GPU\")\nelse:\n    print(\"CPU\")\n","a7bed573":"from tensorflow.python.client import device_lib\n\ndevice_lib.list_local_devices()","3db56e0a":"with tf.device(\"\/device:GPU:0\"):\n    model.fit(x_train, y_train, epochs = 10)","ea8dfbf7":"test_loss, test_accuracy = model.evaluate(x_test, y_test)","f26dc268":"print(\"Test accuracy: {}\".format(test_accuracy))","08d25533":"\"\"\"\nSaving model's topology\n\nmodel_json = model.to_json()\nwith open(\"fashion_model.json\", \"w\") as json_file:\n    json_file.write(model_json)\n\nSaving model's weights\nmodel.save_weights(\"fashion_model.h5\")\n\n\"\"\"","be197045":"## Data pre-processing"}}