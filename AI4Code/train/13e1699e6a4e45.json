{"cell_type":{"efef4521":"code","9d8e2760":"code","e4d8a396":"code","95fb38b2":"code","989d4d81":"code","b09ce0d2":"code","b88e0a0f":"code","92d8c2ed":"code","c287cb3d":"code","df2ceb72":"code","f1b06af0":"code","1f7c34b5":"code","da094dfb":"code","6f20f6f7":"code","716674c5":"code","a456b1ef":"code","cae86a6a":"code","001bef6c":"code","ee267791":"code","f8e74484":"code","dd45e3f7":"code","900a08a6":"code","5a37aba1":"code","75de00a9":"code","cc7409bd":"code","6f3f23af":"code","c72dfc2d":"code","e3d7fe36":"code","7171b05c":"code","b4f80e8a":"markdown","15edda32":"markdown","698d5a6a":"markdown"},"source":{"efef4521":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d8e2760":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsdisaggregatedcsv\/disaggregated.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'disaggregated.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","e4d8a396":"import missingno as msno\n\np=msno.bar(df)","95fb38b2":"#Code from Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/super-eda-all-models-0-80-val-acc\/notebook\n\nfrom colorama import Fore, Style\n\ndef count(string: str, color=Fore.RED):\n    \"\"\"\n    Saves some work \ud83d\ude05\n    \"\"\"\n    print(color+string+Style.RESET_ALL)","989d4d81":"def statistics(dataframe, column):\n    count(f\"The Average value in {column} is: {dataframe[column].mean():.2f}\", Fore.RED)\n    count(f\"The Maximum value in {column} is: {dataframe[column].max()}\", Fore.BLUE)\n    count(f\"The Minimum value in {column} is: {dataframe[column].min()}\", Fore.YELLOW)\n    count(f\"The 25th Quantile of {column} is: {dataframe[column].quantile(0.25)}\", Fore.GREEN)\n    count(f\"The 50th Quantile of {column} is: {dataframe[column].quantile(0.50)}\", Fore.CYAN)\n    count(f\"The 75th Quantile of {column} is: {dataframe[column].quantile(0.75)}\", Fore.MAGENTA)","b09ce0d2":"# Print Age Column Statistics\nstatistics(df, 'Cases where sex_disaggregated data is available')","b88e0a0f":"# Let's plot the \"Cases where sex_disaggregated data is available\" column.\nplt.style.use(\"classic\")\nsns.distplot(df['Cases where sex_disaggregated data is available'], color='blue')\nplt.title(f\"Cases where sex_disaggregated data is available [\\u03BC : {df['Cases where sex_disaggregated data is available'].mean():.2f} gender | \\u03C3 : {df['Cases where sex_disaggregated data is available'].std():.2f} gender]\")\nplt.xlabel(\"Cases where sex_disaggregated data is available\")\nplt.ylabel(\"Count\")\nplt.show()","92d8c2ed":"# Print Age Column Statistics\nstatistics(df, 'Deaths where sex_disaggregated data is available')","c287cb3d":"# Let's plot the \"Deaths where sex_disaggregated data is available\" column.\nplt.style.use(\"classic\")\nsns.distplot(df['Deaths where sex_disaggregated data is available'], color='red')\nplt.title(f\"Deaths where sex_disaggregated data is available [\\u03BC : {df['Deaths where sex_disaggregated data is available'].mean():.2f} gender | \\u03C3 : {df['Deaths where sex_disaggregated data is available'].std():.2f} gender]\")\nplt.xlabel(\"Deaths where sex_disaggregated data is available\")\nplt.ylabel(\"Count\")\nplt.show()","df2ceb72":"# Let's plot the \"Proportion of deaths in confirmed cases male_female ratio\" column.\nplt.style.use(\"classic\")\nsns.distplot(df['Proportion of deaths in confirmed cases male_female ratio'], color='green')\nplt.title(f\"Proportion of deaths in confirmed cases male_female ratio [\\u03BC : {df['Proportion of deaths in confirmed cases male_female ratio'].mean():.2f} gender | \\u03C3 : {df['Proportion of deaths in confirmed cases male_female ratio'].std():.2f} gender]\")\nplt.xlabel(\"Proportion of deaths in confirmed cases male_female ratio\")\nplt.ylabel(\"Count\")\nplt.show()","f1b06af0":"plt.style.use(\"ggplot\")\nplt.figure(figsize=(18, 9))\nsns.boxplot(df['Proportion of deaths in confirmed cases male_female ratio'], df['Deaths where sex_disaggregated data is available'])\nplt.title(\"Deaths where sex_disaggregated data is available & Proportion of deaths in confirmed cases male_female ratio\")\nplt.xlabel(\"Proportion of deaths in confirmed cases male_female ratio\")\nplt.ylabel(\"Deaths where sex_disaggregated data is available\")\nplt.show()","1f7c34b5":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Case_death_data_by_sex'], palette='Accent_r')\nplt.xlabel(\"Case_death_data_by_sex\")\nplt.ylabel(\"Count\")\nplt.title(\"Case_death_data_by_sex\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","da094dfb":"plt.figure(figsize=(30,10))\nplt.subplot(131)\nsns.countplot(x= 'Cases percent male', data = df, palette=\"gist_stern\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.subplot(132)\nsns.countplot(x= 'Cases percent female', data = df, palette=\"gnuplot\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.show()","6f20f6f7":"plt.figure(figsize=(30,10))\nplt.subplot(131)\nsns.countplot(x= 'Deaths percent male', data = df, palette=\"Set2\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.subplot(132)\nsns.countplot(x= 'Deaths percent female', data = df, palette=\"Set3\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.show()","716674c5":"plt.figure(figsize=(30,10))\nplt.subplot(131)\nsns.countplot(x= 'Proportion of deaths in confirmed cases_male', data = df, palette=\"PuRd\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.subplot(132)\nsns.countplot(x= 'Proportion of deaths in confirmed cases_female', data = df, palette=\"viridis\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.show()","a456b1ef":"fig = px.line(df, x=\"Deaths date\", y=\"Deaths percent male\", color_discrete_sequence=['purple'], \n              title=\"Deaths % male\")\nfig.show()","cae86a6a":"fig = px.line(df, x=\"Deaths date\", y=\"Deaths percent female\", color_discrete_sequence=['crimson'], \n              title=\"Deaths % female\")\nfig.show()","001bef6c":"plt.figure(figsize=(10, 6))\nsns.set(style='ticks')\nscatter_df = df[[\"Cases where sex_disaggregated data is available\", \"Deaths where sex_disaggregated data is available\", \"Proportion of deaths in confirmed cases male_female ratio\"]]\nsns.pairplot(scatter_df)\nplt.show()","ee267791":"fig = px.bar(df, \n             x='Deaths date', y='Proportion of deaths in confirmed cases male_female ratio', color_discrete_sequence=['#2B3A67'],\n             title='Proportion of deaths in confirmed cases male-female ratio', text='Deaths percent male')\nfig.show()","f8e74484":"fig = px.bar(df, \n             x='Deaths date', y='Proportion of deaths in confirmed cases_female', color_discrete_sequence=['crimson'],\n             title='Proportion of deaths in confirmed cases-female', text='Deaths percent female')\nfig.show()","dd45e3f7":"def plot_MaleFemaleRatio(col, df, title):\n    fig, ax = plt.subplots(figsize=(18,6))\n    df.groupby(['Proportion of deaths in confirmed cases male_female ratio'])[col].sum().plot(rot=45, kind='bar', ax=ax, legend=True, cmap='bone')\n    ax.set_yticklabels(['{:,}'.format(int(x)) for x in ax.get_yticks().tolist()])\n    ax.set(Title=title, xlabel='Proportion of deaths in confirmed cases male_female ratio')\n    return ax","900a08a6":"plot_MaleFemaleRatio('Proportion of deaths in confirmed cases male_female ratio', df, 'Deaths Male-Female Ratio');","5a37aba1":"ax = df.groupby('Proportion of deaths in confirmed cases male_female ratio')['Proportion of deaths in confirmed cases male_female ratio', 'Deaths where sex_disaggregated data is available'].sum().plot(kind='bar', rot=45, figsize=(12,6), logy=True,\n                                                                 title='Proportion of deaths in confirmed cases male_female ratio')\nplt.xlabel('Proportion of deaths in confirmed cases male_female ratio')\nplt.ylabel('Count Log')\n\nplt.show()","75de00a9":"#Let's visualise disaggregated\ndisaggregated = df.groupby('Deaths date').sum()[['Deaths where sex_disaggregated data is available', 'Cases where sex_disaggregated data is available', 'Proportion of deaths in confirmed cases male_female ratio']]\n#evolution['Expiration Rate'] = (evolution['Expired'] \/ evolution['Cumulative']) * 100\n#evolution['Discharging Rate'] = (evolution['Discharged'] \/ evolution['Cumulative']) * 100\ndisaggregated.head()","cc7409bd":"plt.figure(figsize=(20,7))\nplt.plot(disaggregated['Deaths where sex_disaggregated data is available'], label='Deaths where sex_disaggregated data is available')\nplt.plot(disaggregated['Cases where sex_disaggregated data is available'], label='Cases where sex_disaggregated data is available')\nplt.plot(disaggregated['Proportion of deaths in confirmed cases male_female ratio'], label='Proportion of deaths in confirmed cases male_female ratio')\nplt.legend()\n#plt.grid()\nplt.title('Proportion of deaths in confirmed cases male_female')\nplt.xticks(disaggregated.index,rotation=45)\nplt.xlabel('Deaths date')\nplt.ylabel('Count')\nplt.show()","6f3f23af":"#What about disaggregated\nplt.figure(figsize=(20,7))\nplt.plot(disaggregated['Proportion of deaths in confirmed cases male_female ratio'], label='Sex-Disaggregated Deaths Ratio')\nplt.legend()\n#plt.grid()\nplt.title('Sex-Disaggregated Data - Deaths by Covid-19 Ratio')\nplt.xticks(disaggregated.index,rotation=45)\nplt.ylabel('Count')\nplt.show()","c72dfc2d":"#This is another way of visualizing the sex-disaggregated data\ndiff_disaggregated = disaggregated.diff().iloc[1:]\nplt.figure(figsize=(20,7))\nplt.plot(diff_disaggregated['Proportion of deaths in confirmed cases male_female ratio'], label='Sex-Disaggregated Deaths Ratio')\nplt.legend()\nplt.grid()\nplt.title('Sex-Disaggregated Data - Deaths by Covid-19 Ratio')\nplt.xticks(disaggregated.index,rotation=45)\nplt.ylabel('Count')\nplt.show()","e3d7fe36":"print('Sex-Disaggregated Data Statistics')\n\ndiff_disaggregated.describe()","7171b05c":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#a83a32','#a8324e','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Shh! @mpwolke' ) ","b4f80e8a":"It's messy, titles are long.","15edda32":"To arrive at a more nuanced understanding of the way in which countries report on COVID-19 cases and deaths, the global shares according to World Bank FY2020 was analyzed by income groups . Though only 5 low-income countries report on deaths and cases in GH5050, their capacity to report on these indicators by sex remains low. On the other hand, lower-middle-income countries report more of their cases by sex as a share than any other income group. This is again driven by the absence of sex-disaggregation of cases by two countries with some of the largest caseloads in the world. If Brazil\u2019s nearly 780,000 cases were sex-disaggregated, the share of cases reported by sex for upper-middle-income countries would rise to 68 percent, and if the United States\u2019 2 million cases were sex-disaggregated, the share of cases for high-income countries would more than double to 92 percent. Reporting on deaths by sex, meanwhile, reveals the most straightforward correlation between statistical capacity and income. High-income countries report practically all their deaths by sex and this share declines with each step down the income group ladder.\n\n\n![](https:\/\/data2x.org\/wp-content\/uploads\/2020\/06\/ODWBlog5.png)https:\/\/data2x.org\/tracking-gender-data-on-covid-19-part-2\/","698d5a6a":"![](https:\/\/data2x.org\/wp-content\/uploads\/2020\/06\/ODWBlog3.png)The sex-disaggregated data available as of 11 June 2020 from GH5050  \nhttps:\/\/data2x.org\/tracking-gender-data-on-covid-19-part-2\/"}}