{"cell_type":{"6a55f2b0":"code","4125a5b6":"code","86731501":"code","06e228a2":"code","969843b5":"code","413c23ab":"code","1f404e30":"code","15d28e02":"code","e916af15":"code","8f7c23e8":"code","d304539f":"code","565b2dc2":"code","c1888018":"code","3e566c4d":"code","94218717":"markdown","7a49d8fb":"markdown"},"source":{"6a55f2b0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4125a5b6":"df=pd.read_csv(\"..\/input\/forest-fires-in-brazil\/amazon.csv\",encoding=\"ISO-8859-1\")","86731501":"df.head()","06e228a2":"df.tail()","969843b5":"df.drop([\"date\"],axis=1,inplace=True)","413c23ab":"df.isnull().sum()","1f404e30":"df.month.unique()","15d28e02":"#plt.figure(figsize=(18,10))\nsns.barplot(x=\"month\", y=\"number\",data=df,\n           order=[\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\"])\nplt.xticks(rotation=75)\nplt.show()","e916af15":"plt.figure(figsize=(15,10))\nsns.swarmplot(x=\"month\", y=\"number\",data=df)\nplt.xticks(rotation=75)\nplt.show()","8f7c23e8":"fig=plt.figure(figsize=(20,5))\nsns.violinplot(x=\"month\",y=\"number\",data=df)\nplt.show()","d304539f":"ax=df.number.plot.kde()","565b2dc2":"df.boxplot(column=\"number\", by=\"year\")\nplt.xticks(rotation=75)\nplt.show()","c1888018":"import plotly.graph_objs as go\nfrom plotly import tools\nimport matplotlib.pyplot as plt\n# prepare data frames\ndf2017 = df[df.year == 2017].iloc[:100,:]\n\ny_saving = [each for each in df2017.number]\ny_net_worth  = [float(each) for each in df2017.number]\nx_saving = [each for each in df2017.state]\nx_net_worth  = [each for each in df2017.state]\ntrace0 = go.Bar(\n                x=y_saving,\n                y=x_saving,\n                marker=dict(color='rgba(171, 50, 96, 0.6)',line=dict(color='rgba(171, 50, 96, 1.0)',width=1)),\n                name='number',\n                orientation='h',\n)\ntrace1 = go.Scatter(\n                x=y_net_worth,\n                y=x_net_worth,\n                mode='lines+markers',\n                line=dict(color='rgb(63, 72, 204)'),\n                name='state',\n)\nlayout = dict(\n                title='number and state',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(248, 248, 255)',\n                plot_bgcolor='rgb(248, 248, 255)',\n)\nannotations = []\ny_s = np.round(y_saving, decimals=2)\ny_nw = np.rint(y_net_worth)\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x_saving):\n    # labeling the scatter savings\n    annotations.append(dict(xref='x2', yref='y2', y=xd, x=ydn - 4,text='{:,}'.format(ydn),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=yd + 3,text=str(yd),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\n\nlayout['annotations'] = annotations\n\n# Creating two subplots\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","3e566c4d":"\ndf2017 = df[df.year == 2017].iloc[:100,:]\npie1 = df2017.number\nlabels = df2017.state\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Fires\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"States Number of Fires\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Fires\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","94218717":"to be continued","7a49d8fb":"![](https:\/\/cff2.earth.com\/uploads\/2019\/07\/14133553\/An-increase-in-forest-fires-means-more-beetles-and-woodpeckers-730x410.jpg)"}}