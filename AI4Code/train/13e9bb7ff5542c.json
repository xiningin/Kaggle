{"cell_type":{"63597f04":"code","a95dd18a":"code","975e9bac":"code","92f4d2ea":"code","4dfd3a03":"code","d6da28f3":"code","c197f208":"code","7c01c554":"code","e602f56d":"code","fe035f6c":"code","be48c9c2":"code","6a84ee6a":"code","4417c059":"code","825170d0":"code","86331415":"code","5834a6ef":"code","b7753e7a":"code","f1d9c71b":"code","2351b4e5":"markdown","fc4d2be4":"markdown","d9b499b0":"markdown","16b8fbff":"markdown","5683f73b":"markdown"},"source":{"63597f04":"import numpy as np\nimport pandas as pd","a95dd18a":"training_file='\/kaggle\/input\/global-wheat-detection\/train.csv'\ntraining_folder='\/kaggle\/input\/global-wheat-detection\/train\/'\n\ntraining_labels = pd.read_csv(training_file)\ntraining_labels.head()","975e9bac":"image_ids = training_labels.drop_duplicates(subset='image_id')\nimage_ids.head()","92f4d2ea":"image_ids.groupby(['source']).size().plot(kind='bar')","4dfd3a03":"image_ids.groupby(['width']).size().plot(kind='bar')","d6da28f3":"image_ids.groupby(['height']).size().plot(kind='bar')","c197f208":"images_with_wheat = image_ids['image_id'].count()","7c01c554":"import glob\ntraining_folder_image_list = [f for f in glob.glob(training_folder+\"*.jpg\")]\ntotal_images = len(training_folder_image_list)","e602f56d":"percent = images_with_wheat \/ total_images * 100\nprint(\"Percentage of images with wheat: {}\".format(percent))","fe035f6c":"training_labels['image_id'].value_counts()","be48c9c2":"training_labels['image_id'].value_counts().plot(kind='line')","6a84ee6a":"arvalis_1 = training_labels[training_labels['source'] == 'arvalis_1']\narvalis_2 = training_labels[training_labels['source'] == 'arvalis_2']\narvalis_3 = training_labels[training_labels['source'] == 'arvalis_3']\nethz_1 = training_labels[training_labels['source'] == 'ethz_1']\ninrae_1 = training_labels[training_labels['source'] == 'inrae_1']\nrres_1 = training_labels[training_labels['source'] == 'rres_1']\nusask_1 = training_labels[training_labels['source'] == 'usask_1']","4417c059":"import matplotlib.pyplot as plt\nfig1 = plt.figure()\nax1 = fig1.add_subplot(111)\n\nax1.boxplot([arvalis_1['image_id'].value_counts(),\n             arvalis_2['image_id'].value_counts(),\n             arvalis_3['image_id'].value_counts(),\n             ethz_1['image_id'].value_counts(),\n             inrae_1['image_id'].value_counts(),\n             usask_1['image_id'].value_counts(),\n             rres_1['image_id'].value_counts(),])\nplt.show()","825170d0":"from IPython.display import Image\nwheat_image = Image(training_folder+training_labels['image_id'][0]+\".jpg\")\nwheat_image","86331415":"wheat_image = Image(training_folder+training_labels['image_id'][200]+\".jpg\")\nwheat_image","5834a6ef":"training_labels_full_path = [training_folder+image+\".jpg\" for image in training_labels[\"image_id\"]]\nnon_wheat_images = []\nfor image in training_folder_image_list:\n    if not image in training_labels_full_path:\n        non_wheat_images.append(image)\nnon_wheat_image = Image(non_wheat_images[0])\nnon_wheat_image","b7753e7a":"non_wheat_image2 = Image(non_wheat_images[1])\nnon_wheat_image2","f1d9c71b":"non_wheat_image3 = Image(non_wheat_images[30])\nnon_wheat_image3","2351b4e5":"Not the best distribution of sources, but currently unknown how much of an effect that has to play.","fc4d2be4":"It appears that the numbers of bounding boxes in images per source are not as uniformly distributed as I had originally hoped for with ethz_1 reporting significantly more bounding boxes per image.","d9b499b0":"Since each row corresponds to one bounding box, looking at the number of times each image id is referenced gives us the number of bboxes for each image, ranging from 0 to 116 and appearing to be fairly distributed.","16b8fbff":"As the data description states, not all images have bounding boxes labeled and each row in train.csv corresponds to a bounding box. That means there are some, ~1.5%, files in the folder without being listed in train.csv.","5683f73b":"It appears that all images are 1024X1024, or at least that is the case for all the images with wheat in the training subset."}}