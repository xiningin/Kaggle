{"cell_type":{"cb9adb80":"code","61a156ca":"code","51b25d6a":"code","43b0e429":"code","7971633f":"code","0c3d6fed":"code","c309eca3":"code","4997d435":"code","a2d3eee1":"code","6f0fce73":"code","a8389a82":"code","b21ec0e3":"code","72017ec9":"code","28f65d58":"code","d0167217":"code","641e3af7":"code","85b3e27c":"code","dacdf88e":"code","4070c1f9":"code","e834f2f2":"code","1339f30d":"markdown","1ac42d4d":"markdown","57cfaf0b":"markdown"},"source":{"cb9adb80":"from sklearn.datasets import dump_svmlight_file\nimport numpy as np\nimport pandas as pd\nimport os\nimport urllib\nimport zipfile\nfrom sklearn.model_selection import train_test_split\nimport shutil\n \nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n \nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.optimizers import Adam\n\n%matplotlib inline","61a156ca":"datasets = {'ml100k':'http:\/\/files.grouplens.org\/datasets\/movielens\/ml-100k.zip',\n            'ml20m':'http:\/\/files.grouplens.org\/datasets\/movielens\/ml-20m.zip',\n            'mllatestsmall':'http:\/\/files.grouplens.org\/datasets\/movielens\/ml-latest-small.zip',\n            'ml10m':'http:\/\/files.grouplens.org\/datasets\/movielens\/ml-10m.zip',\n            'ml1m':'http:\/\/files.grouplens.org\/datasets\/movielens\/ml-1m.zip'\n            }","51b25d6a":"!mkdir sample_data","43b0e429":"dt = \"mllatestsmall\"\ndt_name = os.path.basename(datasets[dt])\n \nprint('Downloading {}'.format(dt_name))\nwith urllib.request.urlopen(datasets[dt]) as response, open('.\/sample_data\/'+dt_name, 'wb') as out_file:\n    shutil.copyfileobj(response, out_file)\nprint('Download completed')","7971633f":"!unzip sample_data\/ml-latest-small.zip\n! ls -Rp .","0c3d6fed":"dataset = pd.read_csv(\".\/ml-latest-small\/ratings.csv\",sep=',',names=\"user_id,item_id,rating,timestamp\".split(\",\"), skiprows=1)\nprint(dataset.shape)\ndataset.head()","c309eca3":"dataset.user_id = dataset.user_id.astype('category').cat.codes.values\ndataset.item_id = dataset.item_id.astype('category').cat.codes.values","4997d435":"train, test = train_test_split(dataset, test_size=0.2)","a2d3eee1":"n_users, n_movies = len(dataset.user_id.unique()), len(dataset.item_id.unique())\nn_latent_factors = 20","6f0fce73":"keras.backend.clear_session()\n\nmovie_input = keras.layers.Input(shape=[1],name='Item')\nmovie_embedding = keras.layers.Embedding(n_movies + 1, n_latent_factors, name='Movie-Embedding')(movie_input)\nmovie_vec = keras.layers.Flatten(name='FlattenMovies')(movie_embedding)\n \nuser_input = keras.layers.Input(shape=[1],name='User')\nuser_vec = keras.layers.Flatten(name='FlattenUsers')(keras.layers.Embedding(n_users + 1, n_latent_factors,name='User-Embedding')(user_input))\n \nprod = keras.layers.dot([movie_vec, user_vec], axes=1,name='DotProduct')\nmodel = keras.Model([user_input, movie_input], prod)\n\nmodel.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae', 'mse'])\nmodel.summary()","a8389a82":"tf.keras.utils.plot_model(model)","b21ec0e3":"history = model.fit([train.user_id, train.item_id], train.rating, batch_size=32, epochs=150, verbose=1)","72017ec9":"model.predict([train.user_id[:3], train.item_id[:3]])","28f65d58":"train.rating[:3]","d0167217":"pd.Series(history.history['loss']).plot()\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Training Error\")","641e3af7":"results = model.evaluate((test.user_id, test.item_id), test.rating, batch_size=1)","85b3e27c":"movie_embedding_learnt = model.get_layer(name='Movie-Embedding').get_weights()[0]\npd.DataFrame(movie_embedding_learnt).describe()\n","dacdf88e":"user_embedding_learnt = model.get_layer(name='User-Embedding').get_weights()[0]","4070c1f9":"def recommend(user_id, number_of_movies=5):\n  movies = user_embedding_learnt[user_id]@movie_embedding_learnt.T\n  mids = np.argpartition(movies, -number_of_movies)[-number_of_movies:]\n  return mids","e834f2f2":"recommend(user_id=1)","1339f30d":"# We now can obtain two embedding matrices for users and items.","1ac42d4d":"# Recommendation System using Matrix Factorization","57cfaf0b":"[ref](https:\/\/petamind.com\/)"}}