{"cell_type":{"99b48f8d":"code","c8a588f6":"code","ec8ab26f":"code","a13d7e9a":"code","2d72b0e2":"code","d8033977":"code","ef91971f":"code","88cf5cbd":"code","ffa2f4aa":"code","87f8ce37":"code","2d4f31e0":"code","ca6c3aef":"code","b4f6b53f":"code","6ba9e99c":"code","3a1b221b":"code","f91561ca":"code","4181f3e0":"code","75d7e845":"code","fdca4fd4":"code","a3d0fe25":"code","5e5171fc":"code","eae95603":"code","a8c0de3c":"code","a56dba08":"code","dd65cec2":"code","3af31ecb":"code","40ddcdd4":"code","1d231981":"code","35e734ea":"code","685ad5e8":"markdown","0656297f":"markdown","5f25e964":"markdown","95be564b":"markdown","59e3ddf9":"markdown","b2c7dd42":"markdown","57ccb259":"markdown"},"source":{"99b48f8d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n!pip install openpyxl\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8a588f6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ec8ab26f":"path = \"..\/input\/best-restaurants-in-germany\/Best Restaurants in Germany.xlsx\"\n\ndf = pd.read_excel(path)\n\ndf.describe()\ndf.columns\ndf.info()\n\nplt.figure(figsize=(10, 5))\nsns.set_theme(style=\"whitegrid\")\nsns.countplot(x=\"City\", data=df, order=df.City.value_counts().iloc[:15].index, palette=\"tab10\")\nplt.title(\"Number of best restaurants per city\")\nplt.ylabel(\"Number of restaurants\", fontsize=12)\nplt.xlabel(\"City\", fontsize=12)\nplt.xticks(rotation=90)\nplt.legend\n#plt.savefig(\"..\/number_of_restaurants.png\", dpi=600, bbox_inches=\"tight\"); ## Optional, save a png-file to your folder","a13d7e9a":"#Convert column to float after splitting on \"\u20ac\"\ndf[\"Price Per Person\"] = df[\"Price Per Person\"].astype(str)\ndf[\"Price Per Person\"] = df[\"Price Per Person\"].apply(lambda x: x.split(\"\u20ac\")[0])\ndf[\"Price Per Person\"] = df[\"Price Per Person\"].astype(float)","2d72b0e2":"city_price_rank = df.groupby([\"City\"]).agg({\"Price Per Person\" : \"mean\", \"Rank\" : \"mean\"})","d8033977":"sorted_city_price_rank = city_price_rank.sort_values(by=\"Price Per Person\", ascending=False)\nsorted_city_price_rank.head(5)","ef91971f":"city_price_rank15 = sorted_city_price_rank.head(15)","88cf5cbd":"city_price_rank15.reset_index(inplace=True)","ffa2f4aa":"plt.figure(figsize=(10, 5))\nsns.set_theme(style=\"whitegrid\")\nsns.catplot(x=\"City\", y=\"Price Per Person\", data=city_price_rank15, kind=\"bar\", palette=\"husl\")\nplt.ylabel(\"Price per person\", fontsize=12)\nplt.xlabel(\"City\", fontsize=12)\nplt.xticks(rotation=90)\n#plt.savefig(\"..\/price_per_person.png\", dpi=600, bbox_inches=\"tight\"); ## Optional, save a png-file to your folder","87f8ce37":"df.value_counts(\"Stars\")","2d4f31e0":"plt.figure(figsize=(10, 5))\nsns.countplot(x=\"Stars\", data=df);","ca6c3aef":"df[\"Courses_int\"] = df[\"Courses\"].astype(str)\ndf[\"Courses_int\"] = df[\"Courses_int\"].apply(lambda x: x.split(\" \")[0])\ndf[\"Courses_int\"] = df[\"Courses_int\"].astype(float)","b4f6b53f":"stars_courses = df[[\"Stars\", \"Courses_int\"]]","6ba9e99c":"star_cours = stars_courses.groupby(\"Stars\").aggregate({\"Courses_int\" : \"mean\"})","3a1b221b":"plt.figure(figsize=(10, 5))\nstar_cours.reset_index(inplace=True)\nsns.catplot(x=\"Stars\", y=\"Courses_int\", data=star_cours, kind=\"point\")\nplt.ylabel(\"Average number of meals per star\", fontsize=12)\nplt.xlabel(\"Stars\", fontsize=12);","f91561ca":"sns.pairplot(df);","4181f3e0":"plt.figure(figsize=(10, 5))\nsns.displot(df[\"Stars\"]);","75d7e845":"plt.figure(figsize=(10, 5))\nsns.heatmap(df.corr(), annot=True, cmap=\"mako\");","fdca4fd4":"df.columns","a3d0fe25":"df.fillna(value=0, inplace=True)\ndf.isna().sum()","5e5171fc":"X = df[['Price Per Person', 'Courses_int']]\ny = df[\"Stars\"]","eae95603":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)\nfrom sklearn.linear_model import LinearRegression","a8c0de3c":"lm = LinearRegression()\nlm.fit(X_train, y_train)\nprint(lm.intercept_)","a56dba08":"lm.coef_","dd65cec2":"X_train.columns","3af31ecb":"cdf = pd.DataFrame(lm.coef_, X.columns, columns=[\"Coeff\"])","40ddcdd4":"cdf","1d231981":"culinary_cat = df.value_counts(subset=\"Culinary Category\", ascending=False)\ndf_culinary_cat = pd.DataFrame(culinary_cat)\ndf_culinary_cat.reset_index(inplace=True)\nculinary_cat15 = df_culinary_cat.head(15)\nculinary_cat15.rename(columns={0 : \"category\"}, inplace=True)","35e734ea":"plt.figure(figsize=(10, 5))\nsns.barplot(x=\"Culinary Category\", y=\"category\", data=culinary_cat15, palette=\"hls\")\nplt.ylabel(\"Number of restaurants\", fontsize=12)\nplt.xlabel(\"Culinary Category\", fontsize=12)\nplt.xticks(rotation=90);","685ad5e8":"## Check if price per person and number of courses determine stars","0656297f":"## Culinary variety of restaurants","5f25e964":"## How many stars are most common?","95be564b":"## Where is the most expensive restaurant?","59e3ddf9":"## Number of courses depending on stars","b2c7dd42":"## Do a simple regression (y=stars, x=price per person, number of courses)","57ccb259":"## Print the number of restaurants per city"}}