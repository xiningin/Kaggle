{"cell_type":{"080755c6":"code","88525dc9":"code","f877699e":"code","19a4dc68":"code","8c58ecf1":"code","a3123aa9":"code","933dbe9c":"code","540dc878":"code","73e84b21":"code","cad1a150":"code","960bcf37":"code","aec8f9a1":"code","b250ee7b":"code","ce3b0e68":"code","92131009":"markdown","4d51cec4":"markdown","317fc9f5":"markdown","f4574284":"markdown","8a90565b":"markdown","72350a49":"markdown","f0703a31":"markdown","6e76f677":"markdown","65307a78":"markdown","7aaf5332":"markdown","caaec139":"markdown","48ab8936":"markdown","de268621":"markdown","b30d7296":"markdown","b0fcec16":"markdown","839a658c":"markdown","549d5f38":"markdown"},"source":{"080755c6":"!git clone https:\/\/github.com\/AlexeyAB\/darknet","88525dc9":"%cd darknet\n!sed -i 's\/OPENCV=0\/OPENCV=1\/' Makefile\n!sed -i 's\/GPU=0\/GPU=1\/' Makefile\n!sed -i 's\/CUDNN=0\/CUDNN=1\/' Makefile\n!sed -i 's\/CUDNN_HALF=0\/CUDNN_HALF=1\/' Makefile","f877699e":"!sed -i 's\/LIBSO=0\/LIBSO=1\/' Makefile","19a4dc68":"!make","8c58ecf1":"!wget https:\/\/github.com\/AlexeyAB\/darknet\/releases\/download\/darknet_yolo_v3_optimal\/yolov4.weights","a3123aa9":"!.\/darknet detector test cfg\/coco.data cfg\/yolov4.cfg yolov4.weights data\/dog.jpg","933dbe9c":"import matplotlib.pyplot as plt\nfrom skimage.io import imread, imshow\n\nimage = 'data\/dog.jpg'\ndef display(_image):\n  img1 = imread(_image)\n  img2 = imread('predictions.jpg')\n  fig, axes = plt.subplots(ncols=2)\n  fig.set_size_inches(18.5, 10.5)\n  axes[0].set_axis_off()\n  axes[0].imshow(img1)\n  axes[1].set_axis_off()\n  axes[1].imshow(img2)\n  plt.tight_layout()\n\ndisplay(image)","540dc878":"!pwd","73e84b21":"!python darknet_images.py --weights yolov4.weights --input data\/dog.jpg","cad1a150":"from darknet_images import image_detection\nfrom darknet import load_network\nimport cv2\n\nweights = 'yolov4.weights' \ninput = 'data\/dog.jpg'\ndatafile = '.\/cfg\/coco.data'\ncfg = '.\/cfg\/yolov4.cfg'\nthresh= 0.5","960bcf37":"network, class_names, class_colors = load_network(cfg, datafile,  weights, 1)","aec8f9a1":"image, detections = image_detection(\n                                    input, \n                                    network, \n                                    class_names, \n                                    class_colors, \n                                    thresh\n                                    )","b250ee7b":"detections","ce3b0e68":"fig = plt.gcf()\nfig.set_size_inches(18, 10)\nplt.axis(\"off\")\nplt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))","92131009":"We get inspired and use the file **darknet_images.py**","4d51cec4":"## Launch by using Python (CLI)","317fc9f5":"### Activate GPU usage","f4574284":"Change some values in the YOLO configuration file to take into account OpenCV and GPUs (open the Makefile)\n*   OPENCV=0 \u2192 OPENCV=1\n*   GPU=0 \u2192 GPU=1\n*   CUDNN=0 \u2192 CUDNN=1\n*   CUDNN_HALF=0 \u2192CUDNN_HALF=1\n\nDon't forget to turn on GPU on the the kaggle notebook property (Accelerator)","8a90565b":"### Get the detected objects informations","72350a49":"### Darknet Importation","f0703a31":"### Display the tagged image","6e76f677":"## Darknet uses inside Python code (without wrapper)","65307a78":"### Compile Darknet code","7aaf5332":"# YOLO v4 first steps","caaec139":"Don't be afraid ... it very verbose !!!","48ab8936":"### See the result ...","de268621":"## Launch the object detection from command line","b30d7296":"This notebook aims to be a very simple starter kit to discover YOLO through its darknet implementation. See more explanations here : http:\/\/aishelf.org\/yolo\/","b0fcec16":"### Grab the YOLO v4 weights","839a658c":"## Environment preparation","549d5f38":"Creation of the library (Need for the Python wrapper). Allows the creation of the libdarknet.so file"}}