{"cell_type":{"231bf8a4":"code","f7cac31c":"code","61a96942":"code","569e5458":"code","88003e7e":"code","f02da363":"code","03b8b86f":"code","2051ba73":"code","97cc2bf6":"code","69b8741a":"code","29137012":"code","6f67f147":"code","e58d934d":"code","33096c89":"code","6bf7247c":"code","6f384eb2":"code","d252530f":"markdown","5a701cc2":"markdown"},"source":{"231bf8a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f7cac31c":"import copy\nimport random","61a96942":"org_deck=['AS', '2S', '3S', '4S', '5S', '6S', '7S', '8S', '9S', '10S', 'JS', 'QS', 'KS',\n          'AH', '2H', '3H', '4H', '5H', '6H', '7H', '8H', '9H', '10H', 'JH', 'QH', 'KH',\n          'AC', '2C', '3C', '4C', '5C', '6C', '7C', '8C', '9C', '10C', 'JC', 'QC', 'KC',\n          'AD', '2D', '3D', '4D', '5D', '6D', '7D', '8D', '9D', '10D', 'JD', 'QD', 'KD'\n         ]","569e5458":"def king(deck):\n    for i in range(len(deck)-1):\n        if deck[i][0]=='K' and deck[i+1][0]=='K':\n            return True","88003e7e":"def MonteCarlo(n):\n    res=0\n    for i in range (n):\n        deck = copy.deepcopy(org_deck)\n        random.shuffle(deck)\n        if king(deck): res+=1\n    print (res\/n*100)","f02da363":"MonteCarlo(10)","03b8b86f":"MonteCarlo(10)","2051ba73":"MonteCarlo(10)","97cc2bf6":"MonteCarlo(15)","69b8741a":"MonteCarlo(18)","29137012":"MonteCarlo(20)","6f67f147":"MonteCarlo(100)","e58d934d":"MonteCarlo(1000)","33096c89":"MonteCarlo(10000)","6bf7247c":"MonteCarlo(100000)","6f384eb2":"MonteCarlo(1000000)","d252530f":"Find the probability of that at least 2 Kings will appear next to each other in the shuffled deck.","5a701cc2":"The result here is done with Monte Carlo simulation (due to the law of large numbers, if we perform a random experiment a large number of times the result converges to the expected value)."}}