{"cell_type":{"0692a0c6":"code","89305cec":"code","3ccf8399":"code","df15e624":"code","872701f9":"code","a46b846f":"code","b0013120":"code","3952e1cf":"code","2a4bc5bd":"code","98ea6c8c":"code","2fab135f":"code","0c4127fd":"code","2c24112d":"code","ab04d2cd":"code","db776fbe":"code","309a01e5":"code","e0c0d0f9":"code","9ef0c9c1":"code","539e8409":"code","8b3edaa6":"code","84a6f4fd":"code","fa5cce1a":"code","da04af98":"code","36257b2a":"code","beafa3da":"code","2719e109":"code","47c5864b":"code","12f4aa1a":"code","cc9a0cf1":"code","280f47d6":"code","1523ea59":"code","31743362":"code","6cf974a1":"code","dafb8e91":"code","2cf9df19":"code","808c7fcc":"code","1cd25e14":"code","1f674181":"code","0275f813":"code","1e24404d":"code","71abcdc0":"code","596f27fe":"code","f57e897a":"markdown","39fbd46c":"markdown","3cea2eaa":"markdown","341edacb":"markdown"},"source":{"0692a0c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","89305cec":"df_train = pd.read_csv(\"..\/input\/machine-learning-on-titanic-data-set\/train.csv\")","3ccf8399":"df_train.head()","df15e624":"df_train.isnull().sum()","872701f9":"df_train[\"Age_Imp\"] = np.where(df_train[\"Age\"].isnull(),1,0)","a46b846f":"df_train[\"Age\"] = df_train[\"Age\"].fillna(df_train[\"Age\"].median())","b0013120":"df_train[\"Cabin_Imp\"] = np.where(df_train[\"Cabin\"].isnull(),1,0) ","3952e1cf":"df_train['Cabin'].fillna('Missing',inplace=True)","2a4bc5bd":"df_train[\"Embarked\"] = df_train[\"Embarked\"].fillna(df_train[\"Embarked\"].mode()[0])","98ea6c8c":"df_train.isnull().sum()","2fab135f":"df_train[\"Cabin\"] = df_train[\"Cabin\"].astype(str).str[0]\ndf_train.Cabin.unique()","0c4127fd":"df_train.groupby(['Cabin'])['Survived'].mean().sort_values().index","2c24112d":"ordinal_labels=df_train.groupby(['Cabin'])['Survived'].mean().sort_values().index\nordinal_labels","ab04d2cd":"ordinal_labels1 = {'T': 0, 'M': 1, 'A': 2, 'G': 3, 'C': 4, 'F': 5, 'B': 6, 'E': 7, 'D': 8}","db776fbe":"df_train[\"Cabin\"] = df_train[\"Cabin\"].map(ordinal_labels1)","309a01e5":"df_train.head()","e0c0d0f9":"df_train[\"Sex\"] = pd.get_dummies(df_train[\"Sex\"], drop_first=True)","9ef0c9c1":"sns.barplot(x = \"Embarked\", y =\"Survived\", data = df_train)","539e8409":"sns.barplot(x = \"Sex\", y = \"Survived\", data = df_train)","8b3edaa6":"sns.countplot(x = \"Pclass\", hue = \"Survived\", data = df_train, color=\"r\")","84a6f4fd":"sns.barplot(x = \"Pclass\", y = \"Fare\", data = df_train)","fa5cce1a":"sns.barplot(x = \"Survived\", y = \"Fare\", data = df_train)","da04af98":"df_train[\"Embarked\"] = pd.get_dummies(df_train[\"Embarked\"], drop_first=True)","36257b2a":"sns.heatmap(df_train.corr())","beafa3da":"df_train.corr()","2719e109":"#### Lets compute the Interquantile range to calculate the boundaries\nIQR=df_train.Fare.quantile(0.75)-df_train.Fare.quantile(0.25)\nlower_bridge=df_train['Fare'].quantile(0.25)-(IQR*3)\nupper_bridge=df_train['Fare'].quantile(0.75)+(IQR*3)\nprint(lower_bridge), print(upper_bridge)","47c5864b":"IQR=df_train.Age.quantile(0.75)-df_train.Age.quantile(0.25)\nlower_bridge=df_train['Age'].quantile(0.25)-(IQR*3)\nupper_bridge=df_train['Age'].quantile(0.75)+(IQR*3)\nprint(lower_bridge), print(upper_bridge)","12f4aa1a":"df_train['Age']=df_train['Age'].astype(int)\ndf_train['Age']=df_train['Age'].astype(int)\ndf_train.loc[ df_train['Age'] <= 16, 'Age']= 0\ndf_train.loc[(df_train['Age'] > 16) & (df_train['Age'] <= 32), 'Age'] = 1\ndf_train.loc[(df_train['Age'] > 32) & (df_train['Age'] <= 48), 'Age'] = 2\ndf_train.loc[(df_train['Age'] > 48) & (df_train['Age'] <= 64), 'Age'] = 3\ndf_train.loc[df_train['Age'] > 64, 'Age'] = 4","cc9a0cf1":"df_train.drop([ \"Name\", \"Ticket\", \"PassengerId\",], axis=1,inplace = True)","280f47d6":"df_train['Fare']=df_train['Fare'].astype(int)\ndf_train.head()","1523ea59":"df_train.groupby(['Pclass'])['Fare'].mean().sort_values()","31743362":"df_train.loc[ df_train['Fare'] <= 13, 'Fare']= 1\ndf_train.loc[(df_train['Fare'] > 13) & (df_train['Fare'] <= 21), 'Fare'] = 2\ndf_train.loc[df_train['Fare'] > 21, 'Fare'] = 3","6cf974a1":"X=df_train.drop('Survived',axis=1)\ny=df_train['Survived'].astype(int)","dafb8e91":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","2cf9df19":"from sklearn.ensemble import RandomForestClassifier\nmodel =RandomForestClassifier(max_depth=560, max_features='sqrt', min_samples_leaf=5,\n                       min_samples_split=16, n_estimators=955)\nmodel.fit(X_train , y_train)","808c7fcc":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(model.predict(X_test) , y_test))","1cd25e14":"df1 = pd.read_csv(\"..\/input\/testmod\/testmod.csv\")","1f674181":"sub= pd.read_csv(\"..\/input\/machine-learning-on-titanic-data-set\/gender_submission.csv\")","0275f813":"sub","1e24404d":"sub[\"Survived\"] = model.predict(df1)","71abcdc0":"sub","596f27fe":"sub.to_csv(\"submission1.csv\", index= False)","f57e897a":"# Time for outliers \n- Using Interquantile range","39fbd46c":"# Handle the Missing Values","3cea2eaa":"# Feature Engineering\n* 1. Handle the Missing Values\n* 2. Handle the Categorical Data\n* 3. Handle the Outliers","341edacb":"For output files ready to use files are produced. You can use submission.csv in the outputfies folder. Guys please upvote this notebook guys. Thanks in advance for guys who upvoted me"}}