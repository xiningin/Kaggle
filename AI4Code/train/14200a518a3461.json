{"cell_type":{"1f6ebdc7":"code","cc5a9fb7":"code","c89e0b7e":"code","3a8d4881":"code","9e42f58a":"code","62d77989":"code","df48cd96":"code","146bda19":"code","35ad1053":"code","adf42efe":"code","eab7cbd9":"code","00539263":"code","bcfe13f8":"code","6824bee1":"code","35b9c6f5":"code","47c71cb1":"code","2b8bfb90":"code","e14f5cfd":"code","75f4537b":"code","4bf6c0b5":"code","d42470e2":"code","c5d13d28":"code","d79654a9":"code","a0261f42":"code","a90fdec0":"code","e1dd98dc":"code","296b467e":"code","23fc676d":"code","b5a4eff5":"code","9dcb4aa0":"code","33c30945":"code","d47a205d":"code","e923f3f0":"code","92f2651b":"code","009e9d4b":"code","e2021508":"code","f8c0cdb4":"markdown","22293134":"markdown","073c458f":"markdown","75a17c80":"markdown","6770c6c6":"markdown"},"source":{"1f6ebdc7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\nfrom IPython.display import display, HTML\n\n# word cloud library\nfrom wordcloud import WordCloud,ImageColorGenerator\n\n# matplotlib\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cc5a9fb7":"import warnings\nwarnings.filterwarnings('ignore')","c89e0b7e":"#Loading Data\ngsales = pd.read_csv(\"..\/input\/vgsales\/videogames.csv\")","3a8d4881":"#Knowing about data\ngsales.info()","9e42f58a":"#Getting the head data\ngsales.head()","62d77989":"#displaying different Genres\nprint(gsales.Genre.value_counts())","df48cd96":"vg_genre = gsales.Genre.value_counts().reset_index()\n\n#Creating Trace1\ntrace1 = go.Bar(\n                x = vg_genre['index'],\n                y = vg_genre['Genre'],\n                marker = dict(color = 'rgb(192, 240, 153)',\n                              line = dict(color = 'rgb(0, 0, 0)', width = 1.5)))\n\nlayout = go.Layout(template = \"plotly_dark\", title = 'Most made game genre',\n                  xaxis = dict(title = 'Genre'), yaxis = dict(title = 'Count'))\n\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","146bda19":"#figure\nfig = {\n    \"data\" : [\n        {\n            \"values\" : vg_genre['Genre'],\n            \"labels\" : vg_genre['index'],\n            \"hoverinfo\" : \"label+percent+value\",\n            \"hole\" : .3,\n            \"type\" : \"pie\"\n        },],\n    \"layout\" : {\n        \"title\" : \"Genere Analysis\",\n        \"title_x\" : 0.47,\n    }\n}\niplot(fig)","35ad1053":"vg_year = gsales.Year.value_counts().reset_index()\n\n#Creating Trace 1\n\ntrace1 = go.Bar(\n                x = vg_year['index'],\n                y = vg_year['Year'],\n                marker = dict(color = 'rgb(192, 129, 153)',\n                             line = dict(color = 'rgb(0, 0, 0)', width = 1.5)))\n\n\nlayout = go.Layout(template = \"plotly_dark\", title = 'games realese by year',\n                  xaxis = dict(title = 'Year'), yaxis = dict(title = 'no of games realeased'))\n\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","adf42efe":"vg_platform = gsales.Platform.value_counts().reset_index()\n\n#Create Trace 1\n\ntrace1 = go.Bar(\n                x = vg_platform['index'],\n                y = vg_platform['Platform'],\n                marker = dict(color = 'rgb(248, 236, 124)', \n                             line = dict(color = 'rgb(0, 0, 0)', width = 1.5)))\n\nlayout = go.Layout(template = \"plotly_dark\", title = \"games release by platform\",\n                  xaxis = dict(title = 'Platform'), yaxis = dict(title = 'no of games released'))\n\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","eab7cbd9":"#Top Publishers\nvgpub = gsales.groupby('Publisher')['Name'].count().reset_index()\nvgpub = vgpub.sort_values('Name', ascending = False).reset_index()\nvgpub.drop(\"index\", axis = 1, inplace = True)\nprint(vgpub)","00539263":"fig = go.Figure()\nfig.add_trace(\n            go.Bar(x=vgpub['Publisher'][:10],\n                  y = vgpub['Name'][:10],\n                  name = \"Top 10\",\n                  marker = {'color' :'rgb(72, 148, 252)',\n                           'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n                  visible = False))\nfig.add_trace(\n            go.Bar(x=vgpub['Publisher'][:100],\n                  y=vgpub['Name'][:100],\n                  name = \"Top 100\",\n                  marker = {'color' : 'rgb(72, 148, 252)',\n                           'line': {'color' :'rgb(0, 0, 0)', 'width' :1.5}},\n                visible = False))\n\nfig.update_layout(\n            updatemenus = [\n                dict(\n                 type = \"buttons\",\n                 directions = \"right\",\n                 active = 0,\n                 x = 0.57,\n                 y = 1.2,\n                 buttons = list([\n                     dict(label=\"Top 10\",\n                          mehtod=\"updare\",\n                          args=[{\"visible\": [True, False, False]},\n                              {\"title\": \"Top 10 Publisher\"}]),\n                     dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False]},\n                           {\"title\": \"Top 50 Publishers\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True]},\n                           {\"title\": \"Top 100 Publishers\"}]),\n                 ]),\n                    \n                )\n            ])\n\nfig.update_layout(template= \"plotly_dark\",title = 'Top Publishers' , xaxis = dict(title = 'Publishers'), yaxis = dict(title = 'Number of Games Published'))\n\nfig.show()","bcfe13f8":"#Highest Global Sales\ngenre_sales = gsales.groupby('Genre')['Global_Sales'].sum().reset_index().sort_values(\"Global_Sales\",ascending=False)\nprint(genre_sales)","6824bee1":"fig = px.pie(genre_sales, names='Genre', values='Global_Sales')\nfig.update_traces(rotation=90, pull=[0.25,0.07,0.07,0.07,0.07], textinfo=\"percent+label\")\nfig.update_layout(title=\"Video Game Sales by Genre\",title_x=0.5)\nfig.show()\n# create trace1\ntrace1 = go.Bar(\n                x = genre_sales['Genre'],\n                y = genre_sales['Global_Sales'],\n                marker = dict(color = 'rgb(255, 149, 91)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Sales by Genre' , xaxis = dict(title = 'Genre'), yaxis = dict(title = 'Sales'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","35b9c6f5":"year_sales = gsales.groupby('Year')['Global_Sales'].sum().reset_index()\n# create trace1\ntrace1 = go.Bar(\n                x = year_sales['Year'],\n                y = year_sales['Global_Sales'],\n                marker = dict(color = 'rgb(135, 115, 192)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)))\nlayout = go.Layout(template= \"plotly_dark\",title = 'Video Game Sales by Release Year' , xaxis = dict(title = 'Year'), yaxis = dict(title = 'Sales'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","47c71cb1":"platform_sales =  gsales.groupby('Platform')['Global_Sales'].sum().reset_index().sort_values(\"Global_Sales\",ascending=False)\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:5],\n           y=platform_sales['Global_Sales'][:5],\n           name=\"Top 5\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:10],\n           y=platform_sales['Global_Sales'][:10],\n           name=\"Top 10\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:20],\n           y=platform_sales['Global_Sales'][:20],\n           name=\"Top 20\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'],\n           y=platform_sales['Global_Sales'],\n           name=\"All\",\n           marker = {'color' : 'rgb(26, 136, 121)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 5\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False,False]},\n                           {\"title\": \"Top 5 \"}]),\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False,False]},\n                           {\"title\": \"Top 10\"}]),\n                dict(label=\"Top 20\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 20 \"}]),\n                \n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False,True]},\n                           {\"title\": \"All\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(template= \"plotly_dark\",title = 'Video Game Sales by Platform' , xaxis = dict(title = 'Platforms'), yaxis = dict(title = 'Sales'))\n","2b8bfb90":"pub_sales=  gsales.groupby('Publisher')['Global_Sales'].sum().reset_index().sort_values('Global_Sales',ascending=False)\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:10],\n           y=pub_sales['Global_Sales'][:10],\n           name=\"Top 10\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:50],\n           y=pub_sales['Global_Sales'][:50],\n           name=\"Top 50\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:100],\n           y=pub_sales['Global_Sales'][:100],\n           name=\"Top 100\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'],\n           y=pub_sales['Global_Sales'],\n           name=\"All\",\n           marker = {'color' : 'rgb(194, 178, 213)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False,False]},\n                           {\"title\": \"Top 10 \"}]),\n                dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False,False]},\n                           {\"title\": \"Top 50\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 100 \"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False,False,True]},\n                           {\"title\": \"All\"}]),\n                \n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(template= \"plotly_dark\",title = 'Video Game Sales by Publisher' , xaxis = dict(title = 'Publishers'), yaxis = dict(title = 'Sales'))\n\nfig.show()","e14f5cfd":"year =  gsales.groupby('Year')['Name'].count().reset_index().sort_values(\"Name\",ascending=False)\nyear = year.reset_index()\nyear.drop(\"index\",axis = 1,inplace=True)  \n\ngenre = gsales['Genre'].unique()\ngenres = sorted(genre)","75f4537b":"na_sales = []\neu_sales = []\njp_sales = []\nother_sales = []\nglobal_sales = []\n\nfor i in genres:\n    v=gsales[gsales.Genre==i]\n    na_sales.append(v.NA_Sales.sum())\n    eu_sales.append(v.EU_Sales.sum())\n    jp_sales.append(v.JP_Sales.sum())\n    other_sales.append(v.Other_Sales.sum())","4bf6c0b5":"fig = go.Figure()\nfig.add_trace(go.Bar(x=na_sales,\n                     y=genres,\n                     name='North America Sales',                     \n                     orientation='h'))\nfig.add_trace(go.Bar(x=eu_sales,\n                     y=genres,\n                     name='Europe Sales',                    \n                     orientation='h'))\nfig.add_trace(go.Bar(x=jp_sales,\n                     y=genres,\n                     name='Japan Sales',                   \n                     orientation='h'))\nfig.add_trace(go.Bar(x=other_sales,\n                     y=genres,\n                     name='Other Region Sales',                  \n                     orientation='h'))\nfig.update_layout(template= \"plotly_dark\",title_text='Region Sales by Genre',xaxis_title=\"Sales\",yaxis_title=\"Genre\",\n                  barmode='stack')\nfig.show()","d42470e2":"fig = go.Figure()\n    \nfig.add_trace(go.Scatter(\n    x=genres, \n    y=na_sales, \n    name='North America Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=eu_sales, \n    name='Europe Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=jp_sales, \n    name='Japan Sales',\n    mode='lines+markers',\n))\nfig.add_trace(go.Scatter(\n    x=genres, \n    y=other_sales,\n    name='Other Region Sales',\n    mode='lines+markers',\n))\nfig.update_layout(template= \"plotly_dark\",title=\"Total sales by genre\")\nfig.update_xaxes(type='category')\nfig.show()\n\n","c5d13d28":"years = [2008.0, 2009.0, 2007.0, 2010.0, 2006.0]\nna_sales = []\neu_sales = []\njp_sales = []\nother_sales = []\nglobal_sales = []\n\nfor y in years:\n    v=gsales[gsales.Year==y]\n    na_sales.append(v.NA_Sales.sum())\n    eu_sales.append(v.EU_Sales.sum())\n    jp_sales.append(v.JP_Sales.sum())\n    other_sales.append(v.Other_Sales.sum())","d79654a9":"tna=gsales.groupby('Year')['NA_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\nteu=gsales.groupby('Year')['EU_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\ntjp=gsales.groupby('Year')['JP_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)\ntot=gsales.groupby('Year')['Other_Sales'].sum().reset_index().sort_values(\"Year\",ascending=True)","a0261f42":"fig = go.Figure()\nfig.add_trace(go.Bar(x=na_sales,\n                     y=years,\n                     name='North America Sales',                     \n                     orientation='h'))\nfig.add_trace(go.Bar(x=eu_sales,\n                     y=years,\n                     name='Europe Sales',                    \n                     orientation='h'))\nfig.add_trace(go.Bar(x=jp_sales,\n                     y=years,\n                     name='Japan Sales',                   \n                     orientation='h'))\nfig.add_trace(go.Bar(x=other_sales,\n                     y=years,\n                     name='Other Region Sales',                  \n                     orientation='h'))\nfig.update_layout(template= \"plotly_dark\",title_text='Region Sales by Highest Sales Year',xaxis_title=\"Sales\",yaxis_title=\"Year\",\n                  barmode='stack')\nfig.show()","a90fdec0":"# Creating trace1\ntrace1 = go.Scatter(\n                    x = tna.Year,\n                    y = tna.NA_Sales,\n                    mode = \"lines\",\n                    name = \"North America\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'))\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = teu.Year,\n                    y = teu.EU_Sales,\n                    mode = \"lines\",\n                    name = \"Europe\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'))\n# Creating trace3\ntrace3 = go.Scatter(\n                    x = tjp.Year,\n                    y = tjp.JP_Sales,\n                    mode = \"lines\",\n                    name = \"Japan\",\n                    marker = dict(color = 'rgba(241, 27, 61, 0.8)'))\n# Creating trace4\ntrace4 = go.Scatter(\n                    x = tot.Year,\n                    y = tot.Other_Sales,\n                    mode = \"lines\",\n                    name = \"Other\",\n                    marker = dict(color = 'rgba(241, 236, 28, 0.8)'))\ndata = [trace1, trace2,trace3,trace4]\nlayout = dict(title = '',\n              xaxis= dict(title= 'Year',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Total Sales',ticklen= 5,zeroline= False),\n              template= \"plotly_dark\"\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)\n\n","e1dd98dc":"na_sales = gsales.groupby('Platform')['NA_Sales'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_sales = na_sales[:5]\n\neu_sales = gsales.groupby('Platform')['EU_Sales'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_sales = eu_sales[:5]\n\njp_sales = gsales.groupby('Platform')['JP_Sales'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_sales = jp_sales[:5]\n\nother_sales = gsales.groupby('Platform')['Other_Sales'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_sales = other_sales[:5]","296b467e":"fig = go.Figure()\n\nfig.add_trace(\n    go.Bar(y=na_sales['NA_Sales'],\n           x=na_sales['Platform'],\n           name=\"North America\",\n          marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(y=eu_sales['EU_Sales'],\n           x=eu_sales['Platform'],\n           name=\"Europe\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=jp_sales['Platform'],\n           y=jp_sales['JP_Sales'],\n           name=\"Japan\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=other_sales['Platform'],\n           y=other_sales['Other_Sales'],\n           name=\"Others\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_sales['Platform'][:5],\n           y=platform_sales['Global_Sales'][:5],\n           name=\"Gloabal\",\n           marker = {'color' : 'rgb(156, 254, 250)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"North America\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 5 Platform for North America\"}]),\n                dict(label=\"Europe\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 5 Platform for Europe\"}]),\n                dict(label=\"Japan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 5 Platform for Japan\"}]),\n                dict(label=\"Others\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 5 Platform for Other Region\"}]),\n                dict(label=\"Global\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 5 Platform for Global\"}]),\n            ]),\n        )\n    ])\nfig.update_layout(template= \"plotly_dark\",title_text=\"Region sales by platform\",xaxis_domain=[0.05, 1.0])\nfig.show()","23fc676d":"na_sales = gsales.groupby('Publisher')['NA_Sales'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_sales = na_sales[:5]\n\neu_sales = gsales.groupby('Publisher')['EU_Sales'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_sales = eu_sales[:5]\n\njp_sales = gsales.groupby('Publisher')['JP_Sales'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_sales = jp_sales[:5]\n\nother_sales = gsales.groupby('Publisher')['Other_Sales'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_sales = other_sales[:5]\n\n\n\n","b5a4eff5":"fig = go.Figure()\n\nfig.add_trace(\n    go.Bar(x=na_sales['Publisher'],\n           y=na_sales['NA_Sales'],\n           name=\"North America\",\n          marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}}))\nfig.add_trace(\n    go.Bar(x=eu_sales['Publisher'],\n           y=eu_sales['EU_Sales'],   \n           name=\"Europe\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=jp_sales['Publisher'],\n           y=jp_sales['JP_Sales'],\n           name=\"Japan\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=other_sales['Publisher'],\n           y=other_sales['Other_Sales'],\n           name=\"Others\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pub_sales['Publisher'][:5],\n           y=pub_sales['Global_Sales'][:5],\n           name=\"Gloabal\",\n           marker = {'color' : 'rgb(178, 37, 31)',\n                              'line' :{'color' :'rgb(0,0,0)','width' :1.5}},\n           visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"North America\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 5 Platform for North America\"}]),\n                dict(label=\"Europe\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 5 Platform for Europe\"}]),\n                dict(label=\"Japan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 5 Platform for Japan\"}]),\n                dict(label=\"Others\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 5 Platform for Other Region\"}]),\n                dict(label=\"Global\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 5 Platform for Global\"}]),\n            ]),\n        )\n    ])\n,\nfig.update_layout(template= \"plotly_dark\",title_text=\"Region sales by publisher\",xaxis_domain=[0.05, 1.0])\nfig.show()\n\n","9dcb4aa0":"vg1000=gsales.iloc[:1000,:]","33c30945":"vg1000[\"normalizesales\"] = (vg1000[\"Global_Sales\"] - np.min(vg1000[\"Global_Sales\"]))\/(np.max(vg1000[\"Global_Sales\"])-np.min(vg1000[\"Global_Sales\"]))","d47a205d":"\nvg1000.Rank=vg1000.Rank.astype(\"str\")\nvg1000.Global_Sales=vg1000.Global_Sales.astype(\"str\")\ntrace1 = go.Scatter3d(\n    y=vg1000[\"Publisher\"],\n    x=vg1000[\"Year\"],\n    z=vg1000[\"normalizesales\"],\n    text=\"Name:\"+ vg1000.Name +\",\"+\" Rank:\" + vg1000.Rank + \" Global Sales: \" + vg1000[\"Global_Sales\"] +\" millions\",\n    mode='markers',\n    marker=dict(\n        size=vg1000['NA_Sales'],\n        color = vg1000['normalizesales'],\n        colorscale = \"Rainbow\",\n        colorbar = dict(title = 'Global Sales'),\n        line=dict(color='rgb(200, 110, 67)'),\n       \n    )\n)\n\ndata=[trace1]\n\nlayout=go.Layout(height=800, width=800, title='Top 1000 Video Games, Release Years, Publishers and Sales',\n            titlefont=dict(color='rgb(20, 24, 54)'),\n            scene = dict(xaxis=dict(title='Year',\n                                    titlefont=dict(color='rgb(20, 24, 54)')),\n                            yaxis=dict(title='Publisher',\n                                       titlefont=dict(color='rgb(20, 24, 54)')),\n                            zaxis=dict(title='Global Sales',\n                                       titlefont=dict(color='rgb(20, 24, 54)')),\n                            bgcolor = 'whitesmoke'\n                           ))\n \nfig=go.Figure(data=data, layout=layout)\niplot(fig)\n\n","e923f3f0":"na_games = gsales.groupby('NA_Sales')['Name'].sum().reset_index().sort_values('NA_Sales',ascending=False)\nna_games = na_games[:5]\n\neu_games = gsales.groupby('EU_Sales')['Name'].sum().reset_index().sort_values('EU_Sales',ascending=False)\neu_games = eu_games[:5]\n\njp_games = gsales.groupby('JP_Sales')['Name'].sum().reset_index().sort_values('JP_Sales',ascending=False)\njp_games = jp_games[:5]\n\nother_games = gsales.groupby('Other_Sales')['Name'].sum().reset_index().sort_values('Other_Sales',ascending=False)\nother_games = other_games[:5]","92f2651b":"trace1= go.Bar(y=na_games['NA_Sales'],\n               x=na_games['Name'],\n               name=\"North America\",\n               marker={'color': na_games['NA_Sales'],'colorscale': 'Earth'})\n\ntrace2= go.Bar(y=eu_games['EU_Sales'],\n               x=eu_games['Name'],\n               name=\"Europe\",\n               marker={'color': eu_games['EU_Sales'],'colorscale': 'Earth'})\n\ntrace3= go.Bar(y=jp_games['JP_Sales'],\n               x=jp_games['Name'],\n               name=\"Japan\",\n               marker={'color': jp_games['JP_Sales'],'colorscale': 'Earth'})\n\n\ntrace4=go.Bar(y=other_games['Other_Sales'],\n              x=other_games['Name'],\n              name=\"Other\",\n              marker={'color': other_games['Other_Sales'],'colorscale': 'Earth'})\n\n\nlayout=dict(template=\"plotly_dark\",height=600, width=800, title_text=\"Video game rankings by region\")\n\nfig = make_subplots(\n    rows=2, cols=2, subplot_titles=(\"North America\", \"Europe\", \"Japan\",\"Other\"),\n    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}],\n           [ {\"type\": \"bar\"}, {\"type\": \"bar\"}]])\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\n\nfig['layout'].update(layout)\nfig.show()","009e9d4b":"# data prepararion\ngenre=gsales['Genre']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(genre))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","e2021508":"# data prepararion\nplatform=gsales['Platform']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(platform))\nplt.imshow(wordcloud)\nplt.axis('off')\n\nplt.show()","f8c0cdb4":"# ****Thank you! UPVOTE","22293134":"# * **Visualizaion**","073c458f":"# Platform on which most games releases","75a17c80":"# YEAR IN WHICH MOST GAMES RELEASES?","6770c6c6":"**What are the most made genres**"}}