{"cell_type":{"9ff8447f":"code","1b1ab9f4":"code","a20a6b81":"code","6a590771":"code","605e4d80":"code","4ae42c7b":"code","c8623172":"code","6f5ec6d5":"code","bd28c779":"code","f2cd0339":"code","ea548185":"code","ad48b105":"code","beeab865":"code","6cbd7c23":"code","d5d78f7f":"code","2d0f0b3d":"code","4dfd1fd0":"code","02b6d340":"code","778a7084":"code","ec00f0a3":"code","ee2be3aa":"code","42519217":"code","7cddbc53":"code","24ec12ff":"code","1bf9cb95":"code","375ffff6":"code","79e97f16":"code","8bd89296":"code","c31cb9c9":"code","d0312bfe":"code","5df0ce2b":"code","b9516731":"code","209e7bc0":"code","20f610ea":"code","498a95a5":"code","2c2aedc6":"code","29d898e1":"code","f0459743":"code","6b959bb8":"markdown","681f1f27":"markdown","5ea7277f":"markdown","980f2933":"markdown","5cceaac8":"markdown","82887b8f":"markdown","682221ba":"markdown","23079cd1":"markdown","b01468b6":"markdown","21629d29":"markdown","46d6150f":"markdown","898caaef":"markdown","3b6e2ffc":"markdown","633ec50f":"markdown","5597b7f7":"markdown","806d8308":"markdown","722455a7":"markdown","b2560948":"markdown","7126bd92":"markdown","e002f5e4":"markdown","28969dba":"markdown","1eb2b9a2":"markdown","1dcf3ba7":"markdown","d33a8a71":"markdown","07786a76":"markdown","57a07f48":"markdown","e955d9cb":"markdown"},"source":{"9ff8447f":"# Kaggle\u306enotebook\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u3068\u5143\u3005\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u30bb\u30eb\u3002\u305d\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u3002\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b1ab9f4":"#\u305d\u306e\u4ed6\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a20a6b81":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","6a590771":"train.columns #\u30ab\u30e9\u30e0\u3092\u78ba\u8a8d","605e4d80":"len(train) #\u884c\u6570\u78ba\u8a8d","4ae42c7b":"len(test)","c8623172":"test['SalePrice'] = np.nan\ndf = pd.concat([train, test]) #train\u3068test\u306f\u57fa\u672c\u540c\u3058\u51e6\u7406\u3092\u3059\u308b\u306e\u3067\u7d50\u5408\u3057\u3066\u304a\u304f\ndf.set_index('Id', inplace=True) #Id\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3059\u308b\ndf.info()","6f5ec6d5":"sns.distplot(df['SalePrice']) #\u5206\u5e03\u3092\u78ba\u8a8d","bd28c779":"df = df[['LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd',\n         'BsmtCond', 'HeatingQC', 'CentralAir', 'TotRmsAbvGrd', 'FireplaceQu', \n         'GarageArea', 'PoolArea', 'SalePrice']]\ndf.head()","f2cd0339":"df.isnull().sum()","ea548185":"df.dtypes","ad48b105":"df['BsmtCond'].value_counts(dropna=False) #dropna=False\u3067\u6b20\u640d\u5024\u3082\u542b\u3081\u3066\u78ba\u8a8d","beeab865":"df['BsmtExist'] = df['BsmtCond'].notnull().astype(int) #\u5730\u4e0b\u5ba4\u306e\u6709\u7121\u3092\u8868\u3059\u5217\u3092\u4f5c\u308b\ndf['BsmtExist'].value_counts()","6cbd7c23":"df['HeatingQC'].value_counts()","d5d78f7f":"df['CentralAir'].value_counts()","2d0f0b3d":"df['CentralAir'] = df['CentralAir'].map({'Y': 1, 'N': 0}) #0or1\u306b\u5909\u63db\ndf['CentralAir'].value_counts()","4dfd1fd0":"df['FireplaceQu'].value_counts(dropna=False)","02b6d340":"df['FireplaceExist'] = df['FireplaceQu'].notnull().astype(int) #\u540c\u69d8\u306b\u3001\u6696\u7089\u306e\u6709\u7121\u3092\u8868\u3059\u5217\u3092\u4f5c\u308b\ndf['FireplaceExist'].value_counts()","778a7084":"df['GarageArea'].isnull().value_counts()","ec00f0a3":"df['GarageArea'].fillna(df['GarageArea'].mean(), inplace=True) #\u6b20\u640d\u5024\u3092\u5e73\u5747\u3067\u57cb\u3081\u308b","ee2be3aa":"df['GarageArea'].isnull().value_counts()","42519217":"df_dum = pd.get_dummies(df)\ndf_dum.head()","7cddbc53":"def preprocessing(raw):\n    df = raw.copy()\n    df = df[['LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd',\n         'BsmtCond', 'HeatingQC', 'CentralAir', 'TotRmsAbvGrd', 'FireplaceQu', \n         'GarageArea', 'PoolArea', 'SalePrice']]\n    df['BsmtExist'] = df['BsmtCond'].notnull().astype(int)\n    df['CentralAir'] = df['CentralAir'].map({'Y': 1, 'N': 0})\n    df['FireplaceExist'] = df['FireplaceQu'].notnull().astype(int)\n    df['GarageArea'].fillna(df['GarageArea'].mean(), inplace=True)\n    return df","24ec12ff":"#\u95a2\u6570\u304c\u52d5\u304f\u304b\u78ba\u8a8d\nraw = pd.concat([train, test])\nraw.set_index('Id', inplace=True)\ndf = preprocessing(raw)\ndf","1bf9cb95":"df_dum = pd.get_dummies(df)\ndf_dum.head()","375ffff6":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306b\u5206\u3051\u308b\ntrain_p = df_dum[df_dum['SalePrice'].notnull()]\ntest_p = df_dum[df_dum['SalePrice'].isnull()].drop(['SalePrice'], axis=1)\nlen(train_p)","79e97f16":"from sklearn.model_selection import train_test_split\n\n#\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u306b\u5206\u3051\u308b\n#\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u304ctest\u3068\u3044\u3046\u540d\u524d\u306a\u306e\u3067\u3001\u4ee3\u308f\u308a\u306b\u300c\u691c\u8a3c\u30c7\u30fc\u30bf\u300d\u3068\u8a00\u3046\u3053\u3068\u3082\u3042\u308a\u307e\u3059\nX_train, X_valid, y_train, y_valid = train_test_split(\n train_p.drop('SalePrice', axis=1), #\u8aac\u660e\u5909\u6570\n    train_p['SalePrice'], #\u76ee\u7684\u5909\u6570\n    random_state=66\n)","8bd89296":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor(random_state=0) #\u30e2\u30c7\u30eb\u4f5c\u6210\nrf.fit(X_train, y_train) #\u5b66\u7fd2\u5b9f\u884c","c31cb9c9":"y_pred_train = rf.predict(X_train) #\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u7d50\u679c\ny_pred_valid = rf.predict(X_valid) #\u691c\u8a3c\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u7d50\u679c\nsns.distplot(y_pred_valid)","d0312bfe":"from sklearn.metrics import mean_squared_error\n\n#RMSE\u3092\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u3067\u8a08\u7b97\nRMSE_train = np.sqrt(mean_squared_error(np.log(y_train), np.log(y_pred_train)))\nRMSE_valid = np.sqrt(mean_squared_error(np.log(y_valid), np.log(y_pred_valid)))\nprint('train: {}, valid: {}'.format(RMSE_train, RMSE_valid))","5df0ce2b":"#\u691c\u8a3c\u6642\u306b\u983b\u7e41\u306b\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u95a2\u6570\u5316\u3057\u3066\u304a\u304f\ndef RMSE(y_ture, y_pred):\n    return np.sqrt(mean_squared_error(np.log(y_ture), np.log(y_pred)))","b9516731":"# \u7279\u5fb4\u91cf\u306e\u91cd\u8981\u5ea6\u3092\u51fa\u529b\npd.Series(rf.feature_importances_, index=X_train.columns).sort_values(ascending=False)","209e7bc0":"sns.barplot(x=df['OverallQual'], y=df['SalePrice']) #\u8a55\u4fa1\u3054\u3068\u306e\u5e73\u5747\u4fa1\u683c\u3092\u53ef\u8996\u5316","20f610ea":"sns.scatterplot(x=df['LotArea'], y=df['SalePrice']) #LotArea\u3068SalePrice\u306e\u95a2\u4fc2\nplt.grid()","498a95a5":"pred = rf.predict(test_p)","2c2aedc6":"submission = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\nsubmission","29d898e1":"submission['SalePrice'] = pred","f0459743":"submission.to_csv(\"submission.csv\", index=False)","6b959bb8":"OvarallQual\u304c\u4e88\u6e2c\u306e\u307b\u3068\u3093\u3069\u3092\u5360\u3081\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059","681f1f27":"## BsmtCond\uff08\u5730\u4e0b\u5ba4\u306e\u8a55\u4fa1\uff09","5ea7277f":"\u78ba\u304b\u306b\u3001OvarallQual\u304c\u5927\u304d\u3044\u307b\u3069\u4fa1\u683c\u304c\u4e0a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059","980f2933":"# \u4f7f\u3046\u5217\u306e\u9078\u629e\n\u5217\u304c\u591a\u3044\u306e\u3067\u3001\u307e\u305a\u306f\u4f4f\u5b85\u4fa1\u683c\u3068\u95a2\u4fc2\u306e\u3042\u308a\u305d\u3046\u306a\u5217\u306b\u7d5e\u3063\u3066\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n- LotArea\uff1a\u6577\u5730\u9762\u7a4d\n- OverallQual\uff1a\u5bb6\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u7d20\u6750\u306e\u8a55\u4fa1\n- OverallCond\uff1a\u5bb6\u306e\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30f3\u306e\u8a55\u4fa1\n- YearBuilt\uff1a\u7bc9\u5e74\u6570\n- YearRemodAdd\uff1a\u30ea\u30d5\u30a9\u30fc\u30e0\u3057\u305f\u5e74\n- BsmtCond\uff1a\u5730\u4e0b\u5ba4\u306e\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30f3\u306e\u8a55\u4fa1\uff08\u305d\u3082\u305d\u3082\u300c\u5730\u4e0b\u5ba4\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u300d\u3067\u4fa1\u683c\u304c\u5909\u308f\u308a\u305d\u3046\uff09\n- HeatingQC\uff1a\u6696\u623f\u306e\u54c1\u8cea\u8a55\u4fa1\n- CentralAir\uff1a\u30bb\u30f3\u30c8\u30e9\u30eb\u30a8\u30a2\u30b3\u30f3\u306e\u6709\u7121\n- TotRmsAbvGrd\uff1a\u5730\u4e0a\u306e\u90e8\u5c4b\u6570\n- FireplaceQu\uff1a\u6696\u7089\u306e\u54c1\u8cea\n- GarageArea\uff1a\u30ac\u30ec\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\n- PoolArea\uff1a\u30d7\u30fc\u30eb\u306e\u5e83\u3055\uff08\u3053\u308c\u3082\u300c\u30d7\u30fc\u30eb\u304c\u3042\u308b\u304b\u300d\u3068\u3044\u3046\u5217\u3092\u4f5c\u308b\u3068\u826f\u3055\u305d\u3046\uff09","5cceaac8":"# \u76ee\u7684\u5909\u6570\u306e\u78ba\u8a8d\n\u4eca\u56de\u306e\u76ee\u7684\u5909\u6570\u306f\u4f4f\u5b85\u4fa1\u683c\u300cSalePrice\u300d\u3067\u3059","82887b8f":"# \u30e2\u30c7\u30eb\u3084\u30c7\u30fc\u30bf\u306e\u89e3\u91c8","682221ba":"## GarageArea\uff08\u30ac\u30ec\u30fc\u30b8\u306e\u5e83\u3055\uff09","23079cd1":"score: 0.17256","b01468b6":"# \u5b66\u7fd2\u5b9f\u884c","21629d29":"## HeatingQC\uff08\u6696\u623f\u306e\u8a55\u4fa1\uff09","46d6150f":"\u6696\u7089\u306e\u54c1\u8cea\u3092\u8868\u3059FireplaceQu\u306b\u6b20\u640d\u5024\u304c\u591a\u3044\u2192\u6696\u7089\u304c\u305d\u3082\u305d\u3082\u7121\u3044\u5bb6\u304c\u591a\u305d\u3046","898caaef":"\u6b20\u640d\u3057\u3066\u3044\u308b\u3053\u3068\u81ea\u4f53\u304c\u300c\u5730\u4e0b\u5ba4\u306e\u6709\u7121\u300d\u3092\u8868\u3057\u3066\u3044\u3066\u3001\u60c5\u5831\u306b\u306a\u308a\u305d\u3046","3b6e2ffc":"object\u306e\u5217\u306f\u524d\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","633ec50f":"# \u524d\u51e6\u7406","5597b7f7":"\u305d\u306e\u307e\u307e\u30c0\u30df\u30fc\u5909\u6570\u5316\u3067\u826f\u3055\u305d\u3046","806d8308":"BsmtCond\u5217\u306e\u6b20\u640d\u5024\u306f\u30c0\u30df\u30fc\u5909\u6570\u5316\u306e\u6642\u306b\u7121\u8996\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u304a\u304f","722455a7":"# \u63d0\u51fa\u30c7\u30fc\u30bf\u4f5c\u6210","b2560948":"\u4f8b\u3068\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059","7126bd92":"\u6570\u5024\u578b\u306e\u5217\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u3088\u3046\u306bscatterplot\u3092\u4f7f\u3063\u3066\u6563\u5e03\u56f3\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\u76f8\u95a2\u304c\u898b\u3048\u3066\u304d\u307e\u3059","e002f5e4":"## \u95a2\u6570\u306b\u3057\u3066\u304a\u304f","28969dba":"## CentralAir\uff08\u30bb\u30f3\u30c8\u30e9\u30eb\u30a8\u30a2\u30b3\u30f3\u306e\u6709\u7121\uff09","1eb2b9a2":"# \u30c7\u30fc\u30bf\u6e96\u5099","1dcf3ba7":"# \u7cbe\u5ea6\u78ba\u8a8d\n\u4eca\u56de\u306e\u30b3\u30f3\u30da\u306e\u8a55\u4fa1\u6307\u6a19\u306f**RMSE\uff08\u4e8c\u4e57\u5e73\u5747\u5e73\u65b9\u6839\uff09** \u3067\u3001\u30c7\u30fc\u30bf\u3054\u3068\u306b\u4e88\u6e2c\u3057\u305f\u4fa1\u683c\u3068\u672c\u5f53\u306e\u4fa1\u683c\u306e\u5dee\u3092\u53d6\u3063\u30662\u4e57\u3057\u305f\u3082\u306e\u3092\u8db3\u3057\u4e0a\u3052\u3001\u5e73\u65b9\u6839\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\u3059\u3002\u8981\u306f **\u300c\u6570\u5b57\u304c\u5c0f\u3055\u3044\u307b\u3069\u7cbe\u5ea6\u304c\u826f\u3044\u300d** \u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\uff08\u53b3\u5bc6\u306b\u306f\u4eca\u56de\u306e\u30b3\u30f3\u30da\u3067\u306f\u5bfe\u6570\u3092\u53d6\u3063\u3066\u304b\u3089\u5f15\u304d\u7b97\u3092\u3057\u3066\u3044\u307e\u3059\uff09  \nhttps:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/overview\/evaluation  \n\u5f0f\u3067\u8868\u3059\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$$\n{\\rm RMSE} = \\sqrt{\\frac{1}{N}\\sum_{i=1}^N\\left( \\log\\hat{y_i} - \\log{y_i} \\right)^2}\n$$\nN:\u30c7\u30fc\u30bf\u306e\u6570\u3001$\\hat{y_i}$: \u4f4f\u5b85i\u306e\u4e88\u6e2c\u4fa1\u683c\u3001$y_i$: \u4f4f\u5b85i\u306e\u672c\u5f53\u306e\u4fa1\u683c","d33a8a71":"# \u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u305f\u3081\u306e\u30d2\u30f3\u30c8\uff08\u968f\u6642\u66f4\u65b0\uff09\n- \u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u4ed6\u306b\u3082\u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u6728\u306a\u3069\u3001\u69d8\u3005\u306a\u30e2\u30c7\u30eb\u3092\u8a66\u3057\u3066\u307f\u308b\n- train\u306e\u30b9\u30b3\u30a2\u3068valid\u306e\u30b9\u30b3\u30a2\u3092\u898b\u308b\u3068\u904e\u5b66\u7fd2\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u306e\u3067\u3001\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u306a\u3069\u3057\u3066\u904e\u5b66\u7fd2\u3092\u9632\u3050\n- \u307e\u3060\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u5217\u304c\u6ca2\u5c71\u3042\u308b\u306e\u3067\u3001\u53d6\u308a\u5165\u308c\u3066\u307f\u308b\uff08\u5217\u306e\u8aac\u660e\u306e\u65e5\u672c\u8a9e\u8a33\uff1ahttps:\/\/github.com\/CodeSeterpie\/CodeSeterpie\/blob\/develop\/Kaggle\/HousePrices\/input\/data_description_ja.md \uff09\n- \u300c\u30d7\u30fc\u30eb\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u300d\u306a\u3069\u3001\u610f\u5473\u306e\u3042\u308a\u305d\u3046\u306a\u5217\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\n- \uff08\u3084\u3084\u5fdc\u7528\uff09\u76ee\u7684\u5909\u6570\u306f\u6b63\u898f\u5206\u5e03\u3092\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u306e\u3067\u3001np.log(SalePrice)\u306a\u3069\u3092\u76ee\u7684\u5909\u6570\u306b\u3057\u3066\u5b66\u7fd2\u3055\u305b\u3066\u307f\u308b","07786a76":"# \u6b20\u640d\u5024\u3084\u30c7\u30fc\u30bf\u578b\u306e\u78ba\u8a8d\n\u51e6\u7406\u304c\u5fc5\u8981\u305d\u3046\u306a\u5217\u3092\u628a\u63e1\u3057\u3066\u304a\u304f","57a07f48":"## \u30c0\u30df\u30fc\u5909\u6570\u5316","e955d9cb":"## FireplaceQu\uff08\u6696\u7089\u306e\u8a55\u4fa1\uff09"}}