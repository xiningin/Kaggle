{"cell_type":{"72096689":"code","da8edb01":"code","978dda33":"code","7309eca7":"code","5e4db880":"code","e32d5ee3":"code","156e81a9":"code","a7963110":"code","d6419f62":"code","c9f242df":"code","1ee890bf":"code","3dd3874e":"code","a07cb425":"code","21239b55":"code","0355e6d3":"code","cd88f69e":"code","0e788cc8":"code","307b690b":"code","35a033e4":"code","4640b6b6":"code","075470a3":"code","126f17a3":"code","36190aa6":"code","0cec92f8":"code","319de8f0":"code","01c615ea":"code","726c34f0":"code","6616f8a6":"code","9db3be33":"code","f1fa1256":"code","8041e4af":"code","8cc7d785":"code","9ba5c829":"code","c0111583":"code","14c197e1":"code","140300eb":"code","49d31ea1":"code","d9e7b474":"code","30d854cc":"code","5cbd97b4":"code","23746e9b":"code","aa2475f7":"code","3a3d1003":"code","108208b0":"code","9cb52df8":"code","6e3ae591":"code","4426c7d7":"code","6de574bd":"code","4c6acb4d":"code","8771693c":"code","9ac6c66b":"code","fcea9d13":"code","5d07c03d":"code","d1dec118":"code","a7096fb0":"code","85b1c204":"code","d8446e3b":"code","efe412ed":"code","8f038ffe":"code","07e898d4":"code","c6856ef6":"markdown","3d15c0f1":"markdown"},"source":{"72096689":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da8edb01":"import pandas as pd\nTRAIN_PATH ='\/kaggle\/input\/titanic\/train.csv'\nTEST_PATH ='\/kaggle\/input\/titanic\/test.csv'\nGENDER_PATH = '\/kaggle\/input\/titanic\/gender_submission.csv'","978dda33":"train = pd.read_csv(TRAIN_PATH)\ntest = pd.read_csv(TEST_PATH)\nsubmission = pd.read_csv(GENDER_PATH)","7309eca7":"train.info()\n","5e4db880":"test.info()","e32d5ee3":"train.head()","156e81a9":"test.head()","a7963110":"submission.info()","d6419f62":"submission.head()","c9f242df":"NUM_COLS=['Pclass','Age','Parch','SibSp','Fare']\nCAT_COLS=['Sex','Cabin','Embarked','Ticket']\nTARGET_COL= 'Survived'\ntrain.head()","1ee890bf":"    train[NUM_COLS]\n","3dd3874e":"train[NUM_COLS].hist()","a07cb425":"for col in NUM_COLS:\n    train[col].hist()\n    plt.title(col)\n    plt.show()\n    ","21239b55":"sns.pairplot(train[NUM_COLS])","0355e6d3":"sns.pairplot(train[NUM_COLS],  kind=\"kde\")","cd88f69e":"sns.pairplot(train[NUM_COLS],  kind=\"hist\")","0e788cc8":"sns.pairplot(train[NUM_COLS + [TARGET_COL]], hue= TARGET_COL )","307b690b":"sns.pairplot(train[NUM_COLS + [TARGET_COL]], hue= TARGET_COL,  kind=\"kde\")","35a033e4":"col = CAT_COLS[0]\ntrain[col].value_counts().plot.bar()","4640b6b6":"for col in CAT_COLS:\n    train[col].value_counts().plot.bar()\n    plt.title(col)\n    plt.show()","075470a3":"CAT_COLS.remove('Ticket')\nCAT_COLS.remove('Cabin')","126f17a3":"for col in CAT_COLS:\n    train[col].value_counts().plot.bar()\n    plt.title(col)\n    plt.show()","36190aa6":"train.info()","0cec92f8":"train[NUM_COLS].info()","319de8f0":"train_med = train[NUM_COLS].median()\ntrain_med","01c615ea":"train[NUM_COLS]=train[NUM_COLS].fillna(train_med)\ntest[NUM_COLS]=test[NUM_COLS].fillna(train_med)","726c34f0":"train[NUM_COLS].info()","6616f8a6":"test[NUM_COLS].info()","9db3be33":"train[CAT_COLS].info()","f1fa1256":"train_cat_dummy = pd.get_dummies(train[CAT_COLS])\ntrain_cat_dummy","8041e4af":"test_cat_dummy = pd.get_dummies(test[CAT_COLS])\ntest_cat_dummy","8cc7d785":"pd.concat([train[NUM_COLS],train_cat_dummy], axis=1)","9ba5c829":"from sklearn.model_selection import train_test_split\n\nX = pd.concat([train[NUM_COLS],train_cat_dummy], axis=1)\ny = train[TARGET_COL]\n","c0111583":"train_test_split?\n","14c197e1":"X_train, X_val, y_train, y_val = train_test_split( X, y, test_size=0.25, random_state=42)","140300eb":"X_test = pd.concat([test[NUM_COLS],test_cat_dummy], axis=1)\nX_test.head()","49d31ea1":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\n\nlr.fit(X, y)","d9e7b474":"lr.score(X_train, y_train)","30d854cc":"lr.score(X_val, y_val)","5cbd97b4":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()","23746e9b":"rf.fit(X_train, y_train)\nrf.score(X_train, y_train)","aa2475f7":"rf.score(X_val, y_val)","3a3d1003":"from xgboost import XGBClassifier","108208b0":"xgb = XGBClassifier()\nxgb.fit(X_train, y_train)\nxgb.score(X_train, y_train)","9cb52df8":"xgb.score(X_val, y_val)","6e3ae591":"from sklearn.ensemble import GradientBoostingClassifier\n\ngb = GradientBoostingClassifier()\ngb.fit(X_train, y_train)","4426c7d7":"gb.score(X_train, y_train)","6de574bd":"gb.score(X_val, y_val)","4c6acb4d":"sgb = GradientBoostingClassifier(subsample = 0.90, max_features = 0.70)","8771693c":"sgb.fit(X_train, y_train)","9ac6c66b":"sgb.score(X_train, y_train)","fcea9d13":"sgb.score(X_val, y_val)","5d07c03d":"lr.predict(X_test)","d1dec118":"submission.head()","a7096fb0":"submission['Survived'] = lr.predict(X_test)\nsubmission","85b1c204":"submission['Survived'] = gb.predict(X_test)\nsubmission","d8446e3b":"submission['Survived'] = sgb.predict(X_test)\nsubmission","efe412ed":"submission.to_csv('submission.csv',index=False)","8f038ffe":"ls","07e898d4":"pd.read_csv('submission.csv')","c6856ef6":"*Data Preper*","3d15c0f1":"**Modelo de Baseline**"}}