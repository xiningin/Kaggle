{"cell_type":{"a80e79a2":"code","5c934678":"code","a32e1504":"code","cb041a1e":"code","60058b8a":"code","a4daa19c":"code","aca64719":"code","63f95392":"code","811703f9":"code","f2a31ab5":"code","7a91fcaf":"code","528bf153":"code","1c17609c":"code","95a1c6ad":"code","7b37020a":"code","9317a607":"code","067d5b03":"code","c7fc3e08":"code","282473c6":"code","e29ade6c":"code","e711d3f5":"code","8f4cb466":"code","317d63e5":"code","b57b8a6c":"code","164ee448":"code","9ac52d9c":"code","8b020aeb":"code","ef012a74":"code","8e5aeb3f":"code","c73df01f":"code","74e0f237":"code","4953f464":"code","452995d5":"code","6360c272":"code","b3ff45fd":"markdown","99b3bd54":"markdown","aa86781f":"markdown","7d4f6f49":"markdown","0a8bb47c":"markdown","eaec7cc7":"markdown"},"source":{"a80e79a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport statsmodels.api as sm\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5c934678":"df_orig=pd.read_csv('\/kaggle\/input\/clicks-conversion-tracking\/KAG_conversion_data.csv')\ndf=df_orig.copy()","a32e1504":"\ndef todo_list(df=df):\n    print('To Do List:')\n   \n    null=df.isna().values.sum()\n    cv=[]\n    totaldata=[]\n    #detect missing datas\n    if null > 1:\n        print(\"There \" + \"are\" + str(null)+ \" missing datas\")\n        if null>len(df)*0.05:\n            print(\" Suggest to replace datas\")\n            \n        else:\n            print(\" Suggest to delete datas\")\n    elif null==1:\n        print('There is 1 missing data')\n        print('Suggest to fucking delete it you fucking dumb')\n       \n    else:\n        print('There is no missing data asshole')\n        \n    \n    #categorial variable\n    for i in df:\n        if df[i].dtypes==np.object:\n            cv.append(i)\n            totaldata.append(len(df[i].value_counts()))\n    \n    if len(cv) >1:\n        print('There are '+ str(len(cv)) + \" categorial variables\")\n        print(cv)\n        print(totaldata)\n    else:\n        print('There is 1 categorial variable')\n        print(cv)\n        print(totaldata)\n    ","cb041a1e":"todo_list()","60058b8a":"df","a4daa19c":"df['age']=df['age'].replace(['30-34','35-39','40-44','45-49'],[1,2,3,4])\ndf['gender']=df['gender'].replace(['M','F'],[1,2])\ndf['xyz_campaign_id']=df['xyz_campaign_id'].replace([916,936,1178],['A','B','C'])","aca64719":"df","63f95392":"plt.figure(figsize=(20,20))\npd.DataFrame.boxplot(df.iloc[:,3:9])\nplt.show()","811703f9":"for i in df.iloc[:,3:9]:\n    print(i)\n    print(np.where(np.abs(stats.zscore(df[i])>3)))","f2a31ab5":"def outlier(column):\n    q1=df[column].quantile(0.25)\n    q3=df[column].quantile(0.75)\n    IQR=q3-q1\n    lower_range = q1- (1.5 * IQR)\n    upper_range = q3 + (1.5 * IQR)\n    return lower_range,upper_range\n","7a91fcaf":"target=['interest','Impressions','Clicks','Total_Conversion','Approved_Conversion']","528bf153":"def bound(column):#bound-max and min\n    q1=df[column].quantile(0.25)\n    q3=df[column].quantile(0.75)\n    IQR=q3-q1\n    lower_range = q1- (1.5 * IQR)\n    upper_range = q3 + (1.5 * IQR)\n    return lower_range,upper_range\n\n\ndef outlier_detection(target):#inject list dari boundnya\n    sumlower=[]\n    sumupper=[]\n    lower=[0]*len(target)\n    upper=[0]*len(target)\n    for index , i in enumerate(target):\n        lower[index],upper[index]=bound(i)\n        sumlower.append(lower[index])\n        sumupper.append(upper[index])\n    return sumlower,sumupper\n\n\ndef outlier_remover(target):\n    sumlower,sumupper=outlier_detection(target)\n    ndf=df.copy()\n    for index, i in enumerate(target):\n        ndf[i]=ndf[i][(ndf[i]>sumlower[index])&(ndf[i]<sumupper[index])]   \n    return ndf","1c17609c":"df=outlier_remover(target)","95a1c6ad":"df","7b37020a":"for i in df.iloc[:,3:7]:\n    print(i)\n    print(np.where(np.abs(stats.zscore(df[i])>3)))","9317a607":"df","067d5b03":"df","c7fc3e08":"df=df.dropna()\ndf.isnull().sum()","282473c6":"df","e29ade6c":"plt.figure(figsize=(20,20))\npd.DataFrame.boxplot(df.iloc[:,5:11])\nplt.show()","e711d3f5":"df.corr()","8f4cb466":"sns.heatmap(df.corr())","317d63e5":"sns.lineplot(x='Spent',y='Clicks',data=df)","b57b8a6c":"A=df[df['xyz_campaign_id']=='A']\nB=df[df['xyz_campaign_id']=='B']\nC=df[df['xyz_campaign_id']=='C']\nCTR_A = round(((A['Clicks'].sum()\/A['Impressions'].sum())*100),3)\nCTR_B = round(((B['Clicks'].sum()\/B['Impressions'].sum())*100),3)\nCTR_C = round(((C['Clicks'].sum()\/C['Impressions'].sum())*100),3)\nCTR_Total=[CTR_A,CTR_B,CTR_C]\nx=['A','B','C']\nprint(CTR_Total)\nplt.xlabel('Campaign')\nplt.ylabel('Click Through Rate')\nplt.title('CTR of 3 Campaigns')\nplt.bar(x,CTR_Total)","164ee448":"CR_A = round(((A['Approved_Conversion'].sum()\/A['Clicks'].sum())*100),3)\nCR_B = round(((B['Approved_Conversion'].sum()\/B['Clicks'].sum())*100),3)\nCR_C = round(((C['Approved_Conversion'].sum()\/C['Clicks'].sum())*100),3)\nCR_Total=[CR_A,CR_B,CR_C]\nx=['A','B','C']\nprint(CR_Total)\nplt.xlabel('Campaign')\nplt.ylabel('Conversion Rate')\nplt.title('CR of 3 Campaigns')\nplt.bar(x,CR_Total)","9ac52d9c":"CC_A = round(((A['Spent'].sum()\/A['Approved_Conversion'].sum())*100),3)\nCC_B = round(((B['Spent'].sum()\/B['Approved_Conversion'].sum())*100),3)\nCC_C = round(((C['Spent'].sum()\/C['Approved_Conversion'].sum())*100),3)\nCC_Total=[CC_A,CC_B,CC_C]\nx=['A','B','C']\nprint(CC_Total)\nplt.xlabel('Campaign')\nplt.ylabel('Conversion Cost')\nplt.title('CC of 3 Campaigns')\nplt.bar(x,CC_Total)","8b020aeb":"data= {'CTR':CTR_Total,'CR':CR_Total,'CC':CC_Total,'Campaign':x}\ndataframe=pd.DataFrame(data,columns=['CTR','CR','CC','Campaign'])\ndataframe=dataframe.set_index('Campaign')\ndataframe","ef012a74":"sns.barplot(y='Approved_Conversion',x='xyz_campaign_id',data=df)","8e5aeb3f":"sns.barplot(y='Approved_Conversion',x='xyz_campaign_id',hue='gender',data=df)","c73df01f":"sns.barplot(y='Approved_Conversion',x='xyz_campaign_id',hue='age',data=df)","74e0f237":"sns.barplot(y='Impressions',x='age',hue='xyz_campaign_id',data=df)","4953f464":"sns.barplot(y='Clicks',x='age',hue='xyz_campaign_id',data=df)","452995d5":"sns.barplot(y='Total_Conversion',x='age',hue='xyz_campaign_id',data=ndf)","6360c272":"sns.barplot(y='Approved_Conversion',x='age',hue='xyz_campaign_id',data=df)","b3ff45fd":"Instead of Dummies We Declare New Value\n\nGender\nM=1\nF=2\n\nAge\n30-34=1\n35-39=2\n40-44=3\n45-49=4","99b3bd54":"# ** Handling Catergorial Varible**","aa86781f":"Preprocessing Data\n* Detect Missing Dats\n* Detect Categorial Variable\n* Detect Outlier","7d4f6f49":"plt.figure(figsize=(15,15))\nplt.boxplot(df[''])","0a8bb47c":"# Independent\n* gender\n* age\n* spent\n\n# Dependent \n* impression\n* click\n* total_conversion\n* approved_conversion","eaec7cc7":"# Handling Outlier"}}