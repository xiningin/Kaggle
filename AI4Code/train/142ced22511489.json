{"cell_type":{"c5d4582f":"code","ac7d0ff4":"code","26c3581e":"code","d1c71735":"code","89e5824b":"code","e4771d07":"code","4368647f":"code","40dcc9ec":"code","b2594e12":"code","8ce162c0":"code","98926177":"code","b20db4de":"code","7889badf":"code","c243036d":"code","f0c8a8ae":"code","06bb236a":"code","1d2c0ea3":"code","be25edb6":"code","3586febf":"code","e0bcb0d1":"code","2d982b8b":"code","2f0ee3d4":"code","c9057d1d":"code","f3c85cb0":"code","689f8c87":"code","77a19998":"code","29b8a74e":"code","be8ef4b2":"code","be423f41":"code","fdb376de":"code","1e1f8368":"code","863e1348":"code","f7a58537":"code","33abc044":"code","80a7a40f":"code","a2a0f1e5":"code","1e247c95":"code","cd6d7de1":"code","542948a1":"code","6d7d65c4":"code","4a409e48":"code","c97dbb6b":"code","461e9cc5":"code","c379f8ba":"code","e21f5e3e":"code","45e90c8c":"code","c1b2134d":"code","116c34fd":"code","4fede12b":"code","d524a3a7":"code","7d49ba80":"markdown","27f91661":"markdown","b80dd7a6":"markdown","95767b10":"markdown","a27c6fc9":"markdown","b9be8cd7":"markdown","29413bab":"markdown","770d1ce1":"markdown","37694a9e":"markdown","cce876c4":"markdown","04faa1e8":"markdown","ba62779f":"markdown","7df2c181":"markdown","71997155":"markdown"},"source":{"c5d4582f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nsns.set(rc={'figure.figsize':[8,8]},font_scale=1.3)","ac7d0ff4":"black_friday = pd.read_csv('..\/input\/blackfriday\/BlackFriday.csv')","26c3581e":"black_friday.head(10)","d1c71735":"black_friday['Product_ID'] = black_friday['Product_ID'].apply(lambda x : x.split('P')[-1])","89e5824b":"black_friday.head(10)","e4771d07":"black_friday.tail()","4368647f":"black_friday.info()","40dcc9ec":"black_friday.describe()","b2594e12":"black_friday.corr()","8ce162c0":"black_friday['User_ID'].value_counts()","98926177":"for col in black_friday.columns:\n    print(black_friday[col].value_counts())\n    print('*' * 50)","b20db4de":"black_friday.isnull().sum()","7889badf":"from sklearn.impute import SimpleImputer","c243036d":"imputer = SimpleImputer(strategy='most_frequent')","f0c8a8ae":"black_friday[['Product_Category_2','Product_Category_3']] = imputer.fit_transform(black_friday[['Product_Category_2','Product_Category_3']])","06bb236a":"imputer.statistics_","1d2c0ea3":"black_friday.isnull().sum()","be25edb6":"black_friday.head()","3586febf":"sns.countplot(black_friday['Gender'])","e0bcb0d1":"sns.countplot(black_friday['Marital_Status'])","2d982b8b":"sns.countplot(black_friday['Age'])","2f0ee3d4":"sns.countplot(black_friday['Age'],hue=black_friday['Gender'])","c9057d1d":"sns.countplot(black_friday['City_Category'])","f3c85cb0":"sns.countplot(black_friday['Occupation'])","689f8c87":"sns.countplot(black_friday['Stay_In_Current_City_Years'])","77a19998":"sns.countplot(data=black_friday,x='Stay_In_Current_City_Years',hue='Gender',palette='viridis')","29b8a74e":"sns.countplot(black_friday['Product_Category_1'])","be8ef4b2":"sns.countplot(black_friday['Product_Category_2'])","be423f41":"sns.countplot(black_friday['Product_Category_3'])","fdb376de":"sns.boxplot(x=black_friday['Gender'],y=black_friday['Purchase'])","1e1f8368":"sns.violinplot(x=black_friday['Age'],y=black_friday['Purchase'],hue=black_friday['Gender'],split=True)","863e1348":"sns.barplot(x=black_friday['Gender'],y=black_friday['Purchase'])","f7a58537":"sns.barplot(x=black_friday['Age'],y=black_friday['Purchase'],hue=black_friday['Gender'])","33abc044":"sns.barplot(data=black_friday,x='Product_Category_1',y='Purchase')","80a7a40f":"sns.barplot(data=black_friday,x='Product_Category_2',y='Purchase')","a2a0f1e5":"sns.barplot(data=black_friday,x='Product_Category_3',y='Purchase')","1e247c95":"plt.figure(figsize=(20,10))\nsns.heatmap(black_friday.corr(),annot=True)","cd6d7de1":"black_friday.head()","542948a1":"black_friday['Stay_In_Current_City_Years'].value_counts()","6d7d65c4":"Stay_In_Current_City_Years_dict = {'0':0, '1':1, '2':2, '3':3, '4+':4}\n#will change only 4+ to 4 to use it later in machine learning\n\n# apply using map\nblack_friday['Stay_In_Current_City_Years'] = black_friday['Stay_In_Current_City_Years'].map(Stay_In_Current_City_Years_dict)","4a409e48":"black_friday = pd.get_dummies(black_friday, columns=['Age', 'Gender', 'City_Category'], drop_first=True)","c97dbb6b":"black_friday","461e9cc5":"black_friday.drop(['User_ID','Product_ID'],inplace=True,axis=1)","c379f8ba":"from sklearn.model_selection import train_test_split","e21f5e3e":"x = black_friday.drop('Purchase',axis=1)\ny = black_friday['Purchase']","45e90c8c":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=101)","c1b2134d":"print(X_train.shape , X_test.shape , y_train.shape, y_test.shape)","116c34fd":"from sklearn.preprocessing import StandardScaler","4fede12b":"ss = StandardScaler()","d524a3a7":"X_train_ss = ss.fit_transform(X_train)\nX_test_ss = ss.transform(X_test)","7d49ba80":"# 1.Data Cleansing\n**check for any missing indicators, NAN Values and any weird data**","27f91661":"Positive Correlation between : (Product_Category_1 , Product_Category_2)  \nslightly Positive Correlation between : (Product_Category_1 , Product_Category_3)  \nslightly negative Correlation between : (Product_Category_1 , Purchase)  \nPositive Correlation between : (Product_Category_2 , Product_Category_3)  \nslightly negative Correlation between : (Product_Category_2 , Purchase)","b80dd7a6":"# 2.Fill Missing Data","95767b10":"**Categorical Data**   \n1. Ordinal (Need Mapping)\n    1. Stay_In_Current_City_Years  \n    \n2. Ordinal (Already Mapped)\n    1. Occupation\n    2. Marital_Status\n    3. Product_Category_1\n    4. Product_Category_2\n    5. Product_Category_3\n    \n3. Nominal\n    1. Age\n    2. Gender\n    3. City_Category","a27c6fc9":"# Read File and view data details","b9be8cd7":"No Weird Data or missing indicators","29413bab":"# 4.Categorical Data","770d1ce1":"# 3.Data Analysis","37694a9e":"# 6.Feature Scaling","cce876c4":"# Import Libraries","04faa1e8":"Fill Product_Category_2 & Product_Category_3 using Simple Imputer ","ba62779f":"**drop unwanted columns**","7df2c181":"**Dtypes are good , NAN values are only in Product_Category_2 & Product_Category_3**","71997155":"# 5.Split Data"}}