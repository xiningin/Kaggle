{"cell_type":{"3f690819":"code","3395843f":"code","8f962f22":"code","91725e8e":"code","edcd168a":"code","944321bb":"code","8a738913":"code","fea52140":"code","7eb08ab2":"code","b17bce88":"code","6e4e683f":"code","a937c6d8":"code","efcffda1":"code","8b49d9fc":"code","3147bbd0":"code","b2dc476b":"code","b9c7bb94":"code","96568327":"code","1bb93c88":"code","02b8f96d":"code","1f6cb344":"code","902ae860":"code","642cfc4f":"code","05a3c19b":"code","6cc74def":"code","016d2795":"code","31ee4525":"code","19f55f4b":"code","052e9dba":"code","65a55ad2":"code","c9ff8a97":"code","5227b91c":"code","f7a2af45":"code","defd7409":"code","037486f7":"code","a033f5f3":"code","c40835a3":"code","88b7c39c":"code","d769047d":"code","c70cf39f":"code","5854fcdf":"code","940d9a2c":"code","c0b07c1f":"code","e7783515":"code","bfbcfcea":"code","71d5fd81":"code","c9225e85":"code","5031c79a":"code","a6d8697f":"code","fa1923fa":"code","d0c72555":"code","b869d9b1":"code","0e5b15eb":"code","ce36aeaf":"code","40c8b59f":"code","cc1a97d9":"code","96c2d5a4":"code","2b4aa2cc":"markdown","684e9e56":"markdown","d6bd92ba":"markdown","419f13de":"markdown","ede77b6c":"markdown","29790939":"markdown","4eda1f60":"markdown","92589348":"markdown","6c26c81e":"markdown","3248b50f":"markdown","00216a15":"markdown","23d4b8fb":"markdown"},"source":{"3f690819":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3395843f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","8f962f22":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntrain.head()","91725e8e":"train.shape\n","edcd168a":"test.shape","944321bb":"train.dtypes","8a738913":"train.describe()","fea52140":"#categorical Variables\n\nsns.countplot(train['Survived'])","7eb08ab2":"sns.countplot(train['Pclass'])","b17bce88":"sns.countplot(train['Sex'])","6e4e683f":"sns.countplot(train['SibSp'])","a937c6d8":"sns.countplot(train['Parch'])","efcffda1":"sns.countplot(train['Embarked'])","8b49d9fc":"# Numerical Variables \nsns.distplot(train['Age'])","3147bbd0":"sns.distplot(train['Fare'])","b2dc476b":"class_Fare=train.pivot_table(index='Pclass',values='Fare')\nclass_Fare","b9c7bb94":"class_Fare.plot(kind='bar')\nplt.xlabel('Pclass')\nplt.ylabel('Avg_Fare')\nplt.xticks(rotation=0)\nplt.show()","96568327":"class_Fare=train.pivot_table(index='Pclass',values='Fare',aggfunc=np.sum)\nclass_Fare.plot(kind='bar')\nplt.xlabel('Pclass')\nplt.ylabel('Total_Fare')\nplt.xticks(rotation=0)\nplt.show()","1bb93c88":"sns.distplot(train['Age'][train['Survived']==0])","02b8f96d":"sns.distplot(train['Age'][train['Survived']==1])","1f6cb344":"sns.barplot(train['Sex'],train['Age'],hue=train['Survived'])","902ae860":"train_len=len(train)\n#combine datasets\ndf=pd.concat([train,test],axis=0)\ndf","642cfc4f":"df.shape","05a3c19b":"#drop column cabin\ndf=df.drop(columns=['Cabin'],axis=1)","6cc74def":"# Find null values\ndf.isnull().sum()","016d2795":"## fill null values using mean of that numerical column\ndf['Age']=df['Age'].fillna(df['Age'].mean())\ndf['Fare']=df['Fare'].fillna(df['Fare'].mean())","31ee4525":"df['Embarked'].mode()[0]","19f55f4b":"#using mode of categorical column to fill the null values\ndf['Embarked']=df['Embarked'].fillna(df['Embarked'].mode()[0])","052e9dba":"df.isnull().sum()","65a55ad2":"#for Uniform\/Normal distribution of data\nsns.distplot(df['Fare'])","c9ff8a97":"df['Fare']=np.log1p(df['Fare'])","5227b91c":"sns.distplot(df['Fare'])","f7a2af45":"corr=df.corr()\nplt.figure(figsize=(15,9))\nsns.heatmap(corr,annot=True,cmap='coolwarm')","defd7409":"#Dropping Unnecessary Columns\ndf=df.drop(columns=['Name','PassengerId','Ticket'],axis=1)","037486f7":"df.head()","a033f5f3":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ncols=['Sex','Embarked']\nfor col in cols:\n    df[col]=le.fit_transform(df[col])\n    \n    \n    \ndf.head()","c40835a3":"train=df.iloc[:train_len,:]\ntest=df.iloc[train_len:,:]","88b7c39c":"train.head()","d769047d":"X=train.drop(columns=['Survived'],axis=1)\nY=train['Survived']","c70cf39f":"from sklearn.model_selection import train_test_split,cross_val_score\ndef classify(model,x,y):\n    x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)\n    model.fit(x_train,y_train)\n    y_pred=model.predict(x_test)\n    \n    print('Accuracy',model.score(x_test,y_test))\n    \n    score=cross_val_score(model,X,Y,cv=5)\n    print('CV Score',np.mean(score))","5854fcdf":"from sklearn.tree import DecisionTreeClassifier\n\nmodel=DecisionTreeClassifier()\nclassify(model,X,Y)","940d9a2c":"from sklearn.neighbors import KNeighborsClassifier\n\nmodel=KNeighborsClassifier()\nclassify(model,X,Y)","c0b07c1f":"from sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier()\nclassify(model,X,Y)","e7783515":"from sklearn.ensemble import ExtraTreesClassifier\nmodel=ExtraTreesClassifier()\nclassify(model,X,Y)","bfbcfcea":"from xgboost import XGBClassifier\nmodel=XGBClassifier()\nclassify(model,X,Y)","71d5fd81":"from lightgbm import  LGBMClassifier #gives the highest CV score\nmodel=LGBMClassifier()\nclassify(model,X,Y)","c9225e85":"from catboost import CatBoostClassifier\nmodel=CatBoostClassifier(verbose=0)\nclassify(model,X,Y)","5031c79a":"model=LGBMClassifier()\nmodel.fit(X,Y) ","a6d8697f":"test.head()","fa1923fa":"#Input split for test data\nX_test=test.drop(columns=['Survived'],axis=1)\nX_test","d0c72555":"train.head()","b869d9b1":"pred=model.predict(X_test)\npred","0e5b15eb":"sub=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nsub","ce36aeaf":"sub['Survived']=pred\nsub['Survived']=sub['Survived'].astype(int)","40c8b59f":"sub","cc1a97d9":"sub.info()","96c2d5a4":"sub.to_csv('Submission.csv',index=False)","2b4aa2cc":"### Label Encoding","684e9e56":"## Log Transformation","d6bd92ba":"## Complete Model Training With Full Data","419f13de":"## Data Preprocessing","ede77b6c":"## Model Training\n","29790939":"## Test Submission","4eda1f60":"## Exploratory Data Analysis","92589348":"## Correlation Matrix","6c26c81e":"## Input Split","3248b50f":"## Importing Modules","00216a15":"## Train-Test Split","23d4b8fb":"## Loading DataSet"}}