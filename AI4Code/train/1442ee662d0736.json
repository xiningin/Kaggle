{"cell_type":{"75969575":"code","0f8300d9":"code","0b2acfdb":"code","2b0411d9":"code","a155ff0f":"code","36b307dc":"code","5cca588c":"code","23264271":"code","fa3944be":"code","628fb815":"code","7c9caf23":"code","1355bbbc":"code","eec80c38":"code","44a1a7cc":"code","f39c6ec0":"code","eadeb550":"code","c896ff63":"code","04e3f22e":"code","b3aa0b29":"code","9bca2460":"code","a561681f":"code","819f9073":"code","a413cca0":"code","1698b2f7":"code","de8d2679":"code","599ec677":"code","ec8a4907":"code","670a0752":"code","ccddced6":"markdown","eee32da0":"markdown","9fbb2b93":"markdown","766220bc":"markdown","9f17a70e":"markdown","10672a45":"markdown","8e672794":"markdown"},"source":{"75969575":"# Import all the important    \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import optimize, stats    \n%matplotlib inline","0f8300d9":"df_train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ndf_shops = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ndf_items = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\ndf_item_categories = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","0b2acfdb":"df_train.head(4)","2b0411d9":"df_shops.head(4)\n","a155ff0f":"df_items.head(4)","36b307dc":"df_item_categories.head(4)","5cca588c":"df_test.head(4)","23264271":"# we check data type of all columns\ndf_train.info()","fa3944be":"#date is object so we will change Dtype from object to datetime64\ndf_train['date']=pd.to_datetime(df_train['date'])","628fb815":"#now we check if there is any null values present in dataset\ndf_train.isnull().sum()","7c9caf23":"df_train['date']=df_train['date'].dt.strftime('%Y-%m')","1355bbbc":"df_train.head().sort_values(by='date')","eec80c38":"df_train.drop(['date_block_num','item_price'] , axis =1, inplace= True)","44a1a7cc":"df_train.head(10)","f39c6ec0":"# sorting data acording to date sort \ndf_train.head().sort_values(by='date')","eadeb550":"df=df_train.groupby(['date','shop_id','item_id']).sum()\ndf.head()","c896ff63":"df = df.pivot_table(index=['shop_id','item_id'], columns='date', values='item_cnt_day', fill_value=0)\ndf.reset_index(inplace=True)\ndf.head()","04e3f22e":"df_test= pd.merge(df_test , df , on = ['shop_id', 'item_id'], how = 'left')\ndf_test.drop(['ID', '2013-01'], axis =1, inplace=True)\ndf_test= df_test.fillna(0)","b3aa0b29":"df_test.head()","9bca2460":"from sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom lightgbm import LGBMRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.utils import resample\nfrom sklearn.pipeline import Pipeline","a561681f":"Y_train = df['2015-10'].values\nX_train = df.drop(['2015-10'], axis = 1)\nX_test = df_test","819f9073":"x_train, x_test, y_train, y_test = train_test_split( X_train, Y_train, test_size=0.2, random_state=101)","a413cca0":"LR = LinearRegression()\nLR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, LR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, LR.predict(x_test)))\nprint('Test set score:', LR.score(x_train,y_train))","1698b2f7":"RFR = RandomForestRegressor(n_estimators = 100)\nRFR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, RFR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, RFR.predict(x_test)))\nprint('Test set score:', RFR.score(x_train,y_train))","de8d2679":"prediction = RFR.predict(X_test)","599ec677":"prediction = list(map(round, prediction))","ec8a4907":"df_submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nprint(df_submission.shape)\ndf_submission.head()","670a0752":"df_submission['item_cnt_month'] = prediction\ndf_submission.to_csv('prediction.csv', index=False)\ndf_submission.head()","ccddced6":"## Importing Libraries","eee32da0":"### Importing Dataset","9fbb2b93":"### Machine Learning Models","766220bc":"### Random Forest Regressor","9f17a70e":"### Linear Regression","10672a45":"### Problem Statement\n\nYou are provided with daily historical sales data. The task is to forecast the total amount of products sold in every shop for the test set. Note that the list of shops and products slightly changes every month. Creating a robust model that can handle such situations is part of the challenge.\n","8e672794":"### Train Test splitting"}}