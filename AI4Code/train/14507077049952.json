{"cell_type":{"4f61ea23":"code","ad1b0125":"code","bc96a933":"code","c91c5554":"code","d299fe15":"code","3801066a":"code","fe792e26":"code","53a40576":"code","cb6becc0":"code","cc7696d1":"code","d623bab1":"markdown"},"source":{"4f61ea23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad1b0125":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import OrdinalEncoder\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error","bc96a933":"# Load the training data\ntrain = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\",index_col=0)\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\",index_col=0)\nsample_submission = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/sample_submission.csv\")","c91c5554":"train.head()","d299fe15":"from sklearn.model_selection import train_test_split","3801066a":"y=train['target']\nfeatures = train.drop(['target'],axis=1)\nfeatures.head()","fe792e26":"cat_cols = [col for col in features.columns if 'cat' in col]\nX = features.copy()\nX_test = test.copy()\nordenc = OrdinalEncoder()\nX[cat_cols]=ordenc.fit_transform(features[cat_cols])\nX_test[cat_cols]=ordenc.transform(test[cat_cols])\nX.head()","53a40576":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, random_state=0)","cb6becc0":"model_1  = XGBRegressor(n_estimators=2000,random_state=0,learning_rate=0.02,max_depth=7,n_jobs=5,tree_method='gpu_hist')\nmodel_1.fit(X_train,y_train,early_stopping_rounds=30,eval_set=[(X_valid,y_valid)],verbose=False)\npred_1=model_1.predict(X_valid)\nprint(mean_squared_error(y_valid, pred_1, squared=False))","cc7696d1":"predictions = model_1.predict(X_test)\n\noutput = pd.DataFrame({'Id': X_test.index,\n                       'target': predictions})\noutput.to_csv('submission.csv', index=False)","d623bab1":"There are 10 categorical variables to get encoded"}}