{"cell_type":{"bf29b3f3":"code","f2d7ccf4":"code","a3edf91a":"code","9c57e0a8":"code","77167403":"code","ca2519f5":"code","951f184c":"markdown"},"source":{"bf29b3f3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import BayesianRidge\nfrom sklearn.model_selection import RepeatedKFold\nimport os\nprint(os.listdir(\"..\/input\/\"))","f2d7ccf4":"#Import the Validation output and submissions\n\noof = pd.read_csv(\"..\/input\/santander-outputs\/Validation_Skfold.csv\")['0']\noof_2 = pd.read_csv(\"..\/input\/santander-outputs\/Validation_kfold.csv\")['0']\n\npredictions = pd.read_csv(\"..\/input\/santander-outputs\/submission26_skfold.csv\")[\"target\"]\npredictions_2 = pd.read_csv(\"..\/input\/santander-outputs\/submission26_kfold.csv\")[\"target\"]","a3edf91a":"train = pd.read_csv('..\/input\/santander-customer-transaction-prediction\/train.csv')\nfeatures = [c for c in train.columns if c not in ['ID_code', 'target']]","9c57e0a8":"target = train['target']\ntrain = train.drop([\"ID_code\", \"target\"], axis=1)","77167403":"train_stack = np.vstack([oof,oof_2]).transpose()\ntest_stack = np.vstack([predictions, predictions_2]).transpose()\n\nfolds_stack = RepeatedKFold(n_splits=5, n_repeats=2, random_state=15)\noof_stack = np.zeros(train_stack.shape[0])\npredictions_3 = np.zeros(test_stack.shape[0])\n\nfor fold_, (trn_idx, val_idx) in enumerate(folds_stack.split(train_stack,target)):\n    print(\"fold {}\".format(fold_))\n    trn_data, trn_y = train_stack[trn_idx], target.iloc[trn_idx].values\n    val_data, val_y = train_stack[val_idx], target.iloc[val_idx].values\n    \n    clf_3 = BayesianRidge()\n    clf_3.fit(trn_data, trn_y)\n    \n    oof_stack[val_idx] = clf_3.predict(val_data)\n    predictions_3 += clf_3.predict(test_stack) \/ 10","ca2519f5":"sample_submission = pd.read_csv('..\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsample_submission['target'] = predictions_3\nsample_submission.to_csv('submission_ashish.csv', index=False)","951f184c":"In this Module I have stacked the Validation and Submission outputs using KFold Cross Validation technique and Stratified K-Fold Cross validatiom technique. Referring to the my previous kernel\n\n**Stratified K Folds on Santander**\nhttps:\/\/www.kaggle.com\/roydatascience\/eda-pca-simple-lgbm-santander-transactions\n\n**K Folds on Santander**\nhttps:\/\/www.kaggle.com\/roydatascience\/fork-of-eda-pca-simple-lgbm-kfold\n\nThe attempt is to improve the accuracy using Baysian Ridge Stacking approach"}}