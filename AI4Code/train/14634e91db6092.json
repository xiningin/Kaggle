{"cell_type":{"2c8de195":"code","822652d8":"code","d85cbc0a":"code","573f66c9":"code","f96c2a2d":"code","db157c89":"code","aa9e762f":"code","064211c4":"code","f3171d2c":"code","2ca42a2c":"code","63c090d7":"code","7230450a":"code","9abf6644":"code","30e55556":"code","cf53dfd1":"code","fffa71f1":"code","2fa2f81e":"code","dcc49cef":"code","bfe032e1":"code","836c22b9":"code","924fa604":"code","8905b2e6":"code","218bf5c5":"code","81c5f65a":"code","e296f50d":"code","c72727ca":"code","ad3b4f0c":"code","9e6125b2":"code","068519eb":"code","92c3c642":"code","43f0e4ae":"code","0a9022a6":"code","fe07a355":"code","7437fc30":"code","2c3d9824":"code","38c82736":"code","7fe7b818":"code","0d74fa75":"code","7ba8e13c":"code","2638136a":"code","04cd4886":"code","2f2669e3":"code","9021bc57":"code","dc79dc7c":"code","3a384bd6":"code","cd31cf1e":"code","10e0493b":"code","5fc8f0e2":"code","0ab0fe8e":"code","d0728d3c":"code","825d4965":"code","72cb5af7":"code","2ab8b809":"code","bd1b0a53":"code","8bc32eb7":"code","f6dcf4c1":"code","2ce72600":"markdown","8fa0e568":"markdown","749cdf41":"markdown","95811f8e":"markdown","e2e634c9":"markdown","a637475a":"markdown","28b91c4d":"markdown","5bc91174":"markdown","f5193b25":"markdown","ba3379ec":"markdown","48fa92e0":"markdown","83400b78":"markdown","a4767279":"markdown","846d48b0":"markdown","6b3bfddc":"markdown","cfbf89d3":"markdown","387ae178":"markdown","8185bbef":"markdown"},"source":{"2c8de195":"import numpy as np \nimport pandas as pd \nimport scipy.sparse as sp\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","822652d8":"df = pd.read_csv('..\/input\/mts-library\/interactions.csv')\ndf.head()","d85cbc0a":"df['start_date'] = pd.to_datetime(df['start_date'])","573f66c9":"df.info()","f96c2a2d":"duplicates = df.duplicated(subset=['user_id', 'item_id'], keep=False)\nduplicates.sum()","db157c89":"df_duplicates = df[duplicates].sort_values(by=['user_id', 'start_date'])\ndf = df[~duplicates]","aa9e762f":"df_duplicates = df_duplicates.groupby(['user_id', 'item_id']).agg({\n    'progress': 'max',\n    'rating': 'max',\n    'start_date': 'min'\n})\ndf_duplicates.info()","064211c4":"df = df.append(df_duplicates.reset_index(), ignore_index=True)\ndf.info()","f3171d2c":"df.nunique()","2ca42a2c":"df_cat = pd.DataFrame({'city': ['Moscow', 'London', 'Tokyo', 'Moscow']})\ndf_cat","63c090d7":"df_cat['city'] = df_cat['city'].astype('category')\ndf_cat","7230450a":"df_cat['city_codes'] = df_cat['city'].cat.codes\ndf_cat","9abf6644":"mapping = dict(enumerate(df_cat['city'].cat.categories))\nmapping","30e55556":"df_user_item = df[['user_id', 'item_id']].copy()","cf53dfd1":"def num_bytes_format(num_bytes, float_prec=4):\n    units = ['bytes', 'Kb', 'Mb', 'Gb', 'Tb', 'Pb', 'Eb']\n    for unit in units[:-1]:\n        if abs(num_bytes) < 1000:\n            return f'{num_bytes:.{float_prec}f} {unit}'\n        num_bytes \/= 1000\n    return f'{num_bytes:.4f} {units[-1]}'","fffa71f1":"num_bytes_ints = df_user_item.memory_usage(deep=True).sum()\nnum_bytes_format(num_bytes_ints)","2fa2f81e":"df_user_item = df_user_item.astype('string')\nnum_bytes_str = df_user_item.memory_usage(deep=True).sum()\nnum_bytes_format(num_bytes_str)","dcc49cef":"df_user_item = df_user_item.astype('category')\nnum_bytes_cat = df_user_item.memory_usage(deep=True).sum()\nnum_bytes_format(num_bytes_cat)","bfe032e1":"print(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f category \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e string: {(1 - num_bytes_cat \/ num_bytes_str) * 100:.2f}%')\nprint(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f ints \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e category: {(1 - num_bytes_ints \/ num_bytes_cat) * 100:.2f}%')","836c22b9":"df_user_item = df_user_item.astype(np.int64).astype('category')\nnum_bytes_int_cat = df_user_item.memory_usage(deep=True).sum()\nnum_bytes_format(num_bytes_int_cat)","924fa604":"print(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f category on int64 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e category on string: {(1 - num_bytes_int_cat \/ num_bytes_cat) * 100:.2f}%')","8905b2e6":"df_user_item['user_id'].cat.codes.dtype","218bf5c5":"ratings = df['rating'].astype(np.float32).copy()","81c5f65a":"num_bytes_float = ratings.memory_usage(deep=True)\nnum_bytes_format(num_bytes_float)","e296f50d":"ratings = ratings.astype(pd.Int32Dtype())\nnum_bytes_Int32 = ratings.memory_usage(deep=True)\nnum_bytes_format(num_bytes_Int32)","c72727ca":"ratings = ratings.astype(pd.Int8Dtype())\nnum_bytes_Int8 = ratings.memory_usage(deep=True)\nnum_bytes_format(num_bytes_Int8)","ad3b4f0c":"ratings","9e6125b2":"print(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f Int8DType \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e float64: {(1 - num_bytes_Int8 \/ num_bytes_float) * 100:.2f}%')","068519eb":"sparse_type = pd.SparseDtype(np.float32, np.nan)\nratings = ratings.astype(np.float32).astype(sparse_type)","92c3c642":"ratings","43f0e4ae":"num_bytes_sparse = ratings.memory_usage(deep=True)\nnum_bytes_format(num_bytes_sparse)","0a9022a6":"print(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f sparse \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e Int8DType: {(1 - num_bytes_sparse \/ num_bytes_Int8) * 100:.2f}%')\nprint(f'\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f sparse \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e float32: {(1 - num_bytes_sparse \/ num_bytes_float) * 100:.2f}%')","fe07a355":"ratings.sparse.density","7437fc30":"rows =   [1,  1, 0,  4,   2, 2]\ncols =   [0,  1, 0,  5,   3, 3]\nvalues = [-2, 7, 19, 1.0, 6, 8]\n\ncoo = sp.coo_matrix((values, (rows, cols)))\ncoo","2c3d9824":"coo.todense()","38c82736":"coo.row, coo.col, coo.data","7fe7b818":"csr = coo.tocsr()\ncsr","0d74fa75":"csr.todense()","7ba8e13c":"csr.indptr, csr.indices, csr.data","2638136a":"csc = coo.tocsc()\ncsc","04cd4886":"csc.todense()","2f2669e3":"csc.indptr, csc.indices, csc.data","9021bc57":"df.head()","dc79dc7c":"df.info()","3a384bd6":"df.nunique()","cd31cf1e":"users_inv_mapping = dict(enumerate(df['user_id'].unique()))\nusers_mapping = {v: k for k, v in users_inv_mapping.items()}\nlen(users_mapping)","10e0493b":"users_mapping[126706], users_inv_mapping[0]","5fc8f0e2":"items_inv_mapping = dict(enumerate(df['item_id'].unique()))\nitems_mapping = {v: k for k, v in items_inv_mapping.items()}\nlen(items_mapping)","0ab0fe8e":"items_mapping[14433], items_inv_mapping[0]","d0728d3c":"rows = df['user_id'].map(users_mapping.get)\ncols = df['item_id'].map(items_mapping.get)\n\nrows.isna().sum(), cols.isna().sum()","825d4965":"coo = sp.coo_matrix((\n    np.ones(df.shape[0], dtype=np.int8),\n    (rows, cols)\n))\ncoo","72cb5af7":"num_bytes_format(coo.data.nbytes + coo.row.nbytes + coo.col.nbytes)","2ab8b809":"df['weight'] = ((df['progress'] + 1) \/ 101) * (2 ** df['rating'])\ndf['weight'] = df['weight'].astype(np.float32)","bd1b0a53":"ax = df['weight'].plot.hist()","8bc32eb7":"coo = sp.coo_matrix((\n    df['weight'],\n    (rows, cols)\n))\ncoo","f6dcf4c1":"num_bytes_format(coo.data.nbytes + coo.row.nbytes + coo.col.nbytes)","2ce72600":"<a id=\"integerdtype\"><\/a>\n## IntegerDType\n\n[IntegerDType](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/integer_na.html) - \u0433\u0440\u0443\u043f\u043f\u0430 \u0442\u0438\u043f\u043e\u0432 \u0432 pandas, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \n\n\u0414\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \"\u0434\u0432\u043e\u0439\u043d\u0438\u043a\". \u041e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u043c\u0438 \u0431\u0443\u043a\u0432\u0430\u043c\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\n* numpy.int32 - pd.Int32DType\n* numpy.uint32 - pd.UInt64DType\n\n\n\u042d\u0442\u043e\u0442 \u0442\u0438\u043f \u0441\u0442\u043e\u0438\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0438 \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u0438 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0438\u043b\u0438 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0445 \u043d\u0430 \u043d\u0438\u043c. \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u044d\u0442\u043e\u0442 \u0442\u0438\u043f \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442.","8fa0e568":"### csr_matrix\/csc_matrix","749cdf41":"### coo_matrix\n\n","95811f8e":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u043e, \u043a\u0430\u043a \u0442\u0430\u043a\u0430\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0442\u0438\u043f\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u044c.","e2e634c9":"<a id=\"pandas-to-matrix\"><\/a>\n## Pandas to matrix\n\n\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u0438\u0437 dataframe \u0441 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043c\u0435\u0436\u0434\u0443 user\/item ID \u0438 \u043d\u043e\u043c\u0435\u0440\u0430\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\/\u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432.\n\n\u041f\u043e \u0441\u0443\u0442\u0438, \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u0442\u044c (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 0) \u0432\u0441\u0435 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 ID.","a637475a":"<a id=\"links\"><\/a>\n# Links\n* https:\/\/medium.com\/@aakashgoel12\/pandas-optimize-memory-and-speed-operation-17d8a66c8be4 - \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u0433\u0430\u0439\u0434 \u043f\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e Pandas\n* https:\/\/matteding.github.io\/2019\/04\/25\/sparse-matrices\/ - \u0448\u0438\u043a\u0430\u0440\u043d\u044b\u0435 \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u0430\u0442\u0440\u0438\u0446\n* https:\/\/rushter.com\/blog\/scipy-sparse-matrices\/ - \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0430\u0437\u0431\u043e\u0440 \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u0430\u0442\u0440\u0438\u0446","28b91c4d":"\u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e, \u0443 \u043d\u0430\u0441 1.5 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430 \u0441\u0442\u0440\u043e\u043a, \u043d\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043c\u0435\u043d\u044c\u0448\u0435. \n\u042d\u0442\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f **\u043d\u0438\u0437\u043a\u043e\u0439 \u043a\u0430\u0440\u0434\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e** \u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0432\u043e \u043c\u043d\u043e\u0433\u0438\u0445 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\u0445 \u0441 \"\u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043c\u0438\". ","5bc91174":"<a id=\"preprocessing\"><\/a>\n# Preprocessing\n\n\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f","f5193b25":"\u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0435\u0434\u0438\u043d\u0438\u0446\u0435\u0439 (\u0430\u043b\u044f implicit feedback)","ba3379ec":"<a id=\"scipy\"><\/a>\n# SciPy.Sparse\n\n\n<a id=\"matrix-types\"><\/a>\n## Matrix types\n\n[Sparse matrix](https:\/\/docs.scipy.org\/doc\/scipy\/reference\/sparse.html) - \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0445\u0440\u0430\u043d\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\n\u0412\u0438\u0434\u044b \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u0430\u0442\u0440\u0438\u0446 \u0432 scipy.sparse:\n* **coo_matrix** - A sparse matrix in COOrdinate format\n* **csc_matrix** - Compressed Sparse Column matrix\n* **csr_matrix** - Compressed Sparse Row matrix\n* **bsr_matrix** - Block Sparse Row matrix\n* **dia_matrix** - Sparse matrix with DIAgonal storage\n* **dok_matrix** - Dictionary Of Keys based sparse matrix\n* **lil_matrix** - Row-based list of lists sparse matrix\n\n\u0418\u0445 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u0434\u0432\u0435 \u0433\u0440\u0443\u043f\u043f\u044b:\n* \u041a\u043b\u0430\u0441\u0441\u044b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0430\u0442\u0440\u0438\u0446\n  * coo_matrix - \u0442\u0440\u043e\u0439\u043a\u0438 (\u0441\u0442\u0440\u043e\u043a\u0430, \u0441\u0442\u043e\u043b\u0431\u0435\u0446, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435)\n  * dok_matrix - \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447 - \u043a\u043e\u0440\u0442\u0435\u0436 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u0430, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 :)\n  * lil_matrix - \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u043e\u0432, \u0433\u0434\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0438 - \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0438\n* \u041a\u043b\u0430\u0441\u0441\u044b \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0434 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0430\u0434 \u043c\u0430\u0442\u0440\u0438\u0446\u0430\u043c\u0438\n  * csr_matrix - \u0441\u0436\u0430\u0442\u043e\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\n  * csc_matrix - \u0441\u0436\u0430\u0442\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\n  * bsr_matrix - \u043a\u0430\u043a csr_matrix, \u0442\u043e\u043b\u044c\u043a\u043e \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \"\u043f\u043b\u043e\u0442\u043d\u044b\u0435 \u0431\u043b\u043e\u043a\u0438\"\n  * dia_matrix - \u0434\u0438\u0430\u0433\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\n  \n \n\u041d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f coo_matrix, csr_matrix \u0438 csc_matrix ","48fa92e0":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b","83400b78":"* indptr - \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043f\u0430\u0440\u0430\u043c\u0438. \u0418\u043c\u0435\u044e\u0442 \u0434\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n    * \u0418\u043d\u0434\u0435\u043a\u0441 \u043f\u0430\u0440\u044b - \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 \n    * \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u044b - \u043d\u0430\u0447\u0430\u043b\u043e \u0438 \u043a\u043e\u043d\u0435\u0446 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 data \u0438 indices\n* indices - \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\n* data - \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\n\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442:\n* indptr -> (1, 3) -> 1-\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430.\n* 3 - 1 = 2 -> \u043a\u043e\u043b-\u0432\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n* indices[1:3] = (0, 1) -> \u0441\u0442\u043e\u043b\u0431\u0446\u044b 2 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n* data[1:3] = (-2, 7) -> \u0441\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n* -2 -> (1, 0)\n* 7  -> (1, 1)\n\n","a4767279":"<a id=\"pandas\"><\/a>\n# Pandas\n\n\n<a id=\"categorydtype\"><\/a>\n## CategoryDType\n\n[CategoryDType](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/categorical.html) - \u0442\u0438\u043f \u0432 pandas, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0437\u0430\u0434\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043d\u0438\u0445.\n","846d48b0":"# Pandas & SciPy for RecSys datasets\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c jupyter notebook \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a pandas \u0438 scipy \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c.\n\n* [Preprocessing](#preprocessing)\n* [Pandas](#pandas)\n    - [\u0421ategoryDType](#categorydtype)\n    - [IntegerDType](#integerdtype)\n    - [Sparse Type](#sparse-type)\n* [SciPy.Sparse](#scipy)\n    - [Matrix types](#matrix-types)\n    - [Pandas to matrix](#pandas-to-matrix)\n* [Links](#links)","6b3bfddc":"* users_mapping - \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f ID \u0432 \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0438\n* users_inv_mapping - \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 ID","cfbf89d3":"\u0418\u043c\u0435\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439, \u043c\u044b \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u043b\u0435\u0433\u043a\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0448\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u044b user_id \u0438 item_id \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438 \u0437\u0430\u043a\u0438\u043d\u0443\u0442\u044c \u0438\u0445 \u0432 coo_matrix","387ae178":"<a id=\"sparse-type\"><\/a>\n## Sparse Type\n\n[Sparse Type](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/sparse.html) - \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 pandas \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.\n\n\u0418\u0434\u0435\u044f \u043f\u0440\u043e\u0441\u0442\u0430 - \u0445\u0440\u0430\u043d\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \"\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435\" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u043c \u0438 \u0438\u043c\u0438\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043e\u0439.\n\n\u0421\u0430\u043c \u0442\u0438\u043f \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0432\u0443\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439:\n* dtype - \u0442\u0438\u043f \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n* fill_value - \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","8185bbef":"\u0418\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0438\u0437 dataframe. \u041f\u0440\u0438\u0434\u0443\u043c\u0430\u0435\u043c \u0441\u0442\u0440\u0430\u0448\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443\u043b\u0443 \u0434\u043b\u044f \u0432\u0437\u0432\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0443 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0433\u043e."}}