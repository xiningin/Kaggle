{"cell_type":{"9066288d":"code","abce885c":"code","57913f96":"code","cc42a873":"code","9ff59104":"code","9597ee0d":"code","2bbe45be":"code","c864bf8c":"code","b1ccdf1d":"markdown","fd00c42e":"markdown","219193da":"markdown","37b0e9ab":"markdown","c3d8cda2":"markdown","9a6956eb":"markdown","fea8cb40":"markdown","44044d5f":"markdown","1c92cfed":"markdown"},"source":{"9066288d":"from fastai.vision.all import *","abce885c":"data = ImageDataLoaders.from_folder('..\/input\/indian-currency-notes-classifier',\n                                    train='Train',\n                                    valid='Test',\n                                    bs=16,\n                                    seed=42,\n                                    item_tfms=Resize(360,method=ResizeMethod.Squish))","57913f96":"data.show_batch()","cc42a873":"learn = cnn_learner(data, resnet34, \n                    metrics=[error_rate,accuracy],\n                    cbs=[SaveModelCallback()],\n                    path='.\/')","9ff59104":"learn.lr_find()","9597ee0d":"learn.fine_tune(5, 0.001, freeze_epochs=5,cbs=[SaveModelCallback()])","2bbe45be":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","c864bf8c":"interp.plot_top_losses(9, figsize=(15,20))","b1ccdf1d":"#### The graph gives us two suggestions. Rule of thumb: take the minimum divided by 10. We fine tune the model, by first training the head for 5 epochs, and then the whole network for another 5 epochs.","fd00c42e":"#### Then we can create a `Learner`, which is a fastai object that combines the data and a model for training, and uses transfer learning to fine tune the ResNet34.","219193da":"#### Let's see some of the predictions! Use `plot_top_losses` to illustrate the top loss class, but we use it here to visualize the prediction and actual, including loss and probability.","37b0e9ab":"#### Find the perfect learning rate","c3d8cda2":"#### The confusion matrix. Tadaa! All correct","9a6956eb":"#### Load the images ","fea8cb40":"#### Import the library","44044d5f":"# FastAI + ResNet34","1c92cfed":"#### Show the images"}}