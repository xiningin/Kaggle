{"cell_type":{"208f3644":"code","e480c930":"code","1fe2ab95":"code","a556dacb":"code","db991c1e":"code","f2689fb1":"code","615dd382":"code","deca9f1b":"code","5551e79d":"code","620b5da9":"code","916f2087":"code","d863ee33":"code","d7e7930b":"code","f0ebb026":"code","264414f3":"code","4c825a62":"code","7eb08b66":"code","82dcd55d":"code","4c761d54":"code","b731282e":"code","0fc1491b":"code","0ab0c75d":"code","b0bce172":"code","da22c7d0":"code","68a03229":"code","f577bc10":"code","956c039e":"code","6c71ffd1":"code","79f74376":"code","06f735f5":"code","d8335b78":"code","b102bcc5":"code","918d00e4":"code","45300cdf":"code","e9536e21":"code","4ebc8b8e":"code","c9187530":"code","05de7e5a":"code","89115dad":"code","0369ac1f":"code","d2467b2f":"code","c8a3b258":"code","85386636":"code","f7847921":"code","7e50dfc7":"code","701347ab":"code","218a5090":"code","768c696d":"code","3190ad32":"code","65322dda":"code","f5eb31ed":"code","5faf1154":"code","a2c07ed3":"code","707377aa":"code","3a5a8203":"code","dd1f5bbf":"code","c2810751":"code","5262b6da":"code","e9f82b92":"code","c8b91701":"code","6b2c7273":"code","b1e45014":"markdown","f0e96b40":"markdown","0040f7aa":"markdown","e3818a14":"markdown","51cb44aa":"markdown","02cc91db":"markdown","113df53f":"markdown","37a2f0db":"markdown","850f7fdb":"markdown"},"source":{"208f3644":"# Importing all necessary libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e480c930":"import warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","1fe2ab95":"df = pd.read_csv('..\/input\/co2-emission-by-vehicles\/CO2 Emissions_Canada.csv')","a556dacb":"df.shape","db991c1e":"df.head()","f2689fb1":"# Data Description\ndf.info()","615dd382":"df['Vehicle Class'].value_counts()","deca9f1b":"df['Cylinders'] = df['Cylinders'].astype('category')\ndf['Cylinders'].value_counts()","5551e79d":"df['Transmission'] = df['Transmission'].astype('category')\ndf['Transmission'].value_counts()","620b5da9":"df['Gears'] = df['Transmission'].apply(lambda x:x[-1])\ndf['Gears'].value_counts()","916f2087":"df['Gears'] = df['Gears'].replace('V','0')\ndf['Gears'].value_counts()","d863ee33":"df['Fuel Type'].value_counts()","d7e7930b":"sns.boxplot(df['CO2 Emissions(g\/km)'])","f0ebb026":"Q1=df['CO2 Emissions(g\/km)'].quantile(0.25)\nQ3=df['CO2 Emissions(g\/km)'].quantile(0.75)\nIQR=Q3-Q1\nQ3+1.5*IQR","264414f3":"# Outlier Treatment\nQ3=df.quantile(0.75)\nIQR=Q3-Q1\ndf = df.loc[df['CO2 Emissions(g\/km)']<= 408]","4c825a62":"df.shape","7eb08b66":"# Hist Plots \nNumerical = df.select_dtypes(include = ['int64','float'])\nNumerical.hist(figsize = (10,10))\nplt.show()","82dcd55d":"Categorical = df.select_dtypes(include=['category','object'])\nCategorical.head()","4c761d54":"# Vehicle Class with CO2 Emission\nplt.figure(figsize = (10,10))\nsns.boxplot(data = df, x='Vehicle Class', y='CO2 Emissions(g\/km)', palette = 'cubehelix')\nplt.xticks(rotation = 90)\nplt.show()","b731282e":"# Gears with C02 Emission\nplt.figure(figsize = (10,10))\nsns.boxplot(data = df, x = 'Gears', y = 'CO2 Emissions(g\/km)', palette = 'vlag')\nplt.show()","0fc1491b":"# Car Makers with C02 Emission\nplt.figure(figsize = (20,15))\nsns.boxplot(data = df, x='Make', y='CO2 Emissions(g\/km)', palette = 'husl')\nplt.xticks(rotation = 90)\nplt.show()","0ab0c75d":"# City Fuel Consumption vs Highway Fuel Consumption with Fuel Category\nplt.figure(figsize = (10,10))\nsns.scatterplot(data = df, x = 'Fuel Consumption City (L\/100 km)', y = 'Fuel Consumption Hwy (L\/100 km)', hue = 'Fuel Type')\nplt.show()","b0bce172":"# Fuel Consumption by Fuel Categories\ndf.groupby(by = 'Fuel Type')['Fuel Consumption Comb (L\/100 km)'].mean()","da22c7d0":"# Pivot Table with Cylinders, Fuel Type and C02 Emissions\ndf.pivot_table(values = ['CO2 Emissions(g\/km)'], index = ['Cylinders','Fuel Type'], aggfunc = 'mean')","68a03229":"# Pairplot for all values\nsns.pairplot(df, palette = 'husl')","f577bc10":"# Heatmap for all vvalues\nplt.figure(figsize = (10,10))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","956c039e":"df.head()","6c71ffd1":"# Standardization for Numerical Data\nfrom sklearn.preprocessing import StandardScaler\ndf_num = pd.DataFrame(StandardScaler().fit_transform(Numerical), \n                      columns = Numerical.columns)\ndf_num.head()","79f74376":"Categorical = Categorical.loc[:,['Vehicle Class','Transmission','Fuel Type','Cylinders','Gears']]\nCategorical.head()","06f735f5":"# One hot Encoding for Categorical Values\nfrom sklearn.preprocessing import OneHotEncoder\n\nencoder = OneHotEncoder(drop='first', sparse=False)\n\ndf_cat = pd.DataFrame(encoder.fit_transform(Categorical), columns=encoder.get_feature_names(Categorical.columns))\ndf_cat","d8335b78":"print(df_cat.shape)\nprint(df_num.shape)","b102bcc5":"data = pd.concat([df_cat, df_num], axis = 1)\ndata.head()","918d00e4":"target = data.pop('CO2 Emissions(g\/km)')\ndata = data","45300cdf":"print(data.shape)\nprint(target.shape)","e9536e21":"# Train Test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(data, target, test_size = 0.2, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","4ebc8b8e":"# Feature Elimination using RFE\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.feature_selection import RFE\nLR = LinearRegression()\nrfe = RFE(LR, n_features_to_select=30, step=1)\nrfe = rfe.fit(X_train, y_train)","c9187530":"temp_df = pd.DataFrame({'Columns': X_train.columns, 'Included': rfe.support_, 'Ranking': rfe.ranking_})\ntemp_df.loc[temp_df.Included == True, :]","05de7e5a":"X_train_cols = list(X_train.columns[rfe.support_])","89115dad":"\nX_train_rfe = X_train[X_train_cols]\n\nX_train_rfe.shape","0369ac1f":"plt.figure(figsize=(18, 9))\nsns.heatmap(X_train_rfe.corr(), cmap=\"YlGnBu\")","d2467b2f":"rfe.fit(X_train_rfe, y_train)","c8a3b258":"X_test_rfe = X_test[X_train_cols]","85386636":"y_test_pred_rfe = rfe.predict(X_test_rfe)","f7847921":"# Metrics for Performance Checking\nfrom sklearn import metrics\nprint(metrics.mean_absolute_error(y_test, y_test_pred_rfe))\nprint(metrics.mean_squared_error(y_test, y_test_pred_rfe))\nprint(np.sqrt(metrics.mean_squared_error(y_test, y_test_pred_rfe)))","7e50dfc7":"# R2 score\nprint(metrics.r2_score(y_test, y_test_pred_rfe))","701347ab":"temp_df =pd.DataFrame({'y_test':y_test, 'y_test_pred_rfe': y_test_pred_rfe})\ntemp_df.tail()","218a5090":"plt.figure(figsize = (10,10))\ny_train_pred_rfe = rfe.predict(X_train_rfe)\nResidual = y_train - y_train_pred_rfe\nsns.distplot(Residual, color='green', kde=True)\nplt.show()","768c696d":"X_train.shape","3190ad32":"X_train.head()","65322dda":"from sklearn.decomposition import PCA\npca = PCA(random_state= 0)\npca.fit(X_train)","f5eb31ed":"plt.figure(figsize = (15,15))\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel('No of Components')\nplt.ylabel('No of Components')\nplt.show()","5faf1154":"# Cummulative Sum of Eigen Vectors\nnp.cumsum(pca.explained_variance_ratio_)","a2c07ed3":"from sklearn.decomposition import PCA\n\npca_final = PCA(n_components = 14, random_state = 0)\n\nX_train_pca = pca_final.fit_transform(X_train)","707377aa":"X_train_pca.shape","3a5a8203":"# Correlation matrix between Eigen vector of PCA\ncorrmat = np.corrcoef(X_train_pca.T)\nplt.figure(figsize=(18, 9))\nsns.heatmap(corrmat, cmap=\"YlGnBu\")","dd1f5bbf":"X_test_pca = pca_final.transform(X_test)","c2810751":"LR.fit(X_train_pca, y_train)\ny_test_pred_pca = LR.predict(X_test_pca)","5262b6da":"# Metrics for Performance Checking\nfrom sklearn import metrics\nprint(metrics.mean_absolute_error(y_test, y_test_pred_pca))\nprint(metrics.mean_squared_error(y_test, y_test_pred_pca))\nprint(np.sqrt(metrics.mean_squared_error(y_test, y_test_pred_pca)))","e9f82b92":"print(metrics.r2_score(y_test, y_test_pred_pca))","c8b91701":"temp_df =pd.DataFrame({'y_test':y_test, 'y_test_pred_pca': y_test_pred_pca})\ntemp_df.tail()","6b2c7273":"plt.figure(figsize = (10,10))\ny_train_pca = LR.predict(X_train_pca)\nResidual_pca = y_train - y_train_pca\nsns.distplot(Residual_pca, color='green', kde=True)","b1e45014":"# 1. Data Exploration and Understanding","f0e96b40":"# 5. Evaluation","0040f7aa":"# 2. Data Preparation ","e3818a14":"# 4. Prediction","51cb44aa":"# Case Study\nBelow mentioned are the steps to be followed:\n\n1. Data Exploration and Understanding\n    * Load the Data\n    * Understand and Viz the data\n    * EDA\n2. Data Preparation\n    * Removing Outliers and uneccessary columns\n    * Categorical variable treatment\n    * Standardizing numerical variables\n    * Train Test Split\n3. Model Building and Training\n    * Use RFE for Feature Elimination\n    * Training the Model \n4. Prediction\n5. Evaluation\n    * Use MSE, RMSE, MEA\n    * Use R2 score\n6. Residual Analysis on Model\n7. Principle Component Analysis\n","02cc91db":"# 6. Residual Analysis of Model","113df53f":"# 3. Model Building and Training","37a2f0db":"From Heatmap, we get some interesting points :\n1. All Numerical Values are highly correlated to C02 Emission.\n2. There is huge correlation between independent variables, which leads to interpretibility problem. ","850f7fdb":"# 7. Principal Component Analysis"}}