{"cell_type":{"ac80a7fe":"code","d06bc03a":"code","08966a44":"code","84167180":"code","44da644b":"code","3355706f":"code","d15b793d":"code","49350848":"code","c2563a97":"code","bf2cf93b":"code","bebc19bf":"code","a933d965":"code","5c54e367":"code","a6549332":"code","89efe913":"code","7010e672":"markdown","d2a0c578":"markdown","5ee32110":"markdown","11f944f0":"markdown"},"source":{"ac80a7fe":"from IPython.display import Image\nImage(\"..\/input\/ratatouille\/ratatouille.jpg\")","d06bc03a":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.svm import LinearSVC\nfrom sklearn.feature_extraction.text import HashingVectorizer\nfrom sklearn.model_selection import train_test_split\nimport time\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nplt.rcParams[\"figure.figsize\"] = (15,10)","08966a44":"data = pd.read_json(\"..\/input\/whats-cooking-kernels-only\/train.json\")\ntest = pd.read_json(\"..\/input\/whats-cooking-kernels-only\/test.json\")\ndata.head()","84167180":"data.isnull().values.any()\ndata.dropna(axis=0, how='any',inplace = True)\ndata.isnull().values.any()\ndata.isnull().sum()","44da644b":"data.shape","3355706f":"data.cuisine.unique()","d15b793d":"pd.value_counts(data['cuisine']).plot.bar()","49350848":"#Convert into proper format\ndata.ingredients =data.ingredients.str.join(' ')\ntest.ingredients =test.ingredients.str.join(' ')","c2563a97":"# convert text to unique integers with HashingVectorizer\nvect = HashingVectorizer()\nfeatures = vect.fit_transform(data.ingredients)\ntestfeatures = vect.transform(test.ingredients)","bf2cf93b":"#Split the dataset into train and test sets\nlabels = data.cuisine","bebc19bf":"X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2)","a933d965":"from sklearn.linear_model import LogisticRegression\n\nstart = time.time()\n\nlog_reg = LogisticRegression(C=12)\nlog_reg.fit(X_train,y_train)\n\nprint(\"Accuracy: \",log_reg.score(X_test, y_test))\nprint(\"Time: \" , time.time() - start )","5c54e367":"from sklearn.svm import LinearSVC\n\nstart = time.time()\n\nlinear_svm = LinearSVC(random_state=0, max_iter = 1500)\nlinear_svm.fit(X_train, y_train)\n\nprint(\"Accuracy: \",linear_svm.score(X_test, y_test))\nprint(\"Time: \" , time.time() - start )","a6549332":"from sklearn.svm import SVC\n\nstart = time.time()\n\nrbf_svm = SVC(kernel='rbf', gamma=0.8, C=12)\nrbf_svm.fit(X_train, y_train)\n\nprint(\"Accuracy: \",rbf_svm.score(X_test, y_test))\nprint(\"Time: \" , time.time() - start )","89efe913":"prediction = rbf_svm.predict(testfeatures)\nsub = pd.DataFrame({'id':test.id,'cuisine':prediction})\noutput = sub[['id','cuisine']]\noutput.to_csv(\"sample_submission.csv\",index = False)","7010e672":"### Input to the model","d2a0c578":"### List of cuisines","5ee32110":"## Import Data ","11f944f0":"### Removing NULL\/NAN values"}}