{"cell_type":{"ed2eab39":"code","88e301c3":"code","124b6dc5":"code","9ef2fed3":"code","1db68dfa":"code","0c6d71d0":"code","220fa166":"code","233e7c81":"code","44989889":"code","3acdb0f1":"code","6b5d3182":"code","7c2d96b9":"code","4845db59":"code","1ff21002":"code","4f2b0338":"code","7090c603":"code","f9f28370":"code","2226f991":"code","065042dc":"code","f871a2f9":"code","d8a97f02":"code","053586bd":"code","19695ef2":"code","a55f5d64":"code","87375f07":"code","3bd8b99f":"code","666bd222":"markdown","20358b96":"markdown","a0592bb6":"markdown","49d9b751":"markdown","de866fba":"markdown"},"source":{"ed2eab39":"import numpy as np\nimport pandas as pd\ndata=pd.read_csv(\"..\/input\/stock-price-predictions\/Apple.csv\",index_col=\"Price Date\",parse_dates=[\"Price Date\"])","88e301c3":"data.head()","124b6dc5":"import matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\ndata[\"Modal Price (Rs.\/Quintal)\"][\"2019\":].plot(figsize=(16,9),legend=True,color='r')\ndata[\"Modal Price (Rs.\/Quintal)\"][:\"2019\"].plot(figsize=(16,9),legend=True,color='g')\nplt.legend(['Training set (Before 2019)','Test set (2019 and beyond)'])\nplt.title('Apple stock price')\nplt.show()","9ef2fed3":"training_set = data['2019':].iloc[:,2:3].values\ntest_set = data[:'2019'].iloc[:,2:3].values","1db68dfa":"training_set","0c6d71d0":"from sklearn.preprocessing import MinMaxScaler\nsc = MinMaxScaler(feature_range=(0,1))\ntraining_set_scaled = sc.fit_transform(training_set)\ntest_scaled=sc.fit_transform(test_set)","220fa166":"training_set_scaled.shape,test_scaled.shape","233e7c81":"X_train = []\ny_train = []\nfor i in range(60,4732):\n    X_train.append(training_set_scaled[i-60:i,0])\n    y_train.append(training_set_scaled[i,0])\nX_train, y_train = np.array(X_train), np.array(y_train)","44989889":"test_scaled.shape","3acdb0f1":"X_test = []\ny_test = []\nfor i in range(60,159):\n    X_test.append(test_scaled[i-60:i,0])\n    y_test.append(test_scaled[i,0])\nX_test, y_test = np.array(X_test), np.array(y_test)","6b5d3182":"X_train = np.reshape(X_train, (X_train.shape[0],X_train.shape[1],1))\nX_test = np.reshape(X_test, (X_test.shape[0],X_test.shape[1],1))\nX_train.shape,X_test.shape","7c2d96b9":"from keras.models import Sequential\nfrom keras.layers import Dense, LSTM, Dropout, GRU, Bidirectional\nimport math\nfrom sklearn.metrics import mean_squared_error","4845db59":"regressorGRU = Sequential()\nregressorGRU.add(Bidirectional(GRU(50, return_sequences=True, input_shape=(X_train.shape[1],1))))\nregressorGRU.add(Bidirectional(GRU(50, return_sequences=True)))\nregressorGRU.add(Bidirectional(GRU(50, return_sequences=True)))\nregressorGRU.add(Bidirectional(GRU(50)))\nregressorGRU.add(Dropout(0.2))\nregressorGRU.add(Dense(units=1))\nregressorGRU.compile(optimizer='rmsprop',loss='mean_squared_error',metrics=['accuracy'])\nregressorGRU.fit(X_train,y_train,epochs=5,batch_size=32,validation_data=(X_test,y_test))","1ff21002":"GRU_predicted_stock_price = regressorGRU.predict(X_test)\nGRU_predicted_stock_price = sc.inverse_transform(GRU_predicted_stock_price)","4f2b0338":"plt.figure(figsize=(15,15))\nplt.plot(test_set, color='red',label='Real Apple Stock Price')\nplt.plot(GRU_predicted_stock_price, color='blue',label='Predicted Apple Stock Price')\nplt.title('Apple Stock Price Prediction(GRU)')\nplt.xlabel('Time')\nplt.ylabel('Apple Stock Price')\nplt.legend()\nplt.show()","7090c603":"test_set=test_set[:99,]\ntest_set.shape,GRU_predicted_stock_price.shape","f9f28370":"rmse = math.sqrt(mean_squared_error(test_set, GRU_predicted_stock_price))\nprint(\"The root mean squared error is {}.\".format(rmse))","2226f991":"import numpy as np\nimport pandas as pd\ndata=pd.read_csv(\"..\/input\/stock-price-predictions\/Apple.csv\",parse_dates=[\"Price Date\"])","065042dc":"data.head()","f871a2f9":"rpass=data\nfrom statsmodels.tsa.stattools import adfuller\ndef adfuller_test(passenger):\n    res=adfuller(passenger)\n    labels=[\"ADF TEST STATISTICS\",\"P-VALUE\",\"LAGS USED\",\"NUMBER OF OBSERVATION USED\"]\n    for value,label in zip(res,labels):\n        print(label+' : '+str(value))\n    if(res[1]<=0.05):\n        print(\"Stationary\")\n    else:\n        print(\"Not Stationary\")\nadfuller_test(rpass.reset_index()[\"Modal Price (Rs.\/Quintal)\"])","d8a97f02":"rpass[\"seasonal difference\"]=rpass[\"Modal Price (Rs.\/Quintal)\"]-rpass[\"Modal Price (Rs.\/Quintal)\"].shift(30)\nrpass.head()","053586bd":"import plotly.express as px\nimport seaborn as sns\nplt.figure(figsize=(20,5))\nadfuller_test(rpass[\"seasonal difference\"].dropna())\npx.line(rpass,y=\"seasonal difference\",x=\"Price Date\",title=\"TREND AFTER SHIFTING\")","19695ef2":"data.shape\ndata=data.set_index(\"Price Date\")\ntrainset=data.loc[\"2019\":]\ntestset=data.loc[:\"2019\"]\ntestset","a55f5d64":"import statsmodels.api as sm\nmodel=sm.tsa.statespace.SARIMAX(trainset[\"Modal Price (Rs.\/Quintal)\"],order=(3,0,3),seasonal_order=(2,1,3,30))\nresults=model.fit()","87375f07":"import statsmodels as sm\nfrom statsmodels.graphics.tsaplots import plot_acf,plot_pacf\nfig=plt.figure(figsize=(12,8))\nax1=fig.add_subplot(211)\nfig=plot_acf(rpass[\"seasonal difference\"].dropna(),lags=50,ax=ax1)\nax2=fig.add_subplot(212)\nfig=plot_pacf(rpass[\"seasonal difference\"].dropna(),lags=50,ax=ax2)","3bd8b99f":"import matplotlib.pyplot as plt\ndata[\"Future Prediction\"]=results.predict(start=1,end=5661,dynamic=True)\ndata[[\"Modal Price (Rs.\/Quintal)\",\"Future Prediction\"]].plot(figsize=(20,8),color=['r','g'])\nplt.title(\"TESTING PREDICTED VALUE WITH DATASET\")","666bd222":"# Sarimax","20358b96":"# STOCK PRICE PREDICTIONS\n\n<img src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxAQEhMSEhMSFRIVFhcVEhcYFRUYEhUaGBgWFxUWExUYHyggGBsmHRgWITEhJS0tLi4uFyAzODUsNygvLysBCgoKDg0OGhAQGislHh8rLS0tLS0vNS0uLS0vKystLi0rLS0tLy0tKy0tLS0vLSs1LS8tLy8tMC0tLystMTUtLf\/AABEIAK4BIgMBIgACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAAAQMCBAUGB\/\/EAEMQAAEDAwIEAwYDBAgEBwAAAAEAAhEDEiEEMQUiQVETYXEGMkKBkaEUI3JSYrHCM1OCssHR4fAHJFRzFRY0kpOi8f\/EABgBAQADAQAAAAAAAAAAAAAAAAABAgME\/8QALREBAAIBAwIEBAYDAAAAAAAAAAECEQMSITFRBDJB8BNhcYEikcHR4fFCUqH\/2gAMAwEAAhEDEQA\/APp\/tDxavS1FCjSLWipTq1Hk6atqD+W+i0NDaT22T4h5jIwFkPaukXVGNpV3Pa4MpgCnFc3uYfBcXgQC10lxbsuhrKjWVA6xpqBlrHH3oc9viNGJjla4x2C5Wn0eme4tOnofmEF8AS4l733CJHK9t0gnJJmUGHE\/bKnT8em2m\/xqVJ7iHBhY2o2h+IFKoGvLvdiXAW5i6VsP9qmNuadPqPFZcalOKN7WMaxzqs+JaWxUZgEuzFsgrongulM\/k04LPDItEFltlpHUW8vphVn2e0ZbYdPRtLi4ixsEloaSe8tDWwejQNgg53EPaymxlR7WODWh5ZVfaKDzT\/pQIdeLRdlwA5TBK3jxoOo0q1NpIrVGMpXQLmveB4mCYFkuAMHYEA7bDuDaYvc80ad7wQ91okg2zJ87Wz3tHYKa3C6TmWAWAVBWFsCHioKpcOmXST3uPdB5Oh7Tax1GnUupg1X02tH4DVEUw5tVxj83\/mfcAllsZOxW7\/5l1P4ahVbRbUqPrGm8DlDwx1cVG02uNzKoFGbH7OdaSSCR36vCtO6mykabfDYQWNiA0gEAtjbBP1U0OFadgYGUmNDDLABAaec3Ad5e8zubig8rxD27ZTpNqh+ntNWqQXOtD6FCDUNOSLqpuaAO52wtji\/tNXoO1BIptY2lVfpmupVSK5p0TVDm6kO8MzDvyoDoYTJXo9NwyhTLnMpMaXXXQ0Cb3F759XEk9ytZvs7ohIGnowWlhFggtLPDIjzZyk7xhBxeJ+0lfSNq061TSeNbRNGqQ6lQmu97B4tN1QlobY52H8wBiCFA9qqlaka9B2mbTp0KVZ\/iuJFR1S8Ckyo1wFPmZb4nPJkBuM+g03BtNTIcyjTDg68GOa60suncm0ls9iQqtV7O6KqCKmnouBLyQWCDe4vfPcF5LiO5ndBlwTin4gVeUtNN7W+ofSp1mGOhtqAHzaV0lraPRMpGoWyTVf4jydybWsHyDWMaP0rZQEREBERAREQEREBERAREQEREBERAREQEREBERAREQaupq1Gu5W3C2QM5dnE7Dpuqhqa\/9WPqR8Udu0H5+Sz1ba0nwy3LQBJ2MmTEZx\/BV06epk3ObGYA23aR8M7XDf8A0pNZz1Xi0Y6H4qvJ\/Kx0EwZE4mMyIPbopdXrwCGA9+nxgYn92Tn\/AEWNWhqC55DxaS0tANsATImDHwmeudumH4fUhrxeHExbktgyZcYHaIaIHL5kqNk95Tvj\/WF7dTVMDw\/nOIn0+y2dO8uaC4QTuOy0X6au4OF9svkGS6G2keWZgxsNs9a2aXVgPmqDIcGdIl1wLiAOhLcdAFaImPVWbRPo6yLljSVycvgS343ZE05HccoqDfNw7SOorKiIiAiIgIiICIuZ4OpEQ5swbpcSHHEOAt5RI27ExnKDpoufTp6nmucyLXBsb3SYMxjp3U1qFcueQ8WEMtG0QecTG5HXpjtkN9Fy6en1MGXgnlnO4kSBjlxcJG5M4Rmm1NpDqgkhuZMYIuwAIxIxvPRB1EXJpaTVBxmsHNg29DJZAnGwIB\/tO3woOk1JEXgG0ib372ujefiLDM7AjbCDrooaIEf6\/cqUBERAREQEREBERAREQEREBERB5n2x05NTQ1PEqAN1VFvhhwFNxc6LngCXECQATHMcTBHiuCcRrtqy11Grr6rdW2rTFSu7V0KjG1XtdWYXWCjcxjGtsaBey0unP1apVZc1hLbzLmtMXG2JIHlIz5rGhVpvMsLSS0OJESQZtJPyP0QeD9k9fpKdekdNqLqB0d2uc+s5wbWL6LaJrmo78us66uC0wTEEYC0NLr3s4hdVfRfqTrX0BQ8Wt+LZScXNpVadMPDBRbSteW2EHmdddgfT\/DbnAyZOBk9ypsEzAmImMx2lB8z9i6rm6yhSa+nUqtbXbr6lPVvrirEW1a1Pai6+IaYIl7QLRK+i67WCk0uIccOIgEjlBOSBA26q9rAJIABO+N\/VZJKJz6Ob\/wCJOlosbkvaTebZYfhhsunPzELB\/GIbTIYJewPMuhrZa50F0fuOH0XS8Ju1ojbYIaLSZIExG3SQY+wVcT3U227uZqeM2fB+yACYdLgHDljbMeuFg3jbjnwsWsM3yee4AWxO7T54K65pt7DtsPolg7Dtt9kxbubb91Wj1IqtuG0kesHBHqIPzV6xp0w3AECSfmTJP1KyVoXjOOREREi+YcfZVov1bPHeaTtXpfxVSrVc1rKb6TzzOpx4dK\/wmkNtFsgkSSvp6xsGcDO+N\/Xug+XaLXUHs09PUvpM4cyvqabq1OtVbo69RrabqJFR7zbT5q4tLy2+lAnC7vCuL128NHhXVtTD\/wAO0kPr+A6vUp6bUPY5wc9opBrpJF1sTJXszTbFsC3tAj6LK0TMZ280HzDhX4YaLWmtp9Q8afU1PBbXcfEqVKgY1lO4PMvc8gEbS8Qveey\/CzpNJQoF1zmMAe6TzPPM8ielxMDoIXS8NvYbzsN+\/qskGmdb+aGEQ0wGuMyXQ8lsRjDCZ2Kp03Ey4sDmAEzfzTYbA8DbmwdwugWAmYE7TGUawDYAfL6quJ7tN1MdGmOIT4RtEPiZJlsie0Eec5VFbir2utFMO5iMP\/cc8btz7p2++y6LaLQALRAEDGw2geSnw27QM5OB13TE90xakf4uYOLPOW0wQGlzuaCIeWNwRm615H6VuaLWCrMDYA9es9wOocPktkNHYf8A5ssWU2tmABO\/8EiJ7otakxxGGaIiszEREBERAREQEREBERBRU0wc9j+rA4es91zq\/s\/Tc9tS4tIqOqQMZdaScbHl38z3XYUFByuE8Cp6cgg3RdbIGLrLiOxNsn9RXWREBFClARFCCUREBFAUoCLUGtBrmiNxTvcfV0Afx+y2gpmsx1RFonolERQkRQFKAigqUBEQoCKApQEUFSgIixbuUGSIiAigKUBFBUoCKulu\/wDV\/K1WICIiAoKKCgyRRlMoClY5U5QSoTKjKDJFTqdSyk0ue5rWjqT5TjucbLztH2jcKs1P6F7i2mLSHN5gGl3UC0OcZ2W2noX1Imax0Y6mvTTnFpenndcTivHvDfZSbc5rvzJkNiJta79rIzkDKr9pNS17BSaQZePEAPwht0HyJLPquIynHc7kkkkme5OSunw\/h6zG6\/5MNbXtnbX83S9nqrn6p73+8+m4mNhBpgAeQEL1DV5b2fEagf8Aaf8A3qS9QJWXjPPH0aeF8k\/VkijKZXK6QKViFKAVKxKlBKFRlDKAFKgSmUAqViVOUErFu5U5WLdygzRRlMoAUrEKcoBUrEypygwpbv8A1fytVi0a7qou8MZuzscWDuR1hYOdqoGG3SZ2iMRGfX5eaDooiICgrEP5i3sAfqXf5LIoJREQQpULzPE6hqVi5pjwiG0zuA4ZeY8zynyatdLS+JOMstXU2R0y9OvOcS4nWbWeaZ5acNsgEPMBzs7g5tEbEHda+prVqpaajwLTLQwFsOiA6SSZgkRssWUgMfPuSSZJJ6kldWloRTm2Jc2prTfiMwy4jrTqSIjwWmWSDc4xFxnYZMCPNa7qYO4lbFqWroiYrGI6QymJmcz1loUdE1ji5uJER03mf4D5BbFquDVNqtN5nqiKRHRZwYRqGfoqD7sP+C9M1ec4aIr0\/wC2P\/rP+Cv49WqB9NtN5YbajnEAHq0NBB+f0XHrU+JqRHy\/d0aV9mnM\/P8AZ3UXN0XEhWAEOa6BcCCM\/EGk+8AeoxkLZBXJas1nEuqtotGYS4ySpYYUFSwZVVkVCVLHQVD9ygQbCFaytpuQZhSoClBBUqCpQFi3crJYt3KDJERBAUqApQQVKgqUFdLd\/wCr+VqsVdLd\/wCr+VqsQEREGm13\/MPHekwj5OqXf3m\/VbRlcfjrQHsq9aUOB7AOl\/1AK7J6LXUrxFu\/6MtO3Nq9v1Mplc3iHEKjKgaxocA254mDzXBsHYQWmfJc3R1atAhzqhc1zoe05a24kyw9Odx36GOgVq6EzXOforbXiLYx9UV+JV6wAZ+UM3He9pwLDu0gSfIxuoZSDQAAABgADAU6CmRTpg7hjZ+glX2rrmYr+GscOWsTP4rdVNqi1X2pao3LYU2parrUtTcYUWqbVdalqbjDWe80y2qM+GbiAJJbs8AdTaSR5gKbzVe+oQ4XGGhw5g1uIgHvcfmti1ZUmpNoiM+qIrMz8lbL2EOABjcbEg7gHvt9FbVquqEHLAJiDnPfpt67rOEtWE2iZzMct4rjjK\/h7jaW\/smPlu37ED5LcpDK5TazqbjDSbhjsCP2uwg\/ZW1eKNFNxYWmrDQGzs5+Ghw7TM+TSs507Wnj1XjVrWOfRv1RlYlclmuqPLar2hjR8M5DTMuf0B93GYg5yurTeHCQZGR9DB+4Vb6c06raepF+iYWbCB1+ywlFm0bAlMrGlss0GJlTlCpQRlYt3KzWLdygnKZUogodqWB4plzQ90lrepA3j\/fQ9ldleXYx9SahfDy4OY5rRLWiQ0AGQcF3\/uK6dDi9oiuC0ge+0E03R1IElnoceZXTfw8x5eZ9f4c1PERPm4j0\/l1DK5dXj1O0lgc9wc5rWgQXFoBnJw3Lc+YVes40LarWgh0ObRdu17\/dgR1DvqAStalpmsi0AEANmMwNhKnT0YiM3hGprTM405+rqtuqAuY+A4hwI6g0xHfqWn5Kt2n1EQKg95xknME8o93oP9ndWcHpWU7ZkA48hAgfIY+S3lz2iImYh0VmZiJkREVVnP4kwOMHILYPoZlcXTamqx4FMX+CKjHNL4997nMkmZcGsZv+2u9rG5Hotez\/AHhdeneIriYy5NWkzbMThp6TTvaJe8vdAEkZhswD33OVZWoNeC1wkHcffotmxLFM3nOURSIjCgMiFNqtsU2KNycKbUtV1iixNxhValqusSxNxhSGparQxTYm4wptQNVpAwJ32QNUTZMVYQUVlqWquVsK8rB1FriHFoLmzaYEid4PRXhqWpFsE1yqLMbKprnUi2C0UpF4IyJESHTgTB27raLVDmA4OVO\/ujZ2azdcfELwKjqUlgAabtmkOtdHxXCfTourSexzQ4TBAInzE5WpC5OlFVoqUnk89VpZ2DGuII9Cym3\/AORTsreOOMYRvtpzzznPv7vUNKlcOm11J7Hl7nNusgxDWvwAO8OtyenouxSqtdNrgbTa6CDBG4MbHyWN6beY5htTU3cTxLMqViQqtVqmUgC91oJgT\/vbz6KkRMziF5mIjMr1i3coxwOQZyR8wYI+oKhoyVCWahxjK5Wp4g57g3T1KboBNR3vNb0aMfFuY\/d85WjqOI12sLRLjTDqdQluXOdApOadiYIc6P2lvXw9p9+\/cue3iK1z79\/wz4c38qn+hv8AdC2CxZ06VoAGwAH0ELOxa2vmZlnWuIiGuykGgNaAAAAANgBsAsrVaWKbFG5O1taDY+v8rVsrnjSCoxzS5wydjG7LekHqodwuQB4jsEnzMxv9PquW3V1V6OiiIoS09XUAe1v7TSRnsRj7\/ZVUnXCfMj6Ej\/BaXGK5bqKZ6NaDHTLiCfsPorOF6trg4SOV1Q+Vt7oMrSLcM7V5btqWqTUbcGfERI9P9hWWqdyuFNqm1NM65rXEZIlW2puMKrVFqutS1NxhValqttS1NxhSGqbVaGpam4w06zeen6u\/ulXBq1uJaptJ1O6dnux5NiPXmC3sbdcx8jlNycK7UtVtqWpkwpDVNqtDUtTJhSWqbVZAIkbKbUyYVWrB1EEgxkAx84n+C2LVhWe1glxgJuRtU1aAe0tds4EHpv5jZV6RraVW0Ya6lO+B4bskk9T4m57LdDVq67h7K1ocTAkEDZwMS13lIB+SvW0eW08K2rPmrHKrU651aW6d3uE3ujFzTAp5HUiSe0RvKx09B7y99cC4ywAElgZAm0Hud\/QdluafTimxrBJDQGydzECT5q21TviOKx9\/VEUmebT9vRp+z9LwmPpST4dQiTubmtqEn5vKnieokOosy+pDd4ta4Ol\/0a6PMBaXErRULP66xrxktJD6QONvcefUBXaThDKdU1ATgFrR0a02Q0eTSHR2DyFaYrM\/EtPM8\/f+1Im0R8OscRx9v6bgYBgYHRTarbUtWO5ttUhqm1NM65s+Z+xI\/wAFbam4wpLVNqtLUtTcYTpfi9f5Wq9a1Oo1lxcQ0XbkgD3QevkD9FmdVT3vZGR7w3Bgj5FZy1hciIoS4fG9FUfUDmtJFgEyN7iepXMZw2u0AWOEuPUZEvdG\/oV69c\/WU9SXzTc0NMCD0gE3GQdyYIHYZzgOLpNDqGQbHS0kgSI95zgN9sj6rbqP1jgQacAxMESN5+L0XcpAhoDjJgSe56lZoYea0w1dNtNgYeVu3LmBEEz5hbn4jVZPgzjAuG8d57\/xUjT6xuQ9jsbE7xMDI6yJK67Rjv590RhzDqa\/\/Tnz5xnB27ZhUHUaqTFLJAxIx0JGfmu2ub4Wqu95gbJJzJ6w0S3bb7onCp2p1MCKGZbJLhEYuIE+v0Vfjav+qnMnI7bb7TldtERhxjqtSYijsefmH7M4z3jurTqq\/wD07t\/227QrdLS1AdL3NtlxgEk5Jge6MBb6GHmeJaXUVnA+EQA1wAlvWPPy+yjTUtUC0hriGl+5B6xG+2PsvQaxj3Nhjg1xjJ6dduvb5rX0w1PifmW2R8JETjuAZ69kMNCrU1hcCKcWziRDpmLhd6fVX\/iNTn8iexuHn0n0+q66r1DSWuDTBIwZj79ES4LDqzUvs2FsSIEwT16w0q5lbWCZpg82NtuXHvfqWzp6WqD23OYafWN8BogkiTm7r\/kumg84watrQC0gNIiLdhbE59VNL8baGlp90AmWyCLZMzn4l19dSqujw3AEA7kwDiCQBzCJEHurNGx4bzmTJO84Ow2H8EHLp19WGtHgy4Bt0kScC7rjqtXXUtXUBlhwDAlsTJLZz8vkvSrU19Gq600nBsbgzBy3t5A\/w6ojDnnUauBFIHHcc2\/njotfVUtU9wf4ZFrgWiWwAD69l2dEysJ8VzTtbHTvJgStpEvP6irrMkMgYA90xzHz3gj6LMVdYCPy5HWY\/ezv6fRb2toVy4mk5reUASTE808sR1bn91bOmDwDeQTJiNo6dBH39URh5vVaDUVHte6mbgQZBAiA6CId+lbDX62TynED4exk775n5BdvWsc5jgyLjtzFsZ3luf8APZc9+i1VpAq82YlxjdkEwAejzGwkDZTmTbCBqNVLfycQb8jJkRGcYuVNF+rADXU5FsEyJnlEkznFy7yp1VNzmkNMExnOMids7SoMOLoHamnLfCLmgwMtBGxPX1+q2xqq8\/8ApzGPjHzH+qt09DUCpLntNOXYzNvwzIydsz33XQQw5H4uuJu05jEc4+\/zUUdRqRN1EnOOYAkR698LZ19Cu5wNN4AgYJO4JPY+Sv0TKgb+a4Of1I28owEMNXQ6UuY7xQWlz3OEOMiW24IOMEq48MpREGJJwSMnc4W4iJEREGlxbidPTU3PedmuLWiL32iS1gO5XM4T7XafUODeamXNpObeWgONVtzWNg+9C2+NcKOoty2G5EjIPdrv8NvVcjXeyTr6TqDqdPwmsa0uaXQWANDg04JhrRJ7dN1TS1M2vF6ziOnzX1prXQiaRm+f+OvxL2j0mnf4VSr+ZF1jGPqVA39osptJA8ytR3ttwwCm78VTtqyGEXEGCAQSBykEiZiFpH2a1NHXV9bpqtEnUNa2oyqxxtLQ0AscwzHKMH\/KKa3sZU1FWjU1dWlVa2lWp1mtpeGHeIIFgBNtuDO85wrqO3xD2o0Wnc9lWsGup2Xi15jxASzYGZg7JQ9p9E\/xIrsaaTb6oeHU3Mbjmc2oAQMjPmO68XX\/AOGupe2oHapjy7wQxzmOuso3BofBybS0SOyvrf8ADipVGqv1DWiu1gDWNqPAcxzXNc59V7nuHKRbIGfIIPU6P2t0FaoymysL6n9EHMqMFT\/tOe0B\/wDZJXcXnuHcO4gDQFWtphSpNAIp0TfUgADmeYp7DYL0KAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiD\/9k=\">\n\n\n<br>\nI have been working in a Company where i have to give stcok price predictions for the upcoming year for differnent commodities,so i decied to make my own Notebook in it.\n<hr>\n\n## What is stock price predictions?\n\nStock market prediction is the act of trying to determine the future value of a company stock or other financial instrument traded on an exchange. The successful prediction of a stock's future price could yield significant profit.","a0592bb6":"# Splitting and scaling of Data\nFor stock price predictions,we have to split the data according to which year or month or day,for the time period we want to predict","49d9b751":"\n<img src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxISEhUSEhIVFRUVFxcXFRcVFRUVFxUVFRUXFxUVFRUYHSggGBolHRUXITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OFxAPGi0eHR0tLS0vKy0rLS0tLSstLS0rLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAKkBKwMBIgACEQEDEQH\/xAAcAAADAQADAQEAAAAAAAAAAAAAAQIDBAUHBgj\/xABFEAACAgECAwQGBQcJCQAAAAAAAQIRAwQSBSExBhNBUQciMmFxgRSRobHRFSNSVHKSkyQlNEJzgrPB4URTYmN0g7LCw\/\/EABoBAQEBAQEBAQAAAAAAAAAAAAABAgMEBQb\/xAAqEQEBAAIABQIEBwEAAAAAAAAAAQIRAxITMVEhQQQFInEjMlJhgZHBFP\/aAAwDAQACEQMRAD8A8yRRKKRH6+GmaxMkaoNGiiSiKtFImJSI21KRKGFi0MQw3FplIlFIjcVEtEIuJG4pIuhIYbAmihAQQy2SwzUEsolhhEmSypElZqWSymSyudRJkNlyIYZQ2S2UyWVmpJmUyJBlDYhsRUJisGAYpoZKKQaiky0Zo0QaXRRI0RVopkopBpoikSikRqKRRKGg3FouJmjREbikWmZ2WmRuNEUmZ2VYVQmLcKwuw2ZtlyZEgzakllMmQZqJEspksrFSSyiWysVMiGXIhhlDJZTJZWalkMtmcgykTGxMrKWAMQZqkCENBYpFwMyosNNSkSiiNKRUSEWg1GkWUQiyNRRSJQ0w1FopEWOyNxomUmZopMjUWmVZFgFXuBsgLBs2xAyWwUNktgyGVkNktjZLKxQSOTJYYqWyGUyGESyWNksrFDM5FszbCVLExiKyQWABgDQhhqGikSNBprEoiJSZFWikyEUg1GllpmSLTI0uykSh2GotMZIWGpWg7Isdka2tMdkWAXa9wNkX7wYNm5CsViCGyQbFYTYbE2BJWLQyWxyM2wyGQxsllSkyWNibDKZMzbKZLKyQmMlhKAAlhgxoQwpopHI0XDc+a+5w5Mij12RcqvpdHKXZ3Wfqmf8AhT\/AHUxnpa65GiN58L1EYPJLDkjCLpzcJbU09rTfRc+Q8XD8zxvMsOR41d5FB7FXW5dOQa58fLEpGmj0mTK9uLHPJKrahFyaXm0vAnJgnGThKMozTpxkmpJ+TXWyNTKb0SZaZtq+H5sKTy4cmNN0nOEopvyV+JS4bn2Rydzk2SaUZ7JbZOTqKUqp2+QXnx77ZRY0aarRZcTUcuKcJS6KcXFvnXJPrz5F6rQZsSTy4smNN0nOEo2\/JX1Iszx8skxnMhwTVNWtLnafj3U\/wONqtPkxS25IShKrqacXT8aYanExvpKlMYYccpyUYRcpPkoxVtvySRzvyHq\/1XP\/AAp\/h7gt4mOPe6cJMdlz0mSM+6ljmsnL1HF7+ater16BqtHkxNd7jnjvpvi438L6hepj5ZgmcvBwnUTipw0+WUWm1KOOTTS8U65mOs0eXFSy45476b4uN15X1B1Md62ybJCzkY9BmlB5I4skoRTcpqLcVXW5dOQW5Sd3HbE2baTSZMtrFjnka5tQi5NJ9G0jNYJufdqEnO9uza9279Hb1v3BnmnbaGybOW+F6jf3fcZd9btndy3bbrdtq6vxIhwzPKcsccOWU4e3BQk5RvpuSVr5hjqY+XEbIZ2T4Bq\/1XP\/AAp\/gcWGgzSm8UcWR5I+1BQk5R\/ailaKnUx8uM2S2dhk4Jqo9dNmVtJXjkrb5JdOrONqNFlhNY54pxnKqhKLUnudKovm7YZ6mN7VxmTJnYvg2p3bPo2bfW7b3ct2263VXQzhwXUyUnHT5ntbjKscntlH2k+XJoM9THzHXtknJ0Why5m1hxzyNK2oRcqXg3RktPNz7tQk5247Em5bl1W3rfIpzTyyYjsp8A1iTb0udJJtt4ppJLq22jrAzzTLtQKxsQDAQAfU9i+1uTQ7oQxRn3soXubVVy5V8T0b0idsMugWFYscZvNGauTa2uKVNV16\/YeLaP24ftR+9Ho\/psj\/AEP4Zf8A0D5nxXCwvGw9O\/d2XCuG5tXwFYcbTy5LdylSb7\/dJt\/BMvJwjLpOBZ8OZRU1HK3te5VKVrnRhpuI5tN2eWbBLZkjW2SSdbs6T5NV0bDT63Ln4BqM2abyTkszlJrrUklyXJfBFeTLmnNJ+XmR6G9Eo4c+qlyTaxpvlSit03b8LlFX7jqvSXw\/uuJ4sq9nUd2\/7+OUYS+zY\/mfUQ1uLhXDNLDPj3KbjHJHbdvInkyOn1oy7bbNdodPrMKbjDNCadU1Bz7uaa8Ka+wns31suveJ7X0fTdqODx1mmngdbmt2N\/ozj7L+F8vmfM6iEo8J0UZJxlHLpYyXRqS1CUl9aZp2847LRazQ5eexrLHKufPG3jv5rr8js+3M1LS4pxdxlqdLKLXNNSzRaafjZa4Tmkk9rd\/yrinAO\/4jh1E1ePBjbV9JZXP1f3a3fUfFw49HX8awW09PinKOJPnGc4xk1N+dySr4I+r7Q9ovonE8GPI6xZ8bjK+kZb\/Un8LdP4+4+U4z2KlDicMeJvFj1Dnkxzin+byQi5yiq96tfH3B2+H1v8S6mrp9xxTV8TjkksGm088f9WU80oyfLxjt5czyDtFm1GTV5Z6mOzLaThdqCr1VF+K8b9567oODcQhOEsnEHkhFpyi8EE5x8nKrXxPNfSVrseXiEu7alshGEmuacldq\/GrJXX5fZjxpPS\/vHG7Hv+Xab+0X+Z65xfPr45EtNhwTx0reTLKEt1u1Si+XTmeRdjP6dp\/7Vf5n1HpH7S63TaxYsGd44d1CTWyD9ZuVu5JvwQnZ3+YcO8Tj4Y499f67DgOo+jaXV8U1EVPPPJkuvBQn3cccJPpHdH7jTgHGVxjTZ8OowxhKKtU7XNPbOLfNSUkdf2J1eLWaPLw\/UTSySc2m2k5rJLfuivGSm5cvgdjp9Fh4Jpc08mXflyKoppRcmk9kYx69XbZXkzw5MspluZyzTk8C1WoxcIwS0+Hv8qjShe1Nd7JSd+5KzDtPky5+EZcmswLDlhcowtS2yjJKMk\/C+ZxsHFcmm4HptRD2oPG2v0k88t0fmn9pHpJjPV6DFqtPOTwJqeSC6OL6OXjcXyaDnjMupu+n1d3msJWj0P0U6tTWfSz5xlHcl5qS2TX2r6zzpHddjeI9xrcE30c+7l+zl9X7G0\/kZj7\/AMXw+pwMsffW\/wCn3vo04O9Ji1EsvJ988Vvl6uOWyL+bf2i0\/Z9rjc81eosXff8Acl+b\/F\/Ifpc4i8OkhijynlyxflyxNZG\/3oxO813Hox4fLXf8jevfNqoxv3zaXzNPz94nEu+J+r0dZ2XyLLq9drZP1FJafG30UMPPI0\/Ld9x03bHjGThmveox4ozWqwxTUm0lLFL1mq8ecTn4tZj4XwzTLUQ397OKyRrdueXdkyyp9aX3nE9I3d63hcNZhTccUt8bVNQlePImvDwf90Lw5+JOafT2dv217WZNFpsGaGOM5ZpU1JtKP5vdy8zgPif5L4ZDVd2smfUSjPJbrfkzXP1pVe2K5JHXelpfyHRftr\/BZ2HC8WHi\/DYaaWTZkxbFJKnKMsfJS2vrGS8feRZw5OHMvbm1fs+fw9tc+v1WkxyxxxRjnjJ7JSe500k7XRW2fQdquymp1HEsOqx7O6x9zuuVS\/N5JSlSryaOJh7ArR5cGoWeU9ubGqcNvtSUevz+wnttx7VY+K4NLjyuOGf0dzgox9bdme7m1fOl0ZXTK48+P\/P4r6qcv51X\/Sv\/ABRdkZUtW26X0zP16e0GSL\/Ky5f7J\/8AX\/U6qK\/m\/i3X29d\/4yDx95r7NuzfZ\/6JxHU7FWLNjjOHlF73vh8n9513ZDTY9Nj1\/EJQ3z77UKPS1DHkklCLfs7pdX8PI7r0edoPpukjKTvLjqGTzbS5S+a+2zoexuvw6ha7huaSjKWfUqKunOGSc921vrJO+XUOtuf1b7zW\/s43aDi3GdRpsuJ8O7qM41KcckW4w6y8fFWrPKo9D9G49FlxaSePJk73bilGMtm17VClu5u3y6n5uw9F8CPb8vzluUkaAAg+oYABAIvJklJ3KUnXS23XwsgCpZL3aPJJra5S2\/o26+roV3kq27pbfJSdfV0MkygvJjfZc8kpVulKVdN0m6+FsrvJVt3SryUnX1WZ2NMLyY61po5OTTlKUq6bm3X1stzk0lvlSqludKulK+RmpDjIi9PHWtLm23bbk\/8Aibl95byzu98+XT15cvDlz5cjNMYOTHw0eSb65Mn78vxIxQUeS5BYw1jhjO0aKbXNNryadP60S7bttt+bbfy5k2CYbslu1ypkSgm7bbfm22\/rZVhYLjjfWxUpNrbultX9Xc9vn06BvlW3dKvJSde+1ZNhYS4Y+FJisVibDR5Lk7lKUmum5t159QnKTW1ylt8tzrzXK6JEGOTHWtHkk5VulJ10UpN18LYOUq27pbfLc659eV0S2DYZ5Mda0eSTlW6UnXTdJuvhbJ8bVp+a5P60FicgcuOtaKWSXjkn7vXl4dPEmUne5yk5ebbb5dOYmS2Vnp4TtFvPO92+e7z3SuvK7Jc5U1vlTu1ufO+tq+YkJsM9PDwcJyj7MnH9ltfcZ15\/Hn1vzKTJBccd70t58n+8n+\/L8TNIYBMcMZ2gAADQAAAAAAAaYgAtDJsdhrakxkjsKuMioyM0CkFbJgZ7yrIqh2SmAFWFisAuzsBWKwbWIQBNmITYrApsmyXIlsIqUiGxAUAkFiCG2IQgxaYgAAEMRAAAAMAAoAAAAAAAGmIALQImxphqVVjsmwsLtQ7JsdhVWG4kANLBSM7HYF2G8yBA20cgcyAAe4HIQgHYrEFhAFiFYS0xAIMgAAAABEAAAAwAKKAAAAAAAAAAAAAAAAALHYgAqxoiwsLtdjshDsLtSYJk2ANqsLJALtViFYWE2YhWFhNmIQBNmIAAAsQAMQAQAUAwFQ6ACgCwAAAAAAECIGACKGAAwAABgAAAAAAAAAiB2FgIodhYIGAWACIGAgAYCAAAAAAAYCGCBFAADAQAAAACA\/\/Z\">\n","de866fba":"# Loading and importing Data"}}