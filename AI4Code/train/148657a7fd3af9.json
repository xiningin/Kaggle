{"cell_type":{"7a67d979":"code","a600421f":"code","675e4a58":"code","2725d3d5":"code","95542d66":"code","8761f523":"code","ffe245e2":"code","aeb3d7c6":"code","e311ff6a":"code","3f04a727":"code","3fe3755c":"code","d61717c7":"code","5c7db85f":"code","dd28c800":"code","4a15ca27":"code","216343d3":"code","e2680f22":"code","97616f04":"code","27f30aae":"code","48eae84a":"code","4b376a4c":"code","b111be8a":"code","e1d1d87a":"code","c3259713":"code","950fcdbe":"code","238d7c01":"code","a590be14":"markdown","a898aa8e":"markdown","55b0a9c1":"markdown","e9609a44":"markdown","c4dc9671":"markdown"},"source":{"7a67d979":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport fbprophet\nimport datetime","a600421f":"df = pd.read_csv('..\/input\/ethereumpricetill24072021\/ethereum_data.csv')\ndf.head()","675e4a58":"df = df.rename(columns = {\"Unnamed: 0\":\"Date\"})\ndf.head()","2725d3d5":"data = [df['Date'],df['close']]\nheaders = ['ds','y']\ndf_ts = pd.concat(data,axis = 1,keys=headers)\ndf_ts.sort_values(by='ds',ascending = True)\ndf_ts.head()\n\n","95542d66":"plt.figure(figsize = (10,6))\nplt.plot(df_ts['ds'],df_ts['y'])\nplt.show()","8761f523":"df_ts['ds'] = pd.to_datetime(df_ts['ds'])\ndf_ts.info()","ffe245e2":"model = fbprophet.Prophet()\nmodel.fit(df_ts)","aeb3d7c6":"past_dates = []\ndates = list(pd.date_range('2021-06-21',periods=20).strftime('%Y-%m-%d'))\npast_dates.append(dates)\npast_dates","e311ff6a":"past = pd.DataFrame(past_dates[0],columns = ['ds'])\npast['ds'] = pd.to_datetime(past['ds'])\npast.head()","3f04a727":"past_forecast = model.predict(past)\nprint(type(past_forecast))","3fe3755c":"forecasted_past = past_forecast[['ds','yhat','yhat_lower','yhat_upper']]\nforecasted_past","d61717c7":"pred_dates= []\nk = forecasted_past['ds'].values\nfor items in k:\n    x = str(pd.to_datetime(items).date())\n    pred_dates.append(x)","5c7db85f":"up = []\nlow = []\nadj = []\nfor dates in pred_dates:\n    upper_limit = df[df['Date']==dates]['high'].reset_index(drop= True)\n    lower_limit = df[df['Date']==dates]['low'].reset_index(drop= True)\n    adjust = df[df['Date']==dates]['close'].reset_index(drop= True)\n    up.append(upper_limit[0])\n    low.append(lower_limit[0])\n    adj.append(adjust[0])","dd28c800":"plt.figure(figsize = (10,6))\nplt.plot(forecasted_past['ds'],forecasted_past['yhat_upper'],'-g')\nplt.plot(forecasted_past['ds'],up,'-b')\nplt.legend(['Predicted','True'])\nplt.title('Upper Ranges')\nplt.show()\n","4a15ca27":"plt.figure(figsize = (10,6))\nplt.plot(forecasted_past['ds'],forecasted_past['yhat_lower'],'-r')\nplt.plot(forecasted_past['ds'],low,'-b')\nplt.legend(['Predicted','True'])\nplt.title('Lower Ranges')\nplt.show()","216343d3":"plt.figure(figsize = (10,6))\nplt.plot(forecasted_past['ds'],forecasted_past['yhat'],'-b')\nplt.plot(forecasted_past['ds'],adj,'-g')\nplt.legend(['Predicted','True'])\nplt.title('Adjusted Range')\nplt.show()","e2680f22":"from sklearn.metrics import mean_absolute_error\nmse = mean_absolute_error(df_ts['y'].iloc[-len(forecasted_past['yhat']):],forecasted_past['yhat'])\nprint(mse)","97616f04":"plt.figure(figsize = (10,6))\nmodel.plot(past_forecast)\nplt.show()","27f30aae":"plt.figure(figsize = (10,6))\nmodel.plot_components(past_forecast)\nplt.show()","48eae84a":"import datetime\nlast_date_on_data = datetime.datetime.strptime(df['Date'].iloc[-1],'%Y-%m-%d')\ntodays_date = datetime.datetime.now().today()\ndays = (todays_date-last_date_on_data).days","4b376a4c":"future_dates = []\ndates = list(pd.date_range(last_date_on_data,periods=days+20).strftime('%Y-%m-%d'))\nfuture_dates.append(dates)","b111be8a":"future_df = pd.DataFrame(future_dates[0],columns = ['ds'])\nfuture_df","e1d1d87a":"future_forecast = model.predict(future_df)\n# print(type(future_forecast))","c3259713":"plt.figure(figsize = (10,6))\nmodel.plot(future_forecast)\nplt.show()","950fcdbe":"plt.figure(figsize = (10,6))\nmodel.plot_components(future_forecast)\nplt.show()","238d7c01":"plt.figure(figsize = (10,6))\nplt.plot(future_forecast['ds'],future_forecast['yhat_lower'],'-r')\nplt.plot(future_forecast['ds'],future_forecast['yhat'],'-b')\nplt.plot(future_forecast['ds'],future_forecast['yhat_upper'],'-g')\nplt.legend(['Day Lowest','Adjusted Closing Price','Day Highest'],loc = 'best')\nplt.show()","a590be14":"# Making an outsample forecast","a898aa8e":"**Creating Model Instance**","55b0a9c1":"**Plotting to show the relationship between Predicted  and Actual In Insample Data**","e9609a44":"# Making an Insample Forecast","c4dc9671":"# ****Reading the dataset****"}}