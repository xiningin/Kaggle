{"cell_type":{"093f84fb":"code","a12791e1":"code","47759abf":"code","dfc0de0d":"code","7b08564d":"code","bac24e81":"code","2bffdaa5":"code","35299705":"code","534d85db":"code","a9cc1d2a":"code","22e2743d":"code","fc3dd58c":"code","af3c755f":"code","2b369e63":"code","cdba09c7":"code","29466c50":"code","657bcd9a":"code","7b2d7192":"code","2b128e52":"code","431e4ff8":"markdown","a47c95a3":"markdown","0ac0361a":"markdown","9986edc9":"markdown","4bfba594":"markdown","255d2a44":"markdown","690910e8":"markdown","c031ddee":"markdown","291e14c3":"markdown","41a6e6ca":"markdown","d3243420":"markdown","59c7ee89":"markdown","dcda8b8a":"markdown","d4f025bc":"markdown","524a261d":"markdown","96be9b4b":"markdown","6c9e2b33":"markdown","b3aad2ea":"markdown","ee1351e7":"markdown"},"source":{"093f84fb":"import numpy as np\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn import metrics\nimport seaborn as sns\nimport plotly.express as px\nfrom mpl_toolkits import mplot3d \n\n\n","a12791e1":"df=pd.read_csv(\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndf.head()\n","47759abf":"df[\"good quality\"] = 0\ndf.loc[df[\"quality\"]>=7,\"good quality\"] = 1\ndf=df.drop(['quality'],axis=1)","dfc0de0d":"df.head()","7b08564d":"df.describe()","bac24e81":"df.isna().any()","2bffdaa5":"X=df.values\nx=X[:,0:11]\ny=X[:,11]\nprint(x.shape, y.shape)","35299705":"fig = px.box(df, x='good quality', y='alcohol', points=\"all\",color_discrete_sequence =['red']*len(df))\nfig.update_layout(title_text=\"Quality = 1 Quality =0\")\nfig.show()","534d85db":"fig = px.box(df, x='good quality', y='sulphates', points=\"all\",color_discrete_sequence =['blue']*len(df))\nfig.update_layout(title_text=\"Quality = 1 Quality =0\")\nfig.show()","a9cc1d2a":"fig = px.box(df, x='good quality', y='volatile acidity', points=\"all\",color_discrete_sequence =['green']*len(df))\nfig.update_layout(title_text=\"Quality = 1 Quality =0\")\nfig.show()\n","22e2743d":"x=preprocessing.StandardScaler().fit(x).transform(x)\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2,random_state=4)\nprint(xtrain.shape,ytrain.shape)\nprint(xtest.shape, ytest.shape)","fc3dd58c":"from sklearn.neighbors import KNeighborsClassifier\n\nkmax=7\nmean_acc=np.zeros((kmax-1))\n\nfor i in range(1,kmax):\n    kn=KNeighborsClassifier(n_neighbors=i).fit(xtrain,ytrain)\n    yhat=kn.predict(xtest)\n    mean_acc[i-1]=metrics.accuracy_score(ytest,yhat)\n    \nplt.plot(range(1,kmax),mean_acc,'r')\nplt.ylabel('Accuracy')\nplt.xlabel('Number of neighbors')\nplt.tight_layout()\nplt.show()","af3c755f":"print(\"The best accuracy of KNN was\", mean_acc.max(),\"with k=\",mean_acc.argmax()+1)\nkn=KNeighborsClassifier(n_neighbors=1).fit(xtrain,ytrain)\nyhat=kn.predict(xtest)\nplt.figure()\nplot_confusion_matrix(kn,xtest, ytest,normalize='true',cmap=plt.cm.Blues)\na1=metrics.accuracy_score(ytest,yhat)\nprint(classification_report(ytest,yhat))","2b369e63":"from sklearn.linear_model import LogisticRegression\nLR1=LogisticRegression(C=0.05,solver=\"liblinear\").fit(xtrain,ytrain)\nyhat1=LR1.predict(xtest)\na2=metrics.accuracy_score(ytest,yhat1)\nplt.figure()\nplot_confusion_matrix(LR1,xtest, ytest,normalize='true',cmap=plt.cm.Reds)\nprint(classification_report(ytest,yhat1))\nprint(\"Logistic Regression(liblinear) Accuracy : \",metrics.accuracy_score(ytest,yhat1))\n","cdba09c7":"fi = abs(LR1.coef_[0])\nfor i,v in enumerate(fi):\n    print('Feature: %0d, Score: %.5f' % (i,v))\nplt.bar([x for x in range(len(fi))], fi)\nplt.show()","29466c50":"from sklearn import svm\nsvmM3=svm.SVC(kernel='rbf')\nsvmM3.fit(xtrain,ytrain)\nyhatsvm3=svmM3.predict(xtest)\na3=metrics.accuracy_score(ytest,yhatsvm3)\nplot_confusion_matrix(svmM3,xtest, ytest,normalize='true',cmap=plt.cm.Reds)\n\nprint(classification_report(ytest,yhatsvm3))\nprint(\"SVM : \",metrics.accuracy_score(ytest,yhatsvm3))\n","657bcd9a":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()\nrf.fit(xtrain, ytrain)\ny_pred=rf.predict(xtest)\nprint(classification_report(ytest,y_pred))\nplot_confusion_matrix(svmM3,xtest, ytest,normalize='true',cmap=plt.cm.Reds)\na4=metrics.accuracy_score(ytest,y_pred)\nprint(\"Random Forest Classifier accuracy: \",metrics.accuracy_score(ytest,yhatsvm3))\n","7b2d7192":"fi3 = rf.feature_importances_\nfor i,v in enumerate(fi3):\n    print('Feature: %0d, Score: %.5f' % (i,v))\nplt.bar([x for x in range(len(fi3))], fi3)\nplt.show()","2b128e52":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nclassifiers = ['KNN', 'Log.Regression', 'SVM','Random Forest']\naccuracies = [a1,a2,a3,a4]\nax.bar(classifiers,accuracies,align='center', width=0.4,color='orange')\nplt.ylim([0.85, 0.93])\nplt.show()","431e4ff8":"**Random Forest Classifier:-**","a47c95a3":"Looking at the data and its features :-","0ac0361a":"Scaling the independent features","9986edc9":"Hope this kernel helped. Cheers !","4bfba594":"Checking if there are any missing values or null values :-","255d2a44":"How the amount of sulphate varies :-","690910e8":"**Logistic Regression(with a linear solver):-**","c031ddee":"The impact of each feature on how the wine turnsout. We see that the level of alcohol, volatile acidity and the amount of sulphates has the most effect on how good the wine is.","291e14c3":"**K Nearest Neighbors :-**","41a6e6ca":"# Importing all the required libraries","d3243420":"# Visualizing how the key independent features defer for good wine and bad wine :","59c7ee89":"How the amount of alcohol varies :-","dcda8b8a":"Accuracies of the different classifiers :","d4f025bc":"The impact of each feature on how the wine turnsout. We see that the level of alcohol, volatile acidity and the amount of sulphates has the most effect on how good the wine is.","524a261d":"Splitting the data into train and test set","96be9b4b":"Assigning independent variables to x and dependent(target) variable to y.","6c9e2b33":"**Support Vector Machine with a rbf Kernel:-**","b3aad2ea":"How the amount of acidity varies :-","ee1351e7":"Instead of classifying the wine into one of the 5 distinct values,lets classify if a given wine is above 7 or not. This will give better accuracy to the model and kinda does the job."}}