{"cell_type":{"8fa01e1d":"code","bdb8ba11":"code","f4b672a3":"code","d26e6be3":"code","3bfaac37":"code","2f248ea6":"code","8c9b3da7":"code","2d3ffb51":"code","92573d42":"code","d244d3b8":"code","ae0f55fd":"code","aebd6da1":"code","5e5c7d88":"code","52bffdd4":"code","fde5b5b9":"code","280c53a9":"code","66e86e3c":"code","d89b3cfa":"code","2fb343e3":"code","3669e8b8":"code","20fcec48":"code","7a1abc4d":"code","08beca63":"code","34ed419f":"code","39f1af58":"code","faa4bfc6":"code","60f5120b":"code","2fd4cf48":"code","6f2d2a39":"code","247f4593":"markdown"},"source":{"8fa01e1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","bdb8ba11":"df = pd.read_csv(\"..\/input\/players_stats.csv\")","f4b672a3":"df.head()","d26e6be3":"df[df['PTS'] ==  df['PTS'].min()]","3bfaac37":"df.dtypes","2f248ea6":"df.describe()","8c9b3da7":"df.head()","2d3ffb51":"df_novo = pd.read_csv(\"..\/input\/players_stats.csv\" ,usecols=[0,1, 3, 4, 24,25,27, 31]) \n                                                           \n                 ","92573d42":"df_novo.head()","d244d3b8":"# Maior Jogador com pontua\u00e7\u00e3o\ndf_novo[df_novo['PTS'] == df_novo['PTS'].max()]\n\n","ae0f55fd":"df_novo.nlargest(5, 'PTS')","aebd6da1":"df_novo_small = pd.read_csv(\"..\/input\/players_stats.csv\" ,usecols=[0, 3]) \n                                                           ","5e5c7d88":"#criando objeto\nobj = df_novo.nsmallest(5, 'PTS') ","52bffdd4":"df_novo_small[df_novo_small['PTS'] == df_novo['PTS'].max()]","fde5b5b9":"# 5 jogadores com mais pontos\ndf_novo.groupby('Collage')['PTS'].max().head(10).plot.barh(title='Total de Pontos por F A C U L D A D E')\n","280c53a9":"# Pontos por time\ndf_novo.groupby('Team')['PTS'].max().head(10).plot.barh(title='Total de Pontos por T I M E S')\n","66e86e3c":"# Times por Idade\ndf_novo.groupby('Team')['Age'].max().head(10).plot.bar(title='Times por Idade')","d89b3cfa":"# maiores pontos por estado\ndf_novo.groupby('Birth_Place')['PTS'].max().head(10).plot.bar(title='Total de Pontos por E S T A D O')","2fb343e3":"#Jogadores com maiores pontos\ndf_novo.groupby('Name')['PTS'].sum().head(30).plot.bar(title='Maiores Pontos')","3669e8b8":"#Jogadores com menores pontos\ndf_novo.groupby('Name')['PTS'].min().head(30).plot.bar(title='Menores Pontos')","20fcec48":"#maiores idades\ndf_novo[df_novo['Age'] == df_novo['Age'].max()]","7a1abc4d":"#Jogadores com maiores pontos\ndf_novo.groupby('Collage')['PTS'].sum().head(30).plot.bar(title='Maiores Pontos')","08beca63":"df[(df['PTS'] > 1800) &  (df['PTS'] < 2500)]","34ed419f":"# 10 Bilhetes mais caros\ndf[['Name', 'Collage', 'PTS']].nlargest(10, 'PTS')","39f1af58":"maiores_pontuadores = df.groupby(['Name'])['PTS'].sum() \\\n                                                       .reset_index(name='Pontos') \\\n                                                       .sort_values(['Pontos'], ascending=False)\n                             \nmaiores_pontuadores","faa4bfc6":"# Gastos por Cia Aerea\n\nmenores = df['Name']\n\nmenores_pontuadores = df.groupby(['Name'])['PTS'].min() \\\n                                                              .reset_index(name='Pontos') \\\n                                                              .sort_values(['Pontos'], ascending=True)\nmenores_pontuadores ","60f5120b":"df_novo.isnull().sum()","2fd4cf48":"df_novo[df_novo['PTS'] == 0]","6f2d2a39":"#apagar valores 0\ndf_novo.drop(df.index[],inplace=True)","247f4593":"# importa bibliotecas de gr\u00e1ficos\nimport matplotlib.pyplot as plt\n#%matplotlib inline\n# Gr\u00e1fico dos jogadore scom mais pontos\n\nplt.bar(maiores_pontuadores['Name'].head(3), maiores_pontuadores['Pontos'].head(3))\nplt.title('Maiores Pontuadores')\nplt.xlabel('Nomes dos Jogadores')\nplt.ylabel('Total de Pontos')\nplt.show()\n\n"}}