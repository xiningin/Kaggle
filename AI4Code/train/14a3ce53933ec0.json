{"cell_type":{"f69fe515":"code","e9cffc2b":"code","2ec7deb2":"code","c5e2440c":"code","180527fc":"code","d6c8c33b":"code","6a0b960d":"code","40c0c426":"code","3ec28cf1":"code","44aeb248":"code","9ef9ffd4":"code","5efb7d63":"code","71cea876":"code","a67438a4":"code","c5c44367":"code","1f1db9e4":"code","6125f217":"code","bc11d346":"code","c68b749d":"code","079c212e":"code","73f6671a":"markdown","ba770a8f":"markdown","4b6a99ee":"markdown","a5da3969":"markdown","1434de05":"markdown","36cfc760":"markdown","6d7016a8":"markdown","93cefb36":"markdown","c6f123e2":"markdown","69e34dbe":"markdown","da056fb4":"markdown","f94360d4":"markdown","39022518":"markdown"},"source":{"f69fe515":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.special import inv_boxcox\nfrom scipy.stats import boxcox","e9cffc2b":"df = pd.read_csv('..\/input\/california-housing-prices\/housing.csv')\ndf.head()","2ec7deb2":"df.describe()","c5e2440c":"df.info()","180527fc":"df = df.fillna(method='ffill')\ndf.isnull().sum()","d6c8c33b":"df.ocean_proximity.value_counts()","6a0b960d":"df = pd.get_dummies(df)\ndf.head()","40c0c426":"#Correlation map to see how features are correlated with SalePrice\nCor_heat = df.corr()\nplt.figure(figsize=(16,16))\nsns.heatmap(Cor_heat, cmap = \"RdBu_r\", vmax=0.9, square=True)","3ec28cf1":"## Lets see what most important features we have\n\nIF = Cor_heat['median_house_value'].sort_values(ascending=False).head(10).to_frame()\nIF.head(5)","44aeb248":"IF = Cor_heat['median_income'].sort_values(ascending=False).head(10).to_frame()\nIF.head(5)","9ef9ffd4":"# Basic Distribution\n\nprint('Skew Value : ' + str(df.median_house_value.skew()))\nsns.distplot(df.median_house_value)","5efb7d63":"f = plt.figure(figsize=(16,16))\n\n# log 1 Transform\nax = f.add_subplot(221)\nL1p = np.log1p(df.median_house_value)\nsns.distplot(L1p,color='b',ax=ax)\nax.set_title('skew value Log 1 transform: ' + str(np.log1p(df.median_house_value).skew()))\n\n# Square Log Transform\nax = f.add_subplot(222)\nSRT = np.sqrt(df.median_house_value)\nsns.distplot(SRT,color='c',ax=ax)\nax.set_title('Skew Value Square Transform: ' + str(np.sqrt(df.median_house_value).skew()))\n\n# Log Transform\nax = f.add_subplot(223)\nLT = np.log(df.median_house_value)\nsns.distplot(LT, color='r',ax=ax)\nax.set_title('Skew value Log Transform: ' + str(np.log(df.median_house_value).skew()))\n\n# Box Cox Transform\nax = f.add_subplot(224)\nBCT,fitted_lambda = boxcox(df.median_house_value,lmbda=None)\nsns.distplot(BCT,color='g',ax=ax)\nax.set_title('Skew Value Box Cox Transform: ' + str(pd.Series(BCT).skew()))","71cea876":"Train = df.drop('median_house_value', axis=1)\nTest = df.median_house_value","a67438a4":"# Assign the distribution of Sale Price\n\nfeature_SP = {'Log Transform': LT,\n              'Square Root Transform': SRT,\n              'Box-Cox Transform':BCT,\n              'Log 1 Transform': L1p}","c5c44367":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score","1f1db9e4":"## Linear Regression\n\nfrom sklearn.linear_model import LinearRegression\nLR = LinearRegression()","6125f217":"## Random Forest Regressor\n\nfrom sklearn.ensemble import RandomForestRegressor\nRFR = RandomForestRegressor(n_estimators=25,max_depth=5)","bc11d346":"## Decision Tree Regressor\n\nfrom sklearn.tree import DecisionTreeRegressor\nDTR =DecisionTreeRegressor(random_state=10)","c68b749d":"alg = [LR, RFR, DTR]\npredicted_value = {}\n\nfor y in alg:\n    print(str(y.__class__.__name__) + ' results')\n    for key, value in feature_SP.items():\n        Test = value\n        X_train, X_test, y_train, y_test = train_test_split(Train, Test, test_size=0.33, random_state=42)\n        y.fit(X_train, y_train)\n        predicted_value[str(y.__class__.__name__) + ' with ' + str(key)] = y.predict(X_test)\n        score = y.score(X_test, y_test)\n        print('Accuracy with ' + str(key) + ' transformation : ' + str(np.mean(score)))","079c212e":"predicted_value","73f6671a":"## Fill Missing Value\n\nWe got a few missing value on total_rooms columns, let's fill the missing value.","ba770a8f":"## Feature Engineering\n\nPerforming feature engineering to change categorical value to numerical value","4b6a99ee":"0.97 is pretty bad, let's see if we can find a better skew value.","a5da3969":"## Transformation\n\nBefore performing prediction, we need to make sure the target dataset is not skewed.","1434de05":"## Introduction\n\nHai kaggler, in this kernel i'm going to perform prediction on california housing Dataset. I'm using Linear Regression, Random Forest Regressor and Decision Tree Regressor. Let's get started.","36cfc760":"We have box cox transformation as the best transformation with skew value near to 0, but to make sure let's perform prediction on all of them","6d7016a8":"## Quick Look\n\nTake a quick look at the dataset","93cefb36":"## Spliting Data","c6f123e2":"median house value is strongly correlated with median income, let's see what most important feature for median income.","69e34dbe":"The visualization above is correlation between every columns, it's interesting how total_rooms, total_bedrooms, household, and population are strongly correlated. The target column is median house value, let's see what most important feature we have.","da056fb4":"## Modeling\n\nI'm using Linear Regression, Decision Tree Regressor, and Random Forest Regressor.","f94360d4":"## Import Modules","39022518":"## End\n\nThe best result is when we using Decision Tree Regressor and applying Log Transformation on the target data.\nthat is all for this kernel, thank you."}}