{"cell_type":{"e4f986e2":"code","8869da5c":"code","db21e109":"code","28ef9568":"code","1f448482":"code","d582d847":"code","0c312c00":"code","0e766c21":"code","be8aa66d":"code","436ce7d1":"code","86d05da8":"code","7f0d9f99":"code","efb75957":"code","bbf9d7b3":"code","2af34009":"code","378daac8":"code","899bc150":"code","97fb642a":"code","91b7e0fe":"code","e0a8788b":"code","a946d8da":"code","0f9c8691":"code","6e0d7a1f":"code","eb39daca":"code","85a4dee4":"code","7f46631b":"code","928bdc67":"code","3106c4e9":"code","af8165fe":"code","33df7728":"code","93ab8f52":"code","ce2248dd":"code","5aae2106":"code","4fe753a6":"code","ec14873a":"code","3971bf5b":"code","2be4bbce":"code","591350de":"code","fea36442":"code","ba2c45e3":"code","76dec6b1":"code","7c168915":"code","ec628d84":"code","3855d4ba":"code","926162e5":"code","d3f5be9c":"code","bc838baf":"code","fe125007":"code","b1fef08d":"code","935fbbd1":"code","e78900f4":"code","a35dfdd7":"code","a82921cf":"markdown","33e7cfbd":"markdown"},"source":{"e4f986e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8869da5c":"df = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')","db21e109":"df.head(2)","28ef9568":"df.info()","1f448482":"df.describe()","d582d847":"df.isnull().sum()","0c312c00":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","0e766c21":"sns.distplot(df.age, kde = False, bins = 40);","be8aa66d":"df.age.value_counts().head()","436ce7d1":"df.columns","86d05da8":"sns.countplot('sex', data = df)","7f0d9f99":"df.columns","efb75957":"\nsns.distplot(df.bmi, kde = False, bins = 40);","bbf9d7b3":"sns.countplot('children', data = df);","2af34009":"sns.countplot('smoker', data = df);","378daac8":"df.columns","899bc150":"sns.countplot('region', data = df);","97fb642a":"sns.distplot(df.charges, kde = False, bins = 40);","91b7e0fe":"# Create Dummy Variables","e0a8788b":"sex = pd.get_dummies(df.sex, drop_first= True)","a946d8da":"children = pd.get_dummies(df.children, drop_first= True)","0f9c8691":"smoker = pd.get_dummies(df.smoker, drop_first= True)","6e0d7a1f":"region = pd.get_dummies(df.region, drop_first= True)","eb39daca":"train = pd.concat([df,sex, children, smoker, region], axis = 1)","85a4dee4":"train.head(2)","7f46631b":"train.drop(['sex', 'children', 'smoker', 'region'], axis = 1, inplace = True)","928bdc67":"train","3106c4e9":"from sklearn.model_selection import train_test_split","af8165fe":"X = train.drop('charges', axis = 1)","33df7728":"y = train.charges","93ab8f52":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","ce2248dd":"X_train","5aae2106":"from sklearn.linear_model import LinearRegression","4fe753a6":"lm = LinearRegression()","ec14873a":"lm.fit(X_train, y_train)","3971bf5b":"predictions = lm.predict(X_test)","2be4bbce":"predictions","591350de":"from sklearn import metrics \nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))\n","fea36442":"print(lm.score(X_test,y_test))","ba2c45e3":"from sklearn.ensemble import RandomForestRegressor","76dec6b1":"RFR = RandomForestRegressor()","7c168915":"RFR.fit(X_train, y_train)","ec628d84":"print(RFR.score(X_test,y_test))","3855d4ba":"Rpredictions = RFR.predict(X_test)","926162e5":"from sklearn import metrics \nprint('MAE:', metrics.mean_absolute_error(y_test, Rpredictions))\nprint('MSE:', metrics.mean_squared_error(y_test, Rpredictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, Rpredictions)))","d3f5be9c":"from sklearn.neighbors import KNeighborsRegressor","bc838baf":"KNN = KNeighborsRegressor()","fe125007":"KNN.fit(X_train, y_train)","b1fef08d":"print(KNN.score(X_test,y_test))","935fbbd1":"Kpredictions = KNN.predict(X_test)","e78900f4":"Kpredictions","a35dfdd7":"print('MAE:', metrics.mean_absolute_error(y_test, Kpredictions))\nprint('MSE:', metrics.mean_squared_error(y_test, Kpredictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, Kpredictions)))","a82921cf":"# Random Forrest is the best model","33e7cfbd":" # **'sex', 'children', 'smoker', 'region' can be converted to dummies**"}}