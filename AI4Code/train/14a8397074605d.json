{"cell_type":{"977f6027":"code","42b3af5c":"code","10e064e8":"code","63e4ed84":"code","f0d14fdf":"code","cd6eaad8":"code","d050cf50":"code","99443029":"code","5464ed47":"code","d0d22bb5":"code","5e50fc34":"code","c4d4a1bd":"code","32f1ae50":"code","bfec8231":"code","ff22b319":"code","0e2d3b79":"code","666b60d5":"code","080bf233":"code","26603782":"code","57b82760":"code","293f7c27":"code","9e199944":"code","994b78ee":"code","ce6e125d":"code","dcf365a1":"code","42f63b11":"markdown"},"source":{"977f6027":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42b3af5c":"pathfile = '..\/input\/diabetes\/diabetes.csv'\nmydata = pd.read_csv(pathfile)","10e064e8":"mydata.head()\n","63e4ed84":" mydata.tail()\n","f0d14fdf":"mydata.describe()","cd6eaad8":"mydata.info()","d050cf50":"#mdata= mydata.drop['Age', 'Outcome', 'DiabetesPedigreeFunction']\n","99443029":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n","5464ed47":"y = mydata.DiabetesPedigreeFunction\nmydata.columns\n","d0d22bb5":"features=['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'Age', 'Outcome']\n   \nX=mydata[features]","5e50fc34":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nX_train,X_valid, y_train,  y_valid= train_test_split(X,y,random_state=1)\nmymodel = RandomForestRegressor()\nmymodel.fit(X_train, y_train)\ny_predict = mymodel.predict(X_valid)","c4d4a1bd":"from sklearn.metrics import mean_absolute_error\nprint(\"MAE=\", mean_absolute_error(y_valid, y_predict))","32f1ae50":"plt.figure(figsize=(14,6))\n\n# Add title\nplt.title(\"Lineplot\")\n\n# Line chart showing BloodPressurev\nsns.lineplot(data=mydata['BloodPressure'], label=\"Blood\")\n\n# Line chart showing Age'\nsns.lineplot(data=mydata['Age'], label=\"Age\")","bfec8231":"plt.figure(figsize= (16,4))\n\n#title\nplt.title('Trends of Skin Thickness and Age')\nsns.lineplot(x=\"Age\", y=\"SkinThickness\", data= mydata)\n\nplt.show()","ff22b319":"sns.lineplot(data=mydata['DiabetesPedigreeFunction'], label=\"Diabetes Pedigree Function\")\n","0e2d3b79":"plt.figure(figsize=(10,6))\n\nplt.title(\"Relationship between Age and  DiabetesPedigreeFunction\")\n\nsns.barplot(x=mydata.head()['Age'], y=mydata.head()['DiabetesPedigreeFunction'])\n\nplt.ylabel(\"DiabetesPedigreeFunction\")","666b60d5":"plt.figure(figsize=(14,7))\n\nplt.title(\"Heatmap of Dataset\")\n\nsns.heatmap(data=mydata.head(), annot=True)\n\nplt.xlabel(\"Airline\")","080bf233":"sns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'])\n","26603782":"plt.figure(figsize=(14,7))\n\nsns.regplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'])","57b82760":"plt.figure(figsize=(14,7))\n\nsns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'], hue=mydata['Glucose'])","293f7c27":"sns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'], hue=mydata['Outcome'])\n","9e199944":"plt.figure(figsize=(16,4))\n\nsns.lmplot(x=\"DiabetesPedigreeFunction\", y=\"Age\", hue=\"Outcome\", data=mydata)","994b78ee":"sns.kdeplot(data=mydata['BloodPressure'], shade=True)\n","ce6e125d":"sns.jointplot(x=mydata['BloodPressure'], y=mydata['Age'], kind=\"kde\")\n","dcf365a1":"sns.distplot(a=mydata['Glucose'], label=\"Glucose\", kde=False)\nsns.distplot(a=mydata['BloodPressure'], label=\"BloodPressure\", kde=False)\nsns.distplot(a=mydata['SkinThickness'], label=\"SkinThickness\", kde=False)\n\nplt.legend()","42f63b11":"## **Visualization data with LinePlot**"}}