{"cell_type":{"10d3e011":"code","48de7203":"code","8d4601ae":"code","d7f29339":"code","c836bf9f":"code","3995c072":"code","2f9ad639":"code","39448abd":"code","5ac64602":"code","861a35fe":"code","a9fef4f5":"code","e7d1f91d":"code","34fac0d4":"code","f4816239":"markdown","eb3165a0":"markdown","6ab25747":"markdown","d0389e51":"markdown","0ec59266":"markdown","6768ca50":"markdown","3ebdc45b":"markdown"},"source":{"10d3e011":"# Always the same :) \nimport numpy as np \nimport pandas as pd \n\n#Basic Matplotlib Visualizations \n\nimport matplotlib.pyplot as plt\nfrom itertools import cycle\n\n# Interactive Data Visualizations toolkit \nimport plotly.express as px\nimport plotly.graph_objects as go\n\n","48de7203":"data=pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","8d4601ae":"#Print the dataframe of the duplicates by Name\ndata[data.duplicated(subset=['Name'])]","d7f29339":"#Delete from the dataset the duplicates selected above\ndata=data.drop_duplicates('Name')\nprint('After the elimination of the duplicates I have {} books'.format(len(data)))\ndata.describe()","c836bf9f":"features=['User Rating','Reviews','Price','Year']","3995c072":"colors = ['navy', 'turquoise', 'darkorange', 'cornflowerblue','gold','fuchsia','slateblue','teal']\n\nfig,ax= plt.subplots(1,4,figsize=(20,6))\n\nfor i in range(len(features)):\n    ax[i].hist(data[features[i]], color=colors[i],alpha=0.8)\n    ax[i].set_title(label=str(features[i])+' distribution')\n    ax[i].set_xlabel(str(features[i]))\n    ax[i].set_ylabel('Value')\n    ax[i].grid()\n    ","2f9ad639":"fig,ax= plt.subplots(1,2,figsize=(20,6))\n\nrat_list=list(set(data['User Rating']))\nproportion=data.groupby('User Rating').size()\nratings=[]\nlab=[]\nfor rating in rat_list:\n    if proportion[rating]\/len(data)>=0.05:\n        lab.append(str(rating))\n        ratings.append(proportion[rating]\/len(data))\n        \nratings.append(1-sum(ratings))\nlab.append('Others')\n        \nax[0].pie(ratings,  labels=lab,autopct='%1.1f%%',shadow=True, startangle=90, colors=colors)\nax[0].axis('equal')\nfig.suptitle('Proportion of the User Ratings')\n\n\nax[1].bar(lab,ratings,width=0.5,color='turquoise')\nax[1].grid()\n","39448abd":"# You can use this command to make the plot interactive and make the graph in running mode, I will choose one particular feature\n\n# print('Authors: {}'.format(data['Author']))\n# print('Choose one Author: ')\n# plot_this_author=input(\"Author: \")\n# print (\"Avaiable Variables:\")\n# print(*features)\n\nplot_this_author='Jeff Kinney'\n\n#plot_this_feature = input(\"Select one of the variables: \")\n\nplot_this_feature ='Price'\n\nfig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['Author'][data['Author'] == plot_this_author],\n                        y=data[plot_this_feature][data['Author'] == plot_this_author],\n                        name=plot_this_author,\n                        box_visible=True,\n                        meanline_visible=True, x0=\"0 - Good\"))\n\n\nfig.update_traces(meanline_visible=True,\n                  points='all') # show all points\n\nfig.update_layout(\n    title='Violin Plot of the Feature:  ' + plot_this_feature,\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Value',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0.40,\n        y = 0.95,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)',\n    )\n)\n\nfig.show()","5ac64602":"#feat=input('Variable to plot: ')\n\nfeat='Price'\n\nfig = go.Figure()\n\nfig.add_trace(go.Violin(x=data['Genre'][data['Genre'] == 'Fiction'],\n                        y=data[feat][data['Genre']=='Fiction'],\n                        name='Fiction Books',\n                        box_visible=True,\n                        meanline_visible=True, x0=\"0 - Good\"))\n\nfig.add_trace(go.Violin(x=data['Genre'][data['Genre'] == 'Non Fiction'],\n                        y=data[feat][data['Genre']=='Non Fiction'],\n                        name='Non Fiction Books',\n                        box_visible=True,\n                        meanline_visible=True, x0=\"0 - Good\"))\n\n\nfig.update_traces(meanline_visible=True,\n                  points='all') # show all points\n\nfig.update_layout(\n    title='Violin Plot of the Feature:  ' + feat,\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Value',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0.40,\n        y = 0.95,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)',\n    )\n)\n\nfig.show()","861a35fe":"import plotly.express as px","a9fef4f5":"fig = px.scatter(data, x=\"Price\", y=\"User Rating\", color=\"Genre\",\n                 size='Reviews')\n\nfig.update_layout(\n    title='Correlations among the features:',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Value',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n)\n\nfig.show()","e7d1f91d":"years=list(data['Year'].drop_duplicates())\nyears=sorted(years)\n\nmean_reviews=[]\nmean_ratings=[]\nfiction_genre=[]\nnon_fiction_genre=[]\nmean_price=[]\nfor year in years:\n    mean_price.append(data[data['Year']==year]['Price'].mean())\n    mean_ratings.append(data[data['Year']==year]['User Rating'].mean())\n    fiction_genre.append(len(data[(data['Year']==year)&(data['Genre']=='Fiction')]))\n    non_fiction_genre.append(len(data[(data['Year']==year)&(data['Genre']=='Non Fiction')]))\n    mean_reviews.append(data[data['Year']==year]['Reviews'].mean()\/1000)","34fac0d4":"fig=go.Figure()\n\nfig.add_trace( go.Scatter(x=years, y=mean_price, name='Mean price'))\nfig.add_trace( go.Scatter(x=years, y=mean_ratings, name='Mean rating'))\nfig.add_trace( go.Scatter(x=years, y=mean_reviews,name= 'Mean number reviews (k)'))\nfig.add_trace( go.Scatter(x=years, y=fiction_genre, name='Mean number Fiction books'))\nfig.add_trace( go.Scatter(x=years, y=non_fiction_genre,name='Mean number Non Fiction books'))\n\n\nfig.update_layout(\n    title='Features during the years:',\n    xaxis=dict(title='Year'),\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Value',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n)\n\nfig.show()","f4816239":"I hope you enjoyed this fast reference to make some interactive plots, this can really make the data more readable and interpretable instead of static plots. I leave some refernces as follow:\n\n- https:\/\/plotly.com\/python\/line-charts\/\n- https:\/\/plotly.com\/python\/violin\/","eb3165a0":"### Visualization in Matplotlib\n\nIn this section I will use some matplotlib functions to plot usef information about the dataset. ","6ab25747":"It is also possible to use another great library from plotply, plotly.express. I used it to visualize a scatterplot where I compare different features from the dataset.\nThe data are divided by Genre, on the x axes is plotted the Price of the book while on the y axes the User Ratings. The size of the marker dipends by the number of Reviews of that particular book. ","d0389e51":"## Visualizations with plotly\n\nIn this section will be used the plotply to visualize some fancy and interactive plots.\nIn the first is possible to plot some features divided by author while in the second the differences between the two genres. For example it is possible to plot the Prices of the books divided by Genre (Fiction vs Non-Fiction) and visualize the distributions. I used the boxplot with violins overplotted, it is possible to visualize the main parameters of the distribution like the mean and the median going on the plot with the cursor. ","0ec59266":"\n\n![amazon_books.png](attachment:amazon_books.png)\n\n### In this notebook I will explore the 50-beselling-books from Amazon from a visualization point of view. I will make a EDA first and then use some plotly features to create nice data interactive visualiation. Code ready for your personal projects!!!\n\nEach code cell is commented to better understand the intructions. Enjoy :)","6768ca50":"## EDA Analysis and Basic Visualizations\n\nIn this brief section I will study the dataset given, what features are available, the duplicates and some basic plots in matplotlib. ","3ebdc45b":"The dataset describes the best 50 selling books in the Amazon book shop between 2009 and 2019. The features available are:\n\n* Name: the title of the book\n* Author:\n* Reviews: the number of reviews about that book\n* Price:\n* Year:\n* Genre: distinction between 'Fiction' and 'Non Fiction' genre \n\nFirstly I select the duplicates by 'Name' because I don't want multiple rows about the same book. Duplicates among the others features are fine, because I can find different books written by the same Author. "}}