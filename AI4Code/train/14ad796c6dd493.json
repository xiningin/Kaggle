{"cell_type":{"fae69e0c":"code","3efec92b":"code","723d202d":"code","98ee9848":"code","0ddc9fa0":"code","d646cc4d":"code","d8e02087":"code","334c3973":"code","6026cc25":"code","0f6d35f0":"code","eff979bc":"code","7b8ad0d8":"code","79f684bd":"code","f12244a9":"code","aa944e37":"code","8f67f3b0":"code","3855c8ef":"code","9fa69d0f":"code","a8fd91ce":"code","90cee83f":"code","ffa940b0":"code","f84d2e92":"code","1ba56471":"code","b68edd56":"code","a6cfbc24":"code","c0333d46":"markdown","7d863594":"markdown","36b99562":"markdown","ea44a75c":"markdown","3320b940":"markdown","7d063efd":"markdown","b58ced6d":"markdown","33c6acbe":"markdown"},"source":{"fae69e0c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3efec92b":"data = pd.read_csv(\"\/kaggle\/input\/breast-cancer-csv\/breastCancer.csv\")","723d202d":"data.head(5)","98ee9848":"data.dtypes\n","0ddc9fa0":"data[\"bare_nucleoli\"].value_counts()\ndata = data.replace(\"?\",np.nan)\ndata = data.fillna(data.median())\ndata[\"bare_nucleoli\"]= data[\"bare_nucleoli\"].astype(\"int64\")","d646cc4d":"data.dtypes","d8e02087":"data.drop(\"id\",axis=1,inplace= True)","334c3973":"data.describe().T","6026cc25":"plt.style.use(\"fivethirtyeight\")\nsns.displot(data[\"class\"]);","0f6d35f0":"data.hist(bins=20,figsize=(20,20));","eff979bc":"\nplt.figure(figsize=(10,10))\nsns.boxplot(data=data,orient=\"h\");","7b8ad0d8":"sns.pairplot(diag_kind=\"kde\",data=data);","79f684bd":"plt.figure(figsize=(20,20))\nsns.heatmap(data.corr(),annot=True,cmap= \"viridis\");","f12244a9":"from sklearn.model_selection import train_test_split","aa944e37":"X = data.drop(\"class\",axis=1)\nY = data[\"class\"]","8f67f3b0":"train_x,test_x,train_y,test_y = train_test_split(X,Y,test_size= 0.33, random_state=42)","3855c8ef":"from sklearn.neighbors import KNeighborsClassifier","9fa69d0f":"KNN = KNeighborsClassifier(n_neighbors=5)\nKNN.fit(train_x,train_y)\npred1 = KNN.predict(test_x)","a8fd91ce":"Accuracy_knn = KNN.score(test_x,test_y)*100\nprint (\"accuracy of the model is {0:.2g}%\".format(Accuracy_knn))","90cee83f":"from sklearn.svm import SVC","ffa940b0":"SVM = SVC()\nSVM.fit(train_x,train_y)\npred2 = SVM.predict(test_x)\n","f84d2e92":"SVM.score(test_x,test_y)","1ba56471":"from sklearn.metrics import classification_report","b68edd56":"print (\"KNN classifier\")\nprint (classification_report(test_y,pred1))","a6cfbc24":"print (\"SVM classifier\")\nprint (classification_report(test_y,pred2))","c0333d46":"# Importing Dataset\n","7d863594":"> Importing train_test_split module","36b99562":"# Data Pre-processing","ea44a75c":"# SVM classifier","3320b940":"# KNN classifier","7d063efd":"# Classification metric","b58ced6d":"# Exploratory Data Analysis","33c6acbe":"# Building Model (KNN and SVM)"}}