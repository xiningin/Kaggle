{"cell_type":{"f5634a14":"code","37de0a71":"code","e332f333":"code","7313bbfb":"code","129e4f13":"code","cc6e97ac":"code","0d015f17":"code","c708bc2b":"code","2e097094":"code","f307c2ca":"code","aae38666":"code","0b0f0dab":"code","e451b532":"code","f0e9dcc4":"code","a53917cc":"code","0d9d0fa6":"code","faadd218":"code","c7116e6b":"code","89663f4b":"code","8a807985":"code","207551f1":"code","2bc8a5a6":"code","481b7f8d":"code","d75c3d4d":"code","87e80702":"code","9f062d07":"code","b018f6b2":"code","6564cadc":"code","19290374":"code","eb0974ff":"code","79131f43":"markdown","473fedd9":"markdown","2a66f0c2":"markdown","2e216f46":"markdown","39312c4f":"markdown","5e64b0be":"markdown","b54f902a":"markdown","fa43382a":"markdown"},"source":{"f5634a14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # graph plotting\nfrom sklearn.cluster import MiniBatchKMeans # kmeans\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37de0a71":"df= pd.read_csv('\/kaggle\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018\/data-final.csv', delimiter='\\t')\n\ndf","e332f333":"columns= df.columns\n\n# display all the columns in the dataset\nfor c in columns:\n    print(c)","7313bbfb":"# save first 50 columns in variable X\n\nX= df[df.columns[0:50]]","129e4f13":"# to see entire dataframe\n\npd.set_option(\"display.max_columns\", None)","cc6e97ac":"X","0d015f17":"# fill in missing values with zeros\n\nX= X.fillna(0)","c708bc2b":"kmeans= MiniBatchKMeans(n_clusters= 10, random_state= 0, batch_size= 100, max_iter= 100).fit(X)","2e097094":"# length of a cluster\n\nlen(kmeans.cluster_centers_)","f307c2ca":"one= kmeans.cluster_centers_[0] #personality type 1\n\ntwo= kmeans.cluster_centers_[1]\n\nthree= kmeans.cluster_centers_[2]\n\nfour= kmeans.cluster_centers_[3]\n\nfive= kmeans.cluster_centers_[4]\n\nsix= kmeans.cluster_centers_[5]\n\nseven= kmeans.cluster_centers_[6]\n\neight= kmeans.cluster_centers_[7]\n\nnine= kmeans.cluster_centers_[8]\n\nten= kmeans.cluster_centers_[9]","aae38666":"# cluster one\n\none","0b0f0dab":"one_scores= {}\n\none_scores['extroversion_score']= one[0]- one[1]+ one[2]- one[3]+ one[4]- one[5]+ one[6]- one[7]+ one[8]- one[9]\none_scores['neuroticism_score']= one[0]- one[1]+ one[2]- one[3]+ one[4]+ one[5]+ one[6]+ one[7]+ one[8]+ one[9]\none_scores['agreeableness_score']= -one[0]+ one[1]- one[2]+ one[3]- one[4]- one[5]+ one[6]- one[7]+ one[8]+ one[9]\none_scores['conscientiousness_score']= one[0]- one[1]+ one[2]- one[3]+ one[4]- one[5]+ one[6]- one[7]+ one[8]+ one[9]\none_scores['openness_score']= one[0]- one[1]+ one[2]- one[3]+ one[4]- one[5]+ one[6]+ one[7]+ one[8]+ one[9]","e451b532":"one_scores","f0e9dcc4":"# calculating scores for all 10 clusters\n\nall_types= {'one':one, 'two':two, 'three':three, 'four':four, 'five':five, 'six':six, 'seven':seven, 'eight':eight,\n            'nine':nine, 'ten':ten}\n\nall_types_scores= {}\n\nfor name, personality_type in all_types.items():\n    personality_trait= {}\n    \n    personality_trait['extroversion_score']= personality_type[0]- personality_type[1]+ personality_type[2]- personality_type[3]+ personality_type[4]- personality_type[5]+ personality_type[6]- personality_type[7]+ personality_type[8]- personality_type[9]\n    personality_trait['neuroticism_score']= personality_type[0]- personality_type[1]+ personality_type[2]- personality_type[3]+ personality_type[4]+ personality_type[5]+ personality_type[6]+ personality_type[7]+ personality_type[8]+ personality_type[9]\n    personality_trait['agreeableness_score']= -personality_type[0]+ personality_type[1]- personality_type[2]+ personality_type[3]- personality_type[4]- personality_type[5]+ personality_type[6]- personality_type[7]+ personality_type[8]+ personality_type[9]\n    personality_trait['conscientiousness_score']= personality_type[0]- personality_type[1]+ personality_type[2]- personality_type[3]+ personality_type[4]- personality_type[5]+ personality_type[6]- personality_type[7]+ personality_type[8]+ personality_type[9]\n    personality_trait['openness_score']= personality_type[0]- personality_type[1]+ personality_type[2]- personality_type[3]+ personality_type[4]- personality_type[5]+ personality_type[6]+ personality_type[7]+ personality_type[8]+ personality_type[9]\n    \n    all_types_scores[name]= personality_trait","a53917cc":"all_types_scores","0d9d0fa6":"all_extroversion= []\nall_neuroticism= []\nall_agreeableness= []\nall_conscientiousness= []\nall_openness= []\n\nfor personlity_type, personality_trait in all_types_scores.items():\n    all_extroversion.append(personality_trait['extroversion_score'])\n    all_neuroticism.append(personality_trait['neuroticism_score'])\n    all_agreeableness.append(personality_trait['agreeableness_score'])\n    all_conscientiousness.append(personality_trait['conscientiousness_score'])\n    all_openness.append(personality_trait['openness_score'])","faadd218":"all_extroversion_normalized= (all_extroversion-min(all_extroversion))\/(max(all_extroversion)- min(all_extroversion))\nall_neuroticism_normalized= (all_neuroticism-min(all_neuroticism))\/(max(all_neuroticism)- min(all_neuroticism))\nall_agreeableness_normalized= (all_agreeableness-min(all_agreeableness))\/(max(all_agreeableness)- min(all_agreeableness))\nall_conscientiousness_normalized= (all_conscientiousness-min(all_conscientiousness))\/(max(all_conscientiousness)- min(all_conscientiousness))\nall_openness_normalized= (all_openness-min(all_openness))\/(max(all_openness)- min(all_openness))","c7116e6b":"# normalized array of the type 'extroversion'\n\nall_extroversion_normalized","89663f4b":"# normalizing all the data\n\ncounter= 0\n\nnormalized_all_types_scores= {}\n\nfor personality_type, personality_trait in all_types_scores.items():\n    normalized_personality_trait= {}\n    normalized_personality_trait['extroversion_score']= all_extroversion_normalized[counter]\n    normalized_personality_trait['neuroticism_score']= all_neuroticism_normalized[counter]\n    normalized_personality_trait['agreeableness_score']= all_agreeableness_normalized[counter]\n    normalized_personality_trait['conscientiousness_score']= all_conscientiousness_normalized[counter]\n    normalized_personality_trait['openness_score']= all_openness_normalized[counter]\n    \n    normalized_all_types_scores[personality_type]= normalized_personality_trait\n\n    counter+= 1","8a807985":"normalized_all_types_scores","207551f1":"# for cluster one\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['one'].keys()), normalized_all_types_scores['one'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","2bc8a5a6":"# for cluster two\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['two'].keys()), normalized_all_types_scores['two'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","481b7f8d":"# for cluster three\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['three'].keys()), normalized_all_types_scores['three'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","d75c3d4d":"# for cluster four\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['four'].keys()), normalized_all_types_scores['four'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","87e80702":"# for cluster five\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['five'].keys()), normalized_all_types_scores['five'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","9f062d07":"# for cluster six\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['six'].keys()), normalized_all_types_scores['six'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","b018f6b2":"# for cluster seven\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['seven'].keys()), normalized_all_types_scores['seven'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","6564cadc":"# for cluster eight\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['eight'].keys()), normalized_all_types_scores['eight'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","19290374":"# for cluster nine\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['nine'].keys()), normalized_all_types_scores['nine'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","eb0974ff":"# for cluster ten\n\nplt.figure(figsize= (15,5))\nplt.ylim(0, 1)\nplt.bar(list(normalized_all_types_scores['ten'].keys()), normalized_all_types_scores['ten'].values(), color=['darkred', 'olive', 'darkorange', 'turquoise', 'indigo'])\nplt.show()","79131f43":"Here, columns 1 to 50 represents the test questions.\n* Questions 1 to 10 trying to find out whether the person is extrovert or not.\n* Questions 11 to 20 trying to find out whether the person is neurotic or not.\n* Questions 21 to 30 trying to find out whether the person is agreeable or not.\n* Questions 31 to 40 trying to find out whether the person is conscientious or not.\n* Questions 41 to 50 trying to find out whether the person is open to new experience or not.\n\nRemaining 10 columns contain metadata such as width and height of user's screen when they were taking these tests.","473fedd9":"Now, we will run a k-means algorithm with number of clusters, batch size, random state and maximum iteration as a parameters.\n* Here, number of clusters are 10. We can change it to any number\n* Our batch size is 100 i.e. amount of data trained at once","2a66f0c2":"Use pandas library to read data from .csv file and store it into a dataframe 'df'","2e216f46":"**Thank You...**","39312c4f":"Now, we are plotting the bar graph with respect to all the personality types for all the clusters.","5e64b0be":"The magnitudes of these scores are not relative to each other. To compare the types, we will normalize the data.","b54f902a":"Now, we will calculate scores of cluster one.\nHere we added and substracted the questions depends upon the type of the personality.","fa43382a":"Now, we will use the equation for normalization i.e. norm(i)= x(i)-min(x) \/ max(x)-min(x)"}}