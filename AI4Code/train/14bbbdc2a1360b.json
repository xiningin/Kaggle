{"cell_type":{"138b3707":"code","d38319bf":"code","ea2a4749":"code","445bd985":"code","87674494":"code","5095df9f":"code","fae8b520":"code","776960d5":"code","0dc29646":"code","cfef573a":"code","b266798d":"code","70df4dba":"code","56352f29":"code","6a65b58d":"code","0aebd698":"code","252e6d56":"code","63b63bb1":"code","e5d96184":"code","bfc6b54c":"code","c2839537":"code","7d0051ce":"code","b0de2889":"code","e741f516":"code","4172f79f":"code","45c63bad":"code","9db6c729":"code","d740b71c":"code","64f23d15":"code","86767ab9":"code","e5881538":"markdown","d4ebdc76":"markdown","e6fc4486":"markdown","dd0c1f9d":"markdown"},"source":{"138b3707":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d38319bf":"import seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\n%matplotlib inline","ea2a4749":"sns.set_style(\"whitegrid\", rc={\"font.size\":20,\"axes.titlesize\":20,\"axes.labelsize\":20})","445bd985":"df = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","87674494":"df.head()","5095df9f":"def get_info_dataframe(dataframe):\n    print(f\"DATAFRAME GENERAL INFO - \\n\")\n    print(dataframe.info(),\"\\n\")\n    print(f\"DATAFRAME MISSING INFO - \\n\")\n    print(dataframe.isnull().sum(),\"\\n\")\n    print(f\"DATAFRAME SHAPE INFO - \\n\")\n    print(dataframe.shape)","fae8b520":"get_info_dataframe(df)","776960d5":"setosa_count = 0\nversicolor_count = 0\nvirginica_count = 0\nspecies = list(df['Species'])","0dc29646":"#species\nfor i in range(len(species)):\n    if species[i] == 'Iris-setosa':\n        setosa_count+=1\n    elif species[i] == 'Iris-versicolor':\n        versicolor_count+=1\n    elif species[i] == 'Iris-virginica':\n        virginica_count+=1","cfef573a":"# print(setosa_count)\n# print(versicolor_count)\n# print(virginica_count)","b266798d":"fig = plt.figure(figsize=(10,5))\niris_type = ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']\niris_count = [setosa_count,versicolor_count,virginica_count]\nplt.bar(iris_type,iris_count)\nplt.xlabel('Iris Type',size=15)\nplt.ylabel('Iris Type Count',size=15)","70df4dba":"fig = go.Figure()\nfig.add_trace(\ngo.Scatter(x=df['SepalLengthCm'],y = df['SepalWidthCm'],\n           mode = 'markers',\n           marker = dict(color='green',size=10),\n))\nfig.update_layout(xaxis_title = \"SepalLengthCm\", yaxis_title = \"SepalWidthCm\", title = \"SepalLength VS SepalWidth\",template = \"presentation\")","56352f29":"fig = go.Figure()\nfig.add_trace(\ngo.Scatter(x=df['PetalLengthCm'],y = df['PetalWidthCm'],\n           mode = 'markers',\n           marker = dict(color='green',size=10),\n))\nfig.update_layout(xaxis_title = \"PetalLengthCm\", yaxis_title = \"PetalWidthCm\", title = \"PetalLengthCm VS PetalWidthCm\",template = \"presentation\")","6a65b58d":"px.scatter(df,x = \"SepalLengthCm\", y = \"SepalWidthCm\",color = \"Species\",size = \"PetalLengthCm\",\n          hover_data=[\"PetalWidthCm\"],template = \"plotly_dark\")","0aebd698":"px.bar(df,x = \"SepalLengthCm\", y = \"SepalWidthCm\",color = \"Species\",barmode=\"group\",title='SepalLengthCm Vs SepalWidthCm',template = \"presentation\" )","252e6d56":"px.bar(df,x = \"PetalLengthCm\", y = \"PetalWidthCm\",color = \"Species\",barmode=\"group\",title='PetalLengthCm Vs PetalWidthCm',template = \"presentation\" )","63b63bb1":"px.bar(df,x = \"SepalLengthCm\", y = \"PetalLengthCm\",color = \"Species\",barmode=\"group\",title='SepalLengthCm Vs PetalLengthCm',template=\"presentation\")","e5d96184":"px.bar(df,x = \"SepalWidthCm\", y = \"PetalWidthCm\",color = \"Species\",barmode=\"group\",title='SepalWidthCm Vs PetalWidthCm', template = \"presentation\")","bfc6b54c":"px.scatter(df, x=\"SepalWidthCm\", y=\"SepalLengthCm\", color=\"Species\", marginal_y=\"violin\",marginal_x=\"box\", trendline=\"ols\", template=\"presentation\")","c2839537":"px.scatter_matrix(df,dimensions=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm'],color = 'Species',width=1000, height=900,\n                 template = \"presentation\")","7d0051ce":"px.scatter_3d(df,x='SepalLengthCm',y='SepalWidthCm',z='PetalLengthCm',color='Species',template = \"simple_white\")","b0de2889":"px.area(df,'PetalLengthCm','PetalWidthCm',hover_data={'SepalLengthCm','SepalWidthCm'},color='Species',template='presentation')","e741f516":"px.area(df,'SepalLengthCm','SepalWidthCm',hover_data={'PetalLengthCm','PetalWidthCm'},color='Species',template='presentation')","4172f79f":"fig = make_subplots(rows=2, cols=2,subplot_titles=(\"SepalLength\", \"PetalLength\",\"SepalWidth\",\"PetalWidth\"))\n\nfig.append_trace(go.Violin(\n    x=df['SepalLengthCm']\n), row=1, col=1)\n\nfig.append_trace(go.Violin(\n    x=df['SepalWidthCm']\n), row=2, col=1)\n\nfig.append_trace(go.Violin(\n    x=df['PetalLengthCm']\n), row=1, col=2)\n\nfig.append_trace(go.Violin(\n    x=df['PetalWidthCm'],\n), row=2, col=2)\n\nfig.update_layout(height=600, width=900, title_text=\"Stacked Violin Subplots\",template=\"simple_white\")\nfig.show()","45c63bad":"sns.pairplot(data=df,hue=\"Species\")","9db6c729":"plt.figure(figsize=(15,10))\nsns.stripplot(data=df, x=\"SepalLengthCm\",y=\"SepalWidthCm\",hue=\"Species\",size=8)","d740b71c":"g = sns.PairGrid(data = df,hue = \"Species\",corner = True)\ng.map_lower(sns.kdeplot, hue = None, levels = 4, color = \".2\")\ng.map_lower(sns.scatterplot, marker = \"+\")\ng.map_diag(sns.histplot, element = 'step', linewidth=0,kde=True)\ng.add_legend(frameon=True)\ng.legend.set_bbox_to_anchor((.61,.6))","64f23d15":"plt.figure(figsize=(20,10))\nb = sns.boxplot(data=df,x=\"SepalLengthCm\",y=\"SepalWidthCm\",hue=\"Species\",palette=sns.color_palette(\"bright\"))\nb.axes.set_title(\"SepalLengthCm Vs SepalWidthCm\",fontsize=30)\nb.set_xlabel(\"SepalLengthCm\",fontsize=20)\nb.set_ylabel(\"SepalWidthCm\",fontsize=20)","86767ab9":"plt.figure(figsize=(20,10))\nb = sns.violinplot(data=df,x=\"PetalLengthCm\",y=\"PetalWidthCm\",hue=\"Species\",palette=sns.color_palette(\"husl\"))\nb.axes.set_title(\"PetalLengthCm Vs PetalWidthCm\",fontsize=30)\nb.set_xlabel(\"PetalLengthCm\",fontsize=20)\nb.set_ylabel(\"PetalWidthCm\",fontsize=20)","e5881538":"# Visualization Using Plotly","d4ebdc76":"# Importing The Libraries","e6fc4486":"# Please Do Upvote If You Liked it :) And Happy To Answer Any Queries In The Comments !","dd0c1f9d":"# Visualization Using Seaborn"}}