{"cell_type":{"dd45bdd3":"code","0db651f0":"code","3ec16b48":"code","fae57254":"code","be68ba15":"code","2f9841d5":"code","4723850c":"code","5aaf8ac0":"code","1bc3fa87":"code","b3304551":"code","6c7114f2":"code","c066d586":"code","ae4863e0":"code","49d96bdc":"code","30f27f8c":"code","6fde4066":"code","9ee77c46":"code","58f4adb9":"code","fd1b0a42":"code","bf884edd":"code","101f3571":"code","01377ca6":"code","07fb95d9":"code","79804789":"code","3936909a":"code","d8e0c5f3":"markdown","1bcacbd7":"markdown","fe9e430d":"markdown","cb4e669b":"markdown"},"source":{"dd45bdd3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0db651f0":"import spacy\nimport numpy as np\nimport pandas as pd","3ec16b48":"df_train = pd.read_csv('\/kaggle\/input\/readability-formatted\/new_train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/readability-formatted\/new_test.csv')","fae57254":"import seaborn as sns\nimport matplotlib.pyplot as plt \n\nsns.set_style('whitegrid')","be68ba15":"plt.figure(figsize=(10,10))\nsns.heatmap(df_train[['word count', 'sent count', 'difficult word count','average number of syllables', 'average length of a sentence', 'target']].corr(), annot=True)","2f9841d5":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train['word count'])","4723850c":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train[df_train['target'] < 0]['word count'])\nsns.kdeplot(df_train[df_train['target'] >= 0]['word count'])","5aaf8ac0":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train['sent count'])","1bc3fa87":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train[df_train['target'] < 0]['sent count'])\nsns.kdeplot(df_train[df_train['target'] >= 0]['sent count'])","b3304551":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train['difficult word count'])","6c7114f2":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train[df_train['target'] < 0]['difficult word count'])\nsns.kdeplot(df_train[df_train['target'] >= 0]['difficult word count'])","c066d586":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train['average length of a sentence'])","ae4863e0":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train[df_train['target'] < 0]['average length of a sentence'])\nsns.kdeplot(df_train[df_train['target'] >= 0]['average length of a sentence'])","49d96bdc":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train['average number of syllables'])","30f27f8c":"plt.figure(figsize=(10,2))\nsns.kdeplot(df_train[df_train['target'] < 0]['average number of syllables'])\nsns.kdeplot(df_train[df_train['target'] >= 0]['average number of syllables'])","6fde4066":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping","9ee77c46":"model = Sequential()\n\nmodel.add(Dense(5, activation = 'relu'))\nmodel.add(Dense(10, activation = 'relu'))\n\n\nmodel.add(Dense(16, activation = 'relu'))\nmodel.add(Dense(30, activation = 'relu'))\n\nmodel.add(Dense(16, activation = 'relu'))\nmodel.add(Dense(30, activation = 'relu'))\nmodel.add(Dropout(0.1))\n\nmodel.add(Dense(15, activation = 'relu'))\nmodel.add(Dense(30, activation = 'relu'))\nmodel.add(Dropout(0.1))\n\nmodel.add(Dense(15, activation = 'relu'))\nmodel.add(Dropout(0.1))\n\nmodel.add(Dense(8, activation = 'relu'))\nmodel.add(Dropout(0.1))\n\nmodel.add(Dense(4, activation = 'relu'))\nmodel.add(Dropout(0.1))\n\nmodel.add(Dense(2, activation = 'relu'))\nmodel.add(Dense(1))","58f4adb9":"model.compile(loss='mean_squared_error', optimizer='adam')","fd1b0a42":"X, y = df_train[df_train.columns[3:-1]].values, df_train[df_train.columns[-1]].values","bf884edd":"stop = EarlyStopping(patience=25, monitor='val_loss')\ncallback_list = [stop]\n\nmodel.fit(X, y, epochs=500, validation_split=0.33, callbacks=callback_list)","101f3571":"preds = model.predict(df_test[['word count', 'sent count', 'difficult word count','average number of syllables', 'average length of a sentence']].values)","01377ca6":"preds = pd.DataFrame(preds, columns=['target'])","07fb95d9":"submission = pd.concat([df_test['id'], preds], axis=1, ignore_index=True)","79804789":"submission.head()","3936909a":"submission.to_csv('submission.csv', index=False)","d8e0c5f3":"this is a basic model that uses numerical parameters extracted from the excerpt that can be used to predict the readability index. it can be improved further using other pretrained models and using the actual vectorised text. my next plan is to use a branched network that utilises a convolutional network for the text excerpt and this model for the metrics. then concatenate these to predict the target.","1bcacbd7":"# Data Visualisation and Exploratory Data Analysis:","fe9e430d":"<h4> training phase: <\/h4>","cb4e669b":"# model "}}