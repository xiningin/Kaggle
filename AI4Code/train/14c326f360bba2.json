{"cell_type":{"f7055a31":"code","ee2ac96e":"code","f3ad3776":"code","0335faf2":"code","07ade9b5":"code","0963242a":"code","f084f28f":"code","584ca960":"code","76b246cb":"code","70e30394":"code","fbd91dab":"code","f7c3967b":"code","c1769675":"markdown","e42367f3":"markdown","a3851aed":"markdown","546052cd":"markdown","9182f199":"markdown"},"source":{"f7055a31":"# init\nimport os\nimport numpy as np\nimport pandas as pd\nimport time\nimport warnings \n\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nwarnings.filterwarnings('ignore')","ee2ac96e":"# load metadata\nt1 = time.time()\ndf = pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv')\nt2 = time.time()\nprint('Elapsed time:', t2-t1)","f3ad3776":"# define keyword\nmy_keyword = 'remdesivir'","0335faf2":"def word_finder(i_word, i_text):\n    found = (str(i_text).lower()).find(str(i_word).lower()) # avoid case sensitivity\n    if found == -1:\n        result = 0\n    else:\n        result = 1\n    return result\n\n# partial function for mapping\nword_indicator_partial = lambda text: word_finder(my_keyword, text)\n# build indicator vector (0\/1) of hits\nkeyword_indicator = np.asarray(list(map(word_indicator_partial, df.abstract)))","07ade9b5":"# number of hits\nprint('Number of hits for keyword <', my_keyword, '> : ', keyword_indicator.sum())","0963242a":"# add index vector as additional column\ndf['selection'] = keyword_indicator\n\n# select only hits from data frame\ndf_hits = df[df['selection']==1]","f084f28f":"# show results\ndf_hits","584ca960":"text = \" \".join(abst for abst in df_hits.abstract)","76b246cb":"stopwords = set(STOPWORDS)","70e30394":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","fbd91dab":"# show all abstracts\nn = df_hits.shape[0]\nfor i in range(0,n):\n    print(df_hits.title.iloc[i],\":\\n\")\n    print(df_hits.abstract.iloc[i])\n    print('\\n')","f7c3967b":"# make available for download\ndf_hits.to_csv('hits.csv')","c1769675":"# Filter articles by keywords","e42367f3":"# Wordcloud of abstracts","a3851aed":"### Import data","546052cd":"### Search for specific keyword in abstracts","9182f199":"# Show all abstracts and save to file"}}