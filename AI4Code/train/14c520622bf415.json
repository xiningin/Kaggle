{"cell_type":{"81471c11":"code","0b939ad2":"code","e1476890":"code","7c127c79":"code","301f935f":"code","fd4bfff6":"code","c544b941":"code","741ff021":"code","6b2ae55a":"code","a23972b0":"code","a0b77e88":"code","14eea4c4":"code","f5f9097b":"code","f94d8c08":"code","8e5ad7d6":"code","0b3714be":"code","6fb7a756":"code","f0da400f":"code","36b7ff2b":"code","6a894206":"code","f1a57465":"code","594c9337":"code","4e5e82a8":"code","7ff6fdb2":"code","51e5f03f":"code","32756627":"code","c576d9e4":"code","32f2b681":"code","5211a90c":"code","fd856f71":"code","7074b4b7":"code","7983ccae":"code","c0569cff":"code","d9acae5d":"code","5d84d24a":"code","725d44fb":"code","fe269ffc":"code","1cf029eb":"code","3764462b":"code","1b7cefaa":"code","786183b2":"code","4b7b4804":"code","f02b2c2c":"code","8d1e9606":"code","c1335681":"code","7e93990f":"code","a2eb4afa":"code","d8e9be4c":"code","9edbcea5":"code","652bf8ec":"markdown","32134b66":"markdown","247054b9":"markdown","765178ac":"markdown","d1b7443c":"markdown","dccd6159":"markdown"},"source":{"81471c11":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0b939ad2":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n%matplotlib inline","e1476890":"pd.set_option('display.max_columns', 500)\npd.set_option('display.max_rows', 500)","7c127c79":"data=pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')\ndata.head()","301f935f":"data.info()","fd4bfff6":"data.describe()","c544b941":"numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\nnumeric_data = data.select_dtypes(include=numerics)\nnumeric_data = numeric_data.drop(labels=['Id','MSSubClass','OverallQual','OverallCond','GarageYrBlt',\n                                         'YrSold','YearBuilt','YearRemodAdd','MoSold'],axis=1)\nnumeric_data.head()","741ff021":"cols=numeric_data.columns.values","6b2ae55a":"categorical_data=data.drop(labels=cols ,axis=1)\ncategorical_data.head()","a23972b0":"categorical_data.drop(labels='Id',axis=1,inplace=True)","a0b77e88":"import missingno as msno\nmsno.bar(categorical_data,sort='ascending',labels=True)","14eea4c4":"msno.heatmap(categorical_data)","f5f9097b":"cols=['Alley', 'FireplaceQu', 'PoolQC', 'Fence','MiscFeature','GarageCond','GarageFinish','GarageQual',\n      'GarageType','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','MasVnrType']\ncategorical_data[cols]=categorical_data[cols].fillna(value='None')\n\ncategorical_data['Electrical'].fillna('SBrkr',inplace=True)\ncategorical_data['BsmtFinType2'].fillna('Unf',inplace=True)\ncategorical_data['GarageYrBlt'].fillna(categorical_data.YearBuilt,inplace=True)","f94d8c08":"msno.matrix(categorical_data,labels=True)\n","8e5ad7d6":"msno.matrix(numeric_data)","0b3714be":"numeric_data['LotFrontage'].fillna(numeric_data.LotFrontage.mean(),inplace=True)\nnumeric_data['MasVnrArea'].fillna(numeric_data.MasVnrArea.mean(),inplace=True)             ","6fb7a756":"msno.matrix(numeric_data)","f0da400f":"numeric_data.info()","36b7ff2b":"categorical_data.info()","6a894206":"categorical_data['MSSubClass'] = categorical_data['MSSubClass'].astype(str)\ncategorical_data['OverallCond'] = categorical_data['OverallCond'].astype(str)\ncategorical_data['OverallQual'] = categorical_data['OverallQual'].astype(str)","f1a57465":"categorical_data.info()","594c9337":"data_2=pd.concat([categorical_data,numeric_data],axis=1)","4e5e82a8":"data_2.head()","7ff6fdb2":"pip install pycaret","51e5f03f":"from pycaret.regression import *","32756627":"categorical_data.columns.values","c576d9e4":"model_setup=setup(data=data_2,target='SalePrice',normalize=True,remove_outliers=True,\n        numeric_features=['LotFrontage', 'LotArea', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2',\n       'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF',\n       'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath',\n       'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd',\n       'Fireplaces', 'GarageCars', 'GarageArea', 'WoodDeckSF',\n       'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch',\n       'PoolArea', 'MiscVal'],\n        categorical_features=['MSSubClass', 'MSZoning', 'Street', 'Alley', 'LotShape',\n       'LandContour', 'Utilities', 'LotConfig', 'LandSlope',\n       'Neighborhood', 'Condition1', 'Condition2', 'BldgType',\n       'HouseStyle', 'OverallQual', 'OverallCond', 'RoofStyle', 'RoofMatl', 'Exterior1st',\n       'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond',\n       'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure',\n       'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC',\n       'CentralAir', 'Electrical', 'KitchenQual', 'Functional',\n       'FireplaceQu', 'GarageType','GarageFinish',\n       'GarageQual', 'GarageCond', 'PavedDrive', 'PoolQC', 'Fence',\n       'MiscFeature', 'MoSold', 'SaleType', 'SaleCondition'],\n        date_features=['YrSold','YearRemodAdd','YearBuilt' ,'GarageYrBlt'],train_size = 0.9)","32f2b681":"compare_models(blacklist=['tr'])","5211a90c":"CatBoost=create_model('catboost')\n","fd856f71":"Huber=create_model('huber')\n","7074b4b7":"Bayesian=create_model('br')\n","7983ccae":"Ridge=create_model('ridge')\n","c0569cff":"Lasso=create_model('llar')","d9acae5d":"tuned_catboost=tune_model('catboost')","5d84d24a":"tuned_basean=tune_model('br')","725d44fb":"tuned_Ridge=tune_model('ridge')","fe269ffc":"interpret_model(tuned_catboost)","1cf029eb":"evaluate_model(tuned_basean)","3764462b":"evaluate_model(tuned_Lasso)","1b7cefaa":"evaluate_model(tuned_Ridge)","786183b2":"predict_model(tuned_basean)","4b7b4804":"predict_model(tuned_catboost)","f02b2c2c":"predict_model(tuned_Lasso)","8d1e9606":"predict_model(tuned_Ridge)","c1335681":"final_model = finalize_model(tuned_catboost)","7e93990f":"predict_model(final_model)","a2eb4afa":"data_unseen=pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/test.csv')","d8e9be4c":"predictions = predict_model(final_model, data=data_unseen)\npredictions.head()","9edbcea5":"predictions.to_csv('results.csv')","652bf8ec":"# Handling missing values in Categorical_data table","32134b66":"#  Handling missing values in Numerical_data Table\n","247054b9":"**All Good**","765178ac":"*Only following values are missing from the data*\n* A value near -1 means if one variable appears then the other variable is very likely to be missing.\n* A value near 0 means there is no dependence between the occurrence of missing values of two variables.\n* A value near 1 means if one variable appears then the other variable is very likely to be present.","d1b7443c":"**All Good**","dccd6159":"# Fixing Datatype"}}