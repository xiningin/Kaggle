{"cell_type":{"15fe1fc0":"code","344af261":"code","45ceadfc":"code","686b35e6":"code","c55d8a64":"code","214d3c98":"code","a58f096b":"code","229f0c2a":"code","85150434":"code","74b94c05":"code","6a067fe6":"markdown","4d1a3079":"markdown","ac7b9fa3":"markdown","91bf9135":"markdown"},"source":{"15fe1fc0":"# install required modules\n!pip install geopy\n!pip install folium","344af261":"# import libraries\nimport numpy as np \nimport pandas as pd \nimport folium as fl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom geopy.distance import GreatCircleDistance","45ceadfc":"#create DataFrame\ndf = pd.read_csv(\"..\/input\/bournemouth-venues\/bournemouth_venues.csv\")\ndf.head(5)","686b35e6":"# rename columns\ndf = df.rename(columns = {'Venue Latitude':'latitude','Venue Longitude': 'longitude', 'Venue Category': 'category','Venue Name':'place'})\n\n# Visualize the categories\nprint(df.category.value_counts().iloc[0:11])\nprint(\"total categories :\",df.category.value_counts().shape)\nfig = plt.figure(figsize = (20,5))\nsns.countplot(df[\"category\"][0:10])","c55d8a64":"# Folium map\nmap = fl.Map([50.720913,-1.879085],zoom_start = 15)\n\n# grouping dataframe by category\ndf = df.groupby(\"category\")\nmap","214d3c98":"# extracting  all the rows with hotels\nhotels = df.get_group('Hotel')\nprint(hotels.head(5))\n\n# Separating the hotel locations and converting each attribute into list\nlat = list(hotels[\"latitude\"])\nlon = list(hotels[\"longitude\"])\nplace = list(hotels[\"place\"])\ncat = list(hotels[\"category\"])\n\n# visualize \/ locate hotels--->Markers in red\nfor lt,ln,pl,cat in zip(lat,lon,place,cat):\n    fl.Marker(location = [lt,ln], tooltip = str(pl) +\",\"+str(cat), icon = fl.Icon(color = 'red')).add_to(map)\nmap ","a58f096b":"parks = df.get_group('Park')\n\n# Separating the all park locations and converting each attribute into list\nlat = list(parks[\"latitude\"])\nlon = list(parks[\"longitude\"])\nplace = list(parks[\"place\"])\ncat = list(parks[\"category\"])\nprint(parks)\n\n# parks in green colors\nfor cat,lt,ln,pl in zip(cat,lat,lon,place):\n    fl.Marker(location = [lt,ln], tooltip = str(pl) +\",\"+str(cat), icon = fl.Icon(color = 'green')).add_to(map)\nmap","229f0c2a":"beach = df.get_group('Beach')\nlat_beach = list(beach[\"latitude\"])\nlon_beach = list(beach[\"longitude\"])\nplace = list(beach[\"place\"])\ncat = list(beach[\"category\"])\nprint(beach)\n\n# Beach in blue color\nfor cat,lt,ln,pl in zip(cat,lat_beach,lon_beach,place):\n    fl.Marker(location = [lt,ln], tooltip = str(pl) +\",\"+str(cat), icon = fl.Icon(color = 'blue')).add_to(map)\nmap","85150434":"# latitude and longitude of Hallmark Hotel\nSource = (50.718742,-1.890372)\n\n# Empty list to store the distance\ndistance = []\nfor lt,ln in zip(lat_beach,lon_beach):\n    dist = GreatCircleDistance(Source,(lt,ln))\n    distance.append(dist)\n\n# Draw lines between points\nfor dist,lt,ln in zip(distance,lat_beach,lon_beach):\n    if (dist > 0) and (dist <= 0.6):\n        fl.PolyLine([Source,(lt,ln),],color = \"green\", weight = 4).add_to(map)  \n    elif (dist > 0.6) and (dist <= 0.9):\n        fl.PolyLine([Source,(lt,ln)],color = \"orange\", weight = 3).add_to(map)\n    else :\n        fl.PolyLine([Source,(lt,ln)],color = \"red\", weight = 2).add_to(map)\nmap","74b94c05":"distance","6a067fe6":"**What is Folium?.**\n\nFolium is a powerful Python library that helps you create several types of Leaflet maps. The fact that the Folium results are interactive makes this library very useful for dashboard building.\n\nPlan : \n1. I'm going to use the geospacial data for this tutorial, There are 100 rows in the selected dataset(i.e 100 different co-ordinates).\n1. I will use Pandas groupby to categorize the venues(example : Hotels, Beaches, Parks).\n1. Locate the categories with different colors(ex : Hotels in red, Parks in green color and Beech in blue color).\n1. Distance calculation using Geopy module.\n1. Finding the nearest path from my current location.\n","4d1a3079":"**Work in progress, please upvote if you like it.**","ac7b9fa3":"**Calculating distance between two locations using Geopy**\n\nMy goal is to find the nearest beach from my current location(My location == Hallmark Hotel), I'm going to use the GreatCircleDistance to calculate the distance between two locations.\nDestination points\/locations are all the beaches in Bournemouth, and the source location is Hallmark Hotel((50.718742,-1.890372))).\nFor more information about GreatCircledistance [click here](https:\/\/en.wikipedia.org\/wiki\/Great-circle_distance).\nI'm going to use PolyLine function of the folium module to draw a line between points, Line with color green indicates the nearest distance to the destination(beach) from the source(Hotel - hallmark).\n\n*Note : Distance is calculated in kilometers not miles*\n","91bf9135":"There are 52 categories, Example : Hotels, Beach and Parks etc.\nI will select Hotels, Beaches and Parks and visualize them in the folium map object.\n* Hotels in Red color\n* Beach in Blue color\n* Parks in Green color\n\nSyntax : Folium.Map(Location = [latitude,longitude], zoom_start = 6)"}}