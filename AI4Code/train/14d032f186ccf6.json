{"cell_type":{"d441b03b":"code","e1ebb226":"code","2840d463":"code","cee78b3d":"code","bdb9ee5a":"code","29f9a2d8":"code","d4ea0916":"code","2be06816":"code","d1c86c94":"code","1eac5996":"code","4c8698d1":"code","26732df8":"code","7acffc04":"code","cb3b8bb8":"code","a651921b":"code","c9b48590":"code","0c75fb56":"code","89e5ad3c":"code","57ff9541":"code","c7984518":"code","4667a49a":"code","6fb55d0a":"code","f1527254":"markdown","d4d26188":"markdown","43fcf1cc":"markdown","1c64ce79":"markdown","5d6b560d":"markdown","ca56043e":"markdown","1f520e37":"markdown","647b6f44":"markdown","9767f146":"markdown","a8cafeb7":"markdown","ef51416e":"markdown","a1c0fd0a":"markdown","b29c4110":"markdown","b4d4c462":"markdown","88d78937":"markdown","57864cc1":"markdown","32dd6586":"markdown","508a2255":"markdown","7f4df47e":"markdown","1843f35b":"markdown","0780a9b7":"markdown","5c6668b6":"markdown","c5393db5":"markdown","3bdac535":"markdown","2490be20":"markdown","08f472dc":"markdown"},"source":{"d441b03b":"import pandas as pd\nimport numpy as np\nimport sklearn\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import LabelEncoder, OrdinalEncoder\nfrom sklearn.preprocessing import RobustScaler, StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nimport numpy as np\nimport seaborn as sns","e1ebb226":"trainAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n                        index_col = ['Id'],\n                        sep=r'\\s*,\\s*',\n                        engine='python',\n                        na_values=\"?\")\n\ntestAdult = pd.read_csv('..\/input\/adult-pmr3508\/test_data.csv'\n                   , index_col = ['Id']\n                   , sep=r'\\s*,\\s*'\n                   , engine='python'\n                   , na_values=\"?\")","2840d463":"trainAdult = trainAdult.rename(columns={'age':'Age','workclass':'Workclass','education':'Education','education.num':'Education-Num'\n                            , 'marital.status':'Marital Status', 'occupation':'Occupation', 'relationship':'Relationship'\n                            , 'race':'Race', 'sex': 'Sex', 'capital.gain': 'Capital Gain', 'capital.loss': 'Capital Loss'\n                            , 'hours.per.week': 'Hours per Week', 'native.country':'Native Country', 'income': 'Income'})\n\ntestAdult = testAdult.rename(columns={'age':'Age','workclass':'Workclass','education':'Education','education.num':'Education-Num'\n                            , 'marital.status':'Marital Status', 'occupation':'Occupation', 'relationship':'Relationship'\n                            , 'race':'Race', 'sex': 'Sex', 'capital.gain': 'Capital Gain', 'capital.loss': 'Capital Loss'\n                            , 'hours.per.week': 'Hours per Week', 'native.country':'Native Country', 'income': 'Income'})","cee78b3d":"testAdult.head()","bdb9ee5a":"testAdult.isnull().sum()","29f9a2d8":"trainAdult.isnull().sum()","d4ea0916":"nAdult = testAdult.copy()\n\n#Workclass\nmoda_treino_Workclass = nAdult[\"Workclass\"].mode()\nnAdult[\"Workclass\"] = nAdult[\"Workclass\"].fillna(moda_treino_Workclass).astype(str)\n\n#Occupation\nmoda_treino_Occupation = nAdult[\"Occupation\"].mode()\nnAdult[\"Occupation\"] = nAdult[\"Occupation\"].fillna(moda_treino_Occupation).astype(str)\n\n#Country\nmoda_treino_Country = nAdult[\"Native Country\"].mode()\nnAdult[\"Native Country\"] = nAdult[\"Native Country\"].fillna(moda_treino_Country).astype(str)\n\ntestAdult = nAdult\n\nmAdult = trainAdult.copy()\n\n#Workclass\nmoda_treino_Workclass = mAdult[\"Workclass\"].mode()\nmAdult[\"Workclass\"] = mAdult[\"Workclass\"].fillna(moda_treino_Workclass).astype(str)\n\n#Occupation\nmoda_treino_Occupation = mAdult[\"Occupation\"].mode()\nmAdult[\"Occupation\"] = mAdult[\"Occupation\"].fillna(moda_treino_Occupation).astype(str)\n\n#Country\nmoda_treino_Country = mAdult[\"Native Country\"].mode()\nmAdult[\"Native Country\"] = mAdult[\"Native Country\"].fillna(moda_treino_Country).astype(str)\n\ntrainAdult = mAdult","2be06816":"testAdult.isnull().sum()","d1c86c94":"trainAdult.isnull().sum()","1eac5996":"trainAdult.describe()","4c8698d1":"import matplotlib.pyplot as plt","26732df8":"plt.figure(figsize = (7,7))\ntrainAdult[\"Workclass\"].value_counts().plot(kind=\"pie\")\nplt.title(\"Workclass\")","7acffc04":"trainAdult.hist()","cb3b8bb8":"trainAdult = trainAdult.apply(preprocessing.LabelEncoder().fit_transform)\ntestAdult = testAdult.apply(preprocessing.LabelEncoder().fit_transform)","a651921b":"trainAdult.insert(loc=8, column=\"Capital\", value=trainAdult[\"Capital Gain\"] - trainAdult[\"Capital Loss\"])\ntrainAdult = trainAdult.drop(columns=[\"Capital Gain\", \"Capital Loss\"])\n\ntestAdult.insert(loc=8, column=\"Capital\", value=testAdult[\"Capital Gain\"] - testAdult[\"Capital Loss\"])\ntestAdult = testAdult.drop(columns=[\"Capital Gain\", \"Capital Loss\"])\n\n","c9b48590":"trainAdult.head(10)","0c75fb56":"plt.figure(figsize=(11,1))\n\nsns.heatmap(trainAdult.corr().iloc[[-1]], annot = True, fmt='.2g', vmax = 1, vmin = -1, center = 0, cmap = 'seismic')\nplt.show()","89e5ad3c":"featuresConcentradas = [\"Age\", \"Education\", \"Hours per Week\"]\nscalerConc = StandardScaler()\ntrainAdult[featuresConcentradas] = scalerConc.fit_transform(trainAdult[featuresConcentradas])\ntestAdult[featuresConcentradas] = scalerConc.fit_transform(testAdult[featuresConcentradas])\n\n\nscalerSparse = RobustScaler()\ntrainAdult[[\"Capital\"]] = scalerSparse.fit_transform(trainAdult[[\"Capital\"]])\ntestAdult[[\"Capital\"]] = scalerSparse.fit_transform(testAdult[[\"Capital\"]])\n\n\ntrainAdult.head()","57ff9541":"X = trainAdult.drop(columns=['Income']).values\nY = trainAdult['Income']","c7984518":"kMax = None\naccMax=0\nfor k in range(25, 36):\n    \n    KNNclf = KNeighborsClassifier(n_neighbors=k)\n    \n    score = cross_val_score(KNNclf, X, Y, cv = 10).mean()\n    \n    print(k,\" vizinhos | Score:\", round(score,6))\n\n    if score > accMax:\n        kMax = k\n        accMax = score\n        \nprint('\\nMelhor K: '+str(kMax)+\" | Score:\", round(accMax,6))","4667a49a":"bestKNN = KNeighborsClassifier(n_neighbors=25)\nbestKNN.fit(X,Y)\nX_test = testAdult.values","6fb55d0a":"resultado = bestKNN.predict(X_test)\n\nsubmission = pd.DataFrame(data=resultado).replace(to_replace=[0,1], value=['<=50K','>50K'])\nsubmission.columns = ['income']\nsubmission.to_csv(\"submission.csv\", index = True, index_label = 'Id')","f1527254":"## Visualiza\u00e7\u00e3o e interpreta\u00e7\u00e3o de dados","d4d26188":"## Predi\u00e7\u00e3o da base de teste","43fcf1cc":"Vamos preparar o nosso classificador e o valor de X","1c64ce79":"As vari\u00e1veis que tendem a menos influenciar o income s\u00e3o \"workclass\", \"occupation\" e \"native.county\".","5d6b560d":"Agora que as bases foram importadas, vamos alterar o nome das colunas. O Header e as primeiras linhas da base de dados de testes s\u00e3o apresentados usando a fun\u00e7\u00e3o head().","ca56043e":"## \u00daltimos ajustes e normaliza\u00e7\u00e3o","1f520e37":"## Importa\u00e7\u00e3o de dados","647b6f44":"Vamos agora substituir as vari\u00e1veis \"Capital Gain\" e \"Capital Loss\" pela diferen\u00e7a das duas, \"Capital\".","9767f146":"# PMR3508-2021-8","a8cafeb7":"Usando a fun\u00e7\u00e3o describe() n\u00f3s vamos entender melhor alguns dados e an\u00e1lises sobre o banco de dados de testes.","ef51416e":"Faremos agora o teste do kNN para valores entre 25 e 36 vizinhos. A cross validation ser\u00e1 utilizada para atribuir um score a cada valor.","a1c0fd0a":"Agora vamos visualizar os dados graficamente e interpretar as informa\u00e7\u00f5es da nossa base de dados.","b29c4110":"Agora que os dados foram preparados podemos aplicar o kNN. Vamos come\u00e7ar criando as vari\u00e1veis X e Y","b4d4c462":"Procurando por dados faltantes agora, notamos que todos eles foram substitu\u00eddos pelas modas das vari\u00e1veis na base copiada nAdult.","88d78937":"Agora vamos analisar a correla\u00e7\u00e3o entre as vari\u00e1veis","57864cc1":"Vamos ent\u00e3o utilizar o valor de K=25, pois esse foi o n\u00famero de vizinhos com maios acur\u00e1cia.","32dd6586":"E, por fim, realizar a predi\u00e7\u00e3o dos dados de teste. O resultado \u00e9 ent\u00e3o convertido para csv com o t\u00edtulo \"submission.csv\" e armazenado no reposit\u00f3rio junto com os demais arquivos.","508a2255":"## Aplica\u00e7\u00e3o da kNN","7f4df47e":"Agora vamos fazer a normaliza\u00e7\u00e3o das vari\u00e1veis \"Age\", \"Education\", \"Hours per Week\" e tamb\u00e9m uma normaliza\u00e7\u00e3o robusta para redu\u00e7\u00e3o do impacto dos outliers em \"capital\"","1843f35b":"Agora ser\u00e3o importadas e tratadas tanto a base de treinamento como a de testes.","0780a9b7":"Vamos verificar como ficaram os dados agora","5c6668b6":"Inicialmente s\u00e3o importadas as bibliotecas a serem utilizadas na solu\u00e7\u00e3o.","c5393db5":"Primeiro vamos converter os dados n\u00e3o num\u00e9ricos em num\u00e9ricos.","3bdac535":"O gr\u00e1fico acima mostra que a extensa maioria das pessoas registradas na base de dados trabalham em empresas privadas.","2490be20":"Vamos entender melhor se existem dados faltantes.","08f472dc":"As listas acima nos mostram que existem diversos dados faltantes. Esses valores podem ser substitu\u00eddos pela moda de cada vari\u00e1vel."}}