{"cell_type":{"135c1927":"code","42a8f485":"code","27105371":"code","79ddcb76":"code","504a09f5":"code","8cd2849b":"code","045fcb85":"code","78f569eb":"code","cd02b801":"code","0019c1a6":"code","ff059ee9":"code","8cdc09c1":"code","68c47dc3":"code","c6aa28ca":"code","e6677956":"code","191e6a38":"code","183dc99d":"code","c3222bd0":"code","75bf7f32":"code","8240a6b4":"code","c39abfc9":"code","e7d5756e":"code","9b47fe8a":"code","f6e1f3ca":"code","acf4b9fb":"code","05574e36":"code","521773f1":"code","8bc809f4":"code","1f9727fd":"code","5ae0ee17":"code","d5a68ae6":"markdown","fdfd0d1c":"markdown","1857d1b8":"markdown","eb597893":"markdown","d70cfcb2":"markdown","9ccb3988":"markdown","2e22a876":"markdown"},"source":{"135c1927":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42a8f485":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom sklearn.model_selection import StratifiedKFold\nfrom catboost import CatBoostRegressor, Pool","27105371":"train = pd.read_csv('..\/input\/sai-ml-regression-absenteeism\/train.csv')\ntest = pd.read_csv('..\/input\/sai-ml-regression-absenteeism\/test.csv')\nss = pd.read_csv('..\/input\/sai-ml-regression-absenteeism\/sample_submission.csv')","79ddcb76":"print(train.isnull().sum().sum())\nprint(test.isnull().sum().sum())","504a09f5":"train.describe()","8cd2849b":"train.dtypes","045fcb85":"train.corr()['Absenteeism time in hours']","78f569eb":"plt.figure(figsize=(20,20))\nplt.gca()\nsns.heatmap(train.corr())","cd02b801":"# ID\ntrain['ID'].value_counts()","0019c1a6":"train[train['ID'] == 3]","ff059ee9":"test[test['ID'] == 3]","8cdc09c1":"print(len(train['Reason for absence'].value_counts()))\nprint(len(test['Reason for absence'].value_counts()))","68c47dc3":"plt.figure(figsize=(12,12))\nplt.gca()\nplt.scatter(train['Reason for absence'], train['Absenteeism time in hours'])","c6aa28ca":"plt.figure(figsize=(12,12))\nplt.gca()\nplt.scatter(train['Month of absence'], train['Absenteeism time in hours'])","e6677956":"# month\uac00 \uacfc\uc5f0 \ud070 \uc601\ud5a5\uc774 \uc788\uc744\uae4c?\ntrain.loc[train['Absenteeism time in hours']>=100,'Month of absence']","191e6a38":"drop_list = ['Transportation expense',\n            'Social drinker',\n            'Social smoker',\n            'Disciplinary failure',\n            'Education',\n            'Weight',\n            'Height',\n            'Body mass index']","183dc99d":"train.drop(drop_list,1, inplace=True)\ntest.drop(drop_list,1, inplace=True)","c3222bd0":"train.head()","75bf7f32":"train['Hit target'].hist()","8240a6b4":"test['Hit target'].hist()","c39abfc9":"plt.scatter(train['Hit target'], train['Absenteeism time in hours'])","e7d5756e":"kmeans_train = train.drop(['Absenteeism time in hours'], axis=1)\nkmeans = KMeans(n_clusters=16, random_state=42).fit(kmeans_train)\ntrain['cluster'] = kmeans.predict(kmeans_train)\ntest['cluster'] = kmeans.predict(test)","9b47fe8a":"n_est = 2000\nseed = 42\nn_fold = 5\n# n_class = 3\n\ntarget = 'Absenteeism time in hours'\nX = train.drop(target, axis=1)\ny = train[target]\nX_test = test","f6e1f3ca":"model_cat.predict(X_valid)","acf4b9fb":"skfold = StratifiedKFold(n_splits=n_fold, shuffle=True, random_state=seed)\nfolds=[]\nfor train_idx, valid_idx in skfold.split(X, y):\n        folds.append((train_idx, valid_idx))\n\ncat_pred = np.zeros((X.shape[0]))\ncat_pred_test = np.zeros((X_test.shape[0]))\ncat_cols = ['ID']\nfor fold in range(n_fold):\n    print(f'\\n----------------- Fold {fold} -----------------\\n')\n    train_idx, valid_idx = folds[fold]\n    X_train, X_valid, y_train, y_valid = X.iloc[train_idx], X.iloc[valid_idx], y[train_idx], y[valid_idx]\n    train_data = Pool(data=X_train, label=y_train, cat_features=cat_cols)\n    valid_data = Pool(data=X_valid, label=y_valid, cat_features=cat_cols)\n\n    model_cat = CatBoostRegressor()\n    model_cat.fit(train_data, eval_set=valid_data, use_best_model=True, early_stopping_rounds=100, verbose=100)\n\n    cat_pred[valid_idx] = model_cat.predict(X_valid)\n    cat_pred_test += model_cat.predict(X_test) \/ n_fold","05574e36":"ss=pd.read_csv('..\/input\/sai-ml\/sample_submission.csv')","521773f1":"test","8bc809f4":"ss.to_csv('baseline.csv',index=False)","1f9727fd":"# from sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nmean_squared_error(train['Absenteeism time in hours'],cat_pred)","5ae0ee17":"ss['Prediction'] = cat_pred_test","d5a68ae6":"## 1. ID","fdfd0d1c":"# \uc758\ubbf8 \uc5c6\uc744 \uac83 \uac19\uc740 columns\n- \uad50\ud1b5\ube44\n- Social drinker (\uc0ac\uad50\uc801 \uc74c\uc8fc \uc5ec\ubd80: \uc608(1) \uc544\ub2c8\uc624(0)): '(\uc0ac\ud68c\uc801\uc778) \uc77c\uc774 \uc788\uc744 \ub54c\ub9cc \uc220\uc744 \ub9c8\uc2dc\ub294 \uc0ac\ub78c'\uc744 \uc9c0\uce6d\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n- Social smoker (\uc0ac\uad50\uc801 \ud761\uc5f0 \uc5ec\ubd80: \uc608(1) \uc544\ub2c8\uc624(0)): '\ub2e4\ub978 \uc0ac\ub78c\ub4e4\uc774 \ub2f4\ubc30\ub97c \ud53c\uac70\ub098 \uc5b4\ub5a4 \ubaa8\uc784\uc5d0 \uac14\uc744 \ub54c\ub9cc \ub2f4\ubc30\ub97c \ud53c\ub294 \uc0ac\ub78c'\uc744 \uc9c0\uce6d\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n- Disciplinary failure (\uc9d5\uacc4 \uc2e4\ud328, \uc608(1), \uc544\ub2c8\uc624(0))\n- Education (\ud559\ub825: \uace0\ub4f1\ud559\uad50(1), \ub300\ud559\uad50 \uc878\uc5c5(2), \ub300\ud559\uc6d0 \uc7ac\ud559(3), \uc11d\ubc15\uc0ac \ud559\uc704(4))\n- Weight (\ubab8\ubb34\uac8c)\n- Height (\ud0a4)\n- Body mass index (BMI, \uccb4\uc9c8\ub7c9\uc9c0\uc218)","1857d1b8":"## 2. Reason for absence\n- train\uacfc test\uc758 degree\uac00 \ub2e4\ub974\ub2e4\n- train\uc73c\ub85c scatterplot\uc744 \ucc0d\uc5b4\ubcf4\uc790","eb597893":"# 3. Month of absence","d70cfcb2":"1. 0~20, \n2. 20~40,\n3. 40~60, \n4. 100\uc774\uc0c1\uc758 \ubd84\ud3ec\ub97c \uac01\uac01 \uac00\uc9c0\ub294 bin\uc73c\ub85c \ubc14\uafd4\uc904\uae4c?","9ccb3988":"- ID(\uac1c\uc778 \uc2dd\ubcc4 \ucf54\ub4dc)\n- Reason for absence (\uacb0\uadfc \uc0ac\uc720): \uad6d\uc81c \uc9c8\ubcd1 \ubd84\ub958 \uccb4\uacc4\uc5d0 \uc758\ud574 \ubd84\ub958\ub41c 21\uac00\uc9c0 + \ubd84\ub958 \ucf54\ub4dc\uac00 \uc5c6\ub294 7\uac00\uc9c0\ub85c \uad6c\uc131\ub41c \uce74\ud14c\uace0\ub9ac *\uc544\ub798 '\ubcc4\ucca8' \ucc38\uace0\n- Month of absence (\uacb0\uadfc \uc6d4)\n- Day of the week (\uacb0\uadfc \uc694\uc77c: \uc6d4(2), \ud654(3), \uc218(4), \ubaa9(5), \uae08(6))\n- Seasons (\uacc4\uc808)\n- Transportation expense (\uad50\ud1b5\ube44)\n- Distance from Residence to Work (\uac70\uc8fc\uc9c0\uc640 \uc9c1\uc7a5 \uc0ac\uc774 \uac70\ub9ac, km)\n- Service time (\uadfc\ubb34 \uc2dc\uac04?)\n- Age (\ub098\uc774)\n- Work load Average\/day (\ud558\ub8e8 \uc791\uc5c5\ub7c9)?\n- Hit target ()?\n- Disciplinary failure (\uc9d5\uacc4 \uc2e4\ud328, \uc608(1), \uc544\ub2c8\uc624(0))\n- Education (\ud559\ub825: \uace0\ub4f1\ud559\uad50(1), \ub300\ud559\uad50 \uc878\uc5c5(2), \ub300\ud559\uc6d0 \uc7ac\ud559(3), \uc11d\ubc15\uc0ac \ud559\uc704(4))\n- Son (\uc790\ub140 \uc218)\n- Social drinker (\uc0ac\uad50\uc801 \uc74c\uc8fc \uc5ec\ubd80: \uc608(1) \uc544\ub2c8\uc624(0)): '(\uc0ac\ud68c\uc801\uc778) \uc77c\uc774 \uc788\uc744 \ub54c\ub9cc \uc220\uc744 \ub9c8\uc2dc\ub294 \uc0ac\ub78c'\uc744 \uc9c0\uce6d\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n- Social smoker (\uc0ac\uad50\uc801 \ud761\uc5f0 \uc5ec\ubd80: \uc608(1) \uc544\ub2c8\uc624(0)): '\ub2e4\ub978 \uc0ac\ub78c\ub4e4\uc774 \ub2f4\ubc30\ub97c \ud53c\uac70\ub098 \uc5b4\ub5a4 \ubaa8\uc784\uc5d0 \uac14\uc744 \ub54c\ub9cc \ub2f4\ubc30\ub97c \ud53c\ub294 \uc0ac\ub78c'\uc744 \uc9c0\uce6d\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n- Pet (\ud0a4\uc6b0\ub294 \ub3d9\ubb3c\uc758 \uc218)\n- Weight (\ubab8\ubb34\uac8c)\n- Height (\ud0a4)\n- Body mass index (BMI, \uccb4\uc9c8\ub7c9\uc9c0\uc218)","2e22a876":"- \uac1c\uc778 \uc2dd\ubcc4\uc744 \uc704\ud55c ID\n- train\uacfc test\uc758 ID\ub294 \uac19\uc740 \uc0ac\ub78c\uc744 \uac00\ub9ac\ud0a8\ub2e4."}}