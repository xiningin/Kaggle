{"cell_type":{"31fc0f75":"code","5c191cc0":"code","423c8232":"code","5e8f3eb7":"code","4ad05f0a":"code","cf2561a9":"code","d629dc6b":"code","c2d21a4b":"code","5bb88e17":"code","c7c9d409":"code","3869c7bf":"markdown","4a1d3df5":"markdown"},"source":{"31fc0f75":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5c191cc0":"# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.metrics import accuracy_score","423c8232":"# Importing the dataset\ndataset=pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndataset","5e8f3eb7":"#now first we will try simple linear regression to find the relationship between mbap (outcome variable) and sscp & hscp as the two predictor variables.\nX=dataset.iloc[:,[2,4]].values\nY=dataset.iloc[:,12].values.reshape(-1,1)\n","4ad05f0a":"X","cf2561a9":"Y","d629dc6b":"\n# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=0)","c2d21a4b":"\n#fitting multiple linear regression to the training set\nfrom sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(X_train,Y_train)","5bb88e17":"#predicting the test result\ny_pred=regressor.predict(X_test)\n","c7c9d409":"df = pd.DataFrame({'Actual': Y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf\n","3869c7bf":"In the case of Multiple Linear Regresssion the regression equation is pretty much the same as the simple regression equation, just with more variables:\n\n**Y\u2019i = b0 + b1X1i + b2X2i**","4a1d3df5":"multiple linear regression equation with mbap as response variable and sscp & hscp as the two predictor variables."}}