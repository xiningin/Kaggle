{"cell_type":{"9f5b7b68":"code","84913fad":"code","86e05042":"markdown"},"source":{"9f5b7b68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","84913fad":"import plotly.figure_factory as ff\ndf = [dict(Task=\"Current\", Start='2017-02-15 8:30:00', Finish='2017-02-15 9:00:00', Resource='Patient-1'),\n      dict(Task=\"Current\",Start='2017-02-15 9:00:00', Finish='2017-02-15 9:30:00', Resource='Patient-2'),\n     dict(Task=\"Current\", Start='2017-02-15 9:30:00', Finish='2017-02-15 10:00:00', Resource='Patient-3'),\n      dict(Task=\"Current\", Start='2017-02-15 10:00:00', Finish='2017-02-15 10:30:00', Resource='Patient-4'),\n      dict(Task=\"Current\", Start='2017-02-15 10:30:00', Finish='2017-02-15 11:00:00', Resource='Patient-5'),\n      dict(Task=\"Current\", Start='2017-02-15 11:00:00', Finish='2017-02-15 11:30:00', Resource='Patient-6'),\n      dict(Task=\"Current\", Start='2017-02-15 11:30:00', Finish='2017-02-15 12:00:00', Resource='Patient-7'),\n      dict(Task=\"Current\", Start='2017-02-15 8:30:00', Finish='2017-02-15 9:00:00', Resource='Patient-8'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 8:30:00', Finish='2017-02-15 8:45:00', Resource='Patient-1'),\n      dict(Task=\"Current_realized\",Start='2017-02-15 9:00:00', Finish='2017-02-15 9:30:00', Resource='Patient-2'),\n     dict(Task=\"Current_realized\", Start='2017-02-15 9:30:00', Finish='2017-02-15 10:00:00', Resource='Patient-3'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 10:00:00', Finish='2017-02-15 10:30:00', Resource='Patient-4'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 10:30:00', Finish='2017-02-15 11:00:00', Resource='Patient-5'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 11:00:00', Finish='2017-02-15 11:30:00', Resource='Patient-6'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 11:30:00', Finish='2017-02-15 12:00:00', Resource='Patient-7'),\n      dict(Task=\"Current_realized\", Start='2017-02-15 8:30:00', Finish='2017-02-15 9:00:00', Resource='Patient-8'),\n     dict(Task=\"Kformula\", Start='2017-02-15 8:30:00', Finish='2017-02-15 9:00:00', Resource='Patient-1'),\n      dict(Task=\"Kformula\",Start='2017-02-15 9:00:00', Finish='2017-02-15 9:30:00', Resource='Patient-2'),\n     dict(Task=\"Kformula\", Start='2017-02-15 9:30:00', Finish='2017-02-15 10:00:00', Resource='Patient-3'),\n      dict(Task=\"Kformula\", Start='2017-02-15 10:00:00', Finish='2017-02-15 10:30:00', Resource='Patient-4'),\n      dict(Task=\"Kformula\", Start='2017-02-15 10:30:00', Finish='2017-02-15 11:00:00', Resource='Patient-5'),\n      dict(Task=\"Kformula\", Start='2017-02-15 11:00:00', Finish='2017-02-15 11:30:00', Resource='Patient-6'),\n      dict(Task=\"Kformula\", Start='2017-02-15 11:30:00', Finish='2017-02-15 12:00:00', Resource='Patient-7'),\n      dict(Task=\"Kformula\", Start='2017-02-15 8:30:00', Finish='2017-02-15 9:00:00', Resource='Patient-8')]\n\ncolors = {'Patient-1': 'rgb(220, 0, 0)',\n          'Patient-2': (1, 0.9, 0.16),\n         'Patient-3': 'rgb(0, 255, 100)',\n         'Patient-4': 'rgb(100, 255, 100)',\n          'Patient-5': 'rgb(220, 0, 0)',\n          'Patient-6': (1, 0.9, 0.16),\n         'Patient-7': 'rgb(0, 255, 100)',\n         'Patient-8': 'rgb(100, 255, 100)'}\n\nfig = ff.create_gantt(df,  index_col='Resource', colors = colors,\n                      group_tasks=True)\nfig.show()","86e05042":"I created gannt chart for the current and current_realized to see the difference. There are other scenarios needs to be included here as well using the dataset. "}}