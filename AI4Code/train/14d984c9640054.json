{"cell_type":{"9314b9ac":"code","50d0b158":"code","1cd29ac0":"code","34cc2e1f":"code","e57c3c61":"code","26f9fef7":"code","39e713dc":"code","2be77cc3":"code","48d9ff67":"code","9c065792":"code","41fcb489":"code","16a2dbff":"code","0aa524bd":"code","c5712cc0":"code","12487139":"code","5b512860":"code","2ee25d9b":"code","41798345":"code","7d891ced":"code","fea1573b":"code","54804951":"code","e0b3ff6b":"code","c5dc34cc":"code","74e76d46":"code","07f87347":"code","7b25ffd8":"code","406a6094":"code","c69d06ab":"code","fe45defc":"code","585866ba":"code","a046c339":"code","37fefcc5":"code","936965a6":"code","98a9fe9f":"code","b893731d":"code","36454fcf":"code","c9baf78d":"code","dd1e894a":"code","88edee84":"code","76429b29":"code","801bdc7b":"markdown","ff95d356":"markdown","39c9d90c":"markdown","1d0406e6":"markdown","fa5076e8":"markdown","a60112c9":"markdown","4e654234":"markdown","d2b56e07":"markdown","7caac1df":"markdown","f87a40fb":"markdown","10906cba":"markdown"},"source":{"9314b9ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50d0b158":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport seaborn as sns\nimport missingno as mn","1cd29ac0":"df =  pd.read_csv(r'\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","34cc2e1f":"df","e57c3c61":"df['stroke'].value_counts()","26f9fef7":"# lets check all stats\ndf.describe()","39e713dc":"# lets check for null values \ndf.isnull().sum()","2be77cc3":"# we need to first examine connections of missing values \nmn.matrix(df)","48d9ff67":"mn.heatmap(df)","9c065792":"mn.dendrogram(df)","41fcb489":"# so we can fill bmi's missing values with smoking_status vlues as we can see the connection from the dendrogram\ndf[df['bmi'].isnull()]['smoking_status'].value_counts()","16a2dbff":"from matplotlib import pyplot as plt\nplt.hist(df['bmi'])","0aa524bd":"# Since the data Above it too diversified its not safe to fill using just one cateogry with the remaining missing values\n# instead we shall use interpolation to fetch the nearest form of data to fill the missing values\ndf['bmi'] = df['bmi'].interpolate(method ='linear', limit_direction='forward')","c5712cc0":"# lets check if that worked \ndf.isnull().sum()","12487139":"# lets check all correlations here \ndf.corr()","5b512860":"# lets groupby bmi\n# to get more insights on interelated health variables together through visualization\nhealth_status = df.groupby(by = 'bmi')","2ee25d9b":"# LETS NOW CHECK ITS RELATIONS WITH other variables\nhealth_status.plot.bar();","41798345":"measure = df[['avg_glucose_level','stroke']].head(20)","7d891ced":"measure.sort_values(by='avg_glucose_level')","fea1573b":"# lets check the relationship throughout all given datapoints in both attributes\ndf.plot.scatter('avg_glucose_level','stroke')","54804951":"df","e0b3ff6b":"# lets drop unnessecary categorical columns \ndf.drop(['gender'], axis=1, inplace=True)","c5dc34cc":"df.drop(['smoking_status'], axis=1, inplace=True)","74e76d46":"df.drop(['ever_married'], axis=1, inplace=True)","07f87347":"df.drop(['work_type'], axis=1, inplace=True)","7b25ffd8":"df.drop(['Residence_type'], axis=1, inplace=True)","406a6094":"x = df.drop(['stroke'], axis=1)","c69d06ab":"y = df['stroke']","fe45defc":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split as ttl","585866ba":"# lets split the training and testing data \n\ntx, tex, ty, tey = ttl(x, y, test_size=0.3, random_state=0)","a046c339":"Model_str = LinearRegression()","37fefcc5":"# now lets fit the training data \nModel_str = Model_str.fit(tx,ty)","936965a6":"Model_str.intercept_","98a9fe9f":"Model_str.coef_","b893731d":"# Now to predict with the test data \nModel_str.predict(tex)","36454fcf":"prediction = Model_str.predict(tex)","c9baf78d":"from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error","dd1e894a":"r2_score(prediction, tey)","88edee84":"mean_absolute_error(prediction, tey)","76429b29":"mean_squared_error(prediction, tey)","801bdc7b":"# ****File Introduction****","ff95d356":"Lets se x and y variables to make predictions for strock","39c9d90c":"# SO based on these results it is undoubtly correct that our models predictions are highly inaccurate as stated for the reason above because the accuracy of the data fed into it is not enough to amalgamate a prediction for strock without knowing the remaining blood history of the patient.\n# However our model serves as good based model and benchmark on how to predict a strock using the right data for any future model","1d0406e6":"# Our Prediction has been made and shows some level of accuracy based on the data we fed it, its not accurate because we havent taken into place Patient with already present health conditions based on their blood test analysis ","fa5076e8":"# lets now make a prediction using linear regression in uspervised machine learning algorithms","a60112c9":"# Thus we should now Validate our datas accuracy and check where our errors have been made.","4e654234":"As our data is not accruate about measurements of stroke rates, thus the max insights we can derive here is that patients with higher glucose levels have a higher chance of strock, which is agreed upon by medicinal principles and can be checked here \nhttps:\/\/www.google.com\/search?q=high+glucose+level+risks&oq=high+glucose+level+ri&aqs=chrome.0.0j69i57j0i22i30j0i390l2.7168j0j7&sourceid=chrome&ie=UTF-8","d2b56e07":"# Exploratory Data Analysis","7caac1df":"Thus we have no filled all missing values and now we conduct exploratory data analysis","f87a40fb":"# No lets fill in the missing values","10906cba":"We can see that there are missing values and errors in the data which we have to first recitfy and further confirm as we can see above that the count of bmi does not match the  count of the remaining attributes"}}