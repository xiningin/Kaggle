{"cell_type":{"6a18f3a6":"code","588ae4b3":"code","0241034c":"code","ff1756df":"code","71ef2381":"code","41441062":"code","165aa3d8":"code","1cbd1edf":"code","7ec808a4":"code","c18b09b5":"code","7d8e7c97":"code","49b18379":"code","9b9face6":"code","41c7f41b":"code","0bfe0c80":"code","92871880":"code","12264dbc":"code","442a8322":"code","3799b9f0":"code","2c9f8a9f":"code","2499bed8":"code","97e90232":"code","1c6a36ab":"code","9095ba11":"code","a78bd9d2":"code","d4670c15":"code","4fadde09":"code","75314f0d":"code","2695afdc":"code","92788ebf":"code","6e771cb5":"code","93cb73d6":"code","2249213f":"code","5fd41872":"code","52bf69e4":"code","f8951411":"code","8cbca338":"code","89c0990e":"code","f6d2385c":"code","4c83d845":"code","ba5201a3":"code","7afce2cd":"code","b26ace30":"code","43c94f35":"code","4b6fb447":"code","a280cf44":"code","564e3fbe":"code","d8fdf160":"code","6533f7ab":"code","98103fff":"code","ededc3ae":"code","783cc96e":"code","b34dae88":"code","a2bc3f51":"code","1321998b":"code","8fddf8fa":"code","976b874e":"code","d99652c9":"code","dae104c5":"code","3474a087":"code","25a788f2":"code","67d2f087":"code","81b79169":"code","7bc4aff4":"code","0ee0e7f3":"code","aa3b2535":"code","bef3d929":"code","7897b1ca":"code","45804b4a":"code","cec867e3":"code","2dfe036e":"markdown","f6f4d0f2":"markdown","c583169d":"markdown","e6f2321d":"markdown","336e0ffd":"markdown","4045390f":"markdown","5f29a515":"markdown","1dd18d1b":"markdown","134e50bf":"markdown","444d4ff8":"markdown"},"source":{"6a18f3a6":"import pandas as pd\nimport numpy as np\nimport plotly\nimport plotly.express as px\nimport plotly.offline as pyo\nimport cufflinks as cf\nfrom plotly.offline import init_notebook_mode,plot,iplot\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score\nimport os","588ae4b3":"pyo.init_notebook_mode(connected=True)\ncf.go_offline()","0241034c":"iris=pd.read_csv(\"..\/input\/iris\/Iris.csv\")","ff1756df":"iris","71ef2381":"iris.shape","41441062":"iris.drop('Id',axis=1,inplace=True)","165aa3d8":"iris","1cbd1edf":"px.scatter(iris,x='Species',y='PetalWidthCm')","7ec808a4":"px.scatter(iris,x='Species',y='PetalWidthCm',size='PetalWidthCm')","c18b09b5":"plt.bar(iris['Species'],iris['PetalWidthCm'])##matplotlib","7d8e7c97":"##plotly express\npx.bar(iris,x='Species',y='PetalWidthCm')","49b18379":"iris.iplot(kind='bar',x=['Species'],y=['PetalWidthCm'])","9b9face6":"px.line(iris,x='Species',y='PetalWidthCm')","41c7f41b":"iris.rename(columns={'SepalLengthCm':'SepalLength','SepalWidthCm':'SepalWidth','PetalLengthCm':'PetalLength','PetalWidthCm':'PetalWidth'},inplace=True)","0bfe0c80":"iris","92871880":"px.scatter_matrix(iris,color='Species',title='Iris',dimensions=['SepalLength','SepalWidth','PetalWidth','PetalLength'])","12264dbc":"iris","442a8322":"X=iris.drop(['Species'],axis=1)","3799b9f0":"X","2c9f8a9f":"y=iris['Species']","2499bed8":"y","97e90232":"from sklearn.preprocessing import LabelEncoder\n\nle=LabelEncoder()\n\ny=le.fit_transform(y)","1c6a36ab":"y","9095ba11":"X=np.array(X)","a78bd9d2":"from sklearn.model_selection import train_test_split  ##(train and predict,x-features,y-labels)\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0) ## test size 30% of data  random state=int (return to same value) or return to random value \n","d4670c15":"X_train.size\n","4fadde09":"X_train","75314f0d":"y_test","2695afdc":"X_test.size\n","92788ebf":"from sklearn import tree\ndt=tree.DecisionTreeClassifier()\ndt.fit(X_train,y_train)","6e771cb5":"predict_dt=dt.predict(X_test)\naccuracy_dt=accuracy_score(y_test,predict_dt)*100","93cb73d6":"accuracy_dt","2249213f":"y_test","5fd41872":"predict_dt","52bf69e4":"os.environ[\"PATH\"]+= os.pathsep+(r'C:\\Program Files (x86)\\Graphviz2.38\\bin')\nimport graphviz\nvis_data=tree.export_graphviz(dt,out_file=None,feature_names=iris.drop(['Species'],axis=1).keys(),class_names=iris['Species'].unique(),filled=True,rounded=True, special_characters=True,)","f8951411":"graphviz.Source(vis_data)","8cbca338":"iris['Species'].unique()","89c0990e":"Category=['Iris-setosa','Iris-versicolor','Iris-virginica']","f6d2385c":"x_Data=5,2.3,3.3","4c83d845":"x_Data","ba5201a3":"x_Dt=np.array([[1, 1, 1,1]])\nx_Dt_prediction=dt.predict(x_Dt)","7afce2cd":"x_Dt_prediction[0]\nprint(Category[int(x_Dt_prediction[0])])","b26ace30":"iris.head(3)","43c94f35":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler().fit(X_train) ## analyze pattern ,cm,inch,km,all units\nX_train_std=sc.transform(X_train)\nX_test_std=sc.transform(X_test)\n","4b6fb447":"X_train[0:3,:]","a280cf44":"X_train_std[0:3,:]","564e3fbe":"from sklearn.neighbors import KNeighborsClassifier\nknn= KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train_std,y_train)","d8fdf160":"predict_knn=knn.predict(X_test_std)\naccuracy_knn=accuracy_score(y_test,predict_knn)*100","6533f7ab":"accuracy_knn","98103fff":"x_knn=np.array([[6, 3.3, 6, 2.5]])\n","ededc3ae":"x_knn_std=sc.transform(x_knn)","783cc96e":"x_knn_std","b34dae88":"x_knn_prediction=knn.predict(x_knn_std)\nx_knn_prediction[0]\nprint(Category[int(x_knn_prediction[0])])","a2bc3f51":"k_range=range(1,26)\nscores={}\nscores_list=[]\nfor k in k_range:\n    knn=KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train_std,y_train)\n    prediction_knn=knn.predict(X_test_std)\n    scores[k]=accuracy_score(y_test,prediction_knn)\n    scores_list.append(accuracy_score(y_test,prediction_knn))","1321998b":"scores_list","8fddf8fa":"plt.plot(k_range,scores_list)","976b874e":"y","d99652c9":"colormap=np.array(['Red','green','blue'])\nfig=plt.scatter(iris['PetalLength'],iris['PetalWidth'],c=colormap[y],s=50)","dae104c5":"iris","3474a087":"X","25a788f2":"from sklearn.cluster import KMeans\nkn=KMeans(n_clusters=3,random_state=2,n_jobs=4) ##n_jobs =paralization\nkn.fit(X)\n\n","67d2f087":"centers=kn.cluster_centers_\nprint(centers)","81b79169":"kn.labels_\n","7bc4aff4":"Category","0ee0e7f3":"Category=['Iris-versicolor','Iris-setosa','Iris-virginica']","aa3b2535":"Category","bef3d929":"colormap=np.array(['Red','green','blue'])\nfig=plt.scatter(iris['PetalLength'],iris['PetalWidth'],c=colormap[kn.labels_],s=50)\n","7897b1ca":"new_labels=kn.labels_\nfig,axes=plt.subplots(1,2,figsize=(16,8))\naxes[0].scatter(X[:,2],X[:,3],c=y,cmap='gist_rainbow',edgecolor='k',s=150)\naxes[1].scatter(X[:,2],X[:,3],c=y,cmap='jet',edgecolor='k',s=150)\naxes[0].set_title('actual',fontsize=18)\naxes[1].set_title('predicted',fontsize=18)","45804b4a":"x_kn=np.array([[6, 3, 4.8 ,1.8]])\n","cec867e3":"x_kn_prediction=kn.predict(x_kn)\nx_kn_prediction[0]\nprint(Category[int(x_kn_prediction[0])])","2dfe036e":"# Unsupervised -Clustering (Means Clustering)","f6f4d0f2":"# Using Matplotlib Data Visualization","c583169d":"# Scatter_Matrix","e6f2321d":"# Implementing K-NN Classification","336e0ffd":"# Training Decision Tree","4045390f":"# Training And Testing","5f29a515":"# *Visualization of Data*","1dd18d1b":"# Label Encounter(Encode Data into Numerical)","134e50bf":"# Data Preprocessing","444d4ff8":"# Using Standard Scaler"}}