{"cell_type":{"2124e16e":"code","b04e3802":"code","fd14871f":"code","b4072d88":"code","127f1224":"code","6b1e420b":"code","f5cbb6f9":"code","069af487":"code","67c801ae":"code","b9e728f3":"code","35b03a91":"code","fe57a731":"code","764f5314":"markdown","749ac827":"markdown","ad4c32ec":"markdown","469d6789":"markdown","25bdfefc":"markdown","dd17c431":"markdown","fec02090":"markdown","d23b56ed":"markdown"},"source":{"2124e16e":"%pip install lmfit","b04e3802":"import pandas as pd\nimport numpy as np\nfrom datetime import datetime\nfrom datetime import timedelta \nfrom scipy.optimize import curve_fit\nimport seaborn as sns\nfrom datetime import datetime\nfrom datetime import timedelta \nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.pyplot as plt\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_notebook,show\nfrom lmfit.model import Model\noutput_notebook()\ndf = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-2\/train.csv\")\ndf.head()","fd14871f":"df_it = df[df['Country_Region']=='Italy']","b4072d88":"df_it['Date'] = pd.to_datetime(df_it[\"Date\"])\np = figure(x_axis_type=\"datetime\",title=\"Corona Italy\", plot_height=300, plot_width=800,\n           background_fill_color='#F6F8F9')\np.line(df_it['Date'],df_it['ConfirmedCases'],legend_label='ConfirmedCases',line_color='#EB19FF',\n      line_width=2)\np.line(df_it['Date'],df_it['Fatalities'],legend_label='Fatalities',line_color='red',\n       line_width=2)\np.legend.location = \"top_left\"\nshow(p, notebook_handle=True)","127f1224":"df_it['ConfirmedCasesChange'] = df_it['ConfirmedCases'].pct_change()\ndf_it['Fatalities_change'] = df_it['Fatalities'].pct_change()\npop = df_it.pop('Province_State')","6b1e420b":"df_it.dropna(inplace=True)\ndf_it.head()","f5cbb6f9":"df_it.drop(index=9830,inplace=True)\nplt.subplots(1,1,figsize=(10,5))\nsns.distplot(df_it['Fatalities_change'],bins=len(df_it),label='Fatalities change')\nsns.distplot(df_it['ConfirmedCasesChange'],bins=len(df_it),label='ConfirmedCases change')\nplt.legend()\nplt.show()","069af487":"x = []\nfor i in range(len(df_it.index)):\n    x.append(i)\ny = df_it['ConfirmedCases']\ndef exp_func(x,a,b):\n    return a*np.exp(b*x)\n\nexponmodel = Model(exp_func)\nparams = exponmodel.make_params(a=5, b=0.01)\nresult = exponmodel.fit(y, params, x=x)\nprint(result.fit_report())","67c801ae":"p = figure(x_axis_type=\"datetime\",title=\"Corona Italy\", plot_height=300, plot_width=800,\n           background_fill_color='#000000')\np.line(df_it['Date'],result.best_fit,legend_label='fitted',line_color='#F73E5F',\n      line_width=4)\np.circle(df_it['Date'],y,legend_label='ConfirmedCases',color='#39E639',\n       size=5)\np.legend.location = \"top_left\"\nshow(p, notebook_handle=True)","b9e728f3":"def f(x, a, b, c):\n    return a \/ (1. + np.exp(-c * (x - b))) \nlogistic = Model(f)\nparams = logistic.make_params(a=0, b=0,c=0)\nresult = logistic.fit(y, params, x=x)\nprint(result.fit_report())","35b03a91":"p = figure(x_axis_type=\"datetime\",title=\"Corona Italy\", plot_height=300, plot_width=800,\n           background_fill_color='#000000')\np.line(df_it['Date'],result.best_fit,legend_label='fitted',line_color='#F73E5F',\n      line_width=4)\np.circle(df_it['Date'],y,legend_label='ConfirmedCases',color='#39E639',\n       size=5)\np.legend.location = \"top_left\"\nshow(p, notebook_handle=True)","fe57a731":"a =result.best_values['a']\nb =result.best_values['b']\nc =result.best_values['c']\nx_predict = np.arange(start=x[0], stop=x[-1]+60)\ny_predict = f(x_predict, a, b, c)\nd = datetime(2020, 2, 22)\nnumdays = 98\ndate_list = [d - timedelta(days=-x) for x in range(numdays)]\np = figure(x_axis_type=\"datetime\",title=\"Corona Italy\", plot_height=300, plot_width=800,\n           background_fill_color='#000000')\np.line(date_list,result.best_fit,legend_label='fitted',line_color='#F73E5F',\n      line_width=4)\np.circle(date_list,y,legend_label='Confirmed',color='#39E639',\n       size=5)\np.circle(date_list,y_predict,legend_label='Predicted',color=\"#FFFD40\",\n       size=2)\np.legend.location = \"top_left\"\nshow(p, notebook_handle=True)","764f5314":"\nQuite good but as we can see the expotentiel curve miss fit some points.\n\nNow lest's try the logistic curve","749ac827":"Focusing on Itlay","ad4c32ec":"The aims of this kernel is to estimate the potentiel evolution of Convid-19 in case of Italy by comparing logistic vs exponentiel curve.\n\n***1-Loading required libraries and the data***","469d6789":"Great! looks like that logistic curve fit the data much better.\n\nNow we have our model with optimal parameters we can make","25bdfefc":"Confirmed cases and Death Curve","dd17c431":"% Change distribution of ConfirmedCases and Fatalities","fec02090":"As result the models shows that Itlay may reached the peak within two weeks with nombre of confirmed cases arround 123000.0","d23b56ed":"Lest's fit exponetiel Curve on the Confirmed Cases "}}