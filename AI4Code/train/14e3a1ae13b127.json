{"cell_type":{"811580fa":"code","4a0b2fd4":"code","3a766150":"code","e54c66cf":"code","4c0316d4":"code","9441d8e8":"code","e6ee94cf":"code","78a9f6db":"code","dd0c7946":"code","069bd084":"code","9b7a5560":"code","8d6d948a":"code","8c972ca4":"code","18911300":"code","027daa5f":"code","2db70ce0":"markdown","801dd111":"markdown","82b1aff4":"markdown","9d26d2e5":"markdown","3a97e6e0":"markdown","0c5e2d4e":"markdown","2f646528":"markdown","d3084a6a":"markdown","64f18cfa":"markdown","4ce2edbb":"markdown","9e46c1d9":"markdown","c0ed4598":"markdown","df66857f":"markdown","b4d4f2a3":"markdown","ea993040":"markdown"},"source":{"811580fa":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4a0b2fd4":"fish_data = pd.read_csv(\"..\/input\/fish-market\/Fish.csv\")","3a766150":"fish_data.head(2)","e54c66cf":"fish_data.info()","4c0316d4":"fish_data.groupby('Species').mean()","9441d8e8":"sns.scatterplot(fish_data['Weight'], fish_data['Height'], hue=fish_data['Species'])","e6ee94cf":"X = fish_data.drop('Species', axis=1)\ny = fish_data['Species']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","78a9f6db":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(X_train)\nX_train_scaled = ss.transform(X_train)\nX_test_scaled = ss.transform(X_test)","dd0c7946":"from sklearn.metrics import accuracy_score, classification_report, confusion_matrix","069bd084":"def evaluate_model_performance(y_test, y_pred):\n  print(accuracy_score(y_test, y_pred))\n  print(confusion_matrix(y_test, y_pred))\n  print(classification_report(y_test, y_pred))","9b7a5560":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nevaluate_model_performance(y_test, y_pred)","8d6d948a":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nevaluate_model_performance(y_test, y_pred)","8c972ca4":"from sklearn.neighbors import KNeighborsClassifier\n\n# Calculating the K value for the best performance\nerror_rate = []\n\nfor i in range(1,40):\n    model = KNeighborsClassifier(n_neighbors=i)\n    model.fit(X_train_scaled,y_train)\n    pred_i = model.predict(X_test_scaled)\n    error_rate.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","18911300":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train_scaled, y_train)\ny_pred = knn.predict(X_test_scaled)\n\nevaluate_model_performance(y_test, y_pred)","027daa5f":"comparing_result = pd.DataFrame(columns=['original species', 'predicted species'])\ncomparing_result['original species'] = y_test\ncomparing_result['predicted species'] = y_pred\n\nfor i in comparing_result.index:\n    if comparing_result['original species'][i] != comparing_result['predicted species'][i]:\n        print(comparing_result.loc[i])","2db70ce0":"# Model Evaluating","801dd111":"# Feature Scaling","82b1aff4":"We will use KNN Classifier for this data, here we have got highest accuracy of 87%","9d26d2e5":"# Splitting the data for training and testing","3a97e6e0":"# KNN Classifier","0c5e2d4e":"# Decision Tree Classification","2f646528":"# Visualizing Data","d3084a6a":"Fish Market Dataset contains information about common fish species in market sales. The dataset includes the fish species, weight, length, height, and width. ","64f18cfa":"# Conclusion","4ce2edbb":"https:\/\/www.kaggle.com\/aungpyaeap\/fish-market","9e46c1d9":"# About the data","c0ed4598":"# Source of this dataset","df66857f":"# Importing Modules","b4d4f2a3":"# Loading the data","ea993040":"# Random Forest Classification"}}