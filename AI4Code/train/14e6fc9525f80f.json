{"cell_type":{"2b01ab3d":"code","9d98cd4b":"code","fae9048a":"code","16dbcf6f":"code","39cf97b0":"code","561dc92b":"code","b1eec2ed":"code","33431494":"code","402e97f2":"code","5004fb43":"code","70308cbf":"code","347f950e":"code","560f6b69":"code","18ffe04b":"code","3b1bda7b":"code","484f8223":"code","c6baff1a":"code","47d7ea44":"code","52504de6":"code","5a9c2917":"code","f21ff1b0":"code","7ceaf2ad":"code","c2881dcf":"code","cdbacfa2":"code","198d9a24":"code","9e4bbd24":"code","dac41439":"code","94f02d7d":"code","cb91aafe":"code","529be34a":"code","0053aa51":"code","7411be56":"markdown","0bf14b12":"markdown","4e3f5997":"markdown","6dd9d54d":"markdown","3812205d":"markdown","1fdec16d":"markdown","f604608e":"markdown","4692c977":"markdown","0fcf51fb":"markdown","a499521b":"markdown","2c3f1cb7":"markdown","51fb3be1":"markdown","7ac82618":"markdown","00d977b6":"markdown","67d78f21":"markdown","1d48ecaa":"markdown","46af8ef2":"markdown","19b33133":"markdown","4b42d8dc":"markdown","5d3e47ae":"markdown","7b171ad1":"markdown"},"source":{"2b01ab3d":"pip install mplfinance","9d98cd4b":"import math\nimport pandas as pd \nimport pandas_datareader as web\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nimport mplfinance as mpf\nfrom keras.layers import Dense, LSTM\nfrom keras.models import Sequential\nimport scipy as sc \nimport numpy as np \nplt.style.use('fivethirtyeight')\nimport tensorflow as tf","fae9048a":"df = web.DataReader('^NDX', data_source= 'yahoo', start= '2012-01-01', end= '2021-10-21')","16dbcf6f":"#show the data\ndf","39cf97b0":"# how many rows and columns in our dataset?\n\n# df.shape()\nprint(df.shape)\nprint( 'The result of shape is same as it appeared above')","561dc92b":"plt.figure(figsize=(12,4))\nplt.title('Adjusted Close Price History')\nplt.plot(df['Adj Close'])\nplt.xlabel('Date', fontsize = 12)\nplt.ylabel('Adjusted Close Price USD ($)', fontsize= 12)\nplt.show","b1eec2ed":"plt.figure(figsize= (20,9))\nmpf.plot(df['2021-01-01': '2021-10-21'], figratio = (20,12), type = 'candle',\n         title = 'NASDAQ historical close price',\n         mav =(8), volume= True,\n         style = 'yahoo')","33431494":"data = df.filter(['Close'])\n### convert the DataFrame to a numpy array\n\ndataset = data.values","402e97f2":"## Get the number of rows to train the model on\ntraining_data_len = math.ceil(len(dataset)*0.8)\n\ntraining_data_len","5004fb43":"scaler = MinMaxScaler(feature_range= (0,1))\nscaled_data = scaler.fit_transform(dataset)","70308cbf":"# let's check our Data\n\nscaled_data","347f950e":"train_data = scaled_data[0: training_data_len, :]\n\n### Split the Data into x_train and y_train dataset\n\nx_train = []\ny_train = []","560f6b69":"for i in range(60, len(train_data)):\n    x_train.append(train_data[i-60: i, 0])\n    y_train.append(train_data[i, 0])\n    \n    if i<= 60:\n        print(x_train)\n        print(y_train)\n        print()","18ffe04b":"x_train, y_train = np.array(x_train), np.array(y_train)","3b1bda7b":"x_train.shape             # it is two (2) dimensional data  'number of row [4232]', 'number of columns [60]'","484f8223":"x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))\nx_train.shape               # Now our data is three (3) dimensional data","c6baff1a":"model = Sequential()\nmodel.add(LSTM(50, return_sequences = True, input_shape = (x_train.shape[1], 1)))\nmodel.add(LSTM(50, return_sequences = False))\nmodel.add(Dense(25))\nmodel.add(Dense(1))","47d7ea44":"model.compile(optimizer= 'adam', loss= 'mean_squared_error')","52504de6":"model.fit(x_train, y_train, batch_size=1, epochs=1)","5a9c2917":"test_data = scaled_data[training_data_len - 60:, :]\n\n# Creating the datasets for x_test and y_test\n\nx_test = []\ny_test = dataset[training_data_len:, :]\nfor i in range(60, len(test_data)):\n    x_test.append(test_data[i - 60 : i, 0])","f21ff1b0":"x_test = np.array(x_test)\nx_test.shape  # again our data is two (2) dimensional data ","7ceaf2ad":"x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], 1))\nx_test.shape   # now we have reshaped the data into three (3) dimension","c2881dcf":"predictions = model.predict(x_test)\npredictions = scaler.inverse_transform(predictions)","cdbacfa2":"rmse = np.sqrt(np.mean(predictions - y_test)**2)\nrmse","198d9a24":"train = data[: training_data_len]\nvalid = data[training_data_len :]\nvalid ['Predictions'] = predictions\n\n# visualizing data \nplt.figure(figsize= (16,8))\nplt.title('Model')\nplt.xlabel('Date', fontsize = 18)\nplt.ylabel('Close Price USD ($)', fontsize = 18)\nplt.plot(train['Close'])\nplt.plot(valid[['Close', 'Predictions']])\nplt.legend(['Train', 'Val', 'Predictions'], loc = 'best')\nplt.show()","9e4bbd24":"valid","dac41439":"nasdaq_quote = web.DataReader('^NDX', data_source= 'yahoo', start= '2021-01-01', end= '2021-10-22')\n\n# Creat a new datafram\n\nnew_df = nasdaq_quote.filter(['Close'])\n\n# Get the last 60 days closing price values and convert the DataFrame into numpy array\n\nlast_60_days = new_df[-60 :].values\n\n# Scaled the data to be values between 0 and 1\n\nlast_60_days_scaled = scaler.transform(last_60_days)","94f02d7d":"# CREAT an Empty list\n\nX_test = []\n\n# Append the past 60 days\n\nX_test.append(last_60_days_scaled)\n\n# Convert the X_test dataset into numpy array\n\nX_test = np.array(X_test)\n\n# X_test","cb91aafe":"# Reshape the Data\n\nX_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))","529be34a":"# Get the predicted scaled price\n\npred_price = model.predict(X_test)\n\n# Undo The Scaling \n\npred_price = scaler.inverse_transform(pred_price)\nprint(pred_price)","0053aa51":"nasdaq_quote2 = web.DataReader('^NDX', data_source= 'yahoo', start= '2021-10-19', end= '2021-10-21')\n\nprint(nasdaq_quote2['Close'])","7411be56":"### Get the Root Mean Squared Error (RMSE)","0bf14b12":"### Creating a Training DataSe\n- Creating a Scaled Training Dataset","4e3f5997":"## Visualizing the closing price History","6dd9d54d":"## NASDAQ  | US 100 indices priec prediction | Machine learning \n\n\n**By : Ertiza Abbas**\n\n\nData source which i used in this project is from 'yahoo finance' historcal data from january 2020 to october 20th, 2021","3812205d":"## Create a new DataFrame with only the 'Close Column'","1fdec16d":"## Coverting the x_train and y_train into numpy arrays","f604608e":" - **importing relevant libraries** ","4692c977":"Now, let's get the models prediected values","0fcf51fb":"# Thank you for your time. ","a499521b":"### Creating the testing dataset\n- Creating new array containig Scales values, from index 2116 to 2719  (* 2719 is out end of Data)","2c3f1cb7":"#### Reshaping the data to three (3) dimension for LSTM modeling","51fb3be1":"### Compiling the Model","7ac82618":"#### Coverting the data into numpy array ","00d977b6":"## Scaling the data\n\n- It is good practice to scale the data which consist on preprocessing, normalization prior to present the data into machine learing nuralization ","67d78f21":"### Get the NASDAQ quote","1d48ecaa":"## Get the Stock \/ indices quote","46af8ef2":"#### Reshaping data \n- LSTM Modeling need 3 deimensional data while right now our data is 2 dimensional\n**Lets check dimension of our data*","19b33133":"# Training the Model","4b42d8dc":"## Build the LSTM Model","5d3e47ae":"### Plotting the Data","7b171ad1":"## Show the valid and predicted prices"}}