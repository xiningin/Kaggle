{"cell_type":{"7e7aff3e":"code","f480dbe9":"code","f9295369":"code","49306d0d":"code","e886a65d":"code","cd16961d":"code","b8e4faa7":"code","435df7f8":"code","1e8d9ed3":"code","9cbd4293":"code","4da995b4":"code","a7b82cad":"code","9e0e0574":"code","76772de3":"code","d9f3e150":"code","58383b44":"code","f0add741":"code","81d13439":"code","41f0f21c":"code","749b6fa0":"code","e504eeec":"code","faa19d22":"code","8bb84ba4":"code","4048b90c":"code","fd748723":"markdown","5b7dd954":"markdown","7e184198":"markdown","6dee4b98":"markdown","0fd148b3":"markdown","e501f8bd":"markdown","a984f82a":"markdown","67156568":"markdown","b2a26149":"markdown","d5a01c49":"markdown","c18950d3":"markdown","05556cbd":"markdown","c8859e2a":"markdown","a9a04cff":"markdown","b6ac3cdf":"markdown","ca067842":"markdown","66261d3f":"markdown","d9c181c9":"markdown","b80286fb":"markdown","b2e21ab9":"markdown"},"source":{"7e7aff3e":"import numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt # data visualization\nimport seaborn as sns # data visualization\n%matplotlib inline\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f480dbe9":"df = pd.read_csv(\"..\/input\/indian-food-101\/indian_food.csv\")\ndf.head()","f9295369":"df1 = df.dropna() #drop null record","49306d0d":"df1.isnull().sum()","e886a65d":"df_dessert = df1[df1.course == \"dessert\"]\ndf_maincourse = df[df.course == \"main course\"]\nsns.countplot(df_maincourse[\"flavor_profile\"])","cd16961d":"index_flavor = (df1.loc[df1.flavor_profile == \"-1\", \"course\"] == \"main course\").index\nfor i in index_flavor:\n    if df1.loc[i, \"course\"] == \"main course\":\n        df1.loc[i, \"flavor_profile\"] = \"spicy\"\n        \ndf1.loc[df1.flavor_profile == \"-1\", \"flavor_profile\"] = \"spicy\" ","b8e4faa7":"df2 = df1[df1.state != \"-1\"]","435df7f8":"time_main = 0\ntime_cook_main = 0\ncount = 0\ncount_cook = 0\nfor i in range(230):\n    try:\n        if df2.course[i] == \"main course\" and df2.prep_time[i] != -1:\n            time_main += df2.prep_time[i]\n            count += 1\n            \n        if df2.course[i] == \"main course\" and df2.cook_time[i] != -1:\n            time_cook_main += df2.cook_time[i]\n            count_cook += 1\n    except:\n        pass\nmean_main = time_main \/\/ count\nmean_main_cook = time_cook_main \/\/ count_cook\ndata_prep = df2[df2.prep_time == -1]\ndata_cook = df2[df2.cook_time == -1]\nprep_index = data_prep[data_prep.course == \"main course\"].index\ncook_index = data_cook[data_cook.course == \"main course\"].index\nfor i in prep_index:\n    df2.prep_time[i] = mean_main\n    \nfor i in cook_index:\n    df2.cook_time[i] = mean_main_cook","1e8d9ed3":"time_dessert = 0\ntime_cook_dessert = 0\ncount = 0\ncount_cook = 0\nfor i in range(230):\n    try:\n        if df2.course[i] == \"dessert\" and df2.prep_time[i] != -1:\n            time_dessert += df2.prep_time[i]\n            count += 1\n            \n        if df2.course[i] == \"dessert\" and df2.cook_time[i] != -1:\n            time_cook_dessert += df2.cook_time[i]\n            count_cook += 1\n    except:\n        pass\nmean_dessert = time_dessert \/\/ count\nmean_cook_dessert = time_cook_dessert \/\/ count_cook\nprep_index_dessert = data_prep[data_prep.course == \"dessert\"].index\ncook_index_dessert = data_cook[data_cook.course == \"dessert\"].index\nfor i in prep_index_dessert:\n    df2.prep_time[i] = mean_dessert\n    \nfor i in cook_index_dessert:\n    df2.cook_time[i] = mean_cook_dessert","9cbd4293":"time_snack = 0\ntime_cook_snack = 0\ncount = 0\ncount_cook = 0\nfor i in range(230):\n    try:\n        if df2.course[i] == \"snack\" and df2.prep_time[i] != -1:\n            time_snack += df2.prep_time[i]\n            count += 1\n            \n        if df2.course[i] == \"snack\" and df2.cook_time[i] != -1:\n            time_cook_snack += df2.cook_time[i]\n            count_cook += 1\n    except:\n        pass\nmean_snack = time_snack \/\/ count\nmean_cook_snack = time_cook_snack \/\/ count_cook\n\nprep_index_snack = data_prep[data_prep.course == \"snack\"].index\ncook_index_snack = data_cook[data_cook.course == \"snack\"].index\nfor i in prep_index_snack:\n    df2.prep_time[i] = mean_snack\n    \nfor i in cook_index_snack:\n    df2.cook_time[i] = mean_cook_snack","4da995b4":"df2['Total_Time'] = df2.prep_time + df2.cook_time","a7b82cad":"for i in range(max(df2.index) + 1):\n    try:\n        df2.ingredients[i] = df2.ingredients[i].split(\",\")\n    except:\n        pass\n    \ndf3 = df2.copy()","9e0e0574":"df3[\"len_ingediant\"] = len(df3.ingredients)\nfor i in range(max(df3.index) + 1):\n    try:\n        df3['len_ingediant'][i] = len(df3.ingredients[i])\n    except:\n        pass\ndf3.head()","76772de3":"size_diet = [df2.diet.value_counts()[0],df2.diet.value_counts()[1]]\nlabel_diet = [\"veg\", \"Non-veg\"]\nplt.figure(figsize=(8,8))\nplt.pie(size_diet, labels = label_diet, colors = [\"gold\", \"yellowgreen\"], autopct = \"%1.1f%%\", explode=(0,0.3),shadow=True)\nplt.axis(\"equal\")\nplt.title(\"Distribution of Diet Catagories\")","d9f3e150":"df_east = df2[df2.region == \"East\"]\ndf_west = df2[df2.region == \"West\"]\ndf_north = df2[df2.region == \"North\"]\ndf_south = df2[df2.region == \"South\"]\ndf_central = df2[df2.region == \"Central\"]\ndf_ne = df2[df2.region == \"North East\"]\nstate_west = df_west.state.unique()\nprint(\"West Zone\")\nfor i in range(len(state_west)):\n    print(\"({}) {}\".format(i + 1, state_west[i]))\nprint()\nstate_east = df_east.state.unique()\nprint(\"East Zone\")\nfor i in range(len(state_east)):\n    print(\"({}) {}\".format(i + 1, state_east[i]))\nprint()\nstate_north = df_north.state.unique()\nprint(\"North Zone\")\nfor i in range(len(state_north)):\n    print(\"({}) {}\".format(i + 1, state_north[i]))\nprint()\nstate_south = df_south.state.unique()\nprint(\"South Zone\")\nfor i in range(len(state_south)):\n    print(\"({}) {}\".format(i + 1, state_south[i]))\nprint()\nstate_central = df_central.state.unique()\nprint(\"Central Zone\")\nfor i in range(len(state_central)):\n    print(\"({}) {}\".format(i + 1, state_central[i]))\nprint()\nstate_ne = df_ne.state.unique()\nprint(\"North-East Zone\")\nfor i in range(len(state_ne)):\n    print(\"({}) {}\".format(i + 1, state_ne[i]))","58383b44":"size_east = df_east.flavor_profile.value_counts().values\nlabel_east = df_east.flavor_profile.value_counts().index\nsize_west = df_west.flavor_profile.value_counts().values\nlabel_west = df_west.flavor_profile.value_counts().index\nsize_north = df_north.flavor_profile.value_counts().values\nlabel_north = df_north.flavor_profile.value_counts().index\nsize_south = df_south.flavor_profile.value_counts().values\nlabel_south = df_south.flavor_profile.value_counts().index\nsize_central = df_central.flavor_profile.value_counts().values\nlabel_central = df_central.flavor_profile.value_counts().index\nsize_ne = df_ne.flavor_profile.value_counts().values\nlabel_ne = df_ne.flavor_profile.value_counts().index\n\nplt.figure(figsize=(20,10))\nplt.suptitle(\"Zone Wise Flavor\", fontsize = 20)\nplt.subplot(2, 3, 1)\nplt.pie(size_east, labels=label_east, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"East\")\nplt.subplot(2, 3, 2)\nplt.pie(size_west, labels=label_west, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"West\")\nplt.subplot(2, 3, 3)\nplt.pie(size_north, labels=label_north, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"North\")\nplt.subplot(2, 3, 4)\nplt.pie(size_south, labels=label_south, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"South\")\nplt.subplot(2, 3, 5)\nplt.pie(size_central, labels=label_central, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"Central\")\nplt.subplot(2, 3, 6)\nplt.pie(size_ne, labels=label_ne, autopct = \"%1.1f%%\",colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue'])\nplt.title(\"North East\")\n","f0add741":"west_course = df_west.course.value_counts()\neast_course = df_east.course.value_counts()\nnorth_course = df_north.course.value_counts()\nsouth_course = df_south.course.value_counts()\ncentral_course = df_central.course.value_counts()\nne_course = df_ne.course.value_counts()\nplt.figure(figsize=(20,10))\nplt.suptitle(\"Zone Wise different courses Count\", fontsize=20)\nplt.subplot(2, 3, 1)\nsns.barplot(west_course.index, west_course.values)\nplt.title(\"West\")\nplt.subplot(2, 3, 2)\nsns.barplot(east_course.index, east_course.values)\nplt.title(\"East\")\nplt.subplot(2, 3, 3)\nsns.barplot(north_course.index, north_course.values)\nplt.title(\"North\")\nplt.subplot(2, 3, 4)\nsns.barplot(south_course.index, south_course.values)\nplt.title(\"South\")\nplt.subplot(2, 3, 5)\nsns.barplot(central_course.index, central_course.values)\nplt.title(\"Central\")\nplt.subplot(2, 3, 6)\nsns.barplot(ne_course.index, ne_course.values)\nplt.title(\"North East\")","81d13439":"plt.figure(figsize=(10,40))\nplt.subplot(6,1,1)\nsns.countplot(y = df_east.state, order = df_east.state.value_counts().index)\nplt.title(\"East Zone Dishes count State-vise\")\nplt.subplot(6,1,2)\nsns.countplot(y = df_west.state, order = df_west.state.value_counts().index)\nplt.title(\"West Zone Dishes count State-vise\")\nplt.subplot(6,1,3)\nsns.countplot(y = df_south.state, order = df_south.state.value_counts().index)\nplt.title(\"South Zone Dishes count State-vise\")\nplt.subplot(6,1,4)\nsns.countplot(y = df_north.state, order = df_north.state.value_counts().index)\nplt.title(\"North Zone Dishes count State-vise\")\nplt.subplot(6,1,5)\nsns.countplot(y = df_central.state, order = df_central.state.value_counts().index)\nplt.title(\"Central Zone Dishes count State-vise\")\nplt.subplot(6,1,6)\nsns.countplot(y = df_ne.state, order = df_ne.state.value_counts().index)\nplt.title(\"North-East Zone Dishes count State-vise\")","41f0f21c":"plt.figure(figsize=(20,10))\nplt.suptitle(\"Prepration Time\", fontsize = 20)\nsns.boxplot(y = df2.region, x = df2.prep_time)","749b6fa0":"plt.figure(figsize=(20,10))\nplt.suptitle(\"Cooking Time\", fontsize = 20)\nsns.boxplot(y = df2.region, x = df2.cook_time)","e504eeec":"top_snack = df2[df2.course == \"snack\"].sort_values('Total_Time')[:5]\ndown_snack = df2[df2.course == \"snack\"].sort_values('Total_Time', ascending = 0)[:5]\ntop_main = df2[df2.course == \"main course\"].sort_values('Total_Time')[:5]\ndown_main = df2[df2.course == \"main course\"].sort_values('Total_Time', ascending = 0)[:5]\ntop_starter = df2[df2.course == \"starter\"].sort_values('Total_Time')[:5]\ndown_starter = df2[df2.course == \"starter\"].sort_values('Total_Time', ascending = 0)[:5]\ntop_dessert = df2[df2.course == \"dessert\"].sort_values('Total_Time')[:5]\ndown_dessert = df2[df2.course == \"dessert\"].sort_values('Total_Time', ascending = 0)[:5]\n\nplt.figure(figsize=(7,15))\nplt.subplot(2,1,1)\nsns.barplot(y = top_snack.name, x = top_snack.Total_Time)\nplt.title(\"Top-5 Snack-Dishes of Less Making Time(Prepration_time + Cooking_time)\")\nplt.subplot(2,1,2)\nsns.barplot(y = down_snack.name, x = down_snack.Total_Time)\nplt.title(\"Top-5 Snack-Dishes of More Making Time(Prepration_time + Cooking_time)\")","faa19d22":"plt.figure(figsize=(7,15))\nplt.subplot(2,1,1)\nsns.barplot(y = top_main.name, x = top_main.Total_Time)\nplt.title(\"Top-5 Main Course-Dishes of Less Making Time(Prepration_time + Cooking_time)\")\nplt.subplot(2,1,2)\nsns.barplot(y = down_main.name, x = down_main.Total_Time)\nplt.title(\"Top-5 Main Course-Dishes of More Making Time(Prepration_time + Cooking_time)\")","8bb84ba4":"plt.figure(figsize=(7,15))\nplt.subplot(2,1,1)\nsns.barplot(y = top_dessert.name, x = top_dessert.Total_Time)\nplt.title(\"Top-5 Dessert-Dishes of Less Making Time(Prepration_time + Cooking_time)\")\nplt.subplot(2,1,2)\nsns.barplot(y = down_dessert.name, x = down_dessert.Total_Time)\nplt.title(\"Top-5 Dessert-Dishes of More Making Time(Prepration_time + Cooking_time)\")","4048b90c":"sns.countplot(df3.len_ingediant)\nplt.xlabel(\"Length of Ingrediants\", Weight = \"bold\")\nplt.ylabel(\"No.of Dishes\", Weight = \"bold\")\n    ","fd748723":"### ii. Main Course","5b7dd954":"# Essential Libraries","7e184198":"Here Mostly, Main Course is in **Spicy Flavor**. so we replace -1 to splicy for main course Flavor. Also Snack is in **spicy Flavor**.\n","6dee4b98":"# Data anomalies\n1. ### **Wrong Value Data**\n   In this Data, Many Record Value is **-1**. Replace this value with appropriate value.","0fd148b3":"# Exploratory Data Analysis","e501f8bd":"2. Total Ingradiants. ","a984f82a":"# Insights\n* Most Dishes of Indian food are **Vegetarian**. Less Than 15% of Dishes are **Non-Vegetarian.**\n* Indain People mostly eat spicy food in Main course and Snacks.\n* East zone dishes mostly sweet Dishes. In East zone **West Bengal** and **Odisha State** are there.\n* More Indian dishes from West Zone. In west zone **Rajasthan, Maharashtra, Gujarat** and **Goa** are there. In this Gujarat state more popular for snack dishes. North Zone Famous for Main Course dishes. 35 dishes of main course come from North zone and also only north zone has starter dishes. In North Zone **Punjab** has more than 30 dishes and aspecially this state famous for their Main Course Dishes. South zone famous for main course or dessert(sweet) dishes.\n* In this data, More making time(cooking time + preparation time) is 700 minutes and less making time is 10 minutes.\n","67156568":"## 5. Preparation Time and Cooking Time\n* Avarage peparation time is **32 minutes**\n* Average cooking time is **39 minutes**\n* Highest making time(cooking time + prepration time)\n    1. Attu (course : snack)\n    2. Pindi chana (course : main course)\n    3. Shrikhand (course : dessert)\n* Minimum making time(cooking time + prepration time)\n    1. Papadum (course : snack)\n    2. Bajari no rotlo (course : main course)\n    3. Lassi (course : dessert)\n\n \n","b2a26149":"## 6. Ingradiants\n* Maximun 10 ingradiants use for dishes and Minimum 2 ingradiants use.\n* 5 ingradiants use for most of dishes.","d5a01c49":"## 4. Courses and State\n* **Four Different Courses are there**\n    1. Starter\n    2. Main Course\n    3. Dessert\n    4. Snack\n* West zone famous for snack. aspecially,Gujarat state's has more snack dishes also Maharashtra has more dishes after Gujarat.\n* East zone famous for dessert(Sweet) dishes. aspecially,West Bengal's Sweets are more famous.\n* Punjab famous for main course dishes in north zone. North zone has all type of course in dishes.\n* In North East zone, Assam is famous for food and main course and dessert are in this region. \n* central Zone has only three dishes in data.\n","c18950d3":"# Lets Look At The Data","05556cbd":"## 1. Diet\n* Diet is Nominal Categorical Variable - Vegetarian and Non-Vegetarian\n* Vegetarian dishes is More than Non-Vegetarian dishes. \n* 87.4 percent dishes are vegetarian and 12.6 percent dishes are Non-vegetarian.","c8859e2a":"* Neglect Rigion or State column Which have -1 Value.","a9a04cff":"## 2. Zone wise state List ","b6ac3cdf":"## 3. Flavor Profile\n* East, South, Central, North East Zone has only 2 flavor in dashes **Sweet and Spicy**. Sweet dishes are more than Spicy dishes in east zone. 71 percent sweet dishes and 29 percent spicy dishes in East zone\n* West zone has 4 flavors in dishes. West Zone is famous for Indian Food because all type of flavors are there.\n* North zone has 75 percent spicy, 20.8 percent sweet and 4.2 percent bitter dishes.","ca067842":"* **for Flavor_profile Column**","66261d3f":">  Hello Everyone, I am beginner in the feild of Data Science and ML. This is My first Visualization notebook. My purpose to creating this to improve my Data visualization skill using python. In this I use Diffrent charts to Visualize Data. Please feel free to point out my mistakes and suggest topics I can read to improve. Thanks! ","d9c181c9":"* for **prep_time and cook_time** Column","b80286fb":"### iii. Dessert Dishes","b2e21ab9":"# Add Additional Features\n1. Total Time of dish complete"}}