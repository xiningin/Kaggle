{"cell_type":{"7022dd1c":"code","b553718c":"code","52f76fb4":"code","c8b85acd":"code","722825ef":"code","84cd7de4":"code","082e45ef":"code","f572c0f0":"code","29e019d2":"code","e3fd0362":"code","9c30a4b2":"code","bfc6727e":"code","1ed88aef":"code","81fde7e2":"code","9cdff161":"code","465a1d08":"code","1b5f94a3":"code","083d830b":"code","78266aa8":"code","3b72a27c":"code","53adb4e4":"code","340f0add":"code","4a622143":"code","9d2e4112":"code","39f8bbb2":"code","694c9554":"code","7dc5b082":"code","7ed0f51c":"code","48e7d63e":"code","ada63590":"code","c2d1a85d":"code","bfe93e89":"code","a9eac68c":"code","82be3d8c":"code","e5f97263":"code","875d464e":"code","0a96205b":"code","a572102a":"code","bf758cba":"code","227f2bd7":"code","0fdd5a8f":"code","1fb09a10":"code","b7d54bd5":"code","8634e4ab":"code","900bf3c8":"code","ce8c6198":"code","0f96eba5":"code","4f3c288d":"code","e7065cb7":"code","e042d7a1":"code","cd0fc475":"code","c94c0627":"code","f2d62f64":"code","cce78f57":"code","076be528":"code","4f79c646":"code","85317878":"code","cc61e948":"code","a4f3287f":"code","681f5b5d":"code","f72be21e":"code","383d2aae":"code","24dfe61c":"code","0693497e":"code","85e5eeef":"code","b143dcfb":"code","b947748a":"markdown"},"source":{"7022dd1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b553718c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.stats import norm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import cross_val_score,KFold\nimport plotly.express as px\nfrom sklearn.svm import SVC\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","52f76fb4":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","c8b85acd":"train_df.head()","722825ef":"train_df.isnull().sum()","84cd7de4":"#cabin has more null values. So let's drop cabin column\ntrain_df=train_df.drop(columns=[\"Cabin\"],axis=1)\ntrain_df","082e45ef":"#Also let's drop few more columns which doesn't have any impact in our prediction\ntrain_df=train_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\"],axis=1)\ntrain_df","f572c0f0":"#missing values\ntrain_df.isnull().sum()","29e019d2":"train_df.groupby(\"Pclass\")[\"Age\"].mean()","e3fd0362":"#Now, Let's fill all the missing values to proceed for our analysis\ndef Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age\n    ","9c30a4b2":"train_df[\"Age\"]=train_df[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","bfc6727e":"train_df.isnull().sum()","1ed88aef":"#let's see the rows with missing values\ntrain_df[train_df.isnull().any(axis=1)]","81fde7e2":"train_df.groupby(\"Pclass\")[\"Embarked\"].value_counts()","9cdff161":"impute=SimpleImputer(strategy=\"most_frequent\")\ntrain_df[[\"Embarked\"]]=impute.fit_transform(train_df[[\"Embarked\"]])","465a1d08":"x=[\"Pclass-1\",\"Pclass-2\",\"Pclass-3\"]\ny=[38.23,29.87,25.14]\nplt.bar(x,y)\nplt.xlabel(\"PCLASS\")\nplt.ylabel(\"AGE\")\nplt.title(\"Age in different classes\")\nplt.show()","1b5f94a3":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Survived\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.show()","083d830b":"train_df.groupby(\"Sex\")[\"Survived\"].value_counts()","78266aa8":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Sex\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.title(\"number of Male and Female\")\nplt.xlabel('SEX')\nplt.ylabel(\"total count\")\nplt.show()","3b72a27c":"train_df[\"Embarked\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Embarked\",fontsize=15)\nplt.show()","53adb4e4":"train_df[\"Pclass\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Percentage of People in different class\",fontsize=15)\nplt.show()","340f0add":"s=train_df.groupby(\"Sex\")[\"Survived\"].value_counts()\ncolor=plt.cm.ocean(np.linspace(0,2,5))\nx=[\"Female\",\"male\"]\ny=[s[0],s[3]]\nplt.bar(x,y,color=color)\nplt.xlabel('SEX')\nplt.ylabel(\"Survived\")\nplt.show()","4a622143":"sns.heatmap(train_df.corr(),annot=True)\nplt.show()","9d2e4112":"#To see how age is distributed\ntrain_df[\"Age\"].hist(figsize=(12,8),bins=15)\nplt.show()","39f8bbb2":"#To see how Fare is distributed\ntrain_df[\"Fare\"].hist(figsize=(12,8),bins=25)\nplt.show()","694c9554":"e=train_df.groupby(\"Embarked\")[\"Fare\"].mean()\ncolor=plt.cm.ocean(np.linspace(0,2,7))\nx=[\"C_Embark\",\"Q_Embark\",\"S_Embark\"]\ny=[e[0],e[1],e[2]]\nplt.bar(x,y,color=color)\nplt.xlabel(\"Embarked\",fontsize=(15))\nplt.ylabel(\"Fare\",fontsize=(15))\nplt.show()","7dc5b082":"fig=px.sunburst(train_df.groupby([\"Pclass\",\"Sex\",\"Survived\"]).size().reset_index(name=\"count\"),path=[\"Pclass\",\"Sex\",\"Survived\"],values=\"count\",title=\"Count of Survived Based on Pclass and Sex\")\nfig.show()","7ed0f51c":"sex=pd.get_dummies(train_df[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(train_df[\"Embarked\"],drop_first=True)","48e7d63e":"train_df=train_df.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","ada63590":"train_df=pd.concat([train_df,sex,Embark],axis=1)","c2d1a85d":"X=train_df.iloc[:,1:].values\ny=train_df.iloc[:,0].values","bfe93e89":"sc=StandardScaler()\nX=sc.fit_transform(X)","a9eac68c":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=100)","82be3d8c":"rfc=RandomForestClassifier(max_depth=10,random_state=1)","e5f97263":"rfc.fit(X_train,y_train)\npred=rfc.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","875d464e":"cm=confusion_matrix(y_test,pred)\ncm","0a96205b":"report=classification_report(y_test,pred)\nprint(\"RandomForestClassifier report \\n\",report)","a572102a":"ada=AdaBoostClassifier()\nada.fit(X_train,y_train)\npred=ada.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","bf758cba":"cm=confusion_matrix(y_test,pred)\ncm","227f2bd7":"report=classification_report(y_test,pred)\nprint(\"AdaBoostClassifier report \\n\",report)","0fdd5a8f":"classifier = KNeighborsClassifier()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","1fb09a10":"cm=confusion_matrix(y_test,pred)\ncm","b7d54bd5":"report=classification_report(y_test,pred)\nprint(\"KNeighborsClassifier report \\n\",report)","8634e4ab":"classifier = SVC()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","900bf3c8":"cm=confusion_matrix(y_test,pred)\ncm","ce8c6198":"report=classification_report(y_test,pred)\nprint(\"SVC report \\n\",report)","0f96eba5":"classifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","4f3c288d":"cm=confusion_matrix(y_test,pred)\ncm","e7065cb7":"report=classification_report(y_test,pred)\nprint(\"Logistic Regression \\n\",report)","e042d7a1":"model = GaussianNB()\nmodel.fit(X_train, y_train)\ny_model = model.predict(X_test) \npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","cd0fc475":"cm=confusion_matrix(y_test,pred)\ncm","c94c0627":"report=classification_report(y_test,pred)\nprint(\"GaussianNB \\n\",report)","f2d62f64":"test=test_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\"],axis=1)","cce78f57":"test","076be528":"def Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age","4f79c646":"test[\"Age\"]=test[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","85317878":"sex=pd.get_dummies(test[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(test[\"Embarked\"],drop_first=True)","cc61e948":"test=test.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","a4f3287f":"test=pd.concat([test,sex,Embark],axis=1)","681f5b5d":"test.isnull().sum()","f72be21e":"test[\"Fare\"]=test[\"Fare\"].fillna(test[\"Fare\"].mean())","383d2aae":"test=sc.fit_transform(test)","24dfe61c":"y_pred=rfc.predict(test)","0693497e":"y_pred","85e5eeef":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': y_pred})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved.\")","b143dcfb":"print(output.head())","b947748a":"# **If you like my notebook. Don't forget to upvote it.**"}}