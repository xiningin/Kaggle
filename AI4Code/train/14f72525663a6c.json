{"cell_type":{"4d3b78d7":"code","ba306075":"code","547060a3":"code","46bae51e":"code","7c530d18":"code","31961e61":"code","6bdd31ba":"code","2bf257ea":"code","7af793e7":"code","f56e0df4":"code","2f414b16":"code","513732b9":"code","c68e261f":"code","76418676":"code","9d3fb184":"code","3dc85fe8":"code","342f2f99":"code","0125a669":"code","c20632c8":"code","e7151f33":"code","53313567":"code","527c4f62":"code","2c25c0d1":"code","4faa825e":"code","c4fabfa5":"code","41221f4b":"code","c7741f73":"code","b1b367c9":"code","c5c51b23":"code","4c272c13":"code","09f4a99e":"code","44848708":"code","7674b68c":"markdown","af8bc0fb":"markdown","3fa9d69d":"markdown"},"source":{"4d3b78d7":"import pandas as pd\nimport seaborn as sns \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport glob as glob # This was used for reading the directory from python file handling , however we were able to get the data without it \n","ba306075":"names1880 = pd.read_csv('..\/input\/1-name-data\/yob1880.txt',names=['name', 'sex', 'births'])\n\nnames1880.set_index('births')","547060a3":"a= (names1880['name']=='Anna')\nprint(a)\n\n#iloc works as a rows:columns\nnames1880.iloc[[1],0:3] \n\n","46bae51e":"#To see the details from the data frame\nnames1880[a]","7c530d18":"names1880.head()","31961e61":"grouped_multiple_column = names1880.groupby(['name','sex'])['sex'].count()\ngrouped_multiple_column","6bdd31ba":"names1880.value_counts('sex')","2bf257ea":"\n# combine datasets for all years\nyears = range(1880, 2020)\n\npieces = []\ncolumns = ['Name', 'Sex', 'Births']\n\n\nfor year in years:\n    path = '..\/input\/1-name-data\/yob' + str(year)+ str('.txt') \n    frame = pd.read_csv(path, names=columns)\n    frame['Year'] = year\n    pieces.append(frame)\n\n    \ndf = pd.concat(pieces, ignore_index=True)\ndf","7af793e7":"df.head(15)","f56e0df4":"plt.figure(figsize=(5,5))\nsns.heatmap(df.isnull())","2f414b16":"df_viz = df[df['Year']== 1990]","513732b9":"#figsize=(10,10)\n#df_viz.plot(kind='bar',x= 'Year',y='Births',color='blue')","c68e261f":"total_birth_counts = df['Births'].sum()\nprint (f\"Total Pouplation is increased {total_birth_counts}\")\n\n\n","76418676":"grouped_multiple_column = df.groupby(['Year'])['Births'].sum()\ngrouped_multiple_column","9d3fb184":"fig, ax = plt.subplots(figsize=(20,7))\ndf.groupby(['Year'])['Births'].sum().plot(ax=ax,kind='bar' )\n","3dc85fe8":"#Dividing the data in female and male\ndf_f = df[df['Sex']=='F']\ndf_m = df[df['Sex']=='M']","342f2f99":"df_m.head()\ndf_f.head()\n","0125a669":"#set index to reduce the computation time \ndf_f.set_index('Name', inplace = True)\ndf_m.set_index('Name', inplace = True)","c20632c8":"#print(df_f['Births'].sum())\nfig, ax = plt.subplots(figsize=(20,7))\nplt.ylim(0,3000000)\n(df_f.groupby(['Year'])['Births'].sum()).plot(ax=ax,kind='bar')\n\n\n","e7151f33":"fig, ax = plt.subplots(figsize=(20,7))\nplt.ylim(0,5000000)\n(df_m.groupby(['Year'])['Births'].sum()).plot(ax=ax,kind='bar' )\n","53313567":"#Popular name rank in females\ndf_f.sort_values(by='Births',ascending=False).head(20)\n","527c4f62":"#Popular name rank in males\ndf_m.sort_values(by='Births',ascending=False).head(20)","2c25c0d1":"#year wise popular names Male\n#fig, ax = plt.subplots(figsize=(20,7))\n#ax.set_xlabel('Year')\n#ax.set_ylabel('Bith Count')\n#ax.set_xticklabels('Name')\n#plt.ylim(0,150000)\n#(df_m.sort_values(by='Births',ascending=False).head(20)).plot(ax=ax,kind='bar' )\n\n\n#fig, ax = plt.subplots(figsize=(20,7))\n#plt.ylim(0,5000000)\n#(df_m.groupby(['Year'])['Births'].sum()).plot(ax=ax,kind='bar' )\n","4faa825e":"#extensive CPU task \n#Top 100 pupolar names \n\n#Top_100_popular_male _name  = df_m.sort_values(by='Births',ascending=False).sum().head(100)","c4fabfa5":"#extensive CPU task \n#Top 100 pupolar names \n\n#Top_100_popular_female _name  = df_f.sort_values(by='Births',ascending=False).sum().head(100)","41221f4b":"# girls to boy ratio \n\ngrouped_multiple_column = (df.groupby(['Year','Sex'])['Births'].sum())\ngrouped_multiple_column\n\n\n\n","c7741f73":"grouped_multiple_column = df.groupby(['Year','Sex'])['Births'].sum().unstack(level=1)\ngrouped_multiple_column","b1b367c9":"grouped_multiple_column['ratio'] = grouped_multiple_column['F'] \/ grouped_multiple_column['M'] \ngrouped_multiple_column","c5c51b23":"#Most famous name over decade\n","4c272c13":"#Names that faded over time","09f4a99e":"#current popular names","44848708":"#Analyse baby names by sorting out all birth counts.\n","7674b68c":"**This is exploratory data analysis of US pouplation from 1880 to 2019** \n\nalso introductory insight to pandas.\n\nplease upvote if you like it.\n\nFeatures  -> we have been provided with only three features \n* Name\n* Births count (total numver of baby born who have the name)\n* Sex \n\nwe will add year later to the data to get.\n\nHere a multiple .zip files have all the data names as yob1880.txt ....yob2019.txt\n\nse we extracted the data out and composed a single dataframe to learn details as we go . \n\nLet's get the data in our notebook\n\n","af8bc0fb":"**So we dont have year in it and we will get some way to import data along with the year**.","3fa9d69d":"#Combining Year along the data to get the insight for particular year\n"}}