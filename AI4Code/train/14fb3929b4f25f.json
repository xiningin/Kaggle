{"cell_type":{"d5d9c721":"code","9b06a549":"code","2e258340":"code","493d18bd":"code","59993842":"code","cd213ac2":"code","7a2b423f":"code","69c12d0b":"code","d9063487":"code","d2d1ffed":"code","f3182bdd":"code","5e171d26":"code","7f17eff3":"code","d252fe7b":"code","be5a2653":"code","9cdd95f3":"code","cc8b525b":"code","b95707ef":"code","5f19e2c2":"markdown"},"source":{"d5d9c721":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport glob\nimport pandas as pd\nimport numpy as np\nfrom collections import Counter\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9b06a549":"files=glob.glob(dirname+'\/py*')\n#print(files)\nall_data = [pd.read_excel(f, sheet_name=None, ignore_index=True,sort=False,index_col=0) for f in files ]\ntotal_examers=0\nfor i in all_data:    \n    examer_amount=len(list(i.keys()))\n    #print(examer_amount)\n    total_examers+=examer_amount\nprint(\"amount of examers: \",total_examers)\n","2e258340":"#%%dogru yanlis ve bos sayilari\npy_mind_DYB=[all_data[0][i]['ogr.C'][20:23] for i in all_data[0]]\nprint(\"py_mind DYB Amounts:\",py_mind_DYB)\n\nsortedpy_mind=sorted(py_mind_DYB,key=lambda student:student[0])       \nprint(\"The most successful student in the py_mind:\\n\",sortedpy_mind[-1:])\n\n\npy_opinion_DYB=[all_data[1][i]['ogr.C'][20:23] for i in all_data[1]]\nprint(\"py_opinion DYB Amounts:\",py_opinion_DYB) \n\nsortedpy_opinion=sorted(py_opinion_DYB,key=lambda student:student[0])       \nprint(\"The most successful student in the py_opinion:\\n\",sortedpy_opinion[-1:])\n\n  \npy_science_DYB=[all_data[2][i]['ogr.C'][20:23] for i in all_data[2]]\nprint(\"py_science DYB Amounts:\",py_science_DYB) \n\nsortedpy_science=sorted(py_science_DYB,key=lambda student:student[0])       \nprint(\"The most successful student in the py_science_DYB:\\n\",sortedpy_science[-1:])\n\n\npy_sense_DYB=[all_data[3][i]['ogr.C'][20:23] for i in all_data[3]]\nprint(\"py_sense DYB Amounts:\",py_sense_DYB)\n\nsortedpy_sense=sorted(py_sense_DYB,key=lambda student:student[0])       \nprint(\"The most successful student in the py_sense_DYB:\\n\",sortedpy_sense[-1:])","493d18bd":"#%%ortalama dogru sayisi   \npy_mind_D=[all_data[0][i]['ogr.C'][20] for i in all_data[0]]\nsortedpy_mind=sorted(py_mind_D)\nprint(\"py_mind D Average:\",sum(py_mind_D)\/10)\npy_opinion_D=[all_data[1][i]['ogr.C'][20] for i in all_data[1]]\nsortedpy_opinion=sorted(py_opinion_D) \n\nprint(\"py_opinion D Average:\",sum(py_opinion_D)\/10)   \npy_science_D=[all_data[2][i]['ogr.C'][20] for i in all_data[2]]\nsortedpy_science=sorted(py_science_D)\nprint(\"py_science D Average:\",sum(py_science_D)\/8) \npy_sense_D=[all_data[3][i]['ogr.C'][20] for i in all_data[3]]\nsortedpy_sense=sorted(py_sense_D)\nprint(\"py_sense D Average:\",sum(py_sense_D)\/10)\nhighest_scores=[sortedpy_mind[-1], sortedpy_opinion[-1],sortedpy_science[-1], sortedpy_sense[-1]]\nprint('the highest scores in four classes:\\n ',highest_scores)","59993842":"#%%ortalama yanlis sayisi   \npy_mind_Y=[all_data[0][i]['ogr.C'][21] for i in all_data[0]]\nprint(\"py_mind Y Average:\",sum(py_mind_Y)\/10)\npy_opinion_Y=[all_data[1][i]['ogr.C'][21] for i in all_data[1]]\nprint(\"py_opinion Y Average:\",sum(py_opinion_Y)\/10)   \npy_science_Y=[all_data[2][i]['ogr.C'][21] for i in all_data[2]]\nprint(\"py_science Y Average:\",sum(py_science_Y)\/8) \npy_sense_Y=[all_data[3][i]['ogr.C'][21] for i in all_data[3]]\nprint(\"py_sense Y Average:\",sum(py_sense_Y)\/10)","cd213ac2":"#%%ortalama yanlis sayisi   \npy_mind_B=[all_data[0][i]['ogr.C'][22] for i in all_data[0]]\nprint(\"py_mind B Average:\",sum(py_mind_B)\/10)\npy_opinion_B=[all_data[1][i]['ogr.C'][22] for i in all_data[1]]\nprint(\"py_opinion B Average:\",sum(py_opinion_B)\/10)   \npy_science_B=[all_data[2][i]['ogr.C'][22] for i in all_data[2]]\nprint(\"py_science B Average:\",sum(py_science_B)\/8) \npy_sense_B=[all_data[3][i]['ogr.C'][22] for i in all_data[3]]\nprint(\"py_sense B Average:\",sum(py_sense_B)\/10)","7a2b423f":"#%%en basarili 3 ogrenci\nallStudents=[]\nallStudents.extend(py_mind_DYB)\nallStudents.extend(py_opinion_DYB)\nallStudents.extend(py_science_DYB)\nallStudents.extend(py_sense_DYB)\nsortedallStudents=sorted(allStudents,key=lambda student:student[0], reverse=True) \nprint(\"The most successful 3 students in the quiz2:\\n\",sortedallStudents[:3])","69c12d0b":"#%%en cok yapilan yanlislar\nchecklist=['D','A','D','B','E','B','A','B','D','D','C','A','B','B','A','C','D','B','A','D']\nlist_choices1=[]\nfor i in all_data[0].values():\n    a=i['ogr.C'][:20]\n    list_choices1.append(a)\nlist_choices2=[]\nfor i in all_data[1].values():\n    a=i['ogr.C'][:20]\n    list_choices2.append(a)\nlist_choices3=[]\nfor i in all_data[2].values():\n    a=i['ogr.C'][:20]\n    list_choices3.append(a)\nlist_choices4=[]\nfor i in all_data[3].values():\n    a=i['ogr.C'][:20]\n    list_choices4.append(a)\n\nk1=[]\nfor i in list_choices1:\n     for j in range(len(i)):\n         if i[j]!=checklist[j]:\n             k1.append(j)      \n\nprint('The most common wrong ques. in py_mind(index&amount)',Counter(k1).most_common(1))\nk2=[]\nfor i in list_choices2:\n     for j in range(len(i)):\n         if i[j]!=checklist[j]:\n             k2.append(j)            \n     \nprint('The most common wrong ques. in py_opinion(index&amount)',Counter(k2).most_common(1))       \nk3=[]\nfor i in list_choices3:\n     for j in range(len(i)):\n         if i[j]!=checklist[j]:\n             k3.append(j)                 \nprint('The most common wrong ques. in py_science(index&amount)',Counter(k3).most_common(1))\nk4=[]\nfor i in list_choices4:\n     for j in range(len(i)):\n         if i[j]!=checklist[j]:\n             k4.append(j)                 \nprint('The most common wrong ques. in py_sense(index&amount)',Counter(k4).most_common(1)) \nk_all=[]\nk_all.extend(k1)\nk_all.extend(k2)\nk_all.extend(k3)\nk_all.extend(k4)\n\nfor i in list_choices4:\n     for j in range(len(i)):\n         if i[j]!=checklist[j]:\n             k_all.append(j)                 \nprint('The most common wrong ques. in classes(index&amount)',Counter(k_all).most_common(1)) ","d9063487":"#%%py_mind basari\npy_mind_list=list(all_data[0].keys())\nx=np.array(py_mind_list)\ny=np.array(py_mind_D)\n#y1=np.array(py_mind_Y)\n#y2=y1=np.array(py_mind_B)\nplt.bar(x,y, color='#86bf91')\nplt.title('bar plot py_mind', weight='bold')\nplt.xlabel('Students',labelpad=10, size=12)\nplt.ylabel('D amounts',size=12)\nplt.show()","d2d1ffed":"#%%py_science basari\npy_science_list=list(all_data[2].keys())\nx=np.array(py_science_list)\ny=np.array(py_science_D)\nplt.bar(x,y, color='#86bf91')\nplt.title('bar plot py_science', weight='bold')\nplt.xlabel('Students',labelpad=10, size=12)\nplt.ylabel('D amounts',size=12)\nplt.show()","f3182bdd":"#%%py_opinion basari\npy_sense_list=list(all_data[1].keys())\nx=np.array(py_sense_list)\ny=np.array(py_sense_D)\nplt.bar(x,y, color='#86bf91')\nplt.title('bar plot py_sense', weight='bold')\nplt.xlabel('Students',labelpad=10, size=12)\nplt.ylabel('D amounts',size=12)\nplt.show()","5e171d26":"#%%siniflarin basari durumu\npy_all_list=[sum(py_mind_D)\/10,sum(py_opinion_D)\/10, sum(py_science_D)\/8,sum(py_sense_D)\/10]\nclasses_list=['py_mind','py_opinion','py_science','py_sense']\nx=np.array(classes_list)\ny=np.array(py_all_list)\nplt.bar(x,y)\nplt.title('bar plot all classes', weight='bold')\nplt.xlabel('Students',labelpad=10, size=12)\nplt.ylabel('D average',size=12)\nplt.show()","7f17eff3":"#%%Sorulara gore dogru sayilarinin dagilimi\ndicAllYs=dict(Counter(k_all))\ndicValues=list(dicAllYs.values())\ndicKeys=list(dicAllYs.keys())\ndicKeysNew=list(map(lambda x: x+1,dicKeys))\ndicValuesNew=list(map(lambda x: 38-x,dicValues))\nx=np.array(dicKeysNew)\ny=np.array(dicValuesNew)\nplt.bar(x,y)\nplt.title('bar plot D amounts', weight='bold')\nplt.xlabel('Questions',labelpad=10, size=12)\nplt.ylabel('D amount',size=12)\nplt.show()","d252fe7b":"# %%tum siniflar plot\nplt.subplot(4,1,1)\nplt.plot(py_mind_D,color='red',label='mind')\nplt.ylabel(\"mind-D\")\nplt.subplot(4,1,2)\nplt.plot(py_opinion_D,color=\"green\",label=\"opinion\")\nplt.ylabel(\"opinion-D\")\nplt.subplot(4,1,3)\nplt.plot(py_science_D,color=\"blue\",label=\"science\")\nplt.ylabel(\"science-D\")\nplt.subplot(4,1,4)\nplt.plot(py_sense_D,color=\"blue\",label=\"sense\")\nplt.ylabel(\"sense-D\")\nplt.xlabel(\"Student Amount\")\nplt.text(2.5,42,'All Classes D Graph',weight='bold',size=12)\nplt.show()","be5a2653":"# %%tum sinif sinif DYB plot\nplt.subplot(3,1,1)\nplt.plot(py_mind_D,color='red',label='mind')\nplt.ylabel(\"mind-D\")\nplt.subplot(3,1,2)\nplt.plot(py_mind_Y,color='green',label='mind')\nplt.ylabel(\"mind-Y\")\nplt.subplot(3,1,3)\nplt.plot(py_mind_B,color='blue',label='mind')\nplt.ylabel(\"mind-B\")\nplt.xlabel(\"Student Amount\")\nplt.show()\nplt.subplot(3,1,1)\nplt.plot(py_opinion_D,color='red',label='opinion')\nplt.ylabel(\"opinion-D\")\nplt.subplot(3,1,2)\nplt.plot(py_opinion_Y,color='green',label='opinion')\nplt.ylabel(\"opinion-Y\")\nplt.subplot(3,1,3)\nplt.plot(py_opinion_B,color='blue',label='opinion')\nplt.ylabel(\"opinion-B\")\nplt.xlabel(\"Student Amount\")\nplt.show()\n\nplt.subplot(3,1,1)\nplt.plot(py_science_D,color='red',label='science')\nplt.ylabel(\"science-D\")\nplt.subplot(3,1,2)\nplt.plot(py_science_Y,color='green',label='science')\nplt.ylabel(\"science-Y\")\nplt.subplot(3,1,3)\nplt.plot(py_science_B,color='blue',label='science')\nplt.ylabel(\"science-B\")\nplt.xlabel(\"Student Amount\")\nplt.show()\n\nplt.subplot(3,1,1)\nplt.plot(py_sense_D,color='red',label='sense')\nplt.ylabel(\"sense-D\")\nplt.subplot(3,1,2)\nplt.plot(py_sense_Y,color='green',label='sense')\nplt.ylabel(\"sense-Y\")\nplt.subplot(3,1,3)\nplt.plot(py_sense_B,color='blue',label='sense')\nplt.ylabel(\"sense-B\")\nplt.xlabel(\"Student Amount\")\nplt.show()","9cdd95f3":"# %% histogram\n\nplt.hist(dicValuesNew,bins= 50)\nplt.xlabel(\"soru bazinda dogru cevaplama sayisi\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()","cc8b525b":"df1 = pd.read_excel(dirname+'\/quiz1-1.xlsx' ,'py_science')\ndf2 = pd.read_excel(dirname+\"\/quiz1-1.xlsx\", 'py_sense')\ndf3 = pd.read_excel(dirname+\"\/quiz1-1.xlsx\", 'py_opinion')\ndf4 = pd.read_excel(dirname+\"\/quiz1-1.xlsx\", 'py_mind')\n\nprint(df1.columns)\nprint(df1.isim.unique())\n#df1.info()\n#print(df1.describe())\nortalama_not1 = df1.D.mean()\nprint(\"science sinifinin ortalamasi: \", ortalama_not1)\nprint(type(list(df1.D)))\nprint(df1.D)\n\n\n\nprint(df2.columns)\nprint(df2.isim.unique())\ndf2.replace(\"girmedi\",np.nan,inplace=True)\n#df2.info()\n#print(df2.describe())\nortalama_not2 = df2.D.mean()\nprint(\"sense sinifinin ortalamasi: \", ortalama_not2)\n\n\nprint(df3.columns)\nprint(df3.isim.unique())\ndf3.replace(\"girmedi\",np.nan,inplace=True)\n#df3.info()\n#print(df3.describe())\nortalama_not3 = df3.D.mean()\nprint(\"opinion sinifinin ortalamasi: \",ortalama_not3)\ndf3.columns = [each.lower() for each in df3.columns]\n\nprint(df4.columns)\nprint(df4.isim.unique())\ndf4.replace(\"girmedi\",np.nan,inplace=True)\n#df4.info()\n#print(df4.describe())\nortalama_not4 = df4.D.mean()\nprint(\"mind sinifinin ortalamasi: \", ortalama_not4)\n\ndf4.columns = [each.lower() for each in df4.columns]\nsinif_ortalamalari={'py_science':ortalama_not1, 'py_sence':ortalama_not2,'py_opinion':ortalama_not3, 'py_mind':ortalama_not4}\n#print(sinif_ortalamalari)\nen_basarili_sinif=max(sinif_ortalamalari, key=sinif_ortalamalari.get)\nprint('en basarili sinif: ',en_basarili_sinif,'\\nve ortalamasi: ',sinif_ortalamalari[en_basarili_sinif])\n\n\ndf = pd.read_excel(dirname+\"\/quiz1-1.xlsx\", sheet_name=None, ignore_index=True)\ncdf = pd.concat(df.values(),sort=False)\ncdf.replace(\"girmedi\",np.nan,inplace=True)\n#cdf.columns = [each.lower() for each in df]#########\nprint(cdf)\nortalama_not=cdf.D.mean()\nprint(ortalama_not)\n\n\nfiltre1 = cdf.D.isnull() &  cdf.Y.isnull() &  cdf.B.isnull()\nfiltrelenmis_data = cdf[filtre1]\nprint(\"sinava girmeyen ogrenci listesi: \\n\", filtrelenmis_data)\n#print( cdf.count())\nprint(\"sinava girmeyen ogrenci sayisi: \",filtrelenmis_data.isim.count())\n\nprint(\"sinava giren toplam ogrenci sayisi:\", cdf.isim.count()-filtrelenmis_data.isim.count())\n\n\nfiltre2 = cdf.D.isnull()  | cdf.Y.isnull() | cdf.B.isnull()\nfiltrelenmis_data2 = cdf[filtre2]\nprint(\"dogru yanlis ve bos sayilari olanlarin sayisi:\",cdf.isim.count()-filtrelenmis_data2.isim.count())\n\n\nfiltre=cdf.D.notnull() &cdf.Y.notnull() &  (cdf.B.isnull())\nfiltre_data= cdf[filtre]\nprint(filtre_data)\nprint(\"sadece dogru yanlis  sayilari olanlarin sayisi:\",filtre_data.isim.count())\n\n\na=cdf.sort_values(by='D', ascending=False)\nprint(\"quiz1 de en basarili ilk uc kisi:\")\nprint(a.values[0][0])\nprint(a.values[1][0])\nprint(a.values[2][0])\n\n\n","b95707ef":"#%% scatter plot\nplt.scatter(py_all_list,highest_scores, color=\"red\")\nplt.xlabel(\"Averages\")\nplt.ylabel(\"the highest scores\")\nplt.title(\"The relationship between class averages and the most successful students of each class\")\nplt.show()\n\n#%quiz1 ve quiz2 nin sinif sinif karsilastirmasi\n\n\nplt.subplot(2,1,1)\nplt.plot(py_mind_D,color='red',label='mind')\nplt.ylabel(\"mind-Dquiz2\")\nplt.subplot(2,1,2)\npy_mind_D1=np.array(list(df1.D))\nplt.plot(py_mind_D1,color='green',label='mind')\nplt.ylabel(\"mind-quiz1\")\nplt.xlabel(\"quiz comparison\")\nplt.show()\n\nplt.subplot(2,1,1)\nplt.plot(py_opinion_D,color='red',label='opinion')\nplt.ylabel(\"opinion-Dquiz2\")\nplt.subplot(2,1,2)\npy_opinion_D1=np.array(list(df2.D))\nplt.plot(py_opinion_D1,color='green',label='opinion')\nplt.ylabel(\"opinion-quiz1\")\nplt.xlabel(\"quiz comparison\")\nplt.show()\n\nplt.subplot(2,1,1)\nplt.plot(py_science_D,color='red',label='science')\nplt.ylabel(\"science-Dquiz2\")\nplt.subplot(2,1,2)\npy_science_D1=np.array(list(df3.D))\nplt.plot(py_science_D1,color='green',label='science')\nplt.ylabel(\"science-quiz1\")\nplt.xlabel(\"quiz comparison\")\nplt.show()\n\nplt.subplot(2,1,1)\nplt.plot(py_sense_D,color='red',label='sense')\nplt.ylabel(\"sense-Dquiz2\")\nplt.subplot(2,1,2)\npy_sense_D1=np.array(list(df4.D))\nplt.plot(py_sense_D1,color='green',label='sense')\nplt.ylabel(\"sense-quiz1\")\nplt.xlabel(\"quiz comparison\")\nplt.show()","5f19e2c2":"eylul ayi ilk odevi, derte vermis oldugum odevi burdan fork ederek yaparsaniz sonuclari kontrol edebiliyorum. odevleri unutmayin bu hafta aldigimiz kararlarida. lutfen bu odev 07.09.2019 saat 24:00 a kadar bitirilsin. iyi calismalar. odevle ilgili yapilmasi gerekenler resim olarak gruba gonderilmistir, Datalari kendiniz ekleyebilir veya sorun yasarsaniz, datalari local calistirabilirisiniz. iyi calismalar"}}