{"cell_type":{"d04c825e":"code","23aa06bf":"code","b5c088e3":"code","dc2a3562":"markdown","91ee532b":"markdown","e35e3bee":"markdown"},"source":{"d04c825e":"import numpy as np\n\narr1 = np.array([10,20,30,40,50,60])\narr2 = np.array([2,3,4,5,6,7])\n\nprint(arr2+arr1)\n#burada her bir birbirine es elamanlari toplar\n\n\"\"\"[12 23 34 45 56 67]\n\"\"\"\n\n#ayni sekilde diger islemleride yapabiliriz\n\nprint(arr1*arr2)\n\nprint(arr1+10)#burada da arr1 in herbir elemanina 10 ekler\nprint(arr2-2)#ayni sekilde arr2  nin herbir elemanindan 2 cikartir\n\nprint(arr1\/3)\n\n# KAREKOK ALMA\n\nprint(np.sqrt(arr1))\n\"\"\"[3.16227766 4.47213595 5.47722558 6.32455532 7.07106781 7.74596669]\n\"\"\"\n#burada butun elemanlarin karekokunu alir\n\n\"\"\"\nnumpy icinde kullanilan cok fazla dokumantasyonn var\nihtiyaca gore bakilabilir \n\n\n\"\"\"","23aa06bf":"data_list = [1,2,3]\n\nprint(data_list)\n\nimport numpy as np\n\narr = np.array(data_list)\n\nprint(arr)\n\ndata_list2= [[10,20,30],[40,50,60],[70,80,90]]\n\narr2 = np.array(data_list2)\n\nprint(arr2)\n\n#ya da daha onceden liste olusturmak zorunda degiliz direk listeyi icine de atabiliriz\n\narr3 = np.array([1,2,3,4,5,6,7,8,9,0])\n\nprint(arr3)\n\n#genel olarak numpy listelerinin olusturulmasi bu sekilde\n\n#liste icindeki elemanlara erismek icinse listelerde yaptigimiz gibi\n\nprint(arr3[0])#burada arr3 listesi icinde 0. index e erismik olduk\n\n#arr2 matrisindeki 2 ye 2. indexi bulmak istedigimizde yani 2. indexin 2. indexi(o da 90 oluyor)\n#gosterim bicimi\n\nprint(arr2[2,2,])#sonuc 90 olacaktir\n\n#numpy uzerinde yine range metodunu kullanabiliriz\n\nprint(np.arange(10,20))#burada 10-20 arasindaki degerleri verir (20 dahil degil)\n\nprint(np.arange(0,99,3))#burada da 0-99 arasindaki degerleri 3 er atlayarak veriri\n\n#10 tane ornek olarak 0 in depolandigi bir array yazmak istersek\n\nprint(np.zeros(10))\n\nprint(np.ones(10))#ya da 1 depolamak istersek \"ones\"\n\n#bunlar tek boyutlu arrayler cok boyutlu matrisleride 0 ile doldurabiliriz\n\nprint(np.zeros((2,2)))#burada 2ye2 bir matris olustur icine de 0 degerlerini ver demis oluyoruz\n\nprint(np.zeros((3,6)))\n\n\"\"\"BURADAKI ORNEKLERIN HER BIRINI AYRI BIR PENCEREDE KARISMAMASI ACISINDAN DENENEBILIR\"\"\"\n\n\n# \"linspace\" kullanimi\n\nprint(np.linspace(0,100,5)) #burada 0-100 arasindaki degerleri 5 esit parcaya bolerek 5 tane deger olarak sakla demek\n# 0  ile 100 de dahil\n\n\nprint(np.eye(6)) #burada 6 ya 6 bir matris olusturacak ve kosegenlerde hepsi 1 degerine sahip olacak\n#yani bir tane birim matrisi olusturmus oluyoruz\n\n\nprint(np.random.randint(0,10))# 0 dahil 10 dahil degil\n#burada 0 ile 10 arasinda rastgele degerler donecek\nprint(np.random.randint(10))#burada da 0 yazmasakta 0 yazmis gibi hareket edecek\n\nprint(np.random.randint(1,10,5))#burada 1-10 arasinda deger donsun ancak 5 tane deger donerek bunu bir tane array icinde sakla\n\n\nprint(np.random.randn(5))#burada sadece 0-5 arasinda degerler ortaya cikmayacak\n#burada negatif degerlerde ortaya cikacak\n#yani burada Gaussian distribution yapmis olduk\n\n# [ 1.23090143 -0.28569486 -0.42070302 -0.73690302  0.98744533] bu sekilde ciktilar verecektir\n\n\n","b5c088e3":"import numpy as np\n\narr=np.arange(25)\n\nprint(arr)#burada 25 dahil degil 0 ile 25 arasindaki degerleri vermis olacak\n\n# RESHAPE KULLANIMI\n\nprint(arr.reshape(5,5))\n\n#burada arr yi 5-5 bir matrise donusturmus olduk\n\n#ama matrisin 5x5 lik olmasi lazim yani 5x4 yaparsak hata verecektir\n\n\"\"\"\nsonuc bu sekilde olacaktir=\n\n[[ 0  1  2  3  4]\n [ 5  6  7  8  9]\n [10 11 12 13 14]\n [15 16 17 18 19]\n [20 21 22 23 24]]\n\"\"\"\n\nnewArray = np.random.randint(1,100,10)# 1-100 arasinda 10 tane deger uret komutu\n\nprint(newArray)\n\nprint(newArray.max())# icindeki en buyuk degeri verir rastgele(yani her defasinda farkli en buyuk degeri doner)\nprint(newArray.min())# icindeki en kucuk degeri verir rastgele(yani her defasinda farkli en buyuk degeri doner)\n\nprint(newArray.sum())# sum ile icindeki butun degerlerin toplamini almis oluruz\n\n\nprint(newArray.mean()) # \"mean\" ile tum degerlerin ortalamisini bulabiliriz\n\n\"\"\" YINE BURADA DA TUM KODLARI AYRI AYRI BASKA BIR PENCEREDE KARISMAMASI ACISINDAN DENENEBILIR. CIKTI DEGERLERIN DAHA IYI GORULMESI ACISINDAN\"\"\"\n\n\nprint(newArray.argmax())# burada da max. sayinin oldugu indexi verir\nprint(newArray.argmin())# burada da min. sayinin oldugu indexi verir\n\n\n# DETERMINANT HESAPLAMA\n\ndetArray = np.random.randint(1,100,25)#burada 1-100 arasinda (100 dahil degil) 25 tane random deger olusturduk\n\n\nprint(detArray)#ciktisina baktik\n\ndetArray = detArray.reshape(5,5)#daha  sonra bunu 5 e 5 lik matrise donusturduk\n\n\nprint(detArray)#ciktisina baktik\n\nprint(np.linalg.det(detArray))#burada determinantini hesapladik\n\n","dc2a3562":"**NUMPY ARRAY YAPISI-2**","91ee532b":"**NUMPY ARRAY YAPISI-1**","e35e3bee":"**NUMPY ARRAY YAPILARININ TEMEL OPERASYONLARI**"}}