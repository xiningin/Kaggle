{"cell_type":{"527e0bd5":"code","14985e8f":"code","5a9f4393":"code","5e9a9398":"code","0c49f20c":"code","fa10a86d":"code","84acbabe":"code","adf26433":"code","8d8a1269":"code","64dc6562":"code","5fd1044b":"code","e3fbf36a":"code","028aaff2":"code","69b3c59a":"code","d1e4315f":"markdown","b8a528dd":"markdown","668cfbb3":"markdown","0c2804c0":"markdown","e49a1bbc":"markdown","8e1cc25d":"markdown","0639abb2":"markdown","98db4767":"markdown","20267423":"markdown","1244da90":"markdown","4b96c59a":"markdown","e6b4f550":"markdown","aa63ca7c":"markdown"},"source":{"527e0bd5":"import numpy as np #library used for working with arrays.\nimport matplotlib.pyplot as plt #data visualization and graphical plotting library.\nimport pandas as pd #library written for the Python programming language for data manipulation.\nimport sys #system-specific parameters and functions","14985e8f":"dataset = pd.read_csv('..\/input\/insurance-premium-prediction\/insurance.csv')\ndataset.head() #returns top 5 rows from dataset.","5a9f4393":"num_lst = []\ncat_lst = []\n\nfrom pandas.api.types import is_string_dtype, is_numeric_dtype\n\nfor column in dataset:\n    plt.figure(column, figsize = (5,5))\n    plt.title(column)\n    if is_numeric_dtype(dataset[column]):\n        dataset[column].plot(kind = 'hist')\n        num_lst.append(column)\n    elif is_string_dtype(dataset[column]):\n        dataset[column].value_counts().plot(kind = 'bar')\n        cat_lst.append(column)\n        \nprint(num_lst)\nprint(cat_lst)","5e9a9398":"#checkung nan values\nprint(dataset.isnull().sum().sum())","0c49f20c":"X = dataset.iloc[:, :-1].values #returns all rows and first column\ny = dataset.iloc [:, -1].values #returns all rows and last column","fa10a86d":"#Encoding the Independent Variable (Sex and Smoker)\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:, 1] = le.fit_transform(X[:, 1]) \nX[:, 4] = le.fit_transform(X[:, 4]) \n\nnp.set_printoptions(threshold=sys.maxsize)\nprint(X[:5,:10])\n","84acbabe":"#Encoding the Independent Variable (Region)\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [5])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))\n\nnp.set_printoptions(threshold=sys.maxsize)\nprint(X[:5,:10])","adf26433":"#we don't use feature scaling.\n#Scaling does not affect your statistical inference in regression models \u2014 the estimates are adjusted appropriately and the p-values will be the same.","8d8a1269":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\ntrain_X,test_X,train_y,test_y=train_test_split(X,y,test_size=0.2,random_state=0)\n#test_size - represent the proportion of the dataset to include in the train split.","64dc6562":"model = LinearRegression()\nmodel.fit(train_X,train_y)","5fd1044b":"y_pred = model.predict(test_X)","e3fbf36a":"np.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), test_y.reshape(len(test_y),1)),1)[:10])","028aaff2":"plt.subplots(figsize=(15,6))  \n\nplt.subplot(1,2,1)\nplt.scatter(dataset['age'], y, color = 'red')\nplt.scatter(dataset['age'], model.predict(X), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('Age', fontsize = 14)\nplt.ylabel('Expenses',fontsize = 14)\n\n# BMI vs Expenses\nplt.subplot(1,2,2)\nplt.scatter(dataset['bmi'], y, color = 'red')\nplt.scatter(dataset['bmi'], model.predict(X), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('BMI', fontsize = 14)\nplt.ylabel('Expenses',fontsize = 14)\nplt.show()","69b3c59a":"from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\nprint(\"MSE : \",mean_squared_error(y_pred,test_y))\nprint(\"MAE : \",mean_absolute_error(y_pred,test_y))\nprint(\"R Score :\",r2_score(y_pred,test_y))\n\n#The essential step in any machine learning model is to evaluate the accuracy of the model. \n#The Mean Squared Error, Mean absolute error, and R-Squared or Coefficient of determination metrics are used to evaluate the performance of the model in regression analysis.","d1e4315f":"**Predicting the Test set results.**","b8a528dd":"**Hi Everyone! Thank you for your time in my work. In this notebook we are going to predict Future Medical Expenses.**","668cfbb3":"**Visualizing of Actual Expenses and Predicted Expenses for 'Age' and 'BMI' features.**","0c2804c0":"**Splitting the dataset into the training set and test set.**","e49a1bbc":"**Training the Simple Linear Regression model on the Training set.**","8e1cc25d":"**Thank you for your attention.**","0639abb2":"**Visualization of how our features are distributed.**","98db4767":"**Encoding the Independent Variables.**","20267423":"**Comparison of predicted and actual Expenses.**","1244da90":"**Import libraries.**","4b96c59a":"**Evaluating the accuracy of the model.**","e6b4f550":"**Conclusion.**\nThe Linear Regression does not have the highest accuracy.\nIn the next notebook i am going to check Polynomial regression and compare it with this algorithm.","aa63ca7c":"**Import the dataset.** The insurance.csv dataset contains 1338 observations (rows) and 7 features (columns). The dataset contains 4 numerical features and 3 nominal features."}}