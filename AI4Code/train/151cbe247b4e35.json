{"cell_type":{"f026dd9c":"code","909969b3":"code","9b8fd88b":"code","e3a92c6c":"code","084edc1d":"code","91f371b8":"code","88403733":"code","a5d960aa":"code","c8374758":"code","c97c44a3":"code","fb1ff464":"code","723f14ca":"code","2963576f":"code","421509b0":"code","3744318e":"code","5570f9d7":"code","d2c5aed5":"code","f3650aa7":"code","5583512e":"code","e06533a4":"code","5c14d3d7":"code","f436134c":"code","5f59ce25":"code","d413e68e":"code","610fe1bf":"code","5ec3c859":"code","ba064758":"code","51073871":"code","52001449":"code","94e1119d":"markdown","a2074abc":"markdown","aa872e79":"markdown","bccc9a12":"markdown","2de40c39":"markdown","54dc6eee":"markdown","f1704b02":"markdown","24bea13f":"markdown","e649a2ac":"markdown","4bf37440":"markdown","3659353d":"markdown","e5ef0b78":"markdown"},"source":{"f026dd9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\nfrom collections import Counter\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","909969b3":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId=test_df[\"PassengerId\"]","9b8fd88b":"train_df.columns","e3a92c6c":"train_df.head()","084edc1d":"train_df.describe()","91f371b8":"train_df.info()","88403733":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable], bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","a5d960aa":"numericVar=[\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","c8374758":"def bar_plot(variable):\n    var=train_df[variable] #get features\n    varValue=var.value_counts() #count number of categorical variable\n    \n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","c97c44a3":"category1=[\"Survived\", \"Sex\", \"Pclass\", \"Embarked\", \"SibSp\", \"Parch\"]\nfor c in category1:\n    bar_plot(c)","fb1ff464":"category2=[\"Cabin\", \"Name\", \"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\",format(train_df[c].value_counts()))","723f14ca":"# Pclass vs Survived\ntrain_df[[\"Pclass\", \"Survived\"]].groupby([\"Pclass\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","2963576f":"#Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","421509b0":"#SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","3744318e":"#Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","5570f9d7":"#Fare vs Survived\ntrain_df[[\"Fare\",\"Survived\"]].groupby([\"Fare\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","d2c5aed5":"def detect_outliers(df,features):\n    outlier_indices=[]\n    \n    for c in features:\n        # 1st quartile\n        q1=np.percentile(df[c],25)\n        # 3rd quartile\n        q3=np.percentile(df[c],75)\n        #IQR\n        iqr=q3-q1    \n        #Outlier Step\n        outlier_step=iqr*1.5\n        #Detect Outlier and Their Indices\n        outlier_list_col=df[(df[c]<q1 - outlier_step) | (df[c] > q3 + outlier_step)].index\n        #Store Indices\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices=Counter(outlier_indices)\n    multiple_outliers=list(i for i, v in outlier_indices.items() if v>2)\n    \n    return multiple_outliers","f3650aa7":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","5583512e":"#drop outliers\ntrain_df=train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis=0).reset_index(drop=True)","e06533a4":"train_df_len=len(train_df)\ntrain_df=pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","5c14d3d7":"train_df.head()","f436134c":"train_df.columns[train_df.isnull().any()]","5f59ce25":"train_df.isnull().sum()","d413e68e":"train_df[train_df[\"Embarked\"].isnull()]","610fe1bf":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()","5ec3c859":"train_df[\"Embarked\"]=train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","ba064758":"train_df[train_df[\"Fare\"].isnull()]","51073871":"train_df[\"Fare\"]= train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"]))","52001449":"train_df[train_df[\"Fare\"].isnull()]","94e1119d":"<a id=\"d\"><\/a><br>\n### Fill Missing Value\n* Embarked has 2 missing value\n* Fare has 1 missing value","a2074abc":"<a id=\"b\"><\/a><br>\n### Categorical Variable Analysis","aa872e79":" <a id=\"1\"><\/a><br>\n # Load and Check Data","bccc9a12":"<a id=\"a\"><\/a><br>\n### Numerical Variable Analysis","2de40c39":"<a id=\"c\"><\/a><br>\n### Find Missing Value","54dc6eee":"<a id=\"6\"><\/a><br>\n# Missing Value\n*    Find Missing Value\n*    Fill Missing Value","f1704b02":"<a id=\"3\"><\/a><br>\n# Univariate Variable Analysis\n   * Categorical Variable Analysis\n   * Numerical Variable Analysis","24bea13f":"<a id=\"5\"><\/a><br>\n# Outlier Detection","e649a2ac":"<a id=\"4\"><\/a><\/br>\n# Basic Data Analysis\n* Age - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n* Fare - Survived \n* Pclass - Survived","4bf37440":"* **float64(2):** Fare ve Age\n* **int64(5):** PassengerId, Survived, Pclass, Sibsp, Parch\n* **object(5):** Name, Sex, Ticket, Cabin, Embarked","3659353d":"<a id=\"2\" ><\/a><br>\n# Variable Description\n1. **PassengerId:** Unique id number to each passenger \n2. **Survived:** Passenger survive(1) or died(0)\n3. **Pclass:** Passenger class\n4. **Name:** Passenger names\n5. **Sex:** Gender of passengers\n6. **Age:** Age of passenger\n7. **SibSp:** Number of siblings\/spouses\n8. **Parch:** Number of parents\/children\n9. **Ticket:** Ticket number\n10. **Fare:** Cost of Tickets\n11. **Cabin:** Cabin Category\n12. **Embarked:** Ports where passenger embarked (C=Cherbourg, Q=Queenstown, S=Southampton)","e5ef0b78":"**INTRODUCTION**\nThe Titanic was a transatlantic cruise ship. The ship, which even God could not sink, hit an iceberg on its maiden voyage on the night of April 15, 1912, and sank into the icy waters of the North Atlantic in about two hours and forty minutes. When its construction was completed in 1912, it was the largest steam passenger ship in the world. Its sinking resulted in the deaths of 1,514 people and went down in history as one of the greatest maritime disasters.\n\n**CONTENT:**\n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n3. [Univariate Variable Analysis](#3)\n    * [Numerical Variable Analysis](#a)\n    * [Categorical Variable Analysis](#b)\n4. [Basic Data Analysis](#4)\n5. [Outlier Detection](#5)\n6. [Missing Value](#6)\n    * [Find Missing Value](#c)\n    * [Fill Missing Value](#d)"}}