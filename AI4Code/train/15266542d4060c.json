{"cell_type":{"90da4bea":"code","98f69a4f":"code","b26eaed5":"code","83b5eed2":"code","d56f96b3":"code","d6c3ea90":"code","78c50236":"code","0b77ab5e":"code","4b1f82e7":"code","c7d9b581":"code","0c94c6d6":"code","51c92755":"code","a857fa8d":"code","13bfa3f7":"code","fdf6a011":"code","686c3652":"code","a11ca700":"code","e1bf4a03":"code","aaf77172":"code","7b998551":"code","acc546e9":"code","8548eb4d":"code","03815e38":"code","b1b1de1e":"code","5124112a":"code","eb28d32b":"code","3a4fec84":"code","2297d78f":"code","1683656c":"code","46165b54":"code","76d62192":"code","8f84947d":"code","35f336e0":"code","5436e30d":"code","434dfdb0":"code","92283cd5":"code","4522713a":"code","05da8a77":"code","cd0d36be":"code","c6045a97":"code","3e350c99":"code","2dbfe90c":"code","4d7b52dc":"code","42440e56":"code","dee2c922":"code","0c47f57f":"code","9a8624ef":"code","102e0153":"code","2c98b4a6":"code","45e1704e":"code","5e74b252":"code","42d0e8af":"code","f1f4a291":"code","bba1cd71":"code","db39a96b":"code","62d6c1a1":"code","f334b4d1":"code","ed918440":"code","7991909a":"code","7108f499":"code","2c689f42":"markdown","ebe7c358":"markdown","bc09c5c9":"markdown","052e0b23":"markdown","1f81ef1f":"markdown","f01e7a36":"markdown","30948cae":"markdown","0a20638e":"markdown","227e9e54":"markdown","4ec4647a":"markdown"},"source":{"90da4bea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","98f69a4f":"# Visualization libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b26eaed5":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","83b5eed2":"submission.head()","d56f96b3":"train.head()","d6c3ea90":"test.head()","78c50236":"test.shape","0b77ab5e":"train.info()","4b1f82e7":"train.columns","c7d9b581":"sns.set_style('whitegrid')","0c94c6d6":"# Heatmap of mising data cmap color guide https:\/\/medium.com\/@morganjonesartist\/color-guide-to-seaborn-palettes-da849406d44f\nsns.heatmap(train.isnull(), yticklabels=False, cmap='BuPu_r', cbar=False )","51c92755":"train.isnull().sum()","a857fa8d":"train['Age'].plot.hist()","13bfa3f7":"sns.countplot(x='Survived', data=train, palette=\"twilight_shifted_r\")","fdf6a011":"sns.countplot(x='Survived', data=train, hue='Pclass', palette=\"twilight_shifted_r\")","686c3652":"sns.countplot(x='Survived', data=train, hue='Sex', palette=\"twilight_shifted_r\")","a11ca700":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass', y='Age', data=train)","e1bf4a03":"train.groupby('Pclass')['Age'].median()","aaf77172":"def impute_age(cols):\n    Age = cols[0]\n    Pclass= cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","7b998551":"train['Age'] = train[['Age', 'Pclass']].apply(impute_age, axis=1)","acc546e9":"sns.heatmap(train.isnull(), yticklabels=False, cmap='BuPu_r', cbar=False )","8548eb4d":"train.isnull().sum()","03815e38":"train.drop('Cabin', axis=1, inplace=True)","b1b1de1e":"train.dropna(inplace=True)","5124112a":"train.isnull().sum()","eb28d32b":"train.head()","3a4fec84":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nsex.head()","2297d78f":"embark = pd.get_dummies(train['Embarked'], drop_first=True)\nembark.head()","1683656c":"train = pd.concat([train,sex,embark], axis=1)","46165b54":"train.head()","76d62192":"train.drop(['PassengerId','Name', 'Sex', 'Ticket', 'Embarked'], axis=1, inplace=True)","8f84947d":"train.head()","35f336e0":"test.head()","5436e30d":"test.shape","434dfdb0":"test.isnull().sum()","92283cd5":"test['Age'] = test[['Age', 'Pclass']].apply(impute_age, axis=1)","4522713a":"sex = pd.get_dummies(test['Sex'],drop_first=True)\nsex.head()","05da8a77":"embark = pd.get_dummies(test['Embarked'], drop_first=True)\nembark.head()","cd0d36be":"test = pd.concat([test,sex,embark], axis=1)\ntest.head()","c6045a97":"test.drop(['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked'], axis=1, inplace=True)","3e350c99":"test.isnull().sum()","2dbfe90c":"test.interpolate(method ='linear', limit_direction ='forward', inplace=True)","4d7b52dc":"test.isnull().sum()","42440e56":"test.shape","dee2c922":"X = train.drop('Survived', axis=1)\ny = train['Survived']","0c47f57f":"from sklearn.model_selection import train_test_split","9a8624ef":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","102e0153":"from sklearn.linear_model import LogisticRegression","2c98b4a6":"logmodel = LogisticRegression(max_iter=1000)","45e1704e":"logmodel.fit(X_train, y_train)","5e74b252":"predictions = logmodel.predict(X_test)","42d0e8af":"from sklearn.metrics import classification_report","f1f4a291":"print(classification_report(y_test, predictions))","bba1cd71":"from sklearn.metrics import confusion_matrix","db39a96b":"confusion_matrix(y_test, predictions)","62d6c1a1":"test.columns","f334b4d1":"X = test[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'male', 'Q','S']]\nX.isnull().sum()","ed918440":"predictions = logmodel.predict(X)\nprint(len(predictions))","7991909a":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.head()","7108f499":"output.to_csv('submission.csv', index=False)","2c689f42":"### Evaluate Model","ebe7c358":"## Build A Logistic Regression Model","bc09c5c9":"### Train Test Split","052e0b23":"## **Cleaning Data**","1f81ef1f":"# **Titanic - ML (Logistic Regression)**\n","f01e7a36":"### Training and Predicting ","30948cae":"## **Exploratory Data Analysis**","0a20638e":"### predict using test.csv","227e9e54":"### Convert Categorical Features(test.csv)","4ec4647a":"## **Convert Categorical Features** (train.csv)"}}