{"cell_type":{"9b882de8":"code","dd219506":"code","fa91d038":"code","25aa4199":"code","87e629cd":"code","34befebd":"code","f108fdf8":"code","710a1dc8":"code","530126b6":"code","02a341b2":"code","14c944d3":"code","ac3a7021":"code","df17aed7":"code","17e563ed":"code","827734ea":"code","4c1112de":"code","8b67b93b":"code","a2a338a0":"code","3408d9da":"code","6e05a9fb":"code","1541bdf6":"code","b1421b91":"code","c4d08626":"code","9930dffe":"code","305a4125":"code","e3e27dbd":"code","a80f7ce9":"code","2acfb165":"code","cf6de875":"code","95a5e9bb":"code","eb1f1c37":"code","dd2bfb4a":"markdown","acdc9f3b":"markdown","749b7981":"markdown","a0cdf18c":"markdown","a12e7aeb":"markdown","c1e95931":"markdown","963a8bd1":"markdown","14c94ede":"markdown","3ac47a7b":"markdown","b1b7c21b":"markdown","4ac75560":"markdown","44cc1392":"markdown","86f612de":"markdown","66d2ed63":"markdown","4e27f1c4":"markdown","a0867533":"markdown","dd753051":"markdown"},"source":{"9b882de8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n%matplotlib inline","dd219506":"suicide = pd.read_csv('\/kaggle\/input\/suicide-rates-overview-1985-to-2016\/master.csv')\nsuicide.sample(5)","fa91d038":"# Checking datatyes and missing values\n\nsuicide.info()","25aa4199":"# Dropping columns 'HDI for year' and 'country-year'\n\nsuicide.drop(['HDI for year','country-year'], axis=1, inplace=True)\nprint(suicide.shape[0])\nsuicide.columns","87e629cd":"# Removing whitespaces from column name ' gdp_for_year ($) '\n\nsuicide.rename(columns = {' gdp_for_year ($) ':'gdp_for_year ($)'}, inplace = True)\nsuicide.columns","34befebd":"# Checking for duplicate values\n\nsuicide.duplicated().value_counts()","f108fdf8":"# Calculating some basic statistics\n\nsuicide.describe(include='all')","710a1dc8":"overall     = pd.DataFrame(suicide.groupby('year')['suicides_no'].sum())\npop_overall = pd.DataFrame(suicide.groupby('year')['population'].sum())","530126b6":"fig = make_subplots(rows = 2, cols=1)\n\nfig.append_trace(go.Scatter(\n                            x = overall.index,\n                            y = overall['suicides_no'],\n                            name = 'Number of Suicies',\n                            mode = 'lines+markers',\n                            marker=dict(color=\"red\")\n                            ), row=1, col=1)\n\nfig.append_trace(go.Scatter(\n                            x = pop_overall.index,\n                            y = pop_overall['population'],\n                            name = 'Population',\n                            mode = 'lines+markers',\n                            marker=dict(color=\"#00CC96\")\n                            ), row=2, col=1)\n\n\nfig.update_layout(height=600, width=800, title = 'Population V\/S Total Suicides Trend')\nfig.update_xaxes(title_text = 'Year', row=1, col=1)\nfig.update_xaxes(title_text = 'Year', row=2, col=1)\nfig.update_yaxes(title_text='Suicides', row=1, col=1)\nfig.update_yaxes(title_text='Population', row=2, col=1)\n\nfig.show()","02a341b2":"gender = pd.DataFrame(suicide.groupby('sex')['suicides_no'].sum())\ngender","14c944d3":"fig = px.bar(gender,\n             color = gender.index,\n             y = gender.suicides_no,\n             title = 'Total suicides by gender'\n             )\n\nfig.update_layout(height=500, width=700)\nfig.update_xaxes(title_text = 'Sex')\nfig.update_yaxes(title_text = 'Suicides (In millions)')\n\nfig.show()","ac3a7021":"# Calculating suicide proportion for\n\ntotal_gender = suicide[['sex', 'suicides_no', 'population', 'year', 'country', 'gdp_for_year ($)']]\ntotal_gender['proportion'] = total_gender.suicides_no \/ total_gender.population","df17aed7":"# Grouping by year and sex for proportion (Total suicides \/ Toal population)\n\ngender_prop = pd.DataFrame(total_gender.groupby(['year', 'sex'])['proportion'].mean()).unstack()\ngender_prop.head(3)","17e563ed":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x= gender_prop.index,\n                         y = gender_prop.proportion.male,\n                         mode = 'lines+markers',\n                         name = 'Male death proportion',\n                         marker = dict(color='#FF9900')))\n\nfig.add_trace(go.Scatter(x= gender_prop.index,\n                         y = gender_prop.proportion.female,\n                         mode = 'lines+markers',\n                         name = 'Female death proportion',\n                         marker = dict(color='rgb(179,222,105)')))\n\nfig.update_layout(height=600, width=1000,\n                  title = 'Male v\/s Female suicide proportion through the years',\n                  font = dict(color=\"Brown\"))\n\nfig.update_xaxes(title_text = 'Year', color=\"RebeccaPurple\")\nfig.update_yaxes(title_text = 'Proportion', color=\"RebeccaPurple\")\n\nfig.show()","827734ea":"gender_age = pd.DataFrame(suicide.groupby(['age', 'sex'])[ 'suicides_no'].sum()).reset_index()","4c1112de":"age_order = ['5-14 years','15-24 years','25-34 years','35-54 years','55-74 years','75+ years']\n\nfig = px.bar(gender_age,\n             x = gender_age.age,\n             y = gender_age.suicides_no,\n             color = 'sex',\n             pattern_shape = 'sex',\n             pattern_shape_sequence = ['x',''],\n             text = gender_age.suicides_no,\n             color_discrete_map={'female':'#4C78A8', 'male':'#FFA15A'}\n             )\n\nfig.update_layout(height=600, width=950,\n                  title = 'Suicides in gender by different Age group',\n                  font = dict(color = 'RebeccaPurple')\n                  )\n\nfig.update_xaxes(categoryorder='array', categoryarray= age_order, title_text = 'Age Group')\nfig.update_yaxes(title_text = 'Suicides (In millions)')\n\nfig.show()","8b67b93b":"# Data by country\n\ndata_country = pd.DataFrame(suicide.country.value_counts())\n\n\nplt.figure(figsize=(8,20), dpi=150)\n\nsns.barplot(y = data_country.index, x = data_country.country)\nplt.xlabel('Observations', fontsize = 15)\nplt.title('Data provided by country', fontsize = 18)\n\n\nplt.show()","a2a338a0":"# Suicides by country\n\ncountry = pd.DataFrame(\n                       suicide.groupby('country')['suicides_no']\\\n                       .sum()\\\n                       .reset_index().\\\n                       sort_values('suicides_no', ascending=False)[:20]\n                       )","3408d9da":"fig = px.pie(\n            country,\n            values = 'suicides_no',\n            names = 'country',\n            title = 'Countries with most suicides'\n            )\n\nfig.update_layout(height=600, width=800)\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","6e05a9fb":"country_prop = pd.DataFrame(total_gender.groupby(['country'])['proportion'].mean())\\\n                          .sort_values('proportion', ascending = False)\\\n                          .reset_index()","1541bdf6":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n                     x = country_prop.country,\n                     y = country_prop.proportion,\n                     marker_color = px.colors.qualitative.Light24 * 10\n                    ))\n\nfig.update_layout(height=800, width=1080, title = 'Suicides in countries by Proportion')\nfig.update_xaxes(title_text = 'Country', tickangle = 60)\nfig.update_yaxes(title_text = 'Suicides proportion')\n\nfig.show()","b1421b91":"gender_country = pd.DataFrame(total_gender.groupby(['country', 'sex'])['suicides_no'].sum())\\\n                              .unstack()\\\n                              .sort_values(by=[('suicides_no', 'male')] , ascending=False)[:60]","c4d08626":"gender_country_p = pd.DataFrame(total_gender.groupby(['country', 'sex'])['proportion'].mean())\\\n                          .unstack()\\\n                          .sort_values([('proportion', 'male')], ascending = False)[:80]","9930dffe":"fig = make_subplots(rows = 2, cols=1)\n\n# Subplot 1\nfig.add_trace(go.Bar(\n                     x = gender_country.index,\n                     y = gender_country.suicides_no.male,\n                     name = 'Male Suicides'\n                    ), row=1, col=1)\n\nfig.add_trace(go.Bar(\n                     x = gender_country.index,\n                     y = -gender_country.suicides_no.female,\n                     name = 'Female Suicides'\n                     ), row=1, col=1)\n\n# Subplot 2\nfig.add_trace(go.Bar(\n                     x = gender_country_p.index,\n                     y = gender_country_p.proportion.male,\n                     name = 'Male Proportion'                     \n                       ), row=2, col=1)\n\nfig.add_trace(go.Bar(\n                     x = gender_country_p.index,\n                     y = -gender_country_p.proportion.female,\n                     name = 'Female Proportion'                     \n                       ), row=2, col=1)\n\n\n\nfig.update_layout(height=1500, width=1000,\n                  title = 'Suicides and its Proportion in different Countries among Genders',\n                  barmode='overlay')\n\nfig.update_xaxes(tickangle = 60,\n                 title_text = 'View the negative values as positve (on the Y-axes).',\n                 row=1, col=1)\nfig.update_xaxes(title_text = 'Country', tickangle = 60, row=2, col=1)\nfig.update_yaxes(title_text='Suicides', row=1, col=1)\nfig.update_yaxes(title_text='Proportion', row=2, col=1)\n\n\nfig.show()","305a4125":"gdp_max = total_gender[total_gender.year == 1995]\\\n                      .groupby('country')[['gdp_for_year ($)', 'proportion']]\\\n                      .agg({'gdp_for_year ($)' : 'max', 'proportion' : 'mean'})\\\n                      .reset_index()","e3e27dbd":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(y= gdp_max.proportion,\n                         x = gdp_max['gdp_for_year ($)'],\n                         mode = 'markers+lines',\n                         name = 'Male death proportion',\n                         marker = dict(color='#17BECF')))\n\n\nfig.update_layout(height=600, width=1000,\n                  title = 'GDPs in 1999 v\/s Mean suicide proportion',\n                  font = dict(color=\"#FF7F0E\"))\n\nfig.update_xaxes(title_text = 'GDP (1995)', tickangle=45)\nfig.update_yaxes(title_text = 'Suicide Proportion')\n\nfig.show()","a80f7ce9":"# Grouping by country, year and gdp_per_capita for total suicides\ngdp = pd.DataFrame(suicide.groupby(['country', 'year', 'gdp_per_capita ($)'])['suicides_no'].sum()).reset_index()","2acfb165":"# Function for parameter subplot_titles entries of make subplot function\ndef subplot_titles(countries):\n    titles = []\n    for i in countries:\n        titles.append(i+' : Suicides')\n        titles.append(i+' : GDP per capita')\n    \n    return titles\n\n\n\ndef subplot(country_list, row = 0, col = 2):\n    row = len(country_list)\n    fig = make_subplots(rows=row, cols=2, subplot_titles = subplot_titles(country_list))\n    \n    \n    for i in range(row):\n            fig.add_trace(go.Scatter(x = gdp[gdp['country']==country_list[i]]['year'],\n                         y = gdp[gdp['country'] == country_list[i] ]['suicides_no'],\n                         name = country_list[i] + ' : Suicides'\n                         ), row=i+1, col=1)\n\n            fig.add_trace(go.Scatter(x = gdp[gdp['country']==country_list[i]]['year'],\n                         y = gdp[gdp['country'] == country_list[i]]['gdp_per_capita ($)'],\n                         name = country_list[i] + ' : GDP per capita'\n                        ), row=i+1, col=2)\n            \n    \n    fig.update_layout(height=200*row, width=1000,\n                  title = 'Suicides and GDP per capita $ through the years in different countries',\n                  showlegend = False\n                  )\n    fig.update_xaxes(title_text = 'Year')\n    fig.update_yaxes(title_text = 'Suicides')\n    \n    for i in range(row):\n        fig.update_yaxes(title_text=\"GDP per capita\", row=i+1, col=2)\n                 \n    fig.show()","cf6de875":"# Selecting 10 countries with highest suicide proportion \ntop_5_suicide = ['Lithuania', 'Sri Lanka', 'Russian Federation', 'Belarus', 'Hungary', 'Kazakhstan', 'Latvia', 'Estonia', 'Slovenia', 'Ukraine']\nsubplot(top_5_suicide)","95a5e9bb":"import pycountry\ncountries = {}\nfor i in pycountry.countries:\n    countries[i.name] = i.alpha_3\n    \niso_alpha =  [countries.get(country, 'Unknown code') for country in country_prop.country]\ncountry_prop['iso_alpha'] = iso_alpha","eb1f1c37":"fig = px.choropleth(country_prop, locations = country_prop.iso_alpha,\n                    color = country_prop.proportion,\n                    hover_name = country_prop.country,\n                    color_continuous_scale = px.colors.sequential.Brwnyl)\n\nfig.update_layout(height=600, width=800)\n\nfig.show()","dd2bfb4a":"<a id=\"section-one\"><\/a>\n# Disclaimer:  \n1. The visualizations and statistics involved are evaluated from the dataset used.  \n2. Statistics calculated may or may not be analogus to the real world.  \n3. I'm not trying to establish any causality or estimate any true parameters from the data.\n\n Also, data from 2016 do not account for all 12 months of the year. So suicide statistics for this year would be relatively lower.","acdc9f3b":"<a id=\"section-five\"><\/a>\n#  Suicides by age group","749b7981":"### We chose the year 1999 as it had the most suicide cases ","a0cdf18c":"Do you notice any trends ?","a12e7aeb":"<a id=\"section-eight\"><\/a>\n# Total suicides by Country and Gender","c1e95931":"# Suicide Rates Overview 1985 to 2016","963a8bd1":"<a id=\"section-eleven\"><\/a>\n# World graph by suicide proportion","14c94ede":"<a id=\"section-ten\"><\/a>\n# Let's try GDP per capita","3ac47a7b":"<a id=\"section-two\"><\/a>\n## A little EDA","b1b7c21b":"<a id=\"section-nine\"><\/a>\n# Suicides relation with a country's GDP ","4ac75560":"<a id=\"section-twelve\"><\/a>\n### Concluding :  \nThough I didn't gave my insights for any of the visualization or analyses, I would really appreciate your inputs in the comments.  \nThank you for sitting through my notebook.","44cc1392":"<a id=\"section-six\"><\/a>\n# Suicide by Country","86f612de":"<a id=\"section-seven\"><\/a>\n# Proportion of suicides by country","66d2ed63":"<a id=\"section-four\"><\/a>\n# Suicides by Gender","4e27f1c4":"<a id=\"section-three\"><\/a>\n# Exploring the trend of overall suicides through the years\n","a0867533":"# Table of contents\n\n* [Disclaimer](#section-one)\n* [A little EDA](#section-two)\n* [Exploring the trend of overall suicides through the years](#section-three)\n* [Suicides by Gender](#section-four)\n* [Suicides by age group](#section-five)\n* [Suicide by Country](#section-six)\n* [Proportion of suicides by country](#section-seven)\n* [Total suicides by Country and Gender](#section-eight)\n* [Suicides relation with a country's GDP ](#section-nine)\n* [Let's try GDP per capita](#section-ten)\n* [World graph by suicide proportion](#section-eleven)\n* [Conclusion](#section-twelve)","dd753051":"### That being said, I would really like your interpretations and inferences from the plots in the comments."}}