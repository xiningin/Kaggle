{"cell_type":{"9585ff76":"code","5feb2ace":"code","e908e099":"code","1325701c":"code","cdcc3baa":"code","f812cc67":"code","8264b123":"code","520f0bca":"code","20738994":"code","052ac312":"code","113c1f67":"code","7c5fbb87":"code","5add6655":"code","c167b460":"code","0fcdc232":"code","7f94d50d":"code","0ebd6100":"code","9b403d35":"code","3deed626":"markdown","0af978ee":"markdown","1741cd47":"markdown","9516acc2":"markdown","39002081":"markdown","3c2c2d4d":"markdown","c3b01eac":"markdown","d6ba67bd":"markdown","df810349":"markdown","56b06a5a":"markdown"},"source":{"9585ff76":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')","5feb2ace":"#loading the dataset\n\nloan_train_data = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\nloan_test_data = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\n\n","e908e099":"# data description\n\nprint(loan_train_data.describe())\nprint(loan_train_data.info())  #data has both categorical as well as numerical columns\nprint(loan_train_data.isnull().sum())","1325701c":"plt.hist(loan_train_data['LoanAmount'],10)","cdcc3baa":"# Checking the difference between the mean and the median in non-symmetric data\n\nnorm_data = loan_train_data[\"LoanAmount\"]\nnorm_data.plot(kind=\"density\",\n              figsize=(8,8))\n\n\nplt.vlines(norm_data.mean(),    \n           ymin=0, \n           ymax=0.02,\n           linewidth=2.0,\n           color=\"green\")\n\nplt.vlines(norm_data.median(),   \n           ymin=0, \n           ymax=0.02, \n           linewidth=2.0,\n           color=\"blue\")\n\nplt.vlines(norm_data.mode(),   \n           ymin=0, \n           ymax=0.02, \n           linewidth=2.0,\n           color=\"red\")\n\n# plt.vlines(norm_data.interpolate(),   \n#            ymin=0, \n#            ymax=0.02, \n#            linewidth=2.0,\n#            color=\"yellow\")","f812cc67":"# Data Cleaning and handling missing values\n\nloan_train_data['Gender'].fillna(loan_train_data['Gender'].mode()[0], inplace = True)\nloan_train_data['Gender'].value_counts()\n\nloan_train_data['Married'].fillna(loan_train_data['Married'].mode()[0], inplace = True)\nloan_train_data['Married'].value_counts()\n\nloan_train_data['Dependents'].fillna(loan_train_data['Dependents'].mode()[0], inplace = True)\nloan_train_data['Dependents'].value_counts()\n\nloan_train_data['Self_Employed'].fillna(loan_train_data['Self_Employed'].mode()[0], inplace = True)\nloan_train_data['Self_Employed'].value_counts()\n\nloan_train_data['LoanAmount'].fillna(loan_train_data['LoanAmount'].mode()[0], inplace = True)\nloan_train_data['LoanAmount'].value_counts()\n\nloan_train_data['Loan_Amount_Term'].fillna(loan_train_data['Loan_Amount_Term'].mode()[0], inplace = True)\nloan_train_data['Loan_Amount_Term'].value_counts()\n\nloan_train_data['Credit_History'].fillna(loan_train_data['Credit_History'].mode()[0], inplace = True)\n\n","8264b123":"loan_train_data.isnull().sum()","520f0bca":"# Conditional probability with python example\n\nlen(loan_train_data)   #checking the number of records","20738994":"# We\u2019re going to calculate the probability an applicant gets an approval of loan, \n# given that their credit history is good.\n\npd.crosstab(loan_train_data['Credit_History'], loan_train_data['Loan_Status'], margins = True)","052ac312":"print(loan_train_data.describe())\nprint(loan_train_data['LoanAmount'].describe())\n\n\nmean = loan_train_data['LoanAmount'].mean()\nmedian = loan_train_data['LoanAmount'].median()\nmode = loan_train_data['LoanAmount'].mode()[0]\nstd = loan_train_data['LoanAmount'].std()\nvar = loan_train_data['LoanAmount'].var()\n\nprint('\\n')\nprint('Mean =',mean)\nprint('Median =',median)\nprint('Mode =',mode)\nprint('Standard Deviation =',std)\nprint('Variance =',var)","113c1f67":"\np = np.percentile(loan_train_data['LoanAmount'], 50)\np","7c5fbb87":"# Implementing different distributions in Python\n\n# 1. Normal Distribution in Python\n\nfrom numpy import random\n\nnormaldis = random.normal(loc = 3, scale = 2, size = (1000))\n\n\nsns.distplot(normaldis, hist = True)\nplt.show()","5add6655":"# 2. Bionomial Distribution\n\nsns.distplot(random.binomial(n=10, p=0.5, size=1000), hist=True, kde=True)\n\nplt.show()","c167b460":"# 3. Poisson Distribution\n\nsns.distplot(random.poisson(lam=2, size=1000), kde=True)\n\nplt.show()","0fcdc232":"# 4. Uniform Distribution\n\nsns.distplot(random.uniform(0.1, 10, size=1000), hist=True)\n\nplt.show()","7f94d50d":"# 5. Logistic Distribution\n\nsns.distplot(random.logistic(2, 1, size=1000), hist=False)\n\nplt.show()","0ebd6100":"# 6. Expotential\n\nsns.distplot(random.exponential(size=1000), hist=False)\n\nplt.show()","9b403d35":"# 7. Chi-square distribution\n\nsns.distplot(random.exponential(size=1000), hist=False)\n\nplt.show()","3deed626":"8. Probability Density Function (PDF)\n","0af978ee":"3. Conditional Probability - a measure of calculating a probablity of an event (A) to occur given that another event (B) has already occured.\n\nThe formula for conditional probability is P(A|B) = P(A \u2229 B) \/ P(B)\n\nP(A|B) = probability of A occurring, given B occurs \n\nP(A \u2229 B) = probability of both A and B occurring\n\nP(B) = probability of B occurring","1741cd47":"6. Percentiles\n","9516acc2":"9. Cumulative Distributive Function (CDF)\n","39002081":"7. Probability Mass Function (PMF)\n","3c2c2d4d":"**4. Mean, Median, Mode, Standard Deviation, Variance**\n\n* Mean - mean of a dataset is calculated by adding all the numbers in the dataset and dividing it by the total number of values in that dataset.\n\n* Median - Median is the value at the centre of dataset after arranging it in ascending order.\n\n* Mode - Mode is the value that occurs most often in a dataset.\n\n* Standard Deviation - a quantity that tells amount of variation\/dispersion within a dataset. It gives an idea about how much the items in the dataset differ from the mean of the datset. \n\n* Variance - a qauntity that describes how far the numbers are spread out from their mean.","c3b01eac":"*  P(A): Loan has been approved\n*  P(B): Credit history is good (1)\n*  P(A|B): Getting loan approval provided that credit history is good\n\n**According to the formula,**\n\n* P(A) = 7 + 415 \/ (110 + 415 + 82 + 7) = 0.687296417\n* P(B) = 110 + 415 \/ (110 + 415 + 82 + 7) = 0.85504886\n* P(A \u2229 B) = 415\/(110 + 415 + 82 + 7) = 0.675895765\n* P(A|B) = 0.675895765\/0.85504886 = 0.79047619\n\n**The probability of getting a loan approval, given that the credit history is good  is 79%.**\n\n\n\n\n\n\n\n","d6ba67bd":"1. Statistics and Probability\n\nStatistics -  Provides discription, analysis, interpretation and presentation of data.\n\nProbability - Possibility of an event to occur. \n\n","df810349":"2. Basic Probability\n","56b06a5a":"To understand the concepts of 'Probability and Statistics' for data science I am going to use 'Loan Prediction' dataset.\n"}}