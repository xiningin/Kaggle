{"cell_type":{"59173aee":"code","b2f4c6dd":"code","2e64451d":"code","5c7e3c29":"code","7d027e36":"code","7638202c":"code","51d77e24":"code","9744aff0":"code","6cd5a437":"code","2a78d08f":"code","28583a24":"code","5b2637e6":"code","a620efec":"markdown","873c4077":"markdown","ac9b1b52":"markdown","289609c3":"markdown","c03476e6":"markdown","4184eea4":"markdown"},"source":{"59173aee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\n\nconfirm = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\nrecover = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")\ndefeat = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\n\n# Any results you write to the current directory are saved as output.","b2f4c6dd":"total=pd.DataFrame({'confirmed':[1],'recovered':[1],'death':[1]})\ntotal['death']=defeat.iloc[:,4:].sum().max()\ntotal['confirmed']=confirm.iloc[:,4:].sum().max()\ntotal['recovered']=recover.iloc[:,4:].sum().max()\ntotal.index=[confirm.columns.values[-1]]\ntotal.style.background_gradient(cmap='GnBu')","2e64451d":"plt.bar(total.columns.values,total.values[0])","5c7e3c29":"cases_day=pd.DataFrame({'confirmed':[],'recovered':[],'death':[]})\ncases_day['death']=defeat.iloc[:,4:].sum()\ncases_day['confirmed']=confirm.iloc[:,4:].sum()\ncases_day['recovered']=recover.iloc[:,4:].sum()\n","7d027e36":" confirm_cases=confirm.iloc[:,4:].sum()\ndeath_cases=defeat.iloc[:,4:].sum()\n\nplt.figure(figsize=(20,7))\nplt.scatter(confirm_cases.index,confirm_cases.values)\nplt.plot(confirm_cases.index,confirm_cases.values)\n\nplt.scatter(death_cases.index,death_cases.values)\nplt.plot(death_cases.index,death_cases.values)\n\n\nplt.title('Confirmed Vs Deaths' , size=25)\nplt.xlabel('Date', size=20)\nplt.ylabel('Cases', size=20)\nplt.xticks(rotation=45, size=15)\nplt.yticks(size=15)\n","7638202c":"cases_day.plot(kind='bar',figsize=(20,10))\n\nplt.title('Growth of cases' , size=25)\nplt.xlabel('Date', size=20)\nplt.ylabel('Cases', size=20)\nplt.xticks(rotation=45, size=15)\nplt.yticks(size=15)\nplt.legend(loc = \"upper left\"\n           , frameon = True\n           , fontsize = 15\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1)\n","51d77e24":"cases_day['mortality']=cases_day['death']\/cases_day['confirmed']\ncases_day['mortality'].plot(figsize=(15,7))\n\nplt.title('Growth of mortality rate' , size=25)\nplt.xlabel('Date', size=20)\nplt.ylabel('Mortality Rate', size=20)\nplt.xticks(rotation=45, size=15)\nplt.yticks(size=15)\nplt.legend(loc = \"upper left\"\n           , frameon = True\n           , fontsize = 15\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1)\n\n","9744aff0":"q=defeat.groupby(\"Country\/Region\").sum().iloc[:,3:].max(axis=1)\nr=confirm.groupby(\"Country\/Region\").sum().iloc[:,3:].max(axis=1)\nt=recover.groupby(\"Country\/Region\").sum().iloc[:,3:].max(axis=1)\n\nb=pd.DataFrame({'confirmed':[],'recovered':[],'death':[]})\nb['death']=q\nb['confirmed']=r\nb['recovered']=t","6cd5a437":"b.sort_values(by='death',ascending=False).style.background_gradient(cmap='GnBu')","2a78d08f":"b.sort_values(by= ['death','confirmed'],ascending=False).head(10).plot(kind='bar',figsize=(20,10))\nplt.title('Top 10 affected countries' , size=25)\nplt.xlabel('countries', size=20)\nplt.ylabel('Cases', size=20)\nplt.xticks(rotation=45, size=15)\nplt.yticks(size=15)\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 15\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1)\n","28583a24":"china=pd.DataFrame({'confirmed':[],'recovered':[],'death':[]})\nchina['death']=defeat[defeat['Country\/Region']=='China'].drop(['Country\/Region'],axis=1).groupby('Province\/State').sum().iloc[:,2:].sum(axis=1)\nchina['confirmed']=confirm[confirm['Country\/Region']=='China'].drop(['Country\/Region'],axis=1).groupby('Province\/State').sum().iloc[:,2:].sum(axis=1)\nchina['recovered']=recover[recover['Country\/Region']=='China'].drop(['Country\/Region'],axis=1).groupby('Province\/State').sum().iloc[:,2:].sum(axis=1)\nchina_data=confirm[confirm['Country\/Region']=='China'].drop(['Country\/Region'],axis=1).groupby('Province\/State').sum().iloc[:,2:].sum(axis=1)\n\nchina=china.sort_values(by=['death','confirmed'],).tail(20)","5b2637e6":"\nchina.plot(kind='bar',figsize=(20,10))\nplt.title('Most affected areas' , size=25)\nplt.xlabel('States', size=20)\nplt.ylabel('Cases', size=20)\nplt.xticks(rotation=45, size=15)\nplt.yticks(size=15)\nplt.legend(loc = \"upper left\"\n           , frameon = True\n           , fontsize = 15\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1)","a620efec":"# China\n","873c4077":"Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV).\n\nCoronavirus disease (COVID-19) is a new strain that was discovered in 2019 and has not been previously identified in humans.\n\nCoronaviruses are zoonotic, meaning they are transmitted between animals and people.  Detailed investigations found that SARS-CoV was transmitted from civet cats to humans and MERS-CoV from dromedary camels to humans. Several known coronaviruses are circulating in animals that have not yet infected humans. \n\nWHO link - https:\/\/www.who.int\/health-topics\/coronavirus","ac9b1b52":"# CoronaVirus 2020","289609c3":"# Data Across Countries","c03476e6":"# Mortality among different Age Groups","4184eea4":"source  https:\/\/i.insider.com\/5e67b19a54f25c32e320ef33?width=600&format=jpeg&auto=webp\n\n\n<html><img src='https:\/\/i.insider.com\/5e67b19a54f25c32e320ef33?width=600&format=jpeg&auto=webp'><\/html>"}}