{"cell_type":{"d64f3a74":"code","5d128560":"code","95ddcd02":"code","74433351":"code","70f3c3e9":"code","179397f6":"code","17da98df":"code","f4f8b860":"markdown","4b6cf457":"markdown","0f46186e":"markdown"},"source":{"d64f3a74":"import os\nimport numpy as np\nimport pandas as pd\nfrom PIL import Image\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","5d128560":"train = pd.read_csv('..\/input\/g2net-gravitational-wave-detection\/training_labels.csv')\ntest = pd.read_csv('..\/input\/g2net-gravitational-wave-detection\/sample_submission.csv')\n\ndef get_train_file_path(image_id):\n    return \"..\/input\/g2net-gravitational-wave-detection\/train\/{}\/{}\/{}\/{}.npy\".format(\n        image_id[0], image_id[1], image_id[2], image_id)\n\ndef get_test_file_path(image_id):\n    return \"..\/input\/g2net-gravitational-wave-detection\/test\/{}\/{}\/{}\/{}.npy\".format(\n        image_id[0], image_id[1], image_id[2], image_id)\n\ntrain['file_path'] = train['id'].apply(get_train_file_path)\ntest['file_path'] = test['id'].apply(get_test_file_path)\n\ndisplay(train.head())\ndisplay(test.head())","95ddcd02":"import librosa\nimport librosa.display\n\nfor i in range(1):\n    waves = np.load(test.loc[i, 'file_path']).astype(np.float32) # (3, 4096)\n    melspecs = []\n    for j in range(3):\n        melspec = librosa.feature.melspectrogram(waves[j] \/ max(waves[j]),\n                                                 #sr=4096, n_mels=128, fmin=20, fmax=2048)\n                                                 sr=2048, n_mels=128, fmin=20, fmax=1024)\n        melspec = librosa.power_to_db(melspec)\n        melspec = melspec.transpose((1, 0))\n        melspecs.append(melspec)\n    image = np.vstack(melspecs)\n    plt.imshow(image)","74433351":"OUT_DIR = \"test\/\"\nos.mkdir(OUT_DIR)","70f3c3e9":"def save_images(file_path):\n    file_name = file_path.split('\/')[-1].split('.npy')[0]\n    waves = np.load(file_path).astype(np.float32) # (3, 4096)\n    melspecs = []\n    for j in range(3):\n        melspec = librosa.feature.melspectrogram(waves[j] \/ max(waves[j]),\n                                                 sr=2048, n_mels=128, fmin=20, fmax=1024)\n        melspec = librosa.power_to_db(melspec)\n        melspec = melspec.transpose((1, 0))\n        melspecs.append(melspec)\n    image = np.vstack(melspecs)\n    np.save(OUT_DIR + file_name, image)","179397f6":"import joblib\nfrom tqdm.auto import tqdm\n\n_ = joblib.Parallel(n_jobs=8)(\n    joblib.delayed(save_images)(file_path) for file_path in tqdm(test['file_path'].values)\n)","17da98df":"import shutil\n\nshutil.make_archive(OUT_DIR, 'zip', OUT_DIR)\nshutil.rmtree(OUT_DIR)","f4f8b860":"# Save images","4b6cf457":"# Data Loading","0f46186e":"# Visualize"}}