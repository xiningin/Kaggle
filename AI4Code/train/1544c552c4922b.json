{"cell_type":{"badb090b":"code","e92f055f":"code","6185b82c":"code","4d842c10":"code","c9516cc3":"code","95117e34":"code","c6fa1749":"code","a2a220b2":"code","662cfc50":"code","b78ddc5e":"code","6821a88f":"code","64c6196b":"code","94124b2a":"code","61f3e19f":"code","474886b4":"code","053d9a2c":"code","7b95f96e":"code","8227d077":"code","66b5ba13":"code","cff3b63d":"code","a45a1c22":"code","ec2f0bbc":"code","359a17d0":"code","2bc17ea6":"code","5d256e3f":"markdown","847ee7a4":"markdown","c5260191":"markdown"},"source":{"badb090b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy.stats\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e92f055f":"import matplotlib.pyplot as plt\n\n","6185b82c":"shoe_df = pd.read_csv(\"\/kaggle\/input\/womens-shoes-prices\/7210_1.csv\",low_memory=False)\nshoe_df.head(10)\nshoe_df.columns","4d842c10":"shoe_normal_dist = shoe_df[shoe_df['prices.amountMin'] != shoe_df['prices.amountMax']]\nnike_distr = shoe_normal_dist[shoe_normal_dist['brand']=='Nike']\nnike_distr['avgPrice'] = (nike_distr['prices.amountMin'] + nike_distr['prices.amountMax'])\/2\n","c9516cc3":"x_min = nike_distr['avgPrice'].min()\nx_max = nike_distr['avgPrice'].max()\nnp_arr =  nike_distr['avgPrice'].values\nmean = np.mean(np_arr)\nstd = np.std(np_arr)\nmean\nstd\n","95117e34":"\nx = np.linspace(x_min, x_max, 100)\n\ny = scipy.stats.norm.pdf(x,mean,std)\n\nplt.plot(x,y, color='coral')\n\nplt.grid()\n\nplt.xlim(x_min,x_max)\nplt.ylim(0,0.25)\n\nplt.title('Test for normal distribution graph for Nike',fontsize=10)\n\nplt.xlabel('x')\nplt.ylabel('Normal Distribution')\n\nplt.savefig(\"nike_price_distribution.png\")\nplt.show()","c6fa1749":"shoe_df.rename(columns={\"prices.amountMin\":\"minPrice\",\"prices.amountMax\":\"maxPrice\"},inplace=True)\nbrand_shoe_df = shoe_df[[\"brand\",\"minPrice\",\"maxPrice\"]]\nbrand_shoe_df['brand'] = brand_shoe_df['brand'].str.lower()\nbrand_shoe_df.head()","a2a220b2":"#Check for missing valuesand drop the rows which contains missing values in any one of the columns, as they don't contribute to analysis.\nbrand_shoe_df = brand_shoe_df.dropna(axis=0)\nbrand_shoe_df[brand_shoe_df['brand'].isnull()==True]\nbrand_shoe_df[brand_shoe_df['minPrice'].isnull()==True]\nbrand_shoe_df[brand_shoe_df['maxPrice'].isnull()==True]\n#No missing values noticed","662cfc50":"price_range_df = brand_shoe_df['maxPrice']-brand_shoe_df['minPrice']\nbrand_shoe_df.insert(3,'priceRange',price_range_df,True)\nbrand_shoe_df[brand_shoe_df['maxPrice']-brand_shoe_df['minPrice']== price_range_df.max()]","b78ddc5e":"#Calculate Average Price for each and add it to the data frame\navg_price=(brand_shoe_df[\"minPrice\"]+brand_shoe_df[\"maxPrice\"])\/2\nbrand_shoe_df.insert(4,\"avgPrice\",avg_price,True)","6821a88f":"brand_shoe_df.head()","64c6196b":"#drop minPrice and maxPrice columns as these are further analysis is based on average price and brand\nbrand_shoe_df.drop(columns=[\"minPrice\",\"maxPrice\"],inplace=True)","94124b2a":"brand_shoe_df.head()","61f3e19f":"#Group the column of brand_shoe_df by brand\nbrand_avg = brand_shoe_df.groupby([\"brand\"],as_index=False).mean()\nbrand_avg[brand_avg['brand']=='novica']","474886b4":"#Checking the max scale of avg price\nbrand_avg[brand_avg['avgPrice']==brand_avg['avgPrice'].max()]","053d9a2c":"#Checking the min scale of avg price\nbrand_avg[brand_avg['avgPrice']==brand_avg['avgPrice'].min()]","7b95f96e":"#The above min and max scales conclude that the graph range should be set to the range of (0-3400)\n#Dividing the btand_avg dataframe into bins for better visibility on the graph\nbins = np.linspace(min(brand_avg['avgPrice']),max(brand_avg['avgPrice']),13)\nbin_names=['300_range','600_range','900_range','1200_range','1500_range','1800_range','2100_range','2400_range','2700_range','3000_range','3300_range','3400_range']\nbrand_avg['avgPrice_bin']=pd.cut(brand_avg['avgPrice'],bins,labels=bin_names,include_lowest=True)","8227d077":"brand_avg","66b5ba13":"plt.scatter(brand_avg['avgPrice_bin'], brand_avg['avgPrice'])\nplt.title('Scatter plot pythonspot.com')\nplt.ylabel('Number of brands')\nplt.xlabel('Price ranges')\nplt.show()\n","cff3b63d":"#Grouping the brand_avg by avgPrice_bin and dropping avgPrice as further analysis is based on avg_prce bin and number of brands within that range\nbrand_price_group = brand_avg.groupby(['avgPrice_bin'],as_index=False).count()\nbrand_price_group.drop(['avgPrice'],inplace=True,axis=1)\n","a45a1c22":"brand_price_group","ec2f0bbc":"#Draw pie chart to show the number of brands that fall in a particular range\nvalues=brand_price_group['brand']\nbins = brand_price_group['avgPrice_bin']\ncolors=['#DAF7A6','#F8F482','#F8C282','#82F8F0','#F4B8E1','#FFC300','#525EC5','#FF5733','#DAF7A6','#FFC300','#D8A2D4','#A2D8D8']\npatches, texts = plt.pie(values, startangle=90, radius=1.2,colors=colors)\npercent = 100.*values\/values.sum()\nlabels = ['{0} - {1:1.2f} %'.format(i,j) for i,j in zip(bins, percent)]\nplt.legend(patches,labels , loc='best', bbox_to_anchor=(-0.1, 1.),\n           fontsize=8)\n","359a17d0":"np.count_nonzero(brand_avg.brand.unique())","2bc17ea6":"#Get the average price of all the brands\nbrand_avg.head()","5d256e3f":"Checks whether price of nike follows normal distribution","847ee7a4":"The highest percentage of brands i.e., 94.26% is in the price range of 0 to 300.","c5260191":"Taking the subset of the shoe_df with brand, min-price and max-price in order to analyze the number of brands with in different price ranges and get average price of each brand."}}