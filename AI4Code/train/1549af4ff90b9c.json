{"cell_type":{"e472d842":"code","0492f9f3":"code","d83456b5":"code","334ec7f1":"code","d4a0a8a3":"code","a6f7638c":"code","b742e3f4":"code","c172652e":"code","1541670f":"code","2aa92bc1":"code","d2df4b60":"code","bc4e000a":"code","1ed89896":"code","8ab9f76f":"code","1982fe92":"code","0861688d":"markdown"},"source":{"e472d842":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0492f9f3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt","d83456b5":"# read the data\ndata = pd.read_csv(\"\/kaggle\/input\/tvradionewspaperadvertising\/Advertising.csv\")\ndata.shape, data.head()","334ec7f1":"data.isnull().any()","d4a0a8a3":"# plot TV vs Sales\nsns.lineplot(x='Sales', y='TV', data=data, markers='*')\nsns.lineplot(x='Sales', y='Radio',data=data, markers='+')\nsns.lineplot(x='Sales', y='Newspaper',data=data, markers='-')","a6f7638c":"# plot TV advertosement vers sales\nsns.lineplot(x='TV', y='Sales', data=data, markers=True)","b742e3f4":"# plot Radio advertosement vers sales\nsns.lineplot(x='Radio', y='Sales', data=data, markers=True)","c172652e":"# plot Newspaper advertosement vers sales\nsns.lineplot(x='Newspaper', y='Sales', data=data, markers=True)","1541670f":"# regression model to predict sales based on the advertisements\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import explained_variance_score\nfrom sklearn.model_selection import train_test_split, KFold","2aa92bc1":"xtrain, xtest, ytrain, ytest = train_test_split(data[['TV', 'Radio','Newspaper']], data.Sales, test_size=0.2)","d2df4b60":"model = XGBRegressor(max_depth=8,\n                    n_estimators=200,\n                    learning_rate=0.05)\nmodel.fit(xtrain, ytrain)\ny_pred = model.predict(xtest)","bc4e000a":"explained_variance_score(y_pred=y_pred, y_true=ytest)","1ed89896":"xtest1 = xtest.copy()\nxtest1['y_pred'] = y_pred\nxtest1['y'] = ytest\nxtest1.head()","8ab9f76f":"# k-fold crossvalidation\nkf = KFold(n_splits=5, shuffle=True)\nfeatures = ['TV', 'Radio','Newspaper']\nscore = []\nfor train_ix, test_ix in kf.split(data):\n    # print(train_ix, test_ix)\n    train, test = data.loc[train_ix], data.loc[test_ix]\n    model = XGBRegressor(max_depth=8,\n                    n_estimators=200,\n                    learning_rate=0.1)\n    model.fit(train[features], train.Sales)\n    y_pred = model.predict(test[features])\n    scr = explained_variance_score(y_pred=y_pred, y_true=test.Sales)\n    score.append(scr)\n    print(\"Explained variance score: \", scr)","1982fe92":"# Mean score\nimport numpy as np\nnp.mean(score)","0861688d":"### Regression Model"}}