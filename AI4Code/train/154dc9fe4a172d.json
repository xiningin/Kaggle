{"cell_type":{"21b58965":"code","9e892f47":"code","2e40bf77":"code","fa991691":"code","0fc021d9":"code","2d4af644":"code","4ef8ba47":"code","66a5be85":"code","b6f0a41f":"code","754e3b41":"code","0401bc15":"code","88ddd94d":"code","56294b0c":"code","9c732d02":"code","95120d21":"code","e6d9921a":"code","1be3d346":"code","70e150e2":"code","9484cca5":"code","4cb556d7":"code","490ca947":"code","59f696f7":"code","901a504d":"code","8a066035":"code","9c68a8e3":"code","2cc5ba0d":"code","a92e2cc1":"code","3c38b2bc":"code","fb68aaa5":"code","08dfdd98":"code","70e109d9":"code","5f4f9615":"code","5487aada":"code","cfd198d6":"code","1f0a4792":"code","a9f0cf24":"code","16b8bcc5":"code","d88d91ea":"code","61f43c11":"code","1eec1b9b":"markdown","a17d958a":"markdown","462c9954":"markdown","19e6df1a":"markdown","d8afa519":"markdown","b22250c4":"markdown","3e832d94":"markdown","70def1f6":"markdown","5f4a8cfd":"markdown","292295ce":"markdown","e1ceae24":"markdown","1d619e4a":"markdown","4ada4ca7":"markdown","fe30b722":"markdown","b2e6bbb8":"markdown","fa45d034":"markdown","14fe92b2":"markdown"},"source":{"21b58965":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings \nwarnings.filterwarnings('ignore')\nsns.set_style('darkgrid')\n%matplotlib inline","9e892f47":"!pip install -q pycaret","2e40bf77":"data = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/Car details v3.csv')\ndata.sample(5)","fa991691":"data.info()","0fc021d9":"sns.violinplot(x = 'selling_price', data = data)\nplt.show()","2d4af644":"plt.figure(figsize= (15,5))\nsns.histplot(x = 'selling_price', kde = True, data = data)","4ef8ba47":"sns.boxplot(x= 'transmission' , y= 'selling_price', data = data)","66a5be85":"sns.boxplot(x= 'fuel' , y= 'selling_price', data = data)","b6f0a41f":"plt.figure(figsize = (10,5))\nsns.boxplot(x= 'owner' , y= 'selling_price', data = data)","754e3b41":"plt.figure(figsize = (10,5))\nsns.boxplot(x= 'seats' , y= 'selling_price', data = data)","0401bc15":"sns.scatterplot(x= 'year' , y= 'selling_price', data = data)","88ddd94d":"sns.scatterplot(x= 'km_driven' , y= 'selling_price', data = data)","56294b0c":"data['car_name'] = data['name'].apply(lambda x: x.split(' ')[0])","9c732d02":"plt.figure(figsize = (24,7))\nsns.boxplot(x= 'car_name' , y= 'selling_price', data = data)","95120d21":"sns.boxplot(x= 'seller_type' , y= 'selling_price', data = data)","e6d9921a":"plt.figure(figsize = (24,7))\nsns.countplot(x= 'car_name' ,hue= 'transmission', data = data)","1be3d346":"data = data.dropna(axis = 0).reset_index(drop = True)","70e150e2":"data['engine'] = data['engine'].apply(lambda x: x.split(' ')[0]).astype(np.float)\ndata['max_power'] = data['max_power'].apply(lambda x: x.split(' ')[0]).astype(np.float)","9484cca5":"temp = data.dropna(axis = 0)\ntemp['mileage_unit_type'] = temp['mileage'].apply(lambda x: x.split(' ')[1])","4cb556d7":"sns.countplot(x = 'mileage_unit_type', hue = 'fuel',data = temp)","490ca947":"data = data.drop(['name','torque','mileage'], axis =1)","59f696f7":"data.sample(10)","901a504d":"one_hot_encode = ['fuel']\nlabel_encode = ['seller_type','owner', 'car_name']\nmappings = [{'Individual': 0, 'Dealer': 1, 'Trustmark Dealer': 2},\n            {'First Owner': 3,'Second Owner': 2,'Third Owner': 1,'Fourth & Above Owner': 0,'Test Drive Car': 4},\n            {'Opel': 0,'Daewoo': 1,'Ambassador': 2,'Chevrolet': 3,'Ashok': 4,'Datsun': 5,'Fiat': 6,'Tata': 7,'Maruti': 8,'Renault': 9,'Nissan': 10,'Hyundai': 11,'Volkswagen': 12,'Ford': 13,'Honda': 14,'Skoda': 15,'Mahindra': 16,'Mitsubishi': 17,'Force': 18,'Toyota': 19,'Kia': 20,'MG': 21,'Isuzu': 22,'Jeep': 23,'Mercedes-Benz': 24,'Audi': 25,'Jaguar': 26,'Volvo': 27,'Land': 28,'BMW': 29,'Lexus': 30}\n           ]\n","8a066035":"def one_hot_encoding(one_hot_encode, df):\n    df = df.copy()\n    for col in one_hot_encode:\n        temp = pd.get_dummies(data[col], prefix = str(col))\n        df = pd.concat([df.drop(col, axis =1), temp], axis = 1)\n    return df\ndata = one_hot_encoding(one_hot_encode, data)\n\ndef label_encoding(label_encode,mappings, df):\n    df = df.copy()\n    for i in range(len(label_encode)):\n        mapping = mappings[i]\n        col = label_encode[i]\n        df[col] = df[col].map(mapping) \n    return df\ndata = label_encoding(label_encode,mappings, data)\n\ndata['transmission'] = data['transmission'].map({'Manual':0,'Automatic':1})","9c68a8e3":"data.sample(10)","2cc5ba0d":"plt.figure(figsize=(14,12))\nsns.heatmap(data.corr(), data = data, center=0,annot = True ,cmap='RdBu_r') ","a92e2cc1":"sns.regplot(x= 'max_power', y='engine', data = data, line_kws ={'color':'black'})","3c38b2bc":"X = data.drop('selling_price', axis = 1)\ny = data['selling_price']","fb68aaa5":"from sklearn.preprocessing import StandardScaler,RobustScaler\nsc = RobustScaler()\nX_scaled = pd.DataFrame(sc.fit_transform(X), columns = [X.columns])","08dfdd98":"from sklearn.model_selection import train_test_split\nX_train ,X_test ,y_train, y_test = train_test_split(X_scaled, y, test_size = 0.2, random_state = 0)","70e109d9":"from pycaret.regression import setup, compare_models, create_model, tune_model, predict_model","5f4f9615":"_ = setup(data = pd.concat([X_train, y_train], axis =1), target = 'selling_price', silent = True)","5487aada":"compare_models()","cfd198d6":"catboost = create_model('catboost')","1f0a4792":"y_pred = predict_model(catboost, data = X_test)['Label'].iloc[:,0]","a9f0cf24":"from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error\n\nmae = mean_absolute_error(y_test, y_pred)\nrmse = np.sqrt(mean_squared_error(y_test, y_pred))\nr2= r2_score(y_test,y_pred)\nadj_r2 = 1 - (((1-r2)*(X_test.shape[0]-1))\/(X_test.shape[0]- X_test.shape[1]-1))\n\nprint('MAE : {:.4f}'.format(mae))\nprint('RMSE : {:.4f}'.format(rmse))\nprint('R2 Score : {:.4f}'.format(r2))\nprint('Adj R2 Score : {:.4f}'.format(adj_r2))","16b8bcc5":"sns.displot(y_test - y_pred, kde = True)","d88d91ea":"plt.figure(figsize = (25,10))\nsns.lineplot(x = y_test.reset_index(drop = True).index,y = abs(y_pred - y_test).reset_index(drop = True))","61f43c11":"plt.figure(figsize = (25,10))\nsns.scatterplot(x = y_pred.reset_index(drop = True).index,y = y_pred.reset_index(drop = True))\nsns.scatterplot(x = y_test.reset_index(drop = True).index,y = y_test.reset_index(drop = True))\nplt.show()","1eec1b9b":"#### Understanding correlations between feature after preprocessing.","a17d958a":"#### Feature splitting for more analysis (taking 'brand' from Car Name)","462c9954":"### Feature Engineering","19e6df1a":"### Model Selection and Training","d8afa519":"#### Dropping Mileage because of different non-comparable units (kmpl (fuels in liquid state) and km\/kg (fuels in gaseous state)).","b22250c4":"### Results","3e832d94":"#### Converting engine and Max Power to numerical (continous) data. ","70def1f6":"#### Install PyCaret for model Training and other useful functionality like compare models.","5f4a8cfd":"#### Removing missing values from the dataset","292295ce":"#### Feature Encoding.","e1ceae24":"#### Analysing Mileage","1d619e4a":"#### Exploring data w.r.t car_brand","4ada4ca7":"### Installing modules","fe30b722":"### Import and Looking data","b2e6bbb8":"### TASK: To predict car's price from its specifications using Machine Learning.","fa45d034":"#### Feature Scaling","14fe92b2":"### Performing EDA on Dataset"}}