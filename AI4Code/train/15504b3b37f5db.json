{"cell_type":{"83efbfa3":"code","f346daa0":"code","a76e0a83":"code","b11f3a03":"code","c50dad50":"code","0d8384e1":"code","bd5a215a":"code","da2fed7f":"code","a76cc79a":"code","a21a0080":"code","72d88421":"code","3f2a0d27":"code","b5b5ca98":"code","4d56ead5":"code","e6296c23":"code","2cfad101":"markdown","fafb3a8a":"markdown","344fec77":"markdown","071eb398":"markdown","c9db1568":"markdown","626c8b5d":"markdown","856c7df1":"markdown","39adaeaf":"markdown"},"source":{"83efbfa3":"#!pip install seaborn","f346daa0":"import numpy as np\nimport pickle\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","a76e0a83":"import kaggle_environments\nprint(kaggle_environments.__file__)","b11f3a03":"obs = {'step': ''}\nfield_size_a = 7\nfield_size_b = 11","c50dad50":"# env.run([agent, 'submission.py', agent , agent]) # W, B, G, R\n# my geese in this file dump is second, blue\nif obs['step'] == 50: # 51-th turn\n    pickle.dump(obs, file=open('obs' + str(obs['step']) + '.dat', 'wb'))\n    print('obs' + str(obs['step']))","0d8384e1":"obs = pickle.load(open(\"..\/input\/hungry-geese-observation-file-dump-example\/obs50.dat\", \"rb\"))\nobs","bd5a215a":"env = kaggle_environments.make(\"hungry_geese\", debug=False)\nenv.state[0].observation = obs\nenv.render(mode=\"ipython\", width=800, height=700)","da2fed7f":"field = np.ones(field_size_a * field_size_b) * 4 # empty field\nfor geese in range(len(obs['geese'])):    \n    for cell in range(len(obs['geese'][geese])):\n        if cell == len(obs['geese'][geese])-1:\n            field[obs['geese'][geese][cell]] = geese + 0.2 # indexed geese tail\n        elif cell == 0:\n            field[obs['geese'][geese][cell]] = geese - 0.2 # indexed geese head\n        else:\n            field[obs['geese'][geese][cell]] = geese # indexed geese body","a76cc79a":"field_reshaped = field.reshape(7, 11)\nfig = plt.figure()\nheat_map = sns.heatmap(field_reshaped, annot=True, cmap=\"pink\", cbar = False)\nfig = heat_map.get_figure()","a21a0080":"i, j = np.where(field_reshaped == obs['index'] - 0.2)\nprint('my head:', i[0], 'x', j[0], '#', field_reshaped[i[0],j[0]])","72d88421":"# concatenate 3x7\nx = 7\ny = 11\naugmented_field = np.concatenate([field for _ in range(3)]).reshape(x*3, y)\naugmented_field_a = augmented_field.reshape(x*3, y)","3f2a0d27":"# show 3x7 augmented field\nfig = plt.figure(figsize = (y\/2, x*3\/2))\nheat_map = sns.heatmap(augmented_field_a, annot=True, cmap=\"pink\", cbar = False)\nfig = heat_map.get_figure()","b5b5ca98":"# concatenate 3x11 field\naugmented_field_b = np.concatenate([augmented_field_a for _ in range(3)], axis = 1)","4d56ead5":"# show 3x7, 3x11 augmented field\nfig = plt.figure(figsize = (y*3\/2, x*3\/2))\nheat_map = sns.heatmap(augmented_field_b, annot=True, cmap=\"pink\", cbar = False)\nfig = heat_map.get_figure()","e6296c23":"i, j = np.where(augmented_field_b == obs['index'] - 0.2)\nprint('my heads:')\nprint(i)\nprint(j)\nprint('\\nmy head centered:')\nprint(i[4], 'x', j[4], '#', field_reshaped[i[0],j[0]])","2cfad101":"### Show field","fafb3a8a":"### Load your obs","344fec77":"### Augmented head location","071eb398":"### My head location","c9db1568":"### Paste this code inside agent:","626c8b5d":"### Render field","856c7df1":"### Reshape field","39adaeaf":"### Augmented field 3x3"}}