{"cell_type":{"c5c630d4":"code","4658f1ff":"code","5a1a6fe4":"code","7c16865d":"code","cf13b430":"code","d4fc68d7":"code","315a5132":"code","bc9e2baa":"code","636e9ea3":"code","bce621b1":"code","de465af5":"code","74894ecf":"code","a66b0d92":"code","01f31c5b":"code","e5fbf598":"code","3ec5dc18":"markdown","8f43166a":"markdown","3396ab3a":"markdown","cde613a0":"markdown","f5d464d8":"markdown","7e9d9b2e":"markdown","fefa076b":"markdown","2e391161":"markdown","9068cad9":"markdown","162675eb":"markdown","ca5a1860":"markdown","d6e2a6d6":"markdown","09c950db":"markdown","c450608c":"markdown","fa89169a":"markdown","33e3677b":"markdown","896dacf8":"markdown","3ed834ce":"markdown"},"source":{"c5c630d4":"import math\nimport pandas as pd\nimport geopandas as gpd\n#from geopandas.tools import geocode            # What you'd normally run\nfrom learntools.geospatial.tools import geocode # Just for this exercise\n\nimport folium \nfrom folium import Marker\nfrom folium.plugins import MarkerCluster\n\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.geospatial.ex4 import *","4658f1ff":"def embed_map(m, file_name):\n    from IPython.display import IFrame\n    m.save(file_name)\n    return IFrame(file_name, width='100%', height='500px')","5a1a6fe4":"# Load and preview Starbucks locations in California\nstarbucks = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/starbucks_locations.csv\")\nstarbucks.head()","7c16865d":"# How many rows in each column have missing values?\nprint(starbucks.isnull().sum())\n\n# View rows with missing locations\nrows_with_missing = starbucks[starbucks[\"City\"]==\"Berkeley\"]\nrows_with_missing","cf13b430":"# Your code here\ndef my_geocoder(row):\n    point = geocode(row, provider='nominatim').geometry[0]\n    return pd.Series({'Longitude': point.x, 'Latitude': point.y})\n\nberkeley_locations = rows_with_missing.apply(lambda x: my_geocoder(x['Address']), axis=1)\nstarbucks.update(berkeley_locations)\n# Check your answer\nq_1.check()","d4fc68d7":"# Create a base map\nm_2 = folium.Map(location=[37.88,-122.26], zoom_start=13)\n\n# Your code here: Add a marker for each Berkeley location\n\nfor idx, row in starbucks[starbucks[\"City\"]=='Berkeley'].iterrows():\n    Marker([row['Latitude'], row['Longitude']]).add_to(m_2)\n# Uncomment to see a hint\n#q_2.a.hint()\nm_2\n# Show the map\n#embed_map(m_2, 'q_2.html')","315a5132":"CA_counties = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/CA_county_boundaries\/CA_county_boundaries\/CA_county_boundaries.shp\")\nCA_counties.head()","bc9e2baa":"CA_pop = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_population.csv\", index_col=\"GEOID\")\nCA_high_earners = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_high_earners.csv\", index_col=\"GEOID\")\nCA_median_age = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_median_age.csv\", index_col=\"GEOID\")\nCA_pop.head()\nCA_high_earners.head()\nCA_median_age.head()\nCA_counties.head()","636e9ea3":"\n\ncols_to_add = CA_pop.join([CA_high_earners, CA_median_age]).reset_index()\nCA_stats = CA_counties.merge(cols_to_add, on=\"GEOID\")","bce621b1":"# Lines below will give you a hint or solution code\n#q_3.hint()\nq_3.check()","de465af5":"\nCA_stats[\"density\"] = CA_stats[\"population\"] \/ CA_stats[\"area_sqkm\"]\n\nCA_stats.head()","74894ecf":"# Your code here\nsel_counties =CA_stats.loc[(CA_stats.density >285 ) & (CA_stats.median_age < 38.5)& (CA_stats.high_earners > 100000) & \n                          ((CA_stats.density >1400 ) | (CA_stats.median_age < 35.5)| (CA_stats.high_earners > 500000))]\nsel_counties.head()\n# Check your answer\nq_4.check()","a66b0d92":"starbucks_gdf = gpd.GeoDataFrame(starbucks, geometry=gpd.points_from_xy(starbucks.Longitude, starbucks.Latitude))\nstarbucks_gdf.crs = {'init': 'epsg:4326'}\nstarbucks_gdf.head()","01f31c5b":"# Fill in your answer\nlocation_of_interst= gpd.sjoin(starbucks_gdf,sel_counties)\nnum_stores = len(location_of_interst)\nprint(num_stores)\n# Check your answer\nq_5.check()","e5fbf598":"# Create a base map\nm_6 = folium.Map(location=[37,-120], zoom_start=7)\n\n# Your code here: show selected store locations\n\n\nmc = MarkerCluster()\nfor idx, row in location_of_interst.iterrows():\n    \n    mc.add_child(Marker([row['Latitude'], row['Longitude']]))\nm_6.add_child(mc)\n\n# Uncomment to see a hint\n#q_6.hint()\n\nm_6","3ec5dc18":"Most of the stores have known (latitude, longitude) locations.  But, all of the locations in the city of Berkeley are missing.","8f43166a":"# Keep going\n\nLearn about how **[proximity analysis](https:\/\/www.kaggle.com\/alexisbcook\/proximity-analysis)** can help you to understand the relationships between points on a map.","3396ab3a":"---\n**[Geospatial Analysis Home Page](https:\/\/www.kaggle.com\/learn\/geospatial-analysis)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161464) to chat with other Learners.*","cde613a0":"### 4) Which counties look promising?\n\nCollapsing all of the information into a single GeoDataFrame also makes it much easier to select counties that meet specific criteria.\n\nUse the next code cell to create a GeoDataFrame `sel_counties` that contains a subset of the rows (and all of the columns) from the `CA_stats` GeoDataFrame.  In particular, you should select counties where:\n- there are at least 100,000 households making \\$150,000 per year,\n- the median age is less than 38.5, and\n- the density of inhabitants is at least 285 (per square kilometer).\n\nAdditionally, selected counties should satisfy at least one of the following criteria:\n- there are at least 500,000 households making \\$150,000 per year,\n- the median age is less than 35.5, or\n- the density of inhabitants is at least 1400 (per square kilometer).","f5d464d8":"### 3) Consolidate your data.\n\nRun the code below to load a GeoDataFrame `CA_counties` containing the name, area (in square kilometers), and a unique id (in the \"GEOID\" column) for each county in the state of California.  The \"geometry\" column contains a polygon with county boundaries.","7e9d9b2e":"# Exercises\n\n### 1) Geocode the missing locations.\n\nRun the next code cell to create a DataFrame `starbucks` containing Starbucks locations in the state of California.","fefa076b":"### 5) How many stores did you identify?\n\nWhen looking for the next Starbucks Reserve Roastery location, you'd like to consider all of the stores within the counties that you selected.  So, how many stores are within the selected counties?\n\nTo prepare to answer this question, run the next code cell to create a GeoDataFrame `starbucks_gdf` with all of the starbucks locations.","2e391161":"### 2) View Berkeley locations.\n\nLet's take a look at the locations you just found.  Visualize the (latitude, longitude) locations in Berkeley in the OpenStreetMap style. ","9068cad9":"Now that we have all of the data in one place, it's much easier to calculate statistics that use a combination of columns.  Run the next code cell to create a \"density\" column with the population density.","162675eb":"# Introduction\n\nYou are a Starbucks big data analyst ([that\u2019s a real job!](https:\/\/www.forbes.com\/sites\/bernardmarr\/2018\/05\/28\/starbucks-using-big-data-analytics-and-artificial-intelligence-to-boost-performance\/#130c7d765cdc)) looking to find the next store into a [Starbucks Reserve Roastery](https:\/\/www.businessinsider.com\/starbucks-reserve-roastery-compared-regular-starbucks-2018-12#also-on-the-first-floor-was-the-main-coffee-bar-five-hourglass-like-units-hold-the-freshly-roasted-coffee-beans-that-are-used-in-each-order-the-selection-rotates-seasonally-5).  These roasteries are much larger than a typical Starbucks store and have several additional features, including various food and wine options, along with upscale lounge areas.  You'll investigate the demographics of various counties in the state of California, to determine potentially suitable locations.\n\n<center>\n<img src=\"https:\/\/i.imgur.com\/BIyE6kR.png\" width=\"450\"><br\/><br\/>\n<\/center>\n\nBefore you get started, run the code cell below to set everything up.","ca5a1860":"Use the code cell below to fill in these values with the OpenStreetMap Nominatim geocoder.\n\nNote that in the tutorial, we used `geocode()` (from `geopandas.tools`) to geocode values, and this is what you can use in your own projects outside of this micro-course.  \n\nIn this exercise, you will use a slightly different function `geocode()` (from `learntools.geospatial.tools`).  This function was imported at the top of the notebook and works identically to the function from GeoPandas.\n\nSo, in other words, as long as: \n- you don't change the import statements at the top of the notebook, and \n- you call the geocoding function as `geocode()` in the code cell below, \n\nyour code will work as intended!","d6e2a6d6":"Use the next code cell to join the `CA_counties` GeoDataFrame with `CA_pop`, `CA_high_earners`, and `CA_median_age`.\n\nName the resultant GeoDataFrame `CA_stats`, and make sure it has 8 columns: \"GEOID\", \"name\", \"area_sqkm\", \"geometry\", \"population\", \"high_earners\", and \"median_age\".  Also, make sure the CRS is set to `{'init': 'epsg:4326'}`.","09c950db":"### 6) Visualize the store locations.\n\nCreate a map that shows the locations of the stores that you identified in the previous question.","c450608c":"Considering only the five locations in Berkeley, how many of the (latitude, longitude) locations seem potentially correct (are located in the correct city)?","fa89169a":"Next, we create three DataFrames:\n- `CA_pop` contains an estimate of the population of each county.\n- `CA_high_earners` contains the number of households with an income of at least $150,000 per year.\n- `CA_median_age` contains the median age for each county.","33e3677b":"**[Geospatial Analysis Home Page](https:\/\/www.kaggle.com\/learn\/geospatial-analysis)**\n\n---\n","896dacf8":"You'll use the `embed_map()` function from the previous exercise to visualize your maps.","3ed834ce":"So, how many stores are in the counties you selected?"}}