{"cell_type":{"b345e5c8":"code","34433972":"code","f5dbc972":"code","bbd4e076":"code","a37181b8":"code","a49c0969":"code","aaf707a1":"code","de7b44d0":"code","c5a5ed9f":"code","8502cbcf":"code","c495ca6a":"code","155198a4":"code","4d648751":"code","a314bf7e":"code","0c39cb58":"code","ca397569":"code","e5f5cfd1":"code","2502c1c1":"code","42f91650":"code","8ebf1f16":"code","502d1ba6":"code","0ef3826f":"code","46974814":"code","a7988b76":"code","a988a468":"code","00be7cf3":"code","79387f92":"code","3b8d5c14":"code","7e1e560b":"code","2a859313":"code","74ef2c23":"code","9c01ea77":"code","29d87a70":"code","34b3ffa8":"code","2da56f30":"code","0a070e12":"code","9e0db0cc":"code","3ec6f9a5":"code","3848ef49":"code","9fcb2767":"code","6a472aaf":"code","b59d0c7f":"code","43d7d30a":"code","f0be2632":"code","276c4d2e":"code","dd6f0818":"code","026bad7b":"code","7b79ccb4":"code","3129fa72":"code","40dd44a7":"code","881fec61":"code","ef27bc2c":"code","16275dcd":"code","8e133784":"code","a5baeed8":"code","e4ed50fd":"code","e00d1eb7":"code","b8357eca":"code","4b2d0614":"code","421098fb":"code","4a7ba7f3":"code","58a36531":"code","c9e4b98b":"code","ff7a31ed":"code","659efbd1":"code","1eaea5ef":"code","22b1a4f1":"code","f558ace0":"markdown","94368640":"markdown","40a48eea":"markdown","bc34dfb7":"markdown","9bbc3093":"markdown","f627b4da":"markdown"},"source":{"b345e5c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34433972":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport skimage\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nimport keras\n%matplotlib inline","f5dbc972":"data = pd.read_csv(r'..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","bbd4e076":"data.head()","a37181b8":"data.info()","a49c0969":"data.describe()","aaf707a1":"col = ['r','c']\nsns.countplot(x=data['gender'], palette=col)","de7b44d0":"col=['c','g']\nsns.countplot(x=data['stroke'], palette=col)","c5a5ed9f":"cmap = sns.diverging_palette(300,150,s=50,l=75,n=9)\ncorrmat = data.corr()\nplt.subplots(figsize=(18,18))\nsns.heatmap(corrmat, cmap=cmap, annot=True, square=True)","8502cbcf":"col=['c','g']\nsns.countplot(x=data['ever_married'], palette=col)","c495ca6a":"col=['c','g','b','r']\nsns.countplot(x=data['smoking_status'], palette=col)","155198a4":"col=['c','g','r','b']\nsns.countplot(x=data['work_type'], palette=col)","4d648751":"col=['c','g']\nsns.countplot(x=data['Residence_type'], palette=col)","a314bf7e":"from sklearn.preprocessing import LabelEncoder \n  \nle = LabelEncoder() \n  \ndata['gender']= le.fit_transform(data['gender'])\ndata['Residence_type']=le.fit_transform(data['Residence_type'])\ndata['ever_married']= le.fit_transform(data['ever_married'])\n","0c39cb58":"data.head()","ca397569":"data.tail(10)","e5f5cfd1":"plt.figure(figsize=(18,18))\ndays = sns.countplot(x=data['smoking_status'],data=data,hue='stroke',palette=col)\ndays.set_title('stroke per week')","2502c1c1":"plt.figure(figsize=(28,18))\ndays = sns.countplot(x=data['age'],data=data,hue='stroke',palette=col)\ndays.set_title('stroke per week')","42f91650":"data.head()","8ebf1f16":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndata.work_type = le.fit_transform(data.work_type)\ndata.smoking_status = le.fit_transform(data.smoking_status)\ndata.head()","502d1ba6":"data = data.drop(['id','work_type','Residence_type'],axis=1)","0ef3826f":"print(type(data))","46974814":"data.head()","a7988b76":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer","a988a468":"ct = ColumnTransformer(transformers=[('ohe',OneHotEncoder(),[7])],remainder='passthrough')","00be7cf3":"data2=ct.fit_transform(data)","79387f92":"data2","3b8d5c14":"data2=pd.DataFrame(data2)","7e1e560b":"data2","2a859313":"import statistics\nx = statistics.median(data2[10])","74ef2c23":"x","9c01ea77":"data2 = data2.fillna(x)","29d87a70":"data2.head(10)","34b3ffa8":"X = data2.drop(11,axis=1)","2da56f30":"print(X)","0a070e12":"y = data2[11]","9e0db0cc":"y","3ec6f9a5":"X = pd.DataFrame(X)","3848ef49":"X","9fcb2767":"y = pd.DataFrame(y)\ny","6a472aaf":" from sklearn.preprocessing import StandardScaler","b59d0c7f":"s_scaler = StandardScaler()","43d7d30a":"X = pd.DataFrame(X)\nX.head()","f0be2632":"data.head()","276c4d2e":"X.head()","dd6f0818":"X = s_scaler.fit_transform(X)","026bad7b":"X = pd.DataFrame(X)","7b79ccb4":"X  = s_scaler.fit_transform(X)\nX = pd.DataFrame(X)","3129fa72":"X.describe().T","40dd44a7":"X.info()","881fec61":"y.info()","ef27bc2c":"colors = ['#774571','#b398af','#f1f1f1','#afada7','#6daa9f']\nplt.figure(figsize=(20,10))\nsns.boxenplot(data=X,palette=colors)\nplt.xticks(rotation=90)\nplt.show()","16275dcd":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","8e133784":"X_train","a5baeed8":"y_train","e4ed50fd":"X_test","e00d1eb7":"y_test","b8357eca":"X","4b2d0614":"y","421098fb":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Conv2D, MaxPooling2D, Flatten\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.metrics import categorical_crossentropy\nfrom tensorflow.keras.metrics import binary_accuracy\nmodel = Sequential()","4a7ba7f3":"model.add(Dense(units=11,kernel_initializer='uniform',activation='relu',input_dim=11))\nmodel.add(Dense(units=11,kernel_initializer='uniform',activation='relu'))\nmodel.add(Dense(units=9,kernel_initializer='uniform',activation='relu'))\nmodel.add(Dense(units=7,kernel_initializer='uniform',activation='relu'))\nmodel.add(Dense(units=5,kernel_initializer='uniform',activation='relu'))\nmodel.add(Dense(units=1,kernel_initializer='uniform',activation='relu'))\n","58a36531":"model.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])","c9e4b98b":"history = model.fit(X_train, y_train, batch_size=10,epochs=250,validation_split=0.2)","ff7a31ed":"val_accuracy = np.mean(history.history['val_accuracy'])\nprint('\\n%s : %.2f%%' %('val_Accuracy',val_accuracy*100))","659efbd1":"y_pred = model.predict(X_test)\ny_pred = (y_pred > 0.5)\nnp.set_printoptions()","1eaea5ef":"from sklearn.metrics import confusion_matrix,precision_score,recall_score,classification_report,accuracy_score,f1_score\n#cmap1 = sns.diverging_palette(275,150,s=40,l=65,n=6)\n#plt.subplots(figsize=(12,8))\ncf_matrix = confusion_matrix(y_test,y_pred)\n#sns.heatmap(cf_matrix\/np.sum(cf_matrix),cmap=cmap1,annot=True,annot_kws={'size':15})\nprint(classification_report(y_test,y_pred))","22b1a4f1":"pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv').to_csv('my_output.csv')","f558ace0":"## Train ANN model","94368640":"## Conlusion","40a48eea":"## Model Building","bc34dfb7":"## data to be use for prediction and training are :- age, gender, heart_disease, avg_glucose, bmi, smoking_status","9bbc3093":"## Compiling","f627b4da":"# Converting smoking_type into binary variables"}}