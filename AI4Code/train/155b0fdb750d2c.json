{"cell_type":{"a9e12bab":"code","de0835f1":"code","88e83b8c":"code","6673f663":"code","436286ed":"code","dbf56a4f":"code","14348941":"code","ca338895":"code","29fd7553":"code","dc9a80d7":"code","38774962":"code","e7c9d89f":"code","18617573":"code","16f19afa":"code","950dd6dc":"code","e760da3c":"code","934ec966":"code","dce397fc":"code","6404c042":"code","4d49dd1a":"markdown","16128173":"markdown","24aa1bb0":"markdown","75b983e2":"markdown","99491ed3":"markdown","1d5f2efd":"markdown"},"source":{"a9e12bab":"import numpy as np\nimport pandas as pd\n\nimport math\nimport os\nimport re\nimport string\nimport random\nimport urllib3.request\nimport zipfile\nimport requests\n\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import RegexpTokenizer\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","de0835f1":"# Plato - Republic\nrep = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/150\/pg150.txt')\nbeg = rep.text.find('BOOK I')\nend = rep.text.find('End of the Project Gutenberg EBook')\nbook1 = rep.text[beg:end]","88e83b8c":"# Machiavelli - The Prince\nprc = requests.get('https:\/\/www.gutenberg.org\/files\/1232\/1232-0.txt')\nbeg = prc.text.find('DEDICATION\\r\\n\\r\\n\\r\\nTo the Magnificent')\nend = prc.text.find('*** END OF THE PROJECT GUTENBERG')\nbook2 = prc.text[beg:end]","6673f663":"# Hobbes - The Leviathan\nlvt = requests.get('https:\/\/www.gutenberg.org\/files\/3207\/3207-0.txt')\nbeg = lvt.text.find('Nature (the art whereby God hath made and governes the world)')\nend = lvt.text.find('FINIS')\nbook3 = lvt.text[beg:end]","436286ed":"# Locke - 2nd Treatise\nsecond = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/7370\/pg7370.txt')\nbeg = second.text.find('PREFACE')\nend = second.text.find('FINIS.')\nbook4 = second.text[beg:end]","dbf56a4f":"# Lao - Tao\ntao = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/216\/pg216.txt')\nbeg = tao.text.find('PART 1.')\nend = tao.text.find('End of the Project Gutenberg EBook')\nbook5 = tao.text[beg:end]","14348941":"# Rousseau - Contract\nsoc = requests.get('https:\/\/www.gutenberg.org\/files\/46333\/46333-0.txt')\nbeg = soc.text.find('This little treatise')\nend = soc.text.find('***END OF THE PROJECT GUTENBERG EBOOK')\nbook6 = soc.text[beg:end]","ca338895":"# Burke - Thoughts on the Present Discontents\ntpd = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/2173\/pg2173.txt')\nbeg = tpd.text.find('It is an undertaking of some degree of delicacy')\nend = tpd.text.find('***END OF THE PROJECT GUTENBERG EBOOK')\nbook7 = tpd.text[beg:end]","29fd7553":"# Du Bois - Souls of Black Folk\nsbf = requests.get('https:\/\/www.gutenberg.org\/files\/408\/408-0.txt')\nbeg = sbf.text.find('Herein lie buried many things')\nend = sbf.text.find('*** END OF THE PROJECT GUTENBERG EBOOK')\nbook8 = sbf.text[beg:end]","dc9a80d7":"# Marx - Communist Manifesto\ncmf = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/61\/pg61.txt')\nbeg = cmf.text.find('A spectre is haunting Europe')\nend = cmf.text.find('End of the Project Gutenberg')\nbook9 = cmf.text[beg:end]","38774962":"# Bakunin - God State\ngdst = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/36568\/pg36568.txt')\nbeg = gdst.text.find('Who are right, the idealists or the materialists?')\nend = gdst.text.find('THE ONLY ANARCHIST MONTHLY')\nbook10 = gdst.text[beg:end]","e7c9d89f":"# Proudhon - Property\nprop = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/360\/pg360.txt')\nbeg = prop.text.find('The following letter served as a preface')\nend = prop.text.find('End of the Project Gutenberg EBook')\nbook11 = prop.text[beg:end]","18617573":"# Kropotkin - The Conquest of Bread\nkrop = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/23428\/pg23428.txt')\nbeg = krop.text.find('One of the current objections to Communism, and')\nend = krop.text.find('End of Project Gutenberg')\nbook12 = krop.text[beg:end]","16f19afa":"# Goldman - Anarchism and Other Essays\ngold = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/2162\/pg2162.txt')\nbeg = gold.text.find('Some twenty-one years ago I heard the first great Anarchist')\nend = gold.text.find('End of Project Gutenberg')\nbook13 = gold.text[beg:end]","950dd6dc":"# Smith - Wealth\nswt = requests.get('https:\/\/www.gutenberg.org\/cache\/epub\/38194\/pg38194.txt')\nbeg = swt.text.find('The annual labour of every nation is the fund which originally supplies')\nend = swt.text.find('STEREOTYPED.')\nbook14 = swt.text[beg:end]","e760da3c":"titles = ['The Republic', 'The Prince', 'The Leviathan', \n          'Second Treatise of Government', 'Tao Te Ching', \n          'The Social Contract', 'Thoughts on the Present Discontents',\n         'The Souls of Black Folk', 'The Communist Manifesto', \n          'God and the State', 'What is Property? An Inquiry into the Principle of Right and of Government',\n         'The Conquest of Bread', 'Anarchism and Other Essays',\n         'An Inquiry Into the Nature and Causes of the Wealth of Nations']\n\nauthors = ['Plato', 'Niccol\u00f2 Machiavelli', 'Thomas Hobbes', \n           'John Locke', 'Lao Tzu', 'Jean-Jacques Rousseau',\n          'Edmund Burke', 'W. E. B. Du Bois', ['Karl Marx','Friedrich Engels'],\n          'Mikhail Aleksandrovich Bakunin', 'P. J. Proudhon', 'Peter Kropotkin',\n          'Emma Goldman', 'Adam Smith']\n\npublish_dates = [-375, 1532, 1651, 1689, \n                 -400, 1762, 1770, 1903,\n                 1848, 1882, 1840, 1892, \n                 1910, 1776]\n\ntexts = [book1,book2,book3, book4, \n         book5,book6, book7, book8, \n         book9, book10, book11, book12,\n         book13, book14]","934ec966":"#Utitlity functions for removing ASCII characters, converting lower case, removing stop words, html and punctuation from description\ndef _removeNonAscii(s):\n    return \"\".join(i for i in s if  ord(i)<128)\n\ndef make_lower_case(text):\n    return text.lower()\n\ndef remove_stop_words(text):\n    text = text.split()\n    stops = set(stopwords.words(\"english\"))\n    text = [w for w in text if not w in stops]\n    text = \" \".join(text)\n    return text\n\ndef remove_html(text):\n    html_pattern = re.compile('<.*?>')\n    return html_pattern.sub(r'', text)\n\ndef remove_punctuation(text):\n    tokenizer = RegexpTokenizer(r'\\w+')\n    text = tokenizer.tokenize(text)\n    text = \" \".join(text)\n    return text","dce397fc":"books_dict = {'book_title': titles,\n              'publishing_date': publish_dates,\n              'authors': authors,\n              'text': texts}\ndf = pd.DataFrame.from_dict(data=books_dict, orient='columns')\ndf['text_clean'] = df['text'].astype(str)\ndf['text_clean'] = df['text_clean'].apply(_removeNonAscii)\ndf['text_clean'] = df['text_clean'].apply(func = make_lower_case)\ndf['text_clean'] = df['text_clean'].apply(func = remove_stop_words)\ndf['text_clean'] = df['text_clean'].apply(func=remove_punctuation)\ndf['text_clean'] = df['text_clean'].apply(func=remove_html)","6404c042":"df.to_csv('political_thought_works_corpus.csv', header=True)","4d49dd1a":"# Saving to csv file","16128173":"# Importing the necessary Libraries","24aa1bb0":"# Utility Functions","75b983e2":"# Web Scrapping the texts from Project Gutenberg","99491ed3":"# Creating the lists with the necessary information to tabulate","1d5f2efd":"# Creating a dataframe"}}