{"cell_type":{"ac6f28f7":"code","c7e28d9e":"code","3c57eb7f":"code","b388671c":"code","f7aa18c1":"code","1d5e727e":"code","b031d3bf":"code","72c79958":"code","66b85b6c":"code","d2b80946":"code","bc4db622":"code","4f74ec08":"code","6d8c6b09":"code","6e59477e":"code","e148858b":"code","16399181":"code","963ebaca":"markdown","4149f540":"markdown","9bdf1072":"markdown","e7c933e4":"markdown","b1d8f96a":"markdown","3be6ccda":"markdown","fa8b4029":"markdown","868da320":"markdown","2fcc332c":"markdown","7b0cb1c5":"markdown","53e42937":"markdown","0406eab4":"markdown","cdee46e3":"markdown"},"source":{"ac6f28f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7e28d9e":"df = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\ndf.head()","3c57eb7f":"df.shape","b388671c":"df.info()","f7aa18c1":"df.isnull().sum()","1d5e727e":"df_setosa = df.loc[df['Species']=='Iris-setosa']\ndf_virginica = df.loc[df['Species']=='Iris-virginica']\ndf_versicolor = df.loc[df['Species']=='Iris-versicolor']","b031d3bf":"plt.plot(df_setosa['SepalLengthCm'], np.zeros_like(df_setosa['SepalLengthCm']),'bo')\nplt.plot(df_versicolor['SepalLengthCm'], np.zeros_like(df_versicolor['SepalLengthCm']),'ro')\nplt.plot(df_virginica['SepalLengthCm'], np.zeros_like(df_virginica['SepalLengthCm']),'go')\nplt.show()","72c79958":"sns.FacetGrid(df, hue='Species', size = 7).map(plt.scatter, 'PetalLengthCm', 'SepalLengthCm').add_legend()\nplt.show()","66b85b6c":"sns.pairplot(df, hue='Species', size=5)","d2b80946":"import sklearn","bc4db622":"from sklearn.model_selection import train_test_split","4f74ec08":"x=df.drop(['Species'], axis=1)\ny=df['Species']","6d8c6b09":"x_train, x_test, y_train, y_test= train_test_split(x, y, test_size=0.66, random_state=1,stratify=y)","6e59477e":"from sklearn.neighbors import KNeighborsClassifier\n# Create KNN classifier\nknn = KNeighborsClassifier(n_neighbors = 3)\n# Fit the classifier to the data\nknn.fit(x_train,y_train)","e148858b":"#show first 5 model predictions on the test data\nknn.predict(x_test)[0:5]","16399181":"#check accuracy of our model on the test data\nknn.score(x_test, y_test)","963ebaca":"This dataset is entirely cleaned.","4149f540":"# Model Selection and Model Training","9bdf1072":"* Multivariate analysis","e7c933e4":"**Hence our model performs well with an accuracy of 96.967%**","b1d8f96a":"**Multivariate analysis (MVA) is based on the principles of multivariate statistics, which involves observation and analysis of more than one statistical outcome variable at a time. Typically, MVA is used to address the situations where multiple measurements are made on each experimental unit and the relations among these measurements and their structures are important.**","3be6ccda":"****Univariate analysis is perhaps the simplest form of statistical analysis.The key fact is that only one variable is involved.****","fa8b4029":"**Multivariate Analysis gives a proper vision about which graphs we can use for proper distinguishing between the species. For example, the scatter plot we have plotted against \"PetalWidthCm\" & \"SepalWidthCm\" distinguishes between the species to a great extent. Hence these two labels can be used for classification and we will be obtaining a considerable high accuracy.**","868da320":"**Bivariate analysis is the simultaneous analysis of two variables (attributes). It explores the concept of relationship between two variables, whether there exists an association and the strength of this association, or whether there are differences between two variables and the significance of these differences.**","2fcc332c":"* Bivariate Analysis","7b0cb1c5":"* Univariate Analysis","53e42937":"**Clearly, the graph contains a lot of overlappings. Hence univariate analysis will be not much helpful for distinguishing the species properly**","0406eab4":"# KNN","cdee46e3":"# Data Visualization"}}