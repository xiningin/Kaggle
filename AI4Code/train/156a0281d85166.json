{"cell_type":{"91960402":"code","bb7f7f7c":"code","97730db1":"code","c0f0b7a4":"code","66c0e78a":"code","e43cb963":"code","5c2b8420":"markdown","d4d318a9":"markdown","11d45a51":"markdown","b4c035e0":"markdown","1e06509e":"markdown","cdb86bee":"markdown"},"source":{"91960402":"import numpy as np\nfrom matplotlib import pyplot as plt","bb7f7f7c":"w=np.array([-2.5,1.75])\nx1=np.array([1,1])\nx2=np.array([-0.5,1])\nx3=np.array([3,1])\nx4=np.array([-2,1])\nd1=1\nd2=-1\nd3=1\nd4=-1\niter=0\ne=1\nc=0.5\nk=[]\nk.append(w)","97730db1":"while(e!=0):\n    o=np.sign(np.dot(w,x1))\n    e1=d1-o\n    w=w+c*e1*x1\n    print('w1=',w)\n    k.append(w)\n    o=np.sign(np.dot(w,x2))\n    e2=d2-o\n    w=w+c*e2*x2\n    print('w2=',w) \n    k.append(w)\n    o=np.sign(np.dot(w,x3))\n    e3=d3-o\n    w=w+c*e3*x3\n    print('w3=',w)\n    k.append(w)\n    o=np.sign(np.dot(w,x4))\n    e4=d4-o\n    w=w+c*e4*x4\n    print('w4=',w)\n    k.append(w)\n    e=abs(e1)+abs(e2)+abs(e3)","c0f0b7a4":"print('updated iteration=',w)","66c0e78a":"a1=np.zeros(17)\na2=np.zeros(17)\nfor i in range(17):\n    a1[i]=k[i][0]\n    a2[i]=k[i][1]  \no1=np.array([0,0])\nclass1x = [-5,5]\nclass1y = [5,-5]\nclass2x = [-5,5]\nclass2y = [-3,3]\nclass3x = [2,-2]\nclass3y = [-5,5]\nclass4x = [-3,3]\nclass4y = [-5,5]","e43cb963":"plt.figure(figsize=(9, 9))\nplt.plot(a1,a2)    \no1=np.array([0,0])\nplt.plot(o1,x1)\nplt.plot(class1x,class1y,'g-')\nplt.plot(class2x,class2y, 'r-')\nplt.plot(class3x,class3y, 'g-')\nplt.plot(class4x,class4y, 'r-')\nplt.grid(True)\nplt.xlabel('W1')\nplt.ylabel('W2')\nplt.title('Graphical Representaion of Perceptron Learning Rule')\nplt.annotate('Class1(WY1)', xy=(-4, 1), xytext=(-4, 4)\n             )\nplt.annotate('Class1(WY3)', xy=(-1.5, 1), xytext=(-1.5, 4)\n             )\nplt.annotate('Class2(WY2)', xy=(-4, 1), xytext=(-5, -2)\n             )\nplt.annotate('Class2(WY4)', xy=(-1.5, 1), xytext=(-1.5, -3)\n             )\nplt.annotate('W0', xy=(-4, 1), xytext=(-2.5, 2)\n             )\nplt.annotate('W1', xy=(-1.5, 1), xytext=(-1.5, 3)\n             )\nplt.annotate('W2', xy=(-4, 1), xytext=(-1, 2)\n             )\nplt.annotate('W3', xy=(-1.5, 1), xytext=(2, 3)\n             )\nplt.annotate('W4', xy=(-1.5, 1), xytext=(3, 1)\n             )\nplt.show()\n\n","5c2b8420":"# 2. Running the Algorithm while the error becomes Zero.","d4d318a9":"# 3. Printing Weights after iterations. ","11d45a51":"# 5. Annotations and Final Output","b4c035e0":"# 1. Initializing Weights, Input Layer, Desired Output and Error. ","1e06509e":"## Submitted by **Siddhesh Mukesh Mahajan**\n*A27      _          2017BEC047*","cdb86bee":"# 4. Preparing entities to be plotted"}}