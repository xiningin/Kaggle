{"cell_type":{"b4c9a923":"code","038e29ac":"code","2efd6827":"code","60fa0088":"code","c5c2cf90":"code","051386e2":"code","4c312f8f":"code","c8ea6f4c":"code","df27bfab":"code","1fc0a48a":"code","f3797919":"code","1ca5376d":"code","dd6b8e7f":"code","0e64381a":"code","b2c24528":"code","c3fb4b35":"code","0517d904":"code","8e4d5d18":"markdown","b652a946":"markdown","74cb08ec":"markdown","3593f946":"markdown","a23d6984":"markdown","0787956c":"markdown","e6c98bb8":"markdown","e0db5f11":"markdown","f9e96098":"markdown","d21ba1cd":"markdown","2faa6fd2":"markdown","449eb5d3":"markdown","c54c2bba":"markdown","b98dba10":"markdown","84774364":"markdown","9eef30c6":"markdown"},"source":{"b4c9a923":"from sklearn.datasets import load_iris\niris_dataset = load_iris()\n\n# Have a look at the keys in the dataset\nprint(\"Keys of iris_dataset: \\n{}\".format(iris_dataset.keys()))","038e29ac":"print(iris_dataset['DESCR'][:193] + \"\\n...\")","2efd6827":"print(\"Target names: {}\".format(iris_dataset['target_names']))\n","60fa0088":"print(\"Feature names: {}\".format(iris_dataset['feature_names']))","c5c2cf90":"print('Type of Data: {}'.format(type(iris_dataset['data'])))","051386e2":"print(\"Shape of Data: {}\".format(iris_dataset['data'].shape))","4c312f8f":"print(\"First Five columns of the data: \\n{}\".format(iris_dataset['data'][:5]))","c8ea6f4c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\niris_dataset['data'], iris_dataset['target'], random_state=0)","df27bfab":"print(\"X_train shape: {}\".format(X_train.shape))\nprint(\"y_train shape: {}\".format(y_train.shape))","1fc0a48a":"import pandas as pd\n%matplotlib inline\nimport mglearn\n\n# create dataframe from data in X_train\n# label the columns using the strings in iris_dataset.feature_names\niris_dataframe = pd.DataFrame(X_train, columns=iris_dataset.feature_names)\n# create a scatter matrix from the dataframe, color by y_train\ngrr = pd.scatter_matrix(iris_dataframe, c=y_train, figsize=(15, 15), marker='o',\nhist_kwds={'bins': 20}, s=60, alpha=.8, cmap=mglearn.cm3)","f3797919":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)","1ca5376d":"knn.fit(X_train, y_train)","dd6b8e7f":"import numpy as np\nX_new = np.array([[2, 4.0, 4, 0.2]])\nprint(\"X_new.shape: {}\".format(X_new.shape))","0e64381a":"prediction = knn.predict(X_new)\nprint(\"Prediction: {}\".format(prediction))\nprint(\"Predicted target name: {}\".format(\niris_dataset['target_names'][prediction]))","b2c24528":"y_pred = knn.predict(X_test)\nprint(\"Test set predictions:\\n {}\".format(y_pred))","c3fb4b35":"print(\"Test set score: {:.2f}\".format(np.mean(y_pred == y_test)))","0517d904":"print(\"Test set score: {:.2f}\".format(knn.score(X_test, y_test)))","8e4d5d18":"The data itself is contained in the target and data fields. data contains the numeric\nmeasurements of sepal length, sepal width, petal length, and petal width in a NumPy\narray:","b652a946":"We can find the shape  of the data","74cb08ec":"This means the model made prediction for 97% right","3593f946":"The output of the ``train_test_split`` function is ``X_train``, ``X_test``, ``y_train``, and\n``y_test``, which are all NumPy arrays. X_train contains 75% of the rows of the dataset,\nand X_test contains the remaining 25%:\n\nWe can now view the shape of both *train* and *test* data","a23d6984":"## Building a Model\n To  built a model,import classfier classes from Scikit learn ","0787956c":"Use the value DESCR to get a short description of the dataset ","e6c98bb8":"## Training and Testing Data \nImport ``Scikit-learn`` library to split train and test data","e0db5f11":"## Evaluate the model \nWe want to find out the accuracy of our model when it comes  to predicting","f9e96098":"Have a look to the features inside the dataset","d21ba1cd":"Then fit data into your model","2faa6fd2":"Load the iris data set ","449eb5d3":"## Making predition \nFirst make an array to hold your arguments","c54c2bba":"We can now view the the target_value for the iris dataset","b98dba10":"We can now call our ``predict`` method to make the prediction which will tell us which species our array lies on","84774364":"## Visualize our data ","9eef30c6":"Take a look at the data"}}