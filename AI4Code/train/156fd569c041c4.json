{"cell_type":{"57edffcb":"code","611a687b":"code","e3f19925":"code","a1e696fe":"code","c2ed5b90":"code","970e4a00":"code","d83b4c0b":"code","ec0722cd":"code","d51cba7e":"code","02d77c45":"code","42eebeb4":"code","171da4c3":"code","5e7ec05c":"code","97aca99f":"code","38273a0e":"code","bd95cc7d":"code","17f604ca":"code","77e120b9":"code","12b7ec47":"code","614b59e5":"code","11a66d50":"code","cacdc38c":"code","9a5335e3":"code","32f02827":"markdown","0bc04c69":"markdown","0f7decb4":"markdown","15e24069":"markdown","37de1d1f":"markdown","3f3b2cc2":"markdown","66434901":"markdown","04ef87b0":"markdown"},"source":{"57edffcb":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nfrom sklearn.ensemble import RandomForestClassifier\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom sklearn.metrics import classification_report","611a687b":"def string_remover(df,list1=[],drop=[]):\n    a = df.select_dtypes(include='object')\n    for i in a.columns:\n        for x in a.index:\n            try:\n                c = list1.index(a[i].iloc[x:x+1][x])\n                a[i].iloc[x:x+1][x] = c\n            except:\n                list1.append(a[i].iloc[x:x+1][x])\n                a[i].iloc[x:x+1][x] = len(list1)-1\n    a.fillna(len(list1))\n    d = df.select_dtypes(exclude='object').fillna(0)\n    try:\n        return pd.concat([d,a],axis=1).fillna(0).drop([drop],axis=1)\n    except:\n        return pd.concat([d,a],axis=1).fillna(0)","e3f19925":"df_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')","a1e696fe":"df_train","c2ed5b90":"sns.heatmap(df_train.isnull(),cmap='viridis')","970e4a00":"df_train.drop(['Cabin','Fare','Parch','Ticket','Name'],axis=1,inplace = True)","d83b4c0b":"df_test.drop(['Cabin','Fare','Parch','Ticket','Name'],axis=1,inplace = True)","ec0722cd":"df_test.fillna(35,inplace=True)","d51cba7e":"df_train.fillna(35,inplace=True)","02d77c45":"sns.heatmap(df_train.isnull(),cmap = 'viridis')","42eebeb4":"train = string_remover(df_train)","171da4c3":"test = string_remover(df_test)","5e7ec05c":"sns.heatmap(df_test.isnull(),cmap = 'viridis')","97aca99f":"train = train.drop(['PassengerId'],axis=1)\ntest = test.drop(['PassengerId'],axis=1)","38273a0e":"\nmodel = Sequential()\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\n\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='rmsprop',loss='mse')","bd95cc7d":"model.fit(train.drop(['Survived'],axis=1),train['Survived'],epochs=200)","17f604ca":"pred = model.predict_classes(test)","77e120b9":"idpred = []\nfor i in range(len(pred)):\n    idpred.append(pred[i][0])","12b7ec47":"p = pd.Series(idpred)","614b59e5":"submit = pd.concat([df_test['PassengerId'],p],axis=1)","11a66d50":"submit.rename(columns={0:'Survived'},inplace = True)","cacdc38c":"submit.to_csv('Submission.csv',index=False)","9a5335e3":"submit","32f02827":"<html>\n    <h1><i><font face='Courier' size = 10>The Model<\/font><\/i><\/h1>","0bc04c69":"<html>\n    <h1><i><font face='Courier'>We are droping Passenger ID because it isn't needed now\n        <br> and droping C because it isn't in test so not needed <\/font><\/i><\/h1><br>","0f7decb4":"<html>\n    <h1><i><font face='Courier'>The Cabin , Name or Ticket are not  Important to us<\/font><\/i><\/h1>","15e24069":"<html>\n    <h1><i><font face='Courier' size = 10>Prediction<\/font><\/i><\/h1>","37de1d1f":"<html>\n    <h1><i><font face='Courier' size = 10>Importing Data and Data Cleaning<\/font><\/i><\/h1>","3f3b2cc2":"<html>\n    <h1><i><font face='Courier' size = 10>Importing Libraries<\/font><\/i><\/h1>","66434901":"<html>\n    <h1 align='center'><b>\n    <img src='https:\/\/media3.giphy.com\/media\/KAq5w47R9rmTuvWOWa\/giphy.gif' width=100 height=100>\n    <font color='sky blue' face='lucida handwriting'size=300>Py<\/font><font color='yellow' face='lucida handwriting' size=300>Tech<\/font><\/b><\/h1>\n   \n<\/html>","04ef87b0":"<html>\n    <h1><i><font face='Courier'>Now we Fill the Null with avg age<\/font><\/i><\/h1>"}}