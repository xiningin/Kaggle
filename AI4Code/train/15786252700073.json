{"cell_type":{"07e265ff":"code","d642d507":"code","43cba5e2":"code","1479eb12":"code","63c31376":"code","40fc1c20":"code","e6ee8d5f":"code","736e5f7e":"code","4ff89bb3":"markdown","59af6470":"markdown","c5133347":"markdown","920582c9":"markdown","4d8ac6f5":"markdown"},"source":{"07e265ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import tree\nimport seaborn as sns\nfrom sklearn import neighbors, model_selection,metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d642d507":"inputPath = \"\/kaggle\/input\/prostate-cancer\/Prostate_Cancer.csv\"\ndf = pd.read_csv(inputPath)\n#Deleting the unique column\ndel df['id']\n#First 10 Records\ndf.head(10)","43cba5e2":"# 2. What types of crimes are most common?\nOFFENSE_CODE_GROUP = df['diagnosis_result'].value_counts(sort = True)\nplt.figure(figsize=(20,10))\nsns.barplot(OFFENSE_CODE_GROUP.index, OFFENSE_CODE_GROUP.values, alpha=0.8)\nplt.title('Diagnosis Result of The People who Have Cancer', fontsize=30)\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Diagnosis Result', fontsize=12)\nplt.show()","1479eb12":"# 2. What types of crimes are most common?\nOFFENSE_CODE_GROUP = df['perimeter'].value_counts(sort = True)\nplt.figure(figsize=(20,10))\nsns.barplot(OFFENSE_CODE_GROUP.index, OFFENSE_CODE_GROUP.values, alpha=0.8)\nplt.title('Number of Occurrences vs Number of Occurence', fontsize=30)\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Perimeter', fontsize=12)\nplt.show()","63c31376":"#Making and Splitting The Training and Test Data\ndf['compactness'].fillna(df['compactness'].mean(),inplace=True)\ndf['fractal_dimension'].fillna(df['fractal_dimension'].mean(),inplace=True)\nX = np.c_[df['radius'], df['texture'], df['perimeter'], df['area'], df['smoothness'], df['compactness'], df['symmetry'], df['fractal_dimension']]\ny = df['diagnosis_result']\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.3, random_state=0, stratify = y)\n","40fc1c20":"#Using KNN For Prediction\nn_neighbors = 15\nkNeighborsClassifier = neighbors.KNeighborsClassifier(n_neighbors)\nkNeighborsClassifier.fit(X_train, y_train)\ncancerPrediction = kNeighborsClassifier.predict(X_test)\n# How did our model perform?\ncount_misclassified = (y_test != cancerPrediction).sum()\nprint('kNeighborsClassifier Misclassified samples: {}'.format(count_misclassified))\naccuracy = metrics.accuracy_score(y_test, cancerPrediction)\nprint('kNeighborsClassifier Accuracy: {:.2f}'.format(accuracy))","e6ee8d5f":"#Using Decision Tree For Prediction\ndecisionTreeClassifier = tree.DecisionTreeClassifier()\ndecisionTreeClassifier.fit(X_train, y_train)\ncancerPrediction = decisionTreeClassifier.predict(X_test)\n# How did our model perform?\ncount_misclassified = (y_test != cancerPrediction).sum()\nprint('DecisionTreeClassifier Misclassified samples: {}'.format(count_misclassified))\naccuracy = metrics.accuracy_score(y_test, cancerPrediction)\nprint('DecisionTreeClassifier Accuracy: {:.2f}'.format(accuracy))","736e5f7e":"#Using Gauian Naive Bayes For Prediction\nnaiveBayesClassifier = GaussianNB()\nnaiveBayesClassifier.fit(X_train, y_train)\ncancerPrediction = naiveBayesClassifier.predict(X_test)\n# How did our model perform?\ncount_misclassified = (y_test != cancerPrediction).sum()\nprint('NaiveBayesClassifier Misclassified samples: {}'.format(count_misclassified))\naccuracy = metrics.accuracy_score(y_test, cancerPrediction)\nprint('NaiveBayesClassifier Accuracy: {:.2f}'.format(accuracy))","4ff89bb3":"**Diagnosis Result Chart**","59af6470":"**k-Neighbors-Classifier**","c5133347":"**Reading File and Deleting the Unique Columns**","920582c9":"**Decision Tree Classifier**","4d8ac6f5":"**Introduction**\n\nThis EDA looks at the Prostate Cancer data. I use seaborn for plotting.Prostate cancer is cancer that occurs in the prostate \u2014 a small walnut-shaped gland in men that produces the seminal fluid that nourishes and transports sperm.Usually prostate cancer grows slowly and is initially confined to the prostate gland, where it may not cause serious harm. However, while some types of prostate cancer grow slowly and may need minimal or even no treatment, other types are aggressive and can spread quickly.\n\n**Symptoms**\n\nProstate cancer may cause no signs or symptoms in its early stages.\n\nProstate cancer that's more advanced may cause signs and symptoms such as:\n\n* Trouble urinating\n* Decreased force in the stream of urine\n* Blood in semen\n* Discomfort in the pelvic area\n* Bone pain\n* Erectile dysfunction\n\n\n"}}