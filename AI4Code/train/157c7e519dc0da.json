{"cell_type":{"bd1af2ec":"code","db39f52d":"code","e795326a":"code","2042b1d0":"code","7e2b431e":"code","f7a5266e":"code","f9052f72":"code","067649a9":"code","61721088":"code","958b997d":"code","34966f3c":"code","59d3f568":"code","b0c7399c":"markdown","40d47f3f":"markdown","fca8df3b":"markdown","e7c6d929":"markdown","1ba22768":"markdown","1ba6247e":"markdown","3f09091f":"markdown","fd9b3c7b":"markdown","8cdd1aa6":"markdown"},"source":{"bd1af2ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib notebook\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","db39f52d":"from keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Activation, Conv2D,  MaxPool2D, Flatten\nfrom keras.utils import to_categorical\n\nfrom sklearn.model_selection import train_test_split","e795326a":"use_complete_dataset = False  # Use the total dataset, or just a sample of it for quick runs.\n\nif use_complete_dataset:\n    train_data = pd.read_csv(\"..\/input\/train.csv\")\n    test_data = pd.read_csv(\"..\/input\/test.csv\")\nelse:\n    train_data = pd.read_csv(\"..\/input\/train.csv\", nrows=10000)\n    test_data = pd.read_csv(\"..\/input\/test.csv\")\n    \n# Perform quick sanity check\ntrain_data.head(5)","2042b1d0":"x = train_data.iloc[:,1:].values.astype(\"float32\")\ny = train_data.iloc[:,0].values.astype(\"int32\")\n\nx_test = test_data.values.astype(\"float32\")","7e2b431e":"image_size = 28\nnum_classes = 10\nmax_value = 255.0\n\n# Rescale the pixel values to the range [0:1]\nx = x\/max_value\nx_test = x_test\/max_value\n\n# Reshape the images (to match the Keras format)\nx = x.reshape(x.shape[0], image_size, image_size, 1)\nx_test = x_test.reshape(x_test.shape[0], image_size, image_size, 1)\n\n# Convert the labels to categorical (for the keras classifier)\ny = to_categorical(y, num_classes= num_classes)\n\n# Plot the images as sanity check\nplt.figure()\nplt.imshow(x[0,:,:,0])\nplt.figure()\nplt.imshow(x_test[0,:,:,0])","f7a5266e":"x_train, x_validation, y_train, y_validation = train_test_split(x, y, test_size = 0.2) ","f9052f72":"model = Sequential()\nmodel.add(Conv2D(64, kernel_size=(3,3), activation = \"relu\", data_format = \"channels_last\" ,input_shape=(image_size, image_size, 1)))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Conv2D(128, kernel_size=(2,2), activation = \"relu\"))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation=\"relu\"))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(num_classes, activation=\"softmax\"))\n\nmodel.summary()","067649a9":"model.compile(loss = \"categorical_crossentropy\", optimizer = \"adam\", metrics = [\"accuracy\"])","61721088":"model.fit(x_train, y_train, batch_size = 32, epochs= 10)","958b997d":"model.evaluate(x_validation,y_validation, batch_size=32)","34966f3c":"labels_predicted = np.argmax(model.predict(x_test, batch_size=32), axis=1)\n\n# Write the output file\npredicted_data = pd.DataFrame({'ImageId':np.arange(1,labels_predicted.size +1 ),'Label':labels_predicted})\npredicted_data.to_csv(\"mnist_submission_matgarate.csv\", index=False)","59d3f568":"# Check the predictions for one of the images\ni = 15\nprint(\"Label Predicted:  \"  + str(int(labels_predicted[i])))\nplt.figure()\nplt.title(\"Number\")\nplt.imshow(x_test[i].reshape(28,28))","b0c7399c":"# Test notebook to learn the basics of neural networks in Keras","40d47f3f":"## Split the data into the training and test sets","fca8df3b":"## Fit the Network","e7c6d929":"## Split the labels from the pixels","1ba22768":"## Import Keras","1ba6247e":"## Get predictions from the test data","3f09091f":"## Read the data","fd9b3c7b":"## Build and Compile the Neural Network","8cdd1aa6":"## Preprocess the data"}}