{"cell_type":{"b3249ae0":"code","65eedea8":"code","746f2af6":"code","4f87e02e":"code","56a723ae":"code","ba7e3d48":"code","7d3c715d":"code","f9f8bfd5":"code","b8b23964":"code","e4f369a8":"code","ccb518a5":"code","0fbb84e8":"code","b83c26a2":"code","d4b1d930":"code","a38a00c8":"code","63a53653":"code","db8a2282":"code","86a18ac9":"code","6ff49219":"code","7cb8cd96":"code","f6fdf074":"code","6b6d2c79":"code","e2f31dd8":"code","7af94b48":"code","44eb437b":"code","1ad45c6c":"code","51961b63":"code","7437d241":"code","74b39a07":"code","e1f6aef9":"code","4e3d4800":"code","9b4618b3":"code","07563871":"code","887f6485":"code","c5374890":"code","09d1be63":"code","4b5d2ae1":"code","4f67bf44":"code","da57050e":"code","79643c33":"code","48304d8f":"code","846f7d95":"code","eb3914cd":"code","fb0f4ea2":"code","d94b7ee0":"code","3134ce8a":"code","ecdc5b11":"markdown","4e45b73d":"markdown","c7104fea":"markdown","f37fddf9":"markdown","1ce7cc9b":"markdown","e545605f":"markdown","564823bd":"markdown","7a493b3c":"markdown","7520c5ef":"markdown","ad559253":"markdown","6c18544d":"markdown","3166af61":"markdown","5b1a0573":"markdown","eda5f780":"markdown","76a63368":"markdown","04ad7a3e":"markdown","f064ffb2":"markdown","5dd3468c":"markdown","0ac6e046":"markdown","c624eb33":"markdown","73b07a86":"markdown","adc9f5fd":"markdown","a8ee5280":"markdown","70502ed2":"markdown","74463847":"markdown","9220086a":"markdown","5ad4b66e":"markdown","261ac63a":"markdown","63ec4048":"markdown","ba9d3d38":"markdown","e36b4089":"markdown","f4273868":"markdown","393f2b2a":"markdown","7d13ad97":"markdown","5e00fa10":"markdown","d72ce0da":"markdown","0cc485d6":"markdown","e818c7c3":"markdown","2cbb47cc":"markdown","71550179":"markdown","23d7e380":"markdown","8353f40e":"markdown","4b77b967":"markdown","9a2fa391":"markdown","8380caad":"markdown"},"source":{"b3249ae0":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n#just in case i need to visualize missing values\nimport missingno as msno\nimport seaborn as sns","65eedea8":"pd.options.display.width = None\npd.options.display.max_columns = None\n\ndailyActivity = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv')\ndailyCalories = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv')\n\nminuteSleep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/minuteSleep_merged.csv')\ndailySteps = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailySteps_merged.csv')\nheartrateSeconds = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/heartrate_seconds_merged.csv')\nhourlyCalories = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyCalories_merged.csv')\n\nhourlyIntensities = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyIntensities_merged.csv')\nhourlySteps = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv')\nsleepDay = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv')\nstepsDf = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv')\nweightLog = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/weightLogInfo_merged.csv')","746f2af6":"hourlySteps.head()","4f87e02e":"hourlyIntensities.head()","56a723ae":"heartrateSeconds.head()","ba7e3d48":"dailySteps.head()","7d3c715d":"dailyCalories.head()","f9f8bfd5":"# sleepDay.shape (413, 5)\nsleepDay.head()","b8b23964":"minuteSleep.head()","e4f369a8":"dailyActivity.head()","ccb518a5":"stepsDf.head()","0fbb84e8":"hourlyCalories.head()","b83c26a2":"weightLog.head()","d4b1d930":"dailyActivity.head()","a38a00c8":"dailyActivity.head()","63a53653":"#convert to datetime\ndailyActivity['ActivityDate'] = pd.to_datetime(dailyActivity['ActivityDate'])\n\n# add a new column that indicates the day's name\ndailyActivity['day_name'] = dailyActivity['ActivityDate'].dt.day_name()\n\n# add a new column that indicates weekday\/weekend\ndailyActivity['weekend_weekday'] = np.where(dailyActivity['ActivityDate'].dt.dayofweek > 4, 'Weekend', 'Weekday')\n","db8a2282":"# steps taken summary\nprint(\"Total Steps Summary\")\nsteps = dailyActivity['TotalSteps'].describe()\nprint(steps)\nprint('\\n')\n\n# byMinutes summary\nminutes = dailyActivity[['VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes', 'SedentaryMinutes']].describe()\nprint(minutes)\nprint('\\n')\n\n# Calories and total distance burned summary\ncalories = dailyActivity[['Calories', 'TotalDistance']].describe()\nprint(calories)\nprint('\\n')\n\n#Sleep Records, weight, and bmi\nprint(sleepDay[['TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']].describe())\nprint('\\n')\nprint(weightLog[['BMI', 'WeightKg']].describe())","86a18ac9":"byMinute = dailyActivity.pivot_table(\n    values = ['VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes', 'SedentaryMinutes'],\n    index = 'day_name'\n)\n\nbyMinute\n","6ff49219":"byDistance = dailyActivity.pivot_table(\n    values = ['VeryActiveDistance', 'ModeratelyActiveDistance', 'LightActiveDistance', 'SedentaryActiveDistance'],\n    index = 'day_name'\n)\n\nbyDistance","7cb8cd96":"byMinute.plot(kind = 'bar', figsize = [17,7])","f6fdf074":"byDistance.plot(kind = 'bar', figsize = [17,7])","6b6d2c79":"print('The Most Active Based on the Type of Activity (Fairly, Lightly, etc)')\nprint(byMinute.idxmax())\nprint('\\n')\nprint('The Least Active Based on the Type of Activity (Fairly, Lightly, etc)')\nprint(byMinute.idxmin())","e2f31dd8":"print('The Most Active Based On Distance')\nprint(byDistance.idxmax())\nprint('\\n')\nprint('The Least Active Based On Distance')\nprint(byDistance.idxmin())","7af94b48":"caloriesGrouped = dailyActivity.pivot_table(\n    values = 'Calories',\n    index = 'day_name'\n)\n\ncaloriesGrouped","44eb437b":"fig_dims = (15, 10)\nfig, ax = plt.subplots(figsize=fig_dims)\n\nsns.set_style(\"darkgrid\")\nreg = sns.regplot(\n    data = dailyActivity,\n    x = 'TotalSteps',\n    y = 'Calories',\n    ax = ax,\n    color = 'blue'\n)\n\nreg.set_title('Relationship Between Total Steps Taken and Calories Burned')\n","1ad45c6c":"# Ensuring proper formatting and creating a new column in order to assist in the joining process\nsleepDay['SleepDay'] = pd.to_datetime(sleepDay['SleepDay'])\nsleepDay['date'] = pd.to_datetime(sleepDay['SleepDay'])\ndailyActivity['date'] = pd.to_datetime(dailyActivity['ActivityDate'])\n\n# sleepDay[['TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']]\n\n#join sleep data with daily activity\njoinedDf = dailyActivity.merge(sleepDay, on = ['Id', 'date'])","51961b63":"joinedDf.head()","7437d241":"dailyActivity.groupby('weekend_weekday')['Calories'].describe()","74b39a07":"joinedDf.groupby('weekend_weekday')[['TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']].describe()","e1f6aef9":"sleep = sns.relplot(\n    data = joinedDf, \n    x = 'TotalMinutesAsleep',\n    y = 'TotalTimeInBed',\n    col = 'weekend_weekday',\n    hue = 'TotalSleepRecords',\n    height = 7\n)\n\nsleep.fig.suptitle('Total Minutes Asleep Vs Total Time in Bed',  y = 1.03)\nsleep.set_titles(\"Week: {col_name}\")\nplt.show()","4e3d4800":"# convert to proper minutes\nsleepDay['TotalMinutesAsleep'] = pd.to_timedelta(sleepDay['TotalMinutesAsleep'], unit = 'm')\nsleepDay['TotalMinutesAsleep'] = sleepDay['TotalMinutesAsleep'].astype('timedelta64[m]')\n\n#convert to hours\nsleepDay['TotalHoursAsleep'] = sleepDay['TotalMinutesAsleep'] \/ 60\n\n# round to nearest hundreths \nsleepDay['TotalHoursAsleep'] = sleepDay['TotalHoursAsleep'].round(2)\n\n#add sleep status\nsleepDay['SleepStatus'] = np.where(sleepDay['TotalHoursAsleep'] < 7, 'Bad Sleepers', \n         (np.where( sleepDay['TotalHoursAsleep'] > 9, 'Oversleepers', 'Normal Sleepers'))\n        ) \n#used ternary operator. link for future me's reference: https:\/\/stackoverflow.com\/questions\/39109045\/numpy-where-with-multiple-conditions\n#np.select article by dataquest: https:\/\/www.dataquest.io\/blog\/tutorial-add-column-pandas-dataframe-based-on-if-else-condition\/\n\nsleepDay['day_name'] = sleepDay['SleepDay'].dt.day_name()\nsleepDay['weekend_weekday'] = np.where(sleepDay['SleepDay'].dt.dayofweek > 4, 'Weekend', 'Weekday')\n\nsleepDay.head()\n\n#Overview\nfig_dims = (20, 15)\nfig, ax = plt.subplots(figsize = fig_dims)\noverview = sns.countplot(\n    data = sleepDay,\n    x = sleepDay['SleepStatus'],\n    hue = 'weekend_weekday',\n    ax = ax\n)\noverview.set_title('Overview Look of Sleep Statuses', fontsize = 20)\noverview.set_xlabel('Sleep Status', fontsize = 20)\noverview.set_ylabel('Total', fontsize = 20)\nplt.xticks(size = 20)\nplt.yticks(size = 20)\n\nplt.show()\n\n#by Day of the week\nfig_dims = (20, 15)\nfig, ax = plt.subplots(figsize = fig_dims)\noverview2 = sns.countplot(\n    data = sleepDay,\n    x = sleepDay['SleepStatus'],\n    hue = 'day_name',\n    ax = ax\n)\noverview2.set_title('Overview Look of Sleep Statuses by Day of The Week', fontsize = 20)\noverview2.set_xlabel('Sleep Status', fontsize = 20)\noverview2.set_ylabel('Total', fontsize = 20)\nplt.xticks(size = 20)\nplt.yticks(size = 20)\n\nplt.show()","9b4618b3":"byMinute","07563871":"# There's 2,483,658 rows!\nheartrateSeconds.shape\nprint(heartrateSeconds.head())\nsummary = round(heartrateSeconds['Value'].describe())\nprint('\\n')\nprint(summary)\nunique = heartrateSeconds['Id'].nunique() #there's only 14 unique uses\nprint('\\nNumber of Users in This Dataset: ' + str(unique))","887f6485":"#Ensure proper time formatting\nheartrateSeconds['Time'] = pd.to_datetime(heartrateSeconds['Time'], format = '%m\/%d\/%Y %I:%M:%S %p')\n\nmean = heartrateSeconds.groupby(heartrateSeconds['Time'].dt.day_name())['Value'].mean()\nmean\n","c5374890":"mean = heartrateSeconds.groupby(heartrateSeconds['Time'].dt.hour)['Value'].mean()\nfig_dims = (23, 13)\nfig, ax = plt.subplots(figsize=fig_dims)\n\n# create temporary dataframe\ntempDf = pd.DataFrame(mean)\n\ntempDf\n\nt = sns.barplot(\n    data = tempDf, \n    x = tempDf.index,\n    y = 'Value'\n)\n\nt.set_xlabel('Time (Hour)', fontsize = 20)\nt.set_ylabel('Average HeartRate', fontsize = 20)\nt.set_title('Average Heart-Rate Per Minute Based on Time (Hour)', fontsize = 20)","09d1be63":"#rejoining a new df as sleepDay was altered\nrejoined = dailyActivity.merge(sleepDay, on = ['Id', 'date'])\nrejoined.head()","4b5d2ae1":"# Before I analyze with sleep status, let's examine just the total steps taken by weekdays\n\nmeanSteps = dailyActivity.groupby('day_name')['TotalSteps'].mean()\n\nfig_dims = (23, 13)\nfig, ax = plt.subplots(figsize=fig_dims)\n\n# create temporary dataframe\ntempDf = pd.DataFrame(meanSteps)\ntempDf = tempDf.reset_index()\n\n#sort by day\ncats = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntempDf['day_name'] = pd.Categorical(tempDf['day_name'], categories = cats)\ntempDf = tempDf.sort_values('day_name')\n\nprint(tempDf)\n\nt = sns.barplot(\n    data = tempDf, \n    x = 'day_name',\n    y = 'TotalSteps'\n)\n\nt.set_xlabel('Day of the Week', fontsize = 20)\nt.set_ylabel('Total Steps', fontsize = 20)\nt.set_title('Average Total Steps Taken by the Day of the Week', fontsize = 20)","4f67bf44":"lightlyActive = joinedDf[['LightlyActiveMinutes', 'TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']]\n\nlightlyActive.head()","da57050e":"fig_dims = (15, 10)\nfig, ax = plt.subplots(figsize=fig_dims)\n\nsns.set_style(\"darkgrid\")\nreg = sns.regplot(\n    data = lightlyActive,\n    x = 'LightlyActiveMinutes',\n    y = 'TotalMinutesAsleep',\n    ax = ax,\n    color = 'blue'\n)\n\nreg.set_title('Relationship between Total Minutes of Sleep and Users Who are Light Active')","79643c33":"sedentary = joinedDf[['SedentaryMinutes', 'TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']]\n\nsedentary.head()","48304d8f":"sns.set_style(\"darkgrid\")\nfig_dims = (15, 10)\nfig, ax = plt.subplots(figsize=fig_dims)\n\ns = sns.regplot(\n    data = sedentary,\n    x = 'SedentaryMinutes',\n    y = 'TotalMinutesAsleep',\n    ax = ax,\n    color = 'blue'\n)\n\ns.set_title('Relationship between Total Minutes of Sleep and Users Who are Sedentary')","846f7d95":"joinedDf.head()","eb3914cd":"sns.set_style(\"darkgrid\")\nfig_dims = (15, 10)\nfig, ax = plt.subplots(figsize=fig_dims)\n\ns = sns.regplot(\n    data = joinedDf,\n    x = 'FairlyActiveMinutes',\n    y = 'TotalMinutesAsleep',\n    ax = ax,\n    color = 'blue'\n)\n\ns.set_title('Relationship between Total Minutes of Sleep and Users Who are Fairly Active', fontsize = 20)\ns.set_xlabel('Fairly Active Minutes', fontsize = 20)\ns.set_ylabel('Total Minutes Asleep', fontsize = 20)\nplt.show()\n\n# Very Active \nsns.set_style(\"darkgrid\")\nfig_dims = (15, 10)\nfig, ax = plt.subplots(figsize=fig_dims)\n\ns = sns.regplot(\n    data = joinedDf,\n    x = 'VeryActiveMinutes',\n    y = 'TotalMinutesAsleep',\n    ax = ax,\n    color = 'blue'\n)\n\ns.set_title('Relationship between Total Minutes of Sleep and Users Who are Very Active', fontsize = 20)\ns.set_xlabel('Very Active Minutes', fontsize = 20)\ns.set_ylabel('Total Minutes Asleep', fontsize = 20)\nplt.show()","fb0f4ea2":"#Ensuring proper formatting\nhourlyIntensities['ActivityHour'] = pd.to_datetime(hourlyIntensities['ActivityHour'], format = '%m\/%d\/%Y %I:%M:%S %p')","d94b7ee0":"#Group by the hours and find the average total intensity, which should therefore give only 24 rows in the end\nmean = hourlyIntensities.groupby(hourlyIntensities['ActivityHour'].dt.time)['TotalIntensity'].mean()\n\nsns.set_style(\"darkgrid\")\nfig_dims = (23, 13)\nfig, ax = plt.subplots(figsize=fig_dims)\n\n#create temporary dataframe\ntempDf = pd.DataFrame(mean)\n\nt = sns.barplot(\n    data = tempDf, \n    x = tempDf.index,\n    y = 'TotalIntensity'\n)\n\nt.set_xlabel('Time', fontsize = 20)\nt.set_ylabel('Average Total Intensity', fontsize = 20)\nt.set_title('Average Total Intensity Per Hour', fontsize = 20)","3134ce8a":"meanDays = hourlyIntensities.groupby(hourlyIntensities['ActivityHour'].dt.day_name())['TotalIntensity'].mean()\n\nfig_dims = (23, 13)\nfig, ax = plt.subplots(figsize=fig_dims)\n\n# create temporary dataframe\ntempDf = pd.DataFrame(meanDays)\ntempDf = tempDf.reset_index()\n\ntempDf.rename(columns = {\"ActivityHour\": \"Day\"}, inplace = True)\n\n#sort by day\ncats = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntempDf['Day'] = pd.Categorical(tempDf['Day'], categories = cats)\ntempDf = tempDf.sort_values('Day')\n\nt= sns.barplot(\n    x = 'Day',\n    y = 'TotalIntensity',\n    data = tempDf\n)\n\nt.set_xlabel('Day', fontsize = 20)\nt.set_ylabel('Average Total Intensity', fontsize = 20)\nt.set_title('Average Total Intensity Vs Day', fontsize = 20)","ecdc5b11":"# Let's see if the day of the week, or weekends or weekdays, have any influence on how users are active. ","4e45b73d":"# Let's look back at my summary data based on the users' active status.","c7104fea":"### Since most of these users are lightly active, let's see if there's any relationship between light active users and their sleeping behaviours. ","f37fddf9":"# Let's analyze steps taken vs calories burned","1ce7cc9b":"# Let's try analyzing daily steps","e545605f":"## With this visualization I can see that:\n* Users are most active between 5pm to 7pm. I speculate that this is because users tend to finish work around these hours, and right after they start engaging in physical activities such as going to the gym or a jog. **Therefore, I recommend Bellabeat to notify users to do some exercises around this time frame.**\n* Users start to get active starting from 5am and rest on 9pm. ","564823bd":"### Although there's a slight negative trend for Fairly active users, it doesn't seem to be a very strong correlation but still worth mentioning. Also, those who are very active don't seem to have a correlation as well. ","7a493b3c":"### Average Heart-rate per minute is generally slower during the night, which is understandable since most people will be resting during the night. Heart-rate is high between 9am to 6pm, and starts to drop after 6pm. Heart rate also seems to be at its highest at 12pm and 6pm. Seems like users are somewhat tensed during these two distinct hours. ","7520c5ef":"### Looks like there's no correlation between those who lightly active and the amount of sleep they have. \n\n# What about those who are mostly sedentary?","ad559253":"# **Prepare Phase**\n\nThe datasets are gathered internally by FitBit, therefore the data can be safely assumed to be unbias and credible. I have also taken a look at the datasets in a spreadsheet software and there doesn't seem to be any problems other than the date formats are not properly converted. I will convert them to datetime formats when the need arises. ","6c18544d":"# Loading Packages","3166af61":"### Based on the summary data, it would seem that people burn the least calorie on Thursdays on average, whereas Tuesday is has the most calories burned on average.","5b1a0573":"### Insights from this summary: \n* Sedentary average around 991 minutes, or 16 hours. \n* The users on this dataset are mostly lightly active. \n* Users seem to be getting on average roughly 7 hours of sleep, and they mostly sleep one time per day on average. \n* On average, these users take 7637 steps per day, which is lower than what CDC recommends on one of their research. According to a [research](https:\/\/www.cdc.gov\/media\/releases\/2020\/p0324-daily-step-count.html) conducted by the CDC, an adult should ideally take at least 8000 steps per day as it is associated with a 51% lower risk for all-cause mortality.\n\n\nI recommend Bellabeat to program their smart devices to inform users regarding the ideal total steps to be taken to their users. ","eda5f780":"## Alright let's start with analyzing whether the heart-rate has anything to do with people undersleeping.","76a63368":"### Sadly, it doesn't seem like information on the heart-rate seem to be of help here. But the average seems to be highest on Saturdays, which I'd assume it's due to the fact that the users exercise the most on Saturdays. It doesn't seem I would be able to determine why some people undersleep with the information I currently have right now. ","04ad7a3e":"# Let's get a brief summary of their daily activities.","f064ffb2":"# Calories burned between weekdays and weekends","5dd3468c":"### Let's look at the average heart-rate per minute for each hour of the day","0ac6e046":"### Based on this visualization, I can clearly see that there's a positive relationship between these total steps taken and calories burned. The more steps that were taken on a particular day, the more calories were burned. I guess this was probably very obvious as the more we move our bodies, we tend to burn more calories. ","c624eb33":"### A quick glimpse back, the users are the most idle on Mondays, and other than their Very Active Minutes, the average for the rest seemed to have increased on Tuesday. However, there isn't much I could tell just based on these information as there's not much signicant difference. Maybe the heartrate dataset can help me?","73b07a86":"#### The most and least active based on the type of activity (Fairly, Lightly, etc)","adc9f5fd":"### After taking a look and understanding the datasets available, I've decided to use the above 11 datasets for my analysis. \n\nAfter having an understanding of these available datasets, I have prepared these questions in order to aid myself in the analysis phase. \n\n* How active are these users? \n* What factors contribute to the highest calorie burns? \n* Have these users been having a good night sleep? Is there a relationship between how active they are and their sleep schedule?\n* How does the data vary from weekends and weekdays?","a8ee5280":"# Let's see the relationship between total sleep minutes and total time in bed subgrouped by the type of week","70502ed2":"# I will now inner join between the sleepDay and dailyActivity dataset in order to analyze the users' sleeping behaviours. ","74463847":"# Case Study: How Can a Wellness Technology Company Play It Smart?\n## Part of the Google Analytics Professional Certificate \n#### by Whoong Zi Wei\n\n<br>\n\nBellabeat is a high-tech company founded by Ur\u0161ka Sr\u0161en and Sando Mur that manufactures health-focused smart products for women. In this case study, I am presented a scenario where I will be working for Ur\u0161ka Sr\u0161en and I have been asked to focus on one of Bellabeat's products and analyze smart device data to gain insight into **how consumers are using their smart devices**. \n\nIn order to help guide Bellabeat in unlocking new growth opportunities, I am requested by Ur\u0161ka Sr\u0161en to analyze available consumer data, which for this scenario I am to use a dataset by [Fitbit Fitness Tracker Data](https:\/\/www.kaggle.com\/arashnic\/fitbit) (Public Domain, dataset made available through [Mobius](https:\/\/www.kaggle.com\/arashnic)). This dataset contains personal fitness tracker from thirty fitbit users. These thirty Fitbit users had consented to the submission of personal tracker data, which includes minute-level output for physical activity, heart rate, and sleep monitoring. It also includes information about daily activity, steps, and heart rate that can be used to explore users' habits. \n\n<br>\n\n#### **Key Stakeholders**:\n\n*     **Urska Srsen** - Bellabeat cofounder and CCO\n*     **Sando Mur** - Bellabeat cofounder\n*     **Bellabeat marketing analytics team**\n    \n#### **Bellabeat's Key Products**:\n\n*     **Bellabeat app**: The Bellabeat app provides users with health data related to their activity. The Bellabeat app connects to their line of smart wellness products.\n*     **Leaf**: Worn as either a bracelet, necklace, or clip; the Leaf tracker connects to the Bellabeat app to track activity, sleep, and stress.\n*     **Time**: A wellness watch that uses smart technology to track the user's activity, sleep, and stress.\n*     **Spring**: A water bottle that tracks daily water intake. The bottle connects to the Bellabeat app to track the users hydration levels.\n*     **Bellabeat membership**: A subscription-based membership program for users. Membership gives users 24\/7 access to fully personalized guidance on nutrition, activity, sleep, health and beauty, and mindfulness based on their lifestyle and goals.\n\n<br>\n\n## <ins>Business Objective<\/ins>\n1. What are some trends in smart device usage?\n2. How could these trends apply to Bellabeat customers?\n3. How could these trends help influence Bellabeat marketing strategy?\n\n\nAs this dataset has more than 10 csv files available, I am encouraged by Sr\u0161en to use as much as I can in order aid my research.","9220086a":"# Sleep quality between weekdays and weekends","5ad4b66e":"### Based on this data, it seems that the users have a much better sleep quality on average on the weekends. Also, it seems that they burned more calories on the weekends as well, which further confirms my earlier hypothesis that saturdays are the most popular day for users to engage in physical exercises. ","261ac63a":"### Overall it seems that people tend to oversleep the most on a Sunday, and they often sleep below 7 hours the most on a Tuesday. It makes sense for many people to oversleep on a Sunday as most people won't need to work. However, as I've categorized those sleeping over 9 hours as Bad Sleepers, Bellabeat should make an effort to advice its users to avoid sleeping in on Sundays in order to not damage their health. \n\n### Also it seems that the users underslept the most on Tuesdays. Not sure why this is the case, I should try to investigate this. \n\n\n","63ec4048":"# **How does the data vary from weekends and weekdays?**\n\n### How much calories do they burn between weekdays and weekends? How about the quality of their sleep?","ba9d3d38":"# Summary of my findings:\nAfter analyzing the data, I have found some insightful information that may be of interest for Bellabeat. As a reminder, Bellabeat is a high-tech company that manufactures health-focused smart products for women. Here are some business marketing recommendations that I can give to Bellabeat:\n1. I suggest Bellabeat to give notifications to their users who had been idle during the day to consider doing some light exercises. And with my previous finding that shows that being sedentary is associating to lack of sleep, it shows that the more idle you are, the lesser the quality of one's sleep may be. Therefore, this reason may serve as a good incentive to encourage users to be more active as this may allow them to sleep better when it's time for bed. \n\n2. I recommend Bellabeat to notify\/remind users to do some exercises between 5pm and 7pm as this is when most users finish work and start exercising based on the data. This is also a great opportunity to encourage those who might have a goal to lose weight to start exercising on this time frame. \n\n3. Bellabeat should consider notifying users the importance of at least getting more than 8000 steps per day as this will benefit the users in the long run. This is based on a [research](https:\/\/www.cdc.gov\/media\/releases\/2020\/p0324-daily-step-count.html) by CDC that taking 8,000 steps per day was associated with a 51% lower risk for all-cause mortality (or death from all causes). Therefore, it is highly recommended for Bellabeat to consider this advice into consideration for their next marketing strategy. \n\n4. As users tend exercise more on Saturdays, Bellabeat can use this information to remind users to do some exercise on Saturdays as they are more likely to be more motivated. Also, there seems to be a noticable drop in activity when it is Sunday. Therefore, I recommend Bellabeat to encourage users to be more proactive during the Sundays as, based on the data, users tend to be a bit more laidback on Sundays. Users also seem to oversleep the most on Sunday, therefore Bellabeat should consider advising their users to be mindful of this as oversleeping is associated with risk of diabetes, heart disease, stroke, and death ([source](https:\/\/amerisleep.com\/blog\/oversleeping-the-health-effects\/))\n\n6. Bellabeat should notify users when their heart-rate detected to be outside the range of 60-100 BPM as this may signify a potential underlying health condition that the user may not be aware of.\n\n7. By combining the fact that Tuesday has the most steps taken and that average total intensity is the highest, this might be the very reason why the users on this dataset are undersleeping the most on Tuesday. Bellabeat should consider advising their users to exercise meditation so as to calm themselves on stressful days. ","e36b4089":"### There's a negative correlation! The more idle the person is during the day, it seems that they would also be getting fewer sleep than those who are more active! \n\n### I recommend bellabeat to take note of this insight and maybe consider sending notifications to users who might have been idle throughout the day to get some light exercises so as to allow them to have a better sleep later in the day. ","f4273868":"#### The Most and Least Active Based On Distance","393f2b2a":"#### There are a total of 18 datasets available. However, I will only need a few of them for this case study. I will also merge some datasets if neccesary as I progress through this case study. ","7d13ad97":"# What About those who are fairly active and very active?","5e00fa10":"# On what hour do users are the most active during the day?","d72ce0da":"# Is there a relationship between how active they are and their sleep schedule?","0cc485d6":"### Since FitBit collects heart-rates in BPM, or Beats Per Minute, the Value column is therefore the BPM collected. According to FitBit's [website](https:\/\/healthsolutions.fitbit.com\/blog\/how-do-fitbit-trackers-monitor-heart-rate\/), a typical resting heart-rate range is 60 to 100 beats per minute for adults. It also mentions that active people often have a lower resting heart rate, therefore drastic changes to this number can signify health issues and should be discussed with a doctor.\n\n### Moving on to the summary:\n1. The average heart rate is 77, which is inside the range of a typical resting heart-rate range. \n2. Seems like there's someone that had a maximun BPM of 203. That is quite worrisome. Bellabeat should consider implementing a system that allows their users to be notified if their BPM is outside the range of 60 to 100 and be checked out by a doctor. ","e818c7c3":"### With the above visualization, I can see that Sunday is the least intense among the users and that Saturday is the most intense. Also, on weekdays Tuesdays seem to be the most busiest in terms of both average total intensity and total steps taken. With this much evidence, I can safely conclude that Saturdays are the most active day on weekends and Tuesdays the most busiest on weekdays. ","2cbb47cc":"# On what day of the week are users the most active during the day?","71550179":"### Both display a positive relationship. I guess it's common sense that the longer you stay in bed, the more likely you will fall into sleep. Let's analyze this in another way.\n\n### Based on a study [here](https:\/\/www.sleepfoundation.org\/how-sleep-works\/how-much-sleep-do-we-really-need), healthy adults are suggested to sleep between 7-9 hours. Therefore, I will categorized those who slept below 7 as Bad Sleepers, those who slept beyond 9 hours Oversleepers, and those between 7 and 9 hours as normal. ","23d7e380":"# Let's analyze the heartrate dataset","8353f40e":"# How active are these Users?","4b77b967":"# **What factors contribute to the highest calorie burns?**","9a2fa391":"### On weekdays, Tuesday has the most steps taken, whereas on weekends it has the most steps taken on Saturdays. I hyphothesize that since Tuesday seems to be the most busiest day among the users, this may be the very reason why users are mostly undersleeping on Tuesdays.","8380caad":"### If compared based on the days of the week, Monday seems to be the least active day on average based on the sedentary being the highest in both in terms of minutes and distance. Based on the data, Saturday seems be the day that users did the most exercise lightly or moderately (accounting both the distance and minute on average)\n\n## **However, based on the above visualizations and summary data, I can't really draw a solid conclusion. For now, I hyphothesize that users are probably most active on Saturdays.** "}}