{"cell_type":{"5d0e3bcf":"code","b03bb99f":"code","0908da82":"code","12a50efa":"code","dbb8fdbb":"code","46db1fe6":"code","9cb75479":"code","8b7bc199":"code","a5fb954e":"code","7f758e9b":"code","79cd7abd":"code","379fa64f":"code","9d06dbb9":"code","e83092ac":"code","127221c8":"code","b4024257":"code","25fb1218":"markdown","5ab5bcb6":"markdown","9bc86bd8":"markdown","12dbbe59":"markdown","cd437375":"markdown","7b2e9800":"markdown","1a0f472e":"markdown","610947ee":"markdown","fed57a35":"markdown","5386d12a":"markdown"},"source":{"5d0e3bcf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b03bb99f":"from tabulate import tabulate\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport matplotlib\nimport seaborn as sns\n\nimport geopandas as gpd\nfrom geopandas.tools import geocode\n\nimport squarify    # pip install squarify (algorithm for treemap)\nfrom mpl_toolkits.basemap import Basemap\nimport folium\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\ninit_notebook_mode(connected=True)","0908da82":"wur_18_19 = pd.read_excel('..\/input\/world-university-rankings-analytics\/eighteen_nineteen_university_datasets.xlsx', index_col=0)\nwur_19_20 = pd.read_excel('..\/input\/world-university-rankings-analytics\/nineteen_twenty_university_datasets.xlsx', index_col=0)","12a50efa":"wur_18_19.head()","dbb8fdbb":"wur_19_20.head()","46db1fe6":"wur_18_19.columns","9cb75479":"wur_18_19.columns = ['institution', 'location', 'national_rank', 'quality_of_education',\n       'alumni_employment', 'quality_of_faculty', 'research_output',\n       'quality_publications', 'influence', 'citations', 'score']","8b7bc199":"wur_19_20.columns","a5fb954e":"wur_19_20.columns = ['institution', 'location', 'national_rank', 'quality_of_education',\n       'alumni_employment', 'quality_of_faculty', 'research_performance', 'score']","7f758e9b":"# prepare data frames\ndf18_19 = wur_18_19[wur_18_19.score >= 20].iloc[:15,:]\n# import graph objects as \"go\"\n\nx = df18_19.institution\n\ntrace1 = {\n  'x': x,\n  'y': df18_19.quality_of_education,\n  'name': 'edu quality',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df18_19.quality_of_faculty,\n  'name': 'teaching',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': 'Top 15 universities'},\n  'barmode': 'relative',\n  'title': 'Quality of Education and Quality of Faculaty of top 15 universities in 2018-2019'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","79cd7abd":"# prepare data frames\ndf19_20 = wur_19_20[wur_19_20.score >= 20].iloc[:15,:]\n# import graph objects as \"go\"\n\nx = df19_20.institution\n\ntrace1 = {\n  'x': x,\n  'y': df19_20.quality_of_education,\n  'name': 'edu quality',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df19_20.quality_of_faculty,\n  'name': 'teaching',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': 'Top 15 universities'},\n  'barmode': 'relative',\n  'title': 'Quality of Education and Quality of Faculaty of top 15 universities in 2019-2020'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","379fa64f":"pie1 = wur_18_19.location.value_counts()\n# pie1_list = \nlabels = wur_18_19.location\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Country\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Number of Universities in each Country\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","9d06dbb9":"fig = px.scatter_3d(wur_18_19, x=wur_18_19.index, y='research_output', z='citations',\n              color='score')\nfig.show()","e83092ac":"# subplots of all columns\ntrace1 = go.Scatter(\n    x=wur_18_19.index,\n    y=wur_18_19.research_output,\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=wur_18_19.index,\n    y=wur_18_19.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=wur_18_19.index,\n    y=wur_18_19.alumni_employment,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=wur_18_19.index,\n    y=wur_18_19.score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","127221c8":"fig = px.line(wur_18_19, x=wur_18_19.index, y=\"score\", color='location')\nfig = px.line(wur_19_20, x=wur_19_20.index, y=\"score\", color='location')\nfig.show()","b4024257":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=wur_18_19.index, y=wur_18_19.research_output,\n                    mode='lines',\n                    name='Research'))\nfig.add_trace(go.Scatter(x=wur_18_19.index, y=wur_18_19.citations,\n                    mode='lines+markers',\n                    name='Citations'))\nfig.add_trace(go.Scatter(x=wur_18_19.index, y=wur_18_19.alumni_employment,\n                    mode='markers', name='Alumni Employment'))\nfig.update_layout(title='',\n                   xaxis_title='World Rank',\n                   yaxis_title='')\n\nfig.show()","25fb1218":"**Import Data**","5ab5bcb6":"**Read Data**","9bc86bd8":"**Research \/ Citations \/ Alumni Employment vs World Rank**","12dbbe59":"**Universities by Country**","cd437375":"**Research, citation, income and total score VS World Rank of Universities**","7b2e9800":"### **List of features(columns) available in the dataset**","1a0f472e":"**Top 15 universities by quality of education and teaching in 2018-2019 and 2019-2020 academic years.**","610947ee":"**Rename Columns**","fed57a35":"**Import Essentials**","5386d12a":"**3D Scatter plot of Research output, Citations and Score**"}}