{"cell_type":{"0c701112":"code","fef69b80":"code","bfb7d928":"code","6aa156c1":"code","1afece0d":"code","096008e2":"code","f8314b31":"markdown","d357d1f8":"markdown","b8986edf":"markdown"},"source":{"0c701112":"from pathlib import Path\n\nif Path.cwd() == Path('\/kaggle\/working'):\n    # Kaggle\n    import sys\n    LIB_PATH = (Path.cwd()\/\"..\"\/\"input\"\/\"feedback-prize-2021-lib\").resolve()\n    assert LIB_PATH.is_dir(), (\"Use the '+ Add data' feature to add the 'Notebook Output Files' from the 'sentinel1\/feedback-prize-2021-lib' \"\n                               \"in order to make some utilities importable from that library (one time restart is required after adding).\")\n    sys.path.insert(0, str(LIB_PATH))\nelse:\n    # Local machine\n    assert (Path.cwd()\/\"lib\"\/\"feedback_util.py\").is_file(), (\"Run the 'sentinel1\/feedback-prize-2021-lib' notebook locally \"\n                                                             \"in order to generate the importable library on your machine\")","fef69b80":"from lib.feedback_util import read_train_csv, calc_word_indices, stringify_word_indices, get_train_essay_text","bfb7d928":"train = read_train_csv()","6aa156c1":"%%time\n\ntrain = train.groupby('id').apply(lambda group: group.assign(sanity_check = group.apply(lambda row: stringify_word_indices(\n    calc_word_indices(get_train_essay_text(group.name), row.discourse_start, row.discourse_end)\n) == row.predictionstring, axis = 1)))","1afece0d":"train.loc[train.sanity_check == False]","096008e2":"len(train.loc[train.sanity_check == True])","f8314b31":"## Example\/test of `calc_word_indices()`    \n\n\nNOTES:\n- Part of examples for the `feedback-prize-2021-lib` [library](https:\/\/www.kaggle.com\/sentinel1\/feedback-prize-2021-lib)\n- Adapted from [Predictionstring 100% Consistent](https:\/\/www.kaggle.com\/kenkrige\/predictionstring-100-consistent?scriptVersionId=83849581)\n","d357d1f8":"Now let's use that to check the predictionstring column in 'train.csv'","b8986edf":"**Predictionstring from char indices**\n\n~~Below is the algorithm published by @aignerpicou in [this thread](https:\/\/www.kaggle.com\/c\/feedback-prize-2021\/discussion\/297688)~~\n\nUsing `calc_word_indices()` function from the `feedback-prize-2021-lib`"}}