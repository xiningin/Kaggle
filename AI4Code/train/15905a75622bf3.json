{"cell_type":{"0abb8666":"code","41ef676b":"code","e3e8a14e":"code","111f030f":"code","38691b03":"code","640771d0":"code","e90cdf23":"code","7baf15b0":"code","e37662c7":"code","dcb69db0":"code","97c0987d":"code","298ef84b":"code","80601775":"code","61399bcc":"code","2250fff1":"code","e11a7a13":"code","24b734da":"code","7dc0ced7":"code","39ca0b6f":"code","1b2cf3fb":"code","6946069e":"code","ffc900a6":"code","c4efd256":"code","8a24444c":"code","773d204a":"code","e1e1cc40":"code","66b6536e":"code","e45e4b16":"code","127fd085":"code","ab167a67":"code","ed350bd4":"code","6a675fed":"code","32167c6b":"code","a5f194e1":"code","d0022ce3":"markdown","50903b94":"markdown","077d8578":"markdown","8a6fe731":"markdown","5e20efa6":"markdown","6cc66250":"markdown","fad6bc2c":"markdown","16504587":"markdown","48aa1675":"markdown","68c735d5":"markdown"},"source":{"0abb8666":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41ef676b":"#import the libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas_profiling as pp\n%matplotlib inline","e3e8a14e":"#read the data\niris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","111f030f":"#getting the top 5 rows Of the dataset\niris.head()","38691b03":"#info() looks into the datatypes and non null value counts\niris.info()","640771d0":"#describe() looks into the statistical measures of the numerical variables present in the dataset\niris.describe()","e90cdf23":"#for Categorical variables \niris['Species'].describe()","7baf15b0":"#Full profile report of the dataset\npp.ProfileReport(iris)","e37662c7":"#total no rows\niris.index","dcb69db0":"#list of columns\niris.columns","97c0987d":"#drop unwanted columns\niris.drop(['Id'],axis=1)","298ef84b":"#check for any null values\niris.isnull().any()","80601775":"#check the total number of null values in each column\niris.isnull().sum()","61399bcc":"#no of unique values in a specific column\niris['Species'].nunique()","2250fff1":"#array of unique values in a specific Column\niris['Species'].unique()","e11a7a13":"#count of each species(non graphical for categorical variable)\nspecies=iris['Species'].value_counts()\nspecies","24b734da":"#Graphical for categorical variable(pie chart)\nplt.pie(species,labels=species.index,autopct='%1.1f%%')\nplt.title('Percentage Distribution of each Species')","7dc0ced7":"#Graphical for categorical variable(count or bar chart)\nsns.countplot(x='Species',data=iris)\nplt.title('Count of each Species')","39ca0b6f":"#kernel density or histogram(Numerical variable)\nsns.kdeplot(iris['SepalLengthCm'])\nplt.title('Distribution of Sepal Length in cm for every Species')","1b2cf3fb":"#Use of FacetGrid for mapping histogram(numerical variable) with Categorical variable\nsns.FacetGrid(iris,hue='Species',size=5).map(sns.kdeplot,'SepalLengthCm').add_legend()","6946069e":"#boxplot helps in determining Median,25th percentile,75th percentile and outliers\nsns.boxplot(x='Species',y='SepalLengthCm',data=iris)\nplt.title('Boxplot distribution for each species')","ffc900a6":"#use of boxplot with points distribution\nsns.boxplot(x='Species',y='SepalLengthCm',data=iris)\nsns.stripplot(x='Species',y='SepalLengthCm',data=iris,jitter=True)\nplt.title('Boxplot with points distribution of each species')","c4efd256":"#better to use violin plot if you dont want to use the above plots\n#tells us about the density of points\n#fatter where more points\n#thinner where less points\nsns.violinplot(x='Species',y='SepalLengthCm',data=iris)\nplt.title('violin density plot for each Species')","8a24444c":"#scatterplot to compare two numerical variables\niris.plot(kind='scatter',x='SepalWidthCm',y='SepalLengthCm') \nplt.title('Distribution of SepalWidth vs SepalLength for all Species')","773d204a":"#use of jointplot to see scatter plot as well as histogram for each numerical variable\nsns.jointplot(x='SepalWidthCm',y='SepalLengthCm',data=iris)","e1e1cc40":"#use of FacetGrid for comparing 2 Numerical variables with 1 Categorical variable\nsns.FacetGrid(data=iris,hue='Species',size=6).map(plt.scatter,'SepalWidthCm','SepalLengthCm').add_legend()","66b6536e":"#use of pairplot to see scatter plot between each numerical variable \nsns.pairplot(iris.drop(['Id'],axis=1),hue='Species')","e45e4b16":"#encoding of categorical variable\nspecies_Cat=pd.get_dummies(iris['Species'],columns=['Species'])","127fd085":"#join encoded dataframe to main dataframe\niris_df=iris.join(species_Cat)","ab167a67":"iris_df","ed350bd4":"iris_df.drop(['Id','Species'],axis=1)","6a675fed":"# finding correlation matrix\ncorr=iris_df.corr()","32167c6b":"#correlation matrix\ncorr","a5f194e1":"#heatmap to find correlation between variables using correlation matrix\nsns.heatmap(corr,annot=True)\nplt.title(\"heatmap(correlation between variables)\")","d0022ce3":"Next step is Data Cleaning.....","50903b94":"Read the Dataset","077d8578":"Hello Everyone!!!!!\n\nThis is a simple tutorial for EDA(exploratory Data Analysis) using Iris Dataset.","8a6fe731":"Lets start with Data Analysis(EDA)","5e20efa6":"Please Upvote if you like my work....","6cc66250":"As this dataset contains no null values,so nothing to worry about....\n\nIf there had been null values you should either remove null values if it contains more than 60-70% null values in a column or treat them if the no of null values is less. ","fad6bc2c":"We have finished with univariate analysis.....\n\nLets start with multivariate analysis or bivariate analysis...","16504587":"Let's start by looking into the description of Data ","48aa1675":"We should start with Univariate Analysis(1 variable)","68c735d5":"We start with importing the main libraries."}}