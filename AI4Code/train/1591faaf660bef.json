{"cell_type":{"e248cc5d":"code","f7183333":"code","71d3fd21":"code","7bbd31d6":"code","f90131a5":"code","9f031b51":"code","99ffed53":"code","a12d4dcd":"code","ef9d9ef9":"code","2a5e2409":"code","a3407a8f":"code","6bf10f33":"code","f532ab9e":"code","44b1f8ea":"code","91d1f7aa":"code","440f1ed7":"code","e51e93ae":"code","4e6591a6":"code","28d91698":"code","ec91138f":"code","37378ce6":"code","b29c292f":"code","fc3856ce":"code","306c3c2b":"code","54eb61d9":"code","817c87e0":"code","e7308473":"code","c5b3ec12":"code","1395b524":"code","3effc4ad":"code","5f752dab":"code","7818e381":"code","7a309c44":"code","a4277e4d":"code","78ac8d8d":"code","815b5462":"code","8ce8e8f8":"code","5b9e0b39":"code","78e91104":"code","485e0092":"code","36dd20d5":"code","129b5435":"code","8673ed8d":"code","6c5a5cd8":"code","9ab493c6":"code","f83b0700":"code","bdd35342":"code","21074560":"code","341a24bb":"code","908e1e1a":"code","eca40073":"code","6c9773bc":"code","84ec86c0":"code","e9b00647":"code","a99133f3":"code","0f4659d4":"code","c8665609":"code","49bbbec1":"code","3666c65a":"code","cfa9d5d4":"code","dbe83816":"code","3b30047b":"code","98aca9dd":"code","945ea903":"code","55a9288e":"code","140b5b7f":"code","9c6808ac":"code","d6cfcf88":"code","9263a161":"code","3bb95e4e":"code","ab272838":"code","4168887e":"code","95d68c83":"code","03653571":"code","4b79f58a":"code","316eabca":"code","a26e9724":"code","e08b77af":"code","c92ced31":"code","53d25115":"code","448338fd":"code","c5b9e8b3":"code","0b17e00a":"code","82603cad":"code","ca9d9d94":"code","797c6ac3":"code","c3e6dc52":"code","8982ef56":"code","8c1471a1":"code","8e52032a":"code","40569f68":"code","79e93b88":"code","8ba82454":"code","892462a0":"code","7b5ca33d":"code","b68e4ac7":"markdown","7a6337d6":"markdown","509eab2a":"markdown","7f19bff5":"markdown","24e59fb4":"markdown","84f9d984":"markdown","4697b26b":"markdown","e797126a":"markdown","d59cc147":"markdown","e2d04261":"markdown","ccc77847":"markdown","bbc368f7":"markdown","eb6ced62":"markdown"},"source":{"e248cc5d":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams[\"figure.figsize\"] = (10,5)\n","f7183333":"df=pd.read_excel('..\/input\/credit-card-customers-data\/final_case_study_credit.xlsx')","71d3fd21":"df.head()","7bbd31d6":"imp=['ownfax', 'ownvcr', 'active', 'voice', 'internet', 'owntv', 'tollmon', 'equipten', 'card2spent', 'equip', 'tollfree', 'cardmon', 'wireten', 'ebill', 'cardtenurecat', 'equipmon', 'wireless', 'card2benefit', 'pager', 'response_03', 'response_01', 'card2tenurecat', 'ownpc', 'owngame', 'card2type', 'card2fee', 'wiremon', 'tollten', 'cardspent', 'owncd', 'churn', 'callcard', 'multline', 'forward', 'owndvd', 'response_02', 'tenure', 'cardten', 'ownpda', 'ownipod', 'card2', 'news']","f90131a5":"ndf=df.loc[:,imp]","9f031b51":"a=['address', 'age', 'bfast', 'birthmonth', 'callid', 'callwait', 'card2tenure', 'cardtenure', 'cartype', 'commutebike', 'commutebus', 'commutecar', 'commutecarpool', 'commutecat', 'commutemotorcycle', 'commutenonmotor', 'commutepublic', 'commuterail', 'commutetime', 'commutewalk', 'confer','custid', 'ed', 'employ', 'hourstv', 'lncardmon', 'lncardten', 'lncreddebt', 'lnequipmon', 'lnequipten', 'lninc', 'lnlongmon', 'lnlongten', 'lnothdebt', 'lntollmon', 'lntollten', 'lnwiremon', 'lnwireten', 'longmon', 'longten', 'pets_birds', 'pets_cats', 'pets_dogs', 'pets_freshfish', 'pets_reptiles', 'pets_saltfish', 'pets_small', 'spoused']","99ffed53":"a=set(a)","a12d4dcd":"b=set(df.columns)","ef9d9ef9":"ndf=df.loc[:,b-a]","2a5e2409":"ndf['total_spend']=ndf['cardspent']+ndf['card2spent']","a3407a8f":"del ndf['card2spent']","6bf10f33":"del ndf['cardspent']","f532ab9e":"import seaborn as sns\nimport  matplotlib","44b1f8ea":"ndf.describe()","91d1f7aa":"ndf=ndf.replace('#NULL!',np.NaN)","440f1ed7":"ndf.townsize=ndf.townsize.astype('float')","e51e93ae":"ndf.dtypes.value_counts()","4e6591a6":"ndf.townsize.dtype","28d91698":" del ndf['cardten']","ec91138f":"ndf.card2fee.nunique(dropna=True)","37378ce6":"df['pager']","b29c292f":"c=list(ndf.columns)","fc3856ce":"a=[]\nb=[]\nfor e in c:\n    if ndf[e].nunique(dropna=True)>5:\n        a.append(e)\n    else:\n        b.append(e)\n        ","306c3c2b":"df_dis=ndf.loc[:,a]","54eb61d9":"df_con=ndf.loc[:,b]","817c87e0":"sns.distplot(np.sqrt(np.sqrt(df_dis.total_spend)))","e7308473":"sns.regplot(x='total_spend',y='debtinc',data=df_dis)","c5b3ec12":"df_con","1395b524":"ndf.equipten.value_counts()[0]\/ndf.shape[0]*100\n    ","3effc4ad":"ndf.tollten.value_counts()[0]\/ndf.shape[0]*100","5f752dab":"#more than 70 % values in wireten are null so it is wise to drop columns\nndf=ndf.drop(['equipten','tollten'],axis='columns')","7818e381":"df_dis=df_dis.drop(['wireten','equipten','tollten'],axis='columns')","7a309c44":"sns.distplot(df_dis.total_spend)","a4277e4d":"df_dis.total_spend.describe()","78ac8d8d":"ndf['trans_spend']=np.sqrt(np.sqrt(ndf.total_spend))","815b5462":"del ndf['total_spend']","8ce8e8f8":"equ='trans_spend~card2fee+card2benefit+internet+owndvd+wireless+tollfree+active+ownipod+pager+ownpda+tenure+churn+multline+voice+owngame+ownpc+wiremon+callcard+equipmon+equip+forward+card2+ownvcr+owncd+card2type+response_03+tollmon+ebill+news+response_02+ownfax+cardmon+cardtenurecat+owntv+response_01+card2tenurecat'","5b9e0b39":"from sklearn.model_selection import train_test_split","78e91104":"x,y=train_test_split(ndf,test_size=0.3,random_state=1234)","485e0092":"ndf=ndf.fillna(0)","36dd20d5":"x=ndf[ndf.columns.difference(['trans_spend'])]\ny=ndf['trans_spend']","129b5435":"x_train,y_train,x_test,y_test=train_test_split(x,y,test_size=0.33, random_state=42)","8673ed8d":"import statsmodels.formula.api as smf\nmodel = smf.ols(equ, data=ndf).fit()\nprint(model.summary())","6c5a5cd8":"from sklearn.linear_model import Lasso\n","9ab493c6":"Lasso(alpha=0.1).fit(x,y).coef_","f83b0700":"ls=pd.DataFrame(data=Lasso(alpha=0.1).fit(x,y).coef_,index=x.columns,columns=['a'])","bdd35342":"list(ls[ls['a']<0].index)","21074560":"list(ls[ls['a']>0].index)","341a24bb":"lasso_imp=[list(ls[ls['a']>0].index),list(ls[ls['a']<0].index)]","908e1e1a":"lasso_imp","eca40073":"from sklearn.feature_selection import RFE\n\nfrom sklearn.linear_model import LinearRegression\n\nlm = LinearRegression()\nrfe = RFE(lm, n_features_to_select=15).fit(x,y)\nbool_RFE = rfe.get_support()\n","6c9773bc":"x.loc[:,bool_RFE]","84ec86c0":"from sklearn.feature_selection import f_regression\nF_values, p_values  = f_regression(x,y)\nF_values = pd.Series(F_values, name='F_values')\np_values = pd.Series(p_values, name='p_values')\ncol_names = pd.Series(x.columns,name='col_names')\nf_result = pd.concat([col_names,F_values,p_values],axis=1)\nf1=list(f_result.sort_values(by=[\"F_values\"], ascending=False).head(15).col_names)","e9b00647":"from sklearn.feature_selection import SelectKBest, f_classif, chi2\nselector = SelectKBest(f_classif, k=15)\nselector.fit(x,y)\nK_Best = x.columns[selector.get_support()]\nf=list(K_Best)","a99133f3":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom patsy import dmatrices\nVIF = [variance_inflation_factor(x.values,i) for i in range(x.shape[1])]\nVIF = pd.Series(VIF, name='VIF')\ncols = pd.Series(x.columns, name='Column_Name')\nVIF_res = pd.concat([cols,VIF],axis=1)\nvif=list(VIF_res.sort_values(by=['VIF']).head(15).Column_Name)","0f4659d4":"[f1,f,vif]","c8665609":"eqn='trans_spend~active+carbuy+carcatvalue+card+card2benefit+card2fee+cardfee+carown+carvalue+churn+creddebt+debtinc+default+edcat+empcat+gender+inccat+internet+othdebt+owncd+owndvd+ownpda+owntv+ownvcr+pets+polcontrib+polparty+reason+response_01+response_02+response_03+retire+telecommute+tenure+union+wiremon'","49bbbec1":"n=['active','carbuy','carcatvalue','card','card2benefit','card2fee','cardfee','carown','carvalue','churn','creddebt','debtinc','default','edcat','empcat','gender','inccat','income','internet','othdebt','owncd','owndvd','ownpda','owntv','ownvcr','pets','polcontrib','polparty','reason','response_01','response_02','response_03','retire','telecommute','tenure','union','wiremon']","3666c65a":"len(n)","cfa9d5d4":"model2 = smf.ols(eqn, data=ndf).fit()\nprint(model2.summary())","dbe83816":"lasso_imp","3b30047b":"lasso_eqn='trans_spend~carvalue+equipmon+income+card+cardmon'","98aca9dd":"lasso = smf.ols(lasso_eqn, data=ndf).fit()\nprint(lasso.summary())","945ea903":"df_dis","55a9288e":"from matplotlib import pyplot as plt\nimport seaborn as sns","140b5b7f":"sns.boxplot(x=df_dis['debtinc'],data=df_dis)","9c6808ac":"def outlier_miss_treat(x):\n    x = x.clip(lower=x.quantile(0.05),upper=x.quantile(0.95))\n    return x","d6cfcf88":"df_dis=df_dis.apply(outlier_miss_treat)","9263a161":"df_dis['total_spend']=ndf['trans_spend']","3bb95e4e":"cdf=pd.concat([df_dis,df_con],axis=1)","ab272838":"cdf=cdf.apply(outlier_miss_treat)","4168887e":"eqn='total_spend~active+carbuy+carcatvalue+card+card2benefit+card2fee+cardfee+carown+carvalue+churn+creddebt+debtinc+default+edcat+empcat+gender+inccat+internet+othdebt+owncd+owndvd+ownpda+owntv+ownvcr+pets+polcontrib+polparty+reason+response_01+response_02+response_03+retire+telecommute+tenure+union+wiremon'","95d68c83":"lasso_eqn='total_spend~income+card+cardmon'","03653571":"clean= smf.ols(lasso_eqn, data=cdf).fit()\nprint(clean.summary())","4b79f58a":"#after standard data cleaning income, card,cardmon were able to explain 21% of variance in data","316eabca":"print(f1)","a26e9724":"f1='total_spend~inccat+income+card+retire'","e08b77af":"clean= smf.ols(f1, data=cdf).fit()\nprint(clean.summary())","c92ced31":"u='total_spend~card+inccat+income+retire'","53d25115":"clean= smf.ols(u, data=cdf).fit()\nprint(clean.summary())","448338fd":"print(f)","c5b9e8b3":"w='total_spend~carcatvalue+card2benefit+carown+carvalue+churn+creddebt+debtinc+default+edcat+internet+othdebt+ownpda+reason+response_02+tenure'","0b17e00a":"clean= smf.ols(w, data=cdf).fit()\nprint(clean.summary())","82603cad":"print(vif)","ca9d9d94":"v1='total_spend~response_01+response_03+response_02+union+card2fee+cardfee+telecommute+polcontrib+polparty+carbuy+churn+pets+default+active+gender'","797c6ac3":"clean= smf.ols(v1, data=cdf).fit()\nprint(clean.summary())","c3e6dc52":"imp=cdf.loc[:,['card','inccat','income','retire']]","8982ef56":"sns.distplot(imp.income)","8c1471a1":"sns.boxplot(x=imp.income,data=imp)","8e52032a":"sns.boxplot(x=imp.income.clip(upper=imp.income.quantile(0.90)),data=imp)","40569f68":"imp['t_income']=imp.income.clip(upper=imp.income.quantile(0.90))","79e93b88":"cdf['t_income']=imp.income.clip(upper=imp.income.quantile(0.90))","8ba82454":"f3='trans_spend~card+inccat+t_income+retire+creddebt+gender+internet+owndvd+owntv+response_03'","892462a0":"f2='total_spend~card+t_income+retire+creddebt+gender+internet+owndvd+response_03'","7b5ca33d":"clean= smf.ols(f2, data=cdf).fit()\nprint(clean.summary())","b68e4ac7":"### accuracy increased by 1% with two new varibles inccat,retire","7a6337d6":"1.no feature selction done \n2.no outlier  treatment\n","509eab2a":"### model using lasso","7f19bff5":"## model with whole data set","24e59fb4":"total_spend~card+inccat+income+retire'","84f9d984":"### feature engineeering","4697b26b":"## model using f1 and lasso","e797126a":"## model using f regression variables","d59cc147":"#### vif is also giving very bad accuracy","e2d04261":"### f regression is giving very bad accuracy","ccc77847":"## model using f1","bbc368f7":"1.finding right way for outlier treatment \n2.dealing with null values\n3.separate way for extreme outliers","eb6ced62":"### from th above model it's evident that these variables  'carvalue,equipmon,income,card,cardmon' were able to explain almost 20% of variance in the target variable, so we regard them as top 4 key drivers for the  customers spend"}}