{"cell_type":{"3f87f7c1":"code","40a62a86":"code","700b7187":"code","3403e114":"code","f5a802d9":"code","ab6b2a21":"code","da361183":"code","1c6ead4d":"code","5cc4b90e":"code","56f90f5a":"code","6f882237":"markdown","81d9fc8f":"markdown","785e78ae":"markdown","2ba826b0":"markdown","2dfd4dd6":"markdown"},"source":{"3f87f7c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import LogisticRegression\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40a62a86":"data=pd.read_csv('..\/input\/iris\/Iris.csv')\ndata.head()\ndata['Species'].unique()","700b7187":"data['Species']=data['Species'].replace({'Iris-setosa':0,'Iris-versicolor':1,'Iris-virginica':2})\ndata.head()","3403e114":"labels=data['Species']\ndata=data.drop('Species',axis=1)\ndata.head()","f5a802d9":"from sklearn.model_selection import train_test_split\ntrain_data,test_data,train_labels,test_labels=train_test_split(data,labels,test_size=0.2,random_state=25)\ntrain_data.head()","ab6b2a21":"model=LogisticRegression()","da361183":"model.fit(train_data,train_labels)","1c6ead4d":"predictions=model.predict(test_data)","5cc4b90e":"predictions","56f90f5a":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy : \",accuracy_score(predictions,test_labels))","6f882237":"# ACCURACY CALCULATION","81d9fc8f":"# PREDICTION","785e78ae":"# MODEL TRAINING","2ba826b0":"# MODEL CREATION","2dfd4dd6":"# SPLIT DATA"}}