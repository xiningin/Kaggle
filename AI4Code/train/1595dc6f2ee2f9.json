{"cell_type":{"e4d294f3":"code","6c25082b":"code","bcedbb35":"code","a381dff6":"code","3deb5087":"code","67f429db":"code","5538b938":"code","1b66293f":"code","c08a7daa":"code","3a3a2c95":"code","24ba677f":"code","3ac92d70":"code","bf82e815":"code","66613e34":"code","19eb689f":"markdown","3fde1962":"markdown","1aa58dc8":"markdown","faaf5e65":"markdown","1b34190b":"markdown","0a55ff9c":"markdown","94bdd6e9":"markdown"},"source":{"e4d294f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport cv2 as cv\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c25082b":"X = np.load(\"\/kaggle\/input\/sign-language-digits-dataset\/X.npy\")","bcedbb35":"plt.subplot(1,2,1)\nplt.imshow(X[260].reshape(64,64))\nplt.axis(\"off\")\n\nplt.subplot(1,2,2)\nplt.imshow(X[900].reshape(64,64))\nplt.axis(\"off\")\n\nplt.show()","a381dff6":"X = np.concatenate((X[204:409] , X[822:1027]) , axis=0) #0 ve 1 resimlerini sadece kullanmak i\u00e7in\n\nz = np.zeros(205)\no = np.ones(205)\n\ny = np.concatenate((z,o) , axis=0).reshape(X.shape[0] , 1) # Labellar\u0131 olu\u015fturmak","3deb5087":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","67f429db":"X_train = X_train.reshape(X_train.shape[0], 64*64)\nX_test = X_test.reshape(X_test.shape[0], 64*64)","5538b938":"model = LogisticRegression()\nmodel.fit(X_train, y_train)","1b66293f":"model.score(X_test, y_test)","c08a7daa":"img_zero = cv.imread(\"\/kaggle\/input\/prediction-sign-languages\/0.jpg\")\n\nplt.imshow(img_zero)\nplt.axis(\"off\")\nplt.show()","3a3a2c95":"img_zero = np.array(cv.cvtColor(img_zero , cv.COLOR_BGR2GRAY))\nimg_zero = cv.resize(img_zero, (64,64))\nimg_zero = img_zero.reshape(1,64*64)","24ba677f":"model.predict(img_zero)","3ac92d70":"img_one = cv.imread(\"\/kaggle\/input\/prediction-sign-languages\/1.jpg\")\n\nplt.imshow(img_one)\nplt.axis(\"off\")\nplt.show()","bf82e815":"img_one = np.array(cv.cvtColor(img_one , cv.COLOR_BGR2GRAY))\nimg_one = cv.resize(img_one, (64,64))\nimg_one = img_one.reshape(1,64*64)","66613e34":"model.predict(img_one)","19eb689f":"## Metric","3fde1962":"## Create Model & Fit","1aa58dc8":"### One","faaf5e65":"## Preprocessing","1b34190b":"# Logistic Regression\n## Load Dataset","0a55ff9c":"## Prediction with Data Outside of the Dataset (Base of Image)","94bdd6e9":"### Zero"}}