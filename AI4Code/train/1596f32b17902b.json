{"cell_type":{"f973fb52":"code","a72ae11a":"code","ab99cebb":"code","687ecff4":"code","82bbafe9":"code","f9790510":"code","0b8ac6e2":"code","a9df27f1":"code","153a8f35":"code","9f3f7345":"code","98e1d72e":"code","2c842471":"code","e838e775":"code","b3d2f1ce":"code","18d333bf":"code","63481deb":"code","0a2ef3f4":"code","c44a8c67":"code","fdad0351":"code","9a4ba092":"code","81b0c38c":"code","8f89f947":"code","8c2fca59":"code","b6f405ce":"code","bbffb8ea":"code","32aa2b40":"code","23ad41f0":"code","e95a5bc2":"code","6d9859d0":"code","95fba9ee":"code","29cf6de4":"code","bf29f333":"code","7889101b":"code","c08dc36e":"code","f096c7c7":"code","03028d92":"code","d7bbe5d3":"code","8bdce6a2":"code","8c9f236e":"code","3f263161":"code","c4af3dd8":"code","1ec19af4":"code","a49995ed":"code","5b5a7dca":"code","041b07e9":"code","28a4bf42":"code","78a97da4":"code","94ef6ab7":"code","afb370df":"code","f8589569":"code","8b6aad7c":"code","1ffd70b3":"code","7786da46":"code","98ee6fba":"code","0e4f8347":"code","3025b6f0":"code","91a377dd":"code","1c53b791":"code","263caebf":"code","88bc5c35":"markdown","2ed89c1b":"markdown","b158204b":"markdown","807818b1":"markdown","b80d400a":"markdown","19af404b":"markdown","a33d0696":"markdown","9a7bc857":"markdown","ea0c46a4":"markdown","7dfd55c0":"markdown","6c20a087":"markdown","da31c1d5":"markdown","10faf3e4":"markdown","5e277063":"markdown","a7cc8eb2":"markdown","92e5efd3":"markdown","e785a7bb":"markdown","4bccc240":"markdown","704deaf1":"markdown","1ab18f13":"markdown","fb9ee73e":"markdown","df448b29":"markdown","60e768df":"markdown","49bdbec4":"markdown","f89a1f72":"markdown"},"source":{"f973fb52":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport seaborn as sns\nimport matplotlib.pyplot as plt","a72ae11a":"data_types_dict = {\n    'row_id': 'int64',\n    'timestamp': 'int64',\n    'user_id': 'int32',\n    'content_id': 'int16',\n    'content_type_id': 'int8',\n#     'task_container_id': 'int16',\n#     'user_answer': 'int8',\n    'answered_correctly': 'int8',\n    'prior_question_elapsed_time': 'float16',\n    'prior_question_had_explanation': 'boolean'\n}","ab99cebb":"train_df = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv', \n                       nrows=10**7,\n                       usecols = data_types_dict.keys(),\n                       dtype=data_types_dict, \n                       index_col = 0)","687ecff4":"train_df.head(10)","82bbafe9":"train_df.info()","f9790510":"train_df.describe()","0b8ac6e2":"train_df['timestamp'].hist(bins = 100)","a9df27f1":"grouped_by_user_df = train_df.groupby('user_id')","153a8f35":"grouped_by_user_df.agg({'timestamp': 'max'}).hist(bins = 100)","9f3f7345":"(train_df['answered_correctly']==-1).mean()","98e1d72e":"train_questions_only_df = train_df[train_df['answered_correctly']!=-1]\ntrain_questions_only_df['answered_correctly'].mean()","2c842471":"grouped_by_user_df = train_questions_only_df.groupby('user_id')","e838e775":"user_answers_df = grouped_by_user_df.agg({'answered_correctly': ['mean', 'count'] })\n\nuser_answers_df[('answered_correctly','mean')].hist(bins = 100)","b3d2f1ce":"user_answers_df[('answered_correctly','count')].hist(bins = 100)","18d333bf":"(user_answers_df[('answered_correctly','count')]< 50).mean()","63481deb":"user_answers_df[user_answers_df[('answered_correctly','count')]< 50][('answered_correctly','mean')].mean()","0a2ef3f4":"user_answers_df[user_answers_df[('answered_correctly','count')]< 50][('answered_correctly','mean')].hist(bins = 100)","c44a8c67":"user_answers_df[user_answers_df[('answered_correctly','count')] >= 50][('answered_correctly','mean')].hist(bins = 100)","fdad0351":"user_answers_df[user_answers_df[('answered_correctly','count')] >= 50][('answered_correctly','mean')].mean()","9a4ba092":"user_answers_df[user_answers_df[('answered_correctly','count')] >= 500][('answered_correctly','mean')].hist(bins = 100)","81b0c38c":"plt.scatter(x = user_answers_df[('answered_correctly','count')], y=user_answers_df[ ('answered_correctly','mean')])","8f89f947":"grouped_by_content_df = train_questions_only_df.groupby('content_id')","8c2fca59":"content_answers_df = grouped_by_content_df.agg({'answered_correctly': ['mean', 'count'] })","b6f405ce":"content_answers_df[('answered_correctly','count')].hist(bins = 100)","bbffb8ea":"content_answers_df[('answered_correctly','mean')].hist(bins = 100)","32aa2b40":"content_answers_df[content_answers_df[('answered_correctly','count')]>50][('answered_correctly','mean')].hist(bins = 100)","23ad41f0":"questions_df = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/questions.csv')","e95a5bc2":"questions_df","6d9859d0":"print(f\"There are {len(questions_df['part'].unique())} different parts\")","95fba9ee":"questions_df['tags'].values[-1]","29cf6de4":"unique_tags = set().union(*[y.split() for y in questions_df['tags'].astype(str).values])\nprint(f\"There are {len(unique_tags)} different tags\")","bf29f333":"(questions_df['question_id'] != questions_df['bundle_id']).mean()","7889101b":"train_df = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                       usecols = data_types_dict.keys(),\n                       dtype=data_types_dict, \n                       index_col = 0)","c08dc36e":"features_part_df = train_df.iloc[:int(9 \/10 * len(train_df))]\ntrain_part_df = train_df.iloc[int(9 \/10 * len(train_df)):]","f096c7c7":"train_questions_only_df = features_part_df[features_part_df['answered_correctly']!=-1]\ngrouped_by_user_df = train_questions_only_df.groupby('user_id')\nuser_answers_df = grouped_by_user_df.agg({'answered_correctly': ['mean', 'count']}).copy()\nuser_answers_df.columns = ['mean_user_accuracy', 'questions_answered']","03028d92":"grouped_by_content_df = train_questions_only_df.groupby('content_id')\ncontent_answers_df = grouped_by_content_df.agg({'answered_correctly': ['mean', 'count'] }).copy()\ncontent_answers_df.columns = ['mean_accuracy', 'question_asked']","d7bbe5d3":"questions_df = questions_df.merge(content_answers_df, left_on = 'question_id', right_on = 'content_id', how = 'left')","8bdce6a2":"bundle_dict = questions_df['bundle_id'].value_counts().to_dict()","8c9f236e":"questions_df['right_answers'] = questions_df['mean_accuracy'] * questions_df['question_asked']\nquestions_df['bundle_size'] =questions_df['bundle_id'].apply(lambda x: bundle_dict[x])","3f263161":"questions_df","c4af3dd8":"grouped_by_bundle_df = questions_df.groupby('bundle_id')\nbundle_answers_df = grouped_by_bundle_df.agg({'right_answers': 'sum', 'question_asked': 'sum'}).copy()\nbundle_answers_df.columns = ['bundle_rignt_answers', 'bundle_questions_asked']\nbundle_answers_df['bundle_accuracy'] = bundle_answers_df['bundle_rignt_answers'] \/ bundle_answers_df['bundle_questions_asked']\nbundle_answers_df","1ec19af4":"grouped_by_part_df = questions_df.groupby('part')\npart_answers_df = grouped_by_part_df.agg({'right_answers': 'sum', 'question_asked': 'sum'}).copy()\npart_answers_df.columns = ['part_rignt_answers', 'part_questions_asked']\npart_answers_df['part_accuracy'] = part_answers_df['part_rignt_answers'] \/ part_answers_df['part_questions_asked']\npart_answers_df","a49995ed":"del train_df\ndel features_part_df\ndel grouped_by_user_df\ndel grouped_by_content_df","5b5a7dca":"import gc\ngc.collect()","041b07e9":"features = ['timestamp','mean_user_accuracy', 'questions_answered','mean_accuracy', 'question_asked',\n            'prior_question_elapsed_time', 'prior_question_had_explanation',\n           'bundle_size', 'bundle_accuracy','part_accuracy', 'right_answers']\ntarget = 'answered_correctly'","28a4bf42":"train_part_df = train_part_df[train_part_df[target] != -1]","78a97da4":"train_part_df = train_part_df.merge(user_answers_df, how = 'left', on = 'user_id')\ntrain_part_df = train_part_df.merge(questions_df, how = 'left', left_on = 'content_id', right_on = 'question_id')\ntrain_part_df = train_part_df.merge(bundle_answers_df, how = 'left', on = 'bundle_id')\ntrain_part_df = train_part_df.merge(part_answers_df, how = 'left', on = 'part')","94ef6ab7":"train_part_df['prior_question_had_explanation'] = train_part_df['prior_question_had_explanation'].fillna(value = False).astype(bool)\ntrain_part_df.fillna(value = -1, inplace = True)","afb370df":"train_part_df.columns","f8589569":"train_part_df = train_part_df[features + [target]]","8b6aad7c":"train_part_df","1ffd70b3":"from sklearn.metrics import roc_auc_score","7786da46":"from lightgbm import LGBMClassifier","98ee6fba":"lgbm = LGBMClassifier(\n    num_leaves=31, \n    max_depth= 2, \n    n_estimators = 25, \n    min_child_samples = 1000, \n    subsample=0.7, \n    subsample_freq=5,\n    n_jobs= -1,\n    is_higher_better = True,\n    first_metric_only = True\n)","0e4f8347":"lgbm.fit(train_part_df[features], train_part_df[target])","3025b6f0":"roc_auc_score(train_part_df[target].values, lgbm.predict_proba(train_part_df[features])[:,1])","91a377dd":"import riiideducation\n\nenv = riiideducation.make_env()","1c53b791":"iter_test = env.iter_test()","263caebf":"for (test_df, sample_prediction_df) in iter_test:\n    test_df = test_df.merge(user_answers_df, how = 'left', on = 'user_id')\n    test_df = test_df.merge(questions_df, how = 'left', left_on = 'content_id', right_on = 'question_id')\n    test_df = test_df.merge(bundle_answers_df, how = 'left', on = 'bundle_id')\n    test_df = test_df.merge(part_answers_df, how = 'left', on = 'part')\n    \n    test_df['prior_question_had_explanation'] = test_df['prior_question_had_explanation'].fillna(value = False).astype(bool)\n    test_df.fillna(value = -1, inplace = True)\n\n    test_df['answered_correctly'] = lgbm.predict_proba(test_df[features])[:,1]\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])","88bc5c35":"# Train data","2ed89c1b":"Let's create additional features using `questions_df`","b158204b":"My other materials on this competition:\n- Double validation (against target leakage): https:\/\/www.kaggle.com\/ilialar\/riiid-5-folds-double-validation\n- Dataset with pretrained models and feature generators: https:\/\/www.kaggle.com\/ilialar\/riiid-models","807818b1":"The distribution of the max timestamp for each user looks similar. It seems most users leave the platform quite soon (at least based on partial data we analyze).","b80d400a":"Timestamp, the average score for the active user, and the number of questions answered can be useful for baseline.","19af404b":"Different questions have different popularity and complexity, and it can also be used in the baseline.","a33d0696":"### Answers by content","9a7bc857":"`timestamp` represents the time from the first user interaction to the current one. It is expected that the distribution looks like this.","ea0c46a4":"Let's look into the `questions.csv` file","7dfd55c0":"The `train.csv` file is too large for kaggle kernel. You will get a memory error if you try to load it all without specifying types. We will ignore some columns for now to save RAM and load only 10M rows.","6c20a087":"~2% of activities are lectures, we should exclude them for answers analysis.","da31c1d5":"This notebook contains an elementary analysis of 'train.csv' and rule based baseline. I will further develop it during the competition.\nHere I analyze the distributions of different features, generate aggregeted features based on 90% of historical data and then train the model on the rest 10%.","10faf3e4":"On average users answer ~66% questions correctly. Let's look how it is different from user to user.","5e277063":"Let's look at the data and main columns properties:","a7cc8eb2":"Look's noisy, let's clear it a little bit","92e5efd3":"# Baseline","e785a7bb":"We can see that active users do much better than novices. But anyway average user score is lower than the overall % of correct answers. It means heavy users have even better scores. Let's look at them.","4bccc240":"54% of users answered less than 50 questions. Let's divide all users into novices and active users.","704deaf1":"# Questions.csv","1ab18f13":"### Answers by users","fb9ee73e":"Let's look at some columns more precisely.","df448b29":"We can create aggregated features using the data from this file as well.","60e768df":"## Answered correctly","49bdbec4":"Let's try to use discovered features and use them in model to predict the right answer probability.","f89a1f72":"## timestamp"}}