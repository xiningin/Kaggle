{"cell_type":{"61d9e64c":"code","32fc80db":"code","8cb62d0e":"code","f0cde6f7":"code","10da940f":"code","a26b13f5":"code","7cf963f1":"code","69591e81":"code","53845567":"code","9af5b984":"code","0a3ca1f5":"code","31aeaadb":"code","52c5d267":"code","61d1971c":"code","a40d5d24":"code","7b8fd20f":"code","2fd7d2ea":"code","43ed59ef":"code","79d4e34b":"code","d53947af":"code","38758687":"code","9b6efcc4":"code","e820eaa7":"code","fdf9dec7":"code","bb95b6f6":"code","aedad809":"code","2a9d1301":"code","5cbc0466":"code","31b52c0f":"code","31334b44":"code","2606141b":"code","b860acbb":"code","b8caaf0c":"code","c603f02e":"code","b4ce9dae":"code","3fa81c23":"code","e07038b7":"code","d2e8c0a9":"code","c7600e60":"code","1dd313d4":"code","5f5f7440":"code","5208a22f":"code","fabbd68b":"code","39456ccf":"code","128ea3ac":"code","314badba":"code","903b9080":"code","67e78628":"code","ac852c2d":"code","1049da00":"code","4b70eb87":"code","9e8ba840":"code","7193bc3f":"code","69e24c7c":"code","3b884dcc":"code","a26a0a43":"code","4facee7a":"code","fef0fe3b":"code","ba1830be":"code","c3770671":"code","9067b3c8":"code","abe5bb5f":"code","2533c7fb":"code","125f5d59":"code","ff342c34":"code","761f1a20":"markdown","67906c91":"markdown","4bf2f014":"markdown","2cf1cba2":"markdown","c6816f9a":"markdown","ae3ae48b":"markdown","5fc600ff":"markdown","f57d1a67":"markdown","c52ada83":"markdown","1027bb2a":"markdown","2edec58f":"markdown","05349b44":"markdown","c07d6f42":"markdown","cb4c697e":"markdown","db2d95c6":"markdown","e5bcccea":"markdown","30c84879":"markdown","3fad8300":"markdown"},"source":{"61d9e64c":"# import libraries \nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport datetime as dt\nimport plotly.graph_objects as go","32fc80db":"# import data\ndata = pd.read_csv('..\/input\/covid19-indonesia\/covid_19_indonesia_time_series_all.csv')\ndata.head()","8cb62d0e":"# data information\ndata.info()","f0cde6f7":"# change dtype \"Date\" to datetime dtypes\n# previous dtype for \"Date\" is float and we have to change them to datetime dtypes","10da940f":"import datetime as dt\nNOW = dt.datetime(2020, 2, 1)\ndata['Date'] = pd.to_datetime(data['Date'])","a26b13f5":"data.info()","7cf963f1":"# Date is now on datetime dtypes","69591e81":"# check null data percentage\ndata.isnull().mean()*100","53845567":"# check NaN data percentage in each column\ndata.isna().mean()*100","9af5b984":"# delete column with 100% NaN data\n# 'City or Regency' has 100% null data\ndata = data.drop('City or Regency',axis=1)","0a3ca1f5":"# inspect 'Special Status'\ndata['Special Status'].value_counts()","31aeaadb":"# delete Special Status\ndata = data.drop('Special Status',axis=1)","52c5d267":"# inspect Growth Factor of New Cases and Deaths\ndata['Growth Factor of New Cases'].head(15)","61d1971c":"data['Growth Factor of New Deaths'].head(15)","a40d5d24":"# replace NaN of Growth Factor of New Cases & Deaths with value = 0 dtype = float","7b8fd20f":"data['Growth Factor of New Cases'] = data['Growth Factor of New Cases'].fillna(float(0))\ndata['Growth Factor of New Deaths'] = data['Growth Factor of New Deaths'].fillna(float(0))","2fd7d2ea":"# inspect Province, Island, Time Zone\ndata[['Province','Island','Time Zone']].head(10)","43ed59ef":"# replace NaN of Province, Island, Time Zone with Unknown\ndata.update(data[['Province','Island','Time Zone']].fillna('Unknown'))","79d4e34b":"# inspect Total Rural Villages\ndata[['Location','Province','Total Urban Villages','Total Rural Villages']].head(20)","d53947af":"# replace NaN Total Rural Villages with 0\ndata['Total Rural Villages'] = data['Total Rural Villages'].fillna(float(0))","38758687":"# inspect Total Cities\ndata[['Province','Total Cities','Total Urban Villages','Total Rural Villages']].tail(10)","9b6efcc4":"# replace NaN Total Cities with 0\ndata['Total Cities'] = data['Total Cities'].fillna(float(0))","e820eaa7":"# inspect Total Urban Villages\ndata[['Location','Province','Total Active Cases','Total Cities','Total Urban Villages','Total Rural Villages']].tail(40)","fdf9dec7":"# replace NaN Total Urban Villages with 0\ndata['Total Urban Villages'].fillna(float(0), inplace=True)","bb95b6f6":"# check data information if there is missing value\ndata.isna().mean()*100","aedad809":"# data is now ready to use","2a9d1301":"# extract for all province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_IDN = data[data['Location ISO Code']== 'IDN']\ndata_IDN = data_IDN[columns]","5cbc0466":"# data visualization preparation\ndata_IDN_all= data_IDN.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","31b52c0f":"# data plot\n# plot Indonesia Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_IDN_all['Date'],\n                         y=data_IDN_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_IDN_all['Date'],\n                         y=data_IDN_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_IDN_all['Date'],\n                         y=data_IDN_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_IDN_all['Date'],\n                         y=data_IDN_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Indonesia Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","31334b44":"# data visualization preparation\ndata_IDN_update= data_IDN.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","2606141b":"# data plot\n# plot Indonesia Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_IDN_update['Date'],\n                         y=data_IDN_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_IDN_update['Date'],\n                         y=data_IDN_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_IDN_update['Date'],\n                         y=data_IDN_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_IDN_update['Date'],\n                         y=data_IDN_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Indonesia Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","b860acbb":"# extract for DKI Jakarta province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_JK = data[data['Location ISO Code']== 'ID-JK']\ndata_JK = data_JK[columns]","b8caaf0c":"# data visualization preparation\ndata_JK_all= data_JK.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","c603f02e":"# data plot\n# plot DKI Jakarta Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='DKI Jakarta Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","b4ce9dae":"# data visualization preparation\ndata_JK_update= data_JK.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","3fa81c23":"# data plot\n# plot Indonesia Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='DKI Jakarta Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","e07038b7":"# extract for Jawa Barat province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_JB = data[data['Location ISO Code']== 'ID-JB']\ndata_JB = data_JB[columns]","d2e8c0a9":"# data visualization preparation\ndata_JB_all= data_JB.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","c7600e60":"# data plot\n# plot Jawa Barat Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Barat Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","1dd313d4":"# data visualization preparation\ndata_JB_update= data_JB.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","5f5f7440":"# data plot\n# plot Indonesia Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Barat Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","5208a22f":"# extract for Jawa Tengah province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_JT = data[data['Location ISO Code']== 'ID-JT']\ndata_JT = data_JT[columns]","fabbd68b":"# data visualization preparation\ndata_JT_all= data_JT.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","39456ccf":"# data plot\n# plot Jawa Tengah Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Tengah Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","128ea3ac":"# data visualization preparation\ndata_JT_update= data_JT.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","314badba":"# data plot\n# plot Jawa Tengah Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Tengah Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","903b9080":"# extract for Jawa Timur province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_JI = data[data['Location ISO Code']== 'ID-JI']\ndata_JI = data_JI[columns]","67e78628":"# data visualization preparation\ndata_JI_all= data_JI.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","ac852c2d":"# data plot\n# plot Jawa Timur Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Timur Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","1049da00":"# data visualization preparation\ndata_JI_update= data_JI.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","4b70eb87":"# data plot\n# plot Jawa Timur Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='Jawa Timur Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","9e8ba840":"# extract for Jawa Timur province in Indonesia\ncolumns = ['Date', 'Location ISO Code','New Cases','New Deaths','New Recovered','New Active Cases','Total Cases','Total Deaths','Total Recovered','Total Active Cases','Case Fatality Rate','Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths']\ndata_YO = data[data['Location ISO Code']== 'ID-YO']\ndata_YO = data_YO[columns]","7193bc3f":"# data visualization preparation\ndata_YO_all= data_YO.groupby('Date')[['Total Cases','Total Deaths','Total Recovered','Total Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","69e24c7c":"# data plot\n# plot DI Yogyakarta Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Death Cases',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Case',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='DI Yogyakarta Covid 19 Data Total',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","3b884dcc":"# data visualization preparation\ndata_YO_update= data_YO.groupby('Date')[['New Cases','New Deaths','New Recovered','New Active Cases']].sum().reset_index().sort_values('Date', ascending=True).reset_index(drop=True)","a26a0a43":"# data plot\n# plot DI Yogyakarta Covid 19 cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Active Cases',\n                         marker_color= 'red'\n                         ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Deaths'],\n                         mode='lines',\n                         name='New Deaths',\n                         marker_color='black',\n                         line=dict(dash='dot')\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Recovered'],\n                         mode='lines',\n                         name='New Recovered',\n                         marker_color='green'\n                        ))\n\nfig.update_layout(title='DI Yogyakarta Covid 19 Data Update',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='New Cases'\n                 )\nfig.show()","4facee7a":"# you can continue the others province","fef0fe3b":"# data plot\n# plot All Province Covid 19 total cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Cases'],\n                         mode='lines',\n                         name= 'Total Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Cases'],\n                         mode='lines',\n                         name='Total Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Cases'],\n                         mode='lines',\n                         name='Total Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Cases'],\n                         mode='lines',\n                         name='Total Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Cases'],\n                         mode='lines',\n                         name='Total Cases DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 Total Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","ba1830be":"# data plot\n# plot All Province Covid 19 total active cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Active Cases'],\n                         mode='lines',\n                         name= 'Total Active Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Active Cases'],\n                         mode='lines',\n                         name='Total Active Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Active Cases'],\n                         mode='lines',\n                         name='Total Active Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Active Cases'],\n                         mode='lines',\n                         name='Total Active Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Active Cases'],\n                         mode='lines',\n                         name='Total Active DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 Total Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","c3770671":"# data plot\n# plot All Province Covid 19 death cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Deaths'],\n                         mode='lines',\n                         name= 'Total Deaths DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Deaths Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Deaths Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Deaths Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Deaths'],\n                         mode='lines',\n                         name='Total Deaths DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='All Province Covid 19 Total Deaths',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","9067b3c8":"# data plot\n# plot All Province Covid 19 recovered cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_all['Date'],\n                         y=data_JK_all['Total Recovered'],\n                         mode='lines',\n                         name= 'Total Recovered DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_all['Date'],\n                         y=data_JB_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_all['Date'],\n                         y=data_JT_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_all['Date'],\n                         y=data_JI_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_all['Date'],\n                         y=data_YO_all['Total Recovered'],\n                         mode='lines',\n                         name='Total Recovered DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\n\nfig.update_layout(title='All Province Covid 19 Total Recovered',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Total'\n                 )\nfig.show()","abe5bb5f":"# data plot\n# plot All Province Covid 19 new cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Cases'],\n                         mode='lines',\n                         name= 'New Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Cases'],\n                         mode='lines',\n                         name='New Cases DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 New Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Cases'\n                 )\nfig.show()","2533c7fb":"# data plot\n# plot All Province Covid 19 new active cases\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Active Cases'],\n                         mode='lines',\n                         name= 'New Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Active Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Active Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Active Cases'],\n                         mode='lines',\n                         name='New Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Active Cases'],\n                         mode='lines',\n                         name='New Cases DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 New Active Cases',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Cases'\n                 )\nfig.show()","125f5d59":"# data plot\n# plot All Province Covid 19 new deaths\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Deaths'],\n                         mode='lines',\n                         name= 'New Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Deaths'],\n                         mode='lines',\n                         name='New Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Deaths'],\n                         mode='lines',\n                         name='New Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Deaths'],\n                         mode='lines',\n                         name='New Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Deaths'],\n                         mode='lines',\n                         name='New Cases DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 New Deaths',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Cases'\n                 )\nfig.show()","ff342c34":"# data plot\n# plot All Province Covid 19 new recovered\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=data_JK_update['Date'],\n                         y=data_JK_update['New Recovered'],\n                         mode='lines',\n                         name= 'New Cases DKI Jakarta'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JB_update['Date'],\n                         y=data_JB_update['New Recovered'],\n                         mode='lines',\n                         name='New Cases Jawa Barat',\n                         marker_color='lightgreen'\n                        ))\n\n\nfig.add_trace(go.Scatter(x=data_JT_update['Date'],\n                         y=data_JT_update['New Recovered'],\n                         mode='lines',\n                         name='New Cases Jawa Tengah',\n                         marker_color='red'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_JI_update['Date'],\n                         y=data_JI_update['New Recovered'],\n                         mode='lines',\n                         name='New Cases Jawa Timur',\n                         marker_color='violet'\n                        ))\n\nfig.add_trace(go.Scatter(x=data_YO_update['Date'],\n                         y=data_YO_update['New Recovered'],\n                         mode='lines',\n                         name='New Cases DI Yogyakarta',\n                         marker_color='orange'\n                        ))\n\nfig.update_layout(title='Each Province Covid 19 New Recovered',\n                 template='plotly_white',\n                 xaxis_title='Date',\n                 yaxis_title='Cases'\n                 )\nfig.show()","761f1a20":"# Data Preparation","67906c91":"# Jawa Tengah","4bf2f014":"# New Deaths Each Province of Indonesia","2cf1cba2":"# New Recovered Each Province of Indonesia","c6816f9a":"# Total Deaths Each Province of Indonesia","ae3ae48b":"# Data Cleaning","5fc600ff":"# New Cases Each Province of Indonesia","f57d1a67":"# DI Yogyakarta","c52ada83":"# DKI Jakarta","1027bb2a":"# Indonesia Covid 19 Visualization","2edec58f":"# New Active Cases Each Province of Indonesia","05349b44":"# Import Libraries and Data","c07d6f42":"Hai all,\nI'm beginner on python programming and data visualization.\nI'm using data set of covid 19 on https:\/\/www.kaggle.com\/hendratno\/covid19-indonesia)\nAnd I'm learning data visualization from https:\/\/www.kaggle.com\/fmolana16\/covid-19-indonesia-data-processing-visualization","cb4c697e":"# Total Recovered Each Province of Indonesia","db2d95c6":"# Total Active Cases Each Province of Indonesia","e5bcccea":"# Jawa Barat","30c84879":"# Jawa Timur","3fad8300":"# Total Cases Each Province of Indonesia"}}