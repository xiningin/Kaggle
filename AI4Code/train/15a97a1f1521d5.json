{"cell_type":{"93ab7be4":"code","dc03671f":"code","ef4902d5":"code","5a902144":"code","353851d2":"code","07804af3":"code","2bfeb020":"code","daf69b9f":"code","538c495c":"code","c11310bc":"code","76eef6b6":"code","5692f7de":"code","cda61c43":"code","27639120":"code","bd08901f":"code","8dd01dad":"code","5c3bd36c":"code","e7fa3a25":"code","c1e7a4fb":"code","a04b766d":"code","9d2d55c6":"code","72ebbfb6":"code","ffd60758":"code","44083cbc":"code","6bade1e4":"code","fadd2d6e":"code","125fd7d9":"markdown","ce698625":"markdown","44b9eeec":"markdown","c0012e69":"markdown","1a3d7c20":"markdown","175edc2d":"markdown","66351221":"markdown","5d4a8498":"markdown","b46eac78":"markdown","83e5ade3":"markdown","797efccb":"markdown","e2c064a7":"markdown","f0f15882":"markdown","313cafed":"markdown","0078b4da":"markdown"},"source":{"93ab7be4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.pipeline import make_pipeline\nfrom PIL import Image, ImageGrab\n%matplotlib inline\n","dc03671f":"train=pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest=pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\nsample=pd.read_csv(\"..\/input\/digit-recognizer\/sample_submission.csv\")","ef4902d5":"train.describe()","5a902144":"test.describe()","353851d2":"train.info()","07804af3":"y = train.iloc[:,0]\nX = train.iloc[:,1:]\nX.shape","2bfeb020":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(train.iloc[i,1:].to_numpy().reshape((28,28)), cmap=plt.cm.binary)\n    plt.xlabel([train.iloc[i,0]])\nplt.show()","daf69b9f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","538c495c":"len(X_train)","c11310bc":"from sklearn.svm import SVC\nmodel = SVC(kernel=\"rbf\")\nmodel.fit(X_train, y_train)","76eef6b6":"pre=model.predict(X_test)\npre.shape","5692f7de":"y_test.shape","cda61c43":"model.score(X_test,y_test)","27639120":"from sklearn.metrics import accuracy_score,r2_score,classification_report\naccuracy_score(y_test,pre)","bd08901f":"print(classification_report(y_test,pre))","8dd01dad":"r2_score(y_test,pre)","5c3bd36c":"predictions=model.predict(test)","e7fa3a25":"predictions.shape","c1e7a4fb":"sample.shape","a04b766d":"sample['Label']=predictions.astype(int)\nsample","9d2d55c6":"sample.to_csv(\"sample_submission.csv\")","72ebbfb6":"model_C = SVC(C=1)\nmodel_C.fit(X_train, y_train)\nmodel_C.score(X_test, y_test)","ffd60758":"model_C = SVC(C=10)\nmodel_C.fit(X_train, y_train)\nmodel_C.score(X_test, y_test)","44083cbc":"model_g = SVC(gamma=10)\nmodel_g.fit(X_train, y_train)\nmodel_g.score(X_test, y_test)","6bade1e4":"model_linear_kernal = SVC(kernel='linear')\nmodel_linear_kernal.fit(X_train, y_train)","fadd2d6e":"model_linear_kernal.score(X_test, y_test)","125fd7d9":"## Description \n The data files train.csv and test.csv contain gray-scale images of hand-drawn digits, from zero through nine.\n\nEach image is 28 pixels in height and 28 pixels in width, for a total of 784 pixels in total. Each pixel has a single pixel-value associated with it, indicating the lightness or darkness of that pixel, with higher numbers meaning darker. This pixel-value is an integer between 0 and 255, inclusive.\n\nThe training data set, (train.csv), has 785 columns. The first column, called \"label\", is the digit that was drawn by the user. The rest of the columns contain the pixel-values of the associated image.\n","ce698625":"_______________________\n## Assigning target and independent variables","44b9eeec":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRT85T6NEpaKqjG9OuBKEtQbjivKE2Vcva--g&usqp=CAU)","c0012e69":"____________________________________\n\n## Visualizing the handwritten image","1a3d7c20":"_________________\n\n# MNIST Multi-Classification problem using Support Vector Machine \n\n\n\n\n\n-----------\n\n\n\n","175edc2d":"## Tuning parameters","66351221":"**2. Gamma**","5d4a8498":"#### Reading the data from Kaggle datasets","b46eac78":"__________________________________________________\n\n## Training the model Using Support Vector Machine (SVM)","83e5ade3":"**3. Kernel**","797efccb":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSRYGdQs6W2DkQLKdh43RYcKhVhvfpcUQWWdg&usqp=CAU)","e2c064a7":"# Please upvote my kernel if you liked it and do share your feedback.","f0f15882":"**1. Regularization (C)**","313cafed":"## Main Libraries that are needed to ","0078b4da":"____________________________\n\n## Saving file as .csv for submission "}}