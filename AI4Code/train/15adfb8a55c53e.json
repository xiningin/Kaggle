{"cell_type":{"5b7237cc":"code","ec8f0811":"code","18b1732f":"code","183325ae":"code","fe24c1da":"code","75d735f2":"code","d64f80e2":"code","9a651b46":"code","d781ba2d":"code","9ba4b0b0":"code","9bec4fb9":"code","ec4c6b89":"code","c81d50f8":"code","77a8ecc8":"code","7cd97136":"code","ac472765":"code","bb072ce5":"code","3e1f0091":"code","90b2d778":"markdown","9f4ede6c":"markdown","1ce39f83":"markdown","b1b5bd12":"markdown","b90be4ce":"markdown"},"source":{"5b7237cc":"#1.1\na = 3\nif a>5:\n    print('A big number')\nelse:\n    print('A small number')\nprint('Size matters!')","ec8f0811":"#1.2\na = 6\nif a>5:\n    print('A big number')\nelse:\n    if a>4:\n        print('medium large')\n    elif a<0:\n        print('negative')\n    else:\n        print('small')\n","18b1732f":"#1.3\na=4.2\nif a>5:\n    print('A big number')\nelse:\n    if a>4:\n        print('medium large')\n    elif a<0:\n        print('negative')\n    else:\n        print('small')","183325ae":"#1.4\na=2\nif a>5:\n    print('A big number')\nelse:\n    if a>4:\n        print('medium large')\n    elif a<0:\n        print('negative')\n    else:\n        print('small')","fe24c1da":"#1.5\nfor i in range(10):\n    if i%2==0:\n        print(str(i)+' is even')\n    else:\n        print(str(i)+' is odd')","75d735f2":"#1.6\nfor i in range(10):\n    print(str(i)+' is even'*(1-i%2)+' is odd'*(i%2))","d64f80e2":"#1.7\nfor i in range(10):\n    print(str(i)+' is even'*(i%2==0)+' is odd'*(i%2!=0))","9a651b46":"#1.8\ni = 0\nwhile i<10:\n    print(i)\n    i = i+1","d781ba2d":"#1.9\ni = 0\nwhile i<10:\n    i = i+1\n    print(i)\n","9ba4b0b0":"#1.10\ni = 0\nwhile i<10:\n    i = i+1\n    print(i)\n    if i%2!=0:\n        i = 2*i","9bec4fb9":"#1.11\nmylist = [3, 7.2, 5.1, 6, 9.3, 4.2]\nlistsum = 0\nfor i in mylist:\n    listsum = listsum+i\nprint(listsum)","ec4c6b89":"#1.12\nmylist = [3, 7.2, 5.1, 6, 9.3, 4.2]\nmysterynumber = mylist[0]\nfor i in mylist:\n    if i>mysterynumber:\n        mysterynumber=i\nprint(mysterynumber)","c81d50f8":"#1.13\nmylist = [3, 7.2, 5.1, 6, 9.3, 4.2]\nlength = len(mylist)\nlistmax = mylist[0]\nfor i in mylist:\n    if i>listmax:\n        listmax=i\nmylist.remove(listmax)\nmylist = mylist+[listmax]\nprint(mylist)","77a8ecc8":"#2.1\na = 5\nif a>5\n    print('big number')","7cd97136":"#2.2\na = 5\nif a=5:\n    print('a=5')","ac472765":"#2.3\na = 5\nif a==4 or ==5:\n    print('answer found')","bb072ce5":"#2.4\nsquares = [n**2 for n in range(20)]\nfor i in squares:\n    print(j)","3e1f0091":"#2.5\n# This code contains an error which makes it run forever. to stop it you will need to press the \"Stop session button at the top right\"\ni = 0\nwhile i<10:\n    print(i)","90b2d778":"This exercise set contains a number of questions. Comments and answers where needed are provided at the end.\n\nIn code sections a hashtag is used for a a *comment*. This is a line of text that is used for explanation. It is not code and is ignored by Python","9f4ede6c":"Comments on parts\n1. \n   1. The last print statement always runs\n   2. Can you see why \"medium large\" is not printed?\n   3. No comment\n   4. No comment\n   5. Remember that `i%2` gives the remainder when `i` is divided by 2\n   6. Multiplying a string by 0 or 1 makes it disappear or appear in the answer\n   7. True=1 and False=0 in arithmetic\n   8. No comment\n   9. Notice how when you increase `i` is important\n   10. Messing around with the counter means some terms never appear!\n   11. Of course, Python actually has a built in function to sum a list!\n   12. Did you spot that this gives the largest number in the list? How would you modify to get the smallest?\n   13. This code fragment finds the largest number, removes it and then re-inserts it at the end. Can you see how we might extend this to give a method to completely sort the list?\n2. \n   1. Python expects a colon to end an `if` statement. \n   2. `a=5` is an instruction to store 5 in the variable `a`. We need `a==5` to test the vlue of `a`\n   3. Python understands `or`, but `==5` does not test anything. We need ` a==4 or a==5`\n   4. It's very easy to get variables mixed up if you don't use descriptive names. It might be better to write `for square in squares:`\n   5. Since `i` is never increased, the condition `i<10` is always true and the code will run forever.","1ce39f83":"# Larn Yersel Python\n## Exercise 2","b1b5bd12":"1) Read through the next code blocks. Try to predict what the output will be and then run the code.","b90be4ce":"2) Here are some code fragments with mistakes. Try to spot the mistake and then run to see if you are right."}}