{"cell_type":{"9383f64d":"code","d1aa5194":"code","cca5ed58":"code","4d9b5658":"code","501ede82":"code","f34132eb":"code","c21e12f1":"code","4f48a3fe":"code","613ad00a":"code","bcda97da":"code","17e5413d":"code","2f48d055":"code","74dd113b":"code","0c2216f9":"code","2af47494":"code","c31293b0":"code","192fbcb8":"code","9a6e006c":"code","f0c06207":"code","e685e000":"code","2d304d92":"code","c13673c3":"code","e760b1d4":"code","cad3d7d2":"code","b4c320de":"code","02f2282a":"code","e915034a":"code","435a0bc8":"code","176f2775":"code","8575beeb":"code","616c02bf":"code","13d8be75":"code","03f20629":"code","402c57f2":"code","9ec3d051":"code","60c9ae70":"code","525bde2b":"code","609fbc18":"code","fed8ad79":"code","3b52ab97":"code","cedf0797":"code","5ebfe8d2":"code","d4374f30":"code","c1a4d8ec":"code","b082af1d":"code","4a41ee34":"code","adcbb8cb":"code","357da8fa":"code","be4916d3":"code","56d0e377":"code","6a7a1cd6":"code","2819a221":"code","9bf82406":"code","3a336fe6":"code","46a1d404":"code","af91431e":"code","eeed20f6":"code","9d5687d4":"code","83fe0cea":"code","0072db93":"code","f1e921bd":"code","88d702ec":"code","0235184e":"code","9677a963":"code","f3d9869a":"code","fb45f791":"code","c33da6e9":"code","3b72ff55":"code","8a134ab6":"code","13c72726":"code","21d2f176":"code","edefff92":"code","ea31fbb4":"code","d5608b87":"code","25019856":"code","a2b47ca3":"code","f6045375":"code","4e104ed2":"code","c73ec747":"code","e4143b40":"code","15039494":"code","b5fb9332":"code","32cd6514":"code","bcd04a61":"markdown","ee81b852":"markdown","51d1074c":"markdown","f7201888":"markdown","88ca8fe9":"markdown","c19ef493":"markdown","64851e72":"markdown","e3e221b1":"markdown","dc88f740":"markdown","5f06bed0":"markdown","369d78f0":"markdown","6f5d4867":"markdown","e510a06c":"markdown","dcc4b8ab":"markdown","97953bd1":"markdown","9721f44b":"markdown","cd59c5bc":"markdown","58197aed":"markdown","0fce8e71":"markdown"},"source":{"9383f64d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1aa5194":"data = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')\ndata.head()","cca5ed58":"data.describe()","4d9b5658":"data.info()","501ede82":"print('La cantidad de datos y columnas son: ',data.shape)\nprint(data.dtypes)","f34132eb":"data.isnull().sum()","c21e12f1":"data.isnull().any()","4f48a3fe":"data.hist(figsize=(20,14))\nplt.show()","613ad00a":"data.corr()","bcda97da":"plt.figure(figsize = (8,10))\n\nsns.heatmap(data.corr(), annot =True)","17e5413d":"data.columns","2f48d055":"plt.figure(figsize=(14,10))\nsns.set_style(style='whitegrid')\nplt.subplot(2,3,1)\nsns.boxplot(x='Unit price',data=data)\nplt.subplot(2,3,2)\nsns.boxplot(x='Quantity',data=data)\nplt.subplot(2,3,3)\nsns.boxplot(x='Total',data=data)\nplt.subplot(2,3,4)\nsns.boxplot(x='cogs',data=data)\nplt.subplot(2,3,5)\nsns.boxplot(x='Rating',data=data)\nplt.subplot(2,3,6)\nsns.boxplot(x='gross income',data=data)","74dd113b":"sns.pairplot(data=data)","0c2216f9":"sns.regplot(x='Rating', y= 'gross income', data=data)","2af47494":"sns.scatterplot(x='Rating', y= 'cogs', data=data)","c31293b0":"sns.jointplot(x='Rating', y= 'Total', data=data)","192fbcb8":"plt.style.use(\"default\")\n\nsns.kdeplot(x='Rating', y= 'Unit price', data=data)","9a6e006c":"sns.lineplot(x='Rating', y= 'Unit price', data=data)","f0c06207":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Rating\", y=\"Unit price\", data=data[170:180])\nplt.title(\"Rating vs Unit Price\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Unit Price\")\nplt.show()","e685e000":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Rating\", y=\"Quantity\", data=data[170:180])\nplt.title(\"Rating vs Quantity\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Quantity\")\nplt.show()","2d304d92":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Rating\", y=\"Gender\", data=data[170:180])\nplt.title(\"Rating vs Gender\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Gender\")\nplt.show()","c13673c3":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Quantity\", y=\"Gender\", data=data[170:180])\nplt.title(\"Quantity vs Gender\",fontsize=15)\nplt.xlabel(\"Quantity\")\nplt.ylabel(\"Gender\")\nplt.show()","e760b1d4":"list_1=list(data.columns)\nlist_cate=[]\nfor i in list_1:\n    if data[i].dtype=='object':\n        list_cate.append(i)","cad3d7d2":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","b4c320de":"for i in list_cate:\n    data[i]=le.fit_transform(data[i])\ndata","02f2282a":"y=data['Gender']\nx=data.drop('Gender',axis=1)","e915034a":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.2)","435a0bc8":"print(len(x_train))\nprint(len(x_test))\nprint(len(y_train))\nprint(len(y_test))","176f2775":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=7)\n\nknn.fit(x_train,y_train)","8575beeb":"y_pred=knn.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",knn.score(x_train,y_train)*100)","616c02bf":"from sklearn.svm import SVC\n\nsvc = SVC()\nsvc.fit(x_train, y_train)","13d8be75":"y_pred=svc.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",svc.score(x_train,y_train)*100)","03f20629":"from sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(x_train,y_train)","402c57f2":"y_pred=gnb.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",gnb.score(x_train,y_train)*100)","9ec3d051":"from sklearn.tree import DecisionTreeClassifier\ndtree = DecisionTreeClassifier(max_depth=6, random_state=123,criterion='entropy')\n\ndtree.fit(x_train,y_train)","60c9ae70":"y_pred=dtree.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",dtree.score(x_train,y_train)*100)","525bde2b":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)","609fbc18":"y_pred=rfc.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",rfc.score(x_train,y_train)*100)","fed8ad79":"from sklearn.ensemble import AdaBoostClassifier\nadb = AdaBoostClassifier(base_estimator = None)\nadb.fit(x_train,y_train)","3b52ab97":"y_pred=adb.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",adb.score(x_train,y_train)*100)","cedf0797":"from sklearn.ensemble import GradientBoostingClassifier\ngbc=GradientBoostingClassifier()\ngbc.fit(x_train,y_train)","5ebfe8d2":"y_pred=gbc.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",gbc.score(x_train,y_train)*100)","d4374f30":"from sklearn.ensemble import ExtraTreesClassifier\netc = ExtraTreesClassifier(n_estimators=100, random_state=0)\netc.fit(x_train,y_train)","c1a4d8ec":"y_pred=etc.predict(x_test)\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(\"Classification Report is:\\n\",classification_report(y_test,y_pred))\nprint(\"Confusion Matrix:\\n\",confusion_matrix(y_test,y_pred))\nprint(\"Training Score:\\n\",etc.score(x_train,y_train)*100)","b082af1d":"data['date'] = pd.to_datetime(data['Date'])","4a41ee34":"data['date'].dtype","adcbb8cb":"data['date'] = pd.to_datetime(data['date'])","357da8fa":"data['day'] = (data['date']).dt.day\ndata['month'] = (data['date']).dt.month\ndata['year'] = (data['date']).dt.year","be4916d3":"data['Time'] = pd.to_datetime(data['Time'])","56d0e377":"data['Hour'] = (data['Time']).dt.hour ","6a7a1cd6":"data['Hour'].unique()","2819a221":"categorical_columns = [cname for cname in data.columns if data[cname].dtype == \"object\"]\ncategorical_columns","9bf82406":"print(\"# unique values in Branch: {0}\".format(len(data['Branch'].unique().tolist())))\nprint(\"# unique values in City: {0}\".format(len(data['City'].unique().tolist())))\nprint(\"# unique values in Customer Type: {0}\".format(len(data['Customer type'].unique().tolist())))\nprint(\"# unique values in Gender: {0}\".format(len(data['Gender'].unique().tolist())))\nprint(\"# unique values in Product Line: {0}\".format(len(data['Product line'].unique().tolist())))\nprint(\"# unique values in Payment: {0}\".format(len(data['Payment'].unique().tolist())))","3a336fe6":"sns.set(style=\"darkgrid\")\ngenderCount  = sns.countplot(x=\"Gender\", data =data).set_title(\"Gender_Count\")","46a1d404":"sns.boxplot(x=\"Branch\", y = \"Rating\" ,data =data).set_title(\"Ratings by Branch\")","af91431e":"genderCount  = sns.lineplot(x=\"Hour\",  y = 'Quantity',data =data).set_title(\"Product data per Hour\")","eeed20f6":"genderCount  = sns.relplot(x=\"Hour\",  y = 'Quantity', col= 'month' , row= 'Branch', kind=\"line\", hue=\"Gender\", style=\"Gender\", data =data)","9d5687d4":"genderCount  = sns.relplot(x=\"Hour\",  y = 'Total', col= 'month' , row= 'Branch', estimator = None, kind=\"line\", data =data)","83fe0cea":"data['Rating'].unique()","0072db93":"ageDisSpend = sns.lineplot(x=\"Total\", y = \"Rating\", data =data)","f1e921bd":"sns.boxenplot(y = 'Product line', x = 'Quantity', data=data)","88d702ec":"sns.countplot(y = 'Product line', data=data, order = data['Product line'].value_counts().index )","0235184e":"sns.boxenplot(y = 'Product line', x = 'Total', data=data)","9677a963":"sns.stripplot(y = 'Product line', x = 'Total', hue = 'Gender', data=data)","f3d9869a":"sns.relplot(y = 'Product line', x = 'gross income', data=data)","fb45f791":"sns.boxenplot(y = 'Product line', x = 'Rating', data=data)","c33da6e9":"productCount  = sns.relplot(x=\"Hour\",  y = 'Quantity', col= 'Product line' , row= 'Branch', estimator = None, kind=\"line\", data =data)","3b72ff55":"sns.countplot(x=\"Payment\", data =data).set_title(\"Payment Channel\") ","8a134ab6":"sns.countplot(x=\"Payment\", hue = \"Branch\", data =data).set_title(\"Payment Channel by Branch\") ","13c72726":"data['Customer type'].nunique()","21d2f176":"sns.countplot(x=\"Customer type\", data =data).set_title(\"Customer Type\") ","edefff92":"sns.countplot(x=\"Customer type\", hue = \"Branch\", data =data).set_title(\"Customer Type by Branch\") ","ea31fbb4":"data.groupby(['Customer type']).agg({'Total': 'sum'})","d5608b87":"sns.barplot(x=\"Customer type\", y=\"Total\", estimator = sum, data=data)","25019856":"sns.swarmplot(x=\"Customer type\",  y = \"Rating\",  hue = \"City\", data =data).set_title(\"Customer Type\") ","a2b47ca3":"sns.relplot(x=\"Total\",  y = \"Quantity\", data =data)","f6045375":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Rating\", y=\"Gender\", data=data[170:180])\nplt.title(\"Rating vs Gender\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Gender\")\nplt.show()","4e104ed2":"plt.style.use(\"default\")\nplt.figure(figsize=(5,5))\nsns.barplot(x=\"Rating\", y=\"Unit price\", data=data[170:180])\nplt.title(\"Rating vs Unit Price\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Unit Price\")\nplt.show()","c73ec747":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.2)","e4143b40":"print(len(x_train))\nprint(len(x_test))\nprint(len(y_train))\nprint(len(y_test))","15039494":"y=data['Gender']\nx=data.drop('Gender',axis=1)","b5fb9332":"data.hist(figsize=(20,14))\nplt.show()","32cd6514":"data.corr()","bcd04a61":"## DESICION TREE CLASSIFIER\nEs un modelo que utilizan m\u00faltiples algoritmos para decidir la divisi\u00f3n de un nodo en dos o m\u00e1s subnodos. La creaci\u00f3n de subnodos aumenta la homogeneidad de los subnodos resultantes. El \u00e1rbol de decisi\u00f3n divide los nodos en todas las variables disponibles y, a continuaci\u00f3n, selecciona la divisi\u00f3n que da lugar a los subnodos m\u00e1s homog\u00e9neos.","ee81b852":"# Exploraci\u00f3n del dataset","51d1074c":"## Naive Bayes\nEs un modelo que trata de una t\u00e9cnica de clasificaci\u00f3n basada en el Teorema de Bayes con una suposici\u00f3n de independencia entre los predictores. En t\u00e9rminos sencillos, un clasificador Naive Bayes asume que la presencia de una caracter\u00edstica particular en una clase no est\u00e1 relacionada con la presencia de ninguna otra caracter\u00edstica.","f7201888":"# SCATTER PLOT\nEs una funci\u00f3n que utiliza puntos para representar los valores de dos variables num\u00e9ricas diferentes. La posici\u00f3n de cada punto en el eje horizontal y vertical indica los valores de un punto de datos individual. Los gr\u00e1ficos de dispersi\u00f3n se utilizan para observar las relaciones entre las variables.","88ca8fe9":"## KNeighborsClassifier\nPor defecto, el KNeighborsClassifier busca los 5 vecinos m\u00e1s cercanos. Debemos decirle expl\u00edcitamente al clasificador que utilice la distancia euclidiana para determinar la proximidad entre los puntos vecinos.","c19ef493":"## RANDOM FOREST CLASSIFIER\nEs un modelo que utiliza un bosque aleatorio es un metaestimador que ajusta varios clasificadores de \u00e1rboles de decisi\u00f3n en varias submuestras del conjunto de datos y utiliza el promedio para mejorar la precisi\u00f3n de la predicci\u00f3n y controlar el sobreajuste.","64851e72":"# BARPLOT\nEs una funci\u00f3n que muestra la relaci\u00f3n entre una variable num\u00e9rica y una categ\u00f3rica. Cada entidad de la variable categ\u00f3rica se representa como una barra. El tama\u00f1o de la barra representa su valor num\u00e9rico.","e3e221b1":"## ExtraTreesClassifier\nEl clasificador de \u00e1rboles extremadamente aleatorio (clasificador de \u00e1rboles extra) es un tipo de t\u00e9cnica de aprendizaje de conjunto que agrega los resultados de m\u00faltiples \u00e1rboles de decisi\u00f3n descorrelacionados recogidos en un \"bosque\" para emitir su resultado de clasificaci\u00f3n.","dc88f740":"# JOINTPLOT\nEs una muestra de una relaci\u00f3n entre 2 variables (bivariante) as\u00ed como perfiles 1D (univariante) en los m\u00e1rgenes. Este plot es una clase de conveniencia que envuelve a JointGrid.","5f06bed0":"# Datos de Entrenamiento y Datos de Testeo","369d78f0":"# LINEPLOT \nEs una funci\u00f3n que puede definirse como un gr\u00e1fico que muestra los datos como puntos o marcas de verificaci\u00f3n sobre una l\u00ednea num\u00e9rica, mostrando la frecuencia de cada valor.","6f5d4867":"# REGPLOT\nEs una funci\u00f3n que se utiliza para trazar los datos y el ajuste de un modelo de regresi\u00f3n lineal. Si son cadenas, deben corresponder con los nombres de las columnas en \"data\". Cuando se utilizan objetos pandas, los ejes se etiquetan con el nombre de la serie. data: Es un dataframe donde cada columna es una variable y cada fila es una observaci\u00f3n.","e510a06c":"## ADABOOST CLASSIFIER\nEs un modelo meta-estimador que comienza ajustando un clasificador en el conjunto de datos original y luego ajusta copias adicionales del clasificador en el mismo conjunto de datos pero donde los pesos de las instancias clasificadas incorrectamente se ajustan de manera que los clasificadores posteriores se centran m\u00e1s en los casos dif\u00edciles.","dcc4b8ab":"# KDE PLOT\nEs conocido como Kernel Density Estimate se utiliza para visualizar la Densidad de Probabilidad de una variable continua. Representa la densidad de probabilidad en diferentes valores de una variable continua. Tambi\u00e9n podemos trazar un \u00fanico gr\u00e1fico para m\u00faltiples muestras, lo que ayuda a una visualizaci\u00f3n m\u00e1s eficiente de los datos.","97953bd1":"# PROBANDO CON NUEVAS VARIABLES","9721f44b":"## SVC\nEs un modelo de aprendizaje supervisado con algoritmos de aprendizaje asociados que analizan los datos para su clasificaci\u00f3n y an\u00e1lisis de regresi\u00f3n.","cd59c5bc":"# PAIRPLOT\nEs una funci\u00f3n que crea una cuadr\u00edcula de ejes de tal manera que cada variable de los datos ser\u00e1 compartida en el eje y a trav\u00e9s de una sola fila y en el eje x a trav\u00e9s de una sola columna.","58197aed":"# Implementaci\u00f3n de Modelos de ML (Machine Learning)","0fce8e71":"## GRADIENT BOOSTING CLASSIFIER\nTambien conocido como clasificadores de refuerzo de gradiente, es un modelo con un grupo de algoritmos de aprendizaje autom\u00e1tico que combinan muchos modelos de aprendizaje d\u00e9biles para crear un modelo predictivo fuerte. Los \u00e1rboles de decisi\u00f3n suelen utilizarse cuando se realiza el refuerzo de gradiente."}}