{"cell_type":{"88a40fc0":"code","f00b1d76":"code","e6acfaa8":"code","cb17b963":"code","4bf4578a":"code","0a72d6df":"code","1590864d":"code","5e641151":"code","0543acaf":"code","6677a729":"code","005b535e":"code","00d7d68a":"code","f7e5bf40":"code","503c3453":"code","bc6bab98":"code","9b2dbc2c":"code","b94626c1":"code","102307ac":"code","476dddaf":"code","37f3aa62":"code","f4d1742e":"code","ba9a3486":"code","014e767d":"code","855ee0bb":"code","c0897e2a":"code","f064ffd1":"code","c96b387e":"code","9423fb28":"code","f8740d86":"code","f551ba87":"code","88eefb86":"code","b9bb61a1":"code","621e2e08":"code","e350eabd":"code","dd6081c0":"code","36427b2c":"code","2774e49a":"code","067766e2":"code","ea4c288a":"code","50d8f1a6":"code","977a8bdc":"code","e0fe501e":"code","448844d1":"code","c849fb71":"code","7e77f48c":"code","e9beb8e1":"code","62c4c614":"code","ad12b996":"code","c729f130":"code","ce3bbc3e":"code","e7336dd0":"code","68247f96":"code","cb91097b":"code","009d3bb1":"code","275ba7ec":"code","9f5ea40e":"code","9e031a54":"code","c442c1fb":"code","73b0424c":"code","7a4acafc":"code","a06a7f25":"code","2acdca7c":"code","68726348":"code","fb000c10":"code","697bca6a":"code","7eae0a60":"code","bb434126":"code","d888c642":"code","c9bdd465":"code","b609572d":"code","41ab9346":"code","8d231ee2":"code","e765fa4f":"code","7eac18ad":"code","5a03d3fc":"code","461495c0":"code","26e9f1c9":"code","a9abe856":"code","278dfe4a":"code","5ef9ae5d":"code","7b57c040":"code","306ab729":"markdown","d3c22e4d":"markdown","3bb4134e":"markdown","9b4dcbd3":"markdown","366c1279":"markdown","7fe4bd47":"markdown","7ff7311b":"markdown","a1add744":"markdown","d9e5b2a1":"markdown","4c045960":"markdown","c586d471":"markdown","2d24b9fd":"markdown","a037f2f9":"markdown","41b74b1e":"markdown","6947c68e":"markdown","e80a3272":"markdown","0536d0f1":"markdown","93af2763":"markdown","5b1e9209":"markdown","4e021e43":"markdown","b8ccb101":"markdown","a22664af":"markdown","597eac19":"markdown","7f181993":"markdown","f7b9e35d":"markdown","27c2989a":"markdown","cabe4ef2":"markdown","44d93808":"markdown","96531493":"markdown","2becab3c":"markdown","1ec314b5":"markdown","cd7b6fec":"markdown","73c641a3":"markdown","b510f2b2":"markdown","246265c4":"markdown","306a1aab":"markdown","13a38476":"markdown","2a3fb87f":"markdown","4c6a3778":"markdown","8ddc064d":"markdown","53454949":"markdown","688a11ad":"markdown","a8ba7525":"markdown","2a200084":"markdown","66691663":"markdown","2930af82":"markdown","69525bb1":"markdown","bf8c5fea":"markdown","0e5af2da":"markdown","913a89fa":"markdown","aa50726d":"markdown","ce73f7d5":"markdown","a5a65f55":"markdown","ed4bf351":"markdown","9f3c1b98":"markdown","236332c7":"markdown","d432605b":"markdown"},"source":{"88a40fc0":"import pandas as pd\nimport seaborn as sns\nfrom scipy.stats import chi2_contingency\nfrom statsmodels.stats import weightstats as stests\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ndf.head()","f00b1d76":"# dataset comprises of 614 observations and 13 charateristics\ndf.shape","e6acfaa8":"df.info()","cb17b963":"freq_tbl1 = df.groupby(['Gender','Married','Education','Self_Employed'])\nfreq_tbl1.size()","4bf4578a":"freq_tbl2 = df.groupby(['Credit_History','Property_Area','Loan_Amount_Term'])\nfreq_tbl2.size()","0a72d6df":"df.Loan_Status.value_counts()","1590864d":"df[['ApplicantIncome','CoapplicantIncome','LoanAmount']].describe()","5e641151":"# indeed we found there are quite a few outliers\nsns.boxplot(df['ApplicantIncome'])\nsns.despine()","0543acaf":"IQR_app = df.ApplicantIncome.quantile(0.75) - df.ApplicantIncome.quantile(0.25)\nupper_limit_app = df.ApplicantIncome.quantile(0.75) + (IQR_app*1.5)\nupper_limit_extreme_app = df.ApplicantIncome.quantile(0.75) + (IQR_app*2)\nupper_limit_app, upper_limit_extreme_app","6677a729":"outlier_count_app = len(df[(df['ApplicantIncome'] > upper_limit_app)])\noutlier_count_app","005b535e":"# the ApplicantIncome distribution is right skewed \nfig=plt.figure()\nax=fig.add_subplot(1,1,1)\nax.hist(df['ApplicantIncome'], bins=30)\nplt.title('ApplicantIncome Distribution')\nplt.xlabel('Applicant Income')\nplt.ylabel('Frequency')\nplt.show()","00d7d68a":"sns.boxplot(df['CoapplicantIncome'])\nsns.despine()","f7e5bf40":"IQR_coapp = df.CoapplicantIncome.quantile(0.75) - df.CoapplicantIncome.quantile(0.25)\nupper_limit_coapp = df.CoapplicantIncome.quantile(0.75) + (IQR_coapp*1.5)\nupper_limit_extreme_coapp = df.CoapplicantIncome.quantile(0.75) + (IQR_coapp*2)\nupper_limit_coapp, upper_limit_extreme_coapp","503c3453":"outlier_count_coapp = len(df[(df['CoapplicantIncome'] > upper_limit_coapp)])\noutlier_count_coapp","bc6bab98":"sns.boxplot(df['LoanAmount'])\nsns.despine()","9b2dbc2c":"IQR_loanAmt = df.LoanAmount.quantile(0.75) - df.LoanAmount.quantile(0.25)\nupper_limit_loanAmt = df.LoanAmount.quantile(0.75) + (IQR_loanAmt*1.5)\nupper_limit_extreme_loanAmt = df.LoanAmount.quantile(0.75) + (IQR_loanAmt*2)\nupper_limit_loanAmt, upper_limit_extreme_loanAmt","b94626c1":"outlier_count_loanAmt = len(df[(df['LoanAmount'] > upper_limit_loanAmt)])\noutlier_count_loanAmt","102307ac":"# the LoanAmount distribution is right skewed \nfig=plt.figure()\nax=fig.add_subplot(1,1,1)\nax.hist(df['LoanAmount'], bins=100)\nplt.title('Loan Amount Distribution')\nplt.xlabel('Loan Amount')\nplt.ylabel('Frequency')\nplt.show()","476dddaf":"tbl = pd.crosstab(index = df['Loan_Status'], columns = df['Gender'])\ntbl.index = ['Not Approved','Approved']\ntbl","37f3aa62":"# performing the test using Python\n# frequency table without missing values\nstat, p, dof, expected = chi2_contingency(tbl)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","f4d1742e":"# How would the table look like if we include counts of missing-value obersvations?\ntbl2 = tbl\ndf_new = df[df['Gender'].isnull()]\ntbl_tp = df_new.groupby('Loan_Status')\ntbl_tp.size()","ba9a3486":"tbl2['NaN_val'] = [5,8]\ntbl2","014e767d":"tbl2.plot.bar(xlabel = 'Loan Status', rot = 0)","855ee0bb":"# performing the test using Python\n# frequency table with missing values\nstat, p, dof, expected = chi2_contingency(tbl2)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","c0897e2a":"tbl_marrd = pd.crosstab(index = df['Loan_Status'], columns = df['Married'])\ntbl_marrd.index = ['Not Approved','Approved']\ntbl_marrd.columns = ['Not Married','Married']\ntbl_marrd","f064ffd1":"stat, p, dof, exptected = chi2_contingency(tbl_marrd)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","c96b387e":"tbl_ed = pd.crosstab(df['Loan_Status'],df['Education'])\ntbl_ed.index = ['Not Approved','Approved']\ntbl_ed","9423fb28":"tbl_ed.plot.bar(xlabel = 'Loan Status', rot = 0)","f8740d86":"stat, p, dof, exptected = chi2_contingency(tbl_ed)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","f551ba87":"tbl_emp = pd.crosstab(index = df['Loan_Status'], columns = df['Self_Employed'])\ntbl_emp.index = ['Not Approved','Approved']\ntbl_emp","88eefb86":"tbl_emp.plot.bar(xlabel = 'Loan Status',rot = 0)","b9bb61a1":"stat, p, dof, expected = chi2_contingency(tbl_emp)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","621e2e08":"tbl_term = pd.crosstab(index = df['Loan_Status'], columns = df['Loan_Amount_Term'])\ntbl_term.index = ['Not Approved','Approved']\ntbl_term","e350eabd":"stat, p, dof, exptected = chi2_contingency(tbl_term)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","dd6081c0":"tbl_crt = pd.crosstab(index = df['Loan_Status'], columns = df['Credit_History'])\ntbl_crt.index = ['Not Approved','Approved']\ntbl_crt.columns = ['Guidelines Not Met', 'Guidelines Met'] \ntbl_crt","36427b2c":"tbl_crt.plot.bar(xlabel = 'Loan_Status', rot = 0)","2774e49a":"stat, p, dof, expected = chi2_contingency(tbl_crt)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","067766e2":"tbl_area = pd.crosstab(index = df['Loan_Status'], columns = df['Property_Area'])\ntbl_area.index = ['Not Approved','Approved']\ntbl_area","ea4c288a":"tbl_area.plot.bar(xlabel = 'Loan Status', rot = 0)","50d8f1a6":"stat, p, dof, exptected = chi2_contingency(tbl_area)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","977a8bdc":"df['ApplicantIncome'].groupby(df['Loan_Status']).describe()","e0fe501e":"# data set of Loan_Status Not Approved\ntbl_appN = df[(df['Loan_Status'] == 'N')]\ntbl_appN = tbl_appN['ApplicantIncome']\ntbl_appN ","448844d1":"# data set of Loan_Status Approved\ntbl_appY = df[(df['Loan_Status'] == 'Y')]\ntbl_appY = tbl_appY['ApplicantIncome']\ntbl_appY","c849fb71":"ztest, pval = stests.ztest(tbl_appN,tbl_appY,value = 0, alternative = 'two-sided')\nalpha = 0.05\nprint(\"p value is \" + str(pval))\nif pval <= alpha:\n    print('Two population means are not equal (reject H_0)')\nelse:\n    print('Two population means are equal (H_0 holds true)')\n","7e77f48c":"fig, ax = plt.subplots(figsize = (6,5))\ndf.boxplot(column = 'ApplicantIncome', by = 'Loan_Status', ax = ax, grid = False)\nplt.show()","e9beb8e1":"df['LoanAmount'].groupby(df['Loan_Status']).describe()","62c4c614":"tbl_amtN = df[(df['Loan_Status'] == 'N')]\ntbl_amtN = tbl_amtN['LoanAmount'].dropna() # we know there are missing values\ntbl_amtN ","ad12b996":"tbl_amtY = df[(df['Loan_Status'] == 'Y')]\ntbl_amtY = tbl_amtY['LoanAmount'].dropna() # missing values dropped\ntbl_amtY ","c729f130":"ztest, pval = stests.ztest(tbl_amtN,tbl_amtY,value = 0, alternative = 'two-sided')\nalpha = 0.05\nprint(\"p value is \" + str(pval))\nif pval <= alpha:\n    print('Two population means are not equal (reject H_0)')\nelse:\n    print('Two population means are equal (H_0 holds true)')","ce3bbc3e":"fig, ax = plt.subplots(figsize = (6,5))\ndf.boxplot(column = 'LoanAmount', by = 'Loan_Status', ax = ax, grid = False)\nplt.show()","e7336dd0":"fig = plt.figure()\nax = fig.add_subplot(1,1,1)\nax.scatter(df['ApplicantIncome'],df['LoanAmount'])\nplt.title('ApplicantIncome and LoanAmount Distribution')\nplt.xlabel('Applicant Income')\nplt.ylabel('Loan Amount')\nplt.show()","68247f96":"fig = plt.figure()\nax = fig.add_subplot(1,1,1)\nax.scatter(df['CoapplicantIncome'],df['LoanAmount'])\nplt.title('CoapplicantIncome and LoanAmount Distribution')\nplt.xlabel('Coapplicant Income')\nplt.ylabel('Loan Amount')\nplt.show()","cb91097b":"tbl_cGender = pd.crosstab(df['Credit_History'],df['Gender'])\nstat, p, dof, exptected = chi2_contingency(tbl_cGender)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","009d3bb1":"tbl_cMarried = pd.crosstab(df['Credit_History'],df['Married'])\nstat, p, dof, exptected = chi2_contingency(tbl_cMarried)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","275ba7ec":"tbl_cEd = pd.crosstab(df['Credit_History'],df['Education'])\nstat, p, dof, exptected = chi2_contingency(tbl_cEd)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","9f5ea40e":"tbl_cEmp = pd.crosstab(df['Credit_History'],df['Self_Employed'])\nstat, p, dof, exptected = chi2_contingency(tbl_cEmp)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","9e031a54":"tbl_cArea = pd.crosstab(df['Credit_History'],df['Property_Area'])\nstat, p, dof, exptected = chi2_contingency(tbl_cArea)\nalpha = 0.05\nprint(\"p value is \" + str(p))\nif p <= alpha:\n    print('Dependent (reject H_0)')\nelse:\n    print('Independent (H_0 holds true)')","c442c1fb":"df['ApplicantIncome'].groupby(df['Credit_History']).describe()","73b0424c":"tbl_incomeN = df[(df['Credit_History'] == 0.0)]\ntbl_incomeN = tbl_incomeN['ApplicantIncome']\ntbl_incomeN ","7a4acafc":"tbl_incomeY = df[(df['Credit_History'] == 1.0)]\ntbl_incomeY = tbl_incomeY['ApplicantIncome']\ntbl_incomeY ","a06a7f25":"ztest, pval = stests.ztest(tbl_incomeN,tbl_incomeY,value = 0, alternative = 'two-sided')\nalpha = 0.05\nprint(\"p value is \" + str(pval))\nif pval <= alpha:\n    print('Two population means are not equal (reject H_0)')\nelse:\n    print('Two population means are equal (H_0 holds true)')","2acdca7c":"import numpy as np\nfrom sklearn.impute import SimpleImputer\nimr = SimpleImputer(missing_values = np.nan,strategy = 'most_frequent')\nimr = imr.fit(df[['Credit_History']])\ndf['Credit_History'] = imr.transform(df[['Credit_History']]).ravel()\ndf.info()","68726348":"# if proceed with dropping NaN before imputation\n# the sample size will reduce down to 480\n# yet if we drop observations where missing values are found after imputation\n# the sample size is reduced to 523 rather\ndf = df.dropna()\ndf.info()","fb000c10":"df[['ApplicantIncome','CoapplicantIncome','LoanAmount']].describe()","697bca6a":"sns.boxplot(df['ApplicantIncome'])\nsns.despine()","7eae0a60":"IQR_1 = df.ApplicantIncome.quantile(0.75) - df.ApplicantIncome.quantile(0.25)\nupper_limit_1 = df.ApplicantIncome.quantile(0.75) + (IQR_1*1.5)\nupper_limit_extreme_1 = df.ApplicantIncome.quantile(0.75) + (IQR_1*2)\nupper_limit_1, upper_limit_extreme_1","bb434126":"outlier_count_1 = len(df[(df['ApplicantIncome'] > upper_limit_1)])\noutlier_count_1 \n# notice the number of the outliers did not change after missing-value treatment","d888c642":"pd.set_option('mode.chained_assignment', None)\nindex_1 = df[(df['ApplicantIncome'] >= upper_limit_1)].index\n#index_1\ndf.drop(index_1, inplace = True)\noutlier_ct_1 = len(df[(df['ApplicantIncome'] > upper_limit_1)])\noutlier_ct_1","c9bdd465":"sns.boxplot(df['CoapplicantIncome'])\nsns.despine()","b609572d":"IQR_2 = df.CoapplicantIncome.quantile(0.75) - df.CoapplicantIncome.quantile(0.25)\nupper_limit_2 = df.CoapplicantIncome.quantile(0.75) + (IQR_2*1.5)\nupper_limit_extreme_2 = df.CoapplicantIncome.quantile(0.75) + (IQR_2*2)\nupper_limit_2, upper_limit_extreme_2","41ab9346":"outlier_count_2 = len(df[(df['CoapplicantIncome'] > upper_limit_2)])\noutlier_count_2 \n# number of outliers reduced from 17 to 16 after missing-value treatment","8d231ee2":"#pd.set_option('mode.chained_assignment', None)\nindex_2 = df[(df['CoapplicantIncome'] >= upper_limit_2)].index\n#index_2\ndf.drop(index_2, inplace = True)\noutlier_ct_2 = len(df[(df['CoapplicantIncome'] > upper_limit_2)])\noutlier_ct_2","e765fa4f":"sns.boxplot(df['LoanAmount'])\nsns.despine()","7eac18ad":"IQR_3 = df.LoanAmount.quantile(0.75) - df.LoanAmount.quantile(0.25)\nupper_limit_3 = df.LoanAmount.quantile(0.75) + (IQR_3*1.5)\nupper_limit_extreme_3 = df.LoanAmount.quantile(0.75) + (IQR_3*2)\nupper_limit_3, upper_limit_extreme_3","5a03d3fc":"outlier_count_3 = len(df[(df['LoanAmount'] > upper_limit_3)])\noutlier_count_3 \n# number of outliers reduced from 30 to 23 after missing-value treatment","461495c0":"#pd.set_option('mode.chained_assignment', None)\nindex_3 = df[(df['LoanAmount'] >= upper_limit_3)].index\n#index_3\ndf.drop(index_3, inplace = True)\noutlier_ct_3 = len(df[(df['LoanAmount'] > upper_limit_3)])\noutlier_ct_3","26e9f1c9":"#encoding to numeric data type\ncode_numeric = {'Male':1, 'Female':2,\n               'Yes': 1, 'No':2,\n                'Graduate':1, 'Not Graduate':2,\n                'Urban':1, 'Semiurban':2, 'Rural':3,\n                'Y':1, 'N':0,\n                '3+':3 }\ndf = df.applymap(lambda i: code_numeric.get(i) if i in code_numeric else i)\ndf['Dependents'] = pd.to_numeric(df.Dependents)\ndf.info()","a9abe856":"matrix = np.triu(df.corr())\nfig, ax = plt.subplots(figsize = (10,10))\nsns.heatmap(df.corr(), annot = True, mask = matrix, linewidths = .5, ax = ax)","278dfe4a":"m = matrix[:,11]\nm = pd.DataFrame(m)\nm1 = np.transpose(m)","5ef9ae5d":"m1.columns = (df.columns[1:])\nm2 = np.transpose(m1)\nnew_col = ['corr_to_Loan_Status']\nm2.columns =new_col","7b57c040":"# sort predictor variables by their correlation strength to the Target variable\nm2['corr_to_Loan_Status'] = m2['corr_to_Loan_Status'].abs()\nm2.sort_values(by = new_col, ascending = False)","306ab729":"#### CoapplicantIncome vs. LoanAmount","d3c22e4d":"From previous analysis, we know most of the variables have at least one missing value, below will examine the possible cause of the occurence of the missing values, in my opinion, for each variable.\n\n- Gender: Most likely be missing completely at random(MCAR)\n- Married: MCAR\n- Dependents: MCAR\n- Self_Employed: MCAR\n- LoanAmount: MCAR\n- Loan_Amount_Term: MCAR\n- Credit_History: Missing at random. Applicants who do not meeting credit guidelines tend to have higher missing value compare to those whose credit met the guidelines.\n\nStatistically speaking, if the number of missing observations is less than 5% of the sample, we can drop them. In addition, if the missing value is determined to be MCAR, we can safely perform deletion of missing value cases. With that said, missing observations of *Gender, Married, Dependents, Self_Employed, LoanAmount and Loan_Amount_Term* can be dropped. \n\nAs for *Credit_History*, imputation will be conducted to replace the missing ones.","3bb4134e":"# Background\nThis project focuses on the Exploratory Data Analysis, including data exploration, data preparation, and data cleaning. The dataset of interest here is the training dataset of [Loan Prediction Problem Dataset](https:\/\/www.kaggle.com\/altruistdelhite04\/loan-prediction-problem-dataset). The original problem is to predict customers' loan eligiblity based on their application details. This project does not cover the Loan Prediction steps nor the Machine Learning algorithms.\n\n**Data Dictionary:**\n-           Loan_ID: Unique Loan ID\n-            Gender: Male\/Female\n-           Married: Applicant married Y\/N\n-        Dependents: Number of dependents\n-         Education: Graduate\/Undergrad\n-     Self_Employed: Y\/N\n-   ApplicantIncome: Applicant Income\n- CoapplicantIncome: Coapplicant Income\n-        LoanAmount: Loan amount in thousands\n-  Loan_Amount_Term: Term of loan in months\n-    Credit_History: 1 for meeting the guidelines, 0 for not meeting the guidelines\n-     Property_Area: Urban\/Semi Urban\/Rural\n-       Loan_Status: Loan approved Y\/N","9b4dcbd3":"### Section Summary (where the missing values are simply ignored)\n\nPredictor variables that are observed to have a statistacally significant association with the Target varialbe are as follows:\n- Married\n- Education\n- Credit_History\n- Property_Area","366c1279":"**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:Loan\\:Status\\:and\\:Education\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","7fe4bd47":"### Credit_History vs Self_Employed\n\n**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Credit\\_History\\:and\\:Self\\_Employed\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","7ff7311b":"## Bivariate Analysis\n### Categorical and Categorical\n#### Loan_Status and Gender","a1add744":"## Univariate Analysis\n### Categorical Variables","d9e5b2a1":"# Data Exploration and Preparation\n## Variable Identification","4c045960":"### Credit_History vs ApplicantIncome\n\n**Two sample Z-Test (ApplicantIncome splitted by Loan_Status)**\n\n$$\nH_0: \\:\\mu_{N_{applicantIncome}} =\\:\\mu_{Y_{applicantIncome}}\n\\\\H_1:\\: Negation\\:of\\:H_0\n$$","c586d471":"### Credit_History vs Married\n\n**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Credit\\_History\\:and\\:Married\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","2d24b9fd":"- *Credit_History* has 50 missing values\n- It seems to suggest that there are relatively more loans approved when the applicants' credit meets the guidelines","a037f2f9":"#### Loan_Status and Self_Employed","41b74b1e":"**Conclusion**\n\nThere is no evidence that the difference in Applicant income will have an impact on loan eligibility.","6947c68e":"### Categorical and Continuous\n#### Loan_Status and ApplicantIncome","e80a3272":"#### Loan_Status and Loan_Amount_Term","0536d0f1":"## Trimming\nWe will use Trimming here as our outlier treatment method.","93af2763":"**Conclusion**\n\nThere is no evidence that the difference in Loan Amount will result in lower\/higher loan acceptance rate.","5b1e9209":"# Variable Correlations After Data Cleaning","4e021e43":"There are more loans approved than rejected.","b8ccb101":"### Section Summary\n\n**Variables with missing values:**\n- Gender (13 or 2.1%)\n- Married (3 or 0.5%)\n- Dependents (15 or 2.4%)\n- Self_Employed (32 or 5.2%)\n- LoanAmount (22 or 3.6%)\n- Loan_Amount_Term (14 or 2.3%)\n- Credit_History (50 or 8.1%)\n\n**Variables with outliers:**\n- ApplicantIncome (43 outliers exceeding its maximum value)\n- CoapplicantIncome ( 17 outliers exceeding its maximum value)\n- LoanAmount (30 outliers exceeding its maximum value)\n\n*where \"Maximum\" refers to 75th Percentile + 1.5$*$(Interqartile Range)*","a22664af":"**Two sample Z-Test (LoanAmount splitted by Loan_Status)**\n\n$$\nH_0: \\:\\mu_{N_{LoanAmt}} =\\:\\mu_{Y_{LoanAmt}}\n\\\\H_1:\\: Negation\\:of\\:H_0\n$$\n\nAssuming two levels of samples are independent.","597eac19":"**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:Loan\\:Status\\:and\\:Credit\\_History\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","7f181993":"**Calculated chi-square value (modified frequency table including counts of missing values)**\n\nThe calculated $\\chi^2$ value is 5.66887, where the degree of freedom is 2.\nThe critical value of the $\\chi^2$ distribution with df of 2 is 5.991. \n\nHence:\n\n$$\n\\begin{aligned}\ncritical\\:value\\:of\\:\\chi^2\\: >=\\:calculated\\:value\\:of\\:\\chi^2\n\\end{aligned}\n$$\n\n\nTherefore $H_0$ is Accepted","f7b9e35d":"#### Loan_Status and LoanAmount","27c2989a":"**Two sample Z-Test (ApplicantIncome splitted by Loan_Status)**\n\n$$\nH_0: \\:\\mu_{N_{income}} =\\:\\mu_{Y_{income}}\n\\\\H_1:\\: Negation\\:of\\:H_0\n$$\n\nAssuming two levels of samples are independent.","cabe4ef2":"### Credit_History vs Education\n\n**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Credit\\_History\\:and\\:Education\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","44d93808":"The above bar plot does not provide much evidence to show that there is a significant relationship between *Loan_Status* and *Gender*. ","96531493":"**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Loan\\:Status\\:and\\:Married\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","2becab3c":"#### Loan_Status and Education","1ec314b5":"# Outlier Treatment\nFrom previous analysis, where we ignored the missing-value observations, variables *ApplicantIncome, CoapplicantIncome,* and *LoanAmount* are found to have univariate outliers in the upper boundaries. Now let's see if there's any changes on outliers after our missing value treatment. ","cd7b6fec":"**Calculated chi-square value (orginal frequency table excluding missing values)**\n\nThe calculated $\\chi^2$ value is 0.2369751, where the degree of freedom is 1.\nThe critical value of the $\\chi^2$ distribution with df of 1 is 3.841. \n\nHence:\n\n$$\n\\begin{aligned}\ncritical\\:value\\:of\\:\\chi^2\\: >=\\:calculated\\:value\\:of\\:\\chi^2\n\\end{aligned}\n$$\n\n\nTherefore $H_0$ is Accepted","73c641a3":"**Observations:**\n1. there are missing values on the latter characteristic\n2. there is notably a large difference between the 75th percentile and max values of all three variables\n\nThus two observations suggest that there are missing values and outliers in our data set, treatments should be applied in order to avoid building a biased predictive model. ","b510f2b2":"**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:Loan\\:Status\\:and\\:Self\\_Employed\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","246265c4":"From the above scatter plot, it looks like there is a positive correlation between 'LoanAmount' and 'ApplicantIncome'. Yet here we have not performed any missing data nor outlier treatment, thus it is too early to make a conclusion.","306a1aab":"## Loading Dataset\n","13a38476":"# Conclusion\n\nDepending on different methods of missing-value and\/or outlier treatments, the level of data loss might have impact on prediction models which are used to solve the original problem. This project is only to explore the dataset and to describe dataset characterizations through data visualization and statistical techniques. Below shows how much each variable correlates with the target variable.","2a3fb87f":"It is hard to make any conclusion from the above scatter plot, but it looks like a portion of the points sugguests the positive correlation. Ideally to double check, we would calculate the correlation coefficient, but due to difference in two variables' shapes, we have to perform missing values treatment in order to proceed with correlation calculation.","4c6a3778":"### Credit_History vs Property_Area\n\n**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Credit\\_History\\:and\\:Property\\_Area\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","8ddc064d":"### Continuous Variables","53454949":"Chi-square test sugguests that there is no significant relationship between *Loan_Status* and *Self_Employed*.","688a11ad":"The above probability indicates that the relationship between *Loan_Status* and *Education* is significant at 95% confidence.","a8ba7525":"## Imputation using Most Frequent values","2a200084":"# Missing value Treatment","66691663":"**Observation:**\nThere isn't any correlation between *Credit_History* and other predictor variables.","2930af82":"### Continuous and Contintuous\n#### ApplicantIncome vs. LoanAmount","69525bb1":"## Deletion\nFor simplicity, we will delete observations where any of the variables is missing due to MCAR.","bf8c5fea":"**Pearson's Chi-square Test**\n\nThe chi-square test statistic for a test of independence of two categorical variables is as follows:\n$$\n\\begin{aligned}\n\\chi^2 = \\sum{(O - E)^2 \/ E} \\;, \\;Where\\:O \\:is \\:the \\:observed \\:frequency \\:and \\\\\\:E \\:is \\:the \\:expected \\:frequency\n\\end{aligned}\n$$\n\n$\n\\\\\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:Loan\\:Status \\:and \\:Gender\n\\\\H_1: \\:There \\:is \\:a \\:significant \\:relation \\:between \\:the \\:two\n$","0e5af2da":"### Credit_history vs Gender\n\n**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:variables\\:Credit\\_History\\:and\\:Gender\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","913a89fa":"#### Loan_Status and Married","aa50726d":"Although we are not going to solve the original Loan Prediction problem here, it is generally helpful to keep the orginal problem in mind while performing the data exploration analysis.\nThus the types of variables can be defined as following:\n\n**(Possible) Predictor Variable:**\n- Gender\n- Married\n- Dependents\n- Education\n- Self_Employed\n- ApplicantIncome\n- CoapplicationIncome\n- LoanAmount\n- Loan_Amount_Term\n- Credit_History\n- Property_Area\n\n**Target Variable:**\n- Loan_Status","ce73f7d5":"#### Loan_Status and Property_Area","a5a65f55":"Both $\\chi^2$ tests reject the $H_0$, sugguesting that there is no significant relationship between *Loan_Status* and *Gender*.","ed4bf351":"#### Loan_Status and Credit_History","9f3c1b98":"**Chi-square Test**\n\n$\nH_0: \\:There \\:is \\:no \\:relationship \\:between \\:Loan\\:Status\\:and\\:Property\\_Area\n\\\\H_1:\\: Negation\\:of\\:H_0\n$","236332c7":"## Credit_History Imputation\n\nBefore the actual imputation, we should examine if there's any correlation between *Credit_History* and other variables.","d432605b":"### Section Summary\n\nThe dataset can be separated into the following two variable categories:\n\n**Categorical:**\n- Gender\n- Married\n- Education\n- Self_Employed\n- Loan_Amount_Term\n- Credit_History\n- Property_Area\n- Loan_Status\n\n**Continuous:**\n- ApplicantIncome\n- CoapplicantIncome\n- LoanAmount"}}