{"cell_type":{"ab4010fe":"code","a9676f92":"code","1a82d9b0":"code","bacd64c4":"code","5dddabf5":"code","691a2cd6":"code","75131432":"code","61c98f51":"code","fa7041ea":"code","c31a2c5b":"code","4b52b956":"code","209f5334":"code","f76773f1":"code","52501707":"code","5c1f6f38":"code","4c095748":"code","4f1de667":"code","1ebb4a80":"code","8405d2d7":"code","5de55a06":"code","ee597145":"code","79d416ac":"code","67767551":"code","7855dfd5":"code","edd5d3da":"code","5875dca3":"code","79aaab44":"code","73a6b9a8":"code","a7880046":"markdown","a04562fa":"markdown","d1492883":"markdown","3719900b":"markdown","e0ed3a3f":"markdown","ef1f74a1":"markdown"},"source":{"ab4010fe":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","a9676f92":"path = '..\/input\/glass\/glass.csv'\ndf = pd.read_csv(path)\ndf.head()","1a82d9b0":"df.head()","bacd64c4":"df.info()","5dddabf5":"df.describe()","691a2cd6":"df['Type'].unique()","75131432":"sns.histplot(x=df['Na'],bins=9,palette='Set1')","61c98f51":"plt.figure(figsize=(12,6))\nsns.countplot(df['Type'])","fa7041ea":"plt.figure(figsize=(10,6))\nsns.barplot(x=df['Type'],y=df['RI'],palette='viridis',ci=False)","c31a2c5b":"df.columns","4b52b956":"plt.figure(figsize=(10,6))\nsns.heatmap(df.corr(),annot=True)","209f5334":"X=df.drop('Type',axis=1)","f76773f1":"y=df['Type']","52501707":"from sklearn.model_selection import train_test_split","5c1f6f38":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","4c095748":"from sklearn.preprocessing import StandardScaler","4f1de667":"scaler=StandardScaler()","1ebb4a80":"X_train=scaler.fit_transform(X_train)","8405d2d7":"X_test=scaler.transform(X_test)","5de55a06":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier","ee597145":"log_model=LogisticRegression()\nlog_model.fit(X_train,y_train)","79d416ac":"knn_model=KNeighborsClassifier()\nknn_model.fit(X_train,y_train)","67767551":"rfc_model=RandomForestClassifier()\nrfc_model.fit(X_train,y_train)","7855dfd5":"from sklearn.metrics import plot_confusion_matrix,classification_report","edd5d3da":"def report(model):\n    preds = model.predict(X_test)\n    print(classification_report(y_test,preds))\n    plot_confusion_matrix(model,X_test,y_test)","5875dca3":"print(\"LOGISTIC REGRESSION MODEL\")\nreport(log_model)","79aaab44":"print(\"KNN MODEL\")\nreport(knn_model)","73a6b9a8":"print(\"RANDOM FOREST CLASSIFIER MODEL\")\nreport(rfc_model)","a7880046":"###### Train Test Split","a04562fa":"###### Data Visualization","d1492883":"###### We can see from the above results that the Random Forest Classifier is better than other ML algorithms.","3719900b":"###### Which kind of ML algorithm is most suitable for this dataset Random Forest , KNN or other?","e0ed3a3f":"###### Segregate X and y variables","ef1f74a1":"###### Import the relevant libraries"}}