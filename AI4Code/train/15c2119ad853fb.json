{"cell_type":{"ace19a12":"code","e6705d02":"code","f4d47dba":"code","e02a7182":"code","e17f82da":"code","5f7e5518":"code","16030524":"code","32e53529":"code","52023d95":"code","cf8cfb9b":"code","6aba6a8f":"code","f989c7de":"code","5a73b49b":"code","0896a595":"code","618d6215":"code","1204923c":"code","4d551dd5":"code","4bdc8170":"code","6665784d":"code","3d197092":"code","f84e9488":"code","82b229e1":"code","4f75aff8":"code","34f9dcd8":"code","42657af1":"code","d0ac324d":"markdown","c5fae516":"markdown","97d49f75":"markdown","8380cd99":"markdown","a36f3575":"markdown","03fd3924":"markdown","d7cfb0b5":"markdown","058df07f":"markdown","6c3de375":"markdown","6520dc41":"markdown","1884de81":"markdown","8546beda":"markdown","4feb95f5":"markdown"},"source":{"ace19a12":"import pandas as pd\nimport numpy as np\nimport matplotlib as mt\nimport missingno as msn","e6705d02":"data = pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\ndata.drop(['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1'\n           , 'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2']\n           , axis = 1, inplace = True)\ndata.head()","f4d47dba":"msn.matrix(data)","e02a7182":"data.isnull().any()","e17f82da":"data.info()","5f7e5518":"data.describe()","16030524":"data['Attrition_Flag'].replace({'Existing Customer' : 0, 'Attrited Customer' : 1}, inplace = True)","32e53529":"import matplotlib.pyplot as plt\nimport seaborn as sns","52023d95":"plt.figure(figsize = (7, 4))\n#plt.hist(data['Customer_Age'])\nsns.distplot(data['Customer_Age'], color = 'm')\nplt.title('Customer Age Distribution',fontsize = 15)\nplt.show()","cf8cfb9b":"plt.figure(figsize = (6, 6))\nplt.pie(data['Gender'].value_counts(), labels = ['Female', 'Male'], autopct='%1.1f%%', \n        explode = (0, 0.1), shadow = True, startangle = 90, colors = ['pink', 'cyan'])\nplt.title('Proportion of Gender count', fontsize = 20)\nplt.show()","6aba6a8f":"data_attrit = data[data['Attrition_Flag'] == 1]\ndata_m_attrit = len(data_attrit[data_attrit.Gender == 'M'])\ndata_f_attrit = len(data_attrit[data_attrit.Gender == 'F'])\n\nplt.figure(figsize = (6, 6))\nplt.pie([data_m_attrit, data_f_attrit], autopct = '%1.1f%%', shadow = True, colors = ['y', 'springgreen'], explode = (0.1, 0))\nplt.title('Attrited Male and Female Proportion', fontsize = 20)\nplt.legend(labels = ['Male-Attrited', 'Female-Attrited'])\nplt.show()","f989c7de":"Edu = data['Education_Level'].value_counts().to_frame('Counts') #Value_Counts Output to Dataframe\n\nplt.figure(figsize = (7, 7))\nplt.pie(Edu['Counts'], labels = Edu.index, autopct = '%1.1f%%', explode = (0.1, 0.1, 0.1, 0, 0, 0, 0), shadow = True)\nplt.title('Proportion of Education Levels', fontsize = 20)\nplt.show()","5a73b49b":"plt.figure(figsize = (10, 6))\nsns.countplot(data_attrit['Education_Level'], palette = 'magma')\nplt.title('Attrited Customers Eduaction Level', fontsize = 20)\nplt.show()","0896a595":"data_education = data_attrit.groupby('Education_Level')['Education_Level'].count().to_frame('Count')\n\nplt.figure(figsize = (7, 7))\nplt.pie(data_education['Count'], labels = data_education.index, autopct = '%1.1f%%', explode = (0, 0, 0.1, 0, 0, 0, 0), shadow = True)\nplt.title('Attrited Customers Education Level Proportion', fontsize = 20)\nplt.show()","618d6215":"marit = data['Marital_Status'].value_counts().to_frame('Count')\n\nsns.set_palette('mako')\nplt.figure(figsize = (6, 6))\nplt.pie(marit['Count'], labels = marit.index, autopct = '%1.1f%%', explode = (0.1, 0.1, 0.1, 0.1), shadow = True,\n        startangle = 90)\nplt.title('Marital Status Proportion', fontsize = 20)\nplt.show()","1204923c":"plt.figure(figsize = (7, 5))\nsns.countplot(data_attrit['Marital_Status'])\nplt.title('Attrited Customers Marital Status Count', fontsize = 20)\nplt.show()","4d551dd5":"category = data['Card_Category'].value_counts().to_frame('Count')\n\nsns.set_palette('viridis_r')\nplt.figure(figsize = (6, 6))\nplt.pie(category['Count'], labels = category.index, explode = (0.5, 0.1, 0.75, 1.5), shadow = True, autopct = '%1.1f%%')\nplt.title('Credit Card Category Proportion', fontsize = 20)\nplt.show()","4bdc8170":"income = data['Income_Category'].value_counts().to_frame('Count')\n\nsns.set_palette('Blues_r')\nplt.figure(figsize = (8, 8))\nplt.pie(income['Count'], labels = income.index, explode = (0.1, 0.1, 0.1, 0, 0, 0), autopct = '%1.1f%%', shadow = True)\nplt.title('Customers Income Category Proportion', fontsize = 20)\nplt.show()","6665784d":"depend = data['Dependent_count'].value_counts().to_frame('Count')\n\nsns.set_palette('cubehelix_r')\nplt.figure(figsize = (7, 7))\nplt.pie(depend['Count'], labels = depend.index, explode = (0.1, 0.1, 0, 0, 0, 0),shadow = True, autopct = '%1.1f%%')\nplt.title('Dependent Count Proportion', fontsize = 15)\nplt.show()","3d197092":"attrit = data['Attrition_Flag'].value_counts().to_frame('Count')\n\nplt.figure(figsize = (5, 5))\nplt.pie(attrit['Count'], labels = ['Existing Customers', 'Attrited Customers'], explode = (0, 0.1), shadow = True, startangle = 90, \n        autopct = '%1.1f%%', colors = ['silver', 'gold'])\nplt.title('Proportion on Attrited Customers', fontsize = 15)\nplt.show()","f84e9488":"plt.figure(figsize = (5, 6))\nsns.countplot(data['Attrition_Flag'], palette = 'icefire')\nplt.title('Target Value Count', fontsize = 20)\nplt.show()","82b229e1":"plt.figure(figsize = (8, 6))\nsns.distplot(data['Months_on_book'], color = 'gold')\nplt.show()","4f75aff8":"bins = [0, 10, 20, 30, 40, 50, 60]\n\nsns.set_palette('coolwarm_r')\nplt.figure(figsize = (8, 6))\nsns.countplot(pd.cut(data['Months_on_book'], bins))\nplt.title('Months on Book Interval Count', fontsize = 20)\nplt.show()","34f9dcd8":"bins = [500, 2000, 4000, 6000, 8000, 10000, 15000, 50000]\n\nplt.figure(figsize = (10, 6))\nsns.countplot(pd.cut(data['Credit_Limit'], bins))\nplt.title('Credit Limit Interval Count', fontsize = 20)\nplt.show()","42657af1":"plt.figure(figsize = (7, 4))\nsns.distplot(data['Total_Trans_Ct'], color = 'black')\nplt.title('Total Transaction Count Distribution', fontsize = 20)\nplt.show()","d0ac324d":"### Months on Book Distribution","c5fae516":"# It is clear from the above visualization that the data is quite a bit imbalance. So, data upsampling is must while performing model seletion.","97d49f75":"+ Around 50% of customers have a credit card dependent count either 2 or 3.","8380cd99":"+ 30% of customers are Graduated get attrited.\n+ Almost 15% of customers are Unducated get attrited.","a36f3575":"+ We can see that Gender is almost Equally Distributed.","03fd3924":"+ Customers age is normally Distributed.\n+ Most of the customers are aged between 40 to 60.","d7cfb0b5":"## Credit Card Limit ","058df07f":"+ In our dataset there 15% customers whose education is missing or we could not known to us.\n+ 15% of customers are uneducated.","6c3de375":"# Exploratory Data Analysis","6520dc41":"## Replacing target value with 0\/1\n    + 0 for Existing Customer\n    + for Attrited Customer\n    \n    + 0 for Male\n    + 1 for Female","1884de81":"    + Looks like there are no missing values in our dataset\n\n# Exploring the Data using info and describe functions provided by pandas","8546beda":"## Total Transaction Count Distribution","4feb95f5":"# Checking for Missing Values\/Null values"}}