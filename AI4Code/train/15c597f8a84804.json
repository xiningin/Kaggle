{"cell_type":{"0a20b0d7":"code","d89288ea":"code","19362931":"code","c1dcd4ca":"code","0a1dcbd2":"code","8d8e2cc7":"code","002419cc":"code","85f4acc2":"code","f756babf":"code","a0e494d0":"code","b369b8ea":"code","82255a50":"code","7fba5590":"code","3c61c7ae":"code","64003184":"code","80f223e4":"code","1ca0b23b":"code","759ee9e0":"code","013ee863":"code","05c898e9":"code","b6e0bb59":"code","14e7a916":"code","10c9bd37":"code","2f23e292":"code","ecb22e44":"code","82bc7d22":"code","5c5c44ed":"code","8ea5dc9a":"code","b4479d39":"code","77aad745":"code","d9c6923b":"code","64520d88":"markdown","232e9aca":"markdown","10e11845":"markdown"},"source":{"0a20b0d7":"import numpy as np\nimport pandas as pd\n# importing visualization maodules\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom mpl_toolkits import mplot3d\nfrom sklearn.tree import plot_tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score,KFold,StratifiedKFold\n# importing MachineLearning Algorithms\nfrom sklearn.preprocessing import LabelEncoder,MinMaxScaler,StandardScaler\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso\nfrom sklearn.naive_bayes import MultinomialNB,BernoulliNB,GaussianNB\nfrom sklearn.linear_model import LogisticRegression,PassiveAggressiveClassifier\nfrom sklearn.svm import SVC,SVR\nfrom sklearn.tree import DecisionTreeClassifier,DecisionTreeRegressor\n# importing ensembling algorithms\nfrom sklearn.ensemble import RandomForestRegressor,RandomForestClassifier,AdaBoostClassifier,ExtraTreesClassifier,GradientBoostingClassifier,BaggingClassifier\nfrom sklearn.cluster import KMeans\nfrom sklearn.neighbors import KNeighborsClassifier,KNeighborsRegressor,RadiusNeighborsClassifier\nfrom sklearn.decomposition import PCA,TruncatedSVD\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d89288ea":"data=pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndata.head().style.set_properties(**{'background-color': '#161717','color': 'white','border-color': 'red'})","19362931":"# finding the null values in the data\nprint(data.isnull().sum())\nsns.heatmap(data.isnull())\nplt.show()","c1dcd4ca":"# info about the data\ndata.info()\n# description of the data\ndata.describe().style.set_properties(**{'background-color': '#161717','color': 'white','border-color': 'red'})","0a1dcbd2":"# plotting based on quality of the product\nfig=plt.figure(figsize=(10,10))\nsns.countplot(data=data,y='quality')\nplt.show()","8d8e2cc7":"# depecting the train_data using pairplot()\nfig=plt.figure(figsize=(10,10))\nsns.pairplot(data)\nplt.show()","002419cc":"# plotting kde graph for the given data\nfig=plt.figure(figsize=(20,20))\ndata.plot(kind='kde',subplots=True,ax=plt.gca())\nplt.legend()\nplt.show()","85f4acc2":"# plotting box graph for the given data\nfig=plt.figure(figsize=(20,20))\ndata.plot(kind='box',subplots=True,ax=plt.gca())\nplt.legend()\nplt.show()","f756babf":"# 3D plots\nax=plt.axes(projection='3d')\nax.plot_wireframe(X=data['fixed acidity'],Y=data['volatile acidity'],Z=data[['quality']])\nplt.legend()\nplt.show()","a0e494d0":"# above graph is not so clear so we'll use only 10 records of total_sulphur_dioxide vs sulphates and will plot wireframe plot in 3D\nfig=plt.figure(figsize=(10,10))\nax=plt.axes(projection='3d')\nax.plot_wireframe(X=data['fixed acidity'][:10],Y=data['volatile acidity'][:10],Z=data.loc[:10,['quality']])\nplt.show()","b369b8ea":"# surface plot for total_sulphur_dioxide vs sulphates\nfig=plt.figure(figsize=(10,10))\nax=plt.axes(projection='3d')\nax.plot_surface(X=data['total sulfur dioxide'][:10],Y=data['sulphates'][:10],Z=data.loc[:10,['quality']])\nplt.show()","82255a50":"# visualizing density vs quality\nfig=plt.figure(figsize=(20,20))\nsns.barplot(data=data,x='density',y='quality')\nplt.legend()\nplt.show()","7fba5590":"# pie chart on quality\nplt.figure(1, figsize=(10,10))\ndata['quality'].value_counts().plot.pie(autopct=\"%1.1f%%\",explode=[0,0.1,0.2,0.1,0.2,0.3],shadow=True)\nplt.legend()\nplt.show()","3c61c7ae":"fig=plt.figure(figsize=(10,10))\nsns.regplot(x='fixed acidity',y='pH',data=data,color='green')\nplt.legend()\nplt.show()","64003184":"fig=plt.figure(figsize=(30,20))\nsns.stripplot(x='fixed acidity',y='pH',data=data,color='b')\nsns.swarmplot(x='fixed acidity',y='pH',data=data,color='k')\nsns.violinplot(x='fixed acidity',y='pH',data=data,palette='rainbow')\nplt.legend()\nplt.show()","80f223e4":"# heatmap() for correlation of data\nfig=plt.figure(figsize=(10,10))\nsns.heatmap(data.corr(),color='blue')\nplt.legend()\nplt.show()","1ca0b23b":"# bar plot of each and every element\nfig=plt.figure(figsize=(20,20))\ndata.plot(kind='bar',color='black',subplots=True,ax=plt.gca())\nplt.legend()\nplt.show()","759ee9e0":"X=data.drop(['quality'],axis=\"columns\")\ny=data[['quality']]\nX.shape,y.shape","013ee863":"# classification using KNeighborsClassifier\nknn_clf=KNeighborsClassifier(n_neighbors=5)\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.3)\nknn_clf.fit(X_train,y_train)\nknn_clf.predict(X_test)","05c898e9":"print('accuracy of train set is {}'.format(knn_clf.score(X_train,y_train)))\nprint('accuracy of predicted set is {}'.format(knn_clf.score(X_test,knn_clf.predict(X_test))))","b6e0bb59":"# plotting accuracy for a range of numbers \naccuracy=[]\nn_neighbors_range=range(1,30)\nfor i in n_neighbors_range:\n    knn_clf=KNeighborsClassifier(n_neighbors=i)\n    knn_clf.fit(X_train,y_train)\n    accuracy.append(knn_clf.score(X_test,knn_clf.predict(X_test)))\nfig=plt.figure(figsize=(5,5))\nplt.plot(n_neighbors_range,accuracy)","14e7a916":"# classification using DecisionTreeClassifier\ndec_clf=DecisionTreeClassifier()\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.3)\ndec_clf.fit(X_train,y_train)\ndec_clf.predict(X_test)","10c9bd37":"print('accuracy of train set is {}'.format(dec_clf.score(X_train,y_train)))\nprint('accuracy of predicted set is {}'.format(dec_clf.score(X_test,dec_clf.predict(X_test))))","2f23e292":"# accuracy of some Supervised Classifier models has been compared with Unsupervised KMeans algorithm\nlog_reg=LogisticRegression(C=10)\nlog_reg.fit(X_train,y_train)\nknn_clf=KNeighborsClassifier(n_neighbors=5)\nknn_clf.fit(X_train,y_train)\nsvc=SVC(C=10)\nsvc.fit(X_train,y_train)\nmnb=MultinomialNB()\nmnb.fit(X_train,y_train)\nbnb=BernoulliNB()\nbnb.fit(X_train,y_train)\ngnb=GaussianNB()\ngnb.fit(X_train,y_train)\ndec_clf=DecisionTreeClassifier(criterion='entropy')\ndec_clf.fit(X_train,y_train)\nran_clf=RandomForestClassifier(n_estimators=5)\nran_clf.fit(X_train,y_train)\nrad_clf=RadiusNeighborsClassifier(radius=100.0)\nrad_clf.fit(X_train,y_train)\npassive=PassiveAggressiveClassifier(C=10)\npassive.fit(X_train,y_train)\nextra_clf=ExtraTreesClassifier()\nextra_clf.fit(X_train,y_train)\nbag_clf=BaggingClassifier()\nbag_clf.fit(X_train,y_train)\nadaboost=AdaBoostClassifier()\nadaboost.fit(X_train,y_train)\ngradient=GradientBoostingClassifier()\ngradient.fit(X_train,y_train)\nprint()","ecb22e44":"# plotting accuracy for a range of values in KMeans\nkmeans=KMeans(n_clusters=3)\nkmeans.fit(X_train,y_train)\naccuracy=[]\nn_neighbors_range=range(1,30)\nfor i in n_neighbors_range:\n    kmeans=KMeans(n_clusters=3)\n    kmeans.fit(X_train,y_train)\n    accuracy.append(kmeans.score(X_test,kmeans.predict(X_test)))\nfig=plt.figure(figsize=(5,5))\nplt.plot(n_neighbors_range,accuracy)","82bc7d22":"# accuracy of some algorithms stored in a dictionary data structure\naccuracy_of_diff_test_ml_algo={'LogisticRegression':log_reg.score(X_test,log_reg.predict(X_test)),'KNeighborsClassifier':knn_clf.score(X_test,knn_clf.predict(X_test)),'SVC':svc.score(X_test,svc.predict(X_test)),'MultinomialNB':mnb.score(X_test,mnb.predict(X_test)),'BernoulliNB':bnb.score(X_test,bnb.predict(X_test)),'GaussianNB':gnb.score(X_test,gnb.predict(X_test)),'DecisionTreeClassifier':dec_clf.score(X_test,dec_clf.predict(X_test)),'RandomForestClassifier':ran_clf.score(X_test,ran_clf.predict(X_test)),'RadiusNeighborsClassifier':rad_clf.score(X_test,rad_clf.predict(X_test)),'PassiveAggressiveClassifier':passive.score(X_test,passive.predict(X_test)),'ExtraTreesClassifier':extra_clf.score(X_test,extra_clf.predict(X_test)),'BaggingClassifier':bag_clf.score(X_test,bag_clf.predict(X_test)),'AdaBoostClassifier':adaboost.score(X_test,adaboost.predict(X_test)),'GradientBoostingClassifier':gradient.score(X_test,gradient.predict(X_test)),'KMeans':kmeans.score(X_test,kmeans.predict(X_test))}\nprint(accuracy_of_diff_test_ml_algo)\nvalues=accuracy_of_diff_test_ml_algo.values()\nkeys=accuracy_of_diff_test_ml_algo.keys()\nvalues,keys","5c5c44ed":"# plotting accuracy of some supervised algorthms vs unsupervised\nfig=plt.figure(figsize=(20,20))\nplt.bar(keys,values)","8ea5dc9a":"fig=plt.figure(figsize=(20,20))\ndata.plot(kind='hist',subplots=True,ax=fig.gca())\nplt.legend()\nplt.show()","b4479d39":"fig=plt.figure(figsize=(20,20))\nsns.jointplot(data=data,x='density',y='pH',kind='hex')\nplt.legend()\nplt.show()","77aad745":"fig=plt.figure(figsize=(20,20))\nsns.jointplot(data=data,x='density',y='pH',kind='reg')\nplt.legend()\nplt.show()","d9c6923b":"fig=plt.figure(figsize=(20,20))\nsns.pairplot(data=data,corner=True)\nplt.legend()\nplt.show()","64520d88":"#### our given data shows worst data with KMeans algorithm because our data has no categorical type data","232e9aca":"# Reading the data\n-   Description of data\n-   Finding the Null\/NaN values in the dataset\n-   Exploratory Data Analytics","10e11845":"# importing required modules"}}