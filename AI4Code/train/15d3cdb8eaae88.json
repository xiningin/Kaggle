{"cell_type":{"b7c0d077":"code","b24849d1":"code","4f6be2da":"code","86210910":"code","bf3a224b":"code","ff4a746a":"code","05956ed7":"code","6b58a083":"code","8d580682":"code","52448ce5":"code","cfef7edb":"code","4ee8f9a3":"code","a289d399":"code","9829e43b":"code","7cc23a7d":"code","735e22e8":"code","c8d97a14":"code","26c0670b":"code","0d8f48e9":"code","3bfb4d70":"code","a24b322e":"code","476065d3":"code","a631c7c8":"code","4329e4f9":"code","2c9a586a":"code","763f499e":"code","d819884a":"code","eb0630e0":"code","1ba4cb94":"code","6143055f":"code","6e3d753a":"code","469d1efb":"code","5ff81d45":"code","a5f04524":"code","5c4b770c":"code","f679e823":"code","2f261dec":"code","b0c6f250":"code","4861370f":"code","c11b017c":"code","31556af8":"code","3ced1f4b":"code","b5e9af84":"code","eadb55fb":"code","1341b33a":"code","cbca589c":"code","ae33fe12":"code","c9b00c66":"code","06744f64":"code","724db407":"code","46fc0a63":"code","2250972a":"code","570c5f94":"code","0165c839":"code","d9c9c0d1":"code","c1f9c0e4":"code","d9f7fccd":"code","73ba0412":"code","84822099":"code","5637d5ae":"markdown","6a37db0b":"markdown","31848053":"markdown","544721e8":"markdown","26d72ca2":"markdown","cf1af1ec":"markdown","ff612993":"markdown","7f3d474b":"markdown","d0043688":"markdown","fe0f9900":"markdown","ba613137":"markdown","33b1d232":"markdown","6603aa63":"markdown","75be5099":"markdown","8024fa40":"markdown","9c7648a4":"markdown"},"source":{"b7c0d077":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","b24849d1":"olist = pd.read_csv(\"..\/input\/olist_public_dataset.csv\")","4f6be2da":"olist.head()","86210910":"olist.info()","bf3a224b":"olist.describe()","ff4a746a":"olist['order_status'].value_counts()","05956ed7":"olist['product_category_name'].value_counts()","6b58a083":"#Checagem dos NaN no dataframe.\nolist.isna().sum()","8d580682":"#checando quais casos order_aproved_at tem valores NaN\nolist[pd.isna(olist['order_aproved_at'])]","52448ce5":"#convertendo as strings das colunas que tenham formato datetime\nolist['order_purchase_timestamp'] = pd.to_datetime(olist['order_purchase_timestamp'])\nolist['order_aproved_at'] = pd.to_datetime(olist['order_aproved_at'])\nolist['order_estimated_delivery_date'] = pd.to_datetime(olist['order_estimated_delivery_date'])\nolist['order_delivered_customer_date'] = pd.to_datetime(olist['order_delivered_customer_date'])\nolist['review_creation_date'] = pd.to_datetime(olist['review_creation_date'])\nolist['review_answer_timestamp'] = pd.to_datetime(olist['review_answer_timestamp'])","cfef7edb":"#vendo qual intervalo de tempo entre a pessoa fazer o pedido e o pedido ser aprovado em minutos.\nolist['delta_purch_aprov'] = (olist['order_aproved_at'] - olist['order_purchase_timestamp']).astype('timedelta64[m]')\nolist.describe()","4ee8f9a3":"sns.set_style('whitegrid')\nplt.figure(figsize=(12,8))\nplt.title('Intervalo de tempo em minutos entre o cliente comprar e o pedido ser aprovado')\nolist['delta_purch_aprov'].hist(bins=100)","a289d399":"plt.figure(figsize=(12,8))\nplt.title(\"Zoom na parte que tem maior quantidade de contagens\")\nolist['delta_purch_aprov'].hist(bins=100, range=[0,200])","9829e43b":"olist['order_aproved_at'].fillna(olist['order_purchase_timestamp']+ pd.Timedelta(minutes=19),inplace=True)\nolist['order_aproved_at'].isna().value_counts()\n#com isso todos valores NaN da coluna *oder_aproved_at* foram substituidos.","7cc23a7d":"olist['delta_esti_deliv'] = (olist['order_delivered_customer_date'] - olist['order_estimated_delivery_date']).astype('timedelta64[D]')\nolist.describe()","735e22e8":"plt.figure(figsize=(12,8))\nplt.title('Intervalo de tempo em dias entre a estimativa e o dia que o cliente recebe o produto')\nolist['delta_esti_deliv'].hist(bins=100)","c8d97a14":"plt.figure(figsize=(12,8))\nolist['delta_esti_deliv'].hist(bins=100, range= [-50,50])","26c0670b":"olist[olist['delta_esti_deliv'] > 0]['delta_esti_deliv'].describe()","0d8f48e9":"g = sns.FacetGrid(olist,col = 'review_score',height=8)\ng = g.map(plt.hist, 'delta_esti_deliv', bins = 100, range=[-50,50])","3bfb4d70":"olist['delta_esti_deliv'].corr(olist['review_score'])","a24b322e":"olist['order_delivered_customer_date'].fillna(olist['order_estimated_delivery_date']- pd.Timedelta(days=12),inplace=True)\nolist['order_delivered_customer_date'].isna().value_counts()","476065d3":"olist['year_aproved'] = olist['order_aproved_at'].apply(lambda time : time.year)","a631c7c8":"#Valor total de vendas por ano de cada categoria.\nTotal_sell_by_year = olist.groupby(by=['product_category_name','year_aproved'],sort=False)['order_products_value'].sum()\nTotal_sell_by_year.sort_index(ascending=False)\nTotal_sell_by_year.head(20)","4329e4f9":"olist.groupby(by=['year_aproved','product_category_name'],sort=False)['order_products_value'].count().head(20)","2c9a586a":"Total_sell_2016 = olist[olist['year_aproved']==2016].groupby('product_category_name').agg({'order_products_value':sum})\nTotal_sell_2016 = Total_sell_2016['order_products_value'].groupby(level=0, group_keys=False)\nTotal_sell_2016 = Total_sell_2016.apply(lambda x: x.sort_values(ascending=False))\nTotal_sell_2016.nlargest(20)","763f499e":"plt.figure(figsize=(20,8))\nplt.title('Valor total anual de vendas de 2016 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Valor total anual de vendas.')\nTotal_sell_2016.nlargest(20).plot(kind='bar')","d819884a":"Total_sell_2017 = olist[olist['year_aproved']==2017].groupby('product_category_name').agg({'order_products_value':sum})\nTotal_sell_2017 = Total_sell_2017['order_products_value'].groupby(level=0, group_keys=False)\nTotal_sell_2017 = Total_sell_2017.apply(lambda x: x.sort_values(ascending=False))\nTotal_sell_2017.nlargest(20)","eb0630e0":"plt.figure(figsize=(20,8))\nplt.title('Valor total anual de vendas de 2017 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Valor total anual de vendas.')\nTotal_sell_2017.nlargest(20).plot(kind='bar')","1ba4cb94":"Total_sell_2018 = olist[olist['year_aproved']==2018].groupby('product_category_name').agg({'order_products_value':sum})\nTotal_sell_2018 = Total_sell_2018['order_products_value'].groupby(level=0, group_keys=False)\nTotal_sell_2018 = Total_sell_2018.apply(lambda x: x.sort_values(ascending=False))\nTotal_sell_2018.nlargest(20)","6143055f":"plt.figure(figsize=(20,8))\nplt.title('Valor total anual de vendas de 2018 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Valor total anual de vendas.')\nTotal_sell_2018.nlargest(20).plot(kind='bar')","6e3d753a":"sell_2016 = Total_sell_2016.nlargest(20)\nsell_2017 = Total_sell_2017.nlargest(20)\nsell_2018 = Total_sell_2018.nlargest(20)\nTotal_sell = pd.DataFrame(data = [sell_2016,sell_2017,sell_2018])\nTotal_sell = Total_sell.T\nTotal_sell.columns = ['order_products_value_2016','order_products_value_2017','order_products_value_2018']","469d1efb":"Total_sell","5ff81d45":"ax = Total_sell.plot(kind='bar',figsize=(20,12))\nplt.ylabel('Valor total de vendas.')\nax.legend(['2016','2017','2018'])","a5f04524":"Total_quant_2016 = olist[olist['year_aproved']==2016].groupby('product_category_name').agg({'order_sellers_qty':sum})\nTotal_quant_2016 = Total_quant_2016['order_sellers_qty'].groupby(level=0, group_keys=False)\nTotal_quant_2016 = Total_quant_2016.apply(lambda x: x.sort_values(ascending=False))\nTotal_quant_2016.nlargest(20)","5c4b770c":"plt.figure(figsize=(20,8))\nplt.title('Quantidade total anual de produtos vendidos em 2016 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Quantidade total de vendas.')\nTotal_quant_2016.nlargest(20).plot(kind='bar')","f679e823":"Total_quant_2017 = olist[olist['year_aproved']==2017].groupby('product_category_name').agg({'order_sellers_qty':sum})\nTotal_quant_2017 = Total_quant_2017['order_sellers_qty'].groupby(level=0, group_keys=False)\nTotal_quant_2017 = Total_quant_2017.apply(lambda x: x.sort_values(ascending=False))\nTotal_quant_2017.nlargest(20)","2f261dec":"plt.figure(figsize=(20,8))\nplt.title('Quantidade total anual de produtos vendidos em 2017 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Quantidade total de vendas.')\nTotal_quant_2017.nlargest(20).plot(kind='bar')","b0c6f250":"Total_quant_2018 = olist[olist['year_aproved']==2018].groupby('product_category_name').agg({'order_sellers_qty':sum})\nTotal_quant_2018 = Total_quant_2018['order_sellers_qty'].groupby(level=0, group_keys=False)\nTotal_quant_2018 = Total_quant_2018.apply(lambda x: x.sort_values(ascending=False))\nTotal_quant_2018.nlargest(20)","4861370f":"plt.figure(figsize=(20,8))\nplt.title('Quantidade total anual de produtos vendidos em 2018 dos 20 maiores categorias vendidas.')\nplt.xlabel('Categoria de produtos')\nplt.ylabel('Quantidade total de vendas.')\nTotal_quant_2017.nlargest(20).plot(kind='bar')","c11b017c":"quant_2016 = Total_quant_2016.nlargest(20)\nquant_2017 = Total_quant_2017.nlargest(20)\nquant_2018 = Total_quant_2018.nlargest(20)\nTotal_quant = pd.DataFrame(data = [quant_2016*10,quant_2017,quant_2018])\nTotal_quant = Total_quant.T\nTotal_quant.columns= ['order_sellers_qty_2016','order_sellers_qty_2017','order_sellers_qty_2018']\n","31556af8":"Total_quant","3ced1f4b":"ax = Total_quant.plot(kind='bar',figsize=(20,12))\nplt.ylabel('Quantidade total de produtos vendidos.')\nax.legend(['Total produtos vendidos em 2016 (valor multiplicado por 10)','Total produtos vendidos em 2017','Total produtos vendidos em 2018'])","b5e9af84":"olist['month_aproved'] = olist['order_aproved_at'].apply(lambda time : time.month)","eadb55fb":"olist[olist['year_aproved']==2018]['month_aproved'].max()","1341b33a":"olist[olist['year_aproved']==2016]['month_aproved'].max()","cbca589c":"olist[olist['year_aproved']==2016]['month_aproved'].min()","ae33fe12":"olist.head()","c9b00c66":"Total_quant_2017_month = olist[(olist['month_aproved']<=9) & (olist['year_aproved']==2017)].groupby('product_category_name').agg({'order_sellers_qty':sum})\nTotal_quant_2017_month = Total_quant_2017_month['order_sellers_qty'].groupby(level=0, group_keys=False)\nTotal_quant_2017_month = Total_quant_2017_month.apply(lambda x: x.sort_values(ascending=False))\nTotal_quant_2017_month.nlargest(20)","06744f64":"quant_2017_month = Total_quant_2017_month.nlargest(20)\nquant_2018 = Total_quant_2018.nlargest(20)\nTotal_quant_month = pd.DataFrame(data = [quant_2017_month,quant_2018])\nTotal_quant_month = Total_quant_month.T\nTotal_quant_month.columns= ['order_sellers_qty_2017','order_sellers_qty_2018']","724db407":"Total_quant_month","46fc0a63":"ax = Total_quant_month.plot(kind='bar',figsize=(20,12))\nplt.title('Quantidade total de produtos vendidos entre os meses de janeiro a setembro.')\nplt.ylabel('Quantidade total de produtos vendidos.')\nax.legend(['Total produtos vendidos em 2017','Total produtos vendidos em 2018'])","2250972a":"\nolist_2017_quant = olist[olist['year_aproved']==2017]\nTq_2017= Total_quant['order_sellers_qty_2017'].dropna().reset_index()\nolist_2017_quant = olist_2017_quant[olist_2017_quant['product_category_name'].isin(Tq_2017['index'])].groupby(by = ['product_category_name','month_aproved']).sum()\nolist_2017_quant.reset_index(inplace=True)\nolist_2017_quant.head(20)","570c5f94":"plt.figure(figsize=(25,10))\nplt.title('Quantidade de vendas por m\u00eas dos produtos mais vendidos no ano de 2017')\nplt.xticks(np.arange(1,13,1))\nsns.lineplot(x = \"month_aproved\" , y = 'order_items_qty', data = olist_2017_quant, hue='product_category_name', palette= 'muted')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","0165c839":"olist_2017_sell = olist[olist['year_aproved']==2017]\nTs_2017 = Total_sell['order_products_value_2017'].dropna().reset_index()\nolist_2017_sell = olist_2017_sell[olist_2017_sell['product_category_name'].isin(Ts_2017['index'])].groupby(by = ['product_category_name','month_aproved']).sum()\nolist_2017_sell.reset_index(inplace=True)\nolist_2017_sell.head(20)","d9c9c0d1":"plt.figure(figsize=(25,10))\nplt.title('Valor total de vendas por m\u00eas dos produtos mais vendidos no ano de 2017')\nplt.xticks(np.arange(1,13,1))\nsns.lineplot(x = \"month_aproved\" , y = 'order_products_value', data = olist_2017_sell, hue='product_category_name', palette= 'Paired')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","c1f9c0e4":"olist_2018_quant = olist[olist['year_aproved']==2018]\nTqm_2018 = Total_quant['order_sellers_qty_2018'].dropna().reset_index()\nolist_2018_quant = olist_2018_quant[olist_2018_quant['product_category_name'].isin(Tqm_2018['index'])].groupby(by = ['product_category_name','month_aproved']).sum()\nolist_2018_quant.reset_index(inplace=True)\nolist_2018_quant.head(20)","d9f7fccd":"plt.figure(figsize=(25,10))\nplt.title('Quantidade de vendas por m\u00eas dos produtos mais vendidos no ano de 2018')\nplt.xticks(np.arange(1,13,1))\nsns.lineplot(x = \"month_aproved\" , y = 'order_items_qty', data = olist_2018_quant, hue='product_category_name', palette= 'muted')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","73ba0412":"olist_2018_sell = olist[olist['year_aproved']==2018]\nTs_2018 = Total_sell['order_products_value_2017'].dropna().reset_index()\nolist_2018_sell = olist_2018_sell[olist_2018_sell['product_category_name'].isin(Ts_2018['index'])].groupby(by = ['product_category_name','month_aproved']).sum()\nolist_2018_sell.reset_index(inplace=True)\nolist_2018_sell.head(20)","84822099":"plt.figure(figsize=(25,10))\nplt.title('Valor total de vendas por m\u00eas dos produtos mais vendidos no ano de 2018')\nplt.xticks(np.arange(1,13,1))\nsns.lineplot(x = \"month_aproved\" , y = 'order_products_value', data = olist_2018_sell, hue='product_category_name', palette= 'Paired')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","5637d5ae":"**Filtrando o dataframe por m\u00eas para somente produtos com maior quantidade de produtos vendidos no ano de 2018**","6a37db0b":"** A princ\u00edpio as colunas *review_comment_title* e *review_comment_message* que cont\u00e9m muitos valores NaN podem ser ignorados para entendimento de uma predi\u00e7\u00e3o sobre valores de vendas e frete.**","31848053":"**Filtrando o dataframe por m\u00eas para somente os 20 maiores valor de venda ano de 2017**","544721e8":"** Ano de 2018 o calculo \u00e9 feito de janeiro a setembro. Ano de 2016 \u00e9 feito de setembro a dezembro, isso implica o fato dos valores em 2016 serem baixos tb.**\n\n** Podemos comparar somente os 9 primeiros meses de 2017 e 2018.**","26d72ca2":"** Valores de 2016 foram multiplicados por 10 para melhor visualiza\u00e7\u00e3o dos dados.**","cf1af1ec":"** Mesmo procedimento pode ser feito para ver quais categorias deve uma maior quantidade de produtos vendidos. **","ff612993":"Na coluna *order_delivered_customer_date* contem alguns NaN tamb\u00e9m, utilizando o mesmo procedimento acima podemos ver um valor plaus\u00edvel para acrescentar em *order_estimated_delivery_date*.","7f3d474b":"**Com isso pode-se observar que o atraso em rela\u00e7\u00e3o a estimativa de entrega dos produtos, parece ter uma rela\u00e7\u00e3o com a nota que o fornecedor recebeu do produto, pois nos em *review_score* =1 \u00e9 onde tem uma maior concentra\u00e7\u00e3o de atrasos de pedidos. Por\u00e9m a correla\u00e7\u00e3o entre esses dados \u00e9 negativa o que quer dizer que s\u00e3o inversamente correlacionadas. Isso pode-se ver melhor vendo somente a correla\u00e7\u00e3o entre os atrasos dos pedidos com *review_score*=1.**\n\n**E a maior parte da diferen\u00e7a entre a estimativa e a entrega est\u00e1 pr\u00f3ximo ao valor m\u00e9dio que \u00e9 -12 dias, ou seja boa parte dos produtos est\u00e3o chegando 12 dias antes da estimativa. Logo pode-se substituir todos NaN da coluna *order_delivered_customer_date* pelos valores da coluna *order_estimated_delivery_date* -12 dias. **","d0043688":"Com esse plot \u00e9 visto que maior quantidade de contagens (por volta de 12 mil) est\u00e1 por volta dos 50% que \u00e9 19min entre o tempo que a pessoa faz o pedido e o sistema aprova o pedido. Ent\u00e3o \u00e9 mais l\u00f3gico substituir os NaN da coluna *order_aproved_at* pelos respectivos valores da coluna *order_purchased_time* +19min","fe0f9900":"** Observa-se que somente *relogios_presentes* teve um aumento em total de vendas em 2018, isso se deve ao fato que em 2017 foram calculado com base de 12 meses e 2018 n\u00e3o. Mas pode-se observar o mesmo gr\u00e1fico calculando somente para as mesmas quantidade de meses de 2017.**","ba613137":"**Filtrando o dataframe por m\u00eas para somente os 20 maiores valor de venda ano de 2018**","33b1d232":"** Pode-se observar que teve produtos que em algum ano deixaram de estar entre os 20 maiores valor de vendas (valores com NaN). **","6603aa63":"** Observa-se que teve alguns produtos que sua quantidade de vendas n\u00e3o estiveram entre os 20 maiores produtos vendidos em alguns anos (valores com NaN) .**","75be5099":"** Pode-se separar por anos, e visualizar quais  categorias de produtos no ano teve uma maior quantidade de vendas no ano. **","8024fa40":"**Filtrando o dataframe por m\u00eas para somente *product_category_name* dos 20 mais vendidos no ano de 2017**","9c7648a4":"Datas da Olist\nColunas cont\u00e9m:\n* order_status = delivered, shipped, canceled, processing, invoiced, unavailable.\n* order_products_values = valores dos produtos.\n* order_freight_values = valores dos fretes.\n* order_items_qty = quantidade de items comprado.\n* order_seller_qty = quantidade de vendedores que atenderam .\n* order_purchased_timestamp = hor\u00e1rio que a compra foi efetuada.\n* oder_aproved_at = hor\u00e1rio que a compra foi aprovada.\n* order_estimated_delivery_date = data estimada da entrega.\n* order_delivered_customer_date = data que o cliente recebeu o produto.\n* customer_city =  cidade do comprador.\n* customer_state = estado do comprador.\n* customer_zip_code_prefix = prefixo do cep do comprador.\n* product_category_name = categoria do produto.\n* product_name_lenght = tamanho de caracteres do nome do produto.\n* product_description_lenght = tamanho em caracteres da descri\u00e7\u00e3o do produto.\n* product_photos_qty = quantidade de fotos do produto.\n* review_score = nota do produto.\n* review_comment_title = titulo da resenha.\n* review_comment_message = resenha.\n* review_creation_date = data da cria\u00e7\u00e3o da resenha.\n* review_answer_timestamp = data da resposta da pesquisa de satisfa\u00e7\u00e3o."}}