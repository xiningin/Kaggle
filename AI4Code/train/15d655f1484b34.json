{"cell_type":{"9c2786a4":"code","5cb8b982":"code","1cefa3fd":"code","b5adc836":"code","c0d1e409":"code","9d8879c0":"code","fe64aeec":"code","4aa3dcd0":"code","808a2ffa":"code","66a71671":"code","61c669e8":"code","2e97be52":"code","7b07d5ab":"markdown","8c08e655":"markdown","256d5dd5":"markdown","e3304cf2":"markdown","ccfada2e":"markdown","050861bf":"markdown"},"source":{"9c2786a4":"!pip install tinymlgen","5cb8b982":"import numpy as np\nfrom sklearn.datasets import load_digits\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tinymlgen import port","1cefa3fd":"np.random.seed(1337)\nx_values, y_values = load_digits(return_X_y=True)\nx_values \/= x_values.max()\n\n# reshape to (8x8x1)\nx_values = x_values.reshape(-1,8,8,1)\nprint(x_values.shape)","b5adc836":"# split into train, validation, test\nTRAIN_SPLIT = int(0.6 * len(x_values))\nTEST_SPLIT  = int(0.2 * len(x_values) + TRAIN_SPLIT)\nx_train, x_val, x_test = np.split(x_values, [TRAIN_SPLIT, TEST_SPLIT])\ny_train, y_val, y_test = np.split(y_values, [TRAIN_SPLIT, TEST_SPLIT])\nprint(x_train.shape)\nprint(x_val.shape)\nprint(x_test.shape)","c0d1e409":"num_classes = len(np.unique(y_train))\nprint(num_classes)","9d8879c0":"# create a CNN\nmodel = tf.keras.Sequential()\nmodel.add(layers.Conv2D(8, (3, 3), activation='relu', input_shape=(8, 8, 1)))\n#model.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(num_classes))\n# \nmodel.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\n\nmodel.summary()","fe64aeec":"# Train model\nmodel.fit(x_train, y_train, epochs=50, batch_size=16, validation_data=(x_val, y_val))","4aa3dcd0":"x_test = (x_test \/ x_test.max()).reshape((len(x_test), 8, 8, 1))\ny_pred = model.predict(x_test).argmax(axis=1)\n\nprint('ACCURACY', (y_pred == y_test).sum() \/ len(y_test))","808a2ffa":"c_code = port(model, variable_name='digits_model', pretty_print=True, optimize=False)\n\nwith open('digits_model.h', 'w') as f:\n    print(c_code, file=f)","66a71671":"print(y_test[0]) # select y_test[0]","61c669e8":"with open('x_test.h', 'w') as f:\n    print(\"float x_test_dat[64] = {\", file=f)    \n    for i in range(8):\n        s = \"       \"\n        for j in range(8):\n            s+=str(x_test[0][i][j][0])+', ' # select x_test[0]\n        print(s, file=f)\n    print(\"};\", file=f)\nf.close()","2e97be52":"!cat x_test.h","7b07d5ab":"## Dataset: Sklearn 8x8 digit","8c08e655":"## Test Model","256d5dd5":"## Train Model","e3304cf2":"# TinyML digit recognization","ccfada2e":"## Output: digits_model.h & x_test.h are used in [TinyML_Digit](https:\/\/github.com\/rkuo2000\/arduino\/tree\/master\/examples\/TinyML_Digit)","050861bf":"## For TinyML"}}