{"cell_type":{"3e644218":"code","d9f0c7f6":"code","87ad4223":"code","b5598607":"code","a71ec0b4":"code","bf3fa803":"code","407dea9b":"code","85cebbea":"code","0568ce14":"code","538de4ab":"code","50f2e971":"code","6a50619a":"code","7e9b70f8":"code","e1750f88":"code","aa5eea55":"code","6defe072":"code","43374388":"code","06a9769e":"code","b6def7aa":"code","f9ade1a6":"code","2d60f572":"code","d3ae8682":"code","4d87a52b":"code","a94ea6ea":"code","08fd1a92":"code","fbe59455":"code","73910361":"code","f72cc4f6":"code","0f2c556e":"code","83134b83":"code","48088971":"code","516b8f54":"code","19940813":"code","6c5ca571":"code","9d9f8d0a":"code","7599f562":"code","1b94457d":"code","2576274f":"code","a4c0b55b":"code","7dca3a49":"code","424730c4":"code","b70ce46b":"code","90260cd5":"markdown","76794812":"markdown","2e260372":"markdown","4c926383":"markdown","3c2c2b25":"markdown","0f632e63":"markdown","6d8bae98":"markdown","1cd6aa21":"markdown","9f554010":"markdown","aa1801a1":"markdown","2b37249d":"markdown","35f10ddf":"markdown","3bd4040b":"markdown","30d1b0ab":"markdown","fe4aa6a5":"markdown","5406e5f5":"markdown","d66d6c44":"markdown","b36ceabc":"markdown","6b8ffc91":"markdown","f1caa68c":"markdown","a93a4158":"markdown","1bc11e5f":"markdown","3a605fe1":"markdown","e7f20c96":"markdown","795c868e":"markdown","144ffac3":"markdown","b65a82be":"markdown","2a46b8b2":"markdown","69dac72e":"markdown","db0cc383":"markdown","55b5fcee":"markdown","a89c2761":"markdown","96edb12a":"markdown","55134e33":"markdown","36cae06d":"markdown","b190da4f":"markdown","cf698af2":"markdown","47c97121":"markdown","1caf9dcf":"markdown","763812d9":"markdown","42037d80":"markdown","1be0fb97":"markdown","a50f8be8":"markdown","f33c3674":"markdown","431e9a42":"markdown","5c1fdcd7":"markdown","5414816c":"markdown","44e2f28a":"markdown","8c798ee5":"markdown","d795e3b5":"markdown"},"source":{"3e644218":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","d9f0c7f6":"df = pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')","87ad4223":"df.head()","b5598607":"df.info()","a71ec0b4":"df = df.drop('sl_no',axis=1)\n\ndf.rename(inplace=True,columns={'gender':'Gender','ssc_p':'Secondary Ed %','ssc_b':'Secondary Board',\n                   'hsc_p':'Higher Secondary Ed %','hsc_b':'Higher Secondary Board',\n                   'hsc_s':'Higher Secondary Specialization','degree_p':'Degree %',\n                   'degree_t':'Under Grad Field','workex':'Work Exp','etest_p':'Employability Test %',\n                   'specialisation':'Post Grad Specialization','mba_p':'MBA %','status':'Placement Status',\n                                'salary':'Salary'})","bf3fa803":"sns.countplot(x='Placement Status',data= df)","407dea9b":"(len(df[df['Placement Status'] == 'Placed']) \/ len(df['Placement Status']))*100","85cebbea":"sns.countplot(x='Placement Status',data= df,hue='Gender')","0568ce14":"def feature_classification_percent(dataframe, feature, goalfeature, positive_goal_value):\n    \n    unique_lst = []\n    unique_dic = {}\n    \n    # Add all unique values in feature to a list\n    for i in range(len(dataframe[feature].unique())):\n        unique_lst.append(dataframe[feature].unique()[i])\n\n    \n    # Count the amount for each value in feature and count the amount of each value in that feature that the goalfeature is 1\n    # Calculate the percentage of that feature that the goalfeature is 1\n    # Add information for each value to a calculated values list\n    tot_lst = []\n    pos_lst = []\n    pos_perc_lst = []\n    \n    for j in range(len(unique_lst)):\n        tot = dataframe[dataframe[feature] == unique_lst[j]][goalfeature].count()\n        pos = len(dataframe[(dataframe[feature] == unique_lst[j]) & (dataframe[goalfeature] == positive_goal_value)])\n        pos_perc = str(round((pos \/ tot) * 100,1)) + '%'\n        \n        tot_lst.append(tot)\n        pos_lst.append(pos)\n        pos_perc_lst.append(pos_perc)\n        \n        \n    # Convert these lists into Series and create index Series\n    tot_series = pd.Series(tot_lst)\n    pos_series = pd.Series(pos_lst)\n    pos_perc_series = pd.Series(pos_perc_lst)\n    value_series = pd.Series(unique_lst)\n    \n    #Create Dataframe from Series\n    feature_dataframe = pd.DataFrame({'Values':value_series,'Total Amount':tot_series,'Positive Amount':pos_series,'Positive Percentage':pos_perc_series})\n    feature_dataframe.set_index('Values',inplace=True)\n    feature_dataframe.sort_values(by='Positive Percentage',inplace=True, ascending=False)\n   \n    with pd.option_context('display.max_rows', None, 'display.max_columns', None):\n        display(feature_dataframe)","538de4ab":"feature_classification_percent(df,'Gender','Placement Status','Placed')","50f2e971":"sns.boxplot('Secondary Ed %','Placement Status',data=df)","6a50619a":"sns.countplot(x='Placement Status',data= df,hue='Secondary Board')","7e9b70f8":"feature_classification_percent(df,'Secondary Board','Placement Status','Placed')","e1750f88":"sns.boxplot('Higher Secondary Ed %','Placement Status',data=df)","aa5eea55":"sns.countplot(x='Placement Status',data= df,hue='Higher Secondary Board')","6defe072":"feature_classification_percent(df,'Higher Secondary Board','Placement Status','Placed')","43374388":"sns.countplot(x='Higher Secondary Specialization',data= df,hue='Placement Status')","06a9769e":"feature_classification_percent(df,'Higher Secondary Specialization','Placement Status','Placed')","b6def7aa":"sns.boxplot('Degree %','Placement Status',data=df)","f9ade1a6":"sns.countplot(x='Placement Status',data= df,hue='Under Grad Field')","2d60f572":"feature_classification_percent(df,'Under Grad Field','Placement Status','Placed')","d3ae8682":"sns.countplot(x='Placement Status',data= df,hue='Work Exp')","4d87a52b":"sns.boxplot('Employability Test %','Placement Status',data=df)","a94ea6ea":"sns.countplot(x='Placement Status',data= df,hue='Post Grad Specialization')","08fd1a92":"feature_classification_percent(df,'Post Grad Specialization','Placement Status','Placed')","fbe59455":"sns.boxplot('MBA %','Placement Status',data=df)","73910361":"df.drop(['Secondary Board','Higher Secondary Board'],axis=1,inplace=True)","f72cc4f6":"df['Gender'] = df['Gender'].map({'M':0,'F':1})\ndf['Work Exp'] = df['Work Exp'].map({'No':0,'Yes':1})\ndf['Placement Status'] = df['Placement Status'].map({'Not Placed':0,'Placed':1})","0f2c556e":"df = pd.get_dummies(df)","83134b83":"sns.boxplot(df['Salary'])","48088971":"df = df.drop(df[df['Salary'] > 400000].index)","516b8f54":"df.drop('Salary',axis=1,inplace=True)","19940813":"plt.figure(figsize=(14,8))\nsns.heatmap(df.corr(),annot=True)","6c5ca571":"df = df.drop(['Higher Secondary Specialization_Science','Under Grad Field_Sci&Tech',\n                'Post Grad Specialization_Mkt&HR'],axis=1)","9d9f8d0a":"plt.figure(figsize=(14,8))\nsns.heatmap(df.corr(),annot=True)","7599f562":"df = df.drop(['Gender','Under Grad Field_Comm&Mgmt','Under Grad Field_Others','MBA %',\n                           'Higher Secondary Specialization_Arts',\n                           'Higher Secondary Specialization_Commerce'],axis=1)","1b94457d":"plt.figure(figsize=(14,8))\nsns.heatmap(df.corr(),annot=True)","2576274f":"X = df.drop('Placement Status',axis=1)\ny = df['Placement Status']","a4c0b55b":"scaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)","7dca3a49":"X_train, X_test, y_train, y_test = train_test_split(X_scaled,y,test_size=0.3,random_state=42)","424730c4":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)\npredictions = logmodel.predict(X_test)","b70ce46b":"print(classification_report(y_test,predictions))\nprint(confusion_matrix(y_test,predictions))","90260cd5":"## Predict Placement Status","76794812":"### Secondary Ed %","2e260372":"As 'Secondary Ed %' increases, likeliness of being placed increases.","4c926383":"Use map function to assign numerical values to features:","3c2c2b25":"### Under Grad Degrees","0f632e63":"Again, the 'Higher Secondary Board' doesn't seem to influence 'Placement Status'.","6d8bae98":"## Outliers","1cd6aa21":"About 69% of the data are for those who were placed. ","9f554010":"Use Sklearn's MinMaxScaler to scale the test data.","aa1801a1":"### Higher Secondary Board","2b37249d":"Explore features in the data and the relationship to 'Placement Status':","35f10ddf":"'Secondary Board' doesn't appear to have much impact on 'Placement Status'","3bd4040b":"### Post Grad Specialization","30d1b0ab":"Those with 'Mkt&Fin' were more likely to be placed. This is also true for 'Mkt&HR' but far less so.","fe4aa6a5":"### Higher Secondary Ed %","5406e5f5":"71.9% of men and 63.2% of women are placed. There are more men that were placed in the data and they were more likely to be placed.","d66d6c44":"A lot of overlap for this feature as well.","b36ceabc":"As 'Degree %' increases, likeliness of being placed also increases.","6b8ffc91":"Remove any data with 'Salary' above 400000.","f1caa68c":"### Degree %","a93a4158":"### Higher Secondary Specialization","1bc11e5f":"Import the libraries that will be used:","3a605fe1":"### Logistic Regression Model","e7f20c96":"### MBA %","795c868e":"### Placement Status","144ffac3":"Remove more features that show signs of multicoliniarity (>0.7)\n\n- Higher Secondary Specialization (remove science)\n- Under Grad Field (remove Sci&Tech)\n- Post Grad Specialization (remove Mkt&HR)","b65a82be":"## Exploratory Data Analysis","2a46b8b2":"Rename all features for readability and remove 'sl_no'.","69dac72e":"## Correlation Plots","db0cc383":"Train a logistic regression model to predict 'Placement Status' of the test set. ","55b5fcee":"Before making the feature objects into numerical and creating dummies, I will drop both school boards because they don't seem to correlate with placement.","a89c2761":"# Campus Placement Prediction with Logistic Regression","96edb12a":"### Gender","55134e33":"### Train\/Test Split","36cae06d":"### Work Experience","b190da4f":"### Scale the Data","cf698af2":"## Data Cleaning","47c97121":"A lot of overlap, but it may still may influence 'Placement Status'.","1caf9dcf":"Drop more features that have low correlation with 'Placement Status':","763812d9":"No missing data besides 'salary' for those who were not placed. ","42037d80":"Commerce and Science specializations have the same chance of being placed, but Arts is less likely. ","1be0fb97":"### Secondary Board","a50f8be8":"Get dummies for the other features that have more than 2 unique values:","f33c3674":"Read in and inspect the data.","431e9a42":"'Work Experience' appears to influence 'Placement Status' if they have Work Experience as most were placed. Those without Work Experience are split between both. ","5c1fdcd7":"### Employability Test","5414816c":"'Higher Secondary Ed %' appears to increase likeliness of being placed.","44e2f28a":"With these outliers removed, let's drop salary because it can't be used to predict 'Placement Status'.","8c798ee5":"Split the data into train and test dataframes. Use 30% of the data as the test set.","d795e3b5":"Appears that men are more likely than females to be placed. Let's look closer. First define a function to print Placement Status percentages for each unique value in a feature."}}