{"cell_type":{"1f0e9ac2":"code","9edd87a6":"code","c3d8201f":"code","56a4490f":"code","09979ae2":"code","1b3a61c2":"code","37a58b94":"code","5bfea28e":"markdown","370f9592":"markdown","aa15fea8":"markdown","1b1a0049":"markdown","4a58271c":"markdown","ceb6cd6b":"markdown","0619b782":"markdown","05ec3f6f":"markdown","eeb19b07":"markdown"},"source":{"1f0e9ac2":"import numpy as np\nimport os\n\nSEED = 42\nnp.random.seed(SEED)","9edd87a6":"from sklearn.datasets import make_moons\nX, y = make_moons(n_samples=500, noise=0.30, random_state=SEED)","c3d8201f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=SEED)","56a4490f":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nlog_clf = LogisticRegression(solver=\"lbfgs\", random_state=SEED)\nrnd_clf = RandomForestClassifier(n_estimators=100, random_state=SEED)\nsvm_clf = SVC(gamma=\"scale\", random_state=SEED)\n\nvoting_clf = VotingClassifier(\n    estimators=[('lr', log_clf), ('rf', rnd_clf), ('svc', svm_clf)],\n    voting='hard')\nvoting_clf.fit(X_train, y_train)","09979ae2":"from sklearn.metrics import accuracy_score\n\nfor clf in (log_clf, rnd_clf, svm_clf, voting_clf):\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.__name__, accuracy_score(y_test, y_pred))","1b3a61c2":"log_clf = LogisticRegression(solver=\"lbfgs\", random_state=SEED)\nrnd_clf = RandomForestClassifier(n_estimators=100, random_state=SEED)\nsvm_clf = SVC(gamma=\"scale\", probability=True, random_state=SEED)\n\nvoting_clf = VotingClassifier(\n    estimators=[('lr', log_clf), ('rf', rnd_clf), ('svc', svm_clf)],\n    voting='soft')\nvoting_clf.fit(X_train, y_train)","37a58b94":"from sklearn.metrics import accuracy_score\n\nfor clf in (log_clf, rnd_clf, svm_clf, voting_clf):\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.__name__, accuracy_score(y_test, y_pred))","5bfea28e":"## make models","370f9592":"# make models ","aa15fea8":"# 1.make data \n","1b1a0049":"# import libraries","4a58271c":"## show accuracy result ","ceb6cd6b":"# 3-2. Soft Voting -> [voting='soft']","0619b782":"## show accuracy result ","05ec3f6f":"# 2.devide train data and validation data  ","eeb19b07":"# 3-1.Hard Voting ->  [voting='hard']"}}