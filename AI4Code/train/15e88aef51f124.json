{"cell_type":{"ecc888e4":"code","6fdc9b5d":"code","87ba56e0":"code","2cb6f994":"code","40618c80":"code","d3f5dde5":"code","b3b17d11":"code","39a5ce1d":"code","7a7f53de":"code","9c68288b":"code","098fcb5c":"code","a035abce":"code","2195d315":"code","cb912e32":"code","436e8071":"code","46b69deb":"code","260994bf":"code","c06b10fd":"code","b8b819c8":"code","37a6a02a":"code","81d5c18b":"code","c38b8224":"markdown","a476407e":"markdown","af68be40":"markdown","22282b7f":"markdown","b3081e22":"markdown","13923cb4":"markdown","d3a12d9f":"markdown","7a8b7419":"markdown","c0c4b0f9":"markdown","3c3f8e07":"markdown","bd21c0e1":"markdown","d38e3c79":"markdown","6c15c11b":"markdown","bbcfa766":"markdown","944115d1":"markdown","7d280645":"markdown","20a08b07":"markdown","b0cbdcda":"markdown","4f5f5536":"markdown","e90642c4":"markdown","3b2480bc":"markdown","1b8f30e5":"markdown"},"source":{"ecc888e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        os.path.join(dirname, filename)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6fdc9b5d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport cv2\nimport os\nfrom tqdm import tqdm","87ba56e0":"DATADIR = '..\/input\/color-classification\/ColorClassification'\nCATEGORIES = ['orange','Violet','red','Blue','Green','Black','Brown','White']\nIMG_SIZE=100","2cb6f994":"for category in CATEGORIES:\n    path=os.path.join(DATADIR, category)\n    for img in os.listdir(path):\n        img_array=cv2.imread(os.path.join(path,img),cv2.COLOR_BGR2RGB)\n        plt.imshow(img_array)\n        plt.show()\n        break\n    #break\n\n","40618c80":"cols=2\nrows=4\ncol_index=0\nrow_index=0\nf, axarr = plt.subplots(rows,cols,figsize=(12, 12))\nfor category in CATEGORIES:\n    path=os.path.join(DATADIR, category)\n    for img in os.listdir(path):\n        img_array=cv2.imread(os.path.join(path,img),cv2.COLOR_BGR2RGB)\n        axarr[row_index,col_index].imshow(img_array)\n        axarr[row_index,col_index].set_title(category+str(row_index)+str(col_index))\n        print(category,row_index,col_index)\n        break\n    col_index=col_index+1\n    if(col_index==cols):\n        row_index=row_index+1\n        col_index=0\n    ","d3f5dde5":"training_data=[]\ndef create_training_data():\n    for category in CATEGORIES:\n        path=os.path.join(DATADIR, category)\n        class_num=CATEGORIES.index(category)\n        for img in os.listdir(path):\n            try:\n                img_array=cv2.imread(os.path.join(path,img))\n                new_array=cv2.resize(img_array,(IMG_SIZE,IMG_SIZE))\n                training_data.append([new_array,class_num])\n            except Exception as e:\n                pass\ncreate_training_data()            ","b3b17d11":"print(len(training_data))","39a5ce1d":"lenofimage = len(training_data)","7a7f53de":"X=[]\ny=[]\n\nfor categories, label in training_data:\n    X.append(categories)\n    y.append(label)\nX= np.array(X).reshape(lenofimage,-1)\n##X = tf.keras.utils.normalize(X, axis = 1)\n","9c68288b":"X.shape","098fcb5c":"X = X\/255.0","a035abce":"X[1]","2195d315":"y=np.array(y)","cb912e32":"y.shape","436e8071":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y)\n\n","46b69deb":"from sklearn.svm import SVC\nsvc = SVC(kernel='linear',gamma='auto')\nsvc.fit(X_train, y_train)","260994bf":"y2 = svc.predict(X_test)","c06b10fd":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy on unknown data is\",accuracy_score(y_test,y2))","b8b819c8":"from sklearn.metrics import classification_report\nprint(\"Accuracy on unknown data is\",classification_report(y_test,y2))","37a6a02a":"result = pd.DataFrame({'original' : y_test,'predicted' : y2})","81d5c18b":"result","c38b8224":"**Importing the dataset**","a476407e":"Image Classificaation using SVM is very efficient way of modelling and very rarely used algorithm for image processing and modelling..!!!!","af68be40":"we have moslty classified all the images correctly with their labels .doing classification on limited dataset is always a challenging task....but by SVM we have dealed with it succesfully","22282b7f":"The Dataset is named as 'Color Classification' created by Aydin Ayanzadeh. we are provided with images of different color set with labels of color name such as red,blue,etc link :- https:\/\/www.kaggle.com\/ayanzadeh93\/color-classification","b3081e22":"Now we are ready with our dependent and independent features, now its time for data modelling\n\napplying train_test_split on our data","13923cb4":"**predicting the X_test**","d3a12d9f":"**fromulating the Classification report**","7a8b7419":"**flattening the array**","c0c4b0f9":"importing basic Packages..!!","3c3f8e07":"note : y should be in array form compulsory.\n","bd21c0e1":"**fitting our data in SVM model**","d38e3c79":"performing preprocessing steps...::\n","6c15c11b":"Ex. of flattened array...","bbcfa766":"storing trainig length for further use.","944115d1":"**Ahhyeah....accuracy of 92.28% which is what we wanted..!!!!**","7d280645":"Tips for using SVM for image classification\n\n* You should have image data in 2D rather than 4D (as SVM training model accepts dim <=2 so we need to convert the image data to 2D which i'll be showing later on in this notebook).\n\n* SVM algorithm is to be used when their is shortage of data in our dataset .\n\n* If we have good amount of image data so, we look further for CNN model.\n","20a08b07":"and X should be of type (training_data_length , -1) because SVM takes 2D input to train","b0cbdcda":"*IF YOU LIKED MY KERNAL PLEASE UPVOTE IT*","4f5f5536":"now,we have provided data directory to DATADIR variable and labels of color set to CATEGORIES variable for further use.","e90642c4":"for image to be trained we have to convert the image to a array form so,that our model can train on it...!!","3b2480bc":"# INFO OF DATASET...!!","1b8f30e5":"Ex. of an sample image is shown below\n"}}