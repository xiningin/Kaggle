{"cell_type":{"a2229850":"code","13f37140":"code","35e4dd62":"code","7c03cb01":"code","6cf48253":"code","00e8ce48":"code","35aae2b2":"code","282f9cc5":"code","2414636b":"code","18dc004f":"code","5731b6b9":"code","02337348":"code","df14336b":"code","50e41650":"code","6729e82b":"code","cd8e9c4c":"code","ccb8f0d0":"code","3d81ed8f":"code","668c7131":"code","17e6b501":"code","584ec9c7":"code","662f2240":"code","20f89c57":"code","c0448938":"code","a40c32ed":"code","940b9b94":"code","222d087c":"code","67ee0d1a":"code","2d44d181":"code","11417c89":"code","da03f245":"code","6fda4124":"code","d8f0ae3e":"code","921420d8":"code","7f73ba7c":"code","28308c3c":"code","f70f9907":"code","ab5d733c":"code","591d4132":"code","0bd87379":"code","a62ba715":"code","40318170":"code","a61fa59a":"code","a20da87a":"code","77a49096":"code","01557a15":"code","dc40baa4":"code","42a8d988":"code","75a0c39c":"code","6e0f0b56":"code","9ceed2f2":"code","dd970bfa":"code","fae158b2":"code","9631381e":"code","6313ddbb":"code","7730efaa":"markdown","6bedfc34":"markdown","8f9296ed":"markdown","51b44e60":"markdown"},"source":{"a2229850":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13f37140":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","35e4dd62":"google_data = pd.read_csv(r\"..\/input\/googleplaystore\/3.googleplaystore.csv\")","7c03cb01":"google_data.shape","6cf48253":"google_data.isnull().sum()","00e8ce48":"google_data.columns","35aae2b2":"google_data.head()","282f9cc5":"type(google_data)","2414636b":"google_data.describe()","18dc004f":"google_data.boxplot()","5731b6b9":"google_data.hist()","02337348":"google_data.tail(2)","df14336b":"google_data[google_data.Rating>5]","50e41650":"google_data.drop([10472], inplace = True)","6729e82b":"google_data[google_data.Rating>5]","cd8e9c4c":"google_data.boxplot()","ccb8f0d0":"google_data.hist()","3d81ed8f":"google_data.isnull().sum()","668c7131":"def impute_median(series):\n    return series.fillna(series.median())","17e6b501":"google_data.Rating = google_data['Rating'].transform(impute_median)","584ec9c7":"google_data.isnull().sum()","662f2240":"print(google_data['Type'].mode())\nprint(google_data['Current Ver'].mode())\nprint(google_data['Android Ver'].mode())","20f89c57":"google_data[\"Type\"].mode().values[0]","c0448938":"google_data['Type'].fillna(str(google_data[\"Type\"].mode().values[0]), inplace= True)\ngoogle_data['Current Ver'].fillna(str(google_data['Current Ver'].mode().values[0]), inplace = True)\ngoogle_data['Android Ver'].fillna(str(google_data['Android Ver'].mode().values[0]), inplace = True)\n","a40c32ed":"google_data.isnull().sum()","940b9b94":"google_data[\"Price\"].unique()","222d087c":"google_data[\"Price\"] = google_data[\"Price\"].apply(lambda x: str(x).replace(\"$\", \"\") if \"$\" in str(x) else str(x))\n","67ee0d1a":"google_data[\"Price\"].unique()","2d44d181":"google_data[\"Price\"] = google_data[\"Price\"].apply(lambda x: float(x))","11417c89":"google_data[\"Price\"].unique()","da03f245":"google_data[\"Reviews\"].unique()","6fda4124":"google_data[\"Reviews\"] = pd.to_numeric(google_data[\"Reviews\"], errors= \"coerce\")","d8f0ae3e":"google_data[\"Reviews\"].unique()","921420d8":"google_data.head(2)","7f73ba7c":"google_data[\"Installs\"].unique()","28308c3c":"google_data[\"Installs\"] = google_data[\"Installs\"].apply(lambda x: str(x).replace(\"+\",\"\") if \"+\" in str(x) else str(x))\n","f70f9907":"google_data[\"Installs\"].unique()","ab5d733c":"google_data[\"Installs\"]= google_data[\"Installs\"].apply(lambda x: str(x).replace(',','') if ',' in str(x) else str(x))","591d4132":"google_data[\"Installs\"].unique()","0bd87379":"google_data[\"Installs\"] = google_data[\"Installs\"].apply(lambda x: float(x))","a62ba715":"google_data[\"Installs\"].unique()","40318170":"google_data.head()","a61fa59a":"google_data.describe()","a20da87a":"x = google_data.groupby(\"Category\")[\"Rating\"].agg(np.mean)\nx","77a49096":"y = google_data.groupby(\"Category\")[\"Price\"].agg(np.sum)\ny","01557a15":"z = google_data.groupby(\"Category\")[\"Reviews\"].agg(np.mean)\nz","dc40baa4":"plt.plot(x)\nplt.xticks(rotation=90)\nplt.show()","42a8d988":"plt.plot(x, \"o\")\nplt.xticks(rotation=90)\nplt.show()","75a0c39c":"plt.figure(figsize = (16,5))\nplt.plot(x, \"ro\", color =\"r\")\nplt.xticks(rotation =90)\nplt.show()","6e0f0b56":"plt.figure(figsize = (16,5))\nplt.plot(x, \"ro\", color =\"r\")\n\nplt.xlabel(\"Categories--->\")\nplt.ylabel(\"Ratings--->\")\n\nplt.title(\"Category wise Rating\")\nplt.xticks(rotation =90)\nplt.show()","9ceed2f2":"plt.figure(figsize = (16,5))\nplt.plot(x, \"ro\", color =\"r\")\n\nplt.xlabel(\"Categories--->\", fontsize=20, labelpad=20)\nplt.ylabel(\"Ratings--->\", fontsize=20, labelpad=20)\n\nplt.title(\"Category wise Rating\", fontsize=30, pad=20)\nplt.xticks(rotation =90)\n\nplt.show()","dd970bfa":"plt.figure(figsize=(16,5))\nplt.plot(y, \"r--\", color=\"b\")\n\n\n\nplt.xlabel(\"Categories--->\", fontsize=20, labelpad=20)\nplt.ylabel(\"Ratings--->\", fontsize=20, labelpad=20)\n\nplt.title(\"Category wise Rating\", fontsize=30, pad=20)\n\n\nplt.xticks(rotation=90)\n\nplt.show()","fae158b2":"plt.figure(figsize=(16,5))\nplt.plot(y, \"r--\", color=\"b\")\n\n\n\nplt.xlabel(\"Categories--->\", fontsize=20, labelpad=20)\nplt.ylabel(\"Price--->\", fontsize=20, labelpad=20)\n\nplt.title(\"Category wise Price\", fontsize=30, pad=20)\n\n\nplt.xticks(rotation=90)\n\nplt.show()","9631381e":"plt.figure(figsize=(16,5))\nplt.plot(z, \"k--\", color=\"g\")\n\n\n\nplt.xlabel(\"Categories--->\", fontsize=20, labelpad=20)\nplt.ylabel(\"Reviews--->\", fontsize=20, labelpad=20)\n\nplt.title(\"Category wise Reviews\", fontsize=30, pad=20)\n\n\nplt.xticks(rotation=90)\n\nplt.show()","6313ddbb":"plt.figure(figsize=(16,5))\nplt.plot(z, \"g^\", color=\"g\")\n\n\n\nplt.xlabel(\"Categories--->\", fontsize=20, labelpad=20)\nplt.ylabel(\"Reviews--->\", fontsize=20, labelpad=20)\n\nplt.title(\"Category wise Reviews\", fontsize=30, pad=20)\n\n\nplt.xticks(rotation=90)\n\nplt.show()","7730efaa":"removing \"$\" sign from price","6bedfc34":"# Price","8f9296ed":"above plot shows some ratings are above 5","51b44e60":"# **Ratings**"}}