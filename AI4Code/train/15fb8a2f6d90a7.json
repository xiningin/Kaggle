{"cell_type":{"3b364f2c":"code","9e7a5c56":"code","79836707":"code","87f21b62":"code","1dfbd0c9":"code","731b3555":"code","4748cc8b":"code","e6c7a526":"code","6b702203":"code","bb316e12":"code","c93afee6":"code","12672252":"code","da4a766a":"code","1c423ab0":"code","173845eb":"code","eeb94415":"code","7ca60215":"code","4e21135c":"code","c24e8722":"code","bd7bf99a":"code","7da1114f":"code","9531e907":"code","d15fe9f0":"markdown","7e109ef7":"markdown","9740cfcb":"markdown","9eb303cd":"markdown","46ed7f36":"markdown","55d6e59c":"markdown","e484732c":"markdown","0cc3fb0a":"markdown","e38829c0":"markdown","12f8b3cb":"markdown","fe733079":"markdown","2ce7d59b":"markdown","82974021":"markdown","60128bdc":"markdown","c26eb8b3":"markdown","1c5ebc91":"markdown","5d55ef35":"markdown","9e456e23":"markdown"},"source":{"3b364f2c":"from glob import glob # to read files\nfrom os.path import splitext\nfrom random import choice\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nfrom  matplotlib import colors\nimport seaborn as sns\nimport missingno as msno  #to visualize the missing values\nimport plotly.express as px\n\nimport pydicom\nfrom pydicom import read_file\n\nimport skimage\nfrom skimage.io import imread\n","9e7a5c56":"df = pd.read_csv('..\/input\/vinbigdata-chest-xray-abnormalities-detection\/train.csv')\ndf.head()","79836707":"shape = df.shape\nprint('The shape of our datase:'+\" \"+str(shape))","87f21b62":"df['image_id'].value_counts()","1dfbd0c9":"df.loc[df['image_id']=='ecf474d5d4f65d7a3e23370a68b8c6a0',:]","731b3555":"duplication = df['image_id'].duplicated().sum()\nprint('The count of the duplication in our dataset:'+' '+str(duplication))\nprint('Unique value : '+\" \"+str(shape[0]-duplication))","4748cc8b":"pathes = glob('..\/input\/vinbigdata-chest-xray-abnormalities-detection\/train\/*')\nlen(pathes)","e6c7a526":"# creatin a dicionarty of key('image_id') and value ('pathes')\npathes_dict = dict()\nkeys = [splitext(x)[0].split('\/')[-1] for x in pathes]\npathes_dict = {keys[i]:pathes[i] for i in range(0,len(pathes))}","6b702203":"# list(pathes_dict.keys())\ndf['pathes'] = df['image_id'].map(pathes_dict)\ndf.head()","bb316e12":"df['class_name'].value_counts()","c93afee6":"plt.figure(figsize=(10,5))\nsns.countplot(data=df ,y='class_name')\nplt.title('Counts of the Classes',fontsize=20)","12672252":"list_ = ['No finding','Aortic enlargement','Cardiomegaly'\n         ,'Pulmonary fibrosis','Pleural thickening','Lung Opacity'\n         ,'Pleural effusion','Other lesion','Nodule\/Mass','Infiltration'\n         ,'ILD','Calcification','Consolidation','Atelectasis','Pneumothorax']\nfig = px.pie(df,values=df['class_name'].value_counts(),names=list_ \n       , color_discrete_sequence=px.colors.sequential.RdBu)\n\nfig.show()","da4a766a":"df.isna().sum()","1c423ab0":"plt.figure(figsize=(5,5))\nmsno.bar(df)\nplt.show()","173845eb":"#Visulizing the locations of the missing values\nsns.heatmap(df.isna(),cmap='Blues')","eeb94415":"df = df.fillna(0, axis=0)\ndf.head()","7ca60215":"# check for the missing values\ncount = df.isna().sum()\nprint('The count of the missing values :'+\"\\n\"+str(count))\n","4e21135c":"from pydicom import read_file\nrand_img = choice(df['pathes'])\nprint('our random data :'+' '+str(rand_img))\nimg = read_file(rand_img)\n#print the meta date for the .dicom\nprint(img)","c24e8722":"from skimage.transform import resize\nimport tqdm\ndef resize_img(img):\n    rescaled_img = resize(img.pixel_array,(512,512))\n    return rescaled_img\n","bd7bf99a":"\n# plotting image with bounding box via matplotlib.patches \ndef create_bbox(data, img):\n    fig = plt.figure() \n    ax = fig.add_subplot(111) \n    ax.imshow(resize_img(img),cmap=plt.cm.bone)\n    color_dict = {'No finding':'w','Aortic enlargement':'xkcd:sky blue','Cardiomegaly':'xkcd:green'\n             ,'Pulmonary fibrosis':'xkcd:beige','Pleural thickening':'xkcd:purple'\n                  ,'Lung Opacity':'xkcd:red','Pleural effusion':'xkcd:yellow','Other lesion':'xkcd:orange',\n                  'Nodule\/Mass':'xkcd:neon green','Infiltration':'xkcd:pale orange',\n                  'ILD':'xkcd:blue','Calcification':'xkcd:white','Consolidation':'xkcd:murky green'\n                  ,'Atelectasis':'xkcd:tomato','Pneumothorax':'xkcd:puke brown'}\n    data['colors'] = data['class_name'].map(color_dict)\n    scale = 5\n    for i in range(0,len(data)):\n        x, y  =int(data.iloc[i,4])\/scale, int(data.iloc[i,5])\/scale\n        width, height = int(data.iloc[i,6])\/scale, int(data.iloc[i,7])\/scale\n        color = data.iloc[i,9]\n        rect = patches.Rectangle((x, y),\n                                         width, height,\n                                         linewidth = 1,\n                                         edgecolor = str(color) ,\n                                         facecolor = 'none')\n        ax.add_patch(rect)\n    ","7da1114f":"# get the data \nselected_img = df[df['pathes']==rand_img]\ncreate_bbox(selected_img,img)\nplt.show()","9531e907":"# visulizing various random images:\n\nrand_list = [choice(df['pathes'])for x in range (0,5)]\n# rand_list\nfig = plt.figure(figsize=(20,10))\n\nfor i in range(0,5):\n    img = read_file(rand_list[i])\n    bbox_info = df[df['pathes']==rand_list[i]]\n    create_bbox(bbox_info,img)\n\nfig.show()\n","d15fe9f0":"### Visualizing the missing values","7e109ef7":"# Exploring Our Class Label","9740cfcb":"### Getting the additional infomation from .dicom in our dataframe","9eb303cd":"# check for the missing value and handle it","46ed7f36":"# Get a deep insights for our dataset","55d6e59c":"## Visalizng the count of class_name","e484732c":"\n# Thoracic lung diseases :\n### Thoracic disorders are conditions of the heart, lungs, mediastinum, esophagus, chest wall, diaphragm and great vessels and may include:\n* Chronic obstructive pulmonary disease (COPD)\n* Pulmonary embolism\n* Lungs cancer,.....,etc\n","0cc3fb0a":"## Importing the libraries","e38829c0":"## Reading the whole file of the train folder","12f8b3cb":"# Start fun with DICOM Images","fe733079":"*Note: The dicom images have a additive informatio that we could manipulate them later on*","2ce7d59b":"*Note :*All the missing value of(x_min , y_min,x_max,y_max)for the No finding class","82974021":"# Dealing with the duplicated records\n### Firstly exploring them ","60128bdc":"* Note : Having 14 class label as it was mentioned ","c26eb8b3":"### Dealing with the missing values\n#### Filling the missing value with zero","1c5ebc91":"#### *Note:* That the size of the csv file is \"67914\" , Meanwhile in the overview it was mentined that we have 15,000 independently-labeled images and will be evaluated on a test set of 3,000 images ,So; for sure there is a duplication in our data we will handle this .","5d55ef35":"## Get a deep insights about our .dicom images\n","9e456e23":"## **What is DICOM?**\n##### Digital Imaging and Communications in Medicine (DICOM) is the standard for the communication and management of medical imaging information and related data.DICOM is most commonly used for storing and transmitting medical images enabling the integration of medical imaging devices such as scanners, servers, workstations, printers, network hardware, and picture archiving and communication systems (PACS) from multiple manufacturers. It has been widely adopted by hospitals and is making inroads into smaller applications like dentists' and doctors' offices. \nfor more info: [https:\/\/en.wikipedia.org\/wiki\/DICOM](http:\/\/)"}}