{"cell_type":{"79bcd5bf":"code","0a124202":"code","f2eaaf2f":"code","4c778ab7":"code","324eca65":"code","2568e0af":"code","5109ccd7":"code","c8f4b354":"code","ef49551e":"code","c92dd3a8":"code","75d1c313":"code","07b5b8e0":"code","9ab247b7":"markdown","e48cb1d6":"markdown","326b1c58":"markdown","8e5539dd":"markdown"},"source":{"79bcd5bf":"!pip install autogluon","0a124202":"import numpy as np\nimport pandas as pd\nimport os\nfrom autogluon.tabular import TabularPredictor, TabularDataset\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler","f2eaaf2f":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-sep-2021\/train.csv\").drop('id', axis=1)\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-sep-2021\/test.csv').drop('id', axis=1)\ntrain.head()","4c778ab7":"#To impute and scale the data:\npipeline = Pipeline([('impute', SimpleImputer(strategy='mean')), ('scale', StandardScaler())])","324eca65":"#First, drop the claim column:\ntemp = train['claim']\ntrain.drop(columns = ['claim'])","2568e0af":"#Credit to https:\/\/www.kaggle.com\/mlanhenke\/tps-09-single-catboostclassifier for this idea.\n#Add in some useful features\ntrain['min'] = train.min(axis=1)\ntrain['max'] = train.max(axis=1)\ntrain['sum'] = train.isna().sum(axis=1)\ntrain['mean'] = train.mean(axis=1)\ntrain['std'] = train.std(axis=1)\ntest['min'] = test.min(axis=1)\ntest['max'] = test.max(axis=1)\ntest['sum'] = test.isna().sum(axis=1)\ntest['mean'] = test.mean(axis=1)\ntest['std'] = test.std(axis=1)","5109ccd7":"#Lastly, impute the data:\ntrain = pd.DataFrame(columns = train.columns, data=pipeline.fit_transform(train))\ntest = pd.DataFrame(columns = test.columns, data=pipeline.fit_transform(test))\ntrain['claim'] = temp\ntrain.head()","c8f4b354":"model = TabularPredictor(label = 'claim', eval_metric = 'roc_auc')\nmodel.fit(train_data=train, presets='best_quality', time_limit = 7 * 3600) #7 hours","ef49551e":"model.leaderboard()","c92dd3a8":"predictions_autogluon = model.predict_proba(test)\npredictions_autogluon = predictions_autogluon.reset_index()\npredictions_autogluon.head()","75d1c313":"sample_solution = pd.read_csv('\/kaggle\/input\/tabular-playground-series-sep-2021\/sample_solution.csv')\nsample_solution['claim'] = predictions_autogluon[1]\nsample_solution.head()","07b5b8e0":"sample_solution.to_csv('submission.csv', index=False)","9ab247b7":"# Libraries","e48cb1d6":"# Missing Values and Feature Engineering","326b1c58":"# Submission","8e5539dd":"# Modeling"}}