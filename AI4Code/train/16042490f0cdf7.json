{"cell_type":{"acc60a1c":"code","d11e5f15":"code","2f31f377":"code","4ee020a5":"code","6d57502f":"code","3f2a9037":"code","a8525aab":"code","fc1e0754":"code","436b74b0":"code","2959ce08":"code","5f7c9fe9":"code","99d3d2a9":"code","b8e7b3fc":"code","927329be":"code","5cab38bc":"code","22e5258d":"markdown","393d6d63":"markdown","765d917e":"markdown"},"source":{"acc60a1c":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.linear_model import LinearRegression\ndf = pd.read_csv('..\/input\/heights-and-weights\/data.csv', header='infer')\nlen(df)","d11e5f15":"df.head()","2f31f377":"df['HeightCM'] = df['Height'] * 100","4ee020a5":"df.head()","6d57502f":"X = df.loc[:,df.columns =='HeightCM']\ny = df['Weight']","3f2a9037":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)\n\nlr = LinearRegression().fit(X_train, y_train)","a8525aab":"lr.coef_","fc1e0754":"lr.score(X_train, y_train)","436b74b0":"lr.score(X_test, y_test)","2959ce08":"import joblib \njoblib.dump(lr, 'linear_regression_model.pkl')","5f7c9fe9":"test_data = [176]\npred_arr = np.array(test_data)\nprint(pred_arr)","99d3d2a9":"preds = pred_arr.reshape(-1,1)","b8e7b3fc":"print(preds)","927329be":"model = open(\"linear_regression_model.pkl\", \"rb\")\nlr_model = joblib.load(model)\n\nmodel_prediction = lr_model.predict(preds)\nprint(model_prediction)\n","5cab38bc":"import joblib\n\njoblib.dump(lr_model, 'heights_weights.pkl')","22e5258d":"now using joblib to dump the model","393d6d63":"(Or how to load a simple model and dump its parameters using joblib.)","765d917e":"lets convert height to cm"}}