{"cell_type":{"1a843847":"code","b2640537":"code","b3b08387":"code","0e49a59a":"code","20a2c0a8":"code","98c90b61":"code","38d002d0":"code","2a967496":"code","538d9533":"code","0dbb3e69":"code","b7f6b735":"code","38ef8e95":"code","6d305a75":"code","d494b6fa":"code","3df93cef":"code","fbc37df7":"code","edf6be2e":"code","cde85298":"code","0fa38523":"markdown","ec86805d":"markdown"},"source":{"1a843847":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","b2640537":"Data=pd.read_csv(\"..\/input\/age-gender-and-ethnicity-face-data-csv\/age_gender.csv\")","b3b08387":"Data.dtypes","0e49a59a":"Data.describe()","20a2c0a8":"Data['pixels'] = Data['pixels'].map(lambda x: np.array(x.split(' '), dtype=np.float32).reshape(48, 48))","98c90b61":"# Plot some pictures\nfig, axes = plt.subplots(1, 5, figsize=(20, 10))\n\nfor i in range(5):\n    random_face = np.random.choice(len(Data))\n    age = Data['age'][random_face]\n    gender = Data['gender'][random_face]  \n    axes[i].set_title('Age: {0}, Sex: {1}'.format(age, gender))\n    axes[i].imshow(Data['pixels'][random_face])\n    axes[i].axis('off')","38d002d0":"sns.displot(Data.age,height=8, aspect=15\/8)\n# plt.figure(figsize=(12,8))\n# sns.distplot(df['age']);","2a967496":"sns.countplot(Data['gender']);","538d9533":"X=np.array(Data.pixels.to_list()).reshape(-1,2304)\/255\nY_age=np.array(Data.age)\nY_gender=np.array(Data.gender)","0dbb3e69":"print(X.shape)\nprint(Y_age.shape)","b7f6b735":"from sklearn.metrics import classification_report, plot_confusion_matrix,plot_roc_curve\ndef Report(X,Y,model):\n    print (classification_report(Y,model.predict(X)))\n    plot_confusion_matrix(model,X, Y)\n    plot_roc_curve(model,X,Y)\n    plt.show()","38ef8e95":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y_gender,test_size=0.3)","6d305a75":"# from sklearn.model_selection import  GridSearchCV\n# from sklearn.linear_model import LogisticRegression\n# parameters={'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000] }\n# clf = GridSearchCV(LogisticRegression(solver='liblinear'), parameters)\n# clf.fit(X_train,Y_train)\n# best_model = clf.best_estimator_\n# print (clf.best_score_, clf.best_params_)","d494b6fa":"from sklearn.linear_model import LogisticRegression\nLGR = LogisticRegression(solver='liblinear',C=0.1)\nLGR.fit(X_train,Y_train)","3df93cef":"Report(X_test,Y_test,LGR)","fbc37df7":"# from sklearn.svm import SVC\n# from sklearn.model_selection import  GridSearchCV\n# parameters = {'C': [0.1,1, 10, 100],'kernel': ['rbf', 'poly', 'sigmoid']}\n# clf = GridSearchCV(SVC(), parameters)\n# clf.fit(X_train,Y_train)\n# best_SVM = clf.best_estimator_\n# print (clf.best_score_, clf.best_params_)","edf6be2e":"from sklearn.svm import SVC\nclf_SVM=SVC(C=0.1,kernel='rbf')\nclf_SVM.fit(X_train,Y_train)","cde85298":"Report(X_test,Y_test,clf_SVM) ","0fa38523":"# Model Gender Classifi","ec86805d":"> **1. Logistic Regression**"}}