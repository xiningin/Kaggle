{"cell_type":{"625ff6a7":"code","02c1c479":"code","c30c4ad4":"code","cdcf33cb":"code","5ad3bb51":"code","5e7d25fb":"code","d20f95a0":"code","d602e02d":"code","2c5e0947":"code","9830e17a":"code","411e9b34":"code","884006aa":"code","c499e505":"code","2026c1b1":"code","8eed5d47":"code","282d3958":"code","46b0bc0a":"code","58340089":"code","82970c43":"code","19278b57":"code","82e54b4d":"code","3531d7e1":"code","66d79c9a":"code","ecd92459":"code","b347db95":"code","486aace8":"code","2bb26ffd":"code","e4c843f1":"markdown","70ae5c8c":"markdown","11900d07":"markdown","5cc06a72":"markdown","d099ef37":"markdown","94542274":"markdown","b2a8b71a":"markdown","854cb709":"markdown","41eb90c0":"markdown","c3e8fbe8":"markdown","248caeec":"markdown","72bb3eba":"markdown"},"source":{"625ff6a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02c1c479":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c30c4ad4":"dataset = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","cdcf33cb":"dataset.info()","5ad3bb51":"dataset.describe()","5e7d25fb":"dataset.head()","d20f95a0":"# count numbers of unique values in every columns\ndataset.nunique()","d602e02d":"dataset.isnull().sum()","2c5e0947":"# correlation between every variables\nplt.figure(figsize=(9,5))\nsns.heatmap(dataset.corr(), annot=True)","9830e17a":"sns.countplot(x='quality', data=dataset)","411e9b34":"# fixed acidity\nsns.regplot(data=dataset, x=\"fixed acidity\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","884006aa":"# volatile acidity \nsns.regplot(data=dataset, x=\"volatile acidity\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","c499e505":"# citric acid \nsns.regplot(data=dataset, x=\"citric acid\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","2026c1b1":"# residual sugar\nsns.regplot(data=dataset, x=\"residual sugar\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","8eed5d47":"# chlorides\nsns.regplot(data=dataset, x=\"chlorides\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","282d3958":"# free sulfur dioxide\nsns.regplot(data=dataset, x=\"free sulfur dioxide\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","46b0bc0a":"# total sulfur dioxide\nsns.regplot(data=dataset, x=\"total sulfur dioxide\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","58340089":"# density\nsns.regplot(data=dataset, x=\"density\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","82970c43":"# pH\nsns.regplot(data=dataset, x=\"pH\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","19278b57":"# sulphates\nsns.regplot(data=dataset, x=\"sulphates\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","82e54b4d":"# alcohol\nsns.regplot(data=dataset, x=\"alcohol\", y=\"quality\",\n            scatter_kws={\"color\": \"darkblue\",'s': 20},\n           line_kws={\"color\": \"red\"})","3531d7e1":"dataset = dataset.drop(['free sulfur dioxide', 'residual sugar'],axis = 1)\ndataset","66d79c9a":"X = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values","ecd92459":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)","b347db95":"from xgboost import XGBClassifier\nclassifier = XGBClassifier(max_depth= 10, n_estimators= 125, random_state= 0,  learning_rate= 0.02, n_jobs=5)\nclassifier.fit(X_train, y_train)","486aace8":"y_pred = classifier.predict(X_test)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","2bb26ffd":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","e4c843f1":"## Training the XGBoost model on the Training set","70ae5c8c":"## Importing the dataset","11900d07":"# Red Wine Quality Prediction\n- Predict Red Wine Quality based on XGBoost model","5cc06a72":"## Importing the libraries","d099ef37":"but this dataset don't have any missing values, so we don't need to do anything.","94542274":"## Predicting the Test set results","b2a8b71a":"## Splitting the dataset into the Training set and Test set","854cb709":"## Exploring the dataset","41eb90c0":"## Handle missing values","c3e8fbe8":"**Please feel free to leave your suggestions. I appreciate it all.**","248caeec":"## Visualising the data\n- draws conclusion to make the model","72bb3eba":"After visualising data, I will not use free sulfur dioxide, residual sugar. So I drop it"}}