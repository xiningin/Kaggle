{"cell_type":{"7d9e8a67":"code","c6aa527a":"code","6cd8667d":"code","de0d505f":"code","8ba311b0":"code","8658d089":"code","8ac2f797":"code","5b1210d1":"code","3095074c":"code","9dde5e02":"code","7d4e4103":"code","e4e271d0":"code","c6d63379":"code","d28bca7c":"code","4d48d688":"code","a229ddca":"code","bb915cec":"code","88722ebe":"code","7c43b720":"code","d63921a1":"code","08a9e46c":"code","daa11384":"code","9df4c37f":"code","16a51038":"code","455dd192":"code","3ea6b253":"code","1df531f7":"markdown","56005c53":"markdown","aec3e719":"markdown","5b4f09cf":"markdown","be9eaddd":"markdown","6319bebc":"markdown","b1118ce5":"markdown","2ada80c4":"markdown"},"source":{"7d9e8a67":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport glob\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c6aa527a":"path = '\/kaggle\/input\/indian-premier-league-20082019\/IPL_2008_2019' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    li.append(df)\n\nmatch_data = pd.concat(li, axis=0, ignore_index=True)","6cd8667d":"match_data.shape","de0d505f":"match_data.isnull().sum()","8ba311b0":"match_data.info()","8658d089":"match_data.groupby(\"Batting_Team\").Runs.sum().sort_values(ascending=False).plot.bar()\nplt.xlabel(\"Team\")\nplt.ylabel(\"Total Runs\")\nplt.show()","8ac2f797":"plt.figure(figsize=(20,10))\ntop_scorers = match_data.groupby(\"Player\").Runs.sum().sort_values(ascending=False).head(50)\ntop_scorers.plot.bar()\nplt.ylabel(\"Runs Scored\",fontsize=12)\nplt.title(\"Top 50 batsmen\",fontsize=15)\nplt.show()","5b1210d1":"match_data[\"Four\"] = match_data.Runs.apply(lambda x : 1 if x==4 else 0)\nmatch_data.head()","3095074c":"match_data[\"Six\"] = match_data.Runs.apply(lambda x : 1 if x==6 else 0)\nmatch_data.head()","9dde5e02":"plt.figure(figsize=(20,10))\nmatch_data.groupby(\"Player\").Four.sum().sort_values(ascending=False).head(50).plot.bar()\nplt.ylabel(\"Number of Fours\",fontsize=12)\nplt.title(\"Top 50 players to hit maximum Fours\",fontsize=15)\nplt.show()","7d4e4103":"plt.figure(figsize=(20,10))\nmatch_data.groupby(\"Player\").Six.sum().sort_values(ascending=False).head(50).plot.bar()\nplt.ylabel(\"Number of Sixes\",fontsize=12)\nplt.title(\"Top 50 players to hit maximum Sixes\",fontsize=15)\nplt.show()","e4e271d0":"match_data[\"Bowl_Count\"] = 1\nmatch_data.head()","c6d63379":"bowler_data = match_data.groupby(\"Baller\").sum()\nbowler_data.drop([\"Inning\",\"Over\",\"Four\",\"Six\"],axis = 1,inplace = True)\nbowler_data.head()","d28bca7c":"bowler_data.shape","4d48d688":"#Dropping bowlers with less than 10 overs [i.e, Bowl_Count <= 60]\nbowler_data = bowler_data[bowler_data.Bowl_Count > 60]\nbowler_data.shape","a229ddca":"bowler_data[\"Economy_Rate\"] = ((bowler_data[\"Runs\"]+bowler_data[\"Extra\"])\/bowler_data[\"Bowl_Count\"])*6\nbowler_data.head()","bb915cec":"bowler_data.sort_values(\"Economy_Rate\",inplace = True)\nbowler_data.reset_index(inplace=True)\nbowler_data.head()","88722ebe":"#Keep only top 100 bowlers\ncutoff_EconomyRate = bowler_data.iloc[99][\"Economy_Rate\"]\nbowler_data = bowler_data[bowler_data[\"Economy_Rate\"]<=cutoff_EconomyRate]\nbowler_data.shape","7c43b720":"top_bowlers = list(bowler_data.Baller.head(50))\nlen(top_bowlers)","d63921a1":"plt.figure(figsize=(20,10))\nsns.barplot(data = bowler_data,x=\"Baller\",y=\"Economy_Rate\")\nplt.xticks(rotation=90)\nplt.title(\"Top 100 Bowlers\",fontsize=15)\nplt.show()","08a9e46c":"bat_bowl = pd.pivot_table(data = match_data, index = \"Player\", columns = \"Baller\", values = \"Runs\",aggfunc = np.sum,fill_value = 0.0)\nbat_bowl.shape","daa11384":"#Get all the bowlers that are not in the top 50 bowlers list\nbowlers = list(bat_bowl.columns)\ndrop_bowlers = []\nfor bowler in bowlers :\n    if bowler not in top_bowlers :\n        drop_bowlers.append(bowler)","9df4c37f":"#Drop all bowlers apart from the top 50 bowlers\nbat_bowl.drop(columns = drop_bowlers,inplace = True)\nbat_bowl.shape","16a51038":"#Get all the batsmen that are not in the top 50 batsmen list\nbatsmen = list(bat_bowl.index)\ndrop_batsmen = []\nfor batsman in batsmen :\n    if batsman not in top_scorers :\n        drop_batsmen.append(batsman)","455dd192":"bat_bowl.drop(drop_batsmen,inplace = True)\nbat_bowl.shape","3ea6b253":"plt.figure(figsize=(25,15))\nsns.heatmap(data = bat_bowl,center = 80,linewidths = .2)\nplt.title(\"Top 50 Batsmen vs Top 50 Bowlers\",fontsize=15)\nplt.show()","1df531f7":"# Top 50 : Batsmen vs Bowlers","56005c53":"# **Maximum Boundaries by Players**","aec3e719":"# **Concatenate all the files into one dataframe**","5b4f09cf":"# **Check for null values and datatype consistency**","be9eaddd":"Mumbai Indians has the highest combined total of runs in IPL ","6319bebc":"# **Total runs scored by the teams over the years**","b1118ce5":"# **Runs scored by players (Top 50)**","2ada80c4":"# **Economy rate of bowlers**"}}