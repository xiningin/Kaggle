{"cell_type":{"a2dbca25":"code","cbe4f670":"code","044f8c3d":"code","d3e2c0cd":"code","e625a504":"code","e2fc4e6c":"code","09a48554":"code","df1c483c":"code","fc5c2cd7":"code","53a0f663":"code","3c098c73":"code","51a988d7":"code","d675c6c0":"code","58b74646":"code","3557d432":"code","647b32f9":"code","350ae438":"code","8e323d5f":"code","f8366df1":"code","0b58311d":"code","2e8ed8f9":"code","21b3f4d5":"markdown","08f7f46a":"markdown"},"source":{"a2dbca25":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","cbe4f670":"# Path of the file to read\ndiabetes_file = '..\/input\/MarketValue.csv'\ndata = pd.read_csv(diabetes_file)\ndata.head()","044f8c3d":"data.shape","d3e2c0cd":"data.drop([\"name\"], axis=1, inplace=True)","e625a504":"#Handling unnamed columns in python dataframe\ndata.rename({\"Unnamed: 0\":\"a\"}, axis=\"columns\", inplace=True)\n#1st column had no significance as it contains only ids so dropping that column\ndata.drop([\"a\"], axis=1, inplace=True)\ndata.drop([\"rank\"], axis=1, inplace=True)\ndata.head()","e2fc4e6c":"data.isnull().sum()","09a48554":"data['profits'].skew()","df1c483c":"\ndata.profits.isnull().values.any()\ndata.profits.isnull().sum()\ndata['profits'] = data['profits'].fillna((data['profits'].median()))\n","fc5c2cd7":"data.dtypes\nobj_df = data.select_dtypes(include=['object']).copy()\nobj_df.head()","53a0f663":"data[\"country\"] = data[\"country\"].astype('category')\ndata[\"category\"] = data[\"category\"].astype('category')\ndata.dtypes","3c098c73":"data[\"country\"] = data[\"country\"].cat.codes\ndata[\"category\"] = data[\"category\"].cat.codes\ndata.head()","51a988d7":"\n# Using Skicit-learn to split data into training and testing sets\nfrom sklearn.model_selection import train_test_split\n# Split the data into training and testing sets\nX=data.drop(['marketvalue'], axis=1)\nY=data['marketvalue']\n\nx_train, x_test , y_train , y_test = train_test_split(X, Y, test_size = 0.25, random_state = 42)\nprint('Training X Shape:', x_train.shape)\nprint('Training Y Shape:', y_train.shape)\nprint('Testing X Shape:', x_test.shape)\nprint('Testing Y Shape:', y_test.shape)","d675c6c0":"from sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\n\nlinear_reg.fit(x_train,y_train)\n\ny_predict=linear_reg.predict(x_test)","58b74646":"linear_reg.score(x_test,y_test)","3557d432":"y_predict","647b32f9":"df1","350ae438":"a=np.array(y_test)","8e323d5f":"a","f8366df1":"from sklearn import metrics\nfrom sklearn.metrics import mean_squared_error,r2_score\n\nmse = mean_squared_error(y_test, y_predict)\nrmse = np.sqrt(mse)\nr2_score = linear_reg.score(x_test, y_test)\n\nprint('Sqrt MSE : ',np.sqrt(mse))\nprint('R2 Score : ',r2_score)\n","0b58311d":"linear_reg.rsquared\n","2e8ed8f9":"import matplotlib.pyplot as plt\n\nplt.scatter(X, Y)\nplt.plot(X, Y_pred, color='red')\nplt.show()","21b3f4d5":"# You can use in pandas is to convert a column to a category, & then use those category values for your label encoding:","08f7f46a":"# Refer :\n\nFor conerting data into quantiative - http:\/\/pbpython.com\/categorical-encoding.html"}}