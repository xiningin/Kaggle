{"cell_type":{"9fcaa991":"code","1ce23f55":"code","6660da77":"code","5bbac70c":"code","1f587fc8":"code","a7625e19":"code","d39732c5":"code","a646c9c0":"code","02fe4db5":"code","1b1bfeed":"code","738b9ba8":"code","f63e2538":"code","f66d3a6a":"code","05813151":"code","daf2c5d8":"code","c4d892f6":"code","b83ff36a":"code","889ea54d":"code","c2617749":"code","44be5b06":"markdown","642843bb":"markdown"},"source":{"9fcaa991":"import os\nimport numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom catboost import CatBoostRegressor\nfrom sklearn.model_selection import train_test_split","1ce23f55":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6660da77":"train = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/train.csv\")\ntest = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/test.csv\")","5bbac70c":"train.head()","1f587fc8":"# We will create one hot encoding for entry , exit direction fields for train, test set\n\ndfen = pd.get_dummies(train[\"EntryHeading\"],prefix = 'en')\ndfex = pd.get_dummies(train[\"ExitHeading\"],prefix = 'ex')\ntrain = pd.concat([train,dfen],axis=1)\ntrain = pd.concat([train,dfex],axis=1)","a7625e19":"dfent = pd.get_dummies(test[\"EntryHeading\"],prefix = 'en')\ndfext = pd.get_dummies(test[\"ExitHeading\"],prefix = 'ex')\ntest = pd.concat([test,dfent],axis=1)\ntest = pd.concat([test,dfext],axis=1)","d39732c5":"train.shape,test.shape","a646c9c0":"train.columns","02fe4db5":"test.head()","1b1bfeed":"train.columns","738b9ba8":"X = train[[\"IntersectionId\",\"Hour\",\"Weekend\",\"Month\",'en_E',\n       'en_N', 'en_NE', 'en_NW', 'en_S', 'en_SE', 'en_SW', 'en_W', 'ex_E',\n       'ex_N', 'ex_NE', 'ex_NW', 'ex_S', 'ex_SE', 'ex_SW', 'ex_W']]\ny1 = train[\"TotalTimeStopped_p20\"]\ny2 = train[\"TotalTimeStopped_p50\"]\ny3 = train[\"TotalTimeStopped_p80\"]\ny4 = train[\"DistanceToFirstStop_p20\"]\ny5 = train[\"DistanceToFirstStop_p50\"]\ny6 = train[\"DistanceToFirstStop_p80\"]","f63e2538":"testX = test[[\"IntersectionId\",\"Hour\",\"Weekend\",\"Month\",'en_E',\n       'en_N', 'en_NE', 'en_NW', 'en_S', 'en_SE', 'en_SW', 'en_W', 'ex_E',\n       'ex_N', 'ex_NE', 'ex_NW', 'ex_S', 'ex_SE', 'ex_SW', 'ex_W']]","f66d3a6a":"model = CatBoostRegressor(loss_function='RMSE')","05813151":"model.fit(X, y1)\npred1 = model.predict(testX)\nmodel.fit(X, y2)\npred2 = model.predict(testX)\nmodel.fit(X, y3)\npred3 = model.predict(testX)\nmodel.fit(X, y4)\npred4 = model.predict(testX)\nmodel.fit(X, y5)\npred5 = model.predict(testX)\nmodel.fit(X, y6)\npred6 = model.predict(testX)","daf2c5d8":"# Appending all predictions\nall_preds = []\nfor i in range(len(pred1)):\n    for j in [pred1,pred2,pred3,pred4,pred5,pred6]:\n        all_preds.append(j[i])","c4d892f6":"len(all_preds)","b83ff36a":"sub  = pd.read_csv(\"..\/input\/bigquery-geotab-intersection-congestion\/sample_submission.csv\")","889ea54d":"sub[\"Target\"] = all_preds","c2617749":"sub.to_csv(\"output.csv\",index = False)","44be5b06":"Ref:-https:\/\/www.kaggle.com\/pulkitmehtawork1985\/beating-benchmark","642843bb":" ### Approach: We will make 6 predictions based on features - IntersectionId , Hour , Weekend , Month , entry & exit directions .Target variables will be TotalTimeStopped_p20 ,TotalTimeStopped_p50,TotalTimeStopped_p80,DistanceToFirstStop_p20,DistanceToFirstStop_p50,DistanceToFirstStop_p80 ."}}