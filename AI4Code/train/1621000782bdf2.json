{"cell_type":{"d6420b0b":"code","651c9775":"code","f90f3889":"code","85ac28c4":"code","4ace2355":"code","91c3aba2":"code","2d4ab3ec":"code","b177179d":"code","1b83c486":"code","9cb45661":"code","8bf6738a":"code","c10bba7f":"code","060ec2a9":"code","3653af47":"code","a6b2a405":"code","fd0861d8":"code","95efe737":"code","d72c0cd5":"code","79c01002":"code","91a825e6":"code","14e02b20":"code","2159d979":"code","410b2e7b":"code","ed581fd4":"code","b7c96bdc":"code","98920dd9":"markdown","a55789b0":"markdown","cba7dcdd":"markdown","59d9a362":"markdown","86baf1b5":"markdown","032b2c80":"markdown","eefa8097":"markdown","74c0dc89":"markdown","451d4e55":"markdown","ddfd29b8":"markdown","7387e074":"markdown","66bb181f":"markdown","3fd616b5":"markdown","9423d8ab":"markdown","a88b9ce9":"markdown","23ad98e6":"markdown","15974769":"markdown","27942dd3":"markdown"},"source":{"d6420b0b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport plotly.graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\nfrom plotly.subplots import make_subplots\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","651c9775":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","f90f3889":"train_df.head()","85ac28c4":"train_df.describe()","4ace2355":"train_df.info()","91c3aba2":"def detect_outliers(df,features):\n    outlier_indices=[]\n    \n    for c in features:\n        # 1st quartile\n        Q1=np.percentile(df[c],25)\n        #3rd quartile\n        Q3=np.percentile(df[c],75)\n        #IQR\n        IQR=Q3-Q1\n        # Outlier Step\n        outlier_step=IQR*1.5\n        # Detect Outlier and Their Indices\n        outlier_list_col=df[(df[c]<Q1-outlier_step) | (df[c]>Q3+outlier_step)].index\n        # Store Indices\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices=Counter(outlier_indices) \n    multiple_outliers=list(i for i,v in outlier_indices.items() if v>2)\n    \n    return multiple_outliers","2d4ab3ec":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])] # outliers","b177179d":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)\ntrain_df.shape","1b83c486":"df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","9cb45661":"df.isnull().sum()","8bf6738a":"df[df[\"Embarked\"].isnull()]","c10bba7f":"df[df[\"Fare\"].isnull()]","060ec2a9":"data = [go.Box(x =df['Embarked'],\n               y=df[\"Fare\"],\n               showlegend=False,\n               marker_color='#dabce3')]\n\nlayout = go.Layout(title={'text': \"Fare\",\n                          'y':0.9,\n                          'x':0.5,\n                          'xanchor': 'center',\n                          'yanchor': 'top'},\n                   width = 800,\n                   height=450,\n                   template='plotly_dark')\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","3653af47":"df[\"Embarked\"]=df[\"Embarked\"].fillna(\"C\")","a6b2a405":"df[\"Fare\"]=df[\"Fare\"].fillna(13)","fd0861d8":"df[df[\"Age\"].isnull()]","95efe737":"fig = make_subplots(rows=1,cols=3,shared_yaxes=True,subplot_titles=(\"Pclass\", \"Parch\",\"SibSp\"))\n\nfig.add_trace(go.Box(x=df[\"Pclass\"],\n                     y =df[\"Age\"],\n                     showlegend=False,\n                     name = 'Writing Score',\n                     marker_color='#dabce3'),\n              row=1,col=1)\n\nfig.add_trace(go.Box(x=df[\"Parch\"],\n                     y =df[\"Age\"],\n                     showlegend=False,\n                     name = 'Writing Score',\n                     marker_color='#dabce3'),\n              row=1,col=2)\n\nfig.add_trace(go.Box(x=df[\"SibSp\"],\n                     y =df[\"Age\"],\n                     showlegend=False,\n                     name = 'Writing Score',\n                     marker_color='#dabce3'),\n              row=1,col=3)\n\nfig.update_layout(title={'text': \"Auxiliary Features For Age Predict\",\n                         'y':0.9,\n                         'x':0.5,\n                         'xanchor': 'center',\n                         'yanchor': 'top'},\n                  width = 800,\n                  height=450,\n                  template='plotly_dark')      \niplot(fig)","d72c0cd5":"index_nan_age = list(train_df[\"Age\"][train_df[\"Age\"].isnull()].index)\nfor i in index_nan_age:\n    age_pred = train_df[\"Age\"][((train_df[\"SibSp\"] == train_df.iloc[i][\"SibSp\"]) &(train_df[\"Parch\"] == train_df.iloc[i][\"Parch\"])& (train_df[\"Pclass\"] == train_df.iloc[i][\"Pclass\"]))].median()\n    age_med = train_df[\"Age\"].median()\n    if not np.isnan(age_pred):\n        train_df[\"Age\"].iloc[i] = age_pred\n    else:\n        train_df[\"Age\"].iloc[i] = age_med","79c01002":"def sub_bar_pie(variable):\n    colors = ['#683f75','#340078','#3084b8','#8c3fd4','#cf278e']\n\n    fig = make_subplots(rows=1,cols=2,\n                        subplot_titles=(variable.name + \" Count\",variable.name + \" Percent\"),\n                        specs=[[{\"type\": \"bar\"},\n                                {'type':'pie'}]])\n\n    fig.add_trace(go.Bar( y = variable.value_counts().values.tolist(), \n                          x = variable.value_counts().index,\n                          name = variable.name,\n                          showlegend=True,\n                          marker=dict(color = colors,\n                                      line_color = '#dabce3',\n                                      line_width = 2)),\n                  row = 1, col = 1)\n\n    fig.add_trace(go.Pie(labels=variable.value_counts().keys(),\n                         values=variable.value_counts().values,\n                         showlegend = True,\n                         name = variable.name,\n                         marker=dict(colors = colors,\n                                    line_color = '#dabce3',\n                                    line_width = 2),\n                        hole=.3),\n                  row = 1, col = 2)\n\n    fig.update_layout(title={'text': 'Categorical Variables',\n                             'y':0.9,\n                             'x':0.5,\n                             'xanchor': 'center',\n                             'yanchor': 'top'},\n                      template='plotly_dark',width = 800,\n                       height=400,)\n\n    iplot(fig)","91a825e6":"features=[\"Survived\",\"Sex\",\"Parch\",\"SibSp\",\"Embarked\",\"Pclass\"]\nfor f in features:\n    sub_bar_pie(df[f])","14e02b20":"\nfig = make_subplots(rows=1,cols=2,\n                    subplot_titles=('Age','Fare'))\n\nfig.add_trace(go.Histogram(x= df['Age'],xbins = dict(size =5,start = 0), marker=dict(color='#683f75', line=dict(color='#dabce3',width=2)),name=\"Age\"),\n              row = 1, col = 1)\n\nfig.add_trace(go.Histogram(x= df['Fare'],xbins = dict(size =10,start = 0), marker=dict(color='#683f75', line=dict(color='#dabce3',width=2)),name=\"Fare\"),\n              row = 1, col = 2)\n\nfig.update_layout(title={'text':\"Numerical Variables\",\n                         'y':0.9,\n                         'x':0.5,},\n                  template='plotly_dark',width = 800,\n                       height=400,)\n\niplot(fig)","2159d979":"def stack_bar(variable):\n    avg_df = pd.DataFrame(df.groupby([variable.name]).mean())\n    avg_df = avg_df.reset_index()\n\n    trace1 = go.Bar(x = avg_df[variable.name],\n                    y = avg_df['Age'],\n                    name=\"Age (mean)\",\n                    marker=dict(color ='#683f75',\n                                opacity = 0.9,\n                                line=dict(color='#dabce3',\n                                          width=3)))\n\n    trace2 = go.Bar(x = avg_df[variable.name],\n                    y = avg_df['Fare'],\n                    name=\"Fare (mean)\",\n                    marker=dict(color='#340078',\n                                opacity = 0.9,\n                                line=dict(color='#dabce3',\n                                          width=3)))\n\n    layout = go.Layout(title={'text':\"Average Fare and Age by {}\".format(variable.name),\n                         'y':0.9,\n                         'x':0.5,},\n                       barmode = 'stack',\n                       xaxis = dict(title=variable.name),\n                       template='plotly_dark',\n                       width = 800,\n                       height=400,)\n\n    fig = go.Figure(data = [trace1,trace2], layout=layout)\n    iplot(fig)","410b2e7b":"features=[\"Survived\",\"Sex\",\"Parch\",\"SibSp\",\"Embarked\",\"Pclass\"]\nfor f in features:\n    stack_bar(df[f])","ed581fd4":"def sub_pie(variable):\n    colors = ['#683f75','#340078','#3084b8','#8c3fd4','#cf278e']\n\n    fig = make_subplots(rows=1,cols=2,\n                        subplot_titles=('Survived : 0',\n                                        'Survived : 1'),\n                        specs=[[{\"type\": \"pie\"},\n                                {'type':'pie'}]])\n\n    fig.add_trace(go.Pie(labels=df[df['Survived']==0][variable.name].value_counts().keys(),\n                         values=df[df['Survived']==0][variable.name].value_counts().values,\n                         textfont = dict(size = 18,\n                                         color = 'white'),\n                         textposition='auto',\n                         showlegend = True,\n                         name = 'Survived : 0',\n                         marker=dict(colors = colors,\n                                    line_color = '#dabce3',\n                                    line_width = 2),\n                         hole=.3),\n                  row = 1, col = 1)\n\n    fig.add_trace(go.Pie(labels=df[df['Survived']==1][variable.name].value_counts().keys(),\n                         values=df[df['Survived']==1][variable.name].value_counts().values,\n                         textfont = dict(size = 18,\n                                         color = 'white'),\n                         textposition='auto',\n                         showlegend = True,\n                         name = 'Survived : 1',\n                         marker=dict(colors = colors,\n                                    line_color = '#dabce3',\n                                    line_width = 2),\n                         hole=.3),\n                  row = 1, col = 2)\n\n    fig.update_layout(title={'text': 'Survival percent by {}'.format(variable.name),\n                             'y':0.9,\n                             'x':0.5},\n                      template='plotly_dark',\n                      width = 800,\n                      height=400,)\n\n    iplot(fig)","b7c96bdc":"features=[\"Sex\",\"Parch\",\"SibSp\",\"Embarked\",\"Pclass\"]\nfor f in features:\n    sub_pie(df[f])","98920dd9":"<a id = \"7\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white;  font-weight: bold; font-family:Georgia; font-size:25px; color:#683f75; \">Categorical Variable<\/span><\/h1>","a55789b0":"<a id = \"6\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Univariate Variable Analysis<\/span><\/h1>\n\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; font-weight: bold; \">Categorical Variable :<\/span>\n<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \"> Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, SibSp, Parch<\/span>\n\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; font-weight: bold; \">Numerical Variable :<\/span>\n<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \"> Fare, Age, PassengerId<\/span>\n","cba7dcdd":"<a id = \"3\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Missing Values<\/span><\/h1>","59d9a362":"<a id = \"5\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white;  font-weight: bold; font-family:Georgia; font-size:25px; color:#683f75; \">Fill Missing Values<\/span><\/h1>","86baf1b5":"<a id = \"8\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white;  font-weight: bold; font-family:Georgia; font-size:25px; color:#683f75; \">Numerical Variable<\/span><\/h1>","032b2c80":"<a id = \"1\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Load And Check Data<\/span><\/h1>","eefa8097":"<a id = \"4\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white; font-weight: bold; font-family:Georgia; font-size:25px; color:#683f75; \">Find Missing Values<\/span><\/h1>","74c0dc89":"<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Embarked : 2 <br> Fare : 1 <br> Age : 256 <\/span>","451d4e55":"<span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Introduction<\/span> \n\n<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">The RMS Titanic, a luxury steamship, sank in the early hours of April 15, 1912, off the coast<br> of Newfoundland in the North Atlantic after sideswiping an iceberg during its maiden<br> voyage. Of the 2,240 passengers and crew on board, more than 1,500 lost their lives in the<br> disaster. Titanic has inspired countless books, articles and films, the ships story has entered<br> the public consciousness as a cautionary tale about the perils of human hubris.<\/span>\n\n<h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:20px; color:#dabce3; \">Variable Description<\/span><\/h1>\n\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">PassengerId :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Unique id number to each passenger<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Survived :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Passenger survive(1) or died(0)<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Pclass :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Passenger class<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Name :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Name<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Sex :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Gender of passenger<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Age :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Age of passenger<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">SibSp :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Number of siblings\/spouses<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Parch :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Number of parents\/children<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Ticket :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Ticket number<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Fare :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Amount of money spent on ticket<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Cabin :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Cabin category<\/span>\n* <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; font-weight: bold; color:#683f75; \">Embarked :<\/span>\n    <span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">Port where passenger embarked<\/span>\n\n<span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:20px; color:#dabce3; \">Content<\/span> \n1. [<span style=\"font-weight: bold; font-family:Georgia; font-size:20px; color:#683f75; \">Load And Check Data<\/span>](#1)\n2. [<span style=\"font-weight: bold; font-family:Georgia; font-size:20px; color:#683f75; \">Outlier Detection<\/span>](#2)\n3. [<span style=\"font-weight: bold; font-family:Georgia; font-size:20px; color:#683f75; \">Missing Values<\/span>](#3)\n    * [<span style=\"font-weight: bold; font-family:Georgia; font-size:17px; color:#683f75; \">Find Missing Values<\/span>](#4)\n    * [<span style=\"font-weight: bold; font-family:Georgia; font-size:17px; color:#683f75; \">Fill Missing Values<\/span>](#5)\n4. [<span style=\"font-weight: bold; font-family:Georgia; font-size:20px; color:#683f75; \">Univariate Variable Analysis<\/span>](#6)\n    * [<span style=\"font-weight: bold; font-family:Georgia; font-size:15px; color:#683f75; \">Categorical Variable<\/span>](#7)\n    * [<span style=\"font-weight: bold; font-family:Georgia; font-size:15px; color:#683f75; \">Numerical Variable<\/span>](#8)\n5. [<span style=\"font-weight: bold; font-family:Georgia; font-size:20px; color:#683f75; \">Visualization<\/span>](#9)","ddfd29b8":"<a id = \"2\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Outlier Detection<\/span><\/h1>","7387e074":"<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">We can use Fare feature for predict Embarked, Embarked feature for predict Fare<\/span>","66bb181f":"<h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white; font-weight: bold; font-family:Georgia; font-size:17px; color:#683f75; \">Age<\/span><\/h1>","3fd616b5":"<h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white; font-weight: bold; font-family:Georgia; font-size:17px; color:#683f75; \">Embarked & Fare<\/span><\/h1>","9423d8ab":"<a id = \"9\"><\/a><h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:30px; color:#dabce3; \">Visualization<\/span><\/h1>","a88b9ce9":"\n<h1 id=\"Libraries and Utilities\"><span class=\"label label-default\" style=\"background-color:white;  font-weight: bold; font-family:Georgia; font-size:25px; color:#683f75; \">If you liked this notebook, please dont forget upvote. Thanks!<\/span><\/h1>\n\n![c1919b49dd6f835cf4638cebeca3ff07.gif](attachment:218a0e23-b5d8-4a14-ae46-016d40ab98dd.gif)","23ad98e6":"<span class=\"label label-default\" style=\"background-color:#683f75; border-radius:10px; font-weight: bold; font-family:Georgia; font-size:40px; color:#dabce3; \">Titanic EDA & Visualization Plotly<\/span>\n\n![2527000.png](attachment:72c986bc-2ada-4d1e-b6dc-40baf9eebd08.png)","15974769":"<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">As you can see, the probability of Embarked being C is very high <br> Median S is 13, so we can predict Fare<\/span>","27942dd3":"<span class=\"label label-default\" style=\"background-color:white; font-family:Georgia; font-size:17px; color:#683f75; \">float64(2) : Fare, Age <br>int64(5) : PassengerId, Survived, Pclass, SibSp, Parch <br>object(5) : Name, Sex, Ticket, Cabin, Embarked<\/span>"}}