{"cell_type":{"7bef3d7a":"code","5e171bcb":"code","83011e9d":"code","4f46dc4a":"code","fceeddbf":"code","24210abe":"code","4124bae8":"code","e440cbc8":"code","9ffc3c13":"code","a1ca72d6":"code","7149bb6b":"code","c10a2967":"code","f3c09fd1":"code","e312e46d":"code","7a13f0db":"code","5e934956":"code","4fa2b457":"markdown","8e70ad21":"markdown","cd1b6c4a":"markdown","8463bbed":"markdown","4cd69c40":"markdown","0b9be51c":"markdown","8d05b267":"markdown","1d87aefd":"markdown","0b557a29":"markdown"},"source":{"7bef3d7a":"import json\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import linear_model\nfrom sklearn.model_selection import cross_val_score\n\nwith open('..\/input\/yelp_academic_dataset_business.json','r') as f:\n    raw_text = f.readlines()\n    \nbusiness_dataset = pd.DataFrame([json.loads(s) for s in raw_text])\n\nfor col in business_dataset.columns:\n    print(col)# The column of this table","5e171bcb":"print(business_dataset['review_count'].describe())","83011e9d":"business_dataset.head(10)","4f46dc4a":"fig,(ax1, ax2)=plt.subplots(1,2)\nsns.set_style('whitegrid')\n\nbusiness_dataset['review_count'].hist(ax=ax1)\nax1.tick_params(labelsize=14)\nax1.set_xlabel('Review Coount', fontsize=14)\nax1.set_ylabel('Occurence', fontsize=14)\n\nbusiness_dataset['review_count'].hist(ax=ax2)\n# The axis scale type to apply. value : {\"linear\", \"log\", \"symlog\", \"logit\", ...}\nax2.set_yscale('log')\nax2.tick_params(labelsize=14)\nax2.set_xlabel('Review Coount in log scale', fontsize=14)\n_=ax2.set_ylabel('Occurence', fontsize=14)","fceeddbf":"def get_bins_by_fixed_length(fixed_length,display=False):\n    floor = np.floor(business_dataset['review_count'].min())\n    ceil = np.ceil(business_dataset['review_count'].max())\n    bins = int(np.ceil((ceil-floor)\/fixed_length))\n    if display:\n         print(\"Start from {} to {} with {} bins\".format(floor,ceil,bins))\n    return bins","24210abe":"bins = get_bins_by_fixed_length(10)\nx = pd.cut(business_dataset['review_count'],bins,labels=False)","4124bae8":"x2 = pd.cut(business_dataset['review_count'],100,labels=False).value_counts()","e440cbc8":"deciles = business_dataset['review_count'].quantile([i*0.1 for i in range(10)])\ndeciles","9ffc3c13":"sns.set_style('whitegrid')\nfig, ax = plt.subplots()\nbusiness_dataset['review_count'].hist(ax=ax, bins=100)\nfor pos in deciles:\n    handle = plt.axvline(pos, color='r')\nax.legend([handle], ['deciles'], fontsize=14)\nax.set_yscale('log')\nax.set_xscale('log')\nax.tick_params(labelsize=14)\nax.set_xlabel('Review Count', fontsize=14)\nax.set_ylabel('Occurence', fontsize=14)\n\n","a1ca72d6":"import numpy as np\nsmall_counts = np.random.randint(0,100,(20,2))\nlarge_counts = np.random.randint(1e5,1e10,(20,2))","7149bb6b":"mix = np.concatenate([small_counts,large_counts])","c10a2967":"plt.scatter(mix[:,0],mix[:,1])","f3c09fd1":"business_dataset['log_review_count'] = np.log(business_dataset['review_count']+1)","e312e46d":"model_out_log = linear_model.LinearRegression()\nmodel_with_log = linear_model.LinearRegression()","7a13f0db":"score_out_log = cross_val_score(model_out_log,business_dataset['review_count'].values.reshape(-1,1),business_dataset['stars'],cv=10)\nscore_with_log = cross_val_score(model_with_log,business_dataset['log_review_count'].values.reshape(-1,1),business_dataset['stars'],cv=10)","5e934956":"for title, score in zip(['With log','Without log'],[score_with_log,score_out_log]):\n    print(title,'mean',score.mean(),'std',score.std())","4fa2b457":"# 1. Binning\nRaw counts might span over several order of magnitude, and that might be a problem for some models. To deal with this problem, we can use `Binning`.\n## 1. Fixed-width binning\n## 2. Quantile binning\n","8e70ad21":"# Preface\nWe will load the `yelp` dataset for this notebook, as you can see, the feature of this dataset is shown below.\n\n    `'address','attributes','business_id', 'categories', 'city', 'hours', 'is_open', 'latitude', 'longitude', 'name', 'postal_code', 'review_count', 'stars', 'state'`\n\nAnd we will focus on `review_count`.","cd1b6c4a":"# Summary","8463bbed":"# 3. Scaling and Normalization","4cd69c40":"# 4. Interaction Feature","0b9be51c":"# 5. Detail Feature","8d05b267":"# 2. Log power\nThe log transformer is a powerful tool for dealing with positive number with heavy-tailed distribution.\n","1d87aefd":"** Overview **\n\nThis notebook will demo some common tricks used on feature engineering of numercie feature. Lastly, I will have a brief introduction of feature selection.\n\n**Outline**\n    - Preface\n    1. Binning\n    2. Log, Power\n    3. Scaling and Normalization\n    4. Interaction Feature\n    5. Detail Feature\n    - Summary\n    - Introduction Feature Selection","0b557a29":"# Introduction Feature Selection"}}