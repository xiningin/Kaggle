{"cell_type":{"a5700724":"code","03a6081e":"code","481ade29":"code","48faa9db":"code","466f09e4":"code","bb194786":"code","be364151":"code","5b90249e":"markdown","39c3eff6":"markdown","c3e37c61":"markdown","d754f75b":"markdown"},"source":{"a5700724":"import tensorflow as tf\nimport tensorflow.keras as k\nimport numpy as np\nfrom tensorflow.keras.datasets.mnist import load_data\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","03a6081e":"num_classes = 10\n(x_train, y_train), (x_test, y_test) = load_data()\n\nx_train = np.expand_dims(x_train, -1)\ny_train = k.utils.to_categorical(y_train, num_classes)\n\nx_test = np.expand_dims(x_test, -1)\ny_test = k.utils.to_categorical(y_test, num_classes)","481ade29":"datagen = ImageDataGenerator(featurewise_center=False,\n                            featurewise_std_normalization=False,\n                            rotation_range=20,\n                            width_shift_range=0.2,\n                            height_shift_range=0.2)","48faa9db":"batch_size = 128\ntrain_generator = datagen.flow( x_train,\n                                y=y_train,\n                                batch_size=batch_size,\n                                shuffle=True)\nvalid_generator = datagen.flow( x_test,\n                                y=y_test,\n                                batch_size=batch_size,\n                                shuffle=False)","466f09e4":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import add, Dense, Conv2D, Flatten, MaxPool2D, Dropout","bb194786":"model = Sequential()\nmodel.add(Conv2D(6, (5, 5), activation='sigmoid', input_shape = (28,28,1)))\nmodel.add(MaxPool2D((2, 2), strides=(2,2)))\nmodel.add(Conv2D(16, (5,5), activation='sigmoid'))\nmodel.add(MaxPool2D((2, 2), strides=(2,2)))\nmodel.add(Conv2D(120, (4, 4), activation='sigmoid'))\nmodel.add(Flatten())\nmodel.add(Dense(84,activation='sigmoid'))\nmodel.add(Dense(num_classes, activation='softmax'))\n\nmodel.summary()\n\nmodel.compile(optimizer=k.optimizers.RMSprop(lr=2e-3, decay=1e-5),\n                loss='categorical_crossentropy',\n                metrics=['accuracy'])","be364151":"callback = tf.keras.callbacks.EarlyStopping(monitor='val_accuracy', \n                                            min_delta=0.01,\n                                            verbose=1,\n                                            patience=2,\n                                            mode=\"auto\",\n                                            baseline=0.96)\n\nfit_stats = model.fit_generator(train_generator,\n                                steps_per_epoch=60000\/\/batch_size,\n                                validation_data=valid_generator,\n                                validation_steps=10000\/\/batch_size,\n                                callbacks=[callback],\n                                epochs=50)","5b90249e":"Based on Yann LeCun paper (1998) \nhttp:\/\/yann.lecun.com\/exdb\/mnist\/","39c3eff6":"# Train model","c3e37c61":"# Building model","d754f75b":"# Loading data"}}