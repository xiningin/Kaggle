{"cell_type":{"b556d73d":"code","17044abb":"code","df88baa4":"code","34b01dc7":"code","d94dc6ef":"code","082ff32b":"code","8813cecc":"code","8858d530":"code","1c19e670":"code","dba127c7":"code","2805b663":"code","5a0311fb":"code","2309cee2":"code","a70e6e15":"code","f55502fa":"code","6e70edc3":"code","b9e376e7":"code","e7d62e76":"code","b0c7970e":"code","99fc29e8":"code","c554c1c2":"code","dacff428":"markdown","c2982d41":"markdown","4c41225b":"markdown","d21c3cd3":"markdown","94df6a34":"markdown"},"source":{"b556d73d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","17044abb":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\npd.set_option('display.max_columns', None)","df88baa4":"PFF_Scouting = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')\nPFF_Scouting.head()","34b01dc7":"PFF_Scouting.info()","d94dc6ef":"PFF_Scouting.describe()","082ff32b":"%matplotlib inline\nPFF_Scouting.hist(bins=50, figsize=(20, 15));","8813cecc":"profile_PFF_Scouting = ProfileReport(\n    PFF_Scouting, title=\"Pandas Profiling Report for NFL-big-data-bowl-2022\"\n)\nprofile_PFF_Scouting","8858d530":"games = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2022\/games.csv\")\ngames.head()","1c19e670":"games.info()","dba127c7":"games.describe()","2805b663":"games.hist(bins=50, figsize=(20,15))","5a0311fb":"profile_games = ProfileReport(\n    games, title=\"Pandas Profiling Report for NFL-big-data-bowl-2022\"\n)\nprofile_games","2309cee2":"players = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/players.csv')\nplayers.head()","a70e6e15":"players.info()","f55502fa":"players.hist(bins=50, figsize=(20,15))","6e70edc3":"profile_players = ProfileReport(\n    players, title=\"Pandas Profiling Report for NFL-big-data-bowl-2022\"\n)\nprofile_players","b9e376e7":"plays = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/plays.csv')\nplays.head()","e7d62e76":"plays.info()","b0c7970e":"plays.describe()","99fc29e8":"plays.hist(bins=50, figsize=(20,15))","c554c1c2":"profile_plays = ProfileReport(\n    plays, title=\"Pandas Profiling Report for NFL-big-data-bowl-2022\"\n)\nprofile_plays","dacff428":"# Read data to understand about data","c2982d41":"# 1. PFFScoutingData\n\ngameId: Game identifier, unique, numeric\n\nplayId: Play identifier, not unique, numeric\n\nsnapDetail: \n\nsnapTime:\n\noperationTime:\n\nhangTime:\n\nkickType:\n\nkickDirectionIntended:\n\nkickDirectionActual:\n\nreturnDirectionIntended:\n\nreturnDirectionActual:\n\nmissedTackler:\n\nassistTackler:\n\ntackler:\n\nkickoffReturnFormation:\n\ngunners:\n\npuntRushers:\n\nspecialTeamSafeies:\n\nvises:\n\nkickContactType:\n\n\n\n\n","4c41225b":"# 3. Players","d21c3cd3":"# 4. Plays","94df6a34":"# 2. Games\n\n"}}