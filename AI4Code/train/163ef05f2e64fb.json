{"cell_type":{"e7f7c273":"code","a6248fd6":"markdown"},"source":{"e7f7c273":"from kaggle.competitions import twosigmanews\nfrom IPython.core.display import display\n\nenv = twosigmanews.make_env()\n\ndf = env._var07.set_index([\"assetCode\", \"time\"], verify_integrity=True)\ndf[\"confidenceValue\"] = 2 * (df.returnsOpenNextMktres10 > 0).astype(float) - 1\n\nm = min(df[df.returnsOpenNextMktres10 > 0].returnsOpenNextMktres10.min(), df[df.returnsOpenNextMktres10 < 0].returnsOpenNextMktres10.max() * -1)\n\nfor (\n    market_obs_df,\n    news_obs_df,\n    predictions_template_df,\n) in env.get_prediction_days():\n    predictions_df = (\n        predictions_template_df.set_index(\"assetCode\")\n        .join(\n            market_obs_df.set_index([\"assetCode\", \"time\"])\n            .join(df.returnsOpenNextMktres10, how=\"left\")\n            .returnsOpenNextMktres10.reset_index()\n            .drop(\"time\", axis=1)\n            .set_index(\"assetCode\"),\n            how=\"inner\",\n            lsuffix=\"_\",\n        )\n        .reset_index()\n    )\n    predictions_df.confidenceValue = 1 \/ predictions_df.returnsOpenNextMktres10 * m\n    predictions_df.drop(\"returnsOpenNextMktres10\", axis=1)\n    \n    env.predict(predictions_df)\n\nenv.write_submission_file()","a6248fd6":"This kernel is modified from Alan Pennacchio's `env._var07`.\nThis ConfidenceValue is calculated from reciprocal of \"r\"(returnsOpenNextMktres10), and it seems that it is almost a value close to the upper limit.\nSince this is obviously a unfair score, we expect kaggle operator to quickly support."}}