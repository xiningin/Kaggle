{"cell_type":{"f78ae99a":"code","d31412a2":"code","b795fbc8":"code","1cd89e71":"code","44861dfa":"code","432203ad":"code","fee0e000":"code","e49684d9":"code","dac65403":"code","187c3a97":"markdown","693d1aa4":"markdown","45eca712":"markdown","e82c2dbf":"markdown","7794e35a":"markdown","3c9b8873":"markdown","f3fc5afa":"markdown"},"source":{"f78ae99a":"!python3 -m pip install scikit-learn==0.24\n!python3 -m pip install pandas","d31412a2":"# importing python packages:\nimport pandas as pd\nimport glob\nimport datetime\nfrom sklearn.metrics import mean_absolute_error\nfrom matplotlib.pyplot import hist\nfrom matplotlib import rcParams\nimport seaborn as sns\nfrom numpy import sum\nfrom numpy import median\nfrom numpy import mean\nfrom sklearn import preprocessing\nfrom matplotlib import pyplot as plt\n# loading data:\nmain_file=\"..\/input\/neobank-transactions\/2016-09-19_79351_training.csv\"\nmain=pd.read_csv(main_file,parse_dates=['transaction_date'], dtype = {'mcc_group':'str','user_id': 'str','amount_n26_currency': 'int','transaction_type': 'str'})\nmcc_group_file=\"..\/input\/neobank-transactions\/mcc_group_definition.csv\"\nmcc_group=pd.read_csv(mcc_group_file, dtype='str')\ntransaction_type_file=\"..\/input\/neobank-transactions\/transaction_types.csv\"\ntransaction_type=pd.read_csv(transaction_type_file, dtype='str')\n# handling NaN values:\nmain.columns = main.columns.str.strip()\nmain['mcc_group'] = main['mcc_group'].fillna('Unknown')\n# integrating loaded data:\ntesting_training=pd.merge(left=main,right=transaction_type,how='left', left_on='transaction_type', right_on='type')\ntesting_training=pd.merge(left=testing_training,right=mcc_group,how='left', left_on='mcc_group', right_on='mcc_group')\ntesting_training=testing_training[['user_id','transaction_date','explanation_y','agent','direction','explanation_x','amount_n26_currency']]","b795fbc8":"#generate delivered column for month:\ntesting_training['month'] = testing_training['transaction_date'].dt.month\n#split to trainig and testing dataframes:\ntesting=testing_training[testing_training['month']==7]\ntraining=testing_training[testing_training['month']!=7]\ncond = ~training['user_id'].isin(testing['user_id'])\ntraining=training.drop(training[cond].index)\ncond = ~testing['user_id'].isin(training['user_id'])\ntesting=testing.drop(testing[cond].index)\n# soring based on user id:\ntesting =testing.sort_values(by=['user_id'], ascending=True)\ntraining =training.sort_values(by=['user_id'], ascending=True)","1cd89e71":"# group by testing dataframe based on user id and month:\ntesting_monthly=testing.groupby(['user_id','month'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_monthly=testing_monthly.reset_index()\n# group by training dataframe based on user id and month:\ntraining_monthly=training.groupby(['user_id', 'month'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntraining_monthly=training_monthly.reset_index()\n#Visualization (Histogram):\nfig, axes = plt.subplots(1, 2)\nbins_list = [ 0,50,100, 150,  200, 250, 300,350,400, 450, 500, 550,600]\ntraining_monthly['sum'].plot.hist(bins = bins_list, grid=True, rwidth=0.9,label='training',ax=axes[0], color='g')\ntesting_monthly['sum'].plot.hist(bins = bins_list, grid=True, rwidth=0.9, label='testing', ax=axes[1], color='r')\naxes[1].set_xlabel('Amount of transactions')\naxes[0].set_xlabel('Amount of transactions')\naxes[1].set_ylabel('Number of Clients')\naxes[0].set_ylabel('Number of Clients')\naxes[1].legend()\naxes[0].legend()\nplt.legend(loc='upper right')\nplt.grid(axis='y', alpha=0.75)","44861dfa":"#aggregating data into months\ntesting_training_monthly=testing_training.groupby(['month'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_training_monthly=testing_training_monthly.reset_index()\ntesting_training_monthly.to_csv('testing_training_monthly.csv')\n# Visualization:\nsns.set_style('whitegrid')\nfig, ax =plt.subplots(1,2)\nfig.set_size_inches(11.7, 4.27)\nplt.subplots_adjust(wspace = 1)\nsns.lineplot(x=\"month\", y=\"mean\", sort=True, data=testing_training_monthly,ax=ax[0]).set_title(\"Averaged amount of transactions per user between February and July\")\nsns.lineplot(x=\"month\", y=\"count\", sort=True, data=testing_training_monthly, ax=ax[1]).set_title(\"Number of transactions for all users between February and July\")","432203ad":"#aggregating data based on the months and the direction of transactions:\ntesting_direction=testing.groupby(['month','direction'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_direction=testing_direction.reset_index()\ntraining_direction=training.groupby(['month','direction'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntraining_direction=training_direction.reset_index()\n#visualization:\nsns.set_style('whitegrid')\nfig, ax =plt.subplots(1,2)\nplt.subplots_adjust(hspace = 0.8)\nfig.set_size_inches(11.7, 4.27)\nsns.barplot(y='direction',palette = 'hls',order = [\"In\", \"Out\"] ,x='mean', data=training_direction, ax=ax[0], estimator=mean).set_title('Averaged amount of Transactions per user and month')\nsns.barplot(y='direction',palette = 'hls',order = [\"In\", \"Out\"], x='count', data=training_direction, ax=ax[1], estimator=mean).set_title('Averaged numbers of Transaction per month for all users')","fee0e000":"#aggregating data based on the month and explanation_y columns:\ntesting_explanation_y=testing.groupby(['month','explanation_y'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_explanation_y=testing_explanation_y.reset_index()\ntraining_explanation_y=training.groupby(['month','explanation_y'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntraining_explanation_y=training_explanation_y.reset_index()\n#visualization:\nsns.set_style('whitegrid')\nfig, ax =plt.subplots(1,2)\nplt.subplots_adjust(hspace = 0.8)\nfig.set_size_inches(11.7, 7.27)\nplt.subplots_adjust(hspace = 0.2,wspace = 0.8)\nsns.barplot(y='explanation_y',ci = None, x='mean', data=training_explanation_y, ax=ax[0], estimator=mean).set_title('Reasons of transactions (training)')\nsns.barplot(y='explanation_y',ci = None,  x='mean', data=testing_explanation_y, ax=ax[1], estimator=mean).set_title('Reasons of transactions (testing)')","e49684d9":"#aggregating data based on the month and explanation_x columns:\ntesting_explanation_x=testing.groupby(['month','explanation_x'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_explanation_x=testing_explanation_x.reset_index()\ntraining_explanation_x=training.groupby(['month','explanation_x'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntraining_explanation_x=training_explanation_x.reset_index()\n#Visualization:\nsns.set_style('whitegrid')\nfig, ax =plt.subplots(1,2)\nplt.subplots_adjust(hspace = 0.8)\nfig.set_size_inches(11.7, 7.27)\nplt.subplots_adjust(hspace = 0.2,wspace = 0.8)\nsns.barplot(y='explanation_x',ci = None, x='mean', data=training_explanation_x, ax=ax[0], estimator=mean).set_title('Averaged amount of transaction type (training)')\nsns.barplot(y='explanation_x',ci = None,  x='mean', data=testing_explanation_x, ax=ax[1], estimator=mean).set_title('Averaged amount of transaction type (testing)')","dac65403":"#aggregating data based on the month and agent columns:\ntesting_agent=testing.groupby(['month','agent'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntesting_agent=testing_agent.reset_index()\ntraining_agent=training.groupby(['month','agent'], as_index=False).amount_n26_currency.agg(['max', 'min', 'count', 'median', 'mean','sum'])\ntraining_agent=training_agent.reset_index()\n#Visualization:\nsns.set_style('whitegrid')\nfig, ax =plt.subplots(1,2)\nplt.subplots_adjust(hspace = 0.8)\nfig.set_size_inches(11.7,7.27)\nplt.subplots_adjust(hspace = 0.2,wspace = 0.8)\nsns.barplot(y='agent',ci = None, x='mean', data=training_agent, ax=ax[0], estimator=mean).set_title('Averaged amount of transaction medium (training)')\nsns.barplot(y='agent',ci = None,  x='mean', data=testing_agent, ax=ax[1], estimator=mean).set_title('Averaged amount of transaction medium (testing)')","187c3a97":"Average of amount of transactions in a month:\n* testing is month of July","693d1aa4":"Import required packages\nread csv files\nmerge join files","45eca712":"Amount of input transactions are higher than output transactions BUT the number of output transactions are higher than input transactions:","e82c2dbf":"Comparing the amount of transactions for each transaction's agent:","7794e35a":"Comparing the amount of transactions for each reason of transaction:","3c9b8873":"Comparing the amount of transaction versus the number of transactions","f3fc5afa":"Comparing the amount of transactions for each transaction's type:"}}