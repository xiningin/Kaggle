{"cell_type":{"6f752763":"code","4c730031":"code","e237bc9f":"code","399b69f5":"code","4d9d0033":"code","9ae94c8a":"code","52b8e1c9":"code","395096ce":"markdown","bedcb1c3":"markdown","6a65b924":"markdown","119c7b3f":"markdown"},"source":{"6f752763":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c730031":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","e237bc9f":"ds = pd.read_csv('..\/input\/positionsalaries-data\/position-salaries data.csv')\nds.head()","399b69f5":"x = ds.iloc[:, 1:-1].values\ny = ds.iloc[:, -1].values\nprint(x)\nprint(y)","4d9d0033":"#training the data\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 10, random_state = 0)\nrf.fit(x, y)","9ae94c8a":"#visualising predicted result\nx_new = np.arange(min(x), max(x),0.01).reshape(-1, 1)\nplt.scatter(x, y, c = 'red')\nplt.plot(x_new, rf.predict(x_new))\nplt.title('Random Forest Regression')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')","52b8e1c9":"#checking accuracy \nfrom sklearn.metrics import r2_score\nr2_score(y, rf.predict(x))","395096ce":"**Random Forest Regression**(To predict salaries based on previous job position)","bedcb1c3":"**Accuracy= 97.04%** Random Tree often overfits the model while working with small datasets","6a65b924":"Position and Level column, both show the position of the individual's previous job, so to avoid categorical data in position column, we use only Level column as the independent variable.","119c7b3f":"We do not split the data since in the dataset there are only 10 values. So, splitting the data further into test and train would decrease the accuracy."}}