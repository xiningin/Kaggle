{"cell_type":{"a3e64a0c":"code","4cf74ced":"code","0b54a0b3":"markdown"},"source":{"a3e64a0c":"import joblib\nfrom cuml import ForestInference\nimport treelite\n\n\nmodels = [\n    joblib.load('..\/input\/umplgbmmodels\/lgb_0.pkl'),\n    joblib.load('..\/input\/umplgbmmodels\/lgb_1.pkl'),\n    joblib.load('..\/input\/umplgbmmodels\/lgb_2.pkl'),\n    joblib.load('..\/input\/umplgbmmodels\/lgb_3.pkl'),\n    joblib.load('..\/input\/umplgbmmodels\/lgb_4.pkl')\n]\n\ngpu_models = []\nfor clf in models:\n    clf.save_model('\/tmp\/tmp.lgb')\n    fi = ForestInference()\n    fi.load_from_treelite_model(treelite.Model.load('\/tmp\/tmp.lgb', model_format='lightgbm'))\n    gpu_models.append(fi)","4cf74ced":"import ubiquant\nimport cupy as cp\nimport numpy as np\n\n\nenv = ubiquant.make_env()  \niter_test = env.iter_test()\nfor (test_df, sample_prediction_df) in iter_test:\n    X_test = test_df.drop([\"row_id\"], axis=1)\n    X_test = cp.asarray(X_test.values.astype(np.float32))\n    sample_prediction_df[\"target\"] = np.mean([clf.predict(X_test).get() for clf in gpu_models], axis=0)\n    env.predict(sample_prediction_df)","0b54a0b3":"- Training code is https:\/\/www.kaggle.com\/sishihara\/ump-lgbm-train-and-save\/, but it doesn't work in kaggle code due to ROM.\n- I used ForestInference for faster prediction, inspired by the Shopee 2nd place solution. https:\/\/www.kaggle.com\/lyakaap\/2nd-place-solution "}}