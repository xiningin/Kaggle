{"cell_type":{"36e308c3":"code","0ac959e9":"code","e89b73cc":"code","55435ccd":"code","82f1ddde":"code","bf9bd7c3":"code","8cb31417":"code","c44623b4":"code","71302a19":"code","adbaabfc":"code","e70e3d11":"markdown","406a3304":"markdown"},"source":{"36e308c3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport pickle\n\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","0ac959e9":"train = pd.read_csv('\/kaggle\/input\/challenges-in-representation-learning-facial-expression-recognition-challenge\/train.csv')\ntrain.shape","e89b73cc":"train['emotion'].unique()","55435ccd":"# Ici on affiche la distribution de nos images selon les diff\u00e9rentes classes\nemotion_prop = (train.emotion.value_counts() \/ len(train)).to_frame().sort_index(ascending=True)\n\nemotion_prop","82f1ddde":"emotions = ['Angry','Disgust','Fear','Happy','Sad','Surprise','Neutral']","bf9bd7c3":"palette = ['orchid', 'lightcoral', 'orange', 'gold', 'lightgreen', 'deepskyblue', 'cornflowerblue']\n\nplt.figure(figsize=[12,6])\n\nplt.bar(x=emotions, height=emotion_prop['emotion'], color=palette, edgecolor='black')\n    \nplt.xlabel('Emotion')\nplt.ylabel('Proportion')\nplt.title('Proportion of Emotion Labels')\nplt.show()","8cb31417":"# Permet de convertir les pixels qui sont sous forme de chaine de charact\u00e8res en tableau de nombres r\u00e9els\ndef pixels_to_array(pixels):\n    array = np.array(pixels.split(),'float64')\n    return array\n\ndef image_reshape(data):\n    image = np.reshape(data['pixels'].to_list(),(data.shape[0],48,48,1))\n    return image","c44623b4":"train['pixels'] = train['pixels'].apply(pixels_to_array)\nX = image_reshape(train)\ny = train['emotion']","71302a19":"plt.figure(figsize=[12,12])\nfor i in range(16):\n    plt.subplot(4,4,i+1)\n    plt.imshow(X[i],cmap=\"gray\")\n    plt.title(emotions[y[i]])\n    plt.axis(\"off\")\nplt.show()","adbaabfc":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=1)","e70e3d11":"Nous remarquons aussi que les donn\u00e9es ne sont pas balanc\u00e9s. Il serait interessant d'utiliser la \"stratified sampling\" pour s'assurer que l'entrainement se fait sur des donn\u00e9es qui sont repr\u00e9sentatifs.","406a3304":"Nous avons 7 classes allant de 0 \u00e0 6"}}