{"cell_type":{"90629c87":"code","8e27db5b":"code","6bff17eb":"code","2c5c9d57":"code","ff7eaa66":"code","4927e8e9":"code","59d6b4d5":"code","927103e9":"code","df176e36":"code","f2af6550":"code","babee74b":"code","4a2848b1":"code","4fc70aba":"code","b0c660fc":"code","c128d60a":"code","70dd2a96":"markdown","773feed3":"markdown","8bfcbfff":"markdown","7511e706":"markdown","16deb7b6":"markdown","1c1cc629":"markdown","73444f7a":"markdown","0ba65589":"markdown","f02a620f":"markdown","72cec014":"markdown","e6c9eb63":"markdown","05cf155f":"markdown"},"source":{"90629c87":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n","8e27db5b":"\n# Impoting interactive visualization modules\nfrom plotly import __version__\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\ncf.go_offline()","6bff17eb":"# reading the stock data using pandas\nstock_df = pd.read_csv('..\/input\/ml-prediction\/stock.csv', index_col=\"Date\", parse_dates=True)\nstock_df.head()","2c5c9d57":"stock_df.iplot()","ff7eaa66":"# normalize the data by dividing all by the first row\nnormalized_stock_data = stock_df\/stock_df.iloc[0,:]\nnormalized_stock_data.head()","4927e8e9":"normalized_stock_data.loc['2019-01-01':, :].iplot()","59d6b4d5":"# get the stock price for a particular stock\n# calculate and plot its bollinger bands\ntsla_df = stock_df.loc['2019-01-01':, ['TSLA']].copy()\ntsla_df.head()","927103e9":"tsla_df['Upper Band'] = tsla_df['TSLA'].rolling(20).mean() + tsla_df['TSLA'].rolling(20).std() * 2\ntsla_df['Lower Band'] = tsla_df['TSLA'].rolling(20).mean() - tsla_df['TSLA'].rolling(20).std() * 2","df176e36":"tsla_df.iplot()","f2af6550":"test0x0_df = stock_df.copy()\ndaily_return = (test0x0_df \/ test0x0_df.shift(1) - 1).fillna(0)\ndaily_return.head()","babee74b":"daily_return.loc['2020-01-01':, ['AAPL', 'GOOG']].iplot()","4a2848b1":"plt.figure(figsize=(14,7))\ndaily_return['GOOG'].hist(bins=20)\n\n#add title\nplt.title('The distribution of particular stock price')","4fc70aba":"# calculating the mean the standard deviation and the kurtosis\n# if the kurtosis is positive, it means we have fat tails for this stock data\n\nmean = daily_return['GOOG'].mean()\nstd = daily_return['GOOG'].std()\nkurtosis = daily_return['GOOG'].kurtosis()\n\nprint(kurtosis)","b0c660fc":"plt.figure(figsize=(14,7))\ndaily_return['GOOG'].hist(bins=20)\n\nplt.axvline(mean, color='w', linestyle='dashed', linewidth=2)\nplt.axvline(std, color='r', linestyle='dashed', linewidth=2)\nplt.axvline(-std, color='r', linestyle='dashed', linewidth=2)\n\n#add title \nplt.title('The distribution and calculated satatistics(mean, std, kurtosis) in the same plot')","c128d60a":"plt.figure(figsize=(14,7))\nsns.distplot(a=daily_return['GOOG'], label=\"GOOG\")\nsns.distplot(a=daily_return['TSLA'], label=\"TSLA\")\n\nplt.title(\"Distribution of two stock data ploted together\")\n\n# Force legend to appear\nplt.legend()","70dd2a96":"**When you compare the above histogram, the sentence that best describes the relationship between GOOG and TSLA is that `TSLA has lower return and higher volatility`**","773feed3":"**Calculating histogram statistics**","8bfcbfff":"### Plotting the daily returns of two stocks against each other","7511e706":"**Adding the calculated statistics to the histogram**","16deb7b6":"### Calculating Bollinger Bands\n* Higher band: a 20-period Simple Moving Average plus 2 times the 20-period rolling standard deviation, both calculated on the close price\n* Lower band: a 20-period Simple Moving Average minus 2 times the 20-period rolling standard deviation, both calculated on the close price","1c1cc629":"### Plotting the histogram of the daily return","73444f7a":"**Basic Statistical Analysis on Stock Data**","0ba65589":"### Interactive Visialization with plotly and cufflinks","f02a620f":"**Normalize the stock data and plot it.**","72cec014":"### Cumulative return\n**cum_rtn = (price[t] \/ price[0]) - 1**","e6c9eb63":"**Plotting the histogram of two stocks together**","05cf155f":"### Daily Return \n***Daily_ret[t] = (price[t]\/price[t-1]) - 1***\n## OR\n***Daily_ret[t] = (price[t] - price[t-1]) \/ price[t-1]***"}}