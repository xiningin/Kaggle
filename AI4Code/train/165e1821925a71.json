{"cell_type":{"68f5bfa8":"code","f65d79d9":"code","302a7926":"code","df640fbf":"code","062bf6b7":"code","f77bd9f2":"code","bb411c39":"code","fc970fe0":"code","d9fdbe71":"code","4731a003":"code","307cfc02":"code","d4840c33":"code","7d0886a1":"code","a6d2fc85":"code","bf23904f":"code","fc197450":"code","b164237d":"code","d7cd3150":"code","d09ad61b":"code","6541aa20":"code","981b6410":"code","a58ec44d":"code","a2c9c13e":"code","3103f198":"code","148be8d4":"code","517878ef":"code","ba7ba03b":"code","0ef18da7":"code","f61dfcf3":"code","696e346d":"code","6013e13d":"code","7c8d52fe":"code","783ee899":"code","8f36e3a2":"code","668dfa85":"code","70b8dda8":"code","939259ad":"code","5e81bdb5":"code","3dd7a65b":"markdown","b2411e06":"markdown"},"source":{"68f5bfa8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f65d79d9":"#libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom sklearn.preprocessing import StandardScaler","302a7926":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.float_format', lambda x: '%.5f' % x)","df640fbf":"#loading the data\ndf = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv')\ndf.head()","062bf6b7":"#data preprocessing\ndf.info()","f77bd9f2":"df.isnull().sum()","bb411c39":"#encoding\nbinary_cols = [col for col in df.columns if df[col].dtype in [\"O\"] and col != \"Car_Name\"]\n\ndf = pd.get_dummies(df, columns=binary_cols, drop_first=False)\n\ndf.head()","fc970fe0":"df.info()","d9fdbe71":"X=df.drop([\"Car_Name\",\"Selling_Price\"], axis=1)\ny=df[\"Selling_Price\"]","4731a003":"#training set and test set\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","307cfc02":"#First Model: Linear Regression\nlr= LinearRegression()\nlr.fit(x_train,y_train)\ny_pred=lr.predict(x_test)","d4840c33":"# MSE\nmean_squared_error(y_test, y_pred)","7d0886a1":"# RMSE\nnp.sqrt(mean_squared_error(y_test, y_pred))","a6d2fc85":"# MAE\nmean_absolute_error(y_test, y_pred)","bf23904f":"# R-KARE\nr2_score(y_test, y_pred)","fc197450":"#Second Model: Polynomial Regression \n\n#Degree=2, Polynomial Regression\npoly = PolynomialFeatures(degree = 2)\nx_poly = poly.fit_transform(x_train)\nlr.fit(x_poly,y_train)\n\ny_pred2=lr.predict(x_poly)","b164237d":"# MSE\nmean_squared_error(y_train, y_pred2)","d7cd3150":"# RMSE\nnp.sqrt(mean_squared_error(y_train, y_pred2))","d09ad61b":"# MAE\nmean_absolute_error(y_train, y_pred2)","6541aa20":"# R-KARE\nr2_score(y_train, y_pred2)","981b6410":"# Degree=3,Polynomial Regression\npoly3 = PolynomialFeatures(degree = 3)\nx_poly3 = poly3.fit_transform(x_train)\nlr.fit(x_poly3,y_train)\n\ny_pred3=lr.predict(x_poly3)","a58ec44d":"# MSE\nmean_squared_error(y_train, y_pred3)","a2c9c13e":"# RMSE\nnp.sqrt(mean_squared_error(y_train, y_pred3))","3103f198":"# MAE\nmean_absolute_error(y_train, y_pred3)","148be8d4":"# R-KARE\nr2_score(y_train, y_pred3)","517878ef":"#Third Model: Decision Tree Regression\ndt = DecisionTreeRegressor(random_state=0)\ndt.fit(x_train,y_train)\n\ny_pred5=dt.predict(x_test)","ba7ba03b":"# MSE\nmean_squared_error(y_test, y_pred5)","0ef18da7":"# RMSE\nnp.sqrt(mean_squared_error(y_test, y_pred5))","f61dfcf3":"# MAE\nmean_absolute_error(y_test, y_pred5)","696e346d":"# R-KARE\nr2_score(y_test, y_pred5)","6013e13d":"#Fourth Model: Support Vector Regression (SVR)\n\n#Scaling Data\nstd=StandardScaler()\nx_train=std.fit_transform(x_train)\nx_test=std.fit_transform(x_test)\n\ny_train=np.array(y_train)       \ny_train=y_train.reshape(-1,1)\ny_train=std.fit_transform(y_train)\n\ny_test=np.array(y_test)\ny_test=y_test.reshape(-1,1)\ny_test=std.fit_transform(y_test)","7c8d52fe":"svr=SVR(kernel='rbf')\nsvr.fit(x_train,y_train)\n         \ny_pred6=svr.predict(x_test)","783ee899":"# MSE\nmean_squared_error(y_test, y_pred6)","8f36e3a2":"# RMSE\nnp.sqrt(mean_squared_error(y_test, y_pred6))","668dfa85":"# MAE\nmean_absolute_error(y_test, y_pred6)","70b8dda8":"# R-KARE\nr2_score(y_test, y_pred6)","939259ad":"#support vector predict -1\n\nb=np.array(X[1:2])\n\ny_pred7=svr.predict(b)\ny_pred7","5e81bdb5":"#support vector predict -2\na=np.array([[2014,10.79,15000,0,1,0,0,1,0,0,0]])\n\ny_pred8=svr.predict(a)\ny_pred8","3dd7a65b":"Aim: To predict the price of the car, using various features provided in the dataset","b2411e06":"##Information about data\n\n\nyear: Year of the car when it was bought\n\nselling price: Price at which the car is being sold\n\npresent price: This is the current ex-showroom price of the car.\n\nkm driven: Number of Kilometres the car is driven\n\nfuel: car is driven text_format fuel sort Fuel type of car (petrol \/ diesel \/ CNG \/ LPG \/ electric)\n\nseller type: Tells if a Seller is Individual or a Dealer\n\ntransmission: Gear transmission of the car (Automatic\/Manual)\n\nowner: Number of previous owners of the car."}}