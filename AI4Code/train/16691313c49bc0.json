{"cell_type":{"d987dc17":"code","46b02246":"code","3212e921":"code","f340bab8":"code","3f5e05d7":"code","3656015c":"code","7be6f41c":"code","4188b344":"markdown"},"source":{"d987dc17":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nimport os\nfrom tqdm.notebook import tqdm\nfrom matplotlib import pyplot as plt","46b02246":"def getListOfFiles(dirName):\n    # create a list of file and sub directories \n    # names in the given directory \n    listOfFile = os.listdir(dirName)\n    allFiles = list()\n    # Iterate over all the entries\n    for entry in listOfFile:\n        # Create full path\n        fullPath = os.path.join(dirName, entry)\n        # If entry is a directory then get the list of files in this directory \n        if os.path.isdir(fullPath):\n            allFiles = allFiles + getListOfFiles(fullPath)\n        else:\n            allFiles.append(fullPath)\n                \n    return allFiles","3212e921":"train_files = getListOfFiles('..\/input\/petfinder-pawpularity-score\/train')\ntrain_df = pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv').set_index('Id')\ntrain_ids = [os.path.basename(file).split('.')[0] for file in train_files]\n\ntest_files = getListOfFiles('..\/input\/petfinder-pawpularity-score\/test')\ny_train = train_df.loc[train_ids].Pawpularity","f340bab8":"def read_resize(file, size):\n    x = tf.io.read_file(file)\n    x = tf.io.decode_jpeg(x)\n    x = tf.keras.preprocessing.image.smart_resize(x, size, interpolation='bilinear')\n    x = x \/ 256\n    return x.numpy()","3f5e05d7":"x_train_256 = np.stack([read_resize(file, (256, 256)) for file in tqdm(train_files)])\nx_train_256.nbytes \/ 1024 \/ 1024 \/ 1024","3656015c":"os.makedirs('..\/working\/petfinder-pawpularity-score-resized')","7be6f41c":"np.save('..\/working\/petfinder-pawpularity-score-resized\/x_train_256.npy', x_train_256)\nnp.save('..\/working\/petfinder-pawpularity-score-resized\/y_train.npy', y_train)","4188b344":"# Smart Resize\n\nResizes images without distortion, by applying cropping on the longer dimension before resizing.\n\nThe process is:\n* Take the largest centered crop of the image that has the same aspect ratio as the target size. For instance, if size=(200, 200) and the input image has size (340, 500), we take a crop of (340, 340) centered along the width.\n* Resize the cropped image to the target size. In the example above, we resize the (340, 340) crop to (200, 200).\n"}}