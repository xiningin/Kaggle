{"cell_type":{"3cd6a5e4":"code","13571b0a":"code","5a9c8e35":"code","fbe992a5":"code","53d8707b":"code","cca4199f":"code","c616d0a6":"code","6dc53322":"code","069197c7":"code","78e3048b":"code","8a7501cd":"code","3f9728fa":"code","25a394c2":"code","4d46cac4":"code","61d660a1":"markdown","eaac0127":"markdown","22c94192":"markdown"},"source":{"3cd6a5e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13571b0a":"df=pd.read_csv(r'\/kaggle\/input\/indian-food-101\/indian_food.csv')","5a9c8e35":"df.head()","fbe992a5":"df.info()","53d8707b":"df.region.value_counts()","cca4199f":"temp1=df.pivot_table(values='name',index=['region'],columns='diet', aggfunc = 'count')\ntemp1=temp1[1:]\nfig=plt.figure(1)\n# ax1=fig.add_subplot()\nax1.set_xlabel('region')\nax1.set_ylabel('no of dishes')\ntemp1.plot(kind='bar',stacked=True, color=['red','green'],grid=False)","c616d0a6":"temp2=df.pivot_table(values='name',index=['region'],columns='course', aggfunc = 'count')\ntemp2=temp2[1:]\nfig=plt.figure(1)\n# ax1=fig.add_subplot()\nax1.set_xlabel('region')\nax1.set_ylabel('no of dishes')\ntemp2.plot(kind='bar',stacked=True, grid=False)","6dc53322":"temp3=df.pivot_table(values='name',index=['region'],columns='flavor_profile', aggfunc = 'count')\ntemp3=temp3.iloc[1:,1:]\nfig=plt.figure(1)\n# ax1=fig.add_subplot()\nax1.set_xlabel('region')\nax1.set_ylabel('no of dishes')\ntemp3.plot(kind='bar',stacked=True, grid=False)","069197c7":"df.head()","78e3048b":"temp4=df.pivot_table(values=['prep_time','cook_time'],index='course',aggfunc=np.mean)\ntemp4.plot(kind='bar',stacked=True)","8a7501cd":"temp5=df.pivot_table(values=['prep_time','cook_time'],index='flavor_profile',aggfunc=np.mean)\ntemp5=temp5[1:]\ntemp5.plot(kind='bar',stacked=True)","3f9728fa":"# df1=df[df.flavor_profile!=-1]\n# df1=df1[df1.prep_time!=-1]\n# df1[df1.prep_tim==-1]\ntemp6=df.pivot_table(values=['prep_time','cook_time'],index=['course','flavor_profile'],aggfunc=np.mean)\n# temp6=temp6[temp6.flavor_profile!=-1]\ntemp6.plot(kind='bar',stacked=True)","25a394c2":"df.head()","4d46cac4":"temp7=df.pivot_table(values=['prep_time','cook_time'],index=['region','diet'],aggfunc=np.mean)\ntemp7=temp7[1:]\ntemp7.plot(kind='bar',stacked=True)","61d660a1":"# EDA","eaac0127":"# Average cooking time and prep time","22c94192":"# Course and Flavor Profile"}}