{"cell_type":{"80436f74":"code","18c74897":"code","aaf2a0b4":"code","ad19fc43":"code","bd8e340c":"code","f6996b29":"code","c06bb77f":"code","75ce5af1":"code","823b577a":"code","a3989df5":"code","bdc038d0":"code","0c3d4a59":"code","4b32f46a":"code","9468beea":"code","035c3030":"code","6d332cdd":"code","0f319de7":"code","96f4e40c":"code","4fe6ee88":"code","66cb6b88":"code","ad435b8f":"code","578d28ba":"code","12953335":"code","d7f8fff3":"code","17718bfa":"code","7f9c0e9e":"code","2c26e36a":"code","646e0dbd":"code","84fc7592":"code","bc945349":"code","eb31e30a":"code","5a63956b":"code","f2fd9fd6":"code","08b4bd18":"code","e3fcf997":"code","3ff02397":"code","c681ce57":"code","615c3127":"code","17bbe4c5":"code","ee40926f":"code","82139a5c":"code","0952e9c9":"code","9bb0a28c":"code","527435fc":"code","c0558269":"code","b95555c9":"code","9fe8b3e9":"code","9c292846":"code","9724a709":"code","2dbb363d":"code","3706c4f5":"code","c9300ae9":"code","81fe6486":"code","ca3f1a2c":"code","651aeba1":"code","0572cee8":"code","69cdab5c":"code","c005a157":"code","9e0e1eba":"code","07743b25":"code","08a8067e":"code","f25e5bc2":"code","6a7fb018":"code","2695e5f8":"code","1d29ac88":"code","d1e85cc2":"code","ad13a012":"code","bd776c76":"code","bd611a9f":"code","2742b5cd":"code","2d0b0e79":"code","8076558a":"code","02bf82b3":"code","ab9a3165":"code","a90b970a":"code","d9c96492":"code","970759ae":"code","b4944caa":"code","6e1d4e9d":"code","5d0863fc":"code","41ae8e0c":"code","3f11c3f9":"code","e0f1c1fd":"code","4a63c39d":"code","c1a1d8a6":"code","a3be3f77":"code","e42bb799":"code","111d1dcd":"code","2b2bad51":"code","c245f36c":"code","8274fdab":"code","023ad310":"code","0c03e741":"code","16bd3238":"code","b78d7fbf":"code","8c15d25e":"code","521926b1":"code","de6c7c7a":"code","c7868b8d":"code","9000adbe":"code","44d5ef5d":"code","5d9eaf5c":"code","045a123e":"code","4628553f":"code","16d08dfd":"code","d5f614e4":"code","2baa6081":"code","d5f678b5":"code","4d068d1f":"code","71d516a2":"code","3a3cf8bf":"code","f5e247c9":"code","f55f55ce":"code","5ca6c160":"code","83808b37":"code","f86713bb":"code","9957f60d":"code","798d485b":"code","09a3c2a5":"code","070bb9da":"code","42bb879b":"code","41d9b23d":"code","50f4e6c2":"code","725de179":"code","a0b6ad4b":"code","d95c47de":"code","f44bbb49":"code","0079a5d3":"code","a188a68d":"code","7c73d061":"code","20799637":"code","4383d77a":"code","53c390ca":"code","df0ba6b0":"code","9c479c0e":"code","e92f9546":"code","71f166dc":"code","0571b5af":"code","31ca8f43":"code","4216d210":"code","c835eb14":"code","07ea60d3":"code","5242ec8b":"code","1c40f33b":"code","5f683207":"code","428ed45e":"code","f510ec06":"code","16d34222":"code","b7931b6f":"code","698d4b43":"code","3c589a4e":"markdown","e655ec2c":"markdown","cb98074c":"markdown","48e08d9e":"markdown","88f5eca7":"markdown","a69ec6f2":"markdown","5914e586":"markdown","b6ebc655":"markdown","74f96767":"markdown","ce93162c":"markdown","f4c3265c":"markdown","fdd40326":"markdown","6bc84509":"markdown","7ab7e085":"markdown","8c72f79d":"markdown","2c59c012":"markdown"},"source":{"80436f74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18c74897":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport numpy as np\nfrom pathlib import Path\nimport plotly.offline as py\nimport plotly.express as px\nimport cufflinks as cf\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error as MAE\nfrom sklearn.cluster import DBSCAN","aaf2a0b4":"#Einlesen der Corona- und Wetterdaten\nUSA = pd.read_csv('\/kaggle\/input\/covid19-in-usa\/us_states_covid19_daily.csv')\nWetterNY = pd.read_csv('\/kaggle\/input\/wetterusa\/NewYork_all2.csv',sep = \";\")\nWetterLA = pd.read_csv('\/kaggle\/input\/wetterusa\/LosAngeles.csv',sep = \";\")","ad19fc43":"# erste Zeilen der Coronadaten der USA anzeigen lassen\nUSA.head()","bd8e340c":"# Info \u00fcber Daten\nUSA.info()","f6996b29":"# erste Zeilen Wetterdaten New York anzeigen lassen\nWetterNY.head()","c06bb77f":"# Info \u00fcber Daten\nWetterNY.info()","75ce5af1":"# erste Zeilen Wetterdaten New York anzeigen lassen\nWetterLA.head()","823b577a":"#Spalte von Date in date umbenennen, damit matching funktioniert\n#Wurde in Preprocessing bereits ge\u00e4ndert\n\n#WetterNY.rename(columns={\"date\": \"Date\"})\n#WetterNY.head()","a3989df5":"# einzelne Werte des Dataframes USA, Spalte State ausgeben \nUSA['state'].unique()","bdc038d0":"#Filtern auf Zeilen mit State New York, erste Zeilen ausgeben\nNYC = USA[USA.state=='NY']\nNYC.head()","0c3d4a59":"#Info zu neuem DF\nNYC.info()","4b32f46a":"#New York nur die positiven F\u00e4lle\n\n#NYC = NYC[NYC['positive']>0]\n#NYC\n","9468beea":"#New York Coronadaten und Wetterdaten in neuem Dataframe zusammenf\u00fchren an Parameter date, erste Zeilen ausgeben\n\n#coronawetterny = pd.merge(NYC, WetterNY, how='right', on='date')\ncoronawetterny = pd.merge(WetterNY, NYC, how='inner', on='date')\ncoronawetterny.head()","035c3030":"#date als Index setzen\n\ncoronawetterny.set_index('date')","6d332cdd":"# nicht ben\u00f6tigte Spalten l\u00f6schen\n\ncoronawetterny2 = coronawetterny.copy()\ncoronawetterny2=coronawetterny2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative', 'lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease', 'hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\n","0f319de7":"#Coronadaten sind absteigend soritert, Wetterdaten sind aufsteigend sortiert\n#nach Datum sortieren\n#da in merge zuerst das Wetter und danach NYC genannt wird, ist DF bereits in richtiger Reihenfolge\n\n#sortedcoronawetterny = coronawetterny2.sort_values(by='date')\n#sortedcoronawetterny.head()","96f4e40c":"#info zu Datentypen\ncoronawetterny2.info()","4fe6ee88":"#date in string umwandeln\ncoronawetterny2['date'] = coronawetterny2['date'].astype(str)","66cb6b88":"# date \"fest\" als index setzen\ncoronawetterny2.set_index('date', drop=True,inplace=True)\ncoronawetterny2.head()","ad435b8f":"# graphische Darstellung Anzahl Neuerkrankungen\n\ncoronawetterny2['positiveIncrease'].plot()\n#coronawetterny2['Avg Temperature in C'].plot()\nplt.xlabel('Anzahl Neuerkrankungen')\n","578d28ba":"#graphische Darstellung Temperatur\ncoronawetterny2['Avg Temperature in C'].plot(kind='line',x='date',y='Avg Temperature in C')","12953335":"#Korrelationsmatrix des Dataframes\n\ncoronawetterny2.corr(method ='kendall')\n\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> negative Korrelation","d7f8fff3":"# graphische Darstellung Niederschlag\n\ncoronawetterny2['Precipitation'].plot(kind='line')\nplt.ylabel('Niederschlag')\nplt.xlabel('Datum')\nplt.title('Niederschlagswerte')","17718bfa":"#Schleife Neuerkrankungen 14 Mal um jeweils einen Tag verschieben\n\nfor i in range(14):\n    i=i-14\n    coronawetterny2.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = coronawetterny2.positiveIncrease.shift(i)","7f9c0e9e":"#erweiterten Datanframe ausgeben\n\ncoronawetterny2","2c26e36a":"# Korrelationsmatrix mit Neuerkrankten x Tage nach Wetter\n\nkorrmat=coronawetterny2.corr(method ='kendall')","646e0dbd":"# korrelationsmatrix ausgeben\n\nkorrmat","84fc7592":"# nicht ben\u00f6tigte Spalten l\u00f6schen\n\nkorrmatcol=korrmat.copy()\nkorrmatcol=korrmatcol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])\n","bc945349":"#nicht ben\u00f6tigte Zeilen l\u00f6schen\n\nkorrmatcol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","eb31e30a":"#Korrelation zwischen Luftdruck und anderen Wetterdaten ermitteln\n\nwetterkorr=WetterNY.corr(method ='kendall')\nwetterkorr['Avg Pressure in Hg']","5a63956b":"USA","f2fd9fd6":"LA = USA[USA.state=='CA']\nLA","08b4bd18":"WetterLA.rename(columns={\"date\": \"Date\"})\nWetterLA","e3fcf997":"coronawetterla = pd.merge(WetterLA, LA, how='inner', on='date')\ncoronawetterla","3ff02397":"coronawetterla.set_index('date')","c681ce57":"coronawetterla2 = coronawetterla.copy()\ncoronawetterla2=coronawetterla2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","615c3127":"coronawetterla3 = coronawetterla2.copy()\ncoronawetterla3=coronawetterla3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","17bbe4c5":"coronawetterla4 = coronawetterla3.copy()\ncoronawetterla4=coronawetterla4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawetterla4","ee40926f":"sortedcoronawetterla = coronawetterla4.sort_values(by='date')\nsortedcoronawetterla","82139a5c":"sortedcoronawetterla.info()","0952e9c9":"sortedcoronawetterla['date'] = sortedcoronawetterla['date'].astype(str)","9bb0a28c":"sortedcoronawetterla.set_index('date', drop=True,inplace=True)\nsortedcoronawetterla.head()\n#sortedcoronawetterla","527435fc":"sortedcoronawetterla['positiveIncrease'].plot()\nsortedcoronawetterla['Avg Temperature in C'].plot()\nplt.xlabel('Achsenbeschriftung')","c0558269":"sortedcoronawetterla['Avg Temperature in C'].plot(kind='line',x='date',y='Avg Temperature in C')","b95555c9":"sortedcoronawetterla.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","9fe8b3e9":"sortedcoronawetterla['Precipitation'].plot(kind='line')\nplt.ylabel('Niederschlag')\nplt.xlabel('Datum')\nplt.title('Niederschlagswerte')","9c292846":"for i in range(14):\n    i=i-14\n    sortedcoronawetterla.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawetterla.positiveIncrease.shift(i)","9724a709":"sortedcoronawetterla.head()","2dbb363d":"korrmatla=sortedcoronawetterla.corr(method ='kendall')","3706c4f5":"korrmatla\n","c9300ae9":"korrmatlacol=korrmatla.copy()\nkorrmatlacol=korrmatlacol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","81fe6486":"korrmatlacol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","ca3f1a2c":"USA['state'].unique()","651aeba1":"WetterTX = pd.read_csv('\/kaggle\/input\/usawetter\/Austin.csv',sep = \";\")\nWetterNC = pd.read_csv('\/kaggle\/input\/usawetter\/Bismarck.csv',sep = \";\")\nWetterCO = pd.read_csv('\/kaggle\/input\/usawetter\/Denver.csv',sep = \";\")\nWetterFL = pd.read_csv('\/kaggle\/input\/usawetter\/Miami.csv',sep = \";\")\nWetterAZ = pd.read_csv('\/kaggle\/input\/usawetter\/Phoenix.csv',sep = \";\")","0572cee8":"TX = USA[USA.state=='TX']\nTX.head()","69cdab5c":"WetterTX","c005a157":"WetterTX.rename(columns={\"date\": \"Date\"})\nWetterTX","9e0e1eba":"coronawettertx = pd.merge(WetterTX, TX, how='inner', on='date')\ncoronawettertx","07743b25":"coronawettertx.set_index('date')","08a8067e":"coronawettertx2 = coronawettertx.copy()\ncoronawettertx2=coronawettertx2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","f25e5bc2":"coronawettertx3 = coronawettertx2.copy()\ncoronawettertx3=coronawettertx3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","6a7fb018":"coronawettertx4 = coronawettertx3.copy()\ncoronawettertx4=coronawettertx4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawettertx4","2695e5f8":"sortedcoronawettertx = coronawettertx4.sort_values(by='date')\nsortedcoronawettertx","1d29ac88":"sortedcoronawettertx.info()","d1e85cc2":"sortedcoronawettertx['date'] = sortedcoronawettertx['date'].astype(str)","ad13a012":"sortedcoronawettertx.set_index('date', drop=True,inplace=True)\nsortedcoronawettertx.head()\n#sortedcoronawettertx","bd776c76":"sortedcoronawettertx.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","bd611a9f":"for i in range(14):\n    i=i-14\n    sortedcoronawettertx.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawettertx.positiveIncrease.shift(i)","2742b5cd":"sortedcoronawetterla.head()","2d0b0e79":"korrmattx=sortedcoronawettertx.corr(method ='kendall')","8076558a":"korrmattx","02bf82b3":"korrmattxcol=korrmattx.copy()\nkorrmattxcol=korrmattxcol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","ab9a3165":"korrmattxcol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","a90b970a":"NC = USA[USA.state=='NC']\nNC.head()","d9c96492":"WetterNC","970759ae":"WetterNC.rename(columns={\"date\": \"Date\"})\nWetterNC","b4944caa":"coronawetternc = pd.merge(WetterNC, NC, how='inner', on='date')\ncoronawetternc","6e1d4e9d":"coronawetternc.set_index('date')","5d0863fc":"coronawetternc2 = coronawetternc.copy()\ncoronawetternc2=coronawetternc2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","41ae8e0c":"coronawetternc3 = coronawetternc2.copy()\ncoronawetternc3=coronawetternc3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","3f11c3f9":"coronawetternc4 = coronawetternc3.copy()\ncoronawetternc4=coronawetternc4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawetternc4","e0f1c1fd":"sortedcoronawetternc = coronawetternc4.sort_values(by='date')\nsortedcoronawetternc","4a63c39d":"sortedcoronawetternc.info()","c1a1d8a6":"sortedcoronawetternc['date'] = sortedcoronawetternc['date'].astype(str)","a3be3f77":"sortedcoronawetternc.set_index('date', drop=True,inplace=True)\nsortedcoronawetternc.head()\n#sortedcoronawetternc","e42bb799":"sortedcoronawetternc.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","111d1dcd":"for i in range(14):\n    i=i-14\n    sortedcoronawetternc.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawetternc.positiveIncrease.shift(i)","2b2bad51":"sortedcoronawetternc.head()","c245f36c":"korrmatnc=sortedcoronawetternc.corr(method ='kendall')","8274fdab":"korrmatnc","023ad310":"korrmatnccol=korrmatnc.copy()\nkorrmatnccol=korrmatnccol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","0c03e741":"korrmatnccol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","16bd3238":"CO = USA[USA.state=='CO']\nCO.head()","b78d7fbf":"WetterCO","8c15d25e":"WetterCO.rename(columns={\"date\": \"Date\"})\nWetterCO","521926b1":"coronawetterco = pd.merge(WetterCO, CO, how='inner', on='date')\ncoronawetterco","de6c7c7a":"coronawetterco.set_index('date')","c7868b8d":"coronawetterco2 = coronawetterco.copy()\ncoronawetterco2=coronawetterco2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","9000adbe":"coronawetterco3 = coronawetterco2.copy()\ncoronawetterco3=coronawetterco3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","44d5ef5d":"coronawetterco4 = coronawetterco3.copy()\ncoronawetterco4=coronawetterco4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawetterco4","5d9eaf5c":"sortedcoronawetterco = coronawetterco4.sort_values(by='date')\nsortedcoronawetterco","045a123e":"sortedcoronawetterco.info()","4628553f":"sortedcoronawetterco['date'] = sortedcoronawetterco['date'].astype(str)","16d08dfd":"sortedcoronawetterco.set_index('date', drop=True,inplace=True)\nsortedcoronawetterco.head()\n#sortedcoronawetterco","d5f614e4":"sortedcoronawetterco.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","2baa6081":"for i in range(14):\n    i=i-14\n    sortedcoronawetterco.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawetterco.positiveIncrease.shift(i)","d5f678b5":"sortedcoronawetterco.head()","4d068d1f":"korrmatco=sortedcoronawetterco.corr(method ='kendall')","71d516a2":"korrmatco","3a3cf8bf":"korrmatcocol=korrmatco.copy()\nkorrmatcocol=korrmatcocol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","f5e247c9":"korrmatcocol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","f55f55ce":"FL = USA[USA.state=='FL']\nFL.head()","5ca6c160":"WetterFL","83808b37":"WetterFL.rename(columns={\"date\": \"Date\"})\nWetterFL","f86713bb":"coronawetterfl = pd.merge(WetterFL, FL, how='inner', on='date')\ncoronawetterfl","9957f60d":"coronawetterfl.set_index('date')","798d485b":"coronawetterfl2 = coronawetterfl.copy()\ncoronawetterfl2=coronawetterfl2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","09a3c2a5":"coronawetterfl3 = coronawetterfl2.copy()\ncoronawetterfl3=coronawetterfl3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","070bb9da":"coronawetterfl4 = coronawetterfl3.copy()\ncoronawetterfl4=coronawetterfl4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawetterfl4","42bb879b":"sortedcoronawetterfl = coronawetterfl4.sort_values(by='date')\nsortedcoronawetterfl","41d9b23d":"sortedcoronawetterfl.info()","50f4e6c2":"sortedcoronawetterfl['date'] = sortedcoronawetterfl['date'].astype(str)","725de179":"sortedcoronawetterfl.set_index('date', drop=True,inplace=True)\nsortedcoronawetterfl.head()\n#sortedcoronawetterfl","a0b6ad4b":"sortedcoronawetterfl.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","d95c47de":"for i in range(14):\n    i=i-14\n    sortedcoronawetterfl.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawetterfl.positiveIncrease.shift(i)","f44bbb49":"sortedcoronawetterfl.head()","0079a5d3":"korrmatfl=sortedcoronawetterfl.corr(method ='kendall')","a188a68d":"korrmatfl","7c73d061":"korrmatflcol=korrmatfl.copy()\nkorrmatflcol=korrmatflcol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","20799637":"korrmatflcol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","4383d77a":"AZ = USA[USA.state=='AZ']\nAZ.head()","53c390ca":"WetterAZ","df0ba6b0":"WetterAZ.rename(columns={\"date\": \"Date\"})\nWetterAZ","9c479c0e":"coronawetteraz = pd.merge(WetterAZ, AZ, how='inner', on='date')\ncoronawetteraz","e92f9546":"coronawetteraz.set_index('date')","71f166dc":"coronawetteraz2 = coronawetteraz.copy()\ncoronawetteraz2=coronawetteraz2.drop(columns=['pending','hospitalizedCurrently', 'negative', 'hospitalizedCumulative', 'inIcuCurrently','inIcuCumulative', 'onVentilatorCurrently', 'onVentilatorCumulative'])","0571b5af":"coronawetteraz3 = coronawetteraz2.copy()\ncoronawetteraz3=coronawetteraz3.drop(columns=['lastUpdateEt', 'hash', 'recovered', 'dataQualityGrade', 'dateChecked', 'death', 'hospitalized', 'totalTestResults', 'total', 'posNeg', 'fips', 'deathIncrease'])","31ca8f43":"coronawetteraz4 = coronawetteraz3.copy()\ncoronawetteraz4=coronawetteraz4.drop(columns=['hospitalizedIncrease', 'negativeIncrease', 'totalTestResultsIncrease'])\ncoronawetteraz4","4216d210":"sortedcoronawetteraz = coronawetteraz4.sort_values(by='date')\nsortedcoronawetteraz","c835eb14":"sortedcoronawetteraz.info()","07ea60d3":"sortedcoronawetteraz['date'] = sortedcoronawetteraz['date'].astype(str)","5242ec8b":"sortedcoronawetteraz.set_index('date', drop=True,inplace=True)\nsortedcoronawetteraz.head()\n#sortedcoronawetteraz","1c40f33b":"sortedcoronawetteraz.corr(method ='kendall')\n#korrelation zwischen -1 und 1\n#  1 -> korreliert\n#  0 -> kein Zusammenhang\n# -1 -> korreliert entgegengesetzt","5f683207":"for i in range(14):\n    i=i-14\n    sortedcoronawetteraz.loc[:,('positiveIncrease ' + str(i) + ' days after weather')] = sortedcoronawetteraz.positiveIncrease.shift(i)","428ed45e":"sortedcoronawetteraz.head()","f510ec06":"korrmataz=sortedcoronawetteraz.corr(method ='kendall')","16d34222":"korrmataz","b7931b6f":"korrmatazcol=korrmataz.copy()\nkorrmatazcol=korrmatazcol.drop(columns=['positiveIncrease -1 days after weather','positiveIncrease -2 days after weather', 'positiveIncrease -3 days after weather', 'positiveIncrease -5 days after weather', 'positiveIncrease -4 days after weather', 'positiveIncrease -6 days after weather', 'positiveIncrease -7 days after weather', 'positiveIncrease -8 days after weather', 'positiveIncrease -9 days after weather','positiveIncrease -10 days after weather','positiveIncrease -11 days after weather','positiveIncrease -12 days after weather','positiveIncrease -13 days after weather','positiveIncrease -14 days after weather', 'positive', 'positiveIncrease'])","698d4b43":"korrmatazcol.drop(['Avg Temperature in C', 'Avg Dew Point in C', 'Avg Humidity in Percent', 'Avg Wind Speed in mph', 'Avg Pressure in Hg', 'Precipitation' ])","3c589a4e":"# Zusammenhang zwischen Covid-19 und dem Wetter. Beeinflusst das Wetter die Covid-19-Ausbreitung ? Haben Temperatur \/ Niederschlags(mengen) Einfluss auf die Infektionen?.\n\nHypothese: H\u00f6here Niederschlagsmengen beeinflussen die Ausbreitung des Virus. Die Verbreitung durch die Luft wird durch den Niederschlag erschwert, au\u00dferdem halten sich bei schlechtem Wetter weniger Menschen im Freien auf. Das Infektionsrisiko wird vermindert. Au\u00dferdem beeinflusst die Durchschnittstemperatur eines Landes die Ausbreitung?.\n\nK\u00f6nnen wir die Wetterbedingungen und die Verbreitung des Corona-Virus durch Daten korrelieren? K\u00f6nnen wir diese Hypothese best\u00e4tigen, dass die Ausbreitung des Corona-Virus durch warmes Wetter verlangsamt wird?\n\nWir versuchen diese Frage zu beantworten.\n\n# Hinf\u00fchrung zum Thema\n\nCOVID-19 ist eine neue und unbekannte Virus-Krankheit. Alle Influenzaviren verbreiten sich rasend schnell in der Gesellschaft [1]. Unsere Forschung befasst sich mit der Ananlyse von Daten und Erstellung von Modellen, um unsere Arbeitshypothese zu beantworten.\n\nDass die Ausbreitung von herk\u00f6mmlichen Influenzaviren mit der Temperatur und der relativen Luftfeuchtigkeit zusammenh\u00e4ngt, ist bewiesen [2]. Der Einfluss der Temperatur und der relativen Luftfeuchtigkeit auf Covid-19 wird aktuell noch untersucht [3].\n\nCoronaviren geh\u00f6ren zur \"Familie\" der Viren, die bei Tieren oder Menschen Krankheiten verursachen k\u00f6nnen. Es ist bekannt, dass beim Menschen mehrere Coronaviren Infektionen der Atemwege verursachen, die von Erk\u00e4ltungen bis zu schwereren Erkrankungen wie dem Middle East Respiratory Syndrome (MERS) und dem Severe Acute Respiratory Syndrome (SARS) reichen. Das zuletzt entdeckte Coronavirus verursacht die Coronavirus-Krankheit COVID-19 [4]. Das Virus wird mit Sars-CoV-2 bezeichnet, die dadurch ausgel\u00f6ste Krankheit wird als Covid-19 bezeichnet [5].\n\n# \u00dcbertragungswege\n\n### Infektion durch Tr\u00f6pfchen\n\nNach aktuellen Studien ist die Tr\u00f6pfcheninfektion der Haupt\u00fcbertragungsweg von Sars-Cov-2. Diese Tr\u00f6pfchen entstehen beispielsweise beim Niesen, oder beim Husten und werden von anderen Personen \u00fcber die Schleimh\u00e4ute, Nase oder den Mund aufgenommen [6].\n\n### Aerosole\n\nAerosole sind Tr\u00f6pfchenkerne, die kleiner als 5 Mikrometer sind. Bei mehreren Studien wurde aufgezeigt, dass sich in der Ausatmeluft, oder in Zimmern von Betroffenen Sars-Cov-2-Viren gibt[7-9].Durch das Tragen von chirugischen Masken (FFP3) kann eine Ausbreitung von Sars-Cov-2 haltigen Aerosolen verhindert werden[10]. Durch lautes Sprechen k\u00f6nnen ebenfalls Aerosole entstehen, die das Virus \u00fcbertragen k\u00f6nnen.[11].\n\n### \u00dcbertragung durch Kontakt\n\nDie \u00dcbertragung des Virus \u00fcber kontaminierte Oberfl\u00e4chen ist nicht auszuschlie\u00dfen, vorallem nicht in unmittelbarer N\u00e4he von bereits infizierten Personen. Sars-Cov-2 Viren k\u00f6nnen in der Umwelt und auf Oberfll\u00e4chen nachgewisen werden[12].Auch im Stuhl von Covid-19 Infizierten kann das Virus postitiv nachgewisen werden[13].\n\n### \u00dcbertragung w\u00e4hrend der Schwangerschaft\n\nZum aktuellem Zeitpunkt kann eine \u00dcbertragung des Erregers von einer Infizierten Mutter auf das ungeborene Kind nicht ausgeschlossen werden[14]. Jedoch sind bei den aller meisten F\u00e4llen die Kinder bei der Geburt negativ auf den Erreger und zeigen keinerlei Krankheitsanzeichen[15]. Bei einem postivien Fall findet die \u00dcbertragung \u00fcber Tr\u00f6pfcheninfektionen statt[16].\n\n### Gesundheitssektor\n\nDer Gesundheitssektor besitzt ein hohes Infektionsrisiko, da es hier viele \u00dcbertragungsm\u00f6glichkeiten gibt. Vorallem in disem Sektor m\u00fcssen die Ma\u00dfnahmen zum Eigenschutz sichergestellt werden. Das h\u00f6chste Risiko sind Vorg\u00e4nge bei denen Aerosole ausgesto\u00dfen werden, wie z.B. zahn\u00e4rztliche Untersuchungen, weil hier viel Speichel ausgesto\u00dfen wird. Oder auch Intubationen im Krankenhaus, weil auch hier viel im Mund und Rachenbereich gearbeitet wird. Die arbeitenden Personen sch\u00fctzen sich mit spezillen Atemschutzmasken, um eine Gefahr, mit der Ansteckung so gering wie m\u00f6glich zu halten [17].\n\n\n## Quellen\n\n[1] Wang M. et al. Temperature significant change COVID-19 Transmission in 429 cities \/\/medRxiv. \u2013 2020. \n[2] Lowen AC, Mubareka S, Steel J, Palese P (2007) Influenza virus transmission is dependent on relative humidity and temperature. PLoS Pathog 3(10): e151. doi:10. 1371\/journal.ppat.0030151 \n[3] Bu J. et al. Analysis of meteorological conditions and prediction of epidemic trend of 2019-nCoV infection in 2020 \/\/medRxiv. \u2013 2020. \n[4] WHO:https:\/\/www.who.int\/emergencies\/diseases\/novel-coronavirus-2019\/question-and-answers-hub\/q-a-detail\/q-a-coronaviruses \n[5] https:\/\/www.rnd.de\/gesundheit\/was-ist-das-coronavirus-unterschied-zwischen-covid-19-und-sars-cov-2-LCF3ECTAPFB3PJJAIWZBHDKCPA.html \n[6] CDC. How COVID-19 Spreads: Centers for Disease Control and Prevention (CDC); 2020 [updated February 17, 2020. Available from: https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/about\/transmission.html. \n[7] Chia PY, Coleman KK, Tan YK, Ong SWX, Gum M, Lau SK, et al. Detection of Air and Surface Contamination by Severe Acute Respiratory Syndrome Coronavirus 2 (SARS-CoV-2) in Hospital Rooms of Infected Patients. medRxiv. 2020. \n[8] Santarpia JL, Rivera DN, Herrera V, Morwitzer MJ, Creager H, Santarpia GW, et al. Transmission Potential of SARS-CoV-2 in Viral Shedding Observed at the University of Nebraska Medical Center. medRxiv. 2020. \n[9] Liu Y, Ning Z, Chen Y, Guo M, Liu Y, Gali NK, et al. Aerodynamic analysis of SARS-CoV-2 in two Wuhan hospitals. Nature. 2020:1-6. \n[10] Leung NH, Chu DK, Shiu EY, Chan K-H, McDevitt JJ, Hau BJ, et al. Respiratory virus shedding in exhaled breath and efficacy of face masks. Nature medicine. 2020:1-5. [11] Asadi S, Wexler AS, Cappa CD, Barreda S, Bouvier NM, Ristenpart WD. Aerosol emission and superemission during human speech increase with voice loudness. Sci Rep. 2019;9(1):2348.\n[12] European Centre for Disease Prevention and Control (ECDC). Factsheet for health professionals on Coronaviruses European Centre for Disease Prevention and Control; 2020 [Available from: https:\/\/www.ecdc.europa.eu\/en\/factsheet-health-professionals-coronaviruses.\n[13] Xiao F, Tang M, Zheng X, Li C, He J, Hong Z, et al. Evidence for gastrointestinal infection of SARS-CoV-2. MedRxiv. 2020. \n[14] Dong L, Tian J, He S, Zhu C, Wang J, Liu C, et al. Possible Vertical Transmission of SARS-CoV-2 From an Infected Mother to Her Newborn. Jama. 2020. \n[15] Zeng H, Xu C, Fan J, Tang Y, Deng Q, Zhang W, et al. Antibodies in Infants Born to Mothers With COVID-19 Pneumonia. Jama. 2020. \n[16] Zeng L, Xia S, Yuan W, Yan K, Xiao F, Shao J, et al. Neonatal Early-Onset Infection With SARS-CoV-2 in 33 Neonates Born to Mothers With COVID-19 in Wuhan, China. JAMA pediatrics. 2020. \n[17] https:\/\/www.rki.de\/DE\/Content\/InfAZ\/N\/Neuartiges_Coronavirus\/Steckbrief.html\n\nIn diesem Notebook zeigen wir, wie Wetterdaten in Bezug auf die Datenananalyse und die Vorhersage der Ausbreitung von Covid-19 verwendet werden k\u00f6nnen.\n\nDie Wetterdaten stammen von: https:\/\/www.wunderground.com\/\n","e655ec2c":"## Bundesstaat Florida","cb98074c":"weitere States der USA werden stichprobenartig ausgesucht, dann wird die Gesamtheit der Daten auf Korrelationen untersucht.\n\nIn weiteren Notebooks sind weitere m\u00f6gliche Zusammenh\u00e4nge ermittelt. \n -Zusammenhang zwischen der Reproduktionszahl und dem Wetter\n -Zusammenhang zwischen Bewegungsdaten, Wetter und Covid-19","48e08d9e":"## Weitere Vorgehensweise","88f5eca7":"# Aufsplittung der Daten in die verschiedenen Bundesstaaten der USA","a69ec6f2":"selbe Vorgehensweise wie f\u00fcr New York","5914e586":"# Bundesstaat Kalifornien (Stadt Los Angeles)","b6ebc655":"# USA\nDie Stadt New York City steht weltweit im Fokus, weil es hier die meisten Infizierten in den USA momentan gibt.","74f96767":"## Bundesstaat North Carolina","ce93162c":"## Bundesstaat Colorado","f4c3265c":"## Bundesstaat Texas","fdd40326":"NY steht f\u00fcr den Bundesstaat New York","6bc84509":"h\u00f6chste Korrelation bei Luftdruck, allerdings ist der Wert dennoch zu niedrig, um von einer Korrelation auszugehen.","7ab7e085":"## Einlesen der Wetterdaten f\u00fcr weitere US Bundesstaaten","8c72f79d":"auch hier zun\u00e4chst keine Korrelation ersichtlich","2c59c012":"## Bundesstaat Arizona"}}