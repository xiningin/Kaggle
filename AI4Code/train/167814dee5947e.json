{"cell_type":{"180f40b1":"code","65f01a47":"code","2d155fba":"code","c5410888":"code","27e6fc64":"code","c6e4bc9c":"code","aba74266":"code","26b179a0":"code","20da28c6":"code","ffccb0ac":"code","8d1afc60":"code","ea3c93a8":"code","e060476a":"code","ea331756":"code","8db71643":"code","bf2abcd1":"code","82291abf":"code","dbcdb520":"code","c86d7c60":"code","c73e6509":"code","2c69ba4c":"code","1b38a569":"code","1a8b9ce2":"code","06fe8936":"code","8c476e59":"code","81aaaae6":"code","8eade5b3":"code","c83c0d49":"code","788d5761":"code","e25eeb59":"code","fa484d35":"code","aacb9349":"code","8edaa9ee":"code","f8de7089":"code","87aab491":"code","4d86a088":"code","3738973b":"code","95616502":"code","76e001af":"code","ea4612a3":"code","d07ff7f2":"code","b274a9d4":"code","4284320e":"code","b7b4e143":"code","beddd921":"markdown","f3992aa4":"markdown","6a44e70a":"markdown","709d86f5":"markdown","40896433":"markdown","e7fabf0d":"markdown","3f32a4d2":"markdown","734c4efa":"markdown","ad8ecd94":"markdown","e8d5da2b":"markdown","b453ac55":"markdown","4f60a3eb":"markdown","cfddcd48":"markdown","2867182d":"markdown","1f5ec1cd":"markdown","5fb3a99c":"markdown","c776f606":"markdown","f9a812ae":"markdown","676eda69":"markdown","99ac5dd8":"markdown","ca82cd91":"markdown","a15ddea0":"markdown","f4c9a541":"markdown","7280cc2d":"markdown","b15dbecb":"markdown","aaaf03dc":"markdown"},"source":{"180f40b1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nfrom io import StringIO\nimport cufflinks\nimport plotly.graph_objs as go","65f01a47":"%matplotlib inline\ninit_notebook_mode(connected=True)\nsns.set_style('whitegrid')\ncufflinks.go_offline()\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2d155fba":"me = pd.read_csv('..\/input\/military-expenditure-of-countries-19602019\/Military Expenditure.csv')","c5410888":"me.head()","27e6fc64":"me.info()","c6e4bc9c":"a = me[me.columns[4:]]<0\ns = a.any(1)\ns[s==True]","aba74266":"me.fillna(value=0,inplace=True)","26b179a0":"data = me[me['Type'].apply(lambda x: x in ['Country'])] \\\n.drop(['Code','Type','Indicator Name'],axis=1).set_index('Name')","20da28c6":"plt.figure(figsize=(14,8))\nsns.heatmap(data)","ffccb0ac":"top10 = data.sum(axis=1).sort_values(ascending=False)[:10]\ndata_index = top10.index\ndata_top10 = data.loc[data_index.tolist()]","8d1afc60":"plt.figure(figsize=(14,8))\nsns.heatmap(data_top10)","ea3c93a8":"data_top10.transpose().iplot(kind='line')","e060476a":"data.reindex(['Canada','Brazil', 'Mexico']).transpose().iplot(kind='line')","ea331756":"sea=['Brunei Darussalam', 'Cambodia', 'Indonesia', 'Laos', 'Malaysia', 'Myanmar', 'Philippines', \n     'Singapore', 'Thailand', 'Timor-Leste', 'Vietnam']\ndata_sea = data.reindex(sea)","8db71643":"top_sea = data_sea.sum(axis=1).sort_values(ascending=False)\ntop_sea.iplot(kind='bar')","bf2abcd1":"data_sea.transpose().iplot(kind='line')","82291abf":"wp = pd.read_csv('..\/input\/world-population\/World Population.csv')","dbcdb520":"wp.drop(['Series Name','Series Code','2019 [YR2019]'],axis=1,inplace=True)","c86d7c60":"wp.head()","c73e6509":"wp.tail(10)","2c69ba4c":"wp.drop(wp.index[264:],inplace=True)","1b38a569":"wp.info()","1a8b9ce2":"for i in wp.columns[2:]:\n    wp[i] = pd.to_numeric(wp[i], errors='coerce')","06fe8936":"wp.info()","8c476e59":"wp.rename({'Country Name':'Name','Country Code':'Code'},axis=1,inplace=True)","81aaaae6":"def checkCol(df1,df2,colname):\n    diff=[]\n    c1= df1[colname].tolist()\n    c2= df2[colname].tolist()\n    for i in range(len(c1)):\n        if c1[i] not in c2:\n            diff.append(c1[i])\n    return diff","8eade5b3":"checkCol(me,wp,'Name')","c83c0d49":"checkCol(me,wp,'Code')","788d5761":"t1 = me.sort_values('Code').drop(['Name','Code','Type','Indicator Name'],axis=1)\nt2 = wp.sort_values('Code').drop(['Name','Code'],axis=1)\nt2.columns = t1.columns","e25eeb59":"perCapita = t1\/t2","fa484d35":"perCapita = pd.concat([me[['Name','Code','Type']],perCapita],axis=1)","aacb9349":"perCapita.fillna(value=0,inplace=True)","8edaa9ee":"dperCapital = perCapita[perCapita['Type'].apply(lambda x: x in ['Country'])] \\\n.drop(['Code','Type'],axis=1).set_index('Name')\ntop10_perCapital = dperCapital.sum(axis=1).sort_values(ascending=False)[:10]\ndata_index = top10_perCapital.index\ndata_top10_perCapital = dperCapital.loc[data_index.tolist()]","f8de7089":"plt.figure(figsize=(14,8))\nsns.heatmap(data_top10_perCapital)","87aab491":"data_top10_perCapital.transpose().iplot(kind='line')","4d86a088":"x = me[me['Type'].apply(lambda x: x in ['Country'])][['Name','Code','Type','2018']]","3738973b":"y = perCapita[perCapita['Type'].apply(lambda x: x in ['Country'])][['2018']]","95616502":"y.columns=['per Capital 2018']","76e001af":"datamap = pd.concat([x, y],axis=1)","ea4612a3":"datamap['per Capital 2018'] = round(datamap['per Capital 2018'],2).astype(str)","d07ff7f2":"datamap['Text'] = datamap['Name'] + '<br>' + \\\n    'per Capital 2018: $' + datamap['per Capital 2018']","b274a9d4":"datamap = datamap[datamap['Code'].apply(lambda x: x not in ['USA','CHN'])]","4284320e":"data = dict (type='choropleth',\n            locations= datamap['Code'],\n            z = datamap['2018'],\n            text = datamap['Text'],\n            marker_line_color='darkgray',\n            marker_line_width=0.5,\n            colorbar_tickprefix = '$',\n            colorbar = {'title' : 'Military Expenditure Total'}\n            )\n\nlayout = dict (title = '2018 Global Military Expenditure',\n               geo = dict (showframe = True,\n                           scope='world',\n                          projection = {'type':'equirectangular'}),\n              )","b7b4e143":"choromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","beddd921":"Let have a quick check the data","f3992aa4":"Do you notice any abnormal things?","6a44e70a":"Thank you so much. I will improve this later","709d86f5":"Now I am living in Canada so I will check the amount of money for soldier in North America. But the US is an outliner so I will pick another country in the South of America, Brazil","40896433":"Well, there are some differences in Name between 2 dataset, let check the code","e7fabf0d":"<p>If you remove USA from the list, China has just put a lot of the money to military since 2005 and in 2007 it became the 2nd country that have the most military expenditure<\/p>\n<p>Regarding the rest, I noticed Russia and Saudi Arabia, They started at the bottom level and now in the top 10 of the World <\/p>\n<p> Hold on Russian started to invest on military in 1991? May be in the past its name was Soviet,let me check later<\/p>","3f32a4d2":"I got the perCapita now. Let visualize it:","734c4efa":"# Expenditure per Capital","ad8ecd94":"all of number are in type of string. Let convert it to number and errors='coerce' is to transform the non-numeric values into NaN","e8d5da2b":"After seeing the graph, I immediately checked the political of Myanmar in 2006. They experienced a tough time (you can google about it)","b453ac55":"<p> We can see that the US has invested a large amount of money into Military, followed by Brazil <\/p>\n<p> Let figure out Top 10 country in Military Expenditure <\/p>","4f60a3eb":"**Clean data**","cfddcd48":"Yes, if we count only 2018, Brazil will be in Top 10 of the World. Before this, I just expected Canada didn't invest much money for military (but I was wrong, 21B is a quite large number)","2867182d":"I don't need these columns","1f5ec1cd":"I found a dataset about World Population, let calculate the Expenditure per Capital","5fb3a99c":"There are a lot of NA in this dataset, I will check whether there is any negative number. If not, I will fillna with 0","c776f606":"I choose to show the most recent numbers (in 2018) to Map","f9a812ae":"There are some rows with no data","676eda69":"I remove USA and China because they have a really large of number and will affect the color scale. Better to remove them","99ac5dd8":"Ok, my home country is Vietnam so let check the situation in South East Asia","ca82cd91":"<p> OK I think heatmap is not good in this situation, let try in linegraph<\/p>\n<p> So top 10 in the world: USA, China, France, UK, Germany, Japan, Saudi Arabia, Russian Federation, India and Italy<\/p>\n<p> Where is Brazil :-?<\/p>","a15ddea0":"I think it's ok now.\n<p> Let rename the columns 1 2 to be the same as columns in dataframe ME <\/p>","f4c9a541":"# Visualize to World map","7280cc2d":"Now, I will try to devide me to wp to get per Capita. But I need to check the order of data. I suppost I will order by Name","b15dbecb":"<p>Ok, so now I will only want to see the Data with Country Name and Type = Country. <\/p>\n<p> I will set the index to Country Name to visualize it on graph <\/p>","aaaf03dc":"Wonderful, so I will order by Country Code:"}}