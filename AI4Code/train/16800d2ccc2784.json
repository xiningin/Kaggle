{"cell_type":{"2eeced7e":"code","9e5486be":"code","481fc902":"code","6693a8eb":"code","0cb67990":"code","d4dfe2e7":"code","a117440e":"code","a72c3c12":"code","5744aec2":"code","8583808e":"code","d5f4dd25":"code","f032a834":"code","c6a38f7a":"code","aa6141d1":"code","57eb4119":"code","ae6dd5a0":"code","82405de0":"code","e93bfd86":"code","bc6d04fe":"code","bc8e57b4":"code","61115da9":"code","fc3ca674":"code","41b9457c":"code","f3c5965c":"code","b936d25a":"code","c24eb6b5":"code","47d8ff42":"code","56ee0536":"code","2fc1cfb1":"code","ac229572":"code","84c41207":"code","d0b4dc87":"code","d535358b":"code","89241072":"code","7782aa5b":"code","c93d2ec9":"code","30122b17":"code","dc46f7f7":"code","82890ed8":"code","2bf3d122":"code","5c5b793d":"code","87d6d46e":"code","bb5aefa0":"code","6137bc39":"code","4b23cb8b":"code","cddcd098":"code","453305b5":"code","7a2bbd71":"markdown","7c0591bf":"markdown","442a9e65":"markdown","3bde4af7":"markdown","9f50fd90":"markdown","b35bb6e0":"markdown","69cb4616":"markdown","58dc9a36":"markdown","7c46c19c":"markdown","1bfe4521":"markdown","dacff81c":"markdown","8c85fa52":"markdown","0bde8ee2":"markdown","5d87e233":"markdown"},"source":{"2eeced7e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom scipy import stats\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9e5486be":"data = pd.read_csv(\"\/kaggle\/input\/associativeinference\/Associative Inference.csv\")","481fc902":"data.head(5)","6693a8eb":"data.columns","0cb67990":"age_group = data[[\"AgeGroup\", \"AB1-BC1\"]]\nage_group.head()\n\ngrouped = age_group.groupby('AgeGroup', as_index=False)\nsummary = grouped.mean()\nsummary\n\ntemp = grouped.describe()[\"AB1-BC1\"][[\"count\", 'std']]\ntemp\n\nsummary[\"std_err\"] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])\nsummary = summary.reindex([1,0,3,2])\n\nfig = px.bar(summary, x=\"AgeGroup\", y=\"AB1-BC1\", error_y=\"std_err\", width=500, title=\"AB1-BC1\")\nfig.show()","d4dfe2e7":"age_group = data[[\"AgeGroup\", 'AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4', \n                  'BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']]\nage_group.head()\n\ngrouped = age_group.groupby('AgeGroup', as_index=False)\nsummary = grouped.mean()\nsummary\n\ncol_names = ['AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4', 'BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']\n\n\n# add standard error for each accuracy\nfor name in col_names:\n    temp = grouped.describe()[name][[\"count\", 'std']]\n    summary[\"se_\" + name[:2] + name[-1]] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])\n    \n# get AB, BC values from AgeGroup\nchild_AB = summary[summary[\"AgeGroup\"] == \"child\"][['AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4']].values[0]\nchild_BC = summary[summary[\"AgeGroup\"] == \"child\"][['BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']].values[0]\n\nado_AB = summary[summary[\"AgeGroup\"] == \"adolescent\"][['AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4']].values[0]\nado_BC = summary[summary[\"AgeGroup\"] == \"adolescent\"][['BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']].values[0]\n\ny_adl_AB = summary[summary[\"AgeGroup\"] == \"younger adult\"][['AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4']].values[0]\ny_adl_BC = summary[summary[\"AgeGroup\"] == \"younger adult\"][['BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']].values[0]\n\no_adl_AB = summary[summary[\"AgeGroup\"] == \"older adult\"][['AB_acc_1', 'AB_acc_2', 'AB_acc_3', 'AB_acc_4']].values[0]\no_adl_BC = summary[summary[\"AgeGroup\"] == \"older adult\"][['BC_acc_1', 'BC_acc_2', 'BC_acc_3', 'BC_acc_4']].values[0]\n\n# get standard error for AB, BC values from AgeGroup\nchild_AB_se = summary[summary[\"AgeGroup\"] == \"child\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nchild_BC_se = summary[summary[\"AgeGroup\"] == \"child\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nado_AB_se = summary[summary[\"AgeGroup\"] == \"adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nado_BC_se = summary[summary[\"AgeGroup\"] == \"adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\ny_adl_AB_se = summary[summary[\"AgeGroup\"] == \"younger adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\ny_adl_BC_se = summary[summary[\"AgeGroup\"] == \"younger adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\no_adl_AB_se = summary[summary[\"AgeGroup\"] == \"older adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\no_adl_BC_se = summary[summary[\"AgeGroup\"] == \"older adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\n\n# make 2x2 subplots\nfig = make_subplots(rows=2, cols=2,\n                    subplot_titles=(\"Children\", \"Adolescent\", \"Younger Adults\", \"Older Adults\"))\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=child_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=child_AB_se)),  row=1, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=child_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=child_BC_se)),row=1, col=1)   \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ado_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=ado_AB_se)),row=1, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ado_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=ado_BC_se)),row=1, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=y_adl_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=y_adl_AB_se)),row=2, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=y_adl_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=y_adl_BC_se)),row=2, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=o_adl_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=o_adl_AB_se)),row=2, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=o_adl_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=o_adl_BC_se)),row=2, col=2)  \n\nfig.update_layout(width=850, height=600)\nfig.show()","a117440e":"age_group = data[[\"AgeGroup\", 'AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4', \n                  'BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']]\nage_group.head()\n\ngrouped = age_group.groupby('AgeGroup', as_index=False)\nsummary = grouped.mean()\nsummary\n\ncol_names = ['AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4', 'BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']\n\n\n# add standard error for each accuracy\nfor name in col_names:\n    temp = grouped.describe()[name][[\"count\", 'std']]\n    summary[\"se_\" + name[:2] + name[-1]] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])\n    \n# get AB, BC values from AgeGroup\nchild_AB = summary[summary[\"AgeGroup\"] == \"child\"][['AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4']].values[0]\nchild_BC = summary[summary[\"AgeGroup\"] == \"child\"][['BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']].values[0]\n\nado_AB = summary[summary[\"AgeGroup\"] == \"adolescent\"][['AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4']].values[0]\nado_BC = summary[summary[\"AgeGroup\"] == \"adolescent\"][['BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']].values[0]\n\ny_adl_AB = summary[summary[\"AgeGroup\"] == \"younger adult\"][['AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4']].values[0]\ny_adl_BC = summary[summary[\"AgeGroup\"] == \"younger adult\"][['BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']].values[0]\n\no_adl_AB = summary[summary[\"AgeGroup\"] == \"older adult\"][['AB_rt_1', 'AB_rt_2', 'AB_rt_3', 'AB_rt_4']].values[0]\no_adl_BC = summary[summary[\"AgeGroup\"] == \"older adult\"][['BC_rt_1', 'BC_rt_2', 'BC_rt_3', 'BC_rt_4']].values[0]\n\n# get standard error for AB, BC values from AgeGroup\nchild_AB_se = summary[summary[\"AgeGroup\"] == \"child\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nchild_BC_se = summary[summary[\"AgeGroup\"] == \"child\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nado_AB_se = summary[summary[\"AgeGroup\"] == \"adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nado_BC_se = summary[summary[\"AgeGroup\"] == \"adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\ny_adl_AB_se = summary[summary[\"AgeGroup\"] == \"younger adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\ny_adl_BC_se = summary[summary[\"AgeGroup\"] == \"younger adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\no_adl_AB_se = summary[summary[\"AgeGroup\"] == \"older adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\no_adl_BC_se = summary[summary[\"AgeGroup\"] == \"older adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\n\n# make 2x2 subplots\nfig = make_subplots(rows=2, cols=2,\n                    subplot_titles=(\"Children\", \"Adolescent\", \"Younger Adults\", \"Older Adults\"))\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=child_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=child_AB_se)),  row=1, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=child_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=child_BC_se)),row=1, col=1)   \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ado_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=ado_AB_se)),row=1, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ado_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=ado_BC_se)),row=1, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=y_adl_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=y_adl_AB_se)),row=2, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=y_adl_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=y_adl_BC_se)),row=2, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=o_adl_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=o_adl_AB_se)),row=2, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=o_adl_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=o_adl_BC_se)),row=2, col=2)  \n\nfig.update_layout(width=850, height=600)\nfig.show()","a72c3c12":"# create a copy of data\ndata_new = data.copy()\ndata_new[\"AB_acc_4_T\"] = data[\"AB_acc_4\"] == 1\ndata_new[\"AB_acc_4_T\"] = data_new[\"AB_acc_4_T\"].apply(lambda x: \"correct\" if x else \"incorrect\")","5744aec2":"data_new[\"AB_acc_4_T\"].value_counts()","8583808e":"data_new[data_new[\"AB_acc_4_T\"] == \"correct\"][[\"BC_acc_4\"]].describe()","d5f4dd25":"data_new[data_new[\"AB_acc_4_T\"] == \"incorrect\"][[\"BC_acc_4\"]].describe()","f032a834":"fig = px.histogram(data_new, x=\"BC_acc_4\", color=\"AB_acc_4_T\", marginal=\"rug\", barmode=\"overlay\", \n                   width=700, title=\"BC_acc_4 distribution between AB_acc_4 = 1 or not 1\")\nfig.show()","c6a38f7a":"data_new = data.copy()\ndata_new[\"BC1-AC\"] = data_new['BC_acc_1'] - data_new['AC_acc']\n\nage_group = data_new[[\"AgeGroup\", \"BC1-AC\"]]\nage_group.head()\n\ngrouped = age_group.groupby('AgeGroup', as_index=False)\nsummary = grouped.mean()\n\ntemp = grouped.describe()[\"BC1-AC\"][[\"count\", 'std']]\ntemp\n\nsummary[\"std_err\"] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])\nsummary = summary.reindex([1,0,3,2])\nprint(summary)\n\nfig = px.bar(summary, x=\"AgeGroup\", y=\"BC1-AC\", error_y=\"std_err\", width=500, title=\"(BC rep1 - AC rep1) x Age\")\nfig.show()","aa6141d1":"def age_ac_plot(x, y, gender):\n    slope, intercept, r_value, p_value, std_err = stats.linregress(x,y)\n    line = slope * x + intercept\n\n    trace1 = go.Scatter(\n                      x=x,\n                      y=y,\n                      mode='markers',\n                      name=gender\n                      )\n    trace2 = go.Scatter(\n                      x=x,\n                      y=line,\n                      mode='lines',\n                      name='regression line',\n                      )\n    \n    traces = [trace1, trace2]\n    fig = go.Figure(data=traces)\n    fig.update_layout(width=700)\n    fig.update_layout(title_text=f'R^2 = {r_value*r_value:.3f}, p={p_value:.4f}', \n                      xaxis_title=\"Age\",\n                      yaxis_title=\"AC conditional accuracy\")\n    fig.show();","57eb4119":"older_data = data[data[\"Age\"] >= 60 ]\n\nolder_m_data = older_data[older_data[\"Sex\"] == \"M\"]\nolder_f_data = older_data[older_data[\"Sex\"] == \"F\"]\n\nyoung_data = data[data[\"Age\"] < 60 ]\n\nyoung_m_data = young_data[young_data[\"Sex\"] == \"M\"]\nyoung_f_data = young_data[young_data[\"Sex\"] == \"F\"]","ae6dd5a0":"fig = px.scatter(older_data, x=\"Age\", y=\"AC_acc\", width=600, color=\"Sex\")\nfig.update_layout(title_text=\"AC_acc of older people\")\nfig.show()","82405de0":"age_ac_plot(older_data[\"Age\"], older_data[\"AC_acc\"], \"Male + Female\")","e93bfd86":"age_ac_plot(older_m_data[\"Age\"], older_m_data[\"AC_acc\"], \"Male\")","bc6d04fe":"age_ac_plot(older_f_data[\"Age\"], older_f_data[\"AC_acc\"], \"Female\")","bc8e57b4":"fig = px.scatter(young_data, x=\"Age\", y=\"AC_acc\", width=600, color=\"Sex\")\nfig.update_layout(title_text=\"AC_acc of young people\") \nfig.show()","61115da9":"age_ac_plot(young_data[\"Age\"], young_data[\"AC_acc\"], \"Male + Female\")","fc3ca674":"age_ac_plot(young_m_data[\"Age\"], young_m_data[\"AC_acc\"], \"Male\")","41b9457c":"age_ac_plot(young_f_data[\"Age\"], young_f_data[\"AC_acc\"], \"Female\")","f3c5965c":"data.columns","b936d25a":"data_new = data.copy()\ndata_new[\"is_ac_old_rt\"] = data[\"Age\"] >= 60\n\nfig = px.histogram(data_new, x=\"AC_rt\", color=\"is_ac_old_rt\", marginal=\"rug\", barmode=\"overlay\", \n                   width=700, title=\"AC reaction time between young and old\")\nfig.show()","c24eb6b5":"#Create a boxplot\ndata_new.boxplot(\"AC_rt\", by=\"is_ac_old_rt\", figsize=(10, 6));","47d8ff42":"# Anova\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\nmod = ols('AC_rt ~ is_ac_old_rt', data=data_new).fit()\n                \naov_table = sm.stats.anova_lm(mod, typ=2)\naov_table","56ee0536":"files = [\"\/kaggle\/input\/abbcac-rt\/AB_final_rt.csv\",\n         \"\/kaggle\/input\/abbcac-rt\/BC_final_rt.csv\",\n         \"\/kaggle\/input\/abbcac-rt\/AC_rt.csv\"]","2fc1cfb1":"def rt_by_acc(file):\n    \n    AB_final = pd.read_csv(file)\n    AB_final[\"RT_z\"] = 0\n\n    for idx in AB_final['sub'].unique():\n        sub_rt = AB_final[AB_final[\"sub\"] == idx][\"RT\"]\n        sub_mean = np.mean(AB_final[AB_final[\"sub\"] == idx][\"RT\"])\n        sub_std = np.std(AB_final[AB_final[\"sub\"] == idx][\"RT\"])\n        sub_zs = (sub_rt - sub_mean) \/ sub_std\n        AB_final.loc[AB_final[\"sub\"] == idx, \"RT_z\"] = sub_zs\n\n    AB_final_r = AB_final[AB_final[\"isCorrect\"] == 1]\n    AB_final_w = AB_final[AB_final[\"isCorrect\"] == 0]\n\n\n    fig = make_subplots(rows=1, cols=2)\n\n    trace1 = go.Histogram(x=AB_final_r[\"RT_z\"], name=\"correct\")\n    trace2 = go.Histogram(x=AB_final_w[\"RT_z\"], nbinsx=10, name=\"incorrect\")\n\n    fig.append_trace(trace1, 1, 1)\n    fig.append_trace(trace2, 1, 2)\n\n\n    fig.update_layout(title_text=f'{file[24:26]}_final reaction time by accuracy', \n                      xaxis_title=\"Z-score\")\n\n    fig.show()\n    \n    print(\"Average reaction time if answer correctly:\", np.round(np.mean(AB_final_r[\"RT_z\"]), 4))\n    print(\"Average reaction time if answer incorrectly:\", np.round(np.mean(AB_final_w[\"RT_z\"]), 4))\n\n    mod = ols('RT_z ~ isCorrect', data=AB_final).fit()                \n    aov_table = sm.stats.anova_lm(mod, typ=2)\n    print(aov_table)","ac229572":"rt_by_acc(files[0])","84c41207":"rt_by_acc(files[1])","d0b4dc87":"rt_by_acc(files[2])","d535358b":"def rt_by_age(file):\n    \n    AB_final = pd.read_csv(file)\n    \n    sub_rt = AB_final[\"RT\"]\n    sub_mean = np.mean(AB_final[\"RT\"])\n    sub_std = np.std(AB_final[\"RT\"])\n    sub_zs = (sub_rt- sub_mean) \/ sub_std\n    AB_final[\"RT_z\"] = sub_zs\n\n    \n    AB_final_child = AB_final[AB_final[\"ageGroup\"] == \"child\"]\n    AB_final_young = AB_final[AB_final[\"ageGroup\"] == 'young adult']\n    AB_final_ado = AB_final[AB_final[\"ageGroup\"] == 'adolescent']\n\n    \n    fig = make_subplots(rows=1, cols=3)\n\n    trace1 = go.Histogram(x=AB_final_child[\"RT_z\"], name=\"child\")\n    trace2 = go.Histogram(x=AB_final_young[\"RT_z\"], name=\"young adult\")\n    trace3 = go.Histogram(x=AB_final_ado[\"RT_z\"], name=\"adolescent\")\n\n\n    fig.append_trace(trace1, 1, 1)\n    fig.append_trace(trace2, 1, 2)\n    fig.append_trace(trace3, 1, 3)\n\n\n    fig.update_layout(title_text=f'{file[24:26]}_final reaction time by age', \n                      xaxis_title=\"Z-score\")\n\n    fig.show()\n    \n    print(\"Average reaction time of child:\", np.round(np.mean(AB_final_child[\"RT_z\"]), 4))\n    print(\"Average reaction time of young adults:\", np.round(np.mean(AB_final_young[\"RT_z\"]), 4))\n    print(\"Average reaction time of adolescent:\", np.round(np.mean(AB_final_ado[\"RT_z\"]), 4))\n\n    mod = ols('RT_z ~ ageGroup', data=AB_final).fit()                \n    aov_table = sm.stats.anova_lm(mod, typ=2)\n    print(aov_table)","89241072":"rt_by_age(files[0])","7782aa5b":"rt_by_age(files[1])","c93d2ec9":"rt_by_age(files[2])","30122b17":"df = pd.read_csv(\"\/kaggle\/input\/summer-data\/trailbytrail.csv\")","dc46f7f7":"df[\"ageGroup3\"].unique()","82890ed8":"df = pd.read_csv(\"\/kaggle\/input\/summer-data\/trailbytrail.csv\")\nage_group = df[[\"ageGroup3\", 'AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc', \n                'BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc', \"AC_acc\"]]\nage_group.head()\n\ngrouped = age_group.groupby('ageGroup3', as_index=False)\nsummary = grouped.mean()\nsummary\n\ncol_names = ['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc', 'BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc', \"AC_acc\"]\n\n\n# add standard error for each accuracy\nfor name in col_names:\n    temp = grouped.describe()[name][[\"count\", 'std']]\n    summary[\"se_\" + name[:3]] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])   \n\n\n# get AB, BC values from AgeGroup\nyc_AB = summary[summary[\"ageGroup3\"] == \"younger children\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\nyc_BC = summary[summary[\"ageGroup3\"] == \"younger children\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\noc_AB = summary[summary[\"ageGroup3\"] == \"older children\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\noc_BC = summary[summary[\"ageGroup3\"] == \"older children\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\nya_AB = summary[summary[\"ageGroup3\"] == \"young adult\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\nya_BC = summary[summary[\"ageGroup3\"] == \"young adult\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\nyado_AB = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\nyado_BC = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\noa_AB = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\noa_BC = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\noadu_AB = summary[summary[\"ageGroup3\"] == \"older adult\"][['AB1_acc', 'AB2_acc', 'AB3_acc', 'AB4_acc']].values[0]\noadu_BC = summary[summary[\"ageGroup3\"] == \"older adult\"][['BC1_acc', 'BC2_acc', 'BC3_acc', 'BC4_acc']].values[0]\n\n# get standard error for AB, BC values from AgeGroup\nyc_AB_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nyc_BC_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noc_AB_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noc_BC_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nya_AB_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nya_BC_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nyado_AB_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nyado_BC_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noa_AB_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noa_BC_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noadu_AB_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noadu_BC_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\n# make 2x2 subplots\nfig = make_subplots(rows=3, cols=2,\n                    subplot_titles=('younger children', 'older children', 'younger adolescent', \n                                    'older adolescent', 'young adult', 'older adult'))\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yc_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=yc_AB_se)),  row=1, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yc_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=yc_BC_se)),row=1, col=1)\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oc_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oc_AB_se)),  row=1, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oc_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oc_BC_se)),row=1, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yado_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=yado_AB_se)),  row=2, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yado_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=yado_BC_se)),row=2, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oa_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oa_AB_se)),  row=2, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oa_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oa_BC_se)),row=2, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ya_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=ya_AB_se)),  row=3, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ya_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=ya_BC_se)),row=3, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oadu_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oadu_AB_se)),  row=3, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oadu_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oadu_BC_se)),row=3, col=2)  \n\nfig.update_layout(width=1000, height=1000, title_text='Accuracy comparison among groups with error bar')","2bf3d122":"# get AC values from AgeGroup\n# get AB, BC values from AgeGroup\nyc_AB = summary[summary[\"ageGroup3\"] == \"younger children\"][['AC_acc']].values[0][0]\nyc_AB_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_AC_']].values[0][0]\n\noc_AB = summary[summary[\"ageGroup3\"] == \"older children\"][['AC_acc']].values[0][0]\noc_AB_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_AC_']].values[0][0]\n\nya_AB = summary[summary[\"ageGroup3\"] == \"young adult\"][['AC_acc']].values[0][0]\nya_AB_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_AC_']].values[0][0]\n\nyado_AB = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['AC_acc']].values[0][0]\nyado_AB_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_AC_']].values[0][0]\n\noa_AB = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['AC_acc']].values[0][0]\noa_AB_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_AC_']].values[0][0]\n\noadu_AB = summary[summary[\"ageGroup3\"] == \"older adult\"][['AC_acc']].values[0][0]\noadu_AB_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_AC_']].values[0][0]\n\nAC_df = pd.DataFrame({\"category\": [\"younger children\", \"older children\", \"younger adolescent\",\n                                   \"older adolescent\", \"young adult\",\"older adult\"],\n                      \"value\": [yc_AB, oc_AB, yado_AB, oa_AB,  ya_AB, oadu_AB],\n                      \"se\": [yc_AB_se, oc_AB_se, yado_AB_se, oa_AB_se, ya_AB_se, oadu_AB_se] \n                     })\nAC_df","5c5b793d":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=AC_df['category'], y=AC_df[\"value\"],\n    error_y=dict(type='data', array=AC_df[\"se\"])\n))\nfig.update_layout(title_text='AC Accuracy comparison among groups with error bar', \n                  xaxis_title=\"category\",\n                  yaxis_title=\"AC Accuracy\")","87d6d46e":"summary","bb5aefa0":"# Question remained: How to group by individual subjects","6137bc39":"df.columns","4b23cb8b":"df = pd.read_csv(\"\/kaggle\/input\/summer-data\/trailbytrail.csv\")\nage_group = df[[\"ageGroup3\", 'AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT', \n                'BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT', \"AC_RT\"]]\nage_group.head()\n\ngrouped = age_group.groupby('ageGroup3', as_index=False)\nsummary = grouped.mean()\nsummary\n\ncol_names = ['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT', 'BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT', \"AC_RT\"]\n\n\n# add standard error for each accuracy\nfor name in col_names:\n    temp = grouped.describe()[name][[\"count\", 'std']]\n    summary[\"se_\" + name[:3]] = temp[\"std\"] \/ np.sqrt(temp[\"count\"])   \n\n\n# get AB, BC values from AgeGroup\nyc_AB = summary[summary[\"ageGroup3\"] == \"younger children\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\nyc_BC = summary[summary[\"ageGroup3\"] == \"younger children\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\noc_AB = summary[summary[\"ageGroup3\"] == \"older children\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\noc_BC = summary[summary[\"ageGroup3\"] == \"older children\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\nya_AB = summary[summary[\"ageGroup3\"] == \"young adult\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\nya_BC = summary[summary[\"ageGroup3\"] == \"young adult\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\nyado_AB = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\nyado_BC = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\noa_AB = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\noa_BC = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\noadu_AB = summary[summary[\"ageGroup3\"] == \"older adult\"][['AB1_RT', 'AB2_RT', 'AB3_RT', 'AB4_RT']].values[0]\noadu_BC = summary[summary[\"ageGroup3\"] == \"older adult\"][['BC1_RT', 'BC2_RT', 'BC3_RT', 'BC4_RT']].values[0]\n\n# get standard error for AB, BC values from AgeGroup\nyc_AB_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nyc_BC_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noc_AB_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noc_BC_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nya_AB_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nya_BC_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\nyado_AB_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\nyado_BC_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noa_AB_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noa_BC_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\noadu_AB_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_AB1', 'se_AB2', 'se_AB3', 'se_AB4']].values[0]\noadu_BC_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_BC1', 'se_BC2', 'se_BC3', 'se_BC4']].values[0]\n\n# make 2x2 subplots\nfig = make_subplots(rows=3, cols=2,\n                    subplot_titles=('younger children', 'older children', 'younger adolescent', \n                                    'older adolescent', 'young adult', 'older adult'))\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yc_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=yc_AB_se)),  row=1, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yc_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=yc_BC_se)),row=1, col=1)\n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oc_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oc_AB_se)),  row=1, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oc_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oc_BC_se)),row=1, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yado_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=yado_AB_se)),  row=2, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=yado_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=yado_BC_se)),row=2, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oa_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oa_AB_se)),  row=2, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oa_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oa_BC_se)),row=2, col=2)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ya_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=ya_AB_se)),  row=3, col=1)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=ya_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=ya_BC_se)),row=3, col=1)  \n\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oadu_AB, name=\"AB\",\n                         line=dict(color='firebrick', width=2),\n                         error_y=dict(array=oadu_AB_se)),  row=3, col=2)\nfig.add_trace(go.Scatter(x=['1', '2', '3', '4'], y=oadu_BC, name=\"BC\",\n                         line=dict(color='royalblue', width=2),\n                         error_y=dict(array=oadu_BC_se)),row=3, col=2)  \n\nfig.update_layout(width=1000, height=1000, title_text='Reaction time comparison among groups with error bar')","cddcd098":"# get AC values from AgeGroup\n# get AB, BC values from AgeGroup\nyc_AB = summary[summary[\"ageGroup3\"] == \"younger children\"][['AC_RT']].values[0][0]\nyc_AB_se = summary[summary[\"ageGroup3\"] == \"younger children\"][['se_AC_']].values[0][0]\n\noc_AB = summary[summary[\"ageGroup3\"] == \"older children\"][['AC_RT']].values[0][0]\noc_AB_se = summary[summary[\"ageGroup3\"] == \"older children\"][['se_AC_']].values[0][0]\n\nya_AB = summary[summary[\"ageGroup3\"] == \"young adult\"][['AC_RT']].values[0][0]\nya_AB_se = summary[summary[\"ageGroup3\"] == \"young adult\"][['se_AC_']].values[0][0]\n\nyado_AB = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['AC_RT']].values[0][0]\nyado_AB_se = summary[summary[\"ageGroup3\"] == \"younger adolescent\"][['se_AC_']].values[0][0]\n\noa_AB = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['AC_RT']].values[0][0]\noa_AB_se = summary[summary[\"ageGroup3\"] == \"older adolescent\"][['se_AC_']].values[0][0]\n\noadu_AB = summary[summary[\"ageGroup3\"] == \"older adult\"][['AC_RT']].values[0][0]\noadu_AB_se = summary[summary[\"ageGroup3\"] == \"older adult\"][['se_AC_']].values[0][0]\n\nAC_df = pd.DataFrame({\"category\": [\"younger children\", \"older children\", \"younger adolescent\",\n                                   \"older adolescent\", \"young adult\",\"older adult\"],\n                      \"value\": [yc_AB, oc_AB, yado_AB, oa_AB,  ya_AB, oadu_AB],\n                      \"se\": [yc_AB_se, oc_AB_se, yado_AB_se, oa_AB_se, ya_AB_se, oadu_AB_se] \n                     })\nAC_df","453305b5":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=AC_df['category'], y=AC_df[\"value\"],\n    error_y=dict(type='data', array=AC_df[\"se\"])\n))\nfig.update_layout(title_text='AC Reaction Time comparison among groups with error bar', \n                  xaxis_title=\"category\",\n                  yaxis_title=\"AC Accuracy\")","7a2bbd71":"## Accuracy for different group","7c0591bf":"BC_acc_4 where participants answered AB test block 4 incorrectly","442a9e65":"## Reaction time for different group","3bde4af7":"## Accuracy for different group","9f50fd90":"## (BC rep1 - AC rep1) x Age","b35bb6e0":"## Compare BC_acc_4 between AB_acc_4 = 1 or not 1","69cb4616":"## AB_final, BC_final, AC Reaction time by accuracy","58dc9a36":"## AC Accuracy comparison among groups with error bar","7c46c19c":"## AC accuracy conditioned on Age and Sex","1bfe4521":"## AC Reaction Time comparison among groups with error bar","dacff81c":"BC_acc_4 where participants answered AB test block 4 correctly.","8c85fa52":"## Accuracy for different group","0bde8ee2":"## AB1-BC1","5d87e233":"We see that most participants answered BC test correctly in test block 4"}}