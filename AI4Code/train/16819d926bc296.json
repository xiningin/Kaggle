{"cell_type":{"b2b1bd71":"code","d21a6d1c":"code","a5dd3fa3":"code","a1c6bf79":"code","4508b845":"code","60226df0":"code","2b7312ae":"code","fb878969":"code","5b7340f1":"code","eb942aab":"code","c34fde1b":"code","2b0f1073":"code","9de9c163":"code","4941ef2d":"code","29f47288":"code","60a1a545":"code","b2957914":"code","f65f825e":"code","d0492ca4":"code","77eb6bd7":"code","94a2bca1":"code","65bc9433":"code","2162477c":"markdown","d84a3e3a":"markdown","c0d0b255":"markdown","dd38fc4d":"markdown","245392a7":"markdown","30fd3e89":"markdown","f058cfb6":"markdown","59afee2c":"markdown","c8631336":"markdown","42fd7c65":"markdown","522e31ad":"markdown","88732377":"markdown","52f1a77b":"markdown","f6765bc8":"markdown","a86be5a8":"markdown","047171c1":"markdown","7660d845":"markdown"},"source":{"b2b1bd71":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","d21a6d1c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a5dd3fa3":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jun-2021\/train.csv\")\ntrain","a1c6bf79":"test = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jun-2021\/test.csv\")\ntest","4508b845":"submission = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jun-2021\/sample_submission.csv\")\nsubmission","60226df0":"\nimport matplotlib.pyplot as plt\n\ntrain.groupby('target').target.count().plot.bar(ylim=0)\nplt.show()\n","2b7312ae":"target = train.groupby('target').target.count()\ntarget","fb878969":"target = train.target","5b7340f1":"train.drop('target', axis = 1, inplace = True)\ntrain","eb942aab":"combi = train.append(test)\ncombi","c34fde1b":"combi.drop('id', axis = 1, inplace = True)\ncombi","2b0f1073":"combi.isnull().sum().sum()","9de9c163":"combi = (combi.max() - combi) \/ (combi.max() - combi.min())\ncombi","4941ef2d":"target = pd.get_dummies(target)\ntarget","29f47288":"y = target\nX = combi[: len(train)]\nX_test = combi[len(train) :]","60a1a545":"#split train set for testing\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.10, random_state=1, stratify=y)\nX_train.shape, y_train.shape, X_val.shape, y_val.shape, X_test.shape","b2957914":"from sklearn.multioutput import MultiOutputRegressor\nfrom sklearn import linear_model\n\nmodel = MultiOutputRegressor(linear_model.BayesianRidge(n_iter=10000)).fit(X_train, y_train)\nmodel.score(X_train, y_train)","f65f825e":"y_pred = model.predict(X_val)\nmodel.score(X_val, y_val)","d0492ca4":"predictions = model.predict(X_test)\npredictions.shape","77eb6bd7":"predictions[predictions < 0] = 0","94a2bca1":"submission.Class_1 = predictions[:, 0]\nsubmission.Class_2 = predictions[:, 1]\nsubmission.Class_3 = predictions[:, 2]\nsubmission.Class_4 = predictions[:, 3]\nsubmission.Class_5 = predictions[:, 4]\nsubmission.Class_6 = predictions[:, 5]\nsubmission.Class_7 = predictions[:, 6]\nsubmission.Class_8 = predictions[:, 7]\nsubmission.Class_9 = predictions[:, 8]","65bc9433":"submission.to_csv('submission.csv', index=False)\nsubmission = pd.read_csv(\"submission.csv\")\nsubmission","2162477c":"Define independant and dependant variables","d84a3e3a":"Select model","c0d0b255":"The dataset is used for this competition is synthetic, but based on a real dataset and generated using a CTGAN. The original dataset deals with predicting the category on an eCommerce product given various attributes about the listing. Although the features are anonymized, they have properties relating to real-world features.\n\n","dd38fc4d":"Drop target","245392a7":"Analyse target","30fd3e89":"Read","f058cfb6":"One hot encode target","59afee2c":"Prepare submission","c8631336":"Combine train and test","42fd7c65":"Check for null values","522e31ad":"Drop id","88732377":"Define target","52f1a77b":"Split training set","f6765bc8":"Normalise data","a86be5a8":"Predict on validation set","047171c1":"Predict on test sdet","7660d845":"Import"}}