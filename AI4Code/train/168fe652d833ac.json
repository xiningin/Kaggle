{"cell_type":{"10eaad70":"code","40d1bdf6":"code","db997a2e":"code","bde7c543":"code","a8687af8":"code","2bacc0a8":"code","cf56ea3a":"code","726c272a":"code","372b142a":"code","dcfbc49c":"code","e5141b3f":"code","4766619a":"code","b230c0bf":"code","31a41054":"code","7d2f6474":"code","a4326043":"code","cb1e5a4a":"code","57018c5d":"code","2c1a3c2f":"code","34210a58":"code","6dfb0b69":"code","ecaf572a":"code","0c81587c":"code","d65a0aba":"code","b7655e37":"code","375d4c2a":"code","830dc416":"code","5711b7d7":"code","452366dc":"code","4a3b7d86":"code","a3103a0f":"code","b0bbf195":"code","c8ee0495":"code","66d2b7a4":"code","82ab04d3":"code","99f2259a":"code","4dfa2abd":"code","6da2e3f2":"code","9204de0b":"code","3b62c910":"code","e937e6ec":"code","452cbffe":"code","77f5bfdf":"markdown","218bd036":"markdown","3c9fe330":"markdown","50bf7ea5":"markdown","54642c3a":"markdown","e7aed679":"markdown","10e05e45":"markdown","c5faf54d":"markdown","823fdd8f":"markdown","814d5f57":"markdown","d9225abd":"markdown","e92b5787":"markdown","23835a81":"markdown","55bc8e43":"markdown","ae5fdeb6":"markdown","a3baa06d":"markdown"},"source":{"10eaad70":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualization with graphics\nimport seaborn as sns # visualization\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","40d1bdf6":"data = pd.read_csv(\"..\/input\/vgsales.csv\")","db997a2e":"data.info()","bde7c543":"data.head()","a8687af8":"data.tail()","2bacc0a8":"data.columns","cf56ea3a":"data.isna().sum() #Found missing values in datasets and that count by sum() function.","726c272a":"data.dropna(inplace=True,axis=0) #inplace -> Bool value. Default False. \n                                 #If True, do operation inplace and return None.\n                                 #axis=0 drop rows which contain missing values. \n                                 #axis=1 drop columns which contain missing values.","372b142a":"data.isna().sum() ","dcfbc49c":"data.info()","e5141b3f":"size=[15,15]\nplt.figure(figsize=size)\nplt.title('Correlation Map')\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt='.2f',linecolor='black', cmap='Blues')\nplt.show()","4766619a":"plt.figure(figsize=(15,15))\nplt.bar(data.Genre,data.Global_Sales,alpha=0.1)\nplt.title('Bar Plot')\nplt.xlabel(\"Genres\")\nplt.ylabel(\"Global Sales\")\nplt.show()","b230c0bf":"plt.figure(figsize=(10,5))\nplt.scatter(data.Global_Sales,data.Year,color=\"r\",alpha=0.1)\nplt.title('Scatter Plot')\nplt.xlabel(\"Global Sales\")\nplt.ylabel(\"Years\")\nplt.show()\n","31a41054":"# axis=0 --> for line\n# axis=1 --> for column \ndataGenre1=data.groupby(\"Genre\")[['Global_Sales']].mean()\ndataGenre2=data.groupby(\"Genre\")[['NA_Sales']].mean()\ndataGenre3=data.groupby(\"Genre\")[['EU_Sales']].mean()\ndataGenre4=data.groupby(\"Genre\")[['JP_Sales']].mean()\n\ndataGenre = pd.concat([dataGenre1,dataGenre2,dataGenre3,dataGenre4],axis=1)\ndataGenre.info()","7d2f6474":"dataGenre","a4326043":"dataGenre['Sales_Status']=['Successful' if(i>0.5) else 'Unsuccessful' for i in dataGenre['Global_Sales']]\ndataGenre","cb1e5a4a":"dataPlatform=data.groupby(\"Platform\")[['Platform']].count()\ndataPlatform.rename(columns={'Platform':'Counted'})\n","57018c5d":"print(data['Genre'].value_counts(dropna=False)) #value_counts() -> Boolean, default True.\n                                                #Don't include counts of NaN","2c1a3c2f":"data.describe()","34210a58":"data['Sales_Status']=['Successful' if(i>0.5) else 'Unsuccessful' for i in data['Global_Sales']]\ndata.head()","6dfb0b69":"data.boxplot(column='Year',by='Sales_Status')","ecaf572a":"data.head()","0c81587c":"data_new = data.head()\ndata_new","d65a0aba":"melted = pd.melt(frame= data_new, id_vars='Name', value_vars=['Genre','Publisher'])\nmelted","b7655e37":"melted.pivot(index='Name', columns='variable',values='value')","375d4c2a":"data1 = data.head()\ndata2 = data.tail()\nconcat_data_row = pd.concat([data1,data2], axis=0, ignore_index=True)\nconcat_data_row","830dc416":"data1=data['Genre'].head()\ndata2=data['Sales_Status'].head()\nconcat_data_column = pd.concat([data1,data2], axis=1, ignore_index=True)\nconcat_data_column","5711b7d7":"data['Year'] = data['Year'].astype('int') #convert float to int","452366dc":"data['Genre'].value_counts(dropna = False)","4a3b7d86":"#assert 1==1 # return nothing because it is true\n#assert 1==2 # return error because it is false","a3103a0f":"assert data['Genre'].notnull().all() #returns nothing because we drop missing values\nassert data.columns[1] == 'Name'","b0bbf195":"country = ['Greece', 'Italy']\ncity = ['Athen', 'Milano']\ntitle = ['country', 'city']\nlist_col = [country,city]\nzipped = list(zip(title, list_col))\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf","c8ee0495":"#broadcasting\ndf['income']=1000\ndf","66d2b7a4":"data.plot(kind='hist', y='Global_Sales', bins=50, range=(0,1), normed=True)\nplt","82ab04d3":"data.plot(kind='hist', y='Global_Sales', bins=50, range=(0,1), normed=True, cumulative=True) # cumulative=True -> \nplt","99f2259a":"data.head()","4dfa2abd":"import warnings\nwarnings.filterwarnings('ignore')\n\ndata_indexing = data.head()\ndate_list=['1997-01-02', '1997-05-12', '1997-09-23', '1997-10-12', '1997-12-27']\ndate_object = pd.to_datetime(date_list)\ndata_indexing['date']=date_object\n\ndata_indexing = data_indexing.set_index('date')\ndata_indexing","6da2e3f2":"print(data_indexing.loc['1997-01-02'])","9204de0b":"print(data_indexing.loc['1997-01-02':'1997-12-27'])","3b62c910":"data_indexing.head()","e937e6ec":"data_indexing.resample(\"M\").mean()","452cbffe":"data_indexing.resample(\"M\").mean().interpolate(\"linear\")","77f5bfdf":"**How many games were produced for each platform?**","218bd036":"**Let's use 'Scatter plot' to graphics global sales by year.**","3c9fe330":"**DATA TYPES**","50bf7ea5":"**INDEXING PANDAS TIME SERIES**","54642c3a":"PIVOTING DATA (Reverse of melting)","e7aed679":"**CONCATENATING DATA**","10e05e45":"**VISUAL EXPLORATORY DATA ANALYSIS**","c5faf54d":"****DATA CLEANING****\n\n**isna() function used to find missing value and that counts by sum() function.**","823fdd8f":"**TIDY DATA**","814d5f57":"**Let's use 'Bar plot' to graphics global sales by genre.**","d9225abd":"**Let's do Correlation map!**","e92b5787":"**RESAMPLING PANDAS TIME SERIES**","23835a81":"**---> zip() Function**","55bc8e43":"**Add a new column. This column indicates that the sales status is successful or unsuccessful.**","ae5fdeb6":"**Concatenate pandas objects with concat() functions. **","a3baa06d":"**MISSING DATA AND TESTING W\u0130TH ASSERT**"}}