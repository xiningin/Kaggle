{"cell_type":{"8dc041d6":"code","478c0f35":"code","ec6e729f":"code","e87bfa6b":"code","ad753514":"code","3c98771f":"code","3cde9efd":"code","dc4980a9":"code","0d5e91b8":"code","782788bd":"code","e460a81f":"code","15d10ab2":"code","eeb6ca51":"code","c48aa602":"code","83451ddc":"code","cd407846":"code","37c1dfa0":"code","6865be74":"code","64a14f5f":"code","713353de":"code","164a5df4":"code","49dd4190":"code","52eecc97":"code","28ce8def":"code","d5e5ff80":"code","151cc3d3":"code","4f0f6a2b":"code","5dcec810":"code","15f22d59":"code","ac9e88bc":"code","fd71a320":"code","88173d3e":"code","b03834e5":"code","c08e4579":"code","0ee9b3b5":"code","d143cf08":"code","60528776":"code","5a268877":"code","611f6085":"code","c2e7c0ce":"code","78d1012b":"code","3a6cbd0d":"code","c35c7737":"code","ebb68937":"code","bc816d89":"code","8ecaa4f4":"code","f5f93e27":"code","1f909f8a":"code","6eab9ac7":"code","cc8ef3d6":"code","ff3d818e":"code","b9b7f64f":"code","82646db8":"code","28913445":"code","3e21220d":"code","0ba67dee":"code","2568dee6":"code","439da538":"code","2685c13b":"code","c599f0c3":"code","4e010885":"code","bf1e3d63":"markdown","f509ec3c":"markdown","446fc9e8":"markdown","b275894b":"markdown","a9558708":"markdown","63449b1f":"markdown","e6276c82":"markdown","e8c75b2f":"markdown","92957d62":"markdown","db13ab1f":"markdown","4371e55f":"markdown","6a69d227":"markdown","0122cf46":"markdown","bbf6dfc5":"markdown","18ffd8fd":"markdown","59f2d908":"markdown","0303d19e":"markdown","63b5c188":"markdown","fd7ac838":"markdown","54b0a572":"markdown","8e510012":"markdown","b7674be8":"markdown","29730750":"markdown","e713b669":"markdown","254a3e1d":"markdown","2acaab01":"markdown","fe270695":"markdown","254c9cd1":"markdown","d1e08f76":"markdown","eba1794e":"markdown","f9c48865":"markdown","479d3f8b":"markdown","e68313cf":"markdown","1d5f17d5":"markdown","8d031683":"markdown","51d36852":"markdown","e0d299a3":"markdown","aa31b4ab":"markdown","b47f6e30":"markdown","b1303ecd":"markdown","60b75577":"markdown","13b6aa3a":"markdown","d0d89393":"markdown","36342eec":"markdown","3907cdcd":"markdown","a8288bf4":"markdown","f2bc636a":"markdown","ebce1336":"markdown","dd936d8b":"markdown","e4e4befc":"markdown","163f261b":"markdown","f359e166":"markdown","fb8bd4d5":"markdown","f669b4e0":"markdown","09ab2048":"markdown","6d13321a":"markdown","19f4bb1b":"markdown","e325eee3":"markdown","e2d5cd73":"markdown","ed0050eb":"markdown","f6103611":"markdown","e5a24351":"markdown","5734839d":"markdown","851479cb":"markdown","6f8013fa":"markdown","7f0016d6":"markdown","ed1a7a96":"markdown","9fdf5471":"markdown","cbb2b698":"markdown","09c87db9":"markdown","14e9b9f0":"markdown","05be9c28":"markdown","b440c2c3":"markdown","af200157":"markdown","f55b5f88":"markdown","a631386f":"markdown","76e7364a":"markdown","a9f53b06":"markdown","a049017d":"markdown","44be10cd":"markdown","03951c57":"markdown","c2fa3971":"markdown","41fe0068":"markdown","3707176c":"markdown","654c29f9":"markdown","1b3b11e0":"markdown","62ea4fe9":"markdown","4caba82f":"markdown","7990ff6d":"markdown","f0b184c3":"markdown","6571d11b":"markdown","3f616fcd":"markdown","45ece021":"markdown"},"source":{"8dc041d6":"# Try your first Python output\n\nprint('Hello, Python!')","478c0f35":"# Check the Python Version\n\nimport sys\nprint(sys.version)","ec6e729f":"# Practice on writing comments\n\nprint('Hello, Python!') # This line prints a string\n# print('Hi')\n\nprint ('Hi')","e87bfa6b":"# Print string as error message\n\nfrint(\"Hello, Python!\")","ad753514":"# Try to see build in error message\n\nprint(\"Hello, Python!\")","3c98771f":"# Print string and error to see the running order\n\nprint(\"This will be printed\")\nprint(\"This will cause an error\")\nprint(\"This will NOT be printed\")","3cde9efd":"# Write your code below and press Shift+Enter to execute \n\nprint('Xiuwenbo is GREAT')","dc4980a9":"# Write your code below and press Shift+Enter to execute \nprint('eh, boring.') # I am really bored.","0d5e91b8":"# Integer\n\n11","782788bd":"# Float\n\n2.14","e460a81f":"# String\n\n\"Hello, Python 101!\"","15d10ab2":"# Type of 689875950\n\ntype(689875950)","eeb6ca51":"# Type of 2.14\n\ntype(2.14)","c48aa602":"# Type of \"Hello, Python 101!\"\n\ntype(\"Hello, Python 101!\")","83451ddc":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\ntype(12.0)","cd407846":"# Print the type of -1\n\ntype(-1)","37c1dfa0":"# Print the type of 4\n\ntype(4)","6865be74":"# Print the type of 0\n\ntype(0)","64a14f5f":"# Print the type of 1.0\n\ntype(1.0) # Notice that 1 is an int, and 1.0 is a float","713353de":"# Print the type of 0.5\n\ntype(0.5)","164a5df4":"# Print the type of 0.56\n\ntype(0.56)","49dd4190":"# System settings about float type\n\nsys.float_info","52eecc97":"# Verify that this is an integer\n\ntype(2)","28ce8def":"# Convert 2 to a float\n\nfloat(2)","d5e5ff80":"# Convert integer 2 to a float and check its type\n\ntype(float(2))","151cc3d3":"# Casting 1.1 to integer will result in loss of information\n\nint(1.1)","4f0f6a2b":"# Convert a string into an integer\n\nint('1')","5dcec810":"# Convert a string into an integer with error\n\nint('1 or 2 people')","15f22d59":"# Convert the string \"1.2\" into a float\n\nfloat('1.2')","ac9e88bc":"# Convert an integer to a string\n\nstr(1)","fd71a320":"# Convert a float to a string\n\nstr(1.2)","88173d3e":"# Value true\n\nTrue","b03834e5":"# Value false\n\nFalse","c08e4579":"# Type of True\n\ntype(True)","0ee9b3b5":"# Type of False\n\ntype(False)","d143cf08":"# Convert True to int\n\nint(True)","60528776":"# Convert 1 to boolean\n\nbool(1)","5a268877":"# Convert 0 to boolean\n\nbool(0)","611f6085":"# Convert True to float\n\nfloat(True)","c2e7c0ce":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\ntype(6\/2)","78d1012b":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\ntype(6\/\/2)","3a6cbd0d":"# Addition operation expression\n\n43 + 60 + 16 + 41","c35c7737":"# Subtraction operation expression\n\n50 - 60","ebb68937":"# Multiplication operation expression\n\n5 * 5","bc816d89":"# Division operation expression\n\n25 \/ 5","8ecaa4f4":"# Division operation expression\n\n25 \/ 6","f5f93e27":"# Integer division operation expression\n\n25 \/\/ 5","1f909f8a":"# Integer division operation expression\n\n25 \/\/ 6","6eab9ac7":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\n\n160\/60","cc8ef3d6":"# Mathematical expression\n\n30 + 2 * 60","ff3d818e":"# Mathematical expression\n\n(30 + 2) * 60","b9b7f64f":"# Store value into variable\n\nx = 43 + 60 + 16 + 41","82646db8":"# Print out the value in variable\n\nx","28913445":"# Use another variable to store the result of the operation between variable and value\n\ny = x \/ 60\ny","3e21220d":"# Overwrite variable with new value\n\nx = x \/ 60\nx","0ba67dee":"# Name the variables meaningfully\n\ntotal_min = 43 + 42 + 57 # Total length of albums in minutes\ntotal_min","2568dee6":"# Name the variables meaningfully\n\ntotal_hours = total_min \/ 60 # Total length of albums in hours \ntotal_hours","439da538":"# Complicate expression\n\ntotal_hours = (43 + 42 + 57) \/ 60  # Total hours in a single expression\ntotal_hours","2685c13b":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\nx = 3 + 2 * 2\nx","c599f0c3":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\ny = (3 + 2) * 2\ny","4e010885":"# Write your code below. Don't forget to press Shift+Enter to execute the cell\nz = x + y \nz","bf1e3d63":"<p>Everyone makes mistakes. For many types of mistakes, Python will tell you that you have made a mistake by giving you an error message. It is important to read error messages carefully to really understand where you made a mistake and how you may go about correcting it.<\/p>\n<p>For example, if you spell <code>print<\/code> as <code>frint<\/code>, Python will display an error message. Give it a try:<\/p>","f509ec3c":"<p>Just like with most programming languages, we can store values in <i>variables<\/i>, so we can use them later on. For example:<\/p>","446fc9e8":"<h4>Converting integers to floats<\/h4>\n<p>Let's cast integer 2 to float:<\/p>","b275894b":"<hr\/>\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n[Tip]: To execute the Python code in the code cell below, click on the cell to select it and press <kbd>Shift<\/kbd> + <kbd>Enter<\/kbd>.\n<\/div>\n<hr\/>","a9558708":"<p>We can also perform division with the forward slash:","63449b1f":"***<p>Python is an object-oriented language. ***\n\nThere are many different types of objects in Python. Let's start with the most common object types: ***strings***, ***integers*** and ***floats***. Anytime you write words (text) in Python, you're using <i>character strings<\/i> (strings for short). The most common numbers, on the other hand, are <i>integers<\/i> (e.g. -1, 0, 100) and <i>floats<\/i>, which represent real numbers (e.g. 3.14, -42.0).<\/p>","e6276c82":"<h3 id=\"exer_type\">Exercise: Types<\/h3>","e8c75b2f":"<h3 id=\"exer_exp\">Exercise: Expression<\/h3>","92957d62":"<h3 id=\"comments\">Writing comments in Python<\/h3>","db13ab1f":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n7\n-->\n","4371e55f":"<h2 id=\"types_objects\" align=\"center\">Types of objects in Python<\/h2>","6a69d227":"<p>\n    In addition to writing code, note that it's always a good idea to add comments to your code. It will help others understand what you were trying to accomplish (the reason why you wrote a given snippet of code). Not only does this help <strong>other people<\/strong> understand your code, it can also serve as a reminder <strong>to you<\/strong> when you come back to it weeks or months later.<\/p>\n\n<p>\n    To write comments in Python, use the number symbol <code>#<\/code> before writing your comment. When you run your code, Python will ignore everything past the <code>#<\/code> on a given line.\n<\/p>","0122cf46":"<p>What is the type of the result of: <code>6 \/\/ 2<\/code>? (Note the double slash <code>\/\/<\/code>.)<\/p>","bbf6dfc5":"<h3 id=\"bool\">Boolean data type<\/h3>","18ffd8fd":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n\ntype(12.0)\n\n-->","59f2d908":"Try to run the code in the cell below and see what happens:","0303d19e":"<hr\/>\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n    [Tip:] <code>print()<\/code> is a function. You passed the string <code>'Hello, Python!'<\/code> as an argument to instruct Python on what to print.\n<\/div>\n<hr\/>","63b5c188":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n\nprint(\"Hello, world!\") # Print the traditional hello world\n\n-->\n","fd7ac838":"<p>Python follows well accepted mathematical conventions when evaluating mathematical expressions. In the following example, Python adds 30 to the result of the multiplication (i.e., 120).","54b0a572":"<h3 id=\"int\">Integers<\/h3>","8e510012":"<p>Here are some examples of integers. Integers can be negative or positive numbers:<\/p>","b7674be8":"<a align=\"center\">\n    <img src=\"https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/PY0101EN\/Chapter%201\/Images\/TypesObjects.png\" width=\"500\">\n<\/a>","29730750":"<p>You can change the type of the object in Python; this is called typecasting. For example, you can convert an <i>integer<\/i> into a <i>float<\/i> (e.g. 2 to 2.0).<\/p>\n<p>Let's try it:<\/p>","e713b669":"<h3 id=\"float\">Floats<\/h3> ","254a3e1d":"<p>\n    There are two popular versions of the Python programming language in use today: Python 2 and Python 3. The Python community has decided to move on from Python 2 to Python 3, and many popular libraries have announced that they will no longer support Python 2.\n<\/p>\n<p>\n    Since Python 3 is the future, in this course we will be using it exclusively. How do we know that our notebook is executed by a Python 3 runtime? We can look in the top-right hand corner of this notebook and see \"Python 3\".\n<\/p>\n<p>\n    We can also ask directly Python and obtain a detailed answer. Try executing the following code:\n<\/p>","2acaab01":"<a href=\"https:\/\/github.com\/xiuwenbo?tab=repositories\">\n    <img src=\"https:\/\/raw.githubusercontent.com\/xiuwenbo\/Markdown-Photos\/master\/IMG_5508.JPG\" width=\"200\" align=\"center\">\n<\/a>  \n\n\n                                                                                                      @Xiuwenbo Wang ","fe270695":"<h2>Table of Contents<\/h2>\n<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n    <ul>\n        <li>\n            <a href=\"#hello\">Say \"Hello\" to the world in Python<\/a>\n            <ul>\n                <li><a href=\"version\">What version of Python are we using?<\/a><\/li>\n                <li><a href=\"comments\">Writing comments in Python<\/a><\/li>\n                <li><a href=\"errors\">Errors in Python<\/a><\/li>\n                <li><a href=\"python_error\">Does Python know about your error before it runs your code?<\/a><\/li>\n                <li><a href=\"exercise\">Exercise: Your First Program<\/a><\/li>\n            <\/ul>\n        <\/li>\n        <li>\n            <a href=\"#types_objects\">Types of objects in Python<\/a>\n            <ul>\n                <li><a href=\"int\">Integers<\/a><\/li>\n                <li><a href=\"float\">Floats<\/a><\/li>\n                <li><a href=\"convert\">Converting from one object type to a different object type<\/a><\/li>\n                <li><a href=\"bool\">Boolean data type<\/a><\/li>\n                <li><a href=\"exer_type\">Exercise: Types<\/a><\/li>\n            <\/ul>\n        <\/li>\n        <li>\n            <a href=\"#expressions\">Expressions and Variables<\/a>\n            <ul>\n                <li><a href=\"exp\">Expressions<\/a><\/li>\n                <li><a href=\"exer_exp\">Exercise: Expressions<\/a><\/li>\n                <li><a href=\"var\">Variables<\/a><\/li>\n                <li><a href=\"exer_exp_var\">Exercise: Expression and Variables in Python<\/a><\/li>\n            <\/ul>\n        <\/li>\n    <\/ul>\n   \n<\/div>\n\n<hr>","254c9cd1":"<h2 id=\"expressions\">Expression and Variables<\/h2>","d1e08f76":"<h4>Converting from strings to integers or floats<\/h4>","eba1794e":"<h3 id=\"exer_exp_var\">Exercise: Expression and Variables in Python<\/h3>","f9c48865":"<p>Generations of programmers have started their coding careers by simply printing \"Hello, world!\". You will be following in their footsteps.<\/p>\n<p>In the code cell below, use the <code>print()<\/code> function to print out the phrase: <code>Hello, world!<\/code><\/p>","479d3f8b":"<p>\n    You'll notice that if we make a different type of mistake, by forgetting to close the string, we'll obtain a different error (i.e., a <code>SyntaxError<\/code>). Try it below:\n<\/p>","e68313cf":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n160\/60 \n# Or \n160\/\/60\n-->","1d5f17d5":"Python is what is called an <em>interpreted language<\/em>. Compiled languages examine your entire program at compile time, and are able to warn you about a whole class of errors prior to execution. In contrast, Python interprets your script line by line as it executes it. Python will stop executing the entire program when it encounters an error (unless the error is expected and handled by the programmer, a more advanced subject that we'll cover later on in this course).","8d031683":"<hr>","51d36852":"<p>Notice that the value <code>True<\/code> has an uppercase \"T\". The same is true for <code>False<\/code> (i.e. you must use the uppercase \"F\").<\/p>","e0d299a3":"<hr\/>\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n    [Tip:] <code>sys<\/code> is a built-in module that contains many system-specific parameters and functions, including the Python version in use. Before using it, we must explictly <code>import<\/code> it.\n<\/div>\n<hr\/>","aa31b4ab":"<p>If you'd rather have total hours as an integer, you can of course replace the floating point division with integer division (i.e., <code>\/\/<\/code>).<\/p>","b47f6e30":"<hr>","b1303ecd":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\ntype(6\/\/2) # int, as the double slashes stand for integer division \n-->","60b75577":"<p>What is the value of <code>z<\/code> where <code>z = x + y<\/code>?<\/p>","13b6aa3a":"*** <p><strong>Hello!<\/strong> This notebook will teach you the basics of the Python programming language. The information presented here is quite basic, but it is an important foundation that will help you read and write Python code. By the end of this notebook, you'll know the basics of Python, including how to write basic commands, understand some basic types, and how to perform simple operations on them. :) <\/p> ***","d0d89393":"After executing the cell above, you should see that Python prints <code>Hello, Python!<\/code>. Congratulations on running your first Python code!","36342eec":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\ntype(6\/2) # float\n-->","3907cdcd":"<h3 id=\"exercise\">Exercise: Your First Program<\/h3>","a8288bf4":"<p>Sometimes, we can have a string that contains a number within it. If this is the case, we can cast that string that represents a number into an integer using <code>int()<\/code>:<\/p>","f2bc636a":"<p>You can get Python to tell you the type of an expression by using the built-in <code>type()<\/code> function. You'll notice that Python refers to integers as <code>int<\/code>, floats as <code>float<\/code>, and character strings as <code>str<\/code>.<\/p>","ebce1336":"<p>As seen in the quiz above, we can use the double slash for integer division, where the result is rounded to the nearest integer:","dd936d8b":"<h3 id=\"version\">What version of Python are we using?<\/h3>","e4e4befc":"<p>If we can convert strings to numbers, it is only natural to assume that we can convert numbers to strings, right?<\/p>","163f261b":"<p>\n    After executing the cell above, you should notice that <code>This line prints a string<\/code> did not appear in the output, because it was a comment (and thus ignored by Python).\n<\/p>\n<p>\n    The second line was also not executed because <code>print('Hi')<\/code> was preceded by the number sign (<code>#<\/code>) as well! Since this isn't an explanatory comment from the programmer, but an actual line of code, we might say that the programmer <em>commented out<\/em> that second line of code.\n<\/p>","f359e166":"<p>What is the value of <code>x<\/code> where <code>x = 3 + 2 * 2<\/code><\/p>","fb8bd4d5":"<hr\/>\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n    [Tip:] Note that strings can be represented with single quotes (<code>'1.2'<\/code>) or double quotes (<code>\"1.2\"<\/code>), but you can't mix both (e.g., <code>\"1.2'<\/code>).\n<\/div>\n<hr\/>","f669b4e0":"<p>Now, let's enhance your code with a comment. In the code cell below, print out the phrase: <code>Hello, world!<\/code> and comment it with the phrase <code>Print the traditional hello world<\/code> all in one line of code.<\/p>","09ab2048":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n\nprint(\"Lol, He is really Great!\")\n\n-->","6d13321a":"<p>You can also convert strings containing floating point numbers into <i>float<\/i> objects:<\/p>","19f4bb1b":"<p>We can perform subtraction operations using the minus operator. In this case the result is a negative number:<\/p>","e325eee3":"<h3 id=\"var\">Variables<\/h3>","e2d5cd73":"<p>Let's write an expression that calculates how many hours there are in 160 minutes:","ed0050eb":"<p>The following code cells contain some examples.<\/p>","f6103611":"<h4>Contributors:<\/h4> \n<p><a href=\"https:\/\/www.linkedin.com\/in\/xiuwenbo-gavin-wang-b73768134\/\">Xiuwenbo Wang<\/a><\/p>","e5a24351":"<p>It's a good practice to use meaningful variable names, so you and others can read the code and understand it more easily:<\/p>","5734839d":"<a align=\"center\">\n    <img src=\"https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/PY0101EN\/Chapter%201\/Images\/TypesInt.png\" width=\"600\">\n<\/a>","851479cb":"<p>And just like mathematics, expressions enclosed in parentheses have priority. So the following multiplies 32 by 60.","6f8013fa":"<p>Expressions in Python can include operations among compatible types (e.g., integers and floats). For example, basic arithmetic operations like adding multiple numbers:<\/p>","7f0016d6":"When learning a new programming language, it is customary to start with an \"hello world\" example. As simple as it is, this one line of code will ensure that we know how to print a string in output and how to execute code within cells in a notebook.","ed1a7a96":"<h1>Python - Writing Your First Python Code!<\/h1>","9fdf5471":"<hr>\n<h3>Congratulations!<\/h3>\n<p>Congratulations, you have completed your first practice in Python.\n<hr>","cbb2b698":"<p>In the code cell below, use the <code>type()<\/code> function to check the object type of <code>12.0<\/code>.","09c87db9":"<h3 id=\"python_error\">Does Python know about your error before it runs your code?<\/h3>","14e9b9f0":"<p>What is the data type of the result of: <code>6 \/ 2<\/code>?<\/p>","05be9c28":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n10\n-->","b440c2c3":"<h3 id=\"exp\">Expressions<\/h3>","af200157":"<h3 id=\"convert\">Converting from one object type to a different object type<\/h3>","f55b5f88":"<p>And there is no reason why we shouldn't be able to make floats into strings as well:<\/p> ","a631386f":"<p>We can cast boolean objects to other data types. If we cast a boolean with a value of <code>True<\/code> to an integer or float we will get a one. If we cast a boolean with a value of <code>False<\/code> to an integer or float we will get a zero. Similarly, if we cast a 1 to a Boolean, you get a <code>True<\/code>. And if we cast a 0 to a Boolean we will get a <code>False<\/code>. Let's give it a try:<\/p> ","76e7364a":"<p>We can do multiplication using an asterisk:<\/p>","a9f53b06":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n17\n-->","a049017d":"<p>The error message tells you: \n<ol>\n    <li>where the error occurred (more useful in large notebook cells or scripts), and<\/li> \n    <li>what kind of error it was (NameError)<\/li> \n<\/ol>\n<p>Here, Python attempted to run the function <code>frint<\/code>, but could not determine what <code>frint<\/code> is since it's not a built-in function and it has not been previously defined by us either.<\/p>","44be10cd":"<p>But if you try to do so with a string that is not a perfect match for a number, you'll get an error. Try the following:<\/p>","03951c57":"<h2 id=\"hello\">Say \"Hello\" to the world in Python<\/h2>","c2fa3971":"<p>When we convert an integer into a float, we don't really change the value (i.e., the significand) of the number. However, if we cast a float into an integer, we could potentially lose some information. For example, if we cast the float 1.1 to integer we will get 1 and lose the decimal information (i.e., 0.1):<\/p>","41fe0068":"<p>When you ask Python to display the type of a boolean object it will show <code>bool<\/code> which stands for <i>boolean<\/i>:<\/p> ","3707176c":"<p>In the cells above we added the length of three albums in minutes and stored it in <code>total_min<\/code>. We then divided it by 60 to calculate total length <code>total_hours<\/code> in hours. You can also do it all at once in a single expression, as long as you use parenthesis to add the albums length before you divide, as shown below.<\/p>","654c29f9":"<h3 id=\"errors\">Errors in Python<\/h3>","1b3b11e0":"<p>To see the value of <code>x<\/code> in a Notebook, we can simply place it on the last line of a cell:<\/p>","62ea4fe9":"<p>We can also perform operations on <code>x<\/code> and save the result to a new variable:<\/p>","4caba82f":"<p><i>Boolean<\/i> is another important type in Python. An object of type <i>Boolean<\/i> can take on one of two values: <code>True<\/code> or <code>False<\/code>:<\/p>","7990ff6d":"<p>We can verify this is the case by using, you guessed it, the <code>type()<\/code> function:","f0b184c3":"<p>Floats represent real numbers; they are a superset of integer numbers but also include \"numbers with decimals\". There are some limitations when it comes to machines representing real numbers, but floating point numbers are a good representation in most cases. You can learn more about the specifics of floats for your runtime environment, by checking the value of <code>sys.float_info<\/code>. This will also tell you what's the largest and smallest number that can be represented with them.<\/p>\n\n<p>Once again, can test some examples with the <code>type()<\/code> function:","6571d11b":"<p>If we save a value to an existing variable, the new value will overwrite the previous value:<\/p>","3f616fcd":"<h4>Converting numbers to strings<\/h4>","45ece021":"<p>What is the value of <code>y<\/code> where <code>y = (3 + 2) * 2<\/code>?<\/p>"}}