{"cell_type":{"3b207021":"code","10d57893":"code","f8127258":"code","4cba38f5":"code","feef3f94":"code","7dffcc12":"code","2670428b":"code","112f228d":"code","6666d83c":"code","43a13be3":"code","60b83638":"code","8bea6706":"code","a2964ff1":"code","f8a61599":"code","f5f720f7":"code","4e3d109e":"code","79e636fd":"markdown","bd60673b":"markdown","672b3324":"markdown","1d117d48":"markdown","3ed083ad":"markdown","d3edeb55":"markdown","b8684f4e":"markdown","b9331d42":"markdown","42194ab3":"markdown","62152874":"markdown","1a6f163b":"markdown","d8e151c7":"markdown","7ab172f0":"markdown","4fd10c93":"markdown"},"source":{"3b207021":"import numpy as np\nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nfrom scipy import stats","10d57893":"DATA_NUM = 100\nrng = np.random.default_rng()\n\nx = rng.random(DATA_NUM)\ny = 1.6*x + rng.random(DATA_NUM) + np.cos(x)*1.5 + np.sin(x)*5.7","f8127258":"res = stats.linregress(x, y)\nprint(res)","4cba38f5":"res.slope","feef3f94":"res.intercept","7dffcc12":"res.rvalue","2670428b":"res.pvalue","112f228d":"res.stderr","6666d83c":"res.intercept_stderr","43a13be3":"print(f\"R-squared: {res.rvalue**2:.6f}\")","60b83638":"plt.plot(x, y, 'o', label='original data')\nplt.plot(x, res.intercept + res.slope*x, 'r', label='fitted line')\nplt.legend()\nplt.show()","8bea6706":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")","a2964ff1":"train.corr()","f8a61599":"ROUND_NUM = 4\ndef makeLinegressToDF(result):\n    df = pd.DataFrame([[round(result.slope,ROUND_NUM),round(result.intercept,ROUND_NUM),round(result.rvalue,ROUND_NUM),\n                       round(result.pvalue,ROUND_NUM),round(result.stderr,ROUND_NUM),round(result.intercept_stderr,ROUND_NUM)]],\n        columns =[\"slope\",\"intercept\",\"r-value\",\n                  \"p-value\",\"stderr\",\"intercept_stderr\"])\n    \n    return df","f5f720f7":"res = stats.linregress(train[\"Pclass\"], train[\"Survived\"])\nmakeLinegressToDF(res)","4e3d109e":"res = stats.linregress(train[\"Fare\"], train[\"Survived\"])\nmakeLinegressToDF(res)","79e636fd":"y = wx + b  => w","bd60673b":"# Slope of the regression line.","672b3324":"# scipy.stats.linregress","1d117d48":"# R value\nRelation Value \n\nCorrelation coefficient.","3ed083ad":"# make data ","d3edeb55":"# P value\n\nprobability value\n\nThe p-value for a hypothesis test whose null hypothesis is that the slope is zero, using Wald Test with t-distribution of the test statistic. See alternative above for alternative hypotheses.","b8684f4e":"# analyze data","b9331d42":"# Standard error of the estimated slope\nStandard error of the estimated slope (gradient), under the assumption of residual normality.","42194ab3":"# R Squared value ","62152874":"# titanic data ","1a6f163b":"### Calculate a linear least-squares regression for two sets of measurements.","d8e151c7":"y = ax + b => b value ","7ab172f0":"# Standard error of the estimated intercept\nStandard error of the estimated intercept, under the assumption of residual normality.","4fd10c93":"# Intercept of the regression line."}}