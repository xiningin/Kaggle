{"cell_type":{"574f2a55":"code","db70adf0":"code","caf08197":"code","a0ca1fdf":"code","fb8e31b3":"code","880b209e":"code","05a4a571":"code","ba41593e":"code","3bcce8f6":"code","bfb40793":"code","c5e9eed6":"code","7c068005":"code","5c6bf45c":"code","f8f082b2":"code","06b1e3e7":"code","701108fa":"code","575ceab5":"code","17545f9b":"code","b9b8ef16":"markdown","afefab2c":"markdown","4e3f253c":"markdown","9f7d4751":"markdown","c1a96ff4":"markdown","a82cb604":"markdown","59326b6b":"markdown","a39e2ebc":"markdown","3b2c295c":"markdown","12a890f3":"markdown","88b3aef0":"markdown","68c1491c":"markdown","f74686a3":"markdown","f1f2dc35":"markdown","4e2764f9":"markdown"},"source":{"574f2a55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db70adf0":"import pandas as pd\nimport seaborn as sns\nimport matplotlib as mp","caf08197":"df = pd.read_csv(\"..\/input\/tsf-datasets\/SampleSuperstore.csv\")","a0ca1fdf":"df.dropna()\ndf.drop_duplicates(inplace=True)","fb8e31b3":"df.head()","880b209e":"df.shape","05a4a571":"df.describe()","ba41593e":"df.info()","3bcce8f6":"df.nunique(axis=0)","bfb40793":"from matplotlib import pyplot as plt\nplt.figure(figsize=(16,8))\nplt.bar('Sub-Category','Category',data=df,color='y')\nplt.show()","c5e9eed6":" df.sort_values(\"Profit\").head(15)","7c068005":"\ndf_state_profit = df.groupby('State')['Profit'].sum().sort_values(ascending = False).plot.bar(figsize = (15, 5), \n                                                                                              color = 'Cornflowerblue')\nplt.ylabel('Total Profit\/Loss in USD$')\nplt.xlabel('American States')\nplt.title('Total State-Wise Profit\/Loss', fontsize = 20)\nplt.show()","5c6bf45c":"plt.figure(figsize=(12,10))\ndf['Sub-Category'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","f8f082b2":"fig=plt.figure(figsize=(10,8))\nax = fig.add_subplot(111)\ns=sns.countplot('Segment', data = df)\nfor s in ax.patches:\n    ax.annotate('{:.0f}'.format(s.get_height()), (s.get_x()+0.15, s.get_height()+1))\nplt.show()","06b1e3e7":"\nplt.figure(figsize=(15,8))\nsns.countplot(x=\"Sub-Category\", hue=\"Region\", data=df)\nplt.show()","701108fa":"df.groupby('Sub-Category')['Profit','Sales'].agg(['sum']).plot.bar()\nplt.title('Total Profit and Sales per Sub-Category')\n# plt.legend('Profit')\n# plt.legend('Sales')\nplt.show()","575ceab5":"# count of each Category, Segment, Ship Mode, and Region\nfig, axs = plt.subplots(nrows = 2, ncols = 2, figsize=(12, 7));\nsns.countplot(df['Category'], ax = axs[0][0], palette = 'PuBu')\nsns.countplot(df['Segment'], ax = axs[0][1], palette = 'PuBu')\nsns.countplot(df['Ship Mode'], ax = axs[1][0], palette = 'PuBu')\nsns.countplot(df['Region'], ax = axs[1][1], palette = 'PuBu')\naxs[0][0].set_title('Category', fontsize = 20)\naxs[0][1].set_title('Segment', fontsize = 20)\naxs[1][0].set_title('Ship Mode', fontsize = 20)\naxs[1][1].set_title('Region', fontsize = 20)\nplt.tight_layout()","17545f9b":"fig, ax = plt.subplots(figsize = (10, 6))\n# scatterplot of Sales and Profit\nax.scatter(df[\"Sales\"] , df[\"Profit\"], color = 'Teal')\nax.set_xlabel('Sales in USD$')\nax.set_ylabel('Profit\/Loss in USD$')\nplt.title('Sales and Profit', fontsize = 20)\nplt.show()","b9b8ef16":"**I think the data provided regarding worst performing cities, states ans department and items in which improvement is needed will be highly beneficial to take appropriate decisions for the betterment of the company**","afefab2c":"# Graduate Rotational Internship Program - The Sparks Foundation\n* **Dataset - US Superstore data.csv**\n* **Author - Shubham Singh**\n","4e3f253c":"There are 3 categories of 'Category', where \u201cFurniture\u201d has over 2k instances, \u201cOffice Supplies\u201d is notably most popular with around 6k, and \u201cTechnology\u201d has almost 2k. This clearly illustrates that data available for \"Office Supplies\" has almost 3 times the proportion than that for the other two categories, which will be taken note of for further data visualisations and analysis later on.\n\nThere are 3 categories of 'Segment', where \u201cConsumer\u201d is notably most common with over 5k instances, \u201cCorporate\u201d has over 3k, and \u201cHome Office\u201d has around 2k. This clearly illustrates that data available for \"Consumer\" is the sum of that of other two categories, which will be taken note of for further data visualisations and analysis later on.\n\nThere are 4 categories of 'Ship Mode', where \u201cStandard Class\u201d is notably most preferred with almost 6k instances, \u201cSecond Class\u201d has almost 2k, \"First Class\" has over 1.5k, and \u201cSame Day\u201d has around 500. This clearly illustrates that data available for \"Standard Class\" has almost 3 times the proportion than that for \"Second Class\" and \"First Class\" categories, and 12 times that for \"Same Day\". This will be taken note of for further data visualisations and analysis later on.\n\nThere are 4 categories of 'Region', where \u201cWest\u201d is the highest with over 3k instances, \u201cEast\u201d is a close second at around 2.75k, \"Central\" has over 2.25k, and \u201cSouth\u201d has over 1.5. This clearly illustrates that data available for all 4 categories are differing, and this will be taken note of for further data visualisations and analysis later on.","9f7d4751":"We can see that Sub- Category which suffered heavy profit are:\n* Copiers\n* Paper\n* Phone\n* Accessories","c1a96ff4":"# Contribution of various elements of sub-category","a82cb604":"Most sales are less than USD$5k. This is likely because a majority of the Superstore's customers are of the Consumer Segment - individuals who tend to buy and spend less than the other customer Segments comprising of groups and teams from Corporates and Home Offices.\n\nA significant number of transactions under USD$2.5k result in a loss. One likely reason behind smaller transaction amounts is after accounting for higher discount deductions, where this will decrease overall profits and can even cause a loss.\n\nLarger sales above USD$2.5k are very likely to result in a profit. Profit margins may be higher, after economies of scale in cost components such as procurement, packaging, and delivery.","59326b6b":"# Total Profit for each State","a39e2ebc":"# Count of Sub-Category region wise","3b2c295c":"# Sorting data in increasing order of profit to find City which incurred maximum loss","12a890f3":"# Finding number of unique data items in each column","88b3aef0":"From above data we can say that cities which suffered most losses are:\n* 1) Lancaster\t\n* 2) Burlington\n* 3) San Antonio\n* 4) Louisville\t\n* 5) Chicago\n* 6) Newark\n* 7) Houston\n* 8) Concord\n* 9) Jacksonville\n* 10) Philadelphia","68c1491c":"# Classification of vaious sub-category into their respective categories","f74686a3":"# Comparison of total profit and sales for each sub-category","f1f2dc35":"We can see that Sub- Category which suffered no-profit no-loss are:\n* Fasteners","4e2764f9":"We can see that Sub- Category which suffered losses are:\n* Tables\n* Bookcases\n* Supplies"}}