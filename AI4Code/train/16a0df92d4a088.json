{"cell_type":{"2d28931e":"code","42a798b7":"code","a0f99741":"code","8b3eceb3":"code","5b5f8771":"code","e7a1723f":"code","67ec9e9f":"code","e6e5949e":"code","1f300b28":"code","5955ed95":"code","710a84ee":"code","7fe64e65":"code","1daa7d8b":"code","de9a93df":"code","f6bd6ef4":"code","0724967d":"code","822f5661":"code","8a434af1":"code","ce98f1c4":"code","5d7516a7":"code","b190a907":"code","69c7b6bd":"code","e73625f0":"code","2642cfb1":"code","9c75668c":"code","e7f5d748":"code","443f553d":"code","0f57fb98":"code","6279f5a7":"code","ede17aeb":"code","bed549de":"code","fbd111ab":"code","6b0e140c":"code","256b3aec":"code","cd102f04":"code","d1e310f0":"code","8a72701c":"code","96caa869":"code","4dd11069":"code","9c448fcf":"code","9b8c2734":"code","69e72ca5":"code","dbe8cc77":"code","6b92ce45":"code","8de889a0":"code","640a459b":"code","f524107f":"code","046d6f72":"code","f4cce607":"code","16a94811":"code","15e205f3":"code","179575a7":"code","cfa28ad5":"code","57f207cc":"code","9e345d5f":"code","c4a9f85a":"code","c0942d35":"code","256b447d":"code","0679bc06":"code","e9366f7f":"code","95f25617":"code","ce6aca77":"code","3ae7a079":"code","9dc8d87c":"code","f354ba1c":"code","706d3b98":"code","1dc72488":"code","b0cc6199":"code","b55515fd":"code","ab03242b":"code","d780dde3":"code","432338ab":"code","faacda7c":"code","eca2b279":"code","3fcf630f":"code","0eed06fa":"code","555cc64c":"code","91fea884":"code","c2b11152":"code","28b1dc8f":"code","596f2859":"code","9763af2b":"code","ae07675e":"code","35192eb4":"code","a05be635":"code","66ae8d92":"code","b02bda5d":"code","b0eb0a44":"code","1d788dc8":"code","beb60cd6":"code","9850a44a":"code","34c2084b":"code","bf9c1db9":"code","ed5a0335":"code","af66446d":"code","e32ddb91":"code","9ae81108":"code","d63949ec":"code","7e6352c4":"code","09456c0a":"code","b3c2e232":"code","01c8b869":"code","94cfe50c":"code","43a0b7b1":"code","4f4139a9":"code","eafc4112":"code","3cd03427":"code","af071aed":"code","413b8b1b":"code","ceb77613":"code","5bd3c2f5":"code","25ccb008":"code","efc55ced":"code","a46ca9bc":"code","963a7d8c":"code","804848b6":"code","41f799a8":"code","d2d227d0":"code","594cd334":"code","f30b4613":"code","d345bb86":"code","dc8373c2":"code","c066bd72":"code","a9a62029":"code","599092ee":"code","5adf532a":"code","22a7023f":"code","3bdaeadc":"code","1df81967":"code","85ddca7a":"code","99396b98":"code","9fd5e74a":"code","072e6078":"code","df79d363":"code","e047ef27":"code","a416b5e8":"code","dadba37b":"code","94db3341":"code","41a2a9a8":"code","c78edba7":"code","967b9792":"code","7bbb4f2b":"code","55bcf5db":"code","f360a308":"markdown","898ba10d":"markdown","f91c9004":"markdown","a2c76bd0":"markdown","dfa0c9b4":"markdown","50886618":"markdown","72995f97":"markdown","8b648aaa":"markdown","b1abfbc2":"markdown","daa89673":"markdown","f08abb29":"markdown","ceb28bcb":"markdown","113dae83":"markdown","ed9e8eae":"markdown","5106a231":"markdown","fd825bf5":"markdown","a0d71dd6":"markdown","6dfa7873":"markdown","3ff2d654":"markdown"},"source":{"2d28931e":"print('hi kaggle')","42a798b7":"e_message=\"hi kaggle\"\nprint(\"hi\")","a0f99741":"print(e_message)","8b3eceb3":"e_name=\"ebrar\"\ne_surname=\"alt\u0131n\"\n\ne_full=e_name + e_surname\n\nprint(e_full)","5b5f8771":"e_full=e_name+\" \"+e_surname\n\nprint(e_full)","e7a1723f":"e_num1=\"120\"\ne_num2=\"40\"\ne_num3=e_num1+e_num2\n\nprint(e_num3)","67ec9e9f":"e_length=len(e_full)\nprint(\"e_fullname:\",e_full,\"and length is:\",e_length)","e6e5949e":"e_title=e_full.title()\n\nprint(\"e_fullname:\",e_full, \"and title is:\" ,e_title)","1f300b28":"e_upper=e_full.upper()\n\ne_lower=e_full.lower()\n\nprint(\"e_fullname:\",e_full,\"e_upper:\",e_upper,\"e_lower:\",e_lower)","5955ed95":"e_one=e_full[0]\n\nprint(e_one)","710a84ee":"e_number1=25\ne_number2=75\ne_number3=e_number1+e_number2\n\nprint(e_number3,\"and type:\",type  (e_number3))","7fe64e65":"e_num1=32.5\ne_num2=22.5\ne_num3=e_num1+e_num2\n\nprint(e_num3)","1daa7d8b":"print(\"e_num3:\",e_num3,\"type:\",type(e_num3))","de9a93df":"e_n1=12.5\ne_n2=32.5\ne_n3=e_n1+e_n2\n\nprint(e_n3 ,type(e_n3))","f6bd6ef4":"def e_hikaggle():\n    print(\"\u0131 am here\")\n    \ne_hikaggle()    ","0724967d":"def e_hikaggle():\n    print(\"\u0131 am traying\")\n \ne_hikaggle()","822f5661":"def e_message(message1):\n    print(\"you have a message\",message1)\n","8a434af1":"e_message(\"'hi'\")","ce98f1c4":"e_message(\"'how are you'\")","5d7516a7":"def e_date(day,month,year):\n    print(\"date\", day,\"\/\",month,\"\/\",year)\n    ","b190a907":"e_date(\"27\",\"09\",\"2012\")","69c7b6bd":"def e_number(e_num1,e_num2):\n    e_number2= e_num1 + e_num2\n    print(e_number2)","e73625f0":"e_number(12,12)","2642cfb1":"#return fuction\n\ndef e_number(num1,num2,num3):\n    e_Out=num1+num2+num3*2\n    print(\"score\")\n    return e_Out","9c75668c":"e_score=e_number(2,3,5)\nprint(e_score)","e7f5d748":"#default functions:\n\ndef e_info(e_name,e_studentcount,e_city =\"SARIYER\"):\n    print(\"name:\",e_name,\"studentcount:\",e_studentcount,\"city:\", e_city)\n\n","443f553d":"e_info(\"AA\u0130HL\",123,)\ne_info(\"AA\u0130HL\",123,\"Be\u015fikta\u015f\")","0f57fb98":"#Flexible Functions\n\ndef e_Flex(e_name,*e_message):\n    print(e_name,\"you have a message:\",e_message[1])","6279f5a7":"e_Flex(\"Ebrar:\",\"nas\u0131ls\u0131n?\",\"nerdesin?\")","ede17aeb":"#Lambda Function:\n\ne_example=lambda x: x*3\nprint(\"example:\",e_example(5))\n","bed549de":"def e_area(edge1,edge2):\n    print(edge1*edge2)\n","fbd111ab":"e_area(5,5)","6b0e140c":"e_answers=[\"1a\",\"2e\",\"3d\",\"4a\"]\nprint(e_answers)\nprint(\"type of answer key is :\",type(e_answers))","256b3aec":"e_list=e_answers[2]\nprint(e_list)\nprint(\"type of e_list is : \",type(e_list))","cd102f04":"e_city=[\"istanbul\",\"ankara\",\"izmir\",\"konya\"]\nprint(e_city)\nprint(\"type of city list:\",type(e_city))","d1e310f0":"e_clist=e_city[1]\nprint(e_clist)\nprint(\"type of e_clist is:\",type(e_clist))","8a72701c":"e_clist2=e_city[-1]\nprint(e_clist2)\nprint(\"type of e_clist2 is:\",type(e_clist2))","96caa869":"e_clist3=e_city[0:2]\nprint(e_clist3)","4dd11069":"#len\ne_list2=len(e_clist3)\nprint(\"size of e_clist3 is :\",e_list2)\nprint(e_clist3)\n","9c448fcf":"#append\n\ne_clist3.append(\"ankara\")\nprint(e_clist3)","9b8c2734":"e_city.append(\"istanbul\")\nprint(e_city)\n","69e72ca5":"#reverse\n\ne_city.reverse()\nprint(e_city)","dbe8cc77":"#sort\n\ne_answers.sort()\nprint(e_answers)","6b92ce45":"#remove\n\n#first add '2e' then remove '2e'\n\ne_answers.append(\"2e\")\nprint(e_answers)","8de889a0":"e_answers.remove(\"2e\")\nprint(e_answers)","640a459b":"e_dict = {\"bulut\" : \"\u043e\u0431\u043b\u0430\u043a\u043e\" , \"etek\" : \"\u044e\u0431\u043a\u0430\" , \"f\u0131r\u00e7a\" : \"\u0449\u0435\u0442\u043a\u0430\" , \"top\" : \"\u043c\u044f\u0447\"}\n","f524107f":"print(e_dict)\nprint(type(e_dict))","046d6f72":"e_bulut=e_dict[\"bulut\"]\nprint(e_bulut)\nprint(type(e_bulut))","f4cce607":"# keys & Values\n\ne_key=e_dict.keys()\n\n\nprint(e_key)\nprint(type(e_key))\n","16a94811":"e_values = e_dict.values()\n\nprint(e_values)\nprint(type(e_values))","15e205f3":"e_factor1=25\ne_factor2=17\n\nif e_factor1>e_factor2:\n    print(e_factor1 ,\"greater than\", e_factor2)\n    \nelif e_factor1<e_factor2:\n    print(e_factor1 ,\"smaller than\",e_fator2)\n    \nelse:\n    print(\"This 2 variables are equal\")\n    ","179575a7":"e_factor1=45\ne_factor2=56\n\nif e_factor1>e_factor2:\n    print(e_factor1 ,\"greater than\", e_factor2)\n    \nelif e_factor1<e_factor2:\n    print(e_factor1 ,\"smaller than\",e_factor2)","cfa28ad5":"# < , <= , > , >= , == , <>\n\ndef e_factor(e_\u00f6ge1 , e_\u00f6ge2):\n    if e_\u00f6ge1 > e_\u00f6ge2:\n        print(e_\u00f6ge1 , \" is greater then \" , e_\u00f6ge2)\n    elif e_\u00f6ge1 < e_\u00f6ge2:\n        print(e_\u00f6ge1 , \" is smaller then \" , e_\u00f6ge2)\n    else :\n        print(\"These \" , e_\u00f6ge1 , \" variables are equal\")\n        \ne_factor(56,84)\ne_factor(54,32)\ne_factor(99,99)","57f207cc":"# Using \"\u0130N\" with list\n\n\ndef e_factors(e_\u00f6ge, e_searchList):\n    if e_\u00f6ge in e_searchList :\n        print(\"Good news ! \",e_\u00f6ge, \" is in list.\")\n    else :\n        print(e_\u00f6ge , \" is not in list. Sorry :(\")\n\nl_list = list(e_dict.keys())\nprint(l_list)\nprint(type(l_list))\n\ne_factors(\"top\" , l_list)\ne_factors(\"bulut\" , l_list)","9e345d5f":"for a in range (0,10):\n    print(\"level\",a)","c4a9f85a":"j_message=\"WHY SO SER\u0130OUS\"\nprint(j_message)","c0942d35":"for e_message in j_message:\n    print(e_message)\n    print(\"???\")","256b447d":"for e_message in j_message.split():\n    print(e_message)","0679bc06":"e_list=[1,2,3,4,5]\nprint(e_list)\nsum_list=sum(e_list)\nprint(\"sum of list is:\",sum_list)\n\nprint()\ne_cum_list=0\ne_loopindex=0\nfor e_current in e_list:\n    e_cum_list= e_cum_list+e_current\n    print(e_loopindex,\"nd values is:\",e_current)\n    print(\"cumulative is:\",e_cum_list)\n    e_loopindex=e_loopindex+1\n    print(\"------\")","e9366f7f":"i=0\nwhile(i<6):\n    print(\"hi\",i)\n    i=i+1","95f25617":"print(e_list)\nprint()\n\ni=0\nk=len(e_list)\n\nwhile(i<k):\n    print(e_list[i])\n    i=i+1","ce6aca77":"e_list2=[10,-30,600,78,-43]\n\ne_min=0\ne_max=0\n\ne_index=0\ne_len=len(e_list2)\n\nwhile(e_index<e_len):\n    e_current=e_list2[e_index]\n    \n    if e_current>e_max:\n        e_max=e_current\n        \n    if e_current<e_min:\n        e_min=e_current\n        \n        \n    e_index=e_index+1\n    \n    \nprint(\"max number is:\",e_max)\nprint(\"min number is:\",e_min)","3ae7a079":"#\u0130mport library to use\nimport numpy as np","9dc8d87c":"e_array=[1,2,3,4,5,6,7,8,9,0]\ne_array_2=np.array([1,2,3,4,5,6,7,8,9,0])","f354ba1c":"print(\"e_arry :\",e_array)\nprint(\"type of e_array:\",type(e_array))","706d3b98":"print(\"e_array_2:\",e_array_2)\nprint(\"type of e_array_2:\",type(e_array_2))","1dc72488":"#shape\ne_shape=e_array_2.shape\n\nprint(\"e_shape:\",e_shape,\"type of e_shape:\",type(e_shape))","b0cc6199":"#reshape\ne_reshape=e_array_2.reshape(5,2)\n\nprint(\"e_reshape:\",e_reshape,\"type of reshape:\",type(e_reshape))","b55515fd":"#dimension\ne_dimen=e_array_2.ndim\nprint(\"e_dimen:\",e_dimen,\"type is:\",type(e_dimen))","ab03242b":"#dtype.name\ne_dtype=e_array_2.dtype.name\nprint(\"e_dtype:\",e_dtype,\"and type is:\",type(e_dtype))","d780dde3":"#Size \ne_size=e_array_2.size\nprint(\"e_size:\",e_size,\"and type is:\",type(e_size))","432338ab":"e_array3=np.array([[1,2],[3,4],[5,6],[7,8],[9,0]])\nprint(e_array3)\n\nprint()\n\nprint(\"shape is:\",e_array3.shape)","faacda7c":"#Zeros\ne_array4=np.zeros((5,2))\nprint(e_array4)","eca2b279":"# Update an item on this array \ne_array4[3,1]=11\nprint(e_array4)","3fcf630f":"#Ones\ne_array5=np.ones((2,7))\nprint(e_array5)","0eed06fa":"#Empty\ne_array6=np.empty((1,5))\nprint(e_array6)","555cc64c":"#Arrange\ne_array7= np.arange(5,10,15)\nprint(e_array7)\nprint(e_array7.shape)","91fea884":"#Linspace\ne_array8=np.linspace(10,20,30)\ne_array9=np.linspace(20,35,40)\n\nprint(e_array8)\nprint(e_array8.shape)\n\nprint(\"********\")\n\nprint(e_array9)\nprint(e_array9.shape)","c2b11152":"#Sum  Subtact  Square\ne_np1=np.array([3,6,9])\ne_np2=np.array([5,10,15])\n\nprint(e_np1+e_np2)\nprint(e_np1-e_np2)\nprint(e_np2-e_np1)\n","28b1dc8f":"#Sinus\nprint(np.sin(e_np1))","596f2859":"#True False\ne_np_TF=e_np2<6\nprint(e_np_TF)\nprint(e_np_TF.dtype.name)","9763af2b":"# Element wise Prodcut\ne_np_1 = np.array([2,4,5])\ne_np_2 = np.array([5,10,3])\n\nprint(e_np_1*e_np_2)","ae07675e":"#Transpose\n\ne_np=np.array([[2,4,6],[3,6,9]])\ne_transpose=e_np.T\nprint(e_np)\nprint(e_np.shape)\nprint()\nprint(e_transpose)\nprint(e_transpose.shape)","35192eb4":"# Matrix Multiplication\n\ne_np2=e_np.dot(e_transpose)\nprint(e_np2)","a05be635":"# Exponential --> We will use on Statistics Lesson\n\ne_npexp=np.exp(e_np)\nprint(e_np)\nprint(e_npexp)","66ae8d92":"#Random\n\ne_np2=np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(e_np2)","b02bda5d":"#Sum Max Min\n\ne_npsum=e_np2.sum()\nprint(\"sum of array:\",e_npsum)#--> Remember ! If you get sum of array we can use that :  sum(array1)\n\nprint(\"max of array:\",e_np2.max())#--> Remember ! If you get max of array we can use that :  max(array1)\n\nprint(\"min of array:\",e_np2.min())#--> Remember ! If you get min of array we can use that :  min(array1)","b0eb0a44":"# Sum with Column or Row\n\nprint(\"Sum of Columns :\")\nprint(e_npsum.sum(axis=0))\n","1d788dc8":"# Square , Sqrt\nprint(np.square(e_npsum))\nprint()\nprint(np.sqrt(e_npsum))","beb60cd6":"e_np9=np.array([2,4,6,8])\ne_np10=np.array([50,60,70,80])\n\nprint(np.add(e_np9,e_np10))","9850a44a":"e_np11=np.array([1,2,3,4,5,6,7,8,9])\n\nprint(\"first item is:\", e_np11[0])\nprint(\"sixth item is:\",e_np11[5])","34c2084b":"# Get top 4 rows :\n\nprint(e_np11[0:5])","bf9c1db9":"# Reverse\ne_np11_rev=e_np11[::-2]\nprint(e_np11_rev)","ed5a0335":"e_np12=np.array([[3,6,9,12,15,18],[6,12,18,24,30,36]])\nprint(e_np12)\nprint()\nprint(e_np12[1,3])#--> Get a row\nprint()\ne_np12[1,3]=200 #--> Update a row\nprint(e_np12)","af66446d":"# Get all rows but 3rd columns :\nprint(e_np12[:,2])","e32ddb91":"#Get 2nd row but 2,3,4th columns\nprint(e_np12[1,1:3])","9ae81108":"# Get last row all columns\nprint(e_np12[-2,:])","d63949ec":"# Get last columns but all rows\nprint(e_np12[:,-2])","7e6352c4":"#Flatten\n\ne_np13=np.array([[1,2,5],[5,10,15,],[20,25,30],[26,87,13]])\ne_np14=e_np13.ravel()\n\nprint()\n\nprint(e_np13)\nprint(\"Shape of e_np13 is : \",e_np13.shape)\nprint(e_np14)\nprint(\"Shape of v_np14 is : \",e_np14.shape)","09456c0a":"# Reshape\ne_np15=e_np14.reshape(2,6)\nprint(e_np15)\nprint(\"Shape of v_np15 is : \",e_np15)","b3c2e232":"e_np16=e_np15.T\nprint(e_np16)\nprint(\"Shape of v_np16 is :\",e_np16.shape)","01c8b869":"e_np17=np.array([[11,12],[33,34],[55,56]])\n\nprint(e_np17)\nprint()\nprint(e_np17.reshape(2,3))\nprint()\nprint(e_np17)#--> It has not changed !!!\n\n\n","94cfe50c":"# Resize\ne_np17.resize((2,3))\nprint(e_np17) # --> Now it changed !  Resize can change its shape\n","43a0b7b1":"e_list1=[2,3,4,5]\ne_np20=np.array(e_list1)\nprint()\nprint(e_list1)\nprint(\"type of e_list1:\",type(e_list1))\nprint()\nprint(e_np20)\nprint(\"type of  e_np20:\",type(e_np20))","4f4139a9":"e_list2=list(e_np20)\nprint(e_list2)\nprint(\"type of e_list2:\",type(e_list2))","eafc4112":"e_list3=e_list2\ne_list4=e_list2\n\nprint(e_list2)\nprint()\nprint(e_list3)\nprint()\nprint(e_list4)","3cd03427":"e_list2[2]=33\n\nprint(e_list2)\nprint()\nprint(e_list3)# --> Same address with list2\nprint()\nprint(e_list4)# --> Same address with list2","af071aed":"e_list5=e_list.copy()\ne_list6=e_list2.copy()\n\nprint(e_list5)\nprint()\nprint(e_list6)","413b8b1b":"e_list[2]=13\n\nprint(e_list2)\nprint()\nprint(e_list5)# --> Not same address with list2\nprint()\nprint(e_list6)# --> Not same address with list2","ceb77613":"# Import Library\nimport pandas as pd","5bd3c2f5":"e_dict1={\"Region\":[\"Marmara Region\",\"Central Anatolia Region\",\"Black Sea Region\",\"Aegean Region\",\"Eastern Anatolia Region\"],\n       \"City\":[\"\u0130stanbul\",\"Nev\u015fehir\",\"Samsun\",\"Afyon\",\"A\u011fr\u0131\"], \n        \"Plate\" :[\"34\",\"50\",\"55\",\"03\",\"04\"]}\n\ne_dataframe=pd.DataFrame(e_dict1)\n\nprint(e_dataframe)\n\nprint()\n\nprint(\"type of e_dataframe is:\",type(e_dataframe))","25ccb008":"# get top 5 rows\n\ne_head=e_dataframe.head()\n\nprint(e_head)\nprint()\nprint(\"type of e_head is:\", type(e_head))","efc55ced":"# get top 100 rows\nprint(e_dataframe.head(55))","a46ca9bc":"e_tail=e_dataframe.tail()\nprint(e_tail)\nprint()\nprint(\"type of e_tail is:\",type(e_tail))","963a7d8c":"e_columns=e_dataframe.columns\n\nprint(e_columns)\nprint()\nprint(\"type of e_columns is:\",type(e_columns))","804848b6":"e_info=e_dataframe.info()\nprint(e_info)\nprint()\nprint(\"type of e_info is:\",type(e_info))","41f799a8":"e_dtypes=e_dataframe. dtypes\nprint(e_dtypes)\nprint()\nprint(\"type of e_dtypes is :\",type(e_dtypes))\n","d2d227d0":"e_describe=e_dataframe.describe()\nprint(e_describe)\nprint()\nprint(\"type of e_describe is:\",type(e_describe))","594cd334":"e_region=e_dataframe[\"Region\"]\nprint(e_region)\nprint()\nprint(\"type of e_region is:\",type(e_region))","f30b4613":"# Add new column\n\ne_district=[\"Sar\u0131yer\",\"Ac\u0131g\u00f6l\",\"\u00c7ar\u015famba\",\"Emirda\u011f\",\"Ta\u015fl\u0131\u00e7ay\"]\ne_dataframe[\"District\"]=e_district\nprint(e_dataframe.head())","d345bb86":"# Get all rows ,  1 column\n\ne_city=e_dataframe.loc[:,\"City\"]\nprint(e_city)\nprint()\nprint(\"type of e_city is:\",type(e_city))","dc8373c2":"e_plate=e_dataframe.loc[0:4,\"Plate\"]\nprint(e_plate)","c066bd72":"e_f=e_dataframe.loc[:,[\"Plate\",\"District\",\"...\"]] #--> \"...\" not defined !!!\nprint(e_f)\n","a9a62029":"e_reverse=e_dataframe.loc[::-1,:]\nprint(e_reverse)","599092ee":"print(e_dataframe.loc[:,:\"City\"])\nprint()\nprint(e_dataframe.loc[:,\"Plate\":])","5adf532a":"#Get data with column index (not column name)\nprint(e_dataframe.iloc[:,2])","22a7023f":"e_altitude=[40,1.224,4,1010,1.640]\ne_dataframe[\"Altitude\"]=e_altitude\n\ne_filter1=e_dataframe.Altitude>4\n\nprint(e_filter1)\n","3bdaeadc":"e_filter2=e_dataframe[\"Altitude\"]<7\nprint(e_filter2)","1df81967":"print(e_dataframe[e_filter1&e_filter2])","85ddca7a":"print(e_dataframe[e_dataframe[\"Plate\"]==\"50\"])","99396b98":"e_mean1=e_dataframe[\"Plate\"].mean()\nprint(e_mean1)\n\ne_mean2=np.mean(e_dataframe[\"Plate\"])\nprint(e_mean2)","9fd5e74a":"for a in e_dataframe[\"Altitude\"]:\n    print(a)","072e6078":"e_dataframe[\"Altitude LEVEL\"] = [\"Low\" if e_mean1 > a else \"HIGH\" for a in e_dataframe[\"Altitude\"]]\nprint(e_dataframe)","df79d363":"print(e_dataframe.columns)\n\ne_dataframe.columns = [a.lower() for a in e_dataframe.columns]\n\nprint(e_dataframe.columns)","e047ef27":"e_dataframe.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>1) else a for a in e_dataframe.columns]\nprint(e_dataframe.columns)","a416b5e8":"e_dataframe.drop([\"altitude\"],axis=1,inplace = True) #--> inplace = True must be written\nprint(e_dataframe)","dadba37b":"v_data1 = e_dataframe.head()\nv_data2 = e_dataframe.tail()\n\nprint(v_data1)\nprint()\nprint(v_data2)","94db3341":"v_dataConcat1 = pd.concat([v_data1,v_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nv_dataConcat2 = pd.concat([v_data2,v_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(v_dataConcat1)\nprint()\nprint(v_dataConcat2)","41a2a9a8":"e_region = e_dataframe[\"region\"]\ne_city = e_dataframe[\"city\"]\n\nv_dataConcat3 = pd.concat([e_region,e_city],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nv_dataConcat4 = pd.concat([e_region,e_city],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(v_dataConcat3)\nprint()\nprint(v_dataConcat4)","c78edba7":"e_number1=[-1,-2,-3,-4,-5]\ne_dataframe[\"Number\"]=e_number1\nprint(e_dataframe)","967b9792":"e_dataframe[\"Number\"] = [a*2 for a in e_dataframe[\"Number\"]]\nprint(e_dataframe)","7bbb4f2b":"e_altitude=[40,1.224,4,1010,1.640]\ne_dataframe[\"Altitude\"]=e_altitude","55bcf5db":"def e_multiply(e_altitude):\n    return e_altitude*3\n\ne_dataframe[\"Number\"] = e_dataframe[\"Altitude\"].apply(e_multiply)\nprint(e_dataframe)","f360a308":"9.4.Filtering\n\n","898ba10d":"8.6.Convert and Copy Array\n\n","f91c9004":"9.1.Introduction\n\n","a2c76bd0":"8.1.Basic","dfa0c9b4":"9.2.Basic Methods\n\n","50886618":"9.7.Transforming Data\n\n","72995f97":"While Loop","8b648aaa":"2)FUNCT\u0130ONS","b1abfbc2":"**3)List**","daa89673":"9. Pandas\n","f08abb29":"> ****8.NUMPY****","ceb28bcb":"9.6.Drop and Concatenating Data\n\n","113dae83":"For Loop","ed9e8eae":"Dictionary","5106a231":"8.3. Indexing and Slicing\n\n","fd825bf5":"8.4.Shape Manipulation\n\n","a0d71dd6":"def e_message(message2):\n    print(\"you have a message\",message2)\n  ","6dfa7873":"***\u0130f Else***","3ff2d654":"9.3.Indexing and Slicing\n\n"}}