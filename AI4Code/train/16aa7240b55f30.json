{"cell_type":{"354b3981":"code","33734255":"code","a7883ce7":"code","321e0924":"code","653ae2a9":"code","00d0cf6b":"code","49eabaf1":"code","6d8ffd4f":"code","c050310b":"code","6cd7a458":"code","abf434a9":"code","f99b1cb3":"code","2c0c65d5":"code","3522ab3a":"code","c0d4d019":"code","072106ff":"code","e2121e1e":"code","a748221f":"code","51699edd":"code","37f332bc":"code","436592c4":"code","66610cac":"markdown"},"source":{"354b3981":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n%matplotlib inline\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","33734255":"# plotly express\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)\nimport plotly.express as px\nimport plotly.graph_objects as go \n# fig = px.bar(temp, x = \"Fruit\", y = \"Number Eaten\", color = \"Contestant\", barmode = \"group\") # if barmode is not set, then it will be stacked. just check. \n# fig.show()","a7883ce7":"fields = ['-', 'Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3', 'Q4', 'Q15', 'Q20', 'Q21', 'Q25', 'Q26']","321e0924":"kagglers_profile = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=lambda col: col.startswith('Q7_') or col.startswith('Q16_') or col.startswith('Q17_') or col.startswith('Q40_') or col in fields)","653ae2a9":"kagglers_history = pd.read_csv('\/kaggle\/input\/kaggle-data-science-survey-20172021\/kaggle_survey_2017_2021.csv', usecols=lambda col: col.startswith('Q7_') or col.startswith('Q16_') or col.startswith('Q17_') or col.startswith('Q40_') or col in fields)","00d0cf6b":"kagglers_profile = kagglers_profile.drop([0])","49eabaf1":"age_profile = kagglers_profile['Q1'].value_counts()\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x = age_profile.index, y = age_profile.values, marker_color = '#FFA15A'))\n\nfig.update_layout(plot_bgcolor = \"white\",\n                 font  = dict(color = \"#636EFA\"), \n                 title = dict(text = \"Kagglers Age\"), \n                 xaxis = dict(title = \"Age Range\", linecolor = \"#21DBAA\"), \n                 yaxis = dict(title = \"Count\", linecolor = \"#DB9021\"))\nfig.show()","6d8ffd4f":"kagglers_profile['Q25'] = kagglers_profile['Q25'].str.replace('$', '')\nkagglers_profile['Q25'] = kagglers_profile['Q25'].str.replace('>', '')\nkagglers_profile['Q25'] = kagglers_profile['Q25'].str.replace(',', '')\nkagglers_profile['Q25'] = kagglers_profile['Q25'].str.rsplit('-', 1).str.get(0)\n# kagglers_profile['Q25'] = kagglers_profile['Q25'].str.join(\"+\")","c050310b":"kagglers_profile['Q25'] = kagglers_profile['Q25'].astype('float')","6cd7a458":"kagglers_profile = kagglers_profile.sort_values(['Q25'])","abf434a9":"kagglers_profile['Q25'].unique()","f99b1cb3":"gender = kagglers_profile['Q2'].value_counts()\ngender.head()","2c0c65d5":"gender_salary = kagglers_profile.groupby(['Q2', 'Q25']).size().reset_index().rename(columns = {0:'Count'})\ngender_salary['pct_by_gender'] = gender_salary['Count'] \/ gender_salary.groupby(['Q2'])['Count'].transform('sum') * 100\ngender_salary.head()","3522ab3a":"fig = go.Figure()\nfor gender, group in gender_salary[gender_salary['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q25'].astype(str), y = group['pct_by_gender'], name = gender))\nfig.update_layout(barmode=\"stack\", \n                 plot_bgcolor = \"white\")\nfig.show()","c0d4d019":"fig = go.Figure()\nfor gender, group in gender_salary[~gender_salary['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q25'].astype(str), y = group['pct_by_gender'], name = gender))\nfig.update_layout(barmode=\"stack\", \n                 plot_bgcolor = \"white\")\nfig.show()","072106ff":"age_gender = kagglers_profile.groupby(['Q1', 'Q2']).size().reset_index().rename(columns = {0:'Count'})\nage_gender.head()","e2121e1e":"fig = go.Figure()\nfor gender, group in age_gender[age_gender['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q1'], y = group['Count'], name = gender))\nfig.update_layout(barmode=\"relative\", \n                 plot_bgcolor = \"white\")\nfig.show()","a748221f":"fig = go.Figure()\nfor gender, group in age_gender[~age_gender['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q1'], y = group['Count'], name = gender))\nfig.update_layout(barmode=\"relative\", \n                 plot_bgcolor = \"white\")\nfig.show()","51699edd":"education_gender = kagglers_profile.groupby(['Q4', 'Q2']).size().reset_index().rename(columns = {0:'Count'})\neducation_gender['pct_by_gender'] = education_gender['Count'] \/ education_gender.groupby(['Q2'])['Count'].transform('sum') * 100\neducation_gender.head()","37f332bc":"fig = go.Figure()\nfor gender, group in education_gender[education_gender['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q4'], y = group['pct_by_gender'], name = gender))\nfig.update_layout(barmode=\"relative\", \n                 plot_bgcolor = \"white\")\nfig.show()","436592c4":"fig = go.Figure()\nfor gender, group in education_gender[~education_gender['Q2'].isin(['Man', 'Woman'])].groupby(\"Q2\"):\n   fig.add_trace(go.Bar(x = group['Q4'], y = group['pct_by_gender'], name = gender))\nfig.update_layout(barmode=\"relative\", \n                 plot_bgcolor = \"white\")\nfig.show()","66610cac":"In the low pay brackets the percent of women is higher. With salary growing we can see that men prevail compared to women. "}}