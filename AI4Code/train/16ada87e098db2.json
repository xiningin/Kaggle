{"cell_type":{"aa3b0814":"code","2bb563a0":"code","db4424dc":"code","df38e5e3":"code","c8e3f535":"code","7ecc63a6":"code","94773153":"code","8836a26d":"code","e1451933":"code","1ea02a3a":"code","a6fe7bfb":"code","768fa03f":"code","c826f90e":"code","0f34be00":"code","00b9a35f":"code","7492024b":"code","74bf125a":"code","c4a09dd3":"code","13090bb5":"code","7dca4bca":"code","c9f5770a":"code","e6d059dd":"code","6737cbb9":"code","fd6e0bd8":"code","55f570c0":"code","ce3bf3b5":"code","570bc20c":"code","5ef8f868":"code","da628eab":"code","ead9f89b":"code","2bb702f9":"code","ff312ce2":"code","1b1b65be":"code","d257ec14":"code","949ce63f":"code","03a1b1e2":"code","c84e5219":"code","fa0c6e56":"code","95075d35":"code","4cdd54cd":"code","8fc76ff4":"code","ce25cf47":"code","d4305539":"code","5c712d46":"code","d4d7a01d":"code","b368ad7e":"code","55dd4cb4":"code","1c80e9af":"code","361ea5d7":"code","34bb9889":"markdown","5b5573a6":"markdown","e128a332":"markdown","d28fa51d":"markdown","d2dc80e9":"markdown"},"source":{"aa3b0814":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np","2bb563a0":"plt.plot()\nplt.show()\n#above lines plots an empty figure","db4424dc":"plt.plot([1,2,3,4])\nplt.show()","df38e5e3":"x=[1,2,3,4]\ny=[11,22,33,44]\nplt.plot(x,y,color='green')\nplt.show()","c8e3f535":"#1st method\nfig = plt.figure()  #creates figure\nax=fig.add_subplot() #adds some axes\nfig.show()\n","7ecc63a6":"#2nd method\nfig = plt.figure()\nax = fig.add_axes([1,1,1,1])\nax.plot(x,y)\nplt.show()","94773153":"#3rd method-Recommended\nfig,ax=plt.subplots()\nax.plot(x,y);","8836a26d":"fig,ax=plt.subplots(figsize = (5,5))\nax.set(title=\"Simple plot\",\n      xlabel = \"x axis\",\n      ylabel = \"y axis\")  # to customize the plot\n\nax.plot(x,y);\nfig.savefig(\"simpleplot.png\")  # to save the figure","e1451933":"import numpy as np","1ea02a3a":"#linspace generates numbers between given range and count will also be given, returns a numpy array\nx = np.linspace(0,10,100)\nx[:10]","a6fe7bfb":"#Plot the data and create a line plot\nfig,ax= plt.subplots()\nax.plot(x,x**2);\n","768fa03f":"#Use same data to make scatter plot\nfig,ax = plt.subplots()\nax.scatter(x,np.exp(x));","c826f90e":"#Another Scatter Plot\n#Use same data to make scatter plot\nfig,ax = plt.subplots()\nax.scatter(x,np.sin(x));","0f34be00":"#Bar plot\nnut_butter_prices = {\"Almond butter\": 15,\n                    \"Peanut butter\": 8,\n                     \"Cashew butter\": 12}\nax, fig = plt.subplots()\nplt.bar(nut_butter_prices.keys(), height=nut_butter_prices.values());\nplt.title(\"Nut butter Graph\");\nplt.xlabel('Types of butter')\nplt.ylabel(\"Prices\");","00b9a35f":"#Horizontal Bar plot\nnut_butter_prices = {\"Almond butter\": 15,\n                    \"Peanut butter\": 8,\n                     \"Cashew butter\": 12}\nax, fig = plt.subplots()\nplt.barh(list(nut_butter_prices.keys()), list(nut_butter_prices.values()))\nplt.title(\"Nut butter Graph\");\nplt.ylabel('Types of butter')\nplt.xlabel(\"Prices\");","7492024b":"#Make some data\nx = np.random.randn(1000)","74bf125a":"x[:5]","c4a09dd3":"#Plot a histogram\nax,fig = plt.subplots()\nplt.hist(x);\n","13090bb5":"#Option1 tuple method\nfig,((ax1,ax2),(ax3,ax4))= plt.subplots(nrows = 2,\n                                       ncols= 2,\n                                       figsize=(10,5))\nax1.plot(x,x*2)  # provide data to individual plot\nax2.bar(nut_butter_prices.keys(),nut_butter_prices.values());\nax3.scatter(np.random.random(5),np.random.random(5))\nax4.hist(np.random.randn(1000));","7dca4bca":"#Option 2 by list method\nfig, ax = plt.subplots(nrows = 2,\n                        ncols= 2,\n                       figsize=(10,5))\nax[0,0].plot(x,x*2)  # provide data to individual plot\nax[0,1].bar(nut_butter_prices.keys(),nut_butter_prices.values());\nax[1,0].scatter(np.random.random(5),np.random.random(5))\nax[1,1].hist(np.random.randn(1000));\n","c9f5770a":"car_sales = pd.read_csv(r\"..\/input\/carsales\/car-sales.csv\",engine='python')\ncar_sales","e6d059dd":"fig,ax = plt.subplots()\nax.bar(car_sales.Make,car_sales.Price)","6737cbb9":"#Sample graph\nts = pd.Series(np.random.randn(1000),index=pd.date_range('1\/1\/2020',periods=1000))\nts= ts.cumsum()\nts.plot();","fd6e0bd8":"#Manipulate the Price Column\ncar_sales[\"Price\"] = car_sales[\"Price\"].str.replace('[\\$\\,\\.]', '')","55f570c0":"car_sales","ce3bf3b5":"#remove last zeros\ncar_sales.Price = car_sales[\"Price\"].str[:-2] #only run once else it will keep removing","570bc20c":"car_sales","5ef8f868":"car_sales[\"Sale Date\"] = pd.date_range(\"1\/1\/2020\",periods=len(car_sales))\ncar_sales","da628eab":"car_sales[\"Total sales\"] =car_sales[\"Price\"].astype(int).cumsum() # astype used as the Price column was a string,\n#it was concatenating","ead9f89b":"car_sales","2bb702f9":"# Now plot the total sales\ncar_sales.plot(x= \"Sale Date\",y= \"Total sales\");","ff312ce2":"car_sales\n","1b1b65be":"r1 = np.random.rand(10,4)\n\ndf= pd.DataFrame(r1, columns=[\"a\",\"b\",\"c\",\"d\"])\ndf","d257ec14":"df.plot(kind=\"bar\");","949ce63f":"#Plot a heart disease data graph\nheart_disease = pd.read_csv(r\"..\/input\/heartdisease\/heart-disease.csv\")\nheart_disease.head()","03a1b1e2":"#create a histogram on age column\n\nheart_disease[\"age\"].plot(kind=\"hist\",bins=60);","c84e5219":"heart_disease.plot.hist(figsize=(10,10),subplots = True);","fa0c6e56":"over_50 = heart_disease[heart_disease[\"age\"]>50]\nover_50.head()","95075d35":"over_50.plot(kind=\"scatter\",\n             x= \"age\",\n            y=\"chol\",\n            c='target');","4cdd54cd":"fig,ax=plt.subplots(figsize=(10,6))\nover_50.plot(kind=\"scatter\",\n             x= \"age\",\n            y=\"chol\",\n            c='target',\n            ax=ax);","8fc76ff4":"# To plot by OO method\nfig,ax= plt.subplots(figsize=(5,5))\nscatter = ax.scatter(x=over_50['age'],\n                   y=over_50['chol'],\n                    c= over_50['target'])\n\n#customize\nax.set(title=\"Heart and Cholesterol Levels\",\n      xlabel=\"Age\",\n      ylabel=\"Cholesterol\");\n\n#add a legend-> it will unpack the c from scatter\nax.legend(*scatter.legend_elements(),title='target');\n\n#add a horizontal line\nax.axhline(over_50[\"chol\"].mean(),\n          linestyle=\"--\");","ce25cf47":"# Subplot of colesterol and thalach\nfig, (ax0,ax1)=plt.subplots(figsize=(10,10),\n                           nrows=2,\n                           ncols=1,\n                           sharex=True)\nscatter = ax0.scatter(x=over_50[\"age\"],\n                    y=over_50[\"chol\"],\n                    c=over_50[\"target\"],\n                     )\n\nscatter =  ax1.scatter(x=over_50[\"age\"],\n                      y=over_50[\"thalach\"],\n                      c=over_50[\"target\"],\n                       )\n#customizing ax0\nax0.set(title=\"Age vs cholesterol levels\",\n       \n       ylabel=\"Cholesterol Level\");\n\nax0.legend(*scatter.legend_elements(),title=\"target\");\nax0.axhline(over_50[\"chol\"].mean())\n\n#customizing ax1\nax1.set(title=\"Age vs max heart rate levels\",\n       xlabel = \"Age\",\n       ylabel=\"Max heart rate level\");\n\nax1.legend(over_50[\"target\"]);\nax1.legend(*scatter.legend_elements(),title=\"target\");\nax1.axhline(over_50[\"thalach\"].mean());\n\nfig.suptitle(\"Heart Disease\",\n            fontsize= 20,\n            fontweight=\"bold\");","d4305539":"plt.style.available","5c712d46":"plt.style.use(\"grayscale\")\ncar_sales[\"Price\"].astype(int).plot();","d4d7a01d":"x1= np.random.rand(10,4)\nx1","b368ad7e":"x1_d= pd.DataFrame(x1, columns=[\"a\",\"b\",\"c\",\"d\"])\nx1_d","55dd4cb4":"ax= x1_d.plot(kind='bar')\nax.set(title=\"Random Graph\",\n      xlabel= 'Column name',\n      ylabel='Ranges');","1c80e9af":"# set style\nplt.style.use('seaborn')\n\n# Subplot of colesterol and thalach\nfig, (ax0,ax1)=plt.subplots(figsize=(10,10),\n                           nrows=2,\n                           ncols=1,\n                           sharex=True)\nscatter = ax0.scatter(x=over_50[\"age\"],\n                    y=over_50[\"chol\"],\n                    c=over_50[\"target\"],\n                     cmap= 'winter')\n\nscatter =  ax1.scatter(x=over_50[\"age\"],\n                      y=over_50[\"thalach\"],\n                      c=over_50[\"target\"],\n                       cmap='winter')\n#customizing ax0\nax0.set(title=\"Age vs cholesterol levels\",\n       \n       ylabel=\"Cholesterol Level\");\n\nax0.legend(*scatter.legend_elements(),title=\"target\");\nax0.axhline(over_50[\"chol\"].mean(),\n           linestyle='--')\n\n#customizing ax1\nax1.set(title=\"Age vs max heart rate levels\",\n       xlabel = \"Age\",\n       ylabel=\"Max heart rate level\");\n\nax1.legend(over_50[\"target\"]);\nax1.legend(*scatter.legend_elements(),title=\"target\");\nax1.axhline(over_50[\"thalach\"].mean(),\n           linestyle='--');\n\nfig.suptitle(\"Heart Disease\",\n            fontsize= 20,\n            fontweight=\"bold\");","361ea5d7":"#to save the plotted graph locally\nfig.savefig(\"heart_disease_plot.png\")","34bb9889":"## Plotting from Pandas Dataframe","5b5573a6":"## Subplots","e128a332":"## Customizing Matplotlib and styling","d28fa51d":"# Intoduction to Matplotlib","d2dc80e9":"## Making figures with Numpy Array"}}