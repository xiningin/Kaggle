{"cell_type":{"66fbfcfd":"code","698c3c31":"code","f1e4d16a":"code","d1cc8194":"code","7cd06ded":"code","c29e990c":"code","2e496f66":"code","df7bef5b":"code","11e95bd7":"code","f6e109cd":"markdown","109b6f2b":"markdown"},"source":{"66fbfcfd":"import pandas as pd\nimport numpy as np \nfrom sklearn.svm import SVC\nimport dask\nfrom sklearn import metrics\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import roc_auc_score\nfrom tqdm import tqdm_notebook\nfrom sklearn.preprocessing import LabelEncoder","698c3c31":"fnc = pd.read_csv('..\/input\/trends-assessment-prediction\/fnc.csv')\nloading = pd.read_csv('..\/input\/trends-assessment-prediction\/loading.csv')\nlabels = pd.read_csv('..\/input\/trends-assessment-prediction\/train_scores.csv')\nsites = pd.read_csv('..\/input\/trends-assessment-prediction\/reveal_ID_site2.csv')","f1e4d16a":"loading = loading.drop(['IC_20'], axis=1)","d1cc8194":"fnc_features, loading_features = list(fnc.columns[1:]), list(loading.columns[1:])\ndf = fnc.merge(loading, on=\"Id\")","7cd06ded":"sites = np.array(sites).reshape(sites.shape[0])\nsite1 = df[~df['Id'].isin(set(sites))]\nsite2 = df[df['Id'].isin(set(sites))]","c29e990c":"site1['Label'] = 0\nsite2['Label'] = 1","2e496f66":"FNC_SCALE = 1\/600\n\nsite1[fnc_features] *= FNC_SCALE\nsite2[fnc_features] *= FNC_SCALE","df7bef5b":"df = pd.concat([site1, site2], axis=0)\nX = df.iloc[:, :-1]\ny = df.loc[:, 'Label']\n\n# one hot\nlabel_encoder = LabelEncoder()\ny = label_encoder.fit_transform(y)\n","11e95bd7":"model = SVC(decision_function_shape='ovo', class_weight=\"balanced\")\n\nskf = StratifiedKFold(n_splits=4)\nskf.get_n_splits(X, y)\nfeatures = loading_features + fnc_features\nfor train_ind, val_ind in tqdm_notebook(skf.split(X, y)):\n    train_df, val_df = df.iloc[train_ind], df.iloc[val_ind]\n    model.fit(train_df[features], train_df[\"Label\"])\n    \n    y_scores = model.predict(val_df[features])\n    print(roc_auc_score(val_df[\"Label\"], y_scores))","f6e109cd":"In this notebook I make a simple classifier to look into the site 1 vs site 2 bias. I use an SVM since it works well for this data, which is very high dimensional. \n\nThe AUC hovers around ~0.68 for different folds of the data, meaning that the site 2 sample have some discriminatory features. ","109b6f2b":"Drop features where there is a discrepency between test and train data. This notebook is a good reference to see the difference in distribution of features\nhttps:\/\/www.kaggle.com\/mks2192\/reading-matlab-mat-files-and-eda"}}