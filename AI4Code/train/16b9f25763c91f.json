{"cell_type":{"1c4da249":"code","8580d7c6":"code","833fbac9":"code","b785e9b1":"code","a90577cc":"code","593b6e27":"code","a57be0ac":"code","f115c701":"code","724bc176":"code","82a1f9c0":"code","7444be8b":"code","8daceed9":"code","ae78b929":"code","ea065cf1":"markdown","87467dec":"markdown","3566d968":"markdown","a162f7f4":"markdown","f1fc5cb3":"markdown","907b4c39":"markdown"},"source":{"1c4da249":"import os\nfrom PIL import Image\nimport numpy as np\nimport random\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import models, layers, losses","8580d7c6":"train_dir = \"\/kaggle\/input\/gtsrb-german-traffic-sign\/train\"","833fbac9":"train_datagen = ImageDataGenerator(validation_split=0.2, rescale=1.\/255)\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    subset='training',\n    target_size=(32,32),\n    batch_size=32,\n    color_mode='rgb',    \n    shuffle=True,\n    seed=42,\n    class_mode='categorical')","b785e9b1":"input_shape = (32,32,3) # img_rows, img_colums, color_channels\nnum_classes = 43","a90577cc":"## Build Model\ninputs = layers.Input(shape=input_shape)\n# 1st Conv layer \nx = layers.Conv2D(32, kernel_size = (3, 3), activation = 'relu', padding = 'same')(inputs)\nx = layers.Conv2D(32, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.MaxPool2D(pool_size = (2, 2))(x)\n# 2nd Conv layer        \nx = layers.Conv2D(64, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.Conv2D(64, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.MaxPool2D(pool_size = (2, 2))(x)\n# Fully Connected layer        \nx = layers.Flatten()(x)\nx = layers.Dense(256)(x)\nx = layers.Dropout(0.5)(x)\noutputs = layers.Dense(num_classes, activation=\"softmax\")(x)\n\nmodel = models.Model(inputs=inputs, outputs=outputs)\n\nmodel.summary()","593b6e27":"# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","a57be0ac":"STEP_SIZE_TRAIN=train_generator.n\/\/train_generator.batch_size\nnum_epochs = 10","f115c701":"# Train Model\nhistory = model.fit(train_generator,steps_per_epoch=STEP_SIZE_TRAIN,epochs=num_epochs) #, callbacks=[checkpoint])","724bc176":"import pandas as pd\ndf = pd.read_csv('\/kaggle\/input\/gtsrb-german-traffic-sign\/Test.csv')\ndf.head()","82a1f9c0":"!mkdir -p Dataset\/Test","7444be8b":"from shutil import copyfile\nsrc_dir  = \"\/kaggle\/input\/gtsrb-german-traffic-sign\/\"\ntest_dir = \".\/Dataset\/Test\/\"\nfor i in range(len(df)):\n    if not os.path.exists(test_dir+str(df.iloc[i].ClassId)):\n        os.makedirs(test_dir+str(df.iloc[i].ClassId))\n    copyfile(src_dir+df.iloc[i].Path, test_dir+str(df.iloc[i].ClassId)+'\/'+df.iloc[i].Path[5:])","8daceed9":"test_datagen = ImageDataGenerator(rescale=1.\/255)\n\ntest_generator = test_datagen.flow_from_directory(\n    test_dir,\n    target_size=(32,32),\n    batch_size=32,\n    color_mode='rgb',    \n    shuffle=True,\n    seed=42,\n    class_mode='categorical')","ae78b929":"STEP_SIZE_TEST =test_generator.n\/\/test_generator.batch_size\n\nscore = model.evaluate(test_generator, steps=STEP_SIZE_TEST)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])","ea065cf1":"## GTSRB Dataset\nThe dataset features 43 different signs under various sizes, lighting conditions, occlusions and is very similar to real-life data. Training set includes about 39000 images while test set has around 12000 images. <br \/>\n![GTSRB](https:\/\/chsasank.github.io\/assets\/images\/traffic\/classes.jpg)","87467dec":"## Build Model","3566d968":"## Data Augmentation","a162f7f4":"# German Traffic Sign Recognition","f1fc5cb3":"## Train Model","907b4c39":"## Test Model"}}