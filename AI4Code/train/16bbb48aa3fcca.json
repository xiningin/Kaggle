{"cell_type":{"299bcb4f":"code","36c0fd7c":"code","4ac0eda2":"code","c21b10ab":"code","66d73804":"code","e80a99aa":"code","4d229e19":"code","202bdfd9":"code","3c191081":"code","8b748dde":"code","b469d1b0":"code","775a3761":"code","a6dfee3b":"code","aaa07883":"code","e1387414":"code","4828015c":"code","1f5108c2":"code","29907467":"code","6949d195":"code","bb4f6e55":"code","72530414":"code","dd3b7267":"code","a015f3f7":"code","6fe3f985":"code","166085a6":"code","22d30d4b":"code","debe2082":"code","62e87f70":"code","e2e81737":"code","e83a6864":"code","7d099dc4":"code","012ca532":"markdown","3c97d537":"markdown","0d8a4606":"markdown","ed5d8719":"markdown","b6e043a2":"markdown","8a0df8af":"markdown"},"source":{"299bcb4f":"import os\nimport numpy as np \nimport pandas as pd \nimport math\n\nfrom matplotlib import pyplot as plt","36c0fd7c":"with open(\"..\/input\/hashcode-drone-delivery\/busy_day.in\",\"r\") as text:\n    data=text.read()\n    data=data.split(\"\\n\")\n    index=0\n    #Simulation Parameters\n    simulation_parameters=data[index].split(\" \")\n    index=index+1\n    products_weight={\"item_id\":[],\"weight\":[]}\n    \n    drone_parameters={\"drone_id\":[],\"momentary_row\":[],\"momentary_column\":[],\"max_load\":[],\"total_road\":[]}\n    \n    for i in range(0,int(simulation_parameters[2])):\n        drone_parameters[\"drone_id\"].append(i)\n        drone_parameters[\"momentary_row\"].append(0)\n        drone_parameters[\"momentary_column\"].append(0)\n        drone_parameters[\"max_load\"].append(int(simulation_parameters[4]))\n        drone_parameters[\"total_road\"].append(0)\n\n    #Product Parameters\n    for i in range(0,int(data[index])):\n        products_weight[\"item_id\"].append(i)\n\n\n    \n    \n    index=index+1\n    for i in data[index].split(\" \"):\n        products_weight[\"weight\"].append(int(i))\n        \n\n\n    #Warehouses Parameters\n    index=index+1\n\n    warehouses_number=int(data[index])\n    warehouses={\"warehouses_id\":[],\"location_row\":[],\"location_column\":[]}\n    for i in products_weight[\"item_id\"]:\n        warehouses[i]=[]\n\n    index=index+1\n    fix_index=index\n    for i in range(0,warehouses_number):\n        index=fix_index+i*2\n        warehouses[\"warehouses_id\"].append(i)\n        warehouses[\"location_row\"].append(data[index].split(\" \")[0])\n        warehouses[\"location_column\"].append(data[index].split(\" \")[1])\n        items_number=data[index+1].split(\" \")\n        k=0\n        for j in items_number:\n            warehouses[products_weight[\"item_id\"][k]].append(int(j))\n            k=k+1\n\n    #Customer Orders Parameters\n    index=index+2\n\n    customer_orders_number=int(data[index])\n\n    index=index+1\n\n    customer={\"customer_id\":[],\"location_row\":[],\"location_column\":[],\"customer_number\":[]}\n    customer_orders={\"order_id\":[],\"customer_id\":[],\"order\":[]}\n\n    fix_index=index\n    k=0\n    for i in range(0,customer_orders_number):\n        index=fix_index+i*3\n        customer[\"customer_id\"].append(i)\n        customer[\"location_row\"].append(data[index].split(\" \")[0])\n        customer[\"location_column\"].append(data[index].split(\" \")[1])\n        customer[\"customer_number\"].append(data[index+1])\n\n        for j in data[index+2].split(\" \"):\n            k=k+1\n            customer_orders[\"order_id\"].append(k)\n            customer_orders[\"customer_id\"].append(i)\n            customer_orders[\"order\"].append(j)\n","4ac0eda2":"df_products_weight=pd.DataFrame(products_weight)\ndf_warehouses=pd.DataFrame(warehouses)\ndf_customer=pd.DataFrame(customer)\ndf_customer_orders=pd.DataFrame(customer_orders)\ndf_drone=pd.DataFrame(drone_parameters)\n","c21b10ab":"#Products Weight\ndf_products_weight","66d73804":"#Warehouses\ndf_warehouses","e80a99aa":"#custormers\ndf_customer","4d229e19":"#Customer Orders\ndf_customer_orders","202bdfd9":"#drone dataframe\ndf_drone","3c191081":"def Find_order(order):\n    a=df_warehouses[df_warehouses[order]>0][[\"warehouses_id\",\"location_row\",\"location_column\",order]]\n    a[order]=pd.to_numeric(a[order])\n    return a\n\ndef Find_customer_orders(customer):\n    df_orders=pd.DataFrame()\n    for i in list(df_customer_orders[df_customer_orders[\"customer_id\"]==customer][\"order\"]):\n        df_orders=df_orders.append(Find_order(int(i)))\n    return df_orders\n\n\n\ndef Find_min_length(drone_id,df_orders):\n    drone_row=int(df_drone[df_drone[\"drone_id\"]==drone_id][\"momentary_row\"])\n    drone_column=int(df_drone[df_drone[\"drone_id\"]==drone_id][\"momentary_column\"])\n    length={}\n    for i in list(df_orders[\"warehouses_id\"].unique()):\n        row=int(df_warehouses[df_warehouses[\"warehouses_id\"]==i][\"location_row\"])\n        column=int(df_warehouses[df_warehouses[\"warehouses_id\"]==i][\"location_column\"])\n        length[i]=(((drone_row-row)**2+(drone_column-column)**2)**0.5)\n    \n    for i,j in length.items():\n        if j==min(length.values()):\n            w=[i,math.ceil(j)]\n    \n    return w\n\ndef Find_length(customer_id,warehouses_id):\n    customer_row=int(df_customer[df_customer[\"customer_id\"]==customer_id][\"location_row\"])\n    customer_column=int(df_customer[df_customer[\"customer_id\"]==customer_id][\"location_column\"])\n    \n    warehouses_row=int(df_warehouses[df_warehouses[\"warehouses_id\"]==warehouses_id][\"location_row\"])\n    warehouses_column=int(df_warehouses[df_warehouses[\"warehouses_id\"]==warehouses_id][\"location_column\"])\n    length=(((customer_row-warehouses_row)**2+(customer_column-warehouses_column)**2)**0.5)\n    \n    \n    \n    return length\n\ndef Fly_drone(drone_id,customer_id):\n    index=df_drone[df_drone[\"drone_id\"]==drone_id].index\n    \n    df_aa=df_customer_orders[df_customer_orders[\"customer_id\"]==customer_id]\n    total_weight=int(df_drone.loc[index,\"max_load\"])\n    \n    last_condition=True\n    go_customer=False\n    \n    df_basket=pd.DataFrame(columns=[\"warehouses_id\",\"item_id\",\"item_weight\",\"total_item\"])\n    commands=[]\n    \n    k=0\n    while last_condition:\n        \n        df_warehouse=pd.DataFrame(columns=[\"item_id\",\"item_total\",\"item_weight\"])\n        df_orders=Find_customer_orders(customer_id)\n        w=Find_min_length(drone_id,df_orders)\n        \n        \n        df_bb=df_orders[df_orders[\"warehouses_id\"]==w[0]]\n        df_bb=df_bb.groupby(\"warehouses_id\").sum()\n        j=0\n        new_row=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_row\"])\n        new_column=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_column\"])\n        \n        \n        for i in list(df_bb.columns):\n            if int(df_bb[i])!=0:\n                df_warehouse.loc[j]=[i,int(df_bb[i]),int(df_products_weight[df_products_weight[\"item_id\"]==i][\"weight\"])]\n                j=j+1\n        df_warehouse=df_warehouse.sort_values([\"item_weight\",\"item_id\"])\n        \n        \n        if (total_weight-df_warehouse[\"item_weight\"].min())>=0:\n            df_drone.loc[index,\"momentary_row\"]=new_row\n            df_drone.loc[index,\"momentary_column\"]=new_column\n            df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+w[1]\n            \n            for i,r in df_warehouse.iterrows():\n                if (total_weight-r[\"item_weight\"])>=0:\n                    if r[\"item_id\"] in list(df_basket[\"item_id\"]):\n                        bi1=df_basket[df_basket[\"item_id\"]==r[\"item_id\"]].index\n                        df_basket.loc[bi1,\"total_item\"]=int(df_basket.loc[bi1,\"total_item\"])+1\n                        \n                    else:\n                        df_basket.loc[k]=[w[0],r[\"item_id\"],r[\"item_weight\"],1]\n                   \n                    bi2=df_basket[df_basket[\"item_id\"]==r[\"item_id\"]].index\n                    \n                    \n                    \n                    total_weight=total_weight-r[\"item_weight\"]\n    \n                    \n                    ai=df_aa[df_aa[\"order\"]==str(r[\"item_id\"])].index\n                    \n                    o_id=df_customer_orders[(df_customer_orders[\"order\"]==str(r[\"item_id\"])) & (df_customer_orders[\"customer_id\"]==customer_id)][\"order_id\"].head(1)\n                    o=o_id.index\n        \n                    \n                    df_customer_orders.drop(o,inplace=True)\n                    \n                    \n                    wi=df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]].index\n                    df_warehouses.loc[wi,r[\"item_id\"]]=int(df_warehouses.loc[wi,r[\"item_id\"]])-1\n                    \n                    \n                    df_aa=df_aa.drop(ai[0])\n           \n                    \n                k=k+1\n                                   \n                    \n                \n        else:\n            \n                           \n            \n            \n            go_customer=True\n        \n        \n            \n            \n        if len(df_aa)==0:\n            go_customer=True\n            last_condition=False\n            \n        if go_customer:\n            new_row=int(df_customer[df_customer[\"customer_id\"]==customer_id][\"location_row\"])\n            new_column=int(df_customer[df_customer[\"customer_id\"]==customer_id][\"location_column\"])\n            \n            row=df_drone.loc[index,\"momentary_row\"]\n            column=df_drone.loc[index,\"momentary_column\"]\n            \n            road=(((new_row-row)**2+(new_column-column)**2)**0.5)\n            \n            \n            \n            df_drone.loc[index,\"momentary_row\"]=new_row\n            df_drone.loc[index,\"momentary_column\"]=new_column\n            df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+road\n            \n            \n            total_weight=int(df_drone.loc[index,\"max_load\"])\n            \n            for i in df_basket.index:\n                command=str(drone_id)+\" \"+\"L\"+\" \"+str(df_basket.loc[i,\"warehouses_id\"])+\" \"+str(df_basket.loc[i,\"item_id\"])+\" \"+str(df_basket.loc[i,\"total_item\"])\n                commands.append(command)\n            \n            for i in df_basket.index:\n                \n                command=str(drone_id)+\" \"+\"D\"+\" \"+str(customer_id)+\" \"+str(df_basket.loc[i,\"item_id\"])+\" \"+str(df_basket.loc[i,\"total_item\"])\n                commands.append(command)\n                \n                df_basket.drop(i,inplace=True)\n            \n            go_customer=False\n                \n            \n        \n        \n   \n        \n    return commands \n    ","8b748dde":"df_test=Find_customer_orders(0)\nw=Find_min_length(0,df_test)\nw\n\n","b469d1b0":"def Find_min_length2(drone_id,df_basket):\n    w=[]\n    drone_row=int(df_drone[df_drone[\"drone_id\"]==drone_id][\"momentary_row\"])\n    drone_column=int(df_drone[df_drone[\"drone_id\"]==drone_id][\"momentary_column\"])\n    length={}\n    for i in list(df_basket[\"customer_id\"].unique()):\n        row=int(df_customer[df_customer[\"customer_id\"]==i][\"location_row\"])\n        column=int(df_customer[df_customer[\"customer_id\"]==i][\"location_column\"])\n        length[i]=(((drone_row-row)**2+(drone_column-column)**2)**0.5)\n    \n    for i,j in length.items():\n        if j==min(length.values()):\n            w=[i,math.ceil(j)]\n    \n    return w\n\ndef Fly_drone2(drone_id):\n    \n    df_aa=pd.DataFrame()\n    \n    \n    \n    df_basket=pd.DataFrame(columns=[\"warehouses_id\",\"item_id\",\"item_weight\",\"customer_id\",\"total_item\"])\n    \n    commands=[]\n    \n    index=df_drone[df_drone[\"drone_id\"]==drone_id].index\n    total_weight=int(df_drone.loc[index,\"max_load\"])\n    \n    go_customer=False\n    last_condition=True\n    \n    for i in list(df_customer[df_customer[\"customer_number\"]==\"1\"][\"customer_id\"]):\n        df_aa=df_aa.append(df_customer_orders[df_customer_orders[\"customer_id\"]==i])\n    \n    \n    \n    k=0\n    while last_condition:\n        df_warehouse=pd.DataFrame(columns=[\"item_id\",\"item_total\",\"item_weight\"])\n        df_orders=pd.DataFrame()\n        \n        \n        for i in list(df_aa[\"customer_id\"]):\n            df_orders=df_orders.append(Find_customer_orders(i))\n        w=Find_min_length(drone_id,df_orders)\n        \n        \n        \n        df_bb=df_orders[df_orders[\"warehouses_id\"]==w[0]]\n        df_bb=df_bb.groupby(\"warehouses_id\").sum()\n        \n        new_row=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_row\"])\n        new_column=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_column\"])\n        \n        j=0\n        \n        for i in list(df_bb.columns):\n            if int(df_bb[i])!=0:\n                df_warehouse.loc[j]=[i,int(df_bb[i]),int(df_products_weight[df_products_weight[\"item_id\"]==i][\"weight\"])]\n                j=j+1\n        df_warehouse=df_warehouse.sort_values([\"item_weight\",\"item_id\"])\n        \n        \n        if (total_weight-df_warehouse[\"item_weight\"].min())>=0:\n            df_drone.loc[index,\"momentary_row\"]=new_row\n            df_drone.loc[index,\"momentary_column\"]=new_column\n            df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+w[1]\n            \n            for i,r in df_warehouse.iterrows():\n                if (total_weight-r[\"item_weight\"])>=0:\n                    c_id=df_aa[df_aa[\"order\"]==str(r[\"item_id\"])][\"customer_id\"]\n                    \n                    \n                    for c in c_id:\n                        total_weight=total_weight-r[\"item_weight\"]\n                        if total_weight<0:\n                            break\n                        \n                        \n                        df_basket.loc[k]=[w[0],r[\"item_id\"],r[\"item_weight\"],int(c),1]\n                        \n                        \n                        \n                    \n                        ai=df_aa[df_aa[\"customer_id\"]==c].index\n                    \n                    \n                    \n                        customer_id=df_aa.loc[ai[0],\"customer_id\"]\n                    \n                    \n\n                        o_id=df_customer_orders[(df_customer_orders[\"order\"]==str(r[\"item_id\"])) & (df_customer_orders[\"customer_id\"]==customer_id)][\"order_id\"].head(1)\n                        o=o_id.index\n\n                        df_customer_orders.drop(o,inplace=True)\n\n                    \n                        wi=df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]].index\n                        df_warehouses.loc[wi,r[\"item_id\"]]=int(df_warehouses.loc[wi,r[\"item_id\"]])-1\n\n                        df_aa=df_aa.drop(ai[0])\n                        \n                        k=k+1\n                        \n        else:\n            go_customer=True\n        \n        if len(df_aa)==0:\n            go_customer=True\n            last_condition=False\n                \n        if go_customer:\n            total_weight=int(df_drone.loc[index,\"max_load\"])\n            \n            df_load=df_basket[[\"warehouses_id\",\"item_id\",\"item_weight\",\"total_item\"]]\n            df_load=df_load.groupby([\"warehouses_id\",\"item_id\",\"item_weight\"]).sum()\n            \n           \n            \n            \n            for i in df_load.index:\n               \n                command=str(drone_id)+\" \"+\"L\"+\" \"+str(i[0])+\" \"+str(i[1])+\" \"+str(df_load.loc[i,\"total_item\"])\n                commands.append(command)\n             \n            delivery=True\n            while delivery:\n        \n                w2=Find_min_length2(drone_id,df_basket)\n\n                new_row2=int(df_customer[df_customer[\"customer_id\"]==w2[0]][\"location_row\"])\n                new_column2=int(df_customer[df_customer[\"customer_id\"]==w2[0]][\"location_column\"])\n\n                \n                      \n                df_drone.loc[index,\"momentary_row\"]=new_row\n                df_drone.loc[index,\"momentary_column\"]=new_column\n                df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+w2[1]\n                \n                di=df_basket[df_basket[\"customer_id\"]==w2[0]].index\n                command=str(drone_id)+\" \"+\"D\"+\" \"+str(int(df_basket.loc[di,\"customer_id\"]))+\" \"+str(int(df_basket.loc[di,\"item_id\"]))+\" \"+str(int(df_basket.loc[di,\"total_item\"]))\n                commands.append(command)\n                \n                df_basket.drop(di,inplace=True)\n                \n                if len(df_basket)==0:\n                    delivery=False\n                \n                  \n            \n            \n            \n            \n            \n            go_customer=False\n                \n                \n        \n    return commands","775a3761":"def Fly_load(drone_id,customer_id,total_weight):\n    index=df_drone[df_drone[\"drone_id\"]==drone_id].index\n    \n    df_aa=df_customer_orders[df_customer_orders[\"customer_id\"]==customer_id]\n    \n    last_condition=True\n    \n    \n    df_basket=pd.DataFrame(columns=[\"warehouses_id\",\"item_id\",\"item_weight\",\"customer_id\",\"total_item\"])\n    \n    \n    k=0\n    while last_condition:\n        \n        df_warehouse=pd.DataFrame(columns=[\"item_id\",\"item_total\",\"item_weight\"])\n        df_orders=Find_customer_orders(customer_id)\n        w=Find_min_length(drone_id,df_orders)\n        \n        \n        df_bb=df_orders[df_orders[\"warehouses_id\"]==w[0]]\n        df_bb=df_bb.groupby(level=0).first()\n        df_bb=df_bb.drop(columns=[\"warehouses_id\",\"location_row\",\"location_column\"])\n        df_bb=df_bb.fillna(0)\n        j=0\n        new_row=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_row\"])\n        new_column=int(df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]][\"location_column\"])\n        \n    \n        for i in list(df_bb.columns):\n            if int(df_bb[i])!=0:\n                df_warehouse.loc[j]=[i,int(df_bb[i]),int(df_products_weight[df_products_weight[\"item_id\"]==i][\"weight\"])]\n                j=j+1\n        df_warehouse=df_warehouse.sort_values([\"item_weight\",\"item_id\"])\n        \n     \n        \n        if (total_weight-df_warehouse[\"item_weight\"].min())>=0:\n            df_drone.loc[index,\"momentary_row\"]=new_row\n            df_drone.loc[index,\"momentary_column\"]=new_column\n            df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+w[1]\n            \n            \n            for i,r in df_warehouse.iterrows():\n                if (total_weight-r[\"item_weight\"])>=0 and r[\"item_total\"]!=0:\n                    bi1=df_basket[df_basket[\"item_id\"]==r[\"item_id\"]].index\n                                        \n                    if r[\"item_id\"] in list(df_basket[\"item_id\"]) and w[0]==int(df_basket.loc[bi1,\"warehouses_id\"]):\n                        df_basket.loc[bi1,\"total_item\"]=int(df_basket.loc[bi1,\"total_item\"])+1\n                        \n                    else:\n                        df_basket.loc[k]=[w[0],r[\"item_id\"],r[\"item_weight\"],customer_id,1]\n                   \n                    bi2=df_basket[df_basket[\"item_id\"]==r[\"item_id\"]].index\n                    \n                    \n                    \n                    total_weight=total_weight-r[\"item_weight\"]\n    \n                    \n                    ai=df_aa[df_aa[\"order\"]==str(r[\"item_id\"])].index\n                    \n                    o_id=df_customer_orders[(df_customer_orders[\"order\"]==str(r[\"item_id\"])) & (df_customer_orders[\"customer_id\"]==customer_id)][\"order_id\"].head(1)\n                    o=o_id.index\n        \n                    \n                    df_customer_orders.drop(o,inplace=True)\n                    \n                    \n                    wi=df_warehouses[df_warehouses[\"warehouses_id\"]==w[0]].index\n                    df_warehouses.loc[wi,r[\"item_id\"]]=int(df_warehouses.loc[wi,r[\"item_id\"]])-1\n                    \n                    \n                    df_aa=df_aa.drop(ai[0])\n           \n                    \n                k=k+1\n                                   \n                       \n        else:                 \n            \n            last_condition=False\n        \n        if len(df_aa)==0:\n            last_condition=False\n            \n        \n   \n        \n    return df_basket\n\ndef Fly_deliver(drone_id,df_basket):\n    commands=[]\n    index=df_drone[df_drone[\"drone_id\"]==drone_id].index\n    df_load=df_basket[[\"warehouses_id\",\"item_id\",\"item_weight\",\"total_item\"]]\n    df_load=df_load.groupby([\"warehouses_id\",\"item_id\",\"item_weight\"],sort=False).sum()\n            \n           \n            \n     \n    for i in df_load.index:\n               \n        command=str(drone_id)+\" \"+\"L\"+\" \"+str(i[0])+\" \"+str(i[1])+\" \"+str(df_load.loc[i,\"total_item\"])\n        commands.append(command)\n            \n   \n    delivery=True\n    while delivery:\n        \n        w2=Find_min_length2(drone_id,df_basket)\n\n        new_row=int(df_customer[df_customer[\"customer_id\"]==w2[0]][\"location_row\"])\n        new_column=int(df_customer[df_customer[\"customer_id\"]==w2[0]][\"location_column\"])\n\n                \n                      \n        df_drone.loc[index,\"momentary_row\"]=new_row\n        df_drone.loc[index,\"momentary_column\"]=new_column\n        df_drone.loc[index,\"total_road\"]=df_drone.loc[index,\"total_road\"]+w2[1]\n                \n        d_index=df_basket[df_basket[\"customer_id\"]==w2[0]].index\n        di=d_index[0]\n        \n        command=str(drone_id)+\" \"+\"D\"+\" \"+str(int(df_basket.loc[di,\"customer_id\"]))+\" \"+str(int(df_basket.loc[di,\"item_id\"]))+\" \"+str(int(df_basket.loc[di,\"total_item\"]))\n        commands.append(command)\n                \n        df_basket.drop(di,inplace=True)\n                \n        if len(df_basket)==0:\n            delivery=False\n    \n    return commands\n\ndef Find_min_weight(customer_id):\n    weight={}\n    m=[]\n    for i in list(df_customer_orders[df_customer_orders[\"customer_id\"]==customer_id][\"order\"]):\n        wi=df_products_weight[df_products_weight[\"item_id\"]==int(i)].index\n        weight[i]=int(df_products_weight.loc[wi,\"weight\"])\n    for i,j in weight.items():\n        if j==min(weight.values()):\n            m=[i,j]\n        \n    return m","a6dfee3b":"df_warehouses","aaa07883":"df_customer","e1387414":"df_customer2=df_customer.copy()","4828015c":"df_customer2[\"customer_id\"]","1f5108c2":"df_customer2=df_customer.copy()\nfor i in list(df_warehouses[\"warehouses_id\"]):\n    df_customer2[i]=df_customer2[\"customer_id\"].apply(Find_length,args=(i,))","29907467":"df_customer2","6949d195":"df_basket=pd.DataFrame()\na=[]\ni=0\n\n\nwhile len(df_customer_orders)!=0:\n    i=int(df_customer_orders[\"customer_id\"].head(1))\n    d_id=list(df_drone.sort_values([\"total_road\",\"drone_id\"])[\"drone_id\"])[0]\n    di=df_drone[df_drone[\"drone_id\"]==d_id].index\n    total_weight=int(df_drone.loc[di,\"max_load\"])\n    \n    df_basket=Fly_load(d_id,i,total_weight)\n    s=0\n    for k in df_basket[\"item_weight\"]*df_basket[\"total_item\"]:\n            s=s+k\n    total_weight=total_weight-s\n\n    w_id=int(df_basket[\"warehouses_id\"].tail(1))\n    last_warehouse=df_warehouses[df_warehouses[\"warehouses_id\"]==w_id]\n    \n    print(i)\n    \n\n    item_list=[]\n    suitable_items=list(df_products_weight[df_products_weight[\"weight\"]<total_weight][\"item_id\"])\n\n    customers=[]\n\n    for item in suitable_items:\n        if int(last_warehouse[item])!=0:\n            customers.extend(list(df_customer_orders[df_customer_orders[\"order\"]==str(item)][\"customer_id\"]))\n    \n    customers=set(customers)\n    customers=customers.union(customers)\n    \n    ni=list(df_customer2[df_customer2[\"customer_id\"].isin(customers)].sort_values(w_id)[\"customer_id\"])\n    \n    \n    if len(customers)!=0:\n        for j in ni:\n            \n                        \n            try:                \n                add_basket=Fly_load(d_id,j,total_weight)\n            except:\n                break\n            if len(add_basket)!=0:\n                df_basket=df_basket.append(add_basket)\n                df_basket.index=range(0,len(df_basket))\n                s=0\n                for k in df_basket[\"item_weight\"]*df_basket[\"total_item\"]:\n                    s=s+k\n                total_weight=int(df_drone.loc[di,\"max_load\"])\n                total_weight=total_weight-s\n                \n            else:\n                break\n            k=k+1\n        \n    \n    \n    a.extend(Fly_deliver(d_id,df_basket))\n    ","bb4f6e55":"a","72530414":"customers","dd3b7267":"ni","a015f3f7":"\"\"\"\ndf_basket=pd.DataFrame()\na=[]\n\n\nwhile len(df_customer_orders)!=0:\n    i=int(df_customer_orders[\"customer_id\"].head(1))\n    d_id=list(df_drone.sort_values([\"total_road\",\"drone_id\"])[\"drone_id\"])[0]\n    di=df_drone[df_drone[\"drone_id\"]==d_id].index\n    total_weight=int(df_drone.loc[di,\"max_load\"])\n    \n    df_basket=Fly_load(d_id,i,total_weight)\n    s=0\n    for k in df_basket[\"item_weight\"]*df_basket[\"total_item\"]:\n            s=s+k\n    \n\n    w_id=int(df_basket[\"warehouses_id\"].tail(1))\n    last_warehouse=df_warehouses[df_warehouses[\"warehouses_id\"]==w_id]\n    total_weight=total_weight-s\n    print(i)\n    \n\n    item_list=[]\n    suitable_items=list(df_products_weight[df_products_weight[\"weight\"]<total_weight][\"item_id\"])\n\n    customers=[]\n\n    for item in suitable_items:\n        if int(last_warehouse[item])!=0:\n            customers.extend(list(df_customer_orders[df_customer_orders[\"order\"]==str(item)][\"customer_id\"]))\n    customers=pd.DataFrame(customers,columns=[\"customer_id\"])\n    ni=customers.value_counts(\"customer_id\",sort=True).head(1)\n    if len(ni)!=0:\n        ni=ni.index[0]\n\n        df_basket=df_basket.append(Fly_load(d_id,ni,total_weight))\n        df_basket.index=range(0,len(df_basket))\n    \n    \n    a.extend(Fly_deliver(d_id,df_basket))\n\"\"\"","6fe3f985":"\"\"\"\ndf_basket=pd.DataFrame()\ni=0\na=[]\nwhile len(df_customer_orders)!=0:\n    d_id=list(df_drone.sort_values([\"total_road\",\"drone_id\"])[\"drone_id\"])[0]\n    di=df_drone[df_drone[\"drone_id\"]==d_id].index\n    total_weight=int(df_drone.loc[di,\"max_load\"])\n    df_aa=df_customer_orders[df_customer_orders[\"customer_id\"]==i]\n    \n    if len(df_aa)!=0:\n        df_basket=Fly_load(d_id,i,total_weight)\n        \n        \n        s=0\n        for k in df_basket[\"item_weight\"]*df_basket[\"total_item\"]:\n            s=s+k\n        ni=i+1\n        try:\n            m=Find_min_weight(ni)\n            while len(m)==0:\n                ni=ni+1\n                m=Find_min_weight(ni)\n                if ni>len(df_customer):\n                    break\n            \n            if (s+m[1])<int(df_drone.loc[di,\"max_load\"]):\n                total_weight=total_weight-s\n                df_basket=df_basket.append(Fly_load(d_id,ni,total_weight))\n                df_basket.index=range(0,len(df_basket))\n            \n        except:\n            pass\n        a.extend(Fly_deliver(d_id,df_basket))\n        \n        \n    else:\n        i=i+1\n    print(i)\n    \na\n\"\"\"","166085a6":"#a=[]\n\n\n#for i in list(df_customer[\"customer_id\"]):\n#   d_id=list(df_drone.sort_values([\"total_road\",\"drone_id\"])[\"drone_id\"])[0]\n#   a.extend(Fly_drone(d_id,i))\n    \n","22d30d4b":"#a=[]\n#d_id=-1\n\n#for i in list(df_customer[\"customer_id\"]):\n#    if i%42==0:\n#        d_id=d_id+1\n#    a.extend(Fly_drone(d_id,i))\n              ","debe2082":"#a=[]\n#for i in list(df_customer[\"customer_id\"]):\n#    drone=[]\n#    for d in df_drone.index:\n#        w=Find_min_length(d,Find_customer_orders(i))\n#        drone.append(df_drone.loc[d,\"total_road\"]+w[1])\n#    d_id=drone.index(min(drone))\n#    a.extend(Fly_drone(d_id,i))","62e87f70":"#a=[]\n\n#a.extend(Fly_drone2(0))\n\n#for i in list(df_customer[df_customer[\"customer_number\"]!=\"1\"][\"customer_id\"]):\n#  d_id=list(df_drone.sort_values([\"total_road\",\"drone_id\"])[\"drone_id\"])[0]\n#   a.extend(Fly_drone(d_id,i))","e2e81737":"df_submission=pd.DataFrame(a,columns=[len(a)])\ndf_submission.to_csv(\".\/submission.csv\",index=False)","e83a6864":"df_submission","7d099dc4":"df_drone","012ca532":"# Read File","3c97d537":"# Create DataFrame","0d8a4606":"# **Final 5.5**","ed5d8719":"# submission","b6e043a2":"# **Final 6.0**","8a0df8af":"# Function"}}