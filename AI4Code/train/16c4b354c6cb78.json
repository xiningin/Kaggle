{"cell_type":{"b37d64c8":"code","bcb8816b":"code","3cef12e4":"code","56056b0a":"code","faff2fb1":"code","3ef1f4df":"code","54de5bfc":"code","4fc6c9b9":"code","671760cb":"code","084064b3":"code","c165ba91":"code","777edf6c":"code","94ca8c9e":"code","4df97ef9":"code","fd99915f":"code","a011a33a":"code","d85fc3ee":"code","c5ff3410":"code","089dba16":"code","78804dc0":"code","932d363d":"markdown","a60f0220":"markdown","00b5084c":"markdown","7e5b72b2":"markdown"},"source":{"b37d64c8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport json\nimport time\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nfrom tqdm.notebook import tqdm\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bcb8816b":"my_file = '..\/input\/arxiv\/arxiv-metadata-oai-snapshot.json'","3cef12e4":"# get access to metadata (lazy evaluation)\ndef get_metadata():\n    with open(my_file, 'r') as f:\n        for line in f:\n            yield line\n            \nmetadata = get_metadata()","56056b0a":"# look at titles and abstracts of first few papers\nfor ind, paper in enumerate(metadata):\n    paper = json.loads(paper)\n    print(ind)\n    print(paper['title'])\n    print(paper['abstract'])\n    if (ind == 4):\n        break","faff2fb1":"# check full structure of a paper record\npaper","3ef1f4df":"text = ''\nfor ind, paper in tqdm(enumerate(metadata), total=1747307):\n    paper = json.loads(paper)\n    add_txt = paper['title']\n    text = text + add_txt","54de5bfc":"# number of papers\nprint('Number of papers: ', ind)","4fc6c9b9":"# check lengths of all titles\nprint('Length of combined title texts: ', len(text))","671760cb":"# wordcloud of all paper titles\nstopwords = set(STOPWORDS)\n\nt1 = time.time()\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()\nt2 = time.time()","084064b3":"print('Elapsed time for word cloud: ', np.round(t2 - t1,2), 'secs')","c165ba91":"metadata = get_metadata()\n\ntext = ''\ncnt = 0\nmy_cat = 'cs.AI' # define category of interest\n\nfor ind, paper in tqdm(enumerate(metadata), total=1747307):\n    paper = json.loads(paper)\n    cats = paper['categories']\n    if (cats.find(my_cat)>=0):\n        # print(cats) # for debugging\n        add_txt = paper['title']\n        text = text + add_txt\n        cnt = cnt + 1","777edf6c":"# number of papers\nprint('Number of papers: ', cnt)","94ca8c9e":"# check lengths of all titles\nprint('Length of combined title texts: ', len(text))","4df97ef9":"# wordcloud of selected paper titles\nstopwords = set(STOPWORDS)\n\nt1 = time.time()\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()\nt2 = time.time()","fd99915f":"print('Elapsed time for word cloud: ', np.round(t2 - t1,2), 'secs')","a011a33a":"metadata = get_metadata()\n\ntext = ''\ncnt = 0\nmy_cat = 'stat.ML' # define category of interest\n\nfor ind, paper in tqdm(enumerate(metadata), total=1747307):\n    paper = json.loads(paper)\n    cats = paper['categories']\n    if (cats.find(my_cat)>=0):\n        # print(cats) # for debugging\n        add_txt = paper['title']\n        text = text + add_txt\n        cnt = cnt + 1","d85fc3ee":"# number of papers\nprint('Number of papers: ', cnt)","c5ff3410":"# check lengths of all titles\nprint('Length of combined title texts: ', len(text))","089dba16":"# wordcloud of selected paper titles\nstopwords = set(STOPWORDS)\n\nt1 = time.time()\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()\nt2 = time.time()","78804dc0":"print('Elapsed time for word cloud: ', np.round(t2 - t1,2), 'secs')","932d363d":"# Another subset: Statistics \/ Machine Learning","a60f0220":"# First glance at arXiv papers","00b5084c":"# Wordcloud of all titles","7e5b72b2":"# Select a subset of papers: Computer science \/ AI"}}