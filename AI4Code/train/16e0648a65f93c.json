{"cell_type":{"faa9633a":"code","6efea633":"code","416fc83b":"code","e8b1444f":"code","d7395890":"code","3f1fd5dd":"code","ba7c2b69":"code","f08d8c39":"code","4b729a35":"code","fac53f05":"code","b01d2393":"code","85207bd3":"code","07d9ff99":"code","4b20b9a0":"code","0f740057":"code","6ab8b4b7":"code","d51b5753":"code","347a1dfa":"code","0b11aa87":"code","db6845b4":"code","daab5b89":"code","2b8d81ca":"code","ce8fce04":"code","060b084b":"code","fbf1c667":"code","82cff669":"code","28fe1ee0":"markdown","e351587c":"markdown","a255ee7d":"markdown","32023f7c":"markdown","694f777b":"markdown","198f111b":"markdown","40fff519":"markdown","eee9d6ee":"markdown","1afed869":"markdown"},"source":{"faa9633a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6efea633":"#import libraries\n# importing required libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport datetime as dt\nimport matplotlib.pyplot as plt\n%matplotlib inline","416fc83b":"#Read in CSV\ndf = pd.read_csv('..\/input\/sales-forecasting\/train.csv')","e8b1444f":"#peak at data\ndf.head()","d7395890":"#check out column and datatype info\ndf.info()","3f1fd5dd":"#convert order date to datetime\ndf['Order Date'] = df['Order Date'].astype('datetime64[ns]')","ba7c2b69":"#convert ship date to datetime\ndf['Ship Date'] = df['Ship Date'].astype('datetime64[ns]')","f08d8c39":"#drop row id\ndf.drop('Row ID', axis=1, inplace=True)","4b729a35":"#rename columns, getting rid of spaces\ndf.rename(columns={'Order ID':'Order_ID', 'Order Date':'Order_Date', 'Ship Date':'Ship_Date', 'Ship Mode':'Ship_Mode', 'Customer ID':'Customer_ID', 'Customer Name':'Customer_Name', 'Postal Code':'Postal_Code', 'Product ID':'Product_ID', 'Sub-Category':'Sub_Category', 'Product Name':'Product_Name'}, inplace=True)","fac53f05":"#check for null values\ndf.isnull().sum()","b01d2393":"#There are 11 Postal_Code values missing. Let's take a look\ndfnull = df[df.isna().any(axis=1)]","85207bd3":"dfnull\n#all missing postal codes are from Burlington, Vermont. This city has 5 postal codes and we arent sure which one to use so we will skip for now.","07d9ff99":"#calculate percentage of sales from each categgory\ndf.Category.value_counts(normalize=True)","4b20b9a0":"#plot this as a bar graph\ndf.Category.value_counts(normalize=True).plot.barh()\nplt.show()","0f740057":"#run univariate categorical analysis\ncategory_count = df.Category.value_counts()\ncategory_count.describe()","6ab8b4b7":"#calculate percentage of sales from each categgory\ndf.Sub_Category.value_counts(normalize=True)","d51b5753":"#plot this as a pie chart\nsubcatpieplot = df.Sub_Category.value_counts().plot.pie(figsize=(6,6))\nsubcatpieplot","347a1dfa":"#run univariate categorical analysis\nsubcategory_count = df.Sub_Category.value_counts()\nsubcategory_count.describe()","0b11aa87":"df_subcat = df.groupby(['Category', 'Sub_Category']).agg({'Sales' : sum})\ndf_subcat.sort_values(by='Sales', ascending=False).groupby('Category').head(5).sort_index()","db6845b4":"#top 10 cities by sale\ndf.groupby('City').agg({'Sales' : sum}).sort_values(by = 'Sales', ascending=False).head(10)","daab5b89":"#bottom cities by sale\ndf.groupby('City').agg({'Sales' : sum}).sort_values(by = 'Sales', ascending=True).head(10)","2b8d81ca":"#top 10 states by sale\ndf.groupby('State').agg({'Sales' : sum}).sort_values(by = 'Sales', ascending=False).head(10)","ce8fce04":"df.groupby('Region').agg({'Sales' : sum}).sort_values(by = 'Sales', ascending=False)","060b084b":"#extract month\/year from order date\ndf['Month'] = df['Order_Date'].dt.month_name()\ndf['Year'] = df['Order_Date'].dt.year\n","fbf1c667":"#Monthly Sales aggregate\nsale_month = df.groupby('Month').agg({'Sales' : sum}).sort_values(by='Month').plot.bar(figsize=(6,3))","82cff669":"df.info()","28fe1ee0":"## **Sales by City**","e351587c":"## **Best Months for Sales**","a255ee7d":"# **Analysis**","32023f7c":"## **Top 10 States by Sales Total**","694f777b":"## **Total Sales by Region**","198f111b":"## **Sales Percentages by Category**","40fff519":"## **Sales Percentages by Sub_Category**","eee9d6ee":"## **Top 5 Sub-Categories in each Category by Sales**","1afed869":"# **SALES**"}}