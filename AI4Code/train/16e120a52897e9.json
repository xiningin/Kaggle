{"cell_type":{"8442ac81":"code","0803f1e5":"code","47f7191c":"code","ea661ed7":"code","90a093cf":"code","3f0c6c56":"code","46fea778":"code","22ad535a":"code","e2a85de3":"code","a3b2a41b":"code","28fe6c8f":"code","b69e4b3d":"code","43b8798a":"code","3ea2b6e8":"code","91815a92":"code","22719738":"code","11019e43":"code","9111c870":"code","90e7e9b8":"code","ce85382b":"code","82cee56c":"code","20a38a81":"code","dd378960":"code","96e22e04":"code","b6e7f4e2":"code","2afcdb75":"code","6c9050c0":"code","9365abf7":"code","63aea063":"code","2d405218":"code","a2df0e76":"code","a9f896f0":"code","aec906cb":"code","3d3dd3b1":"markdown","a1eeb92c":"markdown","f005adcd":"markdown","dc7e4995":"markdown"},"source":{"8442ac81":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0803f1e5":"df1=pd.read_csv('\/kaggle\/input\/silicon-valley-diversity-data\/Reveal_EEO1_for_2016.csv')","47f7191c":"import matplotlib.pyplot as plt\nimport seaborn as sns","ea661ed7":"df1=df1.replace('na', '0')\ndf1=df1.fillna({'count':'0'})\ndf1['count']=df1['count'].astype(int)","90a093cf":"df11=pd.DataFrame(df1[df1['job_category'] != 'Previous_totals'].groupby(['company','job_category','race','gender'])['count'].sum())\ndf11=df11.reset_index()\ndf11=df11.set_index('company')\ndf11=df11.pivot(columns=['job_category','race','gender'],values='count')\ndf11.head()","3f0c6c56":"df12=df11.sum(level=0,axis=1)\ndf12.head()","46fea778":"df12['Totals'].sort_values(ascending=False).plot.bar(alpha=0.6, figsize=(10,10), stacked=True,title='Sort by Total Employees')","22ad535a":"df12.drop('Totals',axis=1).plot.bar(y=['Administrative support', 'Craft workers', 'Executives', 'Managers',\n       'Professionals', 'Sales workers', 'Service workers', 'Technicians',\n       'laborers and helpers', 'operatives'],alpha=0.6, figsize=(10,10), stacked=True, cmap='Reds',title='Job Categories by companies')","e2a85de3":"idx = pd.IndexSlice\ndf11['exe_w_male%']=df11.loc[:,idx['Executives','White','male']]\/df12.loc[:,'Executives']\ndf11['mgr_w_male%']=df11.loc[:,idx['Managers','White','male']]\/df12.loc[:,'Managers']\ndf11['Prof%']=df12['Professionals']\/df12['Totals']\ndf11['total_w_male%']=df11.loc[:,idx['Totals','White','male']]\/df12['Totals']\ndf11['Grand_Total']=df12['Totals']\ndf11['total-exe_w_male%']=df11['exe_w_male%']-df11['total_w_male%']\ndf11['total-mgr_w_male%']=df11['mgr_w_male%']-df11['total_w_male%']\ndf11.head()","a3b2a41b":"df13=df11.loc[:,['Grand_Total','total-exe_w_male%','total-mgr_w_male%','total_w_male%','mgr_w_male%','exe_w_male%','Prof%']]\ndf13.head()","28fe6c8f":"sns.heatmap(df13.corr())","b69e4b3d":"cargs = {'kind':'bar', 'use_index':True, 'ylim': (0,None), 'rot':90}\n\nargs_list = [\n    {'title': 'Total white male employees % - white male executive %', 'column':['total-exe_w_male%']},\n    {'title': 'Total white male employees % - white male manager %', 'column':['total-mgr_w_male%']},\n    {'title': 'Total white male %', 'column': ['total_w_male%']},\n    {'title': 'white male manager %', 'column': ['mgr_w_male%']},\n    {'title': 'white male executive %', 'column': ['exe_w_male%']},\n    {'title': 'Professional%', 'column': ['Prof%']},\n]\n\nfig, axes = plt.subplots(ncols=3, nrows=2, figsize=(20, 20), sharex=False)\n\nfor ax, args in zip(axes.ravel(), args_list):\n    df13[args['column']].plot(ax=ax,  **cargs, title=args['title'])","43b8798a":"plt.figure(figsize=(5, 5))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df13.index,y=df13['Grand_Total'],hue=df13['total_w_male%'],size=df13['Prof%'],data=df13,sizes=(1,200))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","3ea2b6e8":"plt.figure(figsize=(5, 5))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df13.index,y=df13['Grand_Total'],hue=df13['total_w_male%'],size=df13['total-mgr_w_male%'],data=df13,sizes=(1,200))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","91815a92":"plt.figure(figsize=(5, 5))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df13.index,y=df13['Grand_Total'],hue=df13['total_w_male%'],size=df13['total-exe_w_male%'],data=df13,sizes=(1,200))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","22719738":"df13.plot.bar(y=['total_w_male%','mgr_w_male%','exe_w_male%'],figsize=(20,10))","11019e43":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler","9111c870":"sc = StandardScaler()\nclustering_sc = sc.fit_transform(df13)","90e7e9b8":"pred = KMeans(n_clusters=4).fit_predict(clustering_sc)","ce85382b":"pred","82cee56c":"df13['cluster']=pred\ndf13['cluster'].value_counts()","20a38a81":"df13","dd378960":"import sklearn\nfrom sklearn.decomposition import PCA","96e22e04":"df14=df13.drop('cluster', axis=1)","b6e7f4e2":"df14","2afcdb75":"pca = PCA()\npca.fit(clustering_sc)\nfeature = pca.transform(clustering_sc)","6c9050c0":"df15=pd.DataFrame(feature, columns=[\"PC{}\".format(x + 1) for x in range(len(df14.columns))])\ndf15","9365abf7":"PC1=df15.iloc[:,0]\nPC2=df15.iloc[:,1]\nannotations=['23andMe', 'Adobe', 'Airbnb', 'Apple', 'Cisco', 'Facebook', 'Google',\n       'HP Inc.', 'HPE', 'Intel', 'Intuit', 'LinkedIn', 'Lyft', 'MobileIron',\n       'NetApp', 'Nvidia', 'PayPal', 'Pinterest', 'Salesforce', 'Sanmina',\n       'Square', 'Twitter', 'Uber', 'View', 'eBay']\nplt.figure(figsize=(6, 6))\nplt.scatter(feature[:, 0], feature[:, 1], alpha=0.8, c=list(df14.iloc[:, 0]))\nplt.grid()\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nfor i, label in enumerate(annotations):\n    plt.annotate(label, (PC1[i], PC2[i]))\n\nplt.show()","63aea063":"pd.DataFrame(pca.explained_variance_ratio_, index=[\"PC{}\".format(x + 1) for x in range(len(df14.columns))])","2d405218":"import matplotlib.ticker as ticker\nplt.gca().get_xaxis().set_major_locator(ticker.MaxNLocator(integer=True))\nplt.plot([0] + list( np.cumsum(pca.explained_variance_ratio_)), \"-o\")\nplt.xlabel(\"Number of principal components\")\nplt.ylabel(\"Cumulative contribution rate\")\nplt.grid()\nplt.show()","a2df0e76":"pd.DataFrame(pca.explained_variance_, index=[\"PC{}\".format(x + 1) for x in range(len(df14.columns))])","a9f896f0":"pd.DataFrame(pca.components_, columns=df13.columns[1:], index=[\"PC{}\".format(x + 1) for x in range(len(df14.columns))])","aec906cb":"plt.figure(figsize=(6, 6))\nfor x, y, name in zip(pca.components_[0], pca.components_[1], df13.columns[1:]):\n    plt.text(x, y, name)\nplt.scatter(pca.components_[0], pca.components_[1], alpha=0.8)\nplt.grid()\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.show()","3d3dd3b1":"# 2. Clustering","a1eeb92c":"# 3.PCA","f005adcd":"Just my idea is that\n\nDiversity is influenced by not only how many non white and non male employees you have, but also how many non white and non male managers and executives you have. So I try to get features 'white male employees %','white male managers %'and 'white male executives %'.\n\nI also get the features which indicate variance between 'white male employees %' and 'white male managers %', and between 'white male employees %' and 'white male executives %'.\n\nAnd I also try  to find the correlation between the numbers of employees and 'white male employees %','white male managers %'and 'white male executives %'. \n\nHow many proffesionals we have is also very important for diversity.","dc7e4995":"# 1.Visualization and EDA"}}