{"cell_type":{"7c9716e2":"code","fe4841a5":"code","4f4956f2":"code","e24a79e0":"code","13f28874":"code","6f880c46":"code","3bc8e843":"code","5121cf37":"code","acbcb306":"code","459449ca":"code","df15f565":"code","51e59f88":"code","a65afbc8":"code","5e1d4a0d":"code","eb526716":"code","0e327b4c":"code","e44c2fc9":"code","698fb29c":"code","b5eb95f9":"code","5a15d9d7":"code","e5da7561":"code","d17cbd2c":"code","f4058dd0":"code","993ab706":"code","117c8f18":"code","b7ed9ab2":"code","6e2520f9":"code","262c6677":"code","6fb3169f":"code","fb70acab":"code","59dff26c":"code","41b5cb06":"markdown","35d3af9f":"markdown","1ba09a8b":"markdown","4f59a3a9":"markdown","f49b909c":"markdown","85ffd58e":"markdown","6f4a10c7":"markdown","3c848ac3":"markdown","0b3cf0c9":"markdown","8c5f03ba":"markdown","cd07a163":"markdown"},"source":{"7c9716e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe4841a5":"import matplotlib.pyplot as plt\nimport seaborn as sns","4f4956f2":"from sklearn.model_selection import StratifiedKFold","e24a79e0":"def set_seed(seed=42):\n    '''Sets the seed of the entire notebook so results are the same every time we run.\n    This is for REPRODUCIBILITY.'''\n    import os\n    import random\n    import numpy as np\n    \n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nset_seed()","13f28874":"jigsaw_toxic = pd.read_csv(\"\/kaggle\/input\/jigsaw-multilingual-toxic-comment-classification\/jigsaw-toxic-comment-train.csv\")\n\njigsaw_unintended_bias = pd.read_csv(\"\/kaggle\/input\/jigsaw-multilingual-toxic-comment-classification\/jigsaw-unintended-bias-train.csv\")","6f880c46":"jigsaw_unintended_bias = jigsaw_unintended_bias[jigsaw_unintended_bias.toxicity_annotator_count>5]\n\njigsaw_toxic['dataset'] = ['jigsaw_toxic'] * len(jigsaw_toxic)\njigsaw_unintended_bias['dataset'] = ['jigsaw_unintended_bias'] * len(jigsaw_unintended_bias)","3bc8e843":"print(jigsaw_toxic.shape)\nprint(jigsaw_unintended_bias.shape)","5121cf37":"jigsaw_toxic.head()","acbcb306":"jigsaw_unintended_bias.head()","459449ca":"jigsaw_toxic = jigsaw_toxic[['id', 'dataset' ,'comment_text', 'toxic', 'severe_toxic', 'obscene','threat','insult','identity_hate']]\njigsaw_unintended_bias = jigsaw_unintended_bias[['id', 'dataset' ,'comment_text', 'toxic', 'severe_toxicity', 'obscene','threat','insult','identity_attack']]\njigsaw_unintended_bias.columns = ['id', 'dataset' , 'comment_text', 'toxic', 'severe_toxic', 'obscene','threat','insult','identity_hate']","df15f565":"print(jigsaw_toxic.shape)\nprint(jigsaw_unintended_bias.shape)","51e59f88":"# Multiplication factors for categories.\ncat_mtpl = {'toxic': 1, \n            'severe_toxic': 1.75, \n            'obscene': 0.95,\n            'threat': 2, \n            'insult': 1.6, \n            'identity_hate': 1.95}\n\n# Target buckets\ntarget_buckets = {\n    True: 'toxic',\n    False: 'non_toxic'\n}","a65afbc8":"features = []\nfor k,v in cat_mtpl.items():\n    if k in jigsaw_toxic.columns:\n        features.append(k)\n        print(k,v)\n        jigsaw_toxic[k] *= v","5e1d4a0d":"jigsaw_toxic['score'] = jigsaw_toxic[features].sum(axis=1)","eb526716":"jigsaw_unintended_bias['score'] = jigsaw_unintended_bias[features].sum(axis=1)\njigsaw_unintended_bias_mask_less_toxic =  (jigsaw_unintended_bias.toxic < 0.5)\njigsaw_unintended_bias.loc[jigsaw_unintended_bias_mask_less_toxic, 'score'] = jigsaw_unintended_bias[jigsaw_unintended_bias_mask_less_toxic].toxic","0e327b4c":"jigsaw_all_data = pd.concat([jigsaw_toxic, jigsaw_unintended_bias])\njigsaw_all_data.shape","e44c2fc9":"jigsaw_all_data['target'] = (jigsaw_all_data['score'] > 1).map(target_buckets)","698fb29c":"jigsaw_all_data.head()","b5eb95f9":"sum(jigsaw_all_data.duplicated(subset=['comment_text']))","5a15d9d7":"jigsaw_all_data = jigsaw_all_data.drop_duplicates(subset=['comment_text']).reset_index(drop=True)","e5da7561":"jigsaw_all_data.shape","d17cbd2c":"num_bins = int(np.floor(1 + np.log2(len(jigsaw_all_data))))\njigsaw_all_data.loc[:,'bins'] = pd.cut(jigsaw_all_data['score'],\n                                bins=num_bins,\n                                labels=False)\n\nbins = jigsaw_all_data.bins.to_numpy()\n\njigsaw_all_data['kfold_regression'] = -1\nkfold = StratifiedKFold(n_splits= 5,\n                        shuffle=True,\n                        random_state=42)\n\nfor k , (train_idx,valid_idx) in enumerate(kfold.split(X=jigsaw_all_data,y=bins)):\n    jigsaw_all_data.loc[valid_idx,'kfold_regression'] = k","f4058dd0":"jigsaw_all_data.head()","993ab706":"jigsaw_all_data.kfold_regression.value_counts()","117c8f18":"jigsaw_all_data['kfold_classification'] = -1\nkfold = StratifiedKFold(n_splits= 5,\n                        shuffle=True,\n                        random_state=42)\n\nfor k , (train_idx,valid_idx) in enumerate(kfold.split(X=jigsaw_all_data,y=jigsaw_all_data.target)):\n    jigsaw_all_data.loc[valid_idx,'kfold_classification'] = k","b7ed9ab2":"jigsaw_all_data.kfold_classification.value_counts()","6e2520f9":"sns.displot(data=jigsaw_all_data[jigsaw_all_data.dataset == 'jigsaw_toxic'],\n           kind='kde',\n           x='score',\n           hue='kfold_regression',\n           multiple='stack',\n           alpha=.7, linewidth=0, aspect=20\/7);\nplt.title('Jigsaw_toxic Dataset');\n\n# sns.set(rc={'figure.figsize':(15,7)})","262c6677":"sns.displot(data=jigsaw_all_data[jigsaw_all_data.dataset == 'jigsaw_unintended_bias'],\n           kind='kde',\n           x='score',\n           hue='kfold_regression',\n           multiple='stack',\n           alpha=.7, linewidth=0, aspect=20\/7);\nplt.title('jigsaw_unintended_bias Dataset');\n","6fb3169f":"sns.displot(data=jigsaw_all_data,\n           x='score',\n           kind='kde',\n           hue='bins',\n           multiple='stack',\n           palette=\"viridis\",\n           alpha=0.5,\n           linewidth=0,\n           aspect=20\/7,\n           warn_singular = False\n           );\n# sns.set(rc={'figure.figsize':(15,7)})","fb70acab":"jigsaw_all_data[['id', 'dataset', 'comment_text','score', 'target','kfold_regression', 'kfold_classification']].to_csv('jigsaw_training_data.csv')","59dff26c":"!ls","41b5cb06":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Multiplication factors for categories<\/h1><\/span>\n\n<span style=\"color: #000508; font-family: Segoe UI; font-size: 1.5em; font-weight: 300;\"> Reference from @ekaterinadranitsyna <a href=\"https:\/\/www.kaggle.com\/ekaterinadranitsyna\/regression-ensemble-lb-0-78\">notebook<\/a><\/span>","35d3af9f":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Merging Datasets<\/h1><\/span>","1ba09a8b":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Dropping duplicates<\/h1><\/span>","4f59a3a9":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Selecting Features<\/h1><\/span>","f49b909c":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Making KFolds using Score<\/h1><\/span>","85ffd58e":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Making KFolds using Target<\/h1><\/span>","6f4a10c7":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Set Seed for Reproducibility<\/h1><\/span>","3c848ac3":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Loading Datasets<\/h1><\/span>","0b3cf0c9":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Saving the Dataset <\/h1><\/span>","8c5f03ba":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">How score distributed in Bins <\/h1><\/span>","cd07a163":"# <span><h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">How score distributed in Folds <\/h1><\/span>"}}