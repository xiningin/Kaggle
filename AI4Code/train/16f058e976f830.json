{"cell_type":{"9cecc0a7":"code","9e05884c":"code","e9d986d3":"code","cf780b9d":"code","87dc08f7":"code","2b3244cb":"code","58876e1a":"code","7763e11d":"code","8a395e4a":"code","eef0ba9b":"code","7e903ec9":"code","f7be5c19":"code","8400d8ca":"code","a407a962":"code","ec1806cd":"code","91010d17":"code","70f3a6cb":"code","be82323f":"code","4ad77ca9":"code","8048528a":"code","9e2e9a97":"code","e7ba60f0":"code","7ca23eae":"code","59b4d942":"code","17705dcc":"code","86296d60":"code","386a785c":"code","f95d2f5e":"code","0f9d7c92":"code","2889882f":"code","7c5e0e4d":"code","6906550d":"code","ce0a222c":"code","7ef099b5":"code","58891d9d":"code","12cc6fae":"code","1fa9b9d3":"code","0c5d6c3c":"code","82ae5831":"code","16ecf8a8":"code","66953935":"code","ca363376":"code","93b0b1dd":"code","5e549f3b":"code","d1c349ac":"code","9157c906":"code","157b1b51":"code","bc1decea":"code","26d345f6":"code","775c2f8a":"markdown","a1545f5a":"markdown","9d4412fc":"markdown"},"source":{"9cecc0a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9e05884c":"import pandas as pd\ntitanic_train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic_test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","e9d986d3":"titanic_train.head()","cf780b9d":"#check null values\ntitanic_train.isnull().sum()","87dc08f7":"#Lets remove Cabin and Embarked \ntitanic_train.drop(['Cabin','Embarked'],axis=1,inplace=True)","2b3244cb":"# Lets impute the null values with mean or median\ntitanic_train.describe()","58876e1a":"titanic_train.Age.value_counts()","7763e11d":"import random\ntitanic_train['Age']=titanic_train['Age'].fillna(random.randint(24,31))","8a395e4a":"#again check for null values\ntitanic_train.isnull().sum()","eef0ba9b":"#Let's convert the categorical value of Sex to binary[0,1]\ntitanic_train.Sex.replace(['male','female'],[0,1],inplace=True)","7e903ec9":"titanic_train.head()","f7be5c19":"#let's remove name and ticket where these variables don't significantly explain the data\ntitanic_train.drop(['Ticket','Name'],axis=1,inplace=True)","8400d8ca":"titanic_train.head()","a407a962":"X_train=titanic_train.drop('Survived',axis=1)\ny_train=titanic_train.Survived","ec1806cd":"#lets scale the variables of titanic_train\nfrom sklearn.preprocessing import StandardScaler","91010d17":"scale=StandardScaler()\nX_train[X_train.columns]=scale.fit_transform(X_train)","70f3a6cb":"X_train.corr()","be82323f":"print(titanic_train.head())\nprint(X_train.head())","4ad77ca9":"#Lets apply RFE(recursive feature elimination)\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression","8048528a":"model=LogisticRegression()","9e2e9a97":"rfe=RFE(model,6)\nX_train_rfe=rfe.fit(X_train,y_train)","e7ba60f0":"list(zip(X_train.columns, X_train_rfe.support_, X_train_rfe.ranking_))","7ca23eae":"X_rfe=X_train.columns[X_train_rfe.support_]\nX_rfe_train=X_train[X_rfe]","59b4d942":"X_rfe_train.head()","17705dcc":"model.fit(X_rfe_train,y_train)","86296d60":"y_pred=model.predict(X_rfe_train)","386a785c":"from sklearn import metrics","f95d2f5e":"metrics.accuracy_score(y_train,y_pred)","0f9d7c92":"confusion=metrics.confusion_matrix(y_train,y_pred)\nprint(confusion)","2889882f":"metrics.mean_squared_error(y_train,y_pred)","7c5e0e4d":"TP = confusion[1,1] # true positive \nTN = confusion[0,0] # true negatives\nFP = confusion[0,1] # false positives\nFN = confusion[1,0] # false negatives","6906550d":"fpr, tpr, thresholds = metrics.roc_curve( y_train, y_pred, drop_intermediate = False )\nprint(fpr , tpr , thresholds)","ce0a222c":"import matplotlib.pyplot as plt\nimport seaborn as sns","7ef099b5":"def draw_roc( actual, pred ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, pred,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, pred )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None","58891d9d":"draw_roc(y_train,y_pred)","12cc6fae":"titanic_test['Age']=titanic_test['Age'].fillna(random.randint(24,30))\ntitanic_test['Fare']=titanic_test['Fare'].fillna(titanic_test.Fare.mean())","1fa9b9d3":"x_test=titanic_test[X_train.columns]","0c5d6c3c":"x_test.Sex.replace(['male','female'],[0,1],inplace=True)","82ae5831":"x_test.head()","16ecf8a8":"x_test[x_test.columns]=scale.transform(x_test)","66953935":"x_test.head()","ca363376":"x_test.isnull().sum()","93b0b1dd":"x_test.drop('PassengerId',axis=1,inplace=True)","5e549f3b":"y_test=model.predict(x_test)","d1c349ac":"y_test","9157c906":"len(y_test)","157b1b51":"submission=pd.DataFrame({'PassengerId': titanic_test.PassengerId,'Survived':y_test})","bc1decea":"submission.head()","26d345f6":"submission.to_csv('survival predictions',index=False)","775c2f8a":"#lets predict on test data","a1545f5a":"We can see that Age have 177 values are null,cabin have large values are null","9d4412fc":"We see more number of occurances of age is between 24 to 30 so lets impute randomly from 24 to 30"}}