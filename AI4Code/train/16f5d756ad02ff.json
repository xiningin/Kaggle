{"cell_type":{"fefbf2f5":"code","a74f027a":"code","3c243ee3":"code","914ccf39":"code","f1f2e1fa":"code","579b7e21":"code","6275af96":"code","1ba5a781":"code","1e2c3cbf":"code","bc531eed":"code","28c1f749":"code","4f82b7c8":"code","0b557024":"code","c3dafaa1":"code","fb070913":"code","71f05782":"code","de1207d5":"code","ef6cff64":"code","70b4a860":"code","0a6ae2c4":"code","06ac67cf":"code","fb26e55a":"code","45c3ed48":"code","d1f3817b":"code","f2aae54a":"code","a0cc9322":"code","b9ff804a":"code","cb25bcce":"code","6202c29b":"code","b3d2c9b9":"markdown","7ec6f65b":"markdown","fa52b031":"markdown","1ed25fbb":"markdown","bdbfb8ea":"markdown","122bd0ff":"markdown","1a034b8a":"markdown","33868d41":"markdown","557daa79":"markdown","8b389c93":"markdown","193e863f":"markdown"},"source":{"fefbf2f5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score","a74f027a":"df = pd.read_csv('..\/input\/fish-market\/Fish.csv')","3c243ee3":"df.rename(columns= {'Length1':'LengthVer', 'Length2':'LengthDia', 'Length3':'LengthCro'}, inplace=True)","914ccf39":"df","f1f2e1fa":"df","579b7e21":"dmy = pd.get_dummies(df, columns = ['Species'], drop_first=True)\nX = dmy.drop(['Weight'], axis=1)\ny = dmy['Weight']","6275af96":"X","1ba5a781":"y","1e2c3cbf":"from sklearn.model_selection import train_test_split","bc531eed":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state =42)","28c1f749":"X_train.shape","4f82b7c8":"from sklearn.linear_model import Ridge","0b557024":"ridge_model = Ridge().fit(X_train, y_train)","c3dafaa1":"ridge_model","fb070913":"ridge_model.score(X_train, y_train) , ridge_model.score(X_test, y_test)","71f05782":"np.sqrt(mean_squared_error(y_train, ridge_model.predict(X_train))) , np.sqrt(mean_squared_error(y_test, ridge_model.predict(X_test)))","de1207d5":"ridge_model = Ridge(alpha=10000).fit(X_train, y_train)\nridge_model","ef6cff64":"ridge_model.score(X_train, y_train) , ridge_model.score(X_test, y_test)","70b4a860":"np.sqrt(mean_squared_error(y_train, ridge_model.predict(X_train))) , np.sqrt(mean_squared_error(y_test, ridge_model.predict(X_test)))","0a6ae2c4":"np.linspace(100,0.0001,1000)","06ac67cf":"lambdalar = np.linspace(100,0.0001,10000)\nridge_model = Ridge()\nkatsayilar = []\n\nfor i in lambdalar:\n    ridge_model.set_params(alpha = i)\n    ridge_model.fit(X_train, y_train)\n    katsayilar.append(ridge_model.coef_)\n    \nax=plt.gca()\nax.plot(lambdalar, katsayilar)\nax.set_xscale('log')\n\nplt.xlabel('Lambda(Alpha) De\u011ferleri')\nplt.ylabel('Katsay\u0131lar\/A\u011f\u0131rl\u0131klar')\nplt.title('Ridge Katsay\u0131lar\u0131')\n\n","fb26e55a":"from sklearn.linear_model import RidgeCV","45c3ed48":"alphaCV = RidgeCV(alphas = lambdalar, \n                  scoring = 'neg_mean_squared_error',\n                  normalize = True)","d1f3817b":"alphaCV.fit(X_train, y_train)","f2aae54a":"alphaCV.alpha_","a0cc9322":"alphaCV.coef_","b9ff804a":"ridge_tuned = Ridge(alpha= alphaCV.alpha_,\n                   normalize = True).fit(X_train,y_train)","cb25bcce":"ridge_tuned.score(X_train,y_train)","6202c29b":"ridge_tuned.score(X_test,y_test), np.sqrt(mean_squared_error(y_test, ridge_tuned.predict(X_test)))","b3d2c9b9":"alpha n\u0131n de\u011feri artt\u0131kca katsay\u0131lar s\u0131f\u0131ra daha cok yakla\u015f\u0131r. ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin etkileri azal\u0131r. bu durum modelin e\u011fitim verilerindeki ba\u015far\u0131s\u0131n\u0131 azalt\u0131rken, modelin genelle\u015ftirmesine yard\u0131m edebilir. bu de\u011fi\u015fkenli\u011fi \u00f6rnekte g\u00f6sterelim","7ec6f65b":"**Optimum alpha de\u011feri--->**","fa52b031":"**alpha de\u011ferini 10000 yapal\u0131m**","1ed25fbb":"**bir de bahsettigimiz katsay\u0131 de\u011fi\u015fimini grafik \u00fczerinde g\u00f6relim**","bdbfb8ea":"**Kategorik degiskenlerimize normalizasyon uygulayalim**","122bd0ff":"linspace fonksiyonu ile belirledi\u011fimiz iki say\u0131 aras\u0131nda ard\u0131\u015f\u0131k bir say\u0131 dizisi elde ediyoruz. bu say\u0131 dizisini lambda de\u011feri olarak kullanaca\u011f\u0131z ve grafi\u011fimizi \u00e7izece\u011fiz.","1a034b8a":"grafikte de g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi alpha de\u011feri artt\u0131k\u00e7a katsay\u0131lar iyice s\u0131f\u0131ra yakla\u015f\u0131yor. b\u00f6ylece ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin ba\u011f\u0131ml\u0131 de\u011fi\u015fken \u00fczeindeki etkileri azal\u0131yor. \u015fimdi akl\u0131m\u0131za bir soru tak\u0131l\u0131yor, alpha de\u011ferini nas\u0131l belirleyece\u011fim. bu i\u015fi yine sklearn k\u00fct\u00fcphanesi bizim i\u00e7in hallediyor. \u015fimdi bu i\u015flemleri g\u00f6relim.","33868d41":"**data setimizi haz\u0131rlad\u0131ktan sonra \u015fimdide Ridge regresyon modelimizi kural\u0131m.**","557daa79":"test verileri ba\u015far\u0131 oran\u0131 ve hata tahmini de\u011ferleri bir \u00f6nceki model olan coklu do\u011frulsal regresyon ile kar\u015f\u0131la\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda , \u00e7oklu do\u011frusal regresyonun \u00e7ok az daha iyi sonu\u00e7 verdi\u011fi g\u00f6r\u00fclmekte. bu nas\u0131l olabilir?. \u015f\u00f6yle bir yorum yapabiliriz. rigde regresyonun buldu\u011fu optimum alpha de\u011feri yukar\u0131dada g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi 0,0001 yani nerdeyse s\u0131f\u0131r, asl\u0131nda bizim lambdalar i\u00e7in olu\u015fturdu\u011fumuz en d\u00fc\u015f\u00fck say\u0131 olan 0,0001 de\u011ferini se\u00e7mi\u015f. biz biliyoruzki asl\u0131nda alpha de\u011feri s\u0131f\u0131r olsa modelimiz \u00e7oklu do\u011frusal regresyon f\u00f6rm\u00fcl\u00fc oluyor. bu veri seti i\u00e7in asl\u0131nda ridge regresyonun bize sa\u011flad\u0131\u011f\u0131 herhangi bir avantaj yok. buda modelimizde herhangi bir overfitting olmad\u0131\u011f\u0131n\u0131da g\u00f6steriyor. \u00e7oklu do\u011frusall\u0131k olsada ridge regresyonun form\u00fcl yap\u0131s\u0131 ile bu veri seti i\u00e7in bize herhangi bir avantaj sa\u011flamad\u0131.","8b389c93":"Ridge modelde alpha de\u011feri manuel olarak girilir ve herhangi bir de\u011fer girilmedi\u011finde bu de\u011fer 1.0 olarak kabul edilir. alpha de\u011feri modeldeki katsay\u0131lar\u0131n etkisini azalt\u0131p artt\u0131rmakt\u0131r, b\u00f6ylece ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin sonu\u00e7 \u00fczerine etkisi ayarlanm\u0131\u015f olur. bu \u015fekilde a\u015f\u0131r\u0131 \u00f6\u011frenme problemlerinin \u00f6n\u00fcne ge\u00e7ilmi\u015f olabilir. a\u015f\u0131r\u0131 \u00f6\u011frenme problemlerinde model train veri setinde \u00e7ok y\u00fcksek score de\u011ferine ula\u015f\u0131rken test veri setinde score de\u011feri ciddi oranda d\u00fc\u015fer. ","193e863f":"**Tahmin ve optimum alpha de\u011ferinin bulunmas\u0131**"}}