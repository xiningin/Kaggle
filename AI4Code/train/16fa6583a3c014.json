{"cell_type":{"f4c1240c":"code","221c1162":"code","1d03a8e8":"code","d3c5d1ca":"code","1c1c70a7":"code","c69dea3a":"code","e5127e33":"code","d7af6ddc":"markdown","ce746d9d":"markdown","70ed6a65":"markdown","836db62a":"markdown"},"source":{"f4c1240c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","221c1162":"#Code by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook\n\n#Imports \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\npath = \"..\/input\/catalan-language-corpus-from-wikipedia-v10\/\"  #Insert path here\ndatabase = path + 'corpus.ca.db'","1d03a8e8":"#Code by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook\n\nconn = sqlite3.connect(database)\n\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", conn)\ntables","d3c5d1ca":"#Code by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook\n\nwords = pd.read_sql(\"\"\"SELECT *\n                        FROM words;\"\"\", conn)\nwords","1c1c70a7":"#Code by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook\n\npages = pd.read_sql(\"\"\"SELECT *\n                        FROM pages;\"\"\", conn)\npages","c69dea3a":"#Code by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook\n\nbiwords = pd.read_sql(\"\"\"SELECT *\n                        FROM biwords;\"\"\", conn)\nbiwords","e5127e33":"Pages_words = pd.read_sql(\"\"\"SELECT *\n                        FROM pages_words\n                        JOIN words ON words.wid = pages_words.wid;\"\"\", conn)\nPages_words","d7af6ddc":"That's all for now","ce746d9d":"#After that snippet below I gave up. I even burnt a pan. To get worst it appeared that message to migrate to Google notebooks\/Cloud. That's enough for me. ","70ed6a65":"List of pages-words and their words\n\n\"JOIN is used when you want to connect two tables to each other. It works when you have a common key in each of them. Understanding the concept of Keys is crucial for connecting (joining) between data set (tables). A key is uniquely identifies each record (row) in a table. It can consinst of one value (cell) - usually ID, or from a combination of values that are unique in the table.\"\n\nWhen joinin between different tables, you must:\n\n\"Decide what type of join to use. The most common are:\"\n\n\"(INNER) JOIN - keep only records that match the condition (after the ON) in both the tables, and records in both tables that do not match wouldn't appear in the output\"\n\n\"LEFT JOIN - keep all the values from the first (left) table - in conjunction with the matching rows from the right table. The columns from the right table, that don't have matching value in the left, would have NULL values.\"\n\n\"Specify the common value that is used to connect the tables (the id of the country in that case).\"\n\n\"Make sure that at least one of the values has to be a key in its table. In our case, it's the words.id. \n\n\"JOINs, and using them incorrectly, is the most common and dangerious mistake when writing complicated queries\"\n\nCode by Dima Rudov https:\/\/www.kaggle.com\/dimarudov\/data-analysis-using-sql\/notebook","836db62a":"![](https:\/\/image.slidesharecdn.com\/sqliteviewer-150505015930-conversion-gate02\/85\/sqlite-db-viewer-the-first-choice-to-preview-sqlite-files-3-320.jpg?cb=1430791349)pt.slideshare.net"}}