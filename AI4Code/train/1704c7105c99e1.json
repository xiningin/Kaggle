{"cell_type":{"4661021d":"code","fc013088":"code","c3a8b06a":"code","cc54da37":"code","97d95eae":"code","a2d26a77":"code","fe5ff5c4":"code","ea4d5dcc":"code","8672f6c3":"code","fae44179":"code","5251faad":"code","8c72ac9e":"code","6a37efc6":"code","c5b2ca29":"code","98b106b2":"code","a3e445c6":"code","37271c70":"code","98e644a5":"code","cd9ef301":"code","0ffdeac5":"code","e91270cd":"code","9595e165":"code","3fb95738":"code","75360ed8":"code","caa70b67":"code","9c2dc061":"code","5860afdd":"code","29975abc":"code","fe410b2e":"code","c343a994":"code","3edf99c6":"markdown","bb60bfab":"markdown","a12aaba1":"markdown","9b85669f":"markdown","467d4ad5":"markdown","f1beb0f7":"markdown","4e8be548":"markdown","65cf0e5b":"markdown","f02728a9":"markdown","3a5d7b35":"markdown","6881c0ed":"markdown","b97040da":"markdown","eaede74b":"markdown"},"source":{"4661021d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport networkx as nx\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fc013088":"conf = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\ndth = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')\nrecov = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv')","c3a8b06a":"conf[:5]","cc54da37":"dth[:5]","97d95eae":"recov[:5]","a2d26a77":"conf_time_cols = conf.columns.tolist()[4:]\ndth_time_cols = dth.columns.tolist()[4:]\nrecov_time_cols = recov.columns.tolist()[4:]","fe5ff5c4":"conf_graph = nx.Graph()\ndth_graph = nx.Graph()\nrecov_graph = nx.Graph()","ea4d5dcc":"for i in range(conf.__len__()):\n    conf_graph.add_edge(conf.iloc[i]['Country\/Region'],conf.iloc[i]['Province\/State'],relation='state-level')\n    conf_graph.add_edge(conf.iloc[i]['Province\/State'],conf.iloc[i][conf_time_cols[-1]],relation='number-level')","8672f6c3":"plt.figure(figsize=(50,50))\nnx.draw_networkx(conf_graph)","fae44179":"for i in range(dth.__len__()):\n    dth_graph.add_edge(dth.iloc[i]['Country\/Region'],dth.iloc[i]['Province\/State'],relation='state-level')\n    dth_graph.add_edge(conf.iloc[i]['Province\/State'],conf.iloc[i][dth_time_cols[-1]],relation='number-level')","5251faad":"plt.figure(figsize=(50,50))\nnx.draw_networkx(dth_graph)","8c72ac9e":"for i in range(recov.__len__()):\n    recov_graph.add_edge(dth.iloc[i]['Country\/Region'],dth.iloc[i]['Province\/State'],relation='state-level')\n    recov_graph.add_edge(conf.iloc[i]['Province\/State'],conf.iloc[i][recov_time_cols[-1]],relation='number-level')","6a37efc6":"plt.figure(figsize=(50,50))\nnx.draw_networkx(recov_graph)","c5b2ca29":"conf[conf_time_cols].describe().boxplot(figsize=(55,20))","98b106b2":"dth[dth_time_cols].describe().boxplot(figsize=(55,20))","a3e445c6":"recov[recov_time_cols].describe().boxplot(figsize=(55,20))","37271c70":"conf.loc[:,['Country\/Region','Province\/State',conf_time_cols[-1]]].groupby(['Country\/Region','Province\/State']).agg({\n    conf_time_cols[-1]: 'sum'\n})","98e644a5":"dth.loc[:,['Country\/Region','Province\/State',dth_time_cols[-1]]].groupby(['Country\/Region','Province\/State']).agg({\n    dth_time_cols[-1]: 'sum'\n})","cd9ef301":"recov.loc[:,['Country\/Region','Province\/State',recov_time_cols[-1]]].groupby(['Country\/Region','Province\/State']).agg({\n    recov_time_cols[-1]: 'sum'\n})","0ffdeac5":"total_cases = conf[conf_time_cols[-1]].sum()\ntotal_deaths = dth[dth_time_cols[-1]].sum()\ntotal_recovs = recov[recov_time_cols[-1]].sum()","e91270cd":"total_cases, total_deaths, total_recovs","9595e165":"death_rate = (total_deaths \/ total_cases) * 100.0\nrecov_rate = (total_recovs \/ total_cases) * 100.0","3fb95738":"plt.figure(figsize=(10,10))\nobjects = ('Death Ratio', 'Recover Ratio')\ny_pos = np.arange(len(objects))\nperformance = [death_rate,recov_rate]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.ylabel('%')\nplt.title('Death vs Recover Ratio')\n\nplt.show()","75360ed8":"plt.figure(figsize=(10,10))\nobjects = ('Total Confirmed','Total Deaths', 'Total Recovered')\ny_pos = np.arange(len(objects))\nperformance = [total_cases, total_deaths, total_recovs]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.title(\"Numbers of \" + \" - \".join(objects))\n\nplt.show()","caa70b67":"import plotly.express as px","9c2dc061":"conf['cases'] = conf[conf_time_cols[-1]]\ndth['cases'] = dth[dth_time_cols[-1]]\nrecov['cases'] = recov[recov_time_cols[-1]]","5860afdd":"hov_data = [\"Province\/State\", \"Country\/Region\",\"cases\"]","29975abc":"plt.figure(figsize=(25,25))\nfig = px.scatter_mapbox(conf, lat=\"Lat\", lon=\"Long\", hover_name=\"Province\/State\", hover_data=hov_data,\n                        color_discrete_sequence=[\"fuchsia\"],zoom=3)\nfig.update_layout(mapbox_style=\"carto-darkmatter\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","fe410b2e":"plt.figure(figsize=(50,50))\nfig = px.scatter_mapbox(dth, lat=\"Lat\", lon=\"Long\", hover_name=\"Province\/State\", hover_data=hov_data,\n                        color_discrete_sequence=[\"fuchsia\"],zoom=3)\nfig.update_layout(mapbox_style=\"carto-darkmatter\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","c343a994":"plt.figure(figsize=(25,25))\nfig = px.scatter_mapbox(recov, lat=\"Lat\", lon=\"Long\", hover_name=\"Province\/State\", hover_data=hov_data,\n                        color_discrete_sequence=[\"fuchsia\"],zoom=3)\nfig.update_layout(mapbox_style=\"carto-darkmatter\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","3edf99c6":"### Map of Confirmed cases on the last available day","bb60bfab":"## Overview over the Recovered Cases by time","a12aaba1":"## Latest Death Cases Grouped by Country\/Region and Province\/State","9b85669f":"## Recovered Cases at a Country-State Level","467d4ad5":"## Latest Confirmed Cases Grouped by Country\/Region and Province\/State","f1beb0f7":"### Map of Recovered cases on the last available day","4e8be548":"## Confirmed Cases at a Country-State Level","65cf0e5b":"## Latest Recovered Cases Grouped by Country\/Region and Province\/State","f02728a9":"## Overview over the Death Cases by time","3a5d7b35":"## Overview over the Confirmed Cases by time","6881c0ed":"## First Preview over the data","b97040da":"## Death Cases at a Country-State Level","eaede74b":"### Map of Death cases on the last available day"}}