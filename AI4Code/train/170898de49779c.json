{"cell_type":{"65c8828c":"code","8a97c7f1":"code","a40eed6c":"code","6b71b66c":"code","f2f449f5":"code","be18f9d7":"code","2029f474":"code","07f5f092":"code","fa8843d3":"code","f7164aed":"code","a70e912c":"code","590be6e3":"code","54c4f57f":"code","a677e6ce":"code","7a7c4238":"markdown"},"source":{"65c8828c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a97c7f1":"ds=pd.read_csv('\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","a40eed6c":"ds.head()","6b71b66c":"#checkin missini data\nds.isnull().sum()","f2f449f5":"x=ds.iloc[:,1:-1].values\ny=ds.iloc[:,-1].values","be18f9d7":"#dealin with missin data\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy='mean')\nimputer.fit(x[:,8:9])\nx[:,8:9]=imputer.transform(x[:,8:9])","2029f474":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nx[:,0]=le.fit_transform(x[:,0])\nx[:,4]=le.fit_transform(x[:,4])","07f5f092":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [5,6,9])], remainder='passthrough')\nx = np.array(ct.fit_transform(x))","fa8843d3":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25)","f7164aed":"from sklearn.preprocessing import StandardScaler #feature scaling \nsc=StandardScaler()\nx_train=sc.fit_transform(x_train)\nx_test=sc.fit_transform(x_test)","a70e912c":"from sklearn.neighbors import KNeighborsClassifier\nclsfr=KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=2)\nclsfr.fit(x_train,y_train)","590be6e3":"y_pred=clsfr.predict(x_test)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","54c4f57f":"from sklearn.metrics import confusion_matrix,accuracy_score\nprint(confusion_matrix(y_test,y_pred),accuracy_score(y_test,y_pred))","a677e6ce":"from sklearn.model_selection import cross_val_score\nacrcy=cross_val_score(estimator=clsfr,X=x_train,y=y_train,cv=10)\nprint('Accuracy',acrcy.mean()*100)\nprint('Standard Deviation {:.2f}%'.format(acrcy.std()*100))","7a7c4238":"K Nearest Neighbors"}}