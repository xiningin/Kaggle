{"cell_type":{"3c0a3cae":"code","65933962":"code","34952a15":"code","87f59330":"code","6671ee24":"code","4dff2303":"code","58d7627f":"code","ed2f552f":"code","2705d548":"markdown","7de100d7":"markdown","51ad07f9":"markdown","79d19555":"markdown","4482f2c3":"markdown","c80f1927":"markdown","2b4c878f":"markdown","10f1e0ba":"markdown"},"source":{"3c0a3cae":"import os\nimport glob\nimport cv2\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom scipy import stats\n\n\n\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'","65933962":"train_df = pd.read_csv('..\/input\/landmark-retrieval-2020\/train.csv')\ntrain_df","34952a15":"plt.title('landmark_id distribution')\nsns.distplot(train_df['landmark_id'])","87f59330":"sns.set()\nplt.title('Training set: number of images per class(line plot)')\nlandmarks_fold = pd.DataFrame(train_df['landmark_id'].value_counts())\nlandmarks_fold.reset_index(inplace=True)\nlandmarks_fold.columns = ['landmark_id','count']\nax = landmarks_fold['count'].plot(logy=True, grid=True)\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","6671ee24":"sns.set()\nlandmarks_fold_sorted = pd.DataFrame(train_df['landmark_id'].value_counts())\nlandmarks_fold_sorted.reset_index(inplace=True)\nlandmarks_fold_sorted.columns = ['landmark_id','count']\nlandmarks_fold_sorted = landmarks_fold_sorted.sort_values('landmark_id')\nax = landmarks_fold_sorted.plot.scatter(\\\n     x='landmark_id',y='count',\n     title='Training set: number of images per class(statter plot)')\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","4dff2303":"test_list = glob.glob('..\/input\/landmark-retrieval-2020\/test\/*\/*\/*\/*')\nindex_list = glob.glob('..\/input\/landmark-retrieval-2020\/index\/*\/*\/*\/*')","58d7627f":"print( 'Query', len(test_list), ' test images in ', len(index_list), 'index images')","ed2f552f":"plt.rcParams[\"axes.grid\"] = False\nf, axarr = plt.subplots(4, 3, figsize=(24, 22))\n\ncurr_row = 0\nfor i in range(12):\n    example = cv2.imread(test_list[i])\n    example = example[:,:,::-1]\n    \n    col = i%4\n    axarr[col, curr_row].imshow(example)\n    if col == 3:\n        curr_row += 1\n            \n#     plt.imshow(example)\n#     plt.show()","2705d548":"## 1.1 Train data\n\nIn this competition, you are asked to develop models that can efficiently retrieve landmark images from a large database. \nThe training set is available in the train\/ folder, with corresponding landmark labels in train.csv. ","7de100d7":"### Landmark_id distribuition","51ad07f9":"## Outline\n1. [File Exploration](#1)\n    1. [Training data](#2)\n    1. [Index data](#3)\n    1. [Display examples](#4)","79d19555":"### Training set: number of images per class(line plot)\n\n","4482f2c3":"## 1.3 Display examples","c80f1927":"# Google Landmark Retrieval 2020 - EDA\n<img src=\"https:\/\/github.com\/seriousran\/img_link\/blob\/master\/kg\/glr.jpg?raw=true\" alt=\"drawing\" style=\"width:520px;\"\/>\n\n\"This year, we have worked to set this up as a code competition and we have completely refreshed the test and index image sets.\"\n\nLet's start to dig it! :)\n\n### Past Related Competitions\n\n1. [Google Landmark Retrieval 2019](https:\/\/www.kaggle.com\/c\/landmark-retrieval-2019)\n1. [Google Landmark Retrieval Challenge](https:\/\/www.kaggle.com\/c\/landmark-retrieval-challenge)\n\n### The winner in last competition\n<img src=\"https:\/\/github.com\/seriousran\/img_link\/blob\/master\/kg\/lb_glr_2019.PNG?raw=true\" alt=\"drawing\"\/>\n\n\n\nReference: https:\/\/www.kaggle.com\/huangxiaoquan\/google-landmarks-v2-exploratory-data-analysis-eda","2b4c878f":"## 1.2 Test and Index data\n\nThe query images are listed in the test\/ folder, while the \"index\" images from which you are retrieving are listed in index\/. \n\nEach image has a unique id. Since there are a large number of images, each image is placed within three subfolders according to the first three characters of the image id (i.e. image abcdef.jpg is placed in a\/b\/c\/abcdef.jpg).\n\n0-f in 0-f in 0-f","10f1e0ba":"### Training set: number of images per class(scatter plot)"}}