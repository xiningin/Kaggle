{"cell_type":{"86890533":"code","f241a1ea":"code","c9e53d80":"code","5d5fc7e7":"code","1326651b":"code","564e945f":"code","62695608":"code","26581a11":"code","aaec2fc1":"code","bb0737b4":"code","fc9006c5":"code","cd13a210":"code","19e17437":"code","48550bec":"code","638295be":"code","fb0a1935":"code","6463300b":"code","b1d4580e":"code","ac6d689c":"code","2408cf70":"code","aac1d173":"code","66d0c510":"code","851281d7":"code","b1589dd9":"code","f8b426ad":"code","1a6c50ca":"markdown","4cbd19a4":"markdown","871c3055":"markdown","5a42ccb2":"markdown","92315784":"markdown","ec95d4a7":"markdown","50125a76":"markdown","bb7bf4b9":"markdown","88f449d3":"markdown","923574ad":"markdown","7bc36679":"markdown","395c8c08":"markdown","bce158ff":"markdown","b974c41f":"markdown","8b83ed1f":"markdown","c071f0ac":"markdown","7afbb3f3":"markdown","d01e1239":"markdown","a344c9cc":"markdown","7fe9e7c2":"markdown","6b43cc5d":"markdown","82dd46a3":"markdown","ec83aac6":"markdown"},"source":{"86890533":"import numpy as np\nimport pandas as pd \nimport time\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nplt.style.use('seaborn-darkgrid')\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\n\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')","f241a1ea":"df = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndf.head()","c9e53d80":"df.describe()","5d5fc7e7":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Education\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (12,6))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","1326651b":"cats = [\"sex\",\"smoker\",\"region\"]\nfor i in cats:\n    bar_plot(i)","564e945f":"def plot_hist(variable):\n    var = df[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize = (12,6))\n    plt.hist(df[variable], bins = 100)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","62695608":"numVar = [\"age\",\"bmi\",\"children\",\"charges\"]\nfor i in numVar:\n    plot_hist(i)","26581a11":"# Sex - Charges\ndf[[\"sex\",\"charges\"]].groupby([\"sex\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","aaec2fc1":"# Region - Charges\ndf[[\"region\",\"charges\"]].groupby([\"region\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","bb0737b4":"# Smoker - Charges\ndf[[\"smoker\",\"charges\"]].groupby([\"smoker\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","fc9006c5":"def multiple_detect_outliers(df,features):\n    outlier_indices = []\n\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25) \n        # 3rd quartile\n        Q3 = np.percentile(df[c],75) \n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 1)\n    \n    return multiple_outliers","cd13a210":"df.loc[multiple_detect_outliers(df,[\"age\",\"charges\",\"bmi\",\"children\"])]","19e17437":"# drop outliers\ndf = df.drop(multiple_detect_outliers(df,[\"age\",\"charges\",\"bmi\",\"children\"]),axis = 0).reset_index(drop = True)","48550bec":"df.info()","638295be":"heatmap=df.corr()\nax= plt.figure(figsize=(15,6))\nsns.heatmap(heatmap,linewidths=1,linecolor='white',annot=True)","fb0a1935":"linear_reg = LinearRegression()\nx = df.age.values.reshape(-1,1)\ny = df.charges.values.reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nlinear_reg.fit(X_train, y_train)\npred = linear_reg.predict(X_test)\nr2=(r2_score(y_test,pred))\nr2","6463300b":"ages = np.arange(df['age'].min(),df['age'].max()+1).reshape(-1,1)  \ny_head = linear_reg.predict(ages)\n\nplt.scatter(x,y)\nplt.plot(ages, y_head,color = \"red\")","b1d4580e":"x = df.bmi.values.reshape(-1,1)\ny = df.charges.values.reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nlinear_reg.fit(X_train, y_train)\npred = linear_reg.predict(X_test)\nr2=(r2_score(y_test,pred))\nr2","ac6d689c":"bmi = np.arange(df['bmi'].min(),df['bmi'].max()+1).reshape(-1,1)  \ny_head = linear_reg.predict(bmi)\n\nplt.scatter(x,y)\nplt.plot(bmi, y_head,color = \"red\")","2408cf70":"x = df.children.values.reshape(-1,1)\ny = df.charges.values.reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nlinear_reg.fit(X_train, y_train)\npred = linear_reg.predict(X_test)\nr2=(r2_score(y_test,pred))\nr2","aac1d173":"children = np.arange(df['children'].min(),df['children'].max()+1).reshape(-1,1)  \ny_head = linear_reg.predict(children)\n\nplt.scatter(x,y)\nplt.plot(children, y_head,color = \"red\")","66d0c510":"df.smoker.replace(('yes', 'no'), (1, 0), inplace=True)\n\nx = df.smoker.values.reshape(-1,1)\ny = df.charges.values.reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nlinear_reg.fit(X_train, y_train)\npred = linear_reg.predict(X_test)\nr2=(r2_score(y_test,pred))\nr2","851281d7":"df.smoker.replace(('yes', 'no'), (1, 0), inplace=True)\ndf.sex.replace(('male', 'female'), (1, 0), inplace=True)\ndf.region = pd.Categorical(df.region)\ndf['region'] = df.region.cat.codes\ndf.head()","b1589dd9":"multiple_linear_reg = LinearRegression()\nx = df.iloc[:,[0,2,4]].values\ny = df.charges.values.reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nlinear_reg.fit(X_train, y_train)\npred = linear_reg.predict(X_test)\nr2=(r2_score(y_test,pred))\nr2","f8b426ad":"polynomial_regression = PolynomialFeatures(degree = 6)\n\nx = df.age.values.reshape(-1,1)\ny = df.charges.values.reshape(-1,1)\n\nx_polynomial = polynomial_regression.fit_transform(x)\n\nlinear_regression2 = LinearRegression()\nlinear_regression2.fit(x_polynomial,y)\n\ny_head2 = linear_regression2.predict(x_polynomial)\n\n\nages = np.arange(df['age'].min(),df['age'].max()+1).reshape(-1,1)  \n\nplt.scatter(x,y)\nplt.plot(x,y_head2,color= \"green\",label = \"poly\")\nplt.legend()\nplt.show()\n","1a6c50ca":"<a id = \"11\"><\/a><br>\n## Multiple Linear Regression","4cbd19a4":"Linear regression model can be use for the smoker & charges prediction with aprox %60","871c3055":"<a id = \"7\"><\/a><br>\n# Outlier Detection","5a42ccb2":"<a id = \"4\"><\/a><br>\n## Categorical Variable","92315784":"<a id = \"10\"><\/a><br>\n## Linear Regression","ec95d4a7":"There is no null value for any feature, so we deont need to fill missing values","50125a76":"* Training : 70% Testing : 30%","bb7bf4b9":"* Linear regression model is not working well for ages,bm, and children data to charges\n\nLets continue wiht smoking","88f449d3":"<a id = \"9\"><\/a><br>\n# Regressions\n\nWe will try to model for 3 regression model. First of all Linear regression, before doing that we have to inspect the data more in order to choise best regression model to fit.","923574ad":"* There is no children person are highest frequency\n* Most of person's charges are lower than 15000s.\n* Ages are evenly distributed\n* Bmi values are about between 25 and 35","7bc36679":"* We choosed multiple features in order to fit multiple linear regression.\n* Selected features are : \"Age\", \"Bmi\", \"Smoker\"\n* After that our prediction score is higher than %70.","395c8c08":"<a id=\"2\"><\/a><\/br>\n## Variable Description\n\n1. age\n1. sex\n1. bmi\n1. children\n1. smoker\n1. region\n1. charges","bce158ff":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Sex,Smoker,Region\n* Numerical Variable: Age,BMI,Children,Charges","b974c41f":"<a id=\"1\"><\/a><\/br>\n## Load and Check Data","8b83ed1f":"Highest correlation between age and charges so we will continue with Age&Charges","c071f0ac":"<a id = \"13\"><\/a><br>\n# Conculision\n\n * Best model in regressions is Multiple Linear Regression with r2 score is higher than %70\n * If you have more children charges are lower than the others\n * There is a direct proportion for age and charges. It means that if you old than charges for medical is high too\n * Last sentence is of course smokers pay for medical insurance is high. Quit smoking...","7afbb3f3":"As we can see that when the ages are incerasing then charges increased as well\nand the another feature we want to check for linear regression is bmi&charges","d01e1239":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n* Sex - Charges\n* Region - Charges\n* Smoker - Charges","a344c9cc":"<a id = \"12\"><\/a><br>\n## Polynomial Regression","7fe9e7c2":"<a id = \"5\"><\/a><br>\n## Numerical Variable","6b43cc5d":"<a id = \"8\"><\/a><br>\n# Missing Value","82dd46a3":"Sex and Region are approx same but the non-somking persons are higher than smoking persons","ec83aac6":"# INTRODUCTION\n\n![](https:\/\/www.itij.com\/sites\/default\/files\/styles\/hero_image_small\/public\/2020-09\/health-insurance-cost-balance2.jpg?itok=jwHmitjn)\n\n\n<font color=\"blue\"\/>\nLets check the data and analysis on medical costs. \nAfter that drop some outlier rows and filling the missing values as well.\n\nThen we will try to make some regression models to fit our data like Linear, Multiple and Polynomial Regressions...\n\nContent:\n    \n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n     * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n1. [Regressions](#9)\n    * [Linear Regression](#10)\n    * [Multiple Linear Regression](#11)\n    * [Polynomial Regression](#12)\n1. [Conclusion](#13)"}}