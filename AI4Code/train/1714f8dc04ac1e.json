{"cell_type":{"0b35c3b2":"code","1936df9b":"code","b823185e":"code","17149066":"code","9e4f835b":"code","07a1ef86":"code","fc70f6e9":"code","92de0825":"code","9112928a":"code","d440c972":"code","12e5617d":"code","5300d6aa":"code","0b986c67":"code","00bed772":"code","8850625e":"code","784d8b60":"markdown","716bb2ec":"markdown","c6ce1e6b":"markdown","5d1af08c":"markdown","83f1865a":"markdown"},"source":{"0b35c3b2":"!apt install -y build-essential swig curl\n!curl https:\/\/raw.githubusercontent.com\/automl\/auto-sklearn\/master\/requirements.txt | xargs -n 1 -L 1 pip install\n!pip install auto-sklearn","1936df9b":"import autosklearn\nprint(autosklearn.__version__)","b823185e":"import pandas as pd\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/test.csv')","17149066":"# Fill NaNs\ntest['Age'].fillna((train['Age'].mean()), inplace=True)\ntrain['Age'].fillna((train['Age'].mean()), inplace=True)\ntest['Fare'].fillna((train['Fare'].mean()), inplace=True)\ntrain['Fare'].fillna((train['Fare'].mean()), inplace=True)","9e4f835b":"# Dropping some columns:\ntrain.drop(['PassengerId','Name','Ticket','Cabin'], axis=1, inplace=True)\ntest.drop(['PassengerId', 'Name','Ticket','Cabin'], axis=1, inplace=True)","07a1ef86":"# Imputing\ntrain_cols = train.columns.to_list()\ntest_cols = test.columns.to_list()\n\nfrom sklearn.impute import SimpleImputer\nimport numpy as np\n\nimputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\n\ntrain = imputer.fit_transform(train)\ntest = imputer.fit_transform(test)\n\ntrain = pd.DataFrame(train, columns = train_cols)\ntest = pd.DataFrame(test, columns = test_cols)","fc70f6e9":"target = train.filter(['Survived'])\ntarget['Survived'] = pd.to_numeric(target['Survived'])","92de0825":"from sklearn.preprocessing import StandardScaler, LabelEncoder\n\ndef preprocess(df, encoder=None,\n               scaler=None, cols_to_drop=None,\n               cols_to_encode=None, cols_to_scale=None):\n    \"\"\"\n    Preprocess input data\n    :param df: DataFrame with data\n    :param encoder: encoder object with fit_transform method\n    :param scaler: scaler object with fit_transform method\n    :param cols_to_drop: columns to be removed\n    :param cols_to_encode: columns to be encoded\n    :param cols_to_scale: columns to be scaled\n    :return: DataFrame\n    \"\"\"\n\n    if encoder:\n        for col in cols_to_encode:\n            df[col] = encoder.fit_transform(df[col])\n\n    if scaler:\n        for col in cols_to_scale:\n            df[col] = scaler.fit_transform(df[col].values.reshape(-1, 1))\n\n    if cols_to_drop:\n        df = df.drop(cols_to_drop, axis=1)\n\n    return df","9112928a":"cat_cols = ['Sex', 'Embarked']\ncont_cols = ['Age', 'SibSp', 'Parch', 'Fare']\n\ntrain = preprocess(train, encoder=LabelEncoder(), scaler=StandardScaler(),\n                  cols_to_drop=['Survived'], cols_to_encode=cat_cols,\n                  cols_to_scale=cont_cols)\n\ntest = preprocess(test, encoder=LabelEncoder(), scaler=StandardScaler(),\n                 cols_to_encode=cat_cols,\n                 cols_to_scale=cont_cols)","d440c972":"train['Pclass'] = pd.to_numeric(train['Pclass'])\ntest['Pclass'] = pd.to_numeric(test['Pclass'].astype(str).astype(int))","12e5617d":"import copy\n\nX_train = train.copy()\ny_train = target.copy()\nX_test = test.copy()","5300d6aa":"import autosklearn.classification\ncls = autosklearn.classification.AutoSklearnClassifier(\n    time_left_for_this_task=10*60,\n    per_run_time_limit=60,\n    n_jobs=-1\n)\ncls.fit(X_train, y_train)","0b986c67":"# 4:42\n# Print the final ensemble constructed by auto-sklearn\nprint(cls.show_models())","00bed772":"predictions = cls.predict(X_test)","8850625e":"submissions = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv\")\nsubmissions['Survived'] = predictions\nsubmissions.to_csv('submission_4.csv', index=False)","784d8b60":"# Installing Auto Sklearn","716bb2ec":"![](https:\/\/miro.medium.com\/max\/1000\/1*_wOrre885WuxLetqRXduBw.jpeg)","c6ce1e6b":"# Model Definition","5d1af08c":"# Data Preprocessing","83f1865a":"# Auto Sklearn\nAuto-Sklearn is an automated machine learning toolkit and a drop-in replacement for a scikit-learn estimator.\n\nAuto-Sklearn frees a machine learning user from algorithm selection and hyperparameter tuning. It leverages recent advantages in Bayesian optimization, meta-learning and ensemble construction."}}