{"cell_type":{"0118dfbf":"code","c0f039a4":"code","e467af86":"code","c65635d5":"code","c02a2631":"code","a9bb235c":"code","d70759e2":"code","440b49f3":"markdown","97624c75":"markdown","50076d6b":"markdown","9ea4b56f":"markdown","411fc2ee":"markdown","5037ea3b":"markdown","2b479961":"markdown","fcec37f8":"markdown","aa9f141c":"markdown","b14e1816":"markdown"},"source":{"0118dfbf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport datetime\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.stattools import adfuller","c0f039a4":"# Loading transaction data\ntrain_transaction = pd.read_csv('..\/input\/train_transaction.csv', index_col='TransactionID')\n","e467af86":"START_DATE = '2017-12-01'\nstartdate = datetime.datetime.strptime(START_DATE, '%Y-%m-%d')\n\ntrain_transaction['TransactionDT'] = train_transaction['TransactionDT'].apply(lambda x: (startdate + datetime.timedelta(seconds = x)))\ntrain_transaction['trans_yymm'] = train_transaction['TransactionDT'].map(lambda x: x.replace(day=1))\ntrain_transaction['trans_date'] = train_transaction['TransactionDT'].map(lambda x: x.date())","c65635d5":"fraud_rate_daily = train_transaction.groupby(['trans_date'])['isFraud'].mean()\n\n#Determing 30 day rolling statistics\nrolmean = fraud_rate_daily.rolling(30).mean()\nrolstd = fraud_rate_daily.rolling(30).std()\n\n#Plot rolling statistics:\norig = plt.plot(fraud_rate_daily, color='blue',label='Original')\nmean = plt.plot(rolmean, color='red', label='Rolling Mean')\nstd = plt.plot(rolstd, color='black', label = 'Rolling Std')\nplt.legend(loc='best')\nplt.title('Fraud Rate: Rolling Mean & Standard Deviation')\nplt.show(block=False)\n","c02a2631":"num_frauds_daily = train_transaction.groupby(['trans_date'])['isFraud'].sum()\n\n#Determing 30 day rolling statistics\nrolmean = num_frauds_daily.rolling(30).mean()\nrolstd = num_frauds_daily.rolling(30).std()\n\n#Plot rolling statistics:\norig = plt.plot(num_frauds_daily, color='blue',label='Original')\nmean = plt.plot(rolmean, color='red', label='Rolling Mean')\nstd = plt.plot(rolstd, color='black', label = 'Rolling Std')\nplt.legend(loc='best')\nplt.title('# Fraud transactions: Rolling Mean & Standard Deviation')\nplt.show(block=False)","a9bb235c":"# Fraud rate\ndftest = adfuller(fraud_rate_daily, autolag='AIC')\ndfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\nfor key,value in dftest[4].items():\n    dfoutput['Critical Value (%s)'%key] = value\nprint(dfoutput)","d70759e2":"# Number of Fraud transactions\ndftest = adfuller(num_frauds_daily, autolag='AIC')\ndfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\nfor key,value in dftest[4].items():\n    dfoutput['Critical Value (%s)'%key] = value\nprint(dfoutput)","440b49f3":"Fraud rates are lower in December with the lowest point around christmas day. The fraud rate from January onwards seems to hover ~4%. \n\nThe lower fraud rates in December could be due to higher number of genuine transactions in December. Lets test this by looking at the number of fraud transactions.","97624c75":"1. If anyone is using undersampling\/oversampling approaches to deal with the class imbalance. It could possibly be benefitial to consider the month\/date of transactions, try balancing classes over each month rather than over the entire training set.  \n\n2. If the drop in number of fraudulent activies we observed in May-2018, does indicate a shift in mean value. Then the expected number of fraudlent activities in test set could be lower than what we observed in the train set. \nA speculation but this could also possibly explain why models are getting higher LB AUC values than local CV AUC values.","50076d6b":"Fraud rate doesn't pass the ADF test for stationarity as expected from looking at the graph","9ea4b56f":"Number of fraudulent activities passes the ADF test for stationarity despite the drop we observed around May-2018","411fc2ee":"## How do these insights help with my modeling?","5037ea3b":"## Number of fraud transactions each day ","2b479961":"## Checking stationarity ","fcec37f8":"## Assuming the start date to be 1-Dec-2017 as hypothesized in the \"TransactionDT startdate\" kernel ","aa9f141c":"## Observed fraud rates each day","b14e1816":"Unlike the fraud rate, the rolling average seems pretty stable until May when we see a drop and possibly a shift in mean value?"}}