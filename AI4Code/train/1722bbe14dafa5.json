{"cell_type":{"acd4f0e6":"code","151be994":"code","66f7709e":"code","11576b9c":"code","20de4d3e":"code","2c54a4d9":"code","e1c73293":"code","63136ba4":"code","32b7d48f":"code","0dad313a":"code","8a97ec6b":"code","acd82d9c":"code","4a7af356":"code","02d9d756":"code","d934c285":"code","d17d1dd9":"markdown","2dab128c":"markdown","780428c6":"markdown","97243b69":"markdown","4760cd9d":"markdown","9f03eed3":"markdown","0e8077a9":"markdown","e49ee7fa":"markdown","e03a98e8":"markdown","0d9ee2aa":"markdown"},"source":{"acd4f0e6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n!pip install cufflinks plotly\n!pip install chart_studio\nfrom plotly.offline import iplot, init_notebook_mode\nimport cufflinks\ncufflinks.go_offline(connected=True)\ninit_notebook_mode(connected=True)\nimport plotly.express as px\nimport chart_studio.plotly as py\nfrom plotly.graph_objs import *\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","151be994":"#Load the data\nIndia_population = pd.read_csv('\/kaggle\/input\/covid19-in-india\/population_india_census2011.csv')\n\n#covid = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv',parse_dates={'DateTime' : ['Date', 'Time']}, \n                    #infer_datetime_format=True, index_col='DateTime')\n\nIndia_covid = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv',parse_dates=['Date'], \n                    infer_datetime_format=True)\n\n\nICMRTestingLabs = pd.read_csv('\/kaggle\/input\/covid19-in-india\/ICMRTestingLabs.csv')\n\nHospitalBeds = pd.read_csv('\/kaggle\/input\/covid19-in-india\/HospitalBedsIndia.csv')\n\nTestingDetails = pd.read_csv('\/kaggle\/input\/covid19-in-india\/StatewiseTestingDetails.csv', parse_dates = ['Date'],\n                            infer_datetime_format=True,  index_col='Date')\n\nAgeGroupDetails = pd.read_csv('\/kaggle\/input\/covid19-in-india\/AgeGroupDetails.csv')\n\n\nimport json \nf = open('\/kaggle\/input\/covid19-cases-in-india\/non_virus_deaths.json',) \ndata = json.load(f) ","66f7709e":"#Pick the data of Tamil Nadu\n\ncovid = India_covid[India_covid['State\/UnionTerritory']=='Tamil Nadu'].reset_index(drop=True).drop(['State\/UnionTerritory', 'Sno', 'Time'], axis = 1)\n\npopulation = India_population[India_population['State \/ Union Territory']=='Tamil Nadu'].reset_index(drop=True).drop(['State \/ Union Territory', 'Sno'], axis = 1)\n\nICMRTestingLabs = ICMRTestingLabs[ICMRTestingLabs['state']=='Tamil Nadu'].reset_index(drop=True).drop('state', axis = 1)\n\nHospitalBeds = HospitalBeds[HospitalBeds['State\/UT']=='Tamil Nadu'].reset_index(drop=True).drop(['State\/UT', 'Sno'], axis = 1)\n\nTestingDetails = TestingDetails[TestingDetails['State']=='Tamil Nadu'].drop('State', axis = 1)\n\n","11576b9c":"#Preprocessing\n#In covid data\n\nfor i in range(0, len(covid)):\n    if((i>=0 and i<=5) or (i>=25 and i<=36) or (i>=55 and i<=66) or (i>=86 and i<=97)):\n        covid['Date'].iloc[i] = (covid['Date'].iloc[i].strftime(\"%Y-%d-%m\"))\n        #print(covid['Date'].iloc[i])\n    else:\n        covid['Date'].iloc[i] = (covid['Date'].iloc[i].strftime(\"%Y-%m-%d\"))\n        #print(covid['Date'].iloc[i])\n               \n#","20de4d3e":"Total = India_population['Population'].sum()\nTN = population['Population']\nlabels = [\"Rest of the India\", 'TN']\nvalues = [float(Total - TN), float(TN)]\ncolors = ['rgb(211,211,211)', 'rgba(25, 140, 229, 0.8)']\nfig = go.Figure(data = [go.Pie(title = 'Population Percentage', labels= labels, values = values, textinfo='label+ percent', marker_colors = colors,\n                              textfont = dict(color = 'white'), pull = [.05,0])])\n\nfig.update_layout(title_text= 'Population of Tamil Nadu', showlegend = False)\n\nfig.show()","2c54a4d9":"Total_confirmed = India_covid.loc[India_covid.groupby('State\/UnionTerritory').Confirmed.idxmax()].Confirmed.sum()\nTotal_deaths = India_covid.loc[India_covid.groupby('State\/UnionTerritory').Deaths.idxmax()].Deaths.sum()\nTotal_cured = India_covid.loc[India_covid.groupby('State\/UnionTerritory').Cured.idxmax()].Cured.sum()\n\n\nTN_confirmed = covid.Confirmed.iloc[-1]\nTN_deaths = covid.Deaths.iloc[-1]\nTN_cured = covid.Cured.iloc[-1]\n\n\nconfirm = [Total_confirmed, TN_confirmed]\ncured = [Total_cured, TN_cured]\ndeaths = [Total_deaths, TN_deaths]\n\nspecs = [[{'type':'domain'}, {'type':'domain'}, {'type':'domain'}]]\nfig = make_subplots(rows=1, cols=3, specs = specs)\nlabels = [\"Rest of the India\", 'TN']\ncolors = ['rgb(211,211,211)', 'rgba(25, 140, 229, 0.8)']\n\n# Define pie charts\nfig.add_trace(go.Pie(title = dict(text = 'Confirmed', \n                                  font = dict(color = 'rgb(0,0,0)')),labels=labels, values=confirm, name='Confirmed',textinfo='label+ percent',\n                     marker_colors=colors, pull = [.05,0], insidetextorientation = 'horizontal'), 1, 1)\n\nfig.add_trace(go.Pie(title = dict(text = 'Cured', font = dict(color = 'rgb(0,0,0)')), labels=labels, values= cured, name='Cured', textinfo='label+ percent',\n                     marker_colors=colors, pull = [.05,0], insidetextorientation = 'horizontal'), 1, 2)\nfig.add_trace(go.Pie(title = dict(text = 'Deaths', font = dict(color = 'rgb(0,0,0)')), labels=labels, values=deaths, name='Deaths', textinfo='label+ percent',\n                     marker_colors=colors, pull = [.05,0], insidetextorientation = 'horizontal'), 1, 3)\n\nfig = go.Figure(fig)\n\nfig.update_layout(\n             showlegend = False\n             )\n\nfig.show()","e1c73293":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n                    x = covid.Date,\n                    y = covid.Confirmed,\n                    mode = \"lines\",\n                    name = \"Confirmed Cases\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= covid.Confirmed,\n                    showlegend= True,\n                    line = dict(color = 'rgba(25, 140, 229, 0.8)', width = 3)\n                    ))\n\n\nfig.add_trace(go.Scatter(\n        x=[covid.Date.iloc[-1]],\n        y=[covid.Confirmed.iloc[-1]],\n        mode='markers',\n        name = \"Confirmed Cases\",\n        text = [covid.Date.iloc[-1], covid.Confirmed.iloc[-1]],\n        marker=dict(color='rgba(25, 140, 229, 0.8)', size= 8),\n        showlegend= False,\n        \n    ))\n\n\n#data = [trace1]\nfig.update_layout(\n              xaxis= dict(title= 'Months',ticklen= 5,zeroline= False),\n              legend=dict(x=.05, y=1, traceorder='normal', font=dict(size=12,),),\n              plot_bgcolor='rgba(0,0,0,0)'\n             )\n\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=False,\n        l=100,\n        r=20,\n        t=110,\n    ),\n    plot_bgcolor='white'\n)\n\n\nannotations = []\n\n\nannotations.append(dict(xref='paper', x=0.95, y=covid.Confirmed.iloc[-1],\n                                  xanchor='left', yanchor='bottom',\n                                  text= str(covid.Confirmed.iloc[-1]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n\n\nfig.show()","63136ba4":"fig = go.Figure()\n\nactive = covid.Confirmed - covid.Cured - covid.Deaths\n\nfig.add_trace(go.Scatter(\n                    x = covid.Date,\n                    y = active,\n                    mode = \"lines\",\n                    name = \"Active Cases\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= active,\n                    showlegend= True,\n                    line = dict(color = 'rgba(25, 140, 229, 0.8)', width = 3)\n                    ))\n\n\nfig.add_trace(go.Scatter(\n        x=[covid.Date.iloc[-1]],\n        y=[active.iloc[-1]],\n        mode='markers',\n        name = \"Active Cases\",\n        text = [covid.Date.iloc[-1], active.iloc[-1]],\n        marker=dict(color='rgba(25, 140, 229, 0.8)', size= 8),\n        showlegend= False,\n        \n    ))\n\n\n#data = [trace1]\nfig.update_layout(\n              xaxis= dict(title= 'Months',ticklen= 5,zeroline= False),\n              legend=dict(x=.05, y=1, traceorder='normal', font=dict(size=12,),),\n              plot_bgcolor='rgba(0,0,0,0)'\n             )\n\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=False,\n        l=100,\n        r=20,\n        t=110,\n    ),\n    plot_bgcolor='white'\n)\n\n\nannotations = []\n\n\nannotations.append(dict(xref='paper', x=0.95, y=active.iloc[-1],\n                                  xanchor='left', yanchor='bottom',\n                                  text= str(active.iloc[-1]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n\n\nfig.show()","32b7d48f":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n                    x = covid.Date,\n                    y = covid.Deaths,\n                    mode = \"lines\",\n                    name = \"Deaths\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= covid.Deaths,\n                    showlegend= True,\n                    line = dict(color = 'rgba(25, 140, 229, 0.8)', width = 3)\n                    ))\n\n\nfig.add_trace(go.Scatter(\n        x=[covid.Date.iloc[-1]],\n        y=[covid.Deaths.iloc[-1]],\n        mode='markers',\n        name = \"COVID Deaths\",\n        text = [covid.Date.iloc[-1], covid.Deaths.iloc[-1]],\n        marker=dict(color='rgba(25, 140, 229, 0.8)', size= 8),\n        showlegend= False,\n        \n    ))\n\n\n#data = [trace1]\nfig.update_layout(\n              xaxis= dict(title= 'Months',ticklen= 5,zeroline= False),\n              legend=dict(x=.05, y=1, traceorder='normal', font=dict(size=12,),),\n              plot_bgcolor='rgba(0,0,0,0)'\n             )\n\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=False,\n        l=100,\n        r=20,\n        t=110,\n        \n    ),\n    plot_bgcolor='white'\n)\n\n\nannotations = []\n\n\nannotations.append(dict(xref='paper', x=0.95, y=covid.Deaths.iloc[-1],\n                                  xanchor='left', yanchor='bottom',\n                                  text= str(covid.Deaths.iloc[-1]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n\n\nfig.show()","0dad313a":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n                    x = covid.Date,\n                    y = covid.Cured,\n                    mode = \"lines\",\n                    name = \"Cured\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= covid.Cured,\n                    showlegend= True,\n                    line = dict(color = 'rgba(25, 140, 229, 0.8)', width = 3)\n                    ))\n\n\nfig.add_trace(go.Scatter(\n        x=[covid.Date.iloc[-1]],\n        y=[covid.Cured.iloc[-1]],\n        mode='markers',\n        name = \"COVID Cured\",\n        text = [covid.Date.iloc[-1], covid.Cured.iloc[-1]],\n        marker=dict(color='rgba(25, 140, 229, 0.8)', size= 8),\n        showlegend= False,\n        \n    ))\n\n\n#data = [trace1]\nfig.update_layout(\n              xaxis= dict(title= 'Months',ticklen= 5,zeroline= False),\n              legend=dict(x=.05, y=1, traceorder='normal', font=dict(size=12,),),\n              plot_bgcolor='rgba(0,0,0,0)'\n             )\n\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=False,\n        l=100,\n        r=20,\n        t=110,\n        \n    ),\n    plot_bgcolor='white'\n)\n\n\nannotations = []\n\n\nannotations.append(dict(xref='paper', x=0.95, y=covid.Cured.iloc[-1],\n                                  xanchor='left', yanchor='bottom',\n                                  text= str(covid.Cured.iloc[-1]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n\n\nfig.show()","8a97ec6b":"HospitalBeds.rename(columns = {'NumPrimaryHealthCenters_HMIS' : 'Primary Health Centers', 'NumCommunityHealthCenters_HMIS' : 'Community Health Centers',\n                    'NumSubDistrictHospitals_HMIS' : 'Sub District Hospitals', 'NumDistrictHospitals_HMIS' : 'District Hospitals',\n                    'TotalPublicHealthFacilities_HMIS' : 'Total Public Health Facilities', 'NumPublicBeds_HMIS' : 'Public Beds',\n                    'NumRuralHospitals_NHP18' : 'Rural Hospitals', 'NumRuralBeds_NHP18' : 'Rural Beds',\n                    'NumUrbanHospitals_NHP18' : 'Urban Hospitals', 'NumUrbanBeds_NHP18' : 'Urban Beds'},\n                    index = {0 : 'Count'}, inplace = True)\n\nHospitalBeds = HospitalBeds.T","acd82d9c":"fig = go.Figure(data = [go.Table(\n    columnwidth = [.5,2],\n    header=dict(values=['<b>Health Centers<\/b><br>     <b>& Beds<\/b>','<b>'+str(HospitalBeds.columns[0])+'<\/b>'],\n                fill_color='paleturquoise', align = 'left'),\n    cells=dict(values=[HospitalBeds.index, HospitalBeds.Count],\n               fill_color='lavender',\n               align='left'))])\n\nfig.show()","4a7af356":"non_virus_deaths = []\nfor i in range(data['total_rows']):\n    non_virus_deaths.append(data['rows'][i]['value'])\n    \nnon_virus_deaths = pd.DataFrame(non_virus_deaths)","02d9d756":"Total = non_virus_deaths.groupby('state')['deaths'].sum().sum()\nTN = non_virus_deaths.groupby('state')['deaths'].sum()['TN']\n\n\nlabels = [\"Rest of the India\", 'TN']\nvalues = [float(Total - TN), float(TN)]\ncolors = ['rgb(211,211,211)', 'rgba(25, 140, 229, 0.8)']\nfig = go.Figure(data = [go.Pie(\n                               labels= labels, values = values, textinfo='label+ percent', marker_colors = colors,\n                               pull = [.05,0], insidetextorientation = 'horizontal')])\n\nfig.update_layout( showlegend = False)\n\nfig.show()\n","d934c285":"from collections import Counter \n\nTotal = non_virus_deaths['reason'].sum()\nTN = non_virus_deaths[non_virus_deaths['state']=='TN']['reason'].sum()\n\ndef group_list(lst): \n    return list(zip(Counter(lst).keys(), Counter(lst).values()))\n\nTotal_reason = pd.DataFrame(group_list(Total), columns = ['Reason', 'Count'])\nTotal_reason.sort_values(by = ['Count'], ascending = False, inplace = True)\nTotal_reason.reset_index(drop = True, inplace = True)\n\n\nTN_reason = pd.DataFrame(group_list(TN), columns = ['Reason', 'Count'])\nTN_reason.sort_values(by = ['Count'], ascending = False, inplace = True)\nTN_reason.reset_index(drop = True, inplace = True)\n\n\nTotal_total_count = Total_reason['Count'].sum()\nTN_total_count = TN_reason['Count'].sum()\n\n\nTotal_other = Total_total_count - (Total_reason['Count'][0] + Total_reason['Count'][1]\n                                   + Total_reason['Count'][2] + Total_reason['Count'][3] + Total_reason['Count'][4])\nTN_other = TN_total_count - (TN_reason['Count'][0] + TN_reason['Count'][1]\n                             + TN_reason['Count'][2] + TN_reason['Count'][3] + TN_reason['Count'][4])\n\n\n\nTotal_y_data = [int(Total_reason['Count'][0]\/Total_total_count*100), int(Total_reason['Count'][1]\/Total_total_count*100),\n           int(Total_reason['Count'][2]\/Total_total_count*100), int(Total_reason['Count'][3]\/Total_total_count*100),\n           int(Total_reason['Count'][4]\/Total_total_count*100), int(Total_other\/Total_total_count*100)]\n\n\nTN_y_data = [int(TN_reason['Count'][0]\/TN_total_count*100), int(TN_reason['Count'][1]\/TN_total_count*100),\n           int(TN_reason['Count'][2]\/TN_total_count*100), int(TN_reason['Count'][3]\/TN_total_count*100),\n           int(TN_reason['Count'][4]\/TN_total_count*100), int(TN_other\/TN_total_count*100)]\n\n\n\n\n#x_data = [[23, ]]\n\nTotal_x_data = [Total_reason['Reason'][0], Total_reason['Reason'][1], Total_reason['Reason'][2], Total_reason['Reason'][3], Total_reason['Reason'][4], 'Other']\nTN_x_data = [TN_reason['Reason'][0], TN_reason['Reason'][1], TN_reason['Reason'][2], TN_reason['Reason'][3], TN_reason['Reason'][4], 'Other']\n\n\n\n# Creating two subplots\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\n\nfig.append_trace(go.Bar(\n    x=Total_y_data,\n    y=Total_x_data,\n    marker=dict(\n        color='rgba(25, 140, 229, 0.8)',\n    ),\n    name='Non Virus Deaths in India',\n    orientation='h',\n), 1, 1)\n\n\nfig.append_trace(go.Bar(\n    x=TN_y_data,\n    y=TN_x_data,\n    marker=dict(\n        color='rgba(128, 0, 128, 0.8)',\n        line=dict(\n            color='rgba(128, 0, 128, 0.8)',\n            width=1),\n    ),\n    name='Non Virus Deaths in Tamil Nadu',\n    orientation='h',\n), 1, 2)\n\n\n\nfig.update_layout(\n    \n    yaxis=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n        autorange = 'reversed',\n    ),\n    yaxis2=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n        autorange = 'reversed',\n    ),\n\n    xaxis=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n        \n        domain=[0, 0.42],\n    ),\n    \n    xaxis2=dict(\n        zeroline=True,\n        showline=True,\n        showticklabels=False,\n        \n        domain=[0.55, 1],\n    ),\n\n    legend=dict(x=0.029, y=1.038, font_size=10),\n    #margin=dict(l=100, r=20, t=70, b=70),\n    #paper_bgcolor='rgba(255,255, 255)',\n    plot_bgcolor= 'white'\n    #'rgba(255, 255 , 255)',\n)\n\n#248, 248, 255\nannotations = []\n\nTotal_y = np.array(Total_y_data)\nTN_y = np.array(TN_y_data)\n\n# Adding labels\nfor ydn, yd, xdn, xd in zip(TN_y, Total_y, TN_x_data,  Total_x_data):\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 5,\n                            text=str(yd) + '%',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(0, 0, 0)'),\n                            showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xdn, x=ydn + 4,\n                            text=str(ydn) + '%',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(0, 0, 0)'),\n                            showarrow=False))\n# Source\n\n\nfig.update_layout(annotations=annotations)\n\nfig.show()\n","d17d1dd9":"# **Population Percentage of Tamil Nadu**  <a name = \"Population\"> <\/a>","2dab128c":"# **Confirmed Cases in Tamil Nadu** <a name= 'Confirmed'><\/a>","780428c6":"# Table of Contents\n\n\n- [Population Percentage of Tamil Nadu](#Population)\n\n- [Cases in Tamil Nadu](#Cases)\n\n- [Confirmed Cases](#Confirmed)\n\n- [Active Cases](#Active)\n\n- [Covid Deaths](#Deaths)\n\n- [Cured Cases](#Cured)\n\n- [Hospital Details](#Hospitals)\n\n- [Non virus deaths in Tamil Nadu](#Non_Virus_Deaths)\n\n- [Reasons of Non Virus Deaths](#Reason)","97243b69":"# **Non virus deaths in Tamil Nadu** <a name = \"Non_Virus_Deaths\"><\/a>","4760cd9d":"# **Hospital Details** <a name = 'Hospitals'> <\/a>","9f03eed3":"# **Active Cases in Tamil Nadu** <a name = 'Active'><\/a>","0e8077a9":"# **Cured Cases in Tamil Nadu** <a name = \"Cured\"> <\/a>","e49ee7fa":"# **Cases in Tamil Nadu** <a name = 'Cases'><\/a>","e03a98e8":"# **Reasons of Non Virus Deaths** <a name = 'Reason'><\/a>","0d9ee2aa":"# **Covid Deaths in Tamil Nadu** <a name = 'Deaths'><\/a>"}}