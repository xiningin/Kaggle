{"cell_type":{"7e68d1e6":"code","d3b1e07b":"code","f1fd5837":"code","a8eee2ce":"code","914e5c84":"code","86a7ca17":"code","bd2302cc":"code","cf262467":"code","8b7bcd24":"code","22748283":"code","4efdea1e":"code","def764a7":"code","5d31b399":"code","d5d60643":"code","3f3e265a":"code","5c27e390":"code","0247c116":"code","2620e92b":"code","afc54c84":"code","10f9b3f2":"markdown","73385efa":"markdown","83154c4c":"markdown"},"source":{"7e68d1e6":"import numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom keras.models import Sequential\nfrom keras.layers import Dense , Flatten\nfrom keras.layers import LSTM\nfrom keras.layers import Dropout\n\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d3b1e07b":"btc_df = pd.read_csv(\"..\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv\")","f1fd5837":"btc_df.head(3)","a8eee2ce":"btc_df.info()","914e5c84":"btc_df.isnull().sum() ","86a7ca17":"btc_df.describe()","bd2302cc":"btc_df.dropna(inplace=True)","cf262467":"btc_df=btc_df.drop([\"Timestamp\"],axis = 1)\n","8b7bcd24":"btc_df.head(3)","22748283":"Y = btc_df.iloc[:,0]\nX = btc_df.drop((\"Open\"),axis =1)","4efdea1e":"x_len = len(X)","def764a7":"type(Y)","5d31b399":"#Y.shape(-1,1)","d5d60643":"x = []\ny = []\npre_con = pd.DataFrame(columns = [0,1,2,3,4,5])\nrep_row = X.iloc[[0]]\n\nfor i in range(59):\n    pre_con = pre_con.append(rep_row)\npre_con=pre_con.reset_index(drop=True)\n\nX_con_train = pd.concat([pre_con, X], axis=0).reset_index(drop=True)\nX_con_train=X_con_train.to_numpy()\nY=Y.to_numpy()\n\nfor i in range(x_len):\n    \n    x.append(X_con_train[i:i+60,:])\n    y.append(Y[i])\n        \nx, y = np.array(x), np.array(y)","3f3e265a":"regressor_car = Sequential()\nregressor_car.add(LSTM(units = 90, return_sequences = True, input_shape = (x.shape[1], x.shape[2])))\nregressor_car.add(Dropout(0.2))\nregressor_car.add(LSTM(units = 50, return_sequences = True))\nregressor_car.add(Dropout(0.2))\nregressor_car.add(LSTM(units = 50, return_sequences = True))\nregressor_car.add(Dropout(0.2))\nregressor_car.add(LSTM(units = 50))\nregressor_car.add(Dropout(0.2))\nregressor_car.add(Dense(units = 1))\n\nregressor_car.compile(optimizer = 'adam', loss = 'mean_squared_error')","5c27e390":"history = regressor_car.fit(x, y_car, epochs = 110, batch_size = 32)","0247c116":"def display_learning_curves(history):\n\n    plt.plot(history.history[\"loss\"])\n    plt.legend([\"train\"], loc=\"upper right\")\n    plt.xlabel(\"Epochs\")\n    plt.ylabel(\"Loss\")\n\n    plt.show()","2620e92b":"display_learning_curves(history)","afc54c84":"display_learning_curves(history)","10f9b3f2":"<a id=\"1\"> <\/a>\n# Add Libaries","73385efa":"<br>\n<h1 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #C66363 ; color : #E8D6D8; text-align: center; border-radius: 100px 100px;\">CONTENT <\/h1>\n<br>\n\n* #### [Add Libaries](#1)\n* #### [Load and Examine Data](#2)\n    * ##### [Examine Data](#21)\n    * ##### [Visualize Data](#22)\n* #### [Preprocess Data](#3)\n    * ##### [Dropping Outliers](#31)\n    * ##### [Concatenating Train and Test Data](#32)\n    * ##### [Find And Drop High Missing Value Columns](#33)\n    * ##### [Fill Missing Values](#34)\n* #### [Feature Engineering](#4)\n    * ##### [Changing The Distribution Of Categories](#41)\n    * ##### [Make New Features](#42)\n    * ##### [Dummy Encoding](#43)\n* #### [Make Models](#5) \n    * ##### [Separating Test And Train Datas](#51)\n    * ##### [Backward Elimination](#52)\n    * ##### [Importing Models Libaries](#53)\n    * ##### [XGB Model](#54)\n    * ##### [GB Model](#55)\n    * ##### [CLF Model](#56)\n    * ##### [Make Prediction](#57)\n    * ##### [Submissons](#58)\n    * ##### [Visualize Predictions](#59)","83154c4c":"<a id=\"2\"> <\/a>\n# Load and Examine Data"}}