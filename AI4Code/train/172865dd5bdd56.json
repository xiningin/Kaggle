{"cell_type":{"ae05af78":"code","b2b6509d":"code","396bec34":"code","9537879c":"code","5ee43361":"code","47fd8ae4":"code","c510e73e":"markdown","b112a55c":"markdown","f084f059":"markdown","e37695b3":"markdown"},"source":{"ae05af78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2b6509d":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","396bec34":"test_data=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()\ntest_data.shape","9537879c":"women = train_data.loc[train_data.Sex=='female']['Survived']\nrate_women = sum(women)\/len(women)\n\nprint(\"{} % of women who survived\\n \".format(rate_women))\n\nmen = train_data.loc[train_data.Sex=='male']['Survived']\nrate_men = sum(men)\/len(men)\n\nprint(\"{} % of men who survived\".format(rate_men))","5ee43361":"#from sklearn.ensemble import RandomForestClassifier\ny = train_data['Survived']\n\nfeatures = ['Pclass', 'Sex', 'SibSp', 'Parch']\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\nX.head()\nX_test.head()\n\nmodel = RandomForestClassifier(n_estimators=120, max_depth=5, random_state=1)\nmodel.fit(X,y)\npredictions = model.predict(X_test)","47fd8ae4":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv(\"bmcode_titanic_v1_submission.csv\", index=False)\nprint(\"Titantic model is saved:)\")","c510e73e":"# Submission","b112a55c":"# Load the data","f084f059":"# Pattern Expore","e37695b3":"# A-100-random forest model"}}