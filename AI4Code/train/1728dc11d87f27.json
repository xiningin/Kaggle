{"cell_type":{"1d4b11dd":"code","abee7c59":"code","9692d716":"code","aba996a3":"code","07c1b45e":"code","a25fc1c5":"code","271b154c":"code","0ecc1e77":"code","0ef77186":"code","1689caef":"code","81c30be1":"code","3fcb344a":"code","7ad53c01":"code","23ec8874":"code","dcd1c59b":"code","47d70856":"code","b3c63f21":"code","b6ef21c9":"code","60cd95b2":"code","10eedc22":"code","458d4557":"code","81e25b93":"code","b8da166a":"code","d9062b29":"code","aa9e7617":"code","cc139c21":"code","a799f771":"code","d85f4adb":"markdown","3da88b13":"markdown","5d71c6bc":"markdown","98d1b1b7":"markdown"},"source":{"1d4b11dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings  \nwarnings.filterwarnings(\"ignore\")   # ignore warnings\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","abee7c59":"# Load the data from csv file\ndata = pd.read_csv('..\/input\/Mall_Customers.csv')","9692d716":"data.head()","aba996a3":"# The data has 5 columns. One of them is object type and the other ones are integer.\n# The data has no null value.\ndata.info()","07c1b45e":"# This function gives us some statistical information about our data.\ndata.describe()","a25fc1c5":"# Correlations within the columns\ndata.corr()","271b154c":"# Male - Female distribution of data\nsns.countplot(x=\"Gender\", data=data)\ndata.loc[:,'Gender'].value_counts()","0ecc1e77":"# we pull the column that contains categoric data\ndata.iloc[:,1:2]","0ef77186":"gender = data.iloc[:,1:2].values\nprint(gender)","1689caef":"# In this step, we transform the pulled data from categoric to numeric \n# Import needed encoder from scikit-learn library\n# Due to encoding, categoric data is transformed to numeric data namely 0 and 1s.\n\nfrom sklearn.preprocessing import LabelEncoder\n\n# creation an object\nle = LabelEncoder() \ngender[:,0] = le.fit_transform(gender[:,0])\n\nprint(gender)\nprint(type(gender))","81c30be1":"# convert result from numpy array to pandas dataframe\n\nresult = pd.DataFrame(data=gender)\nprint(type(result))\nresult.columns=['gender']\nresult","3fcb344a":"result2 = data.iloc[:, 2:4]\nresult2","7ad53c01":"print(type(result2))","23ec8874":"# Concatenating the dataframes\nresult3 = pd.concat([result, result2], axis=1)\nresult3","dcd1c59b":"score = data.iloc[:, 4:]\nscore","47d70856":"print(type(score))","b3c63f21":"# In this step, we create train and test sets from the data.\n# Later, our machine will learn from x_train and y_train sets and it will predict y_test set from x_test. \n\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(result3, score, test_size=0.33, random_state=0)","b6ef21c9":"x_train","60cd95b2":"x_test","10eedc22":"y_train","458d4557":"y_test","81e25b93":"# Standardization is the process of putting different variables on the same scale.\nfrom sklearn.preprocessing import StandardScaler","b8da166a":"sc = StandardScaler()\nX_train = sc.fit_transform(x_train)\nX_test = sc.fit_transform(x_test)\nY_train = sc.fit_transform(y_train)\nY_test = sc.fit_transform(y_test)","d9062b29":"X_train","aa9e7617":"X_test","cc139c21":"Y_train","a799f771":"Y_test","d85f4adb":"**Preprocessing of Data**","3da88b13":"**Scaling with Standardization**","5d71c6bc":"**EXPLORATORY DATA ANALYSIS (EDA)**\n\nDue to this analysis, we learn some beneficial information from the data.","98d1b1b7":"**In this kernel, data preprocessing steps have been explained. **"}}