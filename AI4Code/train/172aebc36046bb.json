{"cell_type":{"7604be49":"code","3f5383c1":"code","bcb6ffe6":"code","aff649dc":"code","17ba3f59":"code","ab882570":"code","fa74b134":"code","0aa9807c":"code","223c28c5":"code","b26a2d1d":"code","d296b333":"code","d927479b":"code","3b274735":"code","ca6c12c3":"code","91d22afd":"code","4d976487":"code","331f4bde":"code","846f412a":"code","0e26c6db":"code","1d0ff01b":"code","6a7f0019":"code","22f8b871":"code","197047c4":"code","53f02559":"code","e4c001a7":"code","1a2414f4":"code","ca3bd431":"code","e255ed23":"code","3febd5e4":"code","d53c6359":"code","17999eee":"code","37084519":"code","719fdc4f":"code","0bdd7162":"code","f70e98bf":"code","9e39fa0b":"markdown","54a05163":"markdown","efa8f8b1":"markdown"},"source":{"7604be49":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as plt\nimport seaborn as sns\n\n%matplotlib inline","3f5383c1":"train_data = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain_data.head()","bcb6ffe6":"train_data.describe()","aff649dc":"train_data.info()","17ba3f59":"train_data['Cabin'].value_counts()","ab882570":"train_data['Fare'].value_counts()","fa74b134":"train_data[\"Fare\"].describe()","0aa9807c":"sns.displot(train_data['Fare'])","223c28c5":"train_data[\"Ticket\"].value_counts()","b26a2d1d":"train_data[\"Name\"].duplicated().sum()","d296b333":"train_data.drop([\"Name\",\"PassengerId\",\"Cabin\",\"Ticket\"], axis=1, inplace=True)","d927479b":"train_data.head()","3b274735":"train_data.isnull().sum()","ca6c12c3":"import math\nmean = train_data[\"Age\"].mean()\nprint(mean)","91d22afd":"train_data[\"Age\"].fillna(value=mean,inplace=True) ","4d976487":"train_data[\"Embarked\"].isnull().sum()","331f4bde":"train_data.dropna(inplace=True)","846f412a":"sns.pairplot(train_data)","0e26c6db":"sns.barplot(x=train_data[\"Sex\"], y=train_data[\"Survived\"])","1d0ff01b":"sns.barplot(x=train_data['Embarked'], y=train_data['Survived'])","6a7f0019":"sns.barplot(x=train_data[\"Pclass\"], y=train_data[\"Survived\"])","22f8b871":"def change_sex(sex):\n    if sex==\"male\":\n        return 1\n    else:\n        return 0","197047c4":"train_data[\"Sex\"] = train_data.apply(lambda row : change_sex(row[\"Sex\"]),axis=1 )","53f02559":"train_data[\"Embarked\"].value_counts()","e4c001a7":"def change_em(em):\n    if em==\"S\":\n        return 0\n    elif em==\"C\":\n        return 1\n    elif em==\"Q\":\n        return 2\n    ","1a2414f4":"train_data[\"Embarked\"] = train_data.apply(lambda row : change_em(row[\"Embarked\"]),axis=1 )","ca3bd431":"x = train_data.drop([\"Survived\"], axis=1)\ny = train_data[\"Survived\"]\nx.head()\n","e255ed23":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.33)","3febd5e4":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier()\nmodel.fit(x_train,y_train)\n","d53c6359":"#RandomForestClassifier\ny_pred = model.predict(x_test)\ny_pred","17999eee":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, plot_confusion_matrix","37084519":"accuracy_score(y_test, y_pred)","719fdc4f":"confusion_matrix(y_test, y_pred)","0bdd7162":"plot_confusion_matrix(model, x_test, y_test)","f70e98bf":"print(classification_report(y_test, y_pred))","9e39fa0b":"Feature Selection","54a05163":"# models","efa8f8b1":"# model making"}}