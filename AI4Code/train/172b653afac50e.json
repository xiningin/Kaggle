{"cell_type":{"1c755112":"code","d5c61278":"code","d6a0ddbb":"code","14931890":"code","43cac526":"code","d6ff7226":"code","f496e27c":"code","2e66fc5b":"code","62aa22b2":"code","4ad44fed":"code","ee4294e0":"code","c8251eb5":"code","b2741f68":"code","bb63b48d":"code","7a8e14f9":"markdown","0f3faa3c":"markdown","8589ce59":"markdown","35b2543b":"markdown","8a14d2b0":"markdown","f3ea3e41":"markdown","3d70409c":"markdown","cdf627a1":"markdown"},"source":{"1c755112":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style='darkgrid')\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d5c61278":"#read datasets\ndf_inf=pd.read_csv(\"..\/input\/pcodinfo\/data without infertility _final.csv\", encoding='iso-8859-1')\ndf_noinf=pd.read_csv(\"..\/input\/pcodinfo\/data without infertility _final.csv\", encoding='iso-8859-1')\nprint(f\"Shape of df_inf:{df_inf.shape}\")\nprint(f\"Shape of df_noinf:{df_noinf.shape}\")","d6a0ddbb":"df_inf.head()","14931890":"df_noinf.head()","43cac526":"corr_features=df_noinf.corrwith(df_noinf[\"PCOS (Y\/N)\"]).abs().sort_values(ascending=False)\n#features with correlation more than 0.4\ncorr_features=corr_features[corr_features>0.4].index\ncorr_features","d6ff7226":"df_inf.corrwith(df_inf[\"PCOS (Y\/N)\"]).abs()","f496e27c":"df_noinf=df_noinf[corr_features]\ndf_noinf.head()","2e66fc5b":"plt.figure(figsize=(14,5))\nplt.subplot(1,7,1)\nsns.boxplot(x='PCOS (Y\/N)',y='Follicle No (R)',data=df_noinf)\nplt.subplot(1,7,2)\nsns.boxplot(x='PCOS (Y\/N)',y='Insulin levels (\u00e6IU\/ml)',data=df_noinf)\nplt.subplot(1,7,3)\nsns.boxplot(x='PCOS (Y\/N)',y='Follicle No (L)',data=df_noinf)\nplt.subplot(1,7,4)\nsns.boxplot(x='PCOS (Y\/N)',y='Skin darkening (Y\/N)',data=df_noinf)\nplt.subplot(1,7,5)\nsns.boxplot(x='PCOS (Y\/N)',y='hair growth(Y\/N)',data=df_noinf)\nplt.subplot(1,7,6)\nsns.boxplot(x='PCOS (Y\/N)',y='Weight gain(Y\/N)',data=df_noinf)\nplt.subplot(1,7,7)\nsns.boxplot(x='PCOS (Y\/N)',y='Cycle(R\/I)',data=df_noinf)\n\nplt.show()","62aa22b2":"plt.figure(figsize=(6,5))\nsns.heatmap(df_noinf.corr(), annot=True)\nplt.show()","4ad44fed":"y=df_noinf['PCOS (Y\/N)']\nX=df_noinf[['Insulin levels (\u00e6IU\/ml)', 'Follicle No (R)','Follicle No (L)']]","ee4294e0":"X_train,X_test,y_train, y_test=train_test_split(X,y, test_size=0.2)","c8251eb5":"model=LogisticRegression()\nmodel.fit(X_train,y_train)\nprint(f\"Score in Train Data : {model.score(X_train,y_train)}\")","b2741f68":"y_pred=model.predict(X_test)","bb63b48d":"print(f\"Score in Test Data : {model.score(X_test,y_test)}\")\n\ncm=confusion_matrix(y_test, y_pred)\np_right=cm[0][0]+cm[1][1]\np_wrong=cm[0][1]+cm[1][0]\n\nprint(f\"Right classification : {p_right}\")\nprint(f\"Wrong classification : {p_wrong}\")\ncm","7a8e14f9":"The last four features are not binary features and not highly correlated and hence we will not use them for prediction.","0f3faa3c":"### Prediction","8589ce59":"### Train Model","35b2543b":"In df_inf, no features seem to be correlated with PCOS(Y\/N)","8a14d2b0":"Features which have more than 0.40 correlation with PCOS(Y\/N) are identified","f3ea3e41":"### Model Evaluation","3d70409c":"### Feature and Target selection","cdf627a1":"### Test and Train data "}}