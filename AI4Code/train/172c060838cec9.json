{"cell_type":{"6af25afa":"code","316cc4c9":"code","a6178c3e":"code","be792cae":"code","0e3015b7":"code","0afe3933":"code","6e94c113":"code","d327731a":"code","49bb3071":"code","96f65753":"code","dcebd28b":"markdown","e7838fbc":"markdown","d2d08a40":"markdown"},"source":{"6af25afa":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\nimport os\n\n","316cc4c9":"target=\"HasDetections\"\nsubmission_id_col=\"MachineIdentifier\"\nseed_train=100\nSAMPLE_ROWS=200000\nrandom_state=42","a6178c3e":"df_kaggle_train = pd.read_hdf(\n         '..\/input\/save-hdf-1m-sample\/train_sample.hdf',\n         key=\"train_sample\"\n)","be792cae":"df_kaggle_train.shape","0e3015b7":"def add_timestamps(df):\n    datedictAS = np.load('..\/input\/timestamps\/AvSigVersionTimestamps.npy')[()]\n    df['DateAS'] = df['AvSigVersion'].map(datedictAS)  \n    \n   \nadd_timestamps(df_kaggle_train)","0afe3933":"split_date=\"2018-09-20\"\nix_time_train=df_kaggle_train.query(f\"DateAS<'{split_date}'\").index.values\nix_time_test=df_kaggle_train.query(f\"DateAS>='{split_date}'\").index.values\ndf_kaggle_train.drop(columns=\"DateAS\",inplace=True)\nix_time_train.shape,ix_time_test.shape","6e94c113":"df_train=df_kaggle_train.loc[ix_time_train]\ndf_test=df_kaggle_train.loc[ix_time_test]\n","d327731a":"from lightgbm import LGBMClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import roc_auc_score\n\npipeline=Pipeline([\n    (\"clf\",LGBMClassifier(random_state=seed_train,\n                          n_jobs=1 ))])\n\nlist_results=[]\nif __name__ == \"__main__\":\n    for i_feature in df_kaggle_train.columns.values:\n        if i_feature not in [submission_id_col,target]:\n            from sklearn.model_selection import cross_val_score,RepeatedStratifiedKFold\n\n            X_train=df_train[[i_feature]]\n            y_train=df_train[target]\n            \n            X_test=df_test[[i_feature]]\n            y_test=df_test[target]\n            pipeline.fit(X_train,y_train.values)\n            \n            y_pred_test=pipeline.predict_proba(X_test)[:,1]\n            time_split_score=roc_auc_score(y_score=y_pred_test,y_true=y_test)\n            print(i_feature,time_split_score)\n            \n            list_results.append(pd.DataFrame({\"feature\":i_feature,\"time_split_score\":time_split_score},index=[0]))\n","49bb3071":"df_results=pd.concat(list_results).sort_values(\"time_split_score\",ascending=False).reset_index()\ndf_results","96f65753":"df_results.to_csv(\"time_split_feature_results.csv\",index=False)","dcebd28b":"# Read Data","e7838fbc":"# Save results for later reuse","d2d08a40":"# Cross validate by feature"}}