{"cell_type":{"ed987aac":"code","4ea4bb1b":"code","25a4054a":"code","918ac2da":"code","046dc52d":"code","fb3937b1":"code","d9b7bf39":"markdown"},"source":{"ed987aac":"# Import Required libraries\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn import datasets\nfrom sklearn import model_selection","4ea4bb1b":"# Create a function to split data into multiple folds\n# Since our target variable is multiclass , we can use each class as bins\n\ndef create_folds(data, num_splits):\n    # we create a new column called kfold and fill it with -1\n    data[\"kfold\"] = -1\n    \n    # the next step is to randomize the rows of the data\n    data = data.sample(frac=0.5,random_state = np.random.RandomState()).reset_index(drop=True)\n\n    # initiate the kfold class from model_selection module\n    kf = model_selection.StratifiedKFold(n_splits=num_splits)\n    \n    # fill the new kfold column\n    # note that, instead of targets, we use bins!\n    for f, (t_, v_) in enumerate(kf.split(X=data, y=data.Cover_Type.values)):\n        data.loc[v_, 'kfold'] = f\n\n    # return dataframe with folds\n    return data","25a4054a":"# read training data\ndf = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/train.csv\")\n\n# create folds\ndf = create_folds(df, num_splits=20)","918ac2da":"print(\"Shape of Training dataset :\" + str(df.shape))\n\nprint(df.kfold.value_counts())","046dc52d":"df.Cover_Type.value_counts()","fb3937b1":"df.to_csv(\"train_20_folds.csv\", index=False)","d9b7bf39":"### This code is to create 5 folds of data\n\n*Thanks to [Abhishek](https:\/\/www.kaggle.com\/abhishek) and his [notebook](https:\/\/www.kaggle.com\/abhishek\/step-1-create-folds)*"}}