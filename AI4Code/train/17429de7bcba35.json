{"cell_type":{"62d3cc73":"code","ebf8425d":"code","300ffa84":"code","a89bf01a":"code","7b264e2d":"code","fb4a89bf":"code","d9e9f4d7":"code","55b2cdc3":"code","52632beb":"code","31272b22":"code","8fcc8c83":"code","3fc2733d":"code","39f2d60e":"code","84ac9308":"code","aa014bf0":"code","db6db04f":"markdown"},"source":{"62d3cc73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebf8425d":"df = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")","300ffa84":"df","a89bf01a":"df.info()","7b264e2d":"df.isnull().sum().sum()","fb4a89bf":"df.describe()","d9e9f4d7":"def draw_histograms(dataframe, features, rows, cols):\n    fig=plt.figure(figsize=(20,20))\n    for i, feature in enumerate(features):\n        ax=fig.add_subplot(rows,cols,i+1)\n        dataframe[feature].hist(bins=20,ax=ax,facecolor=\"b\")\n        ax.set_title(feature+\" Distribution\",color='DarkRed')\n        ax.set_yscale('log')\n    fig.tight_layout()  \n    plt.show()\ndraw_histograms(df,df.columns,7,5)","55b2cdc3":"df.Class.value_counts()","52632beb":"ax = sns.countplot(x='Class',data=df, palette =\"muted\")\nax.set_yscale(\"log\")\nplt.yticks(rotation=30)\nplt.show()","31272b22":"fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12,6))\ns = sns.boxplot(ax = ax1, x=\"Class\", y=\"Amount\", hue=\"Class\",data=df, palette=\"PRGn\",showfliers=True)\ns = sns.boxplot(ax = ax2, x=\"Class\", y=\"Amount\", hue=\"Class\",data=df, palette=\"PRGn\",showfliers=False)\nplt.show();","8fcc8c83":"sns.relplot(x=\"Time\", y=\"Amount\", data=df, kind=\"scatter\", aspect=4, row=\"Class\")\nplt.show()","3fc2733d":"f, ax = plt.subplots(figsize=(35,25))\nsns.heatmap(df.corr(), annot=True, fmt= '.1f', linewidths=.1, ax=ax, cmap=\"YlGnBu\")\nplt.show()","39f2d60e":"lm_plot = sns.lmplot(x='V20', y='Amount',data=df, hue='Class', fit_reg=True,scatter_kws={'s':2}, aspect=2)\nlm_plot = sns.lmplot(x='V7', y='Amount',data=df, hue='Class', fit_reg=True,scatter_kws={'s':2}, aspect=2)\nplt.show()","84ac9308":"lm_plot = sns.lmplot(x='V2', y='Amount',data=df, hue='Class', fit_reg=True,scatter_kws={'s':2}, aspect=2)\nlm_plot = sns.lmplot(x='V5', y='Amount',data=df, hue='Class', fit_reg=True,scatter_kws={'s':2}, aspect=2)\nplt.show()","aa014bf0":"lm_plot = sns.lmplot(x='Time', y='V3',data=df, hue='Class', fit_reg=True,scatter_kws={'s':2}, aspect=3)\nplt.show()","db6db04f":"There are direct correlation between Amount and V7 and V20, inverse correlation with V2 and V5. There are inverse correlation between Time and V3.\n\nLet's show these relationships"}}