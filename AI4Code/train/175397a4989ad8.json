{"cell_type":{"57ec4618":"code","026b547a":"code","ffd791a9":"code","75e80a5d":"code","cc438f4b":"code","4ac3a14c":"code","b6aa1f01":"code","c322a354":"code","e6a8ae4e":"code","c67048ce":"code","b48c543b":"code","220f5f10":"code","28093af2":"code","16955434":"code","7fbd47e5":"code","757a07fa":"code","e523b607":"code","a9f3cbb8":"code","65cdc3ab":"code","b71ed212":"code","b495d095":"code","d1912611":"code","0b0ba6e9":"code","c55e7376":"code","0b09c7ee":"code","ba6177ff":"code","78933c39":"code","bd84e2b9":"code","11823f6a":"code","d9f3eaaa":"code","7ab5d720":"code","beca2e03":"code","6598de3a":"code","a133bcb5":"code","b6e9d401":"code","16cf7370":"code","b5a3c940":"code","390b46db":"code","27b66c3b":"code","9fd3a32f":"code","bcd81df4":"code","a6b1cb76":"code","81b47a5a":"code","c95012c9":"code","28163652":"code","71b7c8a6":"code","1840c006":"code","cb618f40":"code","e5a43463":"code","3b13018a":"code","e484d4e9":"code","014b4e8a":"code","4423159c":"code","13c7f7c3":"code","71a49334":"code","6503234f":"code","48f1c5e7":"code","f21fc89d":"code","8060eabe":"code","d4b77ba4":"code","3f20aa59":"code","5ddb692d":"code","8380c6c8":"code","3938a6f3":"code","1205ec98":"code","f29bb76e":"code","d3249a61":"code","669b940c":"markdown","0900cf73":"markdown","60d89989":"markdown","f139130b":"markdown","bdd388c7":"markdown","42b62918":"markdown","e6f9afec":"markdown","ce470a7b":"markdown","6780e8fb":"markdown","d2d06b59":"markdown","923bce8c":"markdown","c0811b73":"markdown","26d60e85":"markdown","7f877a57":"markdown","8e0534db":"markdown","32eb4778":"markdown","33864ed2":"markdown","5c4bf824":"markdown","f89cb0dc":"markdown","85242b97":"markdown","265324cd":"markdown","5e361fd9":"markdown","47faa309":"markdown","a288ac64":"markdown","f072bef9":"markdown","ce38fdcb":"markdown","69888e95":"markdown","67922189":"markdown"},"source":{"57ec4618":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","026b547a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","ffd791a9":"o2 = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/o2Saturation.csv\")\no2","75e80a5d":"heart = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\nheart","cc438f4b":"heart.isnull().sum()","4ac3a14c":"\ntarget = heart.groupby('output').output.count()\ntarget\n","b6aa1f01":"percent_1 = (target \/ len(heart)) * 100\npercent_1\n","c322a354":"\nimport matplotlib.pyplot as plt\n\nheart.groupby('output').output.count().plot.bar(ylim=0)\nplt.show()\n","e6a8ae4e":"plt.figure(figsize=(25, 7))\nax = plt.subplot()\nax.scatter(heart[heart['output'] == 1]['age'], heart[heart['output'] == 1]['chol'], c='green', s=heart[heart['output'] == 1]['age'])\nax.scatter(heart[heart['output'] == 0]['age'], heart[heart['output'] == 0]['chol'], c='red', s=heart[heart['output'] == 0]['age']);\n","c67048ce":"\ninclude = heart[heart['output'].values == 1]\nexclude = heart[heart['output'].values != 1]\ninclude_1 = include\ninclude_1\n","b48c543b":"\nimport seaborn as sns\n\nplt.figure(figsize=(10,6))\nplt.title(\"Ages Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=include_1[\"age\"])\nplt.show()\n","220f5f10":"age_max = include_1.age.max()\nprint(age_max)","28093af2":"age_min = include_1.age.min()\nprint(age_min)","16955434":"age_med = include_1.age.median()\nprint(age_med)","7fbd47e5":"age_most = include_1.age.mode()\nprint(age_most)","757a07fa":"include_1.groupby('sex').output.count().plot.bar(ylim=0)\nplt.show()","e523b607":"sex = include_1.groupby('sex').output.count()\nsex","a9f3cbb8":"percent_sex = (sex \/ len(include_1)) * 100\npercent_sex","65cdc3ab":"include_1.groupby('cp').output.count().plot.bar(ylim=0)\nplt.show()","b71ed212":"cp = include_1.groupby('cp').output.count()\ncp","b495d095":"percent_cp = (cp \/ len(include_1)) * 100\npercent_cp","d1912611":"plt.figure(figsize=(10,6))\nplt.title(\"Blood Pressure Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=include_1[\"trtbps\"])\nplt.show()","0b0ba6e9":"bp_min = include_1.trtbps.min()\nbp_min","c55e7376":"bp_max = include_1.trtbps.max()\nbp_max\n","0b09c7ee":"bp_med = include_1.trtbps.median()\nbp_med\n","ba6177ff":"bp_most = include_1.trtbps.mode()[0]\nprint(bp_most)","78933c39":"plt.figure(figsize=(10,6))\nplt.title(\"Cholesterol Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=include_1[\"chol\"])\nplt.show()","bd84e2b9":"chol_max = include_1.chol.max()\nchol_max","11823f6a":"chol_min = include_1.chol.min()\nchol_min","d9f3eaaa":"chol_med = include_1.chol.median()\nchol_med","7ab5d720":"chol_most = include_1.chol.mode()[0]\nchol_most","beca2e03":"include_1.groupby('fbs').output.count().plot.bar(ylim=0)\nplt.show()","6598de3a":"fbs = include_1.groupby('fbs').output.count()\nfbs","a133bcb5":"percent_fbs = (fbs \/ len(include_1)) * 100\npercent_fbs","b6e9d401":"include_1.groupby('restecg').output.count().plot.bar(ylim=0)\nplt.show()","16cf7370":"ecg = include_1.groupby('restecg').output.count()\necg","b5a3c940":"percent_ecg = (ecg \/ len(include_1)) * 100\npercent_ecg","390b46db":"plt.figure(figsize=(10,6))\nplt.title(\"Heart Rate Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=include_1[\"thalachh\"])\nplt.show()","27b66c3b":"max_hr = include_1.thalachh.max()\nmax_hr","9fd3a32f":"min_hr = include_1.thalachh.min()\nmin_hr\n","bcd81df4":"med_hr = include_1.thalachh.median()\nmed_hr","a6b1cb76":"most_hr = include_1.thalachh.mode()[0]\nmost_hr","81b47a5a":"include_1.groupby('exng').output.count().plot.bar(ylim=0)\nplt.show()","c95012c9":"angina = include_1.groupby('exng').output.count()\nangina","28163652":"percent_ang = (angina \/ len(include_1)) * 100\npercent_ang","71b7c8a6":"plt.figure(figsize=(10,6))\nplt.title(\"Oldpeak Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=include_1[\"oldpeak\"])\nplt.show()","1840c006":"oldpeak_max = include_1.oldpeak.max()\noldpeak_max","cb618f40":"oldpeak_min = include_1.oldpeak.min()\noldpeak_min","e5a43463":"oldpeak_med = include_1.oldpeak.median()\noldpeak_med","3b13018a":"oldpeak_most = include_1.oldpeak.mode()[0]\noldpeak_most","e484d4e9":"include_1.groupby('slp').output.count().plot.bar(ylim=0)\nplt.show()","014b4e8a":"slope = include_1.groupby('slp').output.count()\nslope\n","4423159c":"percent_slope = (slope \/ len(include_1)) * 100\npercent_slope","13c7f7c3":"include_1.groupby('caa').output.count().plot.bar(ylim=0)\nplt.show()","71a49334":"ca = include_1.groupby('caa').output.count()\nca\n","6503234f":"percent_ca = (ca \/ len(include_1)) * 100\npercent_ca\n","48f1c5e7":"include_1.groupby('thall').output.count().plot.bar(ylim=0)\nplt.show()\n","f21fc89d":"thal = include_1.groupby('thall').output.count()\nthal\n","8060eabe":"percent_thal = (thal \/ len(include_1)) * 100\npercent_thal","d4b77ba4":"target = heart.output\nheart.drop('output', axis=1,inplace=True)\nheart","3f20aa59":"heart = (heart.max() - heart \/ heart.max() - heart.min())\nheart","5ddb692d":"y = target\nX = heart","8380c6c8":"\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_val, y_train, y_val = train_test_split( X, y, test_size=0.1, shuffle=True, random_state=1, stratify=y)\nX_train.shape, y_train.shape, X_val.shape, y_val.shape","3938a6f3":"from sklearn.svm import SVC\n\nmodel = SVC(random_state=1, class_weight='balanced', kernel='linear', C=10).fit(X_train, y_train)\nprint(model.score(X_train, y_train))","1205ec98":"y_pred = model.predict(X_val)\nprint(model.score(X_val, y_val))","f29bb76e":"from sklearn.metrics import confusion_matrix\n\nconfuse = confusion_matrix(y_val, y_pred)\nconfuse","d3249a61":"\nfrom sklearn.decomposition import PCA\n\npca_val = PCA(n_components=2)\nprincipalComponents_val = pca_val.fit_transform(X_val)\nplt.figure(figsize = (12, 8))\nplt.scatter(principalComponents_val[:,0], principalComponents_val[:,1], c = y_pred == y_val - 1, alpha = .8, s = 50)","669b940c":"Cholesterol","0900cf73":"Angina","60d89989":"Blood sugar","f139130b":"Define","bdd388c7":"Blood pressure","42b62918":"Flouroscopy","e6f9afec":"Read","ce470a7b":"Analyse target","6780e8fb":"Normalise","d2d06b59":"Electrocardiogram","923bce8c":"age\n\nsex\n\nchest pain type (4 values)\n\nresting blood pressure\n\nserum cholestoral in mg\/dl\n\nfasting blood sugar > 120 mg\/dl\n\nresting electrocardiographic results (values 0,1,2)\n\nmaximum heart rate achieved\n\nexercise induced angina\n\noldpeak = ST depression induced by exercise relative to rest\n\nthe slope of the peak exercise ST segment\n\nnumber of major vessels (0-3) colored by flourosopy\n\nthal: 3 = normal; 6 = fixed defect; 7 = reversable defect","c0811b73":"Plot errors","26d60e85":"Check for null values","7f877a57":"Sex","8e0534db":"Analyse 1's","32eb4778":"Max Heart Rate","33864ed2":"Chest pain","5c4bf824":"Attributes","f89cb0dc":"Split","85242b97":"Drop target","265324cd":"Predict on val;idation set","5e361fd9":"Thall","47faa309":"Age","a288ac64":"Oldpeak","f072bef9":"Slope","ce38fdcb":"Filter 1's","69888e95":"Model","67922189":"Import"}}