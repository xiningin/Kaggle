{"cell_type":{"c8f41e12":"code","ef6a5a35":"code","eb460e92":"code","b3540b36":"code","53ff10de":"code","6f031773":"code","bd71ce7d":"code","413f35e1":"code","5e1967d2":"code","39196718":"code","a1450b08":"code","5eca4892":"code","071d3f5b":"code","44b63739":"code","2eef60b6":"code","25782fd4":"code","998d7db4":"code","ce047cee":"code","78487b2e":"code","025b7a92":"code","c7d97fae":"code","404a835e":"code","a08c25ad":"code","9e3048ef":"code","5602715f":"code","2d593990":"code","11cb381b":"code","4e9d9bce":"code","7ad34c6f":"code","9ed6bbf2":"code","3adb49a9":"code","b50e196e":"code","7c93b662":"code","10e4ccaa":"code","ec26a904":"code","262a9ca9":"code","41dbc115":"code","78fc36f4":"code","ff8a207d":"code","420245ed":"code","aee61e86":"code","85874ffa":"code","6ee8fd27":"code","0866812f":"markdown","25146de1":"markdown","fc3b1640":"markdown","aa9657c3":"markdown","7f9150ef":"markdown","55cf311d":"markdown","e9286983":"markdown","1b930d4d":"markdown","f36f3952":"markdown","a6bdf7dc":"markdown","4011e932":"markdown","0d8ebab0":"markdown","f1d09e6b":"markdown","f09ab335":"markdown","78490086":"markdown","a17a4e60":"markdown","cd550137":"markdown","29feccd6":"markdown","0cd018a0":"markdown","66c94b39":"markdown","1476b236":"markdown","f0721872":"markdown","779af5f1":"markdown","3042380b":"markdown","cddcd3f8":"markdown","25968c25":"markdown","5f607dd4":"markdown","ce06e8bc":"markdown","fea9ee52":"markdown","f0e53c27":"markdown","bf803081":"markdown","53c04705":"markdown","0bac6251":"markdown","4eed903b":"markdown","41314461":"markdown","91965f01":"markdown","b5625f9f":"markdown","cb18ffb2":"markdown","44421e7b":"markdown","e71cc19d":"markdown","b1e84921":"markdown","dc0bbae2":"markdown","dd8e2444":"markdown"},"source":{"c8f41e12":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import confusion_matrix,plot_confusion_matrix,classification_report\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom tensorflow.keras import models,layers\n","ef6a5a35":"train=pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ntrain.head()","eb460e92":"print(train.shape)","b3540b36":"train.describe()","53ff10de":"train.info()","6f031773":"plt.figure(figsize=(10,7))\nsns.countplot(x='Loan_Status',data=train)\nprint('Proportion of loan applications approved: ',train.Loan_Status.value_counts()[0]\/len(train)*100)\nprint('Proportion of loan applications rejected: ',train.Loan_Status.value_counts()[1]\/len(train)*100)","bd71ce7d":"plt.figure(figsize=(10,7))\nsns.distplot(train['ApplicantIncome'],color='Blue')","413f35e1":"plt.figure(figsize=(10,7))\nsns.histplot(x='ApplicantIncome',data=train,color='Red')","5e1967d2":"plt.figure(figsize=(10,7))\nsns.distplot(train['LoanAmount'],color='purple')","39196718":"plt.figure(figsize=(10,7))\nsns.histplot(data=train,x='LoanAmount',color='pink')","a1450b08":"sns.relplot(x='ApplicantIncome',y='LoanAmount',data=train,hue='Loan_Status',height=7.0)\nplt.xlabel('Applicant Income ')\nplt.ylabel('Loan Amount (in thousands)')\nplt.show()","5eca4892":"plt.figure(figsize=(10,7))\nsns.countplot(x='Gender',data=train,hue='Loan_Status',palette='flare_r')","071d3f5b":"grid=sns.FacetGrid(data=train,col='Loan_Status',height=5.0)\ngrid.map(sns.countplot,'Married',palette='jet_r')\n","44b63739":"plt.figure(figsize=(10,7))\nsns.countplot('Dependents',data=train,hue='Loan_Status',palette='magma')","2eef60b6":"plt.figure(figsize=(10,7))\nsns.countplot('Education',data=train,hue='Loan_Status',palette='inferno_r')","25782fd4":"grid=sns.FacetGrid(data=train,col='Loan_Status',height=5.0)\ngrid.map(sns.countplot,'Self_Employed',palette='crest_r')","998d7db4":"plt.figure(figsize=(15,8))\nsns.countplot('Loan_Amount_Term',data=train,hue='Loan_Status',palette='Dark2')\nplt.xlabel('Loan_Amount_Term (weeks)')\nplt.show()","ce047cee":"grid=sns.FacetGrid(data=train,col='Loan_Status',height=5.0)\ngrid.map(sns.countplot,'Credit_History',palette='gist_earth');","78487b2e":"grid=sns.FacetGrid(data=train,col='Loan_Status',height=5.0)\ngrid.map(sns.countplot,'Property_Area',palette='CMRmap_r');","025b7a92":"sns.heatmap(train.corr(),annot=True)","c7d97fae":"train.isnull().sum()","404a835e":"train.Gender.fillna(train.Gender.mode()[0],inplace=True)\ntrain.Married.fillna(train.Married.mode()[0],inplace=True)\ntrain.Dependents.fillna(train.Dependents.mode()[0],inplace=True)\ntrain.Self_Employed.fillna(train.Self_Employed.mode()[0],inplace=True)\ntrain.LoanAmount.fillna(train.LoanAmount.median(),inplace=True)\ntrain.Loan_Amount_Term.fillna(train.Loan_Amount_Term.mode()[0],inplace=True)\ntrain.Credit_History.fillna(train.Credit_History.mode()[0],inplace=True)","a08c25ad":"train.isnull().sum()","9e3048ef":"train.dtypes","5602715f":"object_col=train.select_dtypes('object').columns\nle=LabelEncoder()\nfor col in object_col:\n  train[col]=le.fit_transform(train[col])","2d593990":"train.dtypes","11cb381b":"train.head()","4e9d9bce":"cols=['CoapplicantIncome','LoanAmount','ApplicantIncome','Loan_Amount_Term']\nsc=StandardScaler()\nfor col in cols:\n    train[col]=sc.fit_transform(train[col].values.reshape(-1,1))\ntrain.head()    ","7ad34c6f":"plt.figure(figsize=(12,7))\nsns.heatmap(train.corr(),annot=True)","9ed6bbf2":"train.drop('Loan_ID',axis=1,inplace=True)\ntrain.drop('Property_Area',axis=1,inplace=True)","3adb49a9":"y_train=train.Loan_Status\ntrain.drop('Loan_Status',axis=1,inplace=True)\nx_train=train","b50e196e":"x_train,x_test,y_train,y_test=train_test_split(x_train,y_train,stratify=y_train,test_size=0.4)\n\nprint(f'Shape of x_train is {x_train.shape}')\nprint(f'Shape of y_train is {y_train.shape}')\nprint(f'Shape of x_test is {x_test.shape}')\nprint(f'Shape of y_test is {y_test.shape}')  ","7c93b662":"print('Proportion of 0 in y_train :',y_train.value_counts()[0]\/ len(y_train))\nprint('Proportion of 0 in y_test :',y_test.value_counts()[0]\/ len(y_test))\nprint('Proportion of 1 in y_train :',y_train.value_counts()[1]\/ len(y_train))\nprint('Proportion of 1 in y_test :',y_test.value_counts()[1]\/ len(y_test))\n","10e4ccaa":"model1=LogisticRegression()\nparameters={'penalty':['l2','l1'],'solver':['liblinear'],'C':[1,2,3]}\ngscv1=GridSearchCV(model1,param_grid=parameters)\ngscv1.fit(x_train,y_train)\ny_pred=gscv1.predict(x_test)\ncf_r=classification_report(y_test,y_pred)\nprint('Accuracy on test data ', gscv1.score(x_test,y_test))\nprint('Accuracy on train data ', gscv1.score(x_train,y_train))\nprint(plot_confusion_matrix(gscv1,x_test,y_test,values_format='0.3g'))\nprint('Classification Report :\\n',cf_r)\n\n","ec26a904":"gscv1.best_params_","262a9ca9":"model2=SVC()\nparameters={'C':[1,2,3],'kernel':['linear','poly','rbf'],'degree':[1,2,3,4]}\ngscv2=GridSearchCV(model2,param_grid=parameters)\ngscv2.fit(x_train,y_train)\ny_pred=gscv2.predict(x_test) \ncf_r=classification_report(y_test,y_pred)\nprint('Accuracy on test data ', gscv2.score(x_test,y_test))\nprint(plot_confusion_matrix(gscv2,x_test,y_test,values_format='0.3g'))\nprint('Accuracy on train data ', gscv2.score(x_train,y_train))\nprint('Classification Report :\\n',cf_r)\n\n\n","41dbc115":"gscv2.best_params_","78fc36f4":"model3=DecisionTreeClassifier(random_state=42)\nparameters={'max_depth':[15,17,19],'min_samples_leaf':[11,13,15,17,25],'min_samples_split':[18,20,22]}\ngscv3=GridSearchCV(model3,param_grid=parameters)\ngscv3.fit(x_train,y_train)\ny_pred=gscv3.predict(x_test)\ncf_r=classification_report(y_test,y_pred)  \nprint('Accuracy on test data ', gscv3.score(x_test,y_test))\nprint('Accuracy on train data ', gscv3.score(x_train,y_train))\nprint(plot_confusion_matrix(gscv3,x_test,y_test,values_format='0.3g'))\nprint('Classification Report :\\n',cf_r)","ff8a207d":"gscv3.best_params_","420245ed":"model4=KNeighborsClassifier()\nparameters={'n_neighbors':[10,12,14],'weights':['uniform','distance'],'algorithm':['auto']}\ngscv4=GridSearchCV(model4,param_grid=parameters)\ngscv4.fit(x_train,y_train)\ny_pred=gscv4.predict(x_test)\ncf_r=classification_report(y_test,y_pred)  \nprint('Accuracy on test data ', gscv4.score(x_test,y_test))\nprint('Accuracy on train data ', gscv4.score(x_train,y_train))\nprint(plot_confusion_matrix(gscv4,x_test,y_test,values_format='0.3g'))\nprint('Classification Report :\\n',cf_r)","aee61e86":"gscv4.best_params_","85874ffa":"model=models.Sequential()\nmodel.add(layers.Dense(8,activation='relu',input_shape=x_train.shape))\nmodel.add(layers.Dense(8,activation='relu'))\nmodel.add(layers.Dense(8,activation='relu'))\nmodel.add(layers.Dropout(0.5))\nmodel.add(layers.Dense(1,activation='sigmoid'))\nmodel.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['acc'])\nmodel.fit(x_train,y_train,epochs=300,batch_size=2,verbose=1)\n","6ee8fd27":"print('Accuracy on test data ', model.evaluate(x_test,y_test))\ny_pred=model.predict(x_test)\ny_pred=np.where(y_pred>0.5,1,0)\nc_m=confusion_matrix(y_test,y_pred)\nprint('Confusion Matrix : \\n',c_m)\n","0866812f":"***The following plot shows the relationship between credit history and loan status. It suggests that those who had bad credit history didnt get their loan application approved compared to those who had god credit history. So if anyone has bad credit history, that person might have to face disappointment.***","25146de1":"**Standardizing columns which have variant values**","fc3b1640":"# Importing Libraries\n","aa9657c3":"***We can see that there is equal proportion of target variables in both datasets.This makes the data balanced,so easier and more effective for our model to make predictions.***","7f9150ef":"***There are alot of null values in the dataset, so we will have to deal with them.***","55cf311d":"# Feature Engineering","e9286983":"***Our model only accepts tensors\/numeric data, so I will use LabelEncoder module of sklearn library to encode the object datatype features. This will change their datatype to integer as well.***","1b930d4d":"*In this notebook, I am going to show you that how different ML & DL models   perform on a credit risk modeling dataset, where we will predict which of the customers will have their loan approved.*","f36f3952":"# Conclusion","a6bdf7dc":"**Support Vector Machine**","4011e932":"***Now I am going to split my data into train data(for training models) and test data(for evaluating models) with the help of sklearn's module, train_test_split. I will be splitting data in to 60 40 ratio. 60% for training and 40% for testing. The parameter stratify will make sure that both train and test data have equal proportion of target variables.***","0d8ebab0":"***The following plot suggests that those people's loan application was more accepted who had borrowed it for 360(weeks) compared to those who had borrowed it for less term.So if one borrows it for this much time period, that person has greater chance for loan to be approved.***","f1d09e6b":"***The more darker the color is, there is more negative correlation. The more lighter it is, there is more positive correlation between the features.***","f09ab335":"***The following figure suggests that people who were not self employed were given more preference over those who were self employed. If someone is not self employed, that person has more chance for getting loan approved.***","78490086":"**Decision Tree**","a17a4e60":"# Creating ML\/DL models","cd550137":"***The following 2 distribution plots indicate that majority of those people have submitted an application for loan who have income between 0 & 10000($).***","29feccd6":"*The dataset has 614 rows and 13 different features, including the **target variable(Loan_Status)**. The data contains following features in it:* ","0cd018a0":"***Out of all the ML\/DL models I have tried, most of them were able to have test accuracy of almost 80%. So if anyone is not married,is graduated,has no dependents, is not self employed,has good income and has good credit hisotry will have good chance of loan application being accepted.***","66c94b39":"# Cleaning Data","1476b236":"**Model Deployed at https:\/\/credit-risk-modelling.herokuapp.com\/**","f0721872":"**KNeighbors Classifier**","779af5f1":"***The heatmap suggests that their is high positive corelation between applicant's income and loan amount. The more the applicant's income is, the more loan amount he wants to have approved.***","3042380b":"*First I am going to import some important libraries, then I will do some exploratory data analysis, then a bit of feature engineering followed by creating models and evaluating them on test set.*","cddcd3f8":"***Now we will have a detailed look at heatmap diagram. It contains all features in it now because we recently encoded the object datatypes and they are converted to integer.***","25968c25":"***The following scatterplot between applicant's income and loan amount indicates that mainly people wanted to have a lesser loan. This is shown by the distribution of points at left bottom of the figure. We can also see that loan status is not affected by the amount of loan or applicant's income. It varies through out the data.***","5f607dd4":"***Having a look at heatmap gives relationship between different integer\/float datatype features. At this moment, it is not showing other features as they have object datatype.Later in this notebook we will see it in more detail.***","ce06e8bc":"***This count plot illustrates the property area applicants have. This feature is not showing any relation with loan status as people who had different property area got their applications approved. Through property area it cannot be distinguised that who's application has more chance of being approved.***","fea9ee52":"| Column Name     | Description | \n| :---:       |    :----:   |     \n|  **Loan_ID**     | A unique loan id | \n| **Gender**   | Male\/Female | \n|**Married**|  Yes\/No |\n|**Dependents** |Number of poeple depending on applicant|\n|**Education** |Applicant's education--Graduate\/Not Gradudate|\n|**Self_Employed** |Yes\/No|\n|**ApplicantIncome** | Income of applicant  |\n|**CoapplicantIncome** |Income of coappplicant |\n|**LoanAmount**|Loan amount ($ thousands)|\n|**Loan_Amount_Term**|Term for borrowing money(weeks)|\n|**Credit_History**|Applicant's credit history|\n|**Property_Area**|Urban\/Rural\/Semi|\n|**Loan_Status**|Loan Approved (Yes\/No)|","f0e53c27":"***Those features who had only 2 unique values, I got their null values filled by their mode value. Whereas I got LoanAmount feature's null values filled by its median, because it may have outliers and taking average could divert our model from correctly predicting.***","bf803081":"***From the data, I am going to remove the Loan_ID and Property_Area feature because the heatmap suggests that these two features dont have any strong effect on any other feature.***","53c04705":"***The following distribution plots show that majority of people wanted a loan between 100,000 & 200,000($).***","0bac6251":"***The following illustration illustrates that mainly those applicant's application for loan was approved who were not married. So if someone is not married, that person has greater chance for loan to be approved.***","4eed903b":"*This is going to be a binary classification problem where the model will learn to predict the Loan_Status of a person, based on information available.*","41314461":"***The following plot gives an idea about the people's education. It explains that those people who were graduate, had greater chance for their loan to be approved.***","91965f01":"***The following figure indicates that those who had no dependents got their loan approved compared to those who had. So if someone has no dependents, that person has greater chance for loan to be approved.***","b5625f9f":"***This also shows high positive corelation between loan status and credit history. The more good the credit history a person has, there is high chance for his loan to be approved. We also found this insight previously in countplot diagram of credit history and loan status.***","cb18ffb2":"# Exploratory Data Analysis","44421e7b":"**Deep Learning using Keras**","e71cc19d":"***The following illustration illustrates that from the data provided almost 69% of the loan applications were approved.***","b1e84921":"# Credit Risk Modeling with different ML & DL models","dc0bbae2":"***The following illustration indicates that there were more Male candidates for loan application as compared to Females, but the loan status is not much affected by it as there is almost same proportion of rejections in both the cases.***","dd8e2444":"**Logistic Regression**"}}