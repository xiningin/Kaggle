{"cell_type":{"e60a1f17":"code","d61de3ee":"code","aec63b6d":"code","ba63a8ce":"code","171e3d6e":"code","93bba419":"code","78fc4664":"code","5575e2f9":"code","af1ab23e":"code","b1af21a3":"code","ad804e06":"code","0bfc89c2":"code","bf625ed5":"code","f618ab2c":"code","bcc0b45f":"code","772a3291":"code","43c18599":"code","fe8777b1":"code","d3eb11f8":"code","b205a560":"code","b1a713ac":"code","cb23b9e4":"code","847e2099":"code","1d090357":"code","0793604d":"code","06284131":"markdown","d4e4ddea":"markdown","05d712ec":"markdown","3be00aff":"markdown","b814a240":"markdown","6eec44cc":"markdown","93e12b9b":"markdown"},"source":{"e60a1f17":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d61de3ee":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nimport pandas_profiling as pp\n\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, train_test_split","aec63b6d":"data = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndata.head(5)","ba63a8ce":"data.info()","171e3d6e":"#RP = ProfileReport(data)\n#RP.to_file(output_file='output.html')","93bba419":"%matplotlib inline\n\ndata.hist(bins=50, figsize=(20,15))\nplt.show()","78fc4664":"corr_matrix=data.corr()\n\ncorr_matrix['quality'].sort_values(ascending=False)","5575e2f9":"import seaborn as sns\nf, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(corr_matrix, mask=np.zeros_like(corr_matrix, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax)","af1ab23e":"plt.scatter(data['fixed acidity'], data['density'])\nplt.xlabel(\"fixed acidity\")\nplt.ylabel(\"density\")\nplt.show()","b1af21a3":"plt.scatter(data['fixed acidity'], data['citric acid'])\nplt.xlabel(\"fixed acidity\")\nplt.ylabel(\"citric acid\")\nplt.show()","ad804e06":"plt.scatter(data['fixed acidity'], data['pH'])\nplt.xlabel(\"fixed acidity\")\nplt.ylabel(\"pH\")\nplt.show()","0bfc89c2":"X= data.iloc[ : , :-1]","bf625ed5":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\ndef calc_vif(X):\n\n    # Calculating VIF\n    vif = pd.DataFrame()\n    vif[\"variables\"] = X.columns\n    vif[\"VIF\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n\n    return(vif)","f618ab2c":"calc_vif(X)","bcc0b45f":"data.columns","772a3291":"X=data[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n        'sulphates', 'alcohol']]","43c18599":"# converting the response variables(3-7) as binary response variables that is either good or bad\nbins = (2,6.5,8)\nlabels = ['bad','good']\ndata['quality'] = pd.cut(data['quality'],bins=bins,labels=labels)\n\n#encoding categorical\nle = LabelEncoder()\ndata['quality'] = le.fit_transform(data['quality'])\n\n#set dependent variable\ny=data[['quality']]","fe8777b1":"data['quality'].value_counts()","d3eb11f8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.33, random_state = 42)\n\n# determining the shapes of training and testing sets\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","b205a560":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform (X_test)","b1a713ac":"# creating the model\nmodel = LogisticRegression()\n\n# feeding the training set into the model\nmodel.fit(X_train, y_train)\n\n# predicting the results for the test set\ny_pred = model.predict(X_test)\n\n# calculating the training and testing accuracies\nprint(\"Training accuracy :\", model.score(X_train, y_train))\nprint(\"Testing accuracy :\", model.score(X_test, y_test))\n\n# classification report\nprint(classification_report(y_test, y_pred))\n\n# confusion matrix\nprint(confusion_matrix(y_test, y_pred))","cb23b9e4":"#roc_auc  score for logistic model\n\nfpr1, tpr1, thresholds1 = roc_curve(y_test, y_pred)\nauc_score1 = roc_auc_score(y_test, y_pred)","847e2099":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train,y_train)\ny_pred = model.predict(X_test)\n\n# calculating the training and testing accuracies\nprint(\"Training accuracy :\", model.score(X_train, y_train))\nprint(\"Testing accuracy :\", model.score(X_test, y_test))\n\n# classification report\nprint(classification_report(y_test, y_pred))\n\n# confusion matrix\nprint(confusion_matrix(y_test, y_pred))","1d090357":"#roc_auc  score for KNN model\n\nfpr2, tpr2, thresholds2 = roc_curve(y_test, y_pred)\nauc_score2 = roc_auc_score(y_test, y_pred)","0793604d":"#comparing roc_auc_socre for bothe the model\nprint(auc_score1, auc_score2)","06284131":"**KNN work better thn logistic regression**\n","d4e4ddea":"## k-nearest neighbour","05d712ec":"## Result","3be00aff":"**pH is correlated with acidity, lower ph value mean more acidic property, we can look at vif of varible it also confirm pH can be explained by other variable present so i am going to drop ph**","b814a240":"## EDA","6eec44cc":"**fixed acidity have linear relation ship with density, pH and citric acid**","93e12b9b":"## Logistic Regression"}}