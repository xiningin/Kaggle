{"cell_type":{"146150b9":"code","7a834631":"code","06558f14":"code","0bcfcfc2":"code","f6e9ef85":"code","e069366b":"code","c1b85b73":"code","64c4bab2":"code","c8a14c38":"code","626d2675":"code","8e5f362a":"code","bec1975f":"code","008b5019":"code","ab26d1e8":"code","fabe027a":"code","b5de318e":"code","dc272ba4":"code","b546940b":"code","10c9a16f":"code","f587045b":"code","130d6c2a":"code","e8d964c1":"code","2527655b":"code","81204a26":"markdown","b46b7a22":"markdown","1fca4c5b":"markdown","5aba02ce":"markdown","78291914":"markdown","55b9f7cc":"markdown","0476afde":"markdown","4bc560ee":"markdown","13f411d7":"markdown","b3d61179":"markdown","c221c217":"markdown","cc497013":"markdown","1190adaa":"markdown","a1950700":"markdown","b29520cc":"markdown","4faaa6ae":"markdown","b9f0e16d":"markdown","91a5e99b":"markdown","1b31df8d":"markdown","722516a8":"markdown","cd60600f":"markdown","87b96a54":"markdown","d445458d":"markdown","13e1ba67":"markdown","d479e675":"markdown","06a0d55c":"markdown"},"source":{"146150b9":"import pandas as pd               #Data Manipulation\nimport numpy as np                #Linear Algebra\nimport matplotlib.pyplot as plt   #Visualization\nimport seaborn as sns             #Visualization","7a834631":"# Load the dataset\ndf = pd.read_csv('..\/input\/housing-prices-advanced-regression-techniques\/train.csv')\n\n# When a dataset has a large amount features, the features located in the middle can't be seen in notebook.\n# They are indicated by some dots.\n# But if all the features need to be seen, this one line of code will be there to help you out. \npd.pandas.set_option('display.max_columns', None)","06558f14":"# Head : 1st few rows of the dataset\ndf.head()","0bcfcfc2":"# Shape of the dataset\ndf.shape","f6e9ef85":"# Data types\ndf.dtypes","e069366b":"df.isnull().sum().sort_values(ascending = False)[0:25]","c1b85b73":"plt.figure(figsize= (20, 5))\nsns.heatmap(df.isnull(), yticklabels = False, cmap = 'viridis')\nplt.show()","64c4bab2":"df[df.columns[1:]].corr()['SalePrice'][:]","c8a14c38":"# We have craeted a list with all the features which data types aren't 'Object'\nnumerical_features = [feature for feature in df.columns if df[feature].dtype != 'O']\n\n# Number of numerical features\nprint('Number of numerical features : {}'.format(len(numerical_features)))\n\n# List of numerical features\nnumerical_features","626d2675":"df[numerical_features].head()","8e5f362a":"year_features = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature or 'yr' in feature or 'year' in feature]\n\n# Number of year features\nprint('Number of year features : {}\\n'.format(len(year_features)))\n\n# List of year features\nyear_features","bec1975f":"for i in year_features: \n    df.groupby(i)['SalePrice'].median().plot()\n    plt.show()","008b5019":"# For choosing the descrete features, we set the threshold value to 30\n# What does it mean? We have choosen only those features which have the number of unique values less than 30.\n# And also which are not in the year_features.\ndescrete_features = [i for i in numerical_features if len(df[i].unique()) < 30 and i not in year_features]\n\nprint('Number of descrete features : {}\\n'.format(len(descrete_features)))\n\ndescrete_features","ab26d1e8":"for i in descrete_features:\n    df.groupby(i)['SalePrice'].median().plot.bar()\n    plt\n    plt.show()","fabe027a":"# Numerical_features which aren't in descrete_features, year_features and Id column, are listed as Continuous Features\ncontinuous_features = [i for i in numerical_features if i not in descrete_features+year_features+['Id']]\n\nprint('Number of continuous features : {}\\n'.format(len(continuous_features)))\n\ncontinuous_features","b5de318e":"for i in continuous_features:\n    df[i].hist(bins= 25)\n    plt.xlabel(i)\n    plt.show()","dc272ba4":"for feature in continuous_features:\n    if 0 in df[feature].unique():          # We will skip the features which have any unique values of 0\n        pass                               # Because the value of log0 is infinite\n    else:\n        df[feature] = np.log(df[feature])  # Converted into logarithmic scale using numpy\n        df[feature].hist(bins = 25)\n        plt.xlabel(feature)\n        plt.show()","b546940b":"for feature in continuous_features:\n    if 0 in df[feature].unique():\n        pass\n    else:\n        df[feature] = np.log(df[feature])\n        plt.scatter(df[feature], df['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('Sales Price')\n        plt.show()","10c9a16f":"categorical_features = [feature for feature in df.columns if df[feature].dtype == 'O']\n\nprint('\\nNumber of categorical features : {}'.format(len(categorical_features)))\n\ncategorical_features","f587045b":"df[categorical_features].head()","130d6c2a":"for i in categorical_features:\n    print('Feature : {}\\nUnique values : {}\\nNumber of unique values : {}\\n'.format(i, df[i].unique(), len(df[i].unique())))","e8d964c1":"for i in categorical_features:\n    df.groupby(i)['SalePrice'].median().plot.bar()\n    plt.show()","2527655b":"for feature in continuous_features:\n    if 0 in df[feature].unique():\n        pass\n    else:\n        df[feature] = np.log(df[feature])\n        df.boxplot(column = feature)\n        plt.show()","81204a26":"<br\/>\n\n### Observing Missing values with Heatmap","b46b7a22":"<br\/>\n<br\/>\n\n### 5.1.1. Year related Features\nFrom the first few rows of the numerical features, we are seeing that there are about 4 features which are year related. We don't need all of them. All we can do is extract them or modify them to convert into only one feature.  \nBut first of all, let's see the correlation of these year related features with SalePrice.","1fca4c5b":"<br\/>\n<br\/>\n\n## 1. Importing necessary modules","5aba02ce":"<br\/>\n\n### Let's see the unique values of each and every Categorical Features","78291914":"<br\/>\n<br\/>\n\n## 5.1.2. Continuous Features ","55b9f7cc":"<br\/>\n<br\/>\n\n## **Table of contents**  \n1. Importing necessary modules along with dataset\n2. Reconnaissance of the dataset (Head, Shape, Datatypes)  \n3. Checking the missing values  \n4. Correlation of the features with the response variable (SalePrice)  \n5. Features in a detailed manner  \n        5.1 Numerical Features  \n            5.1.1 Year related Features  \n            5.1.2 Descrete Features  \n            5.1.3 Continuous Features  \n        5.2 Categorical Features  \n6. Outliers","0476afde":"<br\/>\n<br\/>\n\n### 5.1.2 Descrete Features","4bc560ee":"<br\/>","13f411d7":"<br\/>\n<br\/>\n<br\/>\n\n**Gratitude:** Krish Naik  \n**Image source:** clipart-library.com and towardsdatascience.com","b3d61179":"<br\/>","c221c217":"<br\/>\n<br\/>\n\n### Distribution of the continuous features","cc497013":"<br\/>\n<br\/>\n\n## 6. Outliers\n\nTo see the outlies, we have used boxplot here. The bottom arm of the boxplot indicates 1st quartile and the upper arm indicates the 3rd one.  \nPoints outside of the cape are the outliers here.","1190adaa":"<br\/>\n<br\/>\n\n## 4. Correlation of the features with the response variable (SalePrice)\ndf.columns[1:] - We removed the column 'Id' as it hasn't any importance here.","a1950700":"**Note:**  \nBefore converting them into logarithmic scale, make a copy of your dataset. Otherwise your main dataset will be converted and you may face problems latter on.\n<br\/>\n<br\/>\n\n### Now let's see the relationship of continous features with SalePrice","b29520cc":"![1_hbAFMnAFeUKfYO5IOiRlCA.png](attachment:1_hbAFMnAFeUKfYO5IOiRlCA.png)","4faaa6ae":"<br\/>\n\n### Relationship of categorical features with SalePrice using Bar plot","b9f0e16d":"![PicsArt_09-04-02.30.58.jpg](attachment:PicsArt_09-04-02.30.58.jpg)","91a5e99b":"<br\/>\n<br\/>\n\n## 2. Reconnaissance of the dataset ","1b31df8d":"**Note:**  \nFrom the Histogram plotted above, we are seeing that the distribution aren't normal or Gaussian distribution. That's why now we will change these features into **logarithmic scale**.\n<br\/>\n<br\/>\n\n### Converted the continous_features in logarithmic scale","722516a8":"<br\/>\n<br\/>\n\n##  5.2 Categorical Features","cd60600f":"<br\/>\n\n### Relationship of the year features with SalePrice","87b96a54":"<br\/>\n\n### Relationship of the descrete features with SalePrice","d445458d":"**Note:**  \nFrom the boxplot, we are seeing that there's a lot of outliers throughout the whole dataset. We will have to manage them all in Featurte Engineering.","13e1ba67":"<br\/>\n<br\/>\n\n## 3. Checking the missing values\n...[0:25] - We have observed 25 features in descending order and in the bottom of the list got some features with 0 missing values. That means there's also no missing values in the features from 26 to the rest. ","d479e675":"<br\/>","06a0d55c":"<br\/>\n<br\/>\n\n## 5. Features in a detailed manner\n<br\/>\n\n### 5.1. Numerical Features"}}