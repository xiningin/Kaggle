{"cell_type":{"fc72efbc":"code","3b96dc31":"code","15f494d8":"code","c17069d1":"code","d2e9a18d":"code","6ac72529":"code","272962fb":"code","358c304a":"code","b2219443":"code","ceb37f61":"code","665c2dd1":"code","48545880":"code","2ba34647":"code","21d7efcb":"code","b41c213d":"code","d1c49e3c":"code","289427d1":"markdown","151b2638":"markdown","f33f69c5":"markdown","7a355cfd":"markdown","0a120968":"markdown","9ba151be":"markdown","1f4f525b":"markdown","b45187e4":"markdown"},"source":{"fc72efbc":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom numpy import mean\nfrom sklearn import metrics\nimport seaborn as ss\nimport os","3b96dc31":"for dirname, _, filenames in os.walk('\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","15f494d8":"sign0 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 0.csv\")\nsign1 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 1.csv\")\nsign2 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 2.csv\")\nsign3 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 3.csv\")\nsign4 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 4.csv\")\nsign5 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 5.csv\")\nsign6 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 6.csv\")\nsign7 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 7.csv\")\nsign8 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 8.csv\")\nsign9 = pd.read_csv(\"\/kaggle\/input\/bsl-digits-dataset\/BSL Digits Dataset\/CSV Files\/Output - 9.csv\")","c17069d1":"df = pd.concat([sign0, sign1, sign2, sign3, sign4, sign5, sign6, sign7, sign8, sign9])","d2e9a18d":"features = df.iloc[:,1:-1]\nlabels = df.iloc[:,-1]","6ac72529":"features_np = np.array(features)","272962fb":"from sklearn.preprocessing import StandardScaler\n\nsc_X = StandardScaler()\nx = sc_X.fit_transform(features_np)\ny = labels","358c304a":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=0)\ncv = KFold(n_splits=10, random_state=1, shuffle=True)","b2219443":"from sklearn.neighbors import KNeighborsClassifier\nmodelKNN = KNeighborsClassifier(n_neighbors=5)\nmodelKNN.fit(x_train, y_train)\n\ny_predKNN = modelKNN.predict(x_test)\nscores = cross_val_score(modelKNN, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_KNN = (mean(scores)*100)\nprint('Accuracy (KNN) : %.2f' % accuracy_KNN, '%')","ceb37f61":"from sklearn.svm import SVC\nmodelSVM_Linear = SVC(kernel = 'linear')\nmodelSVM_Linear.fit(x_train, y_train)\n\ny_predSVM_Linear = modelSVM_Linear.predict(x_test)\nscores = cross_val_score(modelSVM_Linear, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_SVM_Linear = (mean(scores)*100)\nprint('Accuracy (SVM - Linear) : %.2f' % accuracy_SVM_Linear, '%')","665c2dd1":"from sklearn.svm import SVC\nmodelSVM_Poly = SVC(kernel = 'poly', degree=3)\nmodelSVM_Poly.fit(x_train, y_train)\n\ny_predSVM_Poly = modelSVM_Poly.predict(x_test)\nscores = cross_val_score(modelSVM_Poly, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_SVM_Poly = (mean(scores)*100)\nprint('Accuracy (SVM - Polynomial) : %.2f' % accuracy_SVM_Poly, '%')","48545880":"from sklearn.svm import SVC\nmodelSVM_RBF = SVC(kernel = 'rbf', degree=5)\nmodelSVM_RBF.fit(x_train, y_train)\n\ny_predSVM_RBF = modelSVM_RBF.predict(x_test)\nscores = cross_val_score(modelSVM_RBF, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_SVM_RBF = (mean(scores)*100)\nprint('Accuracy (SVM - RBF) : %.2f' % accuracy_SVM_RBF, '%')","2ba34647":"from xgboost import XGBClassifier\nmodelXGB = XGBClassifier()\nmodelXGB.fit(x_train, y_train)\n\ny_predXGB = modelXGB.predict(x_test)\nscores = cross_val_score(modelXGB, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_XGB = (mean(scores)*100)\nprint('Accuracy (XGB) : %.2f' % accuracy_XGB, '%')","21d7efcb":"from sklearn.ensemble import RandomForestClassifier\nmodelRFC = RandomForestClassifier(n_estimators = 10, criterion = 'gini')\nmodelRFC.fit(x_train, y_train)\n\ny_predRFC = modelRFC.predict(x_test)\nscores = cross_val_score(modelRFC, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_RFC = (mean(scores)*100)\nprint('Accuracy (RFC) : %.2f' % accuracy_RFC, '%')","b41c213d":"from sklearn.tree import DecisionTreeClassifier\nmodelDTC = DecisionTreeClassifier(criterion = 'gini')\nmodelDTC.fit(x_train, y_train)\n\ny_predDTC = modelDTC.predict(x_test)\nscores = cross_val_score(modelDTC, x_test, y_test, scoring='accuracy', cv=cv, n_jobs=-1)\naccuracy_DTC = (mean(scores)*100)\nprint('Accuracy (DTC) : %.2f' % (mean(scores)*100), '%')","d1c49e3c":"xAxis = ['XGB', 'KNN', 'SVM - L', 'SVM - P', 'SVM - R', 'DTC', 'RFC']\nyAxis = [accuracy_XGB, accuracy_KNN, accuracy_SVM_Linear, accuracy_SVM_Poly, accuracy_SVM_RBF, accuracy_DTC, accuracy_RFC]\n\ndframe = pd.DataFrame({\"Classifiers\" : xAxis, \"Accuracy\" : yAxis})\n\n\nplt.figure(figsize=(16, 12))\nsplot = ss.barplot(x = \"Classifiers\",y = \"Accuracy\", data = dframe)\nplt.xlabel(\"Classifiers\", size=16)\nplt.ylabel(\"Accuracy\", size=16)\nplt.savefig(\"BSL Sign Digits - Accuracy Comparison.png\")","289427d1":"**RFC**","151b2638":"**Comparison**","f33f69c5":"**XGB**","7a355cfd":"**SVM - Linear**","0a120968":"**SVM - RBF**","9ba151be":"**KNN**","1f4f525b":"**SVM - Polynomial**","b45187e4":"**DTC**"}}