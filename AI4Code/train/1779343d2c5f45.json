{"cell_type":{"95ea550d":"code","81884a46":"code","2a26d26c":"code","59a52884":"code","80b8ff04":"code","6596336d":"code","18cb5a48":"code","9d252cc7":"code","de9693b2":"code","57e62644":"code","6ae052c1":"code","afb74ee2":"code","7ffab47c":"code","d81729ad":"code","38f571e3":"markdown","e38148e0":"markdown","414f3a7c":"markdown","8f4adfb5":"markdown","adb257c2":"markdown","adc84064":"markdown","4bcf5829":"markdown","13288e9c":"markdown"},"source":{"95ea550d":"!pip install seaborn --upgrade","81884a46":"# libraries\nimport pandas as pd\n\n# visualization libraries\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nsns.set_style(\"whitegrid\")\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# warning\nimport warnings\nwarnings.filterwarnings(\"ignore\")","2a26d26c":"# data path\ntrain_path = \"..\/input\/bri-data-hackathon-cr-optimization\/train.csv\"\ntest_path = \"..\/input\/bri-data-hackathon-cr-optimization\/test.csv\"\ndata_description_path = \"..\/input\/bri-data-hackathon-cr-optimization\/data_description.csv\"\n\n# data\ntrain = pd.read_csv(train_path)\ntest = pd.read_csv(test_path)\ndescription = pd.read_csv(data_description_path)","59a52884":"# datetime\ntrain['periode'] = pd.to_datetime(train['periode'])","80b8ff04":"train.head()","6596336d":"description","18cb5a48":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"cr_ketetapan_total_bkn_sum\"], name=\"Max Cash Ratio\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"cr_ketetapan_total_bkn_sum\"].mean()] * len(train.index), name=\"Average Max Cash Ratio\", visible=True, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[        \n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Max Cash Ratio\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","9d252cc7":"px.bar(train[\"cr_ketetapan_total_bkn_sum\"].value_counts())","de9693b2":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"cash_in_echannel\"], name=\"Cash In Echannel\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"cash_out_echannel\"], name=\"Cash Out Echannel\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"cash_in_echannel\"].mean()] * len(train.index), name=\"Average Cash In Echannel\", visible=False, line=dict(dash=\"dash\")))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"cash_out_echannel\"].mean()] * len(train.index), name=\"Average Cash Out Echannel\", visible=False, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=1.2,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Both\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, False, False]},\n                           {\"title\": \"Cash In and Out E Channel\"}]),\n                dict(label=\"E Channel In\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, True, False]},\n                           {\"title\": \"Cash In E Channel\"}]),\n                dict(label=\"E Channel Out\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True, False, True]},\n                           {\"title\": \"Cash Out E Channel\"}])\n            ]),\n        ), \n        \n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=1.5,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Cash In and Out E Channel\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","57e62644":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"cash_in_kantor\"], name=\"Cash In Kantor\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"cash_out_kantor\"], name=\"Cash Out Kantor\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"cash_in_kantor\"].mean()] * len(train.index), name=\"Average Cash In Kantor\", visible=False, line=dict(dash=\"dash\")))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"cash_out_kantor\"].mean()] * len(train.index), name=\"Average Cash Out Kantor\", visible=False, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=1.2,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Both\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, False, False]},\n                           {\"title\": \"Cash In and Out Kantor\"}]),\n                dict(label=\"Kantor In\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, True, False]},\n                           {\"title\": \"Cash In Kantor\"}]),\n                dict(label=\"Kantor Out\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True, False, True]},\n                           {\"title\": \"Cash Out Kantor\"}])\n            ]),\n        ), \n        \n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=1.5,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Cash In and Out Kantor\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","6ae052c1":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"kas_kantor\"], name=\"Kas Kantor\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"kas_echannel\"], name=\"Kas Echannel\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"kas_kantor\"].mean()] * len(train.index), name=\"Average Kas Kantor\", visible=False, line=dict(dash=\"dash\")))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"kas_echannel\"].mean()] * len(train.index), name=\"Average Kas Echannel\", visible=False, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=1.2,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Both\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, False, False]},\n                           {\"title\": \"Kas Kantor dan E channel\"}]),\n                dict(label=\"Kas Kantor\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, True, False]},\n                           {\"title\": \"Kas Kantor\"}]),\n                dict(label=\"Kas Echannel\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True, False, True]},\n                           {\"title\": \"Kas Echannel\"}])\n            ]),\n        ), \n        \n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=1.5,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Kas Kantor dan E channel\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","afb74ee2":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"giro\"], name=\"Giro\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"deposito\"], name=\"Deposito\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"tabungan\"], name=\"Tabungan\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"giro\"].mean()] * len(train.index), name=\"Average Giro\", visible=False, line=dict(dash=\"dash\")))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"deposito\"].mean()] * len(train.index), name=\"Average Deposito\", visible=False, line=dict(dash=\"dash\")))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"tabungan\"].mean()] * len(train.index), name=\"Average Tabungan\", visible=False, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=1.2,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Both\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False]},\n                           {\"title\": \"Giro, Deposito dan Tabungan\"}]),\n                dict(label=\"Giro\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, False, True, False, False]},\n                           {\"title\": \"Giro\"}]),\n                dict(label=\"Deposito\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True, False, False, True, False]},\n                           {\"title\": \"Deposito\"}]),\n                dict(label=\"Tabungan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, True, False, False, True]},\n                           {\"title\": \"Tabungan\"}])\n            ]),\n        ), \n        \n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=1.5,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Giro, Deposito dan Tabungan\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","7ffab47c":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"kewajiban_lain\"], name=\"Kewajiban Lain\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"kewajiban_lain\"].mean()] * len(train.index), name=\"Average Kewajiban Lain\", visible=True, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[        \n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Kewajiban Lain\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","d81729ad":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=train[\"rata_dpk_mingguan\"], name=\"Saldo Mingguan\"))\nfig.add_trace(go.Scatter(x=train[\"periode\"], y=[train[\"rata_dpk_mingguan\"].mean()] * len(train.index), name=\"Average Saldo Mingguan\", visible=True, line=dict(dash=\"dash\")))\n\nfig.update_layout(\n    updatemenus=[        \n        dict(\n            type=\"buttons\",\n            direction=\"left\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(\n                    args=[\"type\", \"scatter\"],\n                    label=\"Linear\",\n                    method=\"restyle\"\n                ),\n                dict(\n                    args=[\"type\", \"bar\"],\n                    label=\"Bar\",\n                    method=\"restyle\"\n                )\n            ]),\n        )\n    ])\n\nfig.update_layout(\n    title_text=\"Saldo Mingguan\",\n    xaxis_domain=[1,1]\n)\n\nfig.show()","38f571e3":"# Task\n\n### Menggunakan data yang ada, prediksi nilai `kas_kantor` dan `kas_echannel` untuk 31 hari kedepan (1 Oktober 2020 - 31 Oktober 2020), dimana nilai `kas_kantor` dan `kas_echannel` untuk waktu `t` didefiniskan sebagai berikut:\n\n> $$ kas\\_kantor_{t} = kas\\_kantor_{t-1} + cash\\_in\\_kantor_{t} + cash\\_out\\_kantor_{t} $$\n> $$ kas\\_echannel_{t} = kas\\_echannel_{t-1} + cash\\_in\\_echannel_{t} + cash\\_out\\_echannel_{t} $$\n","e38148e0":"# Cash In and Out E- Channel\n- cash_in_echannel: Total Kas Masuk pada kas eChannel (ATM dan CRM)\n- cash_out_echannel: Total Kas keluar pada kas eChannel (ATM dan CRM)","414f3a7c":"# Rata Rata Saldo Mingguan\n\n- rata_dpk_mingguan: rata - rata saldo DPK mingguan","8f4adfb5":"# Giro, Deposir, dan Tabungan\n\n- giro: Total simpanan giro\n- deposito: Total simpanan deposito\n- tabungan: Total simpanan tabungan","adb257c2":"# Cash In and Out Kantor\n\n- cash_in_kantor: Total kas masuk pada kas kantor\n- cash_out_kantor: Total kas keluar pada kas kantor","adc84064":"# Maksimum Cash Ratio\n\n- cr_ketetapan_total_bkn_sum: Maksimum cash ratio yang dii tetapkan kantor pusat","4bcf5829":"# Kas Kantor dan E- Channel\n\n- kas_kantor: Total Dari kas kantor\n- kas_echannel: Total dari kas eChannel","13288e9c":"# Kewajiban Lain\n\n-kewajiban_lain: Simpanan selain giro tabungan dan deposito ,salah satunya adalah surat berharga yang diterbitkan"}}