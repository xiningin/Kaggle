{"cell_type":{"0c858628":"code","3a23b866":"code","50ad190f":"code","910bdad7":"code","15f56ea2":"code","f39ce3d8":"code","71fdeca9":"code","5aebb72f":"code","79d9cad7":"code","31f6aed4":"code","8fea7069":"code","5ab33e75":"code","e5b0fadf":"code","cf2cf664":"code","58933322":"code","b93d6dd2":"code","5d03ebd3":"code","2584c10b":"code","7e9456f7":"code","a0e65bc2":"markdown","9012dfa6":"markdown","0f6e6ed0":"markdown","15dc4bf3":"markdown","4451c895":"markdown","1b14e8d1":"markdown","9726ae64":"markdown","feebe03e":"markdown","48d4f769":"markdown","823cd77d":"markdown","c31ce9b5":"markdown","02ca376e":"markdown","88e84be9":"markdown","3bdfae56":"markdown"},"source":{"0c858628":"import pandas as pd\nimport numpy as np\nimport matplotlib as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npath =r'..\/input\/statesdata\/State_wise_GDP.csv' #path of the file for question1\ndf                =    pd.read_csv(path)\ndf                =    df.dropna(axis=1, how='all') # remove columns whose all values are null\ndf_new            =    df[df['Items  Description'] == '(% Growth over previous year)'] #remove all the rows with item description other than growth over previous year\ndf_new            =    df_new[(df_new['Duration'] !=\"2016-17\") ]#this is to remove all the rows for the duration 2016-17\ndf_new            =    df_new[(df_new['Duration'] !=\"2011-12\")]# this is to remove all the rows with values 2011-12\ndf_new            =    df_new[(df_new['Duration'] !=\"2012-13\")]# this is to remove all the rows with values 2012-13\ndf_new.loc['mean']=    df_new.mean() # this is to add a new row in the dataframe\ndf_new            =    df_new.reset_index(drop=True)\ndf_avg            =    df_new.loc[0,:] #taking all the columns of state names\ndf_avg            =    df_new.iloc[-1,:] # taking all the mean values\ndf_avg            =    df_avg.iloc[2:-1] # this is to exclude, duration and items as the row names from the new dataframes which includes averages\ndf_avg_sorted     =    df_avg.sort_values(ascending=False)# the data has been captured\n\n#plotting the dataframe with average values for three years in a descending order\ndf_avg_sorted.plot(kind=\"bar\",figsize=(10,7))\nplt.pyplot.xlabel(\"States\")\nplt.pyplot.ylabel(\"(% Growth over previous year)\")\nplt.pyplot.title(\"average percentage growth over a period of 2013-16\")","3a23b866":"df_curosity             =    df[['Jammu & Kashmir','All_India GDP','Items  Description','Duration']]\ndf_curosity             =    df_curosity[df_curosity['Items  Description'] == '(% Growth over previous year)'] #remove all the rows with item description other than growth over previous year\ndf_curosity             =    df_curosity[(df_curosity['Duration'] !=\"2016-17\") ]#this is to remove all the rows for the duration 2016-17\ndf_curosity             =    df_curosity[(df_curosity['Duration'] !=\"2011-12\")]# this is to remove all the rows with values 2011-12\ndf_curosity             =    df_curosity[(df_curosity['Duration'] !=\"2012-13\")]\ndf_curosity.loc['mean'] =    df_curosity.mean()\ndf_curosity_plt         =   df_curosity.iloc[-1,:2] \ndf_curosity_plt.plot(kind=\"bar\")\nplt.pyplot.title(\"J&K vs ALL_INDIA_GDP\")\nplt.pyplot.ylabel(\"Mean GDP over three years\")","50ad190f":"#Plot the total GDP of the states for the year 2015-16:\ndf_2015_16         = df[df['Duration'] == \"2015-16\"] #here the data frame used was created in the first step from the csv             \ndf_2015_16         = df_2015_16[df_2015_16['Items  Description'] ==\"GSDP - CURRENT PRICES (` in Crore)\"]\n#df_2015_16 = df_2015_16.T\ndf_2015_16         = df_2015_16.reset_index(drop=True)\ndf_2015_16_sorted  = df_2015_16.loc[0,:]\ndf_2015_16_sorted  = df_2015_16_sorted.iloc[2:-1].sort_values(ascending=False)\ndf_2015_16_sorted.plot(kind=\"bar\",figsize=(10,5))\nplt.pyplot.xlabel(\"States\")\nplt.pyplot.ylabel(\"GSDP - CURRENT PRICES (` in Crore)\")\nplt.pyplot.title(\"total GDP of the states\")","910bdad7":"#pat1 b \nimport glob # this library is used to import all the files with a particular regula expression\npath      = r'..\/input\/states-data\/'\nall_files = glob.glob(path+\"*\")\nlst       = []\nfor file in all_files:\n    state = file.split(\"\/\")[-1].split('-')[1] #i have used - to split to get the proper name of the state\n    if(state == \"Chandigarh\" or state ==\"Delhi\" or state == \"Puducherry\"):#this step will remove UT's\n        continue\n    df         =   pd.read_csv(file,encoding = \"ISO-8859-1\") #encoding was done to remove the error while fethcing the values during read_csv\n    df         =   df [['Item','2014-15']]\n    df         =   df.T\n    new_header =   df.iloc[0]\n    new_header =   new_header.str.replace(\"*\",\"\") #replacing all the stars from the column names\n    df.columns =   new_header\n    df =df [1:]\n    df.loc[:,'States'] = state\n    lst.append(df)","15f56ea2":"frame       =  pd.concat(lst, axis=0,ignore_index = True)#the total dataframe for all the files\nplot_gsdp   =  frame[['States','Per Capita GSDP (Rs.)']] #partial subset of the main data containign two columns\nplot_gsdp   =  plot_gsdp.set_index(['States']).sort_values(by = 'Per Capita GSDP (Rs.)',ascending=False)\nplot_gsdp.plot(kind=\"bar\",figsize=(10,7))\nplt.pyplot.title(\"Per Capita in Rs for all the states for the year 2014-2015\")\nplt.pyplot.ylabel(\"Per Capita GSDP (Rs.)\")","f39ce3d8":"#Find the ratio of the highest per capita GDP to the lowest per capita GDP.\nratio = plot_gsdp[['Per Capita GSDP (Rs.)']].max()\/plot_gsdp[['Per Capita GSDP (Rs.)']].min()\nprint(ratio)\n# the ratio is found to be 8.004742","71fdeca9":"#per_contri is a datframe which will show the percentage contribution of all the sectors, primary, secondary and tertiary over all the states\nper_contri                  = frame[['States','Primary','Secondary','Tertiary','Gross State Domestic Product']]\nper_contri                  = per_contri.sort_values(by = 'Gross State Domestic Product',ascending = False)\n\n#take the only columns with the name as primary, secondary and tertiary and name them as primary_per,secondary_per,tertiary_per\nper_contri['primary_per']   = per_contri['Primary']\/per_contri['Gross State Domestic Product']\nper_contri['secondary_per'] = per_contri['Secondary']\/per_contri['Gross State Domestic Product']\nper_contri['tertiary_per']  = per_contri['Tertiary']\/per_contri['Gross State Domestic Product']\n\n#set the index to states for better and easy understanding and representation\nper_contri                  = per_contri.set_index(['States'])\n\n#loc is used to fetch only the columns which have 'primary_per','secondary_per','tertiary_per' as column names\nper_contri.loc[:,['primary_per','secondary_per','tertiary_per']].plot.bar(stacked=\"True\",figsize=(10,7))\nplt.pyplot.title(\"percentage of all the three sectors for the year 2014-2015\")\nplt.pyplot.ylabel(\"percentage contribution of primary,secondary and tertiary sectors\")","5aebb72f":"#frame.columns, in the below line we are fetching all the column names except for the sector names and population etc\n\nquant = frame[['Agriculture, forestry and fishing',\n       'Mining and quarrying', 'Manufacturing',\n       'Electricity, gas, water supply & other utility services',\n       'Construction', 'Trade, repair, hotels and restaurants',\n       'Transport, storage, communication & services related to broadcasting',\n       'Financial services',\n       'Real estate, ownership of dwelling & professional services',\n       'Public administration', 'Other services','Gross State Domestic Product','Per Capita GSDP (Rs.)']]","79d9cad7":"#quant = frame[['Gross State Domestic Product','Per Capita GSDP (Rs.)','Agriculture, forestry and fishing','Mining and quarrying','Manufacturing','Electricity, gas, water supply & other utility services', 'Construction','Trade & repair services','Transport, storage, communication & services related to broadcasting','Financial services','Real estate, ownership of dwelling & professional services','Public administration','Other services']]\nquant['Per Capita GSDP (Rs.)'] =  quant[['Per Capita GSDP (Rs.)','Gross State Domestic Product']].astype('float')\nquantile_frame                 =  quant.quantile(q=[0.2, 0.5, 0.85,1])\nquantile_ranks                 = []\n\n#itrrows is used to loop through the all the rows in pandas dataframe and it has been used to calculate the quartile and \n#categorise them in c1,c2,c3,c4 categories etc.\n\nfor index, row in quant.iterrows():\n    if (row['Per Capita GSDP (Rs.)'] <= quantile_frame.loc[0.2]['Per Capita GSDP (Rs.)']):\n        quantile_ranks.append(\"c4\")\n    elif (row['Per Capita GSDP (Rs.)'] > quantile_frame.loc[0.2]['Per Capita GSDP (Rs.)'] and row['Per Capita GSDP (Rs.)'] <= quantile_frame.loc[0.5]['Per Capita GSDP (Rs.)']):\n        quantile_ranks.append(\"c3\")\n    elif (row['Per Capita GSDP (Rs.)'] > quantile_frame.loc[0.5]['Per Capita GSDP (Rs.)'] and row['Per Capita GSDP (Rs.)'] <= quantile_frame.loc[0.85]['Per Capita GSDP (Rs.)']):\n        quantile_ranks.append(\"c2\")\n    else:\n        quantile_ranks.append(\"c1\")\n        \n#in the below line a new column is created which will append the categories in the dataframe        \nquant['quartile'] = quantile_ranks","31f6aed4":"#four dataframes are created here for each category\nquant_c1 = quant[quant['quartile'] ==\"c1\"].set_index(['quartile'])\nquant_c2 = quant[quant['quartile'] ==\"c2\"].set_index(['quartile'])\nquant_c3 = quant[quant['quartile'] ==\"c3\"].set_index(['quartile'])\nquant_c4 = quant[quant['quartile'] ==\"c4\"].set_index(['quartile'])","8fea7069":"# plot the graph for category c1\nquant_c1              = quant_c1.append(quant_c1.agg(['sum']))\nval                   = quant_c1.loc['sum']['Gross State Domestic Product'] # value to fnd the ratio of each subsector\nquant_c1.loc['ratio'] = quant_c1.loc['sum']\/val\nquant_c1              = quant_c1.loc['ratio'].sort_values(ascending=False)\nquant_c1              = quant_c1.drop('Gross State Domestic Product')\nquant_c1              = quant_c1[quant_c1.cumsum() <= 0.8]\n#plot the graph with the below code for c1 category\nquant_c1.plot(kind=\"bar\" )\nplt.pyplot.title(\"Types of subsectors which includes to top 80 % for category 1\")\nplt.pyplot.xlabel(\"types of subsectors\")\nplt.pyplot.ylabel(\"percentage contibution of Subsectors\")\nprint(val)","5ab33e75":"# plot the graph for category c2\nquant_c2               = quant_c2.append(quant_c2.agg(['sum']))\nval                    = quant_c2.loc['sum']['Gross State Domestic Product'] # value to fnd the ratio of each subsector\nquant_c2.loc['ratio']  = quant_c2.loc['sum']\/val\nquant_c2               = quant_c2.loc['ratio'].sort_values(ascending=False)\nquant_c2               = quant_c2.drop('Gross State Domestic Product')\nquant_c2               = quant_c2[quant_c2.cumsum() <= 0.8]\n\n#c2 categroy dataframe is created , plot the same with the below code\nquant_c2.plot(kind=\"bar\")\nplt.pyplot.title(\"Types of subsectors which includes to top 80 % for category c2\")\nplt.pyplot.xlabel(\"types of subsectors\")\nplt.pyplot.ylabel(\"percentage contibution of Subsectors\")","e5b0fadf":"# plot the graph for category c3\nquant_c3              = quant_c3.append(quant_c3.agg(['sum']))\nval                   = quant_c3.loc['sum']['Gross State Domestic Product'] # value to fnd the ratio of each subsector\nquant_c3.loc['ratio'] = quant_c3.loc['sum']\/val\nquant_c3              = quant_c3.loc['ratio'].sort_values(ascending=False)\nquant_c3              = quant_c3.drop('Gross State Domestic Product')\nquant_c3              = quant_c3[quant_c3.cumsum() <= 0.8]\n\n#plot the graph for c3 category \nquant_c3.plot(kind=\"bar\")\nplt.pyplot.title(\"Types of subsectors which includes to top 80 % for category c3\")\nplt.pyplot.xlabel(\"types of subsectors\")\nplt.pyplot.ylabel(\"percentage contibution of Subsectors\")","cf2cf664":"# plot the graph for category c4\nquant_c4              = quant_c4.append(quant_c4.agg(['sum']))\nval                   = quant_c4.loc['sum']['Gross State Domestic Product'] # value to fnd the ratio of each subsector\nquant_c4.loc['ratio'] = quant_c4.loc['sum']\/val\nquant_c4              = quant_c4.loc['ratio'].sort_values(ascending=False)\nquant_c4              = quant_c4.drop('Gross State Domestic Product')\nquant_c4              = quant_c4[quant_c4.cumsum() <= 0.8]\n\n#cumulative sum for the category has been obtained, now its turn to plot the graph for c4 category\nquant_c4.plot(kind=\"bar\")\nplt.pyplot.title(\"Types of subsectors which includes to top 80 % for category c4\")\nplt.pyplot.xlabel(\"types of subsectors\")\nplt.pyplot.ylabel(\"percentage contibution of Subsectors\")","58933322":"new = pd.merge(quant_c1,quant_c2, how =\"outer\", on ='Item')\nnew = new.rename(columns={'ratio_x':'c1','ratio_y':'c2'})\nnew1 = pd.merge(quant_c3,quant_c3, how =\"outer\", on ='Item')\nnew1 = new1.rename(columns={'ratio_x':'c3','ratio_y':'c4'})\nreq = pd.merge(new,new1,how=\"outer\",on=\"Item\")\n\nreq.plot.bar(rot=90,width=0.7,figsize=(10,7))\nplt.pyplot.xlabel(\"Types of subsectors\")\nplt.pyplot.ylabel(\"percentage contribution of each subsector\")","b93d6dd2":"path                                = r'..\/input\/datafiles\/rs_session243_au570_1.1.csv'\ndf_2                                = pd.read_csv(path)\n#df.rename is an inbuilt function used to rename the columns and this takes values in the dictionary format\ndf_2.rename(columns = {'Primary - 2014-2015': 'Primary - 2013-2014','Primary - 2014-2015.1': 'Primary - 2014-2015','Level of Education - State':'States'},inplace = True)\ndf_req                              = df_2[['Primary - 2014-2015','Upper Primary - 2014-2015','Senior Secondary - 2014-2015']]\ndf_req['States']                    = df_2['States'].str.replace(\" \",\"_\")\ndf_chk                              = pd.merge(df_req,frame[['States','Per Capita GSDP (Rs.)']],on=\"States\",how = 'inner')","5d03ebd3":"df_primary                          = df_chk[['Primary - 2014-2015','Per Capita GSDP (Rs.)','States']]\ndf_primary['Per Capita GSDP (Rs.)'] = df_primary['Per Capita GSDP (Rs.)']\/10000\ndf_primary                          = df_primary.sort_values(by = 'Per Capita GSDP (Rs.)',ascending=False)\nx                                   = df_primary['Primary - 2014-2015'].values\ny                                   = df_primary['Per Capita GSDP (Rs.)'].values\nvalues                              = ['Primary - 2014-2015','Per Capita GSDP (Rs.)\/10000']\ndf_primary                          = df_primary.set_index(['States'])\ndf_primary.plot.bar(rot=90,figsize=(10,8),width = 0.8)\nplt.pyplot.legend(values,loc=2)","2584c10b":"df_upper_primary                          = df_chk[['Upper Primary - 2014-2015','Per Capita GSDP (Rs.)','States']]\ndf_upper_primary['Per Capita GSDP (Rs.)'] = df_upper_primary['Per Capita GSDP (Rs.)']\/10000\ndf_upper_primary                          = df_upper_primary.sort_values(by = 'Per Capita GSDP (Rs.)',ascending=False)\nx                                         = df_upper_primary['Upper Primary - 2014-2015'].values\ny                                         = df_upper_primary['Per Capita GSDP (Rs.)'].values\nvalues                                    = ['Upper Primary - 2014-2015','Per Capita GSDP (Rs.) in thousands']\ndf_upper_primary                          = df_upper_primary.set_index(['States'])\ndf_upper_primary.plot.bar(rot=90,figsize=(10,8),width = 1.2)\nplt.pyplot.legend(values,loc=2)","7e9456f7":"df_senior_secondary                          = df_chk[['Senior Secondary - 2014-2015','Per Capita GSDP (Rs.)','States']]\ndf_senior_secondary['Per Capita GSDP (Rs.)'] = df_senior_secondary['Per Capita GSDP (Rs.)']\/10000\ndf_senior_secondary                          = df_senior_secondary.sort_values(by = 'Per Capita GSDP (Rs.)',ascending=False)\nx                                            = df_senior_secondary['Senior Secondary - 2014-2015'].values\ny                                            = df_senior_secondary['Per Capita GSDP (Rs.)'].values\nvalues                                       = ['Senior Secondary - 2014-2015','Per Capita GSDP (Rs.) in thousands']\ndf_senior_secondary                          = df_senior_secondary.set_index(['States'])\ndf_senior_secondary.plot.bar(rot=90,figsize=(10,8),width = 1.2)\nplt.pyplot.legend(values,loc=2)","a0e65bc2":"> For the Senior Secondary education in the year 2014-15 -:\n- It seems in the senior secondary education we have huge number of drop outs in Goa and Sikkim which means people tends to go for\n  other things than finishing their studies.\n- Even we have some proportion of dropouts in the most literate states like Kerala and Comparatively higher number in Tamil Nadu\n  Arunachal Pradesh has topped the list with the most number of drop outs showing a major area of concern, which might be related to   the lowest per capita GSDP\n- Surprisingly the states like Bihar, Manipur, Assam, Odisha, Meghalaya and Andhra Pradesh have no drop outs indicating that all the   people who finishes their secondary education and opts for the senior secondary education, tends to finish their education.\n","9012dfa6":"    '''\n    Analysis for C4 category which includes the data from the range <=0.2\n    and on plotting the graph in the decreasing order it is clear that the top 3 sub-sectors are -:\n    Agriculture,forestry and fishing, Trade repair,hotels and restaurants and Manufacturing\n  \n    '''","0f6e6ed0":"    '''\n    Analysis for C1 category which includes the data from the range >0.85 and less than = 1\n    and on plotting the graph in the decreasing order it is clear that the top 3 sub-sectors are -:\n  \n    Real estate,ownership of dwelling & professional services, Agriculture,forestry and fishing   \n    and Trade,repair,hotels and restaurants\n  \n    '''","15dc4bf3":"    '''\n    Analysis for C2 category which includes the data from the range >0.5 and less than =0.85\n    and on plotting the graph in the decreasing order it is clear that the top 3 sub-sectors are -:\n   \n    Manufacturing, Real estate,ownership of dwelling & professional services and Agriculture\n    forestry and fishing\n  \n    '''","4451c895":"- Here also Tamil Nadu and Kerala has nothing to worry about as they have no drop outs and the GSDP is also good for Kerala, whereas\n  Tamil Nadu has to work upon increasing their per capita GSDP\n- The inverse relation holds true for secondary education and per capita GSDP as well.\n- Goa and Sikkim have the highest GSDP with the lowest drop outs. Even Himachal Pradesh has very low drop outs, but they have to\n  work upon increasing their per capita GSDP\n- Madhya Pradesh, Jharkhand and Assam have the highest dropouts and the per capita GSDP also is very less for them.\n- Whereas Bihar shows lot of dropouts in comparison to Primary where there were none. Even for UP the drop outs have decreased\n  drastically for secondary education in comparison to Primary. Yet they are really high.\n","1b14e8d1":"> The top 5 states are Goa, Sikkim, Haryana, Kerala, Uttarakhand and the bottom 5 states are -:\n- Jharkhand, Assam, Manipur, Uttar Pradesh, Bihar\n- Goa has lowest GDP but highest per capita GDP which means the population of the state is very less. Same goes for Sikkim as well.\n\n> We can see that there is a consistent story coming up for TN, Gujarat, Karnataka as they have highest GDP, faster growth rate and higher GDP per capita as well.\n    \n    '''\n    Analysis -:\n    \n    Identify the top 5 and the bottom 5 states based on the GDP per capita ?\n    The top 5 states are Goa, Sikkim, Haryana, Kerala, Uttarakhand\n    and the bottom 5 states are -:\n    Jharkhand, Assam, Manipur, Uttar Pradesh, Bihar\n    '''","9726ae64":"- Meghalya and Goa is the slowest growth cluster with their average growth rate below 7.5%\n- There are 20 states in the range of 10 - 12.5% growth rate. Like Bihar, Telangana, Assam, Tamil Nadu etc\n- There are 6 states with growth rate b\/w 12.5% and 14% aprox.\n- Top 3 states are Mizoram, Triputa and Nagaland. And their growth rate is very close to 17%\n- This means that top three states are groing 120% faster than slowest two states.\n- Niti Ayog needs to pay attention to States that should have been growing in a faster range.\n\n \n\n    Analysis - :\n    -----------------------------------------------------------------------------------\n    Which states have been growing consistently fast, and which ones have been struggling?\n    Mizoram, Tripura, Nagaland, Manipur, Arunachal_Pradesh are the top 5 most groing states\n    J&K, Sikkim, Odisha, Meghalya, Goa are the 5 least growing states\n    ------------------------------------------------------------------------------------\n    Curiosity exercise: What has been the average growth rate of your home state, and \n    how does it compare to the national average over this duration?\n    I am from Jammu and Kashmir and it seems to be in the bottom 5 states in terms of the \n    growth\n    This shows that the Jammu_and_Kashmir seems to be almost equal to All_India_GDP\n    ------------------------------------------------------------------------------------\n    \n","feebe03e":"    '''\n    Analysis for C3 category which includes the data from the range >0.2 and less than =0.5\n    and on plotting the graph in the decreasing order it is clear that the top 3 sub-sectors are -:\n   \n    Agriculture,forestry and fishing, Manufacturing and Trade,repair,hotels and restaurants\n  \n    '''","48d4f769":"# Case Study :\n> You are working as the chief data scientist at NITI Aayog, reporting to the CEO. The CEO has initiated a project wherein the \nNITI Aayog will provide top-level recommendations to the Chief Ministers (CMs) of various states, which will help them prioritise areas of development for their respective states. Since different states are in different phases of development, the recommendations should be specific to the states.\n\n> The overall goal of this project is to help the CMs focus on areas that will foster economic development for their \nrespective states. Since the most common measure of economic development is the GDP, you will analyse the GDP of the various states \nof India and suggest ways to improve it.\n \n \n# Requirements :\n\n> Data\nThe data is sourced from https:\/\/data.gov.in\/, an Open Government Data (OGD) platform of India. The download instructions are provided in the next segment. The data for GDP analysis of the Indian states is divided into two parts:\n\n> Data I-A: This dataset consists of the GSDP (Gross State Domestic Product) data for the states and union territories.\n\n> Data I-B: This dataset contains the distribution of GSDP among three sectors: the primary sector (agriculture), the secondary sector (industry) and the tertiary sector (services) along with taxes and subsidies. There is separate dataset for each of the states. You are expected to read the dataset for the available states and join these (in Python) if needed.\n\n- There are two parts to this project. In the first part, we will analyse and compare the GDPs of various Indian states (both total and per capita). The GDP of a state is referred to as the GSDP (Gross State Domestic Product). Then, you will divide the states into four categories based on the GDP per capita, and for each of these four categories, you will analyse the sectors that contribute the most to the GDP (such as agriculture, real estate, manufacturing, etc.).\n\n> In the second part, you will analyse whether GDP per capita is related to dropout rates in schools and colleges.\n\n- Part-I: GDP Analysis of the Indian States\n- For each of the following steps of analysis, choose an appropriate type of plot for comparing the data. Also, ensure that the plots are in increasing or decreasing order for better comparison. For example, if you make a bar plot to compare the GDPs of the states, ensure that the bars are in either increasing or decreasing order of GDP.\n\n- Part I-A:\n\n- For the analysis below, use the Data I-A.\n- Remove the rows: '(% Growth over the previous year)' and 'GSDP - CURRENT PRICES (` in Crore)' for the year 2016-17.\n- Calculate the average growth of states for the duration 2013-14, 2014-15 and 2015-16 by taking the mean of the row '(% Growth over previous year)'. Compare the calculated values and plot them for the states. Make appropriate transformations, if necessary, to plot the data. Report the average growth rates of the various states:\n- Which states have been growing consistently fast, and which ones have been struggling?\n- Curiosity exercise: What has been the average growth rate of your home state, and how does it compare to the national average over this duration?\n- Plot the total GDP of the states for the year 2015-16:\n- Identify the top 5 and the bottom 5 states based on total GDP.","823cd77d":"@Author: Tushar","c31ce9b5":"- It seems that the tertiary sector is booming all over the nation in all the states, where as the secondary sector is also performing good in almost all the states except for Manipur and Nagaland\n- But the market is very less for Primary Sector and it seems the percentage contribution of primary sector is least in all over the country except for Arunachal Pradesh and Madhya Pradesh where it looks to be doing normal.\n- There is a lot of scope from the growth perspective in the primary sector especially in areas like Goa, Sikkim, Maharashtra, Tamil Nadu, Kerala. From the nation\u2019s perspective this area seems to be very less in the market\n\n- Tamil Nadu, Karnataka, Gujarat seems to be doing well because of tertiary sector growth.\n","02ca376e":"> The dropout vs the GSDP has shown very interesting features, For the Primary education in the year 2014-15 -:\n\n- The per capita GSDP and the drop outs in the primary sector for the year2014-15 shows an inverse relation. More the per capita GSDP less the dropouts. And states like Goa, Sikkim, Haryana have performed really good. Whereas states like Tamil Nadu and Kerala shows no dropouts at all\n- Even Bihar interestingly shows no dropouts, even though it has lowest per capita per capita GSDP which might conclude, that there is very less population which actually goes for education, but who so ever goes does not opt for a drop out. The focus areas are Assam, Manipur and Uttar Pradesh where the drop outs at the primary level have been the most. No doubt they have very less per capita GSDP.\n- Arunachal Pradesh, Andhra Pradesh, Mizoram and Assam, Manipur, UP have performed differently.\n","88e84be9":"- As from the sector graph we got to know that the tertiary sector is performing the best followed by secondary and there is hardly much in the Primary sector.\n> Now, when we have further categorised the data based on the total GDP -:\n- we know the tertiary sector is doing best because of C1 category which is almost equally distributed.\n- Except for other services, which is again a part of tertiary sector.\n- 2 out of 3 subcategories for the secondary sector have been performing decently across all the categories and these are       \n  Construction and Manufacturing which shows the type of labour we have and the type of labour we should focus upon.\n- The only reason why Primary sector is growing is because of Agriculture, forestry and fishing,\n  Whereas other sectors have not been doing very well. And this sector has performed exceptionally well in C3 and C4 category as\n  well.\n","3bdfae56":"> This can be divided into 5 clusters -:\n- Tamil Nadu, Uttar Pradesh, Karnataka, Gujarat contributes to the maximum GDP across all the states\n- States like Andhra Pradesh, Kerala, Telangana, Delhi, Madhya Pradesh all have GDP close to 600000 crores.\n- States like Haryana, Bihar, Odisha are having GDP in the range 3.5 to 4.5 hundred thousand crores.\n- Chhattisgarh, Jharkhand, Assam, Uttarakhand, Jammu Kashmir have GDP close to 200000 crores.\n- Goa, Chandigarh, Meghalaya, Puducherry, Arunachal Pradesh, Sikkim\n\n#### Tamil Nadu, Uttar Pradesh, Karnataka are contributing to the big volume in GDP and have higher growth rate as well. \n\n    ''' \n    Analysis -:\n    Identify the top 5 and the bottom 5 states based on total GDP.\n    The top 5 states are Tamil Nadu, Uttar Pradesh, Karnataka, Gujarat, Andhra Pradesh\n    and the bottom 5 states are -:\n    Chandigarh, Meghalya, Puducherry, Arunachal Pradesh, Sikkim    \n    '''"}}