{"cell_type":{"930bf0f9":"code","5aef7091":"code","d691fc18":"code","92843528":"code","7067d9e0":"code","e744ddaa":"code","d19bae68":"code","6b669020":"code","bcc54156":"code","58a17a8b":"markdown"},"source":{"930bf0f9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","5aef7091":"#load data\ndf = pd.read_csv(\"..\/input\/train.csv\")","d691fc18":"# Take out label column\nlabels = df['label']\ndf = df.drop('label', 1)","92843528":"# Let's see how data looks like \nimage = df.values[123]\nplt.imshow(image.reshape(28, 28), cmap='Greys')\nplt.show()","7067d9e0":"# Split data\nx_train, x_test, y_train, y_test = train_test_split(df.values, labels, test_size = 0.3, random_state = 0)\n\nprint(x_train.shape)\nprint(x_test.shape)\n\nprint(y_train.shape)\nprint(y_test.shape)","e744ddaa":"# Setup KNN model\nclf = KNeighborsClassifier()","d19bae68":"#Train model\nclf.fit(x_train, y_train)","6b669020":"# Predict\npredictions = clf.predict(x_test)","bcc54156":"# evaluate predictions\nprint (\"Overal accuracy:\", accuracy_score(predictions, y_test))\nprint (classification_report(predictions, y_test))\nprint (confusion_matrix(predictions, y_test))","58a17a8b":"## This is a solution for [digit-recognizer(MNIST)](http:\/\/https:\/\/www.kaggle.com\/c\/digit-recognizer) using scikitlearn's K Nearest Neighbors, it is very easy to implement and it gives a not bad score of **0.968** on the official dataset"}}