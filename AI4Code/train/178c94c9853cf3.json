{"cell_type":{"17aeb191":"code","415c0f7b":"code","93a59180":"code","cc355ebc":"code","a9245ada":"code","75f4ed93":"code","cfdecdf3":"code","e5d9e217":"code","73851f75":"code","13a177cf":"code","7374bd3a":"code","3cfca667":"code","75c2fa05":"code","c2076d54":"code","e582b92c":"code","3ddf8b50":"code","3e87e49e":"markdown","10f2ede1":"markdown","b3efb421":"markdown","58fa46de":"markdown","bdec73de":"markdown","6222ea5d":"markdown","d8351eb4":"markdown","11540b01":"markdown","73ad6e4e":"markdown","64785e80":"markdown"},"source":{"17aeb191":"#Import libraries\nimport datetime as dt\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings # Uyar\u0131lar\nwarnings.filterwarnings(\"ignore\")\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","415c0f7b":"!pip install openpyxl","93a59180":"#Reading and copy of data\nonline_retail = pd.read_excel('..\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx', sheet_name=\"Year 2010-2011\")\ndf = online_retail.copy()\ndf.head()","cc355ebc":"def check_df(dataframe):\n    print(\"################ Shape ####################\")\n    print(dataframe.shape)\n    print(\"############### Columns ###################\")\n    print(dataframe.columns)\n    print(\"############### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"############### Head ######################\")\n    print(dataframe.head())\n    print(\"############### Tail ######################\")\n    print(dataframe.tail())\n    print(\"############### Describe ###################\")\n    print(dataframe.describe().T)\n\ncheck_df(df)","a9245ada":"#Are there any missing observations in the dataset?\ndf.isnull().sum()","75f4ed93":"#Remove the missing observations from the dataset\ndf.dropna(inplace=True)","cfdecdf3":"#How many unique items in the dataset?\ndf[\"Description\"].nunique()","e5d9e217":"#How many product in the dataset?\ndf[\"Description\"].value_counts()","73851f75":"#Rank the 5 most ordered products from most to least\ndf.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending=False).head(5)","13a177cf":"#Remove the canceled transactions from the dataset\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]","7374bd3a":"#The total amount of each invoice and we create that column just multiply 'Price' and 'Quantity'\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]","3cfca667":"#Determining the analysis date for the recency \ndf[\"InvoiceDate\"].max()\ntoday_date = dt.datetime(2011, 12, 11)\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                     'Invoice': lambda num: num.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\nrfm.columns=[\"Recency\",\"Frequency\",\"Monetary\"]\nrfm = rfm[rfm[\"Monetary\"] > 0]\nrfm.describe().T","75c2fa05":"#Date from customer's last purchase.The nearest date gets 5 and the furthest date gets 1.\nrfm[\"recency_score\"] = pd.qcut(rfm['Recency'], 5, labels=[5, 4, 3, 2, 1])\n# Total number of purchases.The least frequency gets 1 and the maximum frequency gets 5.\nrfm[\"frequency_score\"] = pd.qcut(rfm[\"Frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n#Total spend by the customer.The least money gets 1, the most money gets 5.\nrfm[\"monetary_score\"]= pd.qcut(rfm[\"Monetary\"],5,labels=[1,2,3,4,5])\nrfm.head()","c2076d54":"#RFM - The value of 2 different variables that were formed was recorded as a RFM_SCORE\nrfm[\"RFM_SCORE\"] = (rfm[\"recency_score\"].astype(str) + rfm[\"frequency_score\"].astype(str))","e582b92c":"seg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\nrfm.head()","3ddf8b50":"rfm[[\"segment\", \"Recency\",\"Frequency\",\"Monetary\"]].groupby(\"segment\").agg([\"mean\",\"count\",\"max\"]).round()","3e87e49e":"# **Reviews About the Segments**","10f2ede1":"# **Answering Some Questions About Data**","b3efb421":"# **What is RFM Analysis?**\nRFM analysis is a technique used to categorize customers according to their purchasing behaviour.\n\n# **How This Calculate?**\n\n**Recency:** This is the date when the customer made the last purchase. \nIt is calculated by subtracting the customer's last shopping date from the analysis date.\n\n**Frequency:** This is the total number of purchases of the customer. In a different way, it gives the frequency of purchases made by the customer.\n\n**Monetary:** It is the total monetary value spent by the customer.\n\n# **The Business Problem**\nAn e-commerce company wants to segment its customers and determine marketing strategies according to these segments.\nFor example, it is desirable to organize different campaigns to retain customers who are very profitable for the company, and different campaigns for new customers.\n\n# **Data Set**\nThe Online Retail II data set includes the sales of an online retail store based in the UK between dec1\/12\/2009 and 09\/12\/2011. The product catalog of this company includes souvenirs. The vast majority of the company's customers are corporate customers.\n\n# **Variables**\n**InvoiceNo:** Invoice number. A unique number for each transaction. If it starts with C which means cancelled operations.\n\n**StockCode:** Product code. A unique number for each product.\n\n**Description:** Product name.\n\n**Quantity:** It refers to how many of the products in the invoices have been sold.\n\n**InvoiceDate:** Invoice date.\n\n**UnitPrice:** Product price (pound)\n\n**CustomerID:** Unique customer number.\n\n**Country:** The name of the country where the customer lives.\n","58fa46de":"# **Data Preparation and Preprocessing**","bdec73de":"**Cant Loose**\n\n* There are 63 people in this segment.\n* Shopping was done on average 133 days ago.\n* The frequency of shopping is 8, the total number of purchases is 63.\n* A total of \u00a3102,54 has been spent.\n\n**Action:** Even if the last purchase was made 133 days, the total number of purchases is high. It is a group of customers who do not come for a long time, but also make a lot of purchases when they come. We can analyze the process by sending surveys to these customers, and we can be changed by sharing personalized campaigns by e-mail.","6222ea5d":"# **Segmenting Customers Using RFM Score**","d8351eb4":"# **Interpretation of Descriptive Statistics of Segments**","11540b01":"# **Converting RFM Scores to Single Variable**\n","73ad6e4e":"**Need Attention**\n\n* There are 187 people in this segment.\n* Shopping was done on average 52 days ago.\n* The frequency of shopping is 2, the total number of purchases is 3.\n* A total of \u00a312,602 has been spent.\n\n**Action:** These customers need to be reminded of the brand.So, short-term discounts can be made to remind these customers of our brand and allow them to shop again.\n","64785e80":"# **Calculating of RFM Metrics**"}}