{"cell_type":{"35ddab84":"code","9048b2b4":"code","12bc4cc6":"code","194ee061":"code","cbe57ea1":"code","f4645002":"code","4aeea02c":"code","7cbc3b1d":"code","0f71e315":"code","ba1efc38":"code","1b7c1613":"code","738b15c2":"code","9e5fad54":"code","5e596a31":"code","378f1f1d":"code","3d125bef":"code","c80a3667":"code","2ddf1c66":"code","fc4a7139":"code","593d7322":"code","a9dbf1a1":"code","2fe19ba6":"code","0208f317":"code","5f36a15f":"markdown","de6ec830":"markdown","a28b8504":"markdown","087c586c":"markdown","3de8a03b":"markdown","11c8b0b8":"markdown","094640d5":"markdown","4e5c4c71":"markdown","93a23099":"markdown","aed0707c":"markdown","4ba5434c":"markdown","d29dce63":"markdown","6074b63f":"markdown","79606eaf":"markdown","f476d2fb":"markdown","629581e9":"markdown","511e6c04":"markdown","145f49c6":"markdown","ba2c347d":"markdown","90bb5cb5":"markdown","0ff72a40":"markdown","d3de361f":"markdown"},"source":{"35ddab84":"import pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9048b2b4":"app1=pd.read_csv(\"..\/input\/playstore-analysis\/googleplaystore.csv\");app1.head()","12bc4cc6":"print(app1.dtypes,app1.isnull().sum())\napp1.shape","194ee061":"app1.dropna(inplace=True);print(app1.shape)\n","cbe57ea1":"print(app1.Size.value_counts())\n\ndef change(Size):\n    if 'M'in Size:\n        x=Size[:-1]\n        x=float(x)*1000\n        return x\n\n    elif 'k'in Size:\n        x=Size[:-1]\n        x=float(x)\n        return x\n    \n    else: return None\n\n    \napp1.Size=app1.Size.map(change);app1.Size.value_counts()\n\n    ","f4645002":"print(app1.Size.isnull().sum())\napp1.Size.fillna(method='pad',inplace=True)\nprint(app1.Size.isnull().sum())","4aeea02c":"app1.Reviews=app1.Reviews.astype('float')\n\nprint(app1.Installs.value_counts()[:5])\napp1.Installs=app1.Installs.map(lambda x:x.replace(',','').replace('+',''))\nprint(app1.Installs.value_counts()[:5])\napp1.Installs=app1.Installs.astype('float')\n\nprint(app1.Price.value_counts()[:5])\napp1.Price=app1.Price.map(lambda x:x.replace('$',''))\nprint(app1.Price.value_counts()[:5])\napp1.Price=app1.Price.astype('float')\n\nprint(app1.dtypes)\n                          ","7cbc3b1d":"print(len(app1[app1.Rating>5]))\nprint(len(app1[app1.Reviews>app1.Installs]))\nprint(len(app1[(app1.Type=='free')&(app1.Price>0)]))\n\napp1=app1[app1.Reviews<app1.Installs].copy();print(app1.shape)\n\nprint(len(app1[app1.Price>200]))\napp1=app1[app1.Price<200].copy();print(app1.shape)\n\nprint(len(app1[app1.Reviews>=2000000]))\napp1=app1[app1.Reviews<=2000000].copy();print(app1.shape)\n\nprint(app1.Installs.quantile([.25,.50,.75,.90,.99]))\nprint(len(app1[app1.Installs>= 10000000]))\napp1=app1[app1.Installs<=10000000].copy();print(app1.shape)","0f71e315":"print(app1.hist(['Rating','Reviews','Size','Installs','Price'],figsize=(12,8),xlabelsize=12,ylabelsize=12))\n","ba1efc38":"app1.boxplot(fontsize=15)\n","1b7c1613":"app1.Reviews=app1.Reviews.apply(func=np.log1p)\napp1.Installs=app1.Installs.apply(func=np.log1p)\n\napp1.hist(column=['Reviews','Installs'])\n","738b15c2":"plt.figure(figsize=(11,8))\nsns.set_style(style='whitegrid',)\nsns.set(font_scale=1.2)\nsns.scatterplot(app1.Price,app1.Rating,hue=app1.Rating)\n\nplt.show()","9e5fad54":"plt.figure(figsize=(11,8))\nsns.scatterplot(app1.Size,app1.Rating,hue=app1.Rating)","5e596a31":"plt.figure(figsize=(11,8))\nsns.scatterplot(app1.Reviews,app1.Rating,hue=app1.Rating)","378f1f1d":"plt.figure(figsize=(12,8.27))\nsns.boxplot(app1['Content Rating'],app1.Rating)","3d125bef":"plt.figure(figsize=(25,8.27))\nsns.boxplot(app1.Category,app1.Rating)\nplt.xticks(fontsize=18,rotation='vertical')\nplt.yticks(fontsize=18)\nplt.xlabel(\"Category\",fontsize=20)\nplt.ylabel(\"Rating\",fontsize=20)","c80a3667":"app1.drop([\"App\", \"Last Updated\", \"Current Ver\", \"Android Ver\"], axis=1, inplace=True);print(app1.shape)\napp1=pd.get_dummies(app1,drop_first=True);print(app1.columns)\n","2ddf1c66":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nlinreg=LinearRegression()\nfrom statsmodels.api import OLS\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error as ms","fc4a7139":"X=app1.iloc[:,1:]\ny=app1.iloc[:,:1]\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.30, random_state=1)\nX_train.shape,X_test.shape","593d7322":"Model=linreg.fit(X_train, y_train)\npredict=linreg.predict(X_test)\n\ny_test=np.array(y_test)\npredict=np.array(predict)\n\na=pd.DataFrame({'Actual':y_test.flatten(),'Predicted':predict.flatten()});a.head(10)\n","a9dbf1a1":"fig=a.head(25)\nfig.plot(kind='bar',figsize=(10,8))","2fe19ba6":"results=OLS( y_train,X_train).fit()\nresults.summary()","0208f317":"print('R2_Score=',r2_score(y_test,predict))\nprint('Root Mean Squared Error=',np.sqrt(ms(y_test,predict)))\nprint('Prediction Error Percentage is',round((0.50\/np.mean(y_test))*100))","5f36a15f":"![1657557.jpg](attachment:1657557.jpg)","de6ec830":"# Summary Interpretation","a28b8504":"# Outlier Correction\n\n### It seems from the histogram(below) the variables has some skewness and from boxplot it is evident that it has outliers too...Lets correct it by applying log ","087c586c":"# Loading Required Libraries","3de8a03b":"### No clear pattern. There are fewer low rated apps among the popular ones (maybe poor ones won\u2019t get so popular), after a certain point, the rating does not depend on the popularity.","11c8b0b8":"# Read Data & Checking NA's\n","094640d5":"### Next, we split 70% of the data to the training set while 30% of the data to test set using below code.","4e5c4c71":"# Bivariate analysis: \n \n### Let\u2019s look at how the available predictors relate to the variable of interest, i.e., our target variable rating. Make scatter plots (for numeric features) and box plots (for character features) to assess the relations between rating and the other features.","93a23099":"> #### Kindly Share your Comments for Improvements","aed0707c":"### While there is not a very clean pattern, it does look that the higher priced apps have better rating. Although, there are not a lot of apps which are high priced, but the pattern is apparent.","4ba5434c":"# Data Cleaning\n\n### Variables seem to have incorrect type and inconsistent formatting,also Size column has sizes in Kb as well as Mb,Multiply the value by 1,000, if size is mentioned in Mb","d29dce63":"### * Average rating should be between 1 and 5 as only these values are allowed on the play store. Drop the rows that have a value outside this range.\n \n### * Reviews should not be more than installs as only those who installed can review the app. If there are any such records, drop them.\n\n### * For free apps (type = \u201cFree\u201d), the price should not be >0. Drop any such rows.","6074b63f":"### Building Model & Predicting the Ratings, also checking the difference between the actual value and predicted value.","79606eaf":"# Model Summary","f476d2fb":"# Deleting Unnecessary Variables","629581e9":"### * A large F-statistic will corresponds to a statistically significant p-value (p < 0.05). In the data, the F-statistic equals 3545. that leads to less P_Value which says that at least one of the predictor variables is significantly related to the outcome variable.\n\n### * From the output above, the adjusted R2 is 0.986, meaning that the observed and the predicted outcome values are highly correlated, which is very good.\n\n### * The prediction error RMSE (Root Mean Squared Error), representing the average difference between the observed known outcome values in the test data and the predicted outcome seems to be 0.50 which is very good thus represents the error rate of 12%\n\n","511e6c04":"### Reviews is a numeric field that is loaded as a string field.Convert it to numeric \n### Installs field is currently stored as string and has values like 1,000,000+, remove \u2018+\u2019, \u2018,\u2019 from the field, convert it to integer \n### Price field is a string and has $ symbol. Remove \u2018$\u2019 sign, and convert it to numeric","145f49c6":"### Apps around Health & Fitness, Books and Reference, Events seem to have the highest median ratings.","ba2c347d":"# Linear Regresssion Model","90bb5cb5":"### While the median rating for most others is similar, the rating for \u201cAdults Only 18+\u201d is the highest.","0ff72a40":"### Again, not a very clean pattern, but it does look like heavier apps are better rated.","d3de361f":"### In Below figure we can observe here that the model has returned pretty good prediction results."}}