{"cell_type":{"fed10f85":"code","739978e3":"code","b97a1e97":"code","413faba0":"code","14afc021":"code","8d6ab8bf":"code","ee61d692":"code","f09ecb52":"code","ad288768":"code","f28455b3":"code","524980d9":"code","a225e904":"code","1059e969":"code","7ffa5e9a":"code","2dcae479":"code","36784587":"code","6a716ad1":"code","c68ac114":"code","697e87ef":"code","15610f97":"code","eff9d013":"code","4794936a":"code","38184bde":"code","986f132e":"code","601f8a18":"code","6add3833":"code","59306e87":"code","a8206bd6":"code","05052bff":"code","2b0a3e26":"code","8a72c3a0":"code","5125ff79":"code","bce4ad12":"code","aba9a7e7":"code","39ec0327":"code","a6a66252":"code","f29831aa":"code","a350b48c":"code","b20e72d7":"code","a6f9b784":"code","b834bc68":"code","5540e4ef":"code","9931dbe5":"code","202cfa06":"code","3266957c":"markdown","f40b1527":"markdown","7a268fb7":"markdown","fd54e3fc":"markdown","e19b442c":"markdown","98a04db1":"markdown","8c60bb3b":"markdown","67cb19af":"markdown","6055d382":"markdown","cdab95ac":"markdown","c15b1d79":"markdown","0d905366":"markdown","c49fd1ff":"markdown","bd8eb451":"markdown","024ee331":"markdown","b3bed3a5":"markdown","c72c5448":"markdown","349c49b1":"markdown","3f0a1eaf":"markdown","aaadee65":"markdown","b4c9cc1b":"markdown","f165a77e":"markdown","d0f77cc2":"markdown","5e17e06b":"markdown","879e6e8f":"markdown","15e9fab3":"markdown","0f8996de":"markdown","7f2ac5b6":"markdown","49f57a83":"markdown","d2124804":"markdown","bc9c8a9e":"markdown","4312fcf7":"markdown","7e24d2a3":"markdown","1f77b15d":"markdown","5ff1c76a":"markdown","238bc96c":"markdown","ce73c12f":"markdown","ce965f38":"markdown","6bf33a69":"markdown","e7539640":"markdown","184a19c5":"markdown","4dc583eb":"markdown","03751747":"markdown","3a631729":"markdown","8f698e5c":"markdown","aeed1453":"markdown","d7e7175f":"markdown","2ba87f92":"markdown","41c1598d":"markdown","d46d2c18":"markdown","8545f69a":"markdown","e2b251ec":"markdown","deb7c97e":"markdown","e7ccfce9":"markdown","ecddf286":"markdown","89726bf4":"markdown","f14828cb":"markdown","205615b1":"markdown","32901172":"markdown","f5f95885":"markdown"},"source":{"fed10f85":"import numpy as np # linear algebra\nimport pandas as pd # data processing \nimport seaborn as sns # to plot good graphs\nimport matplotlib.pyplot as plt # to render our plots and set some parameters of the box\nimport squarify \n\npath = \"..\/input\/\" # seting the Kaggle path \n\n#Importing the datasets\n# First I will work with a multiple Choice Responses that I think is more insightful \ndf_multiChoice = pd.read_csv(path + 'multipleChoiceResponses.csv', low_memory=False, header=[0,1])\n#df_freedom = pd.read_csv(path + 'freeFormResponses.csv', low_memory=False, header=[0,1])","739978e3":"# Formating the DF\ndf_multiChoice.columns = df_multiChoice.columns.map('_'.join)\n\n# Printing the data shape\nprint('The Kaggle Survey has {} rows and {} columns.'.format(df_multiChoice.shape[0], df_multiChoice.shape[1]))","b97a1e97":"# seting the function to show \ndef knowningData(df, data_type=object, limit=3): #seting the function with df, \n    n = df.select_dtypes(include=data_type) #selecting the desired data type\n    for column in n.columns: #initializing the loop\n        print(\"#########################################################\")\n        print(\"Name of column \", column, ': \\n', \"Uniques: \", df[column].unique()[:limit], \"\\n\",\n              \" | ## Total nulls: \", (round(df[column].isnull().sum() \/ len(df[column]) * 100,2)),\n              \" | ## Total unique values: \", df.nunique()[column]) #print the data and % of nulls)\n        print(\"Percentual of top 5 of: \", column)\n        print(round(df[column].value_counts()[:5] \/ df[column].value_counts().sum() * 100,2))","413faba0":"# Calling \nknowningData(df_multiChoice)","14afc021":"#Seting size to figure that we will plot\nplt.figure(figsize=(10,5))\n\nsns.countplot(df_multiChoice[\"Q1_What is your gender? - Selected Choice\"]) #ploting the first Question\nplt.title(\"Question 1 - What is your gender?\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Genders in Survey\", fontsize=16) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=16) # Adding y label and seting the size\n\n# printing the descriptive values in % of respondents\n\nprint(\"Question 1 - What is your gender? \")\nprint(round(df_multiChoice['Q1_What is your gender? - Selected Choice'].value_counts() \\\n            \/ len(df_multiChoice['Q1_What is your gender? - Selected Choice']) * 100,2))\n\n#rendering the graph\nplt.show()","8d6ab8bf":"#Seting size to figure that we will plot\nplt.figure(figsize=(10,5))\n\nsns.countplot(df_multiChoice[\"Q2_What is your age (# years)?\"], # ploting the second question\n              order=['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', #seting order to our data\n                     '45-49', '50-54', '55-59','60-69', '70-79', '80+']) \nplt.title(\"Question 2 - What is your age (# years)\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Age Range\", fontsize=16) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=16) # Adding y label and seting the size\n\n#rendering the plot\nplt.show()","ee61d692":"#Doing some treatment to the data, to a best visual when we plot it\n# Modifying some names to a short \ndf_multiChoice.loc[df_multiChoice[\"Q3_In which country do you currently reside?\"] == \n                   'United Kingdom of Great Britain and Northern Ireland', \"Q3_In which country do you currently reside?\"] = \"UK & N. Ireland\"\ndf_multiChoice.loc[df_multiChoice[\"Q3_In which country do you currently reside?\"] == \n                   'United States of America', \"Q3_In which country do you currently reside?\"] = \"USA\"\ndf_multiChoice.loc[df_multiChoice[\"Q3_In which country do you currently reside?\"] == \n                   'I do not wish to disclose my location', \"Q3_In which country do you currently reside?\"] = \"Not set\"\n\n# Doing the count of the columns and liming it to 15\ncountrys = df_multiChoice['Q3_In which country do you currently reside?'].value_counts()\n\n#Seting size to figure that we will plot\nplt.figure(figsize=(14,6))\n\n# Now I will plot the Countrys \nsns.countplot(df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                             .isin(countrys[:15].index.values)]['Q3_In which country do you currently reside?'], \n              order=countrys[:15].index\n             )\nplt.title(\"Question 3 - In which country do you currently reside?\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Countrys\", fontsize=16) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=16) # Adding y label and seting the size\nplt.xticks(rotation=45) # Adjust the xticks, rotating the labels\n\nplt.show()","f09ecb52":"\ncrosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q2_What is your age (# years)?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:15].index.values)][\"Q3_In which country do you currently reside?\"], normalize= \"index\")\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",    # select the bar to plot the count of categoricals\n                 figsize=(16,7), # adjusting the size of graphs\n                 stacked=True)   # code to unstack\n\nplt.title(\"Age distribuition by Country\", fontsize=22) # adjusting title and fontsize\nplt.ylabel(\"Age Distribuition (in %)\", fontsize=19) # adjusting y label and fontsize\nplt.xlabel(\"Country Names\", fontsize=19) # adjusting x label and fontsize\nplt.legend(title=\"% of time exploring model insights\") # \nplt.xticks(rotation=0) # seting the rotation to zero\nplt.legend(title=\"Age Range\", # Some parameters to legend of our graphs\n          loc='best', bbox_to_anchor=(1, .9), #seting location and bbox anchor\n          fancybox=True, shadow=True)\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF AGE DISTRIBUITION BY COUNTRYS: \")\ncountry_repayment = [\"Q3_In which country do you currently reside?\", \n                     \"Q2_What is your age (# years)?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:25].index.values)][country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], margins=True, margins_name=\"Totals\",\n                 rownames=[\"Country's\"],colnames=[\"Age of Kagglers\"]),2).drop(\"Totals\", axis=0).style.background_gradient(cmap = cm)","ad288768":"# changing the name to get a short name in our crosstab\ndf_multiChoice.rename(columns={\n    \"Q46_Approximately what percent of your data projects involve exploring model insights?\":\n    \"Q46_Approx percent involved exploring model insights?\"}, \n                      inplace=True)\n\ncrosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q46_Approx percent involved exploring model insights?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[\"Q2_What is your age (# years)?\"], normalize= \"index\")\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",    # select the bar to plot the count of categoricals\n                 figsize=(16,6), # adjusting the size of graphs\n                 stacked=False)   # code to unstack \nplt.title(\"The percent of your data projects involve exploring model insights by Year of Users\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"What is the age (# years)\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"% of Exploring Model Insights\", fontsize=19) # adjusting y label and fontsize\nplt.legend(title=\"% of time exploring model insights\") # \nplt.xticks(rotation=0) # seting the rotation to zero\n\n# Some parameters to legend of our graphs\nplt.legend(title=\"% of time exploring model insights\", \n          loc='upper right', bbox_to_anchor=(.7, .9),\n          ncol=4, fancybox=True, shadow=True)\n\n\nplt.show() # rendering\n\ncountry_repayment = [\"Q2_What is your age (# years)?\",\n                     \"Q46_Approx percent involved exploring model insights?\" ] #seting the desired \n\nprint(\"DESCRIPTIVE VALUES BY EACH AGE RANGE AND % OF TIME CONSUMING: \")\ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], margins=True, margins_name=\"Totals\",\n                  rownames=[\"Age of Kagglers\"],colnames=[\"% time exploring insights\"]),2).drop(\"Totals\", axis=0).style.background_gradient(cmap = cm)","f28455b3":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q46_Approx percent involved exploring model insights?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:15].index.values)][\"Q3_In which country do you currently reside?\"], \n                           normalize= \"index\")\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",    # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=False)   # code to stack \nplt.title(\"Time exploring models to insights \", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Country Names\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"% of Exploring Model Insights\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"% of time exploring model insights\", \n          loc='upper right', bbox_to_anchor=(.97, 1.02),\n          ncol=11, fancybox=True, shadow=False)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF COUNTRYS BY TIME CONSUMING EXPLORING INSIGHTS IN MODELS: \")\n\ncountry_repayment = [\"Q3_In which country do you currently reside?\", \n                     \"Q46_Approx percent involved exploring model insights?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:25].index.values)][country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]]),2).style.background_gradient(cmap = cm)","524980d9":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q1_What is your gender? - Selected Choice\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:15].index.values)][\"Q3_In which country do you currently reside?\"], \n                           normalize= \"index\")\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",    # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Genders Distribuition by TOP 15 Country's\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Country Names\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"% each Gender by Country\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"Gender of DS\", \n          loc='best', bbox_to_anchor=(1, .9),\n          ncol=1, fancybox=True, shadow=True)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF GENDER BY COUNTRYS: \")\n\ncountry_repayment = [\"Q3_In which country do you currently reside?\", \n                      \"Q1_What is your gender? - Selected Choice\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:25].index.values)][country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], normalize=\"index\"),4).style.background_gradient(cmap = cm)","a225e904":"country_repayment = [\"Q2_What is your age (# years)?\", \n                     \"Q1_What is your gender? - Selected Choice\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], normalize=\"index\"),2).style.background_gradient(cmap = cm)","1059e969":"import random\n\nnumber_of_colors = 20 # total number of different collors that we will use\n\n# Here I will generate a bunch of hexadecimal colors \ncolor = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n             for i in range(number_of_colors)]","7ffa5e9a":"#Changing the name of some values in our category's to a short name\ndf_multiChoice.loc[df_multiChoice['Q4_What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] == \n                   'Some college\/university study without earning a bachelor\u2019s degree', \n                   'Q4_What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] = \"Some college-No Bachelor's\"\n\ndf_multiChoice.loc[df_multiChoice['Q4_What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] == \n                   'No formal education past high school', \n                   'Q4_What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] = 'No formal High S.'\n\n# changing the name to get a short name in our crosstab\ndf_multiChoice.rename(columns={\n    \"Q4_What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\":\n    \"Q4_Highest formal education or plan to within the next 2 years?\"}, \n                      inplace=True)\n\nEducOrder = ['I prefer not to answer', 'No formal High S.', 'Professional degree', \n             \"Some college-No Bachelor's\", 'Bachelor\u2019s degree','Master\u2019s degree','Doctoral degree']","2dcae479":"\nFormEduc = df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"].value_counts() #counting the values of Country\n\nprint(\"Description most frequent countrys: \")\nprint(FormEduc[:15]) #printing the top most frequent\n\ncountry_tree = round((df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"].value_counts()[:30] \\\n                       \/ len(df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"]) * 100),2)\n\nplt.figure(figsize=(15,7))\ng = squarify.plot(sizes=country_tree.values, label=country_tree.index, \n                  value=country_tree.values,\n                  alpha=.4, color=color)\ng.set_title(\"Formal Education Badge of Users - % size of total\",fontsize=20)\ng.set_axis_off()\nplt.show()","36784587":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:15].index.values)][\"Q3_In which country do you currently reside?\"], \n                           normalize= \"index\").reindex(columns=EducOrder) # Seting the correct order to crosstab\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"barh\",    # select the bar to plot the count of categoricals\n                 figsize=(9,15), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Education Badges by TOP 15 Country's\", fontsize=22) # adjusting title and fontsize\nplt.ylabel(\"Country Names\", fontsize=19) # adjusting y label and fontsize\nplt.xlabel(\"% each Badge by Country\", fontsize=19) # adjusting x label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"Education Badge\", \n          loc='best', bbox_to_anchor=(1, .9),\n          ncol=1, fancybox=True, shadow=True)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF BADGES BY COUNTRYS: \")\n\ncountry_repayment = [\"Q3_In which country do you currently reside?\", \n                     \"Q4_Highest formal education or plan to within the next 2 years?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[df_multiChoice[\"Q3_In which country do you currently reside?\"]\\\n                                                .isin(countrys[:25].index.values)][country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], normalize=\"index\"),4).reindex(columns=EducOrder).style.background_gradient(cmap = cm)","6a716ad1":"crosstab_eda = pd.crosstab(index=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           columns=df_multiChoice[\"Q46_Approx percent involved exploring model insights?\"], \n                           normalize= \"index\").reindex(index=EducOrder)\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",    # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=False)   # code to stack \nplt.title(\"Time exploring models to insights by Formal Education Badge's \", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Formal Education Badge Name\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"% of Time consuming to find insights\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=15) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"% of time exploring model insights\", \n          loc='upper right', bbox_to_anchor=(1, 1.01),\n          ncol=4, fancybox=True, shadow=False)\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF COUNTRYS BY TIME CONSUMING EXPLORING INSIGHTS IN MODELS: \")\nprint(\"Using index as normalizer\")\ncountry_repayment = [\"Q4_Highest formal education or plan to within the next 2 years?\", \n                     \"Q46_Approx percent involved exploring model insights?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], normalize=\"index\"),2).reindex(index=EducOrder).style.background_gradient(cmap = cm)","c68ac114":"# changing the name to get a short name in our crosstab\ndf_multiChoice.rename(columns={\n    'Q6_Select the title most similar to your current role (or most recent title if retired): - Selected Choice':\n    'Q6_The title most similar to your current role'}, \n                      inplace=True)","697e87ef":"\nTitleRole = df_multiChoice['Q6_The title most similar to your current role'].value_counts() #counting the values of Country\n\nprint(\"Description most frequent Title Role: \")\nprint(TitleRole[:10]) #printing the top most frequent\n\ncountry_tree = round((df_multiChoice['Q6_The title most similar to your current role'].value_counts()[:15] \\\n                       \/ len(df_multiChoice['Q6_The title most similar to your current role']) * 100),2)\n\nplt.figure(figsize=(15,7))\ng = squarify.plot(sizes=country_tree.values, label=country_tree.index, \n                  value=country_tree.values,\n                  alpha=.4, color=color)\ng.set_title(\"TOP 15 title most similar to current role of Kaggle Users\",fontsize=20)\ng.set_axis_off()\nplt.show()","15610f97":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice['Q6_The title most similar to your current role'], \n                           normalize= \"index\")\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"barh\",    # select the bar to plot the count of categoricals\n                 figsize=(12,18), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Title of current role by Education Badges\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"% of each Educational Badge\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Title the most represents the current role\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"Formal Education\", \n          loc='best', bbox_to_anchor=(1, .9),\n          ncol=1, fancybox=True, shadow=True)\n\nplt.show() # rendering\n\ncountry_repayment = ['Q6_The title most similar to your current role',\n                     \"Q4_Highest formal education or plan to within the next 2 years?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]],\n                 rownames=[\"Title Role\"],\n                 colnames=[\"Formal Education\"],\n                 margins=True,\n                 margins_name = \"Total\"),2).drop(\"Total\", axis=0).style.background_gradient(cmap = cm)","eff9d013":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q46_Approx percent involved exploring model insights?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice['Q6_The title most similar to your current role'], \n                           normalize= \"index\")\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"barh\",    # select the bar to plot the count of categoricals\n                 figsize=(12,18), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Current role by Time exploring Insights\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"% in time exploring (in %)\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Title the most represents the current role\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"% Time Exploring Insights\", \n          loc='best', bbox_to_anchor=(1, .9),\n          ncol=1, fancybox=True, shadow=True)\n\nplt.show() # rendering\n\ncountry_repayment = ['Q6_The title most similar to your current role',\n                     \"Q46_Approx percent involved exploring model insights?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], \n                  margins=True, margins_name=\"Total\",\n                  rownames=[\"Title Role\"],colnames=[\"Time Exploring Insights\"]),2).drop(\"Total\", axis=0).style.background_gradient(cmap = cm)","4794936a":"country_repayment = ['Q6_The title most similar to your current role',\n                     \"Q2_What is your age (# years)?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[country_repayment[0]],\\\n                                 df_multiChoice[country_repayment[1]], \n                  rownames=[\"Title Role\"], colnames=[\"Age of Kagglers\"],\n                  margins=True, margins_name=\"Totals\"),2).drop(\"Totals\", axis=0).style.background_gradient(cmap = cm)","38184bde":"import squarify\n ## Getting the percentual of each category\nFormEduc = round(df_multiChoice[\"Q17_What specific programming language do you use most often? - Selected Choice\"].value_counts() \/\\\n                 df_multiChoice[\"Q17_What specific programming language do you use most often? - Selected Choice\"].value_counts().sum() * 100,2) #counting the values of Country\n\nprint(\"Description most frequent countrys: \")\nprint(FormEduc[:10]) #printing the top most frequent\n\ncountry_tree = round((df_multiChoice[\"Q17_What specific programming language do you use most often? - Selected Choice\"].value_counts()[:10] \\\n                       \/ df_multiChoice[\"Q17_What specific programming language do you use most often? - Selected Choice\"].value_counts().sum() * 100),2)\n\nplt.figure(figsize=(15,7))\ng = squarify.plot(sizes=country_tree.values, label=country_tree.index, \n                  value=country_tree.values,\n                  alpha=.4, color=color)\ng.set_title(\"Formal Education Badge of Users - % size of total\",fontsize=20)\ng.set_axis_off()\nplt.show()","986f132e":"Q17_Q4 = [\"Q17_What specific programming language do you use most often? - Selected Choice\",\n                     \"Q4_Highest formal education or plan to within the next 2 years?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[Q17_Q4[0]],\\\n                                 df_multiChoice[Q17_Q4[1]], normalize='index'),3).style.background_gradient(cmap = cm)","601f8a18":"df_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"0% of my time\", \n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"0%\"\ndf_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"1% to 25% of my time\", \n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"1% to 25%\"\ndf_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"25% to 49% of my time\", \n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"25% to 49%\"\ndf_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"50% to 74% of my time\", \n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"50% to 74%\"\ndf_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"75% to 99% of my time\",\n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"75% to 99%\"\ndf_multiChoice.loc[df_multiChoice['Q23_Approximately what percent of your time at work or school is spent actively coding?'] == \"100% of my time\", \n                   \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] = \"100%\"","6add3833":"import squarify\n\nTimeCoding = df_multiChoice[\"Q23_Approximately what percent of your time at work or school is spent actively coding?\"].value_counts() #counting the values of Country\n\nprint(\"Description most frequent: \")\nprint(TimeCoding[:10]) #printing the top most frequent\n\ncountry_tree = round((df_multiChoice[\"Q23_Approximately what percent of your time at work or school is spent actively coding?\"].value_counts()[:10] \\\n                       \/ df_multiChoice[\"Q23_Approximately what percent of your time at work or school is spent actively coding?\"].value_counts().sum() * 100),2)\n\nplt.figure(figsize=(15,7))\ng = squarify.plot(sizes=country_tree.values, label=country_tree.index, \n                  value=country_tree.values,\n                  alpha=.4, color=color)\ng.set_title(\"Approximately what percent of your time is spent actively coding?\",fontsize=20)\ng.set_axis_off()\nplt.show()","59306e87":"order_time =['0%', '1% to 25%', '25% to 49%', '50% to 74%', '75% to 99%', '100%']\n\nEducOrder = ['I prefer not to answer', 'No formal High S.', 'Professional degree', \n             \"Some college-No Bachelor's\", 'Bachelor\u2019s degree','Master\u2019s degree','Doctoral degree']\n\ncrosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           # at this line, I am using the isin to select just the top 5 of browsers\n                           index=df_multiChoice[\"Q23_Approximately what percent of your time at work or school is spent actively coding?\"], \n                           normalize= \"index\").reindex(columns=EducOrder)\n\ncrosstab_eda = crosstab_eda.reindex(index=order_time)\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",  # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=False)   # code to stack \nplt.title(\"Time coding by Formal Education Badge's \", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"% of time expent coding\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Prob of Formal Education\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"% time coding\", \n          loc='best', bbox_to_anchor=(1, 1.01),\n          ncol=1, fancybox=True, shadow=False)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF COUNTRYS BY TIME CONSUMING EXPLORING INSIGHTS IN MODELS: \")\nprint(\"Using columns as normalizer\")\nQ4_Q23 = [\"Q4_Highest formal education or plan to within the next 2 years?\", \n                     \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"] #seting the desired \n\ncm = sns.light_palette(\"green\", as_cmap=True) #seting the colormap of our table\nround(pd.crosstab(df_multiChoice[Q4_Q23[1]],\\\n                             df_multiChoice[Q4_Q23[0]],  \n                  margins=True, margins_name=\"Total\",\n                  rownames=[\"Percent Time Coding\"],\n                  colnames=[\"Formal Education\"]),2)\\\n.reindex(index=order_time,columns=EducOrder)\\\n       .style.background_gradient(cmap = cm)","a8206bd6":"def CleaningToPlot(df, column):\n    question = df.filter(like=(column))\n    range_cols = len(question.columns)\n    mapping = dict()\n    for i in range(range_cols):\n        old_index = question.columns[i]\n        string = column + '_part_' + str(i+1)\n        mapping.update({old_index : string})\n    question = question.rename(columns=mapping)\n    return question","05052bff":"Q15 = CleaningToPlot(df_multiChoice, \"Q15\")","2b0a3e26":"#Dict to get short names to show the information\nTypeDict = {\"Audio Data\":\"Audio\", \"Categorical Data\":\"Categorical\", \"Genetic Data\":\"Genetic\",\n            \"Geospatial Data\": \"Geospatial\", \"Image Data\":\"Image\", \"Numerical Data\":\"Numerical\",\n            \"Sensor Data\":\"Sensor\", \"Tabular Data\":\"Tabular\", \"Text Data\":\"Text\", \n            \"Time Series Data\":\"Time Series\", \"Video Data\":\"Video\"}\n\ndf_multiChoice[\"Q32_What is the type of data that you currently interact with most often at work or school? - Selected Choice\"].replace(TypeDict, inplace=True)","8a72c3a0":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           index=df_multiChoice['Q32_What is the type of data that you currently interact with most often at work or school? - Selected Choice'], \n                           normalize= \"columns\").reindex(columns=EducOrder)\n\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",  # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=False)   # code to stack \nplt.title(\"Data Types by Formal Education\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Data Types\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Prob of Formal Education\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"% time coding\", \n           loc='best', bbox_to_anchor=(1, 1.01),\n           ncol=1, fancybox=True, shadow=False)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE VALUES OF DATA TYPES BY FORMAL EDUCATION:  \")\n\nQ32_Q4 = ['Q32_What is the type of data that you currently interact with most often at work or school? - Selected Choice', \n          \"Q4_Highest formal education or plan to within the next 2 years?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\n\nround(pd.crosstab(df_multiChoice[Q32_Q4[0]], \n                  df_multiChoice[Q32_Q4[1]],\n                 rownames=[\"Most Often Data Type\"], colnames=[\"Formal Education\"]\n                 ),2).reindex(columns=EducOrder).style.background_gradient(cmap = cm)","5125ff79":"print(\"DESCRIPTIVE VALUES OF DATA TYPES BY TITLE OF CURRENT ROLE: \")\n\nQ32_Q6 = ['Q32_What is the type of data that you currently interact with most often at work or school? - Selected Choice', \n          'Q6_The title most similar to your current role']\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\n\nround(pd.crosstab(df_multiChoice[Q32_Q6[1]], \n                  df_multiChoice[Q32_Q6[0]],\n                 rownames=[\"Title Role\"], colnames=[\"Data Types\"],\n                 margins=True, margins_name=\"Totals\"),2).drop(\"Totals\", axis=0).style.background_gradient(cmap = cm)","bce4ad12":"salaryDict = {'0-10,000':'0-10','10-20,000':'10-20','20-30,000':'20-30', '30-40,000':'30-40', '40-50,000':'40-50', \n              '50-60,000':'50-60', '60-70,000':'60-70', '70-80,000':'70-80','80-90,000':'80-90',\n              '90-100,000':'90-100','100-125,000':\"100-125\",'125-150,000':'125-150','150-200,000':'150-200',\n              '200-250,000':'200-250','250-300,000':'250-300','300-400,000':'300-400',\n              '400-500,000':'400-500', '500,000+':'500+','I do not wish to disclose my approximate yearly compensation': \"not-inf\" }\n              \nRevenueOrder = [\"not-inf\",'0-10','10-20','20-30', '30-40', '40-50', '50-60', '60-70',\n                '70-80','80-90','90-100','100-125','125-150','150-200',\n                '200-250','250-300','300-400','400-500', '500+']\n\ndf_multiChoice['Q9_What is your current yearly compensation (approximate $USD)?'].replace(salaryDict, inplace=True)","aba9a7e7":"\nprint(round(df_multiChoice['Q9_What is your current yearly compensation (approximate $USD)?'].value_counts()[:10] \/ \\\n     df_multiChoice['Q9_What is your current yearly compensation (approximate $USD)?'].value_counts().sum() * 100,2))\n\n#Seting size to figure that we will plot\nplt.figure(figsize=(15,6))\n\nsns.countplot(df_multiChoice[\"Q9_What is your current yearly compensation (approximate $USD)?\"], # ploting the nine question\n              order=RevenueOrder) \nplt.title(\"Question 9 - What is your current yearly compensation (approximate $USD)?\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Compensation Range\", fontsize=16) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=16) # Adding y label and seting the size\nplt.xticks(rotation=35)\n\n#rendering the plot\nplt.show()","39ec0327":"print(\"DESCRIPTIVE VALUES OF YEARLY COMPENSATION BY TITLE OF CURRENT ROLE: \")\n\nQ32_Q6 = [\"Q9_What is your current yearly compensation (approximate $USD)?\", \n          'Q6_The title most similar to your current role']\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\n\nround(pd.crosstab(df_multiChoice[Q32_Q6[1]], \n                  df_multiChoice[Q32_Q6[0]],\n                  rownames=[\"Title Roles\"], colnames=[\"Compensation in MUSD(K)\"], \n                  margins=True, margins_name=\"Totals\"),2).drop(\"Totals\", axis=0)\\\n.reindex(columns=RevenueOrder)\\\n.style.background_gradient(cmap = cm) #Mapping the colors\n","a6a66252":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           index=df_multiChoice['Q9_What is your current yearly compensation (approximate $USD)?'], \n                           normalize= \"index\").reindex(index=RevenueOrder, columns=EducOrder)\n\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",  # select the bar to plot the count of categoricals\n                 figsize=(15,7), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Compensation Range by Formal Education\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Compensation Range\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Prob of each Formal Education(in %)\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=0) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"Formal Education\", \n           loc='best', bbox_to_anchor=(1, 1.01),\n           ncol=1, fancybox=True, shadow=False)\n\nplt.show() # rendering\n\nprint(\"DESCRIPTIVE OF YEARLY COMPENSATION BY FORMAL EDUCATION  \")\n\nQ9_Q4 = ['Q9_What is your current yearly compensation (approximate $USD)?', \n          \"Q4_Highest formal education or plan to within the next 2 years?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\n\nround(pd.crosstab(df_multiChoice[Q9_Q4[0]], \n                  df_multiChoice[Q9_Q4[1]],\n                  rownames=[\"Yearly Compensation\"], colnames=[\"Formal Education\"],\n                  margins=True, margins_name=\"Total\", normalize='index'\n                 ),2).reindex(index=RevenueOrder, columns=EducOrder).style.background_gradient(cmap = cm)","f29831aa":"print(round(df_multiChoice['Q37_On which online platform have you spent the most amount of time? - Selected Choice'].value_counts()[:10] \/ \\\n     df_multiChoice['Q37_On which online platform have you spent the most amount of time? - Selected Choice'].value_counts().sum() * 100,2))\n\n#Seting size to figure that we will plot\nplt.figure(figsize=(12,6))\n\nsns.countplot(df_multiChoice[\"Q37_On which online platform have you spent the most amount of time? - Selected Choice\"], # ploting the nine question\n              ) \nplt.title(\"Question 37 - Which online platform users have spent the most time?\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Online Platform that users most spent time\", fontsize=18) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=18) # Adding y label and seting the size\nplt.xticks(rotation=35)\n\n#rendering the plot\nplt.show()","a350b48c":"crosstab_eda = pd.crosstab(columns=df_multiChoice[\"Q4_Highest formal education or plan to within the next 2 years?\"], \n                           index=df_multiChoice['Q37_On which online platform have you spent the most amount of time? - Selected Choice'], \n                           normalize= \"index\").reindex(columns=EducOrder)\n\n\n# Ploting the crosstab that we did above\ncrosstab_eda.plot(kind=\"bar\",  # select the bar to plot the count of categoricals\n                 figsize=(13,7), # adjusting the size of graphs\n                 stacked=True)   # code to stack \nplt.title(\"Online Platform by Formal Education\", fontsize=22) # adjusting title and fontsize\nplt.xlabel(\"Online Platform\", fontsize=19) # adjusting x label and fontsize\nplt.ylabel(\"Prob of each Formal Education(in %)\", fontsize=19) # adjusting y label and fontsize\nplt.xticks(rotation=35) # seting the rotation to zero\n# Some parameters to legend of our graphs\nplt.legend(title=\"Formal Education\", \n           loc='best', bbox_to_anchor=(1, 1.01),\n           ncol=1, fancybox=True, shadow=False)\n\nplt.show() # rendering\n\nprint(\"MOST USED MOOC'S BY FORMAL EDUCATION  \")\n\nQ9_Q4 = ['Q37_On which online platform have you spent the most amount of time? - Selected Choice', \n          \"Q4_Highest formal education or plan to within the next 2 years?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[Q9_Q4[0]], \n                  df_multiChoice[Q9_Q4[1]],\n                  rownames=[\"Online Platforms\"], colnames=[\"Formal Education\"],\n                  margins=True, margins_name=\"Total\"\n                 ),2).drop(\"Total\", axis=0).reindex(columns=EducOrder).style.background_gradient(cmap = cm)","b20e72d7":"print(\"MOST USED MOOC'S BY YEARLY COMPENSATION: \")\n\nQ37_Q9 = ['Q37_On which online platform have you spent the most amount of time? - Selected Choice', \n          \"Q9_What is your current yearly compensation (approximate $USD)?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[Q37_Q9[0]], \n                  df_multiChoice[Q37_Q9[1]],\n                  rownames=[\"Online Platforms\"], colnames=[\"Yearly Compensation\"],\n                  margins=True, margins_name=\"Total\"),2).drop(\"Total\", axis=0).reindex(columns=RevenueOrder).style.background_gradient(cmap = cm)","a6f9b784":"print(\"MOST USED MOOC'S BY TITLE ROLE \")\nQ37_Q6 = ['Q37_On which online platform have you spent the most amount of time? - Selected Choice', \n          'Q6_The title most similar to your current role']\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[Q37_Q6[1]], \n                  df_multiChoice[Q37_Q6[0]],\n                  colnames=[\"Online Platforms\"], rownames=[\"Title role\"],\n                  margins=True, margins_name=\"Total\"),2).drop(\"Total\", axis=0).style.background_gradient(cmap = cm)","b834bc68":"print(\"MOST USED MOOC'S BY TIME ANALYSING: \")\n\nQ37_Q23 = ['Q37_On which online platform have you spent the most amount of time? - Selected Choice', \n          \"Q23_Approximately what percent of your time at work or school is spent actively coding?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[Q37_Q23[1]], \n                  df_multiChoice[Q37_Q23[0]],\n                  colnames=[\"Online Platforms\"], rownames=[\"% of Time Coding \"], normalize=\"columns\", \n                 ),2).reindex(order_time).style.background_gradient(cmap = cm)","5540e4ef":"codTimeDict = {'I have never written code but I want to learn': \"NeverCoded - Want Learn\",\n               'I have never written code and I do not want to learn': \"NeverCoded - Don't want Learn\"}\n\ndf_multiChoice[\"Q24_How long have you been writing code to analyze data?\"].replace(codTimeDict, inplace=True)\n\norder_coding = ['< 1 year', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20-30 years',\n                '30-40 years','40+ years', 'NeverCoded - Want Learn', \"NeverCoded - Don't want Learn\"]","9931dbe5":"print(round(df_multiChoice['Q24_How long have you been writing code to analyze data?'].value_counts()[:10] \/ \\\n     df_multiChoice['Q24_How long have you been writing code to analyze data?'].value_counts().sum() * 100,2).reindex(order_coding))\n\n#Seting size to figure that we will plot\nplt.figure(figsize=(15,6))\n\nsns.countplot(df_multiChoice[\"Q24_How long have you been writing code to analyze data?\"], # ploting the nine question\n              order=order_coding) \nplt.title(\"Question 24 - How long have you been writing code to analyze data\", fontsize=20) # Adding Title and seting the size\nplt.xlabel(\"Years Range\", fontsize=16) # Adding x label and seting the size\nplt.ylabel(\"Count\", fontsize=16) # Adding y label and seting the size\nplt.xticks(rotation=35)\n\n#rendering the plot\nplt.show()","202cfa06":"order_coding = ['< 1 year', '1-2 years', '3-5 years', '5-10 years',\n                '10-20 years', '20-30 years', '30-40 years','40+ years',]\n\nprint(\"MOST USED MOOC'S BY TIME CODING: \")\n\nQ37_Q24 = ['Q37_On which online platform have you spent the most amount of time? - Selected Choice', \n           \"Q24_How long have you been writing code to analyze data?\"]\n                                      \ncm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_multiChoice[Q37_Q24[0]], \n                  df_multiChoice[Q37_Q24[1]],\n                  colnames=[\"Time coding\"], rownames=[\"Online Platforms\"], normalize=\"index\", \n                 ),2).reindex(columns=order_coding).style.background_gradient(cmap = cm)","3266957c":"### Let's cross it by another columns","f40b1527":"Humm, it's very interseting. \n\nFor instance, we can see that in France we have 70% of Kaggle users with Master's and 3.3% of Bachelor's. Why we have the this clearly different pattern in French user's?\n","7a268fb7":"Very cool!!! \n\nWe can see very interesting patterns in each country. \n\nUSA, UK & Ireland, Australia, Spain have a highest percentuals with 0 and 90-100 percent used in analysis.\n\nWe can't see some different patterns, almost all countrys have a similar pattern.\n- Almost 50% of the analysts are under 30% of time consuming in analysis\n","fd54e3fc":"### Q4 Exploring the percent of time consuming involved exploring model insights by the Formal Education badge\n- Maybe we can afirm that Master's and Doctor's use most part of time analysing? ","e19b442c":"Python, R nd SQL are the top 3 languages of Kaggle users","98a04db1":"## Question 37 - Which online platform have users spent the most amount of time\n- Understanding the relation of online Platforms","8c60bb3b":"or the first analysis and with the ambition to deep understand the data, I selected the Questions below:\n\nQ1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q12, Q17, Q18, Q20, Q22, Q23, Q24, Q25, Q26, Q32, Q37, Q39, Q40, Q41, Q43, Q46","67cb19af":"It's a interesting pattern that we can see in the age ranges. \n\nWe can see that the youngest (18-24) data scientists don't \"lose\" time searching for insights, altough when the age increase the analytics is more useful.\n\nMaybe it happens, because the yougest guy is learning how to work and handle with data and the oldest guys, have more probabilties to have experience and management roles. ","6055d382":"Maybe some people can find some value on this information. \n\nTo take advantage of title roles, I will cross it by the age question. ","cdab95ac":"## Question 17 by Formal Education \n-Crosstab","c15b1d79":"# Question 1 - What is gender of Kagglers? ","0d905366":"Very interesting. \n\nUSA and India are isolated the top of kaggle users. My country have the 6th biggest Kaggle Community. It's very cool. \n\nNow that we have already got some cool informations, I had some insights about this first plots.\n\nAll countrys have the same distribuition of ages? And Gender? ","c49fd1ff":"Not informed, I understand that have the people that don't work yet...\n\nwe have almost the same number of not informed and people who won 0 to 10,000 dolars by year\n\nThis feature is a good column to we explore further, and I will cross it by Age, by title role, formal education, % of time consuming exploring models and others","bd8eb451":"## Question 23 crossed by Question 4.\n\nSeen if the Formal Education BAdge shows some difference in time coding. ","024ee331":"- Very cool. \n\nStudents are the most frequent \"class\" in Kaggle Users. \nSecond category is Data Scientsits. \nAlso, we have a high number of Sotfware Engineers.\n","b3bed3a5":"## Question 24 - How long have you been writing code to analyze data?","c72c5448":"People who have minimum bachelor's have the highest salary's.\n\nUser's that have a yearly compensation highest than 500k+ have a high ratio of Bachelor's and Master's, followed by Doctoral's","349c49b1":"Cool ! It's a interesting skewed distribuition. I'm a 29 old years guy and I am on the peak of this wave LOL.\n\n","3f0a1eaf":"# Question 4  - the highest level of formal education that you have attained or plan to attain within the next 2 years?\n\n","aaadee65":"We have 81.5% of mens and almost 17% of womens and 1.7% of people that do not give us this information.\n\nIt's not any new information.... We can see that almost all kernels and participants of Kaggle are mens. \n\nLet's to the next question. ","b4c9cc1b":"# Stay tuned that I will continue exploring this dataset.\n\n# If you liked this Kernel, please, give me your votesup and feedback. ","f165a77e":"## QUESTION 2 crossed by QUESTION 1 \n1. - Looking the distribuition of Ages and Genders","d0f77cc2":"## Online Courses most spent time by Title Role ","5e17e06b":"The range where we have more womens are in 22-24 years old. ","879e6e8f":"It is one of the most interesting information that I saw until now. \n\nWe can clearly see that the most people from India are very young, and India have a different pattern than all another countrys. ","15e9fab3":"# Let's cross this question by another interesting questions","0f8996de":"## Question 17 - What specific programming language do you use most often?","7f2ac5b6":"### Cleaning the data to group by the same question","49f57a83":"USA have the highest % of womens in Kaggle. ","d2124804":"- Hee we can see a very similar pattern in all category's","bc9c8a9e":"## Title current role by age","4312fcf7":"## Yearly Compensation by title role","7e24d2a3":"Nice, We have a very high number of Master's in Kaggle. It's very interesting to know. \nBAchelor's have almost 30% and Doctoral's 14%. \n\nUsing this categorical, I got some ideas to explore it better. \n\nLet's see this values by country. ","1f77b15d":"## Time consuming to explore insights in model by Country.","5ff1c76a":"Humm... Interesting.\n\nIf we sum the range of 25 to 49 and 50 to 74 we have almost 57% of total. \n\nI will take a further look on this feature, for instance, crossing it by country or Education level. ","238bc96c":"Also interesting. \n\nWe can see that have a difference in Patterns when we consider index as normalizer.\n\nBachelor's almost total have a lower time consuming to explore and find insights in the models. \n\nNo Formal High School and Doctoral's have the high % of time consuming to find insights. \n\n### Columns as normalizer\n \n When we consider the columns as normalizer, we can see that Master's degree have 50% in almost all time consuming, and it follow a pattern and is well distribuited; ","ce73c12f":"## Yearly Compensation by Formal Education","ce965f38":"## Formal Education Badges by top 15 Country's","6bf33a69":"## DATA TYPES BY TITLE OF CURRENT ROLE","e7539640":"## Question 32 - What is the type of data that you currently interact with most often at work or school?\n","184a19c5":"To best understanding the data, I will use and focus on some initial features like: \n    \n- Q1_What is your gender?\n- Q2_What is your age (years)?\n- Q3_In which country do you currently reside? \n- Q5_Which best describes your undergraduate major?\n- Q6_Select the title most similar to your current role\n- Q9_What is your current yearly compensation (approximate $USD)?\n- Q17_What specific programming language do you use most often? \n- Q23_Approximately what percent of your time at work or school is spent actively coding? \n- Q24_How long have you been writing code to analyze data? \n- Q26_Do you consider yourself to be a data scientist? \n- Q32_What is the type of data that you currently interact with most often at work or school? \n- Q37_On which online platform have you spent the most amount of time? \n- Q46_Approximately what percent of your data projects involve exploring model insights?  \n\nThe main objective is to get some information crossing this categorical questions and find some interesting values. ","4dc583eb":"## Genders by Country","03751747":"### Creating a function to show some informations about our columns","3a631729":"Very interesting! \nWe can see that if we sum the top 2 values we can conclude that 53% of Kaggle Users started coding to work with data less than 2 years ago.  ","8f698e5c":"## Question 23 - Approximately what percent of your time at work or school is spent actively coding?","aeed1453":"# Welcome to my analysis of the Kaggle ML & Data Science Survey Challenge\n\nIn this analysis I will try to make sense of the data using a Macro Visual of the survey, to find some interesting insights about us. \n\nI hope you enjoy this analysis and have some new ideas using my kernel as guide.","d7e7175f":"## Online Courses most spent time by Yearly Compensation","2ba87f92":"### Considering the MOOC's, which platform have the most analytic users? ","41c1598d":"# Question 3 - Where the Kagglers come from? ","d46d2c18":"## QUESTION_46 crossed by QUESTION_2\n\n- Now we will investgate the Time consuming exploring insights by Age of Data Scientists","8545f69a":"Wow, it's also very interesting to me;\n\nWe can apply the normalize by all, columns and index that is very meaningful too. Try it by yourself, you will love see it. \n\nWe can seee that 18-21 more than 70% composed by Students. ","e2b251ec":"## Compensation Yearly crossed by some columns","deb7c97e":"\n### English is not my native language, so sorry for any mistake.\n\n## OBJECTIVE:\nThe main objective of this kernel is create a base exploration, crossing interesting questions to find some interesting insights about users.\n","e7ccfce9":"## Crossing two interesting questions to see what we find\n- The country of participants by the Age","ecddf286":"### CRossing the Question 37 by Formal Education of users","89726bf4":"In Python we have the absolutelly highest number of users to all formal education categorys, but when we consider normalize by the index, we can see the pattern of many language users. \n\nFor example Julia and MATLAB to Doctoral's. \n\n","f14828cb":"# Question 2 - The Age of Kagglers","205615b1":"It's very coool to see the patterns between the roles and Educational Badges","32901172":"# Question 6 - The title most similar to your current role","f5f95885":"Wooow!!! It's very very very interesting to me. \n\nWe can clearly see that India have a very young community and "}}