{"cell_type":{"1a7e7a40":"code","7860582d":"code","f4f4fa42":"code","3b16b68a":"code","919df526":"markdown"},"source":{"1a7e7a40":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()","7860582d":"import rx\nfrom rx import of,operators as op","f4f4fa42":"add = lambda x, y: x + y\n\nDATA = rx.to_async(add)(10, 20)\n\nDATA.subscribe(\n    lambda x: print(\"result {0}\".format(x)),\n    on_error = lambda e: print(\"error occured: {0}\".format(e)),\n    on_completed = lambda: print(\"completed\")\n)","3b16b68a":"addString = lambda a, b: a + \" \"+ b\n\nDATA = rx.to_async(addString)(\"hello\", \"world\")\n\nDATA.subscribe(\n    lambda x: print(\"result {0}\".format(x)),\n    on_error = lambda e: print(\"error occured: {0}\".format(e)),\n    on_completed = lambda: print(\"completed\")\n)","919df526":"# to_async\n\nConverts the function \n\n### into an asynchronous function. \n\nEach invocation of the resulting \n\n### asynchronous function causes \n\nan invocation of the original synchronous function on the specified scheduler."}}