{"cell_type":{"5541ebc7":"code","01d6c3a1":"code","a2e5add3":"code","56d672e6":"code","645fc384":"code","f4748b2c":"code","fe845204":"markdown"},"source":{"5541ebc7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01d6c3a1":"!pip install fast_ml --upgrade","a2e5add3":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf.head()","56d672e6":"# Extract Title from Name \ndf['Title'] = df['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# Separate Numeric & Character from Cabin Variable\ndf['Cabin_cat'] = df['Cabin'].str[0]\ndf['Cabin_num'] = df['Cabin'].str.split('(\\d*)\\Z', expand=True)[1]\ndf['Cabin_num'] = pd.to_numeric(df['Cabin_num'], errors='coerce', downcast='float')\n\n# Separate Numeric & Character from Ticket Variable\ndf['Ticket'] = df['Ticket'].str.replace('.', '', regex=False)\ndf['Ticket_cat'] = df['Ticket'].str.split('(\\d*)\\Z', expand=True)[0]\ndf['Ticket_num'] = df['Ticket'].str.split('(\\d*)\\Z', expand=True)[1]\ndf['Ticket_num'] = pd.to_numeric(df['Ticket_num'], errors='coerce', downcast='float')\n\n# Create Family Size varibale from SibSp & Parch\ndf['FamilySize'] = df ['SibSp'] + df['Parch'] + 1","645fc384":"from fast_ml.tools import EDA","f4748b2c":"eda_report = EDA.generate_report(df, target='Survived', model_type='clf')\neda_report.report_title_ = 'EDA Report for Titanic Dataset (Classification)'\neda_report.report_user_ = 'Samarth Agrawal (using Fast ML)'\neda_report.show()","fe845204":"## We will create some features since we already know this from other Kernels\n\n* Would be good to see the patterns of them. \n\n* For new project, we would first do all the Cleaning and Extraction and then run the EDA report again"}}