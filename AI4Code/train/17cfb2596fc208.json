{"cell_type":{"df420927":"code","10bff5bb":"code","f6a4e977":"code","d26bbb44":"code","19cde876":"code","3a591dc9":"code","261874d3":"code","23e5fdcf":"code","e8ab5e53":"code","dd1ccd96":"code","c4159aaf":"code","daf40748":"code","34356d32":"code","1a3ce13e":"code","847d44bc":"code","299fda72":"code","3a0d51ae":"code","ba349ff2":"code","ab282e50":"code","89496406":"code","6395a43d":"code","a0d9ff91":"code","ebceda3d":"code","46bd4622":"code","e38aea9e":"code","ac678fce":"code","e148a6d6":"code","119f0158":"markdown","10ec5475":"markdown"},"source":{"df420927":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","10bff5bb":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","f6a4e977":"train.shape","d26bbb44":"test.shape","19cde876":"train.head()","3a591dc9":"train.isnull().sum()*100\/len(train)","261874d3":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nsns.distplot(train['Age'])\nplt.show()","23e5fdcf":"train['Age']= train['Age'].fillna(train.Age.median())","e8ab5e53":"train['Embarked']=train['Embarked'].fillna(train.Embarked.mode()[0])","dd1ccd96":"# Lets drop cabin since it has missing values >50%\ntrain.drop(columns=[\"PassengerId\",\"Cabin\",\"Name\",\"Ticket\"], inplace=True)","c4159aaf":"train.isnull().sum()*100\/len(train)","daf40748":"sns.countplot(train['Survived'])","34356d32":"train[train['Sex']=='male']['Survived'].value_counts().plot.pie()\nplt.show()","1a3ce13e":"train[train['Sex']=='female']['Survived'].value_counts().plot.pie()\nplt.show()","847d44bc":"train['Sex']= train.Sex.replace({\"female\":0,\"male\":1})","299fda72":"sns.pairplot(data=train, vars=[\"Pclass\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Sex\"], hue='Survived')\nplt.show()","3a0d51ae":"data=pd.get_dummies(train,drop_first=True)\ndata.head(10)","ba349ff2":"pd.get_dummies(train,drop_first=True)","ab282e50":"plt.figure(figsize=(14,12))\nsns.heatmap(data.corr(), annot=True)","89496406":"data.drop([\"Fare\",\"Embarked_Q\",\"SibSp\"],inplace=True,axis=1)\ndata.head()","6395a43d":"x=data.drop(columns=['Survived'])\ny=data['Survived']\nfrom sklearn.model_selection import train_test_split  \nx_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.20, random_state=0)","a0d9ff91":"from sklearn.preprocessing import MinMaxScaler\n\nScaler=MinMaxScaler()\nx_train=Scaler.fit_transform(x_train)\nx_test=Scaler.fit_transform(x_test)","ebceda3d":"x_train","46bd4622":"from sklearn.linear_model import LogisticRegression  \nclassifier= LogisticRegression(random_state=0)  \nclassifier.fit(x_train, y_train)  ","e38aea9e":"y_pred= classifier.predict(x_test)  ","ac678fce":"from sklearn.metrics import confusion_matrix  \ncm= confusion_matrix(y_test,y_pred) \ncm","e148a6d6":"from sklearn.metrics import confusion_matrix  \nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)*100\n","119f0158":"**More number of females Survived**","10ec5475":"**Less number of male Survived**"}}