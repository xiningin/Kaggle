{"cell_type":{"66dd2680":"code","2e190687":"code","c1706353":"code","ce773be1":"code","deeca462":"code","331e03e0":"code","0e7fab5a":"code","de4b509e":"code","970c0c92":"code","89d9a033":"code","e94d842e":"code","7869b934":"code","ad9ce365":"code","e5c72e83":"code","51ac0cff":"code","0d7c8fda":"code","84956ef1":"code","c8ab2698":"code","024068ba":"code","27818595":"code","0f48e912":"code","c3512df8":"code","f4772088":"code","caf79dbe":"code","4deb0a41":"code","2bbc52c6":"code","b7235f45":"code","7428fc7f":"code","eab47535":"code","60494030":"code","4089cec8":"code","409954c9":"code","9bf170e3":"code","d84fa7a2":"code","5f2906dd":"markdown","53723dd6":"markdown"},"source":{"66dd2680":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2e190687":"%%time\n\ndf = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n","c1706353":"sex_bin = {\"female\": 0,\n           \"male\": 1}\ndf['Sex'] = df['Sex'].map(sex_bin)\n","ce773be1":"import re \ndef get_title(name):\n    first = name.split(',')\n    second = first[1].split('.')\n    return second[0]\n","deeca462":"df.Name = df.Name.apply(get_title)","331e03e0":"def best_age(name):\n    return df.loc[(df.Name == name)].Age.mean()","0e7fab5a":"df.Age=df.Age.fillna(df.Name.apply(best_age))","de4b509e":"y_train = df.Survived\nX_train = df.drop(\"Survived\", axis=1)\n","970c0c92":"X_train = X_train.drop([\"Ticket\", \"Cabin\"], axis=1)","89d9a033":"X_train = X_train.drop([\"PassengerId\"], axis=1)","e94d842e":"X_train.head()","7869b934":"X_train.Embarked.fillna(\"S\", inplace=True)","ad9ce365":"features = ['Pclass', 'Sex', 'Age' ,'SibSp', 'Parch', 'Fare', 'Embarked']\nX = pd.get_dummies(X_train[features], drop_first=True)","e5c72e83":"X.head()","51ac0cff":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","0d7c8fda":"my_test = test.drop([\"PassengerId\",\"Cabin\", \"Ticket\"],axis=1)","84956ef1":"test.info()","c8ab2698":"my_test.Name = my_test.Name.apply(get_title)","024068ba":"my_test.Age=my_test.Age.fillna(my_test.Name.apply(best_age))","27818595":"my_test.Fare.fillna(test.Fare.mean(), inplace=True)","0f48e912":"sex_bin = {\"female\": 0,\n           \"male\": 1}\nmy_test['Sex'] = my_test['Sex'].map(sex_bin)","c3512df8":"my_test2 = my_test.drop(\"Name\", axis=1)","f4772088":"X_test = pd.get_dummies(my_test2, drop_first=True)","caf79dbe":"X_test.head()","4deb0a41":"X.isnull().sum()","2bbc52c6":"from sklearn.ensemble import RandomForestClassifier \n","b7235f45":"model = RandomForestClassifier()\n","7428fc7f":"from sklearn.model_selection import GridSearchCV, StratifiedKFold\nparams = {\"n_estimators\": np.arange(50,700,50),\n         \"max_depth\": np.arange(1,10)}\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=7)\n","eab47535":"grid = GridSearchCV(estimator = model,\n                   param_grid = params,\n                   cv=skf,\n                   n_jobs=-1,\n                   verbose=1)\ngrid.fit(X, y_train)","60494030":"grid.best_params_","4089cec8":"grid.best_estimator_","409954c9":"grid.best_score_","9bf170e3":"preds = grid.predict(X_test)","d84fa7a2":"output = pd.DataFrame({\"PassengerId\": test.PassengerId,\n                      \"Survived\": preds})\noutput.to_csv('My_random.csv', index=False)","5f2906dd":"We REPLACED NAME TO TITLE:\n* 17 UNIQUE TITLES\n* TITLES ARE HELPFUL FOR PREDICTING AGE \n* TITLE HELPS TO PREDICT OTHER MISSING VALUES\n* NOW I AM ANALYSING TITLES AND OTHER FEATURES\n","53723dd6":"WHAT IS DIFFERENCE BETWEEN MEAN & MEDIAN ?"}}