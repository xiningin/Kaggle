{"cell_type":{"8c8e807e":"code","c54cad01":"code","4315622b":"code","214e0e45":"code","2465098c":"code","3fa6a5a3":"code","51127423":"code","bdd0364e":"code","da47a4a9":"code","0d1cff79":"code","19765724":"code","76994904":"code","dd4ac34a":"code","910197ba":"code","cb64a47b":"code","68e4d4c8":"code","b3df8e24":"code","106b56df":"code","c817d7a6":"code","95b21c1b":"code","e6717f6f":"code","ecab98ce":"code","79efdf9d":"code","e9ed78b5":"code","5b2b861a":"code","5ada84ec":"code","b3142a79":"code","c3bdbb0d":"code","223642ce":"code","7466c07c":"code","f47f2c30":"code","ad666c3b":"code","96fd8ef7":"code","aed07e0d":"code","8c7cf83c":"code","dcad3f54":"code","a5e91f2d":"code","fccaa798":"code","3f2d08a4":"code","5e7acd9d":"code","c394fa04":"code","336bbb5d":"code","4fe18880":"code","c937bd71":"code","8f62b279":"code","552aa147":"code","147b6352":"code","ba71c1dc":"code","180350d7":"code","32f8d222":"code","40940cb5":"code","0f3ad9f1":"code","fb7ed968":"code","e0bd054b":"code","d869e5b2":"code","2057d613":"code","6c565414":"code","dc74f5a8":"code","c2e87984":"code","fcc0064b":"code","5c70343b":"code","ddd29061":"code","16300a5c":"code","ebf2b4e6":"markdown","5e9d21cf":"markdown","058988f2":"markdown","4174160d":"markdown","fc1dc8c0":"markdown","d770538f":"markdown"},"source":{"8c8e807e":"import tensorflow as tf\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","c54cad01":"bike = pd.read_csv('..\/input\/rental-bike-sharing\/day.csv', parse_dates=[\"dteday\"])\nbike","4315622b":"bike.info()","214e0e45":"bike.describe()","2465098c":"sns.heatmap(bike.isnull());","3fa6a5a3":"bike = bike.drop(labels=['instant'], axis = 1)","51127423":"bike.head()","bdd0364e":"correlations = bike.corr()\nf, ax = plt.subplots(figsize = (20,20))\nsns.heatmap(correlations, annot=True)\ncorrelations.round(2);","da47a4a9":"bike = bike.drop(labels=['casual', 'registered'], axis = 1)","0d1cff79":"plt.figure(figsize=[20,10])\nsns.countplot(x = 'mnth', hue= 'workingday', data=bike);","19765724":"total = len(bike)\nax1 = plt.figure(figsize=(17,7))\n\ng = sns.countplot(x='mnth', data=bike)\ng.set_title(\"Rent for Months\", fontsize=20)\ng.set_xlabel(\"Months\", fontsize=17)\ng.set_ylabel(\"Count\", fontsize=17)\nsizes = []\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}%'.format(height\/total*100),\n            ha=\"center\", fontsize=10) \ng.set_ylim(0, max(sizes) * 1.1)","76994904":"total = len(bike)\nax1 = plt.figure(figsize=(17,7))\n\ng = sns.countplot(x='workingday', data=bike)\ng.set_title(\"Rents on weekdays and non-working days\", fontsize=20)\ng.set_xlabel(\"\", fontsize=17)\ng.set_ylabel(\"Count\", fontsize=17)\nsizes = []\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}%'.format(height\/total*100),\n            ha=\"center\", fontsize=10) \ng.set_ylim(0, max(sizes) * 1.1)","dd4ac34a":"plt.figure(figsize=(16,12)) \nax = plt.subplot(3,1,1)                                                 \nax.set_title('Analysis', fontsize=18, loc='left') \nsns.lineplot(x='mnth', y='cnt', data=bike)   \nplt.subplot(3,1,2) \nsns.lineplot(x='mnth', y='workingday', data=bike)  \nplt.subplot(3,1,3)  \nsns.lineplot(x='mnth', y='holiday', data=bike)  \nax = ax","910197ba":"plt.figure(figsize=(12,7))\nsns.kdeplot(bike['temp'],shade = True, color = 'r');\nsns.kdeplot(bike['hum'], shade = True, color = 'b');","cb64a47b":"bike.dteday = pd.to_datetime(bike.dteday, format = '%m\/%d\/%Y')","68e4d4c8":"bike.head()","b3df8e24":"bike.index = pd.DatetimeIndex(bike.dteday)","106b56df":"bike","c817d7a6":"bike['cnt'].asfreq('W').plot(linewidth = 3)     \nplt.title('Bike usage per week')\nplt.xlabel('Week')\nplt.ylabel('Bike rental');","95b21c1b":"bike['cnt'].asfreq('M').plot(linewidth = 3)   \nplt.title('Bike usage per month')\nplt.xlabel('Week')\nplt.ylabel('Bike rental');","e6717f6f":"bike['cnt'].asfreq('Q').plot(linewidth = 3)     \nplt.title('Bike usage per quarter')\nplt.xlabel('Week')\nplt.ylabel('Bike rental');","ecab98ce":"X_numerical = bike[['temp', 'hum', 'windspeed', 'cnt']] ","79efdf9d":"X_numerical","e9ed78b5":"sns.pairplot(X_numerical)","5b2b861a":"sns.heatmap(X_numerical.corr(), annot = True);","5ada84ec":"X_cat = bike[['season', 'yr', 'mnth', 'holiday', 'weekday', 'workingday', 'weathersit']]  ","b3142a79":"X_cat.head()","c3bdbb0d":"from sklearn.preprocessing import OneHotEncoder  \nonehotencoder = OneHotEncoder()\nX_cat = onehotencoder.fit_transform(X_cat).toarray()","223642ce":"X_cat","7466c07c":"X_cat.shape","f47f2c30":"X_cat = pd.DataFrame(X_cat)","ad666c3b":"X_cat.head()","96fd8ef7":"X_numerical.head()","aed07e0d":"X_numerical = X_numerical.reset_index()  ","8c7cf83c":"X_numerical.head()","dcad3f54":"X_all = pd.concat([X_cat, X_numerical], axis = 1)","a5e91f2d":"X_all.head()","fccaa798":"X_all = X_all.drop(labels=['dteday'], axis = 1)  ","3f2d08a4":"X_all.head()","5e7acd9d":"X = X_all.iloc[:, :-1].values   # Let's leave out our last column as it is our goal.","c394fa04":"y = X_all.iloc[:, -1:].values   ","336bbb5d":"X.shape","4fe18880":"y.shape","c937bd71":"from sklearn.preprocessing import MinMaxScaler   \nscaler = MinMaxScaler()\ny = scaler.fit_transform(y)","8f62b279":"from sklearn.model_selection import train_test_split   #  treinamento\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","552aa147":"X_train.shape","147b6352":"X_test.shape","ba71c1dc":"model = tf.keras.models.Sequential()\nmodel.add(tf.keras.layers.Dense(units = 100, activation='relu', input_shape=(35,)))  \nmodel.add(tf.keras.layers.Dense(units=100, activation='relu'))\nmodel.add(tf.keras.layers.Dense(units=100, activation='relu'))\nmodel.add(tf.keras.layers.Dense(units=1, activation='linear'))  ","180350d7":"model.summary()","32f8d222":"model.compile(optimizer='Adam', loss='mean_squared_error') ","40940cb5":"epochs_hist = model.fit(X_train, y_train, epochs = 25, batch_size = 50, validation_split=0.2)","0f3ad9f1":"epochs_hist.history.keys() ","fb7ed968":"plt.plot(epochs_hist.history['loss'])\nplt.plot(epochs_hist.history['val_loss'])\nplt.title('Model loss progress during training')\nplt.xlabel('Epochs')\nplt.ylabel('Training and validation loss')\nplt.legend(['Training loss', 'Validation loss']);","e0bd054b":"y_predict = model.predict(X_test)","d869e5b2":"y_predict","2057d613":"plt.plot(y_test, y_predict, \"^\", color = 'r')\nplt.xlabel('Model predictions')     \nplt.ylabel('True values')","6c565414":"y_predict_orig = scaler.inverse_transform(y_predict)\ny_test_orig = scaler.inverse_transform(y_test)","dc74f5a8":"plt.plot(y_test_orig, y_predict_orig, \"^\", color = 'r')\nplt.xlabel('Model predictions', color = 'b')    \nplt.ylabel('True values')","c2e87984":"k = X_test.shape[1]\nk","fcc0064b":"n = len(X_test)\nn","5c70343b":"from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\nfrom math import sqrt","ddd29061":"mae = mean_absolute_error(y_test_orig, y_predict_orig)\nmse = mean_squared_error(y_test_orig, y_predict_orig)\nrmse = sqrt(mse)\nr2 = r2_score(y_test_orig, y_predict_orig)\nadj_r2 = 1 - (1 - r2) * (n - 1) \/ (n - k - 1)","16300a5c":"print(\"MAE: \", mae, \"\\nMSE: \", mse, \"\\nRMSE: \", rmse, \"\\nR2: \", r2, \"\\nADJ R2: \", adj_r2)","ebf2b4e6":"There is a certain pattern in the amount of bicycle rental, probably always for the same people who use them as a means of transport.","5e9d21cf":"# **Conclusion**\n\nR2 80% of output variations were captured by input parameters or attributes;\n\nADJ R2 adjusted lower than R2, some attributes ended up influencing for this result, we can delete some attributes that will be irrelevant for the algorithm and improve the results.\n\nWe can use attribute selection techniques and make a more intelligent selection for the algorithm.","058988f2":"Due to the validation error, we can verify that we would not need to carry out the training for 25 epochs, since in the 20th it stabilized, and afterwards it increased the error;\n\nWe can use the intersection between the two for training;","4174160d":"# Context\n\n\nBike sharing systems are new generation of traditional bike rentals where whole process from membership, rental and return back has become automatic. Through these systems, user is able to easily rent a bike from a particular position and return back at another position. Currently, there are about over 500 bike-sharing programs around the world which is composed of over 500 thousands bicycles. Today, there exists great interest in these systems due to their important role in traffic, environmental and health issues.\n\nApart from interesting real world applications of bike sharing systems, the characteristics of data being generated by these systems make them attractive for the research. Opposed to other transport services such as bus or subway, the duration of travel, departure and arrival position is explicitly recorded in these systems. This feature turns bike sharing system into a virtual sensor network that can be used for sensing mobility in the city. Hence, it is expected that most of important events in the city could be detected via monitoring these data.\n\nContent\nBoth hour.csv and day.csv have the following fields, except hr which is not available in day.csv\n\ninstant: record index\n\ndteday : date\n\nseason : season (1:winter, 2:spring, 3:summer, 4:fall)\n\nyr : year (0: 2011, 1:2012)\n\nmnth : month ( 1 to 12)\n\nhr : hour (0 to 23)\n\nholiday : weather day is holiday or not\n\nweekday : day of the week\n\nworkingday : if day is neither weekend nor holiday is 1, otherwise is 0.\n\nweathersit :\n\n1: Clear, Few clouds, Partly cloudy, Partly cloudy\n\n2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n\n3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + \nScattered clouds\n\n4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog\n\ntemp : Normalized temperature in Celsius. The values are derived via (t-tmin)\/\n(tmax-tmin), tmin=-8, t_max=+39 (only in hourly scale)\n\natemp: Normalized feeling temperature in Celsius. The values are derived via (t-tmin)\/(tmax-tmin), tmin=-16, t_max=+50 (only in hourly scale)\n\nhum: Normalized humidity. The values are divided to 100 (max)\n\nwindspeed: Normalized wind speed. The values are divided to 67 (max)\n\ncasual: count of casual users\n\nregistered: count of registered users\n\ncnt: count of total rental bikes including both casual and registered\n\nAcknowledgements\nHadi Fanaee-T\n\nLaboratory of Artificial Intelligence and Decision Support (LIAAD), University of Porto\nINESC Porto, Campus da FEUP\nRua Dr. Roberto Frias, 378\n4200 - 465 Porto, Portugal\n\nOriginal Source: http:\/\/capitalbikeshare.com\/system-data\nWeather Information: http:\/\/www.freemeteo.com\nHoliday Schedule: http:\/\/dchr.dc.gov\/page\/holiday-schedule\n\nInspiration\nKeep Helping and keep growing","fc1dc8c0":"The amount of bicycles rented on weekdays is much higher than on holidays and weekends, possibly they are used as a means of transport to work.","d770538f":"Time as you might imagine has a big influence on bicycle rentals;   \n\n"}}