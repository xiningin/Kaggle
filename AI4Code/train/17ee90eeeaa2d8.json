{"cell_type":{"d7293694":"code","aca5f5d3":"code","6ba1fbfd":"code","2cbdce2a":"code","51ec3a7d":"code","75f30cc5":"code","5463eddf":"code","73ebbaab":"code","c9010706":"code","6a5ad198":"code","b3479bd0":"code","8884b955":"code","4618fe0c":"code","16e2f3d8":"code","c2b882d4":"code","b67d1c55":"code","3ae201cd":"code","75c08966":"code","5a177ff6":"code","0fc6a599":"code","b3e69b79":"code","7a4ba227":"code","a9d7d484":"code","33645031":"code","4eae6927":"code","33f105d6":"code","8c9e64db":"code","7ed98b84":"code","d5835eb4":"code","3a1946b8":"markdown","d5209fed":"markdown","1d1e44cf":"markdown","31c569e5":"markdown","b301071c":"markdown","113d7a64":"markdown","9392c998":"markdown"},"source":{"d7293694":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aca5f5d3":"from matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()\n%matplotlib inline\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import classification_report\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk import word_tokenize, WordNetLemmatizer\nimport nltk\nimport re \nnltk.download('wordnet')\n  ","6ba1fbfd":"## Load in the data\ndata = pd.read_csv(\"..\/input\/stockmarket-sentiment-dataset\/stock_data.csv\")","2cbdce2a":"## Read the data\ndata.head()","51ec3a7d":"data.shape","75f30cc5":"data.info()","5463eddf":"data.describe()","73ebbaab":"## Sentiment Value count \ndata[\"Sentiment\"].value_counts()","c9010706":"## Plot the Sentiment value count \nsns.countplot(data[\"Sentiment\"])","6a5ad198":"## Lenght of the Text using KDEplot\nlenght = data[\"Text\"].str.len()\nsns.kdeplot(lenght)","b3479bd0":"## Checking for stopwords\nfrom nltk.corpus import stopwords\nstop_words=set(stopwords.words(\"english\"))\nprint(stop_words)","8884b955":"word_list = list()\nfor i in range(len(data)):\n    lip = data.Text[i].split()\n    for k in lip:\n        word_list.append(k)","4618fe0c":"from collections import Counter \nwordCounter = Counter(word_list)\ncountedWordDict = dict(wordCounter)\nsortedWordDict = sorted(countedWordDict.items(),key = lambda x : x[1],reverse=True)\nsortedWordDict[0:20]","16e2f3d8":"from wordcloud import WordCloud\nwordList2 = \" \".join(word_list)\nstop_word_Cloud = set(stopwords.words(\"english\"))\nwordcloud = WordCloud(stopwords=stop_word_Cloud,max_words=2000,background_color=\"white\",min_font_size=3).generate_from_frequencies(countedWordDict)\nplt.figure(figsize=[20,10])\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.show()","c2b882d4":"## Replacing the negative one with zero so our model can predict well\ndata[\"Sentiment\"] = data[\"Sentiment\"].replace(-1,0)","b67d1c55":"## Lets check our data again\ndata[\"Sentiment\"].value_counts()","3ae201cd":"data.shape","75c08966":"## NlP Processing\nps = PorterStemmer()\nlemma = WordNetLemmatizer()\nstopwordSet = set(stopwords.words(\"english\"))","5a177ff6":"## Clean the text \ntext_reviews = list()\nfor i in range(len(data)):\n    text = re.sub('[^a-zA-Z]',\" \",data['Text'][i])\n    text = text.lower()\n    text = word_tokenize(text,language=\"english\")\n    text = [lemma.lemmatize(word) for word in text if(word) not in stopwordSet]\n    text = \" \".join(text)\n    text_reviews.append(text)","0fc6a599":"## Create the (B.O.W) bag of word model\ncv = CountVectorizer(max_features = 1500)\nX = cv.fit_transform(text_reviews).toarray()\ny= data['Sentiment']\n\n## Split the dataset into Training and Test set\nX_train, X_test, y_train, y_test = train_test_split(X, y , test_size=0.2, random_state = 0)","b3e69b79":"## Logistic Regression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\nY_pred = logreg.predict(X_test)","7a4ba227":"print(classification_report(y_test, Y_pred))","a9d7d484":"print(confusion_matrix(y_test, Y_pred))","33645031":"## Naives baye multinomial\nclf = MultinomialNB()\nclf.fit(X_train, y_train)\nY_pred = clf.predict(X_test)","4eae6927":"print(classification_report(y_test, Y_pred))","33f105d6":"print(confusion_matrix(y_test, Y_pred))","8c9e64db":"## Random Forest\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\nY_pred = random_forest.predict(X_test)","7ed98b84":"print(classification_report(y_test, Y_pred))","d5835eb4":"print(confusion_matrix(y_test, Y_pred))","3a1946b8":"# NLP Processing","d5209fed":"# Data Preprocesing","1d1e44cf":"# Conclusion\n\nRandom forest and MultinomialNB produced the predictions with the highest accuracy, at 79%, while logistic regression scored 78%.\n\n","31c569e5":"# Import the packages","b301071c":"# Introduction\n\nStock market sentiment analysis is an evolving technique which can be effectively used to compliment fundamental, quantitative and technical analysis.","113d7a64":"# Modelling and Predicting","9392c998":"# Business Understanding \n\nMarket sentiment is a qualitative measure of the attitude and mood of investors to financial markets in general, and specific sectors or assets in particular. Positive and negative sentiment drive price action, and also create trading and investment opportunities for active traders and long-term investors\u00b6"}}