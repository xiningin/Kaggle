{"cell_type":{"21087563":"code","e2cda718":"code","ae09a183":"code","378d8d58":"code","d66e9075":"code","de1b8f28":"code","b7810c46":"code","ae03f4bb":"code","7b1cfd1b":"code","85046252":"code","96376a96":"code","686e3216":"code","291c943b":"code","05dfe4a0":"code","413df5a1":"code","ccc333d5":"code","802e420e":"code","44f51a0f":"code","4bbfab30":"code","691eb337":"code","63b8621f":"code","975ea305":"code","7d5fd6b5":"code","4d690bd0":"code","618e091e":"code","68d8e31e":"code","3cb33adb":"code","8afd6c0a":"code","c5607b09":"code","eff55c5d":"code","b244de74":"code","7ea7e51d":"code","9a2e3c25":"code","ab8637e8":"markdown","27232058":"markdown","a3efb786":"markdown","237d437a":"markdown","105c007d":"markdown","5cf02060":"markdown","d5376514":"markdown","ef5cc54b":"markdown","b3137380":"markdown","f5d5cccc":"markdown","6e54ddf1":"markdown"},"source":{"21087563":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","e2cda718":"google_data = pd.read_csv('..\/input\/googleplaystore.csv')","ae09a183":"google_data.head()         #Inspecting the first 5 rows","378d8d58":"google_data.shape","d66e9075":"google_data.describe()       # Summary Statistics","de1b8f28":"google_data.boxplot()","b7810c46":"google_data.hist()","ae03f4bb":"google_data.info()","7b1cfd1b":"google_data.isnull()","85046252":"# Count the number of missing values in each column\ngoogle_data.isnull().sum()","96376a96":"google_data[google_data.Rating > 5]","686e3216":"google_data.drop([10472],inplace=True)","291c943b":"google_data[10470:10475]","05dfe4a0":"google_data.boxplot()","413df5a1":"google_data.hist()","ccc333d5":"threshold = len(google_data)* 0.1\nthreshold","802e420e":"google_data.dropna(thresh=threshold, axis=1, inplace=True)","44f51a0f":"print(google_data.isnull().sum())","4bbfab30":"#Define a function impute_median\ndef impute_median(series):\n    return series.fillna(series.median())","691eb337":"google_data.Rating = google_data['Rating'].transform(impute_median) ","63b8621f":"#count the number of null values in each column\ngoogle_data.isnull().sum()","975ea305":"# modes of categorical values\nprint(google_data['Type'].mode())\nprint(google_data['Current Ver'].mode())\nprint(google_data['Android Ver'].mode())","7d5fd6b5":"# Fill the missing categorical values with mode\ngoogle_data['Type'].fillna(str(google_data['Type'].mode().values[0]), inplace=True)\ngoogle_data['Current Ver'].fillna(str(google_data['Current Ver'].mode().values[0]), inplace=True)\ngoogle_data['Android Ver'].fillna(str(google_data['Android Ver'].mode().values[0]), inplace=True)","4d690bd0":"#count the number of null values in each column\ngoogle_data.isnull().sum()","618e091e":"### Let's convert Price, Reviews and Ratings into Numerical Values\ngoogle_data['Price'] = google_data['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ngoogle_data['Price'] = google_data['Price'].apply(lambda x: float(x))\ngoogle_data['Reviews'] = pd.to_numeric(google_data['Reviews'], errors='coerce')","68d8e31e":"google_data['Installs'] = google_data['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else str(x))\ngoogle_data['Installs'] = google_data['Installs'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else str(x))\ngoogle_data['Installs'] = google_data['Installs'].apply(lambda x: float(x))","3cb33adb":"google_data.head(10) ","8afd6c0a":"google_data.describe()","c5607b09":"grp = google_data.groupby('Category')\nx = grp['Rating'].agg(np.mean)\ny = grp['Price'].agg(np.sum)\nz = grp['Reviews'].agg(np.mean)\nprint(x)\nprint(y)\nprint(z)","eff55c5d":"plt.figure(figsize=(12,5))\nplt.plot(x, \"ro\", color='g')\nplt.xticks(rotation=90)\nplt.show()","b244de74":"plt.figure(figsize=(16,5))\nplt.plot(x,'ro', color='r')\nplt.xticks(rotation=90)\nplt.title('Category wise Rating')\nplt.xlabel('Categories-->')\nplt.ylabel('Rating-->')\nplt.show()","7ea7e51d":"plt.figure(figsize=(16,5))\nplt.plot(y,'r--', color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Pricing')\nplt.xlabel('Categories-->')\nplt.ylabel('Prices-->')\nplt.show()","9a2e3c25":"plt.figure(figsize=(16,5))\nplt.plot(z,'bs', color='g')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories-->')\nplt.ylabel('Reviews-->')\nplt.show()","ab8637e8":"Please ensure that your folder name <span style=\"color:red\">**does not have a space or a forward slash(\/)**<\/span>","27232058":"### Data Imputation and Manipulation","a3efb786":"#### <span style=\"color:blue\">Fill the  null values <\/span>with appropriate values using <span style=\"color:green\">aggregate functions<\/span> such as <span style=\"color:red\">mean, median or mode.<\/span>","237d437a":"### Data Cleaning","105c007d":"### Check how many ratings are more than 5 - Outliers","5cf02060":"# DATA ANALYSIS OF GOOGLE APP'S RATINGS","d5376514":"#### Count the number of missing values in the Dataframe","ef5cc54b":"### Import the Required Modules","b3137380":"### Data Visualization","f5d5cccc":"### Remove columns that are 90% empty","6e54ddf1":"### Read Data"}}