{"cell_type":{"8984d223":"code","ba2a2a76":"code","5e3a782e":"code","51850522":"code","df428293":"code","932021b9":"code","3e33d809":"code","7384f4ea":"code","289be9fa":"code","733369c5":"code","ae8f4dd5":"code","50b7af5b":"code","111ba4ba":"code","58c470f0":"code","59a4836d":"code","44b809ca":"code","9d581763":"code","98b88273":"code","e14bbd36":"code","3c258135":"code","20132317":"code","4a6cb78e":"code","f06e6946":"code","990cdde5":"code","e2f5c8ae":"code","129e471f":"code","080884fb":"code","db2c303e":"code","8ce72d6d":"code","1b93e7db":"code","3db61569":"code","5b102d05":"code","f20dfbe6":"code","fd7ba0b2":"code","c62843f8":"code","7c26aa8a":"code","08181599":"code","80e079ae":"code","7d9c6ab9":"code","9b5f443c":"code","2a56edf9":"code","560063c1":"code","18b9f282":"code","df4f85db":"code","8e6e060a":"code","072f0f71":"code","af95a26e":"code","4331a0c1":"code","9d1ae9b5":"markdown"},"source":{"8984d223":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba2a2a76":"import warnings\nwarnings.filterwarnings(action = 'ignore')","5e3a782e":"data = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/audi.csv')","51850522":"data.head()","df428293":"data.info()","932021b9":"data.describe()","3e33d809":"data.shape","7384f4ea":"data.isnull().sum()","289be9fa":"data['model'].nunique()","733369c5":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ae8f4dd5":"import cufflinks as cf\ncf.go_offline()","50b7af5b":"plt.figure(figsize=(20,12))\nplt.subplot(2,1,1)\nplt.margins(0,0)\nplt.hist(data['price'],bins=30,color='green')\nplt.title('Price distribution')\nplt.subplot(2,1,2)\nplt.hist(data['mileage'],bins=30,color='purple')\nplt.title('Mileage distribution')\nplt.margins(0,0)","111ba4ba":"plt.figure(figsize=(10,8))\nsns.scatterplot(data['price'],data['model'],hue=data['transmission'],palette='pastel')","58c470f0":"plt.figure(figsize=(10,8))\nsns.scatterplot(data['mpg'],data['model'],hue=data['transmission'],palette='pastel')","59a4836d":"plt.figure(figsize=(20,12))\nsns.countplot(data['model'])","44b809ca":"data.loc[data['mileage'].idxmax()]","9d581763":"sns.jointplot(data['year'],data['price'],kind='hist',height=10,ratio=8,cmap='plasma')","98b88273":"plt.figure(figsize=(10,8))\nsns.heatmap(data.corr(),annot=True)","e14bbd36":"sns.countplot(data['transmission'])","3c258135":"plt.figure(figsize=(20,12))\nsns.histplot(data['price'],kde=True,)","20132317":"#encoding transmission and fueltype column to numeric\n\ndata['transmission'] = data['transmission'].map({'Manual':1,'Automatic':2,'Semi-Auto':3})\n","4a6cb78e":"data['fuelType'] = data['fuelType'].map({'Petrol':1,'Diesel':2})","f06e6946":"data['fuelType'].fillna(data['fuelType'].mode()[0],inplace=True)","990cdde5":"data.isnull().sum()","e2f5c8ae":"data.head()","129e471f":"from sklearn.preprocessing import LabelEncoder","080884fb":"le=LabelEncoder()","db2c303e":"data['model'] = le.fit_transform(data['model'])","8ce72d6d":"data.head()","1b93e7db":"X= data.drop('price',axis=1)\ny=data['price']","3db61569":"from sklearn.model_selection import train_test_split","5b102d05":"X_train,X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","f20dfbe6":"from sklearn.linear_model import LinearRegression","fd7ba0b2":"lr = LinearRegression()","c62843f8":"lr.fit(X_train,y_train)","7c26aa8a":"coeff_df = pd.DataFrame(lr.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","08181599":"from sklearn import metrics","80e079ae":"predictions = lr.predict(X_test)","7d9c6ab9":"plt.scatter(y_test,predictions,color='purple')","9b5f443c":"sns.distplot((y_test-predictions),bins=50,color='green')","2a56edf9":"print('MAE : ',metrics.mean_absolute_error(y_test,predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","560063c1":"X = data.drop('model',axis=1)\ny=data['price']","18b9f282":"X_train,X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","df4f85db":"lr.fit(X_train,y_train)","8e6e060a":"pred = lr.predict(X_test)","072f0f71":"plt.scatter(y_test,pred)","af95a26e":"print('MAE : ',metrics.mean_absolute_error(y_test,pred))\nprint('MSE:', metrics.mean_squared_error(y_test, pred))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, pred)))","4331a0c1":"sns.distplot((y_test-pred),bins=50,color='green')","9d1ae9b5":"# eliminate model column and lets apply linear model again"}}