{"cell_type":{"58a18606":"code","4adb13b9":"code","4a16de07":"code","ddd0241c":"code","14e4c90d":"code","847859c0":"code","2fe6bde6":"code","ea3d49b8":"code","92ac18b5":"code","96ae2f16":"code","513e6291":"code","384f0c53":"code","7b898525":"code","c428ab61":"code","55f35734":"code","adbf10e0":"code","00ab0bec":"code","b4a2259c":"code","93166f1c":"code","7b6dcb59":"code","2c6b5c0f":"code","6d08b714":"code","ba2acc6f":"code","c9404c3c":"code","9bb54617":"code","c69b3fd0":"code","5fe4606c":"code","6fc5c44f":"code","51aede48":"code","0723edca":"code","f6183d9b":"code","04b9d3aa":"code","32a25d5e":"code","e5c852e2":"code","bc64bfdb":"code","112503b5":"code","de73339d":"code","3eb1de59":"code","276083db":"code","63aa0f6d":"code","c683a818":"code","33a91274":"code","57f54b2f":"code","bffc66da":"code","e8bf4fab":"code","cf4d8221":"code","cd3318a7":"code","3d1ee55f":"code","7a90a0d3":"code","357dfc11":"code","9896375b":"code","fa8ee5bc":"code","7ee43719":"code","0aac0148":"code","015d58e8":"code","a913a39a":"code","33ab1c39":"code","f7b1b78c":"code","a48efd47":"code","1a1923a3":"code","1715c269":"code","25914916":"code","85bc4ced":"code","7048618b":"code","726b00ce":"code","edad3b7c":"code","41c5ceaa":"code","470f4c85":"code","ad92be32":"code","b5711e9d":"code","e5fb2e22":"code","77531b3e":"code","8ad76083":"code","f5af4908":"code","a53c6d93":"code","91aea4e5":"markdown","4f5a1206":"markdown","a2c8a17d":"markdown","c61697f5":"markdown","78b6a6aa":"markdown","9c04970d":"markdown","52cd49ca":"markdown","88c985fd":"markdown","ec2b18e6":"markdown","48e8255a":"markdown","2730b45d":"markdown","430d52dc":"markdown","96722322":"markdown","78cd0b05":"markdown","37338136":"markdown","ebf3f943":"markdown","d8196e40":"markdown","816b05db":"markdown","ab236e39":"markdown","b3edd864":"markdown","4f443180":"markdown","43ee1b34":"markdown","23fa2fd0":"markdown","d9d4fc15":"markdown","5a4f96f9":"markdown","be10bd32":"markdown","100d6e64":"markdown","1f0fa55c":"markdown","1a2a39ff":"markdown","0a4396c9":"markdown","e8b3f19d":"markdown","87b575c2":"markdown","d259ab40":"markdown","d10acf15":"markdown","c626a8a7":"markdown","f99eb9af":"markdown","7aedbe82":"markdown","677260ef":"markdown","d67f92dd":"markdown","854b725e":"markdown","ac7ee7b2":"markdown","c7ae375e":"markdown","466394fd":"markdown","6288f417":"markdown","e5941e9d":"markdown","040650b3":"markdown","d4023dee":"markdown","11e04d58":"markdown","5a488459":"markdown","2ce6f782":"markdown","29766c4c":"markdown","e5e0106e":"markdown","9b45a982":"markdown","1c490d0a":"markdown","c5108147":"markdown"},"source":{"58a18606":"pip install openpyxl","4adb13b9":"import pandas as pd\nimport numpy as np\nfrom random import randint\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","4a16de07":"df_zip = pd.read_excel(\"..\/input\/ny-appinstall\/ny_appinstall.xlsx\", sheet_name = \"NY_AppInstall_zipcode\")\ndf_time = pd.read_excel(\"..\/input\/ny-appinstall\/ny_appinstall.xlsx\", sheet_name = \"NY_AppInstall_time\")","ddd0241c":"df_zip.head()","14e4c90d":"df_zip.tail()","847859c0":"df_zip.exposed_distinct_cvr = df_zip.exposed_distinct_cvr.replace('#', '', regex=True)","2fe6bde6":"df_zip.info()","ea3d49b8":"df_zip.exposed_distinct_cvr = df_zip.exposed_distinct_cvr.astype(float)","92ac18b5":"df_zip['zipcode'].nunique()","96ae2f16":"df_zip.shape[0]","513e6291":"round(df_zip.describe().T,2)","384f0c53":"df_zip.isnull().values.any()","7b898525":"df_zip.isnull().sum()","c428ab61":"plt.ylim(0,10)\nsns.histplot(df_zip.exposed_distinct_cvr, kde = True, palette = \"set3\").set_title(\"Distribution of exposed_distinct_cvr\");","55f35734":"df_zip.exposed_distinct_cvr.fillna(df_zip.exposed_distinct_cvr.median(), inplace = True)","adbf10e0":"zip_state = pd.read_excel(\"..\/input\/ny-appinstall\/uszips.xlsx\")\nzip_state = pd.DataFrame(zip_state, columns = [\"zip\",\"state_name\",\"city\",\"population\"])\nzip_state.rename(columns = {\"zip\":\"zipcode\"}, inplace = True)\nzip_state.head()","00ab0bec":"df_zip = pd.merge(df_zip,zip_state,how = \"left\",on = \"zipcode\")","b4a2259c":"df_zip","93166f1c":"df_zip.report_date.nunique()","7b6dcb59":"df_zip.report_date.unique()[0]","2c6b5c0f":"df_zip.drop(columns = \"report_date\", inplace = True)","6d08b714":"df_zip[\"is_exposed\"].value_counts().plot.barh().set_title(\"Class Frequencies of Variable is_exposed\");","ba2acc6f":"df_zip.groupby(\"is_exposed\").mean().iloc[:,1:].T","c9404c3c":"sns.catplot(x = \"is_exposed\", y = \"control_total_cvr\", data = df_zip);","9bb54617":"states_exposed_false = pd.DataFrame(df_zip[df_zip.is_exposed == False][\"state_name\"].value_counts()).reset_index().rename(columns = {\"state_name\":\"count_of_exposed_false\", \"index\":\"state_name\"})\nstates_exposed_full = pd.DataFrame(df_zip[\"state_name\"].value_counts()).reset_index().rename(columns = {\"state_name\":\"count_of_exposed_full\", \"index\":\"state_name\"})\n\ns = pd.merge(states_exposed_full, states_exposed_false, how = \"left\", on = \"state_name\")\ns[\"false_rate%\"] = round(s[\"count_of_exposed_false\"] * 100 \/ s[\"count_of_exposed_full\"],2)\ns.sort_values(\"false_rate%\",ascending = False)","c69b3fd0":"cities_exposed_false = pd.DataFrame(df_zip[df_zip.is_exposed == False][\"city\"].value_counts()).reset_index().rename(columns = {\"city\":\"count_of_exposed_false\", \"index\":\"city\"})\ncities_exposed_full = pd.DataFrame(df_zip[\"city\"].value_counts()).reset_index().rename(columns = {\"city\":\"count_of_exposed_full\", \"index\":\"city\"})\n\nc = pd.merge(cities_exposed_full, cities_exposed_false, how = \"left\", on = \"city\").dropna()\nc[\"false_rate%\"] = round(c[\"count_of_exposed_false\"] * 100 \/ c[\"count_of_exposed_full\"],2)\nc = c.drop(c[c.count_of_exposed_full <= 5].index)\nc = c.sort_values(\"false_rate%\",ascending = False)\nc","5fe4606c":"df_zip = df_zip[df_zip[\"is_exposed\"] != False]\ndf_zip.drop([\"is_exposed\"], axis = 1, inplace = True)","6fc5c44f":"df_zip[(df_zip.exposed_distinct_cvr > 1) | (df_zip.exposed_distinct_cvr < 0) |\n       (df_zip.control_distinct_cvr > 1) | (df_zip.control_distinct_cvr < 0) |\n       (df_zip.control_total_cvr < 0) | (df_zip.control_total_cvr < 0)]","51aede48":"df_zip.loc[626,\"exposed_distinct_cvr\"] = df_zip.loc[626,\"exposed_distinct_conversion_count\"] \/ df_zip.loc[626,\"exposed_distinct_population\"] # Correction","0723edca":"df_zip[df_zip.exposed_distinct_cvr == 0].shape","f6183d9b":"df_zip.shape[0]","04b9d3aa":"print(\"Conversion Rate is 0 on %\",df_zip[df_zip.exposed_distinct_cvr == 0].shape[0] \/ df_zip.shape[0]*100, \"of rows\")","32a25d5e":"from IPython.display import Image\nImage(url = \"https:\/\/i.hizliresim.com\/ph0oaob.png\",width=1000, height=100)","e5c852e2":"print(\"According to data with a sample of\", df_zip[df_zip.exposed_distinct_cvr > 0].shape[0],\"rows, cvr average is\",df_zip[df_zip.exposed_distinct_cvr > 0].exposed_distinct_cvr.mean())","bc64bfdb":"df_zip = df_zip[(df_zip['exposed_distinct_cvr'] != 0) | (df_zip['exposed_distinct_population'] > 30)].reset_index(drop = True)","112503b5":"df_zip.shape","de73339d":"round(df_zip.describe(percentiles = (0.25,0.4,0.5,0.6, 0.7, 0.75,0.8,0.9,0.95,0.98)).iloc[:,1:].T,2)","3eb1de59":"#standard_deviation_limit = 3\n#columns = [\"exposed_total_population\",\"exposed_distinct_population\",\"exposed_distinct_cvr\",\n#           \"control_total_population\",\"control_distinct_population\",\"control_total_cvr\",\n#           \"control_distinct_cvr\",\"total_lift\",\"distinct_lift\",\"exposed_distinct_conversion_count\",\n#           \"control_distinct_conversion_count\",\"total_impression\"]\n\n#for i in range(len(columns)):\n#    df_zip[columns[i]] = df_zip[columns[i]][df_zip[columns[i]].between(df_zip[columns[i]].quantile(0.01), df_zip[columns[i]].quantile(0.99))]\n    \n#df_zip.dropna(inplace = True)","276083db":"sns.countplot(x = df_zip.state_name, alpha=0.7, palette = \"Set2\").set_title(\"Count of States\");","63aa0f6d":"cities_count = pd.DataFrame(df_zip.city.value_counts())\nsns.barplot(x = cities_count.index[:6], y = cities_count.city[:6], alpha=0.7, palette = \"cubehelix\").set_title(\"Count of Cities\");","c683a818":"g = pd.DataFrame(df_zip.groupby(\"city\").mean()[\"exposed_distinct_cvr\"].sort_values(ascending = False)[:5])","33a91274":"impact_of_states = df_zip.groupby(\"state_name\").mean().iloc[:,1:].T\nz = df_zip.groupby(\"state_name\").mean().iloc[:,1:]\nimpact_of_states","57f54b2f":"x = 0\nselected_cols = []\ncolors = ['mediumvioletred']\nfor i in range(12): \n    selected_cols.append(i) \n    colors.append('#%06X' % randint(0, 0xFFFFFF))\n\nfig, axes = plt.subplots(4,3, figsize=(24,24))\nfig.suptitle(\"KPI's Barplots By State\", size=24,)\n\nfor i in range(4):\n    for j in range(3):\n        sns.barplot(x = z.index.values, y = z.iloc[:, x] , ax=axes[i,j], color=colors[3*i+j])\n        x += 1","bffc66da":"df_zip.city.value_counts()[:3]","e8bf4fab":"popular_cities = [\"New York\",\"Brooklyn\",\"Bronx\"]\ndf_zip_pop_city = df_zip[df_zip.city.isin(popular_cities)]","cf4d8221":"df_zip_pop_city = df_zip_pop_city.iloc[:,1:].drop(columns = \"population\")","cd3318a7":"df_zip_pop_city.groupby(\"city\").mean()","3d1ee55f":"pals = ['hls', 'husl', 'Set2', 'Paired', 'Pastel1']\n\nfig, axes = plt.subplots(4,3, figsize=(24,24))\nfig.suptitle(\"KPI's Boxplots by Cities\", size=24)\nfor i in range(4):\n    for j in range(3):\n        sns.barplot(x = \"state_name\", y=df_zip_pop_city.iloc[:,selected_cols[3*i+j]], hue = \"city\", ax=axes[i,j], palette=pals[(3*i+j)%5], data = df_zip_pop_city);","7a90a0d3":"round(df_zip.describe().T,2)","357dfc11":"df_zip_cont = df_zip.drop([\"zipcode\",\"city\",\"state_name\"],axis = 1)","9896375b":"selected_cols = []\ncolors = ['mediumvioletred']\nfor i in range(12): \n    selected_cols.append(i) \n    colors.append('#%06X' % randint(0, 0xFFFFFF))\n\nfig, axes = plt.subplots(4,3, figsize=(24,24))\nfig.suptitle(\"Histograms of Various Features\", size=24,)\n\nfor i in range(4):\n    for j in range(3):\n        sns.histplot(df_zip_cont.iloc[:,selected_cols[3*i+j]], ax=axes[i,j], color=colors[3*i+j], kde=True, bins=8)","fa8ee5bc":"mtr = df_zip.iloc[:,1:].corr()\nmask = np.zeros_like(mtr)\nmask[np.triu_indices_from(mask)] = True\nfig, ax = plt.subplots(figsize=(16,12))\nplt.suptitle(\"Correlation Matrix of Columns in Heatmap\", size=24)\nsns.heatmap(mtr, mask= mask, annot=True, annot_kws={\"size\": 10});","7ee43719":"a = df_zip.groupby([\"state_name\",\"city\"]).total_impression.mean().sort_values(ascending = False)\na = pd.DataFrame(a).reset_index()\nb = df_zip.groupby([\"state_name\",\"city\"]).exposed_distinct_cvr.mean().sort_values(ascending = False)\nb = pd.DataFrame(b).reset_index()\nc = df_zip.groupby([\"state_name\",\"city\"]).control_distinct_cvr.mean().sort_values(ascending = False)\nc = pd.DataFrame(c).reset_index()\nd = df_zip.groupby([\"state_name\",\"city\"]).exposed_distinct_population.mean().sort_values(ascending = False)\nd = pd.DataFrame(d).reset_index()\ne = df_zip.groupby([\"state_name\",\"city\"]).distinct_lift.mean().sort_values(ascending = False)\ne = pd.DataFrame(e).reset_index()\n\n\nfor i in [b,c,d,e]:\n    i.drop(\"state_name\",axis = 1, inplace = True)","0aac0148":"from functools import reduce\n\ndata_frames = [a, b, c, d, e]\ndf_merged = reduce(lambda  left,right: pd.merge(left,right,on=['city'],\n                                            how='outer'), data_frames)\n\ndf_merged.sort_values(\"exposed_distinct_cvr\",ascending = False).head()","015d58e8":"df_merged.mean()","a913a39a":"df_merged[(df_merged.exposed_distinct_cvr > df_merged.exposed_distinct_cvr.mean()) &\n          (df_merged.exposed_distinct_population > df_merged.exposed_distinct_population.mean())].reset_index(drop = \"first\")","33ab1c39":"df_merged[(df_merged.exposed_distinct_cvr > df_merged.exposed_distinct_cvr.mean()) &\n          (df_merged.exposed_distinct_population < df_merged.exposed_distinct_population.mean())].reset_index(drop = \"first\")","f7b1b78c":"df_merged[(df_merged.exposed_distinct_cvr < df_merged.exposed_distinct_cvr.mean()) &\n          (df_merged.control_distinct_cvr > df_merged.control_distinct_cvr.mean())].reset_index(drop = \"first\").iloc[4:,:]","a48efd47":"df_merged[(df_merged.exposed_distinct_cvr < df_merged.exposed_distinct_cvr.mean()) &\n          (df_merged.control_distinct_cvr < df_merged.control_distinct_cvr.mean())].reset_index(drop = \"first\")","1a1923a3":"df_time","1715c269":"df_time.info()","25914916":"if (df_time.report_date.nunique() == 1) == True:\n    df_time.drop(\"report_date\", axis = 1, inplace = True)","85bc4ced":"for i in df_time.iloc[:,:2].columns:\n    print(df_time[i].unique())","7048618b":"df_time['weekend_indi'] = \"Weekday\"         \ndf_time.loc[df_time['day_of_week'].isin([\"Saturday\", \"Sunday\"]), 'weekend_indi'] = \"Weekend\"\ndf_time = df_time[['day_of_week', 'time_of_day', 'weekend_indi', 'total_impression','exposed_total_population', 'control_total_population','exposed_distinct_population', 'control_distinct_population','exposed_total_cvr', 'control_total_cvr', 'exposed_distinct_cvr','control_distinct_cvr', 'total_lift', 'distinct_lift','exposed_total_conversion_count', 'control_total_conversion_count','exposed_distinct_conversion_count','control_distinct_conversion_count']]","726b00ce":"df_time.head(2)","edad3b7c":"df_time.groupby(\"weekend_indi\").mean()","41c5ceaa":"pals = ['gist_earth_r', 'winter', 'RdYlGn', 'rainbow_r', 'coolwarm_r']\n\nfig, axes = plt.subplots(4,3, figsize=(24,24))\nfig.suptitle(\"Boxplots of Various Features with respect to Weekend Indicator\", size=24)\nfor i in range(4):\n    for j in range(3):\n        sns.boxplot(x=df_time['weekend_indi'], y=df_time.iloc[:,3:].iloc[:,selected_cols[3*i+j]], ax=axes[i,j], palette=pals[(3*i+j)%5])","470f4c85":"fig, ax = plt.subplots(figsize=(11,6))\nsns.barplot(x = df_time.day_of_week, y = df_time.exposed_distinct_cvr);","ad92be32":"import scipy.stats as st\n\nt = df_time.groupby(by=\"day_of_week\").exposed_distinct_cvr.mean()\nt = pd.DataFrame(t)\n\np_values = {}\ndf = pd.DataFrame()\n\nfor i in t.index:\n    p_values[i] = 1 - st.norm.cdf((t[\"exposed_distinct_cvr\"][i] - t.mean()) \/ t.std())\n\ndf = df.from_dict(p_values,orient = \"index\")\ndf = df.reset_index()\ndf = df.rename(columns = {\"index\":\"G\u00fcnler\",0:\"P_Values\"})\ndf[\"Valid\"] = 0\ndf.P_Values = round(df.P_Values,6)\ndf.loc[(df['P_Values'] < 0.11) | (df['P_Values'] > 0.89 ), 'Valid'] = 1\ndf","b5711e9d":"fig, ax = plt.subplots(figsize=(11,6))\nsns.barplot(x = df_time.time_of_day, y = df_time.exposed_distinct_cvr,palette = \"Oranges_r\");","e5fb2e22":"sns.catplot(x = \"time_of_day\", y = \"exposed_distinct_cvr\", hue = \"day_of_week\", kind = \"point\", data = df_time,heigh=15,aspect = 2);","77531b3e":"df_time.groupby([\"day_of_week\",\"time_of_day\"]).exposed_distinct_population.describe()[[\"count\",\"mean\"]].sort_values(by = \"mean\", ascending = True)","8ad76083":"sns.catplot(x = \"time_of_day\", y = \"total_impression\", hue = \"weekend_indi\", kind = \"point\", data = df_time,heigh=15,aspect = 2);","f5af4908":"corr = df_time.corr() # We already examined SalePrice correlations\nplt.figure(figsize=(12, 10))\n\nsns.heatmap(corr[(corr >= 0.5) | (corr <= -0.4)], \n            cmap='viridis', vmax=1.0, vmin=-1.0, linewidths=0.1,\n            annot=True, annot_kws={\"size\": 8}, square=True);","a53c6d93":"df_time.corr().unstack().sort_values(ascending= False).drop_duplicates().abs().sort_values(ascending = False)[1:10]","91aea4e5":"<font color='red'> **Potential Group Despite Reduction = Bronx, Howard Beach, Kew Gardens, Ridgewood, Yonkers, Newark, Woodhaven, Little Neck, Saint Albans, Union City**<font>","4f5a1206":"<font color='chocolate'>Even from the visualization, it appears that New York differs significantly across all KPIs.<font>","a2c8a17d":"<font color='chocolate'>I will use **an external dataset to add the states of the zip codes** as a column. This data will provide us with state, city and population information. <font>","c61697f5":"<font color='blue'>**Definitions of Metrics**<font>\n\n\n**report_date:** The date the data was reported.\n\n**zipcode:** The zip code of the city where the users are located.\n\n**exposed_total_population** = Number of total people who are exposed to ads.This column might have duplicate IDs\n\n**exposed_distinct_population** = Number of unique people who are exposed to ads\n\n**exposed_total_cvr** = Conversion rate of total exposed people. This column might have duplicate IDs\n\n**exposed_distinct_cvr** = Conversion rate of unique exposed people\n\n**control_total_population** = Number of total people who are not exposed to ads.This column might have duplicate IDs\n\n**control_distinct_population** = Number of unique people who are not exposed to ads.\n\n**control_total_cvr** = Conversion rate of total people who are not exposed to the ads. This column might have duplicate IDs\n\n**control_distinct_cvr** = Conversion rate of unique people who are not exposed to the ads. \n\n**total_lift** = (exposed_total_cvr )-(control_total_cvr )\/ (control_total_cvr )\n\n**distinct_lift** = (exposed_distinct_cvr )-(control_distinct_cvr ) \/ (control_distinct_cvr )\n\n**exposed_total_conversion_count** = Number of total conversion count who are exposed to ads.This column might have duplicate IDs\n\n**exposed_distinct_conversion_count** = Number of unique conversion count who are exposed to ads\n**control_total_conversion_count** = Number of total conversion count who are not exposed to ads.This column might have duplicate IDs\n\n**control_distinct_conversion_count** = Number of unique conversion count who are not exposed to ads\n\n**total_impression** = Number of impression delivered\n\n**is_exposed** = True:   While the car is driving trough, we detect some people\nFalse: While the car is driving trough, we did not detect any person around","78b6a6aa":"<font color='chocolate'>Of course I will also examine the effect of different days, but it is useful to add the weekday dimension to the data.<font>","9c04970d":"<font color='blue'>*Created with* \u2764 *by Mustafa Batuhan Ermi\u015f.*<font>","52cd49ca":"<font color='red'>**As can be seen, KPIs such as lift, conversion, conversion rate for New Jersey are all significantly lower than New York's. We can see that this was also true for the control group. Therefore, the New Jersey audience may not be eligible for this campaign.** <font>","88c985fd":"<font color='chocolate'> As can be seen from the last 2 code outputs, **almost all rows with is_exposed = false are 0**. In this situation I might consider deleting it later.<font>","ec2b18e6":"### Discontinous Variables Summary","48e8255a":"<font color='chocolate'>The category of the app is an important factor for the average install rate. But in this case, I do not have this information. I will continue with extensive research's result.(%3.8) Because that is more reliable than the 44-row sample in our data. We expect 1 conversion for approximately every 25 people.(3.8%) **Therefore, data with both a 0 conversion rate and a population less than 25 are not suitable for a significant analysis.** At the same time, since a sample of less than 30 people is not statistically generalizable, I choose 30. <font>","2730b45d":"<font color='chocolate'>According to the data, we could not detect a person at the rate of **12.42% in New York** while our vehicles were on the field. This rate **in New Jersey** is **14.53%** with a slight difference.<font>","430d52dc":"### Continuous Variable Summaries","96722322":"### Statistical Labeling for Campaign Optimization","78cd0b05":"<font color='chocolate'>It is also useful to see how many **different zip codes** exist in the dataset.<\/font>","37338136":"<font color='chocolate'>There is a **foreign character(#)** in a cell in the **exposed_distinct_cvr** column. I will replace this value with the correct one.<font>","ebf3f943":"<font color='red'> **Although we see a similar course in general, the number of morning views is good on weekdays, unlike the weekend. Midday is the time period when users view the most.**<font>","d8196e40":"<font color='chocolate'>***In this notebook, the explanations will be shown in orange, the key information from the data will be shown in bold red, and the questions will be shown in red.***<font>","816b05db":"### Data Cleaning","ab236e39":"<font color='chocolate'>My main purpose in case is to find out which region, hour and day we perform better and to focus on these areas in impression optimization. But conversion rate is 0 on 92% of the rows. The conversion rate of 0 means the conversion count is 0. There are two scenarios to consider here. **First, the population that actually saw the ad might be large and none of them converted.** This is not meaningless data and we cannot delete this data from the dataset. Because it gives us strong information that that audience is not the right target audience. **Second, the population seeing the ad is too small for us to get conversions** and I will delete this data beacuse it has an insufficient sample size to can't interpret.<font>","b3edd864":"<font color='red'> **High Potential & Low Budget = Astoria, Brooklyn, Sunnyside**<font>","4f443180":"<font color='chocolate'>Because the **data is skewed**, **the median is a better representative** between other measures of central tendency.<font>","43ee1b34":"# Comprehensive Exploratory Data Analysis","23fa2fd0":"<font color='chocolate'>It seems that the population values are highly correlated with both each other and the conversion counts. A correlation of 0.7 is an expected value since distinct_lift is a function of distinct_cvr. In addition, it is obvious that the **population** of the cities has **no effect**.<font>","d9d4fc15":"<font color='chocolate'>There is one missing value in the **\"exposed_distinct_cvr\"** column. To fix this, I have to consider the distribution of the column.<font>","5a4f96f9":"<font color='red'> **We could not detect a person at the rate of 81.82% in State Island, which is high enough to significantly reduce overall campaign performance.**<font>","be10bd32":"<font color='chocolate'>The is_exposed metric is false for most of the dataset. Now let's look at the **effect of is_exposed** being False or True on other variables.<font>","100d6e64":"<font color='chocolate'>I will now look at whether states have a significant impact on KPIs.<font>","1f0fa55c":"### Outliers Cleaning","1a2a39ff":"<font color='chocolate'>Also **the conversion rate can be a maximum of 1 and minimum of 0**. For this reason, I will check if there is a data larger than this value. This kind of error can happen.<font>","0a4396c9":"<font color='red'>**For Total Impression and Populations, New York is much more dominant. The control groups cvr is of interest here. Because in the control groups, although a large population, the conversion rate in New York was very low compared to other cities. But when we look at the exposed_distinct_cvr and lift data after the campaign, we see that we have made significant progress in New York. It is clear that we are making progress in Brooklyn, but there is a stepback for the Bronx.**<font>","e8b3f19d":"<font color='chocolate'> Almost each row belongs to a unique zip code. <font>","87b575c2":"## Exploratory Data Analysis","d259ab40":"<font color='red'>**The overwhelming predominance of weekdays in terms of mean, quartiles and outliers in all variables is clearly seen. To interpret in more detail, according to the data, we reach more population on average on weekdays. And looking at the higher conversion rate averages, it's obvious that this is on the right track. In addition, when we look at the lift values, it is seen that we perform better against the control group on weekdays compared to weekend days.**<font>","d10acf15":"<font color='red'> **Low Performance Group**<font>","c626a8a7":"<font color='chocolate'> However, it should not be forgotten tha users may have downloaded the app some time after seeing the ad and the attribution may vary as much as the time interval the model has for assignment.<font>","f99eb9af":"<font color='red'>**Friday, wednesday and thursday are the highest performing days and monday and saturday are the days to avoid. However, as can be seen from the above mini-analysis, the positive effect of Friday and the negative effect of Monday are statistically significant among these days.**<font>","7aedbe82":"-------------------------------------------------------------------","677260ef":"## Examine Time-Dimensional Data","d67f92dd":"<font color='chocolate'>Our data, which is broken in time dimension, looks extremely clean. <font>","854b725e":"<font color='chocolate'>We can see that most of the users are from New York state.<font>","ac7ee7b2":"<font color='chocolate'>There is only value for date **2021-07-02**. I don't need date column because it does not contain any information.<font>","c7ae375e":"<font color='chocolate'>The type of **\"exposed_distinct_cvr\"** is incorrect, although the types of other variables are correct. While **cvr** is a **float** value, it appears as an **object** in the data.<\/font>","466394fd":"<font color='chocolate'>This has similar results as the first correlation plot.<font>","6288f417":"<font color='chocolate'>It can be seen that most of the variables are distributed right skewed. <font>","e5941e9d":"#### Create New Categorical Variables - Matching Zipcodes with States","040650b3":"<font color='chocolate'><font color='chocolate'>So how do we know what size of population is meaningful to get a conversion? **The following statistical research and the average conversion rate in our data will guide me.**<font>","d4023dee":"<font color='red'>**Friday Overnight, Wednesday Midday, Thursday Evening have better conversion rates than others.**<font>","11e04d58":"### Examination of Missing Values","5a488459":"<font color='chocolate'>Among the cities, the superiority of New York is obvious.<font>","2ce6f782":"<font color='red'> **Among the slices of the day, Overnight is the appropriate range for our app campaign.** <font>","29766c4c":"<font color='red'> **But all of the time intervals consist of 1 row of data. In this case, the population number will tell us about the significance of this insight. The high performance of the friday overnight is based on a sample of 1312 people only. This is not very close to being reliable. Wednesday midday and thursday evening have sufficient sample size that we can rely on their performance. Also, data based on 1 day is not statistically significant for an insight.** <font>","e5e0106e":"<font color='red'> **High Potential Group = Long Island City, Woodside, New York , Elmhurst**<font>","9b45a982":"<font color='chocolate'>I wrote the above code for a general outlier deletion approach since it is written in parentheses in case questions. The basic logic here is to label and delete data that is +.-3 standard deviations away from the mean as outliers. **However, in this case even if a value is statistically outlier, this value is possible in the real world and it will not be the right approach to delete it, and an insight obtained without that value will be misleading.** If I was building a model that made predictions, I might consider deleting this value for generalizability concerns. For these reasons, I do not clean the outlier and I am putting the above code in the comments.<font>","1c490d0a":"<font color='chocolate'>We have 181 rows of data left that we can analyze significantly.<font>","c5108147":"<font color='chocolate'>It is useful to check the **data types** of columns in the dataset for future manipulations and compatibility with visualization.<font>"}}