{"cell_type":{"6478c354":"code","6ca1ebf4":"code","22f9edff":"code","771cc1e3":"code","0d803755":"code","722bf8f2":"code","6baf3dac":"code","c41db1ea":"code","fb415cfe":"code","a5958bff":"code","a55b08aa":"code","fc496c82":"code","f4556d4c":"code","28389115":"code","64195a7e":"code","18958363":"code","bab2aedc":"code","068c83c6":"code","0524ad77":"code","1b7a637f":"code","4352b0a7":"code","abd0ae2a":"code","a9a44615":"code","bf13ac64":"code","a3569375":"code","7affd6f1":"code","6834d1e3":"code","77525b3e":"code","b69d78ea":"code","36a609d9":"code","0164ebf2":"code","c567c680":"code","cc784a25":"code","de3f7b18":"code","1f8737f2":"code","d7b23b6b":"code","493beb44":"code","2da4782d":"code","9807ffc3":"code","36888903":"code","34494f3a":"code","8386c897":"code","142a74e3":"code","c2c99f49":"code","a00b06d5":"code","66969125":"code","2803518b":"code","013eeadb":"code","2ec5d7ea":"markdown","cea43bde":"markdown","e81560e3":"markdown","00d1beaf":"markdown","e76d1f04":"markdown"},"source":{"6478c354":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6ca1ebf4":"#import function tools\nimport pandas as pd \nimport numpy as np\nfrom pandas_profiling import ProfileReport as pp\nimport matplotlib.pyplot as plt  \nfrom sklearn.metrics import mean_squared_error as mse #to idetify the effict of LSTM\nimport warnings\nwarnings.filterwarnings('ignore')","22f9edff":"sales = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nitem_cat = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/\/item_categories.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/\/items.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/\/shops.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/\/test.csv')\nsubmission = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/\/sample_submission.csv')","771cc1e3":"#show the date type of df\nsales.dtypes","0d803755":"#show the head of dataframe\nsales.head(5)","722bf8f2":"#drop the wrong data\nfrom datetime import datetime\nsales=sales[(sales['item_cnt_day']>0) & (sales['item_price']>0)]\nsales['date']=pd.to_datetime(sales['date'])","6baf3dac":"#explore the data\nsales.describe()","c41db1ea":"sales.shape","fb415cfe":"item_cat.info()","a5958bff":"item_cat.head()","a55b08aa":"item_cat.shape","fc496c82":"test.info()","f4556d4c":"test.head()","28389115":"test.shape","64195a7e":"submission.head()","18958363":"sales_group=sales.groupby(['date_block_num','shop_id','item_id'])['item_cnt_day'].sum()","bab2aedc":"sales_group.head(20)","068c83c6":"sales_month_group = sales.groupby('date_block_num')['item_cnt_day'].sum()","0524ad77":"sales_month_group.head()","1b7a637f":"# plot the month_sales_cnt\nplt.figure(figsize=(16,8))\nplt.plot(sales_month_group)\nplt.title('month_item_cnt')\nplt.xlabel('month')\nplt.ylabel('item_cnt_sum')\nplt.show()","4352b0a7":"#sales data pivot_show\nsales_stack=sales.pivot_table(\n    index=['shop_id','item_id'],\n    values=['item_cnt_day'],\n    columns=['date_block_num'],\n    fill_value=0,\n    aggfunc='sum').reset_index()","abd0ae2a":"sales_stack","a9a44615":"sales_stack.shape","bf13ac64":"# merge to select the shop and item in test data for predict\nsales_month_full = pd.merge(test,sales_stack,on = ['shop_id', 'item_id'],how = 'left')\nsales_month_full.head()","a3569375":"sales_month_full.fillna(0,inplace=True)","7affd6f1":"sales_month_full.head()","6834d1e3":"sales_month_full=sales_month_full.drop(['ID', 'shop_id', 'item_id'], axis=1)","77525b3e":"sales_month_full","b69d78ea":"sales_month_full.shape","36a609d9":"shop_item_train, sales_cnt_train = sales_month_full.values[:,:-2], sales_month_full.values[:, -2:-1].ravel()\nshop_item_valid, sales_cnt_valid = sales_month_full.values[:,1:-1], sales_month_full.values[:, -1:].ravel()\nshop_item_test = sales_month_full.values[:, 2:]","0164ebf2":"shop_item_train","c567c680":"sales_cnt_train","cc784a25":"shop_item_valid","de3f7b18":"sales_cnt_valid","1f8737f2":"shop_item_train.shape","d7b23b6b":"shop_item_test","493beb44":"#Model function tools\nimport math\nimport tensorflow as tf\nfrom keras.models import Sequential\nfrom keras.layers import LSTM,Dense,Dropout\nfrom sklearn.metrics import mean_squared_error","2da4782d":"# set the model structure\nlstm_model = tf.keras.Sequential([\n    tf.keras.layers.Reshape(input_shape=(32,), target_shape=(32, 1,)),\n    tf.keras.layers.LSTM(units=32, input_shape=(32, 1)),\n    tf.keras.layers.Dropout(0.4),\n    tf.keras.layers.Dense(1)\n])","9807ffc3":"# get the mse_value to identify the effect of model\nlstm_model.compile(loss = 'mse',optimizer = 'adam', metrics = ['mean_squared_error'])","36888903":"lstm_model.summary()","34494f3a":"#get the process of train model\nmodel_his = lstm_model.fit(shop_item_train, sales_cnt_train, batch_size = 128,validation_split=0.1,epochs = 5)","8386c897":"# check the model train effect\nplt.plot(np.arange(len(model_his.history['mean_squared_error'])), model_his.history['mean_squared_error'])\nplt.plot(np.arange(len(model_his.history['val_mean_squared_error'])), model_his.history['val_mean_squared_error'])\nplt.legend(['mse', 'val_mse'])","142a74e3":"# modify the model by valid data pre mse\n\nsales_cnt_valid_pre = lstm_model.predict(shop_item_valid)\nprint('LSTM RMSE =', mean_squared_error(sales_cnt_valid, sales_cnt_valid_pre, squared=False))","c2c99f49":"# predict the test_label data\nsubmission['shop_item_lstm_pre'] = lstm_model.predict(shop_item_test)","a00b06d5":"submission","66969125":"submission = submission[['ID','shop_item_lstm_pre']]\nsubmission.columns=['ID','item_cnt_month']","2803518b":"submission","013eeadb":"submission.to_csv(f'submission_result.csv',index=False)","2ec5d7ea":"# Ready to prepare the train_data and test_data\n# Let's play the LSTM model and predict!\n","cea43bde":"#  Predict the last test shop item_cnt","e81560e3":"# predict_future_sales","00d1beaf":"*** preprocession of the date **\n","e76d1f04":"from the data above data,the NaN means these is not item sales at this month.so we should handle it"}}